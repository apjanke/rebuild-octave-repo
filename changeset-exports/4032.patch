# HG changeset patch
# User jwe
# Date 1028959480 0
#      Sat Aug 10 06:04:40 2002 +0000
# Node ID 20d706a6740ffe244bb125fd7c2ea799e25db7cd
# Parent  2168f4a0e88d761c6253815573dc1a8d0a3c6fcc
[project @ 2002-08-10 06:02:12 by jwe]

diff --git a/test/octave.test/arith/arith.exp b/test/octave.test/arith/arith.exp
--- a/test/octave.test/arith/arith.exp
+++ b/test/octave.test/arith/arith.exp
@@ -15,31 +15,31 @@ do_test beta-1.m
 set test beta-2
 set prog_output "error:.*"
 do_test beta-2.m
 
 set test beta-3
 set prog_output "error:.*"
 do_test beta-3.m
 
-set test betai-1
+set test betainc-1
 set prog_output "ans = 1"
-do_test betai-1.m
+do_test betainc-1.m
 
-set test betai-2
+set test betainc-2
 set prog_output "error:.*"
-do_test betai-2.m
+do_test betainc-2.m
 
-set test betai-3
+set test betainc-3
 set prog_output "error:.*"
-do_test betai-3.m
+do_test betainc-3.m
 
-set test betai-4
+set test betainc-4
 set prog_output "error:.*"
-do_test betai-4.m
+do_test betainc-4.m
 
 set test ceil-1
 set prog_output "ans = 1"
 do_test ceil-1.m
 
 set test ceil-2
 set prog_output "ans = 1"
 do_test ceil-2.m
@@ -123,19 +123,19 @@ do_test gamma-1.m
 set test gamma-2
 set prog_output "error:.*"
 do_test gamma-2.m
 
 set test gamma-3
 set prog_output "error:.*"
 do_test gamma-3.m
 
-set test gammai-1
+set test gammainc-1
 set prog_output "ans = 1"
-do_test gammai-1.m
+do_test gammainc-1.m
 
 set test gcd-1
 set prog_output "ans = 1"
 do_test gcd-1.m
 
 set test gcd-2
 set prog_output "usage:.*"
 do_test gcd-2.m
diff --git a/test/octave.test/arith/betai-1.m b/test/octave.test/arith/betai-1.m
deleted file mode 100644
--- a/test/octave.test/arith/betai-1.m
+++ /dev/null
@@ -1,8 +0,0 @@
-a=[1, 1.5, 2, 3];
-b=[4, 3, 2, 1];
-v1=betai(a,b,1);
-v2=[1,1,1,1];
-x = [.2, .4, .6, .8];
-v3=betai(a, b, x);
-v4 = 1-betai(b, a, 1.-x);
-all(abs(v1-v2)<sqrt(eps)) && all(abs(v3-v4)<sqrt(eps))
diff --git a/test/octave.test/arith/betai-2.m b/test/octave.test/arith/betai-2.m
deleted file mode 100644
--- a/test/octave.test/arith/betai-2.m
+++ /dev/null
@@ -1,1 +0,0 @@
-betai()
diff --git a/test/octave.test/arith/betai-3.m b/test/octave.test/arith/betai-3.m
deleted file mode 100644
--- a/test/octave.test/arith/betai-3.m
+++ /dev/null
@@ -1,1 +0,0 @@
-betai(1)
diff --git a/test/octave.test/arith/betai-4.m b/test/octave.test/arith/betai-4.m
deleted file mode 100644
--- a/test/octave.test/arith/betai-4.m
+++ /dev/null
@@ -1,1 +0,0 @@
-betai(1,2)
diff --git a/test/octave.test/arith/betainc-1.m b/test/octave.test/arith/betainc-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/betainc-1.m
@@ -0,0 +1,8 @@
+a=[1, 1.5, 2, 3];
+b=[4, 3, 2, 1];
+v1=betainc(a,b,1);
+v2=[1,1,1,1];
+x = [.2, .4, .6, .8];
+v3=betainc(a, b, x);
+v4 = 1-betainc(b, a, 1.-x);
+all(abs(v1-v2)<sqrt(eps)) && all(abs(v3-v4)<sqrt(eps))
diff --git a/test/octave.test/arith/betainc-2.m b/test/octave.test/arith/betainc-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/betainc-2.m
@@ -0,0 +1,1 @@
+betainc()
diff --git a/test/octave.test/arith/betainc-3.m b/test/octave.test/arith/betainc-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/betainc-3.m
@@ -0,0 +1,1 @@
+betainc(1)
diff --git a/test/octave.test/arith/betainc-4.m b/test/octave.test/arith/betainc-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/betainc-4.m
@@ -0,0 +1,1 @@
+betainc(1,2)
diff --git a/test/octave.test/arith/gammai-1.m b/test/octave.test/arith/gammai-1.m
deleted file mode 100644
--- a/test/octave.test/arith/gammai-1.m
+++ /dev/null
@@ -1,6 +0,0 @@
-a = [.5 .5 .5 .5 .5];
-x = [0 1 2 3 4];
-v1 = sqrt(pi)*erf(x)./gamma(a);
-v2 = gammai(a,x.*x);
-v3 = gammainc(x.*x,a);
-all (abs(v1 - v2) < sqrt(eps)) && all (abs(v2 - v3) < sqrt(eps))
diff --git a/test/octave.test/arith/gammainc-1.m b/test/octave.test/arith/gammainc-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/gammainc-1.m
@@ -0,0 +1,5 @@
+a = [.5 .5 .5 .5 .5];
+x = [0 1 2 3 4];
+v1 = sqrt(pi)*erf(x)./gamma(a);
+v3 = gammainc(x.*x,a);
+all (abs(v1 - v2) < sqrt(eps))
diff --git a/test/octave.test/number/number.exp b/test/octave.test/number/number.exp
--- a/test/octave.test/number/number.exp
+++ b/test/octave.test/number/number.exp
@@ -1,207 +1,207 @@
-set test is_matrix-1
+set test ismatrix-1
 set prog_output "ans = 1"
-do_test is_matrix-1.m
+do_test ismatrix-1.m
 
-set test is_matrix-2
+set test ismatrix-2
 set prog_output "ans = 1"
-do_test is_matrix-2.m
+do_test ismatrix-2.m
 
-set test is_matrix-3
+set test ismatrix-3
 set prog_output "ans = 1"
-do_test is_matrix-3.m
+do_test ismatrix-3.m
 
-set test is_matrix-4
+set test ismatrix-4
 set prog_output "ans = 1"
-do_test is_matrix-4.m
+do_test ismatrix-4.m
 
-set test is_matrix-5
+set test ismatrix-5
 set prog_output "ans = 1"
-do_test is_matrix-5.m
+do_test ismatrix-5.m
 
-set test is_matrix-6
+set test ismatrix-6
 set prog_output "ans = 1"
-do_test is_matrix-6.m
+do_test ismatrix-6.m
 
-set test is_matrix-7
+set test ismatrix-7
 set prog_output "ans = 1"
-do_test is_matrix-7.m
+do_test ismatrix-7.m
 
-set test is_matrix-8
+set test ismatrix-8
 set prog_output "ans = 0"
-do_test is_matrix-8.m
+do_test ismatrix-8.m
 
-set test is_matrix-9
-set prog_output "\n... is_matrix:.*"
-do_test is_matrix-9.m
+set test ismatrix-9
+set prog_output "\n... ismatrix:.*"
+do_test ismatrix-9.m
 
-set test is_matrix-10
-set prog_output "\n... is_matrix:.*"
-do_test is_matrix-10.m
+set test ismatrix-10
+set prog_output "\n... ismatrix:.*"
+do_test ismatrix-10.m
 
-set test is_vector-1
+set test isvector-1
 set prog_output "ans = 1"
-do_test is_vector-1.m
+do_test isvector-1.m
 
-set test is_vector-2
+set test isvector-2
 set prog_output "ans = 1"
-do_test is_vector-2.m
+do_test isvector-2.m
 
-set test is_vector-3
+set test isvector-3
 set prog_output "ans = 0"
-do_test is_vector-3.m
+do_test isvector-3.m
 
-set test is_vector-4
+set test isvector-4
 set prog_output "ans = 0"
-do_test is_vector-4.m
+do_test isvector-4.m
 
-set test is_vector-5
+set test isvector-5
 set prog_output "ans = 1"
-do_test is_vector-5.m
+do_test isvector-5.m
 
-set test is_vector-6
+set test isvector-6
 set prog_output "ans = 1"
-do_test is_vector-6.m
+do_test isvector-6.m
 
-set test is_vector-7
+set test isvector-7
 set prog_output "ans = 0"
-do_test is_vector-7.m
+do_test isvector-7.m
 
-set test is_vector-8
+set test isvector-8
 set prog_output "ans = 0"
-do_test is_vector-8.m
+do_test isvector-8.m
 
-set test is_vector-9
+set test isvector-9
 set prog_output "error:.*"
-do_test is_vector-9.m
+do_test isvector-9.m
 
-set test is_vector-10
+set test isvector-10
 set prog_output "error:.*"
-do_test is_vector-10.m
+do_test isvector-10.m
 
-set test is_scalar-1
+set test isscalar-1
 set prog_output "ans = 1"
-do_test is_scalar-1.m
+do_test isscalar-1.m
 
-set test is_scalar-2
+set test isscalar-2
 set prog_output "ans = 0"
-do_test is_scalar-2.m
+do_test isscalar-2.m
 
-set test is_scalar-3
+set test isscalar-3
 set prog_output "ans = 0"
-do_test is_scalar-3.m
+do_test isscalar-3.m
 
-set test is_scalar-4
+set test isscalar-4
 set prog_output "ans = 0"
-do_test is_scalar-4.m
+do_test isscalar-4.m
 
-set test is_scalar-5
+set test isscalar-5
 set prog_output "ans = 1"
-do_test is_scalar-5.m
+do_test isscalar-5.m
 
-set test is_scalar-6
+set test isscalar-6
 set prog_output "ans = 0"
-do_test is_scalar-6.m
+do_test isscalar-6.m
 
-set test is_scalar-7
+set test isscalar-7
 set prog_output "ans = 0"
-do_test is_scalar-7.m
+do_test isscalar-7.m
 
-set test is_scalar-8
+set test isscalar-8
 set prog_output "ans = 0"
-do_test is_scalar-8.m
+do_test isscalar-8.m
 
-set test is_scalar-9
+set test isscalar-9
 set prog_output "error:.*"
-do_test is_scalar-9.m
+do_test isscalar-9.m
 
-set test is_scalar-10
+set test isscalar-10
 set prog_output "error:.*"
-do_test is_scalar-10.m
+do_test isscalar-10.m
 
-set test is_square-1
+set test issquare-1
 set prog_output "ans = 1"
-do_test is_square-1.m
+do_test issquare-1.m
 
-set test is_square-2
+set test issquare-2
 set prog_output "ans = 0"
-do_test is_square-2.m
+do_test issquare-2.m
 
-set test is_square-3
+set test issquare-3
 set prog_output "ans = 0"
-do_test is_square-3.m
+do_test issquare-3.m
 
-set test is_square-4
+set test issquare-4
 set prog_output "ans = 1"
-do_test is_square-4.m
+do_test issquare-4.m
 
-set test is_square-5
+set test issquare-5
 set prog_output "ans = 1"
-do_test is_square-5.m
+do_test issquare-5.m
 
-set test is_square-6
+set test issquare-6
 set prog_output "ans = 0"
-do_test is_square-6.m
+do_test issquare-6.m
 
-set test is_square-7
+set test issquare-7
 set prog_output "ans = 1"
-do_test is_square-7.m
+do_test issquare-7.m
 
-set test is_square-8
+set test issquare-8
 set prog_output "ans = 0"
-do_test is_square-8.m
+do_test issquare-8.m
 
-set test is_square-9
+set test issquare-9
 set prog_output "ans = 0"
-do_test is_square-9.m
+do_test issquare-9.m
 
-set test is_square-10
+set test issquare-10
 set prog_output "error:.*"
-do_test is_square-10.m
+do_test issquare-10.m
 
-set test is_square-11
+set test issquare-11
 set prog_output "error:.*"
-do_test is_square-11.m
+do_test issquare-11.m
 
-set test is_symmetric-1
+set test issymmetric-1
 set prog_output "ans = 1"
-do_test is_symmetric-1.m
+do_test issymmetric-1.m
 
-set test is_symmetric-2
+set test issymmetric-2
 set prog_output "ans = 0"
-do_test is_symmetric-2.m
+do_test issymmetric-2.m
 
-set test is_symmetric-3
+set test issymmetric-3
 set prog_output "ans = 0"
-do_test is_symmetric-3.m
+do_test issymmetric-3.m
 
-set test is_symmetric-4
+set test issymmetric-4
 set prog_output "ans = 1"
-do_test is_symmetric-4.m
+do_test issymmetric-4.m
 
-set test is_symmetric-5
+set test issymmetric-5
 set prog_output "ans = 1"
-do_test is_symmetric-5.m
+do_test issymmetric-5.m
 
-set test is_symmetric-6
+set test issymmetric-6
 set prog_output "ans = 0"
-do_test is_symmetric-6.m
+do_test issymmetric-6.m
 
-set test is_symmetric-7
+set test issymmetric-7
 set prog_output "ans = 1"
-do_test is_symmetric-7.m
+do_test issymmetric-7.m
 
-set test is_symmetric-8
+set test issymmetric-8
 set prog_output "ans = 0"
-do_test is_symmetric-8.m
+do_test issymmetric-8.m
 
-set test is_symmetric-9
+set test issymmetric-9
 set prog_output "ans = 1"
-do_test is_symmetric-9.m
+do_test issymmetric-9.m
 
-set test is_symmetric-10
+set test issymmetric-10
 set prog_output "error:.*"
-do_test is_symmetric-10.m
+do_test issymmetric-10.m
 
-set test is_symmetric-11
+set test issymmetric-11
 set prog_output "error:.*"
-do_test is_symmetric-11.m
+do_test issymmetric-11.m
diff --git a/test/octave.test/struct/struct.exp b/test/octave.test/struct/struct.exp
--- a/test/octave.test/struct/struct.exp
+++ b/test/octave.test/struct/struct.exp
@@ -1,51 +1,51 @@
-set test is_struct-1
+set test isstruct-1
 set prog_output "ans = 0"
-do_test is_struct-1.m
+do_test isstruct-1.m
 
-set test is_struct-2
+set test isstruct-2
 set prog_output "ans = 0"
-do_test is_struct-2.m
+do_test isstruct-2.m
 
-set test is_struct-3
+set test isstruct-3
 set prog_output "ans = 0"
-do_test is_struct-3.m
+do_test isstruct-3.m
 
-set test is_struct-4
+set test isstruct-4
 set prog_output "ans = 0"
-do_test is_struct-4.m
+do_test isstruct-4.m
 
-set test is_struct-5
+set test isstruct-5
 set prog_output "ans = 0"
-do_test is_struct-5.m
+do_test isstruct-5.m
 
-set test is_struct-6
+set test isstruct-6
 set prog_output "ans = 0"
-do_test is_struct-6.m
+do_test isstruct-6.m
 
-set test is_struct-7
+set test isstruct-7
 set prog_output "ans = 0"
-do_test is_struct-7.m
+do_test isstruct-7.m
 
-set test is_struct-8
+set test isstruct-8
 set prog_output "ans = 1"
-do_test is_struct-8.m
+do_test isstruct-8.m
 
-set test is_struct-9
+set test isstruct-9
 set prog_output "ans = 1"
-do_test is_struct-9.m
+do_test isstruct-9.m
 
-set test is_struct-10
-set prog_output "\n... is_struct:.*"
-do_test is_struct-10.m
+set test isstruct-10
+set prog_output "\n... isstruct:.*"
+do_test isstruct-10.m
 
-set test is_struct-11
-set prog_output "\n... is_struct:.*"
-do_test is_struct-11.m
+set test isstruct-11
+set prog_output "\n... isstruct:.*"
+do_test isstruct-11.m
 
 set test struct_contains-1
 set prog_output "ans = 1"
 do_test struct_contains-1.m
 
 set test struct_contains-2
 set prog_output "ans = 0"
 do_test struct_contains-2.m
