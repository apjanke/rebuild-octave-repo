# HG changeset patch
# User jwe
# Date 1120754784 0
#      Thu Jul 07 16:46:24 2005 +0000
# Node ID 7bdddf96f0289bc7b716a03b43239ee6921676bf
# Parent  2ecbb26cd239a41fd07c7ed64dbdc1e1883ccf58
[project @ 2005-07-07 16:46:23 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2005-07-07  John W. Eaton  <jwe@octave.org>
+
+	* oct-stream.cc (octave_scan): Delete explicit instantiation of
+	octave_scan<double> since a specialization is provided.
+
+	* DLD-FUNCTIONS/matrix_type.cc (Fmatrix_type): Include
+	<algorithm>, for std::transform decl.  Use std qualifier for
+	transform and tolower.
+
 2005-07-05  Antoine Moreau  <antoine.moreau@univ-bpclermont.fr>
 
 	* DLD-FUNCTIONS/betainc.cc (Fbetainc): Fix doc string to match
 	function definition..
 
 2005-07-05  Mats Jansson  <mats.e.jansson@home.se>
 
          * file-io.cc (Fmkstemp): Check if second argument is true
diff --git a/src/DLD-FUNCTIONS/matrix_type.cc b/src/DLD-FUNCTIONS/matrix_type.cc
--- a/src/DLD-FUNCTIONS/matrix_type.cc
+++ b/src/DLD-FUNCTIONS/matrix_type.cc
@@ -17,16 +17,18 @@ along with this program; see the file CO
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <algorithm>
+
 #include "ov.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "ov-re-sparse.h"
 #include "ov-cx-sparse.h"
 #include "SparseType.h"
 
 DEFUN_DLD (matrix_type, args, ,
@@ -172,18 +174,18 @@ matrix type.\n\
 	      int nl = 0;
 	      int nu = 0;
 	      
 	      if (error_state)
 		error ("Matrix type must be a string");
 	      else
 		{
 		  // Use STL function to convert to lower case
-		  transform (str_typ.begin (), str_typ.end (), str_typ.begin (), 
-			     tolower);
+		  std::transform (str_typ.begin (), str_typ.end (),
+				  str_typ.begin (), std::tolower);
 
 		  if (str_typ == "diagonal")
 		    mattyp.mark_as_diagonal ();
 		  if (str_typ == "permuted diagonal")
 		    mattyp.mark_as_permuted_diagonal ();
 		  else if (str_typ == "upper")
 		    mattyp.mark_as_upper_triangular ();
 		  else if (str_typ == "lower")
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -1138,19 +1138,19 @@ octave_scan (std::istream&, const scanf_
 template std::istream&
 octave_scan (std::istream&, const scanf_format_elt&, unsigned short int*);
 
 #if 0
 template std::istream&
 octave_scan (std::istream&, const scanf_format_elt&, float*);
 #endif
 
-template <>
+template<>
 std::istream&
-octave_scan (std::istream& is, const scanf_format_elt& fmt, double* valptr)
+octave_scan<> (std::istream& is, const scanf_format_elt& fmt, double* valptr)
 {
   double& ref = *valptr;
 
   switch (fmt.type)
     {
     case 'e':
     case 'f':
     case 'g':
@@ -1313,19 +1313,16 @@ octave_scan (std::istream& is, const sca
     default:
       panic_impossible ();
       break;
     }
 
   return is;
 }
 
-template std::istream&
-octave_scan (std::istream&, const scanf_format_elt&, double*);
-
 #endif
 
 template <class T>
 void
 do_scanf_conv (std::istream& is, const scanf_format_elt& fmt,
 	       T valptr, Matrix& mval, double *data, octave_idx_type& idx,
 	       octave_idx_type& conversion_count, octave_idx_type nr, octave_idx_type max_size,
 	       bool discard) 
