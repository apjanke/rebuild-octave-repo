# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1224792066 14400
#      Thu Oct 23 16:01:06 2008 -0400
# Node ID 2c1ba965b486994c619a508e0fb7c12df473a739
# Parent  ed5811a1ec8f9a0c5dd094db5b666cd87e8a1dc7
skip reading history file with --no-history option

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2008-10-23  John W. Eaton  <jwe@octave.org>
 
+	* oct-hist.c (initialize_history): New arg, read_history_file)
+	* oct-hist.h: Fix decl.
+	* octave.cc (octave_main): Set read_history_file to false if
+	--no-history option is specified.  Pass read_history_file to
+	initialize_history.
+
 	* DLD-FUNCTIONS/fltk_backend.cc: Update initialization comment.
 
 2008-10-22  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/fltk_backend.cc (figure_manager::do_close_all):
 	Rename from close_all.  Now private.
 	(figure_manager::do_new_window): Rename from new_window.
 	Now private.
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -524,22 +524,23 @@ do_run_history (int argc, const string_v
   // Delete the temporary file.
 
   // FIXME -- should probably be done using an unwind_protect.
 
   unlink (name.c_str ());
 }
 
 void
-initialize_history (void)
+initialize_history (bool read_history_file)
 {
   command_history::set_file (Vhistory_file);
   command_history::set_size (Vhistory_size);
 
-  command_history::read (false);
+  if (read_history_file)
+    command_history::read (false);
 }
 
 void
 octave_history_write_timestamp (void)
 {
   octave_localtime now;
 
   std::string timestamp = now.strftime (Vhistory_timestamp_format_string);
diff --git a/src/oct-hist.h b/src/oct-hist.h
--- a/src/oct-hist.h
+++ b/src/oct-hist.h
@@ -23,17 +23,17 @@ along with Octave; see the file COPYING.
 
 #if !defined (octave_octave_hist_h)
 #define octave_octave_hist_h 1
 
 #include <string>
 
 #include "cmd-hist.h"
 
-extern void initialize_history (void);
+extern void initialize_history (bool read_history_file = false);
 
 // Write timestamp to history file.
 extern void octave_history_write_timestamp (void);
 
 // TRUE means input is coming from temporary history file.
 extern bool input_from_tmp_history_file;
 
 // TRUE if we are saving history.
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -623,22 +623,25 @@ octave_main (int argc, char **argv, int 
   install_ops ();
 
   install_builtins ();
 
   prog_args args (argc, argv, short_opts, long_opts);
 
   bool forced_line_editing = false;
 
+  bool read_history_file = true;
+
   int optc;
   while ((optc = args.getopt ()) != EOF)
     {
       switch (optc)
 	{
 	case 'H':
+	  read_history_file = false;
 	  bind_internal_variable ("saving_history", false);
 	  break;
 
 	case 'V':
 	  verbose_flag = true;
 	  break;
 
 	case 'd':
@@ -771,17 +774,17 @@ octave_main (int argc, char **argv, int 
   // including PKG_ADD files.
 
   intern_argv (argc, argv);
 
   load_path::initialize (set_initial_path);
 
   execute_startup_files ();
 
-  initialize_history ();
+  initialize_history (read_history_file);
 
   if (! inhibit_startup_message && reading_startup_message_printed)
     std::cout << std::endl;
 
   // Is input coming from a terminal?  If so, we are probably
   // interactive.
 
   interactive = (! embedded
