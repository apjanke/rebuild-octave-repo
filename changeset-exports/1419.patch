# HG changeset patch
# User jwe
# Date 811213957 0
#      Sat Sep 16 01:12:37 1995 +0000
# Node ID 0bdbc15a112bb79b51db71b0e5ad819f9e17ab1c
# Parent  3a86d9f74dc9fd25bb321870be389abb155913d0
[project @ 1995-09-16 01:12:37 by jwe]

diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -539,22 +539,23 @@ looks_like_octave_copyright (char *s)
 	      if (strncmp (s, " This file is part of Octave.", 29) == 0)
 		return 1;
 	    }
 	}
     }
   return 0;
 }
 
-// Eat whitespace and comments from FFILE, returning the first block
-// of comments.  If SKIP_COPYRIGHT, keep reading until the first block
-// of comments that doesn't look like a copyright notice.
+// Eat whitespace and comments from FFILE, returning the text of the
+// comments read if it doesn't look like a copyright notice.  If
+// IN_PARTS, consider each block of comments separately; otherwise,
+// grab them all at once.
 
 static char *
-gobble_leading_white_space (FILE *ffile, int skip_copyright)
+gobble_leading_white_space (FILE *ffile, int in_parts)
 {
   ostrstream buf;
 
   int first_comments_seen = 0;
   int have_help_text = 0;
   int in_comment = 0;
   int c;
   while ((c = getc (ffile)) != EOF)
@@ -568,25 +569,28 @@ gobble_leading_white_space (FILE *ffile,
 	      buf << (char) c;
 	    }
 
 	  if (c == '\n')
 	    {
 	      input_line_number++;
 	      current_input_column = 0;
 	      in_comment = 0;
-	      if ((c = getc (ffile)) != EOF)
+	      if (in_parts)
 		{
-		  current_input_column--;
-		  ungetc (c, ffile);
-		  if (c == '\n')
+		  if ((c = getc (ffile)) != EOF)
+		    {
+		      current_input_column--;
+		      ungetc (c, ffile);
+		      if (c == '\n')
+			break;
+		    }
+		  else
 		    break;
 		}
-	      else
-		break;
 	    }
 	}
       else
 	{
 	  switch (c)
 	    {
 	    case ' ':
 	    case '\t':
@@ -614,20 +618,26 @@ gobble_leading_white_space (FILE *ffile,
 	}
     }
 
  done:
 
   buf << ends;
   char *help_txt = buf.str ();
 
-  if (skip_copyright && help_txt && looks_like_octave_copyright (help_txt)) 
+  if (help_txt)
     {
-      delete [] help_txt;
-      help_txt = gobble_leading_white_space (ffile, skip_copyright);
+      if (looks_like_octave_copyright (help_txt)) 
+	{
+	  delete [] help_txt;
+	  help_txt = 0;
+	}
+
+      if (in_parts && ! help_txt)
+	help_txt = gobble_leading_white_space (ffile, in_parts);
     }
 
   if (help_txt && ! *help_txt)
     {
       delete [] help_txt;
       help_txt = 0;
     }
 
