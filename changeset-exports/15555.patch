# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1351021269 14400
#      Tue Oct 23 15:41:09 2012 -0400
# Node ID 17b04c4c268d973967bf921b9389751f543a3604
# Parent  499467c51cd539373b95f3d436999ffa8087645a
importdata.m: style fixes

diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -55,19 +55,16 @@
 ## @item Wav file
 ##
 ## @end itemize
 ##
 ## @seealso{textscan, dlmread, csvread, load}
 ## @end deftypefn
 
 ## Author: Erik Kjellson <erikiiofph7@users.sourceforge.net>
-## 2012-10-16 First version
-## 2012-10-23 Speeded up the import by a factor 2.
-
 
 function [output, delimiter, header_rows] = importdata (varargin)
 
   ## Default values
   fname   = "";
   delimiter  = "";
   header_rows = -1;
 
@@ -256,36 +253,36 @@ function [output, delimiter, header_rows
   data_columns = 0;
   delimiter_pattern = delimiter;
   ## If space is the delimiter, then multiple spaces should count as ONE
   ## delimiter. Also ignore leading spaces.
   if (strcmpi (delimiter, " "))
     delimiter_pattern = ' +';
   endif
   for i=(header_rows+1):length(file_content_rows)
-    data_columns = max(data_columns, 
-                       length (regexp (file_content_rows{i},
-                                       delimiter_pattern, "split")));
+    data_columns = max (data_columns,
+                        length (regexp (file_content_rows{i},
+                                        delimiter_pattern, "split")));
   endfor
 
   ## Go through the data and put it in either output.data or
   ## output.textdata depending on if it is numeric or not.
   output.data = NaN (length (file_content_rows) - header_rows, data_columns);
   for i=(header_rows+1):length(file_content_rows)
     ## Only use the row if it contains anything other than white-space
     ## characters.
     if (any (file_content_rows{i} != " "))
       row_data = regexp (file_content_rows{i}, delimiter_pattern, "split");
 
       for j=1:length(row_data)
         ## Try to convert the column to a number, if it works put it in
         ## output.data, otherwise in output.textdata
-        data_numeric = str2num(row_data{j});
+        data_numeric = str2num (row_data{j});
         if (!isempty (data_numeric))
-          output.data ((i-header_rows), j) = data_numeric;
+          output.data(i-header_rows, j) = data_numeric;
         else
           output.textdata{i,j} = row_data{j};
         endif
       endfor
 
     endif
   endfor
 
