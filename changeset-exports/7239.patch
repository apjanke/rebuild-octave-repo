# HG changeset patch
# User jwe
# Date 1196712606 0
#      Mon Dec 03 20:10:06 2007 +0000
# Node ID 7d7f05863f2701cce129462947c56acea03276b0
# Parent  22f210ca8cc1b138a024c364084dc01c63df06f6
[project @ 2007-12-03 20:10:06 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-12-03  Thomas Treichl  <Thomas.Treichl@gmx.net>
+
+	* linear-algebra/condest.m: Loosen tolerance in test.
+
 2007-12-02  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Remove unnecessary call to
 	get_data_limits.
 
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Don't compute data or axis limits.
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -191,25 +191,25 @@ endfunction
 ## Yes, these test bounds are really loose.  There's
 ## enough randomization to trigger odd cases with hilb().
 
 %!test
 %!  N = 6;
 %!  A = hilb (N);
 %!  cA = condest (A);
 %!  cA_test = norm (inv (A), 1) * norm (A, 1);
-%!  assert (cA, cA_test, 2^-12);
+%!  assert (cA, cA_test, 2^-8);
 
 %!test
 %!  N = 6;
 %!  A = hilb (N);
 %!  solve = @(x) A\x; solve_t = @(x) A'\x;
 %!  cA = condest (A, solve, solve_t);
 %!  cA_test = norm (inv (A), 1) * norm (A, 1);
-%!  assert (cA, cA_test, 2^-12);
+%!  assert (cA, cA_test, 2^-8);
 
 %!test
 %!  N = 6;
 %!  A = hilb (N);
 %!  apply = @(x) A*x; apply_t = @(x) A'*x;
 %!  solve = @(x) A\x; solve_t = @(x) A'\x;
 %!  cA = condest (apply, apply_t, solve, solve_t, N);
 %!  cA_test = norm (inv (A), 1) * norm (A, 1);
