# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1265234702 18000
#      Wed Feb 03 17:05:02 2010 -0500
# Node ID 65b41bc71f094dff3e0ed9081599bbcf956a295f
# Parent  e317791645c4cb2abbd6ab514040e89a4efc379c
use gnulib fcntl module

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2010-02-03  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac: Don't check for fcntl.h or fcntl.
+	* bootstrap.conf (gnulib_modules): Include fcntl in the list.
+
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* acinclude.m4 (OCTAVE_HAVE_C99_VSNPRINTF): Delete.
 	* configure.ac: Don't call OCTAVE_HAVE_C99_VSNPRINTF.
 	Don't check for snprintf, vfprintf, vsprintf, vsnprintf, or _snprintf.
 	* bootstrap.conf (gnulib_modules): Include vsprintf in the list.
 
 2010-02-03  John W. Eaton  <jwe@octave.org>
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -15,16 +15,17 @@
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 
 # gnulib modules used by this package.
 gnulib_modules="
   c-strcase
   crypto/md5
+  fcntl
   fnmatch
   getcwd
   getopt-gnu
   gettimeofday
   glob
   link
   lstat
   mkdir
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1443,17 +1443,17 @@ AC_CHECK_SIZEOF(long double)
 
 ### Checks for header files.
 
 AC_HEADER_DIRENT
 AC_HEADER_SYS_WAIT
 
 ### C headers
 
-AC_CHECK_HEADERS(curses.h direct.h dlfcn.h fcntl.h \
+AC_CHECK_HEADERS(curses.h direct.h dlfcn.h \
   floatingpoint.h grp.h ieeefp.h inttypes.h locale.h memory.h nan.h \
   ncurses.h poll.h pthread.h pwd.h sunmath.h sys/ioctl.h \
   sys/param.h sys/poll.h sys/resource.h sys/select.h \
   sys/utsname.h termcap.h)
 
 ### C++ headers
 
 AC_LANG_PUSH(C++)
@@ -1484,17 +1484,17 @@ if test "$have_termios_h" = yes \
   true
 else
   AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
 
 ### Checks for functions and variables.
 
 AC_CHECK_FUNCS(basename canonicalize_file_name \
-  chmod dup2 endgrent endpwent execvp expm1 expm1f fcntl fork \
+  chmod dup2 endgrent endpwent execvp expm1 expm1f fork \
   getegid geteuid getgid getgrent getgrgid getgrnam getpgrp getpid \
   getppid getpwent getpwuid getuid getwd _kbhit kill \
   lgamma lgammaf lgamma_r lgammaf_r localtime_r log1p log1pf \
   mkstemp pipe putenv \
   realpath resolvepath rindex roundl select setgrent setlocale \
   setpwent setvbuf siglongjmp \
   strsignal tempnam tgammaf trunc umask \
   uname utime waitpid \
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2010-02-03  John W. Eaton  <jwe@octave.org>
+
+	* oct-syscalls.h, oct-syscalls.cc (octave_fcntl): Assume fcntl exists.
+	Rename from octave_syscalls::fcntl.
+	(octave_syscalls::popen2): Call octave_fcntl, not fcntl.
+	* cmd-hist.cc, lo-sysdep.cc, oct-syscalls.cc:
+	Include <fcntl.h> unconditionally.
+
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* dbleSVD.cc (SVD::init): Ensure args to std::max are the same type.
 	* CmplxSVD.cc (ComplexSVD::init): Likewise.
 	* floatSVD.cc (FloatSVD::init): Likewise.
 	* fCmplxSVD.cc (FloatComplexSVD::init): Likewise.
 	* idx-vector.cc (idx_range_rep): Likewise.
 	* Array.cc (Array<T>::nth_element): Likewise.
diff --git a/liboctave/cmd-hist.cc b/liboctave/cmd-hist.cc
--- a/liboctave/cmd-hist.cc
+++ b/liboctave/cmd-hist.cc
@@ -37,23 +37,21 @@ along with Octave; see the file COPYING.
 #include "str-vec.h"
 
 command_history *command_history::instance = 0;
 
 #if defined (USE_READLINE)
 
 #include <cstdlib>
 
-#ifdef HAVE_FCNTL_H
-#include <fcntl.h>
-#endif
-
 #include <sys/types.h>
 #include <unistd.h>
 
+#include <fcntl.h>
+
 #include "oct-rl-hist.h"
 
 #include "file-stat.h"
 
 class
 gnu_history : public command_history
 {
 public:
diff --git a/liboctave/lo-sysdep.cc b/liboctave/lo-sysdep.cc
--- a/liboctave/lo-sysdep.cc
+++ b/liboctave/lo-sysdep.cc
@@ -26,19 +26,17 @@ along with Octave; see the file COPYING.
 
 #include <iostream>
 #include <string>
 #include <vector>
 
 #include <sys/types.h>
 #include <unistd.h>
 
-#ifdef HAVE_FCNTL_H
 #include <fcntl.h>
-#endif
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
 #include <windows.h>
 #ifdef max
 # undef min
 # undef max
 #endif
 #endif
diff --git a/liboctave/oct-syscalls.cc b/liboctave/oct-syscalls.cc
--- a/liboctave/oct-syscalls.cc
+++ b/liboctave/oct-syscalls.cc
@@ -28,19 +28,17 @@ along with Octave; see the file COPYING.
 #include <cerrno>
 #include <cstdlib>
 
 #include <string.h>
 
 #include <sys/types.h>
 #include <unistd.h>
 
-#ifdef HAVE_FCNTL_H
 #include <fcntl.h>
-#endif
 
 // We can't use csignal as kill is not in the std namespace, and picky
 // compiler runtimes will also exclude it from global scope as well.
 
 #include <signal.h>
 
 #include "lo-utils.h"
 #include "lo-sysdep.h"
@@ -108,45 +106,16 @@ octave_syscalls::execvp (const std::stri
     }
 #else
   msg = NOT_SUPPORTED ("execvp");
 #endif
 
   return status;
 }
 
-int
-octave_syscalls::fcntl (int fd, int cmd, long arg)
-{
-  std::string msg;
-  return fcntl (fd, cmd, arg, msg);
-}
-
-int
-octave_syscalls::fcntl (int fd, int cmd, long arg, std::string& msg)
-{
-  msg = std::string ();
-
-  int status = -1;
-
-#if defined (HAVE_FCNTL)
-  status = ::fcntl (fd, cmd, arg);
-
-  if (status < 0)
-    {
-      using namespace std;
-      msg = ::strerror (errno);
-    }
-#else
-  msg = NOT_SUPPORTED ("fcntl");
-#endif
-
-  return status;
-}
-
 pid_t
 octave_syscalls::fork (std::string& msg)
 {
   pid_t status = -1;
 
 #if defined (HAVE_FORK)
   status = ::fork ();
 
@@ -417,17 +386,17 @@ octave_syscalls::popen2 (const std::stri
 	      exit(0);
             }
           else
             {
               // Parent process
               ::close (child_stdin[0]);
               ::close (child_stdout[1]);
 #if defined (F_SETFL) && defined (O_NONBLOCK)
-              if (! sync_mode && fcntl (child_stdout[0], F_SETFL, O_NONBLOCK, msg) < 0)
+              if (! sync_mode && octave_fcntl (child_stdout[0], F_SETFL, O_NONBLOCK, msg) < 0)
                 msg = "popen2: error setting file mode -- " + msg;
               else
 #endif
                 {
                   fildes[0] = child_stdin [1];
                   fildes[1] = child_stdout [0];
                   return pid;
                 }
@@ -441,8 +410,33 @@ octave_syscalls::popen2 (const std::stri
       ::close (child_stdin[1]);
     }
   else
     msg = "popen2: pipe creation failed -- " + msg;
 
   return -1;
 #endif
 }
+
+int
+octave_fcntl (int fd, int cmd, long arg)
+{
+  std::string msg;
+  return octave_fcntl (fd, cmd, arg, msg);
+}
+
+int
+octave_fcntl (int fd, int cmd, long arg, std::string& msg)
+{
+  msg = std::string ();
+
+  int status = -1;
+
+  status = ::fcntl (fd, cmd, arg);
+
+  if (status < 0)
+    {
+      using namespace std;
+      msg = ::strerror (errno);
+    }
+
+  return status;
+}
diff --git a/liboctave/oct-syscalls.h b/liboctave/oct-syscalls.h
--- a/liboctave/oct-syscalls.h
+++ b/liboctave/oct-syscalls.h
@@ -35,19 +35,16 @@ OCTAVE_API
 octave_syscalls
 {
   static int dup2 (int, int);
   static int dup2 (int, int, std::string&);
 
   static int execvp (const std::string&, const string_vector&);
   static int execvp (const std::string&, const string_vector&, std::string&);
 
-  static int fcntl (int, int, long);
-  static int fcntl (int, int, long, std::string&);
-
   static pid_t fork (std::string&);
   static pid_t vfork (std::string&);
 
   static pid_t getpgrp (std::string&);
 
   static pid_t getpid (void);
   static pid_t getppid (void);
 
@@ -67,8 +64,11 @@ octave_syscalls
   static int kill (pid_t, int, std::string&);
 
   static pid_t popen2 (const std::string&, const string_vector&, bool, int *);
   static pid_t popen2 (const std::string&, const string_vector&, bool, int *, std::string&);
   static pid_t popen2 (const std::string&, const string_vector&, bool, int *, std::string&, bool &interactive);
 };
 
 #endif
+
+extern OCTAVE_API int octave_fcntl (int, int, long);
+extern OCTAVE_API int octave_fcntl (int, int, long, std::string&);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2010-02-03  John W. Eaton  <jwe@octave.org>
+
+	* file-io.cc: Assume we have fcntl.h and sys/stat.h.
+
+	* syscalls.cc: Assume we have fcntl.h and fcntl.
+	(Ffcntl): Use DEFUNX, not DEFUN.  Call octave_fcntl, not
+	octave_syscalls::fcntl.
+
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/sub2ind.cc (get_dim_vector):
 	Eliminate unnecessary cast.
 
 	* DLD-FUNCTIONS/qr.cc (Fqrinsert, Fqrdelete):
 	Avoid type mismatch errors with octave_idx_type.
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1948,22 +1948,18 @@ system-dependent error message.\n\
 }
 
 #if defined (HAVE_MKSTEMPS)
 // Prototype for mkstemps in libiberty
 extern "C" int mkstemps (char *pattern, int suffix_len);
 #endif
 
 #if ! defined (HAVE_MKSTEMP) && ! defined (HAVE_MKSTEMPS) && defined (_MSC_VER)
-# if defined (HAVE_FCNTL_H)
-#  include <fcntl.h>
-# endif
-# if defined (HAVE_SYS_STAT_H)
-#  include <sys/stat.h>
-# endif
+#include <fcntl.h>
+#include <sys/stat.h>
 int mkstemp (char *tmpl)
 {
   int ret=-1;
   mktemp (tmpl);
   ret = open (tmpl, O_RDWR | O_BINARY | O_CREAT | O_EXCL | _O_SHORT_LIVED,
 	      _S_IREAD | _S_IWRITE);
   return ret;
 }
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -31,19 +31,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <cstdio>
 #include <cstring>
 
 #include <sys/types.h>
 #include <unistd.h>
 
-#ifdef HAVE_FCNTL_H
 #include <fcntl.h>
-#endif
 
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-syscalls.h"
 #include "oct-uname.h"
 
 #include "defun.h"
 #include "error.h"
@@ -385,17 +383,17 @@ exit status, it will linger until Octave
 %!  if (isunix())
 %!    assert(str,{"these\n","strings\n","some\n","are\n"})
 %!  else
 %!    assert(str,{"these\r\n","strings\r\n","some\r\n","are\r\n"})
 %!  end
 
 */
 
-DEFUN (fcntl, args, ,
+DEFUNX ("fcntl", Ffcntl, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} fcntl (@var{fid}, @var{request}, @var{arg})\n\
 Change the properties of the open file @var{fid}.  The following values\n\
 may be passed as @var{request}:\n\
 \n\
 @vtable @code\n\
 @item F_DUPFD\n\
 Return a duplicate file descriptor.\n\
@@ -469,17 +467,17 @@ system-dependent error message.\n\
 	    {
 	      // FIXME -- Need better checking here?
 	      if (fid < 0)
 		error ("fcntl: invalid file id");
 	      else
 		{
 		  std::string msg;
 
-		  int status = octave_syscalls::fcntl (fid, req, arg, msg);
+		  int status = octave_fcntl (fid, req, arg, msg);
 
 		  retval(0) = status;
 		  retval(1) = msg;
 		}
 	    }
 	}
       else
 	error ("fcntl: file id, request, and argument must be integers");
