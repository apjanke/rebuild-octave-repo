# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1316539921 14400
#      Tue Sep 20 13:32:01 2011 -0400
# Branch stable
# Node ID 470ef1a5d66ed84d25de824270c097a5b6f98b90
# Parent  d624b6f216ac62e25cf25786bda3dbe814342dcf
doc: tweak log guidelines in contrib.txi

diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -131,64 +131,60 @@ comment header (use appropriate year, na
 ## PURPOSE.  See the GNU General Public License for more
 ## details.
 ##
 ## You should have received a copy of the GNU General Public
 ## License along with Octave; see the file COPYING.  If not,
 ## see <http://www.gnu.org/licenses/>.
 @end example
 
-Always include commit messages in changesets. After making your source
+Always include commit messages in changesets.  After making your source
 changes, record and briefly describe the changes in your commit message.
 You should have previously configured your @file{.hgrc} (or
 @file{Mercurial.ini} on Windows) with your name and email, which will
-get automatically added to your commit message. Your commit message
-should have a brief one-line explanation of what the commit does. If you
+get automatically added to your commit message.  Your commit message
+should have a brief one-line explanation of what the commit does.  If you
 are patching a bug, this one-line explanation should mention the bug
-number at the end. If your change is small and only touches one file,
-this is typically sufficient. If you are modifying several files or
+number at the end.  If your change is small and only touches one file,
+this is typically sufficient.  If you are modifying several files or
 several parts of one file, you should enumerate your changes roughly
 following the GNU coding standards on changelogs, like the following
 example:
 
 @example
 @group
-    look for methods before constructors
-
-    * symtab.cc (symbol_table::fcn_info::fcn_info_rep::find):
-    Look for class methods before constructors, contrary to Matlab
-    documentation.
+look for methods before constructors
 
-    * test/ctor-vs-method: New directory of test classes.
-    * test/test_ctor_vs_method.m: New file.
-    * test/Makefile.am: Include ctor-vs-method/module.mk.
-    (FCN_FILES): Include test_ctor_vs_method.m in the list.
+* symtab.cc (symbol_table::fcn_info::fcn_info_rep::find):
+Look for class methods before constructors, contrary to Matlab
+documentation.
 
-    * DLD-FUNCTIONS/regexp.cc (octregexp_list): Handle repeated matches
-    in the list of matches returned by pcre.
+* test/ctor-vs-method: New directory of test classes.
+* test/test_ctor_vs_method.m: New file.
+* test/Makefile.am: Include ctor-vs-method/module.mk.
+(FCN_FILES): Include test_ctor_vs_method.m in the list.
 @end group
 @end example
 
 @noindent
 In this example, the names of files is mentioned, and in parentheses the
-name of the function in that file that was modified. There is no need to
-mention the function for m-files that only contain one function. The
-commit message should describe what is changed, not why. Any explanation
+name of the function in that file that was modified.  There is no need to
+mention the function for m-files that only contain one function.  The
+commit message should describe what is changed, not why.  Any explanation
 of why a change is needed should appear as comments in the code,
 particularly if there is something that might not be obvious to someone
 reading it later.
 
 When submitting code which addresses a known bug on the Octave bug
 tracker (@url{http://bugs.octave.org}), please add '(bug #XXXXX)' to the
-commit messages. Example:
+first line of the commit messages.  For example:
 
 @example
 @group
-  * ols.m: Fix erroneous degrees of freedom when computing the
-    covariance estimator (bug #32892).
+Fix bug for complex input for gradient (bug #34292).
 @end group
 @end example
 
 The preferred comment mark for places that may need further attention is
 FIXME.
 
 @node Octave Sources (m-files)
 @section Octave Sources (m-files)
@@ -276,17 +272,17 @@ matches_patterns (const string_vector& p
 
 @noindent
 The function name should start in column 1, and multi-line argument
 lists should be aligned on the first char after the open parenthesis.
 You should put a space after the left open parenthesis and after commas,
 for both function definitions and function calls.
 
 Recommended indent is 2 spaces.  When indenting, indent the statement
-after control structures (like @code{if}, @code{while}, etc.). If there
+after control structures (like @code{if}, @code{while}, etc.).  If there
 is a compound statement, indent @emph{both} the curly braces and the
 body of the statement (so that the body gets indented by @emph{two}
 indents).  Example:
 
 @example
 @group
 if (have_args)
   @{
