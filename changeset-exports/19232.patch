# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1412685437 -7200
#      Tue Oct 07 14:37:17 2014 +0200
# Branch gui-release
# Node ID 97eea1e2d9ff36daa265928fdde5b8c897de2c7c
# Parent  85b2d669c21ea8599a5dd14a0c9280dc864da724
pr-output.cc: fix default chars for "format +" for Matlab compatibility

* pr-output.cc: restore default chars "+- " for Matlab compatibility.
  (Regression from cset 0e28461651f2, see also bug #43351)

diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -80,17 +80,17 @@ static bool Vsplit_long_rows = true;
 
 // TRUE means don't do any fancy formatting.
 static bool free_format = false;
 
 // TRUE means print plus sign for nonzero, blank for zero.
 static bool plus_format = false;
 
 // First char for > 0, second for < 0, third for == 0.
-static std::string plus_format_chars = "+  ";
+static std::string plus_format_chars = "+- ";
 
 // TRUE means always print in a rational approximation
 static bool rat_format = false;
 
 // Used to force the length of the rational approximation string for Frats
 static int rat_string_len = -1;
 
 // TRUE means always print like dollars and cents.
@@ -3741,17 +3741,17 @@ set_format_style (int argc, const string
                 plus_format_chars = arg;
               else
                 {
                   error ("format: invalid option for plus format");
                   return;
                 }
             }
           else
-            plus_format_chars = "+  ";
+            plus_format_chars = "+- ";
 
           init_format_state ();
           plus_format = true;
         }
       else if (arg == "rat")
         {
           init_format_state ();
           rat_format = true;
@@ -3881,23 +3881,24 @@ of like this @samp{0.60419 + 0.60709i}.\
 The following formats affect all numeric output (floating point and\n\
 integer types).\n\
 \n\
 @table @code\n\
 @item  +\n\
 @itemx + @var{chars}\n\
 @itemx plus\n\
 @itemx plus @var{chars}\n\
-Print a @samp{+} symbol for nonzero matrix elements and a space for zero\n\
-matrix elements.  This format can be very useful for examining the\n\
-structure of a large sparse matrix.\n\
+Print a @samp{+} symbol for matrix elements greater than zero, a\n\
+@samp{-} symbol for elements less than zero and a space for zero matrix\n\
+elements.  This format can be very useful for examining the structure\n\
+of a large sparse matrix.\n\
 \n\
 The optional argument @var{chars} specifies a list of 3 characters to use\n\
 for printing values greater than zero, less than zero and equal to zero.\n\
-For example, with the @samp{+ \"+-.\"} format, @code{[1, 0, -1; -1, 0, 1]}\n\
+For example, with the @samp{\"+\" \"+-.\"} format, @code{[1, 0, -1; -1, 0, 1]}\n\
 is displayed as\n\
 \n\
 @example\n\
 @group\n\
 ans =\n\
 \n\
 +.-\n\
 -.+\n\
