# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383151395 14400
#      Wed Oct 30 12:43:15 2013 -0400
# Node ID 2a15970da7f0b0ea4b19e0aeb047544656e9b42c
# Parent  f3e25230b1f3b35eff7983a4d6e2fb2eadb1367f
allow main.cc to build again with --disable-gui

* main.in.cc (install_signal_handlers, have_controlling_terminal):
Always define.

diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -35,17 +35,23 @@ along with Octave; see the file COPYING.
 #include <cstdlib>
 #include <cstring>
 
 #include <algorithm>
 #include <iostream>
 #include <string>
 
 // From gnulib, so OK for Windows too.
+#include <sys/types.h>
 #include <unistd.h>
+#include <fcntl.h>
+
+// This is a liboctave header, but it doesn't include any other Octave
+// headers or declare any functions that are defined in liboctave.
+#include "syswait.h"
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #define WIN32_LEAN_AND_MEAN
 #include <tlhelp32.h>
 
 static std::string
 w32_get_octave_home (void)
@@ -97,26 +103,19 @@ w32_get_octave_home (void)
         retval = bin_dir.substr (0, pos);
     }
 
   return retval;
 }
 
 #endif
 
-#if (defined (HAVE_OCTAVE_GUI) \
-     && ! defined (__WIN32__) && ! defined (__CYGWIN__))
+#if ! defined (__WIN32__) && ! defined (__CYGWIN__)
 
-#include <sys/types.h>
 #include <signal.h>
-#include <fcntl.h>
-
-// This is a liboctave header, but it doesn't include any other Octave
-// headers or declare any functions that are defined in liboctave.
-#include "syswait.h"
 
 typedef void sig_handler (int);
 
 // Forward signals to the GUI process.
 
 static pid_t gui_pid = 0;
 
 static void
@@ -137,19 +136,22 @@ octave_set_signal_handler (int sig, sig_
   gnulib::sigemptyset (&act.sa_mask);
   gnulib::sigemptyset (&oact.sa_mask);
 
   gnulib::sigaction (sig, &act, &oact);
 
   return oact.sa_handler;
 }
 
+#endif
+
 static void
 install_signal_handlers (void)
 {
+#if ! defined (__WIN32__) && ! defined (__CYGWIN__)
 
 #ifdef SIGINT
   octave_set_signal_handler (SIGINT, gui_driver_sig_handler);
 #endif
 
 #ifdef SIGBREAK
   octave_set_signal_handler (SIGBREAK, gui_driver_sig_handler);
 #endif
@@ -256,24 +258,26 @@ install_signal_handlers (void)
 #ifdef SIGXCPU
   octave_set_signal_handler (SIGXCPU, gui_driver_sig_handler);
 #endif
 
 #ifdef SIGXFSZ
   octave_set_signal_handler (SIGXFSZ, gui_driver_sig_handler);
 #endif
 
+#endif
 }
 
+
 static bool
 have_controlling_terminal (void)
 {
   int retval = false;
 
-#if ! (defined (__WIN32__) || defined (__APPLE__)) || defined (__CYGWIN__)
+#if ! defined (__WIN32__) && ! defined (__CYGWIN__)
 
 #if defined (HAVE_CTERMID)
   const char *ctty = ctermid (0);
 #else
   const char *ctty = "/dev/tty";
 #endif
 
   int fd = gnulib::open (ctty, O_RDWR, 0);
@@ -285,18 +289,16 @@ have_controlling_terminal (void)
       retval = true;
     }
 
 #endif
 
   return retval;
 }
 
-#endif
-
 #ifndef OCTAVE_BINDIR
 #define OCTAVE_BINDIR %OCTAVE_BINDIR%
 #endif
 
 #ifndef OCTAVE_PREFIX
 #define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
