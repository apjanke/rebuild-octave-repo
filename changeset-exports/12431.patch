# HG changeset patch
# User Konstantinos Poulios <logari81@gmail.com>
# Date 1297271960 -3600
#      Wed Feb 09 18:19:20 2011 +0100
# Branch release-3-4-x
# Node ID aa2cc2533306ba41cae106ee71ca9abcca5f74ec
# Parent  3ca18cf5141303b8b96ae80ff7d88eda30e09305
fix whitespace in ChangeLog

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -17,17 +17,17 @@ 2011-02-08  John W. Eaton  <jwe@octave.o
 
 	* oct-parse.yy (parse_fcn_file): Don't warn about coercing
 	nested functions to subfunctions if yyparse failed.
 
 2011-02-06  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* graphics.h.in (class axes::properties): Tag positionmode,
 	rotationmode, horizontalalignmentmode, verticalalignmentmode
-	with "u" qualifier.	New hidden property autopos_tag.
+	with "u" qualifier. New hidden property autopos_tag.
 	(axes::properties::request_autopos,
 	axes::properties::update_positionmode,
 	axes::properties::update_rotationmode,
 	axes::properties::update_horizontalalignmentmode,
 	axes::properties::update_verticalalignmentmode): New functions
 	(base_properties::update_autopos): New virtual function.
 	(axes::properties::update_xlabel_position,
 	axes::properties::update_ylabel_position,
@@ -876,17 +876,17 @@ 2011-01-10  John W. Eaton  <jwe@octave.o
 	(octave_scalar_struct::print_raw): Simplify and improve output.
 	* pr-output.h (Vstruct_levels_to_print): Delete decl.
 	* ov-class.cc (octave_class::print_raw): Don't unwind_protect
 	Vstruct_levels_to_print.
 
 2011-01-09  David Bateman  <dbateman@free.fr>
 
 	* ls-mat5.cc (save_mat5_array_length (const float*, octave_idx_type,
-        bool)): Take in to account the short tags for single data elements.
+	bool)): Take in to account the short tags for single data elements.
 	(int save_mat5_element_length (const octave_value&, const std::string&,
 	bool, bool)): Declare sparse matrices const to avoid a copy on read.
 	* ls-utils.cc (save_type get_save_type (float, float)): New function.
 	* ls-utils.h  (save_type get_save_type (float, float)): Declare it.
 
 2011-01-09  John W. Eaton  <jwe@octave.org>
 
 	* token.h, token.cc (token::plot_tok_typ): Delete unused enum.
@@ -1037,17 +1037,17 @@ 2010-12-28  Rik  <octave@nomad.inbox5.co
 	* data.cc (and, ctranspose, eq, ge, gt, ldivide, le, lt, minus,
 	mldivide, mpower, mrdivide, mtimes, ne, not, or, plus, power, rdivide,
 	times, transpose, uminus, uplus): Improve docstrings for functions
 	which emulate operators.  Add Seealso cross-referencing.
 
 2010-12-28  David Bateman  <dbateman@free.fr>
 
 	* ls-mat5.cc (save_mat5_array_length (const float*, octave_idx_type,
-        bool)): Take in to account the 4 bytes of padding for an odd number
+	bool)): Take in to account the 4 bytes of padding for an odd number
 	of elements in single precision arrays.
 
 2010-12-27  Rik  <octave@nomad.inbox5.com>
 
 	* syscalls.cc (stat): Add additional calling form using file descriptor
 	fid to docstring.
 
 2010-12-26  Michael Godfrey <godfrey@isl.stanford.edu>
@@ -1432,28 +1432,28 @@ 2010-11-03  John W. Eaton  <jwe@octave.o
 
 2010-11-02  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/cquad.cc (Fcquad): Use octave_Inf, not INFINITY.
 
 2010-11-02  David Bateman  <dbateman@free.fr>
 
 	* ls-hdf5.cc (bool hdf5_get_scalar_attr (hid_t, hid_t,
-        const char *, void *), herr_t hdf5_add_scalar_attr
+	const char *, void *), herr_t hdf5_add_scalar_attr
 	(hid_t, hid_t, const char *, void *)): New functions.
 	(herr_t hdf5_add_scalar_attr (hid_t, const char *)): Remove static
 	definition to make this function visible externally.
 	* ls-hdf5.h (extern OCTINTERP_API bool hdf5_check_attr (hid_t,
 	const char *), extern OCTINTERP_API bool hdf5_get_scalar_attr
 	(hid_t, hid_t, const char *, void *buf), extern OCTINTERP_API herr_t
 	hdf5_add_attr (hid_t, const char *), extern OCTINTERP_API herr_t
 	hdf5_add_scalar_attr (hid_t, hid_t, const char *, void *)): Function
 	declarations.
 	* ov-range.cc (bool octave_range::save_hdf5 (hid_t, const char *,
-        bool)): Save the number of elements in the range as an HDF5 attribute.
+	bool)): Save the number of elements in the range as an HDF5 attribute.
 	(bool octave_range::load_hdf5 (hid_t, const char *)): If an HDF5
 	attribute containing the number of elements exists use it to ensure
 	the correct number of elements in the range.
 
 2010-11-01  David Bateman  <dbateman@free.fr>
 
 	* gl-render.cc (void opengl_renderer::draw_patch (const
 	patch::properties &)): Draw clipped contours of patches.
@@ -1462,44 +1462,44 @@ 2010-11-01  David Bateman  <dbateman@fre
 	for NaN as comparison is always false.
 	(Matrix children_property::do_get_children (bool) const): New method of
 	new children_property class.
 	(void children_property::do_delete_children (bool)): Ditto.
 	(void base_properties::remove_child (const graphics_handle&)): Delete.
 	(void base_properties::set_children (const octave_value&)): Delete.
 	(void base_properties::delete_children (void)): Delete.
 	(base_properties::update_axis_limits (const std::string&,
-        const graphics_handle&) const): New method.
+	const graphics_handle&) const): New method.
 	(void base_graphics_object::update_axis_limits (const std::string&,
-        const graphics_handle&)): New Method.
+	const graphics_handle&)): New Method.
 	(Matrix base_properties::get_children_internal (bool) const): Delete.
 	(Matrix base_properties::get_children (void) const): Delete.
 	(Matrix base_properties::get_hidden_children (void) const): Delete.
 	(void axes::update_axis_limits (const std::string&,
-        const graphics_handle&): New Method.
+	const graphics_handle&): New Method.
 	(void hggroup::properties::update_limits (void) const): New method.
 	(void hggroup::properties::update_limits (const graphics_handle&)
 	const): New method.
 	(void hggroup::update_axis_limits (const std::string&,
-        const graphics_handle&)): New method.
+	const graphics_handle&)): New method.
 	* graphics.h.in (class children_property): New class.
 	(class base_properties): Use it.
 	(base_graphics_object::update_axis_limits(const std::string&,
 	const graphics_handle&)): New method.
 	(graphics_object::update_axis_limits(const std::string&,
 	const graphics_handle&)): New method.
 	(axes::update_axis_limits(const std::string&,
 	const graphics_handle&)): New method.
 	(hggroup::adopt (const graphics_handle&)): Use it
 	(void hggroup::properties::update_limits (void) const): Remove inline
 	definition of the methid.
 	(void hggroup::properties::update_limits (const graphics_handle&)
 	const): New method.
 	(void hggroup::update_axis_limits (const std::string&,
-        const graphics_handle&)): New method.
+	const graphics_handle&)): New method.
 
 2010-10-31  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* xnorm.h (xnorm, xcolnorms, xrownorms, xfrobnorm): tag with
 	OCTINTERP_API.
 
 2010-10-31  Kai Habel  <kai.habel@gmx.de>
 
@@ -1517,36 +1517,36 @@ 2010-10-29  David Bateman  <dbateman@fre
 
 2010-10-29  Ben Abbott  <bpabbott@mac.com>
 
 	* gl-render.cc: Crop ticks, ticklabels, and gridlines for OpenGL
 	backend.
 
 2010-10-28  Konstantinos Poulios  <logari81@googlemail.com>
 
-        * graphics.cc (normalized_aspectratios, max_axes_scale):
-        New file-scope static function
-        (updating_aspectratios): New file-scope variable.
-        (axes::properties::update_aspectratios, axes::update_axis_limits):
-        Return immediately if updating_aspecratios is true.
-        (axes::properties::update_aspectratios):
-        If dataaspectratiomode is set to manual this function will try to
-        respect it even after changes in xlim, ylim, zlim.
-        If both dataaspectratiomode and plotboxaspectratiomode is set to
-        manual this function will try to recalulate xlim, ylim, zlim
-        depending on the status of xlimmode, ylimmode, zlimmode. If
-        altering xlim, ylim, zlim is not possible, plotboxaspectratio will
-        be overriden.
-        * graphics.h.in (class axes::properties): Tag dataaspectratio,
-        dataaspectratiomode, plotboxaspectratio, and
-        plotboxaspectratiomode with "u" qualifier.
-        (axes::update_dataaspectratio,
-        axes::update_dataaspectratiomode,
-        axes::update_plotboxaspectratio,
-        axes::update_plotboxaspectratiomode): New functions.
+	* graphics.cc (normalized_aspectratios, max_axes_scale):
+	New file-scope static function
+	(updating_aspectratios): New file-scope variable.
+	(axes::properties::update_aspectratios, axes::update_axis_limits):
+	Return immediately if updating_aspecratios is true.
+	(axes::properties::update_aspectratios):
+	If dataaspectratiomode is set to manual this function will try to
+	respect it even after changes in xlim, ylim, zlim.
+	If both dataaspectratiomode and plotboxaspectratiomode is set to
+	manual this function will try to recalulate xlim, ylim, zlim
+	depending on the status of xlimmode, ylimmode, zlimmode. If
+	altering xlim, ylim, zlim is not possible, plotboxaspectratio will
+	be overriden.
+	* graphics.h.in (class axes::properties): Tag dataaspectratio,
+	dataaspectratiomode, plotboxaspectratio, and
+	plotboxaspectratiomode with "u" qualifier.
+	(axes::update_dataaspectratio,
+	axes::update_dataaspectratiomode,
+	axes::update_plotboxaspectratio,
+	axes::update_plotboxaspectratiomode): New functions.
 
 2010-10-25  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc (octave_main): Use F77_CHAR_ARC_LEN macro to pass
 	character string length in call to xerbla.
 
 2010-10-25  Kai Habel  <kai.habel@gmx.de>
 
