# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1548358107 0
#      Thu Jan 24 19:28:27 2019 +0000
# Node ID c9e5a09af7afb39120b1b597ceca895dde98d601
# Parent  1d03bc0d53f3d67a1c02247021ed169e696a3578
# Parent  361f7ce80f8536a08214ca5484ea0b9b8f3fcc22
maint: Merge stable to default.

diff --git a/.hgignore b/.hgignore
--- a/.hgignore
+++ b/.hgignore
@@ -30,16 +30,17 @@ syntax: regexp
 
 ## Emacs associated files
 (^|/)TAGS$
 (^|/)semantic.cache$
 
 ## Scripts associated with building Octave
 ^build-aux/config\.(guess|rpath|sub)$
 (^|/)build-aux/check-subst-vars\.sh$
+^build-aux/ar-lib$
 ^build-aux/depcomp$
 ^build-aux/install-sh$
 ^build-aux/ltmain\.sh$
 ^build-aux/mdate-sh$
 ^build-aux/missing$
 ^build-aux/move-if-change$
 (^|/)build-aux/subst-config-vals\.sh$
 (^|/)build-aux/subst-cross-config-vals\.sh$
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -51,17 +51,17 @@ OCTAVE_RELEASE_DATE="2018-12-20"
 ## NOTE: This macro will be removed in a future version of Octave!
 ## If you insist on checking for features using a version number, use the
 ## OCTAVE_MAJOR_VERSION, OCTAVE_MINOR_VERSION, and OCTAVE_PATCH_VERSION
 ## macros instead.
 dnl
 dnl FIXME: Since we also set libtool versions for liboctave and libinterp,
 dnl perhaps we should be computing the "api version" from those versions numbers
 dnl in some way instead of setting it independently here.
-OCTAVE_API_VERSION="api-v52+"
+OCTAVE_API_VERSION="api-v53"
 
 AC_SUBST(OCTAVE_MAJOR_VERSION)
 AC_SUBST(OCTAVE_MINOR_VERSION)
 AC_SUBST(OCTAVE_PATCH_VERSION)
 AC_SUBST(OCTAVE_VERSION)
 AC_SUBST(OCTAVE_COPYRIGHT)
 AC_SUBST(OCTAVE_RELEASE_DATE)
 AC_SUBST(OCTAVE_API_VERSION)
diff --git a/etc/HACKING.md b/etc/HACKING.md
--- a/etc/HACKING.md
+++ b/etc/HACKING.md
@@ -301,34 +301,37 @@ Release Numbering
 -----------------
 
 Since version 5, Octave uses the following rules for release numbering:
 
   Version Dev Phase       When
 
   5.0.0   (experimental)  active development of Octave 5 on default branch
   5.0.1   (pre-release)   stabilization period of Octave 5 on stable branch
+  5.0.90  (pre-release)   first release candidate for 5.1.0
   6.0.0   (experimental)  active development of Octave 6 on default branch
   5.1.0   (release)       first release of Octave 5 from stable branch
   5.1.1   (pre-release)   bug fixing on stable branch after 5.1.0 release
   5.2.0   (release)       second release of Octave 5 from stable branch
   5.2.1   (pre-release)   bug fixing on stable branch after 5.2.0 release
   ...
 
 To summarize, the first release of Octave 5 will be Octave 5.1.0 while
 development snapshots will be Octave 5.0.0 and snapshots from the
 release branch Octave 5.n.1.
 
 With this numbering scheme:
 
   * Any version X.0.0 means "this is an experimental development
     version".
 
-  * Any version X.Y.1 means, "this is a pre-release version meant
-    for bug fixing and testing".
+  * Any version X.Y.Z with Z > 0 means, "this is a pre-release version
+    meant for bug fixing and testing".  In practice, Z will be either 1
+    (stabilization period after and before making release candidates) or
+    90, 91, etc. (release candidate snapshots leading up to release).
 
   * Any version X.Y.0 with Y != 0 means "this is a released version".
 
 Shared Library Versioning
 -------------------------
 
 Version numbers for the liboctave, liboctinterp, and liboctgui shared
 libraries are set in the module.mk files in the top-level directory for
diff --git a/etc/NEWS.5 b/etc/NEWS.5
--- a/etc/NEWS.5
+++ b/etc/NEWS.5
@@ -1,32 +1,32 @@
-Summary of important user-visible changes for version 5.0 (yyyy-mm-dd):
-----------------------------------------------------------------------
+Summary of important user-visible changes for version 5 (yyyy-mm-dd):
+--------------------------------------------------------------------
 
  ** The determination of an object's dimensions, size, and shape by the
     functions ndims, rows, columns, isscalar, isvector, isrow, iscolumn,
     ismatrix, and issquare now fully depends on the function size.
     Thus, any user-defined object can ensure correct treatment by the
     aforementioned functions by properly overloading the "size"
     function.
 
  ** The function randi has been recoded to produce an unbiased (all
     results are equally likely) sample of integers.  This may produce
     different results in existing code.  If it is necessary to reproduce
     the exact random integer sequence as in previous versions use
-    
+
       ri = imin + floor ((imax - imin + 1) * rand ());
 
  ** A new core function movfun will apply a function to a sliding
     window of arbitrary size on a dataset and accumulate the results.
     Many common cases have been implemented using the naming
     scheme movXXX where "XXX" is the function that will be applied.
     For example, the moving average over a dataset is movmean.
     New moving window functions:
-   
+
     movfun   movslice
     movmad   movmax   movmean   movmedian   movmin   movprod
     movstd   movsum   movvar
 
  ** The functions issymmetric and ishermitian accept an option "nonskew"
     or "skew" to calculate the symmetric or skew-symmetric property
     of a matrix.  Performance has also been increased.
 
@@ -42,27 +42,27 @@ Summary of important user-visible change
     with Matlab.  Change all uses of "ascending" and "descending" in
     existing code to the new options.
 
  ** The strncmp and strncmpi functions now return true if the two input
     strings match, even though the number of characters specified by N
     exceeds the string length.  This behavior more closely matches
     common sense and is Matlab compatible.  Example:
 
-      Octave 5.0 : strncmp ("abc", "abc", 100) => true
+      Octave 5   : strncmp ("abc", "abc", 100) => true
       Previously : strncmp ("abc", "abc", 100) => false
 
  ** The intmax, intmin, and flintmax functions now accept a variable
     as input.  This supports a common programming usage which is to
     query the range of an existing variable.  Existing code can be
     simplified by removing the call to "class" that was previously
     required.  Example:
 
                    x = int8 (3);
-      Octave 5.0 : range = [ intmin(x), intmax(x) ]
+      Octave 5   : range = [ intmin(x), intmax(x) ]
       Previously : range = [ intmin(class(x)), intmax(class(x)) ]
 
  ** The ranks function has been recoded for performance and is now 25X
     faster.  In addition, it now supports a third argument that
     specifies how to resolve the ranking of tie values.
 
  ** The fsolve function has been tweaked to use larger step sizes when
     calculating the Jacobian of a function with finite differences.
@@ -191,17 +191,17 @@ Summary of important user-visible change
     nested functions.  Instead, it's best to avoid this situation
     entirely and require users to pass function handles rather than
     function names.
 
  ** The path handling functions no longer perform variable or brace
     expansion on path elements and Octave's load-path is no longer
     subject to these expansions.
 
- ** New functions added in 5.0:
+ ** New functions added in 5:
 
       clearvars
       isfile
       isfolder
       matlab.lang.makeUniqueStrings
       matlab.lang.makeValidName
       movegui
       movfun
@@ -237,67 +237,67 @@ Summary of important user-visible change
       isstr                | ischar
       setstr               | char
       strmatch             | strncmp or strcmp
       strread              | textscan
       textread             | textscan
 
  ** Deprecated functions.
 
-    The following functions have been deprecated in Octave 5.0 and will
+    The following functions have been deprecated in Octave 5 and will
     be removed from Octave 7 (or whatever version is the second major
-    release after 5.0):
+    release after 5):
 
       Function               | Replacement
       -----------------------|------------------
       output_max_field_width | output_precision
 
  ** The following functions were deprecated in Octave 4.2 and have been
-    removed from Octave 5.0.
+    removed from Octave 5.
 
       Function             | Replacement
       ---------------------|------------------
       bitmax               | flintmax
       mahalanobis          | mahal in Octave Forge statistics pkg
       md5sum               | hash
       octave_config_info   | __octave_config_info__
       onenormest           | normest1
       sleep                | pause
       usleep               | pause
       wavread              | audioread
       wavwrite             | audiowrite
 
  ** Deprecated graphics properties.
 
     The following properties or allowed corresponding values have been
-    deprecated in Octave 5.0 and will be removed from Octave 7 (or
-    whatever version is the second major release after 5.0):
+    deprecated in Octave 5 and will be removed from Octave 7 (or
+    whatever version is the second major release after 5):
 
       Object               | Property                | Value
       ---------------------|-------------------------|-------------------
       text                 | fontangle               | "oblique"
       uibuttongroup        | fontangle               | "oblique"
       uicontrol            | fontangle               | "oblique"
       uipanel              | fontangle               | "oblique"
       uitable              | fontangle               | "oblique"
 
  ** The following properties or allowed corresponding values were
-    deprecated in Octave 4.2 and have been removed from Octave 5.0:
+    deprecated in Octave 4.2 and have been removed from Octave 5:
 
       Object               | Property                | Value
       ---------------------|-------------------------|-------------------
       axes                 | xaxislocation           | "zero"
                            | yaxislocation           | "zero"
       hggroup              | erasemode               |
       image                | erasemode               |
       line                 | erasemode               |
       patch                | erasemode               |
       patch                | normalmode              |
       surface              | erasemode               |
       surface              | normalmode              |
       text                 | erasemode               |
 
  ** The C++ function is_keyword has been deprecated in favor of
-    iskeyword.  The old function will be removed two versions after 5.0.
+    iskeyword.  The old function will be removed two versions after 5.
 
 ---------------------------------------------------------
 
 See NEWS.4 for old news.
diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -135,31 +135,31 @@ namespace QtHandles
                       const graphics_handle& handle)
   {
     gh_manager::auto_lock lock;
     graphics_object obj = gh_manager::get_object (handle);
 
     if (obj.valid_object ())
       {
         graphics_object figObj (obj.get_ancestor ("figure"));
-        
+
         // Make sure we have a valid current context
         if (! begin_rendering ())
           error ("print: no valid OpenGL offscreen context");
-        
+
         try
           {
             octave::gl2ps_print (m_glfcns, figObj, file_cmd.toStdString (),
                                  term.toStdString ());
           }
         catch (octave::execution_exception& e)
           {
             octave_link::post_exception (std::current_exception ());
           }
-        
+
         end_rendering ();
       }
   }
 
   void
   GLCanvas::toggleAxes (const graphics_handle& gh)
   {
     canvasToggleAxes (gh);
diff --git a/libgui/module.mk b/libgui/module.mk
--- a/libgui/module.mk
+++ b/libgui/module.mk
@@ -56,17 +56,17 @@ nodist_%canon_reldir%_liboctgui_la_SOURC
   %reldir%/src/libgui-src.la \
   libinterp/liboctinterp.la \
   liboctave/liboctave.la \
   $(QT_LIBS)
 
 ## Increment the following version numbers as needed and according
 ## to the rules in the etc/HACKING.md file:
 
-%canon_reldir%_liboctgui_current = 4
+%canon_reldir%_liboctgui_current = 5
 %canon_reldir%_liboctgui_revision = 0
 %canon_reldir%_liboctgui_age = 0
 
 %canon_reldir%_liboctgui_version_info = $(%canon_reldir%_liboctgui_current):$(%canon_reldir%_liboctgui_revision):$(%canon_reldir%_liboctgui_age)
 
 %canon_reldir%_liboctgui_la_LDFLAGS = \
   -version-info $(%canon_reldir%_liboctgui_version_info) \
   $(NO_UNDEFINED_LDFLAG) \
diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -458,17 +458,17 @@ namespace octave
                           const QString& multimode)
     : QFileDialog ()
   {
     // Create a NonModal message.
     setWindowModality (Qt::NonModal);
 
     setWindowTitle (title.isEmpty () ? " " : title);
     setDirectory (dirname);
-    
+
     // FIXME: Remove, if for all common KDE versions (bug #54607) is resolved.
     if (! resource_manager::get_settings ()->value ("use_native_file_dialogs",
                                                     true).toBool ())
       setOption(QFileDialog::DontUseNativeDialog);
 
     if (multimode == "on")         // uigetfile multiselect=on
       {
         setFileMode (QFileDialog::ExistingFiles);
diff --git a/libinterp/corefcn/ft-text-renderer.cc b/libinterp/corefcn/ft-text-renderer.cc
--- a/libinterp/corefcn/ft-text-renderer.cc
+++ b/libinterp/corefcn/ft-text-renderer.cc
@@ -522,17 +522,17 @@ namespace octave
     uint8NDArray color;
 
     // A list of parsed strings to be used for printing.
     bool m_do_strlist;
     std::list<text_renderer::string> m_strlist;
 
     // The X offset of the baseline for the current line.
     int line_xoffset;
-     
+
     // Min and max y coordinates of all glyphs in a line.
     FT_Pos m_ymin;
     FT_Pos m_ymax;
 
     // Difference between the advance and the actual extent of the latest glyph
     FT_Pos m_deltax;
 
     // Used for computing the distance between lines.
@@ -851,39 +851,39 @@ namespace octave
                                      int ha, int va, double rot,
                                      const caseless_str& interp)
   {
     uint8NDArray pxls;
 
     // First run text_to_pixels which will also build the string list
 
     m_strlist = std::list<text_renderer::string> ();
-    
+
     octave::unwind_protect frame;
     frame.protect_var (m_do_strlist);
     frame.protect_var (m_strlist);
     m_do_strlist = true;
-    
+
     text_to_pixels (txt, pxls, box, ha, va, rot, interp, false);
 
     lst = m_strlist;
   }
 
   void
   ft_text_renderer::visit (text_element_string& e)
   {
     if (font.is_valid ())
       {
         m_max_fontsize = std::max (m_max_fontsize, font.get_size ());
         FT_UInt glyph_index, previous = 0;
 
         std::string str = e.string_value ();
         const uint8_t *c = reinterpret_cast<const uint8_t *> (str.c_str ());
         uint32_t u32_c;
-        
+
         size_t n = str.size ();
         size_t icurr = 0;
         size_t ibegin = 0;
 
         // Initialize a new string
         std::string fname = font.get_face ()->family_name;
         text_renderer::string fs (str, font, xoffset, yoffset);
         std::vector<double> xdata;
@@ -898,17 +898,17 @@ namespace octave
             if (m_do_strlist && mode == MODE_RENDER)
               {
                 if (u32_c == 10)
                   {
                     // Finish previous string in m_strlist before processing
                     // the newline character
                     fs.set_y (line_yoffset + yoffset);
                     fs.set_color (color);
-                
+
                     std::string s = str.substr (ibegin, icurr - ibegin);
                     if (! s.empty ())
                       {
                         fs.set_string (s);
                         fs.set_y (line_yoffset + yoffset);
                         fs.set_xdata (xdata);
                         fs.set_family (fname);
                         m_strlist.push_back (fs);
@@ -918,17 +918,17 @@ namespace octave
                   xdata.push_back (xoffset);
               }
 
             glyph_index = process_character (u32_c, previous);
 
             if (u32_c == 10)
               {
                 previous = 0;
-                
+
                 if (m_do_strlist && mode == MODE_RENDER)
                   {
                     // Start a new string in m_strlist
                     ibegin = icurr+1;
                     xdata.clear ();
                     fs = text_renderer::string (str.substr (ibegin), font,
                                                 line_xoffset, yoffset);
                   }
diff --git a/libinterp/corefcn/svd.cc b/libinterp/corefcn/svd.cc
--- a/libinterp/corefcn/svd.cc
+++ b/libinterp/corefcn/svd.cc
@@ -390,18 +390,18 @@ When called from inside a function with 
 variable is changed locally for the function and any subroutines it calls.
 The original variable value is restored when exiting the function.
 
 Algorithm Notes: The @sc{lapack} library provides two routines for calculating
 the full singular value decomposition (left and right singular matrices as
 well as singular values).  When calculating just the singular values the
 following discussion is not relevant.
 
-The default routine use by Octave is the newer @code{gesdd} which is based on a
-Divide-and-Conquer algorithm that is 5X faster than the alternative
+The default routine used by Octave is the newer @code{gesdd} which is based on
+a Divide-and-Conquer algorithm that is 5X faster than the alternative
 @code{gesvd}, which is based on QR factorization.  However, the new algorithm
 can use significantly more memory.  For an @nospell{MxN} input matrix the
 memory usage is of order O(min(M,N) ^ 2), whereas the alternative is of order
 O(max(M,N)).  In general, modern computers have abundant memory so Octave has
 chosen to prioritize speed.
 
 In addition, there have been instances in the past where some input matrices
 were not accurately decomposed by @code{gesdd}.  This appears to have been
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -1105,54 +1105,54 @@ pause (old_state);
 
 While the program is suspended Octave still handles figures painting and
 graphics callbacks execution.
 
 @seealso{kbhit}
 @end deftypefn */)
 {
   octave_value_list retval;
-  
+
   int nargin = args.length ();
-  
+
   if (nargin > 1)
     print_usage ();
 
   if (nargin == 1 && args(0).is_string ())
     {
       bool saved_state = Vpause_enabled;
       std::string state = args(0).string_value ();
-      
+
       if (state == "on")
         Vpause_enabled = true;
       else if (state == "off")
         Vpause_enabled = false;
       else if (state == "query")
         ;// Do nothing
       else
         error ("pause: first argument must be \"on\", \"off\" or \"query\"");
-      
+
       if (nargout > 0 || state == "query")
         retval.append (saved_state ? "on" : "off");
     }
   else if (Vpause_enabled)
     {
       double dval;
-  
+
       if (nargin == 0)
         dval = octave_Inf;
       else
         dval = args(0).xdouble_value ("pause: N must be a scalar real value");
 
       if (octave::math::isnan (dval))
         warning ("pause: NaN is an invalid delay");
       else
         {
           Fdrawnow ();
-      
+
           octave::sleep (dval, true);
         }
     }
 
   return retval;
 }
 
 /*
diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1278,25 +1278,25 @@ namespace octave
   {
     if (seconds <= 0)
       return;
 
     // Allow free access to graphics resources while the interpreter thread
     // is asleep
     if (do_graphics_events)
       gh_manager::unlock ();
-    
+
     if (octave::math::isinf (seconds))
       {
         // Wait for kbhit
         int c = -1;
         octave::flush_stdout ();
-        
+
         struct timespec one_tenth = { 0, 100000000 };
-        
+
         while (c < 0)
           {
             octave_nanosleep_wrapper (&one_tenth, nullptr);
 
             octave_quit ();
 
             if (do_graphics_events)
               gh_manager::process_events ();
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -145,17 +145,17 @@ nodist_%canon_reldir%_liboctinterp_la_SO
 if AMCOND_BUILD_EXTERNAL_LIBXERBLA
   %canon_reldir%_liboctinterp_la_LIBADD += \
     liboctave/external/blas-xtra/libxerbla.la
 endif
 
 ## Increment the following version numbers as needed and according
 ## to the rules in the etc/HACKING.md file:
 
-%canon_reldir%_liboctinterp_current = 6
+%canon_reldir%_liboctinterp_current = 7
 %canon_reldir%_liboctinterp_revision = 0
 %canon_reldir%_liboctinterp_age = 0
 
 %canon_reldir%_liboctinterp_version_info = $(%canon_reldir%_liboctinterp_current):$(%canon_reldir%_liboctinterp_revision):$(%canon_reldir%_liboctinterp_age)
 
 %canon_reldir%_liboctinterp_la_LDFLAGS = \
   -version-info $(%canon_reldir%_liboctinterp_version_info) \
   $(NO_UNDEFINED_LDFLAG) \
diff --git a/libinterp/parse-tree/pt-jit.cc b/libinterp/parse-tree/pt-jit.cc
--- a/libinterp/parse-tree/pt-jit.cc
+++ b/libinterp/parse-tree/pt-jit.cc
@@ -132,17 +132,17 @@ static bool Vjit_enable = false;
 
 static int Vjit_startcnt = 1000;
 
 static int Vjit_failcnt = 0;
 
 namespace octave
 {
   namespace jit
-  {    
+  {
 #if defined (LEGACY_PASSMANAGER)
     typedef llvm::legacy::PassManager PassManager;
     typedef llvm::legacy::FunctionPassManager FunctionPassManager;
 #else
     typedef llvm::PassManager PassManager;
     typedef llvm::FunctionPassManager FunctionPassManager;
 #endif
   }
@@ -2442,17 +2442,17 @@ namespace octave
     jit::PassManager *module_pass_manager = new jit::PassManager ();
     jit::FunctionPassManager *pass_manager = new jit::FunctionPassManager (m_module);
 
 #if defined (LLVM_HAS_CREATEALWAYSINLINERPASS)
     // This pass has been removed from LLVM's C++ API after 3.9.0
     // FIXME: Provide a meaningful replacement instead of simply skipping it?
     module_pass_manager->add (llvm::createAlwaysInlinerPass ());
 #endif
-    
+
     // In 3.6, a pass was inserted in the pipeline to make the DataLayout accessible:
     //    MyPassManager->add(new DataLayoutPass(MyTargetMachine->getDataLayout()));
     // In 3.7, you don’t need a pass, you set the DataLayout on the Module:
     //    MyModule->setDataLayout(MyTargetMachine->createDataLayout());
     //
     // FIXME: autoconf to support <= 3.6
     //
     // #if defined (HAVE_LLVM_DATALAYOUT)
diff --git a/liboctave/module.mk b/liboctave/module.mk
--- a/liboctave/module.mk
+++ b/liboctave/module.mk
@@ -80,17 +80,17 @@ nodist_%canon_reldir%_%canon_reldir%_la_
 
 %canon_reldir%_%canon_reldir%_la_LIBADD += \
   libgnu/libgnu.la \
   $(LIBOCTAVE_LINK_DEPS)
 
 ## Increment the following version numbers as needed and according
 ## to the rules in the etc/HACKING.md file:
 
-%canon_reldir%_%canon_reldir%_current = 6
+%canon_reldir%_%canon_reldir%_current = 7
 %canon_reldir%_%canon_reldir%_revision = 0
 %canon_reldir%_%canon_reldir%_age = 0
 
 %canon_reldir%_%canon_reldir%_version_info = $(%canon_reldir%_%canon_reldir%_current):$(%canon_reldir%_%canon_reldir%_revision):$(%canon_reldir%_%canon_reldir%_age)
 
 %canon_reldir%_%canon_reldir%_la_LDFLAGS = \
   -version-info $(%canon_reldir%_%canon_reldir%_version_info) \
   $(NO_UNDEFINED_LDFLAG) \
diff --git a/liboctave/util/oct-rl-hist.c b/liboctave/util/oct-rl-hist.c
--- a/liboctave/util/oct-rl-hist.c
+++ b/liboctave/util/oct-rl-hist.c
@@ -275,17 +275,17 @@ octave_history_list (int limit, int numb
         end++;
 
       beg = (limit < 0 || end < limit) ? 0 : (end - limit);
 
       retval = malloc ((size_t) (end - beg + 1) * sizeof (char *));
       // FIXME: Should this call current_liboctave_error_handler instead?
       if (! retval)
         return retval;
-      
+
       k = 0;
       for (i = beg; i < end; i++)
         {
           char *line = hlist[i]->line;
           size_t len = line ? strlen (line) : 0;
           char *tmp = malloc (len + 64);
 
           if (tmp)
diff --git a/scripts/+matlab/+lang/makeUniqueStrings.m b/scripts/+matlab/+lang/makeUniqueStrings.m
--- a/scripts/+matlab/+lang/makeUniqueStrings.m
+++ b/scripts/+matlab/+lang/makeUniqueStrings.m
@@ -36,17 +36,17 @@
 ##
 ## If @var{ex} is an index array or a logical array for @var{str} then it
 ## selects the subset of @var{str} that are made unique.  Unselected elements
 ## are not modified.
 ##
 ## The optional input @var{maxlength} specifies the maximum length of any
 ## string in @var{uniqstr}.  If an input string cannot be made unique without
 ## exceeding @var{maxlength} an error is emitted.
-## 
+##
 ## The optional output @var{ismodified} is a logical array indicating whether
 ## each element in @var{str} was modified to make it unique.
 ##
 ## @seealso{unique, matlab.lang.makeValidName}
 ## @end deftypefn
 
 function [uniqstr, ismodified] = makeUniqueStrings (str, ex = {}, maxlength = Inf)
 
diff --git a/scripts/general/randi.m b/scripts/general/randi.m
--- a/scripts/general/randi.m
+++ b/scripts/general/randi.m
@@ -97,30 +97,30 @@ function ri = randi (bounds, varargin)
   endif
 
   ## Expand dimension argument to at least 2-D for reshape
   if (nargin == 1)
     varargin = {1, 1};
   elseif (nargin == 2 && isscalar (varargin{1}))
     varargin(2) = varargin(1);
   endif
-    
+
   ## Rejection Algorithm to guarantee unbiased results.  See bug #54619.
   rng = (imax - imin) + 1;              # requested range
   N = prod ([varargin{:}]);             # number of requested elements
   K = floor ((flintmax () + 1) / rng);  # number of primary integers ...
                                         # mapped to single output
   p = (K*rng) / (flintmax () + 1);      # expected proportion of used primaries
-  
-  do  
+
+  do
     M = ceil (N/p + 10*sqrt (N/p - N)); # number of requested primary integers
     r_prim = floor (rand (M,1) * (flintmax () + 1));
     r_prim = r_prim(r_prim < K*rng);
   until (numel (r_prim) >= N)           # should practically always be true
-  
+
   ri = imin + floor (reshape (r_prim(1:N), varargin{:}) / K);
 
   if (! strcmp (rclass, "double"))
     if (strfind (rclass, "int"))
       maxval = double (intmax (rclass));
       minval = double (intmin (rclass));
     elseif (strcmp (rclass, "single"))
       maxval = double (flintmax (rclass));
diff --git a/scripts/gui/waitbar.m b/scripts/gui/waitbar.m
--- a/scripts/gui/waitbar.m
+++ b/scripts/gui/waitbar.m
@@ -273,20 +273,20 @@ endfunction
 %! xx = [0 l];
 %! yy = [0 0];
 %! hli = plot (xx, yy);
 %! pos1 = get (gcf, "position");
 %!
 %! disp ("Push the <cancel> button to stop the process.");
 %! hf = waitbar (0,"0","Name","Building Koch curve ...",...
 %!               "createcancelbtn", "setappdata (gcbf,'interrupt', true)");
-%! 
+%!
 %! pos2 = get (hf, "position");
 %! set (hf, "position", [pos1(1)+(pos1(3)-pos2(3))/2, pos1(2)+pos1(4), pos2(3:4)]);
-%! 
+%!
 %! for ii = 1:niter
 %!   ## Check cancel request
 %!   if (! ishghandle (hf))
 %!     break;
 %!   elseif (getappdata (hf, "interrupt"))
 %!     delete (hf);
 %!     break;
 %!   else
diff --git a/scripts/miscellaneous/clearvars.m b/scripts/miscellaneous/clearvars.m
--- a/scripts/miscellaneous/clearvars.m
+++ b/scripts/miscellaneous/clearvars.m
@@ -142,17 +142,17 @@ function clearvars (varargin)
   else
     ptn = strjoin ({ vars(! [vars.except]).var_name }, '|');
     idx_clear = ! cellfun (@isempty, regexp (varlist, ptn));
   endif
 
   if (numvar > 0 && any ([vars.except]))
     ptn = strjoin ({ vars([vars.except]).var_name }, '|');
     idx_except = ! cellfun (@isempty, regexp (varlist, ptn));
-    idx_clear(idx_except) = false; 
+    idx_clear(idx_except) = false;
   endif
 
   varlist = varlist(idx_clear);
   names = strjoin (varlist, " ");
 
   if (! isempty (names))
     if (global_mode)
       evalin ("caller", ["clear -global " names]);
diff --git a/scripts/optimization/sqp.m b/scripts/optimization/sqp.m
--- a/scripts/optimization/sqp.m
+++ b/scripts/optimization/sqp.m
@@ -436,17 +436,17 @@ function [x, obj, info, iter, nf, lambda
         lambda = old_lambda;  # The return value was size 0x0 in this case.
     endswitch
 
     ## Choose mu such that p is a descent direction for the chosen
     ## merit function phi.
     [x_new, alpha, obj_new, globals] = ...
         linesearch_L1 (x, p, obj_fun, obj_grd, ce_fun, ci_fun, lambda, ...
                        obj, c, globals);
-    
+
     delx = x_new - x;
 
     ## Check if step size has become too small (indicates lack of progress).
     if (norm (delx) < tol * norm (x))
       info = 104;
       break;
     endif
 
diff --git a/scripts/plot/draw/fplot.m b/scripts/plot/draw/fplot.m
--- a/scripts/plot/draw/fplot.m
+++ b/scripts/plot/draw/fplot.m
@@ -118,24 +118,24 @@ function [X, Y] = fplot (varargin)
   endif
 
   n = 5;
   tol = 2e-3;
   fmt = {};
   while (i <= numel (varargin))
     arg = varargin{i};
     if (ischar (arg))
-      [~, valid_fmt] = __pltopt__ ("fplot", arg, false); 
+      [~, valid_fmt] = __pltopt__ ("fplot", arg, false);
       if (valid_fmt)
         fmt(end+1) = arg;
       else
         if (i == numel (varargin))
           error ("fplot: bad input in position %d", i);
         endif
-        fmt(end+(1:2)) = varargin([i, i+1]); 
+        fmt(end+(1:2)) = varargin([i, i+1]);
         i++;  # Skip PROPERTY.
       endif
     elseif (isnumeric (arg) && isscalar (arg) && arg > 0)
       if (arg == fix (arg))
         n = arg;
       else
         tol = arg;
       endif
diff --git a/scripts/plot/util/openfig.m b/scripts/plot/util/openfig.m
--- a/scripts/plot/util/openfig.m
+++ b/scripts/plot/util/openfig.m
@@ -140,23 +140,23 @@ endfunction
 %!error openfig (1, 2, 3, 4)
 %!error <cannot find file> openfig ("%%_A_REALLY_UNLIKELY_FILENAME_%%")
 %!error <cannot find file> openfig ("%%_A_REALLY_UNLIKELY_FILENAME_%%.fig")
 %!error <input argument 3 must be a string>
 %! unwind_protect
 %!   h = figure ("visible", "off");
 %!   ftmp = [tempname() ".ofig"];
 %!   hgsave (h, ftmp);
-%!   openfig (ftmp, "new", [1, 2, 3]); 
+%!   openfig (ftmp, "new", [1, 2, 3]);
 %! unwind_protect_cleanup
 %!   unlink (ftmp);
 %!   close (h);
 %! end_unwind_protect
 %!error <unknown option 'foobar'>
 %! unwind_protect
 %!   h = figure ("visible", "off");
 %!   ftmp = [tempname() ".ofig"];
 %!   hgsave (h, ftmp);
-%!   openfig (ftmp, "foobar"); 
+%!   openfig (ftmp, "foobar");
 %! unwind_protect_cleanup
 %!   unlink (ftmp);
 %!   close (h);
 %! end_unwind_protect
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -248,17 +248,17 @@ function arg_st = __print_parse_opts__ (
           && strcmp (arg_st.renderer, "opengl"))
     ## The opengl renderer only works with the "qt" toolkit
     arg_st.renderer = "painters";
     warning ('Octave:print:unsupported-renderer',
              'print: "opengl" renderer unsupported for "%s" toolkit',
              graphics_toolkit (arg_st.figure));
   endif
 
-  
+
   if (arg_st.use_color == 0)
     if (any (strcmp ({"ps", "ps2", "eps", "eps2"}, arg_st.devopt)))
       arg_st.use_color = -1;
     else
       arg_st.use_color = 1;
     endif
   endif
 
@@ -610,17 +610,17 @@ function bin = __svgconv_binary__ ()
 
   persistent binary = "";
 
   if (isempty (binary))
     bindir = getenv ("OCTAVE_ARCHLIBDIR");
     if (isempty (bindir))
       bindir = __octave_config_info__ ("archlibdir");
     endif
-    
+
     binary = fullfile (bindir, "octave-svgconvert");
 
     if (! exist (binary, "file"))
       if (! isunix () && exist ([binary, ".exe"], "file"))
         ## Unix - Includes Mac OSX and Cygwin.
         binary = [binary, ".exe"];
       else
         binary = "";
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -301,25 +301,27 @@ initialize (void)
                                            %OCTAVE_CONF_OCTAVE_LINK_OPTS%);
 
   vars["OCT_LINK_DEPS"] = get_variable ("OCT_LINK_DEPS",
                                         %OCTAVE_CONF_MKOCTFILE_OCT_LINK_DEPS%);
 
   vars["OCT_LINK_OPTS"] = get_variable ("OCT_LINK_OPTS",
                                         %OCTAVE_CONF_OCT_LINK_OPTS%);
 
-  vars["LDFLAGS"] = get_variable ("LDFLAGS", DEFAULT_LDFLAGS);
+  vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
 
   vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
 
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG",
                                          %OCTAVE_CONF_LD_STATIC_FLAG%);
 
   // FIXME: Remove LFLAGS in Octave 7.0
   vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LDFLAGS);
+  if (vars["LFLAGS"] != DEFAULT_LDFLAGS)
+    std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
 
   vars["F77_INTEGER8_FLAG"] = get_variable ("F77_INTEGER8_FLAG",
                                             %OCTAVE_CONF_F77_INTEGER_8_FLAG%);
   vars["ALL_FFLAGS"] = vars["FFLAGS"] + ' ' + vars["F77_INTEGER8_FLAG"];
 
   vars["ALL_CFLAGS"]
     = vars["INCFLAGS"] + ' ' + vars["XTRA_CFLAGS"] + ' ' + vars["CFLAGS"];
 
@@ -1071,39 +1073,31 @@ main (int argc, char **argv)
     return 0;
 
   if (objfiles.empty ())
     {
       std::cerr << "mkoctfile: no objects to link" << std::endl;
       return 1;
     }
 
-  // FIXME: Remove LFLAGS in Octave 7.0
-  if (vars["LFLAGS"] != vars["LDFLAGS"])
-    {
-      std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
-      vars["LDFLAGS"] = vars["LFLAGS"];
-    }
-
   std::string octave_libs;
 
   if (link_stand_alone)
     {
       if (! vars["LD_CXX"].empty ())
         {
-          octave_libs = vars["OCTAVE_LIBS"];
+          octave_libs = "-L" + quote_path (vars["OCTLIBDIR"])
+                      + ' ' + vars["OCTAVE_LIBS"];
 
           std::string cmd
             = (vars["LD_CXX"] + ' ' + vars["CPPFLAGS"] + ' '
                + vars["ALL_CXXFLAGS"] + ' ' + vars["RDYNAMIC_FLAG"] + ' '
                + vars["ALL_LDFLAGS"] + ' ' + pass_on_options + ' '
                + output_option + ' ' + objfiles + ' ' + libfiles + ' '
-               + ldflags + ' ' + vars["LDFLAGS"]
-               + " -L" + quote_path (vars["OCTLIBDIR"])
-               + ' ' + octave_libs + ' '
+               + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
                + vars["OCTAVE_LINK_OPTS"] + ' ' + vars["OCTAVE_LINK_DEPS"]);
 
           int status = run_command (cmd, printonly);
 
           clean_up_tmp_files (tmp_objfiles);
 
           if (status)
             return status;
@@ -1114,24 +1108,25 @@ main (int argc, char **argv)
             << "mkoctfile: no way to link stand-alone executable file"
             << std::endl;
           return 1;
         }
     }
   else
     {
 #if defined (OCTAVE_USE_WINDOWS_API) || defined(CROSS)
-      octave_libs = vars["OCTAVE_LIBS"];
+      octave_libs = "-L" + quote_path (vars["OCTLIBDIR"])
+                  + ' ' + vars["OCTAVE_LIBS"];
 #endif
 
       std::string cmd
         = (vars["DL_LD"] + ' ' + vars["ALL_CXXFLAGS"] + ' '
-           + vars["DL_LDFLAGS"] + ' ' + pass_on_options
+           + vars["DL_LDFLAGS"] + ' ' + vars["LDFLAGS"] + ' ' + pass_on_options
            + " -o " + octfile + ' ' + objfiles + ' ' + libfiles + ' '
-           + ldflags + ' ' + vars["LDFLAGS"] + ' ' + octave_libs + ' '
+           + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
            + vars["OCT_LINK_OPTS"] + ' ' + vars["OCT_LINK_DEPS"]);
 
       int status = run_command (cmd, printonly);
 
       clean_up_tmp_files (tmp_objfiles);
 
       if (status)
         return status;
diff --git a/src/octave-svgconvert.cc b/src/octave-svgconvert.cc
--- a/src/octave-svgconvert.cc
+++ b/src/octave-svgconvert.cc
@@ -713,17 +713,17 @@ octave-svgconvert infile fmt dpi font re
 Convert svg file to pdf, or svg. All arguments are mandatory:\n\
 * infile: input svg file or \"-\" to indicate that the input svg file should be \
 read from stdin\n\
 * fmt: format of the output file. May be one of pdf or svg\n\
 * dpi: device dependent resolution in screen pixel per inch\n\
 * font: specify a file name for the default FreeSans font\n\
 * reconstruct: specify wether to reconstruct triangle to polygons (0 or 1)\n\
 * outfile: output file name\n";
-  
+
   if (strcmp (argv[1], "-h") == 0)
     {
       std::cout << help;
       return 0;
     }
   else if (argc != 7)
     {
       std::cerr << help;
@@ -799,17 +799,17 @@ read from stdin\n\
       QFont font ("FreeSans");
       if (! font.exactMatch ())
         {
           QString fontpath (argv[4]);
           if (! fontpath.isEmpty ())
             {
               int id = QFontDatabase::addApplicationFont (fontpath);
               if (id < 0)
-                std::cerr << "warning: print: " 
+                std::cerr << "warning: print: "
                   "Unable to add default font to database\n";
             }
           else
             std::cerr << "warning: print: FreeSans font not found\n";
         }
     }
 
   // First render in a temporary file
