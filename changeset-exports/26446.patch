# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546698812 28800
#      Sat Jan 05 06:33:32 2019 -0800
# Node ID db5c5e6c237155553e5d30b974fd9e36cbcdf74f
# Parent  2d7615a07002e4d9938fad3645a6609616c50e55
# Parent  7fb7229d6c518b357967df2f81fa8502fb757571
maint: merge stable to default.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,15 +1,20 @@
 Summary of important user-visible changes for version 6.0 (yyyy-mm-dd):
 ----------------------------------------------------------------------
 
  ** New functions added in 6.0:
  ** Specifying legend position with a numeric argument is deprecated and
     will be removed in Octave 7.0.  Use a string argument instead.
 
+ ** The environment variable used by mkoctfile for linker flags is now
+    LDFLAGS rather than LFLAGS.  LFLAGS is deprecated, and a warning
+    is emitted if is used, but it will continue to work until eventual
+    removal in Octave 7.0.
+
 
 
 
  ** Deprecated functions.
 
     The following functions have been deprecated in Octave 6.0 and will
     be removed from Octave 8 (or whatever version is the second major
     release after 6.0):
diff --git a/etc/NEWS.5 b/etc/NEWS.5
--- a/etc/NEWS.5
+++ b/etc/NEWS.5
@@ -165,16 +165,21 @@ Summary of important user-visible change
     reproduce figures as they appeared in previous versions of Octave.
 
  ** Specifying legend position with a numeric argument is deprecated and
     will be removed in Octave 7.0.  Use a string argument instead.
 
  ** It is now possible to use files and folders containing Unicode
     characters in Windows.
 
+ ** The environment variable used by mkoctfile for linker flags is now
+    LDFLAGS rather than LFLAGS.  LFLAGS is deprecated, and a warning
+    is emitted if is used, but it will continue to work until eventual
+    removal in Octave 7.0.
+
  ** The GUI requires Qt libraries.  The minimum Qt4 version supported is
     Qt4.8.  Qt5 of any version is preferred.
 
  ** The FFTW library is now required to perform FFT calculations.
     The FFTPACK sources have been removed from Octave.
 
  ** The OSMesa library is no longer used.  To print invisible figures
     when using OpenGL graphics, the Qt QOFFSCREENSURFACE feature must be
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -2331,17 +2331,17 @@ namespace octave
       {
         QVector<uint> u32_str = editor_text.toUcs4 ();
         const uint32_t *src = reinterpret_cast<const uint32_t *>
                               (u32_str.data ());
 
         size_t length;
         char *res_str =
           octave_u32_conv_to_encoding_strict (_encoding.toStdString ().c_str (),
-                                              src, u32_str.length (), &length);
+                                              src, u32_str.size (), &length);
         if (! res_str)
           {
             if (errno == EILSEQ)
               can_encode = false;
           }
         else
           ::free (static_cast<void *> (res_str));
       }
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -1,12 +1,12 @@
 /*
 
 Copyright (C) 2012-2019 Richard Crozier
-Copyright (C) 2013-2019 Torsten <ttl@justmail.de>
+Copyright (C) 2013-2019 Torsten <mttl@mailbox.org>
 
 This file is part of Octave.
 
 Octave is free software: you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
@@ -438,26 +438,29 @@ namespace octave
       m_icon_color = "";
 
     bcola.getRgb (&r, &g, &b);
     if (r+g+b < 400)
       m_icon_color_active = "-light";
     else
       m_icon_color_active = "";
 
-    QRect available_size = QApplication::desktop ()->availableGeometry ();
+    QRect available_size = QApplication::desktop ()->availableGeometry (m_parent);
     int x1, y1, x2, y2;
     available_size.getCoords (&x1, &y1, &x2, &y2);
     QRect default_size = QRect (x1, y1, x2/3, y2/2);
 
     m_recent_float_geom = settings->value ("DockWidgets/" + objectName ()
                                            + "_floating_geometry",
                                            default_size).toRect ();
 
-    if (! available_size.contains (m_recent_float_geom, false))
+    QWidget dummy;
+    dummy.setGeometry (m_recent_float_geom);
+
+    if (QApplication::desktop ()->screenNumber (&dummy) == -1)
       m_recent_float_geom = default_size;
 
     m_recent_dock_geom = settings->value ("DockWidgets/" + objectName (),
                                           QByteArray ()).toByteArray ();
 
     notice_settings (settings);  // call individual handler
 
     set_style (false);
diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -593,18 +593,16 @@ bitshift (10, [-2, -1, 0, 1, 2])
     {
       static const int bits_in_mantissa
         = std::numeric_limits<double>::digits;
 
       nbits = (nbits < bits_in_mantissa ? nbits : bits_in_mantissa);
       int64_t mask = max_mantissa_value<double> ();
       if (nbits < bits_in_mantissa)
         mask = mask >> (bits_in_mantissa - nbits);
-      else if (nbits < 1)
-        mask = 0;
       int bits_in_type = sizeof (double)
                          * std::numeric_limits<unsigned char>::digits;
       NDArray m = m_arg.array_value ();
       DO_BITSHIFT ();
     }
   else if (cname == "uint8")
     DO_UBITSHIFT (uint8, nbits < 8 ? nbits : 8);
   else if (cname == "uint16")
@@ -624,18 +622,16 @@ bitshift (10, [-2, -1, 0, 1, 2])
   else if (cname == "single")
     {
       static const int bits_in_mantissa
         = std::numeric_limits<float>::digits;
       nbits = (nbits < bits_in_mantissa ? nbits : bits_in_mantissa);
       int64_t mask = max_mantissa_value<float> ();
       if (nbits < bits_in_mantissa)
         mask = mask >> (bits_in_mantissa - nbits);
-      else if (nbits < 1)
-        mask = 0;
       int bits_in_type = sizeof (float)
                          * std::numeric_limits<unsigned char>::digits;
       FloatNDArray m = m_arg.float_array_value ();
       DO_BITSHIFT (Float);
     }
   else
     error ("bitshift: not defined for %s objects", cname.c_str ());
 
diff --git a/libinterp/corefcn/dynamic-ld.cc b/libinterp/corefcn/dynamic-ld.cc
--- a/libinterp/corefcn/dynamic-ld.cc
+++ b/libinterp/corefcn/dynamic-ld.cc
@@ -220,43 +220,40 @@ namespace octave
 
         if (mex_file)
           m_loaded_shlibs.append (mex_file);
       }
 
     if (! mex_file)
       error ("%s is not a valid shared library", file_name.c_str ());
 
-    void *function = nullptr;
-
     bool have_fmex = false;
 
-    function = mex_file.search (fcn_name, mex_mangler);
+    void *function = mex_file.search (fcn_name, mex_mangler);
 
     if (! function)
       {
-        // FIXME: can we determine this C mangling scheme
-        // automatically at run time or configure time?
-
+        // FIXME: Can we determine this C mangling scheme
+        //        automatically at run time or configure time?
         function = mex_file.search (fcn_name, mex_uscore_mangler);
 
         if (! function)
           {
             function = mex_file.search (fcn_name, mex_f77_mangler);
 
             if (function)
               have_fmex = true;
           }
       }
 
-    if (function)
-      retval = new octave_mex_function (function, have_fmex, mex_file, fcn_name);
-    else
+    if (! function)
       error ("failed to install .mex file function '%s'", fcn_name.c_str ());
 
+    retval = new octave_mex_function (function, have_fmex, mex_file, fcn_name);
+
     return retval;
   }
 
   bool
   dynamic_loader::remove_oct (const std::string& fcn_name,
                               dynamic_library& shl)
   {
     bool retval = false;
@@ -274,30 +271,18 @@ namespace octave
 
     return retval;
   }
 
   bool
   dynamic_loader::remove_mex (const std::string& fcn_name,
                               dynamic_library& shl)
   {
-    bool retval = false;
-
-    // We don't need to do anything if this is called because we are in
-    // the process of reloading a .oct file that has changed.
-
-    if (! m_doing_load)
-      {
-        retval = shl.remove (fcn_name);
-
-        if (shl.number_of_functions_loaded () == 0)
-          m_loaded_shlibs.remove (shl);
-      }
-
-    return retval;
+    // Use the same procedure as for oct files.
+    return remove_oct (fcn_name, shl);
   }
 
   std::string
   dynamic_loader::name_mangler (const std::string& name)
   {
     return 'G' + name;
   }
 
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1548,17 +1548,17 @@ namespace octave
         set_color (props.get_xcolor_rgb ());
 
         // axis line
         double y_axis_pos = 0.;
         if (is_origin)
           {
             y_axis_pos = math::max (math::min (0., y_max), y_min);
             m_glfcns.glBegin (GL_LINES);
-            set_color (props.get_ycolor_rgb ());
+            set_color (props.get_xcolor_rgb ());
             m_glfcns.glVertex3d (x_min, y_axis_pos, zpTick);
             m_glfcns.glVertex3d (x_max, y_axis_pos, zpTick);
             m_glfcns.glEnd ();
           }
 
         // minor tick marks
         if (do_xminortick)
           {
diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2223,32 +2223,34 @@ public:
   // If the pointer is NULL, allocate using malloc.
   // We don't need an "unmarked" version of this.
   void * realloc (void *ptr, size_t n)
   {
     void *v;
 
     if (ptr)
       {
+        auto p_local = memlist.find (ptr);
+        auto p_global = global_memlist.find (ptr);
+
         v = std::realloc (ptr, n);
 
-        auto p = memlist.find (ptr);
-
-        if (v && p != memlist.end ())
+        if (v)
           {
-            memlist.erase (p);
-            memlist.insert (v);
-          }
-
-        p = global_memlist.find (ptr);
-
-        if (v && p != global_memlist.end ())
-          {
-            global_memlist.erase (p);
-            global_memlist.insert (v);
+            if (p_local != memlist.end ())
+              {
+                memlist.erase (p_local);
+                memlist.insert (v);
+              }
+
+            if (p_global != global_memlist.end ())
+              {
+                global_memlist.erase (p_global);
+                global_memlist.insert (v);
+              }
           }
       }
     else
       v = malloc (n);
 
     return v;
   }
 
diff --git a/libinterp/corefcn/syminfo.cc b/libinterp/corefcn/syminfo.cc
--- a/libinterp/corefcn/syminfo.cc
+++ b/libinterp/corefcn/syminfo.cc
@@ -94,19 +94,16 @@ namespace octave
                     os << std::setiosflags (std::ios::left)
                        << std::setw (param.parameter_length);
                   }
                 break;
 
               default:
                 error ("whos_line_format: modifier '%c' unknown",
                        param.modifier);
-
-                os << std::setiosflags (std::ios::right)
-                   << std::setw (param.parameter_length);
               }
 
             switch (param.command)
               {
               case 'a':
                 {
                   char tmp[6];
 
@@ -275,35 +272,32 @@ namespace octave
                 os << std::setiosflags (std::ios::left)
                    << std::setw (param.parameter_length);
                 param_buf << std::setiosflags (std::ios::left)
                           << std::setw (param.parameter_length);
               }
 
             if (param.command == 's' && param.modifier == 'c')
               {
-                if (param.modifier == 'c')
-                  {
-                    int a = param.first_parameter_length - param.balance;
-                    a = (a < 0 ? 0 : a);
-                    int b = param.parameter_length - a - param.text.length ();
-                    b = (b < 0 ? 0 : b);
-                    os << std::setiosflags (std::ios::left) << std::setw (a)
-                       << "" << std::resetiosflags (std::ios::left) << param.text
-                       << std::setiosflags (std::ios::left)
-                       << std::setw (b) << ""
-                       << std::resetiosflags (std::ios::left);
-                    param_buf << std::setiosflags (std::ios::left)
-                              << std::setw (a)
-                              << "" << std::resetiosflags (std::ios::left)
-                              << param.line
-                              << std::setiosflags (std::ios::left)
-                              << std::setw (b) << ""
-                              << std::resetiosflags (std::ios::left);
-                  }
+                int a = param.first_parameter_length - param.balance;
+                a = (a < 0 ? 0 : a);
+                int b = param.parameter_length - a - param.text.length ();
+                b = (b < 0 ? 0 : b);
+                os << std::setiosflags (std::ios::left) << std::setw (a)
+                   << "" << std::resetiosflags (std::ios::left) << param.text
+                   << std::setiosflags (std::ios::left)
+                   << std::setw (b) << ""
+                   << std::resetiosflags (std::ios::left);
+                param_buf << std::setiosflags (std::ios::left)
+                          << std::setw (a)
+                          << "" << std::resetiosflags (std::ios::left)
+                          << param.line
+                          << std::setiosflags (std::ios::left)
+                          << std::setw (b) << ""
+                          << std::resetiosflags (std::ios::left);
               }
             else
               {
                 os << param.text;
                 param_buf << param.line;
               }
             os << std::resetiosflags (std::ios::left)
                << std::resetiosflags (std::ios::right);
@@ -426,17 +420,16 @@ namespace octave
     idx = 0;
     while (static_cast<size_t> (idx) < format_len)
       {
         whos_parameter param;
         param.command = '\0';
 
         if (format[idx] == '%')
           {
-            bool error_encountered = false;
             param.modifier = 'r';
             param.parameter_length = 0;
 
             int a = 0;
             int b = -1;
             int balance = 1;
             unsigned int items;
             size_t pos;
@@ -541,19 +534,17 @@ namespace octave
                                             : param.first_parameter_length);
             param.parameter_length = (a < 0
                                       ? 0
                                       : (param.parameter_length
                                          < param_length(pos_s)
                                          ? param_length(pos_s)
                                          : param.parameter_length));
 
-            // Parameter will not be pushed into parameter list if ...
-            if (! error_encountered)
-              params.push_back (param);
+            params.push_back (param);
           }
         else
           {
             // Text string, to be printed as it is ...
             std::string text;
             size_t pos;
             text = format.substr (idx, format.length ());
             pos = text.find ('%');
diff --git a/libinterp/corefcn/text-renderer.h b/libinterp/corefcn/text-renderer.h
--- a/libinterp/corefcn/text-renderer.h
+++ b/libinterp/corefcn/text-renderer.h
@@ -130,30 +130,31 @@ namespace octave
 
       string (const std::string& s, font& f, const double x0, const double y0)
         : str (s), family (f.get_name ()), fnt (f), x (x0), y (y0), z (0.0),
           xdata (), code (0), color (Matrix (1,3,0.0))
       { }
 
       string (const string& s)
         : str (s.str), family (s.family), fnt (s.fnt), x (s.x), y (s.y),
-          xdata (s.xdata), code (s.code), color (s.color)
+          z (s.z), xdata (s.xdata), code (s.code), color (s.color)
       { }
 
       ~string (void) = default;
 
       string& operator = (const string& s)
       {
         if (&s != this)
           {
             str = s.str;
             family = s.family;
             fnt = s.fnt;
             x = s.x;
             y = s.y;
+            z = s.z;
             xdata = s.xdata;
             code = s.code;
             color = s.color;
           }
 
         return *this;
       }
 
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -117,19 +117,17 @@ is_valid_function (const octave_value& a
   return ans;
 }
 
 octave_function *
 extract_function (const octave_value& arg, const std::string& warn_for,
                   const std::string& fname, const std::string& header,
                   const std::string& trailer)
 {
-  octave_function *retval = nullptr;
-
-  retval = is_valid_function (arg, warn_for, 0);
+  octave_function *retval = is_valid_function (arg, warn_for, 0);
 
   if (! retval)
     {
       std::string s = arg.xstring_value ("%s: argument must be a string",
                                          warn_for.c_str ());
 
       std::string cmd = header;
       cmd.append (s);
@@ -1267,17 +1265,17 @@ Executing @code{clear foo} a second time
   octave::symbol_table& symtab = interp.get_symbol_table ();
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("clear");
 
   if (argc == 1)
     {
-      do_clear_variables (symtab, argv, argc, true);
+      do_clear_variables (symtab, argv, argc, argc);
 
       octave_link::clear_workspace ();
     }
   else
     {
       int idx = 0;
 
       bool clear_all = false;
diff --git a/libinterp/octave-value/ov-builtin.h b/libinterp/octave-value/ov-builtin.h
--- a/libinterp/octave-value/ov-builtin.h
+++ b/libinterp/octave-value/ov-builtin.h
@@ -45,18 +45,18 @@ namespace octave
 // Builtin functions.
 
 class
 OCTINTERP_API
 octave_builtin : public octave_function
 {
 public:
 
-  octave_builtin (void) : octave_function (), f (nullptr), file (),
-                          jtype (nullptr)
+  octave_builtin (void) : octave_function (), f (nullptr), m (nullptr),
+                          file (), jtype (nullptr)
   { }
 
   typedef octave_value_list (*meth) (octave::interpreter&,
                                      const octave_value_list&, int);
 
   typedef octave_value_list (*fcn) (const octave_value_list&, int);
 
   octave_builtin (fcn ff, const std::string& nm = "",
diff --git a/libinterp/octave-value/ov-range.h b/libinterp/octave-value/ov-range.h
--- a/libinterp/octave-value/ov-range.h
+++ b/libinterp/octave-value/ov-range.h
@@ -150,17 +150,17 @@ public:
 
   sortmode issorted (sortmode mode = UNSORTED) const
   { return range.issorted (mode); }
 
   Array<octave_idx_type> sort_rows_idx (sortmode) const
   { return Array<octave_idx_type> (dim_vector (1, 0)); }
 
   sortmode is_sorted_rows (sortmode mode = UNSORTED) const
-  { return mode ? mode : ASCENDING; }
+  { return (mode == UNSORTED) ? ASCENDING : mode; }
 
   builtin_type_t builtin_type (void) const { return btyp_double; }
 
   bool isreal (void) const { return true; }
 
   bool is_double_type (void) const { return true; }
 
   bool isfloat (void) const { return true; }
diff --git a/libinterp/parse-tree/oct-parse.yy b/libinterp/parse-tree/oct-parse.yy
--- a/libinterp/parse-tree/oct-parse.yy
+++ b/libinterp/parse-tree/oct-parse.yy
@@ -5394,16 +5394,33 @@ namespace octave
     if (*lst)
       {
         delete *lst;
         *lst = nullptr;
       }
   }
 }
 
+octave_value_list
+eval_string (const std::string& str, bool silent, int& parse_status,
+             int nargout)
+{
+  octave::interpreter& interp = octave::__get_interpreter__ ("eval_string");
+
+  return interp.eval_string (str, silent, parse_status, nargout);
+}
+
+octave_value
+eval_string (const std::string& str, bool silent, int& parse_status)
+{
+  octave::interpreter& interp = octave::__get_interpreter__ ("eval_string");
+
+  return interp.eval_string (str, silent, parse_status);
+}
+
 DEFMETHOD (eval, interp, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} eval (@var{try})
 @deftypefnx {} {} eval (@var{try}, @var{catch})
 Parse the string @var{try} and evaluate it as if it were an Octave
 program.
 
 If execution fails, evaluate the optional string @var{catch}.
diff --git a/libinterp/parse-tree/parse.h b/libinterp/parse-tree/parse.h
--- a/libinterp/parse-tree/parse.h
+++ b/libinterp/parse-tree/parse.h
@@ -587,9 +587,18 @@ namespace octave
   OCTAVE_DEPRECATED (5, "use 'octave::interpreter::eval_string' instead")
   extern OCTINTERP_API octave_value
   eval_string (const std::string&, bool silent, int& parse_status);
 
   extern OCTINTERP_API void
   cleanup_statement_list (tree_statement_list **lst);
 }
 
+OCTAVE_DEPRECATED (4.4, "use 'octave::interpreter::eval_string' instead")
+extern OCTINTERP_API octave_value_list
+eval_string (const std::string& str, bool silent, int& parse_status,
+             int nargout);
+
+OCTAVE_DEPRECATED (4.4, "use 'octave::interpreter::eval_string' instead")
+extern OCTINTERP_API octave_value
+eval_string (const std::string& str, bool silent, int& parse_status);
+
 #endif
diff --git a/libinterp/parse-tree/token.cc b/libinterp/parse-tree/token.cc
--- a/libinterp/parse-tree/token.cc
+++ b/libinterp/parse-tree/token.cc
@@ -79,21 +79,19 @@ namespace octave
       m_tok_val (tv), m_type_tag (scls_name_token),
       m_tok_info (method_nm, class_nm), m_orig_text ()
   { }
 
   token::~token (void)
   {
     if (m_type_tag == string_token)
       delete m_tok_info.m_str;
-
-    if (m_type_tag == sym_rec_token)
+    else if (m_type_tag == sym_rec_token)
       delete m_tok_info.m_sr;
-
-    if (m_type_tag == scls_name_token)
+    else if (m_type_tag == scls_name_token)
       delete m_tok_info.m_superclass_info;
   }
 
   std::string
   token::text (void) const
   {
     assert (m_type_tag == string_token);
     return *m_tok_info.m_str;
diff --git a/liboctave/array/Array-d.cc b/liboctave/array/Array-d.cc
--- a/liboctave/array/Array-d.cc
+++ b/liboctave/array/Array-d.cc
@@ -97,19 +97,19 @@ OCTAVE_API
 sortmode
 Array<double>::issorted (sortmode mode) const
 {
   octave_idx_type n = numel ();
 
   const double *el = data ();
 
   if (n <= 1)
-    return mode ? mode : ASCENDING;
+    return (mode == UNSORTED) ? ASCENDING : mode;
 
-  if (! mode)
+  if (mode == UNSORTED)
     {
       // Auto-detect mode.
       if (el[n-1] < el[0] || octave::math::isnan (el[0]))
         mode = DESCENDING;
       else
         mode = ASCENDING;
     }
 
diff --git a/liboctave/array/Array-f.cc b/liboctave/array/Array-f.cc
--- a/liboctave/array/Array-f.cc
+++ b/liboctave/array/Array-f.cc
@@ -97,19 +97,19 @@ OCTAVE_API
 sortmode
 Array<float>::issorted (sortmode mode) const
 {
   octave_idx_type n = numel ();
 
   const float *el = data ();
 
   if (n <= 1)
-    return mode ? mode : ASCENDING;
+    return (mode == UNSORTED) ? ASCENDING : mode;
 
-  if (! mode)
+  if (mode == UNSORTED)
     {
       // Auto-detect mode.
       if (el[n-1] < el[0] || octave::math::isnan (el[0]))
         mode = DESCENDING;
       else
         mode = ASCENDING;
     }
 
diff --git a/liboctave/array/MatrixType.cc b/liboctave/array/MatrixType.cc
--- a/liboctave/array/MatrixType.cc
+++ b/liboctave/array/MatrixType.cc
@@ -183,17 +183,17 @@ matrix_complex_probe (const MArray<std::
         }
 
       if (upper)
         typ = MatrixType::Upper;
       else if (lower)
         typ = MatrixType::Lower;
       else if (hermitian)
         typ = MatrixType::Hermitian;
-      else if (ncols == nrows)
+      else
         typ = MatrixType::Full;
     }
   else
     typ = MatrixType::Rectangular;
 
   return typ;
 }
 
diff --git a/liboctave/array/Range.cc b/liboctave/array/Range.cc
--- a/liboctave/array/Range.cc
+++ b/liboctave/array/Range.cc
@@ -334,17 +334,17 @@ Range::sort (Array<octave_idx_type>& sid
 sortmode
 Range::issorted (sortmode mode) const
 {
   if (rng_numel > 1 && rng_inc > 0)
     mode = (mode == DESCENDING) ? UNSORTED : ASCENDING;
   else if (rng_numel > 1 && rng_inc < 0)
     mode = (mode == ASCENDING) ? UNSORTED : DESCENDING;
   else
-    mode = (mode ? mode : ASCENDING);
+    mode = (mode == UNSORTED) ? ASCENDING : mode;
 
   return mode;
 }
 
 void
 Range::set_base (double b)
 {
   if (rng_base != b)
diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -1589,17 +1589,17 @@ namespace octave
               if (c[n]/a[n] < std::numeric_limits<double>::epsilon ()) break;
             }
           if (n >= Nmax - 1)
             {
               err = 1;
               return;
             }
           Nn = n;
-          for (ii = 1; n > 0; ii = ii*2, --n) ; // ii = pow(2,Nn)
+          for (ii = 1; n > 0; ii *= 2, --n) {}  // ii = pow(2,Nn)
           phi = ii*a[Nn]*u;
           for (n = Nn; n > 0; --n)
             {
               phi = (std::asin ((c[n]/a[n])* sin (phi)) + phi)/2;
             }
           sn = sin (phi);
           cn = cos (phi);
           dn = std::sqrt (1 - m*sn*sn);
diff --git a/liboctave/numeric/oct-rand.cc b/liboctave/numeric/oct-rand.cc
--- a/liboctave/numeric/oct-rand.cc
+++ b/liboctave/numeric/oct-rand.cc
@@ -88,17 +88,17 @@ namespace octave
       }
 
     return u.d;
   }
 
   static int32_t
   force_to_fit_range (int32_t i, int32_t lo, int32_t hi)
   {
-    assert (hi > lo && lo >= 0 && hi > lo);
+    assert (hi > lo && lo >= 0);
 
     i = (i > 0 ? i : -i);
 
     if (i < lo)
       i = lo;
     else if (i > hi)
       i = i % hi;
 
diff --git a/liboctave/numeric/randgamma.cc b/liboctave/numeric/randgamma.cc
--- a/liboctave/numeric/randgamma.cc
+++ b/liboctave/numeric/randgamma.cc
@@ -105,17 +105,17 @@ namespace octave
       }
 
     for (i=0; i < n; i++)
       {
         T x, xsq, v, u;
       restart:
         x = rand_normal<T> ();
         v = (1+c*x);
-        v *= v*v;
+        v *= (v*v);
         if (v <= 0)
           goto restart; /* rare, so don't bother moving up */
         u = rand_uniform<T> ();
         xsq = x*x;
         if (u >= 1.-0.0331*xsq*xsq && std::log (u) >= 0.5*xsq + d*(1-v+std::log (v)))
           goto restart;
         r[i] = d*v;
       }
diff --git a/liboctave/util/lo-ieee.cc b/liboctave/util/lo-ieee.cc
--- a/liboctave/util/lo-ieee.cc
+++ b/liboctave/util/lo-ieee.cc
@@ -125,17 +125,17 @@ lo_ieee_float_nan_value (void)
   octave_ieee_init ();
 
   return lo_float_nan;
 }
 
 void
 octave_ieee_init (void)
 {
-  bool initialized = false;
+  static bool initialized = false;
 
   if (! initialized)
     {
       octave::mach_info::float_format ff = octave::mach_info::native_float_format ();
 
       switch (ff)
         {
         case octave::mach_info::flt_fmt_ieee_big_endian:
@@ -175,17 +175,17 @@ octave_ieee_init (void)
 
         default:
           // If the format is unknown, then you will probably not have a
           // useful system, so we will abort here.  Anyone wishing to
           // experiment with building Octave on a system without IEEE
           // floating point should be capable of removing this check and
           // the configure test.
           //
-          // If the the error handler returns, then we'll abort.
+          // If the error handler returns, then we'll abort.
 
           (*current_liboctave_error_handler)
             ("lo_ieee_init: floating point format is not IEEE!  Maybe DLAMCH is miscompiled, or you are using some strange system without IEEE floating point math?");
 
           abort ();
         }
 
       initialized = true;
diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -97,31 +97,40 @@ octave_fgets (FILE *f, bool& eof)
   eof = false;
 
   std::string retval;
 
   int grow_size = 1024;
   int max_size = grow_size;
 
   char *buf = static_cast<char *> (std::malloc (max_size));
+  if (! buf)
+    (*current_liboctave_error_handler) ("octave_fgets: unable to malloc %d bytes", max_size);
+
   char *bufptr = buf;
   int len = 0;
 
   do
     {
       if (std::fgets (bufptr, grow_size, f))
         {
           len = strlen (bufptr);
 
           if (len == grow_size - 1)
             {
               int tmp = bufptr - buf + grow_size - 1;
               grow_size *= 2;
               max_size += grow_size;
-              buf = static_cast<char *> (std::realloc (buf, max_size));
+              auto tmpbuf = static_cast<char *> (std::realloc (buf, max_size));
+              if (! tmpbuf)
+                {
+                  free (buf);
+                  (*current_liboctave_error_handler) ("octave_fgets: unable to realloc %d bytes", max_size);
+                }
+              buf = tmpbuf;
               bufptr = buf + tmp;
 
               if (*(bufptr-1) == '\n')
                 {
                   *bufptr = '\0';
                   retval = buf;
                 }
             }
diff --git a/liboctave/wrappers/getopt-wrapper.c b/liboctave/wrappers/getopt-wrapper.c
--- a/liboctave/wrappers/getopt-wrapper.c
+++ b/liboctave/wrappers/getopt-wrapper.c
@@ -45,16 +45,21 @@ make_option_struct (const struct octave_
   while (p->name)
     {
       n++;
       p++;
     }
 
   retval = (struct option *) malloc ((n+1) * sizeof (struct option));
 
+  // If we don't have enough memory even to start Octave
+  // then we might as well quit now.
+  if (! retval)
+    abort ();
+
   p = opts;
   q = retval;
   while (p->name)
     {
       q->name = p->name;
 
       switch (p->has_arg)
         {
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -207,28 +207,27 @@ initialize (void)
   std::string DEFAULT_INCFLAGS
     = "-I" + quote_path (vars["OCTINCLUDEDIR"] + "/..")
       + " -I" + quote_path (vars["OCTINCLUDEDIR"]);
 #endif
 
   if (vars["INCLUDEDIR"] != "/usr/include")
     DEFAULT_INCFLAGS += " -I" + quote_path (vars["INCLUDEDIR"]);
 
-  std::string DEFAULT_LFLAGS;
+  std::string DEFAULT_LDFLAGS;
 
 #if (defined (OCTAVE_USE_WINDOWS_API) || defined (CROSS)) || (defined __APPLE__ && defined __MACH__)
 
-  // We'll be linking the files we compile with -loctinterp and
-  // -loctave, so we need to know where to find them.
-
-  DEFAULT_LFLAGS += "-L" + quote_path (vars["OCTLIBDIR"]);
+  // We'll be linking the files we compile with -loctinterp and -loctave,
+  // so we need to know where to find them.
+  DEFAULT_LDFLAGS += "-L" + quote_path (vars["OCTLIBDIR"]);
 #endif
 
   if (vars["LIBDIR"] != "/usr/lib")
-    DEFAULT_LFLAGS += " -L" + quote_path (vars["LIBDIR"]);
+    DEFAULT_LDFLAGS += " -L" + quote_path (vars["LIBDIR"]);
 
   vars["CPPFLAGS"] = get_variable ("CPPFLAGS", %OCTAVE_CONF_CPPFLAGS%);
 
   vars["INCFLAGS"] = get_variable ("INCFLAGS", DEFAULT_INCFLAGS);
 
   vars["F77"] = get_variable ("F77", %OCTAVE_CONF_MKOCTFILE_F77%);
 
   vars["FFLAGS"] = get_variable ("FFLAGS", %OCTAVE_CONF_FFLAGS%);
@@ -302,24 +301,25 @@ initialize (void)
                                            %OCTAVE_CONF_OCTAVE_LINK_OPTS%);
 
   vars["OCT_LINK_DEPS"] = get_variable ("OCT_LINK_DEPS",
                                         %OCTAVE_CONF_MKOCTFILE_OCT_LINK_DEPS%);
 
   vars["OCT_LINK_OPTS"] = get_variable ("OCT_LINK_OPTS",
                                         %OCTAVE_CONF_OCT_LINK_OPTS%);
 
-  vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
+  vars["LDFLAGS"] = get_variable ("LDFLAGS", DEFAULT_LDFLAGS);
 
-  vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
+  vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
 
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG",
                                          %OCTAVE_CONF_LD_STATIC_FLAG%);
 
-  vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LFLAGS);
+  // FIXME: Remove LFLAGS in Octave 7.0
+  vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LDFLAGS);
 
   vars["F77_INTEGER8_FLAG"] = get_variable ("F77_INTEGER8_FLAG",
                                             %OCTAVE_CONF_F77_INTEGER_8_FLAG%);
   vars["ALL_FFLAGS"] = vars["FFLAGS"] + ' ' + vars["F77_INTEGER8_FLAG"];
 
   vars["ALL_CFLAGS"]
     = vars["INCFLAGS"] + ' ' + vars["XTRA_CFLAGS"] + ' ' + vars["CFLAGS"];
 
@@ -382,36 +382,35 @@ static std::string help_msg =
 "\n"
 "  -p VAR, --print VAR     Print configuration variable VAR.  There are\n"
 "                          three categories of variables:\n"
 "\n"
 "                          Octave configuration variables that users may\n"
 "                          override with environment variables.  These are\n"
 "                          used in commands that mkoctfile executes.\n"
 "\n"
-"                            ALL_CFLAGS                  LAPACK_LIBS\n"
-"                            ALL_CXXFLAGS                LDFLAGS\n"
-"                            ALL_FFLAGS                  LD_CXX\n"
-"                            ALL_LDFLAGS                 LD_STATIC_FLAG\n"
-"                            BLAS_LIBS                   LFLAGS\n"
+"                            ALL_CFLAGS                  INCLUDEDIR\n"
+"                            ALL_CXXFLAGS                LAPACK_LIBS\n"
+"                            ALL_FFLAGS                  LDFLAGS\n"
+"                            ALL_LDFLAGS                 LD_CXX\n"
+"                            BLAS_LIBS                   LD_STATIC_FLAG\n"
 "                            CC                          LIBDIR\n"
 "                            CFLAGS                      LIBOCTAVE\n"
 "                            CPICFLAG                    LIBOCTINTERP\n"
 "                            CPPFLAGS                    OCTAVE_LINK_OPTS\n"
 "                            CXX                         OCTINCLUDEDIR\n"
 "                            CXXFLAGS                    OCTAVE_LIBS\n"
 "                            CXXPICFLAG                  OCTAVE_LINK_DEPS\n"
 "                            DL_LD                       OCTLIBDIR\n"
 "                            DL_LDFLAGS                  OCT_LINK_DEPS\n"
 "                            F77                         OCT_LINK_OPTS\n"
 "                            F77_INTEGER8_FLAG           RDYNAMIC_FLAG\n"
 "                            FFLAGS                      SPECIAL_MATH_LIB\n"
 "                            FPICFLAG                    XTRA_CFLAGS\n"
 "                            INCFLAGS                    XTRA_CXXFLAGS\n"
-"                            INCLUDEDIR\n"
 "\n"
 "                          Octave configuration variables as above, but\n"
 "                          currently unused by mkoctfile.\n"
 "\n"
 "                            AR\n"
 "                            DEPEND_EXTRA_SED_PATTERN\n"
 "                            DEPEND_FLAGS\n"
 "                            FFTW3F_LDFLAGS\n"
@@ -716,17 +715,17 @@ main (int argc, char **argv)
                       << std::endl;
         }
       else if (starts_with (arg, "-D"))
         {
           defs += (' ' + arg);
         }
       else if (arg == "-largeArrayDims" || arg == "-compatibleArrayDims")
         {
-          std::cout << "warning: -largeArrayDims and -compatibleArrayDims are accepted for compatibility, but ignored" << std::endl;
+          std::cerr << "warning: -largeArrayDims and -compatibleArrayDims are accepted for compatibility, but ignored" << std::endl;
         }
       else if (starts_with (arg, "-Wl,") || starts_with (arg, "-l")
                || starts_with (arg, "-L") || starts_with (arg, "-R"))
         {
           ldflags += (' ' + arg);
         }
 #if ! defined (OCTAVE_USE_WINDOWS_API)
       else if (arg == "-pthread")
@@ -754,16 +753,20 @@ main (int argc, char **argv)
         {
           printonly = true;
         }
       else if (arg == "-p" || arg == "-print" || arg == "--print")
         {
           if (i < argc-1)
             {
               arg = argv[++i];
+              // FIXME: Remove LFLAGS checking in Octave 7.0
+              if (arg == "LFLAGS")
+                std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
+
               std::cout << vars[arg] << std::endl;
               return 0;
             }
           else
             std::cerr << "mkoctfile: --print requires argument" << std::endl;
         }
       else if (arg == "-s" || arg == "-strip" || arg == "--strip")
         {
@@ -1055,42 +1058,50 @@ main (int argc, char **argv)
       else
         {
           std::cerr << "mkoctfile: no way to compile C++ file " << f
                     << std::endl;
           return 1;
         }
     }
 
-  // If we are only compliling, we are done.
+  // If we are only compiling, we are done.
 
   if (compile_only)
     return 0;
 
   if (objfiles.empty ())
     {
       std::cerr << "mkoctfile: no objects to link" << std::endl;
       return 1;
     }
 
+  // FIXME: Remove LFLAGS in Octave 7.0
+  if (vars["LFLAGS"] != vars["LDFLAGS"])
+    {
+      std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
+      vars["LDFLAGS"] = vars["LFLAGS"];
+    }
+
   std::string octave_libs;
-#if defined (OCTAVE_USE_WINDOWS_API) || defined(CROSS)
-  octave_libs = "-loctinterp -loctave";
-#endif
 
   if (link_stand_alone)
     {
       if (! vars["LD_CXX"].empty ())
         {
+          octave_libs = vars["OCTAVE_LIBS"];
+
           std::string cmd
             = (vars["LD_CXX"] + ' ' + vars["CPPFLAGS"] + ' '
                + vars["ALL_CXXFLAGS"] + ' ' + vars["RDYNAMIC_FLAG"] + ' '
                + vars["ALL_LDFLAGS"] + ' ' + pass_on_options + ' '
                + output_option + ' ' + objfiles + ' ' + libfiles + ' '
-               + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
+               + ldflags + ' ' + vars["LDFLAGS"]
+               + " -L" + quote_path (vars["OCTLIBDIR"])
+               + ' ' + octave_libs + ' '
                + vars["OCTAVE_LINK_OPTS"] + ' ' + vars["OCTAVE_LINK_DEPS"]);
 
           int status = run_command (cmd, printonly);
 
           clean_up_tmp_files (tmp_objfiles);
 
           if (status)
             return status;
@@ -1100,21 +1111,25 @@ main (int argc, char **argv)
           std::cerr
             << "mkoctfile: no way to link stand-alone executable file"
             << std::endl;
           return 1;
         }
     }
   else
     {
+#if defined (OCTAVE_USE_WINDOWS_API) || defined(CROSS)
+      octave_libs = vars["OCTAVE_LIBS"];
+#endif
+
       std::string cmd
         = (vars["DL_LD"] + ' ' + vars["ALL_CXXFLAGS"] + ' '
            + vars["DL_LDFLAGS"] + ' ' + pass_on_options
            + " -o " + octfile + ' ' + objfiles + ' ' + libfiles + ' '
-           + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
+           + ldflags + ' ' + vars["LDFLAGS"] + ' ' + octave_libs + ' '
            + vars["OCT_LINK_OPTS"] + ' ' + vars["OCT_LINK_DEPS"]);
 
       int status = run_command (cmd, printonly);
 
       clean_up_tmp_files (tmp_objfiles);
 
       if (status)
         return status;
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -53,29 +53,33 @@ DIRSTAMP_FILES += %reldir%/$(octave_dirs
 
 include %reldir%/bug-35448/module.mk
 include %reldir%/bug-35881/module.mk
 include %reldir%/bug-36025/module.mk
 include %reldir%/bug-38236/module.mk
 include %reldir%/bug-38691/module.mk
 include %reldir%/bug-41723/module.mk
 include %reldir%/bug-44940/module.mk
+include %reldir%/bug-45969/module.mk
 include %reldir%/bug-45972/module.mk
 include %reldir%/bug-46660/module.mk
 include %reldir%/bug-49379/module.mk
 include %reldir%/bug-50014/module.mk
 include %reldir%/bug-50035/module.mk
 include %reldir%/bug-50716/module.mk
 include %reldir%/bug-51192/module.mk
 include %reldir%/bug-51532/module.mk
 include %reldir%/bug-51534/module.mk
 include %reldir%/bug-51599/module.mk
 include %reldir%/bug-52075/module.mk
 include %reldir%/bug-52722/module.mk
 include %reldir%/bug-53027/module.mk
+include %reldir%/bug-55308/module.mk
+include %reldir%/bug-55321/module.mk
+include %reldir%/bug-55322/module.mk
 include %reldir%/class-concat/module.mk
 include %reldir%/classdef/module.mk
 include %reldir%/classdef-multiple-inheritance/module.mk
 include %reldir%/classes/module.mk
 include %reldir%/ctor-vs-method/module.mk
 include %reldir%/fcn-handle-derived-resolution/module.mk
 include %reldir%/local-functions/module.mk
 include %reldir%/mex/module.mk
