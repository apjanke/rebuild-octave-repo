# HG changeset patch
# User Rik <rik@octave.org>
# Date 1540871469 25200
#      Mon Oct 29 20:51:09 2018 -0700
# Node ID 42589c359dafb434ae0e9c6834cac29d49c3b253
# Parent  a7cc5b7a3d225e07bf91ad5d8b6417565cfa5e14
savefig.m: Improve input validation messages and add BIST tests.

* savefig.m: Add more info to docstring.  Use isfigure, rather than just
ishghandle, in input validation.  Make input validation error messages
more specific.  Add input validation BIST tests.

diff --git a/scripts/plot/util/savefig.m b/scripts/plot/util/savefig.m
--- a/scripts/plot/util/savefig.m
+++ b/scripts/plot/util/savefig.m
@@ -14,56 +14,56 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the filename COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} savefig ()
+## @deftypefnx {} {} savefig (@var{h})
 ## @deftypefnx {} {} savefig (@var{filename})
 ## @deftypefnx {} {} savefig (@var{h}, @var{filename})
-## @deftypefnx {} {} savefig (@var{h})
 ## @deftypefnx {} {} savefig (@var{h}, @var{filename}, @qcode{"compact"})
 ## Save graphics handle @var{h} to file @var{filename}.
-##
-## If unspecified, @var{h} is set to the current figure.
+#
+## If unspecified, @var{h} is the current figure returned by @code{gcf}.
 ##
 ## If unspecified, @var{filename} is set to @file{"Untitled.fig"}.  If
-## @var{filename} does not have an extension, a default extension @file{".fig"}
-## will be added.
+## @var{filename} does not have an extension then the default extension
+## @file{".fig"} will be added.
 ##
-## A third input argument will be accepted but ignored, for Matlab
-## compatibility.
+## A third input @qcode{"compact"} is accepted for Matlab compatibility, but
+## ignored.
 ##
 ## @seealso{hgsave, hdl2struct, openfig}
 ## @end deftypefn
 
 function savefig (varargin)
 
   ## Default values for input arguments
   h = [];
   filename = "Untitled.fig";
 
   ## Check input arguments
   if (nargin == 1)
-    if (ishghandle (varargin{1}))
+    if (isfigure (varargin{1}))
       h = varargin{1};
     elseif (ischar (varargin{1}))
       filename = varargin{1};
     else
-      error ("savefig: invalid input");
+      error ("savefig: first argument must be a figure handle or filename");
     endif
   elseif (nargin == 2 || nargin == 3)
-    if (! ishghandle (varargin{1}))
-      error ("savefig: invalid figure handle");
+    if (! isfigure (varargin{1}))
+      error ("savefig: H must be a valid figure handle");
     endif
     h = varargin{1};
     if (! ischar (varargin{2}))
-      error ("savefig: invalid filename");
+      error ("savefig: second argument must be a string");
     endif
     filename = varargin{2};
     # Input "compact" ignored (Matlab compatibility)
   elseif (nargin > 3)
     print_usage ();
   endif
 
   ## Check figure handle input
@@ -77,19 +77,32 @@ function savefig (varargin)
     filename = [filename ".fig"];
   endif
 
   ## Save file
   hgsave (h, filename);
 
 endfunction
 
+
 %!test
 %! unwind_protect
-%!   h = figure ("Visible", "off");
+%!   h = figure ("visible", "off");
 %!   ftmp = [tempname() ".fig"];
 %!   savefig (h, ftmp);
 %!   savefig (ftmp);
 %!   savefig (h, ftmp, "compact");
 %! unwind_protect_cleanup
 %!   close (h);
 %!   unlink (ftmp);
 %! end_unwind_protect
+
+## Test input validation
+%!error savefig (1,2,3,4)
+%!error <must be a figure handle or filename> savefig (struct ())
+%!error <H must be a valid figure handle> savefig (-1, "foobar")
+%!error <second argument must be a string>
+%! unwind_protect
+%!   h = figure ("visible", "off");
+%!   savefig (h, -1);
+%! unwind_protect_cleanup
+%!   close (h);
+%! end_unwind_protect
