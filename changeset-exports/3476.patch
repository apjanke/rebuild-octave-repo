# HG changeset patch
# User jwe
# Date 948845145 0
#      Wed Jan 26 00:05:45 2000 +0000
# Node ID 78e1e0007f0faaa6059eb35e9f9a4e83dba1e7a1
# Parent  6293a9d5650acd44b15f94d6d1a99c3d65bc63e3
[project @ 2000-01-26 00:05:43 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,16 @@
 2000-01-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* plot/__axis_label__.m: New function.
+	Undo string escapes in text twice(!) before sending to gnuplot.
+	* plot/xlabel.m: Use it.
+	* plot/ylabel.m: Ditto.
+	* plot/zlabel.m: Ditto.
+
 	* plot/mesh.m: Fix error message to reflect reality.
 
 2000-01-24  Cyril Humbert <humbert@phobos.univ-mlv.fr>
 
 	* statistics/distributions/weibull_pdf.m: Use correct formula.
 
 2000-01-22  Michael Reifenberger <mike@Plaut.de>
 
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -25,22 +25,13 @@
 ## displayed, use the command @code{replot} to redisplay it with the new
 ## labels.
 ## @end deftypefn
 ## @seealso{plot, semilogx, semilogy, loglog, polar, mesh, contour,
 ## bar, stairs, gplot, gsplot, replot, ylabel, and title}
 
 ## Author: jwe
 
-function xlabel (text)
-
-  if (nargin != 1)
-    usage ("xlabel (text)");
-  endif
+function xlabel (...)
 
-  if (isstr (text))
-    command = sprintf ("gset xlabel \"%s\"", text);
-    eval (command);
-  else
-    error ("xlabel: text must be a string");
-  endif
+  __axis_label__ ("xlabel", all_va_args);
 
 endfunction
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -19,22 +19,13 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ylabel (@var{string})
 ## See xlabel.
 ## @end deftypefn
 
 ## Author: jwe
 
-function ylabel (text)
-
-  if (nargin != 1)
-    usage ("ylabel (text)");
-  endif
+function ylabel (...)
 
-  if (isstr (text))
-    command = sprintf ("gset ylabel \"%s\"", text);
-    eval (command);
-  else
-    error ("ylabel: text must be a string");
-  endif
+  __axis_label__ ("ylabel", all_va_args);
 
 endfunction
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -21,21 +21,13 @@
 ## @deftypefn {Function File} {} zlabel (@var{string})
 ## See xlabel.
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
-function zlabel (text)
-
-  if (nargin != 1)
-    usage ("zlabel (text)");
-  endif
+function zlabel (...)
 
-  if (isstr (text))
-    eval (sprintf ("gset zlabel \"%s\"", text));
-  else
-    error ("error: zlabel: text must be a string");
-  endif
+  __axis_label__ ("zlabel", all_va_args);
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2000-01-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* variables.cc (Fexist): Return 6 for built-in constants.
+
+	* pt-plot.cc (Fgshow): Don't append " " after last arg.
+	(Fgset): Likewise.
+
 2000-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-base-mat.h (octave_base_matrix::length): Return 0 for empty
 	arrays.
 
 2000-01-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/time.cc (Fstrptime): New function.
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -1115,26 +1115,33 @@ Set plotting options for gnuplot\n\
       if (almost_match ("parametric", argv[1], 3))
 	parametric_plot = true;
       else if (almost_match ("noparametric", argv[1], 5))
 	parametric_plot = false;
       else if (almost_match ("term", argv[1], 1))
 	{
 	  delete [] gnuplot_terminal_type;
 	  ostrstream buf;
-	  for (int i = 2; i < argc; i++)
+	  int i;
+	  for (i = 2; i < argc-1; i++)
 	    buf << argv[i] << " ";
+	  if (i < argc)
+	    buf << argv[i];
 	  buf << Vgnuplot_command_end << ends;
 	  gnuplot_terminal_type = buf.str ();
 	}
     }
 
-  for (int i = 0; i < argc; i++)
+  int i;
+  for (i = 0; i < argc-1; i++)
     plot_buf << argv[i] << " ";
 
+  if (i < argc)
+    plot_buf << argv[i];
+
   plot_buf << Vgnuplot_command_end << ends;
 
   char *plot_command = plot_buf.str ();
   send_to_plot_stream (plot_command);
 
   delete [] plot_command;
 
   return retval;
@@ -1160,18 +1167,21 @@ Show plotting options.\n\
 
   string_vector argv = args.make_argv ("show");
 
   if (error_state)
     return retval;
 
   ostrstream plot_buf;
 
-  for (int i = 0; i < argc; i++)
+  int i;
+  for (i = 0; i < argc-1; i++)
     plot_buf << argv[i] << " ";
+  if (i < argc)
+    plot_buf << argv[i];
 
   plot_buf << Vgnuplot_command_end << ends;
 
   char *plot_command = plot_buf.str ();
   send_to_plot_stream (plot_command);
 
   delete [] plot_command;
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -406,18 +406,18 @@ is_global (\"x\")\n\
   return retval;
 }
 
 DEFUN (exist, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} exist (@var{name})\n\
 Return 1 if the name exists as a variable, 2 if the name (after\n\
 appending @samp{.m}) is a function file in the path, 3 if the name is a\n\
-@samp{.oct} file in the path, or 5 if the name is a built-in function.\n\
-Otherwise, return 0.\n\
+@samp{.oct} file in the path, 5 if the name is a built-in function, or\n\
+6 is the name is a built-in constant.  Otherwise, return 0.\n\
 \n\
 This function also returns 2 if a regular file called @var{name}\n\
 exists in Octave's @code{LOADPATH}.  If you want information about\n\
 other types of files, you should use some combination of the functions\n\
 @code{file_in_path} and @code{stat} instead.\n\
 @end deftypefn")
 {
   octave_value_list retval;
@@ -460,16 +460,20 @@ other types of files, you should use som
     {
       if (struct_elts.empty () || sr->is_map_element (struct_elts))
 	retval = 1.0;
     }
   else if (sr && sr->is_builtin_function ())
     {
       retval = 5.0;
     }
+  else if (sr && sr->is_builtin_constant ())
+    {
+      retval = 6.0;
+    }
   else if (sr && sr->is_user_function ())
     {
       retval = 2.0;
     }
   else
     {
       string path = fcn_file_in_path (name);
 
