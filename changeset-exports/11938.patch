# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1235458404 -3600
#      Tue Feb 24 07:53:24 2009 +0100
# Branch release-3-0-x
# Node ID 3b5a99b6357010a9be93cd5d717c0c3fe7dc8a36
# Parent  a08f22ff5ba18419453e528fcfe006d795576750
backport sorting fixes

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-05  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-sort.cc (octave_sort<T>::merge_hi): std::copy ->
+	std::copy_backward where appropriate.
+
 2008-01-15  Rafael Laboissiere  <rafael@debian.org>
 
 	* oct-md5.cc: Include <cstdio>.
 
 2008-10-28  Brian Gough  <bjg@gnu.org>
 
 	* lo-specfun.cc (zbesi): Fix scaling factor for negative alpha.
 	(cbesi): Likewise.
diff --git a/liboctave/oct-sort.cc b/liboctave/oct-sort.cc
--- a/liboctave/oct-sort.cc
+++ b/liboctave/oct-sort.cc
@@ -24,18 +24,19 @@ code I ripped-off.
 
 As required in the Python license the short description of the changes
 made are
 
 * convert the sorting code in listobject.cc into a generic class, 
   replacing PyObject* with the type of the class T.
 
 * replaced usages of malloc, free, memcpy and memmove by standard C++
-  new [], delete [] and std::copy. Note that replacing memmove by std::copy
-  is possible if the destination starts before the source.
+  new [], delete [] and std::copy and std::copy_backward. Note that replacing
+  memmove by std::copy is possible if the destination starts before the source.
+  If not, std::copy_backward needs to be used.
   
 
 The Python license is
 
   PSF LICENSE AGREEMENT FOR PYTHON 2.3
   --------------------------------------
 
   1. This LICENSE AGREEMENT is between the Python Software Foundation
@@ -726,17 +727,17 @@ octave_sort<T>::merge_hi (T *pa, int na,
 	  if (k < 0)
 	    goto Fail;
 	  k = na - k;
 	  acount = k;
 	  if (k) 
 	    {
 	      dest -= k;
 	      pa -= k;
-              std::copy (pa+1, pa+1 + k, dest+1);
+              std::copy_backward (pa+1, pa+1 + k, dest+1 + k);
 	      na -= k;
 	      if (na == 0)
 		goto Succeed;
 	    }
 	  *dest-- = *pb--;
 	  --nb;
 	  if (nb == 1)
 	    goto CopyA;
@@ -777,17 +778,17 @@ Fail:
   if (nb)
     std::copy (baseb, baseb + nb, dest-(nb-1));
   return result;
 
 CopyA:
   /* The first element of pb belongs at the front of the merge. */
   dest -= na;
   pa -= na;
-  std::copy (pa+1, pa+1 + na, dest+1);
+  std::copy_backward (pa+1, pa+1 + na, dest+1 + na);
   *dest = *pb;
 
   return 0;
 }
 
 /* Merge the two runs at stack indices i and i+1.
  * Returns 0 on success, -1 on error.
  */
