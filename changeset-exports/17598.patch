# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1381199755 14400
#      Mon Oct 07 22:35:55 2013 -0400
# Node ID d8d71c89fff2b50ecfb80f20cda14d5fdff1b1cd
# Parent  e5932e528721084a6c168be06631283fdb34cb5f
eliminate unnecessary member variable in url_base_transfer class

* url-transfer.h, url-transfer.cc (base_url_transfer::userpw):
Delete member variable.
(curl_transfer::init): Declare userpwd as a local variable.

diff --git a/liboctave/util/url-transfer.cc b/liboctave/util/url-transfer.cc
--- a/liboctave/util/url-transfer.cc
+++ b/liboctave/util/url-transfer.cc
@@ -653,17 +653,17 @@ private:
 
   void init (const std::string& user, const std::string& passwd,
              std::istream& is, std::ostream& os)
   {
     // No data transfer by default
     SETOPT (CURLOPT_NOBODY, 1);
 
     // Set the username and password
-    userpwd = user;
+    std::string userpwd = user;
     if (! passwd.empty ())
       userpwd += ":" + passwd;
     if (! userpwd.empty ())
       SETOPT (CURLOPT_USERPWD, userpwd.c_str ());
 
     // Define our callback to get called when there's data to be written.
     SETOPT (CURLOPT_WRITEFUNCTION, write_data);
 
diff --git a/liboctave/util/url-transfer.h b/liboctave/util/url-transfer.h
--- a/liboctave/util/url-transfer.h
+++ b/liboctave/util/url-transfer.h
@@ -42,31 +42,31 @@ private:
     curl_xfer->cwd ("..");
   }
 
 public:
 
   friend class url_transfer;
 
   base_url_transfer (void)
-    : count (1), host_or_url (), userpwd (), valid (false), ftp (false),
+    : count (1), host_or_url (), valid (false), ftp (false),
       ascii_mode (false), ok (true), errmsg (),
       curr_istream (&std::cin), curr_ostream (&std::cout)
   { }
 
   base_url_transfer (const std::string& host,
                      const std::string& /* user_arg */,
                      const std::string& /* passwd */,
                      std::ostream& os)
-    : count (1), host_or_url (host), userpwd (), valid (false), ftp (true),
+    : count (1), host_or_url (host), valid (false), ftp (true),
       ascii_mode (false), ok (true), errmsg (), curr_istream (&std::cin),
       curr_ostream (&os) { }
 
   base_url_transfer (const std::string& url, std::ostream& os)
-    : count (1), host_or_url (url), userpwd (), valid (false), ftp (false),
+    : count (1), host_or_url (url), valid (false), ftp (false),
       ascii_mode (false), ok (true), errmsg (),
       curr_istream (&std::cin), curr_ostream (&os) { }
 
   virtual ~base_url_transfer (void) { }
 
   bool is_valid (void) const { return valid; }
 
   bool good (void) const { return valid && ok; }
@@ -136,17 +136,16 @@ public:
 
 protected:
 
   // Reference count.
   octave_refcount<size_t> count;
 
   // Host for ftp transfers or full URL for http requests.
   std::string host_or_url;
-  std::string userpwd;
   bool valid;
   bool ftp;
   bool ascii_mode;
   bool ok;
   std::string errmsg;
   std::istream *curr_istream;
   std::ostream *curr_ostream;
 
