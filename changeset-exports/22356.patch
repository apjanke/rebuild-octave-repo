# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1471884907 25200
#      Mon Aug 22 09:55:07 2016 -0700
# Node ID c381f78e79bf7ae9b2c0aefc60d49d326abd9400
# Parent  886530282db92dc944604e461fa606124bbc7c47
grid.m: More consistent behavior for "on" and "off" (bug #48533).

* grid.m: For linear axes, "on" and "off" apply only to the grid mentioned
("" * = major, "minor" = minor).

diff --git a/scripts/plot/appearance/grid.m b/scripts/plot/appearance/grid.m
--- a/scripts/plot/appearance/grid.m
+++ b/scripts/plot/appearance/grid.m
@@ -69,89 +69,84 @@ function grid (varargin)
     grid_on = ! grid_on;
   else
     arg1 = varargin{1};
     if (! ischar (arg1))
       error ("grid: argument 1 must be an axis handle or a string");
     endif
     if (strcmpi (arg1, "off"))
       grid_on = false;
+      minor_on = false;
+      minor_auto = false;
     elseif (strcmpi (arg1, "on"))
       grid_on = true;
     elseif (strcmpi (arg1, "minor"))
       minor_auto = false;
       if (nargs == 2)
         arg2 = varargin{2};
         if (strcmpi (arg2, "on"))
           minor_on = true;
-          grid_on = true;
         elseif (strcmpi (arg2, "off"))
           minor_on = false;
         else
           print_usage ();
         endif
       else
         minor_on = ! minor_on;
-        if (minor_on)
-          grid_on = true;
-        endif
       endif
     else
       print_usage ();
     endif
   endif
 
   if (grid_on)
     set (hax, "xgrid", "on", "ygrid", "on", "zgrid", "on");
-    if (minor_on)
-      set (hax, "xminorgrid", "on", "yminorgrid", "on", "zminorgrid", "on");
-      xg = ifelse (strcmp (get (hax, "xscale"), "log"), "off", "on");
-      yg = ifelse (strcmp (get (hax, "yscale"), "log"), "off", "on");
-      zg = ifelse (strcmp (get (hax, "zscale"), "log"), "off", "on");
-      set (hax, "xgrid", xg, "ygrid", yg, "zgrid", zg);
-    elseif (minor_auto)
-      xmg = ifelse (strcmp (get (hax, "xscale"), "log"), "on", "off");
-      ymg = ifelse (strcmp (get (hax, "yscale"), "log"), "on", "off");
-      zmg = ifelse (strcmp (get (hax, "zscale"), "log"), "on", "off");
-      set (hax, "xminorgrid", xmg, "yminorgrid", ymg, "zminorgrid", zmg);
-    else
-      set (hax, "xminorgrid", "off", "yminorgrid", "off", "zminorgrid", "off");
-    endif
   else
-    set (hax, "xgrid", "off", "ygrid", "off", "zgrid", "off",
-              "xminorgrid", "off", "yminorgrid", "off", "zminorgrid", "off");
+    set (hax, "xgrid", "off", "ygrid", "off", "zgrid", "off");
+  endif
+
+  if (minor_on)
+    set (hax, "xminorgrid", "on", "yminorgrid", "on", "zminorgrid", "on");
+  elseif (minor_auto)
+    xmg = ifelse (strcmp (get (hax, "xscale"), "log"), "on", "off");
+    ymg = ifelse (strcmp (get (hax, "yscale"), "log"), "on", "off");
+    zmg = ifelse (strcmp (get (hax, "zscale"), "log"), "on", "off");
+    set (hax, "xminorgrid", xmg, "yminorgrid", ymg, "zminorgrid", zmg);
+  else
+    set (hax, "xminorgrid", "off", "yminorgrid", "off", "zminorgrid", "off");
   endif
 
 endfunction
 
+
 %!demo
 %! clf;
 %! subplot (3, 2, 1);
 %!  plot (1:100);
 %!  grid off;
 %!  title ("grid off");
 %! subplot (3, 2, 2);
 %!  plot (1:100);
 %!  grid on;
 %!  title ("grid on");
 %! subplot (3, 2, 3);
 %!  plot (1:100);
-%!  set (gca, "xgrid", "on")
+%!  set (gca, "xgrid", "on");
 %!  title ("xgrid on");
 %! subplot (3, 2, 4);
 %!  plot (1:100);
-%!  set (gca, "ygrid", "on")
+%!  set (gca, "ygrid", "on");
 %!  title ("ygrid on");
 %! subplot (3, 2, 5);
 %!  plot (1:100);
 %!  grid minor;
 %!  title ("grid minor");
 %! subplot (3, 2, 6);
 %!  plot (1:100);
-%!  set (gca, "yminorgrid", "on")
+%!  set (gca, "yminorgrid", "on");
 %!  title ("yminorgrid on");
 
 %!demo
 %! subplot (2,2,1);
 %!  semilogy (1:100);
 %!  grid off;
 %!  title ("grid off");
 %! subplot (2,2,2);
@@ -162,8 +157,67 @@ endfunction
 %!  semilogy (1:100);
 %!  grid off;
 %!  title ("no grid");
 %! subplot (2,2,4);
 %!  semilogy (1:100);
 %!  grid minor;
 %!  title ("grid minor");
 
+## linear scaling
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hax = axes ();
+%!   plot (1:10);
+%!   grid on
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "on");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "on");
+%!   grid off
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "on");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "on");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
