# HG changeset patch
# User jwe
# Date 1115400941 0
#      Fri May 06 17:35:41 2005 +0000
# Node ID f9ab8e67ce7a8cd1c967761c8905682cd78b7c10
# Parent  4bea82210dcd25db96a112c295f660ab26204023
[project @ 2005-05-06 17:35:41 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,15 @@
 2005-05-06  John W. Eaton  <jwe@octave.org>
 
 	* ov-struct.cc (octave_struct::save_ascii,
 	octave_struct::save_binary, octave_sruct::save_hdf5):
 	Always save cell array.
+	(octave_struct::load_ascii, octave_struct::load_binary,
+	octave_sruct::load_hdf5): Try to read old-style files correctly.
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Use chol2inv to compute inverse
 	from Cholesky factors.
 	(cholinv): Delete.
 
 	* DLD-FUNCTIONS/chol.cc (Fcholinv): New function.
 	(Fchol2inv): New function.
 
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -1020,17 +1020,18 @@ octave_struct::load_ascii (std::istream&
 
 	      // recurse to read cell elements
 	      std::string nm
 		= read_ascii_data (is, std::string (), dummy, t2, count);
 
 	      if (!is)
 		break;
 
-	      Cell tcell = t2.cell_value ();
+	      // Try for some backward compatibility...
+	      Cell tcell = t2.is_cell () ? t2.cell_value () : Cell (t2);
 
 	      if (error_state)
 		{
 		  error ("load: internal error loading struct elements");
 		  return false;
 		}
 
 	      m.assign (nm, tcell);
@@ -1104,17 +1105,18 @@ octave_struct::load_binary (std::istream
 
 	  // recurse to read cell elements
 	  std::string nm = read_binary_data (is, swap, fmt, std::string (), 
 					     dummy, t2, doc);
 
 	  if (!is)
 	    break;
 
-	  Cell tcell = t2.cell_value ();
+	  // Try for some backward compatibility...
+	  Cell tcell = t2.is_cell () ? t2.cell_value () : Cell (t2);
 
 	  if (error_state)
 	    {
 	      error ("load: internal error loading struct elements");
 	      return false;
 	    }
 
 	  m.assign (nm, tcell);
@@ -1187,17 +1189,20 @@ octave_struct::load_hdf5 (hid_t loc_id, 
   while (current_item < static_cast<int> (num_obj)
 	 && (retval2 = H5Giterate (loc_id, name, &current_item,
 				   hdf5_read_next_data, &dsub)) > 0)
 #else
   while ((retval2 = H5Giterate (loc_id, name, &current_item,
 				hdf5_read_next_data, &dsub)) > 0)
 #endif
     {
-      Cell tcell = dsub.tc.cell_value ();
+      octave_value t2 = dsub.tc;
+
+      // Try for some backward compatibility...
+      Cell tcell = t2.is_cell () ? t2.cell_value () : Cell (t2);
 
       if (error_state)
 	{
 	  error ("load: internal error loading struct elements");
 	  return false;
 	}
 
       m.assign (dsub.name, tcell);
