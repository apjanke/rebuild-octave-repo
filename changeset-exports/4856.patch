# HG changeset patch
# User jwe
# Date 1081394652 0
#      Thu Apr 08 03:24:12 2004 +0000
# Node ID c89b9abf2ffd7fa7854c8afc630effc295c5dd28
# Parent  d62c421f448b3036651ee0b9e47aee58f189199b
[project @ 2004-04-08 03:24:12 by jwe]

diff --git a/scripts/statistics/distributions/beta_rnd.m b/scripts/statistics/distributions/beta_rnd.m
--- a/scripts/statistics/distributions/beta_rnd.m
+++ b/scripts/statistics/distributions/beta_rnd.m
@@ -46,24 +46,34 @@ function rnd = beta_rnd (a, b, r, c)
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("beta_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("beta_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("beta_rnd: a and b must be scalar or of size [r,c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("beta_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("beta_rnd: a and b must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(a);
   else
     usage ("beta_rnd (a, b, r, c)");
   endif
 
   if (isscalar(a) && isscalar(b))
     if (find (!(a > 0) | !(a < Inf) | !(b > 0) | !(b < Inf)))
diff --git a/scripts/statistics/distributions/binomial_rnd.m b/scripts/statistics/distributions/binomial_rnd.m
--- a/scripts/statistics/distributions/binomial_rnd.m
+++ b/scripts/statistics/distributions/binomial_rnd.m
@@ -46,24 +46,34 @@ function rnd = binomial_rnd (n, p, r, c)
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("binomial_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("binomial_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (n) != 1) && ((length (size (n)) != length (sz)) ||
+				any (size (n) != sz)))
+      error ("binomial_rnd: n and must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("binomial_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (n) != 1) && ((length (size (n)) != length (sz)) ||
+				any (size (n) != sz)))
+      error ("binomial_rnd: n and must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(n);
   else
     usage ("binomial_rnd (n, p, r, c)");
   endif
 
   if (isscalar (n) && isscalar (p))
     if (find (!(n > 0) | !(n < Inf) | !(n == round (n)) |
diff --git a/scripts/statistics/distributions/cauchy_rnd.m b/scripts/statistics/distributions/cauchy_rnd.m
--- a/scripts/statistics/distributions/cauchy_rnd.m
+++ b/scripts/statistics/distributions/cauchy_rnd.m
@@ -45,24 +45,34 @@ function rnd = cauchy_rnd (l, scale, r, 
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("cauchy_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("cauchy_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (l) != 1) && ((length (size (l)) != length (sz)) ||
+				any (size (l) != sz)))
+      error ("cauchy_rnd: lambda and sigma must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("cauchy_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (l) != 1) && ((length (size (l)) != length (sz)) ||
+				any (size (l) != sz)))
+      error ("cauchy_rnd: lambda and sigma must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(l);
   else
     usage ("cauchy_rnd (lambda, sigma, r, c)");
   endif
 
   if (isscalar (l) && isscalar (scale)) 
     if (find (!(l > -Inf) | !(l < Inf) | !(scale > 0) | !(scale < Inf)))
diff --git a/scripts/statistics/distributions/chisquare_rnd.m b/scripts/statistics/distributions/chisquare_rnd.m
--- a/scripts/statistics/distributions/chisquare_rnd.m
+++ b/scripts/statistics/distributions/chisquare_rnd.m
@@ -36,24 +36,34 @@ function rnd = chisquare_rnd (n, r, c)
   if (nargin == 3)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("chisquare_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("chisquare_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (n) != 1) && ((length (size (n)) != length (sz)) ||
+				any (size (n) != sz)))
+      error ("chisquare_rnd: n must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 2)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("chisquare_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (n) != 1) && ((length (size (n)) != length (sz)) ||
+				any (size (n) != sz)))
+      error ("chisquare_rnd: n must be scalar or of size sz");
+    endif
   elseif (nargin == 1)
     sz = size(n);
   else
     usage ("chisquare_rnd (n, r, c)");
   endif
 
   if (isscalar (n))
      if (find (!(n > 0) | !(n < Inf)))
diff --git a/scripts/statistics/distributions/gamma_rnd.m b/scripts/statistics/distributions/gamma_rnd.m
--- a/scripts/statistics/distributions/gamma_rnd.m
+++ b/scripts/statistics/distributions/gamma_rnd.m
@@ -46,24 +46,34 @@ function rnd = gamma_rnd (a, b, r, c)
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("gamma_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("gamma_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("gamma_rnd: a and b must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("uniform_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("gamma_rnd: a and b must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(a);
   else
     usage ("gamma_rnd (a, b, r, c)");
   endif
 
   rnd = zeros (sz);
 
diff --git a/scripts/statistics/distributions/normal_rnd.m b/scripts/statistics/distributions/normal_rnd.m
--- a/scripts/statistics/distributions/normal_rnd.m
+++ b/scripts/statistics/distributions/normal_rnd.m
@@ -46,24 +46,34 @@ function rnd = normal_rnd (m, v, r, c)
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("normal_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("normal_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (m) != 1) && ((length (size (m)) != length (sz)) ||
+				any (size (m) != sz)))
+      error ("normal_rnd: m and v must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("normal_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (m) != 1) && ((length (size (m)) != length (sz)) ||
+				any (size (m) != sz)))
+      error ("normal_rnd: m and v must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(m);
   else
     usage ("normal_rnd (m, v, r, c)");
   endif
 
   if (isscalar (m) && isscalar (v))
     if (find (isnan (m) | isinf (m) | !(v > 0) | !(v < Inf)))
diff --git a/scripts/statistics/distributions/uniform_rnd.m b/scripts/statistics/distributions/uniform_rnd.m
--- a/scripts/statistics/distributions/uniform_rnd.m
+++ b/scripts/statistics/distributions/uniform_rnd.m
@@ -45,24 +45,34 @@ function rnd = uniform_rnd (a, b, r, c)
   if (nargin == 4)
     if (! (isscalar (r) && (r > 0) && (r == round (r))))
       error ("uniform_rnd: r must be a positive integer");
     endif
     if (! (isscalar (c) && (c > 0) && (c == round (c))))
       error ("uniform_rnd: c must be a positive integer");
     endif
     sz = [r, c];
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("uniform_rnd: a and b must be scalar or of size [r, c]");
+    endif
   elseif (nargin == 3)
     if (isscalar (r) && (r > 0))
       sz = [r, r];
     elseif (isvector(r) && all (r > 0))
       sz = r(:)';
     else
       error ("uniform_rnd: r must be a postive integer or vector");
     endif
+
+    if (any (size (a) != 1) && ((length (size (a)) != length (sz)) ||
+				any (size (a) != sz)))
+      error ("uniform_rnd: a and b must be scalar or of size sz");
+    endif
   elseif (nargin == 2)
     sz = size(a);
   else
     usage ("uniform_rnd (a, b, r, c)");
   endif
 
   if (isscalar(a) && isscalar(b))
     if (find (!(-Inf < a) | !(a < b) | !(b < Inf)))
