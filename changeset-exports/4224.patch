# HG changeset patch
# User jwe
# Date 1040171669 0
#      Wed Dec 18 00:34:29 2002 +0000
# Node ID 0179e6309248bb1d901dd9862f51a9376be23689
# Parent  5ebaf7eee36ed15dd4051a4135e215f80334440e
[project @ 2002-12-18 00:34:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2002-12-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* variables.cc (Fclear): Fix off-by-one error.
+
+	* oct-stream.cc (octave_base_stream::do_gets): Correctly read
+	last line of file even if it does not end with new line
+	character.
+
 	* pt-select.cc (equal): Don't look up == op, just try it and see
 	whether it works.
 
 	* oct-stream.cc (printf_format_list::printf_format_list):
 	Handle empty format string.
 
 2002-12-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -969,36 +969,32 @@ octave_base_stream::do_gets (int max_len
 	    }
 	  else
 	    buf << (char) c;
 
 	  if (max_len > 0 && char_count == max_len)
 	    break;
 	}
 
-      if (is.fail ())
-	{
-	  err = true;
-	  std::string msg = fcn;
-	  msg.append (": read error");
-	  error (msg);
-	}
-      else if (char_count == 0 && is.eof ())
-	{
-	  err = true;
-	  std::string msg = fcn;
-	  msg.append (": at end of file");
-	  error (msg);
-	}
-      else
+      if (is.good () || (is.eof () && char_count > 0))
 	{
 	  buf << OSSTREAM_ENDS;
 	  retval = OSSTREAM_STR (buf);
 	  OSSTREAM_FREEZE (buf);
 	}
+      else
+	{
+	  err = true;
+	  std::string msg = fcn;
+	  if (is.eof () && char_count == 0)
+	    msg.append (": at end of file");
+	  else
+	    msg.append (": read error");
+	  error (msg);
+	}
     }
   else
     {
       err = true;
       invalid_operation (fcn, "reading");
     }
 
   return retval;
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1695,17 +1695,17 @@ This command may not be used within a fu
 
 		  have_dash_option = true;
 		  clear_variables = true;
 		}
 	      else
 		break;
 	    }
 
-	  if (idx < argc)
+	  if (idx <= argc)
 	    {
 	      if (! have_dash_option)
 		{
 		  do_matlab_compatible_clear (argv, argc, idx);
 		}
 	      else
 		{
 		  if (clear_all)
