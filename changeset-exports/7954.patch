# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1216655250 14400
#      Mon Jul 21 11:47:30 2008 -0400
# Node ID 3ffc34caec6524f6a6b8338c0372917b16231c68
# Parent  efabe34cce70d47d55b629725051acf47cb16208
configure fixes

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,18 @@
+2008-07-21  John W. Eaton  <jwe@octave.org>
+
+	* aclocal.m4 (OCTAVE_OPENGL): Fix shell syntax problems.
+	Handle HAVE_GL_GL_H and HAVE_OPENGL_GL_H in link test.
+
+	* configure.in: Don't define and substitute FLTK_BACKEND_SRC or
+	GL_RENDER_SRC.
+	(HAVE_FLTK): AC_DEFINE if FLTK is available.
+	(HAVE_OPENGL): AC_DEFINE if OpenGL is available.
+
 2008-07-21  Jaroslav Hajek <highegg@gmail.com>
 
 	* configure.in: Extend FTGL test to test for both ftgl.h and FTGL.h.
 	Use HAVE_FTGL_UPPERCASE to indicate the latter (version <= 2.1.2).
 
 2008-07-19 Rafael Laboissiere <rafael@debia8n.org>
 
 	* octMakefile.in (CONF_DISTFILES): Include acx_blas_f77_func.m4 in
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -1061,36 +1061,45 @@ dnl
 AC_DEFUN([OCTAVE_OPENGL], [
 OPENGL_LIBS=
 case $canonical_host_type in
   *-*-msdosmsvc)
     AC_CHECK_HEADERS(windows.h)
     ;;
 esac
 have_opengl_incs=no
-AC_CHECK_HEADERS(GL/gl.h OpenGL/gl.h, [
-  AC_CHECK_HEADERS(GL/glu.h OpenGL/glu.h, [
-    have_opengl_incs=yes, break], [], [
+AC_CHECK_HEADERS([GL/gl.h OpenGL/gl.h], [
+  AC_CHECK_HEADERS([GL/glu.h OpenGL/glu.h], [
+    have_opengl_incs=yes; break], [], [
 #ifdef HAVE_WINDOWS_H
-# include <windows.h>
-#endif ]), break], [], [
+#include <windows.h>
+#endif
+])
+break
+], [], [
 #ifdef HAVE_WINDOWS_H
-# include <windows.h>
-#endif])
+#include <windows.h>
+#endif
+])
 if test "$have_opengl_incs" = "yes"; then
   case $canonical_host_type in
     *-*-msdosmsvc)
       save_LIBS="$LIBS"
       LIBS="$LIBS -lopengl32"
       AC_MSG_CHECKING([for glEnable in -lopengl32])
       AC_TRY_LINK([
 #if HAVE_WINDOWS_H
-# include <windows.h>
+#include <windows.h>
 #endif
-#include <GL/gl.h>], [
+#if defined (HAVE_GL_GL_H)
+#include <GL/gl.h>
+#elif defined (HAVE_OPENGL_GL_H)
+#include <OpenGL/gl.h>
+#endif
+], [
 glEnable(GL_SMOOTH);], OPENGL_LIBS="-lopengl32 -lglu32")
       LIBS="$save_LIBS"
       if test "x$OPENGL_LIBS" != "x"; then
         AC_MSG_RESULT(yes)
       else
         AC_MSG_RESULT(no)
       fi
       ;;
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -647,22 +647,21 @@ fi
 
 # ---------------------------------------------------------------------
 
 ## libraries needed for graphics
 
 warn_freetype=""
 warn_ftgl=""
 
-GL_RENDER_SRC=
 GRAPHICS_OPENGL=
 OCTAVE_OPENGL
 if test -n "$OPENGL_LIBS"; then
   GRAPHICS_OPENGL="opengl"
-  GL_RENDER_SRC="gl-render.cc"
+  AC_DEFINE(HAVE_OPENGL, 1, [Define if OpenGL is available])
 
 ## ftgl (needs freetype 2)
   AC_CHECK_FT2([9.0.3],[],
     [warn_freetype="FreeType library not found. Native renderer will not have on-screen text"])
   if test -z "$warn_freetype"; then
     AC_LANG_PUSH(C++)
       has_ftgl_h=yes
       AC_CHECK_HEADERS([FTGL/ftgl.h ftgl.h], break, [
@@ -705,17 +704,16 @@ FTGLTextureFont font("");], [
         warn_ftgl="FTGL headers not found. Native renderer will not have on-screen text"
       fi
     AC_LANG_POP(C++)
   fi
 fi
 
 GRAPHICS_LIBS=
 GRAPHICS_CFLAGS=
-FLTK_BACKEND_SRC=
 
 ## fltk (www.fltk.org)
 AC_ARG_WITH(fltk-prefix,
         [  --with-fltk-prefix=PFX   Prefix where FLTK is installed (optional)],
         fltk_prefix="$withval",
         fltk_prefix="")
 AC_ARG_WITH(fltk-exec-prefix,
         [  --with-fltk-exec-prefix=PFX Exec prefix where FLTK is installed (optional)],
@@ -752,30 +750,28 @@ else
   #include <FL/gl.h>
   int nothing=0;
 EOF
   $CXX $CXXFLAGS $FLTK_CFLAGS -c conftest.cc || \
     warn_fltk_opengl="FLTK does not have OpenGL support.  Native graphics will be disabled."
 
   if test -z "$warn_fltk_opengl"; then
     AC_MSG_RESULT(yes)
+    AC_DEFINE(HAVE_FLTK, 1, [Define if FLTK is available])
     GRAPHICS_CFLAGS="$FLTK_CFLAGS"
     GRAPHICS_LIBS="$FLTK_LDFLAGS"
     GRAPHICS_OPENGL="$GRAPHICS_OPENGL fltk_backend"
-    FLTK_BACKEND_SRC="fltk_backend.cc"
   else
     AC_MSG_RESULT(no)
   fi
 fi
 
 AC_SUBST(GRAPHICS_CFLAGS)
 AC_SUBST(GRAPHICS_LIBS)
 AC_SUBST(GRAPHICS_OPENGL)
-AC_SUBST(GL_RENDER_SRC)
-AC_SUBST(FLTK_BACKEND_SRC)
 
 OCTAVE_IEEE754_DATA_FORMAT
 
 # ----------------------------------------------------------------------
 
 OCTAVE_PROG_AR
 
 AC_PROG_RANLIB
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2008-07-21  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/fltk_backend.cc: Don't include oct.h.
+	Make compilation of entire file conditional on HAVE_FLTK.
+
+	* gl-render.cc: Make compilation of entire file conditional on
+	HAVE_OPENGL.
+
+	* Makefile.in (GL_RENDER_SRC, FLTK_BACKEND_SRC): Delete variables.
+	(DLD_XSRC): Always include fltk_backend.cc in the list.
+	(DIST_SRC): Always include gl-render.cc in the list.
+
 2008-07-19  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 3.1.50+.
 	(OCTAVE_API_VERSION): Now api-v33+.
 
 2008-07-18  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 3.1.50.
diff --git a/src/DLD-FUNCTIONS/fltk_backend.cc b/src/DLD-FUNCTIONS/fltk_backend.cc
--- a/src/DLD-FUNCTIONS/fltk_backend.cc
+++ b/src/DLD-FUNCTIONS/fltk_backend.cc
@@ -30,35 +30,37 @@ To initialize:
   plot (randn (1e3, 1));
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#if defined (HAVE_FLTK)
+
 #include <map>
 #include <set>
 #include <sstream>
 #include <iostream>
 
-#include "gl-render.h"
-
 #include <FL/Fl.H>
 #include <FL/Fl_Window.H>
 #include <FL/Fl_Output.H>
 #include <FL/Fl_Button.H>
 #include <FL/Fl_Gl_Window.H>
 #include <FL/fl_ask.H>
 #include <FL/fl_draw.H>
 #include <FL/gl.h>
 
-#include "oct.h"
+#include "defun-dld.h"
+#include "error.h"
+#include "gl-render.h"
+#include "graphics.h"
 #include "parse.h"
-#include "graphics.h"
 
 #define FLTK_BACKEND_NAME "fltk"
 
 const char* help_text = "\
 Keyboard Shortcuts\n\
 a - autoscale\n\
 g - toggle grid\n\
 \n\
@@ -799,13 +801,15 @@ DEFUN_DLD (__fltk_redraw__, , ,
         }
     }
 
   Fl::wait (fltk_maxtime);	
 
   return retval;	
 }
 
+#endif
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -29,19 +29,16 @@ include $(TOPDIR)/Makeconf
 
 DLL_CDEFS = @OCTINTERP_DLL_DEFS@
 DLL_CXXDEFS = @OCTINTERP_DLL_DEFS@
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
-GL_RENDER_SRC = @GL_RENDER_SRC@
-FLTK_BACKEND_SRC = @FLTK_BACKEND_SRC@
-
 PT_FLAGS = -fexternal-templates -fno-implicit-templates
 CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
 	@(echo "// DO NOT EDIT!  Generated automatically by mkdefs." ; \
 	  egrep '^(///*|/\*) *PKG_ADD:' $< ; \
 	  $(CXXCPP) $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
@@ -64,17 +61,17 @@ OPT_BASE := $(addsuffix -opts, DASPK DAS
 OPT_HANDLERS := $(addsuffix .cc, $(OPT_BASE))
 OPT_IN := $(addprefix ../liboctave/, $(addsuffix .in, $(OPT_BASE)))
 OPT_INC := $(addprefix ../liboctave/, $(addsuffix .h, $(OPT_BASE)))
 
 DLD_XSRC := amd.cc balance.cc besselj.cc betainc.cc bsxfun.cc cellfun.cc \
 	chol.cc ccolamd.cc colamd.cc colloc.cc conv2.cc convhulln.cc daspk.cc \
 	dasrt.cc dassl.cc det.cc dispatch.cc dlmread.cc dmperm.cc eig.cc \
 	expm.cc fft.cc fft2.cc fftn.cc fftw.cc filter.cc find.cc \
-	$(FLTK_BACKEND_SRC) fsolve.cc \
+	fltk_backend.cc fsolve.cc \
 	gammainc.cc gcd.cc getgrent.cc getpwent.cc getrusage.cc \
 	givens.cc hess.cc hex2num.cc inv.cc kron.cc lookup.cc lsode.cc \
 	lu.cc luinc.cc matrix_type.cc max.cc md5sum.cc pinv.cc qr.cc \
 	quad.cc qz.cc rand.cc rcond.cc regexp.cc schur.cc sparse.cc \
 	spparms.cc sqrtm.cc svd.cc syl.cc symrcm.cc symbfact.cc \
 	time.cc tsearch.cc typecast.cc \
 	urlwrite.cc __contourc__.cc __delaunayn__.cc __dsearchn__.cc \
 	__glpk__.cc __lin_interpn__.cc __magick_read__.cc __pchip_deriv__.cc \
@@ -195,17 +192,17 @@ OV_SRC := ov-base.cc ov-ch-mat.cc \
 PT_SRC := pt.cc pt-arg-list.cc pt-assign.cc pt-bp.cc pt-binop.cc \
 	pt-cbinop.cc pt-cell.cc pt-check.cc pt-cmd.cc pt-colon.cc \
 	pt-const.cc pt-decl.cc pt-except.cc pt-exp.cc pt-fcn-handle.cc \
 	pt-id.cc pt-idx.cc pt-jump.cc pt-loop.cc pt-mat.cc pt-misc.cc \
 	pt-pr-code.cc pt-select.cc pt-stmt.cc pt-unop.cc
 
 DIST_SRC := Cell.cc bitfcns.cc c-file-ptr-stream.cc comment-list.cc \
 	cutils.c data.cc debug.cc defaults.cc defun.cc dirfns.cc \
-	dynamic-ld.cc error.cc file-io.cc $(GL_RENDER_SRC) graphics.cc \
+	dynamic-ld.cc error.cc file-io.cc gl-render.cc graphics.cc \
 	gripes.cc help.cc input.cc lex.l load-path.cc load-save.cc \
 	ls-hdf5.cc ls-mat-ascii.cc ls-mat4.cc ls-mat5.cc ls-oct-ascii.cc \
 	ls-oct-binary.cc ls-utils.cc main.c mappers.cc matherr.c \
 	mex.cc oct-fstrm.cc oct-hist.cc oct-iostrm.cc oct-map.cc \
 	oct-obj.cc oct-prcstrm.cc oct-procbuf.cc oct-stream.cc \
 	octave.cc zfstream.cc oct-strstrm.cc oct-lvalue.cc pager.cc \
 	parse.y pr-output.cc procstream.cc sighandlers.cc \
 	siglist.c sparse-xdiv.cc sparse-xpow.cc strfns.cc \
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -19,16 +19,18 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#if defined (HAVE_OPENGL)
+
 #include <lo-mappers.h>
 #include "gl-render.h"
 
 #define LIGHT_MODE GL_FRONT_AND_BACK
 
 // Win32 API requires the CALLBACK attributes for
 // GLU callback functions. Define it to empty on
 // other platforms.
@@ -2805,13 +2807,15 @@ opengl_renderer::make_marker_list (const
       break;
     }
 
   glEndList ();
 
   return ID;
 }
 
+#endif
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
