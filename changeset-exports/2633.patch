# HG changeset patch
# User jwe
# Date 854400735 0
#      Mon Jan 27 21:32:15 1997 +0000
# Node ID eb58c59bd223ebcc9497a0628854ec4cc348117d
# Parent  b8a3dd7e2e1ac003764eccbe0405cb90c9482fa9
[project @ 1997-01-27 21:32:14 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,11 +1,13 @@
 Mon Jan 27 00:10:10 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Add check for usleep().
+	(bsd_gcc_kluge_targets_frag): New fragment.
+
 	* Makefile.in: Delete `internal' targets.
 	(static-binary-dist, dynamic-binary-dist): Special cases.
 
 	* octMakefile.in (static-binary-dist, dynamic-binary-dist):
 	New targets.
 	(binary-dist, bin-dist): Delete.
 
 Sun Jan 26 19:39:51 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.250 $)
+AC_REVISION($Revision: 1.251 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -578,17 +578,17 @@ else
     AC_CHECK_PROG(F2C, f2c, f2c, [])
     if test -n "$F2C"; then
       have_f2c=true
     fi
   fi
 fi
 
 
-f77_rules_frag=Makerules.f77
+f77_rules_frag=Makefrag.f77
 if $have_fortran_compiler; then
 changequote(,)dnl
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
 
 %.o : %.f
 	$(FC) -c $(ALL_FFLAGS) $<
@@ -629,17 +629,17 @@ EOF
     if test -n "$FLIBS"; then
       AC_CHECK_LIB(I77, f_rew, FLIBS="$FLIBS -lI77", FLIBS=, -lF77)
     fi
   fi
 
   if test -z "$FLIBS"; then
     AC_MSG_WARN([I found f2c but not libf2c.a, or libF77.a and libI77.a])
   fi
-  f77_rules_frag=Makerules.f77
+  f77_rules_frag=Makefrag.f77
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
 	cat $< | $(F2C) $(F2CFLAGS) > $(@F)
 
 %.o : %.f
 
 EOF
@@ -937,24 +937,51 @@ case "$RETSIGTYPE" in
   ;;
   *)
     VOID_SIGHANDLER="-DVOID_SIGHANDLER=1"
     AC_MSG_RESULT([defining VOID_SIGHANDLER to be 1])
   ;;
 esac
 AC_SUBST(VOID_SIGHANDLER)
 
+### A system dependent kluge or two.
+
 AC_CHECK_FUNCS(getrusage times)
-
 case "$canonical_host_type" in
   *-*-cygwin32)
     AC_DEFINE(RUSAGE_TIMES_ONLY, 1)
   ;;
 esac
 
+bsd_gcc_kluge_targets_frag=
+case "$canonical_host_type" in
+  *-*-386bsd* | *-*-openbsd* | *-*-netbsd* | *-*-freebsd*)
+    bsd_gcc_kluge_targets_frag=Makefrag.bsd
+    cat << \EOF > $bsd_gcc_kluge_targets_frag
+
+lex.o: lex.cc 
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) $<
+
+pt-plot.o: pt-plot.cc
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) $<
+
+symtab.o: symtab.cc
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) $<
+
+toplev.o: toplev.cc
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) $<
+
+unwind-prot.o: unwind-prot.cc 
+	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) $<
+
+EOF
+  ;;
+esac
+AC_SUBST_FILE(bsd_gcc_kluge_targets_frag)
+
 ### Checks for other programs used for building, testing, installing,
 ### and running Octave.
 ###
 ### For now, don't define LEXLIB to be -lfl -- we don't use anything in
 ### it, and it might not be installed.
 ###
 ### Also make sure that we generate an interactive scanner if we are
 ### using flex.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -13,22 +13,22 @@ top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
-XALL_CXXFLAGS_1 = $(subst -fexternal-templates, , $(ALL_CXXFLAGS))
-XALL_CXXFLAGS = $(subst -fno-implicit-templates, , $(XALL_CXXFLAGS_1))
+PT_FLAGS = -fexternal-templates -fno-implicit-templates
+CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
-	@$(CXXCPP) -c $(CPPFLAGS) $(XALL_CXXFLAGS) -DMAKE_BUILTINS $< \
+	@$(CXXCPP) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	  | $(srcdir)/mkdefs > $@.t
 	@mv $@.t $@
 
 # How to make a .oct file from a .o file:
 
 ifeq ($(OCTAVE_LITE), true)
   ifdef CXXPICFLAG
     %.oct : pic/%.o
@@ -240,16 +240,18 @@ builtins.cc: $(DEF_FILES) mkbuiltins
 	@echo making $@ from $(DEF_FILES)
 	@$(srcdir)/mkbuiltins $(DEF_FILES) > $@.t
 	@$(top_srcdir)/move-if-change $@.t $@
 
 $(DEF_FILES): mkdefs defun-int.h defun-dld.h defun.h defaults.h oct-conf.h
 
 $(MAKEDEPS): defaults.h oct-gperf.h oct-conf.h
 
+@bsd_gcc_kluge_targets_frag@
+
 check: all
 .PHONY: check
 
 install: install-bin install-oct install-lib install-inc
 .PHONY: install
 
 mk-oct-links: mk-oct-links.in
 	sed < $< > $@.tmp \
