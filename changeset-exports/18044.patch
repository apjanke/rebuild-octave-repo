# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1386016518 18000
#      Mon Dec 02 15:35:18 2013 -0500
# Node ID 728cb75305388bcacba10c850f09ee6ce60f4d6b
# Parent  8e7d2ee1254d05e346fb3441d5cfc9f923b0bc79
# Parent  c0c61619917ee8eda8fc41a3a4542adbab1717e0
maint: Periodic merge of stable to default.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -15,17 +15,17 @@ Summary of important user-visible change
      decided to wait until the 4.0.x release series before making the
      GUI the default interface (until then, you can use the --force-gui
      option to start the GUI).
 
      Given the length of time and the number of bug fixes and
      improvements since the last major release Octave, we also decided
      against delaying the release of all these new improvements any
      longer just to perfect the GUI.  So please enjoy the 3.8 release of
-     Octave and the preview of the new GUI.  We beleive it is working
+     Octave and the preview of the new GUI.  We believe it is working
      reasonably well, but we also know that there are some obvious rough
      spots and many things that could be improved.
 
      WE NEED YOUR HELP.  There are many ways that you can help us fix
      the remaining problems, complete the GUI, and improve the overall
      user experience for both novices and experts alike:
 
        * If you are a skilled software developer, you can help by
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2723,16 +2723,17 @@ if test $build_gui = yes; then
     OCTAVE_CHECK_FUNC_QABSTRACTITEMMODEL_BEGINRESETMODEL
     if test $octave_cv_func_qabstractitemmodel_beginresetmodel = no; then
       warn_gui="QAbstractItemModel::beginResetModel() not found -- disabling GUI"
       build_gui=no
     fi
   fi
 
   if test $build_gui = yes; then
+    OCTAVE_CHECK_QFONT_MONOSPACE
     OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT
   fi
 
   if test $build_gui = yes; then
     ## Check for Qscintilla library which is used in the GUI editor. 
     AC_CACHE_CHECK([whether Qscintilla library is installed],
       [octave_cv_lib_qscintilla],
       [save_CPPFLAGS="$CPPFLAGS"
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1897,17 +1897,17 @@ main_window::show_gui_info (void)
          "But because it is not quite as polished as we would like, we "
          "have decided to wait until the 4.0.x release series before "
          "making the GUI the default interface.</p>"
          "<p>Given the length of time and the number of bug fixes and "
          "improvements since the last major release Octave, we also "
          "decided against delaying the release of all these new "
          "improvements any longer just to perfect the GUI.  So please "
          "enjoy the 3.8 release of Octave and the preview of the new GUI.  "
-         "We beleive it is working reasonably well, but we also know that "
+         "We believe it is working reasonably well, but we also know that "
          "there are some obvious rough spots and many things that could be "
          "improved.</p>"
          "<p><strong>We Need Your Help</strong></p>"
          "<p>There are many ways that you can help us fix the remaining "
          "problems, complete the GUI, and improve the overall user "
          "experience for both novices and experts alike (links will open "
          "an external browser):</p>"
          "<p><ul><li>If you are a skilled software developer, you can "
diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -187,28 +187,39 @@ resource_manager::do_reload_settings (vo
       if (!qt_settings.open (QFile::ReadOnly))
         return;
 
       QTextStream in (&qt_settings);
       QString settings_text = in.readAll ();
       qt_settings.close ();
 
       // Get the default monospaced font and replace placeholder
-      QFont fixed_font = QFont ();
+#if defined (HAVE_QFONT_MONOSPACE)
+      QFont fixed_font;
       fixed_font.setStyleHint (QFont::Monospace);
-      settings_text.replace("__default_font__",fixed_font.defaultFamily ());
-      settings_text.replace("__default_font_size__","10");
+      QString default_family = fixed_font.defaultFamily ();
+#elif defined (Q_WS_X11) || defined (Q_WS_WIN)
+      QString default_family = "Courier New";
+#elif defined (Q_WS_MAC)
+      QString default_family = "Courier";
+#else
+      QString default_family = "courier";
+#endif
+      settings_text.replace ("__default_font__", default_family);
+      settings_text.replace ("__default_font_size__", "10");
 
       QFile user_settings (settings_file);
-      if (!user_settings.open (QIODevice::WriteOnly))
+
+      if (! user_settings.open (QIODevice::WriteOnly))
         return;
 
       QTextStream out (&user_settings);
+
       out << settings_text;
-      user_settings.flush ();
+
       user_settings.close ();
     }
 
   do_set_settings (settings_file);
 }
 
 void
 resource_manager::do_set_settings (const QString& file)
diff --git a/libinterp/Makefile.am b/libinterp/Makefile.am
--- a/libinterp/Makefile.am
+++ b/libinterp/Makefile.am
@@ -182,18 +182,18 @@ liboctinterp_la_LIBADD = \
   parse-tree/libparse-tree.la \
   parse-tree/libparser.la \
   corefcn/libcorefcn.la \
   corefcn/libtex_parser.la \
   $(top_builddir)/liboctave/liboctave.la \
   $(LIBOCTINTERP_LINK_DEPS)
 
 # Increment these as needed and according to the rules in the libtool manual:
-liboctinterp_current = 1
-liboctinterp_revision = 1
+liboctinterp_current = 2
+liboctinterp_revision = 0
 liboctinterp_age = 0
 
 liboctinterp_version_info = $(liboctinterp_current):$(liboctinterp_revision):$(liboctinterp_age)
 
 liboctinterp_la_LDFLAGS = \
   -version-info $(liboctinterp_version_info) \
   $(NO_UNDEFINED_LDFLAG) \
   -bindir $(bindir) \
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -2217,28 +2217,28 @@ Position file relative to the end.\n\
   return const_value ("SEEK_SET", args, -1);
 }
 
 DEFUNX ("SEEK_CUR", FSEEK_CUR, args, ,
         "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} SEEK_CUR ()\n\
 Return the numerical value to pass to @code{fseek} to\n\
 position the file pointer relative to the current position.\n\
-@seealso{SEEK_SET, SEEK_END}.\n\
+@seealso{SEEK_SET, SEEK_END}\n\
 @end deftypefn")
 {
   return const_value ("SEEK_CUR", args, 0);
 }
 
 DEFUNX ("SEEK_END", FSEEK_END, args, ,
         "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} SEEK_END ()\n\
 Return the numerical value to pass to @code{fseek} to\n\
 position the file pointer relative to the end of the file.\n\
-@seealso{SEEK_SET, SEEK_CUR}.\n\
+@seealso{SEEK_SET, SEEK_CUR}\n\
 @end deftypefn")
 {
   return const_value ("SEEK_END", args, 1);
 }
 
 static octave_value
 const_value (const char *, const octave_value_list& args,
              const octave_value& val)
diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -132,17 +132,20 @@ void
 remove_input_event_hook_functions (void)
 {
   input_event_hook_functions.clear ();
 }
 
 void
 set_default_prompts (void)
 {
-  VPS1 = "\\s:\\#> ";
+  // Use literal "octave" instead of "\\s" to avoid setting the prompt
+  // to "octave.exe" or "octave-gui", etc.
+
+  VPS1 = "octave:\\#> ";
   VPS2 = "> ";
   VPS4 = "+ ";
 
   octave_link::set_default_prompts (VPS1, VPS2, VPS4);
 }
 
 void
 octave_base_reader::do_input_echo (const std::string& input_string) const
@@ -1232,17 +1235,17 @@ for input.\n\
 DEFUN (PS1, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} PS1 ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} PS1 (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} PS1 (@var{new_val}, \"local\")\n\
 Query or set the primary prompt string.  When executing interactively,\n\
 Octave displays the primary prompt when it is ready to read a command.\n\
 \n\
-The default value of the primary prompt string is @qcode{\"\\s:\\#> \"}.\n\
+The default value of the primary prompt string is @qcode{\"octave:\\#> \"}.\n\
 To change it, use a command like\n\
 \n\
 @example\n\
 PS1 (\"\\\\u@@\\\\H> \")\n\
 @end example\n\
 \n\
 @noindent\n\
 which will result in the prompt @samp{boris@@kremvax> } for the user\n\
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -99,18 +99,18 @@ liboctave_la_LIBADD = \
   numeric/libnumeric.la \
   operators/liboperators.la \
   system/libsystem.la \
   util/libutil.la \
   $(top_builddir)/libgnu/libgnu.la \
   $(LIBOCTAVE_LINK_DEPS)
 
 # Increment these as needed and according to the rules in the libtool manual:
-liboctave_current = 1
-liboctave_revision = 1
+liboctave_current = 2
+liboctave_revision = 0
 liboctave_age = 0
 
 liboctave_version_info = $(liboctave_current):$(liboctave_revision):$(liboctave_age)
 
 liboctave_la_LDFLAGS = \
   -version-info $(liboctave_version_info) \
   $(NO_UNDEFINED_LDFLAG) \
   @XTRA_CRUFT_SH_LDFLAGS@ \
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -354,16 +354,40 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_GLUTESSCALLB
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_func_glutesscallback_threedots = yes; then
     AC_DEFINE(HAVE_GLUTESSCALLBACK_THREEDOTS, 1,
       [Define to 1 if gluTessCallback is called with (...).])
   fi
 ])
 dnl
+dnl Check whether Qt provides QFont::Monospace
+dnl
+AC_DEFUN([OCTAVE_CHECK_QFONT_MONOSPACE], [
+  AC_CACHE_CHECK([whether Qt provides QFont::Monospace],
+    [octave_cv_decl_qfont_monospace],
+    [AC_LANG_PUSH(C++)
+    ac_octave_save_CPPFLAGS="$CPPFLAGS"
+    CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+        #include <QFont>
+        ]], [[
+        QFont::StyleHint hint = QFont::Monospace;
+        ]])],
+      octave_cv_decl_qfont_monospace=yes,
+      octave_cv_decl_qfont_monospace=no)
+    CPPFLAGS="$ac_octave_save_CPPFLAGS"
+    AC_LANG_POP(C++)
+  ])
+  if test $octave_cv_decl_qfont_monospace = yes; then
+    AC_DEFINE(HAVE_QFONT_MONOSPACE, 1,
+      [Define to 1 if Qt provides QFont::Monospace.])
+  fi
+])
+dnl
 dnl Check whether Qscintilla SetPlaceholderText function exists.
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT], [
   AC_CACHE_CHECK([whether Qt has SetPlaceholderText function],
     [octave_cv_func_setplaceholdertext],
     [AC_LANG_PUSH(C++)
