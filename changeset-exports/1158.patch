# HG changeset patch
# User jwe
# Date 793861557 0
#      Mon Feb 27 05:05:57 1995 +0000
# Node ID 27cb099a7af9c09c9e3e9fbef2e5d1ee0966e533
# Parent  53ec9f8e72269f670bc55405b11108650875011e
[project @ 1995-02-27 05:04:31 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -431,17 +431,21 @@ print a directory listing")
   Octave_object retval;
 
   DEFINE_ARGV("ls");
 
   ostrstream ls_buf;
 
   ls_buf << "ls -C ";
   for (int i = 1; i < argc; i++)
-    ls_buf << tilde_expand (argv[i]) << " ";
+    {
+      char *tmp = tilde_expand (argv[i]);
+      ls_buf << tmp << " ";
+      free (tmp);
+    }
 
   ls_buf << ends;
 
   char *ls_command = ls_buf.str ();
 
   iprocstream cmd (ls_command);
 
   char ch;
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -2174,17 +2174,22 @@ found in the file will be replaced with 
 			    list_only, swap, verbose, argv, argc,
 			    nargout);
 	}
       else
 	error ("load: must specify file format if reading from stdin");
     }
   else
     {
-      char *fname = tilde_expand (*argv);
+      static char *fname = 0;
+
+      if (fname)
+	free (fname);
+
+      fname = tilde_expand (*argv);
 
       if (format == LS_UNKNOWN)
 	format = get_file_format (fname, orig_fname);
 
       if (format != LS_UNKNOWN)
 	{
 	  argv++;
 	  argc--;
@@ -2958,17 +2963,22 @@ save variables in a file")
   else if (argc == 1 && glob_pattern_p (*argv)) // Guard against things
     {						// like `save a*',
       print_usage ("save");			// which are probably
       DELETE_ARGV;				// mistakes...
       return retval;
     }
   else
     {
-      char *fname = tilde_expand (*argv);
+      stati cchar *fname = 0;
+
+      if (fname)
+	free (fname);
+
+      fname = tilde_expand (*argv);
 
       argc--;
       argv++;
 
       unsigned mode = ios::out|ios::trunc;
       if (format == LS_BINARY || format == LS_MAT_BINARY)
 	mode |= ios::bin;
 
