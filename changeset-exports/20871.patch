# HG changeset patch
# User Rik <rik@octave.org>
# Date 1449943715 28800
#      Sat Dec 12 10:08:35 2015 -0800
# Node ID 1e4edab2d22f4018db3e95a11fa790b2c22fcae4
# Parent  020b71557b12010a4043db2b7abca64f660fd301
2015 Code Sprint: __eigs__.cc: use ovl ().

diff --git a/libinterp/dldfcn/__eigs__.cc b/libinterp/dldfcn/__eigs__.cc
--- a/libinterp/dldfcn/__eigs__.cc
+++ b/libinterp/dldfcn/__eigs__.cc
@@ -430,21 +430,17 @@ Undocumented internal function.\n\
               (acm, typ, k, p, info, eig_vec, eig_val, bcm, permB,
                cresid, octave_stdout, tol, (nargout > 1), cholB, disp,
                maxit);
         }
 
       if (nargout < 2)
         retval(0) = eig_val;
       else
-        {
-          retval(2) = double (info);
-          retval(1) = ComplexDiagMatrix (eig_val);
-          retval(0) = eig_vec;
-        }
+        retval = ovl (eig_vec, ComplexDiagMatrix (eig_val), double (info));
     }
   else if (sigmai != 0.)
     {
       // Promote real problem to a complex one.
       ComplexMatrix eig_vec;
       ComplexColumnVector eig_val;
 
       if (have_a_fun)
@@ -464,21 +460,17 @@ Undocumented internal function.\n\
               (ComplexMatrix (amm), sigma, k, p, info, eig_vec,
                eig_val, ComplexMatrix (bmm), permB, cresid,
                octave_stdout, tol, (nargout > 1), cholB, disp, maxit);
         }
 
       if (nargout < 2)
         retval(0) = eig_val;
       else
-        {
-          retval(2) = double (info);
-          retval(1) = ComplexDiagMatrix (eig_val);
-          retval(0) = eig_vec;
-        }
+        retval = ovl (eig_vec, ComplexDiagMatrix (eig_val), double (info));
     }
   else
     {
       if (symmetric)
         {
           Matrix eig_vec;
           ColumnVector eig_val;
 
@@ -512,21 +504,17 @@ Undocumented internal function.\n\
                   (amm, typ, k, p, info, eig_vec, eig_val, bmm, permB,
                    resid, octave_stdout, tol, (nargout > 1), cholB,
                    disp, maxit);
             }
 
           if (nargout < 2)
             retval(0) = eig_val;
           else
-            {
-              retval(2) = double (info);
-              retval(1) = DiagMatrix (eig_val);
-              retval(0) = eig_vec;
-            }
+            retval = ovl (eig_vec, DiagMatrix (eig_val), double (info));
         }
       else
         {
           ComplexMatrix eig_vec;
           ComplexColumnVector eig_val;
 
           if (have_a_fun)
             nconv = EigsRealNonSymmetricFunc
@@ -558,21 +546,17 @@ Undocumented internal function.\n\
                   (amm, typ, k, p, info, eig_vec, eig_val, bmm, permB,
                    resid, octave_stdout, tol, (nargout > 1), cholB,
                    disp, maxit);
             }
 
           if (nargout < 2)
             retval(0) = eig_val;
           else
-            {
-              retval(2) = double (info);
-              retval(1) = ComplexDiagMatrix (eig_val);
-              retval(0) = eig_vec;
-            }
+            retval = ovl (eig_vec, ComplexDiagMatrix (eig_val), double (info));
         }
     }
 
   if (nconv <= 0)
     warning ("eigs: None of the %d requested eigenvalues converged", k);
   else if (nconv < k)
     warning ("eigs: Only %d of the %d requested eigenvalues converged",
              nconv, k);
