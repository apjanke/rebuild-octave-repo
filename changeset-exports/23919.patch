# HG changeset patch
# User Rik <rik@octave.org>
# Date 1502816523 25200
#      Tue Aug 15 10:02:03 2017 -0700
# Node ID 185f850aa543f7dffb272b7d4242ef1b1fdde6e6
# Parent  7662b441e2eabded0a7c61947707700c84456f6d
Modify demos to return empty matrices for unused outputs (bug #51754).

* helloworld.cc: Declare retval as an octave_value_list and fill it with empty
Matrix() octave_value objects.

* mex_demo.c, myhello.c: Use mxCreateDoubleMatrix with 0 rows, 0 columns to
create empty matrices to return for unused outputs.

diff --git a/examples/code/helloworld.cc b/examples/code/helloworld.cc
--- a/examples/code/helloworld.cc
+++ b/examples/code/helloworld.cc
@@ -2,10 +2,15 @@
 
 DEFUN_DLD (helloworld, args, nargout,
            "Hello World Help String")
 {
   octave_stdout << "Hello World has "
                 << args.length () << " input arguments and "
                 << nargout << " output arguments.\n";
 
-  return octave_value_list ();
+  // Return empty matrices for any outputs
+  octave_value_list retval (nargout);
+  for (int i = 0; i < nargout; i++)
+    retval(i) = octave_value (Matrix ());
+
+  return retval;
 }
diff --git a/examples/code/mex_demo.c b/examples/code/mex_demo.c
--- a/examples/code/mex_demo.c
+++ b/examples/code/mex_demo.c
@@ -45,14 +45,19 @@
 void
 mexFunction (int nlhs, mxArray *plhs[],
              int nrhs, const mxArray *prhs[])
 {
   mexPrintf ("Hello, World!\n");
 
   mexPrintf ("I have %d inputs and %d outputs\n", nrhs, nlhs);
 
+  /* Demonstrate returning a matrix with a double value */
   mxArray *v = mxCreateDoubleMatrix (1, 1, mxREAL);
   double *data = mxGetPr (v);
   *data = 1.23456789;
+  plhs[0] = v;
 
-  plhs[0] = v;
+  /* Return empty matrices for any other outputs */
+  int i;
+  for (i = 1; i < nlhs; i++)
+    plhs[i] = mxCreateDoubleMatrix (0, 0, mxREAL);
 }
diff --git a/examples/code/myhello.c b/examples/code/myhello.c
--- a/examples/code/myhello.c
+++ b/examples/code/myhello.c
@@ -2,9 +2,14 @@
 
 void
 mexFunction (int nlhs, mxArray *plhs[],
              int nrhs, const mxArray *prhs[])
 {
   mexPrintf ("Hello, World!\n");
 
   mexPrintf ("I have %d inputs and %d outputs\n", nrhs, nlhs);
+
+  /* Return empty matrices for any outputs */
+  int i;
+  for (i = 0; i < nlhs; i++)
+    plhs[i] = mxCreateDoubleMatrix (0, 0, mxREAL);
 }
