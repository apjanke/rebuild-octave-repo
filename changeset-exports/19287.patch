# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1414519081 14400
#      Tue Oct 28 13:58:01 2014 -0400
# Node ID 86f50893acd8a62f7c55797251dfba8e6844f6f2
# Parent  e1713e281ac540f4cee71be966a59e2decb795d0
# Parent  0e077a29854f2986dfbdcf39aba563e3970069c7
maint: Periodic merge of gui-release to default.

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1572,20 +1572,32 @@ file_editor_tab::save_file_as (bool remo
   extra->addWidget (separator,0,0,1,3);
   extra->addWidget (label_eol,1,0);
   extra->addWidget (combo_eol,1,1);
   extra->addItem   (spacer,   1,2);
 
   // and add the extra grid layout to the dialog's layout
   dialog_layout->addLayout (extra,rows,0,1,dialog_layout->columnCount ());
 
+  // add the possible filters and the default suffix
+  QStringList filters;
+  filters << tr ("Octave Files (*.m)")
+          << tr ("All Files (*)");
+  fileDialog->setNameFilters (filters);
+  fileDialog->setDefaultSuffix ("m");
 
   if (valid_file_name ())
     {
       fileDialog->selectFile (_file_name);
+      QFileInfo file_info (_file_name);
+      if (file_info.suffix () != "m")
+        { // it is not an octave file
+          fileDialog->selectNameFilter (filters.at (1));  // "All Files"
+          fileDialog->setDefaultSuffix ("");              // no default suffix
+        }
     }
   else
     {
       fileDialog->selectFile ("");
 
       if (_file_name.isEmpty ())
         fileDialog->setDirectory (QDir::currentPath ());
       else
@@ -1596,21 +1608,22 @@ file_editor_tab::save_file_as (bool remo
         }
 
       // propose a name corresponding to the function name
       QString fname = get_function_name ();
       if (! fname.isEmpty ())
         fileDialog->selectFile (fname + ".m");
     }
 
-  fileDialog->setNameFilter (tr ("Octave Files (*.m);;All Files (*)"));
-  fileDialog->setDefaultSuffix ("m");
   fileDialog->setAcceptMode (QFileDialog::AcceptSave);
   fileDialog->setViewMode (QFileDialog::Detail);
 
+  connect (fileDialog, SIGNAL (filterSelected (const QString&)),
+           this, SLOT (handle_save_as_filter_selected (const QString&)));
+
   if (remove_on_success)
     {
       connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                this, SLOT (handle_save_file_as_answer_close (const QString&)));
 
       connect (fileDialog, SIGNAL (rejected ()),
                this, SLOT (handle_save_file_as_answer_cancel ()));
     }
@@ -1624,16 +1637,30 @@ file_editor_tab::save_file_as (bool remo
 }
 
 void
 file_editor_tab::handle_combo_eol_current_index (int index)
 {
   _save_as_desired_eol = static_cast<QsciScintilla::EolMode> (index);
 }
 
+void
+file_editor_tab::handle_save_as_filter_selected (const QString& filter)
+{
+  QFileDialog *file_dialog = qobject_cast<QFileDialog *> (sender ());
+
+  QRegExp rx ("\\*\\.([^ ^\\)]*)[ \\)]");   // regexp for suffix in filter
+  int index = rx.indexIn (filter,0);        // get first suffix in filter
+
+  if (index > -1)
+    file_dialog->setDefaultSuffix (rx.cap (1)); // found a suffix, set default
+  else
+    file_dialog->setDefaultSuffix ("");         // not found, clear default
+}
+
 bool
 file_editor_tab::check_valid_identifier (QString file_name)
 {
   QFileInfo file = QFileInfo (file_name);
   QString base_name = file.baseName ();
 
   if ((file.suffix () == "m")
       && (! valid_identifier (base_name.toStdString ())))
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -157,16 +157,17 @@ private slots:
 
   // When user closes find_dialog box.
   void handle_find_dialog_finished (int decision);
 
   // When user closes QFileDialog box.
   void handle_save_file_as_answer (const QString& fileName);
   void handle_save_file_as_answer_close (const QString& fileName);
   void handle_save_file_as_answer_cancel ();
+  void handle_save_as_filter_selected (const QString& filter);
   void handle_combo_eol_current_index (int index);
 
   // When apis preparation has finished and is ready to save
   void save_apis_info ();
 
   // When the numer of lines changes -> adapt width of margin
   void auto_margin_width ();
 
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -164,17 +164,18 @@ object) relevant global values before an
   while (0)
 
 #define CMD_OR_COMPUTED_ASSIGN_OP(PATTERN, TOK) \
  \
   do \
     { \
       curr_lexer->lexer_debug (PATTERN); \
  \
-      if (curr_lexer->previous_token_may_be_command ()) \
+      if (curr_lexer->previous_token_may_be_command () \
+          && curr_lexer->space_follows_previous_token ()) \
         { \
           yyless (0); \
           curr_lexer->push_start_state (COMMAND_START); \
         } \
       else \
         { \
           return curr_lexer->handle_incompatible_op (PATTERN, TOK, false); \
         } \
diff --git a/scripts/plot/draw/private/__bar__.m b/scripts/plot/draw/private/__bar__.m
--- a/scripts/plot/draw/private/__bar__.m
+++ b/scripts/plot/draw/private/__bar__.m
@@ -432,16 +432,18 @@ function update_data (h, ~)
       hlist = get (h, "bargroup");
       x = get (h, "xdata");
       if (! isvector (x))
         x = x(:);
       endif
       ydat = get (hlist, "ydata");
       if (iscell (ydat))
         y = cell2mat (ydat.');
+      elseif (isvector (ydat))
+        y = ydat(:);
       else
         y = ydat;
       endif
 
       [xb, yb] = bar (x, y, get (h, "barwidth"), get (h, "barlayout"),
                       "basevalue", get (h, "basevalue"));
 
       vertical = strcmp (get (h, "horizontal"), "off");
