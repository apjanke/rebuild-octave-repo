# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456337213 18000
#      Wed Feb 24 13:06:53 2016 -0500
# Node ID 6228796397bca29ddbea518da72c1a809e5f7e45
# Parent  8fc2a9e0d7293cb9aad4e4d9f34a849e57514ccf
* symtab.cc: Avoid shadowed variable warnings.

diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -717,17 +717,17 @@ symbol_table::fcn_info::fcn_info_rep::xf
                                              bool local_funcs)
 {
   if (local_funcs)
     {
       // Subfunction.  I think it only makes sense to check for
       // subfunctions if we are currently executing a function defined
       // from a .m file.
 
-      octave_user_function *curr_fcn = symbol_table::get_curr_fcn ();
+      octave_user_function *current_fcn = symbol_table::get_curr_fcn ();
 
       for (scope_id scope = xcurrent_scope; scope >= 0;)
         {
           scope_val_iterator r = subfunctions.find (scope);
           if (r != subfunctions.end ())
             {
               // FIXME: out-of-date check here.
 
@@ -738,19 +738,19 @@ symbol_table::fcn_info::fcn_info_rep::xf
           if (scope_curr_fcn)
             scope = scope_curr_fcn->parent_fcn_scope ();
           else
             scope = -1;
         }
 
       // Private function.
 
-      if (curr_fcn)
+      if (current_fcn)
         {
-          std::string dir_name = curr_fcn->dir_name ();
+          std::string dir_name = current_fcn->dir_name ();
 
           if (! dir_name.empty ())
             {
               str_val_iterator q = private_functions.find (dir_name);
 
               if (q == private_functions.end ())
                 {
                   octave_value val = load_private_function (dir_name);
@@ -937,21 +937,21 @@ symbol_table::fcn_info::fcn_info_rep::x_
 
   // Command-line function.
 
   if (cmdline_function.is_defined ())
     return cmdline_function;
 
   // Private function.
 
-  octave_user_function *curr_fcn = symbol_table::get_curr_fcn ();
+  octave_user_function *current_fcn = symbol_table::get_curr_fcn ();
 
-  if (curr_fcn)
+  if (current_fcn)
     {
-      std::string dir_name = curr_fcn->dir_name ();
+      std::string dir_name = current_fcn->dir_name ();
 
       if (! dir_name.empty ())
         {
           str_val_iterator q = private_functions.find (dir_name);
 
           if (q == private_functions.end ())
             {
               octave_value val = load_private_function (dir_name);
