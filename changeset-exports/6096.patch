# HG changeset patch
# User jwe
# Date 1161827870 0
#      Thu Oct 26 01:57:50 2006 +0000
# Node ID 40212bfaed1d84f80e2e9228372896767b863bee
# Parent  a8aa7a014c224246a3ff76740df5360c7bc9bfe5
[project @ 2006-10-26 01:57:49 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -12,16 +12,23 @@ 2006-10-25  Michael Goffioul  <michael.g
 	* glob-match.h (glob_match::glob_match (const std::string&,
 	unsigned int)): Delete initializer for first arg.
 
 	* lo-sysdep.cc (opendir, readdir, rewinddir, closedir):
 	New functions.
 
 	* Makefile.in (XTRA_CDEFS, XTRA_CXXDEFS): Substitute here.
 
+	* oct-env.cc (octave_env::do_get_home_directory) [_MSC_VER]: Use
+	same code as __MINGW32__.
+	* syswait.h [_MSC_VER]: Define HAVE_WAITPID, WAITPID, and WNOHANG
+	the same as for __MINGW32__.
+
+	* randpoisson.c: Undefine INFINITE before redefining.
+
 2006-10-24  David Bateman  <dbateman@free.fr>
 
 	* Sparse.cc (assign (Sparse<LT>&, const Sparse<RT>&)): Resize the
 	lhs at the point we know the assignment can succeed if the lhs is
 	empty.
 
 2006-10-23  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/oct-env.cc b/liboctave/oct-env.cc
--- a/liboctave/oct-env.cc
+++ b/liboctave/oct-env.cc
@@ -370,18 +370,18 @@ octave_env::do_getcwd () const
 // This value is not cached because it can change while Octave is
 // running.
 
 std::string
 octave_env::do_get_home_directory (void) const
 {
   std::string hd = do_getenv ("HOME");
 
-#if defined (__MINGW32__)
-  // Maybe we are started directly from cmd.exe
+#if defined (__MINGW32__) || defined (_MSC_VER)
+  // Maybe we are started directly from cmd.exe.
   if (hd.empty ())
     {
       std::string drv = do_getenv ("HOMEDRIVE");
       if (drv.empty ())
 	hd = do_getenv ("HOMEPATH");
       else
 	hd = drv + do_getenv ("HOMEPATH");
     }
diff --git a/liboctave/randpoisson.c b/liboctave/randpoisson.c
--- a/liboctave/randpoisson.c
+++ b/liboctave/randpoisson.c
@@ -18,16 +18,17 @@
 #include "f77-fcn.h"
 #include "lo-ieee.h"
 #include "lo-error.h"
 #include "randmtzig.h"
 #include "randpoisson.h"
 
 #undef NAN
 #define NAN octave_NaN
+#undef INFINITE
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
 #define RNOR oct_randn()
 #define LGAMMA xlgamma
 
 F77_RET_T
 F77_FUNC (dlgams, DLGAMS) (const double *, double *, double *);
 
diff --git a/liboctave/syswait.h b/liboctave/syswait.h
--- a/liboctave/syswait.h
+++ b/liboctave/syswait.h
@@ -70,17 +70,17 @@ extern "C" {
 #define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
 #endif
 
 #ifndef WIFSIGNALLED
 #define WIFSIGNALLED(stat_val) \
   (((stat_val) & 0177) != 0177 && ((stat_val) & 0177) != 0)
 #endif
 
-#if defined (__MINGW32__)
+#if defined (__MINGW32__) || defined (_MSC_VER)
 #define HAVE_WAITPID 1
 #include <process.h>
 #define WAITPID(a, b, c) _cwait (b, a, c)
 /* Action argument is ignored for _cwait, so arbitrary definition.  */
 #define WNOHANG 0
 #else
 #define WAITPID(a, b, c) waitpid (a, b, c)
 #endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -2,16 +2,21 @@ 2006-10-25  John W. Eaton  <jwe@octave.o
 
 	* oct-procbuf.cc (BUFSIZ): Define if not already defined.
 	(octave_procbuf::open): Pass BUFSIZ as size argument to setvbuf.
 
 2006-10-25  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* Makefile.in (XTRA_CDEFS, XTRA_CXXDEFS): Substitute here.
 
+	* oct-procbuf.cc [_MSC_VER]: Define W32POPEN and W32PCLOSE the
+	same as for __MINGW32__.
+	(octave_procbuf::open, octave_procbuf::close) [_MSC_VER]:
+	Use the same code as for __MINGW32__ and __CYGWIN__.
+
 2006-10-25  John W. Eaton  <jwe@octave.org>
 
 	* sysdep.cc (w32_set_octave_home): Correctly initialize bin_dir.
 	Fill it with '\0' instead of ' '.
 
 2006-10-24  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* Makefile.in: Filter out $(XTRA_CXXDEFS) from $(ALL_CXXFLAGS) for
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -49,29 +49,29 @@ 02110-1301, USA.
 // This class is based on the procbuf class from libg++, written by
 // Per Bothner, Copyright (C) 1993 Free Software Foundation.
 
 static octave_procbuf *octave_procbuf_list = 0;
 
 #if defined (__CYGWIN__)
 #define W32POPEN popen
 #define W32PCLOSE pclose
-#elif defined (__MINGW32__)
+#elif defined (__MINGW32__) || defined (_MSC_VER)
 #define W32POPEN _popen
 #define W32PCLOSE _pclose
 #endif
 
 #ifndef BUFSIZ
 #define BUFSIZ 1024
 #endif
 
 octave_procbuf *
 octave_procbuf::open (const char *command, int mode)
 {
-#if defined (__CYGWIN__) || defined (__MINGW32__)
+#if defined (__CYGWIN__) || defined (__MINGW32__) || defined (_MSC_VER)
 
   if (is_open ()) 
     return 0;
 
   f = ::W32POPEN (command, (mode & std::ios::in) ? "r" : "w");
 
   if (! f)
     return 0;
@@ -167,19 +167,17 @@ octave_procbuf::open (const char *comman
   return 0;
 
 #endif
 }
 
 octave_procbuf *
 octave_procbuf::close (void)
 {
-
-
-#if defined (__CYGWIN__) || defined (__MINGW32__)
+#if defined (__CYGWIN__) || defined (__MINGW32__) || defined (_MSC_VER)
 
   if (f)
     {
       wstatus = ::W32PCLOSE (f);
       f = 0;
     }
 
   open_p = false;
