# HG changeset patch
# User Rik <rik@octave.org>
# Date 1521826185 25200
#      Fri Mar 23 10:29:45 2018 -0700
# Branch stable
# Node ID 0b9e7fcaab91905bfc740684e18e7b2faabba448
# Parent  d85b2485af9e51276a94340791be02d542e9dd3b
doc: grammarcheck docstrings in C++ files ahead of 4.4 release.

* defaults.cc, dirfns.cc, load-save.cc, pr-flt-fmt.cc, quadcc.cc, regexp.cc,
qr.cc: Use Octave conventions in documentation strings.

diff --git a/libinterp/corefcn/defaults.cc b/libinterp/corefcn/defaults.cc
--- a/libinterp/corefcn/defaults.cc
+++ b/libinterp/corefcn/defaults.cc
@@ -337,17 +337,17 @@ OCTAVE_HOME corresponds to the configura
 %!error OCTAVE_HOME (1)
 */
 
 DEFUN (OCTAVE_EXEC_HOME, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {} OCTAVE_HOME ()
 Return the name of the top-level Octave installation directory for
 architecture-dependendent files.  If not specified separately, the value
-is the same as OCTAVE_HOME.  OCTAVE_EXEC_HOME corresponds to the
+is the same as OCTAVE_HOME@.  OCTAVE_EXEC_HOME corresponds to the
 configuration variable @var{exec_prefix}.
 @seealso{EXEC_PATH, IMAGE_PATH, OCTAVE_HOME}
 @end deftypefn */)
 {
   if (args.length () != 0)
     print_usage ();
 
   return ovl (octave::config::octave_exec_home ());
diff --git a/libinterp/corefcn/dirfns.cc b/libinterp/corefcn/dirfns.cc
--- a/libinterp/corefcn/dirfns.cc
+++ b/libinterp/corefcn/dirfns.cc
@@ -649,17 +649,17 @@ It is @samp{/} (forward slash) under UNI
       retval = octave::sys::file_ops::dir_sep_chars ();
     }
 
   return retval;
 }
 
 DEFUN (pathsep, args, ,
        doc: /* -*- texinfo -*-
-@deftypefn  {} {@var{val} =} pathsep ()
+@deftypefn {} {@var{val} =} pathsep ()
 Query the character used to separate directories in a path.
 @seealso{filesep}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin > 0)
     print_usage ();
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -1503,17 +1503,17 @@ is 0, otherwise return the output in a c
 @table @code
 @item -append
 Append to the destination instead of overwriting.
 
 @item -ascii
 Save a matrix in a text file without a header or any other information.  The
 matrix must be 2-D and only the real part of any complex value is written to
 the file.  Numbers are stored in single-precision format and separated by
-spaces.  Additional options for the @code{-ascii} format are
+spaces.  Additional options for the @option{-ascii} format are
 
 @table @code
 @item -double
 Store numbers in double-precision format.
 
 @item -tabs
 Separate numbers with tabs.
 @end table
diff --git a/libinterp/corefcn/pr-flt-fmt.cc b/libinterp/corefcn/pr-flt-fmt.cc
--- a/libinterp/corefcn/pr-flt-fmt.cc
+++ b/libinterp/corefcn/pr-flt-fmt.cc
@@ -42,17 +42,17 @@ output_precision (void)
 void
 set_output_prec (int prec)
 {
   Voutput_precision = prec;
 }
 
 DEFUN (output_max_field_width, , ,
        doc: /* -*- texinfo -*-
-@deftypefn  {} {} output_max_field_width
+@deftypefn {} {} output_max_field_width
 This function is obsolete and will be removed from a future version
 of Octave.
 @end deftypefn */)
 {
   return octave_value (20);
 }
 
 DEFUN (output_precision, args, nargout,
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -1547,17 +1547,17 @@ other methods such as @code{quadgk}.
 The algorithm uses @nospell{Clenshaw-Curtis} quadrature rules of increasing
 degree in each interval and bisects the interval if either the function does
 not appear to be smooth or a rule of maximum degree has been reached.  The
 error estimate is computed from the L2-norm of the difference between two
 successive interpolations of the integrand over the nodes of the respective
 quadrature rules.
 
 @c FIXME: Remove in Octave version 4.8
-Implementation Note: For Octave versions <= 4.2, @code{quadcc} accepted a
+Implementation Note: For Octave versions @leq{} 4.2, @code{quadcc} accepted a
 single tolerance argument which specified the relative tolerance.  For
 versions 4.4 and 4.6, @code{quadcc} will issue a warning when called with a
 single tolerance argument indicating that the meaning of this input has
 changed from relative tolerance to absolute tolerance.  The warning ID for this
 message is @qcode{"Octave:quadcc:RelTol-conversion"}.  The warning may be
 disabled with @code{warning ("off", "Octave:quadcc:RelTol-conversion")}.
 
 Reference: @nospell{P. Gonnet}, @cite{Increasing the Reliability of Adaptive
diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -856,24 +856,26 @@ Zero-length matches are not returned.  (
 
 @item emptymatch
 Return zero-length matches.
 
 @code{regexp ('a', 'b*', 'emptymatch')} returns @code{[1 2]} because there
 are zero or more @qcode{'b'} characters at positions 1 and end-of-string.
 
 @end table
+
 Stack Limitation Note: Pattern searches are done with a recursive function
 which can overflow the program stack when there are a high number of matches.
 For example,
 
 @example
 @code{regexp (repmat ('a', 1, 1e5), '(a)+')}
 @end example
 
+@noindent
 may lead to a segfault.  As an alternative, consider constructing pattern
 searches that reduce the number of matches (e.g., by creatively using set
 complement), and then further processing the return variables (now reduced in
 size) with successive @code{regexp} searches.
 @seealso{regexpi, strfind, regexprep}
 @end deftypefn */)
 {
   if (args.length () < 2)
diff --git a/libinterp/dldfcn/qr.cc b/libinterp/dldfcn/qr.cc
--- a/libinterp/dldfcn/qr.cc
+++ b/libinterp/dldfcn/qr.cc
@@ -221,22 +221,23 @@ In this case, the defining relationship 
 
 @example
 @var{Q} * @var{R} = @var{A}(:, @var{P})
 @end example
 
 The default, however, is to return a permutation matrix and this may be
 explicitly specified by using a final argument of @qcode{"matrix"}.
 
-If the final argument is the scalar 0 an "economy" factorization is returned.
-When the original matrix @var{A} has size MxN and M > N then the "economy"
-factorization will calculate just N rows in @var{R} and N columns in @var{Q}
-and omit the zeros in @var{R}.  If M @leq{} N there is no difference between
-the economy and standard factorizations.  When calculating an "economy"
-factorization the output @var{P} is always a vector rather than a matrix.
+If the final argument is the scalar 0 an @qcode{"economy"} factorization is
+returned.  When the original matrix @var{A} has size MxN and M > N then the
+@qcode{"economy"} factorization will calculate just N rows in @var{R} and N
+columns in @var{Q} and omit the zeros in @var{R}.  If M @leq{} N there is no
+difference between the economy and standard factorizations.  When calculating
+an @qcode{"economy"} factorization the output @var{P} is always a vector
+rather than a matrix.
 
 Background: The QR factorization has applications in the solution of least
 squares problems
 @tex
 $$
 \min_x \left\Vert A x - b \right\Vert_2
 $$
 @end tex
