# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1469203731 14400
#      Fri Jul 22 12:08:51 2016 -0400
# Node ID 63c806042c2704c4b160979b3fe1e8bc20831356
# Parent  623b556e9d45e3af6d42338d545b3ee9479b6f04
convert errors in onCleanup destructor to warnings (bug #48574)

diff --git a/libinterp/octave-value/ov-oncleanup.cc b/libinterp/octave-value/ov-oncleanup.cc
--- a/libinterp/octave-value/ov-oncleanup.cc
+++ b/libinterp/octave-value/ov-oncleanup.cc
@@ -71,35 +71,40 @@ octave_oncleanup::~octave_oncleanup (voi
   // Clear interrupts.
   frame.protect_var (octave_interrupt_state);
   octave_interrupt_state = 0;
 
   // Disallow quit().
   frame.protect_var (quit_allowed);
   quit_allowed = false;
 
+  interpreter_try (frame);
+
   try
     {
       // Run the actual code.
       fcn.do_multi_index_op (0, octave_value_list ());
     }
   catch (const octave_interrupt_exception&)
     {
       recover_from_exception ();
 
       warning ("onCleanup: interrupt occurred in cleanup action");
     }
   catch (const octave_execution_exception&)
     {
-      throw;
+      std::string msg = last_error_message ();
+      warning ("onCleanup: error caught while executing cleanup function:\n%s\n",
+               msg.c_str ());
+      
     }
   catch (...) // Yes, the black hole.  We're in a d-tor.
     {
       // This shouldn't happen, in theory.
-      error ("onCleanup: internal error: unhandled exception in cleanup action");
+      warning ("onCleanup: internal error: unhandled exception in cleanup action");
     }
 }
 
 octave_scalar_map
 octave_oncleanup::scalar_map_value (void) const
 {
   octave_scalar_map retval;
   retval.setfield ("task", fcn);
