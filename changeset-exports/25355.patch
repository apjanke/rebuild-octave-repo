# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1525616838 -7200
#      Sun May 06 16:27:18 2018 +0200
# Node ID 5bb07f6e370732bf6300f4b28416340871ba5a2a
# Parent  05a690606fd56126ad6ed5fcfc667b43de5f4ac1
fix uninitialized settings of octave dock widgets at startup (bug #53835)

* octave-dock-widget.cc (octave_dock_widget): new parameter for object name
  allowing to set the object name as very first action, call handle_settings
  already in the ctor of this class;
  (qdockwidget_css): minor update of the dock/hide icon geometry
  (make_widget):  do not use stored dock area for re-docking;
  (handle_settings): do not read dock area but do read last dock geometry;
  (save_settings): get latest geometry  before saving the settings, do not
  save the dock area;

* octave-dock-widget.h: object name as new parameter for ctor,
  delete class variable for storing dock area

* documentation-dock-widget.cc (documentation_dock_widget): provide object
  name as new parameter to octave_dock_widget
* files-dock-widget.cc (files_dock_widget): dito
* history-dock-widget.cc (history_dock_widget): dito
* file-editor-interface.h (file_editor_interface): dito
* terminal-dock-widget.cc (terminal_dock_widget): dito
* variable-editor.cc (variable_editor): dito
* workspace-view.cc (workspace_view): dito

* variable-editor-model.cc (base_ve_model::data): remove code snippets that
  were previously canceled by #if 0 statement

diff --git a/libgui/src/documentation-dock-widget.cc b/libgui/src/documentation-dock-widget.cc
--- a/libgui/src/documentation-dock-widget.cc
+++ b/libgui/src/documentation-dock-widget.cc
@@ -27,19 +27,18 @@ along with Octave; see the file COPYING.
 #include "documentation-dock-widget.h"
 
 #include "help.h"
 #include "interpreter-private.h"
 
 namespace octave
 {
   documentation_dock_widget::documentation_dock_widget (QWidget *p)
-    : octave_dock_widget (p)
+    : octave_dock_widget ("DocumentationDockWidget", p)
   {
-    setObjectName ("DocumentationDockWidget");
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setWindowTitle (tr ("Documentation"));
     setStatusTip (tr ("See the documentation for help."));
 
     m_docs = new documentation (this);
     setWidget (m_docs);
 
     connect (p, SIGNAL (show_doc_signal (const QString&)),
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -61,19 +61,18 @@ namespace octave
     void mousePressEvent (QMouseEvent *e)
     {
       if (e->button () != Qt::RightButton)
         QTreeView::mousePressEvent (e);
     }
   };
 
   files_dock_widget::files_dock_widget (QWidget *p)
-    : octave_dock_widget (p)
+    : octave_dock_widget ("FilesDockWidget", p)
   {
-    setObjectName ("FilesDockWidget");
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setWindowTitle (tr ("File Browser"));
     setToolTip (tr ("Browse your files"));
 
     m_sig_mapper = nullptr;
 
     m_columns_shown = QStringList ();
     m_columns_shown.append (tr ("File size"));
diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -37,19 +37,18 @@ along with Octave; see the file COPYING.
 
 #include "cmd-hist.h"
 
 #include "history-dock-widget.h"
 
 namespace octave
 {
   history_dock_widget::history_dock_widget (QWidget *p)
-    : octave_dock_widget (p)
+    : octave_dock_widget ("HistoryDockWidget", p)
   {
-    setObjectName ("HistoryDockWidget");
     setStatusTip (tr ("Browse and search the command history."));
 
     connect (this, SIGNAL (command_create_script (const QString&)),
              p, SLOT (new_file (const QString&)));
 
     connect (this, SIGNAL (information (const QString&)),
              p, SLOT (report_status_message (const QString&)));
 
diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -32,19 +32,18 @@ namespace octave
 {
   class file_editor_interface : public octave_dock_widget
   {
     Q_OBJECT
 
   public:
 
     file_editor_interface (QWidget *p)
-      : octave_dock_widget (p)
+      : octave_dock_widget ("FileEditor", p)
     {
-      setObjectName ("FileEditor");
     }
 
     virtual ~file_editor_interface (void) = default;
 
     virtual QMenu * get_mru_menu (void) = 0;
     virtual QMenu * debug_menu (void) = 0;
     virtual QToolBar * toolbar (void) = 0;
 
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -164,24 +164,25 @@ namespace octave
                     "QDockWidget::float-button\n"
                     "{\n"
                     "  right: %9px;\n"
                     "  top: 3px;\n"
                     "}\n"
                     ).arg (close_icon).arg (float_icon).arg (icon_size)
                      .arg (close_tooltip).arg (float_tooltip)
                      .arg (titlebar_foreground). arg (titlebar_background)
-                     .arg ((icon_size*2)/3). arg((icon_size*8)/3);
+                     .arg ((icon_size*2)/3). arg((icon_size*7)/3);
   }
 
-  octave_dock_widget::octave_dock_widget (QWidget *p)
-    : label_dock_widget (p), m_recent_float_geom (),
-      m_recent_dock_area (Qt::NoDockWidgetArea), m_recent_dock_geom (),
+  octave_dock_widget::octave_dock_widget (const QString& obj_name, QWidget *p)
+    : label_dock_widget (p), m_recent_float_geom (), m_recent_dock_geom (),
       m_waiting_for_mouse_button_release (false)
   {
+    setObjectName (obj_name);
+
     m_parent = static_cast<QMainWindow *> (p);     // store main window
     m_predecessor_widget = nullptr;
 
     connect (this, SIGNAL (topLevelChanged (bool)),
              this, SLOT (toplevel_change (bool)));
     connect (this, SIGNAL (visibilityChanged (bool)),
              this, SLOT (handle_visibility_changed (bool)));
 
@@ -224,16 +225,18 @@ namespace octave
     m_icon_color = "";
     m_title_3d = 50;
 
     installEventFilter (this);
 
     setFocusPolicy (Qt::StrongFocus);
 
     setFeatures (QDockWidget::AllDockWidgetFeatures);
+
+    handle_settings (resource_manager::get_settings ());
   }
 
   // connect signal visibility changed to related slot (called from main-window)
   void
   octave_dock_widget::connect_visibility_changed (void)
   {
     connect (this, SIGNAL (visibilityChanged (bool)),
              this, SLOT (handle_visibility (bool)));
@@ -293,17 +296,17 @@ namespace octave
   {
     // Since floating widget has no parent, we have to read it
     QSettings *settings = resource_manager::get_settings ();
 
     settings->setValue ("MainWindow/windowState", m_parent->saveState ());
     // Stay window, otherwise will bounce back to window by default because
     // there is no layout information for this widget in the saved settings.
     setParent (m_parent, Qt::Window);
-    m_parent->addDockWidget (m_recent_dock_area, this);
+    m_parent->addDockWidget (Qt::BottomDockWidgetArea, this);
     // recover old window states, hide and re-show new added widget
     m_parent->restoreState (settings->value ("MainWindow/windowState").toByteArray ());
     setFloating (false);
     show ();
     QApplication::setActiveWindow (this);
     focus ();
 
     // adjust the (un)dock icon
@@ -424,29 +427,18 @@ namespace octave
       m_icon_color_active = "-light";
     else
       m_icon_color_active = "";
 
     m_recent_float_geom = settings->value ("DockWidgets/" + objectName ()
                                            + "_floating_geometry",
                                            QRect (50,100,480,480)).toRect ();
 
-#if 0
-    m_recent_dock_area = settings->value ("DockWidgets/" + objectName ()
-                                          + "_dock_area", Qt::NoDockWidgetArea).toInt ();
-#else
-    m_recent_dock_area = Qt::NoDockWidgetArea;
-#endif
-
-#if 0
     m_recent_dock_geom = settings->value ("DockWidgets/" + objectName (),
-                                          QByteArray ()).toRect ();
-#else
-    m_recent_dock_geom = QByteArray ();
-#endif
+                                          QByteArray ()).toByteArray ();
 
     notice_settings (settings);  // call individual handler
 
     set_style (false);
   }
 
   void
   octave_dock_widget::handle_active_dock_changed (octave_dock_widget *w_old,
@@ -470,27 +462,26 @@ namespace octave
   {
     // save state of this dock-widget
     QString name = objectName ();
     QSettings *settings = resource_manager::get_settings ();
 
     if (! settings)
       return;
 
+    store_geometry ();
+
     settings->beginGroup ("DockWidgets");
 
     // conditional needed?
     if (! m_recent_float_geom.isNull ())
       settings->setValue (name + "_floating_geometry", m_recent_float_geom);
 
     if (! m_recent_dock_geom.isEmpty ())
-      {
-        settings->setValue (name + "_dock_area", m_recent_dock_area);
-        settings->setValue (name, m_recent_dock_geom);
-      }
+      settings->setValue (name, m_recent_dock_geom);
     settings->setValue (name+"Visible", isVisible ()); // store visibility
     settings->setValue (name+"Floating", isFloating ()); // store floating
     settings->setValue (name+"_minimized", isMinimized ()); // store minimized
 
     settings->endGroup ();
     settings->sync ();
   }
 
@@ -510,17 +501,16 @@ namespace octave
   {
     if (isFloating ())
       {
         if (! parent ())
           m_recent_float_geom = geometry ();
       }
     else
       {
-        m_recent_dock_area = m_parent->dockWidgetArea (this);
         m_recent_dock_geom = saveGeometry ();
       }
   }
 
   void
   octave_dock_widget::moveEvent (QMoveEvent *event)
   {
     store_geometry ();
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -74,17 +74,17 @@ namespace octave
   };
 
   class octave_dock_widget : public label_dock_widget
   {
     Q_OBJECT
 
   public:
 
-    octave_dock_widget (QWidget *p = nullptr);
+    octave_dock_widget (const QString& obj_name, QWidget *p = nullptr);
 
     virtual ~octave_dock_widget (void) = default;
 
     virtual void connect_visibility_changed (void);
 
     void set_predecessor_widget (octave_dock_widget *prev_widget);
 
   signals:
@@ -178,16 +178,15 @@ namespace octave
     QColor m_bg_color;
     QColor m_bg_color_active;
     QColor m_fg_color;
     QColor m_fg_color_active;
     QString m_icon_color;
     QString m_icon_color_active;
     octave_dock_widget *m_predecessor_widget;
     QRect m_recent_float_geom;
-    Qt::DockWidgetArea m_recent_dock_area;
     QByteArray m_recent_dock_geom;
     bool m_waiting_for_mouse_button_release;
 
   };
 }
 
 #endif
diff --git a/libgui/src/terminal-dock-widget.cc b/libgui/src/terminal-dock-widget.cc
--- a/libgui/src/terminal-dock-widget.cc
+++ b/libgui/src/terminal-dock-widget.cc
@@ -33,22 +33,22 @@ along with Octave; see the file COPYING.
 #include "sighandlers.h"
 
 #include "terminal-dock-widget.h"
 #include "resource-manager.h"
 
 namespace octave
 {
   terminal_dock_widget::terminal_dock_widget (QWidget *p)
-    : octave_dock_widget (p), m_terminal (QTerminal::create (p))
+    : octave_dock_widget ("TerminalDockWidget", p),
+      m_terminal (QTerminal::create (p))
   {
     m_terminal->setObjectName ("OctaveTerminal");
     m_terminal->setFocusPolicy (Qt::StrongFocus);
 
-    setObjectName ("TerminalDockWidget");
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setWindowTitle (tr ("Command Window"));
 
     setWidget (m_terminal);
     setFocusProxy (m_terminal);
 
     connect (m_terminal, SIGNAL (interrupt_signal (void)),
              this, SLOT (terminal_interrupt (void)));
diff --git a/libgui/src/variable-editor-model.cc b/libgui/src/variable-editor-model.cc
--- a/libgui/src/variable-editor-model.cc
+++ b/libgui/src/variable-editor-model.cc
@@ -217,27 +217,16 @@ namespace octave
       }
 
     switch (role)
       {
       case Qt::DisplayRole:
       case Qt::EditRole:
         return edit_display (idx, role);
         return edit_display (idx, role);
-
-#if 0
-      case Qt::StatusTipRole:
-        return elem (idx).m_status_tip;
-
-      case Qt::ToolTipRole:
-        return elem (idx).m_tool_tip;
-
-      case Qt::BackgroundRole:
-        return elem (idx).m_background;
-#endif
       }
 
     // Invalid.
     return QVariant ();
   }
 
   bool
   base_ve_model::requires_sub_editor (const QModelIndex&) const
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -1036,34 +1036,33 @@ namespace octave
       }
 
     return QMenu::eventFilter (obj, ev);
   }
 
   // Variable editor.
 
   variable_editor::variable_editor (QWidget *p)
-    : octave_dock_widget (p),
+    : octave_dock_widget ("VariableEditor", p),
       m_main (new QMainWindow ()),
       m_tool_bar (new QToolBar (m_main)),
       m_default_width (30),
       m_default_height (100),
       m_add_font_height (0),
       m_use_terminal_font (true),
       m_alternate_rows (true),
       m_stylesheet (""),
       m_font (),
       m_sel_font (),
       m_table_colors (),
       m_current_focus_vname (""),
       m_hovered_focus_vname (""),
       m_focus_widget (nullptr),
       m_focus_widget_vdw (nullptr)
   {
-    setObjectName ("VariableEditor");
     setWindowTitle (tr ("Variable Editor"));
     setStatusTip (tr ("Edit variables."));
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setAttribute (Qt::WA_AlwaysShowToolTips);
 
     m_main->setParent (this);
 // See Octave bug #53409 and https://bugreports.qt.io/browse/QTBUG-55357
 #if (QT_VERSION < 0x050601) || (QT_VERSION >= 0x050701)
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -43,19 +43,18 @@ along with Octave; see the file COPYING.
 #include "resource-manager.h"
 
 #include "interpreter-private.h"
 #include "symscope.h"
 
 namespace octave
 {
   workspace_view::workspace_view (QWidget *p)
-    : octave_dock_widget (p), m_view (new QTableView (this))
+    : octave_dock_widget ("WorkspaceView", p), m_view (new QTableView (this))
   {
-    setObjectName ("WorkspaceView");
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setWindowTitle (tr ("Workspace"));
     setStatusTip (tr ("View the variables in the active workspace."));
 
     m_filter = new QComboBox (this);
     m_filter->setToolTip (tr ("Enter text to filter the workspace"));
     m_filter->setEditable (true);
     m_filter->setMaxCount (MaxFilterHistory);
