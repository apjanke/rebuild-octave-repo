# HG changeset patch
# User jwe
# Date 780939054 0
#      Fri Sep 30 15:30:54 1994 +0000
# Node ID 09d3f476c85b36080391047469ff997966cdbc42
# Parent  93910a7bbdf24d5ae5b571f5733382979a9f2b72
[project @ 1994-09-30 15:30:33 by jwe]

diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -1022,17 +1022,18 @@ tree_identifier::print_code (ostream& os
 tree_indirect_ref::~tree_indirect_ref (void)
 {
   while (! refs.empty ())
     {
       char *t = refs.remove_front ();
       delete [] t;
     }
 
-  delete id;
+  if (! preserve_ident)
+    delete id;
 }
 
 tree_indirect_ref *
 tree_indirect_ref::chain (const char *elt)
 {
   refs.append (strsave (elt));
   return this;
 }
diff --git a/src/pt-exp-base.h b/src/pt-exp-base.h
--- a/src/pt-exp-base.h
+++ b/src/pt-exp-base.h
@@ -314,35 +314,44 @@ private:
 
 // Indirect references to values (structure references).
 
 class
 tree_indirect_ref : public tree_fvc
 {
 public:
   tree_indirect_ref (int l = -1, int c = -1) : tree_fvc (l, c)
-    { id = 0; }
+    {
+      id = 0;
+      preserve_ident = 0;
+    }
 
   tree_indirect_ref (tree_identifier *i, int l = -1, int c = -1)
     : tree_fvc (l, c)
-      { id = i; }
+      {
+	id = i;
+	preserve_ident = 0;
+      }
 
   ~tree_indirect_ref (void);
 
   tree_indirect_ref *chain (const char *s);
 
   int is_indirect_ref (void) const
     { return 1; }
 
   int is_identifier_only (void) const
     { return (id && refs.empty ()); }
 
   tree_identifier *ident (void)
     { return id; }
 
+  void preserve_identifier (void)
+    { preserve_ident = 1; }
+
   char *name (void);
 
   tree_constant assign (tree_constant& t);
   tree_constant assign (tree_constant& t, const Octave_object& args);
 
   void mark_for_possible_ans_assign (void)
     { id->mark_for_possible_ans_assign (); }
 
@@ -350,16 +359,17 @@ public:
 
   Octave_object eval (int print, int nargout, const Octave_object& args);
 
   void print_code (ostream& os);
 
 private:
   tree_identifier *id;
   SLList<char*> refs;
+  int preserve_ident;
 };
 
 // Index expressions.
 
 class
 tree_index_expression : public tree_multi_val_ret
 {
 public:
