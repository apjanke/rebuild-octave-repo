# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1259071324 -3600
#      Tue Nov 24 15:02:04 2009 +0100
# Node ID ecd750d1eabdc60a67c80ded35f1aa6ef955ff0e
# Parent  7f4939e76684501e175d3b491389b1c235a2e396
move issymmetric & isdefinite to linear-algebra, create ishermitian

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2009-11-24  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/issymmetric.m: Move to linear-algebra.
+	* general/isdefinite.m: Ditto.
+	* linear-algebra/issymmetric.m: Use 0 as default tolerance. Optimize
+	this case. Check for symmetry, not hermitianness.
+	* linear-algebra/ishermitian.m: New function.
+	* linear-algebra/isdefinite.m: Use ishermitian instead of issymmetric.
+
 2009-11-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/cellidx.m: Deprecate.
 
 2009-11-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/issquare.m: Change to return consistent result for empty
 	matrices.
diff --git a/scripts/general/module.mk b/scripts/general/module.mk
--- a/scripts/general/module.mk
+++ b/scripts/general/module.mk
@@ -33,23 +33,21 @@ general_FCN_FILES = \
   general/interp1.m \
   general/interp1q.m \
   general/interp2.m \
   general/interp3.m \
   general/interpn.m \
   general/interpft.m \
   general/is_duplicate_entry.m \
   general/isa.m \
-  general/isdefinite.m \
   general/isdir.m \
   general/isequal.m \
   general/isequalwithequalnans.m \
   general/isscalar.m \
   general/issquare.m \
-  general/issymmetric.m \
   general/isvector.m \
   general/loadobj.m \
   general/logspace.m \
   general/mod.m \
   general/nargchk.m \
   general/nargoutchk.m \
   general/nextpow2.m \
   general/nthroot.m \
diff --git a/scripts/general/isdefinite.m b/scripts/linear-algebra/isdefinite.m
rename from scripts/general/isdefinite.m
rename to scripts/linear-algebra/isdefinite.m
--- a/scripts/general/isdefinite.m
+++ b/scripts/linear-algebra/isdefinite.m
@@ -34,18 +34,18 @@ function retval = isdefinite (x, tol)
   if (nargin == 1 || nargin == 2)
     if (nargin == 1)
       if (isa (x, "single"))
 	tol = 100 * eps("single");
       else
 	tol = 100*eps; 
       endif
     endif
-    sym = issymmetric (x, tol);
-    if (sym > 0)
+    sym = ishermitian (x);
+    if (sym)
       ## Matrix is symmetric, check eigenvalues.
       mineig = min (eig (x));
       if (mineig > tol)
 	retval = 1;
       elseif (mineig > -tol)
 	retval = 0;
       else
 	retval = -1;
diff --git a/scripts/linear-algebra/ishermitian.m b/scripts/linear-algebra/ishermitian.m
new file mode 100644
--- /dev/null
+++ b/scripts/linear-algebra/ishermitian.m
@@ -0,0 +1,67 @@
+## Copyright (C) 1996, 1997, 2002, 2003, 2004, 2005, 2006, 2007, 2008
+##               John W. Eaton
+## Copyright (C) 2009 VZLU Prague
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} ishermitian (@var{x}, @var{tol})
+## Return true if @var{x} is symmetric within the tolerance specified by @var{tol},
+## otherwise return false. The default tolerance is zero (uses faster code).
+## Matrix @var{x} is considered symmetric if
+## @code{norm (@var{x} - @var{x}.', inf) / norm (@var{x}, inf) < @var{tol}}.
+## @seealso{size, rows, columns, length, ismatrix, isscalar,
+## issquare, isvector}
+## @end deftypefn
+
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
+
+function retval = ishermitian (x, tol = 0)
+
+  if (nargin < 1 || nargin > 2)
+    print_usage ();
+  endif
+
+  retval = issquare (x);
+  if (retval)
+    if (tol == 0)
+      retval = all ((x == x')(:));
+    else
+      norm_x = norm (x, inf);
+      retval = norm_x == 0 || norm (x - x', inf) / norm_x <= tol;
+    endif
+  endif
+
+endfunction
+
+%!assert(ishermitian (1));
+%!assert(!(ishermitian ([1, 2])));
+%!assert(ishermitian ([]));
+%!assert(ishermitian ([1, 2; 2, 1]));
+%!assert(!(ishermitian ("test")));
+%!assert(ishermitian ([1, 2.1; 2, 1.1], 0.2));
+%!assert(ishermitian ([1, -2i; 2i, 1]));
+%!assert(!(ishermitian ("t")));
+%!assert(!(ishermitian (["te"; "et"])));
+%!error ishermitian ([1, 2; 2, 1], 0, 0);
+%!error ishermitian ();
+
+%!test
+%! s.a = 1;
+%! assert(!(ishermitian (s)));
diff --git a/scripts/general/issymmetric.m b/scripts/linear-algebra/issymmetric.m
rename from scripts/general/issymmetric.m
rename to scripts/linear-algebra/issymmetric.m
--- a/scripts/general/issymmetric.m
+++ b/scripts/linear-algebra/issymmetric.m
@@ -1,10 +1,11 @@
 ## Copyright (C) 1996, 1997, 2002, 2003, 2004, 2005, 2006, 2007, 2008
 ##               John W. Eaton
+## Copyright (C) 2009 VZLU Prague
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -14,59 +15,54 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} issymmetric (@var{x}, @var{tol})
-## If @var{x} is symmetric within the tolerance specified by @var{tol},
-## then return the dimension of @var{x}.  Otherwise, return 0.  If
-## @var{tol} is omitted, use a tolerance equal to the machine precision.
+## Return true if @var{x} is a symmetric matrix within the tolerance specified
+## by @var{tol}, otherwise return false. The default tolerance is zero (uses
+## faster code).
 ## Matrix @var{x} is considered symmetric if
 ## @code{norm (@var{x} - @var{x}.', inf) / norm (@var{x}, inf) < @var{tol}}.
 ## @seealso{size, rows, columns, length, ismatrix, isscalar,
 ## issquare, isvector}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
 
-function retval = issymmetric (x, tol)
+function retval = issymmetric (x, tol = 0)
+
+  if (nargin < 1 || nargin > 2)
+    print_usage ();
+  endif
 
-  if (nargin == 1 || nargin == 2)
-    retval = issquare (x);
-    if (retval != 0)
-      if (nargin == 1)
-	if (isa (x, "single"))
-	  tol = eps("single");
-	else
-	  tol = eps; 
-	endif
-      endif
+  retval = issquare (x);
+  if (retval)
+    if (tol == 0)
+      retval = all ((x == x.')(:));
+    else
       norm_x = norm (x, inf);
-      if (norm_x != 0 && norm (x - x', inf) / norm_x > tol)
-        retval = 0;
-      endif
+      retval = norm_x == 0 || norm (x - x.', inf) / norm_x <= tol;
     endif
-  else
-    print_usage ();
   endif
 
 endfunction
 
 %!assert(issymmetric (1));
 %!assert(!(issymmetric ([1, 2])));
-%!assert(!(issymmetric ([])));
-%!assert(issymmetric ([1, 2; 2, 1]) == 2);
+%!assert(issymmetric ([]));
+%!assert(issymmetric ([1, 2; 2, 1]));
 %!assert(!(issymmetric ("test")));
-%!assert(issymmetric ([1, 2.1; 2, 1.1], 0.2) == 2);
-%!assert(issymmetric ([1, 2i; -2i, 1]));
+%!assert(issymmetric ([1, 2.1; 2, 1.1], 0.2));
+%!assert(issymmetric ([1, 2i; 2i, 1]));
 %!assert(!(issymmetric ("t")));
 %!assert(!(issymmetric (["te"; "et"])));
 %!error issymmetric ([1, 2; 2, 1], 0, 0);
 %!error issymmetric ();
 
 %!test
 %! s.a = 1;
 %! assert(!(issymmetric (s)));
diff --git a/scripts/linear-algebra/module.mk b/scripts/linear-algebra/module.mk
--- a/scripts/linear-algebra/module.mk
+++ b/scripts/linear-algebra/module.mk
@@ -4,16 +4,19 @@ linear_algebra_FCN_FILES = \
   linear-algebra/commutation_matrix.m \
   linear-algebra/cond.m \
   linear-algebra/condest.m \
   linear-algebra/cross.m \
   linear-algebra/dot.m \
   linear-algebra/duplication_matrix.m \
   linear-algebra/expm.m \
   linear-algebra/housh.m \
+  linear-algebra/isdefinite.m \
+  linear-algebra/ishermitian.m \
+  linear-algebra/issymmetric.m \
   linear-algebra/krylov.m \
   linear-algebra/krylovb.m \
   linear-algebra/logm.m \
   linear-algebra/null.m \
   linear-algebra/onenormest.m \
   linear-algebra/orth.m \
   linear-algebra/planerot.m \
   linear-algebra/qzhess.m \
