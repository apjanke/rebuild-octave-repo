# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1516211746 0
#      Wed Jan 17 17:55:46 2018 +0000
# Node ID 93219261164da7e125012bcd41ab2019f65d48bb
# Parent  6c88227904111d6b43ef96e76bc9ff18a306e822
rgb2gray: fix conversion of nd images

* scripts/image/rgb2gray.m: do not squeeze the 3rd dimension when
  converting a nd image to grayscale.  Fix tests for ND input.  Also,
  use existing private function to perform the reshape back to the
  original shape.  Remove comment about patch #8709 which only applies
  to the ntsc conversion related functions.

diff --git a/scripts/image/rgb2gray.m b/scripts/image/rgb2gray.m
--- a/scripts/image/rgb2gray.m
+++ b/scripts/image/rgb2gray.m
@@ -16,22 +16,22 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{I} =} rgb2gray (@var{rgb_img})
 ## @deftypefnx {} {@var{gray_map} =} rgb2gray (@var{rgb_map})
 ## Transform an image or colormap from red-green-blue (RGB) color space to
 ## a grayscale intensity image.
-## 
+##
 ## The input may be of class uint8, int8, uint16, int16, single, or double.
 ## The output is of the same class as the input.
 ##
 ## Implementation Note:
-## The grayscale intensity is calculated as 
+## The grayscale intensity is calculated as
 ##
 ## @example
 ## @group
 ## @var{I} = 0.298936*@var{R} + 0.587043*@var{G} + 0.114021*@var{B}
 ## @end group
 ## @end example
 ##
 ## @noindent
@@ -51,40 +51,30 @@ function I = rgb2gray (rgb)
     cls = class (rgb);
   endif
   [rgb, sz, is_im, is_nd] ...
     = colorspace_conversion_input_check ("rgb2gray", "RGB", rgb);
 
   ## Reference matrix for transform from http://en.wikipedia.org/wiki/YIQ.
   ## Matlab uses this matrix for their conversion with oddly more precision.
   xform = [0.298936; 0.587043; 0.114021];
-
-  ## Note that if the input is of class single, we also return an image
-  ## of class single.  This is Matlab incompatible by design, since
-  ## Matlab always returning class double, is a Matlab bug (see patch #8709)
   I = rgb * xform;
 
-  ## Restore size if necessary
-  if (is_im)
-    if (is_nd)
-      I = reshape (I, [sz(1), sz(2), sz(4)]);
-    else
-      I = reshape (I, sz(1:2));
-    endif
-  endif
+  sz(3) = 1; # grayscale images have 3rd dimension of length 1
+  I = colorspace_conversion_revert (I, sz, is_im, is_nd);
 
   ## Restore integer class if necessary
   if (is_int)
     if (cls(end) == "8")  # uint8 or int8
-      I *= 255; 
+      I *= 255;
       if (cls(1) == "i")  # int8
         I -= 128;
       endif
     else                  # uint16 or int16
-      I *= 65535; 
+      I *= 65535;
       if (cls(1) == "i")  # int16
         I -= 32768;
       endif
     endif
     I = feval (cls, I);
   endif
 
 endfunction
@@ -96,19 +86,19 @@ endfunction
 %!assert (rgb2gray ([0 0 1]), 0.114021)
 
 ## test tolerance input checking on floats
 %! assert (rgb2gray ([1.5 1 1]), 1.149468, -1.6e-3);
 
 ## Test ND input
 %!test
 %! rgb = rand (16, 16, 3, 5);
-%! I = zeros (16, 16, 5);
+%! I = zeros (16, 16, 1, 5);
 %! for i = 1:5
-%!   I(:,:,i) = rgb2gray (rgb(:,:,:,i));
+%!   I(:,:,1,i) = rgb2gray (rgb(:,:,:,i));
 %! endfor
 %! assert (rgb2gray (rgb), I);
 
 ## Test output class and size for input images.
 ## Most of the tests only test for colormap input.
 
 %!test
 %! I = rgb2gray (rand (10, 10, 3));
