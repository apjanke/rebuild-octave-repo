# HG changeset patch
# User jwe
# Date 1034120926 0
#      Tue Oct 08 23:48:46 2002 +0000
# Node ID 5a82e874999bfc79bed8744356df18c8da044d9e
# Parent  01f46b36e11fe383b6406104abb6c48a75d638f6
[project @ 2002-10-08 23:48:45 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,17 @@
+2002-10-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (OCTAVE_PROG_NM): Do the right thing for cross compiling.
+	(OCTAVE_CXX_PREPENDS_UNDERSCORE): Require OCTAVE_PROG_NM.
+	(OCTAVE_CXX_ABI): Likewise.
+
+	* Makeconf.in (BUILD_CC, BUILD_CFLAGS, BUILD_CXX, BUILD_CXXFLAGS):
+	New variables for cross compiling.
+
 2002-10-07  Paul Kienzle <pkienzle@users.sf.net>
 
 	* configure.in: Check for raise.
 
 2002-10-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* aclocal.m4 (OCTAVE_PROG_SED): New macro, adapted from autoconf
 	patches mailing list archive, written by Robert Boehne
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -108,29 +108,35 @@ UGLY_DEFS = @UGLY_DEFS@
 CC = @CC@
 CC_VERSION = @CC_VERSION@
 CFLAGS = @CFLAGS@
 CPICFLAG = @CPICFLAG@
 XTRA_CFLAGS = @XTRA_CFLAGS@
 ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(XTRA_CFLAGS) $(CFLAGS)
 BUG_CFLAGS = $(DEFS) $(XTRA_CFLAGS) $(CFLAGS)
 
+BUILD_CC = $(CC)
+BUILD_CFLAGS = $(CFLAGS)
+
 DEPEND_FLAGS = @DEPEND_FLAGS@
 DEPEND_EXTRA_SED_PATTERN = @DEPEND_EXTRA_SED_PATTERN@
 
 CXX = @CXX@
 CXX_VERSION = @CXX_VERSION@
 CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 CXXPICFLAG = @CXXPICFLAG@
 XTRA_CXXFLAGS = @XTRA_CXXFLAGS@
 ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
 UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
 BUG_CXXFLAGS = $(DEFS) $(XTRA_CXXFLAGS) $(CXXFLAGS)
 
+BUILD_CXX = $(CXX)
+BUILD_CXXFLAGS = $(CXXFLAGS)
+
 CPPFLAGS = @CPPFLAGS@
 
 LD_CXX = @LD_CXX@
 LDFLAGS = @LDFLAGS@
 LD_STATIC_FLAG = @LD_STATIC_FLAG@
 ALL_LDFLAGS = $(LIBFLAGS) $(LD_STATIC_FLAG) $(CPICFLAG) $(LDFLAGS)
 
 SH_LD = @SH_LD@
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -505,31 +505,26 @@ foo" | $GPERF -t -C -D -E -G -L ANSI-C -
   fi
   AC_SUBST(GPERF)
 ])
 dnl
 dnl Find nm.
 dnl
 dnl OCTAVE_PROG_NM
 AC_DEFUN(OCTAVE_PROG_NM,
-[if test "$cross_compiling" = yes; then
-  NM=nm
-  AC_MSG_RESULT(assuming $NM exists on $canonical_host_type host)
+[AC_CHECK_PROG(NM, ${ac_tool_prefix}nm, ${ac_tool_prefix}nm, [])
   AC_SUBST(NM)
-else
-  AC_CHECK_PROG(NM, nm, nm, [])
-  AC_SUBST(NM)
-fi
 ])
 dnl
 dnl See if the C++ compiler prepends an underscore to external names.
 dnl
 dnl OCTAVE_CXX_PREPENDS_UNDERSCORE
-AC_DEFUN(OCTAVE_CXX_PREPENDS_UNDERSCORE,
-[AC_MSG_CHECKING([whether ${CXX-g++} prepends an underscore to external names])
+AC_DEFUN(OCTAVE_CXX_PREPENDS_UNDERSCORE, [
+  AC_REQUIRE([OCTAVE_PROG_NM])
+  AC_MSG_CHECKING([whether ${CXX-g++} prepends an underscore to external names])
   AC_CACHE_VAL(octave_cv_cxx_prepends_underscore,
     [octave_cv_cxx_prepends_underscore=no
     AC_LANG_PUSH(C++)
     cat > conftest.$ac_ext <<EOF
 bool FSmy_dld_fcn (void) { return false; }
 EOF
     if AC_TRY_EVAL(ac_compile); then
       if test "`${NM-nm} conftest.o | grep _FSmy_dld_fcn`" != ""; then
@@ -611,18 +606,19 @@ dnl
 dnl Determine the C++ compiler ABI. It sets the macro CXX_ABI to the
 dnl name of the ABI, and is used to mangle the C linkage loadable
 dnl functions to avoid ABI mismatch.  GNU C++ currently uses gnu_v2 
 dnl (GCC versions <= 2.95.x) dnl or gnu_v3 (GCC versions >= 3.0).
 dnl Set to "unknown" is when we don't know enough about the ABI, which 
 dnl will happen when using an unsupported C++ compiler. 
 dnl
 dnl OCTAVE_CXX_ABI
-AC_DEFUN(OCTAVE_CXX_ABI,
-[AC_MSG_CHECKING([C++ ABI version used by ${CXX}])
+AC_DEFUN(OCTAVE_CXX_ABI, [
+  AC_REQUIRE([OCTAVE_PROG_NM])
+  AC_MSG_CHECKING([C++ ABI version used by ${CXX}])
   AC_CACHE_VAL(octave_cv_cxx_abi,
     [octave_cv_cxx_abi='unknown'
     AC_LANG_PUSH(C++)
     cat > conftest.$ac_ext <<EOF
 bool FSmy_dld_fcn (void) { return false; }
 EOF
     if AC_TRY_EVAL(ac_compile); then
       if test "`${NM-nm} conftest.o | grep FSmy_dld_fcn__Fv`" != ""; then
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2002-10-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* interpreter/Makefile.in (munge-texi, %.o : %.cc):
+	Use $(BUILD_CXX), not $(CXX).
+	(src-DOCSTRINGS, scripts-DOCSTRINGS): New targets.
+	($(TEXIFNO)): Depend on them.
+	(DOCSTRINGS): Delete variable.
+
 2002-10-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* interpreter/Makefile.in (%.spell): Use $(SED), not sed.
 	* liboctave/Makefile.in (%.spell): Likewise.
 	* faq/Makefile.in (%.spell): Likewise.
 
 2001-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -57,26 +57,31 @@ SPELL = $(patsubst %.texi, %.spell, $(TE
 %.spell : %.texi
 	rm -f $@
 	$(SED) -e 's/@@/ at /g' -e 's/@[a-zA-Z]*//g' $< | spell > $@.tmp
 	mv $@.tmp $@
 
 all: octave.info octave.dvi octave.ps octave_toc.html
 .PHONY: all
 
-DOCSTRINGS = $(TOPDIR)/src/DOCSTRINGS $(TOPDIR)/scripts/DOCSTRINGS
+$(TEXINFO): src-DOCSTRINGS scripts-DOCSTRINGS munge-texi
 
-$(TEXINFO): $(DOCSTRINGS) munge-texi
+%.o : %.cc
+	$(BUILD_CXX) -c $(INCFLAGS) -DHAVE_CONFIG_H $< -o $@
 
 munge-texi: munge-texi.o Map-s.o
-	$(CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(ALL_LDFLAGS) -o $@ $^
+	$(BUILD_CXX) -o $@ $^
 
-# Kluge: if the DOCSTRING files are present, assume they are current.
-$(DOCSTRINGS):
-	$(MAKE) -C $(dir $@) $(notdir $@)
+src-DOCSTRINGS:
+	$(MAKE) -C ../../src DOCSTRINGS
+.PHONY: src-DOCSTRINGS
+
+scripts-DOCSTRINGS:
+	$(MAKE) -C ../../scripts DOCSTRINGS
+.PHONY: scripts-DOCSTRINGS
 
 %.texi : %.txi
 	@echo making $@ from $<
 	@./munge-texi \
 	  -d $(TOPDIR)/src/DOCSTRINGS \
 	  -d $(TOPDIR)/scripts/DOCSTRINGS < $< > $@.t
 	@mv $@.t $@
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,21 @@
+2002-10-07  Paul Kienzle <pkienzle@users.sf.net>
+
+	* lo-cutils.c: On non-Posix Windows systems, include winsock.h.
+
+2002-10-07  Paul Kienzle <pkienzle@users.sf.net>
+
+	* oct-env.cc (octave_env::do_absolute_pathname): Recognize
+	absolute path names under MinGW as well.
+
+2002-10-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-env.cc: Include <cctype> too.
+
 2002-10-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-env.cc (octave_env::do_absolute_pathname): Handle Windows
 	filenames.
 	(octave_env::do_make_absolute): Check for absolute name with
 	do_absolute_path.
 	(octave_env::do_chdir): Likewise.
 	(is_dir_sep): New function.
diff --git a/liboctave/getopt.h b/liboctave/getopt.h
--- a/liboctave/getopt.h
+++ b/liboctave/getopt.h
@@ -90,24 +90,17 @@ struct option
 
 /* Names for the values of the `has_arg' field of `struct option'.  */
 
 #define	no_argument		0
 #define required_argument	1
 #define optional_argument	2
 
 #if __STDC__
-#if defined(__GNU_LIBRARY__)
-/* Many other libraries have conflicting prototypes for getopt, with
-   differences in the consts, in stdlib.h.  To avoid compilation
-   errors, only prototype getopt for the GNU C library.  */
 extern int getopt (int argc, char *const *argv, const char *shortopts);
-#else /* not __GNU_LIBRARY__ */
-extern int getopt ();
-#endif /* not __GNU_LIBRARY__ */
 extern int getopt_long (int argc, char *const *argv, const char *shortopts,
 		        const struct option *longopts, int *longind);
 extern int getopt_long_only (int argc, char *const *argv,
 			     const char *shortopts,
 		             const struct option *longopts, int *longind);
 
 /* Internal only.  Users should not call this directly.  */
 extern int _getopt_internal (int argc, char *const *argv,
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -51,17 +51,21 @@ octave_qsort (void *base, size_t n, size
 }
 
 char *
 oct_strptime (const char *buf, const char *format, struct tm *tm)
 {
   return (char *) strptime (buf, format, tm);
 }
 
-#if ! defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
+#if defined (__WIN32__) && ! defined (_POSIX_VERSION)
+
+#include <winsock.h>
+
+#elif ! defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 
 #include <sys/utsname.h>
 
 int
 gethostname (char *name, int namelen)
 {
   int i;
   struct utsname ut;
diff --git a/liboctave/oct-env.cc b/liboctave/oct-env.cc
--- a/liboctave/oct-env.cc
+++ b/liboctave/oct-env.cc
@@ -35,17 +35,19 @@ Free Software Foundation, Inc.
   octave_env::pathname_backup
 
 */ 
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <cctype>
 #include <cstdlib>
+
 #include <string>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
@@ -244,17 +246,17 @@ octave_env::do_absolute_pathname (const 
   size_t len = s.length ();
 
   if (len == 0)
     return false;
 
   if (s[0] == '/')
     return true;
 
-#if defined (__CYGWIN__)
+#if defined (__WIN32__)
   if ((len == 2 && isalpha (s[0]) && s[1] == ':')
       || (len > 2 && isalpha (s[0]) && s[1] == ':' && is_dir_sep (s[2])))
     return true;
 #endif
 
   return false;
 }
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2002-10-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (gethelp): Use $(BUILD_CXX), not $(CXX).
+
 2002-09-27  Paul Kienzle <pkienzle@users.sf.net>
 
 	* statistics/distributions/normal_cdf.m: Handle variance == 0.
 	* statistics/distributions/normal_pdf.m: Likewise.
 	* statistics/distributions/normal_inv.m: Likewise.
 
 2002-09-27  Paul Kienzle <pkienzle@users.sf.net>
 
diff --git a/scripts/Makefile.in b/scripts/Makefile.in
--- a/scripts/Makefile.in
+++ b/scripts/Makefile.in
@@ -47,16 +47,19 @@ all: $(SUBDIRS) DOCSTRINGS
 $(SUBDIRS):
 	$(MAKE) -C $@ all
 .PHONY: $(SUBDIRS)
 
 DOCSTRINGS: gethelp mkdoc $(ALL_M_FILES)
 	$(srcdir)/mkdoc $(srcdir) > $@.t
 	mv $@.t $@
 
+gethelp: gethelp.cc
+	$(BUILD_CXX) -o $@ $^
+
 install install-strip uninstall clean mostlyclean distclean maintainer-clean::
 	@$(subdir-for-command)
 .PHONY: install install-strip uninstall
 .PHONY: clean mostlyclean distclean maintainer-clean
 
 install install-strip::
 	ls -LR $(datadir)/octave > $(datadir)/octave/ls-R
 	ls -LR $(libexecdir)/octave > $(libexecdir)/octave/ls-R
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2002-10-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (gendoc): Use $(BUILD_CXX), not $(CXX).
+
+2002-10-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* utils.cc (octave_sleep): Cast result of modf to unsigned int.
+
 2002-10-07  Paul Kienzle <pkienzle@users.sf.net>
 
 	* sighandlers.cc (my_friendly_exit): If kill is unavailable, use
 	raise.
 
 2002-10-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sysdep.cc (CYGWIN_init): New function.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -311,17 +311,17 @@ doc-files: $(DOC_FILES)
 	@mv $@-t $@
 
 gendoc.cc: doc-files mkgendoc
 	@echo making $@
 	@$(srcdir)/mkgendoc doc-files > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 gendoc: gendoc.cc
-	$(CXX) -o $@ $^
+	$(BUILD_CXX) -o $@ $^
 
 ops.cc: $(OP_SRC) mkops
 	@echo making $@ from $(OP_SRC)
 	@$(srcdir)/mkops $(OP_SRC) > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 $(DEF_FILES): mkdefs defun-int.h defun-dld.h defun.h defaults.h oct-conf.h
 
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -28,16 +28,23 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include <cctype>
 #include <cstring>
 
 #include <string>
 
+#ifdef HAVE_UNISTD_H
+#ifdef HAVE_SYS_TYPES_H
+#include <sys/types.h>
+#endif
+#include <unistd.h>
+#endif
+
 #include "SLStack.h"
 
 #include "cmd-edit.h"
 #include "lo-sstream.h"
 
 // These would be alphabetical, but y.tab.h must be included before
 // oct-gperf.h and y.tab.h must be included after token.h and the tree
 // class declarations.  We can't include y.tab.h in oct-gperf.h
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -751,19 +751,21 @@ octave_vformat (std::ostream& os, const 
 
 void
 octave_sleep (double seconds)
 {
   if (seconds > 0)
     {
       double t;
 
-      unsigned int usec = modf (seconds, &t) * 1000000;
+      unsigned int usec
+	= static_cast <unsigned int> (modf (seconds, &t) * 1000000);
 
-      unsigned int sec = (t > UINT_MAX) ? UINT_MAX : (unsigned int) t;
+      unsigned int sec
+	= (t > UINT_MAX) ? UINT_MAX : static_cast <unsigned int> (t);
 
       octave_sleep (sec);
       octave_usleep (usec);
     }
 }
 
 static int
 treat_neg_dim_as_zero (void)
