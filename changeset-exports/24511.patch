# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1514439505 21600
#      Wed Dec 27 23:38:25 2017 -0600
# Branch stable
# Node ID 4f0e6ee6c9b8455d528beb6fd70d826610964fab
# Parent  5188d936c79abbdd476378f17616305df085aa5e
Make documentation Sec 26.1 more consistent and Sec 25.4 clearer (bug #52685)

* corr.m: Add space in LaTeX formula.  For the example, place variables in a
  @var qualifier.

* cov.m: Use @var in LaTeX for x and y when referring to function input vector.
  Correct Octave-help formula by placing parentheses around N-1 so that -1 is
  in the denominator.  Define N after the formula in which it is used.

* gls.m: Define what GLS stands for.  Use @var instead of @math for function
  input and output variables.  Move the description of matrix O and scalar s
  to a third paragraph, ensuring s is lower case.  Give a little more context
  to the description of X and Y in the second paragraph.  Add an expansive
  paragraph three for details about the error variables E including the
  description of O and s along with their dimensions.  Add "matrix" before
  B and "scalar" before s for clarity.  Place @var around variables r, y, x
  and beta to make those upper case in Octave-help.

* histc.m: Use LaTeX math rather than @code for the @tex scenario.

* kendall.m: Treat tau differently for LaTeX and Octave-help scenarios.  Add
  space in LaTeX formulas.  Treat tau as @var in Octave-help case.  Use lower
  case 'i' for index variable and upper case 'N' for vector length.

* kurtosis.m: For mean value of x, use script rather than non-script.  Define
  N after the formula in which it is used for Octave-help case.

* mean.m: Indicate N is number of elements.  Use @var on input vector x for
  Octave-help case.

* meansq.m: Indicate N is number of elements, but drop the reference to mean
  value because there is none.  Use @var on input vector x for Octave-help
  case.  Use "If x is a matrix" consistent with all others.

* median.m: Indicate N is number of elements for LaTeX case.  For Octave-help
  place some vertical lines to represent case curly-bracket.  Place @math
  around N.  Define an intermediate vector S representing sorted X and use
  that in the math formula.

* moment.m: Define x-bar as mean and N as number of elements.  Use @var on
  x and p in the Octave-help formulas.

* ols.m: Define meaning of OLS.  Add @var to LaTeX variables to make them
  non-script vectors.  Use @var instead of @math for function input and output
  variables.  Use hyphens for matrix dimensions in Octave-help formula.  Move
  the description of matrix S to a third paragraph.  Give a little more context
  to the description of X and Y in the second paragraph.  Add an expansive
  paragraph three for details about the error variables E including the
  description of matrix S along with its dimensions, ensuring S is upper case.
  Add "matrix" before B for clarity.  Make the definition of SIGMA one line for
  appearance in Octave-help.

* prctile.m: Change a mistaken 'y' to 'q' to work in LaTeX as well.

* quantile.m: Use @var{method} rather than METHOD.  Break up all the method
  formulas for p(k) into LaTeX and Octave-help versions for better control.
  Use upper case N for the length of P.

* skewness.m: Remove @var from x when referring to vector elements in LaTeX.
  Indicate N is number of elements.

* spearman.m: Break into separate LaTeX and Octave-help cases rather than
  use @code for LaTeX.  Use Greek symbol rho in LaTeX.

* std.m: Add @var to x variable to indicate LaTeX or Octave-help vector.  Add
  clarification about N being number elements of x to both LaTeX and
  Octave-help formulas.

* var.m: Indicate N is number of elements.  Apply @var to x to show it is a
  vector.  Change == to "is equal to" for normal text.

diff --git a/scripts/statistics/base/corr.m b/scripts/statistics/base/corr.m
--- a/scripts/statistics/base/corr.m
+++ b/scripts/statistics/base/corr.m
@@ -22,23 +22,23 @@
 ## Compute matrix of correlation coefficients.
 ##
 ## If each row of @var{x} and @var{y} is an observation and each column is
 ## a variable, then the @w{(@var{i}, @var{j})-th} entry of
 ## @code{corr (@var{x}, @var{y})} is the correlation between the
 ## @var{i}-th variable in @var{x} and the @var{j}-th variable in @var{y}.
 ## @tex
 ## $$
-## {\rm corr}(x,y) = {{\rm cov}(x,y) \over {\rm std}(x) {\rm std}(y)}
+## {\rm corr}(x,y) = {{\rm cov}(x,y) \over {\rm std}(x) \, {\rm std}(y)}
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
-## corr (x,y) = cov (x,y) / (std (x) * std (y))
+## corr (@var{x},@var{y}) = cov (@var{x},@var{y}) / (std (@var{x}) * std (@var{y}))
 ## @end example
 ##
 ## @end ifnottex
 ## If called with one argument, compute @code{corr (@var{x}, @var{x})},
 ## the correlation between the columns of @var{x}.
 ## @seealso{cov}
 ## @end deftypefn
 
diff --git a/scripts/statistics/base/cov.m b/scripts/statistics/base/cov.m
--- a/scripts/statistics/base/cov.m
+++ b/scripts/statistics/base/cov.m
@@ -26,24 +26,26 @@
 ## If each row of @var{x} and @var{y} is an observation, and each column is
 ## a variable, then the @w{(@var{i}, @var{j})-th} entry of
 ## @code{cov (@var{x}, @var{y})} is the covariance between the @var{i}-th
 ## variable in @var{x} and the @var{j}-th variable in @var{y}.
 ## @tex
 ## $$
 ## \sigma_{ij} = {1 \over N-1} \sum_{i=1}^N (x_i - \bar{x})(y_i - \bar{y})
 ## $$
-## where $\bar{x}$ and $\bar{y}$ are the mean values of $x$ and $y$.
+## where $\bar{x}$ and $\bar{y}$ are the mean values of @var{x} and @var{y}.
 ## @end tex
 ## @ifnottex
 ##
 ## @example
-## cov (x) = 1/N-1 * SUM_i (x(i) - mean(x)) * (y(i) - mean(y))
+## cov (@var{x}) = 1/(N-1) * SUM_i (@var{x}(i) - mean(@var{x})) * (@var{y}(i) - mean(@var{y}))
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} and @var{y} vectors.
+##
 ## @end ifnottex
 ##
 ## If called with one argument, compute @code{cov (@var{x}, @var{x})}, the
 ## covariance between the columns of @var{x}.
 ##
 ## The argument @var{opt} determines the type of normalization to use.
 ## Valid values are
 ##
diff --git a/scripts/statistics/base/gls.m b/scripts/statistics/base/gls.m
--- a/scripts/statistics/base/gls.m
+++ b/scripts/statistics/base/gls.m
@@ -13,54 +13,74 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {[@var{beta}, @var{v}, @var{r}] =} gls (@var{y}, @var{x}, @var{o})
-## Generalized least squares model.
+## Generalized least squares (GLS) model.
 ##
 ## Perform a generalized least squares estimation for the multivariate model
 ## @tex
-## $y = x b + e$
-## with $\bar{e} = 0$ and cov(vec($e$)) = $(s^2)o$,
+## $@var{y} = @var{x}\,@var{b} + @var{e}$
 ## @end tex
 ## @ifnottex
-## @w{@math{y = x*b + e}} with @math{mean (e) = 0} and
-## @math{cov (vec (e)) = (s^2) o},
+## @w{@math{@var{y} = @var{x}*@var{B} + @var{E}}}
 ## @end ifnottex
 ## where
 ## @tex
-## $y$ is a $t \times p$ matrix, $x$ is a $t \times k$ matrix, $b$ is a $k
-## \times p$ matrix, $e$ is a $t \times p$ matrix, and $o$ is a $tp \times
-## tp$ matrix.
+## $@var{y}$ is a $t \times p$ matrix, $@var{x}$ is a $t \times k$ matrix,
+## $@var{b}$ is a $k \times p$ matrix and $@var{e}$ is a $t \times p$ matrix.
 ## @end tex
 ## @ifnottex
-## @math{y} is a @math{t} by @math{p} matrix, @math{x} is a @math{t} by
-## @math{k} matrix, @math{b} is a @math{k} by @math{p} matrix, @math{e}
-## is a @math{t} by @math{p} matrix, and @math{o} is a @math{t*p} by
-## @math{t*p} matrix.
+## @var{y} is a @math{t}-by-@math{p} matrix, @var{x} is a
+## @math{t}-by-@math{k} matrix, @var{b} is a @math{k}-by-@math{p} matrix
+## and @var{e} is a @math{t}-by-@math{p} matrix.
 ## @end ifnottex
 ##
 ## @noindent
-## Each row of @var{y} and @var{x} is an observation and each column a
-## variable.  The return values @var{beta}, @var{v}, and @var{r} are
+## Each row of @var{y} is a @math{p}-variate observation in which each column
+## represents a variable.  Likewise, the rows of @var{x} represent
+## @math{k}-variate observations or possibly designed values.  Furthermore,
+## the collection of observations @var{x} must be of adequate rank, @math{k},
+## otherwise @var{b} cannot be uniquely estimated.
+##
+## The observation errors, @var{e}, are assumed to originate from an
+## underlying @math{p}-variate distribution with zero mean but possibly
+## heteroscedastic observations.  That is, in general,
+## @tex
+## $\bar{@var{e}} = 0$ and cov(vec(@var{e})) = $s^2@var{o}$
+## @end tex
+## @ifnottex
+## @code{@math{mean (@var{e}) = 0}} and
+## @code{@math{cov (vec (@var{e})) = (@math{s}^2)*@var{o}}}
+## @end ifnottex
+## in which @math{s} is a scalar and @var{o} is a
+## @tex
+## @math{t \, p \times t \, p}
+## @end tex
+## @ifnottex
+## @math{t*p}-by-@math{t*p}
+## @end ifnottex
+## matrix.
+##
+## The return values @var{beta}, @var{v}, and @var{r} are
 ## defined as follows.
 ##
 ## @table @var
 ## @item beta
-## The GLS estimator for @math{b}.
+## The GLS estimator for matrix @var{b}.
 ##
 ## @item v
-## The GLS estimator for @math{s^2}.
+## The GLS estimator for scalar @math{s^2}.
 ##
 ## @item r
-## The matrix of GLS residuals, @math{r = y - x*beta}.
+## The matrix of GLS residuals, @math{@var{r} = @var{y} - @var{x}*@var{beta}}.
 ## @end table
 ## @seealso{ols}
 ## @end deftypefn
 
 ## Author: Teresa Twaroch <twaroch@ci.tuwien.ac.at>
 ## Created: May 1993
 ## Adapted-By: jwe
 
diff --git a/scripts/statistics/base/histc.m b/scripts/statistics/base/histc.m
--- a/scripts/statistics/base/histc.m
+++ b/scripts/statistics/base/histc.m
@@ -21,18 +21,30 @@
 ## @deftypefn  {} {@var{n} =} histc (@var{x}, @var{edges})
 ## @deftypefnx {} {@var{n} =} histc (@var{x}, @var{edges}, @var{dim})
 ## @deftypefnx {} {[@var{n}, @var{idx}] =} histc (@dots{})
 ## Compute histogram counts.
 ##
 ## When @var{x} is a vector, the function counts the number of elements of
 ## @var{x} that fall in the histogram bins defined by @var{edges}.  This
 ## must be a vector of monotonically increasing values that define the edges
-## of the histogram bins.  @code{@var{n}(k)} contains the number of elements
-## in @var{x} for which @code{@var{edges}(k) <= @var{x} < @var{edges}(k+1)}.
+## of the histogram bins.
+## @tex
+## $n(k)$
+## @end tex
+## @ifnottex
+## @code{@var{n}(k)}
+## @end ifnottex
+## contains the number of elements in @var{x} for which
+## @tex
+## $@var{edges}(k) <= @var{x} < @var{edges}(k+1)$.
+## @end tex
+## @ifnottex
+## @code{@var{edges}(k) <= @var{x} < @var{edges}(k+1)}.
+## @end ifnottex
 ## The final element of @var{n} contains the number of elements of @var{x}
 ## exactly equal to the last element of @var{edges}.
 ##
 ## When @var{x} is an @math{N}-dimensional array, the computation is carried
 ## out along dimension @var{dim}.  If not specified @var{dim} defaults to the
 ## first non-singleton dimension.
 ##
 ## When a second output argument is requested an index matrix is also returned.
diff --git a/scripts/statistics/base/kendall.m b/scripts/statistics/base/kendall.m
--- a/scripts/statistics/base/kendall.m
+++ b/scripts/statistics/base/kendall.m
@@ -15,54 +15,73 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} kendall (@var{x})
 ## @deftypefnx {} {} kendall (@var{x}, @var{y})
 ## @cindex Kendall's Tau
-## Compute Kendall's @var{tau}.
+## Compute Kendall's
+## @tex
+## $\tau$.
+## @end tex
+## @ifnottex
+## @var{tau}.
+## @end ifnottex
 ##
-## For two data vectors @var{x}, @var{y} of common length @var{n}, Kendall's
-## @var{tau} is the correlation of the signs of all rank differences of
+## For two data vectors @var{x}, @var{y} of common length @math{N}, Kendall's
+## @tex
+## $\tau$
+## @end tex
+## @ifnottex
+## @var{tau}
+## @end ifnottex
+## is the correlation of the signs of all rank differences of
 ## @var{x} and @var{y}; i.e., if both @var{x} and @var{y} have distinct
 ## entries, then
 ##
 ## @tex
-## $$ \tau = {1 \over n(n-1)} \sum_{i,j} {\rm sign}(q_i-q_j) {\rm sign}(r_i-r_j) $$
+## $$ \tau = {1 \over N(N-1)} \sum_{i,j} {\rm sign}(q_i-q_j) \, {\rm sign}(r_i-r_j) $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##          1
-## tau = -------   SUM sign (q(i) - q(j)) * sign (r(i) - r(j))
-##       n (n-1)   i,j
+## @var{tau} = -------   SUM sign (@var{q}(i) - @var{q}(j)) * sign (@var{r}(i) - @var{r}(j))
+##       N (N-1)   i,j
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ## @noindent
 ## in which the
 ## @tex
 ## $q_i$ and $r_i$
 ## @end tex
 ## @ifnottex
-## @var{q}(@var{i}) and @var{r}(@var{i})
+## @var{q}(i) and @var{r}(i)
 ## @end ifnottex
 ## are the ranks of @var{x} and @var{y}, respectively.
 ##
 ## If @var{x} and @var{y} are drawn from independent distributions,
-## Kendall's @var{tau} is asymptotically normal with mean 0 and variance
+## Kendall's
 ## @tex
-## ${2 (2n+5) \over 9n(n-1)}$.
+## $\tau$
 ## @end tex
 ## @ifnottex
-## @code{(2 * (2@var{n}+5)) / (9 * @var{n} * (@var{n}-1))}.
+## @var{tau}
+## @end ifnottex
+## is asymptotically normal with mean 0 and variance
+## @tex
+## ${2 (2N+5) \over 9N(N-1)}$.
+## @end tex
+## @ifnottex
+## @code{(2 * (2N+5)) / (9 * N * (N-1))}.
 ## @end ifnottex
 ##
 ## @code{kendall (@var{x})} is equivalent to @code{kendall (@var{x},
 ## @var{x})}.
 ## @seealso{ranks, spearman}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
diff --git a/scripts/statistics/base/kurtosis.m b/scripts/statistics/base/kurtosis.m
--- a/scripts/statistics/base/kurtosis.m
+++ b/scripts/statistics/base/kurtosis.m
@@ -22,19 +22,19 @@
 ## @deftypefnx {} {} kurtosis (@var{x}, @var{flag})
 ## @deftypefnx {} {} kurtosis (@var{x}, @var{flag}, @var{dim})
 ## Compute the sample kurtosis of the elements of @var{x}.
 ##
 ## The sample kurtosis is defined as
 ## @tex
 ## $$
 ## \kappa_1 = {{{1\over N}\,
-##          \sum_{i=1}^N (@var{x}_i - \bar{@var{x}})^4} \over \sigma^4},
+##          \sum_{i=1}^N (x_i - \bar{x})^4} \over \sigma^4},
 ## $$
-## where $N$ is the length of @var{x}, $\bar{@var{x}}$ its mean, and $\sigma$
+## where $N$ is the length of @var{x}, $\bar{x}$ its mean, and $\sigma$
 ## its (uncorrected) standard deviation.
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##      mean ((@var{x} - mean (@var{x})).^4)
 ## k1 = ------------------------
@@ -60,16 +60,18 @@
 ## @example
 ## @group
 ##               N - 1
 ## k0 = 3 + -------------- * ((N + 1) * k1 - 3 * (N - 1))
 ##          (N - 2)(N - 3)
 ## @end group
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
 ## The bias-corrected kurtosis coefficient is obtained by replacing the sample
 ## second and fourth central moments by their unbiased versions.  It is an
 ## unbiased estimate of the population kurtosis for normal populations.
 ##
 ## If @var{x} is a matrix, or more generally a multi-dimensional array, return
 ## the kurtosis along the first non-singleton dimension.  If the optional
 ## @var{dim} argument is given, operate along this dimension.
diff --git a/scripts/statistics/base/mean.m b/scripts/statistics/base/mean.m
--- a/scripts/statistics/base/mean.m
+++ b/scripts/statistics/base/mean.m
@@ -22,23 +22,27 @@
 ## @deftypefnx {} {} mean (@var{x}, @var{opt})
 ## @deftypefnx {} {} mean (@var{x}, @var{dim}, @var{opt})
 ## Compute the mean of the elements of the vector @var{x}.
 ##
 ## The mean is defined as
 ##
 ## @tex
 ## $$ {\rm mean}(x) = \bar{x} = {1\over N} \sum_{i=1}^N x_i $$
+## where $N$ is the number of elements of @var{x}.
+##
 ## @end tex
 ## @ifnottex
 ##
 ## @example
-## mean (x) = SUM_i x(i) / N
+## mean (@var{x}) = SUM_i @var{x}(i) / N
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
 ## If @var{x} is a matrix, compute the mean for each column and return them
 ## in a row vector.
 ##
 ## If the optional argument @var{dim} is given, operate along this dimension.
 ##
 ## The optional argument @var{opt} selects the type of mean to compute.
 ## The following options are recognized:
diff --git a/scripts/statistics/base/meansq.m b/scripts/statistics/base/meansq.m
--- a/scripts/statistics/base/meansq.m
+++ b/scripts/statistics/base/meansq.m
@@ -22,28 +22,31 @@
 ## @deftypefnx {} {} meansq (@var{x}, @var{dim})
 ## Compute the mean square of the elements of the vector @var{x}.
 ##
 ## The mean square is defined as
 ## @tex
 ## $$
 ## {\rm meansq} (x) = {\sum_{i=1}^N {x_i}^2 \over N}
 ## $$
-## where $\bar{x}$ is the mean value of $x$.
+## where $N$ is the number of elements of @var{x}.
+##
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## meansq (x) = 1/N SUM_i x(i)^2
+## meansq (@var{x}) = 1/N SUM_i @var{x}(i)^2
 ## @end group
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
-## For matrix arguments, return a row vector containing the mean square
+## If @var{x} is a matrix, return a row vector containing the mean square
 ## of each column.
 ##
 ## If the optional argument @var{dim} is given, operate along this dimension.
 ## @seealso{var, std, moment}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Compute mean square
diff --git a/scripts/statistics/base/median.m b/scripts/statistics/base/median.m
--- a/scripts/statistics/base/median.m
+++ b/scripts/statistics/base/median.m
@@ -17,37 +17,40 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} median (@var{x})
 ## @deftypefnx {} {} median (@var{x}, @var{dim})
 ## Compute the median value of the elements of the vector @var{x}.
 ##
-## When the elements of @var{x} are sorted, the median is defined as
+## When the elements of @var{x} are sorted, say @code{@var{s} = sort (@var{x})},
+## the median is defined as
 ## @tex
 ## $$
 ## {\rm median} (x) =
-##   \cases{x(\lceil N/2\rceil), & $N$ odd;\cr
-##           (x(N/2)+x(N/2+1))/2, & $N$ even.}
+##   \cases{s(\lceil N/2\rceil), & $N$ odd;\cr
+##           (s(N/2)+s(N/2+1))/2, & $N$ even.}
 ## $$
+## where $N$ is the number of elements of @var{x}.
+##
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-##               x(ceil(N/2))             N odd
-## median (x) =
-##              (x(N/2) + x((N/2)+1))/2   N even
+##              |  @var{s}(ceil(N/2))           N odd
+## median (@var{x}) = |
+##              | (@var{s}(N/2) + @var{s}(N/2+1))/2   N even
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ## If @var{x} is of a discrete type such as integer or logical, then
-## the case of even N rounds up (or toward @code{true}).
+## the case of even @math{N} rounds up (or toward @code{true}).
 ##
 ## If @var{x} is a matrix, compute the median value for each column and
 ## return them in a row vector.
 ##
 ## If the optional @var{dim} argument is given, operate along this dimension.
 ## @seealso{mean, mode}
 ## @end deftypefn
 
diff --git a/scripts/statistics/base/moment.m b/scripts/statistics/base/moment.m
--- a/scripts/statistics/base/moment.m
+++ b/scripts/statistics/base/moment.m
@@ -17,31 +17,36 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} moment (@var{x}, @var{p})
 ## @deftypefnx {} {} moment (@var{x}, @var{p}, @var{type})
 ## @deftypefnx {} {} moment (@var{x}, @var{p}, @var{dim})
 ## @deftypefnx {} {} moment (@var{x}, @var{p}, @var{type}, @var{dim})
 ## @deftypefnx {} {} moment (@var{x}, @var{p}, @var{dim}, @var{type})
-## Compute the @var{p}-th central moment of the vector @var{x}.
+## Compute the @var{p}-th central moment of the vector @var{x}:
 ##
 ## @tex
 ## $$
 ## {\sum_{i=1}^N (x_i - \bar{x})^p \over N}
 ## $$
+## where $\bar{x}$ is the mean value of @var{x} and $N$ is the number of elements of @var{x}.
+##
+##
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## 1/N SUM_i (x(i) - mean(x))^p
+## 1/N SUM_i (@var{x}(i) - mean(@var{x}))^@var{p}
 ## @end group
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
 ##
 ## If @var{x} is a matrix, return the row vector containing the @var{p}-th
 ## central moment of each column.
 ##
 ## If the optional argument @var{dim} is given, operate along this dimension.
 ##
 ## The optional string @var{type} specifies the type of moment to be computed.
@@ -59,17 +64,17 @@
 ## $$
 ## {\sum_{i=1}^N {\left| x_i - \bar{x} \right|}^p \over N}
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## 1/N SUM_i (abs (x(i) - mean(x)))^p
+## 1/N SUM_i (abs (@var{x}(i) - mean(@var{x})))^@var{p}
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ##
 ## @item @qcode{"r"}
 ##   Raw Moment.  The moment about zero defined as
 ##
@@ -77,34 +82,34 @@
 ## $$
 ## {\rm moment} (x) = { \sum_{i=1}^N {x_i}^p \over N }
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## moment (x) = 1/N SUM_i x(i)^p
+## moment (@var{x}) = 1/N SUM_i @var{x}(i)^@var{p}
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ##
 ## @item @nospell{@qcode{"ar"}}
 ##   Absolute Raw Moment.  The moment about zero ignoring sign defined as
 ## @tex
 ## $$
 ## {\sum_{i=1}^N {\left| x_i \right|}^p \over N}
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## 1/N SUM_i ( abs (x(i)) )^p
+## 1/N SUM_i ( abs (@var{x}(i)) )^@var{p}
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ## @end table
 ##
 ## If both @var{type} and @var{dim} are given they may appear in any order.
 ## @seealso{var, skewness, kurtosis}
diff --git a/scripts/statistics/base/ols.m b/scripts/statistics/base/ols.m
--- a/scripts/statistics/base/ols.m
+++ b/scripts/statistics/base/ols.m
@@ -13,67 +13,81 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {[@var{beta}, @var{sigma}, @var{r}] =} ols (@var{y}, @var{x})
-## Ordinary least squares estimation.
+## Ordinary least squares (OLS) estimation.
 ##
 ## OLS applies to the multivariate model
 ## @tex
-## $y = x b + e$
-## with
-## $\bar{e} = 0$, and cov(vec($e$)) = kron ($s, I$)
+## $@var{y} = @var{x}\,@var{b} + @var{e}$
 ## @end tex
 ## @ifnottex
-## @w{@math{y = x*b + e}} with
-## @math{mean (e) = 0} and @math{cov (vec (e)) = kron (s, I)}.
+## @w{@math{@var{y} = @var{x}*@var{b} + @var{e}}}
 ## @end ifnottex
 ## where
 ## @tex
-## $y$ is a $t \times p$ matrix, $x$ is a $t \times k$ matrix,
-## $b$ is a $k \times p$ matrix, and $e$ is a $t \times p$ matrix.
+## $@var{y}$ is a $t \times p$ matrix, $@var{x}$ is a $t \times k$ matrix,
+## $@var{b}$ is a $k \times p$ matrix, and $@var{e}$ is a $t \times p$ matrix.
 ## @end tex
 ## @ifnottex
-## @math{y} is a @math{t} by @math{p} matrix, @math{x} is a @math{t} by @math{k}
-## matrix, @math{b} is a @math{k} by @math{p} matrix, and @math{e} is a
-## @math{t} by @math{p} matrix.
+## @math{@var{y}} is a @math{t}-by-@math{p} matrix, @math{@var{x}} is a
+## @math{t}-by-@math{k} matrix, @var{b} is a @math{k}-by-@math{p} matrix, and
+## @var{e} is a @math{t}-by-@math{p} matrix.
 ## @end ifnottex
 ##
-## Each row of @var{y} and @var{x} is an observation and each column a
-## variable.
+## Each row of @var{y} is a @math{p}-variate observation in which each column
+## represents a variable.  Likewise, the rows of @var{x} represent
+## @math{k}-variate observations or possibly designed values.  Furthermore,
+## the collection of observations @var{x} must be of adequate rank, @math{k},
+## otherwise @var{b} cannot be uniquely estimated.
+##
+## The observation errors, @var{e}, are assumed to originate from an
+## underlying @math{p}-variate distribution with zero mean and
+## @math{p}-by-@math{p} covariance matrix @var{S}, both constant conditioned
+## on @var{x}.  Furthermore, the matrix @var{S} is constant with respect to
+## each observation such that
+## @tex
+## $\bar{@var{e}} = 0$ and cov(vec(@var{e})) =  kron(@var{s},@var{I}).
+## @end tex
+## @ifnottex
+## @code{mean (@var{e}) = 0} and
+## @code{cov (vec (@var{e})) = kron (@var{s}, @var{I})}.
+## @end ifnottex
+## (For cases
+## that don't meet this criteria, such as autocorrelated errors, see
+## generalized least squares, gls, for more efficient estimations.)
 ##
 ## The return values @var{beta}, @var{sigma}, and @var{r} are defined as
 ## follows.
 ##
 ## @table @var
 ## @item beta
-## The OLS estimator for @math{b}.
+## The OLS estimator for matrix @var{b}.
 ## @tex
-## $beta$ is calculated directly via $(x^Tx)^{-1} x^T y$ if the matrix $x^Tx$ is
-## of full rank.
+## @var{beta} is calculated directly via $(@var{x}^T@var{x})^{-1} @var{x}^T
+## @var{y}$ if the matrix $@var{x}^T@var{x}$ is of full rank.
 ## @end tex
 ## @ifnottex
-## @var{beta} is calculated directly via @code{inv (x'*x) * x' * y} if the
-## matrix @code{x'*x} is of full rank.
+## @var{beta} is calculated directly via @code{inv (@var{x}'*@var{x}) * @var{x}' * @var{y}} if the
+## matrix @code{@var{x}'*@var{x}} is of full rank.
 ## @end ifnottex
 ## Otherwise, @code{@var{beta} = pinv (@var{x}) * @var{y}} where
 ## @code{pinv (@var{x})} denotes the pseudoinverse of @var{x}.
 ##
 ## @item sigma
 ## The OLS estimator for the matrix @var{s},
 ##
 ## @example
 ## @group
-## @var{sigma} = (@var{y}-@var{x}*@var{beta})'
-##   * (@var{y}-@var{x}*@var{beta})
-##   / (@var{t}-rank(@var{x}))
+## @var{sigma} = (@var{y}-@var{x}*@var{beta})' * (@var{y}-@var{x}*@var{beta}) / (@math{t}-rank(@var{x}))
 ## @end group
 ## @end example
 ##
 ## @item r
 ## The matrix of OLS residuals, @code{@var{r} = @var{y} - @var{x}*@var{beta}}.
 ## @end table
 ## @seealso{gls, pinv}
 ## @end deftypefn
diff --git a/scripts/statistics/base/prctile.m b/scripts/statistics/base/prctile.m
--- a/scripts/statistics/base/prctile.m
+++ b/scripts/statistics/base/prctile.m
@@ -19,17 +19,17 @@
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{q} =} prctile (@var{x})
 ## @deftypefnx {} {@var{q} =} prctile (@var{x}, @var{p})
 ## @deftypefnx {} {@var{q} =} prctile (@var{x}, @var{p}, @var{dim})
 ## For a sample @var{x}, compute the quantiles, @var{q}, corresponding
 ## to the cumulative probability values, @var{p}, in percent.
 ##
 ## If @var{x} is a matrix, compute the percentiles for each column and return
-## them in a matrix, such that the i-th row of @var{y} contains the
+## them in a matrix, such that the i-th row of @var{q} contains the
 ## @var{p}(i)th percentiles of each column of @var{x}.
 ##
 ## If @var{p} is unspecified, return the quantiles for @code{[0 25 50 75 100]}.
 ##
 ## The optional argument @var{dim} determines the dimension along which the
 ## percentiles are calculated.  If @var{dim} is omitted it defaults to the
 ## first non-singleton dimension.
 ##
diff --git a/scripts/statistics/base/quantile.m b/scripts/statistics/base/quantile.m
--- a/scripts/statistics/base/quantile.m
+++ b/scripts/statistics/base/quantile.m
@@ -32,50 +32,94 @@
 ## If @var{p} is unspecified, return the quantiles for
 ## @code{[0.00 0.25 0.50 0.75 1.00]}.
 ## The optional argument @var{dim} determines the dimension along which
 ## the quantiles are calculated.  If @var{dim} is omitted it defaults to
 ## the first non-singleton dimension.
 ##
 ## The methods available to calculate sample quantiles are the nine methods
 ## used by R (@url{http://www.r-project.org/}).  The default value is
-## @w{METHOD = 5}.
+## @w{@var{method} = 5}.
 ##
 ## Discontinuous sample quantile methods 1, 2, and 3
 ##
 ## @enumerate 1
 ## @item Method 1: Inverse of empirical distribution function.
 ##
 ## @item Method 2: Similar to method 1 but with averaging at discontinuities.
 ##
 ## @item Method 3: SAS definition: nearest even order statistic.
 ## @end enumerate
 ##
-## Continuous sample quantile methods 4 through 9, where p(k) is the linear
-## interpolation function respecting each methods' representative cdf.
+## Continuous sample quantile methods 4 through 9, where
+## @tex
+## $p(k)$
+## @end tex
+## @ifnottex
+## @var{p}(k)
+## @end ifnottex
+## is the linear
+## interpolation function respecting each method's representative cdf.
 ##
 ## @enumerate 4
-## @item Method 4: p(k) = k / n.  That is, linear interpolation of the
-## empirical cdf.
+## @item Method 4:
+## @tex
+## $p(k) = k / N$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = k / N.
+## @end ifnottex
+## That is, linear interpolation of the empirical cdf, where @math{N} is the
+## length of @var{P}.
 ##
-## @item Method 5: p(k) = (k - 0.5) / n.  That is a piecewise linear function
-## where the knots are the values midway through the steps of the empirical
-## cdf.
+## @item Method 5:
+## @tex
+## $p(k) = (k - 0.5) / N$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = (k - 0.5) / N.
+## @end ifnottex
+## That is, a piecewise linear function where the knots are the values midway
+## through the steps of the empirical cdf.
 ##
-## @item Method 6: p(k) = k / (n + 1).
+## @item Method 6:
+## @tex
+## $p(k) = k / (N + 1)$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = k / (N + 1).
+## @end ifnottex
 ##
-## @item Method 7: p(k) = (k - 1) / (n - 1).
+## @item Method 7:
+## @tex
+## $p(k) = (k - 1) / (N - 1)$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = (k - 1) / (N - 1).
+## @end ifnottex
 ##
-## @item Method 8: p(k) = (k - 1/3) / (n + 1/3).  The resulting quantile
-## estimates are approximately median-unbiased regardless of the distribution
-## of @var{x}.
+## @item Method 8:
+## @tex
+## $p(k) = (k - 1/3) / (N + 1/3)$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = (k - 1/3) / (N + 1/3).
+## @end ifnottex
+## The resulting quantile estimates are approximately median-unbiased
+## regardless of the distribution of @var{x}.
 ##
-## @item Method 9: p(k) = (k - 3/8) / (n + 1/4).  The resulting quantile
-## estimates are approximately unbiased for the expected order statistics if
-## @var{x} is normally distributed.
+## @item Method 9:
+## @tex
+## $p(k) = (k - 3/8) / (N + 1/4)$.
+## @end tex
+## @ifnottex
+## @var{p}(k) = (k - 3/8) / (N + 1/4).
+## @end ifnottex
+## The resulting quantile estimates are approximately unbiased for the
+## expected order statistics if @var{x} is normally distributed.
 ## @end enumerate
 ##
 ## @nospell{Hyndman and Fan} (1996) recommend method 8.  Maxima, S, and R
 ## (versions prior to 2.0.0) use 7 as their default.  Minitab and SPSS
 ## use method 6.  @sc{matlab} uses method 5.
 ##
 ## References:
 ##
diff --git a/scripts/statistics/base/skewness.m b/scripts/statistics/base/skewness.m
--- a/scripts/statistics/base/skewness.m
+++ b/scripts/statistics/base/skewness.m
@@ -22,19 +22,19 @@
 ## @deftypefnx {} {} skewness (@var{x}, @var{flag})
 ## @deftypefnx {} {} skewness (@var{x}, @var{flag}, @var{dim})
 ## Compute the sample skewness of the elements of @var{x}.
 ##
 ## The sample skewness is defined as
 ## @tex
 ## $$
 ## {\rm skewness} (@var{x}) = {{{1\over N}\,
-##          \sum_{i=1}^N (@var{x}_i - \bar{@var{x}})^3} \over \sigma^3},
+##          \sum_{i=1}^N (x_i - \bar{x})^3} \over \sigma^3},
 ## $$
-## where $N$ is the length of @var{x}, $\bar{@var{x}}$ its mean and $\sigma$
+## where $N$ is the length of @var{x}, $\bar{x}$ its mean and $\sigma$
 ## its (uncorrected) standard deviation.
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##                mean ((@var{x} - mean (@var{x})).^3)
 ## skewness (@var{X}) = ------------------------.
@@ -47,29 +47,31 @@
 ## @noindent
 ## The optional argument @var{flag} controls which normalization is used.
 ## If @var{flag} is equal to 1 (default value, used when @var{flag} is omitted
 ## or empty), return the sample skewness as defined above.  If @var{flag} is
 ## equal to 0, return the adjusted skewness coefficient instead:
 ## @tex
 ## $$
 ## {\rm skewness} (@var{x}) = {\sqrt{N (N - 1)} \over N - 2} \times \,
-##   {{{1 \over N} \sum_{i=1}^N (@var{x}_i - \bar{@var{x}})^3} \over \sigma^3}
+##   {{{1 \over N} \sum_{i=1}^N (x_i - \bar{x})^3} \over \sigma^3}
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##                   sqrt (N*(N-1))   mean ((@var{x} - mean (@var{x})).^3)
 ## skewness (@var{X}, 0) = -------------- * ------------------------.
 ##                       (N - 2)             std (@var{x}).^3
 ## @end group
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
 ## The adjusted skewness coefficient is obtained by replacing the sample second
 ## and third central moments by their bias-corrected versions.
 ##
 ## If @var{x} is a matrix, or more generally a multi-dimensional array, return
 ## the skewness along the first non-singleton dimension.  If the optional
 ## @var{dim} argument is given, operate along this dimension.
 ##
diff --git a/scripts/statistics/base/spearman.m b/scripts/statistics/base/spearman.m
--- a/scripts/statistics/base/spearman.m
+++ b/scripts/statistics/base/spearman.m
@@ -15,24 +15,49 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} spearman (@var{x})
 ## @deftypefnx {} {} spearman (@var{x}, @var{y})
 ## @cindex Spearman's Rho
-## Compute Spearman's rank correlation coefficient @var{rho}.
+## Compute Spearman's rank correlation coefficient
+## @tex
+## $\rho$.
+## @end tex
+## @ifnottex
+## @var{rho}.
+## @end ifnottex
+##
+## For two data vectors @var{x} and @var{y}, Spearman's
+## @tex
+## $\rho$
+## @end tex
+## @ifnottex
+## @var{rho}
+## @end ifnottex
+## is the correlation coefficient of the ranks of @var{x} and @var{y}.
 ##
-## For two data vectors @var{x} and @var{y}, Spearman's @var{rho} is the
-## correlation coefficient of the ranks of @var{x} and @var{y}.
-##
-## If @var{x} and @var{y} are drawn from independent distributions, @var{rho}
-## has zero mean and variance @code{1 / (n - 1)}, and is asymptotically
-## normally distributed.
+## If @var{x} and @var{y} are drawn from independent distributions,
+## @tex
+## $\rho$
+## @end tex
+## @ifnottex
+## @var{rho}
+## @end ifnottex
+## has zero mean and variance
+## @tex
+## $1 / (N - 1)$,
+## @end tex
+## @ifnottex
+## @code{1 / (N - 1)},
+## @end ifnottex
+## where @math{N} is the length of the @var{x} and @var{y} vectors, and is
+## asymptotically normally distributed.
 ##
 ## @code{spearman (@var{x})} is equivalent to
 ## @code{spearman (@var{x}, @var{x})}.
 ## @seealso{ranks, kendall}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Spearman's rank correlation rho
diff --git a/scripts/statistics/base/std.m b/scripts/statistics/base/std.m
--- a/scripts/statistics/base/std.m
+++ b/scripts/statistics/base/std.m
@@ -22,28 +22,28 @@
 ## @deftypefnx {} {} std (@var{x}, @var{opt}, @var{dim})
 ## Compute the standard deviation of the elements of the vector @var{x}.
 ##
 ## The standard deviation is defined as
 ## @tex
 ## $$
 ## {\rm std} (x) = \sigma = \sqrt{{\sum_{i=1}^N (x_i - \bar{x})^2 \over N - 1}}
 ## $$
-## where $\bar{x}$ is the mean value of $x$ and $N$ is the number of elements.
+## where $\bar{x}$ is the mean value of @var{x} and $N$ is the number of elements of @var{x}.
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## std (x) = sqrt ( 1/(N-1) SUM_i (x(i) - mean(x))^2 )
+## std (@var{x}) = sqrt ( 1/(N-1) SUM_i (@var{x}(i) - mean(@var{x}))^2 )
 ## @end group
 ## @end example
 ##
 ## @noindent
-## where @math{N} is the number of elements.
+## where @math{N} is the number of elements of the @var{x} vector.
 ## @end ifnottex
 ##
 ## If @var{x} is a matrix, compute the standard deviation for each column and
 ## return them in a row vector.
 ##
 ## The argument @var{opt} determines the type of normalization to use.
 ## Valid values are
 ##
diff --git a/scripts/statistics/base/var.m b/scripts/statistics/base/var.m
--- a/scripts/statistics/base/var.m
+++ b/scripts/statistics/base/var.m
@@ -22,44 +22,48 @@
 ## @deftypefnx {} {} var (@var{x}, @var{opt}, @var{dim})
 ## Compute the variance of the elements of the vector @var{x}.
 ##
 ## The variance is defined as
 ## @tex
 ## $$
 ## {\rm var} (x) = \sigma^2 = {\sum_{i=1}^N (x_i - \bar{x})^2 \over N - 1}
 ## $$
-## where $\bar{x}$ is the mean value of $x$.
+## where $\bar{x}$ is the mean value of @var{x} and $N$ is the number of
+## elements of @var{x}.
+##
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
-## var (x) = 1/(N-1) SUM_i (x(i) - mean(x))^2
+## var (@var{x}) = 1/(N-1) SUM_i (@var{x}(i) - mean(@var{x}))^2
 ## @end group
 ## @end example
 ##
+## where @math{N} is the length of the @var{x} vector.
+##
 ## @end ifnottex
 ## If @var{x} is a matrix, compute the variance for each column and return
 ## them in a row vector.
 ##
 ## The argument @var{opt} determines the type of normalization to use.
 ## Valid values are
 ##
 ## @table @asis
 ## @item 0:
 ##   normalize with @math{N-1}, provides the best unbiased estimator of the
 ## variance [default]
 ##
 ## @item 1:
 ##   normalizes with @math{N}, this provides the second moment around the mean
 ## @end table
 ##
-## If @math{N==1} the value of @var{opt} is ignored and normalization by
-## @math{N} is used.
+## If @math{N} is equal to 1 the value of @var{opt} is ignored and
+## normalization by @math{N} is used.
 ##
 ## If the optional argument @var{dim} is given, operate along this dimension.
 ## @seealso{cov, std, skewness, kurtosis, moment}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Compute variance
 
