# HG changeset patch
# User jwe
# Date 837742559 0
#      Fri Jul 19 02:15:59 1996 +0000
# Node ID 98d0771f7484e737d067fc3242b51990082eef0b
# Parent  798a4d06ba7d0d24ad2a788e47f68490b0111014
[project @ 1996-07-19 02:14:19 by jwe]
Initial revision

diff --git a/test/octave.test/args/args-1.m b/test/octave.test/args/args-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-1.m
@@ -0,0 +1,5 @@
+1;
+function f ()
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+f
diff --git a/test/octave.test/args/args-10.m b/test/octave.test/args/args-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-10.m
@@ -0,0 +1,5 @@
+1;
+function [...] = f (...)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+[s, t, u, v] = f (1, 2, 3);
diff --git a/test/octave.test/args/args-2.m b/test/octave.test/args/args-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-2.m
@@ -0,0 +1,5 @@
+1;
+function f (x, y)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+f (1)
diff --git a/test/octave.test/args/args-3.m b/test/octave.test/args/args-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-3.m
@@ -0,0 +1,6 @@
+1;
+function [x, y] = f ()
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+  x = 2;
+endfunction
+x = f ();
diff --git a/test/octave.test/args/args-4.m b/test/octave.test/args/args-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-4.m
@@ -0,0 +1,6 @@
+1;
+function [x, y] = f (a, b)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+  x = a;
+endfunction
+z = f (1);
diff --git a/test/octave.test/args/args-5.m b/test/octave.test/args/args-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-5.m
@@ -0,0 +1,5 @@
+1;
+function [...] = f (...)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+f
diff --git a/test/octave.test/args/args-6.m b/test/octave.test/args/args-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-6.m
@@ -0,0 +1,5 @@
+1;
+function [...] = f (x, ...)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+f (1)
diff --git a/test/octave.test/args/args-7.m b/test/octave.test/args/args-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-7.m
@@ -0,0 +1,6 @@
+1;
+function [x, ...] = f (...)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+  x = 2;
+endfunction
+x = f ();
diff --git a/test/octave.test/args/args-8.m b/test/octave.test/args/args-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-8.m
@@ -0,0 +1,6 @@
+1;
+function [...] = f (...)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+  vr_val (va_arg ());
+endfunction
+z = f (1);
diff --git a/test/octave.test/args/args-9.m b/test/octave.test/args/args-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args-9.m
@@ -0,0 +1,5 @@
+1;
+function [x, y, z] = f (a, b, c, d, e)
+  printf ("nargin: %d, nargout: %d\n", nargin, nargout);
+endfunction
+[s, t] = f (1, 2, 3, 4);
diff --git a/test/octave.test/args/args.exp b/test/octave.test/args/args.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/args/args.exp
@@ -0,0 +1,39 @@
+set test args-1
+set prog_output "nargin: 0, nargout: 0"
+do_test args-1.m
+
+set test args-2
+set prog_output "nargin: 1, nargout: 0"
+do_test args-2.m
+
+set test args-3
+set prog_output "nargin: 0, nargout: 1"
+do_test args-3.m
+
+set test args-4
+set prog_output "nargin: 1, nargout: 1"
+do_test args-4.m
+
+set test args-5
+set prog_output "nargin: 0, nargout: 0"
+do_test args-5.m
+
+set test args-6
+set prog_output "nargin: 1, nargout: 0"
+do_test args-6.m
+
+set test args-7
+set prog_output "nargin: 0, nargout: 1"
+do_test args-7.m
+
+set test args-8
+set prog_output "nargin: 1, nargout: 1"
+do_test args-8.m
+
+set test args-9
+set prog_output "nargin: 4, nargout: 2"
+do_test args-9.m
+
+set test args-10
+set prog_output "nargin: 3, nargout: 4"
+do_test args-10.m
diff --git a/test/octave.test/contin/contin-1.m b/test/octave.test/contin/contin-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-1.m
@@ -0,0 +1,6 @@
+whitespace_in_literal_matrix = "ignore";
+x = [1,2];
+a = 1;
+b = 2;
+[a... # comments here ok
+b]
diff --git a/test/octave.test/contin/contin-10.m b/test/octave.test/contin/contin-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-10.m
@@ -0,0 +1,4 @@
+1 + ...
+2 - \# comments here ok
+3 / ... # comments here ok
+-1
diff --git a/test/octave.test/contin/contin-11.m b/test/octave.test/contin/contin-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-11.m
@@ -0,0 +1,11 @@
+1;
+function f (a,...
+            b,  ...
+            c,  ...   % comments ok
+            x,  # continuation characters not required in parens
+            y,  \# but they should work too.
+            z)
+
+  1
+end
+f ()
diff --git a/test/octave.test/contin/contin-12.m b/test/octave.test/contin/contin-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-12.m
@@ -0,0 +1,5 @@
+if (1 == 1
+    && 2 == 2
+    || 3 == 5)
+  1
+end
diff --git a/test/octave.test/contin/contin-13.m b/test/octave.test/contin/contin-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-13.m
@@ -0,0 +1,8 @@
+whitespace_in_literal_matrix = "standard";
+x = [1, ...
+
+ ...
+
+2];
+y = [1;2];
+all (y == x)
diff --git a/test/octave.test/contin/contin-14.m b/test/octave.test/contin/contin-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-14.m
@@ -0,0 +1,8 @@
+whitespace_in_literal_matrix = "ignore";
+x = [1, ...
+
+ ...
+
+2];
+y = [1,2];
+all (y == x)
diff --git a/test/octave.test/contin/contin-15.m b/test/octave.test/contin/contin-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-15.m
@@ -0,0 +1,5 @@
+whitespace_in_literal_matrix = "standard";
+x = [1,...
+2];
+y = [1,2];
+all (y == x)
diff --git a/test/octave.test/contin/contin-16.m b/test/octave.test/contin/contin-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-16.m
@@ -0,0 +1,5 @@
+whitespace_in_literal_matrix = "standard";
+x = [ 1 , ...
+  2];
+y = [1,2];
+all (y == x)
diff --git a/test/octave.test/contin/contin-2.m b/test/octave.test/contin/contin-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-2.m
@@ -0,0 +1,7 @@
+whitespace_in_literal_matrix = "traditional";
+x = [1,2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-3.m b/test/octave.test/contin/contin-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-3.m
@@ -0,0 +1,7 @@
+whitespace_in_literal_matrix = "standard";
+x = [1,2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-4.m b/test/octave.test/contin/contin-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-4.m
@@ -0,0 +1,6 @@
+whitespace_in_literal_matrix = "ignore";
+x = [1,2];
+a = 1;
+b = 2;
+[a... # comments ok here
+ b]
diff --git a/test/octave.test/contin/contin-5.m b/test/octave.test/contin/contin-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-5.m
@@ -0,0 +1,7 @@
+whitespace_in_literal_matrix = "traditional";
+x = [1,2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+ b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-6.m b/test/octave.test/contin/contin-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-6.m
@@ -0,0 +1,7 @@
+whitespace_in_literal_matrix = "standard";
+x = [1,2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+ b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-7.m b/test/octave.test/contin/contin-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-7.m
@@ -0,0 +1,9 @@
+whitespace_in_literal_matrix = "ignore";
+x = [1;2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+;\
+
+b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-8.m b/test/octave.test/contin/contin-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-8.m
@@ -0,0 +1,9 @@
+whitespace_in_literal_matrix = "traditional";
+x = [1;2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+;\
+
+b];
+all (y == x)
diff --git a/test/octave.test/contin/contin-9.m b/test/octave.test/contin/contin-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin-9.m
@@ -0,0 +1,9 @@
+whitespace_in_literal_matrix = "standard";
+x = [1;2];
+a = 1;
+b = 2;
+y = [a... # comments here ok
+;\
+
+b];
+all (y == x)
diff --git a/test/octave.test/contin/contin.exp b/test/octave.test/contin/contin.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/contin/contin.exp
@@ -0,0 +1,63 @@
+set test contin-1
+set prog_output "parse error.*"
+do_test contin-1.m
+
+set test contin-2
+set prog_output "ans = 1"
+do_test contin-2.m
+
+set test contin-3
+set prog_output "ans = 1"
+do_test contin-3.m
+
+set test contin-4
+set prog_output "parse error.*"
+do_test contin-4.m
+
+set test contin-5
+set prog_output "ans = 1"
+do_test contin-5.m
+
+set test contin-6
+set prog_output "ans = 1"
+do_test contin-6.m
+
+set test contin-7
+set prog_output "ans = 1"
+do_test contin-7.m
+
+set test contin-8
+set prog_output "ans = 1"
+do_test contin-8.m
+
+set test contin-9
+set prog_output "ans = 1"
+do_test contin-9.m
+
+set test contin-10
+set prog_output "ans = 6"
+do_test contin-10.m
+
+set test contin-11
+set prog_output "ans = 1"
+do_test contin-11.m
+
+set test contin-12
+set prog_output "ans = 1"
+do_test contin-12.m
+
+set test contin-13
+set prog_output "ans = 1"
+do_test contin-13.m
+
+set test contin-14
+set prog_output "ans = 1"
+do_test contin-14.m
+
+set test contin-15
+set prog_output "ans = 1"
+do_test contin-15.m
+
+set test contin-16
+set prog_output "ans = 1"
+do_test contin-16.m
diff --git a/test/octave.test/eval/eval-1.m b/test/octave.test/eval/eval-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-1.m
@@ -0,0 +1,1 @@
+eval ("x = 1");
diff --git a/test/octave.test/eval/eval-2.m b/test/octave.test/eval/eval-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-2.m
@@ -0,0 +1,1 @@
+eval ("x = 1;")
diff --git a/test/octave.test/eval/eval-3.m b/test/octave.test/eval/eval-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-3.m
@@ -0,0 +1,1 @@
+eval ("x = 1;");
diff --git a/test/octave.test/eval/eval-4.m b/test/octave.test/eval/eval-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-4.m
@@ -0,0 +1,1 @@
+eval ("x = 1")
diff --git a/test/octave.test/eval/eval-5.m b/test/octave.test/eval/eval-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-5.m
@@ -0,0 +1,2 @@
+eval ("flipud = 2;");
+flipud
diff --git a/test/octave.test/eval/eval-6.m b/test/octave.test/eval/eval-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval-6.m
@@ -0,0 +1,5 @@
+function y = f ()
+  eval ("flipud = 2;");
+  y = flipud;
+endfunction
+f
diff --git a/test/octave.test/eval/eval.exp b/test/octave.test/eval/eval.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/eval/eval.exp
@@ -0,0 +1,23 @@
+set test eval-1
+set prog_output "x = 1"
+do_test eval-1.m
+
+set test eval-2
+set prog_output "ans = 1"
+do_test eval-2.m
+
+set test eval-3
+set prog_output "^$"
+do_test eval-3.m
+
+set test eval-4
+set prog_output "x = 1\nans = 1"
+do_test eval-4.m
+
+set test eval-5
+set prog_output "flipud = 2"
+do_test eval-5.m
+
+set test eval-6
+set prog_output "ans = 2"
+do_test eval-6.m
diff --git a/test/octave.test/for/for-1.m b/test/octave.test/for/for-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-1.m
@@ -0,0 +1,4 @@
+for i = 1
+  printf ("%d", i);
+end
+printf ("\n");
diff --git a/test/octave.test/for/for-2.m b/test/octave.test/for/for-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-2.m
@@ -0,0 +1,4 @@
+for i = 1:4
+  printf ("%d", i);
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-3.m b/test/octave.test/for/for-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-3.m
@@ -0,0 +1,4 @@
+for i = [1,2,3,4]
+  printf ("%d", i);
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-4.m b/test/octave.test/for/for-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-4.m
@@ -0,0 +1,5 @@
+for i = [1,2;3,4]
+  printf ("%d", i(1,1));
+  printf ("%d", i(2,1));
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-5.m b/test/octave.test/for/for-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-5.m
@@ -0,0 +1,4 @@
+for i = I
+  printf ("%d", imag (i));
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-6.m b/test/octave.test/for/for-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-6.m
@@ -0,0 +1,4 @@
+for i = [1,2,3,4]*I
+  printf ("%d", imag (i));
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-7.m b/test/octave.test/for/for-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-7.m
@@ -0,0 +1,5 @@
+for i = [1,2;3,4]*I
+  printf ("%d", imag (i(1,1)));
+  printf ("%d", imag (i(2,1)));
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-8.m b/test/octave.test/for/for-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-8.m
@@ -0,0 +1,7 @@
+for i = [1,2,3,4]
+  if (i > 2)
+    break;
+  endif
+  printf ("%d", i);
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for-9.m b/test/octave.test/for/for-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for-9.m
@@ -0,0 +1,7 @@
+for i = [1,2,3,4]
+  if (i < 3)
+    continue;
+  endif
+  printf ("%d", i);
+endfor
+printf ("\n");
diff --git a/test/octave.test/for/for.exp b/test/octave.test/for/for.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/for/for.exp
@@ -0,0 +1,35 @@
+set test for-1
+set prog_output "1"
+do_test for-1.m
+
+set test for-2
+set prog_output "1234"
+do_test for-2.m
+
+set test for-3
+set prog_output "1234"
+do_test for-3.m
+
+set test for-4
+set prog_output "1324"
+do_test for-4.m
+
+set test for-5
+set prog_output "1"
+do_test for-5.m
+
+set test for-6
+set prog_output "1234"
+do_test for-6.m
+
+set test for-7
+set prog_output "1324"
+do_test for-7.m
+
+set test for-8
+set prog_output "12"
+do_test for-8.m
+
+set test for-9
+set prog_output "34"
+do_test for-9.m
diff --git a/test/octave.test/fsolve/fsolve-1.m b/test/octave.test/fsolve/fsolve-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/fsolve/fsolve-1.m
@@ -0,0 +1,45 @@
+x_opt = [ 0.599054;
+          2.395931;
+          2.005014 ];
+
+tol = 1.0e-5;
+
+function retval = f (p) 
+
+  x = p(1);
+  y = p(2);
+  z = p(3);
+
+  retval = zeros (3, 1);
+
+  retval(1) = sin(x) + y**2 + log(z) - 7;
+  retval(2) = 3*x + 2**y -z**3 + 1;
+  retval(3) = x + y + z - 5;
+
+end
+
+[x, info] = fsolve ("f", [ 0.5, 2.0, 2.5 ]);
+
+val = f (x);
+
+info_bad = (info != 1);
+solution_bad = sum (abs (x - x_opt) > tol);
+value_bad = sum (abs (val) > tol);
+
+if (info_bad)
+  printf ("info bad\n");
+else
+  printf ("info good\n");
+endif
+
+if (solution_bad)
+  printf ("solution bad\n");
+else
+  printf ("solution good\n");
+endif
+
+if (value_bad)
+  printf ("value bad\n");
+else
+  printf ("value good\n");
+endif
diff --git a/test/octave.test/fsolve/fsolve-2.m b/test/octave.test/fsolve/fsolve-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/fsolve/fsolve-2.m
@@ -0,0 +1,48 @@
+x_opt = [ -0.767297326653401;
+           0.590671081117440;
+           1.47190018629642;
+          -1.52719341133957 ];
+
+tol = 1.0e-5;
+
+function retval = f (p)
+
+  x = p(1);
+  y = p(2);
+  z = p(3);
+  w = p(4);
+
+  retval = zeros (4, 1);
+
+  retval(1) = 3*x + 4*y + exp (z + w) - 1.007;
+  retval(2) = 6*x - 4*y + exp (3*z + w) - 11;
+  retval(3) = x^4 - 4*y^2 + 6*z - 8*w - 20;
+  retval(4) = x^2 + 2*y^3 + z - w - 4;
+
+end
+
+[x, info] = fsolve ("f", [-1, 1, 2, -1]);
+
+val = f (x);
+
+info_bad = (info != 1);
+solution_bad = sum (abs (x - x_opt) > tol);
+value_bad = sum (abs (val) > tol);
+
+if (info_bad)
+  printf ("info bad\n");
+else
+  printf ("info good\n");
+endif
+
+if (solution_bad)
+  printf ("solution bad\n");
+else
+  printf ("solution good\n");
+endif
+
+if (value_bad)
+  printf ("value bad\n");
+else
+  printf ("value good\n");
+endif
diff --git a/test/octave.test/fsolve/fsolve.exp b/test/octave.test/fsolve/fsolve.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/fsolve/fsolve.exp
@@ -0,0 +1,7 @@
+set test fsolve-1
+set prog_output "info good\nsolution good\nvalue good"
+do_test fsolve-1.m
+
+set test fsolve-2
+set prog_output "info good\nsolution good\nvalue good"
+do_test fsolve-2.m
diff --git a/test/octave.test/global/global-1.m b/test/octave.test/global/global-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-1.m
@@ -0,0 +1,2 @@
+global G = 1;
+G
diff --git a/test/octave.test/global/global-2.m b/test/octave.test/global/global-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-2.m
@@ -0,0 +1,6 @@
+global G = 1;
+function f ()
+  global G;
+  G
+endfunction
+f
diff --git a/test/octave.test/global/global-3.m b/test/octave.test/global/global-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-3.m
@@ -0,0 +1,5 @@
+global G = 1;
+function f ()
+  G
+endfunction
+f
diff --git a/test/octave.test/global/global-4.m b/test/octave.test/global/global-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-4.m
@@ -0,0 +1,4 @@
+function f ()
+  global H = 1;
+endfunction
+f;
diff --git a/test/octave.test/global/global-5.m b/test/octave.test/global/global-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-5.m
@@ -0,0 +1,8 @@
+1;
+function f ()
+  global H = 1;
+endfunction
+function g ()
+  H
+endfunction
+g
diff --git a/test/octave.test/global/global-6.m b/test/octave.test/global/global-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-6.m
@@ -0,0 +1,10 @@
+1;
+function f ()
+  global H = 1;
+endfunction
+f;
+function g ()
+  global H;
+  H
+endfunction
+g
diff --git a/test/octave.test/global/global-7.m b/test/octave.test/global/global-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-7.m
@@ -0,0 +1,5 @@
+1;
+function f ()
+  global H = 1;
+endfunction
+H
diff --git a/test/octave.test/global/global-8.m b/test/octave.test/global/global-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global-8.m
@@ -0,0 +1,11 @@
+1;
+function f ()
+  global H = 1;
+endfunction
+f;
+function g ()
+  global H;
+  H
+endfunction
+clear H
+g
diff --git a/test/octave.test/global/global.exp b/test/octave.test/global/global.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/global/global.exp
@@ -0,0 +1,31 @@
+set test global-1
+set prog_output "G = 1"
+do_test global-1.m
+
+set test global-2
+set prog_output "G = 1"
+do_test global-2.m
+
+set test global-3
+set prog_output "error:.*"
+do_test global-3.m
+
+set test global-4
+set prog_output "^$"
+do_test global-4.m
+
+set test global-5
+set prog_output "error:.*"
+do_test global-5.m
+
+set test global-6
+set prog_output "H = 1"
+do_test global-6.m
+
+set test global-7
+set prog_output "error:.*"
+do_test global-7.m
+
+set test global-8
+set prog_output "H = 1"
+do_test global-8.m
diff --git a/test/octave.test/if/if-1.m b/test/octave.test/if/if-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-1.m
@@ -0,0 +1,5 @@
+i = 0;
+if (i == 0)
+  i++;
+  printf ("%d\n", i);
+endif
diff --git a/test/octave.test/if/if-2.m b/test/octave.test/if/if-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-2.m
@@ -0,0 +1,5 @@
+if (eye (2))
+  printf ("fail\n");
+else
+  printf ("pass\n");
+end
diff --git a/test/octave.test/if/if-3.m b/test/octave.test/if/if-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-3.m
@@ -0,0 +1,6 @@
+x = 2;
+if (eye (2))
+  printf ("fail\n");
+elseif (x)
+  printf ("pass\n");
+endif
diff --git a/test/octave.test/if/if-4.m b/test/octave.test/if/if-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-4.m
@@ -0,0 +1,9 @@
+x = 0;
+y = -2;
+if (eye (2))
+  printf ("fail\n");
+elseif (x)
+  printf ("fail\n");
+elseif (y)
+  printf ("pass\n");
+end
diff --git a/test/octave.test/if/if-5.m b/test/octave.test/if/if-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-5.m
@@ -0,0 +1,11 @@
+x = 0;
+y = -2;
+if (eye (2))
+  printf ("fail\n");
+elseif (x)
+  printf ("fail\n");
+elseif (x)
+  printf ("fail\n");
+else
+  printf ("pass\n");
+endif
diff --git a/test/octave.test/if/if-6.m b/test/octave.test/if/if-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if-6.m
@@ -0,0 +1,9 @@
+x = 0;
+y = -2;
+if (y)
+  printf ("pass\n");
+elseif (x)
+  printf ("fail\n");
+elseif (x)
+  printf ("fail\n");
+end
diff --git a/test/octave.test/if/if.exp b/test/octave.test/if/if.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/if/if.exp
@@ -0,0 +1,23 @@
+set test if-1
+set prog_output "1"
+do_test if-1.m
+
+set test if-2
+set prog_output "pass"
+do_test if-2.m
+
+set test if-3
+set prog_output "pass"
+do_test if-3.m
+
+set test if-4
+set prog_output "pass"
+do_test if-4.m
+
+set test if-5
+set prog_output "pass"
+do_test if-5.m
+
+set test if-6
+set prog_output "pass"
+do_test if-6.m
diff --git a/test/octave.test/index/dfi-f/index.exp b/test/octave.test/index/dfi-f/index.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/index.exp
@@ -0,0 +1,163 @@
+# Tests with do_fortran_indexing == "false"
+
+# scalar tests
+
+set test index-s-1
+set prog_output "ans = 1"
+do_test s-1.m
+
+set test index-s-2
+set prog_output "ans = 1"
+do_test s-2.m
+
+set test index-s-3
+set prog_output "ans = 1"
+do_test s-3.m
+
+set test index-s-4
+set prog_output "ans = 1"
+do_test s-4.m
+
+set test index-s-5
+set prog_output "ans = 1"
+do_test s-5.m
+
+set test index-s-6
+set prog_output "ans = 1"
+do_test s-6.m
+
+set test index-s-7
+set prog_output "ans = 1"
+do_test s-7.m
+
+set test index-s-8
+set prog_output "error:.*"
+do_test s-8.m
+
+set test index-s-9
+set prog_output "error:.*"
+do_test s-9.m
+
+set test index-s-10
+set prog_output "error:.*"
+do_test s-10.m
+
+set test index-s-11
+set prog_output "error:.*"
+do_test s-11.m
+
+set test index-s-12
+set prog_output "error:.*"
+do_test s-12.m
+
+set test index-s-13
+set prog_output "error:.*"
+do_test s-13.m
+
+set test index-s-14
+set prog_output "error:.*"
+do_test s-14.m
+
+set test index-s-15
+set prog_output "error:.*"
+do_test s-15.m
+
+set test index-s-16
+set prog_output "error:.*"
+do_test s-16.m
+
+set test index-s-17
+set prog_output "error:.*"
+do_test s-17.m
+
+set test index-s-18
+set prog_output "error:.*"
+do_test s-18.m
+
+set test index-s-19
+set prog_output "error:.*"
+do_test s-19.m
+
+set test index-s-20
+set prog_output "error:.*"
+do_test s-20.m
+
+# vector tests
+
+set test index-v-1
+set prog_output "ans = 4"
+do_test v-1.m
+
+set test index-v-2
+set prog_output "ans = 3"
+do_test v-2.m
+
+set test index-v-3
+set prog_output "ans = 1"
+do_test v-3.m
+
+set test index-v-4
+set prog_output "ans = 1"
+do_test v-4.m
+
+set test index-v-5
+set prog_output "ans = 2"
+do_test v-5.m
+
+set test index-v-6
+set prog_output "ans = 1"
+do_test v-6.m
+
+set test index-v-7
+set prog_output "ans = 1"
+do_test v-7.m
+
+set test index-v-8
+set prog_output "error:.*"
+do_test v-8.m
+
+set test index-v-9
+set prog_output "error:.*"
+do_test v-9.m
+
+set test index-v-10
+set prog_output "error:.*"
+do_test v-10.m
+
+set test index-v-11
+set prog_output "ans = 1"
+do_test v-11.m
+
+set test index-v-12
+set prog_output "error:.*"
+do_test v-12.m
+
+set test index-v-13
+set prog_output "ans = 1"
+do_test v-13.m
+
+set test index-v-14
+set prog_output "ans = 1"
+do_test v-14.m
+
+set test index-v-15
+set prog_output "ans = 1"
+do_test v-15.m
+
+# matrix tests
+
+set test index-m-1
+set prog_output "ans = 1"
+do_test m-1.m
+
+set test index-m-2
+set prog_output "error:.*"
+do_test m-2.m
+
+set test index-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test index-m-4
+set prog_output "error:.*"
+do_test m-4.m
diff --git a/test/octave.test/index/dfi-f/m-1.m b/test/octave.test/index/dfi-f/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/m-1.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "false";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+all (all (a(:,:) == a))
diff --git a/test/octave.test/index/dfi-f/m-2.m b/test/octave.test/index/dfi-f/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/m-2.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "false";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+a(:)
diff --git a/test/octave.test/index/dfi-f/m-3.m b/test/octave.test/index/dfi-f/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/m-3.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "false";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+a(0)
diff --git a/test/octave.test/index/dfi-f/m-4.m b/test/octave.test/index/dfi-f/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/m-4.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "false";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+a(2)
diff --git a/test/octave.test/index/dfi-f/s-1.m b/test/octave.test/index/dfi-f/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-1.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = [];
+isempty (a)
diff --git a/test/octave.test/index/dfi-f/s-10.m b/test/octave.test/index/dfi-f/s-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-10.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(2,:)
diff --git a/test/octave.test/index/dfi-f/s-11.m b/test/octave.test/index/dfi-f/s-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-11.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(:,2)
diff --git a/test/octave.test/index/dfi-f/s-12.m b/test/octave.test/index/dfi-f/s-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-12.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(-1,:)
diff --git a/test/octave.test/index/dfi-f/s-13.m b/test/octave.test/index/dfi-f/s-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-13.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(:,-1)
diff --git a/test/octave.test/index/dfi-f/s-14.m b/test/octave.test/index/dfi-f/s-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-14.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([1,2,3])
diff --git a/test/octave.test/index/dfi-f/s-15.m b/test/octave.test/index/dfi-f/s-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-15.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([1;2;3])
diff --git a/test/octave.test/index/dfi-f/s-16.m b/test/octave.test/index/dfi-f/s-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-16.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([1,2;3,4])
diff --git a/test/octave.test/index/dfi-f/s-17.m b/test/octave.test/index/dfi-f/s-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-17.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([0,1])
diff --git a/test/octave.test/index/dfi-f/s-18.m b/test/octave.test/index/dfi-f/s-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-18.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([0;1])
diff --git a/test/octave.test/index/dfi-f/s-19.m b/test/octave.test/index/dfi-f/s-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-19.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([-1,0])
diff --git a/test/octave.test/index/dfi-f/s-2.m b/test/octave.test/index/dfi-f/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-2.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(1)
diff --git a/test/octave.test/index/dfi-f/s-20.m b/test/octave.test/index/dfi-f/s-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-20.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a([-1;0])
diff --git a/test/octave.test/index/dfi-f/s-3.m b/test/octave.test/index/dfi-f/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-3.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(:)
diff --git a/test/octave.test/index/dfi-f/s-4.m b/test/octave.test/index/dfi-f/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-4.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(:,:)
diff --git a/test/octave.test/index/dfi-f/s-5.m b/test/octave.test/index/dfi-f/s-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-5.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(1,:)
diff --git a/test/octave.test/index/dfi-f/s-6.m b/test/octave.test/index/dfi-f/s-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-6.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(:,1)
diff --git a/test/octave.test/index/dfi-f/s-7.m b/test/octave.test/index/dfi-f/s-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-7.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+isempty (a(0))
diff --git a/test/octave.test/index/dfi-f/s-8.m b/test/octave.test/index/dfi-f/s-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-8.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(-1)
diff --git a/test/octave.test/index/dfi-f/s-9.m b/test/octave.test/index/dfi-f/s-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/s-9.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "false";
+a = 1;
+a(2)
diff --git a/test/octave.test/index/dfi-f/v-1.m b/test/octave.test/index/dfi-f/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-1.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(1)
diff --git a/test/octave.test/index/dfi-f/v-10.m b/test/octave.test/index/dfi-f/v-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-10.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(0,1)
diff --git a/test/octave.test/index/dfi-f/v-11.m b/test/octave.test/index/dfi-f/v-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-11.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a(0,:))
diff --git a/test/octave.test/index/dfi-f/v-12.m b/test/octave.test/index/dfi-f/v-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-12.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(:,0)
diff --git a/test/octave.test/index/dfi-f/v-13.m b/test/octave.test/index/dfi-f/v-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-13.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a([]))
diff --git a/test/octave.test/index/dfi-f/v-14.m b/test/octave.test/index/dfi-f/v-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-14.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a([],:))
diff --git a/test/octave.test/index/dfi-f/v-15.m b/test/octave.test/index/dfi-f/v-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-15.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a(:,[]))
diff --git a/test/octave.test/index/dfi-f/v-2.m b/test/octave.test/index/dfi-f/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-2.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(2)
diff --git a/test/octave.test/index/dfi-f/v-3.m b/test/octave.test/index/dfi-f/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-3.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(:) == a)
diff --git a/test/octave.test/index/dfi-f/v-4.m b/test/octave.test/index/dfi-f/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-4.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(1,:) == a)
diff --git a/test/octave.test/index/dfi-f/v-5.m b/test/octave.test/index/dfi-f/v-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-5.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(:,3)
diff --git a/test/octave.test/index/dfi-f/v-6.m b/test/octave.test/index/dfi-f/v-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-6.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(:,:) == a)
diff --git a/test/octave.test/index/dfi-f/v-7.m b/test/octave.test/index/dfi-f/v-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-7.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a([0,1,1,0]) == mid_a)
diff --git a/test/octave.test/index/dfi-f/v-8.m b/test/octave.test/index/dfi-f/v-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-8.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(0)
diff --git a/test/octave.test/index/dfi-f/v-9.m b/test/octave.test/index/dfi-f/v-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-f/v-9.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "false";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(5)
diff --git a/test/octave.test/index/dfi-t/index.exp b/test/octave.test/index/dfi-t/index.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/index.exp
@@ -0,0 +1,163 @@
+# Tests with do_fortran_indexing == "true"
+
+# scalar tests
+
+set test index-s-1
+set prog_output "ans = 1"
+do_test s-1.m
+
+set test index-s-2
+set prog_output "ans = 1"
+do_test s-2.m
+
+set test index-s-3
+set prog_output "ans = 1"
+do_test s-3.m
+
+set test index-s-4
+set prog_output "ans = 1"
+do_test s-4.m
+
+set test index-s-5
+set prog_output "ans = 1"
+do_test s-5.m
+
+set test index-s-6
+set prog_output "ans = 1"
+do_test s-6.m
+
+set test index-s-7
+set prog_output "ans = 1"
+do_test s-7.m
+
+set test index-s-8
+set prog_output "error:.*"
+do_test s-8.m
+
+set test index-s-9
+set prog_output "error:.*"
+do_test s-9.m
+
+set test index-s-10
+set prog_output "error:.*"
+do_test s-10.m
+
+set test index-s-11
+set prog_output "error:.*"
+do_test s-11.m
+
+set test index-s-12
+set prog_output "error:.*"
+do_test s-12.m
+
+set test index-s-13
+set prog_output "error:.*"
+do_test s-13.m
+
+set test index-s-14
+set prog_output "error:.*"
+do_test s-14.m
+
+set test index-s-15
+set prog_output "error:.*"
+do_test s-15.m
+
+set test index-s-16
+set prog_output "error:.*"
+do_test s-16.m
+
+set test index-s-17
+set prog_output "error:.*"
+do_test s-17.m
+
+set test index-s-18
+set prog_output "error:.*"
+do_test s-18.m
+
+set test index-s-19
+set prog_output "error:.*"
+do_test s-19.m
+
+set test index-s-20
+set prog_output "error:.*"
+do_test s-20.m
+
+# vector tests
+
+set test index-v-1
+set prog_output "ans = 4"
+do_test v-1.m
+
+set test index-v-2
+set prog_output "ans = 3"
+do_test v-2.m
+
+set test index-v-3
+set prog_output "ans = 1"
+do_test v-3.m
+
+set test index-v-4
+set prog_output "ans = 1"
+do_test v-4.m
+
+set test index-v-5
+set prog_output "ans = 2"
+do_test v-5.m
+
+set test index-v-6
+set prog_output "ans = 1"
+do_test v-6.m
+
+set test index-v-7
+set prog_output "ans = 1"
+do_test v-7.m
+
+set test index-v-8
+set prog_output "error:.*"
+do_test v-8.m
+
+set test index-v-9
+set prog_output "error:.*"
+do_test v-9.m
+
+set test index-v-10
+set prog_output "error:.*"
+do_test v-10.m
+
+set test index-v-11
+set prog_output "ans = 1"
+do_test v-11.m
+
+set test index-v-12
+set prog_output "error:.*"
+do_test v-12.m
+
+set test index-v-13
+set prog_output "ans = 1"
+do_test v-13.m
+
+set test index-v-14
+set prog_output "ans = 1"
+do_test v-14.m
+
+set test index-v-15
+set prog_output "ans = 1"
+do_test v-15.m
+
+# matrix tests
+
+set test index-m-1
+set prog_output "ans = 1"
+do_test m-1.m
+
+set test index-m-2
+set prog_output "ans = 1"
+do_test m-2.m
+
+set test index-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test index-m-4
+set prog_output "ans = 3"
+do_test m-4.m
diff --git a/test/octave.test/index/dfi-t/m-1.m b/test/octave.test/index/dfi-t/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/m-1.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "true";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+all (all (a(:,:) == a))
diff --git a/test/octave.test/index/dfi-t/m-2.m b/test/octave.test/index/dfi-t/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/m-2.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "true";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+all (a(:) == a_fvec)
diff --git a/test/octave.test/index/dfi-t/m-3.m b/test/octave.test/index/dfi-t/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/m-3.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "true";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+a(0)
diff --git a/test/octave.test/index/dfi-t/m-4.m b/test/octave.test/index/dfi-t/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/m-4.m
@@ -0,0 +1,8 @@
+do_fortran_indexing = "true";
+a = [1,2;3,4];
+a_fvec = [1;3;2;4];
+a_col_1 = [1;3];
+a_col_2 = [2;4];
+a_row_1 = [1,2];
+a_row_2 = [3,4];
+a(2)
diff --git a/test/octave.test/index/dfi-t/s-1.m b/test/octave.test/index/dfi-t/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-1.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = [];
+isempty (a)
diff --git a/test/octave.test/index/dfi-t/s-10.m b/test/octave.test/index/dfi-t/s-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-10.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(2,:)
diff --git a/test/octave.test/index/dfi-t/s-11.m b/test/octave.test/index/dfi-t/s-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-11.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(:,2)
diff --git a/test/octave.test/index/dfi-t/s-12.m b/test/octave.test/index/dfi-t/s-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-12.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(-1,:)
diff --git a/test/octave.test/index/dfi-t/s-13.m b/test/octave.test/index/dfi-t/s-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-13.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(:,-1)
diff --git a/test/octave.test/index/dfi-t/s-14.m b/test/octave.test/index/dfi-t/s-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-14.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([1,2,3])
diff --git a/test/octave.test/index/dfi-t/s-15.m b/test/octave.test/index/dfi-t/s-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-15.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([1;2;3])
diff --git a/test/octave.test/index/dfi-t/s-16.m b/test/octave.test/index/dfi-t/s-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-16.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([1,2;3,4])
diff --git a/test/octave.test/index/dfi-t/s-17.m b/test/octave.test/index/dfi-t/s-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-17.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([0,1])
diff --git a/test/octave.test/index/dfi-t/s-18.m b/test/octave.test/index/dfi-t/s-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-18.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([0;1])
diff --git a/test/octave.test/index/dfi-t/s-19.m b/test/octave.test/index/dfi-t/s-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-19.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([-1,0])
diff --git a/test/octave.test/index/dfi-t/s-2.m b/test/octave.test/index/dfi-t/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-2.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(1)
diff --git a/test/octave.test/index/dfi-t/s-20.m b/test/octave.test/index/dfi-t/s-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-20.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a([-1;0])
diff --git a/test/octave.test/index/dfi-t/s-3.m b/test/octave.test/index/dfi-t/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-3.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(:)
diff --git a/test/octave.test/index/dfi-t/s-4.m b/test/octave.test/index/dfi-t/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-4.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(:,:)
diff --git a/test/octave.test/index/dfi-t/s-5.m b/test/octave.test/index/dfi-t/s-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-5.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(1,:)
diff --git a/test/octave.test/index/dfi-t/s-6.m b/test/octave.test/index/dfi-t/s-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-6.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(:,1)
diff --git a/test/octave.test/index/dfi-t/s-7.m b/test/octave.test/index/dfi-t/s-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-7.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+isempty (a(0))
diff --git a/test/octave.test/index/dfi-t/s-8.m b/test/octave.test/index/dfi-t/s-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-8.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(-1)
diff --git a/test/octave.test/index/dfi-t/s-9.m b/test/octave.test/index/dfi-t/s-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/s-9.m
@@ -0,0 +1,3 @@
+do_fortran_indexing = "true";
+a = 1;
+a(2)
diff --git a/test/octave.test/index/dfi-t/v-1.m b/test/octave.test/index/dfi-t/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-1.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(1)
diff --git a/test/octave.test/index/dfi-t/v-10.m b/test/octave.test/index/dfi-t/v-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-10.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(0,1)
diff --git a/test/octave.test/index/dfi-t/v-11.m b/test/octave.test/index/dfi-t/v-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-11.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a(0,:))
diff --git a/test/octave.test/index/dfi-t/v-12.m b/test/octave.test/index/dfi-t/v-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-12.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(:,0)
diff --git a/test/octave.test/index/dfi-t/v-13.m b/test/octave.test/index/dfi-t/v-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-13.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a([]))
diff --git a/test/octave.test/index/dfi-t/v-14.m b/test/octave.test/index/dfi-t/v-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-14.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a([],:))
diff --git a/test/octave.test/index/dfi-t/v-15.m b/test/octave.test/index/dfi-t/v-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-15.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+isempty (a(:,[]))
diff --git a/test/octave.test/index/dfi-t/v-2.m b/test/octave.test/index/dfi-t/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-2.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(2)
diff --git a/test/octave.test/index/dfi-t/v-3.m b/test/octave.test/index/dfi-t/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-3.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(:) == a_prime)
diff --git a/test/octave.test/index/dfi-t/v-4.m b/test/octave.test/index/dfi-t/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-4.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(1,:) == a)
diff --git a/test/octave.test/index/dfi-t/v-5.m b/test/octave.test/index/dfi-t/v-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-5.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(:,3)
diff --git a/test/octave.test/index/dfi-t/v-6.m b/test/octave.test/index/dfi-t/v-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-6.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a(:,:) == a)
diff --git a/test/octave.test/index/dfi-t/v-7.m b/test/octave.test/index/dfi-t/v-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-7.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+all (a([0,1,1,0]) == mid_a)
diff --git a/test/octave.test/index/dfi-t/v-8.m b/test/octave.test/index/dfi-t/v-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-8.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(0)
diff --git a/test/octave.test/index/dfi-t/v-9.m b/test/octave.test/index/dfi-t/v-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/index/dfi-t/v-9.m
@@ -0,0 +1,5 @@
+do_fortran_indexing = "true";
+a = [4,3,2,1];
+a_prime = [4;3;2;1];
+mid_a = [3,2];
+a(5)
diff --git a/test/octave.test/infnan/infnan-1.m b/test/octave.test/infnan/infnan-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-1.m
@@ -0,0 +1,2 @@
+a = Inf;
+finite (a)
diff --git a/test/octave.test/infnan/infnan-2.m b/test/octave.test/infnan/infnan-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-2.m
@@ -0,0 +1,2 @@
+a = Inf;
+isinf (a)
diff --git a/test/octave.test/infnan/infnan-3.m b/test/octave.test/infnan/infnan-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-3.m
@@ -0,0 +1,2 @@
+a = Inf;
+isnan (a)
diff --git a/test/octave.test/infnan/infnan-4.m b/test/octave.test/infnan/infnan-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-4.m
@@ -0,0 +1,2 @@
+b = NaN;
+finite (b)
diff --git a/test/octave.test/infnan/infnan-5.m b/test/octave.test/infnan/infnan-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-5.m
@@ -0,0 +1,2 @@
+b = NaN;
+isinf (b)
diff --git a/test/octave.test/infnan/infnan-6.m b/test/octave.test/infnan/infnan-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-6.m
@@ -0,0 +1,2 @@
+b = NaN;
+isnan (b)
diff --git a/test/octave.test/infnan/infnan-7.m b/test/octave.test/infnan/infnan-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-7.m
@@ -0,0 +1,2 @@
+c = rand ();
+finite (c)
diff --git a/test/octave.test/infnan/infnan-8.m b/test/octave.test/infnan/infnan-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-8.m
@@ -0,0 +1,2 @@
+c = rand ();
+isinf (c)
diff --git a/test/octave.test/infnan/infnan-9.m b/test/octave.test/infnan/infnan-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan-9.m
@@ -0,0 +1,2 @@
+c = rand ();
+isnan (c)
diff --git a/test/octave.test/infnan/infnan.exp b/test/octave.test/infnan/infnan.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/infnan/infnan.exp
@@ -0,0 +1,35 @@
+set test infnan-1
+set prog_output "ans = 0"
+do_test infnan-1.m
+
+set test infnan-2
+set prog_output "ans = 1"
+do_test infnan-2.m
+
+set test infnan-3
+set prog_output "ans = 0"
+do_test infnan-3.m
+
+set test infnan-4
+set prog_output "ans = 0"
+do_test infnan-4.m
+
+set test infnan-5
+set prog_output "ans = 0"
+do_test infnan-5.m
+
+set test infnan-6
+set prog_output "ans = 1"
+do_test infnan-6.m
+
+set test infnan-7
+set prog_output "ans = 1"
+do_test infnan-7.m
+
+set test infnan-8
+set prog_output "ans = 0"
+do_test infnan-8.m
+
+set test infnan-9
+set prog_output "ans = 0"
+do_test infnan-9.m
diff --git a/test/octave.test/npsol/npsol-1.m b/test/octave.test/npsol/npsol-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/npsol/npsol-1.m
@@ -0,0 +1,43 @@
+# A test from Reklaitis, Ravindran and Ragsdell
+
+tol = 1.0e-5;
+
+x_opt = [1; 2];
+
+phi_opt = 5;
+
+function phi = f (x)
+  phi = 6*x(1)/x(2) + x(2)/x(1)/x(1);
+end
+
+function nlc = g (x)
+  nlc = x(1)*x(2) - 2;
+end
+
+c = [1, 1];
+
+x0 = [2; 2];
+
+[x, phi, inform] = npsol (x0, 'f', 1, c, 100, 0, 'g', 0);
+
+info_bad = (inform != 0 && inform != 1 && inform != 6);
+solution_bad = sum (abs (x - x_opt) > tol);
+value_bad = sum (abs (phi - phi_opt) > tol);
+
+if (info_bad)
+  printf ("info bad\n");
+else
+  printf ("info good\n");
+endif
+
+if (solution_bad)
+  printf ("solution bad\n");
+else
+  printf ("solution good\n");
+endif
+
+if (value_bad)
+  printf ("value bad\n");
+else
+  printf ("value good\n");
+endif
diff --git a/test/octave.test/npsol/npsol-2.m b/test/octave.test/npsol/npsol-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/npsol/npsol-2.m
@@ -0,0 +1,37 @@
+# Rosenbrock's famouns function:
+
+tol = 1.0e-5;
+
+x_opt = [1; 1];
+
+phi_opt = 0.0;
+
+function obj = phi (x)
+  obj = 100 * (x(2) - x(1)^2)^2 + (1 - x(1))^2;
+end
+
+x0 = [-1.2; 1];
+
+[x, phi, inform] = npsol (x0, 'phi');
+
+info_bad = (inform != 0 && inform != 1 && inform != 6);
+solution_bad = sum (abs (x - x_opt) > tol);
+value_bad = sum (abs (phi - phi_opt) > tol);
+
+if (info_bad)
+  printf ("info bad\n");
+else
+  printf ("info good\n");
+endif
+
+if (solution_bad)
+  printf ("solution bad\n");
+else
+  printf ("solution good\n");
+endif
+
+if (value_bad)
+  printf ("value bad\n");
+else
+  printf ("value good\n");
+endif
diff --git a/test/octave.test/npsol/npsol.exp b/test/octave.test/npsol/npsol.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/npsol/npsol.exp
@@ -0,0 +1,7 @@
+set test npsol-1
+set prog_output "info good\nsolution good\nvalue good"
+do_test npsol-1.m
+
+set test npsol-2
+set prog_output "info good\nsolution good\nvalue good"
+do_test npsol-2.m
diff --git a/test/octave.test/prefer/prefer-1.m b/test/octave.test/prefer/prefer-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-1.m
@@ -0,0 +1,2 @@
+whitespace_in_literal_matrix = "ignore";
+m = [3 2];
diff --git a/test/octave.test/prefer/prefer-10.m b/test/octave.test/prefer/prefer-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-10.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "false";
+m = [3,2];
+[m(1)]
diff --git a/test/octave.test/prefer/prefer-11.m b/test/octave.test/prefer/prefer-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-11.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "false";
+m = [3,2];
+all ([m,(1)] == [3,2,1])
diff --git a/test/octave.test/prefer/prefer-12.m b/test/octave.test/prefer/prefer-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-12.m
@@ -0,0 +1,2 @@
+implicit_str_to_num_ok = "true";
+"d" + 0
diff --git a/test/octave.test/prefer/prefer-13.m b/test/octave.test/prefer/prefer-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-13.m
@@ -0,0 +1,2 @@
+implicit_str_to_num_ok = "false";
+"d" + 0
diff --git a/test/octave.test/prefer/prefer-14.m b/test/octave.test/prefer/prefer-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-14.m
@@ -0,0 +1,2 @@
+ok_to_lose_imaginary_part = "true";
+eye (1+i)
diff --git a/test/octave.test/prefer/prefer-15.m b/test/octave.test/prefer/prefer-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-15.m
@@ -0,0 +1,2 @@
+ok_to_lose_imaginary_part = "false";
+eye (1+i)
diff --git a/test/octave.test/prefer/prefer-16.m b/test/octave.test/prefer/prefer-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-16.m
@@ -0,0 +1,2 @@
+ok_to_lose_imaginary_part = "warn";
+eye (1+i)
diff --git a/test/octave.test/prefer/prefer-17.m b/test/octave.test/prefer/prefer-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-17.m
@@ -0,0 +1,3 @@
+resize_on_range_error = "true";
+prefer_column_vectors = "true";
+clear a; a(1) = 1; a(2) = 2; all (a == [1;2])
diff --git a/test/octave.test/prefer/prefer-18.m b/test/octave.test/prefer/prefer-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-18.m
@@ -0,0 +1,2 @@
+prefer_column_vectors = "false";
+clear a; a(1) = 1; a(2) = 2; all (a == [1,2])
diff --git a/test/octave.test/prefer/prefer-19.m b/test/octave.test/prefer/prefer-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-19.m
@@ -0,0 +1,2 @@
+print_answer_id_name = "false";
+a = 1
diff --git a/test/octave.test/prefer/prefer-2.m b/test/octave.test/prefer/prefer-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-2.m
@@ -0,0 +1,4 @@
+whitespace_in_literal_matrix = "ignore";
+m = [3,
+ 2];
+all (m == (3:-1:2))
diff --git a/test/octave.test/prefer/prefer-20.m b/test/octave.test/prefer/prefer-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-20.m
@@ -0,0 +1,2 @@
+print_answer_id_name = "true";
+a = 1
diff --git a/test/octave.test/prefer/prefer-21.m b/test/octave.test/prefer/prefer-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-21.m
@@ -0,0 +1,2 @@
+print_empty_dimensions = "false";
+ones (3, 0)
diff --git a/test/octave.test/prefer/prefer-22.m b/test/octave.test/prefer/prefer-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-22.m
@@ -0,0 +1,2 @@
+print_empty_dimensions = "true";
+ones (3, 0)
diff --git a/test/octave.test/prefer/prefer-23.m b/test/octave.test/prefer/prefer-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-23.m
@@ -0,0 +1,2 @@
+propagate_empty_matrices = "false";
+inv ([]) == []
diff --git a/test/octave.test/prefer/prefer-24.m b/test/octave.test/prefer/prefer-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-24.m
@@ -0,0 +1,2 @@
+propagate_empty_matrices = "true";
+inv ([]) == []
diff --git a/test/octave.test/prefer/prefer-25.m b/test/octave.test/prefer/prefer-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-25.m
@@ -0,0 +1,3 @@
+return_last_computed_value = "true";
+function f () 1; end
+f
diff --git a/test/octave.test/prefer/prefer-26.m b/test/octave.test/prefer/prefer-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-26.m
@@ -0,0 +1,3 @@
+return_last_computed_value = "false";
+function f () 1; end
+f
diff --git a/test/octave.test/prefer/prefer-27.m b/test/octave.test/prefer/prefer-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-27.m
@@ -0,0 +1,3 @@
+save_precision = 1;
+x = pi;
+save - x
diff --git a/test/octave.test/prefer/prefer-28.m b/test/octave.test/prefer/prefer-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-28.m
@@ -0,0 +1,3 @@
+save_precision = 5;
+x = pi
+save - x
diff --git a/test/octave.test/prefer/prefer-29.m b/test/octave.test/prefer/prefer-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-29.m
@@ -0,0 +1,3 @@
+silent_functions = "false";
+function f () 1, end
+f
diff --git a/test/octave.test/prefer/prefer-3.m b/test/octave.test/prefer/prefer-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-3.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "ignore";
+m = [3,2];
+[m   (1)]
diff --git a/test/octave.test/prefer/prefer-30.m b/test/octave.test/prefer/prefer-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-30.m
@@ -0,0 +1,3 @@
+silent_functions = "true";
+function f () 1, end
+f
diff --git a/test/octave.test/prefer/prefer-31.m b/test/octave.test/prefer/prefer-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-31.m
@@ -0,0 +1,2 @@
+treat_neg_dim_as_zero = "false";
+eye (-1) == []
diff --git a/test/octave.test/prefer/prefer-32.m b/test/octave.test/prefer/prefer-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-32.m
@@ -0,0 +1,2 @@
+treat_neg_dim_as_zero = "warn";
+eye (-1) == []
diff --git a/test/octave.test/prefer/prefer-33.m b/test/octave.test/prefer/prefer-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-33.m
@@ -0,0 +1,2 @@
+treat_neg_dim_as_zero = "true";
+eye (-1) == []
diff --git a/test/octave.test/prefer/prefer-34.m b/test/octave.test/prefer/prefer-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-34.m
@@ -0,0 +1,2 @@
+warn_assign_as_truth_value = "false";
+if (x = 1) 1; endif
diff --git a/test/octave.test/prefer/prefer-35.m b/test/octave.test/prefer/prefer-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-35.m
@@ -0,0 +1,2 @@
+warn_assign_as_truth_value = "true";
+if (x = 1) 1; endif
diff --git a/test/octave.test/prefer/prefer-36.m b/test/octave.test/prefer/prefer-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-36.m
@@ -0,0 +1,2 @@
+warn_comma_in_global_decl = "false";
+global z, y
diff --git a/test/octave.test/prefer/prefer-37.m b/test/octave.test/prefer/prefer-37.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-37.m
@@ -0,0 +1,2 @@
+warn_comma_in_global_decl = "true";
+global z, y
diff --git a/test/octave.test/prefer/prefer-38.m b/test/octave.test/prefer/prefer-38.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-38.m
@@ -0,0 +1,2 @@
+warn_divide_by_zero = "false";
+isinf (1/0)
diff --git a/test/octave.test/prefer/prefer-39.m b/test/octave.test/prefer/prefer-39.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-39.m
@@ -0,0 +1,2 @@
+warn_divide_by_zero = "true";
+isinf (1/0)
diff --git a/test/octave.test/prefer/prefer-4.m b/test/octave.test/prefer/prefer-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-4.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "ignore";
+m = [3,2];
+[m(1)]
diff --git a/test/octave.test/prefer/prefer-5.m b/test/octave.test/prefer/prefer-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-5.m
@@ -0,0 +1,2 @@
+whitespace_in_literal_matrix = "traditional";
+all ([3 2] == (3:-1:2))
diff --git a/test/octave.test/prefer/prefer-6.m b/test/octave.test/prefer/prefer-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-6.m
@@ -0,0 +1,2 @@
+whitespace_in_literal_matrix = "traditional";
+all ([3, 2] == (3:-1:2))
diff --git a/test/octave.test/prefer/prefer-7.m b/test/octave.test/prefer/prefer-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-7.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "traditional";
+m = [3,2];
+all ([m (1)] == [3,2,1])
diff --git a/test/octave.test/prefer/prefer-8.m b/test/octave.test/prefer/prefer-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-8.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "traditional";
+m = [3,2];
+[m(1)]
diff --git a/test/octave.test/prefer/prefer-9.m b/test/octave.test/prefer/prefer-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer-9.m
@@ -0,0 +1,3 @@
+whitespace_in_literal_matrix = "false";
+m = [3,2];
+[m   (1)]
diff --git a/test/octave.test/prefer/prefer.exp b/test/octave.test/prefer/prefer.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/prefer/prefer.exp
@@ -0,0 +1,185 @@
+# whitespace_in_literal_matrix
+
+set test whitespace-in-literal-matrix-1
+set prog_output "parse error.*"
+do_test prefer-1.m
+
+set test whitespace-in-literal-matrix-2
+set prog_output "ans = 1"
+do_test prefer-2.m
+
+set test whitespace-in-literal-matrix-3
+set prog_output "ans = 3"
+do_test prefer-3.m
+
+set test whitespace-in-literal-matrix-4
+set prog_output "ans = 3"
+do_test prefer-4.m
+
+set test whitespace-in-literal-matrix-5
+set prog_output "ans = 1"
+do_test prefer-5.m
+
+set test whitespace-in-literal-matrix-6
+set prog_output "ans = 1"
+do_test prefer-6.m
+
+set test whitespace-in-literal-matrix-7
+set prog_output "ans = 1"
+do_test prefer-7.m
+
+set test whitespace-in-literal-matrix-8
+set prog_output "ans = 3"
+do_test prefer-8.m
+
+set test whitespace-in-literal-matrix-9
+set prog_output "ans = 3"
+do_test prefer-9.m
+
+set test whitespace-in-literal-matrix-10
+set prog_output "ans = 3"
+do_test prefer-10.m
+
+set test whitespace-in-literal-matrix-11
+set prog_output "ans = 1"
+do_test prefer-11.m
+
+# implicit_str_to_num_ok
+
+set test implicit-str-to-num-ok-1
+set prog_output "ans = 100"
+do_test prefer-12.m
+
+set test implicit-str-to-num-ok-2
+set prog_output "error:.*"
+do_test prefer-13.m
+
+# ok_to_lose_imaginary_part
+
+set test ok-to-lose-imaginary-part-1
+set prog_output "ans = 1"
+do_test prefer-14.m
+
+set test ok-to-lose-imaginary-part-2
+set prog_output "error:.*"
+do_test prefer-15.m
+
+set test ok-to-lose-imaginary-part-3
+set prog_output "warning:.*"
+do_test prefer-16.m
+
+# prefer_column_vectors
+
+set test prefer-column-vectors-1
+set prog_output "ans = 1"
+do_test prefer-17.m
+
+set test prefer-column-vectors-2
+set prog_output "ans = 1"
+do_test prefer-18.m
+
+# print_answer_id_name
+
+set test print-answer-id-name-1
+set prog_output "1"
+do_test prefer-19.m
+
+set test print-answer-id-name-2
+set prog_output "a = 1"
+do_test prefer-20.m
+
+# print_empty_dimensions
+
+set test print-empty-dimensions-1
+set prog_output "[]"
+do_test prefer-21.m
+
+set test print-empty-dimensions-2
+set prog_output "[](3x0)"
+do_test prefer-22.m
+
+# propagate_empty_matrices
+
+# This should maybe test more functions...
+
+set test propagate-empty-matrices-1
+set prog_output "error:.*"
+do_test prefer-23.m
+
+set test propagate-empty-matrices-2
+set prog_output "ans = 1"
+do_test prefer-24.m
+
+# return_last_computed_value
+
+set test return-last-computed-value-1
+set prog_output "ans = 1"
+do_test prefer-25.m
+
+set test return-last-computed-value-2
+set prog_output ""
+do_test prefer-26.m
+
+# save_precision
+
+set test save-precision-1
+set prog_output "3"
+do_test prefer-27.m
+
+set test save-precision-2
+set prog_output "3.1416"
+do_test prefer-28.m
+
+# silent_functions
+
+set test silent-functions-1
+set prog_output "ans = 1"
+do_test prefer-29.m
+
+set test silent-functions-2
+set prog_output ""
+do_test prefer-30.m
+
+# treat_neg_dim_as_zero
+
+set test treat-neg-dim-as-zero-1
+set prog_output "error:.*"
+do_test prefer-31.m
+
+set test treat-neg-dim-as-zero-2
+set prog_output "warning:.*"
+do_test prefer-32.m
+
+set test treat-neg-dim-as-zero-3
+set prog_output "ans = 1"
+do_test prefer-33.m
+
+# warn_assign_as_truth_value
+
+set test warn-assign-as-truth-value-1
+set prog_output ""
+do_test prefer-34.m
+
+set test warn-assign-as-truth-value-2
+set prog_output "warning:.*"
+do_test prefer-35.m
+
+# warn_comma_in_global_decl
+
+set test warn-comma-in-global-decl-1
+set prog_output ""
+do_test prefer-36.m
+
+set test warn-comma-in-global-decl-2
+set prog_output "warning:.*"
+do_test prefer-37.m
+
+# warn_divide_by_zero
+
+set test warn-divide-by-zero-1
+set prog_output "ans = 1"
+do_test prefer-38.m
+
+set test warn-divide-by-zero-2
+set prog_output "warning:.*"
+do_test prefer-39.m
diff --git a/test/octave.test/recursion/recursion-1.m b/test/octave.test/recursion/recursion-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/recursion/recursion-1.m
@@ -0,0 +1,10 @@
+1;
+function y = f (x)
+  if (x == 1)
+    y = x;
+    return;
+  else
+    y = x * f (x-1);
+  endif
+endfunction
+f (5)
diff --git a/test/octave.test/recursion/recursion-2.m b/test/octave.test/recursion/recursion-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/recursion/recursion-2.m
@@ -0,0 +1,10 @@
+1;
+function y = f (x)
+  if (x == 1)
+    y = x;
+    return;
+  else
+    y = f (x-1) * x;
+  endif
+endfunction
+f (5)
diff --git a/test/octave.test/recursion/recursion.exp b/test/octave.test/recursion/recursion.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/recursion/recursion.exp
@@ -0,0 +1,7 @@
+set test recursion-1
+set prog_output "ans = 120"
+do_test recursion-1.m
+
+set test recursion-2
+set prog_output "ans = 120"
+do_test recursion-2.m
diff --git a/test/octave.test/return/return-1.m b/test/octave.test/return/return-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/return/return-1.m
@@ -0,0 +1,6 @@
+function f ()
+  1
+  return
+  2
+end
+f
diff --git a/test/octave.test/return/return-2.m b/test/octave.test/return/return-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/return/return-2.m
@@ -0,0 +1,1 @@
+return
diff --git a/test/octave.test/return/return.exp b/test/octave.test/return/return.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/return/return.exp
@@ -0,0 +1,7 @@
+set test return-1
+set prog_output "ans = 1"
+do_test return-1.m
+
+set test return-2
+set prog_output "parse error.*"
+do_test return-2.m
diff --git a/test/octave.test/str-esc/str-esc-1.m b/test/octave.test/str-esc/str-esc-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-1.m
@@ -0,0 +1,4 @@
+x = 7;
+if (strcmp ("\a", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-10.m b/test/octave.test/str-esc/str-esc-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-10.m
@@ -0,0 +1,4 @@
+x = 34;
+if (strcmp ("\"", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-11.m b/test/octave.test/str-esc/str-esc-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-11.m
@@ -0,0 +1,4 @@
+x = 120;
+if (strcmp ("\x", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-12.m b/test/octave.test/str-esc/str-esc-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-12.m
@@ -0,0 +1,4 @@
+x = [7, 8, 12, 10, 13, 9, 11, 92, 39, 34];
+if (strcmp ("\a\b\f\n\r\t\v\\\'\"", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-2.m b/test/octave.test/str-esc/str-esc-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-2.m
@@ -0,0 +1,4 @@
+x = 8;
+if (strcmp ("\b", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-3.m b/test/octave.test/str-esc/str-esc-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-3.m
@@ -0,0 +1,4 @@
+x = 12;
+if (strcmp ("\f", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-4.m b/test/octave.test/str-esc/str-esc-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-4.m
@@ -0,0 +1,4 @@
+x = 10;
+if (strcmp ("\n", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-5.m b/test/octave.test/str-esc/str-esc-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-5.m
@@ -0,0 +1,4 @@
+x = 13;
+if (strcmp ("\r", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-6.m b/test/octave.test/str-esc/str-esc-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-6.m
@@ -0,0 +1,4 @@
+x = 9;
+if (strcmp ("\t", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-7.m b/test/octave.test/str-esc/str-esc-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-7.m
@@ -0,0 +1,4 @@
+x = 11;
+if (strcmp ("\v", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-8.m b/test/octave.test/str-esc/str-esc-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-8.m
@@ -0,0 +1,4 @@
+x = 92;
+if (strcmp ("\\", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc-9.m b/test/octave.test/str-esc/str-esc-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc-9.m
@@ -0,0 +1,4 @@
+x = 39;
+if (strcmp ("\'", setstr (x)))
+  printf ("ok\n");
+endif
diff --git a/test/octave.test/str-esc/str-esc.exp b/test/octave.test/str-esc/str-esc.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/str-esc/str-esc.exp
@@ -0,0 +1,47 @@
+set test str-esc-1
+set prog_output "ok"
+do_test str-esc-1.m
+
+set test str-esc-2
+set prog_output "ok"
+do_test str-esc-2.m
+
+set test str-esc-3
+set prog_output "ok"
+do_test str-esc-3.m
+
+set test str-esc-4
+set prog_output "ok"
+do_test str-esc-4.m
+
+set test str-esc-5
+set prog_output "ok"
+do_test str-esc-5.m
+
+set test str-esc-6
+set prog_output "ok"
+do_test str-esc-6.m
+
+set test str-esc-7
+set prog_output "ok"
+do_test str-esc-7.m
+
+set test str-esc-8
+set prog_output "ok"
+do_test str-esc-8.m
+
+set test str-esc-9
+set prog_output "ok"
+do_test str-esc-9.m
+
+set test str-esc-10
+set prog_output "ok"
+do_test str-esc-10.m
+
+set test str-esc-11
+set prog_output ".*unrecognized escape sequence.*"
+do_test str-esc-11.m
+
+set test str-esc-12
+set prog_output "ok"
+do_test str-esc-12.m
diff --git a/test/octave.test/transpose/transpose-1.m b/test/octave.test/transpose/transpose-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/transpose/transpose-1.m
@@ -0,0 +1,2 @@
+scalar = 2;
+scalar'
diff --git a/test/octave.test/transpose/transpose-2.m b/test/octave.test/transpose/transpose-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/transpose/transpose-2.m
@@ -0,0 +1,2 @@
+range = 1:4;
+range'
diff --git a/test/octave.test/transpose/transpose-3.m b/test/octave.test/transpose/transpose-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/transpose/transpose-3.m
@@ -0,0 +1,2 @@
+vector = [1;2;3;4];
+vector'
diff --git a/test/octave.test/transpose/transpose-4.m b/test/octave.test/transpose/transpose-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/transpose/transpose-4.m
@@ -0,0 +1,2 @@
+matrix = [1,2;3,4];
+matrix'
diff --git a/test/octave.test/transpose/transpose.exp b/test/octave.test/transpose/transpose.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/transpose/transpose.exp
@@ -0,0 +1,15 @@
+set test transpose-1
+set prog_output "ans = 2"
+do_test transpose-1.m
+
+set test transpose-2
+set prog_output "ans = *\n\n *1\n *2\n *3\n *4"
+do_test transpose-2.m
+
+set test transpose-3
+set prog_output "ans = *\n\n *1 *2 *3 *4"
+do_test transpose-3.m
+
+set test transpose-4
+set prog_output "ans = *\n\n *1 *3\n *2 *4"
+do_test transpose-4.m
diff --git a/test/octave.test/unwind/unwind-1.m b/test/octave.test/unwind/unwind-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/unwind/unwind-1.m
@@ -0,0 +1,14 @@
+global g = -1;
+function f (x)
+  global g;
+  save_g = g;
+  unwind_protect
+    g = 0
+    [1,2;x];
+    g = 1
+  unwind_protect_cleanup
+    g = save_g;
+  end_unwind_protect
+endfunction
+f ([3,4])
+g
diff --git a/test/octave.test/unwind/unwind-2.m b/test/octave.test/unwind/unwind-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/unwind/unwind-2.m
@@ -0,0 +1,14 @@
+global g = -1;
+function f (x)
+  global g;
+  save_g = g;
+  unwind_protect
+    g = 0
+    [1,2;x];
+    g = 1
+  unwind_protect_cleanup
+    g = save_g;
+  end_unwind_protect
+endfunction
+f (3)
+g
diff --git a/test/octave.test/unwind/unwind.exp b/test/octave.test/unwind/unwind.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/unwind/unwind.exp
@@ -0,0 +1,7 @@
+set test unwind-1
+set prog_output "g = 0\n.*g = 1\n.*g = -1"
+do_test unwind-1.m
+
+set test unwind-2
+set prog_output "g = 0\n.*g = -1"
+do_test  unwind-2.m
\ No newline at end of file
diff --git a/test/octave.test/while/while-1.m b/test/octave.test/while/while-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while-1.m
@@ -0,0 +1,5 @@
+i = 0;
+while (eye (2))
+  i++;
+  printf ("%d\n", i);
+endwhile
diff --git a/test/octave.test/while/while-2.m b/test/octave.test/while/while-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while-2.m
@@ -0,0 +1,5 @@
+i = 5;
+while (--i)
+  printf ("%d", i);
+endwhile
+printf ("\n");
diff --git a/test/octave.test/while/while-3.m b/test/octave.test/while/while-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while-3.m
@@ -0,0 +1,6 @@
+i = 5;
+while (i)
+  i--;
+  printf ("%d", i);
+endwhile
+printf ("\n");
diff --git a/test/octave.test/while/while-4.m b/test/octave.test/while/while-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while-4.m
@@ -0,0 +1,8 @@
+i = 0;
+while (i++ < 20)
+  if (i > 2)
+    break;
+  endif
+  printf ("%d", i);
+endwhile;
+printf ("\n");
diff --git a/test/octave.test/while/while-5.m b/test/octave.test/while/while-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while-5.m
@@ -0,0 +1,8 @@
+i = 0;
+while (++i < 5)
+  if (i < 3)
+    continue;
+  endif
+  printf ("%d", i);
+endwhile
+printf ("\n");
diff --git a/test/octave.test/while/while.exp b/test/octave.test/while/while.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/while/while.exp
@@ -0,0 +1,19 @@
+set test while-1
+set prog_output "^$"
+do_test while-1.m
+
+set test while-2
+set prog_output "4321"
+do_test while-2.m
+
+set test while-3
+set prog_output "4321"
+do_test while-3.m
+
+set test while-4
+set prog_output "12"
+do_test while-4.m
+
+set test while-5
+set prog_output "34"
+do_test while-5.m
diff --git a/test/octave.test/zero-one/fff/m-1.m b/test/octave.test/zero-one/fff/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,0,0,0])
diff --git a/test/octave.test/zero-one/fff/m-10.m b/test/octave.test/zero-one/fff/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/fff/m-11.m b/test/octave.test/zero-one/fff/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/fff/m-12.m b/test/octave.test/zero-one/fff/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/fff/m-13.m b/test/octave.test/zero-one/fff/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/fff/m-14.m b/test/octave.test/zero-one/fff/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/fff/m-15.m b/test/octave.test/zero-one/fff/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/fff/m-16.m b/test/octave.test/zero-one/fff/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/fff/m-17.m b/test/octave.test/zero-one/fff/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/fff/m-18.m b/test/octave.test/zero-one/fff/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/fff/m-19.m b/test/octave.test/zero-one/fff/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/fff/m-2.m b/test/octave.test/zero-one/fff/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([1,1,1,1])
diff --git a/test/octave.test/zero-one/fff/m-20.m b/test/octave.test/zero-one/fff/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/fff/m-21.m b/test/octave.test/zero-one/fff/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/fff/m-22.m b/test/octave.test/zero-one/fff/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/fff/m-23.m b/test/octave.test/zero-one/fff/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/fff/m-24.m b/test/octave.test/zero-one/fff/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/fff/m-25.m b/test/octave.test/zero-one/fff/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/fff/m-26.m b/test/octave.test/zero-one/fff/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,9;7,7]))
diff --git a/test/octave.test/zero-one/fff/m-27.m b/test/octave.test/zero-one/fff/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/fff/m-28.m b/test/octave.test/zero-one/fff/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/fff/m-29.m b/test/octave.test/zero-one/fff/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/fff/m-3.m b/test/octave.test/zero-one/fff/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1,1,0])
diff --git a/test/octave.test/zero-one/fff/m-30.m b/test/octave.test/zero-one/fff/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;8])
diff --git a/test/octave.test/zero-one/fff/m-31.m b/test/octave.test/zero-one/fff/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/fff/m-32.m b/test/octave.test/zero-one/fff/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;8])
diff --git a/test/octave.test/zero-one/fff/m-33.m b/test/octave.test/zero-one/fff/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/fff/m-34.m b/test/octave.test/zero-one/fff/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;9,8]))
diff --git a/test/octave.test/zero-one/fff/m-35.m b/test/octave.test/zero-one/fff/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;9])
diff --git a/test/octave.test/zero-one/fff/m-36.m b/test/octave.test/zero-one/fff/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,9;9,9]))
diff --git a/test/octave.test/zero-one/fff/m-4.m b/test/octave.test/zero-one/fff/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/fff/m-5.m b/test/octave.test/zero-one/fff/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/fff/m-6.m b/test/octave.test/zero-one/fff/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/fff/m-7.m b/test/octave.test/zero-one/fff/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/fff/m-8.m b/test/octave.test/zero-one/fff/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/fff/m-9.m b/test/octave.test/zero-one/fff/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/fff/s-1.m b/test/octave.test/zero-one/fff/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/fff/s-2.m b/test/octave.test/zero-one/fff/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/fff/s-3.m b/test/octave.test/zero-one/fff/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/fff/s-4.m b/test/octave.test/zero-one/fff/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+all (a([1,1]) == [2,2])
diff --git a/test/octave.test/zero-one/fff/v-1.m b/test/octave.test/zero-one/fff/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/fff/v-2.m b/test/octave.test/zero-one/fff/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,9,9,9])
diff --git a/test/octave.test/zero-one/fff/v-3.m b/test/octave.test/zero-one/fff/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/fff/v-4.m b/test/octave.test/zero-one/fff/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/fff/zero-one.exp b/test/octave.test/zero-one/fff/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fff/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "false"
+# prefer_column_vectors    == "false"
+# do_fortran_indexing      == "false"
+
+# scalar tests
+
+set test zero-one-fff-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-fff-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-fff-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-fff-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-fff-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-fff-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-fff-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-fff-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-fff-m-1
+set prog_output "error:.*"
+do_test m-1.m
+
+set test zero-one-fff-m-2
+set prog_output "error:.*"
+do_test m-2.m
+
+set test zero-one-fff-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test zero-one-fff-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-fff-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-fff-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-fff-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-fff-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-fff-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-fff-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-fff-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-fff-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-fff-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-fff-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-fff-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-fff-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-fff-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-fff-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-fff-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-fff-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-fff-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-fff-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-fff-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-fff-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-fff-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-fff-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-fff-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-fff-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-fff-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-fff-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-fff-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-fff-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-fff-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-fff-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-fff-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-fff-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/fft/m-1.m b/test/octave.test/zero-one/fft/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/fft/m-10.m b/test/octave.test/zero-one/fft/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/fft/m-11.m b/test/octave.test/zero-one/fft/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/fft/m-12.m b/test/octave.test/zero-one/fft/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/fft/m-13.m b/test/octave.test/zero-one/fft/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/fft/m-14.m b/test/octave.test/zero-one/fft/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/fft/m-15.m b/test/octave.test/zero-one/fft/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/fft/m-16.m b/test/octave.test/zero-one/fft/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/fft/m-17.m b/test/octave.test/zero-one/fft/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/fft/m-18.m b/test/octave.test/zero-one/fft/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/fft/m-19.m b/test/octave.test/zero-one/fft/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/fft/m-2.m b/test/octave.test/zero-one/fft/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1,1,1]) == [9;9;9;9])
diff --git a/test/octave.test/zero-one/fft/m-20.m b/test/octave.test/zero-one/fft/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/fft/m-21.m b/test/octave.test/zero-one/fft/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/fft/m-22.m b/test/octave.test/zero-one/fft/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/fft/m-23.m b/test/octave.test/zero-one/fft/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/fft/m-24.m b/test/octave.test/zero-one/fft/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/fft/m-25.m b/test/octave.test/zero-one/fft/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/fft/m-26.m b/test/octave.test/zero-one/fft/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,9;7,7]))
diff --git a/test/octave.test/zero-one/fft/m-27.m b/test/octave.test/zero-one/fft/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/fft/m-28.m b/test/octave.test/zero-one/fft/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/fft/m-29.m b/test/octave.test/zero-one/fft/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/fft/m-3.m b/test/octave.test/zero-one/fft/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1,1,0]) == [7;8])
diff --git a/test/octave.test/zero-one/fft/m-30.m b/test/octave.test/zero-one/fft/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;8])
diff --git a/test/octave.test/zero-one/fft/m-31.m b/test/octave.test/zero-one/fft/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/fft/m-32.m b/test/octave.test/zero-one/fft/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;8])
diff --git a/test/octave.test/zero-one/fft/m-33.m b/test/octave.test/zero-one/fft/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/fft/m-34.m b/test/octave.test/zero-one/fft/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;9,8]))
diff --git a/test/octave.test/zero-one/fft/m-35.m b/test/octave.test/zero-one/fft/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;9])
diff --git a/test/octave.test/zero-one/fft/m-36.m b/test/octave.test/zero-one/fft/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,9;9,9]))
diff --git a/test/octave.test/zero-one/fft/m-4.m b/test/octave.test/zero-one/fft/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/fft/m-5.m b/test/octave.test/zero-one/fft/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/fft/m-6.m b/test/octave.test/zero-one/fft/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/fft/m-7.m b/test/octave.test/zero-one/fft/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/fft/m-8.m b/test/octave.test/zero-one/fft/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/fft/m-9.m b/test/octave.test/zero-one/fft/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/fft/s-1.m b/test/octave.test/zero-one/fft/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/fft/s-2.m b/test/octave.test/zero-one/fft/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/fft/s-3.m b/test/octave.test/zero-one/fft/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/fft/s-4.m b/test/octave.test/zero-one/fft/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+all (a([1,1]) == [2,2])
diff --git a/test/octave.test/zero-one/fft/v-1.m b/test/octave.test/zero-one/fft/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/fft/v-2.m b/test/octave.test/zero-one/fft/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,9,9,9])
diff --git a/test/octave.test/zero-one/fft/v-3.m b/test/octave.test/zero-one/fft/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/fft/v-4.m b/test/octave.test/zero-one/fft/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/fft/zero-one.exp b/test/octave.test/zero-one/fft/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/fft/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "false"
+# prefer_column_vectors    == "false"
+# do_fortran_indexing      == "true"
+
+# scalar tests
+
+set test zero-one-fft-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-fft-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-fft-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-fft-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-fft-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-fft-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-fft-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-fft-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-fft-m-1
+set prog_output "ans = *1"
+do_test m-1.m
+
+set test zero-one-fft-m-2
+set prog_output "ans = *1"
+do_test m-2.m
+
+set test zero-one-fft-m-3
+set prog_output "ans = *1"
+do_test m-3.m
+
+set test zero-one-fft-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-fft-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-fft-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-fft-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-fft-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-fft-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-fft-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-fft-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-fft-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-fft-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-fft-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-fft-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-fft-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-fft-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-fft-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-fft-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-fft-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-fft-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-fft-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-fft-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-fft-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-fft-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-fft-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-fft-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-fft-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-fft-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-fft-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-fft-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-fft-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-fft-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-fft-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-fft-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-fft-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/ftf/m-1.m b/test/octave.test/zero-one/ftf/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,0,0,0])
diff --git a/test/octave.test/zero-one/ftf/m-10.m b/test/octave.test/zero-one/ftf/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/ftf/m-11.m b/test/octave.test/zero-one/ftf/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ftf/m-12.m b/test/octave.test/zero-one/ftf/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ftf/m-13.m b/test/octave.test/zero-one/ftf/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/ftf/m-14.m b/test/octave.test/zero-one/ftf/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/ftf/m-15.m b/test/octave.test/zero-one/ftf/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ftf/m-16.m b/test/octave.test/zero-one/ftf/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/ftf/m-17.m b/test/octave.test/zero-one/ftf/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ftf/m-18.m b/test/octave.test/zero-one/ftf/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/ftf/m-19.m b/test/octave.test/zero-one/ftf/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/ftf/m-2.m b/test/octave.test/zero-one/ftf/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([1,1,1,1])
diff --git a/test/octave.test/zero-one/ftf/m-20.m b/test/octave.test/zero-one/ftf/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/ftf/m-21.m b/test/octave.test/zero-one/ftf/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ftf/m-22.m b/test/octave.test/zero-one/ftf/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ftf/m-23.m b/test/octave.test/zero-one/ftf/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/ftf/m-24.m b/test/octave.test/zero-one/ftf/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ftf/m-25.m b/test/octave.test/zero-one/ftf/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ftf/m-26.m b/test/octave.test/zero-one/ftf/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,9;7,7]))
diff --git a/test/octave.test/zero-one/ftf/m-27.m b/test/octave.test/zero-one/ftf/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/ftf/m-28.m b/test/octave.test/zero-one/ftf/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/ftf/m-29.m b/test/octave.test/zero-one/ftf/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ftf/m-3.m b/test/octave.test/zero-one/ftf/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1,1,0])
diff --git a/test/octave.test/zero-one/ftf/m-30.m b/test/octave.test/zero-one/ftf/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;8])
diff --git a/test/octave.test/zero-one/ftf/m-31.m b/test/octave.test/zero-one/ftf/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/ftf/m-32.m b/test/octave.test/zero-one/ftf/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;8])
diff --git a/test/octave.test/zero-one/ftf/m-33.m b/test/octave.test/zero-one/ftf/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/ftf/m-34.m b/test/octave.test/zero-one/ftf/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;9,8]))
diff --git a/test/octave.test/zero-one/ftf/m-35.m b/test/octave.test/zero-one/ftf/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;9])
diff --git a/test/octave.test/zero-one/ftf/m-36.m b/test/octave.test/zero-one/ftf/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,9;9,9]))
diff --git a/test/octave.test/zero-one/ftf/m-4.m b/test/octave.test/zero-one/ftf/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/ftf/m-5.m b/test/octave.test/zero-one/ftf/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ftf/m-6.m b/test/octave.test/zero-one/ftf/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/ftf/m-7.m b/test/octave.test/zero-one/ftf/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ftf/m-8.m b/test/octave.test/zero-one/ftf/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/ftf/m-9.m b/test/octave.test/zero-one/ftf/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/ftf/s-1.m b/test/octave.test/zero-one/ftf/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/ftf/s-2.m b/test/octave.test/zero-one/ftf/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ftf/s-3.m b/test/octave.test/zero-one/ftf/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ftf/s-4.m b/test/octave.test/zero-one/ftf/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+all (a([1,1]) == [2;2])
diff --git a/test/octave.test/zero-one/ftf/v-1.m b/test/octave.test/zero-one/ftf/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ftf/v-2.m b/test/octave.test/zero-one/ftf/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,9,9,9])
diff --git a/test/octave.test/zero-one/ftf/v-3.m b/test/octave.test/zero-one/ftf/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/ftf/v-4.m b/test/octave.test/zero-one/ftf/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ftf/zero-one.exp b/test/octave.test/zero-one/ftf/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftf/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "false"
+# prefer_column_vectors    == "true"
+# do_fortran_indexing      == "false"
+
+# scalar tests
+
+set test zero-one-ftf-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-ftf-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-ftf-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-ftf-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-ftf-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-ftf-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-ftf-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-ftf-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-ftf-m-1
+set prog_output "error:.*"
+do_test m-1.m
+
+set test zero-one-ftf-m-2
+set prog_output "error:.*"
+do_test m-2.m
+
+set test zero-one-ftf-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test zero-one-ftf-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-ftf-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-ftf-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-ftf-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-ftf-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-ftf-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-ftf-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-ftf-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-ftf-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-ftf-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-ftf-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-ftf-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-ftf-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-ftf-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-ftf-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-ftf-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-ftf-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-ftf-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-ftf-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-ftf-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-ftf-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-ftf-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-ftf-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-ftf-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-ftf-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-ftf-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-ftf-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-ftf-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-ftf-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-ftf-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-ftf-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-ftf-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-ftf-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/ftt/m-1.m b/test/octave.test/zero-one/ftt/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ftt/m-10.m b/test/octave.test/zero-one/ftt/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/ftt/m-11.m b/test/octave.test/zero-one/ftt/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ftt/m-12.m b/test/octave.test/zero-one/ftt/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ftt/m-13.m b/test/octave.test/zero-one/ftt/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/ftt/m-14.m b/test/octave.test/zero-one/ftt/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/ftt/m-15.m b/test/octave.test/zero-one/ftt/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ftt/m-16.m b/test/octave.test/zero-one/ftt/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/ftt/m-17.m b/test/octave.test/zero-one/ftt/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ftt/m-18.m b/test/octave.test/zero-one/ftt/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/ftt/m-19.m b/test/octave.test/zero-one/ftt/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/ftt/m-2.m b/test/octave.test/zero-one/ftt/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1,1,1]) == [9;9;9;9])
diff --git a/test/octave.test/zero-one/ftt/m-20.m b/test/octave.test/zero-one/ftt/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,7])
diff --git a/test/octave.test/zero-one/ftt/m-21.m b/test/octave.test/zero-one/ftt/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ftt/m-22.m b/test/octave.test/zero-one/ftt/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ftt/m-23.m b/test/octave.test/zero-one/ftt/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,7;9,9]))
diff --git a/test/octave.test/zero-one/ftt/m-24.m b/test/octave.test/zero-one/ftt/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ftt/m-25.m b/test/octave.test/zero-one/ftt/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ftt/m-26.m b/test/octave.test/zero-one/ftt/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,9;7,7]))
diff --git a/test/octave.test/zero-one/ftt/m-27.m b/test/octave.test/zero-one/ftt/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/ftt/m-28.m b/test/octave.test/zero-one/ftt/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/ftt/m-29.m b/test/octave.test/zero-one/ftt/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ftt/m-3.m b/test/octave.test/zero-one/ftt/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1,1,0]) == [7;8])
diff --git a/test/octave.test/zero-one/ftt/m-30.m b/test/octave.test/zero-one/ftt/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;8])
diff --git a/test/octave.test/zero-one/ftt/m-31.m b/test/octave.test/zero-one/ftt/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/ftt/m-32.m b/test/octave.test/zero-one/ftt/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;8])
diff --git a/test/octave.test/zero-one/ftt/m-33.m b/test/octave.test/zero-one/ftt/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;8,9]))
diff --git a/test/octave.test/zero-one/ftt/m-34.m b/test/octave.test/zero-one/ftt/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;9,8]))
diff --git a/test/octave.test/zero-one/ftt/m-35.m b/test/octave.test/zero-one/ftt/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;9])
diff --git a/test/octave.test/zero-one/ftt/m-36.m b/test/octave.test/zero-one/ftt/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,9;9,9]))
diff --git a/test/octave.test/zero-one/ftt/m-4.m b/test/octave.test/zero-one/ftt/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/ftt/m-5.m b/test/octave.test/zero-one/ftt/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ftt/m-6.m b/test/octave.test/zero-one/ftt/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/ftt/m-7.m b/test/octave.test/zero-one/ftt/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ftt/m-8.m b/test/octave.test/zero-one/ftt/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/ftt/m-9.m b/test/octave.test/zero-one/ftt/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/ftt/s-1.m b/test/octave.test/zero-one/ftt/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/ftt/s-2.m b/test/octave.test/zero-one/ftt/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ftt/s-3.m b/test/octave.test/zero-one/ftt/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ftt/s-4.m b/test/octave.test/zero-one/ftt/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+all (a([1,1]) == [2;2])
diff --git a/test/octave.test/zero-one/ftt/v-1.m b/test/octave.test/zero-one/ftt/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ftt/v-2.m b/test/octave.test/zero-one/ftt/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,9,9,9])
diff --git a/test/octave.test/zero-one/ftt/v-3.m b/test/octave.test/zero-one/ftt/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/ftt/v-4.m b/test/octave.test/zero-one/ftt/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "false";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ftt/zero-one.exp b/test/octave.test/zero-one/ftt/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ftt/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "false"
+# prefer_column_vectors    == "true"
+# do_fortran_indexing      == "true"
+
+# scalar tests
+
+set test zero-one-ftt-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-ftt-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-ftt-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-ftt-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-ftt-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-ftt-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-ftt-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-ftt-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-ftt-m-1
+set prog_output "ans = *1"
+do_test m-1.m
+
+set test zero-one-ftt-m-2
+set prog_output "ans = *1"
+do_test m-2.m
+
+set test zero-one-ftt-m-3
+set prog_output "ans = *1"
+do_test m-3.m
+
+set test zero-one-ftt-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-ftt-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-ftt-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-ftt-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-ftt-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-ftt-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-ftt-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-ftt-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-ftt-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-ftt-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-ftt-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-ftt-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-ftt-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-ftt-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-ftt-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-ftt-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-ftt-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-ftt-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-ftt-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-ftt-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-ftt-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-ftt-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-ftt-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-ftt-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-ftt-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-ftt-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-ftt-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-ftt-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-ftt-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-ftt-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-ftt-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-ftt-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-ftt-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/tff/m-1.m b/test/octave.test/zero-one/tff/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,0,0,0])
diff --git a/test/octave.test/zero-one/tff/m-10.m b/test/octave.test/zero-one/tff/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/tff/m-11.m b/test/octave.test/zero-one/tff/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/tff/m-12.m b/test/octave.test/zero-one/tff/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/tff/m-13.m b/test/octave.test/zero-one/tff/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/tff/m-14.m b/test/octave.test/zero-one/tff/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/tff/m-15.m b/test/octave.test/zero-one/tff/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/tff/m-16.m b/test/octave.test/zero-one/tff/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/tff/m-17.m b/test/octave.test/zero-one/tff/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/tff/m-18.m b/test/octave.test/zero-one/tff/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/tff/m-19.m b/test/octave.test/zero-one/tff/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/tff/m-2.m b/test/octave.test/zero-one/tff/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([1,1,1,1])
diff --git a/test/octave.test/zero-one/tff/m-20.m b/test/octave.test/zero-one/tff/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/tff/m-21.m b/test/octave.test/zero-one/tff/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/tff/m-22.m b/test/octave.test/zero-one/tff/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/tff/m-23.m b/test/octave.test/zero-one/tff/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/tff/m-24.m b/test/octave.test/zero-one/tff/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/tff/m-25.m b/test/octave.test/zero-one/tff/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/tff/m-26.m b/test/octave.test/zero-one/tff/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tff/m-27.m b/test/octave.test/zero-one/tff/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/tff/m-28.m b/test/octave.test/zero-one/tff/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/tff/m-29.m b/test/octave.test/zero-one/tff/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,8])
diff --git a/test/octave.test/zero-one/tff/m-3.m b/test/octave.test/zero-one/tff/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1,1,0])
diff --git a/test/octave.test/zero-one/tff/m-30.m b/test/octave.test/zero-one/tff/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;6])
diff --git a/test/octave.test/zero-one/tff/m-31.m b/test/octave.test/zero-one/tff/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/tff/m-32.m b/test/octave.test/zero-one/tff/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/tff/m-33.m b/test/octave.test/zero-one/tff/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/tff/m-34.m b/test/octave.test/zero-one/tff/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tff/m-35.m b/test/octave.test/zero-one/tff/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;7])
diff --git a/test/octave.test/zero-one/tff/m-36.m b/test/octave.test/zero-one/tff/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tff/m-4.m b/test/octave.test/zero-one/tff/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/tff/m-5.m b/test/octave.test/zero-one/tff/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/tff/m-6.m b/test/octave.test/zero-one/tff/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/tff/m-7.m b/test/octave.test/zero-one/tff/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/tff/m-8.m b/test/octave.test/zero-one/tff/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/tff/m-9.m b/test/octave.test/zero-one/tff/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/tff/s-1.m b/test/octave.test/zero-one/tff/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/tff/s-2.m b/test/octave.test/zero-one/tff/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/tff/s-3.m b/test/octave.test/zero-one/tff/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/tff/s-4.m b/test/octave.test/zero-one/tff/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = 2;
+all (a([1,1]) == [2,2])
diff --git a/test/octave.test/zero-one/tff/v-1.m b/test/octave.test/zero-one/tff/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/tff/v-2.m b/test/octave.test/zero-one/tff/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,8,7,6])
diff --git a/test/octave.test/zero-one/tff/v-3.m b/test/octave.test/zero-one/tff/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/tff/v-4.m b/test/octave.test/zero-one/tff/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/tff/zero-one.exp b/test/octave.test/zero-one/tff/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tff/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "true"
+# prefer_column_vectors    == "false"
+# do_fortran_indexing      == "false"
+
+# scalar tests
+
+set test zero-one-tff-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-tff-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-tff-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-tff-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-tff-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-tff-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-tff-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-tff-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-tff-m-1
+set prog_output "error:.*"
+do_test m-1.m
+
+set test zero-one-tff-m-2
+set prog_output "error:.*"
+do_test m-2.m
+
+set test zero-one-tff-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test zero-one-tff-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-tff-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-tff-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-tff-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-tff-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-tff-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-tff-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-tff-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-tff-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-tff-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-tff-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-tff-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-tff-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-tff-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-tff-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-tff-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-tff-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-tff-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-tff-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-tff-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-tff-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-tff-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-tff-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-tff-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-tff-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-tff-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-tff-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-tff-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-tff-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-tff-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-tff-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-tff-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-tff-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/tft/m-1.m b/test/octave.test/zero-one/tft/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/tft/m-10.m b/test/octave.test/zero-one/tft/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/tft/m-11.m b/test/octave.test/zero-one/tft/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/tft/m-12.m b/test/octave.test/zero-one/tft/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/tft/m-13.m b/test/octave.test/zero-one/tft/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/tft/m-14.m b/test/octave.test/zero-one/tft/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/tft/m-15.m b/test/octave.test/zero-one/tft/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/tft/m-16.m b/test/octave.test/zero-one/tft/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/tft/m-17.m b/test/octave.test/zero-one/tft/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/tft/m-18.m b/test/octave.test/zero-one/tft/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/tft/m-19.m b/test/octave.test/zero-one/tft/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/tft/m-2.m b/test/octave.test/zero-one/tft/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1,1,1]) == [9;7;8;6])
diff --git a/test/octave.test/zero-one/tft/m-20.m b/test/octave.test/zero-one/tft/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/tft/m-21.m b/test/octave.test/zero-one/tft/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/tft/m-22.m b/test/octave.test/zero-one/tft/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/tft/m-23.m b/test/octave.test/zero-one/tft/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/tft/m-24.m b/test/octave.test/zero-one/tft/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/tft/m-25.m b/test/octave.test/zero-one/tft/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/tft/m-26.m b/test/octave.test/zero-one/tft/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tft/m-27.m b/test/octave.test/zero-one/tft/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/tft/m-28.m b/test/octave.test/zero-one/tft/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/tft/m-29.m b/test/octave.test/zero-one/tft/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,8])
diff --git a/test/octave.test/zero-one/tft/m-3.m b/test/octave.test/zero-one/tft/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1,1,0]) == [7;8])
diff --git a/test/octave.test/zero-one/tft/m-30.m b/test/octave.test/zero-one/tft/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;6])
diff --git a/test/octave.test/zero-one/tft/m-31.m b/test/octave.test/zero-one/tft/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/tft/m-32.m b/test/octave.test/zero-one/tft/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/tft/m-33.m b/test/octave.test/zero-one/tft/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/tft/m-34.m b/test/octave.test/zero-one/tft/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tft/m-35.m b/test/octave.test/zero-one/tft/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;7])
diff --git a/test/octave.test/zero-one/tft/m-36.m b/test/octave.test/zero-one/tft/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/tft/m-4.m b/test/octave.test/zero-one/tft/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/tft/m-5.m b/test/octave.test/zero-one/tft/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/tft/m-6.m b/test/octave.test/zero-one/tft/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/tft/m-7.m b/test/octave.test/zero-one/tft/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/tft/m-8.m b/test/octave.test/zero-one/tft/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/tft/m-9.m b/test/octave.test/zero-one/tft/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/tft/s-1.m b/test/octave.test/zero-one/tft/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/tft/s-2.m b/test/octave.test/zero-one/tft/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/tft/s-3.m b/test/octave.test/zero-one/tft/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/tft/s-4.m b/test/octave.test/zero-one/tft/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = 2;
+all (a([1,1]) == [2,2])
diff --git a/test/octave.test/zero-one/tft/v-1.m b/test/octave.test/zero-one/tft/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/tft/v-2.m b/test/octave.test/zero-one/tft/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,8,7,6])
diff --git a/test/octave.test/zero-one/tft/v-3.m b/test/octave.test/zero-one/tft/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/tft/v-4.m b/test/octave.test/zero-one/tft/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "false";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/tft/zero-one.exp b/test/octave.test/zero-one/tft/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/tft/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "true"
+# prefer_column_vectors    == "false"
+# do_fortran_indexing      == "true"
+
+# scalar tests
+
+set test zero-one-tft-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-tft-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-tft-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-tft-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-tft-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-tft-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-tft-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-tft-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-tft-m-1
+set prog_output "ans = *1"
+do_test m-1.m
+
+set test zero-one-tft-m-2
+set prog_output "ans = *1"
+do_test m-2.m
+
+set test zero-one-tft-m-3
+set prog_output "ans = *1"
+do_test m-3.m
+
+set test zero-one-tft-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-tft-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-tft-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-tft-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-tft-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-tft-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-tft-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-tft-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-tft-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-tft-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-tft-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-tft-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-tft-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-tft-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-tft-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-tft-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-tft-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-tft-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-tft-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-tft-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-tft-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-tft-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-tft-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-tft-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-tft-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-tft-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-tft-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-tft-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-tft-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-tft-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-tft-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-tft-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-tft-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/ttf/m-1.m b/test/octave.test/zero-one/ttf/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,0,0,0])
diff --git a/test/octave.test/zero-one/ttf/m-10.m b/test/octave.test/zero-one/ttf/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/ttf/m-11.m b/test/octave.test/zero-one/ttf/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ttf/m-12.m b/test/octave.test/zero-one/ttf/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ttf/m-13.m b/test/octave.test/zero-one/ttf/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/ttf/m-14.m b/test/octave.test/zero-one/ttf/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/ttf/m-15.m b/test/octave.test/zero-one/ttf/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ttf/m-16.m b/test/octave.test/zero-one/ttf/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/ttf/m-17.m b/test/octave.test/zero-one/ttf/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ttf/m-18.m b/test/octave.test/zero-one/ttf/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/ttf/m-19.m b/test/octave.test/zero-one/ttf/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/ttf/m-2.m b/test/octave.test/zero-one/ttf/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([1,1,1,1])
diff --git a/test/octave.test/zero-one/ttf/m-20.m b/test/octave.test/zero-one/ttf/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/ttf/m-21.m b/test/octave.test/zero-one/ttf/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ttf/m-22.m b/test/octave.test/zero-one/ttf/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ttf/m-23.m b/test/octave.test/zero-one/ttf/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/ttf/m-24.m b/test/octave.test/zero-one/ttf/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ttf/m-25.m b/test/octave.test/zero-one/ttf/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ttf/m-26.m b/test/octave.test/zero-one/ttf/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttf/m-27.m b/test/octave.test/zero-one/ttf/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/ttf/m-28.m b/test/octave.test/zero-one/ttf/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/ttf/m-29.m b/test/octave.test/zero-one/ttf/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,8])
diff --git a/test/octave.test/zero-one/ttf/m-3.m b/test/octave.test/zero-one/ttf/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a([0,1,1,0])
diff --git a/test/octave.test/zero-one/ttf/m-30.m b/test/octave.test/zero-one/ttf/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ttf/m-31.m b/test/octave.test/zero-one/ttf/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/ttf/m-32.m b/test/octave.test/zero-one/ttf/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ttf/m-33.m b/test/octave.test/zero-one/ttf/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/ttf/m-34.m b/test/octave.test/zero-one/ttf/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttf/m-35.m b/test/octave.test/zero-one/ttf/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;7])
diff --git a/test/octave.test/zero-one/ttf/m-36.m b/test/octave.test/zero-one/ttf/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttf/m-4.m b/test/octave.test/zero-one/ttf/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/ttf/m-5.m b/test/octave.test/zero-one/ttf/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ttf/m-6.m b/test/octave.test/zero-one/ttf/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/ttf/m-7.m b/test/octave.test/zero-one/ttf/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ttf/m-8.m b/test/octave.test/zero-one/ttf/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/ttf/m-9.m b/test/octave.test/zero-one/ttf/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/ttf/s-1.m b/test/octave.test/zero-one/ttf/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/ttf/s-2.m b/test/octave.test/zero-one/ttf/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ttf/s-3.m b/test/octave.test/zero-one/ttf/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ttf/s-4.m b/test/octave.test/zero-one/ttf/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = 2;
+all (a([1,1]) == [2;2])
diff --git a/test/octave.test/zero-one/ttf/v-1.m b/test/octave.test/zero-one/ttf/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ttf/v-2.m b/test/octave.test/zero-one/ttf/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,8,7,6])
diff --git a/test/octave.test/zero-one/ttf/v-3.m b/test/octave.test/zero-one/ttf/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/ttf/v-4.m b/test/octave.test/zero-one/ttf/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "false";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ttf/zero-one.exp b/test/octave.test/zero-one/ttf/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttf/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "true"
+# prefer_column_vectors    == "true"
+# do_fortran_indexing      == "false"
+
+# scalar tests
+
+set test zero-one-ttf-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-ttf-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-ttf-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-ttf-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-ttf-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-ttf-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-ttf-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-ttf-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-ttf-m-1
+set prog_output "error:.*"
+do_test m-1.m
+
+set test zero-one-ttf-m-2
+set prog_output "error:.*"
+do_test m-2.m
+
+set test zero-one-ttf-m-3
+set prog_output "error:.*"
+do_test m-3.m
+
+set test zero-one-ttf-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-ttf-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-ttf-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-ttf-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-ttf-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-ttf-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-ttf-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-ttf-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-ttf-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-ttf-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-ttf-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-ttf-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-ttf-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-ttf-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-ttf-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-ttf-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-ttf-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-ttf-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-ttf-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-ttf-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-ttf-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-ttf-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-ttf-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-ttf-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-ttf-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-ttf-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-ttf-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-ttf-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-ttf-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-ttf-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-ttf-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-ttf-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-ttf-m-36
+set prog_output "ans = *1"
+do_test m-36.m
diff --git a/test/octave.test/zero-one/ttt/m-1.m b/test/octave.test/zero-one/ttt/m-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ttt/m-10.m b/test/octave.test/zero-one/ttt/m-10.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-10.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/ttt/m-11.m b/test/octave.test/zero-one/ttt/m-11.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-11.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ttt/m-12.m b/test/octave.test/zero-one/ttt/m-12.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-12.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(2:-1:1,[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ttt/m-13.m b/test/octave.test/zero-one/ttt/m-13.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-13.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(2:-1:1,[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/ttt/m-14.m b/test/octave.test/zero-one/ttt/m-14.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-14.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],0:1) == 6
diff --git a/test/octave.test/zero-one/ttt/m-15.m b/test/octave.test/zero-one/ttt/m-15.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-15.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ttt/m-16.m b/test/octave.test/zero-one/ttt/m-16.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-16.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],[0,1]) == 6
diff --git a/test/octave.test/zero-one/ttt/m-17.m b/test/octave.test/zero-one/ttt/m-17.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-17.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ttt/m-18.m b/test/octave.test/zero-one/ttt/m-18.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-18.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],:) == [7,6])
diff --git a/test/octave.test/zero-one/ttt/m-19.m b/test/octave.test/zero-one/ttt/m-19.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-19.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a([0,1],1) == 7
diff --git a/test/octave.test/zero-one/ttt/m-2.m b/test/octave.test/zero-one/ttt/m-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1,1,1]) == [9;7;8;6])
diff --git a/test/octave.test/zero-one/ttt/m-20.m b/test/octave.test/zero-one/ttt/m-20.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-20.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1],[1,1]) == [7,6])
diff --git a/test/octave.test/zero-one/ttt/m-21.m b/test/octave.test/zero-one/ttt/m-21.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-21.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],0:1) == [6;8])
diff --git a/test/octave.test/zero-one/ttt/m-22.m b/test/octave.test/zero-one/ttt/m-22.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-22.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([2,1],[0,1]) == [6;8])
diff --git a/test/octave.test/zero-one/ttt/m-23.m b/test/octave.test/zero-one/ttt/m-23.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-23.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([2,1],[1,1]) == [7,6;9,8]))
diff --git a/test/octave.test/zero-one/ttt/m-24.m b/test/octave.test/zero-one/ttt/m-24.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-24.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ttt/m-25.m b/test/octave.test/zero-one/ttt/m-25.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-25.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(:,[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ttt/m-26.m b/test/octave.test/zero-one/ttt/m-26.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-26.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a(:,[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttt/m-27.m b/test/octave.test/zero-one/ttt/m-27.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-27.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,0:1) == 8
diff --git a/test/octave.test/zero-one/ttt/m-28.m b/test/octave.test/zero-one/ttt/m-28.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-28.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(1,[0,1]) == 8
diff --git a/test/octave.test/zero-one/ttt/m-29.m b/test/octave.test/zero-one/ttt/m-29.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-29.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(1,[1,1]) == [9,8])
diff --git a/test/octave.test/zero-one/ttt/m-3.m b/test/octave.test/zero-one/ttt/m-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([0,1,1,0]) == [7;8])
diff --git a/test/octave.test/zero-one/ttt/m-30.m b/test/octave.test/zero-one/ttt/m-30.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-30.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],0:1) == [8;6])
diff --git a/test/octave.test/zero-one/ttt/m-31.m b/test/octave.test/zero-one/ttt/m-31.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-31.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],2:-1:1) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/ttt/m-32.m b/test/octave.test/zero-one/ttt/m-32.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-32.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],[0,1]) == [8;6])
diff --git a/test/octave.test/zero-one/ttt/m-33.m b/test/octave.test/zero-one/ttt/m-33.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-33.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[2,1]) == [8,9;6,7]))
diff --git a/test/octave.test/zero-one/ttt/m-34.m b/test/octave.test/zero-one/ttt/m-34.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-34.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],:) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttt/m-35.m b/test/octave.test/zero-one/ttt/m-35.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-35.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a([1,1],1) == [9;7])
diff --git a/test/octave.test/zero-one/ttt/m-36.m b/test/octave.test/zero-one/ttt/m-36.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-36.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (all (a([1,1],[1,1]) == [9,8;7,6]))
diff --git a/test/octave.test/zero-one/ttt/m-4.m b/test/octave.test/zero-one/ttt/m-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,0:1) == 6
diff --git a/test/octave.test/zero-one/ttt/m-5.m b/test/octave.test/zero-one/ttt/m-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-5.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,2:-1:1) == [6,7])
diff --git a/test/octave.test/zero-one/ttt/m-6.m b/test/octave.test/zero-one/ttt/m-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-6.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,[0,1]) == 6
diff --git a/test/octave.test/zero-one/ttt/m-7.m b/test/octave.test/zero-one/ttt/m-7.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-7.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,[2,1]) == [6,7])
diff --git a/test/octave.test/zero-one/ttt/m-8.m b/test/octave.test/zero-one/ttt/m-8.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-8.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+all (a(0:1,:) == [7,6])
diff --git a/test/octave.test/zero-one/ttt/m-9.m b/test/octave.test/zero-one/ttt/m-9.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/m-9.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8;7,6];
+a(0:1,1) == 7
diff --git a/test/octave.test/zero-one/ttt/s-1.m b/test/octave.test/zero-one/ttt/s-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/s-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [];
+a(0)
diff --git a/test/octave.test/zero-one/ttt/s-2.m b/test/octave.test/zero-one/ttt/s-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/s-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ttt/s-3.m b/test/octave.test/zero-one/ttt/s-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/s-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+a(1) == 2
diff --git a/test/octave.test/zero-one/ttt/s-4.m b/test/octave.test/zero-one/ttt/s-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/s-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = 2;
+all (a([1,1]) == [2;2])
diff --git a/test/octave.test/zero-one/ttt/v-1.m b/test/octave.test/zero-one/ttt/v-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/v-1.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+isempty (a([0,0,0,0]))
diff --git a/test/octave.test/zero-one/ttt/v-2.m b/test/octave.test/zero-one/ttt/v-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/v-2.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1,1,1]) == [9,8,7,6])
diff --git a/test/octave.test/zero-one/ttt/v-3.m b/test/octave.test/zero-one/ttt/v-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/v-3.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([0,1,1,0]) == [8,7])
diff --git a/test/octave.test/zero-one/ttt/v-4.m b/test/octave.test/zero-one/ttt/v-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/v-4.m
@@ -0,0 +1,5 @@
+prefer_zero_one_indexing = "true";
+prefer_column_vectors = "true";
+do_fortran_indexing = "true";
+a = [9,8,7,6];
+all (a([1,1]) == [9,9])
diff --git a/test/octave.test/zero-one/ttt/zero-one.exp b/test/octave.test/zero-one/ttt/zero-one.exp
new file mode 100644
--- /dev/null
+++ b/test/octave.test/zero-one/ttt/zero-one.exp
@@ -0,0 +1,187 @@
+# Tests with:
+#
+# prefer_zero_one_indexing == "true"
+# prefer_column_vectors    == "true"
+# do_fortran_indexing      == "true"
+
+# scalar tests
+
+set test zero-one-ttt-s-1
+set prog_output "error:.*"
+do_test s-1.m
+
+set test zero-one-ttt-s-2
+set prog_output "ans = *1"
+do_test s-2.m
+
+set test zero-one-ttt-s-3
+set prog_output "ans = *1"
+do_test s-3.m
+
+set test zero-one-ttt-s-4
+set prog_output "ans = *1"
+do_test s-4.m
+
+# vector tests
+
+set test zero-one-ttt-v-1
+set prog_output "ans = *1"
+do_test v-1.m
+
+set test zero-one-ttt-v-2
+set prog_output "ans = *1"
+do_test v-2.m
+
+set test zero-one-ttt-v-3
+set prog_output "ans = *1"
+do_test v-3.m
+
+set test zero-one-ttt-v-4
+set prog_output "ans = *1"
+do_test v-4.m
+
+# matrix tests
+
+set test zero-one-ttt-m-1
+set prog_output "ans = *1"
+do_test m-1.m
+
+set test zero-one-ttt-m-2
+set prog_output "ans = *1"
+do_test m-2.m
+
+set test zero-one-ttt-m-3
+set prog_output "ans = *1"
+do_test m-3.m
+
+set test zero-one-ttt-m-4
+set prog_output "ans = *1"
+do_test m-4.m
+
+set test zero-one-ttt-m-5
+set prog_output "ans = *1"
+do_test m-5.m
+
+set test zero-one-ttt-m-6
+set prog_output "ans = *1"
+do_test m-6.m
+
+set test zero-one-ttt-m-7
+set prog_output "ans = *1"
+do_test m-7.m
+
+set test zero-one-ttt-m-8
+set prog_output "ans = *1"
+do_test m-8.m
+
+set test zero-one-ttt-m-9
+set prog_output "ans = *1"
+do_test m-9.m
+
+set test zero-one-ttt-m-10
+set prog_output "ans = *1"
+do_test m-10.m
+
+set test zero-one-ttt-m-11
+set prog_output "ans = *1"
+do_test m-11.m
+
+set test zero-one-ttt-m-12
+set prog_output "ans = *1"
+do_test m-12.m
+
+set test zero-one-ttt-m-13
+set prog_output "ans = *1"
+do_test m-13.m
+
+set test zero-one-ttt-m-14
+set prog_output "ans = *1"
+do_test m-14.m
+
+set test zero-one-ttt-m-15
+set prog_output "ans = *1"
+do_test m-15.m
+
+set test zero-one-ttt-m-16
+set prog_output "ans = *1"
+do_test m-16.m
+
+set test zero-one-ttt-m-17
+set prog_output "ans = *1"
+do_test m-17.m
+
+set test zero-one-ttt-m-18
+set prog_output "ans = *1"
+do_test m-18.m
+
+set test zero-one-ttt-m-19
+set prog_output "ans = *1"
+do_test m-19.m
+
+set test zero-one-ttt-m-20
+set prog_output "ans = *1"
+do_test m-20.m
+
+set test zero-one-ttt-m-21
+set prog_output "ans = *1"
+do_test m-21.m
+
+set test zero-one-ttt-m-22
+set prog_output "ans = *1"
+do_test m-22.m
+
+set test zero-one-ttt-m-23
+set prog_output "ans = *1"
+do_test m-23.m
+
+set test zero-one-ttt-m-24
+set prog_output "ans = *1"
+do_test m-24.m
+
+set test zero-one-ttt-m-25
+set prog_output "ans = *1"
+do_test m-25.m
+
+set test zero-one-ttt-m-26
+set prog_output "ans = *1"
+do_test m-26.m
+
+set test zero-one-ttt-m-27
+set prog_output "ans = *1"
+do_test m-27.m
+
+set test zero-one-ttt-m-28
+set prog_output "ans = *1"
+do_test m-28.m
+
+set test zero-one-ttt-m-29
+set prog_output "ans = *1"
+do_test m-29.m
+
+set test zero-one-ttt-m-30
+set prog_output "ans = *1"
+do_test m-30.m
+
+set test zero-one-ttt-m-31
+set prog_output "ans = *1"
+do_test m-31.m
+
+set test zero-one-ttt-m-32
+set prog_output "ans = *1"
+do_test m-32.m
+
+set test zero-one-ttt-m-33
+set prog_output "ans = *1"
+do_test m-33.m
+
+set test zero-one-ttt-m-34
+set prog_output "ans = *1"
+do_test m-34.m
+
+set test zero-one-ttt-m-35
+set prog_output "ans = *1"
+do_test m-35.m
+
+set test zero-one-ttt-m-36
+set prog_output "ans = *1"
+do_test m-36.m
