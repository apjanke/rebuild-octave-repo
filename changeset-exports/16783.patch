# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1371694306 14400
#      Wed Jun 19 22:11:46 2013 -0400
# Node ID 0bf1d559b3214eb77f55bf383c836583e2714517
# Parent  dd7ab7df2f29d8a4487c9b00bb296693b842ba08
always set at_beginning_of_statement when recognizing keywords (bug #38758)

* lex.ll (octave_base_lexer::is_keyword_token): Always set
at_beginning_of_statement if a keyword is recognized.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -1894,16 +1894,19 @@ octave_base_lexer::is_keyword_token (con
   int c = current_input_column;
 
   int len = s.length ();
 
   const octave_kw *kw = octave_kw_hash::in_word_set (s.c_str (), len);
 
   if (kw)
     {
+      // May be reset to true for some token types.
+      at_beginning_of_statement = false;
+
       token *tok_val = 0;
 
       switch (kw->kw_id)
         {
         case break_kw:
         case catch_kw:
         case continue_kw:
         case else_kw:
@@ -2584,31 +2587,27 @@ octave_base_lexer::handle_identifier (vo
     {
       push_token (new token (STRUCT_ELT, tok, input_line_number,
                              current_input_column));
 
       looking_for_object_index = true;
 
       current_input_column += flex_yyleng ();
 
+      assert (! at_beginning_of_statement);
+
       return STRUCT_ELT;
     }
 
-  // The is_keyword_token may reset
-  // at_beginning_of_statement.  For example, if it sees
-  // an else token, then the next token is at the beginning of a
-  // statement.
-
-  // May set at_beginning_of_statement to true.
+  // If tok is a keyword token, then is_keyword_token will set
+  // at_beginning_of_statement.  For example, if tok is and IF
+  // token, then at_beginning_of_statement will be false.
+
   int kw_token = is_keyword_token (tok);
 
-  // If we found a keyword token, then the beginning_of_statement flag
-  // is already set.  Otherwise, we won't be at the beginning of a
-  // statement.
-
   if (looking_at_function_handle)
     {
       if (kw_token)
         {
           error ("function handles may not refer to keywords");
 
           return LEXICAL_ERROR;
         }
@@ -2632,16 +2631,18 @@ octave_base_lexer::handle_identifier (vo
   if (kw_token)
     {
       if (kw_token >= 0)
         {
           current_input_column += flex_yyleng ();
           looking_for_object_index = false;
         }
 
+      // The call to is_keyword_token set at_beginning_of_statement.
+
       return kw_token;
     }
 
   // Find the token in the symbol table.  Beware the magic
   // transformation of the end keyword...
 
   if (tok == "end")
     tok = "__end__";
