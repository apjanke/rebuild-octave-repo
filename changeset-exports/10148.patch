# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264010590 18000
#      Wed Jan 20 13:03:10 2010 -0500
# Node ID deba43069023e6d13282ff584722dea20c436930
# Parent  adc0143e94195fd77933b7f57f29c825f32e2c87
don't install oct-glob.h

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2010-01-20  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.am (PRIVATE_INCS): New variable.  List oct-glob.h
+	here instead of in INCS.
+	(liboctave_la_SOURCES): Include $(PRIVATE_INCS) in the list.
+
+	* glob-match.cc (glob_match::match, glob_match::glob): Now const.
+	Move definitions here from glob-match.h.
+
 2010-01-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (mx_inline_any_r, mx_inline_all_r): New helper
 	reductors. 
 	(mx_inline_any, mx_inline_all): Call the here in row-wise reduction
 	with few enough columns.
 
 2010-01-20  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -210,17 +210,16 @@ INCS = \
   lo-traits.h \
   lo-utils.h \
   mach-info.h \
   oct-alloc.h \
   oct-cmplx.h \
   oct-env.h \
   oct-fftw.h \
   oct-getopt.h \
-  oct-glob.h \
   oct-group.h \
   oct-inttypes.h \
   oct-locbuf.h \
   oct-md5.h \
   oct-mem.h \
   oct-mutex.h \
   oct-norm.h \
   oct-passwd.h \
@@ -246,16 +245,19 @@ INCS = \
   statdefs.h \
   str-vec.h \
   sun-utils.h \
   sysdir.h \
   systime.h \
   syswait.h \
   $(MATRIX_INC)
 
+PRIVATE_INCS = \
+  oct-glob.h
+
 OTHER_INC = \
   intNDArray.cc \
   kpse.cc \
   mx-inlines.cc
 
 include vx-op-inc.mk
 include mx-op-inc.mk
 include smx-op-inc.mk
@@ -500,17 +502,18 @@ LINK_DEPS = \
   $(READLINE_LIBS) $(TERM_LIBS) \
   $(LIBGLOB) $(REGEX_LIBS) $(DL_LIBS) \
   $(FLIBS) \
   $(PTHREAD_LIBS) $(LIBS)
 
 liboctave_la_SOURCES = \
   $(LIBOCTAVE_SOURCES) \
   $(LIBOCT_READLINE_SOURCES) \
-  $(LIBOCT_PATHSEARCH_SOURCES)
+  $(LIBOCT_PATHSEARCH_SOURCES) \
+  $(PRIVATE_INCS)
 
 liboctave_la_LIBADD = $(LINK_DEPS)
 
 liboctave_la_CPPFLAGS = \
   @OCTAVE_DLL_DEFS@ \
   $(SPARSE_XCPPFLAGS) \
   $(FFTW_XCPPFLAGS) \
   $(ARPACK_CPPFLAGS) \
diff --git a/liboctave/glob-match.cc b/liboctave/glob-match.cc
--- a/liboctave/glob-match.cc
+++ b/liboctave/glob-match.cc
@@ -22,16 +22,29 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <fnmatch.h>
 
 #include "glob-match.h"
+#include "oct-glob.h"
+
+bool
+glob_match::match (const std::string& str) const
+{
+  return octave_fnmatch (pat, str, fnmatch_flags);
+}
+
+string_vector
+glob_match::glob (void) const
+{
+  return octave_glob (pat);
+}
 
 int
 glob_match::opts_to_fnmatch_flags (unsigned int xopts) const
 {
   int retval = 0;
 
   if (xopts & pathname)
     retval |= FNM_PATHNAME;
diff --git a/liboctave/glob-match.h b/liboctave/glob-match.h
--- a/liboctave/glob-match.h
+++ b/liboctave/glob-match.h
@@ -21,17 +21,16 @@ along with Octave; see the file COPYING.
 */
 
 #if !defined (octave_glob_match_h)
 #define octave_glob_match_h 1
 
 #include <string>
 
 #include "Array.h"
-#include "oct-glob.h"
 #include "str-vec.h"
 
 class
 OCTAVE_API
 glob_match
 {
 public:
 
@@ -64,37 +63,34 @@ public:
   }
 
   ~glob_match (void) { }
 
   void set_pattern (const std::string& p) { pat = p; }
 
   void set_pattern (const string_vector& p) { pat = p; }
 
-  bool match (const std::string& str)
-  {
-    return octave_fnmatch (pat, str, fnmatch_flags);
-  }
+  bool match (const std::string& str) const;
 
-  Array<bool> match (const string_vector& str)
+  Array<bool> match (const string_vector& str) const
   {
     int n = str.length ();
 
     Array<bool> retval (n);
 
     for (int i = 0; i < n; i++)
       retval(i) = match (str[i]);
 
     return retval;
   }
 
   // We forward to glob_internal here to avoid problems with gnulib's
   // glob.h defining glob to be rpl_glob.
 
-  string_vector glob (void) { return octave_glob (pat); }
+  string_vector glob (void) const;
 
 private:
 
   // Globbing pattern(s).
   string_vector pat;
 
   // Option flags.
   int fnmatch_flags;
