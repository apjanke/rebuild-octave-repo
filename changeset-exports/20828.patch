# HG changeset patch
# User Rik <rik@octave.org>
# Date 1449597351 28800
#      Tue Dec 08 09:55:51 2015 -0800
# Node ID 7883f240d8ea103df50f760219a3cacf9be5bbc9
# Parent  b3f985199f3f74ffeb10a80fdfde0a70c397612b
Clear error/warning ID when lasterror/lastwarning called with just a message.

* error.cc (Flasterror, Flastwarning): If nargin == 1 then clear
Vlast_error_id.  Remove retval declaration and use 'return ovl()' to return
multiple output values.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1970,35 +1970,36 @@ With two arguments, also set the last me
 @seealso{lasterror, error, lastwarn}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
 
   if (nargin > 2)
     print_usage ();
 
-  octave_value_list retval;
   string_vector argv = args.make_argv ("lasterr");
 
   std::string prev_error_id = Vlast_error_id;
   std::string prev_error_message = Vlast_error_message;
 
   if (nargin == 2)
-    Vlast_error_id = argv(2);
-
-  if (nargin > 0)
-    Vlast_error_message = argv(1);
+    {
+      Vlast_error_id = argv(2);
+      Vlast_error_message = argv(1);
+    }
+  else if (nargin == 1)
+    {
+      Vlast_error_id = "";
+      Vlast_error_message = argv(1);
+    }
 
   if (nargin == 0 || nargout > 0)
-    {
-      retval(1) = prev_error_id;
-      retval(0) = prev_error_message;
-    }
-
-  return retval;
+    return ovl (prev_error_message, prev_error_id);
+  else
+    return octave_value_list ();
 }
 
 DEFUN (lastwarn, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {[@var{msg}, @var{msgid}] =} lastwarn ()\n\
 @deftypefnx {Built-in Function} {} lastwarn (@var{msg})\n\
 @deftypefnx {Built-in Function} {} lastwarn (@var{msg}, @var{msgid})\n\
 Query or set the last warning message.\n\
@@ -2007,41 +2008,41 @@ When called without input arguments, ret
 message identifier.\n\
 \n\
 With one argument, set the last warning message to @var{msg}.\n\
 \n\
 With two arguments, also set the last message identifier.\n\
 @seealso{warning, lasterror, lasterr}\n\
 @end deftypefn")
 {
-
   int nargin = args.length ();
 
   if (nargin > 2)
     print_usage ();
 
-  octave_value_list retval;
   string_vector argv = args.make_argv ("lastwarn");
 
   std::string prev_warning_id = Vlast_warning_id;
   std::string prev_warning_message = Vlast_warning_message;
 
   if (nargin == 2)
-    Vlast_warning_id = argv(2);
-
-  if (nargin > 0)
-    Vlast_warning_message = argv(1);
+    {
+      Vlast_warning_id = argv(2);
+      Vlast_warning_message = argv(1);
+    }
+  else if (nargin == 1)
+    {
+      Vlast_warning_id = "";
+      Vlast_warning_message = argv(1);
+    }
 
   if (nargin == 0 || nargout > 0)
-    {
-      retval(1) = prev_warning_id;
-      retval(0) = prev_warning_message;
-    }
-
-  return retval;
+    return ovl (prev_warning_message, prev_warning_id);
+  else
+    return octave_value_list ();
 }
 
 /* FIXME: Deprecated in 4.0 and scheduled for removal in 4.4 */
 DEFUN (__usage__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} usage (@var{msg})\n\
 Print the message @var{msg}, prefixed by the string @samp{usage: }, and\n\
 set Octave's internal error state such that control will return to the\n\
