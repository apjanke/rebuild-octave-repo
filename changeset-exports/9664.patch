# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1253700966 -7200
#      Wed Sep 23 12:16:06 2009 +0200
# Node ID 2c516903403558417a456f58edb50b5c344d7944
# Parent  7e5b4de5fbfe03b6c85bfe6342587b040350be40
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-09-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Update.
+
 2009-09-18  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4: Consistently quote first arg to AC_DEFUN.
 
 2009-09-17  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Also AC_DEFINE OCTAAVE_IDX_TYPE.
 	(AH_BOTTOM): Include contents of libcruft/misc/oct-dlldefs.h and
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -107,16 +107,46 @@ Summary of important user-visible change
       deallocate d
       e is the result
     
     This will result in memory saving and less allocations, as well as a modest
     performance improvement on most platforms.
     Currently, only temporaries on the left-hand side of the operator can be reused,
     as well as temporaries subject to unary operators - and !.
 
+ ** More efficient matrix division handling. Octave is now able to handle the expressions
+    
+       M' \ v
+       M.' \ v
+       v / M 
+
+    (M is a matrix and v is a vector) more efficiently in certain cases. 
+    In particular, if M is triangular, all three expressions will be handled by a single call to 
+    xTRTRS, with appropriate flags. Previously, all three expressions required a physical transpose
+    of M.
+
+ ** More efficient handling of certain mixed real-complex matrix operations.
+    For instance, if RM is a real matrix and CM a complex matrix,
+    
+      RM * CM 
+
+    can now be evaluated either as
+
+      complex (RM * real (CM), RM * imag (CM))
+
+    or as
+
+      complex (RM) * CM,
+
+    depending on the dimensions. The 1st form requires more temporaries and copying,
+    but halves the count of FLOPs, which normally brings better performance if
+    RM has enough rows. Previously, the 2nd form was always used.
+
+    Matrix division is similarly affected. 
+
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
     have been added to these group objects such that
