# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1272008937 -7200
#      Fri Apr 23 09:48:57 2010 +0200
# Node ID f41c6634d5af73dfa40510a2c1e2f5064d6e4e63
# Parent  83de7b060e91f61801fe93b86623ff7d283d14f0
fix bug in sparse vector assignment (bug #29646)

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Sparse.cc (Sparse<T>::assign): Fix typos.
+
 2010-04-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.h (::assign, ::assign1): Remove declarations.
 
 2010-04-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::cat): Fast return for single array case.
 	* Sparse.cc (Sparse<T>::cat): Ditto.
diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -1766,18 +1766,18 @@ Sparse<T>::assign (const idx_vector& idx
                   copy_or_memcpy (li, tmp.data (), data ());
                   copy_or_memcpy (li, tmp.ridx (), ridx ());
 
                   // new stuff ...
                   copy_or_memcpy (rnz, rhs.data (), data () + li);
                   mx_inline_add (rnz, ridx () + li, rhs.ridx (), lb);
 
                   // ...tail
-                  copy_or_memcpy (nz - ui, data () + ui, data () + li + rnz);
-                  copy_or_memcpy (nz - ui, ridx () + ui, ridx () + li + rnz);
+                  copy_or_memcpy (nz - ui, tmp.data () + ui, data () + li + rnz);
+                  copy_or_memcpy (nz - ui, tmp.ridx () + ui, ridx () + li + rnz);
                 }
 
               cidx(1) = new_nz;
             }
           else if (idx.is_range () && idx.increment () == -1)
             {
               // It's s(u:-1:l) = r. Reverse the assignment.
               assign (idx.sorted (), rhs.index (idx_vector (rhl - 1, 0, -1)));
