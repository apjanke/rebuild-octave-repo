# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1420893084 -3600
#      Sat Jan 10 13:31:24 2015 +0100
# Branch gui-release
# Node ID 010cef260698b5037c1633bef87e271a2d768979
# Parent  77e58a7945b39c6d839067781b8f62a9c7690b57
improve filter of workspace view

* workspace-view.cc (constructor): fix tooltip, filter model is not a pointer,
  do not set filter column here;
  (setModel): filter model is not a pointer, set filter column here;
  (filter_update): use wildcard instead of reg. exp., filter model no pointer;
  (filter_activate): filter model no pointer;
  (update_filter_history): remove an existing item of current one,
  insert current to first position and amke sure it stays the current item;
  (handle_model_changed): filter model is no pointer

* workspace-view.h: filter model is no pointer

diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -46,17 +46,17 @@ workspace_view::workspace_view (QWidget 
   : octave_dock_widget (p), view (new QTableView (this))
 {
   setObjectName ("WorkspaceView");
   setWindowIcon (QIcon (":/actions/icons/logo.png"));
   set_title (tr ("Workspace"));
   setStatusTip (tr ("View the variables in the active workspace."));
 
   _filter = new QComboBox (this);
-  _filter->setToolTip (tr ("Enter the path or filename"));
+  _filter->setToolTip (tr ("Enter text to filter the workspace"));
   _filter->setEditable (true);
   _filter->setMaxCount (MaxFilterHistory);
   _filter->setInsertPolicy (QComboBox::NoInsert);
   _filter->setSizeAdjustPolicy (
             QComboBox::AdjustToMinimumContentsLengthWithIcon);
   QSizePolicy sizePol (QSizePolicy::Expanding, QSizePolicy::Maximum);
   _filter->setSizePolicy (sizePol);
   _filter->completer ()->setCaseSensitivity (Qt::CaseSensitive);
@@ -83,20 +83,16 @@ workspace_view::workspace_view (QWidget 
   hbox_layout->addWidget (_filter);
   vbox_layout->addLayout (hbox_layout);
   vbox_layout->addWidget (view);
   vbox_layout->setMargin (2);
 
   // Set the empty widget to have our layout.
   widget ()->setLayout (vbox_layout);
 
-  // Filter model
-  _filter_model = new QSortFilterProxyModel ();
-  _filter_model->setFilterKeyColumn(0);
-
   // Initialize collapse/expand state of the workspace subcategories.
 
   QSettings *settings = resource_manager::get_settings ();
 
   // Initialize column order and width of the workspace
   view->horizontalHeader ()->restoreState (
     settings->value ("workspaceview/column_state").toByteArray ());
 
@@ -139,53 +135,60 @@ workspace_view::~workspace_view (void)
     mru.append (_filter->itemText (i));
   settings->setValue ("workspaceview/mru_list", mru);
 
   settings->sync ();
 }
 
 void workspace_view::setModel (workspace_model *model)
 {
-  _filter_model->setSourceModel (model);
-  view->setModel (_filter_model);
+  _filter_model.setSourceModel (model);
+  _filter_model.setFilterKeyColumn(0);
+
+  view->setModel (&_filter_model);
   _model = model;
 }
 
 void
 workspace_view::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
   QDockWidget::closeEvent (e);
 }
 
 void
 workspace_view::filter_update (const QString& expression)
 {
-  _filter_model->setFilterRegExp (QRegExp (expression, Qt::CaseSensitive));
+  _filter_model.setFilterWildcard (expression);
   handle_model_changed ();
 }
 
 void
 workspace_view::filter_activate (bool state)
 {
   _filter->setEnabled (state);
-  _filter_model->setDynamicSortFilter (state);
+  _filter_model.setDynamicSortFilter (state);
 
   if (state)
     filter_update (_filter->currentText ());
   else
     filter_update (QString ());
 }
 
 void
 workspace_view::update_filter_history ()
 {
-  QString text = _filter->currentText ();
-  if (! text.isEmpty () && _filter->findText (text) == -1)
-    _filter->insertItem (0, _filter->currentText ());
+  QString text = _filter->currentText ();   // get current text
+  int index = _filter->findText (text);     // and its actual index
+
+  if (index > -1)
+    _filter->removeItem (index);    // remove if already existing
+
+  _filter->insertItem (0, text);    // (re)insert at beginning
+  _filter->setCurrentIndex (0);
 }
 
 QString
 workspace_view::get_var_name (QModelIndex index)
 {
   index = index.sibling (index.row (), 0);
   QAbstractItemModel *m = view->model ();
   QMap<int, QVariant> item_data = m->itemData (index);
@@ -332,17 +335,17 @@ workspace_view::relay_contextmenu_comman
 void
 workspace_view::handle_model_changed (void)
 {
 //  view->resizeRowsToContents ();
   // Just modify those rows that have been added rather than go through
   // the whole list.  For-loop test will handle when number of rows reduced.
   QFontMetrics fm = view->fontMetrics ();
   int row_height =  fm.height ();
-  int new_row_count = _filter_model->rowCount ();
+  int new_row_count = _filter_model.rowCount ();
   for (int i = view_previous_row_count; i < new_row_count; i++)
     view->setRowHeight (i, row_height);
   view_previous_row_count = new_row_count;
 }
 
 void
 workspace_view::notice_settings (const QSettings *settings)
 {
diff --git a/libgui/src/workspace-view.h b/libgui/src/workspace-view.h
--- a/libgui/src/workspace-view.h
+++ b/libgui/src/workspace-view.h
@@ -84,15 +84,15 @@ private:
 
   void relay_contextmenu_command (const QString& cmdname);
 
   QString get_var_name (QModelIndex index);
   QTableView *view;
   int view_previous_row_count;
   workspace_model *_model;
 
-  QSortFilterProxyModel *_filter_model;
+  QSortFilterProxyModel _filter_model;
   QCheckBox *_filter_checkbox;
   QComboBox *_filter;
   enum { MaxFilterHistory = 10 };
 };
 
 #endif
