# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1518670255 18000
#      Wed Feb 14 23:50:55 2018 -0500
# Node ID ed2d9ef336a78e4aa295f9470dcec7c1fcace02c
# Parent  d7c3918955e66986f9820604afa5e5d4491b92be
resize varible editor model on scrollbar actions

* variable-editor.h, variable-editor.cc
(var_editor_tab::handle_horizontal_scroll_action,
var_editor_tab::handle_vertical_scroll_action): New slots.
(var_editor_tab_widget::var_editor_tab_widget): Connect signals and
slots for scrollbar actions.

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -30,16 +30,17 @@ along with Octave; see the file COPYING.
 
 #include <QApplication>
 #include <QClipboard>
 #include <QFileDialog>
 #include <QHeaderView>
 #include <QLabel>
 #include <QMenu>
 #include <QPalette>
+#include <QScrollBar>
 #include <QSignalMapper>
 #include <QStackedWidget>
 #include <QTableView>
 #include <QTextEdit>
 #include <QTabWidget>
 #include <QToolBar>
 #include <QToolButton>
 #include <QVBoxLayout>
@@ -149,16 +150,64 @@ var_editor_tab::set_editable (bool edita
       QVariant v_data = m_model->data ();
 
       QString str = v_data.toString ();
 
       viewer->setPlainText (str);
     }
 }
 
+void
+var_editor_tab::handle_horizontal_scroll_action (int action)
+{
+  if (action == QAbstractSlider::SliderSingleStepAdd
+      || action == QAbstractSlider::SliderPageStepAdd
+      || action == QAbstractSlider::SliderToMaximum
+      || action == QAbstractSlider::SliderMove)
+    {
+      QTableView *edit_view = get_edit_view ();
+
+      if (edit_view)
+        {
+          QScrollBar *sb = edit_view->horizontalScrollBar ();
+
+          if (sb && sb->value () == sb->maximum ())
+            {
+              int new_cols = m_model->display_columns () + 16;
+
+              m_model->maybe_resize_columns (new_cols);
+            }
+        }
+    }
+}
+
+void
+var_editor_tab::handle_vertical_scroll_action (int action)
+{
+  if (action == QAbstractSlider::SliderSingleStepAdd
+      || action == QAbstractSlider::SliderPageStepAdd
+      || action == QAbstractSlider::SliderToMaximum
+      || action == QAbstractSlider::SliderMove)
+    {
+      QTableView *edit_view = get_edit_view ();
+
+      if (edit_view)
+        {
+          QScrollBar *sb = edit_view->verticalScrollBar ();
+
+          if (sb && sb->value () == sb->maximum ())
+            {
+              int new_rows = m_model->display_rows () + 16;
+
+              m_model->maybe_resize_rows (new_rows);
+            }
+        }
+    }
+}
+
 // Functions for reimplemented tab widget.
 
 var_editor_tab_widget::var_editor_tab_widget (QWidget *p)
   : QTabWidget (p)
 {
   tab_bar *bar = new tab_bar (this);
 
   connect (bar, SIGNAL (close_current_tab_signal (bool)),
@@ -435,16 +484,25 @@ variable_editor::make_edit_view (var_edi
            this, SLOT (rowmenu_requested (const QPoint&)));
 
   connect (table, SIGNAL (customContextMenuRequested (const QPoint&)),
            this, SLOT (contextmenu_requested (const QPoint&)));
 
   connect (table, SIGNAL (doubleClicked (const QModelIndex&)),
            this, SLOT (double_click (const QModelIndex&)));
 
+  table->setHorizontalScrollMode (QAbstractItemView::ScrollPerPixel);
+  table->setVerticalScrollMode (QAbstractItemView::ScrollPerPixel);
+
+  connect (table->horizontalScrollBar (), SIGNAL (actionTriggered (int)),
+           page, SLOT (handle_horizontal_scroll_action (int)));
+
+  connect (table->verticalScrollBar (), SIGNAL (actionTriggered (int)),
+           page, SLOT (handle_vertical_scroll_action (int)));
+
   table->setFont (m_font);
   table->setStyleSheet (m_stylesheet);
   table->setAlternatingRowColors (m_alternate_rows);
 #if defined (HAVE_QT4)
   table->verticalHeader ()->setResizeMode (QHeaderView::Interactive);
 #else
   table->verticalHeader ()->setSectionResizeMode (QHeaderView::Interactive);
 #endif
diff --git a/libgui/src/variable-editor.h b/libgui/src/variable-editor.h
--- a/libgui/src/variable-editor.h
+++ b/libgui/src/variable-editor.h
@@ -75,16 +75,20 @@ public:
   bool has_focus (void) const;
 
   void keyPressEvent (QKeyEvent *event);
 
 public slots:
 
   void set_editable (bool);
 
+  void handle_horizontal_scroll_action (int action);
+
+  void handle_vertical_scroll_action (int action);
+
 private:
 
   variable_editor_model *m_model;
 
   QStackedWidget *m_widget_stack;
 
   int m_edit_view_idx;
   int m_disp_view_idx;
