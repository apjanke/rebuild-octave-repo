# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1467215502 14400
#      Wed Jun 29 11:51:42 2016 -0400
# Node ID 80659e58609f279d588f08f5bd58df4e07e878ed
# Parent  efce657ceb861472f55f70e867e5c5364e3e1f72
provide wrapper for tmpfile (bug #48337)

* liboctave/wrappers/tmpfile-wrapper.h,
liboctave/wrappers/tmpfile-wrapper.c: New files.

* liboctave/wrappers/module.mk: Update.

* file-io.cc, gl2ps-print.cc: Use octave_tmpfile_wrapper instead of
std::tmpfile.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -53,16 +53,17 @@ along with Octave; see the file COPYING.
 
 #include "error.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-ieee.h"
 #include "mkostemp-wrapper.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
+#include "tmpfile-wrapper.h"
 #include "unistd-wrappers.h"
 
 #include "defun.h"
 #include "errwarn.h"
 #include "file-io.h"
 #include "load-path.h"
 #include "oct-fstrm.h"
 #include "oct-iostrm.h"
@@ -2834,17 +2835,17 @@ system-dependent error message.
 @seealso{tempname, mkstemp, tempdir, P_tmpdir}
 @end deftypefn */)
 {
   if (args.length () != 0)
     print_usage ();
 
   octave_value_list retval;
 
-  FILE *fid = std::tmpfile ();
+  FILE *fid = octave_tmpfile_wrapper ();
 
   if (fid)
     {
       std::string nm;
 
       std::ios::openmode md = fopen_mode_to_ios_mode ("w+b");
 
       octave_stream s = octave_stdiostream::create (nm, fid, md);
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -33,16 +33,17 @@ along with Octave; see the file COPYING.
 #include <cstdio>
 
 #include <limits>
 
 #include <gl2ps.h>
 
 #include "lo-mappers.h"
 #include "oct-locbuf.h"
+#include "tmpfile-wrapper.h"
 #include "unistd-wrappers.h"
 #include "unwind-prot.h"
 
 #include "gl-render.h"
 #include "oct-opengl.h"
 #include "sighandlers.h"
 #include "sysdep.h"
 #include "text-renderer.h"
@@ -192,17 +193,17 @@ gl2ps_renderer::draw (const graphics_obj
       // Default sort order optimizes for 3D plots
       GLint gl2ps_sort = GL2PS_BSP_SORT;
 
       // For 2D plots we can use a simpler Z-depth sorting algorithm
       if (term.find ("is2D") != std::string::npos)
         gl2ps_sort = GL2PS_SIMPLE_SORT;
 
       // Use a temporary file in case an overflow happens
-      FILE* tmpf = std::tmpfile ();
+      FILE* tmpf = octave_tmpfile_wrapper ();
 
       if (! tmpf)
         error ("gl2ps_renderer::draw: couldn't open temporary file for printing");
 
       GLint buffsize = 2*1024*1024;
       buffer_overflow = true;
 
       while (buffer_overflow)
diff --git a/liboctave/wrappers/module.mk b/liboctave/wrappers/module.mk
--- a/liboctave/wrappers/module.mk
+++ b/liboctave/wrappers/module.mk
@@ -17,16 +17,17 @@ NOINSTALL_WRAPPERS_INC = \
   liboctave/wrappers/set-program-name-wrapper.h \
   liboctave/wrappers/signal-wrappers.h \
   liboctave/wrappers/stat-wrappers.h \
   liboctave/wrappers/strdup-wrapper.h \
   liboctave/wrappers/strftime-wrapper.h \
   liboctave/wrappers/strmode-wrapper.h \
   liboctave/wrappers/strptime-wrapper.h \
   liboctave/wrappers/time-wrappers.h \
+  liboctave/wrappers/tmpfile-wrapper.h \
   liboctave/wrappers/uname-wrapper.h \
   liboctave/wrappers/unistd-wrappers.h \
   liboctave/wrappers/unsetenv-wrapper.h \
   liboctave/wrappers/vasprintf-wrapper.h \
   liboctave/wrappers/wait-for-input.h \
   liboctave/wrappers/wait-wrappers.h
 
 WRAPPERS_SRC = \
@@ -48,16 +49,17 @@ WRAPPERS_SRC = \
   liboctave/wrappers/set-program-name-wrapper.c \
   liboctave/wrappers/signal-wrappers.c \
   liboctave/wrappers/stat-wrappers.c \
   liboctave/wrappers/strdup-wrapper.c \
   liboctave/wrappers/strftime-wrapper.c \
   liboctave/wrappers/strmode-wrapper.c \
   liboctave/wrappers/strptime-wrapper.c \
   liboctave/wrappers/time-wrappers.c \
+  liboctave/wrappers/tmpfile-wrapper.c \
   liboctave/wrappers/uname-wrapper.c \
   liboctave/wrappers/unistd-wrappers.c \
   liboctave/wrappers/unsetenv-wrapper.c \
   liboctave/wrappers/vasprintf-wrapper.c \
   liboctave/wrappers/wait-for-input.c \
   liboctave/wrappers/wait-wrappers.c \
   $(NOINSTALL_WRAPPERS_INC)
 
diff --git a/liboctave/wrappers/tmpfile-wrapper.c b/liboctave/wrappers/tmpfile-wrapper.c
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/tmpfile-wrapper.c
@@ -0,0 +1,39 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+// tmpfile may be provided by gnulib.  We don't include gnulib headers
+// directly in Octave's C++ source files to avoid problems that may be
+// caused by the way that gnulib overrides standard library functions.
+
+#if defined (HAVE_CONFIG_H)
+#  include "config.h"
+#endif
+
+#include <stdio.h>
+
+#include "tmpfile-wrapper.h"
+
+FILE *
+octave_tmpfile_wrapper (void)
+{
+  return tmpfile ();
+}
diff --git a/liboctave/wrappers/tmpfile-wrapper.h b/liboctave/wrappers/tmpfile-wrapper.h
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/tmpfile-wrapper.h
@@ -0,0 +1,45 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if ! defined (octave_tmpfile_wrapper_h)
+#define octave_tmpfile_wrapper_h 1
+
+#if defined __cplusplus
+#  include <cstdio>
+#else
+#  include <stdio.h>
+#endif
+
+#if defined __cplusplus
+extern "C" {
+#endif
+
+// c++11 provides std::tmpfile but it appears to fail on 64-bit
+// Windows systems.
+
+extern FILE *octave_tmpfile_wrapper (void);
+
+#if defined __cplusplus
+}
+#endif
+
+#endif
