# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1292660866 18000
#      Sat Dec 18 03:27:46 2010 -0500
# Node ID 934ed3e07542424c54b5faf4adcc69ed8e734aea
# Parent  027fbc3898982bb9fac18d52f88c1c8f8cbe8423
dlmread: simplify file name/id logic

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-12-18  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/dlmread.cc (Fdlmread): Simplify file name/id logic.
+	Bug #31910.
+
 2010-12-17  Rik  <octave@nomad.inbox5.com>
 
 	* oct-parse.yy (builtin): Remove seealso reference to deprecated 
 	function dispatch.
 
 2012-12-17  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* graphics.h.in (class text::properties): New properties positionmode,
diff --git a/src/DLD-FUNCTIONS/dlmread.cc b/src/DLD-FUNCTIONS/dlmread.cc
--- a/src/DLD-FUNCTIONS/dlmread.cc
+++ b/src/DLD-FUNCTIONS/dlmread.cc
@@ -201,44 +201,46 @@ fields. Default is zero.\n\
 
   if (nargin < 1 || nargin > 4) 
     {
       print_usage ();
       return retval;
     }
 
   std::istream *input = 0;
-  std::auto_ptr<std::ifstream> input_file;
-  octave_stream input_fid;
+  std::ifstream input_file;
 
   if (args(0).is_string ())
     {
       // File name.
       std::string fname (args(0).string_value ());
       if (error_state)
          return retval;
 
       std::string tname = file_ops::tilde_expand (fname);
 
-      input_file = std::auto_ptr<std::ifstream> (new std::ifstream (tname.c_str ()));
-      if (input_file->bad ())
+      input_file.open (tname.c_str (), std::ios::in);
+
+      if (! input_file)
         {
           error ("dlmread: unable to open file `%s'", fname.c_str ());
           return retval;
         }
       else
-         input = input_file.get ();
+        input = &input_file;
     }
   else if (args(0).is_scalar_type ())
     {
-      input_fid = octave_stream_list::lookup (args(0), "dlmread");
+      octave_stream is = octave_stream_list::lookup (args(0), "dlmread");
+
       if (error_state)
          return retval;
 
-      input = input_fid.input_stream ();
+      input = is.input_stream ();
+
       if (! input)
         {
           error ("dlmread: stream not open for input");
           return retval;
         }
     }
   else
     {
