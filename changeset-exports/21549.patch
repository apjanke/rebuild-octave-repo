# HG changeset patch
# User Rik <rik@octave.org>
# Date 1459180690 25200
#      Mon Mar 28 08:58:10 2016 -0700
# Node ID 17845d0e359f783d3cbcdd98839dd3f23ede5e0e
# Parent  f044dc45b8b1e4610cc389f1c4b7a3d4d0a33a8c
doc: Remove unecessary whitespace and end of docstrings.

* octave_config_info.m, dlmwrite.m, edit.m, padecoef.m,
unique.m: Remove unecessary whitespace and end of docstrings.

diff --git a/scripts/deprecated/octave_config_info.m b/scripts/deprecated/octave_config_info.m
--- a/scripts/deprecated/octave_config_info.m
+++ b/scripts/deprecated/octave_config_info.m
@@ -20,17 +20,17 @@
 ## @deftypefn  {Built-in Function} {} octave_config_info ()
 ## @deftypefnx {Built-in Function} {} octave_config_info (@var{option})
 ##
 ## @code{octave_config_info} is deprecated and will be removed in
 ## Octave version 4.6.  Use @code{__have_feature__ (@var{option})} or
 ## @code{__octave_config_info__} as a replacement.
 ##
 ## Return a structure containing configuration and installation
-## information for Octave. 
+## information for Octave.
 ##
 ## If @var{option} is a string, return the configuration information for
 ## the specified option.
 ##
 ## @seealso{computer}
 ## @end deftypefn
 
 ## Deprecated in version 4.2
diff --git a/scripts/io/dlmwrite.m b/scripts/io/dlmwrite.m
--- a/scripts/io/dlmwrite.m
+++ b/scripts/io/dlmwrite.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} dlmwrite (@var{file}, @var{M})
 ## @deftypefnx {} {} dlmwrite (@var{file}, @var{M}, @var{delim}, @var{r}, @var{c})
 ## @deftypefnx {} {} dlmwrite (@var{file}, @var{M}, @var{key}, @var{val} @dots{})
 ## @deftypefnx {} {} dlmwrite (@var{file}, @var{M}, "-append", @dots{})
 ## @deftypefnx {} {} dlmwrite (@var{fid}, @dots{})
-## Write the numeric matrix @var{M} to the text file @var{file} using a 
+## Write the numeric matrix @var{M} to the text file @var{file} using a
 ## delimiter.
 ##
 ## @var{file} should be a filename or a writable file ID given by @code{fopen}.
 ##
 ## The parameter @var{delim} specifies the delimiter to use to separate values
 ## on a row.  If no delimiter is specified the comma character @samp{,} is
 ## used.
 ##
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -62,17 +62,17 @@
 ##
 ## If @code{edit} is called with @var{field} and @var{value} variables, the
 ## value of the control field @var{field} will be set to @var{value}.
 ##
 ## If an output argument is requested and the first input argument is
 ## @code{get} then @code{edit} will return the value of the control field
 ## @var{field}.  If the control field does not exist, edit will return a
 ## structure containing all fields and values.  Thus, @code{edit ("get",
-## "all")} returns a complete control structure.
+## @qcode{"all"})} returns a complete control structure.
 ##
 ## The following control fields are used:
 ##
 ## @table @samp
 ## @item home
 ## This is the location of user local m-files.  Be sure it is in your path.
 ## The default is @file{~/octave}.
 ##
diff --git a/scripts/polynomial/padecoef.m b/scripts/polynomial/padecoef.m
--- a/scripts/polynomial/padecoef.m
+++ b/scripts/polynomial/padecoef.m
@@ -54,20 +54,20 @@
 ## Qn(s) = Pn(-s)
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ##
 ## The inputs @var{T} and @var{N} must be non-negative numeric scalars.  If
 ## @var{N} is unspecified it defaults to 1.
-## 
+##
 ## The output row vectors @var{num} and @var{den} contain the numerator and
 ## denominator coefficients in descending powers of s.  Both are
-## @var{N}th-order polynomials.  
+## @var{N}th-order polynomials.
 ##
 ## For example:
 ##
 ## @smallexample
 ## @group
 ## t = 0.1;
 ## n = 4;
 ## [num, den] = padecoef (t, n)
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -34,17 +34,17 @@
 ## to use this option.
 ##
 ## If requested, return index vectors @var{i} and @var{j} such that
 ## @code{@var{y} = @var{x}(@var{i})} and @code{@var{x} = @var{y}(@var{j})}.
 ##
 ## Additionally, if @var{i} is a requested output then one of
 ## @qcode{"first"} or @qcode{"last"} may be given as an input.  If
 ## @qcode{"last"} is specified, return the highest possible indices in
-## @var{i}, otherwise, if @qcode{"first"} is specified, return the lowest. 
+## @var{i}, otherwise, if @qcode{"first"} is specified, return the lowest.
 ## The default is @qcode{"last"}.
 ## @seealso{union, intersect, setdiff, setxor, ismember}
 ## @end deftypefn
 
 function [y, i, j] = unique (x, varargin)
 
   if (nargin < 1)
     print_usage ();
