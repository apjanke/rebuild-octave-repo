# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1364486503 -3600
#      Thu Mar 28 17:01:43 2013 +0100
# Node ID f5204f486a298933f7d59a196239e7cdd24aa80c
# Parent  75a6716b72a2247233fbd587f89030b3be890cbf
gui: add shortcut for goto line action in the editor and center the target line

* file-editor.cc(construct): add shortcut Ctrl-G for goto line action
* file-editor-tab.cc(center_current_line): new function, centering current line
* file-editor-tab.cc(set_debugger_position): use center_current_line
* file-editor-tab.cc(goto_line): call center_current_line only if goto_line was
  called from goto line action
* file-editor-tab.h: new function center_current_line

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -615,33 +615,33 @@ file_editor_tab::find (const QWidget* ID
 }
 
 void
 file_editor_tab::goto_line (const QWidget* ID, int line)
 {
   if (ID != this)
     return;
 
-  bool ok = true;
-
-  if (line <= 0)
+  if (line <= 0)  // ask for desired line
     {
-      ok = false;
-
+      bool ok = false;
       int index;
-
       _edit_area->getCursorPosition(&line, &index);
-
-
-      line = QInputDialog::getInt (_edit_area, "Goto line", "Line number", 
+      line = QInputDialog::getInt (_edit_area, tr("Goto line"), tr("Line number"),
                                    line+1, 1, _edit_area->lines(), 1, &ok);
+      if (ok)
+        {
+          _edit_area->setCursorPosition (line-1, 0);
+          center_current_line ();
+        }
     }
-
-  if (ok)
-    _edit_area->setCursorPosition (line-1, 0);
+  else  // go to given line without dialog
+    {
+      _edit_area->setCursorPosition (line-1, 0);
+    }
 }
 
 
 void
 file_editor_tab::do_comment_selected_text (bool comment)
 {
   if ( _edit_area->hasSelectedText() )
     {
@@ -1137,21 +1137,17 @@ file_editor_tab::set_debugger_position (
 {
   if (ID != this || ID == 0)
     return;
 
   _edit_area->markerDeleteAll (debugger_position);
   if (line > 0)
     {
       _edit_area->markerAdd (line, debugger_position);
-      int first_line = _edit_area->firstVisibleLine ();
-      long int visible_lines = _edit_area->SendScintilla
-                                        (QsciScintillaBase::SCI_LINESONSCREEN);
-      first_line = first_line + (line - first_line - visible_lines/2);
-      _edit_area->setFirstVisibleLine (first_line);
+      center_current_line ();
     }
 }
 
 void
 file_editor_tab::do_dbstop_marker (bool insert, const QWidget *ID, int line)
 {
   if (ID != this || ID == 0)
     return;
@@ -1160,9 +1156,25 @@ file_editor_tab::do_dbstop_marker (bool 
     {
       if (insert)
         _edit_area->markerAdd (line, breakpoint);
       else
         _edit_area->markerDelete (line, breakpoint);
     }
 }
 
+
+void
+file_editor_tab::center_current_line ()
+{
+  long int visible_lines = _edit_area->SendScintilla
+                                    (QsciScintillaBase::SCI_LINESONSCREEN);
+  if (visible_lines > 2)
+    {
+      int line, index;
+      _edit_area->getCursorPosition(&line,&index);
+      int first_line = _edit_area->firstVisibleLine ();
+      first_line = first_line + (line - first_line - (visible_lines-1)/2);
+      _edit_area->setFirstVisibleLine (first_line);
+    }
+}
+
 #endif
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -137,16 +137,17 @@ private:
 
   int check_file_modified ();
   void do_comment_selected_text (bool comment);
 
   void run_file_callback (void);
   void add_breakpoint_callback (const bp_info& info);
   void remove_breakpoint_callback (const bp_info& info);
   void remove_all_breakpoints_callback (const bp_info& info);
+  void center_current_line ();
 
   QsciScintilla *       _edit_area;
 
   QString               _file_name;
   QString               _file_name_short;
 
   bool                  _long_title;
   bool                  _copy_available;
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -653,16 +653,18 @@ file_editor::construct ()
   toggle_bookmark_action->setShortcut           (Qt::Key_F7);
   toggle_bookmark_action->setShortcutContext    (Qt::WindowShortcut);
   comment_selection_action->setShortcut         (Qt::ControlModifier + Qt::Key_7);
   comment_selection_action->setShortcutContext  (Qt::WindowShortcut);
   uncomment_selection_action->setShortcut       (Qt::ControlModifier + Qt::Key_8);
   uncomment_selection_action->setShortcutContext(Qt::WindowShortcut);
   find_action->setShortcut                      (QKeySequence::Find);
   find_action->setShortcutContext               (Qt::WindowShortcut);
+  goto_line_action->setShortcut                 (Qt::ControlModifier+ Qt::Key_G);
+  goto_line_action->setShortcutContext          (Qt::WindowShortcut);
 
   // toolbar
   _tool_bar->addAction (new_action);
   _tool_bar->addAction (open_action);
   _tool_bar->addAction (save_action);
   _tool_bar->addAction (save_as_action);
   _tool_bar->addSeparator ();
   _tool_bar->addAction (undo_action);
