# HG changeset patch
# User Rik <rik@octave.org>
# Date 1383072562 25200
#      Tue Oct 29 11:49:22 2013 -0700
# Node ID 7e9382588570672e1399b6a7984ffd9de722f475
# Parent  344f15ecfbb6e7b4bc540c5839af0eb57b7fa47f
HACKING: Update information for impending 3.8 release.

* etc/HACKING: Update listed directory structure before impending 3.8 release.

diff --git a/etc/HACKING b/etc/HACKING
--- a/etc/HACKING
+++ b/etc/HACKING
@@ -126,20 +126,27 @@ on the subject.  See "Appendix C: Tips a
 
 See the file BUGS in this directory for more guidance on reporting bugs
 and preparing patches.
 
 * Code layout
 
 An overview of the directory layout of Octave's source files:
 
+  build-aux     -- scripts which support the build process
+
+
   doc           -- Texinfo documentation for Octave
 
 
-  examples      -- some example files
+  etc           -- miscellaneous files, such as this HACKING howto
+
+
+  examples      -- some example files (mkoctfile and mex samples, old class
+                   programming interface)
 
 
   gnulib-hg     -- gnulib subrepo.  This is a clone of the gnulib source
                    tree maintained by the Octave project.  The default
                    branch is identical to the upstream gnulib sources.
                    There is also an "octave-stable" branch that may
                    contain changes as needed for the "stable" branch in
                    the Octave archive.  We usually don't want to update
@@ -187,91 +194,87 @@ An overview of the directory layout of O
 
       slatec-err       slatec error handling library
 
       slatec-fn        various special function subroutines
 
     numeric     C++ numerical algorithms and interfaces to the Fortran
                 algorithms
 
-    operators   code for operators that act on base classes such as Array
+    operators   code for operators that act on base classes (such as Array)
 
     system      OS-related functions
  
     util        utility and miscellaneous functions
 
-  libinterp     -- The interpreter itself plus lots of infrastructure
+  libinterp     -- the interpreter itself plus lots of infrastructure
                    around it.  Octave's extensive octave_value class
                    hierarchy for polymorphically handling all Octave
                    types is defined here.  The built-in functions are
                    also defined here.
 
-    octave-value     The octave_value class hierarchy.  These are the
+    octave-value     the octave_value class hierarchy.  These are the
                      container classes that hold various Octave data
                      types like struct numerical arrays, structure
                      arrays, and cell arrays.
 
     parse-tree       Classes that define the parse tree for the
-                     interpreter.
-
-    interp-core      Core utilities for the interpreter.  There are no
-                     DEFUN functions (callable from the scripting
-                     language) defined here.
+                     interpreter
 
-    interpfcn        Functions closely related to the interpreter.
-                     Includes DEFUN functions (callable from the
-                     scripting language).  Also may export C++ functions
-                     that are used in other parts of the interpreter.
+    corefcn          statically linked DEFUN functions (callable from
+                     the scripting langauge) as well as internal C++
+                     functions used by the interpreter.
 
-    corefcn          Statically linked DEFUN functions (callable from
-                     the scripting langauge).  No C++ functions exported
-                     for use in other parts of the interpreter.
-
-    dldfcn           Dynamically linked DEFUN functions (callable
+    dldfcn           dynamically linked DEFUN functions (callable
                      from the scripting language).  If you see "help
                      foo" telling you that foo is defined in foo.oct,
                      then foo.cc will be found here and contain the
                      source code.
 
-    operators        Definitions and template instantiations for
+    operators        definitions and template instantiations for
                      operators for all possible Octave type
-                     combinations.
+                     combinations
 
-    template-inst    Some C++ template instantiations.
+    template-inst    some C++ template instantiations
 
 
   libgui        -- the graphical user interface of GNU Octave
 
-    src              source files.
-
-      m-editor       source files for the m-file editor.
+    kb-layouts       various files need by the qterminal widget that has
+                     been derived from Konsole
 
-      qtinfo         source files for the Qt texinfo browser.
-
-      icons          icon files that will be compiled into the
-                     executable via a resource file.
+    languages        translation files and list of translators
 
     qterminal        Qt terminal widget
 
-    languages        translation files and list of translators.
+    src              source files
+
+      icons          icon files that will be compiled into the
+                     executable via a resource file
+
+      m-editor       source files for the m-file editor
 
-    kb-layouts       various files need by the qterminal widget that has
-                     been derived from Konsole.
-      
+      octave-adapter link between Octave and GUI
+
+      qtinfo         source files for the Qt texinfo browser
+
+
+  m4            -- m4 scripts used by configure during the build process
+
 
   scripts       -- functions written in the Octave language
 
+    @ftp             ftp object class
+
     audio            play and record sound files (system dependent)
 
     deprecated       older deprecated functions
 
     elfun            elementary mathematical functions
 
-    @ftp             ftp object class
-
     general          utility functions
 
     geometry         geometry algorithms
 
     gui              User-Interface (UI) functions
 
     help             help subsystem functions
 
@@ -311,28 +314,33 @@ An overview of the directory layout of O
 
     strings          character string manipulation
 
     testfun          unit testing
 
     time             time and date functions
 
 
+  src           -- code for the actual executables that are created.  This
+                   includes octave, octave-cli, octave-gui, as well as
+                   mkoctfile.
+
+
   test          -- tests for the interpreter
 
-    test_ .m         fixed tests for the interpreter
+    *.tst            fixed tests for the interpreter
 
     fntests.m        script to run function tests embedded in C++ and
                      .m files
 
 ----
 John W. Eaton
 jwe@octave.org
 
-Last updated: Fri, 4 Oct 2013 16:58:52 PDT 
+Last updated: Tue, 29 Oct 2013 11:42:47 PDT 
 
 
 
 ################################################################################
 
 Copyright (C) 2009-2013 John W. Eaton
 
 This file is part of Octave.
