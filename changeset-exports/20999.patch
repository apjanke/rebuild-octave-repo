# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1451320805 28800
#      Mon Dec 28 08:40:05 2015 -0800
# Node ID 73f62b4bb53357338233ccb07e0142c0b070ad01
# Parent  d03babf77549994913472018c3a6897f89a952bf
svds.m: Special handling for case of sigma=0 (bug #46683).

* svds.m: If ARPACK does not return the correct number of positive eigenvalues,
then use the negative eigenvalues instead.

diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -195,16 +195,24 @@ function [u, s, v, flag] = svds (A, k, s
     ## We wish to exclude all eigenvalues that are less than zero as these
     ## are artifacts of the way the matrix passed to eigs is formed. There
     ## is also the possibility that the value of sigma chosen is exactly
     ## a singular value, and in that case we're dead!! So have to rely on
     ## the warning from eigs. We exclude the singular values which are
     ## less than or equal to zero to within some tolerance scaled by the
     ## norm since if we don't we might end up with too many singular
     ## values.
+    if (b_sigma == 0)
+      if (sum (s>0) < k)
+        ## It may happen that the number of positive s is less than k.
+        ## In this case, take -s (if s in an eigenvalue, so is -s),
+        ## flipped upside-down.
+        s = flipud (-s);
+      endif
+    endif
     tol = norma * opts.tol;
     ind = find (s > tol);
     if (length (ind) < k)
       ## Too few eigenvalues returned.  Add in any zero eigenvalues of B,
       ## including the nominally negative ones.
       zind = find (abs (s) <= tol);
       p = min (length (zind), k - length (ind));
       ind = [ind; zind(1:p)];
