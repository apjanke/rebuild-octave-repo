# HG changeset patch
# User Rik <rik@octave.org>
# Date 1450484465 28800
#      Fri Dec 18 16:21:05 2015 -0800
# Node ID 7832c351a6f5cccff0bbf68dfbc1c1748bb15f9e
# Parent  a4f5da7c54636b007796664b82c5fafd22fa897e
svds.m: Don't save/restore randn seed in BIST tests.

* svds.m: Don't save/restore randn seed in BIST tests.

diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -254,19 +254,17 @@ endfunction
 %! k = 7;
 %! A = sparse ([3:n,1:n,1:(n-2)],[1:(n-2),1:n,3:n],[ones(1,n-2),0.4*n*ones(1,n),ones(1,n-2)]);
 %! [u,s,v] = svd (full (A));
 %! s = diag (s);
 %! [~, idx] = sort (abs (s));
 %! s = s(idx);
 %! u = u(:, idx);
 %! v = v(:, idx);
-%! randn_state = randn ("state");
 %! rand_state = rand ("state");
-%! randn ("state", 42);      % Initialize to make normest function reproducible
 %! rand ("state", 42);
 %! opts.v0 = rand (2*n,1); % Initialize eigs ARPACK starting vector
 %!                         % to guarantee reproducible results
 %!
 %!testif HAVE_ARPACK
 %! [u2,s2,v2,flag] = svds (A,k);
 %! s2 = diag (s2);
 %! assert (flag, !1);
@@ -296,12 +294,11 @@ endfunction
 %! assert (s2, zeros (k));
 %! assert (v2, eye (10, 7));
 %!
 %!testif HAVE_ARPACK
 %! s = svds (speye (10));
 %! assert (s, ones (6, 1), 8*eps);
 
 %!test
-%! ## Restore random number generator seeds at end of tests
+%! ## Restore random number generator seed at end of tests
 %! rand ("state", rand_state);
-%! randn ("state", randn_state);
 
