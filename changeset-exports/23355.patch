# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1491498729 14400
#      Thu Apr 06 13:12:09 2017 -0400
# Node ID 08db4e9dd14995fd40ae7d08706bd11a3090500e
# Parent  1a2941fb8ffd8ba1583519b533a0a906b15eb7b5
* Cell.h, Cell.cc (Cell::string_vector_value): New function.

diff --git a/libinterp/corefcn/Cell.cc b/libinterp/corefcn/Cell.cc
--- a/libinterp/corefcn/Cell.cc
+++ b/libinterp/corefcn/Cell.cc
@@ -146,16 +146,29 @@ Cell::cellstr_value (void) const
   octave_idx_type n = numel ();
 
   for (octave_idx_type i = 0; i < n; i++)
     retval.xelem (i) = elem (i).string_value ();
 
   return retval;
 }
 
+string_vector
+Cell::string_vector_value (void) const
+{
+  octave_idx_type n = numel ();
+
+  string_vector retval (n);
+
+  for (octave_idx_type i = 0; i < n; i++)
+    retval.xelem (i) = elem (i).string_value ();
+
+  return retval;
+}
+
 Cell
 Cell::index (const octave_value_list& idx_arg, bool resize_ok) const
 {
   Cell retval;
 
   octave_idx_type n = idx_arg.length ();
 
   // If we catch an indexing error in index_vector, we flag an error
diff --git a/libinterp/corefcn/Cell.h b/libinterp/corefcn/Cell.h
--- a/libinterp/corefcn/Cell.h
+++ b/libinterp/corefcn/Cell.h
@@ -71,16 +71,18 @@ public:
 
   Cell (const Cell& c)
     : Array<octave_value> (c) { }
 
   bool is_cellstr (void) const;
 
   Array<std::string> cellstr_value (void) const;
 
+  string_vector string_vector_value (void) const;
+
   using Array<octave_value>::index;
 
   Cell index (const octave_value_list& idx, bool resize_ok = false) const;
 
   using Array<octave_value>::delete_elements;
 
   void delete_elements (const octave_value_list& idx);
 
