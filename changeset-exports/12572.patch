# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1301864158 25200
#      Sun Apr 03 13:55:58 2011 -0700
# Node ID dffd30f1275208def2d019d6b1d5ddf2119e611f
# Parent  bed932910eb929dc0fa098cd0769660bb055a3ad
Add blkmm function to documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2011-04-03  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/linalg.txi: Add blkmm function to documentation.
+
 2011-04-02  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/stats.txi: Add quantile, prctile functions to
 	documentation.
 
 2011-04-02  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/system.txi: Add isdeployed function to documentation.
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -175,16 +175,18 @@ flag a non-Hermitian matrix.
 @DOCSTRING(expm)
 
 @DOCSTRING(logm)
 
 @DOCSTRING(sqrtm)
 
 @DOCSTRING(kron)
 
+@DOCSTRING(blkmm)
+
 @DOCSTRING(syl)
 
 @node Specialized Solvers
 @section Specialized Solvers
 
 @DOCSTRING(bicgstab)
 
 @DOCSTRING(cgs)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2011-04-03  Rik  <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/dot.cc (blkmm): Improve docstring.
+
 2011-04-03  Rik  <octave@nomad.inbox5.com>
 
 	* data.cc (diag): Add documentation for 3-input form of diag.  Add new
 	tests.
 
 2011-04-03  Rik  <octave@nomad.inbox5.com>
 
 	* data.cc (diag): Reverse previous changeset.  Return 3-input form
diff --git a/src/DLD-FUNCTIONS/dot.cc b/src/DLD-FUNCTIONS/dot.cc
--- a/src/DLD-FUNCTIONS/dot.cc
+++ b/src/DLD-FUNCTIONS/dot.cc
@@ -237,27 +237,27 @@ but avoids forming a temporary array and
 }
 
 /*
 
 */
 
 DEFUN_DLD (blkmm, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Loadable Function} {} blkmm (@var{x}, @var{y})\n\
+@deftypefn {Loadable Function} {} blkmm (@var{A}, @var{B})\n\
 Compute products of matrix blocks.  The blocks are given as\n\
-2-dimensional subarrays of the arrays @var{x}, @var{y}.\n\
-The size of @var{x} must have the form @code{[m,k,@dots{}]} and\n\
-size of @var{y} must be @code{[k,n,@dots{}]}.  The result is\n\
+2-dimensional subarrays of the arrays @var{A}, @var{B}.\n\
+The size of @var{A} must have the form @code{[m,k,@dots{}]} and\n\
+size of @var{B} must be @code{[k,n,@dots{}]}.  The result is\n\
 then of size @code{[m,n,@dots{}]} and is computed as follows:\n\
 \n\
 @example\n\
 @group\n\
-  for i = 1:prod (size (@var{x})(3:end))\n\
-    @var{z}(:,:,i) = @var{x}(:,:,i) * @var{y}(:,:,i)\n\
+  for i = 1:prod (size (@var{A})(3:end))\n\
+    @var{C}(:,:,i) = @var{A}(:,:,i) * @var{B}(:,:,i)\n\
   endfor\n\
 @end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
 
@@ -330,17 +330,17 @@ then of size @code{[m,n,@dots{}]} and is
                   if (! error_state)
                     F77_XFCN (dmatm3, DMATM3, (m, n, k, np, x.data (), y.data (),
                                                z.fortran_vec ()));
                   retval = z;
                 }
             }
         }
       else
-        error ("blkmm: X and Y dimensions don't match: (%s) and (%s)",
+        error ("blkmm: A and B dimensions don't match: (%s) and (%s)",
                dimx.str ().c_str (), dimy.str ().c_str ());
 
     }
   else
-    error ("blkmm: X and Y must be numeric");
+    error ("blkmm: A and B must be numeric");
 
   return retval;
 }
