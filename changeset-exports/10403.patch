# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1268002907 28800
#      Sun Mar 07 15:01:47 2010 -0800
# Node ID 69ecfbffcf4f16f9562d6ba06609294ffc9590b7
# Parent  6d1e49abf95fabe38446aebad5baed3e565272a6
liboctave/dim-vector.h: New constructor accepting a C array of dimensions.

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-07  Soren Hauberg  <hauberg@gmail.com>
+
+	* dim-vector.h: New constructor accepting a C array of dimensions.
+
 2010-03-05  Jaroslav Hajek  <highegg@gmail.com>
 
 	* MArray.cc (MArray<T>::idx_add_nd): New method.
 	* MArray.h: Declare it.
 
 2010-03-04  Jaroslav Hajek  <highegg@gmail.com>
 
 	* lo-specfun.cc (erfcx, erfcx_impl): New functions.
diff --git a/liboctave/dim-vector.h b/liboctave/dim-vector.h
--- a/liboctave/dim-vector.h
+++ b/liboctave/dim-vector.h
@@ -149,16 +149,23 @@ public:
 
   explicit dim_vector (octave_idx_type r, octave_idx_type c, octave_idx_type p)
     : rep (newrep (3))
   {
     rep[0] = r;
     rep[1] = c;
     rep[2] = p;
   }
+  
+  dim_vector (const octave_idx_type *vec, size_t vec_size)
+    : rep (newrep (vec_size))
+  {
+    for (size_t k = 0; k < vec_size; k++)
+      rep[k] = vec[k];
+  }
 
   octave_idx_type& elem (int i)
   {
 #ifdef BOUNDS_CHECKING
     assert (i >= 0 && i < ndims ());
 #endif
     make_unique ();
     return rep[i];
