# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1382593586 14400
#      Thu Oct 24 01:46:26 2013 -0400
# Node ID 5f2fb93bdc8b42f44bbf78db40511ed392549591
# Parent  d63878346099d1d38a3c0d1ff2591438fc0650c0
maint: Style fixes.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -45,34 +45,41 @@ along with Octave; see the file COPYING.
 #include "sighandlers.h"
 
 #include "welcome-wizard.h"
 #include "resource-manager.h"
 #include "main-window.h"
 #include "octave-gui.h"
 
 
-// custom message handler for filtering some messages from qt
+// Custom message handler for filtering some messages from Qt.
+
 void message_handler (QtMsgType type, const char *msg)
  {
-     switch (type) {
+   switch (type)
+     {
      case QtDebugMsg:
-         if (strcmp(msg,"QFileSystemWatcher: skipping native engine") > 0)
-           break;
-         fprintf(stderr, "Debug: %s\n", msg);
-         break;
+       if (strcmp (msg, "QFileSystemWatcher: skipping native engine") == 0)
+         std::cerr << "Debug: " << msg << std::endl;
+       break;
+
      case QtWarningMsg:
-         fprintf(stderr, "Warning: %s\n", msg);
-         break;
+       std::cerr << "Warning: " << msg << std::endl;
+       break;
+
      case QtCriticalMsg:
-         fprintf(stderr, "Critical: %s\n", msg);
-         break;
+       std::cerr << "Critical: " << msg << std::endl;
+       break;
+
      case QtFatalMsg:
-         fprintf(stderr, "Fatal: %s\n", msg);
-         abort();
+       std::cerr << "Fatal: " << msg << std::endl;
+       abort ();
+
+     default:
+       break;
      }
  }
 
 
 // Dissociate from the controlling terminal, if any.
 
 static void
 dissociate_terminal (void)
@@ -114,17 +121,17 @@ dissociate_terminal (void)
 }
 
 int
 octave_start_gui (int argc, char *argv[], bool fork)
 {
   if (fork)
     dissociate_terminal ();
 
-  qInstallMsgHandler(message_handler);
+  qInstallMsgHandler (message_handler);
 
   QApplication application (argc, argv);
 
   // Set the codec for all strings
   QTextCodec::setCodecForCStrings(QTextCodec::codecForName("UTF-8"));
 
   // install translators for the gui and qt text
   QTranslator gui_tr, qt_tr, qsci_tr;
