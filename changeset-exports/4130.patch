# HG changeset patch
# User jwe
# Date 1035839131 0
#      Mon Oct 28 21:05:31 2002 +0000
# Node ID 7d9bda865012b640f28be1e0096753aca9061020
# Parent  d38de1db36674bc5f273207a1e39afcbcc59b049
[project @ 2002-10-28 21:05:30 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2002-10-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makeconf.in (HAVE_DLOPEN_API, HAVE_SHL_LOAD_API,
+	HAVE_LOADLIBRARY_API): Delete.
+	(do-subst-config-vals): Don't substitute them here.
+
 2002-10-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in (ENABLE_DYNAMIC_LINKING): Rename from
 	WITH_DYNAMIC_LINKING.
 	* Makeconf.in: Likewise.
 	* toplev.cc 
 	* examples/hello.cc: Likewise.  Improve comments.
 
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -45,20 +45,16 @@ RANLIB = @RANLIB@
 LN_S = @LN_S@
 
 RUNTEST = @RUNTEST@
 
 TEXI2DVI = $(top_srcdir)/texi2dvi
 
 DEFAULT_PAGER = @DEFAULT_PAGER@
 
-HAVE_DLOPEN_API = @HAVE_DLOPEN_API@
-HAVE_SHL_LOAD_API = @HAVE_SHL_LOAD_API@
-HAVE_LOADLIBRARY_API = @HAVE_LOADLIBRARY_API@
-
 ENABLE_DYNAMIC_LINKING = @ENABLE_DYNAMIC_LINKING@
 
 STATIC_LIBS = @STATIC_LIBS@
 
 SHARED_LIBS = @SHARED_LIBS@
 SHLEXT = @SHLEXT@
 SHLEXT_VER = @SHLEXT_VER@
 SHLLIB = @SHLLIB@
@@ -385,19 +381,16 @@ echo "making $@ from $<"
   -e "s;%OCTAVE_CONF_F2CFLAGS%;\"${F2CFLAGS}\";" \
   -e "s;%OCTAVE_CONF_F77%;\"${F77}\";" \
   -e "s;%OCTAVE_CONF_FC%;\"${FC}\";" \
   -e "s;%OCTAVE_CONF_FFLAGS%;\"${FFLAGS}\";" \
   -e "s;%OCTAVE_CONF_FFTW_LIBS%;\"${FFTW_LIBS}\";" \
   -e "s;%OCTAVE_CONF_FLIBS%;\"${FLIBS}\";" \
   -e "s;%OCTAVE_CONF_FPICFLAG%;\"${FPICFLAG}\";" \
   -e "s;%OCTAVE_CONF_GLOB_INCFLAGS%;\"${GLOB_INCFLAGS}\";" \
-  -e "s;%OCTAVE_CONF_HAVE_DLOPEN_API%;\"${HAVE_DLOPEN_API}\";" \
-  -e "s;%OCTAVE_CONF_HAVE_LOADLIBRARY_API%;\"${HAVE_LOADLIBRARY_API}\";" \
-  -e "s;%OCTAVE_CONF_HAVE_SHL_LOAD_API%;\"${HAVE_SHL_LOAD_API}\";" \
   -e "s;%OCTAVE_CONF_INCFLAGS%;\"${INCFLAGS}\";" \
   -e "s;%OCTAVE_CONF_INCLUDE_LINK_DEPS%;\"${INCLUDE_LINK_DEPS}\";"\
   -e "s;%OCTAVE_CONF_LD_CXX%;\"${LD_CXX}\";" \
   -e "s;%OCTAVE_CONF_LDFLAGS%;\"${LDFLAGS}\";" \
   -e "s;%OCTAVE_CONF_LD_STATIC_FLAG%;\"${LD_STATIC_FLAG}\";" \
   -e "s;%OCTAVE_CONF_LEX%;\"${LEX}\";" \
   -e "s;%OCTAVE_CONF_LEXLIB%;\"${LEXLIB}\";" \
   -e "s;%OCTAVE_CONF_LFLAGS%;\"${LFLAGS}\";" \
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2721,21 +2721,23 @@ ComplexMatrix::column_max (Array<int>& i
   return result;
 }
 
 // i/o
 
 std::ostream&
 operator << (std::ostream& os, const ComplexMatrix& a)
 {
-//  int field_width = os.precision () + 7;
   for (int i = 0; i < a.rows (); i++)
     {
       for (int j = 0; j < a.cols (); j++)
-	os << " " /* setw (field_width) */ << a.elem (i, j);
+	{
+	  os << " ";
+	  octave_write_complex (os, a.elem (i, j));
+	}
       os << "\n";
     }
   return os;
 }
 
 std::istream&
 operator >> (std::istream& is, ComplexMatrix& a)
 {
@@ -2745,17 +2747,17 @@ operator >> (std::istream& is, ComplexMa
   if (nr < 1 || nc < 1)
     is.clear (std::ios::badbit);
   else
     {
       Complex tmp;
       for (int i = 0; i < nr; i++)
 	for (int j = 0; j < nc; j++)
 	  {
-	    is >> tmp;
+	    tmp = octave_read_complex (is);
 	    if (is)
 	      a.elem (i, j) = tmp;
 	    else
 	      goto done;
 	  }
     }
 
 done:
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,21 @@
+2002-10-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-utils.cc (read_inf_nan_na, octave_read_double,
+	octave_read_complex, octave_write_double, octave_write_complex):
+	New functions.
+	* CMatrix.cc (operator << (std::ostream&, const ComplexMatrix&)):
+	Use octave_write_complex.
+	(operator >> (std::istream&, const ComplexMatrix&)):
+	Use octave_read_complex.
+	* dMatrix.cc (operator << (std::ostream&, double)):
+	Use octave_write_double.
+	(operator >> (std::istream&, double)): Use octave_read_double.
+
 2002-10-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-kpse.c (octave_kpse_clear_dir_cache): Delete.
 	* oct-kpse.h: Delete decl.
 	* pathsearch.cc (dir_path::init): Delete unnecessary call to
 	::octave_kpse_clear_dir_cache.
 
 2002-10-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -2211,22 +2211,23 @@ Matrix::column_max (Array<int>& index) c
     }
 
   return result;
 }
 
 std::ostream&
 operator << (std::ostream& os, const Matrix& a)
 {
-//  int field_width = os.precision () + 7;
-
   for (int i = 0; i < a.rows (); i++)
     {
       for (int j = 0; j < a.cols (); j++)
-	os << " " /* setw (field_width) */ << a.elem (i, j);
+	{
+	  os << " ";
+	  octave_write_double (os, a.elem (i, j));
+	}
       os << "\n";
     }
   return os;
 }
 
 std::istream&
 operator >> (std::istream& is, Matrix& a)
 {
@@ -2236,17 +2237,17 @@ operator >> (std::istream& is, Matrix& a
   if (nr < 1 || nc < 1)
     is.clear (std::ios::badbit);
   else
     {
       double tmp;
       for (int i = 0; i < nr; i++)
 	for (int j = 0; j < nc; j++)
 	  {
-	    is >> tmp;
+	    tmp = octave_read_double (is);
 	    if (is)
 	      a.elem (i, j) = tmp;
 	    else
 	      goto done;
 	  }
     }
 
  done:
diff --git a/liboctave/lo-utils.cc b/liboctave/lo-utils.cc
--- a/liboctave/lo-utils.cc
+++ b/liboctave/lo-utils.cc
@@ -34,16 +34,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "lo-error.h"
+#include "lo-ieee.h"
 #include "lo-mappers.h"
 #include "lo-utils.h"
 
 // Convert X to the nearest integer value.  Should not pass NaN to
 // this function.
 
 int
 NINT (double x)
@@ -170,13 +171,149 @@ octave_fgetl (FILE *f)
   size_t len = retval.length ();
 
   if (retval[len-1] == '\n')
     retval.resize (len-1);
 
   return retval;
 }
 
+static inline double
+read_inf_nan_na (std::istream& is, char c)
+{
+  double d = 0.0;
+
+  switch (c)
+    {
+    case 'i': case 'I':
+      {
+	is >> c;
+	if (c == 'n' || c == 'N')
+	  {
+	    is >> c;
+	    if (c == 'f' || c == 'F')
+	      d = octave_Inf;
+	    else
+	      is.putback (c);
+	  }
+	else
+	  is.putback (c);
+      }
+      break;
+
+    case 'n': case 'N':
+      {
+	is >> c;
+	if (c == 'a' || c == 'A')
+	  {
+	    is >> c;
+	    if (c == 'n' || c == 'N')
+	      d = octave_NaN;
+	    else
+	      {
+		is.putback (c);
+		d = octave_NA;
+	      }
+	  }
+	else
+	  is.putback (c);
+      }
+      break;
+
+    default:
+      abort ();
+    }
+
+  return d;
+}
+
+double
+octave_read_double (std::istream& is)
+{
+  double d = 0.0;
+
+  char c = 0;
+
+  is >> c;
+  switch (c)
+    {
+    case 'i': case 'I':
+    case 'n': case 'N':
+      d = read_inf_nan_na (is, c);
+      break;
+
+    default:
+      is.putback (c);
+      is >> d;
+    }
+
+  return d;
+}
+
+Complex
+octave_read_complex (std::istream& is)
+{
+  double re = 0.0, im = 0.0;
+
+  Complex cx = 0.0;
+
+  char ch = 0;
+
+  is >> ch;
+
+  if (ch == '(')
+    {
+      re = octave_read_double (is);
+      is >> ch;
+
+      if (ch == ',')
+	{
+	  im = octave_read_double (is);
+	  is >> ch;
+
+	  if (ch == ')')
+	    cx = Complex (re, im);
+	  else
+	    is.setstate (std::ios::failbit);
+	}
+      else if (ch == ')')
+	cx = re;
+      else
+	is.setstate (std::ios::failbit);
+    }
+  else
+    {
+      is.putback (ch);
+      cx = octave_read_double (is);
+    }
+
+  return cx;
+
+}
+
+void
+octave_write_double (std::ostream& os, double d)
+{
+  if (lo_ieee_is_NA (d))
+    os << "NA";
+  else if (lo_ieee_isnan (d))
+    os << "NaN";
+  else if (lo_ieee_isinf (d))
+    os << (d < 0 ? "-Inf" : "Inf");
+  else
+    os << d;
+}
+
+void
+octave_write_complex (std::ostream& os, const Complex& c)
+{
+  os << "(";
+  octave_write_double (os, real (c));
+  os << ",";
+  octave_write_double (os, imag (c));
+  os << ")";
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -20,18 +20,21 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #if !defined (octave_liboctave_utils_h)
 #define octave_liboctave_utils_h 1
 
 #include <cstdio>
 
+#include <iostream>
 #include <string>
 
+#include "oct-cmplx.h"
+
 extern int NINT (double x);
 extern double D_NINT (double x);
 
 extern char *strsave (const char *);
 
 extern void octave_putenv (const std::string&, const std::string&);
 
 extern std::string octave_fgets (std::FILE *);
@@ -41,15 +44,21 @@ extern std::string octave_fgetl (std::FI
 extern "C" int octave_gethostname (char *, int);
 
 extern "C" void octave_qsort (void *base, size_t n, size_t size,
 			      int (*cmp) (const void *, const void *));
 
 extern "C" char *oct_strptime (const char *buf, const char *format,
 			       struct tm *tm);
 
+extern double octave_read_double (std::istream& is);
+extern Complex octave_read_complex (std::istream& is);
+
+extern void octave_write_double (std::ostream& os, double d);
+extern void octave_write_complex (std::ostream& os, const Complex& c);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2002-10-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-conf.h.in (OCTAVE_CONF_HAVE_DLOPEN_API,
+	OCTAVE_CONF_HAVE_LOADLIBRARY_API, OCTAVE_CONF_HAVE_SHL_LOAD_API):
+	Delete.
+	* toplev.cc (octave_config_info): Delete them from the struct
+
+	* load-save.cc (read_ascii_data): Use octave_read_double and
+	octave_read_complex so that we handle Inf, NaN, and NA.
+	(read_mat_ascii_data): Likewise.
+	(save_ascii_data): Use octave_write_double andoctave_write_complex.
+
 2002-10-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* toplev.cc (octave_config_info): Rename WITH_DYNAMIC_LINKING to
 	ENABLE_DYNAMIC_LINKING.
 	* oct-conf.h.in: Likewise.
 	* mkbuiltins: Likewise.
 	* fn-cache.cc (file_name_cache_elt::update): Likewise.
 	* Makefile.in: Likewise.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -590,18 +590,17 @@ read_ascii_data (std::istream& is, const
 	  else
 	    ptr = tag;
 	}
       else
 	ptr = tag;
 
       if (strncmp (ptr, "scalar", 6) == 0)
 	{
-	  double tmp;
-	  is >> tmp;
+	  double tmp = octave_read_double (is);
 	  if (is)
 	    tc = tmp;
 	  else
 	    error ("load: failed to load scalar constant");
 	}
       else if (strncmp (ptr, "matrix", 6) == 0)
 	{
 	  int nr = 0;
@@ -624,18 +623,17 @@ read_ascii_data (std::istream& is, const
 	      else
 		panic_impossible ();
 	    }
 	  else
 	    error ("load: failed to extract number of rows and columns");
 	}
       else if (strncmp (ptr, "complex scalar", 14) == 0)
 	{
-	  Complex tmp;
-	  is >> tmp;
+	  Complex tmp = octave_read_complex (is);
 	  if (is)
 	    tc = tmp;
 	  else
 	    error ("load: failed to load complex scalar constant");
 	}
       else if (strncmp (ptr, "complex matrix", 14) == 0)
 	{
 	  int nr = 0;
@@ -2027,17 +2025,17 @@ read_mat_ascii_data (std::istream& is, c
 #ifdef HAVE_SSTREAM
 		  std::istringstream tmp_stream (buf);
 #else
 		  std::istrstream tmp_stream (buf.c_str ());
 #endif
 
 		  for (int j = 0; j < nc; j++)
 		    {
-		      tmp_stream >> d;
+		      d = octave_read_double (tmp_stream);
 
 		      if (tmp_stream)
 			tmp.elem (i, j) = d;
 		      else
 			{
 			  error ("load: failed to read matrix from file `%s'",
 				 filename.c_str ());
 
@@ -4493,20 +4491,23 @@ save_ascii_data (std::ostream& os, const
 	  os.write (X_CAST (char *, tmp), len);
 	  os << "\n";
 	}
     }
   else if (tc.is_range ())
     {
       ascii_save_type (os, "range", mark_as_global);
       Range tmp = tc.range_value ();
-      os << "# base, limit, increment\n"
-	 << tmp.base () << " "
-	 << tmp.limit () << " "
-	 << tmp.inc () << "\n";
+      os << "# base, limit, increment\n";
+      octave_write_double (os, tmp.base ());
+      os << " ";
+      octave_write_double (os, tmp.limit ());
+      os << " ";
+      octave_write_double (os, tmp.inc ());
+      os << "\n";
     }
   else if (tc.is_real_scalar ())
     {
       ascii_save_type (os, "scalar", mark_as_global);
 
       double d = tc.double_value ();
 
       if (strip_nan_and_inf)
@@ -4514,28 +4515,30 @@ save_ascii_data (std::ostream& os, const
 	  if (xisnan (d))
 	    {
 	      error ("only value to plot is NaN");
 	      success = false;
 	    }
 	  else
 	    {
 	      d = xisinf (d) ? (d > 0 ? OCT_RBV : -OCT_RBV) : d;
-	      os << d << "\n";
+	      octave_write_double (os, d);
+	      os << "\n";
 	    }
 	}
       else
 	{
 	  if (! infnan_warned && (xisnan (d) || xisinf (d)))
 	    {
 	      warning ("save: Inf or NaN values may not be reloadable");
 	      infnan_warned = true;
 	    }
 
-	  os << d << "\n";
+	  octave_write_double (os, d);
+	  os << "\n";
 	}
     }
   else if (tc.is_real_matrix ())
     {
       ascii_save_type (os, "matrix", mark_as_global);
 
       os << "# rows: " << tc.rows () << "\n"
 	 << "# columns: " << tc.columns () << "\n";
@@ -4570,28 +4573,30 @@ save_ascii_data (std::ostream& os, const
 	      double re = real (c);
 	      double im = imag (c);
 
 	      re = xisinf (re) ? (re > 0 ? OCT_RBV : -OCT_RBV) : re;
 	      im = xisinf (im) ? (im > 0 ? OCT_RBV : -OCT_RBV) : im;
 
 	      c = Complex (re, im);
 
-	      os << c << "\n";
+	      octave_write_complex (os, c);
+	      os << "\n";
 	    }
 	}
       else
 	{
 	  if (! infnan_warned && (xisnan (c) || xisinf (c)))
 	    {
 	      warning ("save: Inf or NaN values may not be reloadable");
 	      infnan_warned = true;
 	    }
 
-	  os << c << "\n";
+	  octave_write_complex (os, c);
+	  os << "\n";
 	}
     }
   else if (tc.is_complex_matrix ())
     {
       ascii_save_type (os, "complex matrix", mark_as_global);
 
       os << "# rows: " << tc.rows () << "\n"
 	 << "# columns: " << tc.columns () << "\n";
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -139,28 +139,16 @@ Software Foundation, 59 Temple Place - S
 #ifndef OCTAVE_CONF_FPICFLAG
 #define OCTAVE_CONF_FPICFLAG %OCTAVE_CONF_FPICFLAG%
 #endif
 
 #ifndef OCTAVE_CONF_GLOB_INCFLAGS
 #define OCTAVE_CONF_GLOB_INCFLAGS %OCTAVE_CONF_GLOB_INCFLAGS%
 #endif
 
-#ifndef OCTAVE_CONF_HAVE_DLOPEN_API
-#define OCTAVE_CONF_HAVE_DLOPEN_API %OCTAVE_CONF_HAVE_DLOPEN_API%
-#endif
-
-#ifndef OCTAVE_CONF_HAVE_LOADLIBRARY_API
-#define OCTAVE_CONF_HAVE_LOADLIBRARY_API %OCTAVE_CONF_HAVE_LOADLIBRARY_API%
-#endif
-
-#ifndef OCTAVE_CONF_HAVE_SHL_LOAD_API
-#define OCTAVE_CONF_HAVE_SHL_LOAD_API %OCTAVE_CONF_HAVE_SHL_LOAD_API%
-#endif
-
 #ifndef OCTAVE_CONF_INCFLAGS
 #define OCTAVE_CONF_INCFLAGS %OCTAVE_CONF_INCFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_LDFLAGS
 #define OCTAVE_CONF_LDFLAGS %OCTAVE_CONF_LDFLAGS%
 #endif
 
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -674,19 +674,16 @@ specified option.\n\
   m ["F2CFLAGS"] = OCTAVE_CONF_F2CFLAGS;
   m ["F77"] = OCTAVE_CONF_F77;
   m ["FC"] = OCTAVE_CONF_FC;
   m ["FFLAGS"] = OCTAVE_CONF_FFLAGS;
   m ["FFTW_LIBS"] = OCTAVE_CONF_FFTW_LIBS;
   m ["FLIBS"] = OCTAVE_CONF_FLIBS;
   m ["FPICFLAG"] = OCTAVE_CONF_FPICFLAG;
   m ["GLOB_INCFLAGS"] = OCTAVE_CONF_GLOB_INCFLAGS;
-  m ["HAVE_DLOPEN_API"] = OCTAVE_CONF_HAVE_DLOPEN_API;
-  m ["HAVE_LOADLIBRARY_API"] = OCTAVE_CONF_HAVE_LOADLIBRARY_API;
-  m ["HAVE_SHL_LOAD_API"] = OCTAVE_CONF_HAVE_SHL_LOAD_API;
   m ["INCFLAGS"] = OCTAVE_CONF_INCFLAGS;
   m ["LDFLAGS"] = OCTAVE_CONF_LDFLAGS;
   m ["LD_CXX"] = OCTAVE_CONF_LD_CXX;
   m ["LD_STATIC_FLAG"] = OCTAVE_CONF_LD_STATIC_FLAG;
   m ["LEX"] = OCTAVE_CONF_LEX;
   m ["LEXLIB"] = OCTAVE_CONF_LEXLIB;
   m ["LFLAGS"] = OCTAVE_CONF_LFLAGS;
   m ["LIBCRUFT"] = OCTAVE_CONF_LIBCRUFT;
