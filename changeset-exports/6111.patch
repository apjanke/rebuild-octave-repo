# HG changeset patch
# User jwe
# Date 1161917004 0
#      Fri Oct 27 02:43:24 2006 +0000
# Node ID ed81d74118bb1ad919a502849b57a6d28e810b43
# Parent  8e5edd73e5049fd1c9fdfac2c24cd9b750e02112
[project @ 2006-10-27 02:43:23 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2006-10-26  John W. Eaton  <jwe@octave.org>
+
+	* lo-cutils.c (octave_strcasecmp, octave-strncasecmp):
+	Move here from src/cutils.c.
+	* lo-utils.h: Provide decls.
+	* strcasecmp.c: Move here from src/strcasecmp.c.
+	* strncase.c: Move here from src/strncase.c.
+	* Makefile.in (LIBOCTAVE_C_SOURCES): Add them to the list.
+
 2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* kpse.cc [! MSVC]: Don't include win32lib.h.
 
 	* liboctave/Array-C.cc, liboctave/Array-b.cc,
 	liboctave/Array-ch.cc, liboctave/Array-i.cc,
 	liboctave/Array-util.h, liboctave/Array.h, liboctave/CColVector.h,
 	liboctave/CMatrix.h, liboctave/CNDArray.h, liboctave/CRowVector.h,
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -129,17 +129,18 @@ LIBOCTAVE_CXX_SOURCES := Bounds.cc Collo
 	$(MATRIX_SRC) \
 	$(MX_OP_SRC) \
 	$(VX_OP_SRC) \
 	$(SPARSE_MX_OP_SRC)
 
 LIBOCTAVE_C_SOURCES := f2c-main.c filemode.c getopt.c getopt1.c \
 	lo-cieee.c lo-cutils.c mkdir.c oct-getopt.c \
 	randgamma.c randmtzig.c randpoisson.c rename.c \
-	rmdir.c strftime.c strptime.c tempname.c tempnam.c
+	rmdir.c strftime.c strptime.c strcasecmp.c strncase.c \
+	tempname.c tempnam.c \
 
 LIBOCTAVE_SOURCES := $(LIBOCTAVE_CXX_SOURCES) $(LIBOCTAVE_C_SOURCES)
 
 LIBOCT_READLINE_CXX_SOURCES := cmd-edit.cc cmd-hist.cc
 
 LIBOCT_READLINE_C_SOURCES := oct-rl-edit.c oct-rl-hist.c
 
 LIBOCT_READLINE_SOURCES := $(LIBOCT_READLINE_CXX_SOURCES) $(LIBOCT_READLINE_C_SOURCES)
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -88,16 +88,28 @@ gethostname (char *name, int namelen)
   name[namelen] = '\0';
 
   return 0;
 }
 
 #endif
 
 OCTAVE_API int
+octave_strcasecmp (const char *s1, const char *s2)
+{
+  return strcasecmp (s1, s2);
+}
+
+OCTAVE_API int
+octave_strncasecmp (const char *s1, const char *s2, size_t n)
+{
+  return strncasecmp (s1, s2, n);
+}
+
+OCTAVE_API int
 octave_gethostname (char *name, int namelen)
 {
   return gethostname (name, namelen);
 }
 
 #ifdef HAVE_LOADLIBRARY_API
 #include <windows.h>
 
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -50,16 +50,20 @@ extern OCTAVE_API std::string octave_fge
 extern "C" OCTAVE_API int octave_gethostname (char *, int);
 
 extern "C" OCTAVE_API void octave_qsort (void *base, size_t n, size_t size,
 			      int (*cmp) (const void *, const void *));
 
 extern "C" OCTAVE_API char *oct_strptime (const char *buf, const char *format,
 			       struct tm *tm);
 
+extern "C" OCTINTERP_API int octave_strcasecmp (const char *s1, const char *s2);
+
+extern "C" OCTINTERP_API int octave_strncasecmp (const char *s1, const char *s2, size_t n);
+
 extern OCTAVE_API double octave_read_double (std::istream& is);
 extern OCTAVE_API Complex octave_read_complex (std::istream& is);
 
 extern OCTAVE_API void octave_write_double (std::ostream& os, double dval);
 extern OCTAVE_API void octave_write_complex (std::ostream& os, const Complex& cval);
 
 #ifdef HAVE_LOADLIBRARY_API
 #include <windows.h>
diff --git a/liboctave/strcasecmp.c b/liboctave/strcasecmp.c
new file mode 100644
--- /dev/null
+++ b/liboctave/strcasecmp.c
@@ -0,0 +1,53 @@
+/* Copyright (C) 1991, 1992 Free Software Foundation, Inc.
+This file is part of the GNU C Library.
+
+The GNU C Library is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License as
+published by the Free Software Foundation; either version 2 of the
+License, or (at your option) any later version.
+
+The GNU C Library is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+General Public License for more details.
+
+You should have received a copy of the GNU General Public
+License along with the GNU C Library; see the file COPYING.  If
+not, write to the Free Software Foundation, Inc., 51 Franklin Street,
+Fifth Floor, Boston, MA  02110-1301, USA.  */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#ifndef HAVE_STRCASECMP
+
+#include <ctype.h>
+#include <string.h>
+
+/* Compare S1 and S2, ignoring case, returning less than, equal to or
+   greater than zero if S1 is lexiographically less than,
+   equal to or greater than S2.  */
+int
+strcasecmp (const char *s1, const char *s2)
+{
+  register const unsigned char *p1 = (const unsigned char *) s1;
+  register const unsigned char *p2 = (const unsigned char *) s2;
+  unsigned char c1, c2;
+
+  if (p1 == p2)
+    return 0;
+
+  do
+    {
+      c1 = tolower (*p1++);
+      c2 = tolower (*p2++);
+      if (c1 == '\0')
+	break;
+    }
+  while (c1 == c2);
+
+  return c1 - c2;
+}
+
+#endif
diff --git a/liboctave/strncase.c b/liboctave/strncase.c
new file mode 100644
--- /dev/null
+++ b/liboctave/strncase.c
@@ -0,0 +1,53 @@
+/* Copyright (C) 1992 Free Software Foundation, Inc.
+This file is part of the GNU C Library.
+
+The GNU C Library is free software; you can redistribute it and/or
+modify it under the terms of the GNU General Public License as
+published by the Free Software Foundation; either version 2 of the
+License, or (at your option) any later version.
+
+The GNU C Library is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+General Public License for more details.
+
+You should have received a copy of the GNU General Public
+License along with the GNU C Library; see the file COPYING.  If
+not, write to the Free Software Foundation, Inc., 51 Franklin Street,
+Fifth Floor, Boston, MA  02110-1301, USA.  */
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#ifndef HAVE_STRNCASECMP
+
+#include <ctype.h>
+#include <string.h>
+
+/* Compare no more than N characters of S1 and S2,
+   ignoring case, returning less than, equal to or
+   greater than zero if S1 is lexicographically less
+   than, equal to or greater than S2.  */
+int
+strncasecmp (const char *s1, const char *s2, size_t n)
+{
+  register const unsigned char *p1 = (const unsigned char *) s1;
+  register const unsigned char *p2 = (const unsigned char *) s2;
+  unsigned char c1, c2;
+
+  if (p1 == p2 || n == 0)
+    return 0;
+
+  do
+    {
+      c1 = tolower (*p1++);
+      c2 = tolower (*p2++);
+      if (c1 == '\0' || c1 != c2)
+	return c1 - c2;
+    } while (--n > 0);
+
+  return c1 - c2;
+}
+
+#endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 2006-10-26  John W. Eaton  <jwe@octave.org>
 
+	* cutils.c (octave_strcasecmp, octave-strncasecmp):
+	Move to liboctave/lo-cutils.c.
+	* utils.h: Delete decls.
+	* strcasecmp.c: Move to liboctave/strcasecmp.c.
+	* strncase.c: Move to liboctave/strncase.c.
+	* Makefile.in (DIST_SRC): Delete them from the list.
+
 	* bitfcns.cc (bitshift): If A < 0, return -bitshift (-A, N, MASK).
 
 2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* help.cc (display_help_text): Quote sed patterns with ".
 
 	* file-io.cc: Include file-io.h.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -171,20 +171,19 @@ DIST_SRC := Cell.cc bitfcns.cc c-file-pt
 	dynamic-ld.cc error.cc file-io.cc gripes.cc \
 	help.cc input.cc lex.l load-path.cc load-save.cc ls-hdf5.cc \
 	ls-mat-ascii.cc ls-mat4.cc ls-mat5.cc ls-oct-ascii.cc \
 	ls-oct-binary.cc ls-utils.cc main.c mappers.cc matherr.c \
 	mex.cc oct-fstrm.cc oct-hist.cc oct-iostrm.cc oct-map.cc \
 	oct-obj.cc oct-prcstrm.cc oct-procbuf.cc oct-stream.cc \
 	octave.cc zfstream.cc oct-strstrm.cc oct-lvalue.cc pager.cc \
 	parse.y pr-output.cc procstream.cc sighandlers.cc \
-	siglist.c sparse-xdiv.cc sparse-xpow.cc strcasecmp.c \
-	strncase.c strfns.cc symtab.cc syscalls.cc sysdep.cc \
-	token.cc toplev.cc unwind-prot.cc utils.cc variables.cc \
-	xdiv.cc xpow.cc \
+	siglist.c sparse-xdiv.cc sparse-xpow.cc strfns.cc \
+	symtab.cc syscalls.cc sysdep.cc token.cc toplev.cc \
+	unwind-prot.cc utils.cc variables.cc xdiv.cc xpow.cc \
 	$(OV_SRC) \
 	$(PT_SRC)
 
 SOURCES := $(DIST_SRC) $(OP_SRC) $(TI_SRC)
 
 EXTRAS := ov-base-int.cc ov-base-mat.cc ov-base-scalar.cc 
 
 EXTRA_OBJECTS := oct-errno.o octave.o builtins.o ops.o
diff --git a/src/cutils.c b/src/cutils.c
--- a/src/cutils.c
+++ b/src/cutils.c
@@ -109,28 +109,16 @@ octave_usleep (unsigned int useconds)
     if (delay > 0)
       poll (&pfd, 0, delay);
   }
 
 #endif
 }
 
 int
-octave_strcasecmp (const char *s1, const char *s2)
-{
-  return strcasecmp (s1, s2);
-}
-
-int
-octave_strncasecmp (const char *s1, const char *s2, size_t n)
-{
-  return strncasecmp (s1, s2, n);
-}
-
-int
 octave_raw_vsnprintf (char *buf, size_t n, const char *fmt, va_list args)
 {
   return vsnprintf (buf, n, fmt, args);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/strcasecmp.c b/src/strcasecmp.c
deleted file mode 100644
--- a/src/strcasecmp.c
+++ /dev/null
@@ -1,53 +0,0 @@
-/* Copyright (C) 1991, 1992 Free Software Foundation, Inc.
-This file is part of the GNU C Library.
-
-The GNU C Library is free software; you can redistribute it and/or
-modify it under the terms of the GNU General Public License as
-published by the Free Software Foundation; either version 2 of the
-License, or (at your option) any later version.
-
-The GNU C Library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-General Public License for more details.
-
-You should have received a copy of the GNU General Public
-License along with the GNU C Library; see the file COPYING.  If
-not, write to the Free Software Foundation, Inc., 51 Franklin Street,
-Fifth Floor, Boston, MA  02110-1301, USA.  */
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#ifndef HAVE_STRCASECMP
-
-#include <ctype.h>
-#include <string.h>
-
-/* Compare S1 and S2, ignoring case, returning less than, equal to or
-   greater than zero if S1 is lexiographically less than,
-   equal to or greater than S2.  */
-int
-strcasecmp (const char *s1, const char *s2)
-{
-  register const unsigned char *p1 = (const unsigned char *) s1;
-  register const unsigned char *p2 = (const unsigned char *) s2;
-  unsigned char c1, c2;
-
-  if (p1 == p2)
-    return 0;
-
-  do
-    {
-      c1 = tolower (*p1++);
-      c2 = tolower (*p2++);
-      if (c1 == '\0')
-	break;
-    }
-  while (c1 == c2);
-
-  return c1 - c2;
-}
-
-#endif
diff --git a/src/strncase.c b/src/strncase.c
deleted file mode 100644
--- a/src/strncase.c
+++ /dev/null
@@ -1,53 +0,0 @@
-/* Copyright (C) 1992 Free Software Foundation, Inc.
-This file is part of the GNU C Library.
-
-The GNU C Library is free software; you can redistribute it and/or
-modify it under the terms of the GNU General Public License as
-published by the Free Software Foundation; either version 2 of the
-License, or (at your option) any later version.
-
-The GNU C Library is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-General Public License for more details.
-
-You should have received a copy of the GNU General Public
-License along with the GNU C Library; see the file COPYING.  If
-not, write to the Free Software Foundation, Inc., 51 Franklin Street,
-Fifth Floor, Boston, MA  02110-1301, USA.  */
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#ifndef HAVE_STRNCASECMP
-
-#include <ctype.h>
-#include <string.h>
-
-/* Compare no more than N characters of S1 and S2,
-   ignoring case, returning less than, equal to or
-   greater than zero if S1 is lexicographically less
-   than, equal to or greater than S2.  */
-int
-strncasecmp (const char *s1, const char *s2, size_t n)
-{
-  register const unsigned char *p1 = (const unsigned char *) s1;
-  register const unsigned char *p2 = (const unsigned char *) s2;
-  unsigned char c1, c2;
-
-  if (p1 == p2 || n == 0)
-    return 0;
-
-  do
-    {
-      c1 = tolower (*p1++);
-      c2 = tolower (*p2++);
-      if (c1 == '\0' || c1 != c2)
-	return c1 - c2;
-    } while (--n > 0);
-
-  return c1 - c2;
-}
-
-#endif
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -94,20 +94,16 @@ extern OCTINTERP_API char *octave_vsnpri
 extern OCTINTERP_API char *octave_snprintf (const char *fmt, ...);
 
 extern OCTINTERP_API void octave_sleep (double seconds);
 
 extern "C" OCTINTERP_API void octave_sleep (unsigned int seconds);
 
 extern "C" OCTINTERP_API void octave_usleep (unsigned int useconds);
 
-extern "C" OCTINTERP_API int octave_strcasecmp (const char *s1, const char *s2);
-
-extern "C" OCTINTERP_API int octave_strncasecmp (const char *s1, const char *s2, size_t n);
-
 extern "C" OCTINTERP_API int octave_raw_vsnprintf (char *buf, size_t n, const char *fmt,
 				     va_list args);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
