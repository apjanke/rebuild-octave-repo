# HG changeset patch
# User jwe
# Date 976831035 0
#      Thu Dec 14 21:57:15 2000 +0000
# Node ID e63a3a6d779731e50ebb5609a31d0987e27ce2db
# Parent  f751e43de300bbfb4bba3fdf67ea0923f087a114
[project @ 2000-12-14 21:57:14 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,14 @@
+2000-12-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lapack/dgelss.f (DGELSS): Use correct leading dimension for
+	workspace array passed to dgemm and dlacpy.
+	(ZGELSS): Likewise, for calls to zgemm and zlacpy.
+
 2000-07-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (DISTSUBDIRS): New macro.
 	(dist): Use it instead of SUBDIRS.
 
 2000-06-30  Steven G. Johnson  <stevenj@alum.mit.edu>
 
 	* blas-xtra, lapack-xtra: New directories.
diff --git a/libcruft/lapack/dgelss.f b/libcruft/lapack/dgelss.f
--- a/libcruft/lapack/dgelss.f
+++ b/libcruft/lapack/dgelss.f
@@ -486,18 +486,18 @@
             CALL DGEMM( 'T', 'N', M, NRHS, M, ONE, WORK( IL ), LDWORK,
      $                  B, LDB, ZERO, WORK( IWORK ), LDB )
             CALL DLACPY( 'G', M, NRHS, WORK( IWORK ), LDB, B, LDB )
          ELSE IF( NRHS.GT.1 ) THEN
             CHUNK = ( LWORK-IWORK+1 ) / M
             DO 40 I = 1, NRHS, CHUNK
                BL = MIN( NRHS-I+1, CHUNK )
                CALL DGEMM( 'T', 'N', M, BL, M, ONE, WORK( IL ), LDWORK,
-     $                     B( 1, I ), LDB, ZERO, WORK( IWORK ), N )
-               CALL DLACPY( 'G', M, BL, WORK( IWORK ), N, B( 1, I ),
+     $                     B( 1, I ), LDB, ZERO, WORK( IWORK ), M )
+               CALL DLACPY( 'G', M, BL, WORK( IWORK ), M, B( 1, I ),
      $                      LDB )
    40       CONTINUE
          ELSE
             CALL DGEMV( 'T', M, M, ONE, WORK( IL ), LDWORK, B( 1, 1 ),
      $                  1, ZERO, WORK( IWORK ), 1 )
             CALL DCOPY( M, WORK( IWORK ), 1, B( 1, 1 ), 1 )
          END IF
 *
diff --git a/libcruft/lapack/zgelss.f b/libcruft/lapack/zgelss.f
--- a/libcruft/lapack/zgelss.f
+++ b/libcruft/lapack/zgelss.f
@@ -507,18 +507,18 @@
             CALL ZGEMM( 'C', 'N', M, NRHS, M, CONE, WORK( IL ), LDWORK,
      $                  B, LDB, CZERO, WORK( IWORK ), LDB )
             CALL ZLACPY( 'G', M, NRHS, WORK( IWORK ), LDB, B, LDB )
          ELSE IF( NRHS.GT.1 ) THEN
             CHUNK = ( LWORK-IWORK+1 ) / M
             DO 40 I = 1, NRHS, CHUNK
                BL = MIN( NRHS-I+1, CHUNK )
                CALL ZGEMM( 'C', 'N', M, BL, M, CONE, WORK( IL ), LDWORK,
-     $                     B( 1, I ), LDB, CZERO, WORK( IWORK ), N )
-               CALL ZLACPY( 'G', M, BL, WORK( IWORK ), N, B( 1, I ),
+     $                     B( 1, I ), LDB, CZERO, WORK( IWORK ), M )
+               CALL ZLACPY( 'G', M, BL, WORK( IWORK ), M, B( 1, I ),
      $                      LDB )
    40       CONTINUE
          ELSE
             CALL ZGEMV( 'C', M, M, CONE, WORK( IL ), LDWORK, B( 1, 1 ),
      $                  1, CZERO, WORK( IWORK ), 1 )
             CALL ZCOPY( M, WORK( IWORK ), 1, B( 1, 1 ), 1 )
          END IF
 *
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -1181,17 +1181,17 @@ Matrix::lssolve (const Matrix& b, int& i
     (*current_liboctave_error_handler)
       ("matrix dimension mismatch in solution of least squares problem");
   else
     {
       Matrix atmp = *this;
       double *tmp_data = atmp.fortran_vec ();
 
       int nrr = m > n ? m : n;
-      Matrix result (nrr, nrhs);
+      Matrix result (nrr, nrhs, 0.0);
 
       for (int j = 0; j < nrhs; j++)
 	for (int i = 0; i < m; i++)
 	  result.elem (i, j) = b.elem (i, j);
 
       double *presult = result.fortran_vec ();
 
       int len_s = m < n ? m : n;
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2000-12-13   Teemu Ikonen  <tpikonen@pcu.helsinki.fi>
+
+        * polynomial/deconv.m: For compatibility with Matlab, don't reduce
+	  result polynomials.
+
 2000-12-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* image/saveimage.m: Don't try to create rawbit image.
 
 2000-11-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (bin-dist): Pass -C to $(MAKE), not -c.
 
diff --git a/scripts/polynomial/deconv.m b/scripts/polynomial/deconv.m
--- a/scripts/polynomial/deconv.m
+++ b/scripts/polynomial/deconv.m
@@ -52,20 +52,16 @@ function [b, r] = deconv (y, a)
   if (ly > la)
     b = filter (y, a, [1, (zeros (1, ly - la))]);
   elseif (ly == la)
     b = filter (y, a, 1);
   else
     b = 0;
   endif
 
-  b = polyreduce (b);
-
   lc = la + length (b) - 1;
   if (ly == lc)
     r = y - conv (a, b);
   else
     r = [(zeros (1, lc - ly)), y] - conv (a, b);
   endif
 
-  r = polyreduce (r);
-
 endfunction
