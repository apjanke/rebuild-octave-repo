# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1511460760 0
#      Thu Nov 23 18:12:40 2017 +0000
# Node ID 3981e3a11150d8dd5872fb31c874b192273f9045
# Parent  48e7efceb427d60219425caa93321ae045b535d6
eps: error if input is not of floating point type

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -4516,21 +4516,23 @@ type and may be either @qcode{"double"} 
   if (args.length () == 1 && ! args(0).is_string ())
     {
       octave_value arg0 = args(0);
       if (arg0.is_single_type ())
         {
           FloatNDArray epsval = eps (arg0.float_array_value ());
           retval = epsval;
         }
-      else
+      else if (arg0.is_double_type ())
         {
           NDArray epsval = eps (arg0.array_value ());
           retval = epsval;
         }
+      else
+        error ("eps: X must be of a floating point type");
     }
   else
     retval = fill_matrix (args, std::numeric_limits<double>::epsilon (),
                           std::numeric_limits<float>::epsilon (), "eps");
 
   return retval;
 }
 
@@ -4552,17 +4554,17 @@ type and may be either @qcode{"double"} 
 %!assert (eps (realmax ("single")), single (2^104))
 %!assert (eps (single (0)), single (2^(-149)))
 %!assert (eps (realmin ("single")/2), single (2^(-149)))
 %!assert (eps (realmin ("single")/16), single (2^(-149)))
 %!assert (eps (single (Inf)), single (NaN))
 %!assert (eps (single (NaN)), single (NaN))
 %!assert (eps (single ([1/2 1 2 realmax("single") 0 realmin("single")/2 realmin("single")/16 Inf NaN])),
 %!             single ([2^(-24) 2^(-23) 2^(-22) 2^104 2^(-149) 2^(-149) 2^(-149) NaN NaN]))
-
+%!error <X must be of a floating point type> eps (uint8 ([0 1 2]))
 */
 
 DEFUN (pi, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} pi
 @deftypefnx {} {} pi (@var{n})
 @deftypefnx {} {} pi (@var{n}, @var{m})
 @deftypefnx {} {} pi (@var{n}, @var{m}, @var{k}, @dots{})
