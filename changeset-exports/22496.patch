# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1473954974 25200
#      Thu Sep 15 08:56:14 2016 -0700
# Node ID d7931cb69486bde3a23d5b913deb6ddbab58e2af
# Parent  ad815427f376d1efe883f64340f3c0f09f1757f3
strcat: trim trailing whitespace when called with one character array (bug #49094)

* strcat.m: Trim trailing whitespace when called with one character array.
Ensure that numeric array is returned as character array.  Add %!tests.

diff --git a/scripts/strings/strcat.m b/scripts/strings/strcat.m
--- a/scripts/strings/strcat.m
+++ b/scripts/strings/strcat.m
@@ -79,17 +79,23 @@
 
 ## Author: jwe
 
 function st = strcat (varargin)
 
   if (nargin == 0)
     st = "";
   elseif (nargin == 1)
-    st = varargin{1};
+    if (iscellstr (varargin{1}))
+      st = varargin{1};
+    elseif (isreal (varargin{1}) || ischar (varargin{1}))
+      st = char (cellstr (varargin{1}));
+    else
+      error ("strcat: inputs must be strings or cells of strings");
+    endif
   else
     ## Convert to cells of strings
     uo = "uniformoutput";
     reals = cellfun ("isreal", varargin);
     if (any (reals))
       varargin(reals) = cellfun ("char", varargin(reals), uo, false);
     endif
     chars = cellfun ("isclass", varargin, "char");
@@ -139,13 +145,18 @@ endfunction
 
 ## test for scalar strings with vector strings
 %!assert (strcat (["a"; "b"], "c"), ["ac"; "bc"])
 
 ## test with cells with strings of differing lengths
 %!assert (all (strcmp (strcat ({"a", "bb"}, "ccc"), {"accc", "bbccc"})))
 %!assert (all (strcmp (strcat ("a", {"bb", "ccc"}), {"abb", "accc"})))
 
+## test with a single string or cell input
+%!assert <49094> (strcat ("foo    "), "foo")
+%!assert <49094> (strcat ({"foo"}), {"foo"})
+
+%!assert (strcat (1), char (1))
 %!assert (strcat (1, 2), strcat (char (1), char (2)))
 %!assert (strcat ("", 2), strcat ([], char (2)))
 
 %!assert (strcat (), "")
 
