# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1310840195 25200
#      Sat Jul 16 11:16:35 2011 -0700
# Node ID 3641167e5b754fb1e8a257ae150ad06578241bd3
# Parent  a44ec6d33cc9dbba16d0803c0eadd8dc05a41494
codesprint: *.cc helper functions do not need tests

* __contourc__.cc, __delaunayn__.cc, __dsearchn__.cc, __fltk_uigetfile__.cc,
__glpk__.cc, __lin_interpn__.cc, __magick_read__.cc, __pchip_deriv__.cc,
__qp__.cc, __voronoi__.cc: Add %!assert(1) to stop files from reporting no tests

diff --git a/src/DLD-FUNCTIONS/__contourc__.cc b/src/DLD-FUNCTIONS/__contourc__.cc
--- a/src/DLD-FUNCTIONS/__contourc__.cc
+++ b/src/DLD-FUNCTIONS/__contourc__.cc
@@ -328,8 +328,15 @@ Undocumented internal function.\n\
       else
         error ("__contourc__: invalid argument values");
     }
   else
     print_usage ();
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__delaunayn__.cc b/src/DLD-FUNCTIONS/__delaunayn__.cc
--- a/src/DLD-FUNCTIONS/__delaunayn__.cc
+++ b/src/DLD-FUNCTIONS/__delaunayn__.cc
@@ -221,8 +221,15 @@ Undocumented internal function.\n\
     }
 
 #else
   error ("__delaunayn__: not available in this version of Octave");
 #endif
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__dsearchn__.cc b/src/DLD-FUNCTIONS/__dsearchn__.cc
--- a/src/DLD-FUNCTIONS/__dsearchn__.cc
+++ b/src/DLD-FUNCTIONS/__dsearchn__.cc
@@ -103,8 +103,15 @@ Undocumented internal function.\n\
 
           retval(1) = dist;
           retval(0) = idx;
         }
     }
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__fltk_uigetfile__.cc b/src/DLD-FUNCTIONS/__fltk_uigetfile__.cc
--- a/src/DLD-FUNCTIONS/__fltk_uigetfile__.cc
+++ b/src/DLD-FUNCTIONS/__fltk_uigetfile__.cc
@@ -125,9 +125,16 @@ Undocumented internal function.\n\
     }
 
   fc.hide ();
   Fl::flush ();
 
   return retval;
 }
 
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
+
 #endif
diff --git a/src/DLD-FUNCTIONS/__glpk__.cc b/src/DLD-FUNCTIONS/__glpk__.cc
--- a/src/DLD-FUNCTIONS/__glpk__.cc
+++ b/src/DLD-FUNCTIONS/__glpk__.cc
@@ -849,8 +849,15 @@ Undocumented internal function.\n\
 #else
 
   gripe_not_supported ("glpk");
 
 #endif
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__lin_interpn__.cc b/src/DLD-FUNCTIONS/__lin_interpn__.cc
--- a/src/DLD-FUNCTIONS/__lin_interpn__.cc
+++ b/src/DLD-FUNCTIONS/__lin_interpn__.cc
@@ -350,8 +350,15 @@ Undocumented internal function.\n\
             }
         }
 
       retval = lin_interpn<double, NDArray> (n, X, V, Y);
     }
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -526,16 +526,23 @@ function.  Instead use @code{imread}.\n\
 
   error ("imread: image reading capabilities were disabled when Octave was compiled");
 
 #endif
 
   return output;
 }
 
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
+
 #ifdef HAVE_MAGICK
 
 static void
 jpg_settings (std::vector<Magick::Image>& imvec,
               const Octave_map& options,
               bool)
 {
   bool something_set = false;
@@ -912,16 +919,23 @@ function.  Instead use @code{imwrite}.\n
 
   error ("__magick_write__: not available in this version of Octave");
 
 #endif
 
 return retval;
 }
 
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
+
 #ifdef HAVE_MAGICK
 
 template<class T>
 static octave_value
 magick_to_octave_value (const T magick)
 {
   return octave_value (magick);
 }
@@ -1130,16 +1144,23 @@ not be using this function.  Instead use
 
   error ("imfinfo: not available in this version of Octave");
 
 #endif
 
   return retval;
 }
 
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
+
 #undef GET_PARAM
 
 // Determine the file formats supported by GraphicsMagick.  This is
 // called once at the beginning of imread or imwrite to determine
 // exactly which file formats are supported, so error messages can be
 // displayed properly.
 
 DEFUN_DLD (__magick_format_list__, args, ,
@@ -1189,8 +1210,15 @@ Undocumented internal function.\n\
 #else
 
   error ("__magick_format_list__: not available in this version of Octave");
 
 #endif
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__pchip_deriv__.cc b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
--- a/src/DLD-FUNCTIONS/__pchip_deriv__.cc
+++ b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
@@ -142,8 +142,15 @@ Undocumented internal function.\n\
             }
 
           retval = dmat;
         }
     }
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__qp__.cc b/src/DLD-FUNCTIONS/__qp__.cc
--- a/src/DLD-FUNCTIONS/__qp__.cc
+++ b/src/DLD-FUNCTIONS/__qp__.cc
@@ -523,8 +523,15 @@ Undocumented internal function.\n\
       else
         error ("__qp__: invalid arguments");
     }
   else
     print_usage ();
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
diff --git a/src/DLD-FUNCTIONS/__voronoi__.cc b/src/DLD-FUNCTIONS/__voronoi__.cc
--- a/src/DLD-FUNCTIONS/__voronoi__.cc
+++ b/src/DLD-FUNCTIONS/__voronoi__.cc
@@ -243,8 +243,15 @@ Undocumented internal function.\n\
     error ("__voronoi__: qhull failed");
 
 #else
   error ("__voronoi__: not available in this version of Octave");
 #endif
 
   return retval;
 }
+
+/*
+
+## No test needed for internal helper function.
+%!assert (1)
+
+*/
