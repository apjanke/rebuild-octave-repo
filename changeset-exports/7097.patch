# HG changeset patch
# User jwe
# Date 1194024264 0
#      Fri Nov 02 17:24:24 2007 +0000
# Node ID e8c94e473c6861455f34eddc7ae1070ac32524b0
# Parent  81bed50b9feba2e225dc236fee901a65bc0e0ba8
[project @ 2007-11-02 17:24:23 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-11-02  Olli Saarela  <Olli.Saarela@kcl.fi>
+
+	* time/asctime.m, general/structfun.m: Fix broken @examples in
+	help texts.
+
 2007-11-02  Kai Habel  <kai.habel@gmx.de>
 
 	* plot/bar.m, plot/barh.m: Doc fix.
 
 2007-10-31  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Call undo_string_escapes on obj.keylabel.
 
diff --git a/scripts/general/structfun.m b/scripts/general/structfun.m
--- a/scripts/general/structfun.m
+++ b/scripts/general/structfun.m
@@ -37,17 +37,17 @@
 ## must return either a single element which will be concatenated into the
 ## return value. If 'UniformOutput is false, the outputs placed in a structure
 ## with the same fieldnames as the input structure.
 ## 
 ## @example
 ## @group
 ## s.name1 = "John Smith"; 
 ## s.name2 = "Jill Jones"; 
-## structfun (@{x@} regexp (x, '(\w+)$', 'matches')@{1@}, s, 
+## structfun (@@(x) regexp (x, '(\w+)$', 'matches')@{1@}, s, 
 ##            'UniformOutput', false)
 ## @end group
 ## @end example
 ## 
 ## Given the parameter 'ErrorHandler', then @var{errfunc} defines a function to
 ## call in case @var{func} generates an error. The form of the function is
 ## 
 ## @example
diff --git a/scripts/time/asctime.m b/scripts/time/asctime.m
--- a/scripts/time/asctime.m
+++ b/scripts/time/asctime.m
@@ -19,17 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} asctime (@var{tm_struct})
 ## Convert a time structure to a string using the following five-field
 ## format: Thu Mar 28 08:40:14 1996.  For example,
 ##
 ## @example
 ## @group
-## asctime (localtime (time ())
+## asctime (localtime (time ()))
 ##      @result{} "Mon Feb 17 01:15:06 1997\n"
 ## @end group
 ## @end example
 ##
 ## This is equivalent to @code{ctime (time ())}.
 ## @end deftypefn
 
 ## Author: jwe
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2007-11-02  John W. Eaton  <jwe@octave.org>
+
+	* file-io.cc (fopen_mode_to_ios_mode): Use std::ios::app instead
+	of std::ios::ate.
+
+2007-11-02  Olli Saarela  <Olli.Saarela@kcl.fi>
+
+	* input.cc, pr-output.cc, bitfcns.cc, DLD-FUNCTIONS/time.cc:
+        Fix broken @examples in help texts.
+
 2007-10-31  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (Fnorm): Avoid warning about p_val possibly being used
 	uninitialized.
 
 	* version.h (OCTAVE_VERSION): Now 2.9.16+.
 
 2007-10-31  John W. Eaton  <jwe@octave.org>
diff --git a/src/DLD-FUNCTIONS/time.cc b/src/DLD-FUNCTIONS/time.cc
--- a/src/DLD-FUNCTIONS/time.cc
+++ b/src/DLD-FUNCTIONS/time.cc
@@ -183,17 +183,17 @@ localtime (time ())\n\
 DEFUN_DLD (mktime, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} mktime (@var{tm_struct})\n\
 Convert a time structure corresponding to the local time to the number\n\
 of seconds since the epoch.  For example,\n\
 \n\
 @example\n\
 @group\n\
-mktime (localtime (time ())\n\
+mktime (localtime (time ()))\n\
      @result{} 856163706\n\
 @end group\n\
 @end example\n\
 @seealso{strftime, strptime, localtime, gmtime, time, now, date, clock, datenum, datestr, datevec, calendar, weekday}\n\
 @end deftypefn")
 {
   octave_value retval;
 
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -388,17 +388,17 @@ DEFUN (bitshift, args, ,
 @deftypefnx {Built-in Function} {} bitshift (@var{a}, @var{k}, @var{n})\n\
 Return a @var{k} bit shift of @var{n}- digit unsigned\n\
 integers in @var{a}.  A positive @var{k} leads to a left shift.\n\
 A negative value to a right shift.  If @var{n} is omitted it defaults\n\
 to log2(bitmax)+1.\n\
 @var{n} must be in range [1,log2(bitmax)+1] usually [1,33]\n\
 \n\
 @example\n\
-bitshift (eye (3), 1))\n\
+bitshift (eye (3), 1)\n\
 @result{}\n\
 @group\n\
 2 0 0\n\
 0 2 0\n\
 0 0 2\n\
 @end group\n\
 \n\
 bitshift (10, [-2, -1, 0, 1, 2])\n\
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -183,30 +183,30 @@ fopen_mode_to_ios_mode (const std::strin
 	    retval = std::ios::out | std::ios::trunc;
 	  else if (mode == "at")
 	    retval = std::ios::out | std::ios::app;
 	  else if (mode == "r+t")
 	    retval = std::ios::in | std::ios::out;
 	  else if (mode == "w+t")
 	    retval = std::ios::in | std::ios::out | std::ios::trunc;
 	  else if (mode == "a+t")
-	    retval = std::ios::in | std::ios::out | std::ios::ate;
+	    retval = std::ios::in | std::ios::out | std::ios::app;
 	  else if (mode == "rb" || mode == "r")
 	    retval = std::ios::in | std::ios::binary;
 	  else if (mode == "wb" || mode == "w")
 	    retval = std::ios::out | std::ios::trunc | std::ios::binary;
 	  else if (mode == "ab" || mode == "a")
 	    retval = std::ios::out | std::ios::app | std::ios::binary;
 	  else if (mode == "r+b" || mode == "r+")
 	    retval = std::ios::in | std::ios::out | std::ios::binary;
 	  else if (mode == "w+b" || mode == "w+")
 	    retval = (std::ios::in | std::ios::out | std::ios::trunc
 		      | std::ios::binary);
 	  else if (mode == "a+b" || mode == "a+")
-	    retval = (std::ios::in | std::ios::out | std::ios::ate
+	    retval = (std::ios::in | std::ios::out | std::ios::app
 		      | std::ios::binary);
 	  else
 	    ::error ("invalid mode specified");
 	}
     }
 
   return retval;
 }
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1184,17 +1184,17 @@ DEFUN (PS1, args, nargout,
 @deftypefnx {Built-in Function} {@var{old_val} =} PS1 (@var{new_val})\n\
 Query or set the primary prompt string.  When executing interactively,\n\
 Octave displays the primary prompt when it is ready to read a command.\n\
 \n\
 The default value of the primary prompt string is @code{\"\\s:\\#> \"}.\n\
 To change it, use a command like\n\
 \n\
 @example\n\
-octave:13> PS1 = \"\\\\u@@\\\\H> \"\n\
+octave:13> PS1 (\"\\\\u@@\\\\H> \")\n\
 @end example\n\
 \n\
 @noindent\n\
 which will result in the prompt @samp{boris@@kremvax> } for the user\n\
 @samp{boris} logged in on the host @samp{kremvax.kgb.su}.  Note that two\n\
 backslashes are required to enter a backslash into a double-quoted\n\
 character string.\n\
 @xref{Strings}.\n\
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -2727,17 +2727,18 @@ octave_print_internal (std::ostream&, co
 
 DEFUN (rats, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} rats (@var{x}, @var{len})\n\
 Convert @var{x} into a rational approximation represented as a string.\n\
 You can convert the string back into a matrix as follows:\n\
 \n\
 @example\n\
-   eval(['[',rats(hilb(4)),'];'])\n\
+   r = rats(hilb(4));\n\
+   x = str2num(r)\n\
 @end example\n\
 \n\
 The optional second argument defines the maximum length of the string\n\
 representing the elements of @var{x}. By default @var{len} is 9.\n\
 @seealso{format, rat}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -3122,17 +3123,16 @@ Choose between normal @samp{long} (or @s
 @samp{long e} (or @samp{short e}) formats based on the magnitude\n\
 of the number.  For example, with the @samp{short g} format,\n\
 @code{pi .^ [2; 4; 8; 16; 32]} is displayed as\n\
 \n\
 @example\n\
 @group\n\
 ans =\n\
 \n\
-      3.1416\n\
       9.8696\n\
       97.409\n\
       9488.5\n\
   9.0032e+07\n\
   8.1058e+15\n\
 @end group\n\
 @end example\n\
 \n\
@@ -3141,17 +3141,16 @@ ans =\n\
 The same as @samp{format long g} or @samp{format short g} but use an\n\
 uppercase @samp{E} format.  For example, with the @samp{short G} format,\n\
 @code{pi .^ [2; 4; 8; 16; 32]} is displayed as\n\
 \n\
 @example\n\
 @group\n\
 ans =\n\
 \n\
-      3.1416\n\
       9.8696\n\
       97.409\n\
       9488.5\n\
   9.0032E+07\n\
   8.1058E+15\n\
 @end group\n\
 @end example\n\
 \n\
