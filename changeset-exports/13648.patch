# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1314124311 -7200
#      Tue Aug 23 20:31:51 2011 +0200
# Node ID da69cec2459fe06197976c33ff12862feb12cc4b
# Parent  ac3d9480292d941d437e5fd928ee91eb6de3ff85
Renamed OctaveTerminal to TerminalView.

diff --git a/gui/octave-gui.pro b/gui/octave-gui.pro
--- a/gui/octave-gui.pro
+++ b/gui/octave-gui.pro
@@ -54,17 +54,16 @@ mac {
 
 QMAKE_LFLAGS        += $$LFLAGS -lutil $$system(mkoctfile -p RLD_FLAG)
 QMAKE_CXXFLAGS      += $$INCFLAGS
 
 # Files associated with the project:
 SOURCES +=\
         src/lexer/lexeroctavegui.cpp \
         src/MainWindow.cpp \
-    	  src/OctaveTerminal.cpp \
     	  src/VariablesDockWidget.cpp \
     	  src/HistoryDockWidget.cpp \
     	  src/FilesDockWidget.cpp \
     	  src/FileEditorMdiSubWindow.cpp \
     	  src/BrowserWidget.cpp \
     	  src/ImageViewerMdiSubWindow.cpp \
     src/IRCWidget.cpp \
     src/SettingsDialog.cpp \
@@ -74,22 +73,22 @@ SOURCES +=\
     src/backend/OctaveCallbackThread.cpp \
     src/backend/OctaveLink.cpp \
     src/backend/OctaveMainThread.cpp \
     src/qirc/IRCClientImpl.cpp \
     src/terminal/TerminalEmulation.cpp \
     src/terminal/LinuxTerminalEmulation.cpp \
     src/backend/ReadlineAdapter.cpp \
     src/terminal/KPty.cpp \
-    src/terminal/KPtyDevice.cpp
+    src/terminal/KPtyDevice.cpp \
+    src/TerminalView.cpp
 
 HEADERS += \
         src/lexer/lexeroctavegui.h \
     	  src/MainWindow.h \
-    	  src/OctaveTerminal.h \
     	  src/VariablesDockWidget.h \
     	  src/HistoryDockWidget.h \
     	  src/FilesDockWidget.h \
     	  src/FileEditorMdiSubWindow.h \
     	  src/BrowserWidget.h \
     	  src/ImageViewerMdiSubWindow.h \
     src/IRCWidget.h \
     src/SettingsDialog.h \
@@ -99,12 +98,13 @@ HEADERS += \
     src/backend/OctaveLink.h \
     src/backend/OctaveMainThread.h \
     src/qirc/IRCClientInterface.h \
     src/qirc/IRCClientImpl.h \
     src/terminal/TerminalEmulation.h \
     src/terminal/LinuxTerminalEmulation.h \
     src/backend/ReadlineAdapter.h \
     src/terminal/KPtyDevice.h \
-    src/terminal/KPty.h
+    src/terminal/KPty.h \
+    src/TerminalView.h
 
 FORMS += \
     src/SettingsDialog.ui
diff --git a/gui/src/FileEditorMdiSubWindow.cpp b/gui/src/FileEditorMdiSubWindow.cpp
--- a/gui/src/FileEditorMdiSubWindow.cpp
+++ b/gui/src/FileEditorMdiSubWindow.cpp
@@ -237,18 +237,18 @@ FileEditorMdiSubWindow::saveFileAs ()
 }
 
 // handle the run command
 void
 FileEditorMdiSubWindow::runFile ()
 {
   if (m_editor->isModified ())
     saveFile(m_fileName);
-  m_octave->sendText (QString ("run \'%1\'\n").arg (m_fileName));
-  m_octave->setFocus ();
+  m_terminalEmulation->transmitText (QString ("run \'%1\'\n").arg (m_fileName));
+  //m_terminalEmulation->setFocus ();
 }
 
 // toggle bookmark
 void
 FileEditorMdiSubWindow::toggleBookmark ()
 {
   int line,cur;
   m_editor->getCursorPosition(&line,&cur);
@@ -277,21 +277,21 @@ FileEditorMdiSubWindow::prevBookmark ()
   if ( m_editor->markersAtLine(line) && (1 << MARKER_BOOKMARK) )
     line--; // we have a bookmark here, so start search from prev line
   prevline = m_editor->markerFindPrevious(line,(1 << MARKER_BOOKMARK));
   m_editor->setCursorPosition(prevline,0);
 }
 
 // function for setting the already existing lexer from MainWindow
 void
-FileEditorMdiSubWindow::initEditor (OctaveTerminal* terminal,
+FileEditorMdiSubWindow::initEditor (TerminalEmulation* terminalEmulation,
                                     LexerOctaveGui* lexer)
 {
   m_editor->setLexer(lexer);
-  m_octave = terminal; // for sending commands to octave
+  m_terminalEmulation = terminalEmulation; // for sending commands to octave
                        // TODO: make a global commandOctave function?
 }
 
 // TODO: Do we still need tool tips in the status bar? Tool tips are now
 //       shown directly at the theme icons
 void
 FileEditorMdiSubWindow::showToolTipNew ()
 {
diff --git a/gui/src/FileEditorMdiSubWindow.h b/gui/src/FileEditorMdiSubWindow.h
--- a/gui/src/FileEditorMdiSubWindow.h
+++ b/gui/src/FileEditorMdiSubWindow.h
@@ -14,17 +14,17 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef FILEEDITORMDISUBWINDOW_H
 #define FILEEDITORMDISUBWINDOW_H
 
-#include "OctaveTerminal.h"
+#include "TerminalEmulation.h"
 #include <QMdiSubWindow>
 #include <QToolBar>
 #include <QAction>
 #include <QMenuBar>
 #include <QStatusBar>
 #include <QCloseEvent>
 #include <Qsci/qsciscintilla.h>
 // Not available in the Debian repos yet!
@@ -40,17 +40,17 @@ enum MARKER
   };
 
 class FileEditorMdiSubWindow:public QMdiSubWindow
 {
 Q_OBJECT public:
   FileEditorMdiSubWindow (QWidget * parent = 0);
   ~FileEditorMdiSubWindow ();
   void loadFile (QString fileName);
-  void initEditor (OctaveTerminal *terminal, LexerOctaveGui *lexer);
+  void initEditor (TerminalEmulation *terminalEmulation, LexerOctaveGui *lexer);
 
 public slots:
 
   void newFile ();
   void openFile ();
   void saveFile ();
   void saveFile (QString fileName);
   void saveFileAs ();
@@ -69,17 +69,17 @@ protected:
 private:
   int checkFileModified (QString msg);
   void construct ();
   QMenuBar *m_menuBar;
   QToolBar *m_toolBar;
   QsciScintilla *m_editor;
   QStatusBar *m_statusBar;
   QString m_fileName;
-  OctaveTerminal* m_octave;
+  TerminalEmulation* m_terminalEmulation;
   QAction* m_copyAction;
   QAction* m_cutAction;
   int m_markerBookmark;
   bool m_modified;
 
 private slots:
   void handleModificationChanged(bool modified);
   void handleMarginClicked(int line, int margin, Qt::KeyboardModifiers state);
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -91,17 +91,17 @@ MainWindow::openEditorFile (QString file
        keywordList = keyword.split(QRegExp("\\s+"));  // split into single strings
        int i;
        for ( i=0; i<keywordList.size(); i++ )
          {
            m_lexerAPI->add(keywordList.at(i));  // add single strings to the API
          }
        m_lexerAPI->prepare();           // prepare API info ... this make take some time
     }
-  subWindow->initEditor(m_octaveTerminal,m_lexer);   // init necessary informations for editor
+  subWindow->initEditor(m_terminalView->terminalEmulation(), m_lexer);   // init necessary informations for editor
 
   if ( fileName.isEmpty() )
     subWindow->newFile ();
   else
     subWindow->loadFile (fileName);
 }
 
 
@@ -118,42 +118,42 @@ MainWindow::openWebPage (QString url)
 }
 
 void
 MainWindow::handleSaveWorkspaceRequest ()
 {
   QString selectedFile =
     QFileDialog::getSaveFileName (this, tr ("Save Workspace"),
                                   ResourceManager::instance ()->homePath ());
-  m_octaveTerminal->sendText (QString ("save \'%1\'\n").arg (selectedFile));
-  m_octaveTerminal->setFocus ();
+  m_terminalView->sendText (QString ("save \'%1\'\n").arg (selectedFile));
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleLoadWorkspaceRequest ()
 {
   QString selectedFile =
     QFileDialog::getOpenFileName (this, tr ("Load Workspace"),
                                   ResourceManager::instance ()->homePath ());
-  m_octaveTerminal->sendText (QString ("load \'%1\'\n").arg (selectedFile));
-  m_octaveTerminal->setFocus ();
+  m_terminalView->sendText (QString ("load \'%1\'\n").arg (selectedFile));
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleClearWorkspaceRequest ()
 {
-  m_octaveTerminal->sendText ("clear\n");
-  m_octaveTerminal->setFocus ();
+  m_terminalView->sendText ("clear\n");
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleCommandDoubleClicked (QString command)
 {
-  m_octaveTerminal->sendText (command);
-  m_octaveTerminal->setFocus ();
+  m_terminalView->sendText (command);
+  m_terminalView->setFocus ();
 }
 
 void
 MainWindow::handleUnreadMessages (bool yes)
 {
   if (yes)
     {
       m_ircWidgetSubWindow
@@ -276,32 +276,32 @@ MainWindow::construct ()
   m_variablesDockWidget->setStatusTip (tr ("View the variables in the active workspace."));
   m_historyDockWidget = new HistoryDockWidget (this);
   m_historyDockWidget->setStatusTip (tr ("Browse and search the command history."));
   m_filesDockWidget = new FilesDockWidget (this);
   m_filesDockWidget->setStatusTip (tr ("Browse your files."));
   m_statusBar = new QStatusBar (this);
 
   // Setup essential MDI Windows.
-  m_octaveTerminal = new OctaveTerminal (this);
+  m_terminalView = new TerminalView (this);
   m_documentationWidget = new BrowserWidget (this);
   m_ircWidget = new IRCWidget (this);
 
   // Octave Terminal subwindow.
-  m_octaveTerminalSubWindow = new NonClosableMdiSubWindow (this);
-  m_octaveTerminalSubWindow->setWidget (m_octaveTerminal);
-  m_centralMdiArea->addSubWindow (m_octaveTerminalSubWindow, Qt::WindowTitleHint | Qt::WindowMinMaxButtonsHint);
+  m_terminalViewSubWindow = new NonClosableMdiSubWindow (this);
+  m_terminalViewSubWindow->setWidget (m_terminalView);
+  m_centralMdiArea->addSubWindow (m_terminalViewSubWindow, Qt::WindowTitleHint | Qt::WindowMinMaxButtonsHint);
 
-  m_octaveTerminalSubWindow->setObjectName ("OctaveTerminalSubWindow");
-  m_octaveTerminalSubWindow->setWindowTitle (tr ("Terminal"));
-  m_octaveTerminalSubWindow
+  m_terminalViewSubWindow->setObjectName ("OctaveTerminalSubWindow");
+  m_terminalViewSubWindow->setWindowTitle (tr ("Terminal"));
+  m_terminalViewSubWindow
       ->setWindowIcon (ResourceManager::instance ()->icon (ResourceManager::Terminal));
-  m_octaveTerminalSubWindow->setFocusProxy (m_octaveTerminal);
-  m_octaveTerminalSubWindow->setStatusTip (tr ("Enter your commands into the Octave terminal."));
-  m_octaveTerminalSubWindow->setMinimumSize (300, 300);
+  m_terminalViewSubWindow->setFocusProxy (m_terminalView);
+  m_terminalViewSubWindow->setStatusTip (tr ("Enter your commands into the Octave terminal."));
+  m_terminalViewSubWindow->setMinimumSize (300, 300);
 
   // Documentation subwindow.
   m_documentationWidgetSubWindow = new NonClosableMdiSubWindow (this);
   m_documentationWidgetSubWindow->setWidget (m_documentationWidget);
   m_centralMdiArea->addSubWindow (m_documentationWidgetSubWindow, Qt::WindowTitleHint | Qt::WindowMinMaxButtonsHint);
 
   m_documentationWidgetSubWindow->setObjectName ("DocumentationWidgetSubWindow");
   m_documentationWidgetSubWindow->setWindowTitle (tr ("Documentation"));
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -24,17 +24,17 @@
 #include <QTabWidget>
 #include <QMdiArea>
 #include <QStatusBar>
 #include <QToolBar>
 #include <QQueue>
 #include <Qsci/qsciapis.h>
 #include <QMdiSubWindow>
 #include "ResourceManager.h"
-#include "OctaveTerminal.h"
+#include "TerminalView.h"
 #include "OctaveLink.h"
 #include "VariablesDockWidget.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "BrowserWidget.h"
 #include "IRCWidget.h"
 #include "lexer/lexeroctavegui.h"
 
@@ -58,19 +58,19 @@ protected:
   * Represents the main window.
   */
 class MainWindow:public QMainWindow
 {
 Q_OBJECT public:
   MainWindow (QWidget * parent = 0);
   ~MainWindow ();
 
-  OctaveTerminal *octaveTerminal ()
+  TerminalView *terminalView ()
   {
-    return m_octaveTerminal;
+    return m_terminalView;
   }
   VariablesDockWidget *variablesDockWidget ()
   {
     return m_variablesDockWidget;
   }
   HistoryDockWidget *historyDockWidget ()
   {
     return m_historyDockWidget;
@@ -107,21 +107,21 @@ protected:
   void writeSettings ();
 
 private:
   void construct ();
   void establishOctaveLink ();
   QMdiArea *m_centralMdiArea;
 
   // Mdi sub windows.
-  OctaveTerminal *m_octaveTerminal;
+  TerminalView *m_terminalView;
   BrowserWidget *m_documentationWidget;
   IRCWidget *m_ircWidget;
 
-  NonClosableMdiSubWindow *m_octaveTerminalSubWindow;
+  NonClosableMdiSubWindow *m_terminalViewSubWindow;
   NonClosableMdiSubWindow *m_documentationWidgetSubWindow;
   NonClosableMdiSubWindow *m_ircWidgetSubWindow;
 
   // Dock widgets.
   VariablesDockWidget *m_variablesDockWidget;
   HistoryDockWidget *m_historyDockWidget;
   FilesDockWidget *m_filesDockWidget;
 
diff --git a/gui/src/OctaveTerminal.cpp b/gui/src/TerminalView.cpp
rename from gui/src/OctaveTerminal.cpp
rename to gui/src/TerminalView.cpp
--- a/gui/src/OctaveTerminal.cpp
+++ b/gui/src/TerminalView.cpp
@@ -11,49 +11,49 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
-#include "OctaveTerminal.h"
+#include "TerminalView.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QStringListModel>
 #include <QStringList>
 #include <QScrollBar>
 
-OctaveTerminal::OctaveTerminal (QWidget * parent)
+TerminalView::TerminalView (QWidget * parent)
   : QPlainTextEdit (parent), Terminal ()
 {
     setSizePolicy (QSizePolicy::Expanding, QSizePolicy::Expanding);
     m_terminalEmulation = TerminalEmulation::newTerminalEmulation (this);
 }
 
-OctaveTerminal::~OctaveTerminal ()
+TerminalView::~TerminalView ()
 {
 }
 
 QTextCursor
-OctaveTerminal::textCursor ()
+TerminalView::textCursor ()
 {
   return QPlainTextEdit::textCursor();
 }
 
 void
-OctaveTerminal::setTextCursor (const QTextCursor &cursor)
+TerminalView::setTextCursor (const QTextCursor &cursor)
 {
   QPlainTextEdit::setTextCursor (cursor);
 }
 
 void
-OctaveTerminal::bell ()
+TerminalView::bell ()
 {
 
 }
 
 void
-OctaveTerminal::keyPressEvent (QKeyEvent * keyEvent)
+TerminalView::keyPressEvent (QKeyEvent * keyEvent)
 {
   m_terminalEmulation->processKeyEvent (keyEvent);
 }
diff --git a/gui/src/OctaveTerminal.h b/gui/src/TerminalView.h
rename from gui/src/OctaveTerminal.h
rename to gui/src/TerminalView.h
--- a/gui/src/OctaveTerminal.h
+++ b/gui/src/TerminalView.h
@@ -16,22 +16,27 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef OCTAVETERMINAL_H
 #define OCTAVETERMINAL_H
 #include <QPlainTextEdit>
 #include "TerminalEmulation.h"
 
-class OctaveTerminal:public QPlainTextEdit, Terminal
+class TerminalView:public QPlainTextEdit, Terminal
 {
 Q_OBJECT
 public:
-  OctaveTerminal (QWidget * parent = 0);
-  ~OctaveTerminal ();
+  TerminalView (QWidget * parent = 0);
+  ~TerminalView ();
+
+  TerminalEmulation *terminalEmulation ()
+  {
+    return m_terminalEmulation;
+  }
 
   void sendText (QString text) { m_terminalEmulation->transmitText(text); }
 
   // Terminal Interface
   QTextCursor textCursor();
   void setTextCursor (const QTextCursor &cursor);
   void bell ();
 
