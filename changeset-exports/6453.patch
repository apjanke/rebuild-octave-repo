# HG changeset patch
# User jwe
# Date 1174918524 0
#      Mon Mar 26 14:15:24 2007 +0000
# Node ID 4067a8caff18d328988971aacce0d1a824e66d86
# Parent  7e90124eddba7ba7bbd5c388a8244dea9a437d33
[project @ 2007-03-26 14:15:24 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2007-03-26  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m (get_data_limits): New function.
+	Check for Inf too.
+	(__go_draw_axes__): Use get_data_limits.
+
 2007-03-24  John W. Eaton  <jwe@octave.org>
 
 	* plot/drawnow.m: If GNUTERM is set to wxt in the environment,
 	send terminal setting command with title option to plot stream.
 
 	* plot/legend.m: Correctly increment index into list of children..
 
 2007-03-23  John W. Eaton  <jwe@octave.org>
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -221,19 +221,19 @@ function __go_draw_axes__ (h, plot_strea
     zautoscale = strcmp (axis_obj.zlimmode, "auto");
 
     kids = axis_obj.children;
 
     nd = 0;
     data_idx = 0;
     data = cell ();
 
-    xminp = yminp = zminp = Inf;
-    xmax = ymax = zmax = -Inf;
-    xmin = ymin = zmin = Inf;
+    xminp = yminp = zminp = realmax ();
+    xmax = ymax = zmax = -realmax ();
+    xmin = ymin = zmin = realmax ();
 
     palette_set = 0;
 
     [view_cmd, view_fcn, view_zoom] = image_viewer ();
     use_gnuplot_for_images = (ischar (view_fcn)
 			      && strcmp (view_fcn, "gnuplot_internal"));
 
     ximg_data = {};
@@ -366,29 +366,23 @@ function __go_draw_axes__ (h, plot_strea
 	  endif
 	  parametric(i) = true;
 	  if (! isempty (obj.zdata))
 	    nd = 3;
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    zdat = obj.zdata(:);
 	    if (xautoscale)
-	      xmin = min (xmin, min (xdat));
-	      xmax = max (xmax, max (xdat));
-	      xminp = min (xminp, min (xdat(xdat>0)));
+	      [xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, xdat);
 	    endif
 	    if (yautoscale)
-	      ymin = min (ymin, min (ydat));
-	      ymax = max (ymax, max (ydat));
-	      yminp = min (yminp, min (ydat(ydat>0)));
+	      [ymin, ymax, yminp] = get_data_limits (ymin, ymax, yminp, ydat);
 	    endif
 	    if (zautoscale)
-	      zmin = min (zmin, min (zdat));
-	      zmax = max (zmax, max (zdat));
-	      zminp = min (zminp, min (zdat(zdat>0)));
+	      [zmin, zmax, zminp] = get_data_limits (zmin, zmax, zminp, zdat);
 	    endif
 	    data{data_idx} = [xdat, ydat, zdat]';
 	    usingclause{data_idx} = "using ($1):($2):($3)";
 	    fputs (plot_stream, "set parametric;\n");
 	    fputs (plot_stream, "unset hidden3d;\n");
 	    fputs (plot_stream, "set style data lines;\n");
 	    fputs (plot_stream, "set surface;\n");
 	    fputs (plot_stream, "unset contour;\n");
@@ -415,72 +409,60 @@ function __go_draw_axes__ (h, plot_strea
 	    if (! isempty (xudat))
 	      xudat = xudat(:);
 	    endif
 	    if (yerr)
 	      ylo = ydat-ldat;
 	      yhi = ydat+udat;
 	      if (yautoscale)
 		ty = [ydat; ylo; yhi];
-		ymin = min (ymin, min (ty));
-		ymax = max (ymax, max (ty));
-		yminp = min (yminp, min (ty(ty>0)));
+		[ymin, ymax, yminp] = get_data_limits (ymin, ymax, yminp, ty);
 	      endif
 	      if (xerr)
 		xlo = xdat-xldat;
 		xhi = xdat+xudat;
 		if (xautoscale)
 		  tx = [xdat; xlo; xhi];
-		  xmin = min (xmin, min (tx));
-		  xmax = max (xmax, max (tx));
-		  xminp = min (xminp, min (tx(tx>0)));
+		  [xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, tx);
 		endif
 		data{data_idx} = [xdat, ydat, xlo, xhi, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4):($5):($6)";
 		withclause{data_idx} = sprintf ("with xyerrorbars linestyle %d",
 						data_idx);
 	      else
 		if (xautoscale)
-		  xmin = min (xmin, min (xdat));
-		  xmax = max (xmax, max (xdat));
-		  xminp = min (xminp, min (tx(tx>0)));
+		  [xmin, xmax, xminp] = get_data_limits (xmin, xmax,
+							 xminp, xdat, tx);
 		endif
 		data{data_idx} = [xdat, ydat, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4)";
 		withclause{data_idx} = sprintf ("with yerrorbars linestyle %d",
 						data_idx);
 	      endif
 	    elseif (xerr)
 	      xlo = xdat-xldat;
 	      xhi = xdat+xudat;
 	      if (xautoscale)
 		tx = [xdat; xlo; xhi];
-		xmin = min (xmin, min (tx));
-		xmax = max (xmax, max (tx));
-		xminp = min (xminp, min (tx(tx>0)));
+		[xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, tx);
 	      endif
 	      if (yautoscale)
-		ymin = min (ymin, min (ydat));
-		ymax = max (ymax, max (ydat));
-		yminp = min (yminp, min (ty(ty>0)));
+		[ymin, ymax, yminp] = get_data_limits (ymin, ymax,
+						       yminp, ydat, ty);
 	      endif
 	      data{data_idx} = [xdat, ydat, xlo, xhi]';
 	      usingclause{data_idx} = "using ($1):($2):($3):($4)";
 	      withclause{data_idx} = sprintf ("with xerrorbars linestyle %d",
 					      data_idx);
 	    else
 	      if (xautoscale)
-		xmin = min (xmin, min (xdat));
-		xmax = max (xmax, max (xdat));
-		xminp = min (xminp, min (xdat(xdat>0)));
+		[xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, xdat);
 	      endif
 	      if (yautoscale)
-		ymin = min (ymin, min (ydat));
-		ymax = max (ymax, max (ydat));
-		yminp = min (yminp, min (ydat(ydat>0)));
+		[ymin, ymax, yminp] = get_data_limits (ymin, ymax, yminp, ydat);
 	      endif
 	      data{data_idx} = [xdat, ydat]';
 	      usingclause{data_idx} = "using ($1):($2)";
 	    endif
 	  endif
 
 	case "surface"
 	  data_idx++;
@@ -501,31 +483,25 @@ function __go_draw_axes__ (h, plot_strea
 	  endif
 	  parametric(i) = false;
 	  nd = 3;
 	  xdat = obj.xdata;
 	  ydat = obj.ydata;
 	  zdat = obj.zdata;
 	  if (xautoscale)
 	    tx = xdat(:);
-	    xmin = min (xmin, min (tx));
-	    xmax = max (xmax, max (tx));
-	    xminp = min (xminp, min (tx(tx>0)));
+	    [xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, tx);
 	  endif
 	  if (yautoscale)
 	    ty = ydat(:);
-	    ymin = min (ymin, min (ty));
-	    ymax = max (ymax, max (ty));
-	    yminp = min (yminp, min (ty(ty>0)));
+	    [ymin, ymax, yminp] = get_data_limits (ymin, ymax, yminp, ty);
 	  endif
 	  if (zautoscale)
 	    tz = zdat(:);
-	    zmin = min (zmin, min (tz));
-	    zmax = max (zmax, max (tz));
-	    zminp = min (zminp, min (tz(tz>0)));
+	    [zmin, zmax, zminp] = get_data_limits (zmin, zmax, zminp, tz);
 	  endif
 	  err = false;
 	  if (isvector (xdat) && isvector (ydat) && ismatrix (zdat))
 	    if (rows (zdat) == length (ydat) && columns (zdat) == length (xdat))
               [xdat, ydat] = meshgrid (xdat, ydat);
 	    else
               err = true;
 	    endif
@@ -730,16 +706,28 @@ function __go_draw_axes__ (h, plot_strea
     fflush (plot_stream);
 
   else
     print_usage ();
   endif    
 
 endfunction
 
+function [xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, xdat, tx)
+  xdat = xdat(! isinf (xdat));
+  xmin = min (xmin, min (xdat));
+  xmax = max (xmax, max (xdat));
+  if (nargin == 5)
+    tx = tx(! isinf (xdat) & tx > 0);
+    xminp = min (xminp, min (tx));
+  else
+    xminp = min (xminp, min (xdat(xdat>0)));
+  endif
+endfunction
+
 ## Attempt to make "nice" limits from the actual max and min of the
 ## data.  For log plots, we will also use the smallest strictly positive
 ## value.
 
 function lim = get_axis_limits (min_val, max_val, min_pos, logscale)
 
   if (logscale)
     if (isinf (min_pos))
