# HG changeset patch
# User jwe
# Date 1057689473 0
#      Tue Jul 08 18:37:53 2003 +0000
# Node ID 252b9162c084f09ceff5239eefb94d580018dc8f
# Parent  3cd9ddde2da2101834c19f34db690d08bda32a28
[project @ 2003-07-08 18:37:53 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2003-07-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* defaults.cc (Vdefault_exec_path): New static variable.
+	(set_default_default_exec_path): New function.
+	(install_defaults): Call it.
+	(exec_path): Use it.
+	(default_exec_path): New function.
+	(symbols_of_defaults): Add DEFVAR for DEFAULT_EXEC_PATH.
+
 2003-07-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* defaults.h.in (OCTAVE_LOCALSTARTUPFILEDIR, OCTAVE_STARTUPFILEDIR):
 	Set values directly instead of constructing them.
 
 2003-06-28  Arno J. Klaassen  <arno@heho.snv.jussieu.fr>
 
 	* toplev.cc (octave_config_info): Key for OCTAVE_CONF_DEFS should
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -61,16 +61,20 @@ std::string Vbin_dir;
 std::string Vinfo_dir;
 std::string Vdata_dir;
 std::string Vlibexec_dir;
 std::string Varch_lib_dir;
 std::string Vlocal_arch_lib_dir;
 std::string Vlocal_ver_arch_lib_dir;
 std::string Vfcn_file_dir;
 
+// The default path that will be searched for programs that we
+// execute (in addition to the user-specified --exec-path).
+static std::string Vdefault_exec_path;
+
 // The path that will be searched for programs that we execute.
 // (--exec-path path)
 std::string Vexec_path;
 
 // Load path specified on command line.
 // (--path path; -p path)
 static std::string Vload_path;
 
@@ -240,16 +244,26 @@ set_default_fcn_file_dir (void)
 
 static void
 set_default_bin_dir (void)
 {
   Vbin_dir = subst_octave_home (OCTAVE_BINDIR);
 }
 
 static void
+set_default_default_exec_path (void)
+{
+  Vdefault_exec_path
+    = Vlocal_ver_arch_lib_dir + std::string (SEPCHAR_STR)
+    + Vlocal_arch_lib_dir + std::string (SEPCHAR_STR)
+    + Varch_lib_dir + std::string (SEPCHAR_STR)
+    + Vbin_dir;
+}
+
+static void
 set_default_exec_path (void)
 {
   std::string octave_exec_path = octave_env::getenv ("OCTAVE_EXEC_PATH");
 
   if (octave_exec_path.empty ())
     {
       std::string shell_path = octave_env::getenv ("PATH");
 
@@ -371,16 +385,18 @@ install_defaults (void)
   set_default_local_arch_lib_dir ();
 
   set_default_local_ver_arch_lib_dir ();
 
   set_default_fcn_file_dir ();
 
   set_default_bin_dir ();
 
+  set_default_default_exec_path ();
+
   set_default_exec_path ();
 
   set_default_path ();
 
   set_default_info_file ();
 
   set_default_info_prog ();
 
@@ -433,56 +449,70 @@ exec_path (void)
     {
       gripe_invalid_value_specified ("EXEC_PATH");
       status = -1;
     }
   else
     {
       Vexec_path = s;
 
-      std::string std_path
-	= Vlocal_ver_arch_lib_dir + std::string	(SEPCHAR_STR)
-	+ Vlocal_arch_lib_dir + std::string (SEPCHAR_STR)
-	+ Varch_lib_dir + std::string (SEPCHAR_STR)
-	+ Vbin_dir;
-
       std::string path;
 
       int eplen = Vexec_path.length ();
 
       if (eplen > 0)
 	{
 	  bool prepend = (Vexec_path[0] == ':');
 	  bool append = (eplen > 1 && Vexec_path[eplen-1] == ':');
 
 	  if (prepend)
 	    {
-	      path = std_path + Vexec_path;
-
-	      if (append)
-		path.append (std_path);
+	      path = Vdefault_exec_path + Vexec_path;
 	    }
 	  else
 	    {
 	      path = Vexec_path;
 
 	      if (append)
-		path.append (std_path);
+		path.append (Vdefault_exec_path);
 	    }
 	}
       else
-	path = std_path;
+	path = Vdefault_exec_path;
 
       octave_env::putenv ("PATH", path);
     }
 
   return status;
 }
 
 static int
+default_exec_path (void)
+{
+  int status = 0;
+
+  std::string s = builtin_string_variable ("DEFAULT_EXEC_PATH");
+
+  if (s.empty ())
+    {
+      gripe_invalid_value_specified ("DEFAULT_EXEC_PATH");
+      status = -1;
+    }
+  else
+    {
+      Vdefault_exec_path = s;
+
+      // Now also update PATH in environment.
+      exec_path ();
+    }
+
+  return status;
+}
+
+static int
 imagepath (void)
 {
   int status = 0;
 
   std::string s = builtin_string_variable ("IMAGEPATH");
 
   if (s.empty ())
     {
@@ -556,17 +586,17 @@ If the environment variable @code{EDITOR
 value is used as the default.  Otherwise, @code{EDITOR} is set to\n\
 @code{\"emacs\"}.\n\
 @end defvr");
 
   DEFVAR (EXEC_PATH, Vexec_path, exec_path,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} EXEC_PATH\n\
 The variable @code{EXEC_PATH} is a colon separated list of directories\n\
-to search when executing subprograms.  Its initial value is taken from\n\
+to search when executing external programs.  Its initial value is taken from\n\
 the environment variable @code{OCTAVE_EXEC_PATH} (if it exists) or\n\
 @code{PATH}, but that value can be overridden by the command line\n\
 argument @code{--exec-path PATH}, or by setting the value of\n\
 @code{EXEC_PATH} in a startup script.  If the value of @code{EXEC_PATH}\n\
 begins (ends) with a colon, the directories\n\
 \n\
 @example\n\
 @group\n\
@@ -578,16 +608,25 @@ begins (ends) with a colon, the director
 @noindent\n\
 are prepended (appended) to @code{EXEC_PATH}, where @var{octave-home}\n\
 is the top-level directory where all of Octave is installed\n\
 (the default value is @file{@value{OCTAVEHOME}}).  If you don't specify\n\
 a value for @code{EXEC_PATH} explicitly, these special directories are\n\
 prepended to your shell path.\n\
 @end defvr");
 
+  DEFVAR (DEFAULT_EXEC_PATH, Vdefault_exec_path, default_exec_path,
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} DEFAULT_EXEC_PATH\n\
+A colon separated list of directories in which to search when executing\n\
+external programs.  The value of this variable is automatically\n\
+substituted for leading, trailing, or doubled colons that appear in the\n\
+built-in variable @code{EXEC_PATH}.\n\
+@end defvr");
+  
   DEFVAR (LOADPATH, Vload_path, loadpath,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} LOADPATH\n\
 A colon separated list of directories in which to search for function\n\
 files.  @xref{Functions and Scripts}.  The value of @code{LOADPATH}\n\
 overrides the environment variable @code{OCTAVE_PATH}.  @xref{Installation}.\n\
 \n\
 @code{LOADPATH} is now handled in the same way as @TeX{} handles\n\
@@ -611,19 +650,19 @@ not a mixture of both.\n\
 @xref{Organization of Functions}, for a description of the function file\n\
 directories that are distributed with Octave.\n\
 @end defvr");
 
   DEFVAR (DEFAULT_LOADPATH, Vdefault_load_path, default_load_path,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} DEFAULT_LOADPATH\n\
 A colon separated list of directories in which to search for function\n\
-files by default.  The value of this variable is also automatically\n\
-substituted for leading, trailing, or doubled colons that appear in the\n\
-built-in variable @code{LOADPATH}.\n\
+files.  The value of this variable is automatically substituted for\n\
+leading, trailing, or doubled colons that appear in the built-in\n\
+variable @code{LOADPATH}.\n\
 @end defvr");
   
   DEFVAR (IMAGEPATH, OCTAVE_IMAGEPATH, imagepath,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} IMAGEPATH\n\
 A colon separated list of directories in which to search for image\n\
 files.\n\
 @end defvr");
