# HG changeset patch
# User jwe
# Date 823439570 0
#      Sun Feb 04 13:12:50 1996 +0000
# Node ID dc859604b19b43d052a5f58cab4e28016ed42001
# Parent  d5ba1bd06584bdc1109b11abf05ec6d0f311b5a1
[project @ 1996-02-04 13:07:46 by jwe]

diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -329,17 +329,17 @@ NPSOL_options::init (void)
   x_start_objective_check = 1;
   x_start_constraint_check = 1;
   x_stop_objective_check = -1;
   x_stop_constraint_check = -1;
   x_verify_level = 0;
 }
 
 void
-NPSOL_options::copy (const NPSOL_options& opt)
+NPSOL_options::set_options (const NPSOL_options& opt)
 {
   x_central_difference_interval = opt.x_central_difference_interval;
   x_crash_tolerance = opt.x_crash_tolerance;
   x_difference_interval = opt.x_difference_interval;
   x_function_precision = opt.x_function_precision;
   x_infinite_bound = opt.x_infinite_bound;
   x_infinite_step = opt.x_infinite_step;
   x_linear_feasibility_tolerance = opt.x_linear_feasibility_tolerance;
diff --git a/liboctave/NPSOL.h b/liboctave/NPSOL.h
--- a/liboctave/NPSOL.h
+++ b/liboctave/NPSOL.h
@@ -37,33 +37,33 @@ Software Foundation, 59 Temple Place - S
 
 class
 NPSOL_options
 {
 public:
 
   NPSOL_options (void) { init (); }
 
-  NPSOL_options (const NPSOL_options& opt) { copy (opt); }
+  NPSOL_options (const NPSOL_options& opt) { set_options (opt); }
 
   NPSOL_options& operator = (const NPSOL_options& opt)
     {
       if (this != &opt)
-	copy (opt);
+	set_options (opt);
 
       return *this;
     }
 
   ~NPSOL_options (void) { }
 
   void init (void);
 
-  void copy (const NPSOL_options& opt);
+  void set_default_options (void) { init (); }
 
-  void set_default_options (void) { init (); }
+  void set_options (const NPSOL_options& opt);
 
 // XXX FIXME XXX -- is this a good idea?
 
 // Passing invalid values to the set_* functions will result in
 // setting the default option.
 
   void set_central_difference_interval (double val)
     { x_central_difference_interval = (val > 0.0) ? val : -1.0; }
diff --git a/liboctave/QPSOL.cc b/liboctave/QPSOL.cc
--- a/liboctave/QPSOL.cc
+++ b/liboctave/QPSOL.cc
@@ -165,111 +165,16 @@ QPSOL::do_minimize (double& objf, int& i
   delete [] featol;
   delete [] istate;
   delete [] iw;
   delete [] w;
 
   return x;
 }
 
-QPSOL_options::QPSOL_options (void)
-{
-  init ();
-}
-
-QPSOL_options::QPSOL_options (const QPSOL_options& opt)
-{
-  copy (opt);
-}
-
-QPSOL_options&
-QPSOL_options::operator = (const QPSOL_options& opt)
-{
-  if (this != &opt)
-    copy (opt);
-
-  return *this;
-}
-
-QPSOL_options::~QPSOL_options (void)
-{
-}
-
-void
-QPSOL_options::init (void)
-{
-  x_feasibility_tolerance = sqrt (DBL_EPSILON);
-  x_infinite_bound = 1.0e+30;
-  x_iteration_limit = -1;
-  x_print_level = 0;
-}
-
-void
-QPSOL_options::copy (const QPSOL_options& opt)
-{
-  x_feasibility_tolerance = opt.x_feasibility_tolerance;
-  x_infinite_bound = opt.x_infinite_bound;
-  x_iteration_limit = opt.x_iteration_limit;
-  x_print_level = opt.x_print_level;
-}
-
-void
-QPSOL_options::set_default_options (void)
-{
-  init ();
-}
-
-void
-QPSOL_options::set_feasibility_tolerance (double val)
-{
-  x_feasibility_tolerance = (val > 0.0) ? val : sqrt (DBL_EPSILON);
-}
-
-void
-QPSOL_options::set_infinite_bound (double val)
-{
-  x_infinite_bound = (val > 0.0) ? val : 1.0e+30;
-}
-
-void
-QPSOL_options::set_iteration_limit (int val)
-{
-  x_iteration_limit = (val > 0) ? val : -1;
-}
-
-void
-QPSOL_options::set_print_level (int val)
-{
-  x_print_level = (val >= 0) ? val : 0;
-}
-
-double
-QPSOL_options::feasibility_tolerance (void)
-{
-  return x_feasibility_tolerance;
-}
-
-double
-QPSOL_options::infinite_bound (void)
-{
-  return x_infinite_bound;
-}
-
-int
-QPSOL_options::iteration_limit (void)
-{
-  return x_iteration_limit;
-}
-
-int
-QPSOL_options::print_level (void)
-{
-  return x_print_level;
-}
-
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/Quad.h b/liboctave/Quad.h
--- a/liboctave/Quad.h
+++ b/liboctave/Quad.h
@@ -59,35 +59,39 @@ Quad_options
 
   Quad_options (const Quad_options& opt)
     : x_absolute_tolerance (opt.x_absolute_tolerance),
       x_relative_tolerance (opt.x_relative_tolerance) { }
 
   Quad_options& operator = (const Quad_options& opt)
     {
       if (this != &opt)
-	{
-	  x_absolute_tolerance = opt.x_absolute_tolerance;
-	  x_relative_tolerance = opt.x_relative_tolerance;
-	}
+	set_options (opt);
+
       return *this;
     }
 
   ~Quad_options (void) { }
 
   void init (void)
     {
       double sqrt_eps = ::sqrt (DBL_EPSILON);
 
       x_absolute_tolerance = sqrt_eps;
       x_relative_tolerance = sqrt_eps;
     }
 
   void set_default_options (void) { init (); }
 
+  void set_options (const Quad_options& opt)
+    {
+      x_absolute_tolerance = opt.x_absolute_tolerance;
+      x_relative_tolerance = opt.x_relative_tolerance;
+    }
+
   // XXX FIXME XXX -- check for invalid values?
   void set_absolute_tolerance (double val) { x_absolute_tolerance = val; }
   void set_relative_tolerance (double val) { x_relative_tolerance = val; }
 
   double absolute_tolerance (void) { return x_absolute_tolerance; }
   double relative_tolerance (void) { return x_relative_tolerance; }
 
  private:
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -183,33 +183,31 @@ load_octave_builtin (const string&)
   Octave_builtin_fcn retval = 0;
 
 #if defined (WITH_DYNAMIC_LINKING)
 
   string mangled_name = mangle_octave_builtin_name (name);
 
   retval = (Octave_builtin_fcn) resolve_octave_reference (mangled_name);
 
-  delete [] mangled_name;
-
 #endif
 
   return retval;
 }
 
 int
 load_octave_oct_file (const string& name)
 {
   int retval = 0;
 
 #if defined (WITH_DYNAMIC_LINKING)
 
   string oct_file = oct_file_in_path (name);
 
-  if (oct_file)
+  if (oct_file.empty ())
     {
       string mangled_name = mangle_octave_oct_file_name (name);
 
       Octave_builtin_fcn_struct_fcn f =
 	(Octave_builtin_fcn_struct_fcn) resolve_octave_reference
 	  (mangled_name, oct_file);
 
       if (f)
@@ -217,18 +215,16 @@ load_octave_oct_file (const string& name
 	  builtin_function *s = f ();
 
 	  if (s)
 	    {
 	      install_builtin_function (s);
 	      retval = 1;
 	    }
 	}
-
-      delete [] oct_file;
     }
 
 #else
 
   (void) name;
 
 #endif
 
diff --git a/src/quad.cc b/src/quad.cc
--- a/src/quad.cc
+++ b/src/quad.cc
@@ -207,31 +207,31 @@ integrand is singular.")
 	  error ("quad: expecting tol to contain no more than two values");
 	  return retval;
 	}
 
     case 3:
       if (indefinite)
 	{
 	  IndefQuad iq (quad_user_function, bound, indef_type, abstol, reltol);
-	  iq.copy (quad_opts);
+	  iq.set_options (quad_opts);
 	  val = iq.integrate (ier, nfun, abserr);
 	}
       else
 	{
 	  if (have_sing)
 	    {
 	      DefQuad dq (quad_user_function, a, b, sing, abstol, reltol);
-	      dq.copy (quad_opts);
+	      dq.set_options (quad_opts);
 	      val = dq.integrate (ier, nfun, abserr);
 	    }
 	  else
 	    {
 	      DefQuad dq (quad_user_function, a, b, abstol, reltol);
-	      dq.copy (quad_opts);
+	      dq.set_options (quad_opts);
 	      val = dq.integrate (ier, nfun, abserr);
 	    }
 	}
       break;
 
     default:
       panic_impossible ();
       break;
