# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424883841 18000
#      Wed Feb 25 12:04:01 2015 -0500
# Node ID 734a77207e2e0ccd51157ffe7293b101b71eb949
# Parent  bf511802add76eb8828d1dca4aedfeb3092c960b
# Parent  77f65eabac201738879c599880e458576c2dc734
maint: Periodic merge of stable to default.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -2589,18 +2589,17 @@ octave_base_lexer::is_keyword_token (con
             input_line_number = 1;
           break;
 
         case magic_file_kw:
           {
             if ((reading_fcn_file || reading_script_file
                  || reading_classdef_file)
                 && ! fcn_file_full_name.empty ())
-              tok_val = new token (magic_file_kw, true,
-                                   fcn_file_full_name, l, c);
+              tok_val = new token (magic_file_kw, fcn_file_full_name, l, c);
             else
               tok_val = new token (magic_file_kw, "stdin", l, c);
           }
           break;
 
         case magic_line_kw:
           tok_val = new token (magic_line_kw, static_cast<double> (l),
                                "", l, c);
diff --git a/libinterp/parse-tree/token.cc b/libinterp/parse-tree/token.cc
--- a/libinterp/parse-tree/token.cc
+++ b/libinterp/parse-tree/token.cc
@@ -47,16 +47,27 @@ token::token (int tv, bool is_kw, int l,
   maybe_cmd = false;
   tspc = false;
   line_num = l;
   column_num = c;
   tok_val = tv;
   type_tag = is_kw ? keyword_token : generic_token;
 }
 
+token::token (int tv, const char *s, int l, int c)
+{
+  maybe_cmd = false;
+  tspc = false;
+  line_num = l;
+  column_num = c;
+  tok_val = tv;
+  type_tag = string_token;
+  str = new std::string (s);
+}
+
 token::token (int tv, const std::string& s, int l, int c)
 {
   maybe_cmd = false;
   tspc = false;
   line_num = l;
   column_num = c;
   tok_val = tv;
   type_tag = string_token;
diff --git a/libinterp/parse-tree/token.h b/libinterp/parse-tree/token.h
--- a/libinterp/parse-tree/token.h
+++ b/libinterp/parse-tree/token.h
@@ -58,16 +58,17 @@ public:
     switch_end,
     while_end,
     try_catch_end,
     unwind_protect_end
   };
 
   token (int tv, int l = -1, int c = -1);
   token (int tv, bool is_keyword, int l = -1, int c = -1);
+  token (int tv, const char *s, int l = -1, int c = -1);
   token (int tv, const std::string& s, int l = -1, int c = -1);
   token (int tv, double d, const std::string& s = std::string (),
          int l = -1, int c = -1);
   token (int tv, end_tok_type t, int l = -1, int c = -1);
   token (int tv, symbol_table::symbol_record *s, int l = -1, int c = -1);
   token (int tv, const std::string& mth, const std::string& cls,
          int l = -1, int c = -1);
 
