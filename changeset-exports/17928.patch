# HG changeset patch
# User Rik <rik@octave.org>
# Date 1384452117 28800
#      Thu Nov 14 10:01:57 2013 -0800
# Node ID 079da800451b5167b3152dfd2e3a29c00647295d
# Parent  c17f06b50ac5640bfe7dc3a66e9312ae08c4165e
Fix loading complex values with 'NA' saved in text format (bug #40575).

* lo-utils.cc (read_inf_nan_na): Use is.putback to put back the character
that was checked to see if it was 'N' for "NaN" rather than "NA".

diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -197,18 +197,17 @@ octave_fgetl (FILE *f, bool& eof)
   size_t len = retval.length ();
 
   if (retval[len-1] == '\n')
     retval.resize (len-1);
 
   return retval;
 }
 
-// Note that the caller is responsible for repositioning the stream on
-// failure.
+// Note that the caller is responsible for repositioning the stream on failure.
 
 template <typename T>
 T
 read_inf_nan_na (std::istream& is, char c0)
 {
   T val = 0.0;
 
   switch (c0)
@@ -233,17 +232,20 @@ read_inf_nan_na (std::istream& is, char 
       {
         char c1 = is.get ();
         if (c1 == 'a' || c1 == 'A')
           {
             char c2 = is.get ();
             if (c2 == 'n' || c2 == 'N')
               val = std::numeric_limits<T>::quiet_NaN ();
             else
-              val = octave_numeric_limits<T>::NA ();
+              {
+                val = octave_numeric_limits<T>::NA ();
+                is.putback (c2);
+              }
           }
         else
           is.setstate (std::ios::failbit);
       }
       break;
 
     default:
       abort ();
