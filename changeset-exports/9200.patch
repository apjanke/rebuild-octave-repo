# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1242381919 -7200
#      Fri May 15 12:05:19 2009 +0200
# Node ID 72620af9cbaff88cbd74862d07e7564e0e50a5bd
# Parent  399884c9d4a152162ba46667958ab1db1c43b39f
remove obsolete ArrayN-idx.h

diff --git a/liboctave/ArrayN-idx.h b/liboctave/ArrayN-idx.h
deleted file mode 100644
--- a/liboctave/ArrayN-idx.h
+++ /dev/null
@@ -1,72 +0,0 @@
-// Template array classes
-/*
-
-Copyright (C) 2000, 2001, 2002, 2003, 2005, 2006, 2007 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#include "Range.h"
-#include "idx-vector.h"
-#include "lo-error.h"
-
-#if 0
-
-template <class T>
-ArrayN<T>
-ArrayN<T>::value (void)
-{
-  ArrayN<T> retval;
-
-  int n_idx = index_count ();
-
-  if (n_idx > 1)
-    {
-      Array<idx_vector> ra_idx (n_idx);
-
-      idx_vector *tmp = get_idx ();
-
-      for (int i = 0; i < n_idx; i++)
-	ra_idx(i) = tmp[i];
-
-      return index (ra_idx);
-    }
-  else if (n_idx == 1)
-    {
-      idx_vector *tmp = get_idx ();
-
-      idx_vector ra_idx = tmp[0];
-
-      return index (ra_idx);
-    }
-  else
-    (*current_liboctave_error_handler)
-      ("invalid number of indices for array expression");
-
-  clear_index ();
-
-  return retval;
-}
-
-#endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/liboctave/ArrayN.cc b/liboctave/ArrayN.cc
--- a/liboctave/ArrayN.cc
+++ b/liboctave/ArrayN.cc
@@ -26,17 +26,16 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <cassert>
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "ArrayN.h"
-#include "ArrayN-idx.h"
 #include "idx-vector.h"
 #include "lo-error.h"
 
 // N-dimensional array class.
 
 template <class T>
 std::ostream&
 operator << (std::ostream& os, const ArrayN<T>& a)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2009-05-15  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ArrayN-idx.h: Remove file.
+	* ArrayN.cc: Don't include it.
+	* MArrayN.cc: Dtto.
+
 2009-05-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array-util.cc (zero_dims_inquire): Move j++ out of branch.
 
 2009-05-07  Marco Atzeri  <marco_atzeri@yahoo.it>
 
         * Makefile.in: (SHLPRE): Rename from SHLLIBPRE.
 
diff --git a/liboctave/MArrayN.cc b/liboctave/MArrayN.cc
--- a/liboctave/MArrayN.cc
+++ b/liboctave/MArrayN.cc
@@ -21,17 +21,16 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "MArrayN.h"
 #include "Array-util.h"
-#include "ArrayN-idx.h"
 #include "lo-error.h"
 
 #include "MArray-defs.h"
 
 // N-dimensional array with math ops.
 
 // Element by element MArrayN by scalar ops.
 
