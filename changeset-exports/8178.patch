# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1223031814 -7200
#      Fri Oct 03 13:03:34 2008 +0200
# Node ID af41e20949932285bbcf5829bbff884c7c02dc1e
# Parent  65c4ac814082240ad73de05e5a4d3ef8e47f5591
fix assignN still calling maybe_delete_elements

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3369,21 +3369,17 @@ assignN (Array<LT>& lhs, const Array<RT>
   bool rhs_is_scalar = is_scalar (rhs_dims);
 
   int n_idx = lhs.index_count ();
 
   idx_vector *idx_vex = lhs.get_idx ();
 
   Array<idx_vector> idx = conv_to_array (idx_vex, n_idx);
 
-  if (rhs_dims_len == 2 && rhs_dims(0) == 0 && rhs_dims(1) == 0)
-    {
-      lhs.maybe_delete_elements (idx, rfv);
-    }
-  else if (n_idx == 0)
+  if (n_idx == 0)
     {
       lhs.clear_index ();
 
       (*current_liboctave_error_handler)
 	("invalid number of indices for matrix expression");
 
       retval = 0;
     }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-10-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array.cc (assignN): Do not call maybe_delete_elements when
+	for empty matrix.
+
 2008-09-30  Jaroslav Hajek <highegg@gmail.com>
 
 	* oct-inttypes.h: Mostly rewrite. 
 	* oct-inttypes.cc: Modstly rewrite.
 
 2008-09-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::maybe_delete_elements_2(idx_vector&)): Return on
