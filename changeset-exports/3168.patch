# HG changeset patch
# User jwe
# Date 892948990 0
#      Sun Apr 19 01:23:10 1998 +0000
# Node ID 1c267910655d61951c5d584d780c0826fc497c2d
# Parent  d609b993be3bf5ea0905a19c00c8c896d95e70e5
[project @ 1998-04-19 01:22:38 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Sat Apr 18 20:15:37 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in (USE_GNU_INFO): Delete everything related to this.
+	* acconfig.h (USE_GNU_INFO): Delete undef.
+
 Tue Apr 14 15:33:20 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* install-octave.in: Improve error messages if version number or
 	host architecture can't be found.
 
 	* install-octave.in: Don't install info reader.
 
 Fri Mar 27 02:54:59 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -87,19 +87,16 @@
 #undef SEPCHAR_STR
 
 /* Define if math.h declares signgam. */
 #undef SIGNGAM_DECLARED
 
 /* To quiet autoheader. */
 #undef SMART_PUTENV
 
-/* Use GNU info for extended help system. */
-#undef USE_GNU_INFO
-
 /* Use plplot for plotting. */
 #undef USE_PLPLOT
 
 /* Use GNU readline for command line editing and history. */
 #undef USE_READLINE
 
 /* Define if using dlopen/dlsym for dynamic linking of object files. */
 #undef WITH_DL
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.302 $)
+AC_REVISION($Revision: 1.303 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -98,25 +98,16 @@ OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77,
   AC_MSG_WARN($warn_f2c_and_f77)
   use_f2c=false])
 
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(g77, f2c,
   [warn_f2c_and_g77="--with-f2c and --with-g77 both specified!  Using g77..."
   AC_MSG_WARN($warn_f2c_and_g77)
   use_f2c=false])
 
-### Allow the user disable support for GNU info.
-
-AC_ARG_ENABLE(info,
-  [  --enable-info           use GNU info (default is yes)],
-  [if test "$enableval" = no; then USE_GNU_INFO=false; fi], [])
-if $USE_GNU_INFO; then
-  AC_DEFINE(USE_GNU_INFO, 1)
-fi
-
 dnl ### Allow the user disable support for plplot.
 dnl 
 dnl # USE_PLPLOT=true
 dnl # PLPLOT_DIR=plplot
 dnl # LIBPLPLOT='$(TOPDIR)/plplot/libplplot.$(LIBEXT)
 USE_PLPLOT=false
 PLPLOT_DIR=""
 LIBPLPLOT=""
@@ -1144,28 +1135,26 @@ Octave is now configured for $canonical_
 
   Source directory:     $srcdir
   Installation prefix:  $prefix
   C compiler:           $CC $XTRA_CFLAGS $CFLAGS
   C++ compiler:         $CXX $XTRA_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $FORT
   Fortran libraries:    $FLIBS
   Use GNU readline:     $USE_READLINE
-  Use GNU info reader:  $USE_GNU_INFO
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:       $BOUNDS_CHECKING
   Build static libraries:                  $STATIC_LIBS
   Build shared libraries:                  $SHARED_LIBS
   Minimal kernel option:                   $OCTAVE_LITE
   Dynamic Linking (dlopen/dlsym):          $WITH_DL
   Dynamic Linking (shl_load/shl_findsym):  $WITH_SHL
   Include support for GNU readline:        $USE_READLINE
-  Include support for the GNU Info reader: $USE_GNU_INFO
 ])
 
 warn_msg_printed=false
 
 if test -n "$warn_f77_and_g77"; then
   AC_MSG_WARN($warn_f77_and_g77)
   warn_msg_printed=true
 fi
diff --git a/kpathsea/CONFIGURE b/kpathsea/CONFIGURE
deleted file mode 100644
--- a/kpathsea/CONFIGURE
+++ /dev/null
@@ -1,193 +0,0 @@
-Contents:
-
-  Basic Installation
-  Compilers and Options
-  Compiling For Multiple Architectures
-  Installation Names
-  Optional Features
-  Specifying the System Type
-  Sharing Defaults
-  Operation Controls
-
-
-Basic Installation
-==================
-
-   These are generic installation instructions.
-
-   The `configure' shell script attempts to guess correct values for
-various system-dependent variables used during compilation.  It uses
-those values to create a `Makefile' in each directory of the package.
-It may also create one or more `.h' files containing system-dependent
-definitions.  Finally, it creates a shell script `config.status' that
-you can run in the future to recreate the current configuration, a file
-`config.cache' that saves the results of its tests to speed up
-reconfiguring, and a file `config.log' containing compiler output
-(useful mainly for debugging `configure').
-
-   If you need to do unusual things to compile the package, please try
-to figure out how `configure' could check whether to do them, and mail
-diffs or instructions to the address given in the `README' so they can
-be considered for the next release.  If at some point `config.cache'
-contains results you don't want to keep, you may remove or edit it.
-
-   The file `configure.in' is used to create `configure' by a program
-called `autoconf'.  You only need `configure.in' if you want to change
-it or regenerate `configure' using a newer version of `autoconf'.
-
-The simplest way to compile this package is:
-
-  1. `cd' to the directory containing the package's source code and type
-     `./configure' to configure the package for your system.  If you're
-     using `csh' on an old version of System V, you might need to type
-     `sh ./configure' instead to prevent `csh' from trying to execute
-     `configure' itself.
-
-     Running `configure' takes awhile.  While running, it prints some
-     messages telling which features it is checking for.
-
-  2. Type `make' to compile the package.
-
-  3. Optionally, type `make check' to run any self-tests that come with
-     the package.
-
-  4. Type `make install' to install the programs and any data files and
-     documentation.
-
-  5. You can remove the program binaries and object files from the
-     source code directory by typing `make clean'.  To also remove the
-     files that `configure' created (so you can compile the package for
-     a different kind of computer), type `make distclean'.  There is
-     also a `make maintainer-clean' target, but that is intended mainly
-     for the package's developers.  If you use it, you may have to get
-     all sorts of other programs in order to regenerate files that came
-     with the distribution.
-
-Compilers and Options
-=====================
-
-   Some systems require unusual options for compilation or linking that
-the `configure' script does not know about.  You can give `configure'
-initial values for variables by setting them in the environment.  Using
-a Bourne-compatible shell, you can do that on the command line like
-this:
-     CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure
-
-Or on systems that have the `env' program, you can do it like this:
-     env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure
-
-Compiling For Multiple Architectures
-====================================
-
-   You can compile the package for more than one kind of computer at the
-same time, by placing the object files for each architecture in their
-own directory.  To do this, you must use a version of `make' that
-supports the `VPATH' variable, such as GNU `make'.  `cd' to the
-directory where you want the object files and executables to go and run
-the `configure' script.  `configure' automatically checks for the
-source code in the directory that `configure' is in and in `..'.
-
-   If you have to use a `make' that does not supports the `VPATH'
-variable, you have to compile the package for one architecture at a time
-in the source code directory.  After you have installed the package for
-one architecture, use `make distclean' before reconfiguring for another
-architecture.
-
-Installation Names
-==================
-
-   By default, `make install' will install the package's files in
-`/usr/local/bin', `/usr/local/man', etc.  You can specify an
-installation prefix other than `/usr/local' by giving `configure' the
-option `--prefix=PATH'.
-
-   You can specify separate installation prefixes for
-architecture-specific files and architecture-independent files.  If you
-give `configure' the option `--exec-prefix=PATH', the package will use
-PATH as the prefix for installing programs and libraries.
-Documentation and other data files will still use the regular prefix.
-
-   In addition, if you use an unusual directory layout you can give
-options like `--bindir=PATH' to specify different values for particular
-kinds of files.  Run `configure --help' for a list of the directories
-you can set and what kinds of files go in them.
-
-   If the package supports it, you can cause programs to be installed
-with an extra prefix or suffix on their names by giving `configure' the
-option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.
-
-Optional Features
-=================
-
-   Some packages pay attention to `--enable-FEATURE' options to
-`configure', where FEATURE indicates an optional part of the package.
-They may also pay attention to `--with-PACKAGE' options, where PACKAGE
-is something like `gnu-as' or `x' (for the X Window System).  The
-`README' should mention any `--enable-' and `--with-' options that the
-package recognizes.
-
-   For packages that use the X Window System, `configure' can usually
-find the X include and library files automatically, but if it doesn't,
-you can use the `configure' options `--x-includes=DIR' and
-`--x-libraries=DIR' to specify their locations.
-
-Specifying the System Type
-==========================
-
-   There may be some features `configure' can not figure out
-automatically, but needs to determine by the type of host the package
-will run on.  Usually `configure' can figure that out, but if it prints
-a message saying it can not guess the host type, give it the
-`--host=TYPE' option.  TYPE can either be a short name for the system
-type, such as `sun4', or a canonical name with three fields:
-     CPU-COMPANY-SYSTEM
-
-See the file `config.sub' for the possible values of each field.  If
-`config.sub' isn't included in this package, then this package doesn't
-need to know the host type.
-
-   If you are building compiler tools for cross-compiling, you can also
-use the `--target=TYPE' option to select the type of system they will
-produce code for and the `--build=TYPE' option to select the type of
-system on which you are compiling the package.
-
-Sharing Defaults
-================
-
-   If you want to set default values for `configure' scripts to share,
-you can create a site shell script called `config.site' that gives
-default values for variables like `CC', `cache_file', and `prefix'.
-`configure' looks for `PREFIX/share/config.site' if it exists, then
-`PREFIX/etc/config.site' if it exists.  Or, you can set the
-`CONFIG_SITE' environment variable to the location of the site script.
-A warning: not all `configure' scripts look for a site script.
-
-Operation Controls
-==================
-
-   `configure' recognizes the following options to control how it
-operates.
-
-`--cache-file=FILE'
-     Use and save the results of the tests in FILE instead of
-     `./config.cache'.  Set FILE to `/dev/null' to disable caching, for
-     debugging `configure'.
-
-`--help'
-     Print a summary of the options to `configure', and exit.
-
-`--quiet'
-`--silent'
-`-q'
-     Do not print messages saying which checks are being made.
-
-`--srcdir=DIR'
-     Look for the package's source code in directory DIR.  Usually
-     `configure' can determine that directory automatically.
-
-`--version'
-     Print the version of Autoconf used to generate the `configure'
-     script, and exit.
-
-`configure' also accepts some other, not widely useful, options.
-
diff --git a/kpathsea/CONFIGURE.kpathsea b/kpathsea/CONFIGURE.kpathsea
new file mode 100644
--- /dev/null
+++ b/kpathsea/CONFIGURE.kpathsea
@@ -0,0 +1,193 @@
+Contents:
+
+  Basic Installation
+  Compilers and Options
+  Compiling For Multiple Architectures
+  Installation Names
+  Optional Features
+  Specifying the System Type
+  Sharing Defaults
+  Operation Controls
+
+
+Basic Installation
+==================
+
+   These are generic installation instructions.
+
+   The `configure' shell script attempts to guess correct values for
+various system-dependent variables used during compilation.  It uses
+those values to create a `Makefile' in each directory of the package.
+It may also create one or more `.h' files containing system-dependent
+definitions.  Finally, it creates a shell script `config.status' that
+you can run in the future to recreate the current configuration, a file
+`config.cache' that saves the results of its tests to speed up
+reconfiguring, and a file `config.log' containing compiler output
+(useful mainly for debugging `configure').
+
+   If you need to do unusual things to compile the package, please try
+to figure out how `configure' could check whether to do them, and mail
+diffs or instructions to the address given in the `README' so they can
+be considered for the next release.  If at some point `config.cache'
+contains results you don't want to keep, you may remove or edit it.
+
+   The file `configure.in' is used to create `configure' by a program
+called `autoconf'.  You only need `configure.in' if you want to change
+it or regenerate `configure' using a newer version of `autoconf'.
+
+The simplest way to compile this package is:
+
+  1. `cd' to the directory containing the package's source code and type
+     `./configure' to configure the package for your system.  If you're
+     using `csh' on an old version of System V, you might need to type
+     `sh ./configure' instead to prevent `csh' from trying to execute
+     `configure' itself.
+
+     Running `configure' takes awhile.  While running, it prints some
+     messages telling which features it is checking for.
+
+  2. Type `make' to compile the package.
+
+  3. Optionally, type `make check' to run any self-tests that come with
+     the package.
+
+  4. Type `make install' to install the programs and any data files and
+     documentation.
+
+  5. You can remove the program binaries and object files from the
+     source code directory by typing `make clean'.  To also remove the
+     files that `configure' created (so you can compile the package for
+     a different kind of computer), type `make distclean'.  There is
+     also a `make maintainer-clean' target, but that is intended mainly
+     for the package's developers.  If you use it, you may have to get
+     all sorts of other programs in order to regenerate files that came
+     with the distribution.
+
+Compilers and Options
+=====================
+
+   Some systems require unusual options for compilation or linking that
+the `configure' script does not know about.  You can give `configure'
+initial values for variables by setting them in the environment.  Using
+a Bourne-compatible shell, you can do that on the command line like
+this:
+     CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure
+
+Or on systems that have the `env' program, you can do it like this:
+     env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure
+
+Compiling For Multiple Architectures
+====================================
+
+   You can compile the package for more than one kind of computer at the
+same time, by placing the object files for each architecture in their
+own directory.  To do this, you must use a version of `make' that
+supports the `VPATH' variable, such as GNU `make'.  `cd' to the
+directory where you want the object files and executables to go and run
+the `configure' script.  `configure' automatically checks for the
+source code in the directory that `configure' is in and in `..'.
+
+   If you have to use a `make' that does not supports the `VPATH'
+variable, you have to compile the package for one architecture at a time
+in the source code directory.  After you have installed the package for
+one architecture, use `make distclean' before reconfiguring for another
+architecture.
+
+Installation Names
+==================
+
+   By default, `make install' will install the package's files in
+`/usr/local/bin', `/usr/local/man', etc.  You can specify an
+installation prefix other than `/usr/local' by giving `configure' the
+option `--prefix=PATH'.
+
+   You can specify separate installation prefixes for
+architecture-specific files and architecture-independent files.  If you
+give `configure' the option `--exec-prefix=PATH', the package will use
+PATH as the prefix for installing programs and libraries.
+Documentation and other data files will still use the regular prefix.
+
+   In addition, if you use an unusual directory layout you can give
+options like `--bindir=PATH' to specify different values for particular
+kinds of files.  Run `configure --help' for a list of the directories
+you can set and what kinds of files go in them.
+
+   If the package supports it, you can cause programs to be installed
+with an extra prefix or suffix on their names by giving `configure' the
+option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.
+
+Optional Features
+=================
+
+   Some packages pay attention to `--enable-FEATURE' options to
+`configure', where FEATURE indicates an optional part of the package.
+They may also pay attention to `--with-PACKAGE' options, where PACKAGE
+is something like `gnu-as' or `x' (for the X Window System).  The
+`README' should mention any `--enable-' and `--with-' options that the
+package recognizes.
+
+   For packages that use the X Window System, `configure' can usually
+find the X include and library files automatically, but if it doesn't,
+you can use the `configure' options `--x-includes=DIR' and
+`--x-libraries=DIR' to specify their locations.
+
+Specifying the System Type
+==========================
+
+   There may be some features `configure' can not figure out
+automatically, but needs to determine by the type of host the package
+will run on.  Usually `configure' can figure that out, but if it prints
+a message saying it can not guess the host type, give it the
+`--host=TYPE' option.  TYPE can either be a short name for the system
+type, such as `sun4', or a canonical name with three fields:
+     CPU-COMPANY-SYSTEM
+
+See the file `config.sub' for the possible values of each field.  If
+`config.sub' isn't included in this package, then this package doesn't
+need to know the host type.
+
+   If you are building compiler tools for cross-compiling, you can also
+use the `--target=TYPE' option to select the type of system they will
+produce code for and the `--build=TYPE' option to select the type of
+system on which you are compiling the package.
+
+Sharing Defaults
+================
+
+   If you want to set default values for `configure' scripts to share,
+you can create a site shell script called `config.site' that gives
+default values for variables like `CC', `cache_file', and `prefix'.
+`configure' looks for `PREFIX/share/config.site' if it exists, then
+`PREFIX/etc/config.site' if it exists.  Or, you can set the
+`CONFIG_SITE' environment variable to the location of the site script.
+A warning: not all `configure' scripts look for a site script.
+
+Operation Controls
+==================
+
+   `configure' recognizes the following options to control how it
+operates.
+
+`--cache-file=FILE'
+     Use and save the results of the tests in FILE instead of
+     `./config.cache'.  Set FILE to `/dev/null' to disable caching, for
+     debugging `configure'.
+
+`--help'
+     Print a summary of the options to `configure', and exit.
+
+`--quiet'
+`--silent'
+`-q'
+     Do not print messages saying which checks are being made.
+
+`--srcdir=DIR'
+     Look for the package's source code in directory DIR.  Usually
+     `configure' can determine that directory automatically.
+
+`--version'
+     Print the version of Autoconf used to generate the `configure'
+     script, and exit.
+
+`configure' also accepts some other, not widely useful, options.
+
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Fri Apr 17 10:53:39 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* strings/str2mat.m: Handle string matrices too.
+
 Wed Apr 15 11:16:01 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* audio/loadaudio.m: Accept "pcm" as another file extension for
 	linear encoding.
 
 	* audio/saveaudio.m, audio/loadaudio.m, audio/playaudio.m,
 	audio/record.m: Open files in binary mode.
 
diff --git a/scripts/strings/str2mat.m b/scripts/strings/str2mat.m
--- a/scripts/strings/str2mat.m
+++ b/scripts/strings/str2mat.m
@@ -20,44 +20,48 @@
 ## usage:  m = str2mat (s1, ...)
 ##
 ## Forms the matrix M containing the strings S1, ... as its rows.
 ## Each string is padded with blanks in order to form a valid matrix.
 
 ## Author: Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at>
 ## Adapted-By: jwe
 
-function m = str2mat (...)
+function retval = str2mat (...)
 
   if (nargin == 0)
     usage ("str2mat (s1, ...)");
   endif
 
   nc = 0;
+  nr = 0;
 
   va_start ();
 
+  nr = zeros (nargin, 1);
+  nc = zeros (nargin, 1);
   for k = 1 : nargin
     s = va_arg ();
     if (isstr (s))
-      tmp = columns (s);
+      [nr(k), nc(k)] = size (s);
     else
       error ("str2mat: all arguments must be strings");
     endif
-
-    if (tmp > nc)
-      nc = tmp;
-    endif
   endfor
 
-  m = setstr (ones (nargin, nc) * toascii (" "));
+  nr(find (nr == 0)) = 1;
+  retval_nr = sum (nr);
+  retval_nc = max (nc);
+
+  retval = setstr (ones (retval_nr, retval_nc) * toascii (" "));
 
   va_start ();
 
+  row_offset = 0;
   for k = 1 : nargin
     s = va_arg ();
-    tmp = columns (s);
-    if (tmp > 0)
-      m (k, 1:tmp) = s;
+    if (nc(k) > 0)
+      retval ((row_offset + 1) : (row_offset + nr(k)), 1:nc(k)) = s;
     endif
+    row_offset = row_offset + nr(k);
   endfor
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+Sat Apr 18 20:17:10 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* help.cc (USE_GNU_INFO): Delete uses of this macro.
+
 Thu Apr 16 01:00:12 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dynamic-ld.cc: Only include dlfcn.h if HAVE_DLFCN_H.
 
 Wed Apr 15 01:03:05 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* input.cc (Vlast_prompt_time): New global variable.
 	(octave_gets): Set it.
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -391,26 +391,22 @@ make_name_list (void)
     list[j++] = ffl[i];
 
   return list;
 }
 
 void
 additional_help_message (ostream& os)
 {
-#if defined (USE_GNU_INFO)
-
   if (! Vsuppress_verbose_help_message)
     os << "\n\
 Additional help for builtin functions, operators, and variables\n\
 is available in the on-line version of the manual.  Use the command\n\
 `help -i <topic>' to search the manual index.\n";
 
-#endif
-
   if (! Vsuppress_verbose_help_message)
     os << "\n\
 Help and information about Octave is also available on the WWW\n\
 at http://www.che.wisc.edu/octave/octave.html and via the\n\
 help-octave@bevo.che.wisc.edu mailing list.\n";
 
 }
 
@@ -573,18 +569,16 @@ simple_help (void)
 
 	  octave_stdout << "\n*** function files in " << dir << ":\n\n";
 
 	  names.list_in_columns (octave_stdout);
 	}
     }
 }
 
-#if defined (USE_GNU_INFO)
-
 static int
 try_info (const string& nm)
 {
   int status = 0;
 
   static char *cmd_str = 0;
 
   delete [] cmd_str;
@@ -649,26 +643,16 @@ help_from_info (const string_vector& arg
 		  error ("help: unable to find info!");
 		  break;
 		}
 	    }
 	}
     }
 }
 
-#else
-
-static void
-help_from_info (const string_vector&, int, int)
-{
-  message ("help", "Info help is not available in this version of Octave");
-}
-
-#endif
-
 static bool
 help_from_list (ostream& os, const help_list *list,
 		const string& nm, int usage)
 {
   const char *name;
 
   while ((name = list->name) != 0)
     {
@@ -733,26 +717,20 @@ builtin_help (int argc, const string_vec
 
       octave_stdout << "\nhelp: sorry, `" << argv[i]
 		    << "' is not documented\n"; 
     }
 
   additional_help_message (octave_stdout);
 }
 
-#if defined (USE_GNU_INFO)
-#define HELP_DOC_STRING \
-  "help [-i] [topic ...]\n\nprint cryptic yet witty messages"
-#else
-#define HELP_DOC_STRING \
-  "help [topic ...]\n\nprint cryptic yet witty messages"
-#endif
-
 DEFUN_TEXT (help, args, ,
-  HELP_DOC_STRING)
+  "help [-i] [topic ...]\n\
+\n\
+print cryptic yet witty messages")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("help");
 
   if (error_state)
