# HG changeset patch
# User jwe
# Date 813727754 0
#      Sun Oct 15 03:29:14 1995 +0000
# Node ID 562fed28ce2238ef378b5610ed4bc6882fbdfe43
# Parent  1cff14ab83a482c0505d4ac50e30ba63e55f8f73
[project @ 1995-10-15 03:29:14 by jwe]

diff --git a/src/sort.cc b/src/sort.cc
--- a/src/sort.cc
+++ b/src/sort.cc
@@ -159,17 +159,24 @@ mx_sort (const Matrix& m)
   Octave_object retval;
 
   int nr = m.rows ();
   int nc = m.columns ();
 
   Matrix ms (nr, nc);
   Matrix idx (nr, nc);
 
-  if (nr > 0 && nc > 0)
+  if (nr == 1 && nc > 0)
+    {
+      retval (1) = Matrix (nr, nc, 1.0);
+      retval (0) = m;
+
+      return retval;
+    }
+  else if (nr > 1 && nc > 0)
     {
       for (int j = 0; j < nc; j++)
 	{
 	  Array<int> l = create_index_array (nr);
 
 	  DO_SORT (nr, (m.elem (p-1, j) > m.elem (q-1, j)));
 
 	  MATRIX_CREATE_RETURN_VALUES (ms, m);
@@ -187,17 +194,24 @@ mx_sort (const RowVector& v)
 {
   Octave_object retval;
 
   int n = v.capacity ();
 
   RowVector vs (n);
   RowVector idx (n);
 
-  if (n > 0)
+  if (n == 1)
+    {
+      retval (1) = RowVector (n, 1.0);
+      retval (0) = v;
+
+      return retval;
+    }
+  else if (n > 1)
     {
       Array<int> l = create_index_array (n);
 
       DO_SORT (n, (v.elem (p-1) > v.elem (q-1)));
 
       VECTOR_CREATE_RETURN_VALUES (vs, v);
     }
 
@@ -213,17 +227,24 @@ mx_sort (const ComplexMatrix& cm)
   Octave_object retval;
 
   int nr = cm.rows ();
   int nc = cm.columns ();
 
   ComplexMatrix cms (nr, nc);
   Matrix idx (nr, nc);
 
-  if (nr > 0 && nc > 0)
+  if (nr == 1 && nc > 0)
+    {
+      retval (1) = Matrix (nr, nc, 1.0);
+      retval (0) = cm;
+
+      return retval;
+    }
+  else if (nr > 1 && nc > 0)
     {
       for (int j = 0; j < nc; j++)
 	{
 	  Array<int> l = create_index_array (nr);
 
 	  int all_elts_real = 1;
 	  for (int i = 0; i < nr; i++)
 	    if (imag (cm.elem (i, j)) != 0.0)
@@ -251,17 +272,24 @@ mx_sort (ComplexRowVector& cv)
 {
   Octave_object retval;
 
   int n = cv.capacity ();
 
   ComplexRowVector cvs (n);
   RowVector idx (n);
 
-  if (n > 0)
+  if (n == 1)
+    {
+      retval (1) = RowVector (n, 1.0);
+      retval (0) = cv;
+
+      return retval;
+    }
+  else if (n > 1)
     {
       Array<int> l = create_index_array (n);
 
       int all_elts_real = 1;
       for (int i = 0; i < n; i++)
 	if (imag (cv.elem (i)) != 0.0)
 	  {
 	    all_elts_real = 0;
