# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1299007711 28800
#      Tue Mar 01 11:28:31 2011 -0800
# Node ID 981cd67960653adea296348f528aeaf8a3a2f3e6
# Parent  30f2a3b1d236639ab5e4479cb4a3a8ebc0ffbc65
Use modern warning function rather than deprecated built-in variable to set warning state.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-01  Rik  <octave@nomad.inbox5.com>
+
+	* general/isscalar.m, general/isvector.m: Use modern warning function
+	rather than deprecated built-in variable to set warning state.
+
 2010-02-28  Rik  <octave@nomad.inbox5.com>
 
 	* general/iscolumn.m, general/isrow.m: Add 2 new utility functions
 	to check for row or column vector.
 
 2010-02-28  Rik  <octave@nomad.inbox5.com>
 
 	* sparse/treeplot.m: Use 'o' plot style as default for nodes
diff --git a/scripts/general/isscalar.m b/scripts/general/isscalar.m
--- a/scripts/general/isscalar.m
+++ b/scripts/general/isscalar.m
@@ -30,31 +30,27 @@ function retval = isscalar (x)
     retval = numel (x) == 1;
   else
     print_usage ();
   endif
 
 endfunction
 
 %!assert(isscalar (1));
-
 %!assert(!(isscalar ([1, 2])));
-
 %!assert(!(isscalar ([])));
-
 %!assert(!(isscalar ([1, 2; 3, 4])));
 
 %!test
-%! warn_str_to_num = 0;
+%! warning ("off", "Octave:str-to-num");
 %! assert((isscalar ("t")));
 
 %!assert(!(isscalar ("test")));
-
 %!assert(!(isscalar (["test"; "ing"])));
 
 %!test
 %! s.a = 1;
 %! assert((isscalar (s)));
 
+%% Test input validation
 %!error isscalar ();
-
 %!error isscalar (1, 2);
 
diff --git a/scripts/general/isvector.m b/scripts/general/isvector.m
--- a/scripts/general/isvector.m
+++ b/scripts/general/isvector.m
@@ -35,33 +35,30 @@ function retval = isvector (x)
     retval = (ndims (x) == 2 && (sz(1) == 1 || sz(2) == 1));
   else
     print_usage ();
   endif
 
 endfunction
 
 %!assert(isvector (1));
-
 %!assert(isvector ([1; 2; 3]));
-
 %!assert(!(isvector ([])));
-
 %!assert(!(isvector ([1, 2; 3, 4])));
 
 %!test
-%! warn_str_to_num = 0;
+%! warning ("off", "Octave:str-to-num");
 %! assert((isvector ("t")));
 
 %!test
-%! warn_str_to_num = 0;
+%! warning ("off", "Octave:str-to-num");
 %! assert((isvector ("test")));
 
 %!assert(!(isvector (["test"; "ing"])));
 
 %!test
 %! s.a = 1;
 %! assert((isvector (s)));
 
+%% Test input validation
 %!error isvector ();
-
 %!error isvector ([1, 2], 2);
 
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-01  Rik  <octave@nomad.inbox5.com>
+
+	* test/test_index-wfi-t.m: Use modern warning function
+	rather than deprecated built-in variable to set warning state.
+
 2010-02-22  Rik  <octave@nomad.inbox5.com>
 
 	* fntests.m: Use single quotes around regexp patterns.
 
 2010-02-19  Rik  <octave@nomad.inbox5.com>
 
 	* fntests.m: Use PCRE regular expressions to simplify script.
 
diff --git a/test/test_index-wfi-t.m b/test/test_index-wfi-t.m
--- a/test/test_index-wfi-t.m
+++ b/test/test_index-wfi-t.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 %% test/octave.test/index-wfi-t/s-1.m
 %!test
 %! wfi = warning ("query", "Octave:fortran-indexing");
-%! warn_fortran_indexing = 1;
+%! warning ("on", "Octave:fortran-indexing");
 %! a = [];
 %! assert(isempty (a));
 %! warning (wfi.state, "Octave:fortran-indexing");
 
 %% test/octave.test/index-wfi-t/s-2.m
 %!test
 %! wfi = warning ("query", "Octave:fortran-indexing");
 %! warning ("on", "Octave:fortran-indexing");
