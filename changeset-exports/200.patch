# HG changeset patch
# User jwe
# Date 752790135 0
#      Mon Nov 08 20:22:15 1993 +0000
# Node ID 2e4d2596f2c3f29514861b7847fd40ed05636a8b
# Parent  5b978bb1bae671bf0975fd769d2e36612cb57377
[project @ 1993-11-08 20:22:15 by jwe]

diff --git a/src/pt-base.h b/src/pt-base.h
--- a/src/pt-base.h
+++ b/src/pt-base.h
@@ -109,17 +109,17 @@ public:
     { return 0; }
 
   virtual int is_assignment_expression (void) const
     { return 0; }
 
   virtual int is_prefix_expression (void) const
     { return 0; }
 
-  virtual char *name (void)
+  virtual char *name (void) const
     { assert (0); return (char *) NULL; }
 
   virtual int max_expected_args (void)
     { assert (0); return 0; }
   
   virtual void set_print_flag (int print)
     { assert (0); }
 
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -941,25 +941,27 @@ symbol_table::clear (const char *nm, int
 }
 
 int
 symbol_table::save (ostream& os, int mark_as_global = 0)
 {
   int status = 0;
   int count;
   char **names = list (count, 1, symbol_def::USER_VARIABLE);
-  if (names != (char **) NULL)
+  char **ptr = names;
+  if (ptr != (char **) NULL)
     {
-      while (*names != (char *) NULL)
+      while (*ptr != (char *) NULL)
 	{
-	  if (save (os, *names, mark_as_global))
+	  if (save (os, *ptr, mark_as_global))
 	    status++;
 
-	  names++;
+	  ptr++;
 	}
+      delete [] names;
     }
   return status;
 }
 
 int
 symbol_table::save (ostream& os, const char *name, int mark_as_global = 0)
 {
   int status = 0;
diff --git a/src/symtab.h b/src/symtab.h
--- a/src/symtab.h
+++ b/src/symtab.h
@@ -263,16 +263,27 @@ private:
   char *nm;
   
   int initialized;
 };
 
 /*
  * A symbol table.
  */
+
+#define SYMTAB_LOCAL_SCOPE 1
+#define SYMTAB_GLOBAL_SCOPE 2
+
+#define SYMTAB_ALL_SCOPES (SYMTAB_LOCAL_SCOPE | SYMTAB_GLOBAL_SCOPE)
+
+#define SYMTAB_ALL_TYPES (symbol_def::USER_FUNCTION \
+			  | symbol_def::USER_VARIABLE \
+			  | symbol_def::BUILTIN_FUNCTION \
+			  | symbol_def::BUILTIN_VARIABLE)
+
 class
 symbol_table
 {
 public:
 
   symbol_table (void);
 
   symbol_record *lookup (const char *nm, int insert = 0, int warn = 0);
@@ -280,26 +291,16 @@ public:
   void clear (int clear_user_functions = 1);
   int clear (const char *nm, int clear_user_functions = 1);
 
   int save (ostream& os, int mark_as_global = 0);
   int save (ostream& os, const char *name, int mark_as_global = 0);
 
   int size (void) const;
 
-#define SYMTAB_LOCAL_SCOPE 1
-#define SYMTAB_GLOBAL_SCOPE 2
-
-#define SYMTAB_ALL_SCOPES (SYMTAB_LOCAL_SCOPE | SYMTAB_GLOBAL_SCOPE)
-
-#define SYMTAB_ALL_TYPES (symbol_def::USER_FUNCTION \
-			  | symbol_def::USER_VARIABLE \
-			  | symbol_def::BUILTIN_FUNCTION \
-			  | symbol_def::BUILTIN_VARIABLE)
-
   symbol_record_info *long_list (int& count, int sort = 0,
 				 unsigned type = SYMTAB_ALL_TYPES,
 				 unsigned scope = SYMTAB_ALL_SCOPES) const;
 
   char **list (int& count, int sort = 0,
 	       unsigned type = SYMTAB_ALL_TYPES,
 	       unsigned scope = SYMTAB_ALL_SCOPES) const;  
 
diff --git a/src/tree.h.old b/src/tree.h.old
--- a/src/tree.h.old
+++ b/src/tree.h.old
@@ -153,17 +153,17 @@ public:
 
   tree_constant *eval (int print, int nargout);
 
   tree_constant eval (int argc, char **argv, int print);
 
   tree_constant *eval (const tree_constant *args, int n_in, int n_out,
 		       int print);
 
-  char *name (void);
+  char *name (void) const;
 
   int max_expected_args (void);
 
 private:
   int nargin_max;
   int nargout_max;
   Mapper_fcn mapper_fcn;
   Text_fcn text_fcn;
@@ -182,17 +182,17 @@ tree_identifier : public tree
 public:
   tree_identifier (int l = -1, int c = -1);
   tree_identifier (symbol_record *s, int l = -1, int c = -1);
 
   ~tree_identifier (void);
 
   int is_identifier (void) const;
 
-  char *name (void);
+  char *name (void) const;
   void rename (const char *n);
 
   tree_identifier *define (tree_constant *t);
   tree_identifier *define (tree_function *t);
 
   void document (char *s);
 
   tree_constant assign (tree_constant& t);
@@ -547,17 +547,17 @@ tree_parameter_list : public tree
   tree_parameter_list (tree_identifier *t);
 
   ~tree_parameter_list (void);
 
   tree_parameter_list *chain (tree_identifier *t);
   tree_parameter_list *reverse (void);
   int length (void);
 
-  char *name (void);
+  char *name (void) const;
 
   void mark_as_formal_parameters (void);
 
   tree_identifier *define (tree_constant *t);
 
   tree_parameter_list *next_elem (void);
 
   tree_constant eval (int print);
@@ -608,17 +608,17 @@ tree_word_list : public tree
   tree_word_list (char *s);
 
   ~tree_word_list (void);
 
   tree_word_list *chain (char *s);
   tree_word_list *reverse (void);
   int length (void);
 
-  char *name (void);
+  char *name (void) const;
 
   tree_word_list *next_elem (void);
 
   tree_constant eval (int print);
 
  private:
   char *word;
   tree_word_list *next;
