# HG changeset patch
# User jwe
# Date 1156454861 0
#      Thu Aug 24 21:27:41 2006 +0000
# Node ID d542d919783961dce51ee8fc06f65b8f2cfe4156
# Parent  be252143f5e1ec4fc5e288d562b2fa5d5a38173e
[project @ 2006-08-24 21:24:53 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,16 +1,16 @@
 2006-08-24  John W. Eaton  <jwe@octave.org>
 
 	* image/saveimage.m: Use logical indexing instead of
 	indices computed by calling find on the logical index.
 
 2006-08-24  Søren Hauberg  <soren@hauberg.org>
 
-	* miscellaneous/bincoeff.m, set/setdiff.m, specfun/factorial.m:
+	* miscellaneous/bincoeff.m, specfun/factorial.m:
 	Use logical indexing instead of indices computed by calling find
 	on the logical index.
 
 	* linear-algebra/krylov.m: Delete unused local var nzidx.
 
 2006-08-23  Quentin Spencer  <qspencer@ieee.org>
 
 	* control/system/tf2zp.m: Simplify gain calculation.
diff --git a/scripts/set/setdiff.m b/scripts/set/setdiff.m
--- a/scripts/set/setdiff.m
+++ b/scripts/set/setdiff.m
@@ -51,27 +51,27 @@ function c = setdiff (a, b, byrows)
   if (byrows)
     c = unique (a, "rows");
     if (! isempty (c) && ! isempty (b))
       ## Form a and b into combined set.
       b = unique (b, "rows");
       [dummy, idx] = sortrows ([c; b]);
       ## Eliminate those elements of a that are the same as in b.
       n = length (dummy);
-      c(idx(dummy(1:n-1) == dummy(2:n)), :) = [];
+      c(idx(find (dummy(1:n-1) == dummy(2:n))), :) = [];
     endif
   else
     c = unique (a);
     if (! isempty (c) && ! isempty (b))
       ## Form a and b into combined set.
       b = unique (b);
       [dummy, idx] = sort ([c(:); b(:)]);
       ## Eliminate those elements of a that are the same as in b.
       n = length (dummy);
-      c(idx(dummy(1:n-1) == dummy(2:n))) = [];
+      c(idx(find (dummy(1:n-1) == dummy(2:n)))) = [];
       ## Reshape if necessary.
       if (size (c, 1) != 1 && size (b, 1) == 1)
 	c = c.';
       endif
     endif
   endif
   
 endfunction
