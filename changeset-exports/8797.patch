# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234943625 -3600
#      Wed Feb 18 08:53:45 2009 +0100
# Node ID ee3446ca6157d2b0eb78927b7225da9e6a49e1f6
# Parent  9662dfb266523ae2d5554bd7ac357e74834a07e5
avoid warning in oct-inttypes.cc

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-18  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-inttypes.cc (pow (const octave_int<T>&, const octave_int<T>&)):
+	Use octave_int comparisons to avoid warning for unsigned types.
+
 2009-02-17  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::resize (const dim_vector&)): Remove dead branch.
 
 2009-02-17  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (OP_CUM_FCN, OP_CUM_FCN2, OP_CUM_FCNN):
 	Add TSRC/TRES parameters.
diff --git a/liboctave/oct-inttypes.cc b/liboctave/oct-inttypes.cc
--- a/liboctave/oct-inttypes.cc
+++ b/liboctave/oct-inttypes.cc
@@ -533,17 +533,17 @@ pow (const octave_int<T>& a, const octav
   octave_int<T> zero = octave_int<T> (0);
   octave_int<T> one = octave_int<T> (1);
 
   if (b == zero || a == one)
     retval = one;
   // the is_signed check is inserted twice to avoid compiler warnings
   else if (std::numeric_limits<T>::is_signed && b < zero)
     {
-      if (std::numeric_limits<T>::is_signed && a.value () == -1)
+      if (a == octave_int<int> (-1))
         retval = (b.value () % 2) ? a : one;
       else
         retval = zero;
     }
   else
     {
       octave_int<T> a_val = a;
       T b_val = b; // no need to do saturation on b
