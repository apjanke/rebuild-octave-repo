# HG changeset patch
# User jwe
# Date 1034824290 0
#      Thu Oct 17 03:11:30 2002 +0000
# Node ID 6e20cac828cdf69856e29419604c3ad2ac7e5602
# Parent  63a5613cca000c9421ac0ad5cdabde7c7c908460
[project @ 2002-10-17 03:11:30 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2002-10-16  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* aclocal.m4 (OCTAVE_LANG_PROG_NO_CONFDEFS): New macro.
+	(OCTAVE_CXX_PRAGMA_INTERFACE_IMPLEMENTATION): Use it along with
+	AC_LINK_IFELSE instead of AC_TRY_LINK.
+	Require both programs to compile for success.
+
 2002-10-16  Paul Kienzle <pkienzle@users.sf.net>
 
 	* aclocal.m4: Both Cygwin and MinGW don't prepend underscores.
 	* configure.in: MinGW builds shared libraries the same as Cygwin.
 	MinGW must link to winsock explicitly.
 	* install-octave.in: MinGW and Cygwin both need OCTAVE_HOME.
 
 2002-10-15  Paul Kienzle <pkienzle@users.sf.net>
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -348,61 +348,71 @@ AC_DEFUN(OCTAVE_CXX_FLAG, [
       CXXFLAGS="$CXXFLAGS $1"
       AC_MSG_RESULT([adding $1 to CXXFLAGS])], [$2])
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
 dnl
+dnl
+dnl
+dnl OCTAVE_LANG_PROG_NO_CONFDEFS
+AC_DEFUN(OCTAVE_LANG_PROG_NO_CONFDEFS,
+[_AC_LANG_DISPATCH([AC_LANG_PROGRAM], _AC_LANG, [$@])])
+dnl
 dnl Check to see if GNU C++ barfs on #pragma interface/#pragma implementation.
 dnl
+dnl Note that we are using AC_LINK_IFELSE and OCTAVE_LANG_PROG_NO_CONFDEFS
+dnl to prevent autoconf from including confdefs.h ahead of the #pragma
+dnl interface/implementation line.
+dnl
 dnl OCTAVE_CXX_PRAGMA_INTERFACE_IMPLEMENTATION
 AC_DEFUN(OCTAVE_CXX_PRAGMA_INTERFACE_IMPLEMENTATION, [
   AC_REQUIRE([AC_PROG_CXX])
   AC_MSG_CHECKING([for C++ support for pragma interface/implementation])
   AC_CACHE_VAL(octave_cv_cxx_pragma_interface_implementation, [
     AC_LANG_PUSH(C++)
     rm -f conftest.h
     cat > conftest.h <<EOB
 #include <iostream>
-#if defined (__GNUG__)
 #pragma interface
-#endif
 template <class T> class A
 {
 public:
   A (void) {}
   ~A (void);
 };
 
 class B : public A<int>
 {
 public:
 
   B (void) : A<int> () { }
 };
 EOB
-    AC_TRY_LINK([#include "conftest.h"], [], [
-      rm -f conftest.h
-      cat > conftest.h <<EOB
+    AC_LINK_IFELSE([OCTAVE_LANG_PROG_NO_CONFDEFS([#include "conftest.h"])],
+      [octave_pii_test_1=yes], [octave_pii_test_1=no])
+    rm -f conftest.h
+    cat > conftest.h <<EOB
 #pragma interface
 class A
 {
 public:
   virtual ~A (void) {}
 };
 EOB
-      AC_TRY_COMPILE([#pragma implementation
-#include "confdefs.h"], [],
-	octave_cv_cxx_pragma_interface_implementation=yes,
-      	octave_cv_cxx_pragma_interface_implementation=no
-	)],
+    AC_LINK_IFELSE([OCTAVE_LANG_PROG_NO_CONFDEFS([#pragma implementation
+#include "conftest.h"])],
+      [octave_pii_test_2=yes], [octave_pii_test_2=no])
+    if test $octave_pii_test_1 = yes && test $octave_pii_test_1 = yes; then
+      octave_cv_cxx_pragma_interface_implementation=yes
+    else
       octave_cv_cxx_pragma_interface_implementation=no
-    )
+    fi
     AC_LANG_POP(C++)
   ])
   AC_MSG_RESULT($octave_cv_cxx_pragma_interface_implementation)
   if test $octave_cv_cxx_pragma_interface_implementation = no; then
     XTRA_CXXFLAGS="$XTRA_CXXFLAGS -DNO_PRAGMA_INTERFACE_IMPLEMENTATION=1"
     AC_SUBST(XTRA_CXXFLAGS)
   fi
 ])
