# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1311725240 18000
#      Tue Jul 26 19:07:20 2011 -0500
# Node ID dae596be0571d57bb5af446efbf0c38c3e21ff3a
# Parent  40dc9069297aa4633af9dead0f773a2d96b94dae
profshow.m: Change Matlab-style single quotes to Octave-style double quotes

diff --git a/scripts/general/profshow.m b/scripts/general/profshow.m
--- a/scripts/general/profshow.m
+++ b/scripts/general/profshow.m
@@ -54,48 +54,48 @@ function profshow (data, n = 20)
   ## to print out our table.
   times = -[ data.FunctionTable.TotalTime ];
 
   [~, p] = sort (times);
 
   ## For printing the table, find out the maximum length of a function name
   ## so that we can proportion the table accordingly.  Based on this,
   ## we can build the format used for printing table rows.
-  nameLen = length ('Function');
+  nameLen = length ("Function");
   for i = 1 : n
     nameLen = max (nameLen, length (data.FunctionTable(p(i)).FunctionName));
   endfor
-  headerFormat = sprintf ('%%%ds %%4s %%12s %%12s\n', nameLen);
-  rowFormat = sprintf ('%%%ds %%4s %%12.3f %%12d\n', nameLen);
+  headerFormat = sprintf ("%%%ds %%4s %%12s %%12s\n", nameLen);
+  rowFormat = sprintf ("%%%ds %%4s %%12.3f %%12d\n", nameLen);
 
-  printf (headerFormat, 'Function', 'Attr', 'Time (s)', 'Calls');
-  printf ("%s\n", repmat ('-', 1, nameLen + 2 * 13 + 5));
+  printf (headerFormat, "Function", "Attr", "Time (s)", "Calls");
+  printf ("%s\n", repmat ("-", 1, nameLen + 2 * 13 + 5));
   for i = 1 : n
     row = data.FunctionTable(p(i));
-    attr = '';
+    attr = "";
     if (row.IsRecursive)
-      attr = 'R';
+      attr = "R";
     endif
     printf (rowFormat, row.FunctionName, attr, row.TotalTime, row.NumCalls);
   endfor
 
 endfunction
 
 %!demo
-%! profile ('on');
+%! profile ("on");
 %! A = rand (100);
 %! B = expm (A);
-%! profile ('off');
-%! T = profile ('info');
+%! profile ("off");
+%! T = profile ("info");
 %! profshow (T, 10);
 
 %!demo
 %! function f = myfib (n)
 %!   if (n <= 2)
 %!     f = 1;
 %!   else
 %!     f = myfib (n - 1) + myfib (n - 2);
 %!   endif
 %! endfunction
-%! profile ('on');
+%! profile ("on");
 %! myfib (20);
-%! profile ('off');
-%! profshow (profile ('info'), 5);
+%! profile ("off");
+%! profshow (profile ("info"), 5);
