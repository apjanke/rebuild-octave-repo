# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1319842388 -3600
#      Fri Oct 28 23:53:08 2011 +0100
# Node ID 80b30e186b73e4950e77e30e24f825d1e79bd8f4
# Parent  b0bb7bd9e0c898a4e23dfe8b63e1e12ae08f1c30
[Win32] Use Toolhelp32 APi to find octinterp module path.

* sysdep.cc (w32_set_octave_home): Use Toolhelp32 API to find the octinterp
module path.

diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -96,41 +96,53 @@ BSD_init (void)
 #define FP_X_DNML 0
 #endif
   fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
 #endif
 }
 #endif
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
+
+#define WIN32_LEAN_AND_MEAN
+#include <tlhelp32.h>
+
 static void
 w32_set_octave_home (void)
 {
-  int n = 1024;
+  std::string bin_dir;
 
-  std::string bin_dir (n, '\0');
+  HANDLE h = CreateToolhelp32Snapshot (TH32CS_SNAPMODULE |
+				       TH32CS_SNAPMODULE32, 0);
 
-  while (true)
+  if (h != INVALID_HANDLE_VALUE)
     {
-      HMODULE hMod = GetModuleHandle ("octinterp");
-      if (! hMod)
-        hMod = GetModuleHandle ("liboctinterp-0");
+      MODULEENTRY32 mod_info;
+
+      ZeroMemory (&mod_info, sizeof (mod_info));
+      mod_info.dwSize = sizeof (mod_info);
 
-      int status = GetModuleFileName (hMod, &bin_dir[0], n);
+      if (Module32First (h, &mod_info))
+	{
+	  do
+	    {
+	      std::string mod_name (mod_info.szModule);
 
-      if (status < n)
-        {
-          bin_dir.resize (status);
-          break;
-        }
-      else
-        {
-          n *= 2;
-          bin_dir.resize (n);
-        }
+	      if (mod_name.find ("octinterp") != std::string::npos)
+		{
+		  bin_dir = mod_info.szExePath;
+		  if (bin_dir[bin_dir.length () - 1] != '\\')
+		    bin_dir.append (1, '\\');
+		  break;
+		}
+	    }
+	  while (Module32Next (h, &mod_info));
+	}
+
+      CloseHandle (h);
     }
 
   if (! bin_dir.empty ())
     {
       size_t pos = bin_dir.rfind ("\\bin\\");
 
       if (pos != std::string::npos)
         octave_env::putenv ("OCTAVE_HOME", bin_dir.substr (0, pos));
