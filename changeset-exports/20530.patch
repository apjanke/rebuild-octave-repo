# HG changeset patch
# User Carlo de Falco <carlo.defalco@polimi.it>
# Date 1443713734 -7200
#      Thu Oct 01 17:35:34 2015 +0200
# Node ID 17e507df10e3a9a50241d6a875415d85d3d35bcf
# Parent  2e7a091365162c167f4bd78319eb4cca78b1b099
Set the default colormap to 'viridis'

* script/image/colormap.m: set the default colormap
  to viridis instead of jet.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,11 +1,17 @@
 Summary of important user-visible changes for version 4.2:
 ---------------------------------------------------------
 
+ ** The default colormap is now set to 'viridis' which is also
+    the default colormap in matplotlib. This new colormap fixes
+    some of the main issues with the old default colormap 'jet'
+    such as its bad 'luminance profile' and is also more similar
+    to Matlab's new default colormap 'parula'.
+
  ** Octal ('\NNN') and hex ('\xNN') escape sequences in single quoted
     strings are now interpreted by the function do_string_escapes().
     The *printf family of functions now supports octal and hex escape
     sequences in single-quoted strings for Matlab compatibility.
 
  ** Special octal and hex escape sequences for the pattern and replacement
     strings in regular expressions are now interpreted for Matlab compatibility.
 
diff --git a/scripts/image/colormap.m b/scripts/image/colormap.m
--- a/scripts/image/colormap.m
+++ b/scripts/image/colormap.m
@@ -32,32 +32,32 @@
 ## With no input arguments, @code{colormap} returns the current color map.
 ##
 ## @code{colormap (@var{map})} sets the current colormap to @var{map}.  The
 ## colormap should be an @var{n} row by 3 column matrix.  The columns
 ## contain red, green, and blue intensities respectively.  All entries
 ## must be between 0 and 1 inclusive.  The new colormap is returned.
 ##
 ## @code{colormap ("default")} restores the default colormap (the
-## @code{jet} map with 64 entries).  The default colormap is returned.
+## @code{virdis} map with 64 entries).  The default colormap is returned.
 ##
 ## The map may also be specified by a string, @qcode{"@var{map_name}"}, where
 ## @var{map_name} is the name of a function that returns a colormap.
 ##
 ## If the first argument @var{hax} is an axes handle, then the colormap for
 ## the parent figure of @var{hax} is queried or set.
 ##
 ## For convenience, it is also possible to use this function with the
 ## command form, @code{colormap @var{map_name}}.
 ##
 ## @code{colormap ("list")} returns a cell array with all of the available
 ## colormaps.  The options @qcode{"register"} and @qcode{"unregister"}
 ## add or remove the colormap @var{name} from this list.
 ##
-## @seealso{jet}
+## @seealso{virdis}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
 function cmap = colormap (varargin)
   mlock; # prevent map_list to be cleared by "clear all"
@@ -74,17 +74,17 @@ function cmap = colormap (varargin)
   else
     cf = get (0, "currentfigure");
   endif
 
   if (nargin == 1)
     map = varargin{1};
     if (ischar (map))
       if (strcmp (map, "default"))
-        map = jet (64);
+        map = virdis (64);
       elseif (strcmp (map, "list"))
         cmap = map_list;
         return;
       else
         map = feval (map);
       endif
     endif
 
@@ -127,19 +127,19 @@ function cmap = colormap (varargin)
 
 endfunction
 
 
 %!demo
 %! ## Create an image for displaying a colormap
 %! image (1:64, linspace (0, 1, 64), repmat ((1:64)', 1, 64));
 %! axis ([1, 64, 0, 1], "ticy", "xy");
-%! ## Show 'jet' colormap
-%! colormap (jet (64));
-%! title "colormap (jet (64))"
+%! ## Show 'virdis' colormap
+%! colormap (virdis (64));
+%! title "colormap (virdis (64))"
 %! disp ("Press a key to continue");
 %! pause ();
 %! ## Show 'colorcube' colormap
 %! colormap (colorcube (64));
 %! title "colormap (colorcube (64))"
 
 %!test
 %! hf = figure ("visible", "off");
@@ -147,17 +147,17 @@ endfunction
 %!   cmaptst = [0 1 0; 1 0 1; 1 1 1];
 %!   cmap = colormap (cmaptst);
 %!   assert (cmap, cmaptst);
 %!   cmap = colormap ();
 %!   assert (cmap, cmaptst);
 %!   cmap = (get (gcf, "colormap"));
 %!   assert (cmap, cmaptst);
 %!   colormap ("default");
-%!   assert (colormap (), jet (64));
+%!   assert (colormap (), virdis (64));
 %!   colormap ("ocean");
 %!   assert (colormap, ocean (64));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
 %!test
 %! hf = figure ("visible", "off");
