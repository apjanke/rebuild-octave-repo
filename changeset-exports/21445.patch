# HG changeset patch
# User Rik <rik@octave.org>
# Date 1457884019 25200
#      Sun Mar 13 08:46:59 2016 -0700
# Node ID de155ca994d44fc6601c24fd482d8654f24ef910
# Parent  74b07936fd05086f0046a3ab6b20c98dcdde2e4b
Ask glpk to free all resources used after solving problem.

* __glpk__.cc (glpk): Call glp_free_env () at end of routine to free
all resources.  Prevents memory leaks being reported.

diff --git a/libinterp/dldfcn/__glpk__.cc b/libinterp/dldfcn/__glpk__.cc
--- a/libinterp/dldfcn/__glpk__.cc
+++ b/libinterp/dldfcn/__glpk__.cc
@@ -280,16 +280,21 @@ glpk (int sense, int n, int m, double *c
                 redcosts[i] = glp_ipt_col_dual (lp, i+1);
             }
         }
 
       *time = (clock () - t_start) / CLOCKS_PER_SEC;
     }
 
   glp_delete_prob (lp);
+  // Request that GLPK free all memory resources.
+  // This prevents reported memory leaks, but isn't strictly necessary.
+  // The memory blocks use are allocated once and don't grow with further
+  // calls to glpk so they would be reclaimed anyways when Octave exits. 
+  glp_free_env ();
 
   return errnum;
 }
 
 #endif
 
 #define OCTAVE_GLPK_GET_REAL_PARAM(NAME, VAL) \
   do \
