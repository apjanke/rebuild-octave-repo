# HG changeset patch
# User jwe
# Date 760677879 0
#      Tue Feb 08 03:24:39 1994 +0000
# Node ID ecb6f1e1184255a25cbd5569456e2f994baf6f4c
# Parent  073585d1d4fa181eb2d79abf23bb6b4278e07a1e
[project @ 1994-02-08 03:24:33 by jwe]

diff --git a/liboctave/Matrix.cc b/liboctave/Matrix.cc
--- a/liboctave/Matrix.cc
+++ b/liboctave/Matrix.cc
@@ -359,17 +359,17 @@ Matrix::fill (double val)
 
   return *this;
 }
 
 Matrix&
 Matrix::fill (double val, int r1, int c1, int r2, int c2)
 {
   int nr = rows ();
-  int nc = rows ();
+  int nc = cols ();
   if (r1 < 0 || r2 < 0 || c1 < 0 || c2 < 0
       || r1 >= nr || r2 >= nr || c1 >= nc || c2 >= nc)
     {
       (*current_liboctave_error_handler) ("range error for fill");
       return *this;
     }
 
   if (r1 > r2) { int tmp = r1; r1 = r2; r2 = tmp; }
@@ -2617,17 +2617,17 @@ ComplexMatrix::fill (const Complex& val)
 
   return *this;
 }
 
 ComplexMatrix&
 ComplexMatrix::fill (double val, int r1, int c1, int r2, int c2)
 {
   int nr = rows ();
-  int nc = rows ();
+  int nc = cols ();
   if (r1 < 0 || r2 < 0 || c1 < 0 || c2 < 0
       || r1 >= nr || r2 >= nr || c1 >= nc || c2 >= nc)
     {
       (*current_liboctave_error_handler) ("range error for fill");
       return *this;
     }
 
   if (r1 > r2) { int tmp = r1; r1 = r2; r2 = tmp; }
@@ -2639,17 +2639,17 @@ ComplexMatrix::fill (double val, int r1,
 
   return *this;
 }
 
 ComplexMatrix&
 ComplexMatrix::fill (const Complex& val, int r1, int c1, int r2, int c2)
 {
   int nr = rows ();
-  int nc = rows ();
+  int nc = cols ();
   if (r1 < 0 || r2 < 0 || c1 < 0 || c2 < 0
       || r1 >= nr || r2 >= nr || c1 >= nc || c2 >= nc)
     {
       (*current_liboctave_error_handler) ("range error for fill");
       return *this;
     }
 
   if (r1 > r2) { int tmp = r1; r1 = r2; r2 = tmp; }
diff --git a/liboctave/Matrix.h b/liboctave/Matrix.h
--- a/liboctave/Matrix.h
+++ b/liboctave/Matrix.h
@@ -469,17 +469,17 @@ public:
 
   friend ComplexRowVector operator + (const Complex& s, const RowVector& a);
   friend ComplexRowVector operator - (const Complex& s, const RowVector& a);
   friend ComplexRowVector operator * (const Complex& s, const RowVector& a);
   friend ComplexRowVector operator / (const Complex& s, const RowVector& a);
 
 // row vector by column vector -> scalar
 
-  friend double operator * (const RowVector& a, ColumnVector& b);
+  friend double operator * (const RowVector& a, const ColumnVector& b);
 
   friend Complex operator * (const RowVector& a, const ComplexColumnVector& b);
 
 // row vector by matrix -> row vector
 
   friend RowVector operator * (const RowVector& a, const Matrix& b);
 
   friend ComplexRowVector operator * (const RowVector& a,
@@ -608,18 +608,18 @@ public:
 // scalar by diagonal matrix -> diagonal matrix operations
 
   friend ComplexDiagMatrix operator * (const Complex& s, const DiagMatrix& a);
 
 // diagonal matrix by column vector -> column vector operations
 
   friend ColumnVector operator * (const DiagMatrix& a, const ColumnVector& b);
 
-  friend ComplexColumnVector operator * (const DiagMatrix& a, const
-					 ComplexColumnVector& b);
+  friend ComplexColumnVector operator * (const DiagMatrix& a,
+					 const ComplexColumnVector& b);
 
 // diagonal matrix by diagonal matrix -> diagonal matrix operations
 
   friend ComplexDiagMatrix operator + (const DiagMatrix& a,
 				       const ComplexDiagMatrix& b);
   friend ComplexDiagMatrix operator - (const DiagMatrix& a,
 				       const ComplexDiagMatrix& b);
 
