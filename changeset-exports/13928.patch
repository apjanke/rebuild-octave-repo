# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1322025766 28800
#      Tue Nov 22 21:22:46 2011 -0800
# Node ID 2892fd834446f5c0d60d74f84393d78fe10d1404
# Parent  1f6d17b383f80b929cdc6b7536ea8c7e8752a1fd
doc: Update seealso references for cellslices and cellindexmat

* cellfun.cc (cellslices, cellindexmat): Update seealso references.

diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -2290,16 +2290,17 @@ sl = cell (1, n);\n\
 for i = 1:length (lb)\n\
   sl@{i@} = x(:,@dots{},lb(i):ub(i),@dots{},:);\n\
 endfor\n\
 @end group\n\
 @end example\n\
 \n\
 The position of the index is determined by @var{dim}.  If not specified,\n\
 slicing is done along the first non-singleton dimension.\n\
+@seealso{cell2mat, cellindexmat, cellfun}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
   if (nargin == 3 || nargin == 4)
     {
       octave_value x = args(0);
       Array<octave_idx_type> lb = args(1).octave_idx_type_vector_value ();
@@ -2403,17 +2404,17 @@ Given a cell array of matrices @var{x}, 
 @example\n\
 @group\n\
   Y = cell (size (X));\n\
   for i = 1:numel (X)\n\
     Y@{i@} = X@{i@}(varargin@{:@});\n\
   endfor\n\
 @end group\n\
 @end example\n\
-@seealso{cellfun, cellslices}\n\
+@seealso{cellslices, cellfun}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () >= 1)
     {
       if (args(0).is_cell ())
         {
           const Cell x = args(0).cell_value ();
