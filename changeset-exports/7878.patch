# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1213119815 14400
#      Tue Jun 10 13:43:35 2008 -0400
# Node ID b4ac6bb4114b03113ae38f29a3613aa0b52933fe
# Parent  59031cfe331bd5ae4b81516c3b14023cfc1eb4e9
graphics.cc (execute_callback, xget_ancestor): pass args by const reference and make explicit copies

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2008-06-09  John W. Eaton  <jwe@octave.org>
 
+	* graphics.cc (execute_callback): Pass CB by const reference and
+	explicitly make a copy.
+	(xget_ancestor): Pass GO by const reference and explicitly make a copy.
+
 	* error.cc (verror): Omit "name: " and "\a" from Vlast_error_msg.
 	Save line and column information from user code.
 	* toplev.cc (octave_call_stack::do_caller_user_code_line,
 	octave_call_stack::do_caller_user_code_column): New functions.
 	* toplev.h: Provide decls.
 	(octave_call_stack::caller_user_code_line,
 	octave_call_stack::caller_user_code_column): New functions.
 	(octave_call_stack::current_line, octave_call_stack::current_column): 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -183,22 +183,18 @@ xset_gcbo (const graphics_handle& h)
 }
 
 static void
 xreset_gcbo (void *)
 {
   xset_gcbo (graphics_handle ());
 }
 
-// NOTE: "cb" is passed by value, because "function_value" method
-//       is non-const; passing "cb" by const-reference is not
-//       possible
-
 static void
-execute_callback (octave_value cb, const graphics_handle& h,
+execute_callback (const octave_value& cb_arg, const graphics_handle& h,
                   const octave_value& data)
 {
   octave_value_list args;
   octave_function *fcn = 0;
 
   args(0) = h.as_octave_value ();
   if (data.is_defined ())
     args(1) = data;
@@ -207,16 +203,20 @@ execute_callback (octave_value cb, const
 
   unwind_protect::begin_frame ("execute_callback");
   unwind_protect::add (xreset_gcbo);
 
   xset_gcbo (h);
 
   BEGIN_INTERRUPT_WITH_EXCEPTIONS;
 
+  // Copy CB because "function_value" method is non-const.
+
+  octave_value cb = cb_arg;
+
   if (cb.is_function_handle ())
     fcn = cb.function_value ();
   else if (cb.is_string ())
     {
       int status;
       std::string s = cb.string_value ();
 
       eval_string (s, false, status);
@@ -329,18 +329,20 @@ convert_position (const Matrix& pos, con
 	    }
 	}
     }
 
   return retval;
 }
 
 static graphics_object
-xget_ancestor (graphics_object go, const std::string& type)
+xget_ancestor (const graphics_object& go_arg, const std::string& type)
 {
+  graphics_object go = go_arg;
+
   do
     {
       if (go.valid_object ())
 	{
 	  if (go.isa (type))
 	    return go;
 	  else
 	    go = gh_manager::get_object (go.get_parent ());
