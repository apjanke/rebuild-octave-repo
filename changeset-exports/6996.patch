# HG changeset patch
# User jwe
# Date 1191976762 0
#      Wed Oct 10 00:39:22 2007 +0000
# Node ID 9861dc5f382b392e7aa21e24bae785fc3f099ada
# Parent  963878fa32678212fb50b16d35683d6ba5c27ab0
[project @ 2007-10-10 00:39:21 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,14 @@
 2007-10-09  John W. Eaton  <jwe@octave.org>
 
+	* oct-time.cc (octave_strptime::init): Initialize t.tm_mon to -1
+	and t.tm_year to INT_MIN before call to oct_strptime.  Adjust
+	values to zero after call if they remain unchanged.
+
 	* dSparse.cc (SparseMatrix::all_elements_are_zero): New function.
 	* dNDArray.cc (NDArray::all_elements_are_zero): New function.
 
 2007-10-09  David Bateman  <dbateman@free.fr>
 
 	* oct-time.cc (octave_strptime::init): Only call mktime if mday is
 	valud and mon and year are also filled in.
 
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -336,39 +336,45 @@ void
 octave_strptime::init (const std::string& str, const std::string& fmt)
 {
   struct tm t;
 
   t.tm_sec = 0;
   t.tm_min = 0;
   t.tm_hour = 0;
   t.tm_mday = 0;
-  t.tm_mon = 0;
-  t.tm_year = 0;
+  t.tm_mon = -1;
+  t.tm_year = INT_MIN;
   t.tm_wday = 0;
   t.tm_yday = 0;
   t.tm_isdst = 0;
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
   char *p = strsave (str.c_str ());
 
   char *q = oct_strptime (p, fmt.c_str (), &t);
 
   // Fill in wday and yday, but only if mday is valid and the mon and year
   // are filled in, avoiding issues with mktime and invalid dates.
-  if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != 0)
+  if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != INT_MIN)
     {
       t.tm_isdst = -1;
       mktime (&t);
     }
 
+  if (t.tm_mon < 0)
+    t.tm_mon = 0;
+
+  if (t.tm_year == INT_MIN)
+    t.tm_year = 0;
+
   if (q)
     nchars = q - p + 1;
   else
     nchars = 0;
 
   delete [] p;
 
   octave_base_tm::init (&t);
