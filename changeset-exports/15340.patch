# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1347302237 14400
#      Mon Sep 10 14:37:17 2012 -0400
# Node ID 9d0cdd49054b527bea7cf1ef0ec31ddb3b6d723e
# Parent  b49d707fe9d7bf8f676e8f0469abe443491ff3d5
keep history in gui widget at bottom when new items are added

* history-docwidget.cc (history_dock_widget::event_accepted):
New static variable, scroll_window.  Set to true when an item is added
to the list.  If no items are added, check to see whether window
should be positioned at the bottom.

diff --git a/libgui/src/history-dockwidget.cc b/libgui/src/history-dockwidget.cc
--- a/libgui/src/history-dockwidget.cc
+++ b/libgui/src/history-dockwidget.cc
@@ -23,28 +23,32 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QVBoxLayout>
 
 #include "cmd-hist.h"
 
+#include "error.h"
+
 #include "history-dockwidget.h"
 
 history_dock_widget::history_dock_widget (QWidget * parent)
   : QDockWidget (parent), octave_event_observer ()
 {
   setObjectName ("HistoryDockWidget");
   construct ();
 }
 
 void
 history_dock_widget::event_accepted (octave_event *e)
 {
+  static bool scroll_window = false;
+
   if (dynamic_cast <octave_update_history_event*> (e))
     {
       // Determine the client's (our) history length and the one of the server.
       int clientHistoryLength = _history_model->rowCount ();
       int serverHistoryLength = command_history::length ();
 
       // If were behind the server, iterate through all new entries and add
       // them to our history.
@@ -56,25 +60,31 @@ history_dock_widget::event_accepted (oct
 
           for (int i = clientHistoryLength; i < serverHistoryLength; i++)
             {
               std::string entry = command_history::get_entry (i);
 
               _history_model->setData (_history_model->index (i),
                                        QString::fromStdString (entry));
             }
-        }
+
+          // FIXME -- does this behavior make sense?  Calling
+          // _history_list_view->scrollToBottom () here doesn't seem to
+          // have any effect.  Instead, we need to request that action
+          // and wait until the next event occurs in which no items
+          // are added to the history list.
 
-      // FIXME -- how to make the widget scroll to the bottom when an
-      // item is added, but leave it alone if the user has moved it
-      // somewhere other than the bottom of the list?  The following
-      // doesn't seem to work.  It forces to the widget to always scroll
-      // to the bottom, even if no items are added.
-      //
-      // _history_list_view->scrollToBottom ();
+          scroll_window = true;
+        }
+      else if (scroll_window)
+        {
+          scroll_window = false;
+
+          _history_list_view->scrollToBottom ();
+        }
     }
 
   // Post a new update event in a given time. This prevents flooding the
   // event queue.
   _update_history_model_timer.start ();
   delete e;
 }
 
