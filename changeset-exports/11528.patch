# HG changeset patch
# User David Grundberg <individ@acc.umu.se>
# Date 1295035442 -3600
#      Fri Jan 14 21:04:02 2011 +0100
# Node ID feb90c7cfc1628942a0389d025ed8ce199e05434
# Parent  a10544c699f20bbc9afd265ad5d207d9568a56f8
Build successfully without HAVE_CXSPARSE

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2011-01-14  David Grundberg  <individ@acc.umu.se>
+
+	* SparseQR.cc (SparseQR_rep::SparseQR_rep) [HAVE_CXSPARSE]:
+	Make initialization list depend on macro. Fixes compile error when
+	macro isn't defined.
+	* SparseCmplxQR.cc (SparseComplexQR_rep::SparseComplexQR_rep)
+	[HAVE_CXSPARSE]: Ditto.
+
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* lo-mappers.cc (xfloor): Move function body here from
 	lo-mappers.h to avoid exposing gnulib:: in a header file.
 
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* file-stat.cc (mode_as_string): Call strmode instead of mode_string.
diff --git a/liboctave/SparseCmplxQR.cc b/liboctave/SparseCmplxQR.cc
--- a/liboctave/SparseCmplxQR.cc
+++ b/liboctave/SparseCmplxQR.cc
@@ -45,17 +45,20 @@ typedef double _Complex cs_complex_t;
 #define OCTAVE_C99_COMPLEX(buf, n) \
   OCTAVE_LOCAL_BUFFER (cs_complex_t, buf, (n));
 #define OCTAVE_C99_ZERO cs_complex_t(0., 0.);
 #define OCTAVE_C99_ONE cs_complex_t(1., 0.);
 #endif
 
 SparseComplexQR::SparseComplexQR_rep::SparseComplexQR_rep 
   (GCC_ATTR_UNUSED const SparseComplexMatrix& a, GCC_ATTR_UNUSED int order)
-  : count (1), nrows (0), S (0), N (0)
+  : count (1), nrows (0)
+#ifdef HAVE_CXSPARSE
+    , S (0), N (0)
+#endif
 {
 #ifdef HAVE_CXSPARSE
   CXSPARSE_ZNAME () A;
   A.nzmax = a.nnz ();
   A.m = a.rows ();
   A.n = a.cols ();
   nrows = A.m;
   // Cast away const on A, with full knowledge that CSparse won't touch it
diff --git a/liboctave/SparseQR.cc b/liboctave/SparseQR.cc
--- a/liboctave/SparseQR.cc
+++ b/liboctave/SparseQR.cc
@@ -25,17 +25,20 @@ along with Octave; see the file COPYING.
 #endif
 #include <vector>
 
 #include "lo-error.h"
 #include "SparseQR.h"
 #include "oct-locbuf.h"
 
 SparseQR::SparseQR_rep::SparseQR_rep (const SparseMatrix& a, int order)
-  : count (1), nrows (0), S (0), N (0)
+  : count (1), nrows (0)
+#ifdef HAVE_CXSPARSE
+    , S (0), N (0)
+#endif
 {
 #ifdef HAVE_CXSPARSE
   CXSPARSE_DNAME () A;
   A.nzmax = a.nnz ();
   A.m = a.rows ();
   A.n = a.cols ();
   nrows = A.m;
   // Cast away const on A, with full knowledge that CSparse won't touch it
