# HG changeset patch
# User jwe
# Date 863422011 0
#      Mon May 12 07:26:51 1997 +0000
# Node ID 0a2551ec7004c301cf61b2fbc163e88350c3b8a1
# Parent  c0c280cda856761cdf647cc199f4a16ee18b31ad
[project @ 1997-05-12 07:26:50 by jwe]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -1903,20 +1903,29 @@ ComplexMatrix::operator -= (const Comple
   Complex *d = fortran_vec (); // Ensures only one reference to my privates!
 
   subtract2 (d, a.data (), length ());
   return *this;
 }
 
 // unary operations
 
-Matrix
+boolMatrix
 ComplexMatrix::operator ! (void) const
 {
-  return Matrix (not (data (), length ()), rows (), cols ());
+  int nr = rows ();
+  int nc = cols ();
+
+  boolMatrix b (nr, nc);
+
+  for (int j = 0; j < nc; j++)
+    for (int i = 0; i < nr; i++)
+      b.elem (i, j) = elem (i, j) != 0.0;
+
+  return b;
 }
 
 // other operations
 
 ComplexMatrix
 ComplexMatrix::map (c_c_Mapper f) const
 {
   ComplexMatrix b (*this);
diff --git a/liboctave/CMatrix.h b/liboctave/CMatrix.h
--- a/liboctave/CMatrix.h
+++ b/liboctave/CMatrix.h
@@ -195,17 +195,17 @@ public:
   ComplexMatrix& operator += (const Matrix& a);
   ComplexMatrix& operator -= (const Matrix& a);
 
   ComplexMatrix& operator += (const ComplexMatrix& a);
   ComplexMatrix& operator -= (const ComplexMatrix& a);
 
   // unary operations
 
-  Matrix operator ! (void) const;
+  boolMatrix operator ! (void) const;
 
   // other operations
 
   ComplexMatrix map (c_c_Mapper f) const;
   Matrix map (d_c_Mapper f) const;
 
   ComplexMatrix& apply (c_c_Mapper f);
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Mon May 12 02:14:13 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* CMatrix.cc (ComplexMatrix::operator !): Return boolMatrix.
+	* dMatrix.cc (Matrix::operator !): Likewise
+
 Wed May  7 21:14:06 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-syscalls.h, oct-syscalls.cc: New files.
 
 	* cmd-edit.h, cmd-edit.cc: Handle completion function.
 
 	* str-vec.h, str-vec.cc (string_vector::uniq): New function.
 
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -1512,23 +1512,23 @@ Matrix::operator -= (const DiagMatrix& a
   for (int i = 0; i < a.length (); i++)
     elem (i, i) -= a.elem (i, i);
 
   return *this;
 }
 
 // unary operations
 
-Matrix
+boolMatrix
 Matrix::operator ! (void) const
 {
   int nr = rows ();
   int nc = cols ();
 
-  Matrix b (nr, nc);
+  boolMatrix b (nr, nc);
 
   for (int j = 0; j < nc; j++)
     for (int i = 0; i < nr; i++)
       b.elem (i, j) = ! elem (i, j);
 
   return b;
 }
 
diff --git a/liboctave/dMatrix.h b/liboctave/dMatrix.h
--- a/liboctave/dMatrix.h
+++ b/liboctave/dMatrix.h
@@ -166,17 +166,17 @@ public:
   Matrix& operator += (const Matrix& a);
   Matrix& operator -= (const Matrix& a);
 
   Matrix& operator += (const DiagMatrix& a);
   Matrix& operator -= (const DiagMatrix& a);
 
   // unary operations
 
-  Matrix operator ! (void) const;
+  boolMatrix operator ! (void) const;
 
   // column vector by row vector -> matrix operations
 
   friend Matrix operator * (const ColumnVector& a, const RowVector& b);
 
   // other operations
 
   Matrix map (d_d_Mapper f) const;
