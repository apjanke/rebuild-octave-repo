# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456325547 18000
#      Wed Feb 24 09:52:27 2016 -0500
# Node ID db574711df785997cd2352f69249606cb5a9ec60
# Parent  ca084a8b64c3008dc381eb1ffd4405d06afd646c
eliminate deprecated register storage class specifier

* colamd.cc, randmtzig.c: Don't declare variables with register
storage class specifier.
* libinterp/parse-tree/module.mk (libinterp/parse-tree/oct-gperf.h):
Filter out register storage class specifier from generated code.
* oct-tex-lexer.in.ll, lex.ll: Define away register storage class
specifier.

diff --git a/libinterp/corefcn/oct-tex-lexer.in.ll b/libinterp/corefcn/oct-tex-lexer.in.ll
--- a/libinterp/corefcn/oct-tex-lexer.in.ll
+++ b/libinterp/corefcn/oct-tex-lexer.in.ll
@@ -31,16 +31,22 @@ along with Octave; see the file COPYING.
 
 // Disable this warning for code that is generated by flex, including
 // pattern rules.  Push the current state so we can restore the warning
 // state prior to functions we define at the bottom of the file.
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
+// Define away the deprecated register storage class specifier to avoid
+// potential warnings about it.
+#if ! defined (register)
+#define register
+#endif
+
 }
 
 %option prefix = "octave_tex_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
 
 %option noyyalloc
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -106,20 +106,18 @@ link (octave_idx_type s, octave_idx_type
 {
   pp[s] = t;
   return t;
 }
 
 static inline octave_idx_type
 find (octave_idx_type i, octave_idx_type *pp)
 {
-  register octave_idx_type p, gp;
-
-  p = pp[i];
-  gp = pp[p];
+  octave_idx_type p = pp[i];
+  octave_idx_type gp = pp[p];
 
   while (gp != p)
     {
       pp[i] = gp;
       i = gp;
       p = pp[i];
       gp = pp[p];
     }
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -42,16 +42,22 @@ object) relevant global values before an
 
 // Disable this warning for code that is generated by flex, including
 // pattern rules.  Push the current state so we can restore the warning
 // state prior to functions we define at the bottom of the file.
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
+// Define away the deprecated register storage class specifier to avoid
+// potential warnings about it.
+#if ! defined (register)
+#define register
+#endif
+
 }
 
 %option prefix = "octave_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
 
 %option noyyalloc
diff --git a/libinterp/parse-tree/module.mk b/libinterp/parse-tree/module.mk
--- a/libinterp/parse-tree/module.mk
+++ b/libinterp/parse-tree/module.mk
@@ -77,17 +77,17 @@ PARSE_TREE_SRC = \
 
 ## Don't use a pipeline to process gperf output since if gperf
 ## is missing but sed is not, the exit status of the pipeline
 ## will still be success and we will end up creating an empty
 ## oct-gperf.h file.
 libinterp/parse-tree/oct-gperf.h: libinterp/parse-tree/octave.gperf
 	$(AM_V_GEN)rm -f $@-t $@t1 $@ && \
 	$(GPERF) -t -C -D -G -L C++ -Z octave_kw_hash $< > $@-t1 && \
-	$(SED) 's,lookup\[,gperf_lookup[,' < $@-t1 > $@-t && \
+	$(SED) -e 's,lookup\[,gperf_lookup[,' -e 's,register ,,g' < $@-t1 > $@-t && \
 	mv $@-t $@ && \
 	rm -f $@-t1
 
 libinterp/parse-tree/oct-parse.h: libinterp/parse-tree/oct-parse.cc
 
 libinterp/parse-tree/oct-parse.yy: libinterp/parse-tree/oct-parse.in.yy
 	$(AM_V_GEN)$(call subst-bison-api-decls,octave_)
 
diff --git a/liboctave/numeric/randmtzig.c b/liboctave/numeric/randmtzig.c
--- a/liboctave/numeric/randmtzig.c
+++ b/liboctave/numeric/randmtzig.c
@@ -334,17 +334,17 @@ next_state (void)
 
   *p = p[MT_M-MT_N] ^ TWIST(p[0], state[0]);
 }
 
 /* generates a random number on [0,0xffffffff]-interval */
 static uint32_t
 randmt (void)
 {
-  register uint32_t y;
+  uint32_t y;
 
   if (--left == 0)
     next_state ();
   y = *next++;
 
   /* Tempering */
   y ^= (y >> 11);
   y ^= (y << 7) & 0x9d2c5680UL;
@@ -576,17 +576,17 @@ oct_randn (void)
        * 53-bit mantissa:  PPC: 60%, MIPS: 65%, x86: 240%
        * Of course, different compilers and operating systems may
        * have something to do with this.
        */
 # ifdef HAVE_X86_32
       /* 53-bit mantissa, 1-bit sign, x86 32-bit architecture */
       double x;
       int si,idx;
-      register uint32_t lo, hi;
+      uint32_t lo, hi;
       int64_t rabs;
       uint32_t *p = (uint32_t *)&rabs;
       lo = randi32 ();
       idx = lo&0xFF;
       hi = randi32 ();
       si = hi&UMASK;
       p[0] = lo;
       p[1] = hi&0x1FFFFF;
