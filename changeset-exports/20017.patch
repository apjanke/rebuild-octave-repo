# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1427995170 14400
#      Thu Apr 02 13:19:30 2015 -0400
# Node ID 4b7b7ac7af2c0372acf6f89b3b0d4239174ee8ca
# Parent  47d420d769ba819f2ea0a63eb6860390b1988d77
use get_home_directory instead of getenv ("HOME") (bug #44694)

* files-dock-widget.cc (files_dock_widget::popdownmenu_home):
Use get_home_directory instead of getenv ("HOME") for the benefit of
Windows systems which may not have HOME set in the environment.
* kpse.cc (kpse_tilde_expand): Likewise.
* prefdir.m: Likewise.
* system.tst: Likewise.
* edit.m: Use get_home_directory instead of default_home.
(default_home): Delete subfunction.

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -41,16 +41,17 @@ along with Octave; see the file COPYING.
 #include <QInputDialog>
 #include <QMessageBox>
 #include <QToolButton>
 #include <QUrl>
 #include <QDesktopServices>
 #include <QFileDialog>
 
 #include "load-save.h"
+#include "oct-env.h"
 
 class FileTreeViewer : public QTreeView
 {
 public:
 
   FileTreeViewer (QWidget *p) : QTreeView (p) { }
 
   void mousePressEvent (QMouseEvent *e)
@@ -817,17 +818,18 @@ files_dock_widget::notice_settings (cons
   if (_sync_octave_dir)
     display_directory (_octave_dir);  // sync browser to octave dir
 
 }
 
 void
 files_dock_widget::popdownmenu_home (bool)
 {
-  QString dir = qgetenv ("HOME");
+  QString dir = QString::fromStdString (octave_env::get_home_directory ());
+
   if (dir.isEmpty ())
     dir = QDir::homePath ();
 
   set_current_directory (dir);
 }
 
 void
 files_dock_widget::popdownmenu_search_dir (bool)
diff --git a/liboctave/util/kpse.cc b/liboctave/util/kpse.cc
--- a/liboctave/util/kpse.cc
+++ b/liboctave/util/kpse.cc
@@ -1196,28 +1196,28 @@ kpse_tilde_expand (const std::string& na
       expansion = name;
 
       /* If a bare tilde, return the home directory or '.'.  (Very
          unlikely that the directory name will do anyone any good, but
          ...  */
     }
   else if (name.length () == 1)
     {
-      expansion = octave_env::getenv ("HOME");
+      expansion = octave_env::get_home_directory ();
 
       if (expansion.empty ())
         expansion = ".";
 
       /* If '~/', remove any trailing / or replace leading // in $HOME.
          Should really check for doubled intermediate slashes, too.  */
     }
   else if (IS_DIR_SEP (name[1]))
     {
       unsigned c = 1;
-      std::string home = octave_env::getenv ("HOME");
+      std::string home = octave_env::get_home_directory ();
 
       if (home.empty ())
         home = ".";
 
       size_t home_len = home.length ();
 
       /* handle leading // */
       if (home_len > 1 && IS_DIR_SEP (home[0]) && IS_DIR_SEP (home[1]))
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -120,17 +120,18 @@
 
 ## Original version by Paul Kienzle distributed as free software in the
 ## public domain.
 
 function ret = edit (varargin)
 
   ## Pick up globals or default them.
 
-  persistent FUNCTION = struct ("HOME", fullfile (default_home, "octave"),
+  persistent FUNCTION = struct ("HOME",
+                                fullfile (get_home_directory (), "octave"),
                                 "AUTHOR", default_user(1),
                                 "EMAIL", [],
                                 "LICENSE", "GPL",
                                 "MODE", "async",
                                 "EDITINPLACE", false);
   ## Make sure the stateval variables survive "clear functions".
   mlock;
 
@@ -159,17 +160,17 @@ function ret = edit (varargin)
     stateval = varargin{2};
     switch (toupper (statevar))
       case "EDITOR"
         error ("Octave:deprecated-function",
                "The EDITOR option of edit has been removed.  Use EDITOR() directly.")
         return;
       case "HOME"
         if (! isempty (stateval) && stateval(1) == "~")
-          stateval = [ default_home, stateval(2:end) ];
+          stateval = [ get_home_directory, stateval(2:end) ];
         endif
         FUNCTION.HOME = stateval;
         return;
       case "AUTHOR"
         FUNCTION.AUTHOR = stateval;
         return;
       case "EMAIL"
         FUNCTION.EMAIL = stateval;
@@ -512,30 +513,16 @@ SUCH DAMAGE.\
     fclose (fid);
 
     do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
 
   endif
 
 endfunction
 
-function retval = default_home ()
-
-  retval = getenv ("HOME");
-  if (isempty (retval))
-    retval = glob ("~");
-    if (! isempty (retval))
-      retval = retval{1};
-    else
-      retval = "";
-    endif
-  endif
-
-endfunction
-
 ## Return the name associated with the current user ID.
 ##
 ## If LONG_FORM is 1, return the full name.  This will be the
 ## default author.  Otherwise return the login name.
 ## login@host will be the default email address.
 
 function retval = default_user (long_form)
 
diff --git a/scripts/prefs/prefdir.m b/scripts/prefs/prefdir.m
--- a/scripts/prefs/prefdir.m
+++ b/scripts/prefs/prefdir.m
@@ -37,12 +37,12 @@
 ## @seealso{getpref, setpref, addpref, rmpref, ispref}
 ## @end deftypefn
 
 ## Author: John Donoghue
 ## Version: 0.01
 
 function folder = prefdir ()
 
-  folder = getenv ("HOME");
+  folder = get_home_directory ();
 
 endfunction
 
diff --git a/test/system.tst b/test/system.tst
--- a/test/system.tst
+++ b/test/system.tst
@@ -263,17 +263,17 @@
 %!assert (getegid () >= 0)
 
 %!error <... getegid> getegid (1)
 
 %!assert (getgid () >= 0)
 
 %!error <... getgid> getgid (1)
 
-%!assert (getenv ("HOME"), tilde_expand ("~"))
+%!assert (get_home_directory (), tilde_expand ("~"))
 
 %!error <Invalid call to getenv> getenv ()
 %!error <Invalid call to getenv> getenv ("foo", 1)
 
 %!test
 %! wns = warning ("query", "Octave:num-to-str");
 %! warning ("on", "Octave:num-to-str");
 %! fail ("getenv (1)", "warning");
