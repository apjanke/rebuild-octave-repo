# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1292711831 28800
#      Sat Dec 18 14:37:11 2010 -0800
# Node ID 757efa1d7e2ad7af662b22ff60ddfcff8bd5afbb
# Parent  98d523608f70f583bf478050e3a3fe2027f02554
Remove deprecated functions from manual.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,15 @@
+2010-12-17  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/container.txi, interpreter/func.txi,
+	interpreter/linalg.txi, interpreter/numbers.txi,
+	interpreter/signal.txi, interpreter/sparse.txi, interpreter/stats.txi,
+	interpreter/system.txi: Remove deprecated functions from manual.
+
 2010-12-17  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/doccheck/mk_undocumented_list: Update script to
 	automatically remove functions from the "test/" and "doc/interpreter"
 	directories.
 
 2010-12-17  Rik  <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -824,18 +824,16 @@ Strings}), @code{strcmp}, @code{strncmp}
 @code{strmatch}, , @code{regexp}, @code{regexpi} (@pxref{Manipulating 
 Strings}) and @code{str2double} (@pxref{String Conversions}).
 
 The function @code{iscellstr} can be used to test if an object is a
 cell array of strings.
 
 @DOCSTRING(iscellstr)
 
-@DOCSTRING(cellidx)
-
 @node Processing Data in Cell Arrays
 @subsection Processing Data in Cell Arrays
 
 Data that is stored in a cell array can be processed in several ways
 depending on the actual data.  The simplest way to process that data
 is to iterate through it using one or more @code{for} loops.  The same
 idea can be implemented more easily through the use of the @code{cellfun}
 function that calls a user-specified function on all elements of a cell
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -1201,71 +1201,68 @@ writing @code{f(x)}.
 
 @DOCSTRING(symvar)
 
 @node Commands
 @section Commands
 
 Commands are a special class of functions that only accept string
 input arguments.  A command can be called as an ordinary function, but
-it can also be called without the parentheses like the following example
-shows
+it can also be called without the parentheses.  For example,
 
 @example
 my_command hello world
 @end example
 
 @noindent
-which is the same as
+is equivalent to 
 
 @example
 my_command("hello", "world")
 @end example
 
+@noindent
 The general form of a command call is
 
 @example
-@var{name} @var{arg1} @var{arg2} @dots{}
+@var{cmdname} @var{arg1} @var{arg2} @dots{}
 @end example
 
 @noindent
 which translates directly to
 
 @example
-@var{name} ("@var{arg1}", "@var{arg2}", @dots{})
+@var{cmdname} ("@var{arg1}", "@var{arg2}", @dots{})
 @end example
 
-A function can be used as a command if it accepts string input arguments.
-To do this, the function must be marked as a command, which can be done
-with the @code{mark_as_command} command like this
-
+Any regular function can be used as a command if it accepts string input
+arguments.  For example:
 @example
-mark_as_command name
+@group
+toupper lower_case_arg
+   @result{} ans = LOWER_CASE_ARG
+@end group
 @end example
 
-@noindent
-where @code{name} is the function to be marked as a command.
-
 One difficulty of commands occurs when one of the string input arguments
-are stored in a variable.  Since Octave can't tell the difference between
-a variable name, and an ordinary string, it is not possible to pass a
+is stored in a variable.  Because Octave can't tell the difference between
+a variable name and an ordinary string, it is not possible to pass a
 variable as input to a command.  In such a situation a command must be
-called as a function.
-
-@DOCSTRING(mark_as_command)
+called as a function.  For example:
 
-@DOCSTRING(unmark_command)
-
-@DOCSTRING(iscommand)
+@example
+@group
+strvar = "hello world";
+toupper strvar
+   @result{} ans = STRVAR
+toupper (strvar)
+   @result{} ans = HELLO WORLD
+@end group
+@end example
 
-@DOCSTRING(mark_as_rawcommand)
-
-@DOCSTRING(unmark_rawcommand)
-
-@DOCSTRING(israwcommand)
 
 @node Organization of Functions
 @section Organization of Functions Distributed with Octave
 
 Many of Octave's standard functions are distributed as function files.
 They are loosely organized by topic, in subdirectories of
 @file{@var{octave-home}/lib/octave/@var{version}/m}, to make it easier
 to find them.
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -83,18 +83,16 @@ flag a non-Hermitian matrix.
 @section Basic Matrix Functions
 
 @DOCSTRING(balance)
 
 @DOCSTRING(cond)
 
 @DOCSTRING(det)
 
-@DOCSTRING(dmult)
-
 @DOCSTRING(dot)
 
 @DOCSTRING(eig)
 
 @DOCSTRING(givens)
 
 @DOCSTRING(planerot)
 
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -532,18 +532,16 @@ when converted.
 @DOCSTRING(int64)
 
 @DOCSTRING(uint64)
 
 @DOCSTRING(intmax)
 
 @DOCSTRING(intmin)
 
-@DOCSTRING(intwarning)
-
 @menu
 * Integer Arithmetic::
 @end menu
 
 @node Integer Arithmetic
 @subsection Integer Arithmetic
 
 While many numerical computations can't be carried out in integers,
diff --git a/doc/interpreter/signal.txi b/doc/interpreter/signal.txi
--- a/doc/interpreter/signal.txi
+++ b/doc/interpreter/signal.txi
@@ -77,20 +77,16 @@ generated by Octave to the system-wide w
 @DOCSTRING(arch_fit)
 
 @DOCSTRING(arch_rnd)
 
 @DOCSTRING(arch_test)
 
 @DOCSTRING(arma_rnd)
 
-@DOCSTRING(autocor)
-
-@DOCSTRING(autocov)
-
 @DOCSTRING(autoreg_matrix)
 
 @DOCSTRING(bartlett)
 
 @DOCSTRING(blackman)
 
 @DOCSTRING(diffpara)
 
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -214,27 +214,22 @@ that corresponds to this.  For example,
 @example
 s = diag (sparse(randn(1,n)), -1);
 @end example
 
 @noindent
 creates a sparse (@var{n}+1)-by-(@var{n}+1) sparse matrix with a single
 diagonal defined.
 
-
 @DOCSTRING(spdiags)
 
 @DOCSTRING(speye)
 
 @DOCSTRING(spfun)
 
-@DOCSTRING(spmax)
-
-@DOCSTRING(spmin)
-
 @DOCSTRING(spones)
 
 @DOCSTRING(sprand)
 
 @DOCSTRING(sprandn)
 
 @DOCSTRING(sprandsym)
 
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -101,18 +101,16 @@ Octave also supports various helpful sta
 @DOCSTRING(studentize)
 
 @DOCSTRING(nchoosek)
 
 @DOCSTRING(histc)
 
 @DOCSTRING(perms)
 
-@DOCSTRING(values)
-
 @DOCSTRING(table)
 
 @DOCSTRING(spearman)
 
 @DOCSTRING(run_count)
 
 @DOCSTRING(ranks)
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -173,18 +173,16 @@ about the status of files.
 
 @DOCSTRING(mkfifo)
 
 @DOCSTRING(umask)
 
 @anchor{doc-lstat}
 @DOCSTRING(stat)
 
-@DOCSTRING(fstat)
-
 @DOCSTRING(fileattrib)
 
 @DOCSTRING(isdir)
 
 @DOCSTRING(glob)
 
 @DOCSTRING(fnmatch)
 
