# HG changeset patch
# User Rik <rik@octave.org>
# Date 1481554194 28800
#      Mon Dec 12 06:49:54 2016 -0800
# Node ID 9b096bffc10d330711471050d2054b3b56d5542d
# Parent  f84aa17075d49a8be5e57883c6533a67808ba735
Fix plotting of constant functions with ezplot (bug #49766).

* __ezplot__.m (find_valid_domain): Check for constant value of Y domain and
set limits to Y +/- 1.

diff --git a/scripts/plot/draw/private/__ezplot__.m b/scripts/plot/draw/private/__ezplot__.m
--- a/scripts/plot/draw/private/__ezplot__.m
+++ b/scripts/plot/draw/private/__ezplot__.m
@@ -393,17 +393,17 @@ function [h, needusage] = __ezplot__ (pl
           Z = __eliminate_sing__ (Z);
           if (circ)
             ## Use domain calculated at the start.
             ## The X, Y grids are non-monotonic after conversion from polar
             ## coordinates and find_valid_domain fails.
 
           elseif (auto_domain && ! auto_domain_done)
             valid_domain = find_valid_domain (X, Y, Z);
-            domain_ok = isequal (domain, valid_domain);
+            domain_ok = all (domain == valid_domain);
             domain = valid_domain;
             auto_domain_done = true;  # ensures only 1 round of do loop done
           else
             if (! auto_domain_done)
               domain = find_valid_domain (X, Y, Z);
             endif
           endif
         endif
@@ -498,16 +498,22 @@ function domain = find_valid_domain (X, 
       irhi = XX(fix (7/8 * length (XX)));
       d = irhi - irlo;
       domain(3) = max (XX(1) - d/8, irlo - d);
       domain(4) = min (XX(end) + d/8, irhi + d);
     else
       domain(3:4) = [XX(1), XX(end)];
     endif
 
+    ## Handle exceptional case of constant function
+    if (domain(3) == domain(4)) 
+      domain(3) -= 1;
+      domain(4) += 1;
+    endif
+
   else
     ## 3-D data such as mesh, surf
     Zfinite = ! isnan (Z);
     Zrows = any (Zfinite, 2);
     rmin = find (Zrows, 1, "first");
     rmax = find (Zrows, 1, "last");
     Zcols = any (Zfinite, 1);
     cmin = find (Zcols, 1, "first");
