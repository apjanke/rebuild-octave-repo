# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1267048426 18000
#      Wed Feb 24 16:53:46 2010 -0500
# Node ID 7ed1f2e831bafb4364070da82f5cd109f1a8a813
# Parent  a3635bc1ea19c34cf6010b2d9fd14660b3d4c456
qr.cc: increase tolerance for test

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-02-19  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/qr.cc: Increase tolerance for test.
+
 2010-02-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* TEMPLATE-INST/Array-tc.cc: Remove Array2 instantiation.
 	* DLD-FUNCTIONS/besselj.cc: Use Array instead of Array2.
 	* DLD-FUNCTIONS/tril.cc: Ditto.
 	* data.cc: Ditto.
 	* ov-typeinfo.cc: Ditto.
 	* ov-typeinfo.h: Ditto.
@@ -101,18 +105,16 @@ 2010-02-21  Michael Goffioul  <michael.g
 	* ov-bool.h (class octave_bool): Add OCTINTERP_API.
 	* unwind-prot.h (class unwind_protect_safe): Ditto.
 
 	* Makefile.am: Add -bindir flag to liboctinterp_la_LDFLAGS. Remove
 	temporary libtool module file after copying oct file.
 
 2010-02-19  John W. Eaton  <jwe@octave.org>
 
-2010-02-19  John W. Eaton  <jwe@octave.org>
-
 	* DLD-FUNCTIONS/qr.cc: Increase tolerance for test.
 
 2010-02-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-lazy-idx.cc (octave_lazy_index::reshape,
 	octave_lazy_index::squeeze, octave_lazy_index::permute,
 	octave_lazy_index::sort, octave_lazy_index::is_sorted,
 	octave_lazy_index::sort_rows_idx, octave_lazy_index::is_sorted_rows):
diff --git a/src/DLD-FUNCTIONS/qr.cc b/src/DLD-FUNCTIONS/qr.cc
--- a/src/DLD-FUNCTIONS/qr.cc
+++ b/src/DLD-FUNCTIONS/qr.cc
@@ -1313,17 +1313,17 @@ If @var{orient} is @code{\"row\"}, full 
 %! AA = [0.091364  0.613038  0.027504  0.999083;
 %!       0.594638  0.425302  0.562834  0.603537;
 %!       0.383594  0.291238  0.742073  0.085574;
 %!       0.265712  0.268003  0.783553  0.238409;
 %!       0.669966  0.743851  0.457255  0.445057 ];
 %!
 %! [Q,R] = qr(AA);
 %! [Q,R] = qrdelete(Q,R,3);
-%! assert(norm(vec(Q'*Q - eye(5)),Inf) < 1e1*eps)
+%! assert(norm(vec(Q'*Q - eye(5)),Inf) < 16*eps)
 %! assert(norm(vec(triu(R)-R),Inf) == 0)
 %! assert(norm(vec(Q*R - [AA(:,1:2) AA(:,4)]),Inf) < norm(AA)*1e1*eps)
 %! 
 %!test
 %! AA = [0.364554 + 0.993117i  0.669818 + 0.510234i  0.426568 + 0.041337i  0.847051 + 0.233291i;
 %!       0.049600 + 0.242783i  0.448946 + 0.484022i  0.141155 + 0.074420i  0.446746 + 0.392706i;
 %!       0.581922 + 0.657416i  0.581460 + 0.030016i  0.219909 + 0.447288i  0.201144 + 0.069132i;
 %!       0.694986 + 0.000571i  0.682327 + 0.841712i  0.807537 + 0.166086i  0.192767 + 0.358098i;
