# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1316547190 14400
#      Tue Sep 20 15:33:10 2011 -0400
# Branch stable
# Node ID bd2cd4fd3edf77902fcde6a0130a98222e3f4c33
# Parent  25467719730bcb9adbd307f750b3fe937221b23b
maint: use specific endif, endfor tokens instead of simple end

* gmres.m, getappdata.m, setappdata.m, axis.m:
Use specific endif, endfor tokens instead of simple end.

diff --git a/scripts/linear-algebra/gmres.m b/scripts/linear-algebra/gmres.m
--- a/scripts/linear-algebra/gmres.m
+++ b/scripts/linear-algebra/gmres.m
@@ -71,17 +71,17 @@
 ##
 ## @seealso{pcg, cgs, bicgstab}
 ## @end deftypefn
 
 function [x, flag, prec_res_norm, itcnt] = gmres (A, b, restart, rtol, maxit, M1, M2, x0)
 
   if (nargin < 2 || nargin > 8)
     print_usage ();    
-  end
+  endif
       
   if (ischar (A))
     Ax = str2func (A);
   elseif (ismatrix (A))
     Ax = @(x) A*x;
   elseif (isa (A, "function_handle"))
     Ax = A;
   else
diff --git a/scripts/miscellaneous/getappdata.m b/scripts/miscellaneous/getappdata.m
--- a/scripts/miscellaneous/getappdata.m
+++ b/scripts/miscellaneous/getappdata.m
@@ -35,17 +35,17 @@ function val = getappdata (h, name)
     appdata = struct();
     for nh = 1:numel(h)
       try
         appdata = get (h(nh), "__appdata__");
       catch
         appdata.(name) = [];
       end_try_catch
       val(nh) = {appdata.(name)};
-    end
+    endfor
     if (nh == 1)
       val = val{1};
     endif
   elseif (ishandle (h) && numel (h) == 1 && nargin == 1)
     try
       val = get (h, "__appdata__");
     catch
       val = struct ();
diff --git a/scripts/miscellaneous/setappdata.m b/scripts/miscellaneous/setappdata.m
--- a/scripts/miscellaneous/setappdata.m
+++ b/scripts/miscellaneous/setappdata.m
@@ -28,17 +28,17 @@ function setappdata (h, varargin)
 
   if (! (all (ishandle (h)) && mod (numel (varargin), 2) == 0))
     error ("setappdata: invalid input");
   endif
 
   for nh = 1:numel(h)
     if (! isfield (get (h(nh)), "__appdata__"))
       addproperty ("__appdata__", h(nh), "any", struct ());
-    end
+    endif
     appdata = get (h(nh), "__appdata__");
     for narg = 1:2:numel(varargin)
       if (iscellstr (varargin{narg}))
         ## Handle cell arrays like set() does.
         set (h(nh), "__appdata__", appdata);
         setappdata (h(nh), vertcat (varargin{narg}', varargin{narg+1}'){:});
         appdata = get (h(nh), "__appdata__");
       elseif (ischar (varargin{narg}))
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -318,21 +318,21 @@ function lims = __get_tight_lims__ (ca, 
     lims = get (ca, strcat (ax, "lim"));
   else
     data = get (kids, strcat (ax, "data"));
     scale = get (ca, strcat (ax, "scale"));
     if (strcmp (scale, "log"))
       if (iscell (data))
         for i = 1:length(data)
           data{i}(data{i}<=0) = NaN;
-        end
+        endfor
       else
         data(data<=0) = NaN;
-      end
-    end
+      endif
+    endif
     if (iscell (data))
       data = data (find (! cellfun (@isempty, data)));
       if (! isempty (data))
         lims_min = min (cellfun (@min, cellfun (@min, data, 'uniformoutput', false)(:)));
         lims_max = max (cellfun (@max, cellfun (@max, data, 'uniformoutput', false)(:)));
         lims = [lims_min, lims_max];
       else
         lims = [0, 1];
