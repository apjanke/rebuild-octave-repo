# HG changeset patch
# User Rik <rik@octave.org>
# Date 1459732196 25200
#      Sun Apr 03 18:09:56 2016 -0700
# Node ID ee1a009dd60f87c7881be8118bf2caf8eeb2e78d
# Parent  d5963a6e29c27e47cd123c7353c920e4359cc7af
Fix memory leak using cholmod library (bug #47372).

* sparse-chol.cc (~sparse_chol_rep): Free Lsparse array if allocated.  Always
free Common memory.
* sparse-chol.cc (sparse_chol_rep::init): Always free Lfactor.

diff --git a/liboctave/numeric/sparse-chol.cc b/liboctave/numeric/sparse-chol.cc
--- a/liboctave/numeric/sparse-chol.cc
+++ b/liboctave/numeric/sparse-chol.cc
@@ -63,18 +63,20 @@ public:
 #endif
   {
     info = init (a, natural, force);
   }
 
   ~sparse_chol_rep (void)
   {
 #ifdef HAVE_CHOLMOD
-    if (is_pd)
+    if (Lsparse)
       CHOLMOD_NAME (free_sparse) (&Lsparse, &Common);
+
+    CHOLMOD_NAME(finish) (&Common);
 #endif
   }
 
 #ifdef HAVE_CHOLMOD
   cholmod_sparse *L (void) const
   {
     return Lsparse;
   }
@@ -313,25 +315,25 @@ sparse_chol<chol_type>::sparse_chol_rep:
       drop_zeros (Lsparse);
 
       if (! natural)
         {
           perms.resize (a_nr);
           for (octave_idx_type i = 0; i < a_nr; i++)
             perms(i) = static_cast<octave_idx_type *>(Lfactor->Perm)[i];
         }
+    }
 
-      static char tmp[] = " ";
+  // NAME used to prefix statistics report from print_common
+  static char blank_name[] = " ";
 
-      BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
-      CHOLMOD_NAME(free_factor) (&Lfactor, cm);
-      CHOLMOD_NAME(finish) (cm);
-      CHOLMOD_NAME(print_common) (tmp, cm);
-      END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
-    }
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+  CHOLMOD_NAME(print_common) (blank_name, cm);
+  CHOLMOD_NAME(free_factor) (&Lfactor, cm);
+  END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
 
   return info;
 
 #else
   (*current_liboctave_error_handler)
     ("support for CHOLMOD was unavailable or disabled when liboctave was built");
 #endif
 }
