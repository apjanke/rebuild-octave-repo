# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1274930596 25200
#      Wed May 26 20:23:16 2010 -0700
# Node ID 7a43499f074a3d43b7138bf53c29eb0f61966d1d
# Parent  0f310fce905d4d1d8f357df16c4c8762bb2b7a13
legend.m: Improve documentation string

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,21 +1,27 @@
 2010-05-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* specfun/isprime.m: Fix and further optimize.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
+
+        * plot/legend.m: Improve documentation string.
+
+2010-05-26  Rik <octave@nomad.inbox5.com>
+        
         * sparse/svds.m: Check struct input arguments.  Overhaul documentation.
 
 2010-05-26  Ben Abbott <bpabbott@mac.com>
 
 	* plot/legend.m: Key labels for specified objects.
 	* plot/ancestor.m: Support vectors of handles.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
+
         * sparse/svds.m: Initialize ARPACK starting vector in svds test code.
         Bug #29721.
 
 2010-05-25  Ben Abbott <bpabbott@mac.com>
 
 	* polynomial/spline.m: Ignore NaNs within input vectors.
 
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -13,32 +13,30 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} legend (@var{st1}, @var{st2}, @dots{})
-## @deftypefnx {Function File} {} legend (@var{st1}, @var{st2}, @dots{}, "location", @var{pos})
+## @deftypefn  {Function File} {} legend (@var{str1}, @var{str2}, @dots{})
 ## @deftypefnx {Function File} {} legend (@var{matstr})
-## @deftypefnx {Function File} {} legend (@var{matstr}, "location", @var{pos})
 ## @deftypefnx {Function File} {} legend (@var{cell})
-## @deftypefnx {Function File} {} legend (@var{cell}, "location", @var{pos})
+## @deftypefnx {Function File} {} legend (@dots{}, "location", @var{pos})
 ## @deftypefnx {Function File} {} legend (@var{hax}, @dots{})
 ## @deftypefnx {Function File} {} legend (@var{hobjs}, @dots{})
 ## @deftypefnx {Function File} {} legend (@var{hax}, @var{hobjs}, @dots{})
-## @deftypefnx {Function File} {} legend ('@var{func}')
+## @deftypefnx {Function File} {} legend ("@var{option}")
 ##
 ## Display a legend for the axes with handle @var{hax}, or the current axes,
 ## using the specified strings as labels.  Legend entries may be specified 
 ## as individual character string arguments, a character array, or a cell
-## array of character strings. If the handles, @var{hobjs}, are not specified
-## the legend's strings will be associated with the axes' descendents.
+## array of character strings.  If the handles, @var{hobjs}, are not specified
+## then the legend's strings will be associated with the axes' descendants.
 ## Legend works on line graphs, bar graphs, etc.
 ## A plot must exist before legend is called.
 ##
 ## The optional parameter @var{pos} specifies the location of the legend
 ## as follows:
 ##
 ## @multitable @columnfractions 0.06 0.14 0.80
 ## @item @tab north @tab
@@ -57,32 +55,32 @@
 ##   right bottom
 ## @item @tab southwest @tab
 ##   left bottom
 ## @item 
 ## @item @tab outside @tab
 ##   can be appended to any location string
 ## @end multitable
 ##
-## Some specific functions are directly available using @var{func}:
+## The following customizations are available using @var{option}:
 ##
 ## @table @asis
 ## @item "show"
-##   Show legends from the plot
+##   Show legend on the plot
 ## @item "hide"
 ## @itemx "off"
-##   Hide legends from the plot
+##   Hide legend on the plot
 ## @item "boxon"
-##   Draw a box around legends
+##   Show a box around legend
 ## @item "boxoff"
-##   Withdraw the box around legends
+##   Hide the box around legend
 ## @item "left"
-##   Text is to the left of the keys
+##   Place text to the left of the keys
 ## @item "right"
-##   Text is to the right of the keys
+##   Place text to the right of the keys
 ## @end table
 ## @end deftypefn
 
 function legend (varargin)
 
   [ca, varargin, nargin] = __plt_get_axis_arg__ ("legend", varargin{:});
   nargs = nargin;
 
