# HG changeset patch
# User jwe
# Date 822897702 0
#      Mon Jan 29 06:41:42 1996 +0000
# Node ID 3a16afafc2ee73f220b4e997a5d96193cc4e13e9
# Parent  8173b1fa052db1e079c778551c3934217248fbbc
[project @ 1996-01-29 06:41:12 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -120,17 +120,17 @@ polite_directory_format (const string& n
   else
     retval = name;
 
   return retval;
 }
 
 // Return 1 if STRING contains an absolute pathname, else 0.
 
-int
+static int
 absolute_pathname (const string& s)
 {
   if (s.empty ())
     return 0;
 
   if (s[0] == '/')
     return 1;
 
@@ -146,17 +146,17 @@ absolute_pathname (const string& s)
 
   return 0;
 }
 
 // Return 1 if STRING is an absolute program name; it is absolute if
 // it contains any slashes.  This is used to decide whether or not to
 // look up through $PATH.
 
-int
+static int
 absolute_program (const string& s)
 {
   return (s.find ('/') != NPOS);
 }
 
 // Return the `basename' of the pathname in STRING (the stuff after
 // the last '/').  If STRING is not a full pathname, simply return it.
 
diff --git a/src/dirfns.h b/src/dirfns.h
--- a/src/dirfns.h
+++ b/src/dirfns.h
@@ -24,18 +24,16 @@ Software Foundation, 59 Temple Place - S
 #if !defined (octave_dirfns_h)
 #define octave_dirfns_h 1
 
 #include <ctime>
 
 #include <string>
 
 extern string polite_directory_format (const string&);
-extern int absolute_pathname (const string&);
-extern int absolute_program (const string&);
 extern string base_pathname (const string&);
 extern string make_absolute (const string&, const string&);
 extern string get_working_directory (const string&);
 
 #endif
 
 /*
 ;;; Local Variables: ***
