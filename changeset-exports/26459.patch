# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546715409 28800
#      Sat Jan 05 11:10:09 2019 -0800
# Branch stable
# Node ID 1479694709eaa5094f0384e7c8995d4bdbf3ec94
# Parent  9f090d8113321807e9ab32c8cf0702ccec1f0e03
ls-mat5.cc: Fix static analyzer detected issues (bug #55347).

* ls-mat5.cc (save_mat5_array_length): Remove useless test "nel > 0".
* ls-mat5.cc (save_mat5_element_length): Remove useless test "6 > max_namelen".

diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -2005,17 +2005,17 @@ save_mat5_array_length (const float* /* 
       //     else if (max_val < 32768 && min_val >= -32768)
       //       size = 2;
       //     else if (max_val <= 2147483647L && min_val >= -2147483647L)
       //       size = 4;
       //
 
       // Round nel up to nearest even number of elements.
       // Take into account short tags for 4 byte elements.
-      return PAD ((nel > 0 && nel * size <= 4 ? 4 : 8) + nel * size);
+      return PAD ((nel * size <= 4 ? 4 : 8) + nel * size);
     }
   else
     return 8;
 }
 
 int
 save_mat5_array_length (const Complex *val, octave_idx_type nel,
                         bool save_as_floats)
@@ -2174,18 +2174,17 @@ save_mat5_element_length (const octave_v
     }
   else if (tc.isstruct () || tc.is_inline_function () || tc.isobject ())
     {
       int fieldcnt = 0;
       const octave_map m = tc.map_value ();
       octave_idx_type nel = m.numel ();
 
       if (tc.is_inline_function ())
-        // length of "inline" is 6
-        ret += 8 + PAD (6 > max_namelen ? max_namelen : 6);
+        ret += 8 + PAD (6);  // length of "inline" is 6
       else if (tc.isobject ())
         {
           size_t classlen = tc.class_name ().length ();
 
           ret += 8 + PAD (classlen > max_namelen ? max_namelen : classlen);
         }
 
       for (auto i = m.begin (); i != m.end (); i++)
