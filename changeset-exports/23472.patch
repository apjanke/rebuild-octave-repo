# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1494158450 -7200
#      Sun May 07 14:00:50 2017 +0200
# Node ID c8722519330af17b7c6f7c109fe1572d38ac7475
# Parent  7308cdea0c2b2e3cc72ff70485aa7a0216e9fb2a
remove color highlight of error messages in gui console

* Filter.h: removed obsolete Error hotspot type

* QUnixTerminalImpl (initialize): removed filter for Error hotspot type

* TerminalView.cpp (paintFilters): ErrorLinks are underlined in red and
  not highlighted wit a box, removed handling of Error hotspots

diff --git a/libgui/qterminal/libqterminal/unix/Filter.h b/libgui/qterminal/libqterminal/unix/Filter.h
--- a/libgui/qterminal/libqterminal/unix/Filter.h
+++ b/libgui/qterminal/libqterminal/unix/Filter.h
@@ -74,17 +74,17 @@ public:
     enum Type
     {
       // the type of the hotspot is not specified
       NotSpecified,
       // this hotspot represents a clickable link
       Link,
       // this hotspot represents a marker
       Marker,
-      Error,
+      // this hotspot represents a clickable link to an erroneous file
       ErrorLink
     };
 
     class HotSpot : public QObject
     {
 
     public:
        /**
diff --git a/libgui/qterminal/libqterminal/unix/QUnixTerminalImpl.cpp b/libgui/qterminal/libqterminal/unix/QUnixTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/unix/QUnixTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/unix/QUnixTerminalImpl.cpp
@@ -43,20 +43,16 @@ void QUnixTerminalImpl::initialize()
     m_terminalView->setTripleClickMode(TerminalView::SelectWholeLine);
     m_terminalView->setTerminalSizeStartup(true);
     m_terminalView->setSize(80, 40);
     m_terminalView->setScrollBarPosition(TerminalView::ScrollBarRight);
 
     UrlFilter *url_filter = new UrlFilter();
     m_terminalView->filterChain ()->addFilter (url_filter);
 
-    RegExpFilter *error_filter = new RegExpFilter (Filter::Type::Error);
-    error_filter->setRegExp (QRegExp ("error:"));
-    m_terminalView->filterChain ()->addFilter (error_filter);
-
     UrlFilter *file_filter = new UrlFilter (Filter::Type::ErrorLink);
     m_terminalView->filterChain ()->addFilter (file_filter);
 
     connect (file_filter, SIGNAL (request_open_file_signal (const QString&, int)),
              _parent, SLOT (edit_mfile (const QString&, int)));
 
     connect(m_terminalView, SIGNAL(customContextMenuRequested(QPoint)),
             this, SLOT(handleCustomContextMenuRequested(QPoint)));
diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -1200,33 +1200,32 @@ void TerminalView::paintFilters(QPainter
               QFontMetrics metrics(font());
 
               // find the baseline (which is the invisible line that the characters in the font sit on,
               // with some having tails dangling below)
               int baseline = r.bottom() - metrics.descent();
               // find the position of the underline below that
               int underlinePos = baseline + metrics.underlinePos();
 
-              if ( r.contains( mapFromGlobal(QCursor::pos()) ) )
-                painter.drawLine( r.left() , underlinePos ,
-                                  r.right() , underlinePos );
+              if (r.contains (mapFromGlobal(QCursor::pos())))
+                {
+                  if (spot->type () == Filter::ErrorLink)
+                    painter.setPen (QColor (255,0,0));
+                  painter.drawLine (r.left(), underlinePos,
+                                    r.right(), underlinePos);
+                }
             }
           // Marker hotspots simply have a transparent rectanglular shape
           // drawn on top of them
-          else if ( spot->type() == Filter::Error )
+          else if ( spot->type() == Filter::Marker )
             {
               //TODO - Do not use a hardcoded colour for this
-              painter.fillRect(r,QBrush(QColor(255,0,0,96)));
+              painter.fillRect(r,QBrush(QColor(255,0,0,120)));
             }
 
-          if ( spot->type() == Filter::ErrorLink )
-            {
-              //TODO - Do not use a hardcoded colour for this
-              painter.fillRect(r,QBrush(QColor(255,0,0,96)));
-            }
         }
     }
 }
 void TerminalView::drawContents(QPainter &paint, const QRect &rect)
 {
   //qDebug("%s %d drawContents and rect x=%d y=%d w=%d h=%d", __FILE__, __LINE__, rect.x(), rect.y(),rect.width(),rect.height());
 
   QPoint topLeft  = contentsRect().topLeft();
