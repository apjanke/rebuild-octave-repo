# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1221820230 -7200
#      Fri Sep 19 12:30:30 2008 +0200
# Branch release-3-0-x
# Node ID d1b8260dbc76564eec0da131330c7cfc1f2a0b89
# Parent  0b9c56b6bf0e28e9480550317e52cdf7ed88c490
fix problems from transplant 7552

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-09-19  Jaroslav Hajek <highegg@gmail.com>
+
+	* load-path.cc: Fix errors from earlier transplant changeset.
+	* utils.cc: Likewise.
+
 2008-09-10  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc (octave_main): Make all command-line arguments
 	available to startup scripts and PKG_ADD files.
 
 2008-05-20  Kim Hansen  <kimhanse@gmail.com>
 
 	* load-path.cc (load_path::do_initialize):
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -793,17 +793,17 @@ load_path::do_find_file (const std::stri
   return retval;
 }
 
 std::string
 load_path::do_find_dir (const std::string& dir) const
 {
   std::string retval;
 
-  if (dir.find_first_of (file_ops::dir_sep_chars ()) != std::string::npos
+  if (dir.find_first_of (file_ops::dir_sep_chars) != std::string::npos
       && (octave_env::absolute_pathname (dir)
 	  || octave_env::rooted_relative_pathname (dir)))
     {
       file_stat fs (dir);
 
       if (fs.exists () && fs.is_dir ())
 	return dir;
     }
@@ -812,17 +812,17 @@ load_path::do_find_dir (const std::strin
       for (const_dir_info_list_iterator p = dir_info_list.begin ();
 	   p != dir_info_list.end ();
 	   p++)
 	{
 	  std::string dname = p->dir_name;
 
 	  size_t dname_len = dname.length ();
 
-	  if (dname.substr (dname_len - 1) == file_ops::dir_sep_str ())
+	  if (dname.substr (dname_len - 1) == file_ops::dir_sep_str)
 	    dname = dname.substr (0, dname_len - 1);
 
 	  size_t dir_len = dir.length ();
 
 	  if (dname_len >= dir_len
 	      && file_ops::is_dir_sep (dname[dname_len - dir_len - 1])
 	      && dir.compare (dname.substr (dname_len - dir_len)) == 0)
 	    {
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -741,16 +741,20 @@ if @var{name} is not found.\n\
 	  int val = args(0).int_value ();
 
 	  if (! error_state)
 	    retval = octave_errno::set (val);
 	  else
 	    error ("errno: expecting integer argument");
 	}
     }
+  else if (nargin == 0)
+    retval = octave_errno::get ();
+  else
+    print_usage ();
 
   return retval;
 }
 
 // See if there is a directory called "name" in the path and if it
 // contains a Contents.m file return the full path to this file.
 
 std::string
@@ -763,20 +767,16 @@ contents_file_in_path (const std::string
       std::string tcontents = file_ops::concat (load_path::find_dir (dir), 
 						std::string ("Contents.m"));
 
       file_stat fs (tcontents);
 
       if (fs.exists ())
 	retval = octave_env::make_absolute (tcontents, octave_env::getcwd ());
     }
-  else if (nargin == 0)
-    retval = octave_errno::get ();
-  else
-    print_usage ();
 
   return retval;
 }
 
 DEFUN (errno_list, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} errno_list ()\n\
 Return a structure containing the system-dependent errno values.\n\
