# HG changeset patch
# User jwe
# Date 821061938 0
#      Mon Jan 08 00:45:38 1996 +0000
# Node ID 0d952cd2ea748e37bfe62a10f17419453b37048f
# Parent  5ddae4c13f80531ba5791512a5d5138771bcde4d
[project @ 1996-01-08 00:45:34 by jwe]

diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -334,22 +334,23 @@ if ${CC-cc} -c ctest.c 1>&AC_FD_CC 2>&AC
   fi
 fi])
 rm -f ftest* ctest* core
 AC_MSG_RESULT([$octave_cv_f2c_f77_compat])])
 
 dnl The following test is from Karl Berry's Kpathseach library.  I'm
 dnl including it here in case we someday want to make the use of
 dnl kpathsea optional.
-
-# Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
-# This test program is due to Mike Hibler <mike@cs.utah.edu>.
-# We don't actually need to run this if we don't have putenv, but it
-# doesn't hurt.
-AC_MSG_CHECKING(whether putenv uses malloc)
+dnl
+dnl Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
+dnl This test program is due to Mike Hibler <mike@cs.utah.edu>.
+dnl We don't actually need to run this if we don't have putenv, but it
+dnl doesn't hurt.
+AC_DEFUN(OCTAVE_SMART_PUTENV,
+[AC_MSG_CHECKING(whether putenv uses malloc)
 AC_CACHE_VAL(octave_cv_func_putenv_malloc,
 [AC_TRY_RUN([
 #define VAR	"YOW_VAR"
 #define STRING1 "GabbaGabbaHey"
 #define STRING2 "Yow!!"		/* should be shorter than STRING1 */
 extern char *getenv (); /* in case char* and int don't mix gracefully */
 main ()
 {
@@ -395,9 +396,9 @@ main ()
           printf ("#undef SMART_PUTENV\n");
 #endif
   exit (rstr1 == rstr2 ? 0 : 1);
 }], octave_cv_func_putenv_malloc=yes, octave_cv_func_putenv_malloc=no,
     octave_cv_func_putenv_malloc=no)])dnl
 AC_MSG_RESULT($octave_cv_func_putenv_malloc)
 if test $octave_cv_func_putenv_malloc = yes; then
   AC_DEFINE(SMART_PUTENV)
-fi
+fi])
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.146 $)
+AC_REVISION($Revision: 1.147 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -638,16 +638,18 @@ fi
 ### Checks for functions.
 
 AC_CHECK_FUNCS(setvbuf getcwd gethostname bzero bcopy rindex vfprintf vsprintf)
 AC_CHECK_FUNCS(stricmp strnicmp strcasecmp strncasecmp strerror atexit)
 AC_CHECK_FUNCS(on_exit tempnam memmove putenv getrusage)
 AC_CHECK_FUNCS(mkdir rmdir rename umask)
 AC_CHECK_FUNCS(sigaction sigprocmask sigpending sigsuspend)
 
+OCTAVE_SMART_PUTENV
+
 AC_CHECK_LIB(dl, dlopen)
 AC_CHECK_FUNCS(dlopen dlsym dlerror dlclose)
 
 if test "$ac_cv_func_dlopen" = yes \
     && test "$ac_cv_func_dlopen" = yes \
     && test "$ac_cv_func_dlsym" = yes \
     && test "$ac_cv_func_dlerror" = yes \
     && test "$ac_cv_func_dlclose" = yes; then
