# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1216221888 14400
#      Wed Jul 16 11:24:48 2008 -0400
# Node ID 1f6eb3de1c4ef4726e14cb4a7f945f059b5fd087
# Parent  30b952e90c294c6601e8f812e8a746024f91fd5a
__img__.m, imshow.m, __go_draw_axes__.m: improve handling of truecolor images

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2008-07-16  John W. Eaton  <jwe@octave.org>
+
+	* image/__img__.m: Set clim for true-color integer data.
+
+	* image/imshow.m: Don't convert integer true-color data to double.
+
+	* plot/__go_draw_axes__.m: Recognize 3-d cdata as a true-color image.
+
 2008-07-14  John W. Eaton  <jwe@octave.org>
 
 	* image/Makefile.in (SOURCES): Add imread.m to the list.
 
 2008-07-14  Thomas L. Scofield  <scofield@calvin.edu>
 
 	* image/imread.m: New file from Octave Forge.
 
diff --git a/scripts/image/__img__.m b/scripts/image/__img__.m
--- a/scripts/image/__img__.m
+++ b/scripts/image/__img__.m
@@ -51,16 +51,25 @@ function h = __img__ (x, y, img, varargi
   xlim = [x(1), x(end)];
   ylim = [y(1), y(end)];
 
   ca = gca ();
 
   tmp = __go_image__ (ca, "cdata", img, "xdata", xlim, "ydata", ylim, 
 		      "cdatamapping", "direct", varargin {:});
 
+  if (ndims (img) == 3)
+    if (isinteger (img))
+      c = class (img);
+      mn = intmin (c);
+      mx = intmax (c);
+      set (ca, "clim", double ([mn, mx]));
+    endif
+  endif
+
   set (ca, "view", [0, 90]);
 
   if (strcmp (get (ca, "nextplot"), "replace"))
     set (ca, "ydir", "reverse");
   endif
 
   if (nargout > 0)
     h = tmp;
diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -142,17 +142,17 @@ function h = imshow (im, varargin)
   nans = isnan (im(:));
   if (any (nans))
     warning ("Octave:imshow-NaN",
 	     "imshow: pixels with NaN or NA values are set to minimum pixel value");
     im(nans) = display_range(1);
   endif
 
   ## This is for compatibility.
-  if (! indexed || islogical (im))
+  if (! (indexed || (true_color && isinteger (im))) || islogical (im))
     im = double (im);
   endif
 
   ## Scale the image to the interval [0, 1] according to display_range.
   if (! (true_color || indexed || islogical (im)))
     low = display_range(1);
     high = display_range(2);
     im = (im-low)/(high-low);
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -286,16 +286,17 @@ function __go_draw_axes__ (h, plot_strea
       fputs (plot_stream, "unset logscale z;\n");
     endif
 
     xautoscale = strcmpi (axis_obj.xlimmode, "auto");
     yautoscale = strcmpi (axis_obj.ylimmode, "auto");
     zautoscale = strcmpi (axis_obj.zlimmode, "auto");
     cautoscale = strcmpi (axis_obj.climmode, "auto");
     cdatadirect = false;
+    truecolor = false;
 
     kids = axis_obj.children;
 
     nd = __calc_dimensions__ (axis_obj);
 
     if (nd == 3)
       fputs (plot_stream, "set parametric;\n");
       fputs (plot_stream, "set style data lines;\n");
@@ -333,17 +334,19 @@ function __go_draw_axes__ (h, plot_strea
       switch (obj.type)
 	case "image"
 	  img_data = obj.cdata;
 	  img_xdata = obj.xdata;
 	  img_ydata = obj.ydata;
 
 	  if (use_gnuplot_for_images)
 
-	    if (strcmpi (obj.cdatamapping, "direct"))
+	    if (ndims (img_data) == 3)
+	      truecolor = true;
+	    elseif (strcmpi (obj.cdatamapping, "direct"))
 	      cdatadirect = true;
 	    endif
 	    fputs (plot_stream, "set border front;\n");
 	    data_idx++;
 	    is_image_data(data_idx) = true;
 	    parametric(data_idx) = false;
 	    have_cdata(data_idx) = false;
 
@@ -1051,21 +1054,22 @@ function __go_draw_axes__ (h, plot_strea
       else
 	zdir = "noreverse";
       endif
       fprintf (plot_stream, "set zrange [%.15e:%.15e] %s;\n", zlim, zdir);
     endif
 
     cmap = parent_figure_obj.colormap;    
     cmap_sz = rows(cmap);
+
     if (! any (isinf (clim)))
-      if (cdatadirect)
+      if (truecolor || ! cdatadirect)
+	fprintf (plot_stream, "set cbrange [%g:%g];\n", clim);
+      else
 	fprintf (plot_stream, "set cbrange [1:%d];\n", cmap_sz);
-      else
-	fprintf (plot_stream, "set cbrange [%g:%g];\n", clim);
       endif
     endif
 
     if (strcmpi (axis_obj.box, "on"))
       if (nd == 3)
 	fputs (plot_stream, "set border 4095;\n");
       else
 	fputs (plot_stream, "set border 431;\n");
