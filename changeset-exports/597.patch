# HG changeset patch
# User jwe
# Date 776460850 0
#      Tue Aug 09 19:34:10 1994 +0000
# Node ID 205b8c2ef74904dc2fc2ad9b3f91121d60ce141f
# Parent  07e689d6e7e578fc19981664bcb70f78f56c3509
[project @ 1994-08-09 19:31:39 by jwe]

diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -238,17 +238,20 @@ DEFUN ("sumsq", Fsumsq, Ssumsq, 2, 1,
 }
 
 static void
 check_dimensions (int& nr, int& nc, const char *warnfor)
 {
   if (nr < 0 || nc < 0)
     {
       if (user_pref.treat_neg_dim_as_zero)
-	nr = nc = 0;
+	{
+	  nr = (nr < 0) ? 0 : nr;
+	  nc = (nc < 0) ? 0 : nc;
+	}
       else
 	error ("%s: can't create a matrix with negative dimensions",
 	       warnfor);
     }
 }
 
 static void
 get_dimensions (const tree_constant& a, const char *warn_for,
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -28,19 +28,20 @@ Software Foundation, 675 Mass Ave, Cambr
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
+#include <string.h>
 #include <iostream.h>
+#include <strstream.h>
 #include <fstream.h>
-#include <strstream.h>
 
 #include "SLStack.h"
 #include "procstream.h"
 
 #include "user-prefs.h"
 #include "tree-base.h"
 #include "tree-expr.h"
 #include "tree-cmd.h"
@@ -66,16 +67,86 @@ int parametric_plot = 0;
 int clear_before_plotting = 1;
 
 // List of files to delete when we exit or crash.
 static SLStack <char *> tmp_files;
 
 // Pipe to gnuplot.
 static oprocstream plot_stream;
 
+static void
+open_plot_stream (void)
+{
+  static int initialized = 0;
+
+  if (! plot_stream.is_open ())
+    {
+      plot_line_count = 0;
+
+      char *plot_prog = user_pref.gnuplot_binary;
+      if (plot_prog)
+	{
+	  plot_stream.open (plot_prog);
+	  if (! plot_stream.is_open ())
+	    {
+	      warning ("plot: unable to open pipe to `%s'",
+		       plot_prog);
+
+	      if (strcmp (plot_prog, "gnuplot") != 0)
+		{
+		  warning ("having trouble finding plotting program.");
+		  warning ("trying again with `gnuplot'");
+		  goto last_chance;
+		}
+	    }
+	}
+      else
+	{
+	last_chance:
+
+	  plot_stream.open ("gnuplot");
+
+	  if (! plot_stream.is_open ())
+	    error ("plot: unable to open pipe to `%s'", plot_prog);
+	}
+    }
+
+  if (! initialized)
+    {
+      initialized = 1;
+      plot_stream << "set data style lines\n";
+    }
+}
+
+static int
+send_to_plot_stream (const char *cmd)
+{
+// From sighandlers.cc:
+  extern int pipe_handler_error_count;
+
+  if (! plot_stream.is_open ())
+    {
+      open_plot_stream ();
+
+      if (error_state)
+	return -1;
+    }
+
+  if (plot_line_count == 0 && strncmp (cmd, "replot", 6) == 0)
+    error ("replot: no previous plot");
+  else
+    {
+      plot_stream << cmd;
+      plot_stream.flush ();
+      pipe_handler_error_count = 0;
+    }
+
+  return 0;
+}
+
 // Plotting, eh?
 
 tree_plot_command::tree_plot_command (void) : tree_command ()
 {
   range = 0;
   plot_list = 0;
   ndim = 0;
 }
@@ -104,16 +175,18 @@ tree_plot_command::~tree_plot_command (v
 }
 
 void
 tree_plot_command::eval (void)
 {
   if (error_state)
     return;
 
+  open_plot_stream ();
+
   ostrstream plot_buf;
 
   switch (ndim)
     {
     case 1:
       if (plot_line_count == 0)
 	{
 	  if (plot_list)
@@ -766,72 +839,16 @@ cleanup_tmp_files (void)
   while (! tmp_files.empty ())
     {
       char *filename = tmp_files.pop ();
       unlink (filename);
       delete [] filename;
     }
 }
 
-int
-send_to_plot_stream (const char *cmd)
-{
-// From sighandlers.cc:
-  extern int pipe_handler_error_count;
-
-  static int initialized = 0;
-
-  if (! plot_stream.is_open ())
-    {
-      plot_line_count = 0;
-
-      char *plot_prog = user_pref.gnuplot_binary;
-      if (plot_prog)
-	{
-	  plot_stream.open (plot_prog);
-	  if (! plot_stream.is_open ())
-	    {
-	      warning ("plot: unable to open pipe to `%s'",
-		       plot_prog);
-
-	      if (strcmp (plot_prog, "gnuplot") != 0)
-		{
-		  warning ("having trouble finding plotting program.");
-		  warning ("trying again with `gnuplot'");
-		  goto last_chance;
-		}
-	    }
-	}
-      else
-	{
-	last_chance:
-
-	  plot_stream.open ("gnuplot");
-
-	  if (! plot_stream.is_open ())
-	    {
-	      error ("plot: unable to open pipe to `%s'", plot_prog);
-	      return -1;
-	    }
-	}
-    }
-
-  if (! initialized)
-    {
-      initialized = 1;
-      plot_stream << "set data style lines\n";
-    }
-
-  plot_stream << cmd;
-  plot_stream.flush ();
-  pipe_handler_error_count = 0;
-
-  return 0;
-}
-
 void
 close_plot_stream (void)
 {
   if (plot_stream.is_open ())
     plot_stream.close ();
 
   plot_line_count = 0;
 }
