# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1263625192 -3600
#      Sat Jan 16 07:59:52 2010 +0100
# Node ID b5cc666da6ca8de7d97f06eb3995e30b1c92bf86
# Parent  0c4445ef91a947a882805bf0c02fc4554aaf0e0e
Support the '@' marker that was present in Octave 2.1.x

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,11 +1,17 @@
+2010-01-16  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m (next_marker):  New function to find a
+	new marker. Use it to support the "@" marker.
+	* plot/private/__pltopt__.m: Don't convert "@" marker ro "+";
+
 2010-01-15  David Bateman  <dbateman@free.fr>
 
-	plot/__go_draw_figure__.m: Respect the figure and axes color 
+	plot/__go_draw_figure__.m: Respect the figure and axes color
 	properties.
 
 2010-01-14  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_axes__.m:  Fix for markerfacecolor and
 	markeredgecolor for unfillable points like '+'.
 
 2010-01-14  Jaroslav Hajek  <highegg@gmail.com>
@@ -24,17 +30,17 @@ 2010-01-13  John W. Eaton  <jwe@octave.o
 
 2010-01-13  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/inputname.m: Return "" if argument name is not a
 	valid identifier.  Update docstring.
 
 2010-01-12  David Bateman  <dbateman@free.fr>
 
-	* plot/__go_draw_axes_.m:  Allow patch markerfacecolor and 
+	* plot/__go_draw_axes_.m:  Allow patch markerfacecolor and
 	markeredgecolor properties to be used and set the marker colors
 	appropriately.
 
 2010-01-12  Jaroslav Hajek  <highegg@gmail.com>, Ben Barrowes  <benjamin.e.barrowes@usace.army.mil>
 
 	* set/private/validargs.m: New function.
 	* set/module.mk: Add it here.
 	* set/ismember.m: Use it here.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -85,16 +85,20 @@ function __go_draw_axes__ (h, plot_strea
     ##         Presently, this is dispersed in this function.
     fputs (plot_stream, "unset label;\n");
     fputs (plot_stream, "unset xtics;\n");
     fputs (plot_stream, "unset ytics;\n");
     fputs (plot_stream, "unset ztics;\n");
     fputs (plot_stream, "unset x2tics;\n");
     fputs (plot_stream, "unset x2tics;\n");
 
+    # Reset next marker calculation
+    markerorder = axis_obj.markerorder;
+    next_marker (0);
+
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
 	fontspec = create_fontspec (f, s, gnuplot_term);
 	fprintf (plot_stream, "set title \"%s\" %s %s",
@@ -518,17 +522,17 @@ function __go_draw_axes__ (h, plot_strea
 	    else
 	      data{data_idx} = [xdat, ydat]';
 	      usingclause{data_idx} = sprintf ("record=%d using ($1):($2) axes %s%s",
 					      rows(xdat), xaxisloc_using, yaxisloc_using);
 	    endif
 	  endif
 
 	  style = do_linestyle_command (obj, obj.color, data_idx, mono, 
-					plot_stream, errbars);
+					plot_stream, markerorder, errbars);
 
           withclause{data_idx} = sprintf ("with %s linestyle %d",
 					  style{1}, data_idx);
 
 	  if (length (style) > 1)
 	    data_idx++;
 	    is_image_data(data_idx) = is_image_data(data_idx - 1); 
 	    parametric(data_idx) = parametric(data_idx - 1);
@@ -789,16 +793,18 @@ function __go_draw_axes__ (h, plot_strea
 	       lw = sprintf("linewidth %f", obj.linewidth);
 	     else
 	       lw  = "";
 	     endif
 
 	     if (isfield (obj, "marker"))
 	       if (isfield (obj, "marker"))
 		 switch (obj.marker)
+                   case "@"
+                     [pt, pt2] = next_marker (markerorder);
 		   case "+"
 		     pt = pt2 = "pt 1";
 		   case "o"
 		     pt = "pt 6";
                      pt2 = "pt 7";
 		   case "*"
 		     pt = pt2 = "pt 3";
 		   case "."
@@ -1020,17 +1026,17 @@ function __go_draw_axes__ (h, plot_strea
 		 && strncmp (obj.facecolor, "none", 4)))
 	    data_idx++;
 	    is_image_data(data_idx) = false;
 	    parametric(data_idx) = false;
 	    have_cdata(data_idx) = true;
 	    have_3d_patch(data_idx) = false;
 	    style = do_linestyle_command (obj, obj.edgecolor,
 					  data_idx, mono, 
-					  plot_stream);
+					  plot_stream, markerorder);
 	    if (isempty (obj.keylabel))
 	      titlespec{data_idx} = "title \"\"";
 	    else
 	      tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel"));
 	      titlespec{data_idx} = cstrcat ("title \"", tmp, "\"");
 	    endif
 	    withclause{data_idx} = sprintf ("with pm3d linestyle %d",
 		           		    data_idx);
@@ -1562,17 +1568,17 @@ function fontspec = create_fontspec (f, 
   if (strcmp (f, "*") || strcmp (gp_term, "tikz"))
     fontspec = sprintf ("font \",%d\"", s);
   else
     fontspec = sprintf ("font \"%s,%d\"", f, s);
   endif
 endfunction
 
 function style = do_linestyle_command (obj, linecolor, idx, mono,
-				       plot_stream, errbars = "")
+				       plot_stream, markerorder, errbars = "")
   style = {};
 
   fprintf (plot_stream, "set style line %d default;\n", idx);
   fprintf (plot_stream, "set style line %d", idx);
 
   found_style = false;
   if (isnumeric (linecolor))
     color = linecolor;
@@ -1622,16 +1628,18 @@ function style = do_linestyle_command (o
 
   if (isfield (obj, "linewidth"))
     fprintf (plot_stream, " linewidth %f", obj.linewidth);
     found_style = true;
   endif
 
   if (isfield (obj, "marker"))
     switch (obj.marker)
+      case "@"
+        [pt, pt2] = next_marker (markerorder);
       case "+"
 	pt = pt2 = "1";
       case "o"
 	pt = "6";
 	pt2 = "7";
       case "*"
 	pt = pt2 = "3";
       case "."
@@ -1779,16 +1787,67 @@ function style = do_linestyle_command (o
   if (! found_style && isempty (style {1}))
     fputs (plot_stream, " default");
   endif
 
   fputs (plot_stream, ";\n");
 
 endfunction
 
+function [pt, pt2] = next_marker (__set__)
+  persistent __next_marker__ = 0;
+
+  if (isnumeric (__set__))
+    __next_marker__ = __set__;
+  else
+
+    __marker__ = __set__ (rem (__next_marker__ ++, length (__set__)) + 1);
+    switch (__marker__)
+      case "+"
+	pt = pt2 = "1";
+      case "o"
+	pt = "6";
+	pt2 = "7";
+      case "*"
+	pt = pt2 = "3";
+      case "."
+	pt = pt2 = "0";
+      case "x"
+	pt = pt2 = "2";
+      case "s"
+	pt = "4";
+	pt2 = "5";
+      case "d"
+	pt = "13";
+	pt2 = "14";
+      case "^"
+	pt = "8";
+	pt2 = "9";
+      case "v"
+	pt = "10";
+	pt2 = "11";
+      case ">"
+	## FIXME missing point type 
+	pt = "8";
+	pt2 = "9";
+      case "<"
+	## FIXME missing point type 
+	pt = "10";
+	pt2 = "11";
+      case "p"
+	## FIXME missing point type 
+	pt = pt2 = "3";
+      case "h"
+	pt = pt2 = "3";
+      otherwise
+	pt = pt2 = "";
+    endswitch
+  endif
+endfunction
+
 function nd = __calc_dimensions__ (obj)
   kids = obj.children;
   nd = 2;
   for i = 1:length (kids)
     obj = get (kids(i));
     switch (obj.type)
       case {"image", "text"}
 	## ignore as they 
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -125,16 +125,19 @@
 ##
 ## @item +
 ## @itemx *
 ## @itemx o
 ## @itemx x
 ## @itemx ^
 ## Used in combination with the points or linespoints styles, set the point
 ## style.
+##
+## @item @@
+## Select the next unused point style.
 ## @end table
 ##
 ## The @var{fmt} argument may also be used to assign key titles.
 ## To do so, include the desired title between semi-colons after the
 ## formatting sequence described above, e.g., "+3;Key Title;"
 ## Note that the last semi-colon is required and will generate an error if
 ## it is left out.
 ##
diff --git a/scripts/plot/private/__pltopt__.m b/scripts/plot/private/__pltopt__.m
--- a/scripts/plot/private/__pltopt__.m
+++ b/scripts/plot/private/__pltopt__.m
@@ -172,20 +172,16 @@ function [options, valid] = __pltopt1__ 
 	have_linestyle = true;
 	options.linestyle = topt;
       elseif (topt == "+" || topt == "o" || topt == "*"
 	      || topt == "." || topt == "x" || topt == "s"
 	      || topt == "d" || topt == "^" || topt == "v"
 	      || topt == ">" || topt == "<" || topt == "p"
 	      || topt == "h" || topt == "@")
 	have_marker = true;
-	## Backward compatibility.  Leave undocumented.
-	if (topt == "@")
-	  topt = "+";
-	endif
 	options.marker = topt;
 ### Numeric color specs for backward compatibility.  Leave undocumented.
       elseif (topt == "k" || topt == "0")
 	options.color = [0, 0, 0];
       elseif (topt == "r" || topt == "1")
 	options.color = [1, 0, 0];
       elseif (topt == "g" || topt == "2")
 	options.color = [0, 1, 0];
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2010-01-16  David Bateman  <dbateman@free.fr>
+
+	* graphics.h.in (line::properties, surface::properties,
+	patch::properties): Allow the use of a "@" marker.
+	(axes::properties): Add markerorder properties to set the
+	order of the marker styles for the "@" marker.
+
 2010-01-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pt-mat.cc (SINGLE_TYPE_CONCAT, DO_SINGLE_TYPE_CONCAT,
 	DO_SINGLE_TYPE_CONCAT_NO_MUTATE): Remove macros.
 	(single_type_concat, do_single_type_concat,
 	do_single_type_concat_no_mutate): New template funcs.
 	(tree_matrix::rvalue1): Call them here.
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2759,16 +2759,18 @@ public:
       string_property fontname , OCTAVE_DEFAULT_FONTNAME
       double_property fontsize , 12
       radio_property fontunits , "{points}|normalized|inches|centimeters|pixels"
       radio_property fontweight , "{normal}|light|demi|bold"
       radio_property gridlinestyle , "-|--|{:}|-.|none"
       // FIXME -- should be kind of string array.
       string_property linestyleorder , "-"
       double_property linewidth , 0.5
+      // FIXME -- should be kind of string array.
+      string_property markerorder , "+o*xsd^vh."
       radio_property minorgridlinestyle , "-|--|{:}|-.|none"
       array_property plotboxaspectratio m , Matrix (1, 3, 1.0)
       radio_property plotboxaspectratiomode , "{auto}|manual"
       radio_property projection , "{orthographic}|perpective"
       radio_property tickdir m , "{in}|out"
       radio_property tickdirmode , "{auto}|manual"
       array_property ticklength , default_axes_ticklength ()
       array_property tightinset r , Matrix (1, 4, 0.0)
@@ -2997,17 +2999,17 @@ public:
       row_vector_property xldata u , Matrix ()
       row_vector_property xudata u , Matrix ()
       string_property xdatasource , ""
       string_property ydatasource , ""
       string_property zdatasource , ""
       color_property color , color_values (0, 0, 0)
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
-      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
+      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h|@"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
       double_property markersize , 6
       string_property keylabel , ""
       radio_property interpreter , "{tex}|none|latex"
       string_property displayname , ""
       radio_property erasemode , "{normal}|none|xor|background"
       // hidden properties for limit computation
@@ -3293,17 +3295,17 @@ public:
       double_property ambientstrength , 0.3
       double_property diffusestrength , 0.6
       double_property specularstrength , 0.6
       double_property specularexponent , 10.0
       double_property specularcolorreflectance , 1.0
       radio_property erasemode , "{normal}|background|xor|none"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
-      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
+      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h|@"
       color_property markeredgecolor , "{auto}|none|flat"
       color_property markerfacecolor , "auto|{none}|flat"
       double_property markersize , 6
       string_property keylabel , ""
       radio_property interpreter , "{tex}|none|latex"
       radio_property alphadatamapping l , "none|{scaled}|direct"
       // hidden properties for limit computation
       row_vector_property xlim hlr , Matrix ()
@@ -3399,17 +3401,17 @@ public:
       string_property ydatasource , ""
       string_property zdatasource , ""
       string_property cdatasource , ""
       color_property facecolor , "{flat}|none|interp|texturemap"
       double_radio_property facealpha , double_radio_property (1.0, radio_values ("flat|interp"))
       color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
-      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
+      radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h|@"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
       double_property markersize , 6
       string_property keylabel , ""
       radio_property interpreter , "{tex}|none|latex"
       array_property alphadata u , Matrix ()
       radio_property alphadatamapping l , "none|direct|{scaled}"
       double_property ambientstrength , 0.3
