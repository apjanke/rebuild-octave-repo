# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1438744183 14400
#      Tue Aug 04 23:09:43 2015 -0400
# Node ID 099bdf98f7247ba65caf3487737367e13d1e8d89
# Parent  58b02a8d0fe9ed7eb3028e02b542b5ee1c248a03
psi: Fix failing unit tests on 32-bit systems

* psi.cc: Initialize inputs with integer ranges to avoid round-off errors
on 32-bit systems.  Add or increase test tolerances to fix failing tests.

diff --git a/libinterp/corefcn/psi.cc b/libinterp/corefcn/psi.cc
--- a/libinterp/corefcn/psi.cc
+++ b/libinterp/corefcn/psi.cc
@@ -167,54 +167,54 @@ can have any value real or complex value
 
 %!assert (psi (ones (7, 3, 5)), repmat (-em, [7 3 5]))
 %!assert (psi ([0 1]), [-Inf -em])
 %!assert (psi ([-20:1]), [repmat(-Inf, [1 21]) -em])
 %!assert (psi (single ([0 1])), single ([-Inf -em]))
 
 ## Abramowitz and Stegun, page 258, eq 6.3.5
 %!test
-%! z = [-10:.1:-.1 .1:.1:20]; # drop the 0
+%! z = [-100:-1 1:200] ./ 10; # drop the 0
 %! assert (psi (z + 1), psi (z) + 1 ./ z, eps*1000)
 
 ## Abramowitz and Stegun, page 258, eq 6.3.2
 %!assert (psi (1), -em)
 
 ## Abramowitz and Stegun, page 258, eq 6.3.3
 %!assert (psi (1/2), -em - 2 * log (2))
 
 ## The following tests are from Pascal Sebah and Xavier Gourdon (2002)
 ## "Introduction to the Gamma Function"
 
 ## Interesting identities of the digamma function, in section of 5.1.3
 %!assert (psi (1/3), - em - (3/2) * log(3) - ((sqrt (3) / 6) * pi), eps*10)
-%!assert (psi (1/4), - em -3 * log (2) - pi /2)
+%!assert (psi (1/4), - em -3 * log (2) - pi/2, eps*10)
 %!assert (psi (1/6), - em -2 * log (2) - (3/2) * log (3) - ((sqrt (3) / 2) * pi), eps*10)
 
 ## First 6 zeros of the digamma function, in section of 5.1.5 (and also on
 ## Abramowitz and Stegun, page 258, eq 6.3.19)
 %!assert (psi ( 1.46163214496836234126265954232572132846819620400644), 0, eps)
 %!assert (psi (-0.504083008264455409258269304533302498955385182368579), 0, eps)
 %!assert (psi (-1.573498473162390458778286043690434612655040859116846), 0, eps)
 %!assert (psi (-2.610720868444144650001537715718724207951074010873480), 0, eps*10)
 %!assert (psi (-3.635293366436901097839181566946017713948423861193530), 0, eps*10)
 %!assert (psi (-4.653237761743142441714598151148207363719069416133868), 0, eps*100)
 
 ## Tests for complex values
 %!shared z
-%! z = [-10:.1:-.1 .1:.1:20]; # drop the 0
+%! z = [-100:-1 1:200] ./ 10; # drop the 0
 
 ## Abramowitz and Stegun, page 259 eq 6.3.10
 %!assert (real (psi (i*z)), real (psi (1 - i*z)))
 
 ## Abramowitz and Stegun, page 259 eq 6.3.11
 %!assert (imag (psi (i*z)), 1/2 .* 1./z + 1/2 * pi * coth (pi * z), eps *10)
 
 ## Abramowitz and Stegun, page 259 eq 6.3.12
-%!assert (imag (psi (1/2 + i*z)), 1/2 * pi * tanh (pi * z), eps)
+%!assert (imag (psi (1/2 + i*z)), 1/2 * pi * tanh (pi * z), eps*10)
 
 ## Abramowitz and Stegun, page 259 eq 6.3.13
 %!assert (imag (psi (1 + i*z)), - 1./(2*z) + 1/2 * pi * coth (pi * z), eps*10)
 
 ## Abramowitz and Stegun, page 260 eq 6.4.5
 %!test
 %! for z = 0:20
 %!   assert (psi (1, z + 0.5), 0.5 * (pi^2) - 4 * sum ((2*(1:z) -1) .^(-2)), eps*10)
