# HG changeset patch
# User Jordi Gutiérrez Hermoso <jordigh@gmail.com>
# Date 1283194147 18000
#      Mon Aug 30 13:49:07 2010 -0500
# Node ID 6ead75935ebf0234fb145c3e7d3cdeb978323916
# Parent  c08e9d4e54c7732d6b693d3188d20f86fc10c51c
Explain that ranges in vectors do get expanded

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2010-11-01  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
+
+	* interpreter/numbers.txi: Explain that ranges in vectors do get
+	expanded.
+
 2010-10-24  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/doccheck/mk_undocumented_list: New verification
 	script produces a list of undocumented functions.
 
 2010-10-23  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/io.txi (Simple File I/O): Document textscan and
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -388,16 +388,34 @@ 1 : 3 : 5
 @noindent
 defines the set of values @samp{[ 1, 4 ]}.
 
 Although a range constant specifies a row vector, Octave does @emph{not}
 convert range constants to vectors unless it is necessary to do so.
 This allows you to write a constant like @samp{1 : 10000} without using
 80,000 bytes of storage on a typical 32-bit workstation.
 
+A common example of when it does become necessary to convert ranges into
+vectors occurs when they appear within a vector (i.e. inside square
+brackets). For instance, whereas
+
+@example
+x = 0 : 0.1 : 1;
+@end example
+
+defines @var{x} to be a variable of type @code{range} and occupies 24
+bytes of memory, the expression
+
+@example
+y = [ 0 : 0.1 : 1];
+@end example
+
+defines @var{y} to be of type @code{matrix} and occupies 88 bytes of
+memory.
+
 Note that the upper (or lower, if the increment is negative) bound on
 the range is not always included in the set of values, and that ranges
 defined by floating point values can produce surprising results because
 Octave uses floating point arithmetic to compute the values in the
 range.  If it is important to include the endpoints of a range and the
 number of elements is known, you should use the @code{linspace} function
 instead (@pxref{Special Utility Matrices}).
 
