# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1205287647 14400
#      Tue Mar 11 22:07:27 2008 -0400
# Branch release-3-0-x
# Node ID e77150aa1ac26a60cc59cf2024f2938a71edb72a
# Parent  738ca2f7c83e100f4b2a90de708fb8b2e617f5ae
__go_draw_axes__: eliminate repeated code with get_old_gnuplot_color subfunction

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2008-03-11  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m (get_old_gnuplot_color): New subfunction.
+	Use it to replace repeated if/elseif blocks.
+
+2008-03-11  Kai Habel  <kai.habel@gmx.de>
+
+	* plot/__go_draw_axes__.m: If facecolor property of a surface is
+	"none", don't use pm3d mode and set linestyle correctly. 
+
 2008-03-07  John W. Eaton  <jwe@octave.org>
 
 	* plot/contourf.m: Set axes layer property to "top".
 
 2008-03-06  John W. Eaton  <jwe@octave.org>
 
 	* plot/hist.m: Avoid temporaries.
 	Allow matrix arguments when number of bins > 30.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -598,35 +598,17 @@ function __go_draw_axes__ (h, plot_strea
 		   colorspec = "";
 		 else
 		   colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
 					round (255*color));
 		 endif
 		 withclause{data_idx} = sprintf ("with filledcurve %s",
 						 colorspec);
 	       else
-		 if (isequal (color, [0,0,0]))
-		   typ = -1;
-		 elseif (isequal (color, [1,0,0]))
-		   typ = 1;
-		 elseif (isequal (color, [0,1,0]))
-		   typ = 2;
-		 elseif (isequal (color, [0,0,1]))
-		   typ = 3;
-		 elseif (isequal (color, [1,0,1]))
-		   typ = 4;
-		 elseif (isequal (color, [0,1,1]))
-		   typ = 5;
-		 elseif (isequal (color, [1,1,1]))
-		   typ = -1;
-		 elseif (isequal (color, [1,1,0]))
-		   typ = 7;
-		 else
-		   typ = -1;
-		 endif
+		 typ = get_old_gnuplot_color (color);
 		 withclause{data_idx} = sprintf ("with filledcurve lt %d", typ);
 	       endif
 	       data{data_idx} = [xcol, ycol]';
 	       usingclause{data_idx} = "using ($1):($2)";
 	     endif
 	   endif
 
            ## patch outline
@@ -777,35 +759,17 @@ function __go_draw_axes__ (h, plot_strea
 		 colorspec = "";
 	       else
 		 colorspec = sprintf ("lc rgb \"#%02x%02x%02x\"",
 				      round (255*color));
 	       endif
 	       withclause{data_idx} = sprintf ("with %s %s %s %s %s",
 					       style, pt, lt, ps, colorspec);
 	     else
-	       if (isequal (color, [0,0,0]))
-		 typ = -1;
-	       elseif (isequal (color, [1,0,0]))
-		 typ = 1;
-	       elseif (isequal (color, [0,1,0]))
-		 typ = 2;
-	       elseif (isequal (color, [0,0,1]))
-		 typ = 3;
-	       elseif (isequal (color, [1,0,1]))
-		 typ = 4;
-	       elseif (isequal (color, [0,1,1]))
-		 typ = 5;
-	       elseif (isequal (color, [1,1,1]))
-		 typ = -1;
-	       elseif (isequal (color, [1,1,0]))
-		 typ = 7;
-	       else
-		 typ = -1;
-	       endif
+	       typ = get_old_gnuplot_color (color);
 	       withclause{data_idx} = sprintf ("with %s %s %s lt %d", 
 					       style, pt, ps, typ);
 	     endif
 
 	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
@@ -928,51 +892,33 @@ function __go_draw_axes__ (h, plot_strea
 		       interp_str, dord);
             elseif (!facecolor_none_or_white)
               if (strncmp (obj.edgecolor, "none", 4))
                 fprintf (plot_stream, "set pm3d explicit at s %s corners2color c3;\n", 
 			 interp_str, dord);
               else
                 edgecol = obj.edgecolor;
                 if (ischar (obj.edgecolor))
-                  edgecol = [0,0,0];
+                  edgecol = [0, 0, 0];
                 endif
                 fprintf (plot_stream, "set pm3d explicit at s hidden3d %d %s %s corners2color c3;\n", 
 			 data_idx, interp_str, dord);
 
 		if (have_newer_gnuplot)
 		  if (mono)
 		    colorspec = "";
 		  else
 		    colorspec = sprintf ("linecolor rgb \"#%02x%02x%02x\"",
 					 round (255*edgecol));
 		  endif
                   fprintf (plot_stream,
                            "set style line %d %s lw %f;\n",
                            data_idx, colorspec, obj.linewidth);
 		else
-		  if (isequal (edgecol, [0,0,0]))
-		    typ = -1;
-		  elseif (isequal (edgecol, [1,0,0]))
-		    typ = 1;
-		  elseif (isequal (edgecol, [0,1,0]))
-		    typ = 2;
-		  elseif (isequal (edgecol, [0,0,1]))
-		    typ = 3;
-		  elseif (isequal (edgecol, [1,0,1]))
-		    typ = 4;
-		  elseif (isequal (edgecol, [0,1,1]))
-		    typ = 5;
-		  elseif (isequal (edgecol, [1,1,1]))
-		    typ = -1;
-		  elseif (isequal (edgecol, [1,1,0]))
-		    typ = 7;
-		  else
-		    typ = -1;
-		  endif
+		  typ = get_old_gnuplot_color (edgecol);
                   fprintf (plot_stream,
                            "set style line %d lt %d lw %f;\n",
                            data_idx, typ, obj.linewidth);
 		endif
               endif
             endif
 	  endif
 
@@ -1280,35 +1226,17 @@ function [style, typ, with] = do_linesty
     color = obj.color;
     if (isnumeric (color))
       if (have_newer_gnuplot)
 	if (! mono)
 	  fprintf (plot_stream, " linecolor rgb \"#%02x%02x%02x\"",
 		   round (255*color));
 	endif
       else
-	if (isequal (color, [0,0,0]))
-	  typ = -1;
-	elseif (isequal (color, [1,0,0]))
-	  typ = 1;
-	elseif (isequal (color, [0,1,0]))
-	  typ = 2;
-	elseif (isequal (color, [0,0,1]))
-	  typ = 3;
-	elseif (isequal (color, [1,0,1]))
-	  typ = 4;
-	elseif (isequal (color, [0,1,1]))
-	  typ = 5;
-	elseif (isequal (color, [1,1,1]))
-	  typ = 6;
-	elseif (isequal (color, [1,1,0]))
-	  typ = 7;
-	else
-	  typ = 2;
-	endif
+	typ = get_old_gnuplot_color (color);
       endif
     endif
     found_style = true;
   endif
 
   if (isfield (obj, "linestyle"))
     switch (obj.linestyle)
       case "-"
@@ -1602,35 +1530,17 @@ function colorspec = get_text_colorspec 
   if (have_newer_gnuplot)
     if (mono)
       colorspec = "";
     else
       colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
 			   round (255*color));
     endif
   else
-    if (isequal (color, [0,0,0]))
-      typ = -1;
-    elseif (isequal (color, [1,0,0]))
-      typ = 1;
-    elseif (isequal (color, [0,1,0]))
-      typ = 2;
-    elseif (isequal (color, [0,0,1]))
-      typ = 3;
-    elseif (isequal (color, [1,0,1]))
-      typ = 4;
-    elseif (isequal (color, [0,1,1]))
-      typ = 5;
-    elseif (isequal (color, [1,1,1]))
-      typ = -1;
-    elseif (isequal (color, [1,1,0]))
-      typ = 7;
-    else
-      typ = -1;
-    endif
+    typ = get_old_gnuplot_color (color);
     colorspec = sprintf ("textcolor lt %d", typ);
   endif
 endfunction
 
 function [f, s, fnt, it, bld] = get_fontname_and_size (t)
   if (isempty (t.fontname))
     fnt = "Helvetica";
   else
@@ -2059,8 +1969,30 @@ function retval = __do_enhanced_option__
   if (enhanced)
     if (strcmpi (obj.interpreter, "none"))
       retval = "noenhanced";
     else
       retval = "enhanced";
     endif
   endif
 endfunction
+
+function typ = get_old_gnuplot_color (color)
+  if (isequal (color, [0, 0, 0]))
+    typ = -1;
+  elseif (isequal (color, [1, 0, 0]))
+    typ = 1;
+  elseif (isequal (color, [0, 1, 0]))
+    typ = 2;
+  elseif (isequal (color, [0, 0, 1]))
+    typ = 3;
+  elseif (isequal (color, [1, 0, 1]))
+    typ = 4;
+  elseif (isequal (color, [0, 1, 1]))
+    typ = 5;
+  elseif (isequal (color, [1, 1, 1]))
+    typ = -1;
+  elseif (isequal (color, [1, 1, 0]))
+    typ = 7;
+  else
+    typ = -1;
+  endif
+endfunction
