# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1384489248 18000
#      Thu Nov 14 23:20:48 2013 -0500
# Node ID 14a5493a78c85f366b4ffe29b12a39b425e1a749
# Parent  87db35b69cfd6f692b52c8236ce6d5226c7739c6
Fix use of XXX_API macros and export more symbols from liboctave.

* liboctave/util/unwind-prot.h (class unwind_protect,
class unwind_protect_safe): Replace OCTINTERP_API with OCTAVE_API.
* liboctave/util/url-transfer.h (class base_url_transfer,
class url_transfer): Decorate with OCTAVE_API.

diff --git a/liboctave/util/unwind-prot.h b/liboctave/util/unwind-prot.h
--- a/liboctave/util/unwind-prot.h
+++ b/liboctave/util/unwind-prot.h
@@ -27,17 +27,17 @@ along with Octave; see the file COPYING.
 #include <cstddef>
 
 #include <stack>
 #include <memory>
 
 #include "action-container.h"
 
 class
-OCTINTERP_API
+OCTAVE_API
 unwind_protect : public action_container
 {
 public:
 
   unwind_protect (void) : lifo () { }
 
   // Destructor should not raise an exception, so all actions
   // registered should be exception-safe (but setting error_state is
@@ -102,17 +102,17 @@ private:
 };
 
 // Like unwind_protect, but this one will guard against the
 // possibility of seeing an exception (or interrupt) in the cleanup
 // actions. Not that we can do much about it, but at least we won't
 // crash.
 
 class
-OCTINTERP_API
+OCTAVE_API
 unwind_protect_safe : public unwind_protect
 {
 private:
 
   static void gripe_exception (void);
 
 public:
 
diff --git a/liboctave/util/url-transfer.h b/liboctave/util/url-transfer.h
--- a/liboctave/util/url-transfer.h
+++ b/liboctave/util/url-transfer.h
@@ -26,17 +26,19 @@ along with Octave; see the file COPYING.
 // Author: jwe
 
 #if !defined (octave_url_transfer_h)
 #define octave_url_transfer_h 1
 
 #include <iosfwd>
 #include <string>
 
-class base_url_transfer
+class
+OCTAVE_API
+base_url_transfer
 {
 private:
 
   static void delete_file (const std::string& file);
 
   static void reset_path (base_url_transfer *curl_xfer)
   {
     curl_xfer->cwd ("..");
@@ -153,17 +155,19 @@ private:
 
   // No copying!
 
   base_url_transfer (const base_url_transfer&);
 
   base_url_transfer& operator = (const base_url_transfer&);
 };
 
-class url_transfer
+class
+OCTAVE_API
+url_transfer
 {
 public:
 
   url_transfer (void);
 
   url_transfer (const std::string& host, const std::string& user,
                 const std::string& passwd, std::ostream& os);
 
