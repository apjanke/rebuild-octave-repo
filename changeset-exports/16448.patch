# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365283879 14400
#      Sat Apr 06 17:31:19 2013 -0400
# Node ID 47fe533ec85ba6bf08d7a8d5931b876e01338b4e
# Parent  e3b33a7530bcf6aaf3b63e6fad4b9a7224f534f9
avoid using new for status bar and workspace_model objects

* main-window.h, main-window.cc (main_window::status_bar): Rename from
_status_bar.  Don't use use a pointer.  Change all uses.
(main_window::main_window): Initialize it.
(main_window::~main_window): Don't delete _status_bar.
(main_window::_workspace_model): Don't use use a pointer.  Change all
uses.
(main_window::main_window): Initialize it.
(main_window::~main_window): Don't delete _workspace_model.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -51,17 +51,18 @@ along with Octave; see the file COPYING.
 #include "toplev.h"
 #include "version.h"
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
 #include "oct-env.h"
 
 main_window::main_window (QWidget *p)
-  : QMainWindow (p), command_window (this), history_window (this)
+  : QMainWindow (p), _workspace_model (), status_bar (),
+    command_window (this), history_window (this)
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
 }
 
 main_window::~main_window ()
 {
   // Clean up all dynamically created objects to ensure they are
@@ -74,26 +75,22 @@ main_window::~main_window ()
   octave_link::connect_link (0);
   delete _octave_qt_link;
 
 #ifdef HAVE_QSCINTILLA
   if (_file_editor)
     delete _file_editor;
 #endif
 
-  if (_status_bar)
-    delete _status_bar;
-
   if (_documentation_dock_widget)
     delete _documentation_dock_widget;
 
   if (_files_dock_widget)
     delete _files_dock_widget;
 
-  delete _workspace_model;
   delete _workspace_view;
 }
 
 void
 main_window::new_file ()
 {
 #ifdef HAVE_QSCINTILLA
   _file_editor->request_new_file ();
@@ -114,17 +111,17 @@ main_window::open_file (const QString& f
 #ifdef HAVE_QSCINTILLA
   _file_editor->request_open_file (file_name);
 #endif
 }
 
 void
 main_window::report_status_message (const QString& statusMessage)
 {
-  _status_bar->showMessage (statusMessage, 1000);
+  status_bar.showMessage (statusMessage, 1000);
 }
 
 void
 main_window::handle_save_workspace_request ()
 {
   QString selectedFile =
     QFileDialog::getSaveFileName (this, tr ("Save Workspace As"),
                                   resource_manager::get_home_path ());
@@ -617,33 +614,29 @@ main_window::connect_visibility_changed 
 
 // Main subroutine of the constructor
 void
 main_window::construct ()
 {
   _closing = false;   // flag for editor files when closed
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
 
-  // Create a new workspace model.
-  _workspace_model = new workspace_model ();
-
   // Setup dockable widgets and the status bar.
   _workspace_view           = new workspace_view (this);
 
-  _workspace_view->setModel (_workspace_model);
+  _workspace_view->setModel (&_workspace_model);
   _workspace_view->setStatusTip (tr ("View the variables in the active workspace."));
 
-  connect (_workspace_model, SIGNAL (model_changed ()),
+  connect (&_workspace_model, SIGNAL (model_changed ()),
            _workspace_view, SLOT (model_changed ()));
 
   _files_dock_widget        = new files_dock_widget (this);
   _files_dock_widget->setStatusTip (tr ("Browse your files."));
   _documentation_dock_widget= new documentation_dock_widget (this);
   _documentation_dock_widget->setStatusTip (tr ("See the documentation for help."));
-  _status_bar               = new QStatusBar (this);
 
   _current_directory_line_edit = new QLineEdit (this);
   _current_directory_combo_box = new QComboBox (this);
   _current_directory_combo_box->setFixedWidth (current_directory_width);
   _current_directory_combo_box->setEditable (true);
   // setLineEdit takes ownership -> no need to delete line_edit in ~main_window
   _current_directory_combo_box->setLineEdit (_current_directory_line_edit);
   _current_directory_combo_box->setInsertPolicy (QComboBox::InsertAtTop);
@@ -1100,17 +1093,17 @@ main_window::construct ()
   int win_x = QApplication::desktop()->width();
   int win_y = QApplication::desktop()->height();
   if (win_x > 960)
     win_x = 960;
   if (win_y > 720)
     win_y = 720;
   setGeometry (0,0,win_x,win_y);
 
-  setStatusBar (_status_bar);
+  setStatusBar (&status_bar);
 
   _octave_qt_event_listener = new octave_qt_event_listener ();
 
   connect (_octave_qt_event_listener,
            SIGNAL (update_workspace_signal ()),
            this,
            SLOT (update_workspace ()));
 
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -150,41 +150,43 @@ private:
   void debug_step_over_callback (void);
 
   void debug_step_out_callback (void);
 
   void debug_quit_callback (void);
 
   void exit_callback (void);
 
+  // Data models.
+  workspace_model _workspace_model;
+
+  // Toolbars.
+  QStatusBar status_bar;
+
+  // Subwindows.
   terminal_dock_widget command_window;
-
   history_dock_widget history_window;
 
 #ifdef HAVE_QSCINTILLA
   file_editor_interface *   _file_editor;
 #endif
   QMenu *                   _debug_menu;
 
   QAction *                 _debug_continue;
   QAction *                 _debug_step_into;
   QAction *                 _debug_step_over;
   QAction *                 _debug_step_out;
   QAction *                 _debug_quit;
 
-  // Data models.
-  workspace_model *         _workspace_model;
-
   // Dock widgets.
   workspace_view *          _workspace_view;
   files_dock_widget *       _files_dock_widget;
   documentation_dock_widget*_documentation_dock_widget;
 
   // Toolbars.
-  QStatusBar *              _status_bar;
   QComboBox *               _current_directory_combo_box;
   static const int        current_directory_width       = 300;
   static const int        current_directory_max_visible = 16;
   static const int        current_directory_max_count   = 16;
   QLineEdit *               _current_directory_line_edit;
 
   octave_qt_event_listener *_octave_qt_event_listener;
 
