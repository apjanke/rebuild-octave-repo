# HG changeset patch
# User Konstantinos Poulios <logari81@googlemail.com>
# Date 1295637762 -3600
#      Fri Jan 21 20:22:42 2011 +0100
# Node ID 62b7ea59a6ff354d2841a83ba170773f1b70357a
# Parent  a066673566da7c60fd80a30fe38263ba9ebaea57
fixing color mismatch between axis and axis label

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-21  Konstantinos Poulios  <logari81@gmail.com>
+
+	* plot/xlabel.m, plot/ylabel.m, plot/zlabel.m: Setting axis label
+	color from axis color.
+
 2011-01-20  Jordi Guti√©rrez Hermoso  <jordigh@gmail.com>
 
 	* image/imshow.m: Fix handling of clim and display_range so that
 	images are more faithfully reproduced.
 
 2011-01-20  Rik  <octave@nomad.inbox5.com>
 
 	* scripts/image/imshow.m, scripts/image/saveimage.m,
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -37,17 +37,18 @@ function retval = xlabel (varargin)
 
   if (rem (nargin, 2) != 1)
     print_usage ();
   endif
 
   oldh = gca ();
   unwind_protect
     axes (h);
-    tmp = __axis_label__ ("xlabel", varargin{:});
+    tmp = __axis_label__ ("xlabel", varargin{:},
+                          "color", get (h, "xcolor"));
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
     retval = tmp;
   endif
 
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -31,17 +31,18 @@ function retval = ylabel (varargin)
 
   if (rem (nargin, 2) != 1)
     print_usage ();
   endif
 
   oldh = gca ();
   unwind_protect
     axes (h);
-    tmp = __axis_label__ ("ylabel", varargin{:});
+    tmp = __axis_label__ ("ylabel", varargin{:},
+                          "color", get (h, "ycolor"));
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
     retval = tmp;
   endif
 
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -31,17 +31,18 @@ function retval = zlabel (varargin)
 
   if (rem (nargin, 2) != 1)
     print_usage ();
   endif
 
   oldh = gca ();
   unwind_protect
     axes (h);
-    tmp = __axis_label__ ("zlabel", varargin{:});
+    tmp = __axis_label__ ("zlabel", varargin{:},
+                          "color", get (h, "zcolor"));
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
     retval = tmp;
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-21  Konstantinos Poulios  <logari81@googlemail.com>
+
+	* src/graphics.cc (axes::properties::set_xlabel,
+	axes::properties::set_ylabel, axes::properties::set_zlabel):
+	Setting axis label color from axis color.
+
 2011-01-20  Rik  <octave@nomad.inbox5.com>
 
 	* src/file-io.cc, src/variables.cc: Prevent doubled quotes around @table
 	items in Info.
 
 2011-01-20  Rik  <octave@nomad.inbox5.com>
 
 	* src/DLD-FUNCTIONS/chol.cc, src/DLD-FUNCTIONS/luinc.cc,
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3294,38 +3294,41 @@ void
 axes::properties::set_xlabel (const octave_value& v)
 {
   set_text_child (xlabel, "xlabel", v);
   xset (xlabel.handle_value (), "positionmode", "auto");
   xset (xlabel.handle_value (), "rotationmode", "auto");
   xset (xlabel.handle_value (), "horizontalalignmentmode", "auto");
   xset (xlabel.handle_value (), "verticalalignmentmode", "auto");
   xset (xlabel.handle_value (), "clipping", "off");
+  xset (xlabel.handle_value (), "color", get_xcolor ());
 }
 
 void
 axes::properties::set_ylabel (const octave_value& v)
 {
   set_text_child (ylabel, "ylabel", v);
   xset (ylabel.handle_value (), "positionmode", "auto");
   xset (ylabel.handle_value (), "rotationmode", "auto");
   xset (ylabel.handle_value (), "horizontalalignmentmode", "auto");
   xset (ylabel.handle_value (), "verticalalignmentmode", "auto");
   xset (ylabel.handle_value (), "clipping", "off");
+  xset (ylabel.handle_value (), "color", get_ycolor ());
 }
 
 void
 axes::properties::set_zlabel (const octave_value& v)
 {
   set_text_child (zlabel, "zlabel", v);
   xset (zlabel.handle_value (), "positionmode", "auto");
   xset (zlabel.handle_value (), "rotationmode", "auto");
   xset (zlabel.handle_value (), "horizontalalignmentmode", "auto");
   xset (zlabel.handle_value (), "verticalalignmentmode", "auto");
   xset (zlabel.handle_value (), "clipping", "off");
+  xset (zlabel.handle_value (), "color", get_zcolor ());
 }
 
 void
 axes::properties::set_title (const octave_value& v)
 {
   set_text_child (title, "title", v);
   xset (title.handle_value (), "positionmode", "auto");
   xset (title.handle_value (), "horizontalalignment", "center");
