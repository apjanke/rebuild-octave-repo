# HG changeset patch
# User jwe
# Date 755215297 0
#      Mon Dec 06 22:01:37 1993 +0000
# Node ID e208bd9ade3678154b82838c25953fa27d6f401b
# Parent  bc5e6cb785d1923701ba4e07201b357b008c2dac
[project @ 1993-12-06 22:01:37 by jwe]

diff --git a/liboctave/NLEqn.cc b/liboctave/NLEqn.cc
--- a/liboctave/NLEqn.cc
+++ b/liboctave/NLEqn.cc
@@ -28,22 +28,23 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <float.h>
 
 #include "NLEqn.h"
 #include "f77-uscore.h"
 #include "lo-error.h"
 
 extern "C"
 {
-  int F77_FCN (hybrd1) (int (*)(), const int*, double*, double*,
-			const double*, int*, double*, const int*);
+  int F77_FCN (hybrd1) (int (*)(int*, double*, double*, int*),
+			const int*, double*, double*, const double*,
+			int*, double*, const int*);
 
-  int F77_FCN (hybrj1) (int (*)(), const int*, double*, double*,
-			double*, const int*, const double*, int*,
-			double*, const int*);
+  int F77_FCN (hybrj1) (int (*)(int*, double*, double*, double*, int*, int*),
+			const int*, double*, double*, double*, const int*,
+			const double*, int*, double*, const int*);
 }
 
 static nonlinear_fcn user_fun;
 static jacobian_fcn user_jac;
 
 // error handling
 
 void
@@ -138,18 +139,23 @@ hybrd1_fcn (int *n, double *x, double *f
   Vector tmp_f (nn);
   Vector tmp_x (nn);
 
   for (int i = 0; i < nn; i++)
     tmp_x.elem (i) = x[i];
 
   tmp_f = (*user_fun) (tmp_x);
 
-  for (i = 0; i < nn; i++)
-    fvec[i] = tmp_f.elem (i);
+  if (tmp_f.length () == 0)
+    *iflag = -1;
+  else
+    {
+      for (i = 0; i < nn; i++)
+	fvec[i] = tmp_f.elem (i);
+    }
 
   return 0;
 }
 
 int
 hybrj1_fcn (int *n, double *x, double *fvec, double *fjac,
 	    int *ldfjac, int *iflag)
 {
@@ -161,29 +167,39 @@ hybrj1_fcn (int *n, double *x, double *f
 
   int flag = *iflag;
   if (flag == 1)
     {
       Vector tmp_f (nn);
 
       tmp_f = (*user_fun) (tmp_x);
 
-      for (i = 0; i < nn; i++)
-	fvec[i] = tmp_f.elem (i);
+      if (tmp_f.length () == 0)
+	*iflag = -1;
+      else
+	{
+	  for (i = 0; i < nn; i++)
+	    fvec[i] = tmp_f.elem (i);
+	}
     }
   else
     {
       Matrix tmp_fj (nn, nn);
 
       tmp_fj = (*user_jac) (tmp_x);
 
-      int ld = *ldfjac;
-      for (int j = 0; j < nn; j++)
-	for (i = 0; i < nn; i++)
-	  fjac[j*ld+i] = tmp_fj.elem (i, j);
+      if (tmp_fj.rows () == 0 || tmp_fj.columns () == 0)
+	*iflag = -1;
+      else
+	{
+	  int ld = *ldfjac;
+	  for (int j = 0; j < nn; j++)
+	    for (i = 0; i < nn; i++)
+	      fjac[j*ld+i] = tmp_fj.elem (i, j);
+	}
     }
 
   return 0;
 }
 
 Vector
 NLEqn::solve (int& info)
 {
@@ -222,22 +238,27 @@ NLEqn::solve (int& info)
 
       F77_FCN (hybrj1) (hybrj1_fcn, &n, px, fvec, fjac, &n, &tol,
 			&tmp_info, wa, &lwa);
 
       delete [] wa;
       delete [] fjac;
     }
 
+  Vector retval;
+
   info = tmp_info;
 
-  Vector retval (n);
+  if (info >= 0)
+    {
+      retval.resize (n);
 
-  for (i = 0; i < n; i++)
-    retval.elem (i) = px[i];
+      for (i = 0; i < n; i++)
+	retval.elem (i) = px[i];
+    }
 
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
