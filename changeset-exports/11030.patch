# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1285674970 -7200
#      Tue Sep 28 13:56:10 2010 +0200
# Node ID 231946a9ad554f712b1e7a851fd8a4979fbe07b3
# Parent  4ab04ea74b08970e950d6c74772b685edd67433d
make the result of r^m real when r > 0

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-09-28  Jaroslav Hajek  <highegg@gmail.com>
+
+	* xpow.cc (xpow (double, const Matrix&)): Ensure real result for
+	positive base.
+	(xpow (double, const Matrix&)): Likewise.
+
 2010-09-28  Jaroslav Hajek  <highegg@gmail.com>
 
 	* error.cc (interpreter_try): New function.
 	* error.h: Declare it.
 	* ov-fcn-handle.cc (octave_fcn_binder::maybe_binder): Use it here.
 	* variables.cc (safe_symbol_lookup): Also here.
 
 2010-09-27  John W. Eaton  <jwe@octave.org>
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -118,17 +118,21 @@ xpow (double a, const Matrix& b)
               Complex elt = lambda(i);
               if (std::imag (elt) == 0.0)
                 lambda(i) = std::pow (a, std::real (elt));
               else
                 lambda(i) = std::pow (a, elt);
             }
           ComplexDiagMatrix D (lambda);
 
-          retval = ComplexMatrix (Q * D * Q.inverse ());
+          ComplexMatrix C = Q * D * Q.inverse ();
+          if (a > 0)
+            retval = real (C);
+          else
+            retval = C;
         }
       else
         error ("xpow: matrix diagonalization failed");
     }
 
   return retval;
 }
 
@@ -1529,17 +1533,22 @@ xpow (float a, const FloatMatrix& b)
               FloatComplex elt = lambda(i);
               if (std::imag (elt) == 0.0)
                 lambda(i) = std::pow (a, std::real (elt));
               else
                 lambda(i) = std::pow (a, elt);
             }
           FloatComplexDiagMatrix D (lambda);
 
-          retval = FloatComplexMatrix (Q * D * Q.inverse ());
+          FloatComplexMatrix C = Q * D * Q.inverse ();
+
+          if (a > 0)
+            retval = real (C);
+          else
+            retval = C;
         }
       else
         error ("xpow: matrix diagonalization failed");
     }
 
   return retval;
 }
 
