# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1418907478 18000
#      Thu Dec 18 07:57:58 2014 -0500
# Node ID cfe56baccb0c5fdfab79d763d2f11590395ea494
# Parent  a0c7001cf1a83f320b00f59f27db24373fde352a
eliminate extra warning about finding minimum norm solution

* sparse-xdiv.cc (solve_singularity_warning): Delete extra warning
message about attempting to find minimum norm solution.
* xdiv.cc (solve_singularity_warning): Likewise.

diff --git a/libinterp/corefcn/sparse-xdiv.cc b/libinterp/corefcn/sparse-xdiv.cc
--- a/libinterp/corefcn/sparse-xdiv.cc
+++ b/libinterp/corefcn/sparse-xdiv.cc
@@ -40,17 +40,16 @@ along with Octave; see the file COPYING.
 #include "CDiagMatrix.h"
 #include "oct-spparms.h"
 #include "sparse-xdiv.h"
 
 static void
 solve_singularity_warning (double rcond)
 {
   gripe_singular_matrix (rcond);
-  warning ("attempting to find minimum norm solution");
 }
 
 template <class T1, class T2>
 bool
 mx_leftdiv_conform (const T1& a, const T2& b)
 {
   octave_idx_type a_nr = a.rows ();
   octave_idx_type b_nr = b.rows ();
diff --git a/libinterp/corefcn/xdiv.cc b/libinterp/corefcn/xdiv.cc
--- a/libinterp/corefcn/xdiv.cc
+++ b/libinterp/corefcn/xdiv.cc
@@ -55,17 +55,16 @@ result_ok (octave_idx_type info)
 
   return (info != -2);
 }
 
 static void
 solve_singularity_warning (double rcond)
 {
   gripe_singular_matrix (rcond);
-  warning ("attempting to find minimum norm solution");
 }
 
 template <class T1, class T2>
 bool
 mx_leftdiv_conform (const T1& a, const T2& b, blas_trans_type blas_trans)
 {
   octave_idx_type a_nr = blas_trans == blas_no_trans ? a.rows () : a.cols ();
   octave_idx_type b_nr = b.rows ();
@@ -402,17 +401,16 @@ xleftdiv (const ComplexMatrix& a, const 
   double rcond = 0.0;
   return a.solve (typ, b, info, rcond, solve_singularity_warning, true, transt);
 }
 
 static void
 solve_singularity_warning (float rcond)
 {
   gripe_singular_matrix (rcond);
-  warning ("attempting to find minimum norm solution");
 }
 
 INSTANTIATE_MX_LEFTDIV_CONFORM (FloatMatrix, FloatMatrix);
 INSTANTIATE_MX_LEFTDIV_CONFORM (FloatMatrix, FloatComplexMatrix);
 INSTANTIATE_MX_LEFTDIV_CONFORM (FloatComplexMatrix, FloatMatrix);
 INSTANTIATE_MX_LEFTDIV_CONFORM (FloatComplexMatrix, FloatComplexMatrix);
 
 INSTANTIATE_MX_DIV_CONFORM (FloatMatrix, FloatMatrix);
