# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1360079806 18000
#      Tue Feb 05 10:56:46 2013 -0500
# Node ID cddf9103a566d70627f71abdd3a2dfdd3f96321e
# Parent  7275cfaddb5e0f8c0a9c83aa5658880cb835b923
Fix legend bugs (#38263, #38265).
* scripts/plot/legend.m: Add listener for the legend hggroup "fontsize"
  property, and add "fontsize" to the updated properties.
* scripts/plot/private/__go_draw_axes__.m: Limited supprt for changing
  the color of the legend's text labels.

diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -869,16 +869,17 @@ function [hlegend2, hobjects2, hplot2, t
                "orientation", orientation, "textposition", textpos);
         else
           set (hlegend, "location", position, "orientation", orientation,
                "textposition", textpos);
         endif
         if (addprops)
           addlistener (hlegend, "edgecolor", @updatelegendtext);
           addlistener (hlegend, "textcolor", @updatelegendtext);
+          addlistener (hlegend, "fontsize", @updatelegendtext);
           addlistener (hlegend, "interpreter", @updatelegendtext);
           addlistener (hlegend, "location", @updatelegend);
           addlistener (hlegend, "orientation", @updatelegend);
           addlistener (hlegend, "string", @updatelegend);
           addlistener (hlegend, "textposition", @updatelegend);
         endif
       unwind_protect_cleanup
         set (fig, "currentaxes", curaxes);
@@ -910,17 +911,20 @@ function updatelegend (h, d)
 endfunction
 
 function updatelegendtext (h, d)
   hax = get (h, "userdata").handle;
   kids = get (h, "children");
   text_kids = findobj (kids, "-property", "interpreter", "type", "text");
   interpreter = get (h, "interpreter");
   textcolor = get (h, "textcolor");
-  set (text_kids, "interpreter", interpreter, "color", textcolor);
+  fontsize = get (h, "fontsize");
+  set (text_kids, "interpreter", interpreter,
+                  "fontsize", fontsize,
+                  "color", textcolor);
 endfunction
 
 function hideshowlegend (h, d, ca, pos1, pos2)
   isvisible = strcmp (get (h, "visible"), "off");
   if (! isvisible)
     kids = get (h, "children");
     for i = 1 : numel (kids)
       if (! strcmp (get (kids(i), "visible"), "off"))
diff --git a/scripts/plot/private/__go_draw_axes__.m b/scripts/plot/private/__go_draw_axes__.m
--- a/scripts/plot/private/__go_draw_axes__.m
+++ b/scripts/plot/private/__go_draw_axes__.m
@@ -1586,17 +1586,29 @@ function __go_draw_axes__ (h, plot_strea
           pos = "";
       endswitch
       if (__gnuplot_has_feature__ ("key_has_font_properties"))
         [fontname, fontsize] = get_fontname_and_size (hlgnd);
         fontspec = create_fontspec (fontname, fontsize, gnuplot_term);
       else
         fontspec = "";
       endif
-      colorspec = get_text_colorspec (hlgnd.textcolor, mono);
+      textcolors = get (findobj (hlgnd.children, "type", "text"), "color");
+      if (iscell (textcolors))
+        textcolors = cell2mat (textcolors);
+        textcolors = unique (textcolors, "rows");
+      endif
+      if (rows (textcolors) > 1)
+        ## Gnuplot is unable to assign arbitrary colors to each text entry
+        ## for the key/legend.  But, the text color can be set to match the
+        ## color of the plot object.
+        colorspec = "textcolor variable";
+      else
+        colorspec = get_text_colorspec (textcolors, mono);
+      endif
       fprintf (plot_stream, "set key %s %s;\nset key %s %s %s %s %s;\n",
                inout, pos, box, reverse, horzvert, fontspec, colorspec);
     else
       fputs (plot_stream, "unset key;\n");
     endif
     fputs (plot_stream, "set style data lines;\n");
 
     cmap = [cmap; addedcmap];
