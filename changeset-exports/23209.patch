# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1487535574 -3600
#      Sun Feb 19 21:19:34 2017 +0100
# Node ID 5d9d756724cc5875ecd9f356dcf68b4743d3b75a
# Parent  8fd8ed1e3aa2472b20e5c47dcbee662658d49457
Disable deprecation warnings when resetting graphics objects (bug #50327)

* xreset_default_properties: disable deprecation warnings
* axes::reset_default_properties: dito

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -2949,16 +2949,20 @@ xreset_default_properties (graphics_hand
   // Replace factory defaults by user defined ones
   std::string go_name = go.get_properties ().graphics_object_name ();
   property_list::pval_map_type pval;
   go.build_user_defaults_map (pval, go_name);
 
   for (const auto& p : pval)
     factory_pval[p.first] = p.second;
 
+  // Save warning state of "Octave:deprecated-property"
+  int old_dep_prop = warning_enabled ("Octave:deprecated-property");
+  disable_warning ("Octave:deprecated-property");
+
   // Reset defaults
   for (const auto& p : factory_pval)
     {
       std::string pname = p.first;
 
       // Don't reset internal properties and handle_properties
       if (! go.has_readonly_property (pname)
           && pname.find ("__") != 0 && pname.find ("current") != 0
@@ -2970,16 +2974,22 @@ xreset_default_properties (graphics_hand
           else
             go.set (pname, p.second);
         }
     }
 
   // set *mode properties
   for (const auto& p : pval)
     go.set (p.first, p.second);
+
+  // Re-enable warning state of "Octave:deprecated-property"
+  if (old_dep_prop == 1)
+    set_warning_state ("Octave:deprecated-property", "on");
+  else if (old_dep_prop == 2)
+    set_warning_state ("Octave:deprecated-property", "error");
 }
 
 // ---------------------------------------------------------------------
 
 void
 base_properties::set_from_list (base_graphics_object& bgo,
                                 property_list& defaults)
 {
@@ -3350,29 +3360,18 @@ void
 base_graphics_object::reset_default_properties (void)
 {
   if (valid_object ())
     {
       property_list::pval_map_type factory_pval =
         gh_manager::get_object (0).get_factory_defaults_list ()
         .find (type ())->second;
 
-      // save warning state of "Octave:deprecated-property"
-      int old_dep_prop = warning_enabled ("Octave:deprecated-property");
-      disable_warning ("Octave:deprecated-property");
-
       remove_all_listeners ();
       xreset_default_properties (get_handle (), factory_pval);
-
-      // re-enable warning state of "Octave:deprecated-property"
-      if (old_dep_prop == 1)
-        set_warning_state ("Octave:deprecated-property", "on");
-      else if (old_dep_prop == 2)
-        set_warning_state ("Octave:deprecated-property", "error");
-
     }
 }
 
 std::string
 base_graphics_object::values_as_string (void)
 {
   if (! valid_object ())
     error ("base_graphics_object::values_as_string: invalid graphics object");
@@ -8199,19 +8198,29 @@ axes::properties::clear_zoom_stack (bool
 }
 
 void
 axes::reset_default_properties (void)
 {
   // empty list of local defaults
   default_properties = property_list ();
 
+  // Save warning state of "Octave:deprecated-property"
+  int old_dep_prop = warning_enabled ("Octave:deprecated-property");
+  disable_warning ("Octave:deprecated-property");
+
   // reset factory defaults
   remove_all_listeners ();
   set_defaults ("reset");
+
+  // Re-enable warning state of "Octave:deprecated-property"
+  if (old_dep_prop == 1)
+    set_warning_state ("Octave:deprecated-property", "on");
+  else if (old_dep_prop == 2)
+    set_warning_state ("Octave:deprecated-property", "error");
 }
 
 void
 axes::initialize (const graphics_object& go)
 {
   base_graphics_object::initialize (go);
 
   xinitialize (xproperties.get_title ());
