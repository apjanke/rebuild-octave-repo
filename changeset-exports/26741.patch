# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1550509511 0
#      Mon Feb 18 17:05:11 2019 +0000
# Node ID 9cadeae949f2c4a2099e2a391a4da548e146019b
# Parent  cf271740922aeaa0aab420018e5f18078f9027d5
make ismethod work for classdef and java objects (bug #55487)

* ismethod.m: New function file.
* scripts/miscellaneous/module.mk: Update.

* ov-class.cc (Fismethod): Delete.

diff --git a/libinterp/octave-value/ov-class.cc b/libinterp/octave-value/ov-class.cc
--- a/libinterp/octave-value/ov-class.cc
+++ b/libinterp/octave-value/ov-class.cc
@@ -1932,49 +1932,16 @@ Return true if @var{x} is a class object
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
   return ovl (args(0).isobject ());
 }
 
-DEFMETHOD (ismethod, interp, args, ,
-           doc: /* -*- texinfo -*-
-@deftypefn  {} {} ismethod (@var{obj}, @var{method})
-@deftypefnx {} {} ismethod (@var{clsname}, @var{method})
-Return true if the string @var{method} is a valid method of the object
-@var{obj} or of the class @var{clsname}.
-@seealso{isprop, isobject}
-@end deftypefn */)
-{
-  if (args.length () != 2)
-    print_usage ();
-
-  octave_value arg = args(0);
-
-  std::string class_name;
-
-  if (arg.isobject ())
-    class_name = arg.class_name ();
-  else if (arg.is_string ())
-    class_name = arg.string_value ();
-  else
-    error ("ismethod: first argument must be object or class name");
-
-  std::string method = args(1).string_value ();
-
-  octave::load_path& lp = interp.get_load_path ();
-
-  if (lp.find_method (class_name, method) != "")
-    return ovl (true);
-  else
-    return ovl (false);
-}
-
 static bool
 is_built_in_class (const std::string& cn)
 {
   static std::set<std::string> built_in_class_names;
 
   if (built_in_class_names.empty ())
     {
       built_in_class_names.insert ("double");
diff --git a/scripts/miscellaneous/ismethod.m b/scripts/miscellaneous/ismethod.m
new file mode 100644
--- /dev/null
+++ b/scripts/miscellaneous/ismethod.m
@@ -0,0 +1,45 @@
+## Copyright (C) 2012-2019 Rik Wehbring
+##
+## This file is part of Octave.
+##
+## Octave is free software: you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation, either version 3 of the License, or
+## (at your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <https://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn  {} {} ismethod (@var{obj}, @var{method})
+## @deftypefnx {} {} ismethod (@var{class_name}, @var{method})
+## Return true if the string @var{method} is a valid method of the object
+## @var{obj} or of the class @var{clsname}.
+## @seealso{isprop, isobject, isjava, methods}
+## @end deftypefn
+
+function retval = ismethod (obj, method)
+
+  if (nargin != 2)
+    print_usage ();
+  endif
+
+  if (! (ischar (obj) || isobject (obj) || isjava (obj)))
+    error ("ismethod: first argument must be object or class name");
+  endif
+
+  if (! ischar (method))
+    error ("ismethod: second argument must be a method name");
+  endif
+
+  method_list = methods (obj);
+
+  retval = ismember (method, method_list);
+
+endfunction
diff --git a/scripts/miscellaneous/module.mk b/scripts/miscellaneous/module.mk
--- a/scripts/miscellaneous/module.mk
+++ b/scripts/miscellaneous/module.mk
@@ -31,16 +31,17 @@ FCN_FILE_DIRS += \
   %reldir%/gunzip.m \
   %reldir%/info.m \
   %reldir%/inputParser.m \
   %reldir%/inputname.m \
   %reldir%/isdeployed.m \
   %reldir%/isfile.m \
   %reldir%/isfolder.m \
   %reldir%/ismac.m \
+  %reldir%/ismember.m \
   %reldir%/ispc.m \
   %reldir%/isunix.m \
   %reldir%/license.m \
   %reldir%/list_primes.m \
   %reldir%/loadobj.m \
   %reldir%/ls.m \
   %reldir%/ls_command.m \
   %reldir%/menu.m \
