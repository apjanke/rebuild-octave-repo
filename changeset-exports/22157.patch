# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1469191220 14400
#      Fri Jul 22 08:40:20 2016 -0400
# Node ID c5842206aaea467f6c9e5b3bee08513a522d50ee
# Parent  187b6727c75ef3def798a7f79ad019b94035791a
maint: Strip trailing whitespace from source files.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -62,25 +62,25 @@ static void
 message_handler (QtMsgType, const char *)
 {
 }
 
 #if defined (OCTAVE_USE_WINDOWS_API)
 #include <windows.h>
 // set app id if we have the SetCurrentProcessExplicitAppUserModelID
 // available (>= Win7)
-static void 
+static void
 set_win_app_id ()
 {
   typedef HRESULT (WINAPI *SETCURRENTAPPID)(PCWSTR AppID);
   HMODULE hShell = LoadLibrary ("shell32.dll");
   if (hShell != NULL)
     {
       SETCURRENTAPPID pfnSetCurrentProcessExplicitAppUserModelID =
-        reinterpret_cast<SETCURRENTAPPID> (GetProcAddress (hShell, 
+        reinterpret_cast<SETCURRENTAPPID> (GetProcAddress (hShell,
           "SetCurrentProcessExplicitAppUserModelID"));
 
       if (pfnSetCurrentProcessExplicitAppUserModelID)
         {
           pfnSetCurrentProcessExplicitAppUserModelID (L"gnu.octave");
         }
       FreeLibrary (hShell);
     }
diff --git a/libinterp/corefcn/interpreter.h b/libinterp/corefcn/interpreter.h
--- a/libinterp/corefcn/interpreter.h
+++ b/libinterp/corefcn/interpreter.h
@@ -115,17 +115,17 @@ namespace octave
 
     interpreter (const interpreter&);
 
     interpreter& operator = (const interpreter&);
 
     int main_loop (void);
 
     void clean_up_and_exit (int status, bool safe_to_return = false);
-    
+
     application *m_app_context;
 
     bool m_embedded;
 
     // TRUE means this is an interactive interpreter (forced or not).
     bool m_interactive;
 
     bool m_quitting_gracefully;
diff --git a/liboctave/cruft/misc/f77-fcn.h b/liboctave/cruft/misc/f77-fcn.h
--- a/liboctave/cruft/misc/f77-fcn.h
+++ b/liboctave/cruft/misc/f77-fcn.h
@@ -217,17 +217,17 @@ octave_make_cray_const_ftn_ch_dsc (const
 {
   octave_cray_descriptor desc;
   desc.const_ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_ftn_ch_dsc *) &desc);
 }
 
 #undef OCTAVE_F77_FCN_INLINE
-  
+
 #elif defined (F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION)
 
 /* Use these macros to pass character strings from C to Fortran.
    Visual Fortran inserts the length after each character string
    argument.  */
 
 #define F77_CHAR_ARG(x) x, strlen (x)
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
diff --git a/liboctave/system/file-ops.h b/liboctave/system/file-ops.h
--- a/liboctave/system/file-ops.h
+++ b/liboctave/system/file-ops.h
@@ -103,17 +103,17 @@ namespace octave
       // there is no directory component.  Does not check to see
       // whether the file exists or is a directory.
       static std::string dirname (const std::string& path)
       {
         size_t ipos = path.find_last_of (dir_sep_chars ());
 
         return (ipos != std::string::npos) ? path.substr (0, ipos) : "";
       }
-      
+
       // Return the tail member of a filename.
       static std::string tail (const std::string& path)
       {
         size_t ipos = path.find_last_of (dir_sep_chars ());
 
         if (ipos != std::string::npos)
           ipos++;
         else
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -351,17 +351,17 @@ namespace octave
   {
     std::string dir = octave::sys::file_ops::dirname (f);
 
     set_dll_directory (dir);
 
     handle = LoadLibrary (file.c_str ());
 
     set_dll_directory ();
-    
+
     if (! handle)
       {
         DWORD lastError = GetLastError ();
         const char *msg;
 
         switch (lastError)
           {
           case ERROR_MOD_NOT_FOUND:
diff --git a/scripts/general/private/__publish_latex_output__.m b/scripts/general/private/__publish_latex_output__.m
--- a/scripts/general/private/__publish_latex_output__.m
+++ b/scripts/general/private/__publish_latex_output__.m
@@ -56,17 +56,17 @@ function outstr = handle_header (title_s
     "\\titleformat*{\\section}{\\Huge\\bfseries}\n", ...
     "\\titleformat*{\\subsection}{\\large\\bfseries}\n", ...
     "\\renewcommand{\\contentsname}{\\Large\\bfseries Contents}\n", ...
     "\\setlength{\\parindent}{0pt}\n\n",...
     "\\begin{document}\n\n", ...
     "{\\Huge\\section*{", escape_chars(title_str),"}}\n\n", ...
     "\\tableofcontents\n", ...
     "\\vspace*{4em}\n\n"];
-    
+
   outstr = [publish_comment, latex_preamble, listings_option, latex_head];
 endfunction
 
 function outstr = handle_footer (m_source_str)
   outstr = ["\n\n\\end{document}\n"];
 endfunction
 
 function outstr = handle_code (str)
diff --git a/scripts/general/publish.m b/scripts/general/publish.m
--- a/scripts/general/publish.m
+++ b/scripts/general/publish.m
@@ -607,20 +607,20 @@ function [p_content] = parse_paragraph_c
 
     ## Include <include>fname.m</include>
     if (! isempty ([~,~,~,~,fname] = regexpi (strjoin (block, ""), ...
                                               '^<include>(.*)<\/include>$')))
       ## Includes result in preformatted code
       p_content{end+1}.type = "preformatted_code";
       include_code = read_file_to_cellstr (strtrim ((fname{1}){1}));
       p_content{end}.content = strjoin (include_code, "\n");
-      
+
       continue;
     endif
-    
+
     ## Graphic <<myGraphic.png>>
     if (! isempty ([~,~,~,~,fname] = regexpi (strjoin (block, ""), ...
                                               '^<<(.*)>>$')))
       p_content{end+1}.type = "graphic";
       p_content{end}.content = strtrim ((fname{1}){1});
       continue;
     endif
 
diff --git a/scripts/general/validateattributes.m b/scripts/general/validateattributes.m
--- a/scripts/general/validateattributes.m
+++ b/scripts/general/validateattributes.m
@@ -547,186 +547,186 @@ endfunction
 
 %!test
 %! try validateattributes ([1 2], {"numeric"}, {"scalar"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-scalar");
 %! end_try_catch
 
 %!test
-%! try validateattributes (ones(3), {"numeric"}, {"vector"});      
+%! try validateattributes (ones(3), {"numeric"}, {"vector"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-vector");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 2], {"numeric"}, {"size", [1 1]}); 
+%! try validateattributes ([1 2], {"numeric"}, {"size", [1 1]});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:incorrect-size");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"numel", 7}); 
+%! try validateattributes (1, {"numeric"}, {"numel", 7});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:incorrect-numel");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"ncols", 7}); 
+%! try validateattributes (1, {"numeric"}, {"ncols", 7});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:incorrect-numcols");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"nrows", 7}); 
+%! try validateattributes (1, {"numeric"}, {"nrows", 7});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:incorrect-numrows");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"ndims", 5}); 
+%! try validateattributes (1, {"numeric"}, {"ndims", 5});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:incorrect-numdims");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 2], {"numeric"}, {"square"}); 
+%! try validateattributes ([1 2], {"numeric"}, {"square"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-square");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 2], {"numeric"}, {"diag"}); 
+%! try validateattributes ([1 2], {"numeric"}, {"diag"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-diag");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([], {"numeric"}, {"nonempty"}); 
+%! try validateattributes ([], {"numeric"}, {"nonempty"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonempty");
 %! end_try_catch
 
 %!test
-%! try validateattributes (speye(2), {"numeric"}, {"nonsparse"}); 
+%! try validateattributes (speye(2), {"numeric"}, {"nonsparse"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonsparse");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {">", 3}); 
+%! try validateattributes (1, {"numeric"}, {">", 3});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-greater");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {">=", 3}); 
+%! try validateattributes (1, {"numeric"}, {">=", 3});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-greater-equal");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"<", -3}); 
+%! try validateattributes (1, {"numeric"}, {"<", -3});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-less");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"<=", -3}); 
+%! try validateattributes (1, {"numeric"}, {"<=", -3});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-less-equal");
 %! end_try_catch
 
 %!test
-%! try validateattributes (3, {"numeric"}, {"binary"}); 
+%! try validateattributes (3, {"numeric"}, {"binary"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-binary");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1, {"numeric"}, {"even"}); 
+%! try validateattributes (1, {"numeric"}, {"even"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-even");
 %! end_try_catch
 
 %!test
-%! try validateattributes (2, {"numeric"}, {"odd"}); 
+%! try validateattributes (2, {"numeric"}, {"odd"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-odd");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1.1, {"numeric"}, {"integer"}); 
+%! try validateattributes (1.1, {"numeric"}, {"integer"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-integer");
 %! end_try_catch
 
 %!test
-%! try validateattributes (1+1i*2, {"numeric"}, {"real"}); 
+%! try validateattributes (1+1i*2, {"numeric"}, {"real"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-real");
 %! end_try_catch
 
 %!test
-%! try validateattributes (Inf, {"numeric"}, {"finite"}); 
+%! try validateattributes (Inf, {"numeric"}, {"finite"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-finite");
 %! end_try_catch
 
 %!test
-%! try validateattributes (NaN, {"numeric"}, {"nonnan"}); 
+%! try validateattributes (NaN, {"numeric"}, {"nonnan"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonnan");
 %! end_try_catch
 
 %!test
-%! try validateattributes (-1, {"numeric"}, {"nonnegative"}); 
+%! try validateattributes (-1, {"numeric"}, {"nonnegative"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonnegative");
 %! end_try_catch
 
 %!test
-%! try validateattributes (0, {"numeric"}, {"nonzero"}); 
+%! try validateattributes (0, {"numeric"}, {"nonzero"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonzero");
 %! end_try_catch
 
 %!test
-%! try validateattributes (-1, {"numeric"}, {"positive"}); 
+%! try validateattributes (-1, {"numeric"}, {"positive"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-positive");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 2], {"numeric"}, {"decreasing"}); 
+%! try validateattributes ([1 2], {"numeric"}, {"decreasing"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-decreasing");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([2 1], {"numeric"}, {"increasing"}); 
+%! try validateattributes ([2 1], {"numeric"}, {"increasing"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-increasing");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 0], {"numeric"}, {"nondecreasing"}); 
+%! try validateattributes ([1 0], {"numeric"}, {"nondecreasing"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nondecreasing");
 %! end_try_catch
 
 %!test
-%! try validateattributes ([1 2], {"numeric"}, {"nonincreasing"}); 
+%! try validateattributes ([1 2], {"numeric"}, {"nonincreasing"});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:expected-nonincreasing");
 %! end_try_catch
 
 %!test
-%! try validateattributes (@sin, {"numeric"}, {}); 
+%! try validateattributes (@sin, {"numeric"}, {});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:invalid-type");
 %! end_try_catch
 
 %!test
-%! try validateattributes (@sin, 1, {}); 
+%! try validateattributes (@sin, 1, {});
 %! catch id,
 %! assert (getfield (id, "identifier"), "Octave:invalid-type");
 %! end_try_catch
diff --git a/scripts/plot/appearance/lighting.m b/scripts/plot/appearance/lighting.m
--- a/scripts/plot/appearance/lighting.m
+++ b/scripts/plot/appearance/lighting.m
@@ -212,17 +212,16 @@ endfunction
 ## Test on axes which has no patch or mesh objects
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   lighting flat
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-%! 
 
 %!error lighting ()
 %!error lighting (1, 2, "flat")
 %!error <MODE must be a string> lighting (-1)
 %!error <MODE must be a string> lighting ({})
 %!error <Invalid MODE "foo"> lighting foo
 %!error <Invalid call to lighting> lighting (-1, "flat")
 
diff --git a/scripts/plot/draw/smooth3.m b/scripts/plot/draw/smooth3.m
--- a/scripts/plot/draw/smooth3.m
+++ b/scripts/plot/draw/smooth3.m
@@ -85,17 +85,17 @@ function [data, conv_kernel, sz, std_dev
 
   if (! isnumeric (data) || ndims (data) != 3)
     error ("smooth3: DATA must be a 3-D numeric matrix");
   endif
 
   if (! ischar (method))
     error ("smooth3: METHOD must be a string");
   endif
-  
+
   if (! isreal (sz))
     error ("smooth3: SZ must be a real scalar or 3-element vector");
   elseif (isscalar (sz))
     sz(1:3) = sz;
   elseif (numel (sz) != 3)
     error (["smooth3: SZ of the convolution kernel must be " ...
             "a scalar or 3-element vector"]);
   endif
diff --git a/scripts/testfun/module.mk b/scripts/testfun/module.mk
--- a/scripts/testfun/module.mk
+++ b/scripts/testfun/module.mk
@@ -1,15 +1,15 @@
 FCN_FILE_DIRS += scripts/testfun
 
 scripts_testfun_PRIVATE_FCN_FILES = \
   scripts/testfun/private/compare_plot_demos.m \
   scripts/testfun/private/dump_demos.m \
   scripts/testfun/private/html_compare_plot_demos.m \
-  scripts/testfun/private/html_plot_demos_template.html 
+  scripts/testfun/private/html_plot_demos_template.html
 
 scripts_testfun_FCN_FILES = \
   scripts/testfun/__have_feature__.m \
   scripts/testfun/__printf_assert__.m \
   scripts/testfun/__prog_output_assert__.m \
   scripts/testfun/__run_test_suite__.m \
   scripts/testfun/assert.m \
   scripts/testfun/demo.m \
