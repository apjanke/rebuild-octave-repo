# HG changeset patch
# User jwe
# Date 1115032188 0
#      Mon May 02 11:09:48 2005 +0000
# Node ID f087ea85c24b2c11990200564b9af0cf7183e8a9
# Parent  322ab0da00f8e637bad7c96937975953ef2e1c68
[project @ 2005-05-02 11:09:48 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,15 +1,15 @@
 2005-05-02  John W. Eaton  <jwe@octave.org>
 
-	* oct-map.h (Octave_map::seek, Octave_map::contents): New
-	non-const versions.
-	* oct-map.cc (Octave_map::assign (const octave_value_list&,
-	const std::string&, const Cell&)): For clarity, always resize to
-	new_dims.
+	* oct-map.h, oct-map.cc (Octave_map::seek, Octave_map::contents):
+	New non-const versions.
+	(Octave_map::assign (const octave_value_list&,
+	const std::string&, const Cell&)): Allow both tmp RHS and LHS to
+	be resized.  For clarity, always resize to new_dims.
 
 2005-05-02  David Bateman  <dbateman@free.fr>
 
 	* ov-re-sparse.cc, ov-cx-sparse.cc (load_binary): read save_type into
 	one byte variable.
 	
 2005-04-29  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -269,17 +269,18 @@ Octave_map::assign (const octave_value_l
       dim_vector curr_dims = dims ();
 
       dim_vector new_dims = common_size (rhs_dims, curr_dims);
 
       if (new_dims != rhs_dims)
 	{
 	  tmp.resize (new_dims, fill_value);
 	}
-      else if (new_dims != curr_dims)
+
+      if (new_dims != curr_dims)
 	{
 	  for (iterator p = begin (); p != end (); p++)
 	    contents(p).resize (new_dims, fill_value);
 	}
 
       dimensions = new_dims;
 
       map[k] = tmp;
