# HG changeset patch
# User jwe
# Date 1197394580 0
#      Tue Dec 11 17:36:20 2007 +0000
# Node ID e5055ed23f5249197120b6328fbbb4e733d15241
# Parent  1885f4c7e4b3483dfcb10372510bf94393608de8
[project @ 2007-12-11 17:36:19 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 2007-12-11  David Bateman  <dbateman@free.fr>
 
+	* OPERATORS/op-bm-sbm.cc, OPERATORS/op-b-sbm.cc, 
+	OPERATORS/op-cm-scm.cc, OPERATORS/op-cm-sm.cc, 
+	OPERATORS/op-cs-scm.cc, OPERATORS/op-cs-sm.cc, 
+	OPERATORS/op-m-scm.cc, OPERATORS/op-m-sm.cc, 
+	OPERATORS/op-s-scm.cc, OPERATORS/op-s-sm.cc: Privilege 
+	conversion to dense matrices for compatibility.
+
 	* DLD-FUNCTIONS/sparse.cc (FSparse): Remove the mutate flag, as
 	default bahavior is now to keep matrix sparse always.
 	
 	* graphics.cc (axes::properties::properties):
 	Initialize xcolor, ycolor, and zcolor to (0, 0, 0).
 
 	* graphics.h.in (gh_manager::next_handle): Now double.
 	* graphics.cc (gh_manager::get_handle, gh_manager::gh_manager):
diff --git a/src/OPERATORS/op-b-sbm.cc b/src/OPERATORS/op-b-sbm.cc
--- a/src/OPERATORS/op-b-sbm.cc
+++ b/src/OPERATORS/op-b-sbm.cc
@@ -25,16 +25,17 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include "gripes.h"
 #include "oct-obj.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool.h"
+#include "ov-bool-mat.h"
 #include "ov-scalar.h"
 #include "ops.h"
 
 #include "ov-re-sparse.h"
 
 // bool by sparse bool matrix ops.
 
 DEFBINOP_FN (ne, bool, sparse_bool_matrix, mx_el_ne)
@@ -81,17 +82,18 @@ install_b_sbm_ops (void)
 
   INSTALL_BINOP (op_el_and, octave_bool, octave_sparse_bool_matrix, el_and);
   INSTALL_BINOP (op_el_or, octave_bool, octave_sparse_bool_matrix, el_or);
 
   INSTALL_CATOP (octave_bool, octave_sparse_bool_matrix, b_sbm);
   INSTALL_CATOP (octave_bool, octave_sparse_matrix, b_sm);
   INSTALL_CATOP (octave_scalar, octave_sparse_bool_matrix, s_sbm);
 
-  INSTALL_ASSIGNCONV (octave_bool, octave_sparse_bool_matrix, octave_sparse_bool_matrix);
+  INSTALL_ASSIGNCONV (octave_bool, octave_sparse_bool_matrix, 
+		      octave_bool_matrix);
 
   INSTALL_WIDENOP (octave_bool, octave_sparse_bool_matrix, sparse_bool_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/OPERATORS/op-bm-sbm.cc b/src/OPERATORS/op-bm-sbm.cc
--- a/src/OPERATORS/op-bm-sbm.cc
+++ b/src/OPERATORS/op-bm-sbm.cc
@@ -70,33 +70,37 @@ DEFCATOP (bm_sm, bool_matrix, sparse_mat
 
 DEFCONV (sparse_bool_matrix_conv, bool_matrix, sparse_bool_matrix)
 {
   CAST_CONV_ARG (const octave_bool_matrix&);
   return new octave_sparse_bool_matrix 
     (SparseBoolMatrix (v.bool_matrix_value ()));
 }
 
+DEFNDASSIGNOP_FN (assign, bool_matrix, sparse_bool_matrix, bool_array, assign)
+
 void
 install_bm_sbm_ops (void)
 {
   INSTALL_BINOP (op_eq, octave_bool_matrix, octave_sparse_bool_matrix, eq);
   INSTALL_BINOP (op_ne, octave_bool_matrix, octave_sparse_bool_matrix, ne);
 
   INSTALL_BINOP (op_el_and, octave_bool_matrix, octave_sparse_bool_matrix, 
 		 el_and);
   INSTALL_BINOP (op_el_or, octave_bool_matrix, octave_sparse_bool_matrix, 
 		 el_or);
 
   INSTALL_CATOP (octave_bool_matrix, octave_sparse_bool_matrix, bm_sbm);
   INSTALL_CATOP (octave_bool_matrix, octave_sparse_matrix, bm_sm);
   INSTALL_CATOP (octave_matrix, octave_sparse_bool_matrix, m_sbm);
 
+  INSTALL_ASSIGNOP (op_asn_eq, octave_bool_matrix, octave_sparse_bool_matrix, 
+		    assign)
   INSTALL_ASSIGNCONV (octave_bool_matrix, octave_sparse_bool_matrix, 
-		      octave_sparse_bool_matrix);
+		      octave_bool_matrix);
 
   INSTALL_WIDENOP (octave_bool_matrix, octave_sparse_bool_matrix, 
 		   sparse_bool_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/OPERATORS/op-cm-scm.cc b/src/OPERATORS/op-cm-scm.cc
--- a/src/OPERATORS/op-cm-scm.cc
+++ b/src/OPERATORS/op-cm-scm.cc
@@ -135,16 +135,19 @@ DEFCATOP (cm_scm, complex_matrix, sparse
 DEFCONV (sparse_complex_matrix_conv, complex_matrix, 
 	 sparse_complex_matrix)
 {
   CAST_CONV_ARG (const octave_complex_matrix&);
   return new octave_sparse_complex_matrix 
     (SparseComplexMatrix (v.complex_matrix_value ()));
 }
 
+DEFNDASSIGNOP_FN (assign, complex_matrix, sparse_complex_matrix, 
+		  complex_array, assign)
+
 void
 install_cm_scm_ops (void)
 {
   INSTALL_BINOP (op_add, octave_complex_matrix, 
 		 octave_sparse_complex_matrix, add);
   INSTALL_BINOP (op_sub, octave_complex_matrix, 
 		 octave_sparse_complex_matrix, sub);
   INSTALL_BINOP (op_mul, octave_complex_matrix, 
@@ -178,18 +181,20 @@ install_cm_scm_ops (void)
   INSTALL_BINOP (op_el_and, octave_complex_matrix, 
 		 octave_sparse_complex_matrix, el_and);
   INSTALL_BINOP (op_el_or, octave_complex_matrix, 
 		 octave_sparse_complex_matrix, el_or);
 
   INSTALL_CATOP (octave_complex_matrix, 
 		 octave_sparse_complex_matrix, cm_scm);
 
+  INSTALL_ASSIGNOP (op_asn_eq, octave_complex_matrix, 
+		    octave_sparse_complex_matrix, assign)
   INSTALL_ASSIGNCONV (octave_complex_matrix, octave_sparse_complex_matrix, 
-		      octave_sparse_complex_matrix);
+		      octave_complex_matrix);
 
   INSTALL_WIDENOP (octave_complex_matrix, octave_sparse_complex_matrix, 
 		   sparse_complex_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/OPERATORS/op-cm-sm.cc b/src/OPERATORS/op-cm-sm.cc
--- a/src/OPERATORS/op-cm-sm.cc
+++ b/src/OPERATORS/op-cm-sm.cc
@@ -123,16 +123,18 @@ DEFBINOP_FN (el_or,  complex_matrix, spa
 
 DEFCATOP (cm_sm, complex_matrix, sparse_matrix)
 {
   CAST_BINOP_ARGS (octave_complex_matrix&, const octave_sparse_matrix&);
   SparseComplexMatrix tmp (v1.complex_matrix_value ());
   return octave_value (tmp. concat (v2.sparse_matrix_value (), ra_idx));
 }
 
+DEFNDASSIGNOP_FN (assign, complex_matrix, sparse_matrix, complex_array, assign)
+
 void
 install_cm_sm_ops (void)
 {
   INSTALL_BINOP (op_add, octave_complex_matrix, octave_sparse_matrix, add);
   INSTALL_BINOP (op_sub, octave_complex_matrix, octave_sparse_matrix, sub);
   INSTALL_BINOP (op_mul, octave_complex_matrix, octave_sparse_matrix, mul);
   INSTALL_BINOP (op_div, octave_complex_matrix, octave_sparse_matrix, div);
   INSTALL_BINOP (op_pow, octave_complex_matrix, octave_sparse_matrix, pow);
@@ -153,15 +155,20 @@ install_cm_sm_ops (void)
 		 el_ldiv);
   INSTALL_BINOP (op_el_and, octave_complex_matrix, octave_sparse_matrix, 
 		 el_and);
   INSTALL_BINOP (op_el_or, octave_complex_matrix, octave_sparse_matrix, 
 		 el_or);
 
   INSTALL_CATOP (octave_complex_matrix, octave_sparse_matrix, cm_sm);
 
+  INSTALL_ASSIGNOP (op_asn_eq, octave_complex_matrix, octave_sparse_matrix, 
+		    assign);
+  INSTALL_ASSIGNCONV (octave_complex_matrix, octave_sparse_matrix, 
+		      octave_complex_matrix)
+
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/OPERATORS/op-cs-scm.cc b/src/OPERATORS/op-cs-scm.cc
--- a/src/OPERATORS/op-cs-scm.cc
+++ b/src/OPERATORS/op-cs-scm.cc
@@ -164,17 +164,17 @@ install_cs_scm_ops (void)
   INSTALL_BINOP (op_el_and, octave_complex, octave_sparse_complex_matrix, 
 		 el_and);
   INSTALL_BINOP (op_el_or, octave_complex, octave_sparse_complex_matrix, 
 		 el_or);
 
   INSTALL_CATOP (octave_complex, octave_sparse_complex_matrix, cs_scm);
 
   INSTALL_ASSIGNCONV (octave_complex, octave_sparse_complex_matrix, 
-		      octave_sparse_complex_matrix);
+		      octave_complex_matrix);
 
   INSTALL_WIDENOP (octave_complex, octave_sparse_complex_matrix, 
 		   sparse_complex_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/OPERATORS/op-cs-sm.cc b/src/OPERATORS/op-cs-sm.cc
--- a/src/OPERATORS/op-cs-sm.cc
+++ b/src/OPERATORS/op-cs-sm.cc
@@ -162,17 +162,18 @@ install_cs_sm_ops (void)
   INSTALL_BINOP (op_el_div, octave_complex, octave_sparse_matrix, el_div);
   INSTALL_BINOP (op_el_pow, octave_complex, octave_sparse_matrix, el_pow);
   INSTALL_BINOP (op_el_ldiv, octave_complex, octave_sparse_matrix, el_ldiv);
   INSTALL_BINOP (op_el_and, octave_complex, octave_sparse_matrix, el_and);
   INSTALL_BINOP (op_el_or, octave_complex, octave_sparse_matrix, el_or);
 
   INSTALL_CATOP (octave_complex, octave_sparse_matrix, cs_sm);
 
-  INSTALL_ASSIGNCONV (octave_complex, octave_sparse_matrix, octave_sparse_matrix);
+  INSTALL_ASSIGNCONV (octave_complex, octave_sparse_matrix, 
+		      octave_complex_matrix);
 
   INSTALL_WIDENOP (octave_complex, octave_sparse_matrix, sparse_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/OPERATORS/op-m-scm.cc b/src/OPERATORS/op-m-scm.cc
--- a/src/OPERATORS/op-m-scm.cc
+++ b/src/OPERATORS/op-m-scm.cc
@@ -163,17 +163,17 @@ install_m_scm_ops (void)
   INSTALL_BINOP (op_el_and, octave_matrix, octave_sparse_complex_matrix, 
 		 el_and);
   INSTALL_BINOP (op_el_or, octave_matrix, octave_sparse_complex_matrix, 
 		 el_or);
 
   INSTALL_CATOP (octave_matrix, octave_sparse_complex_matrix, m_scm);
 
   INSTALL_ASSIGNCONV (octave_matrix, octave_sparse_complex_matrix, 
-		      octave_sparse_complex_matrix);
+		      octave_complex_matrix);
 
   INSTALL_WIDENOP (octave_matrix, octave_sparse_complex_matrix, 
 		   sparse_complex_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/OPERATORS/op-m-sm.cc b/src/OPERATORS/op-m-sm.cc
--- a/src/OPERATORS/op-m-sm.cc
+++ b/src/OPERATORS/op-m-sm.cc
@@ -124,16 +124,18 @@ DEFCATOP (m_sm, matrix, sparse_matrix)
 }
 
 DEFCONV (sparse_matrix_conv, matrix, sparse_matrix)
 {
   CAST_CONV_ARG (const octave_matrix&);
   return new octave_sparse_matrix (SparseMatrix (v.matrix_value ()));
 }
 
+DEFNDASSIGNOP_FN (assign, matrix, sparse_matrix, array, assign)
+
 void
 install_m_sm_ops (void)
 {
   INSTALL_BINOP (op_add, octave_matrix, octave_sparse_matrix, add);
   INSTALL_BINOP (op_sub, octave_matrix, octave_sparse_matrix, sub);
   INSTALL_BINOP (op_mul, octave_matrix, octave_sparse_matrix, mul);
   INSTALL_BINOP (op_div, octave_matrix, octave_sparse_matrix, div);
   INSTALL_BINOP (op_pow, octave_matrix, octave_sparse_matrix, pow);
@@ -148,18 +150,18 @@ install_m_sm_ops (void)
   INSTALL_BINOP (op_el_div, octave_matrix, octave_sparse_matrix, el_div);
   INSTALL_BINOP (op_el_pow, octave_matrix, octave_sparse_matrix, el_pow);
   INSTALL_BINOP (op_el_ldiv, octave_matrix, octave_sparse_matrix, el_ldiv);
   INSTALL_BINOP (op_el_and, octave_matrix, octave_sparse_matrix, el_and);
   INSTALL_BINOP (op_el_or, octave_matrix, octave_sparse_matrix,  el_or);
 
   INSTALL_CATOP (octave_matrix, octave_sparse_matrix, m_sm);
 
-  INSTALL_ASSIGNCONV (octave_matrix, octave_sparse_matrix, 
-		      octave_sparse_matrix);
+  INSTALL_ASSIGNOP (op_asn_eq, octave_matrix, octave_sparse_matrix, assign)
+  INSTALL_ASSIGNCONV (octave_matrix, octave_sparse_matrix, octave_matrix)
 
   INSTALL_WIDENOP (octave_matrix, octave_sparse_matrix, 
 		   sparse_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/OPERATORS/op-s-scm.cc b/src/OPERATORS/op-s-scm.cc
--- a/src/OPERATORS/op-s-scm.cc
+++ b/src/OPERATORS/op-s-scm.cc
@@ -174,17 +174,17 @@ install_s_scm_ops (void)
   INSTALL_BINOP (op_el_and, octave_scalar, octave_sparse_complex_matrix, 
 		 el_and);
   INSTALL_BINOP (op_el_or, octave_scalar, octave_sparse_complex_matrix, 
 		 el_or);
 
   INSTALL_CATOP (octave_scalar, octave_sparse_complex_matrix, s_scm);
 
   INSTALL_ASSIGNCONV (octave_scalar, octave_sparse_complex_matrix, 
-		      octave_sparse_complex_matrix);
+		      octave_complex_matrix);
 
   INSTALL_WIDENOP (octave_scalar, octave_sparse_complex_matrix, 
 		   sparse_complex_matrix_conv);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
