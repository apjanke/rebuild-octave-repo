# HG changeset patch
# User Rik <rik@octave.org>
# Date 1521495418 25200
#      Mon Mar 19 14:36:58 2018 -0700
# Branch stable
# Node ID 16155531bda4b01c659d00a37e24026eede565da
# Parent  996c30831e1a1c24e759de30e014867bb05401f9
maint: Don't use brackets around a single output variable in a function declaration.

* imwrite.m, edit.m, get_description.m: Remove brackets from output variable of
function.

diff --git a/scripts/image/imwrite.m b/scripts/image/imwrite.m
--- a/scripts/image/imwrite.m
+++ b/scripts/image/imwrite.m
@@ -204,17 +204,17 @@ endfunction
 %! [g] = write_and_read (".jpeg", gray);
 %! assert (g, gray, 2);
 
 %!testif HAVE_MAGICK
 %! gray = repmat (uint8 (0:255), 100, 1);
 %! [g] = write_and_read (".jpeg", gray, "quality", 100);
 %! assert (g, gray);
 
-%!function [compression] = get_bmp_compression (ext, cmap = [], varargin)
+%!function compression = get_bmp_compression (ext, cmap = [], varargin)
 %!  gray = repmat (uint8 (0:255), 100, 1);
 %!  filename = [tempname() ext];
 %!  unwind_protect
 %!    if (isempty (cmap))
 %!      imwrite (gray, filename, varargin{1:end});
 %!    else
 %!      imwrite (gray, cmap, filename, varargin{1:end});
 %!    endif
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -488,17 +488,17 @@ SUCH DAMAGE.\
                 code, "\n  return retval;\n}\n"];
 
         text = [comment, body];
       case "m"
         ## If we are editing a function defined on the fly, paste the code.
         if (any (exists == [2, 103]))
           body = type (name){1};
         else
-          body = ["function [retval] = " basename " (input1, input2)\n\n" ...
+          body = ["function retval = " basename " (input1, input2)\n\n" ...
                   "endfunction\n"];
         endif
         if (isempty (head))
           comment = ["## -*- texinfo -*-\n## @deftypefn {} " ...
                      "{@var{retval} =} " basename                          ...
                      " (@var{input1}, @var{input2})\n##\n"                 ...
                      "## @seealso{}\n## @end deftypefn\n\n"                ...
                      "## " strrep(tail, "\n", "\n## ") "\n\n"];
diff --git a/scripts/pkg/private/get_description.m b/scripts/pkg/private/get_description.m
--- a/scripts/pkg/private/get_description.m
+++ b/scripts/pkg/private/get_description.m
@@ -132,17 +132,17 @@ function deps_cell = fix_depends (depend
     else
       error ("incorrect syntax for dependency '%s' in the DESCRIPTION file\n",
              dep);
     endif
   endfor
 
 endfunction
 
-function [valid] = is_valid_pkg_version_string (str)
+function valid = is_valid_pkg_version_string (str)
   ## We are limiting ourselves to this set of characters because the
   ## version will appear on the filepath.  The portable character, according to
   ## http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_278
   ## is [A-Za-z0-9\.\_\-].  However, this is very limited.  We specially
   ## want to support a "+" so we can support "pkgname-2.1.0+" during
   ## development.  So we use Debian's character set for version strings
   ## https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version
   ## with the exception of ":" (colon) because that's the PATH separator.
