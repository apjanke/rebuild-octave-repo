# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1428171130 14400
#      Sat Apr 04 14:12:10 2015 -0400
# Node ID 230c1e2a678d4d4d2d008675a852f160618de1f6
# Parent  d209fbae38ae82b80bd07b69ddc193177b781af7
blackman, hamming, hanning: Simplify handling of periodic window option

* blackman.m, hamming.m, hanning.m: Simplify logic for handling periodic
or symmetric window option.

diff --git a/scripts/signal/blackman.m b/scripts/signal/blackman.m
--- a/scripts/signal/blackman.m
+++ b/scripts/signal/blackman.m
@@ -40,42 +40,36 @@ function c = blackman (m, opt)
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
   if (! (isscalar (m) && (m == fix (m)) && (m > 0)))
     error ("blackman: M must be a positive integer");
   endif
 
-  periodic = false;
+  N = m - 1;
   if (nargin == 2)
     switch (opt)
       case "periodic"
-        periodic = true;
+        N = m;
       case "symmetric"
         ## Default option, same as no option specified.
       otherwise
         error ('blackman: window type must be either "periodic" or "symmetric"');
     endswitch
   endif
 
   if (m == 1)
     c = 1;
   else
-    if (! periodic)
-      m = m - 1;
-    endif
-    k = (0 : m)' / m;
+    m = m - 1;
+    k = (0 : m)' / N;
     c = 0.42 - 0.5 * cos (2 * pi * k) + 0.08 * cos (4 * pi * k);
   endif
 
-  if (periodic)
-    c = c(1:end-1);
-  endif
-
 endfunction
 
 
 %!assert (blackman (1), 1)
 %!assert (blackman (2), zeros (2,1), 1e-6)
 %!assert (blackman (15), flip (blackman (15)), 5*eps)
 %!assert (blackman (16), flip (blackman (16)), 5*eps)
 %!test
diff --git a/scripts/signal/hamming.m b/scripts/signal/hamming.m
--- a/scripts/signal/hamming.m
+++ b/scripts/signal/hamming.m
@@ -40,39 +40,33 @@ function c = hamming (m, opt)
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
   if (! (isscalar (m) && (m == fix (m)) && (m > 0)))
     error ("hamming: M must be a positive integer");
   endif
 
-  periodic = false;
+  N = m - 1;
   if (nargin == 2)
     switch (opt)
       case "periodic"
-        periodic = true;
+        N = m;
       case "symmetric"
         ## Default option, same as no option specified.
       otherwise
         error ('hamming: window type must be either "periodic" or "symmetric"');
     endswitch
   endif
 
   if (m == 1)
     c = 1;
   else
-    if (! periodic)
-      m = m - 1;
-    endif
-    c = 0.54 - 0.46 * cos (2 * pi * (0:m)' / m);
-  endif
-
-  if (periodic)
-    c = c(1:end-1);
+    m = m - 1;
+    c = 0.54 - 0.46 * cos (2 * pi * (0 : m)' / N);
   endif
 
 endfunction
 
 
 %!assert (hamming (1), 1)
 %!assert (hamming (2), (0.54 - 0.46)*ones (2,1))
 %!assert (hamming (15), flip (hamming (15)), 5*eps)
diff --git a/scripts/signal/hanning.m b/scripts/signal/hanning.m
--- a/scripts/signal/hanning.m
+++ b/scripts/signal/hanning.m
@@ -40,39 +40,33 @@ function c = hanning (m, opt)
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
   if (! (isscalar (m) && (m == fix (m)) && (m > 0)))
     error ("hanning: M must be a positive integer");
   endif
 
-  periodic = false;
+  N = m - 1;
   if (nargin == 2)
     switch (opt)
       case "periodic"
-        periodic = true;
+        N = m;
       case "symmetric"
         ## Default option, same as no option specified.
       otherwise
         error ('hanning: window type must be either "periodic" or "symmetric"');
     endswitch
   endif
 
   if (m == 1)
     c = 1;
   else
-    if (! periodic)
-      m = m - 1;
-    endif
-    c = 0.5 - 0.5 * cos (2 * pi * (0 : m)' / m);
-  endif
-
-  if (periodic)
-    c = c(1:end-1);
+    m = m - 1;
+    c = 0.5 - 0.5 * cos (2 * pi * (0 : m)' / N);
   endif
 
 endfunction
 
 
 %!assert (hanning (1), 1);
 %!assert (hanning (2), zeros (2,1));
 %!assert (hanning (15), flip (hanning (15)), 5*eps);
