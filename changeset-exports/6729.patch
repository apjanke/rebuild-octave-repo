# HG changeset patch
# User dbateman
# Date 1181860436 0
#      Thu Jun 14 22:33:56 2007 +0000
# Node ID 9b4c16beea1c3685871430630b9a034352151d8e
# Parent  a25173d58101f719542de263c7e771feed2fb4eb
[project @ 2007-06-14 22:33:56 by dbateman]

diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -210,17 +210,17 @@ function [local_packages, global_package
 	auto = -1;
       case "-auto"
 	auto = 1;
       case "-verbose"
 	verbose = true;
       case "-local"
 	global_install = false;
 	if (! user_prefix)
-	  prefix = fullfile ("~", "octave");
+	  prefix = tilde_expand (fullfile ("~", "octave"));
 	endif
       case "-global"
 	global_install = true;
 	if (! user_prefix)
 	  prefix = fullfile (OCTAVE_HOME (), "share", "octave", "packages");
 	endif
       case {"list", "install", "uninstall", "load", "unload", ...
 	    "prefix", "local_list", "global_list", "rebuild", "build"}
@@ -292,28 +292,40 @@ function [local_packages, global_package
       endif
 
     case "local_list"
       if (length (files) == 0 && nargout == 0)
 	disp (local_list);
       elseif (length (files) == 0 && nargout == 1)
 	local_packages = local_list;
       elseif (length (files) == 1 && nargout == 0 && ischar (files{1}))
-	local_list = absolute_pathname (files{1});
+	try
+	  local_list = absolute_pathname (files{1});
+	catch
+	  ## Force file to be created
+	  fclose (fopen (files{1}, 'wt'));
+	  local_list = absolute_pathname (files{1});
+	end_try_catch
       else
 	error ("you must specify a local_list file, or request an output argument");
       endif
 
     case "global_list"
       if (length (files) == 0 && nargout == 0)
 	disp(global_list);
       elseif (length (files) == 0 && nargout == 1)
 	local_packages = global_list;
       elseif (length (files) == 1 && nargout == 0 && ischar (files{1}))
-	global_list = absolute_pathname (files{1});
+	try
+	  global_list = absolute_pathname (files{1});
+	catch
+	  ## Force file to be created
+	  fclose (fopen (files{1}, 'wt'));
+	  global_list = absolute_pathname (files{1});
+	end_try_catch
       else
 	error ("you must specify a global_list file, or request an output argument");
       endif
 
     case "rebuild"
       if (global_install)
 	global_packages = rebuild (prefix, global_list, files, auto, verbose);
 	global_packages = save_order (global_packages);
@@ -848,17 +860,21 @@ function uninstall (pkgnames, handle_dep
 endfunction
 
 ##########################################################
 ##        A U X I L I A R Y    F U N C T I O N S        ##
 ##########################################################
 
 function pth = absolute_pathname (pth)
   [status, msg, msgid] = fileattrib(pth);
-  pth = msg.Name;
+  if (status != 1)
+    error ("could not find the file or path %s", pth);
+  else
+    pth = msg.Name;
+  endif
 endfunction
 
 function repackage (builddir, buildlist)
   packages = installed_packages (buildlist, buildlist);
 
   wd = pwd();
   for i = 1 : length(packages)
     pack = packages{i};
