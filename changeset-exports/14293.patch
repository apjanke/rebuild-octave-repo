# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1327982761 18000
#      Mon Jan 30 23:06:01 2012 -0500
# Node ID 71a198cca35b820354b85e77eaf0eb64ae5e590a
# Parent  d1810b2ca809970a2596d07d4e3bdefbfa0675e9
improve parsing of classdef methods

* oct-parse.yy (fcn_name):
also set lexer_flags.parsed_function_name.top() to true when
recognizing classdef set.PROPERTY or get.PROPERTY methods.
(parse_fcn_file): Also set reading_script_file to true when reading
classdef files.

diff --git a/doc/interpreter/grammar.txi b/doc/interpreter/grammar.txi
--- a/doc/interpreter/grammar.txi
+++ b/doc/interpreter/grammar.txi
@@ -41,22 +41,22 @@ or function names:
 @item @code{case} @tab @code{catch} @tab @code{classdef}
 @item @code{continue} @tab @code{do} @tab @code{else}
 @item @code{elseif} @tab @code{end} @tab @code{end_try_catch}
 @item @code{end_unwind_protect} @tab @code{endclassdef} @tab @code{endenumeration}
 @item @code{endevents} @tab @code{endfor} @tab @code{endfunction}
 @item @code{endif} @tab @code{endmethods} @tab @code{endparfor}
 @item @code{endproperties} @tab @code{endswitch} @tab @code{endwhile}
 @item @code{enumeration} @tab @code{events} @tab @code{for}
-@item @code{function} @tab @code{get} @tab @code{global}
-@item @code{if} @tab @code{methods} @tab @code{otherwise}
-@item @code{parfor} @tab @code{persistent} @tab @code{properties}
-@item @code{return} @tab @code{set} @tab @code{static}
-@item @code{switch} @tab @code{try} @tab @code{until}
-@item @code{unwind_protect} @tab @code{unwind_protect_cleanup} @tab @code{while}
+@item @code{function} @tab @code{global} @tab @code{if}
+@item @code{methods} @tab @code{otherwise} @tab @code{parfor}
+@item @code{persistent} @tab @code{properties} @tab @code{return}
+@item @code{static} @tab @code{switch} @tab @code{try}
+@item @code{until} @tab @code{unwind_protect} @tab @code{unwind_protect_cleanup}
+@item @code{while}
 @end multitable
 
 The function @code{iskeyword} can be used to quickly check whether an
 identifier is reserved by Octave.
 
 @DOCSTRING(iskeyword)
 
 @node Parser
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -1390,21 +1390,23 @@ fcn_name        : identifier
 
                     lexer_flags.parsed_function_name.top () = true;
                     lexer_flags.maybe_classdef_get_set_method = false;
 
                     $$ = $1;
                   }
                 | GET '.' identifier
                   {
+                    lexer_flags.parsed_function_name.top () = true;
                     lexer_flags.maybe_classdef_get_set_method = false;
                     $$ = $3;
                   }
                 | SET '.' identifier
                   {
+                    lexer_flags.parsed_function_name.top () = true;
                     lexer_flags.maybe_classdef_get_set_method = false;
                     $$ = $3;
                   }
                 ;
 
 function1       : fcn_name function2
                   {
                     std::string fname = $1->name ();
@@ -3510,17 +3512,21 @@ parse_fcn_file (const std::string& ff, c
           else if (! force_script && looking_at_classdef_keyword (ffile))
             {
               file_type = "classdef";
 
               Vecho_executing_commands = ECHO_OFF;
 
               reading_classdef_file = true;
               reading_fcn_file = false;
-              reading_script_file = false;
+              // FIXME -- Should classdef files be handled as
+              // scripts or separately?  Currently, without setting up
+              // for reading script files, parsing classdef files
+              // fails.
+              reading_script_file = true;
             }
           else
             {
               file_type = "script";
 
               Vecho_executing_commands = ECHO_OFF;
 
               reading_classdef_file = false;
