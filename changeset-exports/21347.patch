# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1456421826 28800
#      Thu Feb 25 09:37:06 2016 -0800
# Node ID 2f9de06a526e4ca5b54437f057a960bba4e7e991
# Parent  afc3108f13fe9e189ae10c9d66051b1dbee26f2d
maint: Clean up calls to run-octave in build system

* doc/interpreter/images.awk, doc/module.mk: Call run-octave with $(SHELL) as
command interpreter.  Remove unnecessary directory prefix and use long options
for consistency.

* scripts/module.mk (check-missing-semicolon): Call run-octave with $(SHELL) as
command interpreter.  Fix relative path and apply standard options.

* test/module.mk (check, check-jit): Call run-octave with $(SHELL) as command
interpreter.

diff --git a/doc/interpreter/images.awk b/doc/interpreter/images.awk
--- a/doc/interpreter/images.awk
+++ b/doc/interpreter/images.awk
@@ -24,16 +24,16 @@ BEGIN {
     for (j = 2; j <= NF; j++)
       printf (" %s%s.%s", dir, $j, ext);
     printf ("\n");
 
     printf ("BUILT_DOC_IMAGES_%s += $(%s_%s)\n", uext, ubasename, uext);
 
     for (j = 2; j <= NF; j++) {
       printf ("%s%s.%s: %s%s\n", dir, $j, ext, dir, script);
-      printf ("\t$(AM_V_GEN)$(abs_top_builddir)/run-octave -f -q -H -p $(abs_top_srcdir)/%s --eval \"%s ('%s', '%s', '%s');\"\n",
+      printf ("\t$(AM_V_GEN)$(SHELL) run-octave --norc --silent --no-history --path $(abs_top_srcdir)/%s --eval \"%s ('%s', '%s', '%s');\"\n",
               dir, basename, dir, $j, ext);
     }
   }
 }
 END {
   print "endif";
 }
diff --git a/doc/module.mk b/doc/module.mk
--- a/doc/module.mk
+++ b/doc/module.mk
@@ -76,17 +76,17 @@ GRAPH_PROP_TEXI_SRC = \
   doc/interpreter/plot-uitoolbarproperties.texi \
   doc/interpreter/plot-uipushtoolproperties.texi \
   doc/interpreter/plot-uitoggletoolproperties.texi
 
 $(GRAPH_PROP_TEXI_SRC): | $(OCTAVE_INTERPRETER_TARGETS)
 
 define gen-propdoc-texi
   rm -f $@-t $@ && \
-  $(top_builddir)/run-octave -f -q -H -p $(srcdir)/doc/interpreter --eval "genpropdoc ('$(1)');" > $@-t && \
+  $(SHELL) run-octave --norc --silent --no-history --path $(srcdir)/doc/interpreter --eval "genpropdoc ('$(1)');" > $@-t && \
   mv $@-t $@
 endef
 
 doc/interpreter/plot-axesproperties.texi: doc/interpreter/genpropdoc.m
 	$(AM_V_GEN)$(call gen-propdoc-texi,axes)
 
 doc/interpreter/plot-figureproperties.texi: doc/interpreter/genpropdoc.m
 	$(AM_V_GEN)$(call gen-propdoc-texi,figure)
@@ -350,17 +350,17 @@ doc-interpreter-dist-hook:
 	@$(GREP) '#define HAVE_QHULL 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing QHULL library.  Cannot package distribution!" ; exit 1; }
 
 octetc_DATA += \
   doc/interpreter/doc-cache \
   doc/interpreter/macros.texi
 
 doc/interpreter/doc-cache: $(DOCSTRING_FILES) doc/interpreter/mk_doc_cache.m | $(OCTAVE_INTERPRETER_TARGETS) doc/interpreter/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t $@ && \
-	$(top_builddir)/run-octave -f -q -H $(srcdir)/doc/interpreter/mk_doc_cache.m - $(srcdir)/doc/interpreter/macros.texi $(DOCSTRING_FILES) > $@-t && \
+	$(SHELL) run-octave --norc --silent --no-history $(srcdir)/doc/interpreter/mk_doc_cache.m - $(srcdir)/doc/interpreter/macros.texi $(DOCSTRING_FILES) > $@-t && \
 	mv $@-t $@
 
 $(MUNGED_TEXI_SRC): $(DOCSTRING_FILES)
 
 ## These two texi files have an additional dependency through the
 ## @EXAMPLEFILE macro.
 doc/interpreter/oop.texi: $(examples_code_SRC)
 doc/interpreter/external.texi: $(examples_code_SRC)
diff --git a/scripts/module.mk b/scripts/module.mk
--- a/scripts/module.mk
+++ b/scripts/module.mk
@@ -147,17 +147,17 @@ check-m-sources:
 	fi
 .PHONY: check-m-sources
 
 check-missing-semicolon:
 	@echo "checking for missing semicolons in .m files..."
 	( echo "warning on Octave:missing-semicolon;"; \
 	  for m in $(addprefix $(srcdir), $(FCN_FILES)) $(GEN_FCN_FILES); do \
 	    echo "source ('$$m');"; \
-	  done ) | ../run-octave -qf
+	  done ) | $(SHELL) run-octave --norc --silent --no-history
 .PHONY: check-missing-semicolon
 
 ## Add rule to generate ctags.
 ## Automake would normally generate such a rule, but only if there is a
 ## xxx_SOURCES target
 ctags:
 	ctags $(addprefix $(srcdir)/, $(FCN_FILES)) $(GEN_FCN_FILES)
 
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -53,21 +53,21 @@ include test/fcn-handle-derived-resoluti
 include test/nest/module.mk
 
 ALL_LOCAL_TARGETS += test/.gdbinit
 
 test/.gdbinit: etc/gdbinit
 	@$(gdbinit_install_rule)
 
 check-local: $(GENERATED_TEST_FILES) | $(OCTAVE_INTERPRETER_TARGETS) test/$(octave_dirstamp)
-	cd test && ../run-octave $(RUN_OCTAVE_OPTIONS) --norc --silent --no-history $(abs_top_srcdir)/test/fntests.m $(abs_top_srcdir)/test
+	cd test && $(SHELL) ../run-octave $(RUN_OCTAVE_OPTIONS) --norc --silent --no-history $(abs_top_srcdir)/test/fntests.m $(abs_top_srcdir)/test
 
 if AMCOND_HAVE_LLVM
 check-jit: $(GENERATED_TEST_FILES) | $(OCTAVE_INTERPRETER_TARGETS) test/$(octave_dirstamp)
-	cd test && ../run-octave $(RUN_OCTAVE_OPTIONS) --jit-compiler --norc --silent --no-history $(abs_top_srcdir)/test/fntests.m $(abs_top_srcdir)/test
+	cd test && $(SHELL) ../run-octave $(RUN_OCTAVE_OPTIONS) --jit-compiler --norc --silent --no-history $(abs_top_srcdir)/test/fntests.m $(abs_top_srcdir)/test
 endif
 
 test/sparse.tst: test/build-sparse-tests.sh | test/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t $@ && \
 	$(SHELL) $(srcdir)/test/build-sparse-tests.sh > $@-t && \
 	mv $@-t $@
 
 GENERATED_BC_OVERLOADS_DIRS := \
