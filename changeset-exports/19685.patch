# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1423515962 18000
#      Mon Feb 09 16:06:02 2015 -0500
# Node ID 7335cc071ab034a6a2b979dd73795b91831cba20
# Parent  2b93834e5ede3a37c55023382f1b998722902886
make save and saveas menu items work in Qt figure window

See also bug #44177.

* Figure.h, Figure.cc (Figure::fileName, Figure::setFileName,
Figure::save_figure_callback): New functions.
(Figure::createFigureToolBarAndMenuBar): Enable Save and "Save As"
items and connect them to new fileSaveFigure and fileSaveFigureAS
functions.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -24,32 +24,38 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include <QAction>
 #include <QActionEvent>
 #include <QActionGroup>
 #include <QApplication>
 #include <QEvent>
+#include <QFileDialog>
+#include <QFileInfo>
 #include <QFrame>
 #include <QMainWindow>
 #include <QMenu>
 #include <QMenuBar>
 #include <QMessageBox>
 #include <QtDebug>
 #include <QTimer>
 #include <QToolBar>
 
 #include "Canvas.h"
 #include "Container.h"
 #include "Figure.h"
 #include "FigureWindow.h"
 #include "MouseModeActionGroup.h"
 #include "QtHandlesUtils.h"
 
+#include "octave-qt-link.h"
+
+#include "builtin-defun-decls.h"
+
 namespace QtHandles
 {
 
 #define ABOUT_TEXT "<b>QtHandles</b> - a Qt-based toolkit for <a href=\"http://www.octave.org\">Octave</a>.<br><br>Copyright (C) 2011-2014 Michael Goffioul"
 
 DECLARE_GENERICEVENTNOTIFY_SENDER(MenuBar, QMenuBar);
 
 static bool hasUiControlChildren (const figure::properties& fp)
@@ -205,16 +211,36 @@ static MouseMode mouse_mode_from_string 
   else if (mode == "text")
     return TextMode;
   else if (mode == "select")
     return SelectMode;
   else
     return NoMode;
 }
 
+QString Figure::fileName (void)
+{
+  gh_manager::auto_lock lock;
+
+  const figure::properties& fp = properties<figure> ();
+
+  std::string name = fp.get_filename ();
+
+  return QString::fromStdString (name);
+}
+
+void Figure::setFileName (const QString& name)
+{
+  gh_manager::auto_lock lock;
+
+  figure::properties& fp = properties<figure> ();
+
+  fp.set_filename (name.toStdString ());
+}
+
 MouseMode Figure::mouseMode (void)
 {
   gh_manager::auto_lock lock;
 
   const figure::properties& fp = properties<figure> ();
 
   std::string mode = fp.get___mouse_mode__ ();
 
@@ -245,18 +271,18 @@ void Figure::createFigureToolBarAndMenuB
   m_menuBar = new MenuBar (win);
   win->setMenuBar (m_menuBar);
 
   QMenu* fileMenu = m_menuBar->addMenu (tr ("&File"));
   fileMenu->menuAction ()->setObjectName ("builtinMenu");
   fileMenu->addAction (tr ("&New Figure"), this, SLOT (fileNewFigure (void)));
   fileMenu->addAction (tr ("&Open..."))->setEnabled (false);
   fileMenu->addSeparator ();
-  fileMenu->addAction (tr ("&Save"))->setEnabled (false);
-  fileMenu->addAction (tr ("Save &As"))->setEnabled (false);
+  fileMenu->addAction (tr ("&Save"), this, SLOT (fileSaveFigure (bool)));
+  fileMenu->addAction (tr ("Save &As"), this, SLOT (fileSaveFigureAs (void)));
   fileMenu->addSeparator ();
   fileMenu->addAction (tr ("&Close Figure"), this,
                        SLOT (fileCloseFigure (void)), Qt::CTRL|Qt::Key_W);
 
   QMenu* editMenu = m_menuBar->addMenu (tr ("&Edit"));
   editMenu->menuAction ()->setObjectName ("builtinMenu");
   editMenu->addAction (tr ("Cop&y"), this, SLOT (editCopy (void)),
                        Qt::CTRL|Qt::Key_C)->setEnabled (false);
@@ -694,16 +720,58 @@ void Figure::setMouseMode (MouseMode mod
   if (canvas)
     canvas->setCursor (mode);
 }
 
 void Figure::fileNewFigure (void)
 {
 }
 
+void Figure::fileSaveFigure (bool prompt)
+{
+  QString file = fileName ();
+
+  if (file.isEmpty ())
+    {
+      prompt = true;
+
+      file = "untitled.eps";
+    }
+
+  if (prompt || file.isEmpty ())
+    {
+      QFileInfo finfo (file);
+
+      file = QFileDialog::getSaveFileName (qWidget<FigureWindow> (),
+                                           tr ("Save Figure As"),
+                                           finfo.absoluteFilePath (), 0, 0,
+                                           QFileDialog::DontUseNativeDialog);
+    }
+
+  if (! file.isEmpty ())
+    {
+      QFileInfo finfo (file);
+
+      setFileName (finfo.absoluteFilePath ());
+
+      octave_link::post_event (this, &Figure::save_figure_callback,
+                               file.toStdString ());
+    }
+}
+
+void Figure::save_figure_callback (const std::string& file)
+{
+  Ffeval (ovl ("print", file));
+}
+  
+void Figure::fileSaveFigureAs (void)
+{
+  fileSaveFigure (true);
+}
+
 void Figure::fileCloseFigure (void)
 {
   qWidget<QMainWindow> ()->close ();
 }
 
 void Figure::editCopy (void)
 {
 }
diff --git a/libgui/graphics/Figure.h b/libgui/graphics/Figure.h
--- a/libgui/graphics/Figure.h
+++ b/libgui/graphics/Figure.h
@@ -65,16 +65,19 @@ class Figure :
   friend class ToolBar;
 
 public:
   Figure (const graphics_object& go, FigureWindow* win);
   ~Figure (void);
 
   static Figure* create (const graphics_object& go);
 
+  QString fileName (void);
+  void setFileName (const QString& name);
+
   MouseMode mouseMode (void);
 
   Container* innerContainer (void);
   QWidget* menu (void);
 
   bool eventNotifyBefore (QObject* watched, QEvent* event);
   void eventNotifyAfter (QObject* watched, QEvent* event);
 
@@ -99,19 +102,23 @@ private:
   void showMenuBar (bool visible);
   void addCustomToolBar (QToolBar* bar, bool visible);
   void showCustomToolBar (QToolBar* bar, bool visible);
 
   void updateFigureToolBarAndMenuBar (void);
 
   static void updateBoundingBoxHelper (void*);
 
+  void save_figure_callback (const std::string& file);
+
 private slots:
   void setMouseMode (MouseMode mode);
   void fileNewFigure (void);
+  void fileSaveFigure (bool prompt = false);
+  void fileSaveFigureAs (void);
   void fileCloseFigure (void);
   void editCopy (void);
   void editCut (void);
   void editPaste (void);
   void helpAboutQtHandles (void);
   void updateMenuBar (void);
   void updateContainer (void);
   void toggleAxes (void);
diff --git a/libgui/graphics/module.mk b/libgui/graphics/module.mk
--- a/libgui/graphics/module.mk
+++ b/libgui/graphics/module.mk
@@ -111,16 +111,17 @@ nodist_graphics_libgui_graphics_la_SOURC
 graphics_libgui_graphics_la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
   $(FT2_CPPFLAGS) \
   $(FONTCONFIG_CPPFLAGS) \
   $(HDF5_CPPFLAGS) \
   @OCTGUI_DLL_DEFS@ \
   @QT_CPPFLAGS@ \
   -Igraphics -I$(srcdir)/graphics \
+  -Isrc -I$(srcdir)/src \
   -I$(top_srcdir)/liboctave/cruft/misc \
   -I$(top_srcdir)/liboctave/array \
   -I$(top_builddir)/liboctave/numeric -I$(top_srcdir)/liboctave/numeric \
   -I$(top_builddir)/liboctave/operators -I$(top_srcdir)/liboctave/operators \
   -I$(top_srcdir)/liboctave/system \
   -I$(top_srcdir)/liboctave/util \
   -I$(top_builddir)/libinterp -I$(top_srcdir)/libinterp \
   -I$(top_builddir)/libinterp/parse-tree -I$(top_srcdir)/libinterp/parse-tree \
