# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1272316464 -7200
#      Mon Apr 26 23:14:24 2010 +0200
# Node ID 384c514bbae22359f11378c23c069e94f88c94fe
# Parent  3eba2cc7cbda587c2f76afca134c90275b22ba6a
Allow setting of the markers in errorbar linestyles

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,17 +1,18 @@
 2010-04-26  David Bateman  <dbateman@free.fr>
 
 	* plot/bar.m: Document the use of the colormap for the color of
 	the bars.
 
 	* plot/private/__errplot__.m: Allow x, box and xy errorbars with
 	different syntax.
 
-	* plot/private/__errplot__.m: Allow matlab style linestyles,
+	* plot/private/__errplot__.m: Allow matlab style linestyles, and
+	support setting the markers.
 
 2010-04-24  David Bateman  <dbateman@free.fr>
 
 	* plot/private/__patch__.m: Correct order of calling setdata and
 	setvertexdata.
 
 2010-04-25  Ben Abbott <bpabbot@mac.com>
 
diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -51,30 +51,36 @@ function h = __errplot__ (fstr, p, a1, a
     elseif (strcmp (fmt.linestyle, "#~"))
       ifmt = "boxy";
     elseif (strcmp (fmt.linestyle, "#~>"))
       ifmt = "boxxy";
     else
       ifmt = "matlab";
     endif
 
+    if (! isempty (fmt.marker) && ! strcmp (fmt.marker, "none"))
+      mrk = fmt.marker;
+    else
+      mrk = "none";
+    endif
+
     hg = hggroup ("parent", p);
     h = [h; hg];
     args = __add_datasource__ ("__errplot__", hg, 
                                {"x", "y", "l", "u", "xl", "xu"});
 
     if (isempty (fmt.color))
-      hl = __line__ (hg, "color", __next_line_color__ ());
+      hl = __line__ (hg, "color", __next_line_color__ (), "marker", mrk);
     else
-      hl = __line__ (hg, "color", fmt.color);
+      hl = __line__ (hg, "color", fmt.color, "marker", mrk);
     endif
 
     if (index (ifmt, "matlab"))
       ifmt = "yerr";
-      if (! strcmp (fmt.linestyle, "none"))
+      if (! isempty (fmt.linestyle) && ! strcmp (fmt.linestyle, "none"))
         set (hl, "linestyle", fmt.linestyle);
       endif
     endif
 
     ## FIXME -- note the code below adds the errorbar data directly as
     ## ldata, etc properties of the line objects, as gnuplot can handle
     ## this.  Matlab has the errorbar part of the plot as a special line
     ## object with embedded NaNs that draws the three segments of the
@@ -160,17 +166,17 @@ function h = __errplot__ (fstr, p, a1, a
     addlistener (hg, "xldata", @update_data);
     addlistener (hg, "xudata", @update_data);
 
     __line__ (hg, "xdata", get (hl, "xdata"), 
               "ydata", get (hl, "ydata"), 
               "color", get (hl, "color"),
               "linewidth", get (hl, "linewidth"),
               "linestyle", get (hl, "linestyle"), 
-              "marker", "none", "parent", hg);
+              "marker", mrk, "parent", hg);
   endfor
 
 endfunction
 
 function update_props (h, d)
   set (get (h, "children"), "color", get (h, "color"), 
        "linewidth", get (h, "linewidth"), "linestyle", get (h, "linestyle"), 
        "marker", get (h, "marker"), "markersize", get (h, "markersize"),
