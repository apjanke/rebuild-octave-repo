# HG changeset patch
# User Rik <rik@octave.org>
# Date 1466629526 25200
#      Wed Jun 22 14:05:26 2016 -0700
# Node ID d31e0f704d0ba3289bd97cf4798d66689ba259c3
# Parent  eb68218e743a60d3e2dfc2d7f4f715558190f478
Open files in binary mode when testing file format (bug #48201).

* load-save.cc (check_gzip_magic, get_file_format): Open
ifstream in binary mode.

diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -209,17 +209,18 @@ read_binary_file_header (std::istream& i
   return 0;
 }
 
 #if defined (HAVE_ZLIB)
 static bool
 check_gzip_magic (const std::string& fname)
 {
   bool retval = false;
-  std::ifstream file (fname.c_str ());
+
+  std::ifstream file (fname.c_str (), std::ios::in | std::ios::binary);
   OCTAVE_LOCAL_BUFFER (unsigned char, magic, 2);
 
   if (file.read (reinterpret_cast<char *> (magic), 2) && magic[0] == 0x1f
       && magic[1] == 0x8b)
     retval = true;
 
   file.close ();
   return retval;
@@ -308,29 +309,29 @@ get_file_format (const std::string& fnam
 #if defined (HAVE_ZLIB)
   use_zlib = check_gzip_magic (fname);
 #else
   use_zlib = false;
 #endif
 
   if (! use_zlib)
     {
-      std::ifstream file (fname.c_str ());
+      std::ifstream file (fname.c_str (), std::ios::in | std::ios::binary);
       if (file)
         {
           retval = get_file_format (file, orig_fname);
           file.close ();
         }
       else if (! quiet)
         err_file_open ("load", orig_fname);
     }
 #if defined (HAVE_ZLIB)
   else
     {
-      gzifstream gzfile (fname.c_str ());
+      gzifstream gzfile (fname.c_str (), std::ios::in | std::ios::binary);
       if (gzfile)
         {
           retval = get_file_format (gzfile, orig_fname);
           gzfile.close ();
         }
       else if (! quiet)
         err_file_open ("load", orig_fname);
     }
