# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438613008 25200
#      Mon Aug 03 07:43:28 2015 -0700
# Node ID 6dc15d4cc17e58647989fe5814727c53e8318e21
# Parent  6cfbf412a2c3d919d50357d96d24eac7b25d5645
Backout cset 2edd668e7784 and return column orientation for union.m.

* union.m: Backout cset 2edd668e7784.

diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -46,17 +46,17 @@ function [y, ia, ib] = union (a, b, vara
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("union", a, b, varargin{:});
 
   by_rows = nargin == 3;
-  isrowvec = (isrow (a) || isempty (a)) && (isrow (b) || isempty (b));
+  isrowvec = isvector (a) && isvector (b) && isrow (a) && isrow (b);
 
   if (by_rows)
     y = [a; b];
   else
     y = [a(:); b(:)];
     ## Adjust output orientation for Matlab compatibility
     if (isrowvec)
       y = y.';
@@ -89,22 +89,17 @@ endfunction
 
 %!test
 %! a = [3, 1, 4, 1, 5];
 %! b = [1, 2, 3, 4];
 %! [y, ia, ib] = union (a, b.');
 %! assert (y, [1; 2; 3; 4; 5]);
 %! assert (y, sort ([a(ia)'; b(ib)']));
 
-## Test format when input is empty
-%!assert (union ([],[1,2]), [1,2])
-%!assert (union ([1,2],[]), [1,2])
-%!assert (union ([],[1;2]), [1;2])
-%!assert (union ([1;2],[]), [1;2])
-
 ## Test common input validation for set routines contained in validsetargs
 %!error <cell array of strings cannot be combined> union ({"a"}, 1)
 %!error <A and B must be arrays or cell arrays> union (@sin, 1)
 %!error <invalid option: columns> union (1, 2, "columns")
 %!error <cells not supported with "rows"> union ({"a"}, {"b"}, "rows")
 %!error <A and B must be arrays or cell arrays> union (@sin, 1, "rows")
 %!error <A and B must be 2-dimensional matrices> union (rand(2,2,2), 1, "rows")
 %!error <number of columns in A and B must match> union ([1 2], 1, "rows")
+
