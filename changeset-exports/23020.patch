# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1483832390 18000
#      Sat Jan 07 18:39:50 2017 -0500
# Node ID 1dfbdd593c5babd17b27238d4f09fede8c751fac
# Parent  cb09392b5b1c5e6df4509ee51150b6416387053b
also read oct-conf-post.h for build environment info

* build-env-features.sh: Handle multiple input files.  Accept space
between '#' and 'define' when searching for feature macros.
* libinterp/module.mk (libinterp/build-env-features.cc): Also depend
on oct-conf-post.h and pass both config.h and oct-conf-post.h to the
build-env-features.sh script.

diff --git a/libinterp/build-env-features.sh b/libinterp/build-env-features.sh
--- a/libinterp/build-env-features.sh
+++ b/libinterp/build-env-features.sh
@@ -21,18 +21,16 @@
 ## Attempt to get traditional sort behavior based on byte values.
 LC_ALL=C
 export LC_ALL
 
 set -e
 
 AWK=${AWK:-awk}
 
-conffile=$1
-
 cat << EOF
 // DO NOT EDIT!  Generated automatically from $conffile by Make."
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "build-env.h"
@@ -51,26 +49,29 @@ namespace octave
 
       if (! initialized)
         {
           static octave_value ov_true = (true);
           static octave_value ov_false = (false);
 
 EOF
 
-$AWK \
-  '/#define (OCTAVE_HAVE|HAVE)_/ {
-     sub (/(OCTAVE_HAVE|HAVE)_/, "", $2);
-     printf ("          m.assign (\"%s\", ov_true);\n", $2);
-   }
-   /\/\* #undef (OCTAVE_HAVE|HAVE)_/ {
-     sub (/(OCTAVE_HAVE|HAVE)_/, "", $3);
-     printf ("          m.assign (\"%s\", ov_false);\n", $3);
-   } {
-   }' $conffile | sort
+for conffile in "$@"; do
+  $AWK \
+    '/# *define *(OCTAVE_HAVE|HAVE)_/ {
+       sub (/# *define */, "", $0);
+       sub (/(OCTAVE_HAVE|HAVE)_/, "", $1)
+       printf ("          m.assign (\"%s\", ov_true);\n", $1);
+     }
+     /\/\* #undef (OCTAVE_HAVE|HAVE)_/ {
+       sub (/(OCTAVE_HAVE|HAVE)_/, "", $3);
+       printf ("          m.assign (\"%s\", ov_false);\n", $3);
+     } {
+     }' $conffile
+done | sort
 
 cat << EOF
 
           initialized = true;
         }
 
       return m;
     }
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -232,19 +232,19 @@ nobase_libinterptests_DATA = $(LIBINTERP
 	$(call move_if_change_rule,$*.cc-t,$*.cc)
 
 ## Special rules:
 ## Mostly for sources which must be built before rest of compilation.
 
 libinterp/build-env.cc: libinterp/build-env.in.cc build-aux/subst-config-vals.sh | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/subst-config-vals.sh)
 
-libinterp/build-env-features.cc: config.h libinterp/build-env-features.sh | libinterp/$(octave_dirstamp)
+libinterp/build-env-features.cc: config.h oct-conf-post.h libinterp/build-env-features.sh | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
-	$(SHELL) $(srcdir)/libinterp/build-env-features.sh $< > $@-t && \
+	$(SHELL) $(srcdir)/libinterp/build-env-features.sh config.h oct-conf-post.h > $@-t && \
 	mv $@-t $@
 
 libinterp/version.h: libinterp/version.in.h build-aux/mk-version-h.sh | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/mk-version-h.sh)
 
 libinterp/liboctinterp-build-info.cc: libinterp/liboctinterp-build-info.in.cc HG-ID | libinterp/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SED) \
