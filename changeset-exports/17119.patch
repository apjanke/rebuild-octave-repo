# HG changeset patch
# User Rik <rik@octave.org>
# Date 1375302661 25200
#      Wed Jul 31 13:31:01 2013 -0700
# Node ID bd50e06605453a671df31e2f7b85bddbd24a0819
# Parent  c97a26408ee0caee4359b99fb7467d911dadb369
test: Add missing semicolons to suppress output in some plot %!tests.

* scripts/plot/allchild.m, scripts/plot/findall.m, scripts/plot/findobj.m,
scripts/plot/legend.m, scripts/plot/uimenu.m:
Add missing semicolons to suppress output in some plot %!tests.

diff --git a/scripts/plot/allchild.m b/scripts/plot/allchild.m
--- a/scripts/plot/allchild.m
+++ b/scripts/plot/allchild.m
@@ -40,17 +40,17 @@ function h = allchild (handles)
     set (0, "showhiddenhandles", shh);
   end_unwind_protect
 
 endfunction
 
 
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   l = line;
 %!   assert (get (allchild (hf),"type"),{"axes"; "uimenu"; "uimenu"; "uimenu"});
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
diff --git a/scripts/plot/findall.m b/scripts/plot/findall.m
--- a/scripts/plot/findall.m
+++ b/scripts/plot/findall.m
@@ -41,17 +41,17 @@ function h = findall (varargin)
     set (0, "showhiddenhandles", shh);
   end_unwind_protect
 
 endfunction
 
 
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   h = findall (hf);
 %!   all_handles(1:13,1) = {"uimenu"};
 %!   all_handles(14) = {"figure"};
 %!   assert (get (h, "type"), all_handles);
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
diff --git a/scripts/plot/findobj.m b/scripts/plot/findobj.m
--- a/scripts/plot/findobj.m
+++ b/scripts/plot/findobj.m
@@ -312,34 +312,34 @@ endfunction
 %!   h2 = findobj (gcf (), "Type", "image", "-or", "Type", "surface", "-or", "Type", "hggroup");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %! assert (h2, h1)
 
 %!test
 %! toolkit = graphics_toolkit ("gnuplot");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   h1 = subplot (2, 2, 1);
 %!   h2 = subplot (2, 2, 2);
 %!   h3 = subplot (2, 2, 3);
 %!   h4 = subplot (2, 2, 4);
 %!   userdata = struct ("foo", "bar");
 %!   set (h3, "userdata", userdata);
 %!   h = findobj (hf, "userdata", userdata);
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 %! assert (h, h3)
 
 %!test
 %! toolkit = graphics_toolkit ("gnuplot");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   h1 = subplot (2, 2, 1);
 %!   set (h1, 'tag', '1')
 %!   h2 = subplot (2, 2, 2);
 %!   set (h2, 'tag', '2')
 %!   h3 = subplot (2, 2, 3);
 %!   set (h3, 'tag', '3')
 %!   h4 = subplot (2, 2, 4);
diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -1543,17 +1543,17 @@ endfunction
 %!  set (gca (), 'xaxislocation', 'top');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
 %!  legend ({'12345678901234567890'}, 'location', 'southwestoutside');
 %!  legend (option);
 
 %!test
 %! toolkit = graphics_toolkit ("gnuplot");
-%! h = figure ("visible", "off")
+%! h = figure ("visible", "off");
 %! unwind_protect
 %!   position = get (h, "position");
 %!   plot (rand (3));
 %!   legend ();
 %!   filename = sprintf ("%s.eps", tmpnam ());
 %!   print (filename);
 %!   unlink (filename);
 %!   assert (get (h, "position"), position);
diff --git a/scripts/plot/uimenu.m b/scripts/plot/uimenu.m
--- a/scripts/plot/uimenu.m
+++ b/scripts/plot/uimenu.m
@@ -97,49 +97,49 @@ endfunction
 %! shading ('interp');
 %! f = uimenu ('label', '&File', 'accelerator', 'f');
 %! e = uimenu ('label', '&Edit', 'accelerator', 'e');
 %! uimenu (f, 'label', 'Close', 'accelerator', 'q', 'callback', 'close (gcf)');
 %! uimenu (e, 'label', 'Toggle &Grid', 'accelerator', 'g', 'callback', 'grid (gca)');
 
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   ui = uimenu ("label", "mylabel");
 %!   assert (findobj (hf, "type", "uimenu"), ui);
 %!   assert (get (ui, "label"), "mylabel");
 %!   assert (get (ui, "checked"), "off");
 %!   assert (get (ui, "separator"), "off");
 %!   assert (get (ui, "enable"), "on");
 %!   assert (get (ui, "position"), 9);
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
 %% check for top level menus file, edit, and help
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   uif = findall (hf, "label", "&file");
 %!   assert (ishghandle (uif));
 %!   uie = findall (hf, "label", "&edit");
 %!   assert (ishghandle (uie));
 %!   uih = findall (hf, "label", "&help");
 %!   assert (ishghandle (uih));
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
-%! hf = figure ("visible", "off")
+%! hf = figure ("visible", "off");
 %! unwind_protect
 %!   uie = findall (hf, "label", "&edit");
 %!   myui = uimenu (uie, "label", "mylabel");
 %!   assert (ancestor (myui, "uimenu", "toplevel"), uie);
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
