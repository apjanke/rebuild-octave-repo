# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383206306 14400
#      Thu Oct 31 03:58:26 2013 -0400
# Node ID e50a3664bd45e65693e19365e22439aee1f29637
# Parent  0a887758d1ccaf78fd32ca4670fb7ac937955ac6
make compilation of main.cc work again when not building GUI

* main.in.cc: Fix preprocessor conditionals to allow compiling without
GUI enabled.

diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -97,17 +97,18 @@ w32_get_octave_home (void)
         retval = bin_dir.substr (0, pos);
     }
 
   return retval;
 }
 
 #endif
 
-#if ! defined (__WIN32__) || defined (__CYGWIN__)
+#if (defined (HAVE_OCTAVE_GUI) \
+     && ! defined (__WIN32__) || defined (__CYGWIN__))
 
 #include <signal.h>
 #include <fcntl.h>
 
 // This is a liboctave header, but it doesn't include any other Octave
 // headers or declare any functions that are defined in liboctave.
 #include "syswait.h"
 
@@ -393,58 +394,67 @@ main (int argc, char **argv)
 #if (defined (HAVE_OCTAVE_GUI) \
      && (! defined (__WIN32__) || defined (__CYGWIN__)))
   bool start_gui = true;
   bool gui_libs = true;
 #endif
 
   std::string octave_bindir = get_octave_bindir ();
 
-  std::string file = octave_bindir + dir_sep_char + "octave-gui";
+  std::string file = octave_bindir + dir_sep_char;
+
+#if defined (HAVE_OCTAVE_GUI)
+  file += "octave-gui";
+#else
+  file += "octave-cli";
+#endif
 
   char **new_argv = new char * [argc + 1];
 
   int k = 0;
   new_argv[k++] = strsave ("octave");
 
   for (int i = 1; i < argc; i++)
     {
       if (! strcmp (argv[i], "--no-gui-libs"))
         {
           // Run the version of Octave that is not linked with any GUI
           // libraries.  It may not be possible to do plotting or any
           // ui* calls, but it will be a little faster to start and
           // require less memory.  Don't pass the --no-gui-libs option
           // on as that option is not recognized by Octave.
 
-#if ! defined (__WIN32__) || defined (__CYGWIN__)
+#if (defined (HAVE_OCTAVE_GUI) \
+     && ! defined (__WIN32__) || defined (__CYGWIN__))
           gui_libs = false;
 #endif
           file = octave_bindir + dir_sep_char + "octave-cli";
         }
       else if (! strcmp (argv[i], "--no-gui"))
         {
           // If we see this option, then we can just exec octave; we
           // don't have to create a child process and wait for it to
           // exit.  But do exec "octave", not "octave-cli", because even
           // if the --no-gui option is given, we may be asked to do some
           // plotting or ui* calls.
 
-#if ! defined (__WIN32__) || defined (__CYGWIN__)
+#if (defined (HAVE_OCTAVE_GUI) \
+     && ! defined (__WIN32__) || defined (__CYGWIN__))
           start_gui = false;
 #endif
           new_argv[k++] = argv[i];
         }
       else
         new_argv[k++] = argv[i];
     }
 
   new_argv[k] = 0;
 
-#if ! defined (__WIN32__) || defined (__CYGWIN__)
+#if (defined (HAVE_OCTAVE_GUI) \
+     && ! defined (__WIN32__) || defined (__CYGWIN__))
 
   if (gui_libs && start_gui && have_controlling_terminal ())
     {
       install_signal_handlers ();
 
       gui_pid = fork ();
 
       if (gui_pid < 0)
