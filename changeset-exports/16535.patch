# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1366235878 14400
#      Wed Apr 17 17:57:58 2013 -0400
# Node ID 6ebd1e1a6b73e24ecf43fd73b086a2c592b7ad1b
# Parent  1dce0510b1e859086a96f2d5a4c4b67d360ed0b5
backout changeest 0696dcc92fc8; we'll do this in readline

diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -135,42 +135,9 @@ octave_popen2 (const std::string& cmd, c
   CloseHandle (childRead);
   CloseHandle (childWrite);
   CloseHandle (pi.hProcess);
   CloseHandle (pi.hThread);
 
   return pid;
 }
 
-void
-w32_clear_console_window (void)
-{
-  HANDLE console = GetStdHandle (STD_OUTPUT_HANDLE);
-
-  // Get the number of character cells in the current buffer.
-
-  CONSOLE_SCREEN_BUFFER_INFO csbi; 
-
-  if (GetConsoleScreenBufferInfo (console, &csbi))
-    {
-      DWORD screen_size = csbi.dwSize.X * csbi.dwSize.Y;
-
-      // Fill the entire screen with blanks.
-
-      COORD home = { 0, 0 };
-      DWORD nchars;
-
-      if (FillConsoleOutputCharacter (console, static_cast<TCHAR> (' '),
-                                      screen_size, home, &nchars))
-        {
-          if (GetConsoleScreenBufferInfo (console, &csbi))
-            {
-              if (FillConsoleOutputAttribute (console, csbi.wAttributes,
-                                              screen_size, home, &nchars))
-                {
-                  SetConsoleCursorPosition (console, home);
-                }
-            }
-        }
-    }
-}
-
 #endif
diff --git a/liboctave/system/lo-sysdep.h b/liboctave/system/lo-sysdep.h
--- a/liboctave/system/lo-sysdep.h
+++ b/liboctave/system/lo-sysdep.h
@@ -30,14 +30,11 @@ class string_vector;
 
 extern std::string octave_getcwd (void);
 
 extern int octave_chdir (const std::string&);
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
 extern pid_t octave_popen2 (const std::string&, const string_vector&,
     bool, int *, std::string&);
-
-extern void w32_clear_console_window (void);
-
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -33,17 +33,16 @@ along with Octave; see the file COPYING.
 #include <unistd.h>
 
 #include "quit.h"
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
 #include "file-ops.h"
 #include "lo-error.h"
-#include "lo-sysdep.h"
 #include "lo-utils.h"
 #include "oct-env.h"
 #include "oct-mutex.h"
 #include "oct-time.h"
 #include "singleton-cleanup.h"
 
 command_editor *command_editor::instance = 0;
 
@@ -313,21 +312,17 @@ gnu_readline::do_terminal_cols (void)
   int sw = ::octave_rl_screen_width ();
 
   return sw > 0 ? sw : 80;
 }
 
 void
 gnu_readline::do_clear_screen (void)
 {
-#if defined (__WIN32__) && ! defined (__CYGWIN__)
-  w32_clear_console_window ();
-#else
   ::octave_rl_clear_screen ();
-#endif
 }
 
 void
 gnu_readline::do_resize_terminal (void)
 {
   ::octave_rl_resize_terminal ();
 }
 
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -88,25 +88,36 @@ static void
 flush_stdout (void)
 {
   fflush (stdout);
 }
 
 void
 octave_rl_clear_screen (void)
 {
+  /* This is a bit of a kluge, but I think it will work (I know, famous
+     last words).  */
+
+#if defined (__WIN32__) && ! defined (__CYGWIN__)
+
+  system ("cls");
+
+#else
+
   int ignore1 = 0;
   int ignore2 = 0;
 
   rl_voidfunc_t *saved_redisplay_function = rl_redisplay_function;
   rl_redisplay_function = flush_stdout;
 
   rl_clear_screen (ignore1, ignore2);
 
   rl_redisplay_function = saved_redisplay_function;
+
+#endif
 }
 
 void
 octave_rl_resize_terminal (void)
 {
   rl_resize_terminal ();
 }
 
