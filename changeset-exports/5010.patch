# HG changeset patch
# User jwe
# Date 1095729266 0
#      Tue Sep 21 01:14:26 2004 +0000
# Node ID 6ff7d9d61b57c7926d1d750d053c60a9a6eaa0c3
# Parent  000cfedea91ca37ab7b57498771d0f4af343d51e
[project @ 2004-09-21 01:14:26 by jwe]

diff --git a/src/DLD-FUNCTIONS/sort.cc b/src/DLD-FUNCTIONS/sort.cc
--- a/src/DLD-FUNCTIONS/sort.cc
+++ b/src/DLD-FUNCTIONS/sort.cc
@@ -299,17 +299,17 @@ mx_sort (ArrayN<double> &m, int dim, sor
   unsigned int ns = dv(dim);
   unsigned int iter = dv.numel () / ns;
   unsigned int stride = 1;
   for (unsigned int i = 0; i < static_cast<unsigned int> (dim); i++)
     stride *= dv(i);
 
   double *v = m.fortran_vec ();
 
-  unsigned EIGHT_BYTE_INT *p = (unsigned EIGHT_BYTE_INT *)v;
+  unsigned EIGHT_BYTE_INT *p = reinterpret_cast<unsigned EIGHT_BYTE_INT *> (v);
 
   octave_sort<unsigned EIGHT_BYTE_INT> sort;
 
   if (mode == ASCENDING)
     sort.set_compare (ascending_compare);
   else if (mode == DESCENDING)
     sort.set_compare (descending_compare);
 
@@ -435,17 +435,17 @@ mx_sort_indexed (ArrayN<double> &m, int 
   unsigned int ns = dv(dim);
   unsigned int iter = dv.numel () / ns;
   unsigned int stride = 1;
   for (unsigned int i = 0; i < static_cast<unsigned int> (dim); i++)
     stride *= dv(i);
 
   double *v = m.fortran_vec ();
 
-  unsigned EIGHT_BYTE_INT *p = (unsigned EIGHT_BYTE_INT *)v;
+  unsigned EIGHT_BYTE_INT *p = reinterpret_cast<unsigned EIGHT_BYTE_INT *> (v);
 
   octave_sort<vec_index<unsigned EIGHT_BYTE_INT> *> indexed_sort;
 
   if (mode == ASCENDING)
     indexed_sort.set_compare (ascending_compare);
   else if (mode == DESCENDING)
     indexed_sort.set_compare (descending_compare);
 
