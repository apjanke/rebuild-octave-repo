# HG changeset patch
# User jwe
# Date 747888601 0
#      Mon Sep 13 02:50:01 1993 +0000
# Node ID 17b6de3206b697a0ba77d0de141368f1bee570f3
# Parent  eef502bbdffabbb702c43c0d1a05254151d76573
[project @ 1993-09-13 02:50:01 by jwe]
(qzvalue): Call vector_of_empties instead of empty_tree.

diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -43,17 +43,16 @@ extern "C"
   int F77_FCN (qzit) (const int*, const int*, double*, double*, const
 		      double*, const long*, double*, int*);
  
   int F77_FCN (qzval) (const int*, const int*, double*, double*,
 		       double*, double*, double*, const long*, double*);
 }
 
 // XXX FIXME XXX
-extern tree_constant* empty_tree (int , char*);
 extern ComplexMatrix ComplexMatrixLoad (tree_constant&);
 
 #ifdef WITH_DLD
 tree_constant *
 builtin_qzvalue_2 (tree_constant *args, int nargin, int nargout)
 {
   return qzvalue (args, nargin, nargout);
 }
@@ -63,17 +62,17 @@ tree_constant *
 qzvalue (tree_constant *args, int nargin, int nargout)
 {
   tree_constant *retval = NULL_TREE_CONST;
 
   tree_constant arga = args[1].make_numeric ();
   tree_constant argb = args[2].make_numeric();
 
   if (arga.is_empty () || argb.is_empty ())
-    retval = empty_tree (nargout, "qzvalue");
+    retval = vector_of_empties (nargout, "qzvalue");
   else
     {
 
 // Arguments are not empty, so check for correct dimensions.
 
       int a_rows = arga.rows();
       int a_cols = arga.columns();
       int b_rows = argb.rows();
