# HG changeset patch
# User Rik <rik@octave.org>
# Date 1472831681 25200
#      Fri Sep 02 08:54:41 2016 -0700
# Node ID 00986ee439566e9fc0ae66dd9b5073a6dd56be21
# Parent  994dc0f7a6ce175553ff28c271b1dd6033be3ff9
doc: Add more @seealso links to numel, size, size_equal.

* data.cc (Fsize_equal): Clarify docstring about calling with no argument.
Add @seealso link to common_size.
* data.cc (Fsize): Add @seealso link to size_equal, common_size.
* data.cc (Fnumel): Add @seealso link to length, ndims.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -2721,17 +2721,17 @@ numel (@var{a}, 2, ":")
 @end group
 @end example
 
 @noindent
 will return 3 as the second row has three column entries.
 
 This method is also called when an object appears as lvalue with cs-list
 indexing, i.e., @code{object@{@dots{}@}} or @code{object(@dots{}).field}.
-@seealso{size}
+@seealso{size, length, ndims}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin == 0)
     print_usage ();
 
   octave_value retval;
@@ -2777,17 +2777,17 @@ corresponding dimension.  For example,
 @group
 size ([1, 2; 3, 4; 5, 6], 2)
     @result{} 2
 @end group
 @end example
 
 @noindent
 returns the number of columns in the given matrix.
-@seealso{numel, ndims, length, rows, columns}
+@seealso{numel, ndims, length, rows, columns, size_equal, common_size}
 @end deftypefn */)
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -2835,19 +2835,19 @@ returns the number of columns in the giv
   return retval;
 }
 
 DEFUN (size_equal, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {} size_equal (@var{a}, @var{b}, @dots{})
 Return true if the dimensions of all arguments agree.
 
-Trailing singleton dimensions are ignored.
-When called with a single or no argument @code{size_equal} returns true.
-@seealso{size, numel, ndims}
+Trailing singleton dimensions are ignored.  When called with a single argument,
+or no argument, @code{size_equal} returns true.
+@seealso{size, numel, ndims, common_size}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin >= 1)
     {
       dim_vector a_dims = args(0).dims ();
 
