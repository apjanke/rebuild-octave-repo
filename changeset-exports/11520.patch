# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294987199 18000
#      Fri Jan 14 01:39:59 2011 -0500
# Node ID fe199165212ec3ae7ecc3fcd9b7ca82d5e458773
# Parent  4f60db87514724920554ed1c8f47ad757b29987d
use mkstemp from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* bootstrap.conf (gnulib_modules): Include mkstemp in the list.
+
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac (AC_ARG_ENABLE(extra-warning-flags)):
 	Eliminate some code duplication.
 
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac (AC_ARG_ENABLE(extra-warning-flags)): Check for
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -27,16 +27,17 @@ gnulib_modules="
   gethostname
   getopt-gnu
   gettimeofday
   glob
   link
   lstat
   mkdir
   mkfifo
+  mkstemp
   mktime
   nanosleep
   pathmax
   progname
   readlink
   rename
   rmdir
   round
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* file-io.cc (mkstemp): Delete.
+	Delete decl for mkstemps.
+	(Fmkstemp): Assume we have mkstemp from gnulib.
+
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__pchip_deriv__.cc, DLD-FUNCTIONS/dot.cc,
 	octave.cc: Style fixes.
 
 2011-01-13  David Bateman  <dbateman@free.fr>
 
 	ls-mat5.cc (int save_mat5_element_length (const octave_value&,
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1940,35 +1940,16 @@ system-dependent error message.\n\
         }
     }
   else
     print_usage ();
 
   return retval;
 }
 
-#if defined (HAVE_MKSTEMPS)
-// Prototype for mkstemps in libiberty
-extern "C" int mkstemps (char *pattern, int suffix_len);
-#endif
-
-#if ! defined (HAVE_MKSTEMP) && ! defined (HAVE_MKSTEMPS) && defined (_MSC_VER)
-#include <fcntl.h>
-#include <sys/stat.h>
-int mkstemp (char *tmpl)
-{
-  int ret=-1;
-  mktemp (tmpl);
-  ret = open (tmpl, O_RDWR | O_BINARY | O_CREAT | O_EXCL | _O_SHORT_LIVED,
-              _S_IREAD | _S_IWRITE);
-  return ret;
-}
-#define HAVE_MKSTEMP 1
-#endif
-
 DEFUN (mkstemp, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{fid}, @var{name}, @var{msg}] =} mkstemp (@var{template}, @var{delete})\n\
 Return the file ID corresponding to a new temporary file with a unique\n\
 name created from @var{template}.  The last six characters of @var{template}\n\
 must be @code{XXXXXX} and these are replaced with a string that makes the\n\
 filename unique.  The file is then created with mode read/write and\n\
 permissions that are system dependent (on GNU/Linux systems, the permissions\n\
@@ -1987,34 +1968,28 @@ error message.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
   retval(0) = -1;
 
-#if defined (HAVE_MKSTEMP) || defined (HAVE_MKSTEMPS)
-
   int nargin = args.length ();
 
   if (nargin == 1 || nargin == 2)
     {
       std::string tmpl8 = args(0).string_value ();
 
       if (! error_state)
         {
           OCTAVE_LOCAL_BUFFER (char, tmp, tmpl8.size () + 1);
           strcpy (tmp, tmpl8.c_str ());
 
-#if defined (HAVE_MKSTEMP)
           int fd = mkstemp (tmp);
-#else
-          int fd = mkstemps (tmp, 0);
-#endif
 
           if (fd < 0)
             {
               retval(2) = gnulib::strerror (errno);
               retval(0) = fd;
             }
           else
             {
@@ -2049,20 +2024,16 @@ error message.\n\
             }
         }
       else
         error ("mkstemp: expecting string as first argument");
     }
   else
     print_usage ();
 
-#else
-  retval(2) = "mkstemp: not supported on this sytem";
-#endif
-
   return retval;
 }
 
 static int
 convert (int x, int ibase, int obase)
 {
   int retval = 0;
 
