# HG changeset patch
# User jwe
# Date 1125520908 0
#      Wed Aug 31 20:41:48 2005 +0000
# Node ID 66ad03c588806fec348e9224ea0635b9beadc105
# Parent  c2428a4b7d56da86a450416704f040cc99112cfd
[project @ 2005-08-31 20:41:47 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2005-08-31  Daniel  <durbano@shbano.com>
+
+	* special-matrix/invhilb.m, statistics/base/iqr.m,
+	control/system/is_controllable.m, set/ismember.m: Doc fixes.
+	From Jorge Barros de Abreu <ficmatin01@solar.com.br>.
+
 2005-08-29  Bill Denney <denney@seas.upenn.edu>
 
 	* image/saveimage.m: Open output file in binary mode.
 
 	* miscellaneous/bug_report.m: Open prefs file in text mode.
 
 2005-08-16  John W. Eaton  <jwe@octave.org>
 
diff --git a/scripts/control/system/is_controllable.m b/scripts/control/system/is_controllable.m
--- a/scripts/control/system/is_controllable.m
+++ b/scripts/control/system/is_controllable.m
@@ -25,17 +25,17 @@
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ## @item a
 ## @itemx b
 ## @var{n} by @var{n}, @var{n} by @var{m} matrices, respectively
 ## @item tol
-## optional roundoff paramter.  default value: @code{10*eps}
+## optional roundoff parameter.  Default value: @code{10*eps}
 ## @end table
 ##
 ## @strong{Outputs}
 ## @table @var
 ## @item retval
 ## Logical flag; returns true (1) if the system @var{sys} or the
 ## pair (@var{a}, @var{b}) is controllable, whichever was passed as input
 ## arguments.
diff --git a/scripts/set/ismember.m b/scripts/set/ismember.m
--- a/scripts/set/ismember.m
+++ b/scripts/set/ismember.m
@@ -17,17 +17,17 @@
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ismember (@var{A}, @var{S})
 ## Return a matrix the same shape as @var{A} which has 1 if
 ## @code{A(i,j)} is in @var{S} or 0 if it isn't.
 ## @end deftypefn
-## @seealso{unique, union, intersect, setxor, setdiff}
+## @seealso{unique, union, intersection, setxor, setdiff}
 
 ## Author: Paul Kienzle
 ## Adapted-by: jwe
 
 function c = ismember (a, S)
 
   if (nargin != 2)
     usage ("ismember (A, S)");
@@ -104,9 +104,9 @@ function c = ismember (a, S)
         c(idx2) = all (char (a(idx2)) == char (S(idx)(idx2)), 2);
       else
         c = (a == reshape (S (idx), size (a)));
       endif
     endif
   endif
 
 endfunction
-  
\ No newline at end of file
+  
diff --git a/scripts/special-matrix/invhilb.m b/scripts/special-matrix/invhilb.m
--- a/scripts/special-matrix/invhilb.m
+++ b/scripts/special-matrix/invhilb.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} invhilb (@var{n})
 ## Return the inverse of a Hilbert matrix of order @var{n}.  This can be 
-## computed computed exactly using
+## computed exactly using
 ## @tex
 ## $$\eqalign{
 ##   A_{ij} &= -1^{i+j} (i+j-1)
 ##              \left( \matrix{n+i-1 \cr n-j } \right)
 ##              \left( \matrix{n+j-1 \cr n-i } \right)
 ##              \left( \matrix{i+j-2 \cr i-2 } \right)^2 \cr
 ##          &= { p(i)p(j) \over (i+j-1) }
 ## }$$
diff --git a/scripts/statistics/base/iqr.m b/scripts/statistics/base/iqr.m
--- a/scripts/statistics/base/iqr.m
+++ b/scripts/statistics/base/iqr.m
@@ -18,17 +18,17 @@
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} iqr (@var{x}, @var{dim})
 ## If @var{x} is a vector, return the interquartile range, i.e., the
 ## difference between the upper and lower quartile, of the input data.
 ##
 ## If @var{x} is a matrix, do the above for first non singleton
-## dimension of @var{x}.. If the option @var{dim} argument is given,
+## dimension of @var{x}. If the option @var{dim} argument is given,
 ## then operate along this dimension.
 ## @end deftypefn
 
 ## Author KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Interquartile range
 
 function y = iqr (x, dim)
 
diff --git a/scripts/statistics/base/var.m b/scripts/statistics/base/var.m
--- a/scripts/statistics/base/var.m
+++ b/scripts/statistics/base/var.m
@@ -18,26 +18,25 @@
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} var (@var{x})
 ## For vector arguments, return the (real) variance of the values.
 ## For matrix arguments, return a row vector contaning the variance for
 ## each column.
 ##
-## The argument @var{opt} determines the type of normalization to use. Valid 
-## values are
+## The argument @var{opt} determines the type of normalization to use.
+## Valid values are
 ##
 ## @table @asis 
 ## @item 0:
-##   normalizes with N-1, provides the square root of best unbiased estimator
-##   of the variance [default]
+## Normalizes with N-1, provides the best unbiased estimator of the
+## variance [default].
 ## @item 1:
-##   normalizes with N, this provides the square root of the second moment
-##   around the mean
+## Normalizes with N, this provides the second moment around the mean.
 ## @end table
 ##
 ## The third argument @var{dim} determines the dimension along which the 
 ## variance is calculated.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Compute variance
diff --git a/scripts/strings/strcat.m b/scripts/strings/strcat.m
--- a/scripts/strings/strcat.m
+++ b/scripts/strings/strcat.m
@@ -28,28 +28,28 @@
 ##      @result{} "ab ab ab "
 ##         "cdecdecde"
 ## @end group
 ## @end example
 ## @end deftypefn
 
 ## Author: jwe
 
-function st = strcat (s, t, varargin)
+function st = strcat (s, varargin)
 
   if (nargin > 0)
     save_warn_empty_list_elements = warn_empty_list_elements;
     unwind_protect
       warn_empty_list_elements = 0;
-      if (isstr (s) && isstr (t))
-        tmpst = [s, t];
+      if (isstr (s))
+        tmpst = s;
       else
         error ("strcat: all arguments must be strings");
       endif
-      n = nargin - 2;
+      n = nargin - 1;
       k = 1;
       while (n--)
         tmp = varargin{k++};
         if (isstr (tmp))
           tmpst = [tmpst, tmp];
         else
           error ("strcat: all arguments must be strings");
         endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2005-08-31  John W. Eaton  <jwe@octave.org>
+
+	* oct-map.cc (Octave_map::index): Don't crash if index list is empty.
+	* ov-str-mat.cc (octave_char_matrix_str::do_index_op_internal):
+	Likewise. 
+
+	* oct-map.h (Octave_map::ndims): New function.
+
 2005-08-30  John W. Eaton  <jwe@octave.org>
 
 	* ov-range.h (octave_range::permute): New function.
 
 	* ov-struct.cc (octave_struct::load_ascii,
 	octave_struct::load_binary, octave_struct::load_hdf5): Try harder
 	to read old-style files correctly.
 
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -331,25 +331,31 @@ Octave_map::assign (const std::string& k
   return *this;
 }
 
 Octave_map
 Octave_map::index (const octave_value_list& idx)
 {
   Octave_map retval;
 
-  for (iterator p = begin (); p != end (); p++)
+  if (idx.length () > 0)
     {
-      Cell tmp = contents(p).index (idx);
+      for (iterator p = begin (); p != end (); p++)
+	{
+	  Cell tmp = contents(p).index (idx);
 
-      if (error_state)
-	break;
+	  if (error_state)
+	    break;
 
-      retval.assign (key(p), tmp);
+	  retval.assign (key(p), tmp);
+	}
     }
+  else
+    error ("invalid number of indices (= 0) for %d-dimensional struct array",
+	   ndims ());
 
   return error_state ? Octave_map () : retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/oct-map.h b/src/oct-map.h
--- a/src/oct-map.h
+++ b/src/oct-map.h
@@ -116,16 +116,18 @@ Octave_map
   string_vector keys (void) const;
 
   octave_idx_type rows (void) const { return dimensions(0); }
 
   octave_idx_type columns (void) const { return dimensions(1); }
 
   dim_vector dims (void) const { return dimensions; }
 
+  int ndims (void) const { return dimensions.length (); }
+
   Octave_map reshape (const dim_vector& new_dims) const;
 
   Octave_map resize (const dim_vector& dv) const;
 
   octave_idx_type numel (void) const;
 
   Octave_map concat (const Octave_map& rb, const Array<octave_idx_type>& ra_idx);
 
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -106,16 +106,20 @@ octave_char_matrix_str::do_index_op_inte
 	idx_vector i = idx (0).index_vector ();
 
 	if (! error_state)
 	  retval = octave_value (charNDArray (matrix.index (i, resize_ok)),
 				 true, type);
       }
       break;
 
+    case 0:
+      error ("invalid number of indices (= 0) for %d-dimensional character array", matrix.ndims ());
+      break;
+
     default:
       {
 	Array<idx_vector> idx_vec (len);
 
 	for (octave_idx_type i = 0; i < len; i++)
 	  idx_vec(i) = idx(i).index_vector ();
 
 	if (! error_state)
