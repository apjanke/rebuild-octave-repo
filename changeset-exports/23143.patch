# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1486169672 18000
#      Fri Feb 03 19:54:32 2017 -0500
# Node ID 898c33f4b9c09246f4f41b5d1552803962c13d8e
# Parent  36983345732bd564fd60e6d1925a484682178af6
declare some functions that are only used once "static"

* debug.cc (do_dbtype): Now static.
* load-save.cc (find_file_to_load): Now static.
* variables.cc (symbol_exist): Now static.
* variables.h (symbol_exist): Delete decl.

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -558,17 +558,17 @@ is stopped.
         octave_stdout << std::endl;
     }
   else
     octave_stdout << "<unknown line>" << std::endl;
 
   return ovl ();
 }
 
-void
+static void
 do_dbtype (std::ostream& os, const std::string& name, int start, int end)
 {
   std::string ff = fcn_file_in_path (name);
 
   if (ff.empty ())
     os << "dbtype: unknown function " << name << "\n";
   else
     {
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -483,17 +483,17 @@ do_load (std::istream& stream, const std
         }
     }
   else if (retstruct.nfields () != 0)
     retval = retstruct;
 
   return retval;
 }
 
-std::string
+static std::string
 find_file_to_load (const std::string& name, const std::string& orig_name)
 {
   std::string fname = find_data_file_in_load_path ("load", name, true);
 
   size_t dot_pos = fname.rfind (".");
   size_t sep_pos = fname.find_last_of (octave::sys::file_ops::dir_sep_chars ());
 
   if (dot_pos == std::string::npos
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -373,18 +373,18 @@ isglobal ("x")
 %! global x;
 %! assert (isglobal ("x"), true);
 
 %!error isglobal ()
 %!error isglobal ("a", "b")
 %!error isglobal (1)
 */
 
-int
-symbol_exist (const std::string& name, const std::string& type)
+static int
+symbol_exist (const std::string& name, const std::string& type = "any")
 {
   if (octave::is_keyword (name))
     return 0;
 
   bool search_any = type == "any";
   bool search_var = type == "var";
   bool search_dir = type == "dir";
   bool search_file = type == "file";
diff --git a/libinterp/corefcn/variables.h b/libinterp/corefcn/variables.h
--- a/libinterp/corefcn/variables.h
+++ b/libinterp/corefcn/variables.h
@@ -69,19 +69,16 @@ get_struct_elts (const std::string& text
 
 extern OCTINTERP_API string_vector
 generate_struct_completions (const std::string& text, std::string& prefix,
                              std::string& hint);
 
 extern OCTINTERP_API bool
 looks_like_struct (const std::string& text, char prev_char);
 
-extern OCTINTERP_API int
-symbol_exist (const std::string& name, const std::string& type = "any");
-
 extern OCTINTERP_API std::string
 unique_symbol_name (const std::string& basename);
 
 extern OCTINTERP_API octave_value
 lookup_function_handle (const std::string& nm);
 
 extern OCTINTERP_API octave_value
 get_global_value (const std::string& nm, bool silent = false);
