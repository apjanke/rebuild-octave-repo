# HG changeset patch
# User jwe
# Date 1200606955 0
#      Thu Jan 17 21:55:55 2008 +0000
# Node ID 0114d8cd1587d2f2cbb23b4a619a2776021ca258
# Parent  097a2637ef1b8351512ab49d8543c6479ff5b09f
[project @ 2008-01-17 21:55:55 by jwe]

diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -89,16 +89,17 @@ Paul Kienzle
 Aaron A. King
 Arno J. Klaassen
 Geoffrey Knauth
 Heine Kolltveit
 Ken Kouno
 Oyvind Kristiansen
 Piotr Krzyzanowski
 Volker Kuhlmann
+Tetsuro Kurita
 Miroslaw Kwasniak
 Rafael Laboissiere
 Kai Labusch
 Claude Lacoursiere
 Walter Landry
 Bill Lash
 Dirk Laurie
 Maurice LeBrun
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-01-17  Tetsuro KURITA  <tkurita@mac.com>
+
+	* plot/print.m: Handle PDF output.
+	* plot/drawnow.m: Add "PDF" in a list of enhanced_terminals. 
+
 2008-01-17  John W. Eaton  <jwe@octave.org>
 
 	* path/savepath.m: Print newline before initial comment line.
 	Double up single quote characters.
 	* path/__extractpath__.m: Return just the path as a string.
 	Undo single quote character doubling.
 
 	* path/pathdef.m: Avoid eval.  Simplify.
diff --git a/scripts/plot/drawnow.m b/scripts/plot/drawnow.m
--- a/scripts/plot/drawnow.m
+++ b/scripts/plot/drawnow.m
@@ -207,17 +207,17 @@ endfunction
 function have_enhanced = enhanced_term (term)
   persistent enhanced_terminals;
 
   if (isempty (enhanced_terminals))
     ## Don't include pstex, pslatex or epslatex here as the TeX commands
     ## should not be interpreted in that case.
     if (compare_versions (__gnuplot_version__ (), "4.0", ">"))
       enhanced_terminals = {"aqua", "dumb", "png", "jpeg", "gif", "pm", ...
-	                    "windows", "wxt", "svg", "postscript", "x11"};
+	                    "windows", "wxt", "svg", "postscript", "x11", "pdf"};
     else 
       enhanced_terminals = {"x11", "postscript"};
     endif
   endif
 
   term = tolower (term);
 
   have_enhanced = false;
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -81,16 +81,18 @@
 ##   @item mf
 ##     Metafont
 ##   @item png
 ##     Portable network graphics
 ##   @item pbm
 ##     PBMplus
 ##   @item svg
 ##     Scalable vector graphics
+##   @item pdf
+##     Portable document format
 ##   @end table
 ##
 ##   Other devices are supported by "convert" from ImageMagick.  Type
 ##   system("convert") to see what formats are available.
 ##
 ##   If the device is omitted, it is inferred from the file extension,
 ##   or if there is no filename it is sent to the printer as postscript.
 ##
@@ -214,17 +216,17 @@ function print (varargin)
   elseif (strcmp (dev, "cdr"))
     dev = "corel";
   endif
 
   ## check if we have to use convert
   dev_list = {"aifm", "corel", "fig", "png", "pbm", "dxf", "mf", "svg", ...
 	      "hpgl", "ps", "ps2", "psc", "psc2", "eps", "eps2", ...
 	      "epsc", "epsc2", "emf", "pstex", "pslatex", ...
-	      "epslatex", "epslatexstandalone"};
+	      "epslatex", "epslatexstandalone", "pdf"};
   convertname = "";
   [idx, errmsg] = cellidx (dev_list, dev);
   if (! idx)
     if (! isempty (devopt))
       convertname = strcat (devopt, ":", name);
     else
       convertname = name;
     endif
@@ -364,16 +366,38 @@ function print (varargin)
 
   elseif (strcmp (dev, "svg"))
     ## SVG
     options = "";
     if (! isempty (size))
       options = strcat (" size ", size);
     endif
     new_terminal = strcat ("svg", options);
+    
+  elseif (strcmp (dev, "pdf"))
+    ## Portable Document format
+    options = " ";
+    if (use_color >= 0)
+      options = "color";
+    else
+      options = "mono";
+    endif
+    if (force_solid > 0)
+       options = strcat (options, " solid");
+    elseif (force_solid < 0)
+      options = strcat (options, " dashed");
+    endif
+    if (! isempty (font))
+      options = strcat (options, "\"", font, "\" ");
+    endif
+    if (! isempty (fontsize))
+      options = strcat (options, " ", fontsize);
+    endif
+
+    new_terminal = strcat ("pdf ", options);
 
   endif
 
   mono = use_color < 0;
 
   if (debug)
     drawnow (new_terminal, name, mono, debug_file);
   else
