# HG changeset patch
# User jwe
# Date 822291864 0
#      Mon Jan 22 06:24:24 1996 +0000
# Node ID 2b890f1b5a2da27bf4508002b208d234e1d29af6
# Parent  b86d76c3c0ddebd4f269ef35e0dc37273c3f3e8b
[project @ 1996-01-22 06:24:24 by jwe]

diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -453,34 +453,32 @@ octave_gets (void)
       octave_gets_line = 0;
     }
 
   if (interactive || forced_interactive)
     {
       const char *ps = (promptflag > 0) ? user_pref.ps1.c_str () :
 	user_pref.ps2.c_str ();
 
-      const char *prompt = decode_prompt_string (ps).c_str ();
+      string prompt = decode_prompt_string (ps);
 
       if (interactive)
 	{
 	  pipe_handler_error_count = 0;
 	  flush_output_to_pager ();
 	}
 
       maybe_write_to_diary_file (prompt);
 
-      octave_gets_line = gnu_readline (prompt);
-
-      delete [] prompt;
+      octave_gets_line = gnu_readline (prompt.c_str ());
     }
   else
     octave_gets_line = gnu_readline ("");
 
-  current_input_line = octave_gets_line;
+  current_input_line = string (octave_gets_line);
 
   if (octave_gets_line && *octave_gets_line)
     {
       maybe_save_history (octave_gets_line);
 
       maybe_write_to_diary_file (octave_gets_line);
 
       do_input_echo (octave_gets_line);
@@ -989,35 +987,34 @@ get_user_input (const Octave_object& arg
 
   int nargin = args.length ();
 
   int read_as_string = 0;
 
   if (nargin == 2)
     read_as_string++;
 
-  const char *prompt = "debug> ";
-  string tstr;
+  string prompt ("debug> ");
+
   if (nargin > 0)
    {
-     tstr = args(0).string_value ();
-     prompt = tstr.c_str ();
+     prompt = args(0).string_value ();
 
      if (error_state)
        {
 	 error ("input: unrecognized argument");
 	 return retval;
        }
     }
 
  again:
 
   flush_output_to_pager ();
 
-  char *input_buf = gnu_readline (prompt);
+  char *input_buf = gnu_readline (prompt.c_str ());
 
   if (input_buf)
     {
       maybe_save_history (input_buf);
 
       int len = strlen (input_buf);
 
       if (len < 1)
