# HG changeset patch
# User Rik <rik@octave.org>
# Date 1496862693 25200
#      Wed Jun 07 12:11:33 2017 -0700
# Node ID 9151922777e2f6cba934e1f7c0d0430291b2b1bd
# Parent  b075b1629c2687f6b91ae18d7184099f20abf9d2
Pick correct help text when shebang is present (bug #51191).

* lex.ll (looks_like_shebang): New function
* lex.ll (base_lexer::finish_comment): Check that comment isn't actually
shebang sequence before setting help text equal to comment text.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -2230,22 +2230,29 @@ static bool
 looks_like_copyright (const std::string& s)
 {
   bool retval = false;
 
   if (! s.empty ())
     {
       size_t offset = s.find_first_not_of (" \t");
 
-      retval = (s.substr (offset, 9) == "Copyright" || s.substr (offset, 6) == "Author");
+      retval = (s.substr (offset, 9) == "Copyright"
+                || s.substr (offset, 6) == "Author");
     }
 
   return retval;
 }
 
+static bool
+looks_like_shebang (const std::string& s)
+{
+  return ((! s.empty ()) && (s[0] == '!'));
+}
+
 namespace octave
 {
   void
   base_lexer::input_buffer::fill (const std::string& input, bool eof_arg)
   {
     buffer = input;
     chars_left = buffer.length ();
     pos = buffer.c_str ();
@@ -2893,18 +2900,18 @@ namespace octave
     current_input_column = 1;
   }
 
   void
   base_lexer::finish_comment (octave_comment_elt::comment_type typ)
   {
     bool copyright = looks_like_copyright (comment_text);
 
-    if (nesting_level.none () && help_text.empty ()
-        && ! comment_text.empty () && ! copyright)
+    if (nesting_level.none () && help_text.empty () && ! comment_text.empty ()
+        && ! copyright && ! looks_like_shebang (comment_text))
       help_text = comment_text;
 
     if (copyright)
       typ = octave_comment_elt::copyright;
 
     comment_buf.append (comment_text, typ);
 
     comment_text = "";
