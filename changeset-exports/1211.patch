# HG changeset patch
# User jwe
# Date 797130787 0
#      Thu Apr 06 01:13:07 1995 +0000
# Node ID ee2c6a67abe985851c094edfb75b4bbadf629563
# Parent  dc7a13bed72292dcac53c0e4c9f36017cfd65789
[project @ 1995-04-06 01:12:06 by jwe]

diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -115,28 +115,22 @@ any_element_greater_than (const Matrix& 
 }
 
 static void
 print_constant (tree_constant& tc, char *name, int print_padding = 1)
 {
   int pad_after = 0;
   if (user_pref.print_answer_id_name)
     {
-      if (print_as_scalar (tc))
+      if (print_as_scalar (tc) || print_as_structure (tc))
 	{
 	  ostrstream output_buf;
 	  output_buf << name << " = " << ends;
 	  maybe_page_output (output_buf);
 	}
-      else if (print_as_structure (tc))
-	{
-	  ostrstream output_buf;
-	  output_buf << name << " = {\n" << ends;
-	  maybe_page_output (output_buf);
-	}
       else
 	{
 	  pad_after = 1;
 	  ostrstream output_buf;
 	  output_buf << name << " =\n\n" << ends;
 	  maybe_page_output (output_buf);
 	}
     }
@@ -1930,18 +1924,17 @@ tree_simple_assignment_expression::eval 
 		  retval = lhs->assign (rhs_val, args);
 		  if (error_state)
 		    eval_error ();
 		}
 	    }
 	}
     }
 
-  if (! error_state && print && retval.is_defined ()
-      && user_pref.print_answer_id_name) 
+  if (! error_state && print && retval.is_defined ())
     print_constant (retval, lhs->name ());
 
   return retval;
 }
 
 void
 tree_simple_assignment_expression::eval_error (void)
 {
@@ -2065,17 +2058,17 @@ tree_multi_assignment_expression::eval (
 
 	      if (print && pad_after)
 		{
 		  ostrstream output_buf;
 		  output_buf << "\n" << ends;
 		  maybe_page_output (output_buf);
 		}
 
-	      if (print && user_pref.print_answer_id_name)
+	      if (print)
 		print_constant (results(i), lhs_expr->name (), 0);
 
 	      pad_after++;
 	      i++;
 	    }
 	  else
 	    {
 	      tree_simple_assignment_expression tmp_expr
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -396,17 +396,16 @@ symbol_record::define (tree_constant *t)
     }
 
   definition->define (t);
 
   if (sv_fcn && sv_fcn () < 0)
     {
 // Would be nice to be able to avoid this cast.  XXX FIXME XXX
       definition->define ((tree_constant *) saved_def);
-      delete t;
       return 0;
     }
 
   delete saved_def;
 
   return 1;
 }
 
