# HG changeset patch
# User jwe
# Date 939850660 0
#      Wed Oct 13 21:37:40 1999 +0000
# Node ID f7e4a95916f2f410f38f581f17b3e3d36320f3c8
# Parent  604ce3f77788818417800ffdce8f447f510df3aa
[project @ 1999-10-13 21:37:04 by jwe]

diff --git a/glob/COPYING.LIB b/glob/COPYING.LIB
--- a/glob/COPYING.LIB
+++ b/glob/COPYING.LIB
@@ -1,13 +1,13 @@
 		  GNU LIBRARY GENERAL PUBLIC LICENSE
 		       Version 2, June 1991
 
  Copyright (C) 1991 Free Software Foundation, Inc.
-                    675 Mass Ave, Cambridge, MA 02139, USA
+                    59 Temple Place, Suite 330, Boston, MA 02111 USA
  Everyone is permitted to copy and distribute verbatim copies
  of this license document, but changing it is not allowed.
 
 [This is the first released version of the library GPL.  It is
  numbered 2 because it goes with version 2 of the ordinary GPL.]
 
 			    Preamble
 
@@ -459,17 +459,17 @@ convey the exclusion of warranty; and ea
 
     This library is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Library General Public License for more details.
 
     You should have received a copy of the GNU Library General Public
     License along with this library; if not, write to the Free
-    Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 Also add information on how to contact you by electronic and paper mail.
 
 You should also get your employer (if you work as a programmer) or your
 school, if any, to sign a "copyright disclaimer" for the library, if
 necessary.  Here is a sample; alter the names:
 
   Yoyodyne, Inc., hereby disclaims all copyright interest in the
diff --git a/kpathsea/klibtool.config b/kpathsea/klibtool.config
--- a/kpathsea/klibtool.config
+++ b/kpathsea/klibtool.config
@@ -1,12 +1,12 @@
 LIBTOOL_OBJTYPES='STATIC:'
-shared_support='true'
+shared_support=''
 shared_ext='so'
 libpath_var='LD_LIBRARY_PATH'
 CC='gcc'
 args_STATIC_compile=''
 args_SHARED_compile='-fPIC'
 args_STATIC_archive=''
 STATIC_ranlib='ranlib'
 args_SHARED_archive='-shared'
 args_SHARED_link=''
-SHARED_postinstall='ldconfig $libdir'
+SHARED_postinstall=''
diff --git a/kpathsea/strtol.c b/kpathsea/strtol.c
--- a/kpathsea/strtol.c
+++ b/kpathsea/strtol.c
@@ -9,18 +9,18 @@ License, or (at your option) any later v
 
 The GNU C Library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Library General Public License for more details.
 
 You should have received a copy of the GNU Library General Public
 License along with the GNU C Library; see the file COPYING.LIB.  If
-not, write to the Free Software Foundation, Inc., 675 Mass Ave,
-Cambridge, MA 02139, USA.  */
+not, write to the Free Software Foundation, Inc., 59 Temple Place,
+Suite 330, Boston, MA 02111 USA.  */
 
 #ifdef HAVE_CONFIG_H
 # include <config.h>
 #endif
 
 #ifdef _LIBC
 # define USE_NUMBER_GROUPING
 # define STDC_HEADERS
diff --git a/kpathsea/win32lib.h b/kpathsea/win32lib.h
--- a/kpathsea/win32lib.h
+++ b/kpathsea/win32lib.h
@@ -10,17 +10,18 @@ any later version.
 
 Web2C is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with Web2C; see the file COPYING.  If not, write to
-the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */
+the Free Software Foundation, 59 Temple Place, Suite 330, Boston, MA
+02111 USA.  */
 
 #ifndef KPATHSEA_WIN32LIB_H
 #define KPATHSEA_WIN32LIB_H
 
 /*
  *      Define symbols to identify the version of Unix this is.
  *      Define all the symbols that apply correctly.
  */
diff --git a/liboctave/filemode.c b/liboctave/filemode.c
--- a/liboctave/filemode.c
+++ b/liboctave/filemode.c
@@ -8,17 +8,17 @@
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.  */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
diff --git a/liboctave/mkdir.c b/liboctave/mkdir.c
--- a/liboctave/mkdir.c
+++ b/liboctave/mkdir.c
@@ -8,17 +8,17 @@
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.  */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_MKDIR
 
 #ifdef HAVE_SYS_TYPES_H
diff --git a/liboctave/rename.c b/liboctave/rename.c
--- a/liboctave/rename.c
+++ b/liboctave/rename.c
@@ -8,17 +8,17 @@
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.  */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_RENAME
 
 #ifdef HAVE_SYS_TYPES_H
diff --git a/liboctave/rmdir.c b/liboctave/rmdir.c
--- a/liboctave/rmdir.c
+++ b/liboctave/rmdir.c
@@ -8,17 +8,17 @@
 
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
-   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */
+   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.  */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifndef HAVE_RMDIR
 
 #ifdef HAVE_SYS_TYPES_H
diff --git a/readline/COPYING b/readline/COPYING
--- a/readline/COPYING
+++ b/readline/COPYING
@@ -1,13 +1,13 @@
 		    GNU GENERAL PUBLIC LICENSE
 		       Version 2, June 1991
 
  Copyright (C) 1989, 1991 Free Software Foundation, Inc.
-                          675 Mass Ave, Cambridge, MA 02139, USA
+                          59 Temple Place, Suite 330, Boston, MA 02111 USA
  Everyone is permitted to copy and distribute verbatim copies
  of this license document, but changing it is not allowed.
 
 			    Preamble
 
   The licenses for most software are designed to take away your
 freedom to share and change it.  By contrast, the GNU General Public
 License is intended to guarantee your freedom to share and change free
@@ -300,17 +300,17 @@ the "copyright" line and a pointer to wh
 
     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
 
     You should have received a copy of the GNU General Public License
     along with this program; if not, write to the Free Software
-    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 Also add information on how to contact you by electronic and paper mail.
 
 If the program is interactive, make it output a short notice like this
 when it starts in an interactive mode:
 
     Gnomovision version 69, Copyright (C) 19yy name of author
     Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
diff --git a/readline/Makefile.in b/readline/Makefile.in
--- a/readline/Makefile.in
+++ b/readline/Makefile.in
@@ -9,17 +9,17 @@
 
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 RL_LIBRARY_VERSION = @LIBVERSION@
 RL_LIBRARY_NAME = readline
 
 srcdir = @srcdir@
 VPATH = .:@srcdir@
 top_srcdir = @top_srcdir@
 BUILD_DIR = .
 
diff --git a/readline/ansi_stdlib.h b/readline/ansi_stdlib.h
--- a/readline/ansi_stdlib.h
+++ b/readline/ansi_stdlib.h
@@ -13,17 +13,17 @@
 
    Bash is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.
 
    You should have received a copy of the GNU General Public License along
    with Bash; see the file COPYING.  If not, write to the Free Software
-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_STDLIB_H_)
 #define	_STDLIB_H_ 1
 
 /* String conversion functions. */
 extern int atoi ();
 extern long int atol ();
 
diff --git a/readline/bind.c b/readline/bind.c
--- a/readline/bind.c
+++ b/readline/bind.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <stdio.h>
 #include <sys/types.h>
diff --git a/readline/callback.c b/readline/callback.c
--- a/readline/callback.c
+++ b/readline/callback.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include "rlconf.h"
 
diff --git a/readline/chardefs.h b/readline/chardefs.h
--- a/readline/chardefs.h
+++ b/readline/chardefs.h
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #ifndef _CHARDEFS_H_
 #define _CHARDEFS_H_
 
 #include <ctype.h>
 
 #if defined (HAVE_CONFIG_H)
 #  if defined (HAVE_STRING_H)
diff --git a/readline/complete.c b/readline/complete.c
--- a/readline/complete.c
+++ b/readline/complete.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include <fcntl.h>
diff --git a/readline/display.c b/readline/display.c
--- a/readline/display.c
+++ b/readline/display.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/doc/hist.texinfo b/readline/doc/hist.texinfo
--- a/readline/doc/hist.texinfo
+++ b/readline/doc/hist.texinfo
@@ -52,18 +52,18 @@ by the Foundation.
 @author Chet Ramey, Case Western Reserve University
 
 @page
 This document describes the GNU History library, a programming tool that
 provides a consistent user interface for recalling lines of previously
 typed input.
 
 Published by the Free Software Foundation @*
-675 Massachusetts Avenue, @*
-Cambridge, MA 02139 USA
+59 Temple Place, Suite 330, @*
+Boston, MA 02111 USA
 
 Permission is granted to make and distribute verbatim copies of
 this manual provided the copyright notice and this permission notice
 are preserved on all copies.
 
 Permission is granted to copy and distribute modified versions of this
 manual under the conditions for verbatim copying, provided that the entire
 resulting derived work is distributed under the terms of a permission
diff --git a/readline/doc/rlman.texinfo b/readline/doc/rlman.texinfo
--- a/readline/doc/rlman.texinfo
+++ b/readline/doc/rlman.texinfo
@@ -52,18 +52,18 @@ by the Foundation.
 @author Chet Ramey, Case Western Reserve University
 
 @page
 This document describes the GNU Readline Library, a utility which aids
 in the consistency of user interface across discrete programs that need
 to provide a command line interface.
 
 Published by the Free Software Foundation @*
-675 Massachusetts Avenue, @*
-Cambridge, MA 02139 USA
+59 Temple Place, Suite 330, @*
+Boston, MA 02111 USA
 
 Permission is granted to make and distribute verbatim copies of
 this manual provided the copyright notice and this permission notice
 are preserved on all copies.
 
 Permission is granted to copy and distribute modified versions of this
 manual under the conditions for verbatim copying, provided that the entire
 resulting derived work is distributed under the terms of a permission
diff --git a/readline/doc/texinfo.tex b/readline/doc/texinfo.tex
--- a/readline/doc/texinfo.tex
+++ b/readline/doc/texinfo.tex
@@ -9,18 +9,18 @@
 
 %This texinfo.tex file is distributed in the hope that it will be
 %useful, but WITHOUT ANY WARRANTY; without even the implied warranty
 %of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 %General Public License for more details.
 
 %You should have received a copy of the GNU General Public License
 %along with this texinfo.tex file; see the file COPYING.  If not, write
-%to the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139,
-%USA.
+%to the Free Software Foundation, 59 Temple Place, Suite 330, Boston,
+%MA 02111 USA.
 
 
 %In other words, you are welcome to use, share and improve this program.
 %You are forbidden to forbid anyone else to use, share and improve
 %what you give them.   Help stamp out software-hoarding!
 
 
 % Send bug reports to bug-texinfo@prep.ai.mit.edu.
@@ -29,17 +29,17 @@
 
 % Make it possible to create a .fmt file just by loading this file:
 % if the underlying format is not loaded, start by loading it now.
 % Added by gildea November 1993.
 \expandafter\ifx\csname fmtname\endcsname\relax\input plain\fi
 
 % This automatically updates the version number based on RCS.
 \def\deftexinfoversion$#1: #2 ${\def\texinfoversion{#2}}
-\deftexinfoversion$Revision: 1.1 $
+\deftexinfoversion$Revision: 1.2 $
 \message{Loading texinfo package [Version \texinfoversion]:}
 
 % If in a .fmt file, print the version number
 % and turn on active characters that we couldn't do earlier because
 % they might have appeared in the input file name.
 \everyjob{\message{[Texinfo version \texinfoversion]}\message{}
   \catcode`+=\active \catcode`\_=\active}
 
@@ -118,17 +118,17 @@
 %---------------------Begin change-----------------------
 %
 %%%% For @cropmarks command.
 % Dimensions to add cropmarks at corners Added by P. A. MacKay, 12 Nov. 1986
 %
 \newdimen\cornerlong \newdimen\cornerthick
 \newdimen \topandbottommargin
 \newdimen \outerhsize \newdimen \outervsize
-\cornerlong=1pc\cornerthick=.3pt	% These set size of cropmarks
+\cornerlong=1pc\cornerthick=.3pt        % These set size of cropmarks
 \outerhsize=7in
 %\outervsize=9.5in
 % Alternative @smallbook page size is 9.25in
 \outervsize=9.25in
 \topandbottommargin=.75in
 %
 %---------------------End change-----------------------
 
@@ -148,38 +148,38 @@
 % Here is a modification of the main output routine for Near East Publications
 % This provides right-angle cropmarks at all four corners.
 % The contents of the page are centerlined into the cropmarks,
 % and any desired binding offset is added as an \hskip on either
 % site of the centerlined box.  (P. A. MacKay, 12 November, 1986)
 %
 \def\croppageout#1{\hoffset=0pt % make sure this doesn't mess things up
 {\escapechar=`\\\relax % makes sure backslash is used in output files.
-		 \shipout
-		 \vbox to \outervsize{\hsize=\outerhsize
+                 \shipout
+                 \vbox to \outervsize{\hsize=\outerhsize
                  \vbox{\line{\ewtop\hfill\ewtop}}
                  \nointerlineskip
                  \line{\vbox{\moveleft\cornerthick\nstop}
                        \hfill
                        \vbox{\moveright\cornerthick\nstop}}
                  \vskip \topandbottommargin
                  \centerline{\ifodd\pageno\hskip\bindingoffset\fi
-			\vbox{
-			{\let\hsize=\pagewidth \makeheadline}
-			\pagebody{#1}
-			{\let\hsize=\pagewidth \makefootline}}
-			\ifodd\pageno\else\hskip\bindingoffset\fi}
-		 \vskip \topandbottommargin plus1fill minus1fill
+                        \vbox{
+                        {\let\hsize=\pagewidth \makeheadline}
+                        \pagebody{#1}
+                        {\let\hsize=\pagewidth \makefootline}}
+                        \ifodd\pageno\else\hskip\bindingoffset\fi}
+                 \vskip \topandbottommargin plus1fill minus1fill
                  \boxmaxdepth\cornerthick
                  \line{\vbox{\moveleft\cornerthick\nsbot}
                        \hfill
                        \vbox{\moveright\cornerthick\nsbot}}
                  \nointerlineskip
                  \vbox{\line{\ewbot\hfill\ewbot}}
-	}}
+        }}
   \advancepageno
   \ifnum\outputpenalty>-20000 \else\dosupereject\fi}
 %
 % Do @cropmarks to get crop marks
 \def\cropmarks{\let\onepageout=\croppageout }
 
 \newinsert\margin \dimen\margin=\maxdimen
 
@@ -780,19 +780,19 @@ where each line of input produces a line
 % @clear VAR clears (i.e., unsets) the variable VAR.
 %
 \def\clear{\parsearg\clearxxx}
 \def\clearxxx#1{\global\expandafter\let\csname SET#1\endcsname=\relax}
 
 % @value{foo} gets the text saved in variable foo.
 %
 \def\value#1{\expandafter
-		\ifx\csname SET#1\endcsname\relax
-			{\{No value for ``#1''\}}
-		\else \csname SET#1\endcsname \fi}
+                \ifx\csname SET#1\endcsname\relax
+                        {\{No value for ``#1''\}}
+                \else \csname SET#1\endcsname \fi}
 
 % @ifset VAR ... @end ifset reads the `...' iff VAR has been defined
 % with @set.
 %
 \def\ifset{\parsearg\ifsetxxx}
 \def\ifsetxxx #1{%
   \expandafter\ifx\csname SET#1\endcsname\relax
     \expandafter\ifsetfail
@@ -993,19 +993,19 @@ where each line of input produces a line
 \font\secsy=cmsy10 scaled \magstep2
 
 % \setfont\ssecrm{bx10 scaled \magstep1}    % This size an font looked bad.
 % \setfont\ssecit{cmti10 scaled \magstep1}    % The letters were too crowded.
 % \setfont\ssecsl{sl10 scaled \magstep1}
 % \setfont\ssectt{tt10 scaled \magstep1}
 % \setfont\ssecsf{ss10 scaled \magstep1}
 
-%\setfont\ssecrm{b10 scaled 1315}	% Note the use of cmb rather than cmbx.
-%\setfont\ssecit{ti10 scaled 1315}	% Also, the size is a little larger than
-%\setfont\ssecsl{sl10 scaled 1315}	% being scaled magstep1.
+%\setfont\ssecrm{b10 scaled 1315}       % Note the use of cmb rather than cmbx.
+%\setfont\ssecit{ti10 scaled 1315}      % Also, the size is a little larger than
+%\setfont\ssecsl{sl10 scaled 1315}      % being scaled magstep1.
 %\setfont\ssectt{tt10 scaled 1315}
 %\setfont\ssecsf{ss10 scaled 1315}
 
 %\let\ssecbf=\ssecrm
 
 \setfont\ssecrm{bx12 scaled \magstephalf}
 \setfont\ssecit{ti12 scaled \magstephalf}
 \setfont\ssecsl{sl12 scaled \magstephalf}
@@ -1177,56 +1177,56 @@ where each line of input produces a line
 % Typeset a dimension, e.g., `in' or `pt'.  The only reason for the
 % argument is to make the input look right: @dmn{pt} instead of
 % @dmn{}pt.
 %
 \def\dmn#1{\thinspace #1}
 
 \def\kbd#1{\def\look{#1}\expandafter\kbdfoo\look??\par}
 
-\def\l#1{{\li #1}\null}		%
-
-\def\r#1{{\rm #1}}		% roman font
+\def\l#1{{\li #1}\null}         %
+
+\def\r#1{{\rm #1}}              % roman font
 % Use of \lowercase was suggested.
-\def\sc#1{{\smallcaps#1}}	% smallcaps font
-\def\ii#1{{\it #1}}		% italic font
+\def\sc#1{{\smallcaps#1}}       % smallcaps font
+\def\ii#1{{\it #1}}             % italic font
 
 \message{page headings,}
 
 \newskip\titlepagetopglue \titlepagetopglue = 1.5in
 \newskip\titlepagebottomglue \titlepagebottomglue = 2pc
 
 % First the title page.  Must do @settitle before @titlepage.
 \def\titlefont#1{{\titlerm #1}}
 
 \newif\ifseenauthor
 \newif\iffinishedtitlepage
 
 \def\shorttitlepage{\parsearg\shorttitlepagezzz}
 \def\shorttitlepagezzz #1{\begingroup\hbox{}\vskip 1.5in \chaprm \centerline{#1}%
-	\endgroup\page\hbox{}\page}
+        \endgroup\page\hbox{}\page}
 
 \def\titlepage{\begingroup \parindent=0pt \textfonts
    \let\subtitlerm=\tenrm
 % I deinstalled the following change because \cmr12 is undefined.
 % This change was not in the ChangeLog anyway.  --rms.
 %   \let\subtitlerm=\cmr12
    \def\subtitlefont{\subtitlerm \normalbaselineskip = 13pt \normalbaselines}%
    %
    \def\authorfont{\authorrm \normalbaselineskip = 16pt \normalbaselines}%
    %
    % Leave some space at the very top of the page.
    \vglue\titlepagetopglue
    %
    % Now you can print the title using @title.
    \def\title{\parsearg\titlezzz}%
    \def\titlezzz##1{\leftline{\titlefont{##1}}
-		    % print a rule at the page bottom also.
-		    \finishedtitlepagefalse
-		    \vskip4pt \hrule height 4pt width \hsize \vskip4pt}%
+                    % print a rule at the page bottom also.
+                    \finishedtitlepagefalse
+                    \vskip4pt \hrule height 4pt width \hsize \vskip4pt}%
    % No rule at page bottom unless we print one at the top with @title.
    \finishedtitlepagetrue
    %
    % Now you can put text using @subtitle.
    \def\subtitle{\parsearg\subtitlezzz}%
    \def\subtitlezzz##1{{\subtitlefont \rightline{##1}}}%
    %
    % @author should come last, but may come many times.
@@ -1234,17 +1234,17 @@ where each line of input produces a line
    \def\authorzzz##1{\ifseenauthor\else\vskip 0pt plus 1filll\seenauthortrue\fi
       {\authorfont \leftline{##1}}}%
    %
    % Most title ``pages'' are actually two pages long, with space
    % at the top of the second.  We don't want the ragged left on the second.
    \let\oldpage = \page
    \def\page{%
       \iffinishedtitlepage\else
-	 \finishtitlepage
+         \finishtitlepage
       \fi
       \oldpage
       \let\page = \oldpage
       \hbox{}}%
 %   \def\page{\oldpage \hbox{}}
 }
 
 \def\Etitlepage{%
@@ -1322,22 +1322,22 @@ where each line of input produces a line
 
 \gdef\everyfootingxxx #1{\everyfootingyyy #1@|@|@|@|\finish}
 \gdef\everyfootingyyy #1@|#2@|#3@|#4\finish{%
 \global\evenfootline={\rlap{\centerline{#2}}\line{#1\hfil#3}}
 \global\oddfootline={\rlap{\centerline{#2}}\line{#1\hfil#3}}}
 %
 }% unbind the catcode of @.
 
-% @headings double	turns headings on for double-sided printing.
-% @headings single	turns headings on for single-sided printing.
-% @headings off		turns them off.
-% @headings on		same as @headings double, retained for compatibility.
-% @headings after	turns on double-sided headings after this page.
-% @headings doubleafter	turns on double-sided headings after this page.
+% @headings double      turns headings on for double-sided printing.
+% @headings single      turns headings on for single-sided printing.
+% @headings off         turns them off.
+% @headings on          same as @headings double, retained for compatibility.
+% @headings after       turns on double-sided headings after this page.
+% @headings doubleafter turns on double-sided headings after this page.
 % @headings singleafter turns on single-sided headings after this page.
 % By default, they are off.
 
 \def\headings #1 {\csname HEADINGS#1\endcsname}
 
 \def\HEADINGSoff{
 \global\evenheadline={\hfil} \global\evenfootline={\hfil}
 \global\oddheadline={\hfil} \global\oddfootline={\hfil}}
@@ -1867,57 +1867,57 @@ July\or August\or September\or October\o
 % except not \outer, so it can be used within \newindex.
 {\catcode`\@=11
 \gdef\newwrite{\alloc@7\write\chardef\sixt@@n}}
 
 % \newindex {foo} defines an index named foo.
 % It automatically defines \fooindex such that
 % \fooindex ...rest of line... puts an entry in the index foo.
 % It also defines \fooindfile to be the number of the output channel for
-% the file that	accumulates this index.  The file's extension is foo.
+% the file that accumulates this index.  The file's extension is foo.
 % The name of an index should be no more than 2 characters long
 % for the sake of vms.
 
 \def\newindex #1{
 \expandafter\newwrite \csname#1indfile\endcsname% Define number for output file
-\openout \csname#1indfile\endcsname \jobname.#1	% Open the file
-\expandafter\xdef\csname#1index\endcsname{%	% Define \xxxindex
+\openout \csname#1indfile\endcsname \jobname.#1 % Open the file
+\expandafter\xdef\csname#1index\endcsname{%     % Define \xxxindex
 \noexpand\doindex {#1}}
 }
 
 % @defindex foo  ==  \newindex{foo}
 
 \def\defindex{\parsearg\newindex}
 
 % Define @defcodeindex, like @defindex except put all entries in @code.
 
 \def\newcodeindex #1{
 \expandafter\newwrite \csname#1indfile\endcsname% Define number for output file
-\openout \csname#1indfile\endcsname \jobname.#1	% Open the file
-\expandafter\xdef\csname#1index\endcsname{%	% Define \xxxindex
+\openout \csname#1indfile\endcsname \jobname.#1 % Open the file
+\expandafter\xdef\csname#1index\endcsname{%     % Define \xxxindex
 \noexpand\docodeindex {#1}}
 }
 
 \def\defcodeindex{\parsearg\newcodeindex}
 
 % @synindex foo bar    makes index foo feed into index bar.
 % Do this instead of @defindex foo if you don't want it as a separate index.
 \def\synindex #1 #2 {%
 \expandafter\let\expandafter\synindexfoo\expandafter=\csname#2indfile\endcsname
 \expandafter\let\csname#1indfile\endcsname=\synindexfoo
-\expandafter\xdef\csname#1index\endcsname{%	% Define \xxxindex
+\expandafter\xdef\csname#1index\endcsname{%     % Define \xxxindex
 \noexpand\doindex {#2}}%
 }
 
 % @syncodeindex foo bar   similar, but put all entries made for index foo
 % inside @code.
 \def\syncodeindex #1 #2 {%
 \expandafter\let\expandafter\synindexfoo\expandafter=\csname#2indfile\endcsname
 \expandafter\let\csname#1indfile\endcsname=\synindexfoo
-\expandafter\xdef\csname#1index\endcsname{%	% Define \xxxindex
+\expandafter\xdef\csname#1index\endcsname{%     % Define \xxxindex
 \noexpand\docodeindex {#2}}%
 }
 
 % Define \doindex, the driver for all \fooindex macros.
 % Argument #1 is generated by the calling \fooindex macro,
 %  and it is "foo", the name of the index.
 
 % \doindex just uses \parsearg; it calls \doind for the actual work.
@@ -2344,17 +2344,17 @@ July\or August\or September\or October\o
     \setbox2=\vtop to\dimen@{\unvbox2}
     \onepageout\pagesofar \unvbox255 \penalty\outputpenalty
   \else
     \setbox0=\vbox{\unvbox5}
     \ifvbox0
       \dimen@=\ht0 \advance\dimen@ by\topskip \advance\dimen@ by-\baselineskip
       \divide\dimen@ by2 \splittopskip=\topskip \splitmaxdepth=\maxdepth
       {\vbadness=10000
-	\loop \global\setbox5=\copy0
+        \loop \global\setbox5=\copy0
           \setbox1=\vsplit5 to\dimen@
           \setbox3=\vsplit5 to\dimen@
           \ifvbox5 \global\advance\dimen@ by1pt \repeat
         \setbox0=\vbox to\dimen@{\unvbox1}
         \setbox2=\vbox to\dimen@{\unvbox3}
         \global\setbox\partialpage=\vbox{\pagesofar}
         \doublecolumnpagegoal
       }
@@ -2714,20 +2714,20 @@ July\or August\or September\or October\o
 \global\let\section = \numberedsec
 \global\let\subsection = \numberedsubsec
 \global\let\subsubsection = \numberedsubsubsec
 
 % Define @majorheading, @heading and @subheading
 
 % NOTE on use of \vbox for chapter headings, section headings, and
 % such:
-%	1) We use \vbox rather than the earlier \line to permit
-%	   overlong headings to fold.
-%	2) \hyphenpenalty is set to 10000 because hyphenation in a
-%	   heading is obnoxious; this forbids it.
+%       1) We use \vbox rather than the earlier \line to permit
+%          overlong headings to fold.
+%       2) \hyphenpenalty is set to 10000 because hyphenation in a
+%          heading is obnoxious; this forbids it.
 %       3) Likewise, headings look best if no \parindent is used, and
 %          if justification is not attempted.  Hence \raggedright.
 
 
 \def\majorheading{\parsearg\majorheadingzzz}
 \def\majorheadingzzz #1{%
 {\advance\chapheadingskip by 10pt \chapbreak }%
 {\chapfonts \vbox{\hyphenpenalty=10000\tolerance=5000
@@ -2851,18 +2851,18 @@ July\or August\or September\or October\o
 \def\subsecheadingi #1{{\advance \subsecheadingskip by \parskip %
 \subsecheadingbreak}%
 {\subsecfonts \vbox{\hyphenpenalty=10000\tolerance=5000
                      \parindent=0pt\raggedright
                      \rm #1\hfill}}%
 \ifdim \parskip<10pt \kern 10pt\kern -\parskip\fi \penalty 10000 }
 
 \def\subsubsecfonts{\subsecfonts} % Maybe this should change:
-				  % Perhaps make sssec fonts scaled
-				  % magstep half
+                                  % Perhaps make sssec fonts scaled
+                                  % magstep half
 \def\subsubsecheading #1#2#3#4#5{\subsubsecheadingi {#2.#3.#4.#5\enspace #1}}
 \def\subsubsecheadingi #1{{\advance \subsecheadingskip by \parskip %
 \subsecheadingbreak}%
 {\subsubsecfonts \vbox{\hyphenpenalty=10000\tolerance=5000
                        \parindent=0pt\raggedright
                        \rm #1\hfill}}%
 \ifdim \parskip<10pt \kern 10pt\kern -\parskip\fi \penalty 10000}
 
@@ -2872,22 +2872,22 @@ July\or August\or September\or October\o
 % Finish up the main text and prepare to read what we've written
 % to \contentsfile.
 
 \newskip\contentsrightmargin \contentsrightmargin=1in
 \def\startcontents#1{%
    \pagealignmacro
    \immediate\closeout \contentsfile
    \ifnum \pageno>0
-      \pageno = -1		% Request roman numbered pages.
+      \pageno = -1              % Request roman numbered pages.
    \fi
    % Don't need to put `Contents' or `Short Contents' in the headline.
    % It is abundantly clear what they are.
    \unnumbchapmacro{#1}\def\thischapter{}%
-   \begingroup   		% Set up to handle contents files properly.
+   \begingroup                  % Set up to handle contents files properly.
       \catcode`\\=0  \catcode`\{=1  \catcode`\}=2  \catcode`\@=11
       \catcode`\^=7 % to see ^^e4 as \"a etc. juha@piuha.ydi.vtt.fi
       \raggedbottom             % Worry more about breakpoints than the bottom.
       \advance\hsize by -\contentsrightmargin % Don't use the full line length.
 }
 
 
 % Normal (long) toc.
@@ -3156,60 +3156,60 @@ July\or August\or September\or October\o
 \newskip\normbskip\newskip\normpskip\newskip\normlskip
 \circthick=\fontdimen8\circle
 %
 \def\ctl{{\circle\char'013\hskip -6pt}}% 6pt from pl file: 1/2charwidth
 \def\ctr{{\hskip 6pt\circle\char'010}}
 \def\cbl{{\circle\char'012\hskip -6pt}}
 \def\cbr{{\hskip 6pt\circle\char'011}}
 \def\carttop{\hbox to \cartouter{\hskip\lskip
-	\ctl\leaders\hrule height\circthick\hfil\ctr
-	\hskip\rskip}}
+        \ctl\leaders\hrule height\circthick\hfil\ctr
+        \hskip\rskip}}
 \def\cartbot{\hbox to \cartouter{\hskip\lskip
-	\cbl\leaders\hrule height\circthick\hfil\cbr
-	\hskip\rskip}}
+        \cbl\leaders\hrule height\circthick\hfil\cbr
+        \hskip\rskip}}
 %
 \newskip\lskip\newskip\rskip
 
 \long\def\cartouche{%
 \begingroup
-	\lskip=\leftskip \rskip=\rightskip
-	\leftskip=0pt\rightskip=0pt %we want these *outside*.
-	\cartinner=\hsize \advance\cartinner by-\lskip
-		 	  \advance\cartinner by-\rskip
-	\cartouter=\hsize
-	\advance\cartouter by 18pt % allow for 3pt kerns on either
-%				     side, and for 6pt waste from
-%				     each corner char
-	\normbskip=\baselineskip \normpskip=\parskip \normlskip=\lineskip
-	% Flag to tell @lisp, etc., not to narrow margin.
-	\let\nonarrowing=\comment
-	\vbox\bgroup
-		\baselineskip=0pt\parskip=0pt\lineskip=0pt
-		\carttop
-		\hbox\bgroup
-			\hskip\lskip
-			\vrule\kern3pt
-			\vbox\bgroup
-				\hsize=\cartinner
-				\kern3pt
-				\begingroup
-					\baselineskip=\normbskip
-					\lineskip=\normlskip
-					\parskip=\normpskip
-					\vskip -\parskip
+        \lskip=\leftskip \rskip=\rightskip
+        \leftskip=0pt\rightskip=0pt %we want these *outside*.
+        \cartinner=\hsize \advance\cartinner by-\lskip
+                          \advance\cartinner by-\rskip
+        \cartouter=\hsize
+        \advance\cartouter by 18pt % allow for 3pt kerns on either
+%                                    side, and for 6pt waste from
+%                                    each corner char
+        \normbskip=\baselineskip \normpskip=\parskip \normlskip=\lineskip
+        % Flag to tell @lisp, etc., not to narrow margin.
+        \let\nonarrowing=\comment
+        \vbox\bgroup
+                \baselineskip=0pt\parskip=0pt\lineskip=0pt
+                \carttop
+                \hbox\bgroup
+                        \hskip\lskip
+                        \vrule\kern3pt
+                        \vbox\bgroup
+                                \hsize=\cartinner
+                                \kern3pt
+                                \begingroup
+                                        \baselineskip=\normbskip
+                                        \lineskip=\normlskip
+                                        \parskip=\normpskip
+                                        \vskip -\parskip
 \def\Ecartouche{%
-				\endgroup
-				\kern3pt
-			\egroup
-			\kern3pt\vrule
-			\hskip\rskip
-		\egroup
-		\cartbot
-	\egroup
+                                \endgroup
+                                \kern3pt
+                        \egroup
+                        \kern3pt\vrule
+                        \hskip\rskip
+                \egroup
+                \cartbot
+        \egroup
 \endgroup
 }}
 
 
 % This macro is called at the beginning of all the @example variants,
 % inside a group.
 \def\nonfillstart{%
   \aboveenvbreak
diff --git a/readline/emacs_keymap.c b/readline/emacs_keymap.c
--- a/readline/emacs_keymap.c
+++ b/readline/emacs_keymap.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (BUFSIZ)
 #include <stdio.h>
 #endif /* !BUFSIZ */
 
 #include "readline.h"
 
 /* An array of function pointers, one for each possible key.
diff --git a/readline/funmap.c b/readline/funmap.c
--- a/readline/funmap.c
+++ b/readline/funmap.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 extern char *xmalloc (), *xrealloc ();
 
diff --git a/readline/histexpand.c b/readline/histexpand.c
--- a/readline/histexpand.c
+++ b/readline/histexpand.c
@@ -13,17 +13,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <stdio.h>
diff --git a/readline/histfile.c b/readline/histfile.c
--- a/readline/histfile.c
+++ b/readline/histfile.c
@@ -13,17 +13,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 /* The goal is to make the implementation transparent, so that you
    don't have to know what data types are used, just what functions
    you can call.  I think I have done that. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
diff --git a/readline/histlib.h b/readline/histlib.h
--- a/readline/histlib.h
+++ b/readline/histlib.h
@@ -12,17 +12,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_HISTLIB_H_)
 #define _HISTLIB_H_
 
 /* Function pointers can be declared as (Function *)foo. */
 #if !defined (_FUNCTION_DEF)
 #  define _FUNCTION_DEF
 typedef int Function ();
diff --git a/readline/history.c b/readline/history.c
--- a/readline/history.c
+++ b/readline/history.c
@@ -13,17 +13,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 /* The goal is to make the implementation transparent, so that you
    don't have to know what data types are used, just what functions
    you can call.  I think I have done that. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
diff --git a/readline/history.h b/readline/history.h
--- a/readline/history.h
+++ b/readline/history.h
@@ -12,17 +12,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #ifndef _HISTORY_H_
 #define _HISTORY_H_
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
diff --git a/readline/histsearch.c b/readline/histsearch.c
--- a/readline/histsearch.c
+++ b/readline/histsearch.c
@@ -13,17 +13,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <stdio.h>
diff --git a/readline/input.c b/readline/input.c
--- a/readline/input.c
+++ b/readline/input.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include <fcntl.h>
diff --git a/readline/isearch.c b/readline/isearch.c
--- a/readline/isearch.c
+++ b/readline/isearch.c
@@ -18,17 +18,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/keymaps.c b/readline/keymaps.c
--- a/readline/keymaps.c
+++ b/readline/keymaps.c
@@ -12,17 +12,17 @@
 
    Readline is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with Readline; see the file COPYING.  If not, write to the Free
-   Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #if defined (HAVE_STDLIB_H)
 #  include <stdlib.h>
diff --git a/readline/keymaps.h b/readline/keymaps.h
--- a/readline/keymaps.h
+++ b/readline/keymaps.h
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #ifndef _KEYMAPS_H_
 #define _KEYMAPS_H_
 
 #if defined (READLINE_LIBRARY)
 #  include "chardefs.h"
 #else
 #  include <readline/chardefs.h>
diff --git a/readline/kill.c b/readline/kill.c
--- a/readline/kill.c
+++ b/readline/kill.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/macro.c b/readline/macro.c
--- a/readline/macro.c
+++ b/readline/macro.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/nls.c b/readline/nls.c
--- a/readline/nls.c
+++ b/readline/nls.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/parens.c b/readline/parens.c
--- a/readline/parens.c
+++ b/readline/parens.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #include "rlconf.h"
 
 #if !defined (PAREN_MATCHING)
 extern int rl_insert ();
 
 int
diff --git a/readline/posixdir.h b/readline/posixdir.h
--- a/readline/posixdir.h
+++ b/readline/posixdir.h
@@ -11,17 +11,17 @@
 
    Bash is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
    License for more details.
 
    You should have received a copy of the GNU General Public License
    along with Bash; see the file COPYING.  If not, write to the Free
-   Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 /* This file should be included instead of <dirent.h> or <sys/dir.h>. */
 
 #if !defined (_POSIXDIR_H_)
 #define _POSIXDIR_H_
 
 #if defined (HAVE_DIRENT_H)
 #  include <dirent.h>
diff --git a/readline/posixstat.h b/readline/posixstat.h
--- a/readline/posixstat.h
+++ b/readline/posixstat.h
@@ -12,17 +12,17 @@
 
    Bash is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
    License for more details.
 
    You should have received a copy of the GNU General Public License
    along with Bash; see the file COPYING.  If not, write to the Free
-   Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 /* This file should be included instead of <sys/stat.h>.
    It relies on the local sys/stat.h to work though. */
 #if !defined (_POSIXSTAT_H_)
 #define _POSIXSTAT_H_
 
 #include <sys/stat.h>
 
diff --git a/readline/readline.c b/readline/readline.c
--- a/readline/readline.c
+++ b/readline/readline.c
@@ -14,17 +14,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include "posixstat.h"
diff --git a/readline/readline.h b/readline/readline.h
--- a/readline/readline.h
+++ b/readline/readline.h
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_READLINE_H_)
 #define _READLINE_H_
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
diff --git a/readline/rlconf.h b/readline/rlconf.h
--- a/readline/rlconf.h
+++ b/readline/rlconf.h
@@ -14,17 +14,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_RLCONF_H_)
 #define _RLCONF_H_
 
 /* Define this if you want the vi-mode editing available. */
 #define VI_MODE
 
 /* Define this to get an indication of file type when listing completions. */
diff --git a/readline/rldefs.h b/readline/rldefs.h
--- a/readline/rldefs.h
+++ b/readline/rldefs.h
@@ -16,17 +16,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_RLDEFS_H_)
 #define _RLDEFS_H_
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
diff --git a/readline/rltty.c b/readline/rltty.c
--- a/readline/rltty.c
+++ b/readline/rltty.c
@@ -14,17 +14,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include <signal.h>
diff --git a/readline/rltty.h b/readline/rltty.h
--- a/readline/rltty.h
+++ b/readline/rltty.h
@@ -14,17 +14,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_RLTTY_H_)
 #define _RLTTY_H
 
 /* Posix systems use termios and the Posix signal functions. */
 #if defined (TERMIOS_TTY_DRIVER)
 #  include <termios.h>
 #endif /* TERMIOS_TTY_DRIVER */
diff --git a/readline/search.c b/readline/search.c
--- a/readline/search.c
+++ b/readline/search.c
@@ -14,17 +14,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include <stdio.h>
diff --git a/readline/shell.c b/readline/shell.c
--- a/readline/shell.c
+++ b/readline/shell.c
@@ -14,17 +14,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #if defined (HAVE_UNISTD_H)
 #  include <unistd.h>
diff --git a/readline/signals.c b/readline/signals.c
--- a/readline/signals.c
+++ b/readline/signals.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <stdio.h>		/* Just for NULL.  Yuck. */
 #include <sys/types.h>
diff --git a/readline/tcap.h b/readline/tcap.h
--- a/readline/tcap.h
+++ b/readline/tcap.h
@@ -14,17 +14,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_RLTCAP_H_)
 #define _RLTCAP_H_
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
diff --git a/readline/terminal.c b/readline/terminal.c
--- a/readline/terminal.c
+++ b/readline/terminal.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include "posixstat.h"
diff --git a/readline/tilde.c b/readline/tilde.c
--- a/readline/tilde.c
+++ b/readline/tilde.c
@@ -12,17 +12,17 @@
 
    Readline is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with Readline; see the file COPYING.  If not, write to the Free
-   Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #if defined (HAVE_UNISTD_H)
 #  include <unistd.h>
 #endif
diff --git a/readline/tilde.h b/readline/tilde.h
--- a/readline/tilde.h
+++ b/readline/tilde.h
@@ -14,17 +14,17 @@
    The Library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (_TILDE_H_)
 #  define _TILDE_H_
 
 /* Function pointers can be declared as (Function *)foo. */
 #if !defined (_FUNCTION_DEF)
 #  define _FUNCTION_DEF
 typedef int Function ();
diff --git a/readline/undo.c b/readline/undo.c
--- a/readline/undo.c
+++ b/readline/undo.c
@@ -14,17 +14,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 
diff --git a/readline/util.c b/readline/util.c
--- a/readline/util.c
+++ b/readline/util.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 #if defined (HAVE_CONFIG_H)
 #  include <config.h>
 #endif
 
 #include <sys/types.h>
 #include <fcntl.h>
diff --git a/readline/vi_keymap.c b/readline/vi_keymap.c
--- a/readline/vi_keymap.c
+++ b/readline/vi_keymap.c
@@ -13,17 +13,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if !defined (BUFSIZ)
 #include <stdio.h>
 #endif /* !BUFSIZ */
 
 #include "readline.h"
 
 #if 0
diff --git a/readline/vi_mode.c b/readline/vi_mode.c
--- a/readline/vi_mode.c
+++ b/readline/vi_mode.c
@@ -14,17 +14,17 @@
    The GNU Readline Library is distributed in the hope that it will be
    useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
 
    The GNU General Public License is often shipped with GNU software, and
    is generally kept in a file called COPYING or LICENSE.  If you do not
    have a copy of the license, write to the Free Software Foundation,
-   675 Mass Ave, Cambridge, MA 02139, USA. */
+   59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 #define READLINE_LIBRARY
 
 /* **************************************************************** */
 /*								    */
 /*			VI Emulation Mode			    */
 /*								    */
 /* **************************************************************** */
 #include "rlconf.h"
diff --git a/readline/xmalloc.c b/readline/xmalloc.c
--- a/readline/xmalloc.c
+++ b/readline/xmalloc.c
@@ -12,17 +12,17 @@
 
    Readline is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.
 
    You should have received a copy of the GNU General Public License
    along with Readline; see the file COPYING.  If not, write to the Free
-   Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. */
+   Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
 #if defined (HAVE_CONFIG_H)
 #include <config.h>
 #endif
 
 #include <stdio.h>
 
 #if defined (HAVE_STDLIB_H)
diff --git a/scripts/control/DEMOcontrol.m b/scripts/control/DEMOcontrol.m
--- a/scripts/control/DEMOcontrol.m
+++ b/scripts/control/DEMOcontrol.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function DEMOcontrol()
 # Controls toolbox demo.
 # Demo programs: bddemo.m, frdemo.m, analdemo.m, moddmeo.m, rldemo.m
 #  
 # Written by David Clem August 15, 1994
 
   disp(' O C T A V E    C O N T R O L   S Y S T E M S   T O O L B O X')
diff --git a/scripts/control/abcddim.m b/scripts/control/abcddim.m
--- a/scripts/control/abcddim.m
+++ b/scripts/control/abcddim.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [n, m, p] = abcddim (a, b, c, d)
 
 # Usage: [n, m, p] = abcddim (a, b, c, d)
 #
 # Check for compatibility of the dimensions of the matrices defining
 # the linear system (a, b, c, d).
 #
diff --git a/scripts/control/abcddims.m b/scripts/control/abcddims.m
--- a/scripts/control/abcddims.m
+++ b/scripts/control/abcddims.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [y,my,ny] = abcddims (x)
 
 # Usage: [y,my,ny] = abcddims (x)
 #
 # Used internally in abcddim.  If x is a zero-size matrix, both dimensions
 # get set to 0.  my and ny are the row and column dimensions of the result.
 
diff --git a/scripts/control/analdemo.m b/scripts/control/analdemo.m
--- a/scripts/control/analdemo.m
+++ b/scripts/control/analdemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function analdemo()
 # Octave Controls toolbox demo: State Space analysis demo
 # Written by David Clem August 15, 1994
 # Updated by John Ingram December 1996
   
   while (1)
     clc
diff --git a/scripts/control/are.m b/scripts/control/are.m
--- a/scripts/control/are.m
+++ b/scripts/control/are.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function x = are (a, b, c, opt)
 
 # Usage: x = are (a, b, c {,opt})
 #
 # Solves algebraic riccati equation
 #
 #   a' x + x a - x b x + c = 0
diff --git a/scripts/control/axis2dlim.m b/scripts/control/axis2dlim.m
--- a/scripts/control/axis2dlim.m
+++ b/scripts/control/axis2dlim.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
 
 function axvec = axis2dlim(axdata)
 # function axvec = axis2dlim(axdata)
 # determine axis limits for 2-d data; leaves a 10% margin around the plots.
 # puts in margins of +/- 0.1 if data is one dimensional (or a single point)
 # inputs:
 #   axdata: nx2 matrix of data [x,y]
 # outputs:
diff --git a/scripts/control/bddemo.m b/scripts/control/bddemo.m
--- a/scripts/control/bddemo.m
+++ b/scripts/control/bddemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function bddemo()
 # Octave Controls toolbox demo: Block Diagram Manipulations demo
 # Written by David Clem August 15, 1994
 # Modified by A S Hodel Summer-Fall 1996
 
   str_sav = implicit_str_to_num_ok;
   sav_page = page_screen_output;
diff --git a/scripts/control/bode.m b/scripts/control/bode.m
--- a/scripts/control/bode.m
+++ b/scripts/control/bode.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [mag,phase,w] = bode(sys,w,outputs,inputs,plot_style)
 # [mag,phase,w] = bode(sys[,w,outputs,inputs,plot_style])
 # Produce Bode plots of a system
 #
 # Compute the frequency response of a system.
 # inputs:
 #   sys: system data structure (must be either purely continuous or discrete;
diff --git a/scripts/control/bode_bounds.m b/scripts/control/bode_bounds.m
--- a/scripts/control/bode_bounds.m
+++ b/scripts/control/bode_bounds.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [wmin,wmax] = bode_bounds(zer,pol,DIGITAL,tsam)
 # function [wmin,wmax] = bode_bounds(zer,pol,DIGITAL{,tsam})
 # get default range of frequencies for system zeros and poles
 #
 # frequency range is the interval [10^wmin,10^wmax]
 #
 # used internally in freqresp
diff --git a/scripts/control/bodquist.m b/scripts/control/bodquist.m
--- a/scripts/control/bodquist.m
+++ b/scripts/control/bodquist.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [f,w] = bodquist(sys,w,outputs,inputs,rname)
 # [f,w] = bodquist(sys,w,outputs,inputs)
 # used by bode, nyquist
 # inputs:
 #   sys: input system structure
 #   w: range of frequencies; empty if user wants default
 #   outputs:list of outputs; empty if user wants all
diff --git a/scripts/control/buildssic.m b/scripts/control/buildssic.m
--- a/scripts/control/buildssic.m
+++ b/scripts/control/buildssic.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [sys] = buildssic(Clst,Ulst,Olst,Ilst,s1,s2,s3,s4,s5,s6,s7,s8)
 #
 # [sys] = buildssic(Clst,Ulst,Olst,Ilst,s1,s2,s3,s4,s5,s6,s7,s8)
 #
 # Form an arbitrary complex (open or closed loop) system in
 # state-space form from several systems. "buildssic" can
 # easily (despite it's cryptic syntax) integrate transfer functions
diff --git a/scripts/control/c2d.m b/scripts/control/c2d.m
--- a/scripts/control/c2d.m
+++ b/scripts/control/c2d.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function dsys = c2d (sys, opt, T)
 
 # Usage: dsys = c2d (sys[, T])
 # Usage: dsys = c2d (sys[, opt[, T]])
 # inputs:
 #   sys: system data structure (may be mixed discrete/continiuous time)
 #   optional arguments:
diff --git a/scripts/control/com2str.m b/scripts/control/com2str.m
--- a/scripts/control/com2str.m
+++ b/scripts/control/com2str.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retval = com2str(zz,flg)
 # usage retval = com2str(zz{,flg})
 #  
 # convert complex number to a string
 # zz: complex number
 # flg: format flag
 #      0 (default):            -1, 0, 1,   1i,   1 + 0.5i
diff --git a/scripts/control/controldemo.m b/scripts/control/controldemo.m
--- a/scripts/control/controldemo.m
+++ b/scripts/control/controldemo.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function DEMOcontrol()
 # Controls toolbox demo.
 # Demo programs: bddemo.m, frdemo.m, analdemo.m, moddmeo.m, rldemo.m
 #  
 # Written by David Clem August 15, 1994
 
   disp(' O C T A V E    C O N T R O L   S Y S T E M S   T O O L B O X')
diff --git a/scripts/control/ctrb.m b/scripts/control/ctrb.m
--- a/scripts/control/ctrb.m
+++ b/scripts/control/ctrb.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
 
 function Qs = ctrb(sys, b)
   # ------------------------------------------------------
   # Qs = ctrb(sys [, b])
   # Build controllability matrix
   #
   #                  2       n-1
   #     Qs = [ B AB A B ... A   B
diff --git a/scripts/control/d2c.m b/scripts/control/d2c.m
--- a/scripts/control/d2c.m
+++ b/scripts/control/d2c.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function csys = d2c(sys,opt)
 # csys = d2c(sys[,tol])
 # csys = d2c(sys,opt)
 #
 # inputs: 
 #   sys: system data structure with discrete components
 #   tol: tolerance for convergence of default "log" option (see below)
diff --git a/scripts/control/damp.m b/scripts/control/damp.m
--- a/scripts/control/damp.m
+++ b/scripts/control/damp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function damp(p, tsam)
 # Usage: damp(p[, tsam])
 #      Displays eigenvalues, natural frequencies and damping ratios
 #      of the eigenvalues of a matrix p or the A-matrix of a
 #      system p, respectively.
 #      If p is a system, tsam must not be specified.
 #      If p is a matrix and tsam is specified, eigenvalues
diff --git a/scripts/control/dcgain.m b/scripts/control/dcgain.m
--- a/scripts/control/dcgain.m
+++ b/scripts/control/dcgain.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function gm = dcgain(sys, tol)
 # Usage: gm = dcgain(sys[, tol])
 #      Returns dc-gain matrix. If dc-gain is infinity
 #      an empty matrix is returned.
 #      The argument tol is an optional tolerance for the condition
 #      number of A-Matrix in sys (default tol = 1.0e-10)
 #      Prints a warning message of the system is unstable.
diff --git a/scripts/control/demomarsyas.m b/scripts/control/demomarsyas.m
--- a/scripts/control/demomarsyas.m
+++ b/scripts/control/demomarsyas.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 page_screen_output = 1;
 opt = 0;
 QUITOPT = 7;
 while (opt != QUITOPT)
   opt = menu("Marsyas interface update demo:", ...
 	"run Marsyas on the magnetically suspended ball example", ...
         "load continuous time marsyas example system", ...
diff --git a/scripts/control/dgkfdemo.m b/scripts/control/dgkfdemo.m
--- a/scripts/control/dgkfdemo.m
+++ b/scripts/control/dgkfdemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function dgkfdemo()
 # Octave Controls toolbox demo: H2/Hinfinity options demos
 # Written by A. S. Hodel June 1995
  
   save_val = page_screen_output;
   page_screen_output = 1;
   while (1)
diff --git a/scripts/control/dgram.m b/scripts/control/dgram.m
--- a/scripts/control/dgram.m
+++ b/scripts/control/dgram.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function m = dgram(a,b)
   # m = dgram(a,b)
   # Return controllability grammian of discrete time system
   #
   #  x(k+1) = a x(k) + b u(k)
   #
   # a m a' - m + b*b' = 0 
diff --git a/scripts/control/dhinfdemo.m b/scripts/control/dhinfdemo.m
--- a/scripts/control/dhinfdemo.m
+++ b/scripts/control/dhinfdemo.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 # ------------------------------------------------------------
 # dhinfdemo   Design of a discrete H_infinity controller.
 #             This is not a true discrete design. The design
 #             is carried out in continuous time while the
 #             effect of sampling is described by a bilinear
 #             transformation of the sampled system.
 #             This method works quite well if the sampling
diff --git a/scripts/control/dlqe.m b/scripts/control/dlqe.m
--- a/scripts/control/dlqe.m
+++ b/scripts/control/dlqe.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [l, m, p, e] = dlqe (a, g, c, sigw, sigv, s)
 
 # Usage: [l, m, p, e] = dlqe (A, G, C, SigW, SigV {,S})
 #
 # Linear quadratic estimator (Kalman filter) design for the 
 # discrete time system
 #
diff --git a/scripts/control/dlqg.m b/scripts/control/dlqg.m
--- a/scripts/control/dlqg.m
+++ b/scripts/control/dlqg.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [K,Q,P,Ee,Er] = dlqg(A,B,C,G,Sigw, Sigv,Q,R)
 #
 #
 #  O B S O L E T E * * * D O   N O T   U S E!
 #
 #  Use lqg instead.
 #
diff --git a/scripts/control/dlqr.m b/scripts/control/dlqr.m
--- a/scripts/control/dlqr.m
+++ b/scripts/control/dlqr.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [k, p, e] = dlqr (a, b, q, r, s)
 
 # Usage: [k, p, e] = dlqr (A, B, Q, R {,S})
 #
 # Linear quadratic regulator design for the discrete time system
 #
 #   x[k+1] = A x[k] + B u[k]
diff --git a/scripts/control/dlyap.m b/scripts/control/dlyap.m
--- a/scripts/control/dlyap.m
+++ b/scripts/control/dlyap.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function x = dlyap (a, b)
 
 # Usage: x = dlyap (a, b)
 #
 # Solve a x a' - x + b = 0 (discrete Lyapunov equation) for square
 # matrices a and b.  If b is not square, then the function attempts 
 # to solve either
diff --git a/scripts/control/dmr2d.m b/scripts/control/dmr2d.m
--- a/scripts/control/dmr2d.m
+++ b/scripts/control/dmr2d.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [dsys,fidx] = dmr2d (sys, idx, sprefix, Ts2,cuflg)
 
 # Usage: [dsys,fidx] = dmr2d (sys, idx, sprefix, Ts2 {,cuflg})
 # convert a multirate digital system to a single rate digital system
 # states specified by idx, sprefix are sampled at Ts2, all others
 # are sampled at Ts1 = sysgettsam(sys).
 # inputs:
diff --git a/scripts/control/dre.m b/scripts/control/dre.m
--- a/scripts/control/dre.m
+++ b/scripts/control/dre.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [tvals,Plist] = dre(sys,Q,R,Qf,t0,tf,Ptol,maxits)
 # [tvals,Plist] = dre(sys,Q,R,Qf,t0,tf{,Ptol,maxits});
 # Solve the differential Riccati equation
 #   -d P/dt = A'P + P A - P B inv(R) B' P + Q
 #   P(tf) = Qf
 # for the LTI system sys.  Solution of standard LTI
 # state feedback optimization
diff --git a/scripts/control/fir2sys.m b/scripts/control/fir2sys.m
--- a/scripts/control/fir2sys.m
+++ b/scripts/control/fir2sys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = fir2sys (num,tsam,inname,outname)
   #
   # outsys = fir2sys(num,{tsam,inname,outname})
   # construct a system data structure from FIR description
   # inputs:
   #   num: vector of coefficients [c0 c1 ... cn] of the SISO FIR transfer
   #        function C(z) = c0 + c1*z^{-1} + c2*z^{-2} + ... + znz^{-n}
diff --git a/scripts/control/frdemo.m b/scripts/control/frdemo.m
--- a/scripts/control/frdemo.m
+++ b/scripts/control/frdemo.m
@@ -9,17 +9,17 @@
 #  
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function frdemo()
 # Octave Controls toolbox demo: Frequency Response demo
 # Written by David Clem August 15, 1994 
 
 # a s hodel: updated to match new order of ss2zp outputs
 # J Ingram:  updated for system data structure format August 1996
 
diff --git a/scripts/control/freqchkw.m b/scripts/control/freqchkw.m
--- a/scripts/control/freqchkw.m
+++ b/scripts/control/freqchkw.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function USEW = freqchkw(w)
   # function USEW = freqchkw(w)
   # used by freqresp to check that input frequency vector is legal
 
   # A S Hodel July 1996
 
   if(isempty(w))
diff --git a/scripts/control/freqresp.m b/scripts/control/freqresp.m
--- a/scripts/control/freqresp.m
+++ b/scripts/control/freqresp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [ff,w] = freqresp(sys,USEW,w);
   # function [ff,w] = freqresp(sys,USEW{,w});
   # Frequency response function - used internally by bode, nyquist.
   # minimal argument checking; "do not attempt to do this at home"
   # USEW returned by freqchkw 
   # w: optional, must be present if USEW is given
   #
diff --git a/scripts/control/gram.m b/scripts/control/gram.m
--- a/scripts/control/gram.m
+++ b/scripts/control/gram.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
 
 function m = gram(a,b)
   # m = gram(a,b)
   # Return controllability grammian of continuous time system
   #
   #  dx/dt = a x + b u
   #
   # a m + a' + b*b' = 0 
diff --git a/scripts/control/h2norm.m b/scripts/control/h2norm.m
--- a/scripts/control/h2norm.m
+++ b/scripts/control/h2norm.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function h2gain = h2norm(sys)
   # Usage: h2gain = h2norm(sys)
   #
   # Computes the H2 norm system data structure (continuous time only)
   # sys = system data structure [see ss2sys()]
   # returns h2gain = Inf if system is unstable
   #
diff --git a/scripts/control/h2syn.m b/scripts/control/h2syn.m
--- a/scripts/control/h2syn.m
+++ b/scripts/control/h2syn.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [K,gain, Kc, Kf, Pc,  Pf] = h2syn(Asys,nu,ny,tol)
   #  [K,gain, Kc, Kf, Pc, Pf] = h2syn(Asys,nu,ny,tol)
   #
   # Design H2 optimal controller per procedure in 
   # Doyle, Glover, Khargonekar, Francis, "State Space Solutions to Standard
   # H2 and Hinf Control Problems", IEEE TAC August 1989
   #
diff --git a/scripts/control/hinf_ctr.m b/scripts/control/hinf_ctr.m
--- a/scripts/control/hinf_ctr.m
+++ b/scripts/control/hinf_ctr.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function K = hinf_ctr(dgs,F,H,Z,g)
   # K = hinf_ctr(dgs,F,H,Z,g)
   #
   # Called by hinfsyn to compute the H_inf optimal controller.
   # 
   # inputs:
   #   dgs: data structure returned by is_dgkf
diff --git a/scripts/control/hinfdemo.m b/scripts/control/hinfdemo.m
--- a/scripts/control/hinfdemo.m
+++ b/scripts/control/hinfdemo.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 # hinfdemo  H_infinity design demos for continuous SISO and MIMO
 #           systems and a discrete system.
 #           The SISO system is difficult to control because
 #           it is non minimum phase and unstable. The second
 #           design example controls the "jet707" plant, the
 #           linearized state space model of a Boeing 707-321
 #           aircraft at v=80m/s (M = 0.26, Ga0 = -3 deg,
diff --git a/scripts/control/hinfnorm.m b/scripts/control/hinfnorm.m
--- a/scripts/control/hinfnorm.m
+++ b/scripts/control/hinfnorm.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [g, gmin, gmax] = hinfnorm(sys,tol,gmin,gmax,ptol)
   # Usage: [g gmin gmax] = hinfnorm(sys[,tol,gmin,gmax,ptol])
   #
   # Computes the H infinity norm of a system data structure
   # sys = system data structure
   # tol = H infinity norm search tolerance (default: 0.001)
   # gmin = minimum value for norm search (default: 1e-9)
diff --git a/scripts/control/hinfsyn.m b/scripts/control/hinfsyn.m
--- a/scripts/control/hinfsyn.m
+++ b/scripts/control/hinfsyn.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [K,g,GW,Xinf,Yinf] = hinfsyn(Asys,nu,ny,gmin,gmax,gtol,ptol,tol)
   # [K,g,GW,Xinf,Yinf] = hinfsyn(Asys,nu,ny,gmin,gmax,gtol[,ptol,tol])
   #
   # [1] Doyle, Glover, Khargonekar, Francis, "State Space Solutions
   #     to Standard H2 and Hinf Control Problems," IEEE TAC August 1989
   #
   # [2] Maciejowksi, J.M.: "Multivariable feedback design,"
diff --git a/scripts/control/hinfsyn_chk.m b/scripts/control/hinfsyn_chk.m
--- a/scripts/control/hinfsyn_chk.m
+++ b/scripts/control/hinfsyn_chk.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [retval,Pc,Pf] = hinfsyn_chk(A,B1,B2,C1,C2,D12,D21,g,ptol)
   # [retval,Pc,Pf] = hinfsyn_chk(A,B1,B2,C1,C2,D12,D21,g,ptol)
   #
   # Called by hinfsyn to see if gain g satisfies conditions in Theorem 3 of
   # Doyle, Glover, Khargonekar, Francis, "State Space Solutions to Standard
   # H2 and Hinf Control Problems", IEEE TAC August 1989
   # 
diff --git a/scripts/control/hinfsyn_ric.m b/scripts/control/hinfsyn_ric.m
--- a/scripts/control/hinfsyn_ric.m
+++ b/scripts/control/hinfsyn_ric.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [Xinf,x_ha_err] = hinfsyn_ric(A,BB,C1,d1dot,R,ptol)
 #
 # forms
 #        xx = ([BB; -C1'*d1dot]/R) * [d1dot'*C1 BB'];
 #        Ha = [A 0*A; -C1'*C1 -A'] - xx;
 # and solves associated Riccati equation
 # returns error code
diff --git a/scripts/control/impulse.m b/scripts/control/impulse.m
--- a/scripts/control/impulse.m
+++ b/scripts/control/impulse.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [y, t] = impulse(sys, inp, tstop, n)
 # step: Impulse response for a linear system.
 #       The system can be discrete or multivariable (or both).
 #
 # [y, t] = impulse(sys[, inp, tstop, n])
 # Produces a plot or the step response data for system sys.
 #
diff --git a/scripts/control/is_abcd.m b/scripts/control/is_abcd.m
--- a/scripts/control/is_abcd.m
+++ b/scripts/control/is_abcd.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
 
 function retval = is_abcd(a, b, c, d)
   # ------------------------------------------------------
   # retval = is_abcd(a [, b, c, d])
   # Returns retval = 1 if the dimensions of a, b, c, d
   # are compatible, otherwise retval = 0.
   # The matrices b, c, or d may be omitted.
   # ------------------------------------------------------
diff --git a/scripts/control/is_controllable.m b/scripts/control/is_controllable.m
--- a/scripts/control/is_controllable.m
+++ b/scripts/control/is_controllable.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [retval,U] = is_controllable (a, b, tol)
 # [retval, U] = is_controllable (a, b {,tol})
 #             = is_controllable (sys{, tol})
 #      Returns retval=1 if the system sys or the pair (a, b) is controllable
 #                     0 if not.
 # U is an orthogonal basis of the controllable subspace. 
 #
diff --git a/scripts/control/is_detectable.m b/scripts/control/is_detectable.m
--- a/scripts/control/is_detectable.m
+++ b/scripts/control/is_detectable.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [retval,U] = is_detectable (a,c,tol)
 
 # [retval,U] = is_detectable (a,c,tol)
 # usage: is_detectable (a , c {,tol})
 #     or is_detectable (sys {,tol})
 #
 # Default: tol = 10*norm(a,'fro')*eps
diff --git a/scripts/control/is_dgkf.m b/scripts/control/is_dgkf.m
--- a/scripts/control/is_dgkf.m
+++ b/scripts/control/is_dgkf.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [retval,dgkf_struct] = is_dgkf(Asys,nu,ny,tol)
   # function [retval,dgkf_struct] = is_dgkf(Asys,nu,ny{,tol})
   # Determine whether a continuous time state space system meets
   # assumptions of DGKF algorithm.  
   # Partitions system into: [z] = [A  | Bw  Bu  ][w]
   #                         [y]   [Cz | Dzw Dzu ][u]
   #                               [Cy | Dyw Dyu ]
diff --git a/scripts/control/is_digital.m b/scripts/control/is_digital.m
--- a/scripts/control/is_digital.m
+++ b/scripts/control/is_digital.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function DIGITAL = is_digital(sys,eflg)
 # function DIGITAL = is_digital(sys{,eflg})
 # return nonzero if system is digital
 # inputs:
 #   sys: system data structure
 #   eflg: 0 [default] exit with an error if system is mixed (continuous and
 #           discrete components)
diff --git a/scripts/control/is_observable.m b/scripts/control/is_observable.m
--- a/scripts/control/is_observable.m
+++ b/scripts/control/is_observable.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [retval,U] = is_observable (a,c,tol)
 
 # [retval,U] = is_observable (a,c,tol)
 # usage: is_observable (a , c {,tol})
 #     or is_observable (sys {,tol})
 #
 # Default: tol = 10*norm(a,'fro')*eps
diff --git a/scripts/control/is_sample.m b/scripts/control/is_sample.m
--- a/scripts/control/is_sample.m
+++ b/scripts/control/is_sample.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function out = is_sample(Ts)
 #
 # out = is_sample(Ts): return true if Ts is a legal sampling time
 # (real,scalar, > 0)
 
 # A. S. Hodel July 1995
 
diff --git a/scripts/control/is_signal_list.m b/scripts/control/is_signal_list.m
--- a/scripts/control/is_signal_list.m
+++ b/scripts/control/is_signal_list.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function flg = is_signal_list(mylist)
 # function flg = is_signal_list(mylist)
 # returns true if mylist is a list of individual strings.
 # 
 
 flg = is_list(mylist);
 if(flg)
diff --git a/scripts/control/is_siso.m b/scripts/control/is_siso.m
--- a/scripts/control/is_siso.m
+++ b/scripts/control/is_siso.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function  SISO = is_siso(sys)
 # function SISO = is_siso(sys)
 # return nonzero if the system sys is single-input, single-output.
 
 # a s hodel July 1996, 1998
 
   if(nargin != 1)
diff --git a/scripts/control/is_stabilizable.m b/scripts/control/is_stabilizable.m
--- a/scripts/control/is_stabilizable.m
+++ b/scripts/control/is_stabilizable.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [retval,U] = is_stabilizable (a, b, tol)
 
 # Usage: [retval,U] = is_stabilizable (a {, b, tol})
 #
 # Returns retval = 1 if the system, a, is stabilizable, if the pair (a, b) is 
 # stabilizable, or 0 if not.
 #         U = orthogonal basis of controllable subspace.
diff --git a/scripts/control/is_stable.m b/scripts/control/is_stable.m
--- a/scripts/control/is_stable.m
+++ b/scripts/control/is_stable.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function retval = is_stable (a, tol, disc)
 
 # Usage: retval = is_stable (a {,tol,disc})
 # or     retval = is_stable (sys{,tol})
 #
 # Returns retval = 1 if the matrix a or the system a is stable, or 0 if not.
 #
diff --git a/scripts/control/jet707.m b/scripts/control/jet707.m
--- a/scripts/control/jet707.m
+++ b/scripts/control/jet707.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function outsys = jet707()
   # function outsys = jet707()
   # Creates linearized state space model of a Boeing 707-321 aircraft
   # at v=80m/s. (M = 0.26, Ga0 = -3 deg, alpha0 = 4 deg, kappa = 50 deg)
   # System inputs:   (1) thrust   and (2) elevator angle
   # System outputs:  (1) airspeed and (2) pitch angle
   # Ref: R. Brockhaus: Flugregelung (Flight Control), Springer, 1994
diff --git a/scripts/control/lqe.m b/scripts/control/lqe.m
--- a/scripts/control/lqe.m
+++ b/scripts/control/lqe.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [k, p, e] = lqe (a, g, c, sigw, sigv, zz)
 
 # Usage: [k, p, e] = lqe (A, G, C, SigW, SigV {,Z})
 #
 # Linear quadratic estimator (Kalman filter) design for the 
 # continuous time system
 #
diff --git a/scripts/control/lqg.m b/scripts/control/lqg.m
--- a/scripts/control/lqg.m
+++ b/scripts/control/lqg.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [K,Q1,P1,Ee,Er] = lqg(sys,Sigw,Sigv,Q,R,input_list)
 #
 # function [K,Q,P,Ee,Er] = lqg(sys,Sigw,Sigv,Q,R,input_list)
 # design a linear-quadratic-gaussian optimal controller for the system
 #
 #  dx/dt = A x + B u + G w       [w]=N(0,[Sigw 0    ])
 #      y = C x + v               [v]  (    0   Sigv ])
diff --git a/scripts/control/lqr.m b/scripts/control/lqr.m
--- a/scripts/control/lqr.m
+++ b/scripts/control/lqr.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [k, p, e] = lqr (a, b, q, r, s)
 
 # Usage: [k, p, e] = lqr (A, B, Q, R {,S})
 #
 # Linear quadratic regulator design for the continuous time system
 #   dx/dt = A x + B u
 # to minimize the cost functional
diff --git a/scripts/control/lsim.m b/scripts/control/lsim.m
--- a/scripts/control/lsim.m
+++ b/scripts/control/lsim.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [y,x] = lsim(sys,u,t,x0)
 # lsim: Produce output for a linear simulation of a system
 #
 # lsim(sys,u,t,[x0])
 # Produces a plot for the output of the system, sys.
 #
 # U is an array that contains the system's inputs.  Each column in u 
diff --git a/scripts/control/ltifr.m b/scripts/control/ltifr.m
--- a/scripts/control/ltifr.m
+++ b/scripts/control/ltifr.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function out = ltifr(a,b,w)
   #ltifr:  Linear time invarient frequency response of SISO systems
   # out = ltifr(A,B,w)
   # user enters the A and B matrices
   #
   # out = ltifr(sys,w)
   # user enters the system, SYS
diff --git a/scripts/control/mb.m b/scripts/control/mb.m
--- a/scripts/control/mb.m
+++ b/scripts/control/mb.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 # I think that this m-file can be deleted
 # a.s.hodel@eng.auburn.edu - 4 Dec. 1998
 
 Ap = [0, 1;1960, 0];
 Bp = [0;-6261];
 Cp = [1, 0];
 Dp = 0;
diff --git a/scripts/control/minfo.m b/scripts/control/minfo.m
--- a/scripts/control/minfo.m
+++ b/scripts/control/minfo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [systype, nout, nin, ncstates, ndstates] = minfo(inmat)
   #  function [systype, nout, nin, ncstates, ndstates] = minfo(inmat)
   #
   # MINFO:  Determines the type of system matrix.  INMAT can be
   #         a varying(*), system, constant, and empty matrix.
   #
   #    Returns:
diff --git a/scripts/control/moddemo.m b/scripts/control/moddemo.m
--- a/scripts/control/moddemo.m
+++ b/scripts/control/moddemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function moddemo()
 # Octave Controls toolbox demo: Model Manipulations demo
 # Written by David Clem August 15, 1994
 
 # a s hodel: updated to reflect updated output order in ss2zp
 
   while (1)
diff --git a/scripts/control/nichols.m b/scripts/control/nichols.m
--- a/scripts/control/nichols.m
+++ b/scripts/control/nichols.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [mag,phase,w] = nichols(sys,w,outputs,inputs)
 # [mag,phase,w] = nichols(sys[,w,outputs,inputs])
 # Produce Nichols plot of a system
 #
 # Compute the frequency response of a system.
 # inputs:
 #   sys: system data structure (must be either purely continuous or discrete;
diff --git a/scripts/control/nyquist.m b/scripts/control/nyquist.m
--- a/scripts/control/nyquist.m
+++ b/scripts/control/nyquist.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [realp,imagp,w] = nyquist(sys,w,outputs,inputs,atol)
 # [realp,imagp,w] = nyquist(sys[,w,outputs,inputs,atol])
 # Produce Nyquist plots of a system
 #
 # Compute the frequency response of a system.
 # inputs: (pass as empty to get default values
 #   sys: system data structure (must be either purely continuous or discrete;
diff --git a/scripts/control/obsv.m b/scripts/control/obsv.m
--- a/scripts/control/obsv.m
+++ b/scripts/control/obsv.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
 
 function Qb = obsv(sys, c)
   # ------------------------------------------------------
   # Qb = obsv(sys [, c])
   # Build observability matrix
   #
   #          +          +
   #          | C        |
diff --git a/scripts/control/ord2.m b/scripts/control/ord2.m
--- a/scripts/control/ord2.m
+++ b/scripts/control/ord2.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function outsys = ord2(nfreq, damp, gain)
   # function outsys = ord2(nfreq, damp[, gain])
   # Creates a continuous 2nd order system with parameters:
   #
   #      nfreq:   natural frequency [Hz]. (not in rad/s)
   #      damp:    damping coefficient
   #      gain:    dc-gain
diff --git a/scripts/control/outlist.m b/scripts/control/outlist.m
--- a/scripts/control/outlist.m
+++ b/scripts/control/outlist.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function str_val = outlist(name_list,tabchar,yd,ilist)
 # function str_val = outlist(name_list[,tabchar,yd,ilist])
 #
 # internal use only; minimal argument checking performed
 #
 # print an enumerated list of strings
 # inputs:
diff --git a/scripts/control/packedform.m b/scripts/control/packedform.m
--- a/scripts/control/packedform.m
+++ b/scripts/control/packedform.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 save_var = page_screen_output;
 page_screen_output = 1;
 disp("Description of system data structure:")
 disp("A linear system is stored in a structure, and may be represented in")
 disp("ss (state space), tf (transfer function),  and/or zp (zero-pole-gain)")
 disp("form.")
 disp(" ")
diff --git a/scripts/control/packsys.m b/scripts/control/packsys.m
--- a/scripts/control/packsys.m
+++ b/scripts/control/packsys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function Asys = packsys(a,b,c,d,dflg)
   # O B S O L E T E: use ss2sys instead.
   # function Asys = packsys(a,b,c[,d,dflg])
   #
   # dflg: 0 for continuous time system, 1 for discrete-time system.
   # 
   # defaults:
diff --git a/scripts/control/parallel.m b/scripts/control/parallel.m
--- a/scripts/control/parallel.m
+++ b/scripts/control/parallel.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sysp = parallel(Asys,Bsys)
 # function sysp = parallel(Asys,Bsys)
 # Forms the parallel connection of two systems.
 #
 #              ____________________
 #              |      ________    |
 #     u  ----->|----> | Asys |--->|----> y1
diff --git a/scripts/control/pinv.m b/scripts/control/pinv.m
--- a/scripts/control/pinv.m
+++ b/scripts/control/pinv.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function retval = pinv (X, tol)
 
 # usage: pinv (X, tol)
 #
 # Returns the pseudoinverse of X; singular values less than tol are
 # ignored.
 #
diff --git a/scripts/control/place.m b/scripts/control/place.m
--- a/scripts/control/place.m
+++ b/scripts/control/place.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function K = place(sys, P) 
 
 %PLACE K =  place(sys,P) Computes the matrix  K such that if the state
 %is feedback with gain K, then the eigenvalues  of the closed loop
 %system (i.e. A-BK) are those specified in the vector P.
 %
 % Version: Beta (May-1997): If you have any comments, please let me know.
diff --git a/scripts/control/polyout.m b/scripts/control/polyout.m
--- a/scripts/control/polyout.m
+++ b/scripts/control/polyout.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function y = polyout(c,x)
 #
 # usage: [y=] polyout(c[,x])
 #
 # print formatted polynomial 
 #   c(x) = c(1) * x^n + ... + c(n) x + c(n+1)
 # in a string or to the screen (if y is omitted)
diff --git a/scripts/control/prompt.m b/scripts/control/prompt.m
--- a/scripts/control/prompt.m
+++ b/scripts/control/prompt.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function prompt(str)
 # function prompt([str])
 # Prompt user to continue
 # str: input string. Default value: "\n ---- Press a key to continue ---"
 # Written by David Clem August 15, 1994
 # Modified A. S. Hodel June 1995
 
diff --git a/scripts/control/pzmap.m b/scripts/control/pzmap.m
--- a/scripts/control/pzmap.m
+++ b/scripts/control/pzmap.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [zer,pol]=pzmap(sys)
 # function [zer,pol]=pzmap(sys)
 # Plots the zeros and poles of a system in the complex plane.
 #
 # inputs: sys: system data structure
 # outputs: if omitted, the poles and zeros are plotted on the screen.
 #          otherwise, pol, zer are returned as the system poles and zeros.
diff --git a/scripts/control/qzval.m b/scripts/control/qzval.m
--- a/scripts/control/qzval.m
+++ b/scripts/control/qzval.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function lam = qzval(A,B)
 # X = qzval (A, B)
 # 
 # compute generalized eigenvalues of the matrix pencil (A - lambda B).
 # A and B must be real matrices.
 # 
 # This function is superseded by qz.  You should use qz instead.
diff --git a/scripts/control/rldemo.m b/scripts/control/rldemo.m
--- a/scripts/control/rldemo.m
+++ b/scripts/control/rldemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function rldemo()
 # Octave Controls toolbox demo: Root Locus demo
 # Written by David Clem August 15, 1994
 # Updated by John Ingram December 1996
 
   while (1)
     clc
diff --git a/scripts/control/rlocus.m b/scripts/control/rlocus.m
--- a/scripts/control/rlocus.m
+++ b/scripts/control/rlocus.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [rldata,k_break,rlpol,gvec,real_ax_pts] = rlocus(sys,increment,min_k,max_k)
   # [rldata,k_break,rlpol,gvec,real_ax_pts] = rlocus(sys,increment,min_k,max_k)
   # Displays root locus plot of the specified SISO system.
   # 
   #       -----   ---     -------- 
   #   --->| + |---|k|---->| SISO |----------->
   #       -----   ---     --------        | 
diff --git a/scripts/control/rotg.m b/scripts/control/rotg.m
--- a/scripts/control/rotg.m
+++ b/scripts/control/rotg.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [c,s] = rotg(a,b)
   #function [c,s] = rotg(a,b)
   # givens rotation calculation
   #
   # NOTE: Use [c,s] = givens(a,b) instead.
 
   [c,s] = givens(a,b);
diff --git a/scripts/control/run_cmd.m b/scripts/control/run_cmd.m
--- a/scripts/control/run_cmd.m
+++ b/scripts/control/run_cmd.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 # run_cmd: short script used in demos
 # prints string cmd to the screen, then executes after a pause
 
 disp(["Command: ",cmd])
 puts("Press a key to execute command");
 fflush(stdout);
 kbhit();
diff --git a/scripts/control/series.m b/scripts/control/series.m
--- a/scripts/control/series.m
+++ b/scripts/control/series.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b,c,d] = series(a1,b1,c1,d1,a2,b2,c2,d2)
 # Forms the series connection of two systems.
 #
 # Superseded by sysmult.  Do not use this routine!
 # used internally in zp2ss
 #
 # Type of input: Transfer functions
diff --git a/scripts/control/sortcom.m b/scripts/control/sortcom.m
--- a/scripts/control/sortcom.m
+++ b/scripts/control/sortcom.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [yy,idx] = sortcom(xx,opt)
 # [yy,idx] = sortcom(xx[,opt]): sort a complex vector
 # xx: complex vector
 # opt: sorting option:
 #	"re": real part (default)
 #	"mag": by magnitude
 #	"im": by imaginary part
diff --git a/scripts/control/ss2sys.m b/scripts/control/ss2sys.m
--- a/scripts/control/ss2sys.m
+++ b/scripts/control/ss2sys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function  retsys = ss2sys  (a,b,c,d,tsam,n,nz,stname,inname,outname,outlist)
   # retsys = ss2sys  (a,b,c{,d,tsam,n,nz,stname,inname,outname,outlist})
   # Create system structure from state-space data.   May be continous,
   # discrete, or mixed (sampeld-data)
   # inputs:
   #   a, b, c, d: usual state space matrices.
   #               default: d = zero matrix
diff --git a/scripts/control/ss2tf.m b/scripts/control/ss2tf.m
--- a/scripts/control/ss2tf.m
+++ b/scripts/control/ss2tf.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [num,den] = ss2tf(a,b,c,d)
 # [num,den] = ss2tf(a,b,c,d)
 # Conversion from tranfer function to state-space.
 # The state space system
 #      . 
 #      x = Ax + Bu
 #      y = Cx + Du
diff --git a/scripts/control/ss2zp.m b/scripts/control/ss2zp.m
--- a/scripts/control/ss2zp.m
+++ b/scripts/control/ss2zp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [zer,pol,k] = ss2zp(a,b,c,d)
 # Converts a state space representation to a set of poles and zeros.
 #
 # [pol,zer,k] = ss2zp(a,b,c,d) returns the poles and zeros of the state space 
 # system (a,b,c,d).  K is a gain associated with the zeros.
 #
 # used internally in system data structure manipulations
diff --git a/scripts/control/starp.m b/scripts/control/starp.m
--- a/scripts/control/starp.m
+++ b/scripts/control/starp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [sys] = starp(P, K, ny, nu);
 #
 # [sys] = starp(P, K, ny, nu)
 #
 # Redheffer star product or upper/lower LFT, respectively.
 #
 #
diff --git a/scripts/control/step.m b/scripts/control/step.m
--- a/scripts/control/step.m
+++ b/scripts/control/step.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [y, t] = step(sys, inp, tstop, n)
 # step: Step response for a linear system.
 #       The system can be discrete or multivariable (or both).
 #
 # [y, t] = step(sys[, inp, tstop, n])
 # Produces a plot or the step response data for system sys.
 #
diff --git a/scripts/control/stepimp.m b/scripts/control/stepimp.m
--- a/scripts/control/stepimp.m
+++ b/scripts/control/stepimp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [y, t] = stepimp(sitype, sys, inp, tstop, n)
 # step: Impulse or step response for a linear system.
 #       The system can be discrete or multivariable (or both).
 #       This m-file contains the "common code" of step and impulse.
 #
 # [y, t] = stepimp(sitype, sys[, inp, tstop, n])
 # Produces a plot or the response data for system sys.
diff --git a/scripts/control/strappend.m b/scripts/control/strappend.m
--- a/scripts/control/strappend.m
+++ b/scripts/control/strappend.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retval = strappend(strlist,suffix);
   # retval = strappend(strlist,suffix);
   # append string suffix to each string in the list of strings strlist
   
   if(nargin != 2 | nargout > 1)
     usage(" retval = strappend(strlist,suffix)");
   elseif(!is_signal_list(strlist))
diff --git a/scripts/control/susball.m b/scripts/control/susball.m
--- a/scripts/control/susball.m
+++ b/scripts/control/susball.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
     cmd = "ballsys = margetsys(""disc"")";
     eval(cmd);
     
     disp("Design LQG controller");
     cmd = "sysout(ballsys)";
     run_cmd
     disp("add noise inputs to system...")
diff --git a/scripts/control/swap.m b/scripts/control/swap.m
--- a/scripts/control/swap.m
+++ b/scripts/control/swap.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a1,b1] = swap(a,b)
   # [a1,b1] = swap(a,b)
   # interchange a and b
 
   # A. S. Hodel July 24 1992
   # Conversion to Octave R. Bruce Tenison July 4, 1994
 
diff --git a/scripts/control/swapcols.m b/scripts/control/swapcols.m
--- a/scripts/control/swapcols.m
+++ b/scripts/control/swapcols.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function B = swapcols(A)
   # function B = swapcols(A)
   # permute columns of A into reverse order
   
   # A. S. Hodel July 23, 1992
   # Conversion to Octave R. Bruce Tenison July 4, 1994
 
diff --git a/scripts/control/swaprows.m b/scripts/control/swaprows.m
--- a/scripts/control/swaprows.m
+++ b/scripts/control/swaprows.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function B = swaprows(A)
   # function B = swaprows(A)
   # permute rows of A into reverse order
 
   # A. S. Hodel July 23, 1992
   # Conversion to Octave R. Bruce Tenison July 4, 1994
   
diff --git a/scripts/control/sys2fir.m b/scripts/control/sys2fir.m
--- a/scripts/control/sys2fir.m
+++ b/scripts/control/sys2fir.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [c,tsam,inname,outname] = sys2fir(sys)
 # function [c,tsam,inname,outname] = sys2fir(sys)
 # extract fir system from system data structure
 
 # a s hodel July 1996
 
   # let sys2tf do most of the work
diff --git a/scripts/control/sys2ss.m b/scripts/control/sys2ss.m
--- a/scripts/control/sys2ss.m
+++ b/scripts/control/sys2ss.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b,c,d,tsam,n,nz,stname,inname,outname,yd] = sys2ss(sys)
   # function [a,b,c,d(,tsam,n,nz,stname,inname,outname,yd)] = sys2ss(sys)
   # Convert from system data structure to state space form
   # inputs:
   #    sys: system data structure for the state space system
   #
   #      x' = Ax + Bu
diff --git a/scripts/control/sys2tf.m b/scripts/control/sys2tf.m
--- a/scripts/control/sys2tf.m
+++ b/scripts/control/sys2tf.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [num,den,tsam,inname,outname] = sys2tf(Asys)
 # function [num,den,tsam,inname,outname] = sys2tf(Asys)
 # Conversion from a system data structure format to a transfer function.  The 
 # transfer function part of ASYS is returned to the user in the form:
 #
 #                num(s)
 #          G(s)=-------
diff --git a/scripts/control/sys2zp.m b/scripts/control/sys2zp.m
--- a/scripts/control/sys2zp.m
+++ b/scripts/control/sys2zp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [zer,pol,k,tsam,inname,outname] = sys2zp(sys)
 # [zer,pol,k,tsam,inname,outname] = sys2zp(sys)
 # extract zero/pole/leading coefficient information from a system data
 # structure
 # inputs: sys: system data structure
 # outputs:
 #   zer: vector of system zeros
diff --git a/scripts/control/sysadd.m b/scripts/control/sysadd.m
--- a/scripts/control/sysadd.m
+++ b/scripts/control/sysadd.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysadd(...)
 # 
 # sys = sysadd(Gsys{,Hsys,...})
 #
 # returns transfer function sys = Gsys + Hsys + ...
 #
 # Method: sysgroup used to connect systems in parallel
diff --git a/scripts/control/sysappend.m b/scripts/control/sysappend.m
--- a/scripts/control/sysappend.m
+++ b/scripts/control/sysappend.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = sysappend(sys,b,c,d,outname,inname,yd)
   # 
   # function retsys = sysappend(sys,b[,c,d,outname,inname,yd])
   #
   # This function appends new inputs and/or outputs to a system
   # Inputs:
   #	sys:  system data structure
diff --git a/scripts/control/syschnames.m b/scripts/control/syschnames.m
--- a/scripts/control/syschnames.m
+++ b/scripts/control/syschnames.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = syschnames(sys,opt,list,names)
 # retsys = syschnames(sys,opt,list,names)
 # change the names of selected inputs, outputs and states.
 # inputs:
 # 	sys: system data structure
 #	opt: []: change default name (output)
 #	     "out": change selected output names
diff --git a/scripts/control/syschnamesl.m b/scripts/control/syschnamesl.m
--- a/scripts/control/syschnamesl.m
+++ b/scripts/control/syschnamesl.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function old_names = syschnamesl(olist,old_names,inames,listname)
   # used internally in syschnames
   # olist: index list
   # old_names: original list names
   # inames: new names
   # listname: name of index list
   #
diff --git a/scripts/control/syschtsam.m b/scripts/control/syschtsam.m
--- a/scripts/control/syschtsam.m
+++ b/scripts/control/syschtsam.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = syschtsam(sys,tsam)
 #
 # retsys = syschtsam(sys,tsam);
 #
 # This function changes the sampling time (tsam) of the system.
 
 # Written by John Ingram August 1996
diff --git a/scripts/control/sysconnect.m b/scripts/control/sysconnect.m
--- a/scripts/control/sysconnect.m
+++ b/scripts/control/sysconnect.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysconnect(sys,output_list,input_list,order,tol)
 # function retsys = sysconnect(sys,output_list,input_list[,order,tol])
 # Close the loop from specified outputs to respective specified inputs
 # 
 # inputs:
 #   sys: system data structure
 #   output_list,input_list: list of connections indices; y(output_list(ii))
diff --git a/scripts/control/syscont.m b/scripts/control/syscont.m
--- a/scripts/control/syscont.m
+++ b/scripts/control/syscont.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [csys,Acd,Ccd] = syscont(sys)
 # function [csys,Acd,Ccd] = syscont(sys)
 # returns csys = sys with discrete states./utputs omitted.
 #
 # inputs: sys is a system data structure
 # outputs: csys is the purely continuous input/output connections of
 #               sys
diff --git a/scripts/control/syscont_disc.m b/scripts/control/syscont_disc.m
--- a/scripts/control/syscont_disc.m
+++ b/scripts/control/syscont_disc.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [n_tot,st_c,st_d,y_c,y_d] = syscont_disc(sys)
 # function [n_tot,st_c,st_d,y_c,y_d] = syscont_disc(sys)
 # Used internally in syscont and sysdisc.
 #
 # inputs: sys is a system data structure
 # outputs: n_tot: total number of states
 #	   st_c: vector of continuous state indices (empty if none)
diff --git a/scripts/control/sysdefioname.m b/scripts/control/sysdefioname.m
--- a/scripts/control/sysdefioname.m
+++ b/scripts/control/sysdefioname.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function ioname = sysdefioname(n,str,m)
 # function ioname = sysdefioname(n,str[,m])
 # return list of default input or output names given n, str, m
 # n is the final value, str is the string prefix, and m is start value
 # ex: ioname = sysdefioname(5,"u",3)
 #
 # returns: 	ioname =
diff --git a/scripts/control/sysdefstname.m b/scripts/control/sysdefstname.m
--- a/scripts/control/sysdefstname.m
+++ b/scripts/control/sysdefstname.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function stname = sysdefstname(n,nz)
 # function stname = sysdefstname(n,nz)
 # return default state names given n, nz
 # used internally, minimal argument checking
 
   stname = list();
   if(n > 0)
diff --git a/scripts/control/sysdimensions.m b/scripts/control/sysdimensions.m
--- a/scripts/control/sysdimensions.m
+++ b/scripts/control/sysdimensions.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [n,nz,m,p,yd] = sysdimensions(sys,opt)
 # [n,nz,m,p,yd] = sysdimensions(sys{,opt})
 # return the number of states, inputs, and/or outputs in the system sys.
 # inputs: sys: system data structure
 #         opt: string
 #              "all" (default): return all output arguments (see below)
 #              "cst": return n=number of continuous states
diff --git a/scripts/control/sysdisc.m b/scripts/control/sysdisc.m
--- a/scripts/control/sysdisc.m
+++ b/scripts/control/sysdisc.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [dsys,Adc,Cdc] = sysdisc(sys)
 # function [dsys,Adc,Cdc] = sysdisc(sys)
 # inputs: sys = system data structure
 # outputs:
 #    dsys: purely discrete portion of sys (returned empty if there is
 #          no purely discrete path from inputs to outputs)
 #    Adc, Cdc: connections from continuous states to discrete states/discrete
diff --git a/scripts/control/sysdup.m b/scripts/control/sysdup.m
--- a/scripts/control/sysdup.m
+++ b/scripts/control/sysdup.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = sysdup(Asys,output_list,input_list)
 # function retsys = sysdup(Asys,output_list,input_list)
 # Duplicate specified input/output connections of a system
 # 
 #
 # inputs:
 #   Asys: system data structure (see ss2sys)
diff --git a/scripts/control/sysgetsignals.m b/scripts/control/sysgetsignals.m
--- a/scripts/control/sysgetsignals.m
+++ b/scripts/control/sysgetsignals.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [stname,inname,outname,yd] = sysgetsignals(sys,sigid,signum,strflg)
   # [stname,inname,outname,yd] = sysgetsignals(sys)
   # -or- siglist = sysgetsignals(sys,sigid)
   # -or- signame = sysgetsignals(sys,sigid,signum{,strflg})
   # Get signal names from a system
   # inputs:
   #    sys: system data structure for the state space system
diff --git a/scripts/control/sysgettsam.m b/scripts/control/sysgettsam.m
--- a/scripts/control/sysgettsam.m
+++ b/scripts/control/sysgettsam.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function T = sysgettsam(sys)
 # T = sysgettsam(sys)
 # return the sampling time of the system
 
 if(!is_struct(sys))
   usage("T = sysgettsam(sys)");
 endif
diff --git a/scripts/control/sysgettype.m b/scripts/control/sysgettype.m
--- a/scripts/control/sysgettype.m
+++ b/scripts/control/sysgettype.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function systype = sysgettype(sys)
 # systype = sysgetype(sys)
 # return the initial system type of the system
 # inputs:
 #   sys: system data structure
 # outputs:
 #   systype: string indicating how the structure was initially 
diff --git a/scripts/control/sysgroup.m b/scripts/control/sysgroup.m
--- a/scripts/control/sysgroup.m
+++ b/scripts/control/sysgroup.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysgroup(...)
 # function sys = sysgroup(Asys{,Bsys,...})
 # Parallel connection of systems
 #
 # inputs: All input arguments must be system data structures;
 #         exits with an error if there is not at least one argument
 # output: sys: all systems are combined into a single system; e.g.,
diff --git a/scripts/control/sysgroupn.m b/scripts/control/sysgroupn.m
--- a/scripts/control/sysgroupn.m
+++ b/scripts/control/sysgroupn.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function names = sysgroupn(names,kind)
 # names = sysgroupn(names)
 # locate and mark duplicate names
 # inputs:
 #   names: list of signal names
 #   kind: kind of signal name (used for diagnostic message purposes only)
 # outputs:
diff --git a/scripts/control/sysidx.m b/scripts/control/sysidx.m
--- a/scripts/control/sysidx.m
+++ b/scripts/control/sysidx.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 #
 # Written by A. S. Hodel, a.s.hodel@eng.auburn.edu
 
 
 function idxvec = sysidx(sys,sigtype,signamelist)
 # idxvec = sysidx(sys,sigtype,signamelist)
 # return indices of signals with specified signal names
 # inputs:
diff --git a/scripts/control/sysmin.m b/scripts/control/sysmin.m
--- a/scripts/control/sysmin.m
+++ b/scripts/control/sysmin.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 #
 # Written by A. S. Hodel a.s.hodel@eng.auburn.edu
 
 function [retsys,nc,no,cflg,oflg] = sysmin(sys,flg);
   # [retsys,nc,no] = sysmin(sys{,flg});
   # return a minimal (or reduced order) system
   # inputs:
   #   sys: system data structure
diff --git a/scripts/control/sysmult.m b/scripts/control/sysmult.m
--- a/scripts/control/sysmult.m
+++ b/scripts/control/sysmult.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysmult(...)
 #
 # sys = sysmult(Asys{,Bsys,...})
 #
 # returns transfer function sys = Asys*Bsys* ...
 #
 # Same as series connection of systems; for example, sysmult(Asys,Bsys)
diff --git a/scripts/control/sysout.m b/scripts/control/sysout.m
--- a/scripts/control/sysout.m
+++ b/scripts/control/sysout.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = sysout(sys,opt)
 # function sysout(sys[,opt])
 # print out a system data structure in desired format
 #
 # sys: system data structure
 # opt: []: primary system form (default)
 #      "ss": state space form
diff --git a/scripts/control/sysprune.m b/scripts/control/sysprune.m
--- a/scripts/control/sysprune.m
+++ b/scripts/control/sysprune.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysprune(sys,output_idx,input_idx,state_idx)
 # function retsys = sysprune(Asys,output_idx,input_idx{,state_idx})
 # Extract/permute specified inputs, outputs, and/or states of a system.
 #
 # inputs:
 #   Asys: system data structure 
 #   output_idx,input_idx: list of connections indices; the new
diff --git a/scripts/control/sysreorder.m b/scripts/control/sysreorder.m
--- a/scripts/control/sysreorder.m
+++ b/scripts/control/sysreorder.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function pv = sysreorder(vlen,list)
 # function pv = sysreorder(vlen,list)
 #
 # inputs: vlen: vector length
 #         list: a subset of {1:vlen}
 # pv: a permutation vector to order elements of [1:vlen] in -list-
 #         to the end of a vector
diff --git a/scripts/control/sysrepdemo.m b/scripts/control/sysrepdemo.m
--- a/scripts/control/sysrepdemo.m
+++ b/scripts/control/sysrepdemo.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sysrepdemo()
 
 # Octave Controls toolbox demo: System representation
 
 # Written by A. S. Hodel June 1995
 # Revised Aug 1995 for system data structure format
 
diff --git a/scripts/control/sysscale.m b/scripts/control/sysscale.m
--- a/scripts/control/sysscale.m
+++ b/scripts/control/sysscale.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysscale(sys,outscale,inscale,outname,inname)
 #
 # function sys = sysscale(sys,outscale,inscale[,outname,inname])
 # scale inputs/outputs of a system.
 #
 # inputs:
 #   sys: system data structure
diff --git a/scripts/control/syssetsignals.m b/scripts/control/syssetsignals.m
--- a/scripts/control/syssetsignals.m
+++ b/scripts/control/syssetsignals.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = syssetsignals(sys,opt,names,sig_idx)
 # retsys = syssetsignals(sys,opt,names{,sig_idx})
 # change the names of selected inputs, outputs and states.
 # inputs:
 # 	sys: system data structure
 #	opt: []: change default name (output)
 #	     "out": change selected output names
diff --git a/scripts/control/syssub.m b/scripts/control/syssub.m
--- a/scripts/control/syssub.m
+++ b/scripts/control/syssub.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = syssub(...)
 # 
 # sys = syssub(Gsys{,Hsys, ...})
 #
 # returns transfer function sys = Gsys - Hsys - ...
 #
 # Method: sysgroup used to connect systems in parallel
diff --git a/scripts/control/sysupdate.m b/scripts/control/sysupdate.m
--- a/scripts/control/sysupdate.m
+++ b/scripts/control/sysupdate.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function sys = sysupdate(sys,opt)
 # function retsys = sysupdate(sys,opt)
 # Update the internal representation of a system.
 # inputs:
 #  sys: system data structure
 #  opt: string:  "tf" -> update transfer function
 #                "zp" -> update zero-pole form
diff --git a/scripts/control/tf2ss.m b/scripts/control/tf2ss.m
--- a/scripts/control/tf2ss.m
+++ b/scripts/control/tf2ss.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b,c,d] = tf2ss(num,den)
   # Conversion from tranfer function to state-space.
   # The state space system
   #      .
   #      x = Ax + Bu
   #      y = Cx + Du
   #
diff --git a/scripts/control/tf2sys.m b/scripts/control/tf2sys.m
--- a/scripts/control/tf2sys.m
+++ b/scripts/control/tf2sys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function outsys = tf2sys(num,den,tsam,inname,outname)
   #
   # sys = tf2sys(num,den{,tsam,inname,outname})
   # build system data structure from transfer function format data
   # inputs:
   #   num, den: coefficients of numerator/denominator polynomials
   #   tsam: sampling interval. default: 0 (continuous time)
diff --git a/scripts/control/tf2sysl.m b/scripts/control/tf2sysl.m
--- a/scripts/control/tf2sysl.m
+++ b/scripts/control/tf2sysl.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function vec = tf2sysl(vec)
 # vec = tf2sysl(vec)
 #
 # used internally in tf2sys
 # strip leading zero coefficients to get the true polynomial length
 
 
diff --git a/scripts/control/tf2zp.m b/scripts/control/tf2zp.m
--- a/scripts/control/tf2zp.m
+++ b/scripts/control/tf2zp.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [zer,pol,k] = tf2zp(num,den)
 # Converts transfer functions to poles / zeros.
 #
 # [zer,pol,k] = tf2zp(num,den) returns the zeros and poles of the SISO system
 # defined by num/den.  K is a gain associated with the system zeros.
 
 # Written by A. S. Hodel, etc.
diff --git a/scripts/control/tfout.m b/scripts/control/tfout.m
--- a/scripts/control/tfout.m
+++ b/scripts/control/tfout.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function tfout(num,denom,x)
 #
 # usage: tfout(num,denom[,x])
 #
 # print formatted transfer function num(s)/d(s) 
 # to the screen
 # x defaults to the string "s"
diff --git a/scripts/control/tzero.m b/scripts/control/tzero.m
--- a/scripts/control/tzero.m
+++ b/scripts/control/tzero.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [zer, gain] = tzero(A,B,C,D)
   # [zer{,gain}] = tzero(A,B,C,D) -or-
   # [zer{,gain}] = tzero(Asys)
   # Compute transmission zeros of a continuous
   #      .
   #      x = Ax + Bu
   #      y = Cx + Du
diff --git a/scripts/control/tzero2.m b/scripts/control/tzero2.m
--- a/scripts/control/tzero2.m
+++ b/scripts/control/tzero2.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function zr = tzero2 (a, b, c, d, bal)
 
 # Usage: zr = tzero2 (a, b, c, d, bal)
 #
 # Compute the transmission zeros of a, b, c, d.
 #
 # bal = balancing option (see balance); default is "B".
diff --git a/scripts/control/ugain.m b/scripts/control/ugain.m
--- a/scripts/control/ugain.m
+++ b/scripts/control/ugain.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function outsys = ugain(n)
   # function outsys = ugain(n)
   # Creates a system with unity gain, no states.
   # This trivial system is sometimes needed to create arbitrary
   # complex systems from simple systems with buildssic.
   # Watch out if you are forming sampled systems since "ugain"
   # does not contain a sampling period.  
diff --git a/scripts/control/unpacksys.m b/scripts/control/unpacksys.m
--- a/scripts/control/unpacksys.m
+++ b/scripts/control/unpacksys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b,c,d] = unpacksys(syst)
   # [a,b,c,d] = unpacksys(sys)
   # Obsolete.  Use sys2ss instead.
 
   # Written by David Clem August 19, 1994
 
   warning("unpacksys obsolete; calling sys2ss");
diff --git a/scripts/control/wgt1o.m b/scripts/control/wgt1o.m
--- a/scripts/control/wgt1o.m
+++ b/scripts/control/wgt1o.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function wsys = wgt1o(vl, vh, fc)
 # wgt10  State space description of a first order weighting function.
 #
 #     wsys = wgt1o(vl, vh, fc)
 #
 # Weighting function are needed by the H2/H_infinity design procedure.
 # These function are part of thye augmented plant P (see hinfdemo
diff --git a/scripts/control/zgfmul.m b/scripts/control/zgfmul.m
--- a/scripts/control/zgfmul.m
+++ b/scripts/control/zgfmul.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function y = zgfmul(a,b,c,d,x)
   # y = zgfmul(a,b,c,d,x)
   # 
   # Compute product of zgep incidence matrix F with vector x.
   # Used by zgepbal (in zgscal) as part of generalized conjugate gradient
   # iteration.
   #
diff --git a/scripts/control/zgfslv.m b/scripts/control/zgfslv.m
--- a/scripts/control/zgfslv.m
+++ b/scripts/control/zgfslv.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function x = zgfslv(n,m,p,b)
   # x = zgfslv(n,m,p,b)
   # solve system of equations for dense zgep problem
   
   # Written by A. Scotte Hodel
   # Converted to Octave by R Bruce Tenison, July 3, 1994
 
diff --git a/scripts/control/zginit.m b/scripts/control/zginit.m
--- a/scripts/control/zginit.m
+++ b/scripts/control/zginit.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function zz = zginit(a,b,c,d)
   # zz = zginit(a,b,c,d)
   # construct right hand side vector zz
   # for the zero-computation generalized eigenvalue problem
   # balancing procedure
   # called by zgepbal
   # References:
diff --git a/scripts/control/zgpbal.m b/scripts/control/zgpbal.m
--- a/scripts/control/zgpbal.m
+++ b/scripts/control/zgpbal.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [retsys] = zgpbal(Asys)
   # function [retsys] = zgpbal(Asys)
   #
   # used internally in tzero; minimal argument checking performed
   #
   # implementation of zero computation generalized eigenvalue problem 
   # balancing method (Hodel and Tiller, Allerton Conference, 1991)
diff --git a/scripts/control/zgreduce.m b/scripts/control/zgreduce.m
--- a/scripts/control/zgreduce.m
+++ b/scripts/control/zgreduce.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function retsys = zgreduce(Asys,meps)
 # function retsys = zgreduce(Asys,meps)
 # implementation of procedure REDUCE in (Emami-Naeini and Van Dooren, 
 # Automatica, # 1982).
 #
 # used internally in tzero; minimal argument checking performed
 
diff --git a/scripts/control/zgrownorm.m b/scripts/control/zgrownorm.m
--- a/scripts/control/zgrownorm.m
+++ b/scripts/control/zgrownorm.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [sig, tau] = zgrownorm(mat,meps)
 # function [nonz, zer] = zgrownorm(mat,meps)
 # used internally in tzero
 # returns nonz = number of rows of mat whose two norm exceeds meps
 #         zer = number of rows of mat whose two norm is less than meps
 
 
diff --git a/scripts/control/zgscal.m b/scripts/control/zgscal.m
--- a/scripts/control/zgscal.m
+++ b/scripts/control/zgscal.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function x = zgscal(a,b,c,d,z,n,m,p)
   # x = zgscal(f,z,n,m,p) generalized conjugate gradient iteration to 
   # solve zero-computation generalized eigenvalue problem balancing equation 
   # fx=z
   # called by zgepbal
   #
   # References:
diff --git a/scripts/control/zgsgiv.m b/scripts/control/zgsgiv.m
--- a/scripts/control/zgsgiv.m
+++ b/scripts/control/zgsgiv.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b] = zgsgiv(c,s,a,b)
   # [a,b] = zgsgiv(c,s,a,b)
   # apply givens rotation c,s to row vectors a,b
   # No longer used in zero-balancing (zgpbal); kept for backward compatibility
   
   # A. S. Hodel July 29, 1992
   # Convertion to Octave by R. Bruce Tenison July 3, 1994
diff --git a/scripts/control/zgshsr.m b/scripts/control/zgshsr.m
--- a/scripts/control/zgshsr.m
+++ b/scripts/control/zgshsr.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function x = zgshsr(y)
   # x = zgshsr(y)
   # apply householder vector based on e^(m) to 
   # (column vector) y.
   # Called by zgfslv
 
   # A. S. Hodel July 24, 1992
diff --git a/scripts/control/zp2ss.m b/scripts/control/zp2ss.m
--- a/scripts/control/zp2ss.m
+++ b/scripts/control/zp2ss.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [a,b,c,d] = zp2ss(zer,pol,k)
 # [A,B,C,D] = zp2ss(zer,pol,k)
 # Conversion from zero / pole to state space.
 # Inputs: 
 #   zer,  pol: vectors of (possibly) complex poles and zeros of a transfer
 #              function.  Complex values must come in conjugate pairs
 #              (i.e., x+jy in zer means that x-jy is also in zer)
diff --git a/scripts/control/zp2ssg2.m b/scripts/control/zp2ssg2.m
--- a/scripts/control/zp2ssg2.m
+++ b/scripts/control/zp2ssg2.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [poly,rvals] = zp2ssg2(rvals)
 # [poly,rvals] = zp2ssg2(rvals)
 #
 #  used internally in zp2ss
 # extract 2 values from rvals (if possible) and construct
 # a polynomial with those roots.
 
diff --git a/scripts/control/zp2sys.m b/scripts/control/zp2sys.m
--- a/scripts/control/zp2sys.m
+++ b/scripts/control/zp2sys.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function  outsys = zp2sys (zer,pol,k,tsam,inname,outname)
   # sys = zp2sys (zer,pol,k{,tsam,inname,outname})
   # Create system data structure from zero-pole data
   # inputs:
   #   zer: vector of system zeros
   #   pol: vector of system poles
   #   k: scalar leading coefficient
diff --git a/scripts/control/zp2tf.m b/scripts/control/zp2tf.m
--- a/scripts/control/zp2tf.m
+++ b/scripts/control/zp2tf.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function [num,den] = zp2tf(zer,pol,k)
 # [num,den] = zp2tf(zer,pol,k)
 # Converts zeros / poles to a transfer function.
 #
 # Inputs:
 #   zer, pol: vectors of (possibly complex) poles and zeros of a transfer
 #             function.  Complex values should appear in conjugate pairs
diff --git a/scripts/control/zpout.m b/scripts/control/zpout.m
--- a/scripts/control/zpout.m
+++ b/scripts/control/zpout.m
@@ -9,17 +9,17 @@
 # 
 # Octave is distributed in the hope that it will be useful, but WITHOUT 
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License 
 # along with Octave; see the file COPYING.  If not, write to the Free 
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA. 
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. 
  
 function zpout(zer,pol,k,x)
 #
 # usage: zpout(zer,pol,k,[,x])
 #  
 # print formatted zero-pole form
 # to the screen
 # x defaults to the string "s"
diff --git a/scripts/linear-algebra/housh.m b/scripts/linear-algebra/housh.m
--- a/scripts/linear-algebra/housh.m
+++ b/scripts/linear-algebra/housh.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [housv,beta,zer] = housh(x,j,z)
   # function [housv,beta,zer] = housh(x,j,z)
   # computes householder reflection vector housv to reflect x to be
   # jth column of identity, i.e., (I - beta*housv*housv')x =e(j)
   # inputs
   #   x: vector
   #   j: index into vector
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [Uret,H,nu] = krylov(A,V,k,eps1,pflg);
   # function [U,H,nu] = krylov(A,V,k{,eps1,pflg});
   # construct orthogonal basis U of block Krylov subspace;
   #  [V AV A^2*V ... A^(k+1)*V];
   # method used: householder reflections to guard against loss of
   # orthogonality
   # eps1: threshhold for 0 (default: 1e-12)
diff --git a/scripts/linear-algebra/krylovb.m b/scripts/linear-algebra/krylovb.m
--- a/scripts/linear-algebra/krylovb.m
+++ b/scripts/linear-algebra/krylovb.m
@@ -9,17 +9,17 @@
 #
 # Octave is distributed in the hope that it will be useful, but WITHOUT
 # ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, write to the Free
-# Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+# Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 function [Uret,Ucols] = krylovb(A,V,k,eps1,pflg);
   # function [U,Ucols] = krylovb(A,V,k{,eps1,pflg});
   # construct orthogonal basis U of block Krylov subspace;
   # 	[V AV A^2*V ... A^(k+1)*V];
   # method used: householder reflections to guard against loss of
   # orthogonality
   # eps1: threshhold for 0 (default: 1e-12)
