# HG changeset patch
# User Rik <rik@octave.org>
# Date 1477256220 25200
#      Sun Oct 23 13:57:00 2016 -0700
# Node ID a93887d7f0da75deda475ef191993565324c506e
# Parent  471cc42686777f481bba3e366d7ced2ac0d781cb
Use EmptyValue option correctly in all instances (bug #42023).

* dlmread.cc: Whenever calling resize on the data matrix, supply the fill value
of empty_value.

diff --git a/libinterp/corefcn/dlmread.cc b/libinterp/corefcn/dlmread.cc
--- a/libinterp/corefcn/dlmread.cc
+++ b/libinterp/corefcn/dlmread.cc
@@ -355,19 +355,19 @@ such as text, are also replaced by the @
 
               cmax++;
 
               pos1 = pos2 + 1;
             }
           while (pos2 != std::string::npos);
 
           if (iscmplx)
-            cdata.resize (rmax, cmax);
+            cdata.resize (rmax, cmax, empty_value);
           else
-            rdata.resize (rmax, cmax);
+            rdata.resize (rmax, cmax, empty_value);
         }
 
       r = (r > i + 1 ? r : i + 1);
       j = 0;
 
       size_t pos1, pos2;
       if (auto_sep_is_wspace)
         pos1 = line.find_first_not_of (" \t");  // Skip leading whitespace.
@@ -393,19 +393,19 @@ such as text, are also replaced by the @
 
           c = (c > j + 1 ? c : j + 1);
           if (r > rmax || c > cmax)
             {
               // Use resize_and_fill for the case of unequal length rows.
               rmax = 2*r;
               cmax = c;
               if (iscmplx)
-                cdata.resize (rmax, cmax);
+                cdata.resize (rmax, cmax, empty_value);
               else
-                rdata.resize (rmax, cmax);
+                rdata.resize (rmax, cmax, empty_value);
             }
 
           tmp_stream.str (str);
           tmp_stream.clear ();
 
           double x = octave_read_double (tmp_stream);
           if (tmp_stream)
             {
@@ -499,17 +499,17 @@ such as text, are also replaced by the @
 %!test
 %! file = tempname ();
 %! unwind_protect
 %!   fid = fopen (file, "wt");
 %!   fwrite (fid, "1, 2, 3\n4+4i, 5, 6\n7, 8, 9\n10, 11, 12");
 %!   fclose (fid);
 %!
 %!   assert (dlmread (file), [1, 2, 3; 4 + 4i, 5, 6; 7, 8, 9; 10, 11, 12]);
-%!   assert (dlmread (file, ","), [1, 2, 3; 4 + 4i, 5, 6; 7, 8, 9; 10, 11, 12]);
+%!   assert (dlmread (file, ","), [1,2,3; 4 + 4i, 5, 6; 7, 8, 9; 10, 11, 12]);
 %!   assert (dlmread (file, ",", [1, 0, 2, 1]), [4 + 4i, 5; 7, 8]);
 %!   assert (dlmread (file, ",", "A2..B3"), [4 + 4i, 5; 7, 8]);
 %!   assert (dlmread (file, ",", "A2:B3"), [4 + 4i, 5; 7, 8]);
 %!   assert (dlmread (file, ",", "..B3"), [1, 2; 4 + 4i, 5; 7, 8]);
 %!   assert (dlmread (file, ",", 1, 0), [4 + 4i, 5, 6; 7, 8, 9; 10, 11, 12]);
 %!   assert (dlmread (file, ",", "A2.."), [4 + 4i, 5, 6; 7, 8, 9; 10, 11, 12]);
 %!   fail ('dlmread (file, ",", [0 1])');
 %! unwind_protect_cleanup
@@ -522,15 +522,15 @@ such as text, are also replaced by the @
 %!   fid = fopen (file, "wt");
 %!   fwrite (fid, "    \n 1 2\n11 22\n ");
 %!   fclose (fid);
 %!
 %!   assert (dlmread (file), [1, 2; 11, 22]);
 %!   assert (dlmread (file, " "), [ 0,  0, 0, 0, 0,
 %!                                  0,  1, 2, 0, 0,
 %!                                 11, 22, 0, 0, 0,
-%!                                  0,  0, 0, 0, 0]); 
+%!                                  0,  0, 0, 0, 0]);
 %! unwind_protect_cleanup
 %!   unlink (file);
 %! end_unwind_protect
 
 */
 
