# HG changeset patch
# User Rik <rik@octave.org>
# Date 1347988505 25200
#      Tue Sep 18 10:15:05 2012 -0700
# Node ID c898dbe14e1d32687ad025d0396e45d421efcaad
# Parent  c0dd3ce6d1e29fb93745d99368efdf3627642dae
build: Update imported module list from gnulib.

* bootstrap.conf: Update imported module list from gnulib.

* libgnu/Makefile.am: Auto-updated by gnulib-tool.

* liboctave/link-deps.mk: Add FLOORF_LIBM to list of GNULIB_DEPS.

* lo-mappers.h (xfloor): Change float version to forward to
xfloor in lo-mappers.cc instead of being an inline function.

* lo-mappers.c (xfloor): New function with float signature
which calls gnulib::floorf.
(xround) : Fix typo and call gnulib::roundf for float version of function.

* file-ops.cc: Include "canonicalize.h" for access to
gnulib::canonicalize_file_name.

diff --git a/build-aux/bootstrap.conf b/build-aux/bootstrap.conf
--- a/build-aux/bootstrap.conf
+++ b/build-aux/bootstrap.conf
@@ -14,61 +14,69 @@
 
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 
 # gnulib modules used by this package.
 gnulib_modules="
   base64
-  c-strcase
+  canonicalize
+  chdir
+  close
+  closedir
   copysign
   copysignf
-  closedir
   crypto/md5
+  dup2
   fclose
   fcntl
+  fflush
   filemode
+  floor
+  floorf
   fnmatch
   fopen
-  fflush
   fseek
   ftell
   getcwd
   gethostname
   getopt-gnu
   gettimeofday
   glob
   isatty
   link
   lstat
+  malloc
   mkdir
   mkfifo
   mkostemp
-  mkstemp
   mktime
   nanosleep
   nproc
+  open
   opendir
   pathmax
   progname
   readdir
   readlink
+  realloc
   rename
-  rewinddir
   rmdir
   round
   roundf
+  select
   sigaction
   signal
   sigprocmask
   sleep
   stat
   stdint
   stdio
+  strerror
   strftime
   strptime
   symlink
   sys_stat
   sys_time
   sys_times
   time
   times
diff --git a/libgnu/Makefile.am b/libgnu/Makefile.am
--- a/libgnu/Makefile.am
+++ b/libgnu/Makefile.am
@@ -16,17 +16,17 @@
 # along with this file.  If not, see <http://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License,
 # this file may be distributed as part of a program that
 # contains a configuration script generated by Autoconf, under
 # the same distribution terms as the rest of that program.
 #
 # Generated by gnulib-tool.
-# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 c-strcase closedir copysign copysignf crypto/md5 fclose fcntl fflush filemode fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat mkdir mkfifo mkostemp mkstemp mktime nanosleep nproc opendir pathmax progname readdir readlink rename rewinddir rmdir round roundf sigaction signal sigprocmask sleep stat stdint stdio strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
+# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 canonicalize chdir close closedir copysign copysignf crypto/md5 dup2 fclose fcntl fflush filemode floor floorf fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat malloc mkdir mkfifo mkostemp mktime nanosleep nproc open opendir pathmax progname readdir readlink realloc rename rmdir round roundf select sigaction signal sigprocmask sleep stat stdint stdio strerror strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
 
 AUTOMAKE_OPTIONS = 1.5 gnits
 
 SUBDIRS =
 noinst_HEADERS =
 noinst_LIBRARIES =
 noinst_LTLIBRARIES =
 EXTRA_DIST =
@@ -46,16 +46,17 @@ noinst_LTLIBRARIES += libgnu.la
 libgnu_la_SOURCES =
 libgnu_la_LIBADD = $(gl_LTLIBOBJS)
 libgnu_la_DEPENDENCIES = $(gl_LTLIBOBJS)
 EXTRA_libgnu_la_SOURCES =
 libgnu_la_LDFLAGS = $(AM_LDFLAGS)
 libgnu_la_LDFLAGS += -no-undefined
 libgnu_la_LDFLAGS += $(COPYSIGNF_LIBM)
 libgnu_la_LDFLAGS += $(COPYSIGN_LIBM)
+libgnu_la_LDFLAGS += $(FLOORF_LIBM)
 libgnu_la_LDFLAGS += $(FLOOR_LIBM)
 libgnu_la_LDFLAGS += $(GETHOSTNAME_LIB)
 libgnu_la_LDFLAGS += $(LIBSOCKET)
 libgnu_la_LDFLAGS += $(LIB_NANOSLEEP)
 libgnu_la_LDFLAGS += $(LIB_SELECT)
 libgnu_la_LDFLAGS += $(LTLIBINTL)
 libgnu_la_LDFLAGS += $(ROUNDF_LIBM)
 libgnu_la_LDFLAGS += $(ROUND_LIBM)
@@ -91,42 +92,58 @@ alloca.h: $(top_builddir)/config.status
 	rm -f $@
 endif
 MOSTLYCLEANFILES += alloca.h alloca.h-t
 
 EXTRA_DIST += alloca.in.h
 
 ## end   gnulib module alloca-opt
 
+## begin gnulib module areadlink-with-size
+
+libgnu_la_SOURCES += areadlink-with-size.c
+
+EXTRA_DIST += areadlink.h
+
+## end   gnulib module areadlink-with-size
+
 ## begin gnulib module at-internal
 
 
 EXTRA_DIST += openat-priv.h openat-proc.c
 
 EXTRA_libgnu_la_SOURCES += openat-proc.c
 
 ## end   gnulib module at-internal
 
 ## begin gnulib module base64
 
 libgnu_la_SOURCES += base64.h base64.c
 
 ## end   gnulib module base64
 
+## begin gnulib module bitrotate
+
+libgnu_la_SOURCES += bitrotate.h
+
+## end   gnulib module bitrotate
+
 ## begin gnulib module c-ctype
 
 libgnu_la_SOURCES += c-ctype.h c-ctype.c
 
 ## end   gnulib module c-ctype
 
-## begin gnulib module c-strcase
-
-libgnu_la_SOURCES += c-strcase.h c-strcasecmp.c c-strncasecmp.c
-
-## end   gnulib module c-strcase
+## begin gnulib module canonicalize
+
+libgnu_la_SOURCES += canonicalize.c
+
+EXTRA_DIST += canonicalize.h
+
+## end   gnulib module canonicalize
 
 ## begin gnulib module canonicalize-lgpl
 
 
 EXTRA_DIST += canonicalize-lgpl.c
 
 EXTRA_libgnu_la_SOURCES += canonicalize-lgpl.c
 
@@ -289,16 +306,26 @@ EXTRA_DIST += dirent.in.h
 
 
 EXTRA_DIST += dirfd.c
 
 EXTRA_libgnu_la_SOURCES += dirfd.c
 
 ## end   gnulib module dirfd
 
+## begin gnulib module dirname
+
+libgnu_la_SOURCES += dirname.c basename.c
+
+EXTRA_DIST += stripslash.c
+
+EXTRA_libgnu_la_SOURCES += stripslash.c
+
+## end   gnulib module dirname
+
 ## begin gnulib module dirname-lgpl
 
 libgnu_la_SOURCES += dirname-lgpl.c basename-lgpl.c stripslash.c
 
 EXTRA_DIST += dirname.h
 
 ## end   gnulib module dirname-lgpl
 
@@ -461,16 +488,24 @@ EXTRA_libgnu_la_SOURCES += fdopendir.c
 
 
 EXTRA_DIST += fflush.c stdio-impl.h
 
 EXTRA_libgnu_la_SOURCES += fflush.c
 
 ## end   gnulib module fflush
 
+## begin gnulib module file-set
+
+libgnu_la_SOURCES += file-set.c
+
+EXTRA_DIST += file-set.h
+
+## end   gnulib module file-set
+
 ## begin gnulib module filemode
 
 libgnu_la_SOURCES += filemode.c
 
 EXTRA_DIST += filemode.h
 
 ## end   gnulib module filemode
 
@@ -524,16 +559,25 @@ EXTRA_libgnu_la_SOURCES += float.c itold
 
 
 EXTRA_DIST += floor.c
 
 EXTRA_libgnu_la_SOURCES += floor.c
 
 ## end   gnulib module floor
 
+## begin gnulib module floorf
+
+
+EXTRA_DIST += floor.c floorf.c
+
+EXTRA_libgnu_la_SOURCES += floor.c floorf.c
+
+## end   gnulib module floorf
+
 ## begin gnulib module fnmatch
 
 BUILT_SOURCES += $(FNMATCH_H)
 
 # We need the following in order to create <fnmatch.h> when the system
 # doesn't have one that supports the required API.
 if GL_GENERATE_FNMATCH_H
 fnmatch.h: fnmatch.in.h $(top_builddir)/config.status $(ARG_NONNULL_H)
@@ -746,16 +790,38 @@ endif
 MOSTLYCLEANFILES += glob.h glob.h-t
 
 EXTRA_DIST += glob-libc.h glob.c glob.in.h
 
 EXTRA_libgnu_la_SOURCES += glob.c
 
 ## end   gnulib module glob
 
+## begin gnulib module hash
+
+libgnu_la_SOURCES += hash.c
+
+EXTRA_DIST += hash.h
+
+## end   gnulib module hash
+
+## begin gnulib module hash-pjw
+
+libgnu_la_SOURCES += hash-pjw.h hash-pjw.c
+
+## end   gnulib module hash-pjw
+
+## begin gnulib module hash-triple
+
+libgnu_la_SOURCES += hash-triple.c
+
+EXTRA_DIST += hash-triple.h
+
+## end   gnulib module hash-triple
+
 ## begin gnulib module intprops
 
 
 EXTRA_DIST += intprops.h
 
 ## end   gnulib module intprops
 
 ## begin gnulib module isatty
@@ -890,16 +956,25 @@ EXTRA_libgnu_la_SOURCES += lseek.c
 
 
 EXTRA_DIST += lstat.c
 
 EXTRA_libgnu_la_SOURCES += lstat.c
 
 ## end   gnulib module lstat
 
+## begin gnulib module malloc-gnu
+
+
+EXTRA_DIST += malloc.c
+
+EXTRA_libgnu_la_SOURCES += malloc.c
+
+## end   gnulib module malloc-gnu
+
 ## begin gnulib module malloc-posix
 
 
 EXTRA_DIST += malloc.c
 
 EXTRA_libgnu_la_SOURCES += malloc.c
 
 ## end   gnulib module malloc-posix
@@ -1271,25 +1346,16 @@ EXTRA_libgnu_la_SOURCES += mkfifo.c
 
 
 EXTRA_DIST += mkostemp.c
 
 EXTRA_libgnu_la_SOURCES += mkostemp.c
 
 ## end   gnulib module mkostemp
 
-## begin gnulib module mkstemp
-
-
-EXTRA_DIST += mkstemp.c
-
-EXTRA_libgnu_la_SOURCES += mkstemp.c
-
-## end   gnulib module mkstemp
-
 ## begin gnulib module mktime
 
 
 EXTRA_DIST += mktime-internal.h mktime.c
 
 EXTRA_libgnu_la_SOURCES += mktime.c
 
 ## end   gnulib module mktime
@@ -1404,16 +1470,25 @@ EXTRA_libgnu_la_SOURCES += readdir.c
 
 
 EXTRA_DIST += readlink.c
 
 EXTRA_libgnu_la_SOURCES += readlink.c
 
 ## end   gnulib module readlink
 
+## begin gnulib module realloc-gnu
+
+
+EXTRA_DIST += realloc.c
+
+EXTRA_libgnu_la_SOURCES += realloc.c
+
+## end   gnulib module realloc-gnu
+
 ## begin gnulib module realloc-posix
 
 
 EXTRA_DIST += realloc.c
 
 EXTRA_libgnu_la_SOURCES += realloc.c
 
 ## end   gnulib module realloc-posix
@@ -1458,16 +1533,24 @@ EXTRA_libgnu_la_SOURCES += round.c
 
 
 EXTRA_DIST += round.c roundf.c
 
 EXTRA_libgnu_la_SOURCES += round.c roundf.c
 
 ## end   gnulib module roundf
 
+## begin gnulib module same
+
+libgnu_la_SOURCES += same.c
+
+EXTRA_DIST += same.h
+
+## end   gnulib module same
+
 ## begin gnulib module same-inode
 
 
 EXTRA_DIST += same-inode.h
 
 ## end   gnulib module same-inode
 
 ## begin gnulib module save-cwd
@@ -2225,16 +2308,34 @@ strings.h: strings.in.h $(top_builddir)/
 	} > $@-t && \
 	mv $@-t $@
 MOSTLYCLEANFILES += strings.h strings.h-t
 
 EXTRA_DIST += strings.in.h
 
 ## end   gnulib module strings
 
+## begin gnulib module strndup
+
+
+EXTRA_DIST += strndup.c
+
+EXTRA_libgnu_la_SOURCES += strndup.c
+
+## end   gnulib module strndup
+
+## begin gnulib module strnlen
+
+
+EXTRA_DIST += strnlen.c
+
+EXTRA_libgnu_la_SOURCES += strnlen.c
+
+## end   gnulib module strnlen
+
 ## begin gnulib module strnlen1
 
 libgnu_la_SOURCES += strnlen1.h strnlen1.c
 
 ## end   gnulib module strnlen1
 
 ## begin gnulib module strptime
 
@@ -2965,22 +3066,57 @@ wctype.h: wctype.in.h $(top_builddir)/co
 	} > $@-t && \
 	mv $@-t $@
 MOSTLYCLEANFILES += wctype.h wctype.h-t
 
 EXTRA_DIST += wctype.in.h
 
 ## end   gnulib module wctype-h
 
+## begin gnulib module xalloc
+
+libgnu_la_SOURCES += xmalloc.c
+
+EXTRA_DIST += xalloc.h
+
+## end   gnulib module xalloc
+
+## begin gnulib module xalloc-die
+
+libgnu_la_SOURCES += xalloc-die.c
+
+## end   gnulib module xalloc-die
+
+## begin gnulib module xalloc-oversized
+
+
+EXTRA_DIST += xalloc-oversized.h
+
+## end   gnulib module xalloc-oversized
+
+## begin gnulib module xgetcwd
+
+libgnu_la_SOURCES += xgetcwd.c
+
+EXTRA_DIST += xgetcwd.h
+
+## end   gnulib module xgetcwd
+
 ## begin gnulib module xsize
 
 libgnu_la_SOURCES += xsize.h
 
 ## end   gnulib module xsize
 
+## begin gnulib module xstrndup
+
+libgnu_la_SOURCES += xstrndup.h xstrndup.c
+
+## end   gnulib module xstrndup
+
 
 mostlyclean-local: mostlyclean-generic
 	@for dir in '' $(MOSTLYCLEANDIRS); do \
 	  if test -n "$$dir" && test -d $$dir; then \
 	    echo "rmdir $$dir"; rmdir $$dir; \
 	  fi; \
 	done; \
 	:
diff --git a/liboctave/link-deps.mk b/liboctave/link-deps.mk
--- a/liboctave/link-deps.mk
+++ b/liboctave/link-deps.mk
@@ -1,11 +1,12 @@
 GNULIB_LINK_DEPS = \
   $(COPYSIGNF_LIBM)\
   $(COPYSIGN_LIBM)\
+  $(FLOORF_LIBM)\
   $(FLOOR_LIBM)\
   $(GETHOSTNAME_LIB)\
   $(LIBSOCKET)\
   $(LIB_NANOSLEEP)\
   $(LIB_SELECT)\
   $(LTLIBINTL)\
   $(ROUNDF_LIBM)\
   $(ROUND_LIBM)\
diff --git a/liboctave/numeric/lo-mappers.cc b/liboctave/numeric/lo-mappers.cc
--- a/liboctave/numeric/lo-mappers.cc
+++ b/liboctave/numeric/lo-mappers.cc
@@ -274,20 +274,25 @@ xtrunc (float x)
 }
 
 float
 xcopysign (float x, float y)
 {
   return gnulib::copysignf (x, y);
 }
 
+float xfloor (float x)
+{
+  return gnulib::floorf (x);
+}
+
 float
 xround (float x)
 {
-  return gnulib::round (x);
+  return gnulib::roundf (x);
 }
 
 float
 xroundb (float x)
 {
   float t = xround (x);
 
   if (fabsf (x - t) == 0.5)
diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -114,17 +114,17 @@ extern OCTAVE_API bool octave_is_NaN_or_
 
 extern OCTAVE_API Complex xmin (const Complex& x, const Complex& y);
 extern OCTAVE_API Complex xmax (const Complex& x, const Complex& y);
 
 // Single Precision
 extern OCTAVE_API float xtrunc (float x);
 extern OCTAVE_API float xcopysign (float x, float y);
 inline float xceil (float x) { return ceilf (x); }
-inline float xfloor (float x) { return floorf (x); }
+extern OCTAVE_API float xfloor (float x);
 inline float arg (float x) { return atan2f (0.0f, x); }
 inline float conj (float x) { return x; }
 inline float fix (float x) { return xtrunc (x); }
 inline float imag (float) { return 0.0f; }
 inline float real (float x) { return x; }
 extern OCTAVE_API float xround (float x);
 extern OCTAVE_API float xroundb (float x);
 extern OCTAVE_API float signum (float x);
diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -32,16 +32,17 @@ along with Octave; see the file COPYING.
 #include <iostream>
 #include <vector>
 
 #include <sys/stat.h>
 #include <sys/types.h>
 #include <unistd.h>
 
 #include "pathmax.h"
+#include "canonicalize.h"
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "oct-passwd.h"
 #include "pathlen.h"
