# HG changeset patch
# User Rik <rik@octave.org>
# Date 1531633682 25200
#      Sat Jul 14 22:48:02 2018 -0700
# Node ID 0fa7312e34bcf5ea5f3a9caa85e9fe37805b9824
# Parent  467729037209a257ef0db3d9c82b6f489bfb75b4
Accept case insensitive second argument to typecast for Matlab compatibility (bug #54313).

* typecast.cc (Ftypecast): #include <algorithm> for access to std::transform.
Call std::transform with tolower in order to lowercase second argument.

diff --git a/libinterp/corefcn/typecast.cc b/libinterp/corefcn/typecast.cc
--- a/libinterp/corefcn/typecast.cc
+++ b/libinterp/corefcn/typecast.cc
@@ -20,16 +20,17 @@ along with Octave; see the file COPYING.
 <https://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <algorithm>
 #include <limits>
 
 #include "mx-base.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
@@ -222,16 +223,18 @@ typecast (@var{x}, "uint8")
         get_data_and_bytesize (array.array_value (), data, byte_size,
                                old_dims, frame);
     }
   else
     error ("typecast: invalid input CLASS: %s",
            array.class_name ().c_str ());
 
   std::string numclass = args(1).string_value ();
+  std::transform (numclass.begin (), numclass.end (), numclass.begin (),
+                  tolower);
 
   if (numclass.size () == 0)
     ;
   else if (numclass == "char")
     retval = octave_value (reinterpret_copy<charNDArray>
                            (data, byte_size, old_dims), array.is_dq_string () ? '"'
                            : '\'');
   else if (numclass[0] == 'i')
