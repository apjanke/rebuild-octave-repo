# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1441321253 14400
#      Thu Sep 03 19:00:53 2015 -0400
# Node ID a9a1f021d96b7a45e11b98a7abae1786a3b078ad
# Parent  c36f06ef75392a8ea1f0e96099ac34637aaf6012
# Parent  7ddb10b311265174e6d7537687c75ab21a093238
maint: Periodic merge of stable to default.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -715,16 +715,17 @@ for the x-axis.  __modemsg__.  @xref{XRE
       case "xminorgrid"
         s.doc = "Control whether minor x grid lines are displayed.";
 
       case "xminortick"
       case "xscale"
       case "xtick"
         s.doc = "Position of x tick marks.  __modemsg__.";
         s.valid = "vector";
+        s.printdefault = false;
 
       case "xticklabel"
         s.doc = "Labels of x tick marks.  __modemsg__.";
         s.valid = valid_cellstring;
 
       case "xticklabelmode"
       case "xticklabelrotation"
         s.doc = doc_unused;
@@ -755,16 +756,17 @@ for the y-axis.  __modemsg__.  @xref{XRE
       case "yminorgrid"
         s.doc = "Control whether minor y grid lines are displayed.";
 
       case "yminortick"
       case "yscale"
       case "ytick"
         s.doc = "Position of y tick marks.  __modemsg__.";
         s.valid = "vector";
+        s.printdefault = false;
 
       case "yticklabel"
         s.doc = "Labels of y tick marks.  __modemsg__.";
         s.valid = valid_cellstring;
 
       case "yticklabelmode"
       case "yticklabelrotation"
         s.doc = doc_unused;
@@ -794,16 +796,17 @@ for the z-axis.  __modemsg__.  @xref{XRE
       case "zminorgrid"
         s.doc = "Control whether minor z grid lines are displayed.";
 
       case "zminortick"
       case "zscale"
       case "ztick"
         s.doc = "Position of z tick marks.  __modemsg__.";
         s.valid = "vector";
+        s.printdefault = false;
 
       case "zticklabel"
         s.doc = "Labels of z tick marks.  __modemsg__.";
         s.valid = valid_cellstring;
 
       case "zticklabelmode"
       case "zticklabelrotation"
         s.doc = doc_unused;
diff --git a/scripts/startup/__finish__.m b/scripts/startup/__finish__.m
--- a/scripts/startup/__finish__.m
+++ b/scripts/startup/__finish__.m
@@ -12,32 +12,30 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} __finish__ ()
-## Undocumented internal function.
+## @deftypefn {Script File} {} __finish__
+## Check for the existence of the function/script, @file{finish}, in the
+## path or current working directory and execute it.
+##
+## This function is intended to be excecuted upon a clean exit from Octave.
+## This is accomplished in the system script @file{startup/octaverc} by use of
+## the built-in function @code{atexit}.
+## @seealso{atexit}
 ## @end deftypefn
 
-## Check for the existence of the function/script, @file{finish}, in the
-## path or current working directory and execute it.  This function is
-## intended to be excecuted upon a clean exit from Octave.  This is
-## accomplished in the system script @file{startup/octaverc} by use of
-## the built-in function @code{atexit}.
+## No function declaration, this is is an Octave script.  This means we are
+## still in the base workspace with access to all user variables.
 
-function __finish__ ()
-
-  if (exist ("finish", "file"))
-    ## No arg list here since finish might be a script.
-    finish;
-  endif
-
-endfunction
+if (exist ("finish", "file"))
+  ## No arg list here since finish might be a script.
+  finish;
+endif
 
 
-
-## No test needed for internal helper function.
+## No test needed for internal helper m-file.
 %!assert (1)
 
diff --git a/test/range.tst b/test/range.tst
--- a/test/range.tst
+++ b/test/range.tst
@@ -102,8 +102,17 @@
 
 %!assert (max (rneg), -0)
 %!assert (signbit (max (rneg)), true)
 
 %!assert (sort (r, "descend"), [3 2 1 -0])
 %!assert (signbit (sort (r, "descend")), logical ([0 0 0 1]))
 %!assert (signbit (sort (rrev, "ascend")), logical ([1 0 0 0]))
 
+## Test sorting of ranges (bug #45739)
+
+%!shared r, rrev
+%! r = 1:2:10;
+%! rrev = 10:-2:1;
+
+%!assert (sort (r, "descend"), [9 7 5 3 1])
+%!assert (sort (rrev, "ascend"), [2 4 6 8 10])
+
