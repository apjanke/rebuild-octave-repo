# HG changeset patch
# User Olaf Till <i7tiol@t-online.de>
# Date 1541333927 -3600
#      Sun Nov 04 13:18:47 2018 +0100
# Node ID c197655f9d28eaf0e34a3d733225c4f375c3363b
# Parent  912e1daa03d23ded56df7a7a663903c1a9090414
optimset.m: only use non-empty fields from new options structure (bug #54952).

* optimset.m: Check that new value is not empty before doing assignment
to old value.

diff --git a/scripts/optimization/optimset.m b/scripts/optimization/optimset.m
--- a/scripts/optimization/optimset.m
+++ b/scripts/optimization/optimset.m
@@ -156,17 +156,19 @@ function retval = optimset (varargin)
         elseif (nmatch == 0)
           warning ("optimset: unrecognized option: %s", key);
         else
           fmt = sprintf ("optimset: ambiguous option: %%s (%s%%s)",
                          repmat ("%s, ", 1, nmatch-1));
           warning (fmt, key, opts{i});
         endif
       endif
-      old.(key) = val;
+      if (! isempty (val))
+        old.(key) = val;
+      endif
     endfor
     retval = old;
   elseif (rem (nargs, 2) && isstruct (varargin{1}))
     ## Set values in old from name/value pairs.
     pairs = reshape (varargin(2:end), 2, []);
     retval = optimset (varargin{1}, cell2struct (pairs(2, :), pairs(1, :), 2));
   elseif (rem (nargs, 2) == 0)
     ## Create struct.
@@ -178,14 +180,22 @@ function retval = optimset (varargin)
   endif
 
 endfunction
 
 
 %!assert (isfield (optimset (), "TolFun"))
 %!assert (isfield (optimset ("tolFun", 1e-3), "TolFun"))
 %!assert (optimget (optimset ("tolx", 1e-2), "tOLx"), 1e-2)
+%!test
+%! old = optimset ();
+%! old.TolX = 1e-2;
+%! new = optimset ();
+%! new.TolFun = 1e-3;
+%! joint = optimset (old, new);
+%! assert (joint.TolX, 1e-2);
+%! assert (joint.TolFun, 1e-3);
 
 ## Test input validation
 %!error optimset ("1_Parameter")
 %!error <no defaults for function> optimset ("%NOT_A_REAL_FUNCTION_NAME%")
 %!warning <unrecognized option: foobar> optimset ("foobar", 13);
 %!warning <ambiguous option: Max> optimset ("Max", 10);
