# HG changeset patch
# User jwe
# Date 1173991064 0
#      Thu Mar 15 20:37:44 2007 +0000
# Node ID 59a4304b7cc56e6216d5774e1adda9b494b8dc58
# Parent  6b1535a09268a83fc12b23e92e527a477d553661
[project @ 2007-03-15 20:37:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-03-15  John W. Eaton  <jwe@octave.org>
+
+	* variables.cc (F__lock_global__): Delete.
+
 2007-03-14  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc: New file.
 	* Makefile.in (DIST_SRC): Add it to the list.
 
 2007-03-13  John W. Eaton  <jwe@octave.org>
 
 	* file-io.cc (do_stream_open): Use binary mode if 't' is not
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -693,17 +693,27 @@ the function handle @var{fcn_handle}.\n\
 
   if (args.length () == 1)
     {
       octave_fcn_handle *fh = args(0).fcn_handle_value ();
 
       if (! error_state && fh)
 	{
 	  std::string fh_nm = fh->fcn_name ();
-	  retval = fh_nm;
+
+	  if (fh_nm == "@<anonymous>")
+	    {
+	      std::ostringstream buf;
+
+	      fh->print_raw (buf);
+
+	      retval = buf.str ();
+	    }
+	  else
+	    retval = fh_nm;
 	}
       else
 	error ("func2str: expecting valid function handle as first argument");
     }
   else
     print_usage ();
 
   return retval;
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -2036,46 +2036,16 @@ then return true if the current function
         error ("mislocked: invalid use outside a function");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (__lock_global__, args, ,
-    "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} __lock_global__ (@var{name})\n\
-@end deftypefn")
-{
-  octave_value retval;
-
-  if (args.length () == 1)
-    {
-      std::string nm = args(0).string_value ();
-
-      if (! error_state)
-	{
-	  symbol_record *sr = global_sym_tab->lookup (nm);
-
-	  if (sr)
-	    sr->make_eternal ();
-	  else
-	    error ("__lock_global__: %s not found in global symbol table",
-		   nm.c_str ());
-	}
-      else
-	error ("__lock_global__: expecting argument to be a character string");
-    }
-  else
-    print_usage ();
-
-  return retval;
-}
-
 // Deleting names from the symbol tables.
 
 static inline bool
 name_matches_any_pattern (const std::string& nm,
 			  const string_vector& argv, int argc, int idx)
 {
   bool retval = false;
 
