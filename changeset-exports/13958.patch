# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1322559736 18000
#      Tue Nov 29 04:42:16 2011 -0500
# Node ID cb15c5185b6a3ce8dd85765457be07f79fb1c705
# Parent  c510048901cc3ce162b8e8784f3592dc487ecca9
mkstemp: open file in binary mode (bug #33669)

* file-io.cc (Fmkstemp): Use mkostemp to open temp file using O_BINARY
option.  Add "b" to fopen_mode in call to fdopen.  #include <fcntl.h>
for definition of O_BINARY.
* bootstrap.conf (gnulib_modules): Include mkostemp in the list.

diff --git a/build-aux/bootstrap.conf b/build-aux/bootstrap.conf
--- a/build-aux/bootstrap.conf
+++ b/build-aux/bootstrap.conf
@@ -35,16 +35,17 @@ gnulib_modules="
   gethostname
   getopt-gnu
   gettimeofday
   glob
   link
   lstat
   mkdir
   mkfifo
+  mkostemp
   mkstemp
   mktime
   nanosleep
   nproc
   opendir
   pathmax
   progname
   readlink
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -41,16 +41,17 @@ along with Octave; see the file COPYING.
 #include <cerrno>
 #include <climits>
 #include <cstdio>
 
 #include <iostream>
 #include <stack>
 #include <vector>
 
+#include <fcntl.h>
 #include <sys/types.h>
 #include <unistd.h>
 
 #ifdef HAVE_ZLIB_H
 #include <zlib.h>
 #endif
 
 #include "error.h"
@@ -1976,17 +1977,17 @@ DEFUN (mkstemp, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{fid}, @var{name}, @var{msg}] =} mkstemp (@var{template}, @var{delete})\n\
 Return the file ID corresponding to a new temporary file with a unique\n\
 name created from @var{template}.  The last six characters of @var{template}\n\
 must be @code{XXXXXX} and these are replaced with a string that makes the\n\
 filename unique.  The file is then created with mode read/write and\n\
 permissions that are system dependent (on GNU/Linux systems, the permissions\n\
 will be 0600 for versions of glibc 2.0.7 and later).  The file is opened\n\
-with the @w{@code{O_EXCL}} flag.\n\
+in binary mode and with the @w{@code{O_EXCL}} flag.\n\
 \n\
 If the optional argument @var{delete} is supplied and is true,\n\
 the file will be deleted automatically when Octave exits, or when\n\
 the function @code{purge_tmp_files} is called.\n\
 \n\
 If successful, @var{fid} is a valid file ID, @var{name} is the name of\n\
 the file, and @var{msg} is an empty string.  Otherwise, @var{fid}\n\
 is -1, @var{name} is empty, and @var{msg} contains a system-dependent\n\
@@ -2006,26 +2007,26 @@ error message.\n\
     {
       std::string tmpl8 = args(0).string_value ();
 
       if (! error_state)
         {
           OCTAVE_LOCAL_BUFFER (char, tmp, tmpl8.size () + 1);
           strcpy (tmp, tmpl8.c_str ());
 
-          int fd = gnulib::mkstemp (tmp);
+          int fd = gnulib::mkostemp (tmp, O_BINARY);
 
           if (fd < 0)
             {
               retval(2) = gnulib::strerror (errno);
               retval(0) = fd;
             }
           else
             {
-              const char *fopen_mode = "w+";
+              const char *fopen_mode = "w+b";
 
               FILE *fid = fdopen (fd, fopen_mode);
 
               if (fid)
                 {
                   std::string nm = tmp;
 
                   std::ios::openmode md = fopen_mode_to_ios_mode (fopen_mode);
