# HG changeset patch
# User Rik <rik@octave.org>
# Date 1443970872 25200
#      Sun Oct 04 08:01:12 2015 -0700
# Node ID 235d059cf329d9d61bad97d08a6843e2d755640f
# Parent  e368ce72a844037d9ce307e7e80d73a9a0bbf37b
Fix compilation error introduced in 52ce821a52fd.

* oct-parse.in.yy: Declare fcn variable outside of try/catch block since it is
used later in the function.  catch "octave_execution_exception&" rather than
"octave_execution_error" which doesn't seem to exist.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -4482,26 +4482,26 @@ source_file (const std::string& file_nam
       else if (context == "base")
         octave_call_stack::goto_base_frame ();
       else
         error ("source: context must be \"caller\" or \"base\"");
 
       frame.add_fcn (octave_call_stack::pop);
     }
 
+  octave_function *fcn;
   try
     {
-      octave_function *fcn = parse_fcn_file (file_full_name, file_name,
-                                             "", "", require_file, true,
-                                             false, false, warn_for);
+      fcn = parse_fcn_file (file_full_name, file_name,
+                            "", "", require_file, true,
+                            false, false, warn_for);
     }
-  catch (const octave_execution_error)
+  catch (const octave_execution_exception&)
     {
-      error ("source: error sourcing file '%s'",
-             file_full_name.c_str ());
+      error ("source: error sourcing file '%s'", file_full_name.c_str ());
     }
 
   if (fcn && fcn->is_user_script ())
     {
       octave_value_list args;
 
       if (verbose)
         {
