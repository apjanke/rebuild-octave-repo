# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1467809340 -7200
#      Wed Jul 06 14:49:00 2016 +0200
# Node ID 571b42508e1e17def4cb615426c8b09ea0faf256
# Parent  7d28674f6ff0cfdb8e15d1207f418018f121ad3f
Avoid segfault with matrices containing Inf & NaN (bug #46330).

* liboctave/array/CMatrix.cc (ComplexMatrix::finverse): check for Inf.

* liboctave/array/CMatrix.cc (ComplexMatrix::fsolve): check for Inf, return
appropriate value.

diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -1044,17 +1044,18 @@ ComplexMatrix::finverse (MatrixType &mat
   info = 0;
 
   // Calculate the norm of the matrix, for later use.
   double anorm;
   //if (calc_cond)   // Must always calculate anorm for bug #45577
   anorm = retval.abs ().sum ().row (static_cast<octave_idx_type>(0)).max ();
 
   // Work around bug #45577, LAPACK crashes Octave if norm is NaN
-  if (octave::math::isnan (anorm))
+  // and bug #46330, segfault with matrices containing Inf & NaN
+  if (octave::math::isnan (anorm) || octave::math::isinf (anorm))
     info = -1;
   else
     F77_XFCN (zgetrf, ZGETRF, (nc, nc, tmp_data, nr, pipvt, info));
 
   // Throw-away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
@@ -1069,17 +1070,17 @@ ComplexMatrix::finverse (MatrixType &mat
                                  nc, tmp_data, nr, anorm,
                                  rcon, pz, prz, zgecon_info
                                  F77_CHAR_ARG_LEN (1)));
 
       if (zgecon_info != 0)
         info = -1;
     }
 
-  if (info == -1 && ! force)
+  if ((info == -1 && ! force) || octave::math::isinf (anorm))
     retval = *this;  // Restore contents.
   else
     {
       octave_idx_type zgetri_info = 0;
 
       F77_XFCN (zgetri, ZGETRI, (nc, tmp_data, nr, pipvt,
                                  pz, lwork, zgetri_info));
 
@@ -2133,17 +2134,18 @@ ComplexMatrix::fsolve (MatrixType &matty
           double *prz = rz.fortran_vec ();
 
           // Calculate the norm of the matrix, for later use.
           if (anorm < 0.)
             anorm = atmp.abs ().sum ().row (static_cast<octave_idx_type>(0))
                     .max ();
 
           // Work around bug #45577, LAPACK crashes Octave if norm is NaN
-          if (octave::math::isnan (anorm))
+          // and bug #46330, segfault with matrices containing Inf & NaN
+          if (octave::math::isnan (anorm) || octave::math::isinf (anorm))
             info = -2;
           else
             F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
 
           // Throw-away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
@@ -2196,16 +2198,21 @@ ComplexMatrix::fsolve (MatrixType &matty
                                              nr, b_nc, tmp_data, nr,
                                              pipvt, result, b.rows (), info
                                              F77_CHAR_ARG_LEN (1)));
                 }
               else
                 mattype.mark_as_rectangular ();
             }
         }
+      if (octave::math::isinf (anorm))
+        {
+          retval = ComplexMatrix (b.rows (), b.cols (), Complex (0, 0));
+          mattype.mark_as_full ();
+        }
     }
 
   return retval;
 }
 
 ComplexMatrix
 ComplexMatrix::solve (MatrixType &typ, const Matrix& b) const
 {
