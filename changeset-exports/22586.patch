# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1475603789 -3600
#      Tue Oct 04 18:56:29 2016 +0100
# Node ID d0e972e74851254fb58d96850a16563269d68d48
# Parent  98eeed41f3728ca21ea431d5773ab9753e03bded
# Parent  d2bca82253ee0ac6080824e90f42c7b6baefbd58
maint: merge stable to default.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,8 +1,16 @@
+Summary of important user-visible changes for version 4.4:
+---------------------------------------------------------
+
+ ** Other new functions added in 4.4:
+
+      gsvd
+
+
 Summary of important user-visible changes for version 4.2:
 ---------------------------------------------------------
 
  ** The parser has been extended to accept, but ignore, underscore
     characters in numbers.  This facilitates writing more legible code
     by using '_' as a thousands separator or to group nibbles into bytes
     in hex constants.
 
@@ -159,17 +167,16 @@ Summary of important user-visible change
  ** Other new functions added in 4.2:
 
       audioformats
       camlight
       condeig
       deg2rad
       dialog
       evalc
-      gsvd
       hash
       im2double
       isocaps
       lighting
       localfunctions
       material
       normest1
       ode23
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -168,17 +168,16 @@ COREFCN_SRC = \
   libinterp/corefcn/getgrent.cc \
   libinterp/corefcn/getpwent.cc \
   libinterp/corefcn/getrusage.cc \
   libinterp/corefcn/givens.cc \
   libinterp/corefcn/gl-render.cc \
   libinterp/corefcn/gl2ps-print.cc \
   libinterp/corefcn/graphics.cc \
   libinterp/corefcn/gripes.cc \
-  libinterp/corefcn/gsvd.cc \
   libinterp/corefcn/hash.cc \
   libinterp/corefcn/help.cc \
   libinterp/corefcn/hess.cc \
   libinterp/corefcn/hex2num.cc \
   libinterp/corefcn/hook-fcn.cc \
   libinterp/corefcn/input.cc \
   libinterp/corefcn/inv.cc \
   libinterp/corefcn/interpreter.cc \
diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -395,24 +395,26 @@ function print (varargin)
       nfig = m + 2;
     endif
 
     if (do_hardcopy)
       ## Set background to white for all top-level axes objects
       hax = findall (opts.figure, "-depth", 1, "type", "axes",
                                   "-not", "tag", "legend",
                                   "-not", "color", "none");
-      m = numel (props);
-      for n = 1:numel(hax)
-        props(m+n).h = hax(n);
-        props(m+n).name = "color";
-        props(m+n).value{1} = get(hax(n), "color");
-        set (hax(n), "color", "white");
-      endfor
-      nfig += n;
+      if (! isempty (hax))
+        m = numel (props);
+        for n = 1:numel (hax)
+          props(m+n).h = hax(n);
+          props(m+n).name = "color";
+          props(m+n).value{1} = get(hax(n), "color");
+          set (hax(n), "color", "white");
+        endfor
+        nfig += n;
+      endif
     endif
 
     if (opts.force_solid != 0)
       h = findall (opts.figure, "-property", "linestyle");
       m = numel (props);
       for n = 1:numel (h)
         props(m+n).h = h(n);
         props(m+n).name = "linestyle";
diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -330,20 +330,16 @@ function __gnuplot_draw_axes__ (h, plot_
 
   ## The grid front/back/layerdefault option also controls the
   ## appearance of tics, so it is used even if the grid is absent.
   if (strcmp (axis_obj.layer, "top"))
     fputs (plot_stream, "set grid front;\n");
     fputs (plot_stream, "set border front;\n");
   else
     fputs (plot_stream, "set grid layerdefault;\n");
-    ## FIXME: The gnuplot help says that "layerdefault" should work
-    ##        for set border too, but it fails for me with gnuplot 4.2.5.
-    ##        So, use "back" instead.
-    fputs (plot_stream, "set border back;\n");
   endif
 
   xlogscale = strcmp (axis_obj.xscale, "log");
   ylogscale = strcmp (axis_obj.yscale, "log");
   zlogscale = strcmp (axis_obj.zscale, "log");
 
   ## Detect logscale and negative lims
   if (xlogscale && all (axis_obj.xlim < 0))
@@ -770,24 +766,26 @@ function __gnuplot_draw_axes__ (h, plot_
                               || columns (obj.cdata) == 3)))
                     ccol = cdat(i, :);
                   elseif (ndims (obj.cdata) == 3)
                     ccol = permute (cdat (:, i, :), [1, 3, 2]);
                   else
                     ccol = cdat;
                   endif
                   if (strcmp (obj.facecolor, "flat"))
-                    ccdat = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                     if (isequal (size (ccol), [1, 3]))
                       ## RGB Triplet
                       color = ccol;
-                    elseif (nd == 3 && numel (xcol) == 3)
-                      color = cmap(ccdat(1), :);
                     else
-                      color = cmap(ccdat, :);
+                      ccdat = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
+                      if (nd == 3 && numel (xcol) == 3)
+                        color = cmap(ccdat(1), :);
+                      else
+                        color = cmap(ccdat, :);
+                      endif
                     endif
                   elseif (strcmp (obj.facecolor, "interp"))
                     if (nd == 3 && numel (xcol) == 3)
                       ccdat = ccol;
                       if (! isvector (ccdat))
                         tmp = cmap_sz + rows (addedcmap) + ...
                              [1 : rows(ccdat)];
                         addedcmap = [addedcmap; ccdat];
@@ -889,20 +887,22 @@ function __gnuplot_draw_axes__ (h, plot_
                                 || columns (obj.cdata) == 3)))
                   ccol = cdat(i, :);
                 elseif (ndims (obj.cdata) == 3)
                   ccol = permute (cdat (:, i, :), [1, 3, 2]);
                 else
                   ccol = cdat;
                 endif
                 if (strcmp (ec, "flat"))
-                  ccol = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                   if (isequal (size (ccol), [1, 3]))
                     color = ccol;
                   else
+                    if (columns (ccol) != 3)
+                      ccol = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
+                    endif
                     if (isscalar (ccol))
                       ccol = repmat (ccol, numel (xcol), 1);
                     endif
                     color = "flat";
                     have_cdata(data_idx) = true;
                   endif
                 elseif (strcmp (ec, "interp"))
                   if (numel (ccol) == 3)
@@ -1198,27 +1198,28 @@ function __gnuplot_draw_axes__ (h, plot_
 
           flat_interp_face = (strcmp (obj.facecolor, "flat")
                               || strcmp (obj.facecolor, "interp"));
 
           if (xlen == columns (xdat) && xlen == columns (ydat)
               && ylen == rows (xdat) && ylen == rows (ydat))
             len = 4 * xlen;
             zz = zeros (ylen, len);
+            if (! flat_interp_face)
+              addedcmap = [addedcmap; obj.facecolor];
+            endif
             k = 1;
             for kk = 1:4:len
               zz(:,kk)   = xdat(:,k);
               zz(:,kk+1) = ydat(:,k);
               zz(:,kk+2) = zdat(:,k);
               if (flat_interp_face)
                 zz(:,kk+3) = cdat(:,k);
               else
-                ## Convert color to 24-bit RGB
-                zz(:,kk+3) = hex2dec (sprintf ("%02x%02x%02x",
-                                               round (255*obj.facecolor)));
+                zz(:,kk+3) = cmap_sz + rows (addedcmap);
               endif
               k += 1;
             endfor
             data{data_idx} = zz.';
           endif
 
           doing_interp_color = strcmp (obj.facecolor, "interp");
           if (doing_interp_color)
@@ -1227,22 +1228,17 @@ function __gnuplot_draw_axes__ (h, plot_
             ## No interpolation of facecolors.
             interp_str = "";
           endif
           usingclause{data_idx} = sprintf ("record=%dx%d using ($1):($2):($3):($4)", ylen, xlen);
 
           fputs (plot_stream, "unset pm3d\n");
           fputs (plot_stream, "set style increment default;\n");
           hidden_removal = true;
-          if (flat_interp_face)
-            color_source = "";
-          else
-            color_source = " linecolor rgb variable";
-          endif
-          withclause{data_idx} = sprintf ("with pm3d%s", color_source);
+          withclause{data_idx} = sprintf ("with pm3d");
 
           if (doing_interp_color)
             ## "depthorder" interferes with interpolation of colors.
             dord = "scansautomatic";
           else
             dord = "depthorder";
           endif
 
@@ -2330,17 +2326,20 @@ endfunction
 function colorspec = get_text_colorspec (color)
   colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"", round (255*color));
 endfunction
 
 function [f, s, fnt, it, bld] = get_fontname_and_size (t)
 
   if (isempty (t.fontname) || strcmp (t.fontname, "*"))
     if (ispc ())
-      fnt = "Helvetica";
+      ## FIXME: Should really test for "windows" terminal which is the
+      ## only terminal to have a problem with a null font specification.
+      ## See Bug #49135.
+      fnt = "Arial";
     else
       fnt = "";
     endif
   else
     fnt = t.fontname;
   endif
 
   f = fnt;
@@ -2412,17 +2411,17 @@ function [str, f, s] = __maybe_munge_tex
       if (isnumeric (str{n}))
         str{n} = num2str (str{n});
       endif
     endfor
     str = sprintf ("%s\n", str{:})(1:end-1);
   endif
 
   if (enhanced)
-    str = regexprep (str, '(?<!\\)@', '\@');
+    str = regexprep (str, '(?<!\\)@', '\\@');
   endif
 
   if (enhanced)
     if (strcmp (obj.interpreter, "tex"))
       if (iscellstr (str))
         for n = 1:numel (str)
           str{n} = __tex2enhanced__ (str{n}, fnt, it, bld);
         endfor
diff --git a/scripts/plot/util/private/__gnuplot_draw_figure__.m b/scripts/plot/util/private/__gnuplot_draw_figure__.m
--- a/scripts/plot/util/private/__gnuplot_draw_figure__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_figure__.m
@@ -33,20 +33,21 @@ function __gnuplot_draw_figure__ (h, plo
 
     if (nkids > 0)
       fputs (plot_stream, "\nreset;\n");
       fputs (plot_stream, "set autoscale keepfix;\n");
       fputs (plot_stream, "set origin 0, 0\n");
       fputs (plot_stream, "set size 1, 1\n");
       bg = get (h, "color");
       if (isnumeric (bg))
-        fprintf (plot_stream, "set obj 1 rectangle from screen 0,0 to screen 1,1 behind fc rgb \"#%02x%02x%02x\" fs solid noborder\n", round (255 * bg));
+        fprintf (plot_stream, "if (GPVAL_TERM eq \"qt\") {set obj 1 rectangle from screen 0,0 to screen 1,1 behind fc rgb \"#%02x%02x%02x\" fs solid noborder}\n", round (255 * bg));
         bg_is_set = true;
       else
         bg_is_set = false;
+        fprintf (plot_stream, "unset obj 1");
       endif
       fg_was_set = false;
 
       for i = nkids:-1:1
         type = get (kids(i), "type");
         switch (type)
           case "axes"
             if (strcmpi (get (kids (i), "tag"), "legend"))
diff --git a/scripts/plot/util/private/__gnuplot_print__.m b/scripts/plot/util/private/__gnuplot_print__.m
--- a/scripts/plot/util/private/__gnuplot_print__.m
+++ b/scripts/plot/util/private/__gnuplot_print__.m
@@ -40,16 +40,23 @@ function opts = __gnuplot_print__ (opts)
       opts.fontsize = defaultfontsize;
     else
       opts.fontsize = axesfontsize;
     endif
   endif
   ## The axes-label and tick-label spacing is determined by
   ## the font spec given in "set terminal ..."
   gp_opts = font_spec (opts);
+  bg = get (opts.figure, "color");
+  if (isnumeric (bg))
+    gp_opts = sprintf ("%s background rgb \"#%02x%02x%02x\"",
+                       gp_opts, round (255 * bg));
+  else
+    gp_opts = sprintf ("%s nobackground", gp_opts);
+  endif
 
   pipeline = "";
 
   switch (lower (opts.devopt))
     case {"eps", "eps2", "epsc", "epsc2"}
       if (any (strcmp (opts.devopt, {"eps", "epsc"})))
         gp_opts = [gp_opts " level1"];
       endif
