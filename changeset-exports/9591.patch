# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1251761388 14400
#      Mon Aug 31 19:29:48 2009 -0400
# Node ID 264fb552097384f6a862ca2100763ca3e52d48b2
# Parent  b18a50c56144884e069a08d35fcc478976d554d4
abort if floating point format is not recognized as IEEE

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-08-31  John W. Eaton  <jwe@octave.org>
+
+	* liboctave/lo-ieee.cc (octave_ieee_init): Abort if floating point
+	format is not recognized as IEEE.
+
 2009-08-27  John W. Eaton  <jwe@octave.org>
 
 	* str-vec.cc, str-vec.h (string_vector::string_vector (const
 	std::set<std::string>&)): New constructor.
 
 2009-08-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (DEFCMPLXCMOP): Remove.
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -152,23 +152,22 @@ octave_ieee_init (void)
 	tf.word = LO_IEEE_NA_FLOAT;
 	octave_Float_NA = tf.value;
       }
       break;
 
     case oct_mach_info::flt_fmt_cray:
     case oct_mach_info::flt_fmt_vax_d:
     case oct_mach_info::flt_fmt_vax_g:
-      break;
-
     default:
       // If the format is unknown, then you will probably not have a
       // useful system, but we will just issue a warning and go on...
-      (*current_liboctave_warning_handler)
-	("lo_ieee_init: unrecognized floating point format!");
+      (*current_liboctave_error_handler)
+	("lo_ieee_init: floating point format is not IEEE!  Maybe DLAMCH is miscompiled, or you are using some strange system without IEEE floating point math?");
+      abort ();
     }
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
