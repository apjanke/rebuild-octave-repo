# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1528830487 14400
#      Tue Jun 12 15:08:07 2018 -0400
# Node ID c0bca26d07139c9389f766dc13b3751414a5da8a
# Parent  6011085a9d7c5d91fc9d4f3b6f4d016e0b86bf38
# Parent  1c4ffd4f940496e200009deb5fb8111cce40e03c
maint: Merge stable to default.

diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -1492,17 +1492,17 @@ do_who (octave::interpreter& interp, int
                    my_name.c_str ());
 
           std::string nm = argv[i + 1];
 
           octave::unwind_protect frame;
 
           // Set up temporary scope.
 
-          octave::symbol_scope tmp_scope;
+          octave::symbol_scope tmp_scope ("$dummy_scope$");
 
           symtab.set_scope (tmp_scope);
 
           cs.push (tmp_scope, 0);
           frame.add_method (cs, &octave::call_stack::pop);
 
           octave::feval ("load", octave_value (nm), 0);
 
@@ -1697,16 +1697,34 @@ matching the given patterns.
 {
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("who");
 
   return do_who (interp, argc, argv, nargout == 1);
 }
 
+/*
+%!test
+%! avar = magic (4);
+%! ftmp = [tempname() ".mat"];
+%! unwind_protect
+%!   save (ftmp, "avar");
+%!   vars = whos ("-file", ftmp);
+%!   assert (numel (vars), 1);
+%!   assert (isstruct (vars));
+%!   assert (vars.name, "avar");
+%!   assert (vars.size, [4, 4]);
+%!   assert (vars.class, "double");
+%!   assert (vars.bytes, 128);
+%! unwind_protect_cleanup
+%!   unlink (ftmp);
+%! end_unwind_protect
+*/
+
 DEFMETHOD (whos, interp, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} whos
 @deftypefnx {} {} whos pattern @dots{}
 @deftypefnx {} {} whos option pattern @dots{}
 @deftypefnx {} {S =} whos ("pattern", @dots{})
 Provide detailed information on currently defined variables matching the
 given patterns.
