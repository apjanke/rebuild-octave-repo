# HG changeset patch
# User jwe
# Date 1183044344 0
#      Thu Jun 28 15:25:44 2007 +0000
# Node ID e6b528a3a2a93a1db4d2382415c1fab7d3def486
# Parent  2a83fce5a09737534d070145b1db9ba647c75aec
[project @ 2007-06-28 15:25:43 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2007-06-28  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* plot/subplot.m: Add 'ishandle' check when parsing the existing axes.
+
+	* plot/axis.m: Also set "visible" property when setting axes to
+	on/off.
+
 2007-06-27  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* image/colormap.m: Only return colormap if nargout > 0.
 	Mark as command.
 
 2007-06-25  John W. Eaton  <jwe@octave.org>
 
 	* plot/drawnow.m, plot/__go_draw_axes__.m: Use strcmpi instead of
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -173,18 +173,20 @@ function curr_axis = axis (ax, varargin)
       ## Instead, just let gnuplot do as it likes.
       set (ca, "xlimmode", "auto", "ylimmode", "auto", "zlimmode", "auto");
 
       ## tic marks
     elseif (strcmp (ax, "on") || strcmp (ax, "tic"))
       set (ca, "xtickmode", "auto", "ytickmode", "auto", "ztickmode", "auto");
       set (ca, "xticklabelmode", "auto", "yticklabelmode", "auto",
 	   "zticklabelmode", "auto");
+      set (ca, "visible", "on");
     elseif (strcmp (ax, "off"))
       set (ca, "xtick", [], "ytick", [], "ztick", []);
+      set (ca, "visible", "off");
     elseif (len > 3 && strcmp (ax(1:3), "tic"))
       if (any (ax == "x"))
 	set (ca, "xtickmode", "auto");
       else
 	set (ca, "xtick", []);
       endif
       if (any (ax == "y"))
 	set (ca, "ytickmode", "auto");
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -115,16 +115,23 @@ function h = subplot (rows, columns, ind
   cf = gcf ();
 
   set (cf, "nextplot", "add");
 
   obj = get (cf);
 
   found = false;
   for child = obj.children
+    ## Check if this child is still valid; this might not be the case
+    ## anymore due to the deletion of previous children (due to DeleteFcn
+    ## callback or for legends/colorbars that get deleted with their
+    ## corresponding axes)
+    if (! ishandle (child))
+      continue;
+    endif
     obj = get (child);
     if (strcmp (obj.type, "axes"))
       objpos = obj.outerposition;
       if (objpos == pos)
 	## If the new axes are in exactly the same position as an
 	## existing axes object, use the existing axes.
 	found = true;
 	tmp = child;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2007-06-28  John W. Eaton  <jwe@octave.org>
+
+	* graphics.h (axes::axes_properties::visible): New data member.
+	* graphics.cc (axes::axes_properties::axes_properties, 
+	axes::axes_properties::set, axes::axes_properties::get, 
+	axes::axes_properties::factory_defaults): Handle visible property.
+
 2007-06-27  Kai Habel  <kai.habel@gmx.de>
 
 	* graphics.h (color_values::color_values): Arg is now std:string
 	instead of char.  Call str2rgb, not c2rgb.
 	* graphics.h, graphics.cc: (color_values::str2rgb): Rename from
 	c2rgb.  Handle long color names, not just single char abbreviations.
 
 2007-06-27  David Bateman  <dbateman@free.fr>
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -916,16 +916,17 @@ axes::axes_properties::axes_properties (
     zticklabelmode ("auto"),
     xscale ("linear"),
     yscale ("linear"),
     zscale ("linear"),
     xdir ("normal"),
     ydir ("normal"),
     zdir ("normal"),
     view (),
+    visible ("on"),
     nextplot ("replace"),
     outerposition ()
 {
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
   xlim = tlim;
   ylim = tlim;
   zlim = tlim;
@@ -1103,16 +1104,18 @@ axes::axes_properties::set (const proper
   else if (name.compare ("xdir"))
     xdir = val;
   else if (name.compare ("ydir"))
     ydir = val;
   else if (name.compare ("zdir"))
     zdir = val;
   else if (name.compare ("view"))
     view = val;
+  else if (name.compare ("visible"))
+    visible = val;
   else if (name.compare ("nextplot"))
     nextplot = val;
   else if (name.compare ("outerposition"))
     outerposition = val;
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
@@ -1171,16 +1174,17 @@ axes::axes_properties::set_defaults (bas
   xdir = "normal";
   ydir = "normal";
   zdir = "normal";
 
   Matrix tview (1, 2, 0.0);
   tview(1) = 90;
   view = tview;
 
+  visible = "on";
   nextplot = "replace";
 
   // FIXME -- this is not quite right; we should preserve
   // "position" and "units".
 
   if (mode != "replace")
     {
       Matrix touterposition (1, 4, 0.0);
@@ -1254,16 +1258,17 @@ axes::axes_properties::get (void) const
   m.assign ("zticklabelmode", zticklabelmode);
   m.assign ("xscale", xscale);
   m.assign ("yscale", yscale);
   m.assign ("zscale", zscale);
   m.assign ("xdir", xdir);
   m.assign ("ydir", ydir);
   m.assign ("zdir", zdir);
   m.assign ("view", view);
+  m.assign ("visible", visible);
   m.assign ("nextplot", nextplot);
   m.assign ("outerposition", outerposition);
 
   return m;
 }
 
 octave_value
 axes::axes_properties::get (const property_name& name) const
@@ -1377,16 +1382,18 @@ axes::axes_properties::get (const proper
   else if (name.compare ("xdir"))
     retval = xdir;
   else if (name.compare ("ydir"))
     retval = ydir;
   else if (name.compare ("zdir"))
     retval = zdir;
   else if (name.compare ("view"))
     retval = view;
+  else if (name.compare ("visible"))
+    retval = visible;
   else if (name.compare ("nextplot"))
     retval = nextplot;
   else if (name.compare ("outerposition"))
     retval = outerposition;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
@@ -1476,16 +1483,17 @@ property_list::pval_map_type axes::axes_
   m["ydir"] = "normal";
   m["zdir"] = "normal";
 
   Matrix tview (1, 2, 0.0);
   tview(1) = 90;
 
   m["view"] = tview;
 
+  m["visible"] = "on";
   m["nextplot"] = "replace";
 
   Matrix touterposition (1, 4, 0.0);
   touterposition(2) = 1;
   touterposition(3) = 1;
 
   m["outerposition"] = touterposition;
 
diff --git a/src/graphics.h b/src/graphics.h
--- a/src/graphics.h
+++ b/src/graphics.h
@@ -1203,16 +1203,17 @@ public:
     OCTAVE_GRAPHICS_PROPERTY (octave_value, zticklabelmode);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, xscale);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, yscale);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, zscale);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, xdir);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, ydir);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, zdir);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, view);
+    OCTAVE_GRAPHICS_PROPERTY (octave_value, visible);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, nextplot);
     OCTAVE_GRAPHICS_PROPERTY (octave_value, outerposition);
 
     static std::string go_name;
   };
 
   axes_properties properties;
 
