# HG changeset patch
# User jwe
# Date 856845682 0
#      Tue Feb 25 04:41:22 1997 +0000
# Node ID b02d27f0ed579242e67a1755c8dfaee155fea798
# Parent  7c4b540299d5d0bf2cc52b0d92ea4cefb38469de
[project @ 1997-02-25 04:38:22 by jwe]

diff --git a/test/octave.test/arith/abs-2.m b/test/octave.test/arith/abs-2.m
--- a/test/octave.test/arith/abs-2.m
+++ b/test/octave.test/arith/abs-2.m
@@ -1,1 +1,1 @@
-all (all (abs ([1.1, 3i; 3+4i; -3-4i]) == [1.1, 3; 5, 5]))
+all (all (abs ([1.1, 3i; 3+4i, -3-4i]) == [1.1, 3; 5, 5]))
diff --git a/test/octave.test/arith/arith.exp b/test/octave.test/arith/arith.exp
--- a/test/octave.test/arith/arith.exp
+++ b/test/octave.test/arith/arith.exp
@@ -72,43 +72,65 @@ set test max-1
 set prog_output "ans = 1"
 do_test max-1.m
 
 set test max-2
 set prog_output "ans = 1"
 do_test max-2.m
 
 set test max-3
-set prog_output "error:.*"
+set prog_output "\n... max:.*"
 do_test max-3.m
 
 set test max-4
-set prog_output "error:.*"
+set prog_output "\n... max:.*"
 do_test max-4.m
 
 set test min-1
 set prog_output "ans = 1"
 do_test min-1.m
 
 set test min-2
 set prog_output "ans = 1"
 do_test min-2.m
 
 set test min-3
-set prog_output "error:.*"
+set prog_output "\n... min:.*"
 do_test min-3.m
 
 set test min-4
-set prog_output "error:.*"
+set prog_output "\n... min:.*"
 do_test min-4.m
 
 # nexpow2
 # pow2
 
-# rem
+set test rem-1
+set prog_output "ans = 1"
+do_test rem-1.m
+
+set test rem-2
+set prog_output "ans = 1"
+do_test rem-2.m
+
+set test rem-3
+set prog_output "usage:.*"
+do_test rem-3.m
+
+set test rem-4
+set prog_output "usage:.*"
+do_test rem-4.m
+
+set test rem-5
+set prog_output "error:.*"
+do_test rem-5.m
+
+set test rem-6
+set prog_output "error:.*"
+do_test rem-6.m
 
 set test round-1
 set prog_output "ans = 1"
 do_test round-1.m
 
 set test round-2
 set prog_output "ans = 1"
 do_test round-2.m
@@ -269,21 +291,95 @@ do_test real-4.m
 # asinh
 # acosh
 # atanh
 # asech
 # acsch
 # acoth
 # atan2
 
-# sum
-# prod
-# cumsum
-# cumprod
-# sumsq
+set test sum-1
+set prog_output "ans = 1"
+do_test sum-1.m
+
+set test sum-2
+set prog_output "ans = 1"
+do_test sum-2.m
+
+set test sum-3
+set prog_output "\n... sum:.*"
+do_test sum-3.m
+
+set test sum-4
+set prog_output "\n... sum:.*"
+do_test sum-4.m
+
+set test prod-1
+set prog_output "ans = 1"
+do_test prod-1.m
+
+set test prod-2
+set prog_output "ans = 1"
+do_test prod-2.m
+
+set test prod-3
+set prog_output "\n... prod:.*"
+do_test prod-3.m
+
+set test prod-4
+set prog_output "\n... prod:.*"
+do_test prod-4.m
+
+set test cumsum-1
+set prog_output "ans = 1"
+do_test cumsum-1.m
+
+set test cumsum-2
+set prog_output "ans = 1"
+do_test cumsum-2.m
+
+set test cumsum-3
+set prog_output "\n... cumsum:.*"
+do_test cumsum-3.m
+
+set test cumsum-4
+set prog_output "\n... cumsum:.*"
+do_test cumsum-4.m
+
+set test cumprod-1
+set prog_output "ans = 1"
+do_test cumprod-1.m
+
+set test cumprod-2
+set prog_output "ans = 1"
+do_test cumprod-2.m
+
+set test cumprod-3
+set prog_output "\n... cumprod:.*"
+do_test cumprod-3.m
+
+set test cumprod-4
+set prog_output "\n... cumprod:.*"
+do_test cumprod-4.m
+
+set test sumsq-1
+set prog_output "ans = 1"
+do_test sumsq-1.m
+
+set test sumsq-2
+set prog_output "ans = 1"
+do_test sumsq-2.m
+
+set test sumsq-3
+set prog_output "\n... sumsq:.*"
+do_test sumsq-3.m
+
+set test sumsq-4
+set prog_output "\n... sumsq:.*"
+do_test sumsq-4.m
 
 # beta
 # betai
 # bincoeff
 # erf
 # erfc
 # erfinv
 # gamma
diff --git a/test/octave.test/arith/conj-1.m b/test/octave.test/arith/conj-1.m
--- a/test/octave.test/arith/conj-1.m
+++ b/test/octave.test/arith/conj-1.m
@@ -1,1 +1,1 @@
-conj (1) == 1 && conj (i) == -1 && conj (1+i) == 1-i && conj (1-i) == 1+i
+conj (1) == 1 && conj (i) == -i && conj (1+i) == 1-i && conj (1-i) == 1+i
diff --git a/test/octave.test/arith/cumprod-1.m b/test/octave.test/arith/cumprod-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumprod-1.m
@@ -0,0 +1,2 @@
+(cumprod ([1, 2, 3]) == [1, 2, 6] && cumprod ([-1; -2; -3]) == [-1; 2; -6]
+ && cumprod ([i, 2+i, -3+2i, 4]) == [i, -1+2i, -1-8i, -4-32i])
diff --git a/test/octave.test/arith/cumprod-2.m b/test/octave.test/arith/cumprod-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumprod-2.m
@@ -0,0 +1,2 @@
+all (all (cumprod ([1, 2, 3; i, 2i, 3i; 1+i, 2+2i, 3+3i])
+	  == [1, 2, 3; i, 4i, 9i; -1+i, -8+8i, -27+27i]))
diff --git a/test/octave.test/arith/cumprod-3.m b/test/octave.test/arith/cumprod-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumprod-3.m
@@ -0,0 +1,1 @@
+cumprod ()
diff --git a/test/octave.test/arith/cumprod-4.m b/test/octave.test/arith/cumprod-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumprod-4.m
@@ -0,0 +1,1 @@
+cumprod (1, 2)
diff --git a/test/octave.test/arith/cumsum-1.m b/test/octave.test/arith/cumsum-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumsum-1.m
@@ -0,0 +1,2 @@
+(cumsum ([1, 2, 3]) == [1, 3, 6] && cumsum ([-1; -2; -3]) == [-1; -3; -6]
+ && cumsum ([i, 2+i, -3+2i, 4]) == [i, 2+2i, -1+4i, 3+4i])
diff --git a/test/octave.test/arith/cumsum-2.m b/test/octave.test/arith/cumsum-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumsum-2.m
@@ -0,0 +1,2 @@
+all (all (cumsum ([1, 2, 3; i, 2i, 3i; 1+i, 2+2i, 3+3i])
+	  == [1, 2, 3; 1+i, 2+2i, 3+3i; 2+2i, 4+4i, 6+6i]))
diff --git a/test/octave.test/arith/cumsum-3.m b/test/octave.test/arith/cumsum-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumsum-3.m
@@ -0,0 +1,1 @@
+cumsum ()
diff --git a/test/octave.test/arith/cumsum-4.m b/test/octave.test/arith/cumsum-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/cumsum-4.m
@@ -0,0 +1,1 @@
+cumsum (1, 2)
diff --git a/test/octave.test/arith/max-4.m b/test/octave.test/arith/max-4.m
--- a/test/octave.test/arith/max-4.m
+++ b/test/octave.test/arith/max-4.m
@@ -1,1 +1,1 @@
-max (1, 2)
+max (1, 2, 3)
diff --git a/test/octave.test/arith/min-4.m b/test/octave.test/arith/min-4.m
--- a/test/octave.test/arith/min-4.m
+++ b/test/octave.test/arith/min-4.m
@@ -1,1 +1,1 @@
-min (1, 2)
+min (1, 2, 3)
diff --git a/test/octave.test/arith/prod-1.m b/test/octave.test/arith/prod-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/prod-1.m
@@ -0,0 +1,2 @@
+(prod ([1, 2, 3]) == 6 && prod ([-1; -2; -3]) == -6
+ && prod ([i, 2+i, -3+2i, 4]) == -4-32i)
diff --git a/test/octave.test/arith/prod-2.m b/test/octave.test/arith/prod-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/prod-2.m
@@ -0,0 +1,2 @@
+all (all (prod ([1, 2, 3; i, 2i, 3i; 1+i, 2+2i, 3+3i])
+	  == [-1+i, -8+8i, -27+27i]))
diff --git a/test/octave.test/arith/prod-3.m b/test/octave.test/arith/prod-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/prod-3.m
@@ -0,0 +1,1 @@
+prod ()
diff --git a/test/octave.test/arith/prod-4.m b/test/octave.test/arith/prod-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/prod-4.m
@@ -0,0 +1,1 @@
+prod (1, 2)
diff --git a/test/octave.test/arith/rem-1.m b/test/octave.test/arith/rem-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-1.m
@@ -0,0 +1,1 @@
+all (all (rem ([1, 2, 3; -1, -2, -3], 2) == [1, 0, 1; -1, 0, -1]))
diff --git a/test/octave.test/arith/rem-2.m b/test/octave.test/arith/rem-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-2.m
@@ -0,0 +1,2 @@
+all (all (rem ([1, 2, 3; -1, -2, -3], 2 * ones (2, 3))
+	  == [1, 0, 1; -1, 0, -1]))
diff --git a/test/octave.test/arith/rem-3.m b/test/octave.test/arith/rem-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-3.m
@@ -0,0 +1,1 @@
+rem ()
diff --git a/test/octave.test/arith/rem-4.m b/test/octave.test/arith/rem-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-4.m
@@ -0,0 +1,1 @@
+rem (1, 2, 3)
diff --git a/test/octave.test/arith/rem-5.m b/test/octave.test/arith/rem-5.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-5.m
@@ -0,0 +1,1 @@
+rem ([1, 2], [3, 4, 5])
diff --git a/test/octave.test/arith/rem-6.m b/test/octave.test/arith/rem-6.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/rem-6.m
@@ -0,0 +1,1 @@
+rem (i, 1)
diff --git a/test/octave.test/arith/sqrt-2.m b/test/octave.test/arith/sqrt-2.m
--- a/test/octave.test/arith/sqrt-2.m
+++ b/test/octave.test/arith/sqrt-2.m
@@ -1,2 +1,3 @@
-all (all (sqrt ([4, -4; i, 1-i])
-	  == [2, -2i; exp (0.5 * log (i)), exp (0.5 * log (1-i))]))
+all (all (abs (sqrt ([4, -4; i, 1-i])
+	       - [2, -2i; exp (0.5 * log (i)), exp (0.5 * log (1-i))]))
+	  < sqrt (eps))
diff --git a/test/octave.test/arith/sum-1.m b/test/octave.test/arith/sum-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sum-1.m
@@ -0,0 +1,2 @@
+(sum ([1, 2, 3]) == 6 && sum ([-1; -2; -3]) == -6
+ && sum ([i, 2+i, -3+2i, 4]) == 3+4i)
diff --git a/test/octave.test/arith/sum-2.m b/test/octave.test/arith/sum-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sum-2.m
@@ -0,0 +1,1 @@
+all (all (sum ([1, 2, 3; i, 2i, 3i; 1+i, 2+2i, 3+3i]) == [2+2i, 4+4i, 6+6i]))
diff --git a/test/octave.test/arith/sum-3.m b/test/octave.test/arith/sum-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sum-3.m
@@ -0,0 +1,1 @@
+sum ()
diff --git a/test/octave.test/arith/sum-4.m b/test/octave.test/arith/sum-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sum-4.m
@@ -0,0 +1,1 @@
+sum (1, 2)
diff --git a/test/octave.test/arith/sumsq-1.m b/test/octave.test/arith/sumsq-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sumsq-1.m
@@ -0,0 +1,1 @@
+sumsq ([1, 2, 3]) == 14 && sumsq ([-1; -2; 4i]) == -11
diff --git a/test/octave.test/arith/sumsq-2.m b/test/octave.test/arith/sumsq-2.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sumsq-2.m
@@ -0,0 +1,1 @@
+all (all (sumsq ([1, 2, 3; 2, 3, 4; 4i, 6i, 2]) == [-11, -23, 29]))
diff --git a/test/octave.test/arith/sumsq-3.m b/test/octave.test/arith/sumsq-3.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sumsq-3.m
@@ -0,0 +1,1 @@
+sumsq ()
diff --git a/test/octave.test/arith/sumsq-4.m b/test/octave.test/arith/sumsq-4.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/arith/sumsq-4.m
@@ -0,0 +1,1 @@
+sumsq (1, 2)
diff --git a/test/octave.test/arith/xor-1.m b/test/octave.test/arith/xor-1.m
--- a/test/octave.test/arith/xor-1.m
+++ b/test/octave.test/arith/xor-1.m
@@ -1,2 +1,2 @@
 (xor ([1, 1, 0, 0], [0, 1, 0, 1]) == [1, 0, 0, 1]
- && xor ([i, i, 0, 0], [1, 0, 1, 0]) == [1, 0, 0, 1])
+ && xor ([i, i, 0, 0], [1, 0, 1, 0]) == [0, 1, 1, 0])
diff --git a/test/octave.test/index/dfi-f/index.exp b/test/octave.test/index/dfi-f/index.exp
--- a/test/octave.test/index/dfi-f/index.exp
+++ b/test/octave.test/index/dfi-f/index.exp
@@ -1,11 +1,11 @@
-# Tests with do_fortran_indexing == "false"
+## Tests with do_fortran_indexing == "false"
 
-# scalar tests
+## scalar tests
 
 set test index-s-1
 set prog_output "ans = 1"
 do_test s-1.m
 
 set test index-s-2
 set prog_output "ans = 1"
 do_test s-2.m
@@ -77,17 +77,17 @@ do_test s-18.m
 set test index-s-19
 set prog_output "error:.*"
 do_test s-19.m
 
 set test index-s-20
 set prog_output "error:.*"
 do_test s-20.m
 
-# vector tests
+## vector tests
 
 set test index-v-1
 set prog_output "ans = 4"
 do_test v-1.m
 
 set test index-v-2
 set prog_output "ans = 3"
 do_test v-2.m
@@ -139,17 +139,17 @@ do_test v-13.m
 set test index-v-14
 set prog_output "ans = 1"
 do_test v-14.m
 
 set test index-v-15
 set prog_output "ans = 1"
 do_test v-15.m
 
-# matrix tests
+## matrix tests
 
 set test index-m-1
 set prog_output "ans = 1"
 do_test m-1.m
 
 set test index-m-2
 set prog_output "error:.*"
 do_test m-2.m
diff --git a/test/octave.test/index/dfi-t/index.exp b/test/octave.test/index/dfi-t/index.exp
--- a/test/octave.test/index/dfi-t/index.exp
+++ b/test/octave.test/index/dfi-t/index.exp
@@ -1,11 +1,11 @@
-# Tests with do_fortran_indexing == "true"
+## Tests with do_fortran_indexing == "true"
 
-# scalar tests
+## scalar tests
 
 set test index-s-1
 set prog_output "ans = 1"
 do_test s-1.m
 
 set test index-s-2
 set prog_output "ans = 1"
 do_test s-2.m
@@ -77,17 +77,17 @@ do_test s-18.m
 set test index-s-19
 set prog_output "error:.*"
 do_test s-19.m
 
 set test index-s-20
 set prog_output "error:.*"
 do_test s-20.m
 
-# vector tests
+## vector tests
 
 set test index-v-1
 set prog_output "ans = 4"
 do_test v-1.m
 
 set test index-v-2
 set prog_output "ans = 3"
 do_test v-2.m
@@ -139,17 +139,17 @@ do_test v-13.m
 set test index-v-14
 set prog_output "ans = 1"
 do_test v-14.m
 
 set test index-v-15
 set prog_output "ans = 1"
 do_test v-15.m
 
-# matrix tests
+## matrix tests
 
 set test index-m-1
 set prog_output "ans = 1"
 do_test m-1.m
 
 set test index-m-2
 set prog_output "ans = 1"
 do_test m-2.m
diff --git a/test/octave.test/prefer/prefer.exp b/test/octave.test/prefer/prefer.exp
--- a/test/octave.test/prefer/prefer.exp
+++ b/test/octave.test/prefer/prefer.exp
@@ -1,9 +1,9 @@
-# whitespace_in_literal_matrix
+## whitespace_in_literal_matrix
 
 set test whitespace-in-literal-matrix-1
 set prog_output "parse error.*"
 do_test prefer-1.m
 
 set test whitespace-in-literal-matrix-2
 set prog_output "ans = 1"
 do_test prefer-2.m
@@ -39,147 +39,147 @@ do_test prefer-9.m
 set test whitespace-in-literal-matrix-10
 set prog_output "ans = 3"
 do_test prefer-10.m
 
 set test whitespace-in-literal-matrix-11
 set prog_output "ans = 1"
 do_test prefer-11.m
 
-# implicit_str_to_num_ok
+## implicit_str_to_num_ok
 
 set test implicit-str-to-num-ok-1
 set prog_output "ans = 100"
 do_test prefer-12.m
 
 set test implicit-str-to-num-ok-2
 set prog_output "error:.*"
 do_test prefer-13.m
 
-# ok_to_lose_imaginary_part
+## ok_to_lose_imaginary_part
 
 set test ok-to-lose-imaginary-part-1
 set prog_output "ans = 1"
 do_test prefer-14.m
 
 set test ok-to-lose-imaginary-part-2
 set prog_output "error:.*"
 do_test prefer-15.m
 
 set test ok-to-lose-imaginary-part-3
 set prog_output "warning:.*"
 do_test prefer-16.m
 
-# prefer_column_vectors
+## prefer_column_vectors
 
 set test prefer-column-vectors-1
 set prog_output "ans = 1"
 do_test prefer-17.m
 
 set test prefer-column-vectors-2
 set prog_output "ans = 1"
 do_test prefer-18.m
 
-# print_answer_id_name
+## print_answer_id_name
 
 set test print-answer-id-name-1
 set prog_output "1"
 do_test prefer-19.m
 
 set test print-answer-id-name-2
 set prog_output "a = 1"
 do_test prefer-20.m
 
-# print_empty_dimensions
+## print_empty_dimensions
 
 set test print-empty-dimensions-1
 set prog_output "[]"
 do_test prefer-21.m
 
 set test print-empty-dimensions-2
 set prog_output "[](3x0)"
 do_test prefer-22.m
 
-# propagate_empty_matrices
+## propagate_empty_matrices
 
-# This should maybe test more functions...
+## This should maybe test more functions...
 
 set test propagate-empty-matrices-1
 set prog_output "error:.*"
 do_test prefer-23.m
 
 set test propagate-empty-matrices-2
 set prog_output "ans = 1"
 do_test prefer-24.m
 
-# return_last_computed_value
+## return_last_computed_value
 
 set test return-last-computed-value-1
 set prog_output "ans = 1"
 do_test prefer-25.m
 
 set test return-last-computed-value-2
 set prog_output ""
 do_test prefer-26.m
 
-# save_precision
+## save_precision
 
 set test save-precision-1
 set prog_output "3"
 do_test prefer-27.m
 
 set test save-precision-2
 set prog_output "3.1416"
 do_test prefer-28.m
 
-# silent_functions
+## silent_functions
 
 set test silent-functions-1
 set prog_output "ans = 1"
 do_test prefer-29.m
 
 set test silent-functions-2
 set prog_output ""
 do_test prefer-30.m
 
-# treat_neg_dim_as_zero
+## treat_neg_dim_as_zero
 
 set test treat-neg-dim-as-zero-1
 set prog_output "error:.*"
 do_test prefer-31.m
 
 set test treat-neg-dim-as-zero-2
 set prog_output "warning:.*"
 do_test prefer-32.m
 
 set test treat-neg-dim-as-zero-3
 set prog_output "ans = 1"
 do_test prefer-33.m
 
-# warn_assign_as_truth_value
+## warn_assign_as_truth_value
 
 set test warn-assign-as-truth-value-1
 set prog_output ""
 do_test prefer-34.m
 
 set test warn-assign-as-truth-value-2
 set prog_output "warning:.*"
 do_test prefer-35.m
 
-# warn_comma_in_global_decl
+## warn_comma_in_global_decl
 
 set test warn-comma-in-global-decl-1
 set prog_output ""
 do_test prefer-36.m
 
 set test warn-comma-in-global-decl-2
 set prog_output "warning:.*"
 do_test prefer-37.m
 
-# warn_divide_by_zero
+## warn_divide_by_zero
 
 set test warn-divide-by-zero-1
 set prog_output "ans = 1"
 do_test prefer-38.m
 
 set test warn-divide-by-zero-2
 set prog_output "warning:.*"
 do_test prefer-39.m
diff --git a/test/octave.test/zero-one/fff/zero-one.exp b/test/octave.test/zero-one/fff/zero-one.exp
--- a/test/octave.test/zero-one/fff/zero-one.exp
+++ b/test/octave.test/zero-one/fff/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "false"
-# prefer_column_vectors    == "false"
-# do_fortran_indexing      == "false"
+## Tests with:
+##
+## prefer_zero_one_indexing == "false"
+## prefer_column_vectors    == "false"
+## do_fortran_indexing      == "false"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-fff-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-fff-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-fff-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-fff-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-fff-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-fff-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-fff-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-fff-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-fff-m-1
 set prog_output "error:.*"
 do_test m-1.m
 
 set test zero-one-fff-m-2
 set prog_output "error:.*"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/fft/zero-one.exp b/test/octave.test/zero-one/fft/zero-one.exp
--- a/test/octave.test/zero-one/fft/zero-one.exp
+++ b/test/octave.test/zero-one/fft/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "false"
-# prefer_column_vectors    == "false"
-# do_fortran_indexing      == "true"
+## Tests with:
+##
+## prefer_zero_one_indexing == "false"
+## prefer_column_vectors    == "false"
+## do_fortran_indexing      == "true"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-fft-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-fft-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-fft-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-fft-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-fft-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-fft-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-fft-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-fft-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-fft-m-1
 set prog_output "ans = *1"
 do_test m-1.m
 
 set test zero-one-fft-m-2
 set prog_output "ans = *1"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/ftf/zero-one.exp b/test/octave.test/zero-one/ftf/zero-one.exp
--- a/test/octave.test/zero-one/ftf/zero-one.exp
+++ b/test/octave.test/zero-one/ftf/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "false"
-# prefer_column_vectors    == "true"
-# do_fortran_indexing      == "false"
+## Tests with:
+##
+## prefer_zero_one_indexing == "false"
+## prefer_column_vectors    == "true"
+## do_fortran_indexing      == "false"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-ftf-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-ftf-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-ftf-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-ftf-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-ftf-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-ftf-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-ftf-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-ftf-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-ftf-m-1
 set prog_output "error:.*"
 do_test m-1.m
 
 set test zero-one-ftf-m-2
 set prog_output "error:.*"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/ftt/zero-one.exp b/test/octave.test/zero-one/ftt/zero-one.exp
--- a/test/octave.test/zero-one/ftt/zero-one.exp
+++ b/test/octave.test/zero-one/ftt/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "false"
-# prefer_column_vectors    == "true"
-# do_fortran_indexing      == "true"
+## Tests with:
+##
+## prefer_zero_one_indexing == "false"
+## prefer_column_vectors    == "true"
+## do_fortran_indexing      == "true"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-ftt-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-ftt-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-ftt-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-ftt-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-ftt-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-ftt-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-ftt-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-ftt-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-ftt-m-1
 set prog_output "ans = *1"
 do_test m-1.m
 
 set test zero-one-ftt-m-2
 set prog_output "ans = *1"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/tff/zero-one.exp b/test/octave.test/zero-one/tff/zero-one.exp
--- a/test/octave.test/zero-one/tff/zero-one.exp
+++ b/test/octave.test/zero-one/tff/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "true"
-# prefer_column_vectors    == "false"
-# do_fortran_indexing      == "false"
+## Tests with:
+##
+## prefer_zero_one_indexing == "true"
+## prefer_column_vectors    == "false"
+## do_fortran_indexing      == "false"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-tff-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-tff-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-tff-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-tff-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-tff-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-tff-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-tff-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-tff-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-tff-m-1
 set prog_output "error:.*"
 do_test m-1.m
 
 set test zero-one-tff-m-2
 set prog_output "error:.*"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/tft/zero-one.exp b/test/octave.test/zero-one/tft/zero-one.exp
--- a/test/octave.test/zero-one/tft/zero-one.exp
+++ b/test/octave.test/zero-one/tft/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "true"
-# prefer_column_vectors    == "false"
-# do_fortran_indexing      == "true"
+## Tests with:
+##
+## prefer_zero_one_indexing == "true"
+## prefer_column_vectors    == "false"
+## do_fortran_indexing      == "true"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-tft-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-tft-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-tft-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-tft-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-tft-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-tft-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-tft-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-tft-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-tft-m-1
 set prog_output "ans = *1"
 do_test m-1.m
 
 set test zero-one-tft-m-2
 set prog_output "ans = *1"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/ttf/zero-one.exp b/test/octave.test/zero-one/ttf/zero-one.exp
--- a/test/octave.test/zero-one/ttf/zero-one.exp
+++ b/test/octave.test/zero-one/ttf/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "true"
-# prefer_column_vectors    == "true"
-# do_fortran_indexing      == "false"
+## Tests with:
+##
+## prefer_zero_one_indexing == "true"
+## prefer_column_vectors    == "true"
+## do_fortran_indexing      == "false"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-ttf-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-ttf-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-ttf-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-ttf-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-ttf-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-ttf-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-ttf-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-ttf-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-ttf-m-1
 set prog_output "error:.*"
 do_test m-1.m
 
 set test zero-one-ttf-m-2
 set prog_output "error:.*"
 do_test m-2.m
diff --git a/test/octave.test/zero-one/ttt/zero-one.exp b/test/octave.test/zero-one/ttt/zero-one.exp
--- a/test/octave.test/zero-one/ttt/zero-one.exp
+++ b/test/octave.test/zero-one/ttt/zero-one.exp
@@ -1,15 +1,15 @@
-# Tests with:
-#
-# prefer_zero_one_indexing == "true"
-# prefer_column_vectors    == "true"
-# do_fortran_indexing      == "true"
+## Tests with:
+##
+## prefer_zero_one_indexing == "true"
+## prefer_column_vectors    == "true"
+## do_fortran_indexing      == "true"
 
-# scalar tests
+## scalar tests
 
 set test zero-one-ttt-s-1
 set prog_output "error:.*"
 do_test s-1.m
 
 set test zero-one-ttt-s-2
 set prog_output "ans = *1"
 do_test s-2.m
@@ -17,17 +17,17 @@ do_test s-2.m
 set test zero-one-ttt-s-3
 set prog_output "ans = *1"
 do_test s-3.m
 
 set test zero-one-ttt-s-4
 set prog_output "ans = *1"
 do_test s-4.m
 
-# vector tests
+## vector tests
 
 set test zero-one-ttt-v-1
 set prog_output "ans = *1"
 do_test v-1.m
 
 set test zero-one-ttt-v-2
 set prog_output "ans = *1"
 do_test v-2.m
@@ -35,17 +35,17 @@ do_test v-2.m
 set test zero-one-ttt-v-3
 set prog_output "ans = *1"
 do_test v-3.m
 
 set test zero-one-ttt-v-4
 set prog_output "ans = *1"
 do_test v-4.m
 
-# matrix tests
+## matrix tests
 
 set test zero-one-ttt-m-1
 set prog_output "ans = *1"
 do_test m-1.m
 
 set test zero-one-ttt-m-2
 set prog_output "ans = *1"
 do_test m-2.m
