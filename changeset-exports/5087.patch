# HG changeset patch
# User jwe
# Date 1101101917 0
#      Mon Nov 22 05:38:37 2004 +0000
# Node ID 7497a16d90f951b40ddc1227ba9be1c26bff7580
# Parent  55f5b61d74b707819496da3cc4de48b42cb8f249
[project @ 2004-11-22 05:38:37 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2004-11-22  John W. Eaton  <jwe@octave.org>
+
+	* pt-arg-list.cc (tree_argument_list::convert_to_const_vector):
+	Check to see whether object is a function or function handle
+	instead of constant.
+
 2004-11-19  John W. Eaton  <jwe@octave.org>
 
 	* ov-str-mat.cc (octave_char_matrix_str::do_index_op):
 	Skip indexing operation if indices are invalid.
 
 	* pr-output.cc (set_range_format, set_complex_matrix_format,
 	set_complex_format, set_real_matrix_format, set_real_format):
 	Also specify std::ios::fixed for bank format.
diff --git a/src/pt-arg-list.cc b/src/pt-arg-list.cc
--- a/src/pt-arg-list.cc
+++ b/src/pt-arg-list.cc
@@ -169,17 +169,19 @@ DEFCONSTFUN (__end__, , ,
 
 octave_value_list
 tree_argument_list::convert_to_const_vector (const octave_value *object)
 {
   // END doesn't make sense for functions.  Maybe we need a different
   // way of asking an octave_value object this question?
 
   bool stash_object = (list_includes_magic_end
-		       && object && object->is_constant ());
+		       && object
+		       && ! (object->is_function ()
+			     || object->is_function_handle ()));
 
   if (stash_object)
     {
       unwind_protect::begin_frame ("convert_to_const_vector");
 
       unwind_protect_ptr (indexed_object);
 
       indexed_object = object;
