# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1285826422 -7200
#      Thu Sep 30 08:00:22 2010 +0200
# Node ID 4bec51eb58e20e32029e5fb7d571518028846b09
# Parent  b721e12140ccfb01d15eeeaf4cee8995ca80e996
replace Octave_map->octave_map in pt-idx.h

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-09-30  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-idx.cc (tree_index_expression::make_arg_struct): Use octave_map
+	instead of Octave_map.
+	* pt-idx.h: Update decl.
+
 2010-09-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-map.cc (octave_map::contents): Fix off-by-1 error.
 
 2010-09-29  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__glpk__.cc (OCTAVE_GLPK_GET_REAL_PARAM,
 	OCTAVE_GLPK_GET_INT_PARAM): Use GETFIELD to access map fields,
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -219,29 +219,29 @@ tree_index_expression::get_struct_index
         }
       else
         panic_impossible ();
     }
 
   return fn;
 }
 
-Octave_map
+octave_map
 tree_index_expression::make_arg_struct (void) const
 {
   int n = args.size ();
 
   Cell type_field (n, 1);
   Cell subs_field (n, 1);
 
   std::list<tree_argument_list *>::const_iterator p_args = args.begin ();
   std::list<string_vector>::const_iterator p_arg_nm = arg_nm.begin ();
   std::list<tree_expression *>::const_iterator p_dyn_field = dyn_field.begin ();
 
-  Octave_map m;
+  octave_map m;
 
   for (int i = 0; i < n; i++)
     {
       switch (type[i])
         {
         case '(':
           subs_field(i) = make_subs_cell (*p_args, *p_arg_nm);
           break;
diff --git a/src/pt-idx.h b/src/pt-idx.h
--- a/src/pt-idx.h
+++ b/src/pt-idx.h
@@ -25,17 +25,17 @@ along with Octave; see the file COPYING.
 #define octave_tree_index_h 1
 
 #include <list>
 
 class tree_argument_list;
 
 class tree_walker;
 
-class Octave_map;
+class octave_map;
 class octave_value;
 class octave_value_list;
 class octave_lvalue;
 
 #include "str-vec.h"
 
 #include "pt-exp.h"
 #include "symtab.h"
@@ -110,17 +110,17 @@ private:
   // references.
   std::list<string_vector> arg_nm;
 
   // The list of dynamic field names, if any.
   std::list<tree_expression *> dyn_field;
 
   tree_index_expression (int l, int c);
 
-  Octave_map make_arg_struct (void) const;
+  octave_map make_arg_struct (void) const;
 
   std::string
   get_struct_index
     (std::list<string_vector>::const_iterator p_arg_nm,
      std::list<tree_expression *>::const_iterator p_dyn_field) const; 
 
   // No copying!
 
