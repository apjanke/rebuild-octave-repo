# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1502458982 14400
#      Fri Aug 11 09:43:02 2017 -0400
# Node ID b3b136bc7ce2e188ce64b237c4fdadc0e2429bd7
# Parent  8e61b91f2e2400f181da5e1c22439eaad147e7c1
shorten messages displayed at end of make check

* __run_test_suite__.m: Shorten summary messages.

* test/module.mk: Silence run-octave-tests unless V=1.

diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -94,29 +94,27 @@ function [pass, fail, xfail, xbug, skip,
       endif
       if (drtsk > 0)
         printf ("  %-30s %6d\n", "SKIPPED (run-time condition)", drtsk);
       endif
       puts ("\n");
       printf ("See the file %s for additional details.\n", logfile);
       if (dxf > 0 || dxb > 0)
         puts ("\n");
-        puts ("Items listed as XFAIL above are expected failures or\n");
-        puts ("bugs that have already been reported.  Bug report numbers\n");
-        puts ("for them may be found in the log file:\n");
+        puts ("XFAIL items are expected failures or known bugs.\n");
+        puts ("Bug report numbers may be found in the log file:\n");
         puts (logfile);
         puts ("\nPlease help improve Octave by contributing fixes for them.\n");
       endif
       if (dsk > 0 || drtsk > 0)
         puts ("\n");
-        puts ("Tests are most often skipped because the features they require\n");
-        puts ("have been disabled.  Features are most often disabled because\n");
-        puts ("they require dependencies that were not present when Octave\n");
-        puts ("was built.  The configure script should have printed a summary\n");
-        puts ("at the end of its run indicating which dependencies were not found.\n");
+        puts ("Tests are often skipped because required features were\n");
+        puts ("disabled or were not present when Octave was built.\n");
+        puts ("The configure script should have printed a summary\n");
+        puts ("indicating which dependencies were not found.\n");
       endif
 
       ## Weed out deprecated and private functions
       weed_idx = cellfun (@isempty, regexp (files_with_tests, '\<deprecated\>|\<private\>', 'once'));
       files_with_tests = files_with_tests(weed_idx);
       weed_idx = cellfun (@isempty, regexp (files_with_no_tests, '\<deprecated\>|\<private\>', 'once'));
       files_with_no_tests = files_with_no_tests(weed_idx);
 
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -70,35 +70,35 @@ include %reldir%/nest/module.mk
 include %reldir%/publish/module.mk
 
 ALL_LOCAL_TARGETS += %reldir%/.gdbinit
 
 %reldir%/.gdbinit: etc/gdbinit
 	@$(gdbinit_install_rule)
 
 define run-octave-tests
-  cd test && $(SHELL) ../run-octave $(RUN_OCTAVE_OPTIONS) $(1) --norc --silent --no-history $(abs_top_srcdir)/%reldir%/fntests.m $(abs_top_srcdir)/test
+  cd test && $(SHELL) ../run-octave $(RUN_OCTAVE_OPTIONS) $(1) --norc --silent --no-history $(abs_top_srcdir)/%reldir%/fntests.m $(abs_top_srcdir)/test; \
   if $(AM_V_P); then \
     echo ""; \
     if [ -f %reldir%/fntests.log ]; then \
       echo "Contents of %reldir%/fntests.log:"; \
       echo ""; \
       $(AWK) -f $(srcdir)/%reldir%/show-failures.awk %reldir%/fntests.log; \
     else \
       echo "%reldir%/fntests.log is missing!"; \
     fi; \
   fi
 endef
 
 check-local: $(GENERATED_TEST_FILES) | $(OCTAVE_INTERPRETER_TARGETS) %reldir%/$(octave_dirstamp)
-	$(call run-octave-tests)
+	$(AM_V_at)$(call run-octave-tests)
 
 if AMCOND_HAVE_LLVM
 check-jit: $(GENERATED_TEST_FILES) | $(OCTAVE_INTERPRETER_TARGETS) %reldir%/$(octave_dirstamp)
-	$(call run-octave-tests,--jit-compiler)
+	$(AM_V_at)$(call run-octave-tests,--jit-compiler)
 endif
 
 COVERAGE_DIR = %reldir%/coverage
 COVERAGE_INFO = $(COVERAGE_DIR)/$(PACKAGE).info
 
 ## FIXME: To get something useful out of 'make coverage', you should use gcc
 ## and configure with compiler flags set to '-g --coverage'.  Adding the
 ## --coverage option to either WARN_CXXFLAGS or XTRA_CXXFLAGS resulted in
