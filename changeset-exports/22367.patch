# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471991659 25200
#      Tue Aug 23 15:34:19 2016 -0700
# Node ID 459545bc901930e068e3046715f5fe774f13061b
# Parent  837df5db571082231040755550d241db04758b57
Use ishold () rather than ishold (hax) for performance.

* area.m, colorbar.m, contour.m, contourf.m, loglog.m, loglogerr.m, polar.m,
__bar__.m, quiver3.m, scatter3.m, semilogx.m, semilogxerr.m, semilogy.m,
semilogyerr.m, surf.m, surfl.m:
Use ishold () rather than ishold (hax) for performance.

diff --git a/scripts/plot/draw/area.m b/scripts/plot/draw/area.m
--- a/scripts/plot/draw/area.m
+++ b/scripts/plot/draw/area.m
@@ -111,17 +111,17 @@ function h = area (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
     htmp = __area__ (hax, x, y, bv, varargin{num_numeric+1:end});
 
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "box", "on");
     endif
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/colorbar.m b/scripts/plot/draw/colorbar.m
--- a/scripts/plot/draw/colorbar.m
+++ b/scripts/plot/draw/colorbar.m
@@ -664,16 +664,17 @@ endfunction
 %! clf;
 %! colormap ("default");
 %! n = 64; x = kron (1:n, ones (n,1)); x = abs (x - x.');
 %! contour (x);
 %! xlim ([1, 64]);
 %! ylim ([1, 64]);
 %! colorbar ();
 %! colorbar off;
+%! title ("colorbar off");
 
 %!demo
 %! clf;
 %! colormap ("default");
 %! n = 64; x = kron (1:n, ones (n,1)); x = abs (x - x.');
 %! contour (x);
 %! xlim ([1, 64]);
 %! ylim ([1, 64]);
diff --git a/scripts/plot/draw/contour.m b/scripts/plot/draw/contour.m
--- a/scripts/plot/draw/contour.m
+++ b/scripts/plot/draw/contour.m
@@ -68,17 +68,17 @@ function [c, h] = contour (varargin)
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     [ctmp, htmp] = __contour__ (hax, "none", varargin{:});
 
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "box", "on");
     endif
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/contourf.m b/scripts/plot/draw/contourf.m
--- a/scripts/plot/draw/contourf.m
+++ b/scripts/plot/draw/contourf.m
@@ -69,16 +69,21 @@ function [c, h] = contourf (varargin)
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     [ctmp, htmp] = __contour__ (hax, "none", "fill", "on",
                                      "linecolor", "black", varargin{:});
+
+    if (! ishold ())
+      set (hax, "box", "on");
+    endif
+
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
   if (nargout > 0)
     c = ctmp;
diff --git a/scripts/plot/draw/loglog.m b/scripts/plot/draw/loglog.m
--- a/scripts/plot/draw/loglog.m
+++ b/scripts/plot/draw/loglog.m
@@ -48,17 +48,17 @@ function h = loglog (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "xscale", "log", "yscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "xminortick", "on", "yminortick", "on", "box", "on");
     endif
 
     htmp = __plt__ ("loglog", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
diff --git a/scripts/plot/draw/loglogerr.m b/scripts/plot/draw/loglogerr.m
--- a/scripts/plot/draw/loglogerr.m
+++ b/scripts/plot/draw/loglogerr.m
@@ -58,17 +58,17 @@ function h = loglogerr (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "xscale", "log", "yscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "xminortick", "on", "yminortick", "on", "box", "on");
     endif
     htmp = __errplot__ ("loglogerr", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
diff --git a/scripts/plot/draw/polar.m b/scripts/plot/draw/polar.m
--- a/scripts/plot/draw/polar.m
+++ b/scripts/plot/draw/polar.m
@@ -90,17 +90,17 @@ function h = polar (varargin)
         maxr = max (imag (varargin{1})(:));
       else
         maxr = max (varargin{1}(:));
       endif
     else
       print_usage ();
     endif
 
-    if (! ishold (hax))
+    if (! ishold ())
       hg = hggroup (hax, "tag", "polar_grid", "handlevisibility", "off");
 
       set (hax, "visible", "off", "plotboxaspectratio", [1, 1, 1],
                 "zlim", [-1 1]);
 
       if (! isprop (hax, "rtick"))
         addproperty ("rtick", hax, "data");
       endif
diff --git a/scripts/plot/draw/private/__bar__.m b/scripts/plot/draw/private/__bar__.m
--- a/scripts/plot/draw/private/__bar__.m
+++ b/scripts/plot/draw/private/__bar__.m
@@ -190,17 +190,17 @@ function varargout = __bar__ (vertical, 
       oldfig = get (0, "currentfigure");
     endif
     unwind_protect
       hax = newplot (hax);
 
       htmp = bars (hax, vertical, x, y, xb, yb, gwidth, group,
                    have_line_spec, bv, newargs{:});
 
-      if (! ishold (hax))
+      if (! ishold ())
         if (all (x(:,1) == fix (x(:,1))))
           if (vertical)
             set (hax, "xtick", x(:,1));
           else
             set (hax, "ytick", x(:,1));
           endif
         endif
         ## Hack prevents color and xlim setting changes when basevalue changes.
diff --git a/scripts/plot/draw/quiver3.m b/scripts/plot/draw/quiver3.m
--- a/scripts/plot/draw/quiver3.m
+++ b/scripts/plot/draw/quiver3.m
@@ -77,17 +77,17 @@ function h = quiver3 (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
     htmp = __quiver__ (hax, true, varargin{:});
 
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/scatter3.m b/scripts/plot/draw/scatter3.m
--- a/scripts/plot/draw/scatter3.m
+++ b/scripts/plot/draw/scatter3.m
@@ -77,17 +77,17 @@ function retval = scatter3 (varargin)
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     htmp = __scatter__ (hax, 3, "scatter3", varargin{:});
 
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
diff --git a/scripts/plot/draw/semilogx.m b/scripts/plot/draw/semilogx.m
--- a/scripts/plot/draw/semilogx.m
+++ b/scripts/plot/draw/semilogx.m
@@ -48,17 +48,17 @@ function h = semilogx (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "xscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "xminortick", "on", "box", "on");
     endif
 
     htmp = __plt__ ("semilogx", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
diff --git a/scripts/plot/draw/semilogxerr.m b/scripts/plot/draw/semilogxerr.m
--- a/scripts/plot/draw/semilogxerr.m
+++ b/scripts/plot/draw/semilogxerr.m
@@ -60,17 +60,17 @@ function h = semilogxerr (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "xscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "xminortick", "on");
     endif
 
     htmp = __errplot__ ("semilogxerr", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
diff --git a/scripts/plot/draw/semilogy.m b/scripts/plot/draw/semilogy.m
--- a/scripts/plot/draw/semilogy.m
+++ b/scripts/plot/draw/semilogy.m
@@ -48,17 +48,17 @@ function h = semilogy (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "yscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "yminortick", "on", "box", "on");
     endif
 
     htmp = __plt__ ("semilogy", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
diff --git a/scripts/plot/draw/semilogyerr.m b/scripts/plot/draw/semilogyerr.m
--- a/scripts/plot/draw/semilogyerr.m
+++ b/scripts/plot/draw/semilogyerr.m
@@ -60,17 +60,17 @@ function h = semilogyerr (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     set (hax, "yscale", "log");
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "yminortick", "on");
     endif
 
     htmp = __errplot__ ("semilogyerr", hax, varargin{:});
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
diff --git a/scripts/plot/draw/surf.m b/scripts/plot/draw/surf.m
--- a/scripts/plot/draw/surf.m
+++ b/scripts/plot/draw/surf.m
@@ -66,17 +66,17 @@ function retval = surf (varargin)
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     htmp = surface (varargin{:});
 
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on");
     endif
 
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
diff --git a/scripts/plot/draw/surfl.m b/scripts/plot/draw/surfl.m
--- a/scripts/plot/draw/surfl.m
+++ b/scripts/plot/draw/surfl.m
@@ -139,17 +139,17 @@ function h = surfl (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
 
     htmp = surface (varargin{:});
-    if (! ishold (hax))
+    if (! ishold ())
       set (hax, "view", [-37.5, 30],
                 "xgrid", "on", "ygrid", "on", "zgrid", "on", "clim", [0 1]);
     endif
 
     ## Get view vector (vv).
     [az, el] = view ();
     vv = sph2cart ((az - 90) * pi/180.0, el * pi/180.0, 1.0);
 
