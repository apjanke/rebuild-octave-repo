# HG changeset patch
# User Jacob@Jacob-PC
# Date 1317016520 -7200
#      Mon Sep 26 07:55:20 2011 +0200
# Node ID c0e0625ffd1396f649ec0e59a7a94a22eb13cf62
# Parent  ee7f4294d1621c5dac5e1ed2ee4cdac2e34633fa
Adjustements for compiling on Windows.

diff --git a/gui/octave-gui.pro b/gui/octave-gui.pro
--- a/gui/octave-gui.pro
+++ b/gui/octave-gui.pro
@@ -26,17 +26,17 @@ MOC_DIR             = moc-files         
 OBJECTS_DIR         = object-files                  # Folder for object files
 
 TRANSLATIONS        += languages/generic.ts \
                        languages/de-de.ts \
                        languages/pt-br.ts \
                        languages/es-es.ts \
                        languages/ru-ru.ts \
                        languages/uk-ua.ts           # Available translations
-LIBS                += -lqscintilla2
+LIBS                += -lqscintilla2 $$system(mkoctfile -p LIBS) $$system(mkoctfile -p OCTAVE_LIBS)
 
 mac {
     CONFIG -= app_bundle
 }
 
 # Includepaths and libraries to link against:
 INCLUDEPATH         += src src/terminal src/qirc src/backend \
                        $$system(mkoctfile -p INCFLAGS)
@@ -47,69 +47,85 @@ mac {
 
 LFLAGS              += $$system(mkoctfile -p LFLAGS) \
                        $$system(mkoctfile -p OCTAVE_LIBS) \
                        $$system(mkoctfile -p LIBS)
 mac {
     LFLAGS += -L/opt/local-native/lib
 }
 
-QMAKE_LFLAGS        += $$LFLAGS -lutil $$system(mkoctfile -p RLD_FLAG)
+unix {
+    QMAKE_LFLAGS +=  -lutil
+}
+
+win32 {
+    QMAKE_LFLAGS += --enable-auto-import
+}
+
+QMAKE_LFLAGS        += $$LFLAGS $$system(mkoctfile -p RLD_FLAG)
 QMAKE_CXXFLAGS      += $$INCFLAGS
 
 # Files associated with the project:
 SOURCES +=\
-        src/lexer/lexeroctavegui.cpp \
-        src/MainWindow.cpp \
-    	  src/VariablesDockWidget.cpp \
-    	  src/HistoryDockWidget.cpp \
-    	  src/FilesDockWidget.cpp \
-    	  src/FileEditorMdiSubWindow.cpp \
-    	  src/BrowserWidget.cpp \
-    	  src/ImageViewerMdiSubWindow.cpp \
+    src/lexer/lexeroctavegui.cpp \
+    src/MainWindow.cpp \
+    src/VariablesDockWidget.cpp \
+    src/HistoryDockWidget.cpp \
+    src/FilesDockWidget.cpp \
+    src/FileEditorMdiSubWindow.cpp \
+    src/BrowserWidget.cpp \
+    src/ImageViewerMdiSubWindow.cpp \
     src/irc/IRCWidget.cpp \
     src/SettingsDialog.cpp \
     src/OctaveGUI.cpp \
     src/ResourceManager.cpp \
     src/CommandLineParser.cpp \
     src/backend/OctaveCallbackThread.cpp \
     src/backend/OctaveLink.cpp \
     src/backend/OctaveMainThread.cpp \
     src/irc/IRCClientImpl.cpp \
     src/terminal/TerminalEmulation.cpp \
-    src/terminal/LinuxTerminalEmulation.cpp \
     src/backend/ReadlineAdapter.cpp \
-    src/terminal/KPty.cpp \
-    src/terminal/KPtyDevice.cpp \
     src/TerminalView.cpp \
     src/TerminalHighlighter.cpp \
     src/WelcomeWizard.cpp
 
+unix {
+SOURCES +=\
+    src/terminal/LinuxTerminalEmulation.cpp \
+    src/terminal/KPty.cpp \
+    src/terminal/KPtyDevice.cpp
+}
+
 HEADERS += \
-        src/lexer/lexeroctavegui.h \
-    	  src/MainWindow.h \
-    	  src/VariablesDockWidget.h \
-    	  src/HistoryDockWidget.h \
-    	  src/FilesDockWidget.h \
-    	  src/FileEditorMdiSubWindow.h \
-    	  src/BrowserWidget.h \
-    	  src/ImageViewerMdiSubWindow.h \
+    src/lexer/lexeroctavegui.h \
+    src/MainWindow.h \
+    src/VariablesDockWidget.h \
+    src/HistoryDockWidget.h \
+    src/FilesDockWidget.h \
+    src/FileEditorMdiSubWindow.h \
+    src/BrowserWidget.h \
+    src/ImageViewerMdiSubWindow.h \
     src/irc/IRCWidget.h \
     src/SettingsDialog.h \
     src/ResourceManager.h \
     src/CommandLineParser.h \
     src/backend/OctaveCallbackThread.h \
     src/backend/OctaveLink.h \
     src/backend/OctaveMainThread.h \
     src/irc/IRCClientInterface.h \
     src/irc/IRCClientImpl.h \
     src/terminal/TerminalEmulation.h \
-    src/terminal/LinuxTerminalEmulation.h \
     src/backend/ReadlineAdapter.h \
-    src/terminal/KPtyDevice.h \
-    src/terminal/KPty.h \
     src/TerminalView.h \
     src/TerminalHighlighter.h \
     src/WelcomeWizard.h
 
+unix {
+HEADERS += \
+    src/terminal/LinuxTerminalEmulation.h \
+    src/terminal/KPtyDevice.h \
+    src/terminal/KPty.h
+}
+
 FORMS += \
     src/SettingsDialog.ui \
     src/WelcomeWizard.ui
diff --git a/gui/src/TerminalView.cpp b/gui/src/TerminalView.cpp
--- a/gui/src/TerminalView.cpp
+++ b/gui/src/TerminalView.cpp
@@ -48,23 +48,23 @@ void
 TerminalView::setTextCursor (const QTextCursor &cursor)
 {
   QPlainTextEdit::setTextCursor (cursor);
 }
 
 void
 TerminalView::bell ()
 {
-
 }
 
 void
 TerminalView::keyPressEvent (QKeyEvent * keyEvent)
 {
-  m_terminalEmulation->processKeyEvent (keyEvent);
+  if(m_terminalEmulation)
+    m_terminalEmulation->processKeyEvent (keyEvent);
 }
 
 void
 TerminalView::mousePressEvent (QMouseEvent *mouseEvent)
 {
   // TODO: Pass mouse events to the terminal emulation.
   mouseEvent->accept();
 }
diff --git a/gui/src/terminal/KPty.cpp b/gui/src/terminal/KPty.cpp
--- a/gui/src/terminal/KPty.cpp
+++ b/gui/src/terminal/KPty.cpp
@@ -17,16 +17,17 @@
    Library General Public License for more details.
 
    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
 */
 
+
 #include "KPty.h"
 
 #include <QtCore/Q_PID>
 
 #define TTY_GROUP "tty"
 
 #ifndef PATH_MAX
 #ifdef MAXPATHLEN
diff --git a/gui/src/terminal/KPtyDevice.cpp b/gui/src/terminal/KPtyDevice.cpp
--- a/gui/src/terminal/KPtyDevice.cpp
+++ b/gui/src/terminal/KPtyDevice.cpp
@@ -16,16 +16,17 @@
    Library General Public License for more details.
 
    You should have received a copy of the GNU Library General Public License
    along with this library; see the file COPYING.LIB.  If not, write to
    the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
    Boston, MA 02110-1301, USA.
 */
 
+
 #include "KPtyDevice.h"
 #define i18n
 
 #include <QtCore/QSocketNotifier>
 
 #include <unistd.h>
 #include <errno.h>
 #include <signal.h>
@@ -447,8 +448,9 @@ KPtyDevice::writeData (const char *data,
 {
   Q_D (KPtyDevice);
   Q_ASSERT (len <= KMAXINT);
 
   d->writeBuffer.write (data, len);
   d->writeNotifier->setEnabled (true);
   return len;
 }
+
diff --git a/gui/src/terminal/LinuxTerminalEmulation.cpp b/gui/src/terminal/LinuxTerminalEmulation.cpp
--- a/gui/src/terminal/LinuxTerminalEmulation.cpp
+++ b/gui/src/terminal/LinuxTerminalEmulation.cpp
@@ -10,16 +10,17 @@
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU Affero General Public License for more details.
  *
  * You should have received a copy of the GNU Affero General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
+
 #include "LinuxTerminalEmulation.h"
 
 LinuxTerminalEmulation::LinuxTerminalEmulation ()
   : TerminalEmulation ()
 {
   int fdm, fds;
   openpty (&fdm, &fds, 0, 0, 0);
 
diff --git a/gui/src/terminal/TerminalEmulation.cpp b/gui/src/terminal/TerminalEmulation.cpp
--- a/gui/src/terminal/TerminalEmulation.cpp
+++ b/gui/src/terminal/TerminalEmulation.cpp
@@ -23,14 +23,18 @@
 
 TerminalEmulation *TerminalEmulation::newTerminalEmulation (Terminal *terminal)
 {
 #ifdef Q_OS_UNIX
   TerminalEmulation *terminalEmulation = new LinuxTerminalEmulation ();
   terminalEmulation->m_terminal = terminal;
   return terminalEmulation;
 #endif
+#ifdef Q_OS_WIN
+  // TODO: Implement on Windows.
+  return 0;
+#endif
 }
 
 TerminalEmulation::TerminalEmulation ()
   : QObject ()
 {
 }
