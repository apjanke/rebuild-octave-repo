# HG changeset patch
# User jwe
# Date 1176913045 0
#      Wed Apr 18 16:17:25 2007 +0000
# Node ID 3ef1aa12f04c6fd00931e7336b1fcd44d0bd5a05
# Parent  7f56be6b0902e2e0992017d99c92af7c14174c92
[project @ 2007-04-18 16:17:25 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2007-04-18  John W. Eaton  <jwe@octave.org>
+
+	* interpreter/contributors.in: New file.
+	* interpreter/Makefile.in (contributors.texi): New target.
+	(clean): Also deleete contributors.texi
+	(TEXINFO): Include contributors.texi in the list.
+	(preface.texi): @include contributors.texi.
+
 2007-04-17  David Bateman  <dbateman@free.fr>
 
 	* interpreter/linalg.txi (Techniques used for Linear Algebra):
 	New node.
 	* interpreter/octave.texi: Include it in menu.
 	* interpreter/sparse.txi: Delete discusion of matrix_type.
 
 2007-04-16  John W. Eaton  <jwe@octave.org>
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -48,26 +48,26 @@ SUB_SOURCE := arith.txi audio.txi basics
 	testfun.txi tips.txi var.txi vr-idx.txi
 
 SOURCES := $(SUB_SOURCE) $(SCRIPT_SOURCES)
 
 MAIN_TEXINFO := $(srcdir)/octave.texi
 
 SUB_TEXINFO := $(SUB_SOURCE:.txi=.texi)
 
-TEXINFO := $(MAIN_TEXINFO) $(SUB_TEXINFO) ../conf.texi
+TEXINFO := $(MAIN_TEXINFO) $(SUB_TEXINFO) contributors.texi ../conf.texi
 
 FORMATTED = octave.dvi octave.ps octave.pdf \
 	octave.info octave.info-[0-9]*
 
 MAN_BASE := mkoctfile octave octave-bug octave-config
 MAN_SRC := $(addsuffix .1, $(MAN_BASE))
 
 # FIXME -- need to include generated figures here...
-DISTFILES = Makefile.in dir munge-texi.cc $(MAN_SRC) \
+DISTFILES = Makefile.in contributors.in dir munge-texi.cc $(MAN_SRC) \
   $(SOURCES) $(TEXINFO) $(FORMATTED) $(IMAGES)
 
 DISTDIRS = HTML
 
 DISTSUBDIRS :=
 
 SUBDIRS :=
 
@@ -94,17 +94,21 @@ munge-texi$(BUILD_EXEEXT): munge-texi.cc
 src-DOCSTRINGS:
 	$(MAKE) -C ../../src DOCSTRINGS
 .PHONY: src-DOCSTRINGS
 
 scripts-DOCSTRINGS:
 	$(MAKE) -C ../../scripts DOCSTRINGS
 .PHONY: scripts-DOCSTRINGS
 
-%.texi : %.txi
+contributors.texi: contributors.in
+	$(AWK) -f $(srcdir)/mkcontrib.awk $(srcdir)/contributors.in > $@-t
+	@$(simple-move-if-change-rule)
+
+$(SUB_TEXINFO) : %.texi : %.txi
 	@echo making $@ from $<
 	@./munge-texi \
 	  -d $(TOPDIR)/src/DOCSTRINGS \
 	  -d $(TOPDIR)/scripts/DOCSTRINGS < $< > $@-t
 	@$(simple-move-if-change-rule)
 
 octave.info: $(IMAGES_TXT) $(TEXINFO)
 	-$(MAKEINFO) -I.. -I$(srcdir) -I$(srcdir)/.. $(MAIN_TEXINFO)
@@ -237,16 +241,16 @@ distclean: clean
 .PHONY: distclean
 
 maintainer-clean: clean-texi
 	rm -f Makefile tags TAGS $(FORMATTED) $(IMAGES)
 	rm -rf HTML
 .PHONY: maintainer-clean
 
 clean-texi:
-	rm -f $(SUB_TEXINFO)
+	rm -f $(SUB_TEXINFO) contributors.texi
 .PHONY: clean-texi
 
 dist: clean-texi all
 	ln $(DISTFILES) ../../`cat ../../.fname`/doc/interpreter
 	for dir in $(DISTDIRS); do ln ../../doc/interpreter/$$dir ../../`cat ../../.fname`/doc/interpreter/$$dir; done
 	for dir in $(DISTSUBDIRS); do mkdir ../../`cat ../../.fname`/doc/interpreter/$$dir; $(MAKE) -C $$dir $@; done
 .PHONY: dist
diff --git a/doc/interpreter/image.txi b/doc/interpreter/image.txi
--- a/doc/interpreter/image.txi
+++ b/doc/interpreter/image.txi
@@ -7,38 +7,46 @@
 
 Since an image basically is a matrix Octave is a very powerful
 environment for processing and analysing images. To illustrate
 how easy it is to do image processing in Octave, the following
 example will load an image, smooth it by a 5-by-5 averaging filter,
 and compute the gradient of the smoothed image.
 
 @example
-I = loadimage("default.img");
-S = conv2(I, ones(5,5)/25, "same");
-[Dx, Dy] = gradient(S);
+I = loadimage ("default.img");
+S = conv2 (I, ones (5, 5) / 25, "same");
+[Dx, Dy] = gradient (S);
 @end example
 
 @noindent
 In this example @code{S} contains the smoothed image, and @code{Dx}
 and @code{Dy} contains the partial spatial derivatives of the image.
 
+@menu
+* Loading and Saving Images::   
+* Displaying Images::           
+* Representing Images::         
+* Plotting on top of Images::   
+* Color Conversion::            
+@end menu
+
 @node Loading and Saving Images
 @section Loading and Saving Images
 
 The first step in most image processing tasks is to load an image
 into Octave. Currently Octave only support saving images in the
 Portable Pixmap Format (PPM), PostScript, and Octave's own format, and
 loading images in Octave's format. Most image processing code will
 follow the structure of this code
 
 @example
-I = loadimage("my_input_image.img");
-J = process_my_image(I);
-saveimage("my_output_image.img", J);
+I = loadimage ("my_input_image.img");
+J = process_my_image (I);
+saveimage ("my_output_image.img", J);
 @end example
 
 @DOCSTRING(loadimage)
 
 @DOCSTRING(saveimage)
 
 @DOCSTRING(IMAGE_PATH)
 
@@ -61,34 +69,34 @@ actual program can be selected with the 
 
 @DOCSTRING(image_viewer)
 
 @node Representing Images
 @section Representing Images
 
 In general Octave supports four different kinds of images, gray-scale
 images, RGB images, binary images, and indexed images. A gray-scale
-image is represented with a @math{M @times N} matrix in which each
+image is represented with an M-by-N matrix in which each
 element corresponds to the intensity of a pixel. An RGB image is
-represented with a @math{M @times N @times 3} array where each
+represented with an M-by-N-by3 array where each
 3-vector corresponds to the red, green, and blue intensities of each
 pixel.
 
 The actual meaning of the value of a pixel in a gray-scale or RGB
 image depends on the class of the matrix. If the matrix is of class
 @code{double} pixel intensities are between 0 and 1, if it is of class
 @code{uint8} intensities are between 0 and 255, and if it is of class
 @code{uint16} intensities are between 0 and 65535.
 
-A binary image is a @math{M @times N} matrix of class @code{logical}.
+A binary image is a M-by-N matrix of class @code{logical}.
 A pixel in a binary image is black if it is @code{false} and white
 if it is @code{true}.
 
-An indexed image consists of a @math{M @times N} matrix of integers
-and a @math{C @times 3} color map. Each integer corresponds to an
+An indexed image consists of an M-by-N matrix of integers
+and a C-by-3 color map. Each integer corresponds to an
 index in the color map, and each row in the color map corresponds to
 a RGB color. The color map must be of class @code{double} with values
 between 0 and 1.
 
 @DOCSTRING(gray2ind)
 
 @DOCSTRING(ind2gray)
 
@@ -114,20 +122,22 @@ the point corresponding to the pixel at 
 points given by row and column values on top of an image, one should
 simply call @code{plot} with the column values as the first argument
 and the row values as the second. As an example the following code
 generates an image with random intensities between 0 and 1, and shows
 the image with red circles over pixels with an intensity above 
 @math{0.99}.
 
 @example
-I = rand(100, 100);
-[row, col] = find(I > 0.99);
-imshow(I);
-hold on, plot(col, row, "ro"); hold off
+I = rand (100, 100);
+[row, col] = find (I > 0.99);
+hold ("on");
+imshow (I);
+plot (col, row, "ro");
+hold ("off");
 @end example
 
 @node Color Conversion
 @section Color Conversion
 
 Octave supports conversion from the RGB color system to NTSC and HSV
 and vice versa. 
 
diff --git a/doc/interpreter/mkcontrib.awk b/doc/interpreter/mkcontrib.awk
new file mode 100644
--- /dev/null
+++ b/doc/interpreter/mkcontrib.awk
@@ -0,0 +1,12 @@
+{ x[NR] = $0; } END {
+  print "@multitable @columnfractions .33 .33 .33";
+  rem = NR % 3;
+  n = NR - rem;
+  for (i = 1; i <= n; i += 3)
+    printf ("@item %s @tab %s @tab %s\n", x[i], x[i+1], x[i+2]);
+  if (rem == 1)
+    printf ("@item %s\n", x[NR]);
+  else if (rem == 2)
+    printf ("@item %s @tab %s\n", x[NR-1], x[NR]);
+  print "@end multitable";
+}
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -443,16 +443,24 @@ System Construction and Interface Functi
 
 * fir2sys::                     
 * ss2sys::                      
 * tf2sys::                      
 * zp2sys::                      
 * structaccess::                
 * structintern::                
 
+Image Processing
+
+* Loading and Saving Images::   
+* Displaying Images::           
+* Representing Images::         
+* Plotting on top of Images::   
+* Color Conversion::            
+
 System Utilities
 
 * Timing Utilities::            
 * Filesystem Utilities::        
 * Controlling Subprocesses::    
 * Process ID Information::      
 * Environment Variables::       
 * Current Working Directory::   
diff --git a/doc/interpreter/preface.txi b/doc/interpreter/preface.txi
--- a/doc/interpreter/preface.txi
+++ b/doc/interpreter/preface.txi
@@ -56,65 +56,17 @@ it, and by reporting any problems you ma
 @node Acknowledgements
 @unnumberedsec Acknowledgements
 @cindex acknowledgements
 
 Many people have already contributed to Octave's development.  The
 following people have helped write parts of Octave or helped out in
 various other ways (listed alphbetically).
 
-@noindent
-Andy Adler, Joel Andersson, Muthiah Annamalai,
-Shai Ayal, Roger Banks, Ben Barrowes, Alexander Barth, 
-David Bateman, Heinz Bauschke, Karl Berry, David Billinghurst, 
-Don Bindner, Jakub Bogusz, Marcus Brinkmann, Remy Bruno, 
-Marco Caliari, Daniel Calvelo, John C. Campbell, Jean-Francois Cardoso, 
-Joao Cardoso, Larrie Carr, David Castelow, Vincent Cautaerts, 
-Clinton Chee, Albert Chin-A-Young, J. D. Cole, Martin Costabel, 
-Michael Creel, Jeff Cunningham, Martin Dalecki, Jorge Barros de Abreu,
-Philippe Defert, Bill Denney, David M. Doolin, Pascal A. Dupuis,
-John W. Eaton, Dirk Eddelbuettel, Paul Eggert, Stephen Eglen, Peter Ekberg, 
-Rolf Fabian, Stephen Fegan, Ramon Garcia Fernandez, Torsten Finke, 
-Jose Daniel Munoz Frias, Castor Fu, Eduardo Gallestey, Walter Gautschi, 
-Klaus Gebhardt, Driss Ghaddab, Nicolo Giorgetti,
-Michael Goffioul, Glenn Golden, Tomislav Goles, Keith Goodman, 
-Etienne Grossmann, Kai Habel, William Poetra Yoga Hadisoeseno, Benjamin Hall, 
-Kim Hansen, Soren Hauberg, Daniel Heiserer, Yozo Hida, 
-Roman Hodek, A. Scottedward Hodel, Richard Allan Holcombe, Tom Holroyd, 
-David Hoover, Kurt Hornik, Christopher Hulbert, Cyril Humbert, 
-Teemu Ikonen, Alan W. Irwin, Geoff Jacobsen, Mats Jansson, 
-Cai Jianming, Steven G. Johnson, Heikki Junes, Atsushi Kajita, 
-Mohamed Kamoun, Lute Kamstra, Mumit Khan, Paul Kienzle, 
-Aaron A. King, Arno J. Klaassen, Geoffrey Knauth, Heine Kolltveit, 
-Ken Kouno, Oyvind Kristiansen, Piotr Krzyzanowski, Volker Kuhlmann, 
-Miroslaw Kwasniak, Rafael Laboissiere, Kai Labusch, Claude Lacoursiere, 
-Walter Landry, Duncan Temple Lang, Bill Lash, Dirk Laurie, 
-Maurice LeBrun, Friedrich Leisch, Benjamin Lindner, Ross Lippert, 
-David Livings, Erik de Castro Lopo, Massimo Lorenzin, Hoxide Ma, 
-James Macnicol, Jens-Uwe Mager, Ricardo Marranita, Orestes Mas, 
-Makoto Matsumoto, Laurent Mazet, G. D. McBain, Stefan Monnier, 
-Antoine Moreau, Kai P. Mueller, Victor Munoz, Carmen Navarrete, 
-Todd Neal, Al Niessner, Rick Niles, Takuji Nishimura, 
-Eric Norum, Michael O'Brien, Thorsten Ohl, Arno Onken, 
-Luis F. Ortiz, Luis Ortiz, Scott Pakin, Gabriele Pannocchia, 
-Sylvain Pelissier, Per Persson, Jim Peterson, Danilo Piazzalunga, 
-Nicholas Piper, Hans Ekkehard Plesser, Tom Poage, Orion Poplawski, 
-Ondrej Popp, Jef Poskanzer, Francesco Potorti, James B. Rawlings, 
-Eric S. Raymond, Balint Reczey, Michael Reifenberger, Petter Risholm, 
-Matthew W. Roberts, Andrew Ross, Mark van Rossum, Kevin Ruland, 
-Olli Saarela, Toni Saarela, Juhani Saastamoinen, Ben Sapp, 
-Alois Schloegl, Michel D. Schmid, Nicol N. Schraudolph, Ludwig Schwardt, 
-Daniel J. Sebald, Dmitri A. Sergatskov, Baylis Shanks, Joseph P. Skudlarek, 
-John Smith, Julius Smith, Shan G. Smith, Joerg Specht, 
-Quentin H. Spencer, Christoph Spiel, Richard Stallman, Russell Standish, 
-Doug Stewart, Thomas Stuart, Ariel Tankus, Georg Thimm, 
-Thomas Treichl, Utkarsh Upadhyay, Stefan van der Walt, Peter Van Wieren, 
-James R. Van Zandt, Gregory Vanuxem, Ivana Varekova, Thomas Walter, 
-Olaf Weber, Thomas Weber, Bob Weigel, Andreas Weingessel, 
-Fook Fah Yap, Michael Zeising, Federico Zenith, and Alex Zvoleff.
+@include contributors.texi
 
 Special thanks to the following people and organizations for
 supporting the development of Octave:
 
 @itemize @bullet
 @item
 The National Science Foundation, through grant numbers CTS-0105360,
 CTS-9708497, CTS-9311420, and CTS-8957123.
diff --git a/doc/interpreter/signal.txi b/doc/interpreter/signal.txi
--- a/doc/interpreter/signal.txi
+++ b/doc/interpreter/signal.txi
@@ -1,19 +1,15 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
 @node Signal Processing
 @chapter Signal Processing
 
-I hope that someday Octave will include more signal processing
-functions.  If you would like to help improve Octave in this area,
-please contact @email{bug@@octave.org}.
-
 @DOCSTRING(detrend)
 
 @DOCSTRING(fft)
 
 @DOCSTRING(ifft)
 
 @DOCSTRING(fft2)
 
diff --git a/doc/interpreter/stmt.txi b/doc/interpreter/stmt.txi
--- a/doc/interpreter/stmt.txi
+++ b/doc/interpreter/stmt.txi
@@ -285,16 +285,20 @@ is possible to write programs that look 
 @example
 switch (X)
   case "a string"
     do_something
   @dots{}
 endswitch
 @end example
 
+@menu
+* Notes for the C programmer::  
+@end menu
+
 @node Notes for the C programmer
 @subsection Notes for the C programmer
 
 The @code{switch} statement is also used in the widely used C
 programming language. There are, however, some differences
 between the statement in Octave and C
 
 @itemize @bullet
