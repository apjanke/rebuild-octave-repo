# HG changeset patch
# User jwe
# Date 781980515 0
#      Wed Oct 12 16:48:35 1994 +0000
# Node ID ac49764105cfdaf9b4267d1f59563de243cb4929
# Parent  29bc04411213b5f196af2e67ee2dd26723f3ba57
[project @ 1994-10-12 16:45:59 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.56 $)dnl
+AC_REVISION($Revision: 1.57 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -507,16 +507,17 @@ dnl
 dnl Checks for header files.
 dnl
 AC_STDC_HEADERS
 AC_HAVE_HEADERS(assert.h float.h limits.h memory.h pwd.h stdlib.h)dnl
 AC_HAVE_HEADERS(string.h varargs.h unistd.h floatingpoint.h)dnl
 AC_HAVE_HEADERS(sys/utsname.h sys/time.h sys/fcntl.h)dnl
 AC_HAVE_HEADERS(sys/ttold.h sys/ptem.h sys/select.h)dnl
 AC_DIR_HEADER
+AC_TIME_WITH_SYS_TIME
 dnl
 dnl Use sgtty on Ultrix so that using DEC Migrate to convert a Mips
 dnl binary to an Alpha binary will work.
 dnl
 case "$canonical_host_type" in
   mips-dec-ultrix* | alpha-dec-osf*)
     AC_HEADER_CHECK(sgtty.h, AC_DEFINE(HAVE_SGTTY_H, 1), [])
   ;;
@@ -538,17 +539,17 @@ case "$DEFS" in
     AC_ERROR([I couldn't find termios.h, termio.h, or sgtty.h!])
   ;;
 esac
 dnl
 dnl Checks for functions.
 dnl
 AC_HAVE_FUNCS(setvbuf getcwd gethostname bzero rindex vfprintf vsprintf)dnl
 AC_HAVE_FUNCS(stricmp strnicmp strcasecmp strncasecmp strerror)dnl
-AC_HAVE_FUNCS(atexit on_exit tempnam memmove putenv)dnl
+AC_HAVE_FUNCS(atexit on_exit tempnam memmove putenv gettimeofday)dnl
 dnl
 dnl Check to see if we have IEEE math functions, and if so, which ones.
 dnl
 dnl For Linux: add -mieee-fp flag to CFLAGS when checking for IEEE FP
 dnl functions, otherwise we may not find them.
 dnl
 dnl Also just using AC_HAVE_FUNCS doesn't seem to work to find isinf
 dnl and isnan on Linux systems, so we use AC_FUNC_CHECK, and if that
diff --git a/src/timefns.cc b/src/timefns.cc
--- a/src/timefns.cc
+++ b/src/timefns.cc
@@ -20,42 +20,50 @@ along with Octave; see the file COPYING.
 Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
-#include <time.h>
-
 #include "dMatrix.h"
 
 #include "tree-const.h"
 #include "oct-obj.h"
+#include "systime.h"
 #include "defun.h"
 
 DEFUN ("clock", Fclock, Sclock, 1, 0,
   "clock (): return current date and time in vector with elements\n\
 \n\
   [ year, month, day-of-month, hour, minute, second ]")
 {
   time_t now;
   struct tm *tm;
+  double fraction = 0.0;
 
+#ifdef HAVE_GETTIMEOFDAY
+  struct timeval tp;
+  gettimeofday (&tp, 0);
+  now = tp.tv_sec;
+  fraction = tp.tv_usec / 1e6;
+#else
   time (&now);
+#endif
+
   tm = localtime (&now);
 
   Matrix m (1, 6);
   m.elem (0, 0) = tm->tm_year + 1900;
   m.elem (0, 1) = tm->tm_mon + 1;
   m.elem (0, 2) = tm->tm_mday;
   m.elem (0, 3) = tm->tm_hour;
   m.elem (0, 4) = tm->tm_min;
-  m.elem (0, 5) = tm->tm_sec;
+  m.elem (0, 5) = tm->tm_sec + fraction;
 
   return m;
 }
 
 DEFUN ("date", Fdate, Sdate, 1, 0,
   "date (): return current date in a string, in the form `18-Jul-94'")
 {
   Octave_object retval;
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -66,16 +66,19 @@ extern char *load_path;
 extern char *info_file;
 
 // Name of the editor to be invoked by the edit_history command.
 extern char *editor;
 
 // If nonzero, don't do fancy line editing.
 extern int no_line_editing;
 
+// If nonzero, print verbose info in some cases.
+extern int verbose_flag;
+
 // Command number, counting from the beginning of this session.
 extern int current_command_number;
 
 // Nonzero means we are exiting via the builtin exit or quit functions.
 extern int quitting_gracefully;
 
 // Current command to execute.
 extern tree_statement_list *global_command;
