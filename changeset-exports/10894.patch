# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1281994548 14400
#      Mon Aug 16 17:35:48 2010 -0400
# Node ID 89f13bc14494a6c35fbef1172cfc5be67650d339
# Parent  61a5ba82cfbbb50bf6c975ea90b7409e328b08a5
gl2ps.c: Use upstream version gl2ps-1.3.5-svn-20100816.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-08-16  Ben Abbott <bpabbott@mac.com>
+
+	* gl2ps.c: Use upstream version gl2ps-1.3.5-svn-20100816.
+
 2010-08-13  Rik <octave@nomad.inbox5.com>
 
 	* toplev.c (do_goto_frame_relative): Remove unused variable c.
 
 2010-08-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-builtin.cc 
 	(octave_builtin::subsref (..., const std::list<octave_lvalue> *)
diff --git a/src/gl2ps.c b/src/gl2ps.c
--- a/src/gl2ps.c
+++ b/src/gl2ps.c
@@ -3240,18 +3240,21 @@ static void gl2psPrintTeXPrimitive(void 
   GL2PSprimitive *prim;
 
   prim = *(GL2PSprimitive**)data;
 
   switch(prim->type){
   case GL2PS_TEXT :
     fprintf(gl2ps->stream, "\\fontsize{%d}{0}\n\\selectfont", 
             prim->data.text->fontsize);
-    fprintf(gl2ps->stream, "\\put(%g,%g){\\makebox(0,0)",
+    fprintf(gl2ps->stream, "\\put(%g,%g)",
             prim->verts[0].xyz[0], prim->verts[0].xyz[1]);
+    if(prim->data.text->angle)
+      fprintf(gl2ps->stream, "{\\rotatebox{%g}", prim->data.text->angle);
+    fprintf(gl2ps->stream, "{\\makebox(0,0)");
     switch(prim->data.text->alignment){
     case GL2PS_TEXT_C:
       fprintf(gl2ps->stream, "{");
       break;
     case GL2PS_TEXT_CL:
       fprintf(gl2ps->stream, "[l]{");
       break;
     case GL2PS_TEXT_CR:
@@ -3272,18 +3275,16 @@ static void gl2psPrintTeXPrimitive(void 
     case GL2PS_TEXT_TR:
       fprintf(gl2ps->stream, "[tr]{");
       break;
     case GL2PS_TEXT_BL:
     default:
       fprintf(gl2ps->stream, "[bl]{");
       break;
     }
-    if(prim->data.text->angle)
-      fprintf(gl2ps->stream, "\\rotatebox{%g}{", prim->data.text->angle);
     fprintf(gl2ps->stream, "\\textcolor[rgb]{%g,%g,%g}{{%s}}",
             prim->verts[0].rgba[0], prim->verts[0].rgba[1], prim->verts[0].rgba[2],
             prim->data.text->str);
     if(prim->data.text->angle)
       fprintf(gl2ps->stream, "}");
     fprintf(gl2ps->stream, "}}\n");
     break;
   case GL2PS_SPECIAL :
@@ -5106,16 +5107,52 @@ static void gl2psPrintSVGPrimitive(void 
     break;
   case GL2PS_TEXT :
     gl2psSVGGetColorString(prim->verts[0].rgba, col);
     gl2psPrintf("<text fill=\"%s\" x=\"%g\" y=\"%g\" font-size=\"%d\" ",
                 col, xyz[0][0], xyz[0][1], prim->data.text->fontsize);
     if(prim->data.text->angle)
       gl2psPrintf("transform=\"rotate(%g, %g, %g)\" ",
                   -prim->data.text->angle, xyz[0][0], xyz[0][1]);
+    switch(prim->data.text->alignment){
+    case GL2PS_TEXT_C:
+      gl2psPrintf("text-anchor=\"middle\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize / 2);
+      break;
+    case GL2PS_TEXT_CL:
+      gl2psPrintf("text-anchor=\"start\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize / 2);
+      break;
+    case GL2PS_TEXT_CR:
+      gl2psPrintf("text-anchor=\"end\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize / 2);
+      break;
+    case GL2PS_TEXT_B:
+      gl2psPrintf("text-anchor=\"middle\" baseline-shift=\"0\" ");
+      break;
+    case GL2PS_TEXT_BR:
+      gl2psPrintf("text-anchor=\"end\" baseline-shift=\"0\" ");
+      break;
+    case GL2PS_TEXT_T:
+      gl2psPrintf("text-anchor=\"middle\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize);
+      break;
+    case GL2PS_TEXT_TL:
+      gl2psPrintf("text-anchor=\"start\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize);
+      break;
+    case GL2PS_TEXT_TR:
+      gl2psPrintf("text-anchor=\"end\" baseline-shift=\"%d\" ",
+                  -prim->data.text->fontsize);
+      break;
+    case GL2PS_TEXT_BL:
+    default: /* same as GL2PS_TEXT_BL */
+      gl2psPrintf("text-anchor=\"start\" baseline-shift=\"0\" ");
+      break;
+    }
     if(!strcmp(prim->data.text->fontname, "Times-Roman"))
       gl2psPrintf("font-family=\"Times\">");
     else if(!strcmp(prim->data.text->fontname, "Times-Bold"))
       gl2psPrintf("font-family=\"Times\" font-weight=\"bold\">");
     else if(!strcmp(prim->data.text->fontname, "Times-Italic"))
       gl2psPrintf("font-family=\"Times\" font-style=\"italic\">");
     else if(!strcmp(prim->data.text->fontname, "Times-BoldItalic"))
       gl2psPrintf("font-family=\"Times\" font-style=\"italic\" font-weight=\"bold\">");
