# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1278677579 -7200
#      Fri Jul 09 14:12:59 2010 +0200
# Node ID add87b12e63c636cf3486eca67066a78e4988396
# Parent  6035bf68a7556f97e969182b8b4099f301cd58e8
implement proper CGELSD/ZGELSD RWORK size formulas, as found in lapack SVN

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2641,20 +2641,19 @@ ComplexMatrix::lssolve (const ComplexMat
       double tmp = log2 (dminmn / dsmlsizp1);
 #else
       double tmp = log (dminmn / dsmlsizp1) / log (2.0);
 #endif
       octave_idx_type nlvl = static_cast<octave_idx_type> (tmp) + 1;
       if (nlvl < 0)
         nlvl = 0;
 
-      nlvl += 1; // FIXME: workaround for bug in LAPACK 3.1.1
-
       octave_idx_type lrwork = minmn*(10 + 2*smlsiz + 8*nlvl)
-        + 3*smlsiz*nrhs + (smlsiz+1)*(smlsiz+1);
+        + 3*smlsiz*nrhs + std::max ((smlsiz+1)*(smlsiz+1),
+                                    n*(1+nrhs) + 2*nrhs);
       if (lrwork < 1)
         lrwork = 1;
       Array<double> rwork (lrwork, 1);
       double *prwork = rwork.fortran_vec ();
 
       octave_idx_type liwork = 3 * minmn * nlvl + 11 * minmn;
       if (liwork < 1)
         liwork = 1;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2010-07-09  Jaroslav Hajek  <highegg@gmail.com>
+
+	* CMatrix.cc (ComplexMatrix::lssolve (const ComplexMatrix&)):
+	Undo 10708:2786b7ae3f80, implement proper correction.
+	* fCMatrix.cc (FloatComplexMatrix::lssolve (const FloatComplexMatrix&)):
+	Ditto.
+
 2010-06-28  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dim-vector.h (dim_vector::scalar_1x1): New method.
 	* lo-traits.h (equal_types): Fix.
 
 2010-06-21  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::cat): Implement the loose horzcat/vertcat rules
diff --git a/liboctave/fCMatrix.cc b/liboctave/fCMatrix.cc
--- a/liboctave/fCMatrix.cc
+++ b/liboctave/fCMatrix.cc
@@ -2634,20 +2634,19 @@ FloatComplexMatrix::lssolve (const Float
       float tmp = log2 (dminmn / dsmlsizp1);
 #else
       float tmp = log (dminmn / dsmlsizp1) / log (2.0);
 #endif
       octave_idx_type nlvl = static_cast<octave_idx_type> (tmp) + 1;
       if (nlvl < 0)
         nlvl = 0;
 
-      nlvl += 1; // FIXME: workaround for bug in LAPACK 3.1.1
-
       octave_idx_type lrwork = minmn*(10 + 2*smlsiz + 8*nlvl)
-        + 3*smlsiz*nrhs + (smlsiz+1)*(smlsiz+1);
+        + 3*smlsiz*nrhs + std::max ((smlsiz+1)*(smlsiz+1),
+                                    n*(1+nrhs) + 2*nrhs);
       if (lrwork < 1)
         lrwork = 1;
       Array<float> rwork (lrwork, 1);
       float *prwork = rwork.fortran_vec ();
 
       octave_idx_type liwork = 3 * minmn * nlvl + 11 * minmn;
       if (liwork < 1)
         liwork = 1;
