# HG changeset patch
# User jwe
# Date 850466515 0
#      Fri Dec 13 08:41:55 1996 +0000
# Node ID 49ae0d992eeaabc7620fde51caaf36e8a1529720
# Parent  ccd72573a0cfffb053c6de043afa086e783c9582
[project @ 1996-12-13 08:41:43 by jwe]

diff --git a/liboctave/Array2-idx.h b/liboctave/Array2-idx.h
--- a/liboctave/Array2-idx.h
+++ b/liboctave/Array2-idx.h
@@ -329,16 +329,32 @@ Array2<T>::maybe_delete_elements (idx_ve
 		    (*current_liboctave_error_handler)
 		      ("A(idx) = []: index out of range");
 		}
 	    }
 	}
     }
 }
 
+#define MAYBE_RESIZE_LHS \
+  do \
+    { \
+      if (liboctave_rre_flag) \
+	{ \
+	  int max_row_idx = idx_i_is_colon ? rhs_nr : idx_i.max () + 1; \
+	  int max_col_idx = idx_j_is_colon ? rhs_nc : idx_j.max () + 1; \
+ \
+	  int new_nr = max_row_idx > lhs_nr ? max_row_idx : lhs_nr; \
+	  int new_nc = max_col_idx > lhs_nc ? max_col_idx : lhs_nc; \
+ \
+	  lhs.resize (new_nr, new_nc, 0.0); \
+	} \
+    } \
+  while (0)
+
 template <class LT, class RT>
 int
 assign (Array2<LT>& lhs, const Array2<RT>& rhs)
 {
   int retval = 1;
 
   int n_idx = lhs.index_count ();
 
@@ -373,43 +389,36 @@ assign (Array2<LT>& lhs, const Array2<RT
       if (idx_i && idx_j)
 	{
 	  if (rhs_nr == 0 && rhs_nc == 0)
 	    {
 	      lhs.maybe_delete_elements (idx_i, idx_j);
 	    }
 	  else
 	    {
-	      if (liboctave_rre_flag)
-		{
-		  int max_row_idx = idx_i_is_colon ? rhs_nr : idx_i.max () + 1;
-		  int max_col_idx = idx_j_is_colon ? rhs_nc : idx_j.max () + 1;
-
-		  int new_nr = max_row_idx > lhs_nr ? max_row_idx : lhs_nr;
-		  int new_nc = max_col_idx > lhs_nc ? max_col_idx : lhs_nc;
-
-		  lhs.resize (new_nr, new_nc, 0.0);
-		}
-
 	      if (rhs_nr == 1 && rhs_nc == 1 && n > 0 && m > 0)
 		{
+		  MAYBE_RESIZE_LHS;
+
 		  RT scalar = rhs.elem (0, 0);
 
 		  for (int j = 0; j < m; j++)
 		    {
 		      int jj = idx_j.elem (j);
 		      for (int i = 0; i < n; i++)
 			{
 			  int ii = idx_i.elem (i);
 			  lhs.elem (ii, jj) = scalar;
 			}
 		    }
 		}
 	      else if (n == rhs_nr && m == rhs_nc)
 		{
+		  MAYBE_RESIZE_LHS;
+
 		  for (int j = 0; j < m; j++)
 		    {
 		      int jj = idx_j.elem (j);
 		      for (int i = 0; i < n; i++)
 			{
 			  int ii = idx_i.elem (i);
 			  lhs.elem (ii, jj) = rhs.elem (i, j);
 			}
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Fri Dec 13 02:01:32 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array2-idx.h (assign): Delay resizing left hand side until we
+	know if the assignment conforms.
+
 Tue Dec 10 01:43:09 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0 released.
 
 Fri Dec  6 14:41:15 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (assign): If index is a colon, set number of
 	elements to the lhs dimension if the lhs dimension is greater than
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Fri Dec 13 02:38:19 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov.cc (octave_value::convert_and_assign): Preserve lhs value if
+	assignment fails.
+
 Wed Dec 11 12:33:16 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-plot.cc (GPLOT_CMD_END): Don't put semicolons at the end of
 	each plot command; it causes trouble with gnuplot 3.5.
 
 Tue Dec 10 00:31:13 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0 released.
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -585,28 +585,33 @@ octave_value::convert_and_assign (const 
 	= octave_value_typeinfo::lookup_widening_op (t_lhs, t_result);
 
       if (cf)
 	{
 	  octave_value *tmp = cf (*rep);
 
 	  if (tmp)
 	    {
-	      if (tmp != rep)
+	      octave_value *old_rep = rep;
+	      rep = tmp;
+	      rep->count = 1;
+
+	      assignment_ok = try_assignment (idx, rhs);
+
+	      if (! assignment_ok && old_rep)
 		{
 		  if (--rep->count == 0)
 		    delete rep;
 
-		  rep = tmp;
-		  rep->count = 1;
+		  rep = old_rep;
+		  old_rep = 0;
 		}
-	      else
-		delete tmp;
 
-	      assignment_ok = try_assignment (idx, rhs);
+	      if (old_rep && --old_rep->count == 0)
+		delete old_rep;
 	    }
 	  else
 	    gripe_conversion_failed (type_name (), rhs.type_name ());
 	}
       else
 	gripe_indexed_assignment (type_name (), rhs.type_name ());
     }
 
