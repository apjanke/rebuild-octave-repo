# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1372979159 14400
#      Thu Jul 04 19:05:59 2013 -0400
# Node ID 21d5e76891feb1c4e364a0c363c018de891dbcd1
# Parent  b8c37a855074b566a656c6d628ffeff0814a05ac
Fix typo/bug for "-not" qualifier in findobj().  Add tests.

* scripts/plot/findobj.m: The -not qualifier applies to the match which
follows it.

diff --git a/scripts/plot/findobj.m b/scripts/plot/findobj.m
--- a/scripts/plot/findobj.m
+++ b/scripts/plot/findobj.m
@@ -200,17 +200,17 @@ function h = findobj (varargin)
     handles = children;
     h = union (h, children);
     idepth = idepth + 1;
   endwhile
 
   keepers = ones (size (h));
   if (numpairs > 0)
     for nh = 1 : numel (h)
-      p = get (h (nh));
+      p = get (h(nh));
       for np = 1 : numpairs
         fields = fieldnames (p);
         fieldindex = find (strcmpi (fields, pname{np}), 1);
         if (numel (fieldindex))
           pname{np} = fields{fieldindex};
           if (property(np))
             match = 1;
           else
@@ -228,17 +228,17 @@ function h = findobj (varargin)
                 match = isequal (pvalue{np}, p.(pname{np}));
               endif
             else
               match = 0;
             endif
             match = all (match);
           endif
           if (strcmpi (logicaloperator{np}, "not"))
-            keepers(nh) = ! keepers(nh) & ! match;
+            keepers(nh) = keepers(nh) & ! match;
           else
             keepers(nh) = feval (logicaloperator{np}, keepers(nh), match);
           endif
         else
           keepers(nh) = 0;
         endif
       endfor
     endfor
@@ -286,16 +286,61 @@ endfunction
 %!   h1 = findobj (gcf (), "-regexp", "Type", "image|surface|hggroup");
 %!   h2 = findobj (gcf (), "Type", "image", "-or", "Type", "surface", "-or", "Type", "hggroup");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %! assert (h2, h1)
 
 %!test
+%! graphics_toolkit gnuplot;
 %! hf = figure ("visible", "off");
-%! h1 = subplot (2, 2, 1);
-%! h2 = subplot (2, 2, 2);
-%! h3 = subplot (2, 2, 3);
-%! h4 = subplot (2, 2, 4);
-%! userdata = struct ("foo", "bar");
-%! set (h3, "userdata", userdata);
-%! assert (findobj (hf, "userdata", userdata), h3)
+%! unwind_protect
+%!   h1 = subplot (2, 2, 1);
+%!   h2 = subplot (2, 2, 2);
+%!   h3 = subplot (2, 2, 3);
+%!   h4 = subplot (2, 2, 4);
+%!   userdata = struct ("foo", "bar");
+%!   set (h3, "userdata", userdata);
+%!   h = findobj (hf, "userdata", userdata);
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+%! assert (h, h3)
+
+%!test
+%! graphics_toolkit gnuplot;
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   h1 = subplot (2, 2, 1);
+%!   set (h1, 'tag', '1')
+%!   h2 = subplot (2, 2, 2);
+%!   set (h2, 'tag', '2')
+%!   h3 = subplot (2, 2, 3);
+%!   set (h3, 'tag', '3')
+%!   h4 = subplot (2, 2, 4);
+%!   set (h4, 'tag', '4')
+%!   drawnow ()
+%!   h = findobj (hf, 'type', 'axes', '-not', 'tag', '1');
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+%! assert (h, [h2; h3; h4])
+
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   h1 = subplot (2, 2, 1);
+%!   set (h1, 'userdata', struct ('column', 1, 'row', 1));
+%!   h2 = subplot (2, 2, 2);
+%!   set (h2, 'userdata', struct ('column', 2, 'row', 1));
+%!   h3 = subplot (2, 2, 3);
+%!   set (h3, 'userdata', struct ('column', 1, 'row', 2));
+%!   h4 = subplot (2, 2, 4);
+%!   set (h4, 'userdata', struct ('column', 2, 'row', 2));
+%!   drawnow ()
+%!   h = findobj (hf, 'type', 'axes', '-not', 'userdata', ...
+%!                struct ('column', 1, 'row', 1));
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+%! assert (h, [h2; h3; h4])
+
