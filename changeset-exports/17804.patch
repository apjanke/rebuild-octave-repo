# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383113321 14400
#      Wed Oct 30 02:08:41 2013 -0400
# Node ID f3e25230b1f3b35eff7983a4d6e2fb2eadb1367f
# Parent  f5ada8597078e4ba4e2782a0793d557839e8c9f4
use QCoreApplication if starting with --no-gui

* octave-gui.cc (octave_start_gui):  Use QApplication when starting
the GUI and QCoreApplication if not.
(octave_cli_thread::run): Call QCoreApplication::exit instead of
QApplication::exit.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -20,16 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
+#include <QCoreApplication>
 #include <QTextCodec>
 #include <QThread>
 #include <QTranslator>
 
 #include <iostream>
 
 #include <unistd.h>
 #include <fcntl.h>
@@ -67,17 +68,17 @@ public:
 protected:
 
   void run (void)
   {
     octave_initialize_interpreter (m_argc, m_argv, 0);
 
     m_result = octave_execute_interpreter ();
 
-    QApplication::exit (m_result);
+    QCoreApplication::exit (m_result);
   }
 
 private:
 
   int m_argc;
   char** m_argv;
   int m_result;
 };
@@ -114,20 +115,20 @@ void message_handler (QtMsgType type, co
 // If START_GUI is false, we still set up the QApplication so that we
 // can use Qt widgets for plot windows.
 
 int
 octave_start_gui (int argc, char *argv[], bool start_gui)
 {
   qInstallMsgHandler (message_handler);
 
-  QApplication application (argc, argv);
-
   if (start_gui)
     {
+      QApplication application (argc, argv);
+
       // Set the codec for all strings
       QTextCodec::setCodecForCStrings (QTextCodec::codecForName ("UTF-8"));
 
       // install translators for the gui and qt text
       QTranslator gui_tr, qt_tr, qsci_tr;
       resource_manager::config_translators (&qt_tr,&qsci_tr,&gui_tr);
       application.installTranslator (&qt_tr);
       application.installTranslator (&qsci_tr);
@@ -170,17 +171,17 @@ octave_start_gui (int argc, char *argv[]
                                                // in visibility not before w
                                                // is shown
               return application.exec ();
             }
         }
     }
   else
     {
-      octave_cli_thread main_thread (argc, argv);
+      QCoreApplication application (argc, argv);
 
-      application.setQuitOnLastWindowClosed (false);
+      octave_cli_thread main_thread (argc, argv);
 
       main_thread.start ();
 
       return application.exec ();
     }
 }
