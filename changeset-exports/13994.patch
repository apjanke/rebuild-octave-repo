# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1323063051 18000
#      Mon Dec 05 00:30:51 2011 -0500
# Node ID 99f039289e95a40ca125f534eae739e1cb8f4413
# Parent  e58963b5c0b11d02febc7194d945e3398fc04f18
also clean up float fftw planner

* oct-fftw.h (octave_float_fftw_planner::cleanup_instance):
New function.
* oct-fftw.cc (octave_float_fftw_planner::instance_ok):
Add instance to singleton cleanup list.

diff --git a/liboctave/oct-fftw.cc b/liboctave/oct-fftw.cc
--- a/liboctave/oct-fftw.cc
+++ b/liboctave/oct-fftw.cc
@@ -384,17 +384,22 @@ octave_float_fftw_planner::octave_float_
 }
 
 bool
 octave_float_fftw_planner::instance_ok (void)
 {
   bool retval = true;
 
   if (! instance)
-    instance = new octave_float_fftw_planner ();
+    {
+      instance = new octave_float_fftw_planner ();
+
+      if (instance)
+        singleton_cleanup_list::add (cleanup_instance);
+    }
 
   if (! instance)
     {
       (*current_liboctave_error_handler)
         ("unable to create octave_fftw_planner object!");
 
       retval = false;
     }
diff --git a/liboctave/oct-fftw.h b/liboctave/oct-fftw.h
--- a/liboctave/oct-fftw.h
+++ b/liboctave/oct-fftw.h
@@ -240,16 +240,18 @@ private:
   // No copying!
 
   octave_float_fftw_planner (const octave_float_fftw_planner&);
 
   octave_float_fftw_planner& operator = (const octave_float_fftw_planner&);
 
   static octave_float_fftw_planner *instance;
 
+  static void cleanup_instance (void) { delete instance; instance = 0; }
+
   fftwf_plan
   do_create_plan (int dir, const int rank, const dim_vector dims,
                   octave_idx_type howmany, octave_idx_type stride,
                   octave_idx_type dist, const FloatComplex *in,
                   FloatComplex *out);
 
   fftwf_plan
   do_create_plan (const int rank, const dim_vector dims,
