# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1297002836 -3600
#      Sun Feb 06 15:33:56 2011 +0100
# Node ID cf9ca0dbc5ee354f4ae06d67768e2f616d0f8af1
# Parent  5fb6ea1bff6555d51e8ff34a53f67835fc17652c
Delete old legends and fix for legend locations that are 'southest' (followup #32343)

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-02-06  David Bateman  <dbateman@free.fr>
+	* plot/legend.m : Delete old legend before probing the position and
+	outerposition. Reshape lpos correct if the legend locqtion is
+	"southeast".
+
 2011-02-06  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/legend.m: Add demo for replacing existing legend.
 
 2011-02-06  John W. Eaton  <jwe@octave.org>
 
 	* general/circshift.m: New tests.
 
diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -405,16 +405,19 @@ function [hlegend2, hobjects2, hplot2, t
             outside = false;
           endif
         endif
         if (strcmp (orientation, "default"))
           orientation = get (hlegend, "orientation");
         endif
         box = get (hlegend, "box");
         fkids = get (fig, "children");
+
+        delete (hlegend);
+        hlegend = [];
       else
         if (strcmp (textpos, "default"))
           textpos = "left";
         endif
         if (strcmp (position, "default"))
           position = "northeast";
         endif
         if (strcmp (orientation, "default"))
@@ -607,17 +610,17 @@ function [hlegend2, hobjects2, hplot2, t
               new_outpos = [ca_outpos(1) + lpos(3), ca_outpos(2), ...
                             ca_outpos(3) - lpos(3), ca_outpos(4) - lpos(4)];
             else
               lpos = [ca_pos(1) + ypad, ...
                       ca_pos(2) + ca_pos(4) - lpos(4) - ypad, lpos(3), lpos(4)];
             endif
           case "southeast"
             if (outside)
-              lpos = [ca_outpos(1) + ca_outpos(3) - lpos(3), ca_outpos(2),
+              lpos = [ca_outpos(1) + ca_outpos(3) - lpos(3), ca_outpos(2), ...
                       lpos(3), lpos(4)];
               new_pos = [ca_pos(1), ca_pos(2) + lpos(4), ...
                          ca_pos(3) - lpos(3), ca_pos(4) - lpos(4)];
               new_outpos = [ca_outpos(1), ca_outpos(2) + lpos(4), ...
                             ca_outpos(3) - lpos(3), ca_outpos(4) - lpos(4)];
             else
               lpos = [ca_pos(1) + ca_pos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + ypad, lpos(3), lpos(4)];
