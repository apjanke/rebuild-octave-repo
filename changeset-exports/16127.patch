# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1361910207 18000
#      Tue Feb 26 15:23:27 2013 -0500
# Node ID f7eb13f1432008812759a341b1717dbbc63cd550
# Parent  5c885c13bfa3357ba3de19e8402aa12bc21a0853
avoid using unwind_protect::run

* input.cc (get_debug_input): Use separate frame to restore global
command and symbol table state.

diff --git a/libinterp/interpfcn/input.cc b/libinterp/interpfcn/input.cc
--- a/libinterp/interpfcn/input.cc
+++ b/libinterp/interpfcn/input.cc
@@ -679,29 +679,31 @@ get_debug_input (const std::string& prom
     }
 
   frame.protect_var (curr_lexer);
   curr_lexer = new lexical_feedback ();
   frame.add_fcn (lexical_feedback::cleanup, curr_lexer);
 
   while (Vdebugging)
     {
+      unwind_protect middle_frame;
+
       reset_error_handler ();
 
       curr_lexer->reset_parser ();
 
       // Save current value of global_command.
-      frame.protect_var (global_command);
+      middle_frame.protect_var (global_command);
 
       global_command = 0;
 
       // Do this with an unwind-protect cleanup function so that the
       // forced variables will be unmarked in the event of an interrupt.
       symbol_table::scope_id scope = symbol_table::top_scope ();
-      frame.add_fcn (symbol_table::unmark_forced_variables, scope);
+      middle_frame.add_fcn (symbol_table::unmark_forced_variables, scope);
 
       int retval = octave_parse_input ();
 
       if (retval == 0 && global_command)
         {
           unwind_protect inner_frame;
 
           // Use an unwind-protect cleanup function so that the
@@ -711,20 +713,16 @@ get_debug_input (const std::string& prom
           inner_frame.add_fcn (cleanup_statement_list, &global_command);
 
           global_command->accept (*current_evaluator);
 
           if (octave_completion_matches_called)
             octave_completion_matches_called = false;
         }
 
-      // Unmark forced variables.
-      // Restore previous value of global_command.
-      frame.run (2);
-
       octave_quit ();
     }
 }
 
 // If the user simply hits return, this will produce an empty matrix.
 
 static octave_value_list
 get_user_input (const octave_value_list& args, int nargout)
