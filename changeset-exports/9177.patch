# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1241529535 -7200
#      Tue May 05 15:18:55 2009 +0200
# Node ID 39be2c4531c892f1681a899e02bf230efa863a5d
# Parent  7ea76c8a59f75b928a0112321f975ee98d2a650a
fix sparse indexing bug

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-05-05  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Sparse.cc (assign1): Fix an old indexing bug.
+
 2009-05-04  Carsten Clark  <tantumquantum+gnuoctave@gmail.com>
 
 	* Quad.cc (float_user_function): Remove Sun/GCC special case.
 
 2009-04-16  Jaroslav Hajek  <highegg@gmail.com>
 
 	* idx-vector.cc (idx_vector::idx_range_rep::idx_range_rep (const
 	Range&)): Check for positive integer indices. Unify gripes.
diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -2710,34 +2710,37 @@ assign1 (Sparse<LT>& lhs, const Sparse<R
 		  if (j == n || (i < nz && ii < jj))
 		    {
 		      while (ic <= ii)
 			tmp.xcidx (ic++) = kk;
 		      tmp.xdata (kk) = c_lhs.data (i);
 		      i++;
 		      while (ii < nc && c_lhs.cidx(ii+1) <= i)
 			ii++;
+                      tmp.xridx (kk++) = 0;
 		    }
 		  else
 		    {
 		      while (ic <= jj)
 			tmp.xcidx (ic++) = kk;
 		      if (scalar_non_zero)
-			tmp.xdata (kk) = scalar;
+                        {
+                          tmp.xdata (kk) = scalar;
+                          tmp.xridx (kk++) = 0;
+                        }
 		      if (ii == jj)
 			{
 			  i++;
 			  while (ii < nc && c_lhs.cidx(ii+1) <= i)
 			    ii++;
 			}
 		      j++;
 		      if (j < n)
 			jj = lhs_idx.elem(j);
 		    }
-		  tmp.xridx (kk++) = 0;
 		}
 
 	      for (octave_idx_type iidx = ic; iidx < max_idx+1; iidx++)
 		tmp.xcidx(iidx) = kk;
 
 	      lhs = tmp;
 	    }
 	}
