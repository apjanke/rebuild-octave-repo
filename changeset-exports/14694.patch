# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1338158397 -7200
#      Mon May 28 00:39:57 2012 +0200
# Branch gui
# Node ID ea11c9d8aa470e90960e841e9f4f0e4c6a135d01
# Parent  c952f1e35e50c2911bdd09625b26e5e5ebad63cb
Calling qApp->quit () via QMetaObject::invoke caused a segfault, now exits cleanly.

* OctaveLink (terminateOctave): Changed quit() call to direct method call.
* MainWindow: Added object name for QTerminal.

diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -189,16 +189,17 @@ MainWindow::readSettings ()
 }
 
 void
 MainWindow::writeSettings ()
 {
   QSettings *settings = ResourceManager::instance ()->settings ();
   settings->setValue ("MainWindow/geometry", saveGeometry ());
   settings->setValue ("MainWindow/windowState", saveState ());
+  settings->sync ();
 }
 
 void
 MainWindow::construct ()
 {
   QStyle *style = QApplication::style ();
   // TODO: Check this.
   m_closing = false;   // flag for editor files when closed
@@ -219,16 +220,17 @@ MainWindow::construct ()
   m_currentDirectoryToolButton = new QToolButton (this);
   m_currentDirectoryToolButton->setIcon (style->standardIcon (QStyle::SP_DirOpenIcon));
 
   m_currentDirectoryUpToolButton = new QToolButton (this);
   m_currentDirectoryUpToolButton->setIcon (style->standardIcon (QStyle::SP_FileDialogToParent));
 
   // Octave Terminal subwindow.
   m_terminal = new QTerminal(this);
+  m_terminal->setObjectName ("OctaveTerminal");
   m_terminalDockWidget = new TerminalDockWidget (m_terminal, this);
 
   /*
   QWidget *dummyWidget = new QWidget ();
   dummyWidget->setObjectName ("DummyWidget");
   dummyWidget->setFixedSize (100, 100);
   dummyWidget->setSizePolicy (QSizePolicy::Minimum, QSizePolicy::Minimum);
   setCentralWidget (dummyWidget);*/
diff --git a/gui/src/backend/OctaveLink.cpp b/gui/src/backend/OctaveLink.cpp
--- a/gui/src/backend/OctaveLink.cpp
+++ b/gui/src/backend/OctaveLink.cpp
@@ -67,17 +67,17 @@ OctaveLink::launchOctave ()
   // Start the first one.
   m_octaveMainThread->start ();
   _updateWorkspaceModelTimer.start ();
 }
 
 void
 OctaveLink::terminateOctave ()
 {
-  QMetaObject::invokeMethod (qApp, "quit");
+  qApp->quit ();
 }
 
 void
 OctaveLink::triggerUpdateHistoryModel ()
 {
   // Determine the client's (our) history length and the one of the server.
   int clientHistoryLength = m_historyModel->rowCount ();
   int serverHistoryLength = command_history::length ();
