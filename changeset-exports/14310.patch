# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1327929752 18000
#      Mon Jan 30 08:22:32 2012 -0500
# Branch stable
# Node ID decea31ea010d12180d469fde1b70e92f31be3e1
# Parent  824e5d362aba9f8e8b11bb56384b3ea78932114e
Fix qhull tests.

* convhulln.cc: Matlab uses "Qt" for num dimensions < 5 and "Qt Qx" otherwise.
Test modified to verify "Qt" is the default option for nd = 3, and to assert
the correct result.

diff --git a/src/DLD-FUNCTIONS/convhulln.cc b/src/DLD-FUNCTIONS/convhulln.cc
--- a/src/DLD-FUNCTIONS/convhulln.cc
+++ b/src/DLD-FUNCTIONS/convhulln.cc
@@ -273,21 +273,26 @@ convex hull is calculated.\n\n\
 #endif
 
   return retval;
 }
 
 /*
 %!testif HAVE_QHULL
 %! cube = [0 0 0;1 0 0;1 1 0;0 1 0;0 0 1;1 0 1;1 1 1;0 1 1];
-%! [h, v] = convhulln (cube);
-%! assert (size (h), [6 4]); 
-%! h = sortrows (sort (h, 2), [1:4]);
-%! assert (h, [1 2 3 4; 1 2 5 6; 1 4 5 8; 2 3 6 7; 3 4 7 8; 5 6 7 8]);
+%! [h, v] = convhulln (cube, "Qt");
+%! assert (size (h), [12 3]); 
+%! h = sortrows (sort (h, 2), [1:3]);
+%! assert (h, [1 2 4; 1 2 6; 1 4 8; 1 5 6; 1 5 8; 2 3 4; 2 3 7; 2 6 7; 3 4 7; 4 7 8; 5 6 7; 5 7 8]);
 %! assert (v, 1, 10*eps);
+%! [h2, v2] = convhulln (cube); % Test defaut option = "Qt"
+%! assert (size (h2), size (h))
+%! h2 = sortrows (sort (h2, 2), [1:3]);
+%! assert (h2, h);
+%! assert (v2, v, 10*eps);
 
 %!testif HAVE_QHULL
 %! cube = [0 0 0;1 0 0;1 1 0;0 1 0;0 0 1;1 0 1;1 1 1;0 1 1];
 %! [h, v] = convhulln (cube, "QJ");
 %! assert (size (h), [12 3]); 
 %! assert (sortrows (sort (h, 2), [1:3]), [1 2 4; 1 2 5; 1 4 5; 2 3 4; 2 3 6; 2 5 6; 3 4 8; 3 6 7; 3 7 8; 4 5 8; 5 6 8; 6 7 8]);
 %! assert (v, 1.0, 1e6*eps);
 
