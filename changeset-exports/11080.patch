# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1286403191 14400
#      Wed Oct 06 18:13:11 2010 -0400
# Node ID 36ceff79607b543c6dbe3c932c5276c8f4067a07
# Parent  dc4f8dfe53251a002de36caf97f92723ba92bdf7
image.m: Allow x/ydata to imply a flip of the image. Modify demos.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-06  Ben Abbott <bpabbott@mac.com>
+
+	* image/image.m: Allow x/ydata to imply a flip of the image.
+	Modify demos.
+
 2010-10-05  Carlo de Falco  <kingcrimson@tiscali.it>
 
 	* general/quadv.m: Fix help string and add a test for vector
 	valued functions.
 
 2010-10-04  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* image/image.m (__img__): Use __image_pixel_size__ to calculate
diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -114,16 +114,29 @@ function h = __img__ (x, y, img, varargi
 
   if (isempty (y))
     y = [1, rows(img)];
   endif
 
   xdata = [x(1), x(end)];
   ydata = [y(1), y(end)];
 
+  if (diff (xdata) < 0)
+    xdata = fliplr (xdata);
+    img = fliplr (img);
+  elseif (diff (xdata) == 0)
+    xdata = xdata(1) + [0, size(img,2)-1];
+  endif
+  if (diff (ydata) < 0)
+    ydata = fliplr (ydata);
+    img = flipud (img);
+  elseif (diff (ydata) == 0)
+    ydata = ydata(1) + [0, size(img,1)-1];
+  endif
+
   ca = gca ();
 
   tmp = __go_image__ (ca, "cdata", img, "xdata", xdata, "ydata", ydata,
                     "cdatamapping", "direct", varargin {:});
 
   px = __image_pixel_size__ (tmp);
   xlim = xdata + [-px(1), px(1)];
   ylim = ydata + [-px(2), px(2)];
@@ -152,22 +165,31 @@ function h = __img__ (x, y, img, varargi
 
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
 
 %!demo
-%! img = 1 ./ hilb (10);
-%! x = 20 * rand (1, 41) - 20;
-%! y = -1:1;
-%! h = image (x, y, img);
+%! img = 1 ./ hilb (11);
+%! x = -5:5;
+%! y = x;
+%! subplot (2,2,1)
+%! h = image (abs(x), abs(y), img);
+%! set (h, "cdatamapping", "scaled")
+%! ylabel ("limits = [4.5, 15.5]")
+%! title ('image (abs(x), abs(y), img)')
+%! subplot (2,2,2)
+%! h = image (-x, y, img);
 %! set (h, "cdatamapping", "scaled")
+%! title ('image (-x, y, img)')
+%! subplot (2,2,3)
+%! h = image (x, -y, img);
+%! set (h, "cdatamapping", "scaled")
+%! title ('image (x, -y, img)')
+%! ylabel ("limits = [-5.5, 5.5]")
+%! subplot (2,2,4)
+%! h = image (-x, -y, img);
+%! set (h, "cdatamapping", "scaled")
+%! title ('image (-x, -y, img)')
 
-%!demo
-%! M = 25;
-%! img = 1 ./ rand (5, 11) - 1;
-%! x = 10 * sort (rand (1, 9));
-%! y = sort (rand (1, 8));
-%! clf
-%! image (x, y, img); 
 
