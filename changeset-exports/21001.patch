# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1451328649 -3600
#      Mon Dec 28 19:50:49 2015 +0100
# Node ID 1c91ff4cf9ec21ecf89a1cd071f4f348eee1e632
# Parent  85dfb551e4cdad1c857a0cd16ce17d00c2ad82d2
add a menu entry for showing/hiding the editor status bar

* file-editor.cc (show_statusbar): new slot;
  (notice_settings): check menu entry depending on settings, showing/hiding
  status bar is don ein the editor tabs;
  (construct): add new action to the view menu;
  (set_shortcuts): set the shortcut for the new action

* file-editor.h: new action with new slot

* shortcut-manager.cc (do_init_data) initialize shortcut data for show
  toolbar and statusbar action

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1252,16 +1252,21 @@ file_editor::show_long_line (bool)
 {
   toggle_preference ("editor/long_line_marker",true);
 }
 void
 file_editor::show_toolbar (bool)
 {
   toggle_preference ("editor/show_toolbar",true);
 }
+void
+file_editor::show_statusbar (bool)
+{
+  toggle_preference ("editor/show_edit_status_bar",true);
+}
 
 void
 file_editor::zoom_in (bool)
 {
   emit fetab_zoom_in (_tab_widget->currentWidget ());
 }
 
 void
@@ -1344,16 +1349,18 @@ file_editor::notice_settings (const QSet
   show_it = settings->value ("editor/show_indent_guides",false).toBool ();
   _show_indguide_action->setChecked (show_it);
   show_it = settings->value ("editor/long_line_marker",true).toBool ();
   _show_longline_action->setChecked (show_it);
 
   show_it = settings->value ("editor/show_toolbar",true).toBool ();
   _show_toolbar_action->setChecked (show_it);
   _tool_bar->setVisible (show_it);
+  show_it = settings->value ("editor/show_edit_status_bar",true).toBool ();
+  _show_statusbar_action->setChecked (show_it);
 
   set_shortcuts ();
 
   // Relay signal to file editor tabs.
   emit fetab_settings_changed (settings);
 }
 
 void
@@ -1682,20 +1689,26 @@ file_editor::construct (void)
   _show_indguide_action = add_action (_view_editor_menu, QIcon (),
           tr ("Show &Indentation Guides"), SLOT (show_indent_guides (bool)));
   _show_indguide_action->setCheckable (true);
 
   _show_longline_action = add_action (_view_editor_menu, QIcon (),
           tr ("Show Long Line &Marker"), SLOT (show_long_line (bool)));
   _show_longline_action->setCheckable (true);
 
+  _view_editor_menu->addSeparator ();
+
   _show_toolbar_action = add_action (_view_editor_menu, QIcon (),
           tr ("Show &Toolbar"), SLOT (show_toolbar (bool)));
   _show_toolbar_action->setCheckable (true);
 
+  _show_statusbar_action = add_action (_view_editor_menu, QIcon (),
+          tr ("Show &Statusbar"), SLOT (show_statusbar (bool)));
+  _show_statusbar_action->setCheckable (true);
+
   view_menu->addSeparator ();
 
   _zoom_in_action = add_action (view_menu, resource_manager::icon ("zoom-in"),
           tr ("Zoom &In"), SLOT (zoom_in (bool)));
   _zoom_out_action = add_action (view_menu, resource_manager::icon ("zoom-out"),
           tr ("Zoom &Out"), SLOT (zoom_out (bool)));
   _zoom_normal_action = add_action (view_menu,  QIcon (),
           tr ("&Normal Size"), SLOT (zoom_normal (bool)));
@@ -2107,16 +2120,17 @@ file_editor::set_shortcuts ()
 
   // View menu
   shortcut_manager::set_shortcut (_show_linenum_action, "editor_view:show_line_numbers");
   shortcut_manager::set_shortcut (_show_whitespace_action, "editor_view:show_white_spaces");
   shortcut_manager::set_shortcut (_show_eol_action, "editor_view:show_eol_chars");
   shortcut_manager::set_shortcut (_show_indguide_action, "editor_view:show_ind_guides");
   shortcut_manager::set_shortcut (_show_longline_action, "editor_view:show_long_line");
   shortcut_manager::set_shortcut (_show_toolbar_action, "editor_view:show_toolbar");
+  shortcut_manager::set_shortcut (_show_statusbar_action, "editor_view:show_statusbar");
   shortcut_manager::set_shortcut (_zoom_in_action, "editor_view:zoom_in");
   shortcut_manager::set_shortcut (_zoom_out_action, "editor_view:zoom_out");
   shortcut_manager::set_shortcut (_zoom_normal_action, "editor_view:zoom_normal");
 
   // Debug menu
   shortcut_manager::set_shortcut (_toggle_breakpoint_action, "editor_debug:toggle_breakpoint");
   shortcut_manager::set_shortcut (_next_breakpoint_action, "editor_debug:next_breakpoint");
   shortcut_manager::set_shortcut (_previous_breakpoint_action, "editor_debug:previous_breakpoint");
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -269,16 +269,17 @@ private slots:
   void handle_combo_enc_current_index (QString new_encoding);
 
   void show_line_numbers (bool);
   void show_white_space (bool);
   void show_eol_chars (bool);
   void show_indent_guides (bool);
   void show_long_line (bool);
   void show_toolbar (bool);
+  void show_statusbar (bool);
   void zoom_in (bool);
   void zoom_out (bool);
   void zoom_normal (bool);
 
   void switch_left_tab ();
   void switch_right_tab ();
   void move_tab_left ();
   void move_tab_right ();
@@ -345,16 +346,17 @@ private:
   QAction *_context_doc_action;
 
   QAction *_show_linenum_action;
   QAction *_show_whitespace_action;
   QAction *_show_eol_action;
   QAction *_show_indguide_action;
   QAction *_show_longline_action;
   QAction *_show_toolbar_action;
+  QAction *_show_statusbar_action;
   QAction *_zoom_in_action;
   QAction *_zoom_out_action;
   QAction *_zoom_normal_action;
 
   QAction *_delete_start_word_action;
   QAction *_delete_end_word_action;
   QAction *_delete_start_line_action;
   QAction *_delete_end_line_action;
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -278,16 +278,20 @@ shortcut_manager::do_init_data ()
         QKeySequence ());
   init (tr ("Show Whitespace Characters"), "editor_view:show_white_spaces",
         QKeySequence ());
   init (tr ("Show Line Endings"), "editor_view:show_eol_chars", QKeySequence ());
   init (tr ("Show Indentation Guides"), "editor_view:show_ind_guides",
         QKeySequence ());
   init (tr ("Show Long Line Marker"), "editor_view:show_long_line",
         QKeySequence ());
+  init (tr ("Show Toolbar"), "editor_view:show_toolbar",
+        QKeySequence ());
+  init (tr ("Show Statusbar"), "editor_view:show_statusbar",
+        QKeySequence ());
   init (tr ("Zoom In"), "editor_view:zoom_in", QKeySequence::ZoomIn);
   init (tr ("Zoom Out"), "editor_view:zoom_out", QKeySequence::ZoomOut);
 #if defined (Q_OS_MAC)
   init (tr ("Zoom Normal"), "editor_view:zoom_normal",
         QKeySequence (ctrl + Qt::Key_Underscore));
 #else
   init (tr ("Zoom Normal"), "editor_view:zoom_normal",
         QKeySequence (ctrl + Qt::Key_Period));
