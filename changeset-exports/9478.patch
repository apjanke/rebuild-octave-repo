# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1249246332 14400
#      Sun Aug 02 16:52:12 2009 -0400
# Node ID 7e1e90837fefe239a8749a8532beb793dbd2c7e6
# Parent  4d3d90253e8ab584af29849c5de4066763da7561
Avoid the flickering x11 window seen with rapid gnuplot updates.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2009-08-02  Ben Abbott <bpabbott@mac.com>
+
+	* plot/gnuplot_drawnow.m: Avoid the flickering x11 window seen with
+	rapid replots by avoidng setting multiplot mode. This fix only
+	functions for a single axes with no image objects.
+	* plot/__go_draw_figure__.m: Move 'set multiplot' to gnuplot_drawnow.
+
 2009-07-31  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/common_size: Optimize.
 
 2009-07-29  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Fix ticklabels specified as 2D character
 	array.
diff --git a/scripts/plot/__go_draw_figure__.m b/scripts/plot/__go_draw_figure__.m
--- a/scripts/plot/__go_draw_figure__.m
+++ b/scripts/plot/__go_draw_figure__.m
@@ -62,17 +62,16 @@ function __go_draw_figure__ (h, plot_str
 
       ## Get complete list of children.
       kids = allchild (h);
       nkids = length (kids);
 
       if (nkids > 0)
 	fputs (plot_stream, "\nreset;\n");
 	fputs (plot_stream, "set autoscale keepfix;\n");
-	fputs (plot_stream, "set multiplot;\n");
 	fputs (plot_stream, "set origin 0, 0\n");
 	fputs (plot_stream, "set size 1, 1\n");
 	for i = 1:nkids
 	  type = get (kids(i), "type");
 	  switch (type)
 	    case "axes"
 	      ## Rely upon listener to convert axes position to "normalized" units.
 	      orig_axes_units = get (kids(i), "units");
@@ -91,17 +90,16 @@ function __go_draw_figure__ (h, plot_str
 		unwind_protect_cleanup
 		set (kids(i), "units", orig_axes_units);
 		set (kids(i), "position", orig_axes_position);
 	      end_unwind_protect
 	    otherwise
 	      error ("__go_draw_figure__: unknown object class, %s", type);
 	  endswitch
 	endfor
-	fputs (plot_stream, "unset multiplot;\n");
       else
 	fputs (plot_stream, "\nreset; clear;\n");
 	fflush (plot_stream);
       endif
     else
       error ("__go_draw_figure__: expecting figure object, found `%s'",
 	     htype);
     endif
diff --git a/scripts/plot/gnuplot_drawnow.m b/scripts/plot/gnuplot_drawnow.m
--- a/scripts/plot/gnuplot_drawnow.m
+++ b/scripts/plot/gnuplot_drawnow.m
@@ -263,53 +263,60 @@ function [enhanced, implicit_margin] = g
         disp ("gnuplot_set_term: figure handle is empty")
       elseif !isfigure(h)
         disp ("gnuplot_set_term: not a figure handle")
       endif
       title_str = "";
       size_str = "";
     endif
 
-    ## Set the gnuplot terminal (type, enhanced?, title, & size).
-    if (! isempty (term))
-      term_str = sprintf ("set terminal %s", term);
-      if (any (strncmpi (term, {"x11", "wxt"}, 3)) && new_stream
-	  && __gnuplot_has_feature__ ("x11_figure_position"))
-        ## The "close" is added to allow the figure position property
-        ## to remain active.
-        term_str = sprintf ("%s close", term_str);
-      endif
-      if (! isempty (enh_str))
-        term_str = sprintf ("%s %s", term_str, enh_str);
-      endif
-      if (! isempty (title_str))
-        term_str = sprintf ("%s %s", term_str, title_str);
+    ## Set the gnuplot terminal (type, enhanced, title, options & size).
+    term_str = sprintf ("set terminal %s", term);
+    if (! isempty (enh_str))
+      term_str = sprintf ("%s %s", term_str, enh_str);
+    endif
+    if (! isempty (title_str))
+      term_str = sprintf ("%s %s", term_str, title_str);
+    endif
+    if (nargin > 3 && ischar (opts_str))
+      ## Options must go last.
+      term_str = sprintf ("%s %s", term_str, opts_str);
+    endif
+    if (! isempty (size_str) && new_stream)
+      ## size_str comes after other options to permit specification of
+      ## the canvas size for terminals cdr/corel.
+      term_str = sprintf ("%s %s", term_str, size_str);
+    endif
+    ## Work around the gnuplot feature of growing the x11 window when
+    ## the mouse and multiplot are set.
+    fputs (plot_stream, "unset multiplot;\n");
+    if (! strcmp (term, "x11")
+        || numel (findall (h, "type", "axes")) > 1
+        || numel (findall (h, "type", "image")) > 0)
+      fprintf (plot_stream, "%s\n", term_str);
+      if (nargin == 5)
+        if (! isempty (file))
+          fprintf (plot_stream, "set output '%s';\n", file);
+        endif
       endif
-      if (nargin > 3 && ischar (opts_str))
-        ## Options must go last.
-        term_str = sprintf ("%s %s", term_str, opts_str);
+      fputs (plot_stream, "set multiplot;\n");
+    elseif (strcmp (term, "x11"))
+      fprintf (plot_stream, "%s\n", term_str);
+      if (nargin == 5)
+        if (! isempty (file))
+          fprintf (plot_stream, "set output '%s';\n", file);
+        endif
       endif
-      if (! isempty (size_str) && new_stream)
-        ## size_str goes last to permit specification of canvas size
-        ## for terminals cdr/corel.
-        term_str = sprintf ("%s %s", term_str, size_str);
-      endif
-      fprintf (plot_stream, "%s\n", term_str);
-    else
-      ## gnuplot will pick up the GNUTERM environment variable itself
-      ## so no need to set the terminal type if not also setting the
-      ## figure title, enhanced mode, or position.
     endif
+  else
+    ## gnuplot will pick up the GNUTERM environment variable itself
+    ## so no need to set the terminal type if not also setting the
+    ## figure title, enhanced mode, or position.
   endif
 
-  if (nargin == 5)
-    if (! isempty (file))
-      fprintf (plot_stream, "set output '%s';\n", file);
-    endif
-  endif
 
 endfunction
 
 function term = gnuplot_default_term ()
   term = getenv ("GNUTERM");
   ## If not specified, guess the terminal type.
   if (isempty (term))
     if (ismac ())
