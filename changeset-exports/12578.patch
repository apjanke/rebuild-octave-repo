# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1302115461 25200
#      Wed Apr 06 11:44:21 2011 -0700
# Node ID f5a780d675a17b3b0e86e81f39123a5e6c6387df
# Parent  562e40e3d5dbefb34dd3595c14d54436ddda493a
Clean up operator and function indices in documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-06  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/diffeq.txi, interpreter/eval.txi, interpreter/plot.txi,
+	interpreter/var.txi: Clean up operator and function indices.
+
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/plot.txi: Add warning about single precision in FLTK.
 
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/doccheck/aspell-octave.en.pws, interpreter/nonlin.txi, 
 	interpreter/tips.txi: Spellcheck documentation for 3.4.1 release.
diff --git a/doc/interpreter/diffeq.txi b/doc/interpreter/diffeq.txi
--- a/doc/interpreter/diffeq.txi
+++ b/doc/interpreter/diffeq.txi
@@ -23,17 +23,17 @@ Octave has built-in functions for solvin
 and differential-algebraic equations.
 All solvers are based on reliable ODE routines written in Fortran.
 
 @menu
 * Ordinary Differential Equations::  
 * Differential-Algebraic Equations::  
 @end menu
 
-@cindex Differential Equations
+@cindex differential equations
 @cindex ODE
 @cindex DAE
 
 @node Ordinary Differential Equations
 @section Ordinary Differential Equations
 
 The function @code{lsode} can be used to solve ODEs of the form
 @tex
diff --git a/doc/interpreter/eval.txi b/doc/interpreter/eval.txi
--- a/doc/interpreter/eval.txi
+++ b/doc/interpreter/eval.txi
@@ -43,18 +43,16 @@ call user-supplied functions.  The @code
 of the function to call as its first argument, and the remaining 
 arguments are given to the function.
 
 The following example is a simple-minded function using @code{feval}
 that finds the root of a user-supplied function of one variable using
 Newton's method.
 
 @example
-@cindex Fordyce, A. P.
-@findex newtroot
 function result = newtroot (fname, x)
 
 # usage: newtroot (fname, x)
 #
 #   fname : a string naming a function f(x).
 #   x     : initial guess
 
   delta = tol = sqrt (eps);
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -2620,17 +2620,17 @@ functions.
 
 @DOCSTRING(gcbf)
 
 Callbacks can equally be added to properties with the @code{addlistener}
 function described below.
 
 @node Application-defined Data
 @subsection Application-defined Data 
-@cindex Application-defined Data
+@cindex application-defined data
 
 Octave has a provision for attaching application-defined data to a graphics
 handle.  The data can be anything which is meaningful to the application, and
 will be completely ignored by Octave.
 
 @DOCSTRING(setappdata)
 
 @DOCSTRING(getappdata)
diff --git a/doc/interpreter/var.txi b/doc/interpreter/var.txi
--- a/doc/interpreter/var.txi
+++ b/doc/interpreter/var.txi
@@ -23,20 +23,16 @@
 
 Variables let you give names to values and refer to them later.  You have
 already seen variables in many of the examples.  The name of a variable
 must be a sequence of letters, digits and underscores, but it may not begin
 with a digit.  Octave does not enforce a limit on the length of variable
 names, but it is seldom useful to have variables with names longer than
 about 30 characters.  The following are all valid variable names
 
-@cindex job hunting
-@cindex getting a good job
-@cindex flying high and fast
-
 @example
 @group
 x
 x15
 __foo_bar_baz__
 fucnrdthsucngtagdjb
 @end group
 @end example
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-06  Rik  <octave@nomad.inbox5.com>
+
+	* optimization/fminunc.m, plot/isocolors.m, plot/isonormals.m:
+	Clean up operator and function indices.
+
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* miscellaneous/symvar.m, miscellaneous/warning_ids.m,
 	optimization/fminunc.m: Spellcheck documentation for 3.4.1 release.
 
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* @ftp/mget.m, audio/loadaudio.m, audio/playaudio.m, audio/record.m,
diff --git a/scripts/optimization/fminunc.m b/scripts/optimization/fminunc.m
--- a/scripts/optimization/fminunc.m
+++ b/scripts/optimization/fminunc.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 ##
 ## Author: Jaroslav Hajek <highegg@gmail.com>
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} fminunc (@var{fcn}, @var{x0})
 ## @deftypefnx {Function File} {} fminunc (@var{fcn}, @var{x0}, @var{options})
-## @deftypefnx {Function File} {[@var{x}, @var{fvec}, @var{info}, @var{output}, @var{grad}, @var{hess}]} = fminunc (@var{fcn}, @dots{})
+## @deftypefnx {Function File} {[@var{x}, @var{fvec}, @var{info}, @var{output}, @var{grad}, @var{hess}] =} fminunc (@var{fcn}, @dots{})
 ## Solve an unconstrained optimization problem defined by the function
 ## @var{fcn}.
 ## @var{fcn} should accepts a vector (array) defining the unknown variables,
 ## and return the objective function value, optionally with gradient.
 ## In other words, this function attempts to determine a vector @var{x} such
 ## that @code{@var{fcn} (@var{x})} is a local minimum.
 ## @var{x0} determines a starting guess.  The shape of @var{x0} is preserved
 ## in all calls to @var{fcn}, but otherwise is treated as a column vector.
diff --git a/scripts/plot/isocolors.m b/scripts/plot/isocolors.m
--- a/scripts/plot/isocolors.m
+++ b/scripts/plot/isocolors.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{cd}] =} isocolors (@var{c}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{x}, @var{y}, @var{z}, @var{c}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{x}, @var{y}, @var{z}, @var{r}, @var{g}, @var{b}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@var{r}, @var{g}, @var{b}, @var{v})
 ## @deftypefnx {Function File} {[@var{cd}] =} isocolors (@dots{}, @var{p})
-## @deftypefnx {Function File} isocolors (@dots{})
+## @deftypefnx {Function File} {} isocolors (@dots{})
 ##
 ## If called with one output argument and the first input argument
 ## @var{c} is a three-dimensional array that contains color values and
 ## the second input argument @var{v} keeps the vertices of a geometry
 ## then return a matrix @var{cd} with color data information for the
 ## geometry at computed points
 ## @command{[x, y, z] = meshgrid (1:l, 1:m, 1:n)}.  The output argument
 ## @var{cd} can be taken to manually set FaceVertexCData of a patch.
diff --git a/scripts/plot/isonormals.m b/scripts/plot/isonormals.m
--- a/scripts/plot/isonormals.m
+++ b/scripts/plot/isonormals.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{n}] =} isonormals (@var{val}, @var{v})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{val}, @var{p})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{x}, @var{y}, @var{z}, @var{val}, @var{v})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@var{x}, @var{y}, @var{z}, @var{val}, @var{p})
 ## @deftypefnx {Function File} {[@var{n}] =} isonormals (@dots{}, "negate")
-## @deftypefnx {Function File} isonormals (@dots{}, @var{p})
+## @deftypefnx {Function File} {} isonormals (@dots{}, @var{p})
 ##
 ## If called with one output argument and the first input argument
 ## @var{val} is a three-dimensional array that contains the data for an
 ## isosurface geometry and the second input argument @var{v} keeps the
 ## vertices of an isosurface then return the normals @var{n} in form of
 ## a matrix with the same size than @var{v} at computed points
 ## @command{[x, y, z] = meshgrid (1:l, 1:m, 1:n)}.  The output argument
 ## @var{n} can be taken to manually set @var{VertexNormals} of a patch.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-06  Rik  <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/dmperm.cc, data.cc: Clean up operator and function
+	indices.
+
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/nproc.cc: Spellcheck documentation for 3.4.1 release.
 
 2011-04-04  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/colamd.cc, data.cc, file-io.cc: Grammarcheck files
 	for 3.4.1 release.
diff --git a/src/DLD-FUNCTIONS/dmperm.cc b/src/DLD-FUNCTIONS/dmperm.cc
--- a/src/DLD-FUNCTIONS/dmperm.cc
+++ b/src/DLD-FUNCTIONS/dmperm.cc
@@ -186,17 +186,17 @@ 16(4):303-324, 1990.\n\
 %! [p,q,r,s]=dmperm(a);
 %! assert(tril(a(p,q),-1),sparse(n,n))
 
 */
 
 DEFUN_DLD (sprank, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{p} =} sprank (@var{S})\n\
-@cindex Structural Rank\n\
+@cindex structural rank\n\
 \n\
 Calculate the structural rank of the sparse matrix @var{S}.  Note that\n\
 only the structure of the matrix is used in this calculation based on\n\
 a Dulmage-Mendelsohn permutation to block triangular form.  As such the\n\
 numerical rank of the matrix @var{S} is bounded by\n\
 @code{sprank (@var{S}) >= rank (@var{S})}.  Ignoring floating point errors\n\
 @code{sprank (@var{S}) == rank (@var{S})}.\n\
 @seealso{dmperm}\n\
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -4572,18 +4572,18 @@ by an empty argument.\n\
 
 %!error <Invalid call to reshape.*> reshape ();
 %!error reshape (1, 2, 3, 4);
 
  */
 
 DEFUN (vec, args, ,
   "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} @var{v} = vec (@var{x})\n\
-@deftypefnx {Built-in Function} {} @var{v} = vec (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {@var{v} =} vec (@var{x})\n\
+@deftypefnx {Built-in Function} {@var{v} =} vec (@var{x}, @var{dim})\n\
 Return the vector obtained by stacking the columns of the matrix @var{x}\n\
 one above the other.  Without @var{dim} this is equivalent to\n\
 @code{@var{x}(:)}.  If @var{dim} is supplied, the dimensions of @var{v}\n\
 are set to @var{dim} with all elements along the last dimension.\n\
 This is equivalent to @code{shiftdim (@var{x}(:), 1-@var{dim})}.\n\
 @end deftypefn")
 {
   octave_value retval;
