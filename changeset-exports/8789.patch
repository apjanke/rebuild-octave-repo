# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1234935783 18000
#      Wed Feb 18 00:43:03 2009 -0500
# Node ID d9bff42fec435c15ea830e075f821156f3a583b7
# Parent  d0bc587fce55179fc906048498e224b48e725eb9
gnuplot_drawnow.m: Only close the gnuplot window and send position/size info when the figure's position property has changed.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2009-02-17  Ben Abbott <bpabbott@mac.com>
+
+	* plot/gnuplot_drawnow.m: Only close the gnuplot window and send
+	position/size info when the figure's position property has changed.
+	(gnuplot_set_term): New arg, NEW_STREAM.  Change all uses.
+	(open_gnuplot_stream): Delete unused output ENHANCED.
+
 2009-02-17  John W. Eaton  <jwe@octave.org>
 
 	* plot/plotyy.m: Handle case of existing figure with no axes.
 
 2009-02-16  John W. Eaton  <jwe@octave.org>
 
 	* help/__makeinfo__.m: Rename from help/makeinfo.m.  Delete tmp file.
 	* help/Makefile.in (SOURCES): Add __makeinfo__.m, delete makeinfo.m.
diff --git a/scripts/plot/gnuplot_drawnow.m b/scripts/plot/gnuplot_drawnow.m
--- a/scripts/plot/gnuplot_drawnow.m
+++ b/scripts/plot/gnuplot_drawnow.m
@@ -35,47 +35,74 @@ function gnuplot_drawnow (h, term, file,
 
   if (nargin >= 3 && nargin <= 5)
     ## Produce various output formats, or redirect gnuplot stream to a
     ## debug file.
     plot_stream = [];
     fid = [];
     unwind_protect
       plot_stream = open_gnuplot_stream (1, []);
-      enhanced = gnuplot_set_term (plot_stream (1), h, term, file);
+      enhanced = gnuplot_set_term (plot_stream (1), true, h, term, file);
       __go_draw_figure__ (h, plot_stream, enhanced, mono);
       if (nargin == 5)
         fid = fopen (debug_file, "wb");
-        enhanced = gnuplot_set_term (fid, h, term, file);
+        enhanced = gnuplot_set_term (fid, true, h, term, file);
         __go_draw_figure__ (h, fid, enhanced, mono);
       endif
     unwind_protect_cleanup
       if (! isempty (plot_stream))
         pclose (plot_stream);
       endif
       if (! isempty (fid))
         fclose (fid);
       endif
     end_unwind_protect
   elseif (nargin == 1)
     ##  Graphics terminal for display.
     plot_stream = get (h, "__plot_stream__");
+    tag = "gnuplot_drawnow";
     if (isempty (plot_stream))
       plot_stream = open_gnuplot_stream (2, h);
+      new_stream = true;
+      ha = axes ("tag", tag, "visible", "off");
+      set (ha, "userdata", get (h, "position"));
+    else
+      new_stream = false;
+      unwind_protect
+	set (0, "showhiddenhandles", "on");
+	ha = findobj (h, "type", "axes", "tag", tag);
+        position = get (h, "position");
+	if (! isempty (ha))
+	  prior_position = get (ha, "userdata");
+	  if (! all (position == prior_position))
+	    new_stream = true;
+	  else
+	    ## FIXME -- Obtain the x11 window id from gnuplot and
+	    ## determine the current position via xwininfo.  The
+	    ## "position" property may then be updated to reflect
+	    ## changes in window position/size made by the mouse.
+	  endif
+	else
+          ha = axes ("tag", tag, "visible", "off");
+	endif
+        set (ha, "userdata", position);
+      unwind_protect_cleanup
+	set (0, "showhiddenhandles", "off");
+      end_unwind_protect
     endif
-    enhanced = gnuplot_set_term (plot_stream (1), h);
+    enhanced = gnuplot_set_term (plot_stream (1), new_stream, h);
     __go_draw_figure__ (h, plot_stream (1), enhanced, mono);
     fflush (plot_stream (1));
   else
     print_usage ();
   endif
 
 endfunction
 
-function [plot_stream, enhanced] = open_gnuplot_stream (npipes, h)
+function plot_stream = open_gnuplot_stream (npipes, h)
   cmd = gnuplot_binary ();
   if (npipes > 1)
     [plot_stream(1), plot_stream(2), pid] = popen2 (cmd);
     if (pid < 0)
       error ("drawnow: failed to open connection to gnuplot");
     endif
   else
     plot_stream = popen (cmd, "w");
@@ -83,22 +110,22 @@ function [plot_stream, enhanced] = open_
       error ("drawnow: failed to open connection to gnuplot");
     endif
   endif
   if (! isempty (h))
     set (h, "__plot_stream__", plot_stream);
   endif
 endfunction
 
-function enhanced = gnuplot_set_term (plot_stream, h, term, file)
+function enhanced = gnuplot_set_term (plot_stream, new_stream, h, term, file)
   ## Generate the gnuplot "set terminal <term> ..." command.  Include
   ## the subset of properties "position", "units", "paperposition",
   ## "paperunits", "name", and "numbertitle".  When "term" originates
   ## from print.m, it may include gnuplot terminal options.
-  if (nargin == 2)
+  if (nargin == 3)
     ## This supports the gnuplot backend.
     term = gnuplot_term ();
     opts_str = "";
   else
     ## Get the one word terminal id and save the remaining as options to
     ## be passed on to gnuplot.  The terminal may respect the backend.
     [term, opts_str] = gnuplot_trim_term (term);
   endif
@@ -199,29 +226,29 @@ function enhanced = gnuplot_set_term (pl
       endif
       title_str = "";
       size_str = "";
     endif
 
     ## Set the gnuplot terminal (type, enhanced?, title, & size).
     if (! isempty (term))
       term_str = sprintf ("set terminal %s", term);
-      if (any (strncmpi (term, {"x11", "wxt"}, 3))
+      if (any (strncmpi (term, {"x11", "wxt"}, 3)) && new_stream
 	  && __gnuplot_has_feature__ ("x11_figure_position"))
         ## The "close" is added to allow the figure position property
         ## to remain active.
         term_str = sprintf ("%s close", term_str);
       endif
       if (! isempty (enh_str))
         term_str = sprintf ("%s %s", term_str, enh_str);
       endif
       if (! isempty (title_str))
         term_str = sprintf ("%s %s", term_str, title_str);
       endif
-      if (! isempty (size_str))
+      if (! isempty (size_str) && new_stream)
         ## size_str goes last to permit specification of canvas size
         ## for terminals cdr/corel.
         term_str = sprintf ("%s %s", term_str, size_str);
       endif
       if (nargin > 2 && ischar (opts_str))
         ## Options must go last.
         term_str = sprintf ("%s %s", term_str, opts_str);
       endif
