# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1383838770 18000
#      Thu Nov 07 10:39:30 2013 -0500
# Node ID 3851e5fde76d22135461cc90a8c1ec1e93d5bc9d
# Parent  cf3f828f401c9e6f750bb183118f4992b8ac2c4a
GUI: allow only one release notes windows to be open

* libgui/src/main-window.h
  (class main-window): Added release_notes_window variable.

* libgui/src/main-window.cpp
  (main-window::mainwindow): Initialize release_notes_window variable.
  (main-window::~mainwindow): call delete on release_notes_window variable.
  (main_window::display_release_notes): Create release_notes_window only if not already created, and always unminimize/show it.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -73,16 +73,17 @@ main_window::main_window (QWidget *p)
     news_window (new news_dock_widget (this)),
     command_window (new terminal_dock_widget (this)),
     history_window (new history_dock_widget (this)),
     file_browser_window (new files_dock_widget (this)),
     doc_browser_window (new documentation_dock_widget (this)),
     editor_window (create_default_editor (this)),
     workspace_window (new workspace_view (this)),
     find_files_dlg (0),
+    release_notes_window (0),
     _octave_main_thread (0),
     _octave_qt_link (0),
     _clipboard (QApplication::clipboard ()),
     _cmd_queue (new QStringList ()),  // no command pending
     _cmd_processing (1),
     _cmd_queue_mutex ()
 {
   // We have to set up all our windows, before we finally launch octave.
@@ -103,16 +104,21 @@ main_window::~main_window (void)
   delete history_window;
   delete status_bar;
   delete _workspace_model;
   if (find_files_dlg)
     {
       delete find_files_dlg;
       find_files_dlg = 0;
     }
+  if (release_notes_window)
+    {
+      delete release_notes_window;
+      release_notes_window = 0;
+    }
   delete _octave_main_thread;
   delete _octave_qt_link;
   delete _cmd_queue;
 }
 
 bool
 main_window::command_window_has_focus (void) const
 {
@@ -249,53 +255,61 @@ void
 main_window::open_online_documentation_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://octave.org/doc/interpreter"));
 }
 
 void
 main_window::display_release_notes (void)
 {
-  std::string news_file = Voct_etc_dir + "/NEWS";
-
-  QString news;
-
-  QFile *file = new QFile (QString::fromStdString (news_file));
-  if (file->open (QFile::ReadOnly))
+  if (! release_notes_window)
     {
-      QTextStream *stream = new QTextStream (file);
-      news = stream->readAll ();
-      if (! news.isEmpty ())
+      std::string news_file = Voct_etc_dir + "/NEWS";
+
+      QString news;
+
+      QFile *file = new QFile (QString::fromStdString (news_file));
+      if (file->open (QFile::ReadOnly))
         {
-          news.prepend ("<pre>");
-          news.append ("</pre>");
+          QTextStream *stream = new QTextStream (file);
+          news = stream->readAll ();
+          if (! news.isEmpty ())
+            {
+              news.prepend ("<pre>");
+              news.append ("</pre>");
+            }
+          else
+            news = (tr ("The release notes file '%1' is empty.")
+                    . arg (QString::fromStdString (news_file)));
         }
       else
-        news = (tr ("The release notes file '%1' is empty.")
+        news = (tr ("The release notes file '%1' cannot be read.")
                 . arg (QString::fromStdString (news_file)));
-    }
-  else
-    news = (tr ("The release notes file '%1' cannot be read.")
-            . arg (QString::fromStdString (news_file)));
 
 
-  QWidget *w = new QWidget;
+      release_notes_window = new QWidget;
 
-  QTextBrowser *browser = new QTextBrowser (w);
-  browser->setText (news);
+      QTextBrowser *browser = new QTextBrowser (release_notes_window);
+      browser->setText (news);
+
+      QVBoxLayout *vlayout = new QVBoxLayout;
+      vlayout->addWidget (browser);
 
-  QVBoxLayout *vlayout = new QVBoxLayout;
-  vlayout->addWidget (browser);
+      release_notes_window->setLayout (vlayout);
+      release_notes_window->setWindowTitle (tr ("Octave Release Notes"));
+      release_notes_window->setWindowIcon (QIcon (_release_notes_icon));
+    }
 
-  w->setLayout (vlayout);
-  w->setWindowTitle (tr ("Octave Release Notes"));
-  w->setWindowIcon (QIcon (_release_notes_icon));
-  w->show ();
-  w->raise ();
-  w->activateWindow ();
+  if (! release_notes_window->isVisible ())
+    release_notes_window->show ();
+  else if (release_notes_window->isMinimized ())
+    release_notes_window->showNormal ();
+
+  release_notes_window->raise ();
+  release_notes_window->activateWindow ();
 }
 
 void
 main_window::open_bug_tracker_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://octave.org/bugs.html"));
 }
 
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -318,16 +318,19 @@ private:
   static const int current_directory_width = 300;
   static const int current_directory_max_visible = 16;
   static const int current_directory_max_count = 16;
   QLineEdit *_current_directory_line_edit;
 
   // Find files dialog
   find_files_dialog * find_files_dlg;
 
+  // release notes window
+  QWidget * release_notes_window;
+
   octave_main_thread *_octave_main_thread;
 
   octave_qt_link *_octave_qt_link;
 
   QClipboard *_clipboard;
 
   // Flag for closing whole application.
   bool _closing;
