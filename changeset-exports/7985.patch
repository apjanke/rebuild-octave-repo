# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1214613508 14400
#      Fri Jun 27 20:38:28 2008 -0400
# Node ID 85c5c1d55820dba5d18aa884777188f4bfb373a5
# Parent  bbaa5d7d0143db7d13baf2a027ffd823488cf1cc
hold.m: Trival mod to help text.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-07-28  Ben Abbott <bpabbott@mac.com>
+
+	* plot/hold.m: Clarify help text.
+ 
 2008-07-28  David Bateman  <dbateman@free.fr>
 
 	* strings/regexptranslate.m: Add real documentation.
 
 	* plot/contourf.m: Allow X,Y to be unequal vectors.
 
 	* plot/shading.m: Clarify help string.
 	
diff --git a/scripts/plot/hold.m b/scripts/plot/hold.m
--- a/scripts/plot/hold.m
+++ b/scripts/plot/hold.m
@@ -13,30 +13,36 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} hold @var{args}
-## Tell Octave to `hold' the current data on the plot when executing
+## Tell Octave to `hold' the current data on the graph when executing
 ## subsequent plotting commands.  This allows you to execute a series of
-## plot commands and have all the lines end up on the same figure.  The
+## plot commands and have all the lines end up on the same graph.  The
 ## default is for each new plot command to clear the plot device first.
 ## For example, the command
 ##
 ## @example
 ## hold on
 ## @end example
 ##
 ## @noindent
 ## turns the hold state on.  An argument of @code{"off"} turns the hold
 ## state off, and @code{hold} with no arguments toggles the current hold
 ## state.
+##
+## @deftypefnx {Function File} {} hold (@var{h}, @dots{})
+## 
+## Applies to a specific axis or axes, associated with the handle(s), 
+## @var{h}.
+## 
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command hold
 
 function hold (varargin)
 
   [h, varargin] = __plt_get_axis_arg__ ("hold", varargin{:});
 
