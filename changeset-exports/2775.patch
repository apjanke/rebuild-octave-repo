# HG changeset patch
# User jwe
# Date 857201855 0
#      Sat Mar 01 07:37:35 1997 +0000
# Node ID c80d72d52385533328cb01a918497ba4b14b56e8
# Parent  5ea69876b2582288ecc65d5e407faf735746196a
[project @ 1997-03-01 07:37:31 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,21 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
+	* config.h.bot: Unconditionally define WITH_KPATHSEARCH.
+
 Fri Feb 28 01:56:52 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* emacs/octave-mod.el (octave-end-keywords): Add endswitch.
+	(octave-end-keywords): Add otherwise and case.
+	(octave-else-keywords): Add switch.
+	(octave-abbrev-table): Add abbrevs for all of them.
+
 	* configure.in (f77_rules_frag): Set default value to /dev/null
 	and redfine as needed.
 	(bsd_gcc_kluge_targets_frag): Likewise.
 
 Wed Feb 26 12:17:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octMakefile.in (maintainer-clean): Delete some more stuff.
 
diff --git a/config.h.bot b/config.h.bot
--- a/config.h.bot
+++ b/config.h.bot
@@ -9,8 +9,10 @@
 
 #define STATIC_CAST(T, E) (T) (E)
 
 #define DYNAMIC_CAST(T, E) (T) (E)
 
 #define REINTERPRET_CAST(T, E) (T) (E)
 
 #define HEAVYWEIGHT_INDEXING 1
+
+#define WITH_KPATHSEARCH 1
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
 Fri Feb 28 20:53:40 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* texinfo.tex: Update to latest version from Karl Berry, and apply
 	previous patch too.
 
 Thu Feb 27 03:34:48 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* texinfo.tex (\codeunder): Maybe make it work for @var{} inside
diff --git a/doc/interpreter/struct.texi b/doc/interpreter/struct.texi
--- a/doc/interpreter/struct.texi
+++ b/doc/interpreter/struct.texi
@@ -190,12 +190,12 @@ Return 1 if the value of the expression 
 
 @deftypefn {Built-in Function} {} struct_contains (@var{expr}, @var{name})
 Return 1 if the expression @var{expr} is a structure and it includes an
 element named @var{name}.  The first argument must be a structure and
 the second must be a string.
 @end deftypefn
 
 @deftypefn {Built-in Function} {} struct_elements (@var{struct})
-Return a list of strings naming the elements of the structure @{struct}.
-It is an error to call @code{struct_elements} with an argument that is
-not a structure.
+Return a list of strings naming the elements of the structure
+@var{struct}.  It is an error to call @code{struct_elements} with an
+argument that is not a structure.
 @end deftypefn
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -50,54 +50,58 @@
 Used in octave-mode and inferior-octave-mode buffers.
 All Octave abbrevs start with a grave accent (`).")
 (if octave-abbrev-table
     ()
   (let ((ac abbrevs-changed))
     (define-abbrev-table 'octave-abbrev-table ())
     (define-abbrev octave-abbrev-table "`a" "all_va_args" nil)
     (define-abbrev octave-abbrev-table "`b" "break" nil)
+    (define-abbrev octave-abbrev-table "`cs" "case" nil)
     (define-abbrev octave-abbrev-table "`ca" "catch" nil)
     (define-abbrev octave-abbrev-table "`c" "continue" nil)
     (define-abbrev octave-abbrev-table "`el" "else" nil)
     (define-abbrev octave-abbrev-table "`eli" "elseif" nil)
     (define-abbrev octave-abbrev-table "`et" "end_try_catch" nil)
     (define-abbrev octave-abbrev-table "`eu" "end_unwind_protect" nil)
     (define-abbrev octave-abbrev-table "`ef" "endfor" nil)
     (define-abbrev octave-abbrev-table "`efu" "endfunction" nil)
     (define-abbrev octave-abbrev-table "`ei" "endif" nil)
+    (define-abbrev octave-abbrev-table "`es" "endswitch" nil)
     (define-abbrev octave-abbrev-table "`ew" "endwhile" nil)
     (define-abbrev octave-abbrev-table "`f" "for" nil)
     (define-abbrev octave-abbrev-table "`fu" "function" nil)
     (define-abbrev octave-abbrev-table "`gl" "global" nil)
     (define-abbrev octave-abbrev-table "`gp" "gplot" nil)
     (define-abbrev octave-abbrev-table "`gs" "gsplot" nil)
     (define-abbrev octave-abbrev-table "`if" "if ()" nil)
+    (define-abbrev octave-abbrev-table "`o" "otherwise" nil)
     (define-abbrev octave-abbrev-table "`rp" "replot" nil)
     (define-abbrev octave-abbrev-table "`r" "return" nil)
+    (define-abbrev octave-abbrev-table "`s" "switch" nil)
     (define-abbrev octave-abbrev-table "`t" "try" nil)
     (define-abbrev octave-abbrev-table "`up" "unwind_protect" nil)
     (define-abbrev octave-abbrev-table "`upc" "unwind_protect_cleanup" nil)
     (define-abbrev octave-abbrev-table "`w" "while ()" nil)
     (setq abbrevs-changed ac)))
 
 (defvar octave-comment-char ?#
   "Character to start an Octave comment.")
 (defvar octave-comment-start
   (concat (make-string 1 octave-comment-char) " ")
   "String to insert to start a new Octave in-line comment.")
 (defvar octave-comment-start-skip "\\s<+\\s-*"
   "Regexp to match the start of an Octave comment up to its body.")
 
 (defvar octave-begin-keywords
-  '("for" "function" "if" "try" "unwind_protect" "while"))
+  '("for" "function" "if" "switch" "try" "unwind_protect" "while"))
 (defvar octave-else-keywords
-  '("catch" "else" "elseif" "unwind_protect_cleanup"))
+  '("case" "catch" "else" "elseif" "otherwise" "unwind_protect_cleanup"))
 (defvar octave-end-keywords
-  '("end" "endfor" "endfunction" "endif" "end_try_catch"
+  '("end" "endfor" "endfunction" "endif" "endswitch" "end_try_catch"
     "end_unwind_protect" "endwhile"))
 
 (defvar octave-reserved-words
   (append octave-begin-keywords octave-else-keywords octave-end-keywords
 	  '("all_va_args" "break" "continue" "global" "gplot" "gsplot"
 	    "replot" "return"))
   "Reserved words in Octave.")
 
@@ -314,16 +318,17 @@ newline or semicolon after an else or en
 (defvar octave-block-begin-or-end-regexp
   (concat octave-block-begin-regexp "\\|" octave-block-end-regexp))
 (defvar octave-block-else-or-end-regexp
   (concat octave-block-else-regexp "\\|" octave-block-end-regexp))
 (defvar octave-block-match-alist
   '(("for" . ("end" "endfor"))
     ("function" . ("end" "endfunction"))
     ("if" . ("else" "elseif" "end" "endif"))
+    ("switch" . ("end" "endswitch"))
     ("try" . ("catch" "end" "end_try_catch"))
     ("unwind_protect" . ("unwind_protect_cleanup" "end"
 			 "end_unwind_protect"))
     ("while" . ("end" "endwhile")))
   "Alist with Octave's matching block keywords.
 Has Octave's begin keywords as keys and a list of the matching else or
 end keywords as associated values.")
 
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
 Wed Feb 26 12:08:39 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (maintainer-clean): Also remove configure.
 
 Thu Feb 20 02:58:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0.4 released.
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
 Fri Feb 28 20:11:23 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* CmplxQR.cc (ComplexQR::init): New function.
 	(ComplexQR::ComplexQR): Use it.  Use initializer list too.
 	* CmplxQRP.cc (ComplexQRP::init): New function.
 	Get sizes right in all cases.
 	(ComplexQR::ComplexQRP): Use it.  Use initializer list too.
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
 Wed Feb 26 01:48:28 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (maintainer-clean): Also remove configure.
 
 	* signal/fftconv.m: Check inputs with is_vector(), not is_matrix().
 
 	* general/is_matrix.m: Return zero for empty matrices.
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,9 +1,14 @@
-Sat Mar  1 01:17:21 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
+	* octave.cc: If WITH_KPATHSEARCH is defined, don't define
+	program_invocation_name or program_invocation_short_name.
 
 	* strftime.c: Update to current version from FSF.
 	* time.cc (Fstrftime): Call strftime with buf = 0 to get buffer
 	size, then call again to actually format the time struct.
 
 Fri Feb 28 01:49:48 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	Implement switch statement:
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -78,17 +78,17 @@ Software Foundation, 59 Temple Place - S
 #include <version.h>
 
 #if !defined (HAVE_ATEXIT) && defined (HAVE_ON_EXIT)
 extern "C" int on_exit ();
 #define atexit on_exit
 #endif
 
 // Don't redefine the variables if glibc already has.
-#if defined (HAVE_PROGRAM_INVOCATION_NAME)
+#if defined (HAVE_PROGRAM_INVOCATION_NAME) || defined (WITH_KPATHSEARCH)
 extern char *program_invocation_name;
 extern char *program_invocation_short_name;
 #else
 char *program_invocation_name;
 char *program_invocation_short_name;
 #endif
 
 #if defined (USE_READLINE)
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Version 2.0.5 released.
+
 Thu Feb 20 02:58:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0.4 released.
 
 Tue Feb 18 09:22:04 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0.3 released.
 
