# HG changeset patch
# User jwe
# Date 1065119639 0
#      Thu Oct 02 18:33:59 2003 +0000
# Node ID 8952973c6837da2139bc1109ad6d47a21d6708ba
# Parent  cccd107fa2085caf08e4df50128321e57b31d33d
[project @ 2003-10-02 18:33:58 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2003-10-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* input.cc (input_event_hook): Clear the event hook if hook_fcn
+	does not name a valid function.
+
 2003-10-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mappers.cc (xabs): New function.
 	(install_mapper_functions): Use it instead of abs for complex args
 	in Octave's abs mapper function.
 
 2003-09-27  Joseph P. Skudlarek  <Jskud@Jskud.com>
  
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -936,20 +936,30 @@ Read the readline library initialiazatio
 }
 
 static std::string hook_fcn;
 static octave_value user_data;
 
 static void
 input_event_hook (void)
 {
-  if (user_data.is_defined ())
-    feval (hook_fcn, user_data, 0);
+  if (is_valid_function (hook_fcn))
+    {
+      if (user_data.is_defined ())
+	feval (hook_fcn, user_data, 0);
+      else
+	feval (hook_fcn, octave_value_list (), 0);
+    }
   else
-    feval (hook_fcn, octave_value_list (), 0);
+    {
+      hook_fcn = std::string ();
+      user_data = octave_value ();
+
+      command_editor::set_event_hook (0);
+    }      
 }
 
 DEFUN (input_event_hook, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{ofcn}, @var{odata}] =} input_event_hook (@var{fcn}, @var{data})\n\
 Given the name of a function as a string and any Octave value object,\n\
 install @var{fcn} as a function to call periodically, when Octave is\n\
 waiting for input.  The function should have the form\n\
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1430,17 +1430,17 @@ mislocked (const std::string& nm)
 {
   symbol_record *sr = fbi_sym_tab->lookup (nm);
 
   return (sr && sr->is_static ());
 }
 
 DEFCMD (mlock, args, ,
   "-*- texinfo -*-\n\
-@deftypefnx {Built-in Function} {} mlock (@var{name})\n\
+@deftypefn {Built-in Function} {} mlock (@var{name})\n\
 Lock the named function into memory.  If no function is named\n\
 then lock in the current function.\n\
 @end deftypefn\n\
 @seealso{munlock, mislocked, and persistent}")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
