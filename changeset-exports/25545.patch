# HG changeset patch
# User Rik <rik@octave.org>
# Date 1530505749 25200
#      Sun Jul 01 21:29:09 2018 -0700
# Branch stable
# Node ID d068c71d4eedd40a18159e1166fd2df5e2c451ff
# Parent  e5208e98ab92c4ad079b7044ee95185ca144cd5c
build: Work around bug in perl 5.28.0 (bug #54202).

* build-aux/inplace_edit.pl: New Perl script to replace using 'perl -i -pe'

* doc/interpreter/module.mk: Replace instance of 'perl -i -pe' with call to
inplace_edit.pl.

diff --git a/build-aux/inplace_edit.pl b/build-aux/inplace_edit.pl
new file mode 100755
--- /dev/null
+++ b/build-aux/inplace_edit.pl
@@ -0,0 +1,33 @@
+#!/usr/bin/perl -w
+
+################################################################################
+## File: inplace_edit.pl
+## Usage: perl inplace_edit.pl 'PERL_CODE' file1 [file2] [...]
+## Purpose: Run snippet of PERL_CODE on each line in a file and replace
+## existing line with the results of running the code.
+## This replaces perl -i -pe 'PERL_CODE' file1 [file2] ...
+## due to a problem in Perl 5.28 which restricts the number of files
+################################################################################
+
+## Create Perl code from first argument (-e CODE)
+eval "sub per_line_code { $ARGV[0]; }";
+shift @ARGV;
+
+## Loop over each file
+foreach $fname (@ARGV)
+{
+  rename ($fname, "$fname.$$") or die "Rename failed:$fname:$!"; 
+  open (my $FHI, "<", "$fname.$$") or die "Open failed:$fname.$$:$!";  
+  open (my $FHO, ">", "$fname") or die "Open failed:$fname:$!";  
+
+  ## Loop over each line
+  while (<$FHI>)
+  {
+    per_line_code ();
+    print $FHO $_;      
+  }
+
+  close ($FHI);
+  close ($FHO);
+  unlink "$fname.$$" or die "Delete failed:$fname.$$:$!";
+}
diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -295,17 +295,17 @@ endif
 
 $(OCTAVE_HTML_STAMP): %reldir%/octave.texi $(srcdir)/%reldir%/version-octave.texi | %reldir%/$(am__dirstamp)
 	$(AM_V_MAKEINFO)rm -rf $(OCTAVE_HTML_DIR)
 	$(AM_V_at)if $(MAKEINFOHTML) $(AM_MAKEINFOHTMLFLAGS) $(MAKEINFOFLAGS) \
 	 -I doc/interpreter -I $(abs_top_srcdir)/doc/interpreter \
 	 --css-ref=octave.css \
 	 -o $(OCTAVE_HTML_TMP_DIR) `test -f '%reldir%/octave.texi' || echo '$(abs_top_srcdir)/'`%reldir%/octave.texi; \
 	then \
-	  $(PERL) -i -pe 's|(?<=</a>): ||g' $(OCTAVE_HTML_TMP_DIR)/* && \
+	  $(PERL) $(srcdir)/build-aux/inplace_edit.pl 's|(?<=</a>): ||g' $(OCTAVE_HTML_TMP_DIR)/* && \
 	  rm -rf $(OCTAVE_HTML_DIR) && \
 	  mv $(OCTAVE_HTML_TMP_DIR) $(OCTAVE_HTML_DIR) && \
 	  touch $@; \
 	else \
 	  rm -rf $(OCTAVE_HTML_TMP_DIR); exit 1; \
 	fi
 
 $(HTMLDIR_IMAGES) $(HTMLDIR_CSS) : %reldir%/octave.html/%: %reldir%/% $(OCTAVE_HTML_STAMP)
