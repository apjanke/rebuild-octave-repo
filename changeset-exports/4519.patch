# HG changeset patch
# User jwe
# Date 1064423506 0
#      Wed Sep 24 17:11:46 2003 +0000
# Node ID 8e1c04e506ce6db49e4691c76f977a693531fe02
# Parent  382cb0ed8c14f92dc04c03b0264aa7c765ca2e66
[project @ 2003-09-24 17:11:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2003-09-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-cell.cc (octave_cell::subsasgn): Also attempt empty
+	conversion after extracting single element from cell array to
+	allow things like x{i}.elt = rhs to work.
+
 2003-09-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov.h (octave_value::dim_vector): New function.
 
 	* ov.h, ov.cc (octave_value::octave_value (const Cell&)):
 	New arg, is_cs_list.
 	(octave_value::octave_value (const NDArray&)):
 	Create octave_matrix object, not octave_double_nd_array object.
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -88,17 +88,17 @@ octave_base_matrix<MT>::subsasgn (const 
 
 	    octave_value tmp = octave_value::empty_conv (type, rhs);
 
 	    retval = tmp.subsasgn (type, idx, rhs);
 	  }
 	else
 	  {
 	    std::string nm = type_name ();
-	    error ("in indexed assignment of %s, last rhs index must be ()",
+	    error ("in indexed assignment of %s, last lhs index must be ()",
 		   nm.c_str ());
 	  }
       }
       break;
 
     case '{':
     case '.':
       {
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -153,17 +153,21 @@ octave_cell::subsasgn (const std::string
 		    tmp = tcell(0,0);
 
 		    std::list<octave_value_list> next_idx (idx);
 
 		    next_idx.erase (next_idx.begin ());
 
 		    tmp.make_unique ();
 
-		    t_rhs = tmp.subsasgn (type.substr (1), next_idx, rhs);
+		    if (! tmp.is_defined () || tmp.is_empty ())
+		      tmp = octave_value::empty_conv (type.substr (1), rhs);
+
+		    if (! error_state)
+		      t_rhs = tmp.subsasgn (type.substr (1), next_idx, rhs);
 		  }
 	      }
 	  }
 	  break;
 
 	case '.':
 	  {
 	    std::string nm = type_name ();
