# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1237664781 -3600
#      Sat Mar 21 20:46:21 2009 +0100
# Node ID 0631d397fbe08a9ce3c08c7afa9cb2c61f04e45a
# Parent  5cc15e4b4e5c499672c66697d04eb766b98cfb62
replace lo_ieee_isnan by xisnan, add missing includes

diff --git a/liboctave/Array-d.cc b/liboctave/Array-d.cc
--- a/liboctave/Array-d.cc
+++ b/liboctave/Array-d.cc
@@ -22,42 +22,42 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 // Instantiate Arrays of double values.
 
-#include "lo-ieee.h"
+#include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
 
 #define INLINE_ASCENDING_SORT
 #define INLINE_DESCENDING_SORT
 #include "oct-sort.cc"
 
 template <>
 inline bool
 sort_isnan<double> (double x)
 {
-  return lo_ieee_isnan (x);
+  return xisnan (x);
 }
 
 static bool
 nan_ascending_compare (double x, double y)
 {
-  return lo_ieee_isnan (y) ? ! lo_ieee_isnan (x) : x < y;
+  return xisnan (y) ? ! xisnan (x) : x < y;
 }
 
 static bool
 nan_descending_compare (double x, double y)
 {
-  return lo_ieee_isnan (x) ? ! lo_ieee_isnan (y) : x > y;
+  return xisnan (x) ? ! xisnan (y) : x > y;
 }
 
 Array<double>::compare_fcn_type
 sortrows_comparator (sortmode mode, const Array<double>& a , bool allow_chk)
 {
   Array<double>::compare_fcn_type result = 0;
 
   if (allow_chk)
diff --git a/liboctave/Array-f.cc b/liboctave/Array-f.cc
--- a/liboctave/Array-f.cc
+++ b/liboctave/Array-f.cc
@@ -22,42 +22,42 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 // Instantiate Arrays of float values.
 
-#include "lo-ieee.h"
+#include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
 
 #define INLINE_ASCENDING_SORT
 #define INLINE_DESCENDING_SORT
 #include "oct-sort.cc"
 
 template <>
 inline bool
 sort_isnan<float> (float x)
 {
-  return lo_ieee_isnan (x);
+  return xisnan (x);
 }
 
 static bool
 nan_ascending_compare (float x, float y)
 {
-  return lo_ieee_isnan (y) ? ! lo_ieee_isnan (x) : x < y;
+  return xisnan (y) ? ! xisnan (x) : x < y;
 }
 
 static bool
 nan_descending_compare (float x, float y)
 {
-  return lo_ieee_isnan (x) ? ! lo_ieee_isnan (y) : x > y;
+  return xisnan (x) ? ! xisnan (y) : x > y;
 }
 
 Array<float>::compare_fcn_type
 sortrows_comparator (sortmode mode, const Array<float>& a , bool allow_chk)
 {
   Array<float>::compare_fcn_type result = 0;
 
   if (allow_chk)
diff --git a/liboctave/CDiagMatrix.cc b/liboctave/CDiagMatrix.cc
--- a/liboctave/CDiagMatrix.cc
+++ b/liboctave/CDiagMatrix.cc
@@ -25,16 +25,17 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
+#include "lo-ieee.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // Complex Diagonal Matrix class
 
 ComplexDiagMatrix::ComplexDiagMatrix (const DiagMatrix& a)
   : MDiagArray2<Complex> (a.rows (), a.cols ())
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2009-03-21  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array-d.cc: lo_ieee_isnan -> xisnan.
+	* Array-f.cc: Ditto.
+	* oct-inttypes.cc: Ditto.
+	* oct-inttypes.h: Ditto.
+	* CDiagMatrix.cc: Add missing include.
+	* fCDiagMatrix.cc: Ditto.
+
 2009-03-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	
 	* CColVector.cc, CMatrix.cc, CNDArray.cc, CRowVector.cc, CSparse.cc,
 	boolSparse.cc, dColVector.cc, dMatrix.cc, dNDArray.cc, dRowVector.cc,
 	dSparse.cc, fCColVector.cc, fCMatrix.cc, fCNDArray.cc, fCRowVector.cc,
 	fColVector.cc, fMatrix.cc, fNDArray.cc, fRowVector.cc, intNDArray.cc:
 	Allow empty arrays in stream input operators.
diff --git a/liboctave/fCDiagMatrix.cc b/liboctave/fCDiagMatrix.cc
--- a/liboctave/fCDiagMatrix.cc
+++ b/liboctave/fCDiagMatrix.cc
@@ -25,16 +25,17 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
+#include "lo-ieee.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
 #include "oct-cmplx.h"
 
 // FloatComplex Diagonal Matrix class
 
 FloatComplexDiagMatrix::FloatComplexDiagMatrix (const FloatDiagMatrix& a)
   : MDiagArray2<FloatComplex> (a.rows (), a.cols ())
diff --git a/liboctave/oct-inttypes.cc b/liboctave/oct-inttypes.cc
--- a/liboctave/oct-inttypes.cc
+++ b/liboctave/oct-inttypes.cc
@@ -402,17 +402,17 @@ INT_DOUBLE_BINOP_DECL (*, uint64)
   if (y >= 0 && y < octave_uint64::max () && y == xround (y))
     {
       return x * octave_uint64 (static_cast<uint64_t> (y));
     }
   else if (y == 0.5)
     {
       return x / octave_uint64 (static_cast<uint64_t> (2));
     }
-  else if (y < 0 || lo_ieee_isnan (x) || lo_ieee_isinf (x))
+  else if (y < 0 || xisnan (x) || xisinf (x))
     {
       return octave_uint64 (x.value () * y); 
     }
   else
     {
       bool sign;
       uint64_t my;
       int e;
@@ -437,17 +437,17 @@ INT_DOUBLE_BINOP_DECL (*, int64)
   if (fabs (y) < octave_int64::max () && y == xround (y))
     {
       return x * octave_int64 (static_cast<int64_t> (y));
     }
   else if (fabs (y) == 0.5)
     {
       return x / octave_int64 (static_cast<uint64_t> (4*y));
     }
-  else if (lo_ieee_isnan (x) || lo_ieee_isinf (x))
+  else if (xisnan (x) || xisinf (x))
     {
       return octave_int64 (x.value () * y); 
     }
   else
     {
       bool sign;
       uint64_t my;
       int e;
diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -28,21 +28,21 @@ along with Octave; see the file COPYING.
 #include <cstdlib>
 
 #include <limits>
 #include <iosfwd>
 
 #include "lo-traits.h"
 #include "lo-math.h"
 #include "oct-types.h"
-#include "lo-ieee.h"
 #include "lo-mappers.h"
 
 #ifdef OCTAVE_INT_USE_LONG_DOUBLE
 inline long double xround (long double x) { return roundl (x); }
+inline long double xisnan (long double x) { return xisnan (static_cast<double> (x)); }
 #endif
 
 // Undefine min/max if needed (this may happen under Windows)
 #ifdef min
 #undef min
 #undef max
 #endif
 
@@ -284,17 +284,17 @@ public:
   // Convert a real number (check NaN and non-int).
   template <class S>
   static T 
   convert_real (const S& value)
     {
       // Compute proper thresholds.
       static const S thmin = compute_threshold (static_cast<S> (min_val ()), min_val ());
       static const S thmax = compute_threshold (static_cast<S> (max_val ()), max_val ());
-      if (lo_ieee_isnan (value))
+      if (xisnan (value))
         {
           fnan = true;
           return static_cast<T> (0);
         }
       else if (value < thmin)
         {
           ftrunc = true;
           return min_val ();
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-03-21  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base-diag.cc: Add missing include.
+	* sparse-xdiv.cc: Ditto.
+	* DLD-FUNCTIONS/__glpk__.cc: Ditto.
+	* DLD-FUNCTIONS/__lin_interpn__.cc: Ditto.
+	* DLD-FUNCTIONS/__voronoi__.cc: Ditto.
+
 2009-03-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-re-mat.cc (octave_matrix::load_ascii): Simplify.
 	* ov-flt-re-mat.cc (octave_float_matrix::load_ascii): Simplify.
 	* ov-cx-mat.cc (octave_complex_matrix::load_ascii): Simplify.
 	* ov-flt-cx-mat.cc (octave_float_complex_matrix::load_ascii): Simplify.
 
 2009-03-20  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/src/DLD-FUNCTIONS/__glpk__.cc b/src/DLD-FUNCTIONS/__glpk__.cc
--- a/src/DLD-FUNCTIONS/__glpk__.cc
+++ b/src/DLD-FUNCTIONS/__glpk__.cc
@@ -23,16 +23,18 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
 #include <csetjmp>
 #include <ctime>
 
+#include "lo-ieee.h"
+
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
 #include "oct-obj.h"
 #include "pager.h"
 
 #if defined (HAVE_GLPK)
diff --git a/src/DLD-FUNCTIONS/__lin_interpn__.cc b/src/DLD-FUNCTIONS/__lin_interpn__.cc
--- a/src/DLD-FUNCTIONS/__lin_interpn__.cc
+++ b/src/DLD-FUNCTIONS/__lin_interpn__.cc
@@ -19,16 +19,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include "lo-ieee.h"
 #include "dNDArray.h"
 #include "oct-locbuf.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "oct-obj.h"
 
 // equivalent to isvector.m
diff --git a/src/DLD-FUNCTIONS/__voronoi__.cc b/src/DLD-FUNCTIONS/__voronoi__.cc
--- a/src/DLD-FUNCTIONS/__voronoi__.cc
+++ b/src/DLD-FUNCTIONS/__voronoi__.cc
@@ -29,16 +29,17 @@ 2003-12-14 Rafael Laboissiere <rafael@la
 Added optional second argument to pass options to the underlying
 qhull command
 */
 
 #include <iostream>
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
+#include "lo-ieee.h"
 #include "oct.h"
 #include "Cell.h"
 
 #ifdef HAVE_QHULL
 extern "C" {
 #include <qhull/qhull_a.h>
 }
 
diff --git a/src/ov-base-diag.cc b/src/ov-base-diag.cc
--- a/src/ov-base-diag.cc
+++ b/src/ov-base-diag.cc
@@ -22,16 +22,17 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 
 #include "mach-info.h"
+#include "lo-ieee.h"
 
 #include "ov-base.h"
 #include "ov-base-mat.h"
 #include "pr-output.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-stream.h"
 #include "ops.h"
diff --git a/src/sparse-xdiv.cc b/src/sparse-xdiv.cc
--- a/src/sparse-xdiv.cc
+++ b/src/sparse-xdiv.cc
@@ -26,16 +26,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <cassert>
 
 #include "Array-util.h"
 #include "oct-cmplx.h"
 #include "quit.h"
 #include "error.h"
+#include "lo-ieee.h"
 
 #include "dSparse.h"
 #include "dDiagMatrix.h"
 #include "CSparse.h"
 #include "CDiagMatrix.h"
 #include "oct-spparms.h"
 #include "sparse-xdiv.h"
 
