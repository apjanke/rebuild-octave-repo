# HG changeset patch
# User jwe
# Date 964503002 0
#      Tue Jul 25 05:30:02 2000 +0000
# Node ID 6581e686f83fc54af3f2a50b47a99c5e57ec30a6
# Parent  7e90f4e9a4d5425db510e77de793082b13f77405
[project @ 2000-07-25 05:30:02 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2000-07-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-cutils.c (oct_strptime): New function.
+	* oct-time.cc (octave_strptime::init): Call it instead of strptime.
+	Don't declare strptime.  Don't define _XOPEN_SOURCE or _BSD_SOURCE.
+
 2000-07-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-time.cc: Comment out _BSD_SOURCE and _XOPEN_SOURCE definitions.
 
 	* Makefile.in (MATRIX_INC): Add ArrayN-idx.h to the list.
 
 2000-06-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -20,21 +20,30 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <stdlib.h>
+#include <time.h>
 
 void
 octave_qsort (void *base, size_t n, size_t size,
 	      int (*cmp) (const void *, const void *))
 {
   qsort (base, n, size, cmp);
 }
 
+extern char *strptime ();
+
+char *
+oct_strptime (const char *buf, const char *format, struct tm *tm)
+{
+  return strptime (buf, format, tm);
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -34,15 +34,18 @@ extern char *strsave (const char *);
 
 extern void octave_putenv (const std::string&, const std::string&);
 
 extern std::string octave_fgets (std::FILE *);
 
 extern "C" void octave_qsort (void *base, size_t n, size_t size,
 			      int (*cmp) (const void *, const void *));
 
+extern "C" char *oct_strptime (const char *buf, const char *format,
+			       struct tm *tm);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -19,69 +19,30 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#if 0
-
-// The following definitions are commented out because they cause
-// trouble on some systems.  What is really needed is a feature test
-// in the configure script.
-
-// I am told that without _BSD_SOURCE, tm_zone won't be declared on
-// some systems.  Defining _XOPEN_SOURCE provides the declaration for
-// strptime on some others.
-//
-// These defines go here, before any system header files are included,
-// because the system header files may define other macros that are
-// actually used to determine the feature set.  If we wait until after
-// some system header file is included, it may be too late.
-
-#if !defined (_BSD_SOURCE)
-#define _BSD_SOURCE 1
-#define OCTAVE_UNDEFINE_BSD_SOURCE
-#endif
-
-#if !defined (_XOPEN_SOURCE)
-#define _XOPEN_SOURCE 1
-#define OCTAVE_UNDEFINE_XOPEN_SOURCE
-#endif
-
-#endif
-
 #include <climits>
 #include <cmath>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "lo-error.h"
 #include "lo-utils.h"
 #include "oct-time.h"
 
-#if defined (OCTAVE_UNDEFINE_BSD_SOURCE)
-#undef _BSD_SOURCE
-#endif
-
-#if defined (OCTAVE_UNDEFINE_XOPEN_SOURCE)
-#undef _XOPEN_SOURCE
-#endif
-
-#if !defined (HAVE_STRPTIME)
-extern "C" char *strptime (const char *buf, const char *format, struct tm *tm);
-#endif
-
 octave_time::octave_time (const octave_base_tm& tm)
 {
   struct tm t;
   
   t.tm_sec = tm.sec ();
   t.tm_min = tm.min ();
   t.tm_hour = tm.hour ();
   t.tm_mday = tm.mday ();
@@ -281,17 +242,17 @@ octave_strptime::init (const std::string
 
 #if defined (HAVE_TM_ZONE)
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
   char *p = strsave (str.c_str ());
 
-  char *q = strptime (p, fmt.c_str (), &t);
+  char *q = oct_strptime (p, fmt.c_str (), &t);
 
   nchars = p - q;
 
   delete [] p;
 
   octave_base_tm::init (&t);
 
 #if defined (HAVE_TM_ZONE)
