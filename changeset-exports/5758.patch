# HG changeset patch
# User jwe
# Date 1144869806 0
#      Wed Apr 12 19:23:26 2006 +0000
# Node ID 65208d959bf1681c18fd3adec4f4f9daa1d74bf2
# Parent  958e365b875e2924b8367141e8e63bb1e2aa6ae5
[project @ 2006-04-12 19:23:26 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2006-04-12  John W. Eaton  <jwe@octave.org>
 
+	* ov-str-mat.cc (warn_str_to_num): Move here, from ov.cc.
+	(Vwarn_str_to_num): Likewise.  Now static.
+	(symbols_of_ov_str_mat): New function.  Move DEFVAR for
+	warn_str_to_num here from symbols_of_ov in ov.cc.
+	* ov.h (Vwarn_str_to_num): Delete decl.
+
 	* ov-struct.cc (octave_struct::load_ascii): Pass loop counter, not
 	count, to read_ascii.
 	* ov-list.cc (octave_list::load_ascii): Likewise.
 
 	* ov-list.cc (octave_list::do_index_op): Allow index to extract
 	multiple items.  Result is always a list.
 
 	* ov-struct.cc (struct_levels_to_print): Move here from ov.cc.
diff --git a/src/gripes.cc b/src/gripes.cc
--- a/src/gripes.cc
+++ b/src/gripes.cc
@@ -27,17 +27,17 @@ 02110-1301, USA.
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 // Allow divide by zero errors to be suppressed.
-bool Vwarn_divide_by_zero;
+static bool Vwarn_divide_by_zero;
 
 void
 gripe_not_supported (const char *fcn)
 {
   error ("%s: not supported on this system", fcn);
 }
 
 void
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -28,37 +28,45 @@ 02110-1301, USA.
 #include <iostream>
 #include <vector>
 
 #include "data-conv.h"
 #include "lo-ieee.h"
 #include "mach-info.h"
 #include "mx-base.h"
 
+#include "defun.h"
+#include "byte-swap.h"
+#include "gripes.h"
+#include "ls-oct-ascii.h"
+#include "ls-hdf5.h"
+#include "ls-utils.h"
 #include "oct-obj.h"
 #include "oct-stream.h"
 #include "ops.h"
 #include "ov-scalar.h"
 #include "ov-re-mat.h"
 #include "ov-str-mat.h"
-#include "gripes.h"
 #include "pr-output.h"
 #include "pt-mat.h"
-
-#include "byte-swap.h"
-#include "ls-oct-ascii.h"
-#include "ls-hdf5.h"
-#include "ls-utils.h"
+#include "utils.h"
 
 DEFINE_OCTAVE_ALLOCATOR (octave_char_matrix_str);
 DEFINE_OCTAVE_ALLOCATOR (octave_char_matrix_sq_str);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_char_matrix_str, "string", "char");
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_char_matrix_sq_str, "sq_string", "char");
 
+// If TRUE, warn for operations like
+//
+//   octave> 'abc' + 0
+//   97 98 99
+//
+static bool Vwarn_str_to_num;
+
 static octave_value *
 default_numeric_conversion_function (const octave_value& a)
 {
   octave_value *retval = 0;
 
   CAST_CONV_ARG (const octave_char_matrix_str&);
 
   NDArray nda = v.array_value (true);
@@ -751,13 +759,42 @@ octave_char_matrix_str::load_hdf5 (hid_t
 	}
     }
 
   return retval;
 }
 
 #endif
 
+static int
+warn_str_to_num (void)
+{
+  Vwarn_str_to_num = check_preference ("warn_str_to_num");
+
+  return 0;
+}
+
+void
+symbols_of_ov_str_mat (void)
+{
+  DEFVAR (warn_str_to_num, false, warn_str_to_num,
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} warn_str_to_num\n\
+If the value of @code{warn_str_to_num} is nonzero, a warning is printed\n\
+for implicit conversions of strings to their numeric ASCII equivalents.\n\
+For example,\n\
+@example\n\
+@group\n\
+\"abc\" + 0\n\
+     @result{} 97 98 99\n\
+@end group\n\
+@end example\n\
+elicits a warning if @code{warn_str_to_num} is nonzero.  The default\n\
+value is 0.\n\
+@end defvr");
+}
+
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -95,23 +95,16 @@ bool Vwarn_fortran_indexing;
 
 // Should we warn about conversions from complex to real?
 int Vwarn_imag_to_real;
 
 // Should we print a warning when converting `[97, 98, 99, "123"]'
 // to a character string?
 bool Vwarn_num_to_str;
 
-// If TRUE, warn for operations like
-//
-//   octave> 'abc' + 0
-//   97 98 99
-//
-int Vwarn_str_to_num;
-
 // If TRUE, print the name along with the value.
 bool Vprint_answer_id_name;
 
 // If TRUE, print a warning when a matrix is resized by an indexed
 // assignment with indices outside the current bounds.
 bool Vwarn_resize_on_range_error;
 
 // XXX FIXME XXX
@@ -2268,24 +2261,16 @@ static int
 warn_num_to_str (void)
 {
   Vwarn_num_to_str = check_preference ("warn_num_to_str");
 
   return 0;
 }
 
 static int
-warn_str_to_num (void)
-{
-  Vwarn_str_to_num = check_preference ("warn_str_to_num");
-
-  return 0;
-}
-
-static int
 print_answer_id_name (void)
 {
   Vprint_answer_id_name = check_preference ("print_answer_id_name");
 
   return 0;
 }
 
 static int
@@ -2376,30 +2361,15 @@ value is 1.\n\
   DEFVAR (warn_resize_on_range_error, false, warn_resize_on_range_error,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} warn_resize_on_range_error\n\
 If the value of @code{warn_resize_on_range_error} is nonzero, print a\n\
 warning when a matrix is resized by an indexed assignment with\n\
 indices outside the current bounds.  The default value is 0.\n\
 @end defvr");
 
-  DEFVAR (warn_str_to_num, false, warn_str_to_num,
-    "-*- texinfo -*-\n\
-@defvr {Built-in Variable} warn_str_to_num\n\
-If the value of @code{warn_str_to_num} is nonzero, a warning is printed\n\
-for implicit conversions of strings to their numeric ASCII equivalents.\n\
-For example,\n\
-@example\n\
-@group\n\
-\"abc\" + 0\n\
-     @result{} 97 98 99\n\
-@end group\n\
-@end example\n\
-elicits a warning if @code{warn_str_to_num} is nonzero.  The default\n\
-value is 0.\n\
-@end defvr");
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -957,23 +957,16 @@ OV_BINOP_FN (op_struct_ref)
 //
 // for A already defined and a matrix type.
 extern bool Vwarn_fortran_indexing;
 
 // Should we print a warning when converting `[97, 98, 99, "123"]'
 // to a character string?
 extern bool Vwarn_num_to_str;
 
-// If TRUE, warn for operations like
-//
-//   octave> 'abc' + 0
-//   97 98 99
-//
-extern int Vwarn_str_to_num;
-
 // Should we warn about conversions from complex to real?
 extern int Vwarn_imag_to_real;
 
 // If TRUE, print the name along with the value.
 extern bool Vprint_answer_id_name;
 
 // If TRUE, print a warning when a matrix is resized by an indexed
 // assignment with indices outside the current bounds.
