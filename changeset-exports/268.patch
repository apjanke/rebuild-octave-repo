# HG changeset patch
# User jwe
# Date 757754402 0
#      Wed Jan 05 07:20:02 1994 +0000
# Node ID 69ed7cc2c05a27162ff2205131d492346d2f6de6
# Parent  12010b8263ca448c4f39a89dca71d2888a57f295
[project @ 1994-01-05 07:20:02 by jwe]

diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -1,12 +1,12 @@
 // octave.cc                                            -*- C++ -*-
 /*
 
-Copyright (C) 1992, 1993 John W. Eaton
+Copyright (C) 1992, 1993, 1994 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -303,17 +303,17 @@ execute_startup_files (void)
 /*
  * Usage message with extra help.
  */
 static void
 verbose_usage (void)
 {
   cout << "\n"
        << "  Octave, version " << version_string
-       << ".  Copyright (C) 1992, 1993, John W. Eaton.\n"
+       << ".  Copyright (C) 1992, 1993, 1994 John W. Eaton.\n"
        << "  This is free software with ABSOLUTELY NO WARRANTY.\n"
        << "\n"
        << "  usage: " << usage_string
        << "\n\n"
        << "     d : enter parser debugging mode\n"
        << "     f : don't read ~/.octaverc or .octaverc at startup\n"
        << "   h|? : print short help message and exit\n"
        << "     i : force interactive behavior\n"
@@ -492,17 +492,17 @@ main (int argc, char **argv)
   if (! (interactive || forced_interactive))
     using_readline = 0;
 
   install_signal_handlers ();
 
   if (! inhibit_startup_message)
     {
       cout << "Octave, version " << version_string
-	   << ".  Copyright (C) 1992, 1993, John W. Eaton.\n"
+	   << ".  Copyright (C) 1992, 1993, 1994 John W. Eaton.\n"
 	   << "This is free software with ABSOLUTELY NO WARRANTY.\n"
 	   << "For details, type `warranty'.\n"
 	   << "\n";
     }
 
 // Allow the user to interrupt us without exiting.
 
   volatile sig_handler *saved_sigint_handler = signal (SIGINT, SIG_IGN);
