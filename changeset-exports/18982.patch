# HG changeset patch
# User Serviscope Minor <serviscope_minor@verybigfrog.com>
# Date 1407181772 -3600
#      Mon Aug 04 20:49:32 2014 +0100
# Node ID 04dc55bf71e87f13f46482ba17d949c2db5f027f
# Parent  05a7c6026df0cef4ca2a43be82f498bc8cf026f9
adjust spacing in gnuplot legend when non default font size is used.

* scripts/plot/util/private/__go_draw_axes__.m add spacing spec to key
  definition in __go_draw_axes__

diff --git a/scripts/plot/util/private/__go_draw_axes__.m b/scripts/plot/util/private/__go_draw_axes__.m
--- a/scripts/plot/util/private/__go_draw_axes__.m
+++ b/scripts/plot/util/private/__go_draw_axes__.m
@@ -1581,35 +1581,35 @@ function __go_draw_axes__ (h, plot_strea
         warning ("legend: 'Best' not yet implemented for location specifier.\n");
         ## Least conflict with data in plot.
         ## Least unused space outside plot.
       otherwise
         pos = "";
     endswitch
     if (__gnuplot_has_feature__ ("key_has_font_properties"))
       [fontname, fontsize] = get_fontname_and_size (hlgnd);
-      fontspec = create_fontspec (fontname, fontsize, gnuplot_term);
+      fontspacespec = [ create_spacingspec(fontname, fontsize, gnuplot_term) create_fontspec(fontname, fontsize, gnuplot_term) ];
     else
-      fontspec = "";
+      fontspacespec = "";
     endif
     textcolors = get (findobj (hlgnd.children, "type", "text"), "color");
     if (iscell (textcolors))
       textcolors = cell2mat (textcolors);
       textcolors = unique (textcolors, "rows");
     endif
     if (rows (textcolors) > 1)
       ## Gnuplot is unable to assign arbitrary colors to each text entry
       ## for the key/legend.  But, the text color can be set to match the
       ## color of the plot object.
       colorspec = "textcolor variable";
     else
       colorspec = get_text_colorspec (textcolors, mono);
     endif
     fprintf (plot_stream, "set key %s %s;\nset key %s %s %s %s %s %s;\n",
-             inout, pos, box, reverse, horzvert, fontspec, colorspec,
+             inout, pos, box, reverse, horzvert, fontspacespec, colorspec,
              __do_enhanced_option__ (enhanced, hlgnd));
   else
     fputs (plot_stream, "unset key;\n");
   endif
   fputs (plot_stream, "set style data lines;\n");
 
   cmap = [cmap; addedcmap];
   cmap_sz = cmap_sz + rows (addedcmap);
@@ -1752,16 +1752,28 @@ function x = flip (x)
     x = fliplr (x);
   elseif (columns (x) == 1 || ischar (x))
     x = flipud (x);
   else
     x = flipud (fliplr (x));
   endif
 endfunction
 
+function spacing_spec = create_spacingspec(f, s, gp_term)
+  # The gnuplot default font size is 10, and default spacing is 1.25.
+  # gnuplot has a concept of a figure global font, and sizes everything
+  # appropriate to that, including the legend spacing.
+  #
+  # This means that if an alternative size is used, gnuplot will use an
+  # inappropriate spacing in the legend by default.
+  spc = s / 10 * 1.25;
+  spacing_spec = sprintf ("spacing %d", spc);
+
+endfunction
+
 function fontspec = create_fontspec (f, s, gp_term)
   if (strcmp (f, "*") || strcmp (gp_term, "tikz"))
     fontspec = sprintf ("font \",%d\"", s);
   else
     fontspec = sprintf ("font \"%s,%d\"", f, s);
   endif
 endfunction
 
