# HG changeset patch
# User Jason Riedy <jason@acm.org>
# Date 1236714251 14400
#      Tue Mar 10 15:44:11 2009 -0400
# Node ID 5bce1357edd605b7c273e52d106917a9419dacad
# Parent  d865363208d69c721c4b5e3812e215a865b21684
Fix conversion from PermMatrix to SparseMatrix.

From 76c98628f1943d583d5813321ec0a3c684d7ac84 Mon Sep 17 00:00:00 2001
Date: Tue, 10 Mar 2009 14:12:59 -0400
The result was transposed and missing its values.  Also add a test case.

Signed-off-by: Jason Riedy <jason@acm.org>
---
 liboctave/ChangeLog   |    6 ++++++
 liboctave/dSparse.cc  |    7 +++++--
 test/ChangeLog        |    4 ++++
 test/test_diag_perm.m |    9 +++++++++
 4 files changed, 24 insertions(+), 2 deletions(-)

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2009-03-10  Jason Riedy  <jason@acm.org>
+
+	* dSparse.cc (SparseMatrix::SparseMatrix (const PermMatrix&)):
+	Fix conversion to add values to the matrix as well as getting
+	structure correct.
+
 2009-03-10  John W. Eaton  <jwe@octave.org>
 
 	* Array.h, ArrayN.h, Bounds.h, CmplxAEPBAL.h, CmplxCHOL.h,
 	CmplxGEPBAL.h, CmplxHESS.h, CmplxQR.h, CmplxQRP.h, CmplxSCHUR.h,
 	CmplxSVD.h, CollocWt.h, EIG.h, FEGrid.h, LinConst.h, Range.h,
 	Sparse.h, SparseCmplxQR.h, SparseQR.h, dbleAEPBAL.h, dbleCHOL.h,
 	dbleGEPBAL.h, dbleHESS.h, dbleQR.h, dbleQRP.h, dbleSCHUR.h,
 	dbleSVD.h, dim-vector.h, fCmplxAEPBAL.h, fCmplxCHOL.h,
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -164,23 +164,26 @@ SparseMatrix::SparseMatrix (const PermMa
   octave_idx_type n = a.rows ();
   for (octave_idx_type i = 0; i <= n; i++) 
     cidx (i) = i;
   const Array<octave_idx_type> pv = a.pvec ();
 
   if (a.is_row_perm ())
     {
       for (octave_idx_type i = 0; i < n; i++)
-        ridx (i) = pv (i);
+        ridx (pv (i)) = i;
     }
   else
     {
       for (octave_idx_type i = 0; i < n; i++)
-        ridx (pv (i)) = i;
+        ridx (i) = pv (i);
     }
+
+  for (octave_idx_type i = 0; i < n; i++)
+    data (i) = 1.0;
 }
 
 bool
 SparseMatrix::operator == (const SparseMatrix& a) const
 {
   octave_idx_type nr = rows ();
   octave_idx_type nc = cols ();
   octave_idx_type nz = nnz ();
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2009-03-10  Jason Riedy  <jason@acm.org>
+
+	* test_diag_perm.m: Add a test for conversion to sparse form.
+
 2009-02-25  John W. Eaton  <jwe@octave.org>
 
 	* build_sparse_tests.sh: Note that saving sparse matrices to MAT
 	files fails when using 64-bit indexing.
 
 2009-02-22  John W. Eaton  <jwe@octave.org>
 
 	* build_sparse_tests.sh: Fix diag matrix divide by zero test.
diff --git a/test/test_diag_perm.m b/test/test_diag_perm.m
--- a/test/test_diag_perm.m
+++ b/test/test_diag_perm.m
@@ -64,16 +64,24 @@
 %! Pc = eye (n) (:, pc);
 %! pr = randperm (n);
 %! Pr = eye (n) (pr, :);
 %! A = rand (n);
 %! A(n, n-2) = NaN;
 %! A(3, 1) = Inf;
 %! assert (Pr * A * Pc, A(pr, pc));
 
+## conversion to sparse form
+%!test
+%! n = 7;
+%! P = eye (n) (:, randperm (n));
+%! sP = sparse (P);
+%! assert (full (sP), full (P));
+%! assert (size (find (sP), 1), n);
+
 ########################################
 ## Diagonal matrices
 
 ## square row scaling
 %!test
 %! m = 7;
 %! n = 11;
 %! A = rand (m, n);
