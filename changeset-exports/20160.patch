# HG changeset patch
# User Rik <rik@octave.org>
# Date 1430692583 25200
#      Sun May 03 15:36:23 2015 -0700
# Branch stable
# Node ID 03b9d17a2d95b008c87be2c8621eccd8bc69b077
# Parent  597991b19e40be63ae596f637a97d5c27ae98719
doc: Update more docstrings to have one sentence summary as first line.
Reviewed io, java, linear-algebra, prefs, and set script directories.

* scripts/io/beep.m, scripts/io/dlmwrite.m, scripts/io/importdata.m,
scripts/io/strread.m, scripts/io/textread.m, scripts/java/javaArray.m,
scripts/java/java_get.m, scripts/java/java_set.m, scripts/java/javaaddpath.m,
scripts/java/javachk.m, scripts/java/javaclasspath.m, scripts/java/javamem.m,
scripts/java/javarmpath.m, scripts/linear-algebra/bandwidth.m,
scripts/linear-algebra/commutation_matrix.m, scripts/linear-algebra/cond.m,
scripts/linear-algebra/condest.m, scripts/linear-algebra/cross.m,
scripts/linear-algebra/duplication_matrix.m, scripts/linear-algebra/expm.m,
scripts/linear-algebra/housh.m, scripts/linear-algebra/isdefinite.m,
scripts/linear-algebra/ishermitian.m, scripts/linear-algebra/issymmetric.m,
scripts/linear-algebra/istril.m, scripts/linear-algebra/istriu.m,
scripts/linear-algebra/krylov.m, scripts/linear-algebra/logm.m,
scripts/linear-algebra/normest.m, scripts/linear-algebra/null.m,
scripts/linear-algebra/onenormest.m, scripts/linear-algebra/orth.m,
scripts/linear-algebra/qzhess.m, scripts/linear-algebra/rank.m,
scripts/linear-algebra/rref.m, scripts/linear-algebra/vech.m,
scripts/path/matlabroot.m, scripts/prefs/addpref.m, scripts/prefs/getpref.m,
scripts/prefs/ispref.m, scripts/prefs/rmpref.m, scripts/prefs/setpref.m,
scripts/set/powerset.m, scripts/set/setdiff.m:
Update more docstrings to have one sentence summary as first line.

diff --git a/scripts/io/beep.m b/scripts/io/beep.m
--- a/scripts/io/beep.m
+++ b/scripts/io/beep.m
@@ -14,16 +14,20 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} beep ()
 ## Produce a beep from the speaker (or visual bell).
+##
+## This function sends the alarm character @qcode{"\a"} to the terminal.
+## Depending on the user's configuration this may produce an audible beep,
+## a visual bell, or nothing at all.
 ## @seealso{puts, fputs, printf, fprintf}
 ## @end deftypefn
 
 ## Author: jwe
 
 function beep ()
 
   if (nargin != 0)
diff --git a/scripts/io/dlmwrite.m b/scripts/io/dlmwrite.m
--- a/scripts/io/dlmwrite.m
+++ b/scripts/io/dlmwrite.m
@@ -21,55 +21,54 @@
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{M}, @var{delim}, @var{r}, @var{c})
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{M}, @var{key}, @var{val} @dots{})
 ## @deftypefnx {Function File} {} dlmwrite (@var{file}, @var{M}, "-append", @dots{})
 ## @deftypefnx {Function File} {} dlmwrite (@var{fid}, @dots{})
 ## Write the matrix @var{M} to the named file using delimiters.
 ##
 ## @var{file} should be a file name or writable file ID given by @code{fopen}.
 ##
-## The parameter @var{delim} specifies the delimiter to use to separate
-## values on a row.
+## The parameter @var{delim} specifies the delimiter to use to separate values
+## on a row.
 ##
-## The value of @var{r} specifies the number of delimiter-only lines to
-## add to the start of the file.
+## The value of @var{r} specifies the number of delimiter-only lines to add to
+## the start of the file.
 ##
-## The value of @var{c} specifies the number of delimiters to prepend to
-## each line of data.
+## The value of @var{c} specifies the number of delimiters to prepend to each
+## line of data.
 ##
-## If the argument @qcode{"-append"} is given, append to the end of
-## @var{file}.
+## If the argument @qcode{"-append"} is given, append to the end of @var{file}.
 ##
-## In addition, the following keyword value pairs may appear at the end
-## of the argument list:
+## In addition, the following keyword value pairs may appear at the end of
+## the argument list:
 ##
 ## @table @asis
 ## @item @qcode{"append"}
 ## Either @qcode{"on"} or @qcode{"off"}.  See @qcode{"-append"} above.
 ##
 ## @item @qcode{"delimiter"}
 ## See @var{delim} above.
 ##
 ## @item @qcode{"newline"}
-## The character(s) to use to separate each row.  Three special cases
-## exist for this option.  @qcode{"unix"} is changed into
+## The character(s) to use to separate each row.  Three special cases exist
+## for this option.  @qcode{"unix"} is changed into
 ## @qcode{"@xbackslashchar{}n"}, @qcode{"pc"} is changed into
-## @qcode{"@xbackslashchar{}r@xbackslashchar{}n"}, and @qcode{"mac"} is changed
-## into @qcode{"@xbackslashchar{}r"}.  Any other value is used directly as the
-## newline separator.
+## @qcode{"@xbackslashchar{}r@xbackslashchar{}n"}, and @qcode{"mac"} is
+## changed into @qcode{"@xbackslashchar{}r"}.  Any other value is used
+## directly as the newline separator.
 ##
 ## @item @qcode{"roffset"}
 ## See @var{r} above.
 ##
 ## @item @qcode{"coffset"}
 ## See @var{c} above.
 ##
 ## @item @qcode{"precision"}
-## The precision to use when writing the file.  It can either be a
-## format string (as used by fprintf) or a number of significant digits.
+## The precision to use when writing the file.  It can either be a format
+## string (as used by fprintf) or a number of significant digits.
 ## @end table
 ##
 ## @example
 ## dlmwrite ("file.csv", reshape (1:16, 4, 4));
 ## @end example
 ##
 ## @example
 ## dlmwrite ("file.tex", a, "delimiter", "&", "newline", "\n")
diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -39,18 +39,18 @@
 ## files)
 ## @end itemize
 ##
 ## Different file types are supported:
 ##
 ## @itemize
 ## @item ASCII table
 ##
-## Import ASCII table using the specified number of header rows and
-## the specified delimiter.
+## Import ASCII table using the specified number of header rows and the
+## specified delimiter.
 ##
 ## @item Image file
 ##
 ## @item @sc{matlab} file
 ##
 ## @item Spreadsheet files (depending on external software)
 ##
 ## @item WAV file
diff --git a/scripts/io/strread.m b/scripts/io/strread.m
--- a/scripts/io/strread.m
+++ b/scripts/io/strread.m
@@ -27,18 +27,17 @@
 ##
 ## The string @var{str} is split into words that are repeatedly matched to the
 ## specifiers in @var{format}.  The first word is matched to the first
 ## specifier, the second to the second specifier and so forth.  If there are
 ## more words than specifiers, the process is repeated until all words have
 ## been processed.
 ##
 ## The string @var{format} describes how the words in @var{str} should be
-## parsed.
-## It may contain any combination of the following specifiers:
+## parsed.  It may contain any combination of the following specifiers:
 ##
 ## @table @code
 ## @item %s
 ## The word is parsed as a string.
 ##
 ## @item  %f
 ## @itemx %n
 ## The word is parsed as a number and converted to double.
@@ -78,30 +77,30 @@
 ##
 ## @noindent
 ## can be read using
 ##
 ## @example
 ## [@var{a}, @var{b}, @var{c}] = strread (@var{str}, "%s %s %f");
 ## @end example
 ##
-## Optional numeric argument @var{format_repeat} can be used for
-## limiting the number of items read:
+## Optional numeric argument @var{format_repeat} can be used for limiting the
+## number of items read:
 ##
 ## @table @asis
 ## @item -1
 ## (default) read all of the string until the end.
 ##
 ## @item N
-## Read N times @var{nargout} items.  0 (zero) is an acceptable
-## value for @var{format_repeat}.
+## Read N times @var{nargout} items.  0 (zero) is an acceptable value for
+## @var{format_repeat}.
 ## @end table
 ##
-## The behavior of @code{strread} can be changed via property-value
-## pairs.  The following properties are recognized:
+## The behavior of @code{strread} can be changed via property-value pairs.  The
+## following properties are recognized:
 ##
 ## @table @asis
 ## @item @qcode{"commentstyle"}
 ## Parts of @var{str} are considered comments and will be skipped.
 ## @var{value} is the comment style and can be any of the following.
 ##
 ## @itemize
 ## @item @qcode{"shell"}
@@ -123,52 +122,55 @@
 ## @end itemize
 ##
 ## @item @qcode{"delimiter"}
 ## Any character in @var{value} will be used to split @var{str} into words
 ## (default value = any whitespace).
 ##
 ## @item @qcode{"emptyvalue"}:
 ## Value to return for empty numeric values in non-whitespace delimited data.
-## The default is NaN@.  When the data type does not support NaN
-## (int32 for example), then default is zero.
+## The default is NaN@.  When the data type does not support NaN (int32 for
+## example), then default is zero.
 ##
 ## @item @qcode{"multipledelimsasone"}
 ## Treat a series of consecutive delimiters, without whitespace in between,
 ## as a single delimiter.  Consecutive delimiter series need not be vertically
 ## @qcode{"aligned"}.
 ##
 ## @item @qcode{"treatasempty"}
 ## Treat single occurrences (surrounded by delimiters or whitespace) of the
 ## string(s) in @var{value} as missing values.
 ##
 ## @item @qcode{"returnonerror"}
 ## If @var{value} true (1, default), ignore read errors and return normally.
 ## If false (0), return an error.
 ##
 ## @item @qcode{"whitespace"}
-## Any character in @var{value} will be interpreted as whitespace and
-## trimmed; the string defining whitespace must be enclosed in double
-## quotes for proper processing of special characters like
-## @qcode{"@xbackslashchar{}t"}.  The default value for whitespace is
-## @qcode{" @xbackslashchar{}b@xbackslashchar{}r@xbackslashchar{}n@xbackslashchar{}t"}
-## (note the space).
-## Unless whitespace is set to '' (empty) AND at least one @qcode{"%s"} format
-## conversion specifier is supplied, a space is always part of whitespace.
+## Any character in @var{value} will be interpreted as whitespace and trimmed;
+## the string defining whitespace must be enclosed in double quotes for proper
+## processing of special characters like @qcode{"@xbackslashchar{}t"}.  The
+## default value for whitespace is
+## @c Note: the next line specifically has a newline which generates a space
+## @c       in the output of qcode, but keeps the next line < 80 characters. 
+## @qcode{"
+## @xbackslashchar{}b@xbackslashchar{}r@xbackslashchar{}n@xbackslashchar{}t"}
+## (note the space).  Unless whitespace is set to @qcode{""} (empty) AND at
+## least one @qcode{"%s"} format conversion specifier is supplied, a space is
+## always part of whitespace.
 ##
 ## @end table
 ##
-## When the number of words in @var{str} doesn't match an exact multiple
-## of the number of format conversion specifiers, strread's behavior
-## depends on the last character of @var{str}:
+## When the number of words in @var{str} doesn't match an exact multiple of
+## the number of format conversion specifiers, strread's behavior depends on
+## the last character of @var{str}:
 ##
 ## @table @asis
 ## @item last character = @qcode{"@xbackslashchar{}n"}
-## Data columns are padded with empty fields or Nan so that all columns
-## have equal length
+## Data columns are padded with empty fields or Nan so that all columns have
+## equal length
 ##
 ## @item last character is not @qcode{"@xbackslashchar{}n"}
 ## Data columns are not padded; strread returns columns of unequal length
 ##
 ## @end table
 ##
 ## @seealso{textscan, textread, load, dlmread, fscanf}
 ## @end deftypefn
diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -33,24 +33,24 @@
 ##
 ## @itemize
 ## @item @qcode{"headerlines"}:
 ## The first @var{value} number of lines of @var{filename} are skipped.
 ##
 ## @item @qcode{"endofline"}:
 ## Specify a single character or
 ## @qcode{"@xbackslashchar{}r@xbackslashchar{}n"}.  If no value is given, it
-## will be inferred from the file.  If set to "" (empty string) EOLs are
-## ignored as delimiters.
+## will be inferred from the file.  If set to @qcode{""} (empty string) EOLs
+## are ignored as delimiters.
 ## @end itemize
 ##
 ## The optional input @var{n} specifies the number of data lines to read; in
 ## this sense it differs slightly from the format repeat count in strread.
 ##
-## If the format string is empty (not: omitted) and the file contains only
+## If the format string is empty (not just omitted) and the file contains only
 ## numeric data (excluding headerlines), textread will return a rectangular
 ## matrix with the number of columns matching the number of numeric fields on
 ## the first data line of the file.  Empty fields are returned as zero values.
 ##
 ## @seealso{strread, load, dlmread, fscanf, textscan}
 ## @end deftypefn
 
 function varargout = textread (filename, format = "%f", varargin)
diff --git a/scripts/java/javaArray.m b/scripts/java/javaArray.m
--- a/scripts/java/javaArray.m
+++ b/scripts/java/javaArray.m
@@ -15,25 +15,25 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{jary} =} javaArray (@var{classname}, @var{sz})
 ## @deftypefnx {Function File} {@var{jary} =} javaArray (@var{classname}, @var{m}, @var{n}, @dots{})
 ##
-## Create a Java array of size @var{sz} with elements of class
-## @var{classname}.  @var{classname} may be a Java object representing a class
-## or a string containing the fully qualified class name.  The size of
-## the object may also be specified with individual integer arguments
-## @var{m}, @var{n}, etc.
+## Create a Java array of size @var{sz} with elements of class @var{classname}.
 ##
-## The generated array is uninitialized.  All elements are set to null
-## if @var{classname} is a reference type, or to a default value (usually 0)
-## if @var{classname} is a primitive type.
+## @var{classname} may be a Java object representing a class or a string
+## containing the fully qualified class name.  The size of the object may
+## also be specified with individual integer arguments @var{m}, @var{n}, etc.
+##
+## The generated array is uninitialized.  All elements are set to null if
+## @var{classname} is a reference type, or to a default value (usually 0) if
+## @var{classname} is a primitive type.
 ##
 ## Sample code:
 ##
 ## @example
 ## @group
 ## jary = javaArray ("java.lang.String", 2, 2);
 ## jary(1,1) = "Hello";
 ## @end group
diff --git a/scripts/java/java_get.m b/scripts/java/java_get.m
--- a/scripts/java/java_get.m
+++ b/scripts/java/java_get.m
@@ -13,22 +13,23 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{val} =} java_get (@var{obj}, @var{name})
-## Get the value of the field @var{name} of the Java object @var{obj}.  For
-## static fields, @var{obj} can be a string representing the fully qualified
-## name of the corresponding class.
+## Get the value of the field @var{name} of the Java object @var{obj}.
+##
+## For static fields, @var{obj} can be a string representing the fully
+## qualified name of the corresponding class.
 ##
 ## When @var{obj} is a regular Java object, structure-like indexing can be
-## used as a shortcut syntax.  For instance, the two following statements are
+## used as a shortcut syntax.  For instance, the following two statements are
 ## equivalent
 ##
 ## @example
 ## @group
 ##   java_get (x, "field1")
 ##   x.field1
 ## @end group
 ## @end example
diff --git a/scripts/java/java_set.m b/scripts/java/java_set.m
--- a/scripts/java/java_set.m
+++ b/scripts/java/java_set.m
@@ -14,21 +14,23 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{obj} =} java_set (@var{obj}, @var{name}, @var{val})
 ## Set the value of the field @var{name} of the Java object @var{obj} to
-## @var{val}.  For static fields, @var{obj} can be a string representing the
-## fully qualified named of the corresponding Java class.
+## @var{val}.
+##
+## For static fields, @var{obj} can be a string representing the fully
+## qualified named of the corresponding Java class.
 ##
 ## When @var{obj} is a regular Java object, structure-like indexing can be
-## used as a shortcut syntax.  For instance, the two following statements are
+## used as a shortcut syntax.  For instance, the following two statements are
 ## equivalent
 ##
 ## @example
 ## @group
 ##   java_set (x, "field1", val)
 ##   x.field1 = val
 ## @end group
 ## @end example
diff --git a/scripts/java/javaaddpath.m b/scripts/java/javaaddpath.m
--- a/scripts/java/javaaddpath.m
+++ b/scripts/java/javaaddpath.m
@@ -15,20 +15,21 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} javaaddpath (@var{clspath})
 ## @deftypefnx {Function File} {} javaaddpath (@var{clspath1}, @dots{})
-## Add @var{clspath} to the dynamic class path of the Java virtual
-## machine.  @var{clspath} may either be a directory where @file{.class}
-## files are found, or a @file{.jar} file containing Java classes.
-## Multiple paths may be added at once by specifying additional arguments.
+## Add @var{clspath} to the dynamic class path of the Java virtual machine.
+##
+## @var{clspath} may either be a directory where @file{.class} files are
+## found, or a @file{.jar} file containing Java classes.  Multiple paths may
+## be added at once by specifying additional arguments.
 ## @seealso{javarmpath, javaclasspath}
 ## @end deftypefn
 
 function javaaddpath (varargin)
 
   if (nargin < 1)
     print_usage ();
   endif
diff --git a/scripts/java/javachk.m b/scripts/java/javachk.m
--- a/scripts/java/javachk.m
+++ b/scripts/java/javachk.m
@@ -34,65 +34,63 @@
 ##
 ## @item @qcode{"jvm"}
 ## Java Virtual Machine.
 ##
 ## @item @qcode{"swing"}
 ## Swing components for lightweight GUIs.
 ## @end table
 ##
-## If @var{feature} is supported and:
+## If @var{feature} is supported and
 ##
 ## @itemize @bullet
 ## @item
-## No output argument is requested:
+## no output argument is requested:
 ##
 ## Return an empty string
 ##
 ## @item
-## An output argument is requested:
+## an output argument is requested:
 ##
 ## Return a struct with fields @qcode{"feature"} and @qcode{"identifier"}
 ## both empty
-##
 ## @end itemize
 ##
-## If @var{feature} is not supported and:
+## If @var{feature} is not supported and
 ##
 ## @itemize @bullet
 ## @item
-## No output argument is requested:
+## no output argument is requested:
 ##
-## Emit an error message.
+## Emit an error message
 ##
 ## @item
-## An output argument is requested:
+## an output argument is requested:
 ##
-## Return a struct with field @qcode{"feature"} set to @var{feature} and
-## field @qcode{"identifier"} set to @var{component}
-##
+## Return a struct with field @qcode{"feature"} set to @var{feature} and field
+## @qcode{"identifier"} set to @var{component}
 ## @end itemize
 ##
 ## The optional input @var{component} will be used in place of @var{feature}
 ## in any error messages for greater specificity.
 ##
 ## @code{javachk} determines if specific Java features are available in an
 ## Octave session.  This function is provided for scripts which may alter
 ## their behavior based on the availability of Java.  The feature
 ## @qcode{"desktop"} is never available as Octave has no Java-based desktop.
 ## Other features may be available if Octave was compiled with the Java
 ## Interface and Java is installed.
 ##
-## @seealso{error, usejava}
+## @seealso{usejava, error}
 ## @end deftypefn
 
 ## Author: Philip Nienhuis <prnienhuis at users.sf.net>
 ## Created: 2014-04-19
 
-function msg = javachk (feature, component="")
+function msg = javachk (feature, component = "")
 
   msg = "";
   chk = false;
   switch (feature)
     ## For each feature, try methods() on a Java class of a feature
     case "awt"
       try
         dum = methods ("java.awt.Frame");
diff --git a/scripts/java/javaclasspath.m b/scripts/java/javaclasspath.m
--- a/scripts/java/javaclasspath.m
+++ b/scripts/java/javaclasspath.m
@@ -26,22 +26,22 @@
 ## array of strings.
 ##
 ## If called with no inputs:
 ##
 ## @itemize
 ## @item If no output is requested, the dynamic and static classpaths are
 ## printed to the standard output.
 ##
-## @item If one output value @var{dpath} is requested, the result is
-## the dynamic classpath.
+## @item If one output value @var{dpath} is requested, the result is the
+## dynamic classpath.
 ##
-## @item If two output values@var{dpath} and @var{spath} are
-## requested, the first variable will contain the dynamic classpath and
-## the second will be contain the static classpath.
+## @item If two output values@var{dpath} and @var{spath} are requested, the
+## first variable will contain the dynamic classpath and the second will
+## contain the static classpath.
 ## @end itemize
 ##
 ## If called with a single input parameter @var{what}:
 ##
 ## @table @asis
 ## @item @qcode{"-dynamic"}
 ## Return the dynamic classpath.
 ##
diff --git a/scripts/java/javamem.m b/scripts/java/javamem.m
--- a/scripts/java/javamem.m
+++ b/scripts/java/javamem.m
@@ -14,54 +14,51 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} javamem ()
 ## @deftypefnx {Function File} {@var{jmem} =} javamem ()
-## Show the current memory usage of the Java virtual machine (JVM)
-## and run the garbage collector.
+## Show the current memory usage of the Java virtual machine (JVM) and run the
+## garbage collector.
 ##
 ## When no return argument is given the info is printed to the screen.
-## Otherwise, the output cell array @var{jmem} contains Maximum, Total,
-## and Free memory (in bytes).
+## Otherwise, the output cell array @var{jmem} contains Maximum, Total, and
+## Free memory (in bytes).
 ##
-## All Java-based routines are run in the JVM's shared memory pool,
-## a dedicated and separate part of memory claimed by the JVM from
-## your computer's total memory (which comprises physical RAM and
-## virtual memory / swap space on hard disk).
+## All Java-based routines are run in the JVM's shared memory pool, a
+## dedicated and separate part of memory claimed by the JVM from your
+## computer's total memory (which comprises physical RAM and virtual memory /
+## swap space on hard disk).
 ##
 ## The maximum allowable memory usage can be configured using the file
-## @file{java.opts}.  The directory where this file resides is
-## determined by the environment variable @w{@env{OCTAVE_JAVA_DIR}}.
-## If unset, the directory where @file{javaaddpath.m} resides is used instead
-## (typically
+## @file{java.opts}.  The directory where this file resides is determined by
+## the environment variable @w{@env{OCTAVE_JAVA_DIR}}.  If unset, the directory
+## where @file{javaaddpath.m} resides is used instead (typically
 ## @file{@w{@env{OCTAVE_HOME}}/share/octave/@w{@env{OCTAVE_VERSION}}/m/java/}).
 ##
-## @file{java.opts} is a plain text file with one option per line.  The
-## default initial memory size and default maximum memory size (which
-## are both system dependent) can be overridden like so:
+## @file{java.opts} is a plain text file with one option per line.  The default
+## initial memory size and default maximum memory size (which are both system
+## dependent) can be overridden like so:
 ##
 ## @nospell{-Xms64m}
 ##
 ## @nospell{-Xmx512m}
 ##
 ## (in megabytes in this example).
-## You can adapt these values to your own requirements if your system
-## has limited available physical memory or if you get Java memory
-## errors.
+## You can adapt these values to your own requirements if your system has
+## limited available physical memory or if you get Java memory errors.
 ##
-## "Total memory" is what the operating system has currently assigned
-## to the JVM and depends on actual and active memory usage.
-## "Free memory" is self-explanatory.  During operation of Java-based
-## Octave functions the amount of Total and Free memory will vary,
-## due to Java's own cleaning up and your operating system's memory
-## management.
+## @qcode{"Total memory"} is what the operating system has currently assigned
+## to the JVM and depends on actual and active memory usage.  
+## @qcode{"Free memory"} is self-explanatory.  During operation of Java-based
+## Octave functions the amount of Total and Free memory will vary, due to
+## Java's own cleaning up and your operating system's memory management.
 ## @end deftypefn
 
 ## Author: Philip Nienhuis
 ## Created: 2010-03-25
 ## Updates:
 ## 2010-03-26 Changed name to javamem & indentation to double spaces
 ## 2010-08-25 Corrected text on java memory assignments
 ## 2010-09-05 Further overhauled help text
diff --git a/scripts/java/javarmpath.m b/scripts/java/javarmpath.m
--- a/scripts/java/javarmpath.m
+++ b/scripts/java/javarmpath.m
@@ -16,19 +16,21 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} javarmpath (@var{clspath})
 ## @deftypefnx {Function File} {} javarmpath (@var{clspath1}, @dots{})
 ## Remove @var{clspath} from the dynamic class path of the Java virtual
-## machine.  @var{clspath} may either be a directory where @file{.class}
-## files are found, or a @file{.jar} file containing Java classes.
-## Multiple paths may be removed at once by specifying additional arguments.
+## machine.
+##
+## @var{clspath} may either be a directory where @file{.class} files are found,
+## or a @file{.jar} file containing Java classes.  Multiple paths may be
+## removed at once by specifying additional arguments.
 ## @seealso{javaaddpath, javaclasspath}
 ## @end deftypefn
 
 function javarmpath (varargin)
 
   if (nargin < 1)
     print_usage ();
   endif
diff --git a/scripts/linear-algebra/bandwidth.m b/scripts/linear-algebra/bandwidth.m
--- a/scripts/linear-algebra/bandwidth.m
+++ b/scripts/linear-algebra/bandwidth.m
@@ -17,19 +17,18 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{bw} =} bandwidth (@var{A}, @var{type})
 ## @deftypefnx {Function File} {[@var{lower}, @var{upper}] =} bandwidth (@var{A})
 ## Compute the bandwidth of @var{A}.
 ##
 ## The @var{type} argument is the string @qcode{"lower"} for the lower
-## bandwidth and @qcode{"upper"} for the upper bandwidth.
-## If no @var{type} is specified return both the lower and upper bandwidth
-## of @var{A}.
+## bandwidth and @qcode{"upper"} for the upper bandwidth.  If no @var{type} is
+## specified return both the lower and upper bandwidth of @var{A}.
 ##
 ## The lower/upper bandwidth of a matrix is the number of
 ## subdiagonals/superdiagonals with nonzero entries.
 ##
 ## @seealso{isbanded, isdiag, istril, istriu}
 ## @end deftypefn
 
 ## Author: Massimiliano Fasi
diff --git a/scripts/linear-algebra/commutation_matrix.m b/scripts/linear-algebra/commutation_matrix.m
--- a/scripts/linear-algebra/commutation_matrix.m
+++ b/scripts/linear-algebra/commutation_matrix.m
@@ -18,55 +18,55 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} commutation_matrix (@var{m}, @var{n})
 ## Return the commutation matrix
 ## @tex
 ##  $K_{m,n}$
 ## @end tex
 ## @ifnottex
-##  K(m,n)
+## K(m,n)
 ## @end ifnottex
-##  which is the unique
+## which is the unique
 ## @tex
 ##  $m n \times m n$
 ## @end tex
 ## @ifnottex
-##  @var{m}*@var{n} by @var{m}*@var{n}
+## @var{m}*@var{n} by @var{m}*@var{n}
 ## @end ifnottex
-##  matrix such that
+## matrix such that
 ## @tex
 ##  $K_{m,n} \cdot {\rm vec} (A) = {\rm vec} (A^T)$
 ## @end tex
 ## @ifnottex
-##  @math{K(m,n) * vec(A) = vec(A')}
+## @math{K(m,n) * vec(A) = vec(A')}
 ## @end ifnottex
-##  for all
+## for all
 ## @tex
 ##  $m\times n$
 ## @end tex
 ## @ifnottex
-##  @math{m} by @math{n}
+## @math{m} by @math{n}
 ## @end ifnottex
-##  matrices
+## matrices
 ## @tex
 ##  $A$.
 ## @end tex
 ## @ifnottex
-##  @math{A}.
+## @math{A}.
 ## @end ifnottex
 ##
 ## If only one argument @var{m} is given,
 ## @tex
 ##  $K_{m,m}$
 ## @end tex
 ## @ifnottex
-##  @math{K(m,m)}
+## @math{K(m,m)}
 ## @end ifnottex
-##  is returned.
+## is returned.
 ##
 ## See @nospell{Magnus and Neudecker} (1988), @cite{Matrix Differential
 ## Calculus with Applications in Statistics and Econometrics.}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
 ## Adapted-By: jwe
diff --git a/scripts/linear-algebra/cond.m b/scripts/linear-algebra/cond.m
--- a/scripts/linear-algebra/cond.m
+++ b/scripts/linear-algebra/cond.m
@@ -26,18 +26,18 @@
 ## $ {\parallel A \parallel_p * \parallel A^{-1} \parallel_p .} $
 ## @end tex
 ## @ifnottex
 ## @code{norm (@var{A}, @var{p}) * norm (inv (@var{A}), @var{p})}.
 ## @end ifnottex
 ##
 ## By default, @code{@var{p} = 2} is used which implies a (relatively slow)
 ## singular value decomposition.  Other possible selections are
-## @code{@var{p} = 1, Inf, "fro"} which are generally faster.  See
-## @code{norm} for a full discussion of possible @var{p} values.
+## @code{@var{p} = 1, Inf, "fro"} which are generally faster.  See @code{norm}
+## for a full discussion of possible @var{p} values.
 ##
 ## The condition number of a matrix quantifies the sensitivity of the matrix
 ## inversion operation when small changes are made to matrix elements.  Ideally
 ## the condition number will be close to 1.  When the number is large this
 ## indicates small changes (such as underflow or round-off error) will produce
 ## large changes in the resulting output.  In such cases the solution results
 ## from numerical computing are not likely to be accurate.
 ## @seealso{condest, rcond, norm, svd}
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -18,18 +18,19 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} condest (@var{A})
 ## @deftypefnx {Function File} {} condest (@var{A}, @var{t})
 ## @deftypefnx {Function File} {[@var{est}, @var{v}] =} condest (@dots{})
 ## @deftypefnx {Function File} {[@var{est}, @var{v}] =} condest (@var{A}, @var{solve}, @var{solve_t}, @var{t})
 ## @deftypefnx {Function File} {[@var{est}, @var{v}] =} condest (@var{apply}, @var{apply_t}, @var{solve}, @var{solve_t}, @var{n}, @var{t})
 ##
-## Estimate the 1-norm condition number of a matrix @var{A}
-## using @var{t} test vectors using a randomized 1-norm estimator.
+## Estimate the 1-norm condition number of a matrix @var{A} using @var{t} test
+## vectors using a randomized 1-norm estimator.
+##
 ## If @var{t} exceeds 5, then only 5 test vectors are used.
 ##
 ## If the matrix is not explicit, e.g., when estimating the condition
 ## number of @var{A} given an LU@tie{}factorization, @code{condest} uses the
 ## following functions:
 ##
 ## @table @var
 ## @item apply
@@ -42,21 +43,20 @@
 ## @code{A \ b} for a matrix @code{b} of size @var{n} by @var{t}.
 ##
 ## @item solve_t
 ## @code{A' \ b} for a matrix @code{b} of size @var{n} by @var{t}.
 ## @end table
 ##
 ## The implicit version requires an explicit dimension @var{n}.
 ##
-## @code{condest} uses a randomized algorithm to approximate
-## the 1-norms.
+## @code{condest} uses a randomized algorithm to approximate the 1-norms.
 ##
-## @code{condest} returns the 1-norm condition estimate @var{est} and
-## a vector @var{v} satisfying @code{norm (A*v, 1) == norm (A, 1) * norm
+## @code{condest} returns the 1-norm condition estimate @var{est} and a vector
+## @var{v} satisfying @code{norm (A*v, 1) == norm (A, 1) * norm
 ## (@var{v}, 1) / @var{est}}.  When @var{est} is large, @var{v} is an
 ## approximate null vector.
 ##
 ## References:
 ##
 ## @itemize
 ## @item
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
diff --git a/scripts/linear-algebra/cross.m b/scripts/linear-algebra/cross.m
--- a/scripts/linear-algebra/cross.m
+++ b/scripts/linear-algebra/cross.m
@@ -14,30 +14,34 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} cross (@var{x}, @var{y})
 ## @deftypefnx {Function File} {} cross (@var{x}, @var{y}, @var{dim})
-## Compute the vector cross product of two 3-dimensional vectors
-## @var{x} and @var{y}.
+## Compute the vector cross product of two 3-dimensional vectors @var{x} and
+## @var{y}.
+##
+## If @var{x} and @var{y} are matrices, the cross product is applied along the
+## first dimension with three elements.
+##
+## The optional argument  @var{dim} forces the cross product to be calculated
+## along the specified dimension.
+##
+## Example Code:
 ##
 ## @example
 ## @group
 ## cross ([1,1,0], [0,1,1])
 ##      @result{} [ 1; -1; 1 ]
 ## @end group
 ## @end example
 ##
-## If @var{x} and @var{y} are matrices, the cross product is applied
-## along the first dimension with 3 elements.  The optional argument
-## @var{dim} forces the cross product to be calculated along
-## the specified dimension.
 ## @seealso{dot, curl, divergence}
 ## @end deftypefn
 
 ## Author: Kurt Hornik <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 15 October 1994
 ## Adapted-By: jwe
 
 function z = cross (x, y, dim)
diff --git a/scripts/linear-algebra/duplication_matrix.m b/scripts/linear-algebra/duplication_matrix.m
--- a/scripts/linear-algebra/duplication_matrix.m
+++ b/scripts/linear-algebra/duplication_matrix.m
@@ -18,45 +18,45 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} duplication_matrix (@var{n})
 ## Return the duplication matrix
 ## @tex
 ##  $D_n$
 ## @end tex
 ## @ifnottex
-##  @nospell{@math{Dn}}
+## @nospell{@math{Dn}}
 ## @end ifnottex
-##  which is the unique
+## which is the unique
 ## @tex
 ##  $n^2 \times n(n+1)/2$
 ## @end tex
 ## @ifnottex
-##  @math{n^2} by @math{n*(n+1)/2}
+## @math{n^2} by @math{n*(n+1)/2}
 ## @end ifnottex
-##  matrix such that
+## matrix such that
 ## @tex
 ##  $D_n * {\rm vech} (A) = {\rm vec} (A)$
 ## @end tex
 ## @ifnottex
-##  @nospell{@math{Dn vech (A) = vec (A)}}
+## @nospell{@math{Dn vech (A) = vec (A)}}
 ## @end ifnottex
-##  for all symmetric
+## for all symmetric
 ## @tex
 ##  $n \times n$
 ## @end tex
 ## @ifnottex
-##  @math{n} by @math{n}
+## @math{n} by @math{n}
 ## @end ifnottex
-##  matrices
+## matrices
 ## @tex
 ##  $A$.
 ## @end tex
 ## @ifnottex
-##  @math{A}.
+## @math{A}.
 ## @end ifnottex
 ##
 ## See @nospell{Magnus and Neudecker} (1988), @cite{Matrix Differential
 ## Calculus with Applications in Statistics and Econometrics.}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
diff --git a/scripts/linear-algebra/expm.m b/scripts/linear-algebra/expm.m
--- a/scripts/linear-algebra/expm.m
+++ b/scripts/linear-algebra/expm.m
@@ -13,31 +13,32 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} expm (@var{A})
-## Return the exponential of a matrix, defined as the infinite Taylor
-## series
+## Return the exponential of a matrix.
+##
+## The matrix exponential is defined as the infinite Taylor series
 ## @tex
 ## $$
 ##  \exp (A) = I + A + {A^2 \over 2!} + {A^3 \over 3!} + \cdots
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## expm (A) = I + A + A^2/2! + A^3/3! + @dots{}
 ## @end example
 ##
 ## @end ifnottex
-## The Taylor series is @emph{not} the way to compute the matrix
+## However, the Taylor series is @emph{not} the way to compute the matrix
 ## exponential; see @nospell{Moler and Van Loan}, @cite{Nineteen Dubious Ways
 ## to Compute the Exponential of a Matrix}, SIAM Review, 1978.  This routine
 ## uses Ward's diagonal Pad@'e approximation method with three step
 ## preconditioning (SIAM Journal on Numerical Analysis, 1977).  Diagonal
 ## Pad@'e approximations are rational polynomials of matrices
 ## @tex
 ## $D_q(A)^{-1}N_q(A)$
 ## @end tex
diff --git a/scripts/linear-algebra/housh.m b/scripts/linear-algebra/housh.m
--- a/scripts/linear-algebra/housh.m
+++ b/scripts/linear-algebra/housh.m
@@ -13,18 +13,18 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{housv}, @var{beta}, @var{zer}] =} housh (@var{x}, @var{j}, @var{z})
-## Compute Householder reflection vector @var{housv} to reflect @var{x}
-## to be the j-th column of identity, i.e.,
+## Compute Householder reflection vector @var{housv} to reflect @var{x} to be
+## the j-th column of identity, i.e.,
 ##
 ## @example
 ## @group
 ## (I - beta*housv*housv')x =  norm (x)*e(j) if x(j) < 0,
 ## (I - beta*housv*housv')x = -norm (x)*e(j) if x(j) >= 0
 ## @end group
 ## @end example
 ##
diff --git a/scripts/linear-algebra/isdefinite.m b/scripts/linear-algebra/isdefinite.m
--- a/scripts/linear-algebra/isdefinite.m
+++ b/scripts/linear-algebra/isdefinite.m
@@ -16,18 +16,19 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} isdefinite (@var{A})
 ## @deftypefnx {Function File} {} isdefinite (@var{A}, @var{tol})
 ## Return 1 if @var{A} is symmetric positive definite within the
 ## tolerance specified by @var{tol} or 0 if @var{A} is symmetric
-## positive semidefinite.  Otherwise, return -1.  If @var{tol}
-## is omitted, use a tolerance of
+## positive semidefinite.  Otherwise, return -1.
+##
+## If @var{tol} is omitted, use a tolerance of
 ## @code{100 * eps * norm (@var{A}, "fro")}
 ## @seealso{issymmetric, ishermitian}
 ## @end deftypefn
 
 ## Author: Gabriele Pannocchia <g.pannocchia@ing.unipi.it>
 ## Created: November 2003
 ## Adapted-By: jwe
 
diff --git a/scripts/linear-algebra/ishermitian.m b/scripts/linear-algebra/ishermitian.m
--- a/scripts/linear-algebra/ishermitian.m
+++ b/scripts/linear-algebra/ishermitian.m
@@ -19,16 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} ishermitian (@var{A})
 ## @deftypefnx {Function File} {} ishermitian (@var{A}, @var{tol})
 ## Return true if @var{A} is Hermitian within the tolerance specified by
 ## @var{tol}.
 ##
 ## The default tolerance is zero (uses faster code).
+##
 ## Matrix @var{A} is considered symmetric if
 ## @code{norm (@var{A} - @var{A}', Inf) / norm (@var{A}, Inf) < @var{tol}}.
 ## @seealso{issymmetric, isdefinite}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
diff --git a/scripts/linear-algebra/issymmetric.m b/scripts/linear-algebra/issymmetric.m
--- a/scripts/linear-algebra/issymmetric.m
+++ b/scripts/linear-algebra/issymmetric.m
@@ -19,16 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} issymmetric (@var{A})
 ## @deftypefnx {Function File} {} issymmetric (@var{A}, @var{tol})
 ## Return true if @var{A} is a symmetric matrix within the tolerance specified
 ## by @var{tol}.
 ##
 ## The default tolerance is zero (uses faster code).
+##
 ## Matrix @var{A} is considered symmetric if
 ## @code{norm (@var{A} - @var{A}.', Inf) / norm (@var{A}, Inf) < @var{tol}}.
 ## @seealso{ishermitian, isdefinite}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
diff --git a/scripts/linear-algebra/istril.m b/scripts/linear-algebra/istril.m
--- a/scripts/linear-algebra/istril.m
+++ b/scripts/linear-algebra/istril.m
@@ -15,18 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} istril (@var{A})
 ## Return true if @var{A} is a lower triangular matrix.
 ##
-## A lower triangular matrix has nonzero entries only on the main diagonal
-## and below.
+## A lower triangular matrix has nonzero entries only on the main diagonal and
+## below.
 ## @seealso{istriu, isbanded, isdiag, tril, bandwidth}
 ## @end deftypefn
 
 ## Author: Massimiliano Fasi
 
 function retval = istril (A)
 
   if (nargin != 1)
diff --git a/scripts/linear-algebra/istriu.m b/scripts/linear-algebra/istriu.m
--- a/scripts/linear-algebra/istriu.m
+++ b/scripts/linear-algebra/istriu.m
@@ -15,18 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} istriu (@var{A})
 ## Return true if @var{A} is an upper triangular matrix.
 ##
-## An upper triangular matrix has nonzero entries only on the main diagonal
-## and above.
+## An upper triangular matrix has nonzero entries only on the main diagonal and
+## above.
 ## @seealso{isdiag, isbanded, istril, triu, bandwidth}
 ## @end deftypefn
 
 ## Author: Massimiliano Fasi
 
 function retval = istriu (A)
 
   if (nargin != 1)
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -20,39 +20,38 @@
 ## @deftypefn {Function File} {[@var{u}, @var{h}, @var{nu}] =} krylov (@var{A}, @var{V}, @var{k}, @var{eps1}, @var{pflg})
 ## Construct an orthogonal basis @var{u} of block Krylov subspace
 ##
 ## @example
 ## [v a*v a^2*v @dots{} a^(k+1)*v]
 ## @end example
 ##
 ## @noindent
-## Using Householder reflections to guard against loss of orthogonality.
+## using Householder reflections to guard against loss of orthogonality.
 ##
 ## If @var{V} is a vector, then @var{h} contains the Hessenberg matrix
-## such that @nospell{@tcode{a*u == u*h+rk*ek'}}, in which @code{rk =
-## a*u(:,k)-u*h(:,k)}, and @nospell{@tcode{ek'}} is the vector
+## such that @nospell{@tcode{a*u == u*h+rk*ek'}}, in which
+## @code{rk = a*u(:,k)-u*h(:,k)}, and @nospell{@tcode{ek'}} is the vector
 ## @code{[0, 0, @dots{}, 1]} of length @code{k}.  Otherwise, @var{h} is
 ## meaningless.
 ##
-## If @var{V} is a vector and @var{k} is greater than
-## @code{length (A) - 1}, then @var{h} contains the Hessenberg matrix such
-## that @code{a*u == u*h}.
+## If @var{V} is a vector and @var{k} is greater than @code{length (A) - 1},
+## then @var{h} contains the Hessenberg matrix such that @code{a*u == u*h}.
 ##
-## The value of @var{nu} is the dimension of the span of the Krylov
-## subspace (based on @var{eps1}).
+## The value of @var{nu} is the dimension of the span of the Krylov subspace
+## (based on @var{eps1}).
 ##
-## If @var{b} is a vector and @var{k} is greater than @var{m-1}, then
-## @var{h} contains the Hessenberg decomposition of @var{A}.
+## If @var{b} is a vector and @var{k} is greater than @var{m-1}, then @var{h}
+## contains the Hessenberg decomposition of @var{A}.
 ##
-## The optional parameter @var{eps1} is the threshold for zero.  The
-## default value is 1e-12.
+## The optional parameter @var{eps1} is the threshold for zero.  The default
+## value is 1e-12.
 ##
-## If the optional parameter @var{pflg} is nonzero, row pivoting is used
-## to improve numerical behavior.  The default value is 0.
+## If the optional parameter @var{pflg} is nonzero, row pivoting is used to
+## improve numerical behavior.  The default value is 0.
 ##
 ## Reference: @nospell{A. Hodel, P. Misra}, @cite{Partial Pivoting in the
 ## Computation of Krylov Subspaces of Large Sparse Systems}, Proceedings of
 ## the 42nd IEEE Conference on Decision and Control, December 2003.
 ## @end deftypefn
 
 ## Author: A. Scottedward Hodel <a.s.hodel@eng.auburn.edu>
 
diff --git a/scripts/linear-algebra/logm.m b/scripts/linear-algebra/logm.m
--- a/scripts/linear-algebra/logm.m
+++ b/scripts/linear-algebra/logm.m
@@ -17,26 +17,29 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{s} =} logm (@var{A})
 ## @deftypefnx {Function File} {@var{s} =} logm (@var{A}, @var{opt_iters})
 ## @deftypefnx {Function File} {[@var{s}, @var{iters}] =} logm (@dots{})
-## Compute the matrix logarithm of the square matrix @var{A}.  The
-## implementation utilizes a Pad@'e approximant and the identity
+## Compute the matrix logarithm of the square matrix @var{A}.
+##
+## The implementation utilizes a Pad@'e approximant and the identity
 ##
 ## @example
 ## logm (@var{A}) = 2^k * logm (@var{A}^(1 / 2^k))
 ## @end example
 ##
-## The optional argument @var{opt_iters} is the maximum number of square roots
-## to compute and defaults to 100.  The optional output @var{iters} is the
-## number of square roots actually computed.
+## The optional input @var{opt_iters} is the maximum number of square roots
+## to compute and defaults to 100.
+##
+## The optional output @var{iters} is the number of square roots actually
+## computed.
 ## @seealso{expm, sqrtm}
 ## @end deftypefn
 
 ## Reference: N. J. Higham, Functions of Matrices: Theory and Computation
 ##            (SIAM, 2008.)
 ##
 
 ## Author: N. J. Higham
diff --git a/scripts/linear-algebra/normest.m b/scripts/linear-algebra/normest.m
--- a/scripts/linear-algebra/normest.m
+++ b/scripts/linear-algebra/normest.m
@@ -16,23 +16,26 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{n} =} normest (@var{A})
 ## @deftypefnx {Function File} {@var{n} =} normest (@var{A}, @var{tol})
 ## @deftypefnx {Function File} {[@var{n}, @var{c}] =} normest (@dots{})
-## Estimate the 2-norm of the matrix @var{A} using a power series
-## analysis.  This is typically used for large matrices, where the cost
-## of calculating @code{norm (@var{A})} is prohibitive and an approximation
-## to the 2-norm is acceptable.
+## Estimate the 2-norm of the matrix @var{A} using a power series analysis.
+##
+## This is typically used for large matrices, where the cost of calculating
+## @code{norm (@var{A})} is prohibitive and an approximation to the 2-norm is
+## acceptable.
 ##
 ## @var{tol} is the tolerance to which the 2-norm is calculated.  By default
-## @var{tol} is 1e-6.  @var{c} returns the number of iterations needed for
+## @var{tol} is 1e-6.
+##
+## The optional output @var{c} returns the number of iterations needed for
 ## @code{normest} to converge.
 ## @end deftypefn
 
 function [n, c] = normest (A, tol = 1e-6)
 
   if (nargin != 1 && nargin != 2)
     print_usage ();
   endif
diff --git a/scripts/linear-algebra/null.m b/scripts/linear-algebra/null.m
--- a/scripts/linear-algebra/null.m
+++ b/scripts/linear-algebra/null.m
@@ -16,19 +16,19 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} null (@var{A})
 ## @deftypefnx {Function File} {} null (@var{A}, @var{tol})
 ## Return an orthonormal basis of the null space of @var{A}.
 ##
-## The dimension of the null space is taken as the number of singular
-## values of @var{A} not greater than @var{tol}.  If the argument @var{tol}
-## is missing, it is computed as
+## The dimension of the null space is taken as the number of singular values of
+## @var{A} not greater than @var{tol}.  If the argument @var{tol} is missing,
+## it is computed as
 ##
 ## @example
 ## max (size (@var{A})) * max (svd (@var{A})) * eps
 ## @end example
 ## @seealso{orth}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
diff --git a/scripts/linear-algebra/onenormest.m b/scripts/linear-algebra/onenormest.m
--- a/scripts/linear-algebra/onenormest.m
+++ b/scripts/linear-algebra/onenormest.m
@@ -16,31 +16,31 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{est}, @var{v}, @var{w}, @var{iter}] =} onenormest (@var{A}, @var{t})
 ## @deftypefnx {Function File} {[@var{est}, @var{v}, @var{w}, @var{iter}] =} onenormest (@var{apply}, @var{apply_t}, @var{n}, @var{t})
 ##
 ## Apply @nospell{Higham and Tisseur's} randomized block 1-norm estimator to
-## matrix @var{A} using @var{t} test vectors.  If @var{t} exceeds 5, then
-## only 5 test vectors are used.
+## matrix @var{A} using @var{t} test vectors.
+##
+## If @var{t} exceeds 5, then only 5 test vectors are used.
 ##
 ## If the matrix is not explicit, e.g., when estimating the norm of
 ## @code{inv (@var{A})} given an LU@tie{}factorization, @code{onenormest}
 ## applies @var{A} and its conjugate transpose through a pair of functions
 ## @var{apply} and @var{apply_t}, respectively, to a dense matrix of size
 ## @var{n} by @var{t}.  The implicit version requires an explicit dimension
 ## @var{n}.
 ##
-## Returns the norm estimate @var{est}, two vectors @var{v} and
-## @var{w} related by norm
-## @code{(@var{w}, 1) = @var{est} * norm (@var{v}, 1)},
-## and the number of iterations @var{iter}.  The number of
-## iterations is limited to 10 and is at least 2.
+## Returns the norm estimate @var{est}, two vectors @var{v} and @var{w} related
+## by norm @code{(@var{w}, 1) = @var{est} * norm (@var{v}, 1)}, and the number
+## of iterations @var{iter}.  The number of iterations is limited to 10 and is
+## at least 2.
 ##
 ## References:
 ##
 ## @itemize
 ## @item
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
diff --git a/scripts/linear-algebra/orth.m b/scripts/linear-algebra/orth.m
--- a/scripts/linear-algebra/orth.m
+++ b/scripts/linear-algebra/orth.m
@@ -16,19 +16,19 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} orth (@var{A})
 ## @deftypefnx {Function File} {} orth (@var{A}, @var{tol})
 ## Return an orthonormal basis of the range space of @var{A}.
 ##
-## The dimension of the range space is taken as the number of singular
-## values of @var{A} greater than @var{tol}.  If the argument @var{tol} is
-## missing, it is computed as
+## The dimension of the range space is taken as the number of singular values
+## of @var{A} greater than @var{tol}.  If the argument @var{tol} is missing, it
+## is computed as
 ##
 ## @example
 ## max (size (@var{A})) * max (svd (@var{A})) * eps
 ## @end example
 ## @seealso{null}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
diff --git a/scripts/linear-algebra/qzhess.m b/scripts/linear-algebra/qzhess.m
--- a/scripts/linear-algebra/qzhess.m
+++ b/scripts/linear-algebra/qzhess.m
@@ -17,17 +17,19 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{aa}, @var{bb}, @var{q}, @var{z}] =} qzhess (@var{A}, @var{B})
 ## Compute the Hessenberg-triangular decomposition of the matrix pencil
 ## @code{(@var{A}, @var{B})}, returning
 ## @code{@var{aa} = @var{q} * @var{A} * @var{z}},
 ## @code{@var{bb} = @var{q} * @var{B} * @var{z}}, with @var{q} and @var{z}
-## orthogonal.  For example:
+## orthogonal.
+##
+## For example:
 ##
 ## @example
 ## @group
 ## [aa, bb, q, z] = qzhess ([1, 2; 3, 4], [5, 6; 7, 8])
 ##      @result{} aa = [ -3.02244, -4.41741;  0.92998,  0.69749 ]
 ##      @result{} bb = [ -8.60233, -9.99730;  0.00000, -0.23250 ]
 ##      @result{}  q = [ -0.58124, -0.81373; -0.81373,  0.58124 ]
 ##      @result{}  z = [ 1, 0; 0, 1 ]
diff --git a/scripts/linear-algebra/rank.m b/scripts/linear-algebra/rank.m
--- a/scripts/linear-algebra/rank.m
+++ b/scripts/linear-algebra/rank.m
@@ -16,48 +16,47 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} rank (@var{A})
 ## @deftypefnx {Function File} {} rank (@var{A}, @var{tol})
 ## Compute the rank of matrix @var{A}, using the singular value decomposition.
 ##
-## The rank is taken to be the number of singular values of @var{A} that
-## are greater than the specified tolerance @var{tol}.  If the second
-## argument is omitted, it is taken to be
+## The rank is taken to be the number of singular values of @var{A} that are
+## greater than the specified tolerance @var{tol}.  If the second argument is
+## omitted, it is taken to be
 ##
 ## @example
 ## tol = max (size (@var{A})) * sigma(1) * eps;
 ## @end example
 ##
 ## @noindent
 ## where @code{eps} is machine precision and @code{sigma(1)} is the largest
 ## singular value of @var{A}.
 ##
-## The rank of a matrix is the number of linearly independent rows or
-## columns and determines how many particular solutions exist to a system
-## of equations.  Use @code{null} for finding the remaining homogenous
-## solutions.
+## The rank of a matrix is the number of linearly independent rows or columns
+## and determines how many particular solutions exist to a system of equations.
+## Use @code{null} for finding the remaining homogenous solutions.
 ##
 ## Example:
 ##
 ## @example
 ## @group
 ## x = [1 2 3
 ##      4 5 6
 ##      7 8 9];
 ## rank (x)
 ##   @result{} 2
 ## @end group
 ## @end example
 ##
 ## @noindent
-## The number of linearly independent rows is only 2 because the final row
-## is a linear combination of -1*row1 + 2*row2.
+## The number of linearly independent rows is only 2 because the final row is a
+## linear combination of -1*row1 + 2*row2.
 ##
 ## @seealso{null, sprank, svd}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = rank (A, tol)
 
diff --git a/scripts/linear-algebra/rref.m b/scripts/linear-algebra/rref.m
--- a/scripts/linear-algebra/rref.m
+++ b/scripts/linear-algebra/rref.m
@@ -15,22 +15,24 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} rref (@var{A})
 ## @deftypefnx {Function File} {} rref (@var{A}, @var{tol})
 ## @deftypefnx {Function File} {[@var{r}, @var{k}] =} rref (@dots{})
-## Return the reduced row echelon form of @var{A}.  @var{tol} defaults
-## to @code{eps * max (size (@var{A})) * norm (@var{A}, inf)}.
+## Return the reduced row echelon form of @var{A}.
 ##
-## Called with two return arguments, @var{k} returns the vector of
-## "bound variables", which are those columns on which elimination
-## has been performed.
+## @var{tol} defaults to
+## @code{eps * max (size (@var{A})) * norm (@var{A}, inf)}.
+##
+## The optional return argument @var{k} contains the vector of
+## "bound variables", which are those columns on which elimination has been
+## performed.
 ##
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 ##         (based on an anonymous source from the public domain)
 
 function [A, k] = rref (A, tol)
 
diff --git a/scripts/linear-algebra/vech.m b/scripts/linear-algebra/vech.m
--- a/scripts/linear-algebra/vech.m
+++ b/scripts/linear-algebra/vech.m
@@ -16,19 +16,20 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} vech (@var{x})
 ## Return the vector obtained by eliminating all superdiagonal elements of
 ## the square matrix @var{x} and stacking the result one column above the
-## other.  This has uses in matrix calculus where the underlying matrix
-## is symmetric and it would be pointless to keep values above the main
-## diagonal.
+## other.
+##
+## This has uses in matrix calculus where the underlying matrix is symmetric
+## and it would be pointless to keep values above the main diagonal.
 ## @seealso{vec}
 ## @end deftypefn
 
 ## See Magnus and Neudecker (1988), Matrix differential calculus with
 ## applications in statistics and econometrics.
 
 ## Author KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
diff --git a/scripts/path/matlabroot.m b/scripts/path/matlabroot.m
--- a/scripts/path/matlabroot.m
+++ b/scripts/path/matlabroot.m
@@ -15,18 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} matlabroot ()
 ## Return the name of the top-level Octave installation directory.
 ##
-## This is an alias for the function @w{@code{OCTAVE_HOME}} provided
-## for compatibility.
+## This is an alias for the function @w{@code{OCTAVE_HOME}} provided for
+## compatibility.
 ## @seealso{OCTAVE_HOME}
 ## @end deftypefn
 
 function retval = matlabroot ()
 
   retval = OCTAVE_HOME;
 
 endfunction
diff --git a/scripts/prefs/addpref.m b/scripts/prefs/addpref.m
--- a/scripts/prefs/addpref.m
+++ b/scripts/prefs/addpref.m
@@ -13,25 +13,27 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} addpref (@var{group}, @var{pref}, @var{val})
-## Add a preference @var{pref} and associated value @var{val} to the
-## named preference group @var{group}.
+## Add a preference @var{pref} and associated value @var{val} to the named
+## preference group @var{group}.
 ##
 ## The named preference group must be a character string.
 ##
-## The preference @var{pref} may be a character string or a cell array
-## of character strings.  The corresponding value @var{val} may be any
-## value, or, if @var{pref} is a cell array of strings, @var{val}
-## must be a cell array of values with the same size as @var{pref}.
+## The preference @var{pref} may be a character string or a cell array of
+## character strings.
+##
+## The corresponding value @var{val} may be any value, or, if @var{pref} is a
+## cell array of strings, @var{val} must be a cell array of values with the
+## same size as @var{pref}.
 ## @seealso{setpref, getpref, ispref, rmpref}
 ## @end deftypefn
 
 ## Author: jwe
 
 function addpref (group, pref, val)
 
   if (nargin == 3)
diff --git a/scripts/prefs/getpref.m b/scripts/prefs/getpref.m
--- a/scripts/prefs/getpref.m
+++ b/scripts/prefs/getpref.m
@@ -12,36 +12,39 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} getpref (@var{group}, @var{pref}, @var{default})
-## Return the preference value corresponding to the named preference
-## @var{pref} in the preference group @var{group}.
+## @deftypefn  {Function File} {} getpref (@var{group}, @var{pref})
+## @deftypefnx {Function File} {} getpref (@var{group}, @var{pref}, @var{default})
+## @deftypefnx {Function File} {} getpref (@var{group})
+## Return the preference value corresponding to the named preference @var{pref}
+## in the preference group @var{group}.
 ##
 ## The named preference group must be a character string.
 ##
 ## If @var{pref} does not exist in @var{group} and @var{default} is
 ## specified, return @var{default}.
 ##
-## The preference @var{pref} may be a character string or a cell array
-## of character strings.  The corresponding default value @var{default}
-## may be any value, or, if @var{pref} is a cell array of strings,
-## @var{default} must be a cell array of values with the same size as
-## @var{pref}.
+## The preference @var{pref} may be a character string or a cell array of
+## character strings.
 ##
-## If neither @var{pref} nor @var{default} are specified, return a
-## structure of preferences for the preference group @var{group}.
+## The corresponding default value @var{default} may be any value, or, if
+## @var{pref} is a cell array of strings, @var{default} must be a cell array
+## of values with the same size as @var{pref}.
 ##
-## If no arguments are specified, return a structure containing all
-## groups of preferences and their values.
+## If neither @var{pref} nor @var{default} are specified, return a structure
+## of preferences for the preference group @var{group}.
+##
+## If no arguments are specified, return a structure containing all groups of
+## preferences and their values.
 ## @seealso{addpref, setpref, ispref, rmpref}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = getpref (group, pref, default)
 
   if (nargin == 0)
diff --git a/scripts/prefs/ispref.m b/scripts/prefs/ispref.m
--- a/scripts/prefs/ispref.m
+++ b/scripts/prefs/ispref.m
@@ -12,27 +12,28 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} ispref (@var{group}, @var{pref})
-## Return true if the named preference @var{pref} exists in the
-## preference group @var{group}.
+## @deftypefn  {Function File} {} ispref (@var{group}, @var{pref})
+## @deftypefnx {Function File} {} ispref (@var{group})
+## Return true if the named preference @var{pref} exists in the preference
+## group @var{group}.
 ##
 ## The named preference group must be a character string.
 ##
-## The preference @var{pref} may be a character string or a cell array
-## of character strings.
+## The preference @var{pref} may be a character string or a cell array of
+## character strings.
 ##
-## If @var{pref} is not specified, return true if the preference
-## group @var{group} exists.
+## If @var{pref} is not specified, return true if the preference group
+## @var{group} exists.
 ## @seealso{getpref, addpref, setpref, rmpref}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = ispref (group, pref)
 
   if (nargin == 1)
diff --git a/scripts/prefs/rmpref.m b/scripts/prefs/rmpref.m
--- a/scripts/prefs/rmpref.m
+++ b/scripts/prefs/rmpref.m
@@ -12,28 +12,25 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} rmpref (@var{group})
-## @deftypefnx {Function File} {} rmpref (@var{group}, @var{pref})
-## Remove the named preference @var{pref} from the preference group
-## @var{group}.
+## @deftypefn  {Function File} {} rmpref (@var{group}, @var{pref})
+## @deftypefnx {Function File} {} rmpref (@var{group})
+## Remove the named preference @var{pref} from the preference group @var{group}.
 ##
 ## The named preference group must be a character string.
 ##
-## The preference @var{pref} may be a character string or cell array
-## of strings.
+## The preference @var{pref} may be a character string or cell array of strings.
 ##
-## If @var{pref} is not specified, remove the preference group
-## @var{group}.
+## If @var{pref} is not specified, remove the preference group @var{group}.
 ##
 ## It is an error to remove a nonexistent preference or group.
 ## @seealso{addpref, ispref, setpref, getpref}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = rmpref (group, pref)
diff --git a/scripts/prefs/setpref.m b/scripts/prefs/setpref.m
--- a/scripts/prefs/setpref.m
+++ b/scripts/prefs/setpref.m
@@ -13,25 +13,27 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} setpref (@var{group}, @var{pref}, @var{val})
-## Set a preference @var{pref} to the given @var{val} in the named
-## preference group @var{group}.
+## Set a preference @var{pref} to the given @var{val} in the named preference
+## group @var{group}.
 ##
 ## The named preference group must be a character string.
 ##
-## The preference @var{pref} may be a character string or a cell array
-## of character strings.  The corresponding value @var{val} may be any
-## value, or, if @var{pref} is a cell array of strings, @var{val}
-## must be a cell array of values with the same size as @var{pref}.
+## The preference @var{pref} may be a character string or a cell array of
+## character strings.
+##
+## The corresponding value @var{val} may be any value, or, if @var{pref} is a
+## cell array of strings, @var{val} must be a cell array of values with the
+## same size as @var{pref}.
 ##
 ## If the named preference or group does not exist, it is added.
 ## @seealso{addpref, getpref, ispref, rmpref}
 ## @end deftypefn
 
 ## Author: jwe
 
 function setpref (group, pref, val)
diff --git a/scripts/set/powerset.m b/scripts/set/powerset.m
--- a/scripts/set/powerset.m
+++ b/scripts/set/powerset.m
@@ -19,19 +19,19 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} powerset (@var{a})
 ## @deftypefnx {Function File} {} powerset (@var{a}, "rows")
 ## Compute the powerset (all subsets) of the set @var{a}.
 ##
 ## The set @var{a} must be a numerical matrix or a cell array of strings.  The
 ## output will always be a cell array of either vectors or strings.
 ##
-## With the optional second argument @qcode{"rows"}, each row of the set @var{a}
-## is considered one element of the set.  The input must be a 2-D numeric
-## matrix to use this argument.
+## With the optional argument @qcode{"rows"}, each row of the set @var{a} is
+## considered one element of the set.  The input must be a 2-D numeric matrix
+## to use this argument.
 ##
 ## @seealso{unique, union, intersect, setdiff, setxor, ismember}
 ## @end deftypefn
 
 function p = powerset (a, byrows_arg)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
diff --git a/scripts/set/setdiff.m b/scripts/set/setdiff.m
--- a/scripts/set/setdiff.m
+++ b/scripts/set/setdiff.m
@@ -19,19 +19,18 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{c} =} setdiff (@var{a}, @var{b})
 ## @deftypefnx {Function File} {@var{c} =} setdiff (@var{a}, @var{b}, "rows")
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}] =} setdiff (@dots{})
 ## Return the unique elements in @var{a} that are not in @var{b} sorted in
 ## ascending order.
 ##
-## If @var{a} is a row vector return a column vector;
-## Otherwise, return a column vector.  The inputs may also be cell arrays of
-## strings.
+## If @var{a} is a row vector return a column vector; Otherwise, return a
+## column vector.  The inputs may also be cell arrays of strings.
 ##
 ## If the optional input @qcode{"rows"} is given then return the rows in
 ## @var{a} that are not in @var{b}.  The inputs must be 2-D matrices to use
 ## this option.
 ##
 ## If requested, return the index vector @var{ia} such that
 ## @code{@var{c} = @var{a}(@var{ia})}.
 ## @seealso{unique, union, intersect, setxor, ismember}
