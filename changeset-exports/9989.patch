# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1260905238 18000
#      Tue Dec 15 14:27:18 2009 -0500
# Node ID d36f8c473dff043c9f3bcb8f2b8075ab6d63246c
# Parent  76cf4aec34e9d955997cdfadfac6be044b0c1b7d
use glob and fnmatch from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,18 @@
+2009-12-15  John W. Eaton  <jwe@octave.org>
+
+	* README.MSVC: Delete section about obtaining glob library.
+	* bootstrap.conf (gnulib_modules): Add fnmatch and glob to the list.
+	* common.mk (LIBGLOB): Delete variable.
+	(do_subst_config_vals): Don't substitute it.
+	* octave-bug.in, octave-bug.cc.in: Eliminate LIBGLOB variable.
+	* configure.ac: Don't check for glob.h or the glob and fnmatch
+	functions.  Eliminate LIBGLOB variable.
+
 2009-12-11  Rik <octave@nomad.inbox5.com>
 
 	* HACKING: Elaborate which DIRNAME to use for --gnulib-srcdir option.
 
 2009-12-11  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Add $PTHREAD_LIBS to $LIBS and $PTHREAD_CFLAGS
 	to $CFLAGS for subsequent tests.
diff --git a/README.MSVC b/README.MSVC
--- a/README.MSVC
+++ b/README.MSVC
@@ -143,53 +143,33 @@ Hence the following steps:
   * additional setup (like adding Gnuplot, GnuWin32 bin
     directory... to the PATH)
 
   * start the shell:
 
     - MSYS:    start <MSYS_install>\bin\rxvt.exe -e /bin/sh --login -i
     - Cygwin:  start <Cygwin_install>\cygwin.bat
 
-1.5 Glob library
-----------------
-
-Octave also requires a filename globbing library.  This library is
-typically part of the C library on UNIX systems, but is not part of
-the Windows or MSVC run-time libraries.  You can find a glob package
-on the Octave website.  This package provides the missing features and
-is intended to be compiled in a fully setup shell with the
-Unix-to-MSVC compilation scripts:
-
-  * download and decompress the sources
-  * run "./configure.vc" (you can edit it to change the installation dir)
-  * run "make"
-  * run "make install"
-
-Then you'll have to tell MSVC where to find the headers and library
-files by adjusting the INCLUDE and LIB environment variables.  This
-can be done before starting the shell, in the "additional setup" step
-(see above).
-
-1.6 Readline library
+1.5 Readline library
 --------------------
 
 While not mandatory to compile Octave, the readline library is very
 useful to make Octave really usable.  A patched version of the
 readline library can be found in the Octave website.  This patched
 version is intended to be compiled from the shell using the
 Unix-to-MSVC compilation scripts:
 
  * download and decompress the sources (and apply the patch, if required)
  * follow the instructions in the file README.msvc
 
 As for the glob library, adapt the INCLUDE and LIB environment
 variables.  Note that as Octave will be linked to the readline DLL,
 you should also add the path of readline.dll to your PATH variable.
 
-1.7 F2C
+1.6 F2C
 -------
 
 As there exist no free MSVC-like fortran compiler, the compilation
 process makes use of the f2c utility and the libf2c library.  Those
 components can be downloaded from http://www.netlib.org/f2c/msdos/ and
 http://www.netlib.org/f2c/libf2c.zip.
 
 To compile libf2c, use makefile.vc and NMAKE.EXE.  To be usable within
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -13,16 +13,18 @@
 # GNU General Public License for more details.
 
 # You should have received a copy of the GNU General Public License
 # along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 
 # gnulib modules used by this package.
 gnulib_modules="
+  fnmatch
+  glob
   strftime
 "
 
 # Additional xgettext options to use.  Use "\\\newline" to break lines.
 XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
  --from-code=UTF-8\\\
  --flag=asprintf:2:c-format --flag=vasprintf:2:c-format\\\
  --flag=asnprintf:3:c-format --flag=vasnprintf:3:c-format\\\
diff --git a/common.mk b/common.mk
--- a/common.mk
+++ b/common.mk
@@ -162,17 +162,16 @@ DL_LDFLAGS = @DL_LDFLAGS@
 SONAME_FLAGS = @SONAME_FLAGS@
 
 RDYNAMIC_FLAG = @RDYNAMIC_FLAG@
 
 RLD_FLAG = @RLD_FLAG@
 
 FLIBS = @FLIBS@
 
-LIBGLOB = @LIBGLOB@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 
 FT2_CFLAGS = @FT2_CFLAGS@
 FT2_LIBS = @FT2_LIBS@
 
 HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
@@ -530,17 +529,16 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_LD_STATIC_FLAG%|\"${LD_STATIC_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_LEX%|\"${LEX}\"|" \
   -e "s|%OCTAVE_CONF_LEXLIB%|\"${LEXLIB}\"|" \
   -e "s|%OCTAVE_CONF_LFLAGS%|\"${LFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_LIBCRUFT%|\"${LIBCRUFT}\"|" \
   -e "s|%OCTAVE_CONF_LIBDIR%|\"${libdir}\"|" \
   -e "s|%OCTAVE_CONF_LIBEXT%|\"${LIBEXT}\"|" \
   -e "s|%OCTAVE_CONF_LIBFLAGS%|\"${LIBFLAGS}\"|" \
-  -e "s|%OCTAVE_CONF_LIBGLOB%|\"${LIBGLOB}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTAVE%|\"${LIBOCTAVE}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTINTERP%|\"${LIBOCTINTERP}\"|" \
   -e "s|%OCTAVE_CONF_LIBS%|\"${LIBS}\"|" \
   -e "s|%OCTAVE_CONF_LN_S%|\"${LN_S}\"|" \
   -e "s|%OCTAVE_CONF_MAGICK_CPPFLAGS%|\"${MAGICK_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_MAGICK_LDFLAGS%|\"${MAGICK_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_MAGICK_LIBS%|\"${MAGICK_LIBS}\"|" \
   -e 's|%OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS%|\"@MKOCTFILE_DL_LDFLAGS@\"|' \
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1401,17 +1401,16 @@ AC_CHECK_HEADERS(assert.h curses.h direc
 AC_LANG_PUSH(C++)
 AC_CHECK_HEADERS(sstream)
 AC_LANG_POP(C++)
 
 have_termios_h=no
 AC_CHECK_HEADERS(termios.h, have_termios_h=yes)
 AC_CHECK_HEADERS(termio.h, have_termio_h=yes, have_termio_h=no)
 AC_CHECK_HEADERS(sgtty.h, have_sgtty_h=yes, have_sgtty_h=no)
-AC_CHECK_HEADERS(glob.h, have_glob_h=yes, have_glob_h=no)
 AC_CHECK_HEADERS(fnmatch.h, have_fnmatch_h=yes, have_fnmatch_h=no)
 AC_CHECK_HEADERS(conio.h, have_conio_h=yes, have_conio_h=no)
 
 ### I'm told that termios.h is broken on NeXT systems.
 
 case "$canonical_host_type" in
   *-*-nextstep*)
     if test "$have_termios_h" = yes; then
@@ -1424,33 +1423,16 @@ esac
 if test "$have_termios_h" = yes \
     || test "$have_termio_h" = yes \
     || test "$have_sgtty_h" = yes; then
   true
 else
   AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
 
-LIBGLOB=
-AC_SUBST(LIBGLOB)
-if test "$have_fnmatch_h" = yes && test "$have_glob_h" = yes; then
-  AC_CHECK_FUNCS(fnmatch, have_fnmatch=yes, [
-    AC_CHECK_LIB(glob, fnmatch, [have_fnmatch=yes; LIBGLOB=-lglob],
-      have_fnmatch=no)])
-  AC_CHECK_FUNCS(glob, have_glob=yes, [
-    AC_CHECK_LIB(glob, glob, [have_glob=yes; LIBGLOB=-lglob],
-      have_glob=no)])
-
-  if test "$have_fnmatch" != yes || test "$have_glob" != yes; then
-    AC_MSG_ERROR([You are required to have fnmatch and glob])
-  fi
-else
-  AC_MSG_ERROR([You are required to have fnmatch.h and glob.h])
-fi
-
 ### Checks for functions and variables.
 
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name \
   chmod dup2 endgrent endpwent execvp expm1 expm1f fcntl fork fstat getcwd \
   getegid geteuid getgid getgrent getgrgid getgrnam getpgrp getpid \
   getppid getpwent getpwuid gettimeofday getuid getwd _kbhit kill \
   lgamma lgammaf lgamma_r lgammaf_r link localtime_r log1p log1pf lstat \
   memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise readlink \
@@ -2158,17 +2140,16 @@ AC_MSG_NOTICE([
 Octave is now configured for $canonical_host_type
 
   Source directory:            $srcdir
   Installation prefix:         $prefix
   C compiler:                  $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS
   C++ compiler:                $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS
   Fortran compiler:            $F77 $FFLAGS
   Fortran libraries:           $FLIBS
-  Glob libraries:              $LIBGLOB
   Lex libraries:               $LEXLIB
   LIBS:                        $LIBS
 
   AMD CPPFLAGS:                $AMD_CPPFLAGS
   AMD LDFLAGS:                 $AMD_LDFLAGS
   AMD libraries:               $AMD_LIBS
   ARPACK libraries:            $ARPACK_LIBS
   BLAS libraries:              $BLAS_LIBS
diff --git a/octave-bug.cc.in b/octave-bug.cc.in
--- a/octave-bug.cc.in
+++ b/octave-bug.cc.in
@@ -94,17 +94,16 @@ main (int argc, char **argv)
   vars["CXXFLAGS"] = %OCTAVE_CONF_CXXFLAGS%;
   vars["CXXPICFLAG"] = %OCTAVE_CONF_CXXPICFLAG%;
   vars["LD_CXX"] = %OCTAVE_CONF_LD_CXX%;
   vars["LDFLAGS"] = %OCTAVE_CONF_LDFLAGS%;
   vars["LIBFLAGS"] = %OCTAVE_CONF_LIBFLAGS%;
   vars["RLD_FLAG"] = %OCTAVE_CONF_RLD_FLAG%;
   vars["LIBS"] = %OCTAVE_CONF_LIBS%;
   vars["LEXLIB"] = %OCTAVE_CONF_LEXLIB%;
-  vars["LIBGLOB"] = %OCTAVE_CONF_LIBGLOB%;
 
   vars["AMD_CPPFLAGS"] = %OCTAVE_CONF_AMD_CPPFLAGS%;
   vars["AMD_LDFLAGS"] = %OCTAVE_CONF_AMD_LDFLAGS%;
   vars["AMD_LIBS"] = %OCTAVE_CONF_AMD_LIBS%;
   vars["ARPACK_CPPFLAGS"] = %OCTAVE_CONF_ARPACK_CPPFLAGS%;
   vars["ARPACK_LDFLAGS"] = %OCTAVE_CONF_ARPACK_LDFLAGS%;
   vars["ARPACK_LIBS"] = %OCTAVE_CONF_ARPACK_LIBS%;
   vars["BLAS_LIBS"] = %OCTAVE_CONF_BLAS_LIBS%;
@@ -238,17 +237,16 @@ main (int argc, char **argv)
   os << "CXXPICFLAG:        " << vars["CXXPICFLAG"] << endl;
   os << "LD_CXX:            " << vars["LD_CXX"] << endl;
   os << "LDFLAGS:           " << vars["LDFLAGS"] << endl;
   os << "LIBFLAGS:          " << vars["LIBFLAGS"] << endl;
   os << "RLD_FLAG:          " << vars["RLD_FLAG"] << endl;
   os << "BLAS_LIBS:         " << vars["BLAS_LIBS"] << endl;
   os << "FFTW_LIBS:         " << vars["FFTW_LIBS"] << endl;
   os << "LEXLIB:            " << vars["LEXLIB"] << endl;
-  os << "LIBGLOB:           " << vars["LIBGLOB"] << endl;
   os << "LIBS:              " << vars["LIBS"] << endl;
   os << "AMD_CPPFLAGS:      " << vars["AMD_CPPFLAGS"] << endl;
   os << "AMD_LDFLAGS:       " << vars["AMD_LDFLAGS"] << endl;
   os << "AMD_LIBS:          " << vars["AMD_LIBS"] << endl;
   os << "ARPACK_LIBS:       " << vars["ARPACK_LIBS"] << endl;
   os << "BLAS_LIBS:         " << vars["BLAS_LIBS"] << endl;
   os << "CAMD_CPPFLAGS:     " << vars["CAMD_CPPFLAGS"] << endl;
   os << "CAMD_LDFLAGS:      " << vars["CAMD_LDFLAGS"] << endl;
diff --git a/octave-bug.in b/octave-bug.in
--- a/octave-bug.in
+++ b/octave-bug.in
@@ -45,17 +45,16 @@ CXX=%OCTAVE_CONF_CXX%
 CXX_VERSION=%OCTAVE_CONF_CXX_VERSION%
 CXXFLAGS=%OCTAVE_CONF_CXXFLAGS%
 CXXPICFLAG=%OCTAVE_CONF_CXXPICFLAG%
 LD_CXX=%OCTAVE_CONF_LD_CXX%
 LDFLAGS=%OCTAVE_CONF_LDFLAGS%
 LIBFLAGS=%OCTAVE_CONF_LIBFLAGS%
 RLD_FLAG=%OCTAVE_CONF_RLD_FLAG%
 LEXLIB=%OCTAVE_CONF_LEXLIB%
-LIBGLOB=%OCTAVE_CONF_LIBGLOB%
 LIBS=%OCTAVE_CONF_LIBS%
 
 AMD_CPPFLAGS=%OCTAVE_CONF_AMD_CPPFLAGS%
 AMD_LDFLAGS=%OCTAVE_CONF_AMD_LDFLAGS%
 AMD_LIBS=%OCTAVE_CONF_AMD_LIBS%
 ARPACK_CPPFLAGS=%OCTAVE_CONF_ARPACK_CPPFLAGS%
 ARPACK_LDFLAGS=%OCTAVE_CONF_ARPACK_LDFLAGS%
 ARPACK_LIBS=%OCTAVE_CONF_ARPACK_LIBS%
@@ -299,17 +298,16 @@ CPICFLAG:          $CPICFLAG
 C++ compiler:      $CXX_AND_VERSION
 CXXFLAGS:          $CXXFLAGS
 CXXPICFLAG:        $CXXPICFLAG
 LD_CXX:            $LD_CXX
 LDFLAGS:           $LDFLAGS
 LIBFLAGS:          $LIBFLAGS
 RLD_FLAG:          $RLD_FLAG
 LEXLIB:            $LEXLIB
-LIBGLOB:           $LIBGLOB
 LIBS:              $LIBS
 AMD_CPPFLAGS:      $AMD_CPPFLAGS
 AMD_LDFLAGS:       $AMD_LDFLAGS
 AMD_LIBS:          $AMD_LIBS
 ARPACK_LIBS:       $ARPACK_LIBS
 BLAS_LIBS:         $BLAS_LIBS
 CAMD_CPPFLAGS:     $CAMD_CPPFLAGS
 CAMD_LDFLAGS:      $CAMD_LDFLAGS
