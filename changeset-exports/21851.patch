# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1465585498 14400
#      Fri Jun 10 15:04:58 2016 -0400
# Node ID e2deba5ca08c7e9f16b64d22cf9e14be87da4229
# Parent  0507f0d2135df5d4b23a4bf2f7c7ec7ebb55e3df
use fstream to create history file

* cmd-hist.cc (gnu_history::do_append): Create history file using
fstream object instead of Unix open function.
Don't include <fcntl.h>.

diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstring>
 
+#include <fstream>
 #include <iostream>
 #include <sstream>
 #include <string>
 
 #include "cmd-edit.h"
 #include "cmd-hist.h"
 #include "file-ops.h"
 #include "lo-error.h"
@@ -38,18 +39,16 @@ along with Octave; see the file COPYING.
 #include "str-vec.h"
 
 #if defined (USE_READLINE)
 #include <cstdlib>
 
 #include <sys/types.h>
 #include <unistd.h>
 
-#include <fcntl.h>
-
 #include "oct-rl-hist.h"
 
 #include "file-stat.h"
 #endif
 
 namespace octave
 {
   command_history *command_history::instance = 0;
@@ -397,20 +396,18 @@ namespace octave
                   f = xfile;
 
                 if (! f.empty ())
                   {
                     octave::sys::file_stat fs (f);
 
                     if (! fs)
                       {
-                        int tem;
-
-                        tem = gnulib::open (f.c_str (), O_CREAT, 0666);
-                        gnulib::close (tem);
+                        std::fstream tmp (f, std::ios::out);
+                        tmp.close ();
                       }
 
                     int status
                       = ::octave_append_history (lines_this_session, f.c_str ());
 
                     if (status != 0)
                       {
                         std::string msg = "appending to file '" + f_arg + "'";
