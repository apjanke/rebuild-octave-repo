# HG changeset patch
# User jwe
# Date 1182798786 0
#      Mon Jun 25 19:13:06 2007 +0000
# Node ID c3cd7d14fc5ea0e7cdd864842f2d8fb032cdd84b
# Parent  47dc81fefe8a4267fad885b9f67ca9e801d2671e
[project @ 2007-06-25 19:06:42 by jwe]

diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -170,16 +170,17 @@ Quentin H. Spencer
 Christoph Spiel
 Richard Stallman
 Russell Standish
 Doug Stewart
 Thomas Stuart
 Ariel Tankus
 Georg Thimm
 Duncan Temple Lang
+Olaf Till
 Thomas Treichl
 Utkarsh Upadhyay
 Stefan van der Walt
 Peter Van Wieren
 James R. Van Zandt
 Gregory Vanuxem
 Ivana Varekova
 Thomas Walter
diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -97,17 +97,17 @@ function imshow (im, varargin)
   
   ## Handle the rest of the arguments.
   narg = 1;
   while (narg <= length (varargin))
     arg = varargin{narg};
     if (ismatrix (arg) && size (arg, 2) == 3)
       color_map = arg;
       isindexed = true;
-    elseif (ismatrix (arg) && ndims (arg) == 2)
+    elseif (ismatrix (arg) && numel (arg) == 2)
       display_range = arg;
     elseif (isempty (arg))
       display_range = [min(im(:)), max(im(:))];
     elseif (ischar (arg) && strcmpi (arg, "displayrange"))
       narg++;
       display_range = varargin{narg};
     elseif (ischar (arg) &&
 	    (strcmpi (arg, "truesize") ||
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,25 @@
+2007-06-25  Olaf Till  <i7tiol@t-online.de>
+
+	* oct-stream.h (octave_stream_list::list): Use std::map.
+	(octave_stream_list::curr_len): Delete data member.
+	(octave_stream_list::octave_stream_list): Fix initializations.
+ 
+	* oct-stream.cc (octave_steam_list::do_insert,
+	octave_steam_list::do_lookup, octave_steam_list::do_remove,
+	octave_steam_list::do_clear, octave_steam_list::do_list_open_files, 
+	octave_steam_list::do_open_file_numbers,
+	octave_steam_list::do_get_file_number):
+ 	Use new octave_stream_list::list type.
+	(octave_stream_list::do_insert): Insert octave_stream with key
+	corresponding to file-descriptor.
+	(octave_stream_list::do_insert, octave_steam_list::insert):
+	Remove const qualifier of argument.
+
 2007-06-18  Søren Hauberg  <hauberg@gmail.com>
 
         * DLD-FUNCTIONS/__lin_interpn__.cc: Replace octave_NaN with octave_NA.
 
 2007-06-15  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* graphics.h (OCTAVE_GRAPHICS_PROPERTY_INTERNAL,
 	OCTAVE_GRAPHICS_PROPERTY, OCTAVE_GRAPHICS_MUTABLE_PROPERTY):
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -892,20 +892,21 @@ octave_base_stream::file_number (void)
 
   std::istream *is = input_stream ();
   std::ostream *os = output_stream ();
 
   // There is no standard way to get the underlying file descriptor from 
   // std::filebuf (nor in the GNU libstdc++-v3 implementation). We cache
   // the descriptor in c_file_ptr_buf, and then extract it here.
 
-  c_file_ptr_buf *ibuf = is ?
-    dynamic_cast<c_file_ptr_buf *> (is->rdbuf ()) : 0;
-  c_file_ptr_buf *obuf = os ?
-    dynamic_cast<c_file_ptr_buf *> (os->rdbuf ()) : 0;
+  c_file_ptr_buf *ibuf
+    = is ? dynamic_cast<c_file_ptr_buf *> (is->rdbuf ()) : 0;
+
+  c_file_ptr_buf *obuf
+    = os ? dynamic_cast<c_file_ptr_buf *> (os->rdbuf ()) : 0;
 
   int i_fid = ibuf ? ibuf->file_number () : -1;
   int o_fid = obuf ? obuf->file_number () : -1;
 
   if (i_fid >= 0)
     {
       if (o_fid >= 0)
 	retval = (i_fid == o_fid) ? i_fid : -1;
@@ -3883,17 +3884,17 @@ octave_stream_list::instance_ok (void)
 
       retval = false;
     }
 
   return retval;
 }
 
 int
-octave_stream_list::insert (const octave_stream& os)
+octave_stream_list::insert (octave_stream& os)
 {
   return (instance_ok ()) ? instance->do_insert (os) : -1;
 }
 
 octave_stream
 octave_stream_list::lookup (int fid, const std::string& who)
 {
   return (instance_ok ()) ? instance->do_lookup (fid, who) : octave_stream ();
@@ -3951,68 +3952,70 @@ octave_stream_list::open_file_numbers (v
 
 int
 octave_stream_list::get_file_number (const octave_value& fid)
 {
   return (instance_ok ()) ? instance->do_get_file_number (fid) : -1;
 }
 
 int
-octave_stream_list::do_insert (const octave_stream& os)
+octave_stream_list::do_insert (octave_stream& os)
 {
-  octave_value retval;
-
-  int stream_number = -1;
-
-  // Insert item in first open slot, increasing size of list if
-  // necessary.
-
-  for (int i = 0; i < curr_len; i++)
+  // Insert item with key corresponding to file-descriptor.
+
+  int stream_number;
+
+  if ((stream_number = os.file_number ()) == -1)
+    return stream_number;
+
+  // Should we test for "(list.find (stream_number) != list.end ()) &&
+  // list[stream_number].is_open ()" and respond with "error
+  // ("internal error: ...")"? It should not happen except for some
+  // bug or if the user has opened a stream with an interpreted
+  // command, but closed it directly with a system call in an
+  // oct-file; then the kernel knows the fd is free, but Octave does
+  // not know. If it happens, it should not do harm here to simply
+  // overwrite this entry, although the wrong entry might have done
+  // harm before.
+
+  if (list.size () < list.max_size ())
+    list[stream_number] = os;
+  else
     {
-      octave_stream tmp = list(i);
-
-      if (! tmp.is_open ())
-	{
-	  list(i) = os;
-	  stream_number = i;
-	  break;
-	}
-    }
-
-  if (stream_number < 0)
-    {
-      int total_len = list.length ();
-
-      if (curr_len == total_len)
-	list.resize (total_len * 2);
-
-      list(curr_len) = os;
-      stream_number = curr_len;
-      curr_len++;
+      stream_number = -1;
+      error ("could not create file id");
     }
 
   return stream_number;
+
 }
 
 static void
 gripe_invalid_file_id (int fid, const std::string& who)
 {
   if (who.empty ())
     ::error ("invalid stream number = %d", fid);
   else
     ::error ("%s: invalid stream number = %d", who.c_str (), fid);
 }
 
 octave_stream
 octave_stream_list::do_lookup (int fid, const std::string& who) const
 {
   octave_stream retval;
 
-  if (fid >= 0 && fid < curr_len)
-    retval = list(fid);
+  if (fid >= 0)
+    {
+      ostrl_map::const_iterator iter = list.find (fid);
+
+      if (iter != list.end ())
+	retval = iter->second;
+      else
+	gripe_invalid_file_id (fid, who);
+    }
   else
     gripe_invalid_file_id (fid, who);
 
   return retval;
 }
 
 octave_stream
 octave_stream_list::do_lookup (const octave_value& fid,
@@ -4031,25 +4034,32 @@ octave_stream_list::do_lookup (const oct
 int
 octave_stream_list::do_remove (int fid, const std::string& who)
 {
   int retval = -1;
 
   // Can't remove stdin (std::cin), stdout (std::cout), or stderr
   // (std::cerr).
 
-  if (fid > 2 && fid < curr_len)
+  if (fid > 2)
     {
-      octave_stream os = list(fid);
-
-      if (os.is_valid ())
+      ostrl_map::iterator iter = list.find (fid);
+
+      if (iter != list.end ())
 	{
-	  os.close ();
-	  list(fid) = octave_stream ();
-	  retval = 0;
+	  octave_stream os = iter->second;
+
+	  if (os.is_valid ())
+	    {
+	      os.close ();
+	      iter->second = octave_stream ();
+	      retval = 0;
+	    }
+	  else
+	    gripe_invalid_file_id (fid, who);
 	}
       else
 	gripe_invalid_file_id (fid, who);
     }
   else
     gripe_invalid_file_id (fid, who);
 
   return retval;
@@ -4057,24 +4067,27 @@ octave_stream_list::do_remove (int fid, 
 
 int
 octave_stream_list::do_remove (const octave_value& fid, const std::string& who)
 {
   int retval = -1;
 
   if (fid.is_string () && fid.string_value () == "all")
     {
-      // Skip stdin, stdout, and stderr.
-
-      for (int i = 3; i < curr_len; i++)
+      for (ostrl_map::iterator p = list.begin (); p != list.end (); p++)
 	{
-	  octave_stream os = list(i);
-
-	  if (os.is_valid ())
-	    do_remove (i, who);
+	  // Skip stdin, stdout, and stderr.
+
+	  if (p->first > 2)
+	    {
+	      octave_stream os = p->second;
+
+	      if (os.is_valid ())
+		do_remove (p->first, who);
+	    }
 	}
 
       retval = 0;
     }
   else
     {
       int i = get_file_number (fid);
 
@@ -4085,23 +4098,28 @@ octave_stream_list::do_remove (const oct
   return retval;
 }
 
 void
 octave_stream_list::do_clear (void)
 {
   // Do flush stdout and stderr.
 
-  list(0) . flush ();
-  list(1) . flush ();
+  list[0].flush ();
+  list[1].flush ();
 
   // But don't delete them or stdin.
 
-  for (int i = 3; i < curr_len; i++)
-    list(i) = octave_stream ();
+  for (ostrl_map::iterator p = list.begin (); p != list.end (); p++)
+    {
+      // Skip stdin, stdout, and stderr.
+
+      if (p->first > 2)
+	p->second = octave_stream ();
+    }
 }
 
 string_vector
 octave_stream_list::do_get_info (int fid) const
 {
   string_vector retval;
 
   octave_stream os = do_lookup (fid);
@@ -4143,23 +4161,23 @@ octave_stream_list::do_list_open_files (
   std::string retval;
 
   std::ostringstream buf;
 
   buf << "\n"
       << "  number  mode  arch       name\n"
       << "  ------  ----  ----       ----\n";
 
-  for (int i = 0; i < curr_len; i++)
+  for (ostrl_map::const_iterator p = list.begin (); p != list.end (); p++)
     {
-      octave_stream os = list(i);
+      octave_stream os = p->second;
 
       buf << "  "
 	  << std::setiosflags (std::ios::right)
-	  << std::setw (4) << i << "     "
+	  << std::setw (4) << p->first << "     "
 	  << std::setiosflags (std::ios::left)
 	  << std::setw (3)
 	  << octave_stream::mode_as_string (os.mode ())
 	  << "  "
 	  << std::setw (9)
 	  << oct_mach_info::float_format_as_string (os.float_format ())
 	  << "  "
 	  << os.name () << "\n";
@@ -4170,53 +4188,56 @@ octave_stream_list::do_list_open_files (
   retval = buf.str ();
 
   return retval;
 }
 
 octave_value
 octave_stream_list::do_open_file_numbers (void) const
 {
-  Matrix retval (1, curr_len, 0.0);
+  Matrix retval (1, list.size (), 0.0);
 
   int num_open = 0;
 
-  // Skip stdin, stdout, and stderr.
-
-  for (int i = 3; i < curr_len; i++)
+  for (ostrl_map::const_iterator p = list.begin (); p != list.end (); p++)
     {
-      if (list(i))
-	retval (0, num_open++) = i;
+      // Skip stdin, stdout, and stderr.
+
+      if (p->first > 2 && p->second)
+	retval(0,num_open++) = p->first;
     }
 
   retval.resize ((num_open > 0), num_open);
 
   return retval;
 }
 
 int
 octave_stream_list::do_get_file_number (const octave_value& fid) const
 {
   int retval = -1;
 
   if (fid.is_string ())
     {
       std::string nm = fid.string_value ();
 
-      // stdin (std::cin), stdout (std::cout), and stderr (std::cerr)
-      // are unnamed.
-
-      for (int i = 3; i < curr_len; i++)
+      for (ostrl_map::const_iterator p = list.begin (); p != list.end (); p++)
 	{
-	  octave_stream os = list(i);
-
-	  if (os && os.name () == nm)
+	  // stdin (std::cin), stdout (std::cout), and stderr (std::cerr)
+	  // are unnamed.
+
+	  if (p->first > 2)
 	    {
-	      retval = i;
-	      break;
+	      octave_stream os = p->second;
+
+	      if (os && os.name () == nm)
+		{
+		  retval = p->first;
+		  break;
+		}
 	    }
 	}
     }
   else
     {
       int conv_err = 0;
 
       int int_fid = convert_to_valid_int (fid, conv_err);
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -27,16 +27,17 @@ 02110-1301, USA.
 class Matrix;
 class string_vector;
 class octave_value;
 class octave_value_list;
 
 #include <iostream>
 #include <sstream>
 #include <string>
+#include <map>
 
 #include "Array.h"
 #include "data-conv.h"
 #include "lo-utils.h"
 #include "mach-info.h"
 
 class
 OCTINTERP_API
@@ -578,19 +579,25 @@ public:
   std::string name (void) const;
 
   int mode (void) const;
 
   oct_mach_info::float_format float_format (void) const;
 
   static std::string mode_as_string (int mode);
 
-  std::istream *input_stream (void) { return rep ? rep->input_stream () : 0; }
+  std::istream *input_stream (void)
+  {
+    return rep ? rep->input_stream () : 0;
+  }
 
-  std::ostream *output_stream (void) { return rep ? rep->output_stream () : 0; }
+  std::ostream *output_stream (void)
+  {
+    return rep ? rep->output_stream () : 0;
+  }
 
   void clearerr (void) { if (rep) rep->clearerr (); }
 
 private:
 
   // The actual representation of this stream.
   octave_base_stream *rep;
 
@@ -617,25 +624,25 @@ private:
 };
 
 class
 OCTINTERP_API
 octave_stream_list
 {
 protected:
 
-  octave_stream_list (void) : list (32), curr_len (0) { }
+  octave_stream_list (void) : list () { }
 
 public:
 
   ~octave_stream_list (void) { }
 
   static bool instance_ok (void);
 
-  static int insert (const octave_stream& os);
+  static int insert (octave_stream& os);
 
   static octave_stream
   lookup (int fid, const std::string& who = std::string ());
 
   static octave_stream
   lookup (const octave_value& fid, const std::string& who = std::string ());
 
   static int remove (int fid, const std::string& who = std::string ());
@@ -650,23 +657,23 @@ public:
   static std::string list_open_files (void);
 
   static octave_value open_file_numbers (void);
 
   static int get_file_number (const octave_value& fid);
 
 private:
 
-  Array<octave_stream> list;
+  typedef std::map<int, octave_stream> ostrl_map;
 
-  int curr_len;
+  ostrl_map list;
 
   static octave_stream_list *instance;
 
-  int do_insert (const octave_stream& os);
+  int do_insert (octave_stream& os);
 
   octave_stream do_lookup (int fid, const std::string& who = std::string ()) const;
   octave_stream do_lookup (const octave_value& fid,
 			   const std::string& who = std::string ()) const;
 
   int do_remove (int fid, const std::string& who = std::string ());
   int do_remove (const octave_value& fid, const std::string& who = std::string ());
 
diff --git a/test/test_diffeq.m b/test/test_diffeq.m
--- a/test/test_diffeq.m
+++ b/test/test_diffeq.m
@@ -65,19 +65,16 @@
 %! 
 %! assert(all (all (abs (x - y) < tol)));
 
 %% test/octave.test/diffeq/lsode_options-1.m
 %!test
 %! lsode_options ("absolute tolerance", eps);
 %! assert(lsode_options ("absolute tolerance") == eps);
 
-%% test/octave.test/diffeq/lsode_options-2.m
-%!error <Invalid call to lsode_options.*> lsode_options ();
-
 %% test/octave.test/diffeq/lsode_options-3.m
 %!error <Invalid call to lsode_options.*> lsode_options ("foo", 1, 2);
 
 %% test/octave.test/diffeq/dassl-1.m
 %% dassl-1.m
 %%
 %% Test dassl() function
 %%
@@ -149,14 +146,11 @@
 %! 
 %! assert(all (all (abs (x - y) < tol)));
 
 %% test/octave.test/diffeq/dassl_options-1.m
 %!test
 %! dassl_options ("absolute tolerance", eps);
 %! assert(dassl_options ("absolute tolerance") == eps);
 
-%% test/octave.test/diffeq/dassl_options-2.m
-%!error <Invalid call to dassl_options.*> dassl_options ();
-
 %% test/octave.test/diffeq/dassl_options-3.m
 %!error <Invalid call to dassl_options.*> dassl_options ("foo", 1, 2);
 
diff --git a/test/test_nonlin.m b/test/test_nonlin.m
--- a/test/test_nonlin.m
+++ b/test/test_nonlin.m
@@ -75,14 +75,11 @@
 %! endif
 %! assert(prog_output_assert("info good\nsolution good\nvalue good"));
 
 %% test/octave.test/nonlin/fsolve_options-1.m
 %!test
 %! fsolve_options ("tolerance", eps);
 %! assert(fsolve_options ("tolerance") == eps);
 
-%% test/octave.test/nonlin/fsolve_options-2.m
-%!error <Invalid call to fsolve_options.*> fsolve_options ();
-
 %% test/octave.test/nonlin/fsolve_options-3.m
 %!error <Invalid call to fsolve_options.*> fsolve_options ("foo", 1, 2);
 
diff --git a/test/test_quad.m b/test/test_quad.m
--- a/test/test_quad.m
+++ b/test/test_quad.m
@@ -21,14 +21,11 @@
 %% test/octave.test/quad/quad-4.m
 %!error <Invalid call to quad.*> quad ("f", 1, 2, 3, 4, 5);
 
 %% test/octave.test/quad/quad_options-1.m
 %!test
 %! quad_options ("absolute tolerance", eps);
 %! assert(quad_options ("absolute tolerance") == eps);
 
-%% test/octave.test/quad/quad_options-2.m
-%!error <Invalid call to quad_options.*> quad_options ();
-
 %% test/octave.test/quad/quad_options-3.m
 %!error <Invalid call to quad_options.*> quad_options (1, 2, 3);
 
