# HG changeset patch
# User jwe
# Date 1033787025 0
#      Sat Oct 05 03:03:45 2002 +0000
# Node ID a54f61b5d491e23dde653e2e4f66bb2617c4a321
# Parent  ddc722b38e8792f7eecbb571a4336929a30ddde5
[project @ 2002-10-05 03:02:56 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2002-10-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-env.cc (octave_env::do_absolute_pathname): Handle Windows
+	filenames.
+	(octave_env::do_make_absolute): Check for absolute name with
+	do_absolute_path.
+
 2002-10-03  Paul Kienzle <pkienzle@users.sf.net>
 
 	* oct-time.cc (octave_time::stamp): Better resolution for Windows
 	systems.
 
 2002-10-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dMatrix.cc (Matrix::read): Clean up error handling logic.
diff --git a/liboctave/oct-env.cc b/liboctave/oct-env.cc
--- a/liboctave/oct-env.cc
+++ b/liboctave/oct-env.cc
@@ -223,35 +223,45 @@ octave_env::do_polite_directory_format (
       retval.append (name.substr (len));
     }
   else
     retval = name;
 
   return retval;
 }
 
-// Return 1 if STRING contains an absolute pathname, else 0.
+#if defined (__CYGWIN__)
+#define IS_DIR_SEP(c) (c == '/' || c == '\\')
+#else
+#define IS_DIR_SEP(c) (c == '/')
+#endif
 
 bool
 octave_env::do_absolute_pathname (const std::string& s) const
 {
-  if (s.empty ())
-    return 0;
+  size_t len = s.length ();
+
+  if (len == 0)
+    return false;
 
   if (s[0] == '/')
     return true;
 
+#if defined (__CYGWIN__)
+  if (len > 2 && isalpha (s[0]) && s[1] == ':' && IS_DIR_SEP (s[2]))
+    return true;
+#endif
+
   if (s[0] == '.')
     {
-      if (s[1] == '\0' || s[1] == '/')
+      if (len == 1 || IS_DIR_SEP (s[1]))
 	return true;
 
-      if (s[1] == '.')
-	if (s[2] == '\0' || s[2] == '/')
-	  return true;
+      if (s[1] == '.' && (len == 2 || IS_DIR_SEP (s[2])))
+	return true;
     }
 
   return false;
 }
 
 // Return the `basename' of the pathname in STRING (the stuff after
 // the last '/').  If STRING is not a full pathname, simply return it.
 
@@ -276,17 +286,17 @@ std::string
 octave_env::do_make_absolute (const std::string& s,
 			      const std::string& dot_path) const
 {
 #if defined (__EMX__)
   if (s.length () > 1 && s[1] == ':')
     return s;
 #endif
 
-  if (dot_path.empty () || s[0] == '/' || s.empty ())
+  if (dot_path.empty () || s.empty () || do_absolute_pathname (s))
     return s;
 
   std::string current_path = dot_path;
 
   if (current_path.empty ())
     current_path = "./";
 
   size_t pos = current_path.length () - 1;
