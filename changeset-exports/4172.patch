# HG changeset patch
# User jwe
# Date 1037135644 0
#      Tue Nov 12 21:14:04 2002 +0000
# Node ID 2e94b2abfe6de3ab9a80a8e6d29a6196dacda2ab
# Parent  04694e5b4239a34b7fb5a5eb051e04c7bfe478ca
[project @ 2002-11-12 21:14:04 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2002-11-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* signal/bartlett.m: Avoid row/column mismatch error.
+
 2002-11-12  Paul Kienzle <pkienzle@users.sf.net>
 
 	* statistics/base/var.m: Use better formula for improved accuracy.
 
 2002-11-04  Nicholas Piper <nick-octave@nickpiper.co.uk>
 
 	* control/base/lsim.m: Correct doc string.
 
diff --git a/scripts/signal/bartlett.m b/scripts/signal/bartlett.m
--- a/scripts/signal/bartlett.m
+++ b/scripts/signal/bartlett.m
@@ -39,15 +39,12 @@ function c = bartlett (m)
     error ("bartlett: m has to be an integer > 0");
   endif
 
   if (m == 1)
     c = 1;
   else
     m = m - 1;
     n = fix (m / 2);
-    c (1 : n+1) = 2 * (0 : n)' / m;
-    c (n+2 : m+1) = 2 - 2 * (n+1 : m)'/m;
+    c = [2*(0:n)/m, 2-2*(n+1:m)/m]';
   endif
 
-  c = c';
-
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2002-11-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* toplev.cc (octave_initialized): New global variable.
+	(main_loop): Set it to true here.
+	* sighandlers.cc (sigint_handler): Exit immediately if we have not
+	finished init process.
+
 	* load-save.cc (extract_keyword): Return std::string, not char *.
 	Change all uses.
 	(read_ascii_data): Likewise.
 	(read_binary_data): Likewise.
 	(read_hdf5_data): Likewise.
 	(read_mat_ascii_data): Likewise.
 	(read_mat_binary_data): Likewise.
 	(do_load): Name and doc are now std::string objects, not char *.
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -278,16 +278,19 @@ sigint_handler (int sig)
 #else
 sigint_handler (int)
 #endif
 {
   MAYBE_ACK_SIGNAL (sig);
 
   MAYBE_REINSTALL_SIGHANDLER (sig, sigint_handler);
 
+  if (! octave_initialized)
+    exit (1);
+
   if (can_interrupt)
     {
 #if defined (USE_EXCEPTIONS_FOR_INTERRUPTS)
       octave_interrupt_state = 1;
 
       if (octave_interrupt_immediately)
 	octave_jump_to_enclosing_context ();
 #else
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -73,16 +73,19 @@ Software Foundation, 59 Temple Place - S
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include <version.h>
 
 // TRUE means we are exiting via the builtin exit or quit functions.
 static bool quitting_gracefully = false;
 
+// TRUE means we've processed all the init code and we are good to go.
+bool octave_initialized = false;
+
 // Current command to execute.
 tree_statement_list *global_command = 0;
 
 // Pointer to function that is currently being evaluated.
 octave_user_function *curr_function = 0;
 
 // Original value of TEXMFDBS environment variable.
 std::string octave_original_texmfdbs;
@@ -103,16 +106,18 @@ main_loop (void)
       octave_restore_signal_mask ();
 #endif
     }
 
   can_interrupt = true;
 
   octave_catch_interrupts ();
 
+  octave_initialized = true;
+
   // The big loop.
 
   int retval = 0;
   do
     {
       OCTAVE_TRY_WITH_INTERRUPTS
 	{
 	  curr_sym_tab = top_level_sym_tab;
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -46,15 +46,18 @@ do_octave_atexit (void);
 extern tree_statement_list *global_command;
 
 // Pointer to function that is currently being evaluated.
 extern octave_user_function *curr_function;
 
 // Original value of TEXMFDBS environment variable.
 extern std::string octave_original_texmfdbs;
 
+// TRUE means we've processed all the init code and we are good to go.
+extern bool octave_initialized;
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
