# HG changeset patch
# User Colin Macdonald <cbm@m.fsf.org>
# Date 1423176022 0
#      Thu Feb 05 22:40:22 2015 +0000
# Node ID 675d92e7d5070f91d410ffc7369fa90c124efa31
# Parent  606b05352351b2d887f776817e854870f01dd336
Temporary workaround for user-defined object sizes reported as 1x1 in GUI (bug #43096)

* symtab.cc (do_workspace_info): Don't use val.dims () directly to get
dimension vector which does not implicitly call size() for class objects.
Instead, call size() on object and create dimension vector from returned
information.

diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -1500,17 +1500,23 @@ symbol_table::do_workspace_info (void) c
       symbol_record sr = p->second;
 
       if (! sr.is_hidden ())
         {
           octave_value val = sr.varval ();
 
           if (val.is_defined ())
             {
-              dim_vector dv = val.dims ();
+              // FIXME: fix size for objects, see kluge in variables.cc
+              //dim_vector dv = val.dims ();
+              octave_value tmp = val;
+              Matrix sz = tmp.size ();
+              dim_vector dv = dim_vector::alloc (sz.numel ());
+              for (octave_idx_type i = 0; i < dv.length (); i++)
+                dv(i) = sz(i);
 
               char storage = ' ';
               if (sr.is_global ())
                 storage = 'g';
               else if (sr.is_persistent ())
                 storage = 'p';
               else if (sr.is_automatic ())
                 storage = 'a';
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -1108,16 +1108,17 @@ print_descriptor (std::ostream& os, std:
 
   os << param_buf.str ();
 }
 
 // FIXME: This is a bit of a kluge.  We'd like to just use val.dims()
 // and if val is an object, expect that dims will call size if it is
 // overloaded by a user-defined method.  But there are currently some
 // unresolved const issues that prevent that solution from working.
+// This same kluge is done in symtab.cc (do_workspace_info), fix there too.
 
 std::string
 get_dims_str (const octave_value& val)
 {
   octave_value tmp = val;
 
   Matrix sz = tmp.size ();
 
