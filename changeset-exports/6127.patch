# HG changeset patch
# User jwe
# Date 1162359285 0
#      Wed Nov 01 05:34:45 2006 +0000
# Node ID 5ea7e62233f2c0eb899c5b115f6188352cd35bbc
# Parent  c0011bf8f8158d7dcb621561b6e4cc48a52de2d7
[project @ 2006-11-01 05:34:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-31  John W. Eaton  <jwe@octave.org>
+
+	* ov-range.h (octave_range::empty_clone): Return octave_matrix
+	object instead of octave_range.
+
 2006-10-29  Juhani Saastamoinen  <juhani@cs.joensuu.fi>
 
 	* ls-mat5.cc (read_mat5_tag): Declare bytes as int32_t, not just int. 
 
 2006-10-28  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (Fatexit): Push function names on the stack even if we
 	don't have atexit or on_exit.
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -35,16 +35,17 @@ 02110-1301, USA.
 #include "lo-utils.h"
 #include "mx-base.h"
 #include "oct-alloc.h"
 #include "str-vec.h"
 
 #include "error.h"
 #include "oct-stream.h"
 #include "ov-base.h"
+#include "ov-re-mat.h"
 #include "ov-typeinfo.h"
 
 class Octave_map;
 class octave_value_list;
 
 class tree_walker;
 
 // Range values.
@@ -72,17 +73,21 @@ public:
       }
 
   octave_range (const octave_range& r)
     : octave_base_value (), range (r.range) { }
 
   ~octave_range (void) { }
 
   octave_base_value *clone (void) const { return new octave_range (*this); }
-  octave_base_value *empty_clone (void) const { return new octave_range (); }
+
+  // A range is really just a special kind of real matrix object.  In
+  // the places where we need to call empty_clone, it makes more sense
+  // to create an empty matrix (0x0) instead of an empty range (1x0).
+  octave_base_value *empty_clone (void) const { return new octave_matrix (); }
 
   type_conv_fcn numeric_conversion_function (void) const;
 
   octave_base_value *try_narrowing_conversion (void);
 
   octave_value subsref (const std::string& type,
 			const std::list<octave_value_list>& idx);
 
