# HG changeset patch
# User jwe
# Date 755215071 0
#      Mon Dec 06 21:57:51 1993 +0000
# Node ID bc5e6cb785d1923701ba4e07201b357b008c2dac
# Parent  d2ada1d8b70caa467815c21c781653cad64150a0
[project @ 1993-12-06 21:52:57 by jwe]

diff --git a/liboctave/NLEqn.h b/liboctave/NLEqn.h
--- a/liboctave/NLEqn.h
+++ b/liboctave/NLEqn.h
@@ -57,17 +57,16 @@ class NLEqn : public NLFunc
   Vector solve (const Vector&, int& info);
 
  private:
 
   int n;
   Vector x;
 
   void error (const char* msg);
-
 };
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
diff --git a/liboctave/NLFunc.h b/liboctave/NLFunc.h
--- a/liboctave/NLFunc.h
+++ b/liboctave/NLFunc.h
@@ -52,17 +52,16 @@ public:
   jacobian_fcn jacobian_function (void) const;
 
   NLFunc& set_jacobian_function (const jacobian_fcn j);
 
 protected:
 
   nonlinear_fcn fun;
   jacobian_fcn jac;
-
 };
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
diff --git a/scripts/general/perror.m b/scripts/general/perror.m
--- a/scripts/general/perror.m
+++ b/scripts/general/perror.m
@@ -36,18 +36,20 @@ function perror (name, err)
   endif
 
   if (! is_scalar (err))
     error ("perror: second argument must be a scalar");
   endif
 
   if (strcmp (name, "fsolve"))
 
-    if (err == -1)
+    if (err == -2)
       printf ("input error\n");
+    elseif (err == -1)
+      printf ("error encountered in user-supplied function\n");
     elseif (err == 1)
       printf ("solution converged to requested tolerance\n");
     elseif (err == 4)
       printf ("iteration limit exceeded\n");
     elseif (err == 3)
       printf ("iteration is not making good progress\n");
     else
       error ("perror: unrecognized error code for fsolve");
diff --git a/src/fsolve.cc b/src/fsolve.cc
--- a/src/fsolve.cc
+++ b/src/fsolve.cc
@@ -45,16 +45,19 @@ builtin_fsolve (const tree_constant *arg
 }
 #endif
 
 int
 hybrd_info_to_fsolve_info (int info)
 {
   switch (info)
     {
+    case -1:
+      info = -2;
+      break;
     case 0:
       info = -1;
       break;
     case 1:
       break;
     case 2:
       info = 4;
       break;
@@ -98,23 +101,26 @@ fsolve_user_function (const ColumnVector
 
   if (fsolve_fcn != NULL_TREE)
     {
       tree_constant *tmp = fsolve_fcn->eval (args, 2, 1, 0);
       delete [] args;
       if (tmp != NULL_TREE_CONST && tmp[0].is_defined ())
 	{
 	  retval = tmp[0].to_vector ();
+
 	  delete [] tmp;
+
+	  if (retval.length () <= 0)
+	    gripe_user_supplied_eval ("fsolve");
 	}
       else
 	{
 	  delete [] tmp;
 	  gripe_user_supplied_eval ("fsolve");
-	  jump_to_top_level ();
 	}
     }
 
   return retval;
 }
 
 tree_constant *
 fsolve (const tree_constant *args, int nargin, int nargout)
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -33,16 +33,18 @@ Software Foundation, 675 Mass Ave, Cambr
 #include <string.h>
 #include <assert.h>
 
 // This must come before anything that includes iostream.h...
 extern "C"
 {
 #include "readline/readline.h"
 
+extern char *xmalloc ();
+
 /*
  * Yes, this sucks, but it avoids a conflict with another readline
  * function declared in iostream.h.
  */
 #if 0
 #define LINE_SIZE 8192
 static int no_line_editing = 1;
 #endif
