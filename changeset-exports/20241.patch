# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1432577085 -7200
#      Mon May 25 20:04:45 2015 +0200
# Node ID 8b18842147981d1812de52fb86d963a975c7e0bc
# Parent  35fc5ea830305c154d90e9416d09e15fdec489e5
fullfile.m: allow UNC (\srv\share) paths on Windows systems (bug #44682).

* fullfile.m: Use strncmp to detect '\\' at start of path and preserve UNC
portion.  Recode BIST test to check for elimination of multilple file
separators to apply to non-Windows systems only.

diff --git a/scripts/miscellaneous/fullfile.m b/scripts/miscellaneous/fullfile.m
--- a/scripts/miscellaneous/fullfile.m
+++ b/scripts/miscellaneous/fullfile.m
@@ -37,34 +37,38 @@
 ##     /home/username/data/f3.csv
 ## @end group
 ## @end example
 ##
 ## On Windows systems, while forward slash file separators do work, they are
 ## replaced by backslashes; in addition drive letters are stripped of leading
 ## file separators to obtain a valid file path.
 ##
+## Note: @code{fullfile} does not perform any validation of the resulting full
+## filename.
 ## @seealso{fileparts, filesep}
 ## @end deftypefn
 
 ## Author: CarnÃ« Draug <carandraug@octave.org>
 
 function filename = fullfile (varargin)
 
   if (nargin && iscell (varargin{end}))
     filename = cellfun (@(x) fullfile (varargin{1:end-1}, x), varargin{end},
                                        "UniformOutput", false);
   else
     non_empty = cellfun ("isempty", varargin);
+    unc = 0;
     if (ispc && ! isempty (varargin))
-      varargin = strrep (varargin, "/", filesep);
+      varargin = strrep (varargin, '/', filesep);
+      unc = strncmp (varargin{1}, '\\', 2);
       varargin(1) = regexprep (varargin{1}, '[\\/]*([a-zA-Z]:[\\/]*)', "$1");
     endif
     filename = strjoin (varargin(! non_empty), filesep);
-    filename(strfind (filename, [filesep filesep])) = "";
+    filename(unc + strfind (filename(1+unc : end), [filesep filesep])) = "";
   endif
 
 endfunction
 
 
 %!shared fs, fsx, xfs, fsxfs, xfsy, xfsyfs
 %! fs = filesep ();
 %! fsx = [fs "x"];
@@ -82,17 +86,16 @@ endfunction
 %!assert (fullfile ("", "x"), "x")
 %!assert (fullfile ("x", ""), "x")
 %!assert (fullfile ("", "x", ""), "x")
 %!assert (fullfile ("x", "y"), xfsy)
 %!assert (fullfile ("x", "", "y"), xfsy)
 %!assert (fullfile ("x", "", "y", ""), xfsy)
 %!assert (fullfile ("", "x", "", "y", ""), xfsy)
 %!assert (fullfile (fs), fs)
-%!assert (fullfile (fs, fs), fs)
 %!assert (fullfile (fs, "x"), fsx)
 %!assert (fullfile (fs, xfs), fsxfs)
 %!assert (fullfile (fsx, fs), fsxfs)
 %!assert (fullfile (fs, "x", fs), fsxfs)
 
 %!assert (fullfile ("x/", "/", "/", "y", "/", "/"), xfsyfs)
 %!assert (fullfile ("/", "x/", "/", "/", "y", "/", "/"), [fs xfsyfs])
 %!assert (fullfile ("/x/", "/", "/", "y", "/", "/"), [fs xfsyfs])
@@ -104,16 +107,22 @@ endfunction
 
 ## Windows specific - drive letters and file sep type
 %!test
 %! if (ispc)
 %!   assert (fullfile ('\/\/\//A:/\/\', "x/", "/", "/", "y", "/", "/"), ...
 %!           ['A:\' xfsyfs]);
 %! endif
 
+## *nix specific - double backslash
+%!test
+%! if (isunix || ismac)
+%!   assert (fullfile (fs, fs), fs)
+%! endif
+
 ## Windows specific - drive letters and file sep type, cell array
 %!test
 %! if (ispc)
 %!  tmp = fullfile ({"\\\/B:\//", "A://c", "\\\C:/g/h/i/j\/"});
 %!  assert (tmp{1}, 'B:\');
 %!  assert (tmp{2}, 'A:\c');
 %!  assert (tmp{3}, 'C:\g\h\i\j\');
 %! endif
