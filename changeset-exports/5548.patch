# HG changeset patch
# User jwe
# Date 1133319885 0
#      Wed Nov 30 03:04:45 2005 +0000
# Node ID 5cc01ba4c0525c7808b10a48c925fcd99f792be8
# Parent  8b0b36c2dc0cc28fc0dc3ecf48e8d9d1cfba4981
[project @ 2005-11-30 03:04:44 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2005-11-29  Rafael Laboissiere  <rafael@debian.org>
+
+	* emacs/octave-mod.el: Ensure that key bindings for 
+	octave-mark-defun and backward-kill-word work in both XEmacs and
+	GNU Emacs.
+
 2005-11-28  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Check for uname.
 
 2005-11-21  John W. Eaton  <jwe@octave.org>
 
 	* examples/Makefile.in (DISTFILES): Don't include octave.desktop here.
 	(distclean): Remove octave.desktop here.
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -198,32 +198,37 @@ parenthetical grouping.")
 
 (defcustom inferior-octave-buffer "*Inferior Octave*"
   "*Name of buffer for running an inferior Octave process."
   :type 'string
   :group 'octave-inferior)
 
 (defvar inferior-octave-process nil)
 
+(defvar octave-xemacs-p
+  (string-match "XEmacs\\|Lucid" emacs-version))
+
 (defvar octave-mode-map nil
   "Keymap used in Octave mode.")
 (if octave-mode-map
     ()
   (let ((map (make-sparse-keymap)))
     (define-key map "`" 'octave-abbrev-start)
     (define-key map ";" 'octave-electric-semi)
     (define-key map " " 'octave-electric-space)
     (define-key map "\n" 'octave-reindent-then-newline-and-indent)
     (define-key map "\t" 'indent-according-to-mode)
     (define-key map "\e;" 'octave-indent-for-comment)
     (define-key map "\e\n" 'octave-indent-new-comment-line)
     (define-key map "\e\t" 'octave-complete-symbol)
     (define-key map "\M-\C-a" 'octave-beginning-of-defun)
     (define-key map "\M-\C-e" 'octave-end-of-defun)
     (define-key map "\M-\C-h" 'octave-mark-defun)
+    (if octave-xemacs-p
+        (define-key map [(meta backspace)] 'backward-kill-word))
     (define-key map "\M-\C-q" 'octave-indent-defun)
     (define-key map "\C-c;" 'octave-comment-region)
     (define-key map "\C-c:" 'octave-uncomment-region)
     (define-key map "\C-c\C-b" 'octave-submit-bug-report)
     (define-key map "\C-c\C-p" 'octave-previous-code-line)
     (define-key map "\C-c\C-n" 'octave-next-code-line)
     (define-key map "\C-c\C-a" 'octave-beginning-of-line)
     (define-key map "\C-c\C-e" 'octave-end-of-line)
@@ -633,19 +638,16 @@ the end keyword."
   (if (or (octave-in-comment-p)
 	  (save-excursion
 	    (beginning-of-line)
 	    (looking-at octave-continuation-regexp)))
       nil
     (delete-horizontal-space)
     (insert (concat " " octave-continuation-string))))
 
-(defvar octave-xemacs-p
-  (string-match "XEmacs\\|Lucid" emacs-version))
-
 ;;; Comments
 (defun octave-comment-region (beg end &optional arg)
   "Comment or uncomment each line in the region as Octave code.
 See `comment-region'."
   (interactive "r\nP")
   (let ((comment-start (char-to-string octave-comment-char)))
     (comment-region beg end arg)))
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,20 @@
+2005-11-29  John W. Eaton  <jwe@octave.org>
+
+	* miscellaneous/ver.m: Use new uname built-in function instead of
+	calling system.  Only append octave_forge_string if
+	OCTAVE_FORGE_VERSION exists.  Use puts instead of disp.
+	Call license instead of hard-coding license info here.
+
+	* miscellaneous/license.m: Use persistent instead of global for
+	__octave_licenses__.  Use puts instad of disp.
+	Use getuid and getpwuid instead of calling unix ("id -un").
+	If nargout = 1, return license info instead of printing usage message.
+
 2005-11-29  William Poetra Yoga Hadisoeseno  <williampoetra@gmail.com>
 
 	* miscellaneous/ver.m: New file.
 	* miscellaneous/license.m: New file.
 
 2005-11-22  John W. Eaton  <jwe@octave.org>
 
 	* plot/axis.m: Use %.16g instead of just %g to format ranges for
diff --git a/scripts/miscellaneous/license.m b/scripts/miscellaneous/license.m
--- a/scripts/miscellaneous/license.m
+++ b/scripts/miscellaneous/license.m
@@ -14,71 +14,54 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} license
-## @deftypefnx {Function File} {} license ("inuse")
-## @deftypefnx {Function File} {@var{retval}} = license ("inuse")
-## @deftypefnx {Function File} {@var{retval}} = license ("test", @var{feature})
-## @deftypefnx {Function File} {} license ("test", @var{feature}, @var{toggle})
-## @deftypefnx {Function File} {@var{retval}} = license ("checkout", @var{feature})
 ## Display the license of Octave.
 ##
-## @itemize
+## @deftypefnx {Function File} {} license ("inuse")
+## Display a list of packages currently being used.
 ##
-## @item
-## @code{license} displays the license of Octave (GNU GPL v2).
-##
-## @item
-## @code{license ("inuse")} also displays a list of products currently
-## being used.
+## @deftypefnx {Function File} {@var{retval}} = license ("inuse")
+## Return a structure containing the fields @code{feature} and @code{user}.
 ##
-## @item
-## @code{@var{retval} = license ("inuse")} returns a structure which has
-## two fields: @code{feature} is the product name ("Octave") and
-## @code{user} is the current username (only works on Unix systems; on
-## Windows systems it contains "octave_user").
+## @deftypefnx {Function File} {@var{retval}} = license ("test", @var{feature})
+## Return 1 if a license exists for the product identified by the string
+## @var{feature} and 0 otherwise.  The argument @var{feature} is case
+## insensitive and only the first 27 characters are checked.
 ##
-## @item
-## @code{@var{retval} = license ("test", @var{feature})} returns 1 if a
-## license exists for the product identified by the string @var{feature}
-## and 0 otherwise. @var{feature} is case insensitive and only the first
-## 27 characters are checked.
-##
-## @item
-## @code{license ("test", @var{feature}, @var{toggle})} enables or disables
-## license testing for @var{feature}, depending on @var{toggle}, which
-## can be one of:
+## @deftypefnx {Function File} {} license ("test", @var{feature}, @var{toggle})
+## Enable or disable license testing for @var{feature}, depending on
+## @var{toggle}, which may be one of:
 ##
 ## @table @samp
 ## @item "enable"
 ## Future tests for the specified license of @var{feature} are conducted
 ## as usual.
 ## @item "disable"
 ## Future tests for the specified license of @var{feature} return 0.
 ## @end table
 ##
-## @item
-## @code{@var{retval} = license ("checkout", @var{feature})} checks out
-## a license for @var{feature}, returning 1 on success and 0 on failure.
+## @deftypefnx {Function File} {@var{retval}} = license ("checkout", @var{feature})
+## Check out a license for @var{feature}, returning 1 on success and 0
+## on failure.
 ##
-## @end itemize
-##
+## This function is provided for compatibility with @sc{Matlab}.
 ## @end deftypefn
 ## @seealso{ver, version}
 
 ## Author: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function retval = license (varargin)
 
-  global __octave_licenses__
+  persistent __octave_licenses__;
 
   if (isempty (__octave_licenses__))
     __octave_licenses__ = cell ();
     __octave_licenses__{1,1} = "Octave";
     __octave_licenses__{1,2} = "GNU General Public License, Version 2";
     __octave_licenses__{1,3} = true;
     if (exist ("OCTAVE_FORGE_VERSION"))
       __octave_licenses__{2,1} = "octave-forge";
@@ -92,65 +75,59 @@ function retval = license (varargin)
   nr_licenses = rows (__octave_licenses__);
 
   if (nout > 1 || nin > 3)
     error ("type `help license' for usage info");
   endif
 
   if (nin == 0)
 
-    if (nout == 0)
-
-      found = false;
-      for p = 1:nr_licenses
-        if (strcmp (__octave_licenses__{p,1}, "Octave"))
-          found = true;
-          break;
-        endif
-      endfor
+    found = false;
+    for p = 1:nr_licenses
+      if (strcmp (__octave_licenses__{p,1}, "Octave"))
+        found = true;
+        break;
+      endif
+    endfor
 
-      if (found)
-        disp (__octave_licenses__{p,2});
-      else
-        disp ("unknown");
-      endif
+    if (found)
+      result = __octave_licenses__{p,2};
+    else
+      result = "unknown";
+    endif
 
+    if (nout == 0)
+      printf ("%s\n", result);
     else
-
-      usage ("license");
-
+      retval = result;
     endif
 
   elseif (nin == 1)
 
     if (nout == 0)
 
       if (! strcmp (varargin{1}, "inuse"))
         usage ("license (\"inuse\")");
       endif
 
       for p = 1:nr_licenses
-        disp (__octave_licenses__{p,1});
+        printf ("%s\n", __octave_licenses__{p,1});
       endfor
 
     else
 
       if (! strcmp (varargin{1}, "inuse"))
         usage ("retval = license (\"inuse\")");
       endif
 
-      if (isunix)
-        [t, username] = unix ("id -un");
-        if (t == 0)
-          username = username(1:end-1);
-        else
-          username = "octave_user";
-        endif
+      pw = getpwuid (getuid ());
+      if (isstruct (pw))
+	username = pw.name;
       else
-        username = "octave_user";
+	username = "octave_user";
       endif
 
       retval(1:nr_licenses) = struct ("feature", "", "user", "");
       for p = 1:nr_licenses
         retval(p).feature = __octave_licenses__{p,1};
         retval(p).user = username;
       endfor
 
diff --git a/scripts/miscellaneous/ver.m b/scripts/miscellaneous/ver.m
--- a/scripts/miscellaneous/ver.m
+++ b/scripts/miscellaneous/ver.m
@@ -28,40 +28,41 @@
 ## Author: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function ver ()
 
   if (nargin > 0)
     usage ("ver");
   endif
 
-  octave_license = "GNU General Public License, Version 2";
+  octave_license = license ();
+
+  [unm, status] = uname ();
 
-  if (isunix)
-    os_string = system ("uname -srvm")(1:end-1);
-  elseif (ispc)
-    os_string = "Microsoft Windows";
+  if (status < 0)
+    os_string = "unknown";
   else
-    os_string = "unknown";
+    os_string = sprintf ("%s %s %s %s", unm.sysname, unm.release,
+			 unm.version, unm.machine);
   endif
 
   hbar(1:70) = "-";
   ver_line1 = "GNU Octave Version ";
-  ver_line2 = "GNU Octave License ";
+  ver_line2 = "GNU Octave License: ";
   ver_line3 = "Operating System: ";
 
   ver_desc = sprintf ("%s\n%s%s\n%s%s\n%s%s\n%s\n", hbar, ver_line1, version,
                       ver_line2, octave_license, ver_line3, os_string, hbar);
 
   if (exist ("OCTAVE_FORGE_VERSION"))
     octave_forge_name = "octave-forge";
     octave_forge_version = num2str (OCTAVE_FORGE_VERSION);
     octave_forge_string = sprintf ("%s%s%s\n", octave_forge_name,
                                    blanks (round(0.75 * length (hbar))
                                            - length (octave_forge_name)
                                            - length (octave_forge_version)),
                                    octave_forge_version);
+    ver_desc = strcat (ver_desc, octave_forge_string);
   endif
 
-  ver_desc = strcat (ver_desc, octave_forge_string);
-  disp (ver_desc);
+  puts (ver_desc);
 
 endfunction
