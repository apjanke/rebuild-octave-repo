# HG changeset patch
# User Rik <rik@octave.org>
# Date 1383264638 25200
#      Thu Oct 31 17:10:38 2013 -0700
# Node ID 3488d987eb5074f54197be443f1322ca14beed4a
# Parent  af924e6572cb0b9f842f64effa6dc6504ceb859d
build: Remove LLVM_(CPPFLAGS|CXXFLAGS) from XTRA_CXXFLAGS.

* configure.ac: Don't add LLVM_CPPFLAGS, LLVM_CXXFLAGS to XTRA_CXXFLAGS.

* libinterp/Makefile.am: Add LLVM_CPPFLAGS to *.cc -> *.df rule.

* libinterp/corefcn/module.mk: Add LLVM_CPPFLAGS to corefcn specific CPPFLAGS.
Create new corefcn specific CXXFLAGS variable and add LLVM_CXXFLAGS to it.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -767,19 +767,17 @@ if test $build_jit = yes; then
     dnl
     dnl Define some extra flags that LLVM requires in order to include headers.
     dnl Ideally we should get these from llvm-config, but llvm-config isn't
     dnl very helpful.
     dnl
     CPPFLAGS="-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS"
     CXXFLAGS="$LLVM_CXXFLAGS $CXXFLAGS"
     AC_LANG_PUSH(C++)
-    AC_CHECK_HEADER([llvm/Support/TargetSelect.h], [
-      warn_llvm=
-      XTRA_CXXFLAGS="$XTRA_CXXFLAGS $LLVM_CXXFLAGS $LLVM_CPPFLAGS"])
+    AC_CHECK_HEADER([llvm/Support/TargetSelect.h], [warn_llvm=""])
 
     have_function_h=no
     AC_CHECK_HEADERS([llvm/IR/Function.h llvm/Function.h],
                      [have_function_h=yes; break])
     if test $have_function_h = no; then
       warn_llvm="Missing LLVM file Function.h.  JIT compiler is disabled."
     fi
     have_irbuilder_h=no
diff --git a/libinterp/Makefile.am b/libinterp/Makefile.am
--- a/libinterp/Makefile.am
+++ b/libinterp/Makefile.am
@@ -224,26 +224,26 @@ ALL_DEF_FILES = $(SRC_DEF_FILES) $(DLDFC
 
 ## FIXME: The following two variables are deprecated and should be removed
 ##        in Octave version 3.12.
 DLL_CDEFS = @OCTINTERP_DLL_DEFS@
 DLL_CXXDEFS = @OCTINTERP_DLL_DEFS@
 
 ## Rule to build a DEF file from a .cc file
 ##
-## FIXME -- This rule should be fixed to avoid using special
+## FIXME: This rule should be fixed to avoid using special
 ## flags like JAVA_CPPFLAGS for every file.  How could it be written
 ## so that it uses octave_value_liboctave_value_la_CPPFLAGS when
 ## generating the octave-value/*.df files?
 ## 
-## FIXME -- Shouldn't the build stop if CPP fails here?
+## FIXME: Shouldn't the build stop if CPP fails here?  Yes (10/31/2013)
 %.df: %.cc
 	$(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
-	  $(AM_CPPFLAGS) $(JAVA_CPPFLAGS) $(FT2_CPPFLAGS) $(FONTCONFIG_CPPFLAGS) \
-		$(CPPFLAGS) \
+	  $(AM_CPPFLAGS) $(FONTCONFIG_CPPFLAGS) $(FT2_CPPFLAGS) \
+		$(JAVA_CPPFLAGS) $(LLVM_CPPFLAGS) $(CPPFLAGS) \
 	  $(AM_CXXFLAGS) $(CXXFLAGS) \
 	  -DMAKE_BUILTINS $< | $(srcdir)/mkdefs $(srcdir) $< > $@-t
 	mv $@-t $@
 
 ## Rules to build test files
 
 TST_FILES_SRC := $(shell $(top_srcdir)/build-aux/find-files-with-tests.sh "$(srcdir)" $(ULT_DIST_SRC) $(DLDFCN_SRC))
 
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -314,16 +314,18 @@ corefcn/oct-tex-parser.h: corefcn/oct-te
 
 noinst_LTLIBRARIES += \
   corefcn/libcorefcn.la \
   corefcn/libtex_parser.la
 
 corefcn_libcorefcn_la_SOURCES = $(COREFCN_SRC)
 corefcn_libcorefcn_la_CPPFLAGS = $(liboctinterp_la_CPPFLAGS) \
                                  $(FFTW_XCPPFLAGS) \
+                                 $(FONTCONFIG_CPPFLAGS) \
                                  $(FT2_CPPFLAGS) \
-                                 $(FONTCONFIG_CPPFLAGS)
+                                 $(LLVM_CPPFLAGS)
+corefcn_libcorefcn_la_CXXFLAGS = $(AM_CXXFLAGS) $(LLVM_CXXFLAGS)
 
 corefcn_libtex_parser_la_SOURCES = $(TEX_PARSER_SRC)
 corefcn_libtex_parser_la_CPPFLAGS = $(liboctinterp_la_CPPFLAGS)
 corefcn_libtex_parser_la_CXXFLAGS = \
   $(filter-out -Wold-style-cast, $(AM_CXXFLAGS))
 
