# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1543767669 -3600
#      Sun Dec 02 17:21:09 2018 +0100
# Node ID aa678451b758c857a86cec4799fe05aa9e567bfc
# Parent  e5a40e1395fb079d0a965d0ef65daf5188f167dd
Silence compiler warning about incorrect format specifier (bug #55046).

* hex2num.cc, mex.cc: Use format specifier %zd for size_t.

diff --git a/libinterp/corefcn/hex2num.cc b/libinterp/corefcn/hex2num.cc
--- a/libinterp/corefcn/hex2num.cc
+++ b/libinterp/corefcn/hex2num.cc
@@ -63,17 +63,17 @@ static void
 hex2num (const std::string& hex, void *num, size_t nbytes, bool swap_bytes)
 {
   unsigned char *cp = reinterpret_cast<unsigned char *> (num);
 
   const size_t nc = hex.length ();
   const size_t nchars = 2 * nbytes;
 
   if (nc > nchars)
-    error ("hex2num: S must be no more than %d characters", nchars);
+    error ("hex2num: S must be no more than %zd characters", nchars);
 
   size_t j = 0;
 
   for (size_t i = 0; i < nbytes; i++)
     {
       size_t k = (swap_bytes ? nbytes - i - 1 : i);
 
       unsigned char ch1 = (j < nc) ? hex[j++] : '0';
diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2175,17 +2175,17 @@ public:
   // Allocate memory.
   void * malloc_unmarked (size_t n)
   {
     void *ptr = std::malloc (n);
 
     if (! ptr)
       {
         // FIXME: could use "octave_new_handler();" instead
-        error ("%s: failed to allocate %d bytes of memory",
+        error ("%s: failed to allocate %zd bytes of memory",
                function_name (), n);
       }
 
     global_mark (ptr);
 
     return ptr;
   }
 
