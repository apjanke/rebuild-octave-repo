# HG changeset patch
# User jwe
# Date 964120884 0
#      Thu Jul 20 19:21:24 2000 +0000
# Node ID aef06675c94d8c8682b2a8c2bb671ff0fcde0f90
# Parent  ab42a049fc9d1131198c7121cc8370f34dc4d26b
[project @ 2000-07-20 19:21:23 by jwe]

diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -19,22 +19,22 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#if 0
+
 // The following definitions are commented out because they cause
 // trouble on some systems.  What is really needed is a feature test
 // in the configure script.
 
-#if 0
-
 // I am told that without _BSD_SOURCE, tm_zone won't be declared on
 // some systems.  Defining _XOPEN_SOURCE provides the declaration for
 // strptime on some others.
 //
 // These defines go here, before any system header files are included,
 // because the system header files may define other macros that are
 // actually used to determine the feature set.  If we wait until after
 // some system header file is included, it may be too late.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2000-07-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-stream.cc (octave_base_stream::oscanf): Advance to next
+	format element before attempting to pick up any trailing stuff.
+
 2000-07-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l (next_token_is_bin_op): Don't recognize `..' as a binary op.
 
 	* load-save.cc (get_file_format): Call read_mat5_binary_file_header 
 	with third arg true instead of false, so we don't barf if the file
 	is not a matlab v5 binary file.
 
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -1892,16 +1892,19 @@ octave_base_stream::oscanf (const std::s
 	  retval (nconv) = static_cast<double> (num_values);
 
 	  if (! quit)
 	    {
 	      // Pick up any trailing stuff.
 	      if (ok () && len > nconv)
 		{
 		  octave_value tmp;
+
+		  elt = fmt_list.next ();
+
 		  do_oscanf (elt, tmp);
 		}
 	    }
 	}
     }
   else
     invalid_operation ("fscanf", "reading");
 
