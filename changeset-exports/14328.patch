# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1328465767 18000
#      Sun Feb 05 13:16:07 2012 -0500
# Node ID 19078011cdc30075740cf93e63569900440cd341
# Parent  63f1bdf083397aafcc4d244c65fb3291ba562a6b
fix problem with recursion and anonymous functions (bug #31371)

* ov-user-fcn.cc (octave_user_function::do_multi_index_op): Don't
increment the symbol table_context in the call stack or push a new
symbol table context for recursive anonymous function calls.

diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -382,20 +382,22 @@ octave_user_function::do_multi_index_op 
     {
       ::error ("max_recursion_depth exceeded");
       return retval;
     }
 
   // Save old and set current symbol table context, for
   // eval_undefined_error().
 
-  octave_call_stack::push (this, local_scope, call_depth);
+  int context = is_anonymous_function () ? 0 : call_depth;
+
+  octave_call_stack::push (this, local_scope, context);
   frame.add_fcn (octave_call_stack::pop);
 
-  if (call_depth > 0)
+  if (call_depth > 0 && ! is_anonymous_function ())
     {
       symbol_table::push_context ();
 
       frame.add_fcn (symbol_table::pop_context);
     }
 
   string_vector arg_names = args.name_tags ();
 
