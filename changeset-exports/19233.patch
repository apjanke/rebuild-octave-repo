# HG changeset patch
# User Massimiliano Fasi <massimiliano.fasi@gmail.com>
# Date 1411031152 -7200
#      Thu Sep 18 11:05:52 2014 +0200
# Node ID 0ded8964c13af6636bc7ad349127f6245365c414
# Parent  ec10705dbd83cd802d967c77bd37489de05a22c8
Added wildcard * support to archive-related routines (bug #43211).

* unpack.m: added wildcard expansion via glob() for input filename.

diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -27,45 +27,52 @@
 ## @var{filetype} must also be specified.
 ##
 ## The optional return value is a list of @var{files} unpacked.
 ## @seealso{bzip2, gzip, zip, tar}
 ## @end deftypefn
 
 ## Author: Bill Denney <denney@seas.upenn.edu>
 
-function filelist = unpack (file, dir = ".", filetype = "")
+function filelist = unpack (filename, dir = ".", filetype = "")
 
   if (nargin < 1 || nargin > 3)
     print_usage ();
   endif
 
-  if (! ischar (file) && ! iscellstr (file))
-    error ("unpack: invalid input file class, %s", class (file));
+  if (! ischar (filename) && ! iscellstr (filename))
+    error ("unpack: invalid input file class, %s", class (filename));
   endif
 
   ## character arrays of more than one string must be treated as cell strings
-  if (ischar (file) && ! isvector (file))
-    file = cellstr (file);
+  if (ischar (filename) && ! isvector (filename))
+    file = cellstr (filename);
+  else
+    file = glob (filename);
   endif
 
   ## Recursively unpack cellstr arrays one file at a time
-  if (iscellstr (file))
+  n_elem = numel (file);
+  if (n_elem > 1)
+    
     files = {};
     for i = 1:numel (file)
       tmpfiles = unpack (file{i}, dir);
       files = {files{:} tmpfiles{:}};
     endfor
 
     ## Return output if requested.
     if (nargout > 0)
       filelist = files;
     endif
 
     return;
+    
+  else
+    file = filename;
   endif
 
   if (isdir (file))
     if (isempty (filetype))
       error ("unpack: FILETYPE must be given for a directory");
     elseif (! any (strcmpi (filetype, "gunzip")))
       error ("unpack: FILETYPE must be gunzip for a directory");
     endif
@@ -242,10 +249,9 @@ function files = __parse_gzip__ (output)
 endfunction
 
 function files = __parse_bzip2__ (output)
   ## Parse the output from bzip2 and bunzip2 returning the files
   ## commpressed (or decompressed).
 
   ## Strip leading blanks and .bz2 extension from file name
   files = regexprep (output, '^\s+(.*)\.bz2: .*', '$1');
-endfunction
-
+endfunction
\ No newline at end of file
