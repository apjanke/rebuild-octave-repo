# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1296635791 18000
#      Wed Feb 02 03:36:31 2011 -0500
# Branch release-3-4-x
# Node ID eb7c0ba7ca87e9d253f07fec17d37e12310040c4
# Parent  3de1dae1e4039ec7ea6013c3e2b0931d90937cb4
Range.cc (Range::Range (double, double, octave_idx_type)): correctly compute limit

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2011-02-02  John W. Eaton  <jwe@octave.org>
+
+	* Range.cc (Range::Range (double, double, octave_idx_type)):
+	Correctly compute limit from base, increment and number of
+	elements.  Bug #32321.
+
 2011-01-31  John W. Eaton  <jwe@octave.org>
 
 	* Sparse.cc (Sparse<T>::assign (const idx_vector&, const idx_vector&,
 	const Sparse<T>&)): Handle case of LHS originally empty, and
 	with non-colon indices.  Fix typo in previous change.  Bug #32263.
 
 2011-01-30  Pascal Dupuis  <Pascal.Dupuis@worldonline.be>
 
diff --git a/liboctave/Range.cc b/liboctave/Range.cc
--- a/liboctave/Range.cc
+++ b/liboctave/Range.cc
@@ -32,18 +32,18 @@ along with Octave; see the file COPYING.
 #include "Range.h"
 #include "lo-error.h"
 #include "lo-mappers.h"
 #include "lo-math.h"
 #include "lo-utils.h"
 #include "Array-util.h"
 
 Range::Range (double b, double i, octave_idx_type n)
-  : rng_base (b), rng_limit (b + n * i), rng_inc (i),
-  rng_nelem (n), cache ()
+  : rng_base (b), rng_limit (b + (n-1) * i), rng_inc (i),
+    rng_nelem (n), cache ()
 {
   if (! xfinite (b) || ! xfinite (i))
     rng_nelem = -2;
 }
 
 bool
 Range::all_elements_are_ints (void) const
 {
