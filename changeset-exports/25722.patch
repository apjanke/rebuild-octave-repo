# HG changeset patch
# User Rik <rik@octave.org>
# Date 1533164711 25200
#      Wed Aug 01 16:05:11 2018 -0700
# Node ID 05e714d0b58908cf239c0579b36c17a07074adb6
# Parent  e9f107d31799c9f4a9840a6d13a3ab78712a74b9
# Parent  337c944a9ac974b0f8c1f44264ed8d6d846683e1
maint: merge stable to default.

diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -1045,20 +1045,20 @@ namespace octave
               {
                 octave_value val = scope.varval (name);
 
                 bool local_val_is_defined = val.is_defined ();
 
                 if (local_val_is_defined)
                   {
                     warning_with_id ("Octave:global-local-conflict",
-                                     "global: '%s' is defined in the current scope",
+                                     "global: '%s' is defined in the current scope.\n",
                                      name.c_str ());
                     warning_with_id ("Octave:global-local-conflict",
-                                     "global: in a future version, global variables must be declared before use");
+                                     "global: in a future version, global variables must be declared before use.\n");
 
                     // If the symbol is defined in the local but not the
                     // global scope, then use the local value as the
                     // initial value.  This value will also override any
                     // initializer in the global statement.
                     octave_value global_val = global_scope.varval (name);
 
                     if (global_val.is_defined ())
