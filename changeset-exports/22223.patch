# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1455185205 -39600
#      Thu Feb 11 21:06:45 2016 +1100
# Node ID cf18d6e791a140b7df0dd32b32354d975c5554a1
# Parent  8a50ab960ae64ccbef653f8e0d9aeff89230fea6
Prevent Octave:language-extension from becoming an error (bug #44336).

* error.cc (Fwarning): Explicitly set Octave:language-extension=off
  when setting warning ("error", "all").

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1557,55 +1557,36 @@ disable escape sequence expansion use a 
               nargin--;
             }
 
           if (nargin >= 2 && arg2 == "all")
             {
               // If "all" is explicitly given as ID.
 
               octave_map tmp;
+              int is_error = (arg1 == "error");
 
-              Cell id (1, 1);
-              Cell st (1, 1);
+              Cell id (1, 1 + 2*is_error);
+              Cell st (1, 1 + 2*is_error);
 
               id(0) = arg2;
               st(0) = arg1;
 
               // Since internal Octave functions are not compatible,
-              // turning all warnings into errors should leave the state of
-              // Octave:language-extension alone.
-
-              if (arg1 == "error" && warning_options.contains ("identifier"))
-                {
-                  octave_idx_type n = 1;
-
-                  Cell tid = warning_options.contents ("identifier");
-                  Cell tst = warning_options.contents ("state");
-
-                  for (octave_idx_type i = 0; i < tid.numel (); i++)
-                    {
-                      octave_value vid = tid(i);
+              // and "all"=="error" causes any "on" to throw an error,
+              // turning all warnings into errors should disable
+              // Octave:language-extension.
 
-                      if (vid.is_string ())
-                        {
-                          std::string key = vid.string_value ();
+              if (is_error)
+                {
+                  id(1) = "Octave:language-extension";
+                  st(1) = "off";
 
-                          if (key == "Octave:language-extension"
-                              || key == "Octave:single-quote-string")
-                            {
-                              id.resize (dim_vector (1, n+1));
-                              st.resize (dim_vector (1, n+1));
-
-                              id(n) = tid(i);
-                              st(n) = tst(i);
-
-                              n++;
-                            }
-                        }
-                    }
+                  id(2) = "Octave:single-quote-string";
+                  st(2) = "off";
                 }
 
               tmp.assign ("identifier", id);
               tmp.assign ("state", st);
 
               warning_options = tmp;
 
               done = true;
