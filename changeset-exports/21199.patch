# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1454627266 18000
#      Thu Feb 04 18:07:46 2016 -0500
# Node ID dd6605e1eaea11eca483cae1b5491cdd67487a6d
# Parent  1adcdc518d9e339c5061c7867aae21fd80d83c5b
make gl2ps_renderer implementation private

* gl2ps-print.h: Rename from gl2ps-renderer.h.
* gl2ps-print.cc: Rename from gl2ps-renderer.cc.

* libinterp/corefcn/module.mk: Update.
* Canvas.cc, __init_fltk__.cc, __osmesa_print__.cc: Update.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -36,17 +36,17 @@ along with Octave; see the file COPYING.
 #include "Backend.h"
 #include "Canvas.h"
 #include "ContextMenu.h"
 #include "GLCanvas.h"
 #include "QtHandlesUtils.h"
 
 #include "annotation-dialog.h"
 
-#include "gl2ps-renderer.h"
+#include "gl2ps-print.h"
 #include "oct-opengl.h"
 #include "octave-qt-link.h"
 
 #include "builtin-defun-decls.h"
 
 namespace QtHandles
 {
 
diff --git a/libinterp/corefcn/gl2ps-renderer.cc b/libinterp/corefcn/gl2ps-print.cc
rename from libinterp/corefcn/gl2ps-renderer.cc
rename to libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-renderer.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -19,32 +19,128 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "error.h"
-#include "gl2ps-renderer.h"
-#include "oct-opengl.h"
-#include "txt-eng-ft.h"
+#include "errwarn.h"
+#include "gl2ps-print.h"
 
 #ifdef HAVE_GL2PS_H
 
 #include <cstdio>
+#include <unistd.h>
+
+#include <gl2ps.h>
 
 #include "lo-mappers.h"
 #include "oct-locbuf.h"
 #include "unwind-prot.h"
 
-#include "gl2ps.h"
+#include "gl-render.h"
+#include "oct-opengl.h"
 #include "sysdep.h"
-#include "unistd.h"
+#include "txt-eng-ft.h"
+
+class
+OCTINTERP_API
+gl2ps_renderer : public opengl_renderer
+{
+public:
+
+  gl2ps_renderer (FILE *_fp, const std::string& _term)
+    : opengl_renderer () , fp (_fp), term (_term), fontsize (),
+      fontname (), buffer_overflow (false)
+  { }
+
+  ~gl2ps_renderer (void) { }
+
+  void draw (const graphics_object& go, const std::string& print_cmd);
+
+protected:
+
+  Matrix render_text (const std::string& txt,
+                      double x, double y, double z,
+                      int halign, int valign, double rotation = 0.0);
+
+  void set_font (const base_properties& props);
+
+  void draw_axes (const axes::properties& props)
+  {
+    // Initialize a sorting tree (viewport) in gl2ps for each axes
+    GLint vp[4];
+    glGetIntegerv (GL_VIEWPORT, vp);
+    gl2psBeginViewport (vp);
+
+    // Draw and finish () or there may primitives missing in the
+    // gl2ps output.
+    opengl_renderer::draw_axes (props);
+    finish ();
+
+    // Finalize viewport
+    GLint state = gl2psEndViewport ();
+    if (state == GL2PS_NO_FEEDBACK)
+      warning ("gl2ps_renderer::draw_axes: empty feedback buffer and/or nothing else to print");
+    else if (state == GL2PS_ERROR)
+      error ("gl2ps_renderer::draw_axes: gl2psEndPage returned GL2PS_ERROR");
+
+    buffer_overflow |= (state == GL2PS_OVERFLOW);
+  }
+
+  void draw_text (const text::properties& props);
+  void draw_pixels (GLsizei w, GLsizei h, GLenum format,
+                    GLenum type, const GLvoid *data);
+
+  void set_linestyle (const std::string& s, bool use_stipple = false)
+  {
+    opengl_renderer::set_linestyle (s, use_stipple);
+
+    if (s == "-" && ! use_stipple)
+      gl2psDisable (GL2PS_LINE_STIPPLE);
+    else
+      gl2psEnable (GL2PS_LINE_STIPPLE);
+  }
+
+  void set_polygon_offset (bool on, float offset = 0.0f)
+  {
+    if (on)
+      {
+        opengl_renderer::set_polygon_offset (on, offset);
+        gl2psEnable (GL2PS_POLYGON_OFFSET_FILL);
+      }
+    else
+      {
+        gl2psDisable (GL2PS_POLYGON_OFFSET_FILL);
+        opengl_renderer::set_polygon_offset (on, offset);
+      }
+  }
+
+  void set_linewidth (float w)
+  {
+    gl2psLineWidth (w);
+  }
+
+private:
+
+  // Use xform to compute the coordinates of the ft_string list
+  // that have been parsed by freetype
+  void fix_strlist_position (double x, double y, double z,
+                             Matrix box, double rotation,
+                             std::list<ft_render::ft_string>& lst);
+
+  int alignment_to_mode (int ha, int va) const;
+  FILE *fp;
+  caseless_str term;
+  double fontsize;
+  std::string fontname;
+  bool buffer_overflow;
+};
 
 void
 gl2ps_renderer::draw (const graphics_object& go, const std::string& print_cmd)
 {
   static bool in_draw = false;
   static std::string old_print_cmd;
 
   if (! in_draw)
diff --git a/libinterp/corefcn/gl2ps-renderer.h b/libinterp/corefcn/gl2ps-print.h
rename from libinterp/corefcn/gl2ps-renderer.h
rename to libinterp/corefcn/gl2ps-print.h
--- a/libinterp/corefcn/gl2ps-renderer.h
+++ b/libinterp/corefcn/gl2ps-print.h
@@ -18,114 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_gl2ps_renderer_h)
 #define octave_gl2ps_renderer_h 1
 
-#include "graphics.h"
-
-#ifdef HAVE_GL2PS_H
-
-#include "gl-render.h"
-#include <gl2ps.h>
-
-class
-OCTINTERP_API
-gl2ps_renderer : public opengl_renderer
-{
-public:
-  gl2ps_renderer (FILE *_fp, const std::string& _term)
-    : opengl_renderer () , fp (_fp), term (_term), fontsize (),
-    fontname (), buffer_overflow (false) { }
-
-  ~gl2ps_renderer (void) { }
-
-  void draw (const graphics_object& go, const std::string& print_cmd);
-
-protected:
-
-  Matrix render_text (const std::string& txt,
-                      double x, double y, double z,
-                      int halign, int valign, double rotation = 0.0);
-
-  void set_font (const base_properties& props);
-
-  void draw_axes (const axes::properties& props)
-  {
-    // Initialize a sorting tree (viewport) in gl2ps for each axes
-    GLint vp[4];
-    glGetIntegerv (GL_VIEWPORT, vp);
-    gl2psBeginViewport (vp);
-
-    // Draw and finish () or there may primitives missing in the
-    // gl2ps output.
-    opengl_renderer::draw_axes (props);
-    finish ();
-
-    // Finalize viewport
-    GLint state = gl2psEndViewport ();
-    if (state == GL2PS_NO_FEEDBACK)
-      warning ("gl2ps_renderer::draw_axes: empty feedback buffer and/or nothing else to print");
-    else if (state == GL2PS_ERROR)
-      error ("gl2ps_renderer::draw_axes: gl2psEndPage returned GL2PS_ERROR");
-
-    buffer_overflow |= (state == GL2PS_OVERFLOW);
-  }
+#include <string>
 
-  void draw_text (const text::properties& props);
-  void draw_pixels (GLsizei w, GLsizei h, GLenum format,
-                    GLenum type, const GLvoid *data);
-
-  void set_linestyle (const std::string& s, bool use_stipple = false)
-  {
-    opengl_renderer::set_linestyle (s, use_stipple);
-
-    if (s == "-" && ! use_stipple)
-      gl2psDisable (GL2PS_LINE_STIPPLE);
-    else
-      gl2psEnable (GL2PS_LINE_STIPPLE);
-  }
-
-  void set_polygon_offset (bool on, float offset = 0.0f)
-  {
-    if (on)
-      {
-        opengl_renderer::set_polygon_offset (on, offset);
-        gl2psEnable (GL2PS_POLYGON_OFFSET_FILL);
-      }
-    else
-      {
-        gl2psDisable (GL2PS_POLYGON_OFFSET_FILL);
-        opengl_renderer::set_polygon_offset (on, offset);
-      }
-  }
-
-  void set_linewidth (float w)
-  {
-    gl2psLineWidth (w);
-  }
-
-private:
-  // Use xform to compute the coordinates of the ft_string list
-  // that have been parsed by freetype
-  void fix_strlist_position (double x, double y, double z,
-                             Matrix box, double rotation,
-                             std::list<ft_render::ft_string>& lst);
-
-private:
-  int alignment_to_mode (int ha, int va) const;
-  FILE *fp;
-  caseless_str term;
-  double fontsize;
-  std::string fontname;
-  bool buffer_overflow;
-};
-
-#endif
+#include "graphics.h"
 
 extern OCTINTERP_API void
 gl2ps_print (const graphics_object& fig, const std::string& stream,
              const std::string& term);
 
 #endif
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -33,17 +33,17 @@ COREFCN_INC = \
   libinterp/corefcn/dirfns.h \
   libinterp/corefcn/display.h \
   libinterp/corefcn/dynamic-ld.h \
   libinterp/corefcn/error.h \
   libinterp/corefcn/errwarn.h \
   libinterp/corefcn/event-queue.h \
   libinterp/corefcn/file-io.h \
   libinterp/corefcn/gl-render.h \
-  libinterp/corefcn/gl2ps-renderer.h \
+  libinterp/corefcn/gl2ps-print.h \
   libinterp/corefcn/gripes.h \
   libinterp/corefcn/help.h \
   libinterp/corefcn/hook-fcn.h \
   libinterp/corefcn/input.h \
   libinterp/corefcn/load-path.h \
   libinterp/corefcn/load-save.h \
   libinterp/corefcn/ls-ascii-helper.h \
   libinterp/corefcn/ls-hdf5.h \
@@ -157,17 +157,17 @@ COREFCN_SRC = \
   libinterp/corefcn/find.cc \
   libinterp/corefcn/gammainc.cc \
   libinterp/corefcn/gcd.cc \
   libinterp/corefcn/getgrent.cc \
   libinterp/corefcn/getpwent.cc \
   libinterp/corefcn/getrusage.cc \
   libinterp/corefcn/givens.cc \
   libinterp/corefcn/gl-render.cc \
-  libinterp/corefcn/gl2ps-renderer.cc \
+  libinterp/corefcn/gl2ps-print.cc \
   libinterp/corefcn/graphics.cc \
   libinterp/corefcn/gripes.cc \
   libinterp/corefcn/hash.cc \
   libinterp/corefcn/help.cc \
   libinterp/corefcn/hess.cc \
   libinterp/corefcn/hex2num.cc \
   libinterp/corefcn/hook-fcn.cc \
   libinterp/corefcn/input.cc \
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -82,17 +82,17 @@ To initialize:
 
 #include "cmd-edit.h"
 #include "lo-ieee.h"
 #include "oct-env.h"
 
 #include "display.h"
 #include "file-ops.h"
 #include "gl-render.h"
-#include "gl2ps-renderer.h"
+#include "gl2ps-print.h"
 #include "graphics.h"
 #include "parse.h"
 #include "toplev.h"
 #include "variables.h"
 
 #define FLTK_GRAPHICS_TOOLKIT_NAME "fltk"
 
 const char* help_text = "\
diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -28,17 +28,17 @@ from git://anongit.freedesktop.org/mesa/
 #endif
 
 #include "oct-locbuf.h"
 #include "unwind-prot.h"
 
 #include "defun-dld.h"
 #include "errwarn.h"
 #include "gl-render.h"
-#include "gl2ps-renderer.h"
+#include "gl2ps-print.h"
 #include "graphics.h"
 #include "oct-opengl.h"
 
 #if defined (HAVE_OSMESA_H)
 #  include "osmesa.h"
 #elif defined (HAVE_GL_OSMESA_H)
 #  include "GL/osmesa.h"
 #endif
