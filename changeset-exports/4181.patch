# HG changeset patch
# User jwe
# Date 1037385221 0
#      Fri Nov 15 18:33:41 2002 +0000
# Node ID dd2abf428f5d2a40b3084864f6683262c09790e1
# Parent  84fe3ca3a246dce4e514ef673785b678ffb659be
[project @ 2002-11-15 18:33:41 by jwe]

diff --git a/libcruft/misc/quit.cc b/libcruft/misc/quit.cc
--- a/libcruft/misc/quit.cc
+++ b/libcruft/misc/quit.cc
@@ -99,17 +99,17 @@ void
 octave_throw_interrupt_exception (void)
 {
   throw octave_interrupt_exception ();
 }
 
 void
 octave_throw_bad_alloc (void)
 {
-  throw bad_alloc ();
+  throw std::bad_alloc ();
 }
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/libcruft/misc/quit.h b/libcruft/misc/quit.h
--- a/libcruft/misc/quit.h
+++ b/libcruft/misc/quit.h
@@ -143,17 +143,17 @@ extern void octave_throw_bad_alloc (void
 
 #define END_INTERRUPT_WITH_EXCEPTIONS \
     } \
   OCTAVE_CATCH_INTERRUPTS \
     { \
       SET_OCTAVE_INTERRUPT_IMMEDIATELY (saved_octave_interrupt_immediately); \
       octave_jump_to_enclosing_context (); \
     } \
-  catch (bad_alloc) \
+  catch (std::bad_alloc) \
     { \
       SET_OCTAVE_INTERRUPT_IMMEDIATELY (saved_octave_interrupt_immediately); \
       octave_allocation_error = 1; \
       octave_jump_to_enclosing_context (); \
     } \
  \
   SET_OCTAVE_INTERRUPT_IMMEDIATELY (saved_octave_interrupt_immediately)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2002-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sighandlers.cc (OCTAVE_MEMORY_EXHAUSTED_ERROR): Delete.
+
 2002-11-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sighandlers.cc (octave_new_handler): Delete.
 	(install_signal_handlers): Don't call set_new_handler.
 	* toplev.cc (main_loop): Handle bad_alloc exception here.
 
 	* sighandlers.cc (octave_new_handler): Allow return after
 	OCTAVE_JUMP_TO_TOP_LEVEL.
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -73,22 +73,16 @@ bool can_interrupt = false;
 #define MAYBE_ACK_SIGNAL(sig) \
   octave_set_signal_handler (sig, SIG_ACK)
 #define ACK_USES_SIG 1
 #else
 #define MAYBE_ACK_SIGNAL(sig) \
   do { } while (0)
 #endif
 
-#if defined (SIGABRT)
-#define OCTAVE_MEMORY_EXHAUSTED_ERROR SIGABRT
-#else
-#define OCTAVE_MEMORY_EXHAUSTED_ERROR (-1)
-#endif
-
 static void
 my_friendly_exit (const char *sig_name, int sig_number)
 {
   static bool been_there_done_that = false;
 
   if (been_there_done_that)
     {
 #if defined (SIGABRT)
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -186,17 +186,17 @@ main_loop (void)
 		break;
 	    }
 	}
       OCTAVE_CATCH_INTERRUPTS
 	{
 	  recover_from_exception ();
 	  std::cout << "\n";
 	}
-      catch (bad_alloc)
+      catch (std::bad_alloc)
 	{
 	  recover_from_exception ();
 	  std::cerr
 	    << "error: memory exhausted -- trying to return to prompt\n";
 	}
     }
   while (retval == 0);
 
