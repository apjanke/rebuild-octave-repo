# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546839141 28800
#      Sun Jan 06 21:32:21 2019 -0800
# Branch stable
# Node ID 9baba1815f1c9782ffac2c2e2c2bb6068ca5def8
# Parent  c69b7519d7ebf481f5322fdf3aa3b42a7dc9494b
uniconv-wrappers.c: Fix static analyzer detected issues (bug #55347).

* uniconv-wrappers.c (u8_from_wchar, u8_to_wchar): Check for valid pointer from
malloc before proceeding.

diff --git a/liboctave/wrappers/uniconv-wrappers.c b/liboctave/wrappers/uniconv-wrappers.c
--- a/liboctave/wrappers/uniconv-wrappers.c
+++ b/liboctave/wrappers/uniconv-wrappers.c
@@ -71,19 +71,24 @@ u8_from_wchar (const wchar_t *wc)
   const char *src = (const char *) wc;
 
   size_t length = 0;
   uint8_t *mbchar = u8_conv_from_encoding ("wchar_t", iconveh_question_mark,
                                            src, srclen, NULL, NULL, &length);
 
   // result might not be 0 terminated
   char *retval = malloc (length + 1);
-  memcpy (retval, mbchar, length);
-  free ((void *) mbchar);
-  retval[length] = 0; // 0 terminate string
+  if (retval)
+    {
+      memcpy (retval, mbchar, length);
+      free ((void *) mbchar);
+      retval[length] = 0; // 0 terminate string
+    }
+  else
+    free ((void *) mbchar);
 
   return retval;
 }
 
 wchar_t *
 u8_to_wchar (const char *u8)
 {
   // Convert multibyte UTF-8 char array to wide char array
@@ -93,14 +98,20 @@ u8_to_wchar (const char *u8)
   const uint8_t *src = (const uint8_t *) u8;
 
   size_t length = 0;
 
   char *wchar = u8_conv_to_encoding ("wchar_t", iconveh_question_mark,
                                      src, srclen, NULL, NULL, &length);
   // result might not be 0 terminated
   wchar_t *retval = malloc (length + 1 * sizeof (wchar_t));
-  memcpy (retval, wchar, length);
-  free ((void *) wchar);
-  retval[length / sizeof (wchar_t)] = 0; // 0 terminate string
+  if (retval)
+    {
+      memcpy (retval, wchar, length);
+      free ((void *) wchar);
+      retval[length / sizeof (wchar_t)] = 0; // 0 terminate string
+    }
+
+  else
+    free ((void *) wchar);
 
   return retval;
 }
