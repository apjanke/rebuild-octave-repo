# HG changeset patch
# User jwe
# Date 862260075 0
#      Mon Apr 28 20:41:15 1997 +0000
# Node ID 64ff56723e751b339a0c2ac435ee8e350fc7ace6
# Parent  cbe70c49b0b79ca222f86a9f7d21597a9ab4020b
[project @ 1997-04-28 20:38:58 by jwe]

diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -466,17 +466,17 @@ do_edit_history (int argc, const string_
   // sense.
 
   begin_unwind_frame ("do_edit_history");
   unwind_protect_int (Vecho_executing_commands);
   unwind_protect_int (input_from_tmp_history_file);
   Vecho_executing_commands = ECHO_CMD_LINE;
   input_from_tmp_history_file = 1;
 
-  parse_and_execute (name, 1);
+  parse_and_execute (name);
 
   run_unwind_frame ("do_edit_history");
 
   // Delete the temporary file.  Should probably be done with an
   // unwind_protect.
 
   unlink (name.c_str ());
 }
@@ -493,17 +493,17 @@ do_run_history (int argc, const string_v
   // sense.
 
   begin_unwind_frame ("do_run_history");
   unwind_protect_int (Vecho_executing_commands);
   unwind_protect_int (input_from_tmp_history_file);
   Vecho_executing_commands = ECHO_CMD_LINE;
   input_from_tmp_history_file = 1;
 
-  parse_and_execute (name, 1);
+  parse_and_execute (name);
 
   run_unwind_frame ("do_run_history");
 
   // Delete the temporary file.
 
   // XXX FIXME XXX -- should probably be done using an unwind_protect.
 
   unlink (name.c_str ());
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -257,19 +257,19 @@ execute_startup_files (void)
 
   if (read_site_files)
     {
       // Execute commands from the site-wide configuration file.
       // First from the file $(prefix)/lib/octave/site/m/octaverc
       // (if it exists), then from the file
       // $(prefix)/lib/octave/$(version)/m/octaverc (if it exists).
 
-      parse_and_execute (Vlocal_site_defaults_file, 0, verbose);
+      parse_and_execute (Vlocal_site_defaults_file, verbose);
 
-      parse_and_execute (Vsite_defaults_file, 0, verbose);
+      parse_and_execute (Vsite_defaults_file, verbose);
     }
 
   if (read_init_files)
     {
       // Try to execute commands from $HOME/$OCTAVE_INITFILE and
       // $OCTAVE_INITFILE.  If $OCTAVE_INITFILE is not set, .octaverc
       // is assumed.
 
@@ -280,33 +280,33 @@ execute_startup_files (void)
       if (! initfile)
 	initfile = ".octaverc";
 
       string home_rc = Vhome_directory + "/" + initfile;
       string local_rc = string ("./") + initfile;
 
       if (! Vhome_directory.empty ())
 	{
-	  parse_and_execute (home_rc, 0, verbose);
+	  parse_and_execute (home_rc, verbose);
 
 	  // Names alone are not enough.
 
 	  file_stat fs_home_rc (home_rc);
 
 	  if (fs_home_rc)
 	    {
 	      file_stat fs_dot_rc (local_rc);
 
 	      if (fs_dot_rc && fs_home_rc.ino () == fs_dot_rc.ino ())
 		home_rc_already_executed = 1;
 	    }
 	}
 
       if (! home_rc_already_executed)
-	parse_and_execute (local_rc, 0, verbose);
+	parse_and_execute (local_rc, verbose);
     }
 
   run_unwind_frame ("execute_startup_files");
 }
 
 // Usage message with extra help.
 
 static void
diff --git a/src/pt-cmd.cc b/src/pt-cmd.cc
--- a/src/pt-cmd.cc
+++ b/src/pt-cmd.cc
@@ -193,17 +193,18 @@ tree_while_command::eval (void)
     panic_impossible ();
 
   for (;;)
     {
       if (expr->is_logically_true ("while"))
 	{
 	  if (list)
 	    {
-	      list->eval (true);
+	      list->eval ();
+
 	      if (error_state)
 		{
 		  eval_error ();
 		  return;
 		}
 	    }
 
 	  if (quit_loop_now ())
@@ -251,17 +252,18 @@ tree_for_command::do_for_loop_once (tree
   if (error_state)
     {
       eval_error ();
       return;
     }
 
   if (list)
     {
-      list->eval (true);
+      list->eval ();
+
       if (error_state)
 	{
 	  eval_error ();
 	  quit = true;
 	  return;
 	}
     }
 
@@ -281,17 +283,18 @@ tree_for_command::do_for_loop_once (tree
   if (error_state)
     {
       eval_error ();
       return;
     }
 
   if (list)
     {
-      list->eval (true);
+      list->eval ();
+
       if (error_state)
 	{
 	  eval_error ();
 	  quit = true;
 	  return;
 	}
     }
 
@@ -311,17 +314,18 @@ tree_for_command::do_for_loop_once (tree
       eval_error ();
       return;
     }
 
   tmp.assign (octave_value::asn_eq, rhs);
 
   if (list)
     {
-      list->eval (true);
+      list->eval ();
+
       if (error_state)
 	{
 	  eval_error ();
 	  quit = true;
 	  return;
 	}
     }
 
@@ -668,17 +672,17 @@ do_catch_code (void *ptr)
 
   unwind_protect_int (returning);
   returning = 0;
 
   unwind_protect_int (breaking);
   breaking = 0;
 
   if (list)
-    list->eval (true);
+    list->eval ();
 
   // This is the one for breaking.  (The unwind_protects are popped
   // off the stack in the reverse of the order they are pushed on).
 
   // XXX FIXME XXX -- inside a try-catch, should break work like
   // a return, or just jump to the end of the try_catch block?
   // The following code makes it just jump to the end of the block.
 
@@ -705,17 +709,17 @@ tree_try_catch_command::eval (void)
 
   if (catch_code)
     {
       unwind_protect_int (buffer_error_messages);
       buffer_error_messages = 1;
     }
 
   if (try_code)
-    try_code->eval (true);
+    try_code->eval ();
 
   if (catch_code && error_state)
     {
       error_state = 0;
       run_unwind_frame ("tree_try_catch::eval");
     }
   else
     {
@@ -758,17 +762,17 @@ do_unwind_protect_cleanup_code (void *pt
 
   unwind_protect_int (returning);
   returning = 0;
 
   unwind_protect_int (breaking);
   breaking = 0;
 
   if (list)
-    list->eval (true);
+    list->eval ();
 
   // This is the one for breaking.  (The unwind_protects are popped
   // off the stack in the reverse of the order they are pushed on).
 
   // XXX FIXME XXX -- inside an unwind_protect, should break work like
   // a return, or just jump to the end of the unwind_protect block?
   // The following code makes it just jump to the end of the block.
 
@@ -794,17 +798,17 @@ do_unwind_protect_cleanup_code (void *pt
 }
 
 void
 tree_unwind_protect_command::eval (void)
 {
   add_unwind_protect (do_unwind_protect_cleanup_code, cleanup_code);
 
   if (unwind_protect_code)
-    unwind_protect_code->eval (true);
+    unwind_protect_code->eval ();
 
   run_unwind_protect ();
 }
 
 void
 tree_unwind_protect_command::accept (tree_walker& tw)
 {
   tw.visit_unwind_protect_command (*this);
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -32,24 +32,24 @@ class tree_statement_list;
 class charMatrix;
 
 #include <string>
 
 extern void
 clean_up_and_exit (int) GCC_ATTR_NORETURN;
 
 extern void
-parse_and_execute (FILE *f, bool print = false);
+parse_and_execute (FILE *f);
 
 extern void
-parse_and_execute (const string& s, bool print = false, bool verbose = false,
+parse_and_execute (const string& s, bool verbose = false,
 		   const char *warn_for = 0);
 
 extern octave_value
-eval_string (const string&, bool print, int& parse_status);
+eval_string (const string&, bool silent, int& parse_status);
 
 extern int
 main_loop (void);
 
 extern void
 do_octave_atexit (void);
 
 extern void
