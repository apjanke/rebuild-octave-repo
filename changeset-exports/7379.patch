# HG changeset patch
# User jwe
# Date 1200422550 0
#      Tue Jan 15 18:42:30 2008 +0000
# Node ID a78c7bccda913d03f75820bd3dd02d3106df15e8
# Parent  3771971e88918364925d10b7c102c88427e8edaf
[project @ 2008-01-15 18:42:29 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,19 @@
+2008-01-15  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* plot/drawnow.m, plot/__go_draw_figure__.m, plot/__go_draw_axes__.m: 
+	Call __get__ instead of get.
+
+2008-01-15  Ben Abbott  <bpabbott@mac.com>
+
+	* linear-algebra/__norm__.m: Avoid divide by zero error for
+	Frobenius norm if matrix is all zeros.  Use transpose instead of
+	hermitian operator.
+
 2008-01-14  Bill Denney  <bill@denney.ws>
 
 	* plot/axis.m: Correctly handle "tight" and "image" options.
 
 2008-01-14  Soren Hauberg  <hauberg@gmail.com>
 
 	* image/hsv2rgb.m, image/ntsc2rgb.m, image/rgb2hsv.m,
 	image/rgb2ntsc.m: Also accept images as input.
diff --git a/scripts/linear-algebra/__norm__.m b/scripts/linear-algebra/__norm__.m
--- a/scripts/linear-algebra/__norm__.m
+++ b/scripts/linear-algebra/__norm__.m
@@ -39,55 +39,85 @@ function retval = __norm__ (x, p)
     p = 2;
   endif
 
   ## Do we have a vector or matrix as the first argument?
   if (ndims(x) == 2 && (rows (x) == 1 || columns (x) == 1))
     if (ischar (p))
       if (strcmp (p, "fro"))
         inf_norm = norm (x, "inf");
-	retval = inf_norm .* sqrt (sum (abs (x ./ inf_norm) .^ 2));
+        if (inf_norm)
+          retval = inf_norm .* sqrt (sum (abs (x ./ inf_norm) .^ 2));
+        else
+          retval = inf_norm;
+        endif
       elseif (strcmp (p, "inf"))
         retval = max (abs (x));
       else
         error ("norm: unrecognized norm");
       endif
     else
       if (p == Inf)
         retval = max (abs (x));
       elseif (p == -Inf)
         retval = min (abs (x));
       elseif (p == 1)
-	retval = sum (abs (x));
+        retval = sum (abs (x));
       elseif (p == 2)
         if (iscomplex (x))
           x = abs (x);
         endif
         retval = sqrt (sumsq (x));
       else
         retval = sum (abs (x) .^ p) ^ (1/p);
       endif
     endif
   else
     if (ischar (p))
       if (strcmp (p, "fro"))
         inf_norm = norm (x, "inf");
-	retval = inf_norm .* sqrt (sum (sum (abs (x ./ inf_norm) .^ 2)));
+        if (inf_norm)
+          retval = inf_norm .* sqrt (sum (sum (abs (x ./ inf_norm) .^ 2)));
+        else
+          retval = inf_norm;
+        endif
       elseif (strcmp (p, "inf"))
-        retval = max (sum (abs (x')));
+        retval = max (sum (abs (x.')));
       else
         error ("norm: unrecognized vector norm");
       endif
     else
       if (p == 1)
         retval = max (sum (abs (x)));
       elseif (p == 2)
         s = svd (x);
         retval = s (1);
       elseif (p == Inf)
-        retval = max (sum (abs (x')));
+        retval = max (sum (abs (x.')));
       else
-	error ("norm: unrecognized matrix norm");
+        error ("norm: unrecognized matrix norm");
       endif
     endif
   endif
 
 endfunction
+
+%!test
+%! x = __norm__ (zeros (5), "fro");
+%! assert (x, 0);
+%! x = __norm__ (ones (5), "fro");
+%! assert (x, 5);
+%! x = __norm__ (zeros (5,1), "fro");
+%! assert (x, 0);
+%! x = __norm__ (2*ones (5,3), "fro");
+%! assert (x, sqrt (60));
+
+%!test
+%! x = __norm__ (zeros (5), "inf");
+%! assert (x, 0);
+%! x = __norm__ (ones (5), "inf");
+%! assert (x, 5);
+%! x = __norm__ (2*ones (5,1), "inf");
+%! assert (x, 0);
+%! x = __norm__ (2*ones (5,3), "inf");
+%! assert (x, 6);
+
+
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -19,17 +19,17 @@
 ## Undocumented internal function.
 
 ## Author: jwe
 
 function __go_draw_axes__ (h, plot_stream, enhanced, mono)
 
   if (nargin == 4)
 
-    axis_obj = get (h);
+    axis_obj = __get__ (h);
 
     parent_figure_obj = get (axis_obj.parent);
 
     persistent have_newer_gnuplot ...
       = compare_versions (__gnuplot_version__ (), "4.0", ">");
 
     ## Set axis properties here?
     pos = [0, 0, 1, 1];
diff --git a/scripts/plot/__go_draw_figure__.m b/scripts/plot/__go_draw_figure__.m
--- a/scripts/plot/__go_draw_figure__.m
+++ b/scripts/plot/__go_draw_figure__.m
@@ -28,17 +28,17 @@ function __go_draw_figure__ (f, plot_str
       ## Set figure properties here?
 
       kids = f.children;
       nkids = length (kids);
 
       if (nkids > 0)
 	axes_count = 0;
 	for i = 1:nkids
-	  obj = get (kids(i));
+	  obj = __get__ (kids(i));
 	  switch (obj.type)
 	    case "axes"
 	      axes_count++;
 	      ## Force multiplot with a colorbar to ensure colorbar on the page
 	      if (!strcmp (obj.__colorbar__, "none"))
 		axes_count++;
 	      endif
 	  endswitch
diff --git a/scripts/plot/drawnow.m b/scripts/plot/drawnow.m
--- a/scripts/plot/drawnow.m
+++ b/scripts/plot/drawnow.m
@@ -44,17 +44,17 @@ function drawnow (term, file, mono, debu
 
     if (nargin >= 2 && nargin <= 4)
       [dnm, fnm, ext] = fileparts (file);
       if (! (isempty (dnm) || isdir (dnm)))
 	error ("drawnow: nonexistent directory `%s'", dnm);
       endif
       h = get (0, "currentfigure");
       if (h)
-	f = get (h);
+	f = __get__ (h);
 	plot_stream = [];
 	fid = [];
 	unwind_protect
 	  [plot_stream, enhanced] = open_gnuplot_stream ([], term, file);
 	  __go_draw_figure__ (f, plot_stream, enhanced, mono);
 	  if (nargin == 4)
 	    fid = fopen (debug_file, "wb");
 	    enhanced = init_plot_stream (fid, [], term, file);
@@ -69,17 +69,17 @@ function drawnow (term, file, mono, debu
 	  endif
 	end_unwind_protect
       else
 	error ("drawnow: nothing to draw");
       endif
     elseif (nargin == 0)
       for h = __go_figure_handles__ ()
 	if (! (isnan (h) || h == 0))
-	  f = get (h);
+	  f = __get__ (h);
 	  if (f.__modified__)
 	    plot_stream = f.__plot_stream__;
 	    figure_is_visible = strcmp (f.visible, "on");
 	    if (figure_is_visible)
 	      if (isempty (plot_stream))
 		[plot_stream, enhanced] = open_gnuplot_stream (h);
 		set (h, "__enhanced__", enhanced);
 	      else
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,32 @@
+2008-01-15  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* genprops.awk: Handle 'h' modifier for hidden properties.
+	Replace "get(void)" method with "get(bool all = false)" to allow
+	access to hidden properties.
+
+	* graphics.h.in (base_properties::get, base_graphics_object::get,
+	graphics_object::get, root_figure::get, figure::get, axes::get,
+	line::get, text::get, patch::get, surface::get, image::get):
+	New arg, ALL, to access hidden properties.
+	(gh_manager::do_get_object): Do not look for invalid handles.
+	(figure::properties::__plot_stream__,
+	figure::properties::__enhanced__, axes::properties::__colorbar__):
+	Make properties hidden.
+	(axes::properties, line::properties, text::properties,
+	patch::properties, surface::properties): Remove obsolete 'a'
+	property modifier.
+	* graphics.cc (base_properties::get): New arg ALL, to access
+	hidden properties.
+	(base_properties::mark_modified): Call mark_modified only on valid
+	parent object.
+	(__get__): New internal function returning all properties,
+	including the hidden ones.
+
 2008-01-15  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (properties::set_currentfigure,
 	properties::set_currentaxes): Don't convert arg to double
 	before passing to graphics_handle constructor.
 	(base_properties::remove_child): Call mark_modified if list of
 	children changes.
 
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -46,17 +46,17 @@
 ##
 ##   void
 ##   set_NAME (const octave_value& val)
 ##   {
 ##     set_NAME (TYPE (val));
 ##   }
 ##
 ## If present, the QUALIFIERS string may include any of the characters
-## g, G, m, s, S, o, O, which have the following meanings:
+## g, G, m, s, S, o, O, h, which have the following meanings:
 ##
 ##   g:  There is a custom inline definition for the get function,
 ##       so we don't emit one.
 ##
 ##   G:  There is a custom extern definition for the get function,
 ##       so we emit only the declaration.
 ##
 ##   s:  There is a custom inline definition for the type-specific set
@@ -101,16 +101,18 @@
 ##       to the type-specific set function.
 ##
 ##   m:  Add the line
 ##
 ##         set_NAMEmode ("manual");
 ##
 ##       to the type-specific set function.
 ##
+##   h:  Make the property hidden
+##
 ## The 'o' and 'O' qualifiers are only useful when the the property type
 ## is something other than octave_value.
 
 ## simple accessor
 
 function emit_get_accessor (i, rtype, faccess)
 {
   printf ("  %s get_%s (void) const", rtype, name[i]);
@@ -199,17 +201,17 @@ function emit_get_data (i)
 ## common section
 
 function emit_common_declarations ()
 {
   printf ("public:\n");
   printf ("  properties (const graphics_handle& mh, const graphics_handle& p);\n\n");
   printf ("  ~properties (void) { }\n\n");
   printf ("  void set (const caseless_str& name, const octave_value& val);\n\n");
-  printf ("  octave_value get (void) const;\n\n");
+  printf ("  octave_value get (bool all = false) const;\n\n");
   printf ("  octave_value get (const caseless_str& name) const;\n\n");
   printf ("  std::string graphics_object_name (void) const { return go_name; }\n\n");
   printf ("  static property_list::pval_map_type factory_defaults (void);\n\n");
   printf ("private:\n  static std::string go_name;\n\n");
 }
 
 function emit_declarations ()
 {
@@ -317,45 +319,53 @@ function emit_source ()
     for (i = 1; i <= idx; i++)
     {
       printf ("    %s (\"%s\", mh, %s)", name[i], name[i], default[i]) >> filename;
       if (i < idx)
         printf (",") >> filename;
       printf ("\n") >> filename;
     }
 
-    printf ("{\n  init ();\n") >> filename;
+    printf ("{\n") >> filename;
 
-##    for (i = 1; i <= idx; i++)
-##      printf ("  insert_static_property (\"%s\", %s);\n", name[i], name[i]) >> filename;
+    for (i = 1; i <= idx; i++)
+    {
+##    printf ("  insert_static_property (\"%s\", %s);\n", name[i], name[i]) >> filename;
+      if (hidden[i])
+        printf ("  %s.set_hidden (true);\n", name[i]) >> filename;
+    }
 
-    printf ("}\n\n") >> filename;
+    printf ("  init ();\n}\n\n") >> filename;
 
     ## set method
 
     printf ("void\n%s::properties::set (const caseless_str& name, const octave_value& val)\n{\n",
             class_name) >> filename;
 
     for (i = 1; i <= idx; i++)
     {
       printf ("  %sif (name.compare (\"%s\"))\n    set_%s (val);\n",
               (i > 1 ? "else " : ""), name[i], name[i]) >> filename;
     }
 
     printf ("  else\n    base_properties::set (name, val);\n}\n\n") >> filename;
 
     ## get "all" method
 
-    printf ("octave_value\n%s::properties::get (void) const\n{\n", class_name) >> filename;
-    printf ("  Octave_map m = base_properties::get ().map_value ();\n\n") >> filename;
+    printf ("octave_value\n%s::properties::get (bool all) const\n{\n", class_name) >> filename;
+    printf ("  Octave_map m = base_properties::get (all).map_value ();\n\n") >> filename;
 
     for (i = 1; i <= idx; i++)
     {
-      printf ("  m.assign (\"%s\", get_%s ()%s);\n", name[i], name[i],
-              (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
+      if (hidden[i])
+        printf ("  if (all)\n    m.assign (\"%s\", get_%s ()%s);\n", name[i], name[i],
+                (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
+      else
+        printf ("  m.assign (\"%s\", get_%s ()%s);\n", name[i], name[i],
+                (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
     }
 
     printf ("\n  return m;\n}\n\n") >> filename;
     
     ## get "one" method
 
     printf ("octave_value\n%s::properties::get (const caseless_str& name) const\n{\n",
             class_name) >> filename;
@@ -444,16 +454,17 @@ BEGIN {
     else
       mutable[idx] = 0;
 
     type[idx] = $(field++);
     name[idx] = $(field++);
 
     limits[idx] = 0;
     mode[idx] = 0;
+	hidden[idx] = 0;
     emit_get[idx] = "definition";
     emit_set[idx] = "definition";
     default[idx] = "";
 ##    if (type[idx] == "octave_value")
 ##      emit_ov_set[idx] = "";
 ##    else
 ##      emit_ov_set[idx] = "definition";
 
@@ -483,16 +494,20 @@ BEGIN {
         ## so we don't emit anything.
         if (index (quals, "s"))
           emit_set[idx] = "";
 
         ## There is a custom extern definition for the set function,
         ## but we still emit the declaration.
         if (index (quals, "S"))
           emit_set[idx] = "declaration";
+        
+		## The property is hidden
+        if (index (quals, "h"))
+          hidden[idx] = 1;
 
 ##        ## emmit an asignment set function
 ##        if (index (quals, "a"))
 ##          emit_ov_set[idx] = "assignment";
 ##
 ##        if (type[idx] != "octave_value")
 ##        {
 ##          ## The 'o' and 'O' qualifiers are only useful when the
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -949,27 +949,29 @@ base_properties::get (const caseless_str
     else
       error ("get: unknown property \"%s\"", name.c_str ());
   }
 
   return retval;
 }
 
 octave_value
-base_properties::get (void) const
+base_properties::get (bool all) const
 {
   Octave_map m;
 
   for (std::map<caseless_str, property>::const_iterator it = all_props.begin ();
        it != all_props.end (); ++it)
-    m.assign (it->second.get_name (), it->second.get ());
+    if (all || ! it->second.is_hidden ())
+      m.assign (it->second.get_name (), it->second.get ());
 
   m.assign ("tag", get_tag ());
   m.assign ("type", get_type ());
-  m.assign ("__modified__", is_modified ());
+  if (all)
+    m.assign ("__modified__", is_modified ());
   m.assign ("parent", get_parent ().as_octave_value ());
   m.assign ("children", children);
   m.assign ("busyaction", get_busyaction ());
   m.assign ("buttondownfcn", get_buttondownfcn ());
   m.assign ("clipping", get_clipping ());
   m.assign ("createfcn", get_createfcn ());
   m.assign ("deletefcn", get_deletefcn ());
   m.assign ("handlevisibility", get_handlevisibility ());
@@ -1102,17 +1104,18 @@ base_properties::set_parent (const octav
     error ("set: expecting parent to be a graphics handle");
 }
 
 void
 base_properties::mark_modified (void)
 {
   __modified__ = "on";
   graphics_object parent_obj = gh_manager::get_object (get_parent ());
-  parent_obj.mark_modified ();
+  if (parent_obj)
+    parent_obj.mark_modified ();
 }
 
 void
 base_properties::override_defaults (base_graphics_object& obj)
 {
   graphics_object parent_obj = gh_manager::get_object (get_parent ());
   parent_obj.override_defaults (obj);
 }
@@ -1965,16 +1968,71 @@ values or lists respectively.\n\
 	retval = Cell (vlist);
       else if (len == 1)
 	retval = vlist(0);
     }
 
   return retval;
 }
 
+DEFUN (__get__, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __get__ (@var{h})\n\
+Return all properties from the graphics handle @var{h}.\n\
+If @var{h} is a vector, return a cell array including the property\n\
+values or lists respectively.\n\
+@end deftypefn")
+{
+  octave_value retval;
+  octave_value_list vlist;
+
+  int nargin = args.length ();
+
+  if (nargin == 1)
+    {
+      ColumnVector hcv (args(0).vector_value ());
+
+      if (! error_state)
+        {
+          octave_idx_type len = hcv.length ();
+
+          vlist.resize (len);
+
+          for (octave_idx_type n = 0; n < len; n++)
+            {
+              graphics_object obj = gh_manager::get_object (hcv(n));
+
+              if (obj)
+                vlist(n) = obj.get (true);
+              else
+                {
+                  error ("get: invalid handle (= %g)", hcv(n));
+                  break;
+                }
+            }
+        }
+      else
+        error ("get: expecting graphics handle as first argument");
+    }
+  else
+    print_usage ();
+
+  if (! error_state)
+    {
+      octave_idx_type len = vlist.length ();
+
+      if (len > 1)
+        retval = Cell (vlist);
+      else if (len == 1)
+        retval = vlist(0);
+    }
+
+  return retval;
+}
+
 static octave_value
 make_graphics_object (const std::string& go_name,
 		      const octave_value_list& args)
 {
   octave_value retval;
 
   double val = args(0).double_value ();
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1000,17 +1000,17 @@ public:
       p.set_parent (__myhandle__);
       all_props[name] = p;
     }
 
   virtual void set (const caseless_str&, const octave_value&);
 
   virtual octave_value get (const caseless_str&) const;
 
-  virtual octave_value get (void) const;
+  virtual octave_value get (bool all = false) const;
 
   property get_property (const caseless_str&) const;
 
   std::string get_tag (void) const { return tag.string_value (); }
 
   graphics_handle get_parent (void) const { return parent.handle_value (); }
 
   std::string get_type (void) const { return type.string_value (); }
@@ -1309,17 +1309,17 @@ public:
     error ("base_graphics_object::set: invalid graphics object");
   }
 
   virtual void set_defaults (const std::string&)
   {
     error ("base_graphics_object::set_defaults: invalid graphics object");
   }
 
-  virtual octave_value get (void) const
+  virtual octave_value get (bool all = false) const
   {
     error ("base_graphics_object::get: invalid graphics object");
     return octave_value ();
   }
 
   virtual octave_value get (const caseless_str&) const
   {
     error ("base_graphics_object::get: invalid graphics object");
@@ -1448,17 +1448,17 @@ public:
   {
     rep->set (name, val);
   }
 
   void set (const octave_value_list& args);
 
   void set_defaults (const std::string& mode) { rep->set_defaults (mode); }
 
-  octave_value get (void) const { return rep->get (); }
+  octave_value get (bool all = false) const { return rep->get (all); }
 
   octave_value get (const caseless_str& name) const
   {
     return name.compare ("default")
       ? get_defaults ()
       : (name.compare ("factory")
 	 ? get_factory_defaults () : rep->get (name));
   }
@@ -1614,19 +1614,19 @@ public:
       // strip "default", pass rest to function that will
       // parse the remainder and add the element to the
       // default_properties map.
       default_properties.set (name.substr (7), value);
     else
       xproperties.set (name, value);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     octave_value retval;
 
     if (name.compare ("default", 7))
       return get_default (name.substr (7));
@@ -1705,18 +1705,18 @@ public:
   public:
     void close (void);
     void set_visible (const octave_value& val);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(figure)
-      any_property __plot_stream__ , Matrix ()
-      bool_property __enhanced__ , "on"
+      any_property __plot_stream__ h , Matrix ()
+      bool_property __enhanced__ h , "on"
       radio_property nextplot , "add|replace_children|{replace}"
       callback_property closerequestfcn , "closereq"
       handle_property currentaxes S , graphics_handle ()
       array_property colormap , jet_colormap ()
       radio_property paperorientation , "{portrait}|landscape"
       color_property color , color_values (1, 1, 1)
     END_PROPERTIES
     
@@ -1772,19 +1772,19 @@ public:
       // strip "default", pass rest to function that will
       // parse the remainder and add the element to the
       // default_properties map.
       default_properties.set (name.substr (7), value);
     else
       xproperties.set (name, value);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     octave_value retval;
 
     if (name.compare ("default", 7))
       retval = get_default (name.substr (7));
@@ -1843,17 +1843,17 @@ public:
       mutable handle_property title GSO , graphics_handle ()
       bool_property box , "on"
       bool_property key , "off"
       bool_property keybox , "off"
       double_property keypos , 1
       array_property colororder , default_colororder ()
       array_property dataaspectratio m , Matrix (1, 3, 1.0)
       radio_property dataaspectratiomode , "{auto}|manual"
-      radio_property layer a , "{bottom}|top"
+      radio_property layer , "{bottom}|top"
       array_property xlim m , default_lim ()
       array_property ylim m , default_lim ()
       array_property zlim m , default_lim ()
       array_property clim m , default_lim ()
       radio_property xlimmode al , "{auto}|manual"
       radio_property ylimmode al , "{auto}|manual"
       radio_property zlimmode al , "{auto}|manual"
       radio_property climmode al , "{auto}|manual"
@@ -1873,33 +1873,33 @@ public:
       radio_property ytickmode , "{auto}|manual"
       radio_property ztickmode , "{auto}|manual"
       any_property xticklabel m , ""
       any_property yticklabel m , ""
       any_property zticklabel m , ""
       radio_property xticklabelmode , "{auto}|manual"
       radio_property yticklabelmode , "{auto}|manual"
       radio_property zticklabelmode , "{auto}|manual"
-      color_property color a , color_property (color_values (1, 1, 1), radio_values ("none"))
+      color_property color , color_property (color_values (1, 1, 1), radio_values ("none"))
       color_property xcolor , color_values (0, 0, 0)
       color_property ycolor , color_values (0, 0, 0)
       color_property zcolor , color_values (0, 0, 0)
       radio_property xscale al , "{linear}|log"
       radio_property yscale al , "{linear}|log"
       radio_property zscale al , "{linear}|log"
       radio_property xdir , "{normal}|reverse"
       radio_property ydir , "{normal}|reverse"
       radio_property zdir , "{normal}|reverse"
       radio_property yaxislocation , "{left}|right|zero"
       radio_property xaxislocation , "{bottom}|top|zero"
       array_property view , Matrix ()
       radio_property nextplot , "add|replace_children|{replace}"
       array_property outerposition , Matrix ()
-      radio_property activepositionproperty a , "{outerposition}|position"
-      radio_property __colorbar__ a , "{none}|north|south|east|west|northoutside|southoutside|eastoutside|westoutside"
+      radio_property activepositionproperty , "{outerposition}|position"
+      radio_property __colorbar__ h , "{none}|north|south|east|west|northoutside|southoutside|eastoutside|westoutside"
    END_PROPERTIES
 
   protected:
     void init (void)
       {
         position.add_constraint (dim_vector (1, 4));
 		position.add_constraint (dim_vector (0, 0));
         outerposition.add_constraint (dim_vector (1, 4));
@@ -1965,19 +1965,19 @@ public:
       xproperties.set (name, value);
   }
 
   void set_defaults (const std::string& mode)
   {
     xproperties.set_defaults (*this, mode);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     octave_value retval;
 
     // FIXME -- finish this.
     if (name.compare ("default", 7))
@@ -2042,17 +2042,17 @@ public:
       color_property color , color_values (0, 0, 0)
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
       double_property markersize , 6
       string_property keylabel , ""
-      radio_property interpreter a , "{tex}|none|latex"
+      radio_property interpreter , "{tex}|none|latex"
       string_property displayname , ""
       radio_property erase_mode , "{normal}|none|xor|background"
     END_PROPERTIES
   };
 
 private:
   properties xproperties;
 
@@ -2081,19 +2081,19 @@ public:
     xproperties.set_from_list (*this, plist);
   }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     xproperties.set (name, val);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     return xproperties.get (name);
   }
 
   graphics_handle get_parent (void) const { return xproperties.get_parent (); }
@@ -2128,19 +2128,19 @@ public:
       string_property string , ""
       radio_property units , "{data}|pixels|normalized|inches|centimeters|points"
       array_property position , Matrix (1, 3, 0.0)
       double_property rotation , 0
       radio_property horizontalalignment , "{left}|center|right"
       color_property color , color_values (0, 0, 0)
       string_property fontname , "Helvetica"
       double_property fontsize , 10
-      radio_property fontangle a , "{normal}|italic|oblique"
-      radio_property fontweight a , "light|{normal}|demi|bold"
-      radio_property interpreter a , "{tex}|none|latex"
+      radio_property fontangle , "{normal}|italic|oblique"
+      radio_property fontweight , "light|{normal}|demi|bold"
+      radio_property interpreter , "{tex}|none|latex"
       color_property backgroundcolor , "{none}"
       string_property displayname , ""
       color_property edgecolor , "{none}"
       radio_property erase_mode , "{normal}|none|xor|background"
       bool_property editing , "off"
       radio_property fontunits , "inches|centimeters|normalized|{points}|pixel"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
@@ -2183,19 +2183,19 @@ public:
     xproperties.set_from_list (*this, plist);
   }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     xproperties.set (name, val);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     return xproperties.get (name);
   }
 
   graphics_handle get_parent (void) const { return xproperties.get_parent (); }
@@ -2266,19 +2266,19 @@ public:
     xproperties.set_from_list (*this, plist);
   }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     xproperties.set (name, val);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     return xproperties.get (name);
   }
 
   graphics_handle get_parent (void) const { return xproperties.get_parent (); }
@@ -2309,44 +2309,44 @@ public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(patch)
             data_property xdata l , Matrix ()
       data_property ydata l , Matrix ()
       data_property zdata l , Matrix ()
       data_property cdata l , Matrix ()
-      radio_property cdatamapping a , "{scaled}|direct"
+      radio_property cdatamapping , "{scaled}|direct"
       array_property faces , Matrix ()
       data_property facevertexalphadata , Matrix ()
       data_property facevertexcdata , Matrix ()
       array_property vertices , Matrix ()
       array_property vertexnormals , Matrix ()
-      radio_property normalmode a , "{auto}|manual"
-      color_property facecolor a , "{flat}|none|interp"
+      radio_property normalmode , "{auto}|manual"
+      color_property facecolor , "{flat}|none|interp"
       double_property facealpha , 1.0
-      radio_property facelighting a , "{flat}|none|gouraud|phong"
-      color_property edgecolor a , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
+      radio_property facelighting , "{flat}|none|gouraud|phong"
+      color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
       double_property edgealpha , 1.0
-      radio_property edgelighting a , "{none}|flat|gouraud|phong"
-      radio_property backfacelighting a , "{reverselit}|unlit|lit"
+      radio_property edgelighting , "{none}|flat|gouraud|phong"
+      radio_property backfacelighting , "{reverselit}|unlit|lit"
       double_property ambientstrength , 0.3
       double_property diffusestrength , 0.6
       double_property specularstrength , 0.6
       double_property specularexponent , 10.0
       double_property specularcolorreflectance , 1.0
-      radio_property erasemode a , "{normal}|background|xor|none"
+      radio_property erasemode , "{normal}|background|xor|none"
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
       double_property markersize , 6
       string_property keylabel , ""
-      radio_property interpreter a , "{tex}|none|latex"
+      radio_property interpreter , "{tex}|none|latex"
     END_PROPERTIES
 
   protected:
     void init (void)
       {
         vertices.add_constraint (dim_vector (-1, 2));
         vertices.add_constraint (dim_vector (-1, 3));
       }
@@ -2380,19 +2380,19 @@ public:
     xproperties.set_from_list (*this, plist);
   }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     xproperties.set (name, val);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     return xproperties.get (name);
   }
 
   graphics_handle get_parent (void) const { return xproperties.get_parent (); }
@@ -2423,27 +2423,27 @@ public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(surface)
       data_property xdata l , Matrix ()
       data_property ydata l , Matrix ()
       data_property zdata l , Matrix ()
       data_property cdata l , Matrix ()
-      color_property facecolor a , "{flat}|none|interp"
+      color_property facecolor , "{flat}|none|interp"
       double_property facealpha , 1.0
-      color_property edgecolor a , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
+      color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
       radio_property linestyle , "{-}|--|:|-.|none"
       double_property linewidth , 0.5
       radio_property marker , "{none}|s|o|x|+|.|*|<|>|v|^|d|p|h"
       color_property markeredgecolor , "{auto}|none"
       color_property markerfacecolor , "auto|{none}"
       double_property markersize , 6
       string_property keylabel , ""
-      radio_property interpreter a , "{tex}|none|latex"
+      radio_property interpreter , "{tex}|none|latex"
     END_PROPERTIES
 
   protected:
     void init (void)
       {
       }
   };
 
@@ -2475,19 +2475,19 @@ public:
     xproperties.set_from_list (*this, plist);
   }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     xproperties.set (name, val);
   }
 
-  octave_value get (void) const
+  octave_value get (bool all = false) const
   {
-    return xproperties.get ();
+    return xproperties.get (all);
   }
 
   octave_value get (const caseless_str& name) const
   {
     return xproperties.get (name);
   }
 
   graphics_handle get_parent (void) const { return xproperties.get_parent (); }
@@ -2634,17 +2634,17 @@ private:
   {
     iterator p = (xisnan (val) ? handle_map.end () : handle_map.find (val));
 
     return (p != handle_map.end ()) ? p->first : graphics_handle ();
   }
 
   graphics_object do_get_object (const graphics_handle& h)
   {
-    iterator p = handle_map.find (h);
+    iterator p = (h.ok () ? handle_map.find (h) : handle_map.end ());
 
     return (p != handle_map.end ()) ? p->second : graphics_object ();
   }
 
   graphics_handle do_make_graphics_handle (const std::string& go_name,
 					   const graphics_handle& p, bool do_createfcn);
 
   graphics_handle do_make_figure_handle (double val);
