# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1531425782 -7200
#      Thu Jul 12 22:03:02 2018 +0200
# Node ID beef68dedef738e17802dc7f6ec9315a3e87d946
# Parent  ca413f326224a59eddeb1827a0b52c24dc785050
Document facenormals and vertexnormals properties of patch objects (patch #8951).

* genpropdoc.m: Document relationship between lighting and facenormal and
vertexnormal properties of patch objects.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -1367,18 +1367,28 @@ faces.";
       case "facelighting"
         s.doc = "When set to a value other than @qcode{\"none\"}, the faces \
 of the object are drawn with light and shadow effects. Supported values are \
 @qcode{\"none\"} (no lighting effects), @qcode{\"flat\"} (facetted look) and \
 @qcode{\"gouraud\"} (linear interpolation of the lighting effects between \
 the vertices). @qcode{\"phong\"} is deprecated and has the same effect as \
 @qcode{\"gouraud\"}.";
 
+      case "facenormals"
+        s.doc = "Face normals are used for lighting the edges or faces if the \
+@code{edgelighting} or @code{facelighting} properties are set to \
+@qcode{\"flat\"}.  __modemsg__";
+
+      case "facenormalsmode"
+        s.doc = "If this property is set to @qcode{\"auto\"}, \
+@code{facenormals} are automatically calculated if the @code{edgelighting} or \
+@code{facelighting} property are set to @qcode{\"flat\"} and at least one \
+@code{light} object is present and visible in the same axes.";
+
       case "faces"
-      case "xdata"
         s.valid = valid_vecmat;
 
       case "facevertexalphadata"
         s.doc = sprintf (doc_notimpl, "Transparency");
         s.valid = valid_scalmat;
 
       case "facevertexcdata"
       case "interpreter"
@@ -1396,33 +1406,42 @@ the vertices). @qcode{\"phong\"} is depr
       case "markerfacecolor"
         s.doc = "@xref{XREFlinemarkerfacecolor, , \
 @w{line markerfacecolor property}}.";
 
       case "markersize"
         s.doc = "@xref{XREFlinemarkersize, , @w{line markersize property}}.";
         s.valid = "scalar";
 
-      case "normalmode"
       case "specularcolorreflectance"
         s.doc = "Reflectance for specular color.  Value between 0.0 (color \
 of underlying face) and 1.0 (color of light source).";
         s.valid = "scalar";
 
       case "specularexponent"
         s.doc = "Exponent for the specular reflex.  The lower the value, \
 the more the reflex is spread out.";
         s.valid = "scalar";
 
       case "specularstrength"
         s.doc = "Strength of the specular reflex.  Value between 0.0 (no \
 specular reflex) and 1.0 (full specular reflex).";
         s.valid = "scalar";
 
       case "vertexnormals"
+        s.doc = "Vertex normals are used for lighting the edges or faces if \
+the @code{edgelighting} or @code{facelighting} properties are set to \
+@qcode{\"gouraud\"}.  __modemsg__";
+
+      case "vertexnormalsmode"
+        s.doc = "If this property is set to @qcode{\"auto\"}, \
+@code{vertexnormals} are automatically calculated if the @code{edgelighting} \
+or @code{facelighting} property are set to @qcode{\"gouraud\"} and at least \
+one @code{light} object is present and visible in the same axes.";
+
       case "vertices"
         s.valid = valid_vecmat;
 
       case "xdata"
         s.valid = valid_vecmat;
 
       case "ydata"
         s.valid = valid_vecmat;
