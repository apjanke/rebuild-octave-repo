# HG changeset patch
# User jwe
# Date 1058279290 0
#      Tue Jul 15 14:28:10 2003 +0000
# Node ID 78046131cc1654e012b17da7ed3582e823f1d555
# Parent  b1800728304537eed6f5a7edf45c443e21ffb05a
[project @ 2003-07-15 14:28:10 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2003-07-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* load-save.cc (read_mat5_binary_element): Correctly read struct
+	arrays.
+
 	* pt-misc.cc (tree_parameter_list::initialize_undefined_elements):
 	New args, warnfor and nargout.  Change all callers.
 	(symbols_of_pt_misc): New function.
 	(warn_undefined_return_values): New function.
 
 	* octave.cc (maximum_braindamage): Don't set
 	define_all_return_values.
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -2670,17 +2670,17 @@ read_mat5_binary_element (std::istream& 
 	if (! is.read (X_CAST (char *, name), len ))
 	  goto data_read_error;
 	
 	is.seekg (pos + static_cast<std::streamoff> (PAD (len)));
       }
 
     name[len] = '\0';
     retval = name;
-  }  
+  }
 
   if (dimension_length != 8)
     {
       error ("load: multidimension arrays are not implemented");
       goto skip_ahead;
     }
 
   switch (arrayclass)
@@ -2768,29 +2768,35 @@ read_mat5_binary_element (std::istream& 
 	else if (nc == 1)
 	  n = nr;
 	else
 	  {
 	    error ("load: can only handle one-dimensional structure arrays");
 	    goto data_read_error;
 	  }
 
-	octave_value_list field_elts (n, Matrix ());
+	Cell field_elts (n_fields, n);
 
 	// fields subelements
-	for (i = 0; i < n_fields; i++)
+	for (int j = 0; j < n; j++)
 	  {
-	    for (int j = 0; j < n; j++)
+	    for (i = 0; i < n_fields; i++)
 	      {
 		octave_value fieldtc;
 		read_mat5_binary_element (is, filename, swap, global, fieldtc);
-		field_elts(j) = fieldtc;
+		field_elts(i,j) = fieldtc;
 	      }
-
-	    m.assign (elname + i*field_name_length, field_elts);
+	  }
+
+	for (int i = n_fields-1; i >= 0; i--)
+	  {
+	    const char *key = elname + i*field_name_length;
+
+	    for (int j = n-1; j >=0; j--)
+	      m[key](j) = field_elts(i,j);
 	  }
 
 	tc = m;
       }
       break;
 
     case mxCHAR_CLASS:
       // handle as a numerical array to start with
