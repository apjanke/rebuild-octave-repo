# HG changeset patch
# User Rik <rik@octave.org>
# Date 1496952562 25200
#      Thu Jun 08 13:09:22 2017 -0700
# Node ID 66dc0ce97f2b0b11959e93606cb2a9da02d2a8ea
# Parent  c9852320f00492678cfdf18e420e7cae51d8ae67
# Parent  286d85b43bdc50c5940896c1e1e5cce427d55047
maint: merge stable to default.

diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -878,17 +878,18 @@ ComplexMatrix::finverse (MatrixType& mat
                                  nc, F77_DBLE_CMPLX_ARG (tmp_data), nr, anorm,
                                  rcon, F77_DBLE_CMPLX_ARG (pz), prz, zgecon_info
                                  F77_CHAR_ARG_LEN (1)));
 
       if (zgecon_info != 0)
         info = -1;
     }
 
-  if ((info == -1 && ! force) || octave::math::isinf (anorm))
+  if ((info == -1 && ! force)
+      || octave::math::isnan (anorm) || octave::math::isinf (anorm))
     retval = *this;  // Restore contents.
   else
     {
       F77_INT zgetri_info = 0;
 
       F77_XFCN (zgetri, ZGETRI, (nc, F77_DBLE_CMPLX_ARG (tmp_data), nr, pipvt,
                                  F77_DBLE_CMPLX_ARG (pz), lwork, zgetri_info));
 
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -880,17 +880,18 @@ FloatComplexMatrix::finverse (MatrixType
                                  nc, F77_CMPLX_ARG (tmp_data), nr, anorm,
                                  rcon, F77_CMPLX_ARG (pz), prz, zgecon_info
                                  F77_CHAR_ARG_LEN (1)));
 
       if (zgecon_info != 0)
         info = -1;
     }
 
-  if ((info == -1 && ! force) || octave::math::isinf (anorm))
+  if ((info == -1 && ! force)
+      || octave::math::isnan (anorm) || octave::math::isinf (anorm))
     retval = *this;  // Restore contents.
   else
     {
       F77_INT zgetri_info = 0;
 
       F77_XFCN (cgetri, CGETRI, (nc, F77_CMPLX_ARG (tmp_data), nr, pipvt,
                                  F77_CMPLX_ARG (pz), lwork, zgetri_info));
 
diff --git a/scripts/polynomial/residue.m b/scripts/polynomial/residue.m
--- a/scripts/polynomial/residue.m
+++ b/scripts/polynomial/residue.m
@@ -291,17 +291,16 @@ function [pnum, pden, e] = rresidue (r, 
     indx = 1:numel (p);
   else
     [e, indx] = mpoles (p, toler, 0);
     p = p(indx);
     r = r(indx);
   endif
 
   indx = 1:numel (p);
-
   for n = indx
     pn = [1, -p(n)];
     if (n == 1)
       pden = pn;
     else
       pden = conv (pden, pn);
     endif
   endfor
@@ -315,24 +314,26 @@ function [pnum, pden, e] = rresidue (r, 
   ## pn is the numerator contribution for the nth residue
 
   D = numel (pden) - 1;
   K = numel (k) - 1;
   N = K + D;
   pnum = zeros (1, N+1);
   for n = indx(abs (r) > 0)
     p1 = [1, -p(n)];
-    for m = 1:e(n)
-      if (m == 1)
-        pm = p1;
-      else
-        pm = conv (pm, p1);
-      endif
-    endfor
-    pn = deconv (pden, pm);
+    pn = 1;
+    for j = 1:n - 1
+      pn = conv (pn, [1, -p(j)]);
+    end
+    for j = n + 1:numel (p)
+      pn = conv (pn, [1, -p(j)]);
+    end
+    for j = 1:e(n) - 1
+      pn = deconv (pn, p1);
+    end
     pn = r(n) * pn;
     pnum += prepad (pn, N+1, 0, 2);
   endfor
 
   ## Add the direct term.
   if (numel (k))
     pnum += conv (pden, k);
   endif
@@ -425,8 +426,15 @@ endfunction
 
 %!test <49291>
 %! rf = [1e3, 2e3, 1e3, 2e3];
 %! cf = [316.2e-9, 50e-9, 31.6e-9, 5e-9];
 %! [num, den] = residue (1./cf,-1./(rf.*cf),0);
 %! assert (numel (num), 4);
 %! assert (numel (den), 5);
 %! assert (den(1), 1);
+
+%!test <51148>
+%! r = [1.0000e+18, 3.5714e+12, 2.2222e+11, 2.1739e+10];
+%! pin = [-1.9231e+15, -1.6234e+09, -4.1152e+07, -1.8116e+06];
+%! k = 0;
+%! [p, q] = residue (r, pin, k);
+%! assert (p(4), 4.6828e+42, -1e-5);
