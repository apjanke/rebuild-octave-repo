# HG changeset patch
# User jwe
# Date 1112123314 0
#      Tue Mar 29 19:08:34 2005 +0000
# Node ID d957f0ef5aa36c81cec849f1629d17b7efc401f9
# Parent  418771cb5ab2983577715799d24ac7df5b696c49
[project @ 2005-03-29 19:08:34 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2005-03-29  John W. Eaton  <jwe@octave.org>
 
+	* utils.cc (get_dimensions): Produce error instead of warning if
+	given a matrix argument.
+
 	* load-save.cc (Fload, Fsave): Also accept -V4 option.
 
 	* ls-hdf5.h (hdf5_fstreambase::hdf5_fstreambase,
 	hdf5_fstreambase::open): Use & instead of == to test whether mode
 	is std::ios::in or std::ios::out.
 	(hd5_ifstream::istream, hd5_ifstream::open, hd5_ofstream::istream,
 	hd5_ofstream::open): Default mode now includes binary flag.
 
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -809,17 +809,17 @@ get_dimensions (const octave_value& a, c
             return;
 
           int n = v.length ();
           dim.resize (n);
           for (int i = 0; i < n; i++)
             dim(i) = static_cast<int> (fix (v(i)));
         }
       else
-        warning ("%s (A): use %s (size (A)) instead", warn_for, warn_for);
+        error ("%s (A): use %s (size (A)) instead", warn_for, warn_for);
     }
 
   check_dimensions (dim, warn_for); // May set error_state.
 }
 
 
 void
 get_dimensions (const octave_value& a, const char *warn_for,
@@ -840,17 +840,17 @@ get_dimensions (const octave_value& a, c
 
 	  if (error_state)
 	    return;
 
 	  nr = static_cast<int> (fix (v (0)));
 	  nc = static_cast<int> (fix (v (1)));
 	}
       else
-	warning ("%s (A): use %s (size (A)) instead", warn_for, warn_for);
+	error ("%s (A): use %s (size (A)) instead", warn_for, warn_for);
     }
 
   check_dimensions (nr, nc, warn_for); // May set error_state.
 }
 
 void
 get_dimensions (const octave_value& a, const octave_value& b,
 		const char *warn_for, int& nr, int& nc)
