# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210675223 -7200
#      Tue May 13 12:40:23 2008 +0200
# Node ID 762801c50b2149f79c13bf19159a392bafea4cab
# Parent  df9519e9990c2b04db5cdc32d0953e0d9f4970ce
Fix tests for transpose in Array.cc

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1325,41 +1325,40 @@ Array<T>::hermitian (T (*fcn) (const T&)
 
 /*
 
 %% Tranpose tests for matrices of the tile size and plus or minus a row
 %% and with four tiles.
 
 %!shared m7, mt7, m8, mt8, m9, mt9
 %! m7 = reshape (1 : 7*8, 8, 7);
-%! mt7 = [1:7; 1:7, 1:7, 1:7, 1:7; 1:7, 1:7, 1:7];
+%! mt7 = [1:8; 9:16; 17:24; 25:32; 33:40; 41:48; 49:56];
 %! m8 = reshape (1 : 8*8, 8, 8);
-%! mt8 = [1:8; 1:8, 1:8, 1:8, 1:8; 1:8, 1:8, 1:8];
+%! mt8 = mt8 = [mt7; 57:64];
 %! m9 = reshape (1 : 9*8, 8, 9);
-%! mt9 = [1:9; 1:9, 1:9, 1:9, 1:9; 1:9, 1:9, 1:9];
-
-%!assert (m7', mt7)
-%!assert ((1i*m7).', 1i * mt7)
-%!assert ((1i*m7)', conj (1i * mt7))
-%!assert (m8', mt8)
-%!assert ((1i*m8).', 1i * mt8)
-%!assert ((1i*m8)', conj (1i * mt8))
-%!assert (m9', mt9)
-%!assert ((1i*m9).', 1i * mt9)
-%!assert ((1i*m9)', conj (1i * mt9))
-
-%!assert ([m7, m7; m8, m8]', [mt7, mt8; mt7, mt8])
-%!assert ((1i*[m7, m7; m8, m8]).', 1i * [mt7, mt8; mt7, mt8])
-%!assert ((1i*[m7, m7; m8, m8])', conj (1i * [mt7, mt8; mt7, mt8]))
-%!assert ([m8, m8; m8, m8]', [mt8, mt8; mt8, mt8])
-%!assert ((1i*[m8, m8; m8, m8]).', 1i * [mt8, mt8; mt8, mt8])
-%!assert ((1i*[m8, m8; m8, m8])', conj (1i * [mt8, mt8; mt8, mt8]))
-%!assert ([m9, m9; m8, m8]', [mt9, mt8; mt9, mt8])
-%!assert ((1i*[m9, m9; m8, m8]).', 1i * [mt9, mt8; mt9, mt8])
-%!assert ((1i*[m9, m9; m8, m8])', conj (1i * [mt9, mt8; mt9, mt8]))
+%! mt9 = [mt8; 65:72];
+
+%!assert(m7', mt7)
+%!assert((1i*m7).', 1i * mt7)
+%!assert((1i*m7)', conj (1i * mt7))
+%!assert(m8', mt8)
+%!assert((1i*m8).', 1i * mt8)
+%!assert((1i*m8)', conj (1i * mt8))
+%!assert(m9', mt9)
+%!assert((1i*m9).', 1i * mt9)
+%!assert((1i*m9)', conj (1i * mt9))
+%!assert([m7, m8; m7, m8]', [mt7, mt7; mt8, mt8])
+%!assert((1i*[m7, m8; m7, m8]).', 1i * [mt7, mt7; mt8, mt8])
+%!assert((1i*[m7, m8; m7, m8])', conj (1i * [mt7, mt7; mt8, mt8]))
+%!assert([m8, m8; m8, m8]', [mt8, mt8; mt8, mt8])
+%!assert((1i*[m8, m8; m8, m8]).', 1i * [mt8, mt8; mt8, mt8])
+%!assert((1i*[m8, m8; m8, m8])', conj (1i * [mt8, mt8; mt8, mt8]))
+%!assert([m9, m8; m9, m8]', [mt9, mt9; mt8, mt8])
+%!assert((1i*[m9, m8; m9, m8]).', 1i * [mt9, mt9; mt8, mt8])
+%!assert((1i*[m9, m8; m9, m8])', conj (1i * [mt9, mt9; mt8, mt8]))
 
 */
 
 template <class T>
 T *
 Array<T>::fortran_vec (void)
 {
   make_unique ();
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,12 @@
 2008-05-21  David Bateman  <dbateman@free.fr>
 
+	* Array.cc: Fix transpose tests.
+
 	* CmplxGEBAL.cc (ComplexGEPBALANCE), dbleGEPBAL.cc (GEPBALANCE),
 	fCmplxGEPBAL.cc (FloatComplexGEPBALANCE), floatGEPBAL.cc
 	(FloatGEPBALANCE): New class for generalized eigenvalue balancing.
 	* CmplxGEBAL.h (ComplexGEPBALANCE), dbleGEPBAL.h (GEPBALANCE),
 	fCmplxGEPBAL.h (FloatComplexGEPBALANCE), floatGEPBAL.h
 	(FloatGEPBALANCE): Declare them.
 	* Makefile.in (MATRIX_INC): Include them here.
 	(MATRIX_SRC): and here.
