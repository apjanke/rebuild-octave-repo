# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1300428707 25200
#      Thu Mar 17 23:11:47 2011 -0700
# Node ID c2e8c9d9e284e50783c26f0800843a5ad38567bd
# Parent  3d6584617da0d19bd51375c233dfdbbec0ac6a52
Fix bug #32818, nonconformant arguments in svds.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-17  Rik  <octave@nomad.inbox5.com>
+
+	* scripts/sparse/svds.m: Fix bug #32818, nonconformant arguments
+	in svds.
+
 2010-03-17  Rik  <octave@nomad.inbox5.com>
 
 	* io/fileread.m: Add seealso reference to sscanf.
 
 2011-03-05  Ben Abbott <bpabbott@mac.com>
 
 	* plot/colorbar.m: Allow location to be specified as a property.
 
diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -168,20 +168,20 @@ function [u, s, v, flag] = svds (A, k, s
       b_k = 2 * k;
     else
       b_k = k;  # Normal case, find just the k largest eigenvalues
     endif
 
     if (nargout > 1)
       [V, s, flag] = eigs ([sparse(m,m), b; b', sparse(n,n)],
                            b_k, b_sigma, b_opts);
+      s = diag (s);
     else
       s = eigs ([sparse(m,m), b; b', sparse(n,n)], b_k, b_sigma, b_opts);
     endif
-    s = diag (s);
 
     if (ischar (sigma))
       norma = max (s);
     else
       norma = normest (A);
     endif
     ## We wish to exclude all eigenvalues that are less than zero as these
     ## are artifacts of the way the matrix passed to eigs is formed. There
@@ -219,21 +219,21 @@ function [u, s, v, flag] = svds (A, k, s
     s = s * max_a;
   endif
 
   if (nargout < 2)
     u = s;
   else
     if (max_a == 0)
       u = eye (m, k);
-      s = diag(s);
+      s = diag (s);
       v = eye (n, k);
     else
       u = root2 * V(1:m,ind);
-      s = diag(s);
+      s = diag (s);
       v = root2 * V(m+1:end,ind);
     endif
 
     if (nargout > 3)
       flag = norm (A*v - u*s, 1) > root2 * opts.tol * norm (A, 1);
     endif
   endif
 
@@ -268,9 +268,12 @@ endfunction
 %! % Don't put sigma right on a singular value or there are convergence issues
 %! sigma = 0.99*s(idx) + 0.01*s(idx+1);
 %! [u2,s2,v2,flag] = svds(A,k,sigma,opts);
 %! s2 = diag(s2);
 %! assert(flag,!1);
 %! assert(s2, s((idx+floor(k/2)):-1:(idx-floor(k/2))), 1e-10);
 %!test
 %! [u2,s2,v2,flag] = svds(zeros (10), k);
-%! assert (isequal(u2, eye (10, k)) && isequal (s2, zeros(k)) && isequal (v2, eye(10, 7)))
+%! assert (isequal(u2, eye (10, k)) && isequal (s2, zeros(k)) && isequal (v2, eye(10, 7)));
+%!test
+%! s = svds (speye (10));
+%! assert (s, ones (6, 1), 2*eps);
