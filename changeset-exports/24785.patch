# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1519245712 18000
#      Wed Feb 21 15:41:52 2018 -0500
# Node ID 504869574c895e02858723031bf8068461464aee
# Parent  4d945f2e5914a6d7ed9b0df41e276fc271b70d2b
restore auto switch to E formats octave_print_internal functions

* pr-output.cc (pr_output_traits::max_field_width): New variable.
(make_real_format, make_real_matrix_format, make_complex_format,
make_complex_matrix_format, make_range_format): Switch to E format if
computed field width exceeds max field width for type or if computed
number of digits to display exceeds max meaningful digits for type.

diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -431,33 +431,38 @@ pr_min_internal (const MArray<T>& m)
 
   return result;
 }
 
 template <typename>
 struct pr_output_traits
 {
   static const int digits10;
+  static const int max_field_width;
 };
 
 template <>
 struct pr_output_traits<double>
 {
   static const int digits10;
+  static const int max_field_width;
 };
 
 const int pr_output_traits<double>::digits10 = 16;
+const int pr_output_traits<double>::max_field_width = 21;
 
 template <>
 struct pr_output_traits<float>
 {
   static const int digits10;
+  static const int max_field_width;
 };
 
 const int pr_output_traits<float>::digits10 = 8;
+const int pr_output_traits<float>::max_field_width = 13;
 
 // FIXME: it would be nice to share more code among these functions,..
 
 // Works for double and float.
 
 template <typename T>
 static inline float_display_format
 make_real_format (int digits, bool inf_or_nan,
@@ -512,17 +517,18 @@ make_real_format (int digits, bool inf_o
         }
 
       fw = 1 + ld + 1 + rd;
       if (inf_or_nan && fw < 4)
         fw = 4;
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
-      && (print_e || print_g || print_eng))
+      && (print_e || print_g || print_eng
+          || fw > pr_output_traits<T>::max_field_width))
     {
       if (print_g)
         fmt = float_format ();
       else
         {
           // e+ddd
           int ex = 5;
 
@@ -658,17 +664,20 @@ make_real_matrix_format (int x_max, int 
       rd = (rd_max > rd_min ? rd_max : rd_min);
 
       fw = 1 + ld + 1 + rd;
       if (inf_or_nan && fw < 4)
         fw = 4;
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
-      && (print_e || print_eng || print_g))
+      && (print_e || print_eng || print_g
+          || (! Vfixed_point_format
+              && (ld + rd > pr_output_traits<T>::digits10
+                  || fw > pr_output_traits<T>::max_field_width))))
     {
       if (print_g)
         fmt = float_format ();
       else
         {
           int ex = 4;
           if (x_max > 100 || x_min > 100)
             ex++;
@@ -829,17 +838,21 @@ make_complex_format (int x_max, int x_mi
       if (inf_or_nan && i_fw < 3)
         {
           i_fw = 3;
           r_fw = 4;
         }
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
-      && (print_e || print_eng || print_g))
+      && (print_e || print_eng || print_g
+          || (! Vfixed_point_format
+              && (ld + rd > pr_output_traits<T>::digits10
+                  || r_fw > pr_output_traits<T>::max_field_width
+                  || i_fw > pr_output_traits<T>::max_field_width))))
     {
       if (print_g)
         {
           r_fmt = float_format ();
           i_fmt = float_format ();
         }
       else
         {
@@ -1035,17 +1048,21 @@ make_complex_matrix_format (int x_max, i
       if (inf_or_nan && i_fw < 3)
         {
           i_fw = 3;
           r_fw = 4;
         }
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
-      && (print_e || print_eng || print_g))
+      && (print_e || print_eng || print_g
+          || (! Vfixed_point_format
+              && (ld + rd > pr_output_traits<T>::digits10
+                  || r_fw > pr_output_traits<T>::max_field_width
+                  || i_fw > pr_output_traits<T>::max_field_width))))
     {
       if (print_g)
         {
           r_fmt = float_format ();
           i_fmt = float_format ();
         }
       else
         {
@@ -1227,17 +1244,20 @@ make_range_format (int x_max, int x_min,
 
       ld = (ld_max > ld_min ? ld_max : ld_min);
       rd = (rd_max > rd_min ? rd_max : rd_min);
 
       fw = ld + rd + 3;
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
-      && (print_e || print_eng || print_g))
+      && (print_e || print_eng || print_g
+          || (! Vfixed_point_format
+              && (ld + rd > pr_output_traits<T>::digits10
+                  || fw > pr_output_traits<T>::max_field_width))))
     {
       if (print_g)
         fmt = float_format ();
       else
         {
           int ex = 4;
           if (x_max > 100 || x_min > 100)
             ex++;
