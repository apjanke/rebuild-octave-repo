# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1265824128 18000
#      Wed Feb 10 12:48:48 2010 -0500
# Node ID c992efc0c2fae1ecb43854c8ffed590fa63f6e06
# Parent  2be9b7e71f32a85dff78a177b17b96a0484d5a48
use DEFUNX instead of DEFUN for all functions in syscalls.cc

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-02-10  John W. Eaton  <jwe@octave.org>
+
+	* syscalls.cc (Fdup2, Fexec, Fpopen2, Ffork, Fgetpgrp, Fgetpid,
+	Fgetppid, Fgetegid, Fgetgid, Fgeteuid, Fkill, Ffstat, Flstat,
+	Fpipe, Fstat, Fwaitpid): Use DEFUNX instead of DEFUN.
+
 2010-02-10  David Grundberg  <davidg@cs.umu.se>
 
 	* DLD-FUNCTIONS/__magick_read__.cc (read_images): Reimplement
 	copying with direct fortran_vec manipulation, avoiding indexing
 	operations.  Replace scale_quantum_to_depth calls with simple
 	arithmetics.
 	(scale_quantum_to_depth): Remove function.
 
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -80,17 +80,17 @@ mk_stat_map (const base_file_stat& fs)
 #endif
 #if defined (HAVE_STRUCT_STAT_ST_BLOCKS)
   m.assign ("blocks", fs.blocks ());
 #endif
 
   return m;
 }
 
-DEFUN (dup2, args, ,
+DEFUNX ("dup2", Fdup2, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{fid}, @var{msg}] =} dup2 (@var{old}, @var{new})\n\
 Duplicate a file descriptor.\n\
 \n\
 If successful, @var{fid} is greater than zero and contains the new file\n\
 ID.  Otherwise, @var{fid} is negative and @var{msg} contains a\n\
 system-dependent error message.\n\
 @end deftypefn")
@@ -132,17 +132,17 @@ system-dependent error message.\n\
 	error ("dup2: invalid stream");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (exec, args, ,
+DEFUNX ("exec", Fexec, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} exec (@var{file}, @var{args})\n\
 Replace current process with a new process.  Calling @code{exec} without\n\
 first calling @code{fork} will terminate your current Octave process and\n\
 replace it with the program named by @var{file}.  For example,\n\
 \n\
 @example\n\
 exec (\"ls\" \"-l\")\n\
@@ -210,17 +210,17 @@ error message.\n\
 	error ("exec: first argument must be a string");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (popen2, args, ,
+DEFUNX ("popen2", Fpopen2, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{in}, @var{out}, @var{pid}] =} popen2 (@var{command}, @var{args})\n\
 Start a subprocess with two-way communication.  The name of the process\n\
 is given by @var{command}, and @var{args} is an array of strings\n\
 containing options for the command.  The file identifiers for the input\n\
 and output streams of the subprocess are returned in @var{in} and\n\
 @var{out}.  If execution of the command is successful, @var{pid}\n\
 contains the process ID of the subprocess.  Otherwise, @var{pid} is\n\
@@ -483,17 +483,17 @@ system-dependent error message.\n\
 	error ("fcntl: file id, request, and argument must be integers");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (fork, args, ,
+DEFUNX ("fork", Ffork, args, ,
  "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{pid}, @var{msg}] =} fork ()\n\
 Create a copy of the current process.\n\
 \n\
 Fork can return one of the following values:\n\
 \n\
 @table @asis\n\
 @item > 0\n\
@@ -528,17 +528,17 @@ action.  A system dependent error messag
       retval(1) = msg;
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getpgrp, args, ,
+DEFUNX ("getpgrp", Fgetpgrp, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {pgid =} getpgrp ()\n\
 Return the process group id of the current process.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
@@ -554,17 +554,17 @@ Return the process group id of the curre
       retval(1) = msg;
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getpid, args, ,
+DEFUNX ("getpid", Fgetpid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {pid =} getpid ()\n\
 Return the process id of the current process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -572,17 +572,17 @@ Return the process id of the current pro
   if (nargin == 0)
     retval = octave_syscalls::getpid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getppid, args, ,
+DEFUNX ("getppid", Fgetppid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {pid =} getppid ()\n\
 Return the process id of the parent process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -590,17 +590,17 @@ Return the process id of the parent proc
   if (nargin == 0)
     retval = octave_syscalls::getppid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getegid, args, ,
+DEFUNX ("getegid", Fgetegid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {egid =} getegid ()\n\
 Return the effective group id of the current process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -608,17 +608,17 @@ Return the effective group id of the cur
   if (nargin == 0)
     retval = octave_syscalls::getegid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getgid, args, ,
+DEFUNX ("getgid", Fgetgid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {gid =} getgid ()\n\
 Return the real group id of the current process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -626,17 +626,17 @@ Return the real group id of the current 
   if (nargin == 0)
     retval = octave_syscalls::getgid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (geteuid, args, ,
+DEFUNX ("geteuid", Fgeteuid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {euid =} geteuid ()\n\
 Return the effective user id of the current process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -644,17 +644,17 @@ Return the effective user id of the curr
   if (nargin == 0)
     retval = octave_syscalls::geteuid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (getuid, args, ,
+DEFUNX ("getuid", Fgetuid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {uid =} getuid ()\n\
 Return the real user id of the current process.\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
@@ -662,17 +662,17 @@ Return the real user id of the current p
   if (nargin == 0)
     retval = octave_syscalls::getuid ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (kill, args, ,
+DEFUNX ("kill", Fkill, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} kill (@var{pid}, @var{sig})\n\
 Send signal @var{sig} to process @var{pid}.\n\
 \n\
 If @var{pid} is positive, then signal @var{sig} is sent to @var{pid}.\n\
 \n\
 If @var{pid} is 0, then signal @var{sig} is sent to every process\n\
 in the process group of the current process.\n\
@@ -714,17 +714,17 @@ Return 0 if successful, otherwise return
 	}
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (fstat, args, ,
+DEFUNX ("fstat", Ffstat, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{info}, @var{err}, @var{msg}] =} fstat (@var{fid})\n\
 Return information about the open file @var{fid}.  See @code{stat}\n\
 for a description of the contents of @var{info}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
@@ -751,17 +751,17 @@ for a description of the contents of @va
 	}
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (lstat, args, ,
+DEFUNX ("lstat", Flstat, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{info}, @var{err}, @var{msg}] =} lstat (@var{file})\n\
 See stat.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
@@ -842,17 +842,17 @@ system-dependent error message.\n\
 	error ("mkfifo: file name must be a string");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (pipe, args, ,
+DEFUNX ("pipe", Fpipe, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{read_fd}, @var{write_fd}, @var{err}, @var{msg}] =} pipe ()\n\
 Create a pipe and return the reading and writing ends of the pipe\n\
 into @var{read_fd} and @var{write_fd} respectively.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
@@ -897,17 +897,17 @@ system-dependent error message.\n\
 	}
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (stat, args, ,
+DEFUNX ("stat", Fstat, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{info}, @var{err}, @var{msg}] =} stat (@var{file})\n\
 @deftypefnx {Built-in Function} {[@var{info}, @var{err}, @var{msg}] =} lstat (@var{file})\n\
 Return a structure @var{s} containing the following information about\n\
 @var{file}.\n\
 \n\
 @table @code\n\
 @item dev\n\
@@ -1279,17 +1279,17 @@ system-dependent error message.\n\
 	error ("unlink: file name must be a string");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (waitpid, args, ,
+DEFUNX ("waitpid", Fwaitpid, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{pid}, @var{status}, @var{msg}] =} waitpid (@var{pid}, @var{options})\n\
 Wait for process @var{pid} to terminate.  The @var{pid} argument can be:\n\
 \n\
 @table @asis\n\
 @item @minus{}1\n\
 Wait for any child process.\n\
 \n\
