# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1547905469 -3600
#      Sat Jan 19 14:44:29 2019 +0100
# Branch stable
# Node ID 49eae759a3e2bdee40f222a9a7e1829a5b489eee
# Parent  3e7fa894731a354f922906009938c0a9fe1243fd
documentation: Slightly change figure with Voronoi diagram.

* geometryimages.m: Omit legend that was covering a large part of the figure.
  Use equal axis scaling to make the circle look non-elliptic.

* geometry.txi: Reference colors in caption of figure.

diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -308,17 +308,18 @@ plot (vx, vy, "r");
 @noindent
 The result of which can be seen in @ref{fig:voronoi}.  Note that the
 circum-circle of one of the triangles has been added to this figure, to
 make the relationship between the Delaunay tessellation and the Voronoi
 diagram clearer.
 
 @float Figure,fig:voronoi
 @center @image{voronoi,4in}
-@caption{Delaunay triangulation and Voronoi diagram of a random set of points}
+@caption{Delaunay triangulation (blue lines) and Voronoi diagram (red lines)
+of a random set of points}
 @end float
 @end ifnotinfo
 
 Additional information about the size of the facets of a Voronoi
 diagram, and which points of a set of points is in a polygon can be had
 with the @code{polyarea} and @code{inpolygon} functions respectively.
 
 @DOCSTRING(polyarea)
diff --git a/doc/interpreter/geometryimages.m b/doc/interpreter/geometryimages.m
--- a/doc/interpreter/geometryimages.m
+++ b/doc/interpreter/geometryimages.m
@@ -46,17 +46,18 @@ function geometryimages (d, nm, typ)
     hold on;
     plot (vx, vy, "r");
     [r, c] = tri2circ (tri(end,:), x, y);
     pc = [-1:0.01:1];
     xc = r * sin (pi*pc) + c(1);
     yc = r * cos (pi*pc) + c(2);
     plot (xc, yc, "g-", "LineWidth", 3);
     axis ([0, 1, 0, 1]);
-    legend ("Delaunay Triangulation", "Voronoi Diagram");
+    set (gca, "dataaspectratio", [1, 1, 1],
+              "plotboxaspectratio", [1, 1, 1]);
     print (outfile, d_typ);
   elseif (strcmp (nm, "triplot"))
     rand ("state", 2)
     x = rand (20, 1);
     y = rand (20, 1);
     tri = delaunay (x, y);
     triplot (tri, x, y);
     print (outfile, d_typ);
