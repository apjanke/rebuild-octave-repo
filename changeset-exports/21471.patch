# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1458290023 -3600
#      Fri Mar 18 09:33:43 2016 +0100
# Node ID 57dea7b5ca469a3f5a7bbeea010b913e0fd154a2
# Parent  bbf3814049e2a1f4ca7a337e18eee8b2173518c3
textscan.cc: avoid integer constants, raising compile time issues,
when octave_idx_type is long. More style fixes.

diff --git a/libinterp/corefcn/textscan.cc b/libinterp/corefcn/textscan.cc
--- a/libinterp/corefcn/textscan.cc
+++ b/libinterp/corefcn/textscan.cc
@@ -924,34 +924,31 @@ textscan::scan (std::istream *isp, texts
 
   // skip the first  header_lines
   std::string dummy;
   for (int i = 0; i < header_lines && *isp; i++)
     getline (*isp, dummy, static_cast<char> (eol2));
 
   // Create our own buffered stream, for fast get/putback/tell/seek.
 
-        // First, see how far ahead it should let us look.
+  // First, see how far ahead it should let us look.
   int max_lookahead = std::max (std::max (comment_len, treat_as_empty_len),
                                 std::max (delim_len, 3)); // 3 for NaN and Inf
 
-        // Next, choose a buffer size to avoid reading too much, or too often.
-  octave_idx_type buf_size;
+  // Next, choose a buffer size to avoid reading too much, or too often.
+  octave_idx_type buf_size = 4096;
   if (buffer_size)
     buf_size = buffer_size;
   else if (ntimes > 0)
     {
-      buf_size = 80 * ntimes;
-      if (buf_size < ntimes)    // if overflow...
-        buf_size = ntimes;
-      buf_size = std::max (ntimes, std::min (buf_size, 4096));
+      // Avoid overflow of 80*ntimes...
+      buf_size = std::min (buf_size, std::max (ntimes, 80 * ntimes));
+      buf_size = std::max (buf_size, ntimes);
     }
-  else
-    buf_size = 4096;
-        // Finally, create the stream.
+  // Finally, create the stream.
   dstr is (*isp, whitespace + delims, max_lookahead, buf_size);
 
   // Grow retval dynamically.  "size" is half the initial size
   // (FIXME -- Should we start smaller if ntimes is large?)
   octave_idx_type size = ((ntimes < 8 && ntimes >= 0) ? ntimes : 1);
   Array<octave_idx_type> row_idx (dim_vector (1,2));
   row_idx(1) = 0;
 
