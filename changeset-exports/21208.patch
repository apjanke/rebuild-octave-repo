# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1454701990 18000
#      Fri Feb 05 14:53:10 2016 -0500
# Node ID f5e05c11c34355b502f86954bc9120c6c10fb57d
# Parent  945695cafd2bc8bf02bb2ca5eb35b40aa17ed115
* fCmplxCHOL.cc: Use numel instead of length.

diff --git a/liboctave/numeric/fCmplxCHOL.cc b/liboctave/numeric/fCmplxCHOL.cc
--- a/liboctave/numeric/fCmplxCHOL.cc
+++ b/liboctave/numeric/fCmplxCHOL.cc
@@ -313,17 +313,17 @@ FloatComplexCHOL::shift_sym (octave_idx_
 
 void
 FloatComplexCHOL::update (const FloatComplexColumnVector& u)
 {
   warn_qrupdate_once ();
 
   octave_idx_type n = chol_mat.rows ();
 
-  if (u.length () != n)
+  if (u.numel () != n)
     (*current_liboctave_error_handler) ("cholupdate: dimension mismatch");
 
   init (chol_mat.hermitian () * chol_mat
         + FloatComplexMatrix (u) * FloatComplexMatrix (u).hermitian (),
         true, false);
 }
 
 static bool
@@ -338,17 +338,17 @@ octave_idx_type
 FloatComplexCHOL::downdate (const FloatComplexColumnVector& u)
 {
   warn_qrupdate_once ();
 
   octave_idx_type info = -1;
 
   octave_idx_type n = chol_mat.rows ();
 
-  if (u.length () != n)
+  if (u.numel () != n)
     (*current_liboctave_error_handler) ("cholupdate: dimension mismatch");
 
   if (singular (chol_mat))
     info = 2;
   else
     {
       info = init (chol_mat.hermitian () * chol_mat
                    - FloatComplexMatrix (u)
@@ -365,17 +365,17 @@ FloatComplexCHOL::insert_sym (const Floa
                               octave_idx_type j)
 {
   warn_qrupdate_once ();
 
   octave_idx_type info = -1;
 
   octave_idx_type n = chol_mat.rows ();
 
-  if (u.length () != n + 1)
+  if (u.numel () != n + 1)
     (*current_liboctave_error_handler) ("cholinsert: dimension mismatch");
   if (j < 0 || j > n)
     (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
   if (singular (chol_mat))
     info = 2;
   else if (u(j).imag () != 0.0)
     info = 3;
