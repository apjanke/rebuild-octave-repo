# HG changeset patch
# User jwe
# Date 1196307604 0
#      Thu Nov 29 03:40:04 2007 +0000
# Node ID 86d0b16f2bb2f91820ba01b9d66a6f5ea28486de
# Parent  4612ef369abb38f94f878ac5f9338cbbbdd3877f
[project @ 2007-11-29 03:40:04 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,22 @@
 2007-11-28  John W. Eaton  <jwe@octave.org>
 
+	* graphics.cc (base_properties::update_axis_limits,
+	axes::update_axis_limits): New functions.
 	* graphics.h.in (class data_property): New class.
+	(graphics_object::update_axis_limits): New function.
+	(base_graphics_object::update_axis_limits): New virtual function.
+	(base_properties::update_axis_limits, axes::update_axis_limits):
+	Provide decls.
 	(class line, class image, class patch, class surface): Use it
-	instead of octave_value for data properties.
+	instead of octave_value for data properties.  Tag data properties
+	with "l" modifier.
+	(class axes): Tag scale properties with "l" modifier.
+	* genprops.awk: Handle "l" modifier.
 
 	* mkbuiltins: Emit #include "builtins.h" for the builtins.cc file.
 	From Christoph Mayer <Christoph.Mayer@dlr.de>.
 
 	* TEMPLATE-INST/Array-tc.cc (resize_fill_value<octave_value>):
 	Delete.
 
 	* Cell.cc (Cell::Cell (const dim_vector&, const string_vector&, bool)):
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -89,16 +89,22 @@
 ##       that preserves the list of possible values, which is different
 ##       from what would happen if we simply used the
 ##
 ##         TYPE (const octave_value&)
 ##
 ##       constructor, which creates a new radio_property and so cannot
 ##       preserve the old list of possible values.
 ##
+##   l:  Add the line
+##
+##         update_axis_limits ("NAME");
+##
+##       to the type-specific set function.
+##
 ##   m:  Add the line
 ##
 ##         set_NAMEmode ("manual");
 ##
 ##       to the type-specific set function.
 ##
 ## The 'o' and 'O' qualifiers are only useful when the the property type
 ## is something other than octave_value.
@@ -135,16 +141,18 @@ function emit_decls ()
       if (emit_set[i])
       {
 	  printf ("  void set_%s (const %s& val)", name[i], type[i]);
 
 	  if (emit_set[i] == "defn")
 	  {
 	      printf ("\n  {\n    if (! error_state)\n      {\n        %s = val;\n",
 		      name[i]);
+	      if (limits[i])
+		  printf ("        update_axis_limits (\"%s\");\n", name[i]);
 	      if (mode[i])
 		  printf ("        set_%smode (\"manual\");\n", name[i]);
 	      printf ("        mark_modified ();\n      }\n  }\n\n");
 	  }
 	  else
 	      printf (";\n");
       }
 
@@ -200,28 +208,32 @@ BEGIN {
 	  field++;
       }
       else
 	  mutable[idx] = 0;
 
       type[idx] = $(field++);
       name[idx] = $(field++);
 
+      limits[idx] = 0;
       mode[idx] = 0;
       emit_get[idx] = "defn";
       emit_set[idx] = "defn";
       if (type[idx] == "octave_value")
 	  emit_ov_set[idx] = "";
       else
 	  emit_ov_set[idx] = "defn";
 
       if (NF == field)
         {
 	    quals = $field;
 
+	    if (index (quals, "l"))
+		limits[idx] = 1;
+
 	    if (index (quals, "m"))
 		mode[idx] = 1;
 
 	    ## There is a custom inline definition for the get function,
 	    ## so we don't emit anything.
 	    if (index (quals, "g"))
 		emit_get[idx] = "";
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -754,16 +754,27 @@ base_properties::mark_modified (void)
 void
 base_properties::override_defaults (base_graphics_object& obj)
 {
   graphics_object parent_obj = gh_manager::get_object (parent);
   parent_obj.override_defaults (obj);
 }
 
 void
+base_properties::update_axis_limits (const std::string& axis_type) const
+{
+  graphics_handle h = (type == "axes") ? __myhandle__ : parent;
+
+  graphics_object obj = gh_manager::get_object (h);
+
+  if (obj.isa ("axes"))
+    obj.update_axis_limits (axis_type);
+}
+
+void
 base_properties::delete_children (void)
 {
   octave_idx_type n = children.numel ();
 
   for (octave_idx_type i = 0; i < n; i++)
     gh_manager::free (children(i));
 }
 
@@ -1775,16 +1786,21 @@ axes::get_default (const caseless_str& n
       graphics_object parent_obj = gh_manager::get_object (parent);
 
       retval = parent_obj.get_default (name);
     }
 
   return retval;
 }
 
+void
+axes::update_axis_limits (const std::string& /* axis_type */)
+{
+}
+
 std::string axes::properties::go_name ("axes");
 
 // ---------------------------------------------------------------------
 
 static Matrix
 default_data (void)
 {
   Matrix retval (1, 2);
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -661,16 +661,21 @@ public:
   }
 
   void set_tag (const octave_value& val);
 
   void set_parent (const octave_value& val);
 
   void reparent (const graphics_handle& new_parent) { parent = new_parent; }
 
+  // Update data limits for AXIS_TYPE (xdata, ydata, etc.) in the parent
+  // axes object.
+
+  void update_axis_limits (const std::string& axis_type) const;
+
   virtual void delete_children (void);
 
 protected:
   std::string tag;
   std::string type;
   bool __modified__;
   graphics_handle __myhandle__;
   graphics_handle parent;
@@ -769,16 +774,21 @@ public:
 
   virtual base_properties& get_properties (void)
   {
     static base_properties properties;
     error ("base_graphics_object::get_properties: invalid graphics object");
     return properties;
   }
 
+  virtual void update_axis_limits (const std::string& axis_type)
+  {
+    error ("base_graphics_object::update_axis_limits: invalid graphics object");
+  }
+
   virtual bool valid_object (void) const { return false; }
 
   virtual std::string type (void) const { return "unknown"; }
 
   bool isa (const std::string& go_name) const
   {
     return type () == go_name;
   }
@@ -824,37 +834,28 @@ public:
 
   void mark_modified (void) { rep->mark_modified (); }
 
   void override_defaults (base_graphics_object& obj)
   {
     rep->override_defaults (obj);
   }
 
-  void set_from_list (property_list& plist)
-  {
-    rep->set_from_list (plist);
-  }
+  void set_from_list (property_list& plist) { rep->set_from_list (plist); }
 
   void set (const caseless_str& name, const octave_value& val)
   {
     rep->set (name, val);
   }
 
   void set (const octave_value_list& args);
 
-  void set_defaults (const std::string& mode)
-  {
-    rep->set_defaults (mode);
-  }
-
-  octave_value get (void) const
-  {
-    return rep->get ();
-  }
+  void set_defaults (const std::string& mode) { rep->set_defaults (mode); }
+
+  octave_value get (void) const { return rep->get (); }
 
   octave_value get (const caseless_str& name) const
   {
     return name.compare ("default")
       ? get_defaults ()
       : (name.compare ("factory")
 	 ? get_factory_defaults () : rep->get (name));
   }
@@ -873,28 +874,33 @@ public:
 
   octave_value get_factory_defaults (void) const
   {
     return rep->get_factory_defaults ();
   }
 
   graphics_handle get_parent (void) const { return rep->get_parent (); }
 
-  void remove_child (const graphics_handle& h) { return rep->remove_child (h); }
-
-  void adopt (const graphics_handle& h) { return rep->adopt (h); }
-
-  void reparent (const graphics_handle& h) { return rep->reparent (h); }
+  void remove_child (const graphics_handle& h) { rep->remove_child (h); }
+
+  void adopt (const graphics_handle& h) { rep->adopt (h); }
+
+  void reparent (const graphics_handle& h) { rep->reparent (h); }
 
   void defaults (void) const { rep->defaults (); }
 
   bool isa (const std::string& go_name) const { return rep->isa (go_name); }
 
   base_properties& get_properties (void) { return rep->get_properties (); }
 
+  void update_axis_limits (const std::string& axis_type)
+  {
+    rep->update_axis_limits (axis_type);
+  }
+
   bool valid_object (void) const { return rep->valid_object (); }
 
   operator bool (void) const { return rep->valid_object (); }
 
 private:
   base_graphics_object *rep;
 };
 
@@ -1247,19 +1253,19 @@ public:
       octave_value yticklabel m
       octave_value zticklabel m
       octave_value xticklabelmode
       octave_value yticklabelmode
       octave_value zticklabelmode
       color_property xcolor
       color_property ycolor
       color_property zcolor
-      octave_value xscale
-      octave_value yscale
-      octave_value zscale
+      octave_value xscale l
+      octave_value yscale l
+      octave_value zscale l
       octave_value xdir
       octave_value ydir
       octave_value zdir
       octave_value xaxislocation
       octave_value yaxislocation
       octave_value view
       octave_value visible
       octave_value nextplot
@@ -1353,16 +1359,18 @@ public:
   void adopt (const graphics_handle& h) { xproperties.adopt (h); }
 
   void reparent (const graphics_handle& np) { xproperties.reparent (np); }
 
   base_properties& get_properties (void) { return xproperties; }
 
   void defaults (void) const { gripe_not_implemented ("axes::defaults"); }
 
+  void update_axis_limits (const std::string& axis_type);
+
   bool valid_object (void) const { return true; }
 
 private:
   property_list default_properties;
 };
 
 // ---------------------------------------------------------------------
 
@@ -1385,23 +1393,23 @@ public:
     std::string graphics_object_name (void) const { return go_name; }
 
     static property_list::pval_map_type factory_defaults (void);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES
-      data_property xdata
-      data_property ydata
-      data_property zdata
-      data_property ldata
-      data_property udata
-      data_property xldata
-      data_property xudata
+      data_property xdata l
+      data_property ydata l
+      data_property zdata l
+      data_property ldata l
+      data_property udata l
+      data_property xldata l
+      data_property xudata l
       color_property color
       octave_value linestyle
       octave_value linewidth
       octave_value marker
       octave_value markeredgecolor
       octave_value markerfacecolor
       octave_value markersize
       octave_value keylabel
@@ -1590,19 +1598,19 @@ public:
     std::string graphics_object_name (void) const { return go_name; }
 
     static property_list::pval_map_type factory_defaults (void);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES
-      data_property xdata
-      data_property ydata
-      data_property cdata
+      data_property xdata l
+      data_property ydata l
+      data_property cdata l
     END_PROPERTIES
 
     static std::string go_name;
   };
 
 private:
   properties xproperties;
 
@@ -1682,20 +1690,20 @@ public:
     std::string graphics_object_name (void) const { return go_name; }
 
     static property_list::pval_map_type factory_defaults (void);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES
-      data_property xdata
-      data_property ydata
-      data_property zdata
-      data_property cdata
+      data_property xdata l
+      data_property ydata l
+      data_property zdata l
+      data_property cdata l
       octave_value faces
       octave_value vertices
       color_property facecolor a
       octave_value facealpha
       color_property edgecolor a
       octave_value linestyle
       octave_value linewidth
       octave_value marker
@@ -1788,20 +1796,20 @@ public:
     std::string graphics_object_name (void) const { return go_name; }
 
     static property_list::pval_map_type factory_defaults (void);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES
-      data_property xdata
-      data_property ydata
-      data_property zdata
-      data_property cdata
+      data_property xdata l
+      data_property ydata l
+      data_property zdata l
+      data_property cdata l
       color_property facecolor a
       octave_value facealpha
       color_property edgecolor a
       octave_value linestyle
       octave_value linewidth
       octave_value marker
       octave_value markeredgecolor
       octave_value markerfacecolor
