# HG changeset patch
# User Rik <rik@octave.org>
# Date 1388688909 28800
#      Thu Jan 02 10:55:09 2014 -0800
# Node ID 31d8e19a745dbdc9895f892261fd72e5a7a580ff
# Parent  f24d5bd050d9bbf774b8fbc2ee9722b59d2f5fc5
voronoi.m: Add input validation test for 2 points (bug #40996)

* voronoi.m: Add input validation test for 2 points (bug #40996).
Add %!tests for input validation.  Correct misnamed variable harg to hax.

diff --git a/scripts/geometry/voronoi.m b/scripts/geometry/voronoi.m
--- a/scripts/geometry/voronoi.m
+++ b/scripts/geometry/voronoi.m
@@ -71,18 +71,18 @@ function [vx, vy] = voronoi (varargin)
 
   if (nargin < 1)
     print_usage ();
   endif
 
   narg = 1;
   if (isscalar (varargin{1}) && ishandle (varargin{1}))
     hax = varargin{1};
-    if (! isaxes (harg))
-      error ("imagesc: HAX argument must be an axes object");
+    if (! isaxes (hax))
+      error ("voronoi: HAX argument must be an axes object");
     endif
     narg++;
   elseif (nargout < 2)
     hax = gca ();
   endif
 
   if (nargin < 1 + narg || nargin > 3 + narg)
     print_usage ();
@@ -103,16 +103,20 @@ function [vx, vy] = voronoi (varargin)
 
   linespec = {"b"};
   if (narg <= nargin && ischar (varargin{narg}))
     linespec = varargin(narg);
   endif
 
   if (length (x) != length (y))
     error ("voronoi: X and Y must be vectors of the same length");
+  elseif (length (x) < 3)
+    ## See bug #40996.
+    ## For 2 points it would be nicer to just calculate the bisection line.
+    error ("voronoi: minimum of 3 points needed");
   endif
 
   ## Add box to approximate rays to infinity. For Voronoi diagrams the
   ## box can (and should) be close to the points themselves. To make the
   ## job of finding the exterior edges it should be at least two times the
   ## delta below however
   xmax = max (x(:));
   xmin = min (x(:));
@@ -174,10 +178,17 @@ endfunction
 
 %!testif HAVE_QHULL
 %! phi = linspace (-pi, 3/4*pi, 8);
 %! [x,y] = pol2cart (phi, 1);
 %! [vx,vy] = voronoi (x,y);
 %! assert (vx(2,:), zeros (1, columns (vx)), eps);
 %! assert (vy(2,:), zeros (1, columns (vy)), eps);
 
-%% FIXME: Need input validation tests
+%% Input validation tests
+%!error voronoi ()
+%!error voronoi (ones (3,1))
+%!error voronoi (ones (3,1), ones (3,1), "bogus1", "bogus2", "bogus3")
+%!error <HAX argument must be an axes object> voronoi (0, ones (3,1), ones (3,1))
+%!error <X and Y must be vectors of the same length> voronoi (ones (3,1), ones (4,1))
+%!error <minimum of 3 points needed> voronoi (2.5, 3.5)
+%!error <minimum of 3 points needed> voronoi ([2.5, 3.5], [2.5, 3.5])
 
