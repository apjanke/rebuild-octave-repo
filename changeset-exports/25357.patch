# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1525633399 -7200
#      Sun May 06 21:03:19 2018 +0200
# Node ID 7aeafec2b10202860ab9dc82fae3d21ad099ed69
# Parent  1008b4797a6e037f6067d6747ea9d5f00891606f
keep editor hidden at next startup when it was hidden (bug #53830)

* file-editor.cc (check_closing): store visibility before removing tabs and
  deleting the related widgets and restore visibility afterwards

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -392,24 +392,30 @@ namespace octave
       }
 
     settings->setValue ("editor/savedSessionTabs", fetFileNames);
     settings->setValue ("editor/saved_session_encodings", fet_encodings);
     settings->setValue ("editor/saved_session_tab_index", fet_index);
     settings->sync ();
 
     // Finally close all the tabs and return indication that we can exit
-    // the application or close the editor
+    // the application or close the editor.
+    // Closing and deleting the tabs makes the editor visible. In case it was
+    // hidden before, this state has to be restored afterwards
+    bool vis = isVisible ();
+
     for (int i = m_tab_widget->count () - 1; i >= 0; i--)
       {
         // backwards loop since m_tab_widget->count () changes during the loop
         delete m_tab_widget->widget (i);
         m_tab_widget->removeTab (i);
       }
 
+    setVisible (vis);
+
     return true;
   }
 
   void file_editor::request_new_file (const QString& commands)
   {
     // Custom editor? If yes, we can only call the editor without passing
     // some initial contents and even without being sure a new file is opened
     if (call_custom_editor ())
