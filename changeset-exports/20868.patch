# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1449941727 -3600
#      Sat Dec 12 18:35:27 2015 +0100
# Node ID 04748b009201c09e315e301c73988ae727f632a6
# Parent  baa3b9f0e9d408a07f92e28d7f123be6993b7dff
audiodevinfo.cc:code sprint: remove print_usage () in internal functions

Remove print_usage () in internal functions, throw error if dynamic cast
to audiorecorder fails, silence compiler warnings for unused args if
compiling without portaudio.

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -61,16 +61,20 @@ bits_to_format (int bits)
   else if (bits == -1)
     return paFloat32;
   else
     return 0;
 }
 
 #endif
 
+#define NO_PORTAUDIO_MSG\
+  error ("portaudio not found on your system and thus audio functionality is not present");\
+  (void) args;  /*silence compiler warning "unused parameter"*/
+
 DEFUN_DLD (audiodevinfo, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{devinfo} =} audiodevinfo ()\n\
 \n\
 @deftypefnx {} {@var{devs} =} audiodevinfo (@var{io})\n\
 @deftypefnx {} {@var{name} =} audiodevinfo (@var{io}, @var{id})\n\
 @deftypefnx {} {@var{id} =} audiodevinfo (@var{io}, @var{name})\n\
 @deftypefnx {} {@var{id} =} audiodevinfo (@var{io}, @var{rate}, @var{bits}, @var{chans})\n\
@@ -395,22 +399,21 @@ recording using those parameters.\n\
             }
         }
       else
         error ("audiodevinfo: please specify 0 for output and 1 for input devices");
 
       retval = 0;
     }
   else
-    error ("audiodevinfo: wrong number of arguments");
+    print_usage ();
 
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  NO_PORTAUDIO_MSG
+  (void) args;  //silence compiler warning "unused parameter"
 #endif
 
   return retval;
 }
 
 /*
 %!testif HAVE_PORTAUDIO
 %! devinfo = audiodevinfo;
@@ -1805,616 +1808,364 @@ DEFUN_DLD (__recorder_audiorecorder__, a
 @deftypefn  {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fs}, @var{nbits}, @var{channels})\n\
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fs}, @var{nbits}, @var{channels}, @var{id})\n\
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fcn}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
-#ifdef HAVE_PORTAUDIO
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
 
   int nargin = args.length ();
 
   audiorecorder* recorder = new audiorecorder ();
 
-  int offset = 0;
-
   if (nargin > 0)
     {
       bool is_function = (args(0).is_string () || args(0).is_function_handle ()
                           || args(0).is_inline_function ());
 
       if (is_function)
         error ("audioplayer: callbacks not yet implemented");
     }
 
-  switch (nargin - offset)
+  if (nargin >= 3)
     {
-    case 3:
-      recorder->set_fs (args(0 + offset).int_value ());
-      recorder->set_nbits (args(1 + offset).int_value ());
-      recorder->set_channels (args(2 + offset).int_value ());
-      break;
-
-    case 4:
-      recorder->set_fs (args(0 + offset).int_value ());
-      recorder->set_nbits (args(1 + offset).int_value ());
-      recorder->set_channels (args(2 + offset).int_value ());
-      recorder->set_id (args(3 + offset).int_value ());
-      break;
+      recorder->set_fs (args(0).int_value ());
+      recorder->set_nbits (args(1).int_value ());
+      recorder->set_channels (args(2).int_value ());
+    }
+
+  if (nargin == 4)
+    {
+      recorder->set_id (args(3).int_value ());
     }
 
   recorder->init ();
-
   retval = recorder;
 
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
 #endif
 
   return retval;
 }
 
 #ifdef HAVE_PORTAUDIO
 
 static audiorecorder *
 get_recorder (const octave_value& ov)
 {
   const octave_base_value& rep = ov.get_rep ();
 
   octave_base_value *ncrep = const_cast<octave_base_value *> (&rep);
 
-  return dynamic_cast<audiorecorder *> (ncrep);
+  audiorecorder *rec = dynamic_cast<audiorecorder *> (ncrep);
+  if (! rec)
+    error ("audiodevinfo.cc get_recorder: dynamic_cast to audiorecorder failed");
+
+  return rec;
 }
 
 #endif
 
 DEFUN_DLD (__recorder_getaudiodata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data}} __recorder_getaudiodata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  audiorecorder *recorder = get_recorder (args(0));
-
-  if (! recorder)
-    print_usage ();
-
-  retval = recorder->getaudiodata ();
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->getaudiodata ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_channels__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_channels ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_channels ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __recorder_get_fs__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_fs ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_fs ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __recorder_get_id__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_id ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_id ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __recorder_get_nbits__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_nbits ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_nbits ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_sample_number__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_sample_number ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_sample_number ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __recorder_get_tag__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_tag ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_tag ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_total_samples__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_total_samples ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_total_samples ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __recorder_get_userdata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->get_userdata ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->get_userdata ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_isrecording__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_isrecording__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      retval = recorder->isrecording () ? true : false;
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  retval = get_recorder (args(0))->isrecording ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__recorder_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_pause__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      recorder->pause ();
-    }
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  get_recorder (args(0))->pause ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_recordblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_recordblocking__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  audiorecorder *recorder = get_recorder (args(0));
-
-  if (! recorder)
-    print_usage ();
-
-  recorder->recordblocking (args(1).float_value ());
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  float seconds = args(1).float_value ();
+  get_recorder (args(0))->recordblocking (seconds);
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_record__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __recorder_record__ (@var{recorder})\n\
 @deftypefnx {} {} __recorder_record__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   audiorecorder *recorder = get_recorder (args(0));
 
-  if (! recorder)
-    print_usage ();
-
-  if (args.length () == 1)
-    recorder->record ();
-  else if (args.length () == 2)
-    {
-      recorder->set_end_sample (args(1).int_value () * recorder->get_fs ());
-      recorder->record ();
-    }
-  else
-    error ("audiorecorder: wrong number of arguments passed to record");
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  if (args.length () == 2)
+    recorder->set_end_sample (args(1).int_value () * recorder->get_fs ());
+
+  recorder->record ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_resume__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      recorder->resume ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_recorder (args(0))->resume ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_fs__ (@var{recorder}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      recorder->set_fs (args(1).int_value ());
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_recorder (args(0))->set_fs (args(1).int_value ());
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_tag__ (@var{recorder}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      recorder->set_tag (args(1).char_matrix_value ());
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_recorder (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_userdata__ (@var{recorder}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audiorecorder *recorder = get_recorder (args(0));
-
-      if (! recorder)
-        print_usage ();
-
-      recorder->set_userdata (args(1));
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_recorder (args(0))->set_userdata (args(1));
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__recorder_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_stop__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
-  audiorecorder *recorder = get_recorder (args(0));
-
-  if (! recorder)
-    print_usage ();
-
-  recorder->stop ();
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
 #else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+  if (args.length () == 1)
+    get_recorder (args(0))->stop ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_audioplayer__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits}, @var{id})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
 
   int nargin = args.length ();
 
-  if (nargin < 2 || nargin > 4)
-    print_usage ();
-
   audioplayer* recorder = new audioplayer ();
 
   if (! recorder)
-    print_usage ();
+    error ("__player_audioplayer__: Couldn't instantiate new audioplayer");
 
   bool is_function = (args(0).is_string () || args(0).is_function_handle ()
                       || args(0).is_inline_function ());
 
   if (is_function)
     error ("audioplayer: callbacks not yet implemented");
   else
     recorder->set_y (args(0));
@@ -2434,350 +2185,216 @@ Undocumented internal function.\n\
     }
 
   if (is_function)
     recorder->init_fn ();
   else
     recorder->init ();
 
   retval = recorder;
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
 #endif
-
   return retval;
 }
 
 #ifdef HAVE_PORTAUDIO
 
 static audioplayer *
 get_player (const octave_value& ov)
 {
   const octave_base_value& rep = ov.get_rep ();
 
   octave_base_value *ncrep = const_cast<octave_base_value *> (&rep);
 
-  return dynamic_cast<audioplayer *> (ncrep);
+  audioplayer *pl = dynamic_cast<audioplayer *> (ncrep);
+  if (! pl)
+    error ("audiodevinfo.cc get_player: dynamic_cast to audioplayer failed");
+
+  return pl;
 }
 
 #endif
 
 DEFUN_DLD (__player_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_channels__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_channels ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_channels ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __player_get_fs__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_fs ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_fs ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __player_get_id__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_id ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_id ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __player_get_nbits__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_nbits ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_nbits ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_sample_number__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_sample_number ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_sample_number ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __player_get_tag__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_tag ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_tag ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_total_samples__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_total_samples ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_total_samples ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __player_get_userdata__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->get_userdata ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->get_userdata ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_isplaying__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_isplaying__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      retval = player->isplaying () ? true : false;
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    retval = get_player (args(0))->isplaying ();
 #endif
-
   return retval;
 }
 
 DEFUN_DLD (__player_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_pause__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->pause ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->pause ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_playblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_playblocking__ (@var{player})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
 
   audioplayer *player = get_player (args(0));
 
-  if (! player)
-    print_usage ();
-
   if (args.length () == 1)
-    player->playblocking ();
-  else
+    {
+      player->playblocking ();
+    }
+  else if (args.length () == 2)
     {
       if (args(1).is_matrix_type ())
         {
           RowVector range = args(1).row_vector_value ();
 
           unsigned int start = range.elem (0) - 1;
           unsigned int end = range.elem (1) - 1;
 
@@ -2796,47 +2413,38 @@ Undocumented internal function.\n\
             error ("audioplayer: invalid range specified for playback");
 
           player->set_sample_number (start);
         }
 
       player->playblocking ();
     }
 
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
 #endif
 
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_play__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_play__ (@var{player})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
 
   if (args.length () == 1)
     {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->play ();
+      get_player (args(0))->play ();
     }
-  else
+  else if (args.length () == 2)
     {
       audioplayer *player = get_player (args(0));
 
       if (args(1).is_matrix_type ())
         {
           RowVector range = args(1).row_vector_value ();
 
           unsigned int start = range.elem (0) - 1;
@@ -2857,161 +2465,87 @@ Undocumented internal function.\n\
             error ("audioplayer: invalid range specified for playback");
 
           player->set_sample_number (start);
         }
 
       player->play ();
     }
 
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
 #endif
 
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_resume__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->resume ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->resume ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_fs__ (@var{player}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->set_fs (args(1).int_value ());
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->set_fs (args(1).int_value ());
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_tag__ (@var{player}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->set_tag (args(1).char_matrix_value ());
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_userdata__ (@var{player}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 2)
-    {
-      audioplayer *player = get_player (args(0));
-
-      if (! player)
-        print_usage ();
-
-      player->set_userdata (args(1));
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->set_userdata (args(1));
 #endif
-
-  return retval;
+  return octave_value ();
 }
 
 DEFUN_DLD (__player_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_stop__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-  octave_value retval;
-
-#ifdef HAVE_PORTAUDIO
-
+#ifndef HAVE_PORTAUDIO
+  NO_PORTAUDIO_MSG
+#else
   if (args.length () == 1)
-    {
-      audioplayer *player = get_player (args (0));
-
-      if (! player)
-        print_usage ();
-
-      player->stop ();
-    }
-
-#else
-
-  error ("portaudio not found on your system and thus audio functionality is not present");
-
+    get_player (args(0))->stop ();
 #endif
-
-  return retval;
+  return octave_value ();
 }
