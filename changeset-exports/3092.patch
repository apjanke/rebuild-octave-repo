# HG changeset patch
# User jwe
# Date 877074768 0
#      Fri Oct 17 07:52:48 1997 +0000
# Node ID 4bb976b250bf30485d9a66f23d1e97931b85be2a
# Parent  b06dcbb6b3b106fc70b2607e9103b77c3de3c35b
[project @ 1997-10-17 07:48:48 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+Tue Oct 14 10:48:28 1997  Kurt Hornik  <Kurt.Hornik@ci.tuwien.ac.at>
+
+	* emacs/octave-mod.el (octave-block-match-alist):  Move
+	`otherwise' to right after `case' to have octave-close-block()
+	correctly close a `switch' block by `endswitch'.
+
 Thu Oct  2 01:37:15 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* aclocal.m4 (OCTAVE_FLIBS): Ignore -lc and -lgcc.
 	From "Ram'on Garc'ia Fern'andez" <ramon@juguete.quim.ucm.es>
 
 	* mkoctfile.in: Handle -IDIR option.
 
 Thu Sep 25 11:47:45 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -461,23 +461,30 @@ Interpreter:
     array.  Be sure to note in the manual that this is not the
     preferred way to write a function that can handle vector/matrix
     arguments because there is a significant overhead for function
     calls.  If you are really looking to make a function work for
     vector/matrix arguments and you want it to run fast, you should
     write it in terms of the existing vector/matrix operators as much
     as possible.
 
+  * Make it possible to write a function that gets a reference to a
+    matrix in memory and change one or more elements without
+    generating a second copy of the data.
+
 -------
 History:
 -------
 
   * Add an option to allow saving input from script files in the
     history list.
 
+  * The history command should accept two numeric arguments to
+    indicate a range of history entries to display, save or read.
+
   * Add an option to include information about the Octave session in
     the history list.  Possibly a time/date stamp and the current
     Octave line number, appended as a comment (users should probably
     be able to control the format).
 
   * Fix history problems -- core dump if multiple processes are
     writing to the same history file?
 
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -323,17 +323,17 @@ newline or semicolon after an else or en
 (defvar octave-block-begin-or-end-regexp
   (concat octave-block-begin-regexp "\\|" octave-block-end-regexp))
 (defvar octave-block-else-or-end-regexp
   (concat octave-block-else-regexp "\\|" octave-block-end-regexp))
 (defvar octave-block-match-alist
   '(("for" . ("end" "endfor"))
     ("function" . ("end" "endfunction"))
     ("if" . ("else" "elseif" "end" "endif"))
-    ("switch" . ("case" "end" "endswitch" "otherwise"))
+    ("switch" . ("case" "otherwise" "end" "endswitch"))
     ("try" . ("catch" "end" "end_try_catch"))
     ("unwind_protect" . ("unwind_protect_cleanup" "end"
 			 "end_unwind_protect"))
     ("while" . ("end" "endwhile")))
   "Alist with Octave's matching block keywords.
 Has Octave's begin keywords as keys and a list of the matching else or
 end keywords as associated values.")
 
diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -780,20 +780,20 @@ operator * (const ComplexRowVector& v, c
 ComplexRowVector
 linspace (const Complex& x1, const Complex& x2, int n)
 {
   ComplexRowVector retval;
 
   if (n > 0)
     {
       retval.resize (n);
-      Complex delta = (x2 - x1) / (n - 1);
+      Complex delta = (x2 - x1) / (n - 1.0);
       retval.elem (0) = x1;
       for (int i = 1; i < n-1; i++)
-	retval.elem (i) = x1 + i * delta;
+	retval.elem (i) = x1 + 1.0 * i * delta;
       retval.elem (n-1) = x2;
     }
 
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+Thu Oct  2 17:13:02 1997  Mumit Khan  <khan@dhaka.xraylith.wisc.edu>
+
+	* CRowVector.cc (linspace): Removed attempt for implicit conversion 
+	to complex<double>(int) instead of complex<double>(double).
+
+	* lo-mappers.cc (atanh): Ditto.
+
 Thu Jul 31 22:13:54 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* idx-vector.cc (IDX_VEC_REP::sort): New function.
 	* idx-vector.h (idx_vector::sort): Ditto.
 	* Array2-idx.h (Array2<T>::maybe_delete_elements): Use it before
 	trying to delete elements specified by the index vectors.
 
 Fri Jul 25 17:31:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -261,17 +261,17 @@ atan (const Complex& x)
   static Complex i (0, 1);
 
   return i * log ((i + x) / (i - x)) / 2.0;
 }
 
 Complex
 atanh (const Complex& x)
 {
-  return log ((1 + x) / (1 - x)) / 2.0;
+  return log ((1.0 + x) / (1.0 - x)) / 2.0;
 }
 
 Complex
 ceil (const Complex& x)
 {
   return Complex (ceil (real (x)), ceil (imag (x)));
 }
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,13 @@
 Fri Oct 10 11:18:10 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* specfun/gammai.m: Avoid problems with whitespace when
+	constructing matrices.
+
 	* polynomial/polyfit.m: Compute yf correctly.  From Seung Lee
 	<SJL@nrc.gov>.  Also return yf in the same orientation as the
 	original y vector.
 
 Fri Sep 19 17:04:40 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* linear-algebra/cross.m: Use direct formula instead of calling
 	det three times in a loop.  If both args are column (row) vectors,
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -1,9 +1,9 @@
-## Copyright (C) 1996 John W. Eaton
+## Copyright (C) 1996, 1997 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 2, or (at your option)
 ## any later version.
 ##
diff --git a/scripts/specfun/gammai.m b/scripts/specfun/gammai.m
--- a/scripts/specfun/gammai.m
+++ b/scripts/specfun/gammai.m
@@ -70,18 +70,20 @@ function y = gammai (a, x)
   endif
 
   ## For x >= a + 1, use the continued fraction.
   ## Note, however, that this converges MUCH slower than the series
   ## expansion for small a and x not too large!
   k = find ((x >= a + 1) & (x < Inf) & (a > 0));
   if any (k)
     len = length (k);
-    u   = [zeros (1, len); ones (1, len)];
-    v   = [ones (1, len); x(k)];
+    t0  = zeros (1, len);
+    t1  = ones (1, len);
+    u   = [t0; t1];
+    v   = [t1; x(k)];
     c_old = 0;
     c_new = v(1, :) ./ v(2, :);
     n   = 1;
     while (max (abs (c_old ./ c_new - 1)) > 10 * eps)
       c_old = c_new;
       u = v + u .* (ones (2, 1) * (n - a(k)));
       v = u .* (ones (2, 1) * x(k)) + n * v;
       c_new = v(1, :) ./ v(2, :);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Tue Oct  7 16:51:01 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* defun-int.h (DEFINE_FUN_INSTALLER_FUN): Set installed to true
+	after installing the function.
+
 Thu Sep 25 10:17:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/filter.cc (Ffilter): Return second output value
 	even when called with only 3 arguments.
 
 Mon Sep 22 16:44:27 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/rand.cc (do_rand): Print error if first of two
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -83,28 +83,29 @@ alias_builtin (const string& alias, cons
   DECLARE_FUN (name, args_name, nargout_name)
 
 // No definition is required for an alias.
 
 #define DEFALIAS_INTERNAL(name, alias)
 
 #endif /* ! MAKE_BUILTINS */
 
-// Define the structure that will be used to insert this function into
+// Define the code that will be used to insert the new function into
 // the symbol table.
 
 #define DEFINE_FUN_INSTALLER_FUN(name, doc) \
   bool \
   FS ## name (void) \
   { \
     static bool installed = false; \
     if (! installed) \
       { \
 	check_version (OCTAVE_VERSION, #name); \
 	install_builtin_function (F ## name, #name, doc); \
+	installed = true;
       } \
     return installed; \
   }
 
 #define DECLARE_FUN(name, args_name, nargout_name) \
   octave_value_list \
   F ## name (const octave_value_list& args_name, int nargout_name)
 
