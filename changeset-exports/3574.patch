# HG changeset patch
# User jwe
# Date 949659206 0
#      Fri Feb 04 10:13:26 2000 +0000
# Node ID 787bb9d8f60edf9e65235b10b78d6b6d22a1aa71
# Parent  6ae6f1180e6207c4dafddd113ad7d22641cf09bf
[project @ 2000-02-04 10:13:23 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,12 +1,15 @@
 2000-02-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
-	* dColVector.h, dRowVector.h, CColVector.h, CRowVector.h:
-	Use MARRAY_FORWARD_DEFS here.
+	* MArray-defs.h: Many new macros to make declaration and
+	definition of operators more consistent.
+	
+	* MArray.h, MArray2.h, dColVector.h, dRowVector.h, CColVector.h,
+	CRowVector.h, dMatrix.h, CMatrix.h: Use them.
 
 2000-02-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dMatrix.cc (Matrix::ifourier): Cast divisor to double.
 	(Matrix::ifourier2d): Likewise.
 	* CMatrix.cc (ComplexMatrix::ifourier): Likewise.
 	(ComplexMatrix::ifourier2d): Likewise.
 
diff --git a/liboctave/MArray-defs.h b/liboctave/MArray-defs.h
--- a/liboctave/MArray-defs.h
+++ b/liboctave/MArray-defs.h
@@ -66,17 +66,17 @@
 
 // Generate friend declarations for the OP= operators.
 #define MARRAY_OP_ASSIGN_FRIENDS(A_T) \
   MARRAY_OP_ASSIGN_DECLS (A_T, T, friend, <>, T) \
   MARRAY_OP_ASSIGN_DECLS (A_T, T, friend, <>, A_T<T>)
 
 // Instantiate the OP= operators.
 #define MARRAY_OP_ASSIGN_DEFS(A_T, E_T) \
-  MARRAY_OP_ASSIGN_DECLS (A_T, E_T, template, , T) \
+  MARRAY_OP_ASSIGN_DECLS (A_T, E_T, template, , E_T) \
   MARRAY_OP_ASSIGN_DECLS (A_T, E_T, template, , A_T<E_T>)
 
 // A function that can be used to forward OP= operations from derived
 // classes back to us.
 #define MARRAY_OP_ASSIGN_FWD_FCN(R, F, T, C_X, X_T, C_Y, Y_T) \
   inline R \
   F (X_T& x, const Y_T& y) \
   { \
diff --git a/liboctave/MArray.cc b/liboctave/MArray.cc
--- a/liboctave/MArray.cc
+++ b/liboctave/MArray.cc
@@ -155,30 +155,30 @@ MARRAY_AA_OP (operator +, +)
 MARRAY_AA_OP (operator -, -)
 MARRAY_AA_OP (product,    *)
 MARRAY_AA_OP (quotient,   /)
 
 // Unary MArray ops.
 
 template <class T>
 MArray<T>
+operator + (const MArray<T>& a)
+{
+  return a;
+}
+
+template <class T>
+MArray<T>
 operator - (const MArray<T>& a)
 {
   int l = a.length ();
   MArray<T> result (l);
   T *r = result.fortran_vec ();
   const T *x = a.data ();
   NEG_V (r, l, x);
   return result;
 }
 
-template <class T>
-MArray<T>
-operator + (const MArray<T>& a)
-{
-  return a;
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/MArray2.cc b/liboctave/MArray2.cc
--- a/liboctave/MArray2.cc
+++ b/liboctave/MArray2.cc
@@ -168,16 +168,23 @@ MARRAY_A2A2_OP (operator +, +)
 MARRAY_A2A2_OP (operator -, -)
 MARRAY_A2A2_OP (product,    *)
 MARRAY_A2A2_OP (quotient,   /)
 
 // Unary MArray2 ops.
 
 template <class T>
 MArray2<T>
+operator + (const MArray2<T>& a)
+{
+  return a;
+}
+
+template <class T>
+MArray2<T>
 operator - (const MArray2<T>& a)
 {
   int l = a.length ();
   MArray2<T> result (a.rows (), a.cols ());
   T *r = result.fortran_vec ();
   const T *x = a.data ();
   NEG_V (r, l, x);
   return result;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2000-02-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (%.df : %.cc): Don't pass -c to compiler.
+
 2000-02-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-base-mat.cc: Include pr-output.h here.
 
 	* DLD-FUNCTIONS/rand.cc (curr_rand_dist): Return const char *
 	instead of char *.
 
 	* oct-fstrm.cc (octave_fstream::seek, octave_fstream::tell): 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -18,17 +18,17 @@ INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 PT_FLAGS = -fexternal-templates -fno-implicit-templates
 CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
-	@$(CXXCPP) -c $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
+	@$(CXXCPP) $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	  | $(srcdir)/mkdefs > $@.t
 	@mv $@.t $@
 
 # How to make a .oct file from a .o file:
 
 ifeq ($(OCTAVE_LITE), true)
   ifdef CXXPICFLAG
     %.oct : pic/%.o
