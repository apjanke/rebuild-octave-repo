# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1251960705 -7200
#      Thu Sep 03 08:51:45 2009 +0200
# Node ID 1c76e806c2a7ee46a1435ce10d7a87682079c813
# Parent  1be3c73ed7b58883686c7ef2eebcb7b1e6991065
possibly mutate after in-place computed assignment

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-09-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov.cc (octave_value::assign (assign_op, const octave_value&)):
+	Call maybe_mutate after in-place operation.
+
 2009-09-03  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov.cc (octave_value::do_non_const_unary_op): Split to
 	genuine/non-genuine case.
 	(octave_value::binary_op_to_assign_op): New method.
 	* ov.h: Declare it.
 	* ov-re-mat.h (octave_matrix::changesign): New method.
 	* ov-flt-re-mat.h (octave_float_matrix::changesign): New method.
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -1281,16 +1281,17 @@ octave_value::assign (assign_op op, cons
 	  f = octave_value_typeinfo::lookup_assign_op (op, tthis, trhs);
         }
 
       if (f)
 	{
 	  try
 	    {
 	      f (*rep, octave_value_list (), *rhs.rep);
+              maybe_mutate (); // Usually unnecessary, but may be needed (complex arrays).
 	    }
 	  catch (octave_execution_exception)
 	    {
 	      gripe_library_execution_error ();
 	    }
 	}
       else
         {
