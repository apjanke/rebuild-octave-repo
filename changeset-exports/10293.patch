# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1265785063 -3600
#      Wed Feb 10 07:57:43 2010 +0100
# Node ID ba373aea03d9742661a04802beba669046869b17
# Parent  c1246f17119eee49eb0103b00d018d23cf616263
remove islist

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/private/__isequal__.m: Remove list-related stub.
+
 2010-02-09  John W. Eaton  <jwe@octave.org>
 
 	* image/imshow.m: Allow logical values for images.
 
 2010-02-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/accumarray.m: Use != instead of diff to compare indices in
 	dense case. Set explicit mode in sparse case to aid optimization.
diff --git a/scripts/general/private/__isequal__.m b/scripts/general/private/__isequal__.m
--- a/scripts/general/private/__isequal__.m
+++ b/scripts/general/private/__isequal__.m
@@ -51,22 +51,16 @@ function t = __isequal__ (nans_compare_e
   if (nargin < 3)
     print_usage ();
   endif
 
   l_v = nargin - 2;
 
   ## Generic tests.
 
-  ## Give an error for a list (that will make the code simpler and lists
-  ## are deprecated anyway.
-  if (islist (x))
-    error ("__isequal__: list objects are deprecated and cannot be tested for equality here; use cell arrays instead");
-  endif
-
   ## All arguments must either be of the same class or they must be
   ## numeric values.
   t = (all (strcmp (class(x),
 		   cellfun (@class, varargin, "UniformOutput", false)))
        || ((isnumeric (x) || islogical (x))
 	   && all ((cellfun (@isnumeric, varargin) | cellfun (@islogical, varargin)))));
 
   if (t)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base.h (octave_base_value::is_list): Remove.
+	* ov.h (octave_value::is_list): Remove.
+	* data.cc (Fislist): Remove.
+	* oct-stream.cc (printf_value_cache::printf_value_cache): Don't call
+	is_list.
+
 2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-str-mat.h (octave_char_matrix_str::is_real_type): Delete
 	overload.
 	* data.cc (Fisreal): Improve docs.
 
 2010-02-10  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -3322,32 +3322,16 @@ Logical and character arrays are not con
   if (args.length () == 1)
     retval = args(0).is_numeric_type ();
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (islist, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} islist (@var{x})\n\
-Return nonzero if @var{x} is a list.\n\
-@end deftypefn")
-{
-  octave_value retval;
-
-  if (args.length () == 1)
-    retval = args(0).is_list ();
-  else
-    print_usage ();
-
-  return retval;
-}
-
 DEFUN (ismatrix, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} ismatrix (@var{a})\n\
 Return 1 if @var{a} is a numeric, logical or character matrix or scalar.\n\
 Otherwise, return 0.\n\
 @end deftypefn")
 {
   octave_value retval = false;
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -2382,18 +2382,17 @@ public:
     : values (args), val_idx (0), elt_idx (0),
       n_vals (values.length ()), n_elts (0), data (0),
       curr_state (ok)
   {
     for (octave_idx_type i = 0; i < values.length (); i++)
       {
 	octave_value val = values(i);
 
-	if (val.is_map () || val.is_cell () || val.is_object ()
-	    || val.is_list ())
+	if (val.is_map () || val.is_cell () || val.is_object ())
 	  {
 	    gripe_wrong_type_arg (who, val);
 	    break;
 	  }
       }
   }
 
   ~printf_value_cache (void) { }
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -347,18 +347,16 @@ public:
   virtual bool is_range (void) const { return false; }
 
   virtual bool is_map (void) const { return false; }
 
   virtual bool is_object (void) const { return false; }
 
   virtual bool is_cs_list (void) const { return false; }
 
-  virtual bool is_list (void) const { return false; }
-
   virtual bool is_magic_colon (void) const { return false; }
 
   virtual bool is_all_va_args (void) const { return false; }
 
   virtual octave_value all (int = 0) const;
 
   virtual octave_value any (int = 0) const;
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -271,17 +271,17 @@ public:
   octave_value (const Array<octave_idx_type>& inda, 
                 bool zero_based = false, bool cache_index = false);
   octave_value (const Array<std::string>& cellstr);
   octave_value (const idx_vector& idx);
   octave_value (double base, double limit, double inc);
   octave_value (const Range& r);
   octave_value (const Octave_map& m);
   octave_value (const Octave_map& m, const std::string& id);
-  octave_value (const octave_value_list& m, bool is_cs_list = false);
+  octave_value (const octave_value_list& m, bool = false);
   octave_value (octave_value::magic_colon);
 
   octave_value (octave_base_value *new_rep, bool borrow = false);
   octave_value (octave_base_value *new_rep, int xcount) GCC_ATTR_DEPRECATED;
 
   // Copy constructor.
 
   octave_value (const octave_value& a)
@@ -532,19 +532,16 @@ public:
     { return rep->is_map (); }
 
   bool is_object (void) const
     { return rep->is_object (); }
 
   bool is_cs_list (void) const
     { return rep->is_cs_list (); }
 
-  bool is_list (void) const
-    { return rep->is_list (); }
-
   bool is_magic_colon (void) const
     { return rep->is_magic_colon (); }
 
   bool is_null_value (void) const
     { return rep->is_null_value (); }
 
   // Are any or all of the elements in this constant nonzero?
 
