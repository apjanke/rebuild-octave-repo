# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1385224059 -3600
#      Sat Nov 23 17:27:39 2013 +0100
# Node ID d62570cfbab903cd30aa40af9e9a1c01ac9bea9a
# Parent  edaa9ed49a1f0abf65a4e4822708577b14857e76
reduce default icon size to 16 pixel for larger working areas in the widgets

* main-window.cc (notice-settings): default for icon size is 16
* files-dock-widget (notice-settings): default for icon size is 16
* file-editor.cc (notice-settings): default for icon size is 16
* settings-dialog (constructor): default for icon size is 16

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -727,17 +727,17 @@ files_dock_widget::contextmenu_findfiles
     }
 }
 
 void
 files_dock_widget::notice_settings (const QSettings *settings)
 {
   // Qsettings pointer is checked before emitting.
 
-  int icon_size = settings->value ("toolbar_icon_size",24).toInt ();
+  int icon_size = settings->value ("toolbar_icon_size",16).toInt ();
   if (icon_size > 16)
     icon_size = icon_size - 4;
   _navigation_tool_bar->setIconSize (QSize (icon_size,icon_size));
 
   // file names are always shown, other columns can be hidden by settings
   _file_tree_view->setColumnHidden (0, false);
   _file_tree_view->setColumnHidden (1,
     ! settings->value ("filesdockwidget/showFileSize",false).toBool ());
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -835,17 +835,17 @@ file_editor::handle_editor_state_changed
 
       setFocusProxy (_tab_widget->currentWidget ());
     }
 }
 
 void
 file_editor::notice_settings (const QSettings *settings)
 {
-  int icon_size = settings->value ("toolbar_icon_size", 24).toInt ();
+  int icon_size = settings->value ("toolbar_icon_size", 16).toInt ();
   _tool_bar->setIconSize (QSize (icon_size, icon_size));
   // Relay signal to file editor tabs.
   emit fetab_settings_changed (settings);
 }
 
 void
 file_editor::request_preferences (bool)
 {
@@ -863,16 +863,17 @@ file_editor::construct (void)
 {
   QWidget *editor_widget = new QWidget (this);
 
   // FIXME: what was the intended purpose of this unused variable?
   // QStyle *editor_style = QApplication::style ();
 
   _menu_bar = new QMenuBar (editor_widget);
   _tool_bar = new QToolBar (editor_widget);
+  _tool_bar->setMovable (true);
   _tab_widget = new QTabWidget (editor_widget);
   _tab_widget->setTabsClosable (true);
 
   QAction *new_action = new QAction (QIcon (":/actions/icons/filenew.png"),
                                      tr ("&New File"), _tool_bar);
 
   QAction *open_action = new QAction (QIcon (":/actions/icons/fileopen.png"),
                                       tr ("&Open File"), _tool_bar);
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -627,17 +627,17 @@ main_window::notice_settings (const QSet
         }
     }
   if (widget_icon_data[icon_set_found].name != "NONE")
     _release_notes_icon = widget_icon_data[icon_set_found].path
                           + "ReleaseWidget.png";
   else
     _release_notes_icon = ":/actions/icons/logo.png";
 
-  int icon_size = settings->value ("toolbar_icon_size",24).toInt ();
+  int icon_size = settings->value ("toolbar_icon_size",16).toInt ();
   _main_tool_bar->setIconSize (QSize (icon_size,icon_size));
 
   resource_manager::update_network_settings ();
 }
 
 
 void
 main_window::prepare_to_exit (void)
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -75,17 +75,17 @@ settings_dialog::settings_dialog (QWidge
     language = tr ("System setting");
   int selected = ui->comboBox_language->findText (language);
   if (selected >= 0)
     ui->comboBox_language->setCurrentIndex (selected);
   else
     ui->comboBox_language->setCurrentIndex (0);  // System is default
 
   ui->toolbar_icon_size->setValue (settings->value ("toolbar_icon_size",
-                                                    24).toInt ());
+                                                    16).toInt ());
 
   // which icon has to be selected
   QString widget_icon_set =
     settings->value ("DockWidgets/widget_icon_set","NONE").toString ();
   ui->general_icon_octave-> setChecked (true);  // the default (if invalid set)
   ui->general_icon_octave-> setChecked (widget_icon_set == "NONE");
   ui->general_icon_graphic-> setChecked (widget_icon_set == "GRAPHIC");
   ui->general_icon_letter-> setChecked (widget_icon_set == "LETTER");
