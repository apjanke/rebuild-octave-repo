# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1259441170 18000
#      Sat Nov 28 15:46:10 2009 -0500
# Node ID fed4aad2cdca289d9eed8a9da7747bbdd054ca52
# Parent  3ec3b8e80b67ae8d5d342c05438f1188e6d44da3
handle indexed images in opengl renderer

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-28  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* gl-render.cc (opengl_renderer::draw_image): Handle indexed images.
+
 2009-11-28  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* gl-render.h (opengl_renderer::draw): Draw children from end of
 	list to preserve correct stacking order (first child should be on
 	top).
 
 	* graphics.cc (maybe_set_children): Store sorted child lists.
 
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -2689,17 +2689,17 @@ opengl_renderer::draw_text (const text::
   render_text (props.get_string (),
 	     pos(0), pos(1), pos(2),
 	     halign, valign, props.get_rotation ());
 }
 
 void
 opengl_renderer::draw_image (const image::properties& props)
 {
-  octave_value cdata = props.get_cdata ();
+  octave_value cdata = props.get_color_data ();
   dim_vector dv (cdata.dims ());
   int h = dv(0), w = dv(1);
   bool ok = true;
   
   const Matrix x = props.get_xdata ().matrix_value ();
   const Matrix y = props.get_ydata ().matrix_value ();
   const ColumnVector p0 = xform.transform (x(0), y(0), 0);
   const ColumnVector p1 = xform.transform (x(1), y(1), 0);
@@ -2812,23 +2812,17 @@ opengl_renderer::draw_image (const image
 	  glDrawPixels (j1-j0, i1-i0, GL_RGB, GL_UNSIGNED_BYTE, a);
 	}
       else
 	{
 	  ok = false;
 	  warning ("opengl_texture::draw: invalid image data type (expected double, uint16, or uint8)");
 	}
     }
-  // indexed
-  else if (dv.length () == 2)
-    {
-      // FIXME -- deal with indexed data
-      warning ("opengl_texture::draw:image indexed images not supported yet");
-    }
-  else
+  else 
     {
       ok = false;
       warning ("opengl_texture::draw: invalid image size (expected n*m*3 or n*m)");
     }
   glPixelZoom (1, 1);
 }
 
 void
