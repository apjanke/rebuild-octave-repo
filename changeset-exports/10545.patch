# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1272015778 -7200
#      Fri Apr 23 11:42:58 2010 +0200
# Node ID ffe28cdc6fe25e9bbcfc7d0c668832b0ceb2ccc2
# Parent  9961fc022d9dab62bb1e5b48c00865abf53f6892
fix reshape() and permute() for scalars

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base-scalar.h (octave_base_scalar::reshape,
+	octave_base_scalar::permute): Remove implementations.
+	* ov-base-scalar.cc (octave_base_scalar::reshape,
+	octave_base_scalar::permute): Provide correct implementations here.
+
 2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-bool.h (octave_bool::empty_clone): Correctly return an empty
 	matrix.
 	* ov-float.h (octave_float::empty_clone): Ditto.
 	* ov-base-mat.h (octave_base_matrix::clone,
 	octave_base_matrix::empty_clone): Remove.
 	* ov-base-scalar.h (octave_base_scalar::clone,
diff --git a/src/ov-base-scalar.cc b/src/ov-base-scalar.cc
--- a/src/ov-base-scalar.cc
+++ b/src/ov-base-scalar.cc
@@ -96,16 +96,30 @@ octave_base_scalar<ST>::subsasgn (const 
     default:
       panic_impossible ();
     }
 
   return retval;
 }
 
 template <class ST>
+octave_value
+octave_base_scalar<ST>::permute (const Array<int>& vec, bool inv) const
+{
+  return Array<ST> (1, 1, scalar).permute (vec, inv);
+}
+
+template <class ST>
+octave_value
+octave_base_scalar<ST>::reshape (const dim_vector& new_dims) const
+{
+  return Array<ST> (1, 1, scalar).reshape (new_dims);
+}
+
+template <class ST>
 bool
 octave_base_scalar<ST>::is_true (void) const
 {
   bool retval = false;
 
   if (xisnan (scalar))
     error ("invalid conversion from NaN to logical");
   else
diff --git a/src/ov-base-scalar.h b/src/ov-base-scalar.h
--- a/src/ov-base-scalar.h
+++ b/src/ov-base-scalar.h
@@ -75,21 +75,19 @@ public:
   bool is_constant (void) const { return true; }
 
   bool is_defined (void) const { return true; }
 
   dim_vector dims (void) const { static dim_vector dv (1, 1); return dv; }
 
   octave_idx_type nnz (void) const { return (scalar != ST ()) ? 1 : 0; }
 
-  octave_value permute (const Array<int>&, bool = false) const
-    { return scalar; }
+  octave_value permute (const Array<int>&, bool = false) const;
 
-  octave_value reshape (const dim_vector& new_dims) const
-    { return array_value ().reshape (new_dims); }
+  octave_value reshape (const dim_vector& new_dims) const;
 
   size_t byte_size (void) const { return sizeof (ST); }
 
   octave_value all (int = 0) const { return (scalar != ST ()); }
 
   octave_value any (int = 0) const { return (scalar != ST ()); }
 
   octave_value diag (octave_idx_type k = 0) const 
