# HG changeset patch
# User jwe
# Date 747887375 0
#      Mon Sep 13 02:29:35 1993 +0000
# Node ID ef73939dc2c5d7e8f4a1a617ce458e116819c4af
# Parent  e03eea9ed19be802e9a56b5508cd69786017b549
[project @ 1993-09-13 02:29:35 by jwe]
(syl): Call is_empty instead of empty_arg.

diff --git a/src/syl.cc b/src/syl.cc
--- a/src/syl.cc
+++ b/src/syl.cc
@@ -45,26 +45,16 @@ extern "C"
  
   int F77_FCN (ztrsyl) (const char*, const char*, const int*,
 			const int*, const int*, const Complex*,
 			const int*, const Complex*, const int*,
 			const Complex*, const int*, double*, int*,
 			long, long);
 }
 
-// Local function: check for empty matrix arguments.  Probably should make 
-// this available elsewhere, since tc-xxx functions do this a lot.
-
-int
-empty_arg (tree_constant& arg)
-{
-  return (arg.rows () == 0 || arg.columns () == 0);
-}
-
-
 // Local function: construct return vector of empty matrices.  Return
 // empty matrices and/or gripe when appropriate.  Probably should make
 // this available elsewhere, since tc-xxx functions do this a lot.
 
 tree_constant *
 empty_tree (int nargout, char* fcn_name)
 {
   tree_constant *retval = NULL_TREE_CONST;
@@ -138,17 +128,17 @@ tree_constant *
 syl (tree_constant *args, int nargin, int nargout)
 {
   tree_constant *retval = NULL_TREE_CONST;
 
   tree_constant arga = args[1].make_numeric ();
   tree_constant argb = args[2].make_numeric ();
   tree_constant argc = args[3].make_numeric ();
 
-  if (empty_arg (arga) || empty_arg (argb) || empty_arg (argc))
+  if (arga.is_empty () || argb.is_empty () || argc.is_empty ())
     retval = empty_tree (nargout, "syl");
   else
     {
 
 // Arguments are not empty, so check for correct dimensions.
 
       int a_rows = arga.rows ();
       int a_cols = arga.columns ();
