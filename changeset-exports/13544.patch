# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311715205 -7200
#      Tue Jul 26 23:20:05 2011 +0200
# Node ID 81eef7babeb5a1ed1ffa27479b742bb4b5e24461
# Parent  8d529f8103dc6265564b494962b32a715634914d
Tagged unused variables with Q_UNUSED, so that no warnings remain.

diff --git a/gui/src/CommandLineParser.cpp b/gui/src/CommandLineParser.cpp
--- a/gui/src/CommandLineParser.cpp
+++ b/gui/src/CommandLineParser.cpp
@@ -38,10 +38,11 @@ CommandLineParser::registerOption (QStri
   commandLineOption.description = description;
   commandLineOption.withArgument = withArgument;
   registerOption (commandLineOption);
 }
 
 void
 CommandLineParser::parse (int argc, char** argv)
 {
-
+  Q_UNUSED(argc);
+  Q_UNUSED(argv);
 }
diff --git a/gui/src/terminal/History.cpp b/gui/src/terminal/History.cpp
--- a/gui/src/terminal/History.cpp
+++ b/gui/src/terminal/History.cpp
@@ -542,57 +542,27 @@ HistoryScrollBlockArray::isWrappedLine (
 {
   return false;
 }
 
 void
 HistoryScrollBlockArray::getCells (int lineno, int colno,
 				   int count, Character res[])
 {
-  /*
-  if (!count)
-    return;
-
-  const Block *b = m_blockArray.at (lineno);
-
-  if (!b)
-    {
-      memset (res, 0, count * sizeof (Character));	// still better than random data
-      return;
-    }
-
-  assert (((colno + count) * sizeof (Character)) < ENTRIES);
-  memcpy (res, b->data + (colno * sizeof (Character)),
-	  count * sizeof (Character));
-          */
+  Q_UNUSED(lineno);
+  Q_UNUSED(colno);
+  Q_UNUSED(count);
+  Q_UNUSED(res);
 }
 
 void
 HistoryScrollBlockArray::addCells (const Character a[], int count)
 {
-  /*
-  Block *b = m_blockArray.lastBlock ();
-
-  if (!b)
-    return;
-
-  // put cells in block's data
-  assert ((count * sizeof (Character)) < ENTRIES);
-
-  memset (b->data, 0, ENTRIES);
-
-  memcpy (b->data, a, count * sizeof (Character));
-  b->size = count * sizeof (Character);
-
-  size_t res = m_blockArray.newBlock ();
-  assert (res > 0);
-  Q_UNUSED (res);
-
-  m_lineLengths.insert (m_blockArray.getCurrent (), count);
-  */
+  Q_UNUSED(a);
+  Q_UNUSED(count);
 }
 
 void
 HistoryScrollBlockArray::addLine (bool)
 {
 }
 
 //////////////////////////////////////////////////////////////////////
