# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1227166597 -3600
#      Thu Nov 20 08:36:37 2008 +0100
# Branch release-3-0-x
# Node ID cee2f0ae1dba64b6332b6dd3f537e48288999ae8
# Parent  a0b28e51e3d2c6161f6f870cb4abaf94100337eb
Correct cast of matrix by cell or struct concatenation

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2008-11-12  David Bateman  <dbateman@free.fr>
+
+	* OPERATORS/op-cell.cc (op_catop_matrix_cell): Cast args in the correct
+	order.
+	* OPERATORS/op-struct.cc (op_catop_matrix_struct): Ditto.
+
 2008-10-30  John W. Eaton  <jwe@octave.org>
 
 	* oct-map.cc (Octave_map::index): Copy key_list.
 
 2008-10-17  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Undo part of change from
 	2007-09-04 (compute Y at each iteration).
diff --git a/src/OPERATORS/op-cell.cc b/src/OPERATORS/op-cell.cc
--- a/src/OPERATORS/op-cell.cc
+++ b/src/OPERATORS/op-cell.cc
@@ -65,17 +65,17 @@ oct_catop_cell_matrix (octave_base_value
   return retval;
 }
 
 static octave_value
 oct_catop_matrix_cell (octave_base_value& a1, const octave_base_value& a2,
 			 const Array<octave_idx_type>&)
 {
   octave_value retval;
-  CAST_BINOP_ARGS (const octave_cell&, const octave_matrix&);
+  CAST_BINOP_ARGS (const octave_matrix&, const octave_cell&);
   NDArray tmp = v1.array_value ();
   dim_vector dv = tmp.dims ();
   if (dv.all_zero ())
     retval = octave_value (v2.cell_value ());
   else
     error ("invalid concatenation of cell array with matrix");
   return retval;
 }
diff --git a/src/OPERATORS/op-struct.cc b/src/OPERATORS/op-struct.cc
--- a/src/OPERATORS/op-struct.cc
+++ b/src/OPERATORS/op-struct.cc
@@ -64,17 +64,17 @@ oct_catop_struct_matrix (octave_base_val
   return retval;
 }
 
 static octave_value
 oct_catop_matrix_struct (octave_base_value& a1, const octave_base_value& a2,
 			 const Array<octave_idx_type>&)
 {
   octave_value retval;
-  CAST_BINOP_ARGS (const octave_struct&, const octave_matrix&);
+  CAST_BINOP_ARGS (const octave_matrix&, const octave_struct&);
   NDArray tmp = v1.array_value ();
   dim_vector dv = tmp.dims ();
   if (dv.all_zero ())
     retval = octave_value (v2.map_value ());
   else
     error ("invalid concatenation of structure with matrix");
   return retval;
 }
