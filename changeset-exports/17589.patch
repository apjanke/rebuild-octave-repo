# HG changeset patch
# User Rik <rik@octave.org>
# Date 1381176085 25200
#      Mon Oct 07 13:01:25 2013 -0700
# Node ID c3aadd228c3713dfddbadebf98eb9d149c2a6034
# Parent  9ff04de067ce6b3bfbff486d6b15b5eb3f25c09a
Fix surf/mesh handling of NaN values in cdata (transparent) (bug #32275).

* libinterp/corefcn/gl-render.cc(draw_surface): Check lowest indexed vertex for
NaN in "flat" mode.  Check all 4 vertices for NaN in "interp" mode.  When
found, don't bother to draw anything which makes things transparent.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1611,18 +1611,20 @@ opengl_renderer::draw_surface (const sur
         i1 = i;
 
       for (int j = 0; j < zc; j++)
         {
           if (y_mat)
             j1 = j;
 
           clip(i,j) = is_nan_or_inf (x(i1,j), y(i,j1), z(i,j));
+          /*
           if (fc_mode == 1 || fc_mode == 2)
             clip(i,j) |= (xisnan (c(i,j)) || xisinf (c(i,j)));
+            */
         }
     }
 
   if (fa_mode > 0 || ea_mode > 0)
     {
       // FIXME: implement alphadata conversion
       //a = props.get_alpha_data ();
     }
@@ -1671,20 +1673,35 @@ opengl_renderer::draw_surface (const sur
               if (y_mat)
                 {
                   i1 = i-1;
                   i2 = i;
                 }
 
               for (int j = 1; j < zr; j++)
                 {
-                  if (clip(j-1, i-1) || clip (j, i-1)
-                      || clip (j-1, i) || clip (j, i))
+
+                  if (clip(j-1, i-1) || clip(j, i-1)
+                      || clip(j-1, i) || clip(j, i))
                     continue;
 
+                  if (fc_mode == 1)
+                    {
+                      // "flat" only needs color at lower-left vertex
+                      if (! xfinite (c(j-1,i-1)))
+                        continue;
+                    }
+                  else if (fc_mode == 2)
+                    {
+                      // "interp" needs valid color at all 4 vertices
+                      if (! (xfinite (c(j-1, i-1)) && xfinite (c(j, i-1))
+                             && xfinite (c(j-1, i)) && xfinite (c(j, i))))
+                        continue;
+                    }
+
                   if (x_mat)
                     {
                       j1 = j-1;
                       j2 = j;
                     }
 
                   glBegin (GL_QUADS);
 
@@ -1862,16 +1879,29 @@ opengl_renderer::draw_surface (const sur
                       i2 = i;
                     }
 
                   for (int j = 1; j < zr; j++)
                     {
                       if (clip(j-1,i) || clip(j,i))
                         continue;
 
+                      if (ec_mode == 1)
+                        {
+                          // "flat" only needs color at lower-left vertex
+                          if (! xfinite (c(j-1,i)))
+                            continue;
+                        }
+                      else if (ec_mode == 2)
+                        {
+                          // "interp" needs valid color at both vertices
+                          if (! (xfinite (c(j-1, i)) && xfinite (c(j, i))))
+                            continue;
+                        }
+
                       if (x_mat)
                         {
                           j1 = j-1;
                           j2 = j;
                         }
 
                       glBegin (GL_LINES);
 
@@ -1946,16 +1976,29 @@ opengl_renderer::draw_surface (const sur
                       j2 = j;
                     }
 
                   for (int i = 1; i < zc; i++)
                     {
                       if (clip(j,i-1) || clip(j,i))
                         continue;
 
+                      if (ec_mode == 1)
+                        {
+                          // "flat" only needs color at lower-left vertex
+                          if (! xfinite (c(j,i-1)))
+                            continue;
+                        }
+                      else if (ec_mode == 2)
+                        {
+                          // "interp" needs valid color at both vertices
+                          if (! (xfinite (c(j, i-1)) && xfinite (c(j, i))))
+                            continue;
+                        }
+
                       if (y_mat)
                         {
                           i1 = i-1;
                           i2 = i;
                         }
 
                       glBegin (GL_LINES);
 
@@ -2075,22 +2118,27 @@ opengl_renderer::draw_surface (const sur
                 continue;
 
               if (x_mat)
                 j1 = j;
 
               if ((do_edge && mecolor.numel () == 0)
                   || (do_face && mfcolor.numel () == 0))
                 {
+                  if (! xfinite (c(j,i)))
+                    continue;  // Skip NaNs in color data
+
                   for (int k = 0; k < 3; k++)
                     cc(k) = c(j,i,k);
                 }
 
-              Matrix lc = (do_edge ? (mecolor.numel () == 0 ? cc : mecolor) : Matrix ());
-              Matrix fc = (do_face ? (mfcolor.numel () == 0 ? cc : mfcolor) : Matrix ());
+              Matrix lc = (do_edge ? (mecolor.numel () == 0 ? cc : mecolor)
+                                   : Matrix ());
+              Matrix fc = (do_face ? (mfcolor.numel () == 0 ? cc : mfcolor)
+                                   : Matrix ());
 
               draw_marker (x(j1,i), y(j,i1), z(j,i), lc, fc);
             }
         }
 
       end_marker ();
     }
 }
