# HG changeset patch
# User jwe
# Date 948168554 0
#      Tue Jan 18 04:09:14 2000 +0000
# Node ID 858695b3ed6249603bb9e9e842f7788206d2860e
# Parent  0fb75d95b14f2ffe113116263fd7da50cc0849ce
[project @ 2000-01-18 04:08:59 by jwe]

diff --git a/doc/interpreter/grammar.txi b/doc/interpreter/grammar.txi
--- a/doc/interpreter/grammar.txi
+++ b/doc/interpreter/grammar.txi
@@ -1,14 +1,14 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
 @node Grammar, Copying, Emacs, Top
-@chapter Grammar
+@appendix Grammar
 @cindex grammar rules
 @cindex language definition
 
 Someday I hope to expand this to include a semi-formal description of
 Octave's language.
 
 @menu
 * Keywords::                    
diff --git a/doc/interpreter/signal.txi b/doc/interpreter/signal.txi
--- a/doc/interpreter/signal.txi
+++ b/doc/interpreter/signal.txi
@@ -23,8 +23,68 @@ please contact @email{bug-octave@@bevo.c
 
 @DOCSTRING(fftfilt)
 
 @DOCSTRING(filter)
 
 @DOCSTRING(freqz)
 
 @DOCSTRING(sinc)
+
+@c XXX FIXME XXX -- someone needs to organize these...
+
+@DOCSTRING(arch_fit)
+
+@DOCSTRING(arch_rnd)
+
+@DOCSTRING(arch_test)
+
+@DOCSTRING(arma_rnd)
+
+@DOCSTRING(autocor)
+
+@DOCSTRING(autocov)
+
+@DOCSTRING(autoreg_matrix)
+
+@DOCSTRING(bartlett)
+
+@DOCSTRING(blackman)
+
+@DOCSTRING(diffpara)
+
+@DOCSTRING(durbinlevinson)
+
+@DOCSTRING(fftshift)
+
+@DOCSTRING(fractdiff)
+
+@DOCSTRING(hamming)
+
+@DOCSTRING(hanning)
+
+@DOCSTRING(hurst)
+
+@DOCSTRING(periodogram)
+
+@DOCSTRING(rectangle_lw)
+
+@DOCSTRING(rectangle_sw)
+
+@DOCSTRING(sinetone)
+
+@DOCSTRING(sinewave)
+
+@DOCSTRING(spectral_adf)
+
+@DOCSTRING(spectral_xdf)
+
+@DOCSTRING(spencer)
+
+@DOCSTRING(stft)
+
+@DOCSTRING(synthesis)
+
+@DOCSTRING(triangle_lw)
+
+@DOCSTRING(triangle_sw)
+
+@DOCSTRING(yulewalker)
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,11 +1,69 @@
 2000-01-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* strings/bin2dec.m: Texinfoize doc string.
+	* plot/__plr1__.m: Ditto.
+	* plot/__pltopt__.m: Ditto.
+	* plot/__plt__.m: Ditto.
+	* plot/__plt2vv__.m: Ditto.
+	* plot/__plr2__.m: Ditto.
+	* plot/__plr__.m: Ditto.
+	* plot/__plt1__.m: Ditto.
+	* plot/__plt2__.m: Ditto.
+	* plot/__plt2mm__.m: Ditto.
+	* plot/__plt2mv__.m: Ditto.
+	* plot/__plt2ss__.m: Ditto.
+	* miscellaneous/paren.m: Ditto.
+	* miscellaneous/comma.m: Ditto.
+	* miscellaneous/semicolon.m: Ditto.
+	* miscellaneous/path.m: Ditto.
+	* miscellaneous/list_primes.m: Ditto.
+	* miscellaneous/flops.m: Ditto.
+	* miscellaneous/dump_prefs.m: Ditto.
+	* miscellaneous/bug_report.m: Ditto.
+	* linear-algebra/dot.m: Ditto
+	* linear-algebra/dmult.m: Ditto.
+	* general/randperm.m: Ditto.
+	* general/logical.m: Ditto.
+	* general/is_duplicate_entry.m: Ditto.
+	* signal/arch_fit.m: Ditto.
+	* signal/arch_rnd.m: Ditto.
+	* signal/arch_test.m: Ditto.
+	* signal/arma_rnd.m: Ditto.
+	* signal/autocor.m: Ditto.
+	* signal/autocov.m: Ditto.
+	* signal/autoreg_matrix.m: Ditto.
+	* signal/bartlett.m: Ditto.
+	* signal/blackman.m: Ditto.
+	* signal/detrend.m: Ditto.
+	* signal/diffpara.m: Ditto.
+	* signal/durbinlevinson.m: Ditto.
+	* signal/fftconv.m: Ditto.
+	* signal/fftfilt.m: Ditto.
+	* signal/fftshift.m: Ditto.
+	* signal/fractdiff.m: Ditto.
+	* signal/freqz.m: Ditto.
+	* signal/hamming.m: Ditto.
+	* signal/hanning.m: Ditto.
+	* signal/hurst.m: Ditto.
+	* signal/periodogram.m: Ditto.
+	* signal/rectangle_lw.m: Ditto.
+	* signal/rectangle_sw.m: Ditto.
+	* signal/sinc.m: Ditto.
+	* signal/sinetone.m: Ditto.
+	* signal/sinewave.m: Ditto.
+	* signal/spectral_adf.m: Ditto.
+	* signal/spectral_xdf.m: Ditto.
+	* signal/spencer.m: Ditto.
+	* signal/stft.m: Ditto.
+	* signal/synthesis.m: Ditto.
+	* signal/triangle_lw.m: Ditto.
+	* signal/triangle_sw.m: Ditto.
+	* signal/yulewalker.m: Ditto.
 
 2000-01-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* control/system/__abcddims__.m: Rename from
 	control/system/abcddims.m, change all callers.
 	* control/base/__bodquist__.m: Likewise.
 	* control/base/__freqresp__.m: Likewise.
 	* control/util/__outlist__.m: Likewise.
diff --git a/scripts/general/is_duplicate_entry.m b/scripts/general/is_duplicate_entry.m
--- a/scripts/general/is_duplicate_entry.m
+++ b/scripts/general/is_duplicate_entry.m
@@ -12,19 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## Usage: is_duplicate_entry (x)
-##
-## Return non-zero if any entries in x are duplicates of one another.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} is_duplicate_entry (@var{x})
+## Return non-zero if any entries in @var{x} are duplicates of one
+## another.
+## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 
 function retval = is_duplicate_entry (x)
 
   if (nargin == 1)
     if (is_matrix (x))
       [m, n] = size (x);
diff --git a/scripts/general/logical.m b/scripts/general/logical.m
--- a/scripts/general/logical.m
+++ b/scripts/general/logical.m
@@ -12,25 +12,31 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: logical (arg)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} logical (@var{arg})
+## Convert @var{arg} to a logical value.  For example,
 ##
-## Convert ARG to a logical value.  For example,
+## @example
+## logical ([-1, 0, 1])
+## @end example
 ##
-##   logical ([-1, 0, 1])
-##
+## @noindent
 ## is equivalent to
 ##
-##   [-1, 0, 1] != 0
+## @example
+## [-1, 0, 1] != 0
+## @end example
+## @end deftypefn
 
 ## Author: jwe
 
 function y = logical (x)
 
   if (nargin == 1)
     if (! islogical (x))
       y = x != 0;
diff --git a/scripts/general/randperm.m b/scripts/general/randperm.m
--- a/scripts/general/randperm.m
+++ b/scripts/general/randperm.m
@@ -12,20 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: randperm (N)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} randperm (@var{n})
 ## Return a row vector containing a random permutation of the
-## integers from 1 to N.
+## integers from 1 to @var{n}.
+## @end deftypefn
 
 ## Author: "James R. Van Zandt" <jrv@vanzandt.mv.com>
 ## Adapted-By: jwe
 
 function retval = randperm (n)
 
   if (nargin == 1 && is_scalar (n) && floor (n) == n)
     if (n > 0)
diff --git a/scripts/linear-algebra/dmult.m b/scripts/linear-algebra/dmult.m
--- a/scripts/linear-algebra/dmult.m
+++ b/scripts/linear-algebra/dmult.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  dmult (a, B)
-##
-## If a is a vector of length rows (B), return diag (a) * B (but
-## computed much more efficiently).
+## -*- texinfo -*-
+## @deftypefn {Function File} {} dmult (@var{a}, @var{b})
+## If @var{a} is a vector of length @code{rows (@var{b})}, return
+## @code{diag (@var{a}) * @var{b}} (but computed much more efficiently).
+## @end deftypefn
 
 ## Author:  KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description:  Rescale the rows of a matrix
 
 function M = dmult (a, B)
 
   if (nargin != 2)
     usage ("dmult (a, B)");
diff --git a/scripts/linear-algebra/dot.m b/scripts/linear-algebra/dot.m
--- a/scripts/linear-algebra/dot.m
+++ b/scripts/linear-algebra/dot.m
@@ -9,19 +9,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  dot (x, y)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} dot (@var{x}, @var{y})
 ## Computes the dot product of two vectors.
+## @end deftypefn
 
 ## Author: jwe
 
 function z = dot (x, y)
 
   if (nargin != 2)
     usage ("dot (x, y)");
   endif
diff --git a/scripts/miscellaneous/bug_report.m b/scripts/miscellaneous/bug_report.m
--- a/scripts/miscellaneous/bug_report.m
+++ b/scripts/miscellaneous/bug_report.m
@@ -12,21 +12,22 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: bug_report
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} bug_report ()
 ## Have Octave create a bug report template file, invoke your favorite
 ## editor, and submit the report to the bug-octave mailing list when
 ## you are finished editing.
+## @end deftypefn
 
 ## Author: jwe
 
 function bug_report ()
 
   if (nargin != 0)
     warning ("bug_report: ignoring extra arguments");
   endif
diff --git a/scripts/miscellaneous/comma.m b/scripts/miscellaneous/comma.m
--- a/scripts/miscellaneous/comma.m
+++ b/scripts/miscellaneous/comma.m
@@ -12,12 +12,13 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## @deftypefn {Operator} {} ,
+## -*- texinfo -*-
+## @deffn {Operator} ,
 ## Array index, function argument, or command separator.
-## @end deftypefn
+## @end deffn
 ## @seealso{semicolon}
diff --git a/scripts/miscellaneous/dump_prefs.m b/scripts/miscellaneous/dump_prefs.m
--- a/scripts/miscellaneous/dump_prefs.m
+++ b/scripts/miscellaneous/dump_prefs.m
@@ -12,21 +12,22 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: dump_prefs (file)
-##
-## Have Octave dump all the current user preference variables to FILE
-## in a format that can be parsed by Octave later.  If FILE is omitted,
-## the listing is printed to stdout.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} dump_prefs (@var{file})
+## Have Octave dump all the current user preference variables to
+## @var{file} in a format that can be parsed by Octave later.  If
+## @var{file} is omitted, the listing is printed to stdout.
+## @end deftypefn
 
 ## Author: jwe
 
 function dump_prefs (file)
 
   if (nargin == 0)
     file = stdout;
   endif
diff --git a/scripts/miscellaneous/flops.m b/scripts/miscellaneous/flops.m
--- a/scripts/miscellaneous/flops.m
+++ b/scripts/miscellaneous/flops.m
@@ -12,19 +12,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: flops
-##
-## Count floating point operations.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} flops ()
+## This function is provided for Matlab compatibility, but it doesn't
+## actually do anything.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = flops ()
 
   if (nargin > 1)
     usage ("flops () or flops (n)");
   endif
diff --git a/scripts/miscellaneous/list_primes.m b/scripts/miscellaneous/list_primes.m
--- a/scripts/miscellaneous/list_primes.m
+++ b/scripts/miscellaneous/list_primes.m
@@ -12,22 +12,31 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: list_primes (n)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} list_primes (@var{n})
+## List the first @var{n} primes.  If @var{n} is unspecified, the first
+## 30 primes are listed.
 ##
-## List the first n primes.  If n is unspecified, the first 30 primes
-## are listed.
-##
-## The algorithm used is from page 218 of the TeXbook.
+## The algorithm used is from page 218 of the
+## @iftex
+## @tex
+##  \TeXbook.
+## @end tex
+## @end iftex
+## @ifinfo
+##  TeXbook.
+## @end ifinfo
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = list_primes (n)
 
   if (nargin > 0)
     if (! is_scalar (n))
       error ("list_primes: argument must be a scalar");
diff --git a/scripts/miscellaneous/pack.m b/scripts/miscellaneous/pack.m
--- a/scripts/miscellaneous/pack.m
+++ b/scripts/miscellaneous/pack.m
@@ -12,18 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: pack
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} pack ()
 ## This function is provided for compatibility with Matlab, but it
 ## doesn't actually do anything.
+## @end deftypefn
 
 ## Author: jwe
 
 function pack ()
 
 endfunction
diff --git a/scripts/miscellaneous/paren.m b/scripts/miscellaneous/paren.m
--- a/scripts/miscellaneous/paren.m
+++ b/scripts/miscellaneous/paren.m
@@ -12,9 +12,13 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
+## -*- texinfo -*-
+## @deffn {Operator} (
+## @deffnx {Operator} )
 ## Array index or function argument delimeter.
+## @end deffn
diff --git a/scripts/miscellaneous/path.m b/scripts/miscellaneous/path.m
--- a/scripts/miscellaneous/path.m
+++ b/scripts/miscellaneous/path.m
@@ -12,30 +12,32 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: p = path (...)
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{p} =} path (@dots{})
+## Modify or display Octave's @code{LOADPATH}.
 ##
-## Modify or display Octave's LOADPATH.
+## If @var{nargin} and @var{nargout} are zero, display the elements of
+## Octave's @code{LOADPATH} in an easy to read format.
 ##
-## If nargin and nargout are 0, display the elements of Octave's
-## LOADPATH in an easy to read format.
+## If @var{nargin} is zero and nargout is greater than zero, return the
+## current value of @code{LOADPATH}.
 ##
-## If nargin is zero and nargout is greater than zero, return the
-## current value of LOADPATH.
-##
-## If nargin is greater than zero, concatenate the arguments, separating
-## them with ":".  Set LOADPATH to the result and also return it.
+## If @var{nargin} is greater than zero, concatenate the arguments,
+## separating them with @code{":"}.  Set @code{LOADPATH} to the result
+## and also return it.
 ##
 ## No checks are made for duplicate elements.
+## @end deftypefn
 
 ## Author: jwe
 
 function p = path (...)
 
   if (nargin == 0)
     if (nargout == 0)
       stdout << "\nLOADPATH contains the following directories:\n\n  ";
diff --git a/scripts/miscellaneous/semicolon.m b/scripts/miscellaneous/semicolon.m
--- a/scripts/miscellaneous/semicolon.m
+++ b/scripts/miscellaneous/semicolon.m
@@ -12,12 +12,13 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## @deftypefn {Operator} {} : ()
+## -*- texinfo -*-
+## @deffn {Operator} ;
 ## Array row or command separator.
-## @end deftypefn
+## @end deffn
 ## @seealso{comma}
diff --git a/scripts/miscellaneous/texas_lotto.m b/scripts/miscellaneous/texas_lotto.m
--- a/scripts/miscellaneous/texas_lotto.m
+++ b/scripts/miscellaneous/texas_lotto.m
@@ -12,18 +12,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
+## -*- texinfo -*-
 ## @deftypefn {Function File } {@var{winning_numbers} =} texas_lotto ()
-##
 ## Pick 6 unique numbers between 1 and 50 that are guaranteed to win
 ## the Texas Lotto.
 ## @end deftypefn
 ## @seealso{rand}
 
 ## Author: jwe
 
 function picks = texas_lotto ()
diff --git a/scripts/plot/__plr1__.m b/scripts/plot/__plr1__.m
--- a/scripts/plot/__plr1__.m
+++ b/scripts/plot/__plr1__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plr1__ (theta, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plr1__ (@var{theta}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plr1__ (theta, fmt)
 
   if (nargin != 2)
     usage ("__plr1__ (theta, fmt)");
   endif
diff --git a/scripts/plot/__plr2__.m b/scripts/plot/__plr2__.m
--- a/scripts/plot/__plr2__.m
+++ b/scripts/plot/__plr2__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plr2__ (theta, rho, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plr2__ (@var{theta}, @var{rho}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plr2__ (theta, rho, fmt)
 
   if (nargin != 3)
     usage ("__plr2__ (theta, rho, fmt)");
   endif
diff --git a/scripts/plot/__plr__.m b/scripts/plot/__plr__.m
--- a/scripts/plot/__plr__.m
+++ b/scripts/plot/__plr__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plr__ (theta, rho, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plr__ (@var{theta}, @var{rho}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plr__ (theta, rho, fmt)
 
   if (nargin == 1)
     [nr, nc] = size (theta);
     if (nr == 1)
diff --git a/scripts/plot/__plt1__.m b/scripts/plot/__plt1__.m
--- a/scripts/plot/__plt1__.m
+++ b/scripts/plot/__plt1__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt1__ (x1, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt1__ (@var{x1}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt1__ (x1, fmt)
 
   if (nargin < 1 || nargin > 2)
     usage ("__plt1__ (x1, fmt)");
   endif
diff --git a/scripts/plot/__plt2__.m b/scripts/plot/__plt2__.m
--- a/scripts/plot/__plt2__.m
+++ b/scripts/plot/__plt2__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2__ (x1, x2, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2__ (@var{x1}, @var{x2}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2__ (x1, x2, fmt)
 
   if (nargin < 2 || nargin > 3)
     usage ("__plt2__ (x1, x2, fmt)");
   endif
diff --git a/scripts/plot/__plt2mm__.m b/scripts/plot/__plt2mm__.m
--- a/scripts/plot/__plt2mm__.m
+++ b/scripts/plot/__plt2mm__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2mm__ (x, y, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2mm__ (@var{x}, @var{y}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2mm__ (x, y, fmt)
 
   if (nargin < 2 || nargin > 3)
     msg = sprintf ("__plt2mm__ (x, y)\n");
     msg = sprintf ("%s              __plt2mm__ (x, y, fmt)", msg);
diff --git a/scripts/plot/__plt2mv__.m b/scripts/plot/__plt2mv__.m
--- a/scripts/plot/__plt2mv__.m
+++ b/scripts/plot/__plt2mv__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2mv__ (x, y, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2mv__ (@var{x}, @var{y}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2mv__ (x, y, fmt)
 
   if (nargin < 2 || nargin > 3)
     msg = sprintf ("__plt2mv__ (x, y)\n");
     msg = sprintf ("%s              __plt2mv__ (x, y, fmt)", msg);
diff --git a/scripts/plot/__plt2ss__.m b/scripts/plot/__plt2ss__.m
--- a/scripts/plot/__plt2ss__.m
+++ b/scripts/plot/__plt2ss__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2ss__ (x, y, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2ss__ (@var{x}, @var{y}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2ss__ (x, y, fmt)
 
   if (nargin < 2 || nargin > 3)
     msg = sprintf ("__plt2ss__ (x, y)");
     msg = sprintf ("%s              __plt2ss__ (x, y, fmt)", msg);
diff --git a/scripts/plot/__plt2vm__.m b/scripts/plot/__plt2vm__.m
--- a/scripts/plot/__plt2vm__.m
+++ b/scripts/plot/__plt2vm__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2vm__ (x, y, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2vm__ (@var{x}, @var{y}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2vm__ (x, y, fmt)
 
   if (nargin < 2 || nargin > 3)
     msg = sprintf ("__plt2vm__ (x, y)\n");
     msg = sprintf ("%s              __plt2vm__ (x, y, fmt)", msg);
diff --git a/scripts/plot/__plt2vv__.m b/scripts/plot/__plt2vv__.m
--- a/scripts/plot/__plt2vv__.m
+++ b/scripts/plot/__plt2vv__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt2vv__ (x, y, fmt)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2vv__ (@var{x}, @var{y}, @var{fmt})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt2vv__ (x, y, fmt)
 
   if (nargin < 2 || nargin > 3)
     msg = sprintf ("__plt2vv__ (x, y)\n");
     msg = sprintf ("%s              __plt2vv__ (x, y, fmt)", msg);
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -12,17 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: function __plt__ (caller, ...)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt__ (@code{caller}, @dots{})
+## @end deftypefn
 
 ## Author: jwe
 
 function __plt__ (caller, ...)
 
   if (nargin == 2)
 
     __plt1__ (va_arg (), "");
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -14,17 +14,16 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{fmt} =} __pltopt1__ (@var{caller}, @var{opt})
-##
 ## Really decode plot option strings.
 ## @end deftypefn
 ## @seealso{__pltopt__}
 
 ## Author: Rick Niles <niles@axp745.gsfc.nasa.gov>
 ## Adapted-By: jwe
 ## Maintainer: jwe
 
diff --git a/scripts/plot/__pltopt__.m b/scripts/plot/__pltopt__.m
--- a/scripts/plot/__pltopt__.m
+++ b/scripts/plot/__pltopt__.m
@@ -12,65 +12,81 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: fmt = __pltopt__ (caller, opt)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{fmt} =} __pltopt__ (@var{caller}, @var{opt})
 ## Decode plot option strings.
 ##
-## If OPT is a valid option string, return a string of the form "w l 2"
-## ("with lines 2").  Uses abbreviations for the options to avoid
-## overrunning gnuplot's command line buffer unnecessarily.
-##
-## OPT can currently be some combination of the following:
+## If @var{opt} is a valid option string, return a string of the form
+## @code{"w l 2"} ("with lines 2").  Uses abbreviations for the options
+## to avoid overrunning gnuplot's command line buffer unnecessarily.
 ##
-##   "-"   for lines plot style (default).
-##   "."   for dots plot style.
-##   "@"   for points plot style.
-##   "-@"  for linespoints plot style.
-##   "^"   for impulses plot style.
-##   "L"   for steps plot style.
-##   "#"   for boxes plot style.
-##   "~"   for errorbars plot style.
-##   "#~"  for boxerrorbars plot style.
-##   "n"   with n in 1-6 (wraps at 8), plot color
-##   "nm"  with m in 1-6 (wraps at 6), point style (only valid for "@" or "-@")
-##   "c"   where c is one of ["r", "g", "b", "m", "c", "w"] colors.
-##   ";title;" where "title" is the label for the key.
+## @var{opt} can currently be some combination of the following:
 ##
-##   Special points formats:
-##
-##      "+", "*", "o", "x" will display points in that style for term x11.
-##
-##   The legend may be fixed to include the name of the variable
-##   plotted in some future version of Octave.
-##
-##   The colors, line styles, and point styles have the following
-##   meanings for X11 and Postscript terminals under Gnuplot 3.6.
+## @table @code
+## @item "-"
+## For lines plot style (default).
+## @item "."
+## For dots plot style.
+## @item "@"
+## For points plot style.
+## @item "-@"
+##For linespoints plot style.
+## @item "^"
+## For impulses plot style.
+## @item "L"
+## For steps plot style.
+## @item "#"
+## For boxes plot style.
+## @item "~"
+## For errorbars plot style.
+## @item "#~"
+## For boxerrorbars plot style.
+## @item "n"
+## With @code{n} in 1-6 (wraps at 8), plot color
+## @item "nm"
+## With @code{m} in 1-6 (wraps at 6), point style (only valid for @code{"@"} or
+## @code{"-@"})
+## @item @var{c}
+## Where @var{c} is one of @code{"r"}, @code{"g"}, @code{"b"}, @code{"m"},
+## @code{"c"}, or @code{"w"} colors.
+## @item ";title;"
+## Here @code{"title"} is the label for the key.
+## @end table
 ##
-##   Number ------ Color -------  Line Style      ---- Points Style ----
-##          x11       postscript  postscript      x11         postscript
-##   =====================================================================
-##     1    red       green       solid           "o"         "+"
-##     2    green     blue        long dash       "+"         "x"
-##     3    blue      red         short dash     square       "*"
-##     4    magenta   magenta     dotted          "x"        open square
-##     5    cyan      cyan        dot long dash  triangle    filled square
-##     6    brown     yellow      dot short dash  "*"         "o"
+## Special points formats:  @code{"+"}, @code{"*"}, @code{"o"}, or
+## @code{"x"} will display points in that style for term x11.
+##
+## The legend may be fixed to include the name of the variable
+## plotted in some future version of Octave.
+##
+## The colors, line styles, and point styles have the following
+## meanings for X11 and Postscript terminals under Gnuplot 3.6.
 ##
+## @example
+## Number ------ Color -------  Line Style      ---- Points Style ----
+##        x11       postscript  postscript      x11         postscript
+## =====================================================================
+##   1    red       green       solid           "o"         "+"
+##   2    green     blue        long dash       "+"         "x"
+##   3    blue      red         short dash     square       "*"
+##   4    magenta   magenta     dotted          "x"        open square
+##   5    cyan      cyan        dot long dash  triangle    filled square
+##   6    brown     yellow      dot short dash  "*"         "o"
+## @end example
+## @end deftypefn
 ## @seealso{__pltopt1__}
 
 ## Author: jwe
-## Adapted-By: jwe
-## Maintainer: jwe
 
 function fmt = __pltopt__ (caller, opt)
 
   if (! isstr (opt))
     usage ("__pltopt__ (caller, opt)");
   endif
 
   nr = rows (opt);
diff --git a/scripts/plot/bottom_title.m b/scripts/plot/bottom_title.m
--- a/scripts/plot/bottom_title.m
+++ b/scripts/plot/bottom_title.m
@@ -12,23 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: bottom_title (text)
-##
-## NOTE: this will work only with gnuplot installed with
-##       multiplot patch
-##
-## makes a title with the given text at the bottom of the plot
-## rather than the top.
+## See top_title.
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function bottom_title (text)
 
   if (! gnuplot_has_multiplot)
     error ("bottom_title: gnuplot does not appear to support this feature");
diff --git a/scripts/signal/arch_fit.m b/scripts/signal/arch_fit.m
--- a/scripts/signal/arch_fit.m
+++ b/scripts/signal/arch_fit.m
@@ -9,45 +9,52 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  [a, b] = arch_fit (y, X, p [, ITER [, gamma [, a0, b0]]])
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{a}, @var{b}] =} arch_fit (@var{y}, @var{x}, @var{p}, @var{iter}, @var{gamma}, @var{a0}, @var{b0})
+## Fit an ARCH regression model to the time series @var{y} using the
+## scoring algorithm in Engle's original ARCH paper.  The model is
 ##
-## Fits an ARCH regression model to the time series y using the scoring
-## algorithm in Engle's original ARCH paper.  The model is
-##    y(t) = b(1) * x(t,1) + ... + b(k) * x(t,k) + e(t),
-##    h(t) = a(1) + a(2) * e(t-1)^2 + ... + a(p+1) * e(t-p)^2,
-## where e(t) is N(0, h(t)), given y up to time t-1 and X up to t.
+## @example
+## y(t) = b(1) * x(t,1) + ... + b(k) * x(t,k) + e(t),
+## h(t) = a(1) + a(2) * e(t-1)^2 + ... + a(p+1) * e(t-p)^2
+## @end example
 ##
-## If invoked as arch_fit (y, k, p) with a positive integer k, fit an
-## ARCH(k,p) process, i.e., do the above with the t-th row of X given by
-## [1, y(t-1), ..., y(t-k)].
+## @noindent
+## in which @var{e}(@var{t}) is @var{N}(0, @var{h}(@var{t})), given a
+## time-series vector @var{y} up to time @var{t}-1 and a matrix of
+## (ordinary) regressors @var{x} up to @var{t}.  The order of the
+## regression of the residual variance is specified by @var{p}.
 ##
-## Optionally, one can specify the number of iterations ITER, the
-## updating factor gamma, and initial values a0 and b0 for the scoring
-## algorithm.
+## If invoked as @code{arch_fit (@var{y}, @var{k}, @var{p})} with a
+## positive integer @var{k}, fit an ARCH(@var{k}, @var{p}) process,
+## i.e., do the above with the @var{t}-th row of @var{x} given by
 ##
-## The input parameters are:
-##    y     ... time series (vector)
-##    X     ... matrix of (ordinary) regressors or order of
-##              autoregression
-##    p     ... order of the regression of the residual variance
+## @example
+## [1, y(t-1), ..., y(t-k)]
+## @end example
+##
+## Optionally, one can specify the number of iterations @var{iter}, the
+## updating factor @var{gamma}, and initial values @var{a0} and @var{b0}
+## for the scoring algorithm.
+## @end deftypefn
 
 ## Author:  KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description:  Fit an ARCH regression model
 
 function [a, b] = arch_fit (y, X, p, ITER, gamma, a0, b0)
 
   if ((nargin < 3) || (nargin == 6) || (nargin > 7))
-    usage ("arch_fit (y, X, p [, ITER [, gamma [, a0, b0]]])");
+    usage ("arch_fit (y, X, p, ITER, gamma, a0, b0)");
   endif
 
   if !(is_vector (y))
     error ("arch_test:  y must be a vector");
   endif
 
   T   = length (y);
   y   = reshape (y, T, 1);
diff --git a/scripts/signal/arch_rnd.m b/scripts/signal/arch_rnd.m
--- a/scripts/signal/arch_rnd.m
+++ b/scripts/signal/arch_rnd.m
@@ -9,24 +9,34 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  y = arch_rnd (a, b, T)
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{y} =} arch_rnd (@var{a}, @var{b}, @var{t})
+## Simulate an ARCH sequence, @var{y}, of length @var{t} with AR
+## coefficients @var{b} and CH coefficients @var{a}.  I.e., the result
+## follows the model
 ##
-## Simulates an ARCH sequence y of length T with AR coefficients b and
-## CH coefficients a.
-## I.e., y follows the model
-##     y(t) = b(1) + b(2) * y(t-1) + ... + b(lb) * y(t-lb+1) + e(t),
-## where e(t), given y up to time t-1, is N(0, h(t)), with
-##     h(t) = a(1) + a(2) * e(t-1)^2 + ... + a(la) * e(t-la+1)^2.
+## @example
+## y(t) = b(1) + b(2) * y(t-1) + ... + b(lb) * y(t-lb+1) + e(t),
+## @end example
+##
+## @noindent
+## where e(t), given @var{y} up to time @var{t}-1, is @var{N}(0,
+## @var{h}(@var{t})), with
+##
+## @example
+## h(t) = a(1) + a(2) * e(t-1)^2 + ... + a(la) * e(t-la+1)^2
+## @end example
+## @end deftypefn
 
 ## Author:  KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description:  Simulate an ARCH process
 
 function y = arch_rnd (a, b, T)
 
   if (nargin != 3)
     usage ("arch_rnd (a, b, T)");
diff --git a/scripts/signal/arch_test.m b/scripts/signal/arch_test.m
--- a/scripts/signal/arch_test.m
+++ b/scripts/signal/arch_test.m
@@ -9,36 +9,61 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  [pval, lm] = arch_test (y, X, p)
-##         [pval, lm] = arch_test (y, k, p)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} {[@var{pval}, @var{lm}] =} arch_test (@var{y}, @var{x}, @var{p})
+## For a linear regression model
 ##
-## arch_test (y, X, p) performs a Lagrange Multiplier (LM) test of the
-## null hypothesis of no conditional heteroscedascity in the linear
-## regression model y = X * b + e against the alternative of CH(p).
+## @example
+## y = x * b + e
+## @end example
+##
+## @noindent
+## perform a Lagrange Multiplier (LM) test of the null hypothesis of no
+## conditional heteroscedascity against the alternative of CH(@var{p}).
+##
 ## I.e., the model is
-##     y(t) = b(1) * x(t,1) + ... + b(k) * x(t,k) + e(t),
-## where given y up to t-1 and x up to t, e(t) is N(0, h(t)) with
-##     h(t) = v + a(1) * e(t-1)^2 + ... + a(p) * e(t-p)^2,
-## and the null is a(1) == ... == a(p) == 0.
+##
+## @example
+## y(t) = b(1) * x(t,1) + ... + b(k) * x(t,k) + e(t),
+## @end example
+##
+## @noindent
+## given @var{y} up to @var{t}-1 and @var{x} up to @var{t},
+## @var{e}(@var{t}) is @var{N}(0, @var{h}(@var{t})) with
+##
+## @example
+## h(t) = v + a(1) * e(t-1)^2 + ... + a(p) * e(t-p)^2,
+## @end example
+##
+## @noindent
+## and the null is @var{a}(1) == ... == @var{a}(@var{p}) == 0.
 ##
-## arch_test (y, k, p) does the same in a linear autoregression model of
-## order k, i.e., with [1, y(t-1), ..., y(t-k)] as the t-th row of X.
+## If the second argument is a scalar integer, @var{k}, perform the same
+## test in a linear autoregression model of order @var{k}, i.e., with
+##
+## @example
+## [1, y(t-1), ..., y(t-@var{k})]
+## @end example
 ##
-## Under the null, lm approximately has a chisquare distribution with p
-## degrees of freedom.  pval is the p-value (1 minus the CDF of this
-## distribution at lm) of the test.
+## @noindent
+## as the @var{t}-th row of @var{x}.
 ##
-## If no output argument is given, the p-value is displayed.
+## Under the null, LM approximately has a chisquare distribution with
+## @var{p} degrees of freedom and @var{pval} is the @var{p}-value (1
+## minus the CDF of this distribution at LM) of the test.
+##
+## If no output argument is given, the @var{p}-value is displayed.
+## @end deftypefn
 
 ## Author:  KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description:  Test for conditional heteroscedascity
 
 function [pval, lm] = arch_test (y, X, p)
 
   if (nargin != 3)
     error ("arch_test needs 3 input arguments");
diff --git a/scripts/signal/arma_rnd.m b/scripts/signal/arma_rnd.m
--- a/scripts/signal/arma_rnd.m
+++ b/scripts/signal/arma_rnd.m
@@ -9,28 +9,35 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  arma_rnd (a, b, v, t [, n])
+## -*- texinfo -*-
+## @deftypefn {Function File} {} arma_rnd (@var{a}, @var{b}, @var{v}, @var{t}, @var{n})
+## Return a simulation of the ARMA model
+##
+## @example
+## x(n) = a(1) * x(n-1) + ... + a(k) * x(n-k)
+##      + e(n) + b(1) * e(n-1) + ... + b(l) * e(n-l)
+## @end example
 ##
-## Returns a simulation of the ARMA model
-##   x(n) = a(1) * x(n-1) + ... + a(k) * x(n-k) +
-##              + e(n) + b(1) * e(n-1) + ... + b(l) * e(n-l),
-## where k is the length of vector a, l is the length of vector b and e
-## is gaussian white noise with variance v.  The function returns a
-## vector of length t.
+## @noindent
+## in which @var{k} is the length of vector @var{a}, @var{l} is the
+## length of vector @var{b} and @var{e} is gaussian white noise with
+## variance @var{v}.  The function returns a vector of length @var{t}.
 ##
-## The optional parameter n gives the number of dummy x(i) used for
-## initialization, i.e., a sequence of length t+n is generated and
-## x(n+1:t+n) is returned.  If n is omitted, n=100 is used.
+## The optional parameter @var{n} gives the number of dummy
+## @var{x}(@var{i}) used for initialization, i.e., a sequence of length
+## @var{t}+@var{n} is generated and @var{x}(@var{n}+1:@var{t}+@var{n})
+## is returned.  If @var{n} is omitted, @var{n} = 100 is used. 
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Simulate an ARMA process
 
 function x = arma_rnd (a, b, v, t, n)
 
   unwind_protect
     orig_listelemok = empty_list_elements_ok;
@@ -38,17 +45,17 @@ function x = arma_rnd (a, b, v, t, n)
 
     if (nargin == 4)
       n = 100;
     elseif (nargin == 5)
       if (!is_scalar (t))
         error ("arma_rnd: n must be a scalar");
       endif
     else
-      usage ("arma_rnd (a, b, v, t [, n])");
+      usage ("arma_rnd (a, b, v, t, n)");
     endif
 
     if ( (min (size (a)) > 1) || (min (size (b)) > 1) )
       error ("arma_rnd:  a and b must not be matrices");
     endif
 
     if (!is_scalar (t))
       error ("arma_rnd:  t must be a scalar");
diff --git a/scripts/signal/autocor.m b/scripts/signal/autocor.m
--- a/scripts/signal/autocor.m
+++ b/scripts/signal/autocor.m
@@ -9,34 +9,35 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  autocor (X [, h])
-##
-## returns the autocorrelations from lag 0 to h of vector X.
-## If h is omitted, all autocorrelations are computed.
-## If X is a matrix, the autocorrelations of every single column are
+## -*- texinfo -*-
+## @deftypefn {Function File} {} autocor (@var{x}, @var{h})
+## Return the autocorrelations from lag 0 to @var{h} of vector @var{x}.
+## If @var{h} is omitted, all autocorrelations are computed.
+## If @var{X} is a matrix, the autocorrelations of each column are
 ## computed.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Compute autocorrelations
 
 function retval = autocor (X, h)
 
   if (nargin == 1)
     retval = autocov (X);
   elseif (nargin == 2)
     retval = autocov (X, h);
   else
-    usage ("autocor (X [, h])");
+    usage ("autocor (X, h)");
   endif
 
   if (min (retval (1,:)) != 0)
     retval = retval ./ ( ones (rows (retval), 1) * retval(1, :) );
   endif
 
 endfunction
 
diff --git a/scripts/signal/autocov.m b/scripts/signal/autocov.m
--- a/scripts/signal/autocov.m
+++ b/scripts/signal/autocov.m
@@ -9,22 +9,23 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  autocov (X [, h])
-##
-## returns the autocovariances from lag 0 to h of vector X.
-## If h is omitted, all autocovariances are computed.
-## If X is a matrix, the autocovariances of every single column are
+## -*- texinfo -*-
+## @deftypefn {Function File} {} autocov (@var{x}, @var{h})
+## Return the autocovariances from lag 0 to @var{h} of vector @var{x}.
+## If @var{h} is omitted, all autocovariances are computed.
+## If @var{x} is a matrix, the autocovariances of each column are
 ## computed.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Compute autocovariances
 
 function retval = autocov (X, h)
 
   [n, c] = size (X);
 
diff --git a/scripts/signal/autoreg_matrix.m b/scripts/signal/autoreg_matrix.m
--- a/scripts/signal/autoreg_matrix.m
+++ b/scripts/signal/autoreg_matrix.m
@@ -9,22 +9,25 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  X = autoreg_matrix (y, k)
-##
-## Given a time series (vector) y, returns a matrix X with ones in the
-## first column and the first k lagged values of y in the other columns.
-## I.e., for t > k, [1, y(t-1), ..., y(t-k)] is the t-th row of X. X can
-## be used as regressor matrix in autoregressions.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} autoreg_matrix (@var{y}, @var{k})
+## Given a time series (vector) @var{y}, return a matrix with ones in the
+## first column and the first @var{k} lagged values of @var{y} in the
+## other columns.  I.e., for @var{t} > @var{k}, @code{[1,
+## @var{y}(@var{t}-1), ..., @var{y}(@var{t}-@var{k})]} is the t-th row
+## of the result.  The resulting matrix may be used as a regressor matrix
+## in autoregressions.
+## @end deftypefn
 
 ## Author:  KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description:  Design matrix for autoregressions
 
 function X = autoreg_matrix (y, k)
 
   if (nargin != 2)
     usage ("autoreg_matrix (y, k)");
diff --git a/scripts/signal/bartlett.m b/scripts/signal/bartlett.m
--- a/scripts/signal/bartlett.m
+++ b/scripts/signal/bartlett.m
@@ -9,23 +9,24 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  bartlett (m)
-##
-## Returns the filter coefficients of a Bartlett (triangular) window of
-## length m.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} bartlett (@var{m})
+## Return the filter coefficients of a Bartlett (triangular) window of
+## length @var{m}.
 ##
 ## For a definition of the Bartlett window, see e.g. A. V. Oppenheim &
 ## R. W. Schafer, "Discrete-Time Signal Processing".
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Coefficients of the Bartlett (triangular) window
 
 function c = bartlett (m)
 
   if (nargin != 1)
     usage ("bartlett (m)");
diff --git a/scripts/signal/blackman.m b/scripts/signal/blackman.m
--- a/scripts/signal/blackman.m
+++ b/scripts/signal/blackman.m
@@ -9,22 +9,23 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  blackman (m)
-##
-## Returns the filter coefficients of a Blackman window of length m.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} blackman (@var{m})
+## Return the filter coefficients of a Blackman window of length @var{m}.
 ##
 ## For a definition of the  Blackman window, see e.g. A. V. Oppenheim &
 ## R. W. Schafer, "Discrete-Time Signal Processing".
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Coefficients of the Blackman window
 
 function c = blackman (m)
 
   if (nargin != 1)
     usage ("blackman (m)");
diff --git a/scripts/signal/detrend.m b/scripts/signal/detrend.m
--- a/scripts/signal/detrend.m
+++ b/scripts/signal/detrend.m
@@ -34,17 +34,17 @@ function y = detrend (x, p)
 
   if (nargin == 1)
     p = 1;
   elseif (nargin == 2)
     if (! (is_scalar (p) && p == round (p) && p >= 0))
       error ("detrend:  p must be a nonnegative integer");
     endif
   else
-    usage ("detrend (x [, p])");
+    usage ("detrend (x, p)");
   endif
 
   [m, n] = size (x);
   if (m == 1)
     x = x';
   endif
 
   r = rows (x);
diff --git a/scripts/signal/diffpara.m b/scripts/signal/diffpara.m
--- a/scripts/signal/diffpara.m
+++ b/scripts/signal/diffpara.m
@@ -9,40 +9,44 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  [d, D] = diffpara (X [, a [, b]])
-##
-## Returns the estimator d for the differencing parameter of an
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{d}, @var{D}]} = diffpara (@var{x}, @var{a}, @var{b})
+## Return the estimator @var{d} for the differencing parameter of an
 ## integrated time series.
 ##
-## The frequencies from [2*pi*a/T, 2*pi*b/T] are used for the
-## estimation. If b is omitted, the interval [2*pi/T, 2*pi*a/T] is used,
-## if both b and a are omitted then a = 0.5 * sqrt(T) and b = 1.5 *
-## sqrt(T) is used, where T is the sample size. If X is a matrix, the
-## differencing parameter of every single column is estimated.
+## The frequencies from @code{[2*pi*@var{a}/@var{T},
+## 2*pi*@var{b}/@var{T}]} are used for the estimation.  If @var{b} is
+## omitted, the interval @code{[2*pi/@var{T}, 2*pi*@var{a}/@var{T}]} is
+## used.  If both @var{b} and @var{a} are omitted then @code{@var{a} =
+## 0.5 * sqrt(@var{T})} and @code{@var{b} = 1.5 * sqrt(@var{T})} is
+## used, where @var{T} is the sample size.  If @var{x} is a matrix, the
+## differencing parameter of each column is estimated.
 ##
-## D contains the estimators for all frequencies in the intervals
-## described above, d is simply mean(D).
+## The estimators for all frequencies in the intervals
+## described above is returned in @var{D}.  The value of @var{d} is
+## simply the mean of @var{D}.
 ##
 ## Reference: Brockwell, Peter J. & Davis, Richard A. Time Series:
-## Theory and Methods Springer 1987
+## Theory and Methods Springer 1987.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Estimate the fractional differencing parameter
 
 function [d, D] = diffpara (X, a, b)
 
   if ((nargin < 1) || (nargin > 3))
-    usage ("[d [, D]] = diffpara (X [, a [, b]])");
+    usage ("[d, D] = diffpara (X, a, b)");
   else
     if is_vector (X)
       n = length (X);
       k = 1;
       X = reshape (X, n, 1);
     else
       [n, k] = size(X);
     endif
diff --git a/scripts/signal/durbinlevinson.m b/scripts/signal/durbinlevinson.m
--- a/scripts/signal/durbinlevinson.m
+++ b/scripts/signal/durbinlevinson.m
@@ -9,34 +9,36 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  durbinlevinson (c, [oldphi, oldv])
-##
-## Performs one step of the Durbin-Levinson algorithm.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} durbinlevinson (@var{c}, @var{oldphi}, @var{oldv})
+## Perform one step of the Durbin-Levinson algorithm.
 ##
-## The vector c_t = [gamma_0, ..., gamma_t] contains the autocovariances
-## from lag 0 to t, oldphi the coefficients based on c_(t-1) and oldv
-## the corresponding error.
+## The vector @var{c} specifies the autocovariances @code{[gamma_0, ...,
+## gamma_t]} from lag 0 to @var{t}, @var{oldphi} specifies the
+## coefficients based on @var{c}(@var{t}-1) and @var{oldv} specifies the
+## corresponding error.
 ##
-## If oldphi is omitted, all steps from 1 to t of the algorithm are
-## performed.
+## If @var{oldphi} and @var{oldv} are omitted, all steps from 1 to
+## @var{t} of the algorithm are performed.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Perform one step of the Durbin-Levinson algorithm
 
 function [newphi, newv] = durbinlevinson (c, oldphi, oldv)
 
   if( !((nargin == 1) || (nargin == 3)) )
-    usage ("durbinlevinson (c, [oldphi, oldv])");
+    usage ("durbinlevinson (c, oldphi, oldv)");
   endif
 
   if( columns (c) > 1 )
     c=c';
   endif
 
   newphi = 0;
   newv = 0;
diff --git a/scripts/signal/fftconv.m b/scripts/signal/fftconv.m
--- a/scripts/signal/fftconv.m
+++ b/scripts/signal/fftconv.m
@@ -30,17 +30,17 @@
 
 ## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Created: 3 September 1994
 ## Adapted-By: jwe
 
 function c = fftconv (a, b, N)
 
   if (nargin < 2 || nargin > 3)
-    usage ("fftconv (b, x [, N])");
+    usage ("fftconv (b, x, N)");
   endif
 
   if (! (is_vector (a) && is_vector (b)))
     error ("fftconv:  both a and b should be vectors");
   endif
   la = length (a);
   lb = length (b);
   if ((la == 1) || (lb == 1))
diff --git a/scripts/signal/fftfilt.m b/scripts/signal/fftfilt.m
--- a/scripts/signal/fftfilt.m
+++ b/scripts/signal/fftfilt.m
@@ -35,17 +35,17 @@ function y = fftfilt (b, x, N)
 
   ## If N is not specified explicitly, we do not use the overlap-add
   ## method at all because loops are really slow.  Otherwise, we only
   ## ensure that the number of points in the FFT is the smallest power
   ## of two larger than N and length(b).  This could result in length
   ## one blocks, but if the user knows better ...
 
   if (nargin < 2 || nargin > 3)
-    usage (" fftfilt (b, x [, N])");
+    usage (" fftfilt (b, x, N)");
   endif
 
   [r_x, c_x] = size (x);
   [r_b, c_b] = size (b);
   if (! (min ([r_x, c_x]) == 1 || min ([r_b, c_b]) == 1))
     error ("fftfilt: both x and b should be vectors");
   endif
   l_x  = r_x * c_x;
diff --git a/scripts/signal/fftshift.m b/scripts/signal/fftshift.m
--- a/scripts/signal/fftshift.m
+++ b/scripts/signal/fftshift.m
@@ -9,28 +9,32 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage: y = fftshift(W)
-##
-## Performs a shift of the vector V, for use with the "fft" and "ifft"
-## functions, in order the move the frequency 0 to the centre of
-## the vector or matrix.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} fftshift (@var{v})
+## Perform a shift of the vector @var{v}, for use with the @code{fft}
+## and @code{ifft} functions, in order the move the frequency 0 to the
+## centre of the vector or matrix.
 ##
-## If V is a vector of E datas corresponding to E time samples spaced
-## of Dt each, then fftshift (fft (V)) correspond to frequencies
+## If @var{v} is a vector of @var{E} elements corresponding to @var{E}
+## time samples spaced of @var{Dt} each, then @code{fftshift (fft
+## (@var{v}))} corresponds to frequencies
 ##
-##   f = linspace (-E/(4*DT), (E/2-1)/(2*DT), E)
+## @example
+## f = linspace (-@var{E}/(4*@var{Dt}), (@var{E}/2-1)/(2*@var{Dt}), @var{E})
+## @end example
 ##
-## If V is a matrix, does the same holds for rows and columns.
+## If @var{v} is a matrix, does the same holds for rows and columns.
+## @end deftypefn
 
 ## Author: Vincent Cautaerts <vincent@comf5.comm.eng.osaka-u.ac.jp>
 ## Created: July 1997
 ## Adapted-By: jwe
 
 function retval = fftshift (V)
 
   retval = 0;
diff --git a/scripts/signal/fractdiff.m b/scripts/signal/fractdiff.m
--- a/scripts/signal/fractdiff.m
+++ b/scripts/signal/fractdiff.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  fractdiff(x, d)
-##
-## Computes the fractional differences (1-L)^d x where L denotes the
-## lag-operator and d > -1.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} fractdiff (@var{x}, @var{d})
+## Compute the fractional differences @code{(1-@var{L})^@var{d} * @var{x}}
+## where @var{L} denotes the lag-operator and @var{d} is greater than -1.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Compute fractional differences
 
 function retval = fractdiff (x, d)
 
   N = 100;
 
diff --git a/scripts/signal/hamming.m b/scripts/signal/hamming.m
--- a/scripts/signal/hamming.m
+++ b/scripts/signal/hamming.m
@@ -9,22 +9,23 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  hamming (m)
-##
-## Returns the filter coefficients of a Hamming window of length m.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} hamming (@var{m})
+## Return the filter coefficients of a Hamming window of length @var{m}.
 ##
 ## For a definition of the Hamming window, see e.g. A. V. Oppenheim &
 ## R. W. Schafer, "Discrete-Time Signal Processing".
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Coefficients of the Hamming window
 
 function c = hamming (m)
 
   if (nargin != 1)
     usage ("hamming (m)");
diff --git a/scripts/signal/hanning.m b/scripts/signal/hanning.m
--- a/scripts/signal/hanning.m
+++ b/scripts/signal/hanning.m
@@ -9,22 +9,23 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  hanning (m)
-##
-## Returns the filter coefficients of a Hanning window of length m.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} hanning (@var{m})
+## Return the filter coefficients of a Hanning window of length @var{m}.
 ##
 ## For a definition of this window type, see e.g. A. V. Oppenheim &
 ## R. W. Schafer, "Discrete-Time Signal Processing".
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Coefficients of the Hanning window
 
 function c = hanning (m)
 
   if (nargin != 1)
     usage ("hanning (m)");
diff --git a/scripts/signal/hurst.m b/scripts/signal/hurst.m
--- a/scripts/signal/hurst.m
+++ b/scripts/signal/hurst.m
@@ -9,21 +9,22 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  H = hurst (x)
-##
-## Estimates the Hurst parameter of sample x via the rescaled range
-## statistic. If x is a matrix, the parameter is estimated for every
-## single column.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} hurst (@var{x})
+## Estimate the Hurst parameter of sample @var{x} via the rescaled range
+## statistic.  If @var{x} is a matrix, the parameter is estimated for
+## every single column.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Estimate the Hurst parameter
 
 function H = hurst (x)
 
   if (nargin != 1)
     usage ("hurst (x)");
diff --git a/scripts/signal/periodogram.m b/scripts/signal/periodogram.m
--- a/scripts/signal/periodogram.m
+++ b/scripts/signal/periodogram.m
@@ -9,19 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  periodogram (x)
-##
-## For a data matrix x from a sample of size n, return the periodogram.
+## -*- texinfo -*-
+## @deftypefn {Function File} {} periodogram (@var{x})
+## For a data matrix @var{x} from a sample of size @var{n}, return the
+## periodogram.
+## @end deftypefn
 
 ## Author: FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Compute the periodogram
 
 function retval = periodogram (x)
 
   [r, c] = size(x);
 
diff --git a/scripts/signal/rectangle_lw.m b/scripts/signal/rectangle_lw.m
--- a/scripts/signal/rectangle_lw.m
+++ b/scripts/signal/rectangle_lw.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = rectangle_lw (n, b)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} rectangle_lw (@var{n}, @var{b})
 ## Rectangular lag window. Subfunction used for spectral density
 ## estimation.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Rectangular lag window
 
 function retval = rectangle_lw (n, b)
 
   retval = zeros (n, 1);
   t = floor (1 / b);
diff --git a/scripts/signal/rectangle_sw.m b/scripts/signal/rectangle_sw.m
--- a/scripts/signal/rectangle_sw.m
+++ b/scripts/signal/rectangle_sw.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = rectangle_sw (n, b)
-##
-## Rectangular spectral window. Subfunction used for spectral density
+## -*- texinfo -*-
+## @deftypefn {Function File} {} rectangle_sw (@var{n}, @var{b})
+## Rectangular spectral window.  Subfunction used for spectral density
 ## estimation.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Rectangular spectral window
 
 function retval = rectangle_sw (n, b)
 
   retval = zeros (n, 1);
   retval(1) = 2 / b + 1;
diff --git a/scripts/signal/sinetone.m b/scripts/signal/sinetone.m
--- a/scripts/signal/sinetone.m
+++ b/scripts/signal/sinetone.m
@@ -9,40 +9,41 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  sinetone (freq [, rate [, sec [, ampl]]])
+## -*- texinfo -*-
+## @deftypefn {Function File} {} sinetone (@var{freq}, @var{rate}, @var{sec}, @var{ampl})
+## Return a sinetone of frequency @var{freq} with length of @var{sec}
+## seconds at sampling rate @var{rate} and with amplitude @var{ampl}.
+## The arguments @var{freq} and @var{ampl} may be vectors of common size.
 ##
-## Returns a sinetone of frequency freq with length of sec seconds at
-## sampling rate rate and with amplitude ampl.  freq and ampl may be
-## vectors of common size.
-##
-## Defaults are rate = 8000, sec = 1 and ampl = 64.
+## Defaults are @var{rate} = 8000, @var{sec} = 1 and @var{ampl} = 64.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Compute a sine tone
 
 function retval = sinetone (f, r, s, a)
 
   if (nargin == 1)
     r = 8000;
     s = 1;
     a = 64;
   elseif (nargin == 2)
     s = 1;
     a = 64;
   elseif (nargin == 3)
     a = 64;
   elseif ((nargin < 1) || (nargin > 4))
-    usage ("sinetone (freq [, rate [, sec [, ampl]]])");
+    usage ("sinetone (freq, rate, sec, ampl)");
   endif
 
   [err, f, a] = common_size (f, a);
   if (err || ! is_vector (f))
     error ("sinetone:  freq and ampl must be vectors of common size");
   endif
 
   if !(is_scalar (r) && is_scalar (s))
diff --git a/scripts/signal/sinewave.m b/scripts/signal/sinewave.m
--- a/scripts/signal/sinewave.m
+++ b/scripts/signal/sinewave.m
@@ -9,29 +9,30 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  sinewave (m, n [, d])
+## -*- texinfo -*-
+## @deftypefn {Function File} {} sinewave (@var{m}, @var{n}, @var{d})
+## Return an @var{m}-element vector with @var{i}-th element given by
+## @code{sin (2 * pi * (@var{i}+@var{d}-1) / @var{n})}.
 ##
-## Computes an (m x 1)-vector X with i-th element X(i) given by sin (2 *
-## pi * (i+d-1) / n).
-##
-## The default value for d is 0.
+## The default value for @var{d} is 0.
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Compute a sine wave
 
 function x = sinewave (m, n, d)
 
   if (nargin == 2)
     d = 0;
   elseif (nargin != 3)
-    usage ("sinewave (m, n [, d])");
+    usage ("sinewave (m, n, d)");
   endif
 
   x = sin ( ((1 : m) + d - 1) * 2 * pi / n);
 
 endfunction
diff --git a/scripts/signal/spectral_adf.m b/scripts/signal/spectral_adf.m
--- a/scripts/signal/spectral_adf.m
+++ b/scripts/signal/spectral_adf.m
@@ -9,26 +9,28 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = spectral_adf (c, [win, [b]])
+## -*- texinfo -*-
+## @deftypefn {Function File} {} spectral_adf (@var{c}, @var{win}, @var{b})
+## Return the spectral density estimator given a vector of
+## autocovariances @var{c}, window name @var{win}, and bandwidth,
+## @var{b}.
 ##
-## Returns the spectral density estimator.
-## c ....... vector of autocovariances (starting at lag 0)
-## win ..... window name, eg. "triangle" or "rectangle"
-##           spectral_adf searches for a function called win_lw ()
-## b ....... bandwidth
+## The window name, e.g., @code{"triangle"} or @code{"rectangle"} is
+## used to search for a function called @code{@var{win}_sw}.
 ##
-## If win is omitted, the triangle window is used as default.
-## If b is omitted, 1 / sqrt( length (c)) is used as default.
+## If @var{win} is omitted, the triangle window is used.  If @var{b} is
+## omitted, @code{1 / sqrt (length (@var{x}))} is used.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Spectral density estimation
 
 function retval = spectral_adf (c, win, b)
 
   cr = length (c);
 
diff --git a/scripts/signal/spectral_xdf.m b/scripts/signal/spectral_xdf.m
--- a/scripts/signal/spectral_xdf.m
+++ b/scripts/signal/spectral_xdf.m
@@ -9,26 +9,27 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = spectral_xdf (X, [win, [b]])
+## -*- texinfo -*-
+## @deftypefn {Function File} {} spectral_xdf (@var{x}, @var{win}, @var{b})
+## Return the spectral density estimator given a data vector @var{x},
+## window name @var{win}, and bandwidth, @var{b}.
 ##
-## Returns the spectral density estimator.
-## X ....... data vector
-## win ..... window name, eg. "triangle" or "rectangle"
-##           spectral_adf searches for a function called win_sw ()
-## b ....... bandwidth
+## The window name, e.g., @code{"triangle"} or @code{"rectangle"} is
+## used to search for a function called @code{@var{win}_sw}.
 ##
-## If win is omitted, the triangle window is used as default.
-## If b is omitted, 1 / sqrt (length (X)) is used as default.
+## If @var{win} is omitted, the triangle window is used.  If @var{b} is
+## omitted, @code{1 / sqrt (length (@var{x}))} is used.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Spectral density estimation
 
 function retval = spectral_xdf (X, win, b)
 
   xr = length (X);
 
diff --git a/scripts/signal/spencer.m b/scripts/signal/spencer.m
--- a/scripts/signal/spencer.m
+++ b/scripts/signal/spencer.m
@@ -9,19 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  spencer (X)
-##
-## returns Spencer's 15 point moving average of every single column of X
+## -*- texinfo -*-
+## @deftypefn {Function File} {} spencer (@var{x})
+## Return Spencer's 15 point moving average of every single column of
+## @var{x}.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Apply Spencer's 15-point MA filter
 
 function retval = spencer (X)
 
   if (nargin != 1)
     usage ("spencer (X)");
diff --git a/scripts/signal/stft.m b/scripts/signal/stft.m
--- a/scripts/signal/stft.m
+++ b/scripts/signal/stft.m
@@ -9,35 +9,49 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  [Y, c] = stft (X [, win_size [, inc [, num_coef [, w_type]]]])
-##
-## Computes the short-term Fourier transform of the vector X with
-## "num_coef" coefficients by applying a window of "win_size" data
-## points and an increment of "inc" points.
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{y}, @var{c}]} = stft (@var{x}, @var{win_size}, @var{inc}, @var{num_coef}, @var{w_type})
+## Compute the short-term Fourier transform of the vector @var{x} with
+## @var{num_coef} coefficients by applying a window of @var{win_size} data
+## points and an increment of @var{inc} points.
 ##
 ## Before computing the Fourier transform, one of the following windows
-## is applied:  "hanning" (w_type = 1), "hamming" (w_type = 2),
-## "rectangle" (w_type = 3).  The window names can be passed as strings
-## or by the w_type number.
+## is applied:
+##
+## @table @asis
+## @item hanning
+## w_type = 1
+## @item hamming
+## w_type = 2
+## @item rectangle
+## w_type = 3
+## @end table
+##
+## The window names can be passed as strings or by the @var{w_type} number.
 ##
 ## If not all arguments are specified, the following defaults are used:
-## win_size = 80, inc = 24, num_coef = 64, w_type = 1.
+## @var{win_size} = 80, @var{inc} = 24, @var{num_coef} = 64, and
+## @var{w_type} = 1.
 ##
-## Y = stft (X [, ...]) returns the absolute values of the Fourier
-## coefficients according to the num_coef positive frequencies.
-## [Y, c] = stft (X [, ...]) returns the entire STFT-matrix Y and a
-## vector c = [win_size, inc, w_type] which is needed by the synthesis
-## function.
+## @code{@var{y} = stft (@var{x}, @dots{})} returns the absolute values
+## of the Fourier coefficients according to the @var{num_coef} positive
+## frequencies.
+##
+## @code{[@var{y}, @var{c}] = stft (@code{x}, @dots{})} returns the
+## entire STFT-matrix @var{y} and a 3-element vector @var{c} containing
+## the window size, increment, and window type, which is needed by the
+## synthesis function.
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Short-term Fourier transform
 
 function [Y, c] = stft(X, win, inc, coef, w_type)
 
   ## default values of unspecified arguments
   if (nargin < 5)
@@ -59,18 +73,17 @@ function [Y, c] = stft(X, win, inc, coef
         w_type = 2;
       elseif (strcmp (w_type, "rectangle"))
         w_type = 3;
       else
         error (["stft:  unknown window type `", w_type, "'"])
       endif
     endif
   else
-    usage ("[Y [, c]] = ", ...
-           "stft(X [, win_size [, inc [, num_coef [, w_type]]]])");
+    usage ("[Y, c] = stft(X, win_size, inc, num_coef, w_type)");
   endif
 
   ## check whether X is a vector
   [nr, nc] = size (X);
   if (nc != 1)
     if (nr == 1)
       X = X';
       nr = nc;
diff --git a/scripts/signal/synthesis.m b/scripts/signal/synthesis.m
--- a/scripts/signal/synthesis.m
+++ b/scripts/signal/synthesis.m
@@ -9,22 +9,28 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  X = synthesis (Y, c)
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{x} =} synthesis (@var{y}, @var{c})
+## Compute a signal from its short-time Fourier transform @var{y} and a
+## 3-element vector @var{c} specifying window size, increment, and
+## window type.
 ##
-## recovers a signal X from its short-time Fourier transform Y. c =
-## [win_size, increment, window_type].
+## The values @var{y} and @var{c} can be derived by
 ##
-## Y and c can be derived by [Y, c] = stft (X [, ...]).
+## @example
+## [@var{y}, @var{c}] = stft (@var{x} , @dots{})
+## @end example
+## @end deftypefn
 
 ## Author:  AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description:  Recover a signal from its short-term Fourier transform
 
 function X = synthesis (Y, c)
 
   if (nargin != 2)
     usage ("X = synthesis (Y, c)");
diff --git a/scripts/signal/triangle_lw.m b/scripts/signal/triangle_lw.m
--- a/scripts/signal/triangle_lw.m
+++ b/scripts/signal/triangle_lw.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = triangle_lw (n, b)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} triangle_lw (@var{n}, @var{b})
 ## Triangular lag window. Subfunction used for spectral density
 ## estimation.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Triangular lag window
 
 function retval = triangle_lw (n, b)
 
   retval = 1 - (0 : n-1)' * b;
   retval = max ([retval'; (zeros (1, n))])';
diff --git a/scripts/signal/triangle_sw.m b/scripts/signal/triangle_sw.m
--- a/scripts/signal/triangle_sw.m
+++ b/scripts/signal/triangle_sw.m
@@ -9,20 +9,21 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  retval = triangle_sw (n, b)
-##
+## -*- texinfo -*-
+## @deftypefn {Function File} {} triangle_sw (@var{n}, @var{b})
 ## Triangular spectral window.  Subfunction used for spectral density
 ## estimation.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Triangular spectral window
 
 function retval = triangle_sw (n, b)
 
   retval = zeros(n,1);
   retval(1) = 1 / b;
diff --git a/scripts/signal/yulewalker.m b/scripts/signal/yulewalker.m
--- a/scripts/signal/yulewalker.m
+++ b/scripts/signal/yulewalker.m
@@ -9,22 +9,24 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
-## usage:  [a, v] = yulewalker (c)
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{a}, @var{v}] =} yulewalker (@var{c})
+## Fit an AR (p)-model with Yule-Walker estimates given a vector @var{c}
+## of autocovariances @code{[gamma_0, ..., gamma_p]}.
 ##
-## fits an AR (p)-model with Yule-Walker estimates.
-## c = [gamma_0, ..., gamma_p] autocovariances
-## a .... AR coefficients
-## v .... variance of white noise
+## Returns the AR coefficients, @var{a}, and the variance of white
+## noise, @var{v}.
+## @end deftypefn
 
 ## Author:  FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description:  Fit AR model by Yule-Walker method
 
 function [a, v] = yulewalker (c)
 
   p = length (c) - 1;
 
