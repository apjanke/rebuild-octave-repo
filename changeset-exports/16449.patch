# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365284772 14400
#      Sat Apr 06 17:46:12 2013 -0400
# Node ID c129a8b73d25cdf3b2a99e374d2ee3751cf88c02
# Parent  47fe533ec85ba6bf08d7a8d5931b876e01338b4e
avoid unneeded signals for window focus

* main-window.h, main-windwo.cc (main_window::focus_command_window,
main_window::handle_command_double_clicked): Call command_window.focus
directly.
(main_window::focus_history_window): Delete.
(main_window::construct): Delete connection from
main_window::focus_command_window_signal to command_window::focus.
Connect history_action::triggered to history_window::focus instead of
main_window::focus_command_history.
(main_window::focus_command_window_signal
main_window::focus_history_window_signal): Delete signals.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -85,16 +85,22 @@ main_window::~main_window ()
 
   if (_files_dock_widget)
     delete _files_dock_widget;
 
   delete _workspace_view;
 }
 
 void
+main_window::focus_command_window (void)
+{
+  command_window.focus ();
+}
+
+void
 main_window::new_file ()
 {
 #ifdef HAVE_QSCINTILLA
   _file_editor->request_new_file ();
 #endif
 }
 
 void
@@ -152,17 +158,18 @@ main_window::handle_clear_history_reques
 {
   octave_link::post_event (this, &main_window::clear_history_callback);
 }
 
 void
 main_window::handle_command_double_clicked (const QString& command)
 {
   emit relay_command_signal (command);
-  emit focus_command_window_signal ();
+
+  command_window.focus ();
 }
 
 void
 main_window::open_online_documentation_page ()
 {
   QDesktopServices::openUrl (QUrl ("http://gnu.org/software/octave/doc/interpreter"));
 }
 
@@ -335,28 +342,16 @@ main_window::accept_directory_line_edit 
 
   int index = _current_directory_combo_box->findText (dir);
 
   if (index < 0)
     set_current_working_directory (dir);
 }
 
 void
-main_window::focus_command_window (void)
-{
-  emit focus_command_window_signal ();
-}
-
-void
-main_window::focus_history_window (void)
-{
-  emit focus_history_window_signal ();
-}
-
-void
 main_window::focus_current_directory ()
 {
   if (!_files_dock_widget->isVisible ())
     {
       _files_dock_widget->setVisible (true);
     }
 
   _files_dock_widget->setFocus ();
@@ -1006,23 +1001,20 @@ main_window::construct ()
   connect (show_documentation_action,   SIGNAL (toggled (bool)),
            _documentation_dock_widget,  SLOT   (setVisible (bool)));
   connect (_documentation_dock_widget,  SIGNAL (active_changed (bool)),
            show_documentation_action,   SLOT   (setChecked (bool)));
 
   connect (command_window_action,       SIGNAL (triggered ()),
            &command_window,             SLOT (focus ()));
 
-  connect (this, SIGNAL (focus_command_window_signal ()),
-           &command_window, SLOT (focus ()));
-
   connect (workspace_action,            SIGNAL (triggered ()),
            this,                        SLOT (focus_workspace ()));
   connect (history_action,              SIGNAL (triggered ()),
-           this,                        SLOT (focus_command_history ()));
+           &history_window,             SLOT (focus ()));
   connect (file_browser_action,         SIGNAL (triggered ()),
            this,                        SLOT (focus_current_directory ()));
   connect (editor_action,               SIGNAL (triggered ()),
            this,                        SLOT (focus_editor ()));
   connect (documentation_action,        SIGNAL (triggered ()),
            this,                        SLOT (focus_documentation ()));
   connect (ondisk_documentation_action, SIGNAL (triggered ()),
            this,                        SLOT (focus_documentation ()));
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -64,21 +64,21 @@ class main_window : public QMainWindow
   Q_OBJECT
 
 public:
 
   main_window (QWidget *parent = 0);
 
   ~main_window ();
 
+  void focus_command_window (void);
+
 signals:
   void settings_changed (const QSettings *);
   void relay_command_signal (const QString&);
-  void focus_command_window_signal (void);
-  void focus_history_window_signal (void);
 
 public slots:
   void report_status_message (const QString& statusMessage);
   void handle_save_workspace_request ();
   void handle_load_workspace_request ();
   void handle_clear_workspace_request ();
   void handle_clear_history_request (void);
   void new_file ();
@@ -98,18 +98,16 @@ public slots:
   void change_directory (const QString& dir);
   void browse_for_directory (void);
   void set_current_working_directory (const QString& dir);
   void change_directory_up (void);
   void accept_directory_line_edit (void);
 
   void handle_command_double_clicked (const QString& command);
 
-  void focus_command_window (void);
-  void focus_history_window (void);
   void focus_current_directory ();
   void focus_workspace ();
   void focus_editor ();
   void focus_documentation ();
   void handle_current_directory_visible (bool);
   void handle_workspace_visible (bool);
   void handle_editor_visible (bool);
   void handle_documentation_visible (bool);
