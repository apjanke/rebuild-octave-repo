# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1377006289 14400
#      Tue Aug 20 09:44:49 2013 -0400
# Node ID d5efffe5a7894fd573953851927d86e1a42ccc8d
# Parent  f519560bfcb4d42ad5e5ece67df886fe53a0281f
graphics.cc: Condition tests on HAVE_FLTK

* libinterp/corefcn/graphics.cc: Condition tests that explicitly call
graphics_toolkit (hf, "fltk") on HAVE_FLTK.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4087,17 +4087,17 @@ axes::properties::sync_positions (void)
   update_transform ();
   if (activepositionproperty.is ("position"))
     update_position ();
   else
     update_outerposition ();
 }
 
 /*
-%!test
+%!testif HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! unwind_protect
 %!   subplot(2,1,1); plot(rand(10,1)); subplot(2,1,2); plot(rand(10,1));
 %!   hax = findall (gcf (), "type", "axes");
 %!   positions = cell2mat (get (hax, "position"));
 %!   outerpositions = cell2mat (get (hax, "outerposition"));
 %!   looseinsets = cell2mat (get (hax, "looseinset"));
@@ -4106,17 +4106,17 @@ axes::properties::sync_positions (void)
 %!   hax = findall (gcf (), "type", "axes");
 %!   assert (cell2mat (get (hax, "position")), positions, 1e-4);
 %!   assert (cell2mat (get (hax, "outerposition")), outerpositions, 1e-4);
 %!   assert (cell2mat (get (hax, "looseinset")), looseinsets, 1e-4);
 %!   assert (cell2mat (get (hax, "tightinset")), tightinsets, 1e-4);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-%!test
+%!testif HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! fpos = get (hf, "position");
 %! unwind_protect
 %!   plot (rand (3))
 %!   position = get (gca, "position");
 %!   outerposition = get (gca, "outerposition");
 %!   looseinset = get (gca, "looseinset");
@@ -4125,17 +4125,17 @@ axes::properties::sync_positions (void)
 %!   set (hf, "position", fpos);
 %!   assert (get (gca, "outerposition"), outerposition, 0.001)
 %!   assert (get (gca, "position"), position, 0.001)
 %!   assert (get (gca, "looseinset"), looseinset, 0.001)
 %!   assert (get (gca, "tightinset"), tightinset, 0.001)
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-%!test
+%!testif HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! fpos = get (hf, "position");
 %! set (gca, "activepositionproperty", "position")
 %! unwind_protect
 %!   plot (rand (3))
 %!   position = get (gca, "position");
 %!   outerposition = get (gca, "outerposition");
