# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1243032484 -3600
#      Fri May 22 23:48:04 2009 +0100
# Node ID b2790fd23800da3e972b56d91d45fa74a8f0cae4
# Parent  6e9ba936e98331afd8bb23f8cf3da417e48d7f91
More export symbols to allow usage from an IDE.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-05-22  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* toplev.h (main_loop): Tag with OCTINTERP_API.
+	* input.h (octave_read, get_input_from_file, get_input_from_stdin):
+	Ditto.
+	* lex.h (create_buffer, current_buffer, switch_to_buffer,
+	delete_buffer, restore_input_buffer, delete_input_buffer): Ditto.
+
 2009-05-22  Robert T. Short  <octave@phaselockedsystems.com>
 
 	* ov-class.h, ov-class.cc (octave_class::clear_exemplar_map):
 	New function.
 	* symtab.h (symbol_record::clear_objects,
 	symbol_record::do_clear_objects): New functions.
 	* variables.cc (do_matlab_compatible_clear, clear):
 	Handle -classes option.
diff --git a/src/input.h b/src/input.h
--- a/src/input.h
+++ b/src/input.h
@@ -31,19 +31,19 @@ along with Octave; see the file COPYING.
 #include <string>
 
 #include "oct-time.h"
 #include "oct-obj.h"
 #include "pager.h"
 
 class octave_value;
 
-extern int octave_read (char *buf, unsigned max_size);
-extern FILE *get_input_from_file (const std::string& name, int warn = 1);
-extern FILE *get_input_from_stdin (void);
+extern OCTINTERP_API int octave_read (char *buf, unsigned max_size);
+extern OCTINTERP_API FILE *get_input_from_file (const std::string& name, int warn = 1);
+extern OCTINTERP_API FILE *get_input_from_stdin (void);
 
 // Global pointer for eval().
 extern std::string current_eval_string;
 
 // TRUE means get input from current_eval_string.
 extern bool get_input_from_eval_string;
 
 // TRUE means we haven't been asked for the input from
diff --git a/src/lex.h b/src/lex.h
--- a/src/lex.h
+++ b/src/lex.h
@@ -27,32 +27,32 @@ along with Octave; see the file COPYING.
 #include <list>
 
 // FIXME -- these input buffer things should be members of a
 // parser input stream class.
 
 typedef struct yy_buffer_state *YY_BUFFER_STATE;
 
 // Associate a buffer with a new file to read.
-extern YY_BUFFER_STATE create_buffer (FILE *f);
+extern OCTINTERP_API YY_BUFFER_STATE create_buffer (FILE *f);
 
 // Report the current buffer.
-extern YY_BUFFER_STATE current_buffer (void);
+extern OCTINTERP_API YY_BUFFER_STATE current_buffer (void);
 
 // Connect to new buffer buffer.
-extern void switch_to_buffer (YY_BUFFER_STATE buf);
+extern OCTINTERP_API void switch_to_buffer (YY_BUFFER_STATE buf);
 
 // Delete a buffer.
-extern void delete_buffer (YY_BUFFER_STATE buf);
+extern OCTINTERP_API void delete_buffer (YY_BUFFER_STATE buf);
 
 // Restore a buffer (for unwind-prot).
-extern void restore_input_buffer (void *buf);
+extern OCTINTERP_API void restore_input_buffer (void *buf);
 
 // Delete a buffer (for unwind-prot).
-extern void delete_input_buffer (void *buf);
+extern OCTINTERP_API void delete_input_buffer (void *buf);
 
 // Is the given string a keyword?
 extern bool is_keyword (const std::string& s);
 
 extern void prep_lexer_for_script (void);
 
 // For communication between the lexer and parser.
 
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -56,17 +56,17 @@ public:
   octave_quit_exception (int s) : status (s) { }
 };
 
 extern OCTINTERP_API void
 clean_up_and_exit (int);
 
 extern OCTINTERP_API void recover_from_exception (void);
 
-extern int main_loop (void);
+extern OCTINTERP_API int main_loop (void);
 
 extern OCTINTERP_API void
 do_octave_atexit (void);
 
 extern OCTINTERP_API void
 octave_add_atexit_function (const std::string& fname);
 
 extern OCTINTERP_API bool
