# HG changeset patch
# User jwe
# Date 845142102 0
#      Sat Oct 12 17:41:42 1996 +0000
# Node ID 81298641458daf5a1abd78ec692d69435e29783f
# Parent  e807c025bfe89f29a430bfdc0750528b7eca1ed4
[project @ 1996-10-12 17:41:42 by jwe]

diff --git a/liboctave/Array-idx.h b/liboctave/Array-idx.h
--- a/liboctave/Array-idx.h
+++ b/liboctave/Array-idx.h
@@ -58,16 +58,29 @@ template <class T>
 Array<T>
 Array<T>::value (void)
 {
   Array<T> retval;
 
   idx_vector *tmp = get_idx ();
   idx_vector idx = tmp[0];
 
+  retval = index (idx);
+
+  clear_index ();
+
+  return retval;
+}
+
+template <class T>
+Array<T>
+Array<T>::index (idx_vector& idx) const
+{
+  Array<T> retval;
+
   int len = length ();
 
   int n = idx.freeze (len, "vector", liboctave_pzo_flag);
 
   if (idx)
     {
       if (idx.is_colon_equiv (len))
 	{
@@ -89,20 +102,19 @@ Array<T>::value (void)
 
 	  for (int i = 0; i < n; i++)
 	    {
 	      int ii = idx.elem (i);
 	      retval.elem (i) = elem (ii);
 	    }
 	}
     }
+
   // idx_vector::freeze() printed an error message for us.
 
-  clear_index ();
-
   return retval;
 }
 
 template <class T>
 void
 Array<T>::maybe_delete_elements (idx_vector& idx)
 {
   int len = length ();
