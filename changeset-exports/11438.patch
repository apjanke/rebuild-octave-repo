# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294168156 18000
#      Tue Jan 04 14:09:16 2011 -0500
# Node ID 9e8497537319a16db4d344e1940f7a52716a14cd
# Parent  6bfb286a0efa41b7aa2c794df2fd0f4110399907
typeinfo: return cellstr, not char array

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-04  John W. Eaton  <jwe@octave.org>
+
+	* ov-typeinfo.cc (Ftypeinfo): Return cell array of character
+	strings, not character array.  Bug #32050.
+
 2011-01-03  Rik  <octave@nomad.inbox5.com>
 
 	* data.cc (islogical, isnumeric): Add tests to check sparse forms of
 	logical matrices.
 
 2011-01-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-bool-sparse.h (octave_sparse_bool_matrix::is_numeric_type): New
diff --git a/src/ov-typeinfo.cc b/src/ov-typeinfo.cc
--- a/src/ov-typeinfo.cc
+++ b/src/ov-typeinfo.cc
@@ -578,18 +578,18 @@ octave_value_typeinfo::do_lookup_widenin
   return reinterpret_cast<octave_base_value::type_conv_fcn> (f);
 }
 
 string_vector
 octave_value_typeinfo::do_installed_type_names (void)
 {
   string_vector retval (num_types);
 
-  for (int i = 0;i < num_types; i++)
-    retval (i) = types (i);
+  for (int i = 0; i < num_types; i++)
+    retval(i) = types(i);
 
   return retval;
 }
 
 DEFUN (typeinfo, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} typeinfo (@var{expr})\n\
 \n\
@@ -598,16 +598,16 @@ Return the type of the expression @var{e
 currently installed data types.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
-    retval = octave_value_typeinfo::installed_type_names ();
+    retval = Cell (octave_value_typeinfo::installed_type_names ());
   else if (nargin == 1)
     retval = args(0).type_name ();
   else
     print_usage ();
 
   return retval;
 }
