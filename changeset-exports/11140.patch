# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1287796680 14400
#      Fri Oct 22 21:18:00 2010 -0400
# Node ID 8aa93f43bae8bbec543bf66bd2b3f3479bdc1107
# Parent  0dd95d1d57e6a886337e23fb46e0b2d6c89daa02
use getopt_long correctly

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2010-10-22  John W. Eaton  <jwe@octave.org>
+
+	* octave.cc (usage): Put whitespace before and after usage message.
+	(octave_main): If getopt_long returns '?', it means an
+	unrecognized option was encountered.
+	Panic if default case in option switch statement is reached.
+ 	(verbose_usage, short_opts, usage_string): Remove '?' as an
+	alias for 'h' in the list of possible options.
+	Fixes bug #31423.
+
 2010-10-22  John W. Eaton  <jwe@octave.org>
 
 	* oct-parse.yy (load_fcn_from_file): Also strip directory when
 	computing function name from filename.  Bug #31395.
 
 2010-10-21  Gunnar Farneb√§ck  <gunnar@lysator.liu.se>
 
 	* mex.cc (mxArray_number::as_octave_value): Convert single
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -109,27 +109,27 @@ static bool inhibit_startup_message = fa
 static bool traditional = false;
 
 // If TRUE, print verbose info in some cases.
 // (--verbose; -V)
 static bool verbose_flag = false;
 
 // Usage message
 static const char *usage_string = 
-  "octave [-?HVdfhiqvx] [--debug] [--echo-commands] [--eval CODE]\n\
+  "octave [-HVdfhiqvx] [--debug] [--echo-commands] [--eval CODE]\n\
        [--exec-path path] [--help] [--image-path path] [--info-file file]\n\
        [--info-program prog] [--interactive] [--line-editing]\n\
        [--no-history] [--no-init-file] [--no-init-path] [--no-line-editing]\n\
        [--no-site-file] [--no-window-system] [-p path] [--path path]\n\
        [--silent] [--traditional] [--verbose] [--version] [file]";
 
 // This is here so that it's more likely that the usage message and
 // the real set of options will agree.  Note: the `+' must come first
 // to prevent getopt from permuting arguments!
-static const char *short_opts = "+?HVdfhip:qvx";
+static const char *short_opts = "+HVdfhip:qvx";
 
 // The code to evaluate at startup (--eval CODE)
 static std::string code_to_eval;
 
 // If TRUE, don't exit after evaluating code given by --eval option.
 static bool persist = false;
 
 // Long options.  See the comments in getopt.h for the meanings of the
@@ -471,17 +471,17 @@ Usage: octave [options] [FILE]\n\
 \n\
 Options:\n\
 \n\
   --debug, -d             Enter parser debugging mode.\n\
   --doc-cache-file FILE   Use doc cache file FILE.\n\
   --echo-commands, -x     Echo commands as they are executed.\n\
   --eval CODE             Evaluate CODE.  Exit when done unless --persist.\n\
   --exec-path PATH        Set path for executing subprograms.\n\
-  --help, -h, -?          Print short help message and exit.\n\
+  --help, -h,             Print short help message and exit.\n\
   --image-path PATH       Add PATH to head of image search path.\n\
   --info-file FILE        Use top-level info file FILE.\n\
   --info-program PROGRAM  Use PROGRAM for reading info files.\n\
   --interactive, -i       Force interactive behavior.\n\
   --line-editing          Force readline use for command-line editing.\n\
   --no-history, -H        Don't save commands to the history list\n\
   --no-init-file          Don't read the ~/.octaverc or .octaverc files.\n\
   --no-init-path          Don't initialize function search path.\n\
@@ -508,17 +508,17 @@ OCTAVE_BUGS_STATEMENT "\n";
   exit (0);
 }
 
 // Terse usage messsage.
 
 static void
 usage (void)
 {
-  std::cerr << "usage: " << usage_string << "\n";
+  std::cerr << "\nusage: " << usage_string << "\n\n";
   exit (1);
 }
 
 static void
 print_version_and_exit (void)
 {
   std::cout << OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS "\n";
   exit (0);
@@ -643,16 +643,23 @@ octave_main (int argc, char **argv, int 
 
       int optc = getopt_long (argc, argv, short_opts, long_opts, &long_idx);
 
       if (optc < 0)
         break;
 
       switch (optc)
         {
+        case '?':
+          // Unrecognized option.  getopt_long already printed a
+          // message about that, so we will just print the usage string
+          // and exit.
+          usage ();
+          break;
+
         case 'H':
           read_history_file = false;
           bind_internal_variable ("saving_history", false);
           break;
 
         case 'V':
           verbose_flag = true;
           break;
@@ -663,17 +670,16 @@ octave_main (int argc, char **argv, int 
           break;
 
         case 'f':
           read_init_files = false;
           read_site_files = false;
           break;
 
         case 'h':
-        case '?':
           verbose_usage ();
           break;
 
         case 'i':
           forced_interactive = true;
           break;
 
         case 'p':
@@ -759,17 +765,21 @@ octave_main (int argc, char **argv, int 
           persist = true;
           break;
 
         case TRADITIONAL_OPTION:
           traditional = true;
           break;
 
         default:
-          usage ();
+          // getopt_long should print a message about unrecognized
+          // options and return '?', which is handled above.  So if we
+          // end up here, it is because there was an option but we
+          // forgot to handle it.  That should be fatal.
+          panic_impossible ();
           break;
         }
     }
 
   // Make sure we clean up when we exit.  Also allow users to register
   // functions.  If we don't have atexit or on_exit, we're going to
   // leave some junk files around if we exit abnormally.
 
