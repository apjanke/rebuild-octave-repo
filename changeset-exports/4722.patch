# HG changeset patch
# User jwe
# Date 1074867757 0
#      Fri Jan 23 14:22:37 2004 +0000
# Node ID 8f892ca5851d01ef925e625ec6b96b337e323efa
# Parent  e4bb408219343f557da6a063b5acce27f76f9422
[project @ 2004-01-23 14:22:37 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-cell.cc (all_strings): Always compute total required length
+	of retval.
+
 2004-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* error.cc (pr_where): New arg, print_code with default value true.
 	(warning): Call pr_where with second arg false.
 
 	* file-io.cc (Ffrewind): Only return value if nargout > 0.
 	(Ffprintf): Likewise.
 	(Fprintf): Likewise.
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -275,34 +275,31 @@ octave_cell::all_strings (bool pad, bool
 
   int nr = rows ();
   int nc = columns ();
 
   int n_elts = 0;
 
   int max_len = 0;
 
-  if (pad)
+  for (int j = 0; j < nc; j++)
     {
-      for (int j = 0; j < nc; j++)
+      for (int i = 0; i < nr; i++)
 	{
-	  for (int i = 0; i < nr; i++)
-	    {
-	      string_vector s = matrix(i,j).all_strings ();
+	  string_vector s = matrix(i,j).all_strings ();
 
-	      if (error_state)
-		return retval;
+	  if (error_state)
+	    return retval;
 
-	      n_elts += s.length ();
+	  n_elts += s.length ();
 
-	      int s_max_len = s.max_length ();
+	  int s_max_len = s.max_length ();
 
-	      if (s_max_len > max_len)
-		max_len = s_max_len;
-	    }
+	  if (s_max_len > max_len)
+	    max_len = s_max_len;
 	}
     }
 
   retval.resize (n_elts);
 
   int k = 0;
 
   for (int j = 0; j < nc; j++)
@@ -321,18 +318,16 @@ octave_cell::all_strings (bool pad, bool
 	      if (pad && max_len > t_len)
 		t += std::string (max_len - t_len, ' ');
 
 	      retval[k++] = t;
 	    }
 	}
     }
 
-
-
   return retval;
 }
 
 bool
 octave_cell::print_as_scalar (void) const
 {
   return (ndims () > 2 || numel () == 0);
 }
