# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1238000057 14400
#      Wed Mar 25 12:54:17 2009 -0400
# Node ID 71fca0fc2436f9762b87bf937b435a87040086da
# Parent  3b1908b586621e81a9b704500881eca2267884a6
save source file names for functions as comments in .texi files

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-25  John W. Eaton  <jwe@octave.org>
+
+	* interpreter/munge-texi.cc (process_texi_input_file):
+	Copy leading comment with file name info to output.
+
 2009-03-09  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in (DISTFILES): Use doc-cache instead of
 	DOC for doc cache file.
 
 2009-03-08  Søren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/stats.txi (Basic Statistical Functions):
diff --git a/doc/interpreter/munge-texi.cc b/doc/interpreter/munge-texi.cc
--- a/doc/interpreter/munge-texi.cc
+++ b/doc/interpreter/munge-texi.cc
@@ -240,17 +240,33 @@ process_texi_input_file (std::istream& i
 		    symbol_name += (char) c;
 
 		  if (is.eof ())
 		    fatal ("end of file while reading @DOCSTRING command");
 		  else
 		    {
 		      std::string doc_string = help_text[symbol_name];
 
+		      size_t len = doc_string.length ();
+
 		      int j = 0;
+
+		      // If there is a leading comment with the file
+		      // name, copy it to the output.
+		      if (len > 1
+			  && doc_string[j] == '@'
+			  && doc_string[j+1] == 'c')
+			{
+			  j = 2;
+			  while (doc_string[j++] != '\n')
+			    /* find eol */;
+
+			  os << doc_string.substr (0, j);
+			}
+
 		      while (doc_string[j] == ' ')
 			j++;
 
 		      if (doc_string.substr (j, 15) == "-*- texinfo -*-")
 			{
 			  j += 15;
 
 			  while (isspace (doc_string[j]))
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2009-03-25  John W. Eaton  <jwe@octave.org>
+
+	* mkdoc: Pass full file name to gethelp.
+	* gethelp.cc (main): Handle second argument.  Write comment with
+	full file name to output.
+
 2009-03-24  Ben Abbott <bpabbott@mac.com>
 
 	* plot/gnuplot_drawnow.m: When printing, pass scalar plot_stream
 	to __gnuplot_draw_figure__, and close all plot streams when done.
 
 2009-03-24  John W. Eaton  <jwe@octave.org>
 
 	* general/isa.m: Handle parent classes.
diff --git a/scripts/gethelp.cc b/scripts/gethelp.cc
--- a/scripts/gethelp.cc
+++ b/scripts/gethelp.cc
@@ -130,29 +130,35 @@ extract_help_text (void)
 
   return help_txt;
 }
 
 int
 main (int argc, char **argv)
 {
   std::string name;
+  std::string file_name;
 
-  if (argc != 2)
+  if (argc != 3)
     {
-      std::cerr << "usage: gethelp name\n";
+      std::cerr << "usage: gethelp name file-name\n";
       return 1;
     }
   else
-    name = argv[1];
+    {
+      name = argv[1];
+      file_name = argv[2];
+    }
 
   std::string help_text = extract_help_text ();  
 
   if (! help_text.empty ())
     {
-      std::cout << "" << name << "\n" << help_text;
+      std::cout << "" << name << "\n"
+		<< "@c " << file_name << "\n"
+		<< help_text;
 
       if (help_text[help_text.length () - 1] != '\n')
 	std::cout << "\n";
     }
 
   return 0;
 }
diff --git a/scripts/mkdoc b/scripts/mkdoc
--- a/scripts/mkdoc
+++ b/scripts/mkdoc
@@ -37,21 +37,23 @@ if test -f gethelp; then
   cat << EOF
 ### DO NOT EDIT!
 ###
 ### This file is generated automatically from the Octave sources.
 ### Edit those files instead and run make to update this file.
 
 EOF
   $FIND $d -name '*.m' | \
-    $PERL -ne 'm{(.*)/(.*)\.m};
-               for (qx{./gethelp $2 < $_}) {
+    $PERL -n -e 'chop;
+               $f = "$_";
+               m{(.*)/(.*)\.m};
+               for (qx{./gethelp $2 "$f" < "$f"}) {
                  s/^\s+\@/\@/ unless $i_am_in_example;
                  s/^\s+\@group/\@group/;
                  s/^\s+\@end\s+group/\@end\s+group/;
                  $i_am_in_example = 1 if /\s*\@example/;
                  $i_am_in_example = 0 if /\s*\@end\s+example/;
                  print;
-               }'  
+               }'
 else
   echo "gethelp program seems to be missing!" 1>&2
   exit 1
 fi
\ No newline at end of file
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2009-03-25  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (%.df : %.cc): Write source file name to output,
+	wrapped in XDEFUN_FILE_NAME macro.
+	* mkbuiltins: Provide definition for XDEFUN_FILE_NAME.
+	* mkgendoc: Likeiwse.
+	(XDEFUN_DLD_INTERNAL, XDEFUNX_DLD_INTERNAL, XDEFUN_INTERNAL,
+	XDEFCONSTFUN_INTERNAL, XDEFUNX_INTERNAL, XDEFVAR_INTERNAL,
+	XDEFCONST_INTERNAL): Pass file_name to print_doc_string.
+	(print_doc_string): New arg, FILE_NAME.  Print file name as
+	comment.
+
 2009-03-24  John W. Eaton  <jwe@octave.org>
 
 	* ov-class.cc (F__parent_classes__): New function.
 
 2009-03-24  Robert T. Short  <octave@phaselockedsystems.com>
 
 	* ov-class.h, ov-class.cc (octave_class::octave_class (const
 	Octave_map&, const std::string&, const octave_value_list&)):
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -35,16 +35,17 @@ INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 PT_FLAGS = -fexternal-templates -fno-implicit-templates
 CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
 	@(echo "// DO NOT EDIT!  Generated automatically by mkdefs." ; \
+	  echo " XDEFUN_FILE_NAME (\"$<\")" ; \
 	  egrep '^(///*|/\*) *PKG_ADD:' $< ; \
 	  $(CXXCPP) $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	    | $(srcdir)/mkdefs) > $@-t
 	@mv $@-t $@
 
 # How to make a .oct file from a .o file:
 
 ifeq ($(ENABLE_DYNAMIC_LINKING), true)
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -60,16 +60,18 @@ cat << \EOF
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc) \
   XDEFUN_INTERNAL(name, args_name, nargout_name, doc)
 
 #define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc) \
   XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, doc)
 
 #endif
 
+#define XDEFUN_FILE_NAME(name)
+
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
   install_builtin_function (F ## name, #name, doc); \
 
 #define XDEFCONSTFUN_INTERNAL(name, args_name, nargout_name, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
   install_builtin_function (F ## name, #name, doc, false); \
 
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -38,52 +38,57 @@ cat << \EOF
 
 #if defined (__DECCXX)
 #define __USE_STD_IOSTREAM
 #endif
 
 #include <iostream>
 #include <string>
 
+#define XDEFUN_FILE_NAME(name) \
+  std::string file_name = name;
+
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc) \
-  print_doc_string (#name, doc);
+  print_doc_string (#name, file_name, doc);
 
 #define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc) \
-  print_doc_string (name, doc);
+  print_doc_string (name, file_name, doc);
 
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, doc) \
-  print_doc_string (#name, doc);
+  print_doc_string (#name, file_name, doc);
 
 #define XDEFCONSTFUN_INTERNAL(name, args_name, nargout_name, doc) \
-  print_doc_string (#name, doc);
+  print_doc_string (#name, file_name, doc);
 
 #define XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, doc) \
-  print_doc_string (name, doc);
+  print_doc_string (name, file_name, doc);
 
 #define XDEFALIAS_INTERNAL(alias, name)
 
 #define XDEFVAR_INTERNAL(name, sname, defn, protect, chg_fcn, doc) \
-  print_doc_string (#name, doc);
+  print_doc_string (#name, file_name, doc);
 
 #define XDEFCONST_INTERNAL(name, defn, doc) \
-  print_doc_string (#name, doc);
+  print_doc_string (#name, file_name, doc);
 
 static void
-print_doc_string (const std::string& name, const std::string& doc)
+print_doc_string (const std::string& name, const std::string& file_name,
+		  const std::string& doc)
 {
   std::cout << "";
 
   size_t len = name.length ();
 
   if (name[0] == '"' && name[len-1] == '"')
-    std::cout << name.substr (1, len-2);
+    std::cout << name.substr (1, len-2) << "\n";
   else
-    std::cout << name;
+    std::cout << name << "\n";
 
-  std::cout << "\n" << doc << "\n";
+  std::cout << "@c " << file_name << "\n"
+	    << doc << "\n";
 }
 
 EOF
 
 for file in $DOC_FILES; do
   fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "static void"
   echo "print_${fcn}_doc_strings (void)"
