# HG changeset patch
# User jwe
# Date 758922217 0
#      Tue Jan 18 19:43:37 1994 +0000
# Node ID 20c1412d7924a0440832edc9aede24b732086e48
# Parent  676b70238e682f4d2903034a5f28bc698f6955d2
[project @ 1994-01-18 19:43:29 by jwe]

diff --git a/liboctave/DAE.h b/liboctave/DAE.h
--- a/liboctave/DAE.h
+++ b/liboctave/DAE.h
@@ -44,22 +44,22 @@ public:
 
   DAE (const Vector& x, const Vector& xdot, double time, DAEFunc& f);
 
  ~DAE (void);
 
   Vector deriv (void);
 
   virtual void initialize (const Vector& x, double t);
-  virtual void initialize (const Vector& x, Vector& xdot, double t);
+  virtual void initialize (const Vector& x, const Vector& xdot, double t);
 
   Vector integrate (double t);
 
-  Matrix integrate (const Vector& tout, Matrix& xdot_out);
-  Matrix integrate (const Vector& tout, Matrix& xdot_out,
+  Matrix integrate (const Vector& tout, const Matrix& xdot_out);
+  Matrix integrate (const Vector& tout, const Matrix& xdot_out,
 		    const Vector& tcrit); 
 
 protected:
 
 /*
  * Some of this is probably too closely related to DASSL, but hey,
  * this is just a first attempt...
  */
diff --git a/liboctave/DASSL.cc b/liboctave/DASSL.cc
--- a/liboctave/DASSL.cc
+++ b/liboctave/DASSL.cc
@@ -345,17 +345,17 @@ DAE::integrate (double tout)
     }
 
   t = tout;
 
   return x;
 }
 
 Matrix
-DAE::integrate (const Vector& tout, Matrix& xdot_out)
+DAE::integrate (const Vector& tout, const Matrix& xdot_out)
 {
   Matrix retval;
   int n_out = tout.capacity ();
 
   if (n_out > 0 && n > 0)
     {
       retval.resize (n_out, n);
       xdot_out.resize (n_out, n);
@@ -380,17 +380,18 @@ DAE::integrate (const Vector& tout, Matr
 	    }
 	}
     }
 
   return retval;
 }
 
 Matrix
-DAE::integrate (const Vector& tout, Matrix& xdot_out, const Vector& tcrit)
+DAE::integrate (const Vector& tout, const Matrix& xdot_out,
+		const Vector& tcrit) 
 {
   Matrix retval;
   int n_out = tout.capacity ();
 
   if (n_out > 0 && n > 0)
     {
       retval.resize (n_out, n);
       xdot_out.resize (n_out, n);
