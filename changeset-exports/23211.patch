# HG changeset patch
# User Rik <rik@octave.org>
# Date 1487570478 28800
#      Sun Feb 19 22:01:18 2017 -0800
# Branch stable
# Node ID 08042580fe93d8e1515a7dcb0cbc13f70fc8defb
# Parent  9b0a2bc07545c75696d52c48a3d65f2d83767c1f
Fix incorrect handling of 0b binary numbers in complex contstants.

* lex.ll (handle_number): For number identified as binary, only look for '0' or
'1' and ignore other characters such as 'i','j' used in complex notation.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -2789,18 +2789,23 @@ namespace octave
         value = static_cast<double> (long_int_value);
       }
     else if (looks_like_bin (tmptxt, strlen (tmptxt)))
       {
         uintmax_t long_int_value = 0;
 
         for (size_t i = 0; i < strlen (tmptxt); i++)
           {
-            long_int_value <<= 1;
-            long_int_value += static_cast<uintmax_t> (tmptxt[i] == '1');
+            if (tmptxt[i] == '0')
+              long_int_value <<= 1;
+            else if (tmptxt[i] == '1')
+            {
+              long_int_value <<= 1;
+              long_int_value += 1;
+            }
           }
 
         value = static_cast<double> (long_int_value);
 
         nread = 1;  // Just to pass the assert stmt below
       }
     else
       {
