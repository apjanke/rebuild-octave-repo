# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1414784661 -3600
#      Fri Oct 31 20:44:21 2014 +0100
# Node ID 68db8396c378664c5fb031bb89c53ef81affcd5c
# Parent  a2595c4b8efe6b93c9d7547795b964a0b56246b7
Make "image ()" use the default image cdata

* graphics.in.h (image::properties::initialize_data): new public method to trigger the initialization of the x/ydata properties.

* graphics.in.h (image::image): call initialize_data.

* image.m: when called with no argument, use default image cdata

diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -4578,16 +4578,18 @@ public:
 
     bool is_climinclude (void) const
     { return (climinclude.is_on () && cdatamapping.is ("scaled")); }
     std::string get_climinclude (void) const
     { return climinclude.current_value (); }
 
     octave_value get_color_data (void) const;
 
+    void initialize_data (void) { update_cdata (); }
+
     // See the genprops.awk script for an explanation of the
     // properties declarations.
     // Programming note: Keep property list sorted if new ones are added.
 
     BEGIN_PROPERTIES (image)
       array_property alphadata u , Matrix (1, 1, 1.0)
       radio_property alphadatamapping al , "{none}|direct|scaled"
       array_property cdata u , default_image_cdata ()
@@ -4745,16 +4747,17 @@ public:
 private:
   properties xproperties;
 
 public:
   image (const graphics_handle& mh, const graphics_handle& p)
     : base_graphics_object (), xproperties (mh, p)
   {
     xproperties.override_defaults (*this);
+    xproperties.initialize_data ();
   }
 
   ~image (void) { }
 
   base_properties& get_properties (void) { return xproperties; }
 
   const base_properties& get_properties (void) const { return xproperties; }
 
diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -64,17 +64,17 @@
 function h = image (varargin)
 
   [hax, varargin, nargin] = __plt_get_axis_arg__ ("image", varargin{:});
   
   chararg = find (cellfun ("isclass", varargin, "char"), 1, "first");
   
   do_new = true;
   if (nargin == 0)
-    img = imread ("default.img");
+    img = get (0, "defaultimagecdata");
     x = y = [];
   elseif (chararg == 1) 
     ## Low-Level syntax
     do_new = false;
     x = y = img = [];
     idx = find (strcmpi (varargin, "cdata"), 1);
     if (idx)
       img = varargin{idx+1};
