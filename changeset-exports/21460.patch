# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1458236601 14400
#      Thu Mar 17 13:43:21 2016 -0400
# Node ID 236163306596246acdbd144d363d842f539555c8
# Parent  385b67d48dda48e98bd29f9149327996f2cd99cb
* test.m: Omit details about known test failures (bug #47444).

diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -582,17 +582,17 @@ function [__n, __nmax, __nxfail, __nskip
                            __shared_r, __shared, __code));
             eval (sprintf ("%s__test__(%s);", __shared_r, __shared));
           else
             error (["Functions embedded in %!test blocks are not allowed.\n", ...
                     "Use the %!function/%!endfunction syntax instead to define shared functions for testing.\n"]);
           endif
         catch
           if (strcmp (__type, "xtest"))
-            __msg = [__signal_fail "known failure\n" lasterr()];
+            __msg = [__signal_fail "known failure\n"];
             __xfail += 1;
             __success = false;
           else
             __msg = [__signal_fail "test failed\n" lasterr()];
             __success = false;
           endif
           if (isempty (lasterr ()))
             error ("test: empty error text, probably Ctrl-C --- aborting");
@@ -605,17 +605,19 @@ function [__n, __nmax, __nxfail, __nskip
       if (! isempty (__msg) && (__verbose >= 0 || __logfile))
         ## Make sure the user knows what caused the error.
         if (__verbose < 1)
           fprintf (__fid, "%s%s\n", __signal_block, __block);
           fflush (__fid);
         endif
         fprintf (__fid, "%s\n", __msg);
         ## Show the variable context.
-        if (! strcmp (__type, "error") && ! strcmp (__type, "testif")
+        if (! strcmp (__type, "error")
+            && ! strcmp (__type, "testif")
+            && ! strcmp (__type, "xtest")
             && ! all (__shared == " "))
           fputs (__fid, "shared variables ");
           eval (sprintf ("fdisp(__fid,var2struct(%s));", __shared));
         endif
         fflush (__fid);
       endif
       if (! __success && ! __isxtest)
         __all_success = false;
