# HG changeset patch
# User jwe
# Date 1117736480 0
#      Thu Jun 02 18:21:20 2005 +0000
# Node ID 27986bd3e23890b346f9173fd24a331e80ad4ce6
# Parent  b2a5596a3f7bacb95261cc6ff734bd4a56a76a93
[project @ 2005-06-02 18:21:20 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -3022,24 +3022,34 @@ assignN (Array<LT>& lhs, const Array<RT>
 	      // If index is a colon, resizing to RHS dimensions is
 	      // allowed because we started out empty.
 
 	      if (idx(i).is_colon ())
 		{
 		  if (k < rhs_dims.length ())
 		    new_dims(i) = rhs_dims(k++);
 		  else
+		    new_dims(i) = 1;
+		}
+	      else
+		{
+		  octave_idx_type nelem = idx(i).capacity ();
+
+		  if (nelem >= 1
+		      && k < rhs_dims.length () && nelem == rhs_dims(k))
+		    k++;
+		  else if (nelem != 1)
 		    {
 		      (*current_liboctave_error_handler)
-			("A(IDX-LIST) = RHS: A previously undefined and more colons in IDX-LIST than dimensions for RHS");
+			("A(IDX-LIST) = RHS: mismatched index and RHS dimension");
 		      return retval;
 		    }
+
+		  new_dims(i) = idx(i).max () + 1;
 		}
-	      else
-		new_dims(i) = idx(i).max () + 1;
 	    }
 	}
       else
 	{
 	  for (int i = 0; i < n_idx; i++)
 	    {
 	      // We didn't start out with all zero dimensions, so if
 	      // index is a colon, it refers to the current LHS
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2005-06-02  John W. Eaton  <jwe@octave.org>
+
+	* Array.cc (assignN): Try harder to correctly resize previously
+	empty LHS.
+
 2005-05-16  David Bateman  <dbateman@free.fr>
 
 	* dSparse.h: Change UMFPACK_LONG_IDX to IDX_TYPE_LONG.
 	* CSparse.h: ditto.
 
 2005-05-10  David Bateman <dbateman@free.fr>
 
 	* dSparse.cc (determinant): Free numeric factorization after
