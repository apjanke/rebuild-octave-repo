# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424327212 18000
#      Thu Feb 19 01:26:52 2015 -0500
# Node ID a5206dfbaa1355c0fdf83a9672c1a2de386b083e
# Parent  3266c382b3284bfa338a42f6533b226f44de9bea
rename mouse_wheel_zoom axes property to mousewheelzoom

* graphics.in.h: Rename mouse_wheel_zoom axes property to
mousewheelzoom.
* __init_fltk__.cc: Adapt to property name change.

diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3889,17 +3889,17 @@ public:
       // NOTE: interpreter is not a Matlab axis property, but it makes
       //       more sense to have it so that axis ticklabels can use it.
       radio_property interpreter , "tex|{none}|latex"
       radio_property layer u , "{bottom}|top"
       // FIXME: should be kind of string array.
       any_property linestyleorder S , "-"
       double_property linewidth , 0.5
       radio_property minorgridlinestyle , "-|--|{:}|-.|none"
-      double_property mouse_wheel_zoom , 0.05
+      double_property mousewheelzoom , 0.5
       radio_property nextplot , "add|replacechildren|{replace}"
       array_property outerposition u , default_axes_outerposition ()
       array_property plotboxaspectratio mu , Matrix (1, 3, 1.0)
       radio_property plotboxaspectratiomode u , "{auto}|manual"
       array_property position u , default_axes_position ()
       radio_property projection , "{orthographic}|perspective"
       radio_property tickdir mu , "{in}|out"
       radio_property tickdirmode u , "{auto}|manual"
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -1578,22 +1578,22 @@ private:
                                                           Fl::event_y ()
                                                           - menu_dy ()));
               if (ax && ax.isa ("axes"))
                 {
                   axes::properties& ap =
                     dynamic_cast<axes::properties&> (ax.get_properties ());
 
                   // Control how fast to zoom when using scroll wheel.
-                  double Vwheel_zoom_speed = ap.get_mouse_wheel_zoom ();
+                  double wheel_zoom_speed = ap.get_mousewheelzoom ();
 
                   // Determine if we're zooming in or out.
                   const double factor =
-                    (Fl::event_dy () > 0) ? 1 / (1.0 - Vwheel_zoom_speed)
-                                          : 1.0 - Vwheel_zoom_speed;
+                    (Fl::event_dy () > 0) ? 1 / (1.0 - wheel_zoom_speed)
+                                          : 1.0 - wheel_zoom_speed;
 
                   // Get the point we're zooming about.
                   double x1, y1;
                   pixel2pos (ax, Fl::event_x (), Fl::event_y () - menu_dy (),
                              x1, y1);
 
                   ap.zoom_about_point ("both", x1, y1, factor, false);
                   mark_modified ();
