# HG changeset patch
# User jwe
# Date 1067581881 0
#      Fri Oct 31 06:31:21 2003 +0000
# Node ID 233512ebf15d3092fa1dafdfedf3e4370b27c8a9
# Parent  f60762fa234fb9456f2e06c64dda49f7bffad4dd
[project @ 2003-10-31 06:31:14 by jwe]

diff --git a/libcruft/misc/f77-fcn.h b/libcruft/misc/f77-fcn.h
--- a/libcruft/misc/f77-fcn.h
+++ b/libcruft/misc/f77-fcn.h
@@ -82,23 +82,23 @@ extern int f77_exception_encountered;
 #endif
 
 #if defined (F77_USES_CRAY_CALLING_CONVENTION)
 
 #include <fortran.h>
 #define F77_CHAR_ARG(x) octave_make_cray_ftn_ch_dsc (x, strlen (x))
 #define F77_CONST_CHAR_ARG(x) \
   octave_make_cray_const_ftn_ch_dsc (x, strlen (x))
-#define F77_CHAR_ARG2(x, l) octave_make_cray_fcd (x, l)
-#define F77_CONST_CHAR_ARG2(x, l) octave_make_cray_const_fcd (x, l)
+#define F77_CHAR_ARG2(x, l) octave_make_cray_ftn_ch_dsc (x, l)
+#define F77_CONST_CHAR_ARG2(x, l) octave_make_cray_const_ftn_ch_dsc (x, l)
 #define F77_CXX_STRING_ARG(x) \
   octave_make_cray_const_ftn_ch_dsc (x.c_str (), x.length ())
 #define F77_CHAR_ARG_LEN(l)
-#define F77_CHAR_ARG_DECL octave_cray_fcd
-#define F77_CONST_CHAR_ARG_DECL octave_cray_fcd
+#define F77_CHAR_ARG_DECL octave_cray_ftn_ch_dsc
+#define F77_CONST_CHAR_ARG_DECL octave_cray_ftn_ch_dsc
 #define F77_CHAR_ARG_LEN_DECL
 #define F77_RET_T int
 #define F77_RETURN(retval) return retval;
 
 /* XXX FIXME XXX -- these should work for SV1 or Y-MP systems but will
    need to be changed for others.  */
 
 typedef union
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,14 @@
 2003-10-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* file-ops.cc (file_ops::symlink): Cope with systems that expect
+	non-const args for symlink system call.
+	(file_ops::readlink): Likewise, for readlink.
+
 	* DASRT.cc (DASRT::integrate): Fix typo in Fortran function name.
 
 2003-10-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mach-info.h (oct_mach_info): Prefix enum elements with flt_fmt_.
 	Change all uses.
 
 2003-10-29  Petter Risholm  <risholm@stud.ntnu.no>
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -177,17 +177,24 @@ int
 file_ops::symlink (const std::string& old_name,
 		   const std::string& new_name, std::string& msg)
 {
   msg = std::string ();
 
   int status = -1;
 
 #if defined (HAVE_SYMLINK)
-  status = ::symlink (old_name.c_str (), new_name.c_str ());
+
+  OCTAVE_LOCAL_BUFFER (char, old_nm, old_name.length ());
+  OCTAVE_LOCAL_BUFFER (char, new_nm, new_name.length ());
+
+  strcpy (old_nm, old_name.c_str ());
+  strcpy (new_nm, new_name.c_str ());
+
+  status = ::symlink (old_nm, new_nm);
 
   if (status < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
 #else
   msg = NOT_SUPPORTED ("symlink");
@@ -211,17 +218,21 @@ file_ops::readlink (const std::string& p
 {
   int status = -1;
 
   msg = std::string ();
 
 #if defined (HAVE_READLINK)
   char buf[MAXPATHLEN+1];
 
-  status = ::readlink (path.c_str (), buf, MAXPATHLEN);
+  OCTAVE_LOCAL_BUFFER (char, p, path.length ());
+
+  strcpy (p, path.c_str ());
+
+  status = ::readlink (p, buf, MAXPATHLEN);
 
   if (status < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
   else
     {
