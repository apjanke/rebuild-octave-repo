# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234261325 -3600
#      Tue Feb 10 11:22:05 2009 +0100
# Node ID 02d4c764de61591a037c1953ee4fd58845e2ca0f
# Parent  010e15c7be9a3674365dc26baef89f20f024e395
fix typo in previous patch

diff --git a/src/DLD-FUNCTIONS/__pchip_deriv__.cc b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
--- a/src/DLD-FUNCTIONS/__pchip_deriv__.cc
+++ b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
@@ -16,19 +16,16 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-// Jaroslav Hajek, Feb 2008: handle row-wise derivatives,
-// use const pointers to avoid unnecessary copying.
-
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
@@ -80,17 +77,17 @@ Undocumented internal function.\n\
 	    }
 
           const float *yvec = ymat.data ();
 	  FloatMatrix dmat (nyr, nyc);
           float *dvec = dmat.fortran_vec ();
 
 	  octave_idx_type ierr;
           const octave_idx_type incfd = rows ? nyr : 1;
-          const octave_idx_type inc = rows ? 1 : nyc;
+          const octave_idx_type inc = rows ? 1 : nyr;
 
           for (octave_idx_type i = (rows ? nyr : nyc); i > 0; i--)
 	    {
               F77_FUNC (pchim, PCHIM) (nx, xvec.data (), 
                                        yvec, dvec, incfd, &ierr);
 
               yvec += inc;
               dvec += inc;
@@ -120,17 +117,17 @@ Undocumented internal function.\n\
 	    }
 
           const double *yvec = ymat.data ();
 	  Matrix dmat (nyr, nyc);
           double *dvec = dmat.fortran_vec ();
 
 	  octave_idx_type ierr;
           const octave_idx_type incfd = rows ? nyr : 1;
-          const octave_idx_type inc = rows ? 1 : nyc;
+          const octave_idx_type inc = rows ? 1 : nyr;
 
           for (octave_idx_type i = (rows ? nyr : nyc); i > 0; i--)
 	    {
               F77_FUNC (dpchim, DPCHIM) (nx, xvec.data (), 
                                          yvec, dvec, incfd, &ierr);
 
               yvec += inc;
               dvec += inc;
