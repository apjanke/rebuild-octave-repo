# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1322816578 18000
#      Fri Dec 02 04:02:58 2011 -0500
# Node ID 16158606112d6e5c5427bf429378bf726d6116e5
# Parent  f5bd61eb032f94059361c48f06bb0253fa1eea6a
avoid memory error in strptime

* oct-time.cc (octave_strptime::init): Allocate extra space for first
argument to C-library strptime function.

diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -31,16 +31,17 @@ along with Octave; see the file COPYING.
 #include <sys/types.h>
 #include <unistd.h>
 
 #include "strftime.h"
 
 #include "lo-error.h"
 #include "lo-math.h"
 #include "lo-utils.h"
+#include "oct-locbuf.h"
 #include "oct-time.h"
 
 octave_time::octave_time (const octave_base_tm& tm)
   : ot_unix_time (), ot_usec ()
 {
   struct tm t;
 
   t.tm_sec = tm.sec ();
@@ -261,17 +262,29 @@ octave_strptime::init (const std::string
   t.tm_gmtoff = 0;
 #endif
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
-  char *p = strsave (str.c_str ());
+  // FIXME -- the following kluge avoids a memory access problem with
+  // strptime in some versions of GNU libc.
+  // http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=650714
+
+  const char *pstr = str.c_str ();
+  size_t len = str.length ();
+  const int extra = 128;
+  OCTAVE_LOCAL_BUFFER (char, p, len + extra);
+  char *pp = p;
+  for (size_t i = 0; i < len; i++)
+    *pp++ = *pstr++;
+  for (size_t i = len; i < extra; i++)
+    *pp++ = 0;
 
   char *q = gnulib::strptime (p, fmt.c_str (), &t);
 
   // Fill in wday and yday, but only if mday is valid and the mon and year
   // are filled in, avoiding issues with mktime and invalid dates.
   if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != INT_MIN)
     {
       t.tm_isdst = -1;
@@ -284,16 +297,14 @@ octave_strptime::init (const std::string
   if (t.tm_year == INT_MIN)
     t.tm_year = 0;
 
   if (q)
     nchars = q - p + 1;
   else
     nchars = 0;
 
-  delete [] p;
-
   octave_base_tm::init (&t);
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   delete [] ps;
 #endif
 }
