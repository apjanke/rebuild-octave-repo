# HG changeset patch
# User jwe
# Date 1176145930 0
#      Mon Apr 09 19:12:10 2007 +0000
# Node ID 84f2d0253aea629c86d795ddb0655de37e78e76a
# Parent  184ab67c3bc10ae62f6aa5810d71ebef3eb0e201
[project @ 2007-04-09 19:12:10 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-09  Daniel J Sebald  <daniel.sebald@ieee.org>
+
+	* plot/stem.m: Fix typos in doc string.  Fix typo in call to
+	zeros.  Set markerfacecolor property in call to plot.
+
 2007-04-06  John W. Eaton  <jwe@octave.org>
 
 	* linear-algebra/norm.m: Use new __vnorm__ function for vector args.
 
 2007-04-06  Daniel J Sebald  <daniel.sebald@ieee.org>
 
 	* plot/stem.m: Use plot instead of a series of calls to line.
 
diff --git a/scripts/plot/stem.m b/scripts/plot/stem.m
--- a/scripts/plot/stem.m
+++ b/scripts/plot/stem.m
@@ -25,55 +25,55 @@
 ## @code{"o"}.
 ##
 ## For example,
 ## @example
 ## x = 1:10;
 ## stem (x);
 ## @end example
 ## @noindent
-## plots 10 stems with hights from 1 to 10;
+## plots 10 stems with heights from 1 to 10;
 ##
 ## @example
 ## x = 1:10;
 ## y = ones (1, length (x))*2.*x;
 ## stem (x, y);
 ## @end example
 ## @noindent
-## plots 10 stems with hights from 2 to 20;
+## plots 10 stems with heights from 2 to 20;
 ## 
 ## @example
 ## x = 1:10;
 ## y = ones (size (x))*2.*x;
 ## h = stem (x, y, "b");
 ## @end example
 ## @noindent
-## plots 10 bars with hights from 2 to 20
+## plots 10 bars with heights from 2 to 20
 ## (the color is blue, and @var{h} is a 2-by-10 array of handles in
 ## which the first row holds the line handles and the 
 ## the second row holds the marker handles);
 ##
 ## @example
 ## x = 1:10;
 ## y = ones (size (x))*2.*x;
 ## h = stem (x, y, "-.k");
 ## @end example
 ## @noindent
-## plots 10 stems with hights from 2 to 20
+## plots 10 stems with heights from 2 to 20
 ## (the color is black, line style is @code{"-."}, and @var{h} is a 2-by-10
 ## array of handles in which the first row holds the line handles and
 ## the second rows holds the marker handles);
 ##
 ## @example
 ## x = 1:10;
 ## y = ones (size (x))*2.*x;
 ## h = stem (x, y, "-.k.");
 ## @end example
 ## @noindent
-## plots 10 stems with hights from 2 to 20
+## plots 10 stems with heights from 2 to 20
 ## (the color is black, line style is @code{"-."} and the marker style
 ## is @code{"."}, and @var{h} is a 2-by-10 array of handles in which the
 ## first row holds the line handles and the second row holds the marker
 ## handles);
 ##
 ## @example
 ## x = 1:10;
 ## y = ones (size (x))*2.*x;
@@ -97,23 +97,30 @@
 function h = stem (varargin)
 
   if (nargin < 1 || nargin > 4)
     print_usage ();
   endif
 
   [x, y, dofill, lc, ls, mc, ms] = check_stem_arg (varargin{:});
 
+  if (dofill)
+    fc = mc;
+  else
+    fc = "none";
+  endif
+
   newplot ();
 
-  z = zeros (1, numel (x)));
+  z = zeros (1, numel (x));
   xt = x(:)';
   yt = y(:)';
   tmp = plot ([xt; xt], [z; yt], "color", lc, "linestyle", ls,
-	      x, y, "color", mc, "marker", ms, "linestyle", "");
+	      x, y, "color", mc, "marker", ms, "linestyle", "",
+	      "markerfacecolor", fc);
 
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
 
 function [x, y, dofill, lc, ls, mc, ms] = check_stem_arg (varargin)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-09  John W. Eaton  <jwe@octave.org>
+
+	* graphics.cc (line::line_properties::markeredgecolor,
+	line::line_properties::markerfacecolor): New properties.
+
 2007-04-06  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (F__vnorm__): New function.
 
 	* pt-fcn-handle.cc (tree_anon_fcn_handle::param_list, 
 	tree_anon_fcn_handle::cmd_list,	tree_anon_fcn_handle::ret_list,
 	tree_anon_fcn_handle::sym_tab): Delete.  Remove all uses.
 	(tree_anon_fcn_handle::fcn): New data member.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2399,16 +2399,18 @@ public:
 	ldata (Matrix ()),
 	udata (Matrix ()),
 	xldata (Matrix ()),
 	xudata (Matrix ()),
 	color (),
 	linestyle ("-"),
 	linewidth (0.5),
 	marker ("none"),
+	markeredgecolor ("auto"),
+	markerfacecolor ("none"),
 	markersize (1),
 	keylabel ("") { }
 
     ~line_properties (void) { }
 
     void set (const property_name& name, const octave_value& val)
     {
       bool modified = true;
@@ -2439,16 +2441,20 @@ public:
       else if (name.compare ("color"))
 	color = color_property (val);
       else if (name.compare ("linestyle"))
 	linestyle = val;
       else if (name.compare ("linewidth"))
 	linewidth = val;
       else if (name.compare ("marker"))
 	marker = val;
+      else if (name.compare ("markeredgecolor"))
+	markeredgecolor = val;
+      else if (name.compare ("markerfacecolor"))
+	markerfacecolor = val;
       else if (name.compare ("markersize"))
 	markersize = val;
       else if (name.compare ("keylabel"))
 	keylabel = val;
       else
 	{
 	  modified = false;
 	  warning ("set: invalid property `%s'", name.c_str ());
@@ -2472,16 +2478,18 @@ public:
       m.assign ("ldata", ldata);
       m.assign ("udata", udata);
       m.assign ("xldata", xldata);
       m.assign ("xudata", xudata);
       m.assign ("color", color);
       m.assign ("linestyle", linestyle);
       m.assign ("linewidth", linewidth);
       m.assign ("marker", marker);
+      m.assign ("markeredgecolor", markeredgecolor);
+      m.assign ("markerface", markerfacecolor);
       m.assign ("markersize", markersize);
       m.assign ("keylabel", keylabel);
 
       return m;
     }
 
     octave_value get (const property_name& name) const
     {
@@ -2512,16 +2520,20 @@ public:
       else if (name.compare ("color"))
 	retval = color;
       else if (name.compare ("linestyle"))
 	retval = linestyle;
       else if (name.compare ("linewidth"))
 	retval = linewidth;
       else if (name.compare ("marker"))
 	retval = marker;
+      else if (name.compare ("markeredgecolor"))
+	retval = markeredgecolor;
+      else if (name.compare ("markerfacecolor"))
+	retval = markerfacecolor;
       else if (name.compare ("markersize"))
 	retval = markersize;
       else if (name.compare ("keylabel"))
 	retval = keylabel;
       else
 	warning ("get: invalid property `%s'", name.c_str ());
 
       return retval;
@@ -2539,16 +2551,18 @@ public:
       m["ldata"] = Matrix ();
       m["udata"] = Matrix ();
       m["xldata"] = Matrix ();
       m["xudata"] = Matrix ();
       m["color"] = color_property ();
       m["linestyle"] = "-";
       m["linewidth"] = 0.5;
       m["marker"] = "none";
+      m["markeredgecolor"] = "auto";
+      m["markerfacecolor"] = "none";
       m["markersize"] = 1;
       m["keylabel"] = "";
 
       return m;
     }
 
   private:
     octave_value xdata;
@@ -2557,16 +2571,18 @@ public:
     octave_value ldata;
     octave_value udata;
     octave_value xldata;
     octave_value xudata;
     color_property color;
     octave_value linestyle;
     octave_value linewidth;
     octave_value marker;
+    octave_value markeredgecolor;
+    octave_value markerfacecolor;
     octave_value markersize;
     octave_value keylabel;
 
     static std::string go_name;
   };
 
   line_properties properties;
 
