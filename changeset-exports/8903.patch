# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1236077811 -3600
#      Tue Mar 03 11:56:51 2009 +0100
# Node ID c174a1fc3fde3daba0337f28440d17a8a637fe38
# Parent  5d5db7a347c66341940850f22e4a1b5f30ad21ae
reimplement polyvalm using Horner

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-03-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* polynomial/polyval.m: Implement using Horner scheme.
+
 2009-03-03  Ben Abbott <bpabbott@mac.com>
 
 	* plot/gnuplot_drawnow.m: Fix unintended shift of plot image for
 	the gnuplot postscript+eps terminal.
 
 2009-03-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pkg/pkg.m (fix_depends): Fix & simplify splitting the string.
diff --git a/scripts/polynomial/polyvalm.m b/scripts/polynomial/polyvalm.m
--- a/scripts/polynomial/polyvalm.m
+++ b/scripts/polynomial/polyvalm.m
@@ -1,10 +1,11 @@
 ## Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2002, 2004,
 ##               2005, 2006, 2007 John W. Eaton
+## Copyright (C) 2009 Jaroslav Hajek
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -43,27 +44,27 @@ function y = polyvalm (c, x)
   if (! (isvector (c) || isempty (c)))
     error ("polyvalm: first argument must be a vector");
   endif
 
   if (! issquare (x))
     error ("polyvalm: second argument must be a square matrix");
   endif
 
-  if (isempty (c))
-    y = [];
-    return;
-  endif
-
-  [v, d] = eig (x);
-
-  if (issymmetric (x))
-    y = v * diag (polyval (c, diag (d))) * v';
+  n = length (c);
+  if (n == 0)
+    y = zeros (rows (x), class (x));
   else
-    y = v * (diag (polyval (c, diag (d))) / v);
+    id = eye (rows (x), class (x));
+    y = c(1) * id;
+    for i = 2:n
+      y = y * x + c(i) * id;
+    endfor
   endif
 
 endfunction
 
-%!assert(isempty (polyvalm ([], [1, 2; 3, 4])));
+
+%!assert(! any (polyvalm ([], [1, 2; 3, 4]))(:));
+%!assert(polyvalm ([1, 2, 3, 4], [3, -4, 1; -2, 0, 2; -1, 4, -3]), [117, -124, 11; -70, 36, 38; -43, 92, -45])
 
 %!error polyvalm ([1, 1, 1], [1, 2; 3, 4; 5, 6]);
 
