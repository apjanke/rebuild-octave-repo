# HG changeset patch
# User Rik <rik@octave.org>
# Date 1511991460 28800
#      Wed Nov 29 13:37:40 2017 -0800
# Node ID 8edaf9c807790d25aa24d27fc0b636f55dca442c
# Parent  d3d38a443df8652cb2ea97c686e3014c6f547319
Fix legend placement for plotyy figures (bug #52547).

* legend.m: Determine location based on the closest axes object to the legend
object.  For plotyy figures with two axes objects, the left axes object is
closest for "west" legend locations, and the right axes object is closest for
"east" legend locations.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -488,47 +488,56 @@ function [hleg, hleg_obj, hplot, labels]
           location = "northeast";
         endif
         if (strcmp (orientation, "default"))
           orientation = "vertical";
         endif
         box = "on";
       endif
 
+      ## Use axis which is appropriate for legend location.  This is only
+      ## necessary for plotyy figures where there are two axes.
+      if (numel (ca) == 1)
+        cax = ca(1);
+      elseif (strfind (location, "east"))
+        cax = ca(2);
+      else
+        cax = ca(1);
+      endif
       ## Get axis size and fontsize in points.
       ## Rely on listener to handle conversion.
-      units = get (ca(1), "units");
+      units = get (cax, "units");
       unwind_protect
-        set (ca(1), "units", "points");
-        set (ca(1), "fontunits", "points");
+        set (cax, "units", "points");
+        set (cax, "fontunits", "points");
         if (isempty (hlegend) || ! isprop (hlegend, "unmodified_axes_position"))
-          unmodified_axes_position = get (ca(1), "position");
-          unmodified_axes_outerposition = get (ca(1), "outerposition");
+          unmodified_axes_position = get (cax, "position");
+          unmodified_axes_outerposition = get (cax, "outerposition");
         else
           unmodified_axes_position = get (hlegend, "unmodified_axes_position");
           unmodified_axes_outerposition = get (hlegend, ...
                                                "unmodified_axes_outerposition");
         endif
         ca_pos = unmodified_axes_position;
         ca_outpos = unmodified_axes_outerposition;
         tightinset = get (ca(1), "tightinset");
         for i = 2 : numel (ca)
           tightinset = max (tightinset, get (ca(i), "tightinset"));
         endfor
       unwind_protect_cleanup
-        set (ca(1), "units", units);
+        set (cax, "units", units);
       end_unwind_protect
 
       ## Padding between legend entries horizontally and vertically
       xpad = 2;
       ypad = 2;
 
       linelength = 15;
 
-      ## Create the axis first
+      ## Create the axes object first
       oldfig = get (0, "currentfigure");
       if (oldfig != fig)
         set (0, "currentfigure", fig);
       else
         oldfig = [];
       endif
       curaxes = get (fig, "currentaxes");
       unwind_protect
@@ -539,18 +548,18 @@ function [hleg, hleg_obj, hplot, labels]
         if (isempty (hlegend))
           addprops = true;
           hlegend = axes ("tag", "legend", "userdata", struct ("handle", ud),
                           "box", box,
                           "xtick", [], "ytick", [],
                           "xlim", [0, 1], "ylim", [0, 1],
                           "activepositionproperty", "position");
           ## Inherit properties from current axis
-          ## "fontunits" shoud be first because it affects interpretation
-          ## of "fontsize" property
+          ## "fontunits" should be first because it affects interpretation
+          ## of "fontsize" property.
           proplist = {"fontunits", "fontangle", "fontname", "fontsize", ...
                       "fontweight"};
           ca_props = get (ca(1), proplist);
           set (hlegend, proplist, ca_props);
           old_hplots = [];
         else
           addprops = false;
           axes (hlegend);
@@ -653,17 +662,17 @@ function [hleg, hleg_obj, hplot, labels]
         if (strcmp (orientation, "vertical"))
           lpos = [0, 0, num2 * xstep, num1 * ystep];
         else
           lpos = [0, 0, num1 * xstep, num2 * ystep];
         endif
 
         gnuplot = strcmp (get (fig, "__graphics_toolkit__"), "gnuplot");
         if (gnuplot)
-          ## Gnuplot places the key (legend) at edge of the figure window.
+          ## gnuplot places the key (legend) at edge of the figure window.
           ## OpenGL places the legend box at edge of the unmodified axes
           ## position.
           if (isempty (strfind (location, "east")))
             gnuplot_offset = unmodified_axes_outerposition(1) ...
                            + unmodified_axes_outerposition(3) ...
                            - unmodified_axes_position(1) ...
                            - unmodified_axes_position(3);
           else
@@ -674,19 +683,19 @@ function [hleg, hleg_obj, hplot, labels]
           ## This implies that a change in fontsize should trigger a listener
           ## to update the legend.  The "2" was determined using a long legend
           ## key in the absence of any subplots.
           gnuplot_offset -= 2 * fontsize;
         else
           gnuplot_offset = 0;
         endif
 
-        ## For legend's outside the associated axes postion,
-        ## align their edge to the unmodified_axes_outerpostion,
-        ## and adjust the axes postion accordingly.
+        ## For legend's outside the associated axes position,
+        ## align their edge to the unmodified_axes_outerposition,
+        ## and adjust the axes position accordingly.
         switch (location)
           case "north"
             if (outside)
               lpos = [ca_pos(1) + (ca_pos(3) - lpos(3)) / 2, ...
                       ca_outpos(2) + ca_outpos(4) - lpos(4) - ypad, lpos(3), ...
                       lpos(4)];
 
               new_pos = [ca_pos(1), ca_pos(2), ca_pos(3), ca_pos(4) - lpos(4)];
@@ -911,17 +920,17 @@ function [hleg, hleg_obj, hplot, labels]
             if (xk > num1)
               xk = 0;
               yk += 1;
             endif
           endif
         endfor
 
         ## Add an invisible text object to original axis
-        ## that when it is destroyed will remove the legend
+        ## that, when it is destroyed, will remove the legend.
         props = {"parent", ca(1), "tag", "deletelegend", ...
                  "handlevisibility", "off", "visible", "off", ...
                  "xliminclude", "off", "yliminclude", "off"};
         t1 = findall (ca(1), "tag", "deletelegend", "type", "text");
         if (isempty (t1))
           t1 = text (0, 0, "", props{:});
           set (t1, "deletefcn", {@deletelegend1, hlegend});
         endif
@@ -941,19 +950,19 @@ function [hleg, hleg_obj, hplot, labels]
         ## "outside" the plot and create a listener to resize axis to original
         ## size if the legend is deleted, hidden, or shown.
         if (outside)
           for i = 1 : numel (ca)
             units = get (ca(i), "units");
             unwind_protect
               set (ca(i), "units", "points");
               if (gnuplot && numel (ca) == 1)
-                ## Let Gnuplot handle the positioning of the keybox.
+                ## Let gnuplot handle the positioning of the keybox.
                 ## This violates strict Matlab compatibility, but reliably
-                ## renders an esthetic result.
+                ## renders an aesthetic result.
                 set (ca(i), "position",  unmodified_axes_position);
                 set (ca(i), "activepositionproperty", "outerposition");
               else
                 ## numel (ca) > 1 for axes overlays (like plotyy)
                 set (ca(i), "position", new_pos);
               endif
             unwind_protect_cleanup
               set (ca(i), "units", units);
