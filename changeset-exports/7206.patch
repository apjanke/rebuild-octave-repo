# HG changeset patch
# User jwe
# Date 1196203220 0
#      Tue Nov 27 22:40:20 2007 +0000
# Node ID 6e4ceeeb19404e6632c4b7395352862b48701642
# Parent  f3d508351e49a7f673bc81ea1c36b69540291343
[project @ 2007-11-27 22:40:20 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2007-11-27  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m: Add nomirror to "set ytics" and "set
+	y2tics" in the case of a plotyy plot.
+	* plot/plotyy.m: ensure the position property is set correct for
+	the second axis, by setting it after the plot itself. In the case
+	of a plot that returns multiple handles, base the color selection
+	on the first.
+
 2007-11-27  Kai Habel  <kai.habel@gmx.de>
 
 	* plot/__go_draw_axes__.m: Set quadrilateral color according to
 	z-value of vertex 'c3'.
 
 2007-11-27  John W. Eaton  <jwe@octave.org>
 
 	* image/image.m: Allow nargin == 0 case to work again.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -32,22 +32,24 @@ function __go_draw_axes__ (h, plot_strea
       = compare_versions (__gnuplot_version__ (), "4.0", ">");
 
     ## Set axis properties here?
     pos = [0, 0, 1, 1];
     if (! isempty (axis_obj.outerposition))
       pos = axis_obj.outerposition;
     endif
 
+    ymirror = true;
     if (! isempty (axis_obj.position))
       pos = axis_obj.position;
       fprintf (plot_stream, "set tmargin 3;\n");
       fprintf (plot_stream, "set bmargin 3;\n");
       fprintf (plot_stream, "set lmargin 10;\n");
       fprintf (plot_stream, "set rmargin 10;\n");
+      ymirror = false;
     endif
 
     if (! strcmp (axis_obj.__colorbar__, "none"))
       [pos, cbox_orient, cbox_size, cbox_origin, cbox_mirror] = ...
 	  gnuplot_postion_colorbox (pos, axis_obj.__colorbar__);
     endif
 
     fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
@@ -204,17 +206,17 @@ function __go_draw_axes__ (h, plot_strea
 
     if (strcmpi (axis_obj.zminorgrid, "on"))
       fputs (plot_stream, "set mztics 5;\n");
       fputs (plot_stream, "set grid mztics;\n");
     else
       fputs (plot_stream, "set grid nomztics;\n");
     endif
 
-    do_tics (axis_obj, plot_stream);
+    do_tics (axis_obj, plot_stream, ymirror);
 
     xlogscale = strcmpi (axis_obj.xscale, "log");
     if (xlogscale)
       fprintf (plot_stream, "set logscale %s;\n", xaxisloc);
     else
       fprintf (plot_stream, "unset logscale %s;\n", xaxisloc);
     endif
 
@@ -1527,80 +1529,92 @@ function __gnuplot_write_data__ (plot_st
 	endfor
       endif
     endif
   endif
   fputs (plot_stream, "e\n");
 
 endfunction
 
-function do_tics (obj, plot_stream)
+function do_tics (obj, plot_stream, ymirror)
   if (strcmpi (obj.xaxislocation, "top"))
     do_tics_1 (obj.xtickmode, obj.xtick, obj.xticklabelmode, obj.xticklabel,
-	       obj.xcolor, "x2", plot_stream);
+	       obj.xcolor, "x2", plot_stream, true);
     do_tics_1 ("manual", [], obj.xticklabelmode, obj.xticklabel,
-	       obj.xcolor, "x", plot_stream);
+	       obj.xcolor, "x", plot_stream, true);
   else
     do_tics_1 (obj.xtickmode, obj.xtick, obj.xticklabelmode, obj.xticklabel,
-	       obj.xcolor, "x", plot_stream);
+	       obj.xcolor, "x", plot_stream, true);
     do_tics_1 ("manual", [], obj.xticklabelmode, obj.xticklabel,
-	       obj.xcolor, "x2", plot_stream);
+	       obj.xcolor, "x2", plot_stream, true);
   endif
   if (strcmpi (obj.yaxislocation, "right"))
     do_tics_1 (obj.ytickmode, obj.ytick, obj.yticklabelmode, obj.yticklabel,
-	       obj.ycolor, "y2", plot_stream);
+	       obj.ycolor, "y2", plot_stream, ymirror);
     do_tics_1 ("manual", [], obj.yticklabelmode, obj.yticklabel,
-	       obj.ycolor, "y", plot_stream);
+	       obj.ycolor, "y", plot_stream, ymirror);
   else
     do_tics_1 (obj.ytickmode, obj.ytick, obj.yticklabelmode, obj.yticklabel,
-	       obj.ycolor, "y", plot_stream);
+	       obj.ycolor, "y", plot_stream, ymirror);
     do_tics_1 ("manual", [], obj.yticklabelmode, obj.yticklabel,
-	       obj.ycolor, "y2", plot_stream);
+	       obj.ycolor, "y2", plot_stream, ymirror);
   endif
   do_tics_1 (obj.ztickmode, obj.ztick, obj.zticklabelmode, obj.zticklabel,
-	     obj.zcolor, "z", plot_stream);
+	     obj.zcolor, "z", plot_stream, true);
 endfunction
 
-function do_tics_1 (ticmode, tics, labelmode, labels, color, ax, plot_stream)
+function do_tics_1 (ticmode, tics, labelmode, labels, color, ax, plot_stream, mirror)
   colorspec = get_text_colorspec (color);
   if (strcmpi (ticmode, "manual"))
     if (isempty (tics))
       fprintf (plot_stream, "unset %stics;\n", ax);
     elseif (strcmpi (labelmode, "manual") && ! isempty (labels))
       if (ischar (labels))
 	labels = cellstr (labels);
       endif
       if (iscellstr (labels))
 	k = 1;
 	ntics = numel (tics);
 	nlabels = numel (labels);
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
-	fprintf (plot_stream, "set %stics %s (", ax, colorspec);
+	if (mirror)
+	  fprintf (plot_stream, "set %stics %s (", ax, colorspec);
+	else
+	  fprintf (plot_stream, "set %stics nomirror %s (", ax, colorspec);
+	endif
 	for i = 1:ntics
 	  fprintf (plot_stream, " \"%s\" %g", labels(k++), tics(i))
 	  if (i < ntics)
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
 	endfor
 	fputs (plot_stream, ");\n");
       else
 	error ("unsupported type of ticklabel");
       endif
     else
       fprintf (plot_stream, "set format %s \"%%g\";\n", ax);
-      fprintf (plot_stream, "set %stics (", ax);
+      if (mirror)
+	fprintf (plot_stream, "set %stics (", ax);
+      else
+	fprintf (plot_stream, "set %stics nomirror (", ax);
+      endif
       fprintf (plot_stream, " %g,", tics(1:end-1));
       fprintf (plot_stream, " %g);\n", tics(end));
     endif
   else
     fprintf (plot_stream, "set format %s \"%%g\";\n", ax);
-    fprintf (plot_stream, "set %stics %s;\n", ax, colorspec);
+    if (mirror)
+      fprintf (plot_stream, "set %stics %s;\n", ax, colorspec);
+    else
+      fprintf (plot_stream, "set %stics nomirror %s;\n", ax, colorspec);
+    endif
   endif
 endfunction
 
 function colorspec = get_text_colorspec (color)
   persistent have_newer_gnuplot ...
       = compare_versions (__gnuplot_version__ (), "4.0", ">");
 
   if (have_newer_gnuplot)
diff --git a/scripts/plot/plotyy.m b/scripts/plot/plotyy.m
--- a/scripts/plot/plotyy.m
+++ b/scripts/plot/plotyy.m
@@ -97,23 +97,24 @@ function [ax, h1, h2] = __plotyy__ (ax, 
     fun2 = varargin{2};
   else
     fun2 = fun1;
   endif
 
   xlim = [min([x1(:); x2(:)]), max([x1(:); x2(:)])];
 
   h1 = feval (fun1, x1, y1);
-  set (ax(1), "ycolor", get (h1, "color"));
+  set (ax(1), "ycolor", get (h1(1), "color"));
   set (ax(1), "position", get (ax(1), "outerposition"));
   set (ax(1), "xlim", xlim);
 
   cf = gcf ();
   set (cf, "nextplot", "add");
-  ax(2) = axes ("position", get (ax(1), "position"));
+  ax(2) = axes ();
   colors = get (ax(1), "colororder");
   set (ax(2), "colororder", [colors(2:end,:); colors(1,:)]);
 
   h2 = feval (fun2, x2, y2);
-  set (ax(2), "ycolor", get (h2, "color"));
+  set (ax(2), "yaxislocation", "right");
+  set (ax(2), "ycolor", get (h2(1), "color"));
+  set (ax(2), "position", get (ax(1), "outerposition"));
   set (ax(2), "xlim", xlim);
-  set (ax(2), "yaxislocation", "right");
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,17 +1,20 @@
 2007-11-27  John W. Eaton  <jwe@octave.org>
 
 	* pt-bp.cc (tree_breakpoint::visit_decl_command): Also check line
 	number of cmd.
 	* pt-decl.cc (tree_global_command::eval, tree_static_command::eval):
 	Insert MAYBE_DO_BREAKPOINT here.
 
 	* error.cc (Fwarning): If setting state "all" to "error", leave
-	Octave:matlab-incompatible warning state unchanged.
+	Octave:matlab-incompatible and Octave:single-quote-string warning
+	states unchanged.
+	(warning_enabled): Allow individual warning states to override
+	"warning error all".
 
 	* octave.cc (execute_eval_option_code, execute_command_line_file):
 	Handle interrupts.
 	* toplev.cc (recover_from_exception): Now extern.
 	* toplev.h (recover_from_exception): Provide decl.
 
 	* pt-idx.cc (tree_index_expression::lvalue): Treat object == []
 	the same as undefined.
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -615,17 +615,22 @@ warning_enabled (const std::string& id)
   else if (all_state == 1)
     {
       if (id_state == 0 || id_state == 2)
 	retval = id_state;
       else
 	retval = all_state;
     }
   else if (all_state == 2)
-    retval = 2;
+    {
+      if (id_state == 0)
+	retval= id_state;
+      else
+	retval = all_state;
+    }
 
   return retval;
 }
 
 static void
 warning_1 (const char *id, const char *fmt, va_list args)
 {
   int warn_opt = warning_enabled (id);
@@ -1083,34 +1088,40 @@ warning named by @var{id} is handled as 
 		  // Since internal Octave functions are not
 		  // compatible, turning all warnings into errors
 		  // should leave the state of
 		  // Octave:matlab-incompatible alone.
 
 		  if (arg1 == "error"
 		      && warning_options.contains ("identifier"))
 		    {
+		      octave_idx_type n = 1;
+
 		      Cell tid = warning_options.contents ("identifier");
 		      Cell tst = warning_options.contents ("state");
 
 		      for (octave_idx_type i = 0; i < tid.numel (); i++)
 			{
 			  octave_value vid = tid(i);
 
-			  if (vid.is_string ()
-			      && (vid.string_value ()
-				  == "Octave:matlab-incompatible"))
+			  if (vid.is_string ())
 			    {
-			      id.resize (dim_vector (1, 2));
-			      st.resize (dim_vector (1, 2));
+			      std::string key = vid.string_value ();
 
-			      id(1) = tid(i);
-			      st(1) = tst(i);
+			      if (key == "Octave:matlab-incompatible"
+				  || key == "Octave:single-quote-string")
+				{
+				  id.resize (dim_vector (1, n+1));
+				  st.resize (dim_vector (1, n+1));
 
-			      break;
+				  id(n) = tid(i);
+				  st(n) = tst(i);
+
+				  n++;
+				}
 			    }
 			}
 		    }
 
 		  tmp.assign ("identifier", id);
 		  tmp.assign ("state", st);
 
 		  warning_options = tmp;
