# HG changeset patch
# User jwe
# Date 848433237 0
#      Tue Nov 19 19:53:57 1996 +0000
# Node ID caa21ce81913ed84d123354b49f9d7fe40bd5916
# Parent  c0770352f56293b6fcc63a734dfb28b949238569
[project @ 1996-11-19 19:53:55 by jwe]

diff --git a/doc/interpreter/bugs.texi b/doc/interpreter/bugs.texi
--- a/doc/interpreter/bugs.texi
+++ b/doc/interpreter/bugs.texi
@@ -52,23 +52,16 @@ Another possible workaround is to use th
 @example
 page_screen_output = "false"
 @end example
 
 @noindent
 to turn the pager off.
 
 @item
-Control-C doesn't work properly in the pager on DEC Alpha systems
-running OSF/1 3.0.
-
-This appears to be a bug in the OSF/1 3.0 Bourne shell.  The problem
-doesn't appear on systems running OSF/1 1.3.
-
-@item
 If you get messages like
 
 @example
 Input line too long
 @end example
 
 when trying to plot many lines on one graph, you have probably generated
 a plot command that is too larger for @code{gnuplot}'s fixed-length
@@ -113,19 +106,16 @@ recompiling gnuplot.
 @example
 #define MAX_LINE_LEN 32768  /* originally 1024 */
 #define MAX_TOKENS 8192     /* originally 400 */
 @end example  
 
 Of course, this doesn't really fix the problem, but it does make it
 much less likely that you will run into trouble unless you are putting
 a very large number of lines on a given plot.
-
-@item
-String handling could use some work.
 @end itemize
 
 A list of ideas for future enhancements is distributed with Octave.  See
 the file @file{PROJECTS} in the top level directory in the source
 distribution.
 
 @node Reporting Bugs, Bug Criteria, Actual Bugs, Trouble
 @appendixsec Reporting Bugs
diff --git a/doc/interpreter/emacs.texi b/doc/interpreter/emacs.texi
--- a/doc/interpreter/emacs.texi
+++ b/doc/interpreter/emacs.texi
@@ -39,19 +39,19 @@ or suggestions on using Emacs with Octav
 
 If you are lucky, your sysadmins have already arranged everything so
 that Emacs automatically goes into Octave mode whenever you visit an
 Octave code file as characterized by its extension @file{.m}.  If not,
 proceed as follows.
 
 @enumerate
 @item
-Make sure that the file @file{octave.el} (or even better, its
-byte-compiled version @file{octave.elc}) from the Octave distribution is
-somewhere in your load-path.
+Make sure that the file @file{octave.el} (or better, its byte-compiled
+version @file{octave.elc}) from the Octave distribution is somewhere in
+your load-path.
 
 @quotation
 @strong{Note:} The current version of @file{octave.el} was developed,
 tested and byte-compiled under GNU Emacs 19.31.  It may not work under
 other Emacs versions, in particular under XEmacs.
 @end quotation
 
 @item
@@ -451,19 +451,19 @@ Otherwise, @emph{nothing} will work, bec
 when Octave is waiting for input, or done sending output.
 @end quotation
 
 @node Using the Emacs Info Reader for Octave,  , Running Octave From Within Emacs, Emacs
 @section Using the Emacs Info Reader for Octave
 
 You can also set up the Emacs Info reader for dealing with the results
 of Octave's @samp{help -i}.  For this, the package @file{gnuserv} needs
-to be installed, which unfortunately still does not come with GNU Emacs
-(it does with XEmacs).  It can be retrieved from any GNU Emacs Lisp Code
-Directory archive, e.g.@:
+to be installed.  The @file{gnuserv} package is not distributed with GNU
+Emacs, but it can be retrieved from any GNU Emacs Lisp Code Directory
+archive, e.g.@:
 @file{ftp://ftp.cis.ohio-state.edu/pub/gnu/emacs/elisp-archive},
 in the @file{packages} subdirectory.  There is also a newer version
 around (use archie to look for @file{gnuserv-2.1alpha.tar.gz}).
 
 If @file{gnuserv} is installed, add the lines
 @lisp
 (autoload 'octave-help "octave" nil t)
 (require 'gnuserv)
@@ -475,15 +475,15 @@ to your @file{.emacs} file.
 You can use either `plain' Emacs Info or the function @code{octave-help}
 as your Octave info reader (for @samp{help -i}).  In the former case,
 set the Octave variable @code{INFO_PROGRAM} to @code{"info-emacs-info"}.
 The latter is perhaps more attractive because it allows to look up keys
 in the indices of @emph{several} info files related to Octave (provided
 that the Emacs variable @code{octave-help-files} is set correctly).  In
 this case, set @code{INFO_PROGRAM} to @code{"info-emacs-octave-help"}.
 
-If you use Octave from within Emacs, these settings are best done in the
-@file{~/.emacs_octave} startup file (or the file pointed to by the Emacs
-variable @code{inferior-octave-startup-file}).
+If you use Octave from within Emacs, it is probably best to put these
+settings in the @file{~/.emacs_octave} startup file (or in the file
+named by the Emacs variable @code{inferior-octave-startup-file}).
 
 @c Local Variables:
 @c TeX-command-default: "Texinfo"
 @c End:
diff --git a/doc/interpreter/gnuinfo.texi b/doc/interpreter/gnuinfo.texi
--- a/doc/interpreter/gnuinfo.texi
+++ b/doc/interpreter/gnuinfo.texi
@@ -563,40 +563,40 @@ that window, the number of screen lines 
 and the percentage of text that is above the top of the window.  It can
 also tell you if the indirect tags table for this info file needs to be
 updated, and whether or not the info file was compressed when stored on
 disk.
 
 Here is a sample mode line for a window containing an uncompressed file
 named @file{dir}, showing the node @samp{Top}.
 
-@example
------Info: (dir)Top, 40 lines --Top---------------------------------------
+@smallexample
+-----Info: (dir)Top, 40 lines --Top------------------------------------
             ^^   ^   ^^^        ^^
           (file)Node #lines    where
-@end example
+@end smallexample
 
 When a node comes from a file which is compressed on disk, this is
 indicated in the mode line with two small @samp{z}'s.  In addition, if
 the info file containing the node has been split into subfiles, the name
 of the subfile containing the node appears in the modeline as well:
 
-@example
---zz-Info: (emacs)Top, 291 lines --Top-- Subfile: emacs-1.Z---------------
-@end example 
+@smallexample
+--zz-Info: (emacs)Top, 291 lines --Top-- Subfile: emacs-1.Z------------
+@end smallexample 
 
 When Info makes a node internally, such that there is no corresponding
 info file on disk, the name of the node is surrounded by asterisks
 (@samp{*}).  The name itself tells you what the contents of the window
 are; the sample mode line below shows an internally constructed node
 showing possible completions:
 
-@example
------Info: *Completions*, 7 lines --All-----------------------------------
-@end example
+@smallexample
+-----Info: *Completions*, 7 lines --All--------------------------------
+@end smallexample
 
 @node Basic Windows, The Echo Area, The Mode Line, Window Commands
 @appendixsubsec Window Commands
 
 It can be convenient to view more than one node at a time.  To allow
 this, Info can display more than one @dfn{window}.  Each window has its
 own mode line (@pxref{The Mode Line}) and history of nodes viewed in that
 window (@pxref{Node Commands, , @code{history-node}}).
diff --git a/doc/interpreter/gpl.texi b/doc/interpreter/gpl.texi
--- a/doc/interpreter/gpl.texi
+++ b/doc/interpreter/gpl.texi
@@ -351,29 +351,31 @@ the Free Software Foundation; either ver
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
-Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+02111-1307, USA.
 @end smallexample
 
 Also add information on how to contact you by electronic and paper mail.
 
 If the program is interactive, make it output a short notice like this
 when it starts in an interactive mode:
 
 @smallexample
 Gnomovision version 69, Copyright (C) 19@var{yy} @var{name of author}
-Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
-This is free software, and you are welcome to redistribute it
-under certain conditions; type `show c' for details.
+Gnomovision comes with ABSOLUTELY NO WARRANTY; for details
+type `show w'.  This is free software, and you are welcome
+to redistribute it under certain conditions; type `show c'
+for details.
 @end smallexample
 
 The hypothetical commands @samp{show w} and @samp{show c} should show
 the appropriate parts of the General Public License.  Of course, the
 commands you use may be called something other than @samp{show w} and
 @samp{show c}; they could even be mouse-clicks or menu items---whatever
 suits your program.
 
diff --git a/doc/interpreter/install.texi b/doc/interpreter/install.texi
--- a/doc/interpreter/install.texi
+++ b/doc/interpreter/install.texi
@@ -13,18 +13,18 @@
 
 Here is the procedure for installing Octave from scratch on a Unix
 system.  For instructions on how to install the binary distributions of
 Octave, see @ref{Binary Distributions}.
 
 @itemize @bullet
 @item
 Run the shell script @file{configure}.  This will determine the features
-your system has (or doesn't have) and create a file named Makefile from
-each of the files named Makefile.in.
+your system has (or doesn't have) and create a file named
+@file{Makefile} from each of the files named @file{Makefile.in}.
 
 Here is a summary of the configure options that are most frequently used
 when building Octave:
 
 @table @code
 @item --prefix=@var{prefix}
 Install Octave in subdirectories below @var{prefix}.  The default value
 of @var{prefix} is @file{/usr/local}.
@@ -43,45 +43,46 @@ working port of DLD.
 @item --enable-lite-kernel
 Compile smaller kernel.  This currently requires DLD so that Octave can
 load functions at run time that are not loaded at compile time.
 
 @item --help
 Print a summary of the options recognized by the configure script.
 @end table
 
-See the file INSTALL for more information about the command line options
-used by configure.  That file also contains instructions for compiling
-in a directory other than where the source is located.
+See the file @file{INSTALL} for more information about the command line
+options used by configure.  That file also contains instructions for
+compiling in a directory other than where the source is located.
 
 @item
 Run make.
 
 You will need a recent version of GNU make.  Modifying Octave's
-Makefiles to work with other make programs is probably not worth
+makefiles to work with other make programs is probably not worth
 your time.  We recommend you get and compile GNU make instead.
 
 For plotting, you will need to have gnuplot installed on your system.
 Gnuplot is a command-driven interactive function plotting program.
 Gnuplot is copyrighted, but freely distributable.  The `gnu' in gnuplot
 is a coincidence---it is not related to the GNU project or the FSF in
 any but the most peripheral sense.
 
 For version @value{VERSION}, you must have the GNU C++ compiler (gcc)
-version 2.6.3 or later to compile Octave.  You will also need version
-2.6.1 of the GNU C++ class library (libg++).  If you plan to modify the
-parser you will also need GNU bison and fles.  If you modify the
-documentation, you will need GNU Texinfo, along with the patch for the
-makeinfo program that is distributed with Octave.
+version 2.7.2 or later to compile Octave.  You will also need version
+2.7.1 or 2.7.2 of the GNU C++ class library (libg++).  If you plan to
+modify the parser you will also need GNU bison and fles.  If you modify
+the documentation, you will need GNU Texinfo, along with the patch for
+the makeinfo program that is distributed with Octave.
 
 GNU make, gcc, and libg++, gnuplot, bison, flex, and Texinfo are all
 available from many anonymous ftp archives.  The primary site is
 prep.ai.mit.edu, but it is often very busy.  A list of sites that mirror
 the software on prep is available by anonymous ftp from prep.ai.mit.edu
-in the file /pub/gnu/GNUinfo/FTP, or by fingering fsf@@prep.ai.mit.edu.
+in the file @file{/pub/gnu/GNUinfo/FTP}, or by fingering
+fsf@@prep.ai.mit.edu.
 
 If you don't have a Fortran compiler, or if your Fortran compiler
 doesn't work like the traditional Unix f77, you will need to have the
 Fortran to C translator f2c.  You can get f2c from any
 number of anonymous ftp archives.  The most recent version of f2c
 is always available from netlib.att.com.
 
 On an otherwise idle SPARCstation II, it will take somewhere between 60
@@ -164,21 +165,16 @@ Image files that are distributed with Oc
 @appendixsec Installation Problems
 	
 This section contains a list of problems (and some apparent problems
 that don't really mean anything is wrong) that may show up during
 installation of Octave.
 
 @itemize @bullet
 @item
-If @code{configure} fails when trying to create its output files, you
-may have found a limitation in the version of @code{sed} on your
-system.  Using GNU @code{sed} avoids the problem.
-
-@item
 On some SCO systems, @code{info} fails to compile if
 @code{HAVE_TERMIOS_H} is defined int @file{config.h}.  Simply removing
 the definition from @file{info/config.h} should allow it to compile.
 
 @item
 If @code{configure} finds @code{dlopen}, @code{dlsym}, @code{dlclose},
 and @code{dlerror}, but not the header file @file{dlfcn.h}, you need to
 find the source for the header file and install it in the directory
@@ -217,53 +213,34 @@ been done yet.
 There is a bug with the makeinfo program that is distributed with
 texinfo-3.1 that causes the indices in Octave's on-line manual to be
 generated incorrectly.  If you need to recreate the on-line
 documentation, you should get the makeinfo program that is distributed
 with texinfo-3.1 and apply the patch for makeinfo that is distributed
 with Octave.  See the file MAKEINFO.PATCH for more details.
 
 @item
-If you don't have NPSOL but you still want to be able to solve NLPs, or
-if you don't have QPSOL but you still want to solve QPs, you'll need to
-find replacements or order them from Stanford.  If you know of a freely
-redistributable replacement, please let us know---we might be interested
-in distributing it with Octave.
-
-You can get more information about NPSOL and QPSOL from
-
-@quotation
-Stanford Business Sofrtware, Inc.@*
-2680 Bayshore Parkway, Suite 304@*
-Mountain View, CA 94043@*
-Tel: (415) 962-8719@*
-Fax: (415) 962-1869
-@end quotation
-
-Octave may soon support FSQP, an NLP solver from Andre Tits
-(andre@@src.umd.edu) of the University of Maryland.  FSQP is available
-free of charge to academic sites, but can not be redistributed to third
-parties.
-
-@item
 Some of the Fortran subroutines may fail to compile with older versions
 of the Sun Fortran compiler.  If you get errors like
 
-@example
+@smallexample
 zgemm.f:
 	zgemm:
 warning: unexpected parent of complex expression subtree
-zgemm.f, line 245: warning: unexpected parent of complex expression subtree
+zgemm.f, line 245: warning: unexpected parent of complex
+  expression subtree
 warning: unexpected parent of complex expression subtree
-zgemm.f, line 304: warning: unexpected parent of complex expression subtree
+zgemm.f, line 304: warning: unexpected parent of complex
+  expression subtree
 warning: unexpected parent of complex expression subtree
-zgemm.f, line 327: warning: unexpected parent of complex expression subtree
+zgemm.f, line 327: warning: unexpected parent of complex
+  expression subtree
 pcc_binval: missing IR_CONV in complex op
 make[2]: *** [zgemm.o] Error 1
-@end example
+@end smallexample
 
 @noindent
 when compiling the Fortran subroutines in the @file{libcruft}
 subdirectory, you should either upgrade your compiler or try compiling
 with optimization turned off.
 
 @item
 On NeXT systems, if you get errors like this:
@@ -302,119 +279,61 @@ which are part of @file{libposix.a}.  Un
 .constructors_used
 _objc_msgSend
 _NXGetDefaultValue
 _NXRegisterDefaults
 .objc_class_name_NXStringTable
 .objc_class_name_NXBundle
 @end example
 
-One kludge around this problem is to extract @file{termios.o} from
+One kluge around this problem is to extract @file{termios.o} from
 @file{libposix.a}, put it in Octave's @file{src} directory, and add it
-to the list of files to link together in the Makefile.  Suggestions for
+to the list of files to link together in the makefile.  Suggestions for
 better ways to solve this problem are welcome!
 
 @item
-With g++ 2.6.3 (and possibly other 2.6.x versions) on some Intel x86
-systems, compiling @file{Array-d.cc} fails with the messages like
-
-@example
-as: /tmp/cc005254.s:4057: Local symbol LBB103 never defined.
-as: /tmp/cc005254.s:4057: Local symbol LBE103 never defined.
-@end example
-
-@noindent
-A possible workaround for this is to compile without @code{-g}.
-
-@item
 If Octave crashes immediately with a floating point exception, it is
 likely that it is failing to initialize the IEEE floating point values
 for infinity and NaN.
 
 If your system actually does support IEEE arithmetic, you should be able
 to fix this problem by modifying the function @code{octave_ieee_init} in
-the file @file{sysdep.cc} to correctly initialize Octave's internal
+the file @file{lo-ieee.cc} to correctly initialize Octave's internal
 infinity and NaN variables.
 
 If your system does not support IEEE arithmetic but Octave's configure
 script incorrectly determined that it does, you can work around the
 problem by editing the file @file{config.h} to not define
 @code{HAVE_ISINF}, @code{HAVE_FINITE}, and @code{HAVE_ISNAN}.
 
 In any case, please report this as a bug since it might be possible to
 modify Octave's configuration script to automatically determine the
 proper thing to do.
 
 @item
-Using the -O flag with old versions of the Sun Fortran compiler
-apparently prevents if from compiling some of the Fortran subroutines
-that Octave uses.  The workaround is to not use -O for those
-subroutines.
-
-@ignore
-@c These next two items should no longer be problems, since g++ and
-@c libg++ use a different method for installing an appropriate set of
-@c header files.
-@item
-Problems with finite and isinf on systems that don't have @code{isinf()}
-but do have @code{finite()}.
+If you don't have NPSOL but you still want to be able to solve NLPs, or
+if you don't have QPSOL but you still want to solve QPs, you'll need to
+find replacements or order them from Stanford.  If you know of a freely
+redistributable replacement, please let us know---we might be interested
+in distributing it with Octave.
 
-The copy of @file{math.h} supplied with libg++ version 2.3 (and possibly
-other versions as well) declares @code{finite()} as
-
-@example
-double finite (double);
-@end example
-
-@noindent
-even though some (many? all?) systems declare it as
-
-@example
-int finite (double);
-@end example
-
-If the copy of @file{math.h} from libg++ was installed, you should edit
-it so that the libg++ declaration of @samp{finite()} matches the
-system's.
+You can get more information about NPSOL and QPSOL from
 
-@item
-Problems compiling octave.cc on RS/6000 (and possibly other)
-systems:
-
-If octave.cc fails to compile due to parse errors in system include
-files and undeclared subroutines like `gethostname' and `endpwent',
-it is probably because not all of the libg++ include files have been
-installed.  This appears to be a problem with libg++ version 2.3.
-Here's a fix:
-
-Apply the following patch to @file{libg++/config/rs6000.mh} and re-run
-make install for libg++.
+@quotation
+Stanford Business Sofrtware, Inc.@*
+2680 Bayshore Parkway, Suite 304@*
+Mountain View, CA 94043@*
+Tel: (415) 962-8719@*
+Fax: (415) 962-1869
+@end quotation
 
-@example
-*** rs6000.mh~  Mon Aug 17 19:18:44 1992
---- rs6000.mh   Mon Dec 28 23:54:57 1992
-***************
-*** 3,6 ****
-  # /usr/include/unistd.h has write(int, char*, unsigned) instead
-  # of write(int, const void*, size_t).  This causes problems due
-  # to g++ new pedantic dis-allowal of void* -> char* conversions.
-! G_CONFIG_ARGS = "HAVE_UNISTD=0 /*broken*/"
---- 3,12 ----
-  # /usr/include/unistd.h has write(int, char*, unsigned) instead
-  # of write(int, const void*, size_t).  This causes problems due
-  # to g++ new pedantic dis-allowal of void* -> char* conversions.
-! G_CONFIG_ARGS = "HAVE_UNISTD=0 /*broken*/"
-! 
-! # If the C include files are C++-ready (with extern "C"),
-! # define: HAVE_CPLUS_EXTERN = 1 and: WRAP_C_INCLUDES =
-! # If not, define HAVE_CPLUS_EXTERN = 0, and do not define
-! # WRAP_C_INCLUDES here.
-! HAVE_CPLUS_EXTERN = 0
-@end example
-@end ignore
+Octave may soon support FSQP, an NLP solver from Andre Tits
+(andre@@src.umd.edu) of the University of Maryland.  FSQP is available
+free of charge to academic sites, but can not be redistributed to third
+parties.
 @end itemize
 
 @node Binary Distributions,  , Installation Problems, Installation
 @appendixsec Binary Distributions
 
 This section contains instructions for creating and installing a
 binary distribution.
 
@@ -453,20 +372,18 @@ Info files describing Octave.
 @item lib/octave/@var{version}/m
 Function files distributed with Octave.  This includes the Octave
 version, so that multiple versions of Octave may be installed at the
 same time.
 
 @item lib/octave/@var{version}/exec/@var{host_type}
 Executables to be run by Octave rather than the user.
 
-@ignore
 @item lib/octave/@var{version}/oct/@var{host_type}
 Object files that will be dynamically loaded.
-@end ignore
 
 @item lib/octave/@var{version}/imagelib
 Image files that are distributed with Octave.
 @end table
 
 @noindent
 where @var{version} stands for the current version number of the
 interpreter, and @var{host_type} is the type of computer on which Octave
@@ -480,29 +397,30 @@ if you would prefer to install it in a d
 specify the name of the top level directory as an argument to the
 doinstall.sh script.  For example:
 
 @example
 sh ./doinstall.sh /some/other/directory
 @end example
 
 @noindent
-Octave will then be installed in subdirectories of the directory @file{/some/other/directory}
+will install Octave in subdirectories of the directory
+@file{/some/other/directory}.
 @end itemize
 
 @node Creating a Binary Distribution,  , Installing Octave from a Binary Distribution, Binary Distributions
 @appendixsubsec Creating a Binary Distribution
 
 Here is how to build a binary distribution for others.
 
 @itemize @bullet
 @item
-Build Octave in the same directory as the source.  This is required
-since the @samp{binary-dist} targets in the Makefiles will not work if
-you compile outside the source tree.
+You must build Octave in the same directory as the source.  This is
+required since the @samp{binary-dist} targets in the makefiles will not
+work if you compile outside the source tree.
 
 @item
 Use @samp{CFLAGS=-O CXXFLAGS=-O LDFLAGS=} as arguments for Make because
 most people who get the binary distributions are probably not going to
 be interested in debugging Octave.
 
 @item
 Type @samp{make binary-dist}.  This will build everything and then pack
diff --git a/doc/interpreter/invoke.texi b/doc/interpreter/invoke.texi
--- a/doc/interpreter/invoke.texi
+++ b/doc/interpreter/invoke.texi
@@ -184,24 +184,25 @@ octave --no-line-editing --silent
 
 @defvr {Built-in Variable} nargin
 At the top level, this variable is defined as the number of command line
 arguments that were passed to Octave.
 @end defvr
 
 @defvr {Built-in Variable} program_invocation_name
 @defvrx {Built-in Variable} program_name
-When Octave starts, the value of @code{program_invocation_name} is
-automatically set to the name that was typed at the shell prompt to run
-Octave, and the value of @code{program_name} is automatically set to the
-final component of @code{program_invocation_name}.  For example, if you
-typed @file{@value{OCTAVEHOME}/bin/octave} to start Octave,
+When Octave starts, the value of the built-in variable
+@code{program_invocation_name} is automatically set to the name that was
+typed at the shell prompt to run Octave, and the value of
+@code{program_name} is automatically set to the final component of
+@code{program_invocation_name}.  For example, if you typed
+@file{@value{OCTAVEHOME}/bin/octave} to start Octave,
 @code{program_invocation_name} would have the value
-@file{@value{OCTAVEHOME}/bin/octave}, and @code{program_name} would have the
-value @code{octave}.
+@file{@value{OCTAVEHOME}/bin/octave}, and @code{program_name} would have
+the value @code{octave}.
 
 If executing a script from the command line (e.g., @code{octave foo.m}
 or using an executable Octave script, the program name is set to the
 name of the script.  @xref{Executable Octave Programs} for an example of
 how to create an executable Octave script.
 @end defvr
 
 Here is an example of using these variables to reproduce Octave's
diff --git a/doc/interpreter/io.texi b/doc/interpreter/io.texi
--- a/doc/interpreter/io.texi
+++ b/doc/interpreter/io.texi
@@ -660,20 +660,20 @@ Print a floating-point number in normal 
 @xref{Floating-Point Conversions}, for details.
 
 @item @samp{%e}, @samp{%E}
 Print a floating-point number in exponential notation.  @samp{%e} uses
 lower-case letters and @samp{%E} uses upper-case.  @xref{Floating-Point
 Conversions}, for details.
 
 @item @samp{%g}, @samp{%G}
-Print a floating-point number in either normal or exponential notation,
-whichever is more appropriate for its magnitude.  @samp{%g} uses
-lower-case letters and @samp{%G} uses upper-case.  @xref{Floating-Point
-Conversions}, for details.
+Print a floating-point number in either normal (fixed-point) or
+exponential notation, whichever is more appropriate for its magnitude.
+@samp{%g} uses lower-case letters and @samp{%G} uses upper-case.
+@xref{Floating-Point Conversions}, for details.
 
 @item @samp{%c}
 Print a single character.  @xref{Other Output Conversions}.
 
 @item @samp{%s}
 Print a string.  @xref{Other Output Conversions}.
 
 @item @samp{%%}
diff --git a/doc/interpreter/linalg.texi b/doc/interpreter/linalg.texi
--- a/doc/interpreter/linalg.texi
+++ b/doc/interpreter/linalg.texi
@@ -652,20 +652,18 @@ uses Ward's diagonal
 @iftex
 @tex
 Pad\'e
 @end tex
 @end iftex
 @ifinfo
 Pade'
 @end ifinfo
-approximation method with
-three step preconditioning (SIAM Journal on Numerical Analysis, 1977).
-
-Diagonal
+approximation method with three step preconditioning (SIAM Journal on
+Numerical Analysis, 1977).  Diagonal
 @iftex
 @tex
 Pad\'e
 @end tex
 @end iftex
 @ifinfo
 Pade'
 @end ifinfo
diff --git a/doc/interpreter/plot.texi b/doc/interpreter/plot.texi
--- a/doc/interpreter/plot.texi
+++ b/doc/interpreter/plot.texi
@@ -75,17 +75,18 @@ example, given the data
 x = (-10:0.1:10)';
 data = [x, sin(x), cos(x)];
 @end example
 
 @noindent
 the command
 
 @example
-gplot [-11:11] [-1.1:1.1] data with lines, data using 1:3 with impulses
+gplot [-11:11] [-1.1:1.1] \
+  data with lines, data using 1:3 with impulses
 @end example
 
 @noindent
 will plot two lines.  The first line is generated by the command
 @code{data with lines}, and is a graph of the sine function over the
 range -10 to 10.  The data is taken from the first two columns of the
 matrix because columns to plot were not specified with the @var{using}
 qualifier.
diff --git a/doc/interpreter/system.texi b/doc/interpreter/system.texi
--- a/doc/interpreter/system.texi
+++ b/doc/interpreter/system.texi
@@ -487,23 +487,29 @@ variable @code{status} to the integer @s
 @defvr {Built-in Variable} EXEC_PATH
 The variable @code{EXEC_PATH} is a colon separated list of directories
 to search when executing subprograms.  Its initial value is taken from
 the environment variable @code{OCTAVE_EXEC_PATH} (if it exists) or
 @code{PATH}, but that value can be overridden by the the command line
 argument @code{--exec-path PATH}, or by setting the value of
 @code{EXEC_PATH} in a startup script.  If the value of @code{EXEC_PATH}
 begins (ends) with a colon, the directories
-@code{OCTAVE_HOME/libexec/octave/site/exec/ARCH},
-@code{OCTAVE_HOME/libexec/octave/VERSION/exec/ARCH} and
-@code{OCTAVE_HOME/bin} are prepended (appended) to @code{EXEC_PATH},
-where @code{OCTAVE_HOME} is the top-level directory where all of Octave
-is installed (@file{/usr/local} by default).  If you don't specify a
-value for @code{EXEC_PATH} explicitly, these special directories are
-prepended to your shell path.
+
+@example
+OCTAVE_HOME/libexec/octave/site/exec/ARCH
+OCTAVE_HOME/libexec/octave/VERSION/exec/ARCH
+OCTAVE_HOME/bin
+@end example
+
+@noindent
+are prepended (appended) to @code{EXEC_PATH}, where @code{OCTAVE_HOME}
+is the top-level directory where all of Octave is installed
+(@file{/usr/local} by default).  If you don't specify a value for
+@code{EXEC_PATH} explicitly, these special directories are prepended to
+your shell path.
 @end defvr
 
 @deftypefn {Built-in Function} {} getenv (@var{var})
 Returns the value of the environment variable @var{var}.  For example,
 
 @example
 getenv ("PATH")
 @end example
diff --git a/doc/interpreter/var.texi b/doc/interpreter/var.texi
--- a/doc/interpreter/var.texi
+++ b/doc/interpreter/var.texi
@@ -175,71 +175,74 @@ top level.  The default value is 0.
 Here is a summary of all of Octave's preference variables and their
 default values.  In the following table @code{OCT_HOME} stands for
 the root directory where Octave is installed, @code{VERSION} stands
 for the Octave version number, and @code{SYS} stands for the type of
 system for which Octave was compiled (for example,
 @code{alpha-dec-osf3.2}).
 
 @smallexample
-EDITOR                        "vi"
-EXEC_PATH                     ":$PATH"
-INFO_FILE                     "OCT_HOME/info/octave.info"
-INFO_PROGRAM                  "OCT_HOME/libexec/octave/VERSION/exec/SYS/info"
-LOADPATH                      ".:OCT_HOME/lib/VERSION"
-PAGER                         "less", or "more"
-PS1                           "\s:\#> "
-PS2                           "> "
-PS4                           "+ "
-automatic_replot              0
+EDITOR                  "vi"
+EXEC_PATH               ":$PATH"
+INFO_FILE               "OCT_HOME/info/octave.info"
+INFO_PROGRAM            "OCT_HOME/libexec/octave/VERSION/exec/SYS/info"
+LOADPATH                ".:OCT_HOME/lib/VERSION"
+PAGER                   "less", or "more"
+PS1                     "\s:\#> "
+PS2                     "> "
+PS4                     "+ "
+automatic_replot        0
+
 beep_on_error                 0
 completion_append_char        " "
 default_return_value          []
 do_fortran_indexing           0
 define_all_return_values      0
 empty_list_elements_ok        "warn"
 gnuplot_binary                "gnuplot"
 history_file                  "~/.octave_hist"
 history_size                  1024
 ignore_function_time_stamp    "system"
+
 implicit_str_to_num_ok        0
 ok_to_lose_imaginary_part     "warn"
 output_max_field_width        10
 output_precision              5
 page_screen_output            1
 prefer_column_vectors         0
 prefer_zero_one_indexing      0
 print_answer_id_name          1
 print_empty_dimensions        1
-@c read_only_constants           1
 resize_on_range_error         1
+
 return_last_computed_value    0
 save_precision                17
 saving_history                1
 silent_functions              0
 split_long_rows               1
 struct_levels_to_print        2
 suppress_verbose_help_message 1
 treat_neg_dim_as_zero         0
 warn_assign_as_truth_value    1
 warn_comma_in_global_decl     1
+
 warn_divide_by_zero           1
 warn_function_name_clash      1
 whitespace_in_literal_matrix  ""
 @end smallexample
 
 The following variables may be set from the environment or by a command
 line option.
 
 @smallexample
-Variable        Environment Variable        Option 
---------        --------------------        ------
+Variable        Environment Variable    Option 
+--------        --------------------    ------
 EDITOR          EDITOR
-EXEC_PATH       OCTAVE_EXEC_PATH            --exec-path PATH    
-LOADPATH        OCTAVE_PATH                 --path PATH
-INFO_FILE       OCTAVE_INFO_FILE            --info-file FILE
-INFO_PROGRAM    OCTAVE_INFO_PROGRAM         --info-program PROGRAM
+EXEC_PATH       OCTAVE_EXEC_PATH        --exec-path PATH    
+LOADPATH        OCTAVE_PATH             --path PATH
+INFO_FILE       OCTAVE_INFO_FILE        --info-file FILE
+INFO_PROGRAM    OCTAVE_INFO_PROGRAM     --info-program PROGRAM
 history_size    OCTAVE_HISTSIZE
 history_file    OCTAVE_HISTFILE
 @end smallexample
 
 @c XXX FIXME XXX Might be nice to have a list of the settings required
 @c to have Octave behave as much like @sc{Matlab} as is possible.
