# HG changeset patch
# User Clemens Buchacher <drizzd@aon.at>
# Date 1368813412 14400
#      Fri May 17 13:56:52 2013 -0400
# Node ID 558e1ce7247bece11ecdf9fe0c97dd7280350682
# Parent  bc79ac595a05252500f7ddde73f349414a3af05f
handle single output case of ndgrid

* ndgrid.m: If one output is requested, return a column vector.
New tests.

diff --git a/scripts/plot/ndgrid.m b/scripts/plot/ndgrid.m
--- a/scripts/plot/ndgrid.m
+++ b/scripts/plot/ndgrid.m
@@ -30,21 +30,21 @@
 ## @seealso{meshgrid}
 ## @end deftypefn
 
 ## Author: Alexander Barth <abarth@marine.usf.edu>
 
 function varargout = ndgrid (varargin)
 
   if (nargin == 1)
-    n = max ([nargout, 2]);
+    n = max ([nargout, 1]);
     ## If only one input argument is given, repeat it n-times
     varargin(1:n) = varargin(1);
-  elseif (nargin >= nargout)
-    n = max ([nargin, 2]);
+  elseif (nargin > 0 && nargin >= nargout)
+    n = max ([nargin, 1]);
   else
     error ("ndgrid: wrong number of input arguments");
   endif
 
   ## Determine the size of the output arguments
 
   shape = zeros (1, n);
 
@@ -67,16 +67,27 @@ function varargout = ndgrid (varargin)
 
     varargout{i} = repmat (reshape (varargin{i}, r), s);
   endfor
 
 endfunction
 
 
 %!test
+%! x = 1:3;
+%! assert (isequal (ndgrid (x), x(:)));
+
+%!test
+%! x = 1:3;
+%! [XX, YY] = ndgrid (x);
+%! assert (size_equal (XX, YY));
+%! assert (isequal (XX, repmat(x(:), 1, numel(x))));
+%! assert (isequal (YY, repmat(x, numel(x), 1)));
+
+%!test
 %! x = 1:2;
 %! y = 1:3;
 %! z = 1:4;
 %! [XX, YY, ZZ] = ndgrid (x, y, z);
 %! assert (size_equal (XX, YY, ZZ));
 %! assert (ndims (XX), 3);
 %! assert (size (XX), [2, 3, 4]);
 %! assert (XX(1) * YY(1) * ZZ(1), x(1) * y(1) * z(1));
