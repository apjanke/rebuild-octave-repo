# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1332797876 14400
#      Mon Mar 26 17:37:56 2012 -0400
# Node ID 36cfbd23fe9fbd1aec6e2f5ba520d321b2e40b73
# Parent  9fc75cdf61abbc1949ad6468203d643bf0ed9e34
Fix papersize updater. Bug # 35908.

* grpahics.cc (figure::properities::update_papersize): Save papersize in
proper units. Add tests.

diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3580,18 +3580,18 @@ figure::properties::update_papersize (vo
   std::string punits = get_paperunits ();
   if (punits == "centimeters")
     {
       sz(0) /= 2.54;
       sz(1) /= 2.54;
     }
   else if (punits == "points")
     {
-      sz(0) = 72.0;
-      sz(1) = 72.0;
+      sz(0) /= 72.0;
+      sz(1) /= 72.0;
     }
   if (punits == "normalized")
     {
       caseless_str typ = get_papertype ();
       if (get_papertype () == "<custom>")
         error ("set: can't set the papertype to <custom> when the paperunits is normalized");
     }
   else
@@ -3651,23 +3651,58 @@ figure::properties::update_papersize (vo
       else if (std::abs (sz(0) - 22.0) + std::abs (sz(1) - 34.0) < tol)
         typ = "d";
       else if (std::abs (sz(0) - 34.0) + std::abs (sz(1) - 43.0) < tol)
         typ = "e";
       // Call papertype.set rather than set_papertype to avoid loops between
       // update_papersize and update_papertype
       papertype.set (typ);
     }
+  if (punits == "centimeters")
+    {
+      sz(0) *= 2.54;
+      sz(1) *= 2.54;
+    }
+  else if (punits == "points")
+    {
+      sz(0) *= 72.0;
+      sz(1) *= 72.0;
+    }
   if (get_paperorientation () == "landscape")
     {
       std::swap (sz(0), sz(1));
       papersize.set (octave_value (sz));
     }
 }
 
+/*
+%!test
+%! figure (1, "visible", "off");
+%! set (1, "paperunits", "inches");
+%! set (1, "papersize", [5, 4])
+%! set (1, "paperunits", "points");
+%! assert (get (1, "papersize"), [5, 4] * 72, 1)
+%! papersize = get (gcf, "papersize");
+%! set (1, "papersize", papersize + 1);
+%! set (1, "papersize", papersize)
+%! assert (get (1, "papersize"), [5, 4] * 72, 1)
+%! close (1)
+%!test
+%! figure (1, "visible", "off");
+%! set (1, "paperunits", "inches");
+%! set (1, "papersize", [5, 4])
+%! set (1, "paperunits", "centimeters");
+%! assert (get (1, "papersize"), [5, 4] * 2.54, 2.54/72)
+%! papersize = get (gcf, "papersize");
+%! set (1, "papersize", papersize + 1);
+%! set (1, "papersize", papersize)
+%! assert (get (1, "papersize"), [5, 4] * 2.54, 2.54/72)
+%! close (1)
+*/
+
 void
 figure::properties::update_paperorientation (void)
 {
   std::string porient = get_paperorientation ();
   Matrix sz = get_papersize ().matrix_value ();
   Matrix pos = get_paperposition ().matrix_value ();
   if ((sz(0) > sz(1) && porient == "portrait")
       || (sz(0) < sz(1) && porient == "landscape"))
