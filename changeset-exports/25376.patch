# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1526360918 14400
#      Tue May 15 01:08:38 2018 -0400
# Branch stable
# Node ID cc40e47d3a44b39d923b709ec7f59872bcde0f73
# Parent  2f3a66d7cf8a1e71bab6ef45ee1455922588566e
track multiple file types (oct|m|mex) for private functions (bug #53856)

* load-path.cc (get_fcn_files): Correctly track multiple function file
types for the same function name.

diff --git a/libinterp/corefcn/load-path.cc b/libinterp/corefcn/load-path.cc
--- a/libinterp/corefcn/load-path.cc
+++ b/libinterp/corefcn/load-path.cc
@@ -1094,17 +1094,25 @@ namespace octave
                     if (ext == ".m")
                       t = load_path::M_FILE;
                     else if (ext == ".oct")
                       t = load_path::OCT_FILE;
                     else if (ext == ".mex")
                       t = load_path::MEX_FILE;
 
                     if (t)
-                      retval[base] = t;
+                      {
+                        load_path::dir_info::fcn_file_map_iterator p
+                          = retval.find (base);
+
+                        if (p == retval.end ())
+                          retval[base] = t;
+                        else
+                          p->second |= t;
+                      }
                   }
               }
           }
       }
     else
       {
         std::string msg = dir.error ();
         warning ("load_path: %s: %s", d.c_str (), msg.c_str ());
diff --git a/libinterp/corefcn/load-path.h b/libinterp/corefcn/load-path.h
--- a/libinterp/corefcn/load-path.h
+++ b/libinterp/corefcn/load-path.h
@@ -352,17 +352,17 @@ namespace octave
     typedef file_info_list_type::iterator file_info_list_iterator;
 
     // <FCN_NAME, FILE_INFO_LIST>
     typedef std::map<std::string, file_info_list_type> fcn_map_type;
 
     typedef fcn_map_type::const_iterator const_fcn_map_iterator;
     typedef fcn_map_type::iterator fcn_map_iterator;
 
-    // <DIR_NAME, <FCN_NAME, TYPE>>
+    // <DIR_NAME, <FCN_NAME, TYPES>>
     typedef std::map<std::string, dir_info::fcn_file_map_type>
       private_fcn_map_type;
 
     typedef private_fcn_map_type::const_iterator const_private_fcn_map_iterator;
     typedef private_fcn_map_type::iterator private_fcn_map_iterator;
 
     // <CLASS_NAME, <FCN_NAME, FILE_INFO_LIST>>
     typedef std::map<std::string, fcn_map_type> method_map_type;
