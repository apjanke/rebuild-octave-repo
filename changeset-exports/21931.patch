# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466110988 14400
#      Thu Jun 16 17:03:08 2016 -0400
# Node ID ffa911b616c74f846242035df2f516fe9a0e4500
# Parent  f0c5dd1ea2b9aacd4f1669575b507d401e723286
* genpropdoc.m: Don't handle erasemode property.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -846,19 +846,16 @@ for the z-axis.  __modemsg__.  @xref{XRE
       case "color"
         s.doc = "Color of the line object.  @xref{Colors, , colorspec}.";
         s.valid = valid_color;
 
       case "displayname"
         s.doc = "Text for the legend entry corresponding to this line.";
         s.valid = valid_cellstring;
 
-      case "erasemode"
-        s.doc = doc_unused;
-
       case "interpreter"
 
       case "linestyle"
         s.doc = "@xref{Line Styles}.";
 
       case "linewidth"
         s.doc = "Width of the line object measured in points.";
 
@@ -928,18 +925,16 @@ z data.";
         s.valid = valid_color;
 
       case "displayname"
       case "edgecolor"
         s.doc = sprintf (doc_notimpl, "Background area");
         s.valid = valid_color;
 
       case "editing"
-      case "erasemode"
-        s.doc = doc_unused;
 
       case "extent"
       case "fontangle"
         s.doc = "Flag whether the font is italic or normal.  \
 @code{fontangle} is currently unused.";
 
       case "fontname"
         s.doc = "The font used for the text.";
@@ -1010,19 +1005,16 @@ measured in degrees.";
       case "cdata"
         s.valid = "matrix";
 
       case "cdatamapping"
       case "displayname"
         s.doc = "Text for the legend entry corresponding to this image.";
         s.valid = valid_cellstring;
 
-      case "erasemode"
-        s.doc = doc_unused;
-
       case "xdata"
         s.doc = "Two-element vector @code{[xmin xmax]} specifying the x \
 coordinates of the first and last columns of the image.\n\
 \n\
 Setting @code{xdata} to the empty matrix ([]) will restore the default value \
 of @code{[1 columns(image)]}.";
         s.valid = valid_2elvec;
 
@@ -1081,18 +1073,16 @@ diffuse reflex) and 1.0 (full diffuse re
       case "edgelighting"
         s.doc = "When set to a value other than @qcode{\"none\"}, the edges \
 of the object are drawn with light and shadow effects.  Supported values are \
 @qcode{\"none\"} (no lighting effects), @qcode{\"flat\"} (facetted look) and \
 @qcode{\"gouraud\"} (linear interpolation of the lighting effects between \
 the vertices). @qcode{\"phong\"} is deprecated and has the same effect as \
 @qcode{\"gouraud\"}.";
 
-      case "erasemode"
-        s.doc = doc_unused;
       case "facealpha"
         s.doc = sprintf (doc_notimpl, "Transparency");
         s.valid = valid_scalmat;
 
       case "facecolor"
       case "facelighting"
         s.doc = "When set to a value other than @qcode{\"none\"}, the faces \
 of the object are drawn with light and shadow effects.  Supported values are \
@@ -1206,19 +1196,16 @@ diffuse reflex) and 1.0 (full diffuse re
       case "edgelighting"
         s.doc = "When set to a value other than @qcode{\"none\"}, the edges \
 of the object are drawn with light and shadow effects.  Supported values are \
 @qcode{\"none\"} (no lighting effects), @qcode{\"flat\"} (facetted look) and \
 @qcode{\"gouraud\"} (linear interpolation of the lighting effects between \
 the vertices). @qcode{\"phong\"} is deprecated and has the same effect as \
 @qcode{\"gouraud\"}.";
 
-      case "erasemode"
-        s.doc = doc_unused;
-
       case "facealpha"
         s.doc = sprintf (doc_notimpl, "Transparency");
         s.valid = valid_scalmat;
 
       case "facecolor"
         ## Don't provide a default value, and mark colorspec with
         ## braces, this forces the default rgb triplet to be displayed
         s.valid = packopt ({markdef(valid_color), ...
@@ -1500,18 +1487,18 @@ function s = getstructure (objname, base
   hf = [];
   if (! strcmp (objname, "root"))
     ## Use an improbable number to avoid ishandle to return true for 1
     hf = figure (2265465, "visible", "off");
   endif
 
   ## Build a default object to extract its properties list and default values.
   if (strcmp (objname, "base"))
-    ## Base properties are extracted from hggroup that only have 2 additional
-    ## regular (non-hidden) properties, "displayname" and "erasemode".
+    ## Base properties are extracted from hggroup that only have 1 additional
+    ## regular (non-hidden) property, "displayname".
     h = hggroup ();
   elseif (strcmp (objname, "root"))
     h = 0;
   elseif (strcmp (objname, "figure"))
     h = hf;
   else
     eval (["h = " objname " ();"]);
   endif
@@ -1549,17 +1536,17 @@ function s = getstructure (objname, base
     args{2*(ii-1)+1} = field;
     args{2*ii} = val;
   endfor
 
   ## Build struct and remove unused fields in base properties
   s = struct (args{:});
 
   if (strcmp (objname, "base"))
-    s = rmfield (s, {"displayname", "erasemode"});
+    s = rmfield (s, "displayname");
   endif
 
   if (isfigure (hf))
     close (hf)
   endif
 
 endfunction
 
