# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1249713678 -7200
#      Sat Aug 08 08:41:18 2009 +0200
# Node ID a321a1c227c83c4a9e6f632a3084dca25a316e01
# Parent  941e163386773819f93ca122e090d328c651caa8
make ifelse an alias or merge

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-08-08  Jaroslav Hajek  <highegg@gmail.com>
+
+	* data.cc (Fifelse): Rename to Fmerge, alias to Fifelse.
+
 2009-08-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* OPERATORS/op-dm-template.cc, OPERATORS/op-pm-template.cc:
 	Also define conversions for null string and null sq_string.
 
 2009-08-06  John W. Eaton  <jwe@octave.org>
 
 	* OPERATORS/op-cdm-m.cc, OPERATORS/op-dm-m.cc, OPERATORS/op-pm-m.cc:
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -6055,19 +6055,20 @@ do_merge (const Array<bool>& mask,
 #define MAKE_INT_BRANCH(INTX) \
   else if (tval.is_ ## INTX ## _type () && fval.is_ ## INTX ## _type ()) \
     { \
       retval = do_merge (mask, \
                          tval.INTX ## _array_value (), \
                          fval.INTX ## _array_value ()); \
     }
 
-DEFUN (ifelse, args, ,
+DEFUN (merge, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} ifelse (@var{mask}, @var{tval}, @var{fval})\n\
+@deftypefn {Built-in Function} {} merge (@var{mask}, @var{tval}, @var{fval})\n\
+@deftypefnx {Built-in Function} {} ifelse (@var{mask}, @var{tval}, @var{fval})\n\
 Merges elements of @var{true_val} and @var{false_val}, depending on the value of\n\
 @var{mask}. If @var{mask} is a logical scalar, the other two arguments can be\n\
 arbitrary values. Otherwise, @var{mask} must be a logical array, and @var{tval},\n\
 @var{fval} should be arrays of matching class, or cell arrays.\n\
 In the scalar mask case, @var{tval} is returned if @var{mask} is true, otherwise\n\
 @var{fval} is returned.\n\
 \n\
 In the array mask case, both @var{tval} and @var{fval} must be either scalars or\n\
@@ -6149,15 +6150,17 @@ it is first converted to logical.\n\
         }
     }
   else
     print_usage ();
 
   return retval;
 }
 
+DEFALIAS (ifelse, merge);
+
 #undef MAKE_INT_BRANCH
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
