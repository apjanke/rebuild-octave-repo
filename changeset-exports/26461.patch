# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546723024 28800
#      Sat Jan 05 13:17:04 2019 -0800
# Branch stable
# Node ID ac6f0b8e94c0fcae860ed8203dc1a057725b5601
# Parent  73ce195bf66e591409bc6bb6ab6934c400042058
oct-rl-hist.c: Fix static analyzer detected issues (bug #55347).

* oct-rl-hist.c (octave_history_list): Check validity of C pointers before
using.

diff --git a/liboctave/util/oct-rl-hist.c b/liboctave/util/oct-rl-hist.c
--- a/liboctave/util/oct-rl-hist.c
+++ b/liboctave/util/oct-rl-hist.c
@@ -272,31 +272,37 @@ octave_history_list (int limit, int numb
       int beg = 0;
       int end = 0;
       while (hlist[end])
         end++;
 
       beg = (limit < 0 || end < limit) ? 0 : (end - limit);
 
       retval = malloc ((size_t) (end - beg + 1) * sizeof (char **));
-
+      // FIXME: Should this call current_liboctave_error_handler instead?
+      if (! retval)
+        return retval;
+      
       k = 0;
       for (i = beg; i < end; i++)
         {
           char *line = hlist[i]->line;
           size_t len = line ? strlen (line) : 0;
           char *tmp = malloc (len + 64);
 
-          if (number_lines)
-            sprintf (tmp, "%5d %s", i + history_base,
-                     line ? line : "");
-          else
-            strcpy (tmp, line ? line : "");
+          if (tmp)
+            {
+              if (number_lines)
+                sprintf (tmp, "%5d %s", i + history_base,
+                         line ? line : "");
+              else
+                strcpy (tmp, line ? line : "");
 
-          retval[k++] = tmp;
+              retval[k++] = tmp;
+            }
         }
 
       retval[k] = 0;
     }
 
   return retval;
 }
 
