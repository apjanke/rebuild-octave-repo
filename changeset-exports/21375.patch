# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456720039 18000
#      Sun Feb 28 23:27:19 2016 -0500
# Node ID e5fd5bc5fd902ca5b695ce86875be172090a01f4
# Parent  1487a68a496ac4b54e23a70a3afc5114bd3469e8
update docs for FLTK and Qt graphics

diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -246,17 +246,18 @@ Portable font engine (@url{http://www.fr
 to perform font rendering for Octave's OpenGL-based graphics functions.
 
 @item GLPK
 GNU Linear Programming Kit (@url{http://www.gnu.org/software/glpk}).
 GPLK is required for the function @code{glpk}.
 
 @item @nospell{gl2ps}
 OpenGL to PostScript printing library (@url{http://www.geuz.org/gl2ps/}).
-@nospell{gl2ps} is required for printing when using the FLTK toolkit.
+@nospell{gl2ps} is required for printing when using OpenGL-based
+graphics toolkits (currently either FLTK or Qt).
 
 @item gnuplot
 Interactive graphics program (@url{http://www.gnuplot.info}).  gnuplot
 is currently the default graphics renderer for Octave.
 
 @item GraphicsMagick++
 Image processing library (@url{http://www.graphicsmagick.org}).
 GraphicsMagick++ is used to provide the @code{imread} and @code{imwrite}
@@ -490,25 +491,20 @@ the source is located.
 @item
 Run make.
 
 You will need a recent version of GNU Make as Octave relies on certain
 features not generally available in all versions of make.  Modifying
 Octave's makefiles to work with other make programs is probably not
 worth your time; instead, we simply recommend installing GNU Make.
 
-There are currently two options for plotting in Octave: (1) the external
-program gnuplot, or (2) the internal graphics engine using OpenGL and
-FLTK@.  Gnuplot is a command-driven interactive function plotting
-program.  Gnuplot is copyrighted, but freely distributable.  As of
-Octave release 3.4, gnuplot is the default option for plotting.  But,
-the internal graphics engine is nearly 100% compatible, certainly for
-most ordinary plots, and users are encouraged to test it.  It is
-anticipated that the internal engine will become the default option at
-the next major release of Octave.
+There are currently three options for plotting in Octave: the external
+program gnuplot, the internal graphics engine using OpenGL coupled with
+either FLTK or Qt widgets.  Gnuplot is a command-driven interactive
+function plotting program.
 
 To compile Octave, you will need a recent version of @code{g++} or other
 ANSI C++ compiler.  In addition, you will need a Fortran 77 compiler or
 @code{f2c}.  If you use @code{f2c}, you will need a script like
 @code{fort77} that works like a normal Fortran compiler by combining
 @code{f2c} with your C compiler in a single script.
 
 If you plan to modify the parser you will also need GNU @code{bison} and
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -32,25 +32,28 @@
 @section Introduction to Plotting
 
 Earlier versions of Octave provided plotting through the use of
 gnuplot.  This capability is still available.  But, a newer plotting
 capability is provided by access to OpenGL@.  Which plotting system
 is used is controlled by the @code{graphics_toolkit} function.
 @xref{Graphics Toolkits}.
 
-The function call @code{graphics_toolkit ("fltk")} selects the
+The function call @code{graphics_toolkit ("qt")} selects the
+Qt/OpenGL system, @code{graphics_toolkit ("fltk")} selects the
 FLTK/OpenGL system, and @code{graphics_toolkit ("gnuplot")} selects the
-gnuplot system.  The two systems may be used selectively through the use
+gnuplot system.  The three systems may be used selectively through the use
 of the @code{graphics_toolkit} property of the graphics handle for each
-figure.  This is explained in @ref{Graphics Data Structures}.
-@strong{Caution:} The FLTK toolkit uses single precision variables internally
-which limits the maximum value that can be displayed to approximately
-@math{10^{38}}.  If your data contains larger values you must use the gnuplot
-toolkit which supports values up to @math{10^{308}}.
+figure.  The toolkit used for a given figure may not be changed once the
+figure is initialized.  This is explained in @ref{Graphics Data Structures}.
+@strong{Caution:} The OpenGL-based toolkits use single precision
+variables internally which limits the maximum value that can be
+displayed to approximately @math{10^{38}}.  If your data contains larger
+values you must use the gnuplot toolkit which supports values up to
+@math{10^{308}}.
 
 @node High-Level Plotting
 @section High-Level Plotting
 @cindex plotting, high-level
 
 Octave provides simple means to create many different types of two- and
 three-dimensional plots using high-level functions.
 
