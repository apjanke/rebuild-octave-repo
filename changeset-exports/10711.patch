# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1276745815 25200
#      Wed Jun 16 20:36:55 2010 -0700
# Node ID fbd7843974faa121bf9c78b59b91c1e3485dd7a3
# Parent  4669da47fe0dbafd16ab8aeef95bfcf8714444bf
Periodic grammar check of documentation files to ensure common format.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,14 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * interpreter/expr.txi, interpreter/func.txi, interpreter/install.txi, 
+        interpreter/plot.txi, interpreter/sparse.txi: Periodic grammar check
+        of documentation to ensure a common format.
+
 2010-05-27  Rik <octave@nomad.inbox5.com>
 
         * interpreter/arith.txi, interpreter/diffeq.txi, interpreter/intro.txi,
         interpreter/nonlin.txi, interpreter/poly.txi, interpreter/sparse.txi:
         Replace @ifinfo with @ifnottex. 
 
 2010-05-07  John W. Eaton  <jwe@octave.org>
 
@@ -308,18 +314,18 @@ 2009-11-10  John W. Eaton  <jwe@octave.o
 	liboctave/Makefile.in, refcard/Makefile.in: Delete.
 	* interpreter/munge-texi.cc (main, usage): Eliminate unnecessary
 	-d option.
 	* liboctave/liboctave.texi: Surround @direntry in appropriate magic.
 	* faq/OctaveFAQ.texi: Rename from faq/Octave-FAQ.texi.
 
 2009-10-23  Rik <octave@nomad.inbox5.com>
 
-	* various: Periodic grammar check of Octave documentation files to ensure
-	a standardized format.
+	* various: Periodic grammar check of Octave documentation files to 
+        ensure a standardized format.
 
 2009-10-20  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.in: Clean Makefile.in and remove a few
 	non-functional targets
 
 2009-10-13  Rik <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -821,17 +821,17 @@ function f (a, b, c)
 @end group
 @end example
 
 @noindent
 would result in an error if @code{f} were called with one or two
 arguments because Octave would be forced to try to evaluate both of the
 operands for the operator @samp{&}.
 
-The ternary operator (?:) is not supported in Octave. If short-circuiting is
+The ternary operator (?:) is not supported in Octave.  If short-circuiting is
 not important, it can be replaced by the @code{ifelse} function.
 
 @DOCSTRING(ifelse)
 
 @node Assignment Ops
 @section Assignment Expressions
 @cindex assignment expressions
 @cindex assignment operators
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -436,17 +436,17 @@ print_arguments (1, "two", 3);
 @end example
 
 @DOCSTRING(parseparams)
 
 @node Ignoring Arguments
 @section Ignoring Arguments
 
 In the formal argument list, it is possible to use the dummy placeholder @code{~}
-instead of a name. This indicates that the corresponding argument value should be ignored
+instead of a name.  This indicates that the corresponding argument value should be ignored
 and not stored to any variable.
 
 @example
 @group
 function val = pick2nd (~, arg2)
   val = arg2;
 endfunction
 @end group
diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -118,17 +118,17 @@ Don't use COLAMD, disable some sparse ma
 @item --without-curl
 Don't use the cURL, disable the ftp objects, @code{urlread} and @code{urlwrite}
 functions.
 
 @item --without-cxsparse
 Don't use CXSPARSE, disable some sparse matrix functionality.
 
 @item --without-umfpack
-Don't use UMFPACK, disable some sparse matrix functionality.
+Don't use @sc{umfpack}, disable some sparse matrix functionality.
 
 @item --without-fftw
 Use the included @sc{fftpack} library instead of the @sc{fftw} library.
 
 @item --without-glpk
 Don't use the GLPK library for linear programming.
 
 @item --without-hdf5
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -1235,17 +1235,17 @@ An N-by-3 matrix containing the color ma
 @item paperorientation
 @item createfcn
 @item currentaxes 
 Handle to graphics object of current axes.
 @item currentcharacter
 @item currentobject
 @item currentpoint
 Holds the coordinates of the point over which the mouse pointer was when
-the mouse button was pressed. If a mouse callback function is defined,
+the mouse button was pressed.  If a mouse callback function is defined,
 @code{"currentpoint"} holds the coordinates of the point over which the
 mouse pointer is when the function gets called.
 @item deletefcn
 @item dockcontrols 
 --- Values: "on," "off"
 @item doublebuffer 
 --- Values: "on," "off"
 @item filename
@@ -1254,29 +1254,29 @@ mouse pointer is when the function gets 
 @item hittest
 @item integerhandle
 @item interruptible 
 --- Values: "on," "off"
 @item inverthardcopy
 @item keypressfcn
 see @code{"keypressfcn"}
 @item keyreleasefcn
-With @code{"keypressfcn"}, The keyboard callback functions. These
+With @code{"keypressfcn"}, The keyboard callback functions.  These
 callback functions get called when a key is pressed/released
-respectively. The functions are called with two input arguments. The
-first argument holds the handle of the calling figure. The second
+respectively.  The functions are called with two input arguments.  The
+first argument holds the handle of the calling figure.  The second
 argument holds the event structure which has the following members:
 @table @code
 @item Character
 The ASCII value of the key
 @item Key
 lowercase value of the key
 @item Modifier
 A cell array containing strings representing the modifiers pressed with
-the key. Possible values are @code{"shift"}, @code{"alt"}, and
+the key.  Possible values are @code{"shift"}, @code{"alt"}, and
 @code{"control"}.
 @end table
 @item menubar
 @item mincolormap
 @item name
 @item nextplot
 May be one of
 @table @code
@@ -1314,18 +1314,18 @@ Indicates the orientation for printing. 
 @item visible
 Either @code{"on"} or @code{"off"} to toggle display of the figure.
 @item windowbuttondownfcn
 See @code{"windowbuttonupfcn"}
 @item windowbuttonmotionfcn
 See @code{"windowbuttonupfcn"}
 @item windowbuttonupfcn
 With @code{"windowbuttondownfcn"} and @code{"windowbuttonmotionfcn"},
-The mouse callback functions. These callback functions get called when
-the mouse button is pressed, dragged, and released respectively. When
+The mouse callback functions.  These callback functions get called when
+the mouse button is pressed, dragged, and released respectively.  When
 these callback functions are called, the @code{"currentpoint"} property
 holds the current coordinates of the cursor.
 @item windowbuttonwheelfcn
 @item windowstyle
 @item wvisual
 @item wvisualmode
 @item xdisplay
 @item xvisual
@@ -1367,17 +1367,17 @@ property to be set to @code{"manual"}.
 @item climmode
 Either @code{"manual"} or @code{"auto"}.
 @item clipping
 @item color
 @item colororder
 @item createfcn
 @item currentpoint
 Holds the coordinates of the point over which the mouse pointer was when
-the mouse button was pressed. If a mouse callback function is defined,
+the mouse button was pressed.  If a mouse callback function is defined,
 @code{"currentpoint"} holds the coordinates of the point over which the
 mouse pointer is when the function gets called.
 @item dataaspectratio
 A two-element vector specifying the relative height and width of the
 data displayed in the axes.  Setting @code{dataaspectratio} to @samp{1,
 2]} causes the length of one unit as displayed on the y-axis to be the
 same as the length of 2 units on the x-axis.  Setting
 @code{dataaspectratio} also forces the @code{dataaspectratiomode}
@@ -1392,22 +1392,22 @@ Either @code{"manual"} or @code{"auto"}.
 @item fontunits
 @item fontweight
 @item gridlinestyle
 @item handlevisibility
 @item hittest
 @item interpreter
 @item interruptible
 @item key
-Toggle display of the legend. --- Values: "on," "off"
+Toggle display of the legend.  --- Values: "on," "off"
 Note that this property is not compatible with @sc{matlab} and may be
 removed in a future version of Octave.
 @item keybox
 Toggle display of a box around the
-legend.   --- Values: "on," "off"
+legend.  --- Values: "on," "off"
 Note that this property is not compatible with @sc{matlab} and
 may be removed in a future version of Octave.
 @item keypos
 An integer from 1 to 4 specifying the position of the legend.  1
 indicates upper right corner, 2 indicates upper left, 3 indicates lower
 left, and 4 indicates lower right.  Note that this property is not
 compatible with @sc{matlab} and may be removed in a future version of
 Octave.
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -785,17 +785,17 @@ or backward substitution, and goto 8
 or lower triangular matrix with row permutations, perform a sparse forward 
 or backward substitution, and goto 8
 
 @item If the matrix is square, hermitian with a real positive diagonal, attempt
 sparse Cholesky factorization using CHOLMOD.
 
 @item If the sparse Cholesky factorization failed or the matrix is not
 hermitian with a real positive diagonal, and the matrix is square, factorize 
-using UMFPACK.
+using @sc{umfpack}.
 
 @item If the matrix is not square, or any of the previous solvers flags
 a singular or near singular matrix, find a minimum norm solution using
 CXSPARSE@footnote{The CHOLMOD, UMFPACK and CXSPARSE packages were
 written by Tim Davis and are available at
 http://www.cise.ufl.edu/research/sparse/}.
 @end enumerate
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * DASSL-opts.in: Periodic grammar check on documentation.
+
 2010-06-16  David Bateman  <dbateman@free.fr>
 
 	* oct-rand.cc (void octave_rand:do_reset (void),
 	void octave_rand:do_reset (const std::string&)): New functions
 	* oct-rand.h (void octave_rand:do_reset (void),
 	void octave_rand:do_reset (const std::string&)): Declare them
 	(void octave_rand:reset (void),
 	void octave_rand:reset (const std::string&)): New functions.
diff --git a/liboctave/DASSL-opts.in b/liboctave/DASSL-opts.in
--- a/liboctave/DASSL-opts.in
+++ b/liboctave/DASSL-opts.in
@@ -92,17 +92,17 @@ a consistent set and leave this option s
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
 
 OPTION
   NAME = "enforce nonnegativity constraints"
   DOC_ITEM
 If you know that the solutions to your equations will always be
-nonnegative, it may help to set this parameter to a nonzero
+non-negative, it may help to set this parameter to a nonzero
 value.  However, it is probably best to try leaving this option set to
 zero first, and only setting it to a nonzero value if that doesn't
 work very well.
   END_DOC_ITEM
   TYPE = "octave_idx_type"
   INIT_VALUE = "0"
   SET_EXPR = "val"
 END_OPTION
diff --git a/scripts/@ftp/dir.m b/scripts/@ftp/dir.m
--- a/scripts/@ftp/dir.m
+++ b/scripts/@ftp/dir.m
@@ -11,17 +11,17 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{lst} =} dir (@var{path})
 ## List the current directory in verbose form for the FTP connection 
-## @var{f}. @var{f} is an FTP object returned by the ftp function.
+## @var{f}.  @var{f} is an FTP object returned by the ftp function.
 ## @end deftypefn
 
 function lst = dir (obj)
   if (nargout == 0)
     __ftp_dir__ (obj.curlhandle);
   else
     lst = __ftp_dir__ (obj.curlhandle);
   endif
diff --git a/scripts/@ftp/ftp.m b/scripts/@ftp/ftp.m
--- a/scripts/@ftp/ftp.m
+++ b/scripts/@ftp/ftp.m
@@ -13,17 +13,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with this program; If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{f}} = ftp (@var{host})
 ## @deftypefnx {Function File} {@var{f}} = ftp (@var{host}, @var{username}, ## @var{password})
 ## Connect to the FTP server @var{host} with @var{username} and @var{password}.
 ## If @var{username} and @var{password} are not specified, user "anonymous"
-## with no password is used. The returned FTP object @var{f} represents the
+## with no password is used.  The returned FTP object @var{f} represents the
 ## established FTP connection.
 ## @end deftypefn
 
 function obj = ftp (host, username = "anonymous", password = "")
   if (nargin == 0)
     p.host = "";
     p.username = username;
     p.password = password;
diff --git a/scripts/@ftp/mget.m b/scripts/@ftp/mget.m
--- a/scripts/@ftp/mget.m
+++ b/scripts/@ftp/mget.m
@@ -13,17 +13,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with this program; If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} mget (@var{f}, @var{file})
 ## @deftypefnx {Function File} {} mget (@var{f}, @var{dir})
 ## @deftypefnx {Function File} {} mget (@dots{}, @var{target})
 ## Downloads a remote file @var{file} or directory @var{dir} to the local
-## directory on the FTP connection @var{f}. @var{f} is an FTP object
+## directory on the FTP connection @var{f}.  @var{f} is an FTP object
 ## returned by the ftp function. 
 ##
 ## The arguments @var{file} and @var{dir} can include wildcards and any
 ## files or directories on the remote server that match will be downloaded.
 ##
 ## If a third argument @var{target} is given, then a single file or
 ## directory will be downloaded with the name @var{target} to the local
 ## directory.
diff --git a/scripts/@ftp/mput.m b/scripts/@ftp/mput.m
--- a/scripts/@ftp/mput.m
+++ b/scripts/@ftp/mput.m
@@ -11,17 +11,17 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} mput (@var{f}, @var{file})
 ## Upload the local file @var{file} into the current remote directory on
-## the FTP connection @var{f}. @var{f} is an FTP object returned by the
+## the FTP connection @var{f}.  @var{f} is an FTP object returned by the
 ## ftp function. 
 ##
 ## The argument @var{file} is passed by the @dfn{glob} function and any
 ## files that match the wildcards in @var{file} will be uploaded.
 ## @end deftypefn
 
 function retval = mput (obj, file)
   if (nargout == 0)
diff --git a/scripts/@ftp/rename.m b/scripts/@ftp/rename.m
--- a/scripts/@ftp/rename.m
+++ b/scripts/@ftp/rename.m
@@ -11,15 +11,15 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; If not, see <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} rename (@var{f}, @var{oldname}, @var{newname})
 ## Rename or move the remote file or directory @var{oldname} to @var{newname},
-##  over the FTP connection @var{f}. @var{f} is an FTP object returned by the
+##  over the FTP connection @var{f}.  @var{f} is an FTP object returned by the
 ## ftp function.
 ## @end deftypefn
 
 function rename (obj, oldname, newname)
   __ftp_rename__ (obj.curlhandle, oldname, newname);
 endfunction
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,19 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * @ftp/dir.m, @ftp/ftp.m, @ftp/mget.m, @ftp/mput.m, @ftp/rename.m, 
+        deprecated/fstat.m, general/accumdim.m, general/interp1.m, 
+        linear-algebra/ishermitian.m, linear-algebra/issymmetric.m, 
+        miscellaneous/substruct.m, optimization/fminbnd.m, 
+        optimization/fsolve.m, plot/bar.m, plot/daspect.m, plot/pbaspect.m,
+        plot/print.m, polynomial/mkpp.m, polynomial/ppval.m, set/union.m,
+        signal/unwrap.m, specfun/nthroot.m: Periodic grammar check of 
+        documentation to ensure a common format.
+
 2010-06-14  Rik <octave@nomad.inbox5.com>
 
         * plot/image.m: Flip data, rather than y-axis, for images.  (bug #30033)
 
 2010-06-12  Ben Abbott <bpabbott@mac.com>
 
 	* plot/scatter.m: New demo.
 	* plot/private/__scatter__.m: Properly set default value markersize
diff --git a/scripts/deprecated/fstat.m b/scripts/deprecated/fstat.m
--- a/scripts/deprecated/fstat.m
+++ b/scripts/deprecated/fstat.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{info}, @var{err}, @var{msg}] = } fstat (fid)
+## @deftypefn {Function File} {[@var{info}, @var{err}, @var{msg}] =} fstat (fid)
 ## This function has been deprecated.  Use stat instead.
 ## @end deftypefn
 
 ## Deprecated in version 3.4
 
 function [info, err, msg] = fstat (fid)
   persistent warned = false;
   if (! warned)
diff --git a/scripts/general/accumdim.m b/scripts/general/accumdim.m
--- a/scripts/general/accumdim.m
+++ b/scripts/general/accumdim.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} accumdim (@var{subs}, @var{vals}, @var{dim}, @var{n}, @var{func}, @var{fillval})
 ## Create an array by accumulating the slices of an array into the
 ## positions defined by their subscripts along a specified dimension. 
 ## The subscripts are defined by the index vector @var{subs}.
-## The dimension is specified by @var{dim}. If not given, it defaults
+## The dimension is specified by @var{dim}.  If not given, it defaults
 ## to the first non-singleton dimension.
 ##
 ## The extent of the result matrix in the working dimension will be determined 
 ## by the subscripts themselves.
 ## However, if @var{n} is defined it determines this extent.
 ##
 ## The default action of @code{accumdim} is to sum the subarrays with the
 ## same subscripts.  This behavior can be modified by defining the @var{func}
diff --git a/scripts/general/interp1.m b/scripts/general/interp1.m
--- a/scripts/general/interp1.m
+++ b/scripts/general/interp1.m
@@ -55,17 +55,17 @@
 ##
 ## If the string argument 'pp' is specified, then @var{xi} should not be
 ## supplied and @code{interp1} returns the piece-wise polynomial that
 ## can later be used with @code{ppval} to evaluate the interpolation.
 ## There is an equivalence, such that @code{ppval (interp1 (@var{x},
 ## @var{y}, @var{method}, 'pp'), @var{xi}) == interp1 (@var{x}, @var{y},
 ## @var{xi}, @var{method}, 'extrap')}.
 ##
-## Duplicate points in @var{x} specify a discontinuous interpolant. There
+## Duplicate points in @var{x} specify a discontinuous interpolant.  There
 ## should be at most 2 consecutive points with the same value.
 ## The discontinuous interpolant is right-continuous if @var{x} is increasing,
 ## left-continuous if it is decreasing.
 ## Discontinuities are (currently) only allowed for "nearest" and "linear"
 ## methods; in all other cases, @var{x} must be strictly monotonic.
 ##
 ## An example of the use of @code{interp1} is
 ##
diff --git a/scripts/linear-algebra/ishermitian.m b/scripts/linear-algebra/ishermitian.m
--- a/scripts/linear-algebra/ishermitian.m
+++ b/scripts/linear-algebra/ishermitian.m
@@ -16,17 +16,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ishermitian (@var{x}, @var{tol})
 ## Return true if @var{x} is symmetric within the tolerance specified by @var{tol},
-## otherwise return false. The default tolerance is zero (uses faster code).
+## otherwise return false.  The default tolerance is zero (uses faster code).
 ## Matrix @var{x} is considered symmetric if
 ## @code{norm (@var{x} - @var{x}.', inf) / norm (@var{x}, inf) < @var{tol}}.
 ## @seealso{size, rows, columns, length, ismatrix, isscalar,
 ## issquare, isvector}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
diff --git a/scripts/linear-algebra/issymmetric.m b/scripts/linear-algebra/issymmetric.m
--- a/scripts/linear-algebra/issymmetric.m
+++ b/scripts/linear-algebra/issymmetric.m
@@ -16,17 +16,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} issymmetric (@var{x}, @var{tol})
 ## Return true if @var{x} is a symmetric matrix within the tolerance specified
-## by @var{tol}, otherwise return false. The default tolerance is zero (uses
+## by @var{tol}, otherwise return false.  The default tolerance is zero (uses
 ## faster code).
 ## Matrix @var{x} is considered symmetric if
 ## @code{norm (@var{x} - @var{x}.', inf) / norm (@var{x}, inf) < @var{tol}}.
 ## @seealso{size, rows, columns, length, ismatrix, isscalar,
 ## issquare, isvector}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
diff --git a/scripts/miscellaneous/substruct.m b/scripts/miscellaneous/substruct.m
--- a/scripts/miscellaneous/substruct.m
+++ b/scripts/miscellaneous/substruct.m
@@ -15,17 +15,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} substruct (@var{type}, @var{subs}, @dots{})
 ## Create a subscript structure for use with @code{subsref} or
-## @code{subsasgn}. For example:
+## @code{subsasgn}.  For example:
 ##
 ## @example
 ## @group
 ## idx = substruct("()", @{3, ":"@})
 ##      @result{}
 ##        idx =
 ##        @{
 ##          type = ()
diff --git a/scripts/optimization/fminbnd.m b/scripts/optimization/fminbnd.m
--- a/scripts/optimization/fminbnd.m
+++ b/scripts/optimization/fminbnd.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 ##
 ## Author: Jaroslav Hajek <highegg@gmail.com>
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{x}, @var{fval}, @var{info}, @var{output}] =} fminbnd (@var{fun}, @var{a}, @var{b}, @var{options})
 ## Find a minimum point of a univariate function.  @var{fun} should be a function
-## handle or name.  @var{a}, @var{b} specify a starting interval. @var{options} is a
+## handle or name.  @var{a}, @var{b} specify a starting interval.  @var{options} is a
 ## structure specifying additional options.  Currently, @code{fminbnd}
 ## recognizes these options: @code{"FunValCheck"}, @code{"OutputFcn"},
 ## @code{"TolX"}, @code{"MaxIter"}, @code{"MaxFunEvals"}. 
 ## For description of these options, see @ref{doc-optimset,,optimset}.
 ## 
 ## On exit, the function returns @var{x}, the approximate minimum point
 ## and @var{fval}, the function value thereof.
 ## @var{info} is an exit flag that can have these values:
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -39,18 +39,18 @@
 ## If @code{"Jacobian"} is @code{"on"}, it specifies that @var{fcn},
 ## called with 2 output arguments, also returns the Jacobian matrix
 ## of right-hand sides at the requested point.  @code{"TolX"} specifies
 ## the termination tolerance in the unknown variables, while 
 ## @code{"TolFun"} is a tolerance for equations.  Default is @code{1e-7}
 ## for both @code{"TolX"} and @code{"TolFun"}.
 ##
 ## If @code{"AutoScaling"} is on, the variables will be automatically scaled
-## according to the column norms of the (estimated) Jacobian. As a result,
-## TolF becomes scaling-independent. By default, this option is off, because
+## according to the column norms of the (estimated) Jacobian.  As a result,
+## TolF becomes scaling-independent.  By default, this option is off, because
 ## it may sometimes deliver unexpected (though mathematically correct) results.
 ## 
 ## If @code{"Updating"} is "on", the function will attempt to use Broyden
 ## updates to update the Jacobian, in order to reduce the amount of jacobian
 ## calculations.
 ## If your user function always calculates the Jacobian (regardless of number
 ## of output arguments), this option provides no advantage and should be set to
 ## false.
diff --git a/scripts/plot/bar.m b/scripts/plot/bar.m
--- a/scripts/plot/bar.m
+++ b/scripts/plot/bar.m
@@ -61,17 +61,17 @@
 ##
 ## @example
 ## @group
 ## bar (rand(10,3))
 ## colormap (summer ())
 ## @end group
 ## @end example
 ##
-## will change the colors used for the bars. If you wish to force the bars to
+## will change the colors used for the bars.  If you wish to force the bars to
 ## particular colors, this can be achieved like
 ##
 ## @example
 ## @group
 ## h = bar (rand(10,3))
 ## set (h(1), "facecolor", "r")
 ## set (h(2), "facecolor", "g")
 ## set (h(3), "facecolor", "b")
diff --git a/scripts/plot/daspect.m b/scripts/plot/daspect.m
--- a/scripts/plot/daspect.m
+++ b/scripts/plot/daspect.m
@@ -11,17 +11,17 @@
 ## GNU General Public License for more details.
 ## 
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} daspect (@var{data_aspect_ratio})
-## Set the data aspect ratio of the current axes. The aspect ratio is
+## Set the data aspect ratio of the current axes.  The aspect ratio is
 ## a normalized 3 element vector representing the span of the x, y, and 
 ## z-axes limits.
 ## @deftypefnx {Function File} {@var{data_aspect_ratio} =} daspect ( )
 ## Return the data aspect ratio of the current axes.
 ## @deftypefnx {Function File} {} daspect (@var{mode})
 ## Set the data aspect ratio mode of the current axes.
 ## @deftypefnx {Function File} {@var{data_aspect_ratio_mode} =} daspect ("mode")
 ## Return the data aspect ratio mode of the current axes.
diff --git a/scripts/plot/pbaspect.m b/scripts/plot/pbaspect.m
--- a/scripts/plot/pbaspect.m
+++ b/scripts/plot/pbaspect.m
@@ -11,17 +11,17 @@
 ## GNU General Public License for more details.
 ## 
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} pbaspect (@var{plot_box_aspect_ratio})
-## Set the plot box aspect ratio of the current axes. The aspect ratio
+## Set the plot box aspect ratio of the current axes.  The aspect ratio
 ## is a normalized 3 element vector representing the rendered lengths of
 ## the x, y, and z-axes.
 ## @deftypefnx {Function File} {@var{plot_box_aspect_ratio} =} pbaspect ( )
 ## Return the plot box aspect ratio of the current axes.
 ## @deftypefnx {Function File} {} pbaspect (@var{mode})
 ## Set the plot box aspect ratio mode of the current axes.
 ## @deftypefnx {Function File} {@var{plot_box_aspect_ratio_mode} =} pbaspect ("mode")
 ## Return the plot box aspect ratio mode of the current axes.
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -137,17 +137,17 @@
 ## and devices are available.
 ##
 ##   When the ghostscript is sent to a printer the size is determined
 ## by the figure's "papersize" property.  When the ghostscript output 
 ## is sent to a file the size is determined by the figure's
 ## "paperposition" property.
 ##
 ## @itemx -append
-##   Appends the output to a pre-existing file. Presently only PDF,
+##   Appends the output to a pre-existing file.  Presently only PDF,
 ## and Postscript files are supported.
 ##
 ## @itemx -r@var{NUM}
 ##   Resolution of bitmaps in pixels per inch.  For both metafiles and 
 ## SVG the default is the screen resolution, for other it is 150 dpi.
 ## To specify screen resolution, use "-r0".
 ##
 ## @item -tight
diff --git a/scripts/polynomial/mkpp.m b/scripts/polynomial/mkpp.m
--- a/scripts/polynomial/mkpp.m
+++ b/scripts/polynomial/mkpp.m
@@ -23,18 +23,18 @@
 ## Construct a piece-wise polynomial structure from sample points
 ## @var{x} and coefficients @var{p}.  The i-th row of @var{p},
 ## @code{@var{p} (@var{i},:)}, contains the coefficients for the polynomial
 ## over the @var{i}-th interval, ordered from highest to 
 ## lowest.  There must be one row for each interval in @var{x}, so 
 ## @code{rows (@var{p}) == length (@var{x}) - 1}.  
 ##
 ## @var{p} may also be a multi-dimensional array, specifying a vector-valued
-## or array-valued polynomial. The shape is determined by @var{d}. If @var{d} is
-## not given, the default is @code{size (p)(1:end-2)}. If @var{d} is given, the
+## or array-valued polynomial.  The shape is determined by @var{d}.  If @var{d} is
+## not given, the default is @code{size (p)(1:end-2)}.  If @var{d} is given, the
 ## leading dimensions of @var{p} are reshaped to conform to @var{d}.
 ##
 ## @seealso{unmkpp, ppval, spline}
 ## @end deftypefn
 
 function pp = mkpp (x, P, d)
   if (nargin < 2 || nargin > 3)
     print_usage ();
diff --git a/scripts/polynomial/ppval.m b/scripts/polynomial/ppval.m
--- a/scripts/polynomial/ppval.m
+++ b/scripts/polynomial/ppval.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{yi} =} ppval (@var{pp}, @var{xi})
 ## Evaluate piece-wise polynomial @var{pp} at the points @var{xi}.  
 ## If @var{pp} is scalar-valued, the result is an array of the same shape as @var{xi}.
 ## Otherwise, the size of the result is @code{[pp.d, length(@var{xi})]} if
 ## @var{xi} is a vector, or @code{[pp.d, size(@var{xi})]} if it is a multi-dimensional
-## array. If pp.orient is 1, the dimensions are permuted as in interp1, to
+## array.  If pp.orient is 1, the dimensions are permuted as in interp1, to
 ## @code{[pp.d, length(@var{xi})]} and @code{[pp.d, size(@var{xi})]} respectively.
 ## @seealso{mkpp, unmkpp, spline}
 ## @end deftypefn 
 
 function yi = ppval (pp, xi)
 
   if (nargin != 2)
     print_usage ();
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -17,17 +17,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} union (@var{a}, @var{b})
 ## @deftypefnx{Function File} {} union (@var{a}, @var{b}, "rows")
 ## Return the set of elements that are in either of the sets @var{a} and
-## @var{b}. @var{a}, @var{b} may be cell arrays of string(s).
+## @var{b}.  @var{a}, @var{b} may be cell arrays of string(s).
 ## For example,
 ##
 ## @example
 ## @group
 ## union ([1, 2, 4], [2, 3, 5])
 ##      @result{} [1, 2, 3, 4, 5]
 ## @end group
 ## @end example
diff --git a/scripts/signal/unwrap.m b/scripts/signal/unwrap.m
--- a/scripts/signal/unwrap.m
+++ b/scripts/signal/unwrap.m
@@ -19,17 +19,17 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{b} =} unwrap (@var{a})
 ## @deftypefnx {Function File} {@var{b} =} unwrap (@var{a}, @var{tol})
 ## @deftypefnx {Function File} {@var{b} =} unwrap (@var{a}, @var{tol}, @var{dim})
 ## 
 ## Unwrap radian phases by adding multiples of 2*pi as appropriate to
 ## remove jumps greater than @var{tol}.  @var{tol} defaults to pi.
 ##
-## Unwrap will work along the the dimension @var{dim}.  If @var{dim}
+## Unwrap will work along the dimension @var{dim}.  If @var{dim}
 ## is unspecified it defaults to the first non-singleton dimension.
 ## @end deftypefn
 
 ## Author: Bill Lash <lash@tellabs.com>
 
 function retval = unwrap (a, tol, dim)
         
   if (nargin < 1 || nargin > 3)
diff --git a/scripts/specfun/nthroot.m b/scripts/specfun/nthroot.m
--- a/scripts/specfun/nthroot.m
+++ b/scripts/specfun/nthroot.m
@@ -30,17 +30,17 @@
 ## @group
 ## nthroot (-1, 3)
 ## @result{} -1
 ## (-1) ^ (1 / 3)
 ## @result{} 0.50000 - 0.86603i
 ## @end group
 ## @end example
 ## 
-## @var{n} must be a scalar. If @var{n} is not an even integer and @var{X} has
+## @var{n} must be a scalar.  If @var{n} is not an even integer and @var{X} has
 ## negative entries, an error is produced.
 ##
 ## @end deftypefn
 
 function y = nthroot (x, n)
 
   if (nargin != 2)
     print_usage ();
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * DLD-FUNCTIONS/cellfun.cc, DLD-FUNCTIONS/dot.cc, 
+        DLD-FUNCTIONS/gammainc.cc, DLD-FUNCTIONS/lookup.cc, 
+        DLD-FUNCTIONS/lu.cc, DLD-FUNCTIONS/luinc.cc, DLD-FUNCTIONS/onCleanup.cc,
+        DLD-FUNCTIONS/sparse.cc, DLD-FUNCTIONS/spparms.cc, DLD-FUNCTIONS/svd.cc,
+        data.cc, dirfns.cc, graphics.cc, mappers.cc, ov-cell.cc, ov-range.cc: 
+        Periodic grammar check of documentation to ensure a common format.
+
 2010-06-11  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/rand.cc : Add "reset" flag to reset the random
 	generators from the entropy pool.
 
 	* genprops.awk : Don't special case the color_property in the
 	factory default methods.
 
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -1344,17 +1344,17 @@ In other words, it is equivalent to the 
 n = length (lb);\n\
 sl = cell (1, n);\n\
 for i = 1:length (lb)\n\
   sl@{i@} = x(:,@dots{},lb(i):ub(i),@dots{},:);\n\
 endfor\n\
 @end group\n\
 @end example\n\
 \n\
-The position of the index is determined by @var{dim}. If not specified, slicing\n\
+The position of the index is determined by @var{dim}.  If not specified, slicing\n\
 is done along the first non-singleton dimension.\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
   if (nargin == 3 || nargin == 4)
     {
       octave_value x = args(0);
diff --git a/src/DLD-FUNCTIONS/dot.cc b/src/DLD-FUNCTIONS/dot.cc
--- a/src/DLD-FUNCTIONS/dot.cc
+++ b/src/DLD-FUNCTIONS/dot.cc
@@ -235,26 +235,28 @@ When @var{X} and @var{Y} are column vect
 
 /*
 
 */
 
 DEFUN_DLD (blkmm, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} blkmm (@var{x}, @var{y})\n\
-Computes products of matrix blocks. The blocks are given as\n\
+Computes products of matrix blocks.  The blocks are given as\n\
 2-dimensional subarrays of the arrays @var{x}, @var{y}.\n\
 The size of @var{x} must have the form @code{[m,k,@dots{}]} and\n\
-size of @var{y} must be @code{[k,n,@dots{}]}. The result is\n\
+size of @var{y} must be @code{[k,n,@dots{}]}.  The result is\n\
 then of size @code{[m,n,@dots{}]} and is computed as follows:\n\
 \n\
 @example\n\
+@group\n\
   for i = 1:prod (size (@var{x})(3:end))\n\
     @var{z}(:,:,i) = @var{x}(:,:,i) * @var{y}(:,:,i)\n\
   endfor\n\
+@end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
 
   if (nargin != 2)
     {
diff --git a/src/DLD-FUNCTIONS/gammainc.cc b/src/DLD-FUNCTIONS/gammainc.cc
--- a/src/DLD-FUNCTIONS/gammainc.cc
+++ b/src/DLD-FUNCTIONS/gammainc.cc
@@ -60,18 +60,18 @@ The standard notation is @math{P(a,x)}, 
 \n\
 If @var{a} is scalar, then @code{gammainc (@var{x}, @var{a})} is returned\n\
 for each element of @var{x} and vice versa.\n\
 \n\
 If neither @var{x} nor @var{a} is scalar, the sizes of @var{x} and\n\
 @var{a} must agree, and @var{gammainc} is applied element-by-element.\n\
 \n\
 By default the incomplete gamma function integrated from 0 to @var{x} is\n\
-computed. If \"upper\" is given then the complementary function integrated\n\
-for @var{x} to infinity is calculated. It should be noted that\n\
+computed.  If \"upper\" is given then the complementary function integrated\n\
+for @var{x} to infinity is calculated.  It should be noted that\n\
 \n\
 @example\n\
 gammainc (@var{x}, @var{a}) = 1 - gammainc (@var{x}, @var{a}, \"upper\")\n\
 @end example\n\
 @seealso{gamma, lgamma}\n\
 @end deftypefn")
 {
   octave_value retval;
diff --git a/src/DLD-FUNCTIONS/lookup.cc b/src/DLD-FUNCTIONS/lookup.cc
--- a/src/DLD-FUNCTIONS/lookup.cc
+++ b/src/DLD-FUNCTIONS/lookup.cc
@@ -199,17 +199,17 @@ within the table.  If @code{y(i) < table
 @code{idx(i)} is @code{n}.\n\
 \n\
 If the table is decreasing, then the tests are reversed.\n\
 For non-strictly monotonic tables, empty intervals are always skipped.\n\
 The result is undefined if @var{table} is not monotonic, or if\n\
 @var{table} contains a NaN.\n\
 \n\
 The complexity of the lookup is O(M*log(N)) where N is the size of @var{table}\n\
-and M is the size of @var{y}. In the special case when @var{y} is also sorted,\n\
+and M is the size of @var{y}.  In the special case when @var{y} is also sorted,\n\
 the complexity is O(min(M*log(N),M+N)).\n\
 \n\
 @var{table} and @var{y} can also be cell arrays of strings\n\
 (or @var{y} can be a single string).  In this case, string lookup\n\
 is performed using lexicographical comparison.\n\
 \n\
 If @var{opts} is specified, it shall be a string with letters indicating\n\
 additional options.\n\
diff --git a/src/DLD-FUNCTIONS/lu.cc b/src/DLD-FUNCTIONS/lu.cc
--- a/src/DLD-FUNCTIONS/lu.cc
+++ b/src/DLD-FUNCTIONS/lu.cc
@@ -68,17 +68,17 @@ DEFUN_DLD (lu, args, nargout,
 @deftypefnx {Loadable Function} {[@var{l}, @var{u}, @var{p}] =} lu (@var{a})\n\
 @deftypefnx {Loadable Function} {[@var{l}, @var{u}, @var{p}, @var{q}] =} lu (@var{s})\n\
 @deftypefnx {Loadable Function} {[@var{l}, @var{u}, @var{p}, @var{q}, @var{r}] =} lu (@var{s})\n\
 @deftypefnx {Loadable Function} {[@dots{}] =} lu (@var{s}, @var{thres})\n\
 @deftypefnx {Loadable Function} {@var{y} =} lu (@dots{})\n\
 @deftypefnx {Loadable Function} {[@dots{}] =} lu (@dots{}, 'vector')\n\
 @cindex LU decomposition\n\
 Compute the LU decomposition of @var{a}.  If @var{a} is full subroutines from\n\
-@sc{lapack} are used and if @var{a} is sparse then UMFPACK is used.  The\n\
+@sc{lapack} are used and if @var{a} is sparse then @sc{umfpack} is used.  The\n\
 result is returned in a permuted form, according to the optional return\n\
 value @var{p}.  For example, given the matrix @code{a = [1, 2; 3, 4]},\n\
 \n\
 @example\n\
 [l, u, p] = lu (a)\n\
 @end example\n\
 \n\
 @noindent\n\
@@ -113,19 +113,19 @@ preserving column transformation @var{Q}
 \n\
 Called with a fifth output argument and a sparse input matrix, then\n\
 @dfn{lu} attempts to use a scaling factor @var{r} on the input matrix\n\
 such that @code{@var{p} * (@var{r} \\ @var{a}) * @var{q} = @var{l} * @var{u}}.\n\
 This typically leads to a sparser and more stable factorization.\n\
 \n\
 An additional input argument @var{thres}, that defines the pivoting\n\
 threshold can be given.  @var{thres} can be a scalar, in which case\n\
-it defines UMFPACK pivoting tolerance for both symmetric and unsymmetric\n\
+it defines @sc{umfpack} pivoting tolerance for both symmetric and unsymmetric\n\
 cases.  If @var{thres} is a two element vector, then the first element\n\
-defines the pivoting tolerance for the unsymmetric UMFPACK pivoting\n\
+defines the pivoting tolerance for the unsymmetric @sc{umfpack} pivoting\n\
 strategy and the second the symmetric strategy.  By default, the values\n\
 defined by @code{spparms} are used and are by default @code{[0.1, 0.001]}.\n\
 \n\
 Given the string argument 'vector', @dfn{lu} returns the values of @var{p}\n\
 @var{q} as vector values, such that for full matrix, @code{@var{a}\n\
 (@var{p},:) = @var{l} * @var{u}}, and @code{@var{r}(@var{p},:) * @var{a}\n\
 (:, @var{q}) = @var{l} * @var{u}}.\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/luinc.cc b/src/DLD-FUNCTIONS/luinc.cc
--- a/src/DLD-FUNCTIONS/luinc.cc
+++ b/src/DLD-FUNCTIONS/luinc.cc
@@ -49,17 +49,17 @@ is determined by the second argument to 
 \n\
 Called with a second argument of '0', the zero-level incomplete\n\
 LU factorization is produced.  This creates a factorization of @var{a}\n\
 where the position of the non-zero arguments correspond to the same\n\
 positions as in the matrix @var{a}.\n\
 \n\
 Alternatively, the fill-in of the incomplete LU factorization can\n\
 be controlled through the variable @var{droptol} or the structure\n\
-@var{opts}.  The UMFPACK multifrontal factorization code by Tim A.\n\
+@var{opts}.  The @sc{umfpack} multifrontal factorization code by Tim A.\n\
 Davis is used for the incomplete LU factorization, (availability\n\
 @url{http://www.cise.ufl.edu/research/sparse/umfpack/})\n\
 \n\
 @var{droptol} determines the values below which the values in the LU\n\
 factorization are dropped and replaced by zero.  It must be a positive\n\
 scalar, and any values in the factorization whose absolute value are\n\
 less than this value are dropped, expect if leaving them increase the\n\
 sparsity of the matrix.  Setting @var{droptol} to zero results in a\n\
diff --git a/src/DLD-FUNCTIONS/onCleanup.cc b/src/DLD-FUNCTIONS/onCleanup.cc
--- a/src/DLD-FUNCTIONS/onCleanup.cc
+++ b/src/DLD-FUNCTIONS/onCleanup.cc
@@ -247,17 +247,17 @@ octave_oncleanup::print_raw (std::ostrea
 }
 
 DEFUN_DLD (onCleanup, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{c} =} onCleanup (@var{action})\n\
 Creates a special object that executes a given function upon destruction.\n\
 If the object is copied to multiple variables (or cell or struct array elements)\n\
 or returned from a function, @var{action} will be executed after clearing the last\n\
-copy of the object. Note that if multiple local onCleanup variables are created, the\n\
+copy of the object.  Note that if multiple local onCleanup variables are created, the\n\
 order in which they are called is unspecified.\n\
 @seealso{unwind_protect}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
diff --git a/src/DLD-FUNCTIONS/sparse.cc b/src/DLD-FUNCTIONS/sparse.cc
--- a/src/DLD-FUNCTIONS/sparse.cc
+++ b/src/DLD-FUNCTIONS/sparse.cc
@@ -203,18 +203,18 @@ to have a common size.\n\
 
    return retval;
 }
 
 DEFUN_DLD (spalloc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} spalloc (@var{m}, @var{n}, @var{nz})\n\
 Creates a @var{m}-by-@var{n} sparse matrix with preallocated space for at most\n\
-@var{nz} nonzero elements. This is useful for building the matrix incrementally\n\
-by a sequence of indexed assignments. Subsequent indexed assignments will reuse\n\
+@var{nz} nonzero elements.  This is useful for building the matrix incrementally\n\
+by a sequence of indexed assignments.  Subsequent indexed assignments will reuse\n\
 the pre-allocated memory, provided they are of one of the simple forms\n\
 \n\
 @itemize\n\
 @item @code{@var{s}(I:J) = @var{x}}\n\
 @item @code{@var{s}(:,I:J) = @var{x}}\n\
 @item @code{@var{s}(K:L,I:J) = @var{x}}\n\
 @end itemize\n\
 \n\
@@ -222,17 +222,17 @@ the pre-allocated memory, provided they 
 \n\
 @itemize\n\
 @item the assignment does not decrease nnz(@var{S}).\n\
 @item after the assignment, nnz(@var{S}) does not exceed @var{nz}.\n\
 @item no index is out of bounds.\n\
 @end itemize\n\
 \n\
 Partial movement of data may still occur, but in general the assignment will be more\n\
-memory and time-efficient under these circumstances. In particular, it is possible\n\
+memory and time-efficient under these circumstances.  In particular, it is possible\n\
 to efficiently build a pre-allocated sparse matrix from contiguous block of columns.\n\
 \n\
 The amount of preallocated memory for a given matrix may be queried using the function\n\
 @code{nzmax}.\n\
 @seealso{nzmax, sparse}\n\
 @end deftypefn")
 {
    octave_value retval;
diff --git a/src/DLD-FUNCTIONS/spparms.cc b/src/DLD-FUNCTIONS/spparms.cc
--- a/src/DLD-FUNCTIONS/spparms.cc
+++ b/src/DLD-FUNCTIONS/spparms.cc
@@ -66,24 +66,24 @@ Included for compatibility.  Not used.  
 Included for compatibility.  Not used.  (default 0.5)\n\
 @item autommd\n\
 Flag whether the LU/QR and the '\\' and '/' operators will automatically\n\
 use the sparsity preserving mmd functions (default 1)\n\
 @item autoamd\n\
 Flag whether the LU and the '\\' and '/' operators will automatically\n\
 use the sparsity preserving amd functions (default 1)\n\
 @item piv_tol\n\
-The pivot tolerance of the UMFPACK solvers (default 0.1)\n\
+The pivot tolerance of the @sc{umfpack} solvers (default 0.1)\n\
 @item sym_tol\n\
-The pivot tolerance of the UMFPACK symmetric solvers (default 0.001)\n\
+The pivot tolerance of the @sc{umfpack} symmetric solvers (default 0.001)\n\
 @item bandden\n\
 The density of non-zero elements in a banded matrix before it is treated\n\
 by the @sc{lapack} banded solvers (default 0.5)\n\
 @item umfpack\n\
-Flag whether the UMFPACK or mmd solvers are used for the LU, '\\' and\n\
+Flag whether the @sc{umfpack} or mmd solvers are used for the LU, '\\' and\n\
 '/' operations (default 1)\n\
 @end table\n\
 \n\
 The value of individual keys can be set with @code{spparms (@var{key},\n\
 @var{val})}.  The default values can be restored with the special keyword\n\
 'defaults'.  The special keyword 'tight' can be used to set the mmd solvers\n\
 to attempt for a sparser solution at the potential cost of longer running\n\
 time.\n\
diff --git a/src/DLD-FUNCTIONS/svd.cc b/src/DLD-FUNCTIONS/svd.cc
--- a/src/DLD-FUNCTIONS/svd.cc
+++ b/src/DLD-FUNCTIONS/svd.cc
@@ -402,17 +402,17 @@ decomposition, eliminating the unnecessa
 %!error <Invalid call to svd.*> svd ([1, 2; 4, 5], 2, 3);
 %!error <Invalid call to svd.*> [u, v] = svd ([1, 2; 3, 4]);
 
 */
 
 DEFUN_DLD (svd_driver, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{old} =} svd_driver (@var{new})\n\
-Sets or queries the underlying LAPACK driver used by svd.\n\
-Currently recognized are \"gesvd\" and \"gesdd\". Default is \"gesvd\".\n\
+Sets or queries the underlying @sc{lapack} driver used by svd.\n\
+Currently recognized are \"gesvd\" and \"gesdd\".  Default is \"gesvd\".\n\
 @seealso{svd}\n\
 @end deftypefn")
 {
   static const char *driver_names[] = { "gesvd", "gesdd", 0 };
 
   return SET_INTERNAL_VARIABLE_CHOICES (svd_driver, driver_names);
 }
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -333,26 +333,28 @@ do_hypot (const octave_value& x, const o
     }
 
   return retval;
 }
 
 DEFUN (hypot, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} hypot (@var{x}, @var{y})\n\
-@deftypefnx {Built-in Function} {} hypot (@var{x}, @var{y}, @var{z}, ...)\n\
+@deftypefnx {Built-in Function} {} hypot (@var{x}, @var{y}, @var{z}, @dots{})\n\
 Compute the element-by-element square root of the sum of the squares of\n\
 @var{x} and @var{y}.  This is equivalent to\n\
 @code{sqrt (@var{x}.^2 + @var{y}.^2)}, but calculated in a manner that\n\
 avoids overflows for large values of @var{x} or @var{y}.\n\
 @code{hypot} can also be called with more than 2 arguments; in this case,\n\
 the arguments are accumulated from left to right:\n\
 @example\n\
+@group\n\
   hypot (hypot (@var{x}, @var{y}), @var{z})\n\
-  hypot (hypot (hypot (@var{x}, @var{y}), @var{z}), @var{w}) etc.\n\
+  hypot (hypot (hypot (@var{x}, @var{y}), @var{z}), @var{w}), etc.\n\
+@end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 2)
@@ -1891,18 +1893,20 @@ odd definition is used for compatibility
 
 DEFUN (ndims, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} ndims (@var{a})\n\
 Return the number of dimensions of @var{a}.\n\
 For any array, the result will always be larger than or equal to 2.\n\
 Trailing singleton dimensions are not counted.\n\
 @example\n\
+@group\n\
   ndims (ones (4, 1, 2, 1)\n\
      @result{} 3\n\
+@end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).ndims ();
   else
@@ -2770,17 +2774,17 @@ complex ([1, 2], [3, 4])\n\
 
   return retval;
 }
 
 DEFUN (isreal, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isreal (@var{x})\n\
 Return true if @var{x} is a non-complex matrix or scalar.\n\
-For compatibility with Matlab, this includes logical and character\n\
+For compatibility with @sc{matlab}, this includes logical and character\n\
 matrices.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_real_type ();
   else
@@ -2804,17 +2808,17 @@ the number of columns, or both are zero)
     print_usage ();
 
   return retval;
 }
 
 DEFUN (isnumeric, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isnumeric (@var{x})\n\
-Return nonzero if @var{x} is a numeric object, i.e. an integer, real or complex array.\n\
+Return nonzero if @var{x} is a numeric object, i.e., an integer, real or complex array.\n\
 Logical and character arrays are not considered to be numeric.\n\
 @seealso{ischar, islogical, isinteger}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_numeric_type ();
@@ -4432,17 +4436,17 @@ by an empty argument.\n\
 %!error reshape (1, 2, 3, 4);
 
  */
 
 DEFUN (vec, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} vec (@var{x})\n\
 Return the vector obtained by stacking the columns of the matrix @var{x}\n\
-one above the other. Equivalent to @code{@var{x}(:)}. Useful for functional\n\
+one above the other.  Equivalent to @code{@var{x}(:)}.  Useful for functional\n\
 programming.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       octave_value colon (octave_value::magic_colon_t);
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -549,26 +549,25 @@ Given an array of pattern strings (as a 
 them, or an empty cell array if no patterns match.  The pattern strings are \n\
 interpreted as filename globbing patterns (as they are used by unix shells).\n\
 Within a pattern\n\
 @table @code\n\
 @itemx *\n\
 matches any string, including the null string,\n\
 @itemx ?\n\
 matches any single character, and\n\
-@item [...]\n\
+@item [@dots{}]\n\
 matches any of the enclosed characters.\n\
 @end table\n\
 \n\
 Tilde expansion\n\
 is performed on each of the patterns before looking for matching file\n\
 names.  For example:\n\
 \n\
 @example\n\
-@group\n\
 ls\n\
      @result{}\n\
         file1  file2  file3  myfile1 myfile1b \n\
 glob (\"*file1\")\n\
      @result{}\n\
         @{\n\
           [1,1] = file1\n\
           [2,1] = myfile1\n\
@@ -579,17 +578,16 @@ glob (\"myfile?\")\n\
           [1,1] = myfile1\n\
         @}\n\
 glob (\"file[12]\")\n\
      @result{}\n\
         @{\n\
           [1,1] = file1\n\
           [2,1] = file2\n\
         @}\n\
-@end group\n\
 @end example\n\
 @seealso{dir, ls, stat, readdir, regexp}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -4944,19 +4944,19 @@ There are three ways how to give the pro
 \n\
 Here, each @var{property} is a string containing the property name, each\n\
 @var{value} is a value of the appropriate type for the property.\n\
 @item as a cell array of strings @var{properties} containing property names\n\
 and a cell array @var{values} containing property values.\n\
 \n\
 In this case, the number of columns of @var{values} must match the number of\n\
 elements in @var{properties}.  The first column of @var{values} contains values\n\
-for the first entry in @var{properties} etc..  The number of rows of @var{values}\n\
-must be 1 or match the number of elements of @var{h}. In the first case, each\n\
-handle in @var{h} will be assigned the same values. In the latter case, the\n\
+for the first entry in @var{properties}, etc.  The number of rows of @var{values}\n\
+must be 1 or match the number of elements of @var{h}.  In the first case, each\n\
+handle in @var{h} will be assigned the same values.  In the latter case, the\n\
 first handle in @var{h} will be assigned the values from the first row of\n\
 @var{values} and so on.\n\
 @item as a structure array @var{pv}\n\
 \n\
 Here, the field names of @var{pv} represent the property names, and the field\n\
 values give the property values.  In contrast to the previous case, all\n\
 elements of @var{pv} will be set in all handles in @var{h} independent of\n\
 the dimensions of @var{pv}.\n\
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -350,17 +350,17 @@ Compute the inverse hyperbolic tangent f
 %!error atanh ();
 %!error atanh (1, 2);
 
 */
 
 DEFUN (cbrt, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} cbrt (@var{x})\n\
-Return the real cube root of @var{x}. Unlike @code{@var{x}^(1/3)},\n\
+Return the real cube root of @var{x}.  Unlike @code{@var{x}^(1/3)},\n\
 the result will be negative if @var{x} is negative.\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).cbrt ();
   else
     print_usage ();
@@ -596,17 +596,17 @@ erf (z) = (2/sqrt (pi)) | e^(-t^2) dt\n\
 
 
 
 */
 
 DEFUN (erfinv, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfinv (@var{x})\n\
-Computes the inverse error function, i.e. @var{y} such that\n\
+Computes the inverse error function, i.e., @var{y} such that\n\
 @example\n\
   erf(@var{y}) == @var{x}\n\
 @end example\n\
 @seealso{erfc, erf}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -1363,17 +1363,17 @@ array @var{string}.\n\
 }
 
 DEFUN (struct2cell, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} struct2cell (@var{S})\n\
 Create a new cell array from the objects stored in the struct object.\n\
 If @var{f} is the number of fields in the structure, the resulting\n\
 cell array will have a dimension vector corresponding to\n\
-@code{[@var{F} size(@var{S})]}. For example:\n\
+@code{[@var{F} size(@var{S})]}.  For example:\n\
 \n\
 @example\n\
 @group\n\
   s = struct('name', @{'Peter', 'Hannah', 'Robert'@},\n\
              'age', @{23, 16, 3@});\n\
   c = struct2cell(s)\n\
      @result{} c = @{1x1x3 Cell Array@}\n\
   c(1,1,:)(:)\n\
diff --git a/src/ov-range.cc b/src/ov-range.cc
--- a/src/ov-range.cc
+++ b/src/ov-range.cc
@@ -607,15 +607,15 @@ octave_range::as_mxArray (void) const
   return retval;
 }
 
 DEFUN (allow_noninteger_range_as_index, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} allow_noninteger_range_as_index ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} allow_noninteger_range_as_index (@var{new_val})\n\
 Query or set the internal variable that controls whether non-integer\n\
-ranges are allowed as indices.  This might be useful for Matlab\n\
+ranges are allowed as indices.  This might be useful for @sc{matlab}\n\
 compatibility; however, it is still not entirely compatible because\n\
-Matlab treats the range expression differently in different contexts.\n\
+@sc{matlab} treats the range expression differently in different contexts.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (allow_noninteger_range_as_index);
 }
