# HG changeset patch
# User jwe
# Date 822896309 0
#      Mon Jan 29 06:18:29 1996 +0000
# Node ID 8173b1fa052db1e079c778551c3934217248fbbc
# Parent  401f4226c63911614d74fc07962fc45ae6df308a
[project @ 1996-01-29 06:10:18 by jwe]

diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -21,24 +21,27 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cerrno>
+#include <cstdio>
+#include <cstdlib>
 #include <cstring>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
 #include "file-ops.h"
+#include "lo-error.h"
 #include "statdefs.h"
 
 // These must come after <sys/types.h> and <sys/stat.h>.
 
 #include "safe-lstat.h"
 #include "safe-stat.h"
 
 // XXX FIXME XXX -- the is_* and mode_as_string functions are only valid
@@ -216,16 +219,36 @@ oct_rename (const string& from, const st
 }
 
 int
 oct_rmdir (const string& name)
 {
   return rmdir (name.c_str ());
 }
 
+string
+oct_tempnam (void)
+{
+  string retval;
+
+  char *tmp = tempnam (0, "oct-");
+
+  if (tmp)
+    {
+      retval = tmp;
+
+      free (tmp);
+    }
+  else
+    (*current_liboctave_error_handler) ("can't open temporary file!");
+
+  return retval;
+}
+
+
 int
 oct_umask (mode_t mode)
 {
 #if defined (HAVE_UMASK)
   return umask (mode);
 #else
   return 0;
 #endif
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1379,17 +1379,17 @@ do_scanf (const char *type, const Octave
 	    octave_command_history.add (xstring);
 	}
       else
 	{
 	  xstring_str = args(0).string_value ();
 	  xstring = xstring_str.c_str ();
 	}
 
-      tmp_file = octave_tmp_file_name ();
+      tmp_file = oct_tempnam ();
 
       fptr = fopen (tmp_file.c_str (), "w+");
       if (! fptr)
 	{
 	  error ("%s: error opening temporary file", type);
 	  return retval;
 	}
       tmp_file_open = 1;
@@ -2508,16 +2508,30 @@ DEFUN ("lstat", Flstat, Slstat, 10,
 	}
     }
   else
     print_usage ("stat");
 
   return retval;
 }
 
+DEFUN ("octave_tmp_file_name", Foctave_tmp_file_name,
+       Soctave_tmp_file_name, 10,
+ "octave_tmp_file_name ()")
+{
+  tree_constant retval;
+
+  if (args.length () == 0)
+    retval = oct_tempnam ();
+  else
+    print_usage ("octave_tmp_file_name");
+
+  return retval;
+}
+
 static int
 convert (int x, int ibase, int obase)
 {
   int retval = 0;
 
   int tmp = x % obase;
 
   if (tmp > ibase - 1)
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -42,16 +42,17 @@ Software Foundation, Inc.
 #include <strstream.h>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
 #include "cmd-hist.h"
+#include "file-ops.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "oct-hist.h"
 #include "oct-obj.h"
 #include "pager.h"
@@ -382,17 +383,17 @@ mk_tmp_hist_file (int argc, const string
   if (hist_end < hist_beg)
     {
       int t = hist_end;
       hist_end = hist_beg;
       hist_beg = t;
       reverse = 1;
     }
 
-  string name = octave_tmp_file_name ();
+  string name = oct_tempnam ();
 
   fstream file (name.c_str (), ios::out);
 
   if (! file)
     {
       error ("%s: couldn't open temporary file `%s'", warn_for,
 	     name.c_str ());
       return retval;
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -40,16 +40,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
 #include "SLStack.h"
 #include "procstream.h"
 
+#include "file-ops.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "load-save.h"
 #include "mappers.h"
@@ -909,17 +910,17 @@ subplot_list::print_code (ostream& os)
 	    os << ",";
 	}
     }
 }
 
 string
 save_in_tmp_file (tree_constant& t, int ndim, int parametric)
 {
-  string name = octave_tmp_file_name ();
+  string name = oct_tempnam ();
 
   if (! name.empty ())
     {
       ofstream file (name.c_str ());
 
       if (file)
 	{
 	  switch (ndim)
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -161,51 +161,16 @@ read_until (istream& stream, char charac
       grow_size *= 2;
       goto get_more;
     }
 
   return buf;
 }
 #endif
 
-// Get a temporary file name.
-
-string
-octave_tmp_file_name (void)
-{
-  string retval;
-
-  char *tmp = tempnam (0, "oct-");
-
-  if (tmp)
-    {
-      retval = tmp;
-
-      free (tmp);
-    }
-  else
-    error ("can't open temporary file!");
-
-  return retval;
-}
-
-DEFUN ("octave_tmp_file_name", Foctave_tmp_file_name,
-       Soctave_tmp_file_name, 10,
- "octave_tmp_file_name ()")
-{
-  tree_constant retval;
-
-  if (args.length () == 0)
-    retval = octave_tmp_file_name ();
-  else
-    print_usage ("octave_tmp_file_name");
-
-  return retval;
-}
-
 // Return to the main command loop in octave.cc.
 
 extern "C" void
 jump_to_top_level (void)
 {
   run_all_unwind_protects ();
 
   longjmp (toplevel, 1);
