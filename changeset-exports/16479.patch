# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365529663 14400
#      Tue Apr 09 13:47:43 2013 -0400
# Node ID 7a71ea0b7ae90cd4a548db92098af32017a6773f
# Parent  079ec7ce60e07e93e95b1b64901d07496be4cd21
eliminate event listener class

* main-window.h, main-window.cc (main_window::exit): New function.
(main_window::_ocxtave_qt_event_listener): Delete member variable and
all uses.
main_window::construct_octave_qt_link): connect
_octave_qt_link::octave_thread_finished to main_window::exit.

* octave-qt-event-listener.h, octave-qt-event-listener.cc: Delete.
* libgui/src/module.mk (octave_gui_MOC, noinst_HEADERS,
src_libgui_src_la_SOURCES): Update lists.

* octave-qt-link.h, octave-qt-link.cc
(octave_qt_link::octave_thread_finished): New signal.
(octave_qt_link::~octave_qt_link): Delete main_thread.
(octave_qt_link::octave_qt_link): Connect main_thread::finished and
main_thread::terminated to octave_qt_link::octave_thread_finished
signal.

* octave-event-listener.h: Delete.
* libinterp/interp-core/module.mk (INTERPFCN_INC): Remove it from the
list.

* octave-link.h, octave-link.cc (octave_exit_hook): Delete.
(octave_link::discard_events, octave_link::do_discard_events,
octave_link::exit, octave_link::do_exit): New functions.
(octave_link::event_listener): Delete member variable and all uses.
(octave_link::about_to_exit, octave_link::register_event_listener,
octave_link::do_about_to_exit,
octave_link::do_register_event_listener): Delete.
(octave_link::accepting_events): New member variable.
(octave_link::octave_link): Set octave_exit to octave_link::exit.
Initialize accepting_events.
(octave_link::do_post_event): Only add to gui_event_queue if
accepting_events is true.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -86,19 +86,16 @@ main_window::~main_window (void)
   delete doc_browser_window;
   delete editor_window;
   delete workspace_window;
 
   // Clean up all dynamically created objects to ensure they are
   // deleted before this main_window is.  Otherwise, some will be
   // attached to a non-existent parent.
 
-  if (_octave_qt_event_listener)
-    delete _octave_qt_event_listener;
-
   octave_link::connect_link (0);
   delete _octave_qt_link;
 }
 
 void
 main_window::focus_command_window (void)
 {
   command_window->focus ();
@@ -261,16 +258,22 @@ main_window::notice_settings (const QSet
 
 void
 main_window::prepare_to_exit (void)
 {
   write_settings ();
 }
 
 void
+main_window::exit (void)
+{
+  qApp->quit ();
+}
+
+void
 main_window::reset_windows ()
 {
   // TODO: Implement.
 }
 
 void
 main_window::change_directory (const QString& dir)
 {
@@ -572,31 +575,30 @@ main_window::construct (void)
 
   if (win_y > 720)
     win_y = 720;
 
   setGeometry (0, 0, win_x, win_y);
 
   setStatusBar (status_bar);
 
-  _octave_qt_event_listener = new octave_qt_event_listener ();
-
-  // FIXME -- is it possible to eliminate the event_listenter?
-
   construct_octave_qt_link ();
 
   QDir curr_dir;
   set_current_working_directory (curr_dir.absolutePath ());
 }
 
 void
 main_window::construct_octave_qt_link (void)
 {
   _octave_qt_link = new octave_qt_link ();
 
+  connect (_octave_qt_link, SIGNAL (octave_thread_finished ()),
+           this, SLOT (exit ()));
+
   connect (_octave_qt_link,
            SIGNAL (set_workspace_signal
                    (const QString&, const QStringList&, const QStringList&,
                     const QStringList&, const QStringList&)),
            _workspace_model,
            SLOT (set_workspace
                  (const QString&, const QStringList&,const QStringList&,
                   const QStringList&, const QStringList&)));
@@ -643,18 +645,16 @@ main_window::construct_octave_qt_link (v
   connect (_octave_qt_link,
            SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
            editor_window,
            SLOT (handle_delete_debugger_pointer_request (const QString&, int)));
 
   _octave_qt_link->execute_interpreter ();
 
   octave_link::connect_link (_octave_qt_link);
-
-  octave_link::register_event_listener (_octave_qt_event_listener);
 }
 
 void
 main_window::construct_menu_bar (void)
 {
   QMenuBar *menu_bar = menuBar ();
 
   construct_file_menu (menu_bar);
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -46,17 +46,16 @@ along with Octave; see the file COPYING.
 // Own includes
 #include "resource-manager.h"
 #include "workspace-model.h"
 #include "workspace-view.h"
 #include "history-dock-widget.h"
 #include "files-dock-widget.h"
 #include "terminal-dock-widget.h"
 #include "documentation-dock-widget.h"
-#include "octave-qt-event-listener.h"
 #include "octave-qt-link.h"
 
 /**
  * \class MainWindow
  *
  * Represents the main window.
  */
 class main_window : public QMainWindow
@@ -88,16 +87,17 @@ public slots:
   void open_online_documentation_page (void);
   void open_bug_tracker_page (void);
   void open_octave_forge_page (void);
   void open_agora_page (void);
   void process_settings_dialog_request (void);
   void show_about_octave (void);
   void notice_settings (const QSettings *settings);
   void prepare_to_exit (void);
+  void exit (void);
   void reset_windows (void);
 
   void change_directory (const QString& dir);
   void browse_for_directory (void);
   void set_current_working_directory (const QString& dir);
   void change_directory_up (void);
   void accept_directory_line_edit (void);
 
@@ -201,17 +201,15 @@ private:
 
   // Toolbars.
   QComboBox *_current_directory_combo_box;
   static const int current_directory_width = 300;
   static const int current_directory_max_visible = 16;
   static const int current_directory_max_count = 16;
   QLineEdit *_current_directory_line_edit;
 
-  octave_qt_event_listener *_octave_qt_event_listener;
-
   octave_qt_link *_octave_qt_link;
 
   // Flag for closing whole application.
   bool _closing;
 };
 
 #endif // MAINWINDOW_H
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -67,17 +67,16 @@ octave_gui_MOC += \
   src/m-editor/moc-lexer-octave-gui.cc
 endif
 
 octave_gui_MOC += \
   src/moc-documentation-dock-widget.cc \
   src/moc-files-dock-widget.cc \
   src/moc-history-dock-widget.cc \
   src/moc-main-window.cc \
-  src/moc-octave-qt-event-listener.cc \
   src/moc-octave-qt-link.cc \
   src/moc-settings-dialog.cc \
   src/moc-terminal-dock-widget.cc \
   src/moc-color-picker.cc \
   src/moc-welcome-wizard.cc \
   src/moc-workspace-model.cc \
   src/moc-workspace-view.cc \
   src/qtinfo/moc-parser.cc \
@@ -102,17 +101,16 @@ noinst_HEADERS += \
   src/m-editor/file-editor-interface.h \
   src/m-editor/file-editor-tab.h \
   src/m-editor/file-editor.h \
   src/m-editor/find-dialog.h \
   src/m-editor/lexer-octave-gui.h \
   src/main-window.h \
   src/octave-gui.h \
   src/octave-main-thread.h \
-  src/octave-qt-event-listener.h \
   src/octave-qt-link.h \
   src/qtinfo/parser.h \
   src/qtinfo/webinfo.h \
   src/resource-manager.h \
   src/settings-dialog.h \
   src/terminal-dock-widget.h \
   src/color-picker.h \
   src/welcome-wizard.h \
@@ -125,17 +123,16 @@ src_libgui_src_la_SOURCES = \
   src/history-dock-widget.cc \
   src/m-editor/file-editor-tab.cc \
   src/m-editor/file-editor.cc \
   src/m-editor/find-dialog.cc \
   src/m-editor/lexer-octave-gui.cc \
   src/main-window.cc \
   src/octave-gui.cc \
   src/octave-main-thread.cc \
-  src/octave-qt-event-listener.cc \
   src/octave-qt-link.cc \
   src/qtinfo/parser.cc \
   src/qtinfo/webinfo.cc \
   src/resource-manager.cc \
   src/settings-dialog.cc \
   src/terminal-dock-widget.cc \
   src/color-picker.cc \
   src/welcome-wizard.cc \
diff --git a/libgui/src/octave-qt-event-listener.cc b/libgui/src/octave-qt-event-listener.cc
deleted file mode 100644
--- a/libgui/src/octave-qt-event-listener.cc
+++ /dev/null
@@ -1,54 +0,0 @@
-/*
-
-Copyright (C) 2011-2012 Jacob Dawid
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include <iostream>
-
-#include "octave-qt-event-listener.h"
-#include <QApplication>
-
-octave_qt_event_listener::octave_qt_event_listener (QObject *p)
-  : QObject (p), octave_event_listener ()
-{
-}
-
-void
-octave_qt_event_listener::current_directory_has_changed (const std::string& directory)
-{
-  emit current_directory_has_changed_signal
-    (QString::fromUtf8 (directory.data (), directory.size ()));
-}
-
-void
-octave_qt_event_listener::update_workspace (void)
-{
-  emit update_workspace_signal ();
-}
-
-void
-octave_qt_event_listener::about_to_exit ()
-{
-  qApp->quit ();
-}
diff --git a/libgui/src/octave-qt-event-listener.h b/libgui/src/octave-qt-event-listener.h
deleted file mode 100644
--- a/libgui/src/octave-qt-event-listener.h
+++ /dev/null
@@ -1,46 +0,0 @@
-/*
-
-Copyright (C) 2011-2012 Jacob Dawid
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifndef OCTAVEQTEVENTLISTENER_H
-#define OCTAVEQTEVENTLISTENER_H
-
-#include <QObject>
-#include <QString>
-#include "octave-event-listener.h"
-
-class octave_qt_event_listener
-  : public QObject, public octave_event_listener
-{
-  Q_OBJECT
-  public:
-  octave_qt_event_listener (QObject *parent = 0);
-
-  void current_directory_has_changed (const std::string& directory);
-  void update_workspace (void);
-  void about_to_exit ();
-
-signals:
-  void current_directory_has_changed_signal (const QString& directory);
-  void update_workspace_signal (void);
-};
-
-#endif // OCTAVEQTEVENTLISTENER_H
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -32,16 +32,23 @@ along with Octave; see the file COPYING.
 
 #include "workspace-element.h"
 
 #include "octave-qt-link.h"
 
 octave_qt_link::octave_qt_link (void)
   : octave_link (), main_thread (new octave_main_thread)
 {
+  connect (main_thread, SIGNAL (finished ()),
+           this, SIGNAL (octave_thread_finished ()));
+}
+
+octave_qt_link::~octave_qt_link (void)
+{
+  delete main_thread;
 }
 
 void
 octave_qt_link::execute_interpreter (void)
 {
   main_thread->execute_interpreter ();
 }
 
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -46,17 +46,17 @@ along with Octave; see the file COPYING.
 class octave_qt_link : public QObject, public octave_link
 {
   Q_OBJECT
 
 public:
 
   octave_qt_link (void);
 
-  ~octave_qt_link (void) { }
+  ~octave_qt_link (void);
 
   void execute_interpreter (void);
 
   bool do_edit_file (const std::string& file);
 
   void do_change_directory (const std::string& dir);
 
   void do_set_workspace (const std::list<workspace_element>& ws);
@@ -110,11 +110,13 @@ signals:
   void enter_debugger_signal (void);
   void exit_debugger_signal (void);
 
   void update_breakpoint_marker_signal (bool insert, const QString& file,
                                         int line);
 
   void insert_debugger_pointer_signal (const QString&, int);
   void delete_debugger_pointer_signal (const QString&, int);
+
+  void octave_thread_finished (void);
 };
 
 #endif
diff --git a/libinterp/interp-core/module.mk b/libinterp/interp-core/module.mk
--- a/libinterp/interp-core/module.mk
+++ b/libinterp/interp-core/module.mk
@@ -30,17 +30,16 @@ INTERP_CORE_INC = \
   interp-core/ls-mat-ascii.h \
   interp-core/ls-mat4.h \
   interp-core/ls-mat5.h \
   interp-core/ls-oct-binary.h \
   interp-core/ls-utils.h \
   interp-core/mex.h \
   interp-core/mexproto.h \
   interp-core/mxarray.in.h \
-  interp-core/octave-event-listener.h \
   interp-core/oct-errno.h \
   interp-core/oct-fstrm.h \
   interp-core/oct-hdf5.h \
   interp-core/oct-iostrm.h \
   interp-core/oct-lvalue.h \
   interp-core/oct-map.h \
   interp-core/oct-obj.h \
   interp-core/oct-prcstrm.h \
diff --git a/libinterp/interp-core/octave-event-listener.h b/libinterp/interp-core/octave-event-listener.h
deleted file mode 100644
--- a/libinterp/interp-core/octave-event-listener.h
+++ /dev/null
@@ -1,40 +0,0 @@
-/*
-
-Copyright (C) 2011-2012 Jacob Dawid
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by the
-Free Software Foundation; either version 3 of the License, or (at your
-option) any later version.
-
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
-for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifndef OCTAVEEVENTLISTENER_H
-#define OCTAVEEVENTLISTENER_H
-
-#include <string>
-
-class octave_event_listener
-{
-  public:
-    octave_event_listener () { }
-    virtual ~octave_event_listener () { }
-
-    virtual void
-    update_workspace (void) = 0;
-
-    virtual void about_to_exit () = 0;
-};
-
-#endif // OCTAVEEVENTLISTENER_H
diff --git a/libinterp/interpfcn/octave-link.cc b/libinterp/interpfcn/octave-link.cc
--- a/libinterp/interpfcn/octave-link.cc
+++ b/libinterp/interpfcn/octave-link.cc
@@ -41,78 +41,71 @@ octave_readline_hook (void)
   octave_link::entered_readline_hook ();
   octave_link::generate_events ();
   octave_link::process_events ();
   octave_link::finished_readline_hook ();
 
   return 0;
 }
 
-static void
-octave_exit_hook (int)
-{
-  octave_link::about_to_exit ();
-}
-
 octave_link *octave_link::instance = 0;
 
 octave_link::octave_link (void)
-  : event_listener (0), event_queue_mutex (new octave_mutex ()),
-    gui_event_queue (), debugging (false)
+  : event_queue_mutex (new octave_mutex ()), gui_event_queue (),
+    debugging (false), accepting_events (true)
 {
   command_editor::add_event_hook (octave_readline_hook);
 
-  octave_exit = octave_exit_hook;
+  octave_exit = octave_link::exit;
 }
 
 // OBJ should be an object of a class that is derived from the base
 // class octave_link, or 0 to disconnect the link.  It is the
 // responsibility of the caller to delete obj.
 
 void
 octave_link::connect_link (octave_link* obj)
 {
   if (obj && instance)
     ::error ("octave_link is already linked!");
   else
     instance = obj;
 }
 
 void
-octave_link::do_register_event_listener (octave_event_listener *el)
-{
-  event_listener = el;
-}
-
-void
 octave_link::do_generate_events (void)
 {
 }
 
 void
 octave_link::do_process_events (void)
 {
   event_queue_mutex->lock ();
 
   gui_event_queue.run ();
 
   event_queue_mutex->unlock ();
 }
 
 void
-octave_link::do_about_to_exit (void)
+octave_link::do_discard_events (void)
 {
   event_queue_mutex->lock ();
 
   gui_event_queue.discard ();
 
   event_queue_mutex->unlock ();
+}
 
-  if (event_listener)
-    event_listener->about_to_exit ();
+void
+octave_link::do_exit (int)
+{
+  accepting_events = false;
+
+  do_process_events ();
 }
 
 bool
 octave_link::instance_ok (void)
 {
   return instance != 0;
 }
 
diff --git a/libinterp/interpfcn/octave-link.h b/libinterp/interpfcn/octave-link.h
--- a/libinterp/interpfcn/octave-link.h
+++ b/libinterp/interpfcn/octave-link.h
@@ -23,17 +23,16 @@ along with Octave; see the file COPYING.
 */
 
 #if !defined (octave_link_h)
 #define octave_link_h 1
 
 #include <string>
 
 #include "event-queue.h"
-#include "octave-event-listener.h"
 
 class octave_mutex;
 class string_vector;
 class workspace_element;
 
 // \class OctaveLink
 // \brief Provides threadsafe access to octave.
 // \author Jacob Dawid
@@ -47,34 +46,40 @@ class octave_link
 protected:
 
   octave_link (void);
 
 public:
 
   virtual ~octave_link (void) { }
 
-  static void register_event_listener (octave_event_listener *el)
-  {
-    if (instance_ok ())
-      instance->do_register_event_listener (el);
-  }
-
   static void generate_events (void)
   {
     if (instance_ok ())
       instance->do_generate_events ();
   }
 
   static void process_events (void)
   {
     if (instance_ok ())
       instance->do_process_events ();
   }
 
+  static void discard_events (void)
+  {
+    if (instance_ok ())
+      instance->do_discard_events ();
+  }
+
+  static void exit (int status)
+  {
+    if (instance_ok ())
+      instance->do_exit (status);
+  }
+
   template <class T>
   static void post_event (T *obj, void (T::*method) (void))
   {
     if (instance_ok ())
       instance->do_post_event (obj, method);
   }
 
   template <class T, class A>
@@ -86,22 +91,16 @@ public:
 
   template <class T, class A>
   static void post_event (T *obj, void (T::*method) (const A&), const A& arg)
   {
     if (instance_ok ())
       instance->do_post_event (obj, method, arg);
   }
 
-  static void about_to_exit (void)
-  {
-    if (instance_ok ())
-      instance->do_about_to_exit ();
-  }
-
   static void entered_readline_hook (void)
   {
     if (instance_ok ())
       instance->do_entered_readline_hook ();
   }
 
   static void finished_readline_hook (void)
   {
@@ -209,51 +208,53 @@ private:
   octave_link (const octave_link&);
 
   octave_link& operator = (const octave_link&);
 
   static bool instance_ok (void);
 
 protected:
 
-  octave_event_listener *event_listener;
-
   // Semaphore to lock access to the event queue.
   octave_mutex *event_queue_mutex;
 
   // Event Queue.
   event_queue gui_event_queue;
 
   bool debugging;
 
-  void do_register_event_listener (octave_event_listener *oel);
+  bool accepting_events;
 
   void do_generate_events (void);
   void do_process_events (void);
+  void do_discard_events (void);
+
+  void do_exit (int status);
 
   template <class T>
   void do_post_event (T *obj, void (T::*method) (void))
   {
-    gui_event_queue.add_method (obj, method);
+    if (accepting_events)
+      gui_event_queue.add_method (obj, method);
   }
 
   template <class T, class A>
   void do_post_event (T *obj, void (T::*method) (A), A arg)
   {
-    gui_event_queue.add_method (obj, method, arg);
+    if (accepting_events)
+      gui_event_queue.add_method (obj, method, arg);
   }
 
   template <class T, class A>
   void do_post_event (T *obj, void (T::*method) (const A&), const A& arg)
   {
-    gui_event_queue.add_method (obj, method, arg);
+    if (accepting_events)
+      gui_event_queue.add_method (obj, method, arg);
   }
 
-  void do_about_to_exit (void);
-
   void do_entered_readline_hook (void) { }
   void do_finished_readline_hook (void) { }
 
   virtual bool do_edit_file (const std::string& file) = 0;
 
   virtual void do_change_directory (const std::string& dir) = 0;
 
   virtual void
