# HG changeset patch
# User jwe
# Date 1164826548 0
#      Wed Nov 29 18:55:48 2006 +0000
# Node ID 160958073cdee0bd69a410298c5af0380d2d4852
# Parent  2a8922007c122e7b037c34c9f0fda16fc2cceedb
[project @ 2006-11-29 18:55:47 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-11-29  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/fftw_wisdom.cc (Ffftw_wisdom): Look in load-path
+	if reading wisdom file, but not if writing.
+
 2006-11-28  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mxArray_struct::get_field_by_number):
 	Return 0 if key_num is out of range.
 	(mxArray_struct::set_field_by_number):
 	Do nothing if key_num is out of range.
 	(mxArray_cell::get_cell, mxArray_cell::set_cell):
 	Avoid out-of-bounds indexing
diff --git a/src/DLD-FUNCTIONS/fftw_wisdom.cc b/src/DLD-FUNCTIONS/fftw_wisdom.cc
--- a/src/DLD-FUNCTIONS/fftw_wisdom.cc
+++ b/src/DLD-FUNCTIONS/fftw_wisdom.cc
@@ -26,16 +26,18 @@ 02110-1301, USA.
 #endif
 
 #if defined (HAVE_FFTW3)
 #include <fftw3.h>
 #endif
 
 #include <sstream>
 
+#include "file-stat.h"
+
 #include "defaults.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "file-ops.h"
 #include "gripes.h"
 #include "lo-mappers.h"
 #include "load-path.h"
 #include "oct-env.h"
@@ -105,47 +107,66 @@ Octave.\n\
 
       if (nargin != 1)
 	{
 	  double dval = args (1).double_value ();
 	  if (NINTbig (dval) != 0)
 	    overwrite = true;
 	}
 
-      std::string str = args(0).string_value ();
-      std::string wisdom = octave_env::make_absolute
-	(load_path::find_file (str), octave_env::getcwd ());
+      std::string name = args(0).string_value ();
+
+      std::string wisdom = file_ops::tilde_expand (name);
+
+      if (! (overwrite || octave_env::absolute_pathname (wisdom)))
+	{
+	  file_stat fs (wisdom);
+
+	  if (! fs.exists ())
+	    {
+	      std::string tmp = octave_env::make_absolute
+		(load_path::find_file (wisdom), octave_env::getcwd ());
 
-      // FIXME -- should probably protect FILE* resources with
-      // auto_ptr or similar...
+	      if (! tmp.empty ())
+		{
+		  warning_with_id ("Octave:fftw-wisdom-file-in-path",
+				   "fftw_wisdom: file found in load path");
+		  wisdom = tmp;
+		}
+	    }
+	}
 
-      if (wisdom.empty () || overwrite)
+      if (overwrite)
 	{
-	  if (str.empty ())
-	    error ("fftw_wisdom: can not save to file");
+	  FILE *ofile = fopen (wisdom.c_str (), "wb");
+
+	  if (! ofile)
+	    error ("fftw_wisdom: unable to open file `%s' for writing",
+		   wisdom.c_str());
 	  else
 	    {
-	      FILE *ofile = fopen (str.c_str (), "wb");
-	      if (! ofile)
-		error ("fftw_wisdom: can not save to file %s", str.c_str());
-	      else
-		{
-		  fftw_export_wisdom_to_file (ofile);
-		  fclose (ofile);
-		}
+	      fftw_export_wisdom_to_file (ofile);
+	      fclose (ofile);
 	    }
 	}
       else
 	{
 	  FILE *ifile = fopen (wisdom.c_str (), "r");
-	  if (! fftw_import_wisdom_from_file (ifile))
-	    error ("fftw_wisdom: can not import wisdom from file"); 
-	  fclose (ifile);
+
+	  if (! ifile)
+	    error ("fftw_wisdom: unable to open file `%s' for reading",
+		   wisdom.c_str ());
+	  else
+	    {
+	      if (! fftw_import_wisdom_from_file (ifile))
+		error ("fftw_wisdom: can not import wisdom from file"); 
+
+	      fclose (ifile);
+	    }
 	}
-
     } 
   else 
     {
       Matrix m = args (0).matrix_value ();
 
       if (error_state)
 	{
 	  error ("fftw_wisdom: argument must be a matrix or a string");
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -1656,17 +1656,17 @@ public:
 	fields = new_fields;
 	data = new_data;
       }
   }
 
   mxArray *get_field_by_number (int index, int key_num) const
   {
     return key_num >= 0 && key_num < nfields
-      ? : data[nfields * index + key_num] : 0;
+      ? data[nfields * index + key_num] : 0;
   }
 
   void set_field_by_number (int index, int key_num, mxArray *val);
 
   int get_number_of_fields (void) const { return nfields; }
 
   const char *get_field_name_by_number (int key_num) const
   {
