# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546488634 28800
#      Wed Jan 02 20:10:34 2019 -0800
# Branch stable
# Node ID d0a061e6d70fba5ba652ff3dfb212e3c08d58b2c
# Parent  a480ccada034bb7e5ce9bfcbdd6ba0e333944134
symbfact.cc: Fix static analyzer detected issues (bug #55347).

* symbfact.cc (Fsymbfact): Declare coletree as a bool variable since it is only
used as such.

diff --git a/libinterp/dldfcn/symbfact.cc b/libinterp/dldfcn/symbfact.cc
--- a/libinterp/dldfcn/symbfact.cc
+++ b/libinterp/dldfcn/symbfact.cc
@@ -156,17 +156,17 @@ Cholesky@tie{}factorization as determine
       A->xtype = CHOLMOD_COMPLEX;
 
       if (a.rows () > 0 && a.cols () > 0)
         A->x = a.data ();
     }
   else
     err_wrong_type_arg ("symbfact", args(0));
 
-  octave_idx_type coletree = false;
+  bool coletree = false;
   octave_idx_type n = A->nrow;
 
   if (nargin > 1)
     {
       std::string str = args(1).xstring_value ("TYP must be a string");
       // FIXME: The input validation could be improved to use strncmp
       char ch;
       ch = tolower (str[0]);
@@ -205,17 +205,17 @@ Cholesky@tie{}factorization as determine
   OCTAVE_LOCAL_BUFFER (octave::suitesparse_integer, First, n);
   OCTAVE_LOCAL_BUFFER (octave_idx_type, Level, n);
 
   cholmod_common Common;
   cholmod_common *cm = &Common;
   CHOLMOD_NAME(start) (cm);
 
   double spu = octave_sparse_params::get_key ("spumoni");
-  if (spu == 0.)
+  if (spu == 0.0)
     {
       cm->print = -1;
       SUITESPARSE_ASSIGN_FPTR (printf_func, cm->print_function, nullptr);
     }
   else
     {
       cm->print = static_cast<int> (spu) + 2;
       SUITESPARSE_ASSIGN_FPTR (printf_func, cm->print_function, &SparseCholPrint);
