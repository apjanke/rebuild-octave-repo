# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1365225293 14400
#      Sat Apr 06 01:14:53 2013 -0400
# Node ID 605d7f0ee0d8d8c1127cd49c478e6a996bb9f8c3
# Parent  9ff3181e671c0eafa22fc1a8ad4866e0eac62f76
Added Filesdockwidget recently viewed directory pulldownlist

* libgui/src/files-dockwidget.h (files_dock_widget::_current_directory):
  Changed from QLineEdit to QComboBox

* libgui/src/files-dockwidget.cc (files_dock_widget::files_dock_widget):
  Changed _current_directory to QComboBox and additional signal processing for
  index selection. Added load/populate of comboxbox from saved settings.
  (files_dock_widget::~files_dock_widget): added save of _current_directory to
  settings.
  (files_dock_widget::accept_directory_line_edit): change for QComboBox.
  files_dock_widget::display_directory): added insertion of displayed directory
  into combox list.

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -29,16 +29,18 @@ along with Octave; see the file COPYING.
 
 #include <QApplication>
 #include <QFileInfo>
 #include <QCompleter>
 #include <QSettings>
 #include <QProcess>
 #include <QDebug>
 #include <QHeaderView>
+#include <QLineEdit>
+#include <QSizePolicy>
 
 files_dock_widget::files_dock_widget (QWidget *p)
   : octave_dock_widget (p)
 {
   setObjectName ("FilesDockWidget");
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
   setWindowTitle (tr ("File Browser"));
   setStatusTip (tr ("Browse your files."));
@@ -62,18 +64,23 @@ files_dock_widget::files_dock_widget (QW
   _navigation_tool_bar->setAllowedAreas (Qt::TopToolBarArea);
   _navigation_tool_bar->setMovable (false);
   _navigation_tool_bar->setIconSize (QSize (20, 20));
 
   _directory_icon = QIcon(":/actions/icons/up.png");
   _directory_up_action = new QAction (_directory_icon, "", _navigation_tool_bar);
   _directory_up_action->setStatusTip (tr ("Move up one directory."));
 
-  _current_directory = new QLineEdit (_navigation_tool_bar);
+  _current_directory = new QComboBox (_navigation_tool_bar);
   _current_directory->setStatusTip (tr ("Enter the path or filename."));
+  _current_directory->setEditable(true);
+  _current_directory->setMaxCount(MaxMRUDirs);
+  _current_directory->setInsertPolicy(QComboBox::NoInsert);
+  QSizePolicy sizePol(QSizePolicy::Expanding, QSizePolicy::Preferred);
+  _current_directory->setSizePolicy(sizePol);
 
   _navigation_tool_bar->addAction (_directory_up_action);
   _navigation_tool_bar->addWidget (_current_directory);
   connect (_directory_up_action, SIGNAL (triggered ()), this,
            SLOT (change_directory_up ()));
 
   // TODO: Add other buttons for creating directories
 
@@ -97,50 +104,64 @@ files_dock_widget::files_dock_widget (QW
   QSettings *settings = resource_manager::get_settings ();
   // FIXME -- what should happen if settings is 0?
   _file_tree_view->sortByColumn (
               settings->value ("filesdockwidget/sort_files_by_column",0).toInt (),
               static_cast<Qt::SortOrder>(settings->value ("filesdockwidget/sort_files_by_order",Qt::AscendingOrder).toUInt ())
   );
   _file_tree_view->header ()->restoreState (settings->value ("filesdockwidget/column_state").toByteArray ());
   
-  _current_directory->setText(_file_system_model->fileInfo (rootPathIndex).
+  QStringList mru_dirs = settings->value ("filesdockwidget/mru_dir_list").toStringList ();
+  _current_directory->addItems(mru_dirs);
+
+  _current_directory->setEditText(_file_system_model->fileInfo (rootPathIndex).
                               absoluteFilePath ());
 
   connect (_file_tree_view, SIGNAL (doubleClicked (const QModelIndex &)),
            this, SLOT (item_double_clicked (const QModelIndex &)));
 
   // Layout the widgets vertically with the toolbar on top
   QVBoxLayout *vbox_layout = new QVBoxLayout ();
   vbox_layout->setSpacing (0);
   vbox_layout->addWidget (_navigation_tool_bar);
   vbox_layout->addWidget (_file_tree_view);
   vbox_layout->setMargin (1);
 
   container->setLayout (vbox_layout);
 
   // TODO: Add right-click contextual menus for copying, pasting, deleting files (and others)
 
-  connect (_current_directory, SIGNAL (returnPressed ()),
-           this, SLOT (accept_directory_line_edit ()));
+  connect (_current_directory->lineEdit(), SIGNAL (returnPressed ()),
+            this, SLOT (accept_directory_line_edit ()));
+
+  connect (_current_directory, SIGNAL (activated (const QString &)),
+           this, SLOT (set_current_directory (const QString &)));
 
   QCompleter *completer = new QCompleter (_file_system_model, this);
   _current_directory->setCompleter (completer);
 
   setFocusProxy (_current_directory);
 }
 
 files_dock_widget::~files_dock_widget ()
 {
   QSettings *settings = resource_manager::get_settings ();
   int sort_column = _file_tree_view->header ()->sortIndicatorSection ();
   Qt::SortOrder sort_order = _file_tree_view->header ()->sortIndicatorOrder ();
   settings->setValue ("filesdockwidget/sort_files_by_column", sort_column);
   settings->setValue ("filesdockwidget/sort_files_by_order", sort_order);
   settings->setValue ("filesdockwidget/column_state", _file_tree_view->header ()->saveState ());
+
+  QStringList dirs;
+  for(int i=0; i< _current_directory->count(); i++)
+  {
+    dirs.append(_current_directory->itemText(i));
+  }
+  settings->setValue ("filesdockwidget/mru_dir_list", dirs);
+
   settings->sync ();
 }
 
 void
 files_dock_widget::item_double_clicked (const QModelIndex& index)
 {
   // Retrieve the file info associated with the model index.
   QFileInfo fileInfo = _file_system_model->fileInfo (index);
@@ -154,17 +175,17 @@ files_dock_widget::set_current_directory
   display_directory (dir);
 
   emit displayed_directory_changed (dir);
 }
 
 void
 files_dock_widget::accept_directory_line_edit (void)
 {
-  display_directory (_current_directory->text ());
+  display_directory (_current_directory->currentText ());
 }
 
 void
 files_dock_widget::change_directory_up (void)
 {
   QDir dir = QDir (_file_system_model->filePath (_file_tree_view->rootIndex ()));
   dir.cdUp ();
   display_directory (dir.absolutePath ());
@@ -177,17 +198,25 @@ files_dock_widget::display_directory (co
   if (fileInfo.exists ())
     {
       if (fileInfo.isDir ())
         {
           _file_tree_view->setRootIndex (_file_system_model->
                                          index (fileInfo.absoluteFilePath ()));
           _file_system_model->setRootPath (fileInfo.absoluteFilePath ());
           _file_system_model->sort (0, Qt::AscendingOrder);
-          _current_directory->setText (fileInfo.absoluteFilePath ());
+
+          // see if its in the list, and if it is, remove it and then, put at top of the list
+          int index = _current_directory->findText(fileInfo.absoluteFilePath ());
+          if(index != -1)
+          {
+             _current_directory->removeItem(index);
+          }
+          _current_directory->insertItem(0, fileInfo.absoluteFilePath ());
+          _current_directory->setCurrentIndex(0);
         }
       else
         {
           if (QFile::exists (fileInfo.absoluteFilePath ()))
             emit open_file (fileInfo.absoluteFilePath ());
         }
     }
 }
diff --git a/libgui/src/files-dock-widget.h b/libgui/src/files-dock-widget.h
--- a/libgui/src/files-dock-widget.h
+++ b/libgui/src/files-dock-widget.h
@@ -31,17 +31,17 @@ along with Octave; see the file COPYING.
 #include <QFileSystemModel>
 #include <QToolBar>
 #include <QToolButton>
 #include <QVBoxLayout>
 #include <QAction>
 #include <QTreeView>
 #include <QSettings>
 
-#include <QLineEdit>
+#include <QComboBox>
 #include "octave-dock-widget.h"
 
 /**
    \class files_dock_widget
    \brief Dock widget to display files in the current directory.
 */
 class files_dock_widget : public octave_dock_widget
 {
@@ -92,12 +92,14 @@ private:
   QAction *         _directory_up_action;
   QToolButton *     _up_directory_button;
 
   /** The file system model. */
   QFileSystemModel *_file_system_model;
 
   /** The file system view. */
   QTreeView *       _file_tree_view;
-  QLineEdit *       _current_directory;
+  QComboBox *       _current_directory;
+
+  enum { MaxMRUDirs = 10 };
 };
 
 #endif // FILESDOCKWIDGET_H
