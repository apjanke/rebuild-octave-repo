# HG changeset patch
# User Rik <rik@octave.org>
# Date 1479532958 28800
#      Fri Nov 18 21:22:38 2016 -0800
# Node ID 1c73344fd3488dcd7aba2b3304144676acb1fa87
# Parent  388d12bb24b562b66c6998c9e15741608b1cc2c2
importdata.m: Improve performance when reading text files (bug #49630).

* importdata.m: Remove old regexp that was no longer used.
Only read the first 25 lines before giving up if no data found.

diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -167,33 +167,38 @@ function [output, delimiter, header_rows
 
   ## Work through first few rows line by line until a delimiter is found.
   while (ischar (row = fgetl (fid)))
 
     ## If no delimiter determined yet, make a guess.
     if (isempty (delimiter))
       ## This pattern can be fooled, but mostly does the job just fine.
       delim = regexpi (row, '[-+\d.e*ij ]+([^-+\de.ij])[-+\de*.ij ]',
-                      'tokens', 'once');
-      #delim = regexp (row, '[+-\d.eE\*ij ]+([^+-\d.ij])[+-\d.ij]',
-      #                     'tokens', 'once');
+                       'tokens', 'once');
       if (! isempty (delim))
         delimiter = delim{1};
       endif
     endif
 
     if (delimiter == " ")
       row_entries = regexp (strtrim (row), ' +', 'split');
     else
       row_entries = ostrsplit (row, delimiter);
     endif
     row_data = str2double (row_entries);
-    if (all (isnan (row_data)) || header_rows < num_header_rows)
+    if (header_rows < num_header_rows)
       header_rows += 1;
       output.textdata{end+1, 1} = row;
+    elseif (all (isnan (row_data)) && header_rows < 25)
+      header_rows += 1;
+      output.textdata{end+1, 1} = row;
+    elseif (all (isnan (row_data)))
+      ## Failed to find any numeric input in first 25 lines
+      row = -1;
+      break;
     else
       if (! isempty (output.textdata))
         if (delimiter == " ")
           output.colheaders = regexp (strtrim (output.textdata{end}),
                                       ' +', 'split');
         else
           output.colheaders = ostrsplit (output.textdata{end}, delimiter);
         endif
@@ -223,20 +228,20 @@ function [output, delimiter, header_rows
     ## 4. Remove last cell (for files with -proper- EOL before EOF)
     if (isempty (output{end}))
       output(end) = [];
     endif
     ## 5. Return after setting some output data
     delimiter = "";
     header_rows = numel (output);
     return;
-  else
-    fclose (fid);
   endif
 
+  fclose (fid);
+
   if (num_header_rows >= 0)
     header_rows = num_header_rows;
   endif
 
   ## Now, let the efficient built-in routine do the bulk of the work.
   if (delimiter == " ")
     output.data = dlmread (fname, "", header_rows, header_cols,
                            "emptyvalue", NA);
