# HG changeset patch
# User PrasannaKumar Muralidharan <prasannatsmkumar@gmail.com>
# Date 1384066574 -19800
#      Sun Nov 10 12:26:14 2013 +0530
# Node ID f05f571ff1fa89df226923328a84adf1bce60ecd
# Parent  ed2ef5d9692963b84367daa7840f295ffa05e126
Fix null pointer access in octave_fcn_binder::maybe_binder

* libinterp/octave-value/ov-fcn-handle.cc(maybe_binder): Avoid possible null
pointer access.

diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1879,22 +1879,29 @@ octave_fcn_binder::octave_fcn_binder (co
 octave_fcn_handle *
 octave_fcn_binder::maybe_binder (const octave_value& f)
 {
   octave_fcn_handle *retval = 0;
 
   octave_user_function *usr_fcn = f.user_function_value (false);
   tree_parameter_list *param_list = usr_fcn ? usr_fcn->parameter_list () : 0;
 
-  // Verify that the body is a single expression (always true in theory).
+  tree_statement_list *cmd_list = NULL;
+  tree_expression *body_expr = NULL;
 
-  tree_statement_list *cmd_list = usr_fcn ? usr_fcn->body () : 0;
-  tree_expression *body_expr = (cmd_list->length () == 1
-                                ? cmd_list->front ()->expression () : 0);
-
+  if (usr_fcn)
+    {
+      cmd_list = usr_fcn->body ();
+      if (cmd_list)
+        {
+          // Verify that body is a single expression (always true in theory).
+          body_expr = (cmd_list->length () == 1
+                       ? cmd_list->front ()->expression () : 0);
+        }
+    }
 
   if (body_expr && body_expr->is_index_expression ()
       && ! (param_list && param_list->takes_varargs ()))
     {
       // It's an index expression.
       tree_index_expression *idx_expr = dynamic_cast<tree_index_expression *>
                                         (body_expr);
       tree_expression *head_expr = idx_expr->expression ();
