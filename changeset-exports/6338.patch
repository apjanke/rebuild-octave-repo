# HG changeset patch
# User jwe
# Date 1172128040 0
#      Thu Feb 22 07:07:20 2007 +0000
# Node ID ec88b4ab6d1036fe2e2c6b6fc7eafd60c9bb99f6
# Parent  24e127df8e1707c0fed36880213b4bf0947664d2
[project @ 2007-02-22 07:07:19 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-02-22  John W. Eaton  <jwe@octave.org>
+
+	* plot/__uiobject_draw_axes__.m: If not using gnuplot for images,
+	cache data and display after xlim and ylim have been determined.
+
 2007-02-22  Daniel J Sebald  <daniel.sebald@ieee.org>
 
 	* plot/__uiobject_draw_axes__.m:
 	Allow multiple images to be displayed with gnuplot.
 
 2007-02-20  Rafael Laboissiere  <rafael@debian.org>
 
 	* optimization/glpk.m: Document the fact that extra.mem does not work
diff --git a/scripts/plot/__uiobject_draw_axes__.m b/scripts/plot/__uiobject_draw_axes__.m
--- a/scripts/plot/__uiobject_draw_axes__.m
+++ b/scripts/plot/__uiobject_draw_axes__.m
@@ -224,37 +224,44 @@ function __uiobject_draw_axes__ (h, plot
     data = cell ();
 
     xminp = yminp = zminp = Inf;
     xmax = ymax = zmax = -Inf;
     xmin = ymin = zmin = Inf;
 
     palette_set = 0;
 
+    [view_cmd, view_fcn, view_zoom] = image_viewer ();
+    use_gnuplot_for_images = (ischar (view_fcn)
+			      && strcmp (view_fcn, "gnuplot_internal"));
+
+    ximg_data = {};
+    ximg_data_idx = 0;
+
     for i = 1:length (kids)
 
       obj = get (kids(i));
 
       switch (obj.type)
 	case "image"
-	  % FIXME - Is there a better way to determine if the plot command should
-	  % be "plot" or "splot"?????  Could have images projected into 3D so there
-	  % is really no reason to limit this.
+	  ## FIXME - Is there a better way to determine if the plot
+	  ## command should be "plot" or "splot"?????  Could have images
+	  ## projected into 3D so there is really no reason to limit
+	  ## this.
 	  if (nd == 0)
 	    nd = 2;
-	  end
+	  endif
 	  data_idx++;
 
 	  img_data = obj.cdata;
 	  img_colormap = parent_figure_obj.colormap;
 	  img_xdata = obj.xdata;
 	  img_ydata = obj.ydata;
 
-	  [view_cmd, view_fcn, view_zoom] = image_viewer ();
-	  if (ischar (view_fcn) && strcmp (view_fcn, "gnuplot_internal"))
+	  if (use_gnuplot_for_images)
 
 	    [y_dim, x_dim] = size (img_data(:,:,1));
 	    if (x_dim > 1)
 	      dx = abs (img_xdata(2)-img_xdata(1))/(x_dim-1);
 	    else
 	      dx = 1;
 	    endif
 	    if (y_dim > 1)
@@ -271,33 +278,35 @@ function __uiobject_draw_axes__ (h, plot
 	    if (ndims (img_data) == 3)
 	      fwrite (fid, permute (img_data, [3, 1, 2])(:), "float");
 	      format = "1:2:3";
 	      imagetype = "rgbimage";
 	    else
 	      fwrite (fid, img_data(:), "float");
 	      format = "1";
 	      imagetype = "image";
-	      % Only need to set pallete once because it doesn't change on a figure.
+	      ## Only need to set pallete once because it doesn't change
+	      ## on a figure.
 	      if (! palette_set)
 		palette_set = 1;
 		palette_size = rows (img_colormap);
 		fprintf (plot_stream,
 			 "set palette positive color model RGB maxcolors %i;\n",
 			 palette_size);
 		if (palette_size <= 128)
 		  ## Break up command to avoid buffer overflow.
 		  fprintf (plot_stream, "set palette file \"-\" using 1:2:3:4;\n");
 		  for i = 1:palette_size
 		    fprintf (plot_stream, "%g %g %g %g;\n",
 			     1e-3*round (1e3*[(i-1)/(palette_size-1), img_colormap(i,:)]));
-		  end
+		  endfor
 		  fprintf (plot_stream, "e;\n");
 		else
-		  # Let the file be deleted when Octave exits or `purge_tmp_files' is called.
+		  ## Let the file be deleted when Octave exits or
+		  ## `purge_tmp_files' is called.
 		  [fid, binary_fname, msg] = mkstemp (strcat (P_tmpdir, "/gpimageXXXXXX"), 1);
 		  fwrite (fid, img_colormap', "float32", 0, "ieee-le");
 		  fclose (fid);
 		  fprintf (plot_stream,
 			   "set palette file \"%s\" binary record=%d using 1:2:3;\n",
 			   binary_fname, palette_size);
 		endif
 	      endif
@@ -305,20 +314,22 @@ function __uiobject_draw_axes__ (h, plot
 	    fclose (fid);
 
 	    filespec{data_idx} = fname;
 	    titlespec{data_idx} = "";
 	    usingclause{data_idx} = sprintf ("binary array=%dx%d scan=yx flipy origin=(%g,%g) dx=%g dy=%g using %s",
 		x_dim, y_dim, x_origin, y_origin, dx, dy, format);
 	    withclause{data_idx} = sprintf ("with %s", imagetype);
 
-	    data{data_idx} = 0; % Data in file, set to zero for data available test to pass below.
+	    ## Data in file, set to zero for data available test to pass
+	    ## below.
+	    data{data_idx} = 0; 
 
 	  else
-	    view_fcn (xlim, ylim, img_data, view_zoom, view_cmd);
+	    ximg_data{++ximg_data_idx} = img_data;
 	  endif
 
 	case "line"
 	  data_idx++;
 	  filespec{data_idx} = '-';
 	  if (isempty (obj.keylabel))
 	    titlespec{data_idx} = "title \"\"";
 	  else
@@ -611,16 +622,22 @@ function __uiobject_draw_axes__ (h, plot
       endif
     else
       fputs (plot_stream, "unset key;\n");
     endif
 
     fputs (plot_stream, "set style data lines;\n");
     fflush (plot_stream);
 
+    if (! use_gnuplot_for_images)
+      for i = 1:ximg_data_idx
+	view_fcn (xlim, ylim, ximg_data{i}, view_zoom, view_cmd);
+      endfor
+    endif
+
     if (have_data)
 
       if (nd == 2)
 	plot_cmd = "plot";
       else
 	plot_cmd = "splot";
 	rot_x = 90 - axis_obj.view(2);
 	rot_z = axis_obj.view(1);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,22 @@
 2007-02-21  John W. Eaton  <jwe@octave.org>
 
+	* mex.cc (mexErrMsgIdAndTxt, mexWarnMsgIdAndTxt): Handle second
+	arg as format and accept variable number of arguments.
+	* mexproto.h: Fix decls.
+
+	* error.h, error.cc (vmessage, vusage, vwarning, verror,
+	vparse_error, vmessage_with_id, vusage_with_id, vwarning_with_id,
+	verror_with_id, vparse_error_with_id): Provide va_list versions of
+	variadic error, warning, and message functions.
+	(message, usage, warning, error, parse_error, message_with_id,
+	usage_with_id, warning_with_id, error_with_id,
+	parse_error_with_id): Call va_list versions.
+
 	* DLD-FUNCTIONS/urlwrite.cc (Furlwrite, Furlread): Return error
 	code and message instead of throwing error if functionality is
 	missing.
 
 	* oct-obj.h (octave_value_list::splice): Set default for
 	replacement list argument.
 
 2007-02-20  Rafael Laboissiere  <rafael@laboissiere.net>
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -281,55 +281,80 @@ error_1 (std::ostream& os, const char *n
 	panic ("error_1: invalid format");
 
       if (! error_state)
 	error_state = 1;
     }
 }
 
 void
+vmessage (const char *name, const char *fmt, va_list args)
+{
+  verror (false, std::cerr, name, "", fmt, args);
+}
+
+void
 message (const char *name, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  verror (false, std::cerr, name, "", fmt, args);
+  vmessage (name, fmt, args);
   va_end (args);
 }
 
 void
+vmessage_with_id (const char *name, const char *id, const char *fmt,
+		  va_list args)
+{
+  verror (false, std::cerr, name, id, fmt, args);
+}
+
+void
 message_with_id (const char *name, const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  verror (false, std::cerr, name, id, fmt, args);
+  vmessage_with_id (name, id, fmt, args);
   va_end (args);
 }
 
 void
 usage_1 (const char *id, const char *fmt, va_list args)
 {
   verror (true, std::cerr, "usage", id, fmt, args);
   error_state = -1;
 }
 
 void
+vusage (const char *fmt, va_list args)
+{
+  usage_1 ("", fmt, args);
+}
+
+void
 usage (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  usage_1 ("", fmt, args);
+  vusage (fmt, args);
   va_end (args);
 }
 
 void
+vusage_with_id (const char *id, const char *fmt, va_list args)
+{
+  usage_1 (id, fmt, args);
+}
+
+void
 usage_with_id (const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  usage_1 (id, fmt, args);
+  vusage_with_id (id, fmt, args);
   va_end (args);
 }
 
 static void
 pr_where_2 (const char *fmt, va_list args)
 {
   if (fmt)
     {
@@ -449,30 +474,42 @@ error_2 (const char *id, const char *fmt
 
       do_keyboard (octave_value_list ());
 
       unwind_protect::run ();
     }
 }
 
 void
+verror (const char *fmt, va_list args)
+{
+  error_2 ("", fmt, args);
+}
+
+void
 error (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  error_2 ("", fmt, args);
+  verror (fmt, args);
   va_end (args);
 }
 
 void
+verror_with_id (const char *id, const char *fmt, va_list args)
+{
+  error_2 (id, fmt, args);
+}
+
+void
 error_with_id (const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  error_2 (id, fmt, args);
+  verror_with_id (id, fmt, args);
   va_end (args);
 }
 
 static int
 check_state (const std::string& state)
 {
   // -1: not found
   //  0: found, "off"
@@ -590,48 +627,72 @@ warning_1 (const char *id, const char *f
 	  do_keyboard (octave_value_list ());
 
 	  unwind_protect::run ();
 	}
     }
 }
 
 void
+vwarning (const char *fmt, va_list args)
+{
+  warning_1 ("", fmt, args);
+}
+
+void
 warning (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  warning_1 ("", fmt, args);
+  vwarning (fmt, args);
   va_end (args);
 }
 
 void
+vwarning_with_id (const char *id, const char *fmt, va_list args)
+{
+  warning_1 (id, fmt, args);
+}
+
+void
 warning_with_id (const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  warning_1 (id, fmt, args);
+  vwarning_with_id (id, fmt, args);
   va_end (args);
 }
 
 void
+vparse_error (const char *fmt, va_list args)
+{
+  error_1 (std::cerr, 0, "", fmt, args);
+}
+
+void
 parse_error (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  error_1 (std::cerr, 0, "", fmt, args);
+  vparse_error (fmt, args);
   va_end (args);
 }
 
 void
+vparse_error_with_id (const char *id, const char *fmt, va_list args)
+{
+  error_1 (std::cerr, 0, id, fmt, args);
+}
+
+void
 parse_error_with_id (const char *id, const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
-  error_1 (std::cerr, 0, id, fmt, args);
+  vparse_error_with_id (id, fmt, args);
   va_end (args);
 }
 
 void
 panic (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
diff --git a/src/error.h b/src/error.h
--- a/src/error.h
+++ b/src/error.h
@@ -29,35 +29,59 @@ 02110-1301, USA.
 #define panic_impossible() \
   panic ("impossible state reached in file `%s' at line %d", \
 	 __FILE__, __LINE__)
 
 extern OCTINTERP_API void reset_error_handler (void);
 
 extern OCTINTERP_API int warning_enabled (const std::string& id);
 
+extern OCTINTERP_API void vmessage (const char *name, const char *fmt, va_list args);
 extern OCTINTERP_API void message (const char *name, const char *fmt, ...);
+
+extern OCTINTERP_API void vusage (const char *fmt, va_list args);
 extern OCTINTERP_API void usage (const char *fmt, ...);
+
+extern OCTINTERP_API void vwarning (const char *fmt, va_list args);
 extern OCTINTERP_API void warning (const char *fmt, ...);
+
+extern OCTINTERP_API void verror (const char *fmt, va_list args);
 extern OCTINTERP_API void error (const char *fmt, ...);
+
+extern OCTINTERP_API void vparse_error (const char *fmt, va_list args);
 extern OCTINTERP_API void parse_error (const char *fmt, ...);
 
 extern OCTINTERP_API void
+vmessage_with_id (const char *id, const char *name, const char *fmt, va_list args);
+
+extern OCTINTERP_API void
 message_with_id (const char *id, const char *name, const char *fmt, ...);
 
 extern OCTINTERP_API void
+vusage_with_id (const char *id, const char *fmt, va_list args);
+
+extern OCTINTERP_API void
 usage_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void
+vwarning_with_id (const char *id, const char *fmt, va_list args);
+
+extern OCTINTERP_API void
 warning_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void
+verror_with_id (const char *id, const char *fmt, va_list args);
+
+extern OCTINTERP_API void
 error_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void
+vparse_error_with_id (const char *id, const char *fmt, va_list args);
+
+extern OCTINTERP_API void
 parse_error_with_id (const char *id, const char *fmt, ...);
 
 extern OCTINTERP_API void panic (const char *fmt, ...) GCC_ATTR_NORETURN;
 
 // Helper function for print_usage defined in defun.cc.
 extern OCTINTERP_API void defun_usage_message (const std::string& msg);
 
 extern OCTINTERP_API void disable_warning (const std::string& id);
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -3119,37 +3119,59 @@ mexErrMsgTxt (const char *s)
   else
     // Just set the error state; don't print msg.
     error ("");
 
   mex_context->abort ();
 }
 
 void
-mexErrMsgIdAndTxt (const char *id, const char *s)
+mexErrMsgIdAndTxt (const char *id, const char *fmt, ...)
 {
-  if (s && strlen (s) > 0)
-    error_with_id (id, "%s: %s", mexFunctionName (), s);
+  if (fmt && strlen (fmt) > 0)
+    {
+      const char *fname = mexFunctionName ();
+      size_t len = strlen (fname) + 2 + strlen (fmt) + 1;
+      OCTAVE_LOCAL_BUFFER (char, tmpfmt, len);
+      sprintf (tmpfmt, "%s: %s", fname, fmt);
+      va_list args;
+      va_start (args, fmt);
+      verror_with_id (id, tmpfmt, args);
+      va_end (args);
+    }
   else
     // Just set the error state; don't print msg.
     error ("");
 
   mex_context->abort ();
 }
 
 void
 mexWarnMsgTxt (const char *s)
 {
   warning ("%s", s);
 }
 
 void
-mexWarnMsgIdAndTxt (const char *id, const char *s)
+mexWarnMsgIdAndTxt (const char *id, const char *fmt, ...)
 {
-  warning_with_id (id, "%s", s);
+  // FIXME -- is this right?  What does Matlab do if fmt is NULL or
+  // an empty string?
+
+  if (fmt && strlen (fmt) > 0)
+    {
+      const char *fname = mexFunctionName ();
+      size_t len = strlen (fname) + 2 + strlen (fmt) + 1;
+      OCTAVE_LOCAL_BUFFER (char, tmpfmt, len);
+      sprintf (tmpfmt, "%s: %s", fname, fmt);
+      va_list args;
+      va_start (args, fmt);
+      vwarning_with_id (id, tmpfmt, args);
+      va_end (args);
+    }
 }
 
 void
 mexPrintf (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
   octave_vformat (octave_stdout, fmt, args);
diff --git a/src/mexproto.h b/src/mexproto.h
--- a/src/mexproto.h
+++ b/src/mexproto.h
@@ -66,19 +66,19 @@ extern "C" {
 extern OCTINTERP_API const char *mexFunctionName (void);
 
 extern OCTINTERP_API int mexCallMATLAB (int nargout, mxArray *argout[], int nargin,
 			  mxArray *argin[], const char *fname);
 
 extern OCTINTERP_API void mexSetTrapFlag (int flag);
 extern OCTINTERP_API int mexEvalString (const char *s);
 extern OCTINTERP_API void mexErrMsgTxt (const char *s);
-extern OCTINTERP_API void mexErrMsgIdAndTxt (const char *id, const char *s);
+extern OCTINTERP_API void mexErrMsgIdAndTxt (const char *id, const char *s, ...);
 extern OCTINTERP_API void mexWarnMsgTxt (const char *s);
-extern OCTINTERP_API void mexWarnMsgIdAndTxt (const char *id, const char *s);
+extern OCTINTERP_API void mexWarnMsgIdAndTxt (const char *id, const char *s, ...);
 extern OCTINTERP_API void mexPrintf (const char *fmt, ...);
   
 extern OCTINTERP_API mxArray *mexGetVariable (const char *space, const char *name);
 extern OCTINTERP_API const mxArray *mexGetVariablePtr (const char *space, const char *name);
 
 extern OCTINTERP_API int mexPutVariable (const char *space, const char *name, mxArray *ptr);
 
 extern OCTINTERP_API void mexMakeArrayPersistent (mxArray *ptr);
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -676,27 +676,16 @@ octave_value::octave_value (octave_value
 {
 }
 
 octave_value::octave_value (octave_base_value *new_rep)
   : rep (new_rep)
 {
 }
 
-octave_value::~octave_value (void)
-{
-#if defined (MDEBUG)
-  std::cerr << "~octave_value: rep: " << rep
-	    << " rep->count: " << rep->count << std::endl;
-#endif
-
-  if (--rep->count == 0)
-    delete rep;
-}
-
 octave_base_value *
 octave_value::clone (void) const
 {
   panic_impossible ();
   return 0;
 }
 
 void
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -234,17 +234,21 @@ public:
   octave_base_value *clone (void) const;
 
   octave_base_value *empty_clone (void) const
     { return rep->empty_clone (); }
 
   // Delete the representation of this constant if the count drops to
   // zero.
 
-  ~octave_value (void);
+  ~octave_value (void)
+  {
+    if (--rep->count == 0)
+      delete rep;
+  }
 
   void make_unique (void)
     {
       if (rep->count > 1)
 	{
 	  --rep->count;
 	  rep = rep->clone ();
 	  rep->count = 1;
