# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1502380480 14400
#      Thu Aug 10 11:54:40 2017 -0400
# Node ID 56b7352fa4565b4f5cc9ceaff0429ee7a1aea0a3
# Parent  3487b4a1e4d04254a8bfd907696592e8b19df423
maint: Strip trailing whitespace from source files.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -2103,17 +2103,17 @@ namespace octave
         || x_min < -floatmax || y_min < -floatmax || z_min < -floatmax)
       {
         warning ("opengl_renderer: data values greater than float capacity.  (1) Scale data, or (2) Use gnuplot");
         return;
       }
 
     setup_opengl_transformation (props);
 
-    // For 2D axes with only 2D primitives, draw from back to front without 
+    // For 2D axes with only 2D primitives, draw from back to front without
     // depth sorting
     bool is2D = props.get_is2D (true);
     if (is2D)
       glDisable (GL_DEPTH_TEST);
     else
       glEnable (GL_DEPTH_TEST);
 
     draw_axes_planes (props);
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -201,17 +201,17 @@ namespace octave
     bool buffer_overflow;
   };
 
   static bool
   has_2D_axes (const graphics_handle& h)
   {
     bool retval = true;
     graphics_object go = gh_manager::get_object (h);
-  
+
     if (! go.valid_object ())
       return retval;
 
     if (go.isa ("figure") || go.isa ("uipanel"))
       {
         Matrix  children = go.get ("children").matrix_value ();
         for (octave_idx_type ii = 0; ii < children.numel (); ii++)
           {
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -7553,32 +7553,32 @@ axes::update_axis_limits (const std::str
     {
       if (xproperties.zlimmode_is ("auto"))
         {
           limits = xproperties.get_zlim ().matrix_value ();
           FIX_LIMITS;
 
           get_children_limits (min_val, max_val, min_pos, max_neg, kids, 'z');
 
-          xproperties.set_has3Dkids ((max_val - min_val) > 
+          xproperties.set_has3Dkids ((max_val - min_val) >
                                       std::numeric_limits<double>::epsilon ());
 
           limits = xproperties.get_axis_limits (min_val, max_val,
                                                 min_pos, max_neg,
                                                 xproperties.zscale_is ("log"));
 
           update_type = 'z';
         }
       else
         {
-          // FIXME: get_children_limits is only needed here in order to know 
+          // FIXME: get_children_limits is only needed here in order to know
           // if there are 3D children. Is there a way to avoid this call?
           get_children_limits (min_val, max_val, min_pos, max_neg, kids, 'z');
 
-          xproperties.set_has3Dkids ((max_val - min_val) > 
+          xproperties.set_has3Dkids ((max_val - min_val) >
                                       std::numeric_limits<double>::epsilon ());
         }
     }
   else if (axis_type == "cdata" || axis_type == "climmode"
            || axis_type == "cdatamapping" || axis_type == "climinclude"
            || axis_type == "clim")
     {
       if (xproperties.climmode_is ("auto"))
@@ -7734,32 +7734,32 @@ axes::update_axis_limits (const std::str
   else if (axis_type == "zdata" || axis_type == "zscale"
            || axis_type == "zlimmode" || axis_type == "zliminclude"
            || axis_type == "zlim")
     {
       if (xproperties.zlimmode_is ("auto"))
         {
           get_children_limits (min_val, max_val, min_pos, max_neg, kids, 'z');
 
-          xproperties.set_has3Dkids ((max_val - min_val) > 
+          xproperties.set_has3Dkids ((max_val - min_val) >
                                       std::numeric_limits<double>::epsilon ());
 
           limits = xproperties.get_axis_limits (min_val, max_val,
                                                 min_pos, max_neg,
                                                 xproperties.zscale_is ("log"));
 
           update_type = 'z';
         }
       else
         {
-          // FIXME: get_children_limits is only needed here in order to know 
+          // FIXME: get_children_limits is only needed here in order to know
           // if there are 3D children. Is there a way to avoid this call?
           get_children_limits (min_val, max_val, min_pos, max_neg, kids, 'z');
 
-          xproperties.set_has3Dkids ((max_val - min_val) > 
+          xproperties.set_has3Dkids ((max_val - min_val) >
                                       std::numeric_limits<double>::epsilon ());
         }
     }
   else if (axis_type == "cdata" || axis_type == "climmode"
            || axis_type == "cdatamapping" || axis_type == "climinclude"
            || axis_type == "clim")
     {
       if (xproperties.climmode_is ("auto"))
diff --git a/scripts/path/import.m b/scripts/path/import.m
--- a/scripts/path/import.m
+++ b/scripts/path/import.m
@@ -53,9 +53,9 @@
 
 function list = import (varargin)
 
   error ("the import function is not yet implemented in Octave");
 
 endfunction
 
 
-%!error <not yet implemented> import ("foobar"); 
+%!error <not yet implemented> import ("foobar");
