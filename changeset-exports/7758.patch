# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1209972112 14400
#      Mon May 05 03:21:52 2008 -0400
# Node ID 8e14a01ffe9f3d59e813e1ea579e6819f54c177a
# Parent  4ff9a6fdde42de3343c12e2c812a78c9d4cbde43
input.cc (Fre_read_readline_init_file): new function

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2008-05-05  John W. Eaton  <jwe@octave.org>
+
+	* cmd-edit.cc (command_editor::re_read_init_file,
+	gnu_readline::do_re_read_init_file): New functions.
+	* cmd-edit.h (command_editor::re_read_init_file): Provide decl.
+	(command_editor::do_re_read_init_file): New function.
+	* oct-rl-edit.c (octave_rl_re_read_init_file): New function.
+	* oct-rl-edit.h: Provide decl.
+
 2008-05-05  Rafael Laboissiere  <rafael@debian.org>
 
 	* oct-rl-edit.c (octave_read_init_file): Simply call rl_read_init_file.
 
 2008-05-01  John W. Eaton  <jwe@octave.org>
 
 	* oct-shlib.h (octave_shlib::number_of_functions_loaded):
 	Return size_t instead of int value.
diff --git a/liboctave/cmd-edit.cc b/liboctave/cmd-edit.cc
--- a/liboctave/cmd-edit.cc
+++ b/liboctave/cmd-edit.cc
@@ -151,16 +151,18 @@ public:
   void set_event_hook (event_hook_fcn f);
 
   void restore_event_hook (void);
 
   void do_restore_event_hook (void);
 
   void do_read_init_file (const std::string& file);
 
+  void do_re_read_init_file (void);
+
   bool do_filename_completion_desired (bool);
 
   bool do_filename_quoting_desired (bool);
 
   static int operate_and_get_next (int, int);
 
   static int history_search_backward (int, int);
 
@@ -555,16 +557,22 @@ gnu_readline::restore_event_hook (void)
 }
 
 void
 gnu_readline::do_read_init_file (const std::string& file)
 {
   ::octave_rl_read_init_file (file.c_str ());
 }
 
+void
+gnu_readline::do_re_read_init_file (void)
+{
+  ::octave_rl_re_read_init_file ();
+}
+
 bool
 gnu_readline::do_filename_completion_desired (bool arg)
 {
   return ::octave_rl_filename_completion_desired (arg);
 }
 
 bool
 gnu_readline::do_filename_quoting_desired (bool arg)
@@ -1181,16 +1189,23 @@ command_editor::read_init_file (const st
   if (instance_ok ())
     {
       std::string file = file_ops::tilde_expand (file_arg);
 
       instance->do_read_init_file (file);
     }
 }
 
+void
+command_editor::re_read_init_file (void)
+{
+  if (instance_ok ())
+    instance->do_re_read_init_file ();
+}
+
 bool
 command_editor::filename_completion_desired (bool arg)
 {
   return (instance_ok ())
     ? instance->do_filename_completion_desired (arg) : false;
 }
 
 bool
diff --git a/liboctave/cmd-edit.h b/liboctave/cmd-edit.h
--- a/liboctave/cmd-edit.h
+++ b/liboctave/cmd-edit.h
@@ -133,16 +133,18 @@ public:
   static void remove_startup_hook (startup_hook_fcn f);
 
   static void add_event_hook (event_hook_fcn f);
 
   static void remove_event_hook (event_hook_fcn f);
 
   static void read_init_file (const std::string& file = std::string ());
 
+  static void re_read_init_file (void);
+
   static bool filename_completion_desired (bool);
 
   static bool filename_quoting_desired (bool);
 
   static int current_command_number (void);
 
   static void reset_current_command_number (int n);
 
@@ -265,16 +267,18 @@ protected:
   virtual void restore_startup_hook (void) { }
 
   virtual void set_event_hook (startup_hook_fcn) { }
 
   virtual void restore_event_hook (void) { }
 
   virtual void do_read_init_file (const std::string&) { }
 
+  virtual void do_re_read_init_file (void) { }
+
   virtual bool do_filename_completion_desired (bool) { return false; }
 
   virtual bool do_filename_quoting_desired (bool) { return false; }
 
   int read_octal (const std::string& s);
 
   void error (int);
 
diff --git a/liboctave/oct-rl-edit.c b/liboctave/oct-rl-edit.c
--- a/liboctave/oct-rl-edit.c
+++ b/liboctave/oct-rl-edit.c
@@ -192,16 +192,22 @@ octave_rl_get_output_stream (void)
 }
 
 void
 octave_rl_read_init_file (const char *f)
 {
   rl_read_init_file (f);
 }
 
+void
+octave_rl_re_read_init_file (void)
+{
+  rl_re_read_init_file (0, 0);
+}
+
 int
 octave_rl_filename_completion_desired (int arg)
 {
   int retval = rl_filename_completion_desired;
   rl_filename_completion_desired = arg;
   return retval;
 }
 
diff --git a/liboctave/oct-rl-edit.h b/liboctave/oct-rl-edit.h
--- a/liboctave/oct-rl-edit.h
+++ b/liboctave/oct-rl-edit.h
@@ -79,16 +79,18 @@ extern void octave_rl_set_input_stream (
 extern FILE *octave_rl_get_input_stream (void);
 
 extern void octave_rl_set_output_stream (FILE *);
 
 extern FILE *octave_rl_get_output_stream (void);
 
 extern void octave_rl_read_init_file (const char *);
 
+extern void octave_rl_re_read_init_file (void);
+
 extern int octave_rl_filename_completion_desired (int);
 
 extern int octave_rl_filename_quoting_desired (int);
 
 extern char *octave_rl_filename_completion_function (const char *, int);
 
 extern void octave_rl_set_basic_word_break_characters (const char *);
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-05-05  John W. Eaton  <jwe@octave.org>
+
+	* input.cc (Fre_read_readline_init_file): New function.
+
 2008-05-04  John W. Eaton  <jwe@octave.org>
 
 	* ov-fcn-handle.cc (Ffunctions): Pass octave_value object instead
 	of Cell in structure field assignment.
 
 	* parse.y (frob_function): Don't install subfunctions here.
 	(finish_function): Handle subfunctions here.
 	Conditionally define tree_function_def object here.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1128,16 +1128,34 @@ for details.\n\
 	command_editor::read_init_file (file);
     }
   else
     print_usage ();
 
   return retval;
 }
 
+DEFUN (re_read_readline_init_file, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} re_read_readline_init_file ()\n\
+Re-read the last readline library initialization file that was read.\n\
+@xref{Readline Init File, , , readline, GNU Readline Library},\n\
+for details.\n\
+@end deftypefn")
+{
+  octave_value_list retval;
+
+  if (args.length () == 0)
+    command_editor::re_read_init_file ();
+  else
+    print_usage ();
+
+  return retval;
+}
+
 static std::string hook_fcn;
 static octave_value user_data;
 
 static int
 input_event_hook (void)
 {
   if (is_valid_function (hook_fcn))
     {
