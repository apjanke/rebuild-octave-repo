# HG changeset patch
# User Rik <rik@octave.org>
# Date 1504226116 25200
#      Thu Aug 31 17:35:16 2017 -0700
# Node ID bdde51fda6575d2ee38819a7416ea16e508ee8b3
# Parent  4d501813631352c9fd719479c35efcba90fb67ef
doc: Improve docstrings for file_in_loadpath, dir_in_loadpath (bug #51706).

* utils.cc (Ffile_in_loadpath, Fdir_in_loadpath): Add information about what
happens when the input is already an absolute name.

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -279,24 +279,27 @@ make_absolute (const string_vector& sv)
   for (octave_idx_type i = 0; i < len; i++)
     retval[i] = octave::sys::env::make_absolute (sv[i]);
 
   return retval;
 }
 
 DEFMETHOD (file_in_loadpath, interp, args, ,
            doc: /* -*- texinfo -*-
-@deftypefn  {} {} file_in_loadpath (@var{file})
-@deftypefnx {} {} file_in_loadpath (@var{file}, "all")
-
-Return the absolute name of @var{file} if it can be found in
-the list of directories specified by @code{path}.
+@deftypefn  {} {@var{fname} =} file_in_loadpath (@var{file})
+@deftypefnx {} {@var{fname} =} file_in_loadpath (@var{file}, "all")
+Return the absolute name of @var{file} if it can be found in the list of
+directories specified by @code{path}.
 
 If no file is found, return an empty character string.
 
+When @var{file} is already an absolute name, the name is checked against the
+file system instead of Octave's loadpath.  In this case, if @var{file} exists
+it will be returned in @var{fname}, otherwise an empty string is returned.
+
 If the first argument is a cell array of strings, search each directory of
 the loadpath for element of the cell array and return the first that
 matches.
 
 If the second optional argument @qcode{"all"} is supplied, return a cell
 array containing the list of all files that have the same name in the path.
 If no files are found, return an empty cell array.
 @seealso{file_in_path, dir_in_loadpath, path}
@@ -978,25 +981,31 @@ No check is done for the existence of @v
 ## FIXME: We need system-dependent tests here.
 
 %!error make_absolute_filename ()
 %!error make_absolute_filename ("foo", "bar")
 */
 
 DEFMETHOD (dir_in_loadpath, interp, args, ,
            doc: /* -*- texinfo -*-
-@deftypefn  {} {} dir_in_loadpath (@var{dir})
-@deftypefnx {} {} dir_in_loadpath (@var{dir}, "all")
-Return the full name of the path element matching @var{dir}.
+@deftypefn  {} {@var{dirname} =} dir_in_loadpath (@var{dir})
+@deftypefnx {} {@var{dirname} =} dir_in_loadpath (@var{dir}, "all")
+Return the absolute name of the loadpath element matching @var{dir} if it can
+be found in the list of directories specified by @code{path}.
+
+If no match is found, return an empty character string.
 
 The match is performed at the end of each path element.  For example, if
 @var{dir} is @qcode{"foo/bar"}, it matches the path element
 @nospell{@qcode{"/some/dir/foo/bar"}}, but not
 @nospell{@qcode{"/some/dir/foo/bar/baz"}}
-@nospell{@qcode{"/some/dir/allfoo/bar"}}.
+@nospell{@qcode{"/some/dir/allfoo/bar"}}.  When @var{dir} is an absolute name,
+rather than just a path fragment, it is matched against the file system
+instead of Octave's loadpath.  In this case, if @var{dir} exists it will be
+returned in @var{dirname}, otherwise an empty string is returned.
 
 If the optional second argument is supplied, return a cell array containing
 all name matches rather than just the first.
 @seealso{file_in_path, file_in_loadpath, path}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
