# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1522198927 -3600
#      Wed Mar 28 02:02:07 2018 +0100
# Node ID f2f813a55eec5e2bc4ac0ad1e0583d106a510853
# Parent  fdff879d8ae8e5c3d3104e856b0fd73805542d18
pkg: remove update of listed packages (actually do 70490bb1f59d)

* scripts/pkg/pkg.m: this is what was meant to happen in 70490bb1f59d
  (which instead removed the yes-no question during installation of
  URI and went to the stable branch instead).  Seems like no one has
  actually been using this option, it's been broken for some time, and
  it's not really that useful.  Remove it.  We are keeping the update
  option to update all of the packages.

diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -565,29 +565,25 @@ function [local_packages, global_package
         [local_packages, global_packages] = describe (files, verbose,
                                                       local_list, global_list);
       else
         describe (files, verbose, local_list, global_list);
       endif
 
     case "update"
       installed_pkgs_lst = installed_packages (local_list, global_list);
+
       if (numel (files) > 0)
-         update_lst = {};
-         installed_names = {installed_pkgs_lst.name}';
-         for i = 1:numel (files)
-           idx = find (strcmp (files{i}, installed_names), 1);
-           if (isempty (idx))
-             warning ("pkg: package %s is not installed - skipping update", files{i});
-           else
-             update_lst = { update_lst, installed_pkgs_lst{idx} };
-           endif
-         endfor
-         installed_pkgs_lst = update_lst;
+        ## This was option was broken during two releases and no one
+        ## notice so we are guessing no one actually uses it.  If the
+        ## user knows the names of the packages to be installed, it
+        ## might as well call install (which is what update is doing)
+        error ("pkg: to update individual packages, use 'pkg install -forge'");
       endif
+
       for i = 1:numel (installed_pkgs_lst)
         installed_pkg_name = installed_pkgs_lst{i}.name;
         installed_pkg_version = installed_pkgs_lst{i}.version;
         try
           forge_pkg_version = get_forge_pkg (installed_pkg_name);
         catch
           warning ("pkg: package %s not found on forge - skipping update\n",
                    installed_pkg_name);
