# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1316975123 14400
#      Sun Sep 25 14:25:23 2011 -0400
# Node ID 08ba694723f552ca95db741e09b481a0fed22ca1
# Parent  434e227b100bbd3ffb71d9e553b35abe17db4c3a
fix warnings for unused but set variables

* base-lu.cc (base_lu<lu_type>::regular (void) const):
Don't always return true.
* base-qr.cc (base_qr<qr_type>::regular (void) const):
Don't always return true.

diff --git a/liboctave/base-lu.cc b/liboctave/base-lu.cc
--- a/liboctave/base-lu.cc
+++ b/liboctave/base-lu.cc
@@ -168,19 +168,23 @@ base_lu <lu_type> :: P_vec (void) const
 
   return p;
 }
 
 template <class lu_type>
 bool
 base_lu<lu_type>::regular (void) const
 {
+  bool retval = true;
+
   octave_idx_type k = std::min (a_fact.rows (), a_fact.columns ());
-  bool retval = true;
+
   for (octave_idx_type i = 0; i < k; i++)
-    if (a_fact(i, i) == lu_elt_type ())
-      {
-        retval = false;
-        break;
-      }
+    {
+      if (a_fact(i, i) == lu_elt_type ())
+        {
+          retval = false;
+          break;
+        }
+    }
 
-  return true;
+  return retval;
 }
diff --git a/liboctave/base-qr.cc b/liboctave/base-qr.cc
--- a/liboctave/base-qr.cc
+++ b/liboctave/base-qr.cc
@@ -57,20 +57,24 @@ base_qr<qr_type>::get_type (void) const
 
   return retval;
 }
 
 template <class qr_type>
 bool
 base_qr<qr_type>::regular (void) const
 {
+  bool retval = true;
+
   octave_idx_type k = std::min (r.rows (), r.columns ());
-  bool retval = true;
+
   for (octave_idx_type i = 0; i < k; i++)
-    if (r(i, i) == qr_elt_type ())
-      {
-        retval = false;
-        break;
-      }
+    {
+      if (r(i, i) == qr_elt_type ())
+        {
+          retval = false;
+          break;
+        }
+    }
 
-  return true;
+  return retval;
 }
 
