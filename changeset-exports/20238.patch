# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1433015164 14400
#      Sat May 30 15:46:04 2015 -0400
# Branch stable
# Node ID 014e942ac29fbcc15a71b2d2692ae47a7eb018d5
# Parent  abbe33bf0c74d43144b8c8f483d04e8cd73ab0e6
linsolve.m: Fix regression when calling linsolve with 2 arguments (bug #45212)

* linsolve.m: Fix regression introduced in cset 91e1da1d1918 when linsolve
is called with 2 arguments. Add %!test for 2-argument form.

diff --git a/scripts/linear-algebra/linsolve.m b/scripts/linear-algebra/linsolve.m
--- a/scripts/linear-algebra/linsolve.m
+++ b/scripts/linear-algebra/linsolve.m
@@ -74,22 +74,23 @@ function [x, R] = linsolve (A, b, opts)
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   if (! (isnumeric (A) && isnumeric (b)))
     error ("linsolve: A and B must be numeric");
   endif
 
+  trans_A = false;
+
   ## Process any opts
   if (nargin > 2)
     if (! isstruct (opts))
       error ("linsolve: OPTS must be a structure");
     endif
-    trans_A = false;
     if (isfield (opts, "TRANSA") && opts.TRANSA)
       trans_A = true;
     endif
     if (isfield (opts, "POSDEF") && opts.POSDEF)
       A = matrix_type (A, "positive definite");
     endif
     if (isfield (opts, "LT") && opts.LT)
       A = matrix_type (A, "lower");
@@ -114,16 +115,24 @@ function [x, R] = linsolve (A, b, opts)
     endif
   endif
 
 endfunction
 
 
 %!test
 %! n = 10;
+%! A = rand (n);
+%! x = rand (n, 1);
+%! b = A * x;
+%! assert (linsolve (A, b), A \ b);
+%! assert (linsolve (A, b, struct ()), A \ b);
+
+%!test
+%! n = 10;
 %! A = triu (gallery ("condex", n));
 %! x = rand (n, 1);
 %! b = A' * x;
 %! opts.UT = true;
 %! opts.TRANSA = true;
 %! assert (linsolve (A, b, opts), A' \ b);
 
 %!error linsolve ()
