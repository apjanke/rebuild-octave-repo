# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1365964115 -7200
#      Sun Apr 14 20:28:35 2013 +0200
# Node ID 7af39cc909822e7c93ce2e9ced6215d6ca21f4de
# Parent  87b78e75a2b9af9c4963c2954d922a4ad5bdaef4
* find-dialog.cc(constructor): add close button to the find dialog

diff --git a/libgui/src/m-editor/find-dialog.cc b/libgui/src/m-editor/find-dialog.cc
--- a/libgui/src/m-editor/find-dialog.cc
+++ b/libgui/src/m-editor/find-dialog.cc
@@ -62,29 +62,29 @@ find_dialog::find_dialog (QsciScintilla*
   _replace_line_edit = new QLineEdit;
   _replace_label->setBuddy (_replace_line_edit);
 
   _case_check_box = new QCheckBox (tr ("Match &case"));
   _from_start_check_box = new QCheckBox (tr ("Search from &start"));
   _wrap_check_box = new QCheckBox (tr ("&Wrap while searching"));
   _wrap_check_box->setChecked(true);
   _find_next_button = new QPushButton (tr ("&Find Next"));
-  _find_next_button->setDefault (true);
   _replace_button = new QPushButton (tr ("&Replace"));
   _replace_all_button = new QPushButton (tr ("Replace &All"));
 
   _more_button = new QPushButton (tr ("&More"));
   _more_button->setCheckable (true);
   _more_button->setAutoDefault (false);
 
   _button_box = new QDialogButtonBox (Qt::Vertical);
   _button_box->addButton (_find_next_button, QDialogButtonBox::ActionRole);
   _button_box->addButton (_replace_button, QDialogButtonBox::ActionRole);
   _button_box->addButton (_replace_all_button, QDialogButtonBox::ActionRole);
   _button_box->addButton (_more_button, QDialogButtonBox::ActionRole);
+  _button_box->addButton (QDialogButtonBox::Close);
 
   _extension = new QWidget (this);
   _whole_words_check_box = new QCheckBox (tr ("&Whole words"));
   _regex_check_box = new QCheckBox (tr ("Regular E&xpressions"));
   _backward_check_box = new QCheckBox (tr ("Search &backward"));
   _search_selection_check_box = new QCheckBox (tr ("Search se&lection"));
   _search_selection_check_box->setCheckable (false); // TODO: Not implemented.
   _search_selection_check_box->setEnabled (false);
@@ -95,16 +95,18 @@ find_dialog::find_dialog (QsciScintilla*
   connect (_more_button,        SIGNAL (toggled (bool)),
            _extension,          SLOT (setVisible (bool)));
   connect (_replace_button,     SIGNAL (clicked ()),
            this,                SLOT (replace ()));
   connect (_replace_all_button, SIGNAL (clicked ()),
            this,                SLOT (replace_all ()));
   connect (_backward_check_box, SIGNAL (stateChanged (int)),
            this,                SLOT (handle_backward_search_changed (int)));
+  connect (_button_box,         SIGNAL (rejected ()),
+           this,                SLOT (close ()));
 
   QVBoxLayout *extension_layout = new QVBoxLayout ();
   extension_layout->setMargin (0);
   extension_layout->addWidget (_whole_words_check_box);
   extension_layout->addWidget (_backward_check_box);
   extension_layout->addWidget (_search_selection_check_box);
   _extension->setLayout (extension_layout);
 
@@ -121,21 +123,21 @@ find_dialog::find_dialog (QsciScintilla*
   left_layout->addWidget (_from_start_check_box);
   left_layout->addWidget (_wrap_check_box);
   left_layout->addWidget (_regex_check_box);
 
   QGridLayout *main_layout = new QGridLayout;
   main_layout->setSizeConstraint (QLayout::SetFixedSize);
   main_layout->addLayout (left_layout, 0, 0);
   main_layout->addWidget (_button_box, 0, 1);
-  main_layout->addWidget (_extension, 1, 0, 1, 2);
+  main_layout->addWidget (_extension, 1, 0);
   setLayout (main_layout);
 
   _extension->hide ();
-
+  _find_next_button->setDefault (true);
   _find_result_available = false;
 
 }
 
 // set text of "search from start" depending on backward search
 void
 find_dialog::handle_backward_search_changed (int backward)
 {
