# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1465764323 25200
#      Sun Jun 12 13:45:23 2016 -0700
# Node ID 67e51c889f34f2f96473558ef94b7cce9dfb1a45
# Parent  dc0347131364979149b4153978c218b96e069608
Silence errors from __have_gnuplot__ when gnuplot_binary is not found

* __init_gnuplot__.cc (have_gnuplot_binary): Add more checks to silence
distracting error messages if gnuplot_binary.m is not found or if an
unexpected value is returned.

diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -166,35 +166,48 @@ private:
   }
 };
 
 static bool
 have_gnuplot_binary (void)
 {
   const std::string exeext = octave::build_env::EXEEXT;
   const std::string path = octave::sys::env::getenv ("PATH");
+  bool retval = false;
 
-  octave_value_list tmp = feval ("gnuplot_binary", octave_value_list ());
-  std::string gnuplot_binary = tmp(0).string_value ();
+  try
+    {
+      octave_value_list tmp = feval ("gnuplot_binary", octave_value_list ());
 
-  string_vector args (gnuplot_binary);
-  std::string gnuplot_path = search_path_for_file (path, args);
+      if (tmp(0).is_string ())
+        {
+          std::string gnuplot_binary = tmp(0).string_value ();
+
+          string_vector args (gnuplot_binary);
+          std::string gnuplot_path = search_path_for_file (path, args);
+
+          octave::sys::file_stat fs (gnuplot_path);
 
-  octave::sys::file_stat fs (gnuplot_path);
+          if (! fs.exists () && ! exeext.empty ())
+            {
+              args[0] += exeext;
+
+              gnuplot_path = search_path_for_file (path, args);
 
-  if (! fs.exists () && ! exeext.empty ())
+              fs = octave::sys::file_stat (gnuplot_path);
+            }
+
+          retval = fs.exists ();
+        }
+    }
+  catch (octave_execution_exception&)
     {
-      args[0] += exeext;
-
-      gnuplot_path = search_path_for_file (path, args);
-
-      fs = octave::sys::file_stat (gnuplot_path);
     }
 
-  return fs.exists ();
+  return retval;
 }
 
 // Initialize the gnuplot graphics toolkit.
 
 DEFUN_DLD (__init_gnuplot__, , , "")
 {
   octave_value retval;
 
