# HG changeset patch
# User jwe
# Date 775798955 0
#      Tue Aug 02 03:42:35 1994 +0000
# Node ID 33d622a12de84af5a4dcb433739bf35a72e4d1bf
# Parent  6ed31b2e297a6be90bfb09936149fc1b564ad1cc
[project @ 1994-08-02 03:42:35 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -49,16 +49,17 @@ static SLStack <token*> token_stack;
 
 #include "user-prefs.h"
 #include "variables.h"
 #include "octave.h"
 #include "symtab.h"
 #include "error.h"
 #include "utils.h"
 #include "tree.h"
+#include "tree-misc.h"
 #include "tree-plot.h"
 #include "tree-const.h"
 #include "y.tab.h"
 #include "parse.h"
 #include "lex.h"
 
 // Nonzero means we think we are looking at a set command.
 static int doing_set = 0;
@@ -1126,17 +1127,17 @@ lookup_identifier (char *name)
  */
 static void
 grab_help_text (void)
 {
   int max_len = HELP_BUF_LENGTH - 1;
 
   int in_comment = 1;
   int len = 0;
-  int c;
+  int c = 0;
 
   while ((c = yyinput ()) != EOF)
     {
       if (in_comment)
 	{
 	  help_buf[len++] = c;
 	  if (c == '\n')
 	    in_comment = 0;
@@ -1161,16 +1162,19 @@ grab_help_text (void)
 	  warning ("grab_help_text: buffer overflow after caching %d chars",
 		   max_len);
 	  break;
 	}
     }
 
  done:
 
+  if (c)
+    yyunput (c, yytext);
+
   help_buf[len] =  '\0';
 }
 
 /*
  * Return 1 if the given character matches any character in the given
  * string.
  */
 static int
