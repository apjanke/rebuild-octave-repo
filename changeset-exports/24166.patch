# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1508697142 -7200
#      Sun Oct 22 20:32:22 2017 +0200
# Node ID 37190507b5d7dfcfe546bbdcab75689cd242eaa5
# Parent  d0cee5e0987921b75016ef1eb3fa68df0f4ba781
fix issues in editor auto closing feature (bug #52235)

* octave-qscintilla.cc (smart_indent): do indent but no auto close after a
  unwind_protect_cleanup, add parfor and methods for smart indent and
  auto closing

diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -445,17 +445,18 @@ octave_qscintilla::is_style_comment (int
 void
 octave_qscintilla::smart_indent (bool do_smart_indent,
                                  int do_auto_close, int line)
 {
   QString prevline = text (line);
 
   QRegExp bkey = QRegExp ("^[\t ]*(if|for|while|switch|case|otherwise"
                           "|do|function|properties|events|classdef"
-                          "|unwind_protect|unwind_protect_cleanup|try)"
+                          "|unwind_protect|unwind_protect_cleanup|try"
+                          "|parfor|methods)"
                           "[\r]?[\n\t #%]");
   // last word except for comments, assuming no ' or " in comment.
   // rx_end = QRegExp ("(\\w+)[ \t;\r\n]*([%#][^\"']*)?$");
 
   // last word except for comments,
   // allowing % and # in single or double quoted strings
   // FIXME This will get confused by transpose.
   QRegExp ekey = QRegExp ("(?:(?:['\"][^'\"]*['\"])?[^%#]*)*"
@@ -477,17 +478,18 @@ octave_qscintilla::smart_indent (bool do
         {
           // Do smart indent in the current line (line+1)
           indent (line+1);
           setCursorPosition (line+1, indentation (line) + indentationWidth ());
         }
 
       if (do_auto_close
               && ! inline_end
-              && ! first_word.contains (QRegExp ("(case|otherwise)")))
+              && ! first_word.contains (
+                      QRegExp ("(case|otherwise|unwind_protect_cleanup)")))
         {
           // Do auto close
           auto_close (do_auto_close, line, prevline, first_word);
         }
 
       return;
     }
 
