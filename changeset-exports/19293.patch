# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1413036088 -7200
#      Sat Oct 11 16:01:28 2014 +0200
# Branch stable
# Node ID 8d7e760bfa6870786aac52d72e230d9a1ed72c73
# Parent  d60b44acfff765ebd061b0ac1ab97ec482548c5b
importdata.m: better regexp pattern to assess delimiter (bug #43393)

diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -171,17 +171,17 @@ function [output, delimiter, header_rows
   header_cols = 0;
     
   ## Work through first few rows line by line until a delimiter is found.
   while (ischar (row = fgetl (fid)))
 
     ## If no delimiter determined yet, make a guess.
     if (isempty (delimiter))
       ## This pattern can be fooled, but mostly does the job just fine.
-      delim = regexp (row, '[-+\d.eE*ij ]+([^-+\d.ij])[-+\d.ij]',
+      delim = regexpi (row, '[-+\d.e*ij ]+([^-+\de.ij])[-+\de*.ij ]',
                       'tokens', 'once');
       #delim = regexp (row, '[+-\d.eE\*ij ]+([^+-\d.ij])[+-\d.ij]',
       #                     'tokens', 'once');
       if (! isempty (delim))
         delimiter = delim{1};
       endif
     endif
 
@@ -493,16 +493,28 @@ endfunction
 %! fputs (fid, "3.1\t-7.2\t0\r0.012\t6.5\t128");
 %! fclose (fid);
 %! [a,d,h] = importdata (fn, '\t');
 %! unlink (fn);
 %! assert (a, A);
 %! assert (d, "\t");
 %! assert (h, 0);
 
+%!test
+%! ## Distinguish double from complex when no delimiter is supplied (bug #43393)
+%! fn  = tmpnam ();
+%! fid = fopen (fn, "w");
+%! fputs (fid, "2.0000e+02   4.0000e-04");
+%! fclose (fid);
+%! [a, d, h] = importdata (fn);
+%! unlink (fn);
+%! assert (a, [2e2, 4e-4]);
+%! assert (d, " ");
+%! assert (h, 0);
+
 %!error importdata ()
 %!error importdata (1,2,3,4)
 %!error <FNAME must be a string> importdata (1)
 %!error <option -pastespecial not implemented> importdata ("-pastespecial")
 %!error <DELIMITER must be a single character> importdata ("foo", 1)
 %!error <DELIMITER must be a single character> importdata ("foo", "ab")
 %!error <HEADER_ROWS must be an integer> importdata ("foo", " ", "1")
 %!error <HEADER_ROWS must be an integer> importdata ("foo", " ", 1.5)
