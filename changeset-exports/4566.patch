# HG changeset patch
# User jwe
# Date 1067439989 0
#      Wed Oct 29 15:06:29 2003 +0000
# Node ID 30ba814d6700524a7164fcd204266774f9e3bc11
# Parent  1db951a4fcd527c8bb301d0ae2eaa176dc7cff01
[project @ 2003-10-29 15:06:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2003-10-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* DLD-FUNCTIONS/balance.cc: lscale and rscale args for dggbak are
+	const.  Use data() instead of fortran_vec where possible.
+	* DLD-FUNCTIONS/qz.cc: Likewise.
+
 	* data.cc (fill_matrix): Remove trailing singletons before
 	allocating the result matrix.
 
 	* input.cc (get_user_input): Don't forget about the diary here.
 
 2003-10-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-list.h (octave_list::nelem): Delete.
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -50,18 +50,18 @@ extern "C"
 			     double* LSCALE, double* RSCALE,
 			     double* WORK, int& INFO
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dggbak, DGGBAK) (F77_CONST_CHAR_ARG_DECL,
 			     F77_CONST_CHAR_ARG_DECL,
 			     const int& N, const int& ILO,
-			     const int& IHI, double* LSCALE,
-			     double* RSCALE, int& M,	double* V,
+			     const int& IHI, const double* LSCALE,
+			     const double* RSCALE, int& M, double* V,
 			     const int& LDV, int& INFO
 			     F77_CHAR_ARG_LEN_DECL
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zggbal, ZGGBAL) (F77_CONST_CHAR_ARG_DECL, const int& N,
 			     Complex* A, const int& LDA, Complex* B,
 			     const int& LDB, int& ILO, int& IHI,
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -68,18 +68,18 @@ extern "C"
 			     int& IHI, double* LSCALE, double* RSCALE,
 			     double* WORK, int& INFO
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dggbak, DGGBAK) (F77_CONST_CHAR_ARG_DECL,
 			     F77_CONST_CHAR_ARG_DECL,
 			     const int& N, const int& ILO,
-			     const int& IHI, double* LSCALE,
-			     double* RSCALE, int& M, double* V,
+			     const int& IHI, const double* LSCALE,
+			     const double* RSCALE, int& M, double* V,
 			     const int& LDV, int& INFO
 			     F77_CHAR_ARG_LEN_DECL
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgghrd, DGGHRD) (F77_CONST_CHAR_ARG_DECL,
 			     F77_CONST_CHAR_ARG_DECL,
 			     const int& N, const int& ILO,
@@ -466,19 +466,18 @@ See also: balance, dare, eig, schur\n\
   // for both the real and complex cases;
   // left first
 
   if (compq == 'V')
     {
       F77_XFCN (dggbak, DGGBAK,
 		(F77_CONST_CHAR_ARG2 (&bal_job, 1),
 		 F77_CONST_CHAR_ARG2 ("L", 1),
-		 nn, ilo, ihi, lscale.fortran_vec (),
-		 rscale.fortran_vec (), nn, QQ.fortran_vec (),
-		 nn, info
+		 nn, ilo, ihi, lscale.data (), rscale.data (),
+		 nn, QQ.fortran_vec (), nn, info
 		 F77_CHAR_ARG_LEN (1)
 		 F77_CHAR_ARG_LEN (1)));
 
 #ifdef DEBUG
       if (compq == 'V')
 	std::cout << "qz: balancing done; QQ=" << std::endl << QQ << std::endl;
 #endif
 
@@ -490,19 +489,18 @@ See also: balance, dare, eig, schur\n\
   }
 
   // then right
   if (compz == 'V')
     {
       F77_XFCN (dggbak, DGGBAK,
 		(F77_CONST_CHAR_ARG2 (&bal_job, 1),
 		 F77_CONST_CHAR_ARG2 ("R", 1),
-		 nn, ilo, ihi, lscale.fortran_vec (),
-		 rscale.fortran_vec (), nn, ZZ.fortran_vec (),
-		 nn, info
+		 nn, ilo, ihi, lscale.data (), rscale.data (),
+		 nn, ZZ.fortran_vec (), nn, info
 		 F77_CHAR_ARG_LEN (1)
 		 F77_CHAR_ARG_LEN (1)));
 
 #ifdef DEBUG
       if (compz == 'V')
 	std::cout << "qz: balancing done; ZZ=" << std::endl << ZZ << std::endl;
 #endif
 
@@ -657,18 +655,17 @@ See also: balance, dare, eig, schur\n\
 	      break;
 	    }
 
 	  int ndim, fail;
 	  double inf_norm;
 
 	  F77_XFCN (xdlange, XDLANGE,
 		    (F77_CONST_CHAR_ARG2 ("I", 1),
-		     nn, nn, aa.fortran_vec (), nn,
-		     work.fortran_vec (), inf_norm
+		     nn, nn, aa.data (), nn, work.fortran_vec (), inf_norm
 		     F77_CHAR_ARG_LEN (1)));
 
 	  double eps = DBL_EPSILON*inf_norm*nn;
 
 #ifdef DEBUG_SORT
 	  std::cout << "qz: calling dsubsp: aa=" << std::endl;
 	  octave_print_internal (std::cout, aa, 0);
 	  std::cout << std::endl << "bb="  << std::endl;
@@ -754,16 +751,19 @@ See also: balance, dare, eig, schur\n\
 			  std::cout << "aa(" << idr << "," << idc << ")="
 			       << aa(idr,idc) << std::endl;
 			  std::cout << "bb(" << idr << "," << idc << ")="
 			       << bb(idr,idc) << std::endl;
 			}
 		    }
 #endif
 
+		  // XXX FIXME XXX -- probably should be using
+		  // fortran_vec instead of &aa(jj,jj) here.
+
 		  double scale1, scale2, wr1, wr2, wi;
 		  F77_XFCN (dlag2, DLAG2,
 			    (&aa(jj,jj), nn, &bb(jj,jj), nn, safmin,
 			     scale1, scale2, wr1, wr2, wi));
 
 #ifdef DEBUG_EIG
 		  std::cout << "dlag2 returns: scale1=" << scale1
 		       << "\tscale2=" << scale2 << std::endl
