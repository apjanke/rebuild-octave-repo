# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1295511854 18000
#      Thu Jan 20 03:24:14 2011 -0500
# Node ID 06cfda4c07e5419e7908e7442fdac3d220b3c4f4
# Parent  b124b83e5626e73692f1966c778cca5625998842
load_path::do_add, load_path::do_remove: strip trailing directory separators

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-20  John W. Eaton  <jwe@octave.org>
+
+	* load-path.cc (strip_trailing_separators): New static function.
+	(load_path::do_add, load_path::do_remove): Call it on directory arg.
+
 2011-01-20  John W. Eaton  <jwe@octave.org>
 
 	* gl-render.h, graphics.cc, gl-render.cc, graphics.h.in:
 	Update for backend -> graphics_toolkit change.
 
 	* DLD-FUNCTIONS/__init_fltk__.cc: Rename from fltk_backend.cc
 	Update for backend -> graphics_toolkit change.
 	* DLD-FUNCTIONS/module-files, Makefile.am: Update for renamed file.
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -601,27 +601,46 @@ load_path::do_append (const std::string&
 
 void
 load_path::do_prepend (const std::string& dir, bool warn)
 {
   if (! dir.empty ())
     do_add (dir, false, warn);
 }
 
+// Strip trailing directory separators.
+
+static std::string
+strip_trailing_separators (const std::string& dir_arg)
+{
+  std::string dir = dir_arg;
+
+  octave_idx_type k = dir.length ();
+  while (k > 1 && file_ops::is_dir_sep (dir[k-1]))
+    k--;
+
+  if (k < dir.length ())
+    dir.resize (k);
+
+  return dir;
+}
+
 void
 load_path::do_add (const std::string& dir_arg, bool at_end, bool warn)
 {
   size_t len = dir_arg.length ();
 
   if (len > 1 && dir_arg.substr (len-2) == "//")
     warning_with_id ("Octave:recursive-path-search",
                      "trailing `//' is no longer special in search path elements");
 
   std::string dir = file_ops::tilde_expand (dir_arg);
 
+  dir = strip_trailing_separators (dir);
+
   dir_info_list_iterator i = find_dir_info (dir);
 
   if (i != dir_info_list.end ())
     move (i, at_end);
   else
     {
       file_stat fs (dir);
 
@@ -769,16 +788,18 @@ load_path::do_remove (const std::string&
 
           // Avoid additional warnings.
           retval = true;
         }
       else
         {
           std::string dir = file_ops::tilde_expand (dir_arg);
 
+          dir = strip_trailing_separators (dir);
+
           dir_info_list_iterator i = find_dir_info (dir);
 
           if (i != dir_info_list.end ())
             {
               retval = true;
 
               if (remove_hook)
                 remove_hook (dir);
