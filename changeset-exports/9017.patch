# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1238013885 14400
#      Wed Mar 25 16:44:45 2009 -0400
# Node ID 9543a90fac1863f9e74c4bf201db7e4c22b11614
# Parent  07c4e6c6ad8933e41aad85f80cd4adfacdf6a6d3
seek to skip if writing inside bounds of existing file

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2009-03-25  John W. Eaton  <jwe@octave.org>
 
+	* oct-stream.cc (octave_stream::write (const Array<T>&,
+	octave_idx_type, oct_data_conv::data_type, octave_idx_type,
+	oct_mach_info::float_format)): Seek to skip if still inside bounds
+	of existing file.  Otherwise, write NUL to skip.
+
 	* Makefile.in (%.df : %.cc): Write source file name to output,
 	wrapped in XDEFUN_FILE_NAME macro.
 	* mkbuiltins: Provide definition for XDEFUN_FILE_NAME.
 	* mkgendoc: Likeiwse.
 	(XDEFUN_DLD_INTERNAL, XDEFUNX_DLD_INTERNAL, XDEFUN_INTERNAL,
 	XDEFCONSTFUN_INTERNAL, XDEFUNX_INTERNAL, XDEFVAR_INTERNAL,
 	XDEFCONST_INTERNAL): Pass file_name to print_doc_string.
 	(print_doc_string): New arg, FILE_NAME.  Print file name as
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -3590,27 +3590,46 @@ octave_stream::write (const Array<T>& da
   for (octave_idx_type i = 0; i < n; i++)
     {
       std::ostream *osp = output_stream ();
 
       if (osp)
 	{
 	  std::ostream& os = *osp;
 
-	  // It seems that Matlab writes zeros instead of actually
-	  // seeking.  Hmm...
-
 	  if (skip != 0 && (i % block_size) == 0)
 	    {
-	      // FIXME -- probably should try to write larger
-	      // blocks...
-
-	      unsigned char zero = 0;
-	      for (int j = 0; j < skip; j++)
-		os.write (reinterpret_cast<const char *> (&zero), 1);
+	      // Seek to skip when inside bounds of existing file.
+	      // Otherwise, write NUL to skip.
+
+	      long orig_pos = tell ();
+
+	      seek (0, SEEK_END);
+
+	      long eof_pos = tell ();
+
+	      // Is it possible for this to fail to return us to the
+	      // original position?
+	      seek (orig_pos, SEEK_SET);
+
+	      long remaining = eof_pos - orig_pos;
+
+	      if (remaining < skip)
+		{
+		  seek (0, SEEK_END);
+
+		  // FIXME -- probably should try to write larger
+		  // blocks...
+
+		  unsigned char zero = 0;
+		  for (octave_idx_type j = 0; j < skip - remaining; j++)
+		    os.write (reinterpret_cast<const char *> (&zero), 1);
+		}
+	      else
+		seek (skip, SEEK_CUR);
 	    }
 
 	  if (os)
 	    {
 	      status = do_write (os, d[i], output_type, flt_fmt, swap,
 				 do_float_conversion);
 
 	      if (os && status)
