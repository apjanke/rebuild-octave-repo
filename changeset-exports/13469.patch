# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1303160321 -7200
#      Mon Apr 18 22:58:41 2011 +0200
# Node ID a20f8763105f77556057f07cee59c3cee21ca32a
# Parent  519ae5ea6bd4cefd69deb6ddaa6ed46d45c49a87
Added some OpenGL plotting.

diff --git a/gui//Quint.pro b/gui//Quint.pro
--- a/gui//Quint.pro
+++ b/gui//Quint.pro
@@ -1,15 +1,15 @@
 #-------------------------------------------------
 #
 # Project created by QtCreator 2011-04-04T12:17:52
 #
 #-------------------------------------------------
 
-QT       += core gui webkit xml
+QT       += core gui webkit xml opengl
 UI_DIR = ui-files
 MOC_DIR = moc-files
 OBJECTS_DIR = object-files
 TARGET = Quint
 TEMPLATE = app
 INCLUDEPATH += src
 DESTDIR = bin
 SOURCES +=\
@@ -40,17 +40,19 @@ SOURCES +=\
     src/VariablesDockWidget.cpp \
     src/HistoryDockWidget.cpp \
     src/FilesDockWidget.cpp \
     src/FileEditorMdiSubWindow.cpp \
     src/SyntaxHighlighter.cpp \
     src/BrowserWidget.cpp \
     src/NumberedCodeEdit.cpp \
     src/SimpleEditor.cpp \
-    src/ImageViewerMdiSubWindow.cpp
+    src/ImageViewerMdiSubWindow.cpp \
+    src/PlotterWidget.cpp \
+    src/Plot2dWidget.cpp
 
 HEADERS += \
         src/TerminalCharacterDecoder.h \
         src/Character.h \
         src/CharacterColor.h \
         src/KeyboardTranslator.h \
         src/Screen.h \
         src/History.h \
@@ -79,17 +81,19 @@ HEADERS += \
     src/VariablesDockWidget.h \
     src/HistoryDockWidget.h \
     src/FilesDockWidget.h \
     src/FileEditorMdiSubWindow.h \
     src/SyntaxHighlighter.h \
     src/BrowserWidget.h \
     src/NumberedCodeEdit.h \
     src/SimpleEditor.h \
-    src/ImageViewerMdiSubWindow.h
+    src/ImageViewerMdiSubWindow.h \
+    src/PlotterWidget.h \
+    src/Plot2dWidget.h
 
 INCFLAGS = -g3 $$system(mkoctfile -p INCFLAGS)
 LFLAGS = $$system(mkoctfile -p LFLAGS) \
          $$system(mkoctfile -p OCTAVE_LIBS) \
          $$system(mkoctfile -p LIBS)
 #LIBS    += $$LFLAGS -lutil
 QMAKE_LFLAGS += $$LFLAGS -lutil
 QMAKE_CXXFLAGS  += $$INCFLAGS
diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -81,16 +81,17 @@ void MainWindow::handleLoadWorkspaceRequ
 
 void MainWindow::handleClearWorkspaceRequest() {
     m_octaveTerminal->sendText("clear\n");
     m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleCommandDoubleClicked(QString command) {
     m_octaveTerminal->sendText(command);
+    m_centralTabWidget->setCurrentWidget(m_octaveTerminal);
     m_octaveTerminal->setFocus();
 }
 
 void MainWindow::closeEvent(QCloseEvent *closeEvent) {
     m_isRunning = false;
     reportStatusMessage(tr("Saving data and shutting down."));
     writeSettings();
 
@@ -119,19 +120,21 @@ void MainWindow::constructWindow() {
     m_generalPurposeToolbar = new QToolBar(tr("Octave Toolbar"), this);
     m_variablesDockWidget = new VariablesDockWidget(this);
     m_historyDockWidget = new HistoryDockWidget(this);
     m_filesDockWidget = new FilesDockWidget(this);
     m_openedFiles = new QMdiArea(this);
     m_statusBar = new QStatusBar(this);
     m_browserWidget = new BrowserWidget(this);
     m_serviceWidget = new BrowserWidget(this);
+    m_plotterWidget = new PlotterWidget(this);
     m_centralTabWidget = new QTabWidget(this);
     m_centralTabWidget->addTab(m_octaveTerminal, tr("Command Window"));
     m_centralTabWidget->addTab(m_openedFiles, tr("File Editor"));
+    m_centralTabWidget->addTab(m_plotterWidget, tr("Plotter"));
     m_centralTabWidget->addTab(m_browserWidget, tr("Documentation"));
     m_centralTabWidget->addTab(m_serviceWidget, tr("Service"));
 
     // TODO: Add meaningfull toolbar items.
     QAction *commandAction = new QAction(style->standardIcon(QStyle::SP_CommandLink),
         "", m_generalPurposeToolbar);
     QAction *computerAction = new QAction(style->standardIcon(QStyle::SP_ComputerIcon),
         "", m_generalPurposeToolbar);
diff --git a/gui//src/MainWindow.h b/gui//src/MainWindow.h
--- a/gui//src/MainWindow.h
+++ b/gui//src/MainWindow.h
@@ -27,16 +27,17 @@
 #include <QToolBar>
 #include "OctaveTerminal.h"
 #include "OctaveLink.h"
 #include "VariablesDockWidget.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "SimpleEditor.h"
 #include "BrowserWidget.h"
+#include "PlotterWidget.h"
 
 // Octave includes
 #undef PACKAGE_BUGREPORT
 #undef PACKAGE_NAME
 #undef PACKAGE_STRING
 #undef PACKAGE_TARNAME
 #undef PACKAGE_VERSION
 #undef PACKAGE_URL
@@ -118,16 +119,17 @@ private:
     HistoryDockWidget *m_historyDockWidget;
     FilesDockWidget *m_filesDockWidget;
     QMdiArea *m_openedFiles;
     QTabWidget *m_centralTabWidget;
     QStatusBar *m_statusBar;
     QToolBar *m_generalPurposeToolbar;
     BrowserWidget *m_browserWidget;
     BrowserWidget *m_serviceWidget;
+    PlotterWidget *m_plotterWidget;
     QString m_settingsFile;
 
     // Threads for running octave and managing the data interaction.
     OctaveMainThread *m_octaveMainThread;
     OctaveCallbackThread *m_octaveCallbackThread;
     bool m_isRunning;
 };
 
diff --git a/gui/src/Plot2dWidget.cpp b/gui/src/Plot2dWidget.cpp
new file mode 100644
--- /dev/null
+++ b/gui/src/Plot2dWidget.cpp
@@ -0,0 +1,79 @@
+#include "Plot2dWidget.h"
+#include <QVBoxLayout>
+#include <QHBoxLayout>
+#include <QPushButton>
+
+Plot2dView::Plot2dView(QWidget *parent)
+    : QGLWidget(parent) {
+    construct();
+}
+
+void Plot2dView::construct() {
+}
+
+void Plot2dView::initializeGL() {
+    glClearColor(0.9, 0.9, 0.9, 0.0);
+    glEnable(GL_POINT_SMOOTH);
+    // glEnable(GL_LINE_SMOOTH);
+    glEnable(GL_POLYGON_SMOOTH);
+    glEnable(GL_BLEND);
+    glBlendFunc(GL_SRC_ALPHA,GL_ONE_MINUS_SRC_ALPHA);
+}
+
+void Plot2dView::paintGL() {
+    glClear(GL_COLOR_BUFFER_BIT);
+    glBegin(GL_LINES);
+        glColor3d(0.0, 0.0, 0.0);
+        glVertex2d(0.1, 0.1);
+        glVertex2d(0.9, 0.1);
+        glVertex2d(0.1, 0.1);
+        glVertex2d(0.1, 0.9);
+    glEnd();
+
+    glBegin(GL_POLYGON);
+        glVertex2d(0.092, 0.9);
+        glVertex2d(0.108, 0.9);
+        glVertex2d(0.1, 0.93);
+    glEnd();
+    glBegin(GL_POLYGON);
+        glVertex2d(0.9, 0.092);
+        glVertex2d(0.9, 0.108);
+        glVertex2d(0.93, 0.1);
+    glEnd();
+
+    renderText(0.8, 0.05, 0.0, "axis");
+}
+
+void Plot2dView::resizeGL(int w, int h) {
+    glViewport(0, 0, w, h);
+    glMatrixMode(GL_MODELVIEW_MATRIX);
+    glLoadIdentity();
+
+    glMatrixMode(GL_PROJECTION_MATRIX);
+    glLoadIdentity();
+    glOrtho(0.0, 1.0, 0.0, 1.0, 0.0, 100.0);
+}
+
+Plot2dWidget::Plot2dWidget(QWidget *parent) :
+    QWidget(parent) {
+    construct();
+}
+
+void Plot2dWidget::construct() {
+    QVBoxLayout *layout = new QVBoxLayout();
+    m_plot2dView = new Plot2dView(this);
+    m_plot2dView->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Expanding);
+    layout->addWidget(m_plot2dView);
+        QWidget *buttonBar = new QWidget(this);
+        QHBoxLayout *buttonBarLayout = new QHBoxLayout(this);
+        QPushButton *exportButton = new QPushButton(tr("Export"), this);
+        exportButton->setEnabled(false);
+        buttonBarLayout->addWidget(exportButton);
+        buttonBarLayout->addStretch();
+        buttonBarLayout->setMargin(1);
+        buttonBar->setLayout(buttonBarLayout);
+        buttonBar->setSizePolicy(QSizePolicy::Expanding, QSizePolicy::Minimum);
+    layout->addWidget(buttonBar);
+    layout->setMargin(0);
+    setLayout(layout);
+}
diff --git a/gui/src/Plot2dWidget.h b/gui/src/Plot2dWidget.h
new file mode 100644
--- /dev/null
+++ b/gui/src/Plot2dWidget.h
@@ -0,0 +1,36 @@
+#ifndef PLOT2DWIDGET_H
+#define PLOT2DWIDGET_H
+
+#include <QWidget>
+#include <QGLWidget>
+
+class Plot2dView : public QGLWidget {
+public:
+    explicit Plot2dView(QWidget *parent = 0);
+
+protected:
+    void initializeGL();
+    void paintGL();
+    void resizeGL(int w, int h);
+
+private:
+    void construct();
+};
+
+class Plot2dWidget : public QWidget
+{
+    Q_OBJECT
+public:
+    explicit Plot2dWidget(QWidget *parent = 0);
+
+signals:
+
+public slots:
+
+private:
+    void construct();
+
+    Plot2dView *m_plot2dView;
+};
+
+#endif // PLOT2DWIDGET_H
diff --git a/gui/src/PlotterWidget.cpp b/gui/src/PlotterWidget.cpp
new file mode 100644
--- /dev/null
+++ b/gui/src/PlotterWidget.cpp
@@ -0,0 +1,41 @@
+#include "PlotterWidget.h"
+#include "Plot2dWidget.h"
+#include <QVBoxLayout>
+#include <QHBoxLayout>
+#include <QPushButton>
+#include <QMdiSubWindow>
+
+PlotterWidget::PlotterWidget(QWidget *parent)
+    : QWidget(parent) {
+    construct();
+}
+
+void PlotterWidget::addNew2dPlot() {
+    QMdiSubWindow *mdiSubWindow = new QMdiSubWindow(this);
+    mdiSubWindow->setWidget(new Plot2dWidget(this));
+    mdiSubWindow->setWindowTitle("2d Plot");
+    m_mdiArea->addSubWindow(mdiSubWindow);
+    mdiSubWindow->resize(400, 300);
+    mdiSubWindow->showMaximized();
+}
+
+void PlotterWidget::construct() {
+    QVBoxLayout *layout = new QVBoxLayout();
+    m_mdiArea = new QMdiArea(this);
+        layout->addWidget(m_mdiArea);
+        QWidget *buttonBar = new QWidget(this);
+        QHBoxLayout *buttonBarLayout = new QHBoxLayout(this);
+        QPushButton *createPlot2dButton = new QPushButton(tr("Create 2d Plot"), this);
+        QPushButton *createPlot3dButton = new QPushButton(tr("Create 3d Plot"), this);
+        createPlot3dButton->setEnabled(false);
+        buttonBarLayout->addWidget(createPlot2dButton);
+        buttonBarLayout->addWidget(createPlot3dButton);
+        buttonBarLayout->addStretch();
+        buttonBarLayout->setMargin(1);
+        buttonBar->setLayout(buttonBarLayout);
+    layout->addWidget(buttonBar);
+    layout->setMargin(0);
+    setLayout(layout);
+
+    connect(createPlot2dButton, SIGNAL(clicked()), this, SLOT(addNew2dPlot()));
+}
diff --git a/gui/src/PlotterWidget.h b/gui/src/PlotterWidget.h
new file mode 100644
--- /dev/null
+++ b/gui/src/PlotterWidget.h
@@ -0,0 +1,20 @@
+#ifndef PLOTTERWIDGET_H
+#define PLOTTERWIDGET_H
+
+#include <QWidget>
+#include <QMdiArea>
+
+class PlotterWidget : public QWidget {
+    Q_OBJECT
+public:
+    PlotterWidget(QWidget *parent = 0);
+
+public slots:
+    void addNew2dPlot();
+
+private:
+    void construct();
+    QMdiArea *m_mdiArea;
+};
+
+#endif // PLOTTERWIDGET_H
