# HG changeset patch
# User jwe
# Date 846347857 0
#      Sat Oct 26 16:37:37 1996 +0000
# Node ID 874f758eade54b494c1913de523977e956eef7ce
# Parent  8426659cd60e70f8b8687ab942cc6ff8cc1003fd
[project @ 1996-10-26 16:37:36 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Sat Oct 26 10:40:05 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* defun.h (DEFVAR_INT): Set eternal flag with (svc_fcn != 0)
+	instead of (sv_fcn ? 1 : 0)
+
 Fri Oct 25 01:10:51 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-ch-mat.h (octave_char_matrix::any): Return 0.0 instead of false.
 	(octave_char_matrix::all): Likewise.
 
 	* input.cc (Fecho): When binding value of echo_executing_commands,
 	cast ECHO_* to double.
 
diff --git a/src/defun.h b/src/defun.h
--- a/src/defun.h
+++ b/src/defun.h
@@ -73,17 +73,17 @@ Software Foundation, 59 Temple Place - S
   DEFVAR_INT ("__" ## name ## "__", X ## sname, defn, 0, 1, sv_fcn, doc)
 
 // How builtin variables are actually installed.
 
 #define DEFVAR_INT(name, sname, defn, inst_as_fcn, protect, sv_fcn, doc) \
   do \
     { \
       builtin_variable sname (name, octave_value (defn), inst_as_fcn, \
-			      protect, (sv_fcn ? 1 : 0), sv_fcn, doc); \
+			      protect, (sv_fcn != 0), sv_fcn, doc); \
       install_builtin_variable (sname); \
     } \
   while (0)
 
 // Define a builtin function.
 //
 //   name is the name of the function, unqouted.
 //
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -338,32 +338,30 @@ DEFUN (fopen, args, ,
 {
   octave_value_list retval = -1.0;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
       if (args(0).is_string () && args(0).string_value () == "all")
-	{
-	  return octave_stream_list::open_file_numbers ();
-	}
+	retval(0) = octave_stream_list::open_file_numbers ();
       else
 	{
 	  string_vector tmp = octave_stream_list::get_info (args(0));
 
 	  if (! error_state)
 	    {
 	      retval(2) = tmp(2);
 	      retval(1) = tmp(1);
 	      retval(0) = tmp(0);
 	    }
+	}
 
-	  return retval;
-	}
+      return retval;
     }
 
   if (nargin > 0 && nargin < 4)
     {
       octave_value mode = (nargin == 2 || nargin == 3)
 	? args(1) : octave_value ("r");
 
       octave_value arch = (nargin == 3)
diff --git a/src/fn-cache.h b/src/fn-cache.h
--- a/src/fn-cache.h
+++ b/src/fn-cache.h
@@ -34,17 +34,21 @@ class string_vector;
 // XXX FIXME XXX -- this should maybe be nested in the
 // octave_fcn_file_name_cache class...
 
 class
 file_name_cache_elt
 {
 public:
 
-  file_name_cache_elt (const string& dir_name = string ())
+  file_name_cache_elt (void)
+    : timestamp (0), fcn_file_names (), fcn_file_names_no_suffix ()
+      { update (string ()); }
+
+  file_name_cache_elt (const string& dir_name)
     : timestamp (0), fcn_file_names (), fcn_file_names_no_suffix ()
       { update (dir_name); }
 
   file_name_cache_elt (const file_name_cache_elt& elt)
     {
       timestamp = elt.timestamp;
       fcn_file_names = elt.fcn_file_names;
       fcn_file_names_no_suffix = elt.fcn_file_names_no_suffix;
@@ -80,23 +84,23 @@ public:
 
 class
 octave_fcn_file_name_cache
 {
 protected:
 
   octave_fcn_file_name_cache (void)
     : cache (file_name_cache_elt ())
-      { update (); }
+      { update (string ()); }
 
 public:
 
   ~octave_fcn_file_name_cache (void) { }
 
-  bool update (const string& path = string ());
+  bool update (const string& path);
 
   static string_vector list (bool no_suffix = false)
     { return list (string (), no_suffix); }
 
   static string_vector list (const string& path, bool no_suffix = false);
 
   static string_vector list_no_suffix (void)
     { return list (true); }
