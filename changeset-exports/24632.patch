# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1516602713 18000
#      Mon Jan 22 01:31:53 2018 -0500
# Node ID e9f7cfd40f85baa9e8aa943eb1ed14493a912570
# Parent  6de74d95a7a1a2a361c98373ad771c7c4b82d397
rename some signals and slots for consistency and clarity

* main-window.h, main-window.cc (main_window::refresh_variable_editor):
Rename from main_window::clear_variable_editor_cache.  Change all uses.
(main_window::handle_variable_editor_update): Rename from
main_window::variable_editor_callback.  Change all uses.
(main_window::refresh_workspace_callback): Rename from
main_window::force_refresh_workspace.  Change all uses.

* octave-qt-link.h, octave-qt-link.cc
(octave_qt_link::open_variable_signal): Rename from
octave_qt_link::open_variable.  Change all uses.
(octave_qt_link::refresh_variable_editor_signal): Rename from
octave_qt_link::refresh_variable_editor.  Change all uses.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1744,26 +1744,30 @@ main_window::edit_variable (const QStrin
     {
       m_variable_editor_window->show ();
       m_variable_editor_window->raise ();
     }
 
 }
 
 void
-main_window::clear_variable_editor_cache (void)
+main_window::refresh_variable_editor (void)
 {
   m_variable_editor_window->clear_data_cache ();
 }
 
 void
-main_window::variable_editor_callback (void)
+main_window::handle_variable_editor_update (void)
 {
-  // Called when the variable editor makes changes.
-  octave_link::post_event(this, &main_window::force_refresh_workspace);
+  // Called when the variable editor emits the updated signal.  The size
+  // of a variable may have changed, so we refresh the workspace in the
+  // interpreter.  That will eventually cause the workspace view in the
+  // GUI to be updated.
+
+  octave_link::post_event (this, &main_window::refresh_workspace_callback);
 }
 
 void
 main_window::closeEvent (QCloseEvent *e)
 {
   e->ignore ();
   octave_cmd_exec *cmd = new octave_cmd_exec ("exit");
   m_cmd_queue.add_cmd (cmd);
@@ -1795,30 +1799,30 @@ main_window::construct (void)
     {
       setWindowIcon (QIcon (":/actions/icons/logo.png"));
 
       m_workspace_window->setModel (m_workspace_model);
 
       connect (m_workspace_model, SIGNAL (model_changed (void)),
                m_workspace_window, SLOT (handle_model_changed (void)));
 
-      connect (m_octave_qt_link, SIGNAL (open_variable (const QString&)),
+      connect (m_octave_qt_link, SIGNAL (open_variable_signal (const QString&)),
                this, SLOT (edit_variable (const QString&)));
 
-      connect (m_octave_qt_link, SIGNAL (refresh_variable_editor (void)),
-               this, SLOT (clear_variable_editor_cache (void)));
+      connect (m_octave_qt_link, SIGNAL (refresh_variable_editor_signal (void)),
+               this, SLOT (refresh_variable_editor (void)));
 
       connect (m_workspace_model,
                SIGNAL (rename_variable (const QString&, const QString&)),
                this,
                SLOT (handle_rename_variable_request (const QString&,
                                                      const QString&)));
 
       connect (m_variable_editor_window, SIGNAL (updated (void)),
-               this, SLOT (variable_editor_callback (void)));
+               this, SLOT (handle_variable_editor_update (void)));
 
       connect (m_command_window, SIGNAL (interrupt_signal (void)),
                this, SLOT (interrupt_interpreter (void)));
 
       construct_menu_bar ();
 
       construct_tool_bar ();
 
@@ -2613,16 +2617,28 @@ main_window::clear_workspace_callback (v
 void
 main_window::clear_history_callback (void)
 {
   // INTERPRETER THREAD
 
   Fhistory (ovl ("-c"));
 }
 
+void
+main_window::refresh_workspace_callback (void)
+{
+  // INTERPRETER THREAD
+
+  octave::symbol_scope scope
+   = octave::__get_current_scope__ ("main_window::force_refresh_workspace");
+
+  if (scope)
+    octave_link::set_workspace (true, scope.workspace_info (), false);
+}
+
 bool
 main_window::focus_console_after_command (void)
 {
   QSettings *settings = resource_manager::get_settings ();
   return settings->value ("terminal/focus_after_command",false).toBool ();
 }
 
 void
@@ -2717,28 +2733,16 @@ main_window::configure_shortcuts (void)
 
   // news menu
   shortcut_manager::set_shortcut (m_release_notes_action,
                                   "main_news:release_notes");
   shortcut_manager::set_shortcut (m_current_news_action,
                                   "main_news:community_news");
 }
 
-void
-main_window::force_refresh_workspace (void)
-{
-  // INTERPRETER THREAD
-
-  octave::symbol_scope scope
-   = octave::__get_current_scope__ ("main_window::load_workspace_callback");
-
-  if (scope)
-    octave_link::set_workspace (true, scope.workspace_info (), false);
-}
-
 QList<octave_dock_widget *>
 main_window::dock_widget_list (void)
 {
   QList<octave_dock_widget *> list = QList<octave_dock_widget *> ();
   list.append (static_cast<octave_dock_widget *> (m_command_window));
   list.append (static_cast<octave_dock_widget *> (m_history_window));
   list.append (static_cast<octave_dock_widget *> (m_file_browser_window));
   list.append (static_cast<octave_dock_widget *> (m_doc_browser_window));
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -279,19 +279,19 @@ private slots:
   void restore_create_file_setting (void);
   void set_file_encoding (const QString& new_encoding);
   void request_open_files (const QStringList& open_file_names);
 
   //! Opens the variable editor for @p name.
 
   void edit_variable (const QString &name);
 
-  void clear_variable_editor_cache (void);
+  void refresh_variable_editor (void);
 
-  void variable_editor_callback (void);
+  void handle_variable_editor_update (void);
 
 protected:
 
   void closeEvent (QCloseEvent *closeEvent);
 
 private:
 
   void construct (void);
@@ -332,26 +332,26 @@ private:
   void resize_command_window_callback (void);
 
   void set_screen_size_callback (const int_pair&);
 
   void clear_workspace_callback (void);
 
   void clear_history_callback (void);
 
+  void refresh_workspace_callback (void);
+
   bool focus_console_after_command (void);
 
   void new_figure_callback (void);
 
   void change_directory_callback (const std::string& directory);
 
   void configure_shortcuts (void);
 
-  void force_refresh_workspace (void);
-
   QList<octave_dock_widget *> dock_widget_list (void);
 
   octave::gui_application *m_app_context;
 
   octave_interpreter *m_interpreter;
 
   QThread *m_main_thread;
 
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -441,17 +441,17 @@ octave_qt_link::do_set_workspace (bool t
       values.append (QString::fromStdString (it->value ()));
       complex_flags.append (it->complex_flag ());
     }
 
   emit set_workspace_signal (top_level, debug, scopes, symbols, class_names,
                              dimensions, values, complex_flags);
 
   if (update_variable_editor)
-    emit refresh_variable_editor ();
+    emit refresh_variable_editor_signal ();
 }
 
 void
 octave_qt_link::do_clear_workspace (void)
 {
   emit clear_workspace_signal ();
 }
 
@@ -613,17 +613,17 @@ void
 octave_qt_link::do_show_doc (const std::string& file)
 {
   emit show_doc_signal (QString::fromStdString (file));
 }
 
 void
 octave_qt_link::do_openvar (const std::string &expr)
 {
-  emit open_variable (QString::fromStdString (expr));
+  emit open_variable_signal (QString::fromStdString (expr));
 }
 
 void
 octave_qt_link::do_insert_debugger_pointer (const std::string& file, int line)
 {
   emit insert_debugger_pointer_signal (QString::fromStdString (file), line);
 }
 
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -192,16 +192,16 @@ signals:
 
   void insert_debugger_pointer_signal (const QString&, int);
   void delete_debugger_pointer_signal (const QString&, int);
 
   void show_preferences_signal (void);
 
   void show_doc_signal (const QString& file);
 
-  void open_variable (const QString &name);
+  void open_variable_signal (const QString &name);
 
-  void refresh_variable_editor();
+  void refresh_variable_editor_signal (void);
 
   void confirm_shutdown_signal (void);
 };
 
 #endif
