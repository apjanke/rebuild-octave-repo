# HG changeset patch
# User Juan Pablo Carbajal (desktop) <ajuanpi+dev@gmail.com>
# Date 1351026573 -7200
#      Tue Oct 23 23:09:33 2012 +0200
# Node ID 6f3363ff368c8a82d65df0ac24d3d8b390b5bd8c
# Parent  8e6a72cac999ed3346d3b37d70f7c5ea82301c0f
print_usage.m: Adding error identifiers.

diff --git a/scripts/help/print_usage.m b/scripts/help/print_usage.m
--- a/scripts/help/print_usage.m
+++ b/scripts/help/print_usage.m
@@ -28,24 +28,25 @@
 function print_usage (name)
   x = dbstack ();
   ## Handle input
   if (nargin == 0)
     ## Determine the name of the calling function
     if (numel (x) > 1)
       name = x (2).name;
     else
-      error ("print_usage: invalid function\n");
+      error ("Octave:invalid-context", "print_usage: invalid function\n");
     endif
     fullpath = evalin ("caller", "mfilename (""fullpath"")");
     if (strcmp (fullpath(end-length(name)+1:end), name))
       fullname = [fullpath, ".m"];
     endif
   elseif (!ischar (name))
-    error ("print_usage: input argument must be a string");
+    error ("Octave:invalid-input-arg",
+                                "print_usage: input argument must be a string");
   else
     fullname = name;
   endif
 
   ## Determine if we're called from top level.
   at_toplev = length (x) < 2 || (length (x) == 2 && strcmp (x(2).name, name));
 
   ## Do the actual work
@@ -68,28 +69,28 @@ function print_usage (name)
 
   ## Raise the final error
   if (status != 0)
     warning ("print_usage: Texinfo formatting filter exited abnormally");
     warning ("print_usage: raw Texinfo source of help text follows...\n");
   endif
 
   if (at_toplev)
-    error ("Invalid call to %s.  Correct usage is:\n\n%s\n%s",
+    error ("Octave:invalid-fun-call", "Invalid call to %s.  Correct usage is:\n\n%s\n%s",
            name, usage_string, __additional_help_message__ ());
   else
     msg = sprintf ("Invalid call to %s.  Correct usage is:\n\n%s",
                    name, usage_string);
     ## Ensure that the error doesn't end up with a newline, as that disables
     ## backtraces.
     if (msg(end) == "\n")
       msg(end) = " ";
     endif
 
-    error (msg);
+    error ("Octave:invalid-fun-call", msg);
   endif
 
 endfunction
 
 function [retval, status] = get_usage_plain_text (help_text, max_len)
   ## Extract first line by searching for a double line-end.
   line_end_idx = strfind (help_text, "\n\n");
   retval = help_text (1:min ([line_end_idx , max_len, length(help_text)]));
@@ -134,9 +135,8 @@ function [retval, status] = get_usage_ht
 
   ## Extract first line with plain text method.
   retval = get_usage_plain_text (help_text, max_len);
 endfunction
 
 
 ## Stop reporting function as missing tests.  No good tests possible.
 %!assert (1)
-
