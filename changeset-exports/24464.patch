# HG changeset patch
# User Rik <rik@octave.org>
# Date 1514310714 28800
#      Tue Dec 26 09:51:54 2017 -0800
# Node ID 359596cc55ddb15762521257f254c901a0cfcc9a
# Parent  b1ae8fe2ee0050283764d6961395ea6a5f5437b4
Fix ordering of legend objects when updated via callback (bug #46835).

* legend.m (cb_legend_update): Don't use __getlegenddata__ to find list of
graphics objects to label and text strings to display because that function
does not return an ordered list.  Instead, get this information directly
from legend object.
* legend.m (cb_line_listener): When re-building legend because "DisplayName"
has changed, use the first handle associated with the legend object in case
this is a plotyy object with two axes.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -1119,17 +1119,19 @@ endfunction
 ## A non-text property of legend has changed requiring an update.
 function cb_legend_update (hleg, ~)
   persistent recursive = false;
 
   if (! recursive)
     recursive = true;
     unwind_protect
       hax = getfield (get (hleg, "userdata"), "handle");
-      [hplots, ~] = __getlegenddata__ (hleg);
+      ## Hack.  Maybe store this somewhere else such as appdata.
+      hplots = [ get(hleg, "deletefcn"){6:end} ];
+      text_strings = get (hleg, "string");
       position = get (hleg, "unmodified_axes_position");
       outerposition = get (hleg, "unmodified_axes_outerposition");
       units = get (hax, "units");
       set (hax, "units", "points");
       switch (get (hax, "activepositionproperty"))
         case "position"
           set (hax, "outerposition", outerposition);
           set (hax, "position", position);
@@ -1138,17 +1140,17 @@ function cb_legend_update (hleg, ~)
           set (hax, "outerposition", outerposition);
       endswitch
       if (isscalar (hax))
         set (hax, "units", units);
       else
         set (hax, {"units"}, units);
       endif
 
-      hleg = legend (hax(1), hplots, get (hleg, "string"));
+      hleg = legend (hax(1), hplots, text_strings);
     unwind_protect_cleanup
       recursive = false;
     end_unwind_protect
   endif
 
 endfunction
 
 ## A text property of legend, such as fontname, has changed.
@@ -1265,17 +1267,17 @@ function cb_line_listener (h, ~, hlegend
   endif
 
   if (update_name)
     ## When string changes, have to rebuild legend completely
     [hplots, text_strings] = __getlegenddata__ (hlegend);
     if (isempty (hplots))
       delete (hlegend);
     else
-      legend (legdata.handle, hplots, text_strings);
+      legend (legdata.handle(1), hplots, text_strings);
     endif
   else
     kids = get (hlegend, "children");
     kids = kids([get(kids, "userdata"){:}] == h);
     kids = kids(strcmp (get (kids, "type"), "line"));
     idx = strcmp (get (kids, "marker"), "none");
     ll = kids (idx);
     lm = kids (! idx);
@@ -1792,10 +1794,8 @@ endfunction
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   plot (1:10);
 %!   fail ("legend ('location','best')", "warning", "'best' not yet implemented"); 
 %!   fail ("legend ('location','bestoutside')", "warning", "'best' not yet implemented"); 
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-
-
