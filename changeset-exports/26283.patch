# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1545422852 18000
#      Fri Dec 21 15:07:32 2018 -0500
# Node ID 83fd5b27ea7cdafaba3bd2a9779c7ba4b6a52d1a
# Parent  f23f27e78aa22d9c961c3f93a1ed821344caadde
# Parent  3b917b501087e8cba386283c896ec47e0afe51c2
maint: Merge stable to default.

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -284,16 +284,17 @@ else
   BUILT_SOURCES += nonexistent-file
 endif
 
 noinst_SCRIPTS = run-octave
 
 CLEANFILES += \
   config-vars \
   make-vars \
+  oct-file-pkg-add \
   octave-config.h \
   run-octave
 
 DISTCLEANFILES += \
   $(DIRSTAMP_FILES) \
   $(GEN_CONFIG_INC) \
   $(GEN_CONFIG_SHELL) \
   .gdbinit
diff --git a/scripts/optimization/fminsearch.m b/scripts/optimization/fminsearch.m
--- a/scripts/optimization/fminsearch.m
+++ b/scripts/optimization/fminsearch.m
@@ -277,17 +277,17 @@ function [x, exitflag, output] = nmsmax 
   V = [zeros(n,1) eye(n)];
   f = zeros (n+1,1);
   V(:,1) = x0;
   f(1) = dirn * fun (x, varargin{:});
   fmax_old = f(1);
   nf = 1;
 
   if (trace == 1)
-    printf ("f(x0) = %9.4e\n", f(1));
+    printf ("f(x0) = %9.4e\n", dirn * f(1));
   endif
 
   k = 0; m = 0;
 
   ## Set up initial simplex.
   scale = max (norm (x0, Inf), 1);
   if (stopit(4) == 0)
     ## Regular simplex - all edges have same length.
@@ -316,17 +316,17 @@ function [x, exitflag, output] = nmsmax 
   f = f(j);
   V = V(:,j);
 
   exitflag = 0;
 
   if (! isempty (outfcn))
     optimvalues.iteration = 0;
     optimvalues.funccount = nf;
-    optimvalues.fval = f(1);
+    optimvalues.fval = dirn * f(1);
     optimvalues.procedure = how;
     state = "init";
     stop = outfcn (x, optimvalues, state);
     if (stop)
       msg = "Stopped by OutputFcn\n";
       exitflag = -1;
     endif
   endif
@@ -346,17 +346,17 @@ function [x, exitflag, output] = nmsmax 
       if (! isempty (savit))
         x(:) = V(:,1);
         eval (["save " savit " x fmax nf"]);
       endif
     endif
     if (trace == 1)
       printf ("Iter. %2.0f,", k);
       printf ("  how = %-11s", [how ","]);
-      printf ("nf = %3.0f,  f = %9.4e  (%2.1f%%)\n", nf, fmax, ...
+      printf ("nf = %3.0f,  f = %9.4e  (%2.1f%%)\n", nf, dirn * fmax, ...
               100*(fmax-fmax_old)/(abs(fmax_old)+eps));
     endif
     fmax_old = fmax;
 
     ## Three stopping tests from MDSMAX.M
 
     ## Stopping Test 1 - f reached target value?
     if (fmax >= stopit(3))
@@ -383,17 +383,17 @@ function [x, exitflag, output] = nmsmax 
                       size_simplex, tol, step_f, tol_f);
       exitflag = 1;
       break;
     endif
 
     ## Call OutputFcn
     if (! isempty (outfcn))
       optimvalues.funccount = nf;
-      optimvalues.fval = f(1);
+      optimvalues.fval = dirn * f(1);
       optimvalues.iteration = k;
       optimvalues.procedure = how;
       state = "iter";
       stop = outfcn (x, optimvalues, state);
       if (stop)
         msg = "Stopped by OutputFcn\n";
         exitflag = -1;
         break;
@@ -465,17 +465,17 @@ function [x, exitflag, output] = nmsmax 
     printf (msg);
   endif
   x(:) = V(:,1);
 
   ## FIXME: Should outputfcn be called only if exitflag != 0,
   ##        i.e., only when we have successfully converged?
   if (! isempty (outfcn))
     optimvalues.funccount = nf;
-    optimvalues.fval = f(1);
+    optimvalues.fval = dirn * f(1);
     optimvalues.iteration = k;
     optimvalues.procedure = how;
     state = "done";
     outfcn (x, optimvalues, state);
   endif
 
   ## output
   output.iterations = k;
