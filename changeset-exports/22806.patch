# HG changeset patch
# User Rik <rik@octave.org>
# Date 1479706947 28800
#      Sun Nov 20 21:42:27 2016 -0800
# Node ID 933b074f600ea9179a789ae93fd2cbe9e32bfb95
# Parent  d4f93c69bce8ae65b393bb0ed25bac0f3755b8eb
light.m: Indent subplot bodies in BIST tests for code clarity.

* light.m: Indent subplot bodies in BIST tests for code clarity.

diff --git a/scripts/plot/draw/light.m b/scripts/plot/draw/light.m
--- a/scripts/plot/draw/light.m
+++ b/scripts/plot/draw/light.m
@@ -83,50 +83,50 @@ function h = light (varargin)
 endfunction
 
 
 %!demo
 %! ## Demonstrate effects of lighting
 %! clf;
 %! ## patches
 %! h_axes1 = subplot (2, 2, 1);
-%! [x,y,z] = meshgrid (-2:0.2:2, -2:0.2:2, -2:0.2:2);
-%! val = x.^2 + y.^2 + z.^2;
-%! fv1 = isosurface (x, y, z, val, 1);
-%! h_patch1 = patch (fv1, "FaceColor", "c", "EdgeColor", "none", ...
-%!                        "FaceLighting", "Gouraud");
-%! isonormals (x, y, z, val, h_patch1);
-%! fv2 = isosurface (x, y+3, z, val, 1);
-%! h_patch2 = patch (fv2, "FaceColor", "r", "EdgeColor", "none", ...
-%!                        "FaceLighting", "Gouraud");
-%! isonormals (x, y+3, z, val, h_patch2);
-%! axis equal; axis tight
-%! title ("Patch with lighting");
-%! view (3);
-%! h_light1 = light ();
+%!  [x,y,z] = meshgrid (-2:0.2:2, -2:0.2:2, -2:0.2:2);
+%!  val = x.^2 + y.^2 + z.^2;
+%!  fv1 = isosurface (x, y, z, val, 1);
+%!  h_patch1 = patch (fv1, "FaceColor", "c", "EdgeColor", "none", ...
+%!                         "FaceLighting", "Gouraud");
+%!  isonormals (x, y, z, val, h_patch1);
+%!  fv2 = isosurface (x, y+3, z, val, 1);
+%!  h_patch2 = patch (fv2, "FaceColor", "r", "EdgeColor", "none", ...
+%!                         "FaceLighting", "Gouraud");
+%!  isonormals (x, y+3, z, val, h_patch2);
+%!  view (3);
+%!  axis equal;  axis tight;
+%!  title ("Patch with lighting");
+%!  h_light1 = light ();
 %!
 %! h_axes2 = subplot (2, 2, 2);
-%! patch (fv1, "FaceColor", "c", "EdgeColor", "none");
-%! patch (fv2, "FaceColor", "r", "EdgeColor", "none");
-%! axis equal; axis tight
-%! title ("Patch without lighting");
-%! view (3);
+%!  patch (fv1, "FaceColor", "c", "EdgeColor", "none");
+%!  patch (fv2, "FaceColor", "r", "EdgeColor", "none");
+%!  view (3);
+%!  axis equal;  axis tight;
+%!  title ("Patch without lighting");
 %!
 %! ## surfaces
 %! h_axes3 = subplot (2, 2, 3);
-%! h_surf1 = surf (h_axes3, peaks, "LineStyle", "none", ...
-%!                                 "FaceLighting", "Gouraud");
-%! title ("Surface with lighting");
-%! view (3);
-%! h_light2 = light ();
+%!  h_surf1 = surf (h_axes3, peaks, "LineStyle", "none", ...
+%!                                  "FaceLighting", "Gouraud");
+%!  title ("Surface with lighting");
+%!  view (3);
+%!  h_light2 = light ();
 %!
 %! h_axes3 = subplot (2, 2, 4);
-%! h_surf2 = surf (h_axes3, peaks, "LineStyle", "none");
-%! title ("Surface without lighting");
-%! view (3);
+%!  h_surf2 = surf (h_axes3, peaks, "LineStyle", "none");
+%!  view (3);
+%!  title ("Surface without lighting");
 
 %!demo
 %! ## Lighting modes
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.05:.2, -.2:0.05:.2, -.2:0.05:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes1 = axes ();
@@ -147,37 +147,37 @@ endfunction
 %! view (2);
 %! light ("Position", [-1 1 1]);
 %! title ({"FaceLighting", "none - flat - gouraud"});
 
 %!demo
 %! ## multiple lights
 %! clf;
 %! h_axes = subplot (1, 2, 1);
-%! [x,y,z] = meshgrid (-2:0.1:2, -2:0.1:2, -2:0.1:2);
-%! val = x.^2 + y.^2 + z.^2;
-%! fv = isosurface (x, y, z, val, 1);
-%! h_patch = patch (fv, "FaceColor", "w", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! isonormals (x, y, z, val, h_patch);
-%! axis equal; axis tight
-%! title ("Patch with one light");
-%! view (3);
-%! h_light = light ("Color", "g");
+%!  [x,y,z] = meshgrid (-2:0.1:2, -2:0.1:2, -2:0.1:2);
+%!  val = x.^2 + y.^2 + z.^2;
+%!  fv = isosurface (x, y, z, val, 1);
+%!  h_patch = patch (fv, "FaceColor", "w", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  isonormals (x, y, z, val, h_patch);
+%!  view (3);
+%!  axis equal;  axis tight;
+%!  title ("Patch with one light");
+%!  h_light = light ("Color", "g");
 %!
 %! h_axes2 = subplot (1, 2, 2);
-%! h_patch2 = patch (fv, "FaceColor", "w", "EdgeColor", "none", ...
-%!                       "FaceLighting", "Gouraud");
-%! isonormals (x, y, z, val, h_patch2);
-%! axis equal; axis tight
-%! title ("Patch with three lights");
-%! view (3);
-%! h_light1 = light ("Color", "r");
-%! h_light2 = light ("Position", [0 1 1], "Color", "b");
-%! h_light3 = light ("Position", [-1 -1 2], "Color", "g");
+%!  h_patch2 = patch (fv, "FaceColor", "w", "EdgeColor", "none", ...
+%!                        "FaceLighting", "Gouraud");
+%!  isonormals (x, y, z, val, h_patch2);
+%!  view (3);
+%!  axis equal;  axis tight;
+%!  title ("Patch with three lights");
+%!  h_light1 = light ("Color", "r");
+%!  h_light2 = light ("Position", [0 1 1], "Color", "b");
+%!  h_light3 = light ("Position", [-1 -1 2], "Color", "g");
 
 %!demo
 %! ## Diffuse and specular reflection
 %! clf;
 %! h_axes = axes ();
 %! [x,y,z] = meshgrid (-.2:0.04:.2, -.2:0.04:.2, -.2:0.04:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
@@ -224,100 +224,100 @@ endfunction
 %! set (h_patch, "DiffuseStrength", 1, "SpecularStrength", .5);
 %! isonormals (x+.5, y+1, z, val, h_patch);
 %! fv = isosurface (x+1, y+1, z, val, .039);
 %! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud");
 %! set (h_patch, "DiffuseStrength", 1, "SpecularStrength", 1);
 %! isonormals (x+1, y+1, z, val, h_patch);
 %!
+%! view (2);
 %! axis equal
 %! h_light = light ("Position", [-1 1 1]);
-%! view (2);
 %!
 %! xlabel ("SpecularStrength");
 %! ylabel ("DiffuseStrength");
 %! title ("Effects of SpecularStrength and DiffuseStrength");
 
 %!demo
 %! ## Ambient Strength and Ambient Light Color
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.05:.2, -.2:0.05:.2, -.2:0.05:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes1 = subplot (3,1,3);
-%! set (h_axes1, "AmbientLightColor", "g");
-%! fv = isosurface (x, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 0);
-%! isonormals (x, y, z, val, h_patch);
-%! fv = isosurface (x+.5, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", .7);
-%! isonormals (x+.5, y, z, val, h_patch);
-%! fv = isosurface (x+1, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 1);
-%! isonormals (x+1, y, z, val, h_patch);
-%! h_light = light ("Position", [-1 1 1]);
-%! axis tight
-%! axis equal
-%! view (2);
-%! xlabel ("AmbientStrength");
-%! ylabel ({"AmbientLightColor", "[0 1 0]"});
+%!  set (h_axes1, "AmbientLightColor", "g");
+%!  fv = isosurface (x, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 0);
+%!  isonormals (x, y, z, val, h_patch);
+%!  fv = isosurface (x+.5, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", .7);
+%!  isonormals (x+.5, y, z, val, h_patch);
+%!  fv = isosurface (x+1, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 1);
+%!  isonormals (x+1, y, z, val, h_patch);
+%!  h_light = light ("Position", [-1 1 1]);
+%!  view (2);
+%!  axis tight
+%!  axis equal
+%!  xlabel ("AmbientStrength");
+%!  ylabel ({"AmbientLightColor", "[0 1 0]"});
 %!
 %! h_axes2 = subplot (3,1,2);
-%! set (h_axes2, "AmbientLightColor", [.5 0 1]);
-%! fv = isosurface (x, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 0);
-%! isonormals (x, y, z, val, h_patch);
-%! fv = isosurface (x+.5, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", .7);
-%! isonormals (x+.5, y, z, val, h_patch);
-%! fv = isosurface (x+1, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 1);
-%! isonormals (x+1, y, z, val, h_patch);
-%! h_light = light ("Position", [-1 1 1]);
-%! axis tight
-%! axis equal
-%! view (2);
-%! ylabel ({"AmbientLightColor", "[.5 0 1]"});
+%!  set (h_axes2, "AmbientLightColor", [.5 0 1]);
+%!  fv = isosurface (x, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 0);
+%!  isonormals (x, y, z, val, h_patch);
+%!  fv = isosurface (x+.5, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", .7);
+%!  isonormals (x+.5, y, z, val, h_patch);
+%!  fv = isosurface (x+1, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 1);
+%!  isonormals (x+1, y, z, val, h_patch);
+%!  h_light = light ("Position", [-1 1 1]);
+%!  view (2);
+%!  axis tight
+%!  axis equal
+%!  ylabel ({"AmbientLightColor", "[.5 0 1]"});
 %!
 %! h_axes3 = subplot (3,1,1);
-%! set (h_axes3, "AmbientLightColor", "w");
-%! fv = isosurface (x, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 0);
-%! isonormals (x, y, z, val, h_patch);
-%! fv = isosurface (x+.5, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", .7);
-%! isonormals (x+.5, y, z, val, h_patch);
-%! fv = isosurface (x+1, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!                      "FaceLighting", "Gouraud");
-%! set (h_patch, "AmbientStrength", 1);
-%! isonormals (x+1, y, z, val, h_patch);
-%! h_light = light ("Position", [-1 1 1]);
-%! axis tight
-%! axis equal
-%! view (2);
-%! ylabel ({"AmbientLightColor", "[1 1 1]"});
-%! title ("Effects of AmbientLightColor and AmbientStrength");
+%!  set (h_axes3, "AmbientLightColor", "w");
+%!  fv = isosurface (x, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 0);
+%!  isonormals (x, y, z, val, h_patch);
+%!  fv = isosurface (x+.5, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", .7);
+%!  isonormals (x+.5, y, z, val, h_patch);
+%!  fv = isosurface (x+1, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!                       "FaceLighting", "Gouraud");
+%!  set (h_patch, "AmbientStrength", 1);
+%!  isonormals (x+1, y, z, val, h_patch);
+%!  h_light = light ("Position", [-1 1 1]);
+%!  view (2);
+%!  axis tight
+%!  axis equal
+%!  ylabel ({"AmbientLightColor", "[1 1 1]"});
+%!  title ("Effects of AmbientLightColor and AmbientStrength");
 
 %!demo
 %! ## Specular Exponent
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.02:.2, -.2:0.02:.2, -.2:0.02:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes = axes ();
@@ -332,19 +332,19 @@ endfunction
 %! set (h_patch, "SpecularExponent", 5);
 %! isonormals (x+.5, y, z, val, h_patch);
 %! fv = isosurface (x+1, y, z, val, .039);
 %! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud");
 %! set (h_patch, "SpecularExponent", 1);
 %! isonormals (x+1, y, z, val, h_patch);
 %! h_light = light ("Position", [-1 1 1]);
+%! view (2);
 %! axis tight
 %! axis equal
-%! view (2);
 %! xlabel ("SpecularExponent");
 %! title ("Effects of SpecularExponent");
 
 %!demo
 %! ## SpecularColorReflectance
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.02:.2, -.2:0.02:.2, -.2:0.02:.2);
 %! val = (x.^2 + y.^2 + z.^2);
@@ -360,20 +360,20 @@ endfunction
 %!                      "FaceLighting", "Gouraud");
 %! set (h_patch, "SpecularColorReflectance", 0.5);
 %! isonormals (x+.5, y, z, val, h_patch);
 %! fv = isosurface (x+1, y, z, val, .039);
 %! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud");
 %! set (h_patch, "SpecularColorReflectance", 1);
 %! isonormals (x+1, y, z, val, h_patch);
+%! view (2);
 %! h_light = light ("Position", [-1 1 1]);
 %! axis tight
 %! axis equal
-%! view (2);
 %! xlabel ("SpecularColorReflectance");
 %! title ("Effects of SpecularColorReflectance");
 
 %!demo
 %! ## BackFaceLighting
 %! [x,y,z] = meshgrid (-.5:0.1:2, -2:0.1:2, -2:0.1:2);
 %! val = x.^2 + y.^2 + z.^2;
 %! fv = isosurface (x, y, z, val, 1);
@@ -388,136 +388,137 @@ endfunction
 %! axis equal
 %!
 %! h_axes2 = subplot (1, 3, 2);
 %! h_patch = patch (fv, "FaceColor", "c", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud", "VertexNormals", -vn);
 %! set (h_patch, "BackFaceLighting", "lit");
 %! h_light = light ();
 %! view (h_axes2, [-50 30]);
+%! axis equal
 %! title ("lit");
-%! axis equal
 %!
 %! h_axes3 = subplot (1, 3, 3);
 %! h_patch = patch (fv, "FaceColor", "c", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud", "VertexNormals", -vn);
 %! set (h_patch, "BackFaceLighting", "unlit");
 %! h_light = light ();
 %! view (h_axes3, [-50 30]);
+%! axis equal
 %! title ("unlit");
-%! axis equal
 
 %!demo
 %! ## BackFaceLighting 2
 %! ## Matlab fails for "reverselit" with negated isonormals and for "unlit"
 %! N = 30; iso = .8;
 %! lin = linspace (-1, 1, N);
 %! [x, y, z] = meshgrid (1.2*lin, 1.2*lin, lin);
 %! val = (x).^2 + (y).^2 - iso/2.7*cos (2*pi*z);
 %! val(x>0 & (y-x)>0) = NaN;
 %! fv = isosurface (x, y, z, val, iso);
 %! vn = isonormals (x, y, z, val, fv.vertices);
 %!
 %! clf;
 %! subplot (2, 3, 1);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "reverselit", "VertexNormals", -vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"reverselit"', 'isonormals(...,"negate")'});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "reverselit", "VertexNormals", -vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"reverselit"', 'isonormals(...,"negate")'});
 %!
 %! subplot (2, 3, 2);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "lit", "VertexNormals", -vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"lit"', 'isonormals(...,"negate")'});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "lit", "VertexNormals", -vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"lit"', 'isonormals(...,"negate")'});
 %!
 %! subplot (2, 3, 3);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "unlit", "VertexNormals", -vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"unlit"', 'isonormals(...,"negate")'});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "unlit", "VertexNormals", -vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"unlit"', 'isonormals(...,"negate")'});
 %!
 %! subplot (2, 3, 4);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "reverselit", "VertexNormals", vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"reverselit"', "isonormals(...)"});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "reverselit", "VertexNormals", vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"reverselit"', "isonormals(...)"});
 %!
 %! subplot (2, 3, 5);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "lit", "VertexNormals", vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"lit"', "isonormals(...)"});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "lit", "VertexNormals", vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"lit"', "isonormals(...)"});
 %!
 %! subplot (2, 3, 6);
-%! view (140, 20);
-%! axis equal
-%! hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
-%!             "BackFaceLighting", "unlit", "VertexNormals", vn);
-%! hl = light ("Position", [1 0 .5]);
-%! lighting gouraud
-%! title ({"BackFaceLighting", '"unlit"', "isonormals(...)"});
+%!  view (140, 20);
+%!  axis equal
+%!  hp = patch (fv, "FaceColor", "r", "EdgeColor", "none", ...
+%!              "BackFaceLighting", "unlit", "VertexNormals", vn);
+%!  hl = light ("Position", [1 0 .5]);
+%!  lighting gouraud
+%!  title ({"BackFaceLighting", '"unlit"', "isonormals(...)"});
 
 %!demo
 %! ## Colored patch
 %! clf;
+%! view (3);
 %! [x,y,z] = meshgrid (-.2:0.02:.2, -.2:0.02:.2, -.2:0.02:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes = axes ();
 %! fv = isosurface (x, y, z, val, .039, z);
 %! h_patch = patch (fv, "FaceColor", "flat", "EdgeColor", "none", ...
 %!                      "FaceLighting", "Gouraud");
 %! set (h_patch, "SpecularExponent", 15);
 %! isonormals (x, y, z, val, h_patch);
-%! title ("Colored patch");
 %! h_light = light ("Position", [-1 1 1]);
+%! view (3);
 %! axis tight
 %! axis equal
-%! view (3);
+%! title ("Colored patch");
 
 %!demo
 %! ## Colored mesh (patch)
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.05:.2, -.2:0.05:.2, -.2:0.05:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes = axes ();
 %! fv = isosurface (x, y, z, val, .039, z);
 %! h_patch = patch (fv, "FaceColor", "w", "EdgeColor", "interp");
 %! isonormals (x, y, z, val, h_patch);
-%! title ("Colored mesh (patch)");
-%! h_light = light;
+%! h_light = light ();
 %! lighting gouraud
+%! view (3);
 %! axis tight;
 %! axis equal;
 %! box off;
-%! view (3);
+%! title ("Colored mesh (patch)");
 
 %!demo
 %! ## Colored mesh (surface)
 %! clf;
 %! h_mesh = mesh (peaks);
 %! title ("Colored mesh (surface)");
-%! h_light = light;
+%! h_light = light ();
 %! lighting gouraud
 
 %!demo
 %! ## Light in hggroup
 %! clf;
 %! h_mesh = mesh (peaks);
 %! h_hg = hggroup ();
 %! title ("Light in hggroup");
@@ -526,34 +527,34 @@ endfunction
 
 %!demo
 %! ## Style local/infinite
 %! clf;
 %! [x,y,z] = meshgrid (-.2:0.02:.2, -.2:0.02:.2, -.2:0.02:.2);
 %! val = (x.^2 + y.^2 + z.^2);
 %!
 %! h_axes1 = subplot (1,2,1);
-%! fv = isosurface (x, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none");
-%! isonormals (x, y, z, val, h_patch);
-%! title ('"Style" = "infinite" (default)');
-%! h_light = light ("Position", [.3 0 .3]);
-%! lighting gouraud
-%! axis equal
-%! view (3);
+%!  fv = isosurface (x, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none");
+%!  isonormals (x, y, z, val, h_patch);
+%!  title ('"Style" = "infinite" (default)');
+%!  h_light = light ("Position", [.3 0 .3]);
+%!  lighting gouraud
+%!  view (3);
+%!  axis equal
 %!
 %! h_axes2 = subplot (1,2,2);
-%! fv = isosurface (x, y, z, val, .039);
-%! h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none");
-%! isonormals (x, y, z, val, h_patch);
-%! title ('"Style" = "local"');
-%! h_light = light ("Style", "local", "Position", [.3 0 .3]);
-%! lighting gouraud
-%! axis equal
-%! view (3);
+%!  fv = isosurface (x, y, z, val, .039);
+%!  h_patch = patch (fv, "FaceColor", "r", "EdgeColor", "none");
+%!  isonormals (x, y, z, val, h_patch);
+%!  title ('"Style" = "local"');
+%!  h_light = light ("Style", "local", "Position", [.3 0 .3]);
+%!  lighting gouraud
+%!  view (3);
+%!  axis equal
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   h = light ();
 %!   assert (findobj (hf, "Type", "light"), h);
 %!   assert (get (h, "Position"), [1, 0, 1]);
 %!   assert (get (h, "Color"), [1, 1, 1]);
