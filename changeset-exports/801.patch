# HG changeset patch
# User jwe
# Date 782067825 0
#      Thu Oct 13 17:03:45 1994 +0000
# Node ID cbc37d8d0fdfb112d69d2de3860dcf054058a409
# Parent  73fdde1f8473e4f4a7439d10e326415578a931ca
[project @ 1994-10-13 17:03:23 by jwe]

diff --git a/octave-bug.in b/octave-bug.in
--- a/octave-bug.in
+++ b/octave-bug.in
@@ -39,69 +39,48 @@ then
 fi
 
 HAVE_FMT=false
 if (fmt < /dev/null) > /dev/null 2>&1
 then
   HAVE_FMT=true
 fi
 
-# BUGADDR="bug-octave@che.utexas.edu"
-BUGADDR="jwe@che.utexas.edu"
+ss_p=`echo $VERSION | grep "^ss-"`
+if test -n "$ss_p"
+then
+  BUGADDR="octave-maintainers@che.utexas.edu"
+else
+  BUGADDR="bug-octave@che.utexas.edu"
+fi
 
 SUBJECT="[50 character or so descriptive subject here (for reference)]"
 if test $# -gt 0
 then
   case "$1" in
     -s)
-      shift;
+      shift
       if test $# -gt 0
       then
         SUBJECT="$1"
+        shift
       else
         echo "usage: octave-bug [-s subject]"
         exit 1
       fi
     ;;
-    *)
-      echo "usage: octave-bug [-s subject]"
-      exit 1
-    ;;
   esac
 fi
 
 cat > $TEMP << EOF
 To: $BUGADDR
 Subject: $SUBJECT
 
-Configuration (please do not edit this section):
------------------------------------------------
-
 Bug report for Octave $VERSION configured for $MACHINE
 
-uname output:     $UN
-Fortran compiler: $F77
-FFLAGS:           $FFLAGS
-C compiler:       $CC
-CFLAGS:           $CFLAGS
-C++ compiler:     $CXX
-CXXFLAGS:         $CXXFLAGS
-DEFS:
-
-EOF
-
-if $HAVE_FMT
-then
-  echo $DEFS | fmt | sed 's/^/  /' >> $TEMP
-else
-  echo $DEFS >> $TEMP
-fi
-
-cat >> $TEMP << EOF
-
 Description:
 -----------
 
   * Please replace this item with a detailed description of the
     problem.  Suggestions or general comments are also welcome.
 
 Repeat-By:
 ---------
@@ -111,18 +90,53 @@ Repeat-By:
 
 Fix:
 ---
 
   * If possible, replace this item with a description of how to
     fix the problem (if you don't have a fix for the problem, don't
     include this section, but please do submit your report anyway).
 
+
+
+Configuration (please do not edit this section):
+-----------------------------------------------
+
+uname output:     $UN
+Fortran compiler: $F77
+FFLAGS:           $FFLAGS
+C compiler:       $CC
+CFLAGS:           $CFLAGS
+C++ compiler:     $CXX
+CXXFLAGS:         $CXXFLAGS
+DEFS:
+
 EOF
 
+if $HAVE_FMT
+then
+  echo $DEFS | fmt | sed 's/^/  /' >> $TEMP
+else
+  echo $DEFS >> $TEMP
+fi
+
+if test $# -gt 0
+then
+  if test -f "$1"
+  then
+    cat >> $TEMP << EOF
+
+User-preferences (please do not edit this section):
+--------------------------------------------------
+
+EOF
+    cat $1 >> $TEMP
+  fi
+fi
+
 chmod u+w $TEMP
 cp $TEMP $TEMP.x
 
 status=0
 
 if $EDITOR $TEMP
 then
   if cmp -s $TEMP $TEMP.x
diff --git a/src/tc-rep.cc b/src/tc-rep.cc
--- a/src/tc-rep.cc
+++ b/src/tc-rep.cc
@@ -1716,60 +1716,16 @@ TC_REP::print (void)
 	  break;
 	}
 
       output_buf << ends;
       maybe_page_output (output_buf);
     }
 }
 
-static char *
-undo_string_escapes (char c)
-{
-  static char retval[2];
-  retval[1] = '\0';
-
-  if (! c)
-    return 0;
-
-  switch (c)
-    {
-    case '\a':
-      return "\\a";
-
-    case '\b': // backspace
-      return "\\b";
-
-    case '\f': // formfeed
-      return "\\f";
-
-    case '\n': // newline
-      return "\\n";
-
-    case '\r': // carriage return
-      return "\\r";
-
-    case '\t': // horizontal tab
-      return "\\t";
-
-    case '\v': // vertical tab
-      return "\\v";
-
-    case '\\': // backslash
-      return "\\\\";
-
-    case '"': // double quote
-      return "\\\"";
-
-    default:
-      retval[0] = c;
-      return retval;
-    }
-}
-
 void
 TC_REP::print_code (ostream& os)
 {
   switch (type_tag)
     {
     case scalar_constant:
       if (orig_text)
 	os << orig_text;
@@ -1800,17 +1756,17 @@ TC_REP::print_code (ostream& os)
     case complex_matrix_constant:
       octave_print_internal (os, *complex_matrix, 1);
       break;
 
     case string_constant:
       {
 	os << "\"";
 	char *s, *t = string;
-	while (s = undo_string_escapes (*t++))
+	while (s = undo_string_escape (*t++))
 	  os << s;
 	os << "\"";
       }
       break;
 
     case range_constant:
       octave_print_internal (os, *range, 1);
       break;
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -200,16 +200,30 @@ octave_tmp_file_name (void)
   retval = tempnam (0, "oct-");
 
   if (! retval)
     error ("can't open temporary file!");
 
   return retval;
 }
 
+DEFUN ("octave_tmp_file_name", Foctave_tmp_file_name,
+       Soctave_tmp_file_name, 0, 1,
+ "octave_tmp_file_name ()")
+{
+  tree_constant retval;
+
+  if (args.length () == 0)
+    retval = octave_tmp_file_name ();
+  else
+    print_usage ("octave_tmp_file_name");
+
+  return retval;
+}
+
 char **
 pathstring_to_vector (char *pathstring)
 {
   static char **path = 0;
 
   if (pathstring)
     {
       int nelem = 0;
@@ -697,14 +711,91 @@ fcn_file_in_path (const char *name)
 // full path to the file.
 
 char *
 oct_file_in_path (const char *name)
 {
   return file_in_path (name, ".oct");
 }
 
+char *
+undo_string_escape (char c)
+{
+  static char retval[2];
+  retval[1] = '\0';
+
+  if (! c)
+    return 0;
+
+  switch (c)
+    {
+    case '\a':
+      return "\\a";
+
+    case '\b': // backspace
+      return "\\b";
+
+    case '\f': // formfeed
+      return "\\f";
+
+    case '\n': // newline
+      return "\\n";
+
+    case '\r': // carriage return
+      return "\\r";
+
+    case '\t': // horizontal tab
+      return "\\t";
+
+    case '\v': // vertical tab
+      return "\\v";
+
+    case '\\': // backslash
+      return "\\\\";
+
+    case '"': // double quote
+      return "\\\"";
+
+    default:
+      retval[0] = c;
+      return retval;
+    }
+}
+
+char *
+undo_string_escapes (char *s)
+{
+  ostrstream buf;
+
+  char *t;
+  while (t = undo_string_escape (*s++))
+    buf << t;
+  buf << ends;
+
+  return buf.str ();
+}
+
+DEFUN ("undo_string_escapes", Fundo_string_escapes,
+       Sundo_string_escapes, 1, 1,
+  "undo_string_escapes (STRING)")
+{
+  tree_constant retval;
+
+  int nargin = args.length ();
+
+  if (nargin == 1 && args(0).is_string ())
+    {
+      char *str = undo_string_escapes (args(0).string_value ());
+      retval = str;
+      delete [] str;
+    }
+  else
+    print_usage ("undo_string_escapaes");
+
+  return retval;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -70,16 +70,19 @@ extern int NINT (double x);
 extern double D_NINT (double x);
 
 extern char **make_argv (const Octave_object& args, const char *fcn_name);
 
 extern int empty_arg (const char *name, int nr, int nc);
 
 extern ostrstream& list_in_columns (ostrstream& os, char **list);
 
+extern char *undo_string_escape (char c);
+extern char *undo_string_escapes (char *s);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
