# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1220381548 14400
#      Tue Sep 02 14:52:28 2008 -0400
# Node ID 082fa78595740eb7f3b7ab418ff8221d38750597
# Parent  4665276ff7f618f116d95c995fd27c30e45da7c7
Additional do not call set with empty arguments fixes

diff --git a/scripts/plot/__area__.m b/scripts/plot/__area__.m
--- a/scripts/plot/__area__.m
+++ b/scripts/plot/__area__.m
@@ -58,17 +58,19 @@ function retval = __area__ (ax, x, y, bv
     addlistener (hg, "edgecolor", @update_props);
     addlistener (hg, "linewidth", @update_props); 
     addlistener (hg, "linestyle", @update_props); 
     addlistener (hg, "facecolor", @update_props); 
 
     addproperty ("areagroup", hg, "data");
     set (retval, "areagroup", retval);
 
-    set (hg, args{:});
+    if (! isempty (args))
+      set (hg, args{:});
+    endif
   endfor
 
 endfunction
 
 function update_props (h, d)
   kids = get (h, "children");
   set (kids, "edgecolor", get (h, "edgecolor"), 
        "linewidth", get (h, "linewidth"),
diff --git a/scripts/plot/__bars__.m b/scripts/plot/__bars__.m
--- a/scripts/plot/__bars__.m
+++ b/scripts/plot/__bars__.m
@@ -108,17 +108,19 @@ function tmp = __bars__ (ax, vertical, x
     endif
     addproperty ("ydata", hg, "data", y(:, i));
  
     addlistener (hg, "xdata", @update_data);
     addlistener (hg, "ydata", @update_data);
 
     addproperty ("bargroup", hg, "data");
     set (tmp, "bargroup", tmp);
-    set (hg, args{:});
+    if (! isempty (args))
+      set (hg, args{:});
+    endif
     if (i == 1)
       set (h_baseline, "parent", get (hg, "parent"));
     endif
   endfor
 
   update_xlim (ax, []);
 endfunction
 
diff --git a/scripts/plot/__quiver__.m b/scripts/plot/__quiver__.m
--- a/scripts/plot/__quiver__.m
+++ b/scripts/plot/__quiver__.m
@@ -290,17 +290,19 @@ function hg = __quiver__ (varargin)
 
     addlistener (hg, "color", @update_props);
     addlistener (hg, "linewidth", @update_props); 
     addlistener (hg, "linestyle", @update_props); 
     addlistener (hg, "marker", @update_props); 
     addlistener (hg, "markerfacecolor", @update_props); 
     addlistener (hg, "markersize", @update_props);
 
-    set (hg, args{:});
+    if (! isempty (args))
+      set (hg, args{:});
+    endif
   unwind_protect_cleanup
     set (h, "nextplot", hstate);
   end_unwind_protect
 
 endfunction
 
 function update_data (h, d)
   x = get (h, "xdata");
diff --git a/scripts/plot/__stem__.m b/scripts/plot/__stem__.m
--- a/scripts/plot/__stem__.m
+++ b/scripts/plot/__stem__.m
@@ -138,17 +138,19 @@ function h = __stem__ (have_z, varargin)
       else
 	addproperty ("zdata", hg, "data", []);
       endif
 
       addlistener (hg, "xdata", @update_data);
       addlistener (hg, "ydata", @update_data);
       addlistener (hg, "zdata", @update_data);
 
-      set (hg, args{:});
+      if (! isempty (args))
+	set (hg, args{:});
+      endif
       if (i == 1 && !isempty(h_baseline))
 	set (h_baseline, "parent", get (hg, "parent"));
       endif
     endfor
 
   unwind_protect_cleanup
     set (ax, "nextplot", hold_state);
     axes (oldax);
diff --git a/scripts/plot/stairs.m b/scripts/plot/stairs.m
--- a/scripts/plot/stairs.m
+++ b/scripts/plot/stairs.m
@@ -170,17 +170,19 @@ function [h, xs, ys] = __stairs__ (doplo
 	addlistener (hg, "color", @update_props);
 	addlistener (hg, "linewidth", @update_props); 
 	addlistener (hg, "linestyle", @update_props); 
 	addlistener (hg, "marker", @update_props); 
 	addlistener (hg, "markerfacecolor", @update_props); 
 	addlistener (hg, "markeredgecolor", @update_props); 
 	addlistener (hg, "markersize", @update_props); 
 
-	set (hg, args{:});
+	if (! isempty (args))
+	  set (hg, args{:});
+	endif
       endfor
     unwind_protect_cleanup
       set (gca (), "nextplot", hold_state);
     end_unwind_protect
   else
     h = 0;
   endif
 
