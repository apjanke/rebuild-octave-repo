# HG changeset patch
# User jwe
# Date 1068698809 0
#      Thu Nov 13 04:46:49 2003 +0000
# Node ID c430e537efad04089e532d824826cc7af5b1d931
# Parent  cba347c642e2df19741fbf8d02eace796871ea3b
[project @ 2003-11-13 04:46:25 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2003-11-12  John Eaton  <jwe@bevo.che.wisc.edu>
+
+	* misc/machar.c (machar) [CRAY]: Kluge to make it work.
+
 2003-10-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* odepack/dlsode.f: Rename from odepack/lsode.f.
 	* odepack/dlsode.f (DLSODE): Rename from LSODE to avoid name
 	conflict with LSODE class constructors on systems that upcase
 	Fortran names.
 
 	* odessa/dodessa.f: Rename from odessa/odessa.f.
diff --git a/libcruft/misc/machar.c b/libcruft/misc/machar.c
--- a/libcruft/misc/machar.c
+++ b/libcruft/misc/machar.c
@@ -1,12 +1,14 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <float.h>
+
 #include "f77-fcn.h"
 
 /*
 
 This file combines the single and double precision versions of machar,
 selected by cc -DSP or cc -DDP.  This feature provided by D. G. Hough,
 August 3, 1988.
 
@@ -363,17 +365,30 @@ rmachar(ibeta,it,irnd,ngrd,machep,negep,
     return;
 
 }
 
 F77_RET_T
 F77_FUNC (machar, MACHAR) (REAL *xmin, REAL *xmax, REAL *epsneg,
 			   REAL *eps, REAL *log10_ibeta)
 {
+#if defined (_CRAY)
+
+  // XXX FIXME XXX -- make machar work for the Cray too.
+
+  int ibeta = FLT_RADIX;
+  *xmin = DBL_MIN;
+  *xmax = DBL_MAX;
+  *epsneg = DBL_EPSILON;
+  *eps = DBL_EPSILON;
+
+#else
+
   int ibeta, iexp, irnd, it, machep, maxexp, minexp, negep, ngrd;
 
   rmachar (&ibeta, &it, &irnd, &ngrd, &machep, &negep, &iexp, &minexp,
 	   &maxexp, eps, epsneg, xmin, xmax);
+#endif
 
   *log10_ibeta = log10 ((REAL) ibeta);
 
   F77_RETURN (0)
 }
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,9 +1,12 @@
-2003-11-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
+2003-11-12  John Eaton  <jwe@bevo.che.wisc.edu>
+
+	* mach-info.c (oct_mach_info::init_float_format) [CRAY]:
+	Kluge to make it work.
 
 	* lo-ieee.cc (octave_ieee_init): Set octave_Inf, octave_NaN, and
 	octave_NA to DBL_MAX if native float format is vaxd, vaxg, or cray.
 
 	* cmd-edit.cc (gnu_readline::do_generate_filename_completions,
 	default_command_editor::do_generate_filename_completions,
 	command_editor::generate_filename_completions): New functions.
 	* cmd-edit.h: Provide decls.
diff --git a/liboctave/mach-info.cc b/liboctave/mach-info.cc
--- a/liboctave/mach-info.cc
+++ b/liboctave/mach-info.cc
@@ -67,16 +67,24 @@ equiv_compare (const equiv *std, const e
     if (v[i].i[0] != std[i].i[0] || v[i].i[1] != std[i].i[1])
       return 0;
   return 1;
 }
 
 void
 oct_mach_info::init_float_format (void) const
 {
+#if defined (CRAY)
+
+  // XXX FIXME XXX -- this should be determined automatically.
+
+  native_float_fmt = oct_mach_info::flt_fmt_cray;
+
+#else
+
   float_params fp[5];
 
   INIT_FLT_PAR (fp[0], oct_mach_info::flt_fmt_ieee_big_endian,
 		   1048576,  0,
 		2146435071, -1,
 		1017118720,  0,
 		1018167296,  0);
 
@@ -116,16 +124,18 @@ oct_mach_info::init_float_format (void) 
     {
       if (equiv_compare (fp[i].fp_par, mach_fp_par, 4))
 	{
 	  native_float_fmt = fp[i].fp_fmt;
 	  break;
 	}
     }
   while (fp[++i].fp_fmt != oct_mach_info::flt_fmt_unknown);
+
+#endif
 }
 
 void
 oct_mach_info::ten_little_endians (void) const
 {
   // Are we little or big endian?  From Harbison & Steele.
 
   union
