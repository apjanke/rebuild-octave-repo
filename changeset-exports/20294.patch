# HG changeset patch
# User Massimiliano Fasi <massimiliano.fasi@gmail.com>
# Date 1435872376 -3600
#      Thu Jul 02 22:26:16 2015 +0100
# Node ID 2102c4582e320aadb267a4eb921e1f3b31979aa7
# Parent  d6879b59f46fc0f85a1a90fe20ca923b5b591bdf
gallery: fix chebspec, cycol, gearmat, hanowa, lauchli, and pei (bug #45466)

* scripts/special-matrix/gallery.m:
  (cycol): set default of K before the input check.
  (gearmat): fix logic on input check.
  (hanowa, lauchli, pei): fix typo on variable names.
  (chebspec): nicer error message for input check.

diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -587,17 +587,17 @@ function C = chebspec (n, k = 0)
     error ("gallery: K must be a scalar for chebspec matrix.");
   endif
 
   ## k = 1 case obtained from k = 0 case with one bigger n.
   switch (k)
     case (0), # do nothing
     case (1), n = n + 1;
     otherwise
-      error ("gallery: unknown K '%d' for chebspec matrix.", k);
+      error ("gallery: K should be either 0 or 1 for chebspec matrix.");
   endswitch
 
   n -= 1;
   C = zeros (n+1);
 
   one    = ones (n+1, 1);
   x      = cos ((0:n)' * (pi/n));
   d      = ones (n+1, 1);
@@ -906,17 +906,17 @@ function A = condex (n, k = 4, theta = 1
   m = columns (A);
   if (m < n)
     for i = n:-1:m+1
       A(i,i) = 1;
     endfor
   endif
 endfunction
 
-function A = cycol (n, k)
+function A = cycol (n, k = max (round (n/4), 1))
   ## CYCOL   Matrix whose columns repeat cyclically.
   ##   A = CYCOL([M N], K) is an M-by-N matrix of the form A = B(1:M,1:N)
   ##   where B = [C C C...] and C = RANDN(M, K).  Thus A's columns repeat
   ##   cyclically, and A has rank at most K.   K need not divide N.
   ##   K defaults to ROUND(N/4).
   ##   CYCOL(N, K), where N is a scalar, is the same as CYCOL([N N], K).
   ##
   ##   This type of matrix can lead to underflow problems for Gaussian
@@ -929,20 +929,16 @@ function A = cycol (n, k)
   elseif (! isnumeric (k) || ! isscalar (k))
     error ("gallery: K must be a scalar for cycol matrix.");
   endif
 
   ## Parameter n specifies dimension: m-by-n
   m = n(1);
   n = n(end);
 
-  if (nargin < 2)
-    k = max (round (n/4), 1);
-  endif
-
   A = randn (m, k);
   for i = 2:ceil (n/k)
     A = [A A(:,1:k)];
   endfor
   A = A(:,1:n);
 endfunction
 
 function [c, d, e] = dorr (n, theta = 0.01)
@@ -1210,19 +1206,19 @@ function A = gearmat (n, i = n, j = -n)
   ##   Reference:
   ##   C.W. Gear, A simple set of test matrices for eigenvalue programs,
   ##   Math. Comp., 23 (1969), pp. 119-125.
 
   if (nargin < 1 || nargin > 3)
     error ("gallery: 1 to 3 arguments are required for gearmat matrix.");
   elseif (! isnumeric (n) || ! isscalar (n) || fix (n) != n)
     error ("gallery: N must be an integer for gearmat matrix.");
-  elseif (! isnumeric (i) || ! isscalar (i) || i == 0 || abs (i) <= n)
+  elseif (! isnumeric (i) || ! isscalar (i) || i == 0 || abs (i) > n)
     error ("gallery: I must be a nonzero scalar, and abs (I) <= N for gearmat matrix.");
-  elseif (! isnumeric (j) || ! isscalar (j) || i == 0 || abs (j) <= n)
+  elseif (! isnumeric (j) || ! isscalar (j) || i == 0 || abs (j) > n)
     error ("gallery: J must be a nonzero scalar, and abs (J) <= N for gearmat matrix.");
   endif
 
   A = diag (ones (n-1, 1), -1) + diag (ones (n-1, 1), 1);
   A(1, abs (i)) = sign (i);
   A(n, n+1 - abs (j)) = sign (j);
 endfunction
 
@@ -1266,17 +1262,17 @@ function A = hanowa (n, d = -1)
   ##   Berlin, 1987. (pp. 86-87)
 
   if (nargin < 1 || nargin > 2)
     error ("gallery: 1 to 2 arguments are required for hanowa matrix.");
   elseif (! isnumeric (n) || ! isscalar (n) || fix (n) != n)
     error ("gallery: N must be an integer for hanowa matrix.");
   elseif (rem (n, 2) != 0)
     error ("gallery: N must be even for hanowa matrix.");
-  elseif (! isnumeric (lambda) || ! isscalar (lambda))
+  elseif (! isnumeric (d) || ! isscalar (d))
     error ("gallery: D must be a numeric scalar for hanowa matrix.");
   endif
 
   m = n/2;
   A = [ d*eye(m)  -diag(1:m)
         diag(1:m)  d*eye(m) ];
 endfunction
 
@@ -1600,18 +1596,18 @@ function A = kms (n, rho = 0.5)
   ##    W.F. Trench, Numerical solution of the eigenvalue problem
   ##    for Hermitian Toeplitz matrices, SIAM J. Matrix Analysis and Appl.,
   ##    10 (1989), pp. 135-146 (and see the references therein).
 
   if (nargin < 1 || nargin > 2)
     error ("gallery: 1 to 2 arguments are required for lauchli matrix.");
   elseif (! isnumeric (n) || ! isscalar (n) || fix (n) != n)
     error ("gallery: N must be an integer for lauchli matrix.")
-  elseif (! isscalar (mu))
-    error ("gallery: MU must be a scalar for lauchli matrix.")
+  elseif (! isscalar (rho))
+    error ("gallery: RHO must be a scalar for lauchli matrix.")
   endif
 
   A = (1:n)'*ones (1,n);
   A = abs (A - A');
   A = rho .^ A;
   if (imag (rho))
     A = conj (tril (A,-1)) + triu (A);
   endif
@@ -2010,17 +2006,17 @@ function P = pei (n, alpha = 1)
   ##   Reference:
   ##   M.L. Pei, A test matrix for inversion procedures,
   ##   Comm. ACM, 5 (1962), p. 508.
 
   if (nargin < 1 || nargin > 2)
     error ("gallery: 1 to 2 arguments are required for pei matrix.");
   elseif (! isnumeric (n) || ! isscalar (n) || fix (n) != n)
     error ("gallery: N must be an integer for pei matrix.");
-  elseif (! isnumeric (w) || ! isscalar (w))
+  elseif (! isnumeric (alpha) || ! isscalar (alpha))
     error ("gallery: ALPHA must be a scalar for pei matrix.");
   endif
 
   P = alpha * eye (n) + ones (n);
 endfunction
 
 function A = poisson (n)
   ## POISSON   Block tridiagonal matrix from Poisson's equation (sparse).
