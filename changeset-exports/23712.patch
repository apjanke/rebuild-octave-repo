# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1498677602 14400
#      Wed Jun 28 15:20:02 2017 -0400
# Node ID b95c430c06492715c5b318ec068443a9fa7d2df9
# Parent  5a97aafb12a9679bf3b222156b09ce14f16bdc6f
revamp insertion of config variables into binaries and eliminate some macros

* subst-config-vals.in.sh, subst-cross-config-vals.in.sh,
subst-default-vals.in.sh: Strip "^${prefix}/" or "^${exec_prefix} from
directory and file variables before substitution.

* defaults.h: Rename from defaults.in.h.
* defaults.in.cc: Rename from defaults.cc.  Move macro substitutions
here from defaults.h
* libinterp/corefcn/module.mk: Generate defaults.cc instead of defaults.in.h

* defaults.h, defaults.in.cc (prepend_octave_home): Rename from
subst_octave_home.  Prepend instead of substitute OCTAVE_HOME.
Skip absolute directory and file names.
(prepend_octave_exec_home): New function to handle OCTAVE_EXEC_HOME
separately from OCTAVE_HOME.
(FOCTAVE_EXEC_HOME): New function.
Expose more configuration variables as internal Octave variables.
Change all uses of macros to use variables instead.

* toplev.cc (F__octave_config_info__): Use std::map initializer to
create structs.

* shared-fcns.h (prepend_octave_home): Rename from subst_octave_home.
Prepend instead of substitute OCTAVE_HOME.
(prepend_octave_exec_home): Handle OCTAVE_EXEC_HOME separately from
OCTAVE_HOME.
Import additional support functions.

diff --git a/build-aux/subst-config-vals.in.sh b/build-aux/subst-config-vals.in.sh
--- a/build-aux/subst-config-vals.in.sh
+++ b/build-aux/subst-config-vals.in.sh
@@ -16,17 +16,16 @@
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 : ${SED=@SED@}
 
 NO_OCT_FILE_STRIP="@NO_OCT_FILE_STRIP@"
-bindir="@bindir@"
 AMD_CPPFLAGS="@AMD_CPPFLAGS@"
 AMD_LDFLAGS="@AMD_LDFLAGS@"
 AMD_LIBS="@AMD_LIBS@"
 AR="@AR@"
 ARFLAGS="@ARFLAGS@"
 ARPACK_CPPFLAGS="@ARPACK_CPPFLAGS@"
 ARPACK_LDFLAGS="@ARPACK_LDFLAGS@"
 ARPACK_LIBS="@ARPACK_LIBS@"
@@ -89,28 +88,26 @@ FT2_CPPFLAGS="@FT2_CPPFLAGS@"
 FT2_LIBS="@FT2_LIBS@"
 GLPK_CPPFLAGS="@GLPK_CPPFLAGS@"
 GLPK_LDFLAGS="@GLPK_LDFLAGS@"
 GLPK_LIBS="@GLPK_LIBS@"
 GNUPLOT="@GNUPLOT@"
 HDF5_CPPFLAGS="@HDF5_CPPFLAGS@"
 HDF5_LDFLAGS="@HDF5_LDFLAGS@"
 HDF5_LIBS="@HDF5_LIBS@"
-includedir="@includedir@"
 KLU_CPPFLAGS="@KLU_CPPFLAGS@"
 KLU_LDFLAGS="@KLU_LDFLAGS@"
 KLU_LIBS="@KLU_LIBS@"
 LAPACK_LIBS="@LAPACK_LIBS@"
 LD_CXX="@LD_CXX@"
 LDFLAGS="@LDFLAGS@"
 LD_STATIC_FLAG="@LD_STATIC_FLAG@"
 LEX="@LEX@"
 LEXLIB="@LEXLIB@"
 LFLAGS="@LFLAGS@"
-libdir="@libdir@"
 LIBOCTAVE="@LIBOCTAVE@"
 LIBOCTINTERP="@LIBOCTINTERP@"
 LIBS="@LIBS@"
 LLVM_CPPFLAGS="@LLVM_CPPFLAGS@"
 LLVM_LDFLAGS="@LLVM_LDFLAGS@"
 LLVM_LIBS="@LLVM_LIBS@"
 LN_S="@LN_S@"
 MAGICK_CPPFLAGS="@MAGICK_CPPFLAGS@"
@@ -121,28 +118,25 @@ MKOCTFILE_CC="@MKOCTFILE_CC@"
 MKOCTFILE_CXX="@MKOCTFILE_CXX@"
 MKOCTFILE_DL_LD="@MKOCTFILE_DL_LD@"
 MKOCTFILE_DL_LDFLAGS="@MKOCTFILE_DL_LDFLAGS@"
 MKOCTFILE_F77="@MKOCTFILE_F77@"
 MKOCTFILE_LD_CXX="@MKOCTFILE_LD_CXX@"
 MKOCTFILE_RANLIB="@MKOCTFILE_RANLIB@"
 OCTAVE_LINK_DEPS="@OCTAVE_LINK_DEPS@"
 OCTAVE_LINK_OPTS="@OCTAVE_LINK_OPTS@"
-octincludedir="@octincludedir@"
-octlibdir="@octlibdir@"
 OCT_LINK_DEPS="@OCT_LINK_DEPS@"
 OCT_LINK_OPTS="@OCT_LINK_OPTS@"
 OPENGL_LIBS="@OPENGL_LIBS@"
 OSMESA_CPPFLAGS="@OSMESA_CPPFLAGS@"
 OSMESA_LDFLAGS="@OSMESA_LDFLAGS@"
 OSMESA_LIBS="@OSMESA_LIBS@"
 PCRE_CPPFLAGS="@PCRE_CPPFLAGS@"
 PCRE_LDFLAGS="@PCRE_LDFLAGS@"
 PCRE_LIBS="@PCRE_LIBS@"
-prefix="@prefix@"
 PTHREAD_CFLAGS="@PTHREAD_CFLAGS@"
 PTHREAD_LIBS="@PTHREAD_LIBS@"
 QHULL_CPPFLAGS="@QHULL_CPPFLAGS@"
 QHULL_LDFLAGS="@QHULL_LDFLAGS@"
 QHULL_LIBS="@QHULL_LIBS@"
 QRUPDATE_CPPFLAGS="@QRUPDATE_CPPFLAGS@"
 QRUPDATE_LDFLAGS="@QRUPDATE_LDFLAGS@"
 QRUPDATE_LIBS="@QRUPDATE_LIBS@"
@@ -177,16 +171,26 @@ XTRA_CFLAGS="@XTRA_CFLAGS@"
 XTRA_CXXFLAGS="@XTRA_CXXFLAGS@"
 YACC="@YACC@"
 YFLAGS="@YFLAGS@"
 Z_CPPFLAGS="@Z_CPPFLAGS@"
 Z_LDFLAGS="@Z_LDFLAGS@"
 Z_LIBS="@Z_LIBS@"
 config_opts="@config_opts@"
 
+prefix="@prefix@"
+exec_prefix="@exec_prefix@"
+
+bindir=`echo "@bindir@" | sed "s|^${exec_prefix}/||"`
+libdir=`echo "@libdir@" | sed "s|^${exec_prefix}/||"`
+octlibdir=`echo "@octlibdir@" | sed "s|^${exec_prefix}/||"`
+
+includedir=`echo "@includedir@" | sed "s|^${prefix}/||"`
+octincludedir=`echo "@octincludedir@" | sed "s|^${prefix}/||"`
+
 $SED \
   -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by subst-config-vals.|" \
   -e "s|%NO_OCT_FILE_STRIP%|${NO_OCT_FILE_STRIP}|" \
   -e "s|%OCTAVE_BINDIR%|\"${bindir}\"|" \
   -e "s|%OCTAVE_CONF_AMD_CPPFLAGS%|\"${AMD_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_AMD_LDFLAGS%|\"${AMD_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_AMD_LIBS%|\"${AMD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_AR%|\"${AR}\"|" \
@@ -224,16 +228,17 @@ config_opts="@config_opts@"
   -e "s|%OCTAVE_CONF_CXXPICFLAG%|\"${CXXPICFLAG}\"|" \
   -e "s|%OCTAVE_CONF_DEFAULT_PAGER%|\"${DEFAULT_PAGER}\"|" \
   -e "s|%OCTAVE_CONF_DEFS%|\"${DEFS}\"|" \
   -e "s|%OCTAVE_CONF_DEPEND_FLAGS%|\"${DEPEND_FLAGS}\"|" \
   -e "s|%OCTAVE_CONF_DEPEND_EXTRA_SED_PATTERN%|\"${DEPEND_EXTRA_SED_PATTERN}\"|" \
   -e "s|%OCTAVE_CONF_DL_LD%|\"${DL_LD}\"|" \
   -e "s|%OCTAVE_CONF_DL_LDFLAGS%|\"${DL_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_DL_LIBS%|\"${DL_LIBS}\"|" \
+  -e "s|%OCTAVE_CONF_EXEC_PREFIX%|\"${exec_prefix}\"|" \
   -e "s|%OCTAVE_CONF_EXEEXT%|\"${EXEEXT}\"|" \
   -e "s|%OCTAVE_CONF_GCC_VERSION%|\"${GCC_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_GXX_VERSION%|\"${GXX_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_F77%|\"${F77}\"|" \
   -e "s|%OCTAVE_CONF_F77_FLOAT_STORE_FLAG%|\"${F77_FLOAT_STORE_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_F77_INTEGER_8_FLAG%|\"${F77_INTEGER_8_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_FFLAGS%|\"${FFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_FFTW3_CPPFLAGS%|\"${FFTW3_CPPFLAGS}\"|" \
diff --git a/build-aux/subst-cross-config-vals.in.sh b/build-aux/subst-cross-config-vals.in.sh
--- a/build-aux/subst-cross-config-vals.in.sh
+++ b/build-aux/subst-cross-config-vals.in.sh
@@ -28,17 +28,16 @@
 ##   OCTAVE_CONF_MKOCTFILE_CXX
 ##   OCTAVE_CONF_MKOCTFILE_DL_LD
 ##   OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS
 ##   OCTAVE_CONF_MKOCTFILE_F77
 ##   OCTAVE_CONF_MKOCTFILE_LD_CXX
 ##   OCTAVE_CONF_MKOCTFILE_RANLIB
 
 NO_OCT_FILE_STRIP="@NO_OCT_FILE_STRIP@"
-bindir="@bindir@"
 AMD_CPPFLAGS="@AMD_CPPFLAGS@"
 AMD_LDFLAGS="@AMD_LDFLAGS@"
 AMD_LIBS="@AMD_LIBS@"
 AR="@AR@"
 ARFLAGS="@ARFLAGS@"
 ARPACK_CPPFLAGS="@ARPACK_CPPFLAGS@"
 ARPACK_LDFLAGS="@ARPACK_LDFLAGS@"
 ARPACK_LIBS="@ARPACK_LIBS@"
@@ -101,52 +100,47 @@ FT2_CPPFLAGS="@FT2_CPPFLAGS@"
 FT2_LIBS="@FT2_LIBS@"
 GLPK_CPPFLAGS="@GLPK_CPPFLAGS@"
 GLPK_LDFLAGS="@GLPK_LDFLAGS@"
 GLPK_LIBS="@GLPK_LIBS@"
 GNUPLOT="@GNUPLOT@"
 HDF5_CPPFLAGS="@HDF5_CPPFLAGS@"
 HDF5_LDFLAGS="@HDF5_LDFLAGS@"
 HDF5_LIBS="@HDF5_LIBS@"
-includedir="@includedir@"
 KLU_CPPFLAGS="@KLU_CPPFLAGS@"
 KLU_LDFLAGS="@KLU_LDFLAGS@"
 KLU_LIBS="@KLU_LIBS@"
 LAPACK_LIBS="@LAPACK_LIBS@"
 LD_CXX="@LD_CXX@"
 LDFLAGS="@LDFLAGS@"
 LD_STATIC_FLAG="@LD_STATIC_FLAG@"
 LEX="@LEX@"
 LEXLIB="@LEXLIB@"
 LFLAGS="@LFLAGS@"
-libdir="@libdir@"
 LIBOCTAVE="@LIBOCTAVE@"
 LIBOCTINTERP="@LIBOCTINTERP@"
 LIBS="@LIBS@"
 LLVM_CPPFLAGS="@LLVM_CPPFLAGS@"
 LLVM_LDFLAGS="@LLVM_LDFLAGS@"
 LLVM_LIBS="@LLVM_LIBS@"
 LN_S="@LN_S@"
 MAGICK_CPPFLAGS="@MAGICK_CPPFLAGS@"
 MAGICK_LDFLAGS="@MAGICK_LDFLAGS@"
 MAGICK_LIBS="@MAGICK_LIBS@"
 OCTAVE_LINK_DEPS="@OCTAVE_LINK_DEPS@"
 OCTAVE_LINK_OPTS="@OCTAVE_LINK_OPTS@"
-octincludedir="@octincludedir@"
-octlibdir="@octlibdir@"
 OCT_LINK_DEPS="@OCT_LINK_DEPS@"
 OCT_LINK_OPTS="@OCT_LINK_OPTS@"
 OPENGL_LIBS="@OPENGL_LIBS@"
 OSMESA_CPPFLAGS="@OSMESA_CPPFLAGS@"
 OSMESA_LDFLAGS="@OSMESA_LDFLAGS@"
 OSMESA_LIBS="@OSMESA_LIBS@"
 PCRE_CPPFLAGS="@PCRE_CPPFLAGS@"
 PCRE_LDFLAGS="@PCRE_LDFLAGS@"
 PCRE_LIBS="@PCRE_LIBS@"
-prefix="@prefix@"
 PTHREAD_CFLAGS="@PTHREAD_CFLAGS@"
 PTHREAD_LIBS="@PTHREAD_LIBS@"
 QHULL_CPPFLAGS="@QHULL_CPPFLAGS@"
 QHULL_LDFLAGS="@QHULL_LDFLAGS@"
 QHULL_LIBS="@QHULL_LIBS@"
 QRUPDATE_CPPFLAGS="@QRUPDATE_CPPFLAGS@"
 QRUPDATE_LDFLAGS="@QRUPDATE_LDFLAGS@"
 QRUPDATE_LIBS="@QRUPDATE_LIBS@"
@@ -181,16 +175,26 @@ XTRA_CFLAGS="@XTRA_CFLAGS@"
 XTRA_CXXFLAGS="@XTRA_CXXFLAGS@"
 YACC="@YACC@"
 YFLAGS="@YFLAGS@"
 Z_CPPFLAGS="@Z_CPPFLAGS@"
 Z_LDFLAGS="@Z_LDFLAGS@"
 Z_LIBS="@Z_LIBS@"
 config_opts="@config_opts@"
 
+prefix="@prefix@"
+exec_prefix="@exec_prefix@"
+
+bindir=`echo "@bindir@" | sed "s|^${exec_prefix}/||"`
+libdir=`echo "@libdir@" | sed "s|^${exec_prefix}/||"`
+octlibdir=`echo "@octlibdir@" | sed "s|^${exec_prefix}/||"`
+
+includedir=`echo "@includedir@" | sed "s|^${prefix}/||"`
+octincludedir=`echo "@octincludedir@" | sed "s|^${prefix}/||"`
+
 $SED \
   -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by subst-config-vals.|" \
   -e "s|%NO_OCT_FILE_STRIP%|${NO_OCT_FILE_STRIP}|" \
   -e "s|%OCTAVE_BINDIR%|\"${bindir}\"|" \
   -e "s|%OCTAVE_CONF_AMD_CPPFLAGS%|\"${AMD_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_AMD_LDFLAGS%|\"${AMD_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_AMD_LIBS%|\"${AMD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_AR%|\"${AR}\"|" \
diff --git a/build-aux/subst-default-vals.in.sh b/build-aux/subst-default-vals.in.sh
--- a/build-aux/subst-default-vals.in.sh
+++ b/build-aux/subst-default-vals.in.sh
@@ -15,59 +15,64 @@
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 : ${SED=@SED@}
 
-archlibdir="@archlibdir@"
-bindir="@bindir@"
 canonical_host_type="@canonical_host_type@"
-datadir="@datadir@"
-datarootdir="@datarootdir@"
 DEFAULT_PAGER="@DEFAULT_PAGER@"
-doc_cache_file="@doc_cache_file@"
-exec_prefix="@exec_prefix@"
 EXEEXT="@EXEEXT@"
-fcnfiledir="@fcnfiledir@"
-imagedir="@imagedir@"
-includedir="@includedir@"
-infodir="@infodir@"
-infofile="@infofile@"
-libdir="@libdir@"
-libexecdir="@libexecdir@"
-localapifcnfiledir="@localapifcnfiledir@"
-localapioctfiledir="@localapioctfiledir@"
-localarchlibdir="@localarchlibdir@"
-localfcnfiledir="@localfcnfiledir@"
-localoctfiledir="@localoctfiledir@"
-localstartupfiledir="@localstartupfiledir@"
-localapiarchlibdir="@localapiarchlibdir@"
-localverarchlibdir="@localverarchlibdir@"
-localverfcnfiledir="@localverfcnfiledir@"
-localveroctfiledir="@localveroctfiledir@"
-man1dir="@man1dir@"
 man1ext="@man1ext@"
-mandir="@mandir@"
-octdatadir="@octdatadir@"
-octfiledir="@octfiledir@"
-octetcdir="@octetcdir@"
-octincludedir="@octincludedir@"
-octlibdir="@octlibdir@"
-octlocaledir="@octlocaledir@"
-octtestsdir="@octtestsdir@"
-prefix="@prefix@"
-startupfiledir="@startupfiledir@"
 api_version="@OCTAVE_API_VERSION@"
 OCTAVE_RELEASE=""
-texi_macros_file="@texi_macros_file@"
 version="@PACKAGE_VERSION@"
 
+prefix="@prefix@"
+exec_prefix="@exec_prefix@"
+
+archlibdir=`echo "@archlibdir@" | sed "s|^${exec_prefix}/||"`
+bindir=`echo "@bindir@" | sed "s|^${exec_prefix}/||"`
+libdir=`echo "@libdir@" | sed "s|^${exec_prefix}/||"`
+libexecdir=`echo "@libexecdir@" | sed "s|^${exec_prefix}/||"`
+localapiarchlibdir=`echo "@localapiarchlibdir@" | sed "s|^${exec_prefix}/||"`
+localapioctfiledir=`echo "@localapioctfiledir@" | sed "s|^${exec_prefix}/||"`
+localarchlibdir=`echo "@localarchlibdir@" | sed "s|^${exec_prefix}/||"`
+localoctfiledir=`echo "@localoctfiledir@" | sed "s|^${exec_prefix}/||"`
+localverarchlibdir=`echo "@localverarchlibdir@" | sed "s|^${exec_prefix}/||"`
+localveroctfiledir=`echo "@localveroctfiledir@" | sed "s|^${exec_prefix}/||"`
+octfiledir=`echo "@octfiledir@" | sed "s|^${exec_prefix}/||"`
+octlibdir=`echo "@octlibdir@" | sed "s|^${exec_prefix}/||"`
+
+datadir=`echo "@datadir@" | sed "s|^${prefix}/||"`
+datarootdir=`echo "@datarootdir@" | sed "s|^${prefix}/||"`
+doc_cache_file=`echo "@doc_cache_file@" | sed "s|^${prefix}/||"`
+exec_prefix=`echo "@exec_prefix@" | sed "s|^${prefix}/||"`
+fcnfiledir=`echo "@fcnfiledir@" | sed "s|^${prefix}/||"`
+imagedir=`echo "@imagedir@" | sed "s|^${prefix}/||"`
+includedir=`echo "@includedir@" | sed "s|^${prefix}/||"`
+infodir=`echo "@infodir@" | sed "s|^${prefix}/||"`
+infofile=`echo "@infofile@" | sed "s|^${prefix}/||"`
+localapifcnfiledir=`echo "@localapifcnfiledir@" | sed "s|^${prefix}/||"`
+localfcnfiledir=`echo "@localfcnfiledir@" | sed "s|^${prefix}/||"`
+localstartupfiledir=`echo "@localstartupfiledir@" | sed "s|^${prefix}/||"`
+localapiarchlibdir=`echo "@localapiarchlibdir@" | sed "s|^${prefix}/||"`
+localverfcnfiledir=`echo "@localverfcnfiledir@" | sed "s|^${prefix}/||"`
+man1dir=`echo "@man1dir@" | sed "s|^${prefix}/||"`
+mandir=`echo "@mandir@" | sed "s|^${prefix}/||"`
+octdatadir=`echo "@octdatadir@" | sed "s|^${prefix}/||"`
+octetcdir=`echo "@octetcdir@" | sed "s|^${prefix}/||"`
+octincludedir=`echo "@octincludedir@" | sed "s|^${prefix}/||"`
+octlocaledir=`echo "@octlocaledir@" | sed "s|^${prefix}/||"`
+octtestsdir=`echo "@octtestsdir@" | sed "s|^${prefix}/||"`
+startupfiledir=`echo "@startupfiledir@" | sed "s|^${prefix}/||"`
+texi_macros_file=`echo "@texi_macros_file@" | sed "s|^${prefix}/||"`
+
 $SED \
   -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by subst-default-vals.|" \
   -e "s|%OCTAVE_ARCHLIBDIR%|\"${archlibdir}\"|" \
   -e "s|%OCTAVE_BINDIR%|\"${bindir}\"|" \
   -e "s|%OCTAVE_CANONICAL_HOST_TYPE%|\"${canonical_host_type}\"|" \
   -e "s|%OCTAVE_DATADIR%|\"${datadir}\"|" \
   -e "s|%OCTAVE_DATAROOTDIR%|\"${datarootdir}\"|" \
   -e "s|%OCTAVE_DEFAULT_PAGER%|\"${DEFAULT_PAGER}\"|" \
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -513,16 +513,18 @@ referred to as a @var{grp_struct}.
 @DOCSTRING(isieee)
 
 @DOCSTRING(isdeployed)
 
 @DOCSTRING(isstudent)
 
 @DOCSTRING(OCTAVE_HOME)
 
+@DOCSTRING(OCTAVE_EXEC_HOME)
+
 @DOCSTRING(matlabroot)
 
 @DOCSTRING(OCTAVE_VERSION)
 
 @DOCSTRING(version)
 
 @DOCSTRING(ver)
 
diff --git a/libinterp/corefcn/defaults.cc b/libinterp/corefcn/defaults.cc
--- a/libinterp/corefcn/defaults.cc
+++ b/libinterp/corefcn/defaults.cc
@@ -89,166 +89,165 @@ std::string VEDITOR;
 
 static std::string VIMAGE_PATH;
 
 std::string Vlocal_site_defaults_file;
 std::string Vsite_defaults_file;
 
 std::string Vbuilt_in_docstrings_file;
 
-std::string
-subst_octave_home (const std::string& s)
-{
-  std::string retval;
+// Variables that name directories or files are substituted into source
+// files with "${prefix}/" stripped from the beginning of the string.
 
-  std::string prefix = OCTAVE_PREFIX;
-
-  retval = s;
+// All configure variables of this form should be specified as absolute
+// directory names.  The only ones that should not be absolute here are
+// ones that have had "${prefix}/" stripped.
 
-  if (Voctave_home != prefix)
-    {
-      size_t len = prefix.length ();
+std::string
+prepend_octave_home (const std::string& s)
+{
+  std::string retval = s;
 
-      if (s.substr (0, len) == prefix)
-        retval.replace (0, len, Voctave_home);
-    }
+  char dir_sep_char = octave::sys::file_ops::dir_sep_char ();
 
-  if (octave::sys::file_ops::dir_sep_char () != '/')
-    std::replace (retval.begin (), retval.end (), '/',
-                  octave::sys::file_ops::dir_sep_char ());
+  if (! octave::sys::env::absolute_pathname (retval))
+    retval = Voctave_home + dir_sep_char + s;
+
+  if (dir_sep_char != '/')
+    std::replace (retval.begin (), retval.end (), '/', dir_sep_char);
 
   return retval;
 }
 
 static void
 set_octave_home (void)
 {
   std::string oh = octave::sys::env::getenv ("OCTAVE_HOME");
 
   Voctave_home = (oh.empty () ? std::string (OCTAVE_PREFIX) : oh);
 }
 
 static void
 set_default_info_dir (void)
 {
-  Vinfo_dir = subst_octave_home (OCTAVE_INFODIR);
+  Vinfo_dir = prepend_octave_home (OCTAVE_INFODIR);
 }
 
 static void
 set_default_data_dir (void)
 {
-  Vdata_dir = subst_octave_home (OCTAVE_DATADIR);
+  Vdata_dir = prepend_octave_home (OCTAVE_DATADIR);
 }
 
 static void
 set_default_libexec_dir (void)
 {
-  Vlibexec_dir = subst_octave_home (OCTAVE_LIBEXECDIR);
+  Vlibexec_dir = prepend_octave_home (OCTAVE_LIBEXECDIR);
 }
 
 static void
 set_default_arch_lib_dir (void)
 {
-  Varch_lib_dir = subst_octave_home (OCTAVE_ARCHLIBDIR);
+  Varch_lib_dir = prepend_octave_home (OCTAVE_ARCHLIBDIR);
 }
 
 static void
 set_default_local_arch_lib_dir (void)
 {
-  Vlocal_arch_lib_dir = subst_octave_home (OCTAVE_LOCALARCHLIBDIR);
+  Vlocal_arch_lib_dir = prepend_octave_home (OCTAVE_LOCALARCHLIBDIR);
 }
 
 static void
 set_default_local_api_arch_lib_dir (void)
 {
-  Vlocal_api_arch_lib_dir = subst_octave_home (OCTAVE_LOCALAPIARCHLIBDIR);
+  Vlocal_api_arch_lib_dir = prepend_octave_home (OCTAVE_LOCALAPIARCHLIBDIR);
 }
 
 static void
 set_default_local_ver_arch_lib_dir (void)
 {
-  Vlocal_ver_arch_lib_dir = subst_octave_home (OCTAVE_LOCALVERARCHLIBDIR);
+  Vlocal_ver_arch_lib_dir = prepend_octave_home (OCTAVE_LOCALVERARCHLIBDIR);
 }
 
 static void
 set_default_local_ver_oct_file_dir (void)
 {
-  Vlocal_ver_oct_file_dir = subst_octave_home (OCTAVE_LOCALVEROCTFILEDIR);
+  Vlocal_ver_oct_file_dir = prepend_octave_home (OCTAVE_LOCALVEROCTFILEDIR);
 }
 
 static void
 set_default_local_api_oct_file_dir (void)
 {
-  Vlocal_api_oct_file_dir = subst_octave_home (OCTAVE_LOCALAPIOCTFILEDIR);
+  Vlocal_api_oct_file_dir = prepend_octave_home (OCTAVE_LOCALAPIOCTFILEDIR);
 }
 
 static void
 set_default_local_oct_file_dir (void)
 {
-  Vlocal_oct_file_dir = subst_octave_home (OCTAVE_LOCALOCTFILEDIR);
+  Vlocal_oct_file_dir = prepend_octave_home (OCTAVE_LOCALOCTFILEDIR);
 }
 
 static void
 set_default_local_ver_fcn_file_dir (void)
 {
-  Vlocal_ver_fcn_file_dir = subst_octave_home (OCTAVE_LOCALVERFCNFILEDIR);
+  Vlocal_ver_fcn_file_dir = prepend_octave_home (OCTAVE_LOCALVERFCNFILEDIR);
 }
 
 static void
 set_default_local_api_fcn_file_dir (void)
 {
-  Vlocal_api_fcn_file_dir = subst_octave_home (OCTAVE_LOCALAPIFCNFILEDIR);
+  Vlocal_api_fcn_file_dir = prepend_octave_home (OCTAVE_LOCALAPIFCNFILEDIR);
 }
 
 static void
 set_default_local_fcn_file_dir (void)
 {
-  Vlocal_fcn_file_dir = subst_octave_home (OCTAVE_LOCALFCNFILEDIR);
+  Vlocal_fcn_file_dir = prepend_octave_home (OCTAVE_LOCALFCNFILEDIR);
 }
 
 static void
 set_default_fcn_file_dir (void)
 {
-  Vfcn_file_dir = subst_octave_home (OCTAVE_FCNFILEDIR);
+  Vfcn_file_dir = prepend_octave_home (OCTAVE_FCNFILEDIR);
 }
 
 static void
 set_default_image_dir (void)
 {
-  Vimage_dir = subst_octave_home (OCTAVE_IMAGEDIR);
+  Vimage_dir = prepend_octave_home (OCTAVE_IMAGEDIR);
 }
 
 static void
 set_default_oct_data_dir (void)
 {
-  Voct_data_dir = subst_octave_home (OCTAVE_OCTDATADIR);
+  Voct_data_dir = prepend_octave_home (OCTAVE_OCTDATADIR);
 }
 
 static void
 set_default_oct_etc_dir (void)
 {
-  Voct_etc_dir = subst_octave_home (OCTAVE_OCTETCDIR);
+  Voct_etc_dir = prepend_octave_home (OCTAVE_OCTETCDIR);
 }
 
 static void
 set_default_oct_locale_dir (void)
 {
-  Voct_locale_dir = subst_octave_home (OCTAVE_OCTLOCALEDIR);
+  Voct_locale_dir = prepend_octave_home (OCTAVE_OCTLOCALEDIR);
 }
 
 static void
 set_default_oct_file_dir (void)
 {
-  Voct_file_dir = subst_octave_home (OCTAVE_OCTFILEDIR);
+  Voct_file_dir = prepend_octave_home (OCTAVE_OCTFILEDIR);
 }
 
 static void
 set_default_bin_dir (void)
 {
-  Vbin_dir = subst_octave_home (OCTAVE_BINDIR);
+  Vbin_dir = prepend_octave_home (OCTAVE_BINDIR);
 }
 
 void
 set_exec_path (const std::string& path_arg)
 {
   std::string tpath = path_arg;
 
   if (tpath.empty ())
@@ -304,43 +303,43 @@ set_image_path (const std::string& path)
     VIMAGE_PATH += octave::directory_path::path_sep_str () + tpath;
 }
 
 static void
 set_default_doc_cache_file (void)
 {
   if (Vdoc_cache_file.empty ())
     {
-      std::string def_file = subst_octave_home (OCTAVE_DOC_CACHE_FILE);
+      std::string def_file = prepend_octave_home (OCTAVE_DOC_CACHE_FILE);
 
       std::string env_file = octave::sys::env::getenv ("OCTAVE_DOC_CACHE_FILE");
 
       Vdoc_cache_file = (env_file.empty () ? def_file : env_file);
     }
 }
 
 static void
 set_default_texi_macros_file (void)
 {
   if (Vtexi_macros_file.empty ())
     {
-      std::string def_file = subst_octave_home (OCTAVE_TEXI_MACROS_FILE);
+      std::string def_file = prepend_octave_home (OCTAVE_TEXI_MACROS_FILE);
 
       std::string env_file = octave::sys::env::getenv ("OCTAVE_TEXI_MACROS_FILE");
 
       Vtexi_macros_file = (env_file.empty () ? def_file : env_file);
     }
 }
 
 static void
 set_default_info_file (void)
 {
   if (Vinfo_file.empty ())
     {
-      std::string std_info_file = subst_octave_home (OCTAVE_INFOFILE);
+      std::string std_info_file = prepend_octave_home (OCTAVE_INFOFILE);
 
       std::string oct_info_file = octave::sys::env::getenv ("OCTAVE_INFO_FILE");
 
       Vinfo_file = (oct_info_file.empty () ? std_info_file : oct_info_file);
     }
 }
 
 static void
@@ -371,31 +370,31 @@ set_default_editor (void)
 static void
 set_local_site_defaults_file (void)
 {
   std::string lsf = octave::sys::env::getenv ("OCTAVE_SITE_INITFILE");
 
   if (lsf.empty ())
     {
       Vlocal_site_defaults_file
-        = subst_octave_home (OCTAVE_LOCALSTARTUPFILEDIR);
+        = prepend_octave_home (OCTAVE_LOCALSTARTUPFILEDIR);
       Vlocal_site_defaults_file.append ("/octaverc");
     }
   else
     Vlocal_site_defaults_file = lsf;
 }
 
 static void
 set_site_defaults_file (void)
 {
   std::string sf = octave::sys::env::getenv ("OCTAVE_VERSION_INITFILE");
 
   if (sf.empty ())
     {
-      Vsite_defaults_file = subst_octave_home (OCTAVE_STARTUPFILEDIR);
+      Vsite_defaults_file = prepend_octave_home (OCTAVE_STARTUPFILEDIR);
       Vsite_defaults_file.append ("/octaverc");
     }
   else
     Vsite_defaults_file = sf;
 }
 
 static void
 set_built_in_docstrings_file (void)
diff --git a/libinterp/corefcn/defaults.in.h b/libinterp/corefcn/defaults.in.h
--- a/libinterp/corefcn/defaults.in.h
+++ b/libinterp/corefcn/defaults.in.h
@@ -186,16 +186,17 @@ along with Octave; see the file COPYING.
 #  define OCTAVE_STARTUPFILEDIR %OCTAVE_STARTUPFILEDIR%
 #endif
 
 #if ! defined (OCTAVE_RELEASE)
 #  define OCTAVE_RELEASE %OCTAVE_RELEASE%
 #endif
 
 extern OCTINTERP_API std::string Voctave_home;
+extern OCTINTERP_API std::string Voctave_exec_home;
 
 extern OCTINTERP_API std::string Vbin_dir;
 extern OCTINTERP_API std::string Vinfo_dir;
 extern OCTINTERP_API std::string Vdata_dir;
 extern OCTINTERP_API std::string Vlibexec_dir;
 extern OCTINTERP_API std::string Varch_lib_dir;
 extern OCTINTERP_API std::string Vlocal_arch_lib_dir;
 extern OCTINTERP_API std::string Vlocal_ver_arch_lib_dir;
@@ -223,17 +224,17 @@ extern OCTINTERP_API std::string VEDITOR
 extern OCTINTERP_API std::string Vlocal_site_defaults_file;
 extern OCTINTERP_API std::string Vsite_defaults_file;
 
 extern OCTINTERP_API std::string Vbuilt_in_docstrings_file;
 
 // Name of the FFTW wisdom program.
 extern OCTINTERP_API std::string Vfftw_wisdom_program;
 
-extern OCTINTERP_API std::string subst_octave_home (const std::string&);
+extern OCTINTERP_API std::string prepend_octave_home (const std::string&);
 
 extern OCTINTERP_API void install_defaults (void);
 
 extern OCTINTERP_API void
 set_exec_path (const std::string& path = "");
 
 extern OCTINTERP_API void
 set_image_path (const std::string& path = "");
diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -129,17 +129,17 @@ Undocumented internal function.
 }
 
 static void
 initialize_version_info (void)
 {
   octave_value_list args;
 
   args(3) = OCTAVE_RELEASE_DATE;
-  args(2) = OCTAVE_RELEASE;
+  args(2) = Voctave_release;
   args(1) = OCTAVE_VERSION;
   args(0) = "GNU Octave";
 
   F__version_info__ (args, 0);
 }
 
 OCTAVE_NORETURN static void
 lo_error_handler (const char *fmt, ...)
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -858,28 +858,28 @@ read_mat5_binary_element (std::istream& 
               tc = make_fcn_handle (fname);
             else
               {
                 std::string mroot =
                   m0.contents ("matlabroot").string_value ();
 
                 if ((fpath.length () >= mroot.length ())
                     && fpath.substr (0, mroot.length ()) == mroot
-                    && OCTAVE_EXEC_PREFIX != mroot)
+                    && Voctave_exec_home != mroot)
                   {
                     // If fpath starts with matlabroot, and matlabroot
                     // doesn't equal __octave_config_info__ ("exec_prefix")
                     // then the function points to a version of Octave
                     // or Matlab other than the running version.  In that
                     // case we replace with the same function in the
                     // running version of Octave?
 
                     // First check if just replacing matlabroot is enough
-                    std::string str = OCTAVE_EXEC_PREFIX +
-                                      fpath.substr (mroot.length ());
+                    std::string str
+                      = Voctave_exec_home + fpath.substr (mroot.length ());
                     octave::sys::file_stat fs (str);
 
                     if (fs.exists ())
                       {
                         size_t xpos
                           = str.find_last_of (octave::sys::file_ops::dir_sep_chars ());
 
                         std::string dir_name = str.substr (0, xpos);
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -244,17 +244,17 @@ COREFCN_SRC = \
   %reldir%/xdiv.cc \
   %reldir%/xnorm.cc \
   %reldir%/xpow.cc \
   %reldir%/zfstream.cc \
   $(NOINSTALL_COREFCN_INC)
 
 ## Special rules for sources which must be built before rest of compilation.
 
-%reldir%/defaults.h: %reldir%/defaults.in.h build-aux/subst-default-vals.sh | %reldir%/$(octave_dirstamp)
+%reldir%/defaults.cc: %reldir%/defaults.in.cc build-aux/subst-default-vals.sh | %reldir%/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/subst-default-vals.sh)
 
 %reldir%/graphics.h: %reldir%/graphics.in.h %reldir%/genprops.awk | %reldir%/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(AWK) -f $(srcdir)/%reldir%/genprops.awk $< > $@-t && \
 	mv $@-t $@
 
 %reldir%/graphics-props.cc: %reldir%/graphics.in.h %reldir%/genprops.awk | %reldir%/$(octave_dirstamp)
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -47,16 +47,17 @@ along with Octave; see the file COPYING.
 
 #include "build-env.h"
 #include "liboctinterp-build-info.h"
 #include "call-stack.h"
 #include "defaults.h"
 #include "defun.h"
 #include "error.h"
 #include "file-io.h"
+#include "help.h"
 #include "octave.h"
 #include "oct-map.h"
 #include "ovl.h"
 #include "ov.h"
 #include "pager.h"
 #include "procstream.h"
 #include "sysdep.h"
 #include "unwind-prot.h"
@@ -310,293 +311,245 @@ specified option.
 #if defined (ENABLE_DYNAMIC_LINKING)
   bool octave_supports_dynamic_linking = true;
 #else
   bool octave_supports_dynamic_linking = false;
 #endif
 
   static bool initialized = false;
 
-  struct conf_info_struct
-  {
-    const char *key;
-    octave_value val;
-  };
-
-  static const conf_info_struct conf_info[] =
-  {
-    { "DEFAULT_PAGER", OCTAVE_DEFAULT_PAGER },
+  std::map<std::string, octave_value> conf_info_map
+    = {{ "DEFAULT_PAGER", Vdefault_pager },
 
 #if defined (OCTAVE_ENABLE_64)
-    { "ENABLE_64", true },
+       { "ENABLE_64", true },
 #else
-    { "ENABLE_64", false },
+       { "ENABLE_64", false },
 #endif
 
 #if defined (OCTAVE_ENABLE_ATOMIC_REFCOUNT)
-    { "ENABLE_ATOMIC_REFCOUNT", true },
+       { "ENABLE_ATOMIC_REFCOUNT", true },
 #else
-    { "ENABLE_ATOMIC_REFCOUNT", false },
+       { "ENABLE_ATOMIC_REFCOUNT", false },
 #endif
 
 #if defined (ENABLE_DOCS)
-    { "ENABLE_DOCS", true },
+       { "ENABLE_DOCS", true },
 #else
-    { "ENABLE_DOCS", false },
+       { "ENABLE_DOCS", false },
 #endif
 
 #if defined (ENABLE_DYNAMIC_LINKING)
-    { "ENABLE_DYNAMIC_LINKING", true },
+       { "ENABLE_DYNAMIC_LINKING", true },
 #else
-    { "ENABLE_DYNAMIC_LINKING", false },
+       { "ENABLE_DYNAMIC_LINKING", false },
 #endif
 
 #if defined (OCTAVE_ENABLE_FLOAT_TRUNCATE)
-    { "ENABLE_FLOAT_TRUNCATE", true },
+       { "ENABLE_FLOAT_TRUNCATE", true },
 #else
-    { "ENABLE_FLOAT_TRUNCATE", false },
+       { "ENABLE_FLOAT_TRUNCATE", false },
 #endif
 
 #if defined (ENABLE_JIT)
-    { "ENABLE_JIT", true },
+       { "ENABLE_JIT", true },
 #else
-    { "ENABLE_JIT", false },
+       { "ENABLE_JIT", false },
 #endif
 
 #if defined (OCTAVE_ENABLE_OPENMP)
-    { "ENABLE_OPENMP", true },
+       { "ENABLE_OPENMP", true },
 #else
-    { "ENABLE_OPENMP", false },
+       { "ENABLE_OPENMP", false },
 #endif
 
-    { "api_version", OCTAVE_API_VERSION },
-    { "archlibdir", subst_octave_home (OCTAVE_ARCHLIBDIR) },
-    { "bindir", subst_octave_home (OCTAVE_BINDIR) },
-    { "canonical_host_type", OCTAVE_CANONICAL_HOST_TYPE },
-    { "datadir", subst_octave_home (OCTAVE_DATADIR) },
-    { "datarootdir", subst_octave_home (OCTAVE_DATAROOTDIR) },
-    { "exec_prefix", subst_octave_home (OCTAVE_EXEC_PREFIX) },
-    { "fcnfiledir", subst_octave_home (OCTAVE_FCNFILEDIR) },
-    { "fftw_version", octave::fftw_version () },
-    { "fftwf_version", octave::fftwf_version () },
-    { "imagedir", subst_octave_home (OCTAVE_IMAGEDIR) },
-    { "includedir", subst_octave_home (OCTAVE_INCLUDEDIR) },
-    { "infodir", subst_octave_home (OCTAVE_INFODIR) },
-    { "infofile", subst_octave_home (OCTAVE_INFOFILE) },
-    { "libdir", subst_octave_home (OCTAVE_LIBDIR) },
-    { "libexecdir", subst_octave_home (OCTAVE_LIBEXECDIR) },
-    // Each library and executable has its own definition of the hg
-    // id.  We check for consistency when Octave starts so we just
-    // store and report one of them here.
-    { "hg_id", liboctinterp_hg_id () },
-    { "localapiarchlibdir", subst_octave_home (OCTAVE_LOCALAPIARCHLIBDIR) },
-    { "localapifcnfiledir", subst_octave_home (OCTAVE_LOCALAPIFCNFILEDIR) },
-    { "localapioctfiledir", subst_octave_home (OCTAVE_LOCALAPIOCTFILEDIR) },
-    { "localarchlibdir", subst_octave_home (OCTAVE_LOCALARCHLIBDIR) },
-    { "localfcnfiledir", subst_octave_home (OCTAVE_LOCALFCNFILEDIR) },
-    { "localoctfiledir", subst_octave_home (OCTAVE_LOCALOCTFILEDIR) },
-    { "localstartupfiledir", subst_octave_home (OCTAVE_LOCALSTARTUPFILEDIR) },
-    { "localverarchlibdir", subst_octave_home (OCTAVE_LOCALVERARCHLIBDIR) },
-    { "localverfcnfiledir", subst_octave_home (OCTAVE_LOCALVERFCNFILEDIR) },
-    { "localveroctfiledir", subst_octave_home (OCTAVE_LOCALVEROCTFILEDIR) },
-    { "man1dir", subst_octave_home (OCTAVE_MAN1DIR) },
-    { "man1ext", OCTAVE_MAN1EXT },
-    { "mandir", subst_octave_home (OCTAVE_MANDIR) },
-    { "octdatadir", subst_octave_home (OCTAVE_OCTDATADIR) },
-    { "octfiledir", subst_octave_home (OCTAVE_OCTFILEDIR) },
-    { "octetcdir", subst_octave_home (OCTAVE_OCTETCDIR) },
-    { "octincludedir", subst_octave_home (OCTAVE_OCTINCLUDEDIR) },
-    { "octlibdir", subst_octave_home (OCTAVE_OCTLIBDIR) },
-    { "octtestsdir", subst_octave_home (OCTAVE_OCTTESTSDIR) },
-    { "prefix", subst_octave_home (OCTAVE_PREFIX) },
-    { "release_date", OCTAVE_RELEASE_DATE },
-    { "startupfiledir", subst_octave_home (OCTAVE_STARTUPFILEDIR) },
-    { "version", OCTAVE_VERSION },
-    { 0, octave_value () }
-  };
-
-  struct build_info_struct
-  {
-    const char *key;
-    const char *val;
-  };
+       { "api_version", OCTAVE_API_VERSION },
+       { "archlibdir", Varch_lib_dir },
+       { "bindir", Vbin_dir },
+       { "canonical_host_type", Vcanonical_host_type },
+       { "datadir", Vdata_dir },
+       { "datarootdir", Vdataroot_dir },
+       { "fcnfiledir", Vfcn_file_dir },
+       { "fftw_version", octave::fftw_version () },
+       { "fftwf_version", octave::fftwf_version () },
+       { "imagedir", Vimage_dir },
+       { "includedir", Vinclude_dir },
+       { "infodir", Vinfo_dir },
+       { "infofile", Vinfo_file },
+       { "libdir", Vlib_dir },
+       { "libexecdir", Vlibexec_dir },
+       // Each library and executable has its own definition of the hg
+       // id.  We check for consistency when Octave starts so we just
+       // store and report one of them here.
+       { "hg_id", liboctinterp_hg_id () },
+       { "localapiarchlibdir", Vlocal_api_arch_lib_dir },
+       { "localapifcnfiledir", Vlocal_api_fcn_file_dir },
+       { "localapioctfiledir", Vlocal_api_oct_file_dir },
+       { "localarchlibdir", Vlocal_arch_lib_dir },
+       { "localfcnfiledir", Vlocal_fcn_file_dir },
+       { "localoctfiledir", Vlocal_oct_file_dir },
+       { "localstartupfiledir", Vlocal_startup_file_dir },
+       { "localverarchlibdir", Vlocal_ver_arch_lib_dir },
+       { "localverfcnfiledir", Vlocal_ver_fcn_file_dir },
+       { "localveroctfiledir", Vlocal_ver_oct_file_dir },
+       { "man1dir", Vman1_dir },
+       { "man1ext", Vman1_ext },
+       { "mandir", Vman_dir },
+       { "octdatadir", Voct_data_dir },
+       { "octfiledir", Voct_file_dir },
+       { "octetcdir", Voct_etc_dir },
+       { "octincludedir", Voct_include_dir },
+       { "octlibdir", Voct_lib_dir },
+       { "octtestsdir", Voct_tests_dir },
+       { "release_date", OCTAVE_RELEASE_DATE },
+       { "startupfiledir", Vstartupfile_dir },
+       { "version", OCTAVE_VERSION }};
 
-  static const build_info_struct build_info[] =
-  {
-    { "AMD_CPPFLAGS", octave::build_env::AMD_CPPFLAGS },
-    { "AMD_LDFLAGS", octave::build_env::AMD_LDFLAGS },
-    { "AMD_LIBS", octave::build_env::AMD_LIBS },
-    { "AR", octave::build_env::AR },
-    { "ARFLAGS", octave::build_env::ARFLAGS },
-    { "ARPACK_CPPFLAGS", octave::build_env::ARPACK_CPPFLAGS },
-    { "ARPACK_LDFLAGS", octave::build_env::ARPACK_LDFLAGS },
-    { "ARPACK_LIBS", octave::build_env::ARPACK_LIBS },
-    { "BLAS_LIBS", octave::build_env::BLAS_LIBS },
-    { "CAMD_CPPFLAGS", octave::build_env::CAMD_CPPFLAGS },
-    { "CAMD_LDFLAGS", octave::build_env::CAMD_LDFLAGS },
-    { "CAMD_LIBS", octave::build_env::CAMD_LIBS },
-    { "CARBON_LIBS", octave::build_env::CARBON_LIBS },
-    { "CC", octave::build_env::CC },
-    { "CCOLAMD_CPPFLAGS", octave::build_env::CCOLAMD_CPPFLAGS },
-    { "CCOLAMD_LDFLAGS", octave::build_env::CCOLAMD_LDFLAGS },
-    { "CCOLAMD_LIBS", octave::build_env::CCOLAMD_LIBS },
-    { "CFLAGS", octave::build_env::CFLAGS },
-    { "CHOLMOD_CPPFLAGS", octave::build_env::CHOLMOD_CPPFLAGS },
-    { "CHOLMOD_LDFLAGS", octave::build_env::CHOLMOD_LDFLAGS },
-    { "CHOLMOD_LIBS", octave::build_env::CHOLMOD_LIBS },
-    { "COLAMD_CPPFLAGS", octave::build_env::COLAMD_CPPFLAGS },
-    { "COLAMD_LDFLAGS", octave::build_env::COLAMD_LDFLAGS },
-    { "COLAMD_LIBS", octave::build_env::COLAMD_LIBS },
-    { "CPICFLAG", octave::build_env::CPICFLAG },
-    { "CPPFLAGS", octave::build_env::CPPFLAGS },
-    { "CURL_CPPFLAGS", octave::build_env::CURL_CPPFLAGS },
-    { "CURL_LDFLAGS", octave::build_env::CURL_LDFLAGS },
-    { "CURL_LIBS", octave::build_env::CURL_LIBS },
-    { "CXSPARSE_CPPFLAGS", octave::build_env::CXSPARSE_CPPFLAGS },
-    { "CXSPARSE_LDFLAGS", octave::build_env::CXSPARSE_LDFLAGS },
-    { "CXSPARSE_LIBS", octave::build_env::CXSPARSE_LIBS },
-    { "CXX", octave::build_env::CXX },
-    { "CXXCPP", octave::build_env::CXXCPP },
-    { "CXXFLAGS", octave::build_env::CXXFLAGS },
-    { "CXXPICFLAG", octave::build_env::CXXPICFLAG },
-    { "DEFS", octave::build_env::DEFS },
-    { "DL_LD", octave::build_env::DL_LD },
-    { "DL_LDFLAGS", octave::build_env::DL_LDFLAGS },
-    { "DL_LIBS", octave::build_env::DL_LIBS },
-    { "GCC_VERSION", octave::build_env::GCC_VERSION },
-    { "GXX_VERSION", octave::build_env::GXX_VERSION },
-    { "EXEEXT", octave::build_env::EXEEXT },
-    { "F77", octave::build_env::F77 },
-    { "F77_FLOAT_STORE_FLAG", octave::build_env::F77_FLOAT_STORE_FLAG },
-    { "F77_INTEGER_8_FLAG", octave::build_env::F77_INTEGER_8_FLAG },
-    { "FFLAGS", octave::build_env::FFLAGS },
-    { "FFTW3_CPPFLAGS", octave::build_env::FFTW3_CPPFLAGS },
-    { "FFTW3_LDFLAGS", octave::build_env::FFTW3_LDFLAGS },
-    { "FFTW3_LIBS", octave::build_env::FFTW3_LIBS },
-    { "FFTW3F_CPPFLAGS", octave::build_env::FFTW3F_CPPFLAGS },
-    { "FFTW3F_LDFLAGS", octave::build_env::FFTW3F_LDFLAGS },
-    { "FFTW3F_LIBS", octave::build_env::FFTW3F_LIBS },
-    { "FLIBS", octave::build_env::FLIBS },
-    { "FLTK_CPPFLAGS", octave::build_env::FLTK_CPPFLAGS },
-    { "FLTK_LDFLAGS", octave::build_env::FLTK_LDFLAGS },
-    { "FLTK_LIBS", octave::build_env::FLTK_LIBS },
-    { "FONTCONFIG_CPPFLAGS", octave::build_env::FONTCONFIG_CPPFLAGS },
-    { "FONTCONFIG_LIBS", octave::build_env::FONTCONFIG_LIBS },
-    { "FPICFLAG", octave::build_env::FPICFLAG },
-    { "FT2_CPPFLAGS", octave::build_env::FT2_CPPFLAGS },
-    { "FT2_LIBS", octave::build_env::FT2_LIBS },
-    { "GLPK_CPPFLAGS", octave::build_env::GLPK_CPPFLAGS },
-    { "GLPK_LDFLAGS", octave::build_env::GLPK_LDFLAGS },
-    { "GLPK_LIBS", octave::build_env::GLPK_LIBS },
-    { "GNUPLOT", octave::build_env::GNUPLOT },
-    { "HDF5_CPPFLAGS", octave::build_env::HDF5_CPPFLAGS },
-    { "HDF5_LDFLAGS", octave::build_env::HDF5_LDFLAGS },
-    { "HDF5_LIBS", octave::build_env::HDF5_LIBS },
-    { "LAPACK_LIBS", octave::build_env::LAPACK_LIBS },
-    { "LDFLAGS", octave::build_env::LDFLAGS },
-    { "LD_CXX", octave::build_env::LD_CXX },
-    { "LD_STATIC_FLAG", octave::build_env::LD_STATIC_FLAG },
-    { "LEX", octave::build_env::LEX },
-    { "LEXLIB", octave::build_env::LEXLIB },
-    { "LFLAGS", octave::build_env::LFLAGS },
-    { "LIBOCTAVE", octave::build_env::LIBOCTAVE },
-    { "LIBOCTINTERP", octave::build_env::LIBOCTINTERP },
-    { "LIBS", octave::build_env::LIBS },
-    { "LLVM_CPPFLAGS", octave::build_env::LLVM_CPPFLAGS },
-    { "LLVM_LDFLAGS", octave::build_env::LLVM_LDFLAGS },
-    { "LLVM_LIBS", octave::build_env::LLVM_LIBS },
-    { "LN_S", octave::build_env::LN_S },
-    { "MAGICK_CPPFLAGS", octave::build_env::MAGICK_CPPFLAGS },
-    { "MAGICK_LDFLAGS", octave::build_env::MAGICK_LDFLAGS },
-    { "MAGICK_LIBS", octave::build_env::MAGICK_LIBS },
-    { "MKOCTFILE_DL_LDFLAGS", octave::build_env::MKOCTFILE_DL_LDFLAGS },
-    { "OCTAVE_LINK_DEPS", octave::build_env::OCTAVE_LINK_DEPS },
-    { "OCTAVE_LINK_OPTS", octave::build_env::OCTAVE_LINK_OPTS },
-    { "OCT_LINK_DEPS", octave::build_env::OCT_LINK_DEPS },
-    { "OCT_LINK_OPTS", octave::build_env::OCT_LINK_OPTS },
-    { "OPENGL_LIBS", octave::build_env::OPENGL_LIBS },
-    { "OSMESA_CPPFLAGS", octave::build_env::OSMESA_CPPFLAGS },
-    { "OSMESA_LDFLAGS", octave::build_env::OSMESA_LDFLAGS },
-    { "OSMESA_LIBS", octave::build_env::OSMESA_LIBS },
-    { "PCRE_CPPFLAGS", octave::build_env::PCRE_CPPFLAGS },
-    { "PCRE_LDFLAGS", octave::build_env::PCRE_LDFLAGS },
-    { "PCRE_LIBS", octave::build_env::PCRE_LIBS },
-    { "PTHREAD_CFLAGS", octave::build_env::PTHREAD_CFLAGS },
-    { "PTHREAD_LIBS", octave::build_env::PTHREAD_LIBS },
-    { "QHULL_CPPFLAGS", octave::build_env::QHULL_CPPFLAGS },
-    { "QHULL_LDFLAGS", octave::build_env::QHULL_LDFLAGS },
-    { "QHULL_LIBS", octave::build_env::QHULL_LIBS },
-    { "QRUPDATE_CPPFLAGS", octave::build_env::QRUPDATE_CPPFLAGS },
-    { "QRUPDATE_LDFLAGS", octave::build_env::QRUPDATE_LDFLAGS },
-    { "QRUPDATE_LIBS", octave::build_env::QRUPDATE_LIBS },
-    { "QT_CPPFLAGS", octave::build_env::QT_CPPFLAGS },
-    { "QT_LDFLAGS", octave::build_env::QT_LDFLAGS },
-    { "QT_LIBS", octave::build_env::QT_LIBS },
-    { "RANLIB", octave::build_env::RANLIB },
-    { "RDYNAMIC_FLAG", octave::build_env::RDYNAMIC_FLAG },
-    { "READLINE_LIBS", octave::build_env::READLINE_LIBS },
-    { "SED", octave::build_env::SED },
-    { "SHARED_LIBS", octave::build_env::SHARED_LIBS },
-    { "SH_LD", octave::build_env::SH_LD },
-    { "SH_LDFLAGS", octave::build_env::SH_LDFLAGS },
-    { "STATIC_LIBS", octave::build_env::STATIC_LIBS },
-    { "SUITESPARSE_CONFIG_LIBS", octave::build_env::SUITESPARSE_CONFIG_LIBS },
-    { "TERM_LIBS", octave::build_env::TERM_LIBS },
-    { "UMFPACK_CPPFLAGS", octave::build_env::UMFPACK_CPPFLAGS },
-    { "UMFPACK_LDFLAGS", octave::build_env::UMFPACK_LDFLAGS },
-    { "UMFPACK_LIBS", octave::build_env::UMFPACK_LIBS },
-    { "WARN_CFLAGS", octave::build_env::WARN_CFLAGS },
-    { "WARN_CXXFLAGS", octave::build_env::WARN_CXXFLAGS },
-    { "X11_INCFLAGS", octave::build_env::X11_INCFLAGS },
-    { "X11_LIBS", octave::build_env::X11_LIBS },
-    { "XTRA_CFLAGS", octave::build_env::XTRA_CFLAGS },
-    { "XTRA_CXXFLAGS", octave::build_env::XTRA_CXXFLAGS },
-    { "YACC", octave::build_env::YACC },
-    { "YFLAGS", octave::build_env::YFLAGS },
-    { "Z_CPPFLAGS", octave::build_env::Z_CPPFLAGS },
-    { "Z_LDFLAGS", octave::build_env::Z_LDFLAGS },
-    { "Z_LIBS", octave::build_env::Z_LIBS },
-    { "config_opts", octave::build_env::config_opts },
-    { 0, 0 },
-  };
+  static std::map<std::string, octave_value> build_env_map
+    = {{ "AMD_CPPFLAGS", octave::build_env::AMD_CPPFLAGS },
+       { "AMD_LDFLAGS", octave::build_env::AMD_LDFLAGS },
+       { "AMD_LIBS", octave::build_env::AMD_LIBS },
+       { "AR", octave::build_env::AR },
+       { "ARFLAGS", octave::build_env::ARFLAGS },
+       { "ARPACK_CPPFLAGS", octave::build_env::ARPACK_CPPFLAGS },
+       { "ARPACK_LDFLAGS", octave::build_env::ARPACK_LDFLAGS },
+       { "ARPACK_LIBS", octave::build_env::ARPACK_LIBS },
+       { "BLAS_LIBS", octave::build_env::BLAS_LIBS },
+       { "CAMD_CPPFLAGS", octave::build_env::CAMD_CPPFLAGS },
+       { "CAMD_LDFLAGS", octave::build_env::CAMD_LDFLAGS },
+       { "CAMD_LIBS", octave::build_env::CAMD_LIBS },
+       { "CARBON_LIBS", octave::build_env::CARBON_LIBS },
+       { "CC", octave::build_env::CC },
+       { "CCOLAMD_CPPFLAGS", octave::build_env::CCOLAMD_CPPFLAGS },
+       { "CCOLAMD_LDFLAGS", octave::build_env::CCOLAMD_LDFLAGS },
+       { "CCOLAMD_LIBS", octave::build_env::CCOLAMD_LIBS },
+       { "CFLAGS", octave::build_env::CFLAGS },
+       { "CHOLMOD_CPPFLAGS", octave::build_env::CHOLMOD_CPPFLAGS },
+       { "CHOLMOD_LDFLAGS", octave::build_env::CHOLMOD_LDFLAGS },
+       { "CHOLMOD_LIBS", octave::build_env::CHOLMOD_LIBS },
+       { "COLAMD_CPPFLAGS", octave::build_env::COLAMD_CPPFLAGS },
+       { "COLAMD_LDFLAGS", octave::build_env::COLAMD_LDFLAGS },
+       { "COLAMD_LIBS", octave::build_env::COLAMD_LIBS },
+       { "CPICFLAG", octave::build_env::CPICFLAG },
+       { "CPPFLAGS", octave::build_env::CPPFLAGS },
+       { "CURL_CPPFLAGS", octave::build_env::CURL_CPPFLAGS },
+       { "CURL_LDFLAGS", octave::build_env::CURL_LDFLAGS },
+       { "CURL_LIBS", octave::build_env::CURL_LIBS },
+       { "CXSPARSE_CPPFLAGS", octave::build_env::CXSPARSE_CPPFLAGS },
+       { "CXSPARSE_LDFLAGS", octave::build_env::CXSPARSE_LDFLAGS },
+       { "CXSPARSE_LIBS", octave::build_env::CXSPARSE_LIBS },
+       { "CXX", octave::build_env::CXX },
+       { "CXXCPP", octave::build_env::CXXCPP },
+       { "CXXFLAGS", octave::build_env::CXXFLAGS },
+       { "CXXPICFLAG", octave::build_env::CXXPICFLAG },
+       { "DEFS", octave::build_env::DEFS },
+       { "DL_LD", octave::build_env::DL_LD },
+       { "DL_LDFLAGS", octave::build_env::DL_LDFLAGS },
+       { "DL_LIBS", octave::build_env::DL_LIBS },
+       { "GCC_VERSION", octave::build_env::GCC_VERSION },
+       { "GXX_VERSION", octave::build_env::GXX_VERSION },
+       { "EXEEXT", octave::build_env::EXEEXT },
+       { "F77", octave::build_env::F77 },
+       { "F77_FLOAT_STORE_FLAG", octave::build_env::F77_FLOAT_STORE_FLAG },
+       { "F77_INTEGER_8_FLAG", octave::build_env::F77_INTEGER_8_FLAG },
+       { "FFLAGS", octave::build_env::FFLAGS },
+       { "FFTW3_CPPFLAGS", octave::build_env::FFTW3_CPPFLAGS },
+       { "FFTW3_LDFLAGS", octave::build_env::FFTW3_LDFLAGS },
+       { "FFTW3_LIBS", octave::build_env::FFTW3_LIBS },
+       { "FFTW3F_CPPFLAGS", octave::build_env::FFTW3F_CPPFLAGS },
+       { "FFTW3F_LDFLAGS", octave::build_env::FFTW3F_LDFLAGS },
+       { "FFTW3F_LIBS", octave::build_env::FFTW3F_LIBS },
+       { "FLIBS", octave::build_env::FLIBS },
+       { "FLTK_CPPFLAGS", octave::build_env::FLTK_CPPFLAGS },
+       { "FLTK_LDFLAGS", octave::build_env::FLTK_LDFLAGS },
+       { "FLTK_LIBS", octave::build_env::FLTK_LIBS },
+       { "FONTCONFIG_CPPFLAGS", octave::build_env::FONTCONFIG_CPPFLAGS },
+       { "FONTCONFIG_LIBS", octave::build_env::FONTCONFIG_LIBS },
+       { "FPICFLAG", octave::build_env::FPICFLAG },
+       { "FT2_CPPFLAGS", octave::build_env::FT2_CPPFLAGS },
+       { "FT2_LIBS", octave::build_env::FT2_LIBS },
+       { "GLPK_CPPFLAGS", octave::build_env::GLPK_CPPFLAGS },
+       { "GLPK_LDFLAGS", octave::build_env::GLPK_LDFLAGS },
+       { "GLPK_LIBS", octave::build_env::GLPK_LIBS },
+       { "GNUPLOT", octave::build_env::GNUPLOT },
+       { "HDF5_CPPFLAGS", octave::build_env::HDF5_CPPFLAGS },
+       { "HDF5_LDFLAGS", octave::build_env::HDF5_LDFLAGS },
+       { "HDF5_LIBS", octave::build_env::HDF5_LIBS },
+       { "LAPACK_LIBS", octave::build_env::LAPACK_LIBS },
+       { "LDFLAGS", octave::build_env::LDFLAGS },
+       { "LD_CXX", octave::build_env::LD_CXX },
+       { "LD_STATIC_FLAG", octave::build_env::LD_STATIC_FLAG },
+       { "LEX", octave::build_env::LEX },
+       { "LEXLIB", octave::build_env::LEXLIB },
+       { "LFLAGS", octave::build_env::LFLAGS },
+       { "LIBOCTAVE", octave::build_env::LIBOCTAVE },
+       { "LIBOCTINTERP", octave::build_env::LIBOCTINTERP },
+       { "LIBS", octave::build_env::LIBS },
+       { "LLVM_CPPFLAGS", octave::build_env::LLVM_CPPFLAGS },
+       { "LLVM_LDFLAGS", octave::build_env::LLVM_LDFLAGS },
+       { "LLVM_LIBS", octave::build_env::LLVM_LIBS },
+       { "LN_S", octave::build_env::LN_S },
+       { "MAGICK_CPPFLAGS", octave::build_env::MAGICK_CPPFLAGS },
+       { "MAGICK_LDFLAGS", octave::build_env::MAGICK_LDFLAGS },
+       { "MAGICK_LIBS", octave::build_env::MAGICK_LIBS },
+       { "MKOCTFILE_DL_LDFLAGS", octave::build_env::MKOCTFILE_DL_LDFLAGS },
+       { "OCTAVE_LINK_DEPS", octave::build_env::OCTAVE_LINK_DEPS },
+       { "OCTAVE_LINK_OPTS", octave::build_env::OCTAVE_LINK_OPTS },
+       { "OCT_LINK_DEPS", octave::build_env::OCT_LINK_DEPS },
+       { "OCT_LINK_OPTS", octave::build_env::OCT_LINK_OPTS },
+       { "OPENGL_LIBS", octave::build_env::OPENGL_LIBS },
+       { "OSMESA_CPPFLAGS", octave::build_env::OSMESA_CPPFLAGS },
+       { "OSMESA_LDFLAGS", octave::build_env::OSMESA_LDFLAGS },
+       { "OSMESA_LIBS", octave::build_env::OSMESA_LIBS },
+       { "PCRE_CPPFLAGS", octave::build_env::PCRE_CPPFLAGS },
+       { "PCRE_LDFLAGS", octave::build_env::PCRE_LDFLAGS },
+       { "PCRE_LIBS", octave::build_env::PCRE_LIBS },
+       { "PTHREAD_CFLAGS", octave::build_env::PTHREAD_CFLAGS },
+       { "PTHREAD_LIBS", octave::build_env::PTHREAD_LIBS },
+       { "QHULL_CPPFLAGS", octave::build_env::QHULL_CPPFLAGS },
+       { "QHULL_LDFLAGS", octave::build_env::QHULL_LDFLAGS },
+       { "QHULL_LIBS", octave::build_env::QHULL_LIBS },
+       { "QRUPDATE_CPPFLAGS", octave::build_env::QRUPDATE_CPPFLAGS },
+       { "QRUPDATE_LDFLAGS", octave::build_env::QRUPDATE_LDFLAGS },
+       { "QRUPDATE_LIBS", octave::build_env::QRUPDATE_LIBS },
+       { "QT_CPPFLAGS", octave::build_env::QT_CPPFLAGS },
+       { "QT_LDFLAGS", octave::build_env::QT_LDFLAGS },
+       { "QT_LIBS", octave::build_env::QT_LIBS },
+       { "RANLIB", octave::build_env::RANLIB },
+       { "RDYNAMIC_FLAG", octave::build_env::RDYNAMIC_FLAG },
+       { "READLINE_LIBS", octave::build_env::READLINE_LIBS },
+       { "SED", octave::build_env::SED },
+       { "SHARED_LIBS", octave::build_env::SHARED_LIBS },
+       { "SH_LD", octave::build_env::SH_LD },
+       { "SH_LDFLAGS", octave::build_env::SH_LDFLAGS },
+       { "STATIC_LIBS", octave::build_env::STATIC_LIBS },
+       { "SUITESPARSE_CONFIG_LIBS", octave::build_env::SUITESPARSE_CONFIG_LIBS },
+       { "TERM_LIBS", octave::build_env::TERM_LIBS },
+       { "UMFPACK_CPPFLAGS", octave::build_env::UMFPACK_CPPFLAGS },
+       { "UMFPACK_LDFLAGS", octave::build_env::UMFPACK_LDFLAGS },
+       { "UMFPACK_LIBS", octave::build_env::UMFPACK_LIBS },
+       { "WARN_CFLAGS", octave::build_env::WARN_CFLAGS },
+       { "WARN_CXXFLAGS", octave::build_env::WARN_CXXFLAGS },
+       { "X11_INCFLAGS", octave::build_env::X11_INCFLAGS },
+       { "X11_LIBS", octave::build_env::X11_LIBS },
+       { "XTRA_CFLAGS", octave::build_env::XTRA_CFLAGS },
+       { "XTRA_CXXFLAGS", octave::build_env::XTRA_CXXFLAGS },
+       { "YACC", octave::build_env::YACC },
+       { "YFLAGS", octave::build_env::YFLAGS },
+       { "Z_CPPFLAGS", octave::build_env::Z_CPPFLAGS },
+       { "Z_LDFLAGS", octave::build_env::Z_LDFLAGS },
+       { "Z_LIBS", octave::build_env::Z_LIBS },
+       { "config_opts", octave::build_env::config_opts }};
 
-  static octave_scalar_map config;
-  static octave_scalar_map build_env;
+  static octave_scalar_map config (conf_info_map);
+  static octave_scalar_map build_env (build_env_map);
   static octave_scalar_map build_features = octave::build_env::features ();
 
   if (! initialized)
     {
-      int i;
-
-      i = 0;
-      while (true)
-        {
-          const build_info_struct& elt = build_info[i++];
-
-          const char *key = elt.key;
-
-          if (key)
-            build_env.assign (key, elt.val);
-          else
-            break;
-        }
-
-      i = 0;
-      while (true)
-        {
-          const conf_info_struct& elt = conf_info[i++];
-
-          const char *key = elt.key;
-
-          if (key)
-            config.assign (key, elt.val);
-          else
-            break;
-        }
-
       bool unix_system = true;
       bool mac_system = false;
       bool windows_system = false;
 
 #if defined (__WIN32__)
       windows_system = true;
 #if ! defined (__CYGWIN__)
       unix_system = false;
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -251,21 +251,21 @@ octave_fcn_handle::is_equal_to (const oc
 
 bool
 octave_fcn_handle::set_fcn (const std::string& octaveroot,
                             const std::string& fpath)
 {
   if (octaveroot.length () != 0
       && fpath.length () >= octaveroot.length ()
       && fpath.substr (0, octaveroot.length ()) == octaveroot
-      && OCTAVE_EXEC_PREFIX != octaveroot)
+      && Voctave_exec_home != octaveroot)
     {
       // First check if just replacing matlabroot is enough
-      std::string str = OCTAVE_EXEC_PREFIX +
-                        fpath.substr (octaveroot.length ());
+      std::string str
+        = Voctave_exec_home + fpath.substr (octaveroot.length ());
       octave::sys::file_stat fs (str);
 
       if (fs.exists ())
         {
           size_t xpos = str.find_last_of (octave::sys::file_ops::dir_sep_chars ());
 
           std::string dir_name = str.substr (0, xpos);
 
@@ -369,17 +369,17 @@ octave_fcn_handle::save_ascii (std::ostr
             }
         }
     }
   else
     {
       octave_function *f = function_value ();
       std::string fnm = (f ? f->fcn_file_name () : "");
 
-      os << "# octaveroot: " << OCTAVE_EXEC_PREFIX << "\n";
+      os << "# octaveroot: " << Voctave_exec_home << "\n";
       if (! fnm.empty ())
         os << "# path: " << fnm << "\n";
       os << nm << "\n";
     }
 
   return true;
 }
 
@@ -555,17 +555,17 @@ octave_fcn_handle::save_binary (std::ost
     }
   else
     {
       std::ostringstream nmbuf;
 
       octave_function *f = function_value ();
       std::string fnm = (f ? f->fcn_file_name () : "");
 
-      nmbuf << nm << "\n" << OCTAVE_EXEC_PREFIX << "\n" << fnm;
+      nmbuf << nm << "\n" << Voctave_exec_home << "\n" << fnm;
 
       std::string buf_str = nmbuf.str ();
       int32_t tmp = buf_str.length ();
       os.write (reinterpret_cast<char *> (&tmp), 4);
       os.write (buf_str.c_str (), buf_str.length ());
     }
 
   return true;
@@ -857,17 +857,17 @@ octave_fcn_handle::save_hdf5 (octave_hdf
                                    "", false, save_as_floats))
                 break;
             }
           H5Gclose (data_hid);
         }
     }
   else
     {
-      std::string octaveroot = OCTAVE_EXEC_PREFIX;
+      std::string octaveroot = Voctave_exec_home;
 
       octave_function *f = function_value ();
       std::string fpath = (f ? f->fcn_file_name () : "");
 
       H5Sclose (space_hid);
       hdims[0] = 1;
       hdims[1] = octaveroot.length ();
       space_hid = H5Screate_simple (0 , hdims, 0);
diff --git a/libinterp/version.cc b/libinterp/version.cc
--- a/libinterp/version.cc
+++ b/libinterp/version.cc
@@ -83,17 +83,17 @@ octave_name_version_copyright_copying_an
   std::string sep = (html ? "\n</p>\n<p>\n" : "\n\n");
 
   return octave_name_version_and_copyright ()
          + br
          + "This is free software; see the source code for copying conditions."
          + br
          + octave_warranty_statement (extra_info)
          + sep
-         + "Octave was configured for \"" OCTAVE_CANONICAL_HOST_TYPE "\".";
+         + "Octave was configured for \"" + Vcanonical_host_type + "\".";
 }
 
 std::string
 octave_name_version_copyright_copying_warranty_and_bugs
   (bool html, const std::string& extra_info)
 {
   std::string sep = (html ? "\n</p>\n<p>\n" : "\n\n");
 
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -55,16 +55,20 @@ along with Octave; see the file COPYING.
 #if ! defined (OCTAVE_BINDIR)
 #  define OCTAVE_BINDIR %OCTAVE_BINDIR%
 #endif
 
 #if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
+#if ! defined (OCTAVE_EXEC_PREFIX)
+#  define OCTAVE_EXEC_PREFIX %OCTAVE_EXEC_PREFIX%
+#endif
+
 #include "display-available.h"
 #include "shared-fcns.h"
 
 #if defined (HAVE_OCTAVE_QT_GUI) && ! defined (OCTAVE_USE_WINDOWS_API)
 
 // Forward signals to the GUI process.
 
 static pid_t gui_pid = 0;
@@ -146,30 +150,30 @@ get_octave_bindir (void)
 {
   // Accept value from the environment literally, but substitute
   // OCTAVE_HOME in the configuration value OCTAVE_BINDIR in case Octave
   // has been relocated to some installation directory other than the
   // one originally configured.
 
   std::string obd = octave_getenv ("OCTAVE_BINDIR");
 
-  return obd.empty () ? subst_octave_home (std::string (OCTAVE_BINDIR)) : obd;
+  return obd.empty () ? prepend_octave_exec_home (std::string (OCTAVE_BINDIR)) : obd;
 }
 
 static std::string
 get_octave_archlibdir (void)
 {
   // Accept value from the environment literally, but substitute
   // OCTAVE_HOME in the configuration value OCTAVE_ARCHLIBDIR in case
   // Octave has been relocated to some installation directory other than
   // the one originally configured.
 
   std::string dir = octave_getenv ("OCTAVE_ARCHLIBDIR");
 
-  return dir.empty () ? subst_octave_home (std::string (OCTAVE_ARCHLIBDIR))
+  return dir.empty () ? prepend_octave_exec_home (std::string (OCTAVE_ARCHLIBDIR))
                       : dir;
 }
 
 static int
 octave_exec (const std::string& file, char **argv)
 {
   int status = octave_execv_wrapper (file.c_str (), argv);
 
@@ -193,16 +197,18 @@ strsave (const char *s)
 int
 main (int argc, char **argv)
 {
   int retval = 0;
 
   bool start_gui = true;
   bool gui_libs = true;
 
+  set_octave_home ();
+
   std::string octave_bindir = get_octave_bindir ();
   std::string octave_archlibdir = get_octave_archlibdir ();
   std::string octave_cli
     = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;
   std::string octave_gui = octave_archlibdir + dir_sep_char + "octave-gui";
 
 #if defined (HAVE_OCTAVE_QT_GUI)
   // The Octave version number is already embedded in the
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -50,16 +50,20 @@ static std::map<std::string, std::string
 #if ! defined (OCTAVE_VERSION)
 #  define OCTAVE_VERSION %OCTAVE_CONF_VERSION%
 #endif
 
 #if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_CONF_PREFIX%
 #endif
 
+#if ! defined (OCTAVE_EXEC_PREFIX)
+#  define OCTAVE_EXEC_PREFIX %OCTAVE_CONF_EXEC_PREFIX%
+#endif
+
 #include "shared-fcns.h"
 
 #if defined (CROSS)
 
 static int
 octave_unlink_wrapper (const char *nm)
 {
   return unlink (nm);
@@ -115,35 +119,36 @@ quote_path (const std::string& s)
     return "\"" + s + "\"";
   else
     return s;
 }
 
 static void
 initialize (void)
 {
-  vars["OCTAVE_HOME"] = get_octave_home ();
+  set_octave_home ();
 
-  vars["OCTAVE_PREFIX"] = OCTAVE_PREFIX;
+  vars["OCTAVE_HOME"] = Voctave_home;
+  vars["OCTAVE_EXEC_HOME"] = Voctave_exec_home;
 
   vars["SED"] = get_variable ("SED", %OCTAVE_CONF_SED%);
 
   vars["OCTINCLUDEDIR"]
     = get_variable ("OCTINCLUDEDIR",
-                    subst_octave_home (%OCTAVE_CONF_OCTINCLUDEDIR%));
+                    prepend_octave_home (%OCTAVE_CONF_OCTINCLUDEDIR%));
 
   vars["INCLUDEDIR"]
     = get_variable ("INCLUDEDIR",
-                    subst_octave_home (%OCTAVE_CONF_INCLUDEDIR%));
+                    prepend_octave_home (%OCTAVE_CONF_INCLUDEDIR%));
 
   vars["LIBDIR"]
-    = get_variable ("LIBDIR", subst_octave_home (%OCTAVE_CONF_LIBDIR%));
+    = get_variable ("LIBDIR", prepend_octave_exec_home (%OCTAVE_CONF_LIBDIR%));
 
   vars["OCTLIBDIR"]
-    = get_variable ("OCTLIBDIR", subst_octave_home (%OCTAVE_CONF_OCTLIBDIR%));
+    = get_variable ("OCTLIBDIR", prepend_octave_exec_home (%OCTAVE_CONF_OCTLIBDIR%));
 
 #if defined (OCTAVE_USE_WINDOWS_API)
   std::string DEFAULT_INCFLAGS
     = "-I" + quote_path (vars["OCTINCLUDEDIR"] + "\\..")
       + " -I" + quote_path (vars["OCTINCLUDEDIR"]);
 #else
   std::string DEFAULT_INCFLAGS
     = "-I" + quote_path (vars["OCTINCLUDEDIR"] + "/..")
@@ -322,21 +327,21 @@ static std::string help_msg =
 "                            ALL_LDFLAGS                 LD_CXX\n"
 "                            AR                          LDFLAGS\n"
 "                            BLAS_LIBS                   LD_STATIC_FLAG\n"
 "                            CC                          LFLAGS\n"
 "                            CFLAGS                      LIBDIR\n"
 "                            CPICFLAG                    LIBOCTAVE\n"
 "                            CPPFLAGS                    LIBOCTINTERP\n"
 "                            CXX                         LIBS\n"
-"                            CXXFLAGS                    OCTAVE_HOME\n"
-"                            CXXPICFLAG                  OCTAVE_LIBS\n"
-"                            DEPEND_EXTRA_SED_PATTERN    OCTAVE_LINK_DEPS\n"
-"                            DEPEND_FLAGS                OCTAVE_LINK_OPTS\n"
-"                            DL_LD                       OCTAVE_PREFIX\n"
+"                            CXXFLAGS                    OCTAVE_EXEC_HOME\n"
+"                            CXXPICFLAG                  OCTAVE_HOME\n"
+"                            DEPEND_EXTRA_SED_PATTERN    OCTAVE_LIBS\n"
+"                            DEPEND_FLAGS                OCTAVE_LINK_DEPS\n"
+"                            DL_LD                       OCTAVE_LINK_OPTS\n"
 "                            DL_LDFLAGS                  OCTINCLUDEDIR\n"
 "                            F77                         OCTLIBDIR\n"
 "                            F77_INTEGER8_FLAG           OCT_LINK_DEPS\n"
 "                            FFLAGS                      OCT_LINK_OPTS\n"
 "                            FFTW3F_LDFLAGS              RANLIB\n"
 "                            FFTW3F_LIBS                 RDYNAMIC_FLAG\n"
 "                            FFTW3_LDFLAGS               READLINE_LIBS\n"
 "                            FFTW3_LIBS                  SED\n"
diff --git a/src/octave-config.in.cc b/src/octave-config.in.cc
--- a/src/octave-config.in.cc
+++ b/src/octave-config.in.cc
@@ -30,16 +30,20 @@ along with Octave; see the file COPYING.
 #include <iostream>
 #include <algorithm>
 #include <cstdlib>
 
 #if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
+#if ! defined (OCTAVE_EXEC_PREFIX)
+#  define OCTAVE_EXEC_PREFIX %OCTAVE_EXEC_PREFIX%
+#endif
+
 #include "shared-fcns.h"
 
 static std::map<std::string,std::string> vars;
 
 static std::string usage_msg = "usage: octave-config [options]";
 
 static std::string help_msg =
 "\n"
@@ -61,71 +65,72 @@ static std::string help_msg =
 "                          BINDIR                 LOCALOCTFILEDIR\n"
 "                          CANONICAL_HOST_TYPE    LOCALSTARTUPFILEDIR\n"
 "                          DATADIR                LOCALVERARCHLIBDIR\n"
 "                          DATAROOTDIR            LOCALVERFCNFILEDIR\n"
 "                          DEFAULT_PAGER          LOCALVEROCTFILEDIR\n"
 "                          EXEC_PREFIX            MAN1DIR\n"
 "                          EXEEXT                 MAN1EXT\n"
 "                          FCNFILEDIR             MANDIR\n"
-"                          IMAGEDIR               OCTDATADIR\n"
-"                          INCLUDEDIR             OCTFILEDIR\n"
-"                          INFODIR                OCTINCLUDEDIR\n"
-"                          INFOFILE               OCTLIBDIR\n"
-"                          LIBDIR                 PREFIX\n"
-"                          LIBEXECDIR             STARTUPFILEDIR\n"
-"                          LOCALAPIARCHLIBDIR     VERSION\n"
-"                          LOCALAPIFCNFILEDIR\n"
+"                          IMAGEDIR               OCTAVE_EXEC_HOME\n"
+"                          INCLUDEDIR             OCTAVE_HOME\n"
+"                          INFODIR                OCTDATADIR\n"
+"                          INFOFILE               OCTFILEDIR\n"
+"                          LIBDIR                 OCTINCLUDEDIR\n"
+"                          LIBEXECDIR             OCTLIBDIR\n"
+"                          LOCALAPIARCHLIBDIR     STARTUPFILEDIR\n"
+"                          LOCALAPIFCNFILEDIR     VERSION\n"
 "                          LOCALAPIOCTFILEDIR\n"
 "\n"
 "  -v, --version         Print the Octave version number.\n"
 "\n";
 
 static void
 initialize (void)
 {
-  vars["OCTAVE_HOME"] = get_octave_home ();
-  vars["PREFIX"] = OCTAVE_PREFIX;
+  set_octave_home ();
+
+  vars["OCTAVE_HOME"] = Voctave_home;
+  vars["OCTAVE_EXEC_HOME"] = Voctave_exec_home;
 
   vars["API_VERSION"] = %OCTAVE_API_VERSION%;
   vars["CANONICAL_HOST_TYPE"] = %OCTAVE_CANONICAL_HOST_TYPE%;
   vars["DEFAULT_PAGER"] = %OCTAVE_DEFAULT_PAGER%;
+  vars["EXEEXT"] = %OCTAVE_EXEEXT%;
   vars["MAN1EXT"] = %OCTAVE_MAN1EXT%;
   vars["VERSION"] = %OCTAVE_VERSION%;
 
-  vars["ARCHLIBDIR"] = subst_octave_home (%OCTAVE_ARCHLIBDIR%);
-  vars["BINDIR"] = subst_octave_home (%OCTAVE_BINDIR%);
-  vars["DATADIR"] = subst_octave_home (%OCTAVE_DATADIR%);
-  vars["DATAROOTDIR"] = subst_octave_home (%OCTAVE_DATAROOTDIR%);
-  vars["EXEC_PREFIX"] = subst_octave_home (%OCTAVE_EXEC_PREFIX%);
-  vars["EXEEXT"] = subst_octave_home (%OCTAVE_EXEEXT%);
-  vars["FCNFILEDIR"] = subst_octave_home (%OCTAVE_FCNFILEDIR%);
-  vars["IMAGEDIR"] = subst_octave_home (%OCTAVE_IMAGEDIR%);
-  vars["INCLUDEDIR"] = subst_octave_home (%OCTAVE_INCLUDEDIR%);
-  vars["INFODIR"] = subst_octave_home (%OCTAVE_INFODIR%);
-  vars["INFOFILE"] = subst_octave_home (%OCTAVE_INFOFILE%);
-  vars["LIBDIR"] = subst_octave_home (%OCTAVE_LIBDIR%);
-  vars["LIBEXECDIR"] = subst_octave_home (%OCTAVE_LIBEXECDIR%);
-  vars["LOCALAPIARCHLIBDIR"] = subst_octave_home (%OCTAVE_LOCALAPIARCHLIBDIR%);
-  vars["LOCALAPIFCNFILEDIR"] = subst_octave_home (%OCTAVE_LOCALAPIFCNFILEDIR%);
-  vars["LOCALAPIOCTFILEDIR"] = subst_octave_home (%OCTAVE_LOCALAPIOCTFILEDIR%);
-  vars["LOCALARCHLIBDIR"] = subst_octave_home (%OCTAVE_LOCALARCHLIBDIR%);
-  vars["LOCALFCNFILEDIR"] = subst_octave_home (%OCTAVE_LOCALFCNFILEDIR%);
-  vars["LOCALOCTFILEDIR"] = subst_octave_home (%OCTAVE_LOCALOCTFILEDIR%);
-  vars["LOCALSTARTUPFILEDIR"] = subst_octave_home (%OCTAVE_LOCALSTARTUPFILEDIR%);
-  vars["LOCALVERARCHLIBDIR"] = subst_octave_home (%OCTAVE_LOCALVERARCHLIBDIR%);
-  vars["LOCALVERFCNFILEDIR"] = subst_octave_home (%OCTAVE_LOCALVERFCNFILEDIR%);
-  vars["LOCALVEROCTFILEDIR"] = subst_octave_home (%OCTAVE_LOCALVEROCTFILEDIR%);
-  vars["MAN1DIR"] = subst_octave_home (%OCTAVE_MAN1DIR%);
-  vars["MANDIR"] = subst_octave_home (%OCTAVE_MANDIR%);
-  vars["OCTDATADIR"] = subst_octave_home (%OCTAVE_OCTDATADIR%);
-  vars["OCTFILEDIR"] = subst_octave_home (%OCTAVE_OCTFILEDIR%);
-  vars["OCTINCLUDEDIR"] = subst_octave_home (%OCTAVE_OCTINCLUDEDIR%);
-  vars["OCTLIBDIR"] = subst_octave_home (%OCTAVE_OCTLIBDIR%);
-  vars["STARTUPFILEDIR"] = subst_octave_home (%OCTAVE_STARTUPFILEDIR%);
+  vars["ARCHLIBDIR"] = prepend_octave_exec_home (%OCTAVE_ARCHLIBDIR%);
+  vars["BINDIR"] = prepend_octave_exec_home (%OCTAVE_BINDIR%);
+  vars["DATADIR"] = prepend_octave_home (%OCTAVE_DATADIR%);
+  vars["DATAROOTDIR"] = prepend_octave_home (%OCTAVE_DATAROOTDIR%);
+  vars["FCNFILEDIR"] = prepend_octave_home (%OCTAVE_FCNFILEDIR%);
+  vars["IMAGEDIR"] = prepend_octave_home (%OCTAVE_IMAGEDIR%);
+  vars["INCLUDEDIR"] = prepend_octave_home (%OCTAVE_INCLUDEDIR%);
+  vars["INFODIR"] = prepend_octave_home (%OCTAVE_INFODIR%);
+  vars["INFOFILE"] = prepend_octave_home (%OCTAVE_INFOFILE%);
+  vars["LIBDIR"] = prepend_octave_exec_home (%OCTAVE_LIBDIR%);
+  vars["LIBEXECDIR"] = prepend_octave_exec_home (%OCTAVE_LIBEXECDIR%);
+  vars["LOCALAPIARCHLIBDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALAPIARCHLIBDIR%);
+  vars["LOCALAPIFCNFILEDIR"] = prepend_octave_home (%OCTAVE_LOCALAPIFCNFILEDIR%);
+  vars["LOCALAPIOCTFILEDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALAPIOCTFILEDIR%);
+  vars["LOCALARCHLIBDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALARCHLIBDIR%);
+  vars["LOCALFCNFILEDIR"] = prepend_octave_home (%OCTAVE_LOCALFCNFILEDIR%);
+  vars["LOCALOCTFILEDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALOCTFILEDIR%);
+  vars["LOCALSTARTUPFILEDIR"] = prepend_octave_home (%OCTAVE_LOCALSTARTUPFILEDIR%);
+  vars["LOCALVERARCHLIBDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALVERARCHLIBDIR%);
+  vars["LOCALVERFCNFILEDIR"] = prepend_octave_home (%OCTAVE_LOCALVERFCNFILEDIR%);
+  vars["LOCALVEROCTFILEDIR"] = prepend_octave_exec_home (%OCTAVE_LOCALVEROCTFILEDIR%);
+  vars["MAN1DIR"] = prepend_octave_home (%OCTAVE_MAN1DIR%);
+  vars["MANDIR"] = prepend_octave_home (%OCTAVE_MANDIR%);
+  vars["OCTDATADIR"] = prepend_octave_home (%OCTAVE_OCTDATADIR%);
+  vars["OCTFILEDIR"] = prepend_octave_exec_home (%OCTAVE_OCTFILEDIR%);
+  vars["OCTINCLUDEDIR"] = prepend_octave_home (%OCTAVE_OCTINCLUDEDIR%);
+  vars["OCTLIBDIR"] = prepend_octave_exec_home (%OCTAVE_OCTLIBDIR%);
+  vars["STARTUPFILEDIR"] = prepend_octave_home (%OCTAVE_STARTUPFILEDIR%);
 }
 
 int
 main (int argc, char **argv)
 {
   initialize ();
 
   if (argc == 1)
diff --git a/src/shared-fcns.h b/src/shared-fcns.h
--- a/src/shared-fcns.h
+++ b/src/shared-fcns.h
@@ -15,19 +15,25 @@ MERCHANTABILITY or FITNESS FOR A PARTICU
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
+// These functions are also defined in liboctave or libinterp.  They
+// are repeated here to avoid having to link the main Octave program
+// with the Octave libraries.
+
 #if ! defined (octave_shared_fcns_h)
 #define octave_shared_fcns_h 1
 
+#include <cctype>
+
 #if defined (OCTAVE_USE_WINDOWS_API)
 
 #include <windows.h>
 #include <tlhelp32.h>
 
 #if defined (_MSC_VER)
 #  define popen _popen
 #  define pclose _pclose
@@ -70,55 +76,110 @@ w32_get_octave_home (void)
 
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM)           \
      && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
 static const char dir_sep_char = '\\';
 #else
 static const char dir_sep_char = '/';
 #endif
 
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM)
+static std::string dir_sep_chars = "/\\";
+#else
+static std::string dir_sep_chars = "/";
+#endif
+
 static std::string
 octave_getenv (const std::string& name)
 {
   char *value = ::getenv (name.c_str ());
 
   return value ? value : "";
 }
 
-static std::string
-get_octave_home (void)
+static std::string Voctave_home;
+static std::string Voctave_exec_home;
+
+static void
+set_octave_home (void)
 {
+  std::string op = OCTAVE_PREFIX;
+  std::string oep = OCTAVE_EXEC_PREFIX;
+
   std::string oh = octave_getenv ("OCTAVE_HOME");
+  std::string oeh = octave_getenv ("OCTAVE_EXEC_HOME");
 
 #if defined (OCTAVE_USE_WINDOWS_API)
   if (oh.empty ())
     oh = w32_get_octave_home ();
 #endif
 
-  return oh.empty () ? std::string (OCTAVE_PREFIX) : oh;
+  // If OCTAVE_HOME is set in the enviornment, use that.  Otherwise,
+  // default to ${prefix} from configure.
+
+  Voctave_home = (oh.empty () ? op : oh);
+
+  // If OCTAVE_EXEC_HOME is set in the environment, use that.
+  // Otherwise, if ${prefix} and ${exec_prefix} from configure are set
+  // to the same value, use OCTAVE_HOME from the environment if it is set.
+  // Othewise, default to ${exec_prefix} from configure.
+
+  if (! oeh.empty ())
+    Voctave_exec_home = oeh;
+  else if (op == oep && ! oh.empty ())
+    Voctave_exec_home = oh;
+  else
+    Voctave_exec_home = oep;
+}
+
+static bool is_dir_sep (char c)
+{
+  return dir_sep_chars.find (c) != std::string::npos;
+}
+
+static bool
+absolute_pathname (const std::string& s)
+{
+  size_t len = s.length ();
+
+  if (len == 0)
+    return false;
+
+  if (is_dir_sep (s[0]))
+    return true;
+
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM)
+  if ((len == 2 && isalpha (s[0]) && s[1] == ':')
+      || (len > 2 && isalpha (s[0]) && s[1] == ':'
+          && is_dir_sep (s[2])))
+    return true;
+#endif
+
+  return false;
 }
 
 static std::string
-subst_octave_home (const std::string& s)
+prepend_home_dir (const std::string& hd, const std::string& s)
 {
-  std::string retval;
-
-  std::string octave_home = get_octave_home ();
-
-  std::string prefix = OCTAVE_PREFIX;
+  std::string retval = s;
 
-  retval = s;
-
-  if (octave_home != prefix)
-    {
-      size_t len = prefix.length ();
-
-      if (s.substr (0, len) == prefix)
-        retval.replace (0, len, octave_home);
-    }
+  if (! absolute_pathname (retval))
+    retval = hd + dir_sep_char + s;
 
   if (dir_sep_char != '/')
     std::replace (retval.begin (), retval.end (), '/', dir_sep_char);
 
   return retval;
 }
 
+static std::string
+prepend_octave_home (const std::string& s)
+{
+  return prepend_home_dir (Voctave_home, s);
+}
+
+static std::string
+prepend_octave_exec_home (const std::string& s)
+{
+  return prepend_home_dir (Voctave_exec_home, s);
+}
+
 #endif
