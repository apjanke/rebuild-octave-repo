# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1271747006 -7200
#      Tue Apr 20 09:03:26 2010 +0200
# Node ID 74cb77f0a163f6d294b2a09069954b67ec25dd35
# Parent  3f973f6c841c44d9584b45dba8d6576b8477f580
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-04-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Update.
+
 2010-04-16  David Bateman  <dbateman@free.fr>
 
 	* PROJECTS: Update for new sparse functionality.
 
 2010-04-14  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* NEWS: Update.
 
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -234,16 +234,36 @@ Summary of important user-visible change
 
  ** The integer math & conversion warnings (Octave:int-convert-nan,
     Octave:int-convert-non-int-val, Octave:int-convert-overflow,
     Octave:int-math-overflow) have been removed. 
 
  ** rem and mod are now built-in functions.  They also handle integer
     types efficiently using integer arithmetic.
 
+ ** Sparse indexing and indexed assignment has been mostly rewritten.
+    Since Octave uses compressed column storage for sparse matrices,
+    major attention is devoted to operations manipulating whole columns.
+    Such operations are now significantly faster, as well as some other
+    important cases.
+
+    Further, it is now possible to pre-allocate a sparse matrix and
+    subsequently fill it by assignments, provided they meet certain
+    conditions.  For more information, consult the `spalloc' function,
+    which is no longer a mere dummy.  Consequently, nzmax and nnz are no
+    longer always equal in Octave. Octave may also produce a matrix with
+    nnz < nzmax as a result of other operations, so you should
+    consistently use nnz unless you really want to use nzmax 
+    (i.e. the space allocated for nonzero elements).
+
+    Sparse concatenation is also affected, and concatenating sparse 
+    matrices, especially larger collections, is now significantly more 
+    efficient. This applies to both the [] operator and the 
+    cat/vertcat/horzcat functions.
+
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
     have been added to these group objects such that
