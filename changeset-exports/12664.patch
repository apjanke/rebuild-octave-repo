# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1305091884 25200
#      Tue May 10 22:31:24 2011 -0700
# Node ID 48b9e8344a03c01a775f1e80e6f98a99c0b60d7d
# Parent  0e3d7ad937fe1537b7cac14d665e46480187a89b
# Parent  2c54fde0f39737ead891b3659f04339e7b4e5d33
Periodic merge of stable to default.

diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -331,18 +331,18 @@ EOF
     ;;
     -link-stand-alone | --link-stand-alone)
       link_stand_alone=true
     ;;
     -mex | --mex)
       incflags="$incflags -I."
       output_ext=".mex"
     ;;
-    -W*)
-      pass_on_options="$pass_on_options $1"
+    -W,*)
+      pass_on_options="$pass_on_options ${1:3}"
     ;;
     *)
       echo "mkoctfile: unrecognized argument $1" 1>&2
       exit 1
     ;;
   esac
   if [ -n "$file" ]; then
     if [ -z "$octfile" ]; then
diff --git a/scripts/miscellaneous/mkoctfile.m b/scripts/miscellaneous/mkoctfile.m
--- a/scripts/miscellaneous/mkoctfile.m
+++ b/scripts/miscellaneous/mkoctfile.m
@@ -46,22 +46,23 @@
 ## @item -M
 ## @itemx --depend
 ## Generate dependency files (.d) for C and C++ source files.
 ##
 ## @item -R DIR
 ## Add the run-time path to the link command.
 ##
 ## @item -Wl,@dots{}
-## Pass flags though the linker like "-Wl,-rpath=@dots{}".
+## Pass flags through the linker e.g. "-Wl,-rpath=@dots{}".
 ## The quotes are needed since commas are interpreted as command
 ## separators.
 ##
-## @item -W@dots{}
-## Pass flags though the compiler like "-Wa,OPTION".
+## @item -W,@dots{}
+## Pass flags through the compiler, e.g. "-W,-O2". The quotes are needed
+## since commas are interpreted as command separators.
 ##
 ## @item -c
 ## Compile but do not link.
 ##
 ## @item -g
 ## Enable debugging options for compilers.
 ##
 ## @item -o FILE
diff --git a/scripts/specfun/betaln.m b/scripts/specfun/betaln.m
--- a/scripts/specfun/betaln.m
+++ b/scripts/specfun/betaln.m
@@ -16,37 +16,42 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Mapping Function} {} betaln (@var{a}, @var{b})
 ## Return the natural logarithm of the Beta function,
 ## @tex
 ## $$
-##  B (a, b) = \log {\Gamma (a) \Gamma (b) \over \Gamma (a + b)}.
+##  {\rm betaln} (a, b) = \ln (B (a,b)) \equiv \ln ({\Gamma (a) \Gamma (b) \over \Gamma (a + b)}).
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
-## betaln (a, b) = gammaln (a) + gammaln (b) - gammaln (a + b)
+## betaln (a, b) = log (beta (a, b))
 ## @end example
 ##
 ## @end ifnottex
+## calculated in a way to reduce the occurrence of underflow.
 ## @seealso{beta, betainc, gammaln}
 ## @end deftypefn
 
 ## Author:   Nicol N. Schraudolph <nic@idsia.ch>
 ## Created:  06 Aug 1998
 ## Keywords: log beta special function
 
 function retval = betaln (a, b)
+
   if (nargin != 2)
     print_usage ();
   endif
 
   retval = gammaln (a) + gammaln (b) - gammaln (a + b);
+
 endfunction
 
-%!assert (betaln(3,4),log(beta(3,4)),eps)
+
+%!assert (betaln (3,4), log (beta(3,4)),eps);
 
-%!error (betaln(1.))
-%!error (betaln(1.,1.,1.))
+%% Test input validation
+%!error (betaln (1))
+%!error (betaln (1,2,3))
diff --git a/scripts/statistics/distributions/gampdf.m b/scripts/statistics/distributions/gampdf.m
--- a/scripts/statistics/distributions/gampdf.m
+++ b/scripts/statistics/distributions/gampdf.m
@@ -43,28 +43,28 @@ function pdf = gampdf (x, a, b)
   sz = size(x);
   pdf = zeros (sz);
 
   k = find (!(a > 0) | !(b > 0) | isnan (x));
   if (any (k))
     pdf (k) = NaN;
   endif
 
-  k = find ((x > 0) & (a > 0) & (a <= 1) & (b > 0));
+  k = find ((x >= 0) & (a > 0) & (a <= 1) & (b > 0));
   if (any (k))
     if (isscalar(a) && isscalar(b))
       pdf(k) = (x(k) .^ (a - 1)) ...
                 .* exp(- x(k) ./ b) ./ gamma (a) ./ (b .^ a);
     else
       pdf(k) = (x(k) .^ (a(k) - 1)) ...
                 .* exp(- x(k) ./ b(k)) ./ gamma (a(k)) ./ (b(k) .^ a(k));
     endif
   endif
 
-  k = find ((x > 0) & (a > 1) & (b > 0));
+  k = find ((x >= 0) & (a > 1) & (b > 0));
   if (any (k))
     if (isscalar(a) && isscalar(b))
       pdf(k) = exp (- a .* log (b) + (a-1) .* log (x(k))
                     - x(k) ./ b - gammaln (a));
     else
       pdf(k) = exp (- a(k) .* log (b(k)) + (a(k)-1) .* log (x(k))
                     - x(k) ./ b(k) - gammaln (a(k)));
     endif
diff --git a/src/DLD-FUNCTIONS/betainc.cc b/src/DLD-FUNCTIONS/betainc.cc
--- a/src/DLD-FUNCTIONS/betainc.cc
+++ b/src/DLD-FUNCTIONS/betainc.cc
@@ -30,32 +30,33 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (betainc, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} betainc (@var{x}, @var{a}, @var{b})\n\
-Return the incomplete Beta function,\n\
+Return the regularized incomplete Beta function,\n\
 @tex\n\
 $$\n\
- \\beta (x, a, b) = B (a, b)^{-1} \\int_0^x t^{(a-z)} (1-t)^{(b-1)} dt.\n\
+ I (x, a, b) = {1 \\over {B (a, b)}} \\int_0^x t^{(a-z)} (1-t)^{(b-1)} dt.\n\
 $$\n\
 @end tex\n\
 @ifnottex\n\
 @c Set example in small font to prevent overfull line\n\
 \n\
 @smallexample\n\
 @group\n\
-                                      x\n\
-                                     /\n\
-betainc (x, a, b) = beta (a, b)^(-1) | t^(a-1) (1-t)^(b-1) dt.\n\
-                                     /\n\
-                                  t=0\n\
+@c spacing appears odd here, but is correct after Makeinfo\n\
+                                     x\n\
+                          1         /\n\
+betainc (x, a, b) = -----------    | t^(a-1) (1-t)^(b-1) dt.\n\
+                     beta (a, b)    /\n\
+                                 t=0\n\
 @end group\n\
 @end smallexample\n\
 \n\
 @end ifnottex\n\
 \n\
 If x has more than one component, both @var{a} and @var{b} must be\n\
 scalars.  If @var{x} is a scalar, @var{a} and @var{b} must be of\n\
 compatible dimensions.\n\
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1450,16 +1450,18 @@ If save is invoked using the functional 
 save (\"-option1\", @dots{}, \"file\", \"v1\", @dots{})\n\
 @end example\n\
 \n\
 @noindent\n\
 then the @var{options}, @var{file}, and variable name arguments\n\
 (@var{v1}, @dots{}) must be specified as character strings.\n\
 \n\
 @table @code\n\
+@item -append\n\
+Append to the destination instead of overwriting.\n\
 @item -ascii\n\
 Save a single matrix in a text file without header or any other information.\n\
 \n\
 @item -binary\n\
 Save the data in Octave's binary data format.\n\
 \n\
 @item -float-binary\n\
 Save the data in Octave's binary data format but only using single\n\
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -545,21 +545,22 @@ Compute the error function,\n\
 $$\n\
  {\\rm erf} (z) = {2 \\over \\sqrt{\\pi}}\\int_0^z e^{-t^2} dt\n\
 $$\n\
 @end tex\n\
 @ifnottex\n\
 \n\
 @example\n\
 @group\n\
-                         z\n\
-                        /\n\
+@c spacing appears odd here, but is correct after Makeinfo\n\
+                          z\n\
+                         /\n\
 erf (z) = (2/sqrt (pi)) | e^(-t^2) dt\n\
-                        /\n\
-                     t=0\n\
+                         /\n\
+                      t=0\n\
 @end group\n\
 @end example\n\
 \n\
 @end ifnottex\n\
 @seealso{erfc, erfcx, erfinv}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -602,17 +603,17 @@ erf (z) = (2/sqrt (pi)) | e^(-t^2) dt\n\
 */
 
 DEFUN (erfinv, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfinv (@var{x})\n\
 Compute the inverse error function, i.e., @var{y} such that\n\
 \n\
 @example\n\
-  erf(@var{y}) == @var{x}\n\
+  erf (@var{y}) == @var{x}\n\
 @end example\n\
 @seealso{erf, erfc, erfcx}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).erfinv ();
   else
@@ -639,17 +640,17 @@ Compute the inverse error function, i.e.
 DEFUN (erfc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfc (@var{z})\n\
 Compute the complementary error function,\n\
 @tex\n\
 $1 - {\\rm erf} (z)$.\n\
 @end tex\n\
 @ifnottex\n\
-@code{1 - erf (@var{z})}.\n\
+@w{@code{1 - erf (@var{z})}}.\n\
 @end ifnottex\n\
 @seealso{erfcx, erf, erfinv}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).erfc ();
   else
@@ -666,20 +667,26 @@ Compute the complementary error function
 
 */
 
 DEFUN (erfcx, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfcx (@var{z})\n\
 Compute the scaled complementary error function,\n\
 @tex\n\
-$z^2 (1 - {\\rm erf} (z))$.\n\
+$$\n\
+ e^{z^2} {\\rm erfc} (z) \\equiv e^{z^2} (1 - {\\rm erf} (z))\n\
+$$\n\
 @end tex\n\
 @ifnottex\n\
-@code{z^2*(1 - erf (@var{z}))}.\n\
+\n\
+@example\n\
+exp (z^2) * erfc (x)\n\
+@end example\n\
+\n\
 @end ifnottex\n\
 @seealso{erfc, erf, erfinv}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).erfcx ();
   else
@@ -874,17 +881,18 @@ Compute the Gamma function,\n\
 $$\n\
  \\Gamma (z) = \\int_0^\\infty t^{z-1} e^{-t} dt.\n\
 $$\n\
 @end tex\n\
 @ifnottex\n\
 \n\
 @example\n\
 @group\n\
-             infinity\n\
+@c spacing appears odd here, but is correct after Makeinfo\n\
+              infinity\n\
              /\n\
 gamma (z) = | t^(z-1) exp (-t) dt.\n\
              /\n\
           t=0\n\
 @end group\n\
 @end example\n\
 \n\
 @end ifnottex\n\
