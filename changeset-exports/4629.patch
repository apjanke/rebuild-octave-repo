# HG changeset patch
# User jwe
# Date 1069101793 0
#      Mon Nov 17 20:43:13 2003 +0000
# Node ID ed92d574b55baae61fa576927168c1e1faa86e71
# Parent  c0121a3b9cbe47b6e72256bd569bc5054540deba
[project @ 2003-11-17 20:43:13 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,12 +1,19 @@
+2003-11-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* miscellaneous/path.m: Fix thinko in previous change.
+
 2003-11-14  Gabriele Pannocchia  <g.pannocchia@ing.unipi.it>
 
-	* control/base/dare.m: 
-	* control/base/dlqr.m: 
+	* control/base/dare.m: Check positive (semi)definiteness and
+	dimensions of r (and q). 
+	* control/base/dlqr.m: Check stabilizability of (A,B),
+	detectability of (A,Q), and whether (A,Q) has non minimal modes
+	near unit circle.
 
 	* control/system/is_detectable.m: Use Hautus Lemma.
 	Correct the behavior for discrete-time systems.
 	* control/system/is_stabilizable.m: Likewise.
 
 	* linear-algebra/krylov.m: Return H = [] in Vnrm == 0 case.
 
 	* linear-algebra/krylovb.m: Fix typo in usage message.
diff --git a/scripts/miscellaneous/path.m b/scripts/miscellaneous/path.m
--- a/scripts/miscellaneous/path.m
+++ b/scripts/miscellaneous/path.m
@@ -35,18 +35,19 @@
 ## @end deftypefn
 
 ## Author: jwe
 
 function p = path (varargin)
 
   if (nargin == 0)
     if (nargout == 0)
-      puts ("\nLOADPATH contains the following directories:\n\n  %s\n\n",
-	    strrep (DEFAULT_LOADPATH, ":", "\n  ");
+      puts ("\nLOADPATH contains the following directories:\n\n  ");
+      puts (strrep (DEFAULT_LOADPATH, ":", "\n  "));
+      puts ("\n\n");
     else
       p = LOADPATH;
     endif
   else
     p = varargin{1};
     for i = 2:nargin
       p = sprintf ("%s:%s", p, varargin{i});
     endfor
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2003-11-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* DLD-FUNCTIONS/qz.cc (qz): Use x.data()+offset instead of &a(i,j).
+	First and third args for dlag2 are const.
+
 	* DLD-FUNCTIONS/sort.cc (Fsort): Use const qualifier as appropriate.
 
 	* DLD-FUNCTIONS/balance.cc (balance): Use data() instead of
 	fortran_vec where appropriate in call to dggbak.
 
 	* DLD-FUNCTIONS/dasrt.cc (dasrt_user_j): Simplify inserting x and
 	xdot in arg vector.
 	(dasrt_user_f): Likewise.
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -102,17 +102,17 @@ extern "C"
 			     const int& LDQ, double* Z,
 			     const int& LDZ, double* WORK,
 			     const int& LWORK, int& INFO
 			     F77_CHAR_ARG_LEN_DECL
 			     F77_CHAR_ARG_LEN_DECL
 			     F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dlag2, DLAG2) (double* A, const int& LDA, double* B,
+  F77_FUNC (dlag2, DLAG2) (const double* A, const int& LDA, const double* B,
 			   const int& LDB, const double& SAFMIN,
 			   double& SCALE1, double& SCALE2,
 			   double& WR1, double& WR2, double& WI);
 
   // Van Dooren's code (netlib.org: toms/590) for reordering
   // GEP.  Only processes Z, not Q.
   F77_RET_T
   F77_FUNC (dsubsp, DSUBSP) (const int& NMAX, const int& N, double* A,
@@ -755,18 +755,20 @@ See also: balance, dare, eig, schur\n\
 			}
 		    }
 #endif
 
 		  // XXX FIXME XXX -- probably should be using
 		  // fortran_vec instead of &aa(jj,jj) here.
 
 		  double scale1, scale2, wr1, wr2, wi;
+		  const double *aa_ptr = aa.data () + jj*nn+jj;
+		  const double *bb_ptr = bb.data () + jj*nn+jj;
 		  F77_XFCN (dlag2, DLAG2,
-			    (&aa(jj,jj), nn, &bb(jj,jj), nn, safmin,
+			    (aa_ptr, nn, bb_ptr, nn, safmin,
 			     scale1, scale2, wr1, wr2, wi));
 
 #ifdef DEBUG_EIG
 		  std::cout << "dlag2 returns: scale1=" << scale1
 		       << "\tscale2=" << scale2 << std::endl
 		       << "\twr1=" << wr1 << "\twr2=" << wr2
 		       << "\twi=" << wi << std::endl;
 #endif
