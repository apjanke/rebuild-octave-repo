# HG changeset patch
# User jwe
# Date 862192882 0
#      Mon Apr 28 02:01:22 1997 +0000
# Node ID 1a30f46e1870e91c80477bfe54b272b9618386f7
# Parent  42901f9a926603591355760ae918d51c4a48e52d
[project @ 1997-04-28 01:49:00 by jwe]

diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -64,29 +64,30 @@ endif
 
 INCLUDES := builtins.h data.h defun.h defun-dld.h \
 	defun-int.h dirfns.h dynamic-ld.h error.h file-io.h \
 	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
 	mappers.h oct.h oct-fstrm.h oct-hist.h oct-iostrm.h \
 	oct-map.h oct-obj.h oct-prcstrm.h oct-procbuf.h \
 	oct-stdstrm.h oct-stream.h oct-strstrm.h pager.h parse.h \
 	pathlen.h pr-output.h procstream.h pt-base.h pt-cmd.h \
-	pt-const.h pt-exp-base.h pt-exp.h pt-fcn.h pt-fvc-base.h \
-	pt-fvc.h pt-mat.h pt-misc.h pt-mvr-base.h pt-mvr.h \
+	pt-const.h pt-exp-base.h pt-exp.h pt-id.h pt-indir.h \
+	pt-mat.h pt-misc.h pt-mvr-base.h pt-mvr.h \
 	pt-plot.h pt-pr-code.h pt-walk.h sighandlers.h symtab.h \
 	syscalls.h sysdep.h systime.h syswait.h token.h toplev.h \
 	unwind-prot.h utils.h variables.h version.h xdiv.h xpow.h \
 	BaseSLList.h Map.h SLList.h SLStack.h Stack.h ov-re-mat.h \
 	ov-cx-mat.h ov-ch-mat.h ov-list.h ov-struct.h ov-scalar.h \
 	ov-range.h ov-complex.h ov-va-args.h ov-colon.h ov-base.h \
 	ov-str-mat.h ov-bool-mat.h ov-bool.h ov.h ov-typeinfo.h ops.h \
 	op-b-b.h op-bm-bm.h op-cm-cm.h op-cm-cs.h op-cm-m.h op-cm-s.h \
 	op-cs-cm.h op-cs-cs.h op-cs-m.h op-cs-s.h op-m-cm.h op-m-cs.h \
 	op-m-m.h op-m-s.h op-s-cm.h op-s-cs.h op-s-m.h op-s-s.h \
-	op-str-str.h oct-sym.h oct-fcn.h oct-builtin.h oct-mapper.h
+	op-str-str.h oct-sym.h oct-fcn.h oct-builtin.h oct-mapper.h \
+	oct-usr-fcn.h
 
 TI_SRC := Array-oc.cc Array-os.cc Array-tc.cc Map-fnc.cc Map-tc.cc \
 	SLList-expr.cc SLList-misc.cc SLList-plot.cc SLList-tc.cc \
 	SLList-tm.cc SLStack-i.cc SLStack-pc.cc SLStack-str.cc \
 	SLStack-sym.cc SLStack-tok.cc SLStack-ue.cc SLStack-ui.cc
 
 TI_OBJ := $(patsubst %.cc, %.o, $(TI_SRC))
 
@@ -99,30 +100,30 @@ endif
 
 SOURCES := BaseSLList.cc Map.cc SLList.cc SLStack.cc Stack.cc \
 	data.cc defaults.cc dirfns.cc dynamic-ld.cc error.cc \
 	file-io.cc fn-cache.cc gripes.cc help.cc input.cc lex.l \
 	load-save.cc mappers.cc oct-fstrm.cc oct-hist.cc \
 	oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
 	oct-procbuf.cc oct-stdstrm.cc oct-stream.cc oct-strstrm.cc \
 	pager.cc parse.y pr-output.cc procstream.cc pt-base.cc \
-	pt-cmd.cc pt-const.cc pt-exp-base.cc pt-exp.cc pt-fcn.cc \
-	pt-fvc-base.cc pt-fvc.cc pt-mat.cc pt-misc.cc pt-mvr-base.cc \
+	pt-cmd.cc pt-const.cc pt-exp-base.cc pt-exp.cc pt-id.cc \
+	pt-indir.cc pt-mat.cc pt-misc.cc pt-mvr-base.cc \
 	pt-mvr.cc pt-plot.cc pt-pr-code.cc sighandlers.cc \
 	strcasecmp.c strncase.c strfns.cc strftime.c symtab.cc \
 	syscalls.cc sysdep.cc token.cc toplev.cc unwind-prot.cc \
 	utils.cc variables.cc xdiv.cc xpow.cc ov-base.cc ov-ch-mat.cc \
 	ov-list.cc ov-re-mat.cc ov-cx-mat.cc ov-range.cc ov-scalar.cc \
 	ov-complex.cc ov-str-mat.cc ov-struct.cc ov-va-args.cc \
 	ov-colon.cc ov-bool-mat.cc ov-bool.cc ov.cc ov-typeinfo.cc \
 	ops.cc op-b-b.cc op-bm-bm.cc op-cm-cm.cc op-cm-cs.cc \
 	op-cm-m.cc op-cm-s.cc op-cs-cm.cc op-cs-cs.cc op-cs-m.cc \
 	op-cs-s.cc op-m-cm.cc op-m-cs.cc op-m-m.cc op-m-s.cc \
 	op-s-cm.cc op-s-cs.cc op-s-m.cc op-s-s.cc op-str-str.cc \
-	oct-fcn.cc oct-builtin.cc oct-mapper.cc
+	oct-fcn.cc oct-builtin.cc oct-mapper.cc oct-usr-fcn.cc
 
 OBJECTS_4 := $(SOURCES)
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
 OBJECTS_2 := $(patsubst %.y, %.o, $(OBJECTS_3))
 OBJECTS_1 := $(patsubst %.c, %.o, $(OBJECTS_2))
 OBJECTS := $(patsubst %.cc, %.o, $(OBJECTS_1))
 
 ifeq ($(SHARED_LIBS), true)
diff --git a/src/defun-dld.h b/src/defun-dld.h
--- a/src/defun-dld.h
+++ b/src/defun-dld.h
@@ -42,18 +42,17 @@ Software Foundation, 59 Temple Place - S
 #if defined (MAKE_BUILTINS)
 #if ! (defined (OCTAVE_LITE) && defined (WITH_DYNAMIC_LINKING))
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
   DEFUN_INTERNAL (name, args_name, nargout_name, 0, doc)
 #endif
 #else
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
   DECLARE_FUN (name, args_name, nargout_name); \
-  DEFINE_FUN_STRUCT (name, 0, doc); \
-  DEFINE_FUN_STRUCT_FUN (name) \
+  DEFINE_FUN_STRUCT_FUN (name, doc) \
   DECLARE_FUN (name, args_name, nargout_name)
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -18,33 +18,34 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_defun_int_h)
 #define octave_defun_int_h 1
 
+#include "oct-builtin.h"
 #include "variables.h"
 
 // MAKE_BUILTINS is defined to extract function names and related
 // information and create the *.def files that are eventually used to
 // create the buitlins.cc file.
 
 #ifdef MAKE_BUILTINS
 
 // Generate code to install name in the symbol table.  The script
 // mkdefs will create a .def file for every .cc file that uses DEFUN,
 // DEFUN_TEXT, or DEFUN_DLD.
 
 #define DEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   BEGIN_INSTALL_BUILTIN \
     extern DECLARE_FUN (name, args_name, nargout_name); \
-    DEFINE_FUN_STRUCT (name, is_text_fcn, doc); \
-    install_builtin_function (S ## name); \
+    install_builtin_function \
+      (new octave_builtin (F ## name, #name, doc), is_text_fcn); \
   END_INSTALL_BUILTIN
 
 // Generate code for making another name for an existing function.
 
 #define DEFALIAS_INTERNAL(alias, name) \
   BEGIN_INSTALL_BUILTIN \
   alias_builtin (#alias, #name); \
   END_INSTALL_BUILTIN
@@ -61,24 +62,24 @@ Software Foundation, 59 Temple Place - S
 
 #define DEFALIAS_INTERNAL(name, alias)
 
 #endif /* ! MAKE_BUILTINS */
 
 // Define the structure that will be used to insert this function into
 // the symbol table.
 
-#define DEFINE_FUN_STRUCT(name, is_text_fcn, doc) \
-  static builtin_function S ## name (#name, is_text_fcn, F ## name, doc)
-
-#define DEFINE_FUN_STRUCT_FUN(name) \
-  builtin_function& \
+#define DEFINE_FUN_STRUCT_FUN(name, doc) \
+  octave_builtin * \
   FS ## name (void) \
   { \
-    return S ## name; \
+    static octave_builtin *s = 0; \
+    if (! s) \
+      s = new octave_builtin (F ## name, #name, doc); \
+    return s; \
   }
 
 #define DECLARE_FUN(name, args_name, nargout_name) \
   octave_value_list F ## name (const octave_value_list& args_name, int nargout_name)
 
 #endif
 
 /*
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -382,17 +382,17 @@ display_names_from_help_list (ostream& o
 static string
 print_symbol_type (ostream& os, symbol_record *sym_rec,
 		   const string& name, int print)
 {
   string retval;
 
   if (sym_rec->is_user_function ())
     {
-      tree_fvc *defn = sym_rec->def ();
+      octave_symbol *defn = sym_rec->def ();
 
       string fn = defn->fcn_file_name ();
 
       if (! fn.empty ())
 	{
 	  string ff = fcn_file_in_path (fn);
 
 	  ff = ff.length () > 0 ? ff : fn;
@@ -777,17 +777,17 @@ display the definition of each NAME that
 	    }
 
 	  symbol_record *sym_rec = lookup_by_name (id, 0);
 
 	  if (sym_rec)
 	    {
 	      if (sym_rec->is_user_function ())
 		{
-		  tree_fvc *defn = sym_rec->def ();
+		  octave_symbol *defn = sym_rec->def ();
 
 		  string fn = defn->fcn_file_name ();
 		  string ff = fcn_file_in_path (fn);
 
 		  if (pr_orig_txt && ! ff.empty ())
 		    {
 		      ifstream fs (ff.c_str (), ios::in);
 
@@ -810,31 +810,32 @@ display the definition of each NAME that
 		  else
 		    {
 		      if (nargout == 0 && ! quiet)
 			output_buf << argv[i]
 				   << " is a user-defined function:\n\n";
 
 		      tree_print_code tpc (output_buf, "", pr_orig_txt);
 
-		      defn->accept (tpc);
+		      // XXX FIXME XXX
+		      // defn->accept (tpc);
 		    }
 		}
 
 	      // XXX FIXME XXX -- this code should be shared with
 	      // Fwhich.
 
 	      else if (sym_rec->is_text_function ())
 		output_buf << argv[i] << " is a builtin text-function\n";
 	      else if (sym_rec->is_builtin_function ())
 		output_buf << argv[i] << " is a builtin function\n";
 	      else if (sym_rec->is_user_variable ()
 		       || sym_rec->is_builtin_variable ())
 		{
-		  tree_fvc *defn = sym_rec->def ();
+		  octave_symbol *defn = sym_rec->def ();
 
 		  assert (defn && defn->is_constant ());
 
 		  tree_constant *tmp = static_cast<tree_constant *> (defn);
 
 		  int var_ok = 1;
 
 		  // XXX FIXME XXX -- need to handle structure
@@ -869,17 +870,18 @@ display the definition of each NAME that
 			      else
 				output_buf << "type: `" << id
 					   << "' has unknown type!\n";
 			    }
 			}
 
 		      tree_print_code tpc (output_buf, "", pr_orig_txt);
 
-		      tmp->accept (tpc);
+		      // XXX FIXME XXX
+		      // tmp->accept (tpc);
 
 		      if (nargout == 0)
 			output_buf << "\n";
 		    }
 		}
 	      else
 		output_buf << "type: `" << argv[i] << "' has unknown type!\n";
 	    }
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -42,27 +42,28 @@ Software Foundation, 59 Temple Place - S
 // class declarations.  We can't include y.tab.h in oct-gperf.h
 // because it may not be protected to allow it to be included multiple
 // times.
 
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "lex.h"
-#include "toplev.h"
+#include "ov.h"
 #include "parse.h"
-#include "symtab.h"
-#include "token.h"
 #include "pt-base.h"
 #include "pt-cmd.h"
-#include "ov.h"
+#include "pt-const.h"
 #include "pt-exp.h"
 #include "pt-mat.h"
 #include "pt-misc.h"
 #include "pt-plot.h"
+#include "symtab.h"
+#include "token.h"
+#include "toplev.h"
 #include "utils.h"
 #include "variables.h"
 #include <y.tab.h>
 #include <oct-gperf.h>
 
 #if ! (defined (FLEX_SCANNER) \
        && defined (YY_FLEX_MAJOR_VERSION) && YY_FLEX_MAJOR_VERSION >= 2 \
        && defined (YY_FLEX_MINOR_VERSION) && YY_FLEX_MINOR_VERSION >= 5)
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -518,16 +518,22 @@ octave_value::assign (octave_value::assi
     }
 
   if (! error_state)
     maybe_mutate ();
 
   return *this;
 }
 
+octave_value_list
+octave_value::eval (int, const octave_value_list& idx)
+{
+  return (idx.length () > 0) ? index (idx) : *this;
+}
+
 Octave_map
 octave_value::map_value (void) const
 {
   return rep->map_value ();
 }
 
 octave_value_list
 octave_value::list_value (void) const
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -315,18 +315,25 @@ public:
   virtual bool is_empty (void) const
     { return rep->is_empty (); }
 
   // Are the dimensions of this constant zero by zero?
 
   virtual bool is_zero_by_zero (void) const
     { return rep->is_zero_by_zero (); }
 
+  bool is_constant (void) const
+    { return true; }
+
   // Values.
 
+  octave_value eval (void) { return *this; }
+
+  octave_value_list eval (int, const octave_value_list& idx);
+
   virtual double double_value (bool frc_str_conv = false) const
     { return rep->double_value (frc_str_conv); }
 
   virtual Matrix matrix_value (bool frc_str_conv = false) const
     { return rep->matrix_value (frc_str_conv); }
 
   virtual Complex complex_value (bool frc_str_conv = false) const
     { return rep->complex_value (frc_str_conv); }
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -39,27 +39,28 @@ Software Foundation, 59 Temple Place - S
 
 #include "Matrix.h"
 
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "lex.h"
 #include "oct-hist.h"
+#include "oct-usr-fcn.h"
 #include "toplev.h"
 #include "pager.h"
 #include "parse.h"
 #include "pt-cmd.h"
 #include "pt-const.h"
-#include "pt-fcn.h"
-#include "pt-fvc.h"
+#include "pt-exp.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-mat.h"
+#include "pt-misc.h"
 #include "pt-mvr.h"
-#include "pt-exp.h"
-#include "pt-misc.h"
 #include "pt-plot.h"
 #include "pt-pr-code.h"
 #include "symtab.h"
 #include "token.h"
 #include "utils.h"
 #include "variables.h"
 
 // If TRUE, generate a warning for the assignment in things like
@@ -211,30 +212,30 @@ static tree_expression *make_assign_op
 	 (int op, tree_index_expression *var, token *eq_tok,
 	  tree_expression *expr);
 
 // Make an expression that handles assignment of multiple values.
 static tree_expression *make_multi_val_ret
 	 (tree_matrix_row *mr, tree_expression *rhs, token *eq_tok);
 
 // Begin defining a function.
-static tree_function *start_function_def
+static octave_user_function *start_function
 	 (tree_parameter_list *param_list, tree_statement_list *body);
 
 // Do most of the work for defining a function.
-static tree_function *frob_function_def
-	 (tree_identifier *id, tree_function *fcn);
+static octave_user_function *frob_function
+	 (tree_identifier *id, octave_user_function *fcn);
 
 // Finish defining a function.
-static tree_function *finish_function_def
-	(tree_identifier *id, tree_function *fcn);
+static octave_user_function *finish_function
+	(tree_identifier *id, octave_user_function *fcn);
 
 // Finish defining a function a different way.
-static tree_function *finish_function_def
-	 (tree_parameter_list *ret_list, tree_function *fcn);
+static octave_user_function *finish_function
+	 (tree_parameter_list *ret_list, octave_user_function *fcn);
 
 // Reset state after parsing function.
 static void recover_from_parsing_function (void);
 
 // Make an index expression.
 static tree_index_expression *make_index_expression
 	 (tree_indirect_ref *indir, tree_argument_list *args);
 
@@ -264,29 +265,28 @@ static void set_stmt_print_flag (tree_st
   while (0)
 
 %}
 
 // Bison declarations.
 
 %union
 {
-// The type of the basic tokens returned by the lexer.
+  // The type of the basic tokens returned by the lexer.
   token *tok_val;
 
-// Types for the nonterminals we generate.
+  // Types for the nonterminals we generate.
   char sep_type;
   tree *tree_type;
   tree_matrix *tree_matrix_type;
   tree_matrix_row *tree_matrix_row_type;
   tree_expression *tree_expression_type;
   tree_constant *tree_constant_type;
   tree_identifier *tree_identifier_type;
   tree_indirect_ref *tree_indirect_ref_type;
-  tree_function *tree_function_type;
   tree_index_expression *tree_index_expression_type;
   tree_colon_expression *tree_colon_expression_type;
   tree_argument_list *tree_argument_list_type;
   tree_parameter_list *tree_parameter_list_type;
   tree_command *tree_command_type;
   tree_if_command *tree_if_command_type;
   tree_if_clause *tree_if_clause_type;
   tree_if_command_list *tree_if_command_list_type;
@@ -300,16 +300,17 @@ static void set_stmt_print_flag (tree_st
   tree_statement_list *tree_statement_list_type;
   tree_plot_command *tree_plot_command_type;
   subplot *subplot_type;
   subplot_list *subplot_list_type;
   plot_limits *plot_limits_type;
   plot_range *plot_range_type;
   subplot_using *subplot_using_type;
   subplot_style *subplot_style_type;
+  octave_user_function *octave_user_function_type;
 }
 
 // Tokens with line and column information.
 %token <tok_val> '=' ':' '-' '+' '*' '/'
 %token <tok_val> ADD_EQ SUB_EQ MUL_EQ DIV_EQ EMUL_EQ EDIV_EQ AND_EQ OR_EQ
 %token <tok_val> EXPR_AND_AND EXPR_OR_OR
 %token <tok_val> EXPR_AND EXPR_OR EXPR_NOT
 %token <tok_val> EXPR_LT EXPR_LE EXPR_EQ EXPR_NE EXPR_GE EXPR_GT
@@ -343,35 +344,35 @@ static void set_stmt_print_flag (tree_st
 %type <tree_type> input
 %type <tree_constant_type> magic_colon
 %type <tree_matrix_type> rows rows1
 %type <tree_matrix_row_type> matrix_row matrix_row1
 %type <tree_expression_type> expression simple_expr simple_expr1
 %type <tree_expression_type> ans_expression title matrix
 %type <tree_identifier_type> identifier
 %type <tree_indirect_ref_type> indirect_ref indirect_ref1
-%type <tree_function_type> func_def1 func_def2 func_def3
+%type <octave_user_function_type> function1 function2 function3
 %type <tree_index_expression_type> variable word_list_cmd
 %type <tree_colon_expression_type> colon_expr
 %type <tree_argument_list_type> arg_list word_list
 %type <tree_parameter_list_type> param_list param_list1
 %type <tree_parameter_list_type> return_list return_list1
-%type <tree_command_type> command func_def
+%type <tree_command_type> command function
 %type <tree_if_command_type> if_command
 %type <tree_if_clause_type> elseif_clause else_clause
 %type <tree_if_command_list_type> if_cmd_list1 if_cmd_list
 %type <tree_switch_command_type> switch_command
 %type <tree_switch_case_type> switch_case default_case
 %type <tree_switch_case_list_type> case_list1 case_list
 %type <tree_decl_elt_type> decl2
 %type <tree_decl_init_list_type> decl1
 %type <tree_decl_command_type> declaration
 %type <tree_statement_type> statement
 %type <tree_statement_list_type> simple_list simple_list1 list list1
-%type <tree_statement_list_type> opt_list input1 func_def4
+%type <tree_statement_list_type> opt_list input1 function4
 %type <tree_plot_command_type> plot_command 
 %type <subplot_type> plot_command2 plot_options
 %type <subplot_list_type> plot_command1
 %type <plot_limits_type> ranges
 %type <plot_range_type> ranges1 
 %type <subplot_using_type> using using1 
 %type <subplot_style_type> style
 
@@ -624,17 +625,17 @@ decl2		: identifier
 declaration	: GLOBAL decl1
 		  { $$ = make_decl_command (GLOBAL, $1, $2); }
 		| STATIC decl1
 		  { $$ = make_decl_command (STATIC, $1, $2); }
 		;
 
 command		: plot_command
 		  { $$ = $1; }
-		| func_def
+		| function
 		  { $$ = $1; }
 		| declaration
 		  { $$ = $1; }
 		| switch_command
 		  { $$ = $1; }
 		| if_command
 		  { $$ = $1; }
 		| UNWIND opt_sep opt_list CLEANUP opt_sep opt_list END
@@ -907,18 +908,16 @@ word_list	: TEXT
 		| word_list TEXT
 		  {
 		    tree_constant *tmp = make_constant (TEXT, $2);
 		    $1->append (tmp);
 		    $$ = $1;
 		  }
 		;
 
-// This is truly disgusting.
-
 global_symtab	: // empty
 		  { curr_sym_tab = global_sym_tab; }
 		;
 
 local_symtab	: // empty
 		  { curr_sym_tab = tmp_local_sym_tab; }
 		;
 
@@ -927,19 +926,16 @@ in_return_list	: // empty
 		;
 
 parsed_fcn_name	: // empty
 		  { lexer_flags.parsed_function_name = true; }
 
 return_list_beg	: '[' local_symtab in_return_list
 		;
 
-return_list_end	: global_symtab ']'
-		;
-
 return_list	: return_list_beg return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
 		    $$ = new tree_parameter_list ();
 		  }
 		| return_list_beg ELLIPSIS return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
@@ -964,60 +960,63 @@ return_list1	: identifier
 		  { $$ = new tree_parameter_list ($1); }
 		| return_list1 ',' identifier
 		  {
 		    $1->append ($3);
 		    $$ = $1;
 		  }
 		;
 
-func_begin	: FCN global_symtab
+return_list_end	: global_symtab ']'
 		;
 
-func_def	: func_begin func_def2
+function_beg	: FCN global_symtab
+		;
+
+function	: function_beg function2
 		  {
 		    recover_from_parsing_function ();
 		    $$ = 0;
 		  }
-		| func_begin identifier func_def1
+		| function_beg identifier function1
 		  {
-		    finish_function_def ($2, $3);
+		    finish_function ($2, $3);
 		    recover_from_parsing_function ();
 		    $$ = 0;
 		  }
-		| func_begin return_list func_def1
+		| function_beg return_list function1
 		  {
-		    finish_function_def ($2, $3);
+		    finish_function ($2, $3);
 		    recover_from_parsing_function ();
 		    $$ = 0;
 		  }
 		;
 
-func_def1	: global_symtab '=' func_def2
+function1	: global_symtab '=' function2
 		  { $$ = $3; }
 		;
 
-func_def2	: identifier local_symtab parsed_fcn_name func_def3
+function2	: identifier local_symtab parsed_fcn_name function3
 		  {
-		    if (! ($$ = frob_function_def ($1, $4)))
+		    if (! ($$ = frob_function ($1, $4)))
 		      ABORT_PARSE;
 		  }
 		;
 
-func_def3	: param_list func_def4
-		  { $$ = start_function_def ($1, $2); }
-		| func_def4
-		  { $$ = start_function_def (0, $1); }
+function3	: param_list function4
+		  { $$ = start_function ($1, $2); }
+		| function4
+		  { $$ = start_function (0, $1); }
 		;
 
-func_def4	: opt_sep opt_list fcn_end_or_eof
+function4	: opt_sep opt_list function_end
 		  { $$ = $2; }
 		;
 
-fcn_end_or_eof	: END
+function_end	: END
 		  {
 		    if (end_token_ok ($1, token::function_end))
 		      {
 			if (reading_fcn_file)
 			  check_for_garbage_after_fcn_def ();
 		      }
 		    else
 		      ABORT_PARSE;
@@ -1126,17 +1125,17 @@ identifier	: NAME
 magic_colon	: ':'
 		  {
 		    octave_value tmp (octave_value::magic_colon_t);
 		    $$ = new tree_constant (tmp);
 		  }
 		;
 
 arg_list	: magic_colon
-		  { $$ = new tree_argument_list (colon); }
+		  { $$ = new tree_argument_list ($1); }
 		| expression
 		  { $$ = new tree_argument_list ($1); }
 		| ALL_VA_ARGS
 		  {
 		    octave_value tmp (octave_value::all_va_args_t);
 		    tree_constant *all_va_args = new tree_constant (tmp);
 		    $$ = new tree_argument_list (all_va_args);
 		  }
@@ -2206,33 +2205,33 @@ make_multi_val_ret (tree_matrix_row *mr,
   else
     yyerror ("invalid identifier list for assignment");
 
   return retval;
 }
 
 // Begin defining a function.
 
-static tree_function *
-start_function_def (tree_parameter_list *param_list,
-		    tree_statement_list *body)
+static octave_user_function *
+start_function (tree_parameter_list *param_list, tree_statement_list *body)
 {
   body->mark_as_function_body ();
 
-  tree_function *fcn = new tree_function (body, curr_sym_tab);
-
-  fcn->define_param_list (param_list);
+  // We'll fill in the return list later.
+
+  octave_user_function *fcn
+    = new octave_user_function (param_list, 0, body, curr_sym_tab);
 
   return fcn;
 }
 
 // Do most of the work for defining a function.
 
-static tree_function *
-frob_function_def (tree_identifier *id, tree_function *fcn)
+static octave_user_function *
+frob_function (tree_identifier *id, octave_user_function *fcn)
 {
   string id_name = id->name ();
 
   // If input is coming from a file, issue a warning if the name of
   // the file does not match the name of the function stated in the
   // file.  Matlab doesn't provide a diagnostic (it ignores the stated
   // name).
 
@@ -2271,39 +2270,39 @@ frob_function_def (tree_identifier *id, 
 
   symbol_record *sr = global_sym_tab->lookup (id_name);
 
   if (sr)
     fcn->stash_symtab_ptr (sr);
   else
     panic_impossible ();
 
-  id->define (fcn);
+  id->define (fcn, symbol_def::USER_FUNCTION);
 
   id->document (help_buf);
 
   return fcn;
 }
 
 // Finish defining a function.
 
-static tree_function *
-finish_function_def (tree_identifier *id, tree_function *fcn)
+static octave_user_function *
+finish_function (tree_identifier *id, octave_user_function *fcn)
 {
   tree_parameter_list *tpl = new tree_parameter_list (id);
 
   tpl->mark_as_formal_parameters ();
 
   return fcn->define_ret_list (tpl);
 }
 
 // Finish defining a function a different way.
 
-static tree_function *
-finish_function_def (tree_parameter_list *ret_list, tree_function *fcn)
+static octave_user_function *
+finish_function (tree_parameter_list *ret_list, octave_user_function *fcn)
 {
   ret_list->mark_as_formal_parameters ();
 
   return fcn->define_ret_list (ret_list);
 }
 
 static void
 recover_from_parsing_function (void)
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -31,27 +31,27 @@ Software Foundation, 59 Temple Place - S
 #include <string>
 
 #include <iostream.h>
 #include <strstream.h>
 
 #include "CMatrix.h"
 #include "Range.h"
 #include "dMatrix.h"
+#include "lo-mappers.h"
 #include "mach-info.h"
 #include "oct-cmplx.h"
 #include "oct-math.h"
 #include "oct-term.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "mappers.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "pr-output.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
 
 // The maximum field width for a number printed by the default output
diff --git a/src/pt-cmd.cc b/src/pt-cmd.cc
--- a/src/pt-cmd.cc
+++ b/src/pt-cmd.cc
@@ -42,17 +42,18 @@ int returning = 0;
 
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
 #include "symtab.h"
 #include "pt-cmd.h"
 #include "ov.h"
 #include "pt-exp.h"
-#include "pt-fvc.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-walk.h"
 #include "unwind-prot.h"
 #include "variables.h"
 
 // Decide if it's time to quit a for or while loop.
 static inline bool
diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -28,45 +28,45 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <string>
 
 class ostream;
 
 #include "oct-alloc.h"
 
-#include "pt-fvc.h"
+#include "pt-mvr-base.h"
 
 class octave_value_list;
 
 class tree_walker;
 
 #include "ov.h"
 
 class
-tree_constant : public tree_fvc
+tree_constant : public tree_multi_val_ret
 {
 public:
 
   tree_constant (int l = -1, int c = -1)
-    : tree_fvc (l, c), val (), orig_text () { }
+    : tree_multi_val_ret (l, c), val (), orig_text () { }
 
   tree_constant (const octave_value& v, int l = -1, int c = -1)
-    : tree_fvc (l, c), val (v), orig_text () { }
+    : tree_multi_val_ret (l, c), val (v), orig_text () { }
 
   tree_constant (const tree_constant& a)
-    : tree_fvc (), val (a.val), orig_text () { }
+    : tree_multi_val_ret (-1, -1), val (a.val), orig_text () { }
 
   ~tree_constant (void) { }
 
   tree_constant& operator = (const tree_constant& a)
     {
       if (this != &a)
 	{
-	  tree_fvc::operator = (a);
+	  tree_multi_val_ret::operator = (a);
 	  val = a.val;
 	}
       return *this;
     }
 
   void *operator new (size_t size)
     { return allocator.alloc (size); }
 
diff --git a/src/pt-exp.cc b/src/pt-exp.cc
--- a/src/pt-exp.cc
+++ b/src/pt-exp.cc
@@ -35,17 +35,18 @@ Software Foundation, 59 Temple Place - S
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "ov.h"
 #include "pt-exp.h"
-#include "pt-fvc.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-pr-code.h"
 #include "pt-walk.h"
 #include "utils.h"
 #include "variables.h"
 
 // Nonzero means we're returning from a function.
diff --git a/src/pt-mat.cc b/src/pt-mat.cc
--- a/src/pt-mat.cc
+++ b/src/pt-mat.cc
@@ -30,17 +30,16 @@ Software Foundation, 59 Temple Place - S
 
 #include <iostream.h>
 #include <strstream.h>
 
 #include "defun.h"
 #include "error.h"
 #include "oct-obj.h"
 #include "pt-exp.h"
-#include "pt-fvc.h"
 #include "pt-mat.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-walk.h"
 #include "utils.h"
 #include "ov.h"
 #include "variables.h"
 
diff --git a/src/pt-misc.cc b/src/pt-misc.cc
--- a/src/pt-misc.cc
+++ b/src/pt-misc.cc
@@ -35,23 +35,24 @@ Software Foundation, 59 Temple Place - S
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
+#include "oct-usr-fcn.h"
 #include "ov.h"
 #include "pager.h"
 #include "pt-cmd.h"
 #include "pt-const.h"
 #include "pt-exp.h"
-#include "pt-fcn.h"
-#include "pt-fvc.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-pr-code.h"
 #include "pt-walk.h"
 #include "toplev.h"
 #include "variables.h"
 
 // Nonzero means we're breaking out of a loop or function body.
@@ -338,29 +339,28 @@ tree_parameter_list::define_from_arg_vec
   int expected_nargin = length ();
 
   Pix p = first ();
 
   for (int i = 0; i < expected_nargin; i++)
     {
       tree_identifier *elt = this->operator () (p);
 
-      tree_constant *tmp = 0;
-
       if (i < nargin)
 	{
 	  if (args(i).is_defined () && args(i).is_magic_colon ())
 	    {
 	      ::error ("invalid use of colon in function argument list");
 	      return;
 	    }
-	  tmp = new tree_constant (args (i));
+
+	  elt->define (args(i));
 	}
-
-      elt->define (tmp);
+      else
+	elt->define (octave_value ());
 
       next (p);
     }
 }
 
 octave_value_list
 tree_parameter_list::convert_to_const_vector (tree_va_return_list *vr_list)
 {
diff --git a/src/pt-mvr-base.h b/src/pt-mvr-base.h
--- a/src/pt-mvr-base.h
+++ b/src/pt-mvr-base.h
@@ -36,16 +36,17 @@ class octave_value_list;
 
 class
 tree_multi_val_ret : public tree_expression
 {
 public:
 
   tree_multi_val_ret (int l = -1, int c = -1) : tree_expression (l, c) { }
 
+  // XXX FIXME XXX -- this can't be right!
   tree_multi_val_ret (int l = -1, int c = -1, tree_expression::type et)
     : tree_expression (l, c, et) { }
 
   ~tree_multi_val_ret (void) { }
 
   bool is_multi_val_ret_expression (void) const
     { return true; }
 
diff --git a/src/pt-mvr.cc b/src/pt-mvr.cc
--- a/src/pt-mvr.cc
+++ b/src/pt-mvr.cc
@@ -30,17 +30,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <iostream.h>
 
 #include "error.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "pt-const.h"
 #include "pt-exp.h"
-#include "pt-fvc.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-walk.h"
 
 // But first, some extra functions used by the tree classes.
 
 // Make sure that all arguments have values.
 
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -42,24 +42,24 @@ Software Foundation, 59 Temple Place - S
 #endif
 #include <unistd.h>
 #endif
 
 #include "SLStack.h"
 #include "procstream.h"
 
 #include "file-ops.h"
+#include "lo-mappers.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "load-save.h"
-#include "mappers.h"
 #include "oct-obj.h"
 #include "pt-cmd.h"
 #include "pt-exp.h"
 #include "pt-plot.h"
 #include "pt-walk.h"
 #include "sighandlers.h"
 #include "sysdep.h"
 #include "utils.h"
diff --git a/src/pt-pr-code.cc b/src/pt-pr-code.cc
--- a/src/pt-pr-code.cc
+++ b/src/pt-pr-code.cc
@@ -26,22 +26,23 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "error.h"
+#include "oct-usr-fcn.h"
 #include "pr-output.h"
 #include "pt-cmd.h"
 #include "pt-const.h"
 #include "pt-exp.h"
-#include "pt-fcn.h"
-#include "pt-fvc.h"
+#include "pt-id.h"
+#include "pt-indir.h"
 #include "pt-mat.h"
 #include "pt-misc.h"
 #include "pt-mvr.h"
 #include "pt-plot.h"
 #include "pt-pr-code.h"
 
 void
 tree_print_code::visit_argument_list (tree_argument_list& lst)
@@ -94,23 +95,16 @@ void
 tree_print_code::visit_break_command (tree_break_command&)
 {
   indent ();
 
   os << "break";
 }
 
 void
-tree_print_code::visit_builtin (tree_builtin& fcn)
-{
-  os << fcn.name ()
-     << " can't be printed because it is a built-in function\n";
-}
-
-void
 tree_print_code::visit_colon_expression (tree_colon_expression& expr)
 {
   indent ();
 
   bool in_parens = expr.is_in_parens ();
 
   if (in_parens)
     os << "(";
@@ -229,36 +223,36 @@ tree_print_code::visit_for_command (tree
     }
 
   indent ();
 
   os << "endfor";
 }
 
 void
-tree_print_code::visit_function (tree_function& fcn)
+tree_print_code::visit_octave_user_function (octave_user_function& fcn)
 {
   reset ();
 
-  visit_function_header (fcn);
+  visit_octave_user_function_header (fcn);
 
   tree_statement_list *cmd_list = fcn.body ();
 
   if (cmd_list)
     {
       increment_indent_level ();
       cmd_list->accept (*this);
       decrement_indent_level ();
     }
 
-  visit_function_trailer (fcn);
+  visit_octave_user_function_trailer (fcn);
 }
 
 void
-tree_print_code::visit_function_header (tree_function& fcn)
+tree_print_code::visit_octave_user_function_header (octave_user_function& fcn)
 {
   indent ();
 
   os << "function ";
 
   tree_parameter_list *ret_list = fcn.return_list ();
 
   if (ret_list)
@@ -320,17 +314,17 @@ tree_print_code::visit_function_header (
   else
     {
       os << "()";
       newline ();
     }
 }
 
 void
-tree_print_code::visit_function_trailer (tree_function&)
+tree_print_code::visit_octave_user_function_trailer (octave_user_function&)
 {
   indent ();
 
   os << "endfunction";
 
   newline ();
 }
 
diff --git a/src/pt-pr-code.h b/src/pt-pr-code.h
--- a/src/pt-pr-code.h
+++ b/src/pt-pr-code.h
@@ -45,35 +45,33 @@ public:
   ~tree_print_code (void) { }
 
   void visit_argument_list (tree_argument_list&);
 
   void visit_binary_expression (tree_binary_expression&);
 
   void visit_break_command (tree_break_command&);
 
-  void visit_builtin (tree_builtin&);
-
   void visit_colon_expression (tree_colon_expression&);
 
   void visit_continue_command (tree_continue_command&);
 
   void visit_decl_command (tree_decl_command&);
 
   void visit_decl_elt (tree_decl_elt&);
 
   void visit_decl_init_list (tree_decl_init_list&);
 
   void visit_for_command (tree_for_command&);
 
-  void visit_function (tree_function&);
+  void visit_octave_user_function (octave_user_function&);
 
-  void visit_function_header (tree_function&);
+  void visit_octave_user_function_header (octave_user_function&);
 
-  void visit_function_trailer (tree_function&);
+  void visit_octave_user_function_trailer (octave_user_function&);
 
   void visit_identifier (tree_identifier&);
 
   void visit_if_clause (tree_if_clause&);
 
   void visit_if_command (tree_if_command&);
 
   void visit_if_command_list (tree_if_command_list&);
diff --git a/src/pt-walk.h b/src/pt-walk.h
--- a/src/pt-walk.h
+++ b/src/pt-walk.h
@@ -21,24 +21,23 @@ Software Foundation, 59 Temple Place - S
 */
 
 #if !defined (octave_tree_walker_h)
 #define octave_tree_walker_h 1
 
 class tree_argument_list;
 class tree_binary_expression;
 class tree_break_command;
-class tree_builtin;
 class tree_colon_expression;
 class tree_continue_command;
 class tree_decl_command;
 class tree_decl_elt;
 class tree_decl_init_list;
 class tree_for_command;
-class tree_function;
+class octave_user_function;
 class tree_identifier;
 class tree_if_clause;
 class tree_if_command;
 class tree_if_command_list;
 class tree_switch_case;
 class tree_switch_case_list;
 class tree_switch_command;
 class tree_index_expression;
@@ -79,19 +78,16 @@ public:
 
   virtual void
   visit_binary_expression (tree_binary_expression&) = 0;
 
   virtual void
   visit_break_command (tree_break_command&) = 0;
 
   virtual void
-  visit_builtin (tree_builtin&) = 0;
-
-  virtual void
   visit_colon_expression (tree_colon_expression&) = 0;
 
   virtual void
   visit_continue_command (tree_continue_command&) = 0;
 
   virtual void
   visit_decl_command (tree_decl_command&) = 0;
 
@@ -100,17 +96,17 @@ public:
 
   virtual void
   visit_decl_init_list (tree_decl_init_list&) = 0;
 
   virtual void
   visit_for_command (tree_for_command&) = 0;
 
   virtual void
-  visit_function (tree_function&) = 0;
+  visit_octave_user_function (octave_user_function&) = 0;
 
   virtual void
   visit_identifier (tree_identifier&) = 0;
 
   virtual void
   visit_if_clause (tree_if_clause&) = 0;
 
   virtual void
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -56,22 +56,22 @@ Software Foundation, 59 Temple Place - S
 #include "file-io.h"
 #include "help.h"
 #include "input.h"
 #include "lex.h"
 #include <oct-conf.h>
 #include "oct-hist.h"
 #include "oct-map.h"
 #include "oct-obj.h"
+#include "oct-sym.h"
 #include "pager.h"
 #include "parse.h"
 #include "pathsearch.h"
 #include "procstream.h"
 #include "ov.h"
-#include "pt-fvc.h"
 #include "pt-misc.h"
 #include "pt-plot.h"
 #include "sighandlers.h"
 #include "sysdep.h"
 #include "syswait.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "utils.h"
@@ -123,17 +123,17 @@ int current_command_number = 1;
 
 // Nonzero means we are exiting via the builtin exit or quit functions.
 int quitting_gracefully = 0;
 
 // Current command to execute.
 tree_statement_list *global_command = 0;
 
 // Pointer to function that is currently being evaluated.
-tree_function *curr_function = 0;
+octave_user_function *curr_function = 0;
 
 // Nonzero means input is coming from startup file.
 int input_from_startup_file = 0;
 
 // Nonzero means that input is coming from a file that was named on
 // the command line.
 int input_from_command_line_file = 1;
 
@@ -492,25 +492,26 @@ Foundation, 59 Temple Place - Suite 330,
 
 // XXX FIXME XXX -- this may not be the best place for these...
 
 octave_value_list
 feval (const octave_value_list& args, int nargout)
 {
   octave_value_list retval;
 
-  tree_fvc *fcn = is_valid_function (args(0), "feval", 1);
+  octave_symbol *fcn = is_valid_function (args(0), "feval", 1);
+
   if (fcn)
     {
       int tmp_nargin = args.length () - 1;
       octave_value_list tmp_args;
       tmp_args.resize (tmp_nargin);
       for (int i = 0; i < tmp_nargin; i++)
 	tmp_args(i) = args(i+1);
-      retval = fcn->eval (false, nargout, tmp_args);
+      retval = fcn->eval (nargout, tmp_args);
     }
 
   return retval;
 }
 
 DEFUN (feval, args, nargout,
   "feval (NAME, ARGS, ...)\n\
 \n\
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -22,17 +22,17 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_toplev_h)
 #define octave_toplev_h 1
 
 #include <cstdio>
 
 class octave_value;
 class octave_value_list;
-class tree_function;
+class octave_user_function;
 class tree_statement_list;
 class charMatrix;
 
 #include <string>
 
 extern void
 clean_up_and_exit (int) GCC_ATTR_NORETURN;
 
@@ -81,17 +81,17 @@ extern int current_command_number;
 
 // Nonzero means we are exiting via the builtin exit or quit functions.
 extern int quitting_gracefully;
 
 // Current command to execute.
 extern tree_statement_list *global_command;
 
 // Pointer to function that is currently being evaluated.
-extern tree_function *curr_function;
+extern octave_user_function *curr_function;
 
 // Nonzero means input is coming from startup file.
 extern int input_from_startup_file;
 
 // Nonzero means that input is coming from a file that was named on
 // the command line.
 extern int input_from_command_line_file;
 
