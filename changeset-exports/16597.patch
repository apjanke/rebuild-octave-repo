# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1367388141 14400
#      Wed May 01 02:02:21 2013 -0400
# Node ID 49832f60282e2d10f9522f97d489bbfe37fb802d
# Parent  645672f1c8736d882cc7f031960391346750f9c8
if available, use ioctl to give up controlling terminal

* octave-gui.cc (dissociate_terminal): If sys/ioctl.h is available and
TIOCNOTTY is defined, use ioctl to give up controlling terminal on
Unixy systems.

diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -24,32 +24,43 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include <QtGui/QApplication>
 #include <QTranslator>
 
 #include <iostream>
 
+#include <fcntl.h>
+
+#if defined (HAVE_SYS_IOCTL_H)
+#include <sys/ioctl.h>
+#endif
+
 #include "lo-utils.h"
 #include "oct-env.h"
 #include "syswait.h"
 
 #include "welcome-wizard.h"
 #include "resource-manager.h"
 #include "main-window.h"
 #include "octave-gui.h"
 
 // Dissociate from the controlling terminal, if any.
 
 static void
 dissociate_terminal (void)
 {
 #if ! defined (Q_OS_WIN32) || defined (Q_OS_CYGWIN)
+# if defined (HAVE_SYS_IOCTL_H) && defined (TIOCNOTTY)
 
+  ioctl (0, TIOCNOTTY);
+
+# else
+ 
   pid_t pid = fork ();
 
   if (pid < 0)
     {
       std::cerr << "fork failed!" << std::endl;;
       exit (1);
     }
   else if (pid == 0)
@@ -69,16 +80,17 @@ dissociate_terminal (void)
       int status;
 
       waitpid (pid, &status, 0);
 
       exit (octave_wait::ifexited (status)
             ? octave_wait::exitstatus (status) : 127);
     }
 
+# endif
 #endif
 }
 
 int
 octave_start_gui (int argc, char *argv[])
 {
   dissociate_terminal ();
 
