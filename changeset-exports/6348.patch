# HG changeset patch
# User jwe
# Date 1172208296 0
#      Fri Feb 23 05:24:56 2007 +0000
# Node ID 1f5de98984c341130be3a050469d0f58eb42c31f
# Parent  e40a46a100b6104313971a4bb426508dd45b8286
[project @ 2007-02-23 05:24:56 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2007-02-23  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/dispatch.cc (Fbuiltin): Also adjust argument list
+	in calls to functions that are not overloaded.  Call
+	lookup_by_name to find function instead of searching fbi_symtab
+	directly.
+
+	* help.cc (do_which): Return empty string if file not found.
+
 2007-02-22  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mxArray_cell::mxArray_cell (const mxArray_cell&),
 	mxArray_struct::mxArray_struct (const mxArray_struct&)):
 	Avoid calling clone on 0 elements.
 
 	* variables.cc (symbol_out_of_date): If checking nested function,
 	look for file using parent function name.  Delete unused
diff --git a/src/DLD-FUNCTIONS/dispatch.cc b/src/DLD-FUNCTIONS/dispatch.cc
--- a/src/DLD-FUNCTIONS/dispatch.cc
+++ b/src/DLD-FUNCTIONS/dispatch.cc
@@ -301,30 +301,29 @@ some other function for the given type s
 
   if (nargin > 0)
     {
       const std::string name (args(0).string_value ());
  
       if (error_state)
 	return retval;
 
-      symbol_record *sr = fbi_sym_tab->lookup (name, 0);
+      symbol_record *sr = lookup_by_name (name, 0);
 
-      if (sr)
+      if (sr && sr->is_function ())
 	{
 	  if (sr->def().type_id () == octave_dispatch::static_type_id ())
 	    {
 	      octave_function *fcn = builtin (name);
 
 	      if (!error_state && fcn)
-		retval = fcn->do_multi_index_op (nargout,
-						 args.splice (0, 1, retval));
+		retval = fcn->do_multi_index_op (nargout, args.splice (0, 1));
 	    }
 	  else
-	    retval = feval (name, args, nargout);
+	    retval = feval (name, args.splice (0, 1), nargout);
 	}
       else
 	error ("builtin: lookup for symbol `%s' failed", name.c_str ());
     }
   else
     print_usage ();
 
   return retval;
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -1312,24 +1312,17 @@ do_which (const std::string& name)
 {
   std::string retval;
 
   symbol_record *sym_rec = lookup_by_name (name, 0);
 
   if (sym_rec && sym_rec->is_defined ())
     retval = sym_rec->which ();
   else
-    {
-      std::string path = fcn_file_in_path (name);
-
-      if (! path.empty ())
-	retval = path;
-      else
-	retval = "undefined";
-    }
+    retval = fcn_file_in_path (name);
 
   return retval;
 }
 
 static void
 do_which (std::ostream& os, const std::string& name)
 {
   symbol_record *sym_rec = lookup_by_name (name, 0);
