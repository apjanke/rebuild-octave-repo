# HG changeset patch
# User Rik <rik@octave.org>
# Date 1372211038 25200
#      Tue Jun 25 18:43:58 2013 -0700
# Node ID 209f0db3c32b740ad644446643009f9dbbb54e52
# Parent  ec2ac2300ac85f081f35c35ea0e73aa3d119e0a5
mexErrMsgTxt should abort when called with an empty string (bug #39343).

* libinterp/interp-core/mex.cc(mexErrMsgTxt, mexErrMsgIdAndTxt): For an
empty string input, call Octave's error routine with a SPACE (" ") as
input.

diff --git a/libinterp/interp-core/mex.cc b/libinterp/interp-core/mex.cc
--- a/libinterp/interp-core/mex.cc
+++ b/libinterp/interp-core/mex.cc
@@ -3096,18 +3096,21 @@ mexEvalString (const char *s)
 }
 
 void
 mexErrMsgTxt (const char *s)
 {
   if (s && strlen (s) > 0)
     error ("%s: %s", mexFunctionName (), s);
   else
-    // Just set the error state; don't print msg.
-    error ("");
+    {
+      // For compatibility with Matlab, print an empty message.
+      // Octave's error routine requires a non-null input so use a SPACE.
+      error (" ");
+    }
 
   mex_context->abort ();
 }
 
 void
 mexErrMsgIdAndTxt (const char *id, const char *fmt, ...)
 {
   if (fmt && strlen (fmt) > 0)
@@ -3117,18 +3120,21 @@ mexErrMsgIdAndTxt (const char *id, const
       OCTAVE_LOCAL_BUFFER (char, tmpfmt, len);
       sprintf (tmpfmt, "%s: %s", fname, fmt);
       va_list args;
       va_start (args, fmt);
       verror_with_id (id, tmpfmt, args);
       va_end (args);
     }
   else
-    // Just set the error state; don't print msg.
-    error ("");
+    {
+      // For compatibility with Matlab, print an empty message.
+      // Octave's error routine requires a non-null input so use a SPACE.
+      error (" ");
+    }
 
   mex_context->abort ();
 }
 
 void
 mexWarnMsgTxt (const char *s)
 {
   warning ("%s", s);
