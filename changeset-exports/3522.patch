# HG changeset patch
# User jwe
# Date 949473124 0
#      Wed Feb 02 06:32:04 2000 +0000
# Node ID bd422cf62f0c92a6004b0cbc13448100c508ed1e
# Parent  2405b732be407c21f0e1da3300477fbd2f5fdf74
[project @ 2000-02-02 06:29:21 by jwe]

diff --git a/liboctave/cmd-hist.cc b/liboctave/cmd-hist.cc
--- a/liboctave/cmd-hist.cc
+++ b/liboctave/cmd-hist.cc
@@ -536,32 +536,30 @@ command_history::goto_mark (void)
 {
   if (instance_ok ())
     instance->do_goto_mark ();
 }
 
 void
 command_history::read (bool must_exist)
 {
-  if (instance_ok ())
-    instance->do_read (must_exist);
+  read (file (), must_exist);
 }
 
 void
 command_history::read (const std::string& f, bool must_exist)
 {
   if (instance_ok ())
     instance->do_read (f, must_exist);
 }
 
 void
 command_history::read_range (int from, int to, bool must_exist)
 {
-  if (instance_ok ())
-    instance->do_read_range (from, to, must_exist);
+  read_range (file (), from, to, must_exist);
 }
 
 void
 command_history::read_range (const std::string& f, int from, int to,
 			     bool must_exist) 
 {
   if (instance_ok ())
     instance->do_read_range (f, from, to, must_exist);
@@ -715,35 +713,23 @@ command_history::do_set_mark (int)
 }
 
 void
 command_history::do_goto_mark (void)
 {
 }
 
 void
-command_history::do_read (bool must_exist)
-{
-  do_read (xfile, must_exist);
-}
-
-void
 command_history::do_read (const std::string& f, bool)
 {
   if (f.empty ())
     error ("command_history::read: missing file name");
 }
 
 void
-command_history::do_read_range (int from, int to, bool must_exist)
-{
-  do_read_range (xfile, from, to, must_exist);
-}
-
-void
 command_history::do_read_range (const std::string& f, int, int, bool)
 {
   if (f.empty ())
     error ("command_history::read_range: missing file name");
 }
 
 void
 command_history::do_write (const std::string& f_arg)
diff --git a/liboctave/cmd-hist.h b/liboctave/cmd-hist.h
--- a/liboctave/cmd-hist.h
+++ b/liboctave/cmd-hist.h
@@ -154,22 +154,18 @@ protected:
   virtual int do_unstifle (void);
 
   virtual int do_is_stifled (void);
 
   virtual void do_set_mark (int);
 
   virtual void do_goto_mark (void);
 
-  virtual void do_read (bool);
-
   virtual void do_read (const std::string&, bool);
 
-  virtual void do_read_range (int, int, bool);
-
   virtual void do_read_range (const std::string&, int, int, bool);
 
   virtual void do_write (const std::string&);
 
   virtual void do_append (const std::string&);
 
   virtual void do_truncate_file (const std::string&, int);
 
