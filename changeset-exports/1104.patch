# HG changeset patch
# User jwe
# Date 792800416 0
#      Tue Feb 14 22:20:16 1995 +0000
# Node ID 3535aa4d38c65d4d760053cff69851c42a0578eb
# Parent  a6f341c1b47ce11e4668fd1e286d3fe46be1e9af
[project @ 1995-02-14 22:12:34 by jwe]

diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -50,16 +50,24 @@
 
 /* Define to compile smaller kernel.  Only works if some form of
    dynamic linking is also supported and used. */
 #undef OCTAVE_LITE
 
 /* Define if this is Octave. */
 #undef OCTAVE_SOURCE
 
+/* Define this to be the path separator for your system, as a
+   character constant */
+#undef SEPCHAR
+
+/* Define this to be the path separator for your system, as a
+   character string */
+#undef SEPCHAR_STR
+
 /* Define if you don't have QPSOL. */
 #undef QPSOL_MISSING
 
 /* Define to make Octave look for info files and function files in the
    directory tree as the sources. */
 #undef RUN_IN_PLACE
 
 /* Define if math.h declares signgam. */
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
-AC_REVISION($Revision: 1.91 $)
+AC_REVISION($Revision: 1.92 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -117,16 +117,21 @@ AC_SUBST(localfcnfilepath)
 AC_SUBST(archlibdir)
 AC_SUBST(octfiledir)
 AC_SUBST(localoctfiledir)
 AC_SUBST(localoctfilepath)
 AC_SUBST(fcnfilepath)
 AC_SUBST(imagedir)
 AC_SUBST(imagepath)
 
+### Path separator.
+
+AC_DEFINE(SEPCHAR, [':'])
+AC_DEFINE(SEPCHAR_STR, [":"])
+
 ### Do special stuff if using dld.
 
 DLD_DIR=
 LIBDLD=
 LIBOCTDLD='liboctdld.a'
 LD_STATIC_FLAG=
 if $use_dld; then
   DLD_DIR=dld
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -220,22 +220,24 @@ initialize_globals (char *name)
   int len = strlen (arch_dir) + strlen (bin_dir) + 7;
 
   char *putenv_cmd = 0;
 
   if (shell_path)
     {
       len += strlen (shell_path) + 1;
       putenv_cmd = new char [len];
-      sprintf (putenv_cmd, "PATH=%s:%s:%s", shell_path, arch_dir, bin_dir);
+      sprintf (putenv_cmd,
+	       "PATH=%s" SEPCHAR_STR "%s" SEPCHAR_STR "%s",
+	       shell_path, arch_dir, bin_dir);
     }
   else
     {
       putenv_cmd = new char [len];
-      sprintf (putenv_cmd, "PATH=%s:%s", arch_dir, bin_dir);
+      sprintf (putenv_cmd, "PATH=%s" SEPCHAR_STR "%s", arch_dir, bin_dir);
     }
 
   putenv (putenv_cmd);
 
   raw_prog_name = strsave (name);
   prog_name = strsave ("octave");
 
   load_path = default_path ();
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -229,17 +229,17 @@ pathstring_to_vector (char *pathstring)
       int nelem = 0;
       char *tmp_path = strsave (pathstring);
       if (*tmp_path != '\0')
 	{
 	  nelem++;
 	  char *ptr = tmp_path;
 	  while (*ptr != '\0')
 	    {
-	      if (*ptr == ':')
+	      if (*ptr == SEPCHAR)
 		nelem++;
 	      ptr++;
 	    }
 	}
 
       char **foo = path;
       while (foo && *foo)
 	delete [] *foo++;
@@ -247,17 +247,17 @@ pathstring_to_vector (char *pathstring)
 
       path = new char * [nelem+1];
       path[nelem] = 0;
 
       int i = 0;
       char *ptr = tmp_path;
       while (i < nelem)
 	{
-	  char *end = strchr (ptr, ':');
+	  char *end = strchr (ptr, SEPCHAR);
 	  if (end)
 	    *end = '\0';
 	  char *result = tilde_expand (ptr);
 	  path[i] = strsave (result);
 	  free (result);
 	  ptr = end + 1;
 	  i++;
 	}
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -402,25 +402,25 @@ default_path (void)
   static char *std_path = subst_octave_home (OCTAVE_FCNFILEPATH);
 
   char *oct_path = getenv ("OCTAVE_PATH");
 
   if (oct_path)
     {
       pathstring = strsave (oct_path);
 
-      if (pathstring[0] == ':')
+      if (pathstring[0] == SEPCHAR)
 	{
 	  char *tmp = pathstring;
 	  pathstring = strconcat (std_path, pathstring);
 	  delete [] tmp;
 	}
 
       int tmp_len = strlen (pathstring);
-      if (pathstring[tmp_len-1] == ':')
+      if (pathstring[tmp_len-1] == SEPCHAR)
 	{
 	  char *tmp = pathstring;
 	  pathstring = strconcat (pathstring, std_path);
 	  delete [] tmp;
 	}
     }
   else
     pathstring = strsave (std_path);
