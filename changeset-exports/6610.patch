# HG changeset patch
# User jwe
# Date 1178677720 0
#      Wed May 09 02:28:40 2007 +0000
# Node ID fb8bddaa07c4af648425811381c7708f92dbaedd
# Parent  30891d1d0c86168da84f95fe291eb29d9ed918da
[project @ 2007-05-09 02:28:40 by jwe]

diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -179,12 +179,13 @@ Peter Van Wieren
 James R. Van Zandt
 Gregory Vanuxem
 Ivana Varekova
 Thomas Walter
 Olaf Weber
 Thomas Weber
 Bob Weigel
 Andreas Weingessel
+Michael Weitzel
 Fook Fah Yap
 Michael Zeising
 Federico Zenith
 Alex Zvoleff
diff --git a/src/DLD-FUNCTIONS/symrcm.cc b/src/DLD-FUNCTIONS/symrcm.cc
--- a/src/DLD-FUNCTIONS/symrcm.cc
+++ b/src/DLD-FUNCTIONS/symrcm.cc
@@ -42,19 +42,18 @@ The implementation of this algorithm is 
 	publisher = {Prentice Hall Series in Computational Mathematics},
 	ISBN = {0-13-165274-5},
 	year = {1981}
 }
 
 The algorithm represents a heuristic approach to the NP-complete minimum
 bandwidth problem.
 
-The author can be reached at
-	michael.weitzel@uni-siegen.de
-	or weitzel@ldknet.org
+Written by Michael Weitzel <michael.weitzel@@uni-siegen.de>
+                           <weitzel@@ldknet.org>
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "ov.h"
 #include "defun-dld.h"
@@ -142,36 +141,33 @@ transpose (octave_idx_type N, const octa
 	   const octave_idx_type *cidx, octave_idx_type *ridx2, 
 	   octave_idx_type *cidx2);
 
 // An implementation of the Cuthill-McKee algorithm.
 DEFUN_DLD (symrcm, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{p} = } symrcm (@var{S})\n\
 Symmetric reverse Cuthill-McKee permutation of @var{S}.\n\
-@code{symrcm (@var{S})} returns a permutation vector @var{p} such that\n\
+Return a permutation vector @var{p} such that\n\
 @code{@var{S} (@var{p}, @var{p})} tends to have its diagonal elements\n\
-closer to the diagonal than @var{S}. This is a good preordering for LU\n\
+closer to the diagonal than @var{S}.  This is a good preordering for LU\n\
 or Cholesky factorization of matrices that come from 'long, skinny'\n\
-problems. It works for both symmetric and asymmetric @var{S}.\n\
+problems.  It works for both symmetric and asymmetric @var{S}.\n\
 \n\
 The algorithm represents a heuristic approach to the NP-complete\n\
-bandwidth minimization problem. The implementation is based in the\n\
+bandwidth minimization problem.  The implementation is based in the\n\
 descriptions found in\n\
 \n\
-  E. Cuthill, J. McKee: Reducing the Bandwidth of Sparse Symmetric\n\
-  Matrices. Proceedings of the 24th ACM National Conference, 157-172\n\
-  1969, Brandon Press, New Jersey.\n\
+E. Cuthill, J. McKee: Reducing the Bandwidth of Sparse Symmetric\n\
+Matrices. Proceedings of the 24th ACM National Conference, 157-172\n\
+1969, Brandon Press, New Jersey.\n\
 \n\
-  Alan George, Joseph W. H. Liu: Computer Solution of Large Sparse\n\
-  Positive Definite Systems, Prentice Hall Series in Computational\n\
-  Mathematics, ISBN 0-13-165274-5, 1981.\n\
-\n\
-The author of the code itself is\n\
-Michael Weitzel (michael.weitzel@@uni-siegen.de, weitzel@@ldknet.org).\n\
+Alan George, Joseph W. H. Liu: Computer Solution of Large Sparse\n\
+Positive Definite Systems, Prentice Hall Series in Computational\n\
+Mathematics, ISBN 0-13-165274-5, 1981.\n\
 \n\
 @seealso{colperm, colamd, symamd}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length();
 
   if (nargin != 1)
