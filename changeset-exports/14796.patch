# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1340310608 -7200
#      Thu Jun 21 22:30:08 2012 +0200
# Branch gui
# Node ID e10d7bcfdd9e0237b8d31505f134d12d8df8b17c
# Parent  e3ae0850b10512893088da512d2cb9e9ebc96d9c
Now recognizing more symbol types in workspace view. Fixed bug with file system watcher complaining with new files.

* file-editor-tab.cc: Checking for empty file watcher path list when saving.
* symbol-information.h: Recognizing more types.

diff --git a/gui/src/m-editor/file-editor-tab.cc b/gui/src/m-editor/file-editor-tab.cc
--- a/gui/src/m-editor/file-editor-tab.cc
+++ b/gui/src/m-editor/file-editor-tab.cc
@@ -399,17 +399,18 @@ file_editor_tab::save_file (QString save
 {
   // it is a new file with the name "<unnamed>" -> call saveFielAs
   if (saveFileName == UNNAMED_FILE || saveFileName.isEmpty ())
     {
       return save_file_as();
     }
 
   QStringList watched_files = _file_system_watcher.files();
-  _file_system_watcher.removePaths(watched_files);
+  if (!watched_files.isEmpty ())
+    _file_system_watcher.removePaths(watched_files);
 
   // open the file for writing
   QFile file (saveFileName);
   if (!file.open (QFile::WriteOnly))
     {
       QMessageBox::warning (this, tr ("Octave Editor"),
                             tr ("Could not open file %1 for write:\n%2.").
                             arg (saveFileName).arg (file.errorString ()));
@@ -422,17 +423,18 @@ file_editor_tab::save_file (QString save
   QApplication::setOverrideCursor (Qt::WaitCursor);
   out << _edit_area->text ();
   QApplication::restoreOverrideCursor ();
   _file_name = saveFileName; // save file name for later use
   update_window_title (false);      // set the window title to actual file name (not modified)
   _edit_area->setModified (false); // files is save -> not modified
   file.close();
 
-  _file_system_watcher.addPaths (watched_files);
+  if (!watched_files.isEmpty ())
+    _file_system_watcher.addPaths (watched_files);
   return true;
 }
 
 bool
 file_editor_tab::save_file_as ()
 {
   QString saveFileName(_file_name);
   QFileDialog fileDialog(this);
diff --git a/gui/src/symbol-information.h b/gui/src/symbol-information.h
--- a/gui/src/symbol-information.h
+++ b/gui/src/symbol-information.h
@@ -127,22 +127,24 @@ typedef struct symbol_information
       _value = QString ("%1").arg (ov.scalar_value ());
     else if (ov.is_complex_scalar ())
       _value = QString ("%1 + %2i").arg (ov.scalar_value ())
                                    .arg (ov.complex_value ().imag ());
     else if (ov.is_range ())
       _value =  QString ("%1 : %2 : %3").arg (ov.range_value ().base ())
                                         .arg (ov.range_value ().inc ())
                                         .arg (ov.range_value ().limit ());
-    else if (ov.is_real_matrix ())
+    else if (ov.is_matrix_type())
       _value = QString ("%1x%2").arg (ov.rows ())
                                 .arg (ov.columns ());
-    else if (ov.is_complex_matrix ())
+    else if (ov.is_cell())
       _value = QString ("%1x%2").arg (ov.rows ())
                                 .arg (ov.columns ());
+    else if (ov.is_bool_type () && !ov.is_matrix_type())
+      _value = ov.bool_value () ? "true" : "false";
     else
       _value = QString ("<Type not recognized>");
 
     _value.replace("\n", "\\n");
     return true;
   }
 } symbol_information;
 
