# HG changeset patch
# User jwe
# Date 857036163 0
#      Thu Feb 27 09:36:03 1997 +0000
# Node ID 0ad1a978082a088f9e8bf9f7bfa1889883377e14
# Parent  99dd10f4eaaf5b10e208196ba927b5aebab22986
[project @ 1997-02-27 09:33:49 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+Thu Feb 27 03:34:48 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* texinfo.tex (\codeunder): Maybe make it work for @var{} inside
+	@code{}.
+
 Wed Feb 26 12:03:48 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* refcard/Makefile.in (mostlyclean clean): Delete log files.
 
 	* liboctave/Makefile.in (mostlyclean clean): Delete more stuff.
 
 	* faq/Makefile.in (mostlyclean clean): Delete some stuff.
 
diff --git a/doc/texinfo.tex b/doc/texinfo.tex
--- a/doc/texinfo.tex
+++ b/doc/texinfo.tex
@@ -1,13 +1,12 @@
-%% TeX macros to handle Texinfo files.
-%% $Id: texinfo.tex,v 1.4 1997-02-18 09:08:50 jwe Exp $
+%% TeX macros to handle texinfo files
 
 %  Copyright (C) 1985, 86, 88, 90, 91, 92, 93,
-%                94, 95, 96, 97 Free Software Foundation, Inc.
+%                94, 95, 1996 Free Software Foundation, Inc.
 
 %This texinfo.tex file is free software; you can redistribute it and/or
 %modify it under the terms of the GNU General Public License as
 %published by the Free Software Foundation; either version 2, or (at
 %your option) any later version.
 
 %This texinfo.tex file is distributed in the hope that it will be
 %useful, but WITHOUT ANY WARRANTY; without even the implied warranty
@@ -31,17 +30,17 @@
 
 % Make it possible to create a .fmt file just by loading this file:
 % if the underlying format is not loaded, start by loading it now.
 % Added by gildea November 1993.
 \expandafter\ifx\csname fmtname\endcsname\relax\input plain\fi
 
 % This automatically updates the version number based on RCS.
 \def\deftexinfoversion$#1: #2 ${\def\texinfoversion{#2}}
-\deftexinfoversion$Revision: 1.4 $
+\deftexinfoversion$Revision: 1.5 $
 \message{Loading texinfo package [Version \texinfoversion]:}
 
 % If in a .fmt file, print the version number
 % and turn on active characters that we couldn't do earlier because
 % they might have appeared in the input file name.
 \everyjob{\message{[Texinfo version \texinfoversion]}\message{}
   \catcode`+=\active \catcode`\_=\active}
 
@@ -55,28 +54,30 @@
 \let\ptexdots=\dots
 \let\ptexend=\end
 \let\ptexequiv = \equiv
 \let\ptexi=\i
 \let\ptexlbrace=\{
 \let\ptexrbrace=\}
 \let\ptexstar=\*
 \let\ptext=\t
+\let\ptextilde=\~
 
 % Be sure we're in horizontal mode when doing a tie, since we make space
 % equivalent to this in @example-like environments. Otherwise, a space
 % at the beginning of a line will start with \penalty -- and
 % since \penalty is valid in vertical mode, we'd end up putting the
 % penalty on the vertical list instead of in the new paragraph.
 {\catcode`@ = 11
  % Avoid using \@M directly, because that causes trouble
  % if the definition is written into an index file.
  \global\let\tiepenalty = \@M
  \gdef\tie{\leavevmode\penalty\tiepenalty\ }
 }
+\let\~ = \tie                  % And make it available as @~.
 
 
 \message{Basics,}
 \chardef\other=12
 
 % If this character appears in an error message or help string, it
 % starts a new line in the output.
 \newlinechar = `^^J
@@ -98,18 +99,18 @@
 %
 \def\gobble#1{}
 
 \hyphenation{ap-pen-dix}
 \hyphenation{mini-buf-fer mini-buf-fers}
 \hyphenation{eshell}
 
 % Margin to add to right of even pages, to left of odd pages.
-\newdimen \bindingoffset
-\newdimen \normaloffset
+\newdimen \bindingoffset  
+\newdimen \normaloffset   
 \newdimen\pagewidth \newdimen\pageheight
 
 % Sometimes it is convenient to have everything in the transcript file
 % and nothing on the terminal.  We don't just call \tracingall here,
 % since that produces some useless output on the terminal.
 %
 \def\gloggingall{\begingroup \globaldefs = 1 \loggingall \endgroup}%
 \def\loggingall{\tracingcommands2 \tracingstats2
@@ -130,49 +131,32 @@
 \outerhsize=7in
 %\outervsize=9.5in
 % Alternative @smallbook page size is 9.25in
 \outervsize=9.25in
 \topandbottommargin=.75in
 %
 %---------------------End change-----------------------
 
-% Main output routine.
-\chardef\PAGE = 255
-\output = {\onepageout{\pagecontents\PAGE}}
-
-\newbox\headlinebox  \newbox\footlinebox
-
 % \onepageout takes a vbox as an argument.  Note that \pagecontents
 % does insertions, but you have to call it yourself.
+\chardef\PAGE=255  \output={\onepageout{\pagecontents\PAGE}}
 \def\onepageout#1{%
   \hoffset=\normaloffset
   \ifodd\pageno  \advance\hoffset by \bindingoffset
   \else \advance\hoffset by -\bindingoffset\fi
-  %
-  % Do this outside of the \shipout so @code etc. will be expanded in
-  % the headline as they should be, not taken literally (outputting ''code).
-  \setbox\headlinebox = \vbox{\let\hsize=\pagewidth \makeheadline}%
-  \setbox\footlinebox = \vbox{\let\hsize=\pagewidth \makefootline}%
-  %
   {%
-    % Have to do this stuff outside the \shipout because we want it to
-    % take effect in \write's, yet the group defined by the \vbox ends
-    % before the \shipout runs.
-    %
-    \escapechar = `\\     % use backslash in output files.
-    \indexdummies         % don't expand commands in the output.
-    \normalturnoffactive  % \ in index entries must not stay \, e.g., if
-                   % the page break happens to be in the middle of an example.
+    \escapechar = `\\ % use backslash in output files.
+    \indexdummies
     \shipout\vbox{%
-      \unvbox\headlinebox
+      {\let\hsize=\pagewidth \makeheadline}%
       \pagebody{#1}%
-      \unvbox\footlinebox
+      {\let\hsize=\pagewidth \makefootline}%
     }%
-    }%
+  }%
   \advancepageno
   \ifnum\outputpenalty>-20000 \else\dosupereject\fi
 }
 
 %%%% For @cropmarks command %%%%
 
 % Here is a modification of the main output routine for Near East Publications
 % This provides right-angle cropmarks at all four corners.
@@ -861,19 +845,17 @@ where each line of input produces a line
 % @set VAR REST-OF-LINE sets VAR to the value REST-OF-LINE.
 %
 % Since we want to separate VAR from REST-OF-LINE (which might be
 % empty), we can't just use \parsearg; we have to insert a space of our
 % own to delimit the rest of the line, and then take it out again if we
 % didn't need it.  Make sure the catcode of space is correct to avoid
 % losing inside @example, for instance.
 %
-\def\set{\begingroup\catcode` =10
-  \catcode`\-=12 \catcode`\_=12 % Allow - and _ in VAR.
-  \parsearg\setxxx}
+\def\set{\begingroup\catcode` =10 \parsearg\setxxx}
 \def\setxxx#1{\setyyy#1 \endsetyyy}
 \def\setyyy#1 #2\endsetyyy{%
   \def\temp{#2}%
   \ifx\temp\empty \global\expandafter\let\csname SET#1\endcsname = \empty
   \else \setzzz{#1}#2\endsetzzz % Remove the trailing space \setxxx inserted.
   \fi
   \endgroup
 }
@@ -884,26 +866,20 @@ where each line of input produces a line
 
 % @clear VAR clears (i.e., unsets) the variable VAR.
 %
 \def\clear{\parsearg\clearxxx}
 \def\clearxxx#1{\global\expandafter\let\csname SET#1\endcsname=\relax}
 
 % @value{foo} gets the text saved in variable foo.
 %
-\def\value{\begingroup
-  \catcode`\-=12 \catcode`\_=12 % Allow - and _ in VAR.
-  \valuexxx}
-\def\valuexxx#1{%
-  \expandafter\ifx\csname SET#1\endcsname\relax
-    {\{No value for ``#1''\}}%
-  \else
-    \csname SET#1\endcsname
-  \fi
-\endgroup}
+\def\value#1{\expandafter
+                \ifx\csname SET#1\endcsname\relax
+                        {\{No value for ``#1''\}}
+                \else \csname SET#1\endcsname \fi}
 
 % @ifset VAR ... @end ifset reads the `...' iff VAR has been defined
 % with @set.
 %
 \def\ifset{\parsearg\ifsetxxx}
 \def\ifsetxxx #1{%
   \expandafter\ifx\csname SET#1\endcsname\relax
     \expandafter\ifsetfail
@@ -946,17 +922,18 @@ where each line of input produces a line
 \def\conditionalsucceed#1{%
   \edef\temp{%
     % Remember the current value of \E#1.
     \let\nece{prevE#1} = \nece{E#1}%
     %
     % At the `@end #1', redefine \E#1 to be its previous value.
     \def\nece{E#1}{\let\nece{E#1} = \nece{prevE#1}}%
   }%
-  \temp}
+  \temp
+}
 
 % We need to expand lots of \csname's, but we don't want to expand the
 % control sequences after we've constructed them.
 %
 \def\nece#1{\expandafter\noexpand\csname#1\endcsname}
 
 % @asis just yields its argument.  Used with @table, for example.
 %
@@ -1307,33 +1284,28 @@ where each line of input produces a line
 % Unfortunately, TeX uses one parameter (\hyphenchar) to control
 % both hyphenation at - and hyphenation within words.
 % We must therefore turn them both off (\tclose does that)
 % and arrange explicitly to hyphenate at a dash.
 %  -- rms.
 {
 \catcode`\-=\active
 \catcode`\_=\active
-\catcode`\|=\active
 \global\def\code{\begingroup \catcode`\-=\active \let-\codedash \catcode`\_=\active \let_\codeunder \codex}
 % The following is used by \doprintindex to insure that long function names
 % wrap around.  It is necessary for - and _ to be active before the index is
 % read from the file, as \entry parses the arguments long before \code is
 % ever called.  -- mycroft
-% _ is always active; and it shouldn't be \let = to an _ that is a
-% subscript character anyway. Then, @cindex @samp{_} (for example)
-% fails.  --karl
-\global\def\indexbreaks{%
-  \catcode`\-=\active \let-\realdash
-}
+\global\def\indexbreaks{\catcode`\-=\active \let-\realdash \catcode`\_=\active \let_\realunder}
 }
 
 \def\realdash{-}
+\def\realunder{_}
 \def\codedash{-\discretionary{}{}{}}
-\def\codeunder{\normalunderscore\discretionary{}{}{}}
+\def\codeunder{\ifusingtt{\normalunderscore\discretionary{}{}{}}{\_}}
 \def\codex #1{\tclose{#1}\endgroup}
 
 %\let\exp=\tclose  %Was temporary
 
 % @kbd is like @code, except that if the argument is just one @key command,
 % then @kbd has no effect.
 %
 \def\xkey{\key}
@@ -1341,17 +1313,17 @@ where each line of input produces a line
 \ifx\one\xkey\ifx\threex\three \key{#2}%
 \else{\tclose{\ttsl\look}}\fi
 \else{\tclose{\ttsl\look}}\fi}
 
 % Check if we are currently using a typewriter font.  Since all the
 % Computer Modern typewriter fonts have zero interword stretch (and
 % shrink), and it is reasonable to expect all typewriter fonts to have
 % this property, we can check that font parameter.
-%
+% 
 \def\ifmonospace{\ifdim\fontdimen3\font=0pt }
 
 % Typeset a dimension, e.g., `in' or `pt'.  The only reason for the
 % argument is to make the input look right: @dmn{pt} instead of
 % @dmn{}pt.
 %
 \def\dmn#1{\thinspace #1}
 
@@ -1902,17 +1874,17 @@ July\or August\or September\or October\o
 % Contents of each column will wrap at width given in preamble.  Width
 % can be specified either with sample text given in a template line,
 % or in percent of \hsize, the current width of text on page.
 
 % Table can continue over pages but will only break between lines.
 
 % To make preamble:
 %
-% Either define widths of columns in terms of percent of \hsize:
+% Either define widths of columns in terms of percent of \hsize: 
 %   @multitable @columnfractions .25 .3 .45
 %   @item ...
 %
 %   Numbers following @columnfractions are the percent of the total
 %   current hsize to be used for each column. You may use as many
 %   columns as desired.
 
 
@@ -1920,57 +1892,57 @@ July\or August\or September\or October\o
 %   @multitable {Column 1 template} {Column 2 template} {Column 3 template}
 %   @item ...
 %   using the widest term desired in each column.
 %
 % For those who want to use more than one line's worth of words in
 % the preamble, break the line within one argument and it
 % will parse correctly, i.e.,
 %
-%     @multitable {Column 1 template} {Column 2 template} {Column 3
+%     @multitable {Column 1 template} {Column 2 template} {Column 3 
 %      template}
 % Not:
-%     @multitable {Column 1 template} {Column 2 template}
+%     @multitable {Column 1 template} {Column 2 template} 
 %      {Column 3 template}
 
-% Each new table line starts with @item, each subsequent new column
+% Each new table line starts with @item, each subsequent new column 
 % starts with @tab. Empty columns may be produced by supplying @tab's
 % with nothing between them for as many times as empty columns are needed,
 % ie, @tab@tab@tab will produce two empty columns.
 
 % @item, @tab, @multitable or @end multitable do not need to be on their
 % own lines, but it will not hurt if they are.
 
 % Sample multitable:
 
 %   @multitable {Column 1 template} {Column 2 template} {Column 3 template}
 %   @item first col stuff @tab second col stuff @tab third col
-%   @item
-%   first col stuff
-%   @tab
-%   second col stuff
-%   @tab
-%   third col
-%   @item first col stuff @tab second col stuff
+%   @item 
+%   first col stuff 
+%   @tab 
+%   second col stuff 
+%   @tab 
+%   third col 
+%   @item first col stuff @tab second col stuff 
 %   @tab Many paragraphs of text may be used in any column.
-%
+%     
 %         They will wrap at the width determined by the template.
 %   @item@tab@tab This will be in third column.
 %   @end multitable
 
 % Default dimensions may be reset by user.
 % @multitableparskip is vertical space between paragraphs in table.
 % @multitableparindent is paragraph indent in table.
 % @multitablecolmargin is horizontal space to be left between columns.
 % @multitablelinespace is space to leave between table items, baseline
 %                                                            to baseline.
 %   0pt means it depends on current normal line spacing.
 
 %%%%
-% Dimensions
+% Dimensions 
 
 \newskip\multitableparskip
 \newskip\multitableparindent
 \newdimen\multitablecolspace
 \newskip\multitablelinespace
 \multitableparskip=0pt
 \multitableparindent=6pt
 \multitablecolspace=12pt
@@ -2030,76 +2002,64 @@ July\or August\or September\or October\o
 \parskip=\multitableparskip
 \parindent=\multitableparindent
 \overfullrule=0pt
 \global\colcount=0\relax%
 \def\Emultitable{\global\setpercentfalse\global\everycr{}\cr\egroup\egroup}%
  % To parse everything between @multitable and @item :
 \setuptable#1 \endsetuptable
  % Need to reset this to 0 after \setuptable.
-\global\colcount=0\relax%
+\global\colcount=0\relax% 
  %
  % This preamble sets up a generic column definition, which will
  % be used as many times as user calls for columns.
- % \vtop will set a single line and will also let text wrap and
+ % \vtop will set a single line and will also let text wrap and 
  % continue for many paragraphs if desired.
 \halign\bgroup&\global\advance\colcount by 1\relax%
 \multistrut\vtop{\hsize=\expandafter\csname col\the\colcount\endcsname
  % In order to keep entries from bumping into each other
  % we will add a \leftskip of \multitablecolspace to all columns after
  % the first one.
- %  If a template has been used, we will add \multitablecolspace
+ %  If a template has been used, we will add \multitablecolspace 
  % to the width of each template entry.
  %  If user has set preamble in terms of percent of \hsize
  % we will use that dimension as the width of the column, and
  % the \leftskip will keep entries from bumping into each other.
  % Table will start at left margin and final column will justify at
  % right margin.
 \ifnum\colcount=1
 \else
   \ifsetpercent
   \else
    % If user has <not> set preamble in terms of percent of \hsize
-   % we will advance \hsize by \multitablecolspace
+   % we will advance \hsize by \multitablecolspace 
   \advance\hsize by \multitablecolspace
   \fi
  % In either case we will make \leftskip=\multitablecolspace:
 \leftskip=\multitablecolspace
 \fi
- % Ignoring space at the beginning and end avoids an occasional spurious
- % blank line, when TeX decides to break the line at the space before the
- % box from the multistrut, so the strut ends up on a line by itself.
- % For example:
- % @multitable @columnfractions .11 .89
- % @item @code{#}
- % @tab Legal holiday which is valid in major parts of the whole country.
- % Is automatically provided with highlighting sequences respectively marking
- % characters.
- \noindent\ignorespaces##\unskip\multistrut}\cr
+\noindent##\multistrut}\cr%
  % \everycr will reset column counter, \colcount, at the end of
- % each line. Every column  entry will cause \colcount to advance by one.
+ % each line. Every column  entry will cause \colcount to advance by one. 
  % The table preamble
  % looks at the current \colcount to find the correct column width.
 \global\everycr{\noalign{%
-% \filbreak%% keeps underfull box messages off when table breaks over pages.
-% Maybe so, but it also creates really weird page breaks when the table
-% breaks over pages Wouldn't \vfil be better?  Wait until the problem
-% manifests itself, so it can be fixed for real --karl.
+\filbreak%% keeps underfull box messages off when table breaks over pages.
 \global\colcount=0\relax}}
 }
 
 \def\setmultitablespacing{% test to see if user has set \multitablelinespace.
 % If so, do nothing. If not, give it an appropriate dimension based on
 % current baselineskip.
 \ifdim\multitablelinespace=0pt
 %% strut to put in table in case some entry doesn't have descenders,
 %% to keep lines equally spaced
 \let\multistrut = \strut
 %% Test to see if parskip is larger than space between lines of
-%% table. If not, do nothing.
+%% table. If not, do nothing. 
 %%        If so, set to same dimension as multitablelinespace.
 \else
 \gdef\multistrut{\vrule height\multitablelinespace depth\dp0
 width0pt\relax} \fi
 \ifdim\multitableparskip>\multitablelinespace
 \global\multitableparskip=\multitablelinespace
 \global\advance\multitableparskip-7pt %% to keep parskip somewhat smaller
                                       %% than skip between lines in the table.
@@ -2331,17 +2291,17 @@ width0pt\relax} \fi
     \insert\margin{\hbox{\vrule height8pt depth3pt width0pt #2}}%
   \fi
   {%
     \count255=\lastpenalty
     {%
       \indexdummies % Must do this here, since \bf, etc expand at this stage
       \escapechar=`\\
       {%
-        \let\folio=0% We will expand all macros now EXCEPT \folio.
+        \let\folio=0 % We will expand all macros now EXCEPT \folio.
         \def\rawbackslashxx{\indexbackslash}% \indexbackslash isn't defined now
         % so it will be output as is; and it will print as backslash.
         %
         % First process the index-string with all font commands turned off
         % to get the string to sort by.
         {\indexnofonts \xdef\indexsorttmp{#2}}%
         %
         % Now produce the complete index entry, with both the sort key and the
@@ -2605,17 +2565,17 @@ width0pt\relax} \fi
   \hsize = \doublecolumnhsize
   \wd0=\hsize \wd2=\hsize \hbox to\pagewidth{\box0\hfil\box2}%
 }
 \def\enddoublecolumns{%
   \output={\balancecolumns}\eject % split what we have
   \endgroup
   % Back to normal single-column typesetting, but take account of the
   % fact that we just accumulated some stuff on the output page.
-  \pagegoal=\vsize
+  \pagegoal=\vsize 
 }
 \def\balancecolumns{%
   % Called on the last page of the double column material.
   \setbox0=\vbox{\unvbox255}%
   \dimen@ = \ht0
   \advance\dimen@ by \topskip
   \advance\dimen@ by-\baselineskip
   \divide\dimen@ by 2
@@ -3131,17 +3091,17 @@ width0pt\relax} \fi
 % Subsubsection titles.
 \let\subsubsecheadingskip = \subsecheadingskip
 \let\subsubsecheadingbreak = \subsecheadingbreak
 \def\subsubsecheading#1#2#3#4#5{\sectionheading{subsubsec}{#2.#3.#4.#5}{#1}}
 \def\plainsubsubsecheading#1{\sectionheading{subsubsec}{}{#1}}
 
 
 % Print any size section title.
-%
+% 
 % #1 is the section type (sec/subsec/subsubsec), #2 is the section
 % number (maybe empty), #3 the text.
 \def\sectionheading#1#2#3{%
   {%
     \expandafter\advance\csname #1headingskip\endcsname by \parskip
     \csname #1headingbreak\endcsname
   }%
   {%
@@ -3383,23 +3343,24 @@ width0pt\relax} \fi
 \catcode`\"=12
 \catcode`\==12
 \catcode`\|=12
 \catcode`\<=12
 \catcode`\>=12
 \escapechar=`\\
 %
 \let\,=\ptexcomma
+\let\~=\ptextilde
 \let\{=\ptexlbrace
 \let\}=\ptexrbrace
 \let\.=\ptexdot
 \let\*=\ptexstar
-\let\dots=\ptexdots%
-\def\endldots{\mathinner{\ldots\ldots\ldots\ldots}}%
-\def\enddots{\relax\ifmmode\endldots\else$\mathsurround=0pt \endldots\,$\fi}%
+\let\dots=\ptexdots
+\def\endldots{\mathinner{\ldots\ldots\ldots\ldots}}
+\def\enddots{\relax\ifmmode\endldots\else$\mathsurround=0pt \endldots\,$\fi}
 \def\@{@}%
 \let\bullet=\ptexbullet
 \let\b=\ptexb \let\c=\ptexc \let\i=\ptexi \let\t=\ptext
 %
 \let\Etex=\endgroup}
 
 % Define @lisp ... @endlisp.
 % @lisp does a \begingroup so it can rebind things,
@@ -3763,17 +3724,17 @@ width0pt\relax} \fi
 \advance\leftskip by \defbodyindent \advance \rightskip by \defbodyindent
 \exdentamount=\defbodyindent
 \begingroup %
 \catcode 61=\active %
 \obeylines\spacesplit#3}
 
 % This is used for \def{tp,vr}parsebody.  It could probably be used for
 % some of the others, too, with some judicious conditionals.
-%
+% 
 \def\parsebodycommon#1#2#3{%
   \begingroup\inENV %
   \medbreak %
   % Define the end token that this defining construct specifies
   % so that it will exit this group.
   \def#1{\endgraf\endgroup\medbreak}%
   \def#2##1 {\begingroup\obeylines\spacesplit{#3{##1}}}%
   \parindent=0in
@@ -3797,26 +3758,27 @@ width0pt\relax} \fi
 % won't strip off the braces.
 %
 \def\deftpparsebody #1#2#3#4 {%
   \parsebodycommon{#1}{#2}{#3}%
   \spacesplit{\parsetpheaderline{#3{#4}}}\empty
 }
 
 % Fine, but then we have to eventually remove the \empty *and* the
-% braces (if any).  That's what this does.
-%
-\def\removeemptybraces\empty#1\relax{#1}
+% braces (if any).  That's what this does, putting the result in \tptemp.
+% 
+\def\removeemptybraces\empty#1\relax{\def\tptemp{#1}}%
 
 % After \spacesplit has done its work, this is called -- #1 is the final
 % thing to call, #2 the type name (which starts with \empty), and #3
 % (which might be empty) the arguments.
-%
+% 
 \def\parsetpheaderline#1#2#3{%
-  #1{\removeemptybraces#2\relax}{#3}%
+  \removeemptybraces#2\relax
+  #1{\tptemp}{#3}%
 }%
 
 \def\defopvarparsebody #1#2#3#4#5 {\begingroup\inENV %
 \medbreak %
 % Define the end token that this defining construct specifies
 % so that it will exit this group.
 \def#1{\endgraf\endgroup\medbreak}%
 \def#2##1 ##2 {\def#4{##1}%
@@ -4040,31 +4002,29 @@ width0pt\relax} \fi
 \begingroup\defname {#1}{User Option}%
 \defvarargs {#2}\endgroup %
 }
 
 % @deftypevar int foobar
 
 \def\deftypevar{\defvarparsebody\Edeftypevar\deftypevarx\deftypevarheader}
 
-% #1 is the data type.  #2 is the name, perhaps followed by text that
-% is actually part of the data type, which should not be put into the index.
+% #1 is the data type.  #2 is the name.
 \def\deftypevarheader #1#2{%
-\dovarind#2 \relax% Make entry in variables index
+\doind {vr}{\code{#2}}% Make entry in variables index
 \begingroup\defname {\defheaderxcond#1\relax$$$#2}{Variable}%
 \interlinepenalty=10000
 \endgraf\penalty 10000\vskip -\parskip\penalty 10000
 \endgroup}
-\def\dovarind#1 #2\relax{\doind{vr}{\code{#1}}}
 
 % @deftypevr {Global Flag} int enable
 
 \def\deftypevr{\defvrparsebody\Edeftypevr\deftypevrx\deftypevrheader}
 
-\def\deftypevrheader #1#2#3{\dovarind#3 \relax%
+\def\deftypevrheader #1#2#3{\doind {vr}{\code{#3}}%
 \begingroup\defname {\defheaderxcond#2\relax$$$#3}{#1}
 \interlinepenalty=10000
 \endgraf\penalty 10000\vskip -\parskip\penalty 10000
 \endgroup}
 
 % This definition is run if you use @defvarx
 % anywhere other than immediately after a @defvar or @defvarx.
 
@@ -4177,17 +4137,17 @@ width0pt\relax} \fi
     \turnoffactive \putwordpage\tie\refx{#1-pg}{}%
   \fi
 \endgroup}
 
 % \dosetq is the interface for calls from other macros
 
 % Use \turnoffactive so that punctuation chars such as underscore
 % work in node names.
-\def\dosetq #1#2{{\let\folio=0 \turnoffactive
+\def\dosetq #1#2{{\let\folio=0 \turnoffactive \auxhat%
 \edef\next{\write\auxfile{\internalsetq {#1}{#2}}}%
 \next}}
 
 % \internalsetq {foo}{page} expands into
 % CHARACTERS 'xrdef {foo}{...expansion of \Ypage...}
 % When the aux file is read, ' is the escape character
 
 \def\internalsetq #1#2{'xrdef {#1}{\csname #2\endcsname}}
@@ -4246,111 +4206,94 @@ width0pt\relax} \fi
     \fi
   \else
     % It's defined, so just use it.
     \csname X#1\endcsname
   \fi
   #2% Output the suffix in any case.
 }
 
+% Read the last existing aux file, if any.  No error if none exists.
+
 % This is the macro invoked by entries in the aux file.
-\def\xrdef #1#2{{%
-  \catcode`\'=\other
-  \expandafter\gdef\csname X#1\endcsname{#2}%
-}}
-
-% Read the last existing aux file, if any.  No error if none exists.
-\def\readauxfile{\begingroup
-  \catcode`\^^@=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\^^C=\other
-  \catcode`\^^D=\other
-  \catcode`\^^E=\other
-  \catcode`\^^F=\other
-  \catcode`\^^G=\other
-  \catcode`\^^H=\other
-  \catcode`\=\other
-  \catcode`\^^L=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode`\=\other
-  \catcode26=\other
-  \catcode`\^^[=\other
-  \catcode`\^^\=\other
-  \catcode`\^^]=\other
-  \catcode`\^^^=\other
-  \catcode`\^^_=\other
-  \catcode`\@=\other
-  \catcode`\^=\other
-  % It was suggested to define this as 7, which would allow ^^e4 etc.
-  % in xref tags, i.e., node names.  But since ^^e4 notation isn't
-  % supported in the main text, it doesn't seem desirable.  Furthermore,
-  % that is not enough: for node names that actually contain a ^
-  % character, we would end up writing a line like this: 'xrdef {'hat
-  % b-title}{'hat b} and \xrdef does a \csname...\endcsname on the first
-  % argument, and \hat is not an expandable control sequence.  It could
-  % all be worked out, but why?  Either we support ^^ or we don't.
-  %
-  % The other change necessary for this was to define \auxhat:
-  % \def\auxhat{\def^{'hat }}% extra space so ok if followed by letter
-  % and then to call \auxhat in \setq.
-  %
-  \catcode`\~=\other
-  \catcode`\[=\other
-  \catcode`\]=\other
-  \catcode`\"=\other
-  \catcode`\_=\other
-  \catcode`\|=\other
-  \catcode`\<=\other
-  \catcode`\>=\other
-  \catcode`\$=\other
-  \catcode`\#=\other
-  \catcode`\&=\other
-  % `\+ does not work, so use 43.
-  \catcode43=\other
-  % Make the characters 128-255 be printing characters
-  {%
-    \count 1=128
-    \def\loop{%
-      \catcode\count 1=\other
-      \advance\count 1 by 1
-      \ifnum \count 1<256 \loop \fi
-    }%
+\def\xrdef #1#2{
+{\catcode`\'=\other\expandafter \gdef \csname X#1\endcsname {#2}}}
+
+\def\readauxfile{%
+\begingroup
+\catcode `\^^@=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\^^C=\other
+\catcode `\^^D=\other
+\catcode `\^^E=\other
+\catcode `\^^F=\other
+\catcode `\^^G=\other
+\catcode `\^^H=\other
+\catcode `\=\other
+\catcode `\^^L=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode `\=\other
+\catcode 26=\other
+\catcode `\^^[=\other
+\catcode `\^^\=\other
+\catcode `\^^]=\other
+\catcode `\^^^=\other
+\catcode `\^^_=\other
+\catcode `\@=\other
+\catcode `\^=\other
+\catcode `\~=\other
+\catcode `\[=\other
+\catcode `\]=\other
+\catcode`\"=\other
+\catcode`\_=\other
+\catcode`\|=\other
+\catcode`\<=\other
+\catcode`\>=\other
+\catcode `\$=\other
+\catcode `\#=\other
+\catcode `\&=\other
+% `\+ does not work, so use 43.
+\catcode 43=\other
+% Make the characters 128-255 be printing characters
+{%
+  \count 1=128
+  \def\loop{%
+    \catcode\count 1=\other
+    \advance\count 1 by 1
+    \ifnum \count 1<256 \loop \fi
   }%
-  % The aux file uses ' as the escape (for now).
-  % Turn off \ as an escape so we do not lose on
-  % entries which were dumped with control sequences in their names.
-  % For example, 'xrdef {$\leq $-fun}{page ...} made by @defun ^^
-  % Reference to such entries still does not work the way one would wish,
-  % but at least they do not bomb out when the aux file is read in.
-  \catcode`\{=1
-  \catcode`\}=2
-  \catcode`\%=\other
-  \catcode`\'=0
-  \catcode`\\=\other
-  %
-  \openin 1 \jobname.aux
-  \ifeof 1 \else
-    \closein 1
-    \input \jobname.aux
-    \global\havexrefstrue
-    \global\warnedobstrue
-  \fi
-  % Open the new aux file.  TeX will close it automatically at exit.
-  \openout\auxfile=\jobname.aux
+}%
+% the aux file uses ' as the escape.
+% Turn off \ as an escape so we do not lose on
+% entries which were dumped with control sequences in their names.
+% For example, 'xrdef {$\leq $-fun}{page ...} made by @defun ^^
+% Reference to such entries still does not work the way one would wish,
+% but at least they do not bomb out when the aux file is read in.
+\catcode `\{=1 \catcode `\}=2
+\catcode `\%=\other
+\catcode `\'=0
+\catcode`\^=7 % to make ^^e4 etc usable in xref tags 
+\catcode `\\=\other
+\openin 1 \jobname.aux
+\ifeof 1 \else \closein 1 \input \jobname.aux \global\havexrefstrue
+\global\warnedobstrue
+\fi
+% Open the new aux file.  Tex will close it automatically at exit.
+\openout \auxfile=\jobname.aux
 \endgroup}
 
 
 % Footnotes.
 
 \newcount \footnoteno
 
 % The trailing space in the following definition for supereject is
@@ -4381,21 +4324,17 @@ width0pt\relax} \fi
   \unskip
   \thisfootno\@sf
   \footnotezzz
 }%
 
 % Don't bother with the trickery in plain.tex to not require the
 % footnote text as a parameter.  Our footnotes don't need to be so general.
 %
-% Oh yes, they do; otherwise, @ifset and anything else that uses
-% \parseargline fail inside footnotes because the tokens are fixed when
-% the footnote is read.  --karl, 16nov96.
-%
-\long\gdef\footnotezzz{\insert\footins\bgroup
+\long\gdef\footnotezzz#1{\insert\footins{%
   % We want to typeset this text as a normal paragraph, even if the
   % footnote reference occurs in (for example) a display environment.
   % So reset some parameters.
   \interlinepenalty\interfootnotelinepenalty
   \splittopskip\ht\strutbox % top baseline for broken footnotes
   \splitmaxdepth\dp\strutbox
   \floatingpenalty\@MM
   \leftskip\z@skip
@@ -4407,23 +4346,18 @@ width0pt\relax} \fi
   % Hang the footnote text off the number.
   \hang
   \textindent{\thisfootno}%
   %
   % Don't crash into the line above the footnote text.  Since this
   % expands into a box, it must come within the paragraph, lest it
   % provide a place where TeX can split the footnote.
   \footstrut
-  \futurelet\next\fo@t
+  #1\strut}%
 }
-\def\fo@t{\ifcat\bgroup\noexpand\next \let\next\f@@t
-  \else\let\next\f@t\fi \next}
-\def\f@@t{\bgroup\aftergroup\@foot\let\next}
-\def\f@t#1{#1\@foot}
-\def\@foot{\strut\egroup}
 
 }%end \catcode `\@=11
 
 % Set the baselineskip to #1, and the lineskip and strut size
 % correspondingly.  There is no deep meaning behind these magic numbers
 % used as factors; they just match (closely enough) what Knuth defined.
 %
 \def\lineskipfactor{.08333}
@@ -4645,16 +4579,17 @@ width0pt\relax} \fi
 
 \catcode`\"=\active
 \def\activedoublequote{{\tt \char '042}}
 \let"=\activedoublequote
 \catcode`\~=\active
 \def~{{\tt \char '176}}
 \chardef\hat=`\^
 \catcode`\^=\active
+\def\auxhat{\def^{'hat}}
 \def^{{\tt \hat}}
 
 \catcode`\_=\active
 \def_{\ifusingtt\normalunderscore\_}
 % Subroutine for the previous macro.
 \def\_{\leavevmode \kern.06em \vbox{\hrule width.3em height.1ex}}
 
 \catcode`\|=\active
diff --git a/test/octave.test/io/binary-io-1.m b/test/octave.test/io/binary-io-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/io/binary-io-1.m
@@ -0,0 +1,40 @@
+type_list = ["char"; "char*1"; "integer*1"; "int8"; 
+	     "schar"; "signed char"; "uchar"; "unsigned char";
+	     "short"; "ushort"; "unsigned short"; "int";
+	     "uint"; "unsigned int"; "long"; "ulong"; "unsigned long";
+	     "float"; "float32"; "real*4"; "double"; "float64";
+	     "real*8"; "int16"; "integer*2"; "int32"; "integer*4"];
+
+n = rows (type_list);
+
+nm = tmpnam ();
+
+id = fopen (nm, "w");
+
+if (id > 0)
+
+  for i = 1:n
+    fwrite (id, i, deblank (type_list(i,:)));
+  endfor
+
+  fclose (id);
+
+  id = fopen (nm, "r");
+
+  if (id > 0)
+
+    x = zeros (1, n);
+
+    for i = 1:n
+      x(i) = fread (id, [1, 1], deblank (type_list(i,:)));
+    endfor
+
+    if (x == 1:n)
+      printf ("ok\n");
+    endif
+
+  endif
+
+endif
+
+unlink (nm);
diff --git a/test/octave.test/io/file-io-1.m b/test/octave.test/io/file-io-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/io/file-io-1.m
@@ -0,0 +1,6 @@
+## fputs
+## fgetl
+## fgets
+## fprintf
+## fscanf
+
diff --git a/test/octave.test/io/file-pos-1.m b/test/octave.test/io/file-pos-1.m
new file mode 100644
--- /dev/null
+++ b/test/octave.test/io/file-pos-1.m
@@ -0,0 +1,35 @@
+nm = tmpnam ();
+id = fopen (nm, "w");
+if (id > 0)
+  fprintf (id, "%d\n", 1:100);
+  fclose (id);
+  id = fopen (nm, "r");
+  if (id > 0)
+    for i = 1:101
+      fgets (id);
+    endfor
+    if (feof (id))
+      fclose (id);
+      id = fopen (nm, "r");
+      pos_one = ftell (id);
+      s_one = fgets (id);
+      for i = 1:48
+	s = fgets (id);
+      endfor
+      pos_fifty = ftell (id);
+      s_fifty = fgets (id);
+      fseek (id, pos_one, SEEK_SET);
+      s_one_x = fgets (id);
+      fseek (id, pos_fifty, SEEK_SET);
+      s_fifty_x = fgets (id);
+      if (s_one == s_one_x && s_fifty == s_fifty_x)
+	frewind (id);
+	s_one_x = fgets (id);
+	if (s_one == s_one_x)
+	  printf ("ok\n");
+	endif
+      endif
+    endif
+  endif
+endif
+unlink (nm);	  
diff --git a/test/octave.test/io/io.exp b/test/octave.test/io/io.exp
--- a/test/octave.test/io/io.exp
+++ b/test/octave.test/io/io.exp
@@ -1,13 +1,19 @@
 ## The following functions need to have tests written for them:
 
 # disp
 # save
 # load
+# fputs
+# fgetl
+# fgets
+# fprintf
+# fscanf
+# ferror
 
 set test puts-1
 set prog_output "foo\nans = 0"
 do_test puts-1.m
 
 set test puts-2
 set prog_output "ans = -1"
 do_test puts-2.m
@@ -95,40 +101,27 @@ do_test fclose-2.m
 set test tmpnam-1
 set prog_output "ans = 1"
 do_test tmpnam-1.m
 
 set test tmpnam-2
 set prog_output "\n... tmpnam:.*"
 do_test tmpnam-2.m
 
-# set test file-io-1
-# set prog_output "ans = 1"
-# do_test file-io-1.m
-
-# set test binary-io-1
-# set prog_output "ans = 1"
-# do_test binary-io-1.m
-
-# set test file-pos-1
-# set prog_output "ans = 1"
-# do_test file-pos-1.m
+## set test file-io-1
+## set prog_output "ok"
+## do_test file-io-1.m
 
-# fputs
-# fgetl
-# fgets
-# fprintf
-# fscanf
-# fread
-# fwrite
-# feof
-# ferror
-# ftell
-# fseek
-# frewind
+set test binary-io-1
+set prog_output "ok"
+do_test binary-io-1.m
+
+set test file-pos-1
+set prog_output "ok"
+do_test file-pos-1.m
 
 set test fputs-1
 set prog_output "\n... fputs:.*"
 do_test fputs-1.m
 
 set test fputs-2
 set prog_output "\n... fputs:.*"
 do_test fputs-2.m
