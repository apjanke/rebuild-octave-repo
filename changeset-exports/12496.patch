# HG changeset patch
# User Konstantinos Poulios <logari81@gmail.com>
# Date 1299157459 -3600
#      Thu Mar 03 14:04:19 2011 +0100
# Node ID 245b5efb07c2b1b9cf395441d6291ea2fd2d36cc
# Parent  4675ce154a557582f5cc823057c07bb5ad0c92c3
fix axes position synchronization for long text objects

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2011-03-03  Konstantinos Poulios  <logari81@googlemail.com>
+
+	* graphics.h.in (axes::properties::get_extent): Add new optional
+	argument for ignoring the length of text objects.
+	* graphics.cc (axes::properties::get_extent): Add the possibility
+	of ignoring the length of text objects.
+	(axes::properties::calc_tightbox): Take only text height into
+	account for the calculation of the tight box.
+
 2011-02-26  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* DLD-FUNCTIONS/__init_fltk__.cc (plot_window::plot_window):
 	Move canvas allocation after the configuration of the menubar.
 	(plot_window::show_menubar, plot_window::hide_menubar):
 	Simplify source code.
 
 2011-02-26  Rik  <octave@nomad.inbox5.com>
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3236,17 +3236,17 @@ axes::properties::init (void)
 }
 
 Matrix
 axes::properties::calc_tightbox (const Matrix& init_pos)
 {
   Matrix pos = init_pos;
   graphics_object obj = gh_manager::get_object (get_parent ());
   Matrix parent_bb = obj.get_properties ().get_boundingbox (true);
-  Matrix ext = get_extent (true);
+  Matrix ext = get_extent (true, true);
   ext(1) = parent_bb(3) - ext(1) - ext(3);
   ext(0)++;
   ext(1)++;
   ext = convert_position (ext, "pixels", get_units (),
                           parent_bb.extract_n (0, 2, 1, 2));
   if (ext(0) < pos(0))
     {
       pos(2) += pos(0)-ext(0);
@@ -4713,17 +4713,17 @@ axes::properties::get_boundingbox (bool 
   pos(0)--;
   pos(1)--;
   pos(1) = parent_bb(3) - pos(1) - pos(3);
 
   return pos;
 }
 
 Matrix
-axes::properties::get_extent (bool with_text) const
+axes::properties::get_extent (bool with_text, bool only_text_height) const
 {
   graphics_xform xform = get_transform ();
 
   Matrix ext (1, 4, 0.0);
   ext(0) = octave_Inf;
   ext(1) = octave_Inf;
   ext(2) = -octave_Inf;
   ext(3) = -octave_Inf;
@@ -4758,20 +4758,38 @@ axes::properties::get_extent (bool with_
             (gh_manager::get_object (text_handle).get_properties ());
 
           if (! text_props.get_string ().empty ())
             {
               Matrix text_ext = text_props.get_extent_matrix ();
               Matrix text_pos = text_props.get_position ().matrix_value ();
               text_pos = xform.transform (text_pos(0), text_pos(1), text_pos(2));
 
-              ext(0) = std::min (ext(0), text_pos(0)+text_ext(0));
-              ext(1) = std::min (ext(1), text_pos(1)-text_ext(1)-text_ext(3));
-              ext(2) = std::max (ext(2), text_pos(0)+text_ext(0)+text_ext(2));
-              ext(3) = std::max (ext(3), text_pos(1)-text_ext(1));
+              bool ignore_horizontal = false;
+              bool ignore_vertical = false;
+              if (only_text_height)
+                {
+                  double text_rotation = text_props.get_rotation();
+                  if (text_rotation == 0. || text_rotation == 180.)
+                      ignore_horizontal = true;
+                  else if (text_rotation == 90. || text_rotation == 270.)
+                      ignore_vertical = true;
+                }
+
+              if (! ignore_horizontal)
+                {
+                  ext(0) = std::min (ext(0), text_pos(0)+text_ext(0));
+                  ext(2) = std::max (ext(2), text_pos(0)+text_ext(0)+text_ext(2));
+                }
+
+              if (! ignore_vertical)
+                {
+                  ext(1) = std::min (ext(1), text_pos(1)-text_ext(1)-text_ext(3));
+                  ext(3) = std::max (ext(3), text_pos(1)-text_ext(1));
+                }
             }
         }
     }
 
   ext(2) = ext(2)-ext(0);
   ext(3) = ext(3)-ext(1);
   
   return ext;
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -3072,17 +3072,17 @@ public:
 
     void remove_child (const graphics_handle& h);
 
     const scaler& get_x_scaler (void) const { return sx; }
     const scaler& get_y_scaler (void) const { return sy; }
     const scaler& get_z_scaler (void) const { return sz; }
 
     Matrix get_boundingbox (bool internal = false) const;
-    Matrix get_extent (bool with_text = false) const;
+    Matrix get_extent (bool with_text = false, bool only_text_height=false) const;
 
     void update_boundingbox (void)
       {
         if (units_is ("normalized"))
           {
             sync_positions ();
             base_properties::update_boundingbox ();
           }
