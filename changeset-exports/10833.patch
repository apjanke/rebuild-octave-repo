# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1280440190 14400
#      Thu Jul 29 17:49:50 2010 -0400
# Node ID e5c7522319858e8122d519fa1b84179b072b17de
# Parent  1b2fcd122c6aa9143e6448065632cf05eca86863
delete set/delete breakpoint functions from tree_if_command and tree_switch_command classes

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2010-07-29  John W. Eaton  <jwe@octave.org>
+
+	* pt-bp.cc (tree_breakpoint::visit_if_command): Also allow
+	breakpoint to be set on command, same as for switch, while, or
+	do-until statments.
+	* pt-select.h, pt-select.cc (tree_if_command::set_breakpoint,
+	tree_if_command::delete_breakpoint, tree_switch_command::set_breakpoint,
+	tree_switch_command::delete_breakpoint): Delete functions and decls.
+	(bug #30490).
+
 2010-07-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov.cc (octave_value::subsref (..., const std::list<octave_lvalue> *)
 	octave_value::do_multi_index_op (..., const std::list<octave_lvalue> *)): 
 	New methods.
 	* ov.h: Declare them.
 	* ov-base.cc (octave_base_value::subsref (..., const std::list<octave_lvalue> *)
 	octave_base_value::do_multi_index_op (..., const std::list<octave_lvalue> *)): 
diff --git a/src/pt-bp.cc b/src/pt-bp.cc
--- a/src/pt-bp.cc
+++ b/src/pt-bp.cc
@@ -209,20 +209,26 @@ void
 tree_breakpoint::visit_if_clause (tree_if_clause&)
 {
   panic_impossible ();
 }
 
 void
 tree_breakpoint::visit_if_command (tree_if_command& cmd)
 {
-  tree_if_command_list *lst = cmd.cmd_list ();
+  if (cmd.line () >= line)
+    take_action (cmd);
 
-  if (lst)
-    lst->accept (*this);
+  if (! found)
+    {
+      tree_if_command_list *lst = cmd.cmd_list ();
+
+      if (lst)
+        lst->accept (*this);
+    }
 }
 
 void
 tree_breakpoint::visit_if_command_list (tree_if_command_list& lst)
 {
   for (tree_if_command_list::iterator p = lst.begin (); p != lst.end (); p++)
     {
       tree_if_clause *t = *p;
diff --git a/src/pt-select.cc b/src/pt-select.cc
--- a/src/pt-select.cc
+++ b/src/pt-select.cc
@@ -88,40 +88,16 @@ tree_if_command_list::accept (tree_walke
 
 tree_if_command::~tree_if_command (void)
 {
   delete list;
   delete lead_comm;
   delete trail_comm;
 }
 
-void
-tree_if_command::set_breakpoint (void)
-{
-  if (list)
-    {
-      tree_if_clause *elt = list->front ();
-
-      if (elt)
-        elt->set_breakpoint ();
-    }
-}
-
-void
-tree_if_command::delete_breakpoint (void)
-{
-  if (list)
-    {
-      tree_if_clause *elt = list->front ();
-
-      if (elt)
-        elt->set_breakpoint ();
-    }
-}
-
 tree_command *
 tree_if_command::dup (symbol_table::scope_id scope,
                       symbol_table::context_id context) const
 {
   return new tree_if_command (list ? list->dup (scope, context) : 0,
                               lead_comm ? lead_comm->dup () : 0,
                               trail_comm ? trail_comm->dup () : 0,
                               line (), column ());
@@ -225,40 +201,16 @@ tree_switch_case_list::accept (tree_walk
 tree_switch_command::~tree_switch_command (void)
 {
   delete expr;
   delete list;
   delete lead_comm;
   delete trail_comm;
 }
 
-void
-tree_switch_command::set_breakpoint (void)
-{
-  if (list)
-    {
-      tree_switch_case *elt = list->front ();
-
-      if (elt)
-        elt->set_breakpoint ();
-    }
-}
-
-void
-tree_switch_command::delete_breakpoint (void)
-{
-  if (list)
-    {
-      tree_switch_case *elt = list->front ();
-
-      if (elt)
-        elt->set_breakpoint ();
-    }
-}
-
 tree_command *
 tree_switch_command::dup (symbol_table::scope_id scope,
                           symbol_table::context_id context) const
 {
   return new tree_switch_command (expr ? expr->dup (scope, context) : 0,
                                   list ? list->dup (scope, context) : 0,
                                   lead_comm ? lead_comm->dup () : 0,
                                   trail_comm ? trail_comm->dup () : 0,
diff --git a/src/pt-select.h b/src/pt-select.h
--- a/src/pt-select.h
+++ b/src/pt-select.h
@@ -128,20 +128,16 @@ public:
     : tree_command (l, c), list (0), lead_comm (0), trail_comm (0) { }
 
   tree_if_command (tree_if_command_list *lst, octave_comment_list *lc,
                    octave_comment_list *tc, int l = -1, int c = -1)
     : tree_command (l, c), list (lst), lead_comm (lc), trail_comm (tc) { }
 
   ~tree_if_command (void);
 
-  void set_breakpoint (void);
-
-  void delete_breakpoint (void);
-
   tree_if_command_list *cmd_list (void) { return list; }
 
   octave_comment_list *leading_comment (void) { return lead_comm; }
 
   octave_comment_list *trailing_comment (void) { return trail_comm; }
 
   tree_command *dup (symbol_table::scope_id scope,
                      symbol_table::context_id context) const;
@@ -265,20 +261,16 @@ public:
   tree_switch_command (tree_expression *e, tree_switch_case_list *lst,
                        octave_comment_list *lc, octave_comment_list *tc, 
                        int l = -1, int c = -1)
     : tree_command (l, c), expr (e), list (lst), lead_comm (lc),
       trail_comm (tc) { }
 
   ~tree_switch_command (void);
 
-  void set_breakpoint (void);
-
-  void delete_breakpoint (void);
-
   tree_expression *switch_value (void) { return expr; }
 
   tree_switch_case_list *case_list (void) { return list; }
 
   octave_comment_list *leading_comment (void) { return lead_comm; }
 
   octave_comment_list *trailing_comment (void) { return trail_comm; }
 
