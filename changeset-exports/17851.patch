# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383624408 18000
#      Mon Nov 04 23:06:48 2013 -0500
# Node ID af685269e06c6b38734db34564499564571cd301
# Parent  45e3250028109bd62340af17438abf9991e68d49
avoid symbol conflicts in display.cc

* sysdep.cc: Include display.h.
(Fhave_window_system): Move here from display.cc.
* display.cc: Don't undef Complex.  Don't include defun.h.

diff --git a/libinterp/corefcn/display.cc b/libinterp/corefcn/display.cc
--- a/libinterp/corefcn/display.cc
+++ b/libinterp/corefcn/display.cc
@@ -29,25 +29,18 @@ along with Octave; see the file COPYING.
 #if defined (OCTAVE_USE_WINDOWS_API)
 #include <windows.h>
 #elif defined (HAVE_FRAMEWORK_CARBON)
 #include <Carbon/Carbon.h>
 #elif defined (HAVE_X_WINDOWS)
 #include <X11/Xlib.h>
 #endif
 
-// X11/Xlib defines this and it conflicts with the Complex typedef in
-// oct-cmplx.h.
-#ifdef Complex
-#undef Complex
-#endif
-
 #include "singleton-cleanup.h"
 
-#include "defun.h"
 #include "display.h"
 #include "error.h"
 
 display_info *display_info::instance = 0;
 
 #if defined (HAVE_FRAMEWORK_CARBON) && ! defined (HAVE_CARBON_CGDISPLAYBITSPERPIXEL)
 // FIXME - This will only work for MacOS > 10.5. For earlier versions
 // this code is not needed (use CGDisplayBitsPerPixel instead).
@@ -188,18 +181,8 @@ display_info::instance_ok (bool query)
     {
       ::error ("unable to create display_info object!");
 
       retval = false;
     }
 
   return retval;
 }
-
-DEFUN (have_window_system, , ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} have_window_system ()\n\
-Return true if Octave a window system is available (X11, Windows,\n\
-or Apple OS X) and false otherwise.\n\
-@end deftypefn")
-{
-  return octave_value (display_info::display_available ());
-}
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -66,16 +66,17 @@ along with Octave; see the file COPYING.
 #include "lo-math.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "quit.h"
 
 #include "Cell.h"
 #include "builtins.h"
 #include "defun.h"
+#include "display.h"
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "ov.h"
 #include "pager.h"
 #include "parse.h"
 #include "sighandlers.h"
 #include "sysdep.h"
@@ -901,8 +902,22 @@ tilde_expand (\"~/bin\")\n\
 %! if (isempty (getenv ("HOME")))
 %!   setenv ("HOME", "foobar");
 %! endif
 %! home = getenv ("HOME");
 %! assert (tilde_expand ("~/foobar"), strcat (home, "/foobar"));
 %! assert (tilde_expand ("/foo/bar"), "/foo/bar");
 %! assert (tilde_expand ("foo/bar"), "foo/bar");
 */
+
+// This function really belongs in display.cc, but including defun.h in
+// that file results in conflicts with symbols from headers that are
+// needed for X11 and Carbon functions.
+
+DEFUN (have_window_system, , ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} have_window_system ()\n\
+Return true if Octave a window system is available (X11, Windows,\n\
+or Apple OS X) and false otherwise.\n\
+@end deftypefn")
+{
+  return octave_value (display_info::display_available ());
+}
