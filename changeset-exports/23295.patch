# HG changeset patch
# User Rik <rik@octave.org>
# Date 1489692613 25200
#      Thu Mar 16 12:30:13 2017 -0700
# Node ID c1362a71fb0ebf9d894644758398a8d50ec2954d
# Parent  d5f490eebb4791ccf703a2cc61936ed3a8f8de8d
which.m: Return a non-empty string for built-in classes and command line fcns (bug #50541);

* which.m: Check return cellstr for empty values.  Replace empty values with
the "type" field.

* symtab.cc: Update BIST tests for new behavior of which.

diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -1878,21 +1878,21 @@ updated to use some other function.
 
 %!assert <34497> (! strcmp (which ("bar"), ""))
 
 %!function x = bar ()
 %!  x = 5;
 %!endfunction
 %!test
 %! assert (bar == 5);
-%! assert (strcmp (which ("bar"), ""));
+%! assert (strcmp (which ("bar"), "command-line function"));
 %! clear -f bar;
 %! assert (! strcmp (which ("bar"), ""));
 
 %!function x = bar ()
 %!  x = 5;
 %!endfunction
 %!test
 %! assert (bar == 5);
-%! assert (strcmp (which ("bar"), ""));
+%! assert (strcmp (which ("bar"), "command-line function"));
 %! clear bar;
 %! assert (! strcmp (which ("bar"), ""));
 */
diff --git a/scripts/help/which.m b/scripts/help/which.m
--- a/scripts/help/which.m
+++ b/scripts/help/which.m
@@ -64,36 +64,48 @@ function varargout = which (varargin)
         else
           printf ("'%s' is a %s from the file %s\n",
                   m(i).name, m(i).type, m(i).file);
         endif
       endif
     endfor
   else
     varargout = {m.file};
+    ## Return type, instead of "", for built-in classes (bug #50541).
+    ## FIXME: remove code if __which__ is updated to return path for classes
+    idx = find (cellfun ("isempty", varargout));
+    if (idx)
+      varargout(idx) = m(idx).type;
+    endif
   endif
 
 endfunction
 
 
 %!test
 %! str = which ("ls");
-%! assert (str(end-17:end), strcat ("miscellaneous", filesep (), "ls.m"));
+%! assert (str(end-17:end), fullfile ("miscellaneous", "ls.m"));
 %!test
 %! str = which ("amd");
 %! assert (str(end-6:end), "amd.oct");
-
-%!assert (which ("_NO_SUCH_NAME_"), "")
-
+%!test
+%! str = which ("inputParser");
+%! assert (str, "built-in function");
 %!test
 %! x = 3;
 %! str = which ("x");
 %! assert (str, "variable");
 
+%!assert (which ("__NO_SUCH_NAME__"), "")
+
 %!test
 %! str = which ("amd");
 %! assert (str(end-6:end), "amd.oct");
 %! amd = 12;
 %! str = which ("amd");
 %! assert (str, "variable");
 %! clear amd;
 %! str = which ("amd");
 %! assert (str(end-6:end), "amd.oct");
+
+%!error which ()
+%!error which (1)
+
