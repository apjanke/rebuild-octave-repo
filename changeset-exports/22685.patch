# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1477657932 -7200
#      Fri Oct 28 14:32:12 2016 +0200
# Branch stable
# Node ID b8c5280be6ad7b7cebfc300069a99d76febbbac9
# Parent  ce0f54b63923bbd95931f005939a8b6a398a99f5
__publish_html_output__.m: Ensure </span> in any case in syntax highlighting.

diff --git a/scripts/general/private/__publish_html_output__.m b/scripts/general/private/__publish_html_output__.m
--- a/scripts/general/private/__publish_html_output__.m
+++ b/scripts/general/private/__publish_html_output__.m
@@ -239,60 +239,60 @@ function outstr = syntax_highlight (str)
       plh_str = [plh_str, "</span>\n"];
       i++;
       plh = plh + 1;
       placeholder_cstr{plh} = plh_str;
       outstr = [outstr, " PUBLISHPLACEHOLDER", num2str(plh), " "];
     ## Single quoted string
     elseif (strcmp (str(i), "'"))
       plh_str = "<span class=\"string\">'";
-      i++;
+      i = i + 1;
       while (i <= length(str))
         ## Ignore escaped string terminations
         if (strncmp (str(i:end), "''", 2))
           plh_str = [plh_str, "''"];
           i = i + 2;
         ## Is string termination
         elseif (strcmp (str(i), "'"))
-          plh_str = [plh_str, "'</span>"];
-          i++;
+          plh_str = [plh_str, "'"];
+          i = i + 1;
           break;
         ## Is string termination by line break
         elseif (strcmp (str(i), "\n"))
-          plh_str = [plh_str, "</span>"];
           break;
         ## String content
         else
           plh_str = [plh_str, str(i)];
-          i++;
+          i = i + 1;
         endif
       endwhile
+      plh_str = [plh_str, "</span>"];
       plh = plh + 1;
       placeholder_cstr{plh} = plh_str;
       outstr = [outstr, " PUBLISHPLACEHOLDER", num2str(plh), " "];
     ## Double quoted string
     elseif (strcmp (str(i), "\""))
       plh_str = "<span class=\"string\">\"";
-      i++;
+      i = i + 1;
       while (i <= length(str))
         ## Is string termination
         if (strcmp (str(i), "\"") && ! strcmp (str(i - 1), "\\"))
-          plh_str = [plh_str, "\"</span>"];
-          i++;
+          plh_str = [plh_str, "\""];
+          i = i + 1;
           break;
         ## Is string termination by line break
         elseif (strcmp (str(i), "\n"))
-          plh_str = [plh_str, "</span>"];
           break;
         ## String content
         else
           plh_str = [plh_str, str(i)];
-          i++;
+          i = i + 1;
         endif
       endwhile
+      plh_str = [plh_str, "</span>"];
       plh = plh + 1;
       placeholder_cstr{plh} = plh_str;
       outstr = [outstr, " PUBLISHPLACEHOLDER", num2str(plh), " "];
     else
       outstr = [outstr, str(i)];
       i++;
     endif
   endwhile
