# HG changeset patch
# User Rik <rik@octave.org>
# Date 1511992043 28800
#      Wed Nov 29 13:47:23 2017 -0800
# Node ID 999b167e5b4afaf7921d109cfd40fd966868d6fe
# Parent  8edaf9c807790d25aa24d27fc0b636f55dca442c
# Parent  0771ce2d30ef3f9076321926188c9a223edc3b55
maint: merge stable to default.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -780,17 +780,19 @@ dnl Check whether ARPACK is buggy (it do
 dnl
 dnl ARPACK versions < 3.3.0 have a bug which results in different eigenvalues
 dnl being calculated depending on whether eigenvectors are also requested.
 dnl See bug #52425.
 dnl
 AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK_2], [
   AC_CACHE_CHECK([whether the arpack library is free of bugs],
     [octave_cv_lib_arpack_ok_2],
-    [AC_LANG_PUSH(Fortran 77)
+    [save_FFLAGS="$FFLAGS"
+    FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
+    AC_LANG_PUSH(Fortran 77)
     AC_RUN_IFELSE([[
       program bug_52425 
 c
       integer          maxn, maxnev, maxncv, ldv
       parameter       (maxn=256, maxnev=10, maxncv=25, 
      $                 ldv=maxn )
 c
       Double precision
@@ -895,16 +897,18 @@ c
       w(n-1) = v(n-3) + 4 * v(n-1)
       w(n) = v(n-2) + 4 * v(n)
       return
       end
     ]],
     octave_cv_lib_arpack_ok_2=yes,
     octave_cv_lib_arpack_ok_2=no,
     octave_cv_lib_arpack_ok_2=yes)
+    ## Restore FFLAGS.
+    FFLAGS="$save_FFLAGS"
     AC_LANG_POP(Fortran 77)
   ])
   if test $octave_cv_lib_arpack_ok_2 = yes; then
     $1
     :
   else
     $2
     :
