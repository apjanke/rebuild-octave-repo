# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1307642014 14400
#      Thu Jun 09 13:53:34 2011 -0400
# Node ID d6bd2f2c35ccbc93b61e064531f913ee8239fa0c
# Parent  ff4773f01b6a8937d9e96070e345ed6ce014a805
# Parent  a17269b1148f89e07a310468836392cc739bfd7b
periodic merge of stable to default

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -45,18 +45,20 @@ EXTRA_DIST = \
   OLD-ChangeLogs/libcruft-ChangeLog \
   OLD-ChangeLogs/liboctave-ChangeLog \
   OLD-ChangeLogs/scripts-ChangeLog \
   OLD-ChangeLogs/src-ChangeLog \
   OLD-ChangeLogs/test-ChangeLog \
   PROJECTS \
   README \
   README.Cygwin \
+  README.gnuplot \
   README.Linux \
   README.MacOS \
+  README.MinGW \
   README.Windows \
   README.kpathsea \
   autogen.sh \
   bootstrap \
   bootstrap.conf \
   gdbinit \
   missing \
   mk-opts.pl \
@@ -109,17 +111,17 @@ noinst_SCRIPTS = run-octave
 
 INFO_FILES = \
   AUTHORS \
   BUGS \
   INSTALL.OCTAVE
 
 CLEANFILES = $(bin_PROGRAMS) $(bin_SCRIPTS) $(BUILT_SOURCES)
 
-DISTCLEANFILES = $(INFO_FILES) .gdbinit 
+DISTCLEANFILES = $(INFO_FILES) ChangeLog .gdbinit 
 
 CONFIG_FILES = @ac_config_headers@ @ac_config_files@
 
 nodist_octinclude_HEADERS = config.h
 
 all-local: $(bin_PROGRAMS) $(bin_SCRIPTS) $(noinst_SCRIPTS) $(INFO_FILES) .gdbinit
 	@echo ""
 	@echo "Octave successfully built.  Now choose from the following:"
@@ -159,17 +161,17 @@ run-octave: run-octave.in Makefile
 	  cp $< $@; \
 	fi
 
 AUTHORS BUGS INSTALL.OCTAVE:
 	$(MAKE) -C doc/interpreter ../../$@
 .PHONY: AUTHORS BUGS INSTALL.OCTAVE
 
 ChangeLog:
-	(cd $(srcdir); hg log --style=changelog.tmpl --prune=b0e60ad4ae26ec2ca3567a17b29a53e0cd2051d8 --branch=`hg branch`; echo ""; echo "See the files in the OLD-ChangeLogs directory for older changes") > $@.t
+	(cd $(srcdir); hg log --style=changelog.tmpl --prune=b0e60ad4ae26 --only-branch=`hg branch`; echo ""; echo "See the files in the directory OLD-ChangeLogs for changes before 2011-04-19") > $@.t
 	mv $@.t $@
 .PHONY: ChangeLog
 
 octetc_DATA = NEWS
 
 DIRS_TO_MAKE = \
   $(localfcnfiledir) \
   $(localapifcnfiledir) \
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -51,29 +51,32 @@ Summary of important user-visible change
 
     Given that there would be binary incompatibilities with shared
     libraries going from Octave 3.4.0 to 3.4.1, we also made the
     following incompatible changes in this release:
 
       * The Perl Compatible Regular Expression (PCRE) library is now
         required to build Octave.
 
+      * Octave's libraries and .oct files are now installed in
+        subdirectories of $libdir instead of $libexecdir.
+
     Any future Octave 3.4.x release versions should remain binary
     compatible with Octave 3.4.1 as we are now using proper library
     versioning as recommended by the libtool manual.
 
  ** The following functions have been deprecated in Octave 3.4.1 and will
     be removed from Octave 3.8 (or whatever version is the second major
     release after 3.4):
 
       cquad  is_duplicate_entry  perror  strerror
 
  ** The following functions are new in 3.4.1:
 
-      colstyle  iscolumn  isrow
+      colstyle  gmres  iscolumn  isrow  mgorth  nproc  rectangle
 
  ** The get_forge_pkg function is now private.
 
  ** The rectangle_lw, rectangle_sw, triangle_lw, and triangle_sw
     functions are now private.
 
  ** The logistic_regression_derivatives and logistic_regression_likelihood
     functions are now private.
@@ -292,16 +295,21 @@ Summary of important user-visible change
     common type.
 
  ** The `strfind' and `strrep' functions now have compiled
     implementations, facilitating significantly more efficient searching
     and replacing in strings, especially with longer patterns.  The code
     of `strcat' has been vectorized and is now much more efficient when
     many strings are concatenated.  The `strcmpi' and `strncmpi'
     functions are now built-in functions, providing better performance.
+
+ ** 'str2double' now has a compiled implementation and the API conforms
+    to Matlab.  The additional Octave-specific features of returning a
+    boolean matrix indicating which elements were successfully converted
+    has been removed.
  
  ** Matlab-style ignoring input and output function arguments using
     tilde (~) is now supported.  Ignored output arguments may be
     detected from a function using the built-in function `isargout'.
     For more details, consult the manual. 
 
  ** The list datatype, deprecated since the introduction of cells, has
     been removed.
@@ -391,25 +399,25 @@ Summary of important user-visible change
 
       format short eng
       format long eng
 
     Both display numbers in engineering notation, i.e., mantissa +
     exponent where the exponent is a multiple of 3.
 
  ** The following functions are new in Octave 3.4:
-      accumdim   divergence   merge        ppjumps    strread 
-      bitpack    erfcx        nfields      pqpnonneg  textread
-      bitunpack  fileread     nth_element  quadcc     uigetdir
-      blkmm      fminbnd      onCleanup    randi      uigetfile
-      cbrt       fskipl       pbaspect     rectangle  uiputfile
-      curl       ifelse       pie3         repelems   uimenu
-      chop       ishermitian  powerset     reset      whitebg  
-      colstyle   isindex      ppder        rsf2csf  
-      daspect    luupdate     ppint        saveas  
+      accumdim    erfcx        nfields      pqpnonneg  uigetdir
+      bitpack     fileread     nth_element  quadcc     uigetfile
+      bitunpack   fminbnd      onCleanup    randi      uiputfile
+      blkmm       fskipl       pbaspect     repelems   uimenu           
+      cbrt        ifelse       pie3         reset      whitebg          
+      curl        ishermitian  powerset     rsf2csf            
+      chop        isindex      ppder        saveas             
+      daspect     luupdate     ppint        strread                     
+      divergence  merge        ppjumps      textread             
 
  ** Using the image function to view images with external programs such
     as display, xv, and xloadimage is no longer supported.  The
     image_viewer function has also been removed.
 
  ** The behavior of struct assignments to non-struct values has been
     changed.  Previously, it was possible to overwrite an arbitrary
     value:
@@ -501,19 +509,19 @@ Summary of important user-visible change
       spatan2             spkron       str2mat
       spchol              splchol      unmark_command
       spchol2inv          split        unmark_rawcommand
 
     The following functions have been deprecated in Octave 3.4 and will
     be removed from Octave 3.8 (or whatever version is the second major
     release after 3.4):
 
-      autocor  cellidx   fstat    is_global  replot     values
-      autocov  cquad     gammai   krylovb    saveimage  
-      betai    dispatch  glpkmex  perror     strerror 
+      autocor  cellidx   gammai     krylovb  saveimage 
+      autocov  dispatch  glpkmex    perror   strerror  
+      betai    fstat     is_global  replot   values    
 
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
diff --git a/doc/Makefile.am b/doc/Makefile.am
--- a/doc/Makefile.am
+++ b/doc/Makefile.am
@@ -20,15 +20,14 @@
 
 include $(top_srcdir)/common.mk
 
 ## Avoid making multiple subdirs in parallel which can lead 
 ## to a confusing error message stream
 .NOTPARALLEL:
 
 EXTRA_DIST = \
-  ChangeLog \
   Makefile.am \
   texinfo.tex \
   texmf.cnf
 
 SUBDIRS = faq icons interpreter liboctave refcard
 
diff --git a/libcruft/Makefile.am b/libcruft/Makefile.am
--- a/libcruft/Makefile.am
+++ b/libcruft/Makefile.am
@@ -87,12 +87,12 @@ cruft.def: $(libcruft_la_SOURCES) mkf77d
 	./mkf77def $(srcdir) $(libcruft_la_SOURCES) > $@-t
 	mv $@-t $@
 
 ranlib.def: $(libranlib_la_SOURCES) mkf77def
 	chmod a+rx mkf77def
 	./mkf77def $(srcdir) $(libranlib_la_SOURCES) > $@-t
 	mv $@-t $@
 
-EXTRA_DIST += ChangeLog mkf77def.in
+EXTRA_DIST += mkf77def.in
 
 DISTCLEANFILES = cruft.def ranlib.def
 
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -20,17 +20,16 @@
 
 include $(top_srcdir)/common.mk
 
 AM_CPPFLAGS = \
   @CPPFLAGS@ -I../libgnu -I$(top_srcdir)/libgnu \
   -I$(top_srcdir)/libcruft/misc
 
 EXTRA_DIST = \
-  ChangeLog \
   config-ops.sh \
   mk-ops.awk \
   mx-op-inc.mk \
   mx-op-src.mk \
   mx-ops \
   smx-op-inc.mk \
   smx-op-src.mk \
   sparse-mk-ops.awk \
diff --git a/scripts/general/colon.m b/scripts/general/colon.m
--- a/scripts/general/colon.m
+++ b/scripts/general/colon.m
@@ -29,10 +29,12 @@
 ## c = a : b
 ## @end group
 ## @end example
 ##
 ## @seealso{class, subsref, subsasgn}
 ## @end deftypefn
 
 function r = colon (varargin)
-  error ("colon: not defined for class \"%s\"", class(varargin{1}));
+  if (nargin != 0)
+    error ("colon: not defined for class \"%s\"", class(varargin{1}));
+  endif
 endfunction
diff --git a/src/Makefile.am b/src/Makefile.am
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -15,27 +15,26 @@
 # for more details.
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 include $(top_srcdir)/common.mk
 
-octlib_LTLIBRARIES = \
-  liboctinterp.la
-
 AM_CPPFLAGS = \
   @CPPFLAGS@ -I../libgnu -I$(top_srcdir)/libgnu \
   -I$(top_srcdir)/libcruft/misc \
   -I../liboctave -I$(top_srcdir)/liboctave \
   -I. -I$(srcdir) 
 
 AUTOMAKE_OPTIONS = subdir-objects
 
+octlib_LTLIBRARIES = liboctinterp.la
+
 ## Order matters here.  Leave builtins.cc last, because it depends on 
 ## $(DEF_FILES), and building those requires all the sources
 ## (except builtins.cc) to be available.
 BUILT_SOURCES = \
   defaults.h \
   graphics.h \
   graphics-props.cc \
   lex.cc \
@@ -47,34 +46,32 @@ BUILT_SOURCES = \
   ops.cc \
   version.h \
   builtins.cc
 
 BUILT_DISTFILES = \
   oct-gperf.h \
   oct-parse.h
 
-## FIXME -- These files don't need to be distributed.  Some of them
-## do need to be installed.  So we need to add them to a list somewhere
-## so that happens correctly.
+## Files that are created during build process and installed,
+## BUT not distributed in tarball.
 BUILT_NODISTFILES = \
   defaults.h \
   graphics.h \
   oct-conf.h \
   oct-errno.cc \
   ops.cc \
   mxarray.h \
   version.h \
   $(OPT_HANDLERS) \
   $(OPT_INC) \
-  $(DEF_FILES) \
+  $(ALL_DEF_FILES) \
   builtins.cc
 
 EXTRA_DIST = \
-  ChangeLog \
   Makefile.in \
   defaults.h.in \
   DOCSTRINGS \
   find-defun-files.sh \
   genprops.awk \
   gl2ps.c \
   graphics.h.in \
   mk-errno-list \
@@ -88,36 +85,29 @@ EXTRA_DIST = \
   oct-errno.cc.in \
   octave.gperf \
   version.h.in \
   $(BUILT_DISTFILES)
 
 DLL_CDEFS = @OCTINTERP_DLL_DEFS@
 DLL_CXXDEFS = @OCTINTERP_DLL_DEFS@
 
-.cc.df:	
+%.df: %.cc
 	$(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	  $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) \
 	  -DMAKE_BUILTINS $< | $(srcdir)/mkdefs $(srcdir) $< > $@-t
 	mv $@-t $@
 
 OPT_HANDLERS = \
   DASPK-opts.cc \
   DASRT-opts.cc \
   DASSL-opts.cc \
   LSODE-opts.cc \
   Quad-opts.cc
 
-OPT_IN = \
-  ../liboctave/DASPK-opts.in \
-  ../liboctave/DASRT-opts.in \
-  ../liboctave/DASSL-opts.in \
-  ../liboctave/LSODE-opts.in \
-  ../liboctave/Quad-opts.in
-
 OPT_INC = \
   ../liboctave/DASPK-opts.h \
   ../liboctave/DASRT-opts.h \
   ../liboctave/DASSL-opts.h \
   ../liboctave/LSODE-opts.h \
   ../liboctave/Quad-opts.h
 
 OV_INTTYPE_INC = \
@@ -211,37 +201,42 @@ PT_INCLUDES = \
   pt-misc.h \
   pt-pr-code.h \
   pt-select.h \
   pt-stmt.h \
   pt-unop.h \
   pt-walk.h \
   pt.h
 
+nodist_octinclude_HEADERS = \
+  defaults.h \
+  graphics.h \
+  oct-conf.h \
+  mxarray.h \
+  version.h
+
 octinclude_HEADERS = \
   Cell.h \
   base-list.h \
   builtins.h \
   c-file-ptr-stream.h \
   comment-list.h \
   cutils.h \
   debug.h \
-  defaults.h \
   defun-dld.h \
   defun-int.h \
   defun.h \
   dirfns.h \
   display.h \
   dynamic-ld.h \
   error.h \
   file-io.h \
   gl-render.h \
   gl2ps.h \
   gl2ps-renderer.h \
-  graphics.h \
   graphics-props.cc \
   gripes.h \
   help.h \
   input.h \
   lex.h \
   load-path.h \
   load-save.h \
   ls-ascii-helper.h \
@@ -249,18 +244,16 @@ octinclude_HEADERS = \
   ls-mat-ascii.h \
   ls-mat4.h \
   ls-mat5.h \
   ls-oct-ascii.h \
   ls-oct-binary.h \
   ls-utils.h \
   mex.h \
   mexproto.h \
-  mxarray.h \
-  oct-conf.h \
   oct-errno.h \
   oct-fstrm.h \
   oct-gperf.h \
   oct-hdf5.h \
   oct-hist.h \
   oct-iostrm.h \
   oct-lvalue.h \
   oct-map.h \
@@ -285,17 +278,16 @@ octinclude_HEADERS = \
   sysdep.h \
   token.h \
   toplev.h \
   txt-eng-ft.h \
   txt-eng.h \
   unwind-prot.h \
   utils.h \
   variables.h \
-  version.h \
   xdiv.h \
   xnorm.h \
   xpow.h \
   zfstream.h \
   $(OV_INCLUDES) \
   $(OV_SPARSE_INCLUDES) \
   $(PT_INCLUDES)
 
@@ -605,22 +597,22 @@ liboctinterp_la_LDFLAGS = \
   -bindir $(bindir)
 
 CLEANFILES = \
   DLD-FUNCTIONS/PKG_ADD \
   doc-files \
   gendoc.cc \
   gendoc$(BUILD_EXEEXT) \
   graphics-props.cc \
-  oct-parse.output \
-  $(BUILT_NODISTFILES)
+  oct-parse.output
 
 DISTCLEANFILES = \
   .DOCSTRINGS \
   DOCSTRINGS \
+  $(BUILT_NODISTFILES) \
   $(OCT_FILES) \
   $(OCT_STAMP_FILES)
 
 MAINTAINERCLEANFILES = \
   $(BUILT_DISTFILES)
 
 octave_LDADD = $(OCTAVE_LIBS)
 
@@ -750,17 +742,17 @@ endif
 #	$(YACC) $(YFLAGS) --output=$@ --defines=y.tab.h $<
 
 #lex.cc : lex.l
 #	$(LEX) $(LFLAGS) $< > $(@F)-t
 #	@mv $(@F)-t $@
 
 
 $(OPT_INC) : %.h : %.in
-	$(MAKE) -C $(@D) $@
+	$(MAKE) -C $(@D) $(@F)
 
 ## defaults.h and oct-conf.h must depend on Makefile.  Calling configure
 ## may change default/config values.  However, calling configure will also
 ## regenerate the Makefiles from Makefile.am and trigger the rules below.
 
 defaults.h: defaults.h.in Makefile
 	@$(do_subst_default_vals)
 
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -4007,18 +4007,18 @@ source_file (const std::string& file_nam
         error ("source: error sourcing file `%s'",
                file_full_name.c_str ());
     }
 }
 
 DEFUN (mfilename, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} mfilename ()\n\
-@deftypefnx {Built-in Function} {} mfilename (@code{\"fullpath\"})\n\
-@deftypefnx {Built-in Function} {} mfilename (@code{\"fullpathext\"})\n\
+@deftypefnx {Built-in Function} {} mfilename (\"fullpath\")\n\
+@deftypefnx {Built-in Function} {} mfilename (\"fullpathext\")\n\
 Return the name of the currently executing file.  At the top-level,\n\
 return the empty string.  Given the argument @code{\"fullpath\"},\n\
 include the directory part of the file name, but not the extension.\n\
 Given the argument @code{\"fullpathext\"}, include the directory part\n\
 of the file name and the extension.\n\
 @end deftypefn")
 {
   octave_value retval;
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -1266,24 +1266,25 @@ Return true if @var{x} is a cell array o
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (cell, args, ,
   "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} cell (@var{x})\n\
-@deftypefnx {Built-in Function} {} cell (@var{n}, @var{m})\n\
-Create a new cell array object.  If invoked with a single scalar\n\
-argument, @code{cell} returns a square cell array with the dimension\n\
-specified.  If you supply two scalar arguments, @code{cell} takes\n\
-them to be the number of rows and columns.  If given a vector with two\n\
-elements, @code{cell} uses the values of the elements as the number of\n\
-rows and columns, respectively.\n\
+@deftypefn  {Built-in Function} {} cell (@var{n})\n\
+@deftypefnx {Built-in Function} {} cell (@var{m}, @var{n})\n\
+@deftypefnx {Built-in Function} {} cell (@var{m}, @var{n}, @var{k}, @dots{})\n\
+@deftypefnx {Built-in Function} {} cell ([@var{m} @var{n} @dots{}])\n\
+Create a new cell array object.\n\
+If invoked with a single scalar integer argument, return a square\n\
+@nospell{NxN} cell array.  If invoked with two or more scalar\n\
+integer arguments, or a vector of integer values, return an array with\n\
+the given dimensions.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   dim_vector dims;
 
diff --git a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -67,17 +67,16 @@ check: test_sparse.m test_bc_overloads.m
 
 test_sparse.m: build_sparse_tests.sh
 	$(srcdir)/build_sparse_tests.sh
 
 test_bc_overloads.m: build_bc_overload_tests.sh bc_overloads_expected
 	$(srcdir)/build_bc_overload_tests.sh $(srcdir)/bc_overloads_expected
 
 EXTRA_DIST = \
-  ChangeLog \
   build_sparse_tests.sh \
   build_bc_overload_tests.sh \
   bc_overloads_expected \
   build_bc_overloads_expected.m \
   $(FCN_FILES)
 
 CLEANFILES = \
   test_sparse.m \
