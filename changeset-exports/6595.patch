# HG changeset patch
# User dbateman
# Date 1177687870 0
#      Fri Apr 27 15:31:10 2007 +0000
# Node ID 55586d763de1e8673a3bcf2b379ff2040dd1c967
# Parent  5843c11b40061e32b98b6e7c951e71c58b573c51
[project @ 2007-04-27 15:31:10 by dbateman]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -2,18 +2,18 @@ 2007-04-27  John W. Eaton  <jwe@octave.o
 
 	* examples/Makefile.in (SOURCES): Add all example files to the list.
 
 	* octave-config.in: Don't set PREFIX to OCTAVE_HOME if OCTAVE_HOME
 	is empty.
 
 2007-04-27  David Bateman  <dbateman@free.fr>
 
-	* examples/mycell.c, examples/mypow2.c, examples/mystring.c: New
-	example mex files.
+	* examples/mycell.c, examples/mypow2.c, examples/mystring.c,
+	examples/myprop.c: New example mex files.
 
 2007-04-26  Alex Zvoleff  <azvoleff@sbcglobal.net>
 
 	* configure.in: Don't report ARPACK libraries in summary.
 
 2007-04-25  David Bateman  <dbateman@free.fr>
 
 	* Makeconf.in (do-subst-texinfo-vals): Also substitute abs_top_srcdir.
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,10 +1,13 @@
 2007-04-27  David Bateman  <dbateman@free.fr>
 
+	* Makefile.in (EXAMPLE_FILES_NODIR): Add mycell.c, myfeval.c,
+	myfunc.c, mypow2.c, mysparse.c, mystring.c, mystruct.c and
+	paramdemo.cc.
 	* interpreter.txi/dynamic.txi: Complete all but the section on
 	the mex- and oct-file APIs.
 
 2007-04-26  David Bateman  <dbateman@free.fr>
 
 	* interpreter/stmt.txi: Document for loops over matrices, arrays
 	and cell arrays.
 
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -24,16 +24,24 @@ EXAMPLE_FILES_NODIR = \
   addtwomatrices.cc \
   celldemo.cc \
   firstmexdemo.c \
   fortdemo.cc \
   fortsub.f \
   funcdemo.cc \
   globaldemo.cc \
   helloworld.cc \
+  mycell.c \
+  myfeval.c \
+  myfunc.c \
+  mypow2.c \
+  mysparse.c \
+  mystring.c \
+  mystruct.c \
+  paramdemo.cc \
   stringdemo.cc \
   structdemo.cc \
   unwinddemo.cc
 
 EXAMPLE_FILES = $(addprefix $(top_srcdir)/examples/, $(EXAMPLE_FILES_NODIR))
 
 SPARSEIMAGES_1 = gplot grid spmatrix spchol spcholperm
 
diff --git a/examples/Makefile.in b/examples/Makefile.in
--- a/examples/Makefile.in
+++ b/examples/Makefile.in
@@ -36,16 +36,17 @@ SOURCES = \
   helloworld.cc \
   make_int.cc \
   mycell.c \
   myfeval.c \
   myfevalf.f \
   myfunc.c \
   myhello.c \
   mypow2.c \
+  myprop.c \
   myset.c \
   mysparse.c \
   mystring.c \
   mystruct.c \
   octave.desktop.in \
   oregonator.cc \
   oregonator.m \
   paramdemo.cc \
diff --git a/examples/myprop.c b/examples/myprop.c
new file mode 100644
--- /dev/null
+++ b/examples/myprop.c
@@ -0,0 +1,25 @@
+#include "mex.h"
+
+void
+mexFunction (int nlhs, mxArray* plhs[], int nrhs, const mxArray* prhs[])
+{
+  double handle;
+  char property[256];
+
+  if (nrhs < 2 || nrhs > 3)
+    mexErrMsgTxt ("incorrect number of arguments");
+  if (!mxIsDouble(prhs[0]))
+    mexErrMsgTxt ("handle expected to be a double scalar");
+  if (!mxIsChar (prhs[1]))
+    mexErrMsgTxt ("expected property to be a string");
+  
+  handle = mxGetScalar (prhs[0]);
+  mxGetString (prhs[1], property, 256);
+  plhs[0] = mxDuplicateArray (mexGet (handle, property));
+  
+  if (nrhs == 3)
+    if (mexSet (handle, property, mxDuplicateArray (prhs[2])))
+      mexErrMsgTxt ("failed to set property");
+}
+  
+
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2007-04-27  David Bateman  <dbateman@free.fr>
+
+	* graphic.cc (get_property_form_handle, set_property_in_handle):
+	New functions.
+	* grahics.h: New file.
+	* mex.cc (mexGet, mexSet): use the above to implement mexGet
+	and mexSet.
+	* Makefile.in (INCLUDES): Add graphics.h
+
 2007-04-26  John W. Eaton  <jwe@octave.org>
 
 	* ov-usr-fcn.cc (octave_user_function::do_multi_index_op):
 	Only deal with varargout if ret_list->takes_varargs () is true.
 
 2007-04-26  Soren Hauberg  <soren@hauberg.org>
 
 	* DLD-FUNCTIONS/urlwrite.cc: Doc fix.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -94,17 +94,17 @@ OV_SPARSE_INCLUDES := \
 PT_INCLUDES := pt.h pt-all.h pt-arg-list.h pt-assign.h pt-binop.h \
         pt-bp.h	pt-cell.h pt-check.h pt-cmd.h pt-colon.h pt-const.h \
 	pt-decl.h pt-except.h pt-exp.h pt-fcn-handle.h pt-id.h pt-idx.h \
 	pt-jump.h pt-loop.h pt-mat.h pt-misc.h \
 	pt-pr-code.h pt-select.h pt-stmt.h pt-unop.h pt-walk.h \
 
 INCLUDES := Cell.h base-list.h c-file-ptr-stream.h comment-list.h \
 	defun-dld.h defun-int.h defun.h dirfns.h dynamic-ld.h \
-	error.h file-io.h gripes.h help.h input.h \
+	error.h file-io.h graphics.h gripes.h help.h input.h \
 	lex.h load-path.h load-save.h ls-hdf5.h ls-mat-ascii.h ls-mat4.h \
 	ls-mat5.h ls-oct-ascii.h ls-oct-binary.h ls-utils.h \
 	mex.h mexproto.h mxarray.h \
 	oct-errno.h oct-fstrm.h oct-hist.h oct-iostrm.h oct-map.h oct-obj.h \
 	oct-prcstrm.h oct-procbuf.h oct-stdstrm.h oct-stream.h zfstream.h \
 	oct-strstrm.h oct-lvalue.h oct.h octave.h ops.h pager.h \
 	parse.h pr-output.h procstream.h sighandlers.h siglist.h \
 	sparse-xdiv.h sparse-xpow.h symtab.h sysdep.h \
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -35,16 +35,18 @@ 02110-1301, USA.
 
 #include <defun.h>
 #include <ov.h>
 #include <oct-obj.h>
 #include <oct-map.h>
 #include <ov-fcn-handle.h>
 #include <parse.h>
 
+#include "graphics.h"
+
 static void
 gripe_set_invalid (const std::string& pname)
 {
   error ("set: invalid value for %s property", pname.c_str ());
 }
 
 static octave_value
 nan_to_empty (double val)
@@ -3656,13 +3658,51 @@ DEFUN (__go_figure_handles__, , ,
    "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __go_figure_handles__ ()\n\
 Return current list of function handles.\n\
 @end deftypefn")
 {
   return octave_value (gh_manager::figure_handle_list ());
 }
 
+octave_value
+get_property_from_handle (double handle, const std::string &property,
+			  const std::string &func)
+{
+  graphics_object obj = gh_manager::get_object (handle);
+  octave_value retval;
+
+  if (obj)
+    {
+      property_name p = std::string (property);
+      retval = obj.get (p);
+    }
+  else
+    error ("%s: invalid handle (= %g)", func.c_str(), handle);
+
+  return retval;
+}
+
+bool
+set_property_in_handle (double handle, const std::string &property,
+			const octave_value &arg, const std::string &func)
+{
+  graphics_object obj = gh_manager::get_object (handle);
+  int ret = false;
+
+  if (obj)
+    {
+      property_name p = std::string (property);
+      obj.set (p, arg);
+      if (!error_state)
+	ret = true;
+    }
+  else
+    error ("%s: invalid handle (= %g)", func.c_str(), handle);
+
+  return ret;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/graphics.h b/src/graphics.h
new file mode 100644
--- /dev/null
+++ b/src/graphics.h
@@ -0,0 +1,44 @@
+/*
+
+Copyright (C) 2007 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+02110-1301, USA.
+
+*/
+
+#if !defined (graphics_h)
+#define graphics_h 1
+
+#include <string>
+#include "ov.h"
+
+extern bool
+set_property_in_handle (double handle, const std::string &property,
+			const octave_value &arg,
+			const std::string &func = std::string());
+
+extern octave_value
+get_property_from_handle (double handle, const std::string &property,
+			  const std::string &func = std::string());
+#endif
+
+/*
+;; Local Variables: ***
+;; mode: C++ ***
+;; End: ***
+*/
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -22,16 +22,17 @@ class mxArray;
 #include "ov-mex-fcn.h"
 #include "ov-usr-fcn.h"
 #include "pager.h"
 #include "parse.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
+#include "graphics.h"
 
 // #define DEBUG 1
 
 static void
 xfree (void *ptr)
 {
   ::free (ptr);
 }
@@ -3289,21 +3290,24 @@ mexAtExit (void (*f) (void))
 
       curr_mex_fcn->atexit (f);
     }
 
   return 0;
 }
 
 const mxArray *
-mexGet (double /*handle*/, const char */*property*/)
+mexGet (double handle, const char *property)
 {
-  // FIXME
-  error ("mexGet: not implemented");
-  return 0;
+  mxArray *m = 0;
+  octave_value ret = get_property_from_handle (handle, property, "mexGet");
+
+  if (!error_state && ret.is_defined())
+    m = ret.as_mxArray ();
+  return m;
 }
 
 int
 mexIsGlobal (const mxArray *ptr)
 {
   return mxIsFromGlobalWS (ptr);
 }
 
@@ -3336,21 +3340,22 @@ mexLock (void)
       else
 	mex_lock_count[fname]++;
 
       mlock (fname);
     }
 }
 
 int
-mexSet (double /*handle*/, const char */*property*/, mxArray */*val*/)
+mexSet (double handle, const char *property, mxArray *val)
 {
-  // FIXME
-  error ("mexSet: not implemented");
-  return 0;
+  bool ret = 
+    set_property_in_handle (handle, property, mxArray::as_octave_value (val),
+			    "mexSet");
+  return (ret ? 0 : 1);
 }
 
 void
 mexUnlock (void)
 {
   if (mex_context)
     {
       const char *fname = mexFunctionName ();
