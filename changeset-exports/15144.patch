# HG changeset patch
# User Rik <rik@octave.org>
# Date 1344628575 25200
#      Fri Aug 10 12:56:15 2012 -0700
# Node ID 9cc337ced51a68ebc86fcb3559aedf1426bd69e2
# Parent  e412d18d4fa5575faf2f3e1d902ab747deb119d1
build: Update OCTAVE_UMFPACK_SEPARATE_SPLIT macro to look for SuiteSparse header file.

* acinclude.m4: Update OCTAVE_UMFPACK_SEPARATE_SPLIT macro to look for
SuiteSparse header file.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1539,33 +1539,33 @@ dnl Set default value for a variable and
 dnl
 AC_DEFUN([OCTAVE_SET_DEFAULT], [
   ifelse($#, 2, [: ${$1=$2}
 ])dnl
   AC_MSG_RESULT([defining $1 to be $$1])
   AC_SUBST($1)
 ])
 dnl
-dnl Check for UMFPACK separately split complex matrix and RHS.  Note
-dnl that as umfpack.h can be in three different places, rather than
-dnl include it, just declare the functions needed.
+dnl Check for UMFPACK separately split complex matrix and RHS.
 dnl
-dnl Assumes that the check for umfpack has already been performed.
+dnl Macro assumes that the check for umfpack has already been performed.
 dnl
 AC_DEFUN([OCTAVE_UMFPACK_SEPARATE_SPLIT], [
   AC_MSG_CHECKING([for UMFPACK separate complex matrix and rhs split])
   AC_CACHE_VAL(octave_cv_umfpack_separate_split,
     [AC_RUN_IFELSE([AC_LANG_SOURCE([[
         #include <stdlib.h>
-        #if defined (HAVE_UFSPARSE_UMFPACK_H)
-        #include <ufsparse/umfpack.h>
+        #if defined (HAVE_SUITESPARSE_UMFPACK_H)
+        # include <suitesparse/umfpack.h>
+        #elif defined (HAVE_UFSPARSE_UMFPACK_H)
+        # include <ufsparse/umfpack.h>
         #elif defined (HAVE_UMFPACK_UMFPACK_H)
-        #include <umfpack/umfpack.h>
+        # include <umfpack/umfpack.h>
         #elif defined (HAVE_UMFPACK_H)
-        #include <umfpack.h>
+        # include <umfpack.h>
         #endif
         int n = 5;
         int Ap[] = {0, 2, 5, 9, 10, 12};
         int Ai[]  = {0, 1, 0, 2, 4, 1, 2, 3, 4, 2, 1, 4};
         double Ax[] = {2., 0., 3., 0., 3., 0., -1., 0., 4., 0., 4., 0., 
                       -3., 0., 1., 0., 2., 0., 2., 0., 6., 0., 1., 0.};
         double br[] = {8., 45., -3., 3., 19.};
         double bi[] = {0., 0., 0., 0., 0.};
