# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1276748363 25200
#      Wed Jun 16 21:19:23 2010 -0700
# Node ID 6a5a0c9df5d7786fd14904d94150e484f45c4b3a
# Parent  fbd7843974faa121bf9c78b59b91c1e3485dd7a3
union.m: Remove seealso reference to deprecated function.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * interpreter/set.txi: Remove reference to deprecated function.
+
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
         * interpreter/expr.txi, interpreter/func.txi, interpreter/install.txi, 
         interpreter/plot.txi, interpreter/sparse.txi: Periodic grammar check
         of documentation to ensure a common format.
 
 2010-05-27  Rik <octave@nomad.inbox5.com>
 
diff --git a/doc/interpreter/set.txi b/doc/interpreter/set.txi
--- a/doc/interpreter/set.txi
+++ b/doc/interpreter/set.txi
@@ -28,17 +28,17 @@ represented as a vector of numbers.
 @menu
 * Set Operations::
 @end menu
 
 @node Set Operations
 @section Set Operations
 
 Octave supports the basic set operations.  That is, Octave can compute
-the union, intersection, complement, and difference of two sets.
+the union, intersection, and difference of two sets.
 Octave also supports the @emph{Exclusive Or} set operation, and
 membership determination.  The functions for set operations all work in
 pretty much the same way.  As an example, assume that @code{x} and
 @code{y} contains two sets, then
 
 @example
 union(x, y)
 @end example
@@ -47,13 +47,11 @@ union(x, y)
 computes the union of the two sets.
 
 @DOCSTRING(ismember)
 
 @DOCSTRING(union)
 
 @DOCSTRING(intersect)
 
-@DOCSTRING(complement)
-
 @DOCSTRING(setdiff)
 
 @DOCSTRING(setxor)
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * set/union.m: Remove seealso reference to deprecated function.
+
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
         * @ftp/dir.m, @ftp/ftp.m, @ftp/mget.m, @ftp/mput.m, @ftp/rename.m, 
         deprecated/fstat.m, general/accumdim.m, general/interp1.m, 
         linear-algebra/ishermitian.m, linear-algebra/issymmetric.m, 
         miscellaneous/substruct.m, optimization/fminbnd.m, 
         optimization/fsolve.m, plot/bar.m, plot/daspect.m, plot/pbaspect.m,
         plot/print.m, polynomial/mkpp.m, polynomial/ppval.m, set/union.m,
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -44,17 +44,17 @@
 ## @end group
 ## @end example
 ##
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} union (@var{a}, @var{b})
 ##
 ## Return index vectors @var{ia} and @var{ib} such that @code{a(ia)} and @code{b(ib)} are
 ## disjoint sets whose union is @var{c}.
 ## 
-## @seealso{intersect, complement, unique}
+## @seealso{intersect, setdiff, unique}
 ## @end deftypefn
 
 ## Author: jwe
 
 function [y, ia, ib] = union (a, b, varargin)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
