# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1435090910 -7200
#      Tue Jun 23 22:21:50 2015 +0200
# Node ID 6db2ea5556a44006bf344726635c9b6276b15bc0
# Parent  085c99b96aed1f46da04a32e25ff23fa63b09f78
Make use of the axes "ticklabelinterpreter" property (bug #45438)

* plot.txi: add an anchor pointing to usage of interpreter property
* genpropdoc.m: document axes "ticklabelinterpreter" property and text "interpreter" property
* gl-render.h: new private attribute "interpreter" that stores the interperter to be used in text_to_pixels
* gl-render.h (set_interpreter): new protected virtual method to set "interpreter"
* gl-render.cc (opengl_renderer::draw_axes): set interpreter before rendering tick labels
* gl-render.cc (opengl_renderer::text_to_pixels): make use of interpreter attribute
* graphics.cc (axes::properties::set_defaults): initialize "ticklabelinterpreter" instead of unused "interpreter"
* graphics.in.h (axes::properties): fix doubly defined defaults for "ticklabelinterpreter" and "interpreter" properties

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -660,16 +660,20 @@ height to be 0.4 and 0.5 respectively.  
         s.doc = doc_unused;
 
       case "tickdir"
         s.doc = "Control whether axes tick marks project \"in\" to the plot \
 box or \"out\".";
 
       case "tickdirmode"
 
+      case "ticklabelinterpreter"
+        s.doc = "Control the way x/y/zticklabel properties are interpreted.\n\
+@xref{XREFinterpreterusage, , @w{Use of the interpreter property}}.";
+        
       case "ticklength"
         s.doc = "Two-element vector @code{[2Dlen 3Dlen]} specifying the \
 length of the tickmarks relative to the longest visible axis.";
         s.valid = valid_2elvec;
 
       case "tightinset"
       case "title"
         s.doc = "Graphics handle of the title text object.";
@@ -823,16 +827,17 @@ for the z-axis.  __modemsg__.  @xref{XRE
       case "displayname"
         s.doc = "Text for the legend entry corresponding to this line.";
         s.valid = valid_cellstring;
 
       case "erasemode"
         s.doc = doc_unused;
 
       case "interpreter"
+        
       case "linestyle"
         s.doc = "@xref{Line Styles}.";
 
       case "linewidth"
         s.doc = "Width of the line object measured in points.";
 
       case "marker"
         s.doc = "Shape of the marker for each data point.  \
@@ -925,16 +930,20 @@ z data.";
       case "fontunits"
         s.doc = "The units used to interpret @code{fontsize} property.";
 
       case "fontweight"
         s.doc = "Control variant of base font used: bold, light, normal, etc.";
 
       case "horizontalalignment"
       case "interpreter"
+        s.doc = "Control the way the @qcode{\"string\"} property is \
+interpreted.\n\
+@xref{XREFinterpreterusage, , @w{Use of the interpreter property}}.";
+        
       case "linestyle"
         s.doc = sprintf (doc_notimpl, "Background area");
 
       case "linewidth"
         s.doc = sprintf (doc_notimpl, "Background area");
         s.valid = "scalar";
 
       case "margin"
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -611,16 +611,17 @@ figure window, call the @code{close} fun
 
 @DOCSTRING(delete)
 
 @DOCSTRING(close)
 
 @DOCSTRING(closereq)
 
 @node Use of the @code{interpreter} Property
+@anchor{XREFinterpreterusage}
 @subsection Use of the @code{interpreter} Property
 
 All text objects---such as titles, labels, legends, and text---include
 the property @qcode{"interpreter"} that determines the manner in
 which special control sequences in the text are rendered.
 
 The interpreter property can take three values: @qcode{"none"}, @qcode{"tex"},
 @qcode{"latex"}.  If the interpreter is set to @qcode{"none"} then no special
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1470,16 +1470,17 @@ opengl_renderer::draw_axes (const axes::
     glDisable (GL_LINE_SMOOTH);
 
   // draw axes object
 
   draw_axes_planes (props);
   draw_axes_boxes (props);
 
   set_font (props);
+  set_interpreter (props.get_ticklabelinterpreter ());
 
   draw_axes_x_grid (props);
   draw_axes_y_grid (props);
   draw_axes_z_grid (props);
 
   set_linestyle ("-");
 
   set_clipbox (x_min, x_max, y_min, y_max, z_min, z_max);
@@ -3224,17 +3225,17 @@ opengl_renderer::make_marker_list (const
 void
 opengl_renderer::text_to_pixels (const std::string& txt,
                                  uint8NDArray& pixels,
                                  Matrix& bbox,
                                  int halign, int valign, double rotation)
 {
 #if HAVE_FREETYPE
   text_renderer.text_to_pixels (txt, pixels, bbox,
-                                halign, valign, rotation, "none");
+                                halign, valign, rotation, interpreter);
 #endif
 }
 
 Matrix
 opengl_renderer::render_text (const std::string& txt,
                               double x, double y, double z,
                               int halign, int valign, double rotation)
 {
diff --git a/libinterp/corefcn/gl-render.h b/libinterp/corefcn/gl-render.h
--- a/libinterp/corefcn/gl-render.h
+++ b/libinterp/corefcn/gl-render.h
@@ -54,17 +54,17 @@ along with Octave; see the file COPYING.
 class
 OCTINTERP_API
 opengl_renderer
 {
 public:
   opengl_renderer (void)
     : toolkit (), xform (), xmin (), xmax (), ymin (), ymax (),
     zmin (), zmax (), xZ1 (), xZ2 (), marker_id (), filled_marker_id (),
-    camera_pos (), camera_dir ()
+    camera_pos (), camera_dir (), interpreter ("none")
 #if HAVE_FREETYPE
     , text_renderer ()
 #endif
   { }
 
   virtual ~opengl_renderer (void) { }
 
   virtual void draw (const graphics_object& go, bool toplevel = true);
@@ -103,16 +103,20 @@ protected:
   virtual void set_color (const Matrix& c);
   virtual void set_polygon_offset (bool on, float offset = 0.0f);
   virtual void set_linewidth (float w);
   virtual void set_linestyle (const std::string& s, bool stipple = false);
   virtual void set_clipbox (double x1, double x2, double y1, double y2,
                             double z1, double z2);
   virtual void set_clipping (bool on);
   virtual void set_font (const base_properties& props);
+  virtual void set_interpreter (const caseless_str interp) 
+  {
+    interpreter = interp;
+  }
 
   virtual void init_marker (const std::string& m, double size, float width);
   virtual void end_marker (void);
   virtual void draw_marker (double x, double y, double z,
                             const Matrix& lc, const Matrix& fc);
 
   virtual void text_to_pixels (const std::string& txt,
                                uint8NDArray& pixels,
@@ -202,16 +206,19 @@ private:
   double xZ1, xZ2;
 
   // call lists identifiers for markers
   unsigned int marker_id, filled_marker_id;
 
   // camera information for primitive sorting
   ColumnVector camera_pos, camera_dir;
 
+  // interpreter to be used by text_to_pixels
+  caseless_str interpreter;
+
 #if HAVE_FREETYPE
   // FreeType render, used for text rendering
   ft_render text_renderer;
 #endif
 
 private:
   class patch_tesselator;
 };
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -5051,17 +5051,17 @@ axes::properties::set_defaults (base_gra
   zminortick = "off";
   xticklabel = "";
   yticklabel = "";
   zticklabel = "";
   xticklabelmode = "auto";
   yticklabelmode = "auto";
   zticklabelmode = "auto";
 
-  interpreter = "none";
+  ticklabelinterpreter = "tex";
 
   color = color_values ("white");
   xcolor = color_values ("black");
   ycolor = color_values ("black");
   zcolor = color_values ("black");
   xscale = "linear";
   yscale = "linear";
   zscale = "linear";
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3926,17 +3926,17 @@ public:
       radio_property fontweight u , "{normal}|bold"
       double_property gridalpha , 0.15
       radio_property gridalphamode , "{auto}|manual"
       color_property gridcolor , color_property (color_values (0.15, 0.15, 0.15), radio_values ("none"))
       radio_property gridcolormode , "{auto}|manual"
       radio_property gridlinestyle , "{:}|-|--|-.|none"
       // NOTE: interpreter is not a Matlab axis property, but it makes
       //       more sense to have it so that axis ticklabels can use it.
-      radio_property interpreter , "{tex}|latex|{none}"
+      radio_property interpreter , "{tex}|latex|none"
       double_property labelfontsizemultiplier , 1.1
       radio_property layer u , "{bottom}|top"
       // FIXME: should be kind of string array.
       any_property linestyleorder S , "-"
       double_property linestyleorderindex , 1.0
       double_property linewidth , 0.5
       double_property minorgridalpha , 0.25
       radio_property minorgridalphamode , "{auto}|manual"
@@ -3949,17 +3949,17 @@ public:
       radio_property plotboxaspectratiomode u , "{auto}|manual"
       radio_property pickableparts , "{visible}|all|none"
       array_property position u , default_axes_position ()
       radio_property projection , "{orthographic}|perspective"
       radio_property sortmethod , "{depth}|childorder"
       radio_property tickdir mu , "{in}|out"
       radio_property tickdirmode u , "{auto}|manual"
       // FIXME: Added recently to Matlab, should replace interpreter property.
-      radio_property ticklabelinterpreter , "{tex}|latex|{none}"
+      radio_property ticklabelinterpreter , "{tex}|latex|none"
       array_property ticklength u , default_axes_ticklength ()
       array_property tightinset r , Matrix (1, 4, 0.0)
       handle_property title SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
       double_property titlefontsizemultiplier , 1.1
       radio_property titlefontweight , "{bold}|normal"
       // FIXME: uicontextmenu should be moved here.
       radio_property units SU , "{normalized}|inches|centimeters|points|pixels|characters"
       array_property view u , default_axes_view ()
