# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1475769320 14400
#      Thu Oct 06 11:55:20 2016 -0400
# Branch stable
# Node ID 51b395d247820e6110f6d2216286ed6d68814d16
# Parent  5aa8f199e3283fddd6cdf0e1492606d91e44e51b
maint: strip tabs and trailing whitespace from C++ sources.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1009,17 +1009,17 @@ main_window::handle_delete_debugger_poin
   if (cmd_focus)
     focus_command_window ();
 }
 
 void
 main_window::handle_update_breakpoint_marker_request (bool insert,
                                                       const QString& file,
                                                       int line,
-						      const QString& cond)
+                                                      const QString& cond)
 {
   bool cmd_focus = command_window_has_focus ();
 
   emit update_breakpoint_marker_signal (insert, file, line, cond);
 
   if (cmd_focus)
     focus_command_window ();
 }
@@ -1441,22 +1441,22 @@ main_window::construct (void)
       connect (this,
                SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
                editor_window,
                SLOT (handle_delete_debugger_pointer_request (const QString&,
                                                              int)));
 
       connect (this,
                SIGNAL (update_breakpoint_marker_signal (bool, const QString&,
-	                                                int, const QString&)),
+                                                        int, const QString&)),
                editor_window,
                SLOT (handle_update_breakpoint_marker_request (bool,
                                                               const QString&,
                                                               int,
-							                                                const QString&)));
+                                                                                                        const QString&)));
 #endif
 
       octave_link::post_event (this,
                                &main_window::resize_command_window_callback);
 
       configure_shortcuts ();
     }
 }
@@ -1590,22 +1590,22 @@ main_window::construct_octave_qt_link (v
       connect (_octave_qt_link,
                SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
                this,
                SLOT (handle_delete_debugger_pointer_request (const QString&,
                                                              int)));
 
       connect (_octave_qt_link,
                SIGNAL (update_breakpoint_marker_signal (bool, const QString&,
-	                                                      int, const QString&)),
+                                                              int, const QString&)),
                this,
                SLOT (handle_update_breakpoint_marker_request (bool,
-	                                                            const QString&,
+                                                                    const QString&,
                                                               int,
-							                                                const QString&)));
+                                                                                                        const QString&)));
 
       connect (_octave_qt_link,
                SIGNAL (show_doc_signal (const QString &)),
                this, SLOT (handle_show_doc (const QString &)));
 
       connect (_workspace_model,
                SIGNAL (rename_variable (const QString&, const QString&)),
                this,
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -163,17 +163,17 @@ public slots:
   void debug_step_over (void);
   void debug_step_out (void);
   void debug_quit (void);
 
   void handle_insert_debugger_pointer_request (const QString& file, int line);
   void handle_delete_debugger_pointer_request (const QString& file, int line);
   void handle_update_breakpoint_marker_request (bool insert,
                                                 const QString& file, int line,
-                                    						const QString& cond);
+                                                const QString& cond);
 
   void read_settings (void);
   void init_terminal_size (void);
   void set_window_layout (QSettings *settings);
   void write_settings (void);
   void connect_visibility_changed (void);
 
   void copyClipboard (void);
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -206,17 +206,17 @@ octave_dock_widget::make_window ()
   // FIXME: dockWidgetArea always returns 2
   settings->setValue ("DockWidgets/" + objectName () + "_dock_area",
                       _parent->dockWidgetArea (this));
   settings->setValue ("DockWidgets/" + objectName (), saveGeometry ());
   settings->sync ();
 
   // remove parent and adjust the (un)dock icon
   setParent (0, Qt::Window);
-  _dock_action->setIcon (QIcon (":/actions/icons/widget-dock" 
+  _dock_action->setIcon (QIcon (":/actions/icons/widget-dock"
                                 + _icon_color + ".png"));
   _dock_action->setToolTip (tr ("Dock widget"));
 
   // restore the last geometry when floating
   setGeometry (settings->value ("DockWidgets/" + objectName ()
                                 + "_floating_geometry",
                                 QRect (50,100,480,480)).toRect ());
 
diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -295,30 +295,30 @@ public:
   void set_m (mwSize /*m*/) { request_mutation (); }
 
   void set_n (mwSize /*n*/) { request_mutation (); }
 
   int set_dimensions (mwSize * /*dims_arg*/, mwSize /*ndims_arg*/)
   {
     request_mutation ();
 
-    return 0; 
+    return 0;
   }
 
   mwSize get_number_of_elements (void) const { return val.numel (); }
 
   int is_empty (void) const { return val.is_empty (); }
 
   bool is_scalar (void) const
   {
     // Force dims and ndims to be cached.
     get_dimensions ();
 
     return ndims == 2 && dims[0] == 1 && dims[1] == 1;
-  }  
+  }
 
   mxClassID get_class_id (void) const
   {
     id = mxUNKNOWN_CLASS;
 
     std::string cn = val.class_name ();
 
     if (cn == "double")
@@ -377,18 +377,18 @@ public:
 
   // Not allowed.
   void set_cell (mwIndex /*idx*/, mxArray * /*val*/) { request_mutation (); }
 
   double get_scalar (void) const
   {
     if (val.is_sparse_type ())
       {
-        // For sparse arrays, return the first non-zero value. 
-        void * data = val.mex_get_data (); 
+        // For sparse arrays, return the first non-zero value.
+        void * data = val.mex_get_data ();
         if (data == NULL)
           return 0.0;
 
         if (val.is_bool_type ())
           return *static_cast<bool *> (data);
         else if (val.is_real_type ())
           return *static_cast<double *> (data);
         else  // Complex type, only return real part
@@ -770,17 +770,17 @@ public:
     ndims = ndims_arg;
 
     mxFree (dims);
 
     if (ndims > 0)
       {
         dims
           = static_cast<mwSize *> (mxArray::malloc (ndims * sizeof (mwSize)));
-        
+
         if (dims == NULL)
           return 1;
 
         for (int i = 0; i < ndims; i++)
           dims[i] = dims_arg[i];
 
         return 0;
       }
diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -1119,17 +1119,17 @@ are zero or more @qcode{'b'} characters 
 %! [a, b] = regexp (str, "[o]+", "match", "split");
 %! assert (a, {"oo"});
 %! assert (b, {"f", " bar"});
 
 %!assert (regexp ("\n", '\n'), 1)
 %!assert (regexp ("\n", "\n"), 1)
 
 # Test escape sequences are silently converted
-%!test <45407> 
+%!test <45407>
 %! assert (regexprep ('s', 's', 'x\.y'), 'x.y');
 %! assert (regexprep ('s', '(s)', 'x\$1y'), 'x$1y');
 %! assert (regexprep ('s', '(s)', 'x\\$1y'), 'x\sy');
 
 */
 
 DEFUN (regexpi, args, nargout,
        doc: /* -*- texinfo -*-
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -597,17 +597,17 @@ main (int argc, char **argv)
           return 1;
         }
 
       if (! file.empty () && octfile.empty ())
         octfile = file;
     }
 
   if (output_ext ==  ".mex"
-      && vars["ALL_CFLAGS"].find ("-g") != std::string::npos) 
+      && vars["ALL_CFLAGS"].find ("-g") != std::string::npos)
     {
       defs += " -DMEX_DEBUG";
     }
 
   if (link_stand_alone)
     {
       if (! outputfile.empty ())
         output_option = "-o " + outputfile;
