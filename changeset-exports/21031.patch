# HG changeset patch
# User Rik <rik@octave.org>
# Date 1451859728 28800
#      Sun Jan 03 14:22:08 2016 -0800
# Node ID 66a08c3cafe3a56dc0e27c85c4747e43a56a935e
# Parent  e204d44f50693cc67edb70208e0f51d0ff5f7e28
maint: Follow Octave coding conventions in m-files.

* repmat.m, strread.m, qmr.m: use "endif" rather than "end".

* binoinv.m, nbininv.m: Use "endwhile" rather than "end".

* edit.m: Remove useless "return" after error().

* krylov.m, __gnuplot_draw_axes__.m, __splinefit__.m: Fix indentation.

diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -71,17 +71,17 @@ function x = repmat (A, m, varargin)
   else
     if (nargin > 3)
       ## input check for m and varargin
       if (isscalar (m) && all (cellfun ("numel", varargin) == 1))
         m = [m varargin{:}];
         n = [];
       else
         error ("repmat: all input arguments must be scalar");
-      end
+      endif
     elseif (isempty (m))
       m = n = 1;
     elseif (isscalar (m))
       n = m;
     elseif (ndims (m) > 2)
       error ("repmat: M has more than 2 dimensions");
     elseif (all (size (m) > 1))
       m = m(:,1).';
diff --git a/scripts/io/strread.m b/scripts/io/strread.m
--- a/scripts/io/strread.m
+++ b/scripts/io/strread.m
@@ -385,17 +385,17 @@ function varargout = strread (str, forma
       endif
       cstop = cstop(cidx);
     endif
     len = length (str);
     c2len = length (comment_end);
     if (cstop + c2len == len)
       ## Ignore last char of to-the-end-of-line comments
       c2len += 1;
-    end
+    endif
     str = cellslices (str, [1, cstop + c2len], [cstart - 1, len]);
     str = [str{:}];
   endif
 
   if (! isempty (white_spaces))
     ## For numeric fields, whitespace is always a delimiter, but not for text
     ## fields
     if (isempty (regexp (format, '%\*?\d*s')))
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -82,17 +82,17 @@ function [Uret, H, nu] = krylov (A, V, k
   if (! issquare (A) || isempty (A))
     error ("krylov: A(%d x %d) must be a non-empty square matrix", rows (A), columns (A));
   endif
   na = rows (A);
 
   [m, kb] = size (V);
   if (m != na)
     error ("krylov: A(%d x %d), V(%d x %d): argument dimensions do not match",
-          na, na, m, kb);
+           na, na, m, kb);
   endif
 
   if (! isscalar (k))
     error ("krylov: K must be a scalar integer");
   endif
 
   Vnrm = norm (V, Inf);
 
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -157,17 +157,16 @@ function ret = edit (varargin)
     ## or a combination of editor state name and new value for that state,
     ## so first check for the various states
     statevar = varargin{1};
     stateval = varargin{2};
     switch (toupper (statevar))
       case "EDITOR"
         error ("Octave:deprecated-function",
                "The EDITOR option of edit has been removed.  Use EDITOR() directly.")
-        return;
       case "HOME"
         if (! isempty (stateval) && stateval(1) == "~")
           stateval = [ get_home_directory, stateval(2:end) ];
         endif
         FUNCTION.HOME = stateval;
         return;
       case "AUTHOR"
         FUNCTION.AUTHOR = stateval;
diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -1392,18 +1392,17 @@ function __gnuplot_draw_axes__ (h, plot_
         ## Push group children into the kid list.
         if (isempty (kids))
           kids = obj.children;
         elseif (! isempty (obj.children))
           kids = [kids; obj.children];
         endif
 
       otherwise
-        error ("__gnuplot_draw_axes__: unknown object class, %s",
-               obj.type);
+        error ("__gnuplot_draw_axes__: unknown object class, %s", obj.type);
     endswitch
 
   endwhile
 
   ## This is need to prevent warnings for rotations in 3D plots, while
   ## allowing colorbars with contours.
   if (nd == 2 || (data_idx > 1 && ! view_map))
     fputs (plot_stream, "set pm3d implicit;\n");
diff --git a/scripts/polynomial/private/__splinefit__.m b/scripts/polynomial/private/__splinefit__.m
--- a/scripts/polynomial/private/__splinefit__.m
+++ b/scripts/polynomial/private/__splinefit__.m
@@ -1,12 +1,11 @@
 ## This function is private because it is maintained by Jonas Lundgren
-## separtely from Octave.  Please do not reformat to match Octave coding
-## conventions as that would make it harder to integrate upstream
-## changes.
+## separately from Octave.  Please do not reformat to match Octave coding
+## conventions as that would make it harder to integrate upstream changes.
 
 % Copyright (c) 2010, Jonas Lundgren
 % All rights reserved.
 %
 % Redistribution and use in source and binary forms, with or without
 % modification, are permitted provided that the following conditions are
 % met:
 %
diff --git a/scripts/sparse/qmr.m b/scripts/sparse/qmr.m
--- a/scripts/sparse/qmr.m
+++ b/scripts/sparse/qmr.m
@@ -218,17 +218,17 @@ function [x, flag, relres, iter, resvec]
         s = eta1 * pt + (theta0 * gamma1)^2 * s;
       endif
       x += d;
       r -= s;
 
       res1 = norm (r) / bnorm;
       if (nargout > 4)
         resvec(iter + 1, 1) = norm (r);
-      end
+      endif
 
       if (res1 < tol)
         ## Convergence achieved.
         flag = 0;
         break;
       elseif (res0 <= res1)
         ## Stagnation encountered.
         flag = 3;
diff --git a/scripts/statistics/distributions/binoinv.m b/scripts/statistics/distributions/binoinv.m
--- a/scripts/statistics/distributions/binoinv.m
+++ b/scripts/statistics/distributions/binoinv.m
@@ -138,17 +138,17 @@ function m = bin_search_binoinv (x, n, p
   k = 1:length (x);
   lower = zeros (size (x));
   limit = 500;              # lower bound on point at which prev phase finished
   while (any (k) && limit < 1e100)
     cdf = binocdf (limit, n, p);
     k = (x > cdf);
     lower(k) = limit;
     limit += limit;
-  end
+  endwhile
   upper = max (2*lower, 1);
   k = find (lower != limit/2);       # elements for which above loop finished
   for i = 1:ceil (log2 (max (lower)))
     mid = (upper + lower)/2;
     cdf = binocdf (floor(mid(:)), n, p);
     r = (x <= cdf);
     upper(r)  = mid(r);
     lower(! r) = mid(! r);
diff --git a/scripts/statistics/distributions/nbininv.m b/scripts/statistics/distributions/nbininv.m
--- a/scripts/statistics/distributions/nbininv.m
+++ b/scripts/statistics/distributions/nbininv.m
@@ -110,17 +110,17 @@ function m = bin_search_nbininv (x, n, p
   k = 1:length (x);
   lower = zeros (size (x));
   limit = 1;
   while (any (k) && limit < 1e100)
     cdf = nbincdf (limit, n, p);
     k = (x > cdf);
     lower(k) = limit;
     limit += limit;
-  end
+  endwhile
   upper = max (2*lower, 1);
   k = find (lower != limit/2);    # elements for which above loop finished
   for i = 1:ceil (log2 (max (lower)))
     mid = (upper + lower)/2;
     cdf = nbincdf (floor (mid), n, p);
     r = (x <= cdf);
     upper(r)  = mid(r);
     lower(! r) = mid(! r);
