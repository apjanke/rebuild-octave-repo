# HG changeset patch
# User Rik <rik@octave.org>
# Date 1392934133 28800
#      Thu Feb 20 14:08:53 2014 -0800
# Node ID 146ce31e5d28ee49fc6ca9869fe4f7c40d98727e
# Parent  c579bd4e12c93dcdc7e76f57418b1f81b2806a59
# Parent  554be77a60fb9a27bce21ff3e38547126d843d18
maint: Merge gui-release to default.

diff --git a/libgui/graphics/Backend.cc b/libgui/graphics/Backend.cc
--- a/libgui/graphics/Backend.cc
+++ b/libgui/graphics/Backend.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
@@ -39,23 +40,19 @@ along with Foobar.  If not, see <http://
 //# define OCTAVE_INTPTR_TYPE uint32_t
 //# define OCTAVE_PTR_SCALAR uint32_scalar_value
 //#else
 # define OCTAVE_PTR_TYPE octave_uint64
 # define OCTAVE_INTPTR_TYPE uint64_t
 # define OCTAVE_PTR_SCALAR uint64_scalar_value
 //#endif
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static std::string toolkitObjectProperty (const graphics_object& go)
 {
   if (go.isa ("figure"))
     return std::string ("__plot_stream__");
   else if (go.isa ("uicontrol")
 	   || go.isa ("uipanel")
 	   || go.isa ("uimenu")
 	   || go.isa ("uicontextmenu")
@@ -65,35 +62,29 @@ static std::string toolkitObjectProperty
     return std::string ("__object__");
   else
     qCritical ("QtHandles::Backend: no __object__ property known for object "
 	       "of type %s", go.type ().c_str ());
 
   return std::string ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Backend::Backend (void)
   : QObject (), base_graphics_toolkit ("qt")
 {
   ObjectFactory* factory = ObjectFactory::instance ();
 
   connect (this, SIGNAL (createObject (double)),
 	   factory, SLOT (createObject (double)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Backend::~Backend (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool Backend::initialize (const graphics_object& go)
 {
   if (go.isa ("figure")
       || go.isa ("uicontrol")
       || go.isa ("uipanel")
       || go.isa ("uimenu")
       || go.isa ("uicontextmenu")
       || go.isa ("uitoolbar")
@@ -112,18 +103,16 @@ bool Backend::initialize (const graphics
       emit createObject (go.get_handle ().value ());
 
       return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Backend::update (const graphics_object& go, int pId)
 {
   // Rule out obvious properties we want to ignore.
   if (pId == figure::properties::ID___PLOT_STREAM__
       || pId == uicontrol::properties::ID___OBJECT__
       || pId == uipanel::properties::ID___OBJECT__
       || pId == uimenu::properties::ID___OBJECT__
       || pId == uicontextmenu::properties::ID___OBJECT__
@@ -149,18 +138,16 @@ void Backend::update (const graphics_obj
 	  finalize (go);
 	  initialize (go);
 	}
       else
 	proxy->update (pId);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Backend::finalize (const graphics_object& go)
 {
   Logger::debug ("Backend::finalize %s from thread %08x",
 		 go.type ().c_str (), QThread::currentThreadId ());
 
   ObjectProxy* proxy = toolkitObjectProxy (go);
 
   if (proxy)
@@ -169,43 +156,37 @@ void Backend::finalize (const graphics_o
       delete proxy;
 
       graphics_object gObj (go);
 
       gObj.get_properties ().set (toolkitObjectProperty (go), Matrix ());
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Backend::redraw_figure (const graphics_object& go) const
 {
   if (go.get_properties ().is_visible ())
     {
       ObjectProxy* proxy = toolkitObjectProxy (go);
 
       if (proxy)
 	proxy->redraw ();
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Object* Backend::toolkitObject (const graphics_object& go)
 {
   ObjectProxy* proxy = toolkitObjectProxy (go);
 
   if (proxy)
     return proxy->object ();
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ObjectProxy* Backend::toolkitObjectProxy (const graphics_object& go)
 {
   if (go)
     {
       octave_value ov = go.get (toolkitObjectProperty (go));
 
       if (ov.is_defined () && ! ov.is_empty ())
 	{
@@ -214,11 +195,9 @@ ObjectProxy* Backend::toolkitObjectProxy
 	  if (! error_state)
 	    return reinterpret_cast<ObjectProxy*> (ptr);
 	}
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/Backend.h b/libgui/graphics/Backend.h
--- a/libgui/graphics/Backend.h
+++ b/libgui/graphics/Backend.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Backend__
 #define __QtHandles_Backend__ 1
 
 #include <QObject>
 
 #include "graphics.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Object;
 class ObjectProxy;
 
 class Backend :
   public QObject,
   public base_graphics_toolkit
 {
   Q_OBJECT
@@ -60,15 +57,11 @@ public:
   static Object* toolkitObject (const graphics_object& go);
 
   static ObjectProxy* toolkitObjectProxy (const graphics_object& go);
 
 signals:
   void createObject (double handle);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif 
diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -1,49 +1,46 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QEvent>
 #include <QKeyEvent>
 #include <QMouseEvent>
 #include <QWidget>
 
 #include "BaseControl.h"
 #include "ContextMenu.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static void updatePalette (const uicontrol::properties& props, QWidget* w)
 {
   QPalette p = w->palette ();
 
   if (props.style_is ("edit")
       || props.style_is ("listbox")
       || props.style_is ("popupmenu"))
     {
@@ -66,26 +63,22 @@ static void updatePalette (const uicontr
 		  Utils::fromRgb (props.get_backgroundcolor_rgb ()));
       p.setColor (QPalette::WindowText,
 		  Utils::fromRgb (props.get_foregroundcolor_rgb ()));
     }
 
   w->setPalette (p);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 BaseControl::BaseControl (const graphics_object& go, QWidget* w)
   : Object (go, w), m_normalizedFont (false), m_keyPressHandlerDefined (false)
 {
   init (w);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void BaseControl::init (QWidget* w, bool callBase)
 {
   if (callBase)
     Object::init (w, callBase);
 
   uicontrol::properties& up = properties<uicontrol> ();
 
   Matrix bb = up.get_boundingbox (false);
@@ -98,24 +91,20 @@ void BaseControl::init (QWidget* w, bool
   w->setVisible (up.is_visible ());
   m_keyPressHandlerDefined = ! up.get_keypressfcn ().is_empty ();
 
   w->installEventFilter (this);
 
   m_normalizedFont = up.fontunits_is ("normalized");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 BaseControl::~BaseControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void BaseControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QWidget* w = qWidget<QWidget> ();
 
    switch (pId)
     {
     case uicontrol::properties::ID_POSITION:
@@ -153,18 +142,16 @@ void BaseControl::update (int pId)
     case uicontrol::properties::ID_KEYPRESSFCN:
       m_keyPressHandlerDefined = ! up.get_keypressfcn ().is_empty ();
       break;
     default:
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool BaseControl::eventFilter (QObject* watched, QEvent* event)
 {
   switch (event->type ())
     {
     case QEvent::Resize:
       if (m_normalizedFont)
 	{
 	  gh_manager::auto_lock lock;
@@ -223,11 +210,9 @@ bool BaseControl::eventFilter (QObject* 
         }
       break;
     default: break;
     }
 
   return Object::eventFilter (watched, event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/BaseControl.h b/libgui/graphics/BaseControl.h
--- a/libgui/graphics/BaseControl.h
+++ b/libgui/graphics/BaseControl.h
@@ -1,44 +1,41 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_BaseControl__
 #define __QtHandles_BaseControl__ 1
 
 #include "Object.h"
 
 class QEvent;
 class QObject;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class BaseControl : public Object
 {
 public:
   BaseControl (const graphics_object& go, QWidget* w);
   ~BaseControl (void);
 
   Container* innerContainer (void) { return 0; }
 
@@ -48,15 +45,11 @@ protected:
   void init (QWidget* w, bool callBase = false);
   void update (int pId);
 
 private:
   bool m_normalizedFont;
   bool m_keyPressHandlerDefined;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ButtonControl.cc b/libgui/graphics/ButtonControl.cc
--- a/libgui/graphics/ButtonControl.cc
+++ b/libgui/graphics/ButtonControl.cc
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAbstractButton>
 
 #include "ButtonControl.h"
 #include "Container.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ButtonControl::ButtonControl (const graphics_object& go, QAbstractButton* btn)
     : BaseControl (go, btn), m_blockCallback (false)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   btn->setText (Utils::fromStdString (up.get_string_string ()));
   if (btn->isCheckable () || up.style_is ("togglebutton"))
     {
@@ -51,24 +48,20 @@ ButtonControl::ButtonControl (const grap
       if (value.numel () > 0 && value(0) == up.get_max ())
 	btn->setChecked (true);
     }
 
   connect (btn, SIGNAL (clicked (void)), SLOT (clicked (void)));
   connect (btn, SIGNAL (toggled (bool)), SLOT (toggled (bool)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ButtonControl::~ButtonControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ButtonControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QAbstractButton* btn = qWidget<QAbstractButton> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -93,18 +86,16 @@ void ButtonControl::update (int pId)
       m_blockCallback = false;
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ButtonControl::toggled (bool checked)
 {
   QAbstractButton* btn = qWidget<QAbstractButton> ();
 
   if (! m_blockCallback && btn->isCheckable ())
     {
       gh_manager::auto_lock lock;
 
@@ -115,21 +106,17 @@ void ButtonControl::toggled (bool checke
 
       if (oldValue.numel() != 1
 	  || (newValue != oldValue(0)))
 	gh_manager::post_set (m_handle, "value", newValue, false);
       gh_manager::post_callback (m_handle, "callback");
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ButtonControl::clicked (void)
 {
   QAbstractButton* btn = qWidget<QAbstractButton> ();
 
   if (! btn->isCheckable ())
     gh_manager::post_callback (m_handle, "callback");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/ButtonControl.h b/libgui/graphics/ButtonControl.h
--- a/libgui/graphics/ButtonControl.h
+++ b/libgui/graphics/ButtonControl.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ButtonControl__
 #define __QtHandles_ButtonControl__ 1
 
 #include "BaseControl.h"
 
 class QAbstractButton;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class ButtonControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   ButtonControl (const graphics_object& go, QAbstractButton* btn);
   ~ButtonControl (void);
 
@@ -47,15 +44,11 @@ protected:
 private slots:
   void clicked (void);
   void toggled (bool checked);
 
 private:
   bool m_blockCallback;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
@@ -29,55 +30,45 @@ along with Foobar.  If not, see <http://
 #include <QRectF>
 
 #include "Backend.h"
 #include "Canvas.h"
 #include "ContextMenu.h"
 #include "GLCanvas.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::redraw (bool sync)
 {
   if (sync)
     qWidget ()->repaint ();
   else
     qWidget ()->update ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::blockRedraw (bool block)
 {
   m_redrawBlocked = block;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::canvasPaintEvent (void)
 {
   if (! m_redrawBlocked)
     {
       gh_manager::auto_lock lock;
 
       draw (m_handle);
 
       if (m_mouseMode == ZoomMode && m_mouseAxes.ok ())
 	drawZoomBox (m_mouseAnchor, m_mouseCurrent);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::canvasMouseMoveEvent (QMouseEvent* event)
 {
   gh_manager::auto_lock lock;
   graphics_object ax = gh_manager::get_object (m_mouseAxes);
 
   if (m_mouseMode != NoMode && ax.valid_object ())
     {
       axes::properties& ap = Utils::properties<axes> (ax);
@@ -140,18 +131,16 @@ void Canvas::canvasMouseMoveEvent (QMous
 	case PanMode:
 	  break;
 	default:
 	  break;
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::canvasMousePressEvent (QMouseEvent* event)
 {
   gh_manager::auto_lock lock;
   graphics_object obj = gh_manager::get_object (m_handle);
 
   if (obj.valid_object ())
     {
       graphics_object figObj (obj.get_ancestor ("figure"));
@@ -287,18 +276,16 @@ void Canvas::canvasMousePressEvent (QMou
 	    }
 	  break;
 	default:
 	  break;
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Canvas::canvasMouseReleaseEvent (QMouseEvent* event)
 {
   if (m_mouseMode == ZoomMode
       && m_mouseAxes.ok ()
       && m_mouseAnchor != event->pos ())
     {
       gh_manager::auto_lock lock;
       graphics_object ax = gh_manager::get_object (m_mouseAxes);
@@ -341,53 +328,45 @@ void Canvas::canvasMouseReleaseEvent (QM
                                      "windowbuttonupfcn");
         }
     }
 
   m_mouseAxes = graphics_handle ();
   m_mouseMode = NoMode;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool Canvas::canvasKeyPressEvent (QKeyEvent* event)
 {
   if (m_eventMask & KeyPress)
     {
       octave_scalar_map eventData = Utils::makeKeyEventStruct (event);
 
       gh_manager::post_set (m_handle, "currentcharacter",
                             eventData.getfield ("Character"), false);
       gh_manager::post_callback (m_handle, "keypressfcn", eventData);
 
       return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool Canvas::canvasKeyReleaseEvent (QKeyEvent* event)
 {
   if (! event->isAutoRepeat () && (m_eventMask & KeyRelease))
     {
       gh_manager::post_callback (m_handle, "keyreleasefcn",
                                  Utils::makeKeyEventStruct (event));
 
       return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Canvas* Canvas::create (const std::string& /* name */, QWidget* parent,
 			const graphics_handle& handle)
 {
   // Only OpenGL
   return new GLCanvas (parent, handle);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Canvas.h b/libgui/graphics/Canvas.h
--- a/libgui/graphics/Canvas.h
+++ b/libgui/graphics/Canvas.h
@@ -1,49 +1,46 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Canvas__
 #define __QtHandles_Canvas__ 1
 
 #include <QPoint>
 
 #include "graphics.h"
 
 #include "Figure.h"
 
 class QKeyEvent;
 class QMouseEvent;
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Canvas
 {
 public:
   enum EventMask
     {
       KeyPress   = 0x01,
       KeyRelease = 0x02
     };
@@ -90,15 +87,11 @@ private:
   bool m_redrawBlocked;
   MouseMode m_mouseMode;
   QPoint m_mouseAnchor;
   QPoint m_mouseCurrent;
   graphics_handle m_mouseAxes;
   int m_eventMask;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/CheckBoxControl.cc b/libgui/graphics/CheckBoxControl.cc
--- a/libgui/graphics/CheckBoxControl.cc
+++ b/libgui/graphics/CheckBoxControl.cc
@@ -1,69 +1,60 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QCheckBox>
 
 #include "CheckBoxControl.h"
 #include "Container.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 CheckBoxControl* CheckBoxControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new CheckBoxControl (go, new QCheckBox (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 CheckBoxControl::CheckBoxControl (const graphics_object& go, QCheckBox* box)
     : ButtonControl (go, box)
 {
   box->setAutoFillBackground (true);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 CheckBoxControl::~CheckBoxControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/CheckBoxControl.h b/libgui/graphics/CheckBoxControl.h
--- a/libgui/graphics/CheckBoxControl.h
+++ b/libgui/graphics/CheckBoxControl.h
@@ -1,51 +1,44 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_CheckBoxControl__
 #define __QtHandles_CheckBoxControl__ 1
 
 #include "ButtonControl.h"
 
 class QCheckBox;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class CheckBoxControl : public ButtonControl
 {
 public:
   CheckBoxControl (const graphics_object& go, QCheckBox* box);
   ~CheckBoxControl (void);
 
   static CheckBoxControl* create (const graphics_object& go);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Container.cc b/libgui/graphics/Container.cc
--- a/libgui/graphics/Container.cc
+++ b/libgui/graphics/Container.cc
@@ -1,63 +1,56 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QVBoxLayout>
 
 #include "graphics.h"
 
 #include "Canvas.h"
 #include "Container.h"
 #include "Object.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 Container::Container (QWidget* parent)
   : ContainerBase (parent), m_canvas (0)
 {
   setFocusPolicy (Qt::ClickFocus);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Container::~Container (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Canvas* Container::canvas (const graphics_handle& handle, bool create)
 {
   if (! m_canvas && create)
     {
       graphics_object go = gh_manager::get_object (handle);
 
       if (go)
 	{
@@ -72,18 +65,16 @@ Canvas* Container::canvas (const graphic
 	  canvasWidget->show ();
 	  canvasWidget->setGeometry (0, 0, width (), height ());
 	}
     }
 
   return m_canvas;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Container::resizeEvent (QResizeEvent* /* event */)
 {
   if (m_canvas)
     m_canvas->qWidget ()->setGeometry (0, 0, width (), height ());
 
   gh_manager::auto_lock lock;
 
   foreach (QObject* qObj, children ())
@@ -99,11 +90,9 @@ void Container::resizeEvent (QResizeEven
 	      obj->qWidget<QWidget> ()
 		->setGeometry (xround (bb(0)), xround (bb(1)),
 			       xround (bb(2)), xround (bb(3)));
 	    }
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Container.h b/libgui/graphics/Container.h
--- a/libgui/graphics/Container.h
+++ b/libgui/graphics/Container.h
@@ -1,45 +1,42 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Container__
 #define __QtHandles_Container__ 1
 
 #include <QWidget>
 
 #include "GenericEventNotify.h"
 
 #include "graphics.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 DECLARE_GENERICEVENTNOTIFY_SENDER(ContainerBase, QWidget);
 
 class Canvas;
 
 class Container : public ContainerBase
 {
 public:
   Container (QWidget* parent);
@@ -49,15 +46,11 @@ public:
 
 protected:
   void resizeEvent (QResizeEvent* event);
 
 private:
   Canvas* m_canvas;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ContextMenu.cc b/libgui/graphics/ContextMenu.cc
--- a/libgui/graphics/ContextMenu.cc
+++ b/libgui/graphics/ContextMenu.cc
@@ -1,81 +1,72 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QMenu>
 
 #include "Backend.h"
 #include "ContextMenu.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ContextMenu* ContextMenu::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       QWidget* w = parent->qWidget<QWidget> ();
 
       return new ContextMenu (go, new QMenu (w));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ContextMenu::ContextMenu (const graphics_object& go, QMenu* menu)
     : Object (go, menu)
 {
   uicontextmenu::properties& up = properties<uicontextmenu> ();
 
   menu->setAutoFillBackground (true);
 
   connect (menu, SIGNAL (aboutToShow (void)), SLOT (aboutToShow (void)));
   connect (menu, SIGNAL (aboutToHide (void)), SLOT (aboutToHide (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ContextMenu::~ContextMenu (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ContextMenu::update (int pId)
 {
   uicontextmenu::properties& up = properties<uicontextmenu> ();
   QMenu* menu = qWidget<QMenu> ();
 
   switch (pId)
     {
     case base_properties::ID_VISIBLE:
@@ -95,40 +86,32 @@ void ContextMenu::update (int pId)
 	menu->hide ();
       break;
     default:
       Object::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ContextMenu::aboutToShow (void)
 {
   gh_manager::post_callback (m_handle, "callback");
   gh_manager::post_set (m_handle, "visible", "on", false);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ContextMenu::aboutToHide (void)
 {
   gh_manager::post_set (m_handle, "visible", "off", false);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QWidget* ContextMenu::menu (void)
 {
   return qWidget<QWidget> ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ContextMenu::executeAt (const base_properties& props, const QPoint& pt)
 {
   graphics_handle h = props.get_uicontextmenu ();
 
   if (h.ok ())
     {
       graphics_object go = gh_manager::get_object (h);
 
@@ -143,11 +126,9 @@ void ContextMenu::executeAt (const base_
 
 	      if (menu)
 		menu->popup (pt);
 	    }
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/ContextMenu.h b/libgui/graphics/ContextMenu.h
--- a/libgui/graphics/ContextMenu.h
+++ b/libgui/graphics/ContextMenu.h
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ContextMenu__
 #define __QtHandles_ContextMenu__ 1
 
 #include <QPoint>
 
 #include "MenuContainer.h"
 #include "Object.h"
 
 class QMenu;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class ContextMenu : public Object, public MenuContainer
 {
   Q_OBJECT
 
 public:
   ContextMenu (const graphics_object& go, QMenu* menu);
   ~ContextMenu (void);
 
@@ -54,15 +51,11 @@ public:
 protected:
   void update (int pId);
 
 private slots:
   void aboutToShow (void);
   void aboutToHide (void);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/EditControl.cc b/libgui/graphics/EditControl.cc
--- a/libgui/graphics/EditControl.cc
+++ b/libgui/graphics/EditControl.cc
@@ -1,47 +1,44 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QLineEdit>
 
 #include "Container.h"
 #include "EditControl.h"
 #include "TextEdit.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 EditControl* EditControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
@@ -54,26 +51,22 @@ EditControl* EditControl::create (const 
 	  else
 	    return new EditControl (go, new QLineEdit (container));
 	}
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 EditControl::EditControl (const graphics_object& go, QLineEdit* edit)
      : BaseControl (go, edit), m_multiLine (false), m_textChanged (false)
 {
   init (edit);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::init (QLineEdit* edit, bool callBase)
 {
   if (callBase)
     BaseControl::init (edit, callBase);
 
   m_multiLine = false;
   initCommon (edit);
 
@@ -84,26 +77,22 @@ void EditControl::init (QLineEdit* edit,
 					  up.get_verticalalignment ()));
 
   connect (edit, SIGNAL (textEdited (const QString&)),
 	   SLOT (textChanged (void)));
   connect (edit, SIGNAL (editingFinished (void)),
 	   SLOT (editingFinished (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 EditControl::EditControl (const graphics_object& go, TextEdit* edit)
      : BaseControl (go, edit), m_multiLine (true), m_textChanged (false)
 {
   init (edit);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::init (TextEdit* edit, bool callBase)
 {
   if (callBase)
     BaseControl::init (edit, callBase);
 
   m_multiLine = true;
   initCommon (edit);
 
@@ -114,31 +103,25 @@ void EditControl::init (TextEdit* edit, 
   edit->setPlainText (Utils::fromStdString (up.get_string_string ()));
   
   connect (edit, SIGNAL (textChanged (void)),
 	   SLOT (textChanged (void)));
   connect (edit, SIGNAL (editingFinished (void)),
 	   SLOT (editingFinished (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 EditControl::~EditControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::initCommon (QWidget*)
 {
   m_textChanged = false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::update (int pId)
 {
   bool handled = false;
 
   if (m_multiLine)
     handled = updateMultiLine (pId);
   else
     handled = updateSingleLine (pId);
@@ -149,18 +132,16 @@ void EditControl::update (int pId)
 	{
 	default:
 	  BaseControl::update (pId);
 	  break;
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool EditControl::updateSingleLine (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QLineEdit* edit = qWidget<QLineEdit> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -183,18 +164,16 @@ bool EditControl::updateSingleLine (int 
       return true;
     default:
       break;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool EditControl::updateMultiLine (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   TextEdit* edit = qWidget<TextEdit> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -212,37 +191,30 @@ bool EditControl::updateMultiLine (int p
       return true;
     default:
       break;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::textChanged (void)
 {
   m_textChanged = true;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void EditControl::editingFinished (void)
 {
   if (m_textChanged)
     {
       QString txt = (m_multiLine
 		     ? qWidget<TextEdit> ()->toPlainText ()
 		     : qWidget<QLineEdit> ()->text ());
 
       gh_manager::post_set (m_handle, "string", Utils::toStdString (txt), false);
       gh_manager::post_callback (m_handle, "callback");
 
       m_textChanged = false;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
diff --git a/libgui/graphics/EditControl.h b/libgui/graphics/EditControl.h
--- a/libgui/graphics/EditControl.h
+++ b/libgui/graphics/EditControl.h
@@ -1,44 +1,41 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_EditControl__
 #define __QtHandles_EditControl__ 1
 
 #include "BaseControl.h"
 
 class QLineEdit;
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class TextEdit;
 
 class EditControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   EditControl (const graphics_object& go, QLineEdit* edit);
@@ -61,15 +58,11 @@ private slots:
   void textChanged (void);
   void editingFinished (void);
 
 private:
   bool m_multiLine;
   bool m_textChanged;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAction>
@@ -39,90 +40,74 @@ along with Foobar.  If not, see <http://
 
 #include "Canvas.h"
 #include "Container.h"
 #include "Figure.h"
 #include "FigureWindow.h"
 #include "MouseModeActionGroup.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
-#define ABOUT_TEXT "<b>QtHandles</b> - a Qt-based toolkit for <a href=\"http://www.octave.org\">Octave</a>.<br><br>Copyright (C) 2011 Michael Goffioul."
-
-//////////////////////////////////////////////////////////////////////////////
+#define ABOUT_TEXT "<b>QtHandles</b> - a Qt-based toolkit for <a href=\"http://www.octave.org\">Octave</a>.<br><br>Copyright (C) 2011-2014 Michael Goffioul"
 
 DECLARE_GENERICEVENTNOTIFY_SENDER(MenuBar, QMenuBar);
 
-//////////////////////////////////////////////////////////////////////////////
-
 static bool hasUiControlChildren (const figure::properties& fp)
 {
   Matrix kids = fp.get_all_children ();
 
   for (int i = 0; i < kids.numel (); i++)
     {
       graphics_object go (gh_manager::get_object (kids(i)));
 
       if (go && (go.isa ("uicontrol") || go.isa ("uipanel")
 		 || go.isa ("uibuttongroup")))
 	return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 static bool hasUiMenuChildren (const figure::properties& fp)
 {
   Matrix kids = fp.get_all_children ();
 
   for (int i = 0; i < kids.numel (); i++)
     {
       graphics_object go (gh_manager::get_object (kids(i)));
 
       if (go && go.isa ("uimenu"))
 	return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 static QRect boundingBoxToRect (const Matrix& bb)
 {
   QRect r;
 
   if (bb.numel () == 4)
     {
       r = QRect (xround (bb(0)), xround (bb(1)),
                  xround (bb(2)), xround (bb(3)));
       if (! r.isValid ())
         r = QRect ();
     }
 
   return r;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Figure* Figure::create (const graphics_object& go)
 {
   return new Figure (go, new FigureWindow ());
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Figure::Figure (const graphics_object& go, FigureWindow* win)
      : Object (go, win), m_blockUpdates (false), m_mouseMode (NoMode),
        m_lastMouseMode (NoMode), m_figureToolBar (0), m_menuBar (0),
        m_innerRect (), m_outerRect ()
 {
   m_container = new Container (win);
   win->setCentralWidget (m_container);
 
@@ -163,24 +148,20 @@ Figure::Figure (const graphics_object& g
     QTimer::singleShot (0, win, SLOT (show ()));
   else
     win->hide ();
 
   win->addReceiver (this);
   m_container->addReceiver (this);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Figure::~Figure (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::createFigureToolBarAndMenuBar (void)
 {
   QMainWindow* win = qWidget<QMainWindow> ();
 
   m_figureToolBar = win->addToolBar (tr ("Figure ToolBar"));
   m_figureToolBar->setMovable (false);
   m_figureToolBar->setFloatable (false);
 
@@ -218,25 +199,21 @@ void Figure::createFigureToolBarAndMenuB
   helpMenu->menuAction ()->setObjectName ("builtinMenu");
   helpMenu->addAction (tr ("&About QtHandles"), this,
 		       SLOT (helpAboutQtHandles (void)));
   helpMenu->addAction (tr ("About &Qt"), qApp, SLOT (aboutQt (void)));
 
   m_menuBar->addReceiver (this);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Container* Figure::innerContainer (void)
 {
   return m_container;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::redraw (void)
 {
   Canvas* canvas = m_container->canvas (m_handle);
 
   if (canvas)
     {
     canvas->redraw ();
     //canvas->setMouseMode (RotateMode);
@@ -247,32 +224,28 @@ void Figure::redraw (void)
     {
       Object* obj = Object::fromQObject (frame);
 
       if (obj)
 	obj->slotRedraw ();
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::beingDeleted (void)
 {
   Canvas* canvas = m_container->canvas (m_handle.value (), false);
 
   if (canvas)
     canvas->blockRedraw (true);
 
   m_menuBar->removeReceiver (this);
   m_container->removeReceiver (this);
   qWidget<FigureWindow> ()->removeReceiver (this);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::update (int pId)
 {
   if (m_blockUpdates)
     return;
 
   figure::properties& fp = properties<figure> ();
   QMainWindow* win = qWidget<QMainWindow> ();
 
@@ -331,18 +304,16 @@ void Figure::update (int pId)
       break;
     default:
       break;
     }
 
   m_blockUpdates = false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::showFigureToolBar (bool visible)
 {
   if ((! m_figureToolBar->isHidden ()) != visible)
     {
       int dy = m_figureToolBar->sizeHint ().height ();
       QRect r = qWidget<QWidget> ()->geometry ();
 
       if (! visible)
@@ -362,18 +333,16 @@ void Figure::showFigureToolBar (bool vis
       else
 	{
 	  m_lastMouseMode = m_mouseMode;
 	  m_mouseMode = NoMode;
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::showMenuBar (bool visible)
 {
   int h1 = m_menuBar->sizeHint ().height ();
 
   foreach (QAction* a, m_menuBar->actions ())
     if (a->objectName () == "builtinMenu")
       a->setVisible (visible);
 
@@ -398,36 +367,30 @@ void Figure::showMenuBar (bool visible)
       qWidget<QWidget> ()->setGeometry (r);
       m_menuBar->setVisible (visible);
       m_blockUpdates = false;
 
       updateBoundingBox (false);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::updateMenuBar (void)
 {
   gh_manager::auto_lock lock;
   graphics_object go = object ();
 
   if (go.valid_object ())
     showMenuBar (Utils::properties<figure> (go).menubar_is ("figure"));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QWidget* Figure::menu (void)
 {
   return qWidget<QMainWindow> ()->menuBar ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 struct UpdateBoundingBoxData
 {
   Matrix m_bbox;
   bool m_internal;
   graphics_handle m_handle;
   Figure* m_figure;
 };
 
@@ -448,18 +411,16 @@ void Figure::updateBoundingBoxHelper (vo
 
       if (d->m_internal)
         emit d->m_figure->asyncUpdate ();
     }
 
   delete d;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::updateBoundingBox (bool internal, int flags)
 {
   QWidget* win = qWidget<QWidget> ();
   Matrix bb (1, 4);
 
   if (internal)
     {
       QRect r = m_innerRect;
@@ -512,18 +473,16 @@ void Figure::updateBoundingBox (bool int
   d->m_handle = m_handle;
   d->m_figure = this;
 
   //qDebug ("Figure::updateBoundingBox: internal=%d, bbox=[%g %g %g %g]",
   //        d->m_internal, d->m_bbox(0), d->m_bbox(1), d->m_bbox(2), d->m_bbox(3));
   gh_manager::post_function (Figure::updateBoundingBoxHelper, d);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool Figure::eventNotifyBefore (QObject* obj, QEvent* event)
 {
   if (! m_blockUpdates)
     {
       if (obj == m_container)
 	{
           // Do nothing...
 	}
@@ -556,18 +515,16 @@ bool Figure::eventNotifyBefore (QObject*
 	      break;
 	    }
 	}
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::eventNotifyAfter (QObject* watched, QEvent* event)
 {
   if (! m_blockUpdates)
     {
       if (watched == m_container)
         {
 	  switch (event->type ())
 	    {
@@ -617,57 +574,43 @@ void Figure::eventNotifyAfter (QObject* 
 	      break;
 	    default:
 	      break;
 	    }
         }
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::helpAboutQtHandles (void)
 {
   QMessageBox::about (qWidget<QMainWindow> (), tr ("About QtHandles"),
 		      ABOUT_TEXT);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::fileNewFigure (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::fileCloseFigure (void)
 {
   qWidget<QMainWindow> ()->close ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::editCopy (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::editCut (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::editPaste (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::addCustomToolBar (QToolBar* bar, bool visible)
 {
   QMainWindow* win = qWidget<QMainWindow> ();
 
   if (! visible)
     win->addToolBar (bar);
   else
     {
@@ -683,18 +626,16 @@ void Figure::addCustomToolBar (QToolBar*
       win->addToolBar (bar);
       m_blockUpdates = false;
 
       //qDebug () << "Figure::addCustomToolBar:" << win->geometry ();
       updateBoundingBox (false);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::showCustomToolBar (QToolBar* bar, bool visible)
 {
   QMainWindow* win = qWidget<QMainWindow> ();
 
   if ((! bar->isHidden ()) != visible)
     {
       QSize sz = bar->sizeHint ();
       QRect r = win->geometry ();
@@ -708,18 +649,14 @@ void Figure::showCustomToolBar (QToolBar
       win->setGeometry (r);
       bar->setVisible (visible);
       m_blockUpdates = false;
 
       updateBoundingBox (false);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Figure::updateContainer (void)
 {
   redraw ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Figure.h b/libgui/graphics/Figure.h
--- a/libgui/graphics/Figure.h
+++ b/libgui/graphics/Figure.h
@@ -1,59 +1,54 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Figure__
 #define __QtHandles_Figure__ 1
 
 #include <QRect>
 
 #include "GenericEventNotify.h"
 #include "MenuContainer.h"
 #include "Object.h"
 
 class QMainWindow;
 class QToolBar;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 enum MouseMode
 {
   NoMode	= 0,
   RotateMode	= 1,
   ZoomMode	= 2,
   PanMode	= 3,
   SelectMode	= 4
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Container;
 class FigureWindow;
 class MenuBar;
 class ToolBar;
 
 class Figure :
   public Object,
   public MenuContainer,
@@ -119,15 +114,11 @@ private:
   bool m_blockUpdates;
   MouseMode m_mouseMode, m_lastMouseMode;
   QToolBar* m_figureToolBar;
   MenuBar* m_menuBar;
   QRect m_innerRect;
   QRect m_outerRect;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/FigureWindow.cc b/libgui/graphics/FigureWindow.cc
--- a/libgui/graphics/FigureWindow.cc
+++ b/libgui/graphics/FigureWindow.cc
@@ -1,58 +1,49 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QMenu>
 
 #include "FigureWindow.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 FigureWindow::FigureWindow (QWidget* parent)
   : FigureWindowBase (parent)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 FigureWindow::~FigureWindow (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QMenu* FigureWindow::createPopupMenu (void)
 {
   // For the time being, disable menubar/toolbar popup menu
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/FigureWindow.h b/libgui/graphics/FigureWindow.h
--- a/libgui/graphics/FigureWindow.h
+++ b/libgui/graphics/FigureWindow.h
@@ -1,55 +1,48 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_FigureWindow__
 #define __QtHandles_FigureWindow__ 1
 
 #include <QMainWindow>
 
 #include "GenericEventNotify.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 DECLARE_GENERICEVENTNOTIFY_SENDER(FigureWindowBase, QMainWindow);
 
 class FigureWindow : public FigureWindowBase
 {
   Q_OBJECT
 
 public:
   FigureWindow (QWidget* parent = 0);
   ~FigureWindow (void);
 
   QMenu* createPopupMenu (void);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifdef HAVE_CONFIG_H
@@ -28,70 +29,58 @@ along with Foobar.  If not, see <http://
 #endif
 
 #include "gl-render.h"
 #include "graphics.h"
 
 #include "GLCanvas.h"
 #include "gl-select.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 GLCanvas::GLCanvas (QWidget* parent, const graphics_handle& handle)
   : QGLWidget (parent), Canvas (handle)
 {
   setFocusPolicy (Qt::ClickFocus);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 GLCanvas::~GLCanvas (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::draw (const graphics_handle& handle)
 {
   graphics_object go = gh_manager::get_object (handle);
 
   if (go)
     {
       opengl_renderer r;
 
       r.set_viewport (width (), height ());
       r.draw(go);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 graphics_object GLCanvas::selectFromAxes (const graphics_object& ax,
                                           const QPoint& pt)
 {
   makeCurrent ();
 
   if (ax)
     {
       opengl_selector s;
 
       s.set_viewport (width (), height ());
       return s.select (ax, pt.x (), height () - pt.y ());
     }
 
   return graphics_object ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 inline void glDrawZoomBox (const QPoint& p1, const QPoint& p2)
 {
   glVertex2d (p1.x (), p1.y ());
   glVertex2d (p2.x (), p1.y ());
   glVertex2d (p2.x (), p2.y ());
   glVertex2d (p1.x (), p2.y ());
   glVertex2d (p1.x (), p1.y ());
 }
@@ -120,55 +109,41 @@ void GLCanvas::drawZoomBox (const QPoint
   glColor4f (0.45, 0.62, 0.81, 0.9);
   glDrawZoomBox (p1, p2);
   glEnd ();
 
   glPopAttrib ();
   glPopMatrix ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::paintGL (void)
 {
   canvasPaintEvent ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::mouseMoveEvent (QMouseEvent* event)
 {
   canvasMouseMoveEvent (event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::mousePressEvent (QMouseEvent* event)
 {
   canvasMousePressEvent (event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::mouseReleaseEvent (QMouseEvent* event)
 {
   canvasMouseReleaseEvent (event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::keyPressEvent (QKeyEvent* event)
 {
   if (! canvasKeyPressEvent (event))
     QGLWidget::keyPressEvent (event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void GLCanvas::keyReleaseEvent (QKeyEvent* event)
 {
   if (! canvasKeyReleaseEvent (event))
     QGLWidget::keyReleaseEvent (event);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/GLCanvas.h b/libgui/graphics/GLCanvas.h
--- a/libgui/graphics/GLCanvas.h
+++ b/libgui/graphics/GLCanvas.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_GLCanvas__
 #define __QtHandles_GLCanvas__ 1
 
 #include <QGLWidget>
 
 #include "Canvas.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class GLCanvas : public QGLWidget, public Canvas
 {
 public:
   GLCanvas (QWidget* parent, const graphics_handle& handle);
   ~GLCanvas (void);
 
   void draw (const graphics_handle& handle);
   void drawZoomBox (const QPoint& p1, const QPoint& p2);
@@ -51,15 +48,11 @@ protected:
   void paintGL (void);
   void mouseMoveEvent (QMouseEvent* event);
   void mousePressEvent (QMouseEvent* event);
   void mouseReleaseEvent (QMouseEvent* event);
   void keyPressEvent (QKeyEvent* event);
   void keyReleaseEvent (QKeyEvent* event);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/GenericEventNotify.h b/libgui/graphics/GenericEventNotify.h
--- a/libgui/graphics/GenericEventNotify.h
+++ b/libgui/graphics/GenericEventNotify.h
@@ -1,45 +1,42 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __GenericEventNotify_h__
 #define __GenericEventNotify_h__ 1
 
 #include <QSet>
 
 class QEvent;
 class QObject;
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class GenericEventNotifyReceiver;
 
 class GenericEventNotifySender
 {
 public:
   GenericEventNotifySender (void) : m_receivers () { }
   virtual ~GenericEventNotifySender (void) { }
 
@@ -52,52 +49,44 @@ public:
 protected:
   bool notifyReceiversBefore (QObject* obj, QEvent* evt);
   void notifyReceiversAfter (QObject* obj, QEvent* evt);
 
 private:
   QSet<GenericEventNotifyReceiver*> m_receivers;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 class GenericEventNotifyReceiver
 {
 public:
   GenericEventNotifyReceiver (void) { }
   virtual ~GenericEventNotifyReceiver (void) { }
 
   virtual bool eventNotifyBefore (QObject* obj, QEvent* evt) = 0;
   virtual void eventNotifyAfter (QObject* obj, QEvent* evt) = 0;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 inline
 bool GenericEventNotifySender::notifyReceiversBefore (QObject* obj,
                                                       QEvent* evt)
 {
   foreach (GenericEventNotifyReceiver* r, m_receivers)
     if (r->eventNotifyBefore (obj, evt))
       return true;
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 inline
 void GenericEventNotifySender::notifyReceiversAfter (QObject* obj,
                                                      QEvent* evt)
 {
   foreach (GenericEventNotifyReceiver* r, m_receivers)
     r->eventNotifyAfter (obj, evt);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 #define DECLARE_GENERICEVENTNOTIFY_SENDER(T,B) \
 class T : public B, public GenericEventNotifySender \
 { \
 public: \
   T (QWidget* parent) : B (parent), GenericEventNotifySender () { } \
   ~ T (void) { } \
 \
   bool event (QEvent* evt) \
@@ -105,15 +94,11 @@ public: \
       bool result = true; \
       if (! notifyReceiversBefore (this, evt)) \
         result = B::event (evt); \
       notifyReceiversAfter (this, evt); \
       return result; \
     } \
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/KeyMap.cc b/libgui/graphics/KeyMap.cc
--- a/libgui/graphics/KeyMap.cc
+++ b/libgui/graphics/KeyMap.cc
@@ -1,50 +1,45 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QMap>
 #include <Qt>
 
 #include "KeyMap.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace KeyMap
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 std::string qKeyToKeyString (int key)
 {
   static QMap<int, std::string> keyMapper;
 
   if (keyMapper.isEmpty ())
     {
       keyMapper[Qt::Key_Escape] = "escape";
       keyMapper[Qt::Key_Tab] = "tab";
@@ -253,15 +248,11 @@ std::string qKeyToKeyString (int key)
       keyMapper[Qt::Key_ssharp] = "ssharp";
       keyMapper[Qt::Key_division] = "division";
       keyMapper[Qt::Key_ydiaeresis] = "ydiaeresis";
     }
 
   return keyMapper.value (key, std::string ("<unknown key>"));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; //namespace KeyMap
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/KeyMap.h b/libgui/graphics/KeyMap.h
--- a/libgui/graphics/KeyMap.h
+++ b/libgui/graphics/KeyMap.h
@@ -1,49 +1,38 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles__KeyMap__
 #define __QtHandles__KeyMap__ 1
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace KeyMap
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 std::string qKeyToKeyString (int key);
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace KeyMap
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ListBoxControl.cc b/libgui/graphics/ListBoxControl.cc
--- a/libgui/graphics/ListBoxControl.cc
+++ b/libgui/graphics/ListBoxControl.cc
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QListWidget>
 
 #include "Container.h"
 #include "ListBoxControl.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static void updateSelection (QListWidget* list, const Matrix& value)
 {
   octave_idx_type n = value.numel ();
   int lc = list->count ();
 
   list->clearSelection ();
 
   for (octave_idx_type i = 0; i < n; i++)
@@ -58,35 +55,31 @@ static void updateSelection (QListWidget
         {
           // Invalid selection.
           list->clearSelection ();
           break;
         }
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ListBoxControl* ListBoxControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new ListBoxControl (go, new QListWidget (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ListBoxControl::ListBoxControl (const graphics_object& go, QListWidget* list)
      : BaseControl (go, list), m_blockCallback (false)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   list->addItems (Utils::fromStringVector (up.get_string_vector ()));
   if ((up.get_max () - up.get_min ()) > 1)
     list->setSelectionMode (QAbstractItemView::ExtendedSelection);
@@ -115,24 +108,20 @@ ListBoxControl::ListBoxControl (const gr
 
   list->removeEventFilter (this);
   list->viewport ()->installEventFilter (this);
 
   connect (list, SIGNAL (itemSelectionChanged (void)),
 	   SLOT (itemSelectionChanged (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ListBoxControl::~ListBoxControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ListBoxControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QListWidget* list = qWidget<QListWidget> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -155,18 +144,16 @@ void ListBoxControl::update (int pId)
       m_blockCallback = false;
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ListBoxControl::itemSelectionChanged (void)
 {
   if (! m_blockCallback)
     {
       QListWidget* list = qWidget<QListWidget> ();
 
       QModelIndexList l = list->selectionModel ()->selectedIndexes ();
       Matrix value (dim_vector (1, l.size ()));
@@ -175,11 +162,9 @@ void ListBoxControl::itemSelectionChange
       foreach (const QModelIndex& idx, l)
        value(i++) = (idx.row () + 1);
 
       gh_manager::post_set (m_handle, "value", octave_value (value), false);
       gh_manager::post_callback (m_handle, "callback");
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/ListBoxControl.h b/libgui/graphics/ListBoxControl.h
--- a/libgui/graphics/ListBoxControl.h
+++ b/libgui/graphics/ListBoxControl.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ListBoxControl__
 #define __QtHandles_ListBoxControl__ 1
 
 #include "BaseControl.h"
 
 class QListWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class ListBoxControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   ListBoxControl (const graphics_object& go, QListWidget* list);
   ~ListBoxControl (void);
 
@@ -48,15 +45,11 @@ protected:
 
 private slots:
   void itemSelectionChanged (void);
 
 private:
   bool m_blockCallback;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Logger.cc b/libgui/graphics/Logger.cc
--- a/libgui/graphics/Logger.cc
+++ b/libgui/graphics/Logger.cc
@@ -1,101 +1,86 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QMutex>
 #include <QMutexLocker>
 #include <QProcessEnvironment>
 
 #include <cstdio>
 
 #include "Logger.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 Logger* Logger::s_instance = 0;
 QMutex* Logger::s_mutex = 0;
 
-//////////////////////////////////////////////////////////////////////////////
-
 Logger::Logger (void)
     : m_debugEnabled (false)
 {
   QProcessEnvironment pe (QProcessEnvironment::systemEnvironment ());
 
   if (pe.value ("QTHANDLES_DEBUG", "0") != "0")
     m_debugEnabled = true;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Logger::~Logger (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Logger* Logger::instance (void)
 {
   if (! s_instance)
     {
       s_instance = new Logger ();
       s_mutex = new QMutex ();
     }
 
   return s_instance;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 #define STATIC_LOGGER(fun) \
 void Logger::fun (const char* fmt, ...) \
 { \
   QMutexLocker lock (s_mutex); \
   va_list vl; \
   va_start (vl, fmt); \
   instance ()->fun ## V (fmt, vl); \
   va_end (vl); \
 }
 
 STATIC_LOGGER (debug)
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Logger::debugV (const char* fmt, va_list arg)
 {
   if (m_debugEnabled)
     {
       vfprintf (stderr, fmt, arg);
       fprintf (stderr, "\n");
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Logger.h b/libgui/graphics/Logger.h
--- a/libgui/graphics/Logger.h
+++ b/libgui/graphics/Logger.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Logger__
 #define __QtHandles_Logger__ 1
 
 #include <cstdarg>
 
 class QMutex;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Logger
 {
 public:
   static void debug (const char* fmt, ...);
 
 private:
   bool m_debugEnabled;
 
@@ -48,15 +45,11 @@ private:
   Logger (void);
   ~Logger (void);
 
   static Logger* instance (void);
 
   void debugV (const char* fmt, va_list arg);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Menu.cc b/libgui/graphics/Menu.cc
--- a/libgui/graphics/Menu.cc
+++ b/libgui/graphics/Menu.cc
@@ -1,49 +1,46 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAction>
 #include <QMainWindow>
 #include <QMenu>
 #include <QMenuBar>
 
 #include "Figure.h"
 #include "Menu.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static QKeySequence accelSequence (const uimenu::properties& up)
 {
   std::string s (up.get_accelerator ());
 
   if (! s.empty ())
     {
       char c = s[0];
       int keyMod = Qt::CTRL;
@@ -54,35 +51,31 @@ static QKeySequence accelSequence (const
 	c -= ('a' - 'A');
       if (c >= 'A' && c <= 'Z')
 	return QKeySequence (keyMod | static_cast<int> (c));
     }
 
   return QKeySequence ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Menu* Menu::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       QObject* qObj = parent->qObject ();
 
       if (qObj)
 	return new Menu (go, new QAction (qObj), parent);
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Menu::Menu (const graphics_object& go, QAction* action, Object* parent)
     : Object (go, action), m_parent (0), m_separator (0)
 {
   uimenu::properties& up = properties<uimenu> ();
 
   action->setText (Utils::fromStdString (up.get_label ()));
   if (up.is_checked ())
     {
@@ -149,24 +142,20 @@ Menu::Menu (const graphics_object& go, Q
 	    up.get_property ("position").set
 	      (octave_value (static_cast<double> (count+1)), true, false);
 	}
     }
 
   connect (action, SIGNAL (triggered (bool)), SLOT (actionTriggered (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Menu::~Menu (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Menu::update (int pId)
 {
   uimenu::properties& up = properties<uimenu> ();
   QAction* action = qWidget<QAction> ();
 
   switch (pId)
     {
     case uimenu::properties::ID_LABEL:
@@ -246,18 +235,16 @@ void Menu::update (int pId)
 	}
       break;
     default:
       Object::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QWidget* Menu::menu (void)
 {
   QAction* action = qWidget<QAction> ();
   QMenu* _menu = action->menu ();
 
   if (! _menu)
     {
       _menu = new QMenu (action->parentWidget ());
@@ -265,36 +252,30 @@ QWidget* Menu::menu (void)
       action->setShortcut (QKeySequence ());
       connect (_menu, SIGNAL (aboutToShow (void)),
 	       this, SLOT (actionHovered (void)));
     }
 
   return _menu;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Menu::actionTriggered (void)
 {
   QAction* action = qWidget<QAction> ();
 
   if (action->isCheckable ())
     action->setChecked (! action->isChecked ());
   gh_manager::post_callback (m_handle, "callback");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Menu::actionHovered (void)
 {
   gh_manager::post_callback (m_handle, "callback");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Menu::updateSiblingPositions (void)
 {
   if (m_parent)
     {
       double count = 1.0;
 
       foreach (QAction* a, m_parent->actions ())
 	{
@@ -318,11 +299,9 @@ void Menu::updateSiblingPositions (void)
 		}
 
 	      count++;
 	    }
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Menu.h b/libgui/graphics/Menu.h
--- a/libgui/graphics/Menu.h
+++ b/libgui/graphics/Menu.h
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Menu__
 #define __QtHandles_Menu__ 1
 
 #include "MenuContainer.h"
 #include "Object.h"
 
 class QAction;
 class QMenu;
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Menu : public Object, public MenuContainer
 {
   Q_OBJECT
 
 public:
   Menu (const graphics_object& go, QAction* action, Object* parent);
   ~Menu (void);
 
@@ -60,15 +57,11 @@ private slots:
 private:
   void updateSiblingPositions (void);
 
 private:
   QWidget* m_parent;
   QAction* m_separator;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/MenuContainer.h b/libgui/graphics/MenuContainer.h
--- a/libgui/graphics/MenuContainer.h
+++ b/libgui/graphics/MenuContainer.h
@@ -1,46 +1,39 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_MenuContainer__
 #define __QtHandles_MenuContainer__ 1
 
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class MenuContainer
 {
 public:
   virtual QWidget* menu (void) = 0;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/MouseModeActionGroup.cc b/libgui/graphics/MouseModeActionGroup.cc
--- a/libgui/graphics/MouseModeActionGroup.cc
+++ b/libgui/graphics/MouseModeActionGroup.cc
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAction>
 #include <QIcon>
 
 #include "Figure.h"
 #include "MouseModeActionGroup.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 MouseModeActionGroup::MouseModeActionGroup (QObject* parent)
   : QObject (parent), m_current (0)
 {
   m_actions.append (new QAction (QIcon (":/images/rotate.png"),
 				 tr ("Rotate"), this));
   m_actions.append (new QAction (QIcon (":/images/zoom.png"),
 				 tr ("Zoom"), this));
   m_actions.append (new QAction (QIcon (":/images/pan.png"),
@@ -52,24 +49,20 @@ MouseModeActionGroup::MouseModeActionGro
 
   foreach (QAction* a, m_actions)
     {
       a->setCheckable (true);
       connect (a, SIGNAL (toggled (bool)), this, SLOT (actionToggled (bool)));
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 MouseModeActionGroup::~MouseModeActionGroup (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void MouseModeActionGroup::actionToggled (bool checked)
 {
   if (! checked)
     {
       if (sender () == m_current)
 	{
 	  m_current = 0;
 	  emit modeChanged (NoMode);
@@ -85,20 +78,16 @@ void MouseModeActionGroup::actionToggled
 	  for (int j = 0; j < m_actions.size (); j++)
 	    if (j != i)
 	      m_actions[j]->setChecked (false);
 	  emit modeChanged (static_cast<MouseMode> (i+1));
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 MouseMode MouseModeActionGroup::mouseMode (void) const
 {
   int i = (m_current ? -1 : m_actions.indexOf (m_current));
 
   return static_cast<MouseMode> (i+1);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/MouseModeActionGroup.h b/libgui/graphics/MouseModeActionGroup.h
--- a/libgui/graphics/MouseModeActionGroup.h
+++ b/libgui/graphics/MouseModeActionGroup.h
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_MouseModeActionGroup__
 #define __QtHandles_MouseModeActionGroup__ 1
 
 #include <QList>
 #include <QObject>
 
 #include "Figure.h"
 
 class QAction;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class MouseModeActionGroup : public QObject
 {
   Q_OBJECT
 
 public:
   MouseModeActionGroup (QObject* parent = 0);
   ~MouseModeActionGroup (void);
 
@@ -53,15 +50,11 @@ signals:
 private slots:
   void actionToggled (bool checked);
 
 private:
   QList<QAction*> m_actions;
   QAction* m_current;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Object.cc b/libgui/graphics/Object.cc
--- a/libgui/graphics/Object.cc
+++ b/libgui/graphics/Object.cc
@@ -1,61 +1,56 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QVariant>
 
 #include "Backend.h"
 #include "Object.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 Object::Object (const graphics_object& go, QObject* obj)
   : QObject (), m_handle (go.get_handle ()), m_qobject (0)
 {
   gh_manager::auto_lock lock (false);
 
   if (! lock)
     qCritical ("QtHandles::Object::Object: "
 	       "creating Object (h=%g) without a valid lock!!!",
 	       m_handle.value ());
 
   init (obj);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::init (QObject* obj, bool)
 {
   if (m_qobject)
     qCritical ("QtHandles::Object::init: "
 	       "resetting QObject while in invalid state");
 
   m_qobject = obj;
 
@@ -63,38 +58,32 @@ void Object::init (QObject* obj, bool)
     {
       m_qobject->setProperty ("QtHandles::Object",
 			      qVariantFromValue<void*> (this));
       connect (m_qobject, SIGNAL (destroyed (QObject*)),
 	       SLOT (objectDestroyed (QObject*)));
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Object::~Object (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 graphics_object Object::object (void) const
 {
   gh_manager::auto_lock lock (false);
 
   if (! lock)
     qCritical ("QtHandles::Object::object: "
 	       "accessing graphics object (h=%g) without a valid lock!!!",
 	       m_handle.value ());
 
   return gh_manager::get_object (m_handle);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::slotUpdate (int pId)
 {
   gh_manager::auto_lock lock;
 
   switch (pId)
     {
     // Special case for objects being deleted, as it's very likely
     // that the graphics_object already has been destroyed when this
@@ -104,90 +93,70 @@ void Object::slotUpdate (int pId)
       break;
     default:
       if (object ().valid_object ())
 	update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::slotFinalize (void)
 {
   gh_manager::auto_lock lock;
 
   finalize ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::slotRedraw (void)
 {
   gh_manager::auto_lock lock;
 
   if (object ().valid_object ())
     redraw ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::update (int /* pId */)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::finalize (void)
 {
   if (m_qobject)
     {
       delete m_qobject;
       m_qobject = 0;
     }
   deleteLater ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::redraw (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::beingDeleted (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Object::objectDestroyed (QObject* obj)
 {
   if (obj && obj == m_qobject)
     m_qobject = 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Object* Object::parentObject (const graphics_object& go)
 {
   Object* parent = Backend::toolkitObject
     (gh_manager::get_object (go.get_parent ()));
 
   return parent;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Object* Object::fromQObject (QObject* obj)
 {
   QVariant v = obj->property ("QtHandles::Object");
 
   if (v.isValid ())
     return reinterpret_cast<Object*> (qVariantValue<void*> (v));
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Object.h b/libgui/graphics/Object.h
--- a/libgui/graphics/Object.h
+++ b/libgui/graphics/Object.h
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Object__
 #define __QtHandles_Object__ 1
 
 #include <QObject>
 
 #include "graphics.h"
 
 class QObject;
 class QWidget;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Container;
 class ObjectProxy;
 
 class Object : public QObject
 {
   Q_OBJECT
 
 public:
@@ -96,15 +93,11 @@ protected:
 
   virtual void beingDeleted (void);
 
 protected:
   graphics_handle m_handle;
   QObject* m_qobject;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ObjectFactory.cc b/libgui/graphics/ObjectFactory.cc
--- a/libgui/graphics/ObjectFactory.cc
+++ b/libgui/graphics/ObjectFactory.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
@@ -45,40 +46,34 @@ along with Foobar.  If not, see <http://
 #include "RadioButtonControl.h"
 #include "SliderControl.h"
 #include "TextControl.h"
 #include "ToggleButtonControl.h"
 #include "ToggleTool.h"
 #include "ToolBar.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ObjectFactory* ObjectFactory::instance (void)
 {
   static ObjectFactory s_instance;
   static bool s_instanceCreated = false;
 
   if (! s_instanceCreated)
     {
       if (QThread::currentThread () != QApplication::instance ()->thread ())
 	s_instance.moveToThread (QApplication::instance ()->thread ());
       s_instanceCreated = true;
     }
 
   return &s_instance;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectFactory::createObject (double handle)
 {
   gh_manager::auto_lock lock;
 
   graphics_object go (gh_manager::get_object (graphics_handle (handle)));
 
   if (go.valid_object ())
     {
@@ -146,11 +141,9 @@ void ObjectFactory::createObject (double
 		      handle);
 	}
     }
   else
     qWarning ("ObjectFactory::createObject: invalid object for handle %g",
 	      handle);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/ObjectFactory.h b/libgui/graphics/ObjectFactory.h
--- a/libgui/graphics/ObjectFactory.h
+++ b/libgui/graphics/ObjectFactory.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ObjectFactory__
 #define __QtHandles_ObjectFactory__ 1
 
 #include <QObject>
 
 class graphics_object;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Object;
 
 class ObjectFactory : public QObject
 {
   Q_OBJECT
 
 public:
   static ObjectFactory* instance (void);
@@ -46,15 +43,11 @@ public slots:
   void createObject (double handle);
 
 private:
   ObjectFactory (void)
     : QObject ()
     { }
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ObjectProxy.cc b/libgui/graphics/ObjectProxy.cc
--- a/libgui/graphics/ObjectProxy.cc
+++ b/libgui/graphics/ObjectProxy.cc
@@ -1,53 +1,48 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "oct-mutex.h"
 
 #include "Object.h"
 #include "ObjectProxy.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ObjectProxy::ObjectProxy (Object* obj)
   : QObject (), m_object (0)
 {
   init (obj);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectProxy::init (Object* obj)
 {
   if (obj != m_object)
     {
       if (m_object)
 	{
 	  disconnect (this, SIGNAL (sendUpdate (int)),
 		      m_object, SLOT (slotUpdate (int)));
@@ -66,44 +61,34 @@ void ObjectProxy::init (Object* obj)
 	  connect (this, SIGNAL (sendFinalize (void)),
 		   m_object, SLOT (slotFinalize (void)));
 	  connect (this, SIGNAL (sendRedraw (void)),
 		   m_object, SLOT (slotRedraw (void)));
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectProxy::setObject (Object* obj)
 {
   emit sendFinalize ();
   init (obj);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectProxy::update (int pId)
 {
   if (octave_thread::is_octave_thread ())
     emit sendUpdate (pId);
   else
     m_object->slotUpdate (pId);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectProxy::finalize (void)
 {
   emit sendFinalize ();
   init (0);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ObjectProxy::redraw (void)
 {
   emit sendRedraw ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/ObjectProxy.h b/libgui/graphics/ObjectProxy.h
--- a/libgui/graphics/ObjectProxy.h
+++ b/libgui/graphics/ObjectProxy.h
@@ -1,41 +1,38 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ObjectProxy__
 #define __QtHandles_ObjectProxy__ 1
 
 #include <QObject>
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Object;
 
 class ObjectProxy : public QObject
 {
   Q_OBJECT
 
 public:
    ObjectProxy (Object* obj = 0);
@@ -54,15 +51,11 @@ signals:
 
 private:
    void init (Object* obj);
 
 private:
    Object* m_object;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Panel.cc b/libgui/graphics/Panel.cc
--- a/libgui/graphics/Panel.cc
+++ b/libgui/graphics/Panel.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QEvent>
@@ -30,88 +31,76 @@ along with Foobar.  If not, see <http://
 #include <QTimer>
 
 #include "Canvas.h"
 #include "Container.h"
 #include "ContextMenu.h"
 #include "Panel.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static int frameStyleFromProperties (const uipanel::properties& pp)
 {
   if (pp.bordertype_is ("none"))
     return QFrame::NoFrame;
   else if (pp.bordertype_is ("etchedin"))
     return (QFrame::Box | QFrame::Sunken);
   else if (pp.bordertype_is ("etchedout"))
     return (QFrame::Box | QFrame::Raised);
   else if (pp.bordertype_is ("beveledin"))
     return (QFrame::Panel | QFrame::Sunken);
   else if (pp.bordertype_is ("beveledout"))
     return (QFrame::Panel | QFrame::Raised);
   else
     return (QFrame::Panel | QFrame::Plain);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 static void setupPalette (const uipanel::properties& pp, QPalette& p)
 {
   p.setColor (QPalette::Window,
 	      Utils::fromRgb (pp.get_backgroundcolor_rgb ()));
   p.setColor (QPalette::WindowText,
 	      Utils::fromRgb (pp.get_foregroundcolor_rgb ()));
   p.setColor (QPalette::Light,
 	      Utils::fromRgb (pp.get_highlightcolor_rgb ()));
   p.setColor (QPalette::Dark,
 	      Utils::fromRgb (pp.get_shadowcolor_rgb ()));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 static int borderWidthFromProperties (const uipanel::properties& pp)
 {
   int bw = 0;
 
   if (! pp.bordertype_is ("none"))
     {
       bw = xround (pp.get_borderwidth ());
       if (pp.bordertype_is ("etchedin") || pp.bordertype_is ("etchedout"))
 	bw *= 2;
     }
 
   return bw;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Panel* Panel::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new Panel (go, new QFrame (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Panel::Panel (const graphics_object& go, QFrame* frame)
     : Object (go, frame), m_container (0), m_title (0), m_blockUpdates (false)
 {
   uipanel::properties& pp = properties<uipanel> ();
 
   frame->setObjectName ("UIPanel");
   frame->setAutoFillBackground (true);
   Matrix bb = pp.get_boundingbox (false);
@@ -140,24 +129,20 @@ Panel::Panel (const graphics_object& go,
   m_container->installEventFilter (this);
 
   if (pp.is_visible ())
     QTimer::singleShot (0, frame, SLOT (show (void)));
   else
     frame->hide ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Panel::~Panel (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool Panel::eventFilter (QObject* watched, QEvent* event)
 {
   if (! m_blockUpdates)
     {
       if (watched == qObject ())
 	{
 	  switch (event->type ())
 	    {
@@ -218,18 +203,16 @@ bool Panel::eventFilter (QObject* watche
 	      break;
 	    }
 	}
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Panel::update (int pId)
 {
   uipanel::properties& pp = properties<uipanel> ();
   QFrame* frame = qWidget<QFrame> ();
 
   m_blockUpdates = true;
 
   switch (pId)
@@ -315,28 +298,24 @@ void Panel::update (int pId)
       break;
     default:
       break;
     }
 
   m_blockUpdates = false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Panel::redraw (void)
 {
   Canvas* canvas = m_container->canvas (m_handle);
 
   if (canvas)
     canvas->redraw ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void Panel::updateLayout (void)
 {
   uipanel::properties& pp = properties<uipanel> ();
   QFrame* frame = qWidget<QFrame> ();
 
   Matrix bb = pp.get_boundingbox (true);
   int bw = borderWidthFromProperties (pp);
 
@@ -365,11 +344,9 @@ void Panel::updateLayout (void)
       else if (pp.titleposition_is ("centertop"))
 	m_title->move (frame->width () / 2 - sz.width () / 2, 0);
       else if (pp.titleposition_is ("centerbottom"))
 	m_title->move (frame->width () / 2 - sz.width () / 2,
 		       frame->height () - sz.height ());
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/Panel.h b/libgui/graphics/Panel.h
--- a/libgui/graphics/Panel.h
+++ b/libgui/graphics/Panel.h
@@ -1,44 +1,41 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Panel__
 #define __QtHandles_Panel__ 1
 
 #include "Object.h"
 
 class QFrame;
 class QLabel;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Container;
 
 class Panel : public Object
 {
 public:
   Panel (const graphics_object& go, QFrame* frame);
   ~Panel (void);
 
@@ -56,15 +53,11 @@ private:
   void updateLayout (void);
 
 private:
   Container* m_container;
   QLabel* m_title;
   bool m_blockUpdates;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -1,82 +1,73 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QComboBox>
 
 #include "Container.h"
 #include "PopupMenuControl.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 PopupMenuControl* PopupMenuControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new PopupMenuControl (go, new QComboBox (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PopupMenuControl::PopupMenuControl (const graphics_object& go, QComboBox *box)
      : BaseControl (go, box), m_blockUpdate (false)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   box->addItems (Utils::fromStdString (up.get_string_string ()).split ('|'));
 
   connect (box, SIGNAL (currentIndexChanged (int)),
 	   SLOT (currentIndexChanged (int)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PopupMenuControl::~PopupMenuControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void PopupMenuControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QComboBox* box = qWidget<QComboBox> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -120,24 +111,20 @@ void PopupMenuControl::update (int pId)
 	}
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void PopupMenuControl::currentIndexChanged (int index)
 {
   if (! m_blockUpdate)
     {
       gh_manager::post_set (m_handle, "value",
 			    octave_value (double (index + 1)),
 			    false);
       gh_manager::post_callback (m_handle, "callback");
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/PopupMenuControl.h b/libgui/graphics/PopupMenuControl.h
--- a/libgui/graphics/PopupMenuControl.h
+++ b/libgui/graphics/PopupMenuControl.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_PopupMenuControl__
 #define __QtHandles_PopupMenuControl__ 1
 
 #include "BaseControl.h"
 
 class QComboBox;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class PopupMenuControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   PopupMenuControl (const graphics_object& go, QComboBox* box);
   ~PopupMenuControl (void);
 
@@ -48,15 +45,11 @@ protected:
 
 private slots:
   void currentIndexChanged (int index);
 
 private:
   bool m_blockUpdate;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/PushButtonControl.cc b/libgui/graphics/PushButtonControl.cc
--- a/libgui/graphics/PushButtonControl.cc
+++ b/libgui/graphics/PushButtonControl.cc
@@ -1,89 +1,78 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QPushButton>
 #include <QtDebug>
 
 #include "PushButtonControl.h"
 #include "Container.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushButtonControl* PushButtonControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new PushButtonControl (go, new QPushButton (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushButtonControl::PushButtonControl (const graphics_object& go, QPushButton* btn)
   : ButtonControl (go, btn)
 {
   btn->setAutoFillBackground (true);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushButtonControl::~PushButtonControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void PushButtonControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QPushButton* btn = qWidget<QPushButton> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
       btn->setText (Utils::fromStdString (up.get_string_string ()));
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespave QtHandles
diff --git a/libgui/graphics/PushButtonControl.h b/libgui/graphics/PushButtonControl.h
--- a/libgui/graphics/PushButtonControl.h
+++ b/libgui/graphics/PushButtonControl.h
@@ -1,54 +1,47 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_PushButtonControl__
 #define __QtHandles_PushButtonControl__ 1
 
 #include "ButtonControl.h"
 
 class QPushButton;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class PushButtonControl : public ButtonControl
 {
 public:
   PushButtonControl (const graphics_object& go, QPushButton* btn);
   ~PushButtonControl (void);
 
   static PushButtonControl* create (const graphics_object& go);
 
 protected:
   void update (int pId);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/PushTool.cc b/libgui/graphics/PushTool.cc
--- a/libgui/graphics/PushTool.cc
+++ b/libgui/graphics/PushTool.cc
@@ -1,87 +1,74 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "PushTool.h"
 
 #include "ToolBarButton.cc"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushTool* PushTool::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       QWidget* parentWidget = parent->qWidget<QWidget> ();
 
       if (parentWidget)
 	return new PushTool (go, new QAction (parentWidget));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushTool::PushTool (const graphics_object& go, QAction* action)
     : ToolBarButton<uipushtool> (go, action)
 {
   connect (action, SIGNAL (triggered (bool)), this, SLOT (clicked (void)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 PushTool::~PushTool (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void PushTool::update (int pId)
 {
   switch (pId)
     {
     default:
       ToolBarButton<uipushtool>::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void PushTool::clicked (void)
 {
   gh_manager::post_callback (m_handle, "clickedcallback");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/PushTool.h b/libgui/graphics/PushTool.h
--- a/libgui/graphics/PushTool.h
+++ b/libgui/graphics/PushTool.h
@@ -1,41 +1,38 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_PushTool__
 #define __QtHandles_PushTool__ 1
 
 #include "ToolBarButton.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class PushTool : public ToolBarButton<uipushtool>
 {
   Q_OBJECT
 
 public:
   PushTool (const graphics_object& go, QAction* action);
   ~PushTool (void);
 
@@ -43,15 +40,11 @@ public:
 
 protected:
   void update (int pId);
 
 private slots:
   void clicked (void);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/RadioButtonControl.cc b/libgui/graphics/RadioButtonControl.cc
--- a/libgui/graphics/RadioButtonControl.cc
+++ b/libgui/graphics/RadioButtonControl.cc
@@ -1,72 +1,63 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QRadioButton>
 
 #include "RadioButtonControl.h"
 #include "Container.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 RadioButtonControl* RadioButtonControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new RadioButtonControl (go, new QRadioButton (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 RadioButtonControl::RadioButtonControl (const graphics_object& go,
 					QRadioButton* radio)
     : ButtonControl (go, radio)
 {
   radio->setAutoFillBackground (true);
   radio->setAutoExclusive (false);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 RadioButtonControl::~RadioButtonControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/RadioButtonControl.h b/libgui/graphics/RadioButtonControl.h
--- a/libgui/graphics/RadioButtonControl.h
+++ b/libgui/graphics/RadioButtonControl.h
@@ -1,51 +1,44 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_RadioButton__
 #define __QtHandles_RadioButton__ 1
 
 #include "ButtonControl.h"
 
 class QRadioButton;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class RadioButtonControl : public ButtonControl
 {
 public:
   RadioButtonControl (const graphics_object& go, QRadioButton* box);
   ~RadioButtonControl (void);
 
   static RadioButtonControl* create (const graphics_object& go);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/SliderControl.cc b/libgui/graphics/SliderControl.cc
--- a/libgui/graphics/SliderControl.cc
+++ b/libgui/graphics/SliderControl.cc
@@ -1,65 +1,60 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QScrollBar>
 
 #include "Container.h"
 #include "SliderControl.h"
 #include "Utils.h"
 
 #define RANGE_INT_MAX 1000000
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 SliderControl* SliderControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new SliderControl (go, new QScrollBar (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 SliderControl::SliderControl (const graphics_object& go,
 			      QAbstractSlider* slider)
     : BaseControl (go, slider), m_blockUpdates (false)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   slider->setTracking (false);
   Matrix bb = up.get_boundingbox ();
@@ -76,24 +71,20 @@ SliderControl::SliderControl (const grap
 
       slider->setValue (xround (((value(0) - dmin) / (dmax - dmin))
 				* RANGE_INT_MAX));
     }
 
   connect (slider, SIGNAL (valueChanged (int)), SLOT (valueChanged (int)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 SliderControl::~SliderControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void SliderControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QScrollBar* slider = qWidget<QScrollBar> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_SLIDERSTEP:
@@ -121,18 +112,16 @@ void SliderControl::update (int pId)
 	}
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void SliderControl::valueChanged (int ival)
 {
   if (! m_blockUpdates)
     {
       gh_manager::auto_lock lock;
       graphics_object go = object ();
 
       if (go.valid_object ())
@@ -153,11 +142,9 @@ void SliderControl::valueChanged (int iv
 
 	      gh_manager::post_set (m_handle, "value", octave_value (dval));
 	      gh_manager::post_callback (m_handle, "callback");
 	    }
 	}
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/SliderControl.h b/libgui/graphics/SliderControl.h
--- a/libgui/graphics/SliderControl.h
+++ b/libgui/graphics/SliderControl.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_SliderControl__
 #define __QtHandles_SliderControl__ 1
 
 #include "BaseControl.h"
 
 class QAbstractSlider;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class SliderControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   SliderControl (const graphics_object& go, QAbstractSlider* slider);
   ~SliderControl (void);
 
@@ -48,15 +45,11 @@ protected:
 
 private slots:
   void valueChanged (int ival);
 
 private:
   bool m_blockUpdates;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/TextControl.cc b/libgui/graphics/TextControl.cc
--- a/libgui/graphics/TextControl.cc
+++ b/libgui/graphics/TextControl.cc
@@ -1,85 +1,76 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QLabel>
 
 #include "Container.h"
 #include "TextControl.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 TextControl* TextControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new TextControl (go, new QLabel (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 TextControl::TextControl (const graphics_object& go, QLabel* label)
      : BaseControl (go, label)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   label->setAutoFillBackground (true);
   label->setTextFormat (Qt::PlainText);
   label->setWordWrap (false);
   label->setAlignment (Utils::fromHVAlign (up.get_horizontalalignment (),
 					   up.get_verticalalignment ()));
   // FIXME: support string_vector
   label->setText (Utils::fromStdString (up.get_string_string ()));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 TextControl::~TextControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void TextControl::update (int pId)
 {
   uicontrol::properties& up = properties<uicontrol> ();
   QLabel* label = qWidget<QLabel> ();
 
   switch (pId)
     {
     case uicontrol::properties::ID_STRING:
@@ -92,11 +83,9 @@ void TextControl::update (int pId)
 					       up.get_verticalalignment ()));
       break;
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/TextControl.h b/libgui/graphics/TextControl.h
--- a/libgui/graphics/TextControl.h
+++ b/libgui/graphics/TextControl.h
@@ -1,54 +1,47 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_TextControl__
 #define __QtHandles_TextControl__ 1
 
 #include "BaseControl.h"
 
 class QLabel;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class TextControl : public BaseControl
 {
 public:
   TextControl (const graphics_object& go, QLabel* label);
   ~TextControl (void);
 
   static TextControl* create (const graphics_object& go);
 
 protected:
   void update (int pId);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/TextEdit.cc b/libgui/graphics/TextEdit.cc
--- a/libgui/graphics/TextEdit.cc
+++ b/libgui/graphics/TextEdit.cc
@@ -1,58 +1,51 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QKeyEvent>
 
 #include "TextEdit.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 void TextEdit::focusOutEvent (QFocusEvent* event)
 {
   QTextEdit::focusOutEvent (event);
 
   emit editingFinished ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void TextEdit::keyPressEvent (QKeyEvent* event)
 {
   QTextEdit::keyPressEvent (event);
 
   if ((event->key () == Qt::Key_Return
        || event->key () == Qt::Key_Enter)
       && event->modifiers () == Qt::ControlModifier)
     emit editingFinished ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/TextEdit.h b/libgui/graphics/TextEdit.h
--- a/libgui/graphics/TextEdit.h
+++ b/libgui/graphics/TextEdit.h
@@ -1,56 +1,49 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_TextEdit__
 #define __QtHandles_TextEdit__ 1
 
 #include <QTextEdit>
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class TextEdit : public QTextEdit
 {
   Q_OBJECT
 
 public:
   TextEdit (QWidget* parent) : QTextEdit(parent) { }
   ~TextEdit (void) { }
 
 signals:
   void editingFinished (void);
 
 protected:
   void focusOutEvent (QFocusEvent* event);
   void keyPressEvent (QKeyEvent* event);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ToggleButtonControl.cc b/libgui/graphics/ToggleButtonControl.cc
--- a/libgui/graphics/ToggleButtonControl.cc
+++ b/libgui/graphics/ToggleButtonControl.cc
@@ -1,72 +1,63 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QPushButton>
 
 #include "ToggleButtonControl.h"
 #include "Container.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleButtonControl* ToggleButtonControl::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       Container* container = parent->innerContainer ();
 
       if (container)
 	return new ToggleButtonControl (go, new QPushButton (container));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleButtonControl::ToggleButtonControl (const graphics_object& go,
 					  QPushButton* btn)
     : ButtonControl (go, btn)
 {
   btn->setCheckable (true);
   btn->setAutoFillBackground (true);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleButtonControl::~ToggleButtonControl (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/ToggleButtonControl.h b/libgui/graphics/ToggleButtonControl.h
--- a/libgui/graphics/ToggleButtonControl.h
+++ b/libgui/graphics/ToggleButtonControl.h
@@ -1,51 +1,44 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ToggleButtonControl__
 #define __QtHandles_ToggleButtonControl__ 1
 
 #include "ButtonControl.h"
 
 class QPushButton;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class ToggleButtonControl : public ButtonControl
 {
 public:
   ToggleButtonControl (const graphics_object& go, QPushButton* box);
   ~ToggleButtonControl (void);
 
   static ToggleButtonControl* create (const graphics_object& go);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ToggleTool.cc b/libgui/graphics/ToggleTool.cc
--- a/libgui/graphics/ToggleTool.cc
+++ b/libgui/graphics/ToggleTool.cc
@@ -1,104 +1,91 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "ToggleTool.h"
 
 #include "ToolBarButton.cc"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleTool* ToggleTool::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       QWidget* parentWidget = parent->qWidget<QWidget> ();
 
       if (parentWidget)
 	return new ToggleTool (go, new QAction (parentWidget));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleTool::ToggleTool (const graphics_object& go, QAction* action)
     : ToolBarButton<uitoggletool> (go, action)
 {
   uitoggletool::properties& tp = properties<uitoggletool> ();
 
   action->setCheckable (true);
   action->setChecked (tp.is_state ());
 
   connect (action, SIGNAL (toggled (bool)),
 	   this, SLOT (triggered (bool)));
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToggleTool::~ToggleTool (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ToggleTool::update (int pId)
 {
   uitoggletool::properties& tp = properties<uitoggletool> ();
   QAction* action = qWidget<QAction> ();
 
   switch (pId)
     {
     case uitoggletool::properties::ID_STATE:
       action->setChecked (tp.is_state ());
       break;
     default:
       ToolBarButton<uitoggletool>::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ToggleTool::triggered (bool checked)
 {
   gh_manager::post_set (m_handle, "state", checked, false);
   gh_manager::post_callback (m_handle,
 			     checked
 			     ? "oncallback"
 			     : "offcallback");
   gh_manager::post_callback (m_handle, "clickedcallback");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
diff --git a/libgui/graphics/ToggleTool.h b/libgui/graphics/ToggleTool.h
--- a/libgui/graphics/ToggleTool.h
+++ b/libgui/graphics/ToggleTool.h
@@ -1,41 +1,38 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ToggleTool__
 #define __QtHandles_ToggleTool__ 1
 
 #include "ToolBarButton.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class ToggleTool : public ToolBarButton<uitoggletool>
 {
   Q_OBJECT
 
 public:
   ToggleTool (const graphics_object& go, QAction* action);
   ~ToggleTool (void);
 
@@ -43,15 +40,11 @@ public:
 
 protected:
   void update (int pId);
 
 private slots:
   void triggered (bool checked);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ToolBar.cc b/libgui/graphics/ToolBar.cc
--- a/libgui/graphics/ToolBar.cc
+++ b/libgui/graphics/ToolBar.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAction>
@@ -32,23 +33,19 @@ along with Foobar.  If not, see <http://
 #include <QPixmap>
 #include <QTimer>
 #include <QToolBar>
 
 #include "Figure.h"
 #include "ToolBar.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static QAction* addEmptyAction (QToolBar* bar)
 {
   static QIcon _empty;
 
   if (_empty.isNull ())
     {
       QPixmap pix (16, 16);
 
@@ -60,35 +57,31 @@ static QAction* addEmptyAction (QToolBar
   QAction* a = bar->addAction (_empty, "Empty Toolbar");
 
   a->setEnabled (false);
   a->setToolTip ("");
 
   return a;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToolBar* ToolBar::create (const graphics_object& go)
 {
   Object* parent = Object::parentObject (go);
 
   if (parent)
     {
       QWidget* parentWidget = parent->qWidget<QWidget> ();
 
       if (parentWidget)
 	return new ToolBar (go, new QToolBar (parentWidget));
     }
 
   return 0;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToolBar::ToolBar (const graphics_object& go, QToolBar* bar)
      : Object (go, bar), m_empty (0), m_figure (0)
 {
   uitoolbar::properties& tp = properties<uitoolbar> ();
 
   bar->setFloatable (false);
   bar->setMovable (false);
   bar->setVisible (tp.is_visible ());
@@ -99,24 +92,20 @@ ToolBar::ToolBar (const graphics_object&
     dynamic_cast<Figure*> (Object::fromQObject (bar->parentWidget ()));
 
   if (m_figure)
     m_figure->addCustomToolBar (bar, tp.is_visible ());
 
   bar->installEventFilter (this);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 ToolBar::~ToolBar (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ToolBar::update (int pId)
 {
   uitoolbar::properties& tp = properties<uitoolbar> ();
   QToolBar* bar = qWidget<QToolBar> ();
 
   switch (pId)
     {
     case base_properties::ID_VISIBLE:
@@ -124,18 +113,16 @@ void ToolBar::update (int pId)
 	m_figure->showCustomToolBar (bar, tp.is_visible ());
       break;
     default:
       Object::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool ToolBar::eventFilter (QObject* watched, QEvent* event)
 {
   if (watched == qObject ())
     {
       switch (event->type ())
 	{
 	case QEvent::ActionAdded:
 	case QEvent::ActionRemoved:
@@ -161,31 +148,25 @@ bool ToolBar::eventFilter (QObject* watc
 	default:
 	  break;
 	}
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ToolBar::hideEmpty (void)
 {
   m_empty->setVisible (false);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 void ToolBar::beingDeleted (void)
 {
   if (m_figure)
     {
       QToolBar* bar = qWidget<QToolBar> ();
 
       if (bar)
 	m_figure->showCustomToolBar (bar, false);
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/ToolBar.h b/libgui/graphics/ToolBar.h
--- a/libgui/graphics/ToolBar.h
+++ b/libgui/graphics/ToolBar.h
@@ -1,44 +1,41 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ToolBar__
 #define __QtHandles_ToolBar__ 1
 
 #include "Object.h"
 
 class QAction;
 class QToolBar;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Figure;
 
 class ToolBar : public Object
 {
   Q_OBJECT
 
 public:
   ToolBar (const graphics_object& go, QToolBar* bar);
@@ -57,15 +54,11 @@ protected:
 private slots:
   void hideEmpty (void);
 
 private:
   QAction* m_empty;
   Figure* m_figure;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/ToolBarButton.cc b/libgui/graphics/ToolBarButton.cc
--- a/libgui/graphics/ToolBarButton.cc
+++ b/libgui/graphics/ToolBarButton.cc
@@ -1,46 +1,43 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QAction>
 #include <QWidget>
 
 #include "ToolBarButton.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 template <class T>
 ToolBarButton<T>::ToolBarButton (const graphics_object& go, QAction* action)
     : Object (go, action), m_separator (0)
 {
   typename T::properties& tp = properties<T> ();
 
   action->setToolTip (Utils::fromStdString (tp.get_tooltipstring ()));
   action->setVisible (tp.is_visible ());
@@ -56,25 +53,21 @@ ToolBarButton<T>::ToolBarButton (const g
 
   QWidget* w = qobject_cast<QWidget*> (action->parent ());
 
   w->insertAction (w->actions ().back (), action);
   if (m_separator)
     w->insertAction (action, m_separator);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 template <class T>
 ToolBarButton<T>::~ToolBarButton (void)
 {
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 template <class T>
 void ToolBarButton<T>::update (int pId)
 {
   typename T::properties& tp = properties<T> ();
   QAction* action = qWidget<QAction> ();
 
   switch (pId)
     {
@@ -118,11 +111,9 @@ void ToolBarButton<T>::update (int pId)
       action->setEnabled (tp.is_enable ());
       break;
     default:
       Object::update (pId);
       break;
     }
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/ToolBarButton.h b/libgui/graphics/ToolBarButton.h
--- a/libgui/graphics/ToolBarButton.h
+++ b/libgui/graphics/ToolBarButton.h
@@ -1,43 +1,40 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_ToolBarButton__
 #define __QtHandles_ToolBarButton__ 1
 
 #include "Object.h"
 
 class QAction;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 class Container;
   
 template <class T>
 class ToolBarButton : public Object
 {
 public:
   ToolBarButton (const graphics_object& go, QAction* action);
   ~ToolBarButton (void);
@@ -46,15 +43,11 @@ public:
 
 protected:
   void update (int pId);
 
 private:
   QAction* m_separator;
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/Utils.cc b/libgui/graphics/Utils.cc
--- a/libgui/graphics/Utils.cc
+++ b/libgui/graphics/Utils.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
@@ -33,68 +34,54 @@ along with Foobar.  If not, see <http://
 #include "graphics.h"
 
 #include "Backend.h"
 #include "Container.h"
 #include "KeyMap.h"
 #include "Object.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace Utils
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 QString fromStdString (const std::string& s)
 {
   return QString::fromLocal8Bit (s.c_str ());
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 std::string toStdString (const QString& s)
 {
   return std::string (s.toLocal8Bit ().data ());
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QStringList fromStringVector (const string_vector& v)
 {
   QStringList l;
   octave_idx_type n = v.length ();
 
   for (octave_idx_type i = 0; i < n; i++)
     l << fromStdString (v[i]);
 
   return l;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 string_vector toStringVector (const QStringList& l)
 {
   string_vector v (l.length ());
   int i = 0;
 
   foreach (const QString& s, l)
     v[i++] = toStdString (s);
 
   return v;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 template <class T>
 QFont computeFont (const typename T::properties& props, int height)
 {
   QFont f (fromStdString (props.get_fontname ()));
 
   static std::map<std::string, QFont::Weight> weightMap;
   static std::map<std::string, QFont::Style> angleMap;
   static bool mapsInitialized = false;
@@ -120,42 +107,36 @@ QFont computeFont (const typename T::pro
   return f;
 }
 
 template QFont computeFont<uicontrol> (const uicontrol::properties& props,
 				       int height);
 template QFont computeFont<uipanel> (const uipanel::properties& props,
 				     int height);
 
-//////////////////////////////////////////////////////////////////////////////
-
 QColor fromRgb (const Matrix& rgb)
 {
   QColor c;
 
   if (rgb.numel () == 3)
     c.setRgbF (rgb(0), rgb(1), rgb(2));
   
   return c;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Matrix toRgb (const QColor& c)
 {
   Matrix rgb (1, 3);
   double* rgbData = rgb.fortran_vec ();
 
   c.getRgbF (rgbData, rgbData+1, rgbData+2);
 
   return rgb;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 std::string figureSelectionType (QMouseEvent* event, bool isDoubleClick)
 {
   if (isDoubleClick)
     return std::string ("open");
   else
     {
       Qt::MouseButtons buttons = event->buttons ();
       Qt::KeyboardModifiers mods = event->modifiers ();
@@ -181,18 +162,16 @@ std::string figureSelectionType (QMouseE
 	  else if (mods == Qt::ControlModifier)
 	    return std::string ("alt");
 	}
     }
 
   return std::string ("normal");
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Matrix figureCurrentPoint (const graphics_object& fig, QMouseEvent* event)
 {
   Object* tkFig = Backend::toolkitObject (fig);
 
   if (tkFig)
     {
       Container* c = tkFig->innerContainer ();
 
@@ -204,18 +183,16 @@ Matrix figureCurrentPoint (const graphic
 	    tkFig->properties<figure> ().map_from_boundingbox (qp.x (),
 							       qp.y ());
 	}
     }
 
   return Matrix (1, 2, 0.0);
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 Qt::Alignment fromHVAlign (const caseless_str& halign,
 			   const caseless_str& valign)
 {
   Qt::Alignment flags;
 
   if (halign.compare ("left"))
     flags |= Qt::AlignLeft;
   else if (halign.compare ("center"))
@@ -232,18 +209,16 @@ Qt::Alignment fromHVAlign (const caseles
   else if (valign.compare ("bottom"))
     flags |= Qt::AlignBottom;
   else
     flags |= Qt::AlignVCenter;
 
   return flags;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 QImage makeImageFromCData (const octave_value& v, int width, int height)
 {
   dim_vector dv (v.dims ());
 
   if (dv.length () == 3 && dv(2) == 3)
     {
       int w = qMin (dv(1), width);
       int h = qMin (dv(0), height);
@@ -309,18 +284,16 @@ QImage makeImageFromCData (const octave_
 	}
 
       return img;
     }
 
   return QImage ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 octave_scalar_map makeKeyEventStruct (QKeyEvent* event)
 {
   octave_scalar_map retval;
 
   retval.setfield ("Key", KeyMap::qKeyToKeyString (event->key ()));
   retval.setfield ("Character", toStdString (event->text ()));
 
   std::list<std::string> modList;
@@ -341,15 +314,11 @@ octave_scalar_map makeKeyEventStruct (QK
     modList.push_back ("control");
 #endif
 
   retval.setfield ("Modifier", Cell (modList));
 
   return retval;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace Utils
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
diff --git a/libgui/graphics/Utils.h b/libgui/graphics/Utils.h
--- a/libgui/graphics/Utils.h
+++ b/libgui/graphics/Utils.h
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_Utils__
 #define __QtHandles_Utils__ 1
 
 #include <QColor>
 #include <QFont>
@@ -30,23 +31,19 @@ along with Foobar.  If not, see <http://
 
 #include <string>
 
 #include "graphics.h"
 
 class QKeyEvent;
 class QMouseEvent;
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace Utils
 {
   QString fromStdString (const std::string& s);
   std::string toStdString (const QString& s);
 
   QStringList fromStringVector (const string_vector& v);
   string_vector toStringVector (const QStringList& l);
 
@@ -75,15 +72,11 @@ namespace Utils
     { return Utils::properties<T> (gh_manager::get_object (h)); }
 
   QImage makeImageFromCData (const octave_value& v, int width = -1,
 			     int height = -1);
 
   octave_scalar_map makeKeyEventStruct (QKeyEvent* event);
 };
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QApplication>
@@ -32,27 +33,21 @@ along with Foobar.  If not, see <http://
 
 #include "graphics.h"
 #include "toplev.h"
 #include "defun.h"
 
 #include "Backend.h"
 #include "Utils.h"
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 static bool qtHandlesInitialized = false;
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool __init__ (void)
 {
   if (! qtHandlesInitialized)
     {
       if (qApp)
 	{
 	  qRegisterMetaType<graphics_object> ("graphics_object");
 
@@ -92,18 +87,16 @@ bool __init__ (void)
 	}
       else
 	error ("__init_qt__: QApplication object must exist.");
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool __shutdown__ (void)
 {
   if (qtHandlesInitialized)
     {
       octave_add_atexit_function ("__shutdown_qt__");
 
       gtk_manager::unload_toolkit ("qt");
 
@@ -112,31 +105,25 @@ bool __shutdown__ (void)
       qtHandlesInitialized = false;
 
       return true;
     }
 
   return false;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
-//////////////////////////////////////////////////////////////////////////////
-
 DEFUN (__init_qt__, , , "")
 {
   QtHandles::__init__ ();
 
   return octave_value ();
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 DEFUN (__shutdown_qt__, , , "")
 {
   QtHandles::__shutdown__ ();
 
   return octave_value ();
 }
 
 void
@@ -146,18 +133,16 @@ install___init_qt___functions (void)
                             "__init_qt__.cc", "");
 
   install_builtin_function (F__shutdown_qt__, "__shutdown_qt__",
                             "__init_qt__.cc", "");
 }
 
 #if 0
 
-//////////////////////////////////////////////////////////////////////////////
-
 static QStringList makeFilterSpecs (const Cell& filters)
 {
   using namespace QtHandles::Utils;
 
   QStringList filterSpecs;
   QRegExp parenRe (" ?\\(.*\\)\\s*$");
 
   for (int i = 0; i < filters.rows (); i++)
@@ -178,27 +163,23 @@ static QStringList makeFilterSpecs (cons
       specItem = QString ("%1 (%2)").arg (desc).arg (extList.join (" "));
 
       filterSpecs.append (specItem);
     }
 
   return filterSpecs;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 static QString appendDirSep (const QString& d)
 {
   if (! d.endsWith ("/") && ! d.endsWith (QDir::separator ()))
     return (d + "/");
   return d;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 DEFUN (__uigetfile_qt__, args, , "")
 {
   using namespace QtHandles::Utils;
 
   // Expected arguments:
   //   args(0) : File filter as a cell array {ext1, name1; ext2, name2; ...}
   //   args(1) : Dialog title
   //   args(2) : Default file name
@@ -271,18 +252,16 @@ DEFUN (__uigetfile_qt__, args, , "")
 	  if (! filter.isEmpty ())
 	    retval(2) = static_cast<double> (filterSpecs.indexOf (filter) + 1);
 	}
     }
 
   return retval;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 DEFUN (__uiputfile_qt__, args, , "")
 {
   using namespace QtHandles::Utils;
 
   // Expected arguments:
   //   args(0) : File filter as a cell array {ext1, name1; ext2, name2; ...}
   //   args(1) : Dialog title
   //   args(2) : Default file name
@@ -323,18 +302,16 @@ DEFUN (__uiputfile_qt__, args, , "")
 	retval(1) = toStdString (appendDirSep (fi.absolutePath ()));
       if (! filter.isEmpty ())
 	retval(2) = static_cast<double> (filterSpecs.indexOf (filter) + 1);
     }
 
   return retval;
 }
 
-//////////////////////////////////////////////////////////////////////////////
-
 DEFUN (__uigetdir_qt__, args, , "")
 {
   using namespace QtHandles::Utils;
 
   // Expected arguments:
   //   args(0) : Start directory
   //   args(1) : Dialog title
 
diff --git a/libgui/graphics/__init_qt__.h b/libgui/graphics/__init_qt__.h
--- a/libgui/graphics/__init_qt__.h
+++ b/libgui/graphics/__init_qt__.h
@@ -1,42 +1,35 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_init_qt__
 #define __QtHandles_init_qt__ 1
 
-//////////////////////////////////////////////////////////////////////////////
-
 namespace QtHandles
 {
 
-//////////////////////////////////////////////////////////////////////////////
-
 bool __init__ (void);
 
-//////////////////////////////////////////////////////////////////////////////
-
 }; // namespace QtHandles
 
 extern void install___init_qt___functions (void);
 
-//////////////////////////////////////////////////////////////////////////////
-
 #endif
diff --git a/libgui/graphics/gl-select.cc b/libgui/graphics/gl-select.cc
--- a/libgui/graphics/gl-select.cc
+++ b/libgui/graphics/gl-select.cc
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "gl-select.h"
diff --git a/libgui/graphics/gl-select.h b/libgui/graphics/gl-select.h
--- a/libgui/graphics/gl-select.h
+++ b/libgui/graphics/gl-select.h
@@ -1,26 +1,27 @@
 /*
 
-Copyright (C) 2011 Michael Goffioul.
+Copyright (C) 2011-2014 Michael Goffioul
 
-This file is part of QtHandles.
+This file is part of Octave.
 
-Foobar is free software: you can redistribute it and/or modify
-it under the terms of the GNU General Public License as published by
-the Free Software Foundation, either version 3 of the License, or
-(at your option) any later version.
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
 
-QtHandles is distributed in the hope that it will be useful,
-but WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
 
 You should have received a copy of the GNU General Public License
-along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef __QtHandles_gl_selector__
 #define __QtHandles_gl_selector__ 1
 
 #include "gl-render.h"
 
diff --git a/libgui/graphics/module.mk b/libgui/graphics/module.mk
--- a/libgui/graphics/module.mk
+++ b/libgui/graphics/module.mk
@@ -100,16 +100,17 @@ graphics_libgui_graphics_la_SOURCES = \
   graphics/ToolBar.cc \
   graphics/Utils.cc \
   graphics/gl-select.cc
 
 nodist_graphics_libgui_graphics_la_SOURCES = $(octave_gui_graphics_MOC) $(octave_gui_graphics_RC)
 
 graphics_libgui_graphics_la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
+  $(FT2_CFLAGS) \
   $(FONTCONFIG_CPPFLAGS) \
   @OCTGUI_DLL_DEFS@ \
   @QT_CPPFLAGS@ \
   -Igraphics -I$(srcdir)/graphics \
   -I$(top_srcdir)/liboctave/cruft/misc \
   -I$(top_srcdir)/liboctave/array \
   -I$(top_builddir)/liboctave/numeric -I$(top_srcdir)/liboctave/numeric \
   -I$(top_builddir)/liboctave/operators -I$(top_srcdir)/liboctave/operators \
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -168,16 +168,17 @@ src_libgui_src_la_SOURCES = \
   src/find-files-model.cc \
   src/workspace-model.cc \
   src/workspace-view.cc
 
 nodist_src_libgui_src_la_SOURCES = $(octave_gui_MOC) $(octave_gui_RC)
 
 src_libgui_src_la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
+  $(FT2_CFLAGS) \
   $(FONTCONFIG_CPPFLAGS) \
   @OCTGUI_DLL_DEFS@ \
   @QT_CPPFLAGS@ \
   -I$(srcdir)/qterminal/libqterminal \
   -Isrc -I$(srcdir)/src \
   -I$(srcdir)/src/m-editor \
   -I$(srcdir)/src/qtinfo \
   -I$(srcdir)/graphics \
