# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1248471669 14400
#      Fri Jul 24 17:41:09 2009 -0400
# Node ID ff8d7f3ad203efa64f468d7a53f76290c5c603b5
# Parent  1fddcf65155981774b445d7ebcf68c2890710bf7
gnuplot_binary.m: accept arguments in addition to program name

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-07-24  John W. Eaton  <jwe@octave.org>
+
+	* plot/gnuplot_binary.in: Accept arguments in addition to program name.
+	* plot/__gnuplot_open_stream__.m: Pass additional args to gnuplot.
+
 2009-07-23  Ben Abbott <bpabbott@mac.com>
 
 	* plot/legend.m: Add an hggroup demo using bar(). Include clf()
 	in each demo.
 
 2009-07-23  John W. Eaton  <jwe@octave.org>
 
 	* image/imread.m: Fix test.
diff --git a/scripts/plot/__gnuplot_open_stream__.m b/scripts/plot/__gnuplot_open_stream__.m
--- a/scripts/plot/__gnuplot_open_stream__.m
+++ b/scripts/plot/__gnuplot_open_stream__.m
@@ -18,24 +18,24 @@
 ## @deftypefn {Function File} {@var{stream}} __gnuplot_open_stream__ (@var{npipes}, @var{h})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Created: 2009-04-11
 
 function plot_stream = __gnuplot_open_stream__ (npipes, h)
-  cmd = gnuplot_binary ();
+  [prog, args] = gnuplot_binary ();
   if (npipes > 1)
-    [plot_stream(1), plot_stream(2), pid] = popen2 (cmd);
+    [plot_stream(1), plot_stream(2), pid] = popen2 (prog, args{:});
     if (pid < 0)
       error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
     endif
   else
-    plot_stream = popen (cmd, "w");
+    plot_stream = popen (sprintf ("%s ", prog, args{:}), "w");
     if (plot_stream < 0)
       error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
     endif
   endif
   if (nargin > 1)
     set (h, "__plot_stream__", plot_stream);
   endif
 endfunction
diff --git a/scripts/plot/gnuplot_binary.in b/scripts/plot/gnuplot_binary.in
--- a/scripts/plot/gnuplot_binary.in
+++ b/scripts/plot/gnuplot_binary.in
@@ -12,39 +12,49 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Loadable Function} {@var{val} =} gnuplot_binary ()
-## @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_binary (@var{new_val})
-## Query or set the name of the program invoked by the plot command.
+## @deftypefn {Loadable Function} {[@var{prog}, @var{args}] =} gnuplot_binary ()
+## @deftypefnx {Loadable Function} {[@var{old_prog}, @var{old_args}] =} gnuplot_binary (@var{new_prog}, @varg{arg1}, @dots{})
+## Query or set the name of the program invoked by the plot command
+## and any arguments to pass to it.  Previous arguments are returned
+## as a cell array.
 ## The default value @code{\"gnuplot\"}.  @xref{Installation}.
 ## @end deftypefn
 
 ## Author: jwe
 
-function retval = gnuplot_binary (new_val)
+function [prog, args] = gnuplot_binary (new_prog, varargin)
 
   persistent gp_binary = %OCTAVE_CONF_GNUPLOT%;
+  persistent gp_args = {};
 
   if (nargout > 0 || nargin == 0)
-    retval = gp_binary;
+    prog = gp_binary;
+    args = gp_args;
   endif
 
   if (nargin == 1)
-    if (ischar (new_val))
-      if (! isempty (new_val))
-	gp_binary = new_val;
+    if (ischar (new_prog))
+      if (! isempty (new_prog))
+	gp_binary = new_prog;
       else
 	error ("gnuplot_binary: value must not be empty");
       endif
     else
-      error ("gnuplot_binary: expecting arg to be a character string");
+      error ("gnuplot_binary: expecting program to be a character string");
     endif
-  elseif (nargin > 1)
-    print_usage ();
+  endif
+
+  if (nargin > 1)
+    if (iscellstr (varargin))
+      gp_args = varargin;
+    else
+      error ("gnuplot_binary: expecting arguments to be character strings");
+    endif
   endif
 
 endfunction
