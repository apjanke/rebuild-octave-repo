# HG changeset patch
# User jwe
# Date 872524378 0
#      Mon Aug 25 15:52:58 1997 +0000
# Node ID 8c779ed7979b21d2e4e5b6d4d2adcb71568f946e
# Parent  4a324ba3f1eb74a5e3528b72e58756b52ef4cc45
[project @ 1997-08-25 15:51:20 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Wed Aug 13 20:34:14 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* emacs/octave-mod.el (octave-before-magic-comment-p): New function.
+	(calculate-octave-indent, octave-comment-indent): Use it.
+
 Sun Aug  3 15:33:18 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* info: Delete subdirectory.
 	* Makefile.in (TARGETS, help): Delete info.
 	* octMakefile.in (DISTSUBDIRS, BINDISTSUBDIRS): Delete info
 	(binary-dist): Don't strip info/info.
 	* install-octave: Don't install info.
 	* configure.in: Don't run configure in info subdirectory.
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -243,16 +243,22 @@ Interpreter:
       function foo ()
         implicit_str_to_num_ok = 1;
         '#' + 0;
       endfunction
 
     succeeds, even when implicit_str_to_num_ok is 0 at the time the
     function is parsed.
 
+  * Fix the parser so that
+
+      if (expr) 'this is a string' end
+
+    is parsed as IF expr STRING END.
+
   * Consider making x(:) work no matter what the value of
     do_fortran_indexing.
 
   * For indexing operations, allow `$' to indicate the last element.
     For example, b = a (3:$, 1:$-1).  This means b is a, except for
     its first 2 rows and last column.  Note that `$' must be able to
     appear in arbitrarily complex expressions, so copying the the
     current implementation of `:' won't work. 
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -650,30 +650,37 @@ level."
       (back-to-indentation)
       (cond
        ((and (looking-at octave-block-else-regexp)
 	     (octave-not-in-string-or-comment-p))
 	(setq icol (- icol octave-block-offset)))
        ((and (looking-at octave-block-end-regexp)
 	     (octave-not-in-string-or-comment-p))
 	(setq icol (- icol (octave-block-end-offset))))
-       ((looking-at "\\s<\\s<\\s<\\S<")
+       ((or (looking-at "\\s<\\s<\\s<\\S<")
+	    (octave-before-magic-comment-p))
 	(setq icol (list 0 icol)))
        ((looking-at "\\s<\\S<")
 	(setq icol (list comment-column icol)))))
     icol))
 
 (defun octave-block-end-offset ()
   (save-excursion
     (octave-backward-up-block 1)
     (* octave-block-offset
        (if (string-match (match-string 0) "switch") 2 1))))
 
+(defun octave-before-magic-comment-p ()
+  (save-excursion
+    (beginning-of-line)
+    (and (bobp) (looking-at "\\s-*#!"))))
+
 (defun octave-comment-indent ()
-  (if (looking-at "\\s<\\s<\\s<")
+  (if (or (looking-at "\\s<\\s<\\s<")
+	  (octave-before-magic-comment-p))
       0
     (if (looking-at "\\s<\\s<")
 	(calculate-octave-indent)
       (skip-syntax-backward " ")
       (max (if (bolp) 0 (+ 1 (current-column)))
 	   comment-column))))
 
 (defun octave-indent-for-comment ()
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+Wed Aug 13 14:14:16 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* strings/blanks.m: Allow blanks(0) to return empty string.
+	Allow negative arguments if treat_neg_dim_as_zero is true.
+
 Wed Jun 25 21:26:24 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* plot/mesh.m: Set noparametric plot mode after plotting.
 
 Wed Jun 25 21:06:10 1997  Rick Niles <niles@axp745.gsfc.nasa.gov>
 
 	* plot/__pltopt__.m: Handle key/legend names.
 	Correctly set colors, line styles, and point styles.
diff --git a/scripts/strings/blanks.m b/scripts/strings/blanks.m
--- a/scripts/strings/blanks.m
+++ b/scripts/strings/blanks.m
@@ -25,15 +25,15 @@
 ## Adapted-By: jwe
 
 function s = blanks (n)
 
   if (nargin != 1)
     usage ("blanks (n)");
   endif
 
-  if (is_scalar (n) && n > 0 && n == round (n))
+  if (is_scalar (n) && n == round (n) && (treat_neg_dim_as_zero || n >= 0))
     s = setstr (ones (1, n) * toascii (" "));
   else
-    error ("blanks: n must be a positive integer");
+    error ("blanks: n must be a non-negative integer");
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Mon Aug 25 10:42:07 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* input.cc (get_user_input): Return an empty string if the user
+	just types RET.
+
 Thu Jul 31 22:59:04 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l <TEXT_FCN>: Ensure that we handle words that begin with
 	single or double quotes as strings.
 
 Thu Jul 17 13:06:48 1997  Klaus Gebhardt <gebhardt@crunch.ikp.physik.th-darmstadt.de>
 
 	* DLD-FUNCTIONS/rand.cc (Frand): Use F77_XFCN to call getsd,
diff --git a/src/DLD-FUNCTIONS/lsode.cc b/src/DLD-FUNCTIONS/lsode.cc
--- a/src/DLD-FUNCTIONS/lsode.cc
+++ b/src/DLD-FUNCTIONS/lsode.cc
@@ -180,17 +180,17 @@ where xdot and x are vectors and t is a 
 		if (! lsode_jac)
 		  lsode_fcn = 0;
 	      }
 	  }
       }
       break;
 
     default:
-      error ("lsode: second arg should be a string or 2-element string array");
+      error ("lsode: first arg should be a string or 2-element string array");
       break;
     }
 
   if (error_state || ! lsode_fcn)
     return retval;
 
   ColumnVector state = args(1).vector_value ();
 
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -526,17 +526,21 @@ get_user_input (const octave_value_list&
       if (match_sans_spaces ("exit", input_buf)
 	  || match_sans_spaces ("quit", input_buf)
 	  || match_sans_spaces ("return", input_buf))
 	{
 	  return retval;
 	}
       else if (read_as_string)
 	{
-	  retval = input_buf;
+	  // XXX FIXME XXX -- fix gnu_readline and octave_gets instead!
+	  if (input_buf.length () == 1 && input_buf[0] == '\n')
+	    retval = "";
+	  else
+	    retval = input_buf;
 	}
       else
 	{
 	  int parse_status = 0;
 
 	  retval = eval_string (input_buf, true, parse_status);
 
 	  if (retval.is_defined ())
