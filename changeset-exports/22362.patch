# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471901437 25200
#      Mon Aug 22 14:30:37 2016 -0700
# Node ID f3ce0015dd422409008449feb37633a95d4233e6
# Parent  a12f11e20c75e98d87c530d234dbb8d542e8d199
Draw tick marks in appropriate axes color (OpenGL renderers).

* gl-render.cc (draw_axes_x_grid, draw_axes_y_grid, draw_axes_z_grid):
Move drawing of minor grid and major grid to the beginning of function.
Next, set color based on axes property and then add tick marks and text.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1340,24 +1340,46 @@ namespace octave
         if (do_xminorgrid && ! do_xgrid)
           {
             gridstyle = minorgridstyle;
             gridcolor = minorgridcolor;
             gridalpha = minorgridalpha;
             do_xgrid = true;
           }
 
-        set_color (props.get_xcolor_rgb ());
+        // minor grid lines
+        if (do_xminorgrid)
+          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
+                       xmticks, x_min, x_max,
+                       yPlane, yPlaneN, layer2Dtop ? zPlaneN : zPlane,
+                       zPlaneN, 0, (zstate != AXE_DEPTH_DIR));
 
         // grid lines
         if (do_xgrid)
           render_grid (gridstyle, gridcolor, gridalpha, xticks, x_min, x_max,
                        yPlane, yPlaneN, layer2Dtop ? zPlaneN : zPlane,
                        zPlaneN, 0, (zstate != AXE_DEPTH_DIR));
 
+        set_color (props.get_xcolor_rgb ());
+
+        // minor tick marks
+        if (do_xminortick)
+          {
+            if (tick_along_z)
+              render_tickmarks (xmticks, x_min, x_max, ypTick, ypTick,
+                                zpTick, zpTickN, 0., 0.,
+                                octave::math::signum (zpTick-zpTickN)*fz*xticklen/2,
+                                0, mirror);
+            else
+              render_tickmarks (xmticks, x_min, x_max, ypTick, ypTickN,
+                                zpTick, zpTick, 0.,
+                                octave::math::signum (ypTick-ypTickN)*fy*xticklen/2,
+                                0., 0, mirror);
+          }
+
         // tick marks
         if (tick_along_z)
           {
             render_tickmarks (xticks, x_min, x_max, ypTick, ypTick,
                               zpTick, zpTickN, 0., 0.,
                               octave::math::signum (zpTick-zpTickN)*fz*xticklen,
                               0, mirror);
           }
@@ -1380,38 +1402,16 @@ namespace octave
                                 zpTick+octave::math::signum (zpTick-zpTickN)*fz*xtickoffset,
                                 0, halign, valign, wmax, hmax);
             else
               render_ticktexts (xticks, xticklabels, x_min, x_max,
                                 ypTick+octave::math::signum (ypTick-ypTickN)*fy*xtickoffset,
                                 zpTick, 0, halign, valign, wmax, hmax);
           }
 
-        // minor grid lines
-        if (do_xminorgrid)
-          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
-                       xmticks, x_min, x_max,
-                       yPlane, yPlaneN, layer2Dtop ? zPlaneN : zPlane,
-                       zPlaneN, 0, (zstate != AXE_DEPTH_DIR));
-
-        // minor tick marks
-        if (do_xminortick)
-          {
-            if (tick_along_z)
-              render_tickmarks (xmticks, x_min, x_max, ypTick, ypTick,
-                                zpTick, zpTickN, 0., 0.,
-                                octave::math::signum (zpTick-zpTickN)*fz*xticklen/2,
-                                0, mirror);
-            else
-              render_tickmarks (xmticks, x_min, x_max, ypTick, ypTickN,
-                                zpTick, zpTick, 0.,
-                                octave::math::signum (ypTick-ypTickN)*fy*xticklen/2,
-                                0., 0, mirror);
-          }
-
         gh_manager::get_object (props.get_xlabel ()).set ("visible", "on");
       }
     else
       gh_manager::get_object (props.get_xlabel ()).set ("visible", "off");
   }
 
   void
   opengl_renderer::draw_axes_y_grid (const axes::properties& props)
@@ -1465,24 +1465,46 @@ namespace octave
         if (do_yminorgrid && ! do_ygrid)
           {
             gridstyle = minorgridstyle;
             gridcolor = minorgridcolor;
             gridalpha = minorgridalpha;
             do_ygrid = true;
           }
 
-        set_color (props.get_ycolor_rgb ());
+        // minor grid lines
+        if (do_yminorgrid)
+          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
+                       ymticks, y_min, y_max,
+                       xPlane, xPlaneN, layer2Dtop ? zPlaneN : zPlane,
+                       zPlaneN, 1, (zstate != AXE_DEPTH_DIR));
 
         // grid lines
         if (do_ygrid)
           render_grid (gridstyle, gridcolor, gridalpha, yticks, y_min, y_max,
                        xPlane, xPlaneN, layer2Dtop ? zPlaneN : zPlane,
                        zPlaneN, 1, (zstate != AXE_DEPTH_DIR));
 
+        set_color (props.get_ycolor_rgb ());
+
+        // minor tick marks
+        if (do_yminortick)
+          {
+            if (tick_along_z)
+              render_tickmarks (ymticks, y_min, y_max, xpTick, xpTick,
+                                zpTick, zpTickN, 0., 0.,
+                                octave::math::signum (zpTick-zpTickN)*fz*yticklen/2,
+                                1, mirror);
+            else
+              render_tickmarks (ymticks, y_min, y_max, xpTick, xpTickN,
+                                zpTick, zpTick,
+                                octave::math::signum (xpTick-xpTickN)*fx*yticklen/2,
+                                0., 0., 1, mirror);
+          }
+
         // tick marks
         if (tick_along_z)
           render_tickmarks (yticks, y_min, y_max, xpTick, xpTick,
                             zpTick, zpTickN, 0., 0.,
                             octave::math::signum (zpTick-zpTickN)*fz*yticklen,
                             1, mirror);
         else
           render_tickmarks (yticks, y_min, y_max, xpTick, xpTickN,
@@ -1502,38 +1524,16 @@ namespace octave
                                 zpTick+octave::math::signum (zpTick-zpTickN)*fz*ytickoffset,
                                 1, halign, valign, wmax, hmax);
             else
               render_ticktexts (yticks, yticklabels, y_min, y_max,
                                 xpTick+octave::math::signum (xpTick-xpTickN)*fx*ytickoffset,
                                 zpTick, 1, halign, valign, wmax, hmax);
           }
 
-        // minor grid lines
-        if (do_yminorgrid)
-          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
-                       ymticks, y_min, y_max,
-                       xPlane, xPlaneN, layer2Dtop ? zPlaneN : zPlane,
-                       zPlaneN, 1, (zstate != AXE_DEPTH_DIR));
-
-        // minor tick marks
-        if (do_yminortick)
-          {
-            if (tick_along_z)
-              render_tickmarks (ymticks, y_min, y_max, xpTick, xpTick,
-                                zpTick, zpTickN, 0., 0.,
-                                octave::math::signum (zpTick-zpTickN)*fz*yticklen/2,
-                                1, mirror);
-            else
-              render_tickmarks (ymticks, y_min, y_max, xpTick, xpTickN,
-                                zpTick, zpTick,
-                                octave::math::signum (xpTick-xpTickN)*fx*yticklen/2,
-                                0., 0., 1, mirror);
-          }
-
         gh_manager::get_object (props.get_ylabel ()).set ("visible", "on");
       }
     else
       gh_manager::get_object (props.get_ylabel ()).set ("visible", "off");
   }
 
   void
   opengl_renderer::draw_axes_z_grid (const axes::properties& props)
@@ -1578,86 +1578,28 @@ namespace octave
         if (do_zminorgrid && ! do_zgrid)
           {
             gridstyle = minorgridstyle;
             gridcolor = minorgridcolor;
             gridalpha = minorgridalpha;
             do_zgrid = true;
           }
 
-        set_color (props.get_zcolor_rgb ());
+        // minor grid lines
+        if (do_zminorgrid)
+          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
+                       zmticks, z_min, z_max,
+                       xPlane, xPlaneN, yPlane, yPlaneN, 2, true);
 
         // grid lines
         if (do_zgrid)
           render_grid (gridstyle, gridcolor, gridalpha, zticks, z_min, z_max,
                        xPlane, xPlaneN, yPlane, yPlaneN, 2, true);
 
-        // tick marks
-        if (xySym)
-          {
-            if (octave::math::isinf (fy))
-              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlane,
-                                yPlane, yPlane,
-                                octave::math::signum (xPlaneN-xPlane)*fx*zticklen,
-                                0., 0., 2, mirror);
-            else
-              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlaneN,
-                                yPlane, yPlane, 0.,
-                                octave::math::signum (yPlane-yPlaneN)*fy*zticklen,
-                                0., 2, false);
-          }
-        else
-          {
-            if (octave::math::isinf (fx))
-              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlane,
-                                yPlaneN, yPlane, 0.,
-                                octave::math::signum (yPlaneN-yPlane)*fy*zticklen,
-                                0., 2, mirror);
-            else
-              render_tickmarks (zticks, z_min, z_max, xPlane, xPlane,
-                                yPlaneN, yPlane,
-                                octave::math::signum (xPlane-xPlaneN)*fx*zticklen,
-                                0., 0., 2, false);
-          }
-
-        // FIXME: tick texts
-        if (zticklabels.numel () > 0)
-          {
-            int halign = 2;
-            int valign = (zstate == AXE_VERT_DIR ? 1 : (zSign ? 3 : 2));
-
-            if (xySym)
-              {
-                if (octave::math::isinf (fy))
-                  render_ticktexts (zticks, zticklabels, z_min, z_max,
-                                    xPlaneN+octave::math::signum (xPlaneN-xPlane)*fx*ztickoffset,
-                                    yPlane, 2, halign, valign, wmax, hmax);
-                else
-                  render_ticktexts (zticks, zticklabels, z_min, z_max, xPlaneN,
-                                    yPlane+octave::math::signum (yPlane-yPlaneN)*fy*ztickoffset,
-                                    2, halign, valign, wmax, hmax);
-              }
-            else
-              {
-                if (octave::math::isinf (fx))
-                  render_ticktexts (zticks, zticklabels, z_min, z_max, xPlane,
-                                    yPlaneN+octave::math::signum (yPlaneN-yPlane)*fy*ztickoffset,
-                                    2, halign, valign, wmax, hmax);
-                else
-                  render_ticktexts (zticks, zticklabels, z_min, z_max,
-                                    xPlane+octave::math::signum (xPlane-xPlaneN)*fx*ztickoffset,
-                                    yPlaneN, 2, halign, valign, wmax, hmax);
-              }
-          }
-
-        // minor grid lines
-        if (do_zminorgrid)
-          render_grid (minorgridstyle, minorgridcolor, minorgridalpha,
-                       zmticks, z_min, z_max,
-                       xPlane, xPlaneN, yPlane, yPlaneN, 2, true);
+        set_color (props.get_zcolor_rgb ());
 
         // minor tick marks
         if (do_zminortick)
           {
             if (xySym)
               {
                 if (octave::math::isinf (fy))
                   render_tickmarks (zmticks, z_min, z_max, xPlaneN, xPlane,
@@ -1680,16 +1622,74 @@ namespace octave
                 else
                   render_tickmarks (zmticks, z_min, z_max, xPlane, xPlane,
                                     yPlaneN, yPlaneN,
                                     octave::math::signum (xPlane-xPlaneN)*fx*zticklen/2,
                                     0., 0., 2, false);
               }
           }
 
+        // tick marks
+        if (xySym)
+          {
+            if (octave::math::isinf (fy))
+              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlane,
+                                yPlane, yPlane,
+                                octave::math::signum (xPlaneN-xPlane)*fx*zticklen,
+                                0., 0., 2, mirror);
+            else
+              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlaneN,
+                                yPlane, yPlane, 0.,
+                                octave::math::signum (yPlane-yPlaneN)*fy*zticklen,
+                                0., 2, false);
+          }
+        else
+          {
+            if (octave::math::isinf (fx))
+              render_tickmarks (zticks, z_min, z_max, xPlaneN, xPlane,
+                                yPlaneN, yPlane, 0.,
+                                octave::math::signum (yPlaneN-yPlane)*fy*zticklen,
+                                0., 2, mirror);
+            else
+              render_tickmarks (zticks, z_min, z_max, xPlane, xPlane,
+                                yPlaneN, yPlane,
+                                octave::math::signum (xPlane-xPlaneN)*fx*zticklen,
+                                0., 0., 2, false);
+          }
+
+        // tick texts
+        if (zticklabels.numel () > 0)
+          {
+            int halign = 2;
+            int valign = (zstate == AXE_VERT_DIR ? 1 : (zSign ? 3 : 2));
+
+            if (xySym)
+              {
+                if (octave::math::isinf (fy))
+                  render_ticktexts (zticks, zticklabels, z_min, z_max,
+                                    xPlaneN+octave::math::signum (xPlaneN-xPlane)*fx*ztickoffset,
+                                    yPlane, 2, halign, valign, wmax, hmax);
+                else
+                  render_ticktexts (zticks, zticklabels, z_min, z_max, xPlaneN,
+                                    yPlane+octave::math::signum (yPlane-yPlaneN)*fy*ztickoffset,
+                                    2, halign, valign, wmax, hmax);
+              }
+            else
+              {
+                if (octave::math::isinf (fx))
+                  render_ticktexts (zticks, zticklabels, z_min, z_max, xPlane,
+                                    yPlaneN+octave::math::signum (yPlaneN-yPlane)*fy*ztickoffset,
+                                    2, halign, valign, wmax, hmax);
+                else
+                  render_ticktexts (zticks, zticklabels, z_min, z_max,
+                                    xPlane+octave::math::signum (xPlane-xPlaneN)*fx*ztickoffset,
+                                    yPlaneN, 2, halign, valign, wmax, hmax);
+              }
+          }
+
         gh_manager::get_object (props.get_zlabel ()).set ("visible", "on");
       }
     else
       gh_manager::get_object (props.get_zlabel ()).set ("visible", "off");
   }
 
   void
   opengl_renderer::draw_all_lights (const base_properties& props, std::list<graphics_object>& obj_list)
