# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1524791981 14400
#      Thu Apr 26 21:19:41 2018 -0400
# Branch stable
# Node ID 4a46c83bcb7154d842399bb68c4a6b1ff53369dc
# Parent  60fd2d84c9a04be67c917bcb9b5a094ebe59e152
don't hold reference to expression result after evaluation is done

* pt-eval.h (tree_evaluator::evaluate, tree_evaluator::evaluate_n):
Clear m_expr_result_value and m_expr_result_value_list after setting
retval.

diff --git a/libinterp/parse-tree/pt-eval.h b/libinterp/parse-tree/pt-eval.h
--- a/libinterp/parse-tree/pt-eval.h
+++ b/libinterp/parse-tree/pt-eval.h
@@ -304,21 +304,23 @@ namespace octave
       switch (m_result_type)
         {
         case RT_UNDEFINED:
           panic_impossible ();
           break;
 
         case RT_VALUE:
           retval = m_expr_result_value;
+          m_expr_result_value = octave_value ();
           break;
 
         case RT_VALUE_LIST:
           retval = (m_expr_result_value_list.empty ()
                     ? octave_value () : m_expr_result_value_list(0));
+          m_expr_result_value_list = octave_value_list ();
           break;
         }
 
       return retval;
     }
 
     octave_value_list evaluate_n (tree_expression *expr, int nargout = 1)
     {
@@ -333,20 +335,22 @@ namespace octave
       switch (m_result_type)
         {
         case RT_UNDEFINED:
           panic_impossible ();
           break;
 
         case RT_VALUE:
           retval = ovl (m_expr_result_value);
+          m_expr_result_value = octave_value ();
           break;
 
         case RT_VALUE_LIST:
           retval = m_expr_result_value_list;
+          m_expr_result_value_list = octave_value_list ();
           break;
         }
 
       return retval;
     }
 
     octave_value evaluate (tree_decl_elt *);
 
