# HG changeset patch
# User Rik <rik@octave.org>
# Date 1373411296 25200
#      Tue Jul 09 16:08:16 2013 -0700
# Node ID 06897f865f0b56fa7a14242e36e0d821dd9b399c
# Parent  78c022f1d6f7aebde138f5658a9abb0497e3874d
Add flintmax() as an alias for function bitmax().

* NEWS: Announce new function.

* libinterp/corefcn/bitfcns.cc(Fbitmax): Adjust docstring to mention
flintmax calling form.  Use DEFALIAS macro to set flintmax equal
to existing bitmax function.

* doc/interpreter/numbers.txi: Put anchor in documentation for new alias.

* scripts/help/__unimplemented__.m: Remove from unimplemented list.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -182,31 +182,31 @@ Summary of important user-visible change
     are now available (provided that Octave is compiled with support for
     Java enabled):
 
       helpdlg    listdlg   questdlg
       inputdlg   msgbox    warndlg
 
  ** Other new functions added in 3.8.0:
 
-      atan2d                      erfcinv         readline_re_read_init_file
-      base64_decode               erfi            readline_read_init_file   
-      base64_encode               expint          rgbplot                   
-      betaincinv                  findfigs        save_default_options      
-      built_in_docstrings_file    fminsearch      shrinkfaces               
-      cmpermute                   gallery         splinefit                 
-      cmunique                    gco             stemleaf                  
-      colorcube                   hdl2struct      strjoin                   
-      copyobj                     history_save    struct2hdl                
-      dawson                      imformats       tetramesh                 
-      dblist                      importdata      waterfall                 
-      debug_jit                   iscolormap      
-      doc_cache_create            jit_enable      
-      ellipj                      lines           
-      ellipke                     polyeig                   
+      atan2d                      erfcinv         polyeig                   
+      base64_decode               erfi            readline_re_read_init_file
+      base64_encode               expint          readline_read_init_file   
+      betaincinv                  findfigs        rgbplot                   
+      built_in_docstrings_file    flintmax        save_default_options      
+      cmpermute                   fminsearch      shrinkfaces               
+      cmunique                    gallery         splinefit                 
+      colorcube                   gco             stemleaf                  
+      copyobj                     hdl2struct      strjoin                   
+      dawson                      history_save    struct2hdl                
+      dblist                      imformats       tetramesh                 
+      debug_jit                   importdata      waterfall                 
+      doc_cache_create            iscolormap      
+      ellipj                      jit_enable      
+      ellipke                     lines       
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.4 and have been
     removed from Octave 3.8.
                                            
       autocor    dispatch              is_global    setstr
       autocov    fstat                 krylovb      strerror
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -609,19 +609,20 @@ functions of Octave are treated as integ
 example for @code{bitset} above passes the floating point value
 @code{10}, it is treated as the bits @code{[1, 0, 1, 0]} rather than the
 bits of the native floating point format representation of @code{10}.
 
 As the maximum value that can be represented by a number is important
 for bit manipulation, particularly when forming masks, Octave supplies
 the function @code{bitmax}.
 
+@anchor{docXflintmax}
 @DOCSTRING(bitmax)
 
-This is the double precision version of the functions @code{intmax},
+This is the double precision version of the function @code{intmax},
 previously discussed.
 
 Octave also includes the basic bitwise 'and', 'or' and 'exclusive or'
 operators.
 
 @DOCSTRING(bitand)
 
 @DOCSTRING(bitor)
diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -562,19 +562,25 @@ bitshift (10, [-2, -1, 0, 1, 2])\n\
   return retval;
 }
 
 DEFUN (bitmax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} bitmax ()\n\
 @deftypefnx {Built-in Function} {} bitmax (\"double\")\n\
 @deftypefnx {Built-in Function} {} bitmax (\"single\")\n\
+@deftypefnx {Built-in Function} {} flintmax (@dots{})\n\
 Return the largest integer that can be represented within a floating point\n\
 value.  The default class is \"double\", but \"single\" is a valid option.\n\
-On IEEE-754 compatible systems, @code{bitmax} is @w{@math{2^{53} - 1}}.\n\
+On IEEE-754 compatible systems, @code{bitmax} is @w{@math{2^{53} - 1}} for\n\
+\"double\" and @w{@math{2^{24} -1}} for \"single\".\n\
+\n\
+@code{flintmax} for FLoating point INTeger MAXimum is an alias for\n\
+@code{bitmax}.\n\
+@seealso{intmax, realmax, realmin}\n\
 @end deftypefn")
 {
   octave_value retval;
   std::string cname = "double";
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_string ())
     cname = args(0).string_value ();
@@ -589,16 +595,18 @@ On IEEE-754 compatible systems, @code{bi
   else if (cname == "single")
     retval = (static_cast<double> (0xFFFFFFL));
   else
     error ("bitmax: not defined for class '%s'", cname.c_str ());
 
   return retval;
 }
 
+DEFALIAS(flintmax, bitmax)
+
 DEFUN (intmax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} intmax (@var{type})\n\
 Return the largest integer that can be represented in an integer type.\n\
 The variable @var{type} can be\n\
 \n\
 @table @code\n\
 @item int8\n\
diff --git a/scripts/help/__unimplemented__.m b/scripts/help/__unimplemented__.m
--- a/scripts/help/__unimplemented__.m
+++ b/scripts/help/__unimplemented__.m
@@ -208,17 +208,16 @@ function list = missing_functions ()
   "export2wsdlg",
   "figurepalette",
   "filebrowser",
   "fill3",
   "fitsdisp",
   "fitsinfo",
   "fitsread",
   "fitswrite",
-  "flintmax",
   "flow",
   "frame2im",
   "freqspace",
   "funm",
   "gammaincinv",
   "getframe",
   "getpixelposition",
   "gobjects",
