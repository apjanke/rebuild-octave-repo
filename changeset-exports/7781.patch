# HG changeset patch
# User bill@denney.ws
# Date 1211141062 14400
#      Sun May 18 16:04:22 2008 -0400
# Node ID 02a7fe6907d2a3dc2b390819001f928582d4b9a4
# Parent  08125419efcb261a177f3f34940fd8c914f054db
file-io.cc: added documentation

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,11 +1,15 @@
+2008-05-20  Bill Denney  <bill@denney.ws>
+
+	* file-io.cc (Ffgets, Fgets, Ffputs, Ffscanf): Doc fix (seealso).
+
 2008-05-20  Thomas Weber  <thomas.weber.mail@gmail.com>
 
-	* DLD-FUNCTIONS/rand.cc: Doc fix.
+	* DLD-FUNCTIONS/rand.cc (Frandn): Doc fix.
 
 2008-05-20  David Bateman  <dbateman@free.fr>
 
 	* load-save.cc (do_load): Treat non verbose list_only output in
 	the same manner as Fwho.
 	* symtab.h (static void clear_variable_regexp (const
 	std::string&): New method.
 	(static std::list<symbol_record> regexp (const std::string&)): Ditto.
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -354,17 +354,17 @@ DEFUN (fgets, args, ,
 Read characters from a file, stopping after a newline, or EOF,\n\
 or @var{len} characters have been read.  The characters read, including\n\
 the possible trailing newline, are returned as a string.\n\
 \n\
 If @var{len} is omitted, @code{fgets} reads until the next newline\n\
 character.\n\
 \n\
 If there are no more characters to read, @code{fgets} returns @minus{}1.\n\
-@seealso{fread, fscanf}\n\
+@seealso{fputs, fopen, fread, fscanf}\n\
 @end deftypefn")
 {
   static std::string who = "fgets";
 
   octave_value_list retval;
 
   retval(1) = 0.0;
   retval(0) = -1.0;
@@ -612,17 +612,17 @@ VAX G floating format.\n\
 \n\
 @samp{cray}\n\
 Cray floating format.\n\
 @end table\n\
 \n\
 @noindent\n\
 however, conversions are currently only supported for @samp{native}\n\
 @samp{ieee-be}, and @samp{ieee-le} formats.\n\
-@seealso{fclose, fread, fseek}\n\
+@seealso{fclose, fgets, fputs, fread, fseek, ferror, fprintf, fscanf, ftell, fwrite}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(0) = -1.0;
 
   int nargin = args.length ();
 
@@ -920,16 +920,17 @@ complete description of the syntax of th
 }
 
 DEFUN (fputs, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} fputs (@var{fid}, @var{string})\n\
 Write a string to a file with no formatting.\n\
 \n\
 Return a non-negative number on success and EOF on error.\n\
+@seealso{scanf, sscanf, fread, fprintf, fgets, fscanf}\n\
 @end deftypefn")
 {
   static std::string who = "fputs";
 
   octave_value retval = -1;
 
   int nargin = args.length ();
 
@@ -1067,17 +1068,17 @@ with each conversion specifier in @var{t
 single scalar return value.  This form is more `C-like', and also\n\
 compatible with previous versions of Octave.  The number of successful\n\
 conversions is returned in @var{count}\n\
 @ifclear OCTAVE_MANUAL\n\
 \n\
 See the Formatted Input section of the GNU Octave manual for a\n\
 complete description of the syntax of the template string.\n\
 @end ifclear\n\
-@seealso{scanf, sscanf, fread, fprintf}\n\
+@seealso{scanf, sscanf, fread, fprintf, fgets, fputs}\n\
 @end deftypefn")
 {
   static std::string who = "fscanf";
 
   octave_value_list retval;
 
   int nargin = args.length ();
 
