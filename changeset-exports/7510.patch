# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1203584337 18000
#      Thu Feb 21 03:58:57 2008 -0500
# Node ID f3e6ada67d9e329a691a3c57ed5e493d0fc685fc
# Parent  e41d6aff83ea636e51a41e059e6af969e5a1e5e6
improve handling line style for errorbar plots

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2008-02-21  John W. Eaton  <jwe@octave.org>
+
+	* plot/errorbar.m: If nargout > 0, return vector of handles to
+	line objects.
+	* plot/__go_draw_axes__.m: Improve handling of line style for
+	errorbar plots.
+
 2008-02-20  Marco Caliari <marco.caliari@univr.it>
 
 	* specfun/legendre.m: Accept normalization options ("sch", "norm"),
 	and improve stability for higher orders.
 
 2008-02-20  John W. Eaton  <jwe@octave.org>
 
 	* strings/strcat.m: Detect cellstr args.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -392,26 +392,18 @@ function __go_draw_axes__ (h, plot_strea
 	  parametric(data_idx) = true;
 	  have_cdata(data_idx) = false;
 	  if (isempty (obj.keylabel))
 	    titlespec{data_idx} = "title \"\"";
 	  else
 	    tmp = undo_string_escapes (__maybe_munge_text__ (enhanced, obj, "keylabel", have_newer_gnuplot));
 	    titlespec{data_idx} = strcat ("title \"", tmp, "\"");
 	  endif
-	  [style, typ, with] = do_linestyle_command (obj, data_idx,
-						     mono, plot_stream);
 	  usingclause{data_idx} = "";
-	  if (have_newer_gnuplot || isnan (typ))
-	    withclause{data_idx} = sprintf ("with %s linestyle %d",
-					    style, data_idx);
-	  else
-	    withclause{data_idx} = sprintf ("with %s linetype %d",
-					    style, typ);
-	  endif
+	  errbars = "";
 	  if (nd == 3)
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    if (! isempty (obj.zdata))
 	      zdat = obj.zdata(:);
 	    else
 	      zdat = zeros (size (xdat));
 	    endif
@@ -459,42 +451,54 @@ function __go_draw_axes__ (h, plot_strea
 		endif
 		if (isempty (xudat))
 		  xhi = xdat;
 		else
 		  xhi = xdat+xudat;
 		endif
 		data{data_idx} = [xdat, ydat, xlo, xhi, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4):($5):($6)";
-		withclause{data_idx} = "with xyerrorbars";
+		errbars = "xyerrorbars";
 	      else
 		data{data_idx} = [xdat, ydat, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4)";
-		withclause{data_idx} = "with yerrorbars";
+		errbars = "yerrorbars";
 	      endif
 	    elseif (xerr)
 	      if (isempty (xldat))
 		xlo = xdat;
 	      else
 		xlo = xdat-xldat;
 	      endif
 	      if (isempty (xudat))
 		xhi = xdat;
 	      else
 		xhi = xdat+xudat;
 	      endif
 	      data{data_idx} = [xdat, ydat, xlo, xhi]';
 	      usingclause{data_idx} = "using ($1):($2):($3):($4)";
-	      withclause{data_idx} = "with xerrorbars";
+	      errbars = "xerrorbars";
 	    else
 	      data{data_idx} = [xdat, ydat]';
 	      usingclause{data_idx} = sprintf ("using ($1):($2) axes %s%s",
 					      xaxisloc_using, yaxisloc_using);
 	    endif
 	  endif
+
+	  [style, typ, with] = do_linestyle_command (obj, data_idx, mono,
+						     plot_stream, errbars);
+
+	  if (have_newer_gnuplot || isnan (typ))
+	    withclause{data_idx} = sprintf ("with %s linestyle %d",
+					    style, data_idx);
+	  else
+	    withclause{data_idx} = sprintf ("with %s linetype %d",
+					    style, typ);
+	  endif
+
 	  if (! (have_newer_gnuplot || isempty (with)))
 	    if (isempty (withclause{data_idx}))
 	      withclause{data_idx} = sprintf ("with %s", with);
 	    else
 	      withclause{data_idx} = sprintf ("%s %s", withclause{data_idx},
 					      with);
 	    endif
 	  endif
@@ -1263,17 +1267,18 @@ function __go_draw_axes__ (h, plot_strea
     fflush (plot_stream);
 
   else
     print_usage ();
   endif
 
 endfunction
 
-function [style, typ, with] = do_linestyle_command (obj, idx, mono, plot_stream)
+function [style, typ, with] = do_linestyle_command (obj, idx, mono,
+						    plot_stream, errbars)
 
   persistent have_newer_gnuplot ...
     = compare_versions (__gnuplot_version__ (), "4.0", ">");
 
   if (have_newer_gnuplot)
     fprintf (plot_stream, "set style line %d default;\n", idx);
   endif
   fprintf (plot_stream, "set style line %d", idx);
@@ -1398,33 +1403,38 @@ function [style, typ, with] = do_linesty
 	with = sprintf ("%s pt %s", with, pt);
       endif
       found_style = true;
     endif
   else
     pt = "";
   endif
 
-  style = "lines";
-  if (isempty (lt))
-    if (! isempty (pt))
-      style = "points";
+  if (isempty (errbars))
+    style = "lines";
+    if (isempty (lt))
+      if (! isempty (pt))
+	style = "points";
+      endif
+    elseif (! isempty (pt))
+      style = "linespoints";
     endif
-  elseif (! isempty (pt))
-    style = "linespoints";
-  endif
 
-  if (isfield (obj, "markersize"))
-    if (have_newer_gnuplot)
-      fprintf (plot_stream, " pointsize %f", obj.markersize);
-    else
-      if (! strcmpi (style, "lines"))
-	with = sprintf ("%s ps %f", with, obj.markersize);
+    if (isfield (obj, "markersize"))
+      if (have_newer_gnuplot)
+	fprintf (plot_stream, " pointsize %f", obj.markersize);
+      else
+	if (! strcmpi (style, "lines"))
+	  with = sprintf ("%s ps %f", with, obj.markersize);
+	endif
       endif
+      found_style = true;
     endif
+  else
+    style = errbars;
     found_style = true;
   endif
 
   if (have_newer_gnuplot && ! found_style)
     fputs (plot_stream, " default");
   endif
 
   fputs (plot_stream, ";\n");
diff --git a/scripts/plot/errorbar.m b/scripts/plot/errorbar.m
--- a/scripts/plot/errorbar.m
+++ b/scripts/plot/errorbar.m
@@ -103,22 +103,27 @@
 ## and @var{y} errorbars from @var{y}-@var{ly} to @var{y}+@var{uy}.
 ## @seealso{semilogxerr, semilogyerr, loglogerr}
 ## @end deftypefn
 
 ## Created: 18.7.2000
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
-function errorbar (varargin)
+function retval = errorbar (varargin)
 
   [h, varargin] = __plt_get_axis_arg__ ("errorbar", varargin{:});
 
   oldh = gca ();
   unwind_protect
     axes (h);
     newplot ();
-    __errcomm__ ("errorbar", h, varargin{:});
+
+    tmp = __errcomm__ ("errorbar", h, varargin{:});
+
+    if (nargout > 0)
+      retval = tmp;
+    endif
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
 endfunction
