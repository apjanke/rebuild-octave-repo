# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1516219967 -3600
#      Wed Jan 17 21:12:47 2018 +0100
# Node ID 66729bff987773e124f3cf0626cad2523334cdaf
# Parent  3daa67b7a243d93334c324bafd5787cb4956d1ff
utils.cc (octave_sleep): Use wrapper for gnulib function (bug #52876).

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1369,42 +1369,42 @@ octave_sleep (double seconds)
   double tenths = 0;
   fraction = std::modf (fraction * 10, &tenths) / 10;
   fraction = std::round (fraction * 1000000000);
 
   // Sleep for the hundredths portion.
 
   struct timespec hundredths_delay = { 0, static_cast<long> (fraction) };
 
-  nanosleep (&hundredths_delay, nullptr);
+  octave_nanosleep_wrapper (&hundredths_delay, nullptr);
 
   // Sleep for the whole tenths portion, allowing interrupts every
   // tenth.
 
   struct timespec one_tenth = { 0, 100000000 };
 
   for (int i = 0; i < static_cast<int> (tenths); i++)
     {
-      nanosleep (&one_tenth, nullptr);
+      octave_nanosleep_wrapper (&one_tenth, nullptr);
 
       octave_quit ();
     }
 
   // Sleep for the whole seconds portion, allowing interrupts every
   // tenth.
 
   time_t sec = ((seconds > std::numeric_limits<time_t>::max ())
                 ? std::numeric_limits<time_t>::max ()
                 : static_cast<time_t> (seconds));
 
   for (time_t s = 0; s < sec; s++)
     {
       for (int i = 0; i < 10; i++)
         {
-          nanosleep (&one_tenth, nullptr);
+          octave_nanosleep_wrapper (&one_tenth, nullptr);
 
           octave_quit ();
         }
     }
 }
 
 DEFUN (isindex, args, ,
        doc: /* -*- texinfo -*-
