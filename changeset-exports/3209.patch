# HG changeset patch
# User jwe
# Date 910126138 0
#      Tue Nov 03 20:48:58 1998 +0000
# Node ID fbb332b96e4f5db3bd705e3349c40a50a2a71f07
# Parent  e8a7163701be7d7aa7b9357559822753663d7dde
[project @ 1998-11-03 20:48:54 by jwe]

diff --git a/install-octave.in b/install-octave.in
--- a/install-octave.in
+++ b/install-octave.in
@@ -229,17 +229,17 @@ echo "installing octave-bug as $bindir/o
 cp octave-bug $bindir/octave-bug
 chmod 755 $bindir/octave-bug
 
 if test -f LIBRARIES; then
   echo "installing shared libraries in $octlibdir"
   for f in `cat LIBRARIES`
   do
     file=`basename $f`
-    cp $f $octlibdir/$file.$SHLEXT_VER
+    cp $f.$SHLEXT_VER $octlibdir/$file.$SHLEXT_VER
     chmod 644 $octlibdir/$file.$SHLEXT_VER
     ( cd $octlibdir
       ln -s $file.$SHLEXT_VER $file.$SHLEXT )
   done
 fi
 
 oct_files=`find . -name '*.oct' -print`
 if test -n "$oct_files"; then
diff --git a/libcruft/Makefile.in b/libcruft/Makefile.in
--- a/libcruft/Makefile.in
+++ b/libcruft/Makefile.in
@@ -27,18 +27,18 @@ INSTALL_DATA = @INSTALL_DATA@
 CRUFT_DIRS = blas dassl fftpack lapack linpack minpack misc odepack \
 	ordered-qz quadpack ranlib slatec-err slatec-fn specfun villad
 
 SUBDIRS = $(CRUFT_DIRS)
 
 DISTFILES = Makefile.in ChangeLog Makerules.in $(SOURCES) STOP.patch
 
 ifeq ($(SHARED_LIBS), true)
+  BINDISTLIBS = libcruft/libcruft
   BINDISTFILES = libcruft.$(SHLEXT_VER)
-  BINDISTLIBS = libcruft/libcruft.$(SHLEXT_VER)
 endif
 
 all: $(SUBDIRS) shared-lib
 .PHONY: all
 
 $(SUBDIRS):
 	echo making all in $@
 	cd $@; $(MAKE) all
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -91,17 +91,17 @@ SOURCES := Bounds.cc CollocWt.cc DAE.cc 
 EXTRAS := mx-inlines.cc
 
 INCLUDES_FOR_INSTALL := $(INCLUDES) $(TEMPLATE_SRC) $(EXTRAS)
 
 DISTFILES := Makefile.in ChangeLog $(SOURCES) $(INCLUDES) $(EXTRAS)
 
 ifeq ($(SHARED_LIBS), true)
   BINDISTLIBS = liboctave/liboctave
-  BINDISTFILES = $(addsuffix $(BINDISTLIBS), $(SHLEXT_VER))
+  BINDISTFILES = liboctave.$(SHLEXT_VER)
 endif
 
 MAKEDEPS_1 := $(patsubst %.cc, %.d, $(SOURCES))
 MAKEDEPS := $(patsubst %.c, %.d, $(MAKEDEPS_1))
 
 OBJECTS_1 := $(patsubst %.cc, %.o, $(SOURCES))
 OBJECTS := $(patsubst %.c, %.o, $(OBJECTS_1))
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+Tue Nov  3 09:40:24 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* data.cc (Fis_bool): New function.
+	Also add alias for islogical.
+
+	* ov.h (octave_value::is_bool_type): New function.
+	* ov-base.h (octave_base_value::is_bool_type): Likewise.
+	* ov-bool.h (octave_bool::is_bool_type): Likewise.
+	* ov-bool-mat.h (octave_bool_matrix::is_bool_type): Likewise.
+
 Mon Nov  2 13:36:04 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l (handle_close_brace): Also handle case of ']' followed by
 	other assignment ops (+=, -=, ...).
 
 	* pt-assign.cc (tree_simple_assignment::rvalue): Correctly handle
 	return value and printing for operators other than `='.
 	(tree_multi_assignment::rvalue): Likewise.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -177,17 +177,17 @@ LIBS = @LIBS@
 
 DISTFILES = Makefile.in ChangeLog mkdefs mkops mkbuiltins mk-oct-links \
 	defaults.h.in oct-conf.h.in octave.gperf oct-gperf.h \
 	octave.cc parse.cc lex.cc y.tab.h \
 	$(INCLUDES) $(DIST_SRC)
 
 ifeq ($(SHARED_LIBS), true)
   BINDISTLIBS = src/liboctinterp
-  BINDISTFILES = $(addsuffix $(BINDISTLIBS), $(SHLEXT_VER))
+  BINDISTFILES = octave $(OCT_FILES) liboctinterp.$(SHLEXT_VER)
 else
   BINDISTFILES = octave $(OCT_FILES)
 endif
 
 all: stamp-prereq libraries stamp-oct-links octave
 .PHONY: all
 
 stamp-oct-links: $(OCT_FILES)
@@ -389,17 +389,17 @@ bin-dist:
 	if [ -n "$(BINDISTFILES)" ]; then \
 	  ln $(BINDISTFILES) ../`cat ../.fname`/src; \
 	fi
 	if [ -n "$(OCT_FILES)" ]; then \
 	  $(srcdir)/mk-oct-links -p $(octfiledir) \
 	    $(addprefix $(srcdir)/, $(DLD_SRC)) \
 	    > ../`cat ../.fname`/src/links-to-make; \
 	fi
-	if [ -n "$(BINDISTLIBNS)" ]; then \
+	if [ -n "$(BINDISTLIBS)" ]; then \
 	  echo $(BINDISTLIBS) >> ../`cat ../.fname`/LIBRARIES; \
 	fi
 .PHONY: bin-dist
 
 # Special rules -- these files need special things to be defined.
 
 parse.cc : parse.y
 	@echo "expect 10 shift/reduce conflicts"
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -748,16 +748,31 @@ but it uses less memory and avoids calli
 	}
     }
   else
     print_usage ("sumsq");
 
   return retval;
 }
 
+DEFUN (is_bool, args, ,
+  "is_bool (x): return nonzero if x is a boolean object")
+{
+  octave_value retval;
+
+  if (args.length () == 1)
+    retval = args(0).is_bool_type () ? 1.0 : 0.0;
+  else
+    print_usage ("is_bool");
+
+  return retval;
+}
+
+DEFALIAS (islogical, is_bool);
+
 DEFUN (is_complex, args, ,
   "is_complex (x): return nonzero if x is a complex numeric object")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).is_complex_type () ? 1.0 : 0.0;
   else
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -114,16 +114,18 @@ public:
   bool is_magic_colon (void) const { return false; }
 
   bool is_all_va_args (void) const { return false; }
 
   octave_value all (void) const { return 0.0; }
 
   octave_value any (void) const { return 0.0; }
 
+  bool is_bool_type (void) const { return false; }
+
   bool is_real_type (void) const { return false; }
 
   bool is_complex_type (void) const { return false; }
 
   // Would be nice to get rid of the next four functions:
 
   bool is_scalar_type (void) const { return false; }
 
diff --git a/src/ov-bool-mat.h b/src/ov-bool-mat.h
--- a/src/ov-bool-mat.h
+++ b/src/ov-bool-mat.h
@@ -96,16 +96,18 @@ public:
 
   bool is_constant (void) const { return true; }
 
   bool is_bool_matrix (void) const { return true; }
 
   octave_value all (void) const { return matrix.all (); }
   octave_value any (void) const { return matrix.any (); }
 
+  bool is_bool_type (void) const { return true; }
+
   bool is_real_type (void) const { return true; }
 
   bool is_matrix_type (void) const { return true; }
 
   bool is_numeric_type (void) const { return true; }
 
   bool valid_as_scalar_index (void) const;
 
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -87,18 +87,22 @@ public:
 
   bool is_constant (void) const { return true; }
 
   bool is_real_scalar (void) const { return true; }
 
   octave_value all (void) const { return scalar; }
   octave_value any (void) const { return scalar; }
 
+  bool is_bool_type (void) const { return true; }
+
   bool is_real_type (void) const { return true; }
+
   bool is_scalar_type (void) const { return true; }
+
   bool is_numeric_type (void) const { return true; }
 
   bool valid_as_scalar_index (void) const { return scalar; }
 
   bool valid_as_zero_index (void) const { return ! scalar; }
 
   bool is_true (void) const { return scalar; }
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -331,16 +331,19 @@ public:
   virtual octave_value all (void) const
     { return rep->all (); }
 
   virtual octave_value any (void) const
     { return rep->any (); }
 
   // Other type stuff.
 
+  virtual bool is_bool_type (void) const
+    { return rep->is_bool_type (); }
+
   virtual bool is_real_type (void) const
     { return rep->is_real_type (); }
 
   virtual bool is_complex_type (void) const
     { return rep->is_complex_type (); }
 
   virtual bool is_scalar_type (void) const
     { return rep->is_scalar_type (); }
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
-#define OCTAVE_VERSION "2.1.8"
+#define OCTAVE_VERSION "2.1.9"
 
 #define OCTAVE_COPYRIGHT \
   "Copyright (C) 1996, 1997, 1998 John W. Eaton."
 
 #define OCTAVE_NAME_AND_VERSION \
   "Octave, version " OCTAVE_VERSION " (" TARGET_HOST_TYPE ")"
 
 #define OCTAVE_NAME_VERSION_AND_COPYRIGHT \
