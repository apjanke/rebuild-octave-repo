# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1204465471 -3600
#      Sun Mar 02 14:44:31 2008 +0100
# Node ID 263cdf57a1dd887f3384bc6699d3819596b001d5
# Parent  4dc3e0ff730a945f5656b09ae789d826f33c6f04
Use all properties in factory default values (including the ones starting with __)

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -22,16 +22,18 @@ 2008-06-04  Shai Ayal  <shaiay@users.sou
 
 	* graphics.h.in (axes::properties::update_xlim): call the new
 	axes::properties::calc_ticks_and_lims method
 	(axes::properties::update_ylim): ditto
 	(axes::properties::update_zlim): ditto
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
+	* genprops.awk (emit_source): Use all properties in factory defaults.
+
 	* graphics.h.in (base_property::base_property): Set internal counter
 	to 1 by default.
 	(property::property): Adapt constructors to default counter value in
 	base_property.
 
 	* graphics.h.in (base_properties::get_property): Make virtual and
 	remove const modifier.
 	* graphics.cc (base_properties::get_property): Can return built-in
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -461,19 +461,18 @@ function emit_source ()
 
     for (i = 1; i <= idx; i++)
     {
       dval = defval[i];
       if (type[i] == "radio_property" || type[i] == "color_property")
         dval = gensub (/^.*\{(.*)\}.*$/, "\"\\1\"", "g", dval);
       if (! dval)
         dval = "octave_value ()";
-      if (name[i] !~ /__.*/)
-        printf ("  m[\"%s\"] = %s%s;\n", name[i], dval,
-                (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
+      printf ("  m[\"%s\"] = %s%s;\n", name[i], dval,
+		 (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
     }
 
     printf ("\n  return m;\n}\n\n") >> filename;
 
     ## go_name static field
 
     printf ("std::string %s::properties::go_name (\"%s\");\n\n",
             class_name, class_name) >> filename;
