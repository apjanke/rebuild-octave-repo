# HG changeset patch
# User jwe
# Date 811064469 0
#      Thu Sep 14 07:41:09 1995 +0000
# Node ID affbd42dd0c17cdccb6b035c07ce6e027e69dee0
# Parent  32ede420188c75631f16a389064933b22b728014
[project @ 1995-09-14 07:41:09 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -44,17 +44,19 @@ Free Software Foundation, Inc.
 #include <cstdlib>
 #include <cstring>
 
 #include <strstream.h>
 
 #include "defun.h"
 #include "dirfns.h"
 #include "error.h"
+#include "help.h"
 #include "oct-obj.h"
+#include "oct-str.h"
 #include "octave.h"
 #include "pager.h"
 #include "pathlen.h"
 #include "procstream.h"
 #include "statdefs.h"
 #include "sysdep.h"
 #include "sysdir.h"
 #include "tree-const.h"
@@ -473,14 +475,79 @@ DEFUN ("pwd", Fpwd, Spwd, 1, 0,
     {
       char *s = strconcat (directory, "\n");
       retval = s;
       delete [] s;
     }
   return retval;
 }
 
+
+
+DEFUN ("readdir", Freaddir, Sreaddir, 1, 0,
+  "readdir (NAME)\n\
+\n\
+Return an array of strings containing the list of all files in the
+named directory, or one of the following error codes:\n\
+\n\
+  -1 : error opening the directory\n\
+  -2 : error reading the directory\n\
+  -3 : error closing the directory")
+{
+  Octave_object retval;
+  Octave_str_obj dirlist;
+  int status = 0;
+
+  if (args.length () == 1 && args(0).is_string ())
+    {
+      const char *dirname = args(0).string_value ();
+
+      DIR *dir = opendir (dirname);
+
+      if (dir)
+	{
+	  int count = 0;
+	  while (readdir (dir))
+	    count++;
+
+	  rewinddir (dir);
+
+	  dirlist.resize (count);
+
+	  struct dirent *dir_entry;
+	  while ((dir_entry = readdir (dir)))
+	    {
+	      if (--count < 0)
+		break;
+
+	      dirlist (count) = dir_entry->d_name;
+	    }
+
+#if defined (CLOSEDIR_VOID)
+	  closedir (dir);
+#else
+	  if (closedir (dir) < 0)
+	    status = -3;
+#endif
+
+	  if (count != 0)
+	    status = -2;
+	}
+      else
+	status = -1;
+    }
+  else
+    print_usage ("readdir");
+
+  if (status < 0)
+    retval (0) = (double) status;
+  else
+    retval(0) = dirlist;
+
+  return retval;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
