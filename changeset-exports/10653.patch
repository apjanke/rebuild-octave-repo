# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1274770438 -7200
#      Tue May 25 08:53:58 2010 +0200
# Node ID ec5fa46e0e455c3bdcaaf2b4295e70adf048477d
# Parent  2f0fbfa4dd23a63c1c26f4aac14295df29bef369
override ndims and numel for scalars and matrices

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base-mat.h (octave_base_matrix::ndims): New override.
+	* ov-base-scalar.h (octave_base_scalar::numel,
+	octave_base_scalar::ndims): New overrides.
+
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-base.cc (octave_base_value::ndims): Remove fallback
 	implementation (makes no sense).
 	* ov-base.h (octave_base_value::ndims): Use a simplistic fallback
 	here.
 
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/src/ov-base-mat.h b/src/ov-base-mat.h
--- a/src/ov-base-mat.h
+++ b/src/ov-base-mat.h
@@ -97,16 +97,18 @@ public:
   void assign (const octave_value_list& idx, typename MT::element_type rhs);
 
   void delete_elements (const octave_value_list& idx);
 
   dim_vector dims (void) const { return matrix.dims (); }
 
   octave_idx_type numel (void) const { return matrix.numel (); }
 
+  int ndims (void) const { return matrix.ndims (); }
+
   octave_idx_type nnz (void) const { return matrix.nnz (); }
 
   octave_value reshape (const dim_vector& new_dims) const
     { return MT (matrix.reshape (new_dims)); }
 
   octave_value permute (const Array<int>& vec, bool inv = false) const
     { return MT (matrix.permute (vec, inv)); }
 
diff --git a/src/ov-base-scalar.h b/src/ov-base-scalar.h
--- a/src/ov-base-scalar.h
+++ b/src/ov-base-scalar.h
@@ -73,16 +73,20 @@ public:
                          const octave_value& rhs);
 
   bool is_constant (void) const { return true; }
 
   bool is_defined (void) const { return true; }
 
   dim_vector dims (void) const { static dim_vector dv (1, 1); return dv; }
 
+  octave_idx_type numel (void) const { return 1; }
+
+  int ndims (void) const { return 2; }
+
   octave_idx_type nnz (void) const { return (scalar != ST ()) ? 1 : 0; }
 
   octave_value permute (const Array<int>&, bool = false) const;
 
   octave_value reshape (const dim_vector& new_dims) const;
 
   size_t byte_size (void) const { return sizeof (ST); }
 
