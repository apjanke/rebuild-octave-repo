# HG changeset patch
# User jwe
# Date 1155621976 0
#      Tue Aug 15 06:06:16 2006 +0000
# Node ID a703198cb8b8e285e98bfd12d18364a398e990f0
# Parent  e6c29de3be3886c541780846b3ce7f30ebead04c
[project @ 2006-08-15 06:06:15 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2006-08-15  John W. Eaton  <jwe@octave.org>
+
+	* deprecated/is_global.m: Delete.
+
 2006-08-14  John W. Eaton  <jwe@octave.org>
 
 	* pkg/Makefile.in (script_sub_dir): Change from plot to pkg.
 
 2006-08-14  Dmitri A. Sergatskov  <dasergatskov@gmail.com>
 
 	* sparse/spy.m, control/base/bode.m, control/base/__stepimp__.m,
 	signal/freqz_plot.m: Adapt to new automatic_replot definition.
diff --git a/scripts/deprecated/is_global.m b/scripts/deprecated/is_global.m
deleted file mode 100644
--- a/scripts/deprecated/is_global.m
+++ /dev/null
@@ -1,31 +0,0 @@
-## Copyright (C) 2002 John W. Eaton
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2, or (at your option)
-## any later version.
-##
-## Octave is distributed in the hope that it will be useful, but
-## WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-## General Public License for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, write to the Free
-## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-## 02110-1301, USA.
-
-## -*- texinfo -*-
-## @deftypefn {Function File} {} is_global (@var{a})
-## This function has been deprecated.  Use isglobal instead.
-## @end deftypefn
-
-## Author: jwe
-
-function retval = is_global (varargin)
-
-  retval = isglobal (varargin{:});
-
-endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2006-08-15  John W. Eaton  <jwe@octave.org>
+
+	* variables.cc (do_isglobal): New function.
+	(Fisglobal): Use it.
+	(Fis_global): New function.
+
 2006-08-14  John W. Eaton  <jwe@octave.org>
 
 	* variables.cc (symbol_record_name_compare): Fix casts.
 
 	* ov-cell.cc (octave_cell::subsasgn): Call empty_conv for 0x0
 	objects, not just empty objects.
 
 	* oct-map.h (Octave_map::clear): Also clear key_list.
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -472,17 +472,17 @@ read_mat5_binary_element (std::istream& 
 	error ("load: error probing size of compressed data element");
 
       return retval;
     }
 #endif
 
   if (type != miMATRIX)
     {
-      error ("load: invalid element type");
+      error ("load: invalid element type = %d", type);
       goto early_read_error;
     }
 
   if (element_length == 0)
     {
       tc = Matrix ();
       return retval;
     }
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -701,30 +701,18 @@ looks_like_struct (const std::string& te
 
       retval = (tmp.is_defined () && tmp.is_map ());
     }
 #endif
 
   return retval;
 }
 
-DEFUN (isglobal, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} isglobal (@var{name})\n\
-Return 1 if @var{name} is globally visible.  Otherwise, return 0.  For\n\
-example,\n\
-\n\
-@example\n\
-@group\n\
-global x\n\
-isglobal (\"x\")\n\
-     @result{} 1\n\
-@end group\n\
-@end example\n\
-@end deftypefn")
+static octave_value
+do_isglobal (const octave_value_list& args)
 {
   octave_value retval = false;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
       print_usage ();
@@ -741,16 +729,43 @@ isglobal (\"x\")\n\
 
   symbol_record *sr = curr_sym_tab->lookup (name);
 
   retval = (sr && sr->is_linked_to_global ());
 
   return retval;
 }
 
+DEFUN (isglobal, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} isglobal (@var{name})\n\
+Return 1 if @var{name} is globally visible.  Otherwise, return 0.  For\n\
+example,\n\
+\n\
+@example\n\
+@group\n\
+global x\n\
+isglobal (\"x\")\n\
+     @result{} 1\n\
+@end group\n\
+@end example\n\
+@end deftypefn")
+{
+  return do_isglobal (args);
+}
+
+DEFUN (is_global, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} isglobal (@var{name})\n\
+This function has been deprecated.  Use isglobal instead.\n\
+@end deftypefn")
+{
+  return do_isglobal (args);
+}
+
 int
 symbol_exist (const std::string& name, const std::string& type)
 {
   int retval = 0;
 
   std::string struct_elts;
   std::string symbol_name = name;
 
