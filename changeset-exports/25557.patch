# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1530963916 -7200
#      Sat Jul 07 13:45:16 2018 +0200
# Node ID bb779fc2d0dbafd2123d74aa4f8ee3f4b00ad71a
# Parent  cbef9fc53fef7bee46d40dc09677102ec86f0a56
do not attempt to open a file when debugging a command line fct (bug #54231)

* octave-qt-link.cc	(do_enter_debugger_event): test for function type; if it
  is command-line then return without action

diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -36,16 +36,18 @@ along with Octave; see the file COPYING.
 #include "str-vec.h"
 
 #include "builtin-defun-decls.h"
 #include "dialog.h"
 #include "error.h"
 #include "interpreter-private.h"
 #include "load-path.h"
 #include "ov.h"
+#include "octave.h"
+#include "oct-map.h"
 #include "symscope.h"
 #include "utils.h"
 
 #include "octave-gui.h"
 #include "octave-qt-link.h"
 #include "resource-manager.h"
 
 Q_DECLARE_METATYPE (octave_value)
@@ -451,16 +453,26 @@ namespace octave
   { }
 
   void octave_qt_link::do_post_input_event (void)
   { }
 
   void octave_qt_link::do_enter_debugger_event (const std::string& file,
                                                 int line)
   {
+    interpreter& interp = __get_interpreter__ (
+                                  "octave_qt_link::do_enter_debugger_event");
+    octave_value_list fct = F__which__ (interp, ovl (file),0);
+    octave_map map = fct(0).map_value ();
+
+    QString type = QString::fromStdString (
+                    map.contents ("type").data ()[0].string_value ());
+    if (type == QString ("command-line function"))
+      return;
+
     do_insert_debugger_pointer (file, line);
 
     emit enter_debugger_signal ();
   }
 
   void octave_qt_link::do_execute_in_debugger_event (const std::string& file,
                                                      int line)
   {
