# HG changeset patch
# User jwe
# Date 962220304 0
#      Wed Jun 28 19:25:04 2000 +0000
# Node ID 9d8306640373e15779f70f8d88546d796c1c1bf5
# Parent  f5f010fdbba546c464d68ea9983ea11ac59e5a2b
[project @ 2000-06-28 19:25:02 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* boolMatrix.h: Declare MM_CMP_OPS here.
+	* boolMatrix.cc: Define them here.
+
 2000-06-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (assign): Allow x(bool) = RHS to succeed if x is
 	previously undefined and set size of x to size of bool index.
 	* idx-vector.cc (IDX_VEC_REP::maybe_convert_one_zero_to_idx):
 	Allow z_len to be zero.
 	(IDX_VEC_REP::freeze): If z_len is zero, set frozen_at_z_len to len.
 	If frozen, don't assert that frozen_at_z_len == z_len.
diff --git a/liboctave/boolMatrix.cc b/liboctave/boolMatrix.cc
--- a/liboctave/boolMatrix.cc
+++ b/liboctave/boolMatrix.cc
@@ -182,13 +182,15 @@ boolMatrix::any (void) const
 		    }
 		}
 	    }
 	}
     }
   return retval;
 }
 
+MM_CMP_OPS(boolMatrix, , boolMatrix, )
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/boolMatrix.h b/liboctave/boolMatrix.h
--- a/liboctave/boolMatrix.h
+++ b/liboctave/boolMatrix.h
@@ -25,16 +25,17 @@ Software Foundation, 59 Temple Place - S
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
 #include "Array2.h"
 
 #include "mx-defs.h"
+#include "mx-op-defs.h"
 
 class
 boolMatrix : public Array2<bool>
 {
 public:
 
   boolMatrix (void) : Array2<bool> () { }
   boolMatrix (int r, int c) : Array2<bool> (r, c) { }
@@ -73,15 +74,17 @@ public:
   friend std::istream& operator >> (std::istream& is, Matrix& a);
 #endif
 
 private:
 
   boolMatrix (bool *b, int r, int c) : Array2<bool> (b, r, c) { }
 };
 
+MM_CMP_OP_DECLS (boolMatrix, boolMatrix)
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,12 +1,8 @@
-2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
-
-	* io/fdisp.m, io/disp.m: New files.
-
 2000-06-27  Matthew W. Roberts <matt@lehi.tamu.edu>
 
 	* plot/plot.m: Add examples in doc string.
 
 2000-06-08  Ben Sapp <bsapp@nua.lampf.lanl.gov>
 
 	* control/base/__stepimp__.m: Reset multiplot state when done.
 	Do the right thing even if automatic_replot is not zero.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* OPERATORS/op-bm-bm.cc (eq): Define using mx_el_eq, not operator ==.
+	(ne): Likewise, use mx_el_ne, not operator !=.
+
 	* pr-output.cc (Fdisp): Delete.
 
 2000-06-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pr-output.cc (float_format::float_format): Set default values
 	for width and precision to -1.
 	(operator << (ostream&, pr_formatted_float&): Set width and
 	precision if values are >= 0.
diff --git a/src/OPERATORS/op-bm-bm.cc b/src/OPERATORS/op-bm-bm.cc
--- a/src/OPERATORS/op-bm-bm.cc
+++ b/src/OPERATORS/op-bm-bm.cc
@@ -44,18 +44,18 @@ DEFUNOP (transpose, bool_matrix)
 {
   CAST_UNOP_ARG (const octave_bool_matrix&);
 
   return octave_value (v.bool_matrix_value().transpose ());
 }
 
 // bool matrix by bool matrix ops.
 
-DEFBINOP_OP (eq, bool_matrix, bool_matrix, ==)
-DEFBINOP_OP (ne, bool_matrix, bool_matrix, !=)
+DEFBINOP_FN (eq, bool_matrix, bool_matrix, mx_el_eq)
+DEFBINOP_FN (ne, bool_matrix, bool_matrix, mx_el_ne)
 
 void
 install_bm_bm_ops (void)
 {
   INSTALL_UNOP (op_not, octave_bool_matrix, not);
   INSTALL_UNOP (op_transpose, octave_bool_matrix, transpose);
   INSTALL_UNOP (op_hermitian, octave_bool_matrix, transpose);
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -42,16 +42,17 @@ Software Foundation, 59 Temple Place - S
 #include "mach-info.h"
 #include "oct-cmplx.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
+#include "oct-stream.h"
 #include "pager.h"
 #include "pr-output.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
 
 // TRUE means use a scaled fixed point format for `format long' and
 // `format short'.
@@ -1746,16 +1747,106 @@ octave_print_internal (std::ostream& os,
 	os << " ]";
     }
   else
     {
       os << "sorry, printing char matrices not implemented yet\n";
     }
 }
 
+DEFUN (disp, args, nargout,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} disp (@var{x})\n\
+Display the value of @var{x}.  For example,\n\
+\n\
+@example\n\
+disp (\"The value of pi is:\"), disp (pi)\n\
+\n\
+     @print{} the value of pi is:\n\
+     @print{} 3.1416\n\
+@end example\n\
+\n\
+@noindent\n\
+Note that the output from @code{disp} always ends with a newline.\n\
+\n\
+If an output value is requested, @code{disp} prints nothing and\n\
+returns the formatted output in a string.\n\
+@end deftypefn\n\
+@seealso{fdisp}")
+{
+  octave_value retval;
+
+  int nargin = args.length ();
+
+  if (nargin == 1 && nargout < 2)
+    {
+      if (nargout == 0)
+	args(0).print (octave_stdout);
+      else
+	{
+	  std::ostrstream buf;
+	  args(0).print (buf);
+	  buf << ends;
+	  char *tmp = buf.str ();
+	  retval = tmp;
+	  delete [] tmp;
+	}
+    }
+  else
+    print_usage ("disp");
+
+  return retval;
+}
+
+DEFUN (fdisp, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} fdisp (@var{fid}, @var{x})\n\
+Display the value of @var{x} on the stream @var{fid}.  For example,\n\
+\n\
+@example\n\
+disp (stdout, \"The value of pi is:\"), disp (stdout, pi)\n\
+\n\
+     @print{} the value of pi is:\n\
+     @print{} 3.1416\n\
+@end example\n\
+\n\
+@noindent\n\
+Note that the output from @code{disp} always ends with a newline.\n\
+\n\
+If an output value is requested, @code{disp} prints nothing and\n\
+returns the formatted output in a string.\n\
+@end deftypefn\n\
+@seealso{disp}")
+{
+  octave_value retval;
+
+  int nargin = args.length ();
+
+  if (nargin == 2)
+    {
+      int fid = octave_stream_list::get_file_number (args (0));
+
+      octave_stream os = octave_stream_list::lookup (fid, "fdisp");
+
+      if (! error_state)
+	{
+	  ostream *osp = os.output_stream ();
+
+	  if (osp)
+	    args(1).print (*osp);
+	  else
+	    error ("fdisp: stream not open for writing");
+	}
+    }
+  else
+    print_usage ("fdisp");
+
+  return retval;
+}
+
 static void
 init_format_state (void)
 {
   free_format = false;
   plus_format = false;
   bank_format = false;
   hex_format = 0;
   bit_format = 0;
