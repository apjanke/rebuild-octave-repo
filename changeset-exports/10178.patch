# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264060417 18000
#      Thu Jan 21 02:53:37 2010 -0500
# Node ID 6bd86b6287b15936b14dcb24d23c2e3d2a365fce
# Parent  cb3d926b4d9e4f8b681c96ea294a8cadb617af93
provide wrapper for tempnam

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* lo-cutils.c (octave_tempnam): New funtion.
+	* lo-utils.h: Provide decl.
+	* file-ops.cc (file_ops::tempnam): Call octave_tempnam.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* lo-cutils.c (octave_readlink): New funtion.
 	* lo-utils.h: Provide decl.
 	* file-ops.cc (file_ops::readlink): Call octave_readlink.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -518,17 +518,17 @@ file_ops::tempnam (const std::string& di
   msg = std::string ();
 
   std::string retval;
   
   const char *pdir = dir.empty () ? 0 : dir.c_str ();
 
   const char *ppfx = pfx.empty () ? 0 : pfx.c_str ();
 
-  char *tmp = ::tempnam (pdir, ppfx);
+  char *tmp = octave_tempnam (pdir, ppfx);
 
   if (tmp)
     {
       retval = tmp;
 
       ::free (tmp);
     }
   else
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -140,16 +140,22 @@ octave_strcasecmp (const char *s1, const
 }
 
 OCTAVE_API int
 octave_strncasecmp (const char *s1, const char *s2, size_t n)
 {
   return strncasecmp (s1, s2, n);
 }
 
+OCTAVE_API char *
+octave_tempnam (const char *pdir, const char *ppfx)
+{
+  return tempnam (pdir, ppfx);
+}
+
 OCTAVE_API mode_t
 octave_umask (mode_t mode)
 {
 #if defined (HAVE_UMASK)
   return umask (mode);
 #else
   return 0;
 #endif
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -73,16 +73,19 @@ extern "C" OCTAVE_API int octave_rename 
 
 extern "C" OCTAVE_API char *oct_strptime (const char *buf, const char *format,
                                           struct tm *tm);
 
 extern "C" OCTINTERP_API int octave_strcasecmp (const char *s1, const char *s2);
 
 extern "C" OCTINTERP_API int octave_strncasecmp (const char *s1, const char *s2, size_t n);
 
+extern "C" OCTAVE_API char *
+octave_tempnam (const char *pdir, const char *ppfx);
+
 extern "C" OCTAVE_API mode_t octave_umask (mode_t);
 
 extern "C" OCTAVE_API int octave_unlink (const char *name);
 
 template <typename T>
 T
 octave_read_value (std::istream& is)
 {
