# HG changeset patch
# User Rik <rik@octave.org>
# Date 1532581086 25200
#      Wed Jul 25 21:58:06 2018 -0700
# Node ID 31c0bb386bcd3bdf21c437787ed02d7c5d8035e2
# Parent  8de8984992c168787256bc207dfe676b630c4ed4
Correctly read NA values in dlmread.

* dlmread.cc: Add BIST test for reading NA.

* lo-utils.cc (read_inf_nan_na): Reset failbit on stream after having read NA
and then attempted to get another character but were already at end of stream.

diff --git a/libinterp/corefcn/dlmread.cc b/libinterp/corefcn/dlmread.cc
--- a/libinterp/corefcn/dlmread.cc
+++ b/libinterp/corefcn/dlmread.cc
@@ -629,9 +629,22 @@ such as text, are also replaced by the @
 %!   assert (dlmread (file), [1, 2, 3, 0; 1i, 2i, 3i, 4i;
 %!                            4, 5, 6, 0; -4i, 5i, -6i, 7i]);
 %!   assert (dlmread (file, "", [0 0 0 3]), [1, 2, 3]);
 %!   assert (dlmread (file, "", [1 0 1 3]), [1i, 2i, 3i, 4i]);
 %! unwind_protect_cleanup
 %!   unlink (file);
 %! end_unwind_protect
 
+## NA was not properly read from a file
+%!test
+%! file = tempname ();
+%! unwind_protect
+%!   fid = fopen (file, "wt");
+%!   fwrite (fid, "1,NA,3");
+%!   fclose (fid);
+%!
+%!   assert (dlmread (file), [1, NA, 3]);
+%! unwind_protect_cleanup
+%!   unlink (file);
+%! end_unwind_protect
+
 */
diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -234,16 +234,18 @@ read_inf_nan_na (std::istream& is, char 
             char c2 = is.get ();
             if (c2 == 'n' || c2 == 'N')
               val = std::numeric_limits<T>::quiet_NaN ();
             else
               {
                 val = octave::numeric_limits<T>::NA ();
                 if (c2 != std::istream::traits_type::eof ())
                   is.putback (c2);
+                else
+                  is.clear (is.rdstate () & ~std::ios::failbit);
               }
           }
         else
           is.setstate (std::ios::failbit);
       }
       break;
 
     default:
