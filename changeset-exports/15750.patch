# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1354921381 18000
#      Fri Dec 07 18:03:01 2012 -0500
# Node ID 05c781cca57e0cc04f120e859525333f445b90bc
# Parent  54f7ef3f7e6318a202e24ae935e5dc4785982951
use numel instead of length in newly imported java functions

diff --git a/scripts/java/dlgtest.m b/scripts/java/dlgtest.m
--- a/scripts/java/dlgtest.m
+++ b/scripts/java/dlgtest.m
@@ -54,29 +54,29 @@ function dlgtest
 end
 
 function test_listdlg
 
    %-----------------------------------------------
    disp('- test listdlg with selectionmode single. No caption, no prompt.');
    itemlist = {'An item \\alpha', 'another', 'yet another'};
    s = listdlg ( 'ListString',itemlist, 'SelectionMode','Single' );
-   imax = length(s);
+   imax = numel (s);
    for i=1:1:imax
       disp(['Selected: ',num2str(i),': ', itemlist{s(i)}]);
    end
 
    %-----------------------------------------------
    disp('- test listdlg with selectionmode and preselection. Has caption and two lines prompt.');
    s = listdlg ( 'ListString',itemlist, ...
                  'SelectionMode','Multiple', ...
                  'Name','Selection Dialog', ...
                  'InitialValue',[1,2,3,4],
                  'PromptString',{'Select an item...', '...or multiple items'} );
-   imax = length(s);
+   imax = numel (s);
    for i=1:1:imax
       disp(['Selected: ',num2str(i),': ', itemlist{s(i)}]);
    end
 
 end
 
 function test_errordlg
    %-----------------------------------------------
diff --git a/scripts/java/errordlg.m b/scripts/java/errordlg.m
--- a/scripts/java/errordlg.m
+++ b/scripts/java/errordlg.m
@@ -34,17 +34,17 @@ function retval = errordlg (message, var
   if (! ischar (message))
     if (iscell (message))
       message = cell2mlstr (message);
     else
       error ("errordlg: character string or cellstr array expected for message");
     endif
   endif
 
-  switch length (varargin)
+  switch (numel (varargin))
     case 0
       title = "Error Dialog";
 
     otherwise
       title = varargin{1};
   endswitch
 
   if (! ischar (title))
diff --git a/scripts/java/helpdlg.m b/scripts/java/helpdlg.m
--- a/scripts/java/helpdlg.m
+++ b/scripts/java/helpdlg.m
@@ -34,17 +34,17 @@ function retval = helpdlg (message, vara
   if (! ischar (message))
     if (iscell (message))
       message = cell2mlstr (message);
     else
       error ("helpdlg: character string or cellstr array expected for message");
     endif
   endif
   
-  switch length (varargin)
+  switch (numel (varargin))
     case 0
       title = "Help Dialog";
 
     otherwise
       if (ischar (varargin {1}))
         title = varargin{1};
       else
         error ("helpdlg: character string expected for title");
diff --git a/scripts/java/inputdlg.m b/scripts/java/inputdlg.m
--- a/scripts/java/inputdlg.m
+++ b/scripts/java/inputdlg.m
@@ -52,17 +52,17 @@ function retval = inputdlg (prompt, vara
     ## Silently extract only char elements
     prompt = prompt (find (cellfun ("ischar", prompt)));
   elseif (ischar (prompt))
     prompt = {prompt};
   else
     error ("inputdlg: character string or cellstr array expected for prompt");
   endif
 
-  switch length (varargin)
+  switch (numel (varargin))
     case 0
       title = "Input Dialog";
       lineNo = 1;
       defaults = cellstr (cell( size (prompt)));
 
     case 1
       title = varargin{1};
       lineNo = 1;
diff --git a/scripts/java/javaArray.m b/scripts/java/javaArray.m
--- a/scripts/java/javaArray.m
+++ b/scripts/java/javaArray.m
@@ -33,17 +33,17 @@
 ## @example
 ## a = javaArray ("java.lang.String", 2, 2);
 ## a(1,1) = "Hello";
 ## @end example
 ## @end deftypefn
 
 function retval = javaArray (class_name, varargin)
 
-  switch length (varargin)
+  switch (numel (varargin))
     case 0
       error ("missing array size");
 
     case 1
       dims = varargin{1};
 
     otherwise
       dims = [varargin{:}];
diff --git a/scripts/java/javaclasspath.m b/scripts/java/javaclasspath.m
--- a/scripts/java/javaclasspath.m
+++ b/scripts/java/javaclasspath.m
@@ -99,14 +99,14 @@ function varargout = javaclasspath (whic
   endswitch
   
 endfunction
 
 ## Display cell array of paths
 
 function disp_path_list ( which, path_list )
   printf ("   %s JAVA PATH\n\n", which);
-  if (length (path_list) > 0)
+  if (numel (path_list) > 0)
     printf ("      %s\n", path_list{:});
   else
     printf ("      - empty -\n");
   endif
 endfunction
diff --git a/scripts/java/listdlg.m b/scripts/java/listdlg.m
--- a/scripts/java/listdlg.m
+++ b/scripts/java/listdlg.m
@@ -51,19 +51,19 @@
 ##    a string used to label the Cancel button.
 ## @end table
 ##
 ## Example:
 ##
 ## @example
 ## [sel, ok] = listdlg ("ListString", @{"An item", "another", "yet another"@}, "SelectionMode", "Multiple" );
 ## if (ok == 1)
-##    imax = length(sel);
-##    for i=1:1:imax
-##     disp(sel(i));
+##    imax = numel (sel);
+##    for i = 1:1:imax
+##     disp (sel(i));
 ##    end
 ## end
 ## @end example
 ##
 ## @seealso{errordlg, helpdlg, inputdlg, questdlg, warndlg}
 ## @end deftypefn
 
 function varargout = listdlg (varargin)
@@ -116,15 +116,15 @@ function varargout = listdlg (varargin)
    ## transform matrices to cell arrays of strings
    listsize = arrayfun (@num2str, listsize, "UniformOutput", false);
    initialvalue = arrayfun (@num2str, initialvalue, "UniformOutput", false);
    
    ret = java_invoke ("org.octave.JDialogBox", "listdlg", listcell,
                       selmode, listsize, initialvalue, name, prompt,
                       okstring, cancelstring);
 
-   if (length(ret) > 0)
+   if (numel (ret) > 0)
      varargout = {ret, 1};
    else
      varargout = {{}, 0};
    endif
 
 endfunction
diff --git a/scripts/java/msgbox.m b/scripts/java/msgbox.m
--- a/scripts/java/msgbox.m
+++ b/scripts/java/msgbox.m
@@ -37,17 +37,17 @@ function retval = msgbox (message, varar
   if (! ischar (message))
     if (iscell (message))
       message = cell2mlstr (message);
     else
       error ("msgbox: character string or cellstr array expected for message");
     endif
   endif
   
-  switch length (varargin)
+  switch (numel (varargin))
     case 0
       title = "";
       dlg = "emptydlg";
 
     case 1
       title = varargin{1};
       dlg = "emptydlg";
 
