# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1405884212 -7200
#      Sun Jul 20 21:23:32 2014 +0200
# Branch gui-release
# Node ID 0be65bd7f369aed9e72f5e1a0e93439076df188e
# Parent  d2100cb2331a867a320ea669ab5edc16efc75c7a
add an user preference for loading changed files without a prompt (bug #42678)

* file-editor-tab.cc (file_has_changed): check user preference before prompting
  for reloading the file;
  (notice-settings): get flag for prompting before reloading file from settings;

* file-editor-tab.h: new flag _always_reload_changed files

* settings-dialog.ui: new check box for new preference

* settings-dialog.cc (constructor): get state of new check box from settings;
  (write_changes_settings): write state of new check box into settings

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1427,31 +1427,38 @@ file_editor_tab::file_has_changed (const
   // been changed multiple times by temporarily removing from the
   // file watcher.
   QStringList trackedFiles = _file_system_watcher.files ();
   if (!trackedFiles.isEmpty ())
     _file_system_watcher.removePath (_file_name);
 
   if (QFile::exists (_file_name))
     {
-      // Create a WindowModal message that blocks the edit area
-      // by making _edit_area parent.
-      QMessageBox* msgBox
-        = new QMessageBox (QMessageBox::Warning,
-                           tr ("Octave Editor"),
-                           tr ("It seems that \'%1\' has been modified by another application. Do you want to reload it?").
-                           arg (_file_name),
-                           QMessageBox::Yes | QMessageBox::No, this);
+      if (_always_reload_changed_files)
+
+              load_file (_file_name);
 
-      connect (msgBox, SIGNAL (finished (int)),
-               this, SLOT (handle_file_reload_answer (int)));
+      else
+        {
+          // Create a WindowModal message that blocks the edit area
+          // by making _edit_area parent.
+          QMessageBox* msgBox
+            = new QMessageBox (QMessageBox::Warning,
+                               tr ("Octave Editor"),
+                               tr ("It seems that \'%1\' has been modified by another application. Do you want to reload it?").
+                               arg (_file_name),
+                               QMessageBox::Yes | QMessageBox::No, this);
 
-      msgBox->setWindowModality (Qt::WindowModal);
-      msgBox->setAttribute (Qt::WA_DeleteOnClose);
-      msgBox->show ();
+          connect (msgBox, SIGNAL (finished (int)),
+                   this, SLOT (handle_file_reload_answer (int)));
+
+          msgBox->setWindowModality (Qt::WindowModal);
+          msgBox->setAttribute (Qt::WA_DeleteOnClose);
+          msgBox->show ();
+        }
     }
   else
     {
       QString modified = "";
       if (_edit_area->isModified ())
         modified = tr ("\n\nWarning: The contents in the editor is modified!");
 
       // Create a WindowModal message. The file editor tab can't be made
@@ -1572,16 +1579,19 @@ file_editor_tab::notice_settings (const 
 
   _edit_area->setEdgeColumn (
               settings->value ("editor/long_line_column",80).toInt ());
   if (settings->value ("editor/long_line_marker",true).toBool ())
     _edit_area->setEdgeMode (QsciScintilla::EdgeLine);
   else
     _edit_area->setEdgeMode (QsciScintilla::EdgeNone);
 
+  // reload changed files
+  _always_reload_changed_files = 
+        settings->value ("editor/always_reload_changed_files",false).toBool ();
 }
 
 void
 file_editor_tab::auto_margin_width ()
 {
   _edit_area->setMarginWidth (2, "1"+QString::number (_edit_area->lines ()));
 }
 
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -219,16 +219,17 @@ private:
   QString _file_name;
   QString _file_name_short;
 
   bool _long_title;
   bool _copy_available;
   bool _app_closing;
   bool _is_octave_file;
   bool _modal_dialog;
+  bool _always_reload_changed_files;
 
   QFileSystemWatcher _file_system_watcher;
 
   find_dialog *_find_dialog;
   bool _find_dialog_is_visible;
   QRect _find_dialog_geometry;
 
   QsciAPIs *_lexer_apis;
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -201,16 +201,18 @@ settings_dialog::settings_dialog (QWidge
   ui->editor_notebook_tab_width_min->setValue (
     settings->value ("editor/notebook_tab_width_min", 160).toInt ());
   ui->editor_notebook_tab_width_max->setValue (
     settings->value ("editor/notebook_tab_width_max", 300).toInt ());
   ui->editor_restoreSession->setChecked (
     settings->value ("editor/restoreSession", true).toBool ());
   ui->editor_create_new_file->setChecked (
     settings->value ("editor/create_new_file",false).toBool ());
+  ui->editor_reload_changed_files->setChecked (
+    settings->value ("editor/always_reload_changed_files",false).toBool ());
 
   // terminal
   ui->terminal_fontName->setCurrentFont (QFont (
     settings->value ("terminal/fontName","Courier New").toString ()) );
   ui->terminal_fontSize->setValue (
     settings->value ("terminal/fontSize", 10).toInt ());
   ui->terminal_history_buffer->setValue (
      settings->value ("terminal/history_buffer",1000).toInt ());
@@ -644,16 +646,18 @@ settings_dialog::write_changed_settings 
   settings->setValue ("editor/notebook_tab_width_min",
                       ui->editor_notebook_tab_width_min->value ());
   settings->setValue ("editor/notebook_tab_width_max",
                       ui->editor_notebook_tab_width_max->value ());
   settings->setValue ("editor/restoreSession",
                       ui->editor_restoreSession->isChecked ());
   settings->setValue ("editor/create_new_file",
                       ui->editor_create_new_file->isChecked ());
+  settings->setValue ("editor/always_reload_changed_files",
+                      ui->editor_reload_changed_files->isChecked ());
   settings->setValue ("terminal/fontSize", ui->terminal_fontSize->value ());
   settings->setValue ("terminal/fontName",
                       ui->terminal_fontName->currentFont ().family ());
 
   settings->setValue ("filesdockwidget/showFileSize",
                       ui->showFileSize->isChecked ());
   settings->setValue ("filesdockwidget/showFileType",
                       ui->showFileType->isChecked ());
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -399,19 +399,19 @@
         <widget class="QScrollArea" name="scrollArea">
          <property name="widgetResizable">
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents">
           <property name="geometry">
            <rect>
             <x>0</x>
-            <y>-146</y>
+            <y>-175</y>
             <width>662</width>
-            <height>553</height>
+            <height>580</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_16">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_9">
              <item>
               <layout class="QGridLayout" name="editor_common_settings_grid">
                <property name="horizontalSpacing">
@@ -1078,16 +1078,23 @@
                    <verstretch>0</verstretch>
                   </sizepolicy>
                  </property>
                  <property name="text">
                   <string>Create nonexistent files without prompting</string>
                  </property>
                 </widget>
                </item>
+               <item>
+                <widget class="QCheckBox" name="editor_reload_changed_files">
+                 <property name="text">
+                  <string>Reload externally changed files without prompt</string>
+                 </property>
+                </widget>
+               </item>
               </layout>
              </item>
              <item>
               <widget class="Line" name="line_4">
                <property name="orientation">
                 <enum>Qt::Horizontal</enum>
                </property>
               </widget>
