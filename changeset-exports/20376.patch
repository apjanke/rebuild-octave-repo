# HG changeset patch
# User Rik <rik@octave.org>
# Date 1437666345 25200
#      Thu Jul 23 08:45:45 2015 -0700
# Node ID e2feb806332a65d6bbefa2f59d9946b7904abe0e
# Parent  31f89b12aaf7050a78f032a1f7c588f923144093
polar.m: Calculate 'rtick' property more accurately (bug #45513).

* polar.m (__calc_rtick__): if maximum rho value is above last rtick, then
extend rtick value through linear interpolation.

diff --git a/scripts/plot/draw/polar.m b/scripts/plot/draw/polar.m
--- a/scripts/plot/draw/polar.m
+++ b/scripts/plot/draw/polar.m
@@ -151,23 +151,30 @@ function h = polar (varargin)
   if (nargout > 0)
     h = htmp;
   endif
 
 endfunction
 
 function rtick = __calc_rtick__ (hax, maxr)
   ## FIXME: workaround: calculate r(ho)tick from xtick
+  ##        It would be better to just calculate the values,
+  ##        but that code is deep in the C++ for the plot engines.
   savexlim = get (hax, "xlim");
   saveylim = get (hax, "ylim");
   set (hax, "xlim", [-maxr maxr], "ylim", [-maxr maxr]);
   xtick = get (hax, "xtick");
-  rtick = xtick(find (xtick > 0, 1):find (xtick >= maxr, 1));
-  if (isempty (rtick))
-    rtick = [0.5 1];
+  minidx = find (xtick > 0, 1);
+  maxidx = find (xtick >= maxr, 1);
+  if (! isempty (maxidx))
+    rtick = xtick(minidx:maxidx);
+  else
+    ## Add one more tick through linear interpolation
+    rtick = xtick(minidx:end);
+    rtick(end+1) = xtick(end) + diff (xtick(end-1:end));
   endif
   set (hax, "xlim", savexlim, "ylim", saveylim);
 endfunction
 
 function retval = __plr1__ (h, theta, fmt)
 
   theta = theta(:);
   if (iscomplex (theta))
