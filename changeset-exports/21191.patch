# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1454573047 18000
#      Thu Feb 04 03:04:07 2016 -0500
# Node ID 8e317ce26a246fe213e394f6b3f64460d261a936
# Parent  342764537e5a5f775607f0511689f565fcd79095
unconditionally define warn_qrupdate_once

* base-qr.h (warn_qrupdate_once): Declare unconditionally.
* dbleQR.cc (warn_qrupdate_once): Define unconditionally.

diff --git a/liboctave/numeric/base-qr.h b/liboctave/numeric/base-qr.h
--- a/liboctave/numeric/base-qr.h
+++ b/liboctave/numeric/base-qr.h
@@ -70,13 +70,11 @@ public:
   bool regular (void) const;
 
 protected:
 
   qr_type q;
   qr_type r;
 };
 
-#if ! defined (HAVE_QRUPDATE)
 extern void warn_qrupdate_once (void);
-#endif
 
 #endif
diff --git a/liboctave/numeric/dbleQR.cc b/liboctave/numeric/dbleQR.cc
--- a/liboctave/numeric/dbleQR.cc
+++ b/liboctave/numeric/dbleQR.cc
@@ -669,25 +669,27 @@ QR::shift_cols (octave_idx_type i, octav
   octave_idx_type n = r.columns ();
 
   if (i < 0 || i > n-1 || j < 0 || j > n-1)
     (*current_liboctave_error_handler) ("qrshift: index out of range");
 
   init (::shift_cols (q*r, i, j), get_type ());
 }
 
-void warn_qrupdate_once (void)
+#endif
+
+void
+warn_qrupdate_once (void)
 {
   static bool warned = false;
+
   if (! warned)
     {
       (*current_liboctave_warning_with_id_handler)
         ("Octave:missing-dependency",
          "In this version of Octave, QR & Cholesky updating routines "
          "simply update the matrix and recalculate factorizations. "
          "To use fast algorithms, link Octave with the qrupdate library. "
          "See <http://sourceforge.net/projects/qrupdate>.");
 
       warned = true;
     }
 }
-
-#endif
