# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1509451321 -3600
#      Tue Oct 31 13:02:01 2017 +0100
# Node ID 7a2cecc1ec24fd26473d77e0e066b49d3ee9df0f
# Parent  1253132e2173be563f09d4751f03c69315daaa6c
edit.m: use the bare name for header and function prototype (bug #52316)

* edit.m: use the bare name in auto generated prototype.
  Remove trailing white space after "-*- texinfo -*-" in m files function
  prototype

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -454,59 +454,60 @@ SUCH DAMAGE.\
                 "This program is granted to the public domain."];
 
       otherwise
         head = "";
         tail = [copyright, "\n\n", FUNCTION.LICENSE, "\n", author, "\n", revs];
     endswitch
 
     ## Generate the function template.
+    [~, basename] = fileparts (name);
     exists = exist (name);
     switch (ext)
       case {"cc", "C", "cpp"}
         if (isempty (head))
           comment = ["/*\n\n", tail, "\n\n*/\n\n"];
         else
           comment = ["/*\n\n", head, "\n\n", tail, "\n\n*/\n\n"];
         endif
         ## If we are shadowing an m-file, paste the code for the m-file.
         if (any (exists == [2, 103]))
           code = ['\ ', strrep(type(name){1}, "\n", "\n// ")];
         else
           code = " ";
         endif
         body = ["#include <octave/oct.h>\n\n"             ...
-                "DEFUN_DLD(" name ", args, nargout,\n"    ...
+                "DEFUN_DLD(" basename ", args, nargout,\n"...
                 "          \"-*- texinfo -*-\\n\\\n"      ...
-                "@deftypefn {} {@var{retval} =} " name    ...
+                "@deftypefn {} {@var{retval} =} " basename...
                 " (@var{input1}, @var{input2})\\n\\\n"    ...
                 "@seealso{}\\n\\\n@end deftypefn\")\n{\n" ...
                 "  octave_value_list retval;\n"           ...
                 "  int nargin = args.length ();\n\n"      ...
                 code, "\n  return retval;\n}\n"];
 
         text = [comment, body];
       case "m"
         ## If we are editing a function defined on the fly, paste the code.
         if (any (exists == [2, 103]))
           body = type (name){1};
         else
-          body = ["function [retval] = " name " (input1, input2)\n\n" ...
+          body = ["function [retval] = " basename " (input1, input2)\n\n" ...
                   "endfunction\n"];
         endif
         if (isempty (head))
-          comment = ["## -*- texinfo -*- \n## @deftypefn {} " ...
-                     "{@var{retval} =} " name                              ...
+          comment = ["## -*- texinfo -*-\n## @deftypefn {} " ...
+                     "{@var{retval} =} " basename                          ...
                      " (@var{input1}, @var{input2})\n##\n"                 ...
                      "## @seealso{}\n## @end deftypefn\n\n"                ...
                      "## " strrep(tail, "\n", "\n## ") "\n\n"];
         else
           comment = ["## " strrep(head,"\n","\n## ") "\n\n"                ...
                      "## -*- texinfo -*- \n## @deftypefn {} " ...
-                     "{@var{retval} =} " name                              ...
+                     "{@var{retval} =} " basename                          ...
                      " (@var{input1}, @var{input2})\n##\n"                 ...
                      "## @seealso{}\n## @end deftypefn\n\n"                ...
                      "## " strrep(tail, "\n", "\n## ") "\n\n"];
         endif
         text = [comment, body];
     endswitch
 
     ## Write the initial file (if there is anything to write)
