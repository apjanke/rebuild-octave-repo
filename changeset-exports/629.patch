# HG changeset patch
# User jwe
# Date 777306865 0
#      Fri Aug 19 14:34:25 1994 +0000
# Node ID 0788882808bce0b49ceb95c0a8660c768d753941
# Parent  aecbe369233b740c3ab50d713873be2cd530db3a
[project @ 1994-08-19 14:33:40 by jwe]

diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -110,33 +110,14 @@ tree_constant::print_code (ostream& os)
 }
 
 void
 gripe_wrong_type_arg (const char *name, const tree_constant& tc)
 {
   error ("%s: wrong type argument `%s'", name, tc.type_as_string ());
 }
 
-char *
-tree_constant::type_as_string (void) const
-{
-  if (is_real_scalar ())
-    return "real scalar";
-  else if (is_real_matrix ())
-    return "real matrix";
-  else if (is_complex_scalar ())
-    return "complex scalar";
-  else if (is_complex_matrix ())
-    return "complex matrix";
-  else if (is_string ())
-    return "string";
-  else if (is_range ())
-    return "range";
-  else
-    return "<unknown type>";
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -391,34 +391,34 @@ plot_range::print (ostrstream& plot_buf)
       tree_constant lower_val = lower->eval (0);
       if (error_state)
 	{
 	  ::error ("evaluating lower bound of plot range");
 	  return;
 	}
       else
 	{
-	  double lo = lower_val.to_scalar ();
+	  double lo = lower_val.double_value ();
 	  plot_buf << lo;
 	}
     }
 
   plot_buf << ":";
 
   if (upper)
     {
       tree_constant upper_val = upper->eval (0);
       if (error_state)
 	{
 	  ::error ("evaluating upper bound of plot range");
 	  return;
 	}
       else
 	{
-	  double hi = upper_val.to_scalar ();
+	  double hi = upper_val.double_value ();
 	  plot_buf << hi;
 	}
     }
 
   plot_buf << "]";
 }
 
 void
@@ -496,17 +496,17 @@ subplot_using::print (int ndim, int n_ma
 	    {
 	      ::error ("evaluating plot using command");
 	      return -1;
 	    }
 
 	  double val;
 	  if (tmp.is_defined ())
 	    {
-	      val = tmp.to_scalar ();
+	      val = tmp.double_value ();
 	      if (i == 0)
 		plot_buf << " using ";
 	      else
 		plot_buf << ":";
 
 	      int n = NINT (val);
 
 	      if (n < 1 || n_max > 0 && n > n_max)
@@ -587,32 +587,32 @@ subplot_style::print (ostrstream& plot_b
     {
       plot_buf << " with " << style;
 
       if (linetype)
 	{
 	  tree_constant tmp = linetype->eval (0);
 	  if (! error_state && tmp.is_defined ())
 	    {
-	      double val = tmp.to_scalar ();
+	      double val = tmp.double_value ();
 	      plot_buf << " " << NINT (val);
 	    }
 	  else
 	    {
 	      ::error ("evaluating plot style command");
 	      return -1;
 	    }
 	}
 
       if (pointtype)
 	{
 	  tree_constant tmp = pointtype->eval (0);
 	  if (! error_state && tmp.is_defined ())
 	    {
-	      double val = tmp.to_scalar ();
+	      double val = tmp.double_value ();
 	      plot_buf << " " << NINT (val);
 	    }
 	  else
 	    {
 	      ::error ("evaluating plot style command");
 	      return -1;
 	    }
 	}
