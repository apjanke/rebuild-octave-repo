# HG changeset patch
# User jwe
# Date 1083080830 0
#      Tue Apr 27 15:47:10 2004 +0000
# Node ID d7bad86d3416ead380897f107a2692aaf3a0bb2e
# Parent  7514d69b422a52602a0786615970cce2353cbbf9
[project @ 2004-04-27 15:46:58 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-04-27  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/sort.cc: Add missing "class" keywords to template
+	instantiations.
+
 2004-04-22  John W. Eaton  <jwe@octave.org>
 
 	* pt-plot.cc (Fclearplot): Temporarily turn off automatic_replot.
 	Clear display after resetting title, labels, etc.
 
 2004-04-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-colon.cc (tree_colon_expression::rvalue): Also check for
diff --git a/src/DLD-FUNCTIONS/sort.cc b/src/DLD-FUNCTIONS/sort.cc
--- a/src/DLD-FUNCTIONS/sort.cc
+++ b/src/DLD-FUNCTIONS/sort.cc
@@ -63,18 +63,18 @@ struct vec_index
 };
 
 bool
 ieee754_compare (vec_index *a, vec_index *b)
 {
   return (a->vec < b->vec);
 }
 
-template octave_sort<unsigned EIGHT_BYTE_INT>;
-template octave_sort<vec_index *>;
+template class octave_sort<unsigned EIGHT_BYTE_INT>;
+template class octave_sort<vec_index *>;
 #else
 struct vec_index
 {
   double vec;
   int indx;
 };
 
 bool
@@ -84,33 +84,33 @@ double_compare (double a, double b)
 }
 
 bool
 double_compare (vec_index *a, vec_index *b)
 {
   return (xisnan(b->vec) || (a->vec < b->vec));
 }
 
-template octave_sort<double>;
-template octave_sort<vec_index *>;
+template class octave_sort<double>;
+template class octave_sort<vec_index *>;
 #endif
 
 struct complex_vec_index
 {
   Complex vec;
   int indx;
 };
 
 bool
 complex_compare (complex_vec_index *a, complex_vec_index *b)
 {
   return (xisnan(b->vec) || (abs(a->vec) < abs(b->vec)));
 }
 
-template octave_sort<complex_vec_index *>;
+template class octave_sort<complex_vec_index *>;
 
 static octave_value_list
 mx_sort (NDArray &m, bool return_idx, int dim)
 {
   octave_value_list retval;
 
   if (m.length () < 1)
     return retval;
