# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1245390397 -7200
#      Fri Jun 19 07:46:37 2009 +0200
# Node ID 6c255e51ef7edda687ef5a0f1bca811a44c98e11
# Parent  da465c405d849d37651a9b9d08e1ef94cf6720e9
improve & fix ismember

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-19  Jaroslav Hajek  <highegg@gmail.com>
+
+	* set/ismember.m: Properly handle NaNs. Fix test.
+
 2009-06-18  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Change the default x11 fontspec from '*,0'
 	to ',0' to avoid delays searching the fontpath for a font named '*'.
 
 2009-06-18  Daniel Gualberto <daniel@alacer.com.br>
 
 	* polynomial/mpoles.m: Fix infinite loop for a multiplicity of
diff --git a/scripts/set/ismember.m b/scripts/set/ismember.m
--- a/scripts/set/ismember.m
+++ b/scripts/set/ismember.m
@@ -92,25 +92,42 @@ function [tf, a_idx] = ismember (a, s, r
 
     s = s(:);
     ## We do it this way, because we expect the array to be often sorted.
     if (issorted (s))
       is = [];
     else
       [s, is] = sort (s);
     endif
+
+    ## sort out NaNs
+    if (isreal (s) && ! isempty (s) && isnan (s(end)))
+        s = s(1:end - sum (isnan (s)));
+    endif
     
+    if (isreal (a))
+      anan = isnan (a);
+      a(anan) = 0;
+    endif
+
     if (nargout > 1)
       a_idx = lookup (s, a, "m");
       tf = logical (a_idx);
       if (! isempty (is))
         a_idx(tf) = is (a_idx(tf));
       endif
+      if (isreal (a))
+        tf(anan) = false;
+        a_idx(anan) = 0;
+      endif
     else
       tf = lookup (s, a, "b");
+      if (isreal (a))
+        tf(anan) = false;
+      endif
     endif
 
   elseif (nargin == 3 && strcmpi (rows_opt, "rows"))
     if (iscell (a) || iscell (s))
       error ("ismember: cells not supported with ""rows""");
     elseif (! isa (a, class (s))) 
       error ("ismember: both input arguments must be the same type");
     elseif (! ischar (a) && ! isnumeric (a))
@@ -195,17 +212,17 @@ endfunction
 %! assert (all (result == logical ([1 1])) && a_idx(2) == 7);
 
 %!test
 %! [result, a_idx] = ismember ([3,10,1], [0,1,2,3,4,5,6,7,8,9]);
 %! assert (all (result == logical ([1, 0, 1])) && all (a_idx == [4, 0, 2]));
 
 %!test
 %! [result, a_idx] = ismember ("1.1", "0123456789.1");
-%! assert (all (result == logical ([1, 1, 1])) && all (a_idx == [2, 11, 2]));
+%! assert (all (result == logical ([1, 1, 1])) && all (a_idx == [12, 11, 12]));
 
 %!test
 %! [result, a_idx] = ismember([1:3; 5:7; 4:6], [0:2; 1:3; 2:4; 3:5; 4:6], 'rows');
 %! assert (all (result == logical ([1; 0; 1])) && all (a_idx == [2; 0; 5]));
 
 %!test
 %! [result, a_idx] = ismember([1.1,1.2,1.3; 2.1,2.2,2.3; 10,11,12], [1.1,1.2,1.3; 10,11,12; 2.12,2.22,2.32], 'rows');
 %! assert (all (result == logical ([1; 0; 1])) && all (a_idx == [1; 0; 2]));
