# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302345260 -7200
#      Sat Apr 09 12:34:20 2011 +0200
# Node ID fc8f53c6994f3c2602d5c6f298df944c5225fd07
# Parent  0b780509d3ac3184d7661918161e3bf19c5b7f39
Added missing copyright notice, refactored code.

diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -29,17 +29,16 @@ MainWindow::MainWindow(QWidget *parent)
     : QMainWindow(parent) {
     constructWindow();
 
     loadWebPage("Online Manual", "http://www.gnu.org/software/octave/doc/interpreter/");
     showMaximized();
 }
 
 MainWindow::~MainWindow() {
-
 }
 
 void MainWindow::addTerminalWindow() {
     TerminalMdiSubWindow *terminal = new TerminalMdiSubWindow(this);
     m_mdiArea->addSubWindow(terminal);
     terminal->show();
 }
 
diff --git a/gui//src/QTerminalWidget.cpp b/gui//src/QTerminalWidget.cpp
--- a/gui//src/QTerminalWidget.cpp
+++ b/gui//src/QTerminalWidget.cpp
@@ -11,17 +11,16 @@
     Library General Public License for more details.
 				
     You should have received a copy of the GNU Library General Public License
     along with this library; see the file COPYING.LIB.  If not, write to
     the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
     Boston, MA 02110-1301, USA.
 */
 						
-
 #include "QTerminalWidget.h"
 #include "Session.h"
 #include "TerminalDisplay.h"
 
 struct TermWidgetImpl
 {
     TermWidgetImpl(QWidget* parent = 0);
 
@@ -65,29 +64,29 @@ TerminalDisplay *TermWidgetImpl::createT
 
 QTerminalWidget::QTerminalWidget(int startnow, QWidget *parent)
     :QWidget(parent)
 {
     m_impl = new TermWidgetImpl(this);
     
     initialize();
 
-    if (startnow && m_impl->m_session) {
+    if(startnow && m_impl->m_session) {
 	m_impl->m_session->run();
     }
     
-    this->setFocus( Qt::OtherFocusReason );
+    this->setFocus(Qt::OtherFocusReason);
     m_impl->m_terminalDisplay->resize(this->size());
     
     this->setFocusProxy(m_impl->m_terminalDisplay);
 }
 
 void QTerminalWidget::startShellProgram()
 {
-    if ( m_impl->m_session->isRunning() )
+    if(m_impl->m_session->isRunning())
 	return;
 	
     m_impl->m_session->run();
 }
 
 void QTerminalWidget::initialize()
 {    
     m_impl->m_terminalDisplay->setSize(80, 40);
diff --git a/gui//src/Quint.cpp b/gui//src/Quint.cpp
--- a/gui//src/Quint.cpp
+++ b/gui//src/Quint.cpp
@@ -14,28 +14,16 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include <QtGui/QApplication>
 #include "MainWindow.h"
 
-// System
-#include <termios.h>
-#include <sys/types.h>
-#include <signal.h>
-#include <sys/types.h>
-#include <sys/wait.h>
-
-#include <iostream>
-#include "pty.h"
-#include <assert.h>
-#include "QTerminalWidget.h"
-
 int main(int argc, char *argv[])
 {
     QApplication a(argc, argv);
     MainWindow w;
     w.show();
 
     return a.exec();
 }
diff --git a/gui//src/TerminalMdiSubWindow.cpp b/gui//src/TerminalMdiSubWindow.cpp
--- a/gui//src/TerminalMdiSubWindow.cpp
+++ b/gui//src/TerminalMdiSubWindow.cpp
@@ -1,50 +1,54 @@
+/* Quint - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
 #include "TerminalMdiSubWindow.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QStringListModel>
 #include <QStringList>
 
-void * octave_main_wrapper(void *ptr)
-{
-  //MainWindow *mainWindow = (MainWindow*)ptr;
-
-  int argc = 3;
-  const char* argv[] = {"octave", "--interactive", "--line-editing"};
-  octave_main(argc,(char**)argv,1);
-  switch_to_buffer (create_buffer (get_input_from_stdin ()));
-
-  main_loop();
-  clean_up_and_exit(0);
-  return 0;
-}
-
 TerminalMdiSubWindow::TerminalMdiSubWindow(QWidget *parent)
     : QMdiSubWindow(parent),
       m_terminalWidget(0),
       isRunning(true) {
     constructWindow();
     establishOctaveLink();
 }
 
 TerminalMdiSubWindow::~TerminalMdiSubWindow() {
     delete m_octaveLink;
     isRunning = false;
 }
 
 void TerminalMdiSubWindow::establishOctaveLink() {
     m_octaveLink = new OctaveLink();
-    pthread_create(&octave_thread, NULL, octave_main_wrapper, (void*)this);
-    pthread_create(&octave_monitor_thread, 0, TerminalMdiSubWindow::octaveCallback, this);
+    pthread_create(&m_octaveThread, 0, TerminalMdiSubWindow::octaveMainWrapper, this);
+    pthread_create(&m_octaveCallbackThread, 0, TerminalMdiSubWindow::octaveCallback, this);
     command_editor::add_event_hook(server_rl_event_hook_function);
 
     int fdm, fds;
     if(openpty(&fdm, &fds, 0, 0, 0) < 0) {
-        fprintf (stderr, "oops!\n");
+        assert(0);
     }
     dup2 (fds, 0);
     dup2 (fds, 1);
     dup2 (fds, 2);
     m_terminalWidget->openTeletype(fdm);
 }
 
 void TerminalMdiSubWindow::constructWindow() {
@@ -97,18 +101,30 @@ void TerminalMdiSubWindow::updateHistory
 
     QStringList stringList = model->stringList();
     for(size_t i = 0; i < historyEntries.length(); i++)
         stringList.append(QString(historyEntries[i].c_str()));
 
     model->setStringList(stringList);
 }
 
-void* TerminalMdiSubWindow::octaveCallback(void *window) {
-    TerminalMdiSubWindow* terminalWindow = (TerminalMdiSubWindow*)window;
+void* TerminalMdiSubWindow::octaveMainWrapper(void *widget) {
+    //MainWindow *mainWindow = (MainWindow*)ptr;
+
+    int argc = 3;
+    const char* argv[] = {"octave", "--interactive", "--line-editing"};
+    octave_main(argc, (char**)argv,1);
+    switch_to_buffer(create_buffer(get_input_from_stdin()));
+    main_loop();
+    clean_up_and_exit(0);
+    return 0;
+}
+
+void* TerminalMdiSubWindow::octaveCallback(void *widget) {
+    TerminalMdiSubWindow* terminalWindow = (TerminalMdiSubWindow*)widget;
 
     while(terminalWindow->isRunning) {
 
     // Get a full variable list.
     std::vector<OctaveLink::VariableMetaData> variables = oct_octave_server.variableInfoList();
     if(variables.size()) {
         // TODO: Update variable list model data.
     }
diff --git a/gui//src/TerminalMdiSubWindow.h b/gui//src/TerminalMdiSubWindow.h
--- a/gui//src/TerminalMdiSubWindow.h
+++ b/gui//src/TerminalMdiSubWindow.h
@@ -1,19 +1,36 @@
+/* Quint - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
 #ifndef TERMINALMDISUBWINDOW_H
 #define TERMINALMDISUBWINDOW_H
 
 #include <QMdiSubWindow>
 #include <QTreeView>
 #include <QListView>
 #include <QStatusBar>
 #include "QTerminalWidget.h"
 #include "OctaveLink.h"
 
-
 // Octave includes
 #undef PACKAGE_BUGREPORT
 #undef PACKAGE_NAME
 #undef PACKAGE_STRING
 #undef PACKAGE_TARNAME
 #undef PACKAGE_VERSION
 #undef PACKAGE_URL
 #include "octave/config.h"
@@ -43,38 +60,39 @@ extern OCTINTERP_API void switch_to_buff
 extern OCTINTERP_API FILE *get_input_from_stdin (void);
 
 // System
 #include <termios.h>
 #include <sys/types.h>
 #include <signal.h>
 #include <sys/types.h>
 #include <sys/wait.h>
-
 #include <iostream>
 #include <vector>
 #include "pty.h"
 
 class TerminalMdiSubWindow : public QMdiSubWindow {
     Q_OBJECT
 public:
+    static void* octaveMainWrapper(void *widget);
+    static void* octaveCallback(void *widget);
+
     void updateHistory(string_vector historyEntries);
-    static void* octaveCallback(void *octaveUI);
     TerminalMdiSubWindow(QWidget *parent = 0);
     ~TerminalMdiSubWindow();
 
 private slots:
 
 private:
     void establishOctaveLink();
     void constructWindow();
     QTerminalWidget *m_terminalWidget;
     QTreeView *m_variableView;
     QListView *m_commandHistoryView;
     QStatusBar *m_statusBar;
     OctaveLink *m_octaveLink;
 
-    // Threads for running octave and managing the data interaction
-    pthread_t octave_thread;
-    pthread_t octave_monitor_thread;
+    // Threads for running octave and managing the data interaction.
+    pthread_t m_octaveThread;
+    pthread_t m_octaveCallbackThread;
     bool isRunning;
 };
 #endif // TERMINALMDISUBWINDOW_H
