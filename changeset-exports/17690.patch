# HG changeset patch
# User Rik <rik@octave.org>
# Date 1382131529 25200
#      Fri Oct 18 14:25:29 2013 -0700
# Node ID 79d6af38b96fc3a6a7177aec9dd98280f199a0c0
# Parent  dd8db3f1c1dab6a5f2eceaf72a4a78a61253ef1e
Backout cset 1d41b1910531 now that problem with real/image for sparse fixed.

* scripts/testfun/assert.m: Undo special treatment of sparse matrices.

diff --git a/scripts/testfun/assert.m b/scripts/testfun/assert.m
--- a/scripts/testfun/assert.m
+++ b/scripts/testfun/assert.m
@@ -279,23 +279,18 @@ function assert (cond, varargin)
         exclude = errseen | ! isfinite (A_null_real) & ! isfinite (B_null_real);
         A_null_real(exclude) = 0;
         B_null_real(exclude) = 0;
         A_null_imag = imag (A);
         B_null_imag = imag (B);
         exclude = errseen | ! isfinite (A_null_imag) & ! isfinite (B_null_imag);
         A_null_imag(exclude) = 0;
         B_null_imag(exclude) = 0;
-        if (issparse (A) || issparse (B))
-          A_null = sparse (complex (full (A_null_real), full (A_null_imag)));
-          B_null = sparse (complex (full (B_null_real), full (B_null_imag)));
-        else
-          A_null = complex (A_null_real, A_null_imag);
-          B_null = complex (B_null_real, B_null_imag);
-        endif
+        A_null = complex (A_null_real, A_null_imag);
+        B_null = complex (B_null_real, B_null_imag);
         if (isscalar (tol))
           mtol = tol * ones (size (A));
         else
           mtol = tol;
         endif
 
         k = (mtol == 0);
         erridx = find ((A_null != B_null) & k);
