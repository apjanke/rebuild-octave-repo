# HG changeset patch
# User Kai Habel <kai.habel@gmx.de>
# Date 1295551890 -3600
#      Thu Jan 20 20:31:30 2011 +0100
# Node ID c4c2cd67c4400fc1ba71968e07b40e4a22211981
# Parent  21dec063e89fcf712c3ceb7c8af7d872f9db8311
Fixes for ui file functions, bug#32190

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2010-01-20  Petr Mikulik  <mikulik@physics.muni.cz>
+
+	* plot/uigetdir.m: Use correct variable name for argument check.
+	Remove unneeded white spaces.
+	* plot/uigetfile.m, plot/uiputfile.m: Remove unneeded white spaces.
+	Bug #32190.
+
 2011-01-20  John W. Eaton  <jwe@octave.org>
 
 	* plot/ginput.m, plot/gnuplot_drawnow.m, plot/uiputfile.m,
 	plot/subplot.m, plot/axis.m, plot/colorbar.m,
 	plot/__print_parse_opts__.m, plot/uigetdir.m,
 	plot/__fltk_print__.m, plot/print.m, plot/__gnuplot_print__.m,
 	plot/uigetfile.m, plot/private/__actual_axis_position__.m:
 	Update for backend -> graphics_toolkit change.
diff --git a/scripts/plot/uigetdir.m b/scripts/plot/uigetdir.m
--- a/scripts/plot/uigetdir.m
+++ b/scripts/plot/uigetdir.m
@@ -28,27 +28,25 @@
 ## Author: Kai Habel
 
 function dirname = uigetdir (init_path = pwd, dialog_name = "Choose directory?")
 
   if (nargin > 2)
     print_usage ();
   endif
 
-  if (!ischar(init_path) || !ischar(name))
+  if (!ischar(init_path) || !ischar(dialog_name))
     error ("uigetdir: INIT_PATH and DIALOG_NAME must be string arguments");
   endif
   
-
   if (any (strcmp (available_graphics_toolkits (), "fltk")))
       if (!isdir (init_path))
         init_path = fileparts (init_path);
       endif
       dirname = __fltk_uigetfile__ ("", dialog_name, init_path, [240, 120], "dir");
   else
     error ("uigetdir: fltk graphics toolkit required");
   endif
 
 endfunction
 
-
-%!demo 
+%!demo
 %! uigetdir(pwd, "Select Directory")
diff --git a/scripts/plot/uigetfile.m b/scripts/plot/uigetfile.m
--- a/scripts/plot/uigetfile.m
+++ b/scripts/plot/uigetfile.m
@@ -38,31 +38,31 @@
 ## @item A single file extension "*.ext"
 ## Example: @code{uigetfile ("*.ext")}
 ##
 ## @item A 2-column cell array
 ## containing the file extension in the first column and a brief description
 ## in the second column.
 ## Example: @code{uigetfile (@{"*.ext", "My Description";"*.xyz",
 ## "XYZ-Format"@})}
-## 
+##
 ## The filter string can also contain a semicolon separated list of filter
 ## extensions.
 ## Example: @code{uigetfile (@{"*.gif;*.png;*.jpg", "Supported Picture
 ## Formats"@})}
 ## @end table
 ##
 ## @var{dialog_name} can be used to customize the dialog title.
 ## If @var{default_file} is given it is selected in the GUI dialog. 
 ## If in addtion a path is given it is also used as current path.
 ## 
 ## The screen position of the GUI dialog can be set using the "Position" key
 ## and a 2-element vector containing the pixel coordinates.
 ## Two or more files can be selected when setting the "Multiselect" key to "on".
-## In that case @var{fname} is a cell array containing the files. 
+## In that case @var{fname} is a cell array containing the files.
 ## @end deftypefn
 
 ## Author: Kai Habel
 
 function [retfile, retpath, retindex] = uigetfile (varargin)
 
   if (nargin <= 7)
 
@@ -124,17 +124,17 @@ function [retfile, retpath, retindex] = 
       ## check for even number of remaining arguments, prop/value pair(s)
       if (rem (nargin - stridx + 1, 2))
         error ("uigetfile: expecting property/value pairs");
       endif
 
       for i = stridx : 2 : nargin
         prop = varargin{i};
         val = varargin{i + 1};
-        if (strncmp (tolower (prop), "position", 8)) 
+        if (strncmp (tolower (prop), "position", 8))
           if (ismatrix (val) && length(val) == 2)
             outargs{4} = val;
           else
             error ("uigetfile: expecting 2-element vector for position argument")
           endif
         elseif (strncmp (tolower (prop), "multiselect", 11))
           if (ischar (val))
             outargs{5} = tolower (val);
@@ -146,18 +146,17 @@ function [retfile, retpath, retindex] = 
         endif
       endfor
     endif
   else
     error ("uigetfile: number of input arguments must be less than eight");
   endif
 
   if (any (cellfun(@(x)strcmp (x, "fltk"), available_graphics_toolkits ())))
-    [retfile, retpath, retindex] = __fltk_uigetfile__ (outargs{:});  
+    [retfile, retpath, retindex] = __fltk_uigetfile__ (outargs{:});
   else
     error ("uigetfile: fltk graphics toolkit required.");
   endif
 
-         
 endfunction
 
 %!demo 
 %! uigetfile({"*.gif;*.png;*.jpg", "Supported Picture Formats"})
diff --git a/scripts/plot/uiputfile.m b/scripts/plot/uiputfile.m
--- a/scripts/plot/uiputfile.m
+++ b/scripts/plot/uiputfile.m
@@ -50,17 +50,16 @@
 ## If @var{default_file} is given it is preselected in the GUI dialog. 
 ## If in addtion a path is given it is also used as current path.
 ## @end deftypefn
 
 ## Author: Kai Habel
 
 function [retfile, retpath, retindex] = uiputfile (varargin)
 
-
   if (nargin <= 3)
 
     defaultvals = {"All Files(*)", #FLTK File Filter
                    "Save File?",   #Dialog Title
                    pwd,            #FLTK default file name
                    [240, 120],     #Dialog Position (pixel x/y)
                    "create"};
 
@@ -71,31 +70,31 @@ function [retfile, retpath, retindex] = 
 
     if (nargin > 0)
       file_filter = varargin{1};
       outargs{1} = __fltk_file_filter__ (file_filter);
       if (ischar (file_filter))
         outargs{3} = file_filter;
       endif
     endif
-    
+
     if (nargin > 1)
       outargs{2} = varargin{2};
     endif
 
     if (nargin > 2)
       outargs{3} = varargin{3};
     endif
 
   else
     error ("uiputfile: number of input arguments must be less than four.");
   endif
 
   if (any (cellfun(@(x)strcmp (x, "fltk"), available_graphics_toolkits ())))
-    [retfile, retpath, retindex] = __fltk_uigetfile__ (outargs{:});  
+    [retfile, retpath, retindex] = __fltk_uigetfile__ (outargs{:});
   else
     error ("uiputfile: fltk graphics toolkit required");
   endif
 
 endfunction
 
-%!demo 
+%!demo
 %! uiputfile({"*.gif;*.png;*.jpg", "Supported Picture Formats"})
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-20  Kai Habel  <kai.habel@gmx.de>
+
+	* DLD-FUNCTIONS/__init_fltk__.cc (__fltk_uigetfile__): Append file
+	seperator to 2nd return value (file path).
+	Bug #32190.
+
 2011-01-20  John W. Eaton  <jwe@octave.org>
 
 	* oct-obj.h (octave_value_list::octave_value_list): Initialize
 	all data members in initialization list.  From Pascal Dupuis
 	<Pascal.Dupuis@worldonline.be>.
 
 2011-01-20  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/DLD-FUNCTIONS/__init_fltk__.cc b/src/DLD-FUNCTIONS/__init_fltk__.cc
--- a/src/DLD-FUNCTIONS/__init_fltk__.cc
+++ b/src/DLD-FUNCTIONS/__init_fltk__.cc
@@ -2108,17 +2108,17 @@ Undocumented internal function.\n\
             }
           retval(0) = file_cell;
         }
         
       if (multi_type == Fl_File_Chooser::DIRECTORY)
         retval(0) = std::string(fc->value ());
       else
         {
-          retval(1) = std::string(fc->directory ());
+          retval(1) = std::string(fc->directory ()) + sep;
           retval(2) = fc->filter_value();
         }
     }
   
   return retval;
 }
 
 #endif
