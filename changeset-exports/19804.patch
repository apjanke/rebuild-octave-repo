# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1424526403 -3600
#      Sat Feb 21 14:46:43 2015 +0100
# Node ID dfa608a9c36e45ae0b6fdc21b94e769b8bb24a75
# Parent  415864f5b85f0f16e4fc0c9fdc517e76c3bc1583
fix issue when saving a new modified file while closing

* file-editor-tab.cc (show_dialog): fix wrong window modality;
  (check_file_modified): removed not working code for bringing tab on top;
  (save_file_as): show modal dialog for saving unnamed files

* file-editor.cc (check_closing): removed obsolete code

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1231,30 +1231,27 @@ file_editor_tab::handle_copy_available (
 void
 file_editor_tab::show_dialog (QDialog *dlg, bool modal)
 {
   dlg->setAttribute (Qt::WA_DeleteOnClose);
   if (modal)
     dlg->exec ();
   else
     {
-      dlg->setWindowModality (Qt::WindowModal);
+      dlg->setWindowModality (Qt::NonModal);
       dlg->show ();
     }
 }
 
 int
 file_editor_tab::check_file_modified ()
 {
   int decision = QMessageBox::Yes;
   if (_edit_area->isModified ())
     {
-      activateWindow ();
-      raise ();
-      setFocus ();
       // File is modified but not saved, ask user what to do.  The file
       // editor tab can't be made parent because it may be deleted depending
       // upon the response.  Instead, change the _edit_area to read only.
       QMessageBox::StandardButtons buttons = QMessageBox::Save |
                                              QMessageBox::Discard |
                                              QMessageBox::Cancel;
 
       // For now, just a warning message about closing a tab that has been
@@ -1623,17 +1620,17 @@ file_editor_tab::save_file_as (bool remo
                this, SLOT (handle_save_file_as_answer_cancel ()));
     }
   else
     {
       connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                this, SLOT (handle_save_file_as_answer (const QString&)));
     }
 
-  show_dialog (fileDialog, false);
+  show_dialog (fileDialog, ! valid_file_name ());
 }
 
 void
 file_editor_tab::handle_combo_eol_current_index (int index)
 {
   _save_as_desired_eol = static_cast<QsciScintilla::EolMode> (index);
 }
 
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -78,17 +78,17 @@ file_editor::check_closing (void)
   emit fetab_file_name_query (0);
 
   // save file names (even if last session will not be restored next time)
   QStringList fetFileNames;
   for (editor_tab_map_const_iterator p = editor_tab_map.begin ();
        p != editor_tab_map.end (); p++)
     {
       QString file_name = p->first;
-      if (!file_name.isEmpty () && file_name.at (file_name.size () - 1) != '/')
+      if (!file_name.isEmpty ())
         fetFileNames.append (p->first);  // do not append unnamed files
     }
 
   settings->setValue ("editor/savedSessionTabs", fetFileNames);
   settings->sync ();
 
   // Save all tabs with confirmation.
   file_editor_tab::reset_cancel ();
