# HG changeset patch
# User jwe
# Date 1186772855 0
#      Fri Aug 10 19:07:35 2007 +0000
# Node ID 3fe394f8502b85b1181128d2150b0b4f39538142
# Parent  56a7de3f6451ef0b0eccddb865d51045f0305d66
[project @ 2007-08-10 19:07:34 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2007-08-10  John W. Eaton  <jwe@octave.org>
+
+	* pt-idx.cc (tree_index_expression::get_struct_index): Improve
+	error message.
+	* ov-struct.cc (Fstruct, Fcell2struct): Trap invalid field names here.
+
 2007-08-10  Peter A. Gustafson  <petegus@umich.edu>
 
 	* graphics.h, graphics.cc (axes::axes_properties): New properties,
 	xaxislocation and yaxislocation.
 
 2007-08-10  Kai Habel  <kai.habel@gmx.de>
 
 	* graphics.cc, graphics.h (patch): New class.
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -30,16 +30,17 @@ 02110-1301, USA.
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-lvalue.h"
 #include "ov-list.h"
 #include "ov-struct.h"
 #include "unwind-prot.h"
+#include "utils.h"
 #include "variables.h"
 
 #include "Array-util.h"
 
 #include "byte-swap.h"
 #include "ls-oct-ascii.h"
 #include "ls-oct-binary.h"
 #include "ls-hdf5.h"
@@ -611,16 +612,22 @@ array with the specified field names.\n\
     {
       // Get key.
 
       std::string key (args(i).string_value ());
 
       if (error_state)
 	return retval;
 
+      if (! valid_identifier (key))
+	{
+	  error ("struct: invalid structure field name `%s'", key.c_str ());
+	  return retval;
+	}
+
       // Value may be v, { v }, or { v1, v2, ... }
       // In the first two cases, we need to create a cell array of
       // the appropriate dimensions filled with v.  In the last case, 
       // the cell array has already been determined to be of the
       // correct dimensions.
 
       if (args(i+1).is_cell ()) 
 	{
@@ -936,16 +943,23 @@ A(1)\n\
 			  else
 			    {
 			      field_str = field_char.row_as_string (i);
 
 			      if (error_state)
 				return retval;
 			    }
 
+			  if (! valid_identifier (field_str))
+			    {
+			      error ("cell2struct: invalid field name `%s'",
+				     field_str.c_str ());
+			      break;
+			    }
+
 			  map.reshape (value_dv);
 
 			  map.assign (field_str, c_value);
 			}
 
 		      if (! error_state)
 			retval = map;
 		    }
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -199,17 +199,17 @@ tree_index_expression::get_struct_index
 	{
 	  octave_value t = df->rvalue ();
 
 	  if (! error_state)
 	    {
 	      fn = t.string_value ();
 
 	      if (! valid_identifier (fn))
-		::error ("invalid structure field name");
+		::error ("invalid structure field name `%s'", fn.c_str ());
 	    }
 	}
       else
 	panic_impossible ();
     }
 
   return fn;
 }
