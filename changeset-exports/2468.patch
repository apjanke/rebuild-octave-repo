# HG changeset patch
# User jwe
# Date 847165970 0
#      Tue Nov 05 03:52:50 1996 +0000
# Node ID 3db30620918e00d9597b3420915e1c2ba3d93ed7
# Parent  760f56d484caf98c3d18374b20ed603320f5d4bd
[project @ 1996-11-05 03:52:10 by jwe]

diff --git a/liboctave/CmplxQRP.cc b/liboctave/CmplxQRP.cc
--- a/liboctave/CmplxQRP.cc
+++ b/liboctave/CmplxQRP.cc
@@ -140,17 +140,17 @@ ComplexQRP::ComplexQRP (const ComplexMat
 
       F77_XFCN (zungqr, ZUNGQR, (m, m, min_mn, tmp_data, m, ptau,
 				 pwork, lwork, info));
 
       if (f77_exception_encountered)
 	(*current_liboctave_error_handler) ("unrecoverable error in zungqr");
       else
 	{
-	  q = ComplexMatrix (tmp_data, m, m);
+	  q = A_fact;
 	  q.resize (m, n2);
 	}
     }
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/liboctave/dbleQRP.cc b/liboctave/dbleQRP.cc
--- a/liboctave/dbleQRP.cc
+++ b/liboctave/dbleQRP.cc
@@ -135,17 +135,17 @@ QRP::QRP (const Matrix& a, QR::type qr_t
 
       F77_XFCN (dorgqr, DORGQR, (m, m, min_mn, tmp_data, m, ptau,
 				 pwork, lwork, info));
 
       if (f77_exception_encountered)
 	(*current_liboctave_error_handler) ("unrecoverable error in dorgqr");
       else
 	{
-	  q = Matrix (tmp_data, m, m);
+	  q = A_fact;
 	  q.resize (m, n2);
 	}
     }
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -360,17 +360,17 @@ public:
   virtual octave_value convert_to_str (void) const
     { return rep->convert_to_str (); }
 
   virtual void convert_to_row_or_column_vector (void)
     { rep->convert_to_row_or_column_vector (); }
 
   void print (bool pr_as_read_syntax = false);
 
-  virtual void print (ostream& os, bool pr_as_read_syntax)
+  virtual void print (ostream& os, bool pr_as_read_syntax = false)
     { rep->print (os, pr_as_read_syntax); }
 
   void print_with_name (const string& name, bool print_padding = true);
 
   void print_with_name (ostream& os, const string& name,
 			bool print_padding = true);
 
   virtual int type_id (void) const { return rep->type_id (); }
diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -318,17 +318,17 @@ public:
 
   // Increment or decrement this constant.
 
   void increment (void) { val.increment (); }
 
   void decrement (void) { val.decrement (); }
 
   void print (void);
-  void print (ostream& os, bool pr_as_read_syntax)
+  void print (ostream& os, bool pr_as_read_syntax = false)
     { val.print (os, pr_as_read_syntax); }
 
   void print_with_name (const string& name, bool print_padding = true);
   void print_with_name (ostream& os, const string& name,
 			bool print_padding = true);
 
   octave_value eval (bool print_result);
 
