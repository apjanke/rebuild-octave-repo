# HG changeset patch
# User jwe
# Date 819443201 0
#      Wed Dec 20 07:06:41 1995 +0000
# Node ID e846e361a26571b94e250eb63ee3eefaf4f40ee8
# Parent  23aa282707e8eca5069604447aa4b329dc5e2215
[project @ 1995-12-20 06:59:12 by jwe]

diff --git a/src/arith-ops.cc b/src/arith-ops.cc
--- a/src/arith-ops.cc
+++ b/src/arith-ops.cc
@@ -23,17 +23,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cctype>
 #include <cmath>
 
-#include <Complex.h>
+#include "oct-cmplx.h"
 
 #include "arith-ops.h"
 #include "error.h"
 #include "gripes.h"
 #include "mappers.h"
 #include "tree-const.h"
 #include "unwind-prot.h"
 #include "user-prefs.h"
diff --git a/src/arith-ops.h b/src/arith-ops.h
--- a/src/arith-ops.h
+++ b/src/arith-ops.h
@@ -19,19 +19,20 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_arith_ops_h)
 #define octave_arith_ops_h 1
 
+#include "oct-cmplx.h"
+
 #include "tree-expr.h"
 
-class Complex;
 class Matrix;
 class ComplexMatrix;
 class tree_constant;
 
 extern tree_constant do_unary_op (double d, tree_expression::type t);
 
 extern tree_constant do_unary_op (const Matrix& a, tree_expression::type t);
 
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -23,17 +23,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cmath>
 #include <cfloat>
 
-#include <Complex.h>
+#include "oct-cmplx.h"
 
 #include "defun.h"
 #include "error.h"
 #include "f77-uscore.h"
 #include "mappers.h"
 #include "missing-math.h"
 #include "sysdep.h"
 #include "utils.h"
diff --git a/src/mappers.h b/src/mappers.h
--- a/src/mappers.h
+++ b/src/mappers.h
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_mappers_h)
 #define octave_mappers_h 1
 
-class Complex;
+#include "oct-cmplx.h"
 
 typedef double (*d_d_Mapper)(double);
 typedef double (*d_c_Mapper)(const Complex&);
 typedef Complex (*c_c_Mapper)(const Complex&);
 
 // If can_return_complex_for_real_arg is 1, lower_limit and
 // upper_limit specify the range of values for which a real arg
 // returns a real value.  Outside that range, we have to convert args
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -147,30 +147,19 @@ charMatrix octave_argv;
 
 // Nonzero means that input is coming from a file that was named on
 // the command line.
 int input_from_command_line_file = 1;
 
 // Top level context (?)
 jmp_buf toplevel;
 
-// This is not really the right place to do this...
-typedef void (*one_arg_error_handler_t) (const char*);
-extern one_arg_error_handler_t set_Complex_error_handler
-  (one_arg_error_handler_t f);
-
 // This is from readline's paren.c:
 extern int rl_blink_matching_paren;
 
-static void
-octave_Complex_error_handler (const char* msg)
-{
-  warning (msg);
-}
-
 // Nonzero means we read ~/.octaverc and ./.octaverc.
 // (--norc; --ignore-init-file; -f)
 static int read_init_files = 1;
 
 // Nonzero means we printed messages about reading startup files.
 static int reading_startup_message_printed = 0;
 
 // Nonzero means we don't print the usual startup message.
@@ -315,21 +304,19 @@ parse_and_execute (FILE *f, int print)
   YY_BUFFER_STATE new_buf = create_buffer (f);
 
   add_unwind_protect (restore_input_buffer, (void *) old_buf);
   add_unwind_protect (delete_input_buffer, (void *) new_buf);
 
   switch_to_buffer (new_buf);
 
   unwind_protect_int (using_readline);
-  unwind_protect_int (saving_history);
   unwind_protect_int (input_from_command_line_file);
 
   using_readline = 0;
-  saving_history = 0;
   input_from_command_line_file = 0;
 
   unwind_protect_ptr (curr_sym_tab);
 
   int retval;
   do
     {
       reset_parser ();
@@ -424,21 +411,24 @@ script file but without requiring the fi
 
 // Initialize by reading startup files.
 
 static void
 execute_startup_files (void)
 {
   begin_unwind_frame ("execute_startup_files");
 
-  unwind_protect_int (user_pref.echo_executing_commands);
-  unwind_protect_int (input_from_startup_file);
+  // XXX FIXME XXX -- need to make it possible to set this in startup
+  // files.
 
+  unwind_protect_int (input_from_startup_file);
+  unwind_protect_int (user_pref.echo_executing_commands);
+
+  input_from_startup_file = 1;
   user_pref.echo_executing_commands = ECHO_OFF;
-  input_from_startup_file = 1;
 
   int verbose = (verbose_flag && ! inhibit_startup_message);
 
   // Execute commands from the site-wide configuration file.  First
   // from the file $(prefix)/lib/octave/site/m/octaverc (if it exists),
   // then from the file $(prefix)/lib/octave/$(version)/m/octaverc (if
   // it exists).
 
@@ -548,18 +538,16 @@ print_version_and_exit (void)
 {
   cout << OCTAVE_NAME_AND_VERSION << "\n";
   exit (0);
 }
 
 static void
 initialize_error_handlers ()
 {
-  set_Complex_error_handler (octave_Complex_error_handler);
-
   set_liboctave_error_handler (error);
 }
 
 // What happens on --traditional.
 
 static void
 maximum_braindamage (void)
 {
@@ -665,30 +653,28 @@ main (int argc, char **argv)
 	  break;
 
 	default:
 	  usage ();
 	  break;
 	}
     }
 
-#if defined (HAVE_ATEXIT) || (HAVE_ON_EXIT)
+#if defined (HAVE_ATEXIT) || defined (HAVE_ON_EXIT)
   // Make sure we clean up when we exit.  If we don't have atexit or
   // on_exit, we're going to leave some junk files around if we exit
   // abnormally.
   atexit (cleanup_tmp_files);
 #endif
 
   // These can come after command line args since none of them set any
   // defaults that might be changed by command line options.
 
   install_signal_handlers ();
 
-  initialize_history ();
-
   initialize_file_io ();
 
   initialize_symbol_tables ();  
 
   install_builtins ();
 
   initialize_readline ();
 
@@ -699,21 +685,19 @@ main (int argc, char **argv)
 
   if (traditional)
     maximum_braindamage ();
 
   bind_builtin_variable ("echo_executing_commands",
 			 (double) echo_commands);
 
   if (read_init_files)
-    {
-      saving_history = 0;
-      execute_startup_files ();
-      saving_history = 1;
-    }
+    execute_startup_files ();
+
+  initialize_history ();
 
   if (! inhibit_startup_message && reading_startup_message_printed)
     cout << endl;
 
   // Avoid counting commands executed from startup files.
 
   current_command_number = 1;
 
@@ -787,17 +771,17 @@ main (int argc, char **argv)
     {
       raw_mode (0);
 
       cout << "\n";
     }
 
   can_interrupt = 1;
 
-  octave_set_signal_handler (SIGINT, saved_sigint_handler);
+  catch_interrupts ();
 
   // The big loop.
 
   int retval;
   do
     {
       curr_sym_tab = top_level_sym_tab;
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -27,21 +27,20 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cmath>
 #include <cstring>
 
 #include <iostream.h>
 #include <strstream.h>
 
-#include <Complex.h>
-
 #include "CMatrix.h"
 #include "Range.h"
 #include "dMatrix.h"
+#include "oct-cmplx.h"
 
 #include "defun.h"
 #include "error.h"
 #include "help.h"
 #include "mappers.h"
 #include "pager.h"
 #include "pr-output.h"
 #include "sysdep.h"
diff --git a/src/pr-output.h b/src/pr-output.h
--- a/src/pr-output.h
+++ b/src/pr-output.h
@@ -21,18 +21,19 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #if !defined (octave_pr_output_h)
 #define octave_pr_output_h 1
 
 class ostream;
 
+#include "oct-cmplx.h"
+
 class Matrix;
-class Complex;
 class ComplexMatrix;
 class charMatrix;
 class Range;
 
 extern void octave_print_internal (ostream& os, double d,
 				   int pr_as_read_syntax = 0);
 
 extern void octave_print_internal (ostream& os, const Matrix& m,
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -210,16 +210,22 @@ sigpipe_handler (int /* sig */)
 
 #if RETSIGTYPE == void
   return;
 #else
   return 0;
 #endif
 }
 
+void
+catch_interrupts (void)
+{
+  octave_set_signal_handler (SIGINT, sigint_handler);
+}
+
 // Install all the handlers for the signals we might care about.
 
 void
 install_signal_handlers (void)
 {
   set_new_handler (octave_new_handler);
 
 #ifdef SIGABRT
diff --git a/src/sighandlers.h b/src/sighandlers.h
--- a/src/sighandlers.h
+++ b/src/sighandlers.h
@@ -42,16 +42,18 @@ extern int pipe_handler_error_count;
 
 // Nonzero means we can be interrupted.
 extern int can_interrupt;
 
 extern sig_handler *octave_set_signal_handler (int, sig_handler *);
 
 extern void install_signal_handlers (void);
 
+extern void catch_interrupts (void);
+
 // This is taken directly from Emacs 19:
 
 #ifndef SYS_SIGLIST_DECLARED
 extern char *sys_siglist[];
 #endif
 
 #if defined (HAVE_SIGACTION) && defined (HAVE_SIGPROCMASK)
 #if defined (HAVE_SIGPENDING) && defined (HAVE_SIGSUSPEND)
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -33,18 +33,16 @@ Software Foundation, 59 Temple Place - S
 #include <iostream.h>
 #include <strstream.h>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
-#include <Complex.h>
-
 #if defined (HAVE_TERMIOS_H)
 #include <termios.h>
 #elif defined (HAVE_TERMIO_H)
 #include <termio.h>
 #elif defined (HAVE_SGTTY_H)
 #include <sgtty.h>
 #else
 LOSE! LOSE!
@@ -53,16 +51,18 @@ LOSE! LOSE!
 #include <readline/tilde.h>
 
 #ifndef HAVE_STRNCASECMP
 extern "C" int strncasecmp (const char*, const char*, size_t);
 #endif
 
 #include "SLStack.h"
 
+#include "oct-cmplx.h"
+
 #include "defun.h"
 #include "dirfns.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "input.h"
 #include "mappers.h"
 #include "oct-obj.h"
diff --git a/src/xdiv.cc b/src/xdiv.cc
--- a/src/xdiv.cc
+++ b/src/xdiv.cc
@@ -22,20 +22,19 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cassert>
 
-#include <Complex.h>
-
 #include "CMatrix.h"
 #include "dMatrix.h"
+#include "oct-cmplx.h"
 
 #include "error.h"
 #include "tree-const.h"
 #include "xdiv.h"
 
 static inline int
 result_ok (int info, double rcond, int warn = 1)
 {
diff --git a/src/xdiv.h b/src/xdiv.h
--- a/src/xdiv.h
+++ b/src/xdiv.h
@@ -19,17 +19,18 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_xdiv_h)
 #define octave_xdiv_h 1
 
-class Complex;
+#include "oct-cmplx.h"
+
 class Matrix;
 class ComplexMatrix;
 class tree_constant;
 
 extern tree_constant xdiv (const Matrix& a, const Matrix& b);
 extern tree_constant xdiv (const Matrix& a, const ComplexMatrix& b);
 extern tree_constant xdiv (const ComplexMatrix& a, const Matrix& b);
 extern tree_constant xdiv (const ComplexMatrix& a, const ComplexMatrix& b);
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -23,24 +23,23 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cassert>
 #include <climits>
 
-#include <Complex.h>
-
 #include "CColVector.h"
 #include "CDiagMatrix.h"
 #include "CMatrix.h"
 #include "EIG.h"
 #include "dDiagMatrix.h"
 #include "dMatrix.h"
+#include "oct-cmplx.h"
 
 #include "error.h"
 #include "tree-const.h"
 #include "utils.h"
 #include "xpow.h"
 
 // This function also appears in tree-const.cc.  Maybe it should be a
 // member function of the Matrix class.
diff --git a/src/xpow.h b/src/xpow.h
--- a/src/xpow.h
+++ b/src/xpow.h
@@ -19,17 +19,18 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_xpow_h)
 #define octave_xpow_h 1
 
-class Complex;
+#include "oct-cmplx.h"
+
 class Matrix;
 class ComplexMatrix;
 class tree_constant;
 
 extern tree_constant xpow (double a, double b);
 extern tree_constant xpow (double a, const Matrix& b);
 extern tree_constant xpow (double a, const Complex& b);
 extern tree_constant xpow (double a, const ComplexMatrix& b);
