# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1259046128 -3600
#      Tue Nov 24 08:02:08 2009 +0100
# Branch release-3-2-x
# Node ID a14e1561350950029a878dfb567852eab89bf6d6
# Parent  52d8ad5d28d6925ee65331f03344928d89ccbb23
gnuplot_drawnow.m: Support gnuplot's dumb terminal.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-08  Petr Mikulik <mikulik@physics.muni.cz>
+
+	* plot/gnuplot_drawnow.m: Support gnuplot's dumb terminal.
+
 2009-11-02  Stefan Hepp  <stefan@stefant.org>
 
 	* plot/gnuplot_drawnow.m (gnuplot_default_term): Don't set term to
 	x11 unless DISPLAY is set.
 
 2009-11-11  John W. Eaton  <jwe@octave.org>
 
 	* plot/stairs.m (__stairs__): Correct nargin check.  New demos.
diff --git a/scripts/plot/gnuplot_drawnow.m b/scripts/plot/gnuplot_drawnow.m
--- a/scripts/plot/gnuplot_drawnow.m
+++ b/scripts/plot/gnuplot_drawnow.m
@@ -82,19 +82,39 @@ function gnuplot_drawnow (h, term, file,
     ##  Graphics terminal for display.
     plot_stream = get (h, "__plot_stream__");
     if (isempty (plot_stream))
       plot_stream = __gnuplot_open_stream__ (2, h);
       new_stream = true;
     else
       new_stream = false;
     endif
-    enhanced = gnuplot_set_term (plot_stream (1), new_stream, h);
+    term = gnuplot_default_term ();
+    if (strcmp (term, "dumb"))
+      ## popen2 eats stdout of gnuplot, use temporary file instead
+      dumb_tmp_file = tmpnam ();
+      enhanced = gnuplot_set_term (plot_stream (1), new_stream, h, ...
+                                   term, dumb_tmp_file);
+    else
+      enhanced = gnuplot_set_term (plot_stream (1), new_stream, h, term);
+    end
     __go_draw_figure__ (h, plot_stream (1), enhanced, mono, 0);
     fflush (plot_stream (1));
+    if (strcmp (term, "dumb"))
+      fid = -1;
+      while (fid < 0)
+        pause (0.1);
+        fid = fopen (dumb_tmp_file, 'r');
+      endwhile
+      ## reprint the plot on screen
+      [a, count] = fscanf (fid, '%c', Inf);
+      puts (a);
+      fclose (fid);
+      unlink (dumb_tmp_file);
+    endif
   else
     print_usage ();
   endif
 
 endfunction
 
 function implicit_margin = gnuplot_implicit_margin (term, opts_str)
   ## gnuplot has an implicit margin of 50pts for PS output.
@@ -138,18 +158,18 @@ function [enhanced, implicit_margin] = g
     if (enhanced)
       enh_str = "enhanced";
     else
       enh_str = "";
     endif
 
     if (! isempty (h) && isfigure (h))
 
-      ## Generate gnuoplot title string for backend plot windows.
-      if (output_to_screen (term))
+      ## Generate gnuplot title string for backend plot windows.
+      if (output_to_screen (term) && ~strcmp (term, "dumb"))
         fig.numbertitle = get (h, "numbertitle");
         fig.name = get (h, "name");
         if (strcmpi (get (h, "numbertitle"), "on"))
           title_str = sprintf ("Figure %d", h);
         else
           title_str = "";
         endif
         if (! isempty (fig.name) && ! isempty (title_str))
@@ -234,16 +254,25 @@ function [enhanced, implicit_margin] = g
                 gnuplot_pos = max (gnuplot_pos, 1);
                 size_str = sprintf ("%s position %d,%d", size_str, 
                                     gnuplot_pos(1), gnuplot_pos(2));
               endif
             endif
           elseif (strncmpi (term, "aqua", 3))
             ## Aqua has size, but the format is different.
             size_str = sprintf ("size %d %d", gnuplot_size);
+          elseif (strncmpi (term, "dumb", 3))
+            new_stream = 1;
+            if (~isempty (getenv ("COLUMNS")) && ~isempty (getenv ("LINES")))
+              ## Let dumb use full text screen size.
+              size_str = ["size ", getenv("COLUMNS"), " ", getenv("LINES")];
+            else
+	      ## Use the gnuplot default.
+              size_str = "";
+            end
           elseif (strncmpi (term, "fig", 3))
             ## Fig also has size, but the format is different.
             size_str = sprintf ("size %.15g %.15g", gnuplot_size);
           elseif (any (strncmpi (term, {"corel", "hpgl"}, 3)))
             ## The size for corel and hpgl are goes at the end (implicit).
             size_str = sprintf ("%.15g %.15g", gnuplot_size);
           elseif (any (strncmpi (term, {"dxf"}, 3)))
             ## DXF uses autocad units.
@@ -285,17 +314,17 @@ function [enhanced, implicit_margin] = g
       ## size_str comes after other options to permit specification of
       ## the canvas size for terminals cdr/corel.
       term_str = sprintf ("%s %s", term_str, size_str);
     endif
     ## Work around the gnuplot feature of growing the x11 window and
     ## flickering window (x11, windows, & wxt) when the mouse and
     ## multiplot are set in gnuplot.
     fputs (plot_stream, "unset multiplot;\n");
-    flickering_terms = {"x11", "windows", "wxt"};
+    flickering_terms = {"x11", "windows", "wxt", "dumb"};
     if (! any (strcmp (term, flickering_terms))
         || numel (findall (h, "type", "axes")) > 1
         || numel (findall (h, "type", "image")) > 0)
       fprintf (plot_stream, "%s\n", term_str);
       if (nargin == 5)
         if (! isempty (file))
           fprintf (plot_stream, "set output '%s';\n", file);
         endif
@@ -310,31 +339,30 @@ function [enhanced, implicit_margin] = g
       endif
     endif
   else
     ## gnuplot will pick up the GNUTERM environment variable itself
     ## so no need to set the terminal type if not also setting the
     ## figure title, enhanced mode, or position.
   endif
 
-
 endfunction
 
 function term = gnuplot_default_term ()
   term = getenv ("GNUTERM");
   ## If not specified, guess the terminal type.
   if (isempty (term))
     if (ismac ())
       term = "aqua";
     elseif (! isunix ())
       term = "windows";
     elseif (! isempty (getenv ("DISPLAY")))
       term = "x11";
     else
-      term = "unknown";
+      term = "dumb";
     endif
   endif
 endfunction
 
 function [term, opts] = gnuplot_trim_term (string)
   ## Extract the terminal type and terminal options (from print.m)
   string = deblank (string);
   n = strfind (string, ' ');
@@ -358,15 +386,15 @@ function have_enhanced = gnuplot_is_enha
   if (nargin < 1)
     ## Determine the default gnuplot terminal.
     term = gnuplot_default_term ();
   endif
   have_enhanced = any (strncmp (enhanced_terminals, term, min (numel (term), 3)));
 endfunction
 
 function ret = output_to_screen (term)
-  ret = any (strcmpi ({"aqua", "wxt", "x11", "windows", "pm"}, term));
+  ret = any (strcmpi ({"aqua", "dumb", "wxt", "x11", "windows", "pm"}, term));
 endfunction
 
 function ret = term_units_are_pixels (term)
   ret = any (strncmpi ({"emf", "gif", "jpeg", "pbm", "png", "svg"}, term, 3));
 endfunction
 
