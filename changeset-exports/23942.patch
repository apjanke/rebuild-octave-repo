# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1502617262 -7200
#      Sun Aug 13 11:41:02 2017 +0200
# Node ID 9c736cc2ee948eb6fb5561a78caa0d386adee0e0
# Parent  804d60784340ccf9f9a8a5677cddc5ec89bfb993
Fix BIST for eig on Windows 64bit (bug #49470).

* eig.cc: Add comment to clarify intention of test. Change test to produce
different result for methods "chol" and "qz" on Windows 64bit.

diff --git a/libinterp/corefcn/eig.cc b/libinterp/corefcn/eig.cc
--- a/libinterp/corefcn/eig.cc
+++ b/libinterp/corefcn/eig.cc
@@ -573,33 +573,29 @@ The eigenvalues returned by @code{eig} a
 %!test shapes_GEP ([1, 1+i; 1-i, 1], [2, 0; 0, 2]);
 %!test shapes_GEP ([1, 2; 3, 8], [8, 3; 4, 3]);
 %!test shapes_GEP ([1, 2; -1, 1], [3, 3; 1, 2]);
 
 %!test shapes_GEP (single ([1, 1+i; 1-i, 1]),  single ([2, 0; 0, 2]));
 %!test shapes_GEP (single ([1, 2; 3, 8]),  single ([8, 3; 4, 3]));
 %!test shapes_GEP (single ([1, 2; -1, 1]),  single ([3, 3; 1, 2]));
 
+## Check if correct default method is used for symmetric input
 %!function chol_qz_accuracy (A, B, is_qz_accurate, is_chol_accurate)
-%!  [V1,D1] = eig (A,B, 'qz');
-%!  [V2,D2] = eig (A,B); #default is chol
-%!  assert (isequal (A*V1,A*V1*D1), is_qz_accurate)
+%!  [V1, D1] = eig (A, B, 'qz');
+%!  [V2, D2] = eig (A, B); #default is chol
+%!  assert (isequal (A*V1, A*V1*D1), is_qz_accurate)
 %!  assert (isequal (A*V2, A*V2*D2), is_chol_accurate)
 %!endfunction
-
 %!test
-%! minij_100 = gallery('minij',100);
+%! minij_100 = gallery ('minij', 100);
 %! chol_qz_accuracy (minij_100, minij_100, false, true);
-
-%!test
-%! moler_100 = gallery('moler',100);
+%! moler_100 = gallery ('moler', 100);
 %! chol_qz_accuracy (moler_100, moler_100, false, true);
-
-%!test
-%! A = diag([10^-16, 10^-15]);
+%! A = diag([1e-16, 1e-15]);
 %! chol_qz_accuracy (A, A, true, false);
 
 %!error eig ()
 %!error eig (false)
 %!error eig ([1, 2; 3, 4], [4, 3; 2, 1], 1)
 
 %!error <EIG requires same size matrices>
 %!  eig ([1, 2; 3, 4], 2)
