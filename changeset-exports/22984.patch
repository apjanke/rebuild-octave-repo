# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1483103642 18000
#      Fri Dec 30 08:14:02 2016 -0500
# Node ID 45dba14ca7af2a703e28e968718c2095049caefa
# Parent  360801053297cef279995e3cc7ed126891f7a218
* qr.cc: Fix error in previous change.  (bug #49957)

diff --git a/liboctave/numeric/qr.cc b/liboctave/numeric/qr.cc
--- a/liboctave/numeric/qr.cc
+++ b/liboctave/numeric/qr.cc
@@ -141,17 +141,17 @@ namespace octave
     void
     qr<T>::update (const T& u, const T& v)
     {
       warn_qrupdate_once ();
 
       octave_idx_type m = q.rows ();
       octave_idx_type n = r.cols ();
 
-      if (u_rows != m || v_rows != n || u_cols != v_cols)
+      if (u.rows () != m || v.rows () != n || u.cols () != v.cols ())
         (*current_liboctave_error_handler) ("qrupdate: dimensions mismatch");
 
       init (q*r + u * v.hermitian (), get_type ());
     }
 
     template <typename T, typename CV_T>
     static
     T
@@ -254,17 +254,17 @@ namespace octave
       octave_idx_type nj = js.numel ();
       bool dups = false;
       for (octave_idx_type i = 0; i < nj - 1; i++)
         dups = dups && js(i) == js(i+1);
 
       if (dups)
         (*current_liboctave_error_handler) ("qrinsert: duplicate index detected");
 
-      if (u.numel () != m || u_cols != nj)
+      if (u.numel () != m || u.cols () != nj)
         (*current_liboctave_error_handler) ("qrinsert: dimensions mismatch");
 
       if (nj > 0 && (js(0) < 0 || js(nj-1) > n))
         (*current_liboctave_error_handler) ("qrinsert: index out of range");
 
       if (nj > 0)
         {
           T a = q*r;
