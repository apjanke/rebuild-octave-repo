# HG changeset patch
# User Rik <rik@octave.org>
# Date 1348958478 25200
#      Sat Sep 29 15:41:18 2012 -0700
# Node ID 9b9f6dba39e0a791e282d017aa1e6913cb83ee82
# Parent  2d7bdbdd9f5d0d7aaadce335a47a3f92f8c63013
build: Use putenv module from gnulib.

* bootstrap_gnulib.conf: Add putenv to list of modules.

* configure.ac: Remove AC_CHECK_FUNCS call for putenv.

* lo-utils.cc: Add gnulib:: decorator on putenv call.

* libgnu/Makefile.am: Automatically updated by addition of putenv.

diff --git a/build-aux/bootstrap_gnulib.conf b/build-aux/bootstrap_gnulib.conf
--- a/build-aux/bootstrap_gnulib.conf
+++ b/build-aux/bootstrap_gnulib.conf
@@ -51,16 +51,17 @@ gnulib_modules="
   mkfifo
   mkostemp
   mktime
   nanosleep
   nproc
   open
   opendir
   pathmax
+  putenv
   progname
   readdir
   readlink
   realloc-gnu
   rename
   rmdir
   round
   roundf
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1915,17 +1915,17 @@ AC_CHECK_FUNCS([kill lgamma lgammaf lgam
 AC_CHECK_FUNCS([log1p log1pf pipe])
 AC_CHECK_FUNCS([realpath resolvepath roundl])
 AC_CHECK_FUNCS([select setgrent setpwent siglongjmp strsignal])
 AC_CHECK_FUNCS([tempnam tgammaf toascii])
 AC_CHECK_FUNCS([umask uname waitpid])
 AC_CHECK_FUNCS([_kbhit])
 
 dnl There are no workarounds in the code for missing these functions.
-AC_CHECK_FUNCS([modf pow putenv sqrt sqrtf], [],
+AC_CHECK_FUNCS([modf pow sqrt sqrtf], [],
                [AC_MSG_ERROR([Missing function required to build Octave])])
 
 ## exp2, round, tgamma function checks
 AC_LANG_PUSH(C++)
 AC_CHECK_DECLS([exp2, round, tgamma], [], [], [[#include <cmath>]])
 AC_CHECK_FUNCS([exp2 round tgamma])
 AH_VERBATIM([Z_FUNCS_AND_DECLS], [
 #if defined (__cplusplus)
diff --git a/libgnu/Makefile.am b/libgnu/Makefile.am
--- a/libgnu/Makefile.am
+++ b/libgnu/Makefile.am
@@ -16,17 +16,17 @@
 # along with this file.  If not, see <http://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License,
 # this file may be distributed as part of a program that
 # contains a configuration script generated by Autoconf, under
 # the same distribution terms as the rest of that program.
 #
 # Generated by gnulib-tool.
-# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 canonicalize chdir close closedir copysign copysignf crypto/md5 dup2 fclose fcntl fflush filemode float floor floorf fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat malloc-gnu mkdir mkfifo mkostemp mktime nanosleep nproc open opendir pathmax progname readdir readlink realloc-gnu rename rmdir round roundf select sigaction signal sigprocmask sleep stat stddef stdint stdio strerror strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
+# Reproduce by: gnulib-tool --import --dir=. --local-dir=gl --lib=libgnu --source-base=libgnu --m4-base=m4 --doc-base=doc --tests-base=tests --aux-dir=build-aux --no-conditional-dependencies --libtool --macro-prefix=gl base64 canonicalize chdir close closedir copysign copysignf crypto/md5 dup2 fclose fcntl fflush filemode float floor floorf fnmatch fopen fseek ftell getcwd gethostname getopt-gnu gettimeofday glob isatty link lstat malloc-gnu mkdir mkfifo mkostemp mktime nanosleep nproc open opendir pathmax progname putenv readdir readlink realloc-gnu rename rmdir round roundf select sigaction signal sigprocmask sleep stat stddef stdint stdio strerror strftime strptime symlink sys_stat sys_time sys_times time times tmpfile trunc truncf unistd unlink vasprintf
 
 AUTOMAKE_OPTIONS = 1.5 gnits
 
 SUBDIRS =
 noinst_HEADERS =
 noinst_LIBRARIES =
 noinst_LTLIBRARIES =
 EXTRA_DIST =
@@ -1443,16 +1443,25 @@ EXTRA_DIST += pathmax.h
 ## end   gnulib module pathmax
 
 ## begin gnulib module progname
 
 libgnu_la_SOURCES += progname.h progname.c
 
 ## end   gnulib module progname
 
+## begin gnulib module putenv
+
+
+EXTRA_DIST += putenv.c
+
+EXTRA_libgnu_la_SOURCES += putenv.c
+
+## end   gnulib module putenv
+
 ## begin gnulib module raise
 
 
 EXTRA_DIST += raise.c
 
 EXTRA_libgnu_la_SOURCES += raise.c
 
 ## end   gnulib module raise
diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -101,17 +101,17 @@ octave_putenv (const std::string& name, 
 
   char *new_item = static_cast<char*> (gnulib::malloc (new_len));
 
   sprintf (new_item, "%s=%s", name.c_str (), value.c_str ());
 
   // As far as I can see there's no way to distinguish between the
   // various errors; putenv doesn't have errno values.
 
-  if (putenv (new_item) < 0)
+  if (gnulib::putenv (new_item) < 0)
     (*current_liboctave_error_handler) ("putenv (%s) failed", new_item);
 }
 
 std::string
 octave_fgets (FILE *f)
 {
   bool eof;
   return octave_fgets (f, eof);
