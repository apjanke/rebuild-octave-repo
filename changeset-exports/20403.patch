# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438098447 25200
#      Tue Jul 28 08:47:27 2015 -0700
# Branch stable
# Node ID 5b7d7051a032cc6fabb7de4077cea1a3a12fed3d
# Parent  fc23fbe05f3ac443c69d245a94a19df158792b5f
Fix hang when using errorbar with empty dataset (bug #45554).

* __errcomm__.m: Use concatenation to append new errorbar plots to retval,
rather than assignment which can fail if the RHS is empty.

* __errplot__.m: Determine number of plots by checking number of columns in
dataset, but only if dataset is not empty (row is zero for example).  Only
process a legend key if the number of plots is greater than 0.

diff --git a/scripts/plot/draw/private/__errcomm__.m b/scripts/plot/draw/private/__errcomm__.m
--- a/scripts/plot/draw/private/__errcomm__.m
+++ b/scripts/plot/draw/private/__errcomm__.m
@@ -44,17 +44,17 @@ function retval = __errcomm__ (caller, h
       arg = arg(:);
     endif
     sz = size (arg);
     ndata = 1;
     data{ndata} = arg;
     while (k <= nargs)
       arg = varargin{k++};
       if (ischar (arg) || iscellstr (arg))
-        retval(end+1,1) = __errplot__(arg, hax, data{1:ndata});
+        retval = [retval; __errplot__(arg, hax, data{1:ndata})];
         break;
       endif
       if (! isnumeric (arg))
         error ("%s: data argument %d must be numeric", caller, k-1);
       endif
       if (isvector (arg))
         arg = arg(:);
       endif
diff --git a/scripts/plot/draw/private/__errplot__.m b/scripts/plot/draw/private/__errplot__.m
--- a/scripts/plot/draw/private/__errplot__.m
+++ b/scripts/plot/draw/private/__errplot__.m
@@ -43,17 +43,17 @@ function h = __errplot__ (fstr, hax, var
       ifmt = "boxy";
     case "#~>"
       ifmt = "boxxy";
     otherwise
       ifmt = "yerr";
   endswitch
 
   h = [];
-  nplots = columns (varargin{1});
+  nplots = ifelse (isempty (varargin{1}), 0, columns (varargin{1}));
   for i = 1:nplots
 
     if (isempty (fmt.color))
       lc = __next_line_color__ ();
     else
       lc = fmt.color ();
     endif
     if (isempty (fmt.marker) && isempty (fmt.linestyle))
@@ -194,17 +194,17 @@ function h = __errplot__ (fstr, hax, var
     addlistener (hax, "xscale", fcn);
     addlistener (hax, "yscale", fcn);
 
     update_data (hg, [], hl);
 
   endfor
 
   ## Process legend key
-  if (! isempty (fmt.key))
+  if (! isempty (fmt.key) && nplots > 0)
     hlegend = [];
     fkids = get (gcf (), "children");
     for i = 1 : numel (fkids)
       if (   strcmp (get (fkids(i), "type"), "axes")
           && strcmp (get (fkids(i), "tag"), "legend"))
         udata = get (fkids(i), "userdata");
         if (! isempty (intersect (udata.handle, gca ())))
           hlegend = fkids(i);
