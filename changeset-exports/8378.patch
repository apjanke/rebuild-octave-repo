# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1228546115 -3600
#      Sat Dec 06 07:48:35 2008 +0100
# Node ID 7d0492aa522d5598b4ee51a57a46b6a3adba5bb2
# Parent  25bc2d31e1bfa765f01279c7eb2a32a997c263cd
fix use of uninitialized buffers

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-12-06  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-fcn-handle.cc (octave_fcn_handle::load_binary): Call istream::get
+	rather than istream::read to supply null terminating character.
+
 2008-10-29  Jaroslav Hajek  <highegg@gmail.com>
 	* file-io.cc, gl-render.cc, load-save.cc, ls-hdf5.cc, ls-mat4.cc,
 	ls-mat5.cc, ls-oct-binary.cc, mex.cc, oct.h, ov-base-int.cc,
 	ov-bool-mat.cc, ov-bool-sparse.cc, ov-cell.cc, ov-class.cc,
 	ov-cx-mat.cc, ov-cx-sparse.cc, ov-fcn-handle.cc, ov-fcn-inline.cc,
 	ov-flt-cx-mat.cc, ov-flt-re-mat.cc, ov-re-mat.cc, ov-re-sparse.cc,
 	ov-str-mat.cc, ov-struct.cc, toplev.cc,
 	DLD-FUNCTIONS/__lin_interpn__.cc, DLD-FUNCTIONS/amd.cc,
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -469,17 +469,17 @@ octave_fcn_handle::load_binary (std::ist
 
   int32_t tmp;
   if (! is.read (reinterpret_cast<char *> (&tmp), 4))
     return false;
   if (swap)
     swap_bytes<4> (&tmp);
 
   OCTAVE_LOCAL_BUFFER (char, ctmp1, tmp+1);
-  is.read (ctmp1, tmp);
+  is.get (ctmp1, tmp+1, 0);
   nm = std::string (ctmp1);
 
   if (! is)
     return false;
 
   if (nm.length() >= 12 && nm.substr (0, 12) == "@<anonymous>")
     {
       octave_idx_type len = 0;
@@ -492,17 +492,17 @@ octave_fcn_handle::load_binary (std::ist
 	}
 
       if (! is.read (reinterpret_cast<char *> (&tmp), 4))
 	return false;
       if (swap)
 	swap_bytes<4> (&tmp);
 
       OCTAVE_LOCAL_BUFFER (char, ctmp2, tmp+1);
-      is.read (ctmp2, tmp);
+      is.get (ctmp2, tmp+1, 0);
 
       symbol_table::scope_id local_scope = symbol_table::alloc_scope ();
 	      
       if (len > 0)
 	{
 	  for (octave_idx_type i = 0; i < len; i++)
 	    {
 	      octave_value t2;
