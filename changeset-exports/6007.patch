# HG changeset patch
# User jwe
# Date 1159369554 0
#      Wed Sep 27 15:05:54 2006 +0000
# Node ID 52b520087c5048375a548766bb60705a26afbb64
# Parent  588dfb92e19e4802da62d3c5ff3c245d744c9ebc
[project @ 2006-09-27 15:05:53 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2006-09-27  David Bateman  <dbateman@free.fr>
 
+	* file-io.cc (Fsprintf): If fmt is an sq_string, return an sq_string.
+
 	* DLD-FUNCTIONS/sparse.cc (spfind, sparse_find): Delete.
 	* DLD-FUNCTIONS/spfind.cc: New file implementating compatible
 	sparse find function.
 	* Makefile.in (DLD_XSRC): Add spfind.cc.
 	
 2006-09-26  Bill Denney  <bill@givebillmoney.com>
 
 	* DLD-FUNCTIONS/find.cc (find_nonzero_elem_idx, Ffind):
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -933,31 +933,34 @@ converted.\n\
       retval(0) = "";
 
       octave_ostrstream *ostr = new octave_ostrstream ();
 
       octave_stream os (ostr);
 
       if (os.is_valid ())
 	{
-	  if (args(0).is_string ())
+	  octave_value fmt_arg = args(0);
+
+	  if (fmt_arg.is_string ())
 	    {
 	      octave_value_list tmp_args;
 
 	      if (nargin > 1)
 		{
 		  tmp_args.resize (nargin-1, octave_value ());
 
 		  for (int i = 1; i < nargin; i++)
 		    tmp_args(i-1) = args(i);
 		}
 
-	      retval(2) = os.printf (args(0), tmp_args, who);
+	      retval(2) = os.printf (fmt_arg, tmp_args, who);
 	      retval(1) = os.error ();
-	      retval(0) = ostr->str ();
+	      retval(0) = octave_value (ostr->str (),
+					fmt_arg.is_sq_string () ? '\'' : '"');
 	    }
 	  else
 	    ::error ("%s: format must be a string", who.c_str ());
 	}
       else
 	::error ("%s: unable to create output buffer", who.c_str ());
     }
   else
