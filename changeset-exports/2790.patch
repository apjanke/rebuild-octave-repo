# HG changeset patch
# User jwe
# Date 857530075 0
#      Wed Mar 05 02:47:55 1997 +0000
# Node ID ecc1a12678de67ba08883c3b7cad82ef2e7e4914
# Parent  e68dcf8ffd33fb8ed88269c13b9bb7c0c9a27bdd
[project @ 1997-03-05 02:47:54 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+Tue Mar  4 20:36:53 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* variables.cc (Fexist): Don't let files with `.' in their names
+	confuse us.
+
+	* symtab.cc (valid_identifier (const string&)): New function.
+
 Sat Mar  1 15:23:14 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0.5 released.
 
 Sat Mar  1 01:34:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (stamp-oct-links): New target.  Make links in build
 	directory too, so that the tests will work.
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -1185,13 +1185,19 @@ valid_identifier (const char *s)
 
   while (*++s != '\0')
     if (! (isalnum (*s) || *s == '_'))
       return 0;
 
   return 1;
 }
 
+int
+valid_identifier (const string& s)
+{
+  return valid_identifier (s.c_str ());
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/symtab.h b/src/symtab.h
--- a/src/symtab.h
+++ b/src/symtab.h
@@ -316,15 +316,17 @@ private:
 
   unsigned int hash (const string& s);
 
   symbol_record table[HASH_TABLE_SIZE];
 };
 
 extern int valid_identifier (const char *s);
 
+extern int valid_identifier (const string& s);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -326,28 +326,29 @@ returns:\n\
 
   if (error_state)
     {
       error ("exist: expecting string argument");
       return retval;
     }
 
   string struct_elts;
+  string symbol_name = name;
 
   size_t pos = name.find ('.');
 
-  if (pos != NPOS)
+  if (pos != NPOS && pos > 0)
     {
       struct_elts = name.substr (pos+1);
-      name = name.substr (0, pos);
+      symbol_name = name.substr (0, pos);
     }
 
-  symbol_record *sr = curr_sym_tab->lookup (name, 0, 0);
+  symbol_record *sr = curr_sym_tab->lookup (symbol_name, 0, 0);
   if (! sr)
-    sr = global_sym_tab->lookup (name, 0, 0);
+    sr = global_sym_tab->lookup (symbol_name, 0, 0);
 
   retval = 0.0;
 
   if (sr && sr->is_variable () && sr->is_defined ())
     {
       if (struct_elts.empty () || sr->is_map_element (struct_elts))
 	retval = 1.0;
     }
