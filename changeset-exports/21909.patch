# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1465936294 14400
#      Tue Jun 14 16:31:34 2016 -0400
# Node ID d7cac41df82a7bdfb6dd54b4c653d2c7606df648
# Parent  74d60f5e37befa31f2b186d1e3fa89121e42b706
provide wrappers for some sys/stat functions

* liboctave/wrappers/stat-wrappers.c,
liboctave/wrappers/stat-wrappers.h: New files.

* liboctave/wrappers/module.mk: Update.

* file-ops.cc: Use new wrappers for mkfifo, mkdir, and umask.

diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -31,32 +31,31 @@ along with Octave; see the file COPYING.
 
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
 #  include <algorithm>
 #endif
 
 #include <iostream>
 #include <vector>
 
-#include <sys/stat.h>
-
 #include <sys/types.h>
 #include <unistd.h>
 
 #include "areadlink-wrapper.h"
 #include "canonicalize-file-name-wrapper.h"
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "gen-tempname-wrapper.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "oct-passwd.h"
 #include "quit.h"
 #include "singleton-cleanup.h"
+#include "stat-wrappers.h"
 #include "str-vec.h"
 
 namespace octave
 {
   namespace sys
   {
     file_ops *octave::sys::file_ops::instance = 0;
 
@@ -409,19 +408,17 @@ namespace octave
       return octave::sys::mkdir (nm, md, msg);
     }
 
     int
     mkdir (const std::string& name, mode_t mode, std::string& msg)
     {
       msg = "";
 
-      int status = -1;
-
-      status = gnulib::mkdir (name.c_str (), mode);
+      int status = octave_mkdir_wrapper (name.c_str (), mode);
 
       if (status < 0)
         msg = gnulib::strerror (errno);
 
       return status;
     }
 
     int
@@ -431,23 +428,17 @@ namespace octave
       return mkfifo (nm, md, msg);
     }
 
     int
     mkfifo (const std::string& name, mode_t mode, std::string& msg)
     {
       msg = "";
 
-      int status = -1;
-
-      // With gnulib we will always have mkfifo, but some systems like MinGW
-      // don't have working mkfifo functions.  On those systems, mkfifo will
-      // always return -1 and set errno.
-
-      status = gnulib::mkfifo (name.c_str (), mode);
+      int status = octave_mkfifo_wrapper (name.c_str (), mode);
 
       if (status < 0)
         msg = gnulib::strerror (errno);
 
       return status;
     }
 
     int
@@ -643,21 +634,17 @@ namespace octave
         }
 
       return status;
     }
 
     int
     umask (mode_t mode)
     {
-#if defined (HAVE_UMASK)
-      return ::umask (mode);
-#else
-      return 0;
-#endif
+      return octave_umask_wrapper (mode);
     }
 
     int
     unlink (const std::string& name)
     {
       std::string msg;
       return unlink (name, msg);
     }
diff --git a/liboctave/wrappers/module.mk b/liboctave/wrappers/module.mk
--- a/liboctave/wrappers/module.mk
+++ b/liboctave/wrappers/module.mk
@@ -5,16 +5,17 @@ NOINSTALL_WRAPPERS_INC = \
   liboctave/wrappers/fpucw-wrapper.h \
   liboctave/wrappers/gen-tempname-wrapper.h \
   liboctave/wrappers/hash-wrappers.h \
   liboctave/wrappers/mkostemp-wrapper.h \
   liboctave/wrappers/nanosleep-wrapper.h \
   liboctave/wrappers/nproc-wrapper.h \
   liboctave/wrappers/putenv-wrapper.h \
   liboctave/wrappers/set-program-name-wrapper.h \
+  liboctave/wrappers/stat-wrappers.h \
   liboctave/wrappers/strftime-wrapper.h \
   liboctave/wrappers/strmode-wrapper.h \
   liboctave/wrappers/strptime-wrapper.h \
   liboctave/wrappers/uname-wrapper.h \
   liboctave/wrappers/unsetenv-wrapper.h \
   liboctave/wrappers/vasprintf-wrapper.h \
   liboctave/wrappers/wait-for-input.h
 
@@ -25,16 +26,17 @@ WRAPPERS_SRC = \
   liboctave/wrappers/fpucw-wrapper.c \
   liboctave/wrappers/gen-tempname-wrapper.c \
   liboctave/wrappers/hash-wrappers.c \
   liboctave/wrappers/mkostemp-wrapper.c \
   liboctave/wrappers/nanosleep-wrapper.c \
   liboctave/wrappers/nproc-wrapper.c \
   liboctave/wrappers/putenv-wrapper.c \
   liboctave/wrappers/set-program-name-wrapper.c \
+  liboctave/wrappers/stat-wrappers.c \
   liboctave/wrappers/strftime-wrapper.c \
   liboctave/wrappers/strmode-wrapper.c \
   liboctave/wrappers/strptime-wrapper.c \
   liboctave/wrappers/uname-wrapper.c \
   liboctave/wrappers/unsetenv-wrapper.c \
   liboctave/wrappers/vasprintf-wrapper.c \
   liboctave/wrappers/wait-for-input.c \
   $(NOINSTALL_WRAPPERS_INC)
diff --git a/liboctave/wrappers/stat-wrappers.c b/liboctave/wrappers/stat-wrappers.c
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/stat-wrappers.c
@@ -0,0 +1,52 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+// These functions may be provided by gnulib.  We don't include gnulib
+// headers directly in Octave's C++ source files to avoid problems that
+// may be caused by the way that gnulib overrides standard library
+// functions.
+
+#if defined (HAVE_CONFIG_H)
+#  include "config.h"
+#endif
+
+#include <sys/stat.h>
+
+#include "stat-wrappers.h"
+
+int
+octave_mkdir_wrapper (const char *name, mode_t mode)
+{
+  return mkdir (name, mode);
+}
+
+int
+octave_mkfifo_wrapper (const char *name, mode_t mode)
+{
+  return mkfifo (name, mode);
+}
+
+int
+octave_umask_wrapper (mode_t mode)
+{
+  return umask (mode);
+}
diff --git a/liboctave/wrappers/stat-wrappers.h b/liboctave/wrappers/stat-wrappers.h
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/stat-wrappers.h
@@ -0,0 +1,40 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if ! defined (octave_stat_wrappers_h)
+#define octave_stat_wrappers_h 1
+
+#if defined __cplusplus
+extern "C" {
+#endif
+
+extern int octave_mkdir_wrapper (const char *name, mode_t mode);
+
+extern int octave_mkfifo_wrapper (const char *name, mode_t mode);
+
+extern int octave_umask_wrapper (mode_t mode);
+
+#if defined __cplusplus
+}
+#endif
+
+#endif
