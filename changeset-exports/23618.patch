# HG changeset patch
# User Rik <rik@octave.org>
# Date 1497628990 25200
#      Fri Jun 16 09:03:10 2017 -0700
# Node ID 5e0acf41a9e16815d53bdb70c082204c262aeee3
# Parent  ead0d48e1ffdf7b9176b2c82f20b4a1d7d028514
# Parent  4ce622b7b93089aadd5db0c8f9a72b0a5863e16c
maint: Merge stable to default.

diff --git a/scripts/linear-algebra/normest1.m b/scripts/linear-algebra/normest1.m
--- a/scripts/linear-algebra/normest1.m
+++ b/scripts/linear-algebra/normest1.m
@@ -190,27 +190,24 @@ function [nest, v, w, iter] = normest1 (
       if (all (any (abs (Sold' * S) == n)))  # (2) of Algorithm 2.4
         ## all columns of S parallel to a column of Sold, exit
         possible_break = true;
         converged = true;
       else
         if (t > 1)
           ## at least two columns of S are not parallel
           i = 1;
-          imax = min (t, 2 ^ (n - 1));
+          ## The maximum number of unparallel columns of length n with
+          ## entries {-1,1} is 2^(n-1).  n of them are already in Sold.
+          imax = min (t, 2 ^ (n - 1) - n);
           while (i <= imax)
-            ## The maximum number of parallel columns of length n with entries
-            ## {-1,1} is 2^(n-1). Therefore, if the number of columns of S is
-            ## greater than 2^(n-1), for sure some of them are parallel to some
-            ## columns of Sold. Don't even try to change them (i <= 2^(n-1)).
-            ## Now, check if S(:,i) is parallel to any previous column of S
-            p = (any (abs (S(:,i)' * S(:,1:i-1)) == n));
-            if (p || (any (abs (S(:,i)' * Sold) == n)))
-              ## i-th column of S parallel to a previous or to a
-              ## column of Sold: change it.
+            if (any (abs (S(:,i)' * S(:,1:i-1)) == n)
+                || any (abs (S(:,i)' * Sold) == n))
+              ## i-th column of S is parallel to a previous column
+              ## or to a column of Sold.  Change it.
               S(:,i) = sign (2*rand (n, 1)-1);
             else
               i++;
             endif
           endwhile
         endif
       endif
     endif
