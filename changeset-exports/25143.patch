# HG changeset patch
# User Rik <rik@octave.org>
# Date 1523050299 25200
#      Fri Apr 06 14:31:39 2018 -0700
# Branch stable
# Node ID 13fd0610480f92139d4eed64990f291af57eb18d
# Parent  ad6dce96cbca9a9c7e886971b50db557d063616d
doc: Use https whenever possible in @url entries.

* external.txi, install.txi, preface.txi, sparse.txi, rand.cc, amd.cc,
ccolamd.cc, colamd.cc, quadl.m, rgb2gray.m, condest.m, ode23.m, reducepatch.m,
ilu.m, pcg.m, isprime.m, quantile.m:
Use https whenever possible in @url entries.

diff --git a/doc/interpreter/external.txi b/doc/interpreter/external.txi
--- a/doc/interpreter/external.txi
+++ b/doc/interpreter/external.txi
@@ -1795,18 +1795,17 @@ 34.4952
 @cindex Java, using with Octave
 @cindex calling Java from Octave
 @cindex Java, calling from Octave
 @cindex calling Octave from Java
 @cindex Octave, calling from Java
 
 The Java Interface is designed for calling Java functions from within Octave.
 If you want to do the reverse, and call Octave from within Java, try a library
-like @code{javaOctave} (@url{https://kenai.com/projects/javaoctave/pages/Home})
-or @code{joPas} (@url{http://jopas.sourceforge.net/}).
+like @code{joPas} (@url{http://jopas.sourceforge.net}).
 
 @menu
 * Making Java Classes Available::
 * How to use Java from within Octave::
 * Passing parameters to the JVM::
 * Java Interface Functions::
 @end menu
 
diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -186,106 +186,106 @@ files or the docstring of any Octave fun
 @node External Packages
 @subsection External Packages
 
 The following external packages are required:
 
 @table @asis
 @item BLAS
 Basic Linear Algebra Subroutine library.  Accelerated @sc{blas} libraries such
-as OpenBLAS (@url{http://www.openblas.net/}) or
+as OpenBLAS (@url{https://www.openblas.net/}) or
 ATLAS (@url{http://math-atlas.sourceforge.net}) are recommended for best
 performance.  The reference implementation (@url{http://www.netlib.org/blas})
 is slow, unmaintained, and suffers from certain bugs in corner case inputs.
 
 @item LAPACK
 Linear Algebra Package (@url{http://www.netlib.org/lapack}).
 
 @item PCRE
-The Perl Compatible Regular Expression library (@url{http://www.pcre.org}).
+The Perl Compatible Regular Expression library (@url{https://www.pcre.org}).
 @end table
 
 The following external package is optional but strongly recommended:
 
 @table @asis
 @item GNU Readline
-Command-line editing library (@url{www.gnu.org/s/readline}).
+Command-line editing library (@url{https://www.gnu.org/s/readline}).
 @end table
 
 If you wish to build Octave without GNU readline installed, you must use
 the @option{--disable-readline} option when running the configure script.
 
 The following external software packages are optional but recommended:
 
 @table @asis
 @item ARPACK
 Library for the solution of large-scale eigenvalue problems
-(@url{http://forge.scilab.org/index.php/p/arpack-ng}).  @sc{arpack} is
+(@url{https://forge.scilab.org/index.php/p/arpack-ng}).  @sc{arpack} is
 required to provide the functions @code{eigs} and @code{svds}.
 
 @item cURL
 Library for transferring data with URL syntax
-(@url{http://curl.haxx.se}).  cURL is required to provide the
+(@url{https://curl.haxx.se}).  cURL is required to provide the
 @code{urlread} and @code{urlwrite} functions and the @code{ftp} class.
 
 @item FFTW3
 Library for computing discrete Fourier transforms
 (@url{http://www.fftw.org}).  FFTW3 is used to provide better
 performance for functions that compute discrete Fourier transforms
 (@code{fft}, @code{ifft}, @code{fft2}, etc.)
 
 @item FLTK
 Portable GUI toolkit (@url{http://www.fltk.org}).  FLTK is currently
 used to provide windows for Octave's OpenGL-based graphics functions.
 
 @item fontconfig
 Library for configuring and customizing font access
-(@url{http://www.freedesktop.org/wiki/Software/fontconfig}).  Fontconfig
+(@url{https://www.freedesktop.org/wiki/Software/fontconfig}).  Fontconfig
 is used to manage fonts for Octave's OpenGL-based graphics functions.
 
 @item FreeType
-Portable font engine (@url{http://www.freetype.org}).  FreeType is used
+Portable font engine (@url{https://www.freetype.org}).  FreeType is used
 to perform font rendering for Octave's OpenGL-based graphics functions.
 
 @item GLPK
 GNU Linear Programming Kit (@url{https://www.gnu.org/software/glpk}).
 GPLK is required for the function @code{glpk}.
 
 @item @nospell{gl2ps}
-OpenGL to PostScript printing library (@url{http://www.geuz.org/gl2ps/}).
+OpenGL to PostScript printing library (@url{https://www.geuz.org/gl2ps/}).
 @nospell{gl2ps} is required for printing when using OpenGL-based
 graphics toolkits (currently either FLTK or Qt).
 
 @item gnuplot
 Interactive graphics program (@url{http://www.gnuplot.info}).  gnuplot
 is currently the default graphics renderer for Octave.
 
 @item GraphicsMagick++
 Image processing library (@url{http://www.graphicsmagick.org}).
 GraphicsMagick++ is used to provide the @code{imread} and @code{imwrite}
 functions.
 
 @item HDF5
 Library for manipulating portable data files
-(@url{http://www.hdfgroup.org/HDF5}).  @sc{hdf5} is required for Octave's
+(@url{https://www.hdfgroup.org/HDF5}).  @sc{hdf5} is required for Octave's
 @code{load} and @code{save} commands to read and write HDF data files.
 
 @item Java Development Kit
 Java programming language compiler and libraries.  The OpenJDK free
 software implementation is recommended (@url{http://openjdk.java.net/}),
 although other JDK implementations may work.  Java is required to be able
 to call Java functions from within Octave.
 
 @item LLVM
-Compiler framework, (@url{http://www.llvm.org}).  LLVM is required for
+Compiler framework, (@url{https://www.llvm.org}).  LLVM is required for
 Octave's experimental just-in-time (JIT) compilation for speeding up the
 interpreter.
 
 @item OpenGL
-API for portable 2-D and 3-D graphics (@url{http://www.opengl.org}).  An
+API for portable 2-D and 3-D graphics (@url{https://www.opengl.org}).  An
 OpenGL implementation is required to provide Octave's OpenGL-based
 graphics functions.  Octave's OpenGL-based graphics functions usually
 outperform the gnuplot-based graphics functions because plot data can be
 rendered directly instead of sending data and commands to gnuplot for
 interpretation and rendering.
 
 @item PortAudio
 PortAudio (@url{http://www.portaudio.com/}) provides a very simple API
@@ -296,45 +296,45 @@ functions @code{audioplayer}, @code{audi
 
 @item Qhull
 Computational geometry library (@url{http://www.qhull.org}).  Qhull is
 required to provide the functions @code{convhull}, @code{convhulln},
 @code{delaunay}, @code{delaunayn}, @code{voronoi}, and @code{voronoin}.
 
 @item QRUPDATE
 QR factorization updating library
-(@url{http://sourceforge.net/projects/qrupdate}).  QRUPDATE is used to
+(@url{https://sourceforge.net/projects/qrupdate}).  QRUPDATE is used to
 provide improved performance for the functions @code{qrdelete},
 @code{qrinsert}, @code{qrshift}, and @code{qrupdate}.
 
 @item QScintilla
 Source code highlighter and manipulator; a Qt port of Scintilla
 (@url{http://www.riverbankcomputing.co.uk/software/qscintilla}).
 QScintilla is used for syntax highlighting and code completion in the
 GUI.
 
 @item Qt
 GUI and utility libraries (@url{https://www.qt.io}).  Qt is required for
 building the GUI.  It is a large framework, but the only components
 required are the GUI, core, and network modules.
 
 @item SuiteSparse
 Sparse matrix factorization library
-(@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse}).
+(@url{http://faculty.cse.tamu.edu/davis/suitesparse.html}).
 SuiteSparse is required to provide sparse matrix factorizations and
 solution of linear equations for sparse systems.
 
 @item SUNDIALS
 @nospell{The SUite of Nonlinear and DIfferential/ALgebraic Equation Solvers}
-(@url{http://computation.llnl.gov/projects/sundials}) is required for
+(@url{https://computation.llnl.gov/projects/sundials}) is required for
 the Ordinary Differential Equations (ODE) solvers @code{ode15i} and
 @code{ode15s}.
 
 @item zlib
-Data compression library (@url{http://zlib.net}).  The zlib library is
+Data compression library (@url{https://zlib.net}).  The zlib library is
 required for Octave's @code{load} and @code{save} commands to handle
 compressed data, including @sc{matlab} v5 MAT files.
 @end table
 
 @node Running Configure and Make
 @section Running Configure and Make
 
 @itemize @bullet
@@ -691,17 +691,17 @@ The options @option{-fdefault-integer-8}
 CPU) have to be added to the variable @code{OPTS} and @code{NOOPT}.
 
 @item
 Once you have compiled this library make sure that you use it for
 compiling Suite Sparse and Octave.  In the following we assume that
 you installed the @sc{lapack} library as $prefix64/lib/liblapack.a.
 @end itemize
 
-@item QRUPDATE (@url{http://sourceforge.net/projects/qrupdate})
+@item QRUPDATE (@url{https://sourceforge.net/projects/qrupdate})
 
 In the @file{Makeconf} file:
 
 @itemize @minus
 @item
 Add @option{-fdefault-integer-8} to @env{FFLAGS}.
 
 @item
@@ -715,17 +715,17 @@ Set @env{PREFIX} to the top-level direct
 @item
 Run @code{make solib} to make a shared library.
 
 @item
 Run @code{make install} to install the library.
 @end itemize
 
 @item
-SuiteSparse (@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse})
+SuiteSparse (@url{http://faculty.cse.tamu.edu/davis/suitesparse.html})
 
 Pass the following options to @command{make} to enable 64-bit integers
 for @sc{blas} library calls.  On 64-bit Windows systems, use
 @code{-DLONGBLAS="long long"} instead.
 
 @example
 @group
 CFLAGS='-DLONGBLAS=long'
@@ -748,17 +748,17 @@ for f in *.a; do
   rm -rf tmp
 done
 @end group
 @end example
 
 @noindent
 Other systems may require a different solution.
 
-@item @sc{arpack} (http://forge.scilab.org/index.php/p/arpack-ng/)
+@item @sc{arpack} (@url{https://forge.scilab.org/index.php/p/arpack-ng/})
 
 @itemize @minus
 @item Add @option{-fdefault-integer-8} to @env{FFLAGS} when running configure.
 
 @item Run @code{make} to build the library.
 
 @item Run @code{make install} to install the library.
 @end itemize
diff --git a/doc/interpreter/preface.txi b/doc/interpreter/preface.txi
--- a/doc/interpreter/preface.txi
+++ b/doc/interpreter/preface.txi
@@ -94,17 +94,17 @@ The United States Department of Energy, 
 @nospell{Stanley C. Ahalt} of the Ohio Supercomputer Center.
 
 @item
 The National Science Foundation, through grant numbers @nospell{CTS-0105360},
 @nospell{CTS-9708497, CTS-9311420, CTS-8957123, and CNS-0540147}.
 
 @item
 The industrial members of the Texas-Wisconsin Modeling and Control
-Consortium (@url{http://www.che.utexas.edu/twmcc, TWMCC}).
+Consortium (TWMCC).
 
 @item
 The @nospell{Paul A. Elfers} Endowed Chair in Chemical Engineering at the
 University of Wisconsin-Madison.
 
 @item
 Digital Equipment Corporation, for an equipment grant as part of their
 External Research Program.
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -72,30 +72,30 @@ the storage technique is also necessary 
 create their own oct-files.
 
 There are many different means of storing sparse matrix data.  What all
 of the methods have in common is that they attempt to reduce the complexity
 and storage given a priori knowledge of the particular class of problems
 that will be solved.  A good summary of the available techniques for storing
 sparse matrix is given by @nospell{Saad} @footnote{Y. Saad "SPARSKIT: A basic
 toolkit for sparse matrix computation", 1994,
-@url{http://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps}}.
+@url{https://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps}}.
 With full matrices, knowledge of the point of an element of the matrix
 within the matrix is implied by its position in the computers memory.
 However, this is not the case for sparse matrices, and so the positions
 of the nonzero elements of the matrix must equally be stored.
 
 An obvious way to do this is by storing the elements of the matrix as
 triplets, with two elements being their position in the array
 (rows and column) and the third being the data itself.  This is conceptually
 easy to grasp, but requires more storage than is strictly needed.
 
 The storage technique used within Octave is the compressed column
 format.  It is similar to the Yale format.
-@footnote{@url{http://en.wikipedia.org/wiki/Sparse_matrix#Yale_format}}
+@footnote{@url{https://en.wikipedia.org/wiki/Sparse_matrix#Yale_format}}
 In this format the position of each element in a row and the data are
 stored as previously.  However, if we assume that all elements in the
 same column are stored adjacent in the computers memory, then we only
 need to store information on the number of nonzero elements in each
 column, rather than their positions.  Thus assuming that the matrix has
 more nonzero elements than there are columns in the matrix, we win in
 terms of the amount of memory used.
 
@@ -790,17 +790,17 @@ sparse Cholesky@tie{}factorization using
 @item If the sparse Cholesky@tie{}factorization failed or the matrix is not
 Hermitian with a real positive diagonal, and the matrix is square, factorize,
 solve, and perform one refinement iteration using @sc{umfpack}.
 
 @item If the matrix is not square, or any of the previous solvers flags
 a singular or near singular matrix, find a minimum norm solution using
 @sc{cxsparse}@footnote{The @sc{cholmod}, @sc{umfpack} and @sc{cxsparse}
 packages were written by Tim Davis and are available at
-@url{http://www.cise.ufl.edu/research/sparse/}}.
+@url{http://faculty.cse.tamu.edu/davis/suitesparse.html}}.
 @end enumerate
 
 The band density is defined as the number of nonzero values in the band
 divided by the total number of values in the full band.  The banded
 matrix solvers can be entirely disabled by using @dfn{spparms} to set
 @code{bandden} to 1 (i.e., @code{spparms ("bandden", 1)}).
 
 The QR@tie{}solver factorizes the problem with a @nospell{Dulmage-Mendelsohn}
diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -557,17 +557,17 @@ By default, @code{randn} uses the @nospe
 
 The class of the value returned can be controlled by a trailing
 @qcode{"double"} or @qcode{"single"} argument.  These are the only valid
 classes.
 
 Reference: @nospell{G. Marsaglia and W.W. Tsang},
 @cite{Ziggurat Method for Generating Random Variables},
 J. Statistical Software, vol 5, 2000,
-@url{http://www.jstatsoft.org/v05/i08/}
+@url{https://www.jstatsoft.org/v05/i08/}
 
 @seealso{rand, rande, randg, randp}
 @end deftypefn */)
 {
   return do_rand (args, args.length (), "randn", "normal");
 }
 
 /*
@@ -624,17 +624,17 @@ distribution.
 
 The class of the value returned can be controlled by a trailing
 @qcode{"double"} or @qcode{"single"} argument.  These are the only valid
 classes.
 
 Reference: @nospell{G. Marsaglia and W.W. Tsang},
 @cite{Ziggurat Method for Generating Random Variables},
 J. Statistical Software, vol 5, 2000,
-@url{http://www.jstatsoft.org/v05/i08/}
+@url{https://www.jstatsoft.org/v05/i08/}
 
 @seealso{rand, randn, randg, randp}
 @end deftypefn */)
 {
   return do_rand (args, args.length (), "rande", "exponential");
 }
 
 /*
diff --git a/libinterp/dldfcn/amd.cc b/libinterp/dldfcn/amd.cc
--- a/libinterp/dldfcn/amd.cc
+++ b/libinterp/dldfcn/amd.cc
@@ -66,18 +66,17 @@ are ignored by @code{amd} during the cal
 The value of dense must be a positive scalar and the default value is 10.0
 
 @item @var{opts}.aggressive
 If this value is a nonzero scalar, then @code{amd} performs aggressive
 absorption.  The default is not to perform aggressive absorption.
 @end table
 
 The author of the code itself is Timothy A. Davis
-@nospell{@email{davis@@cise.ufl.edu}}, University of Florida
-(see @url{http://www.cise.ufl.edu/research/sparse/amd}).
+(see @url{http://faculty.cse.tamu.edu/davis/suitesparse.html}).
 @seealso{symamd, colamd}
 @end deftypefn */)
 {
 #if defined (HAVE_AMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
diff --git a/libinterp/dldfcn/ccolamd.cc b/libinterp/dldfcn/ccolamd.cc
--- a/libinterp/dldfcn/ccolamd.cc
+++ b/libinterp/dldfcn/ccolamd.cc
@@ -118,23 +118,23 @@ continue.  The matrix is OK if @code{@va
 invalid.  @code{@var{stats}(5)} is the rightmost column index that is
 unsorted or contains duplicate entries, or zero if no such column exists.
 @code{@var{stats}(6)} is the last seen duplicate or out-of-order row
 index in the column index given by @code{@var{stats}(5)}, or zero if no
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate
 or out-of-order row indices.  @code{@var{stats}(8 : 20)} is always zero in
 the current version of @sc{ccolamd} (reserved for future use).
 
-The authors of the code itself are @nospell{S. Larimore, T. Davis}
-(Univ. of Florida) and @nospell{S. Rajamanickam} in collaboration with
-@nospell{J. Bilbert and E. Ng}.  Supported by the National Science Foundation
+The authors of the code itself are @nospell{S. Larimore, T. Davis} and
+@nospell{S. Rajamanickam} in collaboration with @nospell{J. Bilbert and E. Ng}.
+Supported by the National Science Foundation
 @nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from
 @nospell{Sandia} National Lab.
-See @url{http://www.cise.ufl.edu/research/sparse} for
-ccolamd, csymamd, amd, colamd, symamd, and other related orderings.
+See @url{http://faculty.cse.tamu.edu/davis/suitesparse.html} for ccolamd,
+csymamd, amd, colamd, symamd, and other related orderings.
 @seealso{colamd, csymamd}
 @end deftypefn */)
 {
 #if defined (HAVE_CCOLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
@@ -383,23 +383,23 @@ continue.  The matrix is OK if @code{@va
 invalid.  @code{@var{stats}(5)} is the rightmost column index that is
 unsorted or contains duplicate entries, or zero if no such column exists.
 @code{@var{stats}(6)} is the last seen duplicate or out-of-order row
 index in the column index given by @code{@var{stats}(5)}, or zero if no
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate
 or out-of-order row indices.  @code{@var{stats}(8:20)} is always zero in
 the current version of @sc{ccolamd} (reserved for future use).
 
-The authors of the code itself are @nospell{S. Larimore, T. Davis}
-(Univ. of Florida) and @nospell{S. Rajamanickam} in collaboration with
-@nospell{J. Bilbert and E. Ng}.  Supported by the National Science Foundation
+The authors of the code itself are @nospell{S. Larimore, T. Davis} and
+@nospell{S. Rajamanickam} in collaboration with @nospell{J. Bilbert and E. Ng}.
+Supported by the National Science Foundation
 @nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from
 @nospell{Sandia} National Lab.
-See @url{http://www.cise.ufl.edu/research/sparse} for
-ccolamd, csymamd, amd, colamd, symamd, and other related orderings.
+See @url{http://faculty.cse.tamu.edu/davis/suitesparse.html} for ccolamd,
+colamd, csymamd, amd, colamd, symamd, and other related orderings.
 @seealso{symamd, ccolamd}
 @end deftypefn */)
 {
 #if defined (HAVE_CCOLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -258,20 +258,19 @@ unsorted or contains duplicate entries, 
 index in the column index given by @code{@var{stats}(5)}, or zero if no
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate
 or out-of-order row indices.  @code{@var{stats}(8:20)} is always zero in
 the current version of @sc{colamd} (reserved for future use).
 
 The ordering is followed by a column elimination tree post-ordering.
 
 The authors of the code itself are @nospell{Stefan I. Larimore} and
-@nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of
-Florida.  The algorithm was developed in collaboration with @nospell{John
-Gilbert}, Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.
-(see @url{http://www.cise.ufl.edu/research/sparse/colamd})
+@nospell{Timothy A. Davis}.  The algorithm was developed in collaboration with
+@nospell{John Gilbert}, Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National
+Laboratory.  (see @url{http://faculty.cse.tamu.edu/davis/suitesparse.html})
 @seealso{colperm, symamd, ccolamd}
 @end deftypefn */)
 {
 #if defined (HAVE_COLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
@@ -501,20 +500,19 @@ exists.  @code{@var{stats}(6)} is the la
 row index in the column index given by @code{@var{stats}(5)}, or zero
 if no such row index exists.  @code{@var{stats}(7)} is the number of
 duplicate or out-of-order row indices.  @code{@var{stats}(8:20)} is
 always zero in the current version of SYMAMD (reserved for future use).
 
 The ordering is followed by a column elimination tree post-ordering.
 
 The authors of the code itself are @nospell{Stefan I. Larimore} and
-@nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of
-Florida.  The algorithm was developed in collaboration with @nospell{John
-Gilbert}, Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.
-(see @url{http://www.cise.ufl.edu/research/sparse/colamd})
+@nospell{Timothy A. Davis}.  The algorithm was developed in collaboration with
+@nospell{John Gilbert}, Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National
+Laboratory.  (see @url{http://faculty.cse.tamu.edu/davis/suitesparse.html})
 @seealso{colperm, colamd}
 @end deftypefn */)
 {
 #if defined (HAVE_COLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -48,17 +48,17 @@
 ##
 ## The result of the integration is returned in @var{q}.
 ##
 ## The optional output @var{nfun} indicates the total number of function
 ## evaluations performed.
 ##
 ## Reference: @nospell{W. Gander and W. Gautschi}, @cite{Adaptive Quadrature -
 ## Revisited}, BIT Vol. 40, No. 1, March 2000, pp. 84--101.
-## @url{http://www.inf.ethz.ch/personal/gander/}
+## @url{https://www.inf.ethz.ch/personal/gander/}
 ## @seealso{quad, quadv, quadgk, quadcc, trapz, dblquad, triplequad, integral,
 ##          integral2, integral3}
 ## @end deftypefn
 
 ## Original Author: Walter Gautschi
 ## Date: 08/03/98
 ## Reference: Gander, Computermathematik, Birkhaeuser, 1992.
 
diff --git a/scripts/image/rgb2gray.m b/scripts/image/rgb2gray.m
--- a/scripts/image/rgb2gray.m
+++ b/scripts/image/rgb2gray.m
@@ -31,17 +31,17 @@
 ## @example
 ## @group
 ## @var{I} = 0.298936*@var{R} + 0.587043*@var{G} + 0.114021*@var{B}
 ## @end group
 ## @end example
 ##
 ## @noindent
 ## which corresponds to the luminance channel when RGB is translated to
-## @nospell{YIQ} as documented in @url{http://en.wikipedia.org/wiki/YIQ}.
+## @nospell{YIQ} as documented in @url{https://en.wikipedia.org/wiki/YIQ}.
 ## @seealso{rgb2hsv, rgb2ind}
 ## @end deftypefn
 
 function I = rgb2gray (rgb)
 
   if (nargin != 1)
     print_usage ();
   endif
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -85,22 +85,22 @@
 ##
 ## References:
 ##
 ## @itemize
 ## @item
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
-## @url{http://dx.doi.org/10.1137/S0895479899356080}
+## @url{https://dx.doi.org/10.1137/S0895479899356080}
 ##
 ## @item
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
-## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
+## Pseudospectra}. @url{https://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{cond, norm, normest1, normest}
 ## @end deftypefn
 
 ## Code originally licensed under:
 ##
 ## Copyright (c) 2007, Regents of the University of California
diff --git a/scripts/ode/ode23.m b/scripts/ode/ode23.m
--- a/scripts/ode/ode23.m
+++ b/scripts/ode/ode23.m
@@ -80,17 +80,17 @@
 ## @example
 ## @group
 ## fvdp = @@(@var{t},@var{y}) [@var{y}(2); (1 - @var{y}(1)^2) * @var{y}(2) - @var{y}(1)];
 ## [@var{t},@var{y}] = ode23 (fvdp, [0, 20], [2, 0]);
 ## @end group
 ## @end example
 ##
 ## Reference: For the definition of this method see
-## @url{http://en.wikipedia.org/wiki/List_of_Runge%E2%80%93Kutta_methods}.
+## @url{https://en.wikipedia.org/wiki/List_of_Runge%E2%80%93Kutta_methods}.
 ## @seealso{odeset, odeget, ode45, ode15s}
 ## @end deftypefn
 
 function varargout = ode23 (fun, trange, init, varargin)
 
   if (nargin < 3)
     print_usage ();
   endif
diff --git a/scripts/plot/draw/reducepatch.m b/scripts/plot/draw/reducepatch.m
--- a/scripts/plot/draw/reducepatch.m
+++ b/scripts/plot/draw/reducepatch.m
@@ -32,17 +32,17 @@
 ## The input patch can be represented by a structure @var{fv} with the
 ## fields @code{faces} and @code{vertices}, by two matrices @var{faces} and
 ## @var{vertices} (see, e.g., the result of @code{isosurface}), or by a
 ## handle to a patch object @var{patch_handle} (@pxref{XREFpatch,,patch}).
 ##
 ## The number of faces and vertices in the patch is reduced by iteratively
 ## collapsing the shortest edge of the patch to its midpoint (as discussed,
 ## e.g., here:
-## @url{http://libigl.github.io/libigl/tutorial/tutorial.html#meshdecimation}).
+## @url{https://libigl.github.io/libigl/tutorial/tutorial.html#meshdecimation}).
 ##
 ## Currently, only patches consisting of triangles are supported.  The
 ## resulting patch also consists only of triangles.
 ##
 ## If @code{reducepatch} is called with a handle to a valid patch
 ## @var{patch_handle}, and without any output arguments, then the given
 ## patch is updated immediately.
 ##
diff --git a/scripts/sparse/ilu.m b/scripts/sparse/ilu.m
--- a/scripts/sparse/ilu.m
+++ b/scripts/sparse/ilu.m
@@ -132,17 +132,17 @@
 ## nnz (ilu (A, opts))
 ## ans = 7840
 ## @end group
 ## @end example
 ##
 ## This shows that @var{A} has 7,840 nonzeros, the complete LU factorization
 ## has 126,478 nonzeros, and the incomplete LU factorization, with 0 level of
 ## fill-in, has 7,840 nonzeros, the same amount as @var{A}.  Taken from:
-## http://www.mathworks.com/help/matlab/ref/ilu.html
+## @url{http://www.mathworks.com/help/matlab/ref/ilu.html}
 ##
 ## @example
 ## @group
 ## A = gallery ("wathen", 10, 10);
 ## b = sum (A, 2);
 ## tol = 1e-8;
 ## maxit = 50;
 ## opts.type = "crout";
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -243,17 +243,17 @@
 ## @item
 ## C.T. Kelley, @cite{Iterative Methods for Linear and Nonlinear Equations},
 ## SIAM, 1995. (the base PCG algorithm)
 ##
 ## @item
 ## @nospell{Y. Saad}, @cite{Iterative Methods for Sparse Linear Systems},
 ## @nospell{PWS} 1996. (condition number estimate from PCG)
 ## Revised version of this book is available online at
-## @url{http://www-users.cs.umn.edu/~saad/books.html}
+## @url{https://www-users.cs.umn.edu/~saad/books.html}
 ## @end enumerate
 ##
 ## @seealso{sparse, pcr, gmres, bicg, bicgstab, cgs}
 ## @end deftypefn
 
 ## Author: Piotr Krzyzanowski <piotr.krzyzanowski@mimuw.edu.pl>
 ## Modified by: Vittoria Rezzonico <vittoria.rezzonico@epfl.ch>
 ##  - Add the ability to provide the pre-conditioner as two separate matrices
diff --git a/scripts/specfun/isprime.m b/scripts/specfun/isprime.m
--- a/scripts/specfun/isprime.m
+++ b/scripts/specfun/isprime.m
@@ -24,17 +24,17 @@
 ##
 ## A prime number is conventionally defined as a positive integer greater than
 ## 1 (e.g., 2, 3, @dots{}) which is divisible only by itself and 1.  Octave
 ## extends this definition to include both negative integers and complex
 ## values.  A negative integer is prime if its positive counterpart is prime.
 ## This is equivalent to @code{isprime (abs (x))}.
 ##
 ## If @code{class (@var{x})} is complex, then primality is tested in the domain
-## of Gaussian integers (@url{http://en.wikipedia.org/wiki/Gaussian_integer}).
+## of Gaussian integers (@url{https://en.wikipedia.org/wiki/Gaussian_integer}).
 ## Some non-complex integers are prime in the ordinary sense, but not in the
 ## domain of Gaussian integers.  For example, @math{5 = (1+2i)*(1-2i)} shows
 ## that 5 is not prime because it has a factor other than itself and 1.
 ## Exercise caution when testing complex and real values together in the same
 ## matrix.
 ##
 ## Examples:
 ##
diff --git a/scripts/statistics/quantile.m b/scripts/statistics/quantile.m
--- a/scripts/statistics/quantile.m
+++ b/scripts/statistics/quantile.m
@@ -31,17 +31,17 @@
 ##
 ## If @var{p} is unspecified, return the quantiles for
 ## @code{[0.00 0.25 0.50 0.75 1.00]}.
 ## The optional argument @var{dim} determines the dimension along which
 ## the quantiles are calculated.  If @var{dim} is omitted it defaults to
 ## the first non-singleton dimension.
 ##
 ## The methods available to calculate sample quantiles are the nine methods
-## used by R (@url{http://www.r-project.org/}).  The default value is
+## used by R (@url{https://www.r-project.org/}).  The default value is
 ## @w{@var{method} = 5}.
 ##
 ## Discontinuous sample quantile methods 1, 2, and 3
 ##
 ## @enumerate 1
 ## @item Method 1: Inverse of empirical distribution function.
 ##
 ## @item Method 2: Similar to method 1 but with averaging at discontinuities.
@@ -126,17 +126,17 @@
 ## @itemize @bullet
 ## @item @nospell{Becker, R. A., Chambers, J. M. and Wilks, A. R.} (1988)
 ## The New S Language.  @nospell{Wadsworth & Brooks/Cole}.
 ##
 ## @item @nospell{Hyndman, R. J. and Fan, Y.} (1996) Sample quantiles in
 ## statistical packages, American Statistician, 50, 361--365.
 ##
 ## @item R: A Language and Environment for Statistical Computing;
-## @url{http://cran.r-project.org/doc/manuals/fullrefman.pdf}.
+## @url{https://cran.r-project.org/doc/manuals/fullrefman.pdf}.
 ## @end itemize
 ##
 ## Examples:
 ## @c Set example in small font to prevent overfull line
 ##
 ## @smallexample
 ## @group
 ## x = randi (1000, [10, 1]);  # Create empirical data in range 1-1000
@@ -378,17 +378,17 @@ endfunction
 %!error quantile (1, 1, 3)
 %!error quantile ((1:5)', 0.5, 1, 0)
 %!error quantile ((1:5)', 0.5, 1, 10)
 
 ## For the cumulative probability values in @var{p}, compute the
 ## quantiles, @var{q} (the inverse of the cdf), for the sample, @var{x}.
 ##
 ## The optional input, @var{method}, refers to nine methods available in R
-## (http://www.r-project.org/).  The default is @var{method} = 7.
+## (https://www.r-project.org/).  The default is @var{method} = 7.
 ## @seealso{prctile, quantile, statistics}
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Vectorized version: Jaroslav Hajek <highegg@gmail.com>
 ## Description: Quantile function of empirical samples
 
 function inv = __quantile__ (x, p, method = 5)
 
