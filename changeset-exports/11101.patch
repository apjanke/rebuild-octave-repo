# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1287329635 -28800
#      Sun Oct 17 23:33:55 2010 +0800
# Node ID 1f9ab076f5f773c1e669ea085a55deda4a0f8beb
# Parent  cdf940db26a09504521fb45bf359833a684057bd
Include the 4 input (color) in the docstrings for mesh() and surf().

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-17  Ben Abbott <bpabbott@mac.com>
+
+	* plot/mesh.m, plot/surf.m: Include the 4th input (color) in the
+	docstring.
+
 2010-10-16  Ben Abbott <bpabbott@mac.com>
 
 	* plot/private/__errplot__.m, plot/errorbar.m: Allow line and marker
 	types to be set.
 
 2010-10-14  John W. Eaton  <jwe@octave.org>
 
 	* special-matrix/rosser.m: New tests.
diff --git a/scripts/plot/mesh.m b/scripts/plot/mesh.m
--- a/scripts/plot/mesh.m
+++ b/scripts/plot/mesh.m
@@ -13,24 +13,32 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} mesh (@var{x}, @var{y}, @var{z})
+## @deftypefn  {Function File} {} mesh (@var{x}, @var{y}, @var{z})
+## @deftypefnx {Function File} {} mesh (@var{z})
+## @deftypefnx {Function File} {} mesh (@dots{}, @var{c})
+## @deftypefnx {Function File} {} mesh (@var{hax}, @dots{})
+## @deftypefnx {Function File} {@var{h} = } mesh (@dots{})
 ## Plot a mesh given matrices @var{x}, and @var{y} from @code{meshgrid} and
 ## a matrix @var{z} corresponding to the @var{x} and @var{y} coordinates of
 ## the mesh.  If @var{x} and @var{y} are vectors, then a typical vertex
 ## is (@var{x}(j), @var{y}(i), @var{z}(i,j)).  Thus, columns of @var{z}
 ## correspond to different @var{x} values and rows of @var{z} correspond
 ## to different @var{y} values.
-## @seealso{meshgrid, contour}
+##
+## The color of the mesh is derirved from the @code{colormap}
+## and the value of @var{z}. Optionally the color of the mesh can be
+## specified independent of of @var{z}, by adding a fourth matrix, @var{c}.
+## @seealso{colormap, contour, meshgrid, surf}
 ## @end deftypefn
 
 ## Author: jwe
 
 function h = mesh (varargin)
 
   newplot ();
 
diff --git a/scripts/plot/surf.m b/scripts/plot/surf.m
--- a/scripts/plot/surf.m
+++ b/scripts/plot/surf.m
@@ -13,23 +13,31 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} surf (@var{x}, @var{y}, @var{z})
+## @deftypefnx {Function File} {} surf (@var{z})
+## @deftypefnx {Function File} {} surf (@dots{}, @var{c})
+## @deftypefnx {Function File} {} surf (@var{hax}, @dots{})
+## @deftypefnx {Function File} {@var{h} = } surf (@dots{})
 ## Plot a surface given matrices @var{x}, and @var{y} from @code{meshgrid} and
 ## a matrix @var{z} corresponding to the @var{x} and @var{y} coordinates of
 ## the mesh.  If @var{x} and @var{y} are vectors, then a typical vertex
 ## is (@var{x}(j), @var{y}(i), @var{z}(i,j)).  Thus, columns of @var{z}
 ## correspond to different @var{x} values and rows of @var{z} correspond
 ## to different @var{y} values.
-## @seealso{mesh, surface}
+##
+## The color of the surface is derirved from the @code{colormap} and
+## the value of @var{z}. Optionally the color of the surface can be
+## specified independent of of @var{z}, by adding a fourth matrix, @var{c}.
+## @seealso{colormap, contour, meshgrid, mesh}
 ## @end deftypefn
 
 ## Author: Kai Habel <kai.habel@gmx.de>
 
 function retval = surf (varargin)
 
   [h, varargin] = __plt_get_axis_arg__ ("surf", varargin{:});
 
