# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1518983987 -3600
#      Sun Feb 18 20:59:47 2018 +0100
# Node ID 3da6c628873a0d199d902340ddcccaa7491ccda4
# Parent  90bd5649983ce5db4dc4fd02a995067305bdf257
clear variable via context menu of workspace view (bug #53149)

* workspace-view.cc (contextmenu_requested): add action for clearing variable;
  (handle_contextmenu_clear): new slot for new action;
  (relay_contextmenu_command): new boolean argument whether variable is
  used as value or as string in the executed command

* workspace-view.h: new boolean argument for relay_contextmenu_command,
  default is false

diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -360,16 +360,19 @@ namespace octave
         const workspace_model *wm = static_cast<const workspace_model *> (m);
 
         if (! wm->is_top_level ())
           {
             rename->setDisabled (true);
             rename->setToolTip (tr ("Only top-level symbols may be renamed"));
           }
 
+        menu.addAction ("Clear " + var_name, this,
+                        SLOT (handle_contextmenu_clear ()));
+
         menu.addSeparator ();
 
         menu.addAction ("disp (" + var_name + ')', this,
                         SLOT (handle_contextmenu_disp ()));
 
         menu.addAction ("plot (" + var_name + ')', this,
                         SLOT (handle_contextmenu_plot ()));
 
@@ -468,16 +471,22 @@ namespace octave
         if (scope)
           val = scope.varval (var_name.toStdString ());
 
         emit edit_variable_signal (var_name, val);
       }
   }
 
   void
+  workspace_view::handle_contextmenu_clear (void)
+  {
+    relay_contextmenu_command ("clear", true);
+  }
+
+  void
   workspace_view::handle_contextmenu_disp (void)
   {
     relay_contextmenu_command ("disp");
   }
 
   void
   workspace_view::handle_contextmenu_plot (void)
   {
@@ -521,23 +530,28 @@ namespace octave
   void
   workspace_view::selectAll ()
   {
     if (m_view->hasFocus ())
       m_view->selectAll ();
   }
 
   void
-  workspace_view::relay_contextmenu_command (const QString& cmdname)
+  workspace_view::relay_contextmenu_command (const QString& cmdname, bool str)
   {
     QModelIndex index = m_view->currentIndex ();
 
     if (index.isValid ())
       {
-        QString var_name = get_var_name (index);
+        QString var_name;
+
+        if (str)
+          var_name = "\'" + get_var_name (index) + "\'";
+        else
+          var_name = get_var_name (index);
 
         emit command_requested (cmdname + " (" + var_name + ");");
       }
   }
 
   QString
   workspace_view::get_var_name (const QModelIndex& index)
   {
diff --git a/libgui/src/workspace-view.h b/libgui/src/workspace-view.h
--- a/libgui/src/workspace-view.h
+++ b/libgui/src/workspace-view.h
@@ -82,29 +82,30 @@ namespace octave
     void toggle_header (int column);
 
     void contextmenu_requested (const QPoint& pos);
 
     void handle_contextmenu_copy (void);
     void handle_contextmenu_copy_value (void);
     void handle_contextmenu_rename (void);
     void handle_contextmenu_edit (void);
+    void handle_contextmenu_clear (void);
     void handle_contextmenu_disp (void);
     void handle_contextmenu_plot (void);
     void handle_contextmenu_stem (void);
     void handle_contextmenu_filter (void);
 
     void handle_model_changed (void);
 
     void copyClipboard (void);
     void selectAll (void);
 
   private:
 
-    void relay_contextmenu_command (const QString& cmdname);
+    void relay_contextmenu_command (const QString& cmdname, bool str = false);
 
     QString get_var_name (const QModelIndex& index);
 
     QTableView *m_view;
     int m_view_previous_row_count;
 
     // We are using a sort model proxy so m_model won't provide the
     // correct ordering.  It is still OK to use this pointer to access
