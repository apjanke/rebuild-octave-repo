# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1259757722 -3600
#      Wed Dec 02 13:42:02 2009 +0100
# Node ID 2929c453af8f353ba72bc1d6e0de2ec7858a368e
# Parent  0cf0b1c32cde1656a0650d5f6d082709cd679ba2
omissions from 9899:9f25290a35e8

diff --git a/scripts/optimization/private/__fdjac__.m b/scripts/optimization/private/__fdjac__.m
new file mode 100644
--- /dev/null
+++ b/scripts/optimization/private/__fdjac__.m
@@ -0,0 +1,48 @@
+## Copyright (C) 2008, 2009 Jaroslav Hajek
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn{Function File} {} __fdjac__ (@var{fcn}, @var{x}, @var{fvec}, @var{err})
+## Undocumented internal function.
+## @end deftypefn
+
+function fjac = __fdjac__ (fcn, x, fvec, cdif, err = 0)
+  if (cdif)
+    err = (max (eps, err)) ^ (1/3);
+    h = max (abs (x), 1)*err; # FIXME?
+    fjac = zeros (length (fvec), numel (x));
+    for i = 1:numel (x)
+      x1 = x2 = x;
+      x1(i) += h(i);
+      x2(i) -= h(i);
+      fjac(:,i) = (fcn (x1)(:) - fcn (x2)(:)) / (x1(i) - x2(i));
+    endfor
+  else
+    err = sqrt (max (eps, err));
+    h = max (abs (x), 1)*err; # FIXME?
+    fjac = zeros (length (fvec), numel (x));
+    for i = 1:numel (x)
+      x1 = x;
+      x1(i) += h(i);
+      fjac(:,i) = (fcn (x1)(:) - fvec) / (x1(i) - x(i));
+    endfor
+  endif
+endfunction
+
+
+
diff --git a/scripts/plot/private/__add_datasource__.m b/scripts/plot/private/__add_datasource__.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/private/__add_datasource__.m
@@ -0,0 +1,55 @@
+## Copyright (C) 2008, 2009 David Bateman
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{newargs} =} __add_datasource__ (@var{fcn}, @var{h}, @var{data}, @var{varargin})
+## Undocumented internal function.
+## @end deftypefn
+
+function newargs = __add_datasource__ (fcn, h, data, varargin)
+
+  if (nargin < 3)
+    error ("internal error");
+  endif
+
+  if (ischar (data))
+    data = {data};
+  endif
+
+  for i = 1 : numel (data)
+    addproperty (strcat (data{i}, "datasource"), h, "string", "");
+  endfor
+
+  i = 0;
+  newargs = {};
+  while (i < numel (varargin))
+    arg = varargin{++i};
+    if (i != numel(varargin) && ischar (arg)
+	&& length (arg) > 9 && strcmpi (arg(end-9:end), "datasource"))
+      arg = tolower (arg);
+      val = varargin{++i};
+      if (ischar (val))
+	set (h, arg, val);
+      else
+	error ("%s: expecting data source to be a string", fcn);
+      endif
+    else
+      newargs{end + 1} = arg;
+    endif
+  endwhile
+endfunction
