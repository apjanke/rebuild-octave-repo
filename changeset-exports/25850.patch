# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1535832685 25200
#      Sat Sep 01 13:11:25 2018 -0700
# Node ID 153495e05477d4a7b1c33f898e687eba7b6101c8
# Parent  2ee4d384224fe4cb92f36940038a2823163d6d0c
issorted: return true on an empty array (bug #54599)

* data.cc (Fissorted): Return true on an empty array argument.  Add
corresponding BIST tests.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -6809,17 +6809,19 @@ This function does not support sparse ma
       else
         smode = get_sort_mode_option (args(1));
     }
 
   octave_value retval;
 
   octave_value arg = args(0);
 
-  if (by_rows)
+  if (arg.isempty ())
+    retval = true;
+  else if (by_rows)
     {
       if (arg.issparse ())
         error ("issorted: sparse matrices not yet supported");
 
       if (arg.ndims () != 2)
         error ("issorted: A must be a 2-D object");
 
       retval = arg.is_sorted_rows (smode) != UNSORTED;
@@ -6864,17 +6866,34 @@ This function does not support sparse ma
 %!assert (! issorted (uv, "either"))
 %!assert (issorted (sm, "rows", "either"))
 %!assert (issorted (flipud (sm), "rows", "either"))
 %!assert (issorted (sv, "either"))
 %!assert (issorted (fliplr (sv), "either"))
 %!assert (issorted (sv', "either"))
 %!assert (issorted (fliplr (sv)', "either"))
 
-%!error <needs a vector> issorted ([])
+%!assert (issorted ([]))
+%!assert (issorted ([], "rows"))
+%!assert (issorted ([], "ascend"))
+%!assert (issorted ([], "rows", "ascend"))
+%!assert (issorted ([], "descend"))
+%!assert (issorted ([], "rows", "descend"))
+%!assert (issorted ({}))
+%!assert (issorted ({}, "rows"))
+%!assert (issorted ({}, "ascend"))
+%!assert (issorted ({}, "rows", "ascend"))
+%!assert (issorted ({}, "descend"))
+%!assert (issorted ({}, "rows", "descend"))
+%!assert (issorted (""))
+%!assert (issorted ("", "rows"))
+%!assert (issorted ("", "ascend"))
+%!assert (issorted ("", "rows", "ascend"))
+%!assert (issorted ("", "descend"))
+%!assert (issorted ("", "rows", "descend"))
 
 ## Test input validation
 %!error issorted ()
 %!error issorted (1,2,3,4)
 %!error <second argument must be a string> issorted (1, 2)
 %!error <second argument must be a string> issorted (1, {"rows"})
 %!error <sparse matrices not yet supported> issorted (sparse ([1 2 3]), "rows")
 %!error <A must be a 2-D object> issorted (rand (2,2,2), "rows")
