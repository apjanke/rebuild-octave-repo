# HG changeset patch
# User jwe
# Date 848430390 0
#      Tue Nov 19 19:06:30 1996 +0000
# Node ID c0770352f56293b6fcc63a734dfb28b949238569
# Parent  987e934bbb8ca48a2901278c6de5954e5ed0d13d
[project @ 1996-11-19 19:06:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 Tue Nov 19 12:01:13 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* help.cc (Ftype): If a function is defined from a file and
+	transformed text has not been requested, just print the contents
+	of the file.
+
 	* parse.y (fold): New functions for constant folding for binary
 	and unary expressions.  Keep track of original text even when
 	transformations occur.
 	(make_binary_op, make_boolean_op, make_unary_op): Use them.
 	(finish_colon_expression, finish_matrix): Keep track of original
 	text even when transformations occur.
 
 	* help.cc (Ftype): Don't mess with Vps4.
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -26,16 +26,17 @@ Software Foundation, 59 Temple Place - S
 
 #include <csignal>
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
 
 #include <iostream.h>
+#include <fstream.h>
 #include <strstream.h>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
@@ -777,22 +778,49 @@ display the definition of each NAME that
 	  symbol_record *sym_rec = lookup_by_name (id, 0);
 
 	  if (sym_rec)
 	    {
 	      if (sym_rec->is_user_function ())
 		{
 		  tree_fvc *defn = sym_rec->def ();
 
-		  if (nargout == 0 && ! quiet)
-		    output_buf << argv[i] << " is a user-defined function\n";
+		  string fn = defn->fcn_file_name ();
+		  string ff = fcn_file_in_path (fn);
+
+		  if (pr_orig_txt && ! ff.empty ())
+		    {
+		      ifstream fs (ff.c_str (), ios::in);
+
+		      if (fs)
+			{
+			  if (nargout == 0 && ! quiet)
+			    output_buf << argv[i]
+				       << " is the function defined from:\n"
+				       << ff << "\n\n";
+
+			  char ch;
 
-		  tree_print_code tpc (output_buf, "", pr_orig_txt);
+			  while (fs.get (ch))
+			    output_buf << ch;
+			}
+		      else
+			output_buf << "unable to open `" << ff
+				   << "' for reading!\n";
+		    }
+		  else
+		    {
+		      if (nargout == 0 && ! quiet)
+			output_buf << argv[i]
+				   << " is a user-defined function:\n\n";
 
-		  defn->accept (tpc);
+		      tree_print_code tpc (output_buf, "", pr_orig_txt);
+
+		      defn->accept (tpc);
+		    }
 		}
 
 	      // XXX FIXME XXX -- this code should be shared with
 	      // Fwhich.
 
 	      else if (sym_rec->is_text_function ())
 		output_buf << argv[i] << " is a builtin text-function\n";
 	      else if (sym_rec->is_builtin_function ())
@@ -831,17 +859,17 @@ display the definition of each NAME that
 			}
 		      else
 			{
 			  if (! elts.empty ())
 			    output_buf << "type: structure `" << id
 			      << "' has no member `" << elts << "'\n";
 			  else
 			    output_buf << "type: `" << id
-			      << "' has unknown type!";
+			      << "' has unknown type!\n";
 			}
 		    }
 		  if (! tmp->is_map ())
 		    {
 		      tree_print_code tpc (output_buf, "", pr_orig_txt);
 
 		      tmp->accept (tpc);
 
