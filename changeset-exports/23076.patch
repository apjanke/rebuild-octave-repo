# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1484890623 18000
#      Fri Jan 20 00:37:03 2017 -0500
# Node ID 4803273e6323a0ff9f89206260da98c0bbaba5f2
# Parent  4e3d47dc7e257f7714f6a9e4502278ccf4fb5947
eliminate lo-macros.h

* lo-macros.h: Delete.  None of the macros defined in this file were
used and it was only included in dim-vector.h.
* liboctave/util/module.mk: Update.
* dim-vector.h: Don't include lo-macros.h.

diff --git a/liboctave/array/dim-vector.h b/liboctave/array/dim-vector.h
--- a/liboctave/array/dim-vector.h
+++ b/liboctave/array/dim-vector.h
@@ -27,17 +27,16 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <cassert>
 
 #include <initializer_list>
 #include <string>
 
 #include "lo-error.h"
-#include "lo-macros.h"
 #include "oct-refcount.h"
 
 //! Vector representing the dimensions (size) of an Array.
 /*!
   A dim_vector is used to represent dimensions of an Array.  It is used
   on its constructor to specify its size, or when reshaping it.
 
   @code{.cc}
diff --git a/liboctave/util/lo-macros.h b/liboctave/util/lo-macros.h
deleted file mode 100644
--- a/liboctave/util/lo-macros.h
+++ /dev/null
@@ -1,103 +0,0 @@
-/*
-
-Copyright (C) 2010-2016 VZLU Prague
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 3 of the License, or
-(at your option) any later version.
-
-Octave is distributed in the hope that it will be useful, but
-WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-GNU General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#if ! defined (octave_lo_macros_h)
-#define octave_lo_macros_h 1
-
-#include "octave-config.h"
-
-// Core macros.  Iteration is supported up to count 10.
-
-#define OCT_ITERATE_PARAM_MACRO0(MACRO, PARAM)
-#define OCT_ITERATE_PARAM_MACRO1(MACRO, PARAM)  \
-  MACRO(0, PARAM)
-#define OCT_ITERATE_PARAM_MACRO2(MACRO, PARAM)  \
-  MACRO(0, PARAM) MACRO(1, PARAM)
-#define OCT_ITERATE_PARAM_MACRO3(MACRO, PARAM)          \
-  MACRO(0, PARAM) MACRO(1, PARAM) MACRO(2, PARAM)
-#define OCT_ITERATE_PARAM_MACRO4(MACRO, PARAM)                          \
-  MACRO(0, PARAM) MACRO(1, PARAM) MACRO(2, PARAM) MACRO(3, PARAM)
-#define OCT_ITERATE_PARAM_MACRO5(MACRO, PARAM)                          \
-  MACRO(0, PARAM) MACRO(1, PARAM) MACRO(2, PARAM) MACRO(3, PARAM) MACRO(4, PARAM)
-#define OCT_ITERATE_PARAM_MACRO6(MACRO, PARAM)                  \
-  OCT_ITERATE_PARAM_MACRO5(MACRO, PARAM) MACRO(5, PARAM)
-#define OCT_ITERATE_PARAM_MACRO7(MACRO, PARAM)                          \
-  OCT_ITERATE_PARAM_MACRO5(MACRO, PARAM) MACRO(5, PARAM) MACRO(6, PARAM)
-#define OCT_ITERATE_PARAM_MACRO8(MACRO, PARAM)                          \
-  OCT_ITERATE_PARAM_MACRO5(MACRO, PARAM) MACRO(5, PARAM) MACRO(6, PARAM) MACRO(7, PARAM)
-#define OCT_ITERATE_PARAM_MACRO9(MACRO, PARAM)                  \
-  OCT_ITERATE_PARAM_MACRO8(MACRO, PARAM) MACRO(8, PARAM)
-#define OCT_ITERATE_PARAM_MACRO10(MACRO, PARAM)                         \
-  OCT_ITERATE_PARAM_MACRO8(MACRO, PARAM) MACRO(8, PARAM) MACRO(9, PARAM)
-
-// expands to MACRO(0, PARAM) MACRO(1, PARAM) ... MACRO(NUM-1, PARAM)
-#define OCT_ITERATE_PARAM_MACRO(MACRO, PARAM, NUM)      \
-  OCT_ITERATE_PARAM_MACRO##NUM(MACRO,PARAM)
-
-#define OCT_IF_PARAM0(MACRO, PARAM)
-#define OCT_IF_PARAM1(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM2(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM3(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM4(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM5(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM6(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM7(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM8(MACRO, PARAM) MACRO(PARAM)
-#define OCT_IF_PARAM9(MACRO, PARAM) MACRO(PARAM)
-
-// expands to MACRO(PARAM) if NUM > 0
-#define OCT_IF_PARAM(NUM, MACRO, PARAM) OCT_IF_PARAM##NUM(MACRO, PARAM)
-
-// concatenation and reverse concat
-#define OCT_CONCAT2(ARG1, ARG2) ARG1 ## ARG2
-#define OCT_CONCAT2_REVERSE(ARG1, ARG2) ARG2 ## ARG1
-
-#define OCT_IF_HELPER(X) X
-
-// expands to X if NUM > 0
-#define OCT_IF(NUM, X) OCT_IF_PARAM(NUM, OCT_IF_HELPER, X)
-
-#define OCT_ITERATE_MACRO_HELPER(NUM, MACRO) MACRO(NUM)
-
-// expands to MACRO(0) ... MACRO(NUM-1)
-#define OCT_ITERATE_MACRO(MACRO, NUM) OCT_ITERATE_PARAM_MACRO(OCT_ITERATE_MACRO_HELPER, MACRO, NUM)
-
-#define OCT_MAKE_LIST_HELPER1(ARG) ARG,
-
-// expands to MACRO(0), MACRO(1), ..., MACRO(NUM-1)
-#define OCT_MAKE_LIST_HELPER(NUM, MACRO) OCT_IF_PARAM(NUM,OCT_MAKE_LIST_HELPER1,) MACRO(NUM)
-
-#define OCT_MAKE_LIST(MACRO, NUM) OCT_ITERATE_PARAM_MACRO(OCT_MAKE_LIST_HELPER, MACRO, NUM)
-
-#define OCT_MAKE_DECL_LIST_HELPER(NUM, PREFIX)                          \
-  OCT_IF_PARAM(NUM,OCT_MAKE_LIST_HELPER1,) OCT_CONCAT2(PREFIX, NUM)
-
-// expands to TYPE PREFIX0, TYPE PREFIX1, ..., TYPE PREFIX ## (NUM-1)
-#define OCT_MAKE_DECL_LIST(TYPE, PREFIX, NUM)                           \
-  OCT_ITERATE_PARAM_MACRO(OCT_MAKE_DECL_LIST_HELPER, TYPE PREFIX, NUM)
-
-// expands to PREFIX0, PREFIX1, ..., PREFIX ## (NUM-1)
-#define OCT_MAKE_ARG_LIST(PREFIX, NUM)                                  \
-  OCT_ITERATE_PARAM_MACRO(OCT_MAKE_DECL_LIST_HELPER, PREFIX, NUM)
-
-#endif
-
diff --git a/liboctave/util/module.mk b/liboctave/util/module.mk
--- a/liboctave/util/module.mk
+++ b/liboctave/util/module.mk
@@ -8,17 +8,16 @@ UTIL_INC = \
   liboctave/util/data-conv.h \
   liboctave/util/functor.h \
   liboctave/util/glob-match.h \
   liboctave/util/lo-array-errwarn.h \
   liboctave/util/lo-array-gripes.h \
   liboctave/util/lo-cutils.h \
   liboctave/util/lo-hash.h \
   liboctave/util/lo-ieee.h \
-  liboctave/util/lo-macros.h \
   liboctave/util/lo-math.h \
   liboctave/util/lo-traits.h \
   liboctave/util/lo-utils.h \
   liboctave/util/oct-base64.h \
   liboctave/util/oct-binmap.h \
   liboctave/util/oct-cmplx.h \
   liboctave/util/oct-glob.h \
   liboctave/util/oct-inttypes.h \
