# HG changeset patch
# User Stefan Mahr <dac922@gmx.de>
# Date 1383519895 -3600
#      Mon Nov 04 00:04:55 2013 +0100
# Node ID c3f3fa5a5db55befc6937a8d8608da622e81400e
# Parent  cd7e09b0abf83c657d6c01ae0f6803674d3868e1
build: Add rule to check with jit compiler enabled

* configure.ac: Add conditional for HAVE_LLVM

* test/Makefile.am: Add check-jit target

* Makefile.am: Add check-jit target

diff --git a/Makefile.am b/Makefile.am
--- a/Makefile.am
+++ b/Makefile.am
@@ -124,16 +124,21 @@ all-local: $(noinst_SCRIPTS) $(INFO_FILE
 	@echo "   ./run-octave    - to run in place to test before installing"
 	@echo "   make check      - to run the tests"
 	@echo "   make install    - to install (PREFIX=$(prefix))"
 	@echo ""
 
 check: all
 	$(MAKE) -C test check
 
+if AMCOND_HAVE_LLVM
+check-jit: all
+	$(MAKE) -C test check-jit
+endif
+
 run-octave: run-octave.in Makefile
 	@$(do_subst_script_vals)
 	chmod a+rx "$@"
 
 bits/stl_algo.h: build-aux/stl_algo.h-fixed
 	$(MKDIR_P) bits
 	$(INSTALL_HEADER) $< $@
 
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -861,16 +861,19 @@ if test $build_jit = yes; then
     OCTAVE_LLVM_FUNCTION_ADDFNATTR_API
     OCTAVE_LLVM_CALLINST_ADDATTRIBUTE_API
     AC_LANG_POP(C++)
     CPPFLAGS="$save_CPPFLAGS"
     CXXFLAGS="$save_CXXFLAGS"
     LDFLAGS="$save_LDFLAGS"
   fi
 
+  AM_CONDITIONAL([AMCOND_HAVE_LLVM],
+    [test -z "$warn_llvm"])
+
   if test -z "$warn_llvm"; then
     AC_DEFINE(HAVE_LLVM, 1, [Define to 1 if LLVM is available.])
   else
     build_jit=no
     LLVM_CPPFLAGS=
     LLVM_CXXFLAGS=
     LLVM_LDFLAGS=
     LLVM_LIBS=
diff --git a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -66,16 +66,21 @@ include nest/module.mk
 all-local: .gdbinit
 
 .gdbinit: ../etc/gdbinit
 	@$(gdbinit_install_rule)
 
 check: sparse.tst bc-overload-tests.stamp
 	$(top_builddir)/run-octave $(RUN_OCTAVE_OPTIONS) --norc --silent --no-history $(srcdir)/fntests.m $(srcdir)
 
+if AMCOND_HAVE_LLVM
+check-jit: sparse.tst bc-overload-tests.stamp
+	$(top_builddir)/run-octave $(RUN_OCTAVE_OPTIONS) --jit-compiler --norc --silent --no-history $(srcdir)/fntests.m $(srcdir)
+endif
+
 sparse.tst: build-sparse-tests.sh
 	$(srcdir)/build-sparse-tests.sh
 
 GENERATED_BC_OVERLOADS_DIRS := \
   $(shell $(srcdir)/build-bc-overload-tests.sh --list-dirs)
 
 GENERATED_BC_OVERLOADS_FILES := \
   $(shell $(srcdir)/build-bc-overload-tests.sh --list-files)
