# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1224513077 14400
#      Mon Oct 20 10:31:17 2008 -0400
# Node ID 5cfeb7bc497a663a3321b15c0055e16f95dc5606
# Parent  041bb0c64f07eeaf3bef27fda18c0ad01980c72e
comet.m,hold.m: validate axes handle

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,15 +1,17 @@
 2008-10-20  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/__stem__.m: Respect new ordering of children when setting
 	baseline.
 
 	* plot/orient.m, plot/print.m: Properly validate figure handle.
 
+	* plot/hold.m, plot/comet.m: Properly validate axes handle.
+
 2008-10-20  David Bateman  <dbateman@free.fr>
 
 	* plot/plotyy.m: Test that an axes handle actually is one before
 	setting it.
 
 2008-10-17  David Bateman  <dbateman@free.fr>
 
 	* plot/__plt_get_axis_arg__.m: Exclude non-numeric and root figure
diff --git a/scripts/plot/comet.m b/scripts/plot/comet.m
--- a/scripts/plot/comet.m
+++ b/scripts/plot/comet.m
@@ -35,17 +35,18 @@
 
 ## Author: Ben Abbott bpabbott@mac.com
 ## Created: 2008-09-21
 
 function comet (varargin)
 
   if (nargin == 0)
     print_usage ();
-  elseif (numel (varargin{1}) == 1 && ishandle (varargin{1}))
+  elseif (numel (varargin{1}) == 1 && ishandle (varargin{1})
+	  && strcmpi (get (varargin{1}, "type"), "axes"))
     axes (varargin{1});
     varargin = varargin(2:end);
     numargin = nargin - 1;
   else
     numargin = nargin;
   endif
 
   p = 0.1;
diff --git a/scripts/plot/hold.m b/scripts/plot/hold.m
--- a/scripts/plot/hold.m
+++ b/scripts/plot/hold.m
@@ -39,17 +39,18 @@
 ## @var{h}.
 ## 
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command hold
 
 function hold (varargin)
 
-  if (nargin > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1}(1)))
+  if (nargin > 0 && numel (varargin{1}) == 1 && ishandle (varargin{1}(1))
+      && strcmp (get (varargin{1}, "type"), "axes"))
     [h, varargin, nargs] = __plt_get_axis_arg__ ("hold", varargin{:});
   elseif (nargin > 0 && numel (varargin{1}) > 1 && ishandle (varargin{1}(1)))
     print_usage ();
   else
     h = gcf ();
     nargs = numel (varargin);
   endif
 
