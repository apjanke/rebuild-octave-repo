# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1440015525 14400
#      Wed Aug 19 16:18:45 2015 -0400
# Node ID 951019b7afd4bc6309d2d2c21eafc58e32a706a4
# Parent  1a22083b59295db567987951c3ae0286c4595e96
use different approach to avoid gnulib warning

* lo-specfun.cc (xlog): New static inline template with float and
double specializations.
(Lanczos_approximation_psi): Call xlog instead of gnulib::log.

diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -3738,16 +3738,37 @@ ellipj (const Complex& u, double m, Comp
       sn = Complex (ss*dd1/ddd, cc*dd*ss1*cc1/ddd);
       cn = Complex (cc*cc1/ddd, -ss*dd*ss1*dd1/ddd);
       dn = Complex (dd*cc1*dd1/ddd, -m*ss*cc*ss1/ddd);
     }
 }
 
 static const double pi = 3.14159265358979323846;
 
+template <class T>
+static inline T
+xlog (const T& x)
+{
+  return log (x);
+}
+
+template <>
+inline double
+xlog (const double& x)
+{
+  return gnulib::log (x);
+}
+
+template <>
+inline float
+xlog (const float& x)
+{
+  return gnulib::logf (x);
+}
+
 template<class T>
 static T
 Lanczos_approximation_psi (const T zc)
 {
   // Coefficients for C.Lanczos expansion of psi function from XLiFE++
   // gammaFunctions psi_coef[k] = - (2k+1) * lg_coef[k] (see melina++
   // gamma functions -1/12, 3/360,-5/1260, 7/1680,-9/1188,
   // 11*691/360360,-13/156, 15*3617/122400, ? , ?
@@ -3760,17 +3781,17 @@ Lanczos_approximation_psi (const T zc)
   };
 
   T overz2  = T (1.0) / (zc * zc);
   T overz2k = overz2;
 
   T p = 0;
   for (octave_idx_type k = 0; k < 10; k++, overz2k *= overz2)
     p += dg_coeff[k] * overz2k;
-  p += gnulib::log (zc) - T (0.5) / zc;
+  p += xlog (zc) - T (0.5) / zc;
   return p;
 }
 
 template<class T>
 T
 psi (const T& z)
 {
   static const double euler_mascheroni = 0.577215664901532860606512090082402431042;
