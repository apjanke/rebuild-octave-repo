# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1463634037 14400
#      Thu May 19 01:00:37 2016 -0400
# Node ID 11af9c03400ccf3dd7e3800e8b04e2c0f997a831
# Parent  cb0fdd941d84572ceb045cfac80338aa68a27d29
write namespace keyword and name on same line in C++ files

diff --git a/libinterp/corefcn/jit-typeinfo.h b/libinterp/corefcn/jit-typeinfo.h
--- a/libinterp/corefcn/jit-typeinfo.h
+++ b/libinterp/corefcn/jit-typeinfo.h
@@ -105,18 +105,17 @@ jit_array
   T *array;
 };
 
 typedef jit_array<NDArray, double> jit_matrix;
 
 std::ostream& operator << (std::ostream& os, const jit_matrix& mat);
 
 // calling convention
-namespace
-jit_convention
+namespace jit_convention
 {
   enum
   type
   {
     // internal to jit
     internal,
 
     // an external C call
diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -53,21 +53,19 @@ extern "C" {
 #include "quit.h"
 #include "singleton-cleanup.h"
 #include "str-vec.h"
 
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
 #  include <algorithm>
 #endif
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     file_ops *octave::sys::file_ops::instance = 0;
 
     bool
     octave::sys::file_ops::instance_ok (void)
     {
       bool retval = true;
 
diff --git a/liboctave/system/file-ops.h b/liboctave/system/file-ops.h
--- a/liboctave/system/file-ops.h
+++ b/liboctave/system/file-ops.h
@@ -26,21 +26,19 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <string>
 
 #include <sys/types.h>
 
 #include "str-vec.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     struct
     OCTAVE_API
     file_ops
     {
     public:
 
       // Use a singleton class for dir_sep data members instead of just
diff --git a/liboctave/system/oct-env.cc b/liboctave/system/oct-env.cc
--- a/liboctave/system/oct-env.cc
+++ b/liboctave/system/oct-env.cc
@@ -55,21 +55,19 @@ Free Software Foundation, Inc.
 #include "lo-error.h"
 #include "lo-sysdep.h"
 #include "lo-utils.h"
 #include "oct-env.h"
 #include "oct-passwd.h"
 #include "oct-syscalls.h"
 #include "singleton-cleanup.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     env::env (void)
       : follow_symbolic_links (true), verbatim_pwd (true),
         current_directory (), prog_name (), prog_invocation_name (),
         user_name (), host_name ()
     {
       // Get a real value for the current directory.
       do_getcwd ();
diff --git a/liboctave/system/oct-env.h b/liboctave/system/oct-env.h
--- a/liboctave/system/oct-env.h
+++ b/liboctave/system/oct-env.h
@@ -22,21 +22,19 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_oct_env_h)
 #define octave_oct_env_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     class
     OCTAVE_API
     env
     {
     protected:
 
       env (void);
diff --git a/liboctave/system/oct-group.cc b/liboctave/system/oct-group.cc
--- a/liboctave/system/oct-group.cc
+++ b/liboctave/system/oct-group.cc
@@ -39,21 +39,19 @@ along with Octave; see the file COPYING.
 
 OCTAVE_NORETURN static
 void
 err_invalid (void)
 {
   (*current_liboctave_error_handler) ("invalid group object");
 }
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     std::string
     group::name (void) const
     {
       if (! ok ())
         err_invalid ();
 
       return m_name;
diff --git a/liboctave/system/oct-group.h b/liboctave/system/oct-group.h
--- a/liboctave/system/oct-group.h
+++ b/liboctave/system/oct-group.h
@@ -26,21 +26,19 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <string>
 
 #include <sys/types.h>
 
 #include "str-vec.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     class
     OCTAVE_API
     group
     {
     public:
 
       group (void)
diff --git a/liboctave/system/oct-passwd.cc b/liboctave/system/oct-passwd.cc
--- a/liboctave/system/oct-passwd.cc
+++ b/liboctave/system/oct-passwd.cc
@@ -38,21 +38,19 @@ along with Octave; see the file COPYING.
 
 OCTAVE_NORETURN static
 void
 err_invalid (void)
 {
   (*current_liboctave_error_handler) ("invalid password object");
 }
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     std::string
     password::name (void) const
     {
       if (! ok ())
         err_invalid ();
 
       return m_name;
diff --git a/liboctave/system/oct-passwd.h b/liboctave/system/oct-passwd.h
--- a/liboctave/system/oct-passwd.h
+++ b/liboctave/system/oct-passwd.h
@@ -24,21 +24,19 @@ along with Octave; see the file COPYING.
 #define octave_oct_passwd_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
 #include <sys/types.h>
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     class
     OCTAVE_API
     password
     {
     public:
 
       password (void)
diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -44,18 +44,17 @@ along with Octave; see the file COPYING.
 #include "oct-syscalls.h"
 #include "str-vec.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
 
 namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     int
     dup2 (int old_fd, int new_fd)
     {
       std::string msg;
       return octave::sys::dup2 (old_fd, new_fd, msg);
     }
 
diff --git a/liboctave/system/oct-syscalls.h b/liboctave/system/oct-syscalls.h
--- a/liboctave/system/oct-syscalls.h
+++ b/liboctave/system/oct-syscalls.h
@@ -26,21 +26,19 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <string>
 
 class string_vector;
 
 #include <sys/types.h>
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     extern OCTAVE_API int dup2 (int, int);
     extern OCTAVE_API int dup2 (int, int, std::string&);
 
     extern OCTAVE_API int execvp (const std::string&, const string_vector&);
     extern OCTAVE_API int execvp (const std::string&, const string_vector&,
                                   std::string&);
 
diff --git a/liboctave/system/oct-time.cc b/liboctave/system/oct-time.cc
--- a/liboctave/system/oct-time.cc
+++ b/liboctave/system/oct-time.cc
@@ -35,21 +35,19 @@ along with Octave; see the file COPYING.
 #include "strftime.h"
 
 #include "lo-error.h"
 #include "lo-math.h"
 #include "lo-utils.h"
 #include "oct-locbuf.h"
 #include "oct-time.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     time::time (double d)
       : ot_unix_time (static_cast<time_t> (d)), ot_usec (0)
     {
       double ip;
       ot_usec = static_cast<int> (std::modf (d, &ip) * 1e6);
     }
 
diff --git a/liboctave/system/oct-time.h b/liboctave/system/oct-time.h
--- a/liboctave/system/oct-time.h
+++ b/liboctave/system/oct-time.h
@@ -23,21 +23,19 @@ along with Octave; see the file COPYING.
 #if ! defined (octave_oct_time_h)
 #define octave_oct_time_h 1
 
 #include "octave-config.h"
 
 #include <ctime>
 #include <string>
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     class base_tm;
 
     class
     OCTAVE_API
     time
     {
     public:
diff --git a/liboctave/system/oct-uname.cc b/liboctave/system/oct-uname.cc
--- a/liboctave/system/oct-uname.cc
+++ b/liboctave/system/oct-uname.cc
@@ -26,21 +26,19 @@ along with Octave; see the file COPYING.
 
 #include <cerrno>
 #include <cstring>
 
 #include <sys/utsname.h>
 
 #include "oct-uname.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     void
     uname::init (void)
     {
       struct utsname unm;
 
       err = ::uname (&unm);
 
diff --git a/liboctave/system/oct-uname.h b/liboctave/system/oct-uname.h
--- a/liboctave/system/oct-uname.h
+++ b/liboctave/system/oct-uname.h
@@ -22,21 +22,19 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_oct_uname_h)
 #define octave_oct_uname_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     class
     OCTAVE_API
     uname
     {
     public:
 
       uname (void)
diff --git a/liboctave/util/lo-ieee.h b/liboctave/util/lo-ieee.h
--- a/liboctave/util/lo-ieee.h
+++ b/liboctave/util/lo-ieee.h
@@ -112,18 +112,17 @@ extern OCTAVE_API int __lo_ieee_float_si
                           __lo_ieee_float_is_NA (x) : __lo_ieee_is_NA (x))
 #define lo_ieee_is_NaN_or_NA(x) (sizeof (x) == sizeof (float) ? \
                           __lo_ieee_float_is_NaN_or_NA (x) : __lo_ieee_is_NaN_or_NA (x))
 #define lo_ieee_signbit(x) (sizeof (x) == sizeof (float) ? \
                           __lo_ieee_float_signbit (x) : __lo_ieee_signbit (x))
 
 #if defined (__cplusplus)
 
-namespace
-octave
+namespace octave
 {
   template <typename T>
   struct numeric_limits
   {
     static T NA (void) { return static_cast<T> (0); }
     static T NaN (void) { return static_cast<T> (0); }
     static T Inf (void) { return static_cast<T> (0); }
   };
diff --git a/liboctave/util/oct-glob.cc b/liboctave/util/oct-glob.cc
--- a/liboctave/util/oct-glob.cc
+++ b/liboctave/util/oct-glob.cc
@@ -42,21 +42,19 @@ along with Octave; see the file COPYING.
 static bool
 single_match_exists (const std::string& file)
 {
   file_stat s (file);
 
   return s.exists ();
 }
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     bool
     fnmatch (const string_vector& pat, const std::string& str, int fnm_flags)
     {
       int npat = pat.numel ();
 
       const char *cstr = str.c_str ();
 
diff --git a/liboctave/util/oct-glob.h b/liboctave/util/oct-glob.h
--- a/liboctave/util/oct-glob.h
+++ b/liboctave/util/oct-glob.h
@@ -22,21 +22,19 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_oct_glob_h)
 #define octave_oct_glob_h 1
 
 #include "octave-config.h"
 
 #include "str-vec.h"
 
-namespace
-octave
+namespace octave
 {
-  namespace
-  sys
+  namespace sys
   {
     extern bool
     fnmatch (const string_vector& pat, const std::string& str,
              int fnmatch_flags);
 
     extern string_vector
     glob (const string_vector&);
   }
