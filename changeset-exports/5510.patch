# HG changeset patch
# User jwe
# Date 1130349056 0
#      Wed Oct 26 17:50:56 2005 +0000
# Node ID 3fadccb05d5d057e59047e202887bcf150343bdf
# Parent  b8fc8af2d04da975a6b8d8a97797cbe1d8dea5b0
[project @ 2005-10-26 17:50:55 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2005-10-26  John W. Eaton  <jwe@octave.org>
 
+	* oct-procbuf.cc (octave_procbuf::open): Cast 0 to void * to avoid
+	new g++ warning.
+	* toplev.cc (Fsystem): Likewise.
+
 	Changes for GCC 4.1, tip from Arno J. Klaassen
 	<arno@heho.snv.jussieu.fr>:
 
 	* ov.h (do_unary_op (octave_value::unary_op, const octave_value&)):
 	Publish externally used friend function.
 	(do_unary_op (octave_value::unary_op, const octave_value&,
 	const octave_value&)): Likewise.
 
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -131,17 +131,17 @@ octave_procbuf::open (const char *comman
 	    {
 	      ::fclose (fp);
 	      fp = 0;
 	    }
 
 	  octave_procbuf_list = octave_procbuf_list->next;
 	}
 
-      execl ("/bin/sh", "sh", "-c", command, 0);
+      execl ("/bin/sh", "sh", "-c", command, static_cast<void *> (0));
 
       exit (127);
     }
 
   if (Vkluge_procbuf_delay > 0)
     octave_usleep (Vkluge_procbuf_delay);
 
   ::close (child_end);
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -475,17 +475,18 @@ variable @code{status} to the integer @s
 
 	      if (pid < 0) 
 		error ("system: fork failed -- can't create child process");
 	      else if (pid == 0)
 		{
 		  // XXX FIXME XXX -- should probably replace this
 		  // call with something portable.
 
-		  execl ("/bin/sh", "sh", "-c", cmd_str.c_str (), 0);
+		  execl ("/bin/sh", "sh", "-c", cmd_str.c_str (),
+			 static_cast<void *> (0));
 
 		  panic_impossible ();
 		}
 	      else
 		retval(0) = pid;
 #else
  	      error ("asynchronous system calls are not supported");
 #endif
