# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1246703107 -7200
#      Sat Jul 04 12:25:07 2009 +0200
# Node ID f008a3a1bcb05635fb7c3abfc5918cb8eaf92456
# Parent  5d46c4a894e81548889d677381c80db0a56d01f3
add missing unwind_protect::run in pt-eval.cc

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-07-04  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-eval.cc (do_unwind_protect_cleanup_code): Add missing
+	unwind_protect::run.
+
 2009-07-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* help.cc (do_which): Also look for files.
 
 2009-07-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Cell.cc (Cell::index): Use proper resize_fill_value.
 
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -1344,20 +1344,17 @@ make_fcn_handle (const std::string& nm)
 	case '|':
 	  tnm = "or";
 	  break;
 	}
     }
 
   octave_value f = symbol_table::find_function (tnm);
 
-  if (f.is_defined ())
-    retval = octave_value (new octave_fcn_handle (f, tnm));
-  else
-    error ("error creating function handle \"@%s\"", nm.c_str ());
+  retval = octave_value (new octave_fcn_handle (f, tnm));
 
   return retval;
 }
 
 /*
 %!test
 %! x = {".**", "power";
 %!      ".'", "transpose";
diff --git a/src/pt-eval.cc b/src/pt-eval.cc
--- a/src/pt-eval.cc
+++ b/src/pt-eval.cc
@@ -965,16 +965,18 @@ do_unwind_protect_cleanup_code (tree_sta
   // We don't want to ignore errors that occur in the cleanup code, so
   // if an error is encountered there, leave error_state alone.
   // Otherwise, set it back to what it was before.
 
   if (error_state)
     unwind_protect::discard ();
   else
     unwind_protect::run ();
+
+  unwind_protect::run ();
 }
 
 void
 tree_evaluator::visit_unwind_protect_command (tree_unwind_protect_command& cmd)
 {
   tree_statement_list *cleanup_code = cmd.cleanup ();
 
   unwind_protect::add_fcn (do_unwind_protect_cleanup_code, cleanup_code);
