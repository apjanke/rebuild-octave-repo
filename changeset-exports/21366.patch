# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1456537958 18000
#      Fri Feb 26 20:52:38 2016 -0500
# Node ID ad07ed235053de22a80db3381cec067cffe9a888
# Parent  5b9618f4f841c7880185f7814522bea8e80338c1
Apply {x|y}color to 2D axes when using gnuplot (bug #42947).

* __gnuplot_draw__axes__.m: Introduce internal functions do_border_2d(),
zeroaxes(), and arrow().  Use the gnuplot "set {x|y}zeroaxes" or "set arrow"
commands to color the x or y axes according to the xcolor and ycolor axes
properties.

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -1461,77 +1461,63 @@ function __gnuplot_draw_axes__ (h, plot_
         fprintf (plot_stream, "set cbrange [%.15e:%.15e];\n", clim);
       endif
     else
       fprintf (plot_stream, "set cbrange [1:%d];\n", cmap_sz +
                rows (addedcmap));
     endif
   endif
 
+  axis_idx = data_idx;
   if (strcmpi (axis_obj.box, "on"))
     if (nd == 3)
       fputs (plot_stream, "set border 4095;\n");
     else
-      fputs (plot_stream, "set border 431;\n");
+      axis_idx = do_border_2d (axis_obj, plot_stream, axis_idx);
     endif
   else
     if (nd == 3)
       fputs (plot_stream, "set border 895;\n");
     elseif (! isempty (axis_obj.ytick))
       if (strcmpi (axis_obj.yaxislocation, "right"))
         fprintf (plot_stream, "unset ytics; set y2tics %s nomirror\n",
                  axis_obj.tickdir);
         if (strcmpi (axis_obj.xaxislocation, "top"))
           maybe_do_x2tick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 12;\n");
         elseif (strcmpi (axis_obj.xaxislocation, "bottom"))
           maybe_do_xtick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 9;\n");
         else # xaxislocation == zero
           fprintf (plot_stream, "unset x2tics; set xtics %s nomirror\n",
                    axis_obj.tickdir);
-          fputs (plot_stream, "set border 8;\n");
-          fprintf (plot_stream, "set xzeroaxis lt -1 lw %f;\n",
-                   axis_obj.linewidth);
         endif
       elseif (strcmpi (axis_obj.yaxislocation, "left"))
         fprintf (plot_stream, "unset y2tics; set ytics %s nomirror\n",
                  axis_obj.tickdir);
         if (strcmpi (axis_obj.xaxislocation, "top"))
           maybe_do_x2tick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 6;\n");
         elseif (strcmpi (axis_obj.xaxislocation, "bottom"))
           maybe_do_xtick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 3;\n");
         else # xaxislocation == zero
           maybe_do_xtick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 2;\n");
-          fprintf (plot_stream, "set xzeroaxis lt -1 lw %f;\n",
-                   axis_obj.linewidth);
         endif
       else # yaxislocation == zero
         fprintf (plot_stream, "unset y2tics; set ytics %s nomirror\n",
                  axis_obj.tickdir);
         if (strcmpi (axis_obj.xaxislocation, "top"))
           maybe_do_x2tick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 4;\n");
         elseif (strcmpi (axis_obj.xaxislocation, "bottom"))
           maybe_do_xtick_mirror (plot_stream, axis_obj)
-          fputs (plot_stream, "set border 1;\n");
         else # xaxislocation == zero
           maybe_do_xtick_mirror (plot_stream, axis_obj)
           fprintf (plot_stream, "unset y2tics; set ytics %s nomirror\n",
                    axis_obj.tickdir);
           fputs (plot_stream, "unset border;\n");
-          fprintf (plot_stream, "set xzeroaxis lt -1 lw %f;\n",
-                   axis_obj.linewidth);
         endif
-        fprintf (plot_stream, "set yzeroaxis lt -1 lw %f;\n",
-                 axis_obj.linewidth);
       endif
+      axis_idx = do_border_2d (axis_obj, plot_stream, axis_idx);
     endif
   endif
 
   if (strcmpi (axis_obj.visible, "off"))
     fputs (plot_stream, "unset border; unset tics\n");
   else
     fprintf (plot_stream, "set border lw %f;\n", axis_obj.linewidth);
   endif
@@ -1781,16 +1767,56 @@ endfunction
 function fontspec = create_fontspec (f, s, gp_term)
   if (isempty (f) || strcmp (f, "*") || strcmp (gp_term, "tikz"))
     fontspec = sprintf ("font \",%d\"", s);
   else
     fontspec = sprintf ("font \"%s,%d\"", f, s);
   endif
 endfunction
 
+function idx = do_border_2d (obj, plot_stream, idx)
+  fprintf (plot_stream, "set border 0\n");
+
+  if (strcmp (obj.box, "on") || strcmp (obj.xaxislocation, "bottom"))
+    arrow (1, obj.xcolor, obj.linewidth, [0,0,0],[1,0,0]);
+  endif
+  if (strcmp (obj.box, "on") || strcmp (obj.xaxislocation, "top"))
+    arrow (2, obj.xcolor, obj.linewidth, [0,1,0],[1,1,0]);
+  endif
+  if (strcmp (obj.box, "on") || strcmp (obj.yaxislocation, "left"))
+    arrow (3, obj.ycolor, obj.linewidth, [0,0,0],[0,1,0]);
+  endif
+  if (strcmp (obj.box, "on") || strcmp (obj.yaxislocation, "right"))
+    arrow (4, obj.ycolor, obj.linewidth, [1,0,0],[1,1,0]);
+  endif
+
+  if (strcmp (obj.xaxislocation, "zero"))
+    idx = zeroaxis (idx, obj.xcolor, "x");
+  endif
+  if (strcmp (obj.yaxislocation, "zero"))
+    idx = zeroaxis (idx, obj.ycolor, "y");
+  endif
+
+  function idx = zeroaxis (idx, lc, ax)
+    idx = idx + 1;
+    do_linestyle_command (obj, lc, idx, false, plot_stream);
+    fprintf (plot_stream, "set %szeroaxis ls %d ", ax, idx);
+    fprintf (plot_stream, "lw %.3f\n", obj.linewidth);
+  endfunction
+
+  function arrow (idx, lc, lw, from, to)
+    fprintf (plot_stream, "set arrow %d ", idx);
+    fprintf (plot_stream, "nohead nofilled front dashtype solid ");
+    fprintf (plot_stream, "lc rgb ""#%02x%02x%02x"" ", round (255 * lc));
+    fprintf (plot_stream, "linewidth %.3f ", obj.linewidth);
+    fprintf (plot_stream, "from graph %d,%d,%d ", from);
+    fprintf (plot_stream, "to graph %d,%d,%d\n", to);
+  endfunction
+endfunction
+
 function style = do_linestyle_command (obj, linecolor, idx,
                                        plot_stream, errbars = "")
   style = {};
 
   fprintf (plot_stream, "set style line %d default;\n", idx);
   fprintf (plot_stream, "set style line %d", idx);
 
   found_style = false;
