# HG changeset patch
# User jwe
# Date 927986536 0
#      Sat May 29 14:02:16 1999 +0000
# Node ID 7f8827f4040a333253cd8f7deac680d2395a47c5
# Parent  dd00769643ae90758608ae5c11b69b3b09f92bee
[project @ 1999-05-29 14:01:55 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Fri May 28 11:02:37 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DLD-FUNCTIONS/chol.cc (Fchol): If two output arguments, never
+	produce error message.
+
 Thu May 27 18:28:35 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/chol.cc (Fchol): Also return info as second output.
 
 	* DLD-FUNCTIONS/minmax.cc (max (const ComplexMatrix&, const
 	ComplexMatrix&)): Correct test for real columns only.  
 	(min (const ComplexMatrix&, const ComplexMatrix&)): Likewise.
 
diff --git a/src/DLD-FUNCTIONS/chol.cc b/src/DLD-FUNCTIONS/chol.cc
--- a/src/DLD-FUNCTIONS/chol.cc
+++ b/src/DLD-FUNCTIONS/chol.cc
@@ -61,40 +61,40 @@ DEFUN_DLD (chol, args, nargout,
   if (arg.is_real_type ())
     {
       Matrix m = arg.matrix_value ();
 
       if (! error_state)
 	{
 	  int info;
 	  CHOL fact (m, info);
-	  if (info != 0)
-	    error ("chol: matrix not positive definite");
-	  else
+	  if (nargout == 2 || info == 0)
 	    {
 	      retval(1) = static_cast<double> (info);
 	      retval(0) = fact.chol_matrix ();
 	    }
+	  else
+	    error ("chol: matrix not positive definite");
 	}
     }
   else if (arg.is_complex_type ())
     {
       ComplexMatrix m = arg.complex_matrix_value ();
 
       if (! error_state)
 	{
 	  int info;
 	  ComplexCHOL fact (m, info);
-	  if (info != 0)
-	    error ("chol: matrix not positive definite");
-	  else
+	  if (nargout == 2 || info == 0)
 	    {
 	      retval(1) = static_cast<double> (info);
 	      retval(0) = fact.chol_matrix ();
 	    }
+	  else
+	    error ("chol: matrix not positive definite");
 	}
     }
   else
     {
       gripe_wrong_type_arg ("chol", arg);
     }
 
   return retval;
