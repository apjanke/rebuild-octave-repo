# HG changeset patch
# User jwe
# Date 1069987812 0
#      Fri Nov 28 02:50:12 2003 +0000
# Node ID 7a80bb43ea63d0f636ddf02b41738435db39445f
# Parent  4ad69c3588a9c8240db2ab3bebe88f5d98b4744a
[project @ 2003-11-28 02:50:12 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2003-11-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pt-arg-list.cc (F__end__): Handle N-d objects.
+
 2003-11-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* OPERATORS/op-b-bm.cc: New file.
 
 	* OPERATORS/op-bm-b.cc (op_el_and, op_el_or): Define and install.
 	* OPERATORS/op-bm-bm.cc (op_el_and, op_el_or, assign): Likewise.
 
 	* ov-str-mat.cc (CHAR_MATRIX_CONV): New macro.
diff --git a/src/pt-arg-list.cc b/src/pt-arg-list.cc
--- a/src/pt-arg-list.cc
+++ b/src/pt-arg-list.cc
@@ -118,55 +118,47 @@ static int index_position = 0;
 
 DEFCONSTFUN (__end__, , ,
   "internal function")
 {
   octave_value retval;
 
   if (indexed_object)
     {
+      dim_vector dv = indexed_object->dims ();
+
       switch (index_position)
 	{
 	case -1:
-	  // XXX FIXME XXX -- we really want "numel" here.
 	  {
-	    int nr = indexed_object->rows ();
-	    int nc = indexed_object->columns ();
-
-	    if (nr < 0 || nc < 0)
-	      ::error ("invalid use of end: (nr=%d, nc=%d)", nr, nc);
-	    else
-	      retval = nr * nc;
-	  }
-	  break;
-
-	case 0:
-	  {
-	    int nr = indexed_object->rows ();
+	    int numel = indexed_object->numel ();
 
-	    if (nr < 0)
-	      ::error ("invalid use of end: (nr=%d)", nr);
+	    if (numel < 0)
+	      {
+		std::string dv_str = dv.str ();
+		::error ("invalid use of end: (index 1, dims %s)",
+			 dv_str.c_str ());
+	      }
 	    else
-	      retval = nr;
-	  }
-	  break;
-
-	case 1:
-	  {
-	    int nc = indexed_object->columns ();
-
-	    if (nc < 0)
-	      ::error ("invalid use of end: (nc=%d)", nc);
-	    else
-	      retval = nc;
+	      retval = numel;
 	  }
 	  break;
 
 	default:
-	  ::error ("__end__: internal error");
+	  {
+
+	    if (index_position < dv.length ())
+	      retval = dv(index_position);
+	    else
+	      {
+		std::string dv_str = dv.str ();
+		::error ("invalid use of end: (index %d, dims %s)",
+			 index_position+1, dv_str.c_str ());
+	      }
+	  }
 	  break;
 	}
     }
   else
     ::error ("invalid use of end");
 
   return retval;
 }
