# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1429452784 14400
#      Sun Apr 19 10:13:04 2015 -0400
# Node ID bb59bdbdb8acdefbe8030bd502ff5b53688e410b
# Parent  c164cfc24bdd5a29bd07bfcbeb7f0d4e01d0f738
Fix compilation error when building with OSMesa but without gl2ps (bug #44870)

* __osmesa_print__.cc (F__osmesa_print__): Add #ifdef HAVE_GL2PS_H block
around section that requires gl2ps.  Add HAVE_GL2PS_H to %!tests.

diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -171,16 +171,19 @@ instead.\n\
       outer_frame.add_fcn (reset_visibility, &fp);
 
       fp.set_visible ("off");
     }
 
   if (nargin == 3)
     {
       // use gl2ps
+#ifndef HAVE_GL2PS_H
+      gripe_disabled_feature ("__osmesa_print__", "gl2ps");
+#else
       std::string file = args(1).string_value ();
       std::string term = args(2).string_value ();
 
       if (! error_state)
         {
           size_t pos_p = file.find_first_of ("|");
           size_t pos_c = file.find_first_not_of ("| ");
 
@@ -210,16 +213,17 @@ instead.\n\
 
                   // Make sure buffered commands are finished!!!
                   glFinish ();
                 }
               else
                 error ("__osmesa_print__: Couldn't create file \"%s\"", file.c_str ());
             }
         }
+#endif
     }
   else
     {
       // return RGB image
       opengl_renderer rend;
       rend.draw (fobj);
 
       // Make sure buffered commands are finished!!!
@@ -256,32 +260,32 @@ instead.\n\
   return retval;
 }
 
 /*
 ## FIXME: osmesa does not work correctly on Windows platforms.
 ##        This is not critical, since this facility will mostly be used in
 ##        the future for generating the images in Octave's own documentation.
 ##        For the moment, disable these tests on PC's and Macs.
-%!testif HAVE_OSMESA
+%!testif HAVE_OSMESA, HAVE_GL2PS_H
 %! if (isunix ())
 %!   h = figure ("visible", "off");
 %!   fn = tempname ();
 %!   sombrero ();
 %!   __osmesa_print__ (h, fn, "svg");
 %!   assert (stat (fn).size, 2692270, -0.1);
 %!   unlink (fn);
 %!   img = __osmesa_print__ (h);
 %!   assert (size (img), [get(h, "position")([4, 3]), 3])
 %!   ## Use pixel sum per RGB channel as fingerprint
 %!   img_fp = squeeze (sum (sum (img), 2));
 %!   assert (img_fp, [52942515; 54167797; 56158178], -0.05);
 %! endif
 
-%!testif HAVE_OSMESA
+%!testif HAVE_OSMESA, HAVE_GL2PS_H
 %! if (isunix ())
 %!   h = figure ("visible", "off");
 %!   fn = tempname ();
 %!   plot (sin (0:0.1:2*pi));
 %!   __osmesa_print__ (h, fn, "svgis2d");
 %!   assert (stat (fn).size, 7438, -0.1);
 %!   unlink (fn);
 %!   img = __osmesa_print__ (h);
