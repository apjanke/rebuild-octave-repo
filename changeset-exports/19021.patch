# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1408311256 -7200
#      Sun Aug 17 23:34:16 2014 +0200
# Node ID 9609f345823ed707217874bd02e9f34a1dc3c95d
# Parent  d74cdfc5d5c305b439faedc77cc1ef6cb34d9116
Implement figure property SelectionType for FLTK

* graphics.in.h: Rename "alt" to "alternate" for Matlab compatibility

* __init_fltk__.cc: Add selectiontype implementation

* plot.txi: Add documentation for selectiontype

diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -1543,16 +1543,32 @@ Indicates the orientation for printing. 
 @item resizefcn
 
 @item selected
 
 @item selectionhighlight
 --- Values: @qcode{"on"}, @qcode{"off"}
 
 @item selectiontype
+Holds informations about the last mouse button press within the figure.
+May be one of
+@table @asis
+@item @qcode{"normal"}
+Left mouse button click.
+
+@item @qcode{"extend"}
+Shift + left mouse button click.
+
+@item @qcode{"alternate"}
+Ctrl + left mouse button click or right mouse button click.
+
+@item @qcode{"open"}
+Double-click with any mouse button.
+
+@end table
 
 @item tag
 
 @item toolbar
 
 @item type
 
 @item units
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3364,17 +3364,17 @@ public:
       radio_property pointer , "crosshair|fullcrosshair|{arrow}|ibeam|watch|topl|topr|botl|botr|left|top|right|bottom|circle|cross|fleur|custom|hand"
       array_property pointershapecdata , Matrix (16, 16, 0)
       array_property pointershapehotspot , Matrix (1, 2, 0)
       array_property position s , default_figure_position ()
       radio_property renderer , "{painters}|zbuffer|opengl|none"
       radio_property renderermode , "{auto}|manual"
       bool_property resize , "on"
       callback_property resizefcn , Matrix ()
-      radio_property selectiontype , "{normal}|open|alt|extend"
+      radio_property selectiontype , "{normal}|open|alternate|extend"
       radio_property toolbar , "none|{auto}|figure"
       radio_property units Su , "inches|centimeters|normalized|points|{pixels}|characters"
       callback_property windowbuttondownfcn , Matrix ()
       callback_property windowbuttonmotionfcn , Matrix ()
       callback_property windowbuttonupfcn , Matrix ()
       callback_property windowkeypressfcn , Matrix ()
       callback_property windowkeyreleasefcn , Matrix ()
       callback_property windowscrollwheelfcn , Matrix ()
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -1421,16 +1421,28 @@ private:
             return 1;
 
           case FL_PUSH:
             pos_x = Fl::event_x ();
             pos_y = Fl::event_y () - menu_dy ();
 
             set_currentpoint (pos_x, pos_y);
 
+            if (Fl::event_button () == FL_LEFT_MOUSE
+                && Fl::event_shift ())
+              fp.set_selectiontype ("extend");
+            else if ((Fl::event_button () == FL_LEFT_MOUSE
+                      && Fl::event_ctrl ())
+                      || Fl::event_button () == FL_RIGHT_MOUSE)
+              fp.set_selectiontype ("alternate");
+            else if (Fl::event_clicks ())
+              fp.set_selectiontype ("open");
+            else
+              fp.set_selectiontype ("normal");
+
             if (fp.get_windowbuttondownfcn ().is_defined ())
               fp.execute_windowbuttondownfcn (Fl::event_button ());
 
             gh = pixel2axes_or_ca (pos_x, pos_y);
 
             if (gh.ok ())
               {
                 ax_obj = gh_manager::get_object (gh);
