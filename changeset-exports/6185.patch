# HG changeset patch
# User dbateman
# Date 1164221847 0
#      Wed Nov 22 18:57:27 2006 +0000
# Node ID da5a11b3d13e3a713161661e257f2b67ee0f57e7
# Parent  e96d66e0d634d34cacb41a74c5cf7e1ce8bc9b5f
[project @ 2006-11-22 18:57:26 by dbateman]

diff --git a/liboctave/CSparse.cc b/liboctave/CSparse.cc
--- a/liboctave/CSparse.cc
+++ b/liboctave/CSparse.cc
@@ -968,17 +968,20 @@ SparseComplexMatrix::inverse (MatrixType
   if (typ == MatrixType::Unknown)
     typ = mattype.type (*this);
 
   if (typ == MatrixType::Diagonal || typ == MatrixType::Permuted_Diagonal)
     ret = dinverse (mattype, info, rcond, true, calc_cond);
   else if (typ == MatrixType::Upper || typ == MatrixType::Permuted_Upper)
     ret = tinverse (mattype, info, rcond, true, calc_cond).transpose();
   else if (typ == MatrixType::Lower || typ == MatrixType::Permuted_Lower)
-    ret = transpose().tinverse (mattype, info, rcond, true, calc_cond);
+    { 
+      MatrixType newtype = mattype.transpose();
+      ret = transpose().tinverse (newtype, info, rcond, true, calc_cond);
+    }
   else if (typ != MatrixType::Rectangular)
     {
       if (mattype.is_hermitian())
 	{
 	  MatrixType tmp_typ (MatrixType::Upper);
 	  SparseComplexCHOL fact (*this, info, false);
 	  rcond = fact.rcond();
 	  if (info == 0)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2006-11-22  David Bateman  <dbateman@free.fr>
+
+        * dSparse.cc (SparseMatrix SparseMatrix::inverse(...)): Transpose
+	the matrix type as well when calling tinverse for lower
+	triangular
+	matrices
+        * CSparse.cc (SparseComplexMatrix SparseComplexMatrix::inverse(...)):
+        ditto.
+					
 2006-11-21  John W. Eaton  <jwe@octave.org>
 
 	* oct-env.cc (do_absolute_pathname): Undo previous change.
 
 2006-11-20  John W. Eaton  <jwe@octave.org>
 
 	* oct-env.cc (octave_env::do_absolute_pathname): Also return true
 	for ".", and names beginning with "./" or "../".
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -1044,17 +1044,20 @@ SparseMatrix::inverse (MatrixType &matty
   if (typ == MatrixType::Unknown)
     typ = mattype.type (*this);
 
   if (typ == MatrixType::Diagonal || typ == MatrixType::Permuted_Diagonal)
     ret = dinverse (mattype, info, rcond, true, calc_cond);
   else if (typ == MatrixType::Upper || typ == MatrixType::Permuted_Upper)
     ret = tinverse (mattype, info, rcond, true, calc_cond).transpose();
   else if (typ == MatrixType::Lower || typ == MatrixType::Permuted_Lower)
-    ret = transpose().tinverse (mattype, info, rcond, true, calc_cond);
+    {
+      MatrixType newtype = mattype.transpose();
+      ret = transpose().tinverse (newtype, info, rcond, true, calc_cond);
+    }
   else if (typ != MatrixType::Rectangular)
     {
       if (mattype.is_hermitian())
 	{
 	  MatrixType tmp_typ (MatrixType::Upper);
 	  SparseCHOL fact (*this, info, false);
 	  rcond = fact.rcond();
 	  if (info == 0)
