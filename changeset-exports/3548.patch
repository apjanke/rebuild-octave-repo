# HG changeset patch
# User jwe
# Date 949540641 0
#      Thu Feb 03 01:17:21 2000 +0000
# Node ID ab7fa5a8f23fff6c56482ad70ccc2ea4d013d3f3
# Parent  975398bed659d02d7cc9d360e2534ec7bc6967e8
[project @ 2000-02-03 01:17:15 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,31 @@
 2000-02-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* variables.cc (F__dump_symbol_info__): Fix continuation char.
+	* DLD-FUNCTIONS/besselj.cc (Fairy, Fbesselj): Likewise.
+	* DLD-FUNCTIONS/chol.cc (Fchol): Likewise.
+	* DLD-FUNCTIONS/det.cc (Fdet): Likewise.
+	* DLD-FUNCTIONS/eig.cc (Feig): Likewise.
+	* DLD-FUNCTIONS/gammainc.cc (gammainc): Likewise.
+	* DLD-FUNCTIONS/givens.cc (givens): Likewise.
+	* DLD-FUNCTIONS/hess.cc (hess): Likewise.
+	* DLD-FUNCTIONS/inv.cc (inv): Likewise.
+	* DLD-FUNCTIONS/log.cc (logm): Likewise.
+	* DLD-FUNCTIONS/lu.cc (lu): Likewise.
+	* DLD-FUNCTIONS/qr.cc (qr): Likewise.
+	* DLD-FUNCTIONS/schur.cc (schur): Likewise.
+	* DLD-FUNCTIONS/balance.cc (balance): Likewise.
+	* DLD-FUNCTIONS/svd.cc (svd): Likewise.
+	* DLD-FUNCTIONS/syl.cc (syl): Likewise.
+	* DLD-FUNCTIONS/expm.cc (Fexpm): Likewise.
+
+	* token.h (token::token_type, token::end_tok_type,
+	token::plot_tok_type): Delete extraneous comma from enum decls.
+
 	* pt-idx.cc (tree_index_expression::tree_index_expression):
 	Delete default arg values.
 
 	* siglist.h, siglist.c: New files.
 	* Makefile.in: Add them to the appropriate lists.
 	* siglist.c (sys_siglist): Move definition here from sighandlers.cc.
 	* siglist.h (sys_siglist): Move declaration here from sighandlers.h.
 
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -57,17 +57,17 @@ extern "C"
   int F77_FCN (zggbal, ZGGBAL) (const char* JOB, const int& N,
 				Complex* A, const int& LDA, Complex* B,
 				const int& LDB, int& ILO, int& IHI,
 				double* LSCALE, double* RSCALE,
 				double* WORK, int& INFO, long);
 }
 
 DEFUN_DLD (balance, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{aa} =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{dd}, @var{aa}] =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{cc}, @var{dd}, @var{aa}, @var{bb}] =} balance (@var{a}, @var{b}, @var{opt})\n\
 \n\
 @code{[dd, aa] = balance (a)} returns @code{aa = dd \\ a * dd}.\n\
 @code{aa} is a matrix whose row and column norms are roughly equal in\n\
 magnitude, and @code{dd} = @code{p * d}, where @code{p} is a permutation\n\
 matrix and @code{d} is a diagonal matrix of powers of two.  This allows\n\
diff --git a/src/DLD-FUNCTIONS/besselj.cc b/src/DLD-FUNCTIONS/besselj.cc
--- a/src/DLD-FUNCTIONS/besselj.cc
+++ b/src/DLD-FUNCTIONS/besselj.cc
@@ -268,17 +268,17 @@ result is a matrix with @code{length (@v
 @code{length (@var{alpha})} columns.  Otherwise, @var{alpha} and\n\
 @var{x} must conform and the result will be the same size.\n\
 \n\
 The value of @var{alpha} must be real.  The value of @var{x} may be\n\
 complex.\n\
 \n\
 If requested, @var{ierr} contains the following status information\n\
 and is the same size as the result.\n\
-\n
+\n\
 @enumerate 0\n\
 @item\n\
 Normal return.\n\
 @item\n\
 Input error, return @code{NaN}.\n\
 @item\n\
 Overflow, return @code{Inf}.\n\
 @item\n\
@@ -385,17 +385,17 @@ derivatives.\n\
 \n\
 The function call @code{airy (@var{z})} is equivalent to
 @code{airy (0, @var{z})}.\n\
 \n\
 The result is the same size as @var{z}.
 \n\
 If requested, @var{ierr} contains the following status information and\n\
 is the same size as the result.\n\
-\n
+\n\
 @enumerate 0\n\
 @item\n\
 Normal return.\n\
 @item\n\
 Input error, return @code{NaN}.\n\
 @item\n\
 Overflow, return @code{Inf}.\n\
 @item\n\
diff --git a/src/DLD-FUNCTIONS/chol.cc b/src/DLD-FUNCTIONS/chol.cc
--- a/src/DLD-FUNCTIONS/chol.cc
+++ b/src/DLD-FUNCTIONS/chol.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (chol, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} chol (@var{a})\n\
 @cindex Cholesky factorization\n\
 Compute the Cholesky factor, @var{r}, of the symmetric positive definite\n\
 matrix @var{a}, where\n\
 @iftex\n\
 @tex\n\
 $ R^T R = A $.\n\
 @end tex\n\
diff --git a/src/DLD-FUNCTIONS/det.cc b/src/DLD-FUNCTIONS/det.cc
--- a/src/DLD-FUNCTIONS/det.cc
+++ b/src/DLD-FUNCTIONS/det.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (det, args, ,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} det (@var{a})\n\
 Compute the determinant of @var{a} using @sc{Linpack}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
diff --git a/src/DLD-FUNCTIONS/eig.cc b/src/DLD-FUNCTIONS/eig.cc
--- a/src/DLD-FUNCTIONS/eig.cc
+++ b/src/DLD-FUNCTIONS/eig.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (eig, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{lambda} =} eig (@var{a})\n\
 @deftypefnx {Loadable Function} {[@var{v}, @var{lambda}] =} eig (@var{a})\n\
 The eigenvalues (and eigenvectors) of a matrix are computed in a several\n\
 step process which begins with a Hessenberg decomposition, followed by a\n\
 Schur decomposition, from which the eigenvalues are apparent.  The\n\
 eigenvectors, when desired, are computed by further manipulations of the\n\
 Schur decomposition.\n\
 @end deftypefn")
diff --git a/src/DLD-FUNCTIONS/expm.cc b/src/DLD-FUNCTIONS/expm.cc
--- a/src/DLD-FUNCTIONS/expm.cc
+++ b/src/DLD-FUNCTIONS/expm.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (expm, args, ,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} expm (@var{a})\n\
 Return the exponential of a matrix, defined as the infinite Taylor\n\
 series\n\
 @iftex\n\
 @tex\n\
 $$\n\
  \\exp (A) = I + A + {A^2 \\over 2!} + {A^3 \\over 3!} + \\cdots\n\
 $$\n\
diff --git a/src/DLD-FUNCTIONS/gammainc.cc b/src/DLD-FUNCTIONS/gammainc.cc
--- a/src/DLD-FUNCTIONS/gammainc.cc
+++ b/src/DLD-FUNCTIONS/gammainc.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (gammainc, args, ,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} gammainc (@var{x}, @var{a})\n\
 Computes the incomplete gamma function,\n\
 @iftex\n\
 @tex\n\
 $$\n\
  \\gamma (a, x) = {\\displaystyle\\int_0^x e^{-t} t^{a-1} dt \\over \\Gamma (a)}\n\
 $$\n\
 @end tex\n\
diff --git a/src/DLD-FUNCTIONS/givens.cc b/src/DLD-FUNCTIONS/givens.cc
--- a/src/DLD-FUNCTIONS/givens.cc
+++ b/src/DLD-FUNCTIONS/givens.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "oct-obj.h"
 
 DEFUN_DLD (givens, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{g} =} givens (@var{x}, @var{y})\n\
 @deftypefnx {Loadable Function} {[@var{c}, @var{s}] =} givens (@var{x}, @var{y})\n\
 @iftex\n\
 @tex\n\
 Return a $2\\times 2$ orthogonal matrix\n\
 $$\n\
  G = \\left[\\matrix{c & s\\cr -s'& c\\cr}\\right]\n\
 $$\n\
diff --git a/src/DLD-FUNCTIONS/hess.cc b/src/DLD-FUNCTIONS/hess.cc
--- a/src/DLD-FUNCTIONS/hess.cc
+++ b/src/DLD-FUNCTIONS/hess.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (hess, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{h} =} hess (@var{a})\n\
 @deftypefnx {Loadable Function} {[@var{p}, @var{h}] =} hess (@var{a})\n\
 @cindex Hessenberg decomposition\n\
 Compute the Hessenberg decomposition of the matrix @var{a}.\n\
 \n\
 The Hessenberg decomposition is usually used as the first step in an\n\
 eigenvalue computation, but has other applications as well (see Golub,\n\
 Nash, and Van Loan, IEEE Transactions on Automatic Control, 1979.  The\n\
diff --git a/src/DLD-FUNCTIONS/inv.cc b/src/DLD-FUNCTIONS/inv.cc
--- a/src/DLD-FUNCTIONS/inv.cc
+++ b/src/DLD-FUNCTIONS/inv.cc
@@ -26,17 +26,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (inv, args, ,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} inv (@var{a})\n\
 @deftypefnx {Loadable Function} {} inverse (@var{a})\n\
 Compute the inverse of the square matrix @var{a}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
diff --git a/src/DLD-FUNCTIONS/log.cc b/src/DLD-FUNCTIONS/log.cc
--- a/src/DLD-FUNCTIONS/log.cc
+++ b/src/DLD-FUNCTIONS/log.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 // XXX FIXME XXX -- the next two functions should really be just
 // one...
 
 DEFUN_DLD (logm, args, ,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} logm (@var{a})\n\
 Compute the matrix logarithm of the square matrix @var{a}.  Note that\n\
 this is currently implemented in terms of an eigenvalue expansion and\n\
 needs to be improved to be more robust.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
diff --git a/src/DLD-FUNCTIONS/lu.cc b/src/DLD-FUNCTIONS/lu.cc
--- a/src/DLD-FUNCTIONS/lu.cc
+++ b/src/DLD-FUNCTIONS/lu.cc
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (lu, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{l}, @var{u}, @var{p}] =} lu (@var{a})\n\
 @cindex LU decomposition\n\
 Compute the LU decomposition of @var{a}, using subroutines from\n\
 @sc{Lapack}.  The result is returned in a permuted form, according to\n\
 the optional return value @var{p}.  For example, given the matrix\n\
 @code{a = [1, 2; 3, 4]},\n\
 \n\
 @example\n\
diff --git a/src/DLD-FUNCTIONS/qr.cc b/src/DLD-FUNCTIONS/qr.cc
--- a/src/DLD-FUNCTIONS/qr.cc
+++ b/src/DLD-FUNCTIONS/qr.cc
@@ -48,17 +48,17 @@ Software Foundation, 59 Temple Place - S
 //
 // [Q, R, P] = qr (X, 0): form the economy decomposition with
 //                        permutation vector P such that Q * R = X (:, P)
 //
 // qr (X) alone returns the output of the LAPACK routine dgeqrf, such
 // that R = triu (qr (X))
 
 DEFUN_DLD (qr, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{q}, @var{r}, @var{p}] =} qr (@var{a})\n\
 @cindex QR factorization\n\
 Compute the QR factorization of @var{a}, using standard @sc{Lapack}\n\
 subroutines.  For example, given the matrix @code{a = [1, 2; 3, 4]},\n\
 \n\
 @example\n\
 [q, r] = qr (a)\n\
 @end example\n\
diff --git a/src/DLD-FUNCTIONS/schur.cc b/src/DLD-FUNCTIONS/schur.cc
--- a/src/DLD-FUNCTIONS/schur.cc
+++ b/src/DLD-FUNCTIONS/schur.cc
@@ -31,17 +31,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (schur, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} schur (@var{a})\n\
 @deftypefnx {Loadable Function} {[@var{u}, @var{s}] =} schur (@var{a}, @var{opt})\n\
 @cindex Schur decomposition\n\
 The Schur decomposition is used to compute eigenvalues of a\n\
 square matrix, and has applications in the solution of algebraic\n\
 Riccati equations in control (see @code{are} and @code{dare}).\n\
 @code{schur} always returns\n\
 @iftex\n\
diff --git a/src/DLD-FUNCTIONS/svd.cc b/src/DLD-FUNCTIONS/svd.cc
--- a/src/DLD-FUNCTIONS/svd.cc
+++ b/src/DLD-FUNCTIONS/svd.cc
@@ -30,17 +30,17 @@ Software Foundation, 59 Temple Place - S
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "pr-output.h"
 #include "utils.h"
 
 DEFUN_DLD (svd, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} svd (@var{a})\n\
 @deftypefnx {Loadable Function} {[@var{u}, @var{s}, @var{v}] =} svd (@var{a})\n\
 @cindex singular value decomposition\n\
 Compute the singular value decomposition of @var{a}\n\
 @iftex\n\
 @tex\n\
 $$\n\
  A = U\\Sigma V^H\n\
diff --git a/src/DLD-FUNCTIONS/syl.cc b/src/DLD-FUNCTIONS/syl.cc
--- a/src/DLD-FUNCTIONS/syl.cc
+++ b/src/DLD-FUNCTIONS/syl.cc
@@ -28,17 +28,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN_DLD (syl, args, nargout,
-  "-*- texinfo -*-
+  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{x} =} syl (@var{a}, @var{b}, @var{c})\n\
 Solve the Sylvester equation\n\
 @iftex\n\
 @tex\n\
 $$\n\
  A X + X B + C = 0\n\
 $$\n\
 @end tex\n\
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -98,17 +98,17 @@ verror (const char *name, const char *fm
   char *msg = output_buf.str ();
 
   if (buffer_error_messages)
     {
       char *ptr = msg;
 
       if (! error_message_buffer)
 	{
-	  error_message_buffer = new ostrstream;
+	  error_message_buffer = new std::ostrstream;
 
 	  // XXX FIXME XXX -- this is ugly, but it prevents
 	  //
 	  //   eval ("error (\"msg\")", "error (__error_text__)");
 	  //
 	  // from printing `error: ' twice.  Assumes that the NAME we
 	  // have been given doesn't contain `:'.
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1626,21 +1626,21 @@ do_load (std::istream& stream, const std
 		      if (verbose)
 			{
 			  if (count == 1)
 			    output_buf
 			      << "type               rows   cols   name\n"
 			      << "====               ====   ====   ====\n";
 
 			  output_buf
-			    << setiosflags (std::ios::left)
-			    << setw (16) << tc.type_name () . c_str ()
-			    << setiosflags (std::ios::right)
-			    << setw (7) << tc.rows ()
-			    << setw (7) << tc.columns ()
+			    << std::setiosflags (std::ios::left)
+			    << std::setw (16) << tc.type_name () . c_str ()
+			    << std::setiosflags (std::ios::right)
+			    << std::setw (7) << tc.rows ()
+			    << std::setw (7) << tc.columns ()
 			    << "   ";
 			}
 		      output_buf << name << "\n";
 		    }
 		  else
 		    {
 		      install_loaded_variable (force, name, tc, global, doc);
 		    }
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -1125,17 +1125,17 @@ do_scanf_conv (std::istream&, const char
 	  tmp = new char [width+1]; \
  \
 	  is.scan (fmt, tmp); \
  \
 	  tmp[width] = '\0'; \
 	} \
       else \
 	{ \
-	  ostrstream buf; \
+	  std::ostrstream buf; \
  \
 	  int c = EOF; \
  \
 	  while (is && (c = is.get ()) != EOF && isspace (c)) \
 	    /* skip leading whitespace */; \
  \
 	  if (is && c != EOF) \
 	    buf << (char) c; \
@@ -1166,17 +1166,17 @@ do_scanf_conv (std::istream&, const char
 	  tmp = new char[width+1]; \
  \
 	  is.scan (fmt, tmp); \
  \
 	  tmp[width] = '\0'; \
 	} \
       else \
 	{ \
-	  ostrstream buf; \
+	  std::ostrstream buf; \
  \
 	  std::string char_class = elt->char_class; \
  \
 	  int c = EOF; \
  \
 	  if (elt->type == '[') \
 	    { \
 	      while (is && (c = is.get ()) != EOF \
diff --git a/src/ov-fcn.cc b/src/ov-fcn.cc
--- a/src/ov-fcn.cc
+++ b/src/ov-fcn.cc
@@ -32,15 +32,16 @@ Software Foundation, 59 Temple Place - S
 #include "ov-fcn.h"
 
 DEFINE_OCTAVE_ALLOCATOR (octave_function);
 
 octave_function *
 octave_function::clone (void)
 {
   panic_impossible ();
+  return 0;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -41,16 +41,17 @@ DEFINE_OCTAVE_ALLOCATOR(octave_struct);
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(octave_struct, "struct");
 
 octave_value
 octave_struct::do_struct_elt_index_op (const std::string& nm,
 				       const octave_value_list& idx,
 				       bool silent)
 {
   // XXX DO_ME XXX
+  return octave_value ();
 }
 
 octave_value
 octave_struct::do_struct_elt_index_op (const std::string& nm, bool silent)
 {
   octave_value retval;
 
   Pix idx = map.seek (nm);
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -979,22 +979,22 @@ pr_any_float (const char *fmt, std::ostr
 	  os.setf (std::ios::hex, std::ios::basefield);
 
 	  if (hex_format > 1
 	      || flt_fmt == oct_mach_info::ieee_big_endian
 	      || flt_fmt == oct_mach_info::cray
 	      || flt_fmt == oct_mach_info::unknown)
 	    {
 	      for (size_t i = 0; i < sizeof (double); i++)
-		os << setw (2) << static_cast<int> (tmp.i[i]);
+		os << std::setw (2) << static_cast<int> (tmp.i[i]);
 	    }
 	  else
 	    {
 	      for (int i = sizeof (double) - 1; i >= 0; i--)
-		os << setw (2) << static_cast<int> (tmp.i[i]);
+		os << std::setw (2) << static_cast<int> (tmp.i[i]);
 	    }
 
 	  os.fill (ofill);
 	  os.setf (oflags);	  
 	}
       else if (bit_format)
 	{
 	  equiv tmp;
@@ -1034,24 +1034,24 @@ pr_any_float (const char *fmt, std::ostr
 	{
 	  const char *s;
 	  if (d < 0.0)
 	    s = "-Inf";
 	  else
 	    s = "Inf";
 
 	  if (fw > 0)
-	    os << setw (fw) << s;
+	    os << std::setw (fw) << s;
 	  else
 	    os << s;
 	}
       else if (xisnan (d))
 	{
 	  if (fw > 0)
-	    os << setw (fw) << "NaN";
+	    os << std::setw (fw) << "NaN";
 	  else
 	    os << "NaN";
 	}
       else
 	os.form (fmt, d);
     }
   else
     os << d;
@@ -1134,17 +1134,17 @@ pr_col_num_header (std::ostream& os, int
 {
   if (total_width > max_width && Vsplit_long_rows)
     {
       if (col != 0 && ! compact_format)
 	os << "\n\n";
 
       int num_cols = lim - col;
 
-      os << setw (extra_indent) << "";
+      os << std::setw (extra_indent) << "";
 
       if (num_cols == 1)
 	os << " Column " << col + 1 << ":\n";
       else if (num_cols == 2)
 	os << " Columns " << col + 1 << " and " << lim << ":\n";
       else
 	os << " Columns " << col + 1 << " through " << lim << ":\n";
 
@@ -1290,17 +1290,17 @@ octave_print_internal (std::ostream& os,
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
 	      for (int i = 0; i < nr; i++)
 		{
-		  os << setw (extra_indent) << "";
+		  os << std::setw (extra_indent) << "";
 
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
 		      double tmp = (Vfixed_point_format && scale != 1.0)
 			? m(i,j) / scale : m(i,j);
 
@@ -1462,17 +1462,17 @@ octave_print_internal (std::ostream& os,
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
 	      for (int i = 0; i < nr; i++)
 		{
-		  os << setw (extra_indent) << "";
+		  os << std::setw (extra_indent) << "";
 
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
 		      Complex tmp = (Vfixed_point_format && scale != 1.0)
 			? cm(i,j) / scale : cm(i,j);
 
@@ -1565,17 +1565,17 @@ octave_print_internal (std::ostream& os,
 	  int col = 0;
 	  while (col < num_elem)
 	    {
 	      int lim = col + inc < num_elem ? col + inc : num_elem;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
-	      os << setw (extra_indent) << "";
+	      os << std::setw (extra_indent) << "";
 
 	      for (int i = col; i < lim; i++)
 		{
 		  double val = base + i * increment;
 
 		  os << "  ";
 
 		  if (Vfixed_point_format && scale != 1.0)
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -448,34 +448,35 @@ void
 symbol_record::print_symbol_info_line (std::ostream& os)
 {
   os << (is_read_only () ? " r-" : " rw")
      << (is_eternal () ? "-" : "d")
 #if 0
      << (hides_fcn () ? "f" : (hides_builtin () ? "F" : "-"))
 #endif
      << "  "
-     << setiosflags (std::ios::left) << setw (24) << type_name () . c_str ();
+     << std::setiosflags (std::ios::left) << std::setw (24)
+     << type_name () . c_str ();
 
-  os << resetiosflags (std::ios::left);
+  os << std::resetiosflags (std::ios::left);
 
   int nr = rows ();
   int nc = columns ();
 
   if (nr < 0)
     os << "      -";
   else
-    os << setiosflags (std::ios::right) << setw (7) << nr;
+    os << std::setiosflags (std::ios::right) << std::setw (7) << nr;
 
   if (nc < 0)
     os << "      -";
   else
-    os << setiosflags (std::ios::right) << setw (7) << nc;
+    os << std::setiosflags (std::ios::right) << std::setw (7) << nc;
 
-  os << resetiosflags (std::ios::right);
+  os << std::resetiosflags (std::ios::right);
 
   os << "  " << name () << "\n";
 }
 
 void
 symbol_record::dump_symbol_info (void)
 {
   if (definition)
diff --git a/src/token.h b/src/token.h
--- a/src/token.h
+++ b/src/token.h
@@ -30,43 +30,44 @@ Software Foundation, 59 Temple Place - S
 #include <string>
 
 class symbol_record;
 
 class
 token
 {
 public:
+
   enum token_type
     {
       generic_token,
       string_token,
       double_token,
       ettype_token,
       pttype_token,
-      sym_rec_token,
+      sym_rec_token
     };
 
   enum end_tok_type
     {
       simple_end,
       for_end,
       function_end,
       if_end,
       switch_end,
       while_end,
       try_catch_end,
-      unwind_protect_end,
+      unwind_protect_end
     };
 
   enum plot_tok_type
     {
       replot = 1,
       two_dee = 2,
-      three_dee = 3,
+      three_dee = 3
     };
 
   token (int l = -1, int c = -1);
   token (const std::string& s, int l = -1, int c = -1);
   token (double d, const std::string& s = std::string (), int l = -1, int c = -1);
   token (end_tok_type t, int l = -1, int c = -1);
   token (plot_tok_type t, int l = -1, int c = -1);
   token (symbol_record *s, int l = -1, int c = -1);
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1251,17 +1251,17 @@ Print raw symbol table statistices.\n\
     print_usage ("__dump_symtab_info__");
 
   return retval;
 }
 
 DEFUN (__dump_symbol_info__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __dump_symbol_info__ (@var{name})\n\
-Print symbol table information for the symbol @var{name}.
+Print symbol table information for the symbol @var{name}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
