# HG changeset patch
# User Rik <rik@octave.org>
# Date 1388627686 28800
#      Wed Jan 01 17:54:46 2014 -0800
# Branch stable
# Node ID 1874a5a142eeeb0e7e8bed37e696cb91ff7218de
# Parent  5eb00651e977109b9d5a044711ab09dbb90622a0
doc: Fix documentation for strsplit (bug #41062).

* strsplit.m: Remove redundant sentence about delimiter del.
Don't use unnecessary hyphen in "cell string array" phrasing.
Correct typo of "delmiters".

* strjoin.m: Don't use unnecessary hyphen in "cell string array" phrasing.

diff --git a/scripts/strings/strjoin.m b/scripts/strings/strjoin.m
--- a/scripts/strings/strjoin.m
+++ b/scripts/strings/strjoin.m
@@ -15,28 +15,28 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{str} =} strjoin (@var{cstr})
 ## @deftypefnx {Function File} {@var{str} =} strjoin (@var{cstr}, @var{delimiter})
-## Join the elements of the cell-string array, @var{cstr}, into a single
+## Join the elements of the cell string array, @var{cstr}, into a single
 ## string.
 ##
 ## If no @var{delimiter} is specified, the elements of @var{cstr}
 ## separated by a space.
 ##
-## If @var{delimiter} is specified as a string, the cell-string array is
+## If @var{delimiter} is specified as a string, the cell string array is
 ## joined using the string.  Escape sequences are supported.
 ##
-## If @var{delimiter} is a cell-string array whose length is one less
+## If @var{delimiter} is a cell string array whose length is one less
 ## than @var{cstr}, then the elements of @var{cstr} are joined by
-## interleaving the cell-string elements of @var{delimiter}.  Escape
+## interleaving the cell string elements of @var{delimiter}.  Escape
 ## sequences are not supported.
 ##
 ## @example
 ## @group
 ## strjoin (@{'Octave','Scilab','Lush','Yorick'@}, '*')
 ##       @result{} 'Octave*Scilab*Lush*Yorick'
 ## @end group
 ## @end example
diff --git a/scripts/strings/strsplit.m b/scripts/strings/strsplit.m
--- a/scripts/strings/strsplit.m
+++ b/scripts/strings/strsplit.m
@@ -17,23 +17,23 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{cstr}] =} strsplit (@var{s})
 ## @deftypefnx {Function File} {[@var{cstr}] =} strsplit (@var{s}, @var{del})
 ## @deftypefnx {Function File} {[@var{cstr}] =} strsplit (@dots{}, @var{name}, @var{value})
 ## @deftypefnx {Function File} {[@var{cstr}, @var{matches}] =} strsplit (@dots{})
 ## Split the string @var{s} using the delimiters specified by @var{del}
-## and return a cell-string array of sub-strings.  If a delimiter is not
+## and return a cell string array of substrings.  If a delimiter is not
 ## specified the string, @var{s}, is split at whitespace.  The delimiter,
-## @var{del} may be a string, a scalar cell-string, or cell-string array.
-## @var{del} must be a cell-string array.  By default, consecutive
-## delimiters in the input string, @var{s}, are collapsed into one.
+## @var{del} may be a string, a scalar cell string, or cell string array.
+## By default, consecutive delimiters in the input string @var{s} are
+## collapsed into one.
 ##
-## The second output, @var{matches}, returns the delmiters which were matched
+## The second output, @var{matches}, returns the delimiters which were matched
 ## in the original string.
 ##
 ## Example:
 ##
 ## @example
 ## strsplit ("a b c")
 ##       @result{}
 ##           @{
