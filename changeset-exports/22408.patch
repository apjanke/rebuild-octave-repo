# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1472576374 -7200
#      Tue Aug 30 18:59:34 2016 +0200
# Node ID 22f22d53f1352ec43d0a7ad8615fb5eb7354a838
# Parent  34ce5be0494233fa148fd3d8f20b9f1b3101bbcf
Do not change grid for semilog plots on second call of "grid on" (bug #48533)

* grid.m: Do not change grid for semilogx or semilogy plots on second
call of "grid on".  Add test for semilog plots.  Add demo with only minor
grid lines (no major grid).

diff --git a/scripts/plot/appearance/grid.m b/scripts/plot/appearance/grid.m
--- a/scripts/plot/appearance/grid.m
+++ b/scripts/plot/appearance/grid.m
@@ -57,32 +57,38 @@ function grid (varargin)
   ## Must be after gca (), since grid with no plot should create one.
   if (nargs > 2)
     print_usage ();
   endif
 
   grid_on = any (strcmp (get (hax, {"xgrid", "ygrid", "zgrid"}), "on"));
 
   minor_on = any (strcmp (get (hax, {"xminorgrid", "yminorgrid", "zminorgrid"}),
-                         "on"));
+                         "on") &
+                  ! strcmp (get (hax, {"xscale", "yscale", "zscale"}), "log"));
 
   minor_auto = true;
   if (nargs == 0)
     grid_on = ! grid_on;
+    if (! grid_on)
+      minor_auto = false;
+    endif
   else
     arg1 = varargin{1};
     if (! ischar (arg1))
       error ("grid: argument 1 must be an axis handle or a string");
     endif
     if (strcmpi (arg1, "off"))
       grid_on = false;
       minor_on = false;
       minor_auto = false;
     elseif (strcmpi (arg1, "on"))
       grid_on = true;
+      minor_on = false;
+      minor_auto = true;
     elseif (strcmpi (arg1, "minor"))
       minor_auto = false;
       if (nargs == 2)
         arg2 = varargin{2};
         if (strcmpi (arg2, "on"))
           minor_on = true;
         elseif (strcmpi (arg2, "off"))
           minor_on = false;
@@ -157,18 +163,30 @@ endfunction
 %!  semilogy (1:100);
 %!  grid off;
 %!  title ("no grid");
 %! subplot (2,2,4);
 %!  semilogy (1:100);
 %!  grid minor;
 %!  title ("grid minor");
 
+%!demo
+%! ## Display minor grid lines at major ticks
+%! clf;
+%! subplot (1,2,1)
+%!  plot (1:10);
+%!  set (gca, "xminorgrid", "on");
+%!  set (gca, "yminorgrid", "on");
+%! subplot (1,2,2)
+%!  semilogy (1:100);
+%!  set (gca, "xminorgrid", "on");
+%!  set (gca, "yminorgrid", "on");
+
 ## linear scaling
-%!test
+%!test <48533>
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   hax = axes ();
 %!   plot (1:10);
 %!   grid on
 %!   assert (get (hax, "xgrid"), "on");
 %!   assert (get (hax, "ygrid"), "on");
 %!   assert (get (hax, "zgrid"), "on");
@@ -216,8 +234,74 @@ endfunction
 %!   assert (get (hax, "zgrid"), "off");
 %!   assert (get (hax, "xminorgrid"), "off");
 %!   assert (get (hax, "yminorgrid"), "off");
 %!   assert (get (hax, "zminorgrid"), "off");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
+## semilog scaling
+%!test <48533>
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hax = axes ();
+%!   semilogy (1:100);
+%!   grid on
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid on
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "on");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "on");
+%!   grid off
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "on");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "on");
+%!   grid minor
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid
+%!   assert (get (hax, "xgrid"), "on");
+%!   assert (get (hax, "ygrid"), "on");
+%!   assert (get (hax, "zgrid"), "on");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "on");
+%!   assert (get (hax, "zminorgrid"), "off");
+%!   grid
+%!   assert (get (hax, "xgrid"), "off");
+%!   assert (get (hax, "ygrid"), "off");
+%!   assert (get (hax, "zgrid"), "off");
+%!   assert (get (hax, "xminorgrid"), "off");
+%!   assert (get (hax, "yminorgrid"), "off");
+%!   assert (get (hax, "zminorgrid"), "off");
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
