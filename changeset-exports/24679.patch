# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1517647894 -3600
#      Sat Feb 03 09:51:34 2018 +0100
# Node ID a3e67a9e7be5db7814d1d6e3954d318d975aeb9a
# Parent  aa9c29f48718fbd3952c7fbe0be41169fafbf880
move derived tab bar from editor and doc viewer into separate file

* file-editor.cc (file_editor_tab_bar::file_editor_tab_bar),
  (file_editor_tab_bar::create_context_menu),
  (file_editor_tab_bar::mousePressEvent): remove all functions related to the
  derived file_editor_tab_bar class;
  (file_editor_tab_widget::file_editor_tab_widget): use the new tab_bar;
  (file_editor::construct): add the close actions to the context menu
  provided by tab_bar

* file-editor.h: derived tab bar removed

* module.mk: new files tab_bar.cc and tab_bar.h

* webinfo.cc (webinfo) use new tab_bar instead of special webinfo_tab_bar,
  connect tab bar signal for closing tab;
  (webinfo_tab_bar::webinfo_tab_bar),
  (webinfo_tab_bar::mousePressEvent): removed

* webinfo.h: removed webinfo_tab_bar

* tab-bar.cc: new tab bar for editor and doc viewer derived from QTabBar;
  (tab_bar): constructor, create context menu;
  (mousePressEvent): reimplemented mouse press event for detecting mouse
  actions for closing a tab, in case, emitting related signal

* tab-bar.h: new tab bar for editor and doc viewer derived from QTabBar

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #if defined (HAVE_QSCINTILLA)
 
 #include "file-editor.h"
 #include "resource-manager.h"
 #include "shortcut-manager.h"
+#include "tab-bar.h"
 
 #include <QApplication>
 #include <QFile>
 #include <QFileDialog>
 #include <QFont>
 #include <QMessageBox>
 #include <QMimeData>
 #include <QProcess>
@@ -43,122 +44,24 @@ along with Octave; see the file COPYING.
 #include <QVBoxLayout>
 #include <Qsci/qscicommandset.h>
 
 #include "main-window.h"
 #include "oct-map.h"
 #include "octave-link.h"
 #include "utils.h"
 
-// Functions of the the reimplemented tab bar
-
-file_editor_tab_bar::file_editor_tab_bar (QWidget *p)
-  : QTabBar (p), m_context_menu (new QMenu (this))
-{ }
-
-file_editor_tab_bar::~file_editor_tab_bar (void)
-{
-  delete m_context_menu;
-}
-
-// Create the context menu and fill it with actions from the editor
-void
-file_editor_tab_bar::create_context_menu (QList<QAction*> *actions)
-{
-  for (int i = 0; i < actions->count (); i++)
-    m_context_menu->addAction (actions->at (i));
-}
-
-// Reimplement mouse event for filtering out the desired mouse clicks
-void
-file_editor_tab_bar::mousePressEvent (QMouseEvent *me)
-{
-  QPoint click_pos;
-  int clicked_idx = -1;
-
-  // detect the tab where the click occured
-  for (int i = 0; i < count (); i++)
-    {
-      click_pos = mapToGlobal (me->pos ());
-      if (tabRect (i).contains (mapFromGlobal (click_pos)))
-        {
-          clicked_idx = i;
-          break;
-        }
-    }
-
-  // If a tab was clicked
-  if (clicked_idx >= 0)
-    {
-      int current_idx = currentIndex ();
-      // detect the mouse click
-      if ((me->type () == QEvent::MouseButtonDblClick &&
-           me->button() == Qt::LeftButton) ||
-          (me->type () != QEvent::MouseButtonDblClick &&
-           me->button() == Qt::MidButton))
-        {
-          // Middle click or double click -> close the tab
-          // Make the clicked tab the current one and close it
-          setCurrentIndex (clicked_idx);
-          emit close_current_tab_signal (true);
-          // Was the closed tab before or after the previously current tab?
-          // According to the result, use previous index or reduce it by one
-          if (current_idx - clicked_idx > 0)
-            setCurrentIndex (current_idx - 1);
-          else if (current_idx - clicked_idx < 0)
-            setCurrentIndex (current_idx);
-        }
-      else if (me->type () != QEvent::MouseButtonDblClick &&
-               me->button() == Qt::RightButton)
-        {
-          // Right click, show context menu
-          setCurrentIndex (clicked_idx);
-          if (! m_context_menu->exec (click_pos))
-            {
-              // No action selected, back to previous tab
-              setCurrentIndex (current_idx);
-            }
-          else
-            {
-              // Was the possibly only closed tab before or after the
-              // previously current tab? According to the result, use previous
-              // index or reduce it by one. Also prevent using a too large
-              // if other or all files were closed.
-              int new_idx = count () - 1;
-              if (new_idx > 0)
-                {
-                  if (current_idx - clicked_idx > 0)
-                    new_idx = current_idx - 1;
-                  else if (current_idx - clicked_idx < 0)
-                    new_idx = current_idx;
-                }
-              if (new_idx >= 0)
-                setCurrentIndex (new_idx);
-            }
-        }
-      else
-        {
-          // regular handling of the mouse event
-          QTabBar::mousePressEvent (me);
-        }
-    }
-  else
-    {
-      // regular handling of the mouse event
-      QTabBar::mousePressEvent (me);
-    }
-}
 
 // Functions of the the reimplemented tab widget
 
 file_editor_tab_widget::file_editor_tab_widget (QWidget *p)
   : QTabWidget (p)
 {
-  file_editor_tab_bar *bar;
-  bar = new file_editor_tab_bar (this);
+  tab_bar *bar;
+  bar = new tab_bar (this);
 
   connect (bar, SIGNAL (close_current_tab_signal (bool)),
            p->parent (), SLOT (request_close_file (bool)));
 
   this->setTabBar (bar);
 }
 
 QTabBar*
@@ -2050,23 +1953,22 @@ file_editor::construct (void)
   vbox_layout->addWidget (m_menu_bar);
   vbox_layout->addWidget (m_tool_bar);
   vbox_layout->addWidget (m_tab_widget);
   vbox_layout->setMargin (0);
   editor_widget->setLayout (vbox_layout);
   setWidget (editor_widget);
 
   // create the context menu of the tab bar
-  file_editor_tab_bar *bar
-      = static_cast<file_editor_tab_bar *>(m_tab_widget->tabBar ());
-  QList<QAction *> tab_bar_actions;
-  tab_bar_actions.append (m_close_action);
-  tab_bar_actions.append (m_close_all_action);
-  tab_bar_actions.append (m_close_others_action);
-  bar->create_context_menu (&tab_bar_actions);
+  tab_bar *bar
+      = static_cast<tab_bar *>(m_tab_widget->tabBar ());
+  QMenu *ctx_men = bar->get_context_menu ();
+  ctx_men->addAction (m_close_action);
+  ctx_men->addAction (m_close_all_action);
+  ctx_men->addAction (m_close_others_action);
 
   // signals
   connect (this, SIGNAL (execute_command_in_terminal_signal (const QString&)),
            main_win (), SLOT (execute_command_in_terminal (const QString&)));
 
   connect (this, SIGNAL (request_settings_dialog (const QString&)),
            main_win (),
            SLOT (process_settings_dialog_request (const QString&)));
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -35,43 +35,16 @@ along with Octave; see the file COPYING.
 #include <QDropEvent>
 
 #include <map>
 
 #include "file-editor-interface.h"
 #include "file-editor-tab.h"
 
 
-// subclassed QTabBar for usable tab-bar and reimplemented mouse event
-
-class file_editor_tab_bar : public QTabBar
-{
-  Q_OBJECT
-
-public:
-
-  file_editor_tab_bar (QWidget *p);
-
-  ~file_editor_tab_bar (void);
-
-  void create_context_menu (QList<QAction*> *actions);
-
-signals:
-
-  void close_current_tab_signal (bool);
-
-protected:
-
-  void mousePressEvent(QMouseEvent *event);
-
-private:
-
-  QMenu *m_context_menu;
-};
-
 // subclassed QTabWidget for using custom tabbar
 
 class file_editor_tab_widget : public QTabWidget
 {
   Q_OBJECT
 
 public:
 
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -105,16 +105,17 @@ OCTAVE_GUI_SRC_MOC = \
   %reldir%/moc-files-dock-widget.cc \
   %reldir%/moc-history-dock-widget.cc \
   %reldir%/moc-main-window.cc \
   %reldir%/moc-octave-cmd.cc \
   %reldir%/moc-octave-qt-link.cc \
   %reldir%/moc-settings-dialog.cc \
   %reldir%/moc-terminal-dock-widget.cc \
   %reldir%/moc-color-picker.cc \
+  %reldir%/moc-tab-bar.cc \
   %reldir%/moc-resource-manager.cc \
   %reldir%/moc-shortcut-manager.cc \
   %reldir%/moc-welcome-wizard.cc \
   %reldir%/moc-workspace-model.cc \
   %reldir%/moc-workspace-view.cc \
   %reldir%/moc-variable-editor.cc \
   %reldir%/moc-variable-editor-model.cc \
   %reldir%/moc-find-files-dialog.cc \
@@ -162,16 +163,17 @@ noinst_HEADERS += \
   %reldir%/octave-cmd.h \
   %reldir%/octave-qt-link.h \
   %reldir%/octave-settings.h \
   %reldir%/qtinfo/texinfo-parser.h \
   %reldir%/qtinfo/webinfo.h \
   %reldir%/resource-manager.h \
   %reldir%/settings-dialog.h \
   %reldir%/shortcut-manager.h \
+  %reldir%/tab-bar.h \
   %reldir%/thread-manager.h \
   %reldir%/terminal-dock-widget.h \
   %reldir%/color-picker.h \
   %reldir%/welcome-wizard.h \
   %reldir%/find-files-dialog.h \
   %reldir%/find-files-model.h \
   %reldir%/workspace-model.h \
   %reldir%/workspace-view.h \
@@ -195,16 +197,17 @@ noinst_HEADERS += \
   %reldir%/octave-dock-widget.cc \
   %reldir%/octave-gui.cc \
   %reldir%/octave-qt-link.cc \
   %reldir%/qtinfo/texinfo-parser.cc \
   %reldir%/qtinfo/webinfo.cc \
   %reldir%/resource-manager.cc \
   %reldir%/settings-dialog.cc \
   %reldir%/shortcut-manager.cc \
+  %reldir%/tab-bar.cc \
   %reldir%/thread-manager.cc \
   %reldir%/terminal-dock-widget.cc \
   %reldir%/color-picker.cc \
   %reldir%/welcome-wizard.cc \
   %reldir%/find-files-dialog.cc \
   %reldir%/find-files-model.cc \
   %reldir%/workspace-model.cc \
   %reldir%/workspace-view.cc \
diff --git a/libgui/src/qtinfo/webinfo.cc b/libgui/src/qtinfo/webinfo.cc
--- a/libgui/src/qtinfo/webinfo.cc
+++ b/libgui/src/qtinfo/webinfo.cc
@@ -50,17 +50,17 @@ webinfo::webinfo (QWidget *p)
   vbox_layout->setMargin (0);
   setLayout (vbox_layout);
 
   QHBoxLayout *hbox_layout = new QHBoxLayout ();
   hbox_layout->setMargin (0);
   hbox_layout->setSpacing (0);
   vbox_layout->addLayout (hbox_layout);
 
-  _tab_bar = new webinfo_tab_bar (this);
+  _tab_bar = new tab_bar (this);
   _tab_bar->setSizePolicy (QSizePolicy::Preferred,QSizePolicy::Preferred);
   _tab_bar->setExpanding (false);
   _tab_bar->setTabsClosable (true);
 #if defined (HAVE_QTABWIDGET_SETMOVABLE)
   _tab_bar->setMovable (true);
 #endif
   hbox_layout->addWidget (_tab_bar);
 
@@ -92,18 +92,18 @@ webinfo::webinfo (QWidget *p)
         resource_manager::icon ("window-close",false), tr ("&Close"),
         SLOT (request_close_tab (bool)));
   _close_others_action = add_action (_tab_bar->get_context_menu (),
         resource_manager::icon ("window-close",false), tr ("Close &Other Tabs"),
         SLOT (request_close_other_tabs (bool)));
   _close_action->setEnabled (false);
   _close_others_action->setEnabled (false);
 
-  connect (_tab_bar, SIGNAL (tabCloseRequested (int)), this,
-           SLOT (close_tab (int)));
+  connect (_tab_bar, SIGNAL (close_current_tab_signal (bool)),
+           this, SLOT (request_close_tab (bool)));
   connect (_tab_bar, SIGNAL (currentChanged (int)), this,
            SLOT (current_tab_changed (int)));
   connect (_zoom_in_button, SIGNAL (clicked ()), this, SLOT (zoom_in ()));
   connect (_zoom_out_button, SIGNAL (clicked ()), this, SLOT (zoom_out ()));
   connect (_search_line_edit, SIGNAL (returnPressed ()), this, SLOT (search ()));
 
   resize (500, 300);
 }
@@ -372,100 +372,8 @@ webinfo::pasteClipboard ()
 
 void
 webinfo::notice_settings (const QSettings*)
 {
   shortcut_manager::set_shortcut (_close_action, "editor_file:close");
   shortcut_manager::set_shortcut (_close_others_action, "editor_file:close_other");
 }
 
-//
-// Functions of the the reimplemented tab bar
-//
-
-webinfo_tab_bar::webinfo_tab_bar (QWidget *p) : QTabBar (p)
-{
-  // prepare the context menu of the tab bar
-  _context_menu = new QMenu (this);
-}
-
-webinfo_tab_bar::~webinfo_tab_bar ()
-{
-  delete _context_menu;
-}
-
-// Reimplement mouse event for filtering out the desired mouse clicks
-void
-webinfo_tab_bar::mousePressEvent (QMouseEvent *me)
-{
-  QPoint click_pos;
-  int clicked_idx = -1;
-
-  // detect the tab where the click occured
-  for (int i = 0; i < count (); i++)
-    {
-      click_pos = mapToGlobal (me->pos ());
-      if (tabRect (i).contains (mapFromGlobal (click_pos)))
-        {
-          clicked_idx = i;
-          break;
-        }
-    }
-
-  // If a tab was clicked
-  if (clicked_idx >= 0)
-    {
-      int current_idx = currentIndex ();
-      // detect the mouse click
-      if ((me->type () == QEvent::MouseButtonDblClick &&
-           me->button() == Qt::LeftButton) ||
-          (me->type () != QEvent::MouseButtonDblClick &&
-           me->button() == Qt::MidButton))
-        {
-          // Middle click or double click -> close the tab
-          // Make the clicked tab the current one and close it
-          emit tabCloseRequested (clicked_idx);
-          // Was the closed tab before or after the previously current tab?
-          // According to the result, use previous index or reduce it by one
-          if (current_idx - clicked_idx > 0)
-            setCurrentIndex (current_idx - 1);
-          else if (current_idx - clicked_idx < 0)
-            setCurrentIndex (current_idx);
-        }
-      else if (me->type () != QEvent::MouseButtonDblClick &&
-               me->button() == Qt::RightButton)
-        {
-          setCurrentIndex (clicked_idx);
-          if (! _context_menu->exec (click_pos))
-            {
-              // No action selected, back to previous tab
-              setCurrentIndex (current_idx);
-            }
-          else
-            {
-              // Was the possibly only closed tab before or after the
-              // previously current tab? According to the result, use previous
-              // index or reduce it by one. Also prevent using a too large
-              // if other or all files were closed.
-              int new_idx = count () - 1;
-              if (new_idx > 0)
-                {
-                  if (current_idx - clicked_idx > 0)
-                    new_idx = current_idx - 1;
-                  else if (current_idx - clicked_idx < 0)
-                    new_idx = current_idx;
-                }
-              if (new_idx >= 0)
-                setCurrentIndex (new_idx);
-            }
-        }
-      else
-        {
-          // regular handling of the mouse event
-          QTabBar::mousePressEvent (me);
-        }
-    }
-  else
-    {
-      // regular handling of the mouse event
-      QTabBar::mousePressEvent (me);
-    }
-}
diff --git a/libgui/src/qtinfo/webinfo.h b/libgui/src/qtinfo/webinfo.h
--- a/libgui/src/qtinfo/webinfo.h
+++ b/libgui/src/qtinfo/webinfo.h
@@ -35,39 +35,17 @@ along with Octave; see the file COPYING.
 #include <QLineEdit>
 #include <QCheckBox>
 #include <QToolButton>
 #include <QMenu>
 #include <QAction>
 #include <QMouseEvent>
 #include <QSettings>
 
-// subclassed QTabWidget for usable tab-bar and reimplemented mouse event
-class webinfo_tab_bar : public QTabBar
-{
-  Q_OBJECT
-
-public:
-
-  webinfo_tab_bar (QWidget *p);
-  ~webinfo_tab_bar ();
-  QMenu * get_context_menu () { return _context_menu; }
-
-public slots:
-
-protected:
-
-  void mousePressEvent(QMouseEvent *event);
-
-private:
-
-  QMenu *_context_menu;
-
-};
-
+#include "tab-bar.h"
 
 // The webinfo class
 class webinfo : public QWidget
 {
   Q_OBJECT
 
 public:
 
@@ -98,17 +76,17 @@ public slots:
 
 private:
 
   QAction * add_action (QMenu *menu, const QIcon& icon, const QString& text,
                         const char *member);
   void tab_state_changed (void);
 
   QTextBrowser        *_text_browser;
-  webinfo_tab_bar     *_tab_bar;
+  tab_bar             *_tab_bar;
   QStackedWidget      *_stacked_widget;
   QLineEdit           *_search_line_edit;
   QCheckBox           *_search_check_box;
   QToolButton         *_zoom_in_button;
   QToolButton         *_zoom_out_button;
 
   texinfo_parser      _parser;
   QFont               _font_web;
diff --git a/libgui/src/tab-bar.cc b/libgui/src/tab-bar.cc
new file mode 100644
--- /dev/null
+++ b/libgui/src/tab-bar.cc
@@ -0,0 +1,116 @@
+/*
+
+Copyright (C) 2018 Torsten <mttl@mailbox.org>
+
+This file is part of Octave.
+
+Octave is free software: you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+Octave is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<https://www.gnu.org/licenses/>.
+
+*/
+
+// This file implements a tab bar derived from QTabBar with a contextmenu
+// and possibility to close a tab via double-left and middle mouse click.
+
+#include "tab-bar.h"
+
+
+tab_bar::tab_bar (QWidget *p)
+  : QTabBar (p), m_context_menu (new QMenu (this))
+{ }
+
+tab_bar::~tab_bar (void)
+{
+  delete m_context_menu;
+}
+
+// Reimplement mouse event for filtering out the desired mouse clicks
+void
+tab_bar::mousePressEvent (QMouseEvent *me)
+{
+  QPoint click_pos;
+  int clicked_idx = -1;
+
+  // detect the tab where the click occured
+  for (int i = 0; i < count (); i++)
+    {
+      click_pos = mapToGlobal (me->pos ());
+      if (tabRect (i).contains (mapFromGlobal (click_pos)))
+        {
+          clicked_idx = i;
+          break;
+        }
+    }
+
+  // If a tab was clicked
+  if (clicked_idx >= 0)
+    {
+      int current_idx = currentIndex ();
+      // detect the mouse click
+      if ((me->type () == QEvent::MouseButtonDblClick &&
+           me->button() == Qt::LeftButton) ||
+          (me->type () != QEvent::MouseButtonDblClick &&
+           me->button() == Qt::MidButton))
+        {
+          // Middle click or double click -> close the tab
+          // Make the clicked tab the current one and close it
+          setCurrentIndex (clicked_idx);
+          emit close_current_tab_signal (true);
+          // Was the closed tab before or after the previously current tab?
+          // According to the result, use previous index or reduce it by one
+          if (current_idx - clicked_idx > 0)
+            setCurrentIndex (current_idx - 1);
+          else if (current_idx - clicked_idx < 0)
+            setCurrentIndex (current_idx);
+        }
+      else if (me->type () != QEvent::MouseButtonDblClick &&
+               me->button() == Qt::RightButton)
+        {
+          // Right click, show context menu
+          setCurrentIndex (clicked_idx);
+          if (! m_context_menu->exec (click_pos))
+            {
+              // No action selected, back to previous tab
+              setCurrentIndex (current_idx);
+            }
+          else
+            {
+              // Was the possibly only closed tab before or after the
+              // previously current tab? According to the result, use previous
+              // index or reduce it by one. Also prevent using a too large
+              // if other or all files were closed.
+              int new_idx = count () - 1;
+              if (new_idx > 0)
+                {
+                  if (current_idx - clicked_idx > 0)
+                    new_idx = current_idx - 1;
+                  else if (current_idx - clicked_idx < 0)
+                    new_idx = current_idx;
+                }
+              if (new_idx >= 0)
+                setCurrentIndex (new_idx);
+            }
+        }
+      else
+        {
+          // regular handling of the mouse event
+          QTabBar::mousePressEvent (me);
+        }
+    }
+  else
+    {
+      // regular handling of the mouse event
+      QTabBar::mousePressEvent (me);
+    }
+}
diff --git a/libgui/src/tab-bar.h b/libgui/src/tab-bar.h
new file mode 100644
--- /dev/null
+++ b/libgui/src/tab-bar.h
@@ -0,0 +1,60 @@
+/*
+
+Copyright (C) 2018 Torsten <mttl@mailbox.org>
+
+This file is part of Octave.
+
+Octave is free software: you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 3 of the License, or
+(at your option) any later version.
+
+Octave is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<https://www.gnu.org/licenses/>.
+
+*/
+
+// This file implements a tab bar derived from QTabBar with a contextmenu
+// and possibility to close a tab via double-left and middle mouse click.
+
+#if ! defined (octave_tab_bar_h)
+#define octave_tab_bar_h 1
+
+#include <QMenu>
+#include <QTabBar>
+#include <QMouseEvent>
+
+// Subclassed QTabBar for usable tab-bar and reimplemented mouse event
+
+class tab_bar : public QTabBar
+{
+  Q_OBJECT
+
+public:
+
+  tab_bar (QWidget *p);
+
+  ~tab_bar (void);
+
+  QMenu *get_context_menu (void) { return m_context_menu; };
+
+signals:
+
+  void close_current_tab_signal (bool);
+
+protected:
+
+  void mousePressEvent(QMouseEvent *event);
+
+private:
+
+  QMenu *m_context_menu;
+};
+
+#endif
