# HG changeset patch
# User jwe
# Date 777710516 0
#      Wed Aug 24 06:41:56 1994 +0000
# Node ID 209eafc0681701a3c8fb2e31b26f58f730321ac2
# Parent  21cb3c7dc9e39d444870f90f10bbbc072c285658
[project @ 1994-08-24 06:41:56 by jwe]

diff --git a/src/fsqp.cc b/src/fsqp.cc
--- a/src/fsqp.cc
+++ b/src/fsqp.cc
@@ -27,16 +27,18 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #include "FSQP.h"
 
 #include "tree-const.h"
 #include "error.h"
 #include "help.h"
 #include "defun-dld.h"
 
+#ifndef FSQP_MISSING
+
 // Global pointers for user defined functions required by fsqp.
 // static tree *fsqp_objective;
 // static tree *fsqp_constraints;
 
 double
 fsqp_objective_function (const ColumnVector& x)
 {
   return 0.0;
@@ -44,16 +46,18 @@ fsqp_objective_function (const ColumnVec
 
 ColumnVector
 fsqp_constraint_function (const ColumnVector& x)
 {
   ColumnVector retval;
   return retval;
 }
 
+#endif
+
 #if defined (FSQP_MISSING)
 DEFUN_DLD ("fsqp", Ffsqp, Sfsqp, 11, 3,
   "This function requires FSQP, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/fsqp/README.MISSING in the source distribution.")
 #else
 DEFUN_DLD ("fsqp", Ffsqp, Sfsqp, 11, 3,
   "[X, PHI] = fsqp (X, PHI [, LB, UB] [, LB, A, UB] [, LB, G, UB])\n\
diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -33,16 +33,18 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "pager.h"
 #include "utils.h"
 #include "help.h"
 #include "defun-dld.h"
 
+#ifndef NPSOL_MISSING
+
 // Global pointers for user defined functions required by npsol.
 static tree_fvc *npsol_objective;
 static tree_fvc *npsol_constraints;
 
 static NPSOL_options npsol_opts;
 
 double
 npsol_objective_function (const ColumnVector& x)
@@ -222,16 +224,18 @@ nonlinear_constraints_ok (const ColumnVe
 	  ok = 0;
 	  error ("%s: nonlinear constraints have inconsistent dimensions",
 		 warn_for);
 	}
     }
   return ok;
 }
 
+#endif
+
 #if defined (NPSOL_MISSING)
 DEFUN_DLD ("npsol", Fnpsol, Snpsol, 11, 3,
   "This function requires NPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/npsol/README.MISSING in the source distribution.")
 #else
 DEFUN_DLD ("npsol", Fnpsol, Snpsol, 11, 3,
   "[X, OBJ, INFO, LAMBDA] = npsol (X, PHI [, LB, UB] [, LB, A, UB] [, LB, G, UB])\n\
@@ -520,16 +524,18 @@ Handle all of the following:
   if (nargout > 3)
     retval(3) = lambda;
 
 #endif
 
   return retval;
 }
 
+#ifndef NPSOL_MISSING
+
 typedef void (NPSOL_options::*d_set_opt_mf) (double);
 typedef void (NPSOL_options::*i_set_opt_mf) (int);
 typedef double (NPSOL_options::*d_get_opt_mf) (void);
 typedef int (NPSOL_options::*i_get_opt_mf) (void);
 
 #define MAX_TOKENS 5
 
 struct NPSOL_OPTIONS
@@ -732,16 +738,18 @@ do_npsol_option (char *keyword, double v
 	  return;
 	}
       list++;
     }
 
   warning ("npsol_options: no match for `%s'", keyword);
 }
 
+#endif
+
 #if defined (NPSOL_MISSING)
 DEFUN_DLD ("npsol_options", Fnpsol_options, Snpsol_options, -1, 1,
   "This function requires NPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/npsol/README.MISSING in the source distribution.")
 #else
 DEFUN_DLD ("npsol_options", Fnpsol_options, Snpsol_options, -1, 1,
   "npsol_options (KEYWORD, VALUE)\n\
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -33,25 +33,29 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "variables.h"
 #include "gripes.h"
 #include "error.h"
 #include "utils.h"
 #include "pager.h"
 #include "help.h"
 #include "defun-dld.h"
 
+#ifndef QPSOL_MISSING
+
 // This should probably be defined in some shared file and declared in
 // a header file...
 extern int linear_constraints_ok (const ColumnVector& x,
 				  const ColumnVector& llb, const Matrix& c,
 				  const ColumnVector& lub, char *warn_for,
 				  int warn);
 
 static QPSOL_options qpsol_opts;
 
+#endif
+
 #if defined (QPSOL_MISSING)
 DEFUN_DLD ("qpsol", Fqpsol, Sqpsol, 9, 3,
   "This function requires QPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/qpsol/README.MISSING in the source distribution.")
 #else
 DEFUN_DLD ("qpsol", Fqpsol, Sqpsol, 9, 3,
   "[X, OBJ, INFO, LAMBDA] = qpsol (X, H, C [, LB, UB] [, LB, A, UB])\n\
@@ -222,16 +226,18 @@ Handle all of the following:
   if (nargout > 3)
     retval(3) = lambda;
 
 #endif
 
   return retval;
 }
 
+#ifndef QPSOL_MISSING
+
 typedef void (QPSOL_options::*d_set_opt_mf) (double);
 typedef void (QPSOL_options::*i_set_opt_mf) (int);
 typedef double (QPSOL_options::*d_get_opt_mf) (void);
 typedef int (QPSOL_options::*i_get_opt_mf) (void);
 
 #define MAX_TOKENS 2
 
 struct QPSOL_OPTIONS
@@ -338,16 +344,18 @@ do_qpsol_option (char *keyword, double v
 	  return;
 	}
       list++;
     }
 
   warning ("qpsol_options: no match for `%s'", keyword);
 }
 
+#endif
+
 #if defined (QPSOL_MISSING)
 DEFUN_DLD ("qpsol_options", Fqpsol_options, Sqpsol_options, -1, 1,
   "This function requires QPSOL, which is not freely\n\
 redistributable.  For more information, read the file\n\
 libcruft/qpsol/README.MISSING in the source distribution.")
 #else
 DEFUN_DLD ("qpsol_options", Fqpsol_options, Sqpsol_options, -1, 1,
   "qpsol_options (KEYWORD, VALUE)\n
