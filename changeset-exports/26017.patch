# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1541334507 -3600
#      Sun Nov 04 13:28:27 2018 +0100
# Node ID 390d597177111df77d234774909fbc320057460c
# Parent  8aaf5f597afc72a8b98cc820d9b87a57d4c6d5e0
adding a toolbar with common browse tools to the doc browser (bug 54938)

* documentation.cc (documentation::documentation): remove obsolete shortcut
  initialization, initialize a toolbar and call method for adding actions,
  add tool bar into the browser layout, remove connections for the show and
  hide find bar shortcuts;
  (add_action): new method for simplifying the creation of tool bar actions;
  (construct_tool_bar): add actions to the doc browser and its tool bar;
  (notice_settings): get icon size and shortcuts from the settings file;
  (activate_find): new slot for the find action, showing/hiding the bar
  and setting/resetting focus;
  (zoom_normal) renamed into zoom_original

* documentation.h: renamed zoom_normal into zoom_original,
  new slot activate_find, new methods construct_tool_bar and add_action,
  new class variables for the actions and the parent dock-widget

* zoom-original.svg, zoom-original.png: new icon for windows or if not
  contained in system icon set

* module.mk: new icon png file

* resource.qrc: new icon png file

* shortcut-manager.cc (do_init_data): New shortcuts for the doc browsers
  new actions;
  (fill_tree_widget): add doc browser shortcuts to the tree widget in the
  preferences dialog

diff --git a/libgui/src/documentation.cc b/libgui/src/documentation.cc
--- a/libgui/src/documentation.cc
+++ b/libgui/src/documentation.cc
@@ -50,22 +50,20 @@ along with Octave; see the file COPYING.
 #include "shortcut-manager.h"
 
 namespace octave
 {
   // The documentation splitter, which is the main widget
   // of the doc dock widget
   documentation::documentation (QWidget *p)
     : QSplitter (Qt::Horizontal, p),
-      m_show_shortcut (new QShortcut (p)),
+      m_doc_widget (p),
+      m_tool_bar (new QToolBar (p)),
       m_findnext_shortcut (new QShortcut (p)),
-      m_findprev_shortcut (new QShortcut (p)),
-      m_zoom_in_shortcut (new QShortcut (p)),
-      m_zoom_out_shortcut (new QShortcut (p)),
-      m_zoom_normal_shortcut (new QShortcut (p))
+      m_findprev_shortcut (new QShortcut (p))
   {
     // Get original collection
     QString collection = getenv ("OCTAVE_QTHELP_COLLECTION");
     if (collection.isEmpty ())
       collection = QString::fromStdString (config::oct_doc_dir ()
                                            + sys::file_ops::dir_sep_str ()
                                            + "octave_interpreter.qhc");
 
@@ -102,16 +100,20 @@ namespace octave
       }
 
     // The browser
     QWidget *browser_find = new QWidget (this);
     m_doc_browser = new documentation_browser (m_help_engine, browser_find);
     connect (m_doc_browser, SIGNAL (cursorPositionChanged (void)),
              this, SLOT(handle_cursor_position_change (void)));
 
+    // Tool bar
+    construct_tool_bar ();
+
+    // Find bar
     QWidget *find_footer = new QWidget (browser_find);
     QLabel *find_label = new QLabel (tr ("Find:"), find_footer);
     m_find_line_edit = new QLineEdit (find_footer);
     connect (m_find_line_edit, SIGNAL (returnPressed (void)),
              this, SLOT(find_forward (void)));
     connect (m_find_line_edit, SIGNAL (textEdited (const QString&)),
              this, SLOT(find_forward_from_anchor (const QString&)));
     QToolButton *forward_button = new QToolButton (find_footer);
@@ -130,58 +132,33 @@ namespace octave
     h_box_find_footer->addWidget (find_label);
     h_box_find_footer->addWidget (m_find_line_edit);
     h_box_find_footer->addWidget (forward_button);
     h_box_find_footer->addWidget (backward_button);
     h_box_find_footer->setMargin (2);
     find_footer->setLayout (h_box_find_footer);
 
     QVBoxLayout *v_box_browser_find = new QVBoxLayout (browser_find);
+    v_box_browser_find->addWidget (m_tool_bar);
     v_box_browser_find->addWidget (m_doc_browser);
     v_box_browser_find->addWidget (find_footer);
     browser_find->setLayout (v_box_browser_find);
 
     notice_settings (resource_manager::get_settings ());
 
-    m_show_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (m_show_shortcut, SIGNAL (activated (void)),
-             m_find_line_edit->parentWidget (), SLOT (show (void)));
-    connect (m_show_shortcut, SIGNAL (activated (void)),
-             m_find_line_edit, SLOT (selectAll (void)));
-    connect (m_show_shortcut, SIGNAL (activated (void)),
-             m_find_line_edit, SLOT (setFocus (void)));
-    QShortcut *hide_shortcut = new QShortcut (Qt::Key_Escape, p);
-
-    hide_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (hide_shortcut, SIGNAL (activated (void)),
-             m_find_line_edit->parentWidget (), SLOT(hide (void)));
-    connect (hide_shortcut, SIGNAL (activated (void)),
-             m_doc_browser, SLOT (setFocus (void)));
-
     m_findnext_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
     connect (m_findnext_shortcut, SIGNAL (activated (void)),
              this, SLOT(find_forward (void)));
     m_findprev_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
     connect (m_findprev_shortcut, SIGNAL (activated (void)),
              this, SLOT(find_backward (void)));
 
     find_footer->hide ();
     m_search_anchor_position = 0;
 
-    // Zoom Shortcuts
-    m_zoom_in_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (m_zoom_in_shortcut, SIGNAL (activated (void)),
-             m_doc_browser, SLOT (zoom_in (void)));
-    m_zoom_out_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (m_zoom_out_shortcut, SIGNAL (activated (void)),
-             m_doc_browser, SLOT (zoom_out (void)));
-    m_zoom_normal_shortcut->setContext (Qt::WidgetWithChildrenShortcut);
-    connect (m_zoom_normal_shortcut, SIGNAL (activated (void)),
-             m_doc_browser, SLOT (zoom_normal (void)));
-
     // Layout contents, index and search
     QTabWidget *navi = new QTabWidget (this);
     navi->setTabsClosable (false);
     navi->setMovable (true);
 
     // Contents
     QHelpContentWidget *content = m_help_engine->contentWidget ();
     content->setObjectName ("documentation_tab_contents");
@@ -289,16 +266,76 @@ namespace octave
             std::string file_name = fi.absoluteFilePath ().toStdString ();
             sys::recursive_rmdir (file_name);
           }
 
         file.remove();
       }
   }
 
+  QAction * documentation::add_action (const QIcon& icon, const QString& text,
+                                       const char *member, QWidget *receiver,
+                                       QToolBar *tool_bar)
+  {
+    QAction *a;
+    QWidget *r = this;
+    if (receiver != nullptr)
+      r = receiver;
+
+    a = new QAction (icon, text, this);
+    connect (a, SIGNAL (triggered ()), r, member);
+
+    if (tool_bar)
+      tool_bar->addAction (a);
+
+    m_doc_widget->addAction (a);  // important for shortcut context
+    a->setShortcutContext (Qt::WidgetWithChildrenShortcut);
+
+    return a;
+  }
+
+  void documentation::construct_tool_bar (void)
+  {
+    // Home, Previous, Next
+    m_action_go_home = add_action (resource_manager::icon ("go-home"),
+                                   tr ("Go home"), SLOT (home (void)),
+                                   m_doc_browser, m_tool_bar);
+    m_action_go_prev = add_action (resource_manager::icon ("go-previous"),
+                                   tr ("Go back"), SLOT (backward (void)),
+                                   m_doc_browser, m_tool_bar);
+    m_action_go_next = add_action (resource_manager::icon ("go-next"),
+                                   tr ("Go forward"), SLOT (forward (void)),
+                                   m_doc_browser, m_tool_bar);
+    m_action_go_prev->setEnabled (false);
+    m_action_go_next->setEnabled (false);
+    connect (m_doc_browser, SIGNAL (backwardAvailable (bool)),
+             m_action_go_prev, SLOT (setEnabled (bool)));
+    connect (m_doc_browser, SIGNAL (forwardAvailable (bool)),
+             m_action_go_next, SLOT (setEnabled (bool)));
+
+
+    // Find
+    m_tool_bar->addSeparator ();
+    m_action_find = add_action (resource_manager::icon ("edit-find"),
+                                   tr ("Find"), SLOT (activate_find (void)),
+                                   this, m_tool_bar);
+
+    // Zoom
+    m_tool_bar->addSeparator ();
+    m_action_zoom_in = add_action (resource_manager::icon ("zoom-in"),
+                                   tr ("Zoom in"), SLOT (zoom_in (void)),
+                                   m_doc_browser, m_tool_bar);
+    m_action_zoom_out = add_action (resource_manager::icon ("zoom-out"),
+                                    tr ("Zoom in"), SLOT (zoom_out (void)),
+                                    m_doc_browser, m_tool_bar);
+    m_action_zoom_original = add_action (resource_manager::icon ("zoom-original"),
+                                   tr ("Zoom original"), SLOT (zoom_original (void)),
+                                   m_doc_browser, m_tool_bar);
+  }
+
   void documentation::global_search (void)
   {
 #if defined (HAVE_QHELPSEARCHQUERYWIDGET_SEARCHINPUT)
     QString queries
       = m_help_engine->searchEngine ()->queryWidget ()->searchInput ();
 #else
     QList<QHelpSearchQuery> queries
       = m_help_engine->searchEngine ()->queryWidget ()->query ();
@@ -376,24 +413,43 @@ namespace octave
            }
 
         m_internal_search = QString ();
       }
 
     qApp->restoreOverrideCursor();
   }
 
-  void documentation::notice_settings (const QSettings *)
+  void documentation::notice_settings (const QSettings *settings)
   {
-    shortcut_manager::shortcut (m_show_shortcut, "editor_edit:find_replace");
+    // Icon size in the toolbar.
+
+    int icon_size_settings = settings->value ("toolbar_icon_size", 0).toInt ();
+    QStyle *st = style ();
+    int icon_size = st->pixelMetric (QStyle::PM_ToolBarIconSize);
+
+    // FIXME: Magic numbers.  Use enum?
+
+    if (icon_size_settings == 1)
+      icon_size = st->pixelMetric (QStyle::PM_LargeIconSize);
+    else if (icon_size_settings == -1)
+      icon_size = st->pixelMetric (QStyle::PM_SmallIconSize);
+
+    m_tool_bar->setIconSize (QSize (icon_size, icon_size));
+
+    // Shortcuts
+    shortcut_manager::set_shortcut (m_action_find, "editor_edit:find_replace");
     shortcut_manager::shortcut (m_findnext_shortcut, "editor_edit:find_next");
     shortcut_manager::shortcut (m_findprev_shortcut, "editor_edit:find_previous");
-    shortcut_manager::shortcut (m_zoom_in_shortcut, "editor_view:zoom_in");
-    shortcut_manager::shortcut (m_zoom_out_shortcut, "editor_view:zoom_out");
-    shortcut_manager::shortcut (m_zoom_normal_shortcut, "editor_view:zoom_normal");
+    shortcut_manager::set_shortcut (m_action_zoom_in, "editor_view:zoom_in");
+    shortcut_manager::set_shortcut (m_action_zoom_out, "editor_view:zoom_out");
+    shortcut_manager::set_shortcut (m_action_zoom_original, "editor_view:zoom_normal");
+    shortcut_manager::set_shortcut (m_action_go_home, "doc_browser:go_home");
+    shortcut_manager::set_shortcut (m_action_go_prev, "doc_browser:go_back");
+    shortcut_manager::set_shortcut (m_action_go_next, "doc_browser:go_next");
   }
 
   void documentation::copyClipboard (void)
   {
     if (m_doc_browser->hasFocus ())
       {
         m_doc_browser->copy();
       }
@@ -448,16 +504,31 @@ namespace octave
         search_query->setQuery (query);
 #endif
         QWidget *search_tab
           = navi->findChild<QWidget*> ("documentation_tab_search");
         navi->setCurrentWidget (search_tab);
       }
   }
 
+  void documentation::activate_find (void)
+  {
+    if (m_find_line_edit->parentWidget ()->isVisible ())
+      {
+        m_find_line_edit->parentWidget ()->hide ();
+        m_doc_browser->setFocus ();
+      }
+    else
+      {
+        m_find_line_edit->parentWidget ()->show ();
+        m_find_line_edit->selectAll ();
+        m_find_line_edit->setFocus ();
+      }
+  }
+
   void documentation::filter_update (const QString& expression)
   {
     if (! m_help_engine)
       return;
 
     QString wildcard;
     if (expression.contains (QLatin1Char('*')))
       wildcard = expression;
@@ -604,17 +675,17 @@ namespace octave
   {
     if (m_zoom_level > min_zoom_level)
       {
         zoomOut ();
         m_zoom_level--;
       }
   }
 
-  void documentation_browser::zoom_normal (void)
+  void documentation_browser::zoom_original (void)
   {
     zoomIn (- m_zoom_level);
     m_zoom_level = 0;
   }
 
   void documentation_browser::wheelEvent (QWheelEvent *we)
   {
     if (we->modifiers () == Qt::ControlModifier)
diff --git a/libgui/src/documentation.h b/libgui/src/documentation.h
--- a/libgui/src/documentation.h
+++ b/libgui/src/documentation.h
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #define octave_documentation_h 1
 
 #include <QComboBox>
 #include <QWidget>
 #include <QSettings>
 #include <QShortcut>
 #include <QSplitter>
 #include <QTextBrowser>
+#include <QToolBar>
 #include <QtHelp/QHelpEngine>
 
 namespace octave
 {
   //! Documentation browser derived from Textbrowser
 
   class documentation_browser : public QTextBrowser
   {
@@ -51,17 +52,17 @@ namespace octave
     void handle_index_clicked (const QUrl& url,
                                const QString& keyword = QString ());
     void notice_settings (const QSettings *settings);
 
     //! Zooming in and out while taking care of the zoom level
     //!@{
     void zoom_in (void);
     void zoom_out (void);
-    void zoom_normal (void);
+    void zoom_original (void);
     //!@}
 
   protected:
 
      void wheelEvent (QWheelEvent *we);
 
   private:
 
@@ -101,16 +102,17 @@ namespace octave
     void selectAll (void);
 
     void load_ref (const QString & name);
     void registerDoc (const QString & name);
     void unregisterDoc (const QString & name);
 
   private slots:
 
+    void activate_find (void);
     void global_search (void);
     void global_search_started (void);
     void global_search_finished (int hits);
     void filter_update (const QString& expression);
     void filter_update_history (void);
     void find_forward (void);
     void find_backward (void);
     void find_forward_from_anchor (const QString& text);
@@ -118,26 +120,39 @@ namespace octave
     void handle_cursor_position_change (void);
 
   signals:
 
     void show_single_result (const QUrl);
 
   private:
 
+    void construct_tool_bar (void);
+    QAction *add_action (const QIcon& icon, const QString& text,
+                         const char *member, QWidget *receiver = nullptr,
+                         QToolBar *tool_bar = nullptr);
+
     QHelpEngine *m_help_engine;
     QString m_internal_search;
     documentation_browser *m_doc_browser;
     QLineEdit *m_find_line_edit;
     int m_search_anchor_position;
     QComboBox *m_filter;
     QString m_collection;
 
-    QShortcut *m_show_shortcut;
+    QWidget *m_doc_widget;
+    QToolBar *m_tool_bar;
+
+    QAction *m_action_go_home;
+    QAction *m_action_go_prev;
+    QAction *m_action_go_next;
+
+    QAction *m_action_find;
     QShortcut *m_findnext_shortcut;
     QShortcut *m_findprev_shortcut;
-    QShortcut *m_zoom_in_shortcut;
-    QShortcut *m_zoom_out_shortcut;
-    QShortcut *m_zoom_normal_shortcut;
+
+    QAction *m_action_zoom_in;
+    QAction *m_action_zoom_out;
+    QAction *m_action_zoom_original;
   };
 }
 
 #endif
diff --git a/libgui/src/icons/zoom-original.png b/libgui/src/icons/zoom-original.png
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..1cca9cbfc092218fc5221511809bd5720401f85a
GIT binary patch
literal 2869
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
Jk%f24e*m*bEhPW|

diff --git a/libgui/src/icons/zoom-original.svg b/libgui/src/icons/zoom-original.svg
new file mode 100644
--- /dev/null
+++ b/libgui/src/icons/zoom-original.svg
@@ -0,0 +1,371 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   version="1.1"
+   id="svg6431"
+   height="48px"
+   width="48px">
+  <defs
+     id="defs6433">
+    <linearGradient
+       id="linearGradient2091">
+      <stop
+         id="stop2093"
+         offset="0"
+         style="stop-color:#000000;stop-opacity:1;" />
+      <stop
+         id="stop2095"
+         offset="1"
+         style="stop-color:#000000;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient7916">
+      <stop
+         id="stop7918"
+         offset="0"
+         style="stop-color:#ffffff;stop-opacity:1;" />
+      <stop
+         id="stop7920"
+         offset="1.0000000"
+         style="stop-color:#ffffff;stop-opacity:0.34020618;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient8662">
+      <stop
+         id="stop8664"
+         offset="0"
+         style="stop-color:#000000;stop-opacity:1;" />
+      <stop
+         id="stop8666"
+         offset="1"
+         style="stop-color:#000000;stop-opacity:0;" />
+    </linearGradient>
+    <radialGradient
+       r="15.644737"
+       fy="36.421127"
+       fx="24.837126"
+       cy="36.421127"
+       cx="24.837126"
+       gradientTransform="matrix(1.000000,0.000000,0.000000,0.536723,-1.018989e-13,16.87306)"
+       gradientUnits="userSpaceOnUse"
+       id="radialGradient1503"
+       xlink:href="#linearGradient8662" />
+    <linearGradient
+       id="linearGradient2847">
+      <stop
+         id="stop2849"
+         offset="0"
+         style="stop-color:#3465a4;stop-opacity:1;" />
+      <stop
+         id="stop2851"
+         offset="1"
+         style="stop-color:#3465a4;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       y2="26.194071"
+       x2="37.065414"
+       y1="29.729605"
+       x1="37.128052"
+       gradientTransform="matrix(-1.000000,0.000000,0.000000,-1.000000,-1.242480,40.08170)"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient1488"
+       xlink:href="#linearGradient2847" />
+    <linearGradient
+       id="linearGradient2831">
+      <stop
+         id="stop2833"
+         offset="0"
+         style="stop-color:#3465a4;stop-opacity:1;" />
+      <stop
+         style="stop-color:#5b86be;stop-opacity:1;"
+         offset="0.33333334"
+         id="stop2855" />
+      <stop
+         id="stop2835"
+         offset="1"
+         style="stop-color:#83a8d8;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       y2="19.115122"
+       x2="15.419417"
+       y1="10.612206"
+       x1="13.478554"
+       gradientTransform="translate(-48.30498,-6.043298)"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient1486"
+       xlink:href="#linearGradient2831" />
+    <linearGradient
+       id="linearGradient2380">
+      <stop
+         id="stop2382"
+         offset="0"
+         style="stop-color:#b9cfe7;stop-opacity:1" />
+      <stop
+         id="stop2384"
+         offset="1"
+         style="stop-color:#729fcf;stop-opacity:1" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2682">
+      <stop
+         id="stop2684"
+         offset="0"
+         style="stop-color:#3977c3;stop-opacity:1;" />
+      <stop
+         id="stop2686"
+         offset="1"
+         style="stop-color:#89aedc;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       gradientTransform="translate(-48.77039,-5.765705)"
+       gradientUnits="userSpaceOnUse"
+       y2="24.842253"
+       x2="37.124462"
+       y1="31.455952"
+       x1="36.713837"
+       id="linearGradient2688"
+       xlink:href="#linearGradient2682" />
+    <linearGradient
+       id="linearGradient2690">
+      <stop
+         id="stop2692"
+         offset="0"
+         style="stop-color:#c4d7eb;stop-opacity:1;" />
+      <stop
+         id="stop2694"
+         offset="1"
+         style="stop-color:#c4d7eb;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       gradientTransform="translate(-48.77039,-5.765705)"
+       gradientUnits="userSpaceOnUse"
+       y2="24.842253"
+       x2="37.124462"
+       y1="30.748846"
+       x1="32.647972"
+       id="linearGradient2696"
+       xlink:href="#linearGradient2690" />
+    <linearGradient
+       id="linearGradient2871">
+      <stop
+         id="stop2873"
+         offset="0"
+         style="stop-color:#3465a4;stop-opacity:1;" />
+      <stop
+         id="stop2875"
+         offset="1"
+         style="stop-color:#3465a4;stop-opacity:1" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2402">
+      <stop
+         id="stop2404"
+         offset="0"
+         style="stop-color:#729fcf;stop-opacity:1;" />
+      <stop
+         id="stop2406"
+         offset="1"
+         style="stop-color:#528ac5;stop-opacity:1;" />
+    </linearGradient>
+    <linearGradient
+       y2="26.048164"
+       x2="52.854097"
+       y1="26.048164"
+       x1="5.9649176"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient1493"
+       xlink:href="#linearGradient2797" />
+    <linearGradient
+       id="linearGradient2797">
+      <stop
+         id="stop2799"
+         offset="0"
+         style="stop-color:#ffffff;stop-opacity:1;" />
+      <stop
+         id="stop2801"
+         offset="1"
+         style="stop-color:#ffffff;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       y2="26.048164"
+       x2="52.854097"
+       y1="26.048164"
+       x1="5.9649176"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient1491"
+       xlink:href="#linearGradient2797" />
+    <linearGradient
+       id="linearGradient7179">
+      <stop
+         id="stop7181"
+         offset="0"
+         style="stop-color:#ffffff;stop-opacity:1;" />
+      <stop
+         id="stop7183"
+         offset="1"
+         style="stop-color:#ffffff;stop-opacity:0;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient2316">
+      <stop
+         id="stop2318"
+         offset="0"
+         style="stop-color:#000000;stop-opacity:1;" />
+      <stop
+         id="stop2320"
+         offset="1"
+         style="stop-color:#ffffff;stop-opacity:0.65979379;" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient1322">
+      <stop
+         style="stop-color:#729fcf"
+         offset="0.0000000"
+         id="stop1324" />
+      <stop
+         style="stop-color:#5187d6;stop-opacity:1.0000000;"
+         offset="1.0000000"
+         id="stop1326" />
+    </linearGradient>
+    <linearGradient
+       gradientTransform="translate(-16.158044,-13.57119)"
+       gradientUnits="userSpaceOnUse"
+       y2="48.547989"
+       x2="45.918697"
+       y1="36.422989"
+       x1="34.892849"
+       id="linearGradient4975"
+       xlink:href="#linearGradient1322" />
+    <linearGradient
+       gradientUnits="userSpaceOnUse"
+       y2="23.554308"
+       x2="22.374878"
+       y1="13.604306"
+       x1="13.435029"
+       id="linearGradient7185"
+       xlink:href="#linearGradient7179" />
+    <linearGradient
+       gradientTransform="matrix(-1.000000,0.000000,0.000000,-1.000000,47.93934,50.02474)"
+       y2="23.554308"
+       x2="22.374878"
+       y1="13.604306"
+       x1="13.435029"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient7189"
+       xlink:href="#linearGradient7179" />
+    <linearGradient
+       y2="20.60858"
+       x2="15.984863"
+       y1="36.061237"
+       x1="62.513836"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient7180"
+       xlink:href="#linearGradient2380" />
+    <linearGradient
+       y2="50.939667"
+       x2="45.380436"
+       y1="45.264122"
+       x1="46.834816"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient7182"
+       xlink:href="#linearGradient2871" />
+    <linearGradient
+       y2="26.649362"
+       x2="53.588622"
+       y1="23.667896"
+       x1="18.935766"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient7184"
+       xlink:href="#linearGradient2402" />
+    <linearGradient
+       y2="50.939667"
+       x2="45.380436"
+       y1="45.264122"
+       x1="46.834816"
+       gradientUnits="userSpaceOnUse"
+       id="linearGradient7186"
+       xlink:href="#linearGradient2871" />
+    <linearGradient
+       gradientTransform="translate(1.8597996)"
+       gradientUnits="userSpaceOnUse"
+       y2="34.976799"
+       x2="27.900846"
+       y1="22.851799"
+       x1="16.874998"
+       id="linearGradient7922"
+       xlink:href="#linearGradient7916" />
+    <radialGradient
+       gradientUnits="userSpaceOnUse"
+       gradientTransform="matrix(1.4184041,0.02503119,-0.01273728,0.42257812,-7.1268356,21.308007)"
+       r="10.319340"
+       fy="35.127438"
+       fx="23.070683"
+       cy="35.127438"
+       cx="23.070683"
+       id="radialGradient2097"
+       xlink:href="#linearGradient2091" />
+  </defs>
+  <metadata
+     id="metadata6436">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title></dc:title>
+        <dc:date>2006-01-04</dc:date>
+        <dc:creator>
+          <cc:Agent>
+            <dc:title>Andreas Nilsson</dc:title>
+          </cc:Agent>
+        </dc:creator>
+        <dc:source>http://tango-project.org</dc:source>
+        <dc:subject>
+          <rdf:Bag>
+            <rdf:li>add</rdf:li>
+            <rdf:li>plus</rdf:li>
+          </rdf:Bag>
+        </dc:subject>
+        <cc:license
+           rdf:resource="http://creativecommons.org/publicdomain/zero/1.0/" />
+      </cc:Work>
+      <cc:License
+         rdf:about="http://creativecommons.org/publicdomain/zero/1.0/">
+        <cc:permits
+           rdf:resource="http://creativecommons.org/ns#Reproduction" />
+        <cc:permits
+           rdf:resource="http://creativecommons.org/ns#Distribution" />
+        <cc:permits
+           rdf:resource="http://creativecommons.org/ns#DerivativeWorks" />
+      </cc:License>
+    </rdf:RDF>
+  </metadata>
+  <g
+     id="layer1">
+    <ellipse
+       ry="4.5910006"
+       rx="16.000002"
+       cy="36.646465"
+       cx="24.975922"
+       id="path1361"
+       style="opacity:0.10824741;fill:url(#radialGradient2097);fill-opacity:1;stroke:none;stroke-width:5.25468683;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" />
+    <path
+       id="text1314"
+       d="m 29.374162,37.542682 v -9.02696 l 0.01114,-0.04018 v -6.995324 h -0.0022 l -0.0089,-9.96017 -4.565294,0.01116 -2.080467,0.04553 -5.868635,2.830125 -0.01961,8.166666 5.531084,-2.45098 0.0067,17.393347 z"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:59.90107727px;line-height:125%;font-family:'Bitstream Vera Sans';text-align:start;writing-mode:lr-tb;text-anchor:start;fill:#75a1d0;fill-opacity:1;stroke:#3465a4;stroke-width:1.00000036px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
+    <path
+       id="path7076"
+       d="m 28.358508,36.53392 v -9.034182 0 l 0.0089,-5.024429 v 0 -9.994974 L 23.372574,12.498195 17.859806,15 v 6 L 23.350002,18.593137 23.392894,32 l -0.01339,4.502672 z"
+       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:59.90107727px;line-height:125%;font-family:'Bitstream Vera Sans';text-align:start;writing-mode:lr-tb;text-anchor:start;opacity:0.40860219;fill:url(#linearGradient4975);fill-opacity:1;stroke:url(#linearGradient7922);stroke-width:1.0000006px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
+    <path
+       id="path7914"
+       d="m 22.859806,25 c 0,1.9375 5.984375,-0.96875 5.984375,-0.03125 v -3 L 28.859806,22 l 0.02124,-9.982614 -2.521242,-0.0087 -3.45915,-0.0087 -5.54085,2.685751 -0.0098,6.989086 5.509804,-2.287582 V 24 Z"
+       style="opacity:0.31182796;fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:none;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
+  </g>
+</svg>
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -76,16 +76,17 @@ octave_gui_ICONS = \
   %reldir%/icons/view-refresh.png \
   %reldir%/icons/widget-close.png \
   %reldir%/icons/widget-dock.png \
   %reldir%/icons/widget-undock.png \
   %reldir%/icons/widget-close-light.png \
   %reldir%/icons/widget-dock-light.png \
   %reldir%/icons/widget-undock-light.png \
   %reldir%/icons/zoom-in.png \
+  %reldir%/icons/zoom-original.png \
   %reldir%/icons/zoom-out.png
 
 octave_gui_MOC =
 
 if AMCOND_HAVE_QSCINTILLA
 
 OCTAVE_GUI_SRC_M_EDITOR_MOC = \
   %reldir%/m-editor/moc-file-editor-interface.cc \
diff --git a/libgui/src/resource.qrc b/libgui/src/resource.qrc
--- a/libgui/src/resource.qrc
+++ b/libgui/src/resource.qrc
@@ -58,11 +58,12 @@
         <file>icons/view-refresh.png</file>
         <file>icons/widget-close.png</file>
         <file>icons/widget-dock.png</file>
         <file>icons/widget-undock.png</file>
         <file>icons/widget-close-light.png</file>
         <file>icons/widget-dock-light.png</file>
         <file>icons/widget-undock-light.png</file>
         <file>icons/zoom-in.png</file>
+        <file>icons/zoom-original.png</file>
         <file>icons/zoom-out.png</file>
     </qresource>
 </RCC>
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -324,16 +324,27 @@ namespace octave
           QKeySequence (ctrl + Qt::Key_PageUp));
     init (tr ("Switch to Right Tab"), "editor_tabs:switch_right_tab",
           QKeySequence (ctrl + Qt::Key_PageDown));
     init (tr ("Move Tab Left"), "editor_tabs:move_tab_left",
           QKeySequence (Qt::AltModifier + Qt::Key_PageUp));
     init (tr ("Move Tab Right"), "editor_tabs:move_tab_right",
           QKeySequence (Qt::AltModifier + Qt::Key_PageDown));
 
+    // Zooming
+    init (tr ("Zoom In"), "editor_view:zoom_in", QKeySequence::ZoomIn);
+    init (tr ("Zoom Out"), "editor_view:zoom_out", QKeySequence::ZoomOut);
+#if defined (Q_OS_MAC)
+    init (tr ("Zoom Normal"), "editor_view:zoom_normal",
+          QKeySequence (ctrl + Qt::Key_Underscore));
+#else
+    init (tr ("Zoom Normal"), "editor_view:zoom_normal",
+          QKeySequence (ctrl + Qt::Key_Period));
+#endif
+
     // actions of the editor
 
     // file
     init (tr ("Edit Function"), "editor_file:edit_function",
           QKeySequence (ctrl + Qt::Key_E));
     init (tr ("Save File"), "editor_file:save", QKeySequence::Save);
     init (tr ("Save File As"), "editor_file:save_as", QKeySequence::SaveAs);
     init (tr ("Print"), "editor_file:print", QKeySequence::Print);
@@ -430,25 +441,16 @@ namespace octave
     init (tr ("Show Long Line Marker"), "editor_view:show_long_line",
           QKeySequence ());
     init (tr ("Show Toolbar"), "editor_view:show_toolbar",
           QKeySequence ());
     init (tr ("Show Statusbar"), "editor_view:show_statusbar",
           QKeySequence ());
     init (tr ("Show Horizontal Scrollbar"), "editor_view:show_hscrollbar",
           QKeySequence ());
-    init (tr ("Zoom In"), "editor_view:zoom_in", QKeySequence::ZoomIn);
-    init (tr ("Zoom Out"), "editor_view:zoom_out", QKeySequence::ZoomOut);
-#if defined (Q_OS_MAC)
-    init (tr ("Zoom Normal"), "editor_view:zoom_normal",
-          QKeySequence (ctrl + Qt::Key_Underscore));
-#else
-    init (tr ("Zoom Normal"), "editor_view:zoom_normal",
-          QKeySequence (ctrl + Qt::Key_Period));
-#endif
 
     // debug
     init (tr ("Toggle Breakpoint"), "editor_debug:toggle_breakpoint",
           QKeySequence ());
     init (tr ("Next Breakpoint"), "editor_debug:next_breakpoint",
           QKeySequence ());
     init (tr ("Previous Breakpoint"), "editor_debug:previous_breakpoint",
           QKeySequence ());
@@ -462,16 +464,22 @@ namespace octave
           QKeySequence (prefix + Qt::Key_F9));
 
     // help
     init (tr ("Help on Keyword"), "editor_help:help_keyword",
           QKeySequence::HelpContents);
     init (tr ("Document on Keyword"), "editor_help:doc_keyword",
           QKeySequence (Qt::SHIFT + Qt::Key_F1));
 
+
+    // Documentation browser
+    init (tr ("Go to Homepage"), "doc_browser:go_home",
+              QKeySequence (Qt::AltModifier + Qt::Key_Home));
+    init (tr ("Go Back one Page"), "doc_browser:go_back", QKeySequence::Back);
+    init (tr ("Go Forward one Page"), "doc_browser:go_next", QKeySequence::Forward);
   }
 
   // write one or all actual shortcut set(s) into a settings file
   void shortcut_manager::do_write_shortcuts (QSettings *settings,
                                              bool closing)
   {
     bool sc_ctrld = false;
 
@@ -584,16 +592,25 @@ namespace octave
 
     m_level_hash["editor_file"] = editor_file;
     m_level_hash["editor_edit"] = editor_edit;
     m_level_hash["editor_view"] = editor_view;
     m_level_hash["editor_debug"] = editor_debug;
     m_level_hash["editor_run"] = editor_run;
     m_level_hash["editor_help"] = editor_help;
 
+    QTreeWidgetItem *doc = new QTreeWidgetItem (tree_view);
+    doc->setText (0, tr ("Documentation Viewer"));
+    doc->setExpanded (true);
+
+    QTreeWidgetItem *doc_browser = new QTreeWidgetItem (doc);
+    doc_browser->setText (0, tr ("Browser"));
+
+    m_level_hash["doc_browser"] = doc_browser;
+
     connect (tree_view, SIGNAL (itemDoubleClicked (QTreeWidgetItem*, int)),
              this, SLOT (handle_double_clicked (QTreeWidgetItem*, int)));
 
     for (int i = 0; i < m_sc.count (); i++)
       {
         shortcut_t sc = m_sc.at (i);
 
         QTreeWidgetItem *section = m_level_hash[sc.m_settings_key.section (':',0,0)];
