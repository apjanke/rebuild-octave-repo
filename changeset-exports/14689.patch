# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1337972076 -7200
#      Fri May 25 20:54:36 2012 +0200
# Branch gui
# Node ID dd19de736ee49c30ddc294cbe92f9cf20fb6d948
# Parent  9ea75ea686b580a73a52c6e0deb91b8dc1fed404
Fixed crash on exit. Typing exit in the terminal works, too.

* OctaveLink.cpp: Added octave_exit hook and changed terminateOctave method.

diff --git a/gui/src/backend/OctaveLink.cpp b/gui/src/backend/OctaveLink.cpp
--- a/gui/src/backend/OctaveLink.cpp
+++ b/gui/src/backend/OctaveLink.cpp
@@ -13,25 +13,31 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include "OctaveLink.h"
 #include "load-path.h"
 #include <QDir>
+#include <QApplication>
 
-int update_hook_impl()
+int octave_readline_hook ()
 {
-  OctaveLink::instance()->triggerUpdateHistoryModel();
-  OctaveLink::instance()->triggerCacheSymbolTable();
-  QDir::setCurrent(load_path::get_command_line_path().c_str());
+  OctaveLink::instance ()->triggerUpdateHistoryModel ();
+  OctaveLink::instance ()->triggerCacheSymbolTable ();
+  QDir::setCurrent (load_path::get_command_line_path ().c_str ());
   return 0;
 }
 
+void octave_exit_hook (int status)
+{
+  OctaveLink::instance ()->terminateOctave ();
+}
+
 OctaveLink OctaveLink::m_singleton;
 
 OctaveLink::OctaveLink ():QObject ()
 {
   m_historyModel = new QStringListModel (this);
   m_workspaceModel = new WorkspaceModel (this);
 
   m_workspaceModel->insertTopLevelItem(0, new TreeItem ("Local"));
@@ -49,28 +55,28 @@ OctaveLink::~OctaveLink ()
 {
 }
 
 void
 OctaveLink::launchOctave ()
 {
   // Create both threads.
   m_octaveMainThread = new OctaveMainThread (this);
-  command_editor::add_event_hook(update_hook_impl);
+  command_editor::add_event_hook (octave_readline_hook);
+  octave_exit = octave_exit_hook;
+
   // Start the first one.
   m_octaveMainThread->start ();
   _updateWorkspaceModelTimer.start ();
 }
 
 void
 OctaveLink::terminateOctave ()
 {
-  m_octaveMainThread->terminate ();
-  quit_allowed = true;
-  m_octaveMainThread->wait();
+  QMetaObject::invokeMethod (qApp, "quit");
 }
 
 void
 OctaveLink::triggerUpdateHistoryModel ()
 {
   // Determine the client's (our) history length and the one of the server.
   int clientHistoryLength = m_historyModel->rowCount ();
   int serverHistoryLength = command_history::length ();
