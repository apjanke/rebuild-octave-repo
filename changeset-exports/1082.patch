# HG changeset patch
# User jwe
# Date 791245593 0
#      Fri Jan 27 22:26:33 1995 +0000
# Node ID d1a1608f1028427687e0577a916b5988069f11ed
# Parent  5972ef4972ccc7901b3fc492fb66fb9bfea628df
[project @ 1995-01-27 22:26:33 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -250,19 +250,19 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
     return ';';
   }
 
 %{
 // In some cases, new lines can also become row separators.
 %}
 
 <MATRIX>{SNLCMT}*\n{SNLCMT}* {
+    fixup_column_count (yytext);
     if (user_pref.whitespace_in_literal_matrix != 2)
       {
-	fixup_column_count (yytext);
 	quote_is_transpose = 0;
 	cant_be_identifier = 0;
 	convert_spaces_to_comma = 1;
 
 	if (nesting_level.empty ())
 	  return LEXICAL_ERROR;
 
 	if (nesting_level.top () == BRACE)
@@ -272,34 +272,37 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 
 %{
 // Open and close brace are handled differently if we are in the range
 // part of a plot command.
 //
 %}
 
 \[{S}* {
-    fixup_column_count (yytext);
+    nesting_level.push (BRACE);
 
-    nesting_level.push (BRACE);
+    current_input_column += yyleng;
+    quote_is_transpose = 0;
+    cant_be_identifier = 0;
+    convert_spaces_to_comma = 1;
 
     promptflag--;
     eat_whitespace ();
 
     if (plotting && ! past_plot_range)
       {
 	in_plot_range = 1;
-	TOK_RETURN (OPEN_BRACE);
+	return OPEN_BRACE;
       }
     else
       {
 	mlnm.push (1);
 	braceflag++;
 	BEGIN MATRIX;
-	TOK_RETURN ('[');
+	return '[';
       }
   }
 
 \] {
     if (! nesting_level.empty ())
       nesting_level.pop ();
 
     if (plotting && ! past_plot_range)
@@ -1378,16 +1381,17 @@ eat_whitespace (void)
 	    break;
 	  else
 	    goto done;
 	}
     }
 
  done:
   yyunput (c, yytext);
+  current_input_column--;
   return retval;
 }
 
 static void
 handle_number (char *yytext)
 {
   double value;
   int nread = sscanf (yytext, "%lf", &value);
