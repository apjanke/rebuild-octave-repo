# HG changeset patch
# User Rik <rik@octave.org>
# Date 1374732766 25200
#      Wed Jul 24 23:12:46 2013 -0700
# Node ID f17d9a574645303642223ed81a3acc0c96c7bc6d
# Parent  19c3b5bf5c8e3633fb081d98c7a93ba729a1d705
compass.m: Overhaul to use new __plt_get_axis_arg__.

* scripts/plot/compass.m: Update to use new __plt_get_axis_arg__.
Redo docstring.

diff --git a/scripts/plot/compass.m b/scripts/plot/compass.m
--- a/scripts/plot/compass.m
+++ b/scripts/plot/compass.m
@@ -15,59 +15,61 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} compass (@var{u}, @var{v})
 ## @deftypefnx {Function File} {} compass (@var{z})
 ## @deftypefnx {Function File} {} compass (@dots{}, @var{style})
-## @deftypefnx {Function File} {} compass (@var{h}, @dots{})
+## @deftypefnx {Function File} {} compass (@var{hax}, @dots{})
 ## @deftypefnx {Function File} {@var{h} =} compass (@dots{})
 ##
 ## Plot the @code{(@var{u}, @var{v})} components of a vector field emanating
 ## from the origin of a polar plot.  If a single complex argument @var{z} is
 ## given, then @code{@var{u} = real (@var{z})} and @code{@var{v} = imag
 ## (@var{z})}.
 ##
 ## The style to use for the plot can be defined with a line style @var{style}
 ## in a similar manner to the line styles used with the @code{plot} command.
 ##
+## If the first argument @var{hax} is an axis handle, then plot into these axes,
+## rather than the current axis handle returned by @code{gca}.
+##
 ## The optional return value @var{h} is a vector of graphics handles to the
 ## line objects representing the drawn vectors.
 ##
 ## @example
 ## @group
 ## a = toeplitz ([1;randn(9,1)], [1,randn(1,9)]);
 ## compass (eig (a));
 ## @end group
 ## @end example
 ##
 ## @seealso{polar, quiver, feather, plot}
 ## @end deftypefn
 
-function retval = compass (varargin)
+function h = compass (varargin)
 
-  [h, varargin, nargin] = __plt_get_axis_arg__ ("compass", varargin{:});
-
-  arrowsize = 0.25;
+  [hax, varargin, nargin] = __plt_get_axis_arg__ ("compass", varargin{:});
 
   if (nargin == 0)
     print_usage ();
   elseif (nargin == 1 || (nargin == 2 && ! isnumeric (varargin{2})))
     ioff = 2;
     z = varargin{1}(:).';
     u = real (z);
     v = imag (z);
   elseif (nargin > 1 && isnumeric (varargin{2}))
     ioff = 3;
     u = varargin{1}(:).';
     v = varargin{2}(:).';
   endif
 
+  arrowsize = 0.25;
   line_spec = "b-";
   have_line_spec = false;
   while (ioff <= nargin)
     arg = varargin{ioff++};
     if ((ischar (arg) || iscell (arg)) && ! have_line_spec)
       [linespec, valid] = __pltopt__ ("compass", arg, false);
       if (valid)
         line_spec = arg;
@@ -90,27 +92,28 @@ function retval = compass (varargin)
   yend = v;
   ytmp = v .* (1 - arrowsize);
   x = [zeros(1, n); xend; xtmp  - v * arrowsize / 3; xend; ...
        xtmp + v * arrowsize / 3];
   y = [zeros(1, n); yend; ytmp  + u * arrowsize / 3; yend; ...
        ytmp - u * arrowsize / 3];
   [r, p] = cart2pol (x, y);
 
-  oldh = gca ();
+  oldfig = ifelse (isempty (hax), [], get (0, "currentfigure"));
   unwind_protect
-    axes (h);
-    newplot ();
-    hlist = polar (h, r, p, line_spec);
+    hax = newplot (hax);
+    hlist = polar (hax, r, p, line_spec);
   unwind_protect_cleanup
-    axes (oldh);
+    if (! isempty (oldfig))
+      set (0, "currentfigure", oldfig);
+    endif
   end_unwind_protect
 
   if (nargout > 0)
-    retval = hlist;
+    h = hlist;
   endif
 
 endfunction
 
 
 %!demo
 %! clf;
 %! randn_9x1_data = [-2.555884; 0.394974; -0.191871; -1.147024; 1.355425; -0.437335; -0.014370; -0.941312; 1.240300];
