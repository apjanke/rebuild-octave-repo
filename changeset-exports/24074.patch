# HG changeset patch
# User Piotr Held <pjheld@gmail.com>
# Date 1504115235 25200
#      Wed Aug 30 10:47:15 2017 -0700
# Node ID ff973f3e17e3948edd157066848a9cb258f58f8a
# Parent  1c2f34a2c60dcaab341ccbc481a128ab613d2ff5
fix memory leak when raising errors inside cdef_class::make_meta_class

* oct-parse.in.yy (parse_fcn_file): Catch any errors occurring in
cdef_class::make_meta_class and delete associated tree_classdef object
if meta class creation fails.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -4519,22 +4519,30 @@ parse_fcn_file (const std::string& full_
               if (fcn_ptr)
                 panic_impossible ();
 
               bool is_at_folder = ! dispatch_type.empty ();
 
               octave::interpreter& interp
                 = octave::__get_interpreter__ ("parse_fcn_file");
 
-              fcn_ptr
-                = parser.m_classdef_object->make_meta_class (interp, is_at_folder);
+              try
+                {
+                  fcn_ptr = parser.m_classdef_object->make_meta_class (interp, is_at_folder);
+                }
+              catch (const octave::execution_exception&)
+                {
+                  delete parser.m_classdef_object;
+                  throw;
+                }
+
               if (fcn_ptr)
                 retval = octave_value (fcn_ptr);
 
-              delete (parser.m_classdef_object);
+              delete parser.m_classdef_object;
 
               parser.m_classdef_object = nullptr;
             }
           else if (fcn_ptr)
             {
               retval = octave_value (fcn_ptr);
 
               fcn_ptr->maybe_relocate_end ();
