# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302206740 -7200
#      Thu Apr 07 22:05:40 2011 +0200
# Node ID 45e5447ef292c9b3fc86264e25a62cc3d065fec3
# Parent  c6e7dc1c292598ff2cf3fae7e7fa5feff519ec86
Fixed bug in terminal display when resizing.

diff --git a/gui//src/TerminalDisplay.cpp b/gui//src/TerminalDisplay.cpp
--- a/gui//src/TerminalDisplay.cpp
+++ b/gui//src/TerminalDisplay.cpp
@@ -679,36 +679,16 @@ void TerminalDisplay::drawTextFragment(Q
     drawCharacters(painter,rect,text,style,invertCharacterColor);
 
     painter.restore();
 }
 
 void TerminalDisplay::setRandomSeed(uint randomSeed) { _randomSeed = randomSeed; }
 uint TerminalDisplay::randomSeed() const { return _randomSeed; }
 
-#if 0
-/*!
-    Set XIM Position
-*/
-void TerminalDisplay::setCursorPos(const int curx, const int cury)
-{
-    QPoint tL  = contentsRect().topLeft();
-    int    tLx = tL.x();
-    int    tLy = tL.y();
-
-    int xpos, ypos;
-    ypos = _topMargin + tLy + _fontHeight*(cury-1) + _fontAscent;
-    xpos = _leftMargin + tLx + _fontWidth*curx;
-    //setMicroFocusHint(xpos, ypos, 0, _fontHeight); //### ???
-    // fprintf(stderr, "x/y = %d/%d\txpos/ypos = %d/%d\n", curx, cury, xpos, ypos);
-    _cursorLine = cury;
-    _cursorCol = curx;
-}
-#endif
-
 // scrolls the image by 'lines', down if lines > 0 or up otherwise.
 //
 // the terminal emulation keeps track of the scrolling of the character 
 // image as it receives input, and when the view is updated, it calls scrollImage() 
 // with the final scroll amount.  this improves performance because scrolling the 
 // display is much cheaper than re-rendering all the text for the 
 // part of the image which has moved up or down.  
 // Instead only new lines have to be drawn
@@ -1386,16 +1366,17 @@ void TerminalDisplay::blinkCursorEvent()
 /*                                                                           */
 /*                                  Resizing                                 */
 /*                                                                           */
 /* ------------------------------------------------------------------------- */
 
 void TerminalDisplay::resizeEvent(QResizeEvent*)
 {
   updateImageSize();
+  updateImage();
 }
 
 void TerminalDisplay::propagateSize()
 {
   if (_isFixedSize)
   {
      setSize(_columns, _lines);
      QWidget::setFixedSize(sizeHint());
