# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1451048951 18000
#      Fri Dec 25 08:09:11 2015 -0500
# Node ID 004fa31be0b77636aed5d94974d595e01b3bde4f
# Parent  d27f66b4b8e6a3bb31d61f1c44ccab8a8ed7dddf
use print_usage instead of usage

* oct-hist.cc, make_int.cc: Use print_usage instead of usage.
* oct-hist.cc: Eliminate unnecessary instances of retval variables.

diff --git a/examples/code/make_int.cc b/examples/code/make_int.cc
--- a/examples/code/make_int.cc
+++ b/examples/code/make_int.cc
@@ -276,17 +276,17 @@ Creates an integer variable from VAL.")
 
   if (args.length () == 1)
     {
       double d = args(0).double_value ();
 
       retval = octave_value (new octave_integer (NINT (d)));
     }
   else
-    usage ("make_int");
+    print_usage ();
 
   return retval;
 }
 
 DEFUN_DLD (doit, args, ,
            "doit (I)")
 {
   octave_value_list retval;
diff --git a/libinterp/corefcn/oct-hist.cc b/libinterp/corefcn/oct-hist.cc
--- a/libinterp/corefcn/oct-hist.cc
+++ b/libinterp/corefcn/oct-hist.cc
@@ -346,18 +346,16 @@ get_int_arg (const octave_value& arg, in
 
   return ok;
 }
 
 static std::string
 mk_tmp_hist_file (const octave_value_list& args,
                   bool insert_curr, const char *warn_for)
 {
-  std::string retval;
-
   string_vector hlist = command_history::list ();
 
   int hist_count = hlist.numel () - 1;  // switch to zero-based indexing
 
   // The current command line is already part of the history list by
   // the time we get to this point.  Delete the cmd from the list when
   // executing 'edit_history' so that it doesn't show up in the history
   // but the actual commands performed will.
@@ -374,52 +372,42 @@ mk_tmp_hist_file (const octave_value_lis
   int hist_end = hist_count;
 
   bool reverse = false;
 
   // Process options.
 
   int nargin = args.length ();
 
-  bool usage_error = false;
   if (nargin == 2)
     {
-      if (get_int_arg (args(0), hist_beg)
-          && get_int_arg (args(1), hist_end))
-        {
-          if (hist_beg < 0)
-            hist_beg += (hist_count + 1);
-          else
-            hist_beg--;
-          if (hist_end < 0)
-            hist_end += (hist_count + 1);
-          else
-            hist_end--;
-        }
+      if (! get_int_arg (args(0), hist_beg)
+          || ! get_int_arg (args(1), hist_end))
+        error ("%s: arguments must be integers", warn_for);
+
+      if (hist_beg < 0)
+        hist_beg += (hist_count + 1);
       else
-        usage_error = true;
+        hist_beg--;
+      if (hist_end < 0)
+        hist_end += (hist_count + 1);
+      else
+        hist_end--;
     }
   else if (nargin == 1)
     {
-      if (get_int_arg (args(0), hist_beg))
-        {
-          if (hist_beg < 0)
-            hist_beg += (hist_count + 1);
-          else
-            hist_beg--;
-          hist_end = hist_beg;
-        }
+      if (! get_int_arg (args(0), hist_beg))
+        error ("%s: argument must be an integer", warn_for);
+
+      if (hist_beg < 0)
+        hist_beg += (hist_count + 1);
       else
-        usage_error = true;
-    }
+        hist_beg--;
 
-  if (usage_error)
-    {
-      usage ("%s [first] [last]", warn_for);
-      return retval;
+      hist_end = hist_beg;
     }
 
   if (hist_beg > hist_count || hist_end > hist_count)
     error ("%s: history specification out of range", warn_for);
 
   if (hist_end < hist_beg)
     {
       std::swap (hist_end, hist_beg);
@@ -598,21 +586,22 @@ edit_history -1\n\
 @end example\n\
 \n\
 When using ranges, specifying a larger number for the first command than the\n\
 last command reverses the list of commands before they are placed in the\n\
 buffer to be edited.\n\
 @seealso{run_history, history}\n\
 @end deftypefn")
 {
-  octave_value_list retval;
+  if (args.length () > 2)
+    print_usage ();
 
   do_edit_history (args);
 
-  return retval;
+  return ovl ();
 }
 
 DEFUN (history, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} history\n\
 @deftypefnx {} {} history @var{opt1} @dots{}\n\
 @deftypefnx {} {@var{h} =} history ()\n\
 @deftypefnx {} {@var{h} =} history (@var{opt1}, @dots{})\n\
@@ -647,24 +636,21 @@ For example, to display the five most re
 typed without displaying line numbers, use the command\n\
 @kbd{history -q 5}.\n\
 \n\
 If invoked with a single output argument, the history will be saved to that\n\
 argument as a cell string and will not be output to screen.\n\
 @seealso{edit_history, run_history}\n\
 @end deftypefn")
 {
-  octave_value retval;
+  // Call do_history even if nargout is zero to display history list.
 
   string_vector hlist = do_history (args, nargout);
 
-  if (nargout > 0)
-    retval = Cell (hlist);
-
-  return retval;
+  return nargout > 0 ? ovl (Cell (hlist)) : ovl ();
 }
 
 DEFUN (run_history, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} run_history\n\
 @deftypefnx {} {} run_history @var{cmd_number}\n\
 @deftypefnx {} {} run_history @var{first} @var{last}\n\
 Run commands from the history list.\n\
@@ -709,21 +695,22 @@ run_history -1 -2\n\
  2\n\
  1\n\
 @end group\n\
 @end example\n\
 \n\
 @seealso{edit_history, history}\n\
 @end deftypefn")
 {
-  octave_value_list retval;
+  if (args.length () > 2)
+    print_usage ();
 
   do_run_history (args);
 
-  return retval;
+  return ovl ();
 }
 
 DEFUN (history_control, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{val} =} history_control ()\n\
 @deftypefnx {} {@var{old_val} =} history_control (@var{new_val})\n\
 Query or set the internal variable that specifies how commands are saved\n\
 to the history list.\n\
