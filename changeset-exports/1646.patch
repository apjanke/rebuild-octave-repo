# HG changeset patch
# User jwe
# Date 818934402 0
#      Thu Dec 14 09:46:42 1995 +0000
# Node ID 23ff3d50ab76a4f3407f0e475046bcc23e7353a7
# Parent  44ed237bdc1e1dc15499e21c057d239474b35548
[project @ 1995-12-14 09:44:52 by jwe]

diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -42,16 +42,17 @@ Software Foundation, Inc.
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
 #include <fcntl.h>
 
 #include <readline/history.h>
+#include <readline/tilde.h>
 
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "octave-hist.h"
 #include "octave.h"
 #include "pager.h"
@@ -59,46 +60,40 @@ Software Foundation, Inc.
 #include "statdefs.h"
 #include "unwind-prot.h"
 #include "user-prefs.h"
 #include "utils.h"
 
 // Nonzero means input is coming from temporary history file.
 int input_from_tmp_history_file = 0;
 
-// The number of lines to save in the history file.
-static int octave_hist_size = 1024;
-
-// The name of the history file.
-static char *octave_hist_file;
-
 // The number of hisory lines we read from the history file.
 static int history_lines_in_file = 0;
 
 // The number of history lines we've saved so far.
 static int history_lines_this_session = 0;
 
 // Get some default values, possibly reading them from the
 // environment.
 
-static int
+int
 default_history_size (void)
 {
   int size = 1024;
   char *env_size = getenv ("OCTAVE_HISTSIZE");
   if (env_size)
     {
       int val;
       if (sscanf (env_size, "%d", &val) == 1)
 	size = val > 0 ? val : 0;
     }
   return size;
 }
 
-static char *
+char *
 default_history_file (void)
 {
   char *file = 0;
 
   char *env_file = getenv ("OCTAVE_HISTFILE");
   if (env_file)
     {
       fstream f (env_file, (ios::in | ios::out));
@@ -115,29 +110,44 @@ default_history_file (void)
   return file;
 }
 
 // Prime the history list.
 
 void
 initialize_history (void)
 {
-  octave_hist_file = default_history_file ();
-  octave_hist_size = default_history_size ();
+  static char *file = 0;
+
+  if (file)
+    free (file);
 
-  read_history (octave_hist_file);
+  file = tilde_expand (user_pref.history_file);
+
+  read_history (file);
+
   using_history ();
+
   history_lines_in_file = where_history ();
 }
 
 void
 clean_up_history (void)
 {
-  stifle_history (octave_hist_size);
-  write_history (octave_hist_file);
+  static char *file = 0;
+
+  if (file)
+    free (file);
+
+  stifle_history (user_pref.history_size);
+
+  file = tilde_expand (user_pref.history_file);
+
+  if (user_pref.saving_history)
+    write_history (file);
 }
 
 void
 maybe_save_history (const char *s)
 {
   if (user_pref.saving_history && ! input_from_startup_file)
     {
       add_history (s);
@@ -161,23 +171,26 @@ do_history (int argc, char **argv)
   while (--argc > 0)
     {
       argv++;
 
       if (*argv[0] == '-' && strlen (*argv) == 2
 	  && ((*argv)[1] == 'r' || (*argv)[1] == 'w'
 	      || (*argv)[1] == 'a' || (*argv)[1] == 'n'))
 	{
-	  char *file;
+	  static char *file = 0;
 	  int result = 0;
 
+	  if (file)
+	    free (file);
+
 	  if (argc > 1)
-	    file = *(argv+1);
+	    file = tilde_expand (*(argv+1));
 	  else
-	    file = octave_hist_file;
+	    file = tilde_expand (user_pref.history_file);
 
 	  switch ((*argv)[1])
 	    {
 	    case 'a':		// Append `new' lines to file.
 	      {
 		if (history_lines_this_session)
 		  {
 		    if (history_lines_this_session < where_history ())
@@ -621,17 +634,17 @@ do_run_history (int argc, char **argv)
   delete [] name;
 }
 
 int
 current_history_number (void)
 {
   using_history ();
 
-  if (octave_hist_size > 0)
+  if (user_pref.history_size > 0)
     return history_base + where_history ();
   else
     return -1;
 
 }
 
 DEFUN_TEXT ("edit_history", Fedit_history, Sedit_history, 10,
   "edit_history [first] [last]\n\
diff --git a/src/oct-hist.h b/src/oct-hist.h
--- a/src/oct-hist.h
+++ b/src/oct-hist.h
@@ -19,16 +19,18 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_octave_hist_h)
 #define octave_octave_hist_h 1
 
+extern int default_history_size (void);
+extern char *default_history_file (void);
 extern void initialize_history (void);
 extern void clean_up_history (void);
 extern void maybe_save_history (const char*);
 extern void do_history (int, char**);
 extern void do_edit_history (int, char**);
 extern void do_run_history (int, char**);
 extern int current_history_number (void);
 
diff --git a/src/user-prefs.cc b/src/user-prefs.cc
--- a/src/user-prefs.cc
+++ b/src/user-prefs.cc
@@ -47,16 +47,17 @@ void
 init_user_prefs (void)
 {
   user_pref.automatic_replot = 0;
   user_pref.beep_on_error = 0;
   user_pref.define_all_return_values = 0;
   user_pref.do_fortran_indexing = 0;
   user_pref.empty_list_elements_ok = 0;
   user_pref.gnuplot_has_multiplot = 0;
+  user_pref.history_size = 0;
   user_pref.ignore_function_time_stamp = 0;
   user_pref.implicit_str_to_num_ok = 0;
   user_pref.ok_to_lose_imaginary_part = 0;
   user_pref.output_max_field_width = 0;
   user_pref.output_precision = 0;
   user_pref.page_screen_output = 0;
   user_pref.prefer_column_vectors = 0;
   user_pref.prefer_zero_one_indexing = 0;
@@ -80,16 +81,17 @@ init_user_prefs (void)
   user_pref.whitespace_in_literal_matrix = 0;
 
   user_pref.completion_append_char = '\0';
 
   user_pref.default_save_format = 0;
   user_pref.editor = 0;
   user_pref.exec_path = 0;
   user_pref.gnuplot_binary = 0;
+  user_pref.history_file = 0;
   user_pref.imagepath = 0;
   user_pref.info_file = 0;
   user_pref.info_prog = 0;
   user_pref.loadpath = 0;
   user_pref.pager_binary = 0;
   user_pref.ps1 = 0;
   user_pref.ps2 = 0;
   user_pref.ps4 = 0;
@@ -228,16 +230,37 @@ gnuplot_has_multiplot (void)
 {
   user_pref.gnuplot_has_multiplot =
     check_preference ("gnuplot_has_multiplot");
 
   return 0;
 }
 
 
+// How many lines of command history should we save?
+
+int
+history_size (void)
+{
+  double val;
+  if (builtin_real_scalar_variable ("history_size", val)
+      && ! xisnan (val))
+    {
+      int ival = NINT (val);
+      if (ival >= 0 && (double) ival == val)
+	{
+	  user_pref.history_size = ival;
+	  return 0;
+	}
+    }
+  gripe_invalid_value_specified ("history_size");
+  return -1;
+}
+
+
 // Should Octave always check to see if function files have changed
 // since they were last compiled?
 
 int
 ignore_function_time_stamp (void)
 {
   int pref = 0;
 
@@ -831,16 +854,36 @@ sv_gnuplot_binary (void)
       gripe_invalid_value_specified ("gnuplot_binary");
       status = -1;
     }
 
   return status;
 }
 
 int
+sv_history_file (void)
+{
+  int status = 0;
+
+  char *s = builtin_string_variable ("history_file");
+  if (s)
+    {
+      delete [] user_pref.history_file;
+      user_pref.history_file = s;
+    }
+  else
+    {
+      gripe_invalid_value_specified ("history_file");
+      status = -1;
+    }
+
+  return status;
+}
+
+int
 sv_imagepath (void)
 {
   int status = 0;
 
   char *s = builtin_string_variable ("IMAGEPATH");
   if (s)
     {
       delete [] user_pref.imagepath;
diff --git a/src/user-prefs.h b/src/user-prefs.h
--- a/src/user-prefs.h
+++ b/src/user-prefs.h
@@ -28,16 +28,17 @@ struct user_preferences
 {
   int automatic_replot;
   int beep_on_error;
   int define_all_return_values;
   int do_fortran_indexing;
   int echo_executing_commands;
   int empty_list_elements_ok;
   int gnuplot_has_multiplot;
+  int history_size;
   int ignore_function_time_stamp;
   int implicit_str_to_num_ok;
   int ok_to_lose_imaginary_part;
   int output_max_field_width;
   int output_precision;
   int page_screen_output;
   int prefer_column_vectors;
   int prefer_zero_one_indexing;
@@ -62,16 +63,17 @@ struct user_preferences
   int whitespace_in_literal_matrix;
 
   char completion_append_char;
 
   char *default_save_format;
   char *editor;
   char *exec_path;
   char *gnuplot_binary;
+  char *history_file;
   char *imagepath;
   char *info_file;
   char *info_prog;
   char *loadpath;
   char *pager_binary;
   char *ps1;
   char *ps2;
   char *ps4;
@@ -84,16 +86,17 @@ extern void init_user_prefs (void);
 
 extern int automatic_replot (void);
 extern int beep_on_error (void);
 extern int define_all_return_values (void);
 extern int do_fortran_indexing (void);
 extern int echo_executing_commands (void);
 extern int empty_list_elements_ok (void);
 extern int gnuplot_has_multiplot (void);
+extern int history_size (void);
 extern int ignore_function_time_stamp (void);
 extern int implicit_str_to_num_ok (void);
 extern int ok_to_lose_imaginary_part (void);
 extern int page_screen_output (void);
 extern int prefer_column_vectors (void);
 extern int prefer_zero_one_indexing (void);
 extern int print_answer_id_name (void);
 extern int print_empty_dimensions (void);
@@ -119,16 +122,17 @@ extern int set_output_precision (void);
 extern int set_save_precision (void);
 
 extern int sv_completion_append_char (void);
 
 extern int sv_default_save_format (void);
 extern int sv_editor (void);
 extern int sv_exec_path (void);
 extern int sv_gnuplot_binary (void);
+extern int sv_history_file (void);
 extern int sv_imagepath (void);
 extern int sv_info_file (void);
 extern int sv_info_prog (void);
 extern int sv_loadpath (void);
 extern int sv_pager_binary (void);
 extern int sv_ps1 (void);
 extern int sv_ps2 (void);
 extern int sv_ps4 (void);
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1733,16 +1733,24 @@ default_return_value");
 #else
   double with_multiplot = 0.0;
 #endif
 
   DEFVAR ("gnuplot_has_multiplot", SBV_gnuplot_has_multiplot,
 	  with_multiplot, 0, gnuplot_has_multiplot,
     "true if gnuplot supports multiplot, false otherwise");
 
+  DEFVAR ("history_file", SBV_history_file,
+	  default_history_file (), 0, sv_history_file,
+    "name of command history file");
+
+  DEFVAR ("history_size", SBV_history_size,
+	  default_history_size (), 0, history_size,
+    "number of commands to save in the history list");
+
   DEFCONST ("i", SBV_i, Complex (0.0, 1.0), 1, 0,
     "sqrt (-1)");
 
   DEFVAR ("ignore_function_time_stamp",
 	  SBV_ignore_function_time_stamp, "system", 0,
 	  ignore_function_time_stamp,
     "don't check to see if function files have changed since they were\n\
   last compiled.  Possible values are \"system\" and \"all\"");
