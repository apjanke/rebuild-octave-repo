# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1366182549 14400
#      Wed Apr 17 03:09:09 2013 -0400
# Node ID f3a63fdbd725244c2861d226d8a5b9733e1fcb8c
# Parent  7ca7e7d5eb916c4a4f805df3a037fc028661f0ed
finish botched changeset 7ca7e7d5eb91

diff --git a/libinterp/interpfcn/debug.cc b/libinterp/interpfcn/debug.cc
--- a/libinterp/interpfcn/debug.cc
+++ b/libinterp/interpfcn/debug.cc
@@ -284,17 +284,28 @@ bp_table::do_add_breakpoint (const std::
 
   if (dbg_fcn)
     {
       tree_statement_list *cmds = dbg_fcn->body ();
 
       std::string file = dbg_fcn->fcn_file_name ();
 
       if (cmds)
-        retval = cmds->add_breakpoint (file, line);
+        {
+          retval = cmds->add_breakpoint (file, line);
+
+          for (intmap_iterator p = retval.begin (); p != retval.end (); p++)
+            {
+              if (p->second != 0)
+                {
+                  bp_set.insert (fname);
+                  break;
+                }
+            }
+        }
     }
   else
     error ("add_breakpoint: unable to find the requested function\n");
 
   tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   return retval;
 }
diff --git a/libinterp/parse-tree/pt-stmt.cc b/libinterp/parse-tree/pt-stmt.cc
--- a/libinterp/parse-tree/pt-stmt.cc
+++ b/libinterp/parse-tree/pt-stmt.cc
@@ -197,31 +197,26 @@ tree_statement_list::add_breakpoint (con
                                      const bp_table::intmap& line)
 {
   bp_table::intmap retval;
 
   octave_idx_type len = line.size ();
 
   for (int i = 0; i < len; i++)
     {
-      const_intmap_iterator p = line.find (i);
+      bp_table::const_intmap_iterator p = line.find (i);
 
       if (p != line.end ())
         {
           int lineno = p->second;
 
           retval[i] = set_breakpoint (lineno);
 
-          if (retval[i] != 0)
-            {
-              bp_set.insert (fname);
-
-              if (! file.empty ())
-                octave_link::update_breakpoint (true, file, retval[i]);
-            }
+          if (retval[i] != 0 && ! file.empty ())
+            octave_link::update_breakpoint (true, file, retval[i]);
         }
     }
 
   return retval;
 }
 
 bp_table::intmap
 tree_statement_list::remove_all_breakpoints (const std::string& file)
