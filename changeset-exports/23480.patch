# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1494421468 -7200
#      Wed May 10 15:04:28 2017 +0200
# Node ID 0670624ea91b7ffe24bce5c1838cba72a9ed949d
# Parent  06bf3a0b08bfe8bc7005e441d74ce39ca35587af
* __ode15__.cc: Avoid deprecated function warnings.

diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -897,17 +897,17 @@ namespace octave
   ColumnVector
   ida_user_function (const ColumnVector& x, const ColumnVector& xdot,
                      double t, octave_function *ida_fc)
   {
     octave_value_list tmp;
 
     try
       {
-        tmp = feval (ida_fc, ovl (t, x, xdot), 1);
+        tmp = octave::feval (ida_fc, ovl (t, x, xdot), 1);
       }
     catch (octave::execution_exception& e)
       {
         err_user_supplied_eval (e, "__ode15__");
       }
 
     return tmp(0).vector_value ();
   }
@@ -915,17 +915,17 @@ namespace octave
   Matrix
   ida_dense_jac (const ColumnVector& x, const ColumnVector& xdot,
                  double t, double cj, octave_function *ida_jc)
   {
     octave_value_list tmp;
 
     try
       {
-        tmp = feval (ida_jc, ovl (t, x, xdot), 2);
+        tmp = octave::feval (ida_jc, ovl (t, x, xdot), 2);
       }
     catch (octave::execution_exception& e)
       {
         err_user_supplied_eval (e, "__ode15__");
       }
 
     return tmp(0).matrix_value () + cj * tmp(1).matrix_value ();
   }
@@ -933,17 +933,17 @@ namespace octave
   SparseMatrix
   ida_sparse_jac (const ColumnVector& x, const ColumnVector& xdot,
                   double t, double cj, octave_function *ida_jc)
   {
     octave_value_list tmp;
 
     try
       {
-        tmp = feval (ida_jc, ovl (t, x, xdot), 2);
+        tmp = octave::feval (ida_jc, ovl (t, x, xdot), 2);
       }
     catch (octave::execution_exception& e)
       {
         err_user_supplied_eval (e, "__ode15__");
       }
 
     return tmp(0).sparse_matrix_value () + cj * tmp(1).sparse_matrix_value ();
   }
