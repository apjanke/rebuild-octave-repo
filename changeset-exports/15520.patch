# HG changeset patch
# User Rik <rik@octave.org>
# Date 1350271102 25200
#      Sun Oct 14 20:18:22 2012 -0700
# Node ID bcace51598ed9debad282a154d66bbe4117aa63e
# Parent  f915996325b7abbfe1244d21d4b52d51007cc94a
Improve demo() to warn when an input function does not exist.

* demo.m: Check return code from test to see whether function
exists and issue a warning if it does not.

* test.m: Return -1 for second retval when grabdemo option given and function
does not exist.

diff --git a/scripts/testfun/demo.m b/scripts/testfun/demo.m
--- a/scripts/testfun/demo.m
+++ b/scripts/testfun/demo.m
@@ -96,17 +96,21 @@ function demo (name, n)
 
   if (nargin < 2)
     n = 0;
   elseif (ischar (n))
     n = str2double (n);
   endif
 
   [code, idx] = test (name, "grabdemo");
-  if (isempty (idx))
+
+  if (idx == -1)
+    warning ("no function %s found", name);
+    return;
+  elseif (isempty (idx))
     warning ("no demo available for %s", name);
     return;
   elseif (n >= length (idx))
     warning ("only %d demos available for %s", length (idx) - 1, name);
     return;
   endif
 
   if (n > 0)
diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -166,17 +166,17 @@ function [__ret1, __ret2, __ret3, __ret4
       __file = "";
     else
       __file = __file{1};
     endif
   endif
   if (isempty (__file))
     if (__grabdemo)
       __ret1 = "";
-      __ret2 = [];
+      __ret2 = -1;
     else
       if (exist (__name) == 3)
         fprintf (__fid, "%s%s source code with tests for dynamically linked function not found\n", __signal_empty, __name);
       else
         fprintf (__fid, "%s%s does not exist in path\n", __signal_empty, __name);
       endif
       fflush (__fid);
       if (nargout > 0)
