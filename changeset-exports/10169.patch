# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264056576 18000
#      Thu Jan 21 01:49:36 2010 -0500
# Node ID 06bd6e57f889697df6de6d90795466ae2bd63f28
# Parent  37150167a72a389f94aae1dac4e259a71ae36ad7
use rmdir module from gnulib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* bootstrap.conf (gnulib_modules): Include rmdir in the list.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include c-strcase in the list.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Include getopt-gnu in the list.
 
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -22,16 +22,17 @@ gnulib_modules="
   crypto/md5
   fnmatch
   getopt-gnu
   gettimeofday
   glob
   lstat
   mkdir
   mkfifo
+  rmdir
   stat
   strftime
   times
   round
 "
 
 # Additional xgettext options to use.  Use "\\\newline" to break lines.
 XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2010-01-21  John W. Eaton  <jwe@octave.org>
+
+	* lo-cutils.c (octave_rmdir): New function.
+	* lo-utils.h: Provide decl.
+	* file-ops.cc (file_ops::rmdir): Call octave_rmdir.
+	* Makefile.am (LIBOCTAVE_C_SOURCES): Remove rmdir.c from the list.
+	* rmdir.c: Delete.
+
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.am (LIBOCTAVE_C_SOURCES): Remove strcasecmp.c and
 	strncase.c from the list.
 	* strcasecmp.c, strncase.c: Delete.
 
 2010-01-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -459,17 +459,16 @@ LIBOCTAVE_C_SOURCES = \
   filemode.c \
   lo-cieee.c \
   lo-cutils.c \
   oct-getopt.c \
   randgamma.c \
   randmtzig.c \
   randpoisson.c \
   rename.c \
-  rmdir.c \
   strptime.c \
   tempnam.c \
   tempname.c
 
 LIBOCTAVE_SOURCES = $(LIBOCTAVE_CXX_SOURCES) $(BUILT_LIBOCTAVE_CXX_SOURCES) \
 	$(LIBOCTAVE_C_SOURCES)
 
 LIBOCT_READLINE_CXX_SOURCES = cmd-edit.cc cmd-hist.cc
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -286,27 +286,23 @@ file_ops::rmdir (const std::string& name
 
 int
 file_ops::rmdir (const std::string& name, std::string& msg)
 {
   msg = std::string ();
 
   int status = -1;
 
-#if defined (HAVE_RMDIR)
-  status = ::rmdir (name.c_str ());
+  status = octave_rmdir (name.c_str ());
 
   if (status < 0)
     {
       using namespace std;
       msg = ::strerror (errno);
     }
-#else
-  msg = NOT_SUPPORTED ("rmdir");
-#endif
 
   return status;
 }
 
 // And a version that works recursively.
 
 int
 file_ops::recursive_rmdir (const std::string& name)
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -87,16 +87,22 @@ gethostname (char *name, int namelen)
   name[namelen] = '\0';
 
   return 0;
 }
 
 #endif
 
 OCTAVE_API int
+octave_rmdir (const char *name)
+{
+  return rmdir (name);
+}
+
+OCTAVE_API int
 octave_strcasecmp (const char *s1, const char *s2)
 {
   return strcasecmp (s1, s2);
 }
 
 OCTAVE_API int
 octave_strncasecmp (const char *s1, const char *s2, size_t n)
 {
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -49,16 +49,18 @@ extern OCTAVE_API std::string octave_fge
 extern OCTAVE_API std::string octave_fgets (std::FILE *, bool& eof);
 extern OCTAVE_API std::string octave_fgetl (std::FILE *, bool& eof);
 
 extern "C" OCTAVE_API int octave_gethostname (char *, int);
 
 extern "C" OCTAVE_API void octave_qsort (void *base, size_t n, size_t size,
 			      int (*cmp) (const void *, const void *));
 
+extern "C" OCTAVE_API int octave_rmdir (const char *name);
+
 extern "C" OCTAVE_API char *oct_strptime (const char *buf, const char *format,
 			       struct tm *tm);
 
 extern "C" OCTINTERP_API int octave_strcasecmp (const char *s1, const char *s2);
 
 extern "C" OCTINTERP_API int octave_strncasecmp (const char *s1, const char *s2, size_t n);
 
 template <typename T>
diff --git a/liboctave/rmdir.c b/liboctave/rmdir.c
deleted file mode 100644
--- a/liboctave/rmdir.c
+++ /dev/null
@@ -1,95 +0,0 @@
-/* rmdir.c -- BSD compatible remove directory function for System V
-   Copyright (C) 1988, 1990 Free Software Foundation, Inc.
-
-   This program is free software; you can redistribute it and/or modify
-   it under the terms of the GNU General Public License as published by
-   the Free Software Foundation; either version 2 of the License, or
-   (at your option) any later version.
-
-   This program is distributed in the hope that it will be useful,
-   but WITHOUT ANY WARRANTY; without even the implied warranty of
-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-   GNU General Public License for more details.
-
-   You should have received a copy of the GNU General Public License
-   along with this program; if not, write to the Free Software
-   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-   02110-1301 USA.  */
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#ifndef HAVE_RMDIR
-
-#ifdef HAVE_SYS_TYPES_H
-#include <sys/types.h>
-#endif
-#include <sys/stat.h>
-
-#include <errno.h>
-#ifndef errno
-extern int errno;
-#endif
-
-#ifdef STAT_MACROS_BROKEN
-#undef S_ISDIR
-#endif
-
-#if !defined(S_ISDIR) && defined(S_IFDIR)
-#define S_ISDIR(m) (((m) & S_IFMT) == S_IFDIR)
-#endif
-
-#include "safe-stat.h"
-
-/* rmdir adapted from GNU tar.  */
-
-/* Remove directory DPATH.
-   Return 0 if successful, -1 if not.  */
-
-int
-rmdir (dpath)
-     char *dpath;
-{
-  int cpid, status;
-  struct stat statbuf;
-
-  if (SAFE_STAT (dpath, &statbuf) != 0)
-    return -1;			/* errno already set */
-
-  if (!S_ISDIR (statbuf.st_mode))
-    {
-      errno = ENOTDIR;
-      return -1;
-    }
-
-  cpid = fork ();
-  switch (cpid)
-    {
-    case -1:			/* cannot fork */
-      return -1;		/* errno already set */
-
-    case 0:			/* child process */
-      execl ("/bin/rmdir", "rmdir", dpath, (char *) 0);
-      _exit (1);
-
-    default:			/* parent process */
-
-      /* Wait for kid to finish.  */
-
-      while (wait (&status) != cpid)
-	/* Do nothing.  */ ;
-
-      if (status & 0xFFFF)
-	{
-
-	  /* /bin/rmdir failed.  */
-
-	  errno = EIO;
-	  return -1;
-	}
-      return 0;
-    }
-}
-
-#endif
