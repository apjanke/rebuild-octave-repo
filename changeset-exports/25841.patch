# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1535578416 25200
#      Wed Aug 29 14:33:36 2018 -0700
# Branch stable
# Node ID 0d4b88086f36b64a6bc9039d5b24017f509b9974
# Parent  7094f73d4ece266f912fd44392df38b6988f5869
doc: use "Octave Forge" spelling in a few more instances

* pkg.m, get_forge_pkg.m, list_forge_packages.m: Use "Octave Forge" spelling.

diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -337,17 +337,17 @@ function [local_packages, global_package
                  ["pkg: autoload is no longer supported.  Add a "...
                   "'pkg load ...' command to octaverc instead."]);
       case "-verbose"
         verbose = true;
         ## Send verbose output to pager immediately.  Change setting locally.
         page_output_immediately (true, "local");
       case "-forge"
         if (! __octave_config_info__ ("CURL_LIBS"))
-          error ("pkg: can't download from forge without the cURL library");
+          error ("pkg: can't download from Octave Forge without the cURL library");
         endif
         octave_forge = true;
       case "-local"
         global_install = false;
         if (! user_prefix)
           [prefix, archprefix] = default_prefix (global_install);
         endif
       case "-global"
@@ -585,17 +585,17 @@ function [local_packages, global_package
          installed_pkgs_lst = update_lst;
       endif
       for i = 1:numel (installed_pkgs_lst)
         installed_pkg_name = installed_pkgs_lst{i}.name;
         installed_pkg_version = installed_pkgs_lst{i}.version;
         try
           forge_pkg_version = get_forge_pkg (installed_pkg_name);
         catch
-          warning ("pkg: package %s not found on forge - skipping update\n",
+          warning ("pkg: package %s not found on Octave Forge - skipping update\n",
                    installed_pkg_name);
           forge_pkg_version = "0";
         end_try_catch
         if (compare_versions (forge_pkg_version, installed_pkg_version, ">"))
           feval (@pkg, "install", "-forge", installed_pkg_name);
         endif
       endfor
 
diff --git a/scripts/pkg/private/get_forge_pkg.m b/scripts/pkg/private/get_forge_pkg.m
--- a/scripts/pkg/private/get_forge_pkg.m
+++ b/scripts/pkg/private/get_forge_pkg.m
@@ -14,17 +14,17 @@
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {[@var{ver}, @var{url}] =} get_forge_pkg (@var{name})
-## Try to discover the current version of an OctaveForge package from the web,
+## Try to discover the current version of an Octave Forge package from the web,
 ## using a working internet connection and the urlread function.
 ## If two output arguments are requested, also return an address from which
 ## to download the file.
 ## @end deftypefn
 
 function [ver, url] = get_forge_pkg (name)
 
   ## Verify that name is valid.
diff --git a/scripts/pkg/private/list_forge_packages.m b/scripts/pkg/private/list_forge_packages.m
--- a/scripts/pkg/private/list_forge_packages.m
+++ b/scripts/pkg/private/list_forge_packages.m
@@ -28,17 +28,17 @@ function list = list_forge_packages ()
   if (! succ)
     error ("pkg: could not read URL, please verify internet connection");
   endif
 
   list = ostrsplit (list, " \n\t", true);
 
   if (nargout == 0)
     page_screen_output (false, "local");
-    puts ("OctaveForge provides these packages:\n");
+    puts ("Octave Forge provides these packages:\n");
     for i = 1:length (list)
       try
         ver = get_forge_pkg (list{i});
       catch
         ver = "unknown";
       end_try_catch
       printf ("  %s %s\n", list{i}, ver);
     endfor
