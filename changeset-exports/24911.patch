# HG changeset patch
# User Colin Macdonald <cbm@m.fsf.org>
# Date 1516767445 28800
#      Tue Jan 23 20:17:25 2018 -0800
# Branch stable
# Node ID 8d6f3941a118fa6d7f96518f5d5eec3464fcea62
# Parent  b98755ef7572364196ed7d73fac5a02d31c73496
Support single precision in sinint/cosint.

sinint.m: support single precision.
cosint.m: support single precision.

diff --git a/scripts/specfun/cosint.m b/scripts/specfun/cosint.m
--- a/scripts/specfun/cosint.m
+++ b/scripts/specfun/cosint.m
@@ -73,17 +73,18 @@
 function [y] = cosint (x)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   sz = size (x);
   x = x(:);
-  y = zeros (size (x));
+  y = zeros (size (x), class (x));
+  tol = eps (class (x));
 
   i_miss = true (length (x), 1);
 
   ## special values
   y(x == 0) = - Inf;
   y(x == Inf) = 0;
   y(x == - Inf) = 1i * pi;
 
@@ -112,17 +113,17 @@ function [y] = cosint (x)
   gma = 0.57721566490153286060651209008; # Euler gamma constant
   yy = gma + log (xx) + ssum;
   flag_sum = true (nnz (i_miss), 1);
   it = 1;
   maxit = 300;
   while ((any (flag_sum)) && (it < maxit));
     ssum .*= - xx .^ 2 * (2 * it) / ((2 * it + 2) ^ 2 * (2 * it + 1));
     yy(flag_sum) += ssum (flag_sum);
-    flag_sum = (abs (ssum) >= eps);
+    flag_sum = (abs (ssum) >= tol);
     it++;
   endwhile
 
   y(i_miss) = yy;
 
   y = reshape (y, sz);
 
 endfunction
@@ -135,16 +136,19 @@ endfunction
 %! A = cosint (x);
 %! B = [0.422980828774864996, 0.119629786008000328, 0.0736679120464254860; ...
 %!      0.213958001340379779, -0.190029749656643879, -0.0680572438932471262];
 %! assert (A, B, -5e-15);
 
 %!assert (cosint (0), - Inf)
 %!assert (cosint (inf), 0)
 %!assert (cosint (-inf), 1i * pi)
+%!assert (isnan (cosint (nan)))
+
+%!assert (class (cosint (single (1))), "single")
 
 ##tests against maple
 %!assert (cosint (1), 0.337403922900968135, -2*eps)
 %!assert (cosint (-1), 0.337403922900968135 + 3.14159265358979324*I, -2*eps)
 %!assert (cosint (pi), 0.0736679120464254860, -2*eps)
 %!assert (cosint (-pi), 0.0736679120464254860 + 3.14159265358979324*I, -2*eps)
 %!assert (cosint (300), -0.00333219991859211178, -2*eps)
 %!assert (cosint (1e4), -0.0000305519167244852127, -2*eps)
@@ -191,9 +195,11 @@ endfunction
 %! A = [ 2.03029639329172164 - 0.151907155175856884*I
 %!      1.61538963829107749 + 19.7257540553382650*I
 %!      1.61538963829107749 + 16.5841614017484717*I
 %!      -0.00514882514261049214
 %!      1246.11448604245441 + 1.57079632679489662*I
 %!      -8.63307471207423322 + 3.13159298695312800*I
 %!      0.0698222284673061493 - 3.11847446254772946*I ];
 %! B = cosint (x);
-%! assert (A, B, -6e-16)
+%! assert (A, B, -3*eps)
+%! B = cosint (single (x));
+%! assert (A, B, -3*eps ("single"))
diff --git a/scripts/specfun/sinint.m b/scripts/specfun/sinint.m
--- a/scripts/specfun/sinint.m
+++ b/scripts/specfun/sinint.m
@@ -52,17 +52,18 @@
 function [y] = sinint (x)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   sz = size (x);
   x = x(:);
-  y = zeros (size (x));
+  y = zeros (size (x), class (x));
+  tol = eps (class (x));
 
   i_miss = true (length (x), 1);
 
   ## Trivial values
   y(x == 0) = 0;
   y(x == Inf) = pi / 2;
   y(x == - Inf) = - pi / 2;
 
@@ -88,17 +89,17 @@ function [y] = sinint (x)
   ssum = xx; # First term of the series expansion
   yy = ssum;
   flag_sum = true (nnz (i_miss), 1);
   it = 0;
   maxit = 300;
   while ((any (flag_sum)) && (it < maxit));
     ssum .*= - xx .^ 2 * (2 * it + 1) / ((2 * it + 3) ^ 2 * (2 * it + 2));
     yy(flag_sum) += ssum (flag_sum);
-    flag_sum = (abs (ssum) >= eps);
+    flag_sum = (abs (ssum) >= tol);
     it++;
   endwhile
 
   y(i_miss) = yy;
 
   y = reshape (y, sz);
 
 endfunction
@@ -119,16 +120,19 @@ endfunction
 %! %B = double (sinint (y));
 %! B = [1.60541297680269, 1.84865252799947, 1.85193705198247e+00; ...
 %!      1.82104026914757, 1.54993124494467, 1.42468755128051e+00];
 %! assert (A, B, -5e-15);
 
 %!assert (sinint (0), 0)
 %!assert (sinint (inf), pi/2)
 %!assert (sinint (-inf), -pi/2)
+%!assert (isnan (sinint (nan)))
+
+%!assert (class (sinint (single (1))), "single")
 
 ##tests against maple
 %!assert (sinint (1), 0.9460830703671830149414, -2*eps)
 %!assert (sinint (-1), -0.9460830703671830149414, -2*eps)
 %!assert (sinint (pi), 1.851937051982466170361, -2*eps)
 %!assert (sinint (-pi), -1.851937051982466170361, -2*eps)
 %!assert (sinint (300), 1.5708810882137495193, -2*eps)
 %!assert (sinint (1e4), 1.5708915453859619157, -2*eps)
@@ -177,9 +181,11 @@ endfunction
 %! x = [1+2i; -2+5i; 100; 10i; -1e-4 + 1e-6*1i; -20-1i];
 %! A = [ 1.6782404878293681180 + 2.0396845546022061045*1i
 %!      -18.154174221650281533 + 1.6146414539230479060*1i
 %!       1.5622254668890562934
 %!       1246.1144901994233444*1i
 %!      -0.000099999999944461111128 + 0.99999999833338888972e-6*1i
 %!      -1.5386156269726011209 - 0.053969388020443786229*1i ];
 %! B = sinint (x);
-%! assert (A, B, -6e-16)
+%! assert (A, B, -3*eps)
+%! B = sinint (single (x));
+%! assert (A, B, -3*eps ("single"))
