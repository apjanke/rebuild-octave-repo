# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1508879631 14400
#      Tue Oct 24 17:13:51 2017 -0400
# Node ID ff9bd559799b396d856d76af68a543459f68fa95
# Parent  422814bf8b41f09f340c4c77f9253f7ac48c7856
pop up tooltip message for changing selected words in editor

* octave-qscintilla.h, octave-qscintilla.cc
(octave_qscintilla::m_selection_replacement): New data member.
(octave_qscintilla::set_word_selection): Also initialize
m_selection_replacement and hide tooltip when clearing word selection.
(octave_qscintilla::keyPressEvent): New function.  Handle replacement
of selected word.

diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -40,17 +40,20 @@ along with Octave; see the file COPYING.
 #include <Qsci/qscilexercpp.h>
 #include <Qsci/qscilexerbash.h>
 #include <Qsci/qscilexerperl.h>
 #include <Qsci/qscilexerbatch.h>
 #include <Qsci/qscilexerdiff.h>
 
 #include <Qsci/qscicommandset.h>
 
+#include <QKeySequence>
 #include <QShortcut>
+#include <QToolTip>
+#include <QVBoxLayout>
 
 // FIXME: hardwired marker numbers?
 #include "marker.h"
 
 #include "octave-qscintilla.h"
 #include "file-editor-tab.h"
 #include "shortcut-manager.h"
 #include "resource-manager.h"
@@ -93,17 +96,18 @@ is_end (const QString& candidate, const 
         }
     }
 
   return retval;
 }
 
 octave_qscintilla::octave_qscintilla (QWidget *p)
   : QsciScintilla (p), m_word_at_cursor (), m_selection (),
-    m_selection_line (-1), m_selection_col (-1), m_indicator_id (1)
+    m_selection_replacement (), m_selection_line (-1),
+    m_selection_col (-1), m_indicator_id (1)
 {
   connect (this, SIGNAL (textChanged (void)), this, SLOT (text_changed (void)));
 
   connect (this, SIGNAL (cursorPositionChanged (int, int)),
            this, SLOT (cursor_position_changed (int, int)));
 
   // clear scintilla edit shortcuts that are handled by the editor
   QsciCommandSet *cmd_set = standardCommands ();
@@ -561,17 +565,21 @@ octave_qscintilla::set_word_selection (c
 {
   m_selection = word;
 
   if (word.isEmpty ())
     {
       m_selection_line = -1;
       m_selection_col = -1;
 
+      m_selection_replacement = "";
+
       clear_selection_markers ();
+
+      QToolTip::hideText ();
     }
   else
     getCursorPosition (&m_selection_line, &m_selection_col);
 }
 
 void
 octave_qscintilla::show_selection_markers (int line, int col, int len)
 {
@@ -663,16 +671,124 @@ octave_qscintilla::cursor_position_chang
 void octave_qscintilla::focusInEvent (QFocusEvent *focusEvent)
 {
   emit status_update (isUndoAvailable (), isRedoAvailable ());
 
   QsciScintilla::focusInEvent (focusEvent);
 }
 
 void
+octave_qscintilla::keyPressEvent (QKeyEvent *key_event)
+{
+  if (m_selection.isEmpty ())
+    QsciScintilla::keyPressEvent (key_event);
+  else
+    {
+      if (key_event->key () == Qt::Key_Return
+          && key_event->modifiers () == Qt::ShiftModifier)
+        {
+          // get the resulting cursor position
+          // (required if click was beyond a line ending)
+          int line, col;
+          getCursorPosition (&line, &col);
+
+          // remember first visible line for restoring the view afterwards
+          int first_line = firstVisibleLine ();
+
+          // search for first occurrence of the detected word
+          bool find_result_available
+            = findFirst (m_selection,
+                         false,   // no regexp
+                         true,    // case sensitive
+                         true,    // whole words only
+                         false,   // do not wrap
+                         true,    // forward
+                         0, 0,    // from the beginning
+                         false
+#if defined (HAVE_QSCI_VERSION_2_6_0)
+                         , true
+#endif
+                         );
+
+          while (find_result_available)
+            {
+              replace (m_selection_replacement);
+
+              // FIXME: is this the right thing to do?  findNext doesn't
+              // work properly if the length of the replacement text is
+              // different from the original.
+
+              int new_line, new_col;
+              getCursorPosition (&new_line, &new_col);
+
+              find_result_available
+                = findFirst (m_selection,
+                             false,   // no regexp
+                             true,    // case sensitive
+                             true,    // whole words only
+                             false,   // do not wrap
+                             true,    // forward
+                             new_line, new_col,    // from new pos
+                             false
+#if defined (HAVE_QSCI_VERSION_2_6_0)
+                             , true
+#endif
+                             );
+            }
+
+          // restore the visible area of the file, the cursor position,
+          // and the selection
+          setFirstVisibleLine (first_line);
+          setCursorPosition (line, col);
+
+          // Clear the selection.
+          set_word_selection ();
+        }
+      else
+        {
+          // FIXME: End selection replacement if text is not valid as
+          // a word constituent (control characters, etc.).
+          // FIXME: Should backspace and delete remove the last
+          // character entered or end selection replacement?
+
+          m_selection_replacement += key_event->text ();
+
+          // Perform default action.
+
+          QsciScintilla::keyPressEvent (key_event);
+
+          getCursorPosition (&m_selection_line, &m_selection_col);
+
+          // Offer to replace other instances.
+
+          QKeySequence keyseq = Qt::SHIFT + Qt::Key_Return;
+
+          QString msg = (tr ("Press '%1' to replace all occurrences of '%2' with '%3'.")
+                         . arg (keyseq.toString ())
+                         . arg (m_selection)
+                         . arg (m_selection_replacement));
+
+          QPoint global_pos;
+          QPoint local_pos;
+
+          get_global_textcursor_pos (&global_pos, &local_pos);
+
+          QFontMetrics ttfm (QToolTip::font ());
+
+          // Try to avoid overlapping with the text completion dialog
+          // and the text that is currently being edited.
+
+          global_pos += QPoint (2*ttfm.maxWidth (), -3*ttfm.height ());
+
+          QToolTip::showText (global_pos, msg);
+        }
+    }
+}
+
+void
 octave_qscintilla::auto_close (int auto_endif, int linenr,
                                const QString& line, QString& first_word)
 {
   // Insert and "end" for an "if" etc., if needed.
   // (Use of "while" allows "return" to skip the rest.
   // It may be clearer to use "if" and "goto",
   // but that violates the coding standards.)
 
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
--- a/libgui/src/m-editor/octave-qscintilla.h
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -22,18 +22,20 @@ along with Octave; see the file COPYING.
 
 // Author: Torsten <ttl@justmail.de>
 
 #if ! defined (octave_octave_qscintilla_h)
 #define octave_octave_qscintilla_h 1
 
 #include <Qsci/qsciscintilla.h>
 
+#include <QContextMenuEvent>
+#include <QKeyEvent>
+#include <QLabel>
 #include <QMenu>
-#include <QContextMenuEvent>
 
 class octave_qscintilla : public QsciScintilla
 {
   Q_OBJECT
 
 public:
 
   octave_qscintilla (QWidget *p);
@@ -91,22 +93,25 @@ private slots:
 
   void text_changed (void);
   void cursor_position_changed (int, int);
 
 protected:
 
   void focusInEvent (QFocusEvent *focusEvent);
 
+  void keyPressEvent (QKeyEvent *e);
+
 private:
 
   void auto_close (int auto_endif, int l,
                    const QString& line, QString& first_word);
 
   QString m_word_at_cursor;
 
   QString m_selection;
+  QString m_selection_replacement;
   int m_selection_line;
   int m_selection_col;
   int m_indicator_id;
 };
 
 #endif
