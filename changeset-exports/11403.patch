# HG changeset patch
# User Judd Storrs <jstorrs@gmail.com>
# Date 1293007786 18000
#      Wed Dec 22 03:49:46 2010 -0500
# Node ID b8b08b1ac21f84e83c281a24fb898d9eefa53bcd
# Parent  a9a3ee461b8336f59bc13076c52029c46e4799be
Add missing operator functions to doc/interpreter.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2010-12-22  Judd Storrs <jstorrs@gmail.com>
+
+	* interpreter/expr.txi: Insert operator function docstrings.
+	* interpreter/oop.txi: Remove conflicting anchors for operator
+	functions. Add cindex entries for overloaded operators. Add
+	overloads to opindex.
+	* interpreter/numbers.txi: Fix colon opindex.
+
 2010-12-19  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/func.txi, interpreter/sparse.txi: Remove documentation
 	on deprecated function dispatch.
 
 2010-12-19  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Update mk_undocumented_list target to use
diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -43,16 +43,17 @@ combinations of these with various opera
 * Operator Precedence::         
 @end menu
 
 @node Index Expressions
 @section Index Expressions
 
 @opindex (
 @opindex )
+@opindex :
 
 An @dfn{index expression} allows you to reference or extract selected
 elements of a matrix or vector.
 
 Indices may be scalars, vectors, ranges, or the special operator
 @samp{:}, which may be used to select entire rows or columns.
 
 Vectors are indexed using a single index expression.  Matrices may be
@@ -555,16 +556,60 @@ and not
 @end example
 
 @noindent
 Although this is inconsistent with the normal behavior of Octave's
 lexer, which usually prefers to break the input into tokens by
 preferring the longest possible match at any given point, it is more
 useful in this case.
 
+@opindex '
+@DOCSTRING(ctranspose)
+
+@opindex .\
+@DOCSTRING(ldivide)
+
+@opindex -
+@DOCSTRING(minus)
+
+@opindex \
+@DOCSTRING(mldivide)
+
+@opindex **
+@opindex ^
+@DOCSTRING(mpower)
+
+@opindex /
+@DOCSTRING(mrdivide)
+
+@opindex *
+@DOCSTRING(mtimes)
+
+@opindex +
+@DOCSTRING(plus)
+
+@opindex .**
+@opindex .^
+@DOCSTRING(power)
+
+@opindex ./
+@DOCSTRING(rdivide)
+
+@opindex .*
+@DOCSTRING(times)
+
+@opindex .'
+@DOCSTRING(transpose)
+
+@opindex -
+@DOCSTRING(uminus)
+
+@opindex +
+@DOCSTRING(uplus)
+
 @node Comparison Ops
 @section Comparison Operators
 @cindex comparison expressions
 @cindex expressions, comparison
 @cindex relational operators
 @cindex operators, relational
 @cindex less than operator
 @cindex greater than operator
@@ -634,20 +679,39 @@ iff
 This is consistent with the ordering used by @dfn{max}, @dfn{min} and
 @dfn{sort}, but is not consistent with @sc{matlab}, which only compares the real
 parts.
 
 String comparisons may also be performed with the @code{strcmp}
 function, not with the comparison operators listed above.
 @xref{Strings}.
 
+@opindex ==
+@DOCSTRING(eq)
+
+@opindex >=
+@DOCSTRING(ge)
+
+@opindex >
+@DOCSTRING(gt)
+
 @DOCSTRING(isequal)
 
 @DOCSTRING(isequalwithequalnans)
 
+@opindex <=
+@DOCSTRING(le)
+
+@opindex <
+@DOCSTRING(lt)
+
+@opindex !=
+@opindex ~=
+@DOCSTRING(ne)
+
 @node Boolean Expressions
 @section Boolean Expressions
 @cindex expressions, boolean
 @cindex boolean expressions
 @cindex expressions, logical
 @cindex logical expressions
 @cindex operators, boolean
 @cindex boolean operators
@@ -732,16 +796,26 @@ a & b++
 
 @noindent
 the value of the variable @var{b} is incremented even if the variable
 @var{a} is zero.
 
 This behavior is necessary for the boolean operators to work as
 described for matrix-valued operands.
 
+@opindex &
+@DOCSTRING(and)
+
+@opindex ~
+@opindex !
+@DOCSTRING(not)
+
+@opindex |
+@DOCSTRING(or)
+
 @node Short-circuit Boolean Operators
 @subsection Short-circuit Boolean Operators
 @cindex short-circuit evaluation
 
 Combined with the implicit conversion to scalar values in @code{if} and
 @code{while} conditions, Octave's element-by-element boolean operators
 are often sufficient for performing most logical operations.  However,
 it is sometimes desirable to stop evaluating a boolean expression as
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -358,17 +358,17 @@ When Octave parses a matrix expression, 
 list to determine whether they are all constants.  If they are, it
 replaces the list with a single matrix constant.
 
 @node Ranges
 @section Ranges
 @cindex range expressions
 @cindex expression, range
 
-@opindex colon
+@opindex :
 
 A @dfn{range} is a convenient way to write a row vector with evenly
 spaced elements.  A range expression is defined by the value of the first
 element in the range, an optional value for the increment between
 elements, and a maximum value which the elements of the range will not
 exceed.  The base, increment, and limit are separated by colons (the
 @samp{:} character) and may contain any arithmetic expressions and
 function calls.  If the increment is omitted, it is assumed to be 1.
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -455,25 +455,77 @@ in the use of methods of other classes w
 @example
 @group
 @EXAMPLEFILE(@polynomial/double.m)
 @end group
 @end example
 
 @node Operator Overloading
 @subsection Operator Overloading
+@cindex addition
+@cindex and operator
+@cindex arithmetic operators
+@cindex boolean expressions
+@cindex boolean operators
+@cindex comparison expressions
+@cindex complex-conjugate transpose
+@cindex division
+@cindex equality operator
+@cindex equality, tests for
+@cindex exponentiation
+@cindex expressions, boolean
+@cindex expressions, comparison
+@cindex expressions, logical
+@cindex greater than operator
+@cindex Hermitian operator
+@cindex less than operator
+@cindex logical expressions
+@cindex logical operators
+@cindex matrix multiplication
+@cindex multiplication
+@cindex negation
+@cindex not operator
+@cindex operators, arithmetic
+@cindex operators, boolean
+@cindex operators, logical
+@cindex operators, relational
+@cindex or operator
+@cindex quotient
+@cindex relational operators
+@cindex subtraction
+@cindex tests for equality
+@cindex transpose
+@cindex transpose, complex-conjugate
+@cindex unary minus
 
 @float Table,tab:overload_ops
-
-@anchor{doc-rdivide} @anchor{doc-plus} @anchor{doc-minus} @anchor{doc-uminus}
-@anchor{doc-uplus} @anchor{doc-times} @anchor{doc-mtimes} @anchor{doc-mrdivide}
-@anchor{doc-ldivide} @anchor{doc-mldivide} @anchor{doc-power}
-@anchor{doc-mpower} @anchor{doc-lt} @anchor{doc-le} @anchor{doc-gt}
-@anchor{doc-ge} @anchor{doc-eq} @anchor{doc-ne} @anchor{doc-and}
-@anchor{doc-or} @anchor{doc-not} @anchor{doc-ctranspose} @anchor{doc-transpose}
+@opindex +
+@opindex -
+@opindex .*
+@opindex *
+@opindex ./
+@opindex /
+@opindex .\
+@opindex \
+@opindex .^
+@opindex ^
+@opindex <
+@opindex <=
+@opindex >
+@opindex >=
+@opindex ==
+@opindex !=
+@opindex ~=
+@opindex &
+@opindex |
+@opindex !
+@opindex '
+@opindex .'
+@opindex :
+@opindex <
 
 @tex
 \vskip 6pt
 {\hbox to \hsize {\hfill\vbox{\offinterlineskip \tabskip=0pt 
 \halign{
 \vrule height2.0ex depth1.ex width 0.6pt #\tabskip=0.3em &
 # \hfil & \vrule # & # \hfil & \vrule # & # \hfil & # \vrule 
 width 0.6pt \tabskip=0pt\cr
