# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1496815702 14400
#      Wed Jun 07 02:08:22 2017 -0400
# Node ID 654661539e2068c5f985b1587196207386edc091
# Parent  500505e9279abdd6d36ccdc5c4fadf94a73f44de
* max.cc: Fix typo in test.

diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -1107,16 +1107,18 @@ namespace octave
     OCTAVE_SAFE_CALL (gtk_manager::unload_all_toolkits, ());
 
     OCTAVE_SAFE_CALL (close_files, ());
 
     OCTAVE_SAFE_CALL (cleanup_tmp_files, ());
 
     OCTAVE_SAFE_CALL (symbol_table::cleanup, ());
 
+    symbol_table::cleanup_instance ();
+
     OCTAVE_SAFE_CALL (sysdep_cleanup, ());
 
     OCTAVE_SAFE_CALL (octave_finalize_hdf5, ());
 
     OCTAVE_SAFE_CALL (octave::flush_stdout, ());
 
     // Don't call singleton_cleanup_list::cleanup until we have the
     // problems with registering/unregistering types worked out.  For
diff --git a/libinterp/corefcn/max.cc b/libinterp/corefcn/max.cc
--- a/libinterp/corefcn/max.cc
+++ b/libinterp/corefcn/max.cc
@@ -862,17 +862,17 @@ the first index of the maximum value(s).
 %! assert (max (x, y), sparse ([4 3 3 4]));
 %! assert (max (x, 3), sparse ([3 3 3 4]));
 %! assert (max (2, x), sparse ([2 2 3 4]));
 %! assert (max (x, 2.1i), sparse ([2.1i 2.1i 3 4]));
 
 ## Test for bug #40743
 %!assert <40743> (max (zeros (1,0), ones (1,1)), zeros (1,0))
 %!assert <40743> (max (sparse (zeros (1,0)), sparse (ones (1,1))),
-                  sparse (zeros (1,0)))
+%!                sparse (zeros (1,0)))
 
 %!error max ()
 %!error max (1, 2, 3, 4)
 %!error <DIM must be a valid dimension> max ([1 2; 3 4], [], -3)
 %!warning <second argument is ignored> max ([1 2 3 4], 2, 2);
 %!error <wrong type argument 'cell'> max ({1 2 3 4})
 %!error <cannot compute max \(cell, scalar\)> max ({1, 2, 3}, 2)
 
