# HG changeset patch
# User Massimiliano Fasi <massimiliano.fasi@gmail.com>
# Date 1411143845 -7200
#      Fri Sep 19 18:24:05 2014 +0200
# Node ID 0f79fa9b3a8cd1dadc24e30bc84477a7f43accf2
# Parent  8ee14c64ab5fca22acf99890aafb9c2873c46d11
fmindbnd.m: Check input range is low to high (bug #43219).

* fminbnd.m: Validate that lower bound of input range is smaller than upper
bound.  Add BIST tests for new input validation.

diff --git a/scripts/optimization/fminbnd.m b/scripts/optimization/fminbnd.m
--- a/scripts/optimization/fminbnd.m
+++ b/scripts/optimization/fminbnd.m
@@ -65,16 +65,21 @@ function [x, fval, info, output] = fminb
     x = optimset ("MaxIter", Inf, "MaxFunEvals", Inf, "TolX", 1e-8,
                   "OutputFcn", [], "FunValCheck", "off");
     return;
   endif
 
   if (nargin < 2 || nargin > 4)
     print_usage ();
   endif
+  
+  if (xmin > xmax)
+    error ("Octave:invalid-input-arg",
+           "fminbnd: the lower bound cannot be greater than the upper one");
+  endif
 
   if (ischar (fun))
     fun = str2func (fun, "global");
   endif
 
   displ = optimget (options, "Display", "notify");
   funvalchk = strcmpi (optimget (options, "FunValCheck", "off"), "on");
   outfcn = optimget (options, "OutputFcn");
@@ -279,9 +284,12 @@ endfunction
 
 %!shared opt0
 %! opt0 = optimset ("tolx", 0);
 %!assert (fminbnd (@cos, pi/2, 3*pi/2, opt0), pi, 10*sqrt (eps))
 %!assert (fminbnd (@(x) (x - 1e-3)^4, -1, 1, opt0), 1e-3, 10e-3*sqrt (eps))
 %!assert (fminbnd (@(x) abs (x-1e7), 0, 1e10, opt0), 1e7, 10e7*sqrt (eps))
 %!assert (fminbnd (@(x) x^2 + sin (2*pi*x), 0.4, 1, opt0), fzero (@(x) 2*x + 2*pi*cos (2*pi*x), [0.4, 1], opt0), sqrt (eps))
 %!assert (fminbnd (@(x) x > 0.3, 0, 1) < 0.3) 
+%!assert (fminbnd (@(x) sin (x), 0, 0), 0, eps) 
 
+%!error <lower bound cannot be greater> fminbnd (@(x) sin (x), 0, -pi)
+
