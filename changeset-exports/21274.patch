# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1455652055 18000
#      Tue Feb 16 14:47:35 2016 -0500
# Node ID bc536eff5eab63488caf0476f9fa1a9f8e3aa093
# Parent  cbced1c0991678a321a129d236cfd477290604de
eliminate ostream operator << from schur classes

* liboctave/numeric/schur.h, liboctave/numeric/schur.cc:
Delete operator <<.

diff --git a/liboctave/numeric/schur.cc b/liboctave/numeric/schur.cc
--- a/liboctave/numeric/schur.cc
+++ b/liboctave/numeric/schur.cc
@@ -19,18 +19,16 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #  include <config.h>
 #endif
 
-#include <iostream>
-
 #include "CMatrix.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 #include "fCMatrix.h"
 #include "fMatrix.h"
 #include "lo-error.h"
 #include "schur.h"
 
@@ -531,43 +529,17 @@ rsf2csf<FloatComplexMatrix, FloatMatrix>
 
       F77_XFCN (crsf2csf, CRSF2CSF, (n, s.fortran_vec (),
                                      u.fortran_vec (), c, sx));
     }
 
   return schur<FloatComplexMatrix> (s, u);
 }
 
-template <typename T>
-std::ostream&
-operator << (std::ostream& os, const schur<T>& a)
-{
-  os << a.schur_matrix () << "\n";
-  os << a.unitary_matrix () << "\n";
-
-  return os;
-}
-
 // Instantiations we need.
 
 template class schur<ComplexMatrix>;
 
 template class schur<FloatComplexMatrix>;
 
 template class schur<FloatMatrix>;
 
 template class schur<Matrix>;
-
-template <>
-std::ostream&
-operator << (std::ostream& os, const schur<Matrix>& a);
-
-template <>
-std::ostream&
-operator << (std::ostream& os, const schur<ComplexMatrix>& a);
-
-template <>
-std::ostream&
-operator << (std::ostream& os, const schur<FloatMatrix>& a);
-
-template <>
-std::ostream&
-operator << (std::ostream& os, const schur<FloatComplexMatrix>& a);
diff --git a/liboctave/numeric/schur.h b/liboctave/numeric/schur.h
--- a/liboctave/numeric/schur.h
+++ b/liboctave/numeric/schur.h
@@ -20,17 +20,16 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_schur_h)
 #define octave_schur_h 1
 
 #include "octave-config.h"
 
-#include <iosfwd>
 #include <string>
 
 #include "dMatrix.h"
 #include "CMatrix.h"
 #include "fMatrix.h"
 #include "fCMatrix.h"
 
 template <typename T> class schur;
@@ -93,13 +92,9 @@ private:
   octave_idx_type
   init (const T& a, const std::string& ord, bool calc_unitary);
 };
 
 template <typename RT, typename AT>
 extern schur<RT>
 rsf2csf (const AT& s, const AT& u);
 
-template <typename T>
-extern std::ostream&
-operator << (std::ostream& os, const schur<T>& a);
-
 #endif
