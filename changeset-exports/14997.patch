# HG changeset patch
# User Jacob Dawid <jacob.dawid@gmail.com>
# Date 1342817110 14400
#      Fri Jul 20 16:45:10 2012 -0400
# Branch gui
# Node ID 2d6766e93f7b93dc556dbfdac65a2700490757f6
# Parent  c2afeeb35f4d38c6bc5f36ca432e681087fe9109
The GUI now remembers when categories in the workspace view have been closed. Bug #36885

* workspace-view: Added code to save and load the state of collapsing categories.

diff --git a/gui/src/workspace-view.cc b/gui/src/workspace-view.cc
--- a/gui/src/workspace-view.cc
+++ b/gui/src/workspace-view.cc
@@ -11,16 +11,17 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include "workspace-view.h"
+#include "resource-manager.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QPushButton>
 
 workspace_view::workspace_view (QWidget * parent) : QDockWidget
   (parent)
 {
   setObjectName ("WorkspaceView");
@@ -44,20 +45,20 @@ workspace_view::workspace_view (QWidget 
   QVBoxLayout *layout = new QVBoxLayout ();
   layout->addWidget (_workspace_tree_view);
   layout->setMargin (2);
 
   // Set the empty widget to have our layout.
   widget ()->setLayout (layout);
 
   // Initialize collapse/expand state of the workspace subcategories.
-  _explicit_collapse.local      = false;
-  _explicit_collapse.global     = false;
-  _explicit_collapse.persistent = false;
-  _explicit_collapse.hidden     = false;
+  _explicit_collapse.local      = resource_manager::instance ()->get_settings ()->value ("workspaceview/local_collapsed", false).toBool ();
+  _explicit_collapse.global     = resource_manager::instance ()->get_settings ()->value ("workspaceview/global_collapsed", false).toBool ();;
+  _explicit_collapse.persistent = resource_manager::instance ()->get_settings ()->value ("workspaceview/persistent_collapsed", false).toBool ();;
+  _explicit_collapse.hidden     = resource_manager::instance ()->get_settings ()->value ("workspaceview/hidden_collapsed", false).toBool ();;
 
   // Connect signals and slots.
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT(handle_visibility_changed (bool)));
 
   connect (_workspace_model, SIGNAL (model_changed ()),
            this, SLOT (model_changed ()));
 
@@ -66,16 +67,24 @@ workspace_view::workspace_view (QWidget 
   connect (_workspace_tree_view, SIGNAL (expanded (QModelIndex)),
            this, SLOT (expand_requested (QModelIndex)));
 
   connect (_workspace_tree_view, SIGNAL (doubleClicked (QModelIndex)),
            this, SLOT (item_double_clicked (QModelIndex)));
 
 }
 
+workspace_view::~workspace_view ()
+{
+  resource_manager::instance ()->get_settings ()->setValue("workspaceview/local_collapsed", _explicit_collapse.local);
+  resource_manager::instance ()->get_settings ()->setValue("workspaceview/global_collapsed", _explicit_collapse.global);
+  resource_manager::instance ()->get_settings ()->setValue("workspaceview/persistent_collapsed", _explicit_collapse.persistent);
+  resource_manager::instance ()->get_settings ()->setValue("workspaceview/hidden_collapsed", _explicit_collapse.hidden);
+}
+
 void
 workspace_view::handle_visibility_changed (bool visible)
 {
   if (visible)
     emit active_changed (true);
 }
 
 void
diff --git a/gui/src/workspace-view.h b/gui/src/workspace-view.h
--- a/gui/src/workspace-view.h
+++ b/gui/src/workspace-view.h
@@ -24,16 +24,17 @@
 #include "octave-link.h"
 #include "workspace-model.h"
 
 class workspace_view : public QDockWidget
 {
   Q_OBJECT
 public:
   workspace_view (QWidget * parent = 0);
+  ~workspace_view ();
 
 public slots:
   void handle_visibility_changed (bool visible);
   void model_changed ();
 
 signals:
   /** Custom signal that tells if a user has clicke away that dock widget. */
   void active_changed (bool active);
