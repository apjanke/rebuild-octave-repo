# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1540580433 14400
#      Fri Oct 26 15:00:33 2018 -0400
# Node ID 7eeb89b0d2d58b809aa3656a94cb3519c6129fa0
# Parent  811e094ba676a553ba7a35049cbf83611f528c72
make char function work for function handles (bug #53118)

* ov-fcn-handle.h, ov-fcn-handle.cc
(octave_fcn_handle::convert_to_str_internal): New function.

diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -335,16 +335,24 @@ octave_fcn_handle::set_fcn (const std::s
           if (! fcn.is_function ())
             error ("function handle points to non-existent function");
         }
     }
 
   return true;
 }
 
+octave_value
+octave_fcn_handle::convert_to_str_internal (bool, bool, char type) const
+{
+  std::ostringstream buf;
+  print_raw (buf, true);
+  return octave_value (buf.str (), type);
+}
+
 bool
 octave_fcn_handle::save_ascii (std::ostream& os)
 {
   if (nm == anonymous)
     {
       if (fcn.is_undefined ())
         return false;
 
diff --git a/libinterp/octave-value/ov-fcn-handle.h b/libinterp/octave-value/ov-fcn-handle.h
--- a/libinterp/octave-value/ov-fcn-handle.h
+++ b/libinterp/octave-value/ov-fcn-handle.h
@@ -126,16 +126,18 @@ public:
                      const octave_value& ov_fcn)
   {
     has_overloads = true;
     overloads[dispatch_type] = ov_fcn;
   }
 
   bool is_equal_to (const octave_fcn_handle&) const;
 
+  octave_value convert_to_str_internal (bool pad, bool force, char type) const;
+
   bool save_ascii (std::ostream& os);
 
   bool load_ascii (std::istream& is);
 
   bool save_binary (std::ostream& os, bool& save_as_floats);
 
   bool load_binary (std::istream& is, bool swap,
                     octave::mach_info::float_format fmt);
