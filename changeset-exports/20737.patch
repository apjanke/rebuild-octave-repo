# HG changeset patch
# User Carnë Draug <carandraug@octave.org>
# Date 1448294843 0
#      Mon Nov 23 16:07:23 2015 +0000
# Node ID 1a329319975badb9b60e10541c93075408067ab9
# Parent  842765b159ed8498714d049f5595825380beb39c
im2double: allow floating point indexed images with any value.

* scripts/image/im2double.m: technically, an indexed image of a floating
  point class must have positive real integers only.  And it also shouldn't
  be of class logical.  However, Matlab does not enforce any of this so
  we can't either.  Also add tests.

diff --git a/scripts/image/im2double.m b/scripts/image/im2double.m
--- a/scripts/image/im2double.m
+++ b/scripts/image/im2double.m
@@ -36,19 +36,20 @@
 ## @item single
 ## Values are cast to double.
 ##
 ## @item double
 ## Returns the same image.
 ##
 ## @end table
 ##
-## If the second argument is the string @qcode{"indexed"}, then values are
-## cast to double precision, and a +1 offset is applied if input is
-## an integer class.
+## If @var{img} is an indexed image, then the second argument should be
+## the string @qcode{"indexed"}.  If so, then @var{img} must either be
+## of floating point class, or unsigned integer class  and it will simply
+## be cast to double.  If it is an integer class, a +1 offset is applied.
 ##
 ## @seealso{double}
 ## @end deftypefn
 
 ## Author: Søren Hauberg <soren@hauberg.org>
 ## Author: Carnë Draug <carandraug@octave.org>
 
 function img = im2double (img, im_type)
@@ -65,21 +66,24 @@ function img = im2double (img, im_type)
     endswitch
 
   ## indexed images
   elseif (nargin () == 2)
     if (! strcmpi (im_type, "indexed"))
       error ("im2double: second input argument must be the string \"indexed\"");
     elseif (any (isa (img, {"uint8", "uint16"})))
       img = double (img) + 1;
-    elseif (isfloat (img) && isindex (img))
+    elseif (isfloat (img) || isbool (img))
       img = double (img);
     else
+      ## Technically, it could also be of logical class and we do not
+      ## enforce positive integers for floating for Matlab compatibility.
+      ## Still, no need to tell that to the user.
       error (["im2double: if IMG is indexed, then it must be positive " ...
-              "integer floating points or unsigned integer class"]);
+              "integer floating points, or unsigned integer class"]);
     endif
 
   else
     print_usage ();
   endif
 endfunction
 
 %!assert (im2double ([1 2 3]), [1 2 3])
@@ -109,13 +113,18 @@ endfunction
 
 %!test
 %! test_im2double_nd ("double", 0, 1);
 %! test_im2double_nd ("single", 0, 1);
 %! test_im2double_nd ("uint8", 0, 255);
 %! test_im2double_nd ("uint16", 0, 6535);
 %! test_im2double_nd ("int16", -32768, 32767);
 
-%!error <positive integer floating> im2double (single ([0 1 2]), "indexed");
+## Test lack of input check for Matlab compatibility
+%!assert (im2double ([0 1 2], "indexed"), [0 1 2])
+%!assert (im2double ([0 -1 -2], "indexed"), [0 -1 -2])
+%!assert (im2double ([0 -1.5 -2], "indexed"), [0 -1.5 -2])
+%!assert (im2double ([0 -1.5 -2i], "indexed"), [0 -1.5 -2i])
+%!assert (im2double ([false true], "indexed"), [0 1])
+
 %!error <unsigned integer class> im2double (int16 ([17 8]), "indexed");
 %!error <unsigned integer class> im2double (int16 ([-7 8]), "indexed");
-%!error <unsigned integer class> im2double ([false true], "indexed");
 %!error <must be the string "indexed"> im2double ([1 2 3], "non-indexed");
