# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1377891819 14400
#      Fri Aug 30 15:43:39 2013 -0400
# Node ID afc3d47f77044b89b10d661647a8bb56ec547d57
# Parent  cf5d41cc3695483edb872972a3918170d2346eca
Update windows GUI terminal handling

* libgui/src/octave-gui.cc
  (octave_start_gui): set  TERM environment variable to 'cygwin' in windows if no term is set.

* libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
  (translateKey): deocde delete key before non special keys using moveright \b, use \e[H for home, \e[F for end, decode esc key.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -91,23 +91,25 @@ protected:
 private:
   QWinTerminalImpl* q;
 };
 
 //////////////////////////////////////////////////////////////////////////////
 
 static QString translateKey (QKeyEvent *ev)
 {
+  QString esc = "\x1b";
   QString s;
 
-  if (!ev->text ().isEmpty ())
+  if (ev->key () == Qt::Key_Delete)
+    s = esc + "[C\b";
+  else if (!ev->text ().isEmpty ())
     s = ev->text ();
   else
     {
-      QString esc = "\x1b";
 
       switch (ev->key ())
         {
         case Qt::Key_Up:
           s = esc + "[A";
           break;
 
         case Qt::Key_Down:
@@ -118,39 +120,39 @@ static QString translateKey (QKeyEvent *
           s = esc + "[C";
           break;
 
         case Qt::Key_Left:
           s = esc + "[D";
           break;
 
         case Qt::Key_Home:
-          s = esc + "[1~";
+          s = esc + "[H";
           break;
 
         case Qt::Key_End:
-          s = esc + "[4~";
+          s = esc + "[F";
           break;
 
         case Qt::Key_Insert:
           s = esc + "[2~";
           break;
 
-        case Qt::Key_Delete:
-          s = esc + "[3~";
-          break;
-
         case Qt::Key_PageUp:
           s = esc + "[5~";
           break;
 
         case Qt::Key_PageDown:
           s = esc + "[6~";
           break;
 
+        case Qt::Key_Escape:
+          s = esc;
+          break;
+
         default:
           break;
         }
     }
 
   return s;
 }
 
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -118,16 +118,21 @@ octave_start_gui (int argc, char *argv[]
           // If we were started from a launcher, TERM might not be
           // defined, but we provide a terminal with xterm
           // capabilities.
 
           std::string term = octave_env::getenv ("TERM");
 
           if (term.empty ())
             octave_env::putenv ("TERM", "xterm");
+#else
+          std::string term = octave_env::getenv ("TERM");
+
+          if (term.empty ())
+            octave_env::putenv ("TERM", "cygwin");
 #endif
 
           // create main window, read settings, and show window
           main_window w;
           w.read_settings ();  // get widget settings and window layout
           w.focus_command_window ();
           w.connect_visibility_changed (); // connect signals for changes in
                                            // visibility not before w is shown
