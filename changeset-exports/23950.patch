# HG changeset patch
# User Rik <rik@octave.org>
# Date 1503812338 25200
#      Sat Aug 26 22:38:58 2017 -0700
# Node ID 2aa0de22f98a5fca61e0d91dbabcbf59364b4b50
# Parent  58435a400d4eee7c8cdb8020ae9b632c61d464b0
dos.m, unix.m: Rewrite to always return valid outputs for status and text (bug #51862).

* dos.m: Recode to initialize output variables status and text before
continuing with function.  Rewrite BIST tests to match new output values.

* unix.m: Recode to initialize output variables status and text before
continuing with function.  Rewrite BIST tests to match new output values.

diff --git a/scripts/miscellaneous/dos.m b/scripts/miscellaneous/dos.m
--- a/scripts/miscellaneous/dos.m
+++ b/scripts/miscellaneous/dos.m
@@ -34,19 +34,23 @@
 
 ## Author: octave-forge ???
 ## Adapted by: jwe
 
 function [status, text] = dos (command, echo_arg)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
-  elseif (isunix ())
-    status = text = [];
-  else
+  endif
+
+  status = 1;
+  text = "";
+
+  ## FIXME: Should this be ispc ()?  There may be an issue with MinGW
+  if (! isunix ())
     [status, text] = system (command);
     if (nargin > 1 || nargout == 0)
       printf ("%s\n", text);
     endif
   endif
 
 endfunction
 
@@ -56,14 +60,14 @@ endfunction
 %! [status, output] = dos (cmd);
 %!
 %! if (ispc () && ! isunix ())
 %!   [status, output] = dos (cmd);
 %!   assert (status, 0);
 %!   assert (ischar (output));
 %!   assert (! isempty (output));
 %! else
-%!   assert (status, []);
-%!   assert (output, []);
+%!   assert (status, 1);
+%!   assert (output, "");
 %! endif
 
 %!error dos ()
 %!error dos (1, 2, 3)
diff --git a/scripts/miscellaneous/unix.m b/scripts/miscellaneous/unix.m
--- a/scripts/miscellaneous/unix.m
+++ b/scripts/miscellaneous/unix.m
@@ -34,17 +34,22 @@
 
 ## Author: octave-forge ???
 ## Adapted by: jwe
 
 function [status, text] = unix (command, echo_arg)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
-  elseif (isunix ())
+  endif
+
+  status = 1;
+  text = "";
+
+  if (isunix ())
     [status, text] = system (command);
     if (nargin > 1 || nargout == 0)
       printf ("%s\n", text);
     endif
   endif
 
 endfunction
 
@@ -53,14 +58,14 @@ endfunction
 %! cmd = ls_command ();
 %! [status, output] = unix (cmd);
 %!
 %! if (isunix ())
 %!   assert (status, 0);
 %!   assert (ischar (output));
 %!   assert (! isempty (output));
 %! else
-%!   assert (status, []);
-%!   assert (output, []);
+%!   assert (status, 1);
+%!   assert (output, "");
 %! endif
 
 %!error unix ()
 %!error unix (1, 2, 3)
