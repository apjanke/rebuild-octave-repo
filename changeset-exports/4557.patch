# HG changeset patch
# User jwe
# Date 1067356579 0
#      Tue Oct 28 15:56:19 2003 +0000
# Node ID dd92abda6569b6a4f73c9b83c5b1036c5d962214
# Parent  773a21e4fce8a52f909100cd36c71802741668ab
[project @ 2003-10-28 15:56:19 by jwe]

diff --git a/liboctave/mx-inlines.cc b/liboctave/mx-inlines.cc
--- a/liboctave/mx-inlines.cc
+++ b/liboctave/mx-inlines.cc
@@ -378,27 +378,37 @@ OP_DUP_FCN (conj, mx_inline_conj_dup, Co
      break; \
    } 
 
 #define MX_ND_ALL_ANY(EVAL_EXPR) \
  \
   boolNDArray retval; \
  \
   dim_vector dv = dims (); \
- \
+ /* Check to see if we have a empty matrix: [] */ \
+  if (dv.length () == 2 && dv (0) == 0 && dv (1) == 0) \
+    { \
+      dim_vector dv_temp (1,1); \
+      retval.resize (dv_temp,false); \
+      return retval; \
+    } \
   if (dim == -1)/* We need to find first non-singleton dim */ \
     { \
-      for (int i = 0; i < dv.length (); i++) \
-	{ \
-          if (dv (i) > 1) \
-	    { \
-	      dim = i; \
-              break; \
-	    } \
-	} \
+      /* Be sure to return a scalar if we have a vector */ \
+      if (dv.length () == 2 && dv (0) == 1 && dv (1) >= 1) \
+        dim = 1; \
+      else \
+        for (int i = 0; i < dv.length (); i++) \
+	  { \
+            if (dv (i) > 1) \
+	      { \
+	        dim = i; \
+                break; \
+	      } \
+	  } \
       if (dim == -1) \
         { \
 	  (*current_liboctave_error_handler) \
 	    ("all dimensions are singleton"); \
           return retval; \
 	} \
     } \
  /*  Length of Dimension */\
