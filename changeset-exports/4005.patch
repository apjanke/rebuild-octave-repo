# HG changeset patch
# User jwe
# Date 1027630876 0
#      Thu Jul 25 21:01:16 2002 +0000
# Node ID fc000ebb19df6b9923deb77ffa0d4db5335b1ffd
# Parent  ca854fb51a881e89628a1d564643e3c45bed670b
[project @ 2002-07-25 21:01:16 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2002-07-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov.cc (silent_functions, Vsilent_functions): Move here.
+	(octave_value::print_with_name): Don't print anything if we are
+	evaluating a function and Vsilent_functions is true.
+
+	* pt-stmt.cc: From here.
+	(symbols_of_pt_stmt): Delete.
+	(tree_statement_list::eval): Don't bother with Vsilent_functions here.
+
 2002-07-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (OPT_HANDLERS): New targets.
 	(doc-files): New target.
 	(gendoc.cc): Depend on doc-files, not $(DOC_FILES).
 
 	* DLD-FUNCTIONS/daspk.cc, DLD-FUNCTIONS/dasrt.cc,
 	DLD-FUNCTIONS/dassl.cc, DLD-FUNCTIONS/fsolve.cc,
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -54,24 +54,29 @@ Software Foundation, 59 Temple Place - S
 #include "ov-mapper.h"
 #include "ov-usr-fcn.h"
 #include "ov-typeinfo.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "pager.h"
+#include "parse.h"
 #include "pr-output.h"
 #include "utils.h"
 #include "variables.h"
 
 // We are likely to have a lot of octave_value objects to allocate, so
 // make the grow_size large.
 DEFINE_OCTAVE_ALLOCATOR2(octave_value, 1024);
 
+// If TRUE, turn off printing of results in functions (as if a
+// semicolon has been appended to each statement).
+static bool Vsilent_functions;
+
 // If TRUE, allow assignments like
 //
 //   octave> A(1) = 3; A(2) = 5
 //
 // for A already defined and a matrix type.
 bool Vdo_fortran_indexing;
 
 // Should we allow things like:
@@ -937,25 +942,29 @@ octave_value::complex_vector_value (bool
       std::string tn = type_name ();
       gripe_invalid_conversion (tn.c_str (), "complex vector");
     }
 
   return retval;
 }
 
 void
-octave_value::print_with_name (std::ostream& output_buf, const std::string& name,
+octave_value::print_with_name (std::ostream& output_buf,
+			       const std::string& name, 
 			       bool print_padding) const
 {
-  bool pad_after = print_name_tag (output_buf, name);
+  if (! (evaluating_function_body && Vsilent_functions))
+    {
+      bool pad_after = print_name_tag (output_buf, name);
 
-  print (output_buf);
+      print (output_buf);
 
-  if (print_padding && pad_after)
-    newline (output_buf);
+      if (print_padding && pad_after)
+	newline (output_buf);
+    }
 }
 
 static void
 gripe_indexed_assignment (const std::string& tn1, const std::string& tn2)
 {
   error ("assignment of `%s' to indexed `%s' not implemented",
 	 tn2.c_str (), tn1.c_str ());
 }
@@ -1603,16 +1612,24 @@ resize_on_range_error (void)
   Vresize_on_range_error = check_preference ("resize_on_range_error");
 
   liboctave_rre_flag = Vresize_on_range_error;
 
   return 0;
 }
 
 static int
+silent_functions (void)
+{
+  Vsilent_functions = check_preference ("silent_functions");
+
+  return 0;
+}
+
+static int
 struct_levels_to_print (void)
 {
   double val;
   if (builtin_real_scalar_variable ("struct_levels_to_print", val)
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival == val)
@@ -1716,16 +1733,37 @@ endfor\n\
 @noindent\n\
 (for @code{a} previously undefined) result in the variable @code{a}\n\
 being resized to be just large enough to hold the new value.  New\n\
 elements that have not been given a value are set to zero.  If the value\n\
 of @code{resize_on_range_error} is 0, an error message is printed and\n\
 control is returned to the top level.  The default value is 1.\n\
 @end defvr");
 
+  DEFVAR (silent_functions, 0.0, silent_functions,
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} silent_functions\n\
+If the value of @code{silent_functions} is nonzero, internal output\n\
+from a function is suppressed.  Otherwise, the results of expressions\n\
+within a function body that are not terminated with a semicolon will\n\
+have their values printed.  The default value is 0.\n\
+\n\
+For example, if the function\n\
+\n\
+@example\n\
+function f ()\n\
+  2 + 2\n\
+endfunction\n\
+@end example\n\
+\n\
+@noindent\n\
+is executed, Octave will either print @samp{ans = 4} or nothing\n\
+depending on the value of @code{silent_functions}.\n\
+@end defvr");
+
   DEFVAR (struct_levels_to_print, 2.0, struct_levels_to_print,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} struct_levels_to_print\n\
 You can tell Octave how many structure levels to display by setting the\n\
 built-in variable @code{struct_levels_to_print}.  The default value is 2.\n\
 @end defvr");
 
   DEFVAR (warn_divide_by_zero, 1.0, warn_divide_by_zero,
diff --git a/src/pt-stmt.cc b/src/pt-stmt.cc
--- a/src/pt-stmt.cc
+++ b/src/pt-stmt.cc
@@ -43,20 +43,16 @@ Software Foundation, 59 Temple Place - S
 #include "pt-jump.h"
 #include "pt-pr-code.h"
 #include "pt-stmt.h"
 #include "pt-walk.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 
-// If TRUE, turn off printing of results in functions (as if a
-// semicolon has been appended to each statement).
-static bool Vsilent_functions;
-
 // Pointer to the current statement being executed.
 tree_statement *curr_statement = 0;
 
 // A list of commands to be executed.
 
 tree_statement::~tree_statement (void)
 {
   delete cmd;
@@ -155,20 +151,17 @@ tree_statement_list::eval (bool silent, 
     return retval;
 
   for (Pix p = first (); p != 0; next (p))
     {
       tree_statement *elt = this->operator () (p);
 
       if (elt)
 	{
-	  bool silent_flag =
-	    silent ? true : (function_body ? Vsilent_functions : false);
-
-	  retval = elt->eval (silent_flag, nargout, function_body);
+	  retval = elt->eval (silent, nargout, function_body);
 
 	  if (error_state)
 	    break;
 
 	  if (tree_break_command::breaking
 	      || tree_continue_command::continuing)
 	    break;
 
@@ -225,46 +218,13 @@ tree_statement_list::list_breakpoints (v
 }
 
 void
 tree_statement_list::accept (tree_walker& tw)
 {
   tw.visit_statement_list (*this);
 }
 
-static int
-silent_functions (void)
-{
-  Vsilent_functions = check_preference ("silent_functions");
-
-  return 0;
-}
-
-void
-symbols_of_pt_stmt (void)
-{
-  DEFVAR (silent_functions, 0.0, silent_functions,
-    "-*- texinfo -*-\n\
-@defvr {Built-in Variable} silent_functions\n\
-If the value of @code{silent_functions} is nonzero, internal output\n\
-from a function is suppressed.  Otherwise, the results of expressions\n\
-within a function body that are not terminated with a semicolon will\n\
-have their values printed.  The default value is 0.\n\
-\n\
-For example, if the function\n\
-\n\
-@example\n\
-function f ()\n\
-  2 + 2\n\
-endfunction\n\
-@end example\n\
-\n\
-@noindent\n\
-is executed, Octave will either print @samp{ans = 4} or nothing\n\
-depending on the value of @code{silent_functions}.\n\
-@end defvr");
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
