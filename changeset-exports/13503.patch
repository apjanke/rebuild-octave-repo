# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1310920284 -7200
#      Sun Jul 17 18:31:24 2011 +0200
# Node ID 5ab40ef3d24165aed65879a600fa2078775e0568
# Parent  751bbbcfd6e367240df0ac7b6d2463049d81485f
Merged diff from Torsten.

diff --git a/gui/src/FileEditorMdiSubWindow.cpp b/gui/src/FileEditorMdiSubWindow.cpp
--- a/gui/src/FileEditorMdiSubWindow.cpp
+++ b/gui/src/FileEditorMdiSubWindow.cpp
@@ -49,38 +49,40 @@ void FileEditorMdiSubWindow::loadFile(QS
     QTextStream in(&file);
     QApplication::setOverrideCursor(Qt::WaitCursor);
     m_editor->setText(in.readAll());
     QApplication::restoreOverrideCursor();
 
     m_fileName = fileName;
     setWindowTitle(fileName);
     m_statusBar->showMessage(tr("File loaded."), 2000);
+    m_editor->setModified(false);
 }
 
 void FileEditorMdiSubWindow::newFile() {
     if(checkFileModified("Open New File")) {
         return;  // something went wrong while saving the old file
     }
     m_fileName = "<unnamed>";
     setWindowTitle(m_fileName);
-    //m_simpleEditor->setPlainText("");
+    m_editor->setText("");
+    m_editor->setModified(false);
 }
 
 int FileEditorMdiSubWindow::checkFileModified(QString msg) {
-    if(m_modified) {
+    if(m_editor->isModified()) {
         int decision
                 = QMessageBox::question(this,
                                         msg,
                                         "Do you want to save the current file?",
                                         QMessageBox::Yes, QMessageBox::No);
 
         if(decision == QMessageBox::Yes) {
             saveFile();
-            if(m_modified) {
+            if(m_editor->isModified()) {
                 // If the user attempted to save the file, but it's still
                 // modified, then probably something went wrong, so return error
                 return(1);
             }
         }
     }
     return(0);
 }
@@ -153,18 +155,38 @@ void FileEditorMdiSubWindow::registerMod
 }
 
 void FileEditorMdiSubWindow::construct() {
     QStyle *style = QApplication::style();
     setWidget(new QWidget());
     m_toolBar = new QToolBar(this);
     m_statusBar = new QStatusBar(this);
     m_editor = new QsciScintilla(this);
-    m_editor->setMarginLineNumbers(QsciScintilla::TextMargin, true);
-    m_editor->setMarginWidth(QsciScintilla::TextMargin, "xxxx");
+
+// Not available in the Debian repos yet!
+/*
+    m_lexer = new QsciLexerOctave(m_editor);
+    m_lexer->setDefaultFont(QFont("Monospace",9));
+    m_lexer->setAutoIndentStyle(QsciScintilla::AiMaintain ||
+                                QsciScintilla::AiOpening  ||
+                                QsciScintilla::AiClosing);
+    m_editor->setLexer(m_lexer);
+*/
+
+    m_editor->setMarginType(1,QsciScintilla::TextMargin);
+    m_editor->setMarginType(2,QsciScintilla::SymbolMargin);
+    m_editor->setFolding(QsciScintilla::BoxedTreeFoldStyle,2);
+    m_editor->setMarginLineNumbers(1, true);
+    m_editor->setMarginWidth(1, "99999");
+
+    m_editor->setBraceMatching(QsciScintilla::SloppyBraceMatch);
+    m_editor->setAutoIndent(true);
+    m_editor->setIndentationWidth(2);
+    m_editor->setIndentationsUseTabs(false);
+    m_editor->setAutoCompletionThreshold(2);
 
     QAction *newAction = new QAction(style->standardIcon(QStyle::SP_FileIcon),
         "", m_toolBar);
     QAction *saveAction = new QAction(style->standardIcon(QStyle::SP_DriveHDIcon),
         "", m_toolBar);
     QAction *saveActionAs = new QAction(style->standardIcon(QStyle::SP_DriveFDIcon),
         "", m_toolBar);
     QAction *undoAction = new QAction(style->standardIcon(QStyle::SP_ArrowLeft),
diff --git a/gui/src/FileEditorMdiSubWindow.h b/gui/src/FileEditorMdiSubWindow.h
--- a/gui/src/FileEditorMdiSubWindow.h
+++ b/gui/src/FileEditorMdiSubWindow.h
@@ -18,16 +18,19 @@
 
 #ifndef FILEEDITORMDISUBWINDOW_H
 #define FILEEDITORMDISUBWINDOW_H
 
 #include <QMdiSubWindow>
 #include <QToolBar>
 #include <QStatusBar>
 #include <Qsci/qsciscintilla.h>
+// Not available in the Debian repos yet!
+// #include <Qsci/qscilexeroctave.h>
+#include <Qsci/qsciapis.h>
 
 class FileEditorMdiSubWindow : public QMdiSubWindow {
     Q_OBJECT
 public:
     FileEditorMdiSubWindow(QWidget *parent = 0);
     ~FileEditorMdiSubWindow();
     void loadFile(QString fileName);
 
