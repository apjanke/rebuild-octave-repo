# HG changeset patch
# User jwe
# Date 1196142706 0
#      Tue Nov 27 05:51:46 2007 +0000
# Node ID 12a12ef1f1bc00204def0582d13f197f186eb460
# Parent  cd6ceb8cbf095baf68c8c10734e7a897542937d3
[project @ 2007-11-27 05:51:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-11-27  John W. Eaton  <jwe@octave.org>
+
+	* pt-idx.cc (tree_index_expression::lvalue): Treat object == []
+	the same as undefined.
+
 2007-11-26  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (DO_DOUBLE_CONV): Always use long.
 
 	* oct-stream.cc (do_write): Call float_value and double_value on
 	octave_int<T> objects instead of relying on conversion operators.
 
 	* ls-mat5.cc (read_mat5_binary_element, OCTAVE_MAT5_INTEGER_READ): 
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -508,46 +508,52 @@ tree_index_expression::lvalue (void)
 				  {
 				    octave_value val = xidx(j);
 
 				    nel *= val.numel ();
 				  }
 
 				retval.numel (nel);
 			      }
-			    else if (first_retval_object.is_defined ())
+			    else if (first_retval_object.is_defined ()
+				     && ! (first_retval_object.is_real_matrix ()
+					   && first_retval_object.is_zero_by_zero ()))
 			      {
 				octave_value_list tmp_list
 				  = first_retval_object.subsref (ttype, idx, 1);
 
 				if (! error_state)
 				  {
 				    octave_value val = tmp_list(0);
 
 				    retval.numel (val.numel ());
 				  }
 			      }
 			    else
 			      retval.numel (1);
 			  }
 			else
 			  {
-			    if (first_retval_object.is_defined ())
+			    if (first_retval_object.is_defined ()
+				&& ! (first_retval_object.is_real_matrix ()
+				      && first_retval_object.is_zero_by_zero ()))
 			      retval.numel (first_retval_object.numel ());
 			    else
 			      retval.numel (1);
 			  }
 		      }
 		    else
 		      {
 			octave_value tobj = first_retval_object;
 
 			if (! have_new_struct_field)
 			  {
-			    if (i > 0 && first_retval_object.is_defined ())
+			    if (i > 0 && first_retval_object.is_defined ()
+				&& ! (first_retval_object.is_real_matrix ()
+				      && first_retval_object.is_zero_by_zero ()))
 			      {
 				std::string ttype = type.substr (0, i);
 
 				char c = ttype[ttype.length()-1];
 
 				if (! (c == '(' || c == '{'))
 				  {
 				    octave_value_list tmp_list
