# HG changeset patch
# User jwe
# Date 1163699522 0
#      Thu Nov 16 17:52:02 2006 +0000
# Node ID d3c599afc45538eee8ebb5925765807a631d49ad
# Parent  dae08571782ef11688770f70da2c8a050b2278da
[project @ 2006-11-16 17:52:02 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-16  John W. Eaton  <jwe@octave.org>
+
+	* data.cc (Fresize): Fix doc string.
+
 2006-11-15  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__gnuplot_raw__.l (write_data, write_inline_data):
 	New functions.
 	(save_in_tmp_file): Use write_data.
 	(gnuplot::send_inline_data, gnuplot_do_send_inline_data):
 	New functions.
 	(F__gnuplot_send_inline_data__, F__gnuplot_save_data__):
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2343,21 +2343,27 @@ The @code{linspace} function always retu
 
 // FIXME -- should accept dimensions as separate args for N-d
 // arrays as well as 1-d and 2-d arrays.
 
 DEFUN (resize, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} resize (@var{x}, @var{m})\n\
 @deftypefnx {Built-in Function} {} resize (@var{x}, @var{m}, @var{n})\n\
-Resize @var{x} to be dimension @var{m}-by-@var{n} where @var{m}\n\
-and @var{n} are scalar. If @var{n} is not supplied, then resize @var{x}\n\
-to be dimension @var{m}-by-@var{m} if @var{m} is scalar, or if\n\
-@var{m} is a vector, then the values of this vector respresent the\n\
-dimensions of the resized matrix.\n\
+Destructively resize @var{x}.\n\
+\n\
+@strong{Values in @var{x} are not preserved as they are with\n\
+@code{reshape}}.\n\
+\n\
+If only @var{m} is supplied and it is a scalar, the dimension of the\n\
+result is @var{m}-by-@var{m}.  If @var{m} is a vector, then the\n\
+dimensions of the result are given by the elements of @var{m}.\n\
+If both @var{m} and @var{n} are scalars, then the dimensions of\n\
+the result are @var{m}-by-@var{n}.\n\
+@seealso{reshape}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
 
   if (nargin == 2)
     {
       Array<double> vec = args(1).vector_value ();
