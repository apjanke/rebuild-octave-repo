# HG changeset patch
# User jwe
# Date 1139851445 0
#      Mon Feb 13 17:24:05 2006 +0000
# Node ID e92411b7eb21a584d4adde363490f2eeeb01546f
# Parent  44c59293407749c7dc059387d8751513ccc761ac
[project @ 2006-02-13 17:21:31 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2006-02-13  John W. Eaton  <jwe@octave.org>
+
+	* kpse.cc (kpse_path_iterator::operator =): Declare as private
+	function but don't define to prevent attempts to use assignment
+	operator.
+
 2006-02-10  John W. Eaton  <jwe@octave.org>
 
 	* mx-inlines.cc (MX_ND_REDUCTION): Store in cummulative
 	product of all dimensions in CP_SZ.
 
 2006-02-09  John W. Eaton  <jwe@octave.org>
 
 	* mx-inlines.cc (MX_ND_CUMULATIVE_OP): Store in cummulative
diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -468,16 +468,19 @@ private:
       while (kpse_is_env_sep (path[b]) && b < len)
 	b++;
 
       if (b >= len)
 	b = e = NPOS;
       else
 	set_end ();
     }
+
+  // No assignment.
+  kpse_path_iterator& operator = (const kpse_path_iterator&);
 };
 
 /* Here's the simple one, when a program just wants a value.  */
 
 static std::string
 kpse_var_value (const std::string& var)
 {
   std::string ret;
