# HG changeset patch
# User jwe
# Date 1163518402 0
#      Tue Nov 14 15:33:22 2006 +0000
# Node ID b3c425131211134d7aea27b129e4b30ed0ce2925
# Parent  4d90ee4061ef977fd97c96032d5da43d1c4d0697
[project @ 2006-11-14 15:33:22 by jwe]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -3600,16 +3600,32 @@ operator * (const ComplexMatrix& m, cons
 
 ComplexMatrix
 operator * (const Matrix& m, const ComplexMatrix& a)
 {
   ComplexMatrix tmp (m);
   return tmp * a;
 }
 
+/* Simple Dot Product, Matrix-Vector and Matrix-Matrix Unit tests
+%!assert([1+i 2+i 3+i] * [ 4+i ; 5+i ; 6+i], 29+21i, 1e-14)
+%!assert([1+i 2+i ; 3+i 4+i ] * [5+i ; 6+i], [15 + 14i ; 37 + 18i], 1e-14)
+%!assert([1+i 2+i ; 3+i 4+i ] * [5+i 6+i ; 7+i 8+i], [17 + 15i 20 + 17i; 41 + 19i 48 + 21i], 1e-14)
+*/
+
+/* Test some simple identities
+%!shared M, cv, rv
+%! M = randn(10,10)+i*rand(10,10);
+%! cv = randn(10,1)+i*rand(10,1);
+%! rv = randn(1,10)+i*rand(1,10);
+%!assert([M*cv,M*cv],M*[cv,cv],1e-14)
+%!assert([rv*M;rv*M],[rv;rv]*M,1e-14)
+%!assert(2*rv*cv,[rv,rv]*[cv;cv],1e-14)
+*/
+
 ComplexMatrix
 operator * (const ComplexMatrix& m, const ComplexMatrix& a)
 {
   ComplexMatrix retval;
 
   octave_idx_type nr = m.rows ();
   octave_idx_type nc = m.cols ();
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-14  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
+
+	* CMatrix.cc, dMatrix.cc: New tests.
+
 2006-11-13  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* Array-d.cc, dDiagMatrix.h: Sprinkle with OCTAVE_API as needed.
 
 2006-11-11  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in ($(OPTS_INC), mx-ops.h):
 	Use $(simple-move-if-change-rule) here.
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -2975,16 +2975,33 @@ Sylvester (const Matrix& a, const Matrix
       retval = -ua*cx*ub.transpose ();
     }
 
   return retval;
 }
 
 // matrix by matrix -> matrix operations
 
+/* Simple Dot Product, Matrix-Vector and Matrix-Matrix Unit tests
+%!assert([1 2 3] * [ 4 ; 5 ; 6], 32, 1e-14)
+%!assert([1 2 ; 3 4 ] * [5 ; 6], [17 ; 39 ], 1e-14)
+%!assert([1 2 ; 3 4 ] * [5 6 ; 7 8], [19 22; 43 50], 1e-14)
+*/
+
+/* Test some simple identities
+%!shared M, cv, rv
+%! M = randn(10,10);
+%! cv = randn(10,1);
+%! rv = randn(1,10);
+%!assert([M*cv,M*cv],M*[cv,cv],1e-14)
+%!assert([rv*M;rv*M],[rv;rv]*M,1e-14)
+%!assert(2*rv*cv,[rv,rv]*[cv;cv],1e-14)
+*/
+
+
 Matrix
 operator * (const Matrix& m, const Matrix& a)
 {
   Matrix retval;
 
   octave_idx_type nr = m.rows ();
   octave_idx_type nc = m.cols ();
 
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-14  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
+
+	* fntests.m: Include liboctave in the list of directories to test.
+
 2006-08-25  John W. Eaton  <jwe@octave.org>
 
 	* test_io.m (testls): Allow for small variance in loaded values
 	for text data formats.  Use persistent local variables instead of
 	resetting rand seed.
 
 2006-08-22  David Bateman  <dbateman@free.fr>
 
diff --git a/test/fntests.m b/test/fntests.m
--- a/test/fntests.m
+++ b/test/fntests.m
@@ -18,17 +18,18 @@ topsrcdir = canonicalize_file_name (full
 if (strcmp (currdir, srcdir))
   testdirs = {srcdir};
 else
   testdirs = {currdir, srcdir};
 endif
 
 src_tree = canonicalize_file_name (fullfile (topsrcdir, "src"));
 script_tree = canonicalize_file_name (fullfile (topsrcdir, "scripts"));
-fundirs = {src_tree, script_tree};
+liboctave_tree = canonicalize_file_name (fullfile (topsrcdir, "liboctave"));
+fundirs = {src_tree, liboctave_tree, script_tree};
 
 function print_test_file_name (nm)
   filler = repmat (".", 1, 55-length (nm));
   printf ("  %s %s", nm, filler);
 endfunction
 
 function print_pass_fail (n, p)
   if (n > 0)
