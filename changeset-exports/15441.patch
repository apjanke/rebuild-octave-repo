# HG changeset patch
# User Rik <rik@octave.org>
# Date 1348585882 25200
#      Tue Sep 25 08:11:22 2012 -0700
# Node ID e5a07d7aafcc769b95d513f3b4548e8c5ad0bebb
# Parent  1db706430c965cc4add7b15f3df8b7e38450e8bd
legend.m: Remove unused warning variable and associated code.

* legend.m: Remove unused warning variable and associated code.

diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -352,17 +352,16 @@ function [hlegend2, hobjects2, hplot2, t
       endfor
 
       if (! have_data)
         warning ("legend: plot data is empty; setting key labels has no effect");
       endif
     endif
 
     if (strcmp (textpos, "default"))
-      warned = false;
       k = nkids;
       for i = 1 : nargs
         arg = varargin{i};
         if (ischar (arg))
           typ = get (kids(k), "type");
           while (k > 0
                  && ! (strcmp (typ, "line") || strcmp (typ, "surface")
                        || strcmp (typ, "patch") || strcmp (typ, "hggroup")))
@@ -384,24 +383,24 @@ function [hlegend2, hobjects2, hplot2, t
               set (kids(k), "displayname", arg);
               hplots = [hplots, kids(k)];
               text_strings = {text_strings{:}, arg};
             endif
 
             if (--k == 0)
               break;
             endif
-          elseif (! warned)
-            break;
+          else
+            break;  # k = 0, no further handles to process
           endif
         else
           error ("legend: expecting argument to be a character string");
         endif
       endfor
-      if (i < nargs && ! warned)
+      if (i < nargs)
         warning ("legend: ignoring extra labels");
       endif
     else
       k = nkids;
       while (k > 0)
         typ = get (kids(k), "type");
         while (k > 1
                && ! (strcmp (typ, "line") || strcmp (typ, "surface")
@@ -435,17 +434,17 @@ function [hlegend2, hobjects2, hplot2, t
           endif
         endif
       endwhile
     endif
 
     if (isempty (hplots))
       if (! isempty (hlegend))
         fkids = get (fig, "children");
-        delete (fkids (fkids == hlegend));
+        delete (fkids(fkids == hlegend));
         hlegend = [];
         hobjects = [];
         hplots  = [];
         text_strings = {};
       endif
     else
       ## Preserve the old legend if it exists
       if (! isempty (hlegend))
@@ -755,20 +754,20 @@ function [hlegend2, hobjects2, hplot2, t
 
         ## Add an invisible text object to original axis
         ## that when it is destroyed will remove the legend
         t1 = text (0, 0, "", "parent", ca(1), "tag", "legend",
                    "handlevisibility", "off", "visible", "off",
                    "xliminclude", "off", "yliminclude", "off");
         set (t1, "deletefcn", {@deletelegend1, hlegend});
 
-        ## Resize the axis the legend is attached to if the
-        ## legend is "outside" the plot and create listener to
+        ## Resize the axis that the legend is attached to if the
+        ## legend is "outside" the plot and create a listener to
         ## resize axis to original size if the legend is deleted,
-        ## hidden or shown
+        ## hidden, or shown.
         if (outside)
           for i = 1 : numel (ca)
             units = get (ca(i), "units");
             unwind_protect
               set (ca(i), "units", "points");
               set (ca(i), "position", new_pos);
             unwind_protect_cleanup
               set (ca(i), "units", units);
