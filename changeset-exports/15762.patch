# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1355095678 18000
#      Sun Dec 09 18:27:58 2012 -0500
# Node ID a5475ba0d199c6b34a8e2a2765efde57673ee307
# Parent  9f3656ada65814ca85cf95c622d8812392864998
test.m: Better error reporting for arguments that can't be tested (bug #37592)

* test.m: Add more specific error messages for types that can't be tested. Tests
and error messages borrowed from type.m.

diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -168,18 +168,25 @@ function [__ret1, __ret2, __ret3, __ret4
       __file = __file{1};
     endif
   endif
   if (isempty (__file))
     if (__grabdemo)
       __ret1 = "";
       __ret2 = -1;
     else
-      if (exist (__name) == 3)
+      ftype = exist (__name);
+      if (ftype == 3)
         fprintf (__fid, "%s%s source code with tests for dynamically linked function not found\n", __signal_empty, __name);
+      elseif (ftype == 5)
+        fprintf (__fid, "%s%s is a built-in function\n", __signal_empty, __name);
+      elseif (any (strcmp (__operators__ (), __name)))
+        fprintf (__fid, "%s%s is an operator\n", __signal_empty, __name);
+      elseif (any (strcmp (__keywords__ (), __name)))
+        fprintf (__fid, "%s%s is a keyword\n", __signal_empty, __name);
       else
         fprintf (__fid, "%s%s does not exist in path\n", __signal_empty, __name);
       endif
       fflush (__fid);
       if (nargout > 0)
         __ret1 = __ret2 = 0;
       endif
     endif
