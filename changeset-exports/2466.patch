# HG changeset patch
# User jwe
# Date 847079777 0
#      Mon Nov 04 03:56:17 1996 +0000
# Node ID 1573640a9994113264a26106815aa8e7d036d3b0
# Parent  7ee42ff6536a3023fb8f57e6a4b967f8704f10c4
[project @ 1996-11-04 03:56:11 by jwe]

diff --git a/glob/configure.in b/glob/configure.in
--- a/glob/configure.in
+++ b/glob/configure.in
@@ -8,12 +8,13 @@ AC_PROG_CPP			dnl Later checks need this
 dnl These two want to come early.
 AC_AIX
 AC_MINIX
 AC_ISC_POSIX
 AC_CONST
 AC_HEADER_STDC
 AC_CHECK_HEADERS(memory.h unistd.h string.h)
 AC_HEADER_DIRENT
+AC_CHECK_FUNCS(bcopy bzero)
 AC_FUNC_CLOSEDIR_VOID
 AC_FUNC_ALLOCA
 AC_FUNC_STRCOLL
 AC_OUTPUT(Makefile)
diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,8 +1,13 @@
+Sun Nov  3 15:35:46 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* c-std.h: Use #ifdef, not #if to checm HAVE_STDLIB_H
+	* c-unistd.h: Likewise, for HAVE_UNISTD_H
+
 Tue Oct 29 17:27:06 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (SH_LIBS_TO_INSTALL): Use .$(SHLEXT), not .so.
 
 Thu Oct 24 21:31:42 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* config.guess: Update to same version as used in Octave.
 	* config.sub: Likewise.
diff --git a/kpathsea/c-std.h b/kpathsea/c-std.h
--- a/kpathsea/c-std.h
+++ b/kpathsea/c-std.h
@@ -23,17 +23,17 @@ Foundation, Inc., 59 Temple Place - Suit
    that all implementations have.  We include these first, to help with
    NULL being defined multiple times.  */
 #include <math.h>
 #include <stdio.h>
 
 /* Be sure we have constants from <unistd.h>.  */
 #include <kpathsea/c-unistd.h>
 
-#if HAVE_STDLIB_H
+#ifdef HAVE_STDLIB_H
 #include <stdlib.h>
 /* Include <stdlib.h> before <stddef.h>, to help avoid NULL
    redefinitions on some systems.  (We don't include <stddef.h>
    ourselves any more, but FYI.)  */
 #else
 /* It's impossible to say for sure what the system will deign to put in
    <stdlib.h>, but let's hope it's at least these.  */
 extern char *getenv ();
diff --git a/kpathsea/c-unistd.h b/kpathsea/c-unistd.h
--- a/kpathsea/c-unistd.h
+++ b/kpathsea/c-unistd.h
@@ -18,17 +18,17 @@ along with this program; if not, write t
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  */
 
 #ifndef KPATHSEA_C_UNISTD_H
 #define KPATHSEA_C_UNISTD_H
 
 /* <unistd.h> is allowed to depend on <sys/types.h>.  */
 #include <kpathsea/systypes.h>
 
-#if HAVE_UNISTD_H
+#ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 #include <kpathsea/c-std.h>
 
 /* For fseek.  */
 #ifndef SEEK_SET
 #define SEEK_SET 0
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+Sun Nov  3 19:37:37 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* misc/Makefile.in (distclean): Delete target, since there is
+	nothing special to do.
+
 Wed Oct 30 17:20:14 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 1.90.
 
 	* Makefile.in (DISTFILES): Add ChangeLog.
 
 	* misc/Makefile.in: Make pic/machar.o using special rule.
 	Use CPPFLAGS, not CPP_FLAGS.
diff --git a/libcruft/misc/Makefile.in b/libcruft/misc/Makefile.in
--- a/libcruft/misc/Makefile.in
+++ b/libcruft/misc/Makefile.in
@@ -37,11 +37,8 @@ include ../Makerules
 XCC = $(patsubst -O%, , $(CC))
 XALL_CFLAGS = $(patsubst -O%, , $(ALL_CFLAGS))
 
 machar.o: $(srcdir)/machar.c
 	$(XCC) -c $(CPPFLAGS) $(XALL_CFLAGS) -DDP $<
 
 pic/machar.o: $(srcdir)/machar.c
 	$(XCC) -c $(CPPFLAGS) $(XALL_CFLAGS) -DDP $< -o $@
-
-distclean::
-	rm -f d1mach.f gen-d1mach
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,19 @@
+Sun Nov  3 15:45:37 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* file-ops.cc (file_stat::is_blk, file_stat::is_chr,
+	file_stat::is_dir, file_stat::is_fifo, file_stat::is_lnk,
+	file_stat::is_reg, file_stat::is_sock): Just return false if the
+	underlying macro is not defined.	
+
+	* oct-math.h (lgamma, gamma): Delete declarations.
+	(asinh, acosh, atanh, erf, erfc): Declare arg types too.
+	Protect declarations with #ifdef HAVE_*.
+
 Wed Oct 30 11:42:58 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 1.90.
 
 	* Makefile.in (DISTFILES): Add ChangeLog.
 
 	* cmd-hist.cc: Only include fcntl.h if HAVE_FCNTL_H.
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -48,53 +48,81 @@ Software Foundation, 59 Temple Place - S
 
 // XXX FIXME XXX -- the is_* and mode_as_string functions are only valid
 // for initialized objects.  If called for an object that is not
 // initialized, they should throw an exception.
 
 bool
 file_stat::is_blk (void) const
 {
+#ifdef S_ISBLK
   return S_ISBLK (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_chr (void) const
 {
+#ifdef S_ISCHR
   return S_ISCHR (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_dir (void) const
 { 
+#ifdef S_ISDIR
   return S_ISDIR (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_fifo (void) const
 { 
+#ifdef S_ISFIFO
   return S_ISFIFO (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_lnk (void) const
 { 
+#ifdef S_ISLNK
   return S_ISLNK (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_reg (void) const
 { 
+#ifdef S_ISREG
   return S_ISREG (fs_mode);
+#else
+  return false;
+#endif
 }
 
 bool
 file_stat::is_sock (void) const
 { 
+#ifdef S_ISSOCK
   return S_ISSOCK (fs_mode);
+#else
+  return false;
+#endif
 }
 
 extern "C" void mode_string ();
 
 string
 file_stat::mode_as_string (void) const
 {
   char buf[11];
diff --git a/liboctave/oct-math.h b/liboctave/oct-math.h
--- a/liboctave/oct-math.h
+++ b/liboctave/oct-math.h
@@ -28,23 +28,35 @@ Software Foundation, 59 Temple Place - S
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 // Provide declarations for these whether they are actually missing or
 // not, because they are not part of the standard math.h, and the
 // g++/libg++ installation no longer provides declarations for them.
 
-extern double acosh ();
-extern double asinh ();
-extern double atanh ();
-extern double erf ();
-extern double erfc ();
-extern double lgamma ();
-extern double gamma ();
+#ifndef HAVE_ACOSH
+extern double acosh (double);
+#endif
+
+#ifndef HAVE_ASINH
+extern double asinh (double);
+#endif
+
+#ifndef HAVE_ATANH
+extern double atanh (double);
+#endif
+
+#ifndef HAVE_ERF
+extern double erf (double);
+#endif
+
+#ifndef HAVE_ERFC
+extern double erfc (double);
+#endif
 
 #ifdef __cplusplus
 }
 #endif
 
 #endif
 
 /*
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,22 @@
 Sun Nov  3 00:45:30 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pt-const.cc (tree_constant::print): Just call val.print().
+	* ov-base.cc, ov-ch-mat.cc, ov-colon.cc, ov-complex.cc,
+	ov-cx-mat.cc, ov-range.cc, ov-re-mat.cc, ov-scalar.cc,
+	ov-str-mat.cc, ov-struct.cc ov-va-args.cc, ov.cc (print):
+	Handle pr_as_read_syntax arg.
+
+	* defaults.cc (subst_octave_home): Search for prefix repeatedly in
+	retval, not s.
+
+	* gripes.h: Make declaration of gripes_not_supported match
+	definition.
+
 	* mk-oct-links.in: In sed command, match "DEFUN_DLD *( *", not
 	"DEFUN_DLD_BUILTIN *( *".
 
 	* chol.cc, colloc.cc, dassl.cc, det.cc, eig.cc, expm.cc, fft.cc,
 	fft2.cc, filter.cc, find.cc, fsolve.cc, fsqp.cc, getpwent.cc,
 	getrusage.cc, givens.cc, hess.cc, ifft.cc, ifft2.cc, inv.cc,
 	log.cc, lpsolve.cc, lsode.cc, lu.cc, minmax.cc, npsol.cc, pinv.cc,
 	qpsol.cc, qr.cc, quad.cc, qzval.cc, rand.cc, schur.cc, sort.cc,
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -88,17 +88,17 @@ subst_octave_home (const string& s)
   string prefix = OCTAVE_PREFIX;
 
   retval = s;
 
   if (Voctave_home != prefix)
     {
       int len = prefix.length ();
       size_t start = 0;
-      while ((start = s.find (prefix)) != NPOS)
+      while ((start = retval.find (prefix)) != NPOS)
 	{
 	  retval.replace (start, len, Voctave_home);
 	  start++;
 	}
     }
 
   return retval;
 }
diff --git a/src/gripes.h b/src/gripes.h
--- a/src/gripes.h
+++ b/src/gripes.h
@@ -22,17 +22,17 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_gripes_h)
 #define octave_gripes_h 1
 
 #include <string>
 
 class octave_value;
 
-extern void gripe_not_supported (void);
+extern void gripe_not_supported (const char *);
 extern void gripe_string_invalid (void);
 extern void gripe_range_invalid (void);
 extern void gripe_nonconformant (void);
 extern void gripe_nonconformant (int r1, int c1, int r2, int c2);
 extern void gripe_empty_arg (const char *name, int is_error);
 extern void gripe_square_matrix_required (const char *name);
 extern void gripe_user_supplied_eval (const char *name);
 extern void gripe_user_returned_invalid (const char *name);
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -93,17 +93,17 @@ void
 octave_base_value::convert_to_row_or_column_vector (void)
 {
   gripe_wrong_type_arg
     ("octave_base_value::convert_to_row_or_column_vector ()",
      type_name ());
 }
 
 void
-octave_base_value::print (ostream&)
+octave_base_value::print (ostream&, bool)
 {
   gripe_wrong_type_arg ("octave_base_value::print()", type_name ());
 }
 
 double
 octave_base_value::double_value (bool) const
 {
   double retval = octave_NaN;
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -164,17 +164,17 @@ public:
   void increment (void);
 
   void decrement (void);
 
   octave_value convert_to_str (void) const;
 
   void convert_to_row_or_column_vector (void);
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-ch-mat.cc b/src/ov-ch-mat.cc
--- a/src/ov-ch-mat.cc
+++ b/src/ov-ch-mat.cc
@@ -84,18 +84,18 @@ octave_char_matrix::complex_value (bool)
     retval = matrix (0, 0);
   else
     gripe_invalid_conversion ("character matrix", "complex scalar");
 
   return retval;
 }
 
 void
-octave_char_matrix::print (ostream& os)
+octave_char_matrix::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, matrix, false, false, struct_indent);
+  octave_print_internal (os, matrix, pr_as_read_syntax, false, struct_indent);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-ch-mat.h b/src/ov-ch-mat.h
--- a/src/ov-ch-mat.h
+++ b/src/ov-ch-mat.h
@@ -109,17 +109,17 @@ public:
 
   ComplexMatrix complex_matrix_value (bool = false) const { return matrix; }
 
   charMatrix char_matrix_value (bool = false) const { return matrix; }
 
   octave_value convert_to_str (void) const
     { return octave_value (matrix); }
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-colon.cc b/src/ov-colon.cc
--- a/src/ov-colon.cc
+++ b/src/ov-colon.cc
@@ -23,21 +23,29 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <iostream.h>
+
 #include "error.h"
 #include "pr-output.h"
 #include "ov-colon.h"
 
 int octave_magic_colon::t_id = -1;
 
 const string octave_magic_colon::t_name ("magic-colon");
 
+void
+octave_magic_colon::print (ostream& os, bool)
+{
+  os << ":";
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-colon.h b/src/ov-colon.h
--- a/src/ov-colon.h
+++ b/src/ov-colon.h
@@ -68,16 +68,18 @@ public:
   bool is_defined (void) const { return true; }
 
   bool is_magic_colon (void) const { return true; }
 
   bool valid_as_scalar_index (void) const { return true; }
 
   bool valid_as_zero_index (void) const { return false; }
 
+  void print (ostream& os, bool pr_as_read_syntax = false);
+
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
     { t_id = octave_value_typeinfo::register_type (t_name); }
diff --git a/src/ov-complex.cc b/src/ov-complex.cc
--- a/src/ov-complex.cc
+++ b/src/ov-complex.cc
@@ -143,18 +143,18 @@ octave_complex::complex_value (bool) con
 
 ComplexMatrix
 octave_complex::complex_matrix_value (bool) const
 {
   return ComplexMatrix (1, 1, scalar);
 }
 
 void
-octave_complex::print (ostream& os)
+octave_complex::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, scalar, false);
+  octave_print_internal (os, scalar, pr_as_read_syntax);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-complex.h b/src/ov-complex.h
--- a/src/ov-complex.h
+++ b/src/ov-complex.h
@@ -113,17 +113,17 @@ public:
   octave_value transpose (void) const { return octave_value (scalar); }
 
   octave_value hermitian (void) const { return octave_value (conj (scalar)); }
 
   void increment (void) { scalar += 1.0; }
 
   void decrement (void) { scalar -= 1.0; }
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-cx-mat.cc b/src/ov-cx-mat.cc
--- a/src/ov-cx-mat.cc
+++ b/src/ov-cx-mat.cc
@@ -295,18 +295,18 @@ octave_complex_matrix::complex_value (bo
 
 ComplexMatrix
 octave_complex_matrix::complex_matrix_value (bool) const
 {
   return matrix;
 }
 
 void
-octave_complex_matrix::print (ostream& os)
+octave_complex_matrix::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, matrix, false, struct_indent);
+  octave_print_internal (os, matrix, pr_as_read_syntax, struct_indent);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-cx-mat.h b/src/ov-cx-mat.h
--- a/src/ov-cx-mat.h
+++ b/src/ov-cx-mat.h
@@ -125,17 +125,17 @@ public:
 
   octave_value hermitian (void) const
     { return octave_value (matrix.hermitian ()); }
 
   void increment (void) { matrix += 1.0; }
 
   void decrement (void) { matrix -= 1.0; }
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-range.cc b/src/ov-range.cc
--- a/src/ov-range.cc
+++ b/src/ov-range.cc
@@ -185,18 +185,18 @@ octave_range::hermitian (void) const
 octave_value
 octave_range::convert_to_str (void) const
 {
   octave_value tmp (range.matrix_value ());
   return tmp.convert_to_str ();
 }
 
 void
-octave_range::print (ostream& os)
+octave_range::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, range, false, struct_indent);
+  octave_print_internal (os, range, pr_as_read_syntax, struct_indent);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -136,17 +136,17 @@ public:
   Range range_value (void) const { return range; }
 
   octave_value transpose (void) const;
 
   octave_value hermitian (void) const;
 
   octave_value convert_to_str (void) const;
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -251,18 +251,18 @@ octave_matrix::convert_to_str (void) con
 	  retval = octave_value (chm, 1);
 	}
     }
 
   return retval;
 }
 
 void
-octave_matrix::print (ostream& os)
+octave_matrix::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, matrix, false, struct_indent);
+  octave_print_internal (os, matrix, pr_as_read_syntax, struct_indent);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-re-mat.h b/src/ov-re-mat.h
--- a/src/ov-re-mat.h
+++ b/src/ov-re-mat.h
@@ -126,17 +126,17 @@ public:
     { return octave_value (matrix.transpose ()); }
 
   void increment (void) { matrix += 1.0; }
 
   void decrement (void) { matrix -= 1.0; }
 
   octave_value convert_to_str (void) const;
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-scalar.cc b/src/ov-scalar.cc
--- a/src/ov-scalar.cc
+++ b/src/ov-scalar.cc
@@ -98,18 +98,18 @@ octave_scalar::convert_to_str (void) con
       s[1] = '\0';
       retval = octave_value (s);
     }
 
   return retval;
 }
 
 void
-octave_scalar::print (ostream& os)
+octave_scalar::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, scalar, false);
+  octave_print_internal (os, scalar, pr_as_read_syntax);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-scalar.h b/src/ov-scalar.h
--- a/src/ov-scalar.h
+++ b/src/ov-scalar.h
@@ -114,17 +114,17 @@ public:
   octave_value hermitian (void) const { return octave_value (scalar); }
 
   void increment (void) { ++scalar; }
 
   void decrement (void) { --scalar; }
 
   octave_value convert_to_str (void) const;
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -197,18 +197,19 @@ octave_char_matrix_str::all_strings (voi
 
 string
 octave_char_matrix_str::string_value (void) const
 {
   return matrix.row_as_string (0);  // XXX FIXME??? XXX
 }
 
 void
-octave_char_matrix_str::print (ostream& os)
+octave_char_matrix_str::print (ostream& os, bool pr_as_read_syntax)
 {
-  octave_print_internal (os, matrix, false, true, struct_indent);
+  octave_print_internal (os, matrix, pr_as_read_syntax, true,
+			 struct_indent);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-str-mat.h b/src/ov-str-mat.h
--- a/src/ov-str-mat.h
+++ b/src/ov-str-mat.h
@@ -101,17 +101,17 @@ public:
   bool is_true (void) const;
 
   Matrix matrix_value (bool = false) const;
 
   charMatrix all_strings (void) const;
 
   string string_value (void) const;
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -56,17 +56,17 @@ octave_struct::struct_elt_val (const str
 
 octave_value&
 octave_struct::struct_elt_ref (const string& nm)
 {
   return map [nm];
 }
 
 void
-octave_struct::print (ostream& os)
+octave_struct::print (ostream& os, bool)
 {
   // XXX FIXME XXX -- would be nice to print the output in some
   // standard order.  Maybe all substructures first, maybe
   // alphabetize entries, etc.
 
   begin_unwind_frame ("octave_struct_print");
 
   unwind_protect_int (struct_indent);
diff --git a/src/ov-struct.h b/src/ov-struct.h
--- a/src/ov-struct.h
+++ b/src/ov-struct.h
@@ -76,17 +76,17 @@ public:
   octave_value& struct_elt_ref (const string& nm);
 
   bool is_defined (void) const { return true; }
 
   bool is_map (void) const { return true; }
 
   Octave_map map_value (void) const { return map; }
 
-  void print (ostream& os);
+  void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
diff --git a/src/ov-va-args.cc b/src/ov-va-args.cc
--- a/src/ov-va-args.cc
+++ b/src/ov-va-args.cc
@@ -23,21 +23,29 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <iostream.h>
+
 #include "error.h"
 #include "pr-output.h"
 #include "ov-va-args.h"
 
 int octave_all_va_args::t_id = -1;
 
 const string octave_all_va_args::t_name ("va-arg");
 
+void
+octave_all_va_args::print (ostream& os, bool)
+{
+  os << "all_va_args";
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-va-args.h b/src/ov-va-args.h
--- a/src/ov-va-args.h
+++ b/src/ov-va-args.h
@@ -62,16 +62,18 @@ public:
   void *operator new (size_t size);
   void operator delete (void *p, size_t size);
 #endif
 
   bool is_defined (void) const { return true; }
 
   bool is_all_va_args (void) const { return true; }
 
+  void print (ostream& os, bool pr_as_read_syntax = false);
+
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
   static void register_type (void)
     { t_id = octave_value_typeinfo::register_type (t_name); }
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -490,19 +490,19 @@ octave_value::complex_vector_value (bool
       string tn = type_name ();
       gripe_invalid_conversion (tn.c_str (), "complex vector");
     }
 
   return retval;
 }
 
 void
-octave_value::print (void)
+octave_value::print (bool pr_as_read_syntax)
 {
-  print (octave_stdout);
+  print (octave_stdout, pr_as_read_syntax);
 }
 
 void
 octave_value::print_with_name (const string& name, bool print_padding)
 {
   print_with_name (octave_stdout, name, print_padding);
 }
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -358,19 +358,20 @@ public:
   // it, and we should convert it if possible.
 
   virtual octave_value convert_to_str (void) const
     { return rep->convert_to_str (); }
 
   virtual void convert_to_row_or_column_vector (void)
     { rep->convert_to_row_or_column_vector (); }
 
-  void print (void);
+  void print (bool pr_as_read_syntax = false);
 
-  virtual void print (ostream& os) { rep->print (os); }
+  virtual void print (ostream& os, bool pr_as_read_syntax)
+    { rep->print (os, pr_as_read_syntax); }
 
   void print_with_name (const string& name, bool print_padding = true);
 
   void print_with_name (ostream& os, const string& name,
 			bool print_padding = true);
 
   virtual int type_id (void) const { return rep->type_id (); }
 
diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -318,17 +318,18 @@ public:
 
   // Increment or decrement this constant.
 
   void increment (void) { val.increment (); }
 
   void decrement (void) { val.decrement (); }
 
   void print (void);
-  void print (ostream& os) { val.print (os); }
+  void print (ostream& os, bool pr_as_read_syntax)
+    { val.print (os, pr_as_read_syntax); }
 
   void print_with_name (const string& name, bool print_padding = true);
   void print_with_name (ostream& os, const string& name,
 			bool print_padding = true);
 
   octave_value eval (bool print_result);
 
   octave_value_list eval (bool, int, const octave_value_list&);
diff --git a/src/pt-pr-code.cc b/src/pt-pr-code.cc
--- a/src/pt-pr-code.cc
+++ b/src/pt-pr-code.cc
@@ -554,88 +554,27 @@ tree_print_code::visit_multi_assignment_
 }
 
 void
 tree_print_code::visit_oct_obj (tree_oct_obj&)
 {
   ::error ("visit_oct_obj: internal error");
 }
 
-// XXX FIXME XXX -- this should just call val.print_internal () or
-// something.  Checking the types here is a big no-no.
-
 void
 tree_print_code::visit_constant (tree_constant& val)
 {
   indent ();
 
   bool in_parens = val.is_in_parens ();
 
   if (in_parens)
     os << "(";
 
-  if (val.is_real_scalar ())
-    {
-      string orig_text = val.original_text ();
-
-      if (orig_text.empty ())
-	octave_print_internal (os, val.double_value (), 1);
-      else
-	os << orig_text;
-    }
-  else if (val.is_real_matrix ())
-    {
-      octave_print_internal (os, val.matrix_value (), 1);
-    }
-  else if (val.is_complex_scalar ())
-    {
-      Complex cs = val.complex_value ();
-
-      double re = cs.real ();
-      double im = cs.imag ();
-
-      // If we have the original text and a pure imaginary, just
-      // print the original text, because this must be a constant
-      // that was parsed as part of a function.
-
-      string orig_text = val.original_text ();
-
-      if (! orig_text.empty () && re == 0.0 && im > 0.0)
-	os << orig_text;
-      else
-	octave_print_internal (os, cs, 1);
-    }
-  else if (val.is_complex_matrix ())
-    {
-      octave_print_internal (os, val.complex_matrix_value (), 1);
-    }
-  else if (val.is_string ())
-    {
-      octave_print_internal (os, val.all_strings (), 1, 1);
-    }
-  else if (val.is_char_matrix ())
-    {
-      octave_print_internal (os, val.char_matrix_value (), 1);
-    }
-  else if (val.is_range ())
-    {
-      octave_print_internal (os, val.range_value (), 1);
-    }
-  else if (val.is_magic_colon ())
-    {
-      os << ":";
-    }
-  else if (val.is_all_va_args ())
-    {
-      os << "all_va_args";
-    }
-  else
-    {
-      panic_impossible ();
-    }
+  val.print (os, true);
 
   if (in_parens)
     os << ")";
 }
 
 void
 tree_print_code::visit_parameter_list (tree_parameter_list& lst)
 {
