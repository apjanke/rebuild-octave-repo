# HG changeset patch
# User jwe
# Date 854940431 0
#      Mon Feb 03 03:27:11 1997 +0000
# Node ID 7457014d8985ee2791e9eba90181e1d70bdedb44
# Parent  bdb1346e0f7f8cd2a6e63c17e0ffeee4d1a7f4ed
[project @ 1997-02-03 03:27:11 by jwe]

diff --git a/doc/liboctave/diffeq.texi b/doc/liboctave/diffeq.texi
--- a/doc/liboctave/diffeq.texi
+++ b/doc/liboctave/diffeq.texi
@@ -1,9 +1,9 @@
-@node Ordinary Differential Equations, Error Handling, Quadrature, Top
+@node Ordinary Differential Equations, Differential Algebraic Equations, Quadrature, Top
 @chapter Ordinary Differential Equations
 @cindex ODE
 
 @deftypefn  {} {}ODE_options (void)
 @deftypefnx  {} {}ODE_options (const ODE_options &@var{opt})
 @end deftypefn
 
 @deftypefn {} ODE_options& {operator =} (const ODE_options &@var{opt})
diff --git a/doc/liboctave/error.texi b/doc/liboctave/error.texi
--- a/doc/liboctave/error.texi
+++ b/doc/liboctave/error.texi
@@ -1,3 +1,3 @@
-@node Error Handling, Installation, Ordinary Differential Equations, Top
+@node Error Handling, Installation, Differential Algebraic Equations, Top
 @chapter Error Handling
 
diff --git a/doc/liboctave/liboctave.texi b/doc/liboctave/liboctave.texi
--- a/doc/liboctave/liboctave.texi
+++ b/doc/liboctave/liboctave.texi
@@ -93,34 +93,49 @@ library, and how to report bugs.  It cor
 * Acknowledgements::            
 * Copying::                     
 * Introduction::                
 * Arrays::                      
 * Matrix and Vector @var{Operations}::  
 * Matrix Factorizations::       
 * Ranges::                      
 * Nonlinear Functions::         
-* Objective Functions::         
+* Nonlinear Equations::         
+* Optimization::                
 * Quadrature::                  
 * Ordinary Differential Equations::  
+* Differential Algebraic Equations::  
 * Error Handling::              
 * Installation::                
 * Bugs::                        
 * Concept Index::               
 * Function Index::              
 
  --- The Detailed Node Listing ---
 
 Acknowledgements
 
 * Contributors::                People who contributed to developing of Octave.
 
 Arrays
 
 * Constructors and Assignment::  
+
+Optimization
+
+* Objective Functions::         
+* Bounds::                      
+* Linear Constraints::          
+* Nonlinear Constraints::       
+* Quadratic Programming::       
+* Nonlinear Programming::       
+
+Quadrature
+
+* Collocation Weights::         
 @end menu
 
 @include preface.texi
 @include gpl.texi
 @include intro.texi
 @include array.texi
 @include matvec.texi
 @include factor.texi
diff --git a/doc/liboctave/nleqn.texi b/doc/liboctave/nleqn.texi
--- a/doc/liboctave/nleqn.texi
+++ b/doc/liboctave/nleqn.texi
@@ -1,9 +1,9 @@
-@node Nonlinear Equations,  , Nonlinear Functions
+@node Nonlinear Equations, Optimization, Nonlinear Functions, Top
 @chapter Nonlinear Equations
 @cindex nonlinear equations
 
 @deftypefn  {} {}NLEqn_options (void)
 @deftypefnx  {} {}NLEqn_options (const NLEqn_options &@var{opt})
 @end deftypefn
 
 @deftypefn {} NLEqn_options& {operator =} (const NLEqn_options &@var{opt})
diff --git a/doc/liboctave/nlfunc.texi b/doc/liboctave/nlfunc.texi
--- a/doc/liboctave/nlfunc.texi
+++ b/doc/liboctave/nlfunc.texi
@@ -1,9 +1,9 @@
-@node Nonlinear Functions, Objective Functions, Ranges, Top
+@node Nonlinear Functions, Nonlinear Equations, Ranges, Top
 @chapter Nonlinear Functions
 @cindex nonlinear functions
 
 @deftypefn  {} {}NLFunc (void)
 @deftypefnx  {} {}NLFunc (const @var{nonlinear_fcn})
 @deftypefnx  {} {}NLFunc (const @var{nonlinear_fcn}, const @var{jacobian_fcn})
 @deftypefnx  {} {}NLFunc (const NLFunc &@var{a})
 @end deftypefn
diff --git a/doc/liboctave/optim.texi b/doc/liboctave/optim.texi
--- a/doc/liboctave/optim.texi
+++ b/doc/liboctave/optim.texi
@@ -1,13 +1,22 @@
-@node Optimization
+@node Optimization, Quadrature, Nonlinear Equations, Top
 @chapter Optimization
 @cindex optimization
 
-@node Objective Functions, Quadrature, Nonlinear Functions, Top
+@menu
+* Objective Functions::         
+* Bounds::                      
+* Linear Constraints::          
+* Nonlinear Constraints::       
+* Quadratic Programming::       
+* Nonlinear Programming::       
+@end menu
+
+@node Objective Functions, Bounds, Optimization, Optimization
 @section Objective Functions
 @cindex objective functions
 
 @deftypefn  {} {}Objective (void)
 @deftypefnx  {} {}Objective (const @var{objective_fcn})
 @deftypefnx  {} {}Objective (const @var{objective_fcn}, const @var{gradient_fcn})
 @deftypefnx  {} {}Objective (const Objective &@var{a})
 @end deftypefn
@@ -24,17 +33,17 @@
 @deftypefn {} gradient_fcn gradient_function (void) const;
 @end deftypefn
 
 @deftypefn {} Objective& set_gradient_function (const @var{gradient_fcn})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
-@node Bounds, Linear Constraints, Objective Functions
+@node Bounds, Linear Constraints, Objective Functions, Optimization
 @section Bounds
 @cindex bounds
 
 @deftypefn  {} {}Bounds (void)
 @deftypefnx  {} {}Bounds (int @var{n})
 @deftypefnx  {} {}Bounds (const ColumnVector @var{lb}, const ColumnVector @var{ub})
 @deftypefnx  {} {}Bounds (const Bounds &@var{a})
 @end deftypefn
@@ -75,17 +84,17 @@
 @deftypefnx {} Bounds& set_upper_bounds (const ColumnVector @var{ub})
 @end deftypefn
 
 @deftypefn {} {ostream&} {operator <<} (ostream &@var{os}, const Bounds &@var{b})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
-@node Linear Constraints, Nonlinear Constraints, Bounds
+@node Linear Constraints, Nonlinear Constraints, Bounds, Optimization
 @section Linear Constraints
 @cindex linear Constraints
 
 @deftypefn  {} {}LinConst (void)
 @deftypefnx  {} {}LinConst (int @var{nclin}, int @var{nx})
 @deftypefnx  {} {}LinConst (int @var{nclin_eq}, int @var{nclin_ineq}, int @var{nx})
 @deftypefnx  {} {}LinConst (const ColumnVector &@var{lb}, const Matrix &@var{A}, const ColumnVector &@var{ub})
 @deftypefnx  {} {}LinConst (const Matrix &@var{A_eq}, const ColumnVector &@var{b_eq}, const Matrix &@var{A_ineq}, const ColumnVector &@var{b_ineq})
@@ -112,30 +121,30 @@
 @deftypefnx {} ColumnVector ineq_constraint_vector (void) const;
 @end deftypefn
 
 @deftypefn {} {ostream&} {operator <<} (ostream &@var{os}, const LinConst &@var{b})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
-@node Nonlinear Constraints, Quadratic Programming, Linear Constraints
+@node Nonlinear Constraints, Quadratic Programming, Linear Constraints, Optimization
 @section Nonlinear Constraints
 @cindex nonlinear Constraints
 
 @deftypefn  {} {}NLConst (void)
 @deftypefnx  {} {}NLConst (int @var{n})
 @deftypefnx  {} {}NLConst (const ColumnVector @var{lb}, const NLFunc @var{f}, const ColumnVector @var{ub})
 @deftypefnx  {} {}NLConst (const NLConst &@var{a})
 @end deftypefn
 
 @deftypefn {} NLConst& {operator =} (const NLConst &@var{a})
 @end deftypefn
 
-@node Quadratic Programming, Nonlinear Programming, Nonlinear Constraints
+@node Quadratic Programming, Nonlinear Programming, Nonlinear Constraints, Optimization
 @section Quadratic Programming
 @cindex QP
 @cindex quadratic programming
 
 @deftypefn  {} {}QP (void)
 @deftypefnx  {} {}QP (const ColumnVector &@var{x}, const Matrix &@var{H})
 @deftypefnx  {} {}QP (const ColumnVector &@var{x}, const Matrix &@var{H}, const ColumnVector &@var{c})
 @deftypefnx  {} {}QP (const ColumnVector &@var{x}, const Matrix &@var{H}, const Bounds &@var{b})
@@ -207,17 +216,17 @@
 @deftypefn {} QPSOL& {operator =} (const QPSOL &@var{a})
 @end deftypefn
 
 @deftypefn {} ColumnVector minimize (double &@var{objf}, int &@var{inform}, ColumnVector &@var{lambda})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
-@node Nonlinear Programming,  , Quadratic Programming
+@node Nonlinear Programming,  , Quadratic Programming, Optimization
 @section Nonlinear Programming
 @cindex NLP
 @cindex nonlinear programming
 
 @deftypefn  {} {}NLP (void)
 @deftypefnx  {} {}NLP (const ColumnVector &@var{x}, const Objective &@var{phi})
 @deftypefnx  {} {}NLP (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b})
 @deftypefnx  {} {}NLP (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b}, const LinConst &@var{lc})
diff --git a/doc/liboctave/quad.texi b/doc/liboctave/quad.texi
--- a/doc/liboctave/quad.texi
+++ b/doc/liboctave/quad.texi
@@ -1,9 +1,9 @@
-@node Quadrature, Ordinary Differential Equations, Objective Functions, Top
+@node Quadrature, Ordinary Differential Equations, Optimization, Top
 @chapter Quadrature
 @cindex quadrature
 @cindex numerical integration
 @cindex integration
 
 @deftypefn  {} {}Quad (integrand_fcn @var{fcn})
 @deftypefnx  {} {}Quad (integrand_fcn @var{fcn}, double @var{abs}, double @var{rel})
 @end deftypefn
@@ -50,17 +50,21 @@
 @end deftypefn
 
 @deftypefn  {} {}IndefQuad (integrand_fcn @var{fcn})
 @deftypefnx  {} {}IndefQuad (integrand_fcn @var{fcn}, double @var{b}, IntegralType @var{t})
 @deftypefnx  {} {}IndefQuad (integrand_fcn @var{fcn}, double @var{b}, IntegralType @var{t}, double @var{abs}, double @var{rel})
 @deftypefnx  {} {}IndefQuad (integrand_fcn @var{fcn}, double @var{abs}, double @var{rel})
 @end deftypefn
 
-@node Collocation Weights,  , Quadrature
+@menu
+* Collocation Weights::         
+@end menu
+
+@node Collocation Weights,  , Quadrature, Quadrature
 @section Collocation Weights
 @cindex orthogonal collocation
 @cindex collocation weights
 
 @deftypefn  {} {}CollocWt (void)
 @deftypefnx  {} {}CollocWt (int @var{n}, int @var{inc_l}, int @var{inc_r})
 @deftypefnx  {} {}CollocWt (int @var{n}, int @var{inc_l}, int @var{inc_r}, double @var{l}, double @var{r})
 @deftypefnx  {} {}CollocWt (int @var{n}, double @var{a}, double @var{b}, int @var{inc_l}, int @var{inc_r})
