# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1457640677 28800
#      Thu Mar 10 12:11:17 2016 -0800
# Node ID 217e6e97085bee77e9ad5d11b80f8e6b73fe4a2d
# Parent  067662ac6bfea2cd70b6f176080e330d5317d499
Prevent race conditions in GUI and interpreter initialization (bug #47326)

* main-window.cc (main_window::execute_octave_interpreter): New slot.
(main_window::construct_octave_qt_link): Defer starting the interpreter
thread until after the QApplication main loop is running.
* main-window.h (main_window::execute_octave_interpreter): Declare new slot.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1578,19 +1578,27 @@ main_window::construct_octave_qt_link (v
                this,
                SLOT (handle_rename_variable_request (const QString&,
                                                      const QString&)));
 
       connect (command_window, SIGNAL (interrupt_signal (void)),
                _octave_qt_link, SLOT (terminal_interrupt (void)));
     }
 
+  octave_link::connect_link (_octave_qt_link);
+
+  // Defer initializing and executing the interpreter until after the main
+  // window and QApplication are running to prevent race conditions
+  QTimer::singleShot (0, this, SLOT (execute_octave_interpreter ()));
+}
+
+void
+main_window::execute_octave_interpreter (void)
+{
   _octave_qt_link->execute_interpreter ();
-
-  octave_link::connect_link (_octave_qt_link);
 }
 
 void
 main_window::construct_menu_bar (void)
 {
   QMenuBar *menu_bar = menuBar ();
 
   construct_file_menu (menu_bar);
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -201,16 +201,17 @@ public slots:
 
   void handle_create_filedialog (const QStringList &filters,
                                  const QString& title, const QString& filename,
                                  const QString &dirname,
                                  const QString& multimode);
 
   void handle_show_doc (const QString &file);
 
+  void execute_octave_interpreter (void);
   void handle_octave_ready ();
 
   // find files dialog
   void find_files (const QString &startdir=QDir::currentPath ());
   void find_files_finished (int);
 
   // setting global shortcuts
   void set_global_shortcuts (bool enable);
