# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1254046293 -7200
#      Sun Sep 27 12:11:33 2009 +0200
# Node ID 641a788c82a4abd65f6c2ca03c3e45d2a1718736
# Parent  a531dec450c47863167e2856c7002aeb211e3d7c
fix complex-real comparisons

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-09-27  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-cmplx.h: Fix complex-real orderings.
+
 2009-09-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dim-vector.h (dim_vector::redim): Rewrite.
 	* Array-util.cc (sub2ind): Allow single index case.
 
 2009-09-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dMatrix.cc (xgemm): Use blas_trans_type to indicate transposes.
diff --git a/liboctave/oct-cmplx.h b/liboctave/oct-cmplx.h
--- a/liboctave/oct-cmplx.h
+++ b/liboctave/oct-cmplx.h
@@ -48,36 +48,36 @@ inline bool operator OP (const std::comp
       return ay OP by; \
     } \
   else \
     return ax OPS bx; \
 } \
 template <class T> \
 inline bool operator OP (const std::complex<T>& a, T b) \
 { \
-  FLOAT_TRUNCATE const T ax = std::abs (a); \
-  if (ax == b) \
+  FLOAT_TRUNCATE const T ax = std::abs (a), bx = std::abs (b); \
+  if (ax == bx) \
     { \
       FLOAT_TRUNCATE const T ay = std::arg (a); \
       return ay OP 0; \
     } \
   else \
-    return ax OPS b; \
+    return ax OPS bx; \
 } \
 template <class T> \
 inline bool operator OP (T a, const std::complex<T>& b) \
 { \
-  FLOAT_TRUNCATE const T bx = std::abs (b); \
-  if (a == bx) \
+  FLOAT_TRUNCATE const T ax = std::abs (a), bx = std::abs (b); \
+  if (ax == bx) \
     { \
       FLOAT_TRUNCATE const T by = std::arg (b); \
       return 0 OP by; \
     } \
   else \
-    return a OPS bx; \
+    return ax OPS bx; \
 }
 
 DEF_COMPLEXR_COMP (>, >)
 DEF_COMPLEXR_COMP (<, <)
 DEF_COMPLEXR_COMP (<=, <)
 DEF_COMPLEXR_COMP (>=, >)
 
 #endif
