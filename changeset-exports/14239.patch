# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1327138819 -3600
#      Sat Jan 21 10:40:19 2012 +0100
# Branch gui
# Node ID 7ecaa8a66d5a8844ef2f4414f2429c4866f2ef53
# Parent  8b7a98f12c9bb5a8009a521ec6e83fa415c3af84
GUI: Removed stylesheets from dock widgets and add missing slots.

diff --git a/gui/src/FilesDockWidget.cpp b/gui/src/FilesDockWidget.cpp
--- a/gui/src/FilesDockWidget.cpp
+++ b/gui/src/FilesDockWidget.cpp
@@ -93,28 +93,20 @@ FilesDockWidget::FilesDockWidget (QWidge
   // TODO: Add right-click contextual menus for copying, pasting, deleting files (and others)
 
   connect (m_currentDirectory, SIGNAL (returnPressed ()), this,
 	   SLOT (currentDirectoryEntered ()));
   QCompleter *
     completer = new QCompleter (m_fileSystemModel, this);
   m_currentDirectory->setCompleter (completer);
 
-  connect (this, SIGNAL (visibilityChanged(bool)), this, SLOT(handleVisibilityChanged(bool)));
-
-  setStyleSheet(
-      " QDockWidget { "
-      "   border:1px solid rgba(200, 200, 200, 255); "
-      "   background-color: qlineargradient(spread:pad, "
-      "   x1:0.1, y1:0, x2:0.9, y2:1, "
-      "   stop:0.256444 rgba(215, 215, 255, 255), "
-      "   stop:0.550888 rgba(255, 255, 255, 255), "
-      "   stop:0.780424 rgba(215, 215, 255, 255)); "
-      " } "
-      );
+  connect (this,
+           SIGNAL (visibilityChanged(bool)),
+           this,
+           SLOT(handleVisibilityChanged(bool)));
 }
 
 void
 FilesDockWidget::itemDoubleClicked (const QModelIndex & index)
 {
   // Retrieve the file info associated with the model index.
   QFileInfo fileInfo = m_fileSystemModel->fileInfo (index);
 
diff --git a/gui/src/HistoryDockWidget.cpp b/gui/src/HistoryDockWidget.cpp
--- a/gui/src/HistoryDockWidget.cpp
+++ b/gui/src/HistoryDockWidget.cpp
@@ -41,43 +41,49 @@ HistoryDockWidget::construct ()
   setWidget (new QWidget ());
 
   layout->addWidget (m_historyListView);
   layout->addWidget (m_filterLineEdit);
   layout->setMargin (2);
 
   widget ()->setLayout (layout);
 
-  connect (m_filterLineEdit, SIGNAL (textEdited (QString)), &m_sortFilterProxyModel, SLOT (setFilterWildcard(QString)));
-  connect (m_historyListView, SIGNAL (doubleClicked (QModelIndex)), this, SLOT (handleDoubleClick (QModelIndex)));
-  connect (this, SIGNAL (visibilityChanged(bool)), this, SLOT(handleVisibilityChanged(bool)));
+  connect (m_filterLineEdit,
+           SIGNAL (textEdited (QString)),
+           &m_sortFilterProxyModel,
+           SLOT (setFilterWildcard(QString)));
 
-  setStyleSheet(
-      " QDockWidget { "
-      "   border:1px solid rgba(200, 200, 200, 255); "
-      "   background-color: qlineargradient(spread:pad, "
-      "   x1:0.1, y1:0, x2:0.9, y2:1, "
-      "   stop:0.256444 rgba(215, 255, 215, 255), "
-      "   stop:0.550888 rgba(255, 255, 255, 255), "
-      "   stop:0.780424 rgba(215, 255, 215, 255)); "
-      " } "
-      );
+  connect (m_historyListView,
+           SIGNAL (doubleClicked (QModelIndex)),
+           this,
+           SLOT (handleDoubleClick (QModelIndex)));
+
+  connect (this,
+           SIGNAL (visibilityChanged(bool)),
+           this,
+           SLOT(handleVisibilityChanged(bool)));
 }
 
 void
 HistoryDockWidget::handleDoubleClick (QModelIndex modelIndex)
 {
   emit commandDoubleClicked (modelIndex.data().toString());
 }
 
 void
 HistoryDockWidget::handleVisibilityChanged (bool visible)
 {
   if (visible)
     emit activeChanged (true);
 }
 
 void
+HistoryDockWidget::noticeSettings ()
+{
+    // TODO: React on a settings change.
+}
+
+void
 HistoryDockWidget::closeEvent (QCloseEvent *event)
 {
   emit activeChanged (false);
   QDockWidget::closeEvent (event);
 }
diff --git a/gui/src/HistoryDockWidget.h b/gui/src/HistoryDockWidget.h
--- a/gui/src/HistoryDockWidget.h
+++ b/gui/src/HistoryDockWidget.h
@@ -28,16 +28,17 @@ class HistoryDockWidget:public QDockWidg
 {
 Q_OBJECT
 public:
   HistoryDockWidget (QWidget *parent = 0);
   void updateHistory (QStringList history);
 
 public slots:
   void handleVisibilityChanged (bool visible);
+  void noticeSettings ();
 
 signals:
   void information (QString message);
   void commandDoubleClicked (QString command);
   /** Custom signal that tells if a user has clicked away that dock widget. */
   void activeChanged (bool active);
 protected:
   void closeEvent (QCloseEvent *event);
diff --git a/gui/src/WorkspaceView.cpp b/gui/src/WorkspaceView.cpp
--- a/gui/src/WorkspaceView.cpp
+++ b/gui/src/WorkspaceView.cpp
@@ -54,30 +54,31 @@ WorkspaceView::WorkspaceView (QWidget * 
   treeWidgetItem = new QTreeWidgetItem ();
   treeWidgetItem->setData (0, 0, QString (tr ("Hidden")));
   m_variablesTreeWidget->insertTopLevelItem (3, treeWidgetItem);
 
   m_variablesTreeWidget->expandAll ();
   m_variablesTreeWidget->setAlternatingRowColors (true);
   m_variablesTreeWidget->setAnimated (true);
 
-  connect (this, SIGNAL (visibilityChanged(bool)), this, SLOT(handleVisibilityChanged(bool)));
+  connect (this,
+           SIGNAL (visibilityChanged(bool)),
+           this,
+           SLOT(handleVisibilityChanged(bool)));
 
-  setStyleSheet(
-      " QDockWidget { "
-      "   border:1px solid rgba(200, 200, 200, 255); "
-      "   background-color: qlineargradient(spread:pad, "
-      "   x1:0.1, y1:0, x2:0.9, y2:1, "
-      "   stop:0.256444 rgba(255, 215, 215, 255), "
-      "   stop:0.550888 rgba(255, 255, 255, 255), "
-      "   stop:0.780424 rgba(255, 215, 215, 255)); "
-      " } "
-      );
+  connect (OctaveLink::instance(),
+           SIGNAL (symbolTableChanged()),
+           this,
+           SLOT (fetchSymbolTable()));
+}
 
-  connect (OctaveLink::instance(), SIGNAL (symbolTableChanged()), this, SLOT (fetchSymbolTable()));
+void
+WorkspaceView::noticeSettings ()
+{
+    // TODO: React on a settings change.
 }
 
 void
 WorkspaceView::updateTreeEntry (QTreeWidgetItem * treeItem, SymbolRecord symbolRecord)
 {
   treeItem->setData (0, 0, QString (symbolRecord.name ().c_str ()));
   treeItem->setData (1, 0,
 		     QString (symbolRecord.varval ().type_name ().c_str ()));
diff --git a/gui/src/WorkspaceView.h b/gui/src/WorkspaceView.h
--- a/gui/src/WorkspaceView.h
+++ b/gui/src/WorkspaceView.h
@@ -27,16 +27,17 @@ class WorkspaceView:public QDockWidget
 {
   Q_OBJECT
 public:
   WorkspaceView (QWidget * parent = 0);
 
 public slots:
   void fetchSymbolTable ();
   void handleVisibilityChanged (bool visible);
+  void noticeSettings ();
 
 signals:
   /** Custom signal that tells if a user has clicke away that dock widget. */
   void activeChanged (bool active);
 
 protected:
   void closeEvent (QCloseEvent *event);
 
