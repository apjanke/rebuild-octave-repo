# HG changeset patch
# User jwe
# Date 857034129 0
#      Thu Feb 27 09:02:09 1997 +0000
# Node ID 99dd10f4eaaf5b10e208196ba927b5aebab22986
# Parent  73a51c5250ecd03518d81bc76ab6fea4b69f82d4
[project @ 1997-02-27 08:59:55 by jwe]

diff --git a/doc/interpreter/control.texi b/doc/interpreter/control.texi
--- a/doc/interpreter/control.texi
+++ b/doc/interpreter/control.texi
@@ -361,18 +361,18 @@ Solve the discrete-time Lyapunov equatio
 @end tex
 @end iftex
 @ifinfo
 @code{a x a' - x + b = 0}
 @end ifinfo
 for square matrices @var{a}, @var{b}.  If @var{b} is not square, then the
 function attempts to solve either
 @iftex
+@tex
 $AXA^T - X + B B^T = 0$ or $A^TXA - X + B^TB = 0$,
-@tex
 @end tex
 @ifinfo
 @code{a x a' - x + b b' = 0} or @code{a' x a - x + b' b = 0},
 @end ifinfo
 whichever is appropriate.
 
 Uses Schur decomposition method as in Kitagawa, International Journal of
 Control (1977); column-by-column solution method as suggested in
@@ -388,17 +388,17 @@ omitted, a value of @code{2*eps} is used
 
 Currently, @code{is_controllable} just constructs the controllability
 matrix and checks rank.
 @end deftypefn
 
 @deftypefn {Function File} {} is_observable (@var{a}, @var{c}, @var{tol})
 
 Return 1 if the pair (@var{a}, @var{c}) is observable.
-Otherwise, return0.
+Otherwise, return 0.
 
 The optional argument @var{tol} is a roundoff parameter.  If it is
 omitted, a value of @code{2*eps} is used.
 @end deftypefn
 
 @deftypefn {Function File} {[@var{k}, @var{p}, @var{e}] =} lqe (@var{a}, @var{g}, @var{c}, @var{sigw}, @var{sigv}, @var{z})
 Construct the linear quadratic estimator (Kalman filter) for the
 continuous time system
@@ -528,18 +528,18 @@ to minimize the cost functional
 @var{z} included.
 
 The following values are returned:
 
 @table @var
 @item k
 The state feedback gain,
 @iftex
+@tex
 $(A - B K)$
-@tex
 @end tex
 @end iftex
 @ifinfo
 (@var{a} - @var{b}@var{k})
 @end ifinfo
 is stable.
 
 @item p
diff --git a/doc/interpreter/intro.texi b/doc/interpreter/intro.texi
--- a/doc/interpreter/intro.texi
+++ b/doc/interpreter/intro.texi
@@ -358,17 +358,20 @@ manual.  You may want to skip this secti
 @end menu
 
 @node Fonts, Evaluation Notation, Conventions, Conventions
 @subsection Fonts
 @cindex fonts
 
 Examples of Octave code appear in this font or form: @code{svd (a)}.
 Names that represent arguments or metasyntactic variables appear
-in this font or form: @var{first-number}.
+in this font or form: @var{first-number}.  Commands that you type
+sometimes appear in this font or form: @kbd{foo --bar --baz}.  Specific
+keys on your keyboard appear in this font or form: @key{ANY}.
+@cindex any key
 
 @node Evaluation Notation, Printing Notation, Fonts, Conventions
 @subsection Evaluation Notation
 @cindex evaluation notation
 @cindex documentation notation
 
 In the examples in this manual, results from expressions that you
 evaluate are indicated with @samp{@result{}}.  For example,
diff --git a/doc/interpreter/io.texi b/doc/interpreter/io.texi
--- a/doc/interpreter/io.texi
+++ b/doc/interpreter/io.texi
@@ -542,19 +542,19 @@ Open a file for reading.
 Open a file for writing.  The previous contents are discared.
 
 @item @samp{a}
 Open or create a file for writing at the end of the file.
 
 @item @samp{r+}
 Open an existing file for reading and writing.
 
-item @samp{w+}
+@item @samp{w+}
 Open a file for reading or writing.  The previous contents are
-discared.
+discarded.
 
 @item @samp{a+}
 Open or create a file for reading or writing at the end of the
 file.
 @end table
 
 The parameter @var{arch} is a string specifying the default data format
 for the file.  Valid values for @var{arch} are:
diff --git a/doc/interpreter/linalg.texi b/doc/interpreter/linalg.texi
--- a/doc/interpreter/linalg.texi
+++ b/doc/interpreter/linalg.texi
@@ -282,17 +282,17 @@ u =
 
 p =
 
   0  1
   1  0
 @end example
 @end deftypefn
 
-@deftypefn {Loadable Function} {[@var{q}, @var{r}] =} qr (@var{a})
+@deftypefn {Loadable Function} {[@var{q}, @var{r}, @var{p}] =} qr (@var{a})
 @cindex QR factorization
 Compute the QR factorization of @var{a}, using standard @sc{Lapack}
 subroutines.  For example, given the matrix @code{a = [1, 2; 3, 4]},
 
 @example
 [q, r] = qr (a)
 @end example
 
@@ -331,23 +331,31 @@ for overdetermined systems of equations 
 @iftex
 @tex
 $A$
 @end tex
 @end iftex
 @ifinfo
 @code{a}
 @end ifinfo
- is a tall, thin matrix).  The @code{qr} factorization is @code{q * r = a}
-where @code{q} is an orthogonal matrix and @code{r} is upper triangular.
+ is a tall, thin matrix).  The QR factorization is
+@iftex
+@tex
+$QR = A$ where $Q$ is an orthogonal matrix and $R$ is upper triangular.
+@end tex
+@end iftex
+@ifinfo
+@code{q * r = a} where @code{q} is an orthogonal matrix and @code{r} is
+upper triangular.
+@end ifinfo
 
-The permuted @code{qr} factorization @code{[q, r, pi] = qr (a)} forms
-the @code{qr} factorization such that the diagonal entries of @code{r}
-are decreasing in magnitude order.  For example, given the matrix
-@code{a = [1, 2; 3, 4]},
+The permuted QR factorization @code{[@var{q}, @var{r}, @var{p}] =
+qr (@var{a})} forms the QR factorization such that the diagonal
+entries of @code{r} are decreasing in magnitude order.  For example,
+given the matrix @code{a = [1, 2; 3, 4]},
 
 @example
 [q, r, pi] = qr(a)
 @end example
 
 @noindent
 returns
 
@@ -363,22 +371,22 @@ r =
    0.00000   0.44721
 
 p =
 
    0  1
    1  0
 @end example
 
-The permuted @code{qr} factorization @code{[q, r, pi] = qr (a)}
+The permuted @code{qr} factorization @code{[q, r, p] = qr (a)}
 factorization allows the construction of an orthogonal basis of
 @code{span (a)}.
 @end deftypefn
 
-@deftypefn {Loadable Function} {@var{s}} schur (@var{a})
+@deftypefn {Loadable Function} {@var{s} =} schur (@var{a})
 @deftypefnx {Loadable Function} {[@var{u}, @var{s}] =} schur (@var{a}, @var{opt})
 @cindex Schur decomposition
 The Schur decomposition is used to compute eigenvalues of a
 square matrix, and has applications in the solution of algebraic
 Riccati equations in control (see @code{are} and @code{dare}).
 @code{schur} always returns
 @iftex
 @tex
diff --git a/doc/interpreter/matrix.texi b/doc/interpreter/matrix.texi
--- a/doc/interpreter/matrix.texi
+++ b/doc/interpreter/matrix.texi
@@ -300,17 +300,17 @@ matrix must match the total number of el
 
 @deftypefn {Function File} {} shift (@var{x}, @var{b})
 If @var{x} is a vector, perform a circular shift of length @var{b} of
 the elements of @var{x}.
 
 If @var{x} is a matrix, do the same for each column of @var{x}.
 @end deftypefn
 
-@deftypefn {Loadable Function} {[s, i] =} sort (@var{x})
+@deftypefn {Loadable Function} {[@var{s}, @var{i}] =} sort (@var{x})
 Returns a copy of @var{x} with the elements elements arranged in
 increasing order.  For matrices, @code{sort} orders the elements in each
 column.
 
 For example,
 
 @example
 @group
@@ -360,17 +360,17 @@ a (i, :)
      @result{}  3  1
          1  2
          2  3
 @end group
 @end example
 
 @deftypefn {Function File} {} tril (@var{a}, @var{k})
 @deftypefnx {Function File} {} triu (@var{a}, @var{k})
-Return a new matrix form by extracting extract the lower (@code{tril})
+Return a new matrix formed by extracting extract the lower (@code{tril})
 or upper (@code{triu}) triangular part of the matrix @var{a}, and
 setting all other elements to zero.  The second argument is optional,
 and specifies how many diagonals above or below the main diagonal should
 also be set to zero.
 
 The default value of @var{k} is zero, so that @code{triu} and
 @code{tril} normally include the main diagonal as part of the result
 matrix.
diff --git a/doc/interpreter/stats.texi b/doc/interpreter/stats.texi
--- a/doc/interpreter/stats.texi
+++ b/doc/interpreter/stats.texi
@@ -29,17 +29,17 @@ in a row vector.
 @deftypefn {Function File} {} median (@var{x})
 If @var{x} is a vector, compute the median value of the elements of
 @var{x}.
 @iftex
 @tex
 $$
 {\rm median} (x) =
   \cases{x(\lceil N/2\rceil), & $N$ odd;\cr
-          (x(N/2)+x((N/2)+1))/2, & $N$ even.}
+          (x(N/2)+x(N/2+1))/2, & $N$ even.}
 $$
 @end tex
 @end iftex
 @ifinfo
 
 @example
 @group
             x(ceil(N/2)),             N odd
@@ -69,25 +69,25 @@ of @var{x}.
 std (x) = sqrt (sumsq (x - mean (x)) / (n - 1))
 @end group
 @end example
 @end ifinfo
 If @var{x} is a matrix, compute the standard deviation for
 each column and return them in a row vector.
 @end deftypefn
 
-@deftypefn {Function File} {} cov (@var{x} [, @var{y}])
+@deftypefn {Function File} {} cov (@var{x}, @var{y})
 If each row of @var{x} and @var{y} is an observation and each column is
 a variable, the (@var{i},@var{j})-th entry of
 @code{cov (@var{x}, @var{y})} is the covariance between the @var{i}-th
 variable in @var{x} and the @var{j}-th variable in @var{y}.  If called
 with one argument, compute @code{cov (@var{x}, @var{x})}.
 @end deftypefn
 
-@deftypefn {Function File} {} corrcoef (@var{x} [, @var{y}])
+@deftypefn {Function File} {} corrcoef (@var{x}, @var{y})
 If each row of @var{x} and @var{y} is an observation and each column is
 a variable, the (@var{i},@var{j})-th entry of
 @code{corrcoef (@var{x}, @var{y})} is the correlation between the
 @var{i}-th variable in @var{x} and the @var{j}-th variable in @var{y}.
 If called with one argument, compute @code{corrcoef (@var{x}, @var{x})}.
 @end deftypefn
 
 @deftypefn {Function File} {} kurtosis (@var{x})
@@ -117,17 +117,17 @@ Returns Mahalanobis' D-square distance b
 (columns), but may have a different number of observations (rows).
 @end deftypefn
 
 @deftypefn {Function File} {} skewness (@var{x})
 If @var{x} is a vector of length @var{N}, return the skewness
 @iftex
 @tex
 $$
-{\rm skewness} (x) = {1\over N \sigma(x)^3} \sum_{i=1}^N (x_i)-\bar{x})^3
+{\rm skewness} (x) = {1\over N \sigma(x)^3} \sum_{i=1}^N (x_i-\bar{x})^3
 $$
 @end tex
 @end iftex
 @ifinfo
 
 @example
 skewness (x) = N^(-1) std(x)^(-3) sum ((x - mean(x)).^3)
 @end example
diff --git a/doc/interpreter/strings.texi b/doc/interpreter/strings.texi
--- a/doc/interpreter/strings.texi
+++ b/doc/interpreter/strings.texi
@@ -149,45 +149,45 @@ setstr ([97, 98, 99])
 @deftypefn {Function File} {} strcat (@var{s1}, @var{s2}, @dots{})
 Return a string containing all the arguments concatenated.  For example,
 
 @example
 @group
 s = [ "ab"; "cde" ]
 strcat (s, s, s)
 
-     @result{}  "ab ab ab "
-         "cdecdecde"
+     @result{} "ab ab ab "
+        "cdecdecde"
 @end group
 @end example
 @end deftypefn
 
 @defvr {Built-in Variable} string_fill_char
 The value of this variable is used to pad all strings in a string matrix
 to the same length.  It should be a single character.  The default value
 is @code{" "} (a single space).  For example,
 
 @example
 @group
 string_fill_char = "X";
 [ "these"; "are"; "strings" ]
      @result{} "theseXX"
-     @result{} "areXXXX"
-     @result{} "strings"
+        "areXXXX"
+        "strings"
 @end group
 @end example
 @end defvr
 
 @deftypefn {Function File} {} str2mat (@var{s_1}, @dots{}, @var{s_n})
 Returns a matrix containing the strings @var{s_1}, @dots{}, @var{s_n} as
 its rows.  Each string is padded with blanks in order to form a valid
 matrix.
 
 @strong{Note:}
-This function is modelled after @sc{MATLAB}.  In Octave, you can create
+This function is modelled after @sc{Matlab}.  In Octave, you can create
 a matrix of strings by @code{[@var{s_1}; @dots{}; @var{s_n}]} even if
 the strings are not all the same length.
 @end deftypefn
 
 @deftypefn {Built-in Function} {} isstr (@var{a})
 Return 1 if @var{a} is a string.  Otherwise, return 0.
 @end deftypefn
 
diff --git a/doc/interpreter/system.texi b/doc/interpreter/system.texi
--- a/doc/interpreter/system.texi
+++ b/doc/interpreter/system.texi
@@ -117,17 +117,17 @@ gmtime (time ())
 @end deftypefn
 
 @deftypefn {Loadable Function} {} localtime (@var{t})
 Given a value returned from time (or any nonnegative integer),
 return a time structure corresponding to the local time zone.
 
 @example
 @group
-locatltime (time ())
+localtime (time ())
      @result{} @{
            usec = 0
            year = 97
            mon = 1
            mday = 17
            sec = 6
            zone = CST
            min = 15
@@ -136,18 +136,18 @@ locatltime (time ())
            isdst = 0
            yday = 47
          @}
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Loadable Function} {} mktime (@var{tm_struct})
-Convert a time structure to the number of seconds since the epoch.  For
-example,
+Convert a time structure corresponding to the local time to the number
+of seconds since the epoch.  For example,
 
 @example
 @group
 mktime (localtime (time ())
      @result{} 856163706
 @end group
 @end example
 @end deftypefn
@@ -853,17 +853,17 @@ error message.
 Create a pipe and return the vector @var{file_ids}, which corresponding
 to the reading and writing ends of the pipe.
 
 If successful, @var{err} is 0 and @var{msg} is an empty string.
 Otherwise, @var{err} is nonzero and @var{msg} contains a
 system-dependent error message.
 @end deftypefn
 
-@deftypefn {Built-in Function} {[fid, msg] =} dup2 (@var{old}, @var{new})
+@deftypefn {Built-in Function} {[@var{fid}, @var{msg}] =} dup2 (@var{old}, @var{new})
 Duplicate a file descriptor.
 
 If successful, @var{fid} is greater than zero and contains the new file
 ID.  Otherwise, @var{fid} is negative and @var{msg} contains a
 system-dependent error message.
 @end deftypefn
 
 @deftypefn {Built-in Function} {[@var{pid}, @var{msg}] =} waitpid (@var{pid}, @var{options})
@@ -1125,28 +1125,28 @@ The numeric group id.
 
 @item mem
 The members of the group.
 @end table
 
 In the descriptions of the following functions, this data structure is
 referred to as a @var{grp_struct}.
 
-@deftypefn {Loadable Function} {grp_struct =} getgrent ()
+@deftypefn {Loadable Function} {@var{grp_struct} =} getgrent ()
 Return an entry from the group database, opening it if necessary.
 Once the end of the data has been reached, @code{getgrent} returns 0.
 @end deftypefn
 
-@deftypefn {Loadable Function} {grp_struct =} getgrgid (@var{gid}).
+@deftypefn {Loadable Function} {@var{grp_struct} =} getgrgid (@var{gid}).
 Return the first entry from the group database with the group ID
 @var{gid}.  If the group ID does not exist in the database,
 @code{getgrgid} returns 0.
 @end deftypefn
 
-@deftypefn {Loadable Function} {grp_struct =} getgrnam (@var{name})
+@deftypefn {Loadable Function} {@var{grp_struct} =} getgrnam (@var{name})
 Return the first entry from the group database with the group name
 @var{name}.  If the group name does not exist in the database,
 @code{getgrname} returns 0.
 @end deftypefn
 
 @deftypefn {Loadable Function} {} setgrent ()
 Return the internal pointer to the beginning of the group database.
 @end deftypefn
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Wed Feb 26 15:46:28 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* mach-info.cc (oct_mach_info::string_to_float_format):
+	Recognize "vaxg", not "vax_g".
+
 Fri Feb 21 16:07:56 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (Array2<T>::maybe_delete_elements): Use correct
 	dimension in check for colon equivalent index.
 	* idx-vector.cc (IDX_VEC_REP::is_colon_equiv): A single-element
 	index whose value is 0 is also colon eqivalent for n == 1.
 
 	* lo-ieee.cc (octave_ieee_init): Reorder #ifdef stuff to put
diff --git a/liboctave/mach-info.cc b/liboctave/mach-info.cc
--- a/liboctave/mach-info.cc
+++ b/liboctave/mach-info.cc
@@ -180,17 +180,17 @@ oct_mach_info::string_to_float_format (c
   if (s == "native" || s == "n")
     retval = oct_mach_info::native;
   else if (s == "ieee-be" || s == "b")
     retval = oct_mach_info::ieee_big_endian;
   else if (s == "ieee-le" || s == "l")
     retval = oct_mach_info::ieee_little_endian;
   else if (s == "vaxd" || s == "d")
     retval = oct_mach_info::vax_d;
-  else if (s == "vax_g" || s == "g")
+  else if (s == "vaxg" || s == "g")
     retval = oct_mach_info::vax_g;
   else if (s == "cray" || s == "c")
     retval = oct_mach_info::cray;
   else if (s == "unknown")
     retval = oct_mach_info::unknown;
   else
     (*current_liboctave_error_handler)
       ("invalid architecture type specified");
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Wed Feb 26 16:43:31 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-stream.cc (octave_base_stream::do_scanf): Don't report an
+	error if a conversion fails or we reach EOF.
+
 Tue Feb 25 22:21:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* time.cc (strftime): increase initial buffer size.
 
 Mon Feb 24 17:49:21 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-fvc.cc (tree_builtin::eval): Enable checking for max number
 	of arguments.
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -994,35 +994,35 @@ octave_base_stream::do_scanf (scanf_form
 	      switch (elt->type)
 		{
 		case '%':
 		  {
 		    int dummy;
 
 		    is.scan (fmt, &dummy);
 		  }
-		  break;
+		break;
 
 		case 'd': case 'i': case 'o': case 'u': case 'x':
 		  {
 		    int tmp;
 
 		    do_scanf_conv (is, fmt, &tmp, mval, data, count,
 				   nr, max_size, discard);
 		  }
-		  break;
+		break;
 
 		case 'e': case 'f': case 'g':
 		  {
 		    double tmp;
 
 		    do_scanf_conv (is, fmt, &tmp, mval, data, count,
 				   nr, max_size, discard);
 		  }
-		  break;
+		break;
 
 		case 'c':
 		  is.unsetf (ios::skipws);
 		  // Fall through...
 
 		case 's':
 		  {
 		    int len = strlen (fmt);
@@ -1065,69 +1065,62 @@ octave_base_stream::do_scanf (scanf_form
 			      }
 			  }
 		      }
 
 		    delete [] tmp;
 
 		    is.setf (flags);
 		  }
-		  break;
+		break;
 
 		case 'p': case '[':
 		  error ("fscanf: unsupported format specifier");
 		  break;
 
 		default:
 		  error ("fscanf: internal format error");
 		  break;
 		}
 
 	      if (! ok ())
 		{
 		  break;
 		}
 	      else if (! is)
 		{
-		  if (is.eof ())
+		  if (nr > 0)
 		    {
-		      if (nr > 0)
+		      if (count > nr)
 			{
-			  if (count > nr)
-			    {
-			      final_nr = nr;
-			      final_nc = (count - 1) / nr + 1;
-			    }
-			  else
-			    {
-			      final_nr = count;
-			      final_nc = 1;
-			    }
+			  final_nr = nr;
+			  final_nc = (count - 1) / nr + 1;
 			}
 		      else
 			{
 			  final_nr = count;
 			  final_nc = 1;
 			}
 		    }
 		  else
 		    {
-		      error ("fscanf: read error");
-
-		      // XXX FIXME XXX -- is this the right thing to do?
-		      // What about other streams?
-		      if (name () == "stdin")
-			{
-			  is.clear ();
-
-			  // Skip to end of line.
-
-			  bool err;
-			  do_gets (-1, err, false, "fscanf");
-			}
+		      final_nr = count;
+		      final_nc = 1;
+		    }
+
+		  // XXX FIXME XXX -- is this the right thing to do?
+		  // What about other streams?
+		  if (name () == "stdin")
+		    {
+		      is.clear ();
+
+		      // Skip to end of line.
+
+		      bool err;
+		      do_gets (-1, err, false, "fscanf");
 		    }
 
 		  break;
 		}
 	    }
 	  else
 	    {
 	      error ("fscanf: internal format error");
diff --git a/test/octave.test/nonlin/nonlin.exp b/test/octave.test/nonlin/nonlin.exp
--- a/test/octave.test/nonlin/nonlin.exp
+++ b/test/octave.test/nonlin/nonlin.exp
@@ -6,14 +6,14 @@ set test fsolve-2
 set prog_output "info good\nsolution good\nvalue good"
 do_test fsolve-2.m
 
 set test fsolve_options-1
 set prog_output "ans = 1"
 do_test fsolve_options-1.m
 
 set test fsolve_options-2
-set prog_output "\n... quad_options:.*"
+set prog_output "\n... fsolve_options:.*"
 do_test fsolve_options-2.m
 
 set test fsolve_options-3
-set prog_output "\n... quad_options:.*"
+set prog_output "\n... fsolve_options:.*"
 do_test fsolve_options-3.m
diff --git a/test/octave.test/number/is_matrix-3.m b/test/octave.test/number/is_matrix-3.m
--- a/test/octave.test/number/is_matrix-3.m
+++ b/test/octave.test/number/is_matrix-3.m
@@ -1,1 +1,3 @@
-is_matrix ([])
+## Yes, this is right, is_matrix() checks for non-empty matrices.
+
+is_matrix ([]) == 0
diff --git a/test/octave.test/stats/corrcoef-1.m b/test/octave.test/stats/corrcoef-1.m
--- a/test/octave.test/stats/corrcoef-1.m
+++ b/test/octave.test/stats/corrcoef-1.m
@@ -1,4 +1,5 @@
 x = rand (10);
 cc1 = corrcoef (x);
 cc2 = corrcoef (x, x);
-size (cc1) == [10, 10] && size (cc2) == [10, 10] && abs (cc1 - cc2) < eps
+(size (cc1) == [10, 10] && size (cc2) == [10, 10]
+ && abs (cc1 - cc2) < sqrt (eps))
