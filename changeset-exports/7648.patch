# HG changeset patch
# User sh@sh-laptop
# Date 1206561320 14400
#      Wed Mar 26 15:55:20 2008 -0400
# Node ID e7b999840056a8587fdc1cce6cec3315779c2cd3
# Parent  7b382848a18fdaff7968dc2e232d0f13e20d6879
Added tests to scripts/polynomial/convn.m and allow '__convn__' to actually get N-dimensional complex data.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-03-26  Soren Hauberg  <hauberg@gmail.com>
+
+	* polynomial/convn.m: New tests.
+
 2008-03-20  Ben Abbott <bpabbott@mac.com>
 
 	* statistics/base/statistics.m: Calculate median and quantiles in
 	a manner consistent with method #7 used by GNU R.
 	* statistics/base/__quantile__.m, statistics/base/quantile.m,
 	statistics/base/prctile.m: New functions.
 	* statistics/base/Makefile.in (SOURCES): Add them to the list.
  
diff --git a/scripts/polynomial/convn.m b/scripts/polynomial/convn.m
--- a/scripts/polynomial/convn.m
+++ b/scripts/polynomial/convn.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2008 SÃ?ren Hauberg
+## Copyright (C) 2008 Soren Hauberg
 ## 
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -82,8 +82,47 @@ function a = pad (a, left, right)
   cl = class (a);
   for dim = 1:ndims (a)
     l = r = size (a);
     l(dim) = left(dim);
     r(dim) = right(dim);
     a = cat (dim, zeros (l, cl), a, zeros (r, cl));
   endfor
 endfunction
+
+%!test
+%! ## Compare to conv2
+%! a = rand (100); 
+%! b = ones (3);
+%! c2 = conv2 (a, b, "full");
+%! cn = convn (a, b, "full");
+%! assert (max (abs (cn(:)-c2(:))), 0, 100*eps);
+
+%!test
+%! ## Compare to conv2
+%! a = rand (100); 
+%! b = ones (3);
+%! c2 = conv2 (a, b, "same");
+%! cn = convn (a, b, "same");
+%! assert (max (abs (cn(:)-c2(:))), 0, 100*eps);
+
+%!test
+%! ## Compare to conv2
+%! a = rand (100); 
+%! b = ones (3);
+%! c2 = conv2 (a, b, "valid");
+%! cn = convn (a, b, "valid");
+%! assert (max (abs (cn(:)-c2(:))), 0, 100*eps);
+
+%!test
+%! ## Real data
+%! a = ones (10,10,10); 
+%! b = ones (3,3,3);
+%! c = convn (a, b, "valid");
+%! assert (all (c == numel (b)));
+
+%!test
+%! ## Complex data
+%! a = complex( ones (10,10,10), ones(10,10,10) ); 
+%! b = complex( ones (3,3,3), ones(3,3,3) );
+%! c = convn (a, b, "valid");
+%! assert (all (c == 2*i*numel (b)));
+
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-26  Soren Hauberg  <hauberg@gmail.com>
+
+	* DLD-FUNCTIONS/__convn__.cc (Fconvn):
+	Call complex_array_value to extract N-d array.
+
 2008-03-26  John W. Eaton  <jwe@octave.org>
 
 	* ov-base-sparse.cc (octave_base_sparse<T>::print_raw):
 	Also display percentage of elements that are nonzero.
 
 2008-03-25  Soren Hauberg  <hauberg@gmail.com>
 
 	* DLD-FUNCTIONS/__convn__.cc: New file.
diff --git a/src/DLD-FUNCTIONS/__convn__.cc b/src/DLD-FUNCTIONS/__convn__.cc
--- a/src/DLD-FUNCTIONS/__convn__.cc
+++ b/src/DLD-FUNCTIONS/__convn__.cc
@@ -113,18 +113,18 @@ Undocumented internal function.\n\
           const NDArray a = args (0).array_value ();
           const NDArray b = args (1).array_value ();
 
 	  if (! error_state)
 	    retval = convn<NDArray, double> (a, b);
         }
       else if (args(0).is_complex_type () && args(1).is_complex_type ())
         {
-          const ComplexNDArray a = args (0).complex_matrix_value ();
-          const ComplexNDArray b = args (1).complex_matrix_value ();
+          const ComplexNDArray a = args (0).complex_array_value ();
+          const ComplexNDArray b = args (1).complex_array_value ();
 
 	  if (! error_state)
 	    retval = convn<ComplexNDArray, Complex> (a, b);
         }
       else
 	error ("__convn__: first and second input should be real, or complex arrays");
     }
   else
