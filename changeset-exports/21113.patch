# HG changeset patch
# User Rik <rik@octave.org>
# Date 1453247888 28800
#      Tue Jan 19 15:58:08 2016 -0800
# Node ID 2bbbbb96f631aada05500e9ad9673a461e0c8785
# Parent  358aa7fcbd33a75258035afdc0c74ce4acc4f1c4
ov-complex.cc: Incorporate gripe_complex_index into calling fcn.

* ov-complex.cc (gripe_complex_index): Delete function.
* ov-complex.cc (octave_complex::index_vector): Incorporate gripe_complex_index
code into function.

diff --git a/libinterp/octave-value/ov-complex.cc b/libinterp/octave-value/ov-complex.cc
--- a/libinterp/octave-value/ov-complex.cc
+++ b/libinterp/octave-value/ov-complex.cc
@@ -74,26 +74,16 @@ public:
 
   // ID of error to throw.
   const char *err_id (void) const
   {
     return "Octave:invalid-index";
   }
 };
 
-static void
-gripe_complex_index (const Complex& idx)
-{
-  std::ostringstream buf;
-  buf << std::real (idx) << std::showpos << std::imag (idx) << "i";
-  complex_index_exception e (buf.str ());
-
-  throw e;
-}
-
 static octave_base_value *
 default_numeric_demotion_function (const octave_base_value& a)
 {
   CAST_CONV_ARG (const octave_complex&);
 
   return new octave_float_complex (v.float_complex_value ());
 }
 
@@ -131,22 +121,25 @@ octave_complex::do_index_op (const octav
   // 1x1 matrix back to a scalar value.  Need a better solution
   // to this problem.
 
   octave_value tmp (new octave_complex_matrix (complex_matrix_value ()));
 
   return tmp.do_index_op (idx, resize_ok);
 }
 
+// Can't make an index_vector from a complex number.  Throw an error.
 idx_vector
 octave_complex::index_vector (bool) const
 {
-  gripe_complex_index (scalar);
+  std::ostringstream buf;
+  buf << std::real (scalar) << std::showpos << std::imag (scalar) << "i";
+  complex_index_exception e (buf.str ());
 
-  return idx_vector ();
+  throw e;
 }
 
 double
 octave_complex::double_value (bool force_conversion) const
 {
   double retval;
 
   if (! force_conversion)
