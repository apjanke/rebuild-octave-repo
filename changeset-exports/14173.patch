# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1326077943 28800
#      Sun Jan 08 18:59:03 2012 -0800
# Branch stable
# Node ID 47a5e29ecc0b0250562629874a2f4ff006fe8637
# Parent  cba1c681f1b7281c3d31a4c1f633a5eb05bda18a
Allow QuantumDepth=32 installations of Magick++ (Bug #35229)

__magick_read__.cc: Use uint64_t in expression because default
32-bit value overflows when QuantumDepth=32.

diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -207,17 +207,18 @@ read_images (const std::vector<Magick::I
   dim_vector idim = dim_vector ();
   idim.resize (4);
   idim(0) = rows;
   idim(1) = columns;
   idim(2) = 1;
   idim(3) = nframes;
 
   Magick::ImageType type = imvec[0].type ();
-  const int divisor = (((1 << QuantumDepth) - 1) / ((1 << depth) - 1));
+  const int divisor = ((uint64_t (1) << QuantumDepth) - 1) / 
+                      ((uint64_t (1) << depth) - 1);
 
   switch (type)
     {
     case Magick::BilevelType:
     case Magick::GrayscaleType:
       {
         im = T (idim);
         P *vec = im.fortran_vec ();
