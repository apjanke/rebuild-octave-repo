# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1228379237 -3600
#      Thu Dec 04 09:27:17 2008 +0100
# Node ID 584d9e80556bbbf7d30ea98739395c314be46de3
# Parent  c72c1c9bccdcd58ecfaa031727d2c3eedab25553
add missing delete

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2008-12-04  Jaroslav Hajek  <highegg@gmail.com>
+
+	* idx-vector.cc (idx-vector::complement): Add missing delete.
+
 2008-12-04  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dbleQRP.cc (QRP::QRP): Call DGEQP3 rather than DGEQPF.
 	* floatQRP.cc (FloatQRP::FloatQRP): Call SGEQP3 rather than SGEQPF.
 	* CmplxQRP.cc (ComplexQRP::ComplexQRP): Call ZGEQP3 rather than ZGEQPF.
 	* fCmplxQRP.cc (FloatComplexQRP::FloatComplexQRP): Call CGEQP3 rather than CGEQPF.
 
 2008-12-03  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -517,16 +517,18 @@ idx_vector::complement (octave_idx_type 
           left[k] = false;
           cnt--;
         }
     }
 
   octave_idx_type len = cnt, *data = new octave_idx_type[len];
   for (octave_idx_type i = 0, j = 0; i < n; i++)
     if (left[i]) data[j++] = i;
+  
+  delete left;
 
   return new idx_vector_rep (data, len, 
                              len ? data[len-1]+1 : 0, 
                              dim_vector (1, len), DIRECT);
 }
 
 bool
 idx_vector::is_permutation (octave_idx_type n) const
