# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1287934390 25200
#      Sun Oct 24 08:33:10 2010 -0700
# Node ID 3ddf14b8196f0c4c58cd2c4bb549a401f993d0a7
# Parent  39ae406df5989689dfa447749ca7a4e154eb8a97
New verification script, mk_undocumented_list, produces a list of undocumented functions.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-24  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/doccheck/mk_undocumented_list: New verification
+	script produces a list of undocumented functions.
+
 2010-10-23  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/io.txi (Simple File I/O): Document textscan and
 	textread.
 
 2010-10-23  Ben Abbott  <bpabbott@mac.com>
 
 	* interpreter/strings.txi: Add @DOCSTRING(strread).
diff --git a/doc/interpreter/doccheck/README b/doc/interpreter/doccheck/README
--- a/doc/interpreter/doccheck/README
+++ b/doc/interpreter/doccheck/README
@@ -1,37 +1,41 @@
 ################################################################################
                                    README
                              doccheck directory
 ################################################################################
 This directory contains scripts and data for validating Octave's Texinfo
 documentation.  These scripts are internal developer tools for ensuring 
 consistent documentation formats and avoiding misspellings.
 
-The scripts provide two services:
+The scripts provide 3 services:
 
 1) A spellchecker, built atop GNU Aspell with a private dictionary of keywords
    specific to Octave.
 
 2) A grammarchecker designed from scratch in Perl to ensure a common format
-   for Octave documentation and make use of as many features of Texinfo as 
+   for Octave documentation and to make use of as many features of Texinfo as 
    possible.
 
+3) A list of undocumented functions, i.e, those missing an @DOCSTRING reference
+   in the .txi files.
 
 ################################################################################
                                    FILES
 ################################################################################
 spellcheck : script to spellcheck a single .texi file.
 aspell.conf: Octave-specific configuration file for Aspell.
 aspell-octave.en.pws : private dictionary of Octave keywords for Aspell.
 add_to_aspell_dict : script to add new words to the private Octave dictionary.
 
 grammarcheck : Perl script to check Octave Texinfo documentation in a single
                m-file(.m), C++ file(.cc), or Texinfo file(.txi, .texi).
 
+mk_undocumented_list : Perl script to make undocumented function list
+
 ################################################################################
                                    USAGE
 ################################################################################
 
 SPELLING:
 
 From the doc/interpreter/ directory, type 'doccheck/spellcheck FILENAME.texi'.
 This will produce a list of misspelled words on stdout.
@@ -69,8 +73,17 @@ in the en_US locale is Center.  This wor
 which can be added to the private dictionary.  Instead the source is marked up:
 Manchester @nospell{Centre} for Computational Mathematics.
 
 Now Aspell no longer reports any misspellings for linalg.texi.
 
 GRAMMAR:
 
 To be added
+
+UNDOCUMENTED:
+
+From the doc/interpreter/ directory, type 'doccheck/mk_undocumented_list'.
+This will produce a list of undocumented functions on stdout.  
+
+Functions which don't require an @DOCSTRING reference can be added to the list
+of exceptions at the bottom of the mk_undocumented_list script.
+
diff --git a/doc/interpreter/doccheck/mk_undocumented_list b/doc/interpreter/doccheck/mk_undocumented_list
new file mode 100755
--- /dev/null
+++ b/doc/interpreter/doccheck/mk_undocumented_list
@@ -0,0 +1,130 @@
+#!/usr/bin/perl -w
+
+################################################################################
+# Get a list from Octave of all visible functions
+@octave_output = <<`_END_OCT_SCRIPT_`;
+../../run-octave --norc --silent --no-history --eval '\
+ funclist  = vertcat (__list_functions__ , __builtins__) \
+ disp("#!-separator-!#") \
+ where = cellfun (\@which, funclist, \"UniformOutput\", 0)' 
+_END_OCT_SCRIPT_
+
+die "Unable to invoke 'run-octave'.  Exiting\n" unless (@octave_output);
+
+################################################################################
+# Winnow list of functions that require a DOCSTRING
+
+$idx = 0;
+while (($_ = $octave_output[$idx++]) !~ /^#!-separator-!#$/)
+{
+   push(@all_functions, $1) if (/] = (\w+)$/);
+}
+while ($_ = $octave_output[$idx++])
+{
+   push(@where, $1) if (/] = (\S*)$/);
+}
+
+# Remove deprecated functions from the list of features requiring a DOCSTRING  
+FUNC: foreach $idx (0 .. $#where)
+{
+   next FUNC if ($where[$idx] =~ /deprecated/i);
+
+   push (@functions, $all_functions[$idx]); 
+}
+
+# Remove internal functions from the list of features requiring a DOCSTRING  
+@functions = grep (! /^__/, @functions);
+
+# Load list of function exceptions not requiring a DOCSTRING
+# Exception data is stored at the bottom of this script
+map { chomp, $exceptions{$_}=1; } <DATA>;
+
+# Remove exception data from the list of features requiring a DOCSTRING
+@functions = grep (! $exceptions{$_}, @functions);
+
+################################################################################
+# Get a list of all documented functions
+foreach $txi_file (glob("*.txi"))
+{
+   open(TXI_FILE, $txi_file) or die "Unable to open $txi_file for reading\n";
+   while (<TXI_FILE>)
+   {
+      $docstrings{$1} = 1 if (/\@DOCSTRING\((\w+)\)/) ;
+   }
+}
+
+################################################################################
+# Find features which have not been documented in the txi files
+@undocumented = grep (! $docstrings{$_}, @functions);
+
+# Exit successfully if no undocumented functions
+exit(0) if (! @undocumented);
+
+$, = "\n";  # Set output record separator
+print sort(@undocumented);
+exit(1);
+
+################################################################################
+# Exception list of functions not requiring a DOCSTRING
+################################################################################
+__DATA__
+angle
+bessel
+besselh
+besseli
+besselk
+bessely
+build_bc_overloads_expected
+chdir
+comma
+debug
+exit
+fntests
+gammaln
+geometryimages
+i
+inf
+interpimages
+inverse
+j
+J
+lower
+nan
+paren
+plotimages
+SEEK_CUR
+SEEK_END
+semicolon
+setenv
+sparseimages
+tbcover
+test_args
+test_bc_overloads
+test_classes
+test_contin
+test_diag_perm
+test_error
+test_for
+test_func
+test_global
+test_if
+test_io
+test_null_assign
+test_prefer
+test_range
+test_recursion
+test_return
+test_slice
+test_sparse
+test_string
+test_struct
+test_switch
+test_system
+test_transpose
+test_try
+test_unwind
+test_while
+toc
+triu
+unimplemented
+upper
