# HG changeset patch
# User John Donoghue
# Date 1397679585 14400
#      Wed Apr 16 16:19:45 2014 -0400
# Branch gui-release
# Node ID 992b6354c8c62fc85adb012a6779c1cce7256a5e
# Parent  7cb98e81ecd132899f705034c4d12a696ec83ef9
GUI: implement file drag and drop to command and edit window (Bug #41443)

* libgui/src/m-editor/file-editor.h, ibgui/src/m-editor/file-editor.cpp
  (file_editor::file_editor): call setAcceptDrops.
  (file_editor::dragEnterEvent): New function.
  (file_editor::dropEvent): New function.

* libgui/qterminal/libqterminal/unix/TerminalView.cpp
  (TerminalView::dropEvent): get URL names on drop event.

diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -2615,16 +2615,27 @@ void TerminalView::dragEnterEvent(QDragE
     event->acceptProposedAction();
 }
 
 void TerminalView::dropEvent(QDropEvent* event)
 {
   //  KUrl::List urls = KUrl::List::fromMimeData(event->mimeData());
 
   QString dropText;
+
+  if (event->mimeData ()->hasUrls ())
+  {
+    foreach (QUrl url, event->mimeData ()->urls ())
+    {
+      if(dropText.length () > 0) 
+        dropText += "\n";
+      dropText  += url.toLocalFile ();
+    }
+  }
+
   /*  if (!urls.isEmpty())
   {
     for ( int i = 0 ; i < urls.count() ; i++ )
     {
         KUrl url = KIO::NetAccess::mostLocalUrl( urls[i] , 0 );
         QString urlText;
 
         if (url.isLocalFile())
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -51,16 +51,18 @@ file_editor::file_editor (QWidget *p)
 {
   // Set current editing directory before construct because loaded
   // files will change ced accordingly.
   ced = QDir::currentPath ();
 
   construct ();
 
   setVisible (false);
+
+  setAcceptDrops(true);
 }
 
 file_editor::~file_editor (void)
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // Have all file editor tabs signal what their file names are.
   editor_tab_map.clear ();
@@ -1750,9 +1752,30 @@ void
 file_editor::handle_visibility (bool visible)
   {
     empty_script (false, visible);
 
     if (visible && ! isFloating ())
       focus ();
   }
 
+void 
+file_editor::dragEnterEvent (QDragEnterEvent *event)
+  {
+    if (event->mimeData ()->hasUrls ())
+      {
+        event->acceptProposedAction();
+      }
+  }
+
+void
+file_editor::dropEvent (QDropEvent *event)
+  {
+    if (event->mimeData ()->hasUrls ())
+      {
+        foreach (QUrl url, event->mimeData ()->urls ())
+        {
+          request_open_file (url.toLocalFile ());
+        }
+      }
+  }
+
 #endif
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -25,16 +25,19 @@ along with Octave; see the file COPYING.
 
 #include <QToolBar>
 #include <QAction>
 #include <QMenuBar>
 #include <QStatusBar>
 #include <QCloseEvent>
 #include <QTabWidget>
 
+#include <QDragEnterEvent>
+#include <QDropEvent>
+
 #include <map>
 
 #include "file-editor-interface.h"
 #include "file-editor-tab.h"
 
 class file_editor : public file_editor_interface
 {
   Q_OBJECT
@@ -200,16 +203,21 @@ private slots:
   void request_preferences (bool);
   void request_styles_preferences (bool);
   void restore_create_file_setting ();
 
   void zoom_in (bool);
   void zoom_out (bool);
   void zoom_normal (bool);
 
+protected:
+
+  void dragEnterEvent(QDragEnterEvent *event);
+  void dropEvent(QDropEvent *event);
+  
 private:
 
   bool is_editor_console_tabbed ();
   void construct (void);
   void add_file_editor_tab (file_editor_tab *f, const QString& fn);
   void save_file_as (QWidget *fetabID = 0);
   void mru_menu_update (void);
   bool call_custom_editor (const QString& file_name = QString (), int line = -1);
