# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1380218143 14400
#      Thu Sep 26 13:55:43 2013 -0400
# Node ID 55680de6a8976d167c9bb8a0a967e82468cabeae
# Parent  b66f068e4468216a52f12029e86fbd3cb098045b
make fltk the default graphics toolkit

* graphics.h.in (figure::properties): Use gtk_manager::default_toolkit
to set initial value.
* graphics.cc (gtk_manager::gtk_manager): Move here from graphics.h.in.
Set dtk to "fltk" if HAVE_FLTK, otherwise set it to "gnuplot".

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -12,16 +12,26 @@ Summary of important user-visible change
     states that are set locally affect the current function and all
     functions called from the current scope.  The previous warning state
     is restored on return from the current function.  The "local"
     option is ignored if used in the top-level workspace.
 
 Summary of important user-visible changes for version 3.8:
 ---------------------------------------------------------
 
+ ** Octave now uses OpenGL graphics by default with FLTK widgets.  If
+    OpenGL libraries or FLTK widgets are not available when Octave is
+    built, gnuplot is used.  You may also choose to use gnuplot for
+    graphics by executing the command
+
+      graphics_toolkit ("gnuplot")
+
+    Adding this command to your ~/.octaverc file will set the default
+    for each session.
+
  ** Octave now supports nested functions with scoping rules that are
     compatible with Matlab.  A nested function is one declared and defined
     within the body of another function.  The nested function is only
     accessible from within the enclosing function which makes it one
     method for making private functions whose names do not conflict with those
     in the global namespace (See also subfunctions and private functions).
     In addition, variables in the enclosing function are visible within the
     nested function.  This makes it possible to have a pseudo-global variable
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9496,16 +9496,26 @@ Internal function: returns the pixel siz
   else
     print_usage ();
 
   return retval;
 }
 
 gtk_manager *gtk_manager::instance = 0;
 
+gtk_manager::gtk_manager (void)
+  : dtk (), available_toolkits (), loaded_toolkits ()
+{
+#if defined (HAVE_FLTK)
+  dtk = "fltk";
+#else
+  dtk = "gnuplot";
+#endif
+}
+
 void
 gtk_manager::create_instance (void)
 {
   instance = new gtk_manager ();
 
   if (instance)
     singleton_cleanup_list::add (cleanup_instance);
 }
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -2356,20 +2356,17 @@ public:
 
   static std::string default_toolkit (void)
   {
     return instance_ok () ? instance->do_default_toolkit () : std::string ();
   }
 
 private:
 
-  // FIXME: default toolkit should be configurable.
-
-  gtk_manager (void)
-    : dtk ("gnuplot"), available_toolkits (), loaded_toolkits () { }
+  gtk_manager (void);
 
   ~gtk_manager (void) { }
 
   OCTINTERP_API static void create_instance (void);
 
   static bool instance_ok (void)
   {
     bool retval = true;
@@ -3453,17 +3450,17 @@ public:
       radio_property windowstyle , "{normal}|modal|docked"
       string_property wvisual , ""
       radio_property wvisualmode , "{auto}|manual"
       string_property xdisplay , ""
       string_property xvisual , ""
       radio_property xvisualmode , "{auto}|manual"
       // Octave-specific properties
       bool_property __enhanced__ h , "on"
-      string_property __graphics_toolkit__ s , "gnuplot"
+      string_property __graphics_toolkit__ s , gtk_manager::default_toolkit ()
       any_property __guidata__ h , Matrix ()
       any_property __plot_stream__ h , Matrix ()
     END_PROPERTIES
 
   protected:
     void init (void)
       {
         colormap.add_constraint (dim_vector (-1, 3));
