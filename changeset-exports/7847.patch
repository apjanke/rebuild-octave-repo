# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1204120740 -3600
#      Wed Feb 27 14:59:00 2008 +0100
# Node ID 40b16e04172a4e62ad86ab60c16f8e730fc015ea
# Parent  d7737a4268b7da229a8621d3648dfc73100340e5
Make backend switching work.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -22,16 +22,24 @@ 2008-06-04  Shai Ayal  <shaiay@users.sou
 
 	* graphics.h.in (axes::properties::update_xlim): call the new
 	axes::properties::calc_ticks_and_lims method
 	(axes::properties::update_ylim): ditto
 	(axes::properties::update_zlim): ditto
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
+	* graphics.h.in (root_figure::get_default): Use factory defaults when
+	no explicit default value exists.
+	(figure::properties::set___backend__): Reset __plot_stream__ to empty
+	value.
+	* graphics.cc (gh_manager::gh_manager): Call
+	graphics_backend::default_backend to make sure the default backend is
+	initialized.
+
 	* graphics.h.in (patch::properties::edgealpha,
 	surface::properties::facealpha, surface::properties::edgealpha): Fix
 	typos in property names.
 
 	* graphics.h.in (class double_radio_property): New property class for
 	holding face/edge alpha values.
 	(patch::properties::facealpha, patch::properties::edgealpha,
 	surface::properties::facealpha, surface::properties::edgealpha): Use
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2975,16 +2975,19 @@ base_graphics_object::get_factory_defaul
 
 // We use a random value for the handle to avoid issues with plots and
 // scalar values for the first argument.
 gh_manager::gh_manager (void)
   : handle_map (), handle_free_list (),
     next_handle (-1.0 - (rand () + 1.0) / (RAND_MAX + 2.0))
 {
   handle_map[0] = graphics_object (new root_figure ());
+
+  // Make sure the default backend is registered.
+  graphics_backend::default_backend ();
 }
 
 graphics_handle
 gh_manager::do_make_graphics_handle (const std::string& go_name,
 				     const graphics_handle& p, bool do_createfcn)
 {
   graphics_handle h = get_handle (go_name);
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2205,17 +2205,23 @@ public:
     return retval;
   }
 
   octave_value get_default (const caseless_str& name) const
   {
     octave_value retval = default_properties.lookup (name);
 
     if (retval.is_undefined ())
-      error ("get: invalid default property `%s'", name.c_str ());
+      {
+	// no default property found, use factory default
+	retval = factory_properties.lookup (name);
+
+	if (retval.is_undefined ())
+	  error ("get: invalid default property `%s'", name.c_str ());
+      }
 
     return retval;
   }
 
   octave_value get_factory_default (const caseless_str& name) const
   {
     octave_value retval = factory_properties.lookup (name);
 
@@ -2269,16 +2275,17 @@ public:
 	return backend;
       }
 
     void set_backend (const graphics_backend& b) 
     { 
       close (false);
       backend = b; 
       __backend__ = b.get_name ();
+      __plot_stream__ = Matrix ();
       mark_modified ();
     }
 
     void set___backend__ (const octave_value& val)
     {
       if (! error_state)
 	{
 	  if (val.is_string ())
