# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1467924937 25200
#      Thu Jul 07 13:55:37 2016 -0700
# Node ID a5a99a830c8c1d8ae46442048d15b91b6189feaf
# Parent  43646269998d7eaa1667c0c92f551c1511b0cb86
Set default floating point unit state when initializing the interpreter (bug #48418)

* octave.cc (octave_initialize_interpreter): Call octave_set_default_fpucw.
Fixes floating point calculation precision errors on Windows 32-bit systems.

diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -33,16 +33,17 @@ along with Octave; see the file COPYING.
 #include <ctime>
 
 #include <iostream>
 
 #include "cmd-edit.h"
 #include "f77-fcn.h"
 #include "file-ops.h"
 #include "file-stat.h"
+#include "fpucw-wrappers.h"
 #include "getopt-wrapper.h"
 #include "lo-error.h"
 #include "oct-env.h"
 #include "str-vec.h"
 #include "signal-wrappers.h"
 #include "unistd-wrappers.h"
 
 #include "build-env.h"
@@ -777,16 +778,19 @@ void
 octave_initialize_interpreter (int argc, char **argv, int embedded)
 {
   // Matlab uses "C" locale for LC_NUMERIC class regardless of local setting
   setlocale (LC_NUMERIC, "C");
   setlocale (LC_TIME, "C");
   octave::sys::env::putenv ("LC_NUMERIC", "C");
   octave::sys::env::putenv ("LC_TIME", "C");
 
+  // Initialize the default floating point unit control state
+  octave_set_default_fpucw ();
+
   octave_embedded = embedded;
 
   octave::sys::env::set_program_name (argv[0]);
 
   octave_program_invocation_name = octave::sys::env::get_program_invocation_name ();
   octave_program_name = octave::sys::env::get_program_name ();
 
   octave_thread::init ();
