# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1214390792 -7200
#      Wed Jun 25 12:46:32 2008 +0200
# Node ID 92c26470fe56d7ec36f9ff041221ce07f51be9a4
# Parent  f1a1f6dd7fac4a6d98932571657d19bbd7b3dc0a
Frats fix for nargin==0

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -65,16 +65,20 @@ 2008-06-11  John W. Eaton  <jwe@octave.o
 	(octave_value::is_streamoff): Delete.
 	* ov.cc (install_types): Don't register streamoff type.
 	* ov-streamoff.h, ov-streamoff.cc, OPERATORS/op-streamoff.cc: Delete.
 	* Makefile.in: Delete them from the lists.
 
 	* error.cc (verror): Restore newline in msg_string.  Stripping
 	"error: " prefix when buffering error messages is no longer neeed.
 
+2008-06-25  David Bateman  <dbateman@free.fr>
+
+	* pr-output.cc (Frats): Print usage if nargin == 0.
+	
 2008-06-10  John W. Eaton  <jwe@octave.org>
 
 	* mexproto.h (mxCreateLogicalScalar): Declar arg as mxLogical, not int.
 
 2008-06-09  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (execute_callback): Pass CB by const reference and
 	explicitly make a copy.
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -2761,28 +2761,30 @@ The optional second argument defines the
 representing the elements of @var{x}. By default @var{len} is 9.\n\
 @seealso{format, rat}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
-  unwind_protect::begin_frame ("Frats");
-
-  unwind_protect_int (rat_string_len);
-
-  rat_string_len = 9;
-
-  if (nargin == 2)
-    rat_string_len = args(1).nint_value ();
-
-  if (! error_state)
+  if (nargin < 1 || nargin > 2 || nargout > 1)
+    print_usage ();
+  else
     {
-      if (nargin < 3 && nargout < 2)
+      unwind_protect::begin_frame ("Frats");
+
+      unwind_protect_int (rat_string_len);
+
+      rat_string_len = 9;
+
+      if (nargin == 2)
+	rat_string_len = args(1).nint_value ();
+
+      if (! error_state)
 	{
 	  octave_value arg = args(0);
 
 	  if (arg.is_numeric_type ())
 	    {
 	      unwind_protect_bool (rat_format);
 
 	      rat_format = true;
@@ -2812,22 +2814,20 @@ representing the elements of @var{x}. By
 		    }
 		}
 
 	      retval = string_vector (lst);
 	    }
 	  else
 	    error ("rats: expecting numeric input");
 	}
-      else
-	print_usage ();
+
+      unwind_protect::run_frame ("Frats");
     }
 
-  unwind_protect::run_frame ("Frats");
-
   return retval;
 }
 
 DEFUN (disp, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} disp (@var{x})\n\
 Display the value of @var{x}.  For example,\n\
 \n\
