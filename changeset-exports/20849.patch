# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1449931477 18000
#      Sat Dec 12 09:44:37 2015 -0500
# Node ID 994c0859ab8bf05d4dde7b35611549b4b04927ea
# Parent  56d36905893f53bb5469fd5761675af8977c1307
maint: Refactor C++ calls to print_usage to resemble m-files (2015 code sprint)

* octave.cc (Ffopen): (F__version_info__, Fisguirunning, Fargv,
Fprogram_invocation_name, Fprogram_name): Move nargin checking to the top of
the function.

diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -206,16 +206,19 @@ Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   static octave_map vinfo;
 
   int nargin = args.length ();
 
+  if (nargin != 0 && nargin != 4)
+    print_usage ();
+
   if (nargin == 4)
     {
       if (vinfo.nfields () == 0)
         {
           vinfo.assign ("Name", args (0));
           vinfo.assign ("Version", args (1));
           vinfo.assign ("Release", args (2));
           vinfo.assign ("Date", args (3));
@@ -231,18 +234,16 @@ Undocumented internal function.\n\
           vinfo.assign (idx, "Name", Cell (octave_value (args (0))));
           vinfo.assign (idx, "Version", Cell (octave_value (args (1))));
           vinfo.assign (idx, "Release", Cell (octave_value (args (2))));
           vinfo.assign (idx, "Date", Cell (octave_value (args (3))));
         }
     }
   else if (nargin == 0)
     retval = vinfo;
-  else
-    print_usage ();
 
   return retval;
 }
 
 static void
 initialize_version_info (void)
 {
   octave_value_list args;
@@ -1011,21 +1012,21 @@ DEFUN (isguirunning, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isguirunning ()\n\
 Return true if Octave is running in GUI mode and false otherwise.\n\
 @seealso{have_window_system}\n\
 @end deftypefn")
 {
   octave_value retval;
 
-  if (args.length () == 0)
-    retval = start_gui;
-  else
+  if (args.length () != 0)
     print_usage ();
 
+  retval = start_gui;
+
   return retval;
 }
 
 /*
 %!assert (islogical (isguirunning ()))
 %!error isguirunning (1)
 */
 
@@ -1046,21 +1047,21 @@ octave --no-line-editing --silent\n\
 \n\
 If you write an executable Octave script, @code{argv} will return the list\n\
 of arguments passed to the script.  @xref{Executable Octave Programs}, for\n\
 an example of how to create an executable Octave script.\n\
 @end deftypefn")
 {
   octave_value retval;
 
-  if (args.length () == 0)
-    retval = Cell (octave_argv);
-  else
+  if (args.length () != 0)
     print_usage ();
 
+  retval = Cell (octave_argv);
+
   return retval;
 }
 
 /*
 %!assert (iscellstr (argv ()))
 %!error argv (1)
 */
 
@@ -1073,21 +1074,21 @@ If executing a script from the command l
 or using an executable Octave script, the program name is set to the\n\
 name of the script.  @xref{Executable Octave Programs}, for an example of\n\
 how to create an executable Octave script.\n\
 @seealso{program_name}\n\
 @end deftypefn")
 {
   octave_value retval;
 
-  if (args.length () == 0)
-    retval = octave_program_invocation_name;
-  else
+  if (args.length () != 0)
     print_usage ();
 
+  retval = octave_program_invocation_name;
+
   return retval;
 }
 
 /*
 %!assert (ischar (program_invocation_name ()))
 %!error program_invocation_name (1)
 */
 
@@ -1096,20 +1097,20 @@ DEFUN (program_name, args, ,
 @deftypefn {Built-in Function} {} program_name ()\n\
 Return the last component of the value returned by\n\
 @code{program_invocation_name}.\n\
 @seealso{program_invocation_name}\n\
 @end deftypefn")
 {
   octave_value retval;
 
-  if (args.length () == 0)
-    retval = octave_program_name;
-  else
+  if (args.length () != 0)
     print_usage ();
 
+  retval = octave_program_name;
+
   return retval;
 }
 
 /*
 %!assert (ischar (program_name ()))
 %!error program_name (1)
 */
