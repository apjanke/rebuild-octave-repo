# HG changeset patch
# User jwe
# Date 844987142 0
#      Thu Oct 10 22:39:02 1996 +0000
# Node ID 8fc0fa7ae9cabb17eb889f87e3bc490ce8722d20
# Parent  6d3cafa2798be1caedb006a0a822f98b2784ecdd
[project @ 1996-10-10 22:36:46 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,22 @@
+Thu Oct 10 17:31:01 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/subplot.m, plot/multiplot.m, plot/mplot.m:
+	Don't check for string value of automatic_replot.
+
+	* image/ind2ind.m, image/ind2rgb.m, image/ind2gray.m:
+	Temporarily set do_fortran_indexing to 1, not "true".
+
+	* miscellaneous/menu.m: Temporarily set page_screen_output to 0,
+	not "false".
+
+	* linear-algebra/cond.m: Don't compare propagate_empty_matrices to
+	"false".
+
 Tue Aug 20 18:27:36 1996  Kurt Hornik  <Kurt.Hornik@ci.tuwien.ac.at>
 
 	* strings/substr.m: Allow negative OFFSET.  LEN is now optional.
 
 Mon Jul 15 16:15:22 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* miscellaneous/bug_report.m: Don't redirect output to /dev/tty in
 	system command.
diff --git a/scripts/image/ind2gray.m b/scripts/image/ind2gray.m
--- a/scripts/image/ind2gray.m
+++ b/scripts/image/ind2gray.m
@@ -47,17 +47,17 @@ function Y = ind2gray (X, map)
 
   ## We need Fortran indexing capability, but be sure to save the user's
   ## preference.
 
   pref = do_fortran_indexing;
 
   unwind_protect
 
-    do_fortran_indexing = "true";
+    do_fortran_indexing = 1;
 
     ## Replace indices in the input matrix with indexed values in the output
     ## matrix.
 
     [rows, cols] = size (X);
     Y = y(X(:));
     Y = reshape (Y, rows, cols);
 
diff --git a/scripts/image/ind2rgb.m b/scripts/image/ind2rgb.m
--- a/scripts/image/ind2rgb.m
+++ b/scripts/image/ind2rgb.m
@@ -40,17 +40,17 @@ function [R, G, B] = ind2rgb (X, map)
   [hi, wi] = size (X);
 
   ## XXX FIXME XXX -- we should check size of X and map.
 
   pref = do_fortran_indexing;
 
   unwind_protect
 
-    do_fortran_indexing = "true";
+    do_fortran_indexing = 1;
 
     R = map (X(:), 1);
     G = map (X(:), 2);
     B = map (X(:), 3);
 
     R = reshape (R, hi, wi);
     G = reshape (G, hi, wi);
     B = reshape (B, hi, wi);
diff --git a/scripts/image/rgb2ind.m b/scripts/image/rgb2ind.m
--- a/scripts/image/rgb2ind.m
+++ b/scripts/image/rgb2ind.m
@@ -44,17 +44,17 @@ function [X, map] = rgb2ind (R, G, B)
   X = zeros (hi, wi);
 
   map = zeros (hi*wi, 3);
 
   pref = do_fortran_indexing;
 
   unwind_protect
 
-    do_fortran_indexing = "true";
+    do_fortran_indexing = 1;
 
     map(:,1) = R(:);
     map(:,2) = G(:);
     map(:,3) = B(:);
 
     X(:) = 1:(hi*wi);
 
   unwind_protect_cleanup
diff --git a/scripts/linear-algebra/cond.m b/scripts/linear-algebra/cond.m
--- a/scripts/linear-algebra/cond.m
+++ b/scripts/linear-algebra/cond.m
@@ -26,17 +26,17 @@
 
 ## Author: jwe
 
 function retval = cond (a)
 
   if (nargin == 1)
     [nr, nc] = size (a);
     if (nr == 0 && nc == 0)
-      if (strcmp (propagate_empty_matrices, "false"))
+      if (! propagate_empty_matrices)
         error ("cond: empty matrix is invalid as argument");
       endif
       if (strcmp (propagate_empty_matrices, "warn"))
         warning ("cond: argument is empty matrix\n");
       endif
       retval = 0.0;
     endif
     sigma = svd (a);
diff --git a/scripts/miscellaneous/menu.m b/scripts/miscellaneous/menu.m
--- a/scripts/miscellaneous/menu.m
+++ b/scripts/miscellaneous/menu.m
@@ -35,17 +35,17 @@ function num = menu (t, ...)
 
   ## Don't send the menu through the pager since doing that can cause
   ## major confusion.
 
   save_page_screen_output = page_screen_output;
 
   unwind_protect
 
-    page_screen_output = "false";
+    page_screen_output = 0;
 
     if (! isempty (t))
       disp (t);
       printf ("\n");
     endif
 
     nopt = nargin - 1;
 
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -46,18 +46,17 @@ function mplot (...)
   global multiplot_xn multiplot_yn
   global multiplot_xi multiplot_yi
 
   ## This is a real kludge.  We gnuplot should be made so that replot can
   ## be executed while doing multiple plots...
 
   global multiplot_save_auto_replot = automatic_replot
 
-  if ((isstr (automatic_replot) && strcmp (automatic_replot,"true"))
-       || automatic_replot)
+  if (automatic_replot)
     warning ("turning off automatic replot for multiplot mode");
     multiplot_save_auto_replot = automatic_replot;
     automatic_replot = 0;
   endif
 
   set nologscale;
   set nopolar;
 
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -53,18 +53,17 @@ function multiplot (xn, yn)
   if (nargin != 2)
     usage ("multiplot (xn, yn)");
   endif
 
   if (! (is_scalar (xn) && is_scalar (yn)))
     error ("multiplot: xn and yn have to be scalars");
   endif
 
-  if ((isstr (automatic_replot) && strcmp (automatic_replot,"true"))
-       || automatic_replot)
+  if (automatic_replot)
     warning ("turning off automatic replot for multiplot mode");
     multiplot_save_auto_replot = automatic_replot;
     automatic_replot = 0;
   endif
 
   xn = round (xn);
   yn = round (yn);
 
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -73,18 +73,17 @@ function subplot (rows, columns, index)
   ## be executed while doing multiple plots...
 
   global multiplot_save_auto_replot = automatic_replot
 
   if (nargin != 3 && nargin != 1)
     usage ("subplot (rows, columns, index) or subplot (rcn)");
   endif
 
-  if ((isstr (automatic_replot) && strcmp (automatic_replot, "true"))
-      || automatic_replot)
+  if (automatic_replot)
     warning ("turning off automatic replot for multiplot mode");
     multiplot_save_auto_replot = automatic_replot;
     automatic_replot = 0;
   endif
 
   if (nargin == 1)
 
     if (! (is_scalar (rows) && rows >= 0))
