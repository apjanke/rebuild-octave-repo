# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1323382977 18000
#      Thu Dec 08 17:22:57 2011 -0500
# Node ID 8feb25ecddaf41765a006f22ec0a33b83cd18363
# Parent  77adde2e79accf8077d6f603ab102cd0861c4c7e
close all graphics toolkits before exit

* graphics.h (graphics_toolkit::close_all_toolkits):
Move here from graphics.cc.  Ensure that the toolkit is closed and
deleted properly.
* toplev.cc (clean_up_and_exit):
Call graphics_toolkit::close_all_toolkits.

diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2885,29 +2885,16 @@ graphics_toolkit
 graphics_toolkit::default_toolkit (void)
 {
   if (available_toolkits.size () == 0)
     register_toolkit (new gnuplot_toolkit ());
 
   return available_toolkits["gnuplot"];
 }
 
-void
-graphics_toolkit::close_all_toolkits (void)
-{
-  while (! available_toolkits.empty ())
-    {
-      available_toolkits_iterator p = available_toolkits.begin ();
-
-      p->second.close ();
-
-      available_toolkits.erase (p);
-    }
-}
-
 std::map<std::string, graphics_toolkit> graphics_toolkit::available_toolkits;
 
 // ---------------------------------------------------------------------
 
 void
 base_graphics_object::update_axis_limits (const std::string& axis_type)
 {
   if (valid_object ())
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2231,18 +2231,16 @@ public:
     { rep->finalize (go); }
 
   void finalize (const graphics_handle& h)
     { rep->finalize (h); }
 
   // Close the graphics toolkit.
   void close (void) { rep->close (); }
 
-  void close_all_toolkits (void);
-
   OCTINTERP_API static graphics_toolkit default_toolkit (void);
 
   static void register_toolkit (const graphics_toolkit& b)
     { available_toolkits[b.get_name ()] = b; }
 
   static void unregister_toolkit (const std::string& name)
     { available_toolkits.erase (name); }
 
@@ -2264,16 +2262,33 @@ public:
 
     for (i = 0, p = available_toolkits.begin ();
          p !=  available_toolkits.end (); p++, i++)
       m(i) = p->first;
 
     return m;
   }
 
+  static void close_all_toolkits (void)
+  {
+    while (! available_toolkits.empty ())
+      {
+        available_toolkits_iterator p = available_toolkits.begin ();
+
+        std::string name = p->first;
+
+        p->second.close ();
+
+        // The toolkit may have unregistered itself.  If not, we'll do
+        // it here.
+        if (available_toolkits.find (name) != available_toolkits.end ())
+          unregister_toolkit (name);
+      }
+  }
+
 private:
   base_graphics_toolkit *rep;
 
   static OCTINTERP_API std::map<std::string, graphics_toolkit>
     available_toolkits;
 
   typedef std::map<std::string, graphics_toolkit>::iterator
     available_toolkits_iterator;
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -666,16 +666,18 @@ main_loop (void)
 
 void
 clean_up_and_exit (int retval)
 {
   do_octave_atexit ();
 
   OCTAVE_SAFE_CALL (gh_manager::close_all_figures, ());
 
+  OCTAVE_SAFE_CALL (graphics_toolkit::close_all_toolkits, ());
+
   OCTAVE_SAFE_CALL (symbol_table::cleanup, ());
 
   OCTAVE_SAFE_CALL (cleanup_parser, ());
 
   OCTAVE_SAFE_CALL (sysdep_cleanup, ());
 
   OCTAVE_SAFE_CALL (singleton_cleanup_list::cleanup, ());
 
