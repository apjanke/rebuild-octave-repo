# HG changeset patch
# User jwe
# Date 1150174771 0
#      Tue Jun 13 04:59:31 2006 +0000
# Node ID 92d2be71e7cc0cb292e8c67d467479775eb6e8b9
# Parent  68f8017ef07717f137e10d588d2abb5b15af0de3
[project @ 2006-06-13 04:59:30 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-06-13  John W. Eaton  <jwe@octave.org>
+
+	* pt-stmt.cc (tree_statement_list::eval):
+	Clear retval before each statement is evaluated.
+
 2006-06-12  John W. Eaton  <jwe@octave.org>
 
 	* unwind-prot.h (unwind_protect_fptr): New macro.
 	* load-path.cc (load_path::do_set): Use it instead of
 	unwind_protect_ptr when protecting add_hook function pointer.
 	* dynamic-ld.cc (octave_dynamic_loader::do_load): Use FCN_PTR_CAST
 	here instead of reinterpret_cast.
 
diff --git a/src/pt-stmt.cc b/src/pt-stmt.cc
--- a/src/pt-stmt.cc
+++ b/src/pt-stmt.cc
@@ -160,32 +160,41 @@ tree_statement_list::eval (bool silent, 
   for (iterator p = begin (); p != end (); p++)
     {
       tree_statement *elt = *p;
 
       if (elt)
 	{
 	  OCTAVE_QUIT;
 
+	  // Clear preivous values before next statement is evaluated
+	  // so that we aren't holding an extra reference to a value
+	  // that may be used next.  For example, in code like this:
+	  //
+	  //   X = rand (N);  ## refcount should be 1 after this statement.
+	  //   X(idx) = val;  ## no extra copy should be needed, but
+	  //                  ## we will be faked out if retval is not
+	  //                  ## cleared between statements here.
+
+	  retval = octave_value_list ();
+
 	  retval = elt->eval (silent, nargout, function_body);
 
 	  if (error_state)
 	    break;
 
 	  if (tree_break_command::breaking
 	      || tree_continue_command::continuing)
 	    break;
 
 	  if (tree_return_command::returning)
 	    break;
 	}
       else
 	error ("invalid statement found in statement list!");
-
-
     }
 
   return retval;
 }
 
 int
 tree_statement_list::set_breakpoint (int line)
 {
