# HG changeset patch
# User dbateman
# Date 1180002381 0
#      Thu May 24 10:26:21 2007 +0000
# Node ID f4938870a0a72cd796a79e1370645e4571883b0b
# Parent  4cce89d792f1205de75587858ddfb009cad91501
[project @ 2007-05-24 10:26:21 by dbateman]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-05-24  David Bateman  <dbateman@free.fr>
+
+        * pkg/pkg.m (pkg:rebuild): Thinko in rebuild logic.
+
 2007-05-22  David Bateman  <dbateman@free.fr>
 
 	* pkg/pkg.m: Use rethrow(lasterror()) throughout rather than
 	error(lasterr()(8:end)).
 	(pkg:install): Warning for empty packages being removed. Suppress
 	spurious output. Warning rather than error for uninstalling a
 	package that is not installed to avoid RPM issue.
 	(pkg:configure_make): Fix for parsing of src/FILES. Don't create
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -286,17 +286,17 @@ function [local_packages, global_package
       elseif (length (files) == 1 && nargout == 0 && ischar (files{1}))
 	global_list = files{1};
       else
 	error ("you must specify a global_list file, or request an output argument");
       endif
 
     case "rebuild"
       if (global_install)
-	global_packages = rebuild (prefix, global_list, auto, verbose);
+	global_packages = rebuild (prefix, global_list, files,  auto, verbose);
 	save (global_list, "global_packages");
 	local_packages = global_packages;
       else
 	local_packages = rebuild (prefix, local_list, files, auto, verbose);
 	save (local_list, "local_packages");
       endif
 
     otherwise
@@ -310,19 +310,22 @@ function descriptions = rebuild (prefix,
     if (err)
       error ("couldn't read directory %s: %s", prefix, msg);
     endif
     ## the two first entries of dirlist are "." and ".."
     dirlist([1,2]) = [];
   else
     old_descriptions = installed_packages (list, list);
     wd = pwd ();
-    cd (prefix);
-    dirlist = glob (cellfun(@(x) [x, '-*'], files, 'UniformOutput', 0))
-    cd (wd);
+    unwind_protect
+      cd (prefix);
+      dirlist = glob (cellfun(@(x) [x, '-*'], files, 'UniformOutput', 0))
+    unwind_protect_cleanup
+      cd (wd);
+    end_unwind_protect
   endif
   descriptions = {};
   for k = 1:length (dirlist)
     descfile = fullfile (prefix, dirlist{k}, "packinfo", "DESCRIPTION");
     if (verbose)
       printf ("recreating package description from %s\n", dirlist{k});
     endif
     if (exist (descfile, "file"))
@@ -346,20 +349,20 @@ function descriptions = rebuild (prefix,
 	endif
       endif
       descriptions{end + 1} = desc;
     elseif (verbose)
       warning ("directory %s is not a valid package", dirlist{k});
     endif
   endfor
 
-  if (isempty (files))
+  if (! isempty (files))
     ## We are rebuilding for a particular package(s) so we should take
     ## care to keep the other untouched packages in the descriptions
-    descriptions = {desriptions{:}, old_desriptions{:}};
+    descriptions = {descriptions{:}, old_descriptions{:}};
 
     dup = [];
     for i = 1:length (descriptions)
       if (find (dup, i))
 	continue;
       endif
       for j = (i+1):length (descriptions)
 	if (find (dup, j))
