# HG changeset patch
# User jwe
# Date 1192462281 0
#      Mon Oct 15 15:31:21 2007 +0000
# Node ID 120f3135952f9802c9732e8087fc83cfc256ce5c
# Parent  bdcea6ede1cd8804c52dbd54ae71989ab53810b5
[project @ 2007-10-15 15:30:03 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2007-10-15  Søren Hauberg  <hauberg@gmail.com>
+
+	* interpreter/preface.txi, interpreter/basics.txi,
+	interpreter/strings.txi, interpreter/container.txi,
+	interpreter/var.txi, interpreter/expr.txi, interpreter/errors.txi,
+	interpreter/io.txi, interpreter/func.txi, interpreter/package.txi:
+	Make text fit on pages when using smallbook.
+
 2007-10-12  John W. Eaton  <jwe@octave.org>
 
 	* Change copyright notices in all files that are part of Octave to
 	GPLv3 or any later version.
 
 2007-10-11  Brian Gough  <bjg@network-theory.co.uk>
 
 	* interpreter/dynamic.txi, interpreter/geometry.txi,
@@ -823,17 +831,17 @@ 2003-08-07  John W. Eaton  <jwe@bevo.che
 
 2003-07-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* faq/Makefile.in (FORMATTED): Include all Octave-FAQ_*.html files
 	here, not just the toc.
 
 2003-05-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
-	* interpreter/Makefile.in, doc/liboctave/Makefile.in: Handle DESTDIR.
+	* interpreter/Makefile.in, liboctave/Makefile.in: Handle DESTDIR.
 
 2003-02-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* interpreter/Makefile.in (MAN_BASE): Add octave-config.1 to the list.
 
 2003-02-19  Dirk Eddelbuettel <edd@debian.org>
 
 	* octave-config.1: New file.
diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -182,35 +182,36 @@ Don't print the usual greeting and versi
 @itemx --braindead
 @cindex @code{--traditional}
 @cindex @code{--braindead}
 For compatibility with @sc{Matlab}, set initial values for
 user-preferences to the following values
 
 @example
 @group
-  PS1                             = ">> "
-  PS2                             = ""
-  beep_on_error                   = true
-  crash_dumps_octave_core         = false
-  default_save_options            = "-mat-binary"
-  fixed_point_format              = true
-  history_timestamp_format_string = "%%-- %D %I:%M %p --%%"
-  page_screen_output              = false
-  print_empty_dimensions          = false
+PS1                     = ">> "
+PS2                     = ""
+beep_on_error           = true
+crash_dumps_octave_core = false
+default_save_options    = "-mat-binary"
+fixed_point_format      = true
+history_timestamp_format_string
+                        = "%%-- %D %I:%M %p --%%"
+page_screen_output      = false
+print_empty_dimensions  = false
 @end group
 @end example
 
 @noindent
 and disable the following warnings
 @example
 @group
-  Octave:fopen-file-in-path
-  Octave:function-name-clash
-  Octave:load-file-in-path
+Octave:fopen-file-in-path
+Octave:function-name-clash
+Octave:load-file-in-path
 @end group
 @end example
 
 @item --verbose
 @itemx -V
 @cindex @code{--verbose}
 @cindex @code{-V}
 Turn on verbose output.
@@ -757,24 +758,25 @@ mistake in the previous function definit
 
 @example
 octave:13> f ()
 @end example
 
 @noindent
 Octave will respond with
 
-@example
+@c Using 'smallexample' to make text fit on page when creating smallbook.
+@smallexample
 @group
 error: `x' undefined near line 1 column 24
 error: evaluating expression near line 1, column 24
 error: evaluating assignment expression near line 1, column 22
 error: called from `f'
 @end group
-@end example
+@end smallexample
 
 @noindent
 This error message has several parts, and gives you quite a bit of
 information to help you locate the source of the error.  The messages
 are generated from the point of the innermost error, and provide a
 traceback of enclosing expressions and function calls.
 
 In the example above, the first line indicates that a variable named
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -305,18 +305,19 @@ ans =
 @end example
 
 Elements can be deleted from a structure array in a similar manner to a
 numerical array, by assigning the elements to an empty matrix. For
 example
 
 @example
 @group
-in = struct ('call1', @{x, Inf, 'last'@}, 'call2', @{x, Inf, 'first'@});
-in (:, 1) = []
+in = struct ("call1", @{x, Inf, "last"@}, 
+             "call2", @{x, Inf, "first"@});
+in (1, :) = []
 @result{} in =
       @{
         call1 =
       
         (,
           [1] = Inf
           [2] = last
         ,)
@@ -338,32 +339,33 @@ in (:, 1) = []
 As well as indexing a structure with ".", Octave can create a structure
 with the @code{struct} command. @code{struct} takes pairs of arguments,
 where the first argument in the pair is the fieldname to include in the
 structure and the second is a scalar or cell array, representing the
 values to include in the structure or structure array. For example
 
 @example
 @group
-struct ('field1', 1, 'field2', 2)
+struct ("field1", 1, "field2", 2)
 @result{} ans =
       @{
         field1 =  1
         field2 =  2
       @}
 @end group
 @end example
 
 If the values passed to @code{struct} are a mix of scalar and cell
 arrays, then the scalar arguments are expanded to create a 
 structure array with a consistent dimension. For example
 
 @example
 @group
-struct ('field1', @{1, 'one'@}, 'field2', @{2, 'two'@}, 'field3', 3);
+struct ("field1", @{1, "one"@}, "field2", @{2, "two"@},
+        "field3", 3)
 @result{} ans =
       @{
         field1 =
       
         (,
           [1] =  1
           [2] = one
         ,)
@@ -600,17 +602,17 @@ Separated Lists}) of all the requested e
 One distinction between @samp{@{} and @samp{(} to index cell arrays is
 in the deletion of elements from the cell array. In a similar manner to
 a numerical array the @samp{()} operator can be used to delete elements
 from the cell array. The @samp{@{@}} operator however will remove the
 elements of the cell array, but not delete the space for them. For example
 
 @example
 @group
-x = @{'1', '2'; '3', '4'@};
+x = @{"1", "2"; "3", "4"@};
 x@{1, :@} = []
 @result{} x =
       @{
         [1,1] = [](0x0)
         [2,1] = 3
         [1,2] = [](0x0)
         [2,2] = 4
       @}
@@ -704,17 +706,17 @@ max (@var{a}, @var{b})
 @end example
 
 @noindent
 @code{@var{a}, @var{b}} is a comma separated list. Comma separated lists
 can appear on both the right and left hand side of an equation. For
 example
 
 @example
-[@var{i}, @var{j}] = ceil (find (@var{x}, [], 'last'));
+[@var{i}, @var{j}] = ceil (find (@var{x}, [], "last"));
 @end example
 
 @noindent
 where @code{@var{i}, @var{j}} is equally a comma separated list. Comma
 separated lists can not be directly manipulated by the user. However,
 both structures are cell arrays can be converted into comma
 separated lists, which makes them useful to keep the input arguments and
 return values of functions organized. Another example of where a comma
@@ -781,29 +783,30 @@ b = a( [1, 3] )
 
 A comma separated list can equally appear on the left-hand side of an
 assignment. An example is 
 
 @example
 @group
 in @{1@} = ceil (rand (10, 1));
 in @{2@} = [];
-in @{3@} = 'last';
-in @{4@} = 'first';
+in @{3@} = "last";
+in @{4@} = "first";
 out = cell (4, 1);
 [out@{1:2@}] = find (in@{1 : 3@});
 [out@{3:4@}] = find (in@{[1, 2, 4]@});
 @end group
 @end example
 
 Structure arrays can equally be used to create comma separated
 lists. This is done by addresses one of the fields of a structure
 array. For example
 
 @example
 @group
 x = ceil (randn (10, 1)); 
-in = struct ('call1', @{x, Inf, 'last'@}, 'call2', @{x, Inf, 'first'@});
-out = struct ('call1', cell (2, 1), 'call2', cell (2, 1));
+in = struct ("call1", @{x, Inf, "last"@}, 
+             "call2", @{x, Inf, "first"@});
+out = struct ("call1", cell (2, 1), "call2", cell (2, 1));
 [out.call1] = find (in.call1);
 [out.call2] = find (in.call2);
 @end group
 @end example
diff --git a/doc/interpreter/errors.txi b/doc/interpreter/errors.txi
--- a/doc/interpreter/errors.txi
+++ b/doc/interpreter/errors.txi
@@ -221,20 +221,20 @@ It is possible to issue warnings from an
 function. In its most simple form, the @code{warning} function takes a
 string describing the warning as its input argument. As an example,
 the following code controls if the variable @samp{a} is non-negative,
 and if not issues a warning and sets @samp{a} to zero.
 
 @example
 a = -1;
 if (a < 0)
-  warning ("'a' must be non-negative number. Setting 'a' to zero.");
+  warning ("'a' must be non-negative. Setting 'a' to zero.");
   a = 0;
 endif
-     @print{} 'a' must be non-negative number. Setting 'a' to zero.
+     @print{} 'a' must be non-negative. Setting 'a' to zero.
 @end example
 
 Since warnings aren't fatal to a running program, it is not possible
 to catch a warning using the @code{try} statement or something similar.
 It is however possible to access the last warning as a string using the
 @code{lastwarn} function.
 
 It is also possible to assign an identification string a a warning.
@@ -255,26 +255,26 @@ are actually printed to the screen.  If 
 is called with a string argument that is either @code{"on"} or @code{"off"}
 all warnings will be enabled or disabled.
 
 It is also possible to enable and disable individual warnings through
 their string identifications.  The following code will issue a warning
 
 @example
 warning ("non-negative-variable", 
-         "'a' must be non-negative number. Setting 'a' to zero.");
+         "'a' must be non-negative. Setting 'a' to zero.");
 @end example
 
 @noindent
 while the following won't issue a warning
 
 @example
 warning ("off", "non-negative-variable");
 warning ("non-negative-variable", 
-         "'a' must be non-negative number. Setting 'a' to zero.");
+         "'a' must be non-negative. Setting 'a' to zero.");
 @end example
 
 The functions distributed with Octave can issue one of the following
 warnings.
 
 @DOCSTRING(warning_ids)
 
 
diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -938,21 +938,22 @@ b = s
 @end group
 @end example
 
 @noindent
 The number of values on the left side of the expression can, however,
 not exceed the number of values on the right side. For example, the
 following will produce an error.
 
-@example
+@c Using 'smallexample' to make text fit on page when creating smallbook.
+@smallexample
 [a, b, c, d] = [u, s, v] = svd (a)
-     @print{} error: element number 4 undefined in return list
-        error: evaluating assignment expression near line 8, column 15
-@end example
+@print{} error: element number 4 undefined in return list
+@print{} error: evaluating assignment expression near line 8, column 15
+@end smallexample
 
 @opindex +=
 A very common programming pattern is to increment an existing variable
 with a given value, like this
 
 @example
 a = a + 2;
 @end example
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -770,17 +770,18 @@ mislocked ("my_function")
 
 A common use of @code{mlock} is to prevent persistent variables from
 being removed from memory, as the following example shows.
 
 @example
 @group
 function count_calls()
   persistent calls = 0;
-  printf ("'count_calls' has been called %d times\n", ++calls);
+  printf ("'count_calls' has been called %d times\n",
+          ++calls);
 endfunction
 mlock ("count_calls");
 
 count_calls ();
 @print{} 'count_calls' has been called 1 times
 
 clear count_calls
 count_calls ();
@@ -793,17 +794,18 @@ It is, however, often inconvenient to lo
 so it is also possible to lock a function from within its body.  This
 is simply done by calling @code{mlock} from within the function.
 
 @example
 @group
 function count_calls ()
   mlock ();
   persistent calls = 0;
-  printf ("'count_calls' has been called %d times\n", ++calls);
+  printf ("'count_calls' has been called %d times\n",
+          ++calls);
 endfunction
 @end group
 @end example
 
 @code{mlock} might equally be used to prevent changes to a function from having
 effect in Octave, though a similar effect can be had with the
 @code{ignore_function_time_stamp} function.
 
diff --git a/doc/interpreter/io.txi b/doc/interpreter/io.txi
--- a/doc/interpreter/io.txi
+++ b/doc/interpreter/io.txi
@@ -371,25 +371,25 @@ Ordinary characters in the template stri
 output stream as-is, while @dfn{conversion specifications} introduced by
 a @samp{%} character in the template cause subsequent arguments to be
 formatted and written to the output stream.  For example,
 @cindex conversion specifications (@code{printf})
 
 @example
 pct = 37;
 filename = "foo.txt";
-printf ("Processing of `%s' is %d%% finished.\nPlease be patient.\n",
-        filename, pct);
+printf ("Processed %d%% of `%s'.\nPlease be patient.\n",
+        pct, filename);
 @end example
 
 @noindent
 produces output like
 
 @example
-Processing of `foo.txt' is 37% finished.
+Processed 37% of `foo.txt'.
 Please be patient.
 @end example
 
 This example shows the use of the @samp{%d} conversion to specify that a
 scalar argument should be printed in decimal notation, the @samp{%s}
 conversion to specify printing of a string argument, and the @samp{%%}
 conversion to print a literal @samp{%} character.
 
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -58,19 +58,19 @@ upgrade and downgrade the version of a p
 impossible to have several versions of the same package installed at
 once.
 
 To see which packages are installed type
 
 @example
 @group
 pkg list
-     @print{} Package Name  | Version | Installation directory
-     @print{} --------------+---------+-----------------------
-     @print{}        image *|   1.0.0 | /home/jwe/octave/image-1.0.0
+@print{} Package Name  | Version | Installation directory
+@print{} --------------+---------+-----------------------
+@print{}        image *|   1.0.0 | /home/jwe/octave/image-1.0.0
 @end group
 @end example
 
 @noindent
 In this case only version 1.0.0 of the @code{image} package is
 installed. The '*' character next to the package name shows that the
 image package is loaded and ready for use.
 
@@ -302,21 +302,23 @@ Everything else is of the form @code{Nam
 @noindent
 The following is a simple example of a @code{DESCRIPTION} file
 
 @example
 Name: The name of my package
 Version: 1.0.0
 Date: 2007-18-04
 Author: The name (and possibly email) of the package author.
-Maintainer: The name (and possibly email) of the current package maintainer.
+Maintainer: The name (and possibly email) of the current
+ package maintainer.
 Title: The title of the package
-Description: A short description of the package. If this description
- gets too long for one line it can continue on the next by adding a
- space to the beginning of the following lines.
+Description: A short description of the package. If this
+ description gets too long for one line it can continue
+ on the next by adding a space to the beginning of the
+ following lines.
 License: GPL version 3 or later
 @end example
 
 The package manager currently recognizes the following keywords
 
 @noindent
 @table @code
 @item Name
diff --git a/doc/interpreter/preface.txi b/doc/interpreter/preface.txi
--- a/doc/interpreter/preface.txi
+++ b/doc/interpreter/preface.txi
@@ -174,12 +174,11 @@ Octave from the Free Software Foundation
 of more free software.  For more information, write to
 
 @quotation
 Free Software Foundation@*
 51 Franklin Street, Fifth Floor@*
 Boston, MA 02110-1301--1307@*
 USA
 @end quotation
- 
-Octave is also available on the Internet from
-@url{ftp://ftp.octave.org/pub/octave}, and additional information is
-available from @url{http://www.octave.org}.
+
+Octave can also be downloaded from @url{http://www.octave.org}, where
+additional information also is available.
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -206,18 +206,18 @@ array of strings, which is described in 
 @section Comparing Strings
 
 Since a string is a character array comparison between strings work
 element by element as the following example shows.
 
 @example
 GNU = "GNU's Not UNIX";
 spaces = (GNU == " ")
-     @result{} spaces =
-           0   0   0   0   0   1   0   0   0   1   0   0   0   0
+@result{} spaces =
+      0   0   0   0   0   1   0   0   0   1   0   0   0   0
 @end example
 
 @noindent
 To determine if two functions are identical it is therefore necessary
 to use the @code{strcmp} or @code{strncpm} functions. Similar 
 functions exist for doing case-insensitive comparisons.
 
 @DOCSTRING(strcmp)
diff --git a/doc/interpreter/var.txi b/doc/interpreter/var.txi
--- a/doc/interpreter/var.txi
+++ b/doc/interpreter/var.txi
@@ -188,17 +188,18 @@ particular function and are not visible 
 
 The following example uses a persistent variable to create a function
 that prints the number of times it has been called.
 
 @example
 @group
 function count_calls ()
   persistent calls = 0;
-  printf ("'count_calls' has been called %d times\n", ++calls);
+  printf ("'count_calls' has been called %d times\n",
+          ++calls);
 endfunction
 
 for i = 1:3
   count_calls ();
 endfor
 
 @print{} 'count_calls' has been called 1 times
 @print{} 'count_calls' has been called 2 times
@@ -243,17 +244,18 @@ following example illustrates.
 
 @example
 @group
 function count_calls ()
   persistent calls;
   if (isempty (calls))
     calls = 0;
   endif
-  printf ("'count_calls' has been called %d times\n", ++calls);
+  printf ("'count_calls' has been called %d times\n",
+          ++calls);
 endfunction
 @end group
 @end example
 
 @noindent
 This implementation behaves in exactly the same way as the previous
 implementation of @code{count_calls}.
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2007-10-15  Søren Hauberg  <hauberg@gmail.com>
+
+	* general/rat.m, sparse/pcg.m, sparse/pcr.m, optimization/sqp.m,
+	statistics/models/logistic_regression.m, polynomial/polygcd.m,
+	control/system/ss.m, signal/arch_rnd.m, control/system/ss2sys.m,
+	control/system/syssetsignals.m, control/base/lqg.m,
+	strings/str2double.m, control/system/sysscale.m,
+	control/hinf/hinfdemo.m, general/cplxpair.m:
+	Make help text fit on pages when using smallbook.
+
 2007-10-15  David Bateman  <dbateman@free.fr>
 
 	* testfun/test.m: In error/warning blocks test for an error before
 	a warning to avoid unexpected failures.
 
 2007-10-15  Kim Hansen  i<kimhanse@gmail.com>
 
 	* testfun/assert.m: Correct documentation of absolution versus 
diff --git a/scripts/control/base/lqg.m b/scripts/control/base/lqg.m
--- a/scripts/control/base/lqg.m
+++ b/scripts/control/base/lqg.m
@@ -21,18 +21,18 @@
 ## @deftypefn {Function File} {[@var{k}, @var{q1}, @var{p1}, @var{ee}, @var{er}] =} lqg (@var{sys}, @var{sigw}, @var{sigv}, @var{q}, @var{r}, @var{in_idx})
 ## Design a linear-quadratic-gaussian optimal controller for the system
 ## @example
 ## dx/dt = A x + B u + G w       [w]=N(0,[Sigw 0    ])
 ##     y = C x + v               [v]  (    0   Sigv ])
 ## @end example
 ## or
 ## @example
-## x(k+1) = A x(k) + B u(k) + G w(k)       [w]=N(0,[Sigw 0    ])
-##   y(k) = C x(k) + v(k)                  [v]  (    0   Sigv ])
+## x(k+1) = A x(k) + B u(k) + G w(k)   [w]=N(0,[Sigw 0    ])
+##   y(k) = C x(k) + v(k)              [v]  (    0   Sigv ])
 ## @end example
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item  sys
 ## system data structure
 ## @item  sigw
 ## @itemx  sigv
diff --git a/scripts/control/hinf/hinfdemo.m b/scripts/control/hinf/hinfdemo.m
--- a/scripts/control/hinf/hinfdemo.m
+++ b/scripts/control/hinf/hinfdemo.m
@@ -57,33 +57,33 @@
 ## @group
 ##                 s - 2
 ##      G(s) = --------------
 ##             (s + 2)(s - 1)
 ## @end group
 ## @end example
 ## @end ifinfo
 ##
-## @example
+## @smallexample
 ## @group
 ##
 ##                               +----+
 ##          -------------------->| W1 |---> v1
 ##      z   |                    +----+
 ##      ----|-------------+
 ##          |             |
 ##          |    +---+    v   y  +----+
 ##        u *--->| G |--->O--*-->| W2 |---> v2
 ##          |    +---+       |   +----+
 ##          |                |
 ##          |    +---+       |
 ##          -----| K |<-------
 ##               +---+
 ## @end group
-## @end example
+## @end smallexample
 ## 
 ## @iftex
 ## @tex
 ## $$ { \rm min } \Vert T_{vz} \Vert _\infty $$
 ## @end tex
 ## @end iftex
 ## @ifinfo
 ## @example
@@ -102,57 +102,57 @@
 ## $ { \cal H }_\infty $
 ## @end tex
 ## @end iftex
 ## @ifinfo
 ## H-infinity
 ## @end ifinfo
 ## norm of the
 ## augmented plant @var{P} (mixed-sensitivity problem):
-## @example
+## @smallexample
 ## @group
 ##      w
 ##       1 -----------+
 ##                    |                   +----+
 ##                +---------------------->| W1 |----> z1
 ##      w         |   |                   +----+
 ##       2 ------------------------+
 ##                |   |            |
 ##                |   v   +----+   v      +----+
 ##             +--*-->o-->| G  |-->o--*-->| W2 |---> z2
 ##             |          +----+      |   +----+
 ##             |                      |
 ##             ^                      v
 ##             u                       y (to K)
 ##          (from controller K)
 ## @end group
-## @end example
+## @end smallexample
 ##
 ## @iftex
 ## @tex
 ## $$ \left [ \matrix{ z_1 \cr
 ##                     z_2 \cr
 ##                     y   } \right ] =  
 ##  P \left [ \matrix{ w_1 \cr
 ##                     w_2 \cr
 ##                     u   } \right ] $$
 ## @end tex
 ## @end iftex
 ## @ifinfo
-## @example
+## @smallexample
 ## @group
 ##                   +    +           +    +
 ##                   | z  |           | w  |
 ##                   |  1 |           |  1 |
 ##                   | z  | = [ P ] * | w  |
 ##                   |  2 |           |  2 |
 ##                   | y  |           | u  |
 ##                   +    +           +    +
 ## @end group
-## @end example
+## @end smallexample
 ## @end ifinfo
 ##
 ## @item Discrete system:
 ## This is not a true discrete design. The design is carried out
 ## in continuous time while the effect of sampling is described by
 ## a bilinear transformation of the sampled system.
 ## This method works quite well if the sampling period is ``small''
 ## compared to the plant time constants.
@@ -187,33 +187,33 @@
 ##
 ##                0.199788z + 0.073498
 ##      G(z) = --------------------------
 ##             (z - 0.36788)(z - 0.13534)
 ## @end group
 ## @end example
 ## @end ifinfo
 ##
-## @example
+## @smallexample
 ## @group
 ##
 ##                               +----+
 ##          -------------------->| W1 |---> v1
 ##      z   |                    +----+
 ##      ----|-------------+
 ##          |             |
 ##          |    +---+    v      +----+
 ##          *--->| G |--->O--*-->| W2 |---> v2
 ##          |    +---+       |   +----+
 ##          |                |
 ##          |    +---+       |
 ##          -----| K |<-------
 ##               +---+
 ## @end group
-## @end example
+## @end smallexample
 ## @iftex
 ## @tex
 ## $$ { \rm min } \Vert T_{vz} \Vert _\infty $$
 ## @end tex
 ## @end iftex
 ## @ifinfo
 ## @example
 ## min || T   ||
diff --git a/scripts/control/system/ss.m b/scripts/control/system/ss.m
--- a/scripts/control/system/ss.m
+++ b/scripts/control/system/ss.m
@@ -139,17 +139,18 @@
 ## that are not contained in outlist. (Discrete/continuous outputs
 ## may be entered in any order desired by the user.)
 ##
 ## @strong{Example}
 ## @example
 ## octave:1> a = [1 2 3; 4 5 6; 7 8 10];
 ## octave:2> b = [0 0 ; 0 1 ; 1 0];
 ## octave:3> c = eye (3);
-## octave:4> sys = ss (a, b, c, [], 0, 3, 0, @{"volts", "amps", "joules"@});
+## octave:4> sys = ss (a, b, c, [], 0, 3, 0, ...
+## >                   @{"volts", "amps", "joules"@});
 ## octave:5> sysout(sys);
 ## Input(s)
 ##         1: u_1
 ##         2: u_2
 ##
 ## Output(s):
 ##         1: y_1
 ##         2: y_2
diff --git a/scripts/control/system/ss2sys.m b/scripts/control/system/ss2sys.m
--- a/scripts/control/system/ss2sys.m
+++ b/scripts/control/system/ss2sys.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} ss (@var{a}, @var{b}, @var{c}, @var{d}, @var{tsam}, @var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{outlist})
+## @deftypefn {Function File} {} ss2sys (@var{a}, @var{b}, @var{c}, @var{d}, @var{tsam}, @var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{outlist})
 ## Create system structure from state-space data.   May be continuous,
 ## discrete, or mixed (sampled data)
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item a
 ## @itemx b
 ## @itemx c
@@ -136,17 +136,18 @@
 ## that are not contained in outlist. (Discrete/continuous outputs
 ## may be entered in any order desired by the user.)
 ##
 ## @strong{Example}
 ## @example
 ## octave:1> a = [1 2 3; 4 5 6; 7 8 10];
 ## octave:2> b = [0 0 ; 0 1 ; 1 0];
 ## octave:3> c = eye (3);
-## octave:4> sys = ss (a, b, c, [], 0, 3, 0, @{"volts", "amps", "joules"@});
+## octave:4> sys = ss (a, b, c, [], 0, 3, 0, 
+## >                   @{"volts", "amps", "joules"@});
 ## octave:5> sysout(sys);
 ## Input(s)
 ##         1: u_1
 ##         2: u_2
 ##
 ## Output(s):
 ##         1: y_1
 ##         2: y_2
diff --git a/scripts/control/system/sysscale.m b/scripts/control/system/sysscale.m
--- a/scripts/control/system/sysscale.m
+++ b/scripts/control/system/sysscale.m
@@ -32,21 +32,21 @@
 ## @itemx inname
 ## Lists of strings with the names of respectively outputs and inputs.
 ## @end table
 ##
 ## @strong{Output}
 ## @table @var
 ## @item retsys
 ## resulting open loop system:
-## @example
+## @smallexample
 ##       -----------    -------    -----------
 ## u --->| inscale |--->| sys |--->| outscale |---> y
 ##       -----------    -------    -----------
-## @end example
+## @end smallexample
 ## @end table
 ## If the input names and output names (each a list of strings)
 ## are not given and the scaling matrices
 ## are not square, then default names will be given to the inputs and/or
 ## outputs.
 ##
 ## A warning message is printed if outscale attempts to add continuous
 ## system outputs to discrete system outputs; otherwise @var{yd} is
diff --git a/scripts/control/system/syssetsignals.m b/scripts/control/system/syssetsignals.m
--- a/scripts/control/system/syssetsignals.m
+++ b/scripts/control/system/syssetsignals.m
@@ -60,18 +60,19 @@
 ## @table @var
 ## @item retsys
 ## @var{sys} with appropriate signal names changed
 ## (or @var{yd} values, where appropriate).
 ## @end table
 ##
 ## @strong{Example}
 ## @example
-## octave:1> sys=ss([1 2; 3 4],[5;6],[7 8]);
-## octave:2> sys = syssetsignals(sys,"st",str2mat("Posx","Velx"));
+## octave:1> sys=ss ([1 2; 3 4],[5;6],[7 8]);
+## octave:2> sys = syssetsignals (sys, "st",
+## >                              str2mat("Posx","Velx"));
 ## octave:3> sysout(sys)
 ## Input(s)
 ##         1: u_1
 ## Output(s):
 ##         1: y_1
 ## state-space form:
 ## 2 continuous states, 0 discrete states
 ## State(s):
diff --git a/scripts/general/cplxpair.m b/scripts/general/cplxpair.m
--- a/scripts/general/cplxpair.m
+++ b/scripts/general/cplxpair.m
@@ -30,19 +30,20 @@
 ## dimension of @var{z}. If @var{dim} is specified, then the complex
 ## pairs are sorted along this dimension.
 ##
 ## Signal an error if some complex numbers could not be paired. Requires
 ## all complex numbers to be exact conjugates within tol, or signals an 
 ## error. Note that there are no guarantees on the order of the returned
 ## pairs with identical real parts but differing imaginary parts.
 ##
-## @example
+## @c Using 'smallexample' to make text fit in page when using 'smallbook'
+## @smallexample
 ## cplxpair (exp(2i*pi*[0:4]'/5)) == exp(2i*pi*[3; 2; 4; 1; 0]/5)
-## @end example
+## @end smallexample
 ## @end deftypefn
 
 ## TODO: subsort returned pairs by imaginary magnitude
 ## TODO: Why doesn't exp(2i*pi*[0:4]'/5) produce exact conjugates. Does
 ## TODO:    it in Matlab?  The reason is that complex pairs are supposed
 ## TODO:    to be exact conjugates, and not rely on a tolerance test.
 
 ## 2006-05-12 David Bateman - Modified for NDArrays
diff --git a/scripts/general/rat.m b/scripts/general/rat.m
--- a/scripts/general/rat.m
+++ b/scripts/general/rat.m
@@ -19,18 +19,19 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{s} =} rat (@var{x}, @var{tol})
 ## @deftypefnx {Function File} {[@var{n}, @var{d}] =} rat (@var{x}, @var{tol})
 ##
 ## Find a rational approximation to @var{x} within tolerance defined
 ## by @var{tol} using a continued fraction expansion. E.g,
 ##
 ## @example
-##    rat(pi) = 3 + 1/(7 + 1/16) = 355/113
-##    rat(e) = 3 + 1/(-4 + 1/(2 + 1/(5 + 1/(-2 + 1/(-7))))) = 1457/536
+## rat(pi) = 3 + 1/(7 + 1/16) = 355/113
+## rat(e) = 3 + 1/(-4 + 1/(2 + 1/(5 + 1/(-2 + 1/(-7))))) 
+##        = 1457/536
 ## @end example
 ##
 ## Called with two arguments returns the numerator and denominator separately
 ## as two matrices.
 ## @end deftypefn
 ## @seealso{rats}
 
 function [n,d] = rat(x,tol)
diff --git a/scripts/optimization/sqp.m b/scripts/optimization/sqp.m
--- a/scripts/optimization/sqp.m
+++ b/scripts/optimization/sqp.m
@@ -72,43 +72,43 @@
 ## function to compute the hessian of the objective function.  If the
 ## gradient function is not supplied, the gradient is computed by finite
 ## differences.  If the hessian function is not supplied, a BFGS update
 ## formula is used to approximate the hessian.
 ##
 ## If supplied, the gradient function must be of the form
 ##
 ## @example
-##      g = gradient (x)
+## g = gradient (x)
 ## @end example
 ##
 ## @noindent
 ## in which @var{x} is a vector and @var{g} is a vector.
 ##
 ## If supplied, the hessian function must be of the form
 ##
 ## @example
-##      h = hessian (x)
+## h = hessian (x)
 ## @end example
 ##
 ## @noindent
 ## in which @var{x} is a vector and @var{h} is a matrix.
 ##
 ## The third and fourth arguments are function handles pointing to
 ## functions that compute the equality constraints and the inequality
 ## constraints, respectively.
 ##
 ## If your problem does not have equality (or inequality) constraints,
 ## you may pass an empty matrix for @var{cef} (or @var{cif}).
 ##
 ## If supplied, the equality and inequality constraint functions must be
 ## of the form
 ##
 ## @example
-##      r = f (x)
+## r = f (x)
 ## @end example
 ##
 ## @noindent
 ## in which @var{x} is a vector and @var{r} is a vector.
 ## 
 ## The third and fourth arguments may also be 2-element cell arrays of
 ## function handles.  The first element should point to the constraint
 ## function and the second should point to a function that computes the
@@ -129,45 +129,47 @@
 ##     transpose ( [ ------   -----   ...   ------ ] )
 ##                 [  dx_1     dx_2          dx_N  ]
 ## @end example
 ## @end ifnottex
 ##
 ## Here is an example of calling @code{sqp}:
 ##
 ## @example
-##      function r = g (x)
-##        r = [ sumsq(x)-10; x(2)*x(3)-5*x(4)*x(5); x(1)^3+x(2)^3+1];
-##      endfunction
+## function r = g (x)
+##   r = [ sumsq(x)-10;
+##         x(2)*x(3)-5*x(4)*x(5); 
+##         x(1)^3+x(2)^3+1 ];
+## endfunction
+##
+## function obj = phi (x)
+##   obj = exp(prod(x)) - 0.5*(x(1)^3+x(2)^3+1)^2;
+## endfunction
 ##
-##      function obj = phi (x)
-##        obj = exp(prod(x)) - 0.5*(x(1)^3+x(2)^3+1)^2;
-##      endfunction
+## x0 = [-1.8; 1.7; 1.9; -0.8; -0.8];
+##
+## [x, obj, info, iter, nf, lambda] = sqp (x0, @@phi, @@g, [])
 ##
-##      x0 = [-1.8; 1.7; 1.9; -0.8; -0.8];
-##
-##      [x, obj, info, iter, nf, lambda] = sqp (x0, @@phi, @@g, [])
-##
-##      x =
+## x =
+##     
+##   -1.71714
+##    1.59571
+##    1.82725
+##   -0.76364
+##   -0.76364
 ##      
-##        -1.71714
-##         1.59571
-##         1.82725
-##        -0.76364
-##        -0.76364
-##      
-##      obj = 0.053950
-##      info = 101
-##      iter = 8
-##      nf = 10
-##      lambda =
-##      
-##        -0.0401627
-##         0.0379578
-##        -0.0052227
+## obj = 0.053950
+## info = 101
+## iter = 8
+## nf = 10
+## lambda =
+##     
+##   -0.0401627
+##    0.0379578
+##   -0.0052227
 ## @end example
 ##
 ## The value returned in @var{info} may be one of the following:
 ## @table @asis
 ## @item 101
 ## The algorithm terminated because the norm of the last step was less
 ## than @code{tol * norm (x))} (the value of tol is currently fixed at
 ## @code{sqrt (eps)}---edit @file{sqp.m} to modify this value.
diff --git a/scripts/polynomial/polygcd.m b/scripts/polynomial/polygcd.m
--- a/scripts/polynomial/polygcd.m
+++ b/scripts/polynomial/polygcd.m
@@ -28,17 +28,18 @@
 ## @end example
 ##  Note that this is an unstable
 ## algorithm, so don't try it on large polynomials.
 ##
 ## Example
 ## @example
 ## polygcd (poly(1:8), poly(3:12)) - poly(3:8)
 ## @result{} [ 0, 0, 0, 0, 0, 0, 0 ]
-## deconv (poly(1:8), polygcd (poly(1:8), poly(3:12))) - poly(1:2)
+## deconv (poly(1:8), polygcd (poly(1:8), poly(3:12))) ...
+##   - poly(1:2)
 ## @result{} [ 0, 0, 0 ]
 ## @end example
 ## @seealso{poly, polyinteg, polyderiv, polyreduce, roots, conv, deconv,
 ## residue, filter, polyval, and polyvalm}
 ## @end deftypefn
 
 function x = polygcd (b, a, tol)
 
diff --git a/scripts/signal/arch_rnd.m b/scripts/signal/arch_rnd.m
--- a/scripts/signal/arch_rnd.m
+++ b/scripts/signal/arch_rnd.m
@@ -18,27 +18,27 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} arch_rnd (@var{a}, @var{b}, @var{t})
 ## Simulate an ARCH sequence of length @var{t} with AR
 ## coefficients @var{b} and CH coefficients @var{a}.  I.e., the result
 ## @math{y(t)} follows the model
 ##
-## @example
+## @smallexample
 ## y(t) = b(1) + b(2) * y(t-1) + @dots{} + b(lb) * y(t-lb+1) + e(t),
-## @end example
+## @end smallexample
 ##
 ## @noindent
 ## where @math{e(t)}, given @var{y} up to time @math{t-1}, is
 ## @math{N(0, h(t))}, with
 ##
-## @example
+## @smallexample
 ## h(t) = a(1) + a(2) * e(t-1)^2 + @dots{} + a(la) * e(t-la+1)^2
-## @end example
+## @end smallexample
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Simulate an ARCH process
 
 function y = arch_rnd (a, b, T)
 
   if (nargin != 3)
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -169,17 +169,18 @@
 ## @example
 ## @group
 ##   function y = applyM(x)
 ##     K = floor (length (x) - 2);
 ##     y = x;
 ##     y(1:K) = x(1:K)./[1:K]';
 ##   endfunction
 ## 
-##   [x, flag, relres, iter, resvec, eigest] = pcg (A, b, [], [], "applyM");
+##   [x, flag, relres, iter, resvec, eigest] = ...
+##                      pcg (A, b, [], [], "applyM");
 ##   semilogy (1:iter+1, resvec);
 ## @end group
 ## @end example
 ## 
 ## @sc{Example 6:} Finally, a preconditioner which depends on a
 ## parameter @var{k}.
 ## 
 ## @example
diff --git a/scripts/sparse/pcr.m b/scripts/sparse/pcr.m
--- a/scripts/sparse/pcr.m
+++ b/scripts/sparse/pcr.m
@@ -132,32 +132,34 @@
 ## @example
 ## @group
 ##   function y = applyM(x)		
 ##     K = floor(length(x)-2); 
 ##     y = x; 
 ##     y(1:K) = x(1:K)./[1:K]';	
 ##   endfunction
 ## 
-##   [x, flag, relres, iter, resvec] = pcr(A,b,[],[],'applyM')
+##   [x, flag, relres, iter, resvec] = ...
+##                      pcr(A, b, [], [], 'applyM')
 ##   semilogy([1:iter+1], resvec);
 ## @end group
 ## @end example
 ##
 ## @sc{Example 4:} Finally, a preconditioner which depends on a
 ## parameter @var{k}.
 ## 
 ## @example
 ## @group
 ##   function y = applyM(x, varargin)
 ##     K = varargin@{1@}; 
 ##     y = x; y(1:K) = x(1:K)./[1:K]';	 
 ##   endfunction
 ## 
-##   [x, flag, relres, iter, resvec] = pcr(A,b,[],[],'applyM',[],3)
+##   [x, flag, relres, iter, resvec] = ...
+##                      pcr(A, b, [], [], 'applyM', [], 3)
 ## @end group
 ## @end example
 ## 
 ## @sc{References}
 ## 
 ## 	[1] W. Hackbusch, "Iterative Solution of Large Sparse Systems of
 ##  	Equations", section 9.5.4; Springer, 1994
 ##
diff --git a/scripts/statistics/models/logistic_regression.m b/scripts/statistics/models/logistic_regression.m
--- a/scripts/statistics/models/logistic_regression.m
+++ b/scripts/statistics/models/logistic_regression.m
@@ -29,17 +29,17 @@
 ## @example
 ## [theta, beta] = logistic_regression (y, x)
 ## @end example
 ##
 ## @noindent
 ## fits the model
 ##
 ## @example
-## logit (gamma_i (x)) = theta_i - beta' * x,   i = 1, ..., k-1
+## logit (gamma_i (x)) = theta_i - beta' * x,   i = 1...k-1
 ## @end example
 ##
 ## The number of ordinal categories, @var{k}, is taken to be the number
 ## of distinct values of @code{round (@var{y})}.  If @var{k} equals 2,
 ## @var{y} is binary and the model is ordinary logistic regression.  The
 ## matrix @var{x} is assumed to have full column rank.
 ##
 ## Given @var{y} only, @code{theta = logistic_regression (y)}
diff --git a/scripts/strings/str2double.m b/scripts/strings/str2double.m
--- a/scripts/strings/str2double.m
+++ b/scripts/strings/str2double.m
@@ -62,22 +62,22 @@
 ## str2double ("-.1e-5")
 ## @result{} -1.0000e-006
 ##
 ## str2double (".314e1, 44.44e-1, .7; -1e+1")
 ## @result{}
 ##    3.1400    4.4440    0.7000
 ##  -10.0000       NaN       NaN
 ##
-## line = "200,300,400,NaN,-inf,cd,yes,no,999,maybe,NaN";
+## line = "200, 300, NaN, -inf, yes, no, 999, maybe, NaN";
 ## [x, status] = str2double (line)
-## x =
-##    200   300   400   NaN  -Inf   NaN   NaN   NaN   999   NaN   NaN
-## status =
-##     0     0     0     0     0    -1    -1    -1     0    -1     0
+## @result{} x =
+##     200   300   NaN  -Inf   NaN   NaN   999   NaN   NaN
+## @result{} status =
+##       0     0     0     0    -1    -1     0    -1     0
 ## @end example
 ## @end deftypefn
 
 ## Author: Alois Schloegl <a.schloegl@ieee.org>
 ## Adapted-by: jwe
 
 function [num, status, strarray] = str2double (s, cdelim, rdelim, ddelim)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2007-10-15  Søren Hauberg  <hauberg@gmail.com>
+
+	* error.cc (Ferror): Make text fit on pages when using smallbook.
+	* load-save.cc (Fsave_header_format_string): Ditto.
+        * ov-struct.cc (Fcell2struct): Ditto.
+        * DLD-FUNCTIONS/besselj.cc (Fairy): Ditto.
+        * DLD-FUNCTIONS/urlwrite.cc (Furlwrite, Furlread): Ditto.
+
 2007-10-15  David Bateman  <dbateman@free.fr>
 
 	* graphics.cc (axes::properties::get): Fix typo.
 
 2007-10-13  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.15+.
 
diff --git a/src/DLD-FUNCTIONS/besselj.cc b/src/DLD-FUNCTIONS/besselj.cc
--- a/src/DLD-FUNCTIONS/besselj.cc
+++ b/src/DLD-FUNCTIONS/besselj.cc
@@ -410,22 +410,22 @@ See besselj.\n\
 
 DEFUN_DLD (airy, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{a}, @var{ierr}] =} airy (@var{k}, @var{z}, @var{opt})\n\
 Compute Airy functions of the first and second kind, and their\n\
 derivatives.\n\
 \n\
 @example\n\
-  K   Function   Scale factor (if a third argument is supplied)\n\
- ---  --------   ----------------------------------------------\n\
-  0   Ai (Z)     exp ((2/3) * Z * sqrt (Z))\n\
-  1   dAi(Z)/dZ  exp ((2/3) * Z * sqrt (Z))\n\
-  2   Bi (Z)     exp (-abs (real ((2/3) * Z *sqrt (Z))))\n\
-  3   dBi(Z)/dZ  exp (-abs (real ((2/3) * Z *sqrt (Z))))\n\
+ K   Function   Scale factor (if 'opt' is supplied)\n\
+---  --------   ---------------------------------------\n\
+ 0   Ai (Z)     exp ((2/3) * Z * sqrt (Z))\n\
+ 1   dAi(Z)/dZ  exp ((2/3) * Z * sqrt (Z))\n\
+ 2   Bi (Z)     exp (-abs (real ((2/3) * Z *sqrt (Z))))\n\
+ 3   dBi(Z)/dZ  exp (-abs (real ((2/3) * Z *sqrt (Z))))\n\
 @end example\n\
 \n\
 The function call @code{airy (@var{z})} is equivalent to\n\
 @code{airy (0, @var{z})}.\n\
 \n\
 The result is the same size as @var{z}.\n\
 \n\
 If requested, @var{ierr} contains the following status information and\n\
diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -190,17 +190,18 @@ DEFUN_DLD (urlwrite, args, nargout,
 @deftypefn {Loadable Function} {} urlwrite (@var{URL}, @var{localfile})\n\
 @deftypefnx {Loadable Function} {@var{f} =} urlwrite (@var{url}, @var{localfile})\n\
 @deftypefnx {Loadable Function} {[@var{f}, @var{success}] =} urlwrite (@var{url}, @var{localfile})\n\
 @deftypefnx {Loadable Function} {[@var{f}, @var{success}, @var{message}] =} urlwrite (@var{url}, @var{localfile})\n\
 Download a remote file specified by its @var{URL} and save it as\n\
 @var{localfile}.  For example,\n\
 \n\
 @example\n\
-urlwrite (\"ftp://ftp.octave.org/pub/octave/README\", \"README.txt\");\n\
+urlwrite (\"ftp://ftp.octave.org/pub/octave/README\", \n\
+          \"README.txt\");\n\
 @end example\n\
 \n\
 The full path of the downloaded file is returned in @var{f}.  The\n\
 variable @var{success} is 1 if the download was successful,\n\
 otherwise it is 0 in which case @var{message} contains an error\n\
 message.  If no output argument is specified and if an error occurs,\n\
 then the error is signaled through Octave's error handling mechanism.\n\
 \n\
@@ -337,17 +338,17 @@ otherwise it is 0 in which case @var{mes
 message.  If no output argument is specified and if an error occurs,\n\
 then the error is signaled through Octave's error handling mechanism.\n\
 \n\
 This function uses libcurl.  Curl supports, among others, the HTTP,\n\
 FTP and FILE protocols.  Username and password may be specified in the\n\
 URL.  For example,\n\
 \n\
 @example\n\
-s = urlread (\"http://username:password@@example.com/file.txt\");\n\
+s = urlread (\"http://user:password@@example.com/file.txt\");\n\
 @end example\n\
 \n\
 GET and POST requests can be specified by @var{method} and @var{param}.\n\
 The parameter @var{method} is either @samp{get} or @samp{post}\n\
 and @var{param} is a cell array of parameter and value pairs.\n\
 For example,\n\
 \n\
 @example\n\
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -979,27 +979,27 @@ function g () h (); end\n\
 function h () nargin == 1 || error (\"nargin != 1\"); end\n\
 @end group\n\
 @end example\n\
 \n\
 @noindent\n\
 calling the function @code{f} will result in a list of messages that\n\
 can help you to quickly locate the exact location of the error:\n\
 \n\
-@example\n\
+@smallexample\n\
 @group\n\
 f ()\n\
 error: nargin != 1\n\
 error: evaluating index expression near line 1, column 30\n\
 error: evaluating binary operator `||' near line 1, column 27\n\
 error: called from `h'\n\
 error: called from `g'\n\
 error: called from `f'\n\
 @end group\n\
-@end example\n\
+@end smallexample\n\
 \n\
 If the error message ends in a new line character, Octave will print the\n\
 message but will not display any traceback messages as it returns\n\
 control to the top level.  For example, modifying the error message\n\
 in the previous example to end in a new line causes Octave to only print\n\
 a single message:\n\
 \n\
 @example\n\
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1848,19 +1848,19 @@ Query or set the internal variable that 
 string used for the comment line written at the beginning of\n\
 text-format data files saved by Octave.  The format string is\n\
 passed to @code{strftime} and should begin with the character\n\
 @samp{#} and contain no newline characters.  If the value of\n\
 @code{save_header_format_string} is the empty string,\n\
 the header comment is omitted from text-format data files.  The\n\
 default value is\n\
 \n\
-@example\n\
+@smallexample\n\
 \"# Created by Octave VERSION, %a %b %d %H:%M:%S %Y %Z <USER@@HOST>\"\n\
-@end example\n\
+@end smallexample\n\
 @seealso{strftime}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (save_header_format_string);
 }
 
 /*
 ;;; Local Variables: ***
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -824,17 +824,18 @@ DEFUN (cell2struct, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} cell2struct (@var{cell}, @var{fields}, @var{dim})\n\
 Convert @var{cell} to a structure. The number of fields in @var{fields}\n\
 must match the number of elements in @var{cell} along dimension @var{dim},\n\
 that is @code{numel (@var{fields}) == size (@var{cell}, @var{dim})}.\n\
 \n\
 @example\n\
 @group\n\
-A = cell2struct (@{'Peter', 'Hannah', 'Robert'; 185, 170, 168@},\n\
+A = cell2struct (@{'Peter', 'Hannah', 'Robert';\n\
+                   185, 170, 168@},\n\
                  @{'Name','Height'@}, 1);\n\
 A(1)\n\
 @result{} ans =\n\
       @{\n\
         Height = 185\n\
         Name   = Peter\n\
       @}\n\
 \n\
