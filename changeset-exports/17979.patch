# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1385066523 -3600
#      Thu Nov 21 21:42:03 2013 +0100
# Node ID a761ba02a52fde5c1b0ee974bb1c9db4ebb42695
# Parent  86846ce0371a858dc22709b2f30807b8f734dff0
some code cleanup in file_editor_tab

* file-editor-tab.cc (valid_file_name): input parameter is checked if it names
  a file; if no or empty parameter is given, _file_name is checked instead
  (update_lexer, update_window_title, save_file, save_file_as): make use of
  the function valid_file_name

* file-editor-tab.h: valid_file_name with string parameter which is empty by
  default

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -211,22 +211,28 @@ file_editor_tab::set_file_name (const QS
 
   // update the file editor with current editing directory
   emit editor_state_changed (_copy_available, _file_name);
   // add the new file to the mru list
 
   emit mru_add_file (_file_name);
 }
 
-// valid_file_name: checks whether editor tab contains an existing file
+// valid_file_name (file): checks whether "file" names a file
+// by default, "file" is empty, then _file_name is checked
 bool
-file_editor_tab::valid_file_name ()
+file_editor_tab::valid_file_name (const QString& file)
 {
-  return (! _file_name.isEmpty ()
-          && _file_name.at (_file_name.count () - 1) != '/');
+  QString file_name;
+  if (file.isEmpty ())
+    file_name = _file_name;
+  else
+    file_name = file;
+  return (! file_name.isEmpty ()
+          && file_name.at (file_name.count () - 1) != '/');
 }
 
 void
 file_editor_tab::handle_margin_clicked (int margin, int line,
                                         Qt::KeyboardModifiers state)
 {
   if (margin == 1)
     {
@@ -290,18 +296,17 @@ file_editor_tab::update_lexer ()
       else if (_file_name.endsWith (".bat"))
         {
           lexer = new QsciLexerBatch ();
         }
       else if (_file_name.endsWith (".diff"))
         {
           lexer = new QsciLexerDiff ();
         }
-      else if (_file_name.isEmpty ()
-               || _file_name.at (_file_name.count () - 1) == '/')
+      else if (! valid_file_name ())
         {
           // new, no yet named file: let us assume it is octave
 #if defined (HAVE_LEXER_OCTAVE)
           lexer = new QsciLexerOctave ();
 #elif defined (HAVE_LEXER_MATLAB)
           lexer = new QsciLexerMatlab ();
 #else
           lexer = new QsciLexerBash ();
@@ -850,17 +855,17 @@ file_editor_tab::do_comment_selected_tex
 }
 
 void
 file_editor_tab::update_window_title (bool modified)
 {
   QString title ("");
   QString tooltip ("");
 
-  if (_file_name.isEmpty () || _file_name.at (_file_name.count () - 1) == '/')
+  if (! valid_file_name ())
     title = tr ("<unnamed>");
   else
     {
       if (_long_title)
         title = _file_name;
       else
         {
           QFileInfo file (_file_name);
@@ -1015,18 +1020,17 @@ file_editor_tab::new_file (const QString
   _edit_area->setModified (false); // new file is not modified yet
 }
 
 void
 file_editor_tab::save_file (const QString& saveFileName, bool remove_on_success)
 {
   // If it is a new file with no name, signal that saveFileAs
   // should be performed.
-  if (saveFileName.isEmpty ()
-      || saveFileName.at (saveFileName.count () - 1) == '/')
+  if (! valid_file_name (saveFileName))
     {
       save_file_as (remove_on_success);
       return;
     }
   // get the absolute path (if existing)
   QFileInfo file_info = QFileInfo (saveFileName);
   QString file_to_save;
   if (file_info.exists ())
@@ -1108,17 +1112,17 @@ file_editor_tab::save_file_as (bool remo
   else
     fileDialog = new QFileDialog (this);
 
   // Giving trouble under KDE (problem is related to Qt signal handling on unix,
   // see https://bugs.kde.org/show_bug.cgi?id=260719 ,
   // it had/has no effect on Windows, though)
   fileDialog->setOption(QFileDialog::DontUseNativeDialog, true);
 
-  if (!_file_name.isEmpty () && _file_name.at (_file_name.count () - 1) != '/')
+  if (valid_file_name ())
     {
       fileDialog->selectFile (_file_name);
     }
   else
     {
       fileDialog->selectFile ("");
 
       if (_file_name.isEmpty ())
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -171,17 +171,17 @@ private:
     { }
 
     std::string file;
     std::string dir;
     std::string function_name;
     int line;
   };
 
-  bool valid_file_name ();
+  bool valid_file_name (const QString& file=QString ());
   void save_file (const QString& saveFileName, bool remove_on_success = false);
   void save_file_as (bool remove_on_success = false);
   void message_duplicate_file_name (const QString& fileName);
 
   void update_lexer ();
   void request_add_breakpoint (int line);
   void request_remove_breakpoint (int line);
 
