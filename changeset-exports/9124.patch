# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1239861998 -7200
#      Thu Apr 16 08:06:38 2009 +0200
# Node ID 47f19c11b5589815b76e58e123728edd60c8d407
# Parent  f39b98237d5c13d1ed912f14d0e27863550cdf82
fix checking valid range subscripts

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-04-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* idx-vector.cc (idx_vector::idx_range_rep::idx_range_rep (const
+	Range&)): Check for positive integer indices. Unify gripes.
+
 2009-04-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (rec_permute_helper::blk_trans): Declare as static.
 	(Array<T>::transpose): Reuse it.
 
 2009-04-04  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::make_unique): Don't economize when unique.
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -103,41 +103,39 @@ idx_vector::idx_range_rep::idx_range_rep
     }
   else if (start < 0)
     {
       gripe_invalid_index ();
       err = true;
     }
 }
 
-static void
-gripe_non_int_range (void)
-{
-  (*current_liboctave_error_handler)
-    ("If a range is used as subscript, all elements are expected to be integers.");
-}
-
 idx_vector::idx_range_rep::idx_range_rep (const Range& r)
   : start (0), len (r.nelem ()), step (1)
 {
   if (len < 0)
     {
       gripe_invalid_range ();
       err = true;
     }
   else if (len > 0)
     {
       if (r.all_elements_are_ints ())
         {    
           start = static_cast<octave_idx_type> (r.base ()) - 1;
           step = static_cast<octave_idx_type> (r.inc ());
+          if (start < 0 || (step < 0 && start + (len-1)*step < 0))
+            {
+              gripe_invalid_index ();
+              err = true;
+            }
         }
       else
         {
-          gripe_non_int_range ();
+          gripe_invalid_index ();
           err = true;
         }
     }
 }
 
 octave_idx_type
 idx_vector::idx_range_rep::checkelem (octave_idx_type i) const
 {
