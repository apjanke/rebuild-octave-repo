# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1482871192 18000
#      Tue Dec 27 15:39:52 2016 -0500
# Node ID 023026207910301014eb80c1aec8b90f2f95c816
# Parent  7aa097a52048253b429abf07bb99f1d22048057e
* chol.cc: Fix thinko in previous change.

diff --git a/liboctave/numeric/chol.cc b/liboctave/numeric/chol.cc
--- a/liboctave/numeric/chol.cc
+++ b/liboctave/numeric/chol.cc
@@ -537,18 +537,19 @@ namespace octave
       if (j < 0 || j > n)
         (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
       ColumnVector utmp = u;
 
       OCTAVE_LOCAL_BUFFER (double, w, n);
 
       chol_mat.resize (n+1, n+1);
+      F77_INT ldcm = to_f77_int (chol_mat.rows ());
 
-      F77_XFCN (dchinx, DCHINX, (n, chol_mat.fortran_vec (), n,
+      F77_XFCN (dchinx, DCHINX, (n, chol_mat.fortran_vec (), ldcm,
                                  j + 1, utmp.fortran_vec (), w, info));
 
       return info;
     }
 
     template <>
     void
     chol<Matrix>::delete_sym (octave_idx_type j_arg)
@@ -713,18 +714,19 @@ namespace octave
       if (j < 0 || j > n)
         (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
       FloatColumnVector utmp = u;
 
       OCTAVE_LOCAL_BUFFER (float, w, n);
 
       chol_mat.resize (n+1, n+1);
+      F77_INT ldcm = to_f77_int (chol_mat.rows ());
 
-      F77_XFCN (schinx, SCHINX, (n, chol_mat.fortran_vec (), n,
+      F77_XFCN (schinx, SCHINX, (n, chol_mat.fortran_vec (), ldcm,
                                  j + 1, utmp.fortran_vec (), w, info));
 
       return info;
     }
 
     template <>
     void
     chol<FloatMatrix>::delete_sym (octave_idx_type j_arg)
@@ -895,20 +897,21 @@ namespace octave
       if (j < 0 || j > n)
         (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
       ComplexColumnVector utmp = u;
 
       OCTAVE_LOCAL_BUFFER (double, rw, n);
 
       chol_mat.resize (n+1, n+1);
+      F77_INT ldcm = to_f77_int (chol_mat.rows ());
 
       F77_XFCN (zchinx, ZCHINX, (n,
                                  F77_DBLE_CMPLX_ARG (chol_mat.fortran_vec ()),
-                                 n, j + 1,
+                                 ldcm, j + 1,
                                  F77_DBLE_CMPLX_ARG (utmp.fortran_vec ()),
                                  rw, info));
 
       return info;
     }
 
     template <>
     void
@@ -1081,19 +1084,20 @@ namespace octave
       if (j < 0 || j > n)
         (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
       FloatComplexColumnVector utmp = u;
 
       OCTAVE_LOCAL_BUFFER (float, rw, n);
 
       chol_mat.resize (n+1, n+1);
+      F77_INT ldcm = to_f77_int (chol_mat.rows ());
 
       F77_XFCN (cchinx, CCHINX, (n, F77_CMPLX_ARG (chol_mat.fortran_vec ()),
-                                 n, j + 1,
+                                 ldcm, j + 1,
                                  F77_CMPLX_ARG (utmp.fortran_vec ()),
                                  rw, info));
 
       return info;
     }
 
     template <>
     void
