# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1413018353 -7200
#      Sat Oct 11 11:05:53 2014 +0200
# Branch gui-release
# Node ID f3c4b48f3c531e4de02e8aeace1675623c49ca76
# Parent  05d8e71d20cb42aa030e43eeb994720680991d91
add a preference for the default eol mode of new files (bug #43334)

* file-editor-tab.cc (new_file): get eol mode from the settings or from the OS;
  (notice_settings): set visibility of eol chars depending on settings

* settings-dialog.ui: new checkbox for showing eol chars, new combobox for
  the default eol mode

* settings-dialog.cc (constructor): init preferences for showing eol chars and
  for the default eol mode from the settings;
  (write_changed_settings): write these new preferences to the settings files

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1391,19 +1391,38 @@ file_editor_tab::update_eol_indicator ()
         break;
     }
 }
 
 void
 file_editor_tab::new_file (const QString &commands)
 {
   update_window_title (false); // window title (no modification)
+
+  QSettings *settings = resource_manager::get_settings ();
+
+  // set the eol mode from the settings or depending on the OS if the entry is
+  // missing in the settings
+  QsciScintilla::EolMode eol_modes[] =
+    {QsciScintilla::EolWindows, QsciScintilla::EolUnix, QsciScintilla::EolMac};
+
+#if defined (Q_OS_WIN32)
+  int eol_mode = QsciScintilla::EolWindows;
+#elif defined (Q_OS_MAC)
+  int eol_mode = QsciScintilla::EolMac;
+#else
+  int eol_mode = QsciScintilla::EolUnix;
+#endif
+  _edit_area->setEolMode (
+      eol_modes[settings->value("editor/default_eol_mode",eol_mode).toInt ()]);
+
+  update_eol_indicator ();
+
   _edit_area->setText (commands);
   _edit_area->setModified (false); // new file is not modified yet
-  update_eol_indicator ();
 }
 
 void
 file_editor_tab::save_file (const QString& saveFileName, bool remove_on_success)
 {
   // If it is a new file with no name, signal that saveFileAs
   // should be performed.
   if (! valid_file_name (saveFileName))
@@ -1730,16 +1749,19 @@ file_editor_tab::notice_settings (const 
   if (settings->value ("editor/show_white_space",false).toBool ())
     if (settings->value ("editor/show_white_space_indent",false).toBool ())
       _edit_area->setWhitespaceVisibility (QsciScintilla::WsVisibleAfterIndent);
     else
       _edit_area->setWhitespaceVisibility (QsciScintilla::WsVisible);
   else
     _edit_area->setWhitespaceVisibility (QsciScintilla::WsInvisible);
 
+  _edit_area->setEolVisibility (
+              settings->value("editor/show_eol_chars",false).toBool ());
+
   if (settings->value ("editor/showLineNumbers", true).toBool ())
     {
       _edit_area->setMarginLineNumbers (2, true);
       auto_margin_width ();
       connect (_edit_area, SIGNAL (linesChanged ()),
                this, SLOT (auto_margin_width ()));
     }
   else
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -31,16 +31,17 @@ along with Octave; see the file COPYING.
 #include "ui-settings-dialog.h"
 #include <QDir>
 #include <QFileInfo>
 #include <QFileDialog>
 #include <QVector>
 #include <QHash>
 
 #ifdef HAVE_QSCINTILLA
+#include "octave-qscintilla.h"
 #include <QScrollArea>
 
 #if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
 #define HAVE_LEXER_OCTAVE
 #include <Qsci/qscilexeroctave.h>
 #elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
 #define HAVE_LEXER_MATLAB
 #include <Qsci/qscilexermatlab.h>
@@ -179,16 +180,31 @@ settings_dialog::settings_dialog (QWidge
   ui->editor_checkbox_ac_case->setChecked (
     settings->value ("editor/codeCompletion_case",true).toBool ());
   ui->editor_checkbox_ac_replace->setChecked (
     settings->value ("editor/codeCompletion_replace",false).toBool ());
   ui->editor_ws_checkbox->setChecked (
     settings->value ("editor/show_white_space", false).toBool ());
   ui->editor_ws_indent_checkbox->setChecked (
     settings->value ("editor/show_white_space_indent",false).toBool ());
+  ui->cb_show_eol->setChecked (
+    settings->value ("editor/show_eol_chars",false).toBool () );
+#ifdef HAVE_QSCINTILLA
+#if defined (Q_OS_WIN32)
+  int eol_mode = QsciScintilla::EolWindows;
+#elif defined (Q_OS_MAC)
+  int eol_mode = QsciScintilla::EolMac;
+#else
+  int eol_mode = QsciScintilla::EolUnix;
+#endif
+#else
+  int eol_mode = 1;
+#endif
+  ui->combo_eol_mode->setCurrentIndex (
+    settings->value ("editor/default_eol_mode",eol_mode).toInt () );
   ui->editor_auto_ind_checkbox->setChecked (
     settings->value ("editor/auto_indent", true).toBool ());
   ui->editor_tab_ind_checkbox->setChecked (
     settings->value ("editor/tab_indents_line",false).toBool ());
   ui->editor_bs_unind_checkbox->setChecked (
     settings->value ("editor/backspace_unindents_line",false).toBool ());
   ui->editor_ind_guides_checkbox->setChecked (
     settings->value ("editor/show_indent_guides",false).toBool ());
@@ -628,16 +644,20 @@ settings_dialog::write_changed_settings 
   settings->setValue ("editor/codeCompletion_case",
                       ui->editor_checkbox_ac_case->isChecked ());
   settings->setValue ("editor/codeCompletion_replace",
                       ui->editor_checkbox_ac_replace->isChecked ());
   settings->setValue ("editor/show_white_space",
                       ui->editor_ws_checkbox->isChecked ());
   settings->setValue ("editor/show_white_space_indent",
                       ui->editor_ws_indent_checkbox->isChecked ());
+  settings->setValue ("editor/show_eol_chars",
+                      ui->cb_show_eol->isChecked ());
+  settings->setValue ("editor/default_eol_mode",
+                      ui->combo_eol_mode->currentIndex ());
   settings->setValue ("editor/auto_indent",
                       ui->editor_auto_ind_checkbox->isChecked ());
   settings->setValue ("editor/tab_indents_line",
                       ui->editor_tab_ind_checkbox->isChecked ());
   settings->setValue ("editor/backspace_unindents_line",
                       ui->editor_bs_unind_checkbox->isChecked ());
   settings->setValue ("editor/show_indent_guides",
                       ui->editor_ind_guides_checkbox->isChecked ());
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -27,17 +27,17 @@
     <widget class="QTabWidget" name="tabWidget">
      <property name="minimumSize">
       <size>
        <width>0</width>
        <height>0</height>
       </size>
      </property>
      <property name="currentIndex">
-      <number>5</number>
+      <number>1</number>
      </property>
      <widget class="QWidget" name="tab_general">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <attribute name="title">
        <string>General</string>
       </attribute>
@@ -401,27 +401,64 @@
           <bool>true</bool>
          </property>
          <widget class="QWidget" name="scrollAreaWidgetContents">
           <property name="geometry">
            <rect>
             <x>0</x>
             <y>0</y>
             <width>662</width>
-            <height>580</height>
+            <height>613</height>
            </rect>
           </property>
           <layout class="QVBoxLayout" name="verticalLayout_16">
            <item>
             <layout class="QVBoxLayout" name="verticalLayout_9">
              <item>
               <layout class="QGridLayout" name="editor_common_settings_grid">
                <property name="horizontalSpacing">
                 <number>6</number>
                </property>
+               <item row="6" column="2">
+                <layout class="QHBoxLayout" name="horizontalLayout_3">
+                 <item>
+                  <widget class="QLabel" name="editor_long_line_column_text">
+                   <property name="text">
+                    <string>After Column</string>
+                   </property>
+                  </widget>
+                 </item>
+                 <item>
+                  <widget class="QSpinBox" name="editor_long_line_column">
+                   <property name="minimum">
+                    <number>2</number>
+                   </property>
+                   <property name="maximum">
+                    <number>256</number>
+                   </property>
+                   <property name="value">
+                    <number>80</number>
+                   </property>
+                  </widget>
+                 </item>
+                 <item>
+                  <spacer name="horizontalSpacer_7">
+                   <property name="orientation">
+                    <enum>Qt::Horizontal</enum>
+                   </property>
+                   <property name="sizeHint" stdset="0">
+                    <size>
+                     <width>40</width>
+                     <height>20</height>
+                    </size>
+                   </property>
+                  </spacer>
+                 </item>
+                </layout>
+               </item>
                <item row="3" column="0">
                 <widget class="QCheckBox" name="editor_ws_checkbox">
                  <property name="text">
                   <string>Show whitespace</string>
                  </property>
                 </widget>
                </item>
                <item row="2" column="0">
@@ -452,27 +489,27 @@
                  <property name="enabled">
                   <bool>false</bool>
                  </property>
                  <property name="text">
                   <string>Do not show whitespace used for indentation</string>
                  </property>
                 </widget>
                </item>
-               <item row="4" column="0">
+               <item row="5" column="0">
                 <widget class="QCheckBox" name="editor_highlightCurrentLine">
                  <property name="enabled">
                   <bool>true</bool>
                  </property>
                  <property name="text">
                   <string>Highlight current line</string>
                  </property>
                 </widget>
                </item>
-               <item row="4" column="2">
+               <item row="5" column="2">
                 <layout class="QGridLayout" name="editor_grid_current_line" rowstretch="0" columnstretch="0,0,0,0,0">
                  <property name="horizontalSpacing">
                   <number>12</number>
                  </property>
                  <property name="verticalSpacing">
                   <number>0</number>
                  </property>
                  <item row="0" column="1">
@@ -603,86 +640,105 @@
                  <property name="sizeHint" stdset="0">
                   <size>
                    <width>10</width>
                    <height>0</height>
                   </size>
                  </property>
                 </spacer>
                </item>
-               <item row="5" column="0">
+               <item row="6" column="0">
                 <widget class="QCheckBox" name="editor_long_line_marker">
                  <property name="toolTip">
                   <string>This works well for monospaced fonts. The line is drawn at a position based on the width of a space character in the default font. It may not work very well if styles use proportional fonts or if varied font sizes or bold, italic and normal texts are used.</string>
                  </property>
                  <property name="text">
                   <string>Draw a long  line marker</string>
                  </property>
                  <property name="checked">
                   <bool>true</bool>
                  </property>
                 </widget>
                </item>
-               <item row="5" column="2">
-                <layout class="QHBoxLayout" name="horizontalLayout_3">
+               <item row="7" column="0">
+                <widget class="QCheckBox" name="cb_code_folding">
+                 <property name="text">
+                  <string>Enable Code Folding</string>
+                 </property>
+                 <property name="checked">
+                  <bool>true</bool>
+                 </property>
+                </widget>
+               </item>
+               <item row="8" column="0">
+                <widget class="QCheckBox" name="cb_edit_status_bar">
+                 <property name="text">
+                  <string>Show status bar</string>
+                 </property>
+                 <property name="checked">
+                  <bool>true</bool>
+                 </property>
+                </widget>
+               </item>
+               <item row="4" column="0">
+                <widget class="QCheckBox" name="cb_show_eol">
+                 <property name="text">
+                  <string>Show eol characters</string>
+                 </property>
+                </widget>
+               </item>
+               <item row="4" column="2">
+                <layout class="QHBoxLayout" name="horizontalLayout_17">
                  <item>
-                  <widget class="QLabel" name="editor_long_line_column_text">
+                  <widget class="QLabel" name="label_22">
                    <property name="text">
-                    <string>After Column</string>
+                    <string>Default eol mode</string>
                    </property>
                   </widget>
                  </item>
                  <item>
-                  <widget class="QSpinBox" name="editor_long_line_column">
-                   <property name="minimum">
-                    <number>2</number>
+                  <widget class="QComboBox" name="combo_eol_mode">
+                   <property name="sizeAdjustPolicy">
+                    <enum>QComboBox::AdjustToMinimumContentsLength</enum>
+                   </property>
+                   <property name="minimumContentsLength">
+                    <number>7</number>
                    </property>
-                   <property name="maximum">
-                    <number>256</number>
-                   </property>
-                   <property name="value">
-                    <number>80</number>
-                   </property>
+                   <item>
+                    <property name="text">
+                     <string>Windows</string>
+                    </property>
+                   </item>
+                   <item>
+                    <property name="text">
+                     <string>Unix</string>
+                    </property>
+                   </item>
+                   <item>
+                    <property name="text">
+                     <string>Mac</string>
+                    </property>
+                   </item>
                   </widget>
                  </item>
                  <item>
-                  <spacer name="horizontalSpacer_7">
+                  <spacer name="horizontalSpacer_17">
                    <property name="orientation">
                     <enum>Qt::Horizontal</enum>
                    </property>
                    <property name="sizeHint" stdset="0">
                     <size>
                      <width>40</width>
                      <height>20</height>
                     </size>
                    </property>
                   </spacer>
                  </item>
                 </layout>
                </item>
-               <item row="6" column="0">
-                <widget class="QCheckBox" name="cb_code_folding">
-                 <property name="text">
-                  <string>Enable Code Folding</string>
-                 </property>
-                 <property name="checked">
-                  <bool>true</bool>
-                 </property>
-                </widget>
-               </item>
-               <item row="7" column="0">
-                <widget class="QCheckBox" name="cb_edit_status_bar">
-                 <property name="text">
-                  <string>Show status bar</string>
-                 </property>
-                 <property name="checked">
-                  <bool>true</bool>
-                 </property>
-                </widget>
-               </item>
               </layout>
              </item>
              <item>
               <widget class="Line" name="line">
                <property name="orientation">
                 <enum>Qt::Horizontal</enum>
                </property>
               </widget>
