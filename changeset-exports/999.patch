# HG changeset patch
# User jwe
# Date 787881013 0
#      Mon Dec 19 23:50:13 1994 +0000
# Node ID b989de67b22dc8a719b258e07d9c891d651c4ff5
# Parent  032fcf9f45a4d2865633857ce94a2b369f2a73ee
[project @ 1994-12-19 23:50:05 by jwe]

diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -736,76 +736,76 @@ subplot_style::print_code (ostream& os)
       os << " ";
       pointtype->print_code (os);
     }
 }
 
 subplot::subplot (void)
 {
   plot_data = 0;
-  using = 0;
-  title = 0;
-  style = 0;
+  using_clause = 0;
+  title_clause = 0;
+  style_clause = 0;
 }
 
 subplot::subplot (tree_expression *data)
 {
   plot_data = data;
-  using = 0;
-  title = 0;
-  style = 0;
+  using_clause = 0;
+  title_clause = 0;
+  style_clause = 0;
 }
 
 subplot::subplot (subplot_using *u, tree_expression *t, subplot_style *s)
 {
   plot_data = 0;
-  using = u;
-  title = t;
-  style = s;
+  using_clause = u;
+  title_clause = t;
+  style_clause = s;
 }
 
 subplot::~subplot (void)
 {
   delete plot_data;
-  delete using;
-  delete title;
-  delete style;
+  delete using_clause;
+  delete title_clause;
+  delete style_clause;
 }
 
 void
 subplot::set_data (tree_expression *data)
 {
   plot_data = data;
 }
 
 tree_constant
 subplot::extract_plot_data (int ndim, tree_constant& data)
 {
   tree_constant retval;
 
-  if (using)
+  if (using_clause)
     {
-      ColumnVector val = using->values (ndim);
+      ColumnVector val = using_clause->values (ndim);
 
       Octave_object args;
       args(1) = val;
       args(0) = tree_constant::magic_colon_t;
 
       Octave_object tmp = data.eval (0, 1, args);
       retval = tmp(0);
 
       if (error_state)
 	return tree_constant ();
     }
   else
     {
       retval = data;
     }
 
-  if (ndim == 2 && style && style->errorbars ())
+  if (ndim == 2 && style_clause && style_clause->errorbars ())
     {
       int nc = retval.columns ();
 
       if (nc < 3 || nc > 4)
 	{
 	  error ("plots with errorbars require 3 or 4 columns of data");
 	  error ("but %d were provided", nc);
 	  return tree_constant ();
@@ -844,19 +844,19 @@ subplot::handle_plot_data (int ndim, ost
 		  free (file);
 		  file = 0;
 
 // Opening as a file failed.  Let's try passing it along as a plot
 // command.
 		  plot_buf << " " << data.string_value ();
 		}
 
-	      if (using)
+	      if (using_clause)
 		{
-		  int status = using->print (ndim, n_max, plot_buf);
+		  int status = using_clause->print (ndim, n_max, plot_buf);
 		  if (status < 0)
 		    return -1;
 		}
 	    }
 	  else
 	    {
 // Eliminate the need for printing a using clause to plot_buf.
 
@@ -900,60 +900,60 @@ subplot::handle_plot_data (int ndim, ost
 int
 subplot::print (int ndim, ostrstream& plot_buf)
 {
   int status = handle_plot_data (ndim, plot_buf);
 
   if (status < 0)
     return -1;
 
-  if (title)
+  if (title_clause)
     {
-      tree_constant tmp = title->eval (0);
+      tree_constant tmp = title_clause->eval (0);
       if (! error_state && tmp.is_string ())
 	plot_buf << " " << GNUPLOT_COMMAND_TITLE << " "
 	  << '"' << tmp.string_value () << '"';
       else
 	{
 	  warning ("line title must be a string");
 	  plot_buf << " " << GNUPLOT_COMMAND_TITLE << " "
 	    << '"' << "line " << plot_line_count << '"';
 	}
     }
   else
     plot_buf << " " << GNUPLOT_COMMAND_TITLE << " "
       << '"' << "line " << plot_line_count << '"';
 
-  if (style)
+  if (style_clause)
     {
-      int status = style->print (plot_buf);
+      int status = style_clause->print (plot_buf);
       if (status < 0)
 	return -1;
     }
 
   return 0;
 }
 
 void
 subplot::print_code (ostream& os)
 {
   if (plot_data)
     {
       os << " ";
       plot_data->print_code (os);
     }
 
-  if (using)
-    using->print_code (os);
+  if (using_clause)
+    using_clause->print_code (os);
 
-  if (title)
-    title->print_code (os);
+  if (title_clause)
+    title_clause->print_code (os);
 
-  if (style)
-    style->print_code (os);
+  if (style_clause)
+    style_clause->print_code (os);
 }
 
 int
 subplot_list::print (int ndim, ostrstream& plot_buf)
 {
   int status = 0;
 
   for (Pix p = first (); p != 0; next (p))
diff --git a/src/pt-plot.h b/src/pt-plot.h
--- a/src/pt-plot.h
+++ b/src/pt-plot.h
@@ -172,19 +172,19 @@ public:
   int handle_plot_data (int ndim, ostrstream& plot_buf);
 
   int print (int ndim, ostrstream& plot_buf);
 
   void print_code (ostream& os);
 
 private:
   tree_expression *plot_data;
-  subplot_using *using;
-  tree_expression *title;
-  subplot_style *style;
+  subplot_using *using_clause;
+  tree_expression *title_clause;
+  subplot_style *style_clause;
 };
 
 class
 subplot_list : public SLList<subplot *>, public tree_print_code
 {
  public:
   subplot_list (void) : SLList<subplot *> () { }
 
