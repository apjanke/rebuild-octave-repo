# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1477914845 -3600
#      Mon Oct 31 12:54:05 2016 +0100
# Branch stable
# Node ID a9b4476a734ec1d760b674935d738f1aa51705f6
# Parent  2100cd2e1be002c7f70b266d0134ad912bb127dc
avoid compilation error for 64-bit indexing

* libinterp/corefcn/fft.cc (Fdlmread): Cast literal integer argument to
octave_idx_type in the constructor of idx_vector.

diff --git a/libinterp/corefcn/fft.cc b/libinterp/corefcn/fft.cc
--- a/libinterp/corefcn/fft.cc
+++ b/libinterp/corefcn/fft.cc
@@ -110,17 +110,17 @@ do_fft (const octave_value_list &args, c
         return octave_value (NDArray (dims));
     }
 
   if (n_points == 1)
     {
       octave_value_list idx (ndims);
       for (octave_idx_type i = 0; i < ndims; i++)
         idx(i) = idx_vector::colon;
-      idx(dim) = idx_vector (0);
+      idx(dim) = idx_vector (static_cast <octave_idx_type> (0));
 
       return arg.do_index_op (idx);
     }
 
   if (arg.is_single_type ())
     {
       if (arg.is_real_type ())
         {
@@ -296,9 +296,8 @@ dimension of the matrix along which the 
 %! s = cos (n*t);
 %!
 %! S = zeros (size (t), "single");
 %! S(n+1) = N/2;
 %! S(N-n+1) = N/2;
 %!
 %! assert (ifft (S), s, 4*N*eps ("single"));
 */
-
