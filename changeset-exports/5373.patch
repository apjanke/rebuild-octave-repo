# HG changeset patch
# User jwe
# Date 1117200322 0
#      Fri May 27 13:25:22 2005 +0000
# Node ID eabc8e96c0063be4fa48370169e9eb83dee5ba55
# Parent  b4485a3ce01b7942689d99dd507a02f9b211a52e
[project @ 2005-05-27 13:25:22 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,16 @@
+2005-05-27  "Dmitri A. Sergatskov"  <dasergatskov@gmail.com>
+
+	* plot/loglog.m: Fix set commands.
+
 2005-05-24  John W. Eaton  <jwe@octave.org>
 
+	* statistics/tests/anova.m: Use mean (y(:)) to compute total_mean.
+
 	* strings/strncmp.m: New file, from Tom Holroyd
 	<tomh@kurage.nimh.nih.gov>.
 
 	* strings/strcmp.m: Return logical values in all cases.
 
 2005-05-23  John W. Eaton  <jwe@octave.org>
 
 	* plot/orient.m: New file.  Adapt to Octave coding style.
diff --git a/scripts/plot/loglog.m b/scripts/plot/loglog.m
--- a/scripts/plot/loglog.m
+++ b/scripts/plot/loglog.m
@@ -31,14 +31,14 @@
 
 function loglog (varargin)
 
   ## XXX FIXME XXX -- these plot states should really just be set
   ## temporarily, probably inside an unwind_protect block, but there is
   ## no way to determine their current values.
 
   __gnuplot_raw__ ("set logscale x;\n");
-  __gnuplot_raw__ ("logscale y;\n");
-  __gnuplot_raw__ ("nopolar;\n");
+  __gnuplot_raw__ ("set logscale y;\n");
+  __gnuplot_raw__ ("set nopolar;\n");
 
   __plt__ ("loglog", varargin{:});
 
 endfunction
diff --git a/scripts/statistics/tests/anova.m b/scripts/statistics/tests/anova.m
--- a/scripts/statistics/tests/anova.m
+++ b/scripts/statistics/tests/anova.m
@@ -75,17 +75,17 @@ function [pval, f, df_b, df_w] = anova (
     for i = 1 : k;
       v = y (find (g == group_label (i)));
       group_count (i) = length (v);
       group_mean (i) = mean (v);
     endfor
 
   endif
 
-  total_mean = mean (y);
+  total_mean = mean (y(:));
   SSB = sum (group_count .* (group_mean - total_mean) .^ 2);
   SST = sumsq (reshape (y, n, 1) - total_mean);
   SSW = SST - SSB;
   df_b = k - 1;
   df_w = n - k;
   v_b = SSB / df_b;
   v_w = SSW / df_w;
   f = v_b / v_w;
