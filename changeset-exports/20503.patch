# HG changeset patch
# User Rik <rik@octave.org>
# Date 1441221588 25200
#      Wed Sep 02 12:19:48 2015 -0700
# Branch stable
# Node ID 0829b6ff3ac9132d05c9786b534c09b05982a30b
# Parent  caa5de39147e296f545359d7a2ddcc3fae4e17d3
Use backslash as windows file separator for canonicalize_file_name (Bug #45816).

* file-ops.cc (octave_canonicalize_file_name): call std::replace to change all
'/' to '\' on Windows platforms.

diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -49,16 +49,20 @@ extern "C" {
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "oct-passwd.h"
 #include "pathlen.h"
 #include "quit.h"
 #include "singleton-cleanup.h"
 #include "str-vec.h"
 
+#if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
+#include <algorithm>
+#endif
+
 file_ops *file_ops::instance = 0;
 
 bool
 file_ops::instance_ok (void)
 {
   bool retval = true;
 
   if (! instance)
@@ -733,14 +737,19 @@ octave_canonicalize_file_name (const std
   char *tmp = gnulib::canonicalize_file_name (name.c_str ());
 
   if (tmp)
     {
       retval = tmp;
       free (tmp);
     }
 
+#if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
+  // Canonical Windows file separator is backslash.
+  std::replace (retval.begin (), retval.end (), '/', '\\');
+#endif
+
   if (retval.empty ())
     msg = gnulib::strerror (errno);
 
   return retval;
 }
 
