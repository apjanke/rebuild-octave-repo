# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1511183110 18000
#      Mon Nov 20 08:05:10 2017 -0500
# Node ID ad0ca13aa6e2509ad13fceff6c65bcdcec5cc567
# Parent  6bfb96ab73cbe2c76e3cec75257e083c38dd0ec3
Fix typo: varaible -> variable.

diff --git a/etc/OLD-ChangeLogs/ChangeLog.1 b/etc/OLD-ChangeLogs/ChangeLog.1
--- a/etc/OLD-ChangeLogs/ChangeLog.1
+++ b/etc/OLD-ChangeLogs/ChangeLog.1
@@ -6751,17 +6751,17 @@ Tue May 11 02:20:43 1993  John W. Eaton 
 	* Update dependencies using the output from running `make deps'.
 
 	* pr-output.cc (set_output_prec_and_fw): New function.
 	* (set_format_style): Use it.
 	* (set_format functions): Use user_pref variables for precision
 	and field width.
 
 	* variables.cc (octave_real_scalar_variable): New function.
-	* buitlins.cc (builtin_string_varaibles): Add output_precision and
+	* buitlins.cc (builtin_string_variables): Add output_precision and
 	max_field_width to the list (really need a separate list for
 	numeric values...).
 	* user-prefs.cc (set_output_max_field_width): New function to be
 	called when output_max_field_width changes.
 	* (output_precision): Likewise, for output_precision.
 
 	* sighandlers.cc (pipe_handler_error_count): New global variable.
 	* (sigpipe_handler): Use it to keep from printing more than one
diff --git a/etc/OLD-ChangeLogs/doc-ChangeLog b/etc/OLD-ChangeLogs/doc-ChangeLog
--- a/etc/OLD-ChangeLogs/doc-ChangeLog
+++ b/etc/OLD-ChangeLogs/doc-ChangeLog
@@ -1658,17 +1658,17 @@ 2008-10-22  David Bateman  <dbateman@fre
 	* interpreter/Makefile.in (EXAMPLE_FILES_NODIR): Update for new OOP
 	class example location.
 	* interpreter/oop.txi: Ditto.
 
 2008-10-15  David Bateman  <dbateman@free.fr>
 
 	* interpreter/oop.txi: New file.
 	* interpreter/Makefile.in (SUB_SOURCES): Add it here.
-	(POLYNOMIAL_FILES_NODIR): New varaible for polynomial example class
+	(POLYNOMIAL_FILES_NODIR): New variable for polynomial example class
 	methods.
 	(EXAMPLE_FILES_NODIR): Add POLYNOMIAL_FILES_NODIR here.
 	* interpreter/octave.texi: Reference new OOP chapter here.
 	* interpreter/func.txi: Document private directories and function
 	precedence here.
 
 2008-10-16  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
diff --git a/etc/OLD-ChangeLogs/src-ChangeLog b/etc/OLD-ChangeLogs/src-ChangeLog
--- a/etc/OLD-ChangeLogs/src-ChangeLog
+++ b/etc/OLD-ChangeLogs/src-ChangeLog
@@ -27123,17 +27123,17 @@ 2003-07-30  John W. Eaton  <jwe@bevo.che
 	warn_matlab_incompatible to TRUE.
 
 	* lex.l (Vwhitespace_in_literal_matrix): Delete.
 	(whitespace_in_literal_matrix): Delete.
 	(symbols_of_lex): Delete DEFVAR for whitespace_in_literal_matrix.
 	(<MATRIX_START>{S}*\,{S}*, <MATRIX_START>{S}+,
 	(<MATRIX_START>{S}*{COMMENT}{SNLCMT}*,
 	<MATRIX_START>{S}*{NL}{SNLCMT}*, maybe_unput_comma): Behave as though
-	old Vwhitespace_in_literal_matrix varaible is always 1.
+	old Vwhitespace_in_literal_matrix variable is always 1.
 
 	* octave.cc (maximum_braindamage): Don't set
 	whitespace_in_literal_matrix.
 
 2003-07-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install-lib): Use $(INSTALL), not
 	$(INSTALL_PROGRAM) for $(SHLLIB) files.
@@ -28120,17 +28120,17 @@ 2002-12-25  John W. Eaton  <jwe@bevo.che
 	(is_keyword): And here.
 	(lookup_identifier): Maybe prepend parent function name.
 
 	* variables.cc (initialize_symbol_tables): Give names to the three
 	main symbol tables.
 	* symtab.cc (symbol_table::lookup, symbol_table::rename): Print
 	debugging info if Vdebug_symtab_lookups is nonzero.
 	(debug_symtab_lookups): New function.
-	(Vdebug_symtab_lookups): New static varaible.
+	(Vdebug_symtab_lookups): New static variable.
 	(symbols_of_symtab): DEFVAR it.
 	* symtab.h (symbol_table::table_name): New member variable.
 	(symtab_count): New static member variable.
 	(symbol_table::symbol_table): Handle table name.
 
 2002-12-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (frob_function): Don't give nested functions the same
@@ -30443,17 +30443,17 @@ 2001-03-26  Paul Kienzle  <pkienzle@kien
 	* DLD_FUNCTIONS/inv.cc (Finv): Return rcond if requested.
 
 2001-02-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt.h (tree::break_statement): New static member.
 	(tree::break_function): Make const.
 	* pt.cc (tree::break_statement): Initialize here.
 	(tree::break_function): Make const.
-	* pb-bp.h (break_statement): Delete global varaible declaration.
+	* pb-bp.h (break_statement): Delete global variable declaration.
 	* pt-bp.cc (break_statement): Delete global variable definition.
 
 	* pt-bp.h (tree_breakpoint::bp_list): Rename from lst.
 
 	* pt.h: Don't inlcude ov-usr-fcn.h.
 	Provide forward declaration of octave_user_function class.
 
 2001-02-28  Ben Sapp  <bsapp@lanl.gov>
@@ -33811,17 +33811,17 @@ Tue Jun  3 16:47:34 1997  John W. Eaton 
 	(default_eval_print_flag): Likewise.
 	(safe_fclose): Likewise.
 	(eval_string): Likewise.
 	(Fsource): Likewise.
 	(Ffeval): Likewise.
 	(feval): Likewise.
 	(Feval): Likewise.
 	(symbols_of_parse): Define default_eval_print_flag here instead of
-	in varaibles.cc.
+	in variables.cc.
 	(looks_like_octave_copyright): Move here from variables.cc
 	(gobble_leading_whitespace): Likeiwse.
 	(is_function_file): Likewise.
 	(restore_input_stream): Likewise.
 	(parse_fcn_file): Likewise.
 	(load_fcn_from_file): Likewise.
 	(get_help_from_file): Likewise.
 
@@ -34224,17 +34224,17 @@ Fri May  9 07:40:59 1997  John W. Eaton 
 	* pt-exp.cc (tree_simple_assignment_expression::eval): Use new
 	octave_variabl_reference::index function to handle indexing.
 
 	* oct-var-ref.h, oct-var-ref.cc (idx): New data member.
 	(octave_variable_reference::index): Set it.
 	(octave_variable_reference::assign): Handle indexing here.
 	Delete version of this function htat takes index arg.
 
-	* variables.h (struct builtin_varaible): Delete.
+	* variables.h (struct builtin_variable): Delete.
 	* variables.cc (install_builtin_variable): Take all elts of
 	builtin_variable struct directly.
 	* defun.h (DEFVAR_INT): Call install_builtin_variable directly.
 
 	* symtab.h, defun-int.h: Don't include variables.h.
 
 	* symtab.h (symbol_record::sv_function): Move typedef here.
 	* variables.h: From here.
@@ -36157,17 +36157,17 @@ Mon Jun 24 02:13:27 1996  John W. Eaton 
 	INSTALL_DATA for installing shared libraries.
 
 	* lex.l (grab_help_text): Ignore all initial comment characters,
 	not just the first.
 	* variables.cc (gobble_leading_white_space): Likewise.
 
 Sat Jun 22 22:43:45 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
-	* input.h, input.cc (octave_completion_matches_called): New varaible.
+	* input.h, input.cc (octave_completion_matches_called): New variable.
 	(Fcompletion_matches): Set it to true on a successful call.
 	* toplev.cc (main_loop): If octave_completion_matches_called is
 	true, don't increment current_command_number.
 
 Thu Jun 13 03:52:19 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* variables.cc (is_mapper_function_name,
 	is_builtin_function_name): New functions.
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -141,17 +141,17 @@ err_file_open (const std::string& fcn, c
 // symbol table.  If GLOBAL is TRUE, make the variable global.
 
 static void
 install_loaded_variable (const std::string& name,
                          const octave_value& val,
                          bool global, const std::string& /*doc*/)
 {
   octave::symbol_table& symtab
-    = octave::__get_symbol_table__ ("install_loaded_varaible");
+    = octave::__get_symbol_table__ ("install_loaded_variable");
 
   octave::symbol_scope *scope
     = symtab.require_current_scope ("install_loaded_variable");
 
   if (global)
     {
       scope->clear_variable (name);
       scope->mark_global (name);
diff --git a/libinterp/parse-tree/jit-ir.h b/libinterp/parse-tree/jit-ir.h
--- a/libinterp/parse-tree/jit-ir.h
+++ b/libinterp/parse-tree/jit-ir.h
@@ -678,17 +678,17 @@ namespace octave
       return dom_succ[idx];
     }
 
     size_t dom_successor_count (void) const
     {
       return dom_succ.size ();
     }
 
-    // call pop_varaible on all instructions
+    // call pop_variable on all instructions
     void pop_all (void);
 
     virtual std::ostream& print (std::ostream& os, size_t indent = 0) const;
 
     jit_block * maybe_split (jit_factory& factory, jit_block_list& blocks,
                              jit_block *asuccessor);
 
     jit_block * maybe_split (jit_factory& factory, jit_block_list& blocks,
