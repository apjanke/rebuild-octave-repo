# HG changeset patch
# User Rik <rik@octave.org>
# Date 1390594847 28800
#      Fri Jan 24 12:20:47 2014 -0800
# Node ID 12eb4eb90486e646da1908648f3be97ccde8c66e
# Parent  73f81a7509a29665cf99fecd9fbb7348aa1b170a
Fix dbtype problems when used in subfunctions.

* debug.cc (Fdbtype): Use fcn_file_name() rather than name() when passing
argument to do_dbtype.

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -941,17 +941,17 @@ numbers.\n\
   if (! error_state)
     {
       switch (nargin)
         {
         case 0: // dbtype
           dbg_fcn = get_user_code ();
 
           if (dbg_fcn)
-            do_dbtype (octave_stdout, dbg_fcn->name (), 0,
+            do_dbtype (octave_stdout, dbg_fcn->fcn_file_name (), 0,
                        std::numeric_limits<int>::max ());
           else
             error ("dbtype: must be inside a user function to give no arguments to dbtype\n");
           break;
 
         case 1: // (dbtype func) || (dbtype start:end)
           {
             std::string arg = argv[1];
@@ -973,27 +973,28 @@ numbers.\n\
                       end = std::numeric_limits<int>::max ();
                     else
                       end = atoi (end_str.c_str ());
 
                     if (std::min (start, end) <= 0)
                       error ("dbtype: start and end lines must be >= 1\n");
 
                     if (start <= end)
-                      do_dbtype (octave_stdout, dbg_fcn->name (), start, end);
+                      do_dbtype (octave_stdout, dbg_fcn->fcn_file_name (),
+                                                start, end);
                     else
                       error ("dbtype: start line must be less than end line\n");
                   }
               }
             else  // (dbtype func)
               {
                 dbg_fcn = get_user_code (arg);
 
                 if (dbg_fcn)
-                  do_dbtype (octave_stdout, dbg_fcn->name (), 0,
+                  do_dbtype (octave_stdout, dbg_fcn->fcn_file_name (), 0,
                              std::numeric_limits<int>::max ());
                 else
                   error ("dbtype: function <%s> not found\n", arg.c_str ());
               }
           }
           break;
 
         case 2: // (dbtype func start:end) , (dbtype func start)
@@ -1021,17 +1022,17 @@ numbers.\n\
                   start = atoi (arg.c_str ());
                   end = start;
                 }
 
               if (std::min (start, end) <= 0)
                 error ("dbtype: start and end lines must be >= 1\n");
 
               if (start <= end)
-                do_dbtype (octave_stdout, dbg_fcn->name (), start, end);
+                do_dbtype (octave_stdout, dbg_fcn->fcn_file_name (), start, end);
               else
                 error ("dbtype: start line must be less than end line\n");
             }
           else
             error ("dbtype: function <%s> not found\n", argv[1].c_str ());
 
           break;
 
