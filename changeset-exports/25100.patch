# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522757740 14400
#      Tue Apr 03 08:15:40 2018 -0400
# Node ID b8ffceb0635450aa75ef6866dc2e7f15e90e6afa
# Parent  7e04ddd963a9bb17c37f4ef68ab1acb4b7147697
# Parent  daff5efe062fe6362a45fc342f02a7c15000bd33
maint: Merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2569,23 +2569,25 @@ OCTAVE_CHECK_LIB(sundials_nvecserial, [S
 save_LIBS="$LIBS"
 LIBS="$SUNDIALS_NVECSERIAL_LIBS $KLU_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(sundials_ida, [SUNDIALS IDA],
   [SUNDIALS IDA library not found.  Solvers ode15i and ode15s will be disabled.],
   [ida/ida.h ida.h], [IDAInit],
   [], [don't use SUNDIALS IDA library, solvers ode15i and ode15s will be disabled],
   [warn_sundials_ida=
    OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE
+   OCTAVE_CHECK_SUNDIALS_IDA_DENSE
    OCTAVE_CHECK_SUNDIALS_IDAKLU])
 LIBS="$save_LIBS"
 
 dnl Define this way instead of with an #if in oct-conf-post.h so that
 dnl the build features script will get the correct value.
 if test -n "$SUNDIALS_IDA_LIBS" \
     && test -n "$SUNDIALS_NVECSERIAL_LIBS" \
+    && test $octave_cv_sundials_ida_dense = yes \
     && test $octave_cv_sundials_realtype_is_double = yes; then
   AC_DEFINE(HAVE_SUNDIALS, 1, [Define to 1 if SUNDIALS is available.])
 fi
 
 ## Collections of flags.
 dnl These are here instead of just in the Makefile.am file because we
 dnl substitute some of them into other source files like mkoctfile.
 
@@ -3404,17 +3406,17 @@ Octave is now configured for $canonical_
   X11 libraries:                 $X11_LIBS
   Z CPPFLAGS:                    $Z_CPPFLAGS
   Z LDFLAGS:                     $Z_LDFLAGS
   Z libraries:                   $Z_LIBS
 
   Default pager:                 $DEFAULT_PAGER
   gnuplot:                       $GNUPLOT
 
-  Build Octave Qt GUI:                  $build_qt_gui
+  Build Octave Qt GUI:                  $BUILD_QT_SUMMARY_MSG
   JIT compiler for loops:               $ENABLE_JIT
   Build Java interface:                 $build_java
   Build static libraries:               $STATIC_LIBS
   Build shared libraries:               $SHARED_LIBS
   Dynamic Linking:                      $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:     $USE_READLINE
   64-bit array dims and indexing:       $ENABLE_64
   64-bit BLAS array dims and indexing:  $HAVE_64_BIT_BLAS
diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -36,16 +36,19 @@ along with Octave; see the file COPYING.
 #include "ov.h"
 #include "ovl.h"
 #include "parse.h"
 
 #if defined (HAVE_SUNDIALS)
 
 #  if defined (HAVE_IDA_IDA_H)
 #    include <ida/ida.h>
+#  endif
+
+#  if defined (HAVE_IDA_IDA_DENSE_H)
 #    include <ida/ida_dense.h>
 #  endif
 
 #  if defined (HAVE_IDA_IDA_KLU_H)
 #    include <ida/ida_klu.h>
 #    include <sundials/sundials_sparse.h>
 #  endif
 
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -87,19 +87,16 @@ octave_fcn_handle::octave_fcn_handle (co
 
   if (uf && nm != anonymous)
     {
       octave::symbol_scope uf_scope = uf->scope ();
 
       if (uf_scope)
         uf_scope.cache_name (nm);
     }
-
-  if (uf && uf->is_nested_function () && ! uf->is_subfunction ())
-    error ("handles to nested functions are not yet supported");
 }
 
 octave_value_list
 octave_fcn_handle::subsref (const std::string& type,
                             const std::list<octave_value_list>& idx,
                             int nargout)
 {
   octave_value_list retval;
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1710,23 +1710,29 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
     OCTAVE_CHECK_QT_VERSION([$ver])
     if test $build_qt_gui = yes; then
       have_qt_version=$ver
       break
     fi
   done
 
   if test $build_qt_gui = yes; then
+    BUILD_QT_SUMMARY_MSG="yes (version: $have_qt_version)"
     if test x"$have_qt_version" = x4; then
       AC_DEFINE(HAVE_QT4, 1, [Define to 1 if using Qt version 4.])
     fi
     if test x"$have_qt_version" = x5; then
       AC_DEFINE(HAVE_QT5, 1, [Define to 1 if using Qt version 5.])
     fi
   else
+    if test -n "$QT_MODULES_MISSING"; then
+      BUILD_QT_SUMMARY_MSG="no (missing:$QT_MODULES_MISSING)"
+    else
+      BUILD_QT_SUMMARY_MSG="no"
+    fi
     if test -n "$warn_qt_libraries"; then
       OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
     fi
     if test -n "$warn_qt_version"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_version])
     fi
     if test -n "$warn_qt_tools"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
@@ -1911,16 +1917,26 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     ;;
   esac
 
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
     [build_qt_gui=no
      warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])
 
+  QT_MODULES_MISSING=
+  if test $build_qt_gui = no; then
+    ## Get list of modules that are missing
+    for pkg in $QT_MODULES; do
+      if ! $PKG_CONFIG --exists $pkg; then
+        QT_MODULES_MISSING="$QT_MODULES_MISSING $pkg"
+      fi
+    done
+  fi
+
   if test $build_qt_gui = yes; then
     ## Retrieve Qt compilation and linker flags
     QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
 
     case $host_os in
       *darwin*)
@@ -2214,16 +2230,46 @@ AC_DEFUN([OCTAVE_CHECK_SUNDIALS_IDAKLU],
     AC_DEFINE(HAVE_SUNDIALS_IDAKLU, 1,
       [Define to 1 if SUNDIALS IDA is configured with IDAKLU enabled.])
   else
     warn_sundials_idaklu="SUNDIALS IDA library not configured with IDAKLU, ode15i and ode15s will not support the sparse Jacobian feature"
     OCTAVE_CONFIGURE_WARNING([warn_sundials_idaklu])
   fi
 ])
 dnl
+dnl Check whether SUNDIALS IDA library has the IDADENSE linear solver.
+dnl The IDADENSE API was removed in SUNDIALS version 3.0.0.
+dnl
+AC_DEFUN([OCTAVE_CHECK_SUNDIALS_IDA_DENSE], [
+  AC_CHECK_HEADERS([ida/ida_dense.h ida_dense.h])
+  AC_CACHE_CHECK([whether SUNDIALS IDA includes the IDADENSE linear solver],
+    [octave_cv_sundials_ida_dense],
+    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+         #if defined (HAVE_IDA_IDA_DENSE_H)
+         #include <ida/ida_dense.h>
+         #else
+         #include <ida_dense.h>
+         #endif
+         ]], [[
+         void *mem = 0;
+         long int num = 0;
+         IDADense (mem, num);
+      ]])],
+      octave_cv_sundials_ida_dense=yes,
+      octave_cv_sundials_ida_dense=no)
+    ])
+  if test $octave_cv_sundials_ida_dense = yes; then
+    AC_DEFINE(HAVE_SUNDIALS_IDADENSE, 1,
+      [Define to 1 if SUNDIALS IDA includes the IDADENSE linear solver.])
+  else
+    warn_sundials_ida_dense="SUNDIALS IDA library does not include the IDADENSE linear solver, ode15i and ode15s will be disabled"
+    OCTAVE_CONFIGURE_WARNING([warn_sundials_ida_dense])
+  fi
+])
+dnl
 dnl Add warning to final summary.
 dnl
 AC_DEFUN([OCTAVE_CONFIGURE_WARNING], [
   AC_MSG_WARN([$][$1])
   m4_set_add([summary_warning_list], [$1])
 ])
 dnl
 dnl Print final summary.
diff --git a/test/nest/nest.tst b/test/nest/nest.tst
--- a/test/nest/nest.tst
+++ b/test/nest/nest.tst
@@ -55,16 +55,16 @@
 %!error <can not add variable "y" to a static workspace>
 %! nest_eval ("x = -5; x = abs (x);", "y = 6;")
 
 %!test
 %! f = no_closure (0);
 %! assert (f("foo"), "nested foo");
 %! assert (f("foo"), "nested foo");
 
-%!test <39257>
+%!test <*39257>
 %! f = no_closure (1);
 %! assert (f(), "nested");
 %! assert (f("foo"), "nested foo");
 
 %!error <D' undefined near line 7> scope2
 %!error <can not add variable "y" to a static workspace> nest_eval ("y = 5;", "")
 %!error <can not add variable "y" to a static workspace> nest_eval ("y;", "")
