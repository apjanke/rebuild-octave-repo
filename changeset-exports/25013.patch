# HG changeset patch
# User Rik <rik@octave.org>
# Date 1522107681 25200
#      Mon Mar 26 16:41:21 2018 -0700
# Node ID 485ea63c50823743675dc55f05bba54ad1d30995
# Parent  c6c81f2c9dbfefc5014774d56268f3759386427c
# Parent  910804a9d62d8cc58ec8f7f65c978b42a02bd127
maint: merge stable to default.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -310,16 +310,17 @@ Summary of important user-visible change
     The following functions have been deprecated in Octave 4.4 and will
     be removed from Octave 4.8 (or whatever version is the second major
     release after 4.4):
 
       Function             | Replacement
       ---------------------|------------------
       chop                 | sprintf for visual results
       desktop              | isguirunning
+      tmpnam               | tempname
       toascii              | double
 
  ** The following functions were deprecated in Octave 4.0 and have been
     removed from Octave 4.4.
 
       allow_noninteger_range_as_index
       bicubic
       delaunay3
diff --git a/doc/interpreter/bugs.txi b/doc/interpreter/bugs.txi
--- a/doc/interpreter/bugs.txi
+++ b/doc/interpreter/bugs.txi
@@ -20,16 +20,17 @@
 @c distribution, as well as in the Octave manual.
 
 @ifclear BUGSONLY
 @node Trouble
 @appendix Known Causes of Trouble
 @end ifclear
 
 @ifset BUGSONLY
+@include macros.texi
 
 This file documents known bugs in Octave and describes where and how to
 report any bugs that you may find.
 
 Copyright (C) 1996, 1997, 2007 John W. Eaton.  You may copy, distribute, and
 modify it freely as long as you preserve this copyright notice and
 permission notice.
 
diff --git a/doc/interpreter/doccheck/mk_undocumented_list b/doc/interpreter/doccheck/mk_undocumented_list
--- a/doc/interpreter/doccheck/mk_undocumented_list
+++ b/doc/interpreter/doccheck/mk_undocumented_list
@@ -42,17 +42,23 @@ unless (@octave_output) { die "Unable to
 # First, divide output in to list of functions and list of locations
 $idx = 0;
 while (($_ = $octave_output[$idx++]) !~ /^#!-separator-!#$/)
 {
   push(@all_functions, $1) if (/] = (\w+)$/);
 }
 while ($_ = $octave_output[$idx++])
 {
-  push(@where, $1) if (/] = (\S*)$/);
+  push(@where, $1) if (/] = (.+)$/);
+}
+
+# Sanity check that Octave script worked
+if ($#all_functions != $#where)
+{
+  die "Unequal number of functions and locations.  Parsing failed\n"; 
 }
 
 # Second, remove functions based on directory location
 # deprecated directory, doc/interpreter directory, test/ directory
 FUNC: foreach $idx (0 .. $#where)
 {
   next FUNC if ($where[$idx] =~ /deprecated/i);
   next FUNC if ($where[$idx] =~ /interpreter/i);
@@ -103,39 +109,40 @@ exit(1);
 angle
 bessel
 besselh
 besseli
 besselk
 bessely
 bug_report
 chdir
+dbnext
 debug
-dbnext
 end
 exit
 F_DUPFD
 F_GETFD
 F_GETFL
+F_SETFD
+F_SETFL
 fact
 finite
 flipdim
 fmod
-F_SETFD
-F_SETFL
 gammaln
 home
 i
 ifelse
+import
 inf
 inverse
 isbool
 isfinite
+J
 j
-J
 java2mat
 lower
 lstat
 metaclass
 nan
 nargchk
 O_APPEND
 O_ASYNC
@@ -143,19 +150,21 @@ O_CREAT
 O_EXCL
 O_NONBLOCK
 O_RDONLY
 O_RDWR
 O_SYNC
 O_TRUNC
 O_WRONLY
 putenv
-SEEK_CUR
-SEEK_END
+rticks
 setenv
-tmpnam
-toc
-triu
+slash
+thetaticks
 upper
 ylabel
 ylim
+yticklabels
+yticks
 zlabel
 zlim
+zticklabels
+zticks
diff --git a/doc/interpreter/io.txi b/doc/interpreter/io.txi
--- a/doc/interpreter/io.txi
+++ b/doc/interpreter/io.txi
@@ -1074,16 +1074,20 @@ Three functions are available for settin
 the file pointer for a given file.
 
 @DOCSTRING(ftell)
 
 @DOCSTRING(fseek)
 
 @DOCSTRING(SEEK_SET)
 
+@DOCSTRING(SEEK_CUR)
+
+@DOCSTRING(SEEK_END)
+
 @DOCSTRING(frewind)
 
 The following example stores the current file position in the variable
 @code{marker}, moves the pointer to the beginning of the file, reads
 four characters, and then returns to the original position.
 
 @example
 @group
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -243,8 +243,11 @@ alphabetical order).
 @item Gamma Distribution                @tab @code{randg}
 @item Poisson Distribution              @tab @code{randp}
 @item Standard Normal Distribution      @tab @code{randn}
 @item Uniform Distribution              @tab @code{rand}
 @item Uniform Distribution (integers)   @tab @code{randi}
 @end multitable
 @end ifnottex
 
+@DOCSTRING(discrete_rnd)
+
+@DOCSTRING(empirical_rnd)
diff --git a/etc/icons/org.octave.Octave.appdata.xml b/etc/icons/org.octave.Octave.appdata.xml
--- a/etc/icons/org.octave.Octave.appdata.xml
+++ b/etc/icons/org.octave.Octave.appdata.xml
@@ -19,16 +19,17 @@
   <https://www.gnu.org/licenses/>.
 -->
 <component type="desktop-application">
   <id>org.octave.Octave.desktop</id>
   <metadata_license>FSFAP</metadata_license>
   <project_license>GPL-3.0+</project_license>
   <name>GNU Octave</name>
   <summary>Interactive programming environment for numerical computations</summary>
+  <summary xml:lang="de">Interaktive Programmierumgebung f√ºr numerische Berechnungen</summary>
 
   <description>
     <p>
       GNU Octave is a high-level interpreted language, primarily intended for
       numerical computations. It provides capabilities for the numerical
       solution of linear and nonlinear problems, and for performing other
       numerical experiments. It also provides extensive graphics capabilities
       for data visualization and manipulation. Octave is normally used through
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -716,26 +716,26 @@ is equivalent to @code{fseek (@var{fid},
 
 DEFMETHOD (fseek, interp, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} fseek (@var{fid}, @var{offset})
 @deftypefnx {} {} fseek (@var{fid}, @var{offset}, @var{origin})
 @deftypefnx {} {@var{status} =} fseek (@dots{})
 Set the file pointer to the location @var{offset} within the file @var{fid}.
 
-The pointer is positioned @var{offset} characters from the @var{origin},
-which may be one of the predefined variables @w{@code{SEEK_CUR}} (current
-position), @w{@code{SEEK_SET}} (beginning), or @w{@code{SEEK_END}} (end of
-file) or strings @nospell{@qcode{"cof"}}, @nospell{@qcode{"bof"}}, or
+The pointer is positioned @var{offset} characters from the @var{origin}, which
+may be one of the predefined variables @w{@code{SEEK_SET}} (beginning),
+@w{@code{SEEK_CUR}} (current position), or @w{@code{SEEK_END}} (end of file) or
+strings @nospell{@qcode{"bof"}}, @nospell{@qcode{"cof"}}, or
 @nospell{@qcode{"eof"}}.  If @var{origin} is omitted, @w{@code{SEEK_SET}} is
 assumed.  @var{offset} may be positive, negative, or zero but not all
 combinations of @var{origin} and @var{offset} can be realized.
 
 @code{fseek} returns 0 on success and -1 on error.
-@seealso{fskipl, frewind, ftell, fopen}
+@seealso{fskipl, frewind, ftell, fopen, SEEK_SET, SEEK_CUR, SEEK_END}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
 
   octave::stream_list& streams = interp.get_stream_list ();
@@ -3079,59 +3079,46 @@ environment variable.
 {
   if (args.length () != 0)
     print_usage ();
 
   return ovl (get_P_tmpdir ());
 }
 
 // NOTE: the values of SEEK_SET, SEEK_CUR, and SEEK_END have to be
-// this way for Matlab compatibility.
+//       this way for Matlab compatibility.
 
 DEFUNX ("SEEK_SET", FSEEK_SET, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn  {} {} SEEK_SET ()
-@deftypefnx {} {} SEEK_CUR ()
-@deftypefnx {} {} SEEK_END ()
-Return the numerical value to pass to @code{fseek} to perform one of the
-following actions:
-
-@table @code
-@item SEEK_SET
-Position file relative to the beginning.
-
-@item SEEK_CUR
-Position file relative to the current position.
-
-@item SEEK_END
-Position file relative to the end.
-@end table
-@seealso{fseek}
+Return the numerical value to pass to @code{fseek} to position the file pointer
+relative to the beginning of the file.
+@seealso{SEEK_CUR, SEEK_END, fseek}
 @end deftypefn */)
 {
   return const_value ("SEEK_SET", args, -1);
 }
 
 DEFUNX ("SEEK_CUR", FSEEK_CUR, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} SEEK_CUR ()
-Return the numerical value to pass to @code{fseek} to
-position the file pointer relative to the current position.
-@seealso{SEEK_SET, SEEK_END}
+Return the numerical value to pass to @code{fseek} to position the file pointer
+relative to the current position.
+@seealso{SEEK_SET, SEEK_END, fseek}
 @end deftypefn */)
 {
   return const_value ("SEEK_CUR", args, 0);
 }
 
 DEFUNX ("SEEK_END", FSEEK_END, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} SEEK_END ()
-Return the numerical value to pass to @code{fseek} to
-position the file pointer relative to the end of the file.
-@seealso{SEEK_SET, SEEK_CUR}
+Return the numerical value to pass to @code{fseek} to position the file pointer
+relative to the end of the file.
+@seealso{SEEK_SET, SEEK_CUR, fseek}
 @end deftypefn */)
 {
   return const_value ("SEEK_END", args, 1);
 }
 
 static octave_value
 const_value (const char *, const octave_value_list& args,
              const octave_value& val)
diff --git a/scripts/deprecated/module.mk b/scripts/deprecated/module.mk
--- a/scripts/deprecated/module.mk
+++ b/scripts/deprecated/module.mk
@@ -8,16 +8,17 @@ FCN_FILE_DIRS += scripts/deprecated
   %reldir%/isstr.m \
   %reldir%/mahalanobis.m \
   %reldir%/md5sum.m \
   %reldir%/octave_config_info.m \
   %reldir%/onenormest.m \
   %reldir%/paren.m \
   %reldir%/semicolon.m \
   %reldir%/sleep.m \
+  %reldir%/tmpnam.m \
   %reldir%/toascii.m \
   %reldir%/usleep.m \
   %reldir%/wavread.m \
   %reldir%/wavwrite.m
 
 %canon_reldir%dir = $(fcnfiledir)/deprecated
 
 %canon_reldir%_DATA = $(%canon_reldir%_FCN_FILES)
diff --git a/scripts/miscellaneous/tmpnam.m b/scripts/deprecated/tmpnam.m
rename from scripts/miscellaneous/tmpnam.m
rename to scripts/deprecated/tmpnam.m
--- a/scripts/miscellaneous/tmpnam.m
+++ b/scripts/deprecated/tmpnam.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2003-2017 John W. Eaton
+## Copyright (C) 2003-2018 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software: you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation, either version 3 of the License, or
 ## (at your option) any later version.
 ##
@@ -15,36 +15,47 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{fname} =} tmpnam ()
 ## @deftypefnx {} {@var{fname} =} tmpnam (@var{dir})
 ## @deftypefnx {} {@var{fname} =} tmpnam (@var{dir}, @var{prefix})
+## @code{tmpnam} is deprecated and will be removed in Octave version 4.8.
+## Use @code{tempname} instead.
+##
 ## Return a unique temporary filename as a string.
 ##
 ## If @var{prefix} is omitted, a value of @qcode{"oct-"} is used.
 ##
 ## If @var{dir} is also omitted, the default directory for temporary files
 ## (@code{P_tmpdir} is used.  If @var{dir} is provided, it must exist,
 ## otherwise the default directory for temporary files is used.
 ##
 ## Programming Note: Because the named file is not opened by @code{tmpnam},
 ## it is possible, though relatively unlikely, that it will not be available
 ## by the time your program attempts to open it.  If this is a concern,
 ## see @code{tmpfile}.  The functions @code{tmpnam} and @code{tempname} are
 ## equivalent with the latter provided for @sc{matlab} compatibility.
 ##
-## @strong{Caution}: @code{tmpnam} will be removed in a future version of
-## Octave.  Use the equivalent @code{tempname} in all new code.
+## @strong{Caution}: @code{tmpnam} will be removed in Octave version 4.8, or
+## whatever the version number is two releases from 4.4. Use the equivalent
+## @code{tempname} in all new code.
 ## @seealso{tempname, mkstemp, tempdir, P_tmpdir, tmpfile}
 ## @end deftypefn
 
 function filename = tmpnam (varargin)
 
+  persistent warned = false;
+  if (! warned)
+    warned = true;
+    warning ("Octave:deprecated-function",
+             "tmpnam is obsolete and will be removed from a future version of Octave, please use tempname instead");
+  endif
+
   filename = tempname (varargin{:});
 
 endfunction
 
 
 ## No tests needed for alias.
 %!assert (1)
diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -541,17 +541,17 @@ endfunction
 %! [a,d,h] = importdata (fn, '\t');
 %! unlink (fn);
 %! assert (a, A);
 %! assert (d, "\t");
 %! assert (h, 0);
 
 %!test <*43393>
 %! ## Distinguish double from complex when no delimiter is supplied
-%! fn  = tmpnam ();
+%! fn  = tempname ();
 %! fid = fopen (fn, "w");
 %! fputs (fid, "2.0000e+02   4.0000e-04");
 %! fclose (fid);
 %! [a, d, h] = importdata (fn);
 %! unlink (fn);
 %! assert (a, [2e2, 4e-4]);
 %! assert (d, " ");
 %! assert (h, 0);
diff --git a/scripts/miscellaneous/module.mk b/scripts/miscellaneous/module.mk
--- a/scripts/miscellaneous/module.mk
+++ b/scripts/miscellaneous/module.mk
@@ -66,17 +66,16 @@ FCN_FILE_DIRS += \
   %reldir%/run.m \
   %reldir%/saveobj.m \
   %reldir%/setfield.m \
   %reldir%/substruct.m \
   %reldir%/swapbytes.m \
   %reldir%/symvar.m \
   %reldir%/tar.m \
   %reldir%/tempdir.m \
-  %reldir%/tmpnam.m \
   %reldir%/unix.m \
   %reldir%/unpack.m \
   %reldir%/untar.m \
   %reldir%/unzip.m \
   %reldir%/validateattributes.m \
   %reldir%/ver.m \
   %reldir%/version.m \
   %reldir%/what.m \
diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -226,18 +226,17 @@ function [pass, fail, xfail, xbug, skip,
       f = fullfile (d, nm);
       if ((length (nm) > 2 && strcmpi (nm((end-1):end), ".m"))
           || (length (nm) > 4
               && (   strcmpi (nm((end-3):end), "-tst")
                   || strcmpi (nm((end-3):end), ".tst"))))
         p = n = xf = xb = 0;
         ## Only run if contains %!test, %!assert, %!error, %!fail, or %!warning
         if (has_tests (f))
-          tmp = strrep (f, [topsrcdir, filesep], "");
-          tmp = strrep (tmp, [topbuilddir, filesep], "");
+          tmp = reduce_test_file_name (f, topbuilddir, topsrcdir);
           print_test_file_name (tmp);
           [p, n, xf, xb, sk, rtsk, rgrs] = test (f, "quiet", fid);
           print_pass_fail (p, n, xf, xb, sk, rtsk, rgrs);
           dp += p;
           dn += n;
           dxf += xf;
           dxb += xb;
           dsk += sk;
@@ -285,16 +284,35 @@ function print_pass_fail (p, n, xf, xb, 
     if (xf > 0)
       printf ("\n%71s %3d", "(expected failure) XFAIL", xf);
     endif
   endif
   puts ("\n");
 
 endfunction
 
+function retval = reduce_test_file_name (nm, builddir, srcdir)
+
+  ## Reduce the given absolute file name to a relative path by removing one
+  ## of the likely root directory prefixes.
+
+  prefix = { builddir, fullfile(builddir, "scripts"), ...
+             srcdir, fullfile(srcdir, "scripts") };
+
+  retval = nm;
+
+  for i = 1:length (prefix)
+    tmp = strrep (nm, [prefix{i}, filesep], "");
+    if (length (tmp) < length (retval))
+      retval = tmp;
+    endif
+  endfor
+
+endfunction
+
 function retval = has_functions (f)
 
   n = length (f);
   if (n > 3 && strcmpi (f((end-2):end), ".cc"))
     fid = fopen (f);
     if (fid < 0)
       error ("__run_test_suite__: fopen failed: %s", f);
     endif
diff --git a/test/bug-53027/bug-53027.tst b/test/bug-53027/bug-53027.tst
--- a/test/bug-53027/bug-53027.tst
+++ b/test/bug-53027/bug-53027.tst
@@ -9,17 +9,17 @@
 %!  global X
 %!  X = 1;
 %!  save (fname, "X");
 %!endfunction
 
 %!test <*53027>
 %! global X
 %! X = 0;
-%! fname = tmpnam ();
+%! fname = tempname ();
 %! save53027 (fname);
 %! assert (X, 1);
 %! load53027 (fname);
 %! assert (X, 1);
 %! load53027 (fname);
 %! assert (X, 1);
 %! clear X
 %! assert (exist ("X"), 0);
