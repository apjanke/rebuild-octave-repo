# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1544477628 18000
#      Mon Dec 10 16:33:48 2018 -0500
# Node ID 9aff537a5704c3ded187fb308bf5234eec543722
# Parent  6c482f11f9ad256622fa8b940c4c924ff2ed4bff
* input.cc (looks_like_struct): Delete obsolete commented code.

diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -246,40 +246,16 @@ static bool
 looks_like_struct (const std::string& text, char prev_char)
 {
   bool retval = (! text.empty ()
                  && (text != "." || prev_char == ')' || prev_char == '}')
                  && text.find_first_of (octave::sys::file_ops::dir_sep_chars ()) == std::string::npos
                  && text.find ("..") == std::string::npos
                  && text.rfind ('.') != std::string::npos);
 
-#if 0
-  symbol_record *sr = curr_sym_tab->lookup (text);
-
-  if (sr && ! sr->is_function ())
-    {
-      int parse_status;
-
-      octave::unwind_protect frame;
-
-      frame.protect_var (discard_error_messages);
-
-      discard_error_messages = true;
-
-      octave::interpreter& interp
-        = octave::__get_interpreter__ ("looks_like_struct");
-
-      octave_value tmp = interp.eval_string (text, true, parse_status);
-
-      frame.run ();
-
-      retval = (tmp.is_defined () && tmp.isstruct ());
-    }
-#endif
-
   return retval;
 }
 
 // FIXME: make this generate filenames when appropriate.
 
 static string_vector
 generate_possible_completions (const std::string& text, std::string& prefix,
                                std::string& hint, bool& deemed_struct)
