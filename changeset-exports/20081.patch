# HG changeset patch
# User Rik <rik@octave.org>
# Date 1429202101 25200
#      Thu Apr 16 09:35:01 2015 -0700
# Node ID 8bfadb26afcd86459adae6f4d3065bd6fcc22abd
# Parent  908b68a98ba6a9484438d956f9e98f6c48892335
Allow case-insensitive SelectionMode value in listdlg (bug #44822).

* dialog.cc (ListDialog): Check for lower case selection mode "single" and
"multiple".

* listdlg.m: Use tolower() to guarantee SelectionMode is lower case.

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -188,24 +188,20 @@ ListDialog::ListDialog (const QStringLis
 {
   // Put the list of items into a model.  Keep this off of the stack
   // because this conceivably could be a very large list.
   QAbstractItemModel *model = new QStringListModel (list);
 
   QListView *view = new QListView;
   view->setModel (model);
 
-  if (mode == "Single")
+  if (mode == "single")
     view->setSelectionMode (QAbstractItemView::SingleSelection);
-  else if (mode == "Multiple")
+  else if (mode == "multiple")
     view->setSelectionMode (QAbstractItemView::ExtendedSelection);
-//  else if ()
-//    view->setSelectionMode (QAbstractItemView::ContiguousSelection);
-//  else if ()
-//    view->setSelectionMode (QAbstractItemView::MultiSelection);
   else
     view->setSelectionMode (QAbstractItemView::NoSelection);
 
   selector = view->selectionModel ();
   int i = 0;
   for (QList<int>::const_iterator it = initial.begin ();
        it != initial.end (); it++)
     {
@@ -244,17 +240,17 @@ ListDialog::ListDialog (const QStringLis
 #if RICH_TEXT
       plabel->setTextFormat (Qt::RichText);
 #endif
 #undef RICH_TEXT
       listLayout->addWidget (plabel);
     }
   listLayout->addWidget (view);
   QPushButton *select_all = new QPushButton (tr ("Select All"));
-  select_all->setEnabled (mode == "Multiple");
+  select_all->setEnabled (mode == "multiple");
   listLayout->addWidget (select_all);
 
   QPushButton *buttonOk = new QPushButton (ok_string);
   QPushButton *buttonCancel = new QPushButton (cancel_string);
   QHBoxLayout *buttonsLayout = new QHBoxLayout;
   buttonsLayout->addStretch (1);
   buttonsLayout->addWidget (buttonOk);
   buttonsLayout->addWidget (buttonCancel);
diff --git a/scripts/gui/listdlg.m b/scripts/gui/listdlg.m
--- a/scripts/gui/listdlg.m
+++ b/scripts/gui/listdlg.m
@@ -92,17 +92,17 @@ function [sel, ok] = listdlg (varargin)
   okstring = "OK";
   cancelstring = "Cancel";
 
   ## handle key, value pairs
   for i = 1:2:nargin-1
     if (strcmpi (varargin{i}, "ListString"))
       listcell = varargin{i+1};
     elseif (strcmpi (varargin{i}, "SelectionMode"))
-      selmode = varargin{i+1};
+      selmode = tolower (varargin{i+1});
     elseif (strcmpi (varargin{i}, "ListSize"))
       listsize = varargin{i+1};
     elseif (strcmpi (varargin{i}, "InitialValue"))
       initialvalue = varargin{i+1};
     elseif (strcmpi (varargin{i}, "Name"))
       name = varargin{i+1};
     elseif (strcmpi (varargin{i}, "PromptString"))
       prompt = varargin{i+1};
@@ -121,18 +121,18 @@ function [sel, ok] = listdlg (varargin)
   ## make sure listcell strings are a cell array
   if (! iscell (listcell))
     listcell = {listcell};
   elseif (iscellstr (listcell{1})) 
     listcell = listcell{1};
   endif
 
   ## make sure valid selection mode
-  if (! strcmp (selmode, "Multiple") && ! strcmp (selmode, "Single"))
-    error ("invalid SelectionMode");
+  if (! strcmpi (selmode, "multiple") && ! strcmpi (selmode, "single"))
+    error ("listdlg: invalid SelectionMode");
   endif
 
   if (__octave_link_enabled__ ())
     [sel, ok] = __octave_link_list_dialog__ (listcell, selmode, listsize,
                                              initialvalue, name, prompt,
                                              okstring, cancelstring);
   elseif (__have_feature__ ("JAVA"))
     ## transform matrices to cell arrays of strings
