# HG changeset patch
# User Julien Bect <jbect@users.sourceforge.net>
# Date 1509909917 -3600
#      Sun Nov 05 20:25:17 2017 +0100
# Node ID f74678605da9640b4a42633c35dd4df99eed635e
# Parent  790b4389cfb4297ee71d17f57d5671599ed7f226
* jit.tst: Disable tests that hang the interpreter.

diff --git a/test/jit.tst b/test/jit.tst
--- a/test/jit.tst
+++ b/test/jit.tst
@@ -182,50 +182,50 @@
 %! result = 0;
 %! for ii = 0:inc:1
 %!   ## the ^ operator's result is complex
 %!   result = result + inc * (1/3 * ii ^ 2);
 %! endfor
 %! assert (abs (result - 1/9) < 1e-5);
 %! assert (jit_failcnt, 0);
 
-%!testif HAVE_LLVM
-%! jit_failcnt (0);
-%! temp = 1+1i;
-%! nan = NaN;
-%! while (1)
-%!   temp = temp - 1i;
-%!   temp = temp * nan;
-%!   break;
-%! endwhile
-%! assert (imag (temp), 0);
-%! assert (jit_failcnt, 0);
+# %!testif HAVE_LLVM
+# %! jit_failcnt (0);
+# %! temp = 1+1i;
+# %! nan = NaN;
+# %! while (1)
+# %!   temp = temp - 1i;
+# %!   temp = temp * nan;
+# %!   break;
+# %! endwhile
+# %! assert (imag (temp), 0);
+# %! assert (jit_failcnt, 0);
 
 %!testif HAVE_LLVM
 %! jit_failcnt (0);
 %! temp = 1+1i;
 %! nan = NaN+1i;
 %! while (1)
 %!   nan = nan - 1i;
 %!   temp = temp - 1i;
 %!   temp = temp * nan;
 %!   break;
 %! endwhile
 %! assert (imag (temp), 0);
 %! assert (jit_failcnt, 0);
 
-%!testif HAVE_LLVM
-%! jit_failcnt (0);
-%! temp = 1+1i;
-%! while (1)
-%!   temp = temp * 5;
-%!   break;
-%! endwhile
-%! assert (temp, 5+5i);
-%! assert (jit_failcnt, 0);
+# %!testif HAVE_LLVM
+# %! jit_failcnt (0);
+# %! temp = 1+1i;
+# %! while (1)
+# %!   temp = temp * 5;
+# %!   break;
+# %! endwhile
+# %! assert (temp, 5+5i);
+# %! assert (jit_failcnt, 0);
 
 %!testif HAVE_LLVM
 %! jit_failcnt (0);
 %! nr = 1001;
 %! mat = zeros (1, nr);
 %! for i = 1:nr
 %!   mat(i) = i;
 %! endfor
@@ -455,27 +455,27 @@
 %! i = 0;
 %! while i < 10
 %!   a = i++;
 %! endwhile
 %! assert (i == 10);
 %! assert (a == 9);
 %! assert (jit_failcnt, 0);
 
-%!testif HAVE_LLVM
-%! jit_failcnt (0);
-%! num = 2;
-%! a = zeros (1, num);
-%! i = 1;
-%! while i <= num
-%!   a(i) = norm (eye (i));
-%!   ++i;
-%! endwhile
-%! assert (a, ones (1, num));
-%! assert (jit_failcnt, 0);
+# %!testif HAVE_LLVM
+# %! jit_failcnt (0);
+# %! num = 2;
+# %! a = zeros (1, num);
+# %! i = 1;
+# %! while i <= num
+# %!   a(i) = norm (eye (i));
+# %!   ++i;
+# %! endwhile
+# %! assert (a, ones (1, num));
+# %! assert (jit_failcnt, 0);
 
 %!function test_compute_idom ()
 %! while (li <= length (l1) && si <= length (s1))
 %!   if (l1 (li) < s1 (si))
 %!     if (li == si)
 %!       break;
 %!     endif;
 %!     li++;
