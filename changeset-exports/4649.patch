# HG changeset patch
# User jwe
# Date 1069624004 0
#      Sun Nov 23 21:46:44 2003 +0000
# Node ID f7ce581b27fb4f0cfa630c7b810a04095d71cf52
# Parent  dca0236ad77cd98872addd3f16a8abdb92aa86cd
[project @ 2003-11-23 21:46:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2003-11-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov.cc (install_types): Also register dld function type.
+
 	* OPERATORS/op-streamoff.cc: Install increment and decrement operators.
 	* ov-streamoff.h (octave_streamoff::increment,
 	octave_streamoff::decrement): New functions.
 
 	* ov-streamoff.h, ov-streamoff.cc: Move streamoff_array class to
 	liboctave/so-array.h and liboctave/so-array.cc.
 
 	* oct-stream.cc (octave_stream::seek): Extract std::streamoff from
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -58,19 +58,19 @@ Software Foundation, 59 Temple Place - S
 #include "lo-ieee.h"
 #include "oct-fstrm.h"
 #include "oct-iostrm.h"
 #include "oct-map.h"
 #include "oct-obj.h"
 #include "oct-prcstrm.h"
 #include "oct-stream.h"
 #include "oct-strstrm.h"
-#include "ov-streamoff.h"
 #include "pager.h"
 #include "pt-plot.h"
+#include "so-array.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
 
 static octave_value stdin_file;
 static octave_value stdout_file;
 static octave_value stderr_file;
 
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -38,17 +38,16 @@ Software Foundation, 59 Temple Place - S
 #include "str-vec.h"
 #include "quit.h"
 
 #include "error.h"
 #include "input.h"
 #include "oct-stdstrm.h"
 #include "oct-stream.h"
 #include "oct-obj.h"
-#include "ov-streamoff.h"
 #include "utils.h"
 
 // Possible values for conv_err:
 //
 //   1 : not a real scalar
 //   2 : value is NaN
 //   3 : value is not an integer
 
diff --git a/src/ov-base-mat.h b/src/ov-base-mat.h
--- a/src/ov-base-mat.h
+++ b/src/ov-base-mat.h
@@ -31,21 +31,21 @@ Software Foundation, 59 Temple Place - S
 
 #include <iostream>
 #include <string>
 
 #include "mx-base.h"
 #include "str-vec.h"
 
 #include "error.h"
+#include "oct-obj.h"
 #include "ov-base.h"
 #include "ov-typeinfo.h"
 
 class Octave_map;
-class octave_value_list;
 
 class tree_walker;
 
 // Real matrix values.
 
 template <class MT>
 class
 octave_base_matrix : public octave_base_value
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -28,16 +28,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include <climits>
 
 #include <iostream>
 
 #include "lo-ieee.h"
+#include "so-array.h"
 
 #include "gripes.h"
 #include "oct-map.h"
 #include "oct-obj.h"
 #include "oct-lvalue.h"
 #include "oct-stream.h"
 #include "ops.h"
 #include "ov-base.h"
@@ -45,17 +46,16 @@ Software Foundation, 59 Temple Place - S
 #include "ov-ch-mat.h"
 #include "ov-complex.h"
 #include "ov-cx-mat.h"
 #include "ov-list.h"
 #include "ov-range.h"
 #include "ov-re-mat.h"
 #include "ov-scalar.h"
 #include "ov-str-mat.h"
-#include "ov-streamoff.h"
 #include "ov-fcn-handle.h"
 #include "variables.h"
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_base_value,
 				     "<unknown type>", "unknown");
 
 octave_value
 octave_base_value::squeeze (void) const
@@ -464,17 +464,17 @@ octave_base_value::stream_value (void) c
   octave_stream retval;
   gripe_wrong_type_arg ("octave_base_value::stream_value()", type_name ());
   return retval;
 }
 
 std::streamoff
 octave_base_value::streamoff_value (void) const
 {
-  std::streamoff retval;
+  std::streamoff retval (-1);
   gripe_wrong_type_arg ("octave_base_value::streamoff_value()", type_name ());
   return retval;
 }
 
 streamoff_array
 octave_base_value::streamoff_array_value (void) const
 {
   streamoff_array retval;
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -49,17 +49,17 @@ octave_fcn_handle::print (std::ostream& 
   print_raw (os, pr_as_read_syntax);
   newline (os);
 }
 
 void
 octave_fcn_handle::print_raw (std::ostream& os, bool pr_as_read_syntax) const
 {
   indent (os);
-  os << "@" << name ();
+  os << name ();
 }
 
 octave_value
 make_fcn_handle (const std::string& nm)
 {
   octave_value retval;
 
   octave_function *f = lookup_function (nm);
@@ -92,17 +92,19 @@ Return a struct containing information a
       if (! error_state)
 	{
 	  octave_function *fcn = fh ? fh->function_value (true) : 0;
 
 	  if (fcn)
 	    {
 	      Octave_map m;
 
-	      m ["function"](0) = fh->name ();
+	      std::string fh_nm = fh->name ();
+
+	      m ["function"](0) = fh_nm.substr (1);
 
 	      if (fcn->is_nested_function ())
 		m ["type"](0) = "subfunction";
 	      else
 		m ["type"](0) = "simple";
 
 	      std::string nm = fcn->fcn_file_name ();
 
@@ -134,17 +136,20 @@ the function handle @var{fcn_handle}.\n\
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       octave_fcn_handle *fh = args(0).fcn_handle_value ();
 
       if (! error_state && fh)
-	retval = fh->name ();
+	{
+	  std::string fh_nm = fh->name ();
+	  retval = fh_nm.substr (1);
+	}
       else
 	error ("func2str: expecting valid function handle as first argument");
     }
   else
     print_usage ("func2str");
 
   return retval;
 }
diff --git a/src/ov-fcn-handle.h b/src/ov-fcn-handle.h
--- a/src/ov-fcn-handle.h
+++ b/src/ov-fcn-handle.h
@@ -38,20 +38,20 @@ Software Foundation, 59 Temple Place - S
 
 // Function handles.
 
 class
 octave_fcn_handle : public octave_base_value
 {
 public:
 
-  octave_fcn_handle (void) : fcn (0), nm () { }
+  octave_fcn_handle (void) : fcn (0), nm ("[]") { }
 
   octave_fcn_handle (octave_function *f, const std::string& n)
-    : fcn (f), nm (n) { }
+    : fcn (f), nm (std::string ("@") + n) { }
 
   octave_fcn_handle (const octave_fcn_handle& fh)
     : fcn (fh.fcn), nm (fh.nm) { }
 
   octave_fcn_handle& operator = (const octave_fcn_handle& fh)
     {
       if (this != &fh)
 	{
@@ -78,17 +78,17 @@ public:
 
   std::string name (void) const { return nm; }
 
 private:
 
   // The function we are handling.
   octave_function *fcn;
 
-  // The name of the handle.
+  // The name of the handle, including the "@".
   std::string nm;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 extern octave_value make_fcn_handle (const std::string& nm);
diff --git a/src/ov-re-mat.h b/src/ov-re-mat.h
--- a/src/ov-re-mat.h
+++ b/src/ov-re-mat.h
@@ -29,22 +29,22 @@ Software Foundation, 59 Temple Place - S
 
 #include <cstdlib>
 
 #include <iostream>
 #include <string>
 
 #include "mx-base.h"
 #include "oct-alloc.h"
+#include "so-array.h"
 #include "str-vec.h"
 
 #include "error.h"
 #include "ov-base.h"
 #include "ov-base-mat.h"
-#include "ov-streamoff.h"
 #include "ov-typeinfo.h"
 
 class Octave_map;
 class octave_value_list;
 
 class tree_walker;
 
 // Real matrix values.
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -49,16 +49,17 @@ Software Foundation, 59 Temple Place - S
 #include "ov-file.h"
 #include "ov-streamoff.h"
 #include "ov-list.h"
 #include "ov-cs-list.h"
 #include "ov-colon.h"
 #include "ov-va-args.h"
 #include "ov-builtin.h"
 #include "ov-mapper.h"
+#include "ov-dld-fcn.h"
 #include "ov-usr-fcn.h"
 #include "ov-fcn-handle.h"
 #include "ov-typeinfo.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "pager.h"
@@ -1893,16 +1894,17 @@ install_types (void)
   octave_file::register_type ();
   octave_list::register_type ();
   octave_cs_list::register_type ();
   octave_all_va_args::register_type ();
   octave_magic_colon::register_type ();
   octave_builtin::register_type ();
   octave_mapper::register_type ();
   octave_user_function::register_type ();
+  octave_dld_function::register_type ();
   octave_fcn_handle::register_type ();
   octave_streamoff::register_type ();
 }
 
 static int
 warn_fortran_indexing (void)
 {
   Vwarn_fortran_indexing = check_preference ("warn_fortran_indexing");
