# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1374159404 14400
#      Thu Jul 18 10:56:44 2013 -0400
# Node ID c50ee84842a972b1b07507c8a060634ced97e328
# Parent  adf06e03fbdd0b7a58e6c3d8a66fec0729e0c454
Add preferences and prefdir functions

* scripts/prefs/private/prefsfile.m
  (prefsfile): Use prefdir() instread of ~ for folder part of file.

* scripts/prefs/preferences.m: New file.

* scripts/prefs/prefdir.m: New file.

* scripts/prefs/module.mk: Add preferences.m and prefdir.m

* libinterp/corefcn/octave-link.h, libinterp/corefcn/octave-link.cc
  (octave_link::show_preferences): New function.
  (octave_link)::do_show_preferences: New fuction.
  (__octave_link_show_preferences__): New function.

* libgui/src/octave-qt-link.h, libgui/src/octave-qt-link.cc
  (octave_qt_link::show_preferences_signal): New signal.
  (octave_qt_link::do_show_preferences): New function.

* libgui/src/main-window.cc
  (main_window::construct_octave_qt_link): connect octave link to show settings dialog slot.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -907,16 +907,20 @@ main_window::construct_octave_qt_link (v
            history_window, SLOT (clear_history (void)));
 
   connect (_octave_qt_link, SIGNAL (enter_debugger_signal ()),
            this, SLOT (handle_enter_debugger ()));
 
   connect (_octave_qt_link, SIGNAL (exit_debugger_signal ()),
            this, SLOT (handle_exit_debugger ()));
 
+  connect (_octave_qt_link,
+           SIGNAL (show_preferences_signal (void)),
+           this, SLOT (process_settings_dialog_request ()));
+
 #ifdef HAVE_QSCINTILLA
   connect (_octave_qt_link,
            SIGNAL (edit_file_signal (const QString&)),
            editor_window,
            SLOT (handle_edit_file_request (const QString&)));
 #endif
 
   connect (_octave_qt_link,
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -486,8 +486,16 @@ octave_qt_link::file_in_path (const std:
 
         default:
           break;
         }
     }
 
   return ok;
 }
+
+void
+octave_qt_link::do_show_preferences ()
+{
+  emit show_preferences_signal ();
+}
+
+
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -116,16 +116,17 @@ public:
 
   void do_update_breakpoint (bool insert, const std::string& file, int line);
 
   void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                std::string& ps4);
 
   static bool file_in_path (const std::string& file, const std::string& dir);
 
+  void do_show_preferences (void);
 private:
 
   // No copying!
 
   octave_qt_link (const octave_qt_link&);
 
   octave_qt_link& operator = (const octave_qt_link&);
 
@@ -161,11 +162,13 @@ signals:
   void enter_debugger_signal (void);
   void exit_debugger_signal (void);
 
   void update_breakpoint_marker_signal (bool insert, const QString& file,
                                         int line);
 
   void insert_debugger_pointer_signal (const QString&, int);
   void delete_debugger_pointer_signal (const QString&, int);
+
+  void show_preferences_signal (void);
 };
 
 #endif
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -397,8 +397,23 @@ Undocumented internal function.\n\
           retval = items;
         }
       else
         error ("invalid arguments");
     }
 
   return retval;
 }
+
+DEFUN (__octave_link_show_preferences__, , ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __octave_link_show_preferences__ ()\n\
+Undocumented internal function.\n\
+@end deftypefn")
+{
+  octave_value retval;
+
+  retval = octave_link::show_preferences ();
+
+  return retval;
+}
+
+
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -302,16 +302,28 @@ public:
       instance->do_set_default_prompts (ps1, ps2, ps4);
   }
 
   static bool enabled (void)
   {
     return instance_ok () ? instance->link_enabled : false;
   }
 
+  static bool
+  show_preferences ()
+  {
+    if (enabled ())
+      { 
+        instance->do_show_preferences ();
+        return true;
+      }
+    else
+      return false;
+  }
+
 private:
 
   static octave_link *instance;
 
   // No copying!
 
   octave_link (const octave_link&);
 
@@ -420,11 +432,13 @@ protected:
 
   virtual void do_exit_debugger_event (void) = 0;
 
   virtual void do_update_breakpoint (bool insert,
                                      const std::string& file, int line) = 0;
 
   virtual void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                        std::string& ps4) = 0;
+
+  virtual void do_show_preferences (void) = 0;
 };
 
 #endif // OCTAVELINK_H
diff --git a/scripts/prefs/module.mk b/scripts/prefs/module.mk
--- a/scripts/prefs/module.mk
+++ b/scripts/prefs/module.mk
@@ -4,16 +4,18 @@ prefs_PRIVATE_FCN_FILES = \
   prefs/private/loadprefs.m \
   prefs/private/prefsfile.m \
   prefs/private/saveprefs.m
 
 prefs_FCN_FILES = \
   prefs/addpref.m \
   prefs/getpref.m \
   prefs/ispref.m \
+  prefs/prefdir.m \
+  prefs/preferences.m \
   prefs/rmpref.m \
   prefs/setpref.m \
   $(prefs_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(prefs_FCN_FILES)
 
 PKG_ADD_FILES += prefs/PKG_ADD
 
diff --git a/scripts/prefs/prefdir.m b/scripts/prefs/prefdir.m
new file mode 100644
--- /dev/null
+++ b/scripts/prefs/prefdir.m
@@ -0,0 +1,44 @@
+## Copyright (C) 2013 John Donoghue
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} prefdir 
+## @deftypefnx {Function File} {folder =} prefdir 
+## Return the folder that contains the preferences for octave.
+##
+## Examples:
+##
+## Display the preferences folder
+## @example
+## prefdir
+## @end example
+##
+## Change to the preferences folder
+## @example
+## cd(prefdir)
+## @end example
+## @end deftypefn
+
+## Author: John Donoghue
+## Version: 0.01
+
+function folder = prefdir ()
+
+    folder = getenv("HOME");
+      
+endfunction
\ No newline at end of file
diff --git a/scripts/prefs/preferences.m b/scripts/prefs/preferences.m
new file mode 100644
--- /dev/null
+++ b/scripts/prefs/preferences.m
@@ -0,0 +1,42 @@
+## Copyright (C) 2013 John Donoghue
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} preferences 
+## Display the preferences settings. If in GUI mode, display using the preferences dialog, otherwise display in EDITOR.
+##
+## Example:
+#
+## @example
+## preferences
+## @end example
+##
+## @end deftypefn
+
+## Author: John Donoghue
+## Version: 0.01
+
+function preferences ()
+  if (! __octave_link_enabled__ ())
+    prefs_file = [ getenv("HOME")  "/.octave_prefs" ];
+      
+    edit (prefs_file); 
+  else
+    __octave_link_show_preferences__ ();    
+  endif
+endfunction
\ No newline at end of file
diff --git a/scripts/prefs/private/prefsfile.m b/scripts/prefs/private/prefsfile.m
--- a/scripts/prefs/private/prefsfile.m
+++ b/scripts/prefs/private/prefsfile.m
@@ -20,15 +20,16 @@
 ## @deftypefn {Function File} {} prefsfile ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = prefsfile ()
 
-  retval = "~/.octave_prefs";
+  retval = [ prefdir()  "/.octave_prefs" ];
+  
 
 endfunction
 
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
