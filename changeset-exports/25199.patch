# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1523316945 18000
#      Mon Apr 09 18:35:45 2018 -0500
# Branch stable
# Node ID 8cff7eceee87ffb96f46821e7c47051eb04ed069
# Parent  2f0c0c0652d5ec532295ffb35374fbf425f1c3c7
Do Variable Editor focus retention and titlebar highlight properly (bug #53410).

* variable_editor.cc (variable_editor::variable_editor): Remove the m_main
  QMainWindow proxy.
  (variable_editor::focusInEvent): Added.  Add after the base class virtual
  focusInEvent() by setting the focus to the active variable widget.

* variable_editor.h (variable_editor::focusInEvent): Added.  Declaration of
  overriding virtual function.

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -1024,22 +1024,31 @@ namespace octave
 
     QMdiArea *central_mdiarea = new QMdiArea (m_main);
     central_mdiarea->setMinimumSize (QSize (0, 0));
     central_mdiarea->setMaximumSize (QSize (0, 0));
     central_mdiarea->resize (QSize (0, 0));
     m_main->setCentralWidget (central_mdiarea);
 
     setWidget (m_main);
-    setFocusProxy (m_main);
 
     connect (this, SIGNAL (command_signal (const QString&)),
              p, SLOT (execute_command_in_terminal (const QString&)));
   }
 
+  void variable_editor::focusInEvent (QFocusEvent *ev)
+  {
+    octave_dock_widget::focusInEvent (ev);
+
+    // set focus to the current variable
+    QWidget *fw = m_main->focusWidget ();
+    if (fw != nullptr)
+      fw->setFocus ();
+  }
+
   // Add an action to a menu or the widget itself.
 
   QAction*
   variable_editor::add_action (QMenu *menu, const QIcon& icon,
                                const QString& text,
                                const char *member)
   {
     QAction *a;
diff --git a/libgui/src/variable-editor.h b/libgui/src/variable-editor.h
--- a/libgui/src/variable-editor.h
+++ b/libgui/src/variable-editor.h
@@ -329,16 +329,20 @@ namespace octave
     void level_up_signal (void);
 
     void save_signal (void);
 
     void delete_selected_signal (void);
 
     void selected_command_signal (const QString& cmd);
 
+  protected:
+
+    void focusInEvent (QFocusEvent *ev);
+
   private:
 
     QAction * add_action (QMenu *menu, const QIcon& icon, const QString& text,
                           const char *member);
 
     QMainWindow *m_main;
 
     QToolBar *m_tool_bar;
