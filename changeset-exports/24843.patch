# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1520157178 21600
#      Sun Mar 04 03:52:58 2018 -0600
# Node ID bf1bace6d01dc21e22fae107e66f0eb8c29aae77
# Parent  74229798f604a3829b8d5d1d17baf1dec16711df
Use OS GUI highlight backgroud color for variable editor name label (bug #53274)

* variable-editor.cc (variable_dock_widget::handle_focus_change): Rather than
  style sheet, use the Qt definitions for picking the operating system GUI's
  background highlight color as well as its contrasting foreground text.
  (variable_editor::edit_variable): Add two pixels of margin around a panel's
  name label for better highlight balance.

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -170,25 +170,28 @@ namespace octave
   {
     octave_unused_parameter (now);
 
     // The is a proxied test
     if (hasFocus ())
       {
         QLabel *label = titleBarWidget ()->findChild<QLabel *> ();
         if (label != nullptr)
-          label->setStyleSheet ("QLabel {background: skyblue;}");
+          {
+            label->setBackgroundRole (QPalette::Highlight);
+            label->setAutoFillBackground (true);
+          }
 
         emit variable_focused_signal (objectName ());
       }
     else if (old == focusWidget())
       {
         QLabel *label = titleBarWidget ()->findChild<QLabel *> ();
         if (label != NULL)
-          label->setStyleSheet ("QLabel {background: transparent;}");
+          label->setBackgroundRole (QPalette::NoRole);
       }
   }
 
 
   // Variable editor stack
 
   variable_editor_stack::variable_editor_stack (QWidget *p)
     : QStackedWidget (p), m_edit_view (new variable_editor_view (this))
@@ -1078,16 +1081,17 @@ namespace octave
     // Must supply a title for a QLabel to be created.  Calling set_title()
     // more than once will add more QLabels.  Could change octave_dock_widget
     // to always supply a QLabl (initially empty) and then simply update its
     // contents.
     page->set_title (name);
     QLabel *existing_ql = page->titleBarWidget ()->findChild<QLabel *> ();
     connect (model, SIGNAL (update_label_signal (const QString&)),
              existing_ql, SLOT (setText (const QString&)));
+    existing_ql->setMargin (2);
 
     model->update_data (val);
 
     QList<QTableView *> viewlist = findChildren<QTableView *> ();
     if (viewlist.size () == 1)
       m_tool_bar->setEnabled (true);
   }
 
