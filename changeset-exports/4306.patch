# HG changeset patch
# User jwe
# Date 1043382118 0
#      Fri Jan 24 04:21:58 2003 +0000
# Node ID 6d3df3900252b6fd7f43babcc5c0aa81b751d911
# Parent  98e65d1728a196fef730b66c9222467fbc17fd2d
[project @ 2003-01-24 04:21:58 by jwe]

diff --git a/liboctave/Array2-idx.h b/liboctave/Array2-idx.h
--- a/liboctave/Array2-idx.h
+++ b/liboctave/Array2-idx.h
@@ -123,25 +123,23 @@ Array2<T>::index (idx_vector& idx_arg, i
 	  if (idx_arg.one_zero_only ())
 	    {
 	      result_nr = idx_arg.ones_count ();
 	      result_nc = (result_nr > 0 ? 1 : 0);
 	    }
 
 	  retval.resize (result_nr, result_nc);
 
-
-
 	  int k = 0;
 	  for (int j = 0; j < result_nc; j++)
 	    {
 	      for (int i = 0; i < result_nr; i++)
 		{
 		  int ii = idx_arg.elem (k++);
-		  if (ii > orig_len)
+		  if (ii >= orig_len)
 		    retval.elem (i, j) = resize_fill_value;
 		  else
 		    {
 		      int fr = ii % nr;
 		      int fc = (ii - fr) / nr;
 		      retval.elem (i, j) = elem (fr, fc);
 		    }
 		}
@@ -184,17 +182,17 @@ Array2<T>::index (idx_vector& idx_i, idx
 	  retval.resize (n, m);
 
 	  for (int j = 0; j < m; j++)
 	    {
 	      int jj = idx_j.elem (j);
 	      for (int i = 0; i < n; i++)
 		{
 		  int ii = idx_i.elem (i);
-		  if (ii > nr || jj > nc)
+		  if (ii >= nr || jj >= nc)
 		    retval.elem (i, j) = resize_fill_value;
 		  else
 		    retval.elem (i, j) = elem (ii, jj);
 		}
 	    }
 	}
     }
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2003-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array2-idx.h (Array2<T>::index): Fix off-by-one error.
+
 2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* oct-syscalls.cc: Include signal.h.
 
 2003-01-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-syscalls.cc (octave_syscalls::kill): New function.
 	* oct-syscalls.h: Provide decl.
@@ -40,18 +44,18 @@ 2003-01-03  John W. Eaton  <jwe@bevo.che
 
 	* dbleDET.cc (DET::value_will_overflow): We want det[1], not det[2].
 	(DET::value_will_underflow): Likewise.
 	* CmplxDET.cc (ComplexDET::value_will_overflow): Likewise.
 	(ComplexDET::value_will_underflow): Likewise.
 
 	* Makefile.in (distclean): Also remove stamp-prereq.
 
-	* Array2-idx.h (assign): If assignment conforms but the RHS and
-	index are empty matrices, don't do anything.
+	* Array2-idx.h (Array2<T>::assign): If assignment conforms but the
+	RHS and index are empty matrices, don't do anything.
 
 2002-12-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pathsearch.cc (make_retval, free_c_array, make_c_names,
 	delete_c_names): New helper functions.
 	(dir_path::find_first_of): New function.
 	(dir_path::find_all_first_of): Likewise.
 	* pathsearch.h: Provide decls.
