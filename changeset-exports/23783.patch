# HG changeset patch
# User Rik <rik@octave.org>
# Date 1500822286 25200
#      Sun Jul 23 08:04:46 2017 -0700
# Node ID 9c573708d2b500f72f6e813fefeab2b8846dd77f
# Parent  203d3676730f3044a48c29ad9cb97323b49424b4
Fix load on misaligned address detected by -fsanitize=undefined (bug #51530).

* ls-mat5.cc (read_mat5_binary_element): Use C++ alignas operator to guarantee
variable number is on a 2-byte boundary.

diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -484,17 +484,18 @@ read_mat5_binary_element (std::istream& 
   // are first used to avoid errors from gcc about goto crossing
   // initialization of variable.
 
   bool imag;
   bool isclass = false;
   bool logicalvar;
   dim_vector dims;
   enum arrayclasstype arrayclass;
-  int16_t number = *(reinterpret_cast<const int16_t *>("\x00\x01"));
+  alignas (2) const uint8_t raw_number[2] {0x00, 0x01}; 
+  int16_t number = *(reinterpret_cast<const int16_t *> (&raw_number[0]));
   octave_idx_type nzmax;
   std::string classname;
 
   // MAT files always use IEEE floating point
   octave::mach_info::float_format flt_fmt = octave::mach_info::flt_fmt_unknown;
   if ((number == 1) ^ swap)
     flt_fmt = octave::mach_info::flt_fmt_ieee_big_endian;
   else
