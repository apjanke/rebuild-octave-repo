# HG changeset patch
# User jwe
# Date 761167909 0
#      Sun Feb 13 19:31:49 1994 +0000
# Node ID 4fbd4bc7f8886cf3b8ed433e5443f94f78f72cb0
# Parent  8c7677b435ad133c9abbcc774c38691a789ab2d8
[project @ 1994-02-13 19:31:49 by jwe]

diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -224,19 +224,21 @@ public:
  * --
  * James Kanze                             email: kanze@us-es.sel.de
  * GABI Software, Sarl., 8 rue du Faisan, F-67000 Strasbourg, France
  */
 
 template <class T>
 class DiagArray : public Array<T>
 {
+private:
+  inline T get (int i) { return Array<T>::elem (i); }
+  inline void set (const T& val, int i) { Array<T>::elem (i) = val; }
+
 #if ! defined (_AIX)
-private:
-
   class Proxy
   {
   public:
 
     inline Proxy (DiagArray<T> *ref, int r, int c)
       : object (ref), i (r), j (c) { } 
 
     inline const Proxy& operator = (const T& val) const
@@ -345,21 +347,16 @@ public:
   T& xelem (int r, int c);
 
   T elem (int r, int c) const;
   T checkelem (int r, int c) const;
   T operator () (int r, int c) const;
 
   void resize (int n, int m);
   void resize (int n, int m, const T& val);
-
-private:
-
-  inline T get (int i) { return Array<T>::elem (i); }
-  inline void set (const T& val, int i) { Array<T>::elem (i) = val; }
 };
 
 #if defined (__GNUG__) && ! defined (USE_EXTERNAL_TEMPLATES)
 #include "Array.cc"
 #endif
 
 #endif
 
