# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1429680984 18000
#      Wed Apr 22 00:36:24 2015 -0500
# Node ID c36f2b0836130baecf5902b79794f23007493997
# Parent  043dcb4da5fc7f21d5c218186bbdd33cecb8b407
make copying figures to clipboard work (bug #44866)


* Figure.cc (Figure::copy_figure_callback): Just print the figure to a
file here, then call octave_link::copy_image_to_clipboard.
(delete_file): Delete unused static function.
* main-window.h, main-window.cc
(main_window::copy_image_to_clipboard): New function.
(main_window::construct_octave_qt_link): Connect
octave_qt_link::copy_image_to_clipboard_signal signal to
main_window::copy_image_to_clipboard slot.
* octave-qt-link.h, octave-qt-link.cc
(octave_qt_link::do_copy_image_to_clipboard): New function.
(octave_qt_link::copy_image_to_clipboard_signal): New signal.
* octave-link.h (octave_link::do_copy_image_to_clipboard):
New pure virtual function.
(octave_link::copy_image_to_clipboard): New static funtion.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -811,54 +811,34 @@ Figure::fileSaveFigure (bool prompt)
 }
 
 void
 Figure::save_figure_callback (const std::string& file)
 {
   Ffeval (ovl ("print", file));
 }
 
-static void
-delete_file (const std::string& file)
-{
-  octave_unlink (file);
-}
-  
 void
 Figure::copy_figure_callback (const std::string& format)
 {
   std::string msg;
 
-  unwind_protect frame;
-
   std::string file = octave_tempnam ("", "oct-", msg) + "." + format;
 
   if (file.empty ())
     {
       // Report error?
       return;
     }
 
-  frame.add_fcn (delete_file, file);
-
   std::string device = "-d" + format;
 
   Ffeval (ovl ("print", file, device));
 
-  QClipboard *clipboard = QApplication::clipboard ();
-
-  QImage img (file.c_str (), format.c_str ());
-
-  if (img.isNull ())
-    {
-      // Report error?
-      return;
-    }
-
-  clipboard->setImage (img);
+  octave_link::copy_image_to_clipboard (file);
 }
   
 void
 Figure::fileSaveFigureAs (void)
 {
   fileSaveFigure (true);
 }
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -667,16 +667,35 @@ main_window::process_settings_dialog_req
            this, SLOT (request_reload_settings ()));
 
   _settings_dlg->setModal (false);
   _settings_dlg->setAttribute (Qt::WA_DeleteOnClose);
   _settings_dlg->show ();
 }
 
 void
+main_window::copy_image_to_clipboard (const QString& file, bool remove_file)
+{
+  QClipboard *clipboard = QApplication::clipboard ();
+
+  QImage img (file);
+
+  if (img.isNull ())
+    {
+      // Report error?
+      return;
+    }
+
+  clipboard->setImage (img);
+
+  if (remove_file)
+    QFile::remove (file);
+}
+
+void
 main_window::request_reload_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   if (settings)
     emit settings_changed (settings);
 }
 
@@ -1518,16 +1537,20 @@ main_window::construct_octave_qt_link (v
 
       connect (_octave_qt_link, SIGNAL (exit_debugger_signal ()),
                this, SLOT (handle_exit_debugger ()));
 
       connect (_octave_qt_link,
                SIGNAL (show_preferences_signal (void)),
                this, SLOT (process_settings_dialog_request ()));
 
+      connect (_octave_qt_link,
+               SIGNAL (copy_image_to_clipboard_signal (const QString&, bool)),
+               this, SLOT (copy_image_to_clipboard (const QString&, bool)));
+
 #ifdef HAVE_QSCINTILLA
       connect (_octave_qt_link,
                SIGNAL (edit_file_signal (const QString&)),
                editor_window,
                SLOT (handle_edit_file_request (const QString&)));
 #endif
 
       connect (_octave_qt_link,
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -127,16 +127,19 @@ public slots:
   void display_community_news (const QString& news);
   void open_bug_tracker_page (void);
   void open_octave_packages_page (void);
   void open_agora_page (void);
   void open_contribute_page (void);
   void open_developer_page (void);
   void process_settings_dialog_request (const QString& desired_tab
                                                          = QString ());
+
+  void copy_image_to_clipboard (const QString& file, bool remove_file);
+
   void show_about_octave (void);
   void notice_settings (const QSettings *settings);
   void confirm_shutdown_octave (void);
   void prepare_to_exit (void);
   void exit_app (int status);
   void reset_windows (void);
 
   void change_directory (const QString& dir);
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -94,16 +94,24 @@ octave_qt_link::do_exit (int status)
   emit exit_app_signal (status);
 
   // Could wait for a while and then timeout, but for now just
   // assume the GUI application exit will be without problems.
   return true;
 }
 
 bool
+octave_qt_link::do_copy_image_to_clipboard (const std::string& file)
+{
+  emit copy_image_to_clipboard_signal (QString::fromStdString (file), true);
+
+  return true;
+}
+
+bool
 octave_qt_link::do_edit_file (const std::string& file)
 {
   emit edit_file_signal (QString::fromStdString (file));
 
   return true;
 }
 
 bool
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -59,16 +59,18 @@ public:
 
   ~octave_qt_link (void);
 
   void execute_interpreter (void);
 
   bool do_confirm_shutdown (void);
   bool do_exit (int status);
 
+  bool do_copy_image_to_clipboard (const std::string& file);
+
   bool do_edit_file (const std::string& file);
   bool do_prompt_new_edit_file (const std::string& file);
 
   int do_message_dialog (const std::string& dlg, const std::string& msg,
                          const std::string& title);
 
   std::string
   do_question_dialog (const std::string& msg, const std::string& title,
@@ -152,16 +154,18 @@ private:
   QThread *main_thread;
 
   octave_interpreter *command_interpreter;
 
 signals:
 
   void execute_interpreter_signal (void);
 
+  void copy_image_to_clipboard_signal (const QString& file, bool remove_file);
+
   void edit_file_signal (const QString& file);
 
   void change_directory_signal (const QString& dir);
 
   void execute_command_in_terminal_signal (const QString& command);
 
   void set_workspace_signal (bool top_level,
                              bool debug,
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -128,16 +128,22 @@ public:
 
   static void finished_readline_hook (void)
   {
     if (enabled ())
       instance->do_finished_readline_hook ();
   }
 
   static bool
+  copy_image_to_clipboard (const std::string& file)
+  {
+    return enabled () ? instance->do_copy_image_to_clipboard (file) : false;
+  }
+
+  static bool
   edit_file (const std::string& file)
   {
     return enabled () ? instance->do_edit_file (file) : false;
   }
 
   static bool
   prompt_new_edit_file (const std::string& file)
   {
@@ -388,16 +394,18 @@ protected:
   }
 
   void do_entered_readline_hook (void) { }
   void do_finished_readline_hook (void) { }
 
   virtual bool do_confirm_shutdown (void) = 0;
   virtual bool do_exit (int status) = 0;
 
+  virtual bool do_copy_image_to_clipboard (const std::string& file) = 0;
+
   virtual bool do_edit_file (const std::string& file) = 0;
   virtual bool do_prompt_new_edit_file (const std::string& file) = 0;
 
   virtual int
   do_message_dialog (const std::string& dlg, const std::string& msg,
                      const std::string& title) = 0;
 
   virtual std::string
