# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1538073300 14400
#      Thu Sep 27 14:35:00 2018 -0400
# Node ID e980aef0e1dbafb631732e21c6716215c0278036
# Parent  25726930dd351349304ba6763e1ace2e88461135
do sync file browser when settings change (bug #54718)

* files-dock-widget.cc (files_doc_widget::notice_settings):
Call do_sync_browser_directory if m_sync_octave_dir is true.

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -827,16 +827,25 @@ namespace octave
     m_file_tree_view->setModel (m_file_system_model);
 
     // enable the buttons to sync octave/browser dir
     // only if this is not done by default
     m_sync_octave_dir
       = settings->value (fb_sync_octdir.key, fb_sync_octdir.def).toBool ();
     m_sync_octave_directory_action->setEnabled (! m_sync_octave_dir);
     m_sync_browser_directory_action->setEnabled (! m_sync_octave_dir);
+
+    // If m_sync_octave_dir is enabled, then we want the file browser to
+    // update to match the current working directory of the
+    // interpreter.  We don't want to queue any signal to change the
+    // interpreter's current working directory.  In this case, we just
+    // want the GUI to match the state of the interpreter.
+
+    if (m_sync_octave_dir)
+      do_sync_browser_directory ();
   }
 
   void files_dock_widget::popdownmenu_home (bool)
   {
     QString dir = QString::fromStdString (sys::env::get_home_directory ());
 
     if (dir.isEmpty ())
       dir = QDir::homePath ();
