# HG changeset patch
# User jwe
# Date 1018627813 0
#      Fri Apr 12 16:10:13 2002 +0000
# Node ID 498652ebb0df7e74200ff35a5061daf723afd411
# Parent  efa508da7d5c6d7494cf2cb6bfe83e325d214cca
[project @ 2002-04-12 16:10:13 by jwe]

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2002-04-12  Kienzle <pkienzle@jazz.ncnr.nist.gov>
+
+	* config/unix.exp: Allow running of individual tests with
+	"runtest *.exp" from any of the directories under test/octave.test.
+
 2002-04-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.test/linalg/qr-7.m: New test.
 	From Paul Kienzle <pkienzle@jazz.ncnr.nist.gov>.
 	
 2001-04-24  Christoph Spiel <cspiel@hammersmith-consulting.com>
 
 	* Makefile.in (check): Allow user to specify which .exp file to run.
diff --git a/test/config/unix.exp b/test/config/unix.exp
--- a/test/config/unix.exp
+++ b/test/config/unix.exp
@@ -1,10 +1,32 @@
 # Some global definitions.
 
+if ![info exists OCTAVE ] then {
+  set OCTAVE [pwd]
+  set tail [string last /test/ $OCTAVE]
+  if { $tail < 0 } {
+    error "run test from in the test directory"
+    exit 1;  
+  }
+  set OCTAVE [string replace $OCTAVE $tail end /src/octave]
+}
+
+if ![info exists OCTAVE_SCRIPT_PATH ] then {
+  set OSPATH "[pwd]"
+  set tail [string last /test/ $OSPATH]
+  if { $tail < 0 } {
+    error "run test from in the test directory"
+    exit 1;
+  }
+  set OSPATH "-p '[string replace $OSPATH $tail end /scripts//]:[string replace $OSPATH $tail end /src]'"
+} else {
+  set OSPATH "-p $OCTAVE_SCRIPT_PATH"
+}
+
 if ![info exists prompt] then {
   set prompt "octave:\[0-9\]*> "
 }
 
 if ![info exists nl] then {
   set nl "(\[\r\n\])*"
 }
 
@@ -38,37 +60,33 @@ proc octave_load { arg } { }
 # octave_exit -- quit and cleanup
 
 proc octave_exit { } { }
 
 # Start Octave for an interactive test.
 
 proc octave_interactive_start { } {
   global OCTAVE
-  global OCTAVE_SCRIPT_PATH
+  global OSPATH
   global prompt
   global nl
   global resync
   global spawn_id
   global verbose
   global timeout
 
   if { $verbose > 1 } {
     send_user "starting $OCTAVE\n"
   }
 
 # It might take a long time to start Octave, but we shouldn't leave
 # the timeout period at a minute for the real tests.
 
   set timeout 60
-  if [ llength $OCTAVE_SCRIPT_PATH ] {
-    spawn $OCTAVE -f -q -p $OCTAVE_SCRIPT_PATH
-  } else {
-    spawn $OCTAVE -f -q
-  }
+  spawn $OCTAVE -f -q $OSPATH
 
   set timeout 5
   expect {
     -re "No such file.*"  { error "Can't start $OCTAVE"; exit 1 }
     -re "$resync"	  { }
     timeout		  { error "Failed to spawn $OCTAVE (timeout)"; exit 1 }
   }
 
@@ -104,36 +122,29 @@ proc octave_interactive_stop { } {
     -re ".*$" { }
   }
 }
 
 # Start Octave for a single non-interactive test.
 
 proc octave_start { src_file } {
   global OCTAVE
-  global OCTAVE_SCRIPT_PATH
+  global OSPATH
   global oct_output
 
-  set OSPATH $OCTAVE_SCRIPT_PATH
-
-  if ![info exists OSPATH] then {
-    set OSPATH ""
-  }
-
 # Can't seem to get 2>&1 to work without using /bin/sh -c ""...
 
-  send_log "EXEC: $OCTAVE -f -q -p $OSPATH $src_file\n"
-  catch "exec /bin/sh -c \"$OCTAVE -f -q -p $OSPATH $src_file 2>&1\"" oct_output
+  send_log "EXEC: $OCTAVE -f -q $OSPATH $src_file\n"
+  catch "exec /bin/sh -c \"$OCTAVE -f -q $OSPATH $src_file 2>&1\"" oct_output
 }
 
 # do_test -- run a test given by the file $src_code.
 
 proc do_test { src_code } {
   global OCTAVE
-  global OCTAVE_SCRIPT_PATH
   global srcdir
   global subdir
   global spawn_id
   global verbose
   global timeout
   global prog_output
   global oct_output
 
