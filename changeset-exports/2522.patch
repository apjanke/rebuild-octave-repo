# HG changeset patch
# User jwe
# Date 848088081 0
#      Fri Nov 15 20:01:21 1996 +0000
# Node ID 4f095783ee437ca51676c44d7e2dfcb8f8e2865d
# Parent  19b33e933eae7aaff34245525afd93758f2a63d1
[project @ 1996-11-15 20:00:59 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+Fri Nov 15 13:47:34 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-ieee.h: [SCO]: Declare isinf and isnan.
+
 Thu Nov 14 00:06:53 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 1.92.
 
 Wed Nov 13 11:19:22 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cmd-hist.cc (command_history::add): Ignore empty input lines, or
 	lines that have only carriage return or newline.
diff --git a/liboctave/lo-ieee.h b/liboctave/lo-ieee.h
--- a/liboctave/lo-ieee.h
+++ b/liboctave/lo-ieee.h
@@ -26,15 +26,20 @@ Software Foundation, 59 Temple Place - S
 // Octave's idea of infinity.
 extern double octave_Inf;
 
 // Octave's idea of not a number.
 extern double octave_NaN;
 
 extern void octave_ieee_init (void);
 
+#if defined (SCO)
+extern "C" int isnan (double);
+extern "C" int isinf (double);
+#endif
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+Fri Nov 15 13:48:02 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* defaults.cc (subst_octave_home): Start subsequent searchs from
+	the end of the replaced text.
+
+	* pr-output.cc (pr_any_float): Kluge for SCO systems.
+
+	* pr-output.cc (pr_any_float, pr_complex): Don't declare inline.
+
+	* mappers.cc: Include lo-ieee.h, for isinf and isnan on SCO
+	systems.
+
 Thu Nov 14 00:06:19 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-plot.cc (Fgset, Fgshow): New commands.
 	(Fshow): Print warning and call gshow.
 	(Fset): Print warning and call gset.
 
 	* variables.cc (parse_fcn_file): Add unwind-protect for file
 	pointer, so the file is always closed.
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -88,20 +88,20 @@ subst_octave_home (const string& s)
   string prefix = OCTAVE_PREFIX;
 
   retval = s;
 
   if (Voctave_home != prefix)
     {
       int len = prefix.length ();
       size_t start = 0;
-      while ((start = retval.find (prefix)) != NPOS)
+      while ((start = retval.find (prefix, start)) != NPOS)
 	{
 	  retval.replace (start, len, Voctave_home);
-	  start++;
+	  start += len;
 	}
     }
 
   return retval;
 }
 
 static void
 set_octave_home (void)
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 #include <config.h>
 #endif
 
 #include <cctype>
 #include <cfloat>
 
 #include "oct-cmplx.h"
 #include "oct-math.h"
+#include "lo-ieee.h"
 
 #include "defun.h"
 #include "error.h"
 #include "f77-fcn.h"
 #include "mappers.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -883,21 +883,27 @@ union equiv
       stmp[5] = (ctmp & 0x20) ? '1' : '0'; \
       stmp[6] = (ctmp & 0x40) ? '1' : '0'; \
       stmp[7] = (ctmp & 0x80) ? '1' : '0'; \
       stmp[8] = '\0'; \
       os.form ("%s", stmp); \
     } \
   while (0)
 
-static inline void
+static void
 pr_any_float (const char *fmt, ostream& os, double d, int fw = 0)
 {
+#if defined (SCO)
+  // Apparently on some SCO systems NaN == -0.0 is true.  Compiler bug?
+  if (d == -0.0 && ! xisnan (d))
+    d = 0.0;
+#else
   if (d == -0.0)
     d = 0.0;
+#endif
 
   if (fmt)
     {
       if (hex_format)
 	{
 	  equiv tmp;
 	  tmp.d = d;
 
@@ -993,17 +999,17 @@ pr_float (ostream& os, double d, int fw 
 }
 
 static inline void
 pr_imag_float (ostream& os, double d, int fw = 0)
 {
   pr_any_float (curr_imag_fmt, os, d, fw);
 }
 
-static inline void
+static void
 pr_complex (ostream& os, const Complex& c, int r_fw = 0, int i_fw = 0)
 {
   double r = c.real ();
   pr_float (os, r, r_fw);
   if (! bank_format)
     {
       double i = c.imag ();
       if (! (hex_format || bit_format) && i < 0)
