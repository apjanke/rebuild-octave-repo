# HG changeset patch
# User jwe
# Date 754690904 0
#      Tue Nov 30 20:21:44 1993 +0000
# Node ID 93bbd907de348b975d6b203d8936b16d1063bf4d
# Parent  daf9f8d4c5bda53de33bda564f3d563e23b3dba7
[project @ 1993-11-30 20:21:19 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -5,16 +5,19 @@
 # jwe@che.utexas.edu
 # Department of Chemical Engineering
 # The University of Texas at Austin
 
 SHELL = /bin/sh
 
 #### Start of system configuration section. ####
 
+# The top of the directory tree where the sources live.
+root_srcdir = @root_srcdir@
+
 LEX = @LEX@
 LFLAGS = @LFLAGS@
 LEXLIB = @LEXLIB@
 
 YACC = @YACC@
 YFLAGS = -dv
 
 INSTALL = @INSTALL@
@@ -33,27 +36,45 @@ F2C = @F2C@
 F2CFLAGS = @F2CFLAGS@
 
 # Fortran compiler flags.
 
 FFLAGS = @FFLAGS@
 
 # cc and associated flags.
 
-INCFLAGS = -I. -I$(srcdir)
+# Clean up INCFLAGS a bit if we are not compiling in a separate
+# directory.
+ifeq ($(srcdir),.)
+  TMP_IF_1 = -I.
+else
+  TMP_IF_1 = -I. -I$(srcdir)
+endif
+ifeq ($(TOPDIR),$(root_srcdir))
+  TMP_IF_2 = -I$(TOPDIR) -I$(TOPDIR)/liboctave
+else
+  TMP_IF_2 = -I$(TOPDIR) -I$(TOPDIR)/liboctave \
+	-I$(root_srcdir) -I$(root_srcdir)/liboctave 
+endif
+INCFLAGS = $(TMP_IF_1) $(TMP_IF_2)
+
 LIBFLAGS = -L$(TOPDIR)
+
 DEFS = @DEFS@
+UGLY_DEFS = @UGLY_DEFS@
 
 CC = @CC@
 CFLAGS = @CFLAGS@
 ALL_CFLAGS = $(INCFLAGS) $(DEFS) $(CFLAGS)
+UGLY_ALL_CFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(CFLAGS)
 
 CXX = @CXX@
 CXXFLAGS = @CXXFLAGS@
 ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(CXXFLAGS)
+UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(CXXFLAGS)
 
 LDFLAGS = @LDFLAGS@
 ALL_LDFLAGS = $(LIBFLAGS) $(LDFLAGS)
 
 FLIBS = @FLIBS@
 
 # A shell command to extract the version number from version.h.
 getversion = sed -e '/version_string/!d' -e 's/[^0-9.]*\([0-9.]*\).*/\1/' -e q 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -1,11 +1,17 @@
 dnl Process this file with autoconf to produce a configure script.
 dnl
 AC_INIT([[src]]/octave.cc)dnl
+AC_CONFIG_HEADER(config.h)dnl
+
+root_srcdir=$srcdir
+AC_SUBST(root_srcdir)dnl
+
+AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 
 # See if we were given the target host type.  If not, guess.
 
 if test $# -gt 0; then
   TARGET=`eval echo $\{\`echo $#\`\}`
   case $TARGET in
     -*) target_host_type= ;;
     *) target_host_type=$TARGET ;;
@@ -40,44 +46,44 @@ DLD_DIR=
 LIBDLD=
 DLD_OBJECTS='$(DLD_OBJECTS)'
 LD_STATIC_FLAG=
 if $use_dld; then
   DYNAMIC_LD_OBJ='dynamic-ld.o'
   DLD_DIR=dld
   LIBDLD='../libdld.a'
   DLD_OBJECTS= : # don't link them in if doing dynamic linking
-  DEFS="$DEFS -DWITH_DLD=1"
+  AC_DEFINE(WITH_DLD, 1)dnl
   LD_STATIC_FLAG=-static
 fi
 AC_SUBST(DYNAMIC_LD_OBJ)dnl
 AC_SUBST(DLD_DIR)dnl
 AC_SUBST(LIBDLD)dnl
 AC_SUBST(DLD_OBJECTS)dnl
 AC_SUBST(LD_STATIC_FLAG)dnl
 
 echo "checking for npsol"
 if test -f $srcdir/libcruft/npsol/npsol.f; then
   :
 else
-  DEFS="$DEFS -DNPSOL_MISSING=1"
+  AC_DEFINE(NPSOL_MISSING, 1)dnl
 fi
 
 echo "checking for qpsol"
 if test -f $srcdir/libcruft/qpsol/qpsol.f; then
   :
 else
-  DEFS="$DEFS -DQPSOL_MISSING=1"
+  AC_DEFINE(QPSOL_MISSING, 1)dnl
 fi
 
 echo "checking for fsqp"
 if test -f $srcdir/libcruft/fsqp/fsqpd.f; then
   :
 else
-  DEFS="$DEFS -DFSQP_MISSING=1"
+  AC_DEFINE(FSQP_MISSING, 1)dnl
 fi
 
 AC_PROG_CC
 AC_GCC_TRADITIONAL
 AC_MINIX
 AC_ISC_POSIX
 AC_AIX
 AC_DYNIX_SEQ
@@ -119,16 +125,20 @@ if test "$CXX" = g++ ; then
   gxx_version=`g++ -v 2>&1 | grep "^g.. version" | sed 's/^g.. version *//'`
   case "$gxx_version" in
     1.*)
       cat << EOF
 warning: g++ version $gxx_version is likely to cause problems --
          you should probably consider getting version 2.x
 EOF
       ;;
+    2.5.*|2.6.*|2.7.*|2.8.*|2.9.*)
+      CXXFLAGS="$CXXFLAGS -fexternal-templates"
+      AC_DEFINE(USE_EXTERNAL_TEMPLATES, 1)dnl
+      ;;
     esac
 else
   cat << EOF
 warning: Octave has only been tested with g++, and I can't
          seem to find it.
 EOF
 fi
 AC_SUBST(CXXFLAGS)dnl
@@ -157,17 +167,17 @@ else
   if test -n "$F77"; then
     echo "checking $F77/f2c compatibility"
     export F77
     export CC
     tmpdef=`sh $srcdir/f2c-compat.sh $srcdir/flibs.sh`
     status=$?
     if test $status -eq 0; then
       if test "$tmpdef" = '-DF77_APPEND_UNDERSCORE=1'; then
-        DEFS="$DEFS $tmpdef"
+        AC_DEFINE(F77_APPEND_UNDERSCORE, 1)dnl
       fi
     else
       F77=
     fi
   fi
 fi
 
 # If we can't find a Fortran compiler, or if it looks like it isn't
@@ -205,17 +215,17 @@ EOF
 DEFAULT_DOT_C_FROM_DOT_F='# A rule for making C source from Fortran source.\
 # If we are using f2c we should also turn off the default rule for\
 # making objects from .f files so that we do not invoke the fortran\
 # compiler by mistake.\
 \
 \%.c : \%.f\
 	cat $< | $(F2C) $(F2CFLAGS) > $(@F)'
   DEFAULT_DOT_O_FROM_DOT_F='\%.o : \%.f'
-  DEFS="$DEFS -DF77_APPEND_UNDERSCORE=1"
+  AC_DEFINE(F77_APPEND_UNDERSCORE, 1)dnl
 else
   cat << EOF
 warning: in order to build octave, you must have a compatible
          Fortran compiler or f2c installed and in your path.
          See the file INSTALL for more information.
          Continuing anyway...
 EOF
 fi
@@ -288,19 +298,19 @@ case "$RETSIGTYPE" in
   int)
   ;;
   *)
     VOID_SIGHANDLER="-DVOID_SIGHANDLER=1"
   ;;
 esac
 AC_SUBST(VOID_SIGHANDLER)dnl
 
-AC_HEADER_CHECK(termios.h, DEFS="$DEFS -DHAVE_TERMIOS_H=1",
-  AC_HEADER_CHECK(termio.h, DEFS="$DEFS -DHAVE_TERMIO_H=1",
-    AC_HEADER_CHECK(sgtty.h, DEFS="$DEFS -DHAVE_SGTTY_H=1", [])))dnl
+AC_HEADER_CHECK(termios.h, AC_DEFINE(HAVE_TERMIOS_H, 1),
+  AC_HEADER_CHECK(termio.h, AC_DEFINE(HAVE_TERMIO_H, 1),
+    AC_HEADER_CHECK(sgtty.h, AC_DEFINE(HAVE_SGTTY_H, 1), [])))dnl
 case "$DEFS" in
   *HAVE_TERMIOS_H* | *HAVE_TERMIO_H* | *HAVE_SGTTY_H*)
   ;;
   *)
     cat << EOF
 error: I couldn't find termios.h, termio.h, or sgtty.h, and I can't
        continue without them.  To compile Octave, your system must
        have at least one of these header files.
@@ -330,23 +340,23 @@ AC_HAVE_LIBRARY(-lm)dnl
 AC_HAVE_FUNCS(finite isnan isinf)dnl
 AC_REPLACE_FUNCS(acosh asinh atanh)dnl
 
 if test -n "$LIBOBJS"; then
   for func in $LIBOBJS
   do
     case "$func" in
       *acosh.o*)
-	DEFS="$DEFS -DACOSH_MISSING=1"
+	AC_DEFINE(ACOSH_MISSING, 1)dnl
 	;;
       *asinh.o*)
-	DEFS="$DEFS -DASINH_MISSING=1"
+	AC_DEFINE(ASINH_MISSING, 1)dnl
 	;;
       *atanh.o*)
-	DEFS="$DEFS -DATANH_MISSING=1"
+	AC_DEFINE(ATANH_MISSING, 1)dnl
 	;;
     esac
   done
 
   case $LIBOBJS in
     *acosh.o* | *asinh.o*)
       AC_REPLACE_FUNCS(copysign)dnl
       ;;
@@ -402,16 +412,19 @@ fi
 
 AC_PROGRAM_CHECK(RUNTEST, runtest, runtest, [])dnl
 AC_PROGRAM_CHECK(EXPECT, expect, expect, [])dnl
 if test -z "$EXPECT" ; then
   RUNTEST=
 fi
 AC_SUBST(RUNTEST)dnl
 
+UGLY_DEFS="$DEFS"
+AC_SUBST(UGLY_DEFS)dnl
+
 define([tmpa], [libcruft/blas/Makefile libcruft/balgen/Makefile])dnl
 define([tmpb], [libcruft/dassl/Makefile libcruft/eispack/Makefile])dnl
 define([tmpc], [libcruft/fftpack/Makefile libcruft/fsqp/Makefile])dnl
 define([tmpd], [libcruft/lapack/Makefile libcruft/linpack/Makefile])dnl
 define([tmpe], [libcruft/minpack/Makefile libcruft/misc/Makefile])dnl
 define([tmpf], [libcruft/npsol/Makefile libcruft/odepack/Makefile])dnl
 define([tmpg], [libcruft/qpsol/Makefile libcruft/quadpack/Makefile])dnl
 define([tmph], [libcruft/ranlib/Makefile libcruft/villad/Makefile])dnl 
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -11,17 +11,18 @@ TOPDIR = .
 srcdir = @srcdir@
 VPATH = @srcdir@
 
 include Makeconf
 
 DISTFILES = COPYING ChangeLog Makefile.in Makeconf.in NEWS README \
 	README.NLP THANKS INSTALL INSTALL.OCTAVE BUGS PLOTTING \
 	PROJECTS f2c-compat.sh flibs.sh configure configure.in \
-	config.guess octave.sh octave-mode.el doinstall.sh mkpath.c
+	config.guess octave.sh octave-mode.el doinstall.sh mkpath.c \
+	config.h.in acconfig.h
 
 # Complete directory trees to distribute.
 DISTDIRS = bsd-math dld
 
 # Subdirectories to run make in for the primary targets.
 SUBDIRS = libcruft liboctave @DLD_DIR@ info readline src doc scripts 
 
 # Subdirectories to run `make dist' in
