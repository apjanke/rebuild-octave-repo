# HG changeset patch
# User Rik <rik@octave.org>
# Date 1549159667 28800
#      Sat Feb 02 18:07:47 2019 -0800
# Node ID 5c46c13b43ad39d2f4d42425f9f2e773a9266b4f
# Parent  f9dbc287f9084d2ececdd6e22938984087fc48a7
comet3.m: Use constant speed regardless of size of data input.

* comet3.m: Change default time to display each data point to "5 / numel (z)"
so that it scales with input.  Update documentation to reflect this.
Use more accurate timing mechanism borrowed from movie.m.

diff --git a/scripts/plot/draw/comet3.m b/scripts/plot/draw/comet3.m
--- a/scripts/plot/draw/comet3.m
+++ b/scripts/plot/draw/comet3.m
@@ -24,17 +24,17 @@
 ## Produce a simple comet style animation along the trajectory provided by
 ## the input coordinate vectors (@var{x}, @var{y}, @var{z}).
 ##
 ## If only @var{z} is specified then @var{x}, @var{y} default to the indices
 ## of @var{z}.
 ##
 ## The speed of the comet may be controlled by @var{p}, which represents the
 ## time each point is displayed before moving to the next one.  The default for
-## @var{p} is 0.1 seconds.
+## @var{p} is @code{5 / numel (@var{z})}.
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axes,
 ## rather than the current axes returned by @code{gca}.
 ## @seealso{comet}
 ## @end deftypefn
 
 ## Author: jwe
 ## Created: 2010-12-17
@@ -43,22 +43,22 @@ function comet3 (varargin)
 
   [hax, varargin, nargin] = __plt_get_axis_arg__ ("comet3", varargin{:});
 
   if (nargin == 0 || nargin == 2 || nargin > 4)
     print_usage ();
   elseif (nargin == 1)
     z = varargin{1};
     x = y = 1:numel (z);
-    p = 0.1;
+    p = 5 / numel (z);
   elseif (nargin == 3)
     x = varargin{1};
     y = varargin{2};
     z = varargin{3};
-    p = 0.1;
+    p = 5 / numel (z);
   elseif (nargin == 4)
     x = varargin{1};
     y = varargin{2};
     z = varargin{3};
     p = varargin{4};
   endif
 
   oldfig = [];
@@ -71,34 +71,39 @@ function comet3 (varargin)
     num = numel (y);
     dn = round (num/10);
 
     hl = plot3 (x(1), y(1), z(1), "color", "r", "marker", "none",
                 x(1), y(1), z(1), "color", "g", "marker", "none",
                 x(1), y(1), z(1), "color", "b", "marker", "o");
     axis (limits);  # set manual limits to speed up plotting
 
+    ## Initialize the timer
+    t = p;
+    timerid = tic ();
+
     for n = 2:(num+dn)
       m = n - dn;
       m = max ([m, 1]);
       k = min ([n, num]);
       set (hl(1), "xdata", x(1:m), "ydata", y(1:m), "zdata", z(1:m));
       set (hl(2), "xdata", x(m:k), "ydata", y(m:k), "zdata", z(m:k));
       set (hl(3), "xdata", x(k)  , "ydata", y(k)  , "zdata", z(k));
-      drawnow ();
-      pause (p);
+
+      pause (t - toc (timerid));
+      t += p;
     endfor
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
 endfunction
 
 
 %!demo
 %! clf;
 %! title ("comet3() animation");
 %! view (3); hold on;
 %! t = 0:pi/20:5*pi;
-%! comet3 (cos (t), sin (t), t, 0.05);
+%! comet3 (cos (t), sin (t), t);
 %! hold off;
