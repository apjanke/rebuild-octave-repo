# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1546589217 28800
#      Fri Jan 04 00:06:57 2019 -0800
# Node ID c10bf34bf1f365ba2ee079c877fd05cc94868734
# Parent  31d5eb44368a71b8b08f1fc8e5676ab560890fc7
# Parent  6e698f4606db8e807c9c76a2cda94208fe45d768
maint: merge stable to default

diff --git a/etc/NEWS.5 b/etc/NEWS.5
--- a/etc/NEWS.5
+++ b/etc/NEWS.5
@@ -165,16 +165,21 @@ Summary of important user-visible change
     reproduce figures as they appeared in previous versions of Octave.
 
  ** Specifying legend position with a numeric argument is deprecated and
     will be removed in Octave 7.0.  Use a string argument instead.
 
  ** It is now possible to use files and folders containing Unicode
     characters in Windows.
 
+ ** The environment variable used by mkoctfile for linker flags is now
+    LDFLAGS rather than LFLAGS.  LFLAGS is deprecated, and a warning
+    is emitted if is used, but it will continue to work until eventual
+    removal in Octave 7.0.
+
  ** The GUI requires Qt libraries.  The minimum Qt4 version supported is
     Qt4.8.  Qt5 of any version is preferred.
 
  ** The FFTW library is now required to perform FFT calculations.
     The FFTPACK sources have been removed from Octave.
 
  ** The OSMesa library is no longer used.  To print invisible figures
     when using OpenGL graphics, the Qt QOFFSCREENSURFACE feature must be
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -207,28 +207,28 @@ initialize (void)
   std::string DEFAULT_INCFLAGS
     = "-I" + quote_path (vars["OCTINCLUDEDIR"] + "/..")
       + " -I" + quote_path (vars["OCTINCLUDEDIR"]);
 #endif
 
   if (vars["INCLUDEDIR"] != "/usr/include")
     DEFAULT_INCFLAGS += " -I" + quote_path (vars["INCLUDEDIR"]);
 
-  std::string DEFAULT_LFLAGS;
+  std::string DEFAULT_LDFLAGS;
 
 #if (defined (OCTAVE_USE_WINDOWS_API) || defined (CROSS)) || (defined __APPLE__ && defined __MACH__)
 
   // We'll be linking the files we compile with -loctinterp and
   // -loctave, so we need to know where to find them.
 
-  DEFAULT_LFLAGS += "-L" + quote_path (vars["OCTLIBDIR"]);
+  DEFAULT_LDFLAGS += "-L" + quote_path (vars["OCTLIBDIR"]);
 #endif
 
   if (vars["LIBDIR"] != "/usr/lib")
-    DEFAULT_LFLAGS += " -L" + quote_path (vars["LIBDIR"]);
+    DEFAULT_LDFLAGS += " -L" + quote_path (vars["LIBDIR"]);
 
   vars["CPPFLAGS"] = get_variable ("CPPFLAGS", %OCTAVE_CONF_CPPFLAGS%);
 
   vars["INCFLAGS"] = get_variable ("INCFLAGS", DEFAULT_INCFLAGS);
 
   vars["F77"] = get_variable ("F77", %OCTAVE_CONF_MKOCTFILE_F77%);
 
   vars["FFLAGS"] = get_variable ("FFLAGS", %OCTAVE_CONF_FFLAGS%);
@@ -302,24 +302,25 @@ initialize (void)
                                            %OCTAVE_CONF_OCTAVE_LINK_OPTS%);
 
   vars["OCT_LINK_DEPS"] = get_variable ("OCT_LINK_DEPS",
                                         %OCTAVE_CONF_MKOCTFILE_OCT_LINK_DEPS%);
 
   vars["OCT_LINK_OPTS"] = get_variable ("OCT_LINK_OPTS",
                                         %OCTAVE_CONF_OCT_LINK_OPTS%);
 
-  vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
+  vars["LDFLAGS"] = get_variable ("LDFLAGS", DEFAULT_LDFLAGS);
 
-  vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
+  vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
 
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG",
                                          %OCTAVE_CONF_LD_STATIC_FLAG%);
 
-  vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LFLAGS);
+  // FIXME: Remove LFLAGS in Octave 7.0
+  vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LDFLAGS);
 
   vars["F77_INTEGER8_FLAG"] = get_variable ("F77_INTEGER8_FLAG",
                                             %OCTAVE_CONF_F77_INTEGER_8_FLAG%);
   vars["ALL_FFLAGS"] = vars["FFLAGS"] + ' ' + vars["F77_INTEGER8_FLAG"];
 
   vars["ALL_CFLAGS"]
     = vars["INCFLAGS"] + ' ' + vars["XTRA_CFLAGS"] + ' ' + vars["CFLAGS"];
 
@@ -382,36 +383,35 @@ static std::string help_msg =
 "\n"
 "  -p VAR, --print VAR     Print configuration variable VAR.  There are\n"
 "                          three categories of variables:\n"
 "\n"
 "                          Octave configuration variables that users may\n"
 "                          override with environment variables.  These are\n"
 "                          used in commands that mkoctfile executes.\n"
 "\n"
-"                            ALL_CFLAGS                  LAPACK_LIBS\n"
-"                            ALL_CXXFLAGS                LDFLAGS\n"
-"                            ALL_FFLAGS                  LD_CXX\n"
-"                            ALL_LDFLAGS                 LD_STATIC_FLAG\n"
-"                            BLAS_LIBS                   LFLAGS\n"
+"                            ALL_CFLAGS                  INCLUDEDIR\n"
+"                            ALL_CXXFLAGS                LAPACK_LIBS\n"
+"                            ALL_FFLAGS                  LDFLAGS\n"
+"                            ALL_LDFLAGS                 LD_CXX\n"
+"                            BLAS_LIBS                   LD_STATIC_FLAG\n"
 "                            CC                          LIBDIR\n"
 "                            CFLAGS                      LIBOCTAVE\n"
 "                            CPICFLAG                    LIBOCTINTERP\n"
 "                            CPPFLAGS                    OCTAVE_LINK_OPTS\n"
 "                            CXX                         OCTINCLUDEDIR\n"
 "                            CXXFLAGS                    OCTAVE_LIBS\n"
 "                            CXXPICFLAG                  OCTAVE_LINK_DEPS\n"
 "                            DL_LD                       OCTLIBDIR\n"
 "                            DL_LDFLAGS                  OCT_LINK_DEPS\n"
 "                            F77                         OCT_LINK_OPTS\n"
 "                            F77_INTEGER8_FLAG           RDYNAMIC_FLAG\n"
 "                            FFLAGS                      SPECIAL_MATH_LIB\n"
 "                            FPICFLAG                    XTRA_CFLAGS\n"
 "                            INCFLAGS                    XTRA_CXXFLAGS\n"
-"                            INCLUDEDIR\n"
 "\n"
 "                          Octave configuration variables as above, but\n"
 "                          currently unused by mkoctfile.\n"
 "\n"
 "                            AR\n"
 "                            DEPEND_EXTRA_SED_PATTERN\n"
 "                            DEPEND_FLAGS\n"
 "                            FFTW3F_LDFLAGS\n"
@@ -716,17 +716,17 @@ main (int argc, char **argv)
                       << std::endl;
         }
       else if (starts_with (arg, "-D"))
         {
           defs += (' ' + arg);
         }
       else if (arg == "-largeArrayDims" || arg == "-compatibleArrayDims")
         {
-          std::cout << "warning: -largeArrayDims and -compatibleArrayDims are accepted for compatibility, but ignored" << std::endl;
+          std::cerr << "warning: -largeArrayDims and -compatibleArrayDims are accepted for compatibility, but ignored" << std::endl;
         }
       else if (starts_with (arg, "-Wl,") || starts_with (arg, "-l")
                || starts_with (arg, "-L") || starts_with (arg, "-R"))
         {
           ldflags += (' ' + arg);
         }
 #if ! defined (OCTAVE_USE_WINDOWS_API)
       else if (arg == "-pthread")
@@ -754,16 +754,20 @@ main (int argc, char **argv)
         {
           printonly = true;
         }
       else if (arg == "-p" || arg == "-print" || arg == "--print")
         {
           if (i < argc-1)
             {
               arg = argv[++i];
+              // FIXME: Remove LFLAGS checking in Octave 7.0
+              if (arg == "LFLAGS")
+                std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
+
               std::cout << vars[arg] << std::endl;
               return 0;
             }
           else
             std::cerr << "mkoctfile: --print requires argument" << std::endl;
         }
       else if (arg == "-s" || arg == "-strip" || arg == "--strip")
         {
@@ -1055,42 +1059,49 @@ main (int argc, char **argv)
       else
         {
           std::cerr << "mkoctfile: no way to compile C++ file " << f
                     << std::endl;
           return 1;
         }
     }
 
-  // If we are only compliling, we are done.
+  // If we are only compiling, we are done.
 
   if (compile_only)
     return 0;
 
   if (objfiles.empty ())
     {
       std::cerr << "mkoctfile: no objects to link" << std::endl;
       return 1;
     }
 
+  // FIXME: Remove LFLAGS in Octave 7.0
+  if (vars["LFLAGS"] != vars["LDFLAGS"])
+    {
+      std::cerr << "warning: LFLAGS is deprecated and will be removed in a future version of Octave, use LDFLAGS instead" << std::endl;
+      vars["LDFLAGS"] = vars["LFLAGS"];
+    }
+
   std::string octave_libs;
 #if defined (OCTAVE_USE_WINDOWS_API) || defined(CROSS)
   octave_libs = "-loctinterp -loctave";
 #endif
 
   if (link_stand_alone)
     {
       if (! vars["LD_CXX"].empty ())
         {
           std::string cmd
             = (vars["LD_CXX"] + ' ' + vars["CPPFLAGS"] + ' '
                + vars["ALL_CXXFLAGS"] + ' ' + vars["RDYNAMIC_FLAG"] + ' '
                + vars["ALL_LDFLAGS"] + ' ' + pass_on_options + ' '
                + output_option + ' ' + objfiles + ' ' + libfiles + ' '
-               + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
+               + ldflags + ' ' + vars["LDFLAGS"] + ' ' + octave_libs + ' '
                + vars["OCTAVE_LINK_OPTS"] + ' ' + vars["OCTAVE_LINK_DEPS"]);
 
           int status = run_command (cmd, printonly);
 
           clean_up_tmp_files (tmp_objfiles);
 
           if (status)
             return status;
@@ -1104,17 +1115,17 @@ main (int argc, char **argv)
         }
     }
   else
     {
       std::string cmd
         = (vars["DL_LD"] + ' ' + vars["ALL_CXXFLAGS"] + ' '
            + vars["DL_LDFLAGS"] + ' ' + pass_on_options
            + " -o " + octfile + ' ' + objfiles + ' ' + libfiles + ' '
-           + ldflags + ' ' + vars["LFLAGS"] + ' ' + octave_libs + ' '
+           + ldflags + ' ' + vars["LDFLAGS"] + ' ' + octave_libs + ' '
            + vars["OCT_LINK_OPTS"] + ' ' + vars["OCT_LINK_DEPS"]);
 
       int status = run_command (cmd, printonly);
 
       clean_up_tmp_files (tmp_objfiles);
 
       if (status)
         return status;
