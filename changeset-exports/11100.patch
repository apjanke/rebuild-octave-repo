# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1287250038 14400
#      Sat Oct 16 13:27:18 2010 -0400
# Node ID cdf940db26a09504521fb45bf359833a684057bd
# Parent  65b240770880f71260adc8e702379795256dc605
provide mxIsFunctionHandle MEX interface function

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2010-10-16  John W. Eaton  <jwe@octave.org>
+
+	* mxarray.h.in (mxArray::is_function_handle): New virtual function.
+	* mex.cc (mxArray_base::is_function_handle): New pure virtual function.
+	(mxArray_octave_value::is_function_handle): New function.
+	(mxArray_matlab::is_function_handle): New function.
+	(mxIsFunctionHandle): New function.
+	* mexproto.h (mxIsFunctionHandle): Provide decl.
+
 2010-10-14  John W. Eaton  <jwe@octave.org>
 
 	* sparse.cc: Rename from DLD-FUNCTIONS/sparse.cc.  Include
 	defun.h, not defun-dld.h.
 	(Fissparse, Fsparse, Fspalloc): Use DEFUN, not DEFUN_DLD.
 	* Makefile.am (DIST_SRC): Add sparse.cc to the list.
 	* DLD-FUNCTIONS/module-files: Remove sparse.cc from the list of files.
 
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -136,16 +136,18 @@ public:
 
     return retval;
   }
 
   int is_complex (void) const = 0;
 
   int is_double (void) const = 0;
 
+  int is_function_handle (void) const = 0;
+
   int is_int16 (void) const = 0;
 
   int is_int32 (void) const = 0;
 
   int is_int64 (void) const = 0;
 
   int is_int8 (void) const = 0;
 
@@ -338,16 +340,18 @@ public:
   int is_cell (void) const { return val.is_cell (); }
 
   int is_char (void) const { return val.is_string (); }
 
   int is_complex (void) const { return val.is_complex_type (); }
 
   int is_double (void) const { return val.is_double_type (); }
 
+  int is_function_handle (void) const { return val.is_function_handle (); }
+
   int is_int16 (void) const { return val.is_int16_type (); }
 
   int is_int32 (void) const { return val.is_int32_type (); }
 
   int is_int64 (void) const { return val.is_int64_type (); }
 
   int is_int8 (void) const { return val.is_int8_type (); }
 
@@ -782,16 +786,18 @@ public:
   int is_cell (void) const { return id == mxCELL_CLASS; }
 
   int is_char (void) const { return id == mxCHAR_CLASS; }
 
   int is_complex (void) const { return 0; }
 
   int is_double (void) const { return id == mxDOUBLE_CLASS; }
 
+  int is_function_handle (void) const { return id == mxFUNCTION_CLASS; }
+
   int is_int16 (void) const { return id == mxINT16_CLASS; }
 
   int is_int32 (void) const { return id == mxINT32_CLASS; }
 
   int is_int64 (void) const { return id == mxINT64_CLASS; }
 
   int is_int8 (void) const { return id == mxINT8_CLASS; }
 
@@ -2644,16 +2650,22 @@ mxIsComplex (const mxArray *ptr)
 
 int
 mxIsDouble (const mxArray *ptr)
 {
   return ptr->is_double ();
 }
 
 int
+mxIsFunctionHandle (const mxArray *ptr)
+{
+  return ptr->is_function_handle ();
+}
+
+int
 mxIsInt16 (const mxArray *ptr)
 {
   return ptr->is_int16 ();
 }
 
 int
 mxIsInt32 (const mxArray *ptr)
 {
diff --git a/src/mexproto.h b/src/mexproto.h
--- a/src/mexproto.h
+++ b/src/mexproto.h
@@ -141,16 +141,17 @@ extern OCTINTERP_API mxArray *mxDuplicat
 extern OCTINTERP_API void mxDestroyArray (mxArray *v);
 
 /* Type Predicates.  */
 extern OCTINTERP_API int mxIsCell (const mxArray *ptr);
 extern OCTINTERP_API int mxIsChar (const mxArray *ptr);
 extern OCTINTERP_API int mxIsClass (const mxArray *ptr, const char *name);
 extern OCTINTERP_API int mxIsComplex (const mxArray *ptr);
 extern OCTINTERP_API int mxIsDouble (const mxArray *ptr);
+extern OCTINTERP_API int mxIsFunctionHandle (const mxArray *ptr);
 extern OCTINTERP_API int mxIsInt16 (const mxArray *ptr);
 extern OCTINTERP_API int mxIsInt32 (const mxArray *ptr);
 extern OCTINTERP_API int mxIsInt64 (const mxArray *ptr);
 extern OCTINTERP_API int mxIsInt8 (const mxArray *ptr);
 extern OCTINTERP_API int mxIsLogical (const mxArray *ptr);
 extern OCTINTERP_API int mxIsNumeric (const mxArray *ptr);
 extern OCTINTERP_API int mxIsSingle (const mxArray *ptr);
 extern OCTINTERP_API int mxIsSparse (const mxArray *ptr);
diff --git a/src/mxarray.h.in b/src/mxarray.h.in
--- a/src/mxarray.h.in
+++ b/src/mxarray.h.in
@@ -179,16 +179,18 @@ public:
   virtual int is_char (void) const { return rep->is_char (); }
 
   virtual int is_class (const char *name_arg) const { return rep->is_class (name_arg); }
 
   virtual int is_complex (void) const { return rep->is_complex (); }
 
   virtual int is_double (void) const { return rep->is_double (); }
 
+  virtual int is_function_handle (void) const { return rep->is_function_handle (); }
+
   virtual int is_int16 (void) const { return rep->is_int16 (); }
 
   virtual int is_int32 (void) const { return rep->is_int32 (); }
 
   virtual int is_int64 (void) const { return rep->is_int64 (); }
 
   virtual int is_int8 (void) const { return rep->is_int8 (); }
 
