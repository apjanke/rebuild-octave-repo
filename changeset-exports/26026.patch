# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1541023639 -3600
#      Wed Oct 31 23:07:19 2018 +0100
# Node ID 511295347a27f1964a0207c46f6ff100726bcca8
# Parent  1c6dd836bca9052fa093b2f22c69848de563ebfc
Allow pause state to be changed (bug #53723)

* sysdep.cc (Vpause_enabled): New static bool variable.
  (Fpause): Allow pause to be disabled using string argument "on" or "off".
  Eventually return the previous state of pause_enabled. Document new call form.

diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -1049,27 +1049,31 @@ returning the empty string if no key is 
   if (c == -1)
     c = 0;
 
   char s[2] = { static_cast<char> (c), '\0' };
 
   return octave_value (s);
 }
 
-DEFUN (pause, args, ,
+// State of the pause system
+static bool Vpause_enabled = true;
+
+DEFUN (pause, args, nargout,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} pause ()
 @deftypefnx {} {} pause (@var{n})
-Suspend the execution of the program for @var{n} seconds.
+@deftypefnx {} {@var{old_state} = } pause ("on")
+@deftypefnx {} {@var{old_state} = } pause ("off")
+@deftypefnx {} {@var{old_state} = } pause ("query")
+Suspend the execution of the program or change the state of the pause function.
 
 If invoked without an input arguments then the program is suspended until a
-character is typed.
-
-@var{n} is a positive real value and may be a fraction of a second,
-for example:
+character is typed. If argument @var{n} is a positive real value, it indicates 
+the number of seconds the program shall be suspended, for example:
 
 @example
 @group
 tic; pause (0.05); toc
      @print{} Elapsed time is 0.05039 seconds.
 @end group
 @end example
 
@@ -1079,44 +1083,80 @@ clearing the screen.
 @example
 @group
 disp ("wait please...");
 pause (5);
 clc;
 @end group
 @end example
 
+If invoked with a string argument "on", "off" or "query", the state of the pause
+function is changed or queried. When the state is "off", the pause function
+returns emediately. The optional return value contains the previous state of 
+the pause function.  In the following example pause is disabled locally:
+
+@example
+@group
+old_state = pause ("off");
+tic; pause (0.05); toc
+     @print{} Elapsed time is 3.00407e-05 seconds.
+pause (old_state);
+@end group
+@end example
+
 While the program is supended, Octave still handles figures painting and 
 graphics callbacks execution.
 
 @seealso{kbhit}
 @end deftypefn */)
 {
+  octave_value_list retval;
+  
   int nargin = args.length ();
-
+  
   if (nargin > 1)
     print_usage ();
 
-  double dval;
+  if (nargin == 1 && args(0).is_string ())
+    {
+      bool saved_state = Vpause_enabled;
+      std::string state = args(0).string_value ();
+      
+      if (state == "on")
+        Vpause_enabled = true;
+      else if (state == "off")
+        Vpause_enabled = false;
+      else if (state == "query")
+        ;// Do nothing
+      else
+        error ("pause: first argument must be \"on\", \"off\" or \"query\"");
+      
+      if (nargout > 0 || state == "query")
+        retval.append (saved_state ? "on" : "off");
+    }
+  else if (Vpause_enabled)
+    {
+      double dval;
   
-  if (nargin == 0)
-    dval = octave_Inf;
-  else
-    dval = args(0).xdouble_value ("pause: N must be a scalar double value");
+      if (nargin == 0)
+        dval = octave_Inf;
+      else
+        dval = args(0).xdouble_value ("pause: N must be a scalar real value");
 
-  if (octave::math::isnan (dval))
-    warning ("pause: NaN is an invalid delay");
-  else
-    {
-      Fdrawnow ();
+      if (octave::math::isnan (dval))
+        warning ("pause: NaN is an invalid delay");
+      else
+        {
+          Fdrawnow ();
       
-      octave::sleep (dval, true);
+          octave::sleep (dval, true);
+        }
     }
-      
-  return ovl ();
+
+  return retval;
 }
 
 /*
 %!test
 %! pause (1);
 
 %!error (pause (1, 2))
 */
