# HG changeset patch
# User jwe
# Date 1062620820 0
#      Wed Sep 03 20:27:00 2003 +0000
# Node ID 93ad80b6eef629422d9e2c442e1df0125258b8f4
# Parent  49d88738a4a0c7a6ff90a2ea48e1c31c94c998c9
[project @ 2003-09-03 20:27:00 by jwe]

diff --git a/README.Linux b/README.Linux
--- a/README.Linux
+++ b/README.Linux
@@ -14,17 +14,17 @@ of improper installation of compilers or
 problems have happened because of a botched upgrade or even a buggy
 Linux distribution.
 
 If you can, you should probably install Octave using one of the Debian
 or RPM packages for Octave that are available with the major Linux
 distributions.  For example, Dirk Eddelbuettel <edd@debian.org>
 maintains the Debian Octave package and usually has them ready within
 a day or so of new Octave releases.  They are available via the WWW at
-http://www.debian.org/packages.html.
+http://www.debian.org/distrib/packages.
 
 If for some reason you can't (or choose not to) install Octave from
 one of the binary distributions or by using one of the Debian or RPM
 packages and something goes wrong, please check the following list to
 see if your problem is already well known before reporting a bug.
 
 Octave compiles, but it won't run
 ---------------------------------
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -182,16 +182,20 @@ from system to system.\n\
   unwind_protect::add (cleanup_iprocstream, cmd);
 
   // XXX FIXME XXX -- Perhaps we should read more than one character
   // at a time and find a way to avoid the call to octave_usleep as
   // well?
 
   if (cmd && *cmd)
     {
+      // This is a bit of a kluge...
+
+      octave_usleep (100);
+
       char ch;
 
       for (;;)
 	{
 	  if (cmd->get (ch))
 	    octave_stdout << ch;
 	  else
 	    {
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -382,16 +382,20 @@ run_command_and_return_output (const std
       if (*cmd)
 	{
 	  OSSTREAM output_buf;
 
 	  // XXX FIXME XXX -- Perhaps we should read more than one
 	  // character at a time and find a way to avoid the call to
 	  // octave_usleep as well?
 
+	  // This is a bit of a kluge...
+
+	  octave_usleep (100);
+
 	  char ch;
 
 	  for (;;)
 	    {
 	      if (cmd->get (ch))
 		output_buf.put (ch);
 	      else
 		{
