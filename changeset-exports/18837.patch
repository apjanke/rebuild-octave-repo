# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1402943428 -7200
#      Mon Jun 16 20:30:28 2014 +0200
# Branch gui-release
# Node ID 08d7dbd728bc15f5db4afaa08e90e2d413de66fd
# Parent  0e6f7b5f65561cb97f0dae82260051b9abf98359
save a new file before trying to run it from the editor (bug #42571)

* file-editor-tab.h: new flag for modal/modeless file dialogs

* file-editor-tab.cc (constructor): iniitalize new flag to its default value,
  (run_file): set dialogs to modeless before saving the file preventing running
  the file before saving is complete,
  (show_dialog): set mode of dialog corresponding to the new flag

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -64,16 +64,17 @@ along with Octave; see the file COPYING.
 // Make parent null for the file editor tab so that warning
 // WindowModal messages don't affect grandparents.
 file_editor_tab::file_editor_tab (const QString& directory_arg)
 {
   QString directory = directory_arg;
   _lexer_apis = 0;
   _app_closing = false;
   _is_octave_file = true;
+  _modal_dialog = false;
 
   // Make sure there is a slash at the end of the directory name
   // for identification when saved later.
   if (directory.count () && directory.at (directory.count () - 1) != '/')
     directory.append ("/");
 
   _file_name = directory;
   _file_system_watcher.setObjectName ("_qt_autotest_force_engine_poller");
@@ -568,17 +569,21 @@ file_editor_tab::print_file (const QWidg
 
 void
 file_editor_tab::run_file (const QWidget *ID)
 {
   if (ID != this)
     return;
 
   if (_edit_area->isModified ())
-    save_file (_file_name);
+    {
+      _modal_dialog = true;    // force modal dialog if the file is a new one
+      save_file (_file_name);  // save file dialog
+      _modal_dialog = false;   // back to non-modal dialogs
+    }
 
   QFileInfo info (_file_name);
   emit run_file_signal (info);
 }
 
 void
 file_editor_tab::context_run (const QWidget *ID)
 {
@@ -1072,22 +1077,22 @@ void
 file_editor_tab::handle_copy_available (bool enableCopy)
 {
   _copy_available = enableCopy;
   emit editor_state_changed (_copy_available, QDir::cleanPath (_file_name),
                              _is_octave_file);
 }
 
 // show_dialog: shows a modal or non modal dialog depeding on the closing
-//              of the app
+//              of the app and the flag _modal_dialog
 void
 file_editor_tab::show_dialog (QDialog *dlg)
 {
   dlg->setAttribute (Qt::WA_DeleteOnClose);
-  if (_app_closing)
+  if (_app_closing | _modal_dialog)
     dlg->exec ();
   else
     {
       dlg->setWindowModality (Qt::WindowModal);
       dlg->show ();
     }
 }
 
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -218,16 +218,17 @@ private:
 
   QString _file_name;
   QString _file_name_short;
 
   bool _long_title;
   bool _copy_available;
   bool _app_closing;
   bool _is_octave_file;
+  bool _modal_dialog;
 
   QFileSystemWatcher _file_system_watcher;
 
   find_dialog *_find_dialog;
   bool _find_dialog_is_visible;
   QRect _find_dialog_geometry;
 
   QsciAPIs *_lexer_apis;
