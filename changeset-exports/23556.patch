# HG changeset patch
# User Rik <rik@octave.org>
# Date 1496863763 25200
#      Wed Jun 07 12:29:23 2017 -0700
# Node ID 31b1ef1ee585ca1baf35c55bdfe0fafde46a4e69
# Parent  9151922777e2f6cba934e1f7c0d0430291b2b1bd
Fix Octave's -text format for saving data to make it lossless for IEEE-754 doubles.

* ls-oct-text.cc (Vsave_precision): Change default to 17 digits.
* ls-oct-text.cc (Fsave_precision): Add explanation of suitable values to docstring.

diff --git a/libinterp/corefcn/ls-oct-text.cc b/libinterp/corefcn/ls-oct-text.cc
--- a/libinterp/corefcn/ls-oct-text.cc
+++ b/libinterp/corefcn/ls-oct-text.cc
@@ -59,18 +59,19 @@ along with Octave; see the file COPYING.
 #include "pager.h"
 #include "pt-exp.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include "version.h"
 #include "dMatrix.h"
 
-// The number of decimal digits to use when writing ascii data.
-static int Vsave_precision = 16;
+// The number of decimal digits to use when writing ASCII data.
+// 17 is the minimum necessary for lossless save/restore of IEEE-754 doubles.
+static int Vsave_precision = 17;
 
 // Functions for reading octave format text data.
 
 // Extract a KEYWORD and its value from stream IS, returning the
 // associated value in a new string.
 //
 // Input should look something like:
 //
@@ -401,16 +402,24 @@ save_three_d (std::ostream& os, const oc
 DEFUN (save_precision, args, nargout,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{val} =} save_precision ()
 @deftypefnx {} {@var{old_val} =} save_precision (@var{new_val})
 @deftypefnx {} {} save_precision (@var{new_val}, "local")
 Query or set the internal variable that specifies the number of digits to
 keep when saving data in text format.
 
+The default value is 17 which is the minimum necessary for the lossless saving
+and restoring of IEEE-754 double values; For IEEE-754 single values the minimum
+value is 9.  If file size is a concern, it is probably better to choose a
+binary format for saving data rather than to reduce the precision of the saved
+values.
+
 When called from inside a function with the @qcode{"local"} option, the
 variable is changed locally for the function and any subroutines it calls.
 The original variable value is restored when exiting the function.
+
+@seealso{save_default_options}
 @end deftypefn */)
 {
   return SET_INTERNAL_VARIABLE_WITH_LIMITS (save_precision, -1,
                                             std::numeric_limits<int>::max ());
 }
