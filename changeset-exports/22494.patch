# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1473892619 -7200
#      Thu Sep 15 00:36:59 2016 +0200
# Node ID 3564b6b6b8d1f78706db2da8708486919e51a3d2
# Parent  09c0ee94b7ee56beb94d1d5189b8ac9247ce464d
Query OpenGL errors on initialization of GL context (bug #45542).

* gl-render.cc (init_gl_context): Add glGetError for features that fail
on some (Windows) machines.  Add generic warning if GL error is set after
initialization of GL context.
* gl-render.cc (draw): Add generic warning if GL error is set after
drawing object.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -691,16 +691,21 @@ namespace octave
         if (toplevel)
           draw_uibuttongroup (dynamic_cast<const uibuttongroup::properties&> (props), go);
       }
     else
       {
         warning ("opengl_renderer: cannot render object of type '%s'",
                  props.graphics_object_name ().c_str ());
       }
+
+    GLenum gl_error = glGetError ();
+    if (gl_error)
+      warning ("opengl_renderer: Error %d occurred drawing '%s' object",
+               gl_error, props.graphics_object_name ().c_str ());
   }
 
 #if defined (HAVE_OPENGL)
 
   static std::string
   gl_get_string (GLenum id)
   {
     // This is kind of ugly, but glGetString returns a pointer to GLubyte
@@ -783,23 +788,34 @@ namespace octave
     glBlendFunc (GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA);
     glAlphaFunc (GL_GREATER, 0.0f);
     glEnable (GL_NORMALIZE);
 
     if (enhanced)
       {
         glEnable (GL_BLEND);
         glEnable (GL_MULTISAMPLE);
-        GLint iMultiSample, iNumSamples;
-        glGetIntegerv (GL_SAMPLE_BUFFERS, &iMultiSample);
-        glGetIntegerv (GL_SAMPLES, &iNumSamples);
-        if (iMultiSample != GL_TRUE || iNumSamples == 0)
+        bool has_multisample = false;
+        if (! glGetError ())
+          {
+            GLint iMultiSample, iNumSamples;
+            glGetIntegerv (GL_SAMPLE_BUFFERS, &iMultiSample);
+            glGetIntegerv (GL_SAMPLES, &iNumSamples);
+            if (iMultiSample == GL_TRUE && iNumSamples > 0)
+              has_multisample = true;
+          }
+
+        if (! has_multisample)
           {
             // MultiSample not implemented.  Use old-style anti-aliasing
             glDisable (GL_MULTISAMPLE);
+            // Disabling GL_MULTISAMPLE will raise a gl error if it is not
+            // implemented.  Thus, call glGetError to reset the error state.
+            glGetError ();
+
             glEnable (GL_LINE_SMOOTH);
             glHint (GL_LINE_SMOOTH_HINT, GL_NICEST);
           }
       }
     else
       {
         glDisable (GL_BLEND);
         glDisable (GL_LINE_SMOOTH);
@@ -808,16 +824,21 @@ namespace octave
     // Clear background
 
     if (c.numel () >= 3)
       {
         glClearColor (c(0), c(1), c(2), 1);
         glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
       }
 
+    GLenum gl_error = glGetError ();
+    if (gl_error)
+      warning ("opengl_renderer: Error %d occurred in init_gl_context",
+               gl_error);
+
 #else
 
     octave_unused_parameter (enhanced);
     octave_unused_parameter (c);
 
     // This shouldn't happen because construction of opengl_renderer
     // objects is supposed to be impossible if OpenGL is not available.
 
