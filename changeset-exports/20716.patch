# HG changeset patch
# User Rik <rik@octave.org>
# Date 1447896287 28800
#      Wed Nov 18 17:24:47 2015 -0800
# Node ID 1ecee53513d74338b3b2b6fedb0e4b0d9c0bb6c0
# Parent  5b7643257978d4f8f2870f41c434993d067dc05f
doc: Peridodic grammar check of documentation.

* diffeq.txi, numbers.txi, symtab.cc, urlwrite.cc, mget.m, uicontextmenu.m,
uicontrol.m, uipanel.m, uipushtool.m, uitoggletool.m, uitoolbar.m, waitbar.m,
hsv2rgb.m, beep.m, textread.m, odeget.m, integrate_adaptive.m,
integrate_const.m, annotation.m, surfnorm.m:
Peridodic grammar check of documentation.

diff --git a/doc/interpreter/diffeq.txi b/doc/interpreter/diffeq.txi
--- a/doc/interpreter/diffeq.txi
+++ b/doc/interpreter/diffeq.txi
@@ -118,31 +118,35 @@ Octave distribution in the examples dire
 @menu
 * Matlab-compatible solvers::
 @end menu
 
 @node Matlab-compatible solvers
 @subsection Matlab-compatible solvers
 
 Octave also provides a set of solvers for initial value problems for Ordinary
-Differential Equations that have a Matlab-compatible interface.
+Differential Equations that have a @sc{matlab}-compatible interface.
 The options for this class of methods are set using the functions.
+
 @itemize
   @item @code{odeset}
+
   @item @code{odeget}
 @end itemize
 
 Currently implemented solvers are:
+
 @itemize
   @item Runge-Kutta methods
+
   @itemize
     @item @code{ode45} Integrates a system of non--stiff ordinary differential equations
     (non--stiff ODEs and DAEs) using second order Dormand-Prince method.
     This is a fourth--order accurate integrator therefore the local error
-    normally expected is @math{O(h^5)}. This solver requires six function
+    normally expected is @math{O(h^5)}.  This solver requires six function
     evaluations per integration step.
   @end itemize
 @end itemize
 
 
 @DOCSTRING(ode45)
 
 @DOCSTRING(odeset)
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -614,17 +614,18 @@ bitget (100 * ones (1, 8), 8:-1:1)
 It should be noted that all values passed to the bit manipulation
 functions of Octave are treated as integers.  Therefore, even though the
 example for @code{bitset} above passes the floating point value
 @code{10}, it is treated as the bits @code{[1, 0, 1, 0]} rather than the
 bits of the native floating point format representation of @code{10}.
 
 As the maximum value that can be represented by a number is important
 for bit manipulation, particularly when forming masks, Octave supplies
-two functions 'flintmax' for floating point integers, and 'intmax'.
+two utility functions: @code{flintmax} for floating point integers, and
+@code{intmax} for integer objects (@code{uint8}, @code{int64}, etc.).
 
 Octave also includes the basic bitwise 'and', 'or', and 'exclusive or'
 operators.
 
 @DOCSTRING(bitand)
 
 @DOCSTRING(bitor)
 
diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -1803,17 +1803,17 @@ Undocumented internal function.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (__get_cmdline_fcn_txt__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} __get_cmdline_fcn_txt__ (@var{name})\n\
+@deftypefn {Built-in Function} {} __get_cmdline_fcn_txt__ (@var{name})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       std::string name = args(0).xstring_value ("__get_cmd_line_function_text__: first argument must be function name");
diff --git a/libinterp/corefcn/urlwrite.cc b/libinterp/corefcn/urlwrite.cc
--- a/libinterp/corefcn/urlwrite.cc
+++ b/libinterp/corefcn/urlwrite.cc
@@ -1001,17 +1001,17 @@ Undocumented internal function\n\
         error ("__ftp_mput__: invalid ftp handle");
     }
 
   return retval;
 }
 
 DEFUN (__ftp_mget__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn {Loadable Function} {} __ftp_mget__ (@var{handle}, @var{pattern})\n\
+@deftypefn  {Loadable Function} {} __ftp_mget__ (@var{handle}, @var{pattern})\n\
 @deftypefnx {Loadable Function} {} __ftp_mget__ (@var{handle}, @var{pattern}, @var{target})\n\
 Undocumented internal function\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
diff --git a/scripts/@ftp/mget.m b/scripts/@ftp/mget.m
--- a/scripts/@ftp/mget.m
+++ b/scripts/@ftp/mget.m
@@ -24,17 +24,17 @@
 ## directory on the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ##
 ## The arguments @var{file} and @var{dir} can include wildcards and any
 ## files or directories on the remote server that match will be downloaded.
 ##
 ## If a third string argument @var{target} is given, then it must indicate
-## the path to the local destination directory. @var{target} may be a
+## the path to the local destination directory.  @var{target} may be a
 ## relative or absolute path.
 ## @end deftypefn
 
 function mget (f, file, target = "")
   __ftp_mget__ (f.curlhandle, file, target);
 endfunction
 
 
diff --git a/scripts/gui/uicontextmenu.m b/scripts/gui/uicontextmenu.m
--- a/scripts/gui/uicontextmenu.m
+++ b/scripts/gui/uicontextmenu.m
@@ -12,28 +12,28 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{hui} =} uicontextmenu (@var{property}, @var{value}, @dots{})
+## @deftypefn  {Function File} {@var{hui} =} uicontextmenu (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uicontextmenu (@var{h}, @var{property}, @var{value}, @dots{})
 ##
 ## Create a uicontextmenu object and return a handle to it.
 ##
 ## If @var{h} is omitted then a uicontextmenu for the current figure is
-## created. If no figure is available, a new figure is created first.
+## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{h} is given then a uicontextmenu relative to @var{h} is created.
 ##
-## Any provided property value pairs will override the default values of the created
-## uicontextmenu object.
+## Any provided property value pairs will override the default values of the
+## created uicontextmenu object.
 ##
 ## Uicontextmenu propertes are documented at @ref{Uicontextmenu Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure and uicontextmenu
diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -18,65 +18,69 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{hui} =} uicontrol (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uicontrol (@var{parent}, @var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {} uicontrol (@var{h})
 ##
 ## Create a uicontrol object and return a handle to it.
 ##
-## uicontrols are used to create simple interactive controls such as push buttons, checkboxes, edit and list controls.
+## uicontrols are used to create simple interactive controls such as push
+## buttons, checkboxes, edit and list controls.
 ##
 ## If @var{parent} is omitted then a uicontrol for the current figure is
-## created. If no figure is available, a new figure is created first.
+## created.  If no figure is available, a new figure is created first.
 ##
-## If @var{parent} is given then a uicontrol relative to @var{parent} is created.
+## If @var{parent} is given then a uicontrol relative to @var{parent} is
+## created.
 ##
-## Any provided property value pairs will override the default values of the created
-## uicontrol object.
+## Any provided property value pairs will override the default values of the
+## created uicontrol object.
 ##
 ## Uicontrol propertes are documented at @ref{Uicontrol Properties}.
 ##
-## Control of the type of uicontrol created is through the use of the @var{style} property.
-## If no style property is provided, a push button will be created.
+## Control of the type of uicontrol created is through the use of the
+## @var{style} property.  If no style property is provided, a push button will
+## be created.
 ##
 ## Valid styles for uicontrol are:
 ##
 ## @table @asis
 ## @item @qcode{"checkbox"}
 ## Create a checkbox control that allows user on/off selection.
 ##
 ## @item @qcode{"edit"}
-## Create a edit control that allows user input of single or multiple lines of text.
+## Create an edit control that allows user input of single or multiple lines
+## of text.
 ##
 ## @item @qcode{"listbox"}
-## Create a listbox control that displays a lit of items and allows user slelection of
-## single or multiple items.
+## Create a listbox control that displays a lit of items and allows user
+## slelection of single or multiple items.
 ##
 ## @item @qcode{"popupmenu"}
-## Create a popupmenu control that displays a list of options that can be selected
-## when the user clicks on the control.
+## Create a popupmenu control that displays a list of options that can be
+## selected when the user clicks on the control.
 ##
 ## @item @qcode{"pushbutton"}
 ## Create a push button control that allows user to press to cause an action.
 ##
 ## @item @qcode{"radiobutton"}
-## Create a radio button control intended to be used for mutually exclusive input in a group of
-## of radiobutton controls.
+## Create a radio button control intended to be used for mutually exclusive
+## input in a group of radiobutton controls.
 ##
 ## @item @qcode{"slider"}
-## Create a slider control that allows user selection from a range of values by sliding
-## knob on the control.
+## Create a slider control that allows user selection from a range of values
+## by sliding knob on the control.
 ##
 ## @item @qcode{"text"}
 ## Create a static text control to display single or multiple lines of text.
 ##
 ## @item @qcode{"togglebutton"}
-## Create a toggle button control that appears like a push button but allows the user to
-## select between two states.
+## Create a toggle button control that appears like a push button but allows
+## the user to select between two states.
 ##
 ## @end table
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure and panel on it
diff --git a/scripts/gui/uipanel.m b/scripts/gui/uipanel.m
--- a/scripts/gui/uipanel.m
+++ b/scripts/gui/uipanel.m
@@ -20,22 +20,22 @@
 ## @deftypefn  {Function File} {@var{hui} =} uipanel (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uipanel (@var{parent}, "@var{property}, @var{value}, @dots{})
 ##
 ## Create a uipanel object and return a handle to it.
 ##
 ## uipanels are used as containers to group other uicontrol objects.
 ##
 ## If @var{parent} is omitted then a uipanel for the current figure is
-## created. If no figure is available, a new figure is created first.
+## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uipanel relative to @var{parent} is created.
 ##
-## Any provided property value pairs will override the default values of the created
-## uipanel object.
+## Any provided property value pairs will override the default values of the
+## created uipanel object.
 ##
 ## Uipanel propertes are documented at @ref{Uipanel Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure and panel on it
diff --git a/scripts/gui/uipushtool.m b/scripts/gui/uipushtool.m
--- a/scripts/gui/uipushtool.m
+++ b/scripts/gui/uipushtool.m
@@ -17,27 +17,30 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{hui} =} uipushtool (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uipushtool (@var{parent}, @var{property}, @var{value}, @dots{})
 ##
 ## Create a uipushtool object and return a handle to it.
 ##
-## uipushtools are buttons that appear on a figure toolbar. The button is created with a border that
-## is shown when the user hovers over the button. An image can be set using the cdata property.
+## uipushtools are buttons that appear on a figure toolbar.  The button is
+## created with a border that is shown when the user hovers over the button. 
+## An image can be set using the cdata property.
 ##
 ## If @var{parent} is omitted then a uipushtool for the current figure is
-## created. If no figure is available, a new figure is created first.  If a figure is
-## available, but does not contain a uitoolbar, a uitoolbar will be created.
+## created.  If no figure is available, a new figure is created first.  If a
+## figure is available, but does not contain a uitoolbar, a uitoolbar will be
+## created.
 ##
-## If @var{parent} is given then a uipushtools is created on the @var{parent} uitoolbar.
+## If @var{parent} is given then an uipushtools is created on the
+## @var{parent} uitoolbar.
 ##
-## Any provided property value pairs will override the default values of the created
-## uipushtool object.
+## Any provided property value pairs will override the default values of the
+## created uipushtool object.
 ##
 ## Uipushtool propertes are documented at @ref{Uipushtool Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
diff --git a/scripts/gui/uitoggletool.m b/scripts/gui/uitoggletool.m
--- a/scripts/gui/uitoggletool.m
+++ b/scripts/gui/uitoggletool.m
@@ -17,27 +17,30 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{hui} =} uitoggletool (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uitoggletool (@var{parent}, @var{property}, @var{value}, @dots{})
 ##
 ## Create a uitoggletool object and return a handle to it.
 ##
-## uitoggletool are togglebuttons that appear on a figure toolbar. The button is created with a border that
-## is shown when the user hovers over the button. An image can be set using the cdata property.
+## uitoggletool are togglebuttons that appear on a figure toolbar.  The
+## button is created with a border that is shown when the user hovers over
+## the button.  An image can be set using the cdata property.
 ##
 ## If @var{parent} is omitted then a uitoggletool for the current figure is
-## created. If no figure is available, a new figure is created first.  If a figure is
-## available, but does not contain a uitoolbar, a uitoolbar will be created.
+## created.  If no figure is available, a new figure is created first.  If a
+## figure is available, but does not contain a uitoolbar, a uitoolbar will be
+## created.
 ##
-## If @var{parent} is given then a uitoggletool is created on the @var{parent} uitoolbar.
+## If @var{parent} is given then a uitoggletool is created on the
+## @var{parent} uitoolbar.
 ##
-## Any provided property value pairs will override the default values of the created
-## uitoggletool object.
+## Any provided property value pairs will override the default values of the
+## created uitoggletool object.
 ##
 ## Uitoggletool propertes are documented at @ref{Uitoggletool Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
diff --git a/scripts/gui/uitoolbar.m b/scripts/gui/uitoolbar.m
--- a/scripts/gui/uitoolbar.m
+++ b/scripts/gui/uitoolbar.m
@@ -15,25 +15,27 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{hui} =} uitoolbar (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uitoolbar (@var{parent}, @var{property}, @var{value}, @dots{})
 ##
-## Create a uitoolbar object and return a handle to it. A uitoolbar displays uitoggletool and uipushtool buttons.
+## Create a uitoolbar object and return a handle to it.  A uitoolbar displays
+## uitoggletool and uipushtool buttons.
 ##
 ## If @var{parent} is omitted then a uitoolbar for the current figure is
-## created. If no figure is available, a new figure is created first.
+## created.  If no figure is available, a new figure is created first.
 ##
-## If @var{parent} is given then a uitoolbar relative to @var{parent} is created.
+## If @var{parent} is given then a uitoolbar relative to @var{parent} is
+## created.
 ##
-## Any provided property value pairs will override the default values of the created
-## uitoolbar object.
+## Any provided property value pairs will override the default values of the
+## created uitoolbar object.
 ##
 ## Uitoolbar propertes are documented at @ref{Uitoolbar Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## % create figure without a default toolbar
diff --git a/scripts/gui/waitbar.m b/scripts/gui/waitbar.m
--- a/scripts/gui/waitbar.m
+++ b/scripts/gui/waitbar.m
@@ -27,17 +27,17 @@
 ## Return a handle @var{h} to a new waitbar object.
 ##
 ## The waitbar is filled to fraction @var{frac} which must be in the range
 ## [0, 1].
 ##
 ## The optional message @var{msg} is centered and displayed above the waitbar.
 ##
 ## A cancel button can be added to the bottom of the waitbar using the
-## "createcancelbtn" property of waitbar figures. The action to be
+## @qcode{"createcancelbtn"} property of waitbar figures.  The action to be
 ## executed when the user presses the button is specified using a string or
 ## function handle @var{fcn}.
 ##
 ## The appearance of the waitbar figure window can be configured by passing
 ## @var{prop}/@var{val} pairs to the function.
 ##
 ## When called with a single input the current waitbar, if it exists, is
 ## updated to the new value @var{frac}.  If there are multiple outstanding
diff --git a/scripts/image/hsv2rgb.m b/scripts/image/hsv2rgb.m
--- a/scripts/image/hsv2rgb.m
+++ b/scripts/image/hsv2rgb.m
@@ -29,24 +29,26 @@
 ## the height and is the amount of light in the color.
 ##
 ## The input can be both a colormap or RGB image.  In the case of floating
 ## point input, values are expected to be on the [0 1] range.  In the case
 ## of hue (azimuth), since the value corresponds to an angle,
 ## @code{mod (h, 1)} is used.
 ##
 ## @example
+## @group
 ## >> hsv2rgb ([0.5 1 1])
 ## @result{} ans = 0 1 1
 ##
 ## >> hsv2rgb ([2.5 1 1])
 ## @result{} ans = 0 1 1
 ##
 ## >> hsv2rgb ([3.5 1 1])
 ## @result{} ans = 0 1 1
+## @end group
 ## @end example
 ##
 ## Output class and size will be the same as input.
 ##
 ## @seealso{rgb2hsv, ind2rgb, ntsc2rgb}
 ## @end deftypefn
 
 ## Author: Kai Habel <kai.habel@gmx.de>
diff --git a/scripts/io/beep.m b/scripts/io/beep.m
--- a/scripts/io/beep.m
+++ b/scripts/io/beep.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} beep ()
 ## Produce a beep from the speaker (or visual bell).
 ##
 ## This function sends the alarm character @qcode{"@xbackslashchar{}a"} to
-## the terminal. Depending on the user's configuration this may produce an
+## the terminal.  Depending on the user's configuration this may produce an
 ## audible beep, a visual bell, or nothing at all.
 ## @seealso{puts, fputs, printf, fprintf}
 ## @end deftypefn
 
 ## Author: jwe
 
 function beep ()
 
diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -53,53 +53,61 @@
 ## If the format string is empty (not just omitted) and the file contains only
 ## numeric data (excluding headerlines), textread will return a rectangular
 ## matrix with the number of columns matching the number of numeric fields on
 ## the first data line of the file.  Empty fields are returned as zero values.
 ##
 ## Examples:
 ##
 ## @example
+## @group
 ##   Assume a data file like:
 ##   1 a 2 b
 ##   3 c 4 d
 ##   5 e
+## @end group
 ## @end example
 ##
 ## @example
+## @group
 ##   [a, b] = textread (f, "%f %s")
 ##   returns two columns of data, one with doubles, the other a
 ##   cellstr array:
 ##   a = [1; 2; 3; 4; 5]
 ##   b = @{"a"; "b"; "c"; "d"; "e"@}
+## @end group
 ## @end example
 ##
 ## @example
+## @group
 ##   [a, b] = textread (f, "%f %s", 3)
 ##   (read data into two culumns, try to use the format string
 ##   three times)
 ##   returns
 ##   a = [1; 2; 3]
 ##   b = @{"a"; "b"; "c"@}
 ##
+## @end group
 ## @end example
 ##
 ## @example
+## @group
 ##   With a data file like:
 ##   1
 ##   a
 ##   2
 ##   b
 ##
 ##   [a, b] = textread (f, "%f %s", 2)
 ##   returns a = 1 and b = @{"a"@}; i.e., the format string is used
 ##   only once because the format string refers to 2 lines of the
-##   data file. To obtain 2x1 data output columns, specify N = 4
+##   data file.  To obtain 2x1 data output columns, specify N = 4
 ##   (number of data lines containing all requested data) rather
 ##   than 2.
+## @end group
 ## @end example
 ##
 ## @seealso{strread, load, dlmread, fscanf, textscan}
 ## @end deftypefn
 
 function varargout = textread (filename, format = "%f", varargin)
 
   BUFLENGTH = 4096;       # Read buffer to speed up processing @var{n}
diff --git a/scripts/ode/odeget.m b/scripts/ode/odeget.m
--- a/scripts/ode/odeget.m
+++ b/scripts/ode/odeget.m
@@ -22,19 +22,19 @@
 ## @deftypefnx {Function File} {@var{val} =} odeget (@var{ode_opt}, @var{field}, @var{default})
 ##
 ## Query the value of the property @var{field} in the ODE options structure
 ## @var{ode_opt}.
 ##
 ## If called with two input arguments and the first input argument @var{ode_opt}
 ## is an ODE option structure and the second input argument @var{field} is a
 ## string specifying an option name, then return the option value @var{val}
-## corresponding to to @var{field} from @var{ode_opt}.
+## corresponding to @var{field} from @var{ode_opt}.
 ##
-## If called called with an optional third input argument, and @var{field} is
+## If called with an optional third input argument, and @var{field} is
 ## not set in the structure @var{ode_opt}, then return the default value
 ## @var{default} instead.
 ## @seealso{odeset}
 ## @end deftypefn
 
 ## FIXME: 4th input argument "opt" is undocumented.
 
 function val = odeget (ode_opt, field, default = [], opt = "")
diff --git a/scripts/ode/private/integrate_adaptive.m b/scripts/ode/private/integrate_adaptive.m
--- a/scripts/ode/private/integrate_adaptive.m
+++ b/scripts/ode/private/integrate_adaptive.m
@@ -46,17 +46,17 @@
 ## @math{y' = f(t,y)}
 ## @end example
 ## @end ifhtml
 ## @ifnothtml
 ## @math{y' = f(t,y)}.
 ## @end ifnothtml
 ##
 ## The fourth input argument is the time vector which defines the integration
-## interval, i.e, @var{[tspan(1), tspan(end)]} and all intermediate elements
+## interval, i.e., @var{[tspan(1), tspan(end)]} and all intermediate elements
 ## are taken as times at which the solution is required.
 ##
 ## The fifth argument represents the initial conditions for the ODEs and the
 ## last input argument contains some options that may be needed for the stepper.
 ##
 ## @end deftypefn
 ##
 ## @seealso{integrate_const, integrate_n_steps}
diff --git a/scripts/ode/private/integrate_const.m b/scripts/ode/private/integrate_const.m
--- a/scripts/ode/private/integrate_const.m
+++ b/scripts/ode/private/integrate_const.m
@@ -45,17 +45,17 @@
 ## @math{y' = f(t,y)}
 ## @end example
 ## @end ifhtml
 ## @ifnothtml
 ## @math{y' = f(t,y)}.
 ## @end ifnothtml
 ##
 ## The fourth input argument is the time vector which defines the integration
-## interval, i.e, @var{[tspan(1), tspan(end)]} and all intermediate elements
+## interval, i.e., @var{[tspan(1), tspan(end)]} and all intermediate elements
 ## are taken as times at which the solution is required.
 ##
 ## The fourth argument contains the initial conditions for the ODEs.
 ##
 ## The fifth input argument represents the fixed timestep and the last input
 ## argument contains some options that may be needed for the stepper.
 ## @end deftypefn
 ##
diff --git a/scripts/plot/appearance/annotation.m b/scripts/plot/appearance/annotation.m
--- a/scripts/plot/appearance/annotation.m
+++ b/scripts/plot/appearance/annotation.m
@@ -95,30 +95,30 @@
 ## @qcode{"head1length"}/@qcode{"head2length"},
 ## @qcode{"head1width"}/@qcode{"head2width"}, etc.  The index 1 marks the
 ## properties of the arrowhead at the first point in @var{x} and @var{y}
 ## coordinates.
 ##
 ## @item @qcode{"textarrow"}
 ## Construct an arrow with a text label at the opposite end from the arrowhead.
 ##
-## Use the "string" property to change the text string.
+## Use the @qcode{"string"} property to change the text string.
 ## The line and the arrowhead can be customized as for arrow annotations, and
 ## the text can be customized using the same properties as @code{text} graphics
 ## objects.  Note, however, that some text property names are prefixed with
 ## "text" to distinguish them from arrow properties:
 ## @qcode{"textbackgroundcolor"}, @qcode{"textcolor"},
 ## @qcode{"textedgecolor"}, @qcode{"textlinewidth"},
 ## @qcode{"textmargin"}, @qcode{"textrotation"}.
 ##
 ## @item @qcode{"textbox"}
 ## Construct a box with text inside.  @var{pos} specifies the
 ## @qcode{"position"} property of the annotation.
 ##
-## Use the "string" property to change the text string.
+## Use the @qcode{"string"} property to change the text string.
 ## You may use @qcode{"backgroundcolor"}, @qcode{"edgecolor"},
 ## @qcode{"linestyle"}, and @qcode{"linewidth"} properties to customize
 ## the box background color and edge appearance.  A limited set of @code{text}
 ## objects properties are also available; Besides @qcode{"font@dots{}"}
 ## properties, you may also use @qcode{"horizontalalignment"} and
 ## @qcode{"verticalalignment"} to position the text inside the box.
 ##
 ## Finally, the @qcode{"fitboxtotext"} property controls the actual extent of
diff --git a/scripts/plot/draw/surfnorm.m b/scripts/plot/draw/surfnorm.m
--- a/scripts/plot/draw/surfnorm.m
+++ b/scripts/plot/draw/surfnorm.m
@@ -40,18 +40,20 @@
 ## rather than the current axes returned by @code{gca}.
 ##
 ## If output arguments are requested then the components of the normal
 ## vectors are returned in @var{nx}, @var{ny}, and @var{nz} and no plot is
 ## made.  The normal vectors are unnormalized (magnitude != 1).  To normalize,
 ## use
 ##
 ## @example
+## @group
 ## mag = sqrt (nx.^2 + ny.^2 + nz.^2);
 ## nx ./= len;  ny ./= len;  nz ./= len;
+## @end group
 ## @end example
 ##
 ## An example of the use of @code{surfnorm} is
 ##
 ## @example
 ## surfnorm (peaks (25));
 ## @end example
 ##
