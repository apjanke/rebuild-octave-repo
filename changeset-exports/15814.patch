# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1355858955 18000
#      Tue Dec 18 14:29:15 2012 -0500
# Node ID 1eee8d8c59fd5d340b09c2fed794d8645607d537
# Parent  10d6ab9b1b4f570df5a6bf705a933e893e0e59fb
Return history as a cell string when called with an output argument (bug #37947)

* oct-hist.cc (do_history): Return hlist variable. Don't output to
  octave_stdout unless requested. (Fhistory): Update docstring. Return
  hlist as a cell string if nargout > 0

diff --git a/libinterp/interpfcn/oct-hist.cc b/libinterp/interpfcn/oct-hist.cc
--- a/libinterp/interpfcn/oct-hist.cc
+++ b/libinterp/interpfcn/oct-hist.cc
@@ -123,22 +123,23 @@ static std::string Vhistory_timestamp_fo
   = default_history_timestamp_format ();
 
 // Display, save, or load history.  Stolen and modified from bash.
 //
 // Arg of -w FILENAME means write file, arg of -r FILENAME
 // means read file, arg of -q means don't number lines.  Arg of N
 // means only display that many items.
 
-static void
-do_history (int argc, const string_vector& argv)
+static string_vector
+do_history (int argc, const string_vector& argv, bool output = true)
 {
   int numbered_output = 1;
 
   unwind_protect frame;
+  string_vector hlist;
 
   frame.add_fcn (command_history::set_file, command_history::file ());
 
   int i;
   for (i = 1; i < argc; i++)
     {
       std::string option = argv[i];
 
@@ -162,17 +163,17 @@ do_history (int argc, const string_vecto
 
           else if (option == "-n")
             // Read 'new' history from file.
             command_history::read_range ();
 
           else
             panic_impossible ();
 
-          return;
+          return hlist;
         }
       else if (argv[i] == "-q")
         numbered_output = 0;
       else if (argv[i] == "--")
         {
           i++;
           break;
         }
@@ -186,29 +187,32 @@ do_history (int argc, const string_vecto
     {
       if (sscanf (argv[i].c_str (), "%d", &limit) != 1)
         {
           if (argv[i][0] == '-')
             error ("history: unrecognized option '%s'", argv[i].c_str ());
           else
             error ("history: bad non-numeric arg '%s'", argv[i].c_str ());
 
-          return;
+          return hlist;
         }
 
       if (limit < 0)
         limit = -limit;
     }
 
-  string_vector hlist = command_history::list (limit, numbered_output);
+  hlist = command_history::list (limit, numbered_output);
 
   int len = hlist.length ();
 
-  for (i = 0; i < len; i++)
-    octave_stdout << hlist[i] << "\n";
+  if (output)
+    for (i = 0; i < len; i++)
+      octave_stdout << hlist[i] << "\n";
+
+  return hlist;
 }
 
 // Read the edited history lines from STREAM and return them
 // one at a time.  This can read unlimited length lines.  The
 // caller should free the storage.
 
 static char *
 edit_history_readline (std::fstream& stream)
@@ -577,19 +581,20 @@ omitted, the previous command in the his
   if (error_state)
     return retval;
 
   do_edit_history (argc, argv);
 
   return retval;
 }
 
-DEFUN (history, args, ,
+DEFUN (history, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} history options\n\
+@deftypefn {Command} history options\n\
+@deftypefnx {Built-in Function} {@var{h} = } history (@var{opt1}, @var{opt2}, @dots{})\n\
 If invoked with no arguments, @code{history} displays a list of commands\n\
 that you have executed.  Valid options are:\n\
 \n\
 @table @code\n\
 @item -w @var{file}\n\
 Write the current history to the file @var{file}.  If the name is\n\
 omitted, use the default history file (normally @file{~/.octave_hist}).\n\
 \n\
@@ -604,28 +609,40 @@ Display only the most recent @var{n} lin
 @item -q\n\
 Don't number the displayed lines of history.  This is useful for cutting\n\
 and pasting commands using the X Window System.\n\
 @end table\n\
 \n\
 For example, to display the five most recent commands that you have\n\
 typed without displaying line numbers, use the command\n\
 @kbd{history -q 5}.\n\
+\n\
+If invoked with a single output argument, the history will be saved to that\n\
+argument as a cell string and will not be output to screen.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("history");
 
   if (error_state)
     return retval;
 
-  do_history (argc, argv);
+  string_vector hlist;
+  if (nargout > 0)
+    {
+      argv.append (std::string ("-q"));
+      argc++;
+      hlist = do_history (argc, argv, false);
+      retval(0) = Cell (hlist);
+    }
+  else
+    do_history (argc, argv, true);
 
   return retval;
 }
 
 DEFUN (run_history, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Command} {} run_history [@var{first}] [@var{last}]\n\
 Similar to @code{edit_history}, except that the editor is not invoked,\n\
