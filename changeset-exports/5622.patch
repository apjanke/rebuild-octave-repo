# HG changeset patch
# User jwe
# Date 1140021392 0
#      Wed Feb 15 16:36:32 2006 +0000
# Node ID 8b7046423d1ea95d821d566792242a64a99276f5
# Parent  7ef7b8388901d6eaf1c76192bfbc228aa0e7d53d
[project @ 2006-02-15 16:36:32 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2006-02-15  John W. Eaton  <jwe@octave.org>
 
+	* kpse.cc: Do define ST_NLINK_TRICK for Cygwin systems.
+	(do_subdir) [ST_NLINK_TRICK]: Check links != 2 instead of links > 2. 
+
 	* getopt.c: Use __CYGWIN__ instead of __CYGWIN32__.
 
 2006-02-13  David Bateman  <dbateman@free.fr>
 
 	* Makefile.in (LINK_DEPS): Add missing dependencies on colamd,
 	ccolamd and cxsparse 
 
 2006-02-13  John W. Eaton  <jwe@octave.org>
diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -68,19 +68,18 @@ extern "C" {
 /* System dependencies that are figured out by `configure'.  If we are
    compiling standalone, we get our c-auto.h.  Otherwise, the package
    containing us must provide this (unless it can somehow generate ours
    from c-auto.in).  We use <...> instead of "..." so that the current
    cpp directory (i.e., kpathsea/) won't be searched. */
 
 /* If you want to find subdirectories in a directory with non-Unix
    semantics (specifically, if a directory with no subdirectories does
-   not have exactly two links), define this.  Cygwin systems do not
-   have Unix semantics for network mapped drives.  */
-#if defined(__DJGPP__) || ! (defined (DOSISH) || defined (__CYGWIN__))
+   not have exactly two links), define this.  */
+#if defined(__DJGPP__) || ! defined (DOSISH)
 /* Surprise!  DJGPP returns st_nlink exactly like on Unix.  */
 #define ST_NLINK_TRICK
 #endif /* either not DOSISH or __DJGPP__ */
 
 #ifdef OS2
 #define access ln_access
 #define fopen ln_fopen
 #define rename ln_rename
@@ -2269,17 +2268,17 @@ do_subdir (str_llist_type *str_list_ptr,
                  the only alternative I know of is to stat every entry
                  in the directory, and that is unacceptably slow.
 
                  The #ifdef here makes all this configurable at
                  compile-time, so that if we're using VMS directories or
                  some such, we can still find subdirectories, even if it
                  is much slower.  */
 #ifdef ST_NLINK_TRICK
-              if (links > 2)
+              if (links != 2)
 #endif /* not ST_NLINK_TRICK */
                 /* All criteria are met; find subdirectories.  */
                 do_subdir (str_list_ptr, name, potential_len, post);
 #ifdef ST_NLINK_TRICK
               else if (post.empty ())
                 /* Nothing to match, no recursive subdirectories to
                    look for: we're done with this branch.  Add it.  */
                 dir_list_add (str_list_ptr, name);
