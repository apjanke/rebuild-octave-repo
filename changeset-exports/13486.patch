# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1303910718 -7200
#      Wed Apr 27 15:25:18 2011 +0200
# Node ID 68a13d4f6e150a94aceb5e14a35a7b19d98e3f8b
# Parent  59d266f7ed8979fa766d112e3b12cf94b60b721d
Copying from the terminal window works with Ctrl+Shift+C.

diff --git a/gui//src/Session.cpp b/gui//src/Session.cpp
--- a/gui//src/Session.cpp
+++ b/gui//src/Session.cpp
@@ -1124,43 +1124,16 @@ QString Session::foregroundProcessName()
         name = _foregroundProcessInfo->name(&ok);
         if (!ok)
             name.clear();
     }
 
     return name;
 }
 
-/*
-void Session::saveSession(KConfigGroup& group)
-{
-    group.writePathEntry("WorkingDir", currentWorkingDirectory());
-    group.writeEntry("LocalTab",       tabTitleFormat(LocalTabTitle));
-    group.writeEntry("RemoteTab",      tabTitleFormat(RemoteTabTitle));
-    group.writeEntry("SessionGuid",    _uniqueIdentifier.toString());
-    group.writeEntry("Encoding",       QString(codec()));
-}
-
-void Session::restoreSession(KConfigGroup& group)
-{
-    QString value;
-
-    value = group.readPathEntry("WorkingDir", QString());
-    if (!value.isEmpty()) setInitialWorkingDirectory(value);
-    value = group.readEntry("LocalTab");
-    if (!value.isEmpty()) setTabTitleFormat(LocalTabTitle, value);
-    value = group.readEntry("RemoteTab");
-    if (!value.isEmpty()) setTabTitleFormat(RemoteTabTitle, value);
-    value = group.readEntry("SessionGuid");
-    if (!value.isEmpty()) _uniqueIdentifier = QUuid(value);
-    value = group.readEntry("Encoding");
-    if (!value.isEmpty()) setCodec(value.toUtf8());
-}
-*/
-
 SessionGroup::SessionGroup(QObject* parent)
     : QObject(parent), _masterMode(0)
 {
 }
 SessionGroup::~SessionGroup()
 {
 }
 int SessionGroup::masterMode() const { return _masterMode; }
diff --git a/gui//src/TerminalDisplay.cpp b/gui//src/TerminalDisplay.cpp
--- a/gui//src/TerminalDisplay.cpp
+++ b/gui//src/TerminalDisplay.cpp
@@ -2464,19 +2464,27 @@ void TerminalDisplay::setFlowControlWarn
     if (!enable)
         outputSuspended(false);
 }
 
 void TerminalDisplay::keyPressEvent( QKeyEvent* event )
 {
     bool emitKeyPressSignal = true;
 
-    // Keyboard-based navigation
-    if ( event->modifiers() == Qt::ShiftModifier )
+    if(event->modifiers() == Qt::ControlModifier | Qt::ControlModifier)
     {
+        switch(event->key()) {
+            case Qt::Key_C:
+                copyClipboard();
+                break;
+            case Qt::Key_V:
+                //pasteClipboard();
+                break;
+        };
+    } else if ( event->modifiers() == Qt::ShiftModifier ) {
         bool update = true;
 
         if ( event->key() == Qt::Key_PageUp )
         {
             _screenWindow->scrollBy( ScreenWindow::ScrollPages , -1 );
         }
         else if ( event->key() == Qt::Key_PageDown )
         {
