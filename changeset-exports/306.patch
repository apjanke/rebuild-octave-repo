# HG changeset patch
# User jwe
# Date 758930344 0
#      Tue Jan 18 21:59:04 1994 +0000
# Node ID b4b96eaaffa15a13b9b5dbaf2ad77f5e3111598d
# Parent  976a4a6e519be32e829b3f0876ff3ead30aa01bc
[project @ 1994-01-18 21:55:59 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -240,17 +240,17 @@ AC_SUBST(DEFAULT_DOT_O_FROM_DOT_F)dnl
 
 AC_PROG_INSTALL
 AC_PROG_RANLIB
 AC_STDC_HEADERS
 AC_HAVE_HEADERS(string.h varargs.h unistd.h)
 AC_HAVE_HEADERS(sys/time.h sys/fcntl.h sys/ttold.h sys/ptem.h sys/select.h)
 AC_DIR_HEADER
 AC_HAVE_FUNCS(setvbuf getcwd bzero rindex vfprintf vsprintf)
-AC_HAVE_FUNCS(strcasecmp strncasecmp)
+AC_HAVE_FUNCS(stricmp strnicmp strcasecmp strncasecmp)
 AC_STRUCT_TM
 AC_SETVBUF_REVERSED
 TERMLIBS=""
 for termlib in termcap terminfo curses termlib ; do
   AC_HAVE_LIBRARY(${termlib}, [TERMLIBS="${TERMLIBS} -l${termlib}"])
   case "${TERMLIBS}" in
     *-l${termlib}*)
       break
diff --git a/info/search.c b/info/search.c
--- a/info/search.c
+++ b/info/search.c
@@ -367,17 +367,17 @@ skip_node_characters (string, newlines_o
 	   ((!string[i + 1]) ||
 	    (whitespace_or_newline (string[i + 1])) ||
 	    (string[i + 1] == ')'))))
 	break;
     }
   return (i);
 }
 
-/* Unix doesn't have stricmp () functions. */
+#ifndef HAVE_STRICMP
 int
 stricmp (string1, string2)
      char *string1, *string2;
 {
   char ch1, ch2;
 
   for (;;)
     {
@@ -389,17 +389,19 @@ stricmp (string1, string2)
 
       ch1 = info_toupper (ch1);
       ch2 = info_toupper (ch2);
 
       if (ch1 != ch2)
 	return (ch1 - ch2);
     }
 }
+#endif
 
+#ifdef HAVE_STRNICMP
 /* Compare at most COUNT characters from string1 to string2.  Case
    doesn't matter. */
 int
 strnicmp (string1, string2, count)
      char *string1, *string2;
      int count;
 {
   register char ch1, ch2;
@@ -414,16 +416,17 @@ strnicmp (string1, string2, count)
 
       if (ch1 == ch2)
 	count--;
       else
 	break;
     }
   return (count);
 }
+#endif
 
 /* **************************************************************** */
 /*								    */
 /*		     Searching FILE_BUFFER's			    */
 /*								    */
 /* **************************************************************** */
 
 /* Return the absolute position of the first occurence of a node separator in
diff --git a/info/search.h b/info/search.h
--- a/info/search.h
+++ b/info/search.h
@@ -47,23 +47,26 @@ typedef struct {
 SEARCH_BINDING *make_binding (), *copy_binding ();
 extern long search_forward (), search_backward (), search ();
 extern int looking_at ();
 
 /* Note that STRING_IN_LINE () always returns the offset of the 1st character
    after the string. */
 extern int string_in_line ();
 
-/* Unix doesn't have stricmp () functions. */
+#ifndef HAVE_STRICMP
 /* strcmp (), but caseless. */
 extern int stricmp ();
+#endif
 
+#ifndef HAVE_STRNICMP
 /* Compare at most COUNT characters from STRING1 to STRING2.  Case
    doesn't matter. */
 extern int strnicmp ();
+#endif
 
 /* Function names that start with "skip" are passed a string, and return
    an offset from the start of that string.  Function names that start
    with "find" are passed a SEARCH_BINDING, and return an absolute position
    marker of the item being searched for.  "Find" functions return a value
    of -1 if the item being looked for couldn't be found. */
 extern int skip_whitespace (), skip_non_whitespace ();
 extern int skip_whitespace_and_newlines (), skip_line ();
