# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294921306 18000
#      Thu Jan 13 07:21:46 2011 -0500
# Node ID 8837a42205d3eb94718bbfb3ed9a4d7fbc3c527c
# Parent  f3d0b69c46280e6966ad687c2b07fd0c27481dcb
more warning flags for GCC if configured with --enable-extra-warning-flags (on by default)

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac (AC_ARG_ENABLE(extra-warning-flags)): Check for
+	-Wpointer-arith, -Wmissing-prototypes, -Wstrict-prototypes, and
+	-Wwrite-strings and add them to WARN_CFLAGS.  Check for
+	-Wpointer-arith and add them to WARN_CXXFLAGS.
+
 2011-01-12  John W. Eaton  <jwe@octave.org>
 
 	* mk-opts.pl: Generate initialization lists and in-line code for
 	copying.
 
 2010-01-11  Rik  <octave@nomad.inbox5.com>
 
 	* ROADMAP: Update guide to Octave directory structure.
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1846,39 +1846,55 @@ if $try_extra_warning_flags; then
     WARN_CFLAGS="$WARN_CFLAGS -W";
     AC_MSG_RESULT([adding -W to WARN_CFLAGS])])
   OCTAVE_CC_FLAG(-Wshadow, [
     WARN_CFLAGS="$WARN_CFLAGS -Wshadow";
     AC_MSG_RESULT([adding -Wshadow to WARN_CFLAGS])])
   OCTAVE_CC_FLAG(-Wformat, [
     WARN_CFLAGS="$WARN_CFLAGS -Wformat";
     AC_MSG_RESULT([adding -Wformat to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wpointer-arith, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wpointer-arith";
+    AC_MSG_RESULT([adding -Wpointer-arith to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wmissing-prototypes, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wmissing-prototypes";
+    AC_MSG_RESULT([adding -Wmissing-prototypes to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wstrict-prototypes, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wstrict-prototypes";
+    AC_MSG_RESULT([adding -Wstrict-prototypes to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wwrite-strings, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wwrite-strings";
+    AC_MSG_RESULT([adding -Wwrite-strings to WARN_CFLAGS])])
 
   OCTAVE_CXX_FLAG(-Wall, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall";
     AC_MSG_RESULT([adding -Wall to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-W, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -W";
     AC_MSG_RESULT([adding -W to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wshadow, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wshadow";
     AC_MSG_RESULT([adding -Wshadow to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wold-style-cast, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wold-style-cast";
     AC_MSG_RESULT([adding -Wold-style-cast to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wformat, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat";
     AC_MSG_RESULT([adding -Wformat to WARN_CXXFLAGS])])
+  OCTAVE_CXX_FLAG(-Wpointer-arith, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wpointer-arith";
+    AC_MSG_RESULT([adding -Wpointer-arith to WARN_CXXFLAGS])])
+  OCTAVE_CXX_FLAG(-Wwrite-strings, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wwrite-strings";
+    AC_MSG_RESULT([adding -Wwrite-strings to WARN_CXXFLAGS])])
 fi
 
-GCC_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion -Wmissing-prototypes \
-  -Wpointer-arith -Wstrict-prototypes -Wwrite-strings"
+GCC_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion"
 
-GXX_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion -Wpointer-arith \
-  -Wwrite-strings -Weffc++"
+GXX_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion -Weffc++"
 
 try_strict_warning_flags=false
 
 AC_ARG_ENABLE(strict-warning-flags,
   [AS_HELP_STRING([--enable-strict-warning-flags],
      [add extra strict warning options to CFLAGS and CXXFLAGS (off by default)])],
   [if test "$enableval" = yes; then
      try_strict_warning_flags=true
