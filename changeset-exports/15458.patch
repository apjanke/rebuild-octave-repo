# HG changeset patch
# User Rik <rik@octave.org>
# Date 1348987200 25200
#      Sat Sep 29 23:40:00 2012 -0700
# Node ID 1cc42df8ede736c9af405bca29028f316eadb24f
# Parent  dd086145f4a663f3798beb7c103aa197572d3753
mkoctfile.in.cc: Change variable types to stop compilation warnings.

* mkoctfile.in.cc: Change variable types to stop compilation warnings about
signed/unsigned comparisons.  Remove unused variable len.

diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -68,17 +68,17 @@ substitute_prefix (const string& s, cons
 
   return retval;
 }
 
 static string
 get_line (FILE *fp)
 {
   static vector<char> buf (100);
-  int idx = 0;
+  unsigned int idx = 0;
   char c;
 
   while (true)
     {
       c = static_cast<char> (fgetc (fp));
       if (c == '\n' || c == EOF)
         break;
       if (buf.size () <= idx)
@@ -431,17 +431,16 @@ main (int argc, char **argv)
     {
       cout << version_msg << endl;
       return 0;
     }
 
   for (int i = 1; i < argc; i++)
     {
       string arg = argv[i];
-      size_t len = arg.length ();
 
       if (ends_with (arg, ".c"))
         {
           file = arg;
           cfiles.push_back (file);
         }
       else if (ends_with (arg, ".cc") || ends_with (arg, ".C")
                || ends_with (arg, ".cpp"))
@@ -603,23 +602,23 @@ main (int argc, char **argv)
 
           unlink (dfile.c_str ());
           string cmd = vars["CC"] + " " + vars["DEPEND_FLAGS"] + " "
             + vars["CPPFLAGS"] + " " + vars["ALL_CFLAGS"] + " "
             + incflags  + " " + defs + " " + quote_path (f);
 
           FILE *fd = popen (cmd.c_str (), "r");
           ofstream fo (dfile.c_str ());
-          int pos;
+          size_t pos;
           while (!feof (fd))
             {
               line = get_line (fd);
               if ((pos = line.rfind (".o:")) != string::npos)
                 {
-                  int spos = line.rfind ('/', pos);
+                  size_t spos = line.rfind ('/', pos);
                   string ofile = (spos == string::npos ? line.substr (0, pos+2) : line.substr (spos+1, pos-spos+1));
                   fo << "pic/" << ofile << " " << ofile << " " << dfile << line.substr (pos) << endl;
                 }
               else
                 fo << line << endl;
             }
           pclose (fd);
           fo.close ();
@@ -631,23 +630,23 @@ main (int argc, char **argv)
 
           unlink (dfile.c_str ());
           string cmd = vars["CC"] + " " + vars["DEPEND_FLAGS"] + " "
             + vars["CPPFLAGS"] + " " + vars["ALL_CXXFLAGS"] + " "
             + incflags  + " " + defs + " " + quote_path (f);
 
           FILE *fd = popen (cmd.c_str (), "r");
           ofstream fo (dfile.c_str ());
-          int pos;
+          size_t pos;
           while (!feof (fd))
             {
               line = get_line (fd);
               if ((pos = line.rfind (".o:")) != string::npos)
                 {
-                  int spos = line.rfind ('/', pos);
+                  size_t spos = line.rfind ('/', pos);
                   string ofile = (spos == string::npos ? line.substr (0, pos+2) : line.substr (spos+1, pos-spos+1));
                   fo << "pic/" << ofile << " " << ofile << " " << dfile << line.substr (pos+2) << endl;
                 }
               else
                 fo << line << endl;
             }
           pclose (fd);
           fo.close ();
