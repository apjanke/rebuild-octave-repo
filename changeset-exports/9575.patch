# HG changeset patch
# User David Grundberg <individ@acc.umu.se>
# Date 1251201810 -7200
#      Tue Aug 25 14:03:30 2009 +0200
# Node ID 55ecaefb7d0f62ead24e78dfec9cfca3eef7f710
# Parent  19124db6fc1c1488ffe2d805089075126e61cef4
Use pkg-config to configure GraphicsMagick++.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -31,16 +31,28 @@ 2009-08-26  John W. Eaton  <jwe@octave.o
 	* Makeconf.in (ARPACK_CPPFLAGS, ARPACK_LDFLAGS): New variables.
 	(do-subst-config-vals): Substitute them.
 
 2009-08-26  Benjamin Lindner  <lindnerb@users.sourceforge.net>
 
 	* mkoctfile.cc.in: Fix typo.
 	* octave-bug.cc.in: Correct substututions.
 
+2009-08-25  David Grundberg  <individ@acc.umu.se>
+
+	* configure.in: Run PKG_PROG_PKG_CONFIG earlier. Use pkg-config
+	instead of GraphicsMagick++-config. Determine only -I, -L and -l
+	flags and put them in MAGICK_CPPFLAGS, MAGICK_LDFLAGS and
+	MAGICK_LIBS respectively. Substitute these variables.
+	Remove variables MAGICK_CONFIG and MAGICK_INCFLAGS.
+	Test linking against GraphicsMagick++.
+	* Makeconf.in: Don't run $(MAGICK_CONFIG) here. Use substituted
+	valued from MAGICK_CPPFLAGS, MAGICK_LDFLAGS and MAGICK_LIBS.
+	Remove variables MAGICK_CONFIG and MAGICK_INCFLAGS.
+
 2009-08-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* acx_blas_f77_func.m4: Fix typo.
 
 2009-08-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* NEWS: Update.
 
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -146,19 +146,19 @@ else
 endif
 INCFLAGS = $(TMP_IF_1) $(TMP_IF_2)
 
 X11_INCFLAGS = @X11_INCFLAGS@
 X11_LIBS = @X11_LIBS@
 
 CARBON_LIBS = @CARBON_LIBS@
 
-MAGICK_CONFIG = @MAGICK_CONFIG@
-MAGICK_INCFLAGS = $(shell $(MAGICK_CONFIG) --cppflags)
-MAGICK_LIBS = $(shell $(MAGICK_CONFIG) --libs)
+MAGICK_CPPFLAGS = @MAGICK_CPPFLAGS@
+MAGICK_LDFLAGS = @MAGICK_LDFLAGS@
+MAGICK_LIBS = @MAGICK_LIBS@
 
 PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
 PTHREAD_LIBS = @PTHREAD_LIBS@
 
 LIBFLAGS = -L$(TOPDIR)
 
 DEFS = @DEFS@
 
@@ -640,17 +640,18 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_LIBDIR%|\"${libdir}\"|" \
   -e "s|%OCTAVE_CONF_LIBEXT%|\"${LIBEXT}\"|" \
   -e "s|%OCTAVE_CONF_LIBFLAGS%|\"${LIBFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_LIBGLOB%|\"${LIBGLOB}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTAVE%|\"${LIBOCTAVE}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTINTERP%|\"${LIBOCTINTERP}\"|" \
   -e "s|%OCTAVE_CONF_LIBS%|\"${LIBS}\"|" \
   -e "s|%OCTAVE_CONF_LN_S%|\"${LN_S}\"|" \
-  -e "s|%OCTAVE_CONF_MAGICK_INCFLAGS%|\"${MAGICK_INCFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_MAGICK_CPPFLAGS%|\"${MAGICK_CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_MAGICK_LDFLAGS%|\"${MAGICK_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_MAGICK_LIBS%|\"${MAGICK_LIBS}\"|" \
   -e 's|%OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS%|\"@MKOCTFILE_DL_LDFLAGS@\"|' \
   -e "s|%OCTAVE_CONF_OCTINCLUDEDIR%|\"${octincludedir}\"|" \
   -e "s|%OCTAVE_CONF_OCTLIBDIR%|\"${octlibdir}\"|" \
   -e "s|%OCTAVE_CONF_OPENGL_LIBS%|\"${OPENGL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_PREFIX%|\"${prefix}\"|" \
   -e "s|%OCTAVE_CONF_PTHREAD_CFLAGS%|\"${PTHREAD_CFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_PTHREAD_LIBS%|\"${PTHREAD_LIBS}\"|" \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -108,16 +108,20 @@ OCTAVE_SET_DEFAULT(octfiledir,
 OCTAVE_SET_DEFAULT(localoctfiledir,
   '$(libexecdir)/octave/site/oct/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(localapioctfiledir,
   '$(libexecdir)/octave/site/oct/$(api_version)/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(localveroctfiledir,
   '$(libexecdir)/octave/$(version)/site/oct/$(canonical_host_type)')
 OCTAVE_SET_DEFAULT(imagedir, '$(datadir)/octave/$(version)/imagelib')
 
+### Find pkg-config executable (sets $PKG_CONFIG)
+
+PKG_PROG_PKG_CONFIG
+
 ### Make configure args available for other uses.
 
 config_opts=$ac_configure_args
 AC_SUBST(config_opts)
 
 ### Make it possible to have Octave's array and matrix classes do bounds
 ### checking on element references.  This slows some operations down a
 ### bit, so it is turned off by default.
@@ -557,25 +561,66 @@ CPPFLAGS="$Z_CPPFLAGS $CPPFLAGS"
 save_LIBS="$LIBS"
 LIBS="$Z_LDFLAGS $Z_LIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(curl, cURL,
   [cURL library not found.  The urlread and urlwrite functions will be disabled.],
   [curl/curl.h], [curl_easy_escape])
 LIBS="$save_LIBS"
 CPPFLAGS="$save_CPPFLAGS"
 
-# GraphicsMagick++
+### GraphicsMagick++
+
+warn_magick="GraphicsMagick++ library not found.  The imread function for reading image files will not be fully functional."
+
+MAGICK_CPPFLAGS=
+MAGICK_LDFLAGS=
+MAGICK_LIBS=
+
+PKG_CHECK_EXISTS([GraphicsMagick++], [
+  ## Make sure we only get -I, -L and -l flags. Some GraphicsMagick++
+  ## packages adds extra flags that are useful when building
+  ## GraphicsMagick++ extentions. These extra flags break the Octave build.
+  MAGICK_LDFLAGS=`$PKG_CONFIG --libs-only-L GraphicsMagick++`
+  MAGICK_LIBS=`$PKG_CONFIG --libs-only-l GraphicsMagick++`
+  MAGICK_CPPFLAGS=`$PKG_CONFIG --cflags-only-I GraphicsMagick++`
+
+  warn_magick="GraphicsMagick++ library fails tests.  The imread function for reading image files will not be fully functional."
 
-warn_magick=
-AC_CHECK_PROGS(MAGICK_CONFIG, [GraphicsMagick++-config GraphicsMagick-config])
-if test -z "$MAGICK_CONFIG"; then
-  warn_magick="GraphicsMagick++ config script not found.  Assuming GraphicsMagic++ library and header files are missing, so imread will not be fully functional"
+  save_CPPFLAGS="$CPPFLAGS"
+  save_LDFLAGS="$LDFLAGS"
+  save_LIBS="$LIBS"
+  CPPFLAGS="$CPPFLAGS $MAGICK_CPPFLAGS"
+  LDFLAGS="$LIBS $MAGICK_LDFLAGS"
+  LIBS="$LIBS $MAGICK_LIBS"
+  AC_LANG_PUSH(C++)
+    AC_CHECK_HEADER([Magick++.h], [
+      AC_MSG_CHECKING([for Magick::ColorRGB in Magick++.h])
+      AC_TRY_LINK([#include <Magick++.h>], [Magick::ColorRGB c;], [
+        AC_MSG_RESULT(yes)
+        warn_magick=
+      ], [
+        AC_MSG_RESULT(no)
+      ])
+    ])
+  AC_LANG_POP(C++)
+  CPPFLAGS="$save_CPPFLAGS"
+  LDFLAGS="$save_LDFLAGS"
+  LIBS="$save_LIBS"
+])
+
+if test -z "$warn_magick"; then
+  AC_DEFINE(HAVE_MAGICK, 1, [Define if GraphicsMagick++ is available.])
 else
-  AC_DEFINE(HAVE_MAGICK, 1, [Define if GraphicsMagick++ is available.])
+  MAGICK_CPPFLAGS=
+  MAGICK_LDFLAGS=
+  MAGICK_LIBS=
 fi
+AC_SUBST(MAGICK_CPPFLAGS)
+AC_SUBST(MAGICK_LDFLAGS)
+AC_SUBST(MAGICK_LIBS)
 
 # ---------------------------------------------------------------------
 
 ## libraries needed for graphics
 
 warn_freetype=""
 warn_ftgl=""
 
@@ -637,17 +682,16 @@ FTGLTextureFont font("");], [
       fi
     AC_LANG_POP(C++)
   fi
 fi
 
 # fontconfig library
 
 warn_fontconfig=""
-PKG_PROG_PKG_CONFIG
 if test -z "$warn_freetype"; then
   PKG_CHECK_MODULES(FONTCONFIG,[fontconfig],[
     have_fontconfig=yes
     OPENGL_LIBS="$FONTCONFIG_LIBS $OPENGL_LIBS"
     XTRA_CXXFLAGS="$XTRA_CXXFLAGS $FONTCONFIG_CFLAGS"
     AC_DEFINE(HAVE_FONTCONFIG, 1, [Define to 1 if fontconfig is present])],[
     have_fontconfig=no
     warn_fontconfig="Fontconfig not found.  Native text rendering will use hard-coded font instead."])
@@ -2019,16 +2063,20 @@ Octave is now configured for $canonical_
   FFTW3 libraries:      $FFTW3_LIBS
   FFTW3F CPPFLAGS:      $FFTW3F_CPPFLAGS
   FFTW3F LDFLAGS:       $FFTW3F_LDFLAGS
   FFTW3F libraries:     $FFTW3F_LIBS
   FLTK backend libs:    $GRAPHICS_LIBS
   GLPK CPPFLAGS:        $GLPK_CPPFLAGS
   GLPK LDFLAGS:         $GLPK_LDFLAGS
   GLPK libraries:       $GLPK_LIBS
+  GraphicsMagick++
+    CPPFLAGS:           $MAGICK_CPPFLAGS
+    LDFLAGS:            $MAGICK_LDFLAGS
+    libraries:          $MAGICK_LIBS
   HDF5 CPPFLAGS:        $HDF5_CPPFLAGS
   HDF5 LDFLAGS:         $HDF5_LDFLAGS
   HDF5 libraries:       $HDF5_LIBS
   OPENGL libraries:     $OPENGL_LIBS
   PTHREAD flags:        $PTHREAD_CFLAGS
   PTHREAD libraries:    $PTHREAD_LIBS
   QHULL CPPFLAGS:       $QHULL_CPPFLAGS
   QHULL LDFLAGS:        $QHULL_LDFLAGS
@@ -2041,17 +2089,16 @@ Octave is now configured for $canonical_
   X11 include flags:    $X11_INCFLAGS
   X11 libraries:        $X11_LIBS
   Z CPPFLAGS:           $Z_CPPFLAGS
   Z LDFLAGS:            $Z_LDFLAGS
   Z libraries:          $Z_LIBS
 
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT
-  Magick config:        $MAGICK_CONFIG
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:   $USE_READLINE
   64-bit array dims and indexing:     $USE_64_BIT_IDX_T
 ])
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2009-08-25  David Grundberg  <individ@acc.umu.se>
+
+	* DLD-FUNCTIONS/__magick_read__.cc [HAVE_MAGICK]: Include
+	Magick++.h instead of GraphicsMagick/Magic++.h.
+	* Makefile.in: Replace MAGICK_LIBS with MAGICK_LDFLAGS and
+	MAGICK_LIBS. Replace MAGICK_INCFLAGS with MAGICK_CPPFLAGS.
+	* oct-conf.h.in: Ditto.
+	* toplev.cc (octave_config_info): Ditto.
+
 2009-08-26  John W. Eaton  <jwe@octave.org>
 
 	* oct-conf.h.in: New defines for UMFPACK_CPPFLAGS and UMFPACK_LDFLAGS.
 	* toplev.cc (octave_config_info): Include them in the list.
 
 2009-08-26  John W. Eaton  <jwe@octave.org>
 
 	* oct-conf.h.in: New defines for QRUPDATE_CPPFLAGS and QRUPDATE_LDFLAGS.
diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -28,17 +28,17 @@ along with Octave; see the file COPYING.
 #include <cmath>
 
 #include "defun-dld.h"
 #include "error.h"
 #include "ov-struct.h"
 
 #ifdef HAVE_MAGICK
 
-#include <GraphicsMagick/Magick++.h>
+#include <Magick++.h>
 
 unsigned int
 scale_quantum_to_depth (const Magick::Quantum& quantum, unsigned int depth)
 {
   return (static_cast<unsigned int> (static_cast<double> (quantum)
                                      / MaxRGB * ((1 << depth) - 1)));
 }
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -309,17 +309,17 @@ else
     $(FFTW_LDFLAGS) $(FFTW_LIBS)
     $(QHULL_LDFLAGS) $(QHULL_LIBS) \
     $(ARPACK_LDFLAGS) $(ARPACK_LIBS) \
     $(QRUPDATE_LDFLAGS) $(QRUPDATE_LIBS) \
     $(SPARSE_LDFLAGS) $(SPARSE_LIBS) \
     $(REGEX_LDFLAGS) $(REGEX_LIBS) \
     $(CURL_LDFLAGS) $(CURL_LIBS) \
     $(GLPK_LDFLAGS) $(GLPK_LIBS) \
-    $(MAGICK_LIBS) \
+    $(MAGICK_LDFLAGS) $(MAGICK_LIBS) \
     $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
     $(FT2_LDFLAGS) $(FT2_LIBS) \
     $(HDF5_LDFLAGS) $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
     $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
     $(READLINE_LIBS) $(TERM_LIBS) \
     $(LIBGLOB) \
     $(BLAS_LIBS) \
     $(FLIBS) \
@@ -680,18 +680,18 @@ oct-gperf.h: octave.gperf
 	$(GPERF) -t -C -D -G -L C++ -Z octave_kw_hash $< > $@-t1
 	$(SED) 's,lookup\[,gperf_lookup[,' < $@-t1 > $@-t2
 	mv $@-t2 $@
 	rm -f $@-t1
 
 display.d display.df display.o pic/display.o: CPPFLAGS += $(X11_FLAGS)
 
 __magick_read__.d __magick_read__.df __magick_read__.o pic/__magick_read__.o: \
-  CPPFLAGS += $(MAGICK_INCFLAGS)
-__magick_read__.oct: OCT_LINK_DEPS += $(MAGICK_LIBS)
+  CPPFLAGS += $(MAGICK_CPPFLAGS)
+__magick_read__.oct: OCT_LINK_DEPS += $(MAGICK_LDFLAGS) $(MAGICK_LIBS)
 
 convhull.d convhull.df convhull.o pic/convhull.o: CPPFLAGS += $(QHULL_CPPFLAGS)
 convhulln.oct: OCT_LINK_DEPS += $(QHULL_LDFLAGS) $(QHULL_LIBS)
 
 __delaunayn__.d __delaunayn__.df __delaunayn__.o pic/__delaunayn__.o: \
   CPPFLAGS += $(QHULL_CPPFLAGS)
 __delaunayn__.oct: OCT_LINK_DEPS += $(QHULL_LDFLAGS) $(QHULL_LIBS)
 
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -360,18 +360,22 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_LIBS
 #define OCTAVE_CONF_LIBS %OCTAVE_CONF_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_LN_S
 #define OCTAVE_CONF_LN_S %OCTAVE_CONF_LN_S%
 #endif
 
-#ifndef OCTAVE_CONF_MAGICK_INCFLAGS
-#define OCTAVE_CONF_MAGICK_INCFLAGS %OCTAVE_CONF_MAGICK_INCFLAGS%
+#ifndef OCTAVE_CONF_MAGICK_CPPFLAGS
+#define OCTAVE_CONF_MAGICK_CPPFLAGS %OCTAVE_CONF_MAGICK_CPPFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_MAGICK_LDFLAGS
+#define OCTAVE_CONF_MAGICK_LDFLAGS %OCTAVE_CONF_MAGICK_LDFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_MAGICK_LIBS
 #define OCTAVE_CONF_MAGICK_LIBS %OCTAVE_CONF_MAGICK_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS
 #define OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS %OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS%
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1270,17 +1270,18 @@ specified option.\n\
       { false, "LFLAGS", OCTAVE_CONF_LFLAGS },
       { false, "LIBCRUFT", OCTAVE_CONF_LIBCRUFT },
       { false, "LIBEXT", OCTAVE_CONF_LIBEXT },
       { false, "LIBFLAGS", OCTAVE_CONF_LIBFLAGS },
       { false, "LIBOCTAVE", OCTAVE_CONF_LIBOCTAVE },
       { false, "LIBOCTINTERP", OCTAVE_CONF_LIBOCTINTERP },
       { false, "LIBS", OCTAVE_CONF_LIBS },
       { false, "LN_S", OCTAVE_CONF_LN_S },
-      { false, "MAGICK_INCFLAGS", OCTAVE_CONF_MAGICK_INCFLAGS },
+      { false, "MAGICK_CPPFLAGS", OCTAVE_CONF_MAGICK_CPPFLAGS },
+      { false, "MAGICK_LDFLAGS", OCTAVE_CONF_MAGICK_LDFLAGS },
       { false, "MAGICK_LIBS", OCTAVE_CONF_MAGICK_LIBS },
       { false, "MKOCTFILE_DL_LDFLAGS", OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS },
       { false, "OPENGL_LIBS", OCTAVE_CONF_OPENGL_LIBS },
       { false, "PTHREAD_CFLAGS", OCTAVE_CONF_PTHREAD_CFLAGS },
       { false, "PTHREAD_LIBS", OCTAVE_CONF_PTHREAD_LIBS },
       { false, "QHULL_CPPFLAGS", OCTAVE_CONF_QHULL_CPPFLAGS },
       { false, "QHULL_LDFLAGS", OCTAVE_CONF_QHULL_LDFLAGS },
       { false, "QHULL_LIBS", OCTAVE_CONF_QHULL_LIBS },
