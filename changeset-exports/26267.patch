# HG changeset patch
# User Rik <rik@octave.org>
# Date 1545262411 28800
#      Wed Dec 19 15:33:31 2018 -0800
# Node ID 298c30063b2fc60c26341dbc60071001ca7f4772
# Parent  895f2f609a967d01272490f19536df03fea4ccb5
hgtransform.m: Add support for text objects (bug #50466).

* hgtransform.m (xform_data): Add "text" to the list of supported types.
Check type of graphics object, for text objects alter the "position" property.
For all other objects, alter "xdata", "ydata", "zdata" properties.
* hgtransform.m (children_cb): Add case for "text" objects.

diff --git a/scripts/plot/util/hgtransform.m b/scripts/plot/util/hgtransform.m
--- a/scripts/plot/util/hgtransform.m
+++ b/scripts/plot/util/hgtransform.m
@@ -76,75 +76,87 @@ endfunction
 
 function xform_data (hgt, hlist)
 
   M = get (hgt, "matrix");
   orig_data = get (hgt, "__orig_data__");
 
   for hk = hlist.'
 
-    ## FIXME: Add support for light, rectangle, and text objects
+    ## FIXME: Add support for light and rectangle objects
     type = get (hk, "type");
-    if (! any (strcmp (type, {"line", "patch", "surface", "image"})))
+    if (! any (strcmp (type, {"line", "patch", "surface", "image", "text"})))
       continue;  # Unsupported type.  Silently skip.
     endif
 
     idx = find (hk == [orig_data.h]);
     if (! idx)
       warning ("hgtransform: original data not found for %f", hk);
       continue;
     endif
 
-    ## FIXME: Rotations for "image" objects are not handled correctly.
-
-    xd = double (orig_data(idx).xdata);
-    xsz = size (xd);
-
-    yd = double (orig_data(idx).ydata);
-    ysz = size (yd);
+    if (strcmp (type, "text"))
+      pos = orig_data(idx).position;
+      xd = pos(1);
+      yd = pos(2);
+      zd = pos(3);
+    else
+      ## FIXME: Rotations for "image" objects are not handled correctly.
+      xd = double (orig_data(idx).xdata);
+      xsz = size (xd);
 
-    if (strcmp (type, "image"))
-      zd = [];
-    else
-      zd = double (orig_data(idx).zdata);
-      zsz = size (zd);
-    endif
-    z_empty = isempty (zd);
+      yd = double (orig_data(idx).ydata);
+      ysz = size (yd);
+
+      if (strcmp (type, "image"))
+        zd = [];
+      else
+        zd = double (orig_data(idx).zdata);
+        zsz = size (zd);
+      endif
+      z_empty = isempty (zd);
 
-    if (isempty (zd))
-      ## Common case of 2-D data.
-      zd = zeros (1, numel (xd));
-    elseif (isvector (xd) && isvector (yd))
-      ## Handle surface data which may be a vector/matrix combination
-      if (isvector (zd))
-        ## Do nothing.  All data will be forced to row vectors below
-      elseif (length (xd) == rows (zd) && length (yd) == columns (zd))
-        [xd, yd] = meshgrid (xd, yd);
-        xsz = size (xd);
-        ysz = size (yd);
+      if (z_empty)
+        ## Common case of 2-D data.
+        zd = zeros (numel (xd), 1);
+      elseif (isvector (xd) && isvector (yd))
+        ## Handle surface data which may be a vector/matrix combination
+        if (isvector (zd))
+          ## Do nothing.  All data will be forced to row vectors below
+        elseif (length (xd) == rows (zd) && length (yd) == columns (zd))
+          [xd, yd] = meshgrid (xd, yd);
+          xsz = size (xd);
+          ysz = size (yd);
+        endif
       endif
-    endif
 
-    ## Force row vectors for later concatenation
-    xd = xd(:).';
-    yd = yd(:).';
-    zd = zd(:).';
+      ## Force row vectors for later concatenation
+      xd = xd(:).';
+      yd = yd(:).';
+      zd = zd(:).';
+
+    endif
 
     ## FIXME: To minimize memory, better to construct data matrix in-place?
     data = [xd; yd; zd; ones(1, columns(xd))];
     tol = 2 * max (eps (data(1:3,:)));
     data = M * data;
     ## Need to trim or rotations which produce values near 0 will be strange.
     data(abs (data) < tol) = 0;
 
-    set (hk, "xdata", reshape (data(1,:), xsz));
-    set (hk, "ydata", reshape (data(2,:), ysz));
-    if (! z_empty)
-      set (hk, "zdata", reshape (data(3,:), zsz));
+    if (strcmp (type, "text"))
+      set (hk, "position", [data(1), data(2), data(3)]);
+    else
+      set (hk, "xdata", reshape (data(1,:), xsz));
+      set (hk, "ydata", reshape (data(2,:), ysz));
+      if (! z_empty)
+        set (hk, "zdata", reshape (data(3,:), zsz));
+      endif
     endif
+
   endfor
 
 endfunction
 
 function children_cb (hgt, ~)
 
   hkids = get (hgt, "children");
   orig_data = get (hgt, "__orig_data__");
@@ -159,20 +171,23 @@ function children_cb (hgt, ~)
         ## child was re-parented to something else, restore data
         switch (get (hk, "type"))
 
           case {"line", "patch", "surface"}
             set (hk, "xdata", orig_data(idx).xdata);
             set (hk, "ydata", orig_data(idx).ydata);
             set (hk, "zdata", orig_data(idx).zdata);
 
-          case {"image"}
+          case "image"
             set (hk, "xdata", orig_data(idx).xdata);
             set (hk, "ydata", orig_data(idx).ydata);
 
+          case "text"
+            set (hk, "position", orig_data(idx).position);
+
           otherwise
             ## Unsupported type.  No data was saved.
 
         endswitch
       endif
     endfor
     orig_data = orig_data(hlist != hdel);
     hlist = hlist(hlist != hdel);
@@ -188,24 +203,27 @@ function children_cb (hgt, ~)
 
     switch (type)
 
       case {"line", "patch", "surface"}
         orig_data(end).xdata = get (hk, "xdata");
         orig_data(end).ydata = get (hk, "ydata");
         orig_data(end).zdata = get (hk, "zdata");
 
-      case {"image"}
+      case "image"
         orig_data(end).xdata = get (hk, "xdata");
         orig_data(end).ydata = get (hk, "ydata");
 
-      case {"light",  "text"}
+      case "text"
+        orig_data(end).position = get (hk, "position");
+
+      case "light"
         warning ("hgtransform: %s objects are not yet supported", type);
 
-      case {"hggroup"}
+      case "hggroup"
         try
           get (hk, "curvature");
           is_rectangle = true;
         catch
           is_rectangle = false;
         end_try_catch
         if (is_rectangle)
           warning ("hgtransform: rectangle objects are not yet supported");
