# HG changeset patch
# User jwe
# Date 1167241431 0
#      Wed Dec 27 17:43:51 2006 +0000
# Node ID c1b66b74937d148b2b59efd053c7d09c5944173d
# Parent  95084cd8723c73be3403271a8b75c181542b1a04
[project @ 2006-12-27 17:43:50 by jwe]

diff --git a/scripts/general/interp2.m b/scripts/general/interp2.m
--- a/scripts/general/interp2.m
+++ b/scripts/general/interp2.m
@@ -48,26 +48,26 @@
 ## of @code{@var{n} = 1} is assumed.
 ## @end table
 ##
 ## The variable @var{method} defines the method to use for the
 ## interpolation. It can take one of the values
 ##
 ## @table @asis
 ## @item 'nearest'
-## Return the nearest neighbour.
+## Return the nearest neighbor.
 ## @item 'linear'
-## Linear interpolation from nearest neighbours
+## Linear interpolation from nearest neighbors.
 ## @item 'pchip'
-## Piece-wise cubic hermite interpolating polynomial
+## Piece-wise cubic hermite interpolating polynomial (not implemented yet).
 ## @item 'cubic'
-## Cubic interpolation from four nearest neighbours
+## Cubic interpolation from four nearest neighbors.
 ## @item 'spline'
 ## Cubic spline interpolation--smooth first and second derivatives
-## throughout the curve (Not implemented yet).
+## throughout the curve (not implemented yet).
 ## @end table
 ##
 ## If a scalar value @var{extrapval} is defined as the final value, then
 ## values outside the mesh as set to this value. Note that in this case 
 ## @var{method} must be defined as well. If @var{extrapval} is not
 ## defined then NaN is assumed. 
 ##
 ## @seealso{interp1}
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2006-12-27  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (%.df : %.cc): Insert a "do not edit" notice in the
+	.df files.
+
+	* mex.cc (mxArray_matlab::get_class_name,
+	mxArray_octave_value::get_class_id): Use "function_handle", not
+	"function handle".
+
 2006-12-14  John W. Eaton  <jwe@octave.org>
 
 	* pt-decl.cc (tree_decl_elt::eval): New function.
 	* pt-decl.h (tree_decl_elt::eval): Provide decl.
 	(tree_decl_elt::is_defined, tree_decl_elt::lvalue_ok, 
 	tree_decl_elt::mark_as_formal_parameter, tree_decl_elt::rvalue,
 	tree_decl_elt::lvalue): New functions.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -21,17 +21,18 @@ INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 PT_FLAGS = -fexternal-templates -fno-implicit-templates
 CXXFLAGS_NO_PT_FLAGS = $(filter-out $(PT_FLAGS), $(ALL_CXXFLAGS))
 
 %.df : %.cc
 	@echo making $@ from $<
-	@(egrep '^(///*|/\*) *PKG_ADD:' $< ; \
+	@(echo "// DO NOT EDIT!  Generated automatically by mkdefs." ; \
+	  egrep '^(///*|/\*) *PKG_ADD:' $< ; \
 	  $(CXXCPP) $(CPPFLAGS) $(CXXFLAGS_NO_PT_FLAGS) -DMAKE_BUILTINS $< \
 	    | $(srcdir)/mkdefs) > $@-t
 	@$(simple-move-if-change-rule)
 
 # How to make a .oct file from a .o file:
 
 ifeq ($(ENABLE_DYNAMIC_LINKING), true)
   ifdef CXXPICFLAG
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -465,17 +465,17 @@ Return 1 for characters that are lower c
   DEFUN_MAPPER (isna, 0, octave_is_NA, octave_is_NA, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isna (@var{x})\n\
 Return 1 for elements of @var{x} that are NA (missing) values and zero\n\
 otherwise.  For example,\n\
 \n\
 @example\n\
 @group\n\
-is_NA ([13, Inf, NA, NaN])\n\
+isna ([13, Inf, NA, NaN])\n\
      @result{} [ 0, 0, 1, 0 ]\n\
 @end group\n\
 @end example\n\
 @end deftypefn");
 
   DEFUN_MAPPER (isnan, 0, xisnan, xisnan, 0, 0, 0, 0.0, 0.0, 0, 0,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isnan (@var{x})\n\
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -408,17 +408,17 @@ public:
     else if (cn == "int32")
       id = mxINT32_CLASS;
     else if (cn == "uint32")
       id = mxUINT32_CLASS;
     else if (cn == "int64")
       id = mxINT64_CLASS;
     else if (cn == "uint64")
       id = mxUINT64_CLASS;
-    else if (cn == "function handle")
+    else if (cn == "function_handle")
       id = mxFUNCTION_CLASS;
 
     return id;
   }
 
   const char *get_class_name (void) const
   {
     if (! class_name)
@@ -843,17 +843,17 @@ public:
       case mxINT8_CLASS: return "int8";
       case mxUINT8_CLASS: return "uint8";
       case mxINT16_CLASS: return "int16";
       case mxUINT16_CLASS: return "uint16";
       case mxINT32_CLASS: return "int32";
       case mxUINT32_CLASS: return "uint32";
       case mxINT64_CLASS: return "int64";
       case mxUINT64_CLASS: return "uint64";
-      case mxFUNCTION_CLASS: return "function handle";
+      case mxFUNCTION_CLASS: return "function_handle";
       default: return "unknown";
       }
   }
 
   void set_class_name (const char *name_arg)
   {
     mxFree (class_name);
     class_name = static_cast<char *> (malloc (strlen (name_arg) + 1));
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -1,9 +1,9 @@
-#!/bin/sh
+#! /bin/sh
 
 if test $# -ne 1; then
   echo "usage: mkbuiltins f1" 1>&2
   exit 1
 fi
 
 SED=${SED:-'sed'}
 
diff --git a/src/mkdefs b/src/mkdefs
--- a/src/mkdefs
+++ b/src/mkdefs
@@ -1,9 +1,9 @@
-#!/bin/sh
+#! /bin/sh
 
 SED=${SED:-'sed'}
 
 $SED -n -e '/^ *BEGIN_INSTALL_BUILTIN/{
   : loop
   s/BEGIN_INSTALL_BUILTIN//
   s/^#[ \t][ \t]*[0-9][0-9]*.*$//
   /END_INSTALL_BUILTIN/b done
diff --git a/src/mkdocs b/src/mkdocs
--- a/src/mkdocs
+++ b/src/mkdocs
@@ -1,9 +1,9 @@
-#!/bin/sh
+#! /bin/sh
 
 SED=${SED:-'sed'}
 
 $SED -n -e '/^BEGIN_DOC_STRING/{
   : loop
   N
   /END_DOC_STRING/b done
   b loop
diff --git a/src/mkops b/src/mkops
--- a/src/mkops
+++ b/src/mkops
@@ -1,9 +1,9 @@
-#!/bin/sh
+#! /bin/sh
 
 SED=${SED:-'sed'}
 
 cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
