# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1376497995 14400
#      Wed Aug 14 12:33:15 2013 -0400
# Node ID e993fa124b4602395be1aaaf4966f28928a43e38
# Parent  8be8a65d3ca897e9efbb18834b6e3b4f348c01de
Deprecate \ as continuation marker outside of double-quoted character strings.

* lex.ll: Issue deprecated-syntax warning about \ used as a
continuation marker outside of double-quoted character strings.
* NEWS: Note that \ is deprecated as a continuation marker outside of
double-quoted character strings.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -83,16 +83,28 @@ Summary of important user-visible change
     are inside character strings.  A backslash followed by a newline
     character is no longer recognized as a line continuation inside
     single-quoted character strings.  Inside double-quoted character
     strings, a backslash followed by a newline character is still
     recognized as a line continuation but the backslash character must
     be followed immediately by the newline character.  No whitespace or
     end-of-linecomment may appear between them.
 
+ ** Backslash as a continuation marker outside of double-quoted strings
+    is now deprecated.
+
+    Using '\' as a continuation marker outside fo double quoted strings
+    is now deprecated and will be removed from a future version of
+    Octave.  When that is done, the behavior of
+
+      (a \
+       b)
+
+    will be consistent with other binary operators.
+
  ** Warning IDs renamed:
 
     Octave:array-as-scalar => Octave:array-to-scalar
     Octave:array-as-vector => Octave:array-to-vector
 
  ** The m-files in the image directory have been overhauled.
 
     The principal benefit is that Octave will now no longer automatically
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -955,25 +955,43 @@ ANY_INCLUDING_NL (.|{NL})
 
 {S}+ {
     curr_lexer->current_input_column += yyleng;
 
     curr_lexer->mark_previous_token_trailing_space ();
   }
 
 %{
-// Continuation lines.  Allow comments after continuations.
+// Continuation lines.  Allow arbitrary text after continuations.
+%}
+
+\.\.\..*{NL} {
+    curr_lexer->lexer_debug ("\\.\\.\\..*{NL}");
+
+    curr_lexer->handle_continuation ();
+  }
+
+%{
+// Deprecated C preprocessor style continuation markers.
 %}
 
 \\{S}*{NL} |
-\\{S}*{CCHAR}.*{NL} |
-\.\.\..*{NL} {
-    curr_lexer->lexer_debug ("\\.\\.\\..*{NL}|\\\\{S}*{NL}|\\\\{S}*{CCHAR}.*{NL}");
-
-    curr_lexer->handle_continuation ();
+\\{S}*{CCHAR}.*{NL} {
+    curr_lexer->lexer_debug ("\\\\{S}*{NL}|\\\\{S}*{CCHAR}.*{NL}");
+
+    static const char *msg = "using continuation marker \\ outside of double quoted strings is deprecated and will be removed in a future version of Octave";
+
+    std::string nm = curr_lexer->fcn_file_full_name;
+
+    if (nm.empty ())
+      warning_with_id ("Octave:deprecated-syntax", "%s", msg);
+    else
+      warning_with_id ("Octave:deprecated-syntax",
+                       "%s; near line %d of file '%s'", msg,
+                       curr_lexer->input_line_number, nm.c_str ());
   }
 
 %{
 // End of file.
 %}
 
 <<EOF>> {
    return curr_lexer->handle_end_of_input ();
