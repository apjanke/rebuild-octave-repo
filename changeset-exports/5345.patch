# HG changeset patch
# User jwe
# Date 1115703073 0
#      Tue May 10 05:31:13 2005 +0000
# Node ID 2781568bf95109ae93695ede19c39e5b2f6590d5
# Parent  b427cca320b812596321fe6d34b4ca064e7ab018
[project @ 2005-05-10 05:31:12 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2005-05-10  John W. Eaton  <jwe@octave.org>
+
+	* lex.l (<MATRIX_START>{SNLCMT}*\]{S}*): If whitespace was gobbled,
+	unput SPC before returning the token.
+	(<MATRIX_START>{SNLCMT}*\}{S}*): Likewise.
+
 2005-05-09  John W. Eaton  <jwe@octave.org>
 
 	* parse.y (except_command): Make catch clause optional in try
 	statements.
 	* pt-except.cc (tree_try_catch_command::eval):
 	Always buffer error messages.
 
 2005-05-06  John W. Eaton  <jwe@octave.org>
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -355,26 +355,32 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 %}
 
 <MATRIX_START>{SNLCMT}*\]{S}* {
     scan_for_comments (yytext);
     fixup_column_count (yytext);
     int c = yytext[yyleng-1];
     int cont_is_spc = eat_continuation ();
     bool spc_gobbled = (cont_is_spc || c == ' ' || c == '\t');
-    COUNT_TOK_AND_RETURN (handle_close_bracket (spc_gobbled, ']'));
+    int tok_to_return = handle_close_bracket (spc_gobbled, ']');
+    if (spc_gobbled)
+      yyunput (' ', yytext);
+    COUNT_TOK_AND_RETURN (tok_to_return);
   }
 
 <MATRIX_START>{SNLCMT}*\}{S}* {
     scan_for_comments (yytext);
     fixup_column_count (yytext);
     int c = yytext[yyleng-1];
     int cont_is_spc = eat_continuation ();
     bool spc_gobbled = (cont_is_spc || c == ' ' || c == '\t');
-    COUNT_TOK_AND_RETURN (handle_close_bracket (spc_gobbled, '}'));
+    int tok_to_return = handle_close_bracket (spc_gobbled, '}');
+    if (spc_gobbled)
+      yyunput (' ', yytext);
+    COUNT_TOK_AND_RETURN (tok_to_return);
   }
 
 %{
 // Commas are element separators in matrix constants.  If we don't
 // check for continuations here we can end up inserting too many
 // commas.
 %}
 
@@ -2284,16 +2290,18 @@ handle_identifier (void)
     }
 
   // See if we have a plot keyword (title, using, with, or clear).
 
   int c1 = yyinput ();
 
   bool next_tok_is_paren = (c1 == '(');
 
+  bool next_tok_is_struct_ref = (c1 == '.');
+
   bool next_tok_is_eq = false;
   if (c1 == '=')
     {
       int c2 = yyinput ();
       yyunput (c2, yytext);
 
       if (c2 != '=')
 	next_tok_is_eq = true;
