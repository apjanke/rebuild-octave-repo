# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1292651512 28800
#      Fri Dec 17 21:51:52 2010 -0800
# Node ID 2750b04a1b5c9bdf27cb23b9fe50dbe9dc022984
# Parent  fba7b5538b181dbc03c30ec94a382a6a12fa4a08
Update script to generate undocumented function list.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,14 @@
+2010-12-17  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/doccheck/mk_undocumented_list: Update script to
+	automatically remove functions from the "test/" and "doc/interpreter"
+	directories.
+
 2010-12-17  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Add undocumented_list target to create list
 	of undocumented functions.
 
 2010-12-17  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/plot.txi (Two-Dimensional Plots): Document comet3.
diff --git a/doc/interpreter/doccheck/mk_undocumented_list b/doc/interpreter/doccheck/mk_undocumented_list
--- a/doc/interpreter/doccheck/mk_undocumented_list
+++ b/doc/interpreter/doccheck/mk_undocumented_list
@@ -19,32 +19,35 @@ while (($_ = $octave_output[$idx++]) !~ 
 {
    push(@all_functions, $1) if (/] = (\w+)$/);
 }
 while ($_ = $octave_output[$idx++])
 {
    push(@where, $1) if (/] = (\S*)$/);
 }
 
-# Remove deprecated functions from the list of features requiring a DOCSTRING  
+# Remove functions based on directory location
+# deprecated directory, doc/interpreter directory, test/ directory
 FUNC: foreach $idx (0 .. $#where)
 {
    next FUNC if ($where[$idx] =~ /deprecated/i);
+   next FUNC if ($where[$idx] =~ /interpreter/i);
+   next FUNC if ($where[$idx] =~ m#test/#i);
 
    push (@functions, $all_functions[$idx]); 
 }
 
 # Remove internal functions from the list of features requiring a DOCSTRING  
 @functions = grep (! /^__/, @functions);
 
 # Load list of function exceptions not requiring a DOCSTRING
 # Exception data is stored at the bottom of this script
 map { chomp, $exceptions{$_}=1; } <DATA>;
 
-# Remove exception data from the list of features requiring a DOCSTRING
+# Remove exception data from the list
 @functions = grep (! $exceptions{$_}, @functions);
 
 ################################################################################
 # Get a list of all documented functions
 foreach $txi_file (glob("*.txi"))
 {
    open(TXI_FILE, $txi_file) or die "Unable to open $txi_file for reading\n";
    while (<TXI_FILE>)
@@ -69,82 +72,49 @@ exit(1);
 ################################################################################
 __DATA__
 angle
 bessel
 besselh
 besseli
 besselk
 bessely
-build_bc_overloads_expected
 chdir
 comma
 debug
 exit
 F_DUPFD
 F_GETFD
 F_GETFL
 fntests
 F_SETFD
 F_SETFL
 gammaln
-geometryimages
 i
 inf
-interpimages
 inverse
 j
 J
 lower
 nan
 O_APPEND
 O_ASYNC
 O_CREAT
 O_EXCL
 O_NONBLOCK
 O_RDONLY
 O_RDWR
 O_SYNC
 O_TRUNC
 O_WRONLY
 paren
-plotimages
 SEEK_CUR
 SEEK_END
 semicolon
 setenv
-sparseimages
-tbcover
-test_args
-test_bc_overloads
-test_classes
-test_contin
-test_diag_perm
-test_error
-test_for
-test_func
-test_global
-test_if
-test_io
-test_null_assign
-test_parser
-test_prefer
-test_range
-test_recursion
-test_return
-test_slice
-test_sparse
-test_string
-test_struct
-test_switch
-test_system
-test_transpose
-test_try
-test_unwind
-test_while
 toc
 triu
 unimplemented
 upper
 ylabel
 ylim
 zlabel
 zlim
