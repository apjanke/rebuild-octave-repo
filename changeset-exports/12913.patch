# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1312394274 14400
#      Wed Aug 03 13:57:54 2011 -0400
# Node ID 34e5434563df2f1fc0e370996ac55bf33c494615
# Parent  d6151d774283d5ea47ee48fc4bfab8d609ef4764
# Parent  e116dd862879393078bf002ac6fb14a8f399f175
periodic merge of stable to default

diff --git a/liboctave/cmd-edit.cc b/liboctave/cmd-edit.cc
--- a/liboctave/cmd-edit.cc
+++ b/liboctave/cmd-edit.cc
@@ -760,17 +760,17 @@ private:
 
   default_command_editor& operator = (const default_command_editor&);
 };
 
 std::string
 default_command_editor::do_readline (const std::string& prompt, bool& eof)
 {
   gnulib::fputs (prompt.c_str (), output_stream);
-  fflush (output_stream);
+  gnulib::fflush (output_stream);
 
   return octave_fgetl (input_stream, eof);
 }
 
 void
 default_command_editor::do_set_input_stream (FILE *f)
 {
   input_stream = f;
diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -207,17 +207,17 @@ extern "C" {
 #define KPSE_DEBUG_PATHS 3              /* search path initializations */
 #define KPSE_DEBUG_EXPAND 4             /* path element expansion */
 #define KPSE_DEBUG_SEARCH 5             /* searches */
 #define KPSE_DEBUG_VARS 6               /* variable values */
 #define KPSE_LAST_DEBUG KPSE_DEBUG_VARS
 
 /* A printf for the debugging.  */
 #define DEBUGF_START() do { gnulib::fputs ("kdebug:", stderr)
-#define DEBUGF_END()        fflush (stderr); } while (0)
+#define DEBUGF_END()        gnulib::fflush (stderr); } while (0)
 
 #define DEBUGF(str)                                                     \
   DEBUGF_START (); gnulib::fputs (str, stderr); DEBUGF_END ()
 #define DEBUGF1(str, e1)                                                \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1); DEBUGF_END ()
 #define DEBUGF2(str, e1, e2)                                            \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2); DEBUGF_END ()
 #define DEBUGF3(str, e1, e2, e3)                                        \
@@ -427,17 +427,17 @@ hash_lookup (hash_table_type table, cons
           int len = ret.length ();
           for (int i = 0; i < len; i++)
             {
               gnulib::putc (' ', stderr);
               gnulib::fputs (ret[i].c_str (), stderr);
             }
           gnulib::putc ('\n', stderr);
         }
-      fflush (stderr);
+      gnulib::fflush (stderr);
     }
 #endif
 
   return ret;
 }
 
 /* A way to step through a path, extracting one directory name at a
    time.  */
@@ -2423,17 +2423,17 @@ kpse_element_dirs (const std::string& el
       DEBUGF1 ("path element %s =>", elt.c_str ());
       if (ret)
         {
           str_llist_elt_type *e;
           for (e = *ret; e; e = STR_LLIST_NEXT (*e))
             gnulib::fprintf (stderr, " %s", (STR_LLIST (*e)).c_str ());
         }
       gnulib::putc ('\n', stderr);
-      fflush (stderr);
+      gnulib::fflush (stderr);
     }
 #endif /* KPSE_DEBUG */
 
   return ret;
 }
 
 #ifndef WIN32
 void
diff --git a/liboctave/sparse-util.cc b/liboctave/sparse-util.cc
--- a/liboctave/sparse-util.cc
+++ b/liboctave/sparse-util.cc
@@ -47,17 +47,17 @@ SparseCholError (int status, const char 
 }
 
 int
 SparseCholPrint (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
   int ret = gnulib::vfprintf (stderr, fmt, args);
-  fflush (stderr);
+  gnulib::fflush (stderr);
   va_end (args);
   return ret;
 }
 
 
 bool
 sparse_indices_ok (octave_idx_type *r, octave_idx_type *c,
                    octave_idx_type nrows, octave_idx_type ncols,
diff --git a/src/c-file-ptr-stream.cc b/src/c-file-ptr-stream.cc
--- a/src/c-file-ptr-stream.cc
+++ b/src/c-file-ptr-stream.cc
@@ -63,17 +63,17 @@ c_file_ptr_buf::overflow (int_type c)
 #endif
 }
 
 c_file_ptr_buf::int_type
 c_file_ptr_buf::underflow_common (bool bump)
 {
   if (f)
     {
-      int_type c = fgetc (f);
+      int_type c = gnulib::fgetc (f);
 
       if (! bump
 #if defined (CXX_ISO_COMPLIANT_LIBRARY)
           && c != traits_type::eof ())
 #else
           && c != EOF)
 #endif
         ungetc (c, f);
@@ -107,17 +107,17 @@ c_file_ptr_buf::xsputn (const char* s, s
   else
     return 0;
 }
 
 std::streamsize
 c_file_ptr_buf::xsgetn (char *s, std::streamsize n)
 {
   if (f)
-    return fread (s, 1, n, f);
+    return gnulib::fread (s, 1, n, f);
   else
     return 0;
 }
 
 static inline int
 seekdir_to_whence (std::ios::seekdir dir)
 {
   return ((dir == std::ios::beg) ? SEEK_SET :
@@ -168,17 +168,17 @@ c_file_ptr_buf::sync (void)
   flush ();
 
   return 0;
 }
 
 int
 c_file_ptr_buf::flush (void)
 {
-  return f ? fflush (f) : EOF;
+  return f ? gnulib::fflush (f) : EOF;
 }
 
 int
 c_file_ptr_buf::buf_close (void)
 {
   int retval = -1;
 
   flush ();
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -208,17 +208,17 @@ gnu_readline (const std::string& s, bool
     }
   else
     {
       if (! s.empty () && (interactive || forced_interactive))
         {
           FILE *stream = command_editor::get_output_stream ();
 
           gnulib::fputs (s.c_str (), stream);
-          fflush (stream);
+          gnulib::fflush (stream);
         }
 
       FILE *curr_stream = command_editor::get_input_stream ();
 
       if (reading_fcn_file || reading_script_file || reading_classdef_file)
         curr_stream = ff_instream;
 
       retval = octave_fgets (curr_stream);
