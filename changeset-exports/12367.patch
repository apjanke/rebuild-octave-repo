# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1296715200 18000
#      Thu Feb 03 01:40:00 2011 -0500
# Branch release-3-4-x
# Node ID 4f4eb7da82d56b0013e63e2006b60e6873122355
# Parent  3dd1b0b36f13df4b339ed5efeae169008fc366ec
mex.cc (mxArray_octave_value::dup): if value can't be converted to mxArray object, create a clone of the mxArray_octave_value container

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2011-02-03  John W. Eaton  <jwe@octave.org>
+
+	* ov-base.cc (octave_base_value::as_mxArray): Return 0 silently.
+	* mex.cc (mxArray_octave_value::dup): If value can't be
+	converted to mxArray object, then simply create a clone of the
+	mxArray_octave_value container.
+
 2010-02-02  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/eigs.cc, DLD-FUNCTIONS/qr.cc: Use testif to only run
 	some sparse tests when necessary libraries are installed.
 
 2011-02-03  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* graphics.cc (axes::properties::update_axes_layout):
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -322,17 +322,23 @@ static inline void *maybe_mark_foreign (
 class mxArray_octave_value : public mxArray_base
 {
 public:
 
   mxArray_octave_value (const octave_value& ov)
     : mxArray_base (), val (ov), mutate_flag (false),
       id (mxUNKNOWN_CLASS), class_name (0), ndims (-1), dims (0) { }
 
-  mxArray *dup (void) const { return val.as_mxArray (); }
+  mxArray *dup (void) const
+  {
+    mxArray *retval = val.as_mxArray ();
+
+    if (! retval)
+      retval = new mxArray_octave_value (*this);
+  }
 
   ~mxArray_octave_value (void)
   {
     mxFree (class_name);
     mxFree (dims);
   }
 
   bool is_octave_value (void) const { return true; }
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -1101,18 +1101,16 @@ octave_base_value::write (octave_stream&
   gripe_wrong_type_arg ("octave_base_value::write()", type_name ());
 
   return false;
 }
 
 mxArray *
 octave_base_value::as_mxArray (void) const
 {
-  gripe_wrong_type_arg ("octave_base_value::as_mxArray ()", type_name ());
-
   return 0;
 }
 
 octave_value
 octave_base_value::diag (octave_idx_type) const
 {
   gripe_wrong_type_arg ("octave_base_value::diag ()", type_name ());
 
