# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1481387810 18000
#      Sat Dec 10 11:36:50 2016 -0500
# Node ID a13e9853b678acf2a31d88d7181759b1001da5c5
# Parent  3c0e70e2f51cc30a3e0570b9de1bfc8a32f4f57e
# Parent  194481349d22f7e52bcc84512464ea51c1db2cee
maint: Periodic merge of stable to default.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -1740,28 +1740,28 @@ properties_block
                         YYABORT;
                       }
                   }
                 ;
 
 property_list
                 : class_property
                   { $$ = new tree_classdef_property_list ($1); }
-                | property_list opt_sep class_property
+                | property_list sep class_property
                   {
                     YYUSE ($2);
 
                     $1->append ($3);
                     $$ = $1;
                   }
                 ;
 
 class_property  : identifier
                   { $$ = new tree_classdef_property ($1); }
-                | identifier '=' decl_param_init expression ';'
+                | identifier '=' decl_param_init expression
                   {
                     YYUSE ($2);
 
                     lexer.looking_at_initializer_expression = false;
                     $$ = new tree_classdef_property ($1, $4);
                   }
                 ;
 
diff --git a/scripts/general/display.m b/scripts/general/display.m
--- a/scripts/general/display.m
+++ b/scripts/general/display.m
@@ -44,21 +44,17 @@
 
 function display (obj)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   ## Only reason we got here is that there was no overloaded display function.
-  ## If obj is truly an instance of a class then there is nothing to be done.
-  ## However, if obj is really a built-in like 'double' then we can display it.
-  if (isobject (obj))
-    error ('display: not defined for class "%s"', class (obj));
-  endif
+  ## Rely on built-in functions to display whatever obj is.
 
   varname = inputname (1);
   if (! isempty (varname))
     evalin ("caller", varname);
   else
     disp (obj);
   endif
 
@@ -71,8 +67,9 @@ endfunction
 
 %!test
 %! str = evalc ("display (1.1)");
 %! assert (str, " 1.1000\n"); 
 
 ## Test input validation
 %!error display ()
 %!error display (1,2)
+
diff --git a/test/classdef/classdef.tst b/test/classdef/classdef.tst
--- a/test/classdef/classdef.tst
+++ b/test/classdef/classdef.tst
@@ -66,8 +66,12 @@
 %! obj.frequency = 10;
 %! assert (obj.cosine (0.1), cos (2 * pi * 10 * 0.1), eps ());
 %! assert (obj.sine (0.1), sin (2 * pi * 10 * 0.1), eps ());
 
 %!test
 %! obj = foo_method_changes_property_size (3);
 %! obj = obj.move_element_to_end (2);
 %! assert (obj.element, [1 3 2]);
+
+%!error <parse error> plist_t1
+%!assert (class (plist_t2), "plist_t2")
+%!assert (class (plist_t3), "plist_t3")
diff --git a/test/classdef/plist_t1.m b/test/classdef/plist_t1.m
new file mode 100644
--- /dev/null
+++ b/test/classdef/plist_t1.m
@@ -0,0 +1,5 @@
+classdef plist_t1
+  properties
+    a = 1 b
+  end
+end
diff --git a/test/classdef/plist_t2.m b/test/classdef/plist_t2.m
new file mode 100644
--- /dev/null
+++ b/test/classdef/plist_t2.m
@@ -0,0 +1,5 @@
+classdef plist_t2
+  properties
+    a = 1; b
+  end
+end
diff --git a/test/classdef/plist_t3.m b/test/classdef/plist_t3.m
new file mode 100644
--- /dev/null
+++ b/test/classdef/plist_t3.m
@@ -0,0 +1,6 @@
+classdef plist_t3
+  properties
+    a = 1
+    b
+  end
+end
