# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1273517716 25200
#      Mon May 10 11:55:16 2010 -0700
# Node ID 773566827bcf24b91fc7e275f163e75858f36d63
# Parent  9c9e07f5eb1caf4e5b42a72ec29ce3434292f30d
Split qrdelete test into high precision test when QRUPDATE is present
and low precision when it is not.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-05-10  Rik <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/qr.cc: Split qrdelete test into high precision test 
+        when QRUPDATE is present and low precision when it is not.
+
 2010-05-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/schur.cc (Fschur): Mark triangular matrices on output.
 
 2010-05-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-range.cc (octave_range::index_vector): Optimize order of
 	conditions.
diff --git a/src/DLD-FUNCTIONS/qr.cc b/src/DLD-FUNCTIONS/qr.cc
--- a/src/DLD-FUNCTIONS/qr.cc
+++ b/src/DLD-FUNCTIONS/qr.cc
@@ -1391,16 +1391,29 @@ If @var{orient} is @code{\"row\"}, full 
 %! AA = single([0.091364  0.613038  0.027504  0.999083;
 %!              0.594638  0.425302  0.562834  0.603537;
 %!              0.383594  0.291238  0.742073  0.085574;
 %!              0.265712  0.268003  0.783553  0.238409;
 %!              0.669966  0.743851  0.457255  0.445057 ]);
 %!
 %! [Q,R] = qr(AA);
 %! [Q,R] = qrdelete(Q,R,3,'row');
+%! assert(norm(vec(Q'*Q - eye(4,'single')),Inf) < 1.5e1*eps('single'))
+%! assert(norm(vec(triu(R)-R),Inf) == 0)
+%! assert(norm(vec(Q*R - [AA(1:2,:);AA(4:5,:)]),Inf) < norm(AA)*1e1*eps('single'))
+%!testif HAVE_QRUPDATE
+%! # Same test as above but with more precicision
+%! AA = single([0.091364  0.613038  0.027504  0.999083;
+%!              0.594638  0.425302  0.562834  0.603537;
+%!              0.383594  0.291238  0.742073  0.085574;
+%!              0.265712  0.268003  0.783553  0.238409;
+%!              0.669966  0.743851  0.457255  0.445057 ]);
+%!
+%! [Q,R] = qr(AA);
+%! [Q,R] = qrdelete(Q,R,3,'row');
 %! assert(norm(vec(Q'*Q - eye(4,'single')),Inf) < 1e1*eps('single'))
 %! assert(norm(vec(triu(R)-R),Inf) == 0)
 %! assert(norm(vec(Q*R - [AA(1:2,:);AA(4:5,:)]),Inf) < norm(AA)*1e1*eps('single'))
 %! 
 %!test
 %! AA = single([0.364554 + 0.993117i  0.669818 + 0.510234i  0.426568 + 0.041337i  0.847051 + 0.233291i;
 %!              0.049600 + 0.242783i  0.448946 + 0.484022i  0.141155 + 0.074420i  0.446746 + 0.392706i;
 %!              0.581922 + 0.657416i  0.581460 + 0.030016i  0.219909 + 0.447288i  0.201144 + 0.069132i;
