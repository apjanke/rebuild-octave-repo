# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1216404524 14400
#      Fri Jul 18 14:08:44 2008 -0400
# Node ID c2449e91f50a49ffa8bd65012445125f41f0df59
# Parent  7b8aca1cdf0ad71a075aa9823320cd31a985fd1a
configure.in: fix FTGL test to handle either FTGL/ftgl.h or ftgl.h

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2008-07-18  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Fix FTGL test to handle either FTGL/ftgl.h or ftgl.h.
+	(warn_freetype, warn_ftgl, warn_fltk_config, warn_fltk_opengl):
+	New variables.  Use these instead of overloading warn_graphics.
+
 2008-07-17  David Bateman  <dbateman@free.fr>
 
 	* configure.in (HAVE_MAGICK): New define for presence of
 	GraphicsMagick.
 
 2008-07-16  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* configure.in: Add check for pthread.h.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -644,31 +644,34 @@ if test -z "$MAGICK_CONFIG"; then
 else
   AC_DEFINE(HAVE_MAGICK, 1, [Define if GraphicsMagick++ is available.])
 fi
 
 # ---------------------------------------------------------------------
 
 ## libraries needed for graphics
 
-warn_graphics=""
+warn_freetype=""
+warn_ftgl=""
 
 GL_RENDER_SRC=
 GRAPHICS_OPENGL=
 OCTAVE_OPENGL
-if test "x$OPENGL_LIBS" != "x"; then
+if test -n "$OPENGL_LIBS"; then
   GRAPHICS_OPENGL="opengl"
   GL_RENDER_SRC="gl-render.cc"
 
 ## ftgl (needs freetype 2)
   AC_CHECK_FT2([9.0.3],[],
-    [warn_graphics="FreeType library not found. Native renderer will not have on-screen text"])
-  if test "x$warn_graphics" = "x" ; then
+    [warn_freetype="FreeType library not found. Native renderer will not have on-screen text"])
+  if test -z "$warn_freetype"; then
     AC_LANG_PUSH(C++)
-      AC_CHECK_HEADERS([FTGL/ftgl.h ftgl.h], [
+      AC_CHECK_HEADERS([FTGL/ftgl.h ftgl.h])
+      if test "$ac_cv_header_FTGL_ftgl_h" = yes \
+        || test "$ac_cv_header_ftgl_h" = yes; then
 	AC_MSG_CHECKING([for FTGLTextureFont in -lftgl])
         save_LIBS="$LIBS"
 	save_CXXFLAGS="$CXXFLAGS"
 	LIBS="$LIBS $OPENGL_LIBS $FT2_LIBS -lftgl"
 	CXXFLAGS="$CXXFLAGS $FT2_CFLAGS"
         AC_TRY_LINK([
 #ifdef HAVE_FTGL_FTGL_H
 #include <FTGL/ftgl.h>
@@ -676,21 +679,24 @@ if test "x$OPENGL_LIBS" != "x"; then
 #include <ftgl.h>
 #endif], [
 FTGLTextureFont font("");], [
           OPENGL_LIBS="$OPENGL_LIBS $FT2_LIBS -lftgl"
 	  LIBS="$save_LIBS"
           AC_DEFINE(HAVE_FTGL, 1, [Define to 1 if FTGL is present])
 	  AC_MSG_RESULT(yes)
 	  XTRA_CXXFLAGS="$XTRA_CXXFLAGS $FT2_CFLAGS"],[
-	  AC_MSG_RESULT(no)])
+	  AC_MSG_RESULT(no)
+          warn_ftgl="FTGL library not found. Native renderer will not have on-screen text"
+        ])
 	LIBS="$save_LIBS"
 	CXXFLAGS="$save_CXXFLAGS"
-	],[
-          warn_graphics="FTGL library not found. Native renderer will not have on-screen text"])
+      else
+        warn_ftgl="FTGL headers not found. Native renderer will not have on-screen text"
+      fi
     AC_LANG_POP(C++)
   fi
 fi
 
 GRAPHICS_LIBS=
 GRAPHICS_CFLAGS=
 FLTK_BACKEND_SRC=
 
@@ -699,47 +705,50 @@ AC_ARG_WITH(fltk-prefix,
         [  --with-fltk-prefix=PFX   Prefix where FLTK is installed (optional)],
         fltk_prefix="$withval",
         fltk_prefix="")
 AC_ARG_WITH(fltk-exec-prefix,
         [  --with-fltk-exec-prefix=PFX Exec prefix where FLTK is installed (optional)],
         fltk_exec_prefix="$withval", 
         fltk_exec_prefix="")
 
-if test "x$fltk_exec_prefix" != x ; then
+if test -n "$fltk_exec_prefix"; then
   fltk_args="$fltk_args --exec-prefix=$fltk_exec_prefix"
   if test "x${FLTK_CONFIG+set}" != xset ; then
     FLTK_CONFIG="$fltk_exec_prefix/bin/fltk-config"
   fi
 fi
 
-if test "x$fltk_prefix" != x ; then
+if test -n "$fltk_prefix"; then
   fltk_args="$fltk_args --prefix=$fltk_prefix"
   if test x${FLTK_CONFIG+set} != xset ; then
     FLTK_CONFIG="$fltk_prefix/bin/fltk-config"
   fi
 fi
 
 AC_PATH_PROG(FLTK_CONFIG, fltk-config, no)
 
+warn_fltk_config=""
+warn_fltk_opengl=""
+
 if test "$FLTK_CONFIG" = "no" ; then
-  warn_graphics="fltk library (www.fltk.org) not found.  Native graphics will be disabled."
+  warn_fltk_config="FLTK config script not found.  Native graphics will be disabled."
 else
   FLTK_CFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --cflags`"
   FLTK_LDFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`"
   
-  AC_MSG_CHECKING(for OpenGL support in fltk)
+  AC_MSG_CHECKING(for OpenGL support in FLTK)
   cat > conftest.cc <<EOF
   #include <FL/gl.h>
   int nothing=0;
 EOF
   $CXX $CXXFLAGS $FLTK_CFLAGS -c conftest.cc || \
-    warn_graphics="fltk does not have OpenGL support.  Native graphics will be disabled."
+    warn_fltk_opengl="FLTK does not have OpenGL support.  Native graphics will be disabled."
 
-  if test "x$warn_graphics" = "x" ; then
+  if test -z "$warn_fltk_opengl"; then
     AC_MSG_RESULT(yes)
     GRAPHICS_CFLAGS="$FLTK_CFLAGS"
     GRAPHICS_LIBS="$FLTK_LDFLAGS"
     GRAPHICS_OPENGL="$GRAPHICS_OPENGL fltk_backend"
     FLTK_BACKEND_SRC="fltk_backend.cc"
   else
     AC_MSG_RESULT(no)
   fi
@@ -2019,17 +2028,17 @@ Octave is now configured for $canonical_
   HDF5 libraries:       $HDF5_LIBS
   CURL libraries:       $CURL_LIBS
   REGEX libraries:      $REGEX_LIBS
   QHULL libraries:	$QHULL_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT
   OPENGL libraries:     $OPENGL_LIBS
-  fltk backend libs:    $GRAPHICS_LIBS
+  FLTK backend libs:    $GRAPHICS_LIBS
   Magick config:        $MAGICK_CONFIG
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:   $USE_READLINE
   64-bit array dims and indexing:     $USE_64_BIT_IDX_T
@@ -2225,18 +2234,44 @@ if $USE_64_BIT_IDX_T; then
   AC_MSG_WARN([You must ensure that the Fortran compiler generates])
   AC_MSG_WARN([code with 8 byte signed INTEGER values, and that your])
   AC_MSG_WARN([BLAS and LAPACK libraries are compiled to use 8 byte])
   AC_MSG_WARN([signed integers for array indexing.])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
 
-if test -n "$warn_graphics"; then
-  AC_MSG_WARN($warn_graphics)
+native_graphics=true
+if test -n "$warn_freetype"; then
+  AC_MSG_WARN("$warn_freetype")
+  native_graphics=false
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_ftgl"; then
+  AC_MSG_WARN("$warn_ftgl")
+  native_graphics=false
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_fltk_config"; then
+  AC_MSG_WARN("$warn_fltk_config")
+  native_graphics=false
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_fltk_opengl"; then
+  AC_MSG_WARN("$warn_fltk_opengl")
+  native_graphics=false
+  warn_msg_printed=true
+fi
+
+if $native_graphics; then
+  true;
+else
   AC_MSG_WARN([])
   AC_MSG_WARN([I didn't find the necessary libraries to compile native])
   AC_MSG_WARN([graphics. It isn't necessary to have native graphics])
   AC_MSG_WARN([but you will have to use gnuplot or you won't be able])
   AC_MSG_WARN([to use any of Octave's plotting commands])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
