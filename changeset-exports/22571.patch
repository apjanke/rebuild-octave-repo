# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1475286385 18000
#      Fri Sep 30 20:46:25 2016 -0500
# Branch stable
# Node ID 83f106bfcb3752c5c8c407d3f39e101f447309af
# Parent  d3adf6999939d3a80504e43545d815278b5239f6
Make "pdflatex" an alias of "pdfcairolatex" for gnuplot toolkit print (bug #49223).

* print.m: Add carriage returns to Xfig documentation string.

* __gnuplot_print__.m: Add "pdflatexstandalone" and "pdflatex" to case where
  cairolatex gnuplot terminal is used.  Add "pdf" option if terminal contains
  "pdflatex".  Replace "pdflatex" in term string with "cairolatex".
  (font_spec): Add "pdflatexstandalone" and "pdflatex" to case where
  cairolatex terminal font specs are processed.

* __print_parse_opts__.m: Add "epscairo", "cairolatex", "pdfcairolatex",
  "pdfcairolatexstandalone", "epscairolatex", and "epscairolatexstandalone"
  along with associated extension strings to the dev_list and suffixes cell
  arrays, respectively.

diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -155,17 +155,19 @@
 ##     AutoCAD
 ##
 ##   @item  emf
 ##   @itemx meta
 ##     Microsoft Enhanced Metafile
 ##
 ##   @item fig
 ##     XFig.  For the Gnuplot graphics toolkit, the additional options
-## @option{-textspecial} or @option{-textnormal} can be used to control whether the special flag should be set for the text in the figure.  (default is @option{-textnormal})
+## @option{-textspecial} or @option{-textnormal} can be used to control
+## whether the special flag should be set for the text in the figure.
+## (default is @option{-textnormal})
 ##
 ##   @item gif
 ##     GIF image (only available for the Gnuplot graphics toolkit)
 ##
 ##   @item hpgl
 ##     HP plotter language
 ##
 ##   @item  jpg
diff --git a/scripts/plot/util/private/__gnuplot_print__.m b/scripts/plot/util/private/__gnuplot_print__.m
--- a/scripts/plot/util/private/__gnuplot_print__.m
+++ b/scripts/plot/util/private/__gnuplot_print__.m
@@ -110,28 +110,30 @@ function opts = __gnuplot_print__ (opts)
     case "svg"
       local_drawnow (["svg dynamic " gp_opts], opts.name, opts);
     case {"eepic"}
       local_drawnow ([opts.devopt " color rotate " gp_opts], opts.name, opts);
     case {"aifm", "corel", "emf", "fig"}
       local_drawnow ([opts.devopt " " gp_opts], opts.name, opts);
     case {"cairolatex", "epscairo", "epscairolatex", ...
           "epscairolatexstandalone", "pdfcairo", "pdfcairolatex", ...
-          "pdfcairolatexstandalone", "pngcairo"}
+          "pdfcairolatexstandalone", "pngcairo", ...
+          "pdflatexstandalone", "pdflatex"}
       term = opts.devopt;
       if (strfind (term, "standalone"))
         gp_opts = sprintf ("standalone %s", gp_opts);
         term = strrep (term, "standalone", "");
       endif
       if (strfind (term, "epscairolatex"))
         gp_opts = sprintf ("eps %s", gp_opts);
         term = strrep (term, "epscairolatex", "cairolatex");
-      elseif (strfind (term, "pdfcairolatex"))
+      elseif (strfind (term, "pdfcairolatex") || strfind (term, "pdflatex"))
         gp_opts = sprintf ("pdf %s", gp_opts);
         term = strrep (term, "pdfcairolatex", "cairolatex");
+        term = strrep (term, "pdflatex", "cairolatex");
       endif
       if (__gnuplot_has_terminal__ (term))
         local_drawnow ([term " " gp_opts], opts.name, opts);
       else
         error (sprintf ("print:no%soutput", opts.devopt),
                "print.m: '%s' output is not available for gnuplot-%s",
                upper (opts.devopt), __gnuplot_version__ ());
       endif
@@ -268,17 +270,18 @@ function f = font_spec (opts, varargin)
         f = sprintf ('font "%s,%d"', opts.font, opts.fontsize);
       elseif (! isempty (opts.font))
         f = sprintf ('font "%s"', opts.font);
       elseif (! isempty (opts.fontsize))
         f = sprintf ('font ",%d"', opts.fontsize);
       endif
     case {"cairolatex", "epscairo", "epscairolatex", ...
           "epscairolatexstandalone", "pdfcairo", "pdfcairolatex", ...
-          "pdfcairolatexstandalone", "pngcairo"}
+          "pdfcairolatexstandalone", "pngcairo", ...
+          "pdflatexstandalone", "pdflatex"}
       if (! isempty (opts.font) && ! isempty (opts.fontsize))
         f = sprintf ('font "%s,%d"', opts.font, opts.fontsize);
       elseif (! isempty (opts.font))
         f = sprintf ('font "%s"', opts.font);
       elseif (! isempty (opts.fontsize))
         f = sprintf ('font ",%d"', opts.fontsize);
       endif
     case {"epslatex", "epslatexstandalone"}
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -223,29 +223,33 @@ function arg_st = __print_parse_opts__ (
               "gif", "pbm", "pbmraw", "dxf", "mf", ...
               "svg", "hpgl", "ps", "ps2", "psc", ...
               "psc2", "eps", "eps2", "epsc", "epsc2", ...
               "emf", "pdf", "pslatex", "epslatex", "epslatexstandalone", ...
               "pslatexstandalone", "pdflatexstandalone", ...
               "pstex", "tiff", "tiffn" "tikz", "pcxmono", ...
               "pcx24b", "pcx256", "pcx16", "pgm", "pgmraw", ...
               "ppm", "ppmraw", "pdflatex", "texdraw", ...
-              "pdfcairo", "pngcairo", "pstricks", ...
+              "epscairo", "pdfcairo", "pngcairo", "cairolatex", ...
+              "pdfcairolatex", "pdfcairolatexstandalone", ...
+              "epscairolatex", "epscairolatexstandalone", "pstricks", ...
               "epswrite", "eps2write", "pswrite", "ps2write", "pdfwrite"};
 
   suffixes = {"ai", "cdr", "fig", "png", "jpg", ...
               "gif", "pbm", "pbm", "dxf", "mf", ...
               "svg", "hpgl", "ps", "ps", "ps", ...
               "ps", "eps", "eps", "eps", "eps", ...
               "emf", "pdf", "tex", "tex", "tex", ...
               "tex", "tex", ...
               "ps", "tiff", "tiff", "tikz", "pcx", ...
               "pcx", "pcx", "pcx", "pgm", "pgm", ...
               "ppm", "ppm", "tex", "tex", ...
-              "pdf", "png", "tex", ...
+              "eps", "pdf", "png", "tex", ...
+              "tex", "tex", ...
+              "tex", "tex", "tex", ...
               "eps", "eps", "ps", "ps", "pdf"};
 
   if (isfigure (arg_st.figure))
     __graphics_toolkit__ = get (arg_st.figure, "__graphics_toolkit__");
   else
     ## Allow tests when no figures are present.
     __graphics_toolkit__ = get (0, "defaultfigure__graphics_toolkit__");
   endif
