# HG changeset patch
# User jwe
# Date 761386053 0
#      Wed Feb 16 08:07:33 1994 +0000
# Node ID 04d37703373010ab3a3312288dc7fec0f2bf7032
# Parent  4fbd4bc7f8886cf3b8ed433e5443f94f78f72cb0
[project @ 1994-02-16 08:04:52 by jwe]

diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -86,28 +86,28 @@ file_info::file_info (int n, const char 
   file_number = n;
   file_name = strsave (nm);
   file_fptr = t;
   file_mode = strsave (md);
 }
 
 file_info::file_info (const file_info& f)
 {
-  file_number = f._number;
-  file_name = strsave (f._name);
-  file_fptr = f._fptr;
-  file_mode = strsave (f._mode);
+  file_number = f.file_number;
+  file_name = strsave (f.file_name);
+  file_fptr = f.file_fptr;
+  file_mode = strsave (f.file_mode);
 }
 
 file_info&
 file_info::operator = (const file_info& f)
 {
   if (this != & f)
     {
-      file_number = f._number;
+      file_number = f.file_number;
       delete [] file_name;
       file_name = strsave (f.file_name);
       file_fptr = f.file_fptr;
       delete [] file_mode;
       file_mode = strsave (f.file_mode);
     }
   return *this;
 }
diff --git a/src/tree.h.old b/src/tree.h.old
--- a/src/tree.h.old
+++ b/src/tree.h.old
@@ -240,18 +240,18 @@ public:
 
   char *fcn_file_name (void);
   time_t time_parsed (void);
 
   void mark_as_system_fcn_file (void);
   int is_system_fcn_file (void) const;
 
   int takes_varargs (void) const;
-  void va_start (void);
-  tree_constant va_arg (void);
+  void octave_va_start (void);
+  tree_constant octave_va_arg (void);
 
   void stash_function_name (char *s);
   char *function_name (void);
 
   tree_constant eval (int print);
 
   tree_constant *eval (int print, int nargout);
 
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -50,34 +50,50 @@ Free Software Foundation, Inc.
 #include <stdlib.h>
 #include <stdio.h>
 #include <time.h>
 #include <math.h>
 #include <limits.h>
 #include <iostream.h>
 #include <strstream.h>
 #include <fstream.h>
+
+// This mess suggested by the autoconf manual.
+// unistd.h defines _POSIX_VERSION on POSIX.1 systems.
+#if defined(DIRENT) || defined(_POSIX_VERSION)
 #include <dirent.h>
+#define NLENGTH(dirent) (strlen((dirent)->d_name))
+#else /* not (DIRENT or _POSIX_VERSION) */
+#define dirent direct
+#define NLENGTH(dirent) ((dirent)->d_namlen)
+#ifdef SYSNDIR
+#include <sys/ndir.h>
+#endif /* SYSNDIR */
+#ifdef SYSDIR
+#include <sys/dir.h>
+#endif /* SYSDIR */
+#ifdef NDIR
+#include <ndir.h>
+#endif /* NDIR */
+#endif /* not (DIRENT or _POSIX_VERSION) */
 
 #ifndef HAVE_STRCASECMP
 extern "C"
 {
 extern int strcasecmp (const char*, const char*);
 }
 #endif
 
 #ifndef HAVE_STRNCASECMP
 extern "C"
 {
 extern int strncasecmp (const char*, const char*, size_t);
 }
 #endif
 
-#define NLENGTH(dirent) (strlen((dirent)->d_name))
-
 extern "C"
 {
 #if defined (HAVE_TERMIOS_H)
 #include <termios.h>
 #elif defined (HAVE_TERMIO_H)
 #include <termio.h>
 #elif defined (HAVE_SGTTY_H)
 #include <sgtty.h>
@@ -256,17 +272,19 @@ raw_mode (int on)
 //	ospeed = s.c_cflag & CBAUD;
 //	erase_char = s.c_cc[VERASE];
 //	kill_char = s.c_cc[VKILL];
 
 // Set the modes to the way we want them.
 
 	s.c_lflag &= ~(ICANON|ECHO|ECHOE|ECHOK|ECHONL);
 	s.c_oflag |=  (OPOST|ONLCR);
+#if ! defined (NeXT)
 	s.c_oflag &= ~(OCRNL|ONOCR|ONLRET);
+#endif
 	s.c_cc[VMIN] = 1;
 	s.c_cc[VTIME] = 0;
       }      
     else
       {
 // Restore saved modes.
 	s = save_term;
       }
@@ -289,17 +307,19 @@ raw_mode (int on)
 //	ospeed = s.c_cflag & CBAUD;
 //	erase_char = s.c_cc[VERASE];
 //	kill_char = s.c_cc[VKILL];
 
 // Set the modes to the way we want them.
 
 	s.c_lflag &= ~(ICANON|ECHO|ECHOE|ECHOK|ECHONL);
 	s.c_oflag |=  (OPOST|ONLCR);
+#if ! defined (NeXT)
 	s.c_oflag &= ~(OCRNL|ONOCR|ONLRET);
+#endif
 	s.c_cc[VMIN] = 1;
 	s.c_cc[VTIME] = 0;
       }      
     else
       {
 // Restore saved modes.
 	s = save_term;
       }
