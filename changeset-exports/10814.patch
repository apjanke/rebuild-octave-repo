# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1279865308 -7200
#      Fri Jul 23 08:08:28 2010 +0200
# Node ID 83896a06adaf2d6dfad7301d5c4cc387bd7bafcf
# Parent  2c2d4a2f104716a536804b6ce11e72fc175809ce
don't skip narrowing when concatenating complex matrices

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-07-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-mat.cc (do_single_type_concat_no_mutate): Remove.
+	(tree_matrix::rvalue1): Use do_single_type_concat instead.
+
 2010-07-21  Jaroslav Hajek  <highegg@gmail.com>
 
 	* bitfcns.cc (Fsizemax): New DEFUN.
 
 2010-07-20  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* DLD-FUNCTIONS/fltk_backend.cc (plot_window::plot_window):
 	Added a bottom Fl_Box (copied from gmsh) and tooltips
diff --git a/src/pt-mat.cc b/src/pt-mat.cc
--- a/src/pt-mat.cc
+++ b/src/pt-mat.cc
@@ -827,28 +827,16 @@ do_single_type_concat<octave_map> (const
   if (tmp.all_1x1_p ())
     single_type_concat<octave_scalar_map> (result, dv, tmp);
   else
     single_type_concat<octave_map> (result, dv, tmp);
 
   return result;
 }
 
-template<class TYPE, class OV_TYPE>
-static octave_value 
-do_single_type_concat_no_mutate (const dim_vector& dv,
-                                 tm_const& tmp)
-{
-  TYPE result;
-
-  single_type_concat<TYPE> (result, dv, tmp);
-
-  return new OV_TYPE (result);
-}
-
 octave_value
 tree_matrix::rvalue1 (int)
 {
   octave_value retval = Matrix ();
 
   bool all_strings_p = false;
   bool all_sq_strings_p = false;
   bool all_dq_strings_p = false;
@@ -941,35 +929,32 @@ tree_matrix::rvalue1 (int)
         }
       else if (result_type == "double")
         {
           if (any_sparse_p)
             {       
               if (all_real_p)
                 retval = do_single_type_concat<SparseMatrix> (dv, tmp);
               else
-                retval = do_single_type_concat_no_mutate<SparseComplexMatrix,
-                                octave_sparse_complex_matrix> (dv, tmp);
+                retval = do_single_type_concat<SparseComplexMatrix> (dv, tmp);
             }
           else
             {
               if (all_real_p)
                 retval = do_single_type_concat<NDArray> (dv, tmp);
               else
-                retval = do_single_type_concat_no_mutate<ComplexNDArray,
-                                octave_complex_matrix> (dv, tmp);
+                retval = do_single_type_concat<ComplexNDArray> (dv, tmp);
             }
         }
       else if (result_type == "single")
         {
           if (all_real_p)
             retval = do_single_type_concat<FloatNDArray> (dv, tmp);
           else
-            retval = do_single_type_concat_no_mutate<FloatComplexNDArray,
-                        octave_float_complex_matrix> (dv, tmp);
+            retval = do_single_type_concat<FloatComplexNDArray> (dv, tmp);
         }
       else if (result_type == "char")
         {
           char type = all_dq_strings_p ? '"' : '\'';
 
           maybe_warn_string_concat (all_dq_strings_p, all_sq_strings_p);
 
           charNDArray result (dv, Vstring_fill_char);
