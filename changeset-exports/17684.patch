# HG changeset patch
# User Rik <rik@octave.org>
# Date 1382112117 25200
#      Fri Oct 18 09:01:57 2013 -0700
# Node ID 1d41b1910531863637ccf7f19a6a03feb32f6f86
# Parent  279d4bde41d53fdb92d97fef6d26b9965c315834
assert.m: Fix segfault when both inputs are complex, sparse matrices.

* scripts/testfun/assert.m: Convert sparse->full before calling complex().
Convert back to sparse after function call.

diff --git a/scripts/testfun/assert.m b/scripts/testfun/assert.m
--- a/scripts/testfun/assert.m
+++ b/scripts/testfun/assert.m
@@ -279,18 +279,23 @@ function assert (cond, varargin)
         exclude = errseen | ! isfinite (A_null_real) & ! isfinite (B_null_real);
         A_null_real(exclude) = 0;
         B_null_real(exclude) = 0;
         A_null_imag = imag (A);
         B_null_imag = imag (B);
         exclude = errseen | ! isfinite (A_null_imag) & ! isfinite (B_null_imag);
         A_null_imag(exclude) = 0;
         B_null_imag(exclude) = 0;
-        A_null = complex (A_null_real, A_null_imag);
-        B_null = complex (B_null_real, B_null_imag);
+        if (issparse (A) || issparse (B))
+          A_null = sparse (complex (full (A_null_real), full (A_null_imag)));
+          B_null = sparse (complex (full (B_null_real), full (B_null_imag)));
+        else
+          A_null = complex (A_null_real, A_null_imag);
+          B_null = complex (B_null_real, B_null_imag);
+        endif
         if (isscalar (tol))
           mtol = tol * ones (size (A));
         else
           mtol = tol;
         endif
 
         k = (mtol == 0);
         erridx = find ((A_null != B_null) & k);
