# HG changeset patch
# User jwe
# Date 963600548 0
#      Fri Jul 14 18:49:08 2000 +0000
# Node ID 64ca92e02a7e4c19eeb8814c6cb9a6d11cfa8077
# Parent  48415caaea35fdd12602305922ba87220de36064
[project @ 2000-07-14 18:49:06 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2000-07-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* strings/strcmp.m: Return 0 instead of an error if row and column
+	dimensions don't match.
+
 2000-06-30  Kai Habel  <kahacjde@calvados.zrz.TU-Berlin.DE>
 
 	* plot/hist.m: Allow 3 argument form to work.
 
 2000-06-27  Matthew W. Roberts <matt@lehi.tamu.edu>
 
 	* plot/plot.m: Add examples in doc string.
 
diff --git a/scripts/strings/strcmp.m b/scripts/strings/strcmp.m
--- a/scripts/strings/strcmp.m
+++ b/scripts/strings/strcmp.m
@@ -31,19 +31,19 @@
 function status = strcmp (s1, s2)
 
   if (nargin != 2)
     usage ("strcmp (s, t)");
   endif
 
   status = 0;
   if (isstr (s1) && isstr(s2))
-    c1 = columns (s1);
-    c2 = columns (s2);
-    if (c1 == c2)
+    [r1, c1] = size (s1);
+    [r2, c2] = size (s2);
+    if (r1 == r2 && c1 == c2)
       if (c1 == 0)
         status = 1;
       else
         status = all (all (s1 == s2));
       endif
     endif
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,23 @@
+2000-07-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (octave): Link to ../libcruft/blas-xtra/xerbla.o here.
+
+	* octave.cc (main): Remove kluge to attempt linking our version of
+	xerbla.
+
+2000-07-07  Steven G. Johnson  <stevenj@alum.mit.edu>
+
+	* load-save.cc (have_h5giterate_bug): New file-scope variable.
+	(hdf5_read_next_data): Only increment current_item if
+	have_h5giterate_bug is true.
+	(read_hdf5_data): Set have_h5giterate_bug here.
+	Only increment hs.current_item if have_h5giterate_bug is true.
+
 2000-07-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* c-file-ptr-stream.cc (c_file_ptr_buf::close):
 	Return -1 if file pointer is NULL.
 	Set file pointer to 0 after closing.
 	(c_file_ptr_buf::~c_file_ptr_buf): Call close after flushing.
 
 2000-07-05  Steven G. Johnson  <stevenj@alum.mit.edu>
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -206,27 +206,32 @@ else
   BINDISTFILES = octave $(OCT_FILES)
 endif
 
 all: octave DOCSTRINGS
 .PHONY: all
 
 objects: $(OBJECTS)
 
+XERBLA = ../libcruft/blas-xtra/xerbla.o
+
 ifeq ($(SHARED_LIBS), true)
   ifeq ($(STATIC_LIBS), true)
     LIBRARIES = liboctinterp.$(LIBEXT) liboctinterp.$(SHLEXT)
   else
     LIBRARIES = liboctinterp.$(SHLEXT)
+    XERBLA = ../libcruft/blas-xtra/pic/xerbla.o
   endif
 else
   ifeq ($(STATIC_LIBS), true)
     LIBRARIES = liboctinterp.$(LIBEXT)
   else
+    ## This is not going to work, but hey, you asked for it...
     LIBRARIES =
+    XERBLA =
   endif
 endif
 
 libraries: $(LIBRARIES)
 .PHONY: libraries
 
 liboctinterp.$(LIBEXT): $(OBJECTS)
 	rm -f $@
@@ -249,17 +254,17 @@ stamp-oct-links: $(OCT_FILES)
 
 stamp-prereq: defaults.h oct-conf.h
 	touch stamp-prereq
 
 octave: stamp-prereq $(LIBRARIES) stamp-oct-links \
 	octave.o builtins.o ops.o $(DLD_STATIC_OBJ)
 	$(CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(RDYNAMIC_FLAG) \
 	$(ALL_LDFLAGS) -o octave \
-	octave.o builtins.o ops.o $(DLD_STATIC_OBJ) \
+	octave.o builtins.o ops.o $(XERBLA) $(DLD_STATIC_OBJ) \
 	$(OCTAVE_LFLAGS) \
 	$(OCTAVE_LIBS) \
 	$(LEXLIB) $(TERMLIBS) $(BLAS_LIBS) $(LIBS) $(FLIBS)
 
 stmp-pic: pic
 	@if [ -f stmp-pic ]; then \
 	  true; \
 	else \
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1302,16 +1302,21 @@ struct hdf5_callback_data
 
   // HDF5 rep's of complex and range type
   hid_t complex_type, range_type;
 
   // whether to try extra hard to import "foreign" data
   bool import;
 };
 
+// This variable, set in read_hdf5_data(), tells whether we are using
+// a version of HDF5 with a buggy H5Giterate (i.e. which neglects to
+// increment the index parameter to the next unread item).
+static bool have_h5giterate_bug = false;
+
 // This function is designed to be passed to H5Giterate, which calls it
 // on each data item in an HDF5 file.  For the item whose name is NAME in
 // the group GROUP_ID, this function sets dv->tc to an Octave representation
 // of that item.  (dv must be a pointer to hdf5_callback_data.)  (It also
 // sets the other fields of dv).
 //
 // It returns 1 on success (in which case H5Giterate stops and returns),
 // -1 on error, and 0 to tell H5Giterate to continue on to the next item
@@ -1683,17 +1688,18 @@ hdf5_read_next_data (hid_t group_id, con
 	    m [dsub.name] = dsub.tc;
 
 	  if (dsub.name)
 	    delete [] dsub.name;
 
 	  if (dsub.doc)
 	    delete [] dsub.doc;
 
-	  current_item++;  // H5Giterate returned the last index processed
+	  if (have_h5giterate_bug)
+	    current_item++;  // H5Giterate returned the last index processed
 	}
 
       if (retval2 < 0)
 	retval = retval2;
       else
 	{
 	  d->global = hdf5_check_attr (group_id, "OCTAVE_GLOBAL");
 
@@ -1794,22 +1800,40 @@ read_hdf5_data (std::istream& is,
 
   d.name = (char *) NULL;
   d.global = 0;
   d.doc = (char *) NULL;
   d.complex_type = hdf5_make_complex_type (H5T_NATIVE_DOUBLE);
   d.range_type = hdf5_make_range_type (H5T_NATIVE_DOUBLE);
   d.import = import;
 
+  // Versions of HDF5 prior to 1.2.2 had a bug in H5Giterate where it
+  // would return the index of the last item processed instead of the
+  // next item to be processed, forcing us to increment the index manually.
+
+  unsigned int vers_major, vers_minor, vers_release;
+
+  H5get_libversion (&vers_major, &vers_minor, &vers_release);
+
+  // XXX FIXME XXX -- this test looks wrong.
+  have_h5giterate_bug
+    = (vers_major < 1
+       || (vers_major == 1 && (vers_minor < 2
+			       || (vers_minor == 2 && vers_release < 2))));
+
   herr_t retval = H5Giterate (hs.file_id, "/", &hs.current_item,
 			      hdf5_read_next_data, &d);
 
-  // H5Giterate sets current_item to the last item processed; we want
-  // the index of the next item (for the next call to read_hdf5_data)
-  hs.current_item++;
+  if (have_h5giterate_bug)
+    {
+      // H5Giterate sets current_item to the last item processed; we want
+      // the index of the next item (for the next call to read_hdf5_data)
+
+      hs.current_item++;
+    }
 
   if (retval > 0)
     {
       global = d.global;
       tc = d.tc;
       doc = d.doc;
     }
   else
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -577,26 +577,15 @@ main (int argc, char **argv)
     line_editing = false;
 
   int retval = main_loop ();
 
   if (retval == 1 && ! error_state)
     retval = 0;
 
   clean_up_and_exit (retval);
-
-  // The following code should never be reached.  It is a hack to make
-  // sure that the xerbla.f from libcruft/blas-xtra is linked with
-  // octave, in preference to the xerbla function from any standard
-  // BLAS that we link to.
-
-  // XXX FIXME XXX -- this may not work on some systems if libcruft
-  // and the external blas libraries are both shared libraries.
-
-  if (retval < 0)
-    F77_FCN (xerbla, XERBLA) ("foobar", 0);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
