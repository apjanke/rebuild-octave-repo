# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1285837919 14400
#      Thu Sep 30 05:11:59 2010 -0400
# Node ID e378c0176a38203b1babb2c792a18e2565376d1a
# Parent  88d78ee12ee82837f1acaee6b7f62ef29df923ea
oct-errno.cc.in: use octve_scalar_map instead of Octave_map

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-09-30  John W. Eaton  <jwe@octave.org>
+
+	* oct-errno.cc.in (octave_errno::do_list, octave_errno::list):
+	Use octave_scalar_map instead of Octave_map.
+
 2010-09-30  Jordi Guti√©rrez Hermoso  <jordigh@gmail.com>
 	* DLD-FUNCTIONS/gcd.cc (divide): New function, complex integer
 	division with remainder.
 	(simple_gcd): Overload for complex values.
 	(extended_gcd): Ditto.
 	(do_simple_gcd): Dispatch for complex gcd.
 	(do_extended_gcd): Ditto.
 	(Fgcd): Mention that complex gcd is now also possible.
diff --git a/src/oct-errno.cc.in b/src/oct-errno.cc.in
--- a/src/oct-errno.cc.in
+++ b/src/oct-errno.cc.in
@@ -305,32 +305,32 @@ octave_errno::instance_ok (void)
 }
 
 int
 octave_errno::lookup (const std::string& name)
 {
   return (instance_ok ()) ? instance->do_lookup (name) : -1;
 }
 
-Octave_map
+octave_scalar_map
 octave_errno::list (void)
 {
-  return (instance_ok ()) ? instance->do_list () : Octave_map ();
+  return (instance_ok ()) ? instance->do_list () : octave_scalar_map ();
 }
 
 int
 octave_errno::do_lookup (const std::string& name)
 {
   return (errno_tbl.find (name) != errno_tbl.end ()) ? errno_tbl[name] : -1;
 }
 
-Octave_map
+octave_scalar_map
 octave_errno::do_list (void)
 {
-  Octave_map retval;
+  octave_scalar_map retval;
 
   for (std::map<std::string, int>::const_iterator p = errno_tbl.begin ();
        p != errno_tbl.end ();
        p++)
     {
       retval.assign (p->first, p->second);
     }
 
