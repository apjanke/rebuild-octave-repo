# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1413018959 -7200
#      Sat Oct 11 11:15:59 2014 +0200
# Branch gui-release
# Node ID 9582fad687303d7b5a1aaf5e5d549a1517f4846f
# Parent  62756ba9e4e527d08a76ba6563f6950603b851c2
add actions for converting the eol characters of the editor file

* file-editor-tab.cc (convert_eol): new slot for converting the line endings

* file-editor-tab.h: new slot convert_eol

* file-editor.cc (request_conv_eol_windows, request_conv_eol_unix,
  request_conv_eol_mac): new slots for converting the line ending,
  emitting new signal for activating the slot convert_eol in file_editor_tab;
  (constructor): add separators to the edit/format menu, add new actions for
  converting the line endings;
  (set_shortcuts): set the shortcuts for the new actions

* file-editor.h: new function, new actions, and new signal

* shortcut_manager.cc (do_init_data): set the initial shortcuts for new actions

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -942,16 +942,26 @@ void
 file_editor_tab::unindent_selected_text (const QWidget *ID)
 {
   if (ID != this)
     return;
 
   do_indent_selected_text (false);
 }
 
+void
+file_editor_tab::convert_eol (const QWidget *ID, QsciScintilla::EolMode eol_mode)
+{
+  if (ID != this)
+    return;
+
+  _edit_area->convertEols (eol_mode);
+  _edit_area->setEolMode (eol_mode);
+  update_eol_indicator ();
+}
 
 void
 file_editor_tab::zoom_in (const QWidget *ID)
 {
   if (ID != this)
     return;
 
   _edit_area->zoomIn (1);
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -91,16 +91,17 @@ public slots:
 
   void scintilla_command (const QWidget *, unsigned int);
 
   void comment_selected_text (const QWidget *ID);
   void uncomment_selected_text (const QWidget *ID);
 
   void indent_selected_text (const QWidget *ID);
   void unindent_selected_text (const QWidget *ID);
+  void convert_eol (const QWidget *ID, QsciScintilla::EolMode);
 
   void zoom_in (const QWidget *ID);
   void zoom_out (const QWidget *ID);
   void zoom_normal (const QWidget *ID);
 
   void find (const QWidget *ID);
   void goto_line (const QWidget *ID, int line = -1);
   void show_auto_completion (const QWidget *ID);
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -807,16 +807,35 @@ file_editor::request_indent_selected_tex
 }
 
 void
 file_editor::request_unindent_selected_text (bool)
 {
   emit fetab_unindent_selected_text (_tab_widget->currentWidget ());
 }
 
+void
+file_editor::request_conv_eol_windows (bool)
+{
+  emit fetab_convert_eol (_tab_widget->currentWidget (),
+                          QsciScintilla::EolWindows);
+}
+void
+file_editor::request_conv_eol_unix (bool)
+{
+  emit fetab_convert_eol (_tab_widget->currentWidget (),
+                          QsciScintilla::EolUnix);
+}
+void
+file_editor::request_conv_eol_mac (bool)
+{
+  emit fetab_convert_eol (_tab_widget->currentWidget (),
+                          QsciScintilla::EolMac);
+}
+
 
 void
 file_editor::request_find (bool)
 {
   emit fetab_find (_tab_widget->currentWidget ());
 }
 
 void
@@ -1320,25 +1339,43 @@ file_editor::construct (void)
           tr ("&Show Completion List"), SLOT (request_completion (bool)));
 
   _edit_fmt_menu = editMenu->addMenu (tr ("&Format"));
 
   _upper_case_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Uppercase Selection"), SLOT (request_upper_case (bool)));
   _lower_case_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Lowercase Selection"), SLOT (request_lower_case (bool)));
+
+  _edit_fmt_menu->addSeparator ();
+
   _comment_selection_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Comment"), SLOT (request_comment_selected_text (bool)));
   _uncomment_selection_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Uncomment"), SLOT (request_uncomment_selected_text (bool)));
+
+  _edit_fmt_menu->addSeparator ();
+
   _indent_selection_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Indent"), SLOT (request_indent_selected_text (bool)));
   _unindent_selection_action = add_action (_edit_fmt_menu, QIcon (),
           tr ("&Unindent"), SLOT (request_unindent_selected_text (bool)));
 
+  _edit_fmt_menu->addSeparator ();
+
+  _conv_eol_windows_action = add_action (_edit_fmt_menu, QIcon (),
+          tr ("Convert Line Endings to &Windows (CRLF)"),
+          SLOT (request_conv_eol_windows (bool)));
+  _conv_eol_unix_action = add_action (_edit_fmt_menu, QIcon (),
+          tr ("Convert Line Endings to &Unix (LF)"),
+          SLOT (request_conv_eol_unix (bool)));
+  _conv_eol_mac_action = add_action (_edit_fmt_menu, QIcon (),
+          tr ("Convert Line Endings to &Mac (CR)"),
+          SLOT (request_conv_eol_mac (bool)));
+
   _edit_nav_menu = editMenu->addMenu (tr ("Navi&gation"));
 
   _goto_line_action = add_action (_edit_nav_menu, QIcon (),
           tr ("Go &to Line..."), SLOT (request_goto_line (bool)));
 
   _edit_nav_menu->addSeparator ();
 
   _next_bookmark_action =  add_action (_edit_nav_menu, QIcon (),
@@ -1631,16 +1668,19 @@ file_editor::add_file_editor_tab (file_e
            f, SLOT (uncomment_selected_text (const QWidget*)));
 
   connect (this, SIGNAL (fetab_indent_selected_text (const QWidget*)),
            f, SLOT (indent_selected_text (const QWidget*)));
 
   connect (this, SIGNAL (fetab_unindent_selected_text (const QWidget*)),
            f, SLOT (unindent_selected_text (const QWidget*)));
 
+  connect (this, SIGNAL (fetab_convert_eol (const QWidget*, QsciScintilla::EolMode)),
+           f, SLOT (convert_eol (const QWidget*, QsciScintilla::EolMode)));
+
   connect (this, SIGNAL (fetab_find (const QWidget*)),
            f, SLOT (find (const QWidget*)));
 
   connect (this, SIGNAL (fetab_goto_line (const QWidget*, int)),
            f, SLOT (goto_line (const QWidget*, int)));
 
   connect (this, SIGNAL (fetab_completion (const QWidget*)),
            f, SLOT (show_auto_completion (const QWidget*)));
@@ -1735,16 +1775,20 @@ file_editor::set_shortcuts ()
   shortcut_manager::set_shortcut (_goto_line_action, "editor_edit:goto_line");
   shortcut_manager::set_shortcut (_toggle_bookmark_action, "editor_edit:toggle_bookmark");
   shortcut_manager::set_shortcut (_next_bookmark_action, "editor_edit:next_bookmark");
   shortcut_manager::set_shortcut (_previous_bookmark_action, "editor_edit:previous_bookmark");
   shortcut_manager::set_shortcut (_remove_bookmark_action, "editor_edit:remove_bookmark");
   shortcut_manager::set_shortcut (_preferences_action, "editor_edit:preferences");
   shortcut_manager::set_shortcut (_styles_preferences_action, "editor_edit:styles_preferences");
 
+  shortcut_manager::set_shortcut (_conv_eol_windows_action, "editor_edit:conv_eol_winows");
+  shortcut_manager::set_shortcut (_conv_eol_unix_action,    "editor_edit:conv_eol_unix");
+  shortcut_manager::set_shortcut (_conv_eol_mac_action,     "editor_edit:conv_eol_mac");
+
   // View menu
   shortcut_manager::set_shortcut (_show_linenum_action, "editor_view:show_line_numbers");
   shortcut_manager::set_shortcut (_show_whitespace_action, "editor_view:show_white_spaces");
   shortcut_manager::set_shortcut (_show_eol_action, "editor_view:show_eol_chars");
   shortcut_manager::set_shortcut (_show_indguide_action, "editor_view:show_ind_guides");
   shortcut_manager::set_shortcut (_show_longline_action, "editor_view:show_long_line");
   shortcut_manager::set_shortcut (_zoom_in_action, "editor_view:zoom_in");
   shortcut_manager::set_shortcut (_zoom_out_action, "editor_view:zoom_out");
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -91,16 +91,17 @@ signals:
   void fetab_toggle_breakpoint (const QWidget* ID);
   void fetab_next_breakpoint (const QWidget* ID);
   void fetab_previous_breakpoint (const QWidget* ID);
   void fetab_remove_all_breakpoints (const QWidget* ID);
   void fetab_comment_selected_text (const QWidget* ID);
   void fetab_uncomment_selected_text (const QWidget* ID);
   void fetab_indent_selected_text (const QWidget* ID);
   void fetab_unindent_selected_text (const QWidget* ID);
+  void fetab_convert_eol (const QWidget* ID, QsciScintilla::EolMode eol_mode);
   void fetab_find (const QWidget* ID);
   void fetab_goto_line (const QWidget* ID, int line = -1);
   void fetab_completion (const QWidget*);
   void fetab_insert_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_delete_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_do_breakpoint_marker (bool insert, const QWidget* ID,
                                    int line = -1);
   void fetab_set_focus (const QWidget* ID);
@@ -162,16 +163,19 @@ public slots:
 
   void request_comment_selected_text (bool);
   void request_uncomment_selected_text (bool);
 
   void request_upper_case (bool);
   void request_lower_case (bool);
   void request_indent_selected_text (bool);
   void request_unindent_selected_text (bool);
+  void request_conv_eol_windows (bool);
+  void request_conv_eol_unix (bool);
+  void request_conv_eol_mac (bool);
 
   void request_find (bool);
 
   void request_goto_line (bool);
   void request_completion (bool);
 
   void handle_file_name_changed (const QString& fileName,
                                  const QString& toolTip);
@@ -262,16 +266,19 @@ private:
   QAction *_open_action;
 
   QAction *_upper_case_action;
   QAction *_lower_case_action;
   QAction *_comment_selection_action;
   QAction *_uncomment_selection_action;
   QAction *_indent_selection_action;
   QAction *_unindent_selection_action;
+  QAction *_conv_eol_windows_action;
+  QAction *_conv_eol_unix_action;
+  QAction *_conv_eol_mac_action;
 
   QAction *_copy_action;
   QAction *_cut_action;
   QAction *_paste_action;
   QAction *_selectall_action;
   QAction *_context_help_action;
   QAction *_context_doc_action;
 
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -241,16 +241,23 @@ shortcut_manager::do_init_data ()
         QKeySequence (prefix + Qt::ShiftModifier + Qt::Key_Tab));
 #else
   init (tr ("Indent Selection"), "editor_edit:indent_selection",  
         QKeySequence (ctrl + Qt::Key_Tab));
   init (tr ("Unindent Selection"), "editor_edit:unindent_selection",  
         QKeySequence (ctrl_shift + Qt::Key_Tab));
 #endif
 
+  init (tr ("Convert Line Ednings to Windows"), "editor_edit:conv_eol_winows",
+        QKeySequence ());
+  init (tr ("Convert Line Ednings to Unix"), "editor_edit:conv_eol_unix",
+        QKeySequence ());
+  init (tr ("Convert Line Ednings to Mac"), "editor_edit:conv_eol_mac",
+        QKeySequence ());
+
   init (tr ("Goto Line"), "editor_edit:goto_line",  
         QKeySequence (ctrl + Qt::Key_G));
   init (tr ("Toggle Bookmark"), "editor_edit:toggle_bookmark",
         QKeySequence (prefix + Qt::Key_F7));
   init (tr ("Next Bookmark"), "editor_edit:next_bookmark",
         QKeySequence (prefix + Qt::Key_F2));
   init (tr ("Previous Bookmark"), "editor_edit:previous_bookmark",
         QKeySequence (prefix + Qt::SHIFT + Qt::Key_F2));
