# HG changeset patch
# User jwe
# Date 1110815624 0
#      Mon Mar 14 15:53:44 2005 +0000
# Node ID 240ed0328925b3109ec020f0a2ef2cd5184f48e0
# Parent  16a6247730d9a0904ff7ea3c94732e73878169f3
[project @ 2005-03-14 15:53:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-03-14  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/dispatch.cc (Fbuiltin):	Avoid crash if symbol
+	lookup fails.
+
 2005-03-10  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (Foctave_config_info): Print error instead of crashing
 	if struct does not contain field we are looking for.
 
 2005-03-09  John W. Eaton  <jwe@octave.org>
 
 	* load-save.cc (Fload, Fsave): Accept -text as an alias for -ascii.
diff --git a/src/DLD-FUNCTIONS/dispatch.cc b/src/DLD-FUNCTIONS/dispatch.cc
--- a/src/DLD-FUNCTIONS/dispatch.cc
+++ b/src/DLD-FUNCTIONS/dispatch.cc
@@ -302,26 +302,32 @@ some other function for the given type s
   if (nargin > 0)
     {
       const std::string name (args(0).string_value ());
  
       if (error_state)
 	return retval;
 
       symbol_record *sr = fbi_sym_tab->lookup (name, 0);
-      if (sr->def().type_id () == octave_dispatch::static_type_id ())
+
+      if (sr)
 	{
-	  octave_function *fcn = builtin (name);
+	  if (sr->def().type_id () == octave_dispatch::static_type_id ())
+	    {
+	      octave_function *fcn = builtin (name);
 
-	  if (!error_state && fcn)
-	    retval = fcn->do_multi_index_op (nargout,
-					     args.splice (0, 1, retval));
+	      if (!error_state && fcn)
+		retval = fcn->do_multi_index_op (nargout,
+						 args.splice (0, 1, retval));
+	    }
+	  else
+	    retval = feval (name, args, nargout);
 	}
       else
-	retval = feval (name, args, nargout);
+	error ("builtin: lookup for symbol `%s' failed", name.c_str ());
     }
   else
     print_usage ("builtin");
 
   return retval;
 }
 
 DEFUN_DLD (dispatch_help, args, nargout,
