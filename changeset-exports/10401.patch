# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1267828712 28800
#      Fri Mar 05 14:38:32 2010 -0800
# Node ID 6d1e49abf95fabe38446aebad5baed3e565272a6
# Parent  b14fd5116c298f626c2349035b8e9bd3dc6209eb
pkg/pkg.m (write_index): include classes in autogenerated INDEX files

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-05  Soren Hauberg  <hauberg@gmail.com>
+
+	* pkg/pkg.m (write_index): include classes in autogenerated INDEX files.
+
 2010-03-05  Soren Hauberg  <hauberg@gmail.com>
 
 	* plot/fplot.m: Ensure that 'limits' is a 2 or 4 vector, and that 'fn' is a
 	function.
 
 2010-03-05  Jaroslav Hajek  <highegg@gmail.com>
 
 	* testfun/test.m: Support catching warnings and errors by IDs.
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -1762,16 +1762,31 @@ endfunction
 ##   'index_file' is the name (including path) of resulting INDEX file.
 function write_index (desc, dir, index_file, global_install)
   ## Get names of functions in dir
   [files, err, msg] = readdir (dir);
   if (err)
     error ("couldn't read directory %s: %s", dir, msg);
   endif
 
+  ## Get classes in dir
+  class_idx = strmatch ("@", files);
+  for k = 1:length (class_idx)
+    class_name = files {class_idx (k)};
+    class_dir = fullfile (dir, class_name);
+    if (exist (class_dir, "dir"))
+      [files2, err, msg] = readdir (class_dir);
+      if (err)
+        error ("couldn't read directory %s: %s", class_dir, msg);
+      endif
+      files2 = strcat (class_name, filesep (), files2);
+      files = [files; files2];    
+    endif
+  endfor
+
   ## Check for architecture dependent files.
   tmpdir = getarchdir (desc);
   if (exist (tmpdir, "dir"))
     [files2, err, msg] = readdir (tmpdir);
     if (err)
       error ("couldn't read directory %s: %s", tmpdir, msg);
     endif
     files = [files; files2];    
