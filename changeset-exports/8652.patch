# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1233646348 -3600
#      Tue Feb 03 08:32:28 2009 +0100
# Node ID b93f17317ca3df670ef98d81f03d74738ba40445
# Parent  ea8e65ca234f19e00cfc98cd1c28452c20126fe0
fixes to __all_opts__

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-03  Jaroslav Hajek  <highegg@gmail.com>
+
+	* optimization/__all_opts__.m: Yield empty list in recursive calls.
+	mlock to avoid unloading.
+
 2009-01-30  John W. Eaton  <jwe@octave.org>
 
 	* optimization/PKG_ADD: Delete.
 	* optimization/fsolve.m, optimization/fzero.m,
 	optimization/lsqnonneg.m: Use PKG_ADD: comment to call __all_opts__.
 
 2009-01-30  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/scripts/optimization/__all_opts__.m b/scripts/optimization/__all_opts__.m
--- a/scripts/optimization/__all_opts__.m
+++ b/scripts/optimization/__all_opts__.m
@@ -21,24 +21,30 @@
 ## internal function. Queries all options from all known optimization
 ## functions and returns a list of possible values.
 ## @end deftypefn
 
 function names = __all_opts__ (varargin)
   
   persistent saved_names = {};
 
+  ## do not clear this function
+  mlock ();
+
   ## guard against recursive calls.
   persistent recursive = false;
 
-  if (nargin == 0)
+  if (recursive)
+    names = {};
+  elseif (nargin == 0)
     names = saved_names;
   else
     ## query all options from all known functions. These will call optimset,
     ## which will in turn call us, but we won't answer.
+    recursive = true;
     names = saved_names;
     for i = 1:nargin
       try
         opts = optimset (varargin{i});
         fn = fieldnames (opts).';
         names = [names, fn];
       catch
         # throw the error as a warning.
@@ -47,12 +53,13 @@ function names = __all_opts__ (varargin)
     endfor
     names = unique (names);
     lnames = unique (tolower (names));
     if (length (lnames) < length (names))
       ## This is bad.
       error ("__all_opts__: duplicate options with inconsistent case.");
     endif
     saved_names = names;
+    recursive = false;
   endif
 
 endfunction
 
