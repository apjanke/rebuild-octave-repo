# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1488553599 -3600
#      Fri Mar 03 16:06:39 2017 +0100
# Node ID b506b43f999e5f625d8b1f0ea304b8c06090a978
# Parent  756c7a550542df4bf0a05f3323964ef9cc0f2d18
Permit several file formats in grabcode.

* scripts/general/grabcode: Don't restrict input to '.htm' files for Matlab
compatibility.  Update docstring.  Improve code readability with regexp.
Remove no longer suitable test case.

diff --git a/scripts/general/grabcode.m b/scripts/general/grabcode.m
--- a/scripts/general/grabcode.m
+++ b/scripts/general/grabcode.m
@@ -16,23 +16,21 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} grabcode (@var{url})
 ## @deftypefnx {} {} grabcode (@var{filename})
 ## @deftypefnx {} {@var{code_str} =} grabcode (@dots{})
 ##
-## Grab the code from an HTML report previously created with the @code{publish}
-## function.
+## Grab the code from a report created by the @code{publish} function.
 ##
-## The input parameter @var{url} must point to a local or remote HTML file
-## with extension @file{.htm} or @file{.html} which was generated by the
-## @code{publish} function.  @code{grabcode} will @strong{not} work with any
-## other HTML file.
+## The grabbed code inside the published report must be enclosed by the
+## strings @samp{##### SOURCE BEGIN #####} and @samp {##### SOURCE END #####}.
+## The @code{publish} function creates this format automatically.
 ##
 ## If no return value is requested the code is saved to a temporary file and
 ## opened in the default editor.  NOTE: The temporary file must be saved under
 ## a new or the code will be lost.
 ##
 ## If an output is requested the grabbed code will be returned as string
 ## @var{code_str}.
 ##
@@ -53,38 +51,31 @@
 ## @end deftypefn
 
 function code_str = grabcode (url)
 
   if (nargin != 1)
     print_usage ();
   endif
 
-  [~,~, ext] = fileparts (url);
-  if (! strncmpi (ext, ".htm", 4))
-    error ('grabcode: URL must point to a published ".html" file');
-  endif
-
   if (exist (url) == 2)
     ## URL is a local file
     oct_code = fileread (url);
   else
     ## Otherwise, try to read remote URL
     [oct_code, success, message] = urlread (url);
     if (! success)
       error (["grabcode: " message]);
     endif
   endif
 
   ## Extract relevant part
-  start_str = "##### SOURCE BEGIN #####";
-  end_str = "##### SOURCE END #####";
-  start_idx = strfind (oct_code, start_str) + length (start_str) + 1;
-  end_idx = strfind (oct_code, end_str) - 1;
-  oct_code = oct_code(start_idx:end_idx);
+  oct_code = regexp (oct_code, ...
+    '##### SOURCE BEGIN #####\n(.*)##### SOURCE END #####', "once", "tokens");
+  oct_code = oct_code{1};
 
   if (nargout == 1)
     code_str = oct_code;
   else
     ## Open temporary file in editor
     fname = [tempname() ".m"];
     fid = fopen (fname, "w");
     if (fid < 0)
@@ -99,9 +90,8 @@ function code_str = grabcode (url)
   endif
 
 endfunction
 
 
 ## Test input validation
 %!error grabcode ()
 %!error grabcode (1,2)
-%!error <URL must point to a published> grabcode ("test_script.pdf")
