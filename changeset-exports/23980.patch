# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1504204596 25200
#      Thu Aug 31 11:36:36 2017 -0700
# Node ID eb6602171d5989aee7afa5b90a11fc0e20182c33
# Parent  fb9b024a6041d9c431a8f66ccd42dc2cedbed2d1
configure: make SUNDIALS double precision test cross-compile-safe (bug #51904)

* m4/acinclude.m4 (OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE): Rename macro,
rewrite test to use AC_COMPILE_IFELSE to be cross-compile-safe.  Rename
internal variables for clarity.  Delete unused HAVE_SUNDIALS_IDA_DOUBLE.
* configure.ac: Use new macro and variable names.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2207,25 +2207,25 @@ fi
 
 save_LIBS="$LIBS"
 LIBS="$SUNDIALS_NVECSERIAL_LIBS $KLU_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB(sundials_ida, [Sundials IDA],
   [Sundials IDA library not found.  Solvers ode15i and ode15s will be disabled.],
   [ida/ida.h ida.h], [IDAInit],
   [], [don't use Sundials IDA library, solvers ode15i and ode15s will be disabled],
   [warn_sundials_ida=
-   OCTAVE_CHECK_SIZEOF_SUNDIALS_IDA_REALTYPE
+   OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE
    OCTAVE_CHECK_SUNDIALS_IDAKLU])
 LIBS="$save_LIBS"
 
 ## Define this way instead of with an #if in oct-conf-post.h so that
 ## the build features script will get the correct value.
 if test -n "$SUNDIALS_IDA_LIBS" \
     && test -n "$SUNDIALS_NVECSERIAL_LIBS" \
-    && test $octave_cv_sizeof_ida_double = yes; then
+    && test $octave_cv_sundials_realtype_is_double = yes; then
   AC_DEFINE(HAVE_SUNDIALS, 1, [Define Sundials is available.])
 fi
 
 ## Collections of flags.  These are here instead of just in the
 ## Makefile.am file because we substitute some of them into other
 ## source files like mkoctfile.
 
 ## Order matters, at least on some systems (Cygwin, for example).
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1596,38 +1596,37 @@ c assume the default integer size is 32-
   ])
   AC_LANG_POP(Fortran 77)
   FFLAGS="$ac_octave_save_FFLAGS"
 ])
 dnl
 dnl Check whether Sundials IDA library is configured with double
 dnl precision realtype.
 dnl
-AC_DEFUN([OCTAVE_CHECK_SIZEOF_SUNDIALS_IDA_REALTYPE], [
+AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE], [
+  AC_CHECK_HEADERS([ida/ida.h ida.h])
   AC_CACHE_CHECK([whether Sundials IDA is configured with double precision realtype],
-    [octave_cv_sizeof_ida_double],
-    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[
+    [octave_cv_sundials_realtype_is_double],
+    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if defined (HAVE_IDA_IDA_H)
         #include <ida/ida.h>
         #else
         #include <ida.h>
         #endif
         #include <assert.h>
         ]], [[
-        assert (sizeof (double) == sizeof (realtype));
+        static_assert (sizeof (realtype) == sizeof (double),
+                       "SUNDIALS is not configured for double precision");
       ]])],
-      octave_cv_sizeof_ida_double=yes,
-      octave_cv_sizeof_ida_double=no)
+      octave_cv_sundials_realtype_is_double=yes,
+      octave_cv_sundials_realtype_is_double=no)
   ])
-  if test $octave_cv_sizeof_ida_double = yes; then
-    AC_DEFINE(HAVE_SUNDIALS_IDA_DOUBLE, 1,
-      [Define to 1 if Sundials IDA is configured with realtype as double.])
-  else
-    warn_sundials_ida_double="Sundials IDA library not configured with double precision realtype, ode15i and ode15s will be disabled"
-    OCTAVE_CONFIGURE_WARNING([warn_sundials_ida_double])
+  if test $octave_cv_sundials_realtype_is_double = no; then
+    warn_sundials_realtype="Sundials IDA library not configured with double precision realtype, ode15i and ode15s will be disabled"
+    OCTAVE_CONFIGURE_WARNING([warn_sundials_realtype])
   fi
 ])
 dnl
 dnl Check whether Sundials IDA library is configured with IDAKLU
 dnl enabled.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SUNDIALS_IDAKLU], [
   AC_CHECK_HEADERS([ida/ida_klu.h ida_klu.h])
