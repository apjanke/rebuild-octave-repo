# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1551391585 -3600
#      Thu Feb 28 23:06:25 2019 +0100
# Node ID 92ecc4a97b5cc521042bbf059510c30adeaac945
# Parent  45270d3aa86136861b22b265831195b1694bf194
Properly redraw uixx objects after Qt figure is (un)maximized (bug #53709)

* BaseControl.[f,cc] (BaseControl::BaseControl): Set QObject name for further
  triage.
  (BaseControl::redraw): New method that forces an update of the position
* Panel.cc (Panel::redraw): Force an update of the position.
* ButtonGroup.cc (ButtonGroup::redraw): Ditto.

diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -88,16 +88,17 @@ namespace QtHandles
       }
 
     w->setPalette (p);
   }
 
   BaseControl::BaseControl (const graphics_object& go, QWidget *w)
     : Object (go, w), m_normalizedFont (false), m_keyPressHandlerDefined (false)
   {
+    qObject ()->setObjectName ("UIControl");
     init (w);
   }
 
   void
   BaseControl::init (QWidget *w, bool callBase)
   {
     if (callBase)
       Object::init (w, callBase);
@@ -118,16 +119,22 @@ namespace QtHandles
 
     m_normalizedFont = up.fontunits_is ("normalized");
   }
 
   BaseControl::~BaseControl (void)
   { }
 
   void
+  BaseControl::redraw (void)
+  {
+    update (uicontrol::properties::ID_POSITION);
+  }
+
+  void
   BaseControl::update (int pId)
   {
     uicontrol::properties& up = properties<uicontrol> ();
     QWidget *w = qWidget<QWidget> ();
 
     switch (pId)
       {
       case uicontrol::properties::ID_POSITION:
diff --git a/libgui/graphics/BaseControl.h b/libgui/graphics/BaseControl.h
--- a/libgui/graphics/BaseControl.h
+++ b/libgui/graphics/BaseControl.h
@@ -38,16 +38,17 @@ namespace QtHandles
     ~BaseControl (void);
 
     Container * innerContainer (void) { return nullptr; }
 
     bool eventFilter (QObject *watched, QEvent *e);
 
   protected:
     void init (QWidget *w, bool callBase = false);
+    void redraw (void);
     void update (int pId);
 
   private:
     bool m_normalizedFont;
     bool m_keyPressHandlerDefined;
   };
 
 }
diff --git a/libgui/graphics/ButtonGroup.cc b/libgui/graphics/ButtonGroup.cc
--- a/libgui/graphics/ButtonGroup.cc
+++ b/libgui/graphics/ButtonGroup.cc
@@ -373,16 +373,19 @@ namespace QtHandles
       }
 
     m_blockUpdates = false;
   }
 
   void
   ButtonGroup::redraw (void)
   {
+    update (uibuttongroup::properties::ID_POSITION);
+
+    // FIXME: is it really necessary to update the opengl canvas here?
     Canvas *canvas = m_container->canvas (m_handle);
 
     if (canvas)
       canvas->redraw ();
   }
 
   void
   ButtonGroup::updateLayout (void)
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -325,23 +325,24 @@ namespace QtHandles
   void
   Figure::redraw (void)
   {
     Canvas *canvas = m_container->canvas (m_handle);
 
     if (canvas)
       canvas->redraw ();
 
-    foreach (QFrame *frame,
-             qWidget<QWidget> ()->findChildren<QFrame*> ())
+    foreach (QObject *qobj,
+             qWidget<QWidget> ()->findChildren<QObject*> ())
       {
-        if (frame->objectName () == "UIPanel"
-            || frame->objectName () == "UIButtonGroup")
+        if (qobj->objectName () == "UIPanel"
+            || qobj->objectName () == "UIButtonGroup"
+            || qobj->objectName () == "UIControl")
           {
-            Object *obj = Object::fromQObject (frame);
+            Object *obj = Object::fromQObject (qobj);
 
             if (obj)
               obj->slotRedraw ();
           }
       }
 
     updateFigureToolBarAndMenuBar ();
   }
diff --git a/libgui/graphics/Panel.cc b/libgui/graphics/Panel.cc
--- a/libgui/graphics/Panel.cc
+++ b/libgui/graphics/Panel.cc
@@ -332,16 +332,18 @@ namespace QtHandles
       }
 
     m_blockUpdates = false;
   }
 
   void
   Panel::redraw (void)
   {
+    update (uipanel::properties::ID_POSITION);
+
     Canvas *canvas = m_container->canvas (m_handle);
 
     if (canvas)
       canvas->redraw ();
   }
 
   void
   Panel::updateLayout (void)
