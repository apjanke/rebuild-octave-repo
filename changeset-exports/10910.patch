# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1282687965 14400
#      Tue Aug 24 18:12:45 2010 -0400
# Node ID 40cf7cc4ea624f35d5b4ab82facc6ae93a1fa32e
# Parent  ac43a9df78d63e0a89b4ad2bb86c221c2193bc7e
Properly interpret plotboxaspectratio when 3D objects are viewed as 2D.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2010-08-24  Ben Abbott <bpabbott@mac.com>
+
+	* plot/private/__actual_axis_position__.m, plot/__go_draw_axes__.m:
+	Properly interpret plotboxaspectratio when 3D objects are viewed as 2D.
+	* /plot/colorbar.m: Add demo.
+
 2010-08-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/interp2.m: Don't use bicubic for consistency (can't handle
 	non-grid interpolation).
 
 2010-08-17  Rik <octave@nomad.inbox5.com>
 
 	* general/randi.m: Add IMAX check for class "single" numbers.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} __go_draw_axes__ (@var{h}, @var{plot_stream}, @var{enhanced}, @var{mono})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Author: jwe
 
-function __go_draw_axes__ (h, plot_stream, enhanced, mono, implicit_margin, bg_is_set)
+function __go_draw_axes__ (h, plot_stream, enhanced, mono, bg_is_set)
 
   if (nargin >= 4 && nargin <= 6)
 
     showhiddenhandles = get (0, "showhiddenhandles");
     unwind_protect
       set (0, "showhiddenhandles", "on");
       axis_obj = __get__ (h);
     unwind_protect_cleanup
@@ -46,28 +46,31 @@ function __go_draw_axes__ (h, plot_strea
     endif
 
     nd = __calc_dimensions__ (axis_obj);
     if (strcmpi (axis_obj.plotboxaspectratiomode, "manual"))
       pos = __actual_axis_position__ (axis_obj);
     else
       pos = axis_obj.position;
     endif
-    pos(1:2) = pos(1:2) - implicit_margin .* [0.75, 0.5];
     if (__gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
-      if (nd == 2)
+      if (nd == 2 || all (mod (axis_obj.view, 90) == 0))
         x = [1, 1];
       else
         ## 3D plots need to be sized down to fit in the window.
         x = 1.0 ./ sqrt([2, 2.5]);
       endif
-      fprintf (plot_stream, "set tmargin screen %.15g;\n", pos(2)+pos(4)/2+x(2)*pos(4)/2);
-      fprintf (plot_stream, "set bmargin screen %.15g;\n", pos(2)+pos(4)/2-x(2)*pos(4)/2);
-      fprintf (plot_stream, "set lmargin screen %.15g;\n", pos(1)+pos(3)/2-x(1)*pos(3)/2);
-      fprintf (plot_stream, "set rmargin screen %.15g;\n", pos(1)+pos(3)/2+x(1)*pos(3)/2);
+      fprintf (plot_stream, "set tmargin screen %.15g;\n",
+               pos(2)+pos(4)/2+x(2)*pos(4)/2);
+      fprintf (plot_stream, "set bmargin screen %.15g;\n",
+               pos(2)+pos(4)/2-x(2)*pos(4)/2);
+      fprintf (plot_stream, "set lmargin screen %.15g;\n",
+               pos(1)+pos(3)/2-x(1)*pos(3)/2);
+      fprintf (plot_stream, "set rmargin screen %.15g;\n",
+               pos(1)+pos(3)/2+x(1)*pos(3)/2);
     else
       ## FIXME -- nothing should change for gnuplot 4.2.x.
       fprintf (plot_stream, "set tmargin 0;\n");
       fprintf (plot_stream, "set bmargin 0;\n");
       fprintf (plot_stream, "set lmargin 0;\n");
       fprintf (plot_stream, "set rmargin 0;\n");
 
       fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
@@ -96,17 +99,18 @@ function __go_draw_axes__ (h, plot_strea
       if (isempty (t.string))
         fputs (plot_stream, "unset title;\n");
       else
         [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
         fontspec = create_fontspec (f, s, gnuplot_term);
         fprintf (plot_stream, "set title \"%s\" %s %s",
                  undo_string_escapes (tt), fontspec,
                  __do_enhanced_option__ (enhanced, t));
-        if (nd == 3 && __gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
+        if (nd == 3
+            && __gnuplot_has_feature__ ("screen_coordinates_for_{lrtb}margin"))
           fprintf (plot_stream, " offset screen 0, screen %.3f;\n", pos(4)/5);
         else
           fprintf (plot_stream, ";\n");
         endif
       endif
     endif
 
     if (! isempty (axis_obj.xlabel))
diff --git a/scripts/plot/colorbar.m b/scripts/plot/colorbar.m
--- a/scripts/plot/colorbar.m
+++ b/scripts/plot/colorbar.m
@@ -570,16 +570,23 @@ endfunction
 %!demo
 %! clf
 %! plot([0, 2])
 %! colorbar ("eastoutside")
 %! axis square
 
 %!demo
 %! clf
+%! pcolor (peaks (20))
+%! shading ("interp")
+%! axis ("tight", "square")
+%! colorbar ()
+
+%!demo
+%! clf
 %! plot([0, 2])
 %! colorbar ("east")
 %! axis equal
 
 %!demo
 %! clf
 %! plot([0, 2])
 %! colorbar ("eastoutside")
diff --git a/scripts/plot/private/__actual_axis_position__.m b/scripts/plot/private/__actual_axis_position__.m
--- a/scripts/plot/private/__actual_axis_position__.m
+++ b/scripts/plot/private/__actual_axis_position__.m
@@ -26,23 +26,23 @@
 
 function pos = __actual_axis_position__ (axis_obj)
   if (ishandle (axis_obj))
     axis_obj = get (axis_obj);
   endif
 
   ## When using {rltb}margin, Gnuplot does not handle the specified
   ## aspect ratio properly, so handle it here.
-  if (__calc_dimensions__ (axis_obj) == 3)
+  if (__calc_dimensions__ (axis_obj) == 2 || all (mod (axis_obj.view, 90) == 0))
+    aspect_ratio_2d = axis_obj.plotboxaspectratio(1:2);
+  else
     ## FIXME -- this works for "axis square", but has not been
     ##          thoroughly tested for other aspect ratios.
     aspect_ratio_2d = [max(axis_obj.plotboxaspectratio(1:2)), ...
                            axis_obj.plotboxaspectratio(3)/sqrt(2)];
-  else
-    aspect_ratio_2d = axis_obj.plotboxaspectratio(1:2);
   endif
   orig_fig_units = get (axis_obj.parent, "units");
   orig_fig_position = get (axis_obj.parent, "position");
   unwind_protect
     set (axis_obj.parent, "units", "pixels")
     fig_position = get (axis_obj.parent, "position");
     pos_in_pixels = axis_obj.position .* fig_position([3, 4, 3, 4]);
     orig_aspect_ratio_2d = pos_in_pixels(3:4);
