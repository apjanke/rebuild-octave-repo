# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546633091 28800
#      Fri Jan 04 12:18:11 2019 -0800
# Branch stable
# Node ID 3e43775ab21c7341cd6b2473766c7254037b86a3
# Parent  6bfed6e4e9e96df72d7e00b4eb30403e1a16f0d5
getopt-wrapper.c: Fix static analyzer detected issues (bug #55347).

* getopt-wrapper.c: Check result of malloc.  If there is not enough memory even
to start Octave then abort.

diff --git a/liboctave/wrappers/getopt-wrapper.c b/liboctave/wrappers/getopt-wrapper.c
--- a/liboctave/wrappers/getopt-wrapper.c
+++ b/liboctave/wrappers/getopt-wrapper.c
@@ -45,16 +45,21 @@ make_option_struct (const struct octave_
   while (p->name)
     {
       n++;
       p++;
     }
 
   retval = (struct option *) malloc ((n+1) * sizeof (struct option));
 
+  // If we don't have enough memory even to start Octave
+  // then we might as well quit now.
+  if (! retval)
+    abort ();
+
   p = opts;
   q = retval;
   while (p->name)
     {
       q->name = p->name;
 
       switch (p->has_arg)
         {
