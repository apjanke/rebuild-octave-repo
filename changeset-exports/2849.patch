# HG changeset patch
# User jwe
# Date 859584807 0
#      Fri Mar 28 21:33:27 1997 +0000
# Node ID 5338beb20eb95b3d4ae2b176307110d0b744ee66
# Parent  170b53ff36acc7df4e10cbe505300da4ee464cf8
[project @ 1997-03-28 21:33:27 by jwe]

diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -827,16 +827,51 @@ lookup_by_name (const string& nm, int ex
 {
   symbol_record *sym_rec = curr_sym_tab->lookup (nm, 1, 0);
 
   lookup (sym_rec, exec_script);
 
   return sym_rec;
 }
 
+octave_value
+get_global_value (const string& nm)
+{
+  octave_value retval;
+
+  symbol_record *sr = global_sym_tab->lookup (nm);
+
+  if (sr)
+    {
+      // Do something with the value in foo.
+
+      tree_fvc *sr_def = sr->def ();
+
+      if (sr_def)
+	retval  = sr_def->eval (1);
+      else
+	error ("get_global_by_name: undefined symbol `%s'", nm.c_str ());
+    }
+  else
+    error ("get_global_by_name: unknown symbol `%s'", nm.c_str ());
+
+  return retval;
+}
+
+void
+set_global_value (const string& nm, const octave_value& val)
+{
+  symbol_record *sr = global_sym_tab->lookup (nm, 1);
+
+  if (sr)
+    sr->define (val);
+  else
+    panic_impossible ();
+}
+
 string
 get_help_from_file (const string& path)
 {
   string retval;
 
   if (! path.empty ())
     {
       FILE *fptr = fopen (path.c_str (), "r");
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -102,16 +102,20 @@ struct builtin_function
 };
 
 extern void initialize_symbol_tables (void);
 
 extern bool lookup (symbol_record *s, int exec_script = 1);
 
 extern symbol_record *lookup_by_name (const string& nm, int exec_script = 1);
 
+extern octave_value get_global_value (const string& nm);
+
+extern void set_global_value (const string& nm, const octave_value& val);
+
 extern string get_help_from_file (const string& f);
 
 extern string builtin_string_variable (const string&);
 extern int builtin_real_scalar_variable (const string&, double&);
 extern octave_value builtin_any_variable (const string&);
 
 extern void link_to_global_variable (symbol_record *sr);
 extern void link_to_builtin_variable (symbol_record *sr);
