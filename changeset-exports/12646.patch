# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1304559845 14400
#      Wed May 04 21:44:05 2011 -0400
# Branch stable
# Node ID eaba9d671fb7e9f5dba15fe371b246e901157036
# Parent  d3ccd2e37de62b7239e65ec44b9bd3196c5c5a0b
Allow transpose to work for scalar structs (bug #33218)

* op-struct.cc (oct_op_scalar_transpose): New function.
(install_struct_ops): Install transpose and hermitian operators for
scalar structs.

diff --git a/src/OPERATORS/op-struct.cc b/src/OPERATORS/op-struct.cc
--- a/src/OPERATORS/op-struct.cc
+++ b/src/OPERATORS/op-struct.cc
@@ -29,29 +29,36 @@ along with Octave; see the file COPYING.
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-struct.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
 
 // struct ops.
 
-DEFUNOP (transpose, cell)
+DEFUNOP (transpose, struct)
 {
   CAST_UNOP_ARG (const octave_struct&);
 
   if (v.ndims () > 2)
     {
       error ("transpose not defined for N-d objects");
       return octave_value ();
     }
   else
     return octave_value (v.map_value().transpose ());
 }
 
+DEFUNOP (scalar_transpose, scalar_struct)
+{
+  CAST_UNOP_ARG (const octave_scalar_struct&);
+
+  return octave_value (v.scalar_map_value ());
+}
+
 DEFNDCATOP_FN (struct_struct, struct, struct, map, map, concat)
 
 static octave_value
 oct_catop_struct_matrix (octave_base_value& a1, const octave_base_value& a2,
                          const Array<octave_idx_type>&)
 {
   octave_value retval;
   CAST_BINOP_ARGS (const octave_struct&, const octave_matrix&);
@@ -80,12 +87,15 @@ oct_catop_matrix_struct (octave_base_val
 }
 
 void
 install_struct_ops (void)
 {
   INSTALL_UNOP (op_transpose, octave_struct, transpose);
   INSTALL_UNOP (op_hermitian, octave_struct, transpose);
 
+  INSTALL_UNOP (op_transpose, octave_scalar_struct, scalar_transpose);
+  INSTALL_UNOP (op_hermitian, octave_scalar_struct, scalar_transpose);
+
   INSTALL_CATOP (octave_struct, octave_struct, struct_struct);
   INSTALL_CATOP (octave_struct, octave_matrix, struct_matrix);
   INSTALL_CATOP (octave_matrix, octave_struct, matrix_struct);
 }
