# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1376333227 -7200
#      Mon Aug 12 20:47:07 2013 +0200
# Node ID 33ce8c381f2c97fe452068fef14f3855af70dce8
# Parent  251807f3cdc1a321bd5e9d5ef5fdacb5f93291d0
make history widget respect history_control settings (bug #39728)

* input.cc(octave_gets): append entry to the history widget only if really
  something has been added to the history
* oct-hist.cc(edit_history_add_hist,octave_history_write_timestamp):
  append entry to the history widget only if really something has benn added
  to the history
* cmd-hist.cc(class gnu_history): do_add with boolean return value,
  (do_add): return true if something has been added to the history via
  ::octave_add_history, false otherwise,
  (command_history::add): now returns the return value of do_add,
  (command_history::do_add): return false
* cmd-hist.h: add and do_add now with boolean return value

diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -267,19 +267,17 @@ octave_base_reader::octave_gets (bool& e
       retval = last_debugging_command;
       history_skip_auto_repeated_debugging_command = true;
     }
 
   if (retval != "\n")
     {
       if (! history_skip_auto_repeated_debugging_command)
         {
-          command_history::add (retval);
-
-          if (! command_history::ignoring_entries ())
+          if (command_history::add (retval))
             octave_link::append_history (retval);
         }
 
       octave_diary << retval;
 
       if (retval[retval.length () - 1] != '\n')
         octave_diary << "\n";
 
diff --git a/libinterp/corefcn/oct-hist.cc b/libinterp/corefcn/oct-hist.cc
--- a/libinterp/corefcn/oct-hist.cc
+++ b/libinterp/corefcn/oct-hist.cc
@@ -323,20 +323,18 @@ edit_history_add_hist (const std::string
       std::string tmp = line;
 
       int len = tmp.length ();
 
       if (len > 0 && tmp[len-1] == '\n')
         tmp.resize (len - 1);
 
       if (! tmp.empty ())
-        {
-          command_history::add (tmp);
+        if (command_history::add (tmp))
           octave_link::append_history (tmp);
-        }
     }
 }
 
 static bool
 get_int_arg (const octave_value& arg, int& val)
 {
   bool ok = true;
 
@@ -575,20 +573,18 @@ initialize_history (bool read_history_fi
 void
 octave_history_write_timestamp (void)
 {
   octave_localtime now;
 
   std::string timestamp = now.strftime (Vhistory_timestamp_format_string);
 
   if (! timestamp.empty ())
-    {
-      command_history::add (timestamp); 
+    if (command_history::add (timestamp))
       octave_link::append_history (timestamp);
-   }
 }
 
 DEFUN (edit_history, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} edit_history\n\
 @deftypefnx {Command} {} edit_history @var{cmd_number}\n\
 @deftypefnx {Command} {} edit_history @var{first} @var{last}\n\
 Edit the history list using the editor named by the variable\n\
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -60,17 +60,17 @@ public:
     : command_history (), mark (0) { }
 
   ~gnu_history (void) { }
 
   void do_process_histcontrol (const std::string&);
 
   std::string do_histcontrol (void) const;
 
-  void do_add (const std::string&);
+  bool do_add (const std::string&);
 
   void do_remove (int);
 
   void do_clear (void);
 
   int do_where (void) const;
 
   int do_length (void) const;
@@ -179,33 +179,36 @@ gnu_history::do_histcontrol (void) const
         retval.append (":");
 
       retval.append ("erasedups");
     }
 
   return retval;
 }
 
-void
+bool
 gnu_history::do_add (const std::string& s)
 {
   if (! do_ignoring_entries ())
     {
       if (s.empty ()
           || (s.length () == 1 && (s[0] == '\r' || s[0] == '\n')))
-        return;
+        return false;
      
       // Strip newline before adding to list
       std::string stmp = s;
       int stmp_len = stmp.length ();
       if (stmp[stmp_len - 1] == '\n')
         stmp.resize (stmp_len - 1);
 
-      lines_this_session += ::octave_add_history (stmp.c_str (), history_control);
+      int added = ::octave_add_history (stmp.c_str (), history_control);
+      lines_this_session += added;
+      return (added > 0) ? true : false;
     }
+  return false;
 }
 
 void
 gnu_history::do_remove (int n)
 {
   ::octave_remove_history (n);
 }
 
@@ -582,21 +585,22 @@ command_history::ignore_entries (bool fl
 
 bool
 command_history::ignoring_entries (void)
 {
   return (instance_ok ())
     ? instance->do_ignoring_entries () : false;
 }
 
-void
+bool
 command_history::add (const std::string& s)
 {
   if (instance_ok ())
-    instance->do_add (s);
+    return instance->do_add (s);
+  return false;
 }
 
 void
 command_history::remove (int n)
 {
   if (instance_ok ())
     instance->do_remove (n);
 }
@@ -813,19 +817,20 @@ command_history::do_ignore_entries (bool
 }
 
 bool
 command_history::do_ignoring_entries (void) const
 {
   return ignoring_additions;
 }
 
-void
+bool
 command_history::do_add (const std::string&)
 {
+  return false;
 }
 
 void
 command_history::do_remove (int)
 {
 }
 
 void
diff --git a/liboctave/util/cmd-hist.h b/liboctave/util/cmd-hist.h
--- a/liboctave/util/cmd-hist.h
+++ b/liboctave/util/cmd-hist.h
@@ -56,17 +56,17 @@ public:
   static void set_size (int);
 
   static int size (void);
 
   static void ignore_entries (bool = true);
 
   static bool ignoring_entries (void);
 
-  static void add (const std::string&);
+  static bool add (const std::string&);
 
   static void remove (int);
 
   static void clear (void);
 
   static int where (void);
 
   static int length (void);
@@ -151,17 +151,17 @@ protected:
   virtual void do_set_size (int);
 
   virtual int do_size (void) const;
 
   virtual void do_ignore_entries (bool);
 
   virtual bool do_ignoring_entries (void) const;
 
-  virtual void do_add (const std::string&);
+  virtual bool do_add (const std::string&);
 
   virtual void do_remove (int);
 
   virtual void do_clear (void);
 
   virtual int do_where (void) const;
 
   virtual int do_length (void) const;
