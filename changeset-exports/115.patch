# HG changeset patch
# User jwe
# Date 748512906 0
#      Mon Sep 20 08:15:06 1993 +0000
# Node ID cb9692aa9245175cb142172b5a27abdaa6c30425
# Parent  a20da3b44f08ab1448bb193664a979fce5646fa1
[project @ 1993-09-20 08:15:06 by jwe]
(symbol_table::list (int&)): Make sure count is initialized to zero.
(symbol_table::var_list (int&)): Ditto.
(symbol_table::fcn_list (int&)): Ditto.

diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -717,22 +717,22 @@ symbol_table::fcn_list (void)
 {
   int count;
   return fcn_list (count);
 }
 
 char **
 symbol_table::list (int& count)
 {
+  count = 0;
   int n = size ();
   if (n == 0)
     return (char **) NULL;
 
   char **symbols = new char * [n+1];
-  count = 0;
   for (int i = 0; i < HASH_TABLE_SIZE; i++)
     {
       symbol_record *ptr = table[i].next ();
       while (ptr != (symbol_record *) NULL)
 	{
 	  assert (count < n);
 	  symbols[count++] = strsave (ptr->name ());
 	  ptr = ptr->next ();
@@ -740,22 +740,22 @@ symbol_table::list (int& count)
     }
   symbols[count] = (char *) NULL;
   return symbols;
 }
 
 char **
 symbol_table::var_list (int& count)
 {
+  count = 0;
   int n = size ();
   if (n == 0)
     return (char **) NULL;
 
   char **symbols = new char * [n+1];
-  count = 0;
   for (int i = 0; i < HASH_TABLE_SIZE; i++)
     {
       symbol_record *ptr = table[i].next ();
       while (ptr != (symbol_record *) NULL)
 	{
 	  assert (count < n);
 	  if (ptr->is_variable ())
 	    symbols[count++] = strsave (ptr->name ());
@@ -764,22 +764,22 @@ symbol_table::var_list (int& count)
     }
   symbols[count] = (char *) NULL;
   return symbols;
 }
 
 char **
 symbol_table::fcn_list (int& count)
 {
+  count = 0;
   int n = size ();
   if (n == 0)
     return (char **) NULL;
 
   char **symbols = new char * [n+1];
-  count = 0;
   for (int i = 0; i < HASH_TABLE_SIZE; i++)
     {
       symbol_record *ptr = table[i].next ();
       while (ptr != (symbol_record *) NULL)
 	{
 	  assert (count < n);
 	  if (ptr->is_function ())
 	    symbols[count++] = strsave (ptr->name ());
