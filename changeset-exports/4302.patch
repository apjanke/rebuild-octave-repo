# HG changeset patch
# User jwe
# Date 1043272943 0
#      Wed Jan 22 22:02:23 2003 +0000
# Node ID ebc2d8e4968b3fdd621cd4114f086124cba9b94b
# Parent  309ef552d7c6267b2771bc7c407fa12c13134338
[project @ 2003-01-22 22:02:23 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2003-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makeconf.in: Fix typo in previous change.
+
 2003-01-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makeconf.in (MKOCTFILE_INCFLAGS): Skip -I$(includedir) if
 	$(includedir) is /usr/include.
 
 2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* Makeconf.in (SED): Export to subshells.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -277,17 +277,17 @@ fcnfilepath = @fcnfilepath@
 # Where Octave will search to find image files.es.
 imagedir = @imagedir@
 imagepath = @imagepath@
 
 # The type of computer we are running on.
 canonical_host_type = @canonical_host_type@
 
 # The -I flags to use for the mkoctfile script.
-ifeq ($(includedir,/usr/include)
+ifeq ($(includedir),/usr/include)
  MKOCTFILE_INCFLAGS = \
     -I$(octincludedir) -I$(octincludedir)/octave
 else
  MKOCTFILE_INCFLAGS = \
     -I$(octincludedir) -I$(octincludedir)/octave -I$(includedir)
 endif
 
 # The -L flags to use for the mkoctfile scrip (for --link-stand-alone)
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+2003-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* misc/quit.h (BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_1,
+	BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_2): New macros.
+
 2003-01-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* odessa/odessa_rscom.f (ODESSA_RSCOM): Fix apparent typo (LODE2
 	should probably be LIODE2).
 
 	* Makerules.in (clean, mostlyclean): Also remove *.d.
 
 	* misc/quit.cc: Add std:: qualifiers to memcpy calls.
diff --git a/libcruft/misc/quit.h b/libcruft/misc/quit.h
--- a/libcruft/misc/quit.h
+++ b/libcruft/misc/quit.h
@@ -82,27 +82,49 @@ extern void octave_throw_bad_alloc (void
       if (octave_interrupt_state) \
         { \
           octave_interrupt_state = 0; \
           octave_throw_interrupt_exception (); \
         } \
     } \
   while (0)
 
+/* Normally, you just want to use
+
+     BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+     ... some code that calls a "foreign" function ...
+     END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+
+   but sometimes it is useful to do something like
+
+     BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_1;
+     ... custom code here, normally ending in a call to
+         octave_throw_interrupt_exception ...
+     BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_2;
+
+   so that you can perform extra clean up operations before throwing
+   the interrupt exception.  */
+
 #define BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE \
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_1; \
+  octave_throw_interrupt_exception (); \
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_2
+
+#define BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_1 \
   do \
     { \
       octave_jmp_buf saved_context; \
  \
       octave_save_current_context ((char *) saved_context); \
  \
       if (octave_set_current_context) \
 	{ \
-	  octave_restore_current_context ((char *) saved_context); \
-	  octave_throw_interrupt_exception (); \
+	  octave_restore_current_context ((char *) saved_context)
+
+#define BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_2 \
 	} \
       else \
 	{ \
 	  octave_interrupt_immediately++
 
 #define END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE \
 	  octave_interrupt_immediately--; \
           octave_restore_current_context ((char *) saved_context); \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2003-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* cutils.c (octave_raw_vsnprintf): New function.
+	* utils.cc (octave_snprintf): Move here from cutils.c.
+	(octave_Vsnprintf): Likewise.  Allow octave_raw_vsnprintf to be
+	interrupted.
+	* utils.h (octave_vsnprintf, octave_snprintf): No longer extern "C".
+
 2003-01-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-loop.cc (tree_complex_for_command::eval): Fix typo.
 
 2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
 
 	* mk-oct-links: Use $SED if set.
 	* mkbuiltins: Likewise.
diff --git a/src/cutils.c b/src/cutils.c
--- a/src/cutils.c
+++ b/src/cutils.c
@@ -114,89 +114,19 @@ octave_strcasecmp (const char *s1, const
 }
 
 int
 octave_strncasecmp (const char *s1, const char *s2, size_t n)
 {
   return strncasecmp (s1, s2, n);
 }
 
-/* XXX FIXME XXX -- we really need a configure test for this.  */
-
-#if defined __GNUC__ && __GNUC__ >= 3
-#define HAVE_C99_VSNPRINTF 1
-#endif
-
-/* We manage storage.  User should not free it, and its contents are
-   only valid until next call to vsnprintf.  */
-
-char *
-octave_vsnprintf (const char *fmt, va_list args)
+int
+octave_raw_vsnprintf (char *buf, size_t n, const char *fmt, va_list args)
 {
-  static size_t size = 100;
-
-  static char *buf = 0;
-
-  int nchars;
-
-  if (! buf)
-    buf = malloc (size);
-
-  if (! buf)
-    return 0;
-
-#if defined (HAVE_C99_VSNPRINTF)
-
-  nchars = vsnprintf (buf, size, fmt, args);
-
-  if (nchars >= size)
-    {
-      size = nchars + 1;
-      buf = realloc (buf, size);
-
-      if (buf)
-	vsnprintf (buf, size, fmt, args);
-    }
-
-#else
-
-  while (1)
-    {
-      nchars = vsnprintf (buf, size, fmt, args);
-
-      if (nchars > -1)
-       return buf;
-      else
-       {
-         size *= 2;
-
-         buf = realloc (buf, size);
-
-         if (! buf)
-           return 0;
-       }
-    }
-
-#endif
-
-  return buf;
-}
-
-char *
-octave_snprintf (const char *fmt, ...)
-{
-  char *retval = 0;
-
-  va_list args;
-  va_start (args, fmt);
-
-  retval = octave_vsnprintf (fmt, args);
-
-  va_end (args);
-
-  return retval;
+  return vsnprintf (buf, n, fmt, args);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -39,16 +39,18 @@ Software Foundation, 59 Temple Place - S
 #include <unistd.h>
 #endif
 
 // Include setjmp.h, not csetjmp since the latter might only define
 // the ANSI standard C interface.
 
 #include <setjmp.h>
 
+#include "quit.h"
+
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-sstream.h"
 #include "oct-cmplx.h"
 #include "oct-env.h"
 #include "pathsearch.h"
 #include "str-vec.h"
@@ -853,17 +855,23 @@ octave_vformat (std::ostream& os, const 
 {
   int retval = -1;
 
 #if defined (__GNUG__) && !CXX_ISO_COMPLIANT_LIBRARY
 
   std::streambuf *sb = os.rdbuf ();
 
   if (sb)
-    retval = sb->vform (fmt, args);
+    {
+      BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+
+      retval = sb->vform (fmt, args);
+
+      END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+    }
 
 #else
 
   char *s = octave_vsnprintf (fmt, args);
 
   if (s)
     {
       os << s;
@@ -871,16 +879,125 @@ octave_vformat (std::ostream& os, const 
       retval = strlen (s);
     }
 
 #endif
 
   return retval;
 }
 
+/* XXX FIXME XXX -- we really need a configure test for this.  */
+
+#if defined __GNUC__ && __GNUC__ >= 3
+#define HAVE_C99_VSNPRINTF 1
+#endif
+
+// We manage storage.  User should not free it, and its contents are
+// only valid until next call to vsnprintf.
+
+// Interrupts might happen if someone makes a call with something that
+// will require a very large buffer.  If we are interrupted in that
+// case, we should make the buffer size smaller for the next call.
+
+#define BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF \
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_1; \
+  delete [] buf; \
+  buf = 0; \
+  size = initial_size; \
+  octave_throw_interrupt_exception (); \
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_2
+
+char *
+octave_vsnprintf (const char *fmt, va_list args)
+{
+  static const size_t initial_size = 100;
+
+  static size_t size = initial_size;
+
+  static char *buf = 0;
+
+  size_t nchars;
+
+  if (! buf)
+    buf = new char [size];
+
+  if (! buf)
+    return 0;
+
+#if defined (HAVE_C99_VSNPRINTF)
+
+  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
+
+  nchars = octave_raw_vsnprintf (buf, size, fmt, args);
+
+  END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+
+  if (nchars >= size)
+    {
+      size = nchars + 1;
+
+      delete [] buf;
+
+      buf = new char [size];
+
+      if (buf)
+	{
+	  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
+
+	  vsnprintf (buf, size, fmt, args);
+
+	  END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+	}
+    }
+
+#else
+
+  while (1)
+    {
+      BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
+
+      nchars = octave_raw_vsnprintf (buf, size, fmt, args);
+
+      END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
+
+      if (nchars > -1)
+       return buf;
+      else
+       {
+	 delete [] buf;
+
+         size *= 2;
+
+	 buf = new char [size];
+
+         if (! buf)
+           return 0;
+       }
+    }
+
+#endif
+
+  return buf;
+}
+
+char *
+octave_snprintf (const char *fmt, ...)
+{
+  char *retval = 0;
+
+  va_list args;
+  va_start (args, fmt);
+
+  retval = octave_vsnprintf (fmt, args);
+
+  va_end (args);
+
+  return retval;
+}
+
 void
 octave_sleep (double seconds)
 {
   if (seconds > 0)
     {
       double t;
 
       unsigned int usec
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -74,29 +74,32 @@ get_dimensions (const octave_value& a,
 		const char *warn_for, int& nr, int& nc);
 
 extern int
 octave_format (std::ostream& os, const char *fmt, ...);
 
 extern int
 octave_vformat (std::ostream& os, const char *fmt, va_list args);
 
+extern char *octave_vsnprintf (const char *fmt, va_list args);
+
+extern char *octave_snprintf (const char *fmt, ...);
+
 extern void octave_sleep (double seconds);
 
 extern "C" void octave_sleep (unsigned int seconds);
 
 extern "C" void octave_usleep (unsigned int useconds);
 
 extern "C" int octave_strcasecmp (const char *s1, const char *s2);
 
 extern "C" int octave_strncasecmp (const char *s1, const char *s2, size_t n);
 
-extern "C" char *octave_snprintf (const char *fmt, ...);
-
-extern "C" char *octave_vsnprintf (const char *fmt, va_list args);
+extern "C" int octave_raw_vsnprintf (char *buf, size_t n, const char *fmt,
+				     va_list args);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
