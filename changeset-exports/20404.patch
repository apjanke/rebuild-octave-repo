# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438098655 25200
#      Tue Jul 28 08:50:55 2015 -0700
# Node ID d8535ec99c86fb622b10c3f79d38584a3ae2dca6
# Parent  be6720faab96feaaa383b9f93905c3a06c3a1002
Fix hang when using errorbar with empty dataset (bug #45554).

* __errplot__.m: Use concatenation to append new errorbar plots to retval,
rather than assignment which can fail if the RHS is empty.

* __errplot__(__do_errplot__): Determine number of plots by checking number of
columns in dataset, but only if dataset is not empty (row is zero for example).
Only process a legend key if the number of plots is greater than 0.

diff --git a/scripts/plot/draw/private/__errplot__.m b/scripts/plot/draw/private/__errplot__.m
--- a/scripts/plot/draw/private/__errplot__.m
+++ b/scripts/plot/draw/private/__errplot__.m
@@ -43,17 +43,17 @@ function retval = __errplot__ (caller, h
       arg = arg(:);
     endif
     sz = size (arg);
     ndata = 1;
     data{ndata} = arg;
     while (k <= nargs)
       arg = varargin{k++};
       if (ischar (arg) || iscellstr (arg))
-        retval(end+1,1) = __do_errplot__(arg, hax, data{1:ndata});
+        retval = [retval; __do_errplot__(arg, hax, data{1:ndata})];
         break;
       endif
       if (! isnumeric (arg))
         error ("%s: data argument %d must be numeric", caller, k-1);
       endif
       if (isvector (arg))
         arg = arg(:);
       endif
@@ -95,17 +95,17 @@ function h = __do_errplot__ (fstr, hax, 
       ifmt = "boxy";
     case "#~>"
       ifmt = "boxxy";
     otherwise
       ifmt = "yerr";
   endswitch
 
   h = [];
-  nplots = columns (varargin{1});
+  nplots = ifelse (isempty (varargin{1}), 0, columns (varargin{1}));
   for i = 1:nplots
 
     if (isempty (fmt.color))
       lc = __next_line_color__ ();
     else
       lc = fmt.color ();
     endif
     if (isempty (fmt.marker) && isempty (fmt.linestyle))
@@ -246,17 +246,17 @@ function h = __do_errplot__ (fstr, hax, 
     addlistener (hax, "xscale", fcn);
     addlistener (hax, "yscale", fcn);
 
     update_data (hg, [], hl);
 
   endfor
 
   ## Process legend key
-  if (! isempty (fmt.key))
+  if (! isempty (fmt.key) && nplots > 0)
     hlegend = [];
     fkids = get (gcf (), "children");
     for i = 1 : numel (fkids)
       if (   strcmp (get (fkids(i), "type"), "axes")
           && strcmp (get (fkids(i), "tag"), "legend"))
         udata = get (fkids(i), "userdata");
         if (! isempty (intersect (udata.handle, gca ())))
           hlegend = fkids(i);
