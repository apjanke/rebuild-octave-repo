# HG changeset patch
# User jwe
# Date 1179331916 0
#      Wed May 16 16:11:56 2007 +0000
# Node ID 1b8daf8c03978394db36dd2be1050ec848eaf82a
# Parent  0fcc8d65b571c2d8b396ed2f1ec5fa201c1f68cd
[project @ 2007-05-16 16:11:55 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-05-16  Søren Hauberg  <soren@hauberg.org>
+
+	* general/sub2ind.m, general/ind2sub.m: Doc fix.
+
 2007-05-16  John W. Eaton  <jwe@octave.org>
 
 	* general/logspace.m: Return second arg if fewer than two values
 	are requested.
 
 2007-05-14  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_figure__.m: Ensure that a reset commands starts
diff --git a/scripts/general/ind2sub.m b/scripts/general/ind2sub.m
--- a/scripts/general/ind2sub.m
+++ b/scripts/general/ind2sub.m
@@ -15,16 +15,25 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{s1}, @var{s2}, @dots{}, @var{sN}] =} ind2sub (@var{dims}, @var{ind})
 ## Convert a linear index into subscripts.
+##
+## The following example shows how to convert the linear index @code{8}
+## in a 3-by-3 matrix into a subscript.
+##
+## @example
+## [r, c] = ind2sub ([3, 3], 8)
+## @result{} r =  2
+## c =  3
+## @end example
 ## @seealso{sub2ind}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Adapted-by: jwe
 
 function varargout = ind2sub (dims, ind)
 
diff --git a/scripts/general/sub2ind.m b/scripts/general/sub2ind.m
--- a/scripts/general/sub2ind.m
+++ b/scripts/general/sub2ind.m
@@ -16,16 +16,24 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{ind} =} sub2ind (@var{dims}, @var{i}, @var{j})
 ## @deftypefnx {Function File} {@var{ind} =} sub2ind (@var{dims}, @var{s1}, @var{s2}, @dots{}, @var{sN})
 ## Convert subscripts into a linear index.
+##
+## The following example shows how to convert the two-dimensional
+## index @code{(2,3)} of a 3-by-3 matrix to a linear index.
+##
+## @example
+## linear_index = sub2ind ([3, 3], 2, 3)
+## @result{} 8
+## @end example
 ## @seealso{ind2sub}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Adapted-by: jwe
 
 function ind = sub2ind (dims, varargin)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-05-16  Søren Hauberg  <soren@hauberg.org>
+
+	* ov.cc (Fsubsref, Fsubsasgn): Doc fix.
+
 2007-05-16  John W. Eaton  <jwe@octave.org>
 
 	* load-path.h (load_path::sys_path): New static data member.
 	(load_path::system_path): New static function.
 	(load_path::do_system_path): New function.
 	* load-path.cc (Vsystem_path): Delete.
 	(load_path::do_initialize): Use sys_path, not Vsystem_path.
 	(Fpathdef): Call load_path::system_path instead of using Vsystem_path.
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -1946,16 +1946,35 @@ DEFUN (subsref, args, nargout,
 Perform the subscripted element selection operation according to\n\
 the subscript specified by @var{idx}.\n\
 \n\
 The subscript @var{idx} is expected to be a structure array with\n\
 fields @samp{type} and @samp{subs}.  Valid values for @samp{type}\n\
 are @samp{\"()\"}, @samp{\"@{@}\"}, and @samp{\".\"}.\n\
 The @samp{subs} field may be either @samp{\":\"} or a cell array\n\
 of index values.\n\
+\n\
+The following example shows how to extract the two first columns of\n\
+a matrix\n\
+\n\
+@example\n\
+val = magic(3)\n\
+     @result{} val = [ 8   1   6\n\
+                3   5   7\n\
+                4   9   2 ]\n\
+idx.type = \"()\";\n\
+idx.subs = @{\":\", 1:2@};\n\
+subsref(val, idx)\n\
+     @result{} [ 8   1 \n\
+          3   5 \n\
+          4   9 ]\n\
+@end example\n\
+\n\
+@noindent\n\
+Note that this is the same as writing @code{val(:,1:2)}.\n\
 @seealso{subsasgn, substruct}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 2)
     {
       std::string type;
@@ -1978,16 +1997,31 @@ DEFUN (subsasgn, args, ,
 Perform the subscripted assignment operation according to\n\
 the subscript specified by @var{idx}.\n\
 \n\
 The subscript @var{idx} is expected to be a structure array with\n\
 fields @samp{type} and @samp{subs}.  Valid values for @samp{type}\n\
 are @samp{\"()\"}, @samp{\"@{@}\"}, and @samp{\".\"}.\n\
 The @samp{subs} field may be either @samp{\":\"} or a cell array\n\
 of index values.\n\
+\n\
+The following example shows how to set the two first columns of a\n\
+3-by-3 matrix to zero.\n\
+\n\
+@example\n\
+val = magic(3);\n\
+idx.type = \"()\";\n\
+idx.subs = @{\":\", 1:2@};\n\
+subsasgn (val, idx, 0)\n\
+     @result{} [ 0   0   6\n\
+          0   0   7\n\
+          0   0   2 ]\n\
+@end example\n\
+\n\
+Note that this is the same as writing @code{val(:,1:2) = 0}.\n\
 @seealso{subsref, substruct}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 3)
     {
       std::string type;
