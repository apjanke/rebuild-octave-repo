# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1274914262 25200
#      Wed May 26 15:51:02 2010 -0700
# Node ID 4cdc43c095c58f71e667d6b43fe7a8899d6ac89a
# Parent  8baff2aceabc0fe13acae052238c28586187e0e6
Initialize ARPACK starting vector in svds test code. (bug #29721)

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-05-26  Rik <octave@nomad.inbox5.com>
+        * sparse/svds.m: Initialize ARPACK starting vector in svds test code.
+        Bug #29721.
+
 2010-05-25  Ben Abbott <bpabbott@mac.com>
 
 	* polynomial/spline.m: Ignore NaNs within input vectors.
 
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* specfun/primes.m: Use logical masks rather than numeric.
 	* specfun/isprime.m: Rewrite using isprime.
diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -203,31 +203,33 @@ endfunction
 
 %!shared n, k, a, u, s, v, opts
 %! n = 100;
 %! k = 7;
 %! a = sparse([3:n,1:n,1:(n-2)],[1:(n-2),1:n,3:n],[ones(1,n-2),0.4*n*ones(1,n),ones(1,n-2)]);
 %! %%a = sparse([3:n,1:n,1:(n-2)],[1:(n-2),1:n,3:n],[ones(1,n-2),1:n,-ones(1,n-2)]);
 %! [u,s,v] = svd(full(a));
 %! s = diag(s);
-%! [dum, idx] = sort(abs(s));
+%! [~, idx] = sort(abs(s));
 %! s = s(idx);
 %! u = u(:,idx);
 %! v = v(:,idx);
 %! randn('state',42)
+%! opts.v0 = randn (2*n,1);  % Initialize eigs ARPACK starting vector 
+%!                           % to guarantee reproducible results
 %!testif HAVE_ARPACK
 %! [u2,s2,v2,flag] = svds(a,k);
 %! s2 = diag(s2);
 %! assert(flag,!1);
 %! assert(s(end:-1:end-k+1), s2, 1e-10); 
 %!testif HAVE_ARPACK
-%! [u2,s2,v2,flag] = svds(a,k,0);
+%! [u2,s2,v2,flag] = svds(a,k,0,opts);
 %! s2 = diag(s2);
 %! assert(flag,!1);
 %! assert(s(k:-1:1), s2, 1e-10); 
 %!testif HAVE_ARPACK
 %! idx = floor(n/2);
-%! % Don't put sigma right on a singular value or there are convergence 
+%! % Don't put sigma right on a singular value or there are convergence issues 
 %! sigma = 0.99*s(idx) + 0.01*s(idx+1); 
-%! [u2,s2,v2,flag] = svds(a,k,sigma);
+%! [u2,s2,v2,flag] = svds(a,k,sigma,opts);
 %! s2 = diag(s2);
 %! assert(flag,!1);
 %! assert(s((idx+floor(k/2)):-1:(idx-floor(k/2))), s2, 1e-10); 
