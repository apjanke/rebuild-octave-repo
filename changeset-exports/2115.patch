# HG changeset patch
# User jwe
# Date 831150509 0
#      Fri May 03 19:08:29 1996 +0000
# Node ID d750e30a03e4764d9391c8a24d9d9c942f105de9
# Parent  a84f9c1fe38b91664b1eed31f3a732715880f4e5
[project @ 1996-05-03 19:06:23 by jwe]

diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -2818,54 +2818,67 @@ OCT_VAL_REP::set_index (char c)
       panic_impossible ();
       break;
     }
 }
 
 void
 OCT_VAL_REP::set_index (const octave_value_list& args, bool rhs_is_complex)
 {
+  // XXX FIXME XXX -- it's not good that we have to list all the types
+  // that can be indexed here.
+
   switch (type_tag)
     {
     case unknown_constant:
     case scalar_constant:
     case complex_scalar_constant:
     case range_constant:
       convert_to_matrix_type (rhs_is_complex);
       break;
 
+    case matrix_constant:
+    case complex_matrix_constant:
+    case char_matrix_constant:
+    case char_matrix_constant_str:
+      break;
+
     default:
+      ::error ("indexing %s type not implemented", type_as_string ());
       break;
     }
 
-  int n = args.length ();
-
-  for (int i = 0; i < n; i++)
+  if (! error_state)
     {
-      octave_value arg = args (i);
-
-      switch (arg.const_type ())
+      int n = args.length ();
+
+      for (int i = 0; i < n; i++)
 	{
-	case range_constant:
-	  set_index (arg.range_value ());
-	  break;
-
-	case magic_colon:
-	  set_index (':');
-	  break;
-
-	default:
-	  set_index (arg.matrix_value ());
-	  break;
-	}
-
-      if (error_state)
-	{
-	  clear_index ();
-	  break;
+	  octave_value arg = args (i);
+
+	  switch (arg.const_type ())
+	    {
+	    case range_constant:
+	      set_index (arg.range_value ());
+	      break;
+
+	    case magic_colon:
+	      set_index (':');
+	      break;
+
+	    default:
+	      set_index (arg.matrix_value ());
+	      break;
+	    }
+
+	  if (error_state)
+	    {
+	      clear_index ();
+	      break;
+	    }
 	}
     }
 }
 
 static inline bool
 valid_scalar_indices (const octave_value_list& args)
 {
   int nargin = args.length ();
