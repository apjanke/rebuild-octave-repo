# HG changeset patch
# User jwe
# Date 1116901558 0
#      Tue May 24 02:25:58 2005 +0000
# Node ID f07a9653b844bebc482d0b06e4a9e92f8b0bb98b
# Parent  4bbde94b5cf88b62f5abe74dae40a655347f19a7
[project @ 2005-05-24 02:25:57 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2005-05-23  John W. Eaton  <jwe@octave.org>
 
+	* file-io.cc (Ffopen): Don't fail with internal error message if
+	we fail to create a valid stream object.
+	(do_stream_open (const std::string&, const std::string&,
+	const std::string&, int&): Always create octave_stream object,
+	even if file pointer returne from fopen is 0.
+
 	* load-save.cc (gripe_file_open): New function.
 	(get_file_format, Fload, Fsave): Use it.
 
 	* DLD-FUNCTIONS/sort.cc (mx_sort, mx_sort_indexed): Return
 	appropriately sized empty values for empty args.
 
 	* debug.cc (Fdbwhere, get_user_function): Look at
 	curr_caller_function, not curr_function, since function is now set
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -409,19 +409,19 @@ do_stream_open (const std::string& name,
 		  retval.error (::strerror (errno));
 		}
 	    }
 	  else
 #endif
 	    {
 	      FILE *fptr = ::fopen (name.c_str (), mode.c_str ());
 
-	      if (fptr)
-		retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
-	      else
+	      retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
+
+	      if (! fptr)
 		{
 		  using namespace std;
 		  retval.error (::strerror (errno));
 		}
 	    }
 
 	}
     }
@@ -603,33 +603,28 @@ however, conversions are currently only 
 
       octave_value arch = (nargin == 3)
 	? args(2) : octave_value ("native");
 
       int fid = -1;
 
       octave_stream os = do_stream_open (args(0), mode, arch, "fopen", fid);
 
-      if (os.is_valid ())
+      if (os && ! error_state)
 	{
-	  if (os && ! error_state)
-	    {
-	      retval(1) = "";
-	      retval(0) = octave_stream_list::insert (os);
-	    }
-	  else
-	    {
-	      int error_number = 0;
-
-	      retval(1) = os.error (false, error_number);
-	      retval(0) = -1.0;
-	    }
+	  retval(1) = "";
+	  retval(0) = octave_stream_list::insert (os);
 	}
       else
-	error ("fopen: internal error");
+	{
+	  int error_number = 0;
+
+	  retval(1) = os.error (false, error_number);
+	  retval(0) = -1.0;
+	}
     }
   else
     print_usage ("fopen");
 
   return retval;
 }
 
 DEFUN (freport, args, ,
diff --git a/src/oct-stdstrm.h b/src/oct-stdstrm.h
--- a/src/oct-stdstrm.h
+++ b/src/oct-stdstrm.h
@@ -34,17 +34,17 @@ octave_tstdiostream : public octave_base
 public:
 
   octave_tstdiostream (const std::string& n, FILE_T f = 0,
 		       std::ios::openmode m = std::ios::in|std::ios::out,
 		       oct_mach_info::float_format ff
 		         = oct_mach_info::native_float_format (),
 		       typename BUF_T::close_fcn cf = BUF_T::fclose)
     : octave_base_stream (m, ff), nm (n), md (m),
-      s(f ? new STREAM_T (f, cf) : 0)
+      s (f ? new STREAM_T (f, cf) : 0)
   { }
 
   static octave_stream
   create (const std::string& n, FILE_T f = 0,
 	  std::ios::openmode m = std::ios::in|std::ios::out,
 	  oct_mach_info::float_format ff
 	    = oct_mach_info::native_float_format (),
 	  typename BUF_T::close_fcn cf = BUF_T::fclose)
