# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302525566 -7200
#      Mon Apr 11 14:39:26 2011 +0200
# Node ID 7e8c437b29cbae71ef985b222cd8a5104520aa12
# Parent  7a5998cebef3bd3a8b076080bbee9bed05f5873b
Incorporated John Swenses code for a filesystem view dock.

diff --git a/gui//Quint.pro b/gui//Quint.pro
--- a/gui//Quint.pro
+++ b/gui//Quint.pro
@@ -36,17 +36,18 @@ SOURCES +=\
         src/ShellCommand.cpp \
         src/QTerminalWidget.cpp \
         src/MainWindow.cpp \
         src/Quint.cpp \
         src/OctaveLink.cpp \
         src/ProcessInfo.cpp \
     src/OctaveTerminal.cpp \
     src/VariablesDockWidget.cpp \
-    src/HistoryDockWidget.cpp
+    src/HistoryDockWidget.cpp \
+    src/FilesDockWidget.cpp
 
 HEADERS += \
         src/TerminalCharacterDecoder.h \
         src/Character.h \
         src/CharacterColor.h \
         src/KeyboardTranslator.h \
         src/ExtendedDefaultTranslator.h \
         src/Screen.h \
@@ -74,16 +75,17 @@ HEADERS += \
     	src/MainWindow.h \
         src/OctaveLink.h \
         src/konsole_export.h \
         src/ProcessInfo.h \
         src/kpty_export.h \
         src/kdecore_export.h \
     src/OctaveTerminal.h \
     src/VariablesDockWidget.h \
-    src/HistoryDockWidget.h
+    src/HistoryDockWidget.h \
+    src/FilesDockWidget.h
 
 INCFLAGS = -g3 $$system(mkoctfile -p INCFLAGS)
 LFLAGS = $$system(mkoctfile -p LFLAGS) \
          $$system(mkoctfile -p OCTAVE_LIBS) \
          $$system(mkoctfile -p LIBS)
 LIBS    += $$LFLAGS -loctave -loctinterp -lreadline -lutil
 QMAKE_CXXFLAGS  += $$INCFLAGS
diff --git a/gui//src/FilesDockWidget.cpp b/gui//src/FilesDockWidget.cpp
new file mode 100644
--- /dev/null
+++ b/gui//src/FilesDockWidget.cpp
@@ -0,0 +1,76 @@
+#include "FilesDockWidget.h"
+
+#include <QApplication>
+
+FilesDockWidget::FilesDockWidget(QWidget *parent)
+  : QDockWidget(parent)
+{
+    setWidget(new QWidget(this));
+
+  // Create a toolbar
+  toolbar = new QToolBar ("", widget());
+  toolbar->setAllowedAreas (Qt::TopToolBarArea);
+  toolbar->setMovable (false);
+  toolbar->setIconSize (QSize (20,20));
+
+  // Add a button to the toolbar with the QT standard icon for up-directory
+  // TODO: Maybe change this to be an up-directory icon that is OS specific???
+  QStyle *style = QApplication::style();
+  dirIcon = style->standardIcon(QStyle::SP_FileDialogToParent);
+  dirAction = new QAction (dirIcon, "", toolbar);
+  
+  toolbar->addAction (dirAction);
+  connect(dirAction, SIGNAL(triggered()), this, SLOT(onUpDirectory()));
+  
+  // TODO: Add other buttons for creating directories
+
+  // Create the QFileSystemModel starting in the home directory
+  QString homePath = QDir::homePath ();
+  // TODO: This should occur after Octave has been initialized and the startup directory of Octave is established
+
+  fileSystemModel = new QFileSystemModel(this);
+  fileSystemModel->setFilter (QDir::NoDotAndDotDot | QDir::AllEntries);
+  QModelIndex rootPathIndex = fileSystemModel->setRootPath (homePath);
+
+  // Attach the model to the QTreeView and set the root index
+  fileTreeView = new QTreeView(widget());
+  fileTreeView->setModel (fileSystemModel);
+  fileTreeView->setRootIndex (rootPathIndex);
+  fileTreeView->setSortingEnabled (true);
+
+  connect( fileTreeView, SIGNAL(doubleClicked(const QModelIndex &) ), this, SLOT( itemDoubleClicked(const QModelIndex &) ) );
+  // TODO: Maybe also add a keyPress event handler so users can navigate manually
+
+
+  // Layout the widgets vertically with the toolbar on top
+  layout = new QVBoxLayout();
+  layout->setSpacing(0);
+  layout->addWidget(toolbar);
+  layout->addWidget(fileTreeView);
+    widget()->setLayout(layout);
+  // TODO: Add right-click contextual menus for copying, pasting, deleting files (and others)
+}
+
+void FilesDockWidget::itemDoubleClicked(const QModelIndex &index)
+{
+  QFileInfo fileInfo = fileSystemModel->fileInfo (index);
+  if (fileInfo.isDir ())
+    {
+      fileSystemModel->setRootPath (fileInfo.absolutePath ());
+      fileTreeView->setRootIndex (index);
+    }
+  else
+    {
+      // TODO: Open the file appropriately based on the mime type
+    }
+}
+
+void FilesDockWidget::onUpDirectory(void)
+{
+  // Move up an index node
+  QDir dir = QDir(fileSystemModel->filePath(fileTreeView->rootIndex()));
+  dir.cdUp();
+  fileTreeView->setRootIndex(fileSystemModel->index(dir.absolutePath()));
+  
+}
+
diff --git a/gui//src/FilesDockWidget.h b/gui//src/FilesDockWidget.h
new file mode 100644
--- /dev/null
+++ b/gui//src/FilesDockWidget.h
@@ -0,0 +1,78 @@
+#ifndef FILESDOCKWIDGET_H
+#define FILESDOCKWIDGET_H
+
+#include <QListView>
+#include <QDate>
+#include <QObject>
+#include <QWidget>
+#include <QListWidget>
+#include <QFileSystemModel>
+#include <QToolBar>
+#include <QToolButton>
+#include <QVBoxLayout>
+#include <QAction>
+#include <QTreeView>
+
+#include <vector>
+#include <string>
+
+#undef PACKAGE_BUGREPORT
+#undef PACKAGE_NAME
+#undef PACKAGE_STRING
+#undef PACKAGE_TARNAME
+#undef PACKAGE_VERSION
+#include "octave/config.h"
+#include "octave/octave.h"
+#include "octave/str-vec.h"
+#include "octave/cmd-hist.h"
+#include <QDockWidget>
+
+class FilesDockWidget :  public QDockWidget  {
+  Q_OBJECT
+    
+public :
+  FilesDockWidget(QWidget *parent = 0);
+
+  void setDirectory (QString dir);
+  
+public slots:
+  /**
+   * Slot for handling a change in directory via double click
+   */
+  void itemDoubleClicked(const QModelIndex &index);
+
+  /**
+   * Slot for handling the up-directory button in the toolbar
+   */
+  void onUpDirectory(void);
+    
+private:
+  // Layout widget for packing the toolbar and treeview widgets
+  QVBoxLayout *layout;
+
+  // TODO: Add toolbar with buttons for navigating the path, creating dirs, etc
+
+  /**
+   * Toolbar for file and directory manipulation
+   */
+  QToolBar *toolbar;
+
+  /**
+   * Variables for the up-directory action.
+   */
+  QIcon dirIcon;
+  QAction *dirAction;
+  QToolButton *upDirectoryButton;
+
+  /**
+   * The file system model.
+   */
+  QFileSystemModel *fileSystemModel;
+
+  /**
+   * The file system view.
+   */
+  QTreeView *fileTreeView;
+};
+
+#endif // FILESDOCKWIDGET_H
diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -33,21 +33,24 @@ MainWindow::MainWindow(QWidget *parent)
 
 MainWindow::~MainWindow() {
 }
 
 void MainWindow::constructWindow() {
     m_octaveTerminal = new OctaveTerminal(this);
     m_variablesDockWidget = new VariablesDockWidget(this);
     m_historyDockWidget = new HistoryDockWidget(this);
-    setWindowTitle("Quint");
+    m_filesDockWidget = new FilesDockWidget(this);
+
+    setWindowTitle("Octave");
     setCentralWidget(m_octaveTerminal);
 
     addDockWidget(Qt::LeftDockWidgetArea, m_variablesDockWidget);
     addDockWidget(Qt::LeftDockWidgetArea, m_historyDockWidget);
+    addDockWidget(Qt::RightDockWidgetArea, m_filesDockWidget);
 }
 
 void MainWindow::establishOctaveLink() {
     //QMetaObject::invokeMethod(this, "setStatus", Q_ARG(QString, QString("Establishing Octave link..")));
     m_octaveMainThread = new OctaveMainThread(this);
     m_octaveMainThread->start();
 
     m_octaveCallbackThread = new OctaveCallbackThread(this, this);
diff --git a/gui//src/MainWindow.h b/gui//src/MainWindow.h
--- a/gui//src/MainWindow.h
+++ b/gui//src/MainWindow.h
@@ -20,16 +20,17 @@
 #define MAINWINDOW_H
 
 #include <QtGui/QMainWindow>
 #include <QThread>
 #include "OctaveTerminal.h"
 #include "OctaveLink.h"
 #include "VariablesDockWidget.h"
 #include "HistoryDockWidget.h"
+#include "FilesDockWidget.h"
 
 // Octave includes
 #undef PACKAGE_BUGREPORT
 #undef PACKAGE_NAME
 #undef PACKAGE_STRING
 #undef PACKAGE_TARNAME
 #undef PACKAGE_VERSION
 #undef PACKAGE_URL
@@ -83,24 +84,26 @@ class MainWindow : public QMainWindow
 public:
     MainWindow(QWidget *parent = 0);
     ~MainWindow();
 
     bool isRunning() { return m_isRunning; }
     OctaveTerminal *octaveTerminal() { return m_octaveTerminal; }
     VariablesDockWidget *variablesDockWidget() { return m_variablesDockWidget; }
     HistoryDockWidget *historyDockWidget() { return m_historyDockWidget; }
+    FilesDockWidget *filesDockWidget() { return m_filesDockWidget; }
 
 public slots:
 private:
     void constructWindow();
     void establishOctaveLink();
     OctaveTerminal *m_octaveTerminal;
     VariablesDockWidget *m_variablesDockWidget;
     HistoryDockWidget *m_historyDockWidget;
+    FilesDockWidget *m_filesDockWidget;
 
     // Threads for running octave and managing the data interaction.
     OctaveMainThread *m_octaveMainThread;
     OctaveCallbackThread *m_octaveCallbackThread;
     bool m_isRunning;
 };
 
 class OctaveMainThread : public QThread {
diff --git a/gui//src/OctaveLink.cpp b/gui//src/OctaveLink.cpp
--- a/gui//src/OctaveLink.cpp
+++ b/gui//src/OctaveLink.cpp
@@ -110,18 +110,17 @@ int OctaveLink::readlineEventHook() {
   // at most 10 times per second.  This may be too fast and we will need to
   // artificially slow it down somehow.  Not sure at this time how.
   OctaveLink::instance()->processOctaveServerData();
   return 0;
 }
 
 //*************************************************************************
 OctaveLink::OctaveLink()
-    : m_previousHistoryLength(0),
-      m_isProcessingServerData(false) {
+    : m_previousHistoryLength(0) {
 }
 
 OctaveLink::~OctaveLink() {
 }
 
 /*******************************************************************************
  *******************************************************************************
  * CLIENT SIDE FUNCTIONS
@@ -246,27 +245,23 @@ int OctaveLink::processOctaveServerData(
 {
   struct timeval start, stop;
 #ifndef __WIN32__
   gettimeofday(&start, NULL);
 #endif
 
   QMutexLocker mutexLocker(&m_internalAccessMutex);
 
-  m_isProcessingServerData = true;
-  
   process_breakpoint_action();
   processBreakpointAndRemoveModify();
   processRequestedVariables();
   setVariableInfoList();
   setHistoryList();
   setBreakPointList();
 
-  m_isProcessingServerData = false;
-
 #ifndef __WIN32__
   gettimeofday(&stop, NULL);
   double elapsed = stop.tv_sec - start.tv_sec + 1E-6 * (stop.tv_usec - start.tv_usec);
   //octave_stdout << "SERVER ELAPSED: " << elapsed << std::endl;
 #endif
   return 0;
 }
 
diff --git a/gui//src/OctaveLink.h b/gui//src/OctaveLink.h
--- a/gui//src/OctaveLink.h
+++ b/gui//src/OctaveLink.h
@@ -107,18 +107,16 @@ public:
                               const VariableMetaData& right) {
             return (left.variableName == right.variableName) &&
                    (left.dimensionalSize == right.dimensionalSize) &&
                    (left.byteSize == right.byteSize) &&
                    (left.typeName == right.typeName);
         }
     } VariableMetaData;
 
-    bool isProcessing(void) { return m_isProcessingServerData; }
-
     // Functions used to access data form the client side.
     /** Debugging related methods. */
 
     /** TODO: Describe. */
     std::vector<BreakPoint> breakPointList(int& status);
 
     /** TODO: Describe. */
     std::vector<BreakPoint> reachedBreakpoint();
@@ -223,14 +221,12 @@ private:
     // NOTE: Create an overloaded operator<< for octave_value to do the
     // flattening.  This will allow us to append easily to an ostringstream
     // for output.
     std::vector<RequestedVariable> m_requestedVariables;
 
     /** History related member variables. */
     string_vector m_historyList;
     int m_previousHistoryLength;
-
-    bool m_isProcessingServerData;
     static OctaveLink m_singleton;
 };
 #endif // OCTAVELINK_H
 
diff --git a/gui//src/QTerminalWidget.h b/gui//src/QTerminalWidget.h
--- a/gui//src/QTerminalWidget.h
+++ b/gui//src/QTerminalWidget.h
@@ -26,26 +26,16 @@ struct TermWidgetImpl;
   * \class QTerminalWidget
   * This class forms a widget class that can be inserted into other widgets.
   */
 class QTerminalWidget : public QWidget
 {
     Q_OBJECT
 public:
     /**
-      * \enum ColorScheme
-      * Different color schemes for the terminal.
-      */
-    enum ColorScheme {
-        WhiteOnBlack,
-        GreenOnBlack,
-        BlackOnLightYellow
-    };
-
-    /**
       * \enum ScrollBarPosition
       * Defines the scrollbar position of the terminal.
       */
     enum ScrollBarPosition
     {
         NoScrollBar,
         ScrollBarLeft,
         ScrollBarRight
