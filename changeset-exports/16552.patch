# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1366657641 14400
#      Mon Apr 22 15:07:21 2013 -0400
# Node ID 8fc1f653538031378c21a26b0098d2995895a49b
# Parent  6ae555fc8c43310522e9e1d592b3e245686cf9a6
new function, __octave_link_enabled__

* octave-link.h (octave_link::enabled): Now public.
(F__octave_link_enabled__): New function.

diff --git a/libinterp/interpfcn/octave-link.cc b/libinterp/interpfcn/octave-link.cc
--- a/libinterp/interpfcn/octave-link.cc
+++ b/libinterp/interpfcn/octave-link.cc
@@ -97,16 +97,25 @@ octave_link::do_discard_events (void)
 {
   event_queue_mutex->lock ();
 
   gui_event_queue.discard ();
 
   event_queue_mutex->unlock ();
 }
 
+DEFUN (__octave_link_enabled__, , ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __octave_link_enabled__ ()\n\
+Undocumented internal function.\n\
+@end deftypefn")
+{
+  return octave_value (octave_link::enabled ());
+}
+
 DEFUN (__octave_link_edit_file__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __octave_link_edit_file__ (@var{file})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
diff --git a/libinterp/interpfcn/octave-link.h b/libinterp/interpfcn/octave-link.h
--- a/libinterp/interpfcn/octave-link.h
+++ b/libinterp/interpfcn/octave-link.h
@@ -275,33 +275,33 @@ public:
 
   static void set_default_prompts (std::string& ps1, std::string& ps2,
                                    std::string& ps4)
   {
     if (enabled ())
       instance->do_set_default_prompts (ps1, ps2, ps4);
   }
 
+  static bool enabled (void)
+  {
+    return instance_ok () ? instance->link_enabled : false;
+  }
+
 private:
 
   static octave_link *instance;
 
   // No copying!
 
   octave_link (const octave_link&);
 
   octave_link& operator = (const octave_link&);
 
   static bool instance_ok (void) { return instance != 0; }
 
-  static bool enabled (void)
-  {
-    return instance_ok () ? instance->link_enabled : false;
-  }
-
 protected:
 
   // Semaphore to lock access to the event queue.
   octave_mutex *event_queue_mutex;
 
   // Event Queue.
   event_queue gui_event_queue;
 
