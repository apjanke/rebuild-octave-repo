# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1533140725 14400
#      Wed Aug 01 12:25:25 2018 -0400
# Node ID 5b1e7256a8de53eb1222b92f957e34c88df80d94
# Parent  02fbbde153082d0187373586585f619a9e320447
# Parent  5625b2237a4d56c06a5da002797f7af736fb4cad
maint: Merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -36,17 +36,17 @@ OCTAVE_MAJOR_VERSION=5
 OCTAVE_MINOR_VERSION=0
 OCTAVE_PATCH_VERSION=0
 
 dnl PACKAGE_VERSION is set by the AC_INIT VERSION argument.
 OCTAVE_VERSION="$PACKAGE_VERSION"
 
 OCTAVE_COPYRIGHT="Copyright (C) 2018 John W. Eaton and others."
 
-OCTAVE_RELEASE_DATE="2018-07-13"
+OCTAVE_RELEASE_DATE="2018-07-30"
 
 ## The "API version" is used as a way of checking that interfaces in the
 ## liboctave and libinterp libraries haven't changed in a backwardly
 ## incompatible way when loading .oct files.  A better way to do this is with
 ## library versioning, but not all systems support it.
 ##
 ## NOTE: This macro will be removed in a future version of Octave!
 ## If you insist on checking for features using a version number, use the
diff --git a/scripts/miscellaneous/run.m b/scripts/miscellaneous/run.m
--- a/scripts/miscellaneous/run.m
+++ b/scripts/miscellaneous/run.m
@@ -86,29 +86,30 @@ function run (script)
     evalin ("caller", sprintf ("source ('%s');", script),
             "rethrow (lasterror ())");
   endif
 
 endfunction
 
 
 ## Test script file execution
+## Use a variable name that is unlikely to be the name of a function.
 %!test
-%! clear A  # the variable "A" should be set by the script
-%! assert (exist ("A"), 0);
+%! clear _5yVNhWVJWJn47RKnzxPsyb_
+%! assert (exist ("_5yVNhWVJWJn47RKnzxPsyb_"), 0);
 %! tmp_dir = tempname ();
 %! test_script = fullfile (tmp_dir, "test_script.m");
 %! unwind_protect
 %!   mkdir (tmp_dir);
 %!   fid = fopen (test_script, "w");
-%!   fprintf (fid, "A = 1337;\n");
+%!   fprintf (fid, "_5yVNhWVJWJn47RKnzxPsyb_ = 1337;\n");
 %!   fclose (fid);
 %!   run (test_script);
-%!   assert (exist ("A", "var"), 1);
-%!   assert (A, 1337);
+%!   assert (exist ("_5yVNhWVJWJn47RKnzxPsyb_", "var"), 1);
+%!   assert (_5yVNhWVJWJn47RKnzxPsyb_, 1337);
 %! unwind_protect_cleanup
 %!   unlink (test_script);
 %!   rmdir (tmp_dir);
 %! end_unwind_protect
 
 ## Test function file execution
 %!test
 %! path_orig = path ();
diff --git a/scripts/ode/ode15i.m b/scripts/ode/ode15i.m
--- a/scripts/ode/ode15i.m
+++ b/scripts/ode/ode15i.m
@@ -574,17 +574,17 @@ endfunction
 %! fail ("[t, y] = ode15i (@rob, [0, 4e6], [1; 0; 0], [-1e-4; 1e-4; 0], opt)",
 %!       "invalid value assigned to field 'Jacobian'");
 
 ## Jacobian strange field
 ## FIXME: we need a better way to silence the warning from odeset.
 %!testif HAVE_SUNDIALS
 %! saved_opts = warning ();
 %! warning ("off", "all");
-%! opt = odeset ("Jacobian", "foo");
+%! opt = odeset ("Jacobian", "_5yVNhWVJWJn47RKnzxPsyb_");
 %! fail ("[t, y] = ode15i (@rob, [0, 4e6], [1; 0; 0], [-1e-4; 1e-4; 0], opt)",
 %!       "invalid value assigned to field 'Jacobian'");
 %! warning (saved_opts);
 
 %!function ydot = fun (t, y, yp)
 %!  ydot = [y - yp];
 %!endfunction
 
@@ -617,32 +617,32 @@ endfunction
 %! fail ("ode15i (@fun, [1, 1], 1, 1)",
 %!       "ode15i: invalid value assigned to field 'trange'");
 
 %!testif HAVE_SUNDIALS
 %! fail ("ode15i (@fun, [1, 2], 1, [1, 2])",
 %!       "ode15i: y0 must have 2 elements");
 
 %!testif HAVE_SUNDIALS
-%! opt = odeset ("RelTol", "foo");
+%! opt = odeset ("RelTol", "_5yVNhWVJWJn47RKnzxPsyb_");
 %! fail ("[t, y] = ode15i (@fun, [0, 2], 2, 2, opt)",
 %!       "ode15i: RelTol must be of class:");
 
 %!testif HAVE_SUNDIALS
 %! opt = odeset ("RelTol", [1, 2]);
 %! fail ("[t, y] = ode15i (@fun, [0, 2], 2, 2, opt)",
 %!       "ode15i: RelTol must be scalar");
 
 %!testif HAVE_SUNDIALS
 %! opt = odeset ("RelTol", -2);
 %! fail ("[t, y] = ode15i (@fun, [0, 2], 2, 2, opt)",
 %!       "ode15i: RelTol must be positive");
 
 %!testif HAVE_SUNDIALS
-%! opt = odeset ("AbsTol", "foo");
+%! opt = odeset ("AbsTol", "_5yVNhWVJWJn47RKnzxPsyb_");
 %! fail ("[t, y] = ode15i (@fun, [0, 2], 2, 2, opt)",
 %!       "ode15i: AbsTol must be of class:");
 
 %!testif HAVE_SUNDIALS
 %! opt = odeset ("AbsTol", -1);
 %! fail ("[t, y] = ode15i (@fun, [0, 2], 2, 2, opt)",
 %!       "ode15i: AbsTol must be positive");
 
