# HG changeset patch
# User jwe
# Date 1126798586 0
#      Thu Sep 15 15:36:26 2005 +0000
# Node ID 6b42c78c77d3a408ed8c4c2a5f76987042c683ec
# Parent  7332a98b6de754e7f24fb4ef10e643c74a758064
[project @ 2005-09-15 15:36:26 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2005-09-14  John W. Eaton  <jwe@octave.org>
+
+	* ov-complex.cc (octave_complex::try_narrowing_conversion):
+	Don't drop -0i.
+	* ov-cx-mat.cc (octave_complex_matrix::try_narrowing_conversion):
+	Likewise.
+
 2005-09-14  Daniel  <durbano@shbano.com>
 
 	* DLD-FUNCTIONS/besselj.cc, DLD-FUNCTIONS/chol.cc,
 	DLD-FUNCTIONS/fft.cc, DLD-FUNCTIONS/fftw_wisdom.cc, utils.cc:
 	Doc string fixes.
 	From Jorge Barros de Abreu <ficmatin01@solar.com.br>.
 
 2005-09-14  David Bateman  <dbateman@free.fr>
diff --git a/src/ov-complex.cc b/src/ov-complex.cc
--- a/src/ov-complex.cc
+++ b/src/ov-complex.cc
@@ -51,17 +51,19 @@ DEFINE_OCTAVE_ALLOCATOR (octave_complex)
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_complex,
 				     "complex scalar", "double");
 
 octave_value *
 octave_complex::try_narrowing_conversion (void)
 {
   octave_value *retval = 0;
 
-  if (imag (scalar) == 0.0)
+  double im = std::imag (scalar);
+
+  if (im == 0.0 && ! lo_ieee_signbit (im))
     retval = new octave_scalar (real (scalar));
 
   return retval;
 }
 
 octave_value
 octave_complex::do_index_op (const octave_value_list& idx, int resize_ok)
 {
diff --git a/src/ov-cx-mat.cc b/src/ov-cx-mat.cc
--- a/src/ov-cx-mat.cc
+++ b/src/ov-cx-mat.cc
@@ -69,17 +69,19 @@ octave_complex_matrix::try_narrowing_con
 
       octave_idx_type nr = cm.rows ();
       octave_idx_type nc = cm.cols ();
 
       if (nr == 1 && nc == 1)
 	{
 	  Complex c = matrix (0, 0);
 
-	  if (std::imag (c) == 0.0)
+	  double im = std::imag (c);
+
+	  if (im == 0.0 && ! lo_ieee_signbit (im))
 	    retval = new octave_scalar (std::real (c));
 	  else
 	    retval = new octave_complex (c);
 	}
       else if (nr == 0 || nc == 0)
 	retval = new octave_matrix (Matrix (nr, nc));
       else if (cm.all_elements_are_real ())
 	retval = new octave_matrix (::real (cm));
