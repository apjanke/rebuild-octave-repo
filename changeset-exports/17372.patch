# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1378326163 -3600
#      Wed Sep 04 21:22:43 2013 +0100
# Node ID 63b53ea33a8b7a3de4c087e766fc6db50644a8d8
# Parent  f9e8544ce66d35f90c3fba93dd38e3534a0d5f44
imread: fix returning multiple variables.

* imread.m: fix mistake when filling varargout from cset. Do not miss
  the first cell.
* __magick_read__.cc (read_maps): change class of alpha map which is
  only a column vector, not a Nx3 Matrix.

diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/dldfcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/dldfcn/__magick_read__.cc
@@ -164,24 +164,24 @@ calculate_region (const octave_scalar_ma
 }
 
 static octave_value_list
 read_maps (Magick::Image& img)
 {
   // can't call colorMapSize on const Magick::Image
   const octave_idx_type mapsize = img.colorMapSize ();
   Matrix cmap                   = Matrix (mapsize, 3); // colormap
-  Matrix amap                   = Matrix (mapsize, 3); // alpha map
+  ColumnVector amap             = ColumnVector (mapsize); // alpha map
   for (octave_idx_type i = 0; i < mapsize; i++)
     {
       const Magick::ColorRGB c = img.colorMap (i);
       cmap(i,0) = c.red   ();
       cmap(i,1) = c.green ();
       cmap(i,2) = c.blue  ();
-      amap(i,0) = c.alpha ();
+      amap(i)   = c.alpha ();
     }
   octave_value_list maps;
   maps(0) = cmap;
   maps(1) = amap;
   return maps;
 }
 
 template <class T>
diff --git a/scripts/image/imread.m b/scripts/image/imread.m
--- a/scripts/image/imread.m
+++ b/scripts/image/imread.m
@@ -99,17 +99,17 @@ function [img, varargout] = imread (vara
   ## own is enough. And if the second argument was a parameter name instead
   ## of an extension, it is still going to be passed to the next function
   ## since we are passing the whole function input as well.
   filename = {varargin{1}};
   if (nargin > 1 && ischar (varargin {2}))
     filename{2} = varargin{2};
   endif
 
-  [img, varargout{2:nargout}] = imageIO (@__imread__, "read", filename, varargin{:});
+  [img, varargout{1:nargout-1}] = imageIO (@__imread__, "read", filename, varargin{:});
 endfunction
 
 
 %!testif HAVE_MAGICK
 %! vpng = [ ...
 %!  137,  80,  78,  71,  13,  10,  26,  10,   0,   0, ...
 %!    0,  13,  73,  72,  68,  82,   0,   0,   0,   3, ...
 %!    0,   0,   0,   3,   8,   2,   0,   0,   0, 217, ...
