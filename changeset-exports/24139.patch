# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1507843045 -7200
#      Thu Oct 12 23:17:25 2017 +0200
# Node ID 5d2d0e570e468acbb6145633afd1c95af21da07f
# Parent  e201dc969e2409d107908738094935018c4fa259
print.m: fake grid transparency with gray color (bug #49705)

* print.m: for opengl toolkits and formats other than "svg", when axes
  (minor)gridcolormode is "auto" switch (minor)gridcolor to gray for printing.

diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -352,16 +352,17 @@ function print (varargin)
     [~, ~, ext] = fileparts (opts.ghostscript.output);
     opts.ghostscript.prepend = [tempname() ext];
     copyfile (opts.ghostscript.output, opts.ghostscript.prepend);
   endif
 
   unwind_protect
 
     ## Modify properties as specified by options
+    tk = get (opts.figure, "__graphics_toolkit__");
     props = [];
     nfig = 0;
 
     drawnow ();
 
     ## print() requires children of axes to have units = "normalized", or "data"
     hobj = findall (opts.figure, "-not", "type", "figure", ...
                     "-not", "type", "axes", "-property", "units", ...
@@ -373,24 +374,54 @@ function print (varargin)
       props(n).value = {get(hobj(n), "units")};
       set (hobj(n), "units", "data");
       nfig += 1;
     endfor
 
     ## print() requires axes units = "normalized"
     hax = findall (opts.figure, "-depth", 1, "type", "axes", ...
       "-not", "units", "normalized");
-    for n = 1:numel(hax)
+    for n = 1:numel (hax)
       props(end+1).h = hax(n);
       props(end).name = "units";
       props(end).value = {get(hax(n), "units")};
       set (hax(n), "units", "normalized");
       nfig += 1;
     endfor
 
+    ## FIXME: line transparency is only handled for svg output when
+    ## using gl2ps. For other formats, switch grid lines to light gray
+    ## so that the image output approximately matches on-screen experience.
+    hax = findall (opts.figure, "type", "axes");
+    if (! strcmp (tk, "gnuplot") && ! strcmp (opts.devopt, "svg"))
+      for n = 1:numel (hax)
+        if (strcmp (get (hax(n), "gridcolormode"), "auto"))
+          props(end+1).h = hax(n);
+          props(end).name = "gridcolormode";
+          props(end).value = {"auto"};
+          props(end+1).h = hax(n);
+          props(end).name = "gridcolor";
+          props(end).value = {get(hax(n), "gridcolor")};
+          set (hax(n), "gridcolor", [0.85 0.85 0.85]);
+          nfig += 2;
+        endif
+
+        if (strcmp (get (hax(n), "minorgridcolormode"), "auto"))
+          props(end+1).h = hax(n);
+          props(end).name = "minorgridcolormode";
+          props(end).value = {"auto"};
+          props(end+1).h = hax(n);
+          props(end).name = "minorgridcolor";
+          props(end).value = {get(hax(n), "minorgridcolor")};
+          set (hax(n), "minorgridcolor", [0.75 0.75 0.75]);
+          nfig += 2;
+        endif
+      endfor
+    endif
+    
     ## print() requires figure units to be "pixels"
     props(end+1).h = opts.figure;
     props(end).name = "units";
     props(end).value = {get(opts.figure, "units")};
     set (opts.figure, "units", "pixels");
     nfig += 1;
 
     ## graphics toolkit translates figure position to eps bbox (points)
@@ -509,17 +540,17 @@ function print (varargin)
         hlist = h(ishandle (h));
         haxes = strcmp (get (hlist, "type"), "axes");
         set (hlist(! haxes), "fontsize", fontsize);
         set (hlist(haxes), "fontsize", fontsize);
       endif
     endif
 
     ## call the graphics toolkit print script
-    switch (get (opts.figure, "__graphics_toolkit__"))
+    switch (tk)
       case "gnuplot"
         opts = __gnuplot_print__ (opts);
       otherwise
         opts = __opengl_print__ (opts);
     endswitch
 
   unwind_protect_cleanup
     ## restore modified properties
