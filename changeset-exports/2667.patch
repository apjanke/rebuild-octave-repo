# HG changeset patch
# User jwe
# Date 855547628 0
#      Mon Feb 10 04:07:08 1997 +0000
# Node ID 1d2a83e8a9a3a8c33266f5e1a3a35628ab9aeb0a
# Parent  aa519c3a052308b5dc82dcae445f806ba1755cbc
[project @ 1997-02-10 04:06:55 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,20 @@
+Sun Feb  9 19:52:08 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* general/is_matrix.m: Scalars, vectors, and empty matrices may
+	also be considered to be matrices.
+
+	* general/is_vector.m: Scalars may also be considered to be vectors.
+
+	* general/isempty.m: Use size(), not rows() and columns().
+
+	* plot/contour.m: Convert set to gset.
+	Set view to 0, 0, 1, 1, not 0, 0, 1.9, 1.
+
 Fri Feb  7 12:55:55 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* specfun/erfinv.m: Fix typo in last change.
 
 Fri Jan 31 09:30:16 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* image/loadimage.m: Make it possible to load files with image
 	data named X or img.
diff --git a/scripts/general/is_matrix.m b/scripts/general/is_matrix.m
--- a/scripts/general/is_matrix.m
+++ b/scripts/general/is_matrix.m
@@ -14,25 +14,24 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## usage: is_matrix (x)
 ##
-## Return 1 if the number of rows and columns of x are both greater
-## than 1.
+## Return 1 if X is a matrix.  Otherwise, return 0.
 ##
 ## See also: size, rows, columns, length, is_scalar, is_vector
 
 ## Author: jwe
 
 function retval = is_matrix (x)
 
   if (nargin == 1)
     [nr, nc] = size (x);
-    retval = (nr > 1 && nc > 1);
+    retval = (nr >= 0 && nc >= 0);
   else
     usage ("is_matrix (x)");
   endif
 
 endfunction
diff --git a/scripts/general/is_vector.m b/scripts/general/is_vector.m
--- a/scripts/general/is_vector.m
+++ b/scripts/general/is_vector.m
@@ -14,25 +14,24 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## usage: is_vector (x)
 ##
-## Return 1 if the either the number of rows (columns) of x is 1 and
-## the number of columns (rows) is greater than one.  Otherwise, return 0.
+## Return 1 if X is a vector.  Otherwise, return 0.
 ##
 ## See also: size, rows, columns, length, is_scalar, is_matrix
 
 ## Author: jwe
 
 function retval = is_vector (x)
 
   if (nargin == 1)
     [nr, nc] = size (x);
-    retval = ((nr == 1 && nc > 1) || (nc == 1 && nr > 1));
+    retval = ((nr == 1 && nc >= 1) || (nc == 1 && nr >= 1));
   else
     usage ("is_vector (x)");
   endif
 
 endfunction
diff --git a/scripts/general/isempty.m b/scripts/general/isempty.m
--- a/scripts/general/isempty.m
+++ b/scripts/general/isempty.m
@@ -24,11 +24,13 @@
 ## Author: jwe
 
 function retval = isempty (var)
 
   if (nargin != 1)
     usage ("isempty (var)");
   endif
 
-  retval = (rows (var) == 0 || columns (var) == 0);
+  [nr, nc] = size (var);
+
+  retval = (nr == 0 || nc == 0);
 
 endfunction
diff --git a/scripts/plot/contour.m b/scripts/plot/contour.m
--- a/scripts/plot/contour.m
+++ b/scripts/plot/contour.m
@@ -34,17 +34,17 @@ function contour (z, n, x, y)
   if (nargin == 1 || nargin == 2)
     if (is_matrix (z))
       gset nosurface;
       gset contour;
       gset cntrparam bspline;
       command = sprintf ("gset cntrparam levels %d", n);
       eval (command);
       gset noparametric;
-      gset view 0, 0, 1.9, 1;
+      gset view 0, 0, 1, 1;
       gsplot z w l 1;
     else
       error ("mesh: argument must be a matrix");
     endif
   elseif (nargin == 4)
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
       ylen = length (y);
@@ -59,20 +59,20 @@ function contour (z, n, x, y)
           zz(:,i)   = x;
           zz(:,i+1) = y(k) * ones (xlen, 1);
           zz(:,i+2) = z(:,k);
           k++;
         endfor
         gset nosurface;
         gset contour;
         gset cntrparam bspline;
-        command = sprintf ("set cntrparam levels %d", n);
+        command = sprintf ("gset cntrparam levels %d", n);
         eval (command);
 	gset parametric;
-        gset view 0, 0, 1.9, 1;
+        gset view 0, 0, 1, 1;
 	gsplot zz w l 1;
       else
         msg = "mesh: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     else
       error ("mesh: x and y must be vectors and z must be a matrix");
