# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1295431507 18000
#      Wed Jan 19 05:05:07 2011 -0500
# Node ID 21c3e1370b82fa0d67b59c1eddf1b443bb8d0d67
# Parent  90f8d12f196497d941403a69e99463fd049d2d9a
implement --list option for help function

diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -380,21 +380,21 @@ in this manual in @ref{Command Line Edit
 
 Octave has an extensive help facility.  The same documentation that is
 available in printed form is also available from the Octave prompt,
 because both forms of the documentation are created from the same input
 file.
 
 In order to get good help you first need to know the name of the command
 that you want to use.  This name of the function may not always be
-obvious, but a good place to start is to just type @code{help}.
-This will show you all the operators, reserved words, functions,
-built-in variables, and function files.  An alternative is to search the
-documentation using the @code{lookfor} function.  This function is
-described in @ref{Getting Help}.
+obvious, but a good place to start is to just type @code{help --list}.
+This will show you all the operators, keywords, built-in functions,
+and loadable functions available in the current session of Octave.  An
+alternative is to search the documentation using the @code{lookfor}
+function.  This function is described in @ref{Getting Help}.
 
 Once you know the name of the function you wish to use, you can get more
 help on the function by simply including the name as an argument to help.
 For example,
 
 @example
 help plot
 @end example
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-19  John W. Eaton  <jwe@octave.org>
+
+	* help/help.m: New option --list.
+
 2011-01-19  John W. Eaton  <jwe@octave.org>
 
 	* io/strread.m: Avoid PCRE-ism in regexp.  Bug #32066.
 
 2011-01-17  Rik  <octave@nomad.inbox5.com>
 
 	* audio/wavread.m, deprecated/spqr.m, elfun/lcm.m, general/bitget.m,
 	general/curl.m, general/divergence.m, general/interp3.m,
diff --git a/scripts/help/help.m b/scripts/help/help.m
--- a/scripts/help/help.m
+++ b/scripts/help/help.m
@@ -13,26 +13,31 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Command} {} help @var{name}
+## @deftypefn {Command} {} help @code{--list}
 ## Display the help text for @var{name}.
-## If invoked without any arguments, @code{help} displays instructions
+## If invoked without any arguments, @code{help} display instructions
 ## on how to access help from the command line.
-## 
+##
 ## For example, the command @kbd{help help} prints a short message
 ## describing the @code{help} command.
-## 
+##
+## Given the single argument @code{--list}, list all operators,
+## keywords, built-in functions, and loadable functions available
+## in the current session of Octave.
+##
 ## @deftypefnx {Function File} {@var{text} =} help (@var{name})
 ## Return the help text for the function, @var{name}.
-## 
+##
 ## The help command can give you information about operators, but not the
 ## comma and semicolons that are used as command separators.  To get help
 ## for those, you must type @kbd{help comma} or @kbd{help semicolon}.
 ## @seealso{doc, lookfor, which}
 ## @end deftypefn
 
 function retval = help (name)
 
@@ -51,16 +56,26 @@ function retval = help (name)
 \n\
     doc\n\
 \n\
   GNU Octave is supported and developed by its user community.\n\
   For more information visit http://www.octave.org.\n\n");
 
   elseif (nargin == 1 && ischar (name))
 
+    if (strcmp (name, "--list"))
+      tmp = do_list_functions ();
+      if (nargout == 0)
+        printf ("%s", tmp);
+      else
+        retval = tmp;
+      endif
+      return;
+    endif
+
     ## Get help text
     [text, format] = get_help_text (name);
     
     ## Take action depending on help text format
     switch (lower (format))
       case "plain text"
         status = 0;
       case "texinfo"
@@ -89,16 +104,44 @@ function retval = help (name)
     endif
 
   else
     error ("help: invalid input\n");
   endif
 
 endfunction
 
+function retval = do_list_functions ()
+
+  operators = sprintf ("*** operators:\n\n%s\n\n",
+                       list_in_columns (__operators__ ()));
+
+  keywords = sprintf ("*** keywords:\n\n%s\n\n",
+                      list_in_columns (__keywords__ ()));
+
+  builtins = sprintf ("*** builtins:\n\n%s\n\n",
+                      list_in_columns (__builtins__ ()));
+
+  dirs = strsplit (path, pathsep);
+  flist = "";
+  for i = 2:numel (dirs)
+    files = sort ({dir(fullfile (dirs{i}, "*.m")).name, ...
+                   dir(fullfile (dirs{i}, "*.oct")).name, ...
+                   dir(fullfile (dirs{i}, "*.mex")).name});
+
+    if (! isempty (files))
+      flist = sprintf ("%s*** functions in %s:\n\n%s\n\n",
+                       flist, dirs{i}, list_in_columns (files));
+    endif
+  endfor
+
+  retval = cstrcat (operators, keywords, builtins, flist);
+
+endfunction
+
 function do_contents (name)
 
   found = false;
 
   dlist = find_dir_in_path (name, "all");
 
   for i = 1:numel (dlist)
     fname = make_absolute_filename (fullfile (dlist{i}, "Contents.m"));
