# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1351000894 14400
#      Tue Oct 23 10:01:34 2012 -0400
# Node ID 3c5553180dd15662bef68600236810272c7e6faf
# Parent  bbbb89cc338f1ff830b70386ecb6eaee6de48c76
# Parent  e21b21c2a20d15263cf705466220399acb69ddde
Merge in Torsten's changes

diff --git a/scripts/help/unimplemented.m b/scripts/help/unimplemented.m
--- a/scripts/help/unimplemented.m
+++ b/scripts/help/unimplemented.m
@@ -32,27 +32,48 @@ function txt = unimplemented (fcn)
   case "quad2d"
     txt = ["quad2d is not implemented.  Consider using dblquad."];
 
   case "gsvd"
     txt = ["gsvd is not currently part of core Octave.  See the ",...
     "linear-algebra package at ",...
     "@url{http://octave.sourceforge.net/linear-algebra/}."];
 
+  case "funm"
+    txt = ["funm is not currently part of core Octave.  See the ",...
+    "linear-algebra package at @url{http://octave.sf.net/linear-algebra/}."];
+
   case "linprog"
     txt = ["Octave does not currently provide linprog.  ",...
     "Linear programming problems may be solved using @code{glpk}.  ",...
     "Try @code{help glpk} for more info."];
 
   case {"ode113", "ode15i", "ode15s", "ode23", "ode23s", "ode23t", "ode45", "odeget", "odeset"}
     txt = ["Octave provides lsode for solving differential equations.  ",...
     "For more information try @code{help lsode}.  ",...
     "Matlab-compatible ODE functions are provided by the odepkg package.  ",...
     "See @url{http://octave.sourceforge.net/odepkg/}."];
 
+  case {"javaArray", "javaMethod", "javaMethodEDT", "javaObject", "javaObjectEDT", "javaaddpath", "javaclasspath", "javarmpath"}
+    txt = ["Java objects and methods can be used with the java package. ",...
+    "See @url{http://octave.sf.net/java/}."];
+
+  case {"errordlg", "helpdlg", "inputdlg", "listdlg", "questdlg", "warndlg"}
+    txt = ["Several dialog functions are provided in the java package. ",...
+    "See @url{http://octave.sf.net/java/}."];
+
+  case {"xlsread", "xlsfinfo", "xlswrite", "wk1read", "wk1finfo", "wk1write"}
+    txt = ["Functions for spreadsheet style I/O (.xls .xlsx .sxc .ods .dbf .wk1 etc.) " , ...
+    "are provided in the io package. ",...
+    "See @url{http://octave.sf.net/io/}."];
+
+  case {"avifile", "aviinfo", "aviread"}
+    txt = ["Basic video file support is provided in the video package. ",...
+    "See @url{http://octave.sf.net/video/}."];
+
   otherwise
     if (ismember (fcn, missing_functions ()))
       txt = sprintf ("the '%s' function is not yet implemented in Octave", fcn);
     else
       is_matlab_function = false;
       txt = "";
     endif
   endswitch
@@ -83,19 +104,16 @@ function list = missing_functions ()
   "alphamap",
   "annotation",
   "audiodevinfo",
   "audioplayer",
   "audiorecorder",
   "aufinfo",
   "auread",
   "auwrite",
-  "avifile",
-  "aviinfo",
-  "aviread",
   "bar3",
   "bar3h",
   "bench",
   "bicgstabl",
   "brush",
   "builddocsearchdb",
   "bvp4c",
   "bvp5c",
@@ -158,17 +176,16 @@ function list = missing_functions ()
   "dither",
   "docopt",
   "docsearch",
   "dragrect",
   "dynamicprops",
   "echodemo",
   "ellipj",
   "ellipke",
-  "errordlg",
   "evalc",
   "exifread",
   "expint",
   "export2wsdlg",
   "figurepalette",
   "filebrowser",
   "fill3",
   "fitsinfo",
@@ -193,64 +210,53 @@ function list = missing_functions ()
   "hdf5info",
   "hdf5read",
   "hdf5write",
   "hdfinfo",
   "hdfread",
   "hdftool",
   "helpbrowser",
   "helpdesk",
-  "helpdlg",
   "helpwin",
   "hgexport",
   "hgload",
   "hgsave",
   "hgsetget",
   "hgtransform",
   "hostid",
   "ilu",
   "im2frame",
   "im2java",
   "imapprox",
   "imformats",
   "import",
   "inmem",
   "inputParser",
-  "inputdlg",
   "inspect",
   "instrfind",
   "instrfindall",
   "interpstreamspeed",
   "iscom",
   "isinterface",
   "isjava",
   "isocaps",
   "isstudent",
-  "javaArray",
-  "javaMethod",
-  "javaMethodEDT",
-  "javaObject",
-  "javaObjectEDT",
-  "javaaddpath",
   "javachk",
-  "javaclasspath",
-  "javarmpath",
   "ldl",
   "libfunctions",
   "libfunctionsview",
   "libisloaded",
   "libpointer",
   "libstruct",
   "light",
   "lightangle",
   "lighting",
   "linkaxes",
   "linkdata",
   "linsolve",
-  "listdlg",
   "listfonts",
   "loadlibrary",
   "lscov",
   "lsqr",
   "makehgtform",
   "material",
   "matlabrc",
   "maxNumCompThreads",
@@ -309,17 +315,16 @@ function list = missing_functions ()
   "printopt",
   "printpreview",
   "profsave",
   "propedit",
   "propertyeditor",
   "publish",
   "qmr",
   "quad2d",
-  "questdlg",
   "rbbox",
   "reducepatch",
   "reducevolume",
   "resample",
   "root",
   "rotate",
   "rotate3d",
   "selectmoveresize",
@@ -380,30 +385,26 @@ function list = missing_functions ()
   "unmesh",
   "userpath",
   "validateattributes",
   "verLessThan",
   "viewmtx",
   "visdiff",
   "volumebounds",
   "waitfor",
-  "warndlg",
   "waterfall",
   "wavfinfo",
   "wavplay",
   "wavrecord",
   "web",
   "whatsnew",
   "wk1finfo",
   "wk1read",
   "wk1write",
   "workspace",
-  "xlsfinfo",
-  "xlsread",
-  "xlswrite",
   "xmlread",
   "xmlwrite",
   "xslt",
   "zoom",
   };
 endfunction
 
 
diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -45,16 +45,18 @@
 ##
 ## Importing ascii table using the specified number of header rows and
 ## the specified delimiter.
 ##
 ## @item Image file
 ##
 ## @item @sc{Matlab} file
 ##
+## @item Spreadsheet files (depending on external software)
+##
 ## @item Wav file
 ##
 ## @end itemize
 ##
 ## @seealso{textscan, dlmread, csvread, load}
 ## @end deftypefn
 
 ## Author: Erik Kjellson <erikiiofph7@users.sourceforge.net>
@@ -130,23 +132,27 @@ function [output, delimiter, header_rows
           ".tif", ".tiff", ".xwd"}
       delimiter  = NaN;
       header_rows = 0;
       [output.cdata, output.colormap, output.alpha] = imread (fname);
     case ".mat"
       delimiter  = NaN;
       header_rows = 0;
       output = load (fname);
-    case ".wk1"
-      error (sprintf ("importdata: not implemented for file format %s", 
-                      fileExt));
-    case {".xls", ".xlsx"}
-      ## FIXME: implement Excel import.
-      error (sprintf ("importdata: not implemented for file format %s", 
-                      fileExt));
+    case {".wk1", ".xls", ".xlsx", ".dbf", ".pxl"}
+      ## If there's no Excel file support simply fall back to unimplemented.m
+      output = xlsread (fname);
+    case {".ods", ".sxc", ".fods", ".uos", ".xml"}
+      ## unimplemented.m only knows ML functions; odsread isn't one but is in OF
+      try
+        output = odsread (fname);
+      catch
+        ## Fall back to unimplemented.m.
+        output = xlsread (fname);
+      end_try_catch
     case {".wav", ".wave"}
       delimiter  = NaN;
       header_rows = 0;
       [output.data, output.fs] = wavread (fname);
     otherwise
       ## Assume the file is in ascii format.
       [output, delimiter, header_rows]  = \
           importdata_ascii (fname, delimiter, header_rows);
@@ -261,17 +267,17 @@ function [output, delimiter, header_rows
 
 
   ## Go through the data and put it in either output.data or
   ## output.textdata depending on if it is numeric or not.
   output.data = NaN (length (file_content_rows) - header_rows, data_columns);
   for i=(header_rows+1):length(file_content_rows)
     ## Only use the row if it contains anything other than white-space
     ## characters.
-    if (length (regexp (file_content_rows{i}, "\S","match")) > 0)
+    if (length (regexp (file_content_rows{i}, "\\S","match")) > 0)
       row_data = regexp (file_content_rows{i}, delimiter_pattern, "split");
 
       for j=1:length(row_data)
         ## Try to convert the column to a number, if it works put it in
         ## output.data, otherwise in output.textdata
         if (length(str2num(row_data{j})) > 0)
           output.data ((i-header_rows), j) = str2num (row_data{j});
         else
