# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1252198844 14400
#      Sat Sep 05 21:00:44 2009 -0400
# Node ID b00af0da85dd03693e2c15dbe525a966208b2409
# Parent  b0b82ab654f6cf71db9e93aaca2bac897fbee8ca
graphics.h.in: provide std::string and char* versions of graphics_object:get functions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2009-09-05  John W. Eaton  <jwe@octave.org>
+
+	* genprops.awk: Fix formatting of generated output.
+	* graphics.h.in (graphics_object::get (const std::string&) const,
+	graphics_object::get (const char *) const): New functions.
+
 2009-09-05  John W. Eaton  <jwe@octave.org>
 
 	* txt-eng-ft.cc (ft_manager::do_get_font): Remove spurious
 	assignment usd for debugging.
 
 2009-09-04  John W. Eaton  <jwe@octave.org>
 
 	* txt-eng-ft.cc (ft_manager::do_get_font, ft_render::set_font,
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -241,18 +241,18 @@ function emit_get_array (i)
 function emit_common_declarations ()
 {
   printf ("public:\n");
   printf ("  properties (const graphics_handle& mh, const graphics_handle& p);\n\n");
   printf ("  ~properties (void) { }\n\n");
   printf ("  void set (const caseless_str& pname, const octave_value& val);\n\n");
   printf ("  octave_value get (bool all = false) const;\n\n");
   printf ("  octave_value get (const caseless_str& pname) const;\n\n");
-  printf ("  octave_value get (const std::string& pname) const\n  {\n  return get (caseless_str (pname)); }\n\n");
-  printf ("  octave_value get (const char *pname) const\n  {\n  return get (caseless_str (pname)); }\n\n");
+  printf ("  octave_value get (const std::string& pname) const\n  {\n    return get (caseless_str (pname));\n  }\n\n");
+  printf ("  octave_value get (const char *pname) const\n  {\n    return get (caseless_str (pname));\n  }\n\n");
   printf ("  property get_property (const caseless_str& pname);\n\n");
   printf ("  std::string graphics_object_name (void) const { return go_name; }\n\n");
   printf ("  static property_list::pval_map_type factory_defaults (void);\n\n");
   printf ("private:\n  static std::string go_name;\n\n");
 }
 
 function emit_declarations ()
 {
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2074,16 +2074,26 @@ public:
   octave_value get (const caseless_str& name) const
   {
     return name.compare ("default")
       ? get_defaults ()
       : (name.compare ("factory")
 	 ? get_factory_defaults () : rep->get (name));
   }
 
+  octave_value get (const std::string& name) const
+  {
+    return get (caseless_str (name));
+  }
+
+  octave_value get (const char *name) const
+  {
+    return get (caseless_str (name));
+  }
+
   octave_value get_default (const caseless_str& name) const
   {
     return rep->get_default (name);
   }
 
   octave_value get_factory_default (const caseless_str& name) const
   {
     return rep->get_factory_default (name);
