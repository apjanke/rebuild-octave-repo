# HG changeset patch
# User Rik <rik@octave.org>
# Date 1375370244 25200
#      Thu Aug 01 08:17:24 2013 -0700
# Node ID 04c3d56e007abf9642934c546043a1e33b1b2509
# Parent  f72ffae1fcc3402b63d1d8c7d68a6f9c9273bdc1
allchild.m: Add input validation, %!test blocks, and more documentation.

* scripts/plot/allchild.m: Add input validation, %!test blocks, and more
documentation.

diff --git a/scripts/plot/allchild.m b/scripts/plot/allchild.m
--- a/scripts/plot/allchild.m
+++ b/scripts/plot/allchild.m
@@ -15,42 +15,49 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{h} =} allchild (@var{handles})
 ## Find all children, including hidden children, of a graphics object.
 ##
-## This function is similar to @code{get (h, "children")}, but also
-## returns hidden objects.  If @var{handles} is a scalar,
-## @var{h} will be a vector.  Otherwise, @var{h} will be a cell matrix
-## of the same size as @var{handles} and each cell will contain a
-## vector of handles.
+## This function is similar to @code{get (h, "children")}, but also returns
+## hidden objects ("HandleVisibility" = "off").  If @var{handles} is a scalar,
+## @var{h} will be a vector.  Otherwise, @var{h} will be a cell matrix of the
+## same size as @var{handles} and each cell will contain a vector of handles.
 ## @seealso{findall, findobj, get, set}
 ## @end deftypefn
 
 ## Author: Bill Denney <bill@denney.ws>
 
 function h = allchild (handles)
 
+  if (nargin != 1)
+    print_usage ();
+  endif
+
   shh = get (0, "showhiddenhandles");
   unwind_protect
     set (0, "showhiddenhandles", "on");
     h = get (handles, "children");
   unwind_protect_cleanup
     set (0, "showhiddenhandles", shh);
   end_unwind_protect
 
 endfunction
 
 
 %!testif HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   l = line;
-%!   assert (get (allchild (hf),"type"),{"axes"; "uimenu"; "uimenu"; "uimenu"});
+%!   kids = allchild (hf);
+%!   assert (get (kids, "type"), {"axes"; "uimenu"; "uimenu"; "uimenu"});
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
+%!error allchild ()
+%!error allchild (1, 2)
+
