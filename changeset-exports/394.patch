# HG changeset patch
# User jwe
# Date 764500749 0
#      Thu Mar 24 09:19:09 1994 +0000
# Node ID 27ef550be39e0fd9a9c3394b11882703c05d1146
# Parent  e4d447c3eb0bacdb49bb346d3f7243fa44bd111d
[project @ 1994-03-24 09:19:09 by jwe]

diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -1425,20 +1425,23 @@ tree_constant_rep::load (istream& is)
   if (tag != (char *) NULL && *tag != '\0')
     {
       char *ptr = strchr (tag, ' ');
       if (ptr != (char *) NULL)
 	{
 	  *ptr = '\0';
 	  is_global = (strncmp (tag, "global", 6) == 0);
 	  *ptr = ' ';
-	  ptr++;
+	  if (is_global)
+	    ptr++;
+	  else
+	    ptr = tag;
 	}
       else
-	ptr = &tag[0];
+	ptr = tag;
 
       if (strncmp (ptr, "scalar", 6) == 0)
 	type_tag = load (is, scalar_constant);
       else if (strncmp (ptr, "matrix", 6) == 0)
 	type_tag = load (is, matrix_constant);
       else if (strncmp (ptr, "complex scalar", 14) == 0)
 	type_tag = load (is, complex_scalar_constant);
       else if (strncmp (ptr, "complex matrix", 14) == 0)
@@ -1486,16 +1489,17 @@ tree_constant_rep::load (istream& is, tr
 	    else
 	      ::error ("failed to load matrix constant");
 	  }
 	else
 	  ::error ("failed to extract number of rows and columns");
       }
       break;
     case complex_scalar_constant:
+      complex_scalar = new Complex;
       is >> *complex_scalar;
       if (is)
 	status = complex_scalar_constant;
       else
 	::error ("failed to load complex scalar constant");
       break;
     case complex_matrix_constant:
       {
