# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1318561557 18000
#      Thu Oct 13 22:05:57 2011 -0500
# Node ID 782dc237a02d3f93a9f9fb3375b01153cbe42d2a
# Parent  dd9b32af0a018c374b6e891ce34ba3794689cf35
Pass correct integer type to std::max in bsxfun-defs.cc

diff --git a/liboctave/bsxfun-defs.cc b/liboctave/bsxfun-defs.cc
--- a/liboctave/bsxfun-defs.cc
+++ b/liboctave/bsxfun-defs.cc
@@ -93,17 +93,17 @@ do_bsxfun_op (const Array<X>& x, const A
           if (xsing || ysing)
             {
               ldr *= dvx(start) * dvy(start);
               start++;
             }
         }
       dim_vector cdvx = dvx.cumulative (), cdvy = dvy.cumulative ();
       // Nullify singleton dims to achieve a spread effect.
-      for (int i = std::max (start, 1); i < nd; i++)
+      for (int i = std::max (start, octave_idx_type (1)); i < nd; i++)
         {
           if (dvx(i) == 1)
             cdvx(i-1) = 0;
           if (dvy(i) == 1)
             cdvy(i-1) = 0;
         }
 
       octave_idx_type niter = dvr.numel (start);
@@ -171,17 +171,17 @@ do_inplace_bsxfun_op (Array<R>& r, const
             {
               ldr *= dvr(start) * dvx(start);
               start++;
             }
         }
 
       dim_vector cdvx = dvx.cumulative ();
       // Nullify singleton dims to achieve a spread effect.
-      for (int i = std::max (start, 1); i < nd; i++)
+      for (int i = std::max (start, octave_idx_type (1)); i < nd; i++)
         {
           if (dvx(i) == 1)
             cdvx(i-1) = 0;
         }
 
       octave_idx_type niter = dvr.numel (start);
       // The index array.
       OCTAVE_LOCAL_BUFFER_INIT (octave_idx_type, idx, nd, 0);
