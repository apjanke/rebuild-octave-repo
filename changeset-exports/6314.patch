# HG changeset patch
# User jwe
# Date 1171586620 0
#      Fri Feb 16 00:43:40 2007 +0000
# Node ID 7cbf27ad6c3fefd507960efbe1258c679fdecd41
# Parent  8232ed4a7fc018e698ce790da1c42ba89e09ed77
[project @ 2007-02-16 00:43:40 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,19 @@
+2007-02-15  John W. Eaton  <jwe@octave.org>
+
+	* plot/__uiobject_axes_init__.in, plot/__uiobject_axes_setr__.m:
+	Delete title, xlabel, ylabel, and zlabel properties before
+	reassigning.
+	* plot/__uiobject_axes_init__.in: New arg, mode.
+	Don't init outerposition if "mode" is "replace".
+	* plot/newplot.m: Check both figure and axes nextplot properties.
+	If axes nextplot property is replace, pass "replace" as mode arg
+	to __uiobject_axes_init__.
+
 2007-02-15  Daniel J Sebald  <daniel.sebald@ieee.org>
 
 	* image/imshow.m: Don't restore old colormap.
 
 	* plot/__uiobject_image_ctor__.m: Set xdata and ydata properties.
 	* image/__img__.m: New file containing common parts of image.m and
 	imshow.m.
 	* image/Makefile.in (SOURCES): Add __img__.m to the list.
diff --git a/scripts/plot/__uiobject_axes_init__.in b/scripts/plot/__uiobject_axes_init__.in
--- a/scripts/plot/__uiobject_axes_init__.in
+++ b/scripts/plot/__uiobject_axes_init__.in
@@ -19,26 +19,33 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{s}} __uiobject_axes_init__ (@var{s})
 ## Initialize axes object.
 ## @end deftypefn
 
 ## Author: jwe
 
-function h = __uiobject_axes_init__ (h)
+function h = __uiobject_axes_init__ (h, mode)
 
   __uiobject_globals__;
 
   if (nargin == 1)
+    mode = "";
+  endif
+
+  if (nargin == 1 || nargin == 2)
 
     s = get (h);
 
     s.__setter__ = @__uiobject_axes_setr__;
 
+    if (isfield (s, "title") && ! isempty (s.title))
+      delete (s.title);
+    endif
     s.title = __uiobject_text_ctor__ (h);
 
     s.box = "on";
     s.key = "off";
     s.keybox = "off";
     s.keypos = 1;
 
     s.dataaspectratio = [1, 1, 1];
@@ -47,16 +54,25 @@ function h = __uiobject_axes_init__ (h)
     s.xlim = [0, 1];
     s.ylim = [0, 1];
     s.zlim = [0, 1];
 
     s.xlimmode = "auto";
     s.ylimmode = "auto";
     s.zlimmode = "auto";
 
+    if (isfield (s, "xlabel") && ! isempty (s.xlabel))
+      delete (s.xlabel);
+    endif
+    if (isfield (s, "ylabel") && ! isempty (s.ylabel))
+      delete (s.ylabel);
+    endif
+    if (isfield (s, "zlabel") && ! isempty (s.zlabel))
+      delete (s.zlabel);
+    endif
     s.xlabel = __uiobject_text_ctor__ (h);
     s.ylabel = __uiobject_text_ctor__ (h);
     s.zlabel = __uiobject_text_ctor__ (h);
 
     s.xgrid = "off";
     s.ygrid = "off";
     s.zgrid = "off";
 
@@ -87,17 +103,22 @@ function h = __uiobject_axes_init__ (h)
     s.xdir = "normal";
     s.ydir = "normal";
     s.zdir = "normal";
 
     s.view = [0, 90];
 
     s.nextplot = "replace";
 
-    s.outerposition = [0, 0, 1, 1];
+    ## FIXME -- this is not quite right; we should preserve "position"
+    ## and "units".
+    if (! isfield (s, "outerposition")
+        || (isempty (s.outerposition) || ! strcmp (mode, "replace")))
+      s.outerposition = [0, 0, 1, 1];
+    endif
 
     s.dataaspectratio = [];
     s.dataaspectratiomode = "auto";
 
     for child = s.children
       delete (child);
     endfor
 
diff --git a/scripts/plot/__uiobject_axes_setr__.m b/scripts/plot/__uiobject_axes_setr__.m
--- a/scripts/plot/__uiobject_axes_setr__.m
+++ b/scripts/plot/__uiobject_axes_setr__.m
@@ -39,16 +39,17 @@ function obj = __uiobject_axes_setr__ (h
 	    if (isfield (obj, "__validators__"))
 	      validators = obj.__validators__;
 	      if (isfield (validators, key))
 		feval (validators.(key), val);
 	      endif
 	    endif
 	    switch (key)
 	      case {"title", "xlabel", "ylabel", "zlabel"}
+		delete (obj.(key));
 		val = __uiobject_text_ctor__ (h, "string", val);
 
 	      case {"xlim", "ylim", "zlim"}
 		obj.(strcat (key, "mode")) = "manual";
 
 	      case "dataaspectratio"
 		obj.dataaspectratiomode = "manual";
 
diff --git a/scripts/plot/__uiobject_draw_axes__.m b/scripts/plot/__uiobject_draw_axes__.m
--- a/scripts/plot/__uiobject_draw_axes__.m
+++ b/scripts/plot/__uiobject_draw_axes__.m
@@ -624,17 +624,17 @@ function __uiobject_draw_axes__ (h, plot
 	rot_x = 90 - axis_obj.view(2);
 	rot_z = axis_obj.view(1);
 	while (rot_z < 0)
 	  rot_z += 360;
 	endwhile
 	fprintf (plot_stream, "set view %g, %g;\n", rot_x, rot_z);
 
 	fprintf (plot_stream, "%s '-' %s %s %s", plot_cmd,
-		 usingclause{i}, titlespec{1}, withclause{1});
+		 usingclause{1}, titlespec{1}, withclause{1});
       endif
       for i = 2:data_idx
 	fprintf (plot_stream, ", '-' %s %s %s", usingclause{i},
 		 titlespec{i}, withclause{i});
       endfor
       for i = 1:data_idx
 	fputs (plot_stream, "\n");
 	if (nd == 2)
diff --git a/scripts/plot/newplot.m b/scripts/plot/newplot.m
--- a/scripts/plot/newplot.m
+++ b/scripts/plot/newplot.m
@@ -22,32 +22,33 @@
 ## @end deftypefn
 
 function newplot ()
 
   if (nargin == 0)
     cf = gcf ();
     fnp = get (cf, "nextplot");
     switch (fnp)
+      ## FIXME -- probably we should do more than validate the nextplot
+      ## property value...
       case "new"
       case "add"
-	return;
       case "replacechildren"
       case "replace"
       otherwise
 	error ("newplot: unrecognized nextplot property for current figure");
     endswitch
     ca = gca ();
     anp = get (ca, "nextplot");
     switch (anp)
       case "add"
       case "replacechildren"
       case "replace"
 	__next_line_color__ (true);
-	__uiobject_axes_init__ (ca);
+	__uiobject_axes_init__ (ca, "replace");
       otherwise
 	error ("newplot: unrecognized nextplot property for current axes");
     endswitch
   else
     print_usage ();
   endif
 
 endfunction
