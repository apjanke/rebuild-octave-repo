# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1445395400 14400
#      Tue Oct 20 22:43:20 2015 -0400
# Node ID 67cf25a6e11e6e6cec61494cfaceaf178a42cd6d
# Parent  98a730e0dd5135acbf668d9bf44c4d4eca86cbc5
use gnulib::floor

* idx-vector.cc (idx_vector::idx_range_rep::idx_range_rep):
Use gnulib::floor.

diff --git a/liboctave/array/idx-vector.cc b/liboctave/array/idx-vector.cc
--- a/liboctave/array/idx-vector.cc
+++ b/liboctave/array/idx-vector.cc
@@ -139,28 +139,28 @@ idx_vector::idx_range_rep::idx_range_rep
         {
           start = static_cast<octave_idx_type> (r.base ()) - 1;
           step = static_cast<octave_idx_type> (r.inc ());
           if (start < 0)
             {
               gripe_invalid_index (start);
               err = true;
             }
-          else if (step < 0 && start + (len-1)*step < 0)
+          else if (step < 0 && start + (len - 1)*step < 0)
             {
-              gripe_invalid_index (start + (len-1)*step);
+              gripe_invalid_index (start + (len - 1)*step);
               err = true;
             }
         }
       else
         {
           // find first non-integer, then gripe about it
-          double b = r.base();
-          double inc = r.inc();
-          gripe_invalid_index (b != floor(b) ? b : b+inc);
+          double b = r.base ();
+          double inc = r.inc ();
+          gripe_invalid_index (b != gnulib::floor (b) ? b : b + inc);
           err = true;
         }
     }
 }
 
 octave_idx_type
 idx_vector::idx_range_rep::checkelem (octave_idx_type i) const
 {
