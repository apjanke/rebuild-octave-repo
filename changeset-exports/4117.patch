# HG changeset patch
# User jwe
# Date 1035335206 0
#      Wed Oct 23 01:06:46 2002 +0000
# Node ID 944b276d8856c25495ee9c6d80117dfff3c62d3b
# Parent  644c20b7b9e1924b5b2493906f8e53928453b864
[project @ 2002-10-23 01:06:46 by jwe]

diff --git a/src/DLD-FUNCTIONS/daspk.cc b/src/DLD-FUNCTIONS/daspk.cc
--- a/src/DLD-FUNCTIONS/daspk.cc
+++ b/src/DLD-FUNCTIONS/daspk.cc
@@ -177,17 +177,17 @@ It must have the form\n\
 @end example\n\
 \n\
 @noindent\n\
 in which @var{x}, @var{xdot}, and @var{res} are vectors, and @var{t} is a\n\
 scalar.\n\
 \n\
 If @var{fcn} is a two-element string array, the first element names\n\
 the function @math{f} described above, and the second element names\n\
-a function to compute the modified Jacobian
+a function to compute the modified Jacobian\n\
 \n\
 @tex\n\
 $$\n\
 J = {\\partial f \\over \\partial x}\n\
   + c {\\partial f \\over \\partial \\dot{x}}\n\
 $$\n\
 @end tex\n\
 @ifinfo\n\
diff --git a/src/DLD-FUNCTIONS/dasrt.cc b/src/DLD-FUNCTIONS/dasrt.cc
--- a/src/DLD-FUNCTIONS/dasrt.cc
+++ b/src/DLD-FUNCTIONS/dasrt.cc
@@ -280,17 +280,17 @@ It must have the form\n\
 @end example\n\
 \n\
 @noindent\n\
 in which @var{x}, @var{xdot}, and @var{res} are vectors, and @var{t} is a\n\
 scalar.\n\
 \n\
 If @var{fcn} is a two-element string array, the first element names\n\
 the function @math{f} described above, and the second element names\n\
-a function to compute the modified Jacobian
+a function to compute the modified Jacobian\n\
 \n\
 @tex\n\
 $$\n\
 J = {\\partial f \\over \\partial x}\n\
   + c {\\partial f \\over \\partial \\dot{x}}\n\
 $$\n\
 @end tex\n\
 @ifinfo\n\
@@ -319,17 +319,17 @@ This function must have the form\n\
 @var{g_out} = g (@var{x}, @var{t})\n\
 @end example\n\
 \n\
 and return a vector of the constraint function values.\n\
 If the value of any of the constraint functions changes sign, @sc{Dasrt}\n\
 will attempt to stop the integration at the point of the sign change.\n\
 \n\
 If the name of the constraint function is omitted, @code{dasrt} solves\n\
-the saem problem as @code{daspk} or @code{dassl}.
+the saem problem as @code{daspk} or @code{dassl}.\n\
 \n\
 Note that because of numerical errors in the constraint functions\n\
 due to roundoff and integration error, @sc{Dasrt} may return false\n\
 roots, or return the same root at two or more nearly equal values of\n\
 @var{T}.  If such false roots are suspected, the user should consider\n\
 smaller error tolerances or higher precision in the evaluation of the\n\
 constraint functions.\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/dassl.cc b/src/DLD-FUNCTIONS/dassl.cc
--- a/src/DLD-FUNCTIONS/dassl.cc
+++ b/src/DLD-FUNCTIONS/dassl.cc
@@ -244,17 +244,17 @@ It must have the form\n\
 @end example\n\
 \n\
 @noindent\n\
 in which @var{x}, @var{xdot}, and @var{res} are vectors, and @var{t} is a\n\
 scalar.\n\
 \n\
 If @var{fcn} is a two-element string array, the first element names\n\
 the function @math{f} described above, and the second element names\n\
-a function to compute the modified Jacobian
+a function to compute the modified Jacobian\n\
 \n\
 @tex\n\
 $$\n\
 J = {\\partial f \\over \\partial x}\n\
   + c {\\partial f \\over \\partial \\dot{x}}\n\
 $$\n\
 @end tex\n\
 @ifinfo\n\
diff --git a/src/DLD-FUNCTIONS/lsode.cc b/src/DLD-FUNCTIONS/lsode.cc
--- a/src/DLD-FUNCTIONS/lsode.cc
+++ b/src/DLD-FUNCTIONS/lsode.cc
@@ -167,17 +167,17 @@ Solve the set of differential equations\
 with\n\
 $$ x(t_0) = x_0 $$\n\
 @end tex\n\
 @ifinfo\n\
 \n\
 @example\n\
 dx\n\
 -- = f(x, t)\n\
-dt
+dt\n\
 @end example\n\
 \n\
 with\n\
 \n\
 @example\n\
 x(t_0) = x_0\n\
 @end example\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/odessa.cc b/src/DLD-FUNCTIONS/odessa.cc
--- a/src/DLD-FUNCTIONS/odessa.cc
+++ b/src/DLD-FUNCTIONS/odessa.cc
@@ -317,17 +317,17 @@ in which @var{xdot} and @var{x} are vect
 The @var{fcn} argument may also be an array of strings\n\
 \n\
 @example\n\
 [\"f\"; \"j\"; \"b\"]\n\
 @end example\n\
 \n\
 in which the first element names the function @math{f} described\n\
 above, the second element names a function to compute the Jacobian\n\
-of @math{f}, and the third element names a function to compute the\n
+of @math{f}, and the third element names a function to compute the\n\
 inhomogeneity matrix.\n\
 \n\
 The Jacobian function must have the form\n\
 \n\
 @example\n\
 @var{jac} = j (@var{x}, @var{t})\n\
 @end example\n\
 \n\
