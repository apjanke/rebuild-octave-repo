# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1285054546 14400
#      Tue Sep 21 03:35:46 2010 -0400
# Node ID aca961a3f387c74d077c6114fa2c171480007e42
# Parent  0de4eff677d6b5f96ef4eea771dc32b77d834cb5
provide gethostname function

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2010-09-21  John W. Eaton  <jwe@octave.org>
+
+	* oct-env.cc (do_get_host_name): Call gnulib::gethostname
+	instead of octave_gethostname.
+
+	* lo-utils.h, lo-cutils.c (octave_gethostname): Delete.
+
 2010-09-20  John W. Eaton  <jwe@octave.org>
 
 	* oct-time.cc (octave_time::octave_time, octave_strptime::init):
 	Call gnulib::mktime instead of mktime (may fix bug #31079).
 
 2010-09-15  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dSparse.h (SparseMatrix::SparseMatrix (const Sparse<double>&)):
diff --git a/liboctave/lo-cutils.c b/liboctave/lo-cutils.c
--- a/liboctave/lo-cutils.c
+++ b/liboctave/lo-cutils.c
@@ -15,24 +15,16 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-/*
-
-The function gethostname was adapted from a similar function from GNU
-Bash, the Bourne Again SHell, copyright (C) 1987, 1989, 1991 Free
-Software Foundation, Inc.
-
-*/
-
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 /* This gives us a better chance of finding a prototype for strptime
    on some systems.  */
 
 #if ! defined (_XOPEN_SOURCE)
@@ -62,22 +54,16 @@ octave_strcasecmp (const char *s1, const
 }
 
 OCTAVE_API int
 octave_strncasecmp (const char *s1, const char *s2, size_t n)
 {
   return strncasecmp (s1, s2, n);
 }
 
-OCTAVE_API int
-octave_gethostname (char *name, int namelen)
-{
-  return gethostname (name, namelen);
-}
-
 #ifdef HAVE_LOADLIBRARY_API
 #include <windows.h>
 
 /* Need this since in C++ can't cast from int(*)() to void* */
 OCTAVE_API void *
 octave_w32_library_search (HINSTANCE handle, const char * name)
 {
   return (GetProcAddress (handle, name));
diff --git a/liboctave/lo-utils.h b/liboctave/lo-utils.h
--- a/liboctave/lo-utils.h
+++ b/liboctave/lo-utils.h
@@ -45,18 +45,16 @@ extern OCTAVE_API void
 octave_putenv (const std::string&, const std::string&);
 
 extern OCTAVE_API std::string octave_fgets (std::FILE *);
 extern OCTAVE_API std::string octave_fgetl (std::FILE *);
 
 extern OCTAVE_API std::string octave_fgets (std::FILE *, bool& eof);
 extern OCTAVE_API std::string octave_fgetl (std::FILE *, bool& eof);
 
-extern "C" OCTAVE_API int octave_gethostname (char *, int);
-
 extern "C" OCTAVE_API void
 octave_qsort (void *base, size_t n, size_t size,
               int (*cmp) (const void *, const void *));
 
 extern "C" OCTAVE_API int
 octave_strcasecmp (const char *s1, const char *s2);
 
 extern "C" OCTAVE_API int
diff --git a/liboctave/oct-env.cc b/liboctave/oct-env.cc
--- a/liboctave/oct-env.cc
+++ b/liboctave/oct-env.cc
@@ -445,19 +445,19 @@ octave_env::do_get_user_name (void) cons
   return user_name;
 }
 
 std::string
 octave_env::do_get_host_name (void) const
 {
   if (host_name.empty ())
     {
-      char hostname[256];
+      char hostname[1024];
 
-      int status = octave_gethostname (hostname, 255);
+      int status = gnulib::gethostname (hostname, 1023);
 
       host_name = (status < 0) ? "unknown" : hostname;
     }
 
   return host_name;
 }
 
 std::string
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-21  John W. Eaton  <jwe@octave.org>
+
+	* syscalls.cc (Fgethostname): New function.
+
 2010-09-20  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/time.cc (Fmktime): New tests (bug #31079).
 
 2010-09-20  John W. Eaton  <jwe@octave.org>
 
 	Bug #31085:
 
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -36,16 +36,17 @@ along with Octave; see the file COPYING.
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <fcntl.h>
 
 #include "file-ops.h"
 #include "file-stat.h"
+#include "oct-env.h"
 #include "oct-syscalls.h"
 #include "oct-uname.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "lo-utils.h"
 #include "oct-map.h"
@@ -1168,16 +1169,32 @@ DEFUNX ("S_ISSOCK", FS_ISSOCK, args, ,
         error ("S_ISSOCK: invalid mode value");
     }
   else
     print_usage ();
 
   return retval;
 }
 
+DEFUN (gethostname, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {[@var{uts}, @var{err}, @var{msg}] =} uname ()\n\
+Return the hostname of the system on which Octave is running\n\
+@end deftypefn")
+{
+  octave_value retval;
+
+  if (args.length () == 0)
+    retval = octave_env::get_host_name ();
+  else
+    print_usage ();
+
+  return retval;
+}
+
 DEFUN (uname, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{uts}, @var{err}, @var{msg}] =} uname ()\n\
 Return system information in the structure.  For example:\n\
 \n\
 @example\n\
 @group\n\
 uname ()\n\
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -37,16 +37,17 @@ along with Octave; see the file COPYING.
 #include <unistd.h>
 
 #include "quit.h"
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-mappers.h"
+#include "lo-utils.h"
 #include "oct-cmplx.h"
 #include "oct-env.h"
 #include "pathsearch.h"
 #include "str-vec.h"
 
 #include "Cell.h"
 #include <defaults.h>
 #include "defun.h"
