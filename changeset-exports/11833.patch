# HG changeset patch
# User Thomas Weber <thomas.weber.mail@gmail.com>
# Date 1220978298 14400
#      Tue Sep 09 12:38:18 2008 -0400
# Branch release-3-0-x
# Node ID 355d6b8e21119cd27f886e6513d8538553b8c04b
# Parent  5860aaef2f6fda163ac4fbd97141b8f37c30867a
Typo in num2cell's description

diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -530,18 +530,18 @@ cellfun (@@factorial, @{-1,2@},'ErrorHan
 %! assert(b,{'c','g'})
 %! assert(c,{'.d','.h'})
 
 */
 
 DEFUN_DLD (num2cell, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{c} =} num2cell (@var{m})\n\
-@deftypefnx {Loadable Function} {@var{c} =} num2cell (@var{m}, @var{d})\n\
-Convert to matrix @var{m} into a cell array. If @var{d} is defined the\n\
+@deftypefnx {Loadable Function} {@var{c} =} num2cell (@var{m}, @var{dim})\n\
+Converts the matrix @var{m} into a cell array. If @var{dim} is defined, the\n\
 value @var{c} is of dimension 1 in this dimension and the elements of\n\
 @var{m} are placed in slices in @var{c}.\n\
 @seealso{mat2cell}\n\
 @end deftypefn") 
 {
   int nargin =  args.length();
   octave_value retval;
 
@@ -628,17 +628,17 @@ value @var{c} is of dimension 1 in this 
 
 */
 
 DEFUN_DLD (mat2cell, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{b} =} mat2cell (@var{a}, @var{m}, @var{n})\n\
 @deftypefnx {Loadable Function} {@var{b} =} mat2cell (@var{a}, @var{d1}, @var{d2}, @dots{})\n\
 @deftypefnx {Loadable Function} {@var{b} =} mat2cell (@var{a}, @var{r})\n\
-Converts the matrix @var{a} to a cell array If @var{a} is 2-D, then\n\
+Converts the matrix @var{a} to a cell array. If @var{a} is 2-D, then\n\
 it is required that @code{sum (@var{m}) == size (@var{a}, 1)} and\n\
 @code{sum (@var{n}) == size (@var{a}, 2)}. Similarly, if @var{a} is\n\
 a multi-dimensional and the number of dimensional arguments is equal\n\
 to the dimensions of @var{a}, then it is required that @code{sum (@var{di})\n\
 == size (@var{a}, i)}.\n\
 \n\
 Given a single dimensional argument @var{r}, the other dimensional\n\
 arguments are assumed to equal @code{size (@var{a},@var{i})}.\n\
