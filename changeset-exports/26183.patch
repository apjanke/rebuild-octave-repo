# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1544221770 18000
#      Fri Dec 07 17:29:30 2018 -0500
# Node ID 341d927513dd3dfee2b05fce24388758a070376f
# Parent  34617dd78f02df2b6175e23f6bff4e8860e5c477
avoid unnecessary use of global variable

* ls_command.m (__ls_comand__): Declare persistent instead of global.
* ls.m: Simply call ls_command instead of accessing global
__ls_command__ variable.

diff --git a/scripts/miscellaneous/ls.m b/scripts/miscellaneous/ls.m
--- a/scripts/miscellaneous/ls.m
+++ b/scripts/miscellaneous/ls.m
@@ -50,22 +50,16 @@
 ##
 ## @seealso{dir, readdir, glob, what, stat, filesep, ls_command}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = ls (varargin)
 
-  global __ls_command__;
-
-  if (isempty (__ls_command__) || ! ischar (__ls_command__))
-    ls_command ();  # Initialize global value for __ls_command__.
-  endif
-
   if (! iscellstr (varargin))
     error ("ls: all arguments must be character strings");
   endif
 
   if (nargin > 0)
     args = tilde_expand (varargin);
     if (ispc () && ! isunix ())
       idx = ! strncmp (args, '/', 1);
@@ -85,17 +79,17 @@ function retval = ls (varargin)
   else
     args = "";
   endif
 
   if (nargout > 0 && (isunix () || ismac ()))
     args = ["-1 ", args];
   endif
 
-  cmd = [__ls_command__ " " args];
+  cmd = [ls_command() " " args];
 
   if (page_screen_output () || nargout > 0)
     [status, output] = system (cmd);
 
     if (status != 0)
       error ("ls: command exited abnormally with status %d\n", status);
     elseif (nargout == 0)
       puts (output);
diff --git a/scripts/miscellaneous/ls_command.m b/scripts/miscellaneous/ls_command.m
--- a/scripts/miscellaneous/ls_command.m
+++ b/scripts/miscellaneous/ls_command.m
@@ -22,17 +22,17 @@
 ## Query or set the shell command used by Octave's @code{ls} command.
 ## @seealso{ls}
 ## @end deftypefn
 
 ## Author: jwe
 
 function old_val = ls_command (new_val)
 
-  global __ls_command__;
+  persistent __ls_command__;
 
   if (isempty (__ls_command__))
     ## MinGW uses different ls_command
     if (ispc () && ! isunix ()
         && isempty (file_in_path (getenv ("PATH"), "ls")))
       __ls_command__ = "dir /D";
     else
       __ls_command__ = "ls -C";
