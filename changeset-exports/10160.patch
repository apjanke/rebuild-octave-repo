# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264037966 18000
#      Wed Jan 20 20:39:26 2010 -0500
# Node ID cd96d29c5efa91677974bc69e6e9ce1fba619c48
# Parent  9f0e7bfe63e5d9080315e8995791da52ff6d8be2
remove Emacs local-variable settings from source files in src directory

diff --git a/src/Cell.cc b/src/Cell.cc
--- a/src/Cell.cc
+++ b/src/Cell.cc
@@ -294,14 +294,8 @@ Cell::map (ctype_mapper fcn) const
   return retval;
 }
 
 Cell
 Cell::diag (octave_idx_type k) const
 {
   return Array<octave_value>::diag (k);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/Cell.h b/src/Cell.h
--- a/src/Cell.h
+++ b/src/Cell.h
@@ -125,14 +125,8 @@ public:
 private:
 
   typedef octave_value (octave_value::*ctype_mapper) (void) const;
 
   Cell map (ctype_mapper) const;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,72 @@
+2010-01-20  John W. Eaton  <jwe@octave.org>
+
+	* cutils.c, main.c, matherr.c, siglist.c, Cell.cc, bitfcns.cc,
+	c-file-ptr-stream.cc, comment-list.cc, data.cc, debug.cc,
+	defaults.cc, defun.cc, dirfns.cc, display.cc, dynamic-ld.cc,
+	error.cc, file-io.cc, gl-render.cc, gl2ps-renderer.cc,
+	graphics.cc, gripes.cc, help.cc, input.cc, load-path.cc,
+	load-save.cc, ls-ascii-helper.cc, ls-hdf5.cc, ls-mat-ascii.cc,
+	ls-mat4.cc, ls-mat5.cc, ls-oct-ascii.cc, ls-oct-binary.cc,
+	ls-utils.cc, mappers.cc, oct-fstrm.cc, oct-hist.cc,
+	oct-iostrm.cc, oct-lvalue.cc, oct-map.cc, oct-obj.cc,
+	oct-prcstrm.cc, oct-procbuf.cc, oct-stream.cc, oct-strstrm.cc,
+	octave.cc, ov-base-int.cc, ov-base-mat.cc, ov-base-scalar.cc,
+	ov-base-sparse.cc, ov-base.cc, ov-bool-mat.cc,
+	ov-bool-sparse.cc, ov-bool.cc, ov-builtin.cc, ov-cell.cc,
+	ov-ch-mat.cc, ov-class.cc, ov-colon.cc, ov-complex.cc,
+	ov-cs-list.cc, ov-cx-mat.cc, ov-cx-sparse.cc, ov-dld-fcn.cc,
+	ov-fcn-handle.cc, ov-fcn-inline.cc, ov-fcn.cc, ov-float.cc,
+	ov-flt-complex.cc, ov-flt-cx-mat.cc, ov-flt-re-mat.cc,
+	ov-int16.cc, ov-int32.cc, ov-int64.cc, ov-int8.cc, ov-list.cc,
+	ov-mex-fcn.cc, ov-range.cc, ov-re-mat.cc, ov-re-sparse.cc,
+	ov-scalar.cc, ov-str-mat.cc, ov-struct.cc, ov-typeinfo.cc,
+	ov-uint16.cc, ov-uint32.cc, ov-uint64.cc, ov-uint8.cc,
+	ov-usr-fcn.cc, ov.cc, pager.cc, pr-output.cc, procstream.cc,
+	pt-arg-list.cc, pt-assign.cc, pt-binop.cc, pt-bp.cc, pt-cell.cc,
+	pt-check.cc, pt-cmd.cc, pt-colon.cc, pt-const.cc, pt-decl.cc,
+	pt-eval.cc, pt-except.cc, pt-exp.cc, pt-fcn-handle.cc, pt-id.cc,
+	pt-idx.cc, pt-jump.cc, pt-loop.cc, pt-mat.cc, pt-misc.cc,
+	pt-pr-code.cc, pt-select.cc, pt-stmt.cc, pt-unop.cc, pt.cc,
+	sighandlers.cc, sparse-xdiv.cc, sparse-xpow.cc, strfns.cc,
+	symtab.cc, syscalls.cc, sysdep.cc, token.cc, toplev.cc,
+	unwind-prot.cc, utils.cc, variables.cc, xdiv.cc, xpow.cc,
+	zfstream.cc, Cell.h, base-list.h, builtins.h,
+	c-file-ptr-stream.h, comment-list.h, debug.h, defun-dld.h,
+	defun-int.h, defun.h, dirfns.h, display.h, dynamic-ld.h,
+	error.h, file-io.h, gl2ps-renderer.h, gripes.h, help.h, input.h,
+	lex.h, load-path.h, load-save.h, ls-ascii-helper.h, ls-hdf5.h,
+	ls-mat-ascii.h, ls-mat4.h, ls-mat5.h, ls-oct-ascii.h,
+	ls-oct-binary.h, ls-utils.h, mex.h, mexproto.h, oct-errno.h,
+	oct-fstrm.h, oct-hdf5.h, oct-hist.h, oct-iostrm.h, oct-lvalue.h,
+	oct-map.h, oct-obj.h, oct-prcstrm.h, oct-procbuf.h,
+	oct-stdstrm.h, oct-stream.h, oct-strstrm.h, oct.h, octave.h,
+	ops.h, ov-base-int.h, ov-base-mat.h, ov-base-scalar.h,
+	ov-base-sparse.h, ov-base.h, ov-bool-mat.h, ov-bool-sparse.h,
+	ov-bool.h, ov-builtin.h, ov-cell.h, ov-ch-mat.h, ov-class.h,
+	ov-colon.h, ov-complex.h, ov-cs-list.h, ov-cx-mat.h,
+	ov-cx-sparse.h, ov-dld-fcn.h, ov-fcn-handle.h, ov-fcn-inline.h,
+	ov-fcn.h, ov-float.h, ov-flt-complex.h, ov-flt-cx-diag.h,
+	ov-flt-cx-mat.h, ov-flt-re-mat.h, ov-int-traits.h, ov-int16.h,
+	ov-int32.h, ov-int64.h, ov-int8.h, ov-intx.h, ov-list.h,
+	ov-mex-fcn.h, ov-range.h, ov-re-mat.h, ov-re-sparse.h,
+	ov-scalar.h, ov-str-mat.h, ov-struct.h, ov-type-conv.h,
+	ov-typeinfo.h, ov-uint16.h, ov-uint32.h, ov-uint64.h,
+	ov-uint8.h, ov-usr-fcn.h, ov.h, pager.h, parse.h, pr-output.h,
+	procstream.h, pt-all.h, pt-arg-list.h, pt-assign.h, pt-binop.h,
+	pt-bp.h, pt-cbinop.h, pt-cell.h, pt-check.h, pt-cmd.h,
+	pt-colon.h, pt-const.h, pt-decl.h, pt-eval.h, pt-except.h,
+	pt-exp.h, pt-fcn-handle.h, pt-id.h, pt-idx.h, pt-jump.h,
+	pt-loop.h, pt-mat.h, pt-misc.h, pt-pr-code.h, pt-select.h,
+	pt-stmt.h, pt-unop.h, pt-walk.h, pt.h, sighandlers.h, siglist.h,
+	sparse-xdiv.h, sparse-xpow.h, symtab.h, sysdep.h, token.h,
+	toplev.h, unwind-prot.h, utils.h, variables.h, xdiv.h, xpow.h,
+	zfstream.h, oct-parse.yy, lex.ll: Delete EMacs local-variable settings.
+
 2010-01-20  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__magick_read__.cc, DLD-FUNCTIONS/balance.cc,
 	DLD-FUNCTIONS/besselj.cc, DLD-FUNCTIONS/betainc.cc,
 	DLD-FUNCTIONS/ccolamd.cc, DLD-FUNCTIONS/cellfun.cc,
 	DLD-FUNCTIONS/chol.cc, DLD-FUNCTIONS/colamd.cc,
 	DLD-FUNCTIONS/colloc.cc, DLD-FUNCTIONS/conv2.cc,
 	DLD-FUNCTIONS/daspk.cc, DLD-FUNCTIONS/dasrt.cc,
diff --git a/src/base-list.h b/src/base-list.h
--- a/src/base-list.h
+++ b/src/base-list.h
@@ -87,14 +87,8 @@ public:
   void append (const elt_type& s) { lst.push_back (s); }
 
 private:
 
   std::list<elt_type> lst;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -647,14 +647,8 @@ The default for @var{type} is @code{uint
     retval = octave_int32 (std::numeric_limits<int32_t>::min ());
   else if (cname == "int64")
     retval = octave_int64 (std::numeric_limits<int64_t>::min ());
   else
     error ("intmin: not defined for '%s' objects", cname.c_str ());
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/builtins.h b/src/builtins.h
--- a/src/builtins.h
+++ b/src/builtins.h
@@ -21,14 +21,8 @@ along with Octave; see the file COPYING.
 */
 
 #if !defined (octave_builtins_h)
 #define octave_builtins_h 1
 
 extern OCTINTERP_API void install_builtins (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/c-file-ptr-stream.cc b/src/c-file-ptr-stream.cc
--- a/src/c-file-ptr-stream.cc
+++ b/src/c-file-ptr-stream.cc
@@ -338,14 +338,8 @@ c_zfile_ptr_buf::close (void)
       retval = cf (f);
       f = 0;
     }
 
   return retval;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/c-file-ptr-stream.h b/src/c-file-ptr-stream.h
--- a/src/c-file-ptr-stream.h
+++ b/src/c-file-ptr-stream.h
@@ -204,14 +204,8 @@ private:
 
 typedef c_file_ptr_stream<std::istream, gzFile, c_zfile_ptr_buf> i_c_zfile_ptr_stream;
 typedef c_file_ptr_stream<std::ostream, gzFile, c_zfile_ptr_buf> o_c_zfile_ptr_stream;
 typedef c_file_ptr_stream<std::iostream, gzFile, c_zfile_ptr_buf> io_c_zfile_ptr_stream;
 
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/comment-list.cc b/src/comment-list.cc
--- a/src/comment-list.cc
+++ b/src/comment-list.cc
@@ -93,14 +93,8 @@ octave_comment_buffer::do_get_comment (v
   if (comment_list && comment_list->length () > 0)
     {
       retval = comment_list;
       comment_list = new octave_comment_list ();
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/comment-list.h b/src/comment-list.h
--- a/src/comment-list.h
+++ b/src/comment-list.h
@@ -120,14 +120,8 @@ private:
   octave_comment_list *do_get_comment (void);
 
   octave_comment_list *comment_list;
 
   static octave_comment_buffer *instance;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/cutils.c b/src/cutils.c
--- a/src/cutils.c
+++ b/src/cutils.c
@@ -112,14 +112,8 @@ octave_usleep (unsigned int useconds)
 #endif
 }
 
 int
 octave_raw_vsnprintf (char *buf, size_t n, const char *fmt, va_list args)
 {
   return vsnprintf (buf, n, fmt, args);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -6738,14 +6738,8 @@ then an empty matrix is returned.\n\
 
 %!error diff ("foo");
 
 %!error diff ();
 
 %!error diff (1, 2, 3, 4);
 
 */
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -1121,14 +1121,8 @@ Return true if debug mode is on, otherwi
 
   if (args.length () == 0)
     retval = Vdebugging;
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/debug.h b/src/debug.h
--- a/src/debug.h
+++ b/src/debug.h
@@ -139,14 +139,8 @@ private:
   fname_line_map do_get_breakpoint_list (const octave_value_list& fname_list);
 
   bool do_have_breakpoints (void) { return (! bp_set.empty ()); }
 };
 
 std::string get_file_line (const std::string& fname, size_t line);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -478,14 +478,8 @@ Return the version number of Octave, as 
 
   if (nargin == 0)
     retval = OCTAVE_VERSION;
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/defun-dld.h b/src/defun-dld.h
--- a/src/defun-dld.h
+++ b/src/defun-dld.h
@@ -65,14 +65,8 @@ along with Octave; see the file COPYING.
 #define DEFUNX_DLD(name, fname, gname, args_name, nargout_name, doc) \
   DECLARE_FUNX (fname, args_name, nargout_name); \
   DEFINE_FUNX_INSTALLER_FUN (name, fname, gname, doc) \
   DECLARE_FUNX (fname, args_name, nargout_name)
 
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -174,14 +174,8 @@ typedef octave_function * (*octave_dld_f
 
 // No definition is required for an alias.
 
 #define DEFALIAS_INTERNAL(alias, name)
 
 #endif /* ! MAKE_BUILTINS */
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/defun.cc b/src/defun.cc
--- a/src/defun.cc
+++ b/src/defun.cc
@@ -140,14 +140,8 @@ get_current_shlib (void)
         {
           octave_mex_function *mex = dynamic_cast<octave_mex_function *> (curr_fcn);
           retval = mex->get_shlib ();
         }
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/defun.h b/src/defun.h
--- a/src/defun.h
+++ b/src/defun.h
@@ -60,14 +60,8 @@ along with Octave; see the file COPYING.
 // Make alias another name for the existing function name.  This macro
 // must be used in the same file where name is defined, after the
 // definition for name.
 
 #define DEFALIAS(alias, name) \
   DEFALIAS_INTERNAL (alias, name)
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -713,14 +713,8 @@ DEFUN (confirm_recursive_rmdir, args, na
 @deftypefn {Built-in Function} {@var{val} =} confirm_recursive_rmdir ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} confirm_recursive_rmdir (@var{new_val})\n\
 Query or set the internal variable that controls whether Octave\n\
 will ask for confirmation before recursively removing a directory tree.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (confirm_recursive_rmdir);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/dirfns.h b/src/dirfns.h
--- a/src/dirfns.h
+++ b/src/dirfns.h
@@ -33,14 +33,8 @@ extern std::string polite_directory_form
 extern std::string base_pathname (const std::string&);
 extern std::string make_absolute (const std::string&, const std::string&);
 extern std::string get_working_directory (const std::string&);
 
 // The time we last time we changed directories.
 extern octave_time Vlast_chdir_time;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/display.cc b/src/display.cc
--- a/src/display.cc
+++ b/src/display.cc
@@ -144,14 +144,8 @@ display_info::instance_ok (bool query)
     {
       ::error ("unable to create display_info object!");
 
       retval = false;
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/display.h b/src/display.h
--- a/src/display.h
+++ b/src/display.h
@@ -90,14 +90,8 @@ private:
   double do_y_dpi (void) const { return ry; }
 
   void init (bool query = true);
 
   static bool instance_ok (bool query = true);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -552,14 +552,8 @@ octave_dynamic_loader::mex_uscore_mangle
   return "_mexFunction";
 }
 
 std::string
 octave_dynamic_loader::mex_f77_mangler (const std::string&)
 {
   return STRINGIFY (F77_FUNC (mexfunction, MEXFUNCTION));
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/dynamic-ld.h b/src/dynamic-ld.h
--- a/src/dynamic-ld.h
+++ b/src/dynamic-ld.h
@@ -92,14 +92,8 @@ protected:
   static std::string mex_mangler (const std::string& name);
 
   static std::string mex_uscore_mangler (const std::string& name);
 
   static std::string mex_f77_mangler (const std::string& name);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -1813,14 +1813,8 @@ last_warning_message (void)
   return Vlast_warning_message;
 }
 
 std::string
 last_warning_id (void)
 {
   return Vlast_warning_id;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/error.h b/src/error.h
--- a/src/error.h
+++ b/src/error.h
@@ -125,14 +125,8 @@ extern OCTINTERP_API bool discard_warnin
 
 // Helper functions to pass last error and warning messages and ids
 extern OCTINTERP_API std::string last_error_message (void);
 extern OCTINTERP_API std::string last_error_id (void);
 extern OCTINTERP_API std::string last_warning_message (void);
 extern OCTINTERP_API std::string last_warning_id (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -2275,14 +2275,8 @@ DEFUNX ("stderr", Fstderr, args, ,
 Return the numeric value corresponding to the standard error stream.\n\
 Even if paging is turned on, the standard error is not sent to the\n\
 pager.  It is useful for error messages and prompts.\n\
 @seealso{stdin, stdout}\n\
 @end deftypefn")
 {
   return const_value ("stderr", args, stderr_file);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/file-io.h b/src/file-io.h
--- a/src/file-io.h
+++ b/src/file-io.h
@@ -30,14 +30,8 @@ extern OCTINTERP_API void initialize_fil
 
 extern OCTINTERP_API void close_files (void);
 
 extern OCTINTERP_API void mark_for_deletion (const std::string&);
 
 extern OCTINTERP_API void cleanup_tmp_files (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -3256,14 +3256,8 @@ opengl_renderer::render_text (const std:
   return bbox;
 #else
   ::warning ("render_text: cannot render text, Freetype library not available");
   return Matrix (1, 4, 0.0);
 #endif
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/gl2ps-renderer.cc b/src/gl2ps-renderer.cc
--- a/src/gl2ps-renderer.cc
+++ b/src/gl2ps-renderer.cc
@@ -165,14 +165,8 @@ glps_renderer::draw_pixels (GLsizei w, G
     ::draw_pixels (w, h, format, static_cast<const GLushort *> (data));
   else if (type == GL_UNSIGNED_BYTE) 
     ::draw_pixels (w, h, format, static_cast<const GLubyte *> (data));
   else
     gl2psDrawPixels (w, h, 0, 0, format, type, data);
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/gl2ps-renderer.h b/src/gl2ps-renderer.h
--- a/src/gl2ps-renderer.h
+++ b/src/gl2ps-renderer.h
@@ -75,15 +75,8 @@ protected:
 
 private:
   std::string filename;
   double fontsize;
   std::string fontname;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -5808,14 +5808,8 @@ set_property_in_handle (double handle, c
       if (! error_state)
 	ret = true;
     }
   else
     error ("%s: invalid handle (= %g)", func.c_str(), handle);
 
   return ret;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/gripes.cc b/src/gripes.cc
--- a/src/gripes.cc
+++ b/src/gripes.cc
@@ -278,14 +278,8 @@ gripe_nonbraced_cs_list_assignment (void
 }
 
 void
 gripe_warn_complex_cmp (void)
 {
   warning_with_id ("Octave:matlab-incompatible",
                    "potential Matlab compatibility problem: comparing complex numbers");
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/gripes.h b/src/gripes.h
--- a/src/gripes.h
+++ b/src/gripes.h
@@ -140,14 +140,8 @@ gripe_indexed_cs_list (void);
 
 extern OCTINTERP_API void
 gripe_nonbraced_cs_list_assignment (void);
 
 extern OCTINTERP_API void
 gripe_warn_complex_cmp (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -1137,14 +1137,8 @@ DEFUN (suppress_verbose_help_message, ar
 @deftypefnx {Built-in Function} {@var{old_val} =} suppress_verbose_help_message (@var{new_val})\n\
 Query or set the internal variable that controls whether Octave\n\
 will add additional help information to the end of the output from\n\
 the @code{help} command and usage messages for built-in commands.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (suppress_verbose_help_message);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/help.h b/src/help.h
--- a/src/help.h
+++ b/src/help.h
@@ -43,14 +43,8 @@ extern std::string Vinfo_file;
 
 // Name of the info reader we'd like to use.
 // (--info-program program)
 extern std::string Vinfo_program;
 
 extern std::string do_which (const std::string& name);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1521,14 +1521,8 @@ will set a breakpoint at the first line 
   if (! error_state && (::isalnum (Vfilemarker) || Vfilemarker == '_'))
     {
       Vfilemarker = tmp;
       error ("filemarker: character can not be a valid character for a function name");
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/input.h b/src/input.h
--- a/src/input.h
+++ b/src/input.h
@@ -117,14 +117,8 @@ enum echo_state
   ECHO_CMD_LINE = 4
 };
 
 extern int Vecho_executing_commands;
 
 extern octave_time Vlast_prompt_time;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/lex.h b/src/lex.h
--- a/src/lex.h
+++ b/src/lex.h
@@ -168,14 +168,8 @@ grab_comment_block (stream_reader& reade
 
 // TRUE means that we have encountered EOF on the input stream.
 extern bool parser_end_of_input;
 
 // Flags that need to be shared between the lexer and parser.
 extern lexical_feedback lexer_flags;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/lex.ll b/src/lex.ll
--- a/src/lex.ll
+++ b/src/lex.ll
@@ -3672,14 +3672,8 @@ Undocumented internal function.\n\
 {
   octave_value retval;
 
   retval = set_internal_variable (lexer_debug_flag, args, nargout,
            			  "__lexer_debug_flag__");
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -2146,14 +2146,8 @@ Remove @var{dir1}, @dots{} from the curr
       if (need_to_update)
 	rehash_internal ();
     }
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/load-path.h b/src/load-path.h
--- a/src/load-path.h
+++ b/src/load-path.h
@@ -525,15 +525,8 @@ private:
 
 extern std::string
 genpath (const std::string& dir, const string_vector& skip = "private");
 
 extern void execute_pkg_add (const std::string& dir);
 extern void execute_pkg_del (const std::string& dir);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; page-delimiter: "^/\\*" ***
-;;; End: ***
-*/
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1832,14 +1832,8 @@ default value is\n\
 @smallexample\n\
 \"# Created by Octave VERSION, %a %b %d %H:%M:%S %Y %Z <USER@@HOST>\"\n\
 @end smallexample\n\
 @seealso{strftime, save}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (save_header_format_string);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/load-save.h b/src/load-save.h
--- a/src/load-save.h
+++ b/src/load-save.h
@@ -84,14 +84,8 @@ do_load (std::istream& stream, const std
 extern void
 do_save (std::ostream& os, const symbol_table::symbol_record& sr,
 	 load_save_format fmt, bool save_as_floats);
 
 extern void
 write_header (std::ostream& os, load_save_format format);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-ascii-helper.cc b/src/ls-ascii-helper.cc
--- a/src/ls-ascii-helper.cc
+++ b/src/ls-ascii-helper.cc
@@ -168,14 +168,8 @@ read_until_newline (std::istream& is, bo
 	  char d;
 	  is.get (d);
 	  buf << d;
 	}
     }
   
   return buf.str ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-ascii-helper.h b/src/ls-ascii-helper.h
--- a/src/ls-ascii-helper.h
+++ b/src/ls-ascii-helper.h
@@ -31,14 +31,8 @@ skip_until_newline (std::istream& is, bo
 
 extern OCTINTERP_API void
 skip_preceeding_newline (std::istream& is);
 
 extern OCTINTERP_API std::string
 read_until_newline (std::istream& is, bool keep_newline = false);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-hdf5.cc b/src/ls-hdf5.cc
--- a/src/ls-hdf5.cc
+++ b/src/ls-hdf5.cc
@@ -830,14 +830,8 @@ save_hdf5_data (std::ostream& os, const 
 {
   hdf5_ofstream& hs = dynamic_cast<hdf5_ofstream&> (os);
 
   return add_hdf5_data (hs.file_id, tc, name, doc,
 			mark_as_global, save_as_floats);
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-hdf5.h b/src/ls-hdf5.h
--- a/src/ls-hdf5.h
+++ b/src/ls-hdf5.h
@@ -190,14 +190,8 @@ save_hdf5_data (std::ostream& os, const 
 #define H5T_NATIVE_IDX H5T_NATIVE_LONG
 #else
 #define H5T_NATIVE_IDX H5T_NATIVE_INT
 #endif
 
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-mat-ascii.cc b/src/ls-mat-ascii.cc
--- a/src/ls-mat-ascii.cc
+++ b/src/ls-mat-ascii.cc
@@ -371,15 +371,8 @@ save_mat_ascii_data (std::ostream& os, c
 
       os.flags (oflags);
 
       os.precision (old_precision);
     }
 
   return (os && success);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-mat-ascii.h b/src/ls-mat-ascii.h
--- a/src/ls-mat-ascii.h
+++ b/src/ls-mat-ascii.h
@@ -27,15 +27,8 @@ extern std::string
 read_mat_ascii_data (std::istream& is, const std::string& filename,
 		     octave_value& tc);
 
 extern bool
 save_mat_ascii_data (std::ostream& os, const octave_value& val_arg,
 		     int precision, bool tabs = false);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-mat4.cc b/src/ls-mat4.cc
--- a/src/ls-mat4.cc
+++ b/src/ls-mat4.cc
@@ -602,14 +602,8 @@ save_mat_binary_data (std::ostream& os, 
       m = ::imag (m_cmplx);
       os.write (reinterpret_cast<const char *> (m.data ()), 8 * len);
     }
   else
     gripe_wrong_type_arg ("save", tc, false);
 
   return os;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-mat4.h b/src/ls-mat4.h
--- a/src/ls-mat4.h
+++ b/src/ls-mat4.h
@@ -38,14 +38,8 @@ extern std::string
 read_mat_binary_data (std::istream& is, const std::string& filename,
 		      octave_value& tc);
 
 extern bool
 save_mat_binary_data (std::ostream& os, const octave_value& tc,
 		      const std::string& name) ;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -2254,15 +2254,8 @@ save_mat5_binary_element (std::ostream& 
 
   return true;
 
  error_cleanup:
   error ("save: error while writing `%s' to MAT file", name.c_str ());
 
   return false;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-mat5.h b/src/ls-mat5.h
--- a/src/ls-mat5.h
+++ b/src/ls-mat5.h
@@ -54,15 +54,8 @@ read_mat5_binary_element (std::istream& 
 			  bool swap, bool& global, octave_value& tc);
 extern bool
 save_mat5_binary_element (std::ostream& os,
 			  const octave_value& tc, const std::string& name,
 			  bool mark_as_global, bool mat7_format,
 			  bool save_as_floats, bool compressing = false);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-oct-ascii.cc b/src/ls-oct-ascii.cc
--- a/src/ls-oct-ascii.cc
+++ b/src/ls-oct-ascii.cc
@@ -414,15 +414,8 @@ DEFUN (save_precision, args, nargout,
 @deftypefn {Built-in Function} {@var{val} =} save_precision ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} save_precision (@var{new_val})\n\
 Query or set the internal variable that specifies the number of\n\
 digits to keep when saving data in text format.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE_WITH_LIMITS (save_precision, -1, INT_MAX);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-oct-ascii.h b/src/ls-oct-ascii.h
--- a/src/ls-oct-ascii.h
+++ b/src/ls-oct-ascii.h
@@ -182,15 +182,8 @@ extract_keyword (std::istream& is, const
 	  if (next_only)
 	    break;
 	}
     }
   return status;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-oct-binary.cc b/src/ls-oct-binary.cc
--- a/src/ls-oct-binary.cc
+++ b/src/ls-oct-binary.cc
@@ -300,15 +300,8 @@ save_binary_data (std::ostream& os, cons
   // The octave_value of tc is const. Make a copy...
   octave_value val = tc;
 
   // Call specific save function
   bool success = val.save_binary (os, save_as_floats);
 
   return (os && success);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-oct-binary.h b/src/ls-oct-binary.h
--- a/src/ls-oct-binary.h
+++ b/src/ls-oct-binary.h
@@ -30,15 +30,8 @@ save_binary_data (std::ostream& os, cons
 
 extern OCTINTERP_API std::string
 read_binary_data (std::istream& is, bool swap,
 		  oct_mach_info::float_format fmt,
 		  const std::string& filename, bool& global,
 		  octave_value& tc, std::string& doc);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ls-utils.cc b/src/ls-utils.cc
--- a/src/ls-utils.cc
+++ b/src/ls-utils.cc
@@ -53,14 +53,8 @@ get_save_type (double /* max_val */, dou
   //    st = LS_CHAR;
   //  else if (max_val < 32768 && min_val >= -32768)
   //    st = LS_SHORT;
   //  else if (max_val <= 2147483647L && min_val >= -2147483647L)
   //    st = LS_INT;
 
   return st;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ls-utils.h b/src/ls-utils.h
--- a/src/ls-utils.h
+++ b/src/ls-utils.h
@@ -22,14 +22,8 @@ along with Octave; see the file COPYING.
 
 #if !defined (octave_ls_utils_h)
 #define octave_ls_utils 1
 
 extern save_type
 get_save_type (double max_val, double min_val);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/main.c b/src/main.c
--- a/src/main.c
+++ b/src/main.c
@@ -29,14 +29,8 @@ along with Octave; see the file COPYING.
 
 #include "octave.h"
 
 int
 main (int argc, char **argv)
 {
   return octave_main (argc, argv, 0);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -1757,14 +1757,8 @@ DEFALIAS (upper, toupper);
 %!  a(3,3,3,3) = "d";
 %!  assert(toupper(a)(3,3,3,3), "D");
 
 */
 
 DEFALIAS (gammaln, lgamma);
 
 DEFALIAS (isfinite, finite);
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/matherr.c b/src/matherr.c
--- a/src/matherr.c
+++ b/src/matherr.c
@@ -46,14 +46,8 @@ matherr (struct exception *x)
       break;
     }
 
   /* But don't print the system message. */
 
   return 1;
 }
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C ***
-;;; End: ***
-*/
diff --git a/src/mex.h b/src/mex.h
--- a/src/mex.h
+++ b/src/mex.h
@@ -168,14 +168,8 @@ void mexFunction (int nlhs, mxArray* plh
 #define int8_T int8_t
 #endif
 
 #if defined (__cplusplus)
 }
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C ***
-;;; End: ***
-*/
diff --git a/src/mexproto.h b/src/mexproto.h
--- a/src/mexproto.h
+++ b/src/mexproto.h
@@ -271,14 +271,8 @@ extern OCTINTERP_API mwIndex mxCalcSingl
 
 extern OCTINTERP_API size_t mxGetElementSize (const mxArray *ptr);
 
 #if defined (__cplusplus)
 }
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C ***
-;;; End: ***
-*/
diff --git a/src/oct-errno.h b/src/oct-errno.h
--- a/src/oct-errno.h
+++ b/src/oct-errno.h
@@ -63,15 +63,8 @@ private:
   static octave_errno *instance;
 
   int do_lookup (const std::string& name);
 
   Octave_map do_list (void);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; page-delimiter: "^/\\*" ***
-;;; End: ***
-*/
diff --git a/src/oct-fstrm.cc b/src/oct-fstrm.cc
--- a/src/oct-fstrm.cc
+++ b/src/oct-fstrm.cc
@@ -112,14 +112,8 @@ octave_fstream::output_stream (void)
 {
   std::ostream *retval = 0;
 
   if (mode () & std::ios::out)
     retval = &fs;
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-fstrm.h b/src/oct-fstrm.h
--- a/src/oct-fstrm.h
+++ b/src/oct-fstrm.h
@@ -80,14 +80,8 @@ private:
   // No copying!
 
   octave_fstream (const octave_fstream&);
 
   octave_fstream& operator = (const octave_fstream&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-hdf5.h b/src/oct-hdf5.h
--- a/src/oct-hdf5.h
+++ b/src/oct-hdf5.h
@@ -23,14 +23,8 @@ along with Octave; see the file COPYING.
 #if !defined (octave__hdf5_h)
 #define octave_hdf5_h 1
 
 #if defined (HAVE_HDF5)
 #include <hdf5.h>
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -727,14 +727,8 @@ on the command line are saved in the his
 @end deftypefn")
 {
   octave_value retval = SET_INTERNAL_VARIABLE (saving_history);
 
   command_history::ignore_entries (! Vsaving_history);
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-hist.h b/src/oct-hist.h
--- a/src/oct-hist.h
+++ b/src/oct-hist.h
@@ -35,14 +35,8 @@ extern void octave_history_write_timesta
 
 // TRUE means input is coming from temporary history file.
 extern bool input_from_tmp_history_file;
 
 // TRUE if we are saving history.
 extern bool Vsaving_history;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-iostrm.cc b/src/oct-iostrm.cc
--- a/src/oct-iostrm.cc
+++ b/src/oct-iostrm.cc
@@ -83,14 +83,8 @@ octave_ostream::eof (void) const
   return os && os->eof ();
 }
 
 octave_stream
 octave_ostream::create (std::ostream *arg, const std::string& n)
 {
   return octave_stream (new octave_ostream (arg, n));
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-iostrm.h b/src/oct-iostrm.h
--- a/src/oct-iostrm.h
+++ b/src/oct-iostrm.h
@@ -148,14 +148,8 @@ private:
   // No copying!
 
   octave_ostream (const octave_ostream&);
 
   octave_ostream& operator = (const octave_ostream&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-lvalue.cc b/src/oct-lvalue.cc
--- a/src/oct-lvalue.cc
+++ b/src/oct-lvalue.cc
@@ -82,14 +82,8 @@ octave_lvalue::value (void)
 	  octave_value_list t = val->subsref (type, idx, 1);
 	  if (t.length () > 0)
 	    retval = t(0);	      
 	}
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-lvalue.h b/src/oct-lvalue.h
--- a/src/oct-lvalue.h
+++ b/src/oct-lvalue.h
@@ -98,14 +98,8 @@ private:
   std::list<octave_value_list> idx;
 
   octave_idx_type nel;
 
   bool index_set;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -528,14 +528,8 @@ Octave_map::index (const octave_value_li
 }
 
 /*
 %!# test preservation of key order by indexing
 %!test
 %!  x(1, 1).d = 10; x(4, 6).a = "b"; x(2, 4).f = 27;
 %!  assert (fieldnames (x([1, 2], [2:5])), {"d"; "a"; "f"});
 */
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-map.h b/src/oct-map.h
--- a/src/oct-map.h
+++ b/src/oct-map.h
@@ -205,14 +205,8 @@ private:
   void maybe_add_to_key_list (const std::string& k)
     {
       if (! contains (k))
 	key_list.push_back (k);
     }
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-obj.cc b/src/oct-obj.cc
--- a/src/oct-obj.cc
+++ b/src/oct-obj.cc
@@ -272,14 +272,8 @@ octave_value_list::make_storable_values 
   for (octave_idx_type i = 0; i < len; i++)
     {
       // This is optimized so that we don't force a copy unless necessary.
       octave_value tmp = cdata(i).storable_value ();
       if (! tmp.is_copy_of (cdata (i)))
         data(i) = tmp;
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-obj.h b/src/oct-obj.h
--- a/src/oct-obj.h
+++ b/src/oct-obj.h
@@ -167,14 +167,8 @@ private:
       return data(n);
     }
 
   const octave_value& elem (octave_idx_type n) const
     { return data(n); }
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -4588,14 +4588,8 @@ Undocumented internal function.\n\
 
   retval = set_internal_variable (debug_flag, args, nargout,
            			  "__parser_debug_flag__");
 
   octave_debug = debug_flag;
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: text ***
-;;; End: ***
-*/
diff --git a/src/oct-prcstrm.cc b/src/oct-prcstrm.cc
--- a/src/oct-prcstrm.cc
+++ b/src/oct-prcstrm.cc
@@ -64,14 +64,8 @@ octave_oprocstream::octave_oprocstream (
 			arg_md, ff, octave_pclose)
 {
 }
 
 octave_oprocstream::~octave_oprocstream (void)
 {
   do_close ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-prcstrm.h b/src/oct-prcstrm.h
--- a/src/oct-prcstrm.h
+++ b/src/oct-prcstrm.h
@@ -81,14 +81,8 @@ private:
   // No copying!
 
   octave_oprocstream (const octave_oprocstream&);
 
   octave_oprocstream& operator = (const octave_oprocstream&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -216,14 +216,8 @@ octave_procbuf::close (void)
   return this;
 
 #else
 
   return 0;
 
 #endif
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-procbuf.h b/src/oct-procbuf.h
--- a/src/oct-procbuf.h
+++ b/src/oct-procbuf.h
@@ -66,14 +66,8 @@ protected:
   pid_t proc_pid;
 
   octave_procbuf *next;
 };
 
 extern void symbols_of_oct_procbuf (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-stdstrm.h b/src/oct-stdstrm.h
--- a/src/oct-stdstrm.h
+++ b/src/oct-stdstrm.h
@@ -106,14 +106,8 @@ typedef octave_tstdiostream<c_file_ptr_b
 
 #ifdef HAVE_ZLIB
 
 typedef octave_tstdiostream<c_zfile_ptr_buf, io_c_zfile_ptr_stream, gzFile> octave_zstdiostream;
 
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -4425,14 +4425,8 @@ octave_stream_list::do_get_file_number (
       if (conv_err)
 	::error ("file id must be a file object, std::string, or integer value");
       else
 	retval = int_fid;
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -691,14 +691,8 @@ private:
   std::string do_list_open_files (void) const;
 
   octave_value do_open_file_numbers (void) const;
 
   int do_get_file_number (const octave_value& fid) const;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-strstrm.cc b/src/oct-strstrm.cc
--- a/src/oct-strstrm.cc
+++ b/src/oct-strstrm.cc
@@ -60,14 +60,8 @@ octave_istrstream::create (const std::st
 }
 
 octave_stream
 octave_ostrstream::create (std::ios::openmode arg_md,
 			   oct_mach_info::float_format flt_fmt)
 {
   return octave_stream (new octave_ostrstream (arg_md, flt_fmt));
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct-strstrm.h b/src/oct-strstrm.h
--- a/src/oct-strstrm.h
+++ b/src/oct-strstrm.h
@@ -170,14 +170,8 @@ private:
   // No copying!
 
   octave_ostrstream (const octave_ostrstream&);
 
   octave_ostrstream& operator = (const octave_ostrstream&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/oct.h b/src/oct.h
--- a/src/oct.h
+++ b/src/oct.h
@@ -38,14 +38,8 @@ along with Octave; see the file COPYING.
 #include "gripes.h"
 #include "help.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "utils.h"
 #include "variables.h"
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -954,14 +954,8 @@ Return the last component of the value r
 
   if (args.length () == 0)
     retval = octave_program_name;
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/octave.h b/src/octave.h
--- a/src/octave.h
+++ b/src/octave.h
@@ -29,14 +29,8 @@ extern "C" {
 
 extern OCTINTERP_API int octave_main (int argc, char **argv, int embedded);
 
 #ifdef	__cplusplus
 }
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ops.h b/src/ops.h
--- a/src/ops.h
+++ b/src/ops.h
@@ -397,14 +397,8 @@ extern void install_ops (void);
 
 #define CATOP_NONCONFORMANT(msg) \
   gripe_nonconformant (msg, \
 		       a1.rows (), a1.columns (), \
 		       a2.rows (), a2.columns ()); \
   return octave_value ()
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-int.cc b/src/ov-base-int.cc
--- a/src/ov-base-int.cc
+++ b/src/ov-base-int.cc
@@ -601,14 +601,8 @@ octave_base_int_scalar<T>::load_hdf5 (hi
   this->scalar = tmp;
 
   H5Dclose (data_hid);
 
   return true;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-int.h b/src/ov-base-int.h
--- a/src/ov-base-int.h
+++ b/src/ov-base-int.h
@@ -122,14 +122,8 @@ public:
 #if defined (HAVE_HDF5)
   bool save_hdf5 (hid_t loc_id, const char *name, bool );
 
   bool load_hdf5 (hid_t loc_id, const char *name);
 #endif
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -454,14 +454,8 @@ octave_base_matrix<MT>::print (std::ostr
 
 template <class MT>
 void
 octave_base_matrix<MT>::print_info (std::ostream& os,
 				    const std::string& prefix) const
 {
   matrix.print_info (os, prefix);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-mat.h b/src/ov-base-mat.h
--- a/src/ov-base-mat.h
+++ b/src/ov-base-mat.h
@@ -177,14 +177,8 @@ protected:
       delete idx_cache; idx_cache = 0;
     } 
 
   mutable MatrixType *typ;
   mutable idx_vector *idx_cache;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-scalar.cc b/src/ov-base-scalar.cc
--- a/src/ov-base-scalar.cc
+++ b/src/ov-base-scalar.cc
@@ -135,14 +135,8 @@ template <class ST>
 bool
 octave_base_scalar<ST>::print_name_tag (std::ostream& os,
 					const std::string& name) const
 {
   indent (os);
   os << name << " = ";
   return false;    
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-scalar.h b/src/ov-base-scalar.h
--- a/src/ov-base-scalar.h
+++ b/src/ov-base-scalar.h
@@ -139,14 +139,8 @@ public:
 
 protected:
 
   // The value of this scalar.
   ST scalar;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-sparse.cc b/src/ov-base-sparse.cc
--- a/src/ov-base-sparse.cc
+++ b/src/ov-base-sparse.cc
@@ -393,14 +393,8 @@ octave_base_sparse<T>::map (octave_base_
       retval = retval.sparse_bool_matrix_value ();
       break;
     default:
       break;
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base-sparse.h b/src/ov-base-sparse.h
--- a/src/ov-base-sparse.h
+++ b/src/ov-base-sparse.h
@@ -172,14 +172,8 @@ protected:
   octave_value map (octave_base_value::unary_mapper_t umap) const;
 
   T matrix;
 
   mutable MatrixType typ;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -1501,14 +1501,8 @@ s (1, :) = 1;\n\
 typeinfo (s)\n\
 @result{} matrix\n\
 @end group\n\
 @end example\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (sparse_auto_mutate);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -754,14 +754,8 @@ private:
   DECLARE_OV_BASE_TYPEID_FUNCTIONS_AND_DATA
 };
 
 // TRUE means to perform automatic sparse to real mutation if there
 // is memory to be saved
 extern bool Vsparse_auto_mutate;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool-mat.cc b/src/ov-bool-mat.cc
--- a/src/ov-bool-mat.cc
+++ b/src/ov-bool-mat.cc
@@ -570,14 +570,8 @@ Convert @var{x} to logical type.\n\
       else
         gripe_wrong_type_arg ("logical", arg);
     }
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool-mat.h b/src/ov-bool-mat.h
--- a/src/ov-bool-mat.h
+++ b/src/ov-bool-mat.h
@@ -226,14 +226,8 @@ public:
 protected:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool-sparse.cc b/src/ov-bool-sparse.cc
--- a/src/ov-bool-sparse.cc
+++ b/src/ov-bool-sparse.cc
@@ -786,14 +786,8 @@ octave_sparse_bool_matrix::as_mxArray (v
       ir[i] = matrix.ridx(i);
     }
 
   for (mwIndex i = 0; i < columns () + 1; i++)
     jc[i] = matrix.cidx(i);
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool-sparse.h b/src/ov-bool-sparse.h
--- a/src/ov-bool-sparse.h
+++ b/src/ov-bool-sparse.h
@@ -149,14 +149,8 @@ public:
 protected:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool.cc b/src/ov-bool.cc
--- a/src/ov-bool.cc
+++ b/src/ov-bool.cc
@@ -234,14 +234,8 @@ octave_bool::as_mxArray (void) const
   mxArray *retval = new mxArray (mxLOGICAL_CLASS, 1, 1, mxREAL);
 
   bool *pr = static_cast<bool *> (retval->get_data ());
 
   pr[0] = scalar;
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -220,14 +220,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-builtin.cc b/src/ov-builtin.cc
--- a/src/ov-builtin.cc
+++ b/src/ov-builtin.cc
@@ -112,14 +112,8 @@ octave_builtin::do_multi_index_op (int n
       catch (octave_execution_exception)
 	{
 	  gripe_library_execution_error ();
 	}
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-builtin.h b/src/ov-builtin.h
--- a/src/ov-builtin.h
+++ b/src/ov-builtin.h
@@ -82,14 +82,8 @@ private:
   octave_builtin& operator = (const octave_builtin& ob);
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -1477,14 +1477,8 @@ octave_cell::map (unary_mapper_t umap) c
     FORWARD_MAPPER (xtoascii);
     FORWARD_MAPPER (xtolower);
     FORWARD_MAPPER (xtoupper);
     
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cell.h b/src/ov-cell.h
--- a/src/ov-cell.h
+++ b/src/ov-cell.h
@@ -174,14 +174,8 @@ private:
   mutable std::auto_ptr<Array<std::string> > cellstr_cache;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-ch-mat.cc b/src/ov-ch-mat.cc
--- a/src/ov-ch-mat.cc
+++ b/src/ov-ch-mat.cc
@@ -190,14 +190,8 @@ octave_char_matrix::map (unary_mapper_t 
 
     default: 
       {
         octave_matrix m (array_value (true));
         return m.map (umap);
       }
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-ch-mat.h b/src/ov-ch-mat.h
--- a/src/ov-ch-mat.h
+++ b/src/ov-ch-mat.h
@@ -142,14 +142,8 @@ public:
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   mxArray *as_mxArray (void) const;
 
   octave_value map (unary_mapper_t umap) const;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-class.cc b/src/ov-class.cc
--- a/src/ov-class.cc
+++ b/src/ov-class.cc
@@ -2039,14 +2039,8 @@ This function may only be called from a 
 	    }
 	}
     }
   else
     error ("inferiorto: invalid call from outside class constructor");
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-class.h b/src/ov-class.h
--- a/src/ov-class.h
+++ b/src/ov-class.h
@@ -246,14 +246,8 @@ public:
   // A map from class names to lists of fields.
   static std::map<std::string, exemplar_info> exemplar_map;
 
   typedef std::map<std::string, exemplar_info>::iterator exemplar_iterator;
   typedef std::map<std::string, exemplar_info>::const_iterator exemplar_const_iterator;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-colon.cc b/src/ov-colon.cc
--- a/src/ov-colon.cc
+++ b/src/ov-colon.cc
@@ -42,14 +42,8 @@ octave_magic_colon::print (std::ostream&
   print_raw (os);
 }
 
 void
 octave_magic_colon::print_raw (std::ostream& os, bool) const
 {
   os << ":";
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-colon.h b/src/ov-colon.h
--- a/src/ov-colon.h
+++ b/src/ov-colon.h
@@ -72,14 +72,8 @@ public:
   void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
 private:
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-complex.cc b/src/ov-complex.cc
--- a/src/ov-complex.cc
+++ b/src/ov-complex.cc
@@ -451,14 +451,8 @@ octave_complex::map (unary_mapper_t umap
       SCALAR_MAPPER (isinf, xisinf);
       SCALAR_MAPPER (isna, octave_is_NA);
       SCALAR_MAPPER (isnan, xisnan);
 
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-complex.h b/src/ov-complex.h
--- a/src/ov-complex.h
+++ b/src/ov-complex.h
@@ -193,14 +193,8 @@ private:
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 typedef octave_complex octave_complex_scalar;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cs-list.cc b/src/ov-cs-list.cc
--- a/src/ov-cs-list.cc
+++ b/src/ov-cs-list.cc
@@ -37,14 +37,8 @@ along with Octave; see the file COPYING.
 DEFINE_OCTAVE_ALLOCATOR (octave_cs_list);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_cs_list, "cs-list", "cs-list");
 
 octave_cs_list::octave_cs_list (const Cell& c)
   : octave_base_value (), lst (c)
 {
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cs-list.h b/src/ov-cs-list.h
--- a/src/ov-cs-list.h
+++ b/src/ov-cs-list.h
@@ -79,14 +79,8 @@ private:
   octave_value_list lst;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cx-mat.cc b/src/ov-cx-mat.cc
--- a/src/ov-cx-mat.cc
+++ b/src/ov-cx-mat.cc
@@ -778,14 +778,8 @@ octave_complex_matrix::map (unary_mapper
       ARRAY_MAPPER (tan, Complex, std::tan);
       ARRAY_MAPPER (tanh, Complex, std::tanh);
       ARRAY_MAPPER (isna, bool, octave_is_NA);
 
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cx-mat.h b/src/ov-cx-mat.h
--- a/src/ov-cx-mat.h
+++ b/src/ov-cx-mat.h
@@ -175,14 +175,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cx-sparse.cc b/src/ov-cx-sparse.cc
--- a/src/ov-cx-sparse.cc
+++ b/src/ov-cx-sparse.cc
@@ -946,14 +946,8 @@ octave_sparse_complex_matrix::map (unary
       ARRAY_MAPPER (isna, bool, octave_is_NA);
       ARRAY_MAPPER (isinf, bool, xisinf);
       ARRAY_MAPPER (finite, bool, xfinite);
 
     default: // Attempt to go via dense matrix.
       return octave_base_sparse<SparseComplexMatrix>::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-cx-sparse.h b/src/ov-cx-sparse.h
--- a/src/ov-cx-sparse.h
+++ b/src/ov-cx-sparse.h
@@ -158,14 +158,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-dld-fcn.cc b/src/ov-dld-fcn.cc
--- a/src/ov-dld-fcn.cc
+++ b/src/ov-dld-fcn.cc
@@ -84,14 +84,8 @@ octave_dld_function::time_parsed (void) 
 //       of objects to point to an invalid code segment.
 
 octave_dld_function*
 octave_dld_function::create (octave_builtin::fcn ff, const octave_shlib& shl,
 			     const std::string& nm, const std::string& ds)
 {
   return new octave_dld_function (ff, shl, nm, ds);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-dld-fcn.h b/src/ov-dld-fcn.h
--- a/src/ov-dld-fcn.h
+++ b/src/ov-dld-fcn.h
@@ -95,14 +95,8 @@ private:
   octave_dld_function& operator = (const octave_dld_function& fn);
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -1712,14 +1712,8 @@ are ignored in the lookup.\n\
 %!    y = f (x);
 %!  else
 %!    n++;
 %!    y = testrecursionfunc (@(x) f(2*x), x, n);
 %!  endif
 %!test
 %! assert (testrecursionfunc (@(x) x, 1), 8);
 */
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-fcn-handle.h b/src/ov-fcn-handle.h
--- a/src/ov-fcn-handle.h
+++ b/src/ov-fcn-handle.h
@@ -146,14 +146,8 @@ protected:
 
   friend octave_value make_fcn_handle (const std::string &, bool);
 };
 
 extern octave_value make_fcn_handle (const std::string& nm,
                                      bool local_funcs = true);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-fcn-inline.cc b/src/ov-fcn-inline.cc
--- a/src/ov-fcn-inline.cc
+++ b/src/ov-fcn-inline.cc
@@ -931,14 +931,8 @@ by replacing all occurrences of @code{*}
 				   (new_func, old->fcn_arg_names ()));
 	}
     }
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-fcn-inline.h b/src/ov-fcn-inline.h
--- a/src/ov-fcn-inline.h
+++ b/src/ov-fcn-inline.h
@@ -97,15 +97,8 @@ private:
   // The expression of an inline function.
   std::string iftext;
 
   // The args of an inline function.
   string_vector ifargs;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
diff --git a/src/ov-fcn.cc b/src/ov-fcn.cc
--- a/src/ov-fcn.cc
+++ b/src/ov-fcn.cc
@@ -39,14 +39,8 @@ octave_function::clone (void) const
 }
 
 octave_base_value *
 octave_function::empty_clone (void) const
 {
   panic_impossible ();
   return 0;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-fcn.h b/src/ov-fcn.h
--- a/src/ov-fcn.h
+++ b/src/ov-fcn.h
@@ -175,14 +175,8 @@ private:
   octave_function (const octave_function& f);
 
   octave_function& operator = (const octave_function& f);
 
   DECLARE_OCTAVE_ALLOCATOR
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-float.cc b/src/ov-float.cc
--- a/src/ov-float.cc
+++ b/src/ov-float.cc
@@ -312,14 +312,8 @@ octave_float_scalar::map (unary_mapper_t
       SCALAR_MAPPER (isinf, xisinf);
       SCALAR_MAPPER (isna, octave_is_NA);
       SCALAR_MAPPER (isnan, xisnan);
 
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-float.h b/src/ov-float.h
--- a/src/ov-float.h
+++ b/src/ov-float.h
@@ -249,14 +249,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-complex.cc b/src/ov-flt-complex.cc
--- a/src/ov-flt-complex.cc
+++ b/src/ov-flt-complex.cc
@@ -436,14 +436,8 @@ octave_float_complex::map (unary_mapper_
       SCALAR_MAPPER (isinf, xisinf);
       SCALAR_MAPPER (isna, octave_is_NA);
       SCALAR_MAPPER (isnan, xisnan);
 
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-complex.h b/src/ov-flt-complex.h
--- a/src/ov-flt-complex.h
+++ b/src/ov-flt-complex.h
@@ -191,14 +191,8 @@ private:
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 typedef octave_float_complex octave_float_complex_scalar;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-cx-diag.h b/src/ov-flt-cx-diag.h
--- a/src/ov-flt-cx-diag.h
+++ b/src/ov-flt-cx-diag.h
@@ -86,14 +86,8 @@ private:
                          FloatComplex&) const;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-cx-mat.cc b/src/ov-flt-cx-mat.cc
--- a/src/ov-flt-cx-mat.cc
+++ b/src/ov-flt-cx-mat.cc
@@ -745,14 +745,8 @@ octave_float_complex_matrix::map (unary_
       ARRAY_MAPPER (tan, FloatComplex, std::tan);
       ARRAY_MAPPER (tanh, FloatComplex, std::tanh);
       ARRAY_MAPPER (isna, bool, octave_is_NA);
 
     default:
       return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-cx-mat.h b/src/ov-flt-cx-mat.h
--- a/src/ov-flt-cx-mat.h
+++ b/src/ov-flt-cx-mat.h
@@ -173,14 +173,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-re-mat.cc b/src/ov-flt-re-mat.cc
--- a/src/ov-flt-re-mat.cc
+++ b/src/ov-flt-re-mat.cc
@@ -832,14 +832,8 @@ Convert @var{x} to single precision type
 	  OCTAVE_TYPE_CONV_BODY3 (single, octave_float_matrix, octave_float_scalar);
 	}
     }
   else
     print_usage ();
 
   return octave_value ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-flt-re-mat.h b/src/ov-flt-re-mat.h
--- a/src/ov-flt-re-mat.h
+++ b/src/ov-flt-re-mat.h
@@ -206,14 +206,8 @@ public:
 
 private:
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int-traits.h b/src/ov-int-traits.h
--- a/src/ov-int-traits.h
+++ b/src/ov-int-traits.h
@@ -56,14 +56,8 @@ OCTAVE_VALUE_INT_TRAITS(int32NDArray, oc
 OCTAVE_VALUE_INT_TRAITS(int64NDArray, octave_int64_scalar);
 
 OCTAVE_VALUE_INT_TRAITS(uint8NDArray, octave_uint8_scalar);
 OCTAVE_VALUE_INT_TRAITS(uint16NDArray, octave_uint16_scalar);
 OCTAVE_VALUE_INT_TRAITS(uint32NDArray, octave_uint32_scalar);
 OCTAVE_VALUE_INT_TRAITS(uint64NDArray, octave_uint64_scalar);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int16.cc b/src/ov-int16.cc
--- a/src/ov-int16.cc
+++ b/src/ov-int16.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (int16, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} int16 (@var{x})\n\
 Convert @var{x} to 16-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (int16);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int16.h b/src/ov-int16.h
--- a/src/ov-int16.h
+++ b/src/ov-int16.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int32.cc b/src/ov-int32.cc
--- a/src/ov-int32.cc
+++ b/src/ov-int32.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (int32, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} int32 (@var{x})\n\
 Convert @var{x} to 32-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (int32);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int32.h b/src/ov-int32.h
--- a/src/ov-int32.h
+++ b/src/ov-int32.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int64.cc b/src/ov-int64.cc
--- a/src/ov-int64.cc
+++ b/src/ov-int64.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (int64, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} int64 (@var{x})\n\
 Convert @var{x} to 64-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (int64);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int64.h b/src/ov-int64.h
--- a/src/ov-int64.h
+++ b/src/ov-int64.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int8.cc b/src/ov-int8.cc
--- a/src/ov-int8.cc
+++ b/src/ov-int8.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (int8, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} int8 (@var{x})\n\
 Convert @var{x} to 8-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (int8);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-int8.h b/src/ov-int8.h
--- a/src/ov-int8.h
+++ b/src/ov-int8.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -701,14 +701,8 @@ public:
     }
 
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-list.cc b/src/ov-list.cc
--- a/src/ov-list.cc
+++ b/src/ov-list.cc
@@ -744,14 +744,8 @@ octave_list::load_hdf5 (hid_t loc_id,  c
       data = lst;
       retval = true;
     }
   
   return retval;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-list.h b/src/ov-list.h
--- a/src/ov-list.h
+++ b/src/ov-list.h
@@ -122,14 +122,8 @@ protected:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-mex-fcn.cc b/src/ov-mex-fcn.cc
--- a/src/ov-mex-fcn.cc
+++ b/src/ov-mex-fcn.cc
@@ -152,14 +152,8 @@ octave_mex_function::do_multi_index_op (
       catch (octave_execution_exception)
 	{
 	  gripe_library_execution_error ();
 	}
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-mex-fcn.h b/src/ov-mex-fcn.h
--- a/src/ov-mex-fcn.h
+++ b/src/ov-mex-fcn.h
@@ -113,14 +113,8 @@ private:
   octave_mex_function& operator = (const octave_mex_function& fn);
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-range.cc b/src/ov-range.cc
--- a/src/ov-range.cc
+++ b/src/ov-range.cc
@@ -563,14 +563,8 @@ octave_range::as_mxArray (void) const
 
   const double *p = m.data ();
 
   for (mwSize i = 0; i < nel; i++)
     pr[i] = p[i];
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -319,14 +319,8 @@ private:
   mutable idx_vector *idx_cache;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -878,14 +878,8 @@ Convert @var{x} to double precision type
 	  OCTAVE_TYPE_CONV_BODY3 (double, octave_matrix, octave_scalar);
 	}
     }
   else
     print_usage ();
 
   return octave_value ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-re-mat.h b/src/ov-re-mat.h
--- a/src/ov-re-mat.h
+++ b/src/ov-re-mat.h
@@ -220,14 +220,8 @@ public:
 
 private:
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-re-sparse.cc b/src/ov-re-sparse.cc
--- a/src/ov-re-sparse.cc
+++ b/src/ov-re-sparse.cc
@@ -936,15 +936,8 @@ octave_sparse_matrix::map (unary_mapper_
       ARRAY_MAPPER (isna, bool, octave_is_NA);
       ARRAY_MAPPER (isinf, bool, xisinf);
       ARRAY_MAPPER (finite, bool, xfinite);
 
     default: // Attempt to go via dense matrix.
       return octave_base_sparse<SparseMatrix>::map (umap);
     }
 }
-
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-re-sparse.h b/src/ov-re-sparse.h
--- a/src/ov-re-sparse.h
+++ b/src/ov-re-sparse.h
@@ -158,14 +158,8 @@ private:
   octave_value map (double (*fcn) (double)) const;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-scalar.cc b/src/ov-scalar.cc
--- a/src/ov-scalar.cc
+++ b/src/ov-scalar.cc
@@ -334,14 +334,8 @@ octave_scalar::map (unary_mapper_t umap)
         {
           octave_value str_conv = convert_to_str (true, true);
           return error_state ? octave_value () : str_conv.map (umap);
         }
       else
         return octave_base_value::map (umap);
     }
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-scalar.h b/src/ov-scalar.h
--- a/src/ov-scalar.h
+++ b/src/ov-scalar.h
@@ -250,14 +250,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -751,14 +751,8 @@ octave_char_matrix_str::load_hdf5 (hid_t
 	  return false;
 	}
     }
 
   return retval;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-str-mat.h b/src/ov-str-mat.h
--- a/src/ov-str-mat.h
+++ b/src/ov-str-mat.h
@@ -245,14 +245,8 @@ public:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -1639,14 +1639,8 @@ octave_struct::as_mxArray (void) const
 
       mwIndex k = 0;
       for (mwIndex j = i; j < ntot; j += nf)
 	elts[j] = new mxArray (p[k++]);
     }
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-struct.h b/src/ov-struct.h
--- a/src/ov-struct.h
+++ b/src/ov-struct.h
@@ -157,14 +157,8 @@ protected:
 private:
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-type-conv.h b/src/ov-type-conv.h
--- a/src/ov-type-conv.h
+++ b/src/ov-type-conv.h
@@ -102,14 +102,8 @@ octave_type_conv_body (const octave_valu
  \
   return retval
 
 #define OCTAVE_TYPE_CONV_BODY(NAME) \
   OCTAVE_TYPE_CONV_BODY3 (NAME, octave_ ## NAME ## _matrix, \
 			  octave_ ## NAME ## _scalar)
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-typeinfo.cc b/src/ov-typeinfo.cc
--- a/src/ov-typeinfo.cc
+++ b/src/ov-typeinfo.cc
@@ -607,14 +607,8 @@ currently installed data types.\n\
     retval = octave_value_typeinfo::installed_type_names ();
   else if (nargin == 1)
     retval = args(0).type_name ();
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-typeinfo.h b/src/ov-typeinfo.h
--- a/src/ov-typeinfo.h
+++ b/src/ov-typeinfo.h
@@ -316,14 +316,8 @@ private:
   // No copying!
 
   octave_value_typeinfo (const octave_value_typeinfo&);
 
   octave_value_typeinfo& operator = (const octave_value_typeinfo&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint16.cc b/src/ov-uint16.cc
--- a/src/ov-uint16.cc
+++ b/src/ov-uint16.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (uint16, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} uint16 (@var{x})\n\
 Convert @var{x} to unsigned 16-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (uint16);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint16.h b/src/ov-uint16.h
--- a/src/ov-uint16.h
+++ b/src/ov-uint16.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint32.cc b/src/ov-uint32.cc
--- a/src/ov-uint32.cc
+++ b/src/ov-uint32.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (uint32, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} uint32 (@var{x})\n\
 Convert @var{x} to unsigned 32-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (uint32);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint32.h b/src/ov-uint32.h
--- a/src/ov-uint32.h
+++ b/src/ov-uint32.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint64.cc b/src/ov-uint64.cc
--- a/src/ov-uint64.cc
+++ b/src/ov-uint64.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (uint64, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} uint64 (@var{x})\n\
 Convert @var{x} to unsigned 64-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (uint64);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint64.h b/src/ov-uint64.h
--- a/src/ov-uint64.h
+++ b/src/ov-uint64.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint8.cc b/src/ov-uint8.cc
--- a/src/ov-uint8.cc
+++ b/src/ov-uint8.cc
@@ -77,14 +77,8 @@ DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (oct
 DEFUN (uint8, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} uint8 (@var{x})\n\
 Convert @var{x} to unsigned 8-bit integer type.\n\
 @end deftypefn")
 {
   OCTAVE_TYPE_CONV_BODY (uint8);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-uint8.h b/src/ov-uint8.h
--- a/src/ov-uint8.h
+++ b/src/ov-uint8.h
@@ -49,14 +49,8 @@ along with Octave; see the file COPYING.
 
 #undef OCTAVE_TYPE_PREDICATE_FUNCTION
 
 #undef OCTAVE_INT_MX_CLASS
 
 #undef OCTAVE_INT_BTYP
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -686,14 +686,8 @@ DEFUN (optimize_subsasgn_calls, args, na
 @deftypefnx {Built-in Function} {@var{old_val} =} optimize_subsasgn_calls  (@var{new_val})\n\
 Query or set the internal flag for subsasgn method call optimizations.\n\
 If true, Octave will attempt to eliminate the redundant copying when calling\n\
 subsasgn method of a user-defined class.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (optimize_subsasgn_calls);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov-usr-fcn.h b/src/ov-usr-fcn.h
--- a/src/ov-usr-fcn.h
+++ b/src/ov-usr-fcn.h
@@ -375,14 +375,8 @@ private:
   octave_user_function& operator = (const octave_user_function& fn);
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -2797,14 +2797,8 @@ Note that this is the same as writing @c
       if (! error_state)
 	retval = arg0.subsasgn (type, idx, args(2));
     }
   else
     print_usage ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -1331,14 +1331,8 @@ DEF_VALUE_EXTRACTOR (FloatComplexDiagMat
 DEF_VALUE_EXTRACTOR (PermMatrix, perm_matrix)
 
 DEF_VALUE_EXTRACTOR (SparseMatrix, sparse_matrix)
 DEF_VALUE_EXTRACTOR (SparseComplexMatrix, sparse_complex_matrix)
 DEF_VALUE_EXTRACTOR (SparseBoolMatrix, sparse_bool_matrix)
 #undef DEF_VALUE_EXTRACTOR
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -590,14 +590,8 @@ DEFUN (PAGER_FLAGS, args, nargout,
 @deftypefnx {Built-in Function} {@var{old_val} =} PAGER_FLAGS (@var{new_val})\n\
 Query or set the internal variable that specifies the options to pass\n\
 to the pager.\n\
 @seealso{PAGER}\n\
 @end deftypefn")
 {
   return SET_NONEMPTY_INTERNAL_STRING_VARIABLE (PAGER_FLAGS);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pager.h b/src/pager.h
--- a/src/pager.h
+++ b/src/pager.h
@@ -126,14 +126,8 @@ private:
 
 #define octave_stdout (octave_pager_stream::stream ())
 
 #define octave_diary (octave_diary_stream::stream ())
 
 extern OCTINTERP_API void flush_octave_stdout (void);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/parse.h b/src/parse.h
--- a/src/parse.h
+++ b/src/parse.h
@@ -110,14 +110,8 @@ feval (const octave_value_list& args, in
 
 extern OCTINTERP_API octave_value_list
 eval_string (const std::string&, bool silent, int& parse_status, int hargout);
 
 extern OCTINTERP_API octave_value
 eval_string (const std::string&, bool silent, int& parse_status);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -3839,14 +3839,8 @@ DEFUN (struct_levels_to_print, args, nar
 @deftypefnx {Built-in Function} {@var{old_val} =} struct_levels_to_print (@var{new_val})\n\
 Query or set the internal variable that specifies the number of\n\
 structure levels to display.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE_WITH_LIMITS (struct_levels_to_print,
 					    -1, INT_MAX);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pr-output.h b/src/pr-output.h
--- a/src/pr-output.h
+++ b/src/pr-output.h
@@ -256,14 +256,8 @@ octave_print_internal (std::ostream& os,
 // TRUE means that the dimensions of empty objects should be printed
 // like this: x = [](2x0).
 extern bool Vprint_empty_dimensions;
 
 // How many levels of structure elements should we print?
 extern OCTINTERP_API int Vstruct_levels_to_print;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/procstream.cc b/src/procstream.cc
--- a/src/procstream.cc
+++ b/src/procstream.cc
@@ -64,14 +64,8 @@ procstreambase::close (void)
       if (! pb.close ())
 	std::ios::setstate (std::ios::failbit);
 
       status = pb.wait_status ();
     }
 
   return status;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/procstream.h b/src/procstream.h
--- a/src/procstream.h
+++ b/src/procstream.h
@@ -157,14 +157,8 @@ public:
 private:
 
   procstream (const procstream&);
 
   procstream& operator = (const procstream&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-all.h b/src/pt-all.h
--- a/src/pt-all.h
+++ b/src/pt-all.h
@@ -48,14 +48,8 @@ along with Octave; see the file COPYING.
 #include "pt-pr-code.h"
 #include "pt-select.h"
 #include "pt-stmt.h"
 #include "pt-unop.h"
 #include "pt-pr-code.h"
 #include "pt-walk.h"
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-arg-list.cc b/src/pt-arg-list.cc
--- a/src/pt-arg-list.cc
+++ b/src/pt-arg-list.cc
@@ -273,14 +273,8 @@ tree_argument_list::dup (symbol_table::s
   return new_list;
 }
 
 void
 tree_argument_list::accept (tree_walker& tw)
 {
   tw.visit_argument_list (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-arg-list.h b/src/pt-arg-list.h
--- a/src/pt-arg-list.h
+++ b/src/pt-arg-list.h
@@ -92,14 +92,8 @@ private:
   // No copying!
 
   tree_argument_list (const tree_argument_list&);
 
   tree_argument_list& operator = (const tree_argument_list&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-assign.cc b/src/pt-assign.cc
--- a/src/pt-assign.cc
+++ b/src/pt-assign.cc
@@ -490,14 +490,8 @@ tree_multi_assignment::dup (symbol_table
   return new_ma;
 }
 
 void
 tree_multi_assignment::accept (tree_walker& tw)
 {
   tw.visit_multi_assignment (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-assign.h b/src/pt-assign.h
--- a/src/pt-assign.h
+++ b/src/pt-assign.h
@@ -172,14 +172,8 @@ private:
   // No copying!
 
   tree_multi_assignment (const tree_multi_assignment&);
 
   tree_multi_assignment& operator = (const tree_multi_assignment&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-binop.cc b/src/pt-binop.cc
--- a/src/pt-binop.cc
+++ b/src/pt-binop.cc
@@ -202,14 +202,8 @@ tree_boolean_expression::dup (symbol_tab
     = new tree_boolean_expression (op_lhs ? op_lhs->dup (scope, context) : 0,
 				   op_rhs ? op_rhs->dup (scope, context) : 0,
 				   line (), column (), etype);
 
   new_be->copy_base (*this);
 
   return new_be;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-binop.h b/src/pt-binop.h
--- a/src/pt-binop.h
+++ b/src/pt-binop.h
@@ -150,14 +150,8 @@ private:
   // No copying!
 
   tree_boolean_expression (const tree_boolean_expression&);
 
   tree_boolean_expression& operator = (const tree_boolean_expression&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-bp.cc b/src/pt-bp.cc
--- a/src/pt-bp.cc
+++ b/src/pt-bp.cc
@@ -489,14 +489,8 @@ tree_breakpoint::take_action (tree_state
 	{
 	  bp_list.append (octave_value (lineno));
 	  line = lineno + 1;
 	}
     }
   else
     panic_impossible ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-bp.h b/src/pt-bp.h
--- a/src/pt-bp.h
+++ b/src/pt-bp.h
@@ -163,14 +163,8 @@ tree_breakpoint : public tree_walker
   tree_breakpoint& operator = (const tree_breakpoint&);
 };
 
 // TRUE means SIGINT should put us in the debugger at the next
 // available breakpoint.
 extern bool octave_debug_on_interrupt_state;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-cbinop.h b/src/pt-cbinop.h
--- a/src/pt-cbinop.h
+++ b/src/pt-cbinop.h
@@ -65,14 +65,8 @@ private:
 
 tree_binary_expression *
 maybe_compound_binary_expression (tree_expression *a, tree_expression *b,
                                   int l = -1, int c = -1,
                                   octave_value::binary_op t
                                   = octave_value::unknown_binary_op);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-cell.cc b/src/pt-cell.cc
--- a/src/pt-cell.cc
+++ b/src/pt-cell.cc
@@ -120,14 +120,8 @@ tree_cell::dup (symbol_table::scope_id s
   return new_cell;
 }
 
 void
 tree_cell::accept (tree_walker& tw)
 {
   tw.visit_cell (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-cell.h b/src/pt-cell.h
--- a/src/pt-cell.h
+++ b/src/pt-cell.h
@@ -63,14 +63,8 @@ private:
   // No copying!
 
   tree_cell (const tree_cell&);
 
   tree_cell& operator = (const tree_cell&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-check.cc b/src/pt-check.cc
--- a/src/pt-check.cc
+++ b/src/pt-check.cc
@@ -550,14 +550,8 @@ tree_checker::visit_do_until_command (tr
 void
 tree_checker::gripe (const std::string& msg, int line)
 {
   if (curr_fcn_file_name.empty ())
     error ("%s", msg.c_str ());
   else
     error ("%s: %d: %s", curr_fcn_file_name.c_str (), line, msg.c_str ());
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-check.h b/src/pt-check.h
--- a/src/pt-check.h
+++ b/src/pt-check.h
@@ -133,14 +133,8 @@ private:
   // No copying!
 
   tree_checker (const tree_checker&);
 
   tree_checker& operator = (const tree_checker&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-cmd.cc b/src/pt-cmd.cc
--- a/src/pt-cmd.cc
+++ b/src/pt-cmd.cc
@@ -52,14 +52,8 @@ tree_function_def::dup (symbol_table::sc
   return new tree_function_def (fcn, line (), column ());
 }
 
 void
 tree_function_def::accept (tree_walker& tw)
 {
   tw.visit_function_def (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-cmd.h b/src/pt-cmd.h
--- a/src/pt-cmd.h
+++ b/src/pt-cmd.h
@@ -121,14 +121,8 @@ private:
   // No copying!
 
   tree_function_def (const tree_function_def&);
 
   tree_function_def& operator = (const tree_function_def&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-colon.cc b/src/pt-colon.cc
--- a/src/pt-colon.cc
+++ b/src/pt-colon.cc
@@ -279,14 +279,8 @@ tree_colon_expression::dup (symbol_table
   return new_ce;
 }
 
 void
 tree_colon_expression::accept (tree_walker& tw)
 {
   tw.visit_colon_expression (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-colon.h b/src/pt-colon.h
--- a/src/pt-colon.h
+++ b/src/pt-colon.h
@@ -118,14 +118,8 @@ private:
   // No copying!
 
   tree_colon_expression (const tree_colon_expression&);
 
   tree_colon_expression& operator = (const tree_colon_expression&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-const.cc b/src/pt-const.cc
--- a/src/pt-const.cc
+++ b/src/pt-const.cc
@@ -82,14 +82,8 @@ tree_constant::dup (symbol_table::scope_
   return new_tc;
 }
 
 void
 tree_constant::accept (tree_walker& tw)
 {
   tw.visit_constant (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-const.h b/src/pt-const.h
--- a/src/pt-const.h
+++ b/src/pt-const.h
@@ -104,14 +104,8 @@ private:
   // No copying!
 
   tree_constant (const tree_constant&);
 
   tree_constant& operator = (const tree_constant&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-decl.cc b/src/pt-decl.cc
--- a/src/pt-decl.cc
+++ b/src/pt-decl.cc
@@ -141,14 +141,8 @@ tree_static_command::dup (symbol_table::
 			     line (), column ());
 }
 
 void
 tree_static_command::accept (tree_walker& tw)
 {
   tw.visit_static_command (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-decl.h b/src/pt-decl.h
--- a/src/pt-decl.h
+++ b/src/pt-decl.h
@@ -235,14 +235,8 @@ private:
   // No copying!
 
   tree_static_command (const tree_static_command&);
 
   tree_static_command& operator = (const tree_static_command&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-eval.cc b/src/pt-eval.cc
--- a/src/pt-eval.cc
+++ b/src/pt-eval.cc
@@ -1130,14 +1130,8 @@ DEFUN (silent_functions, args, nargout,
 Query or set the internal variable that controls whether internal\n\
 output from a function is suppressed.  If this option is disabled,\n\
 Octave will display the results produced by evaluating expressions\n\
 within a function body that are not terminated with a semicolon.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (silent_functions);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-eval.h b/src/pt-eval.h
--- a/src/pt-eval.h
+++ b/src/pt-eval.h
@@ -166,14 +166,8 @@ private:
   tree_evaluator (const tree_evaluator&);
 
   tree_evaluator& operator = (const tree_evaluator&);
 };
 
 extern tree_evaluator *current_evaluator;
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-except.cc b/src/pt-except.cc
--- a/src/pt-except.cc
+++ b/src/pt-except.cc
@@ -94,14 +94,8 @@ tree_unwind_protect_command::dup (symbol
      line (), column ());
 }
 
 void
 tree_unwind_protect_command::accept (tree_walker& tw)
 {
   tw.visit_unwind_protect_command (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-except.h b/src/pt-except.h
--- a/src/pt-except.h
+++ b/src/pt-except.h
@@ -150,14 +150,8 @@ private:
   // No copying!
 
   tree_unwind_protect_command (const tree_unwind_protect_command&);
 
   tree_unwind_protect_command& operator = (const tree_unwind_protect_command&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-exp.cc b/src/pt-exp.cc
--- a/src/pt-exp.cc
+++ b/src/pt-exp.cc
@@ -76,14 +76,8 @@ tree_expression::lvalue (void)
   return octave_lvalue ();
 }
 
 std::string
 tree_expression::original_text (void) const
 {
   return std::string ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-exp.h b/src/pt-exp.h
--- a/src/pt-exp.h
+++ b/src/pt-exp.h
@@ -139,14 +139,8 @@ private:
   // No copying!
 
   tree_expression (const tree_expression&);
 
   tree_expression& operator = (const tree_expression&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-fcn-handle.cc b/src/pt-fcn-handle.cc
--- a/src/pt-fcn-handle.cc
+++ b/src/pt-fcn-handle.cc
@@ -189,16 +189,8 @@ tree_anon_fcn_handle::dup (symbol_table:
   return new_afh;
 }
 
 void
 tree_anon_fcn_handle::accept (tree_walker& tw)
 {
   tw.visit_anon_fcn_handle (*this);
 }
-
-
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-fcn-handle.h b/src/pt-fcn-handle.h
--- a/src/pt-fcn-handle.h
+++ b/src/pt-fcn-handle.h
@@ -143,14 +143,8 @@ private:
   // No copying!
 
   tree_anon_fcn_handle (const tree_anon_fcn_handle&);
 
   tree_anon_fcn_handle& operator = (const tree_anon_fcn_handle&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-id.cc b/src/pt-id.cc
--- a/src/pt-id.cc
+++ b/src/pt-id.cc
@@ -133,14 +133,8 @@ tree_identifier::dup (symbol_table::scop
   return new_id;
 }
 
 void
 tree_identifier::accept (tree_walker& tw)
 {
   tw.visit_identifier (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-id.h b/src/pt-id.h
--- a/src/pt-id.h
+++ b/src/pt-id.h
@@ -139,14 +139,8 @@ private:
   // No copying!
 
   tree_identifier (const tree_identifier&);
 
   tree_identifier& operator = (const tree_identifier&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -650,14 +650,8 @@ tree_index_expression::dup (symbol_table
   return new_idx_expr;
 }
 
 void
 tree_index_expression::accept (tree_walker& tw)
 {
   tw.visit_index_expression (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-idx.h b/src/pt-idx.h
--- a/src/pt-idx.h
+++ b/src/pt-idx.h
@@ -123,14 +123,8 @@ private:
   // No copying!
 
   tree_index_expression (const tree_index_expression&);
 
   tree_index_expression& operator = (const tree_index_expression&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-jump.cc b/src/pt-jump.cc
--- a/src/pt-jump.cc
+++ b/src/pt-jump.cc
@@ -81,14 +81,8 @@ tree_return_command::dup (symbol_table::
   return new tree_return_command (line (), column ());
 }
 
 void
 tree_return_command::accept (tree_walker& tw)
 {
   tw.visit_return_command (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-jump.h b/src/pt-jump.h
--- a/src/pt-jump.h
+++ b/src/pt-jump.h
@@ -109,14 +109,8 @@ private:
   // No copying!
 
   tree_return_command (const tree_return_command&);
 
   tree_return_command& operator = (const tree_return_command&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-loop.cc b/src/pt-loop.cc
--- a/src/pt-loop.cc
+++ b/src/pt-loop.cc
@@ -136,14 +136,8 @@ tree_complex_for_command::dup (symbol_ta
 				       line (), column ());
 }
 
 void
 tree_complex_for_command::accept (tree_walker& tw)
 {
   tw.visit_complex_for_command (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-loop.h b/src/pt-loop.h
--- a/src/pt-loop.h
+++ b/src/pt-loop.h
@@ -252,14 +252,8 @@ private:
   // No copying!
 
   tree_complex_for_command (const tree_complex_for_command&);
 
   tree_complex_for_command& operator = (const tree_complex_for_command&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-mat.cc b/src/pt-mat.cc
--- a/src/pt-mat.cc
+++ b/src/pt-mat.cc
@@ -1088,14 +1088,8 @@ string_fill_char (\"X\");\n\
         \"areXXXX\"\n\
         \"strings\"\n\
 @end group\n\
 @end example\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (string_fill_char);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-mat.h b/src/pt-mat.h
--- a/src/pt-mat.h
+++ b/src/pt-mat.h
@@ -89,14 +89,8 @@ maybe_warn_string_concat (bool all_dq_st
 
 extern std::string 
 get_concat_class (const std::string& c1, const std::string& c2);
 
 extern void
 maybe_warn_string_concat (bool all_dq_strings_p, bool all_sq_strings_p);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-misc.cc b/src/pt-misc.cc
--- a/src/pt-misc.cc
+++ b/src/pt-misc.cc
@@ -321,14 +321,8 @@ tree_return_list::dup (symbol_table::sco
   return new_list;
 }
 
 void
 tree_return_list::accept (tree_walker& tw)
 {
   tw.visit_return_list (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-misc.h b/src/pt-misc.h
--- a/src/pt-misc.h
+++ b/src/pt-misc.h
@@ -143,14 +143,8 @@ private:
   // No copying!
 
   tree_va_return_list (const tree_va_return_list&);
 
   tree_va_return_list& operator = (const tree_va_return_list&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-pr-code.cc b/src/pt-pr-code.cc
--- a/src/pt-pr-code.cc
+++ b/src/pt-pr-code.cc
@@ -1281,14 +1281,8 @@ void
 tree_print_code::print_indented_comment (octave_comment_list *comment_list)
 {
   increment_indent_level ();
 
   print_comment_list (comment_list);
 
   decrement_indent_level ();
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-pr-code.h b/src/pt-pr-code.h
--- a/src/pt-pr-code.h
+++ b/src/pt-pr-code.h
@@ -192,14 +192,8 @@ private:
   // No copying!
 
   tree_print_code (const tree_print_code&);
 
   tree_print_code& operator = (const tree_print_code&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-select.cc b/src/pt-select.cc
--- a/src/pt-select.cc
+++ b/src/pt-select.cc
@@ -265,14 +265,8 @@ tree_switch_command::dup (symbol_table::
 				  line (), column ());
 }
 
 void
 tree_switch_command::accept (tree_walker& tw)
 {
   tw.visit_switch_command (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-select.h b/src/pt-select.h
--- a/src/pt-select.h
+++ b/src/pt-select.h
@@ -304,14 +304,8 @@ private:
   // No copying!
 
   tree_switch_command (const tree_switch_command&);
 
   tree_switch_command& operator = (const tree_switch_command&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-stmt.cc b/src/pt-stmt.cc
--- a/src/pt-stmt.cc
+++ b/src/pt-stmt.cc
@@ -210,14 +210,8 @@ tree_statement_list::dup (symbol_table::
   return new_list;
 }
 
 void
 tree_statement_list::accept (tree_walker& tw)
 {
   tw.visit_statement_list (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-stmt.h b/src/pt-stmt.h
--- a/src/pt-stmt.h
+++ b/src/pt-stmt.h
@@ -179,14 +179,8 @@ private:
   // No copying!
 
   tree_statement_list (const tree_statement_list&);
 
   tree_statement_list& operator = (const tree_statement_list&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-unop.cc b/src/pt-unop.cc
--- a/src/pt-unop.cc
+++ b/src/pt-unop.cc
@@ -196,14 +196,8 @@ tree_postfix_expression::dup (symbol_tab
   return new_pe;
 }
 
 void
 tree_postfix_expression::accept (tree_walker& tw)
 {
   tw.visit_postfix_expression (*this);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-unop.h b/src/pt-unop.h
--- a/src/pt-unop.h
+++ b/src/pt-unop.h
@@ -151,14 +151,8 @@ private:
   // No copying!
 
   tree_postfix_expression (const tree_postfix_expression&);
 
   tree_postfix_expression& operator = (const tree_postfix_expression&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt-walk.h b/src/pt-walk.h
--- a/src/pt-walk.h
+++ b/src/pt-walk.h
@@ -205,14 +205,8 @@ private:
   // No copying!
 
   tree_walker (const tree_walker&);
 
   tree_walker& operator = (const tree_walker&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt.cc b/src/pt.cc
--- a/src/pt.cc
+++ b/src/pt.cc
@@ -44,14 +44,8 @@ tree::str_print_code (void)
   tree_print_code tpc (buf);
 
   accept (tpc);
 
   std::string retval = buf.str ();
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/pt.h b/src/pt.h
--- a/src/pt.h
+++ b/src/pt.h
@@ -74,14 +74,8 @@ private:
   // No copying!
 
   tree (const tree&);
 
   tree& operator = (const tree&);
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -1032,14 +1032,8 @@ DEFUN (sigterm_dumps_octave_core, args, 
 @deftypefnx {Built-in Function} {@var{old_val} =} sigterm_dumps_octave_core (@var{new_val})\n\
 Query or set the internal variable that controls whether Octave tries\n\
 to save all current variables to the file \"octave-core\" if it receives\n\
 a terminate signal.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (sigterm_dumps_octave_core);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sighandlers.h b/src/sighandlers.h
--- a/src/sighandlers.h
+++ b/src/sighandlers.h
@@ -199,14 +199,8 @@ public:
 private:
 
   static bool instance_ok (void);
 
   static octave_child_list_rep *instance;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/siglist.c b/src/siglist.c
--- a/src/siglist.c
+++ b/src/siglist.c
@@ -225,14 +225,8 @@ strsignal (int code)
       /* Cast to suppress warning if the table has const char *.  */
       signame = (char *) sys_siglist[code];
     }
 
   return signame;
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C ***
-;;; End: ***
-*/
diff --git a/src/siglist.h b/src/siglist.h
--- a/src/siglist.h
+++ b/src/siglist.h
@@ -40,14 +40,8 @@ extern void init_signals (void);
 extern char *strsignal (int);
 #endif
 
 #ifdef __cplusplus
 }
 #endif
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sparse-xdiv.cc b/src/sparse-xdiv.cc
--- a/src/sparse-xdiv.cc
+++ b/src/sparse-xdiv.cc
@@ -626,14 +626,8 @@ xleftdiv (const ComplexDiagMatrix& d, co
 }
 
 // -*- 12 -*-
 SparseComplexMatrix
 xleftdiv (const ComplexDiagMatrix& d, const SparseComplexMatrix& a,  MatrixType&)
 {
   return do_leftdiv_dm_sm<SparseComplexMatrix> (d, a);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sparse-xdiv.h b/src/sparse-xdiv.h
--- a/src/sparse-xdiv.h
+++ b/src/sparse-xdiv.h
@@ -86,14 +86,8 @@ extern SparseMatrix xleftdiv (const Diag
 extern SparseComplexMatrix xleftdiv (const ComplexDiagMatrix&, const SparseMatrix&, 
 				     MatrixType&);
 extern SparseComplexMatrix xleftdiv (const DiagMatrix&, const SparseComplexMatrix&, 
 				     MatrixType&);
 extern SparseComplexMatrix xleftdiv (const ComplexDiagMatrix&, const SparseComplexMatrix&, 
 				     MatrixType&);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sparse-xpow.cc b/src/sparse-xpow.cc
--- a/src/sparse-xpow.cc
+++ b/src/sparse-xpow.cc
@@ -723,14 +723,8 @@ elem_xpow (const SparseComplexMatrix& a,
 	  octave_quit ();
 	  result.xelem(a.ridx(i), j) = std::pow (a.data (i), b (a.ridx(i), j));
 	}
     }
   result.maybe_compress (true);
 
   return result;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sparse-xpow.h b/src/sparse-xpow.h
--- a/src/sparse-xpow.h
+++ b/src/sparse-xpow.h
@@ -50,14 +50,8 @@ extern octave_value elem_xpow (const Spa
 extern octave_value elem_xpow (const SparseComplexMatrix& a, 
 			       const SparseMatrix& b);
 extern octave_value elem_xpow (const SparseComplexMatrix& a, 
 			       const Complex& b);
 extern octave_value elem_xpow (const SparseComplexMatrix& a, 
 			       const SparseComplexMatrix& b);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -909,14 +909,8 @@ whos ans\n\
 %!  input  = {"abc", "def", "ghijkl", "mnop", "qrs", "tuv"};
 %!  result = "abc     mnop\ndef     qrs\nghijkl  tuv\n";
 %!  assert (list_in_columns (input, 20) == result);
 %!test
 %!  input  = ["abc"; "def"; "ghijkl"; "mnop"; "qrs"; "tuv"];
 %!  result = "abc     mnop  \ndef     qrs   \nghijkl  tuv   \n";
 %!  assert (list_in_columns (input, 20) == result);
 */
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -1603,14 +1603,8 @@ DEFUN (variable_value, args, , "VALUE = 
 	error ("variable_value: expecting variable name as first argument");
     }
   else
     print_usage ();
 
   return retval;
 }
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/symtab.h b/src/symtab.h
--- a/src/symtab.h
+++ b/src/symtab.h
@@ -2371,14 +2371,8 @@ extern bool out_of_date_check (octave_va
                                bool check_relative = true);
 
 extern OCTINTERP_API std::string
 get_dispatch_type (const octave_value_list& args);
 extern OCTINTERP_API std::string
 get_dispatch_type (const octave_value_list& args, bool& builtin_class);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -1899,14 +1899,8 @@ Return the numerical value of the option
 passed to @code{waitpid} to indicate that it should also return\n\
 if a stopped child has been resumed by delivery of a @code{SIGCONT}\n\
 signal.\n\
 @seealso{waitpid, WNOHANG, WUNTRACED}\n\
 @end deftypefn")
 {
   return const_value (args, WCONTINUE);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -874,14 +874,8 @@ DEFUN (extproc, , ,
   "extproc: ignored by Octave")
 {
   return octave_value_list ();
 }
 
 DEFALIAS (EXTPROC, extproc);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -50,14 +50,8 @@ extern void MINGW_signal_cleanup (void);
 #define MINGW_SIGNAL_CLEANUP() MINGW_signal_cleanup ()
 #else
 #define MINGW_SIGNAL_CLEANUP() do { } while (0)
 #endif
 
 extern OCTINTERP_API bool same_file_internal (const std::string&, const std::string&);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/token.cc b/src/token.cc
--- a/src/token.cc
+++ b/src/token.cc
@@ -179,14 +179,8 @@ token::meta_package_rec (void)
   return mc.pr;
 }
 
 std::string
 token::text_rep (void)
 {
   return orig_text;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/token.h b/src/token.h
--- a/src/token.h
+++ b/src/token.h
@@ -128,14 +128,8 @@ private:
           symbol_table::symbol_record *cr;
           symbol_table::symbol_record *pr;
         } mc;
     };
   std::string orig_text;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1468,14 +1468,8 @@ void
   if (debug_new_delete)
     std::cerr << "__builtin_delete: " << ptr << std::endl;
 
   if (ptr)
     free (ptr);
 }
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -413,14 +413,8 @@ private:
   }
 
   void do_clear (void) { cs.clear (); }
 
   void do_backtrace_error_message (void) const;
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/unwind-prot.cc b/src/unwind-prot.cc
--- a/src/unwind-prot.cc
+++ b/src/unwind-prot.cc
@@ -33,14 +33,8 @@ along with Octave; see the file COPYING.
 #include "unwind-prot.h"
 #include "utils.h"
 
 void unwind_protect_safe::gripe_exception (void)
 {
   // FIXME: can this throw an exception?
   error ("internal: unhandled exception in unwind_protect handler");
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/unwind-prot.h b/src/unwind-prot.h
--- a/src/unwind-prot.h
+++ b/src/unwind-prot.h
@@ -267,14 +267,8 @@ public:
             {
               gripe_exception ();
             }
         }
     }
 };
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -1483,14 +1483,8 @@ do_simple_cellfun (octave_value_list (*f
 {
   octave_value retval;
   const octave_value_list tmp = do_simple_cellfun (fun, fun_name, args, 1);
   if (tmp.length () > 0)
     retval = tmp(0);
 
   return retval;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -132,14 +132,8 @@ do_simple_cellfun (octave_value_list (*f
                    const char *fun_name, const octave_value_list& args, 
                    int nargout);
 
 extern OCTINTERP_API
 octave_value
 do_simple_cellfun (octave_value_list (*fun) (const octave_value_list&, int),
                    const char *fun_name, const octave_value_list& args);
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -2371,14 +2371,8 @@ left of the specified balance column.\n\
 \n\
 The default format is\n\
 @code{\"  %a:4; %ln:6; %cs:16:6:1;  %rb:12;  %lc:-1;\\n\"}.\n\
 @seealso{whos}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (whos_line_format);
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -131,14 +131,8 @@ extern OCTINTERP_API void mlock (void);
 extern OCTINTERP_API void munlock (const std::string&);
 extern OCTINTERP_API bool mislocked (const std::string&);
 
 extern OCTINTERP_API void clear_function (const std::string& nm);
 extern OCTINTERP_API void clear_variable (const std::string& nm);
 extern OCTINTERP_API void clear_symbol (const std::string& nm);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/xdiv.cc b/src/xdiv.cc
--- a/src/xdiv.cc
+++ b/src/xdiv.cc
@@ -993,14 +993,8 @@ xleftdiv (const FloatDiagMatrix& a, cons
 FloatComplexDiagMatrix
 xleftdiv (const FloatDiagMatrix& a, const FloatComplexDiagMatrix& b)
 { return dmdm_leftdiv_impl (a, b); }
 
 // -*- 3 -*-
 FloatComplexDiagMatrix
 xleftdiv (const FloatComplexDiagMatrix& a, const FloatComplexDiagMatrix& b)
 { return dmdm_leftdiv_impl (a, b); }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/xdiv.h b/src/xdiv.h
--- a/src/xdiv.h
+++ b/src/xdiv.h
@@ -123,14 +123,8 @@ extern FloatComplexMatrix xleftdiv (cons
 extern FloatDiagMatrix xleftdiv (const FloatDiagMatrix& a, 
                                  const FloatDiagMatrix& b);
 extern FloatComplexDiagMatrix xleftdiv (const FloatDiagMatrix& a, 
                                         const FloatComplexDiagMatrix& b);
 extern FloatComplexDiagMatrix xleftdiv (const FloatComplexDiagMatrix& a, 
                                         const FloatComplexDiagMatrix& b);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/xpow.cc b/src/xpow.cc
--- a/src/xpow.cc
+++ b/src/xpow.cc
@@ -2776,14 +2776,8 @@ elem_xpow (const FloatComplexNDArray& a,
   for (octave_idx_type i = 0; i < a.length (); i++)
     {
       octave_quit ();
       result(i) = std::pow (a(i), b(i));
     }
 
   return result;
 }
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/xpow.h b/src/xpow.h
--- a/src/xpow.h
+++ b/src/xpow.h
@@ -152,14 +152,8 @@ extern octave_value elem_xpow (const Flo
 extern octave_value elem_xpow (const FloatComplex& a, const FloatComplexNDArray& b);
 
 extern octave_value elem_xpow (const FloatComplexNDArray& a, float b);
 extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatNDArray& b);
 extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplex& b);
 extern octave_value elem_xpow (const FloatComplexNDArray& a, const FloatComplexNDArray& b);
 
 #endif
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/zfstream.cc b/src/zfstream.cc
--- a/src/zfstream.cc
+++ b/src/zfstream.cc
@@ -618,14 +618,8 @@ gzofstream::attach(int fd,
 void
 gzofstream::close()
 {
   if (!sb.close())
     this->setstate(std::ios_base::failbit);
 }
 
 #endif // HAVE_ZLIB
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
diff --git a/src/zfstream.h b/src/zfstream.h
--- a/src/zfstream.h
+++ b/src/zfstream.h
@@ -501,15 +501,8 @@ template<typename T1, typename T2>
 // Insert this onto stream to simplify setting of compression level
 inline gzomanip2<int,int>
 setcompression(int l, int s = Z_DEFAULT_STRATEGY)
 { return gzomanip2<int,int>(&setcompression, l, s); }
 
 #endif // HAVE_ZLIB
 
 #endif // ZFSTREAM_H
-
-/*
-;;; Local Variables: ***
-;;; mode: C++ ***
-;;; End: ***
-*/
-
