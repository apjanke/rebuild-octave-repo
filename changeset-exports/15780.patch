# HG changeset patch
# User Rik <rik@octave.org>
# Date 1355424444 28800
#      Thu Dec 13 10:47:24 2012 -0800
# Node ID f25101b1e37f7f88c7532e6e1f765136e344fe0f
# Parent  4456ad3d8a5617b38750d7daeb605f7f41bd0c41
configure.ac: Use build_java as internal script variable rather than HAVE_JAVA.

* configure.ac: Use build_java as internal script variable rather than HAVE_JAVA.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2214,54 +2214,56 @@ AC_ARG_WITH([java-includedir],
     [look for java include file <jni.h> in DIR])],
   [JAVA_CPPFLAGS="$withval"], [JAVA_CPPFLAGS=""])
 
 AC_ARG_WITH([java-libdir],
   [AS_HELP_STRING([--with-java-libdir=DIR],
     [look for java library libjvm in DIR])],
   [JAVA_LDPATH="$withval"], [JAVA_LDPATH=""])
 
-HAVE_JAVA=no
 ## Grab JAVA_HOME from environment variable if it exists
 AC_ARG_VAR([JAVA_HOME], [path to Java JDK installation])
 ## But --with-java-homedir option overrides environment variable
 if test -n "$JAVA_HOMEDIR"; then
   JAVA_HOME=$JAVA_HOMEDIR
 fi
 JAVA=
 JAVAC=
 JAR=
 JAVA_LIBS=
 
-## Fake loop so that "break" can be used to skip code blocks
+## Fake loop so that "break" can be used to skip code blocks.
 while test $build_java = true
 do
+  ## Unset build_java.  Variable is set only if all configuration tests pass.
+  build_java=false
+
   ## Warn if JAVA_HOME is unset.  It is *strongly* advised to specify JAVA_HOME.
   if test -z "$JAVA_HOME"; then
     AC_MSG_WARN([JAVA_HOME environment variable not initialized.])
     AC_MSG_WARN([Auto-detection will proceed but is unreliable.])
   fi
 
-  ## Search for a viable Java executable
+  ## Search for a viable Java executable.
   if test -z "$JAVA_HOME"; then
     JAVA_PATH=$PATH
   else
     JAVA_PATH=${JAVA_HOME}$PATH_SEPARATOR${JAVA_HOME}/jre/bin$PATH_SEPARATOR${JAVA_HOME}/bin$PATH_SEPARATOR${JAVA_HOME}/../bin$PATH_SEPARATOR${PATH}
   fi
   AC_PATH_PROG(JAVA, java, [], [$JAVA_PATH])
 
   if test -z "$JAVA"; then
     AC_MSG_WARN([No Java executable found.  Octave will not be able to call Java methods.])   
     break
   fi
 
   if test -z "$JAVA_HOME"; then
-    ## Find JAVA_HOME for JRE by running java and querying properties
+    ## Find JAVA_HOME for JRE by running java and querying properties.
     JAVA_TMP_HOME=`$JAVA -classpath ${srcdir}/build-aux OctJavaQry JAVA_HOME`  
-    ## Strip directory back to top-level installation dir (JAVA_HOME for JDK) 
+    ## Strip directory back to top-level installation dir (JAVA_HOME for JDK).
     JAVA_HOME=`echo $JAVA_TMP_HOME | sed -e 's|/bin/\?$||' | sed -e 's|/jre/\?$||'`
   fi
 
   ## Amend search path for JAVAC and JAR.
   if test -z JAVA_HOME; then
     JAVA_PATH=$PATH
   else
     JAVA_PATH=${JAVA_HOME}$PATH_SEPARATOR${JAVA_HOME}/bin$PATH_SEPARATOR${JAVA_HOME}/../bin$PATH_SEPARATOR${PATH}
@@ -2286,17 +2288,17 @@ do
   else
     AC_MSG_WARN([Java version is too old (< 1.5).  Octave will not be able to call Java methods.])
     break
   fi
 
   ## At this point Win32 systems have enough configuration data.
   case $canonical_host_type in
     *-msdosmsvc*)
-      HAVE_JAVA=yes
+      build_java=true
       JAVA_LIBS=-ladvapi32
       AC_DEFINE(HAVE_JAVA, 1,
         [Define to 1 if Java is available and is at least version 1.5])
       break
     ;;
   esac
 
   ## Determine which library file name to search for.
@@ -2415,27 +2417,23 @@ do
     AC_MSG_RESULT([$dir])
   else
     AC_MSG_RESULT([not found])
     AC_MSG_WARN([Include file <jni.h> not found.  Octave will not be able to call Java methods.])
     break
   fi
 
   ## Passed all configuration tests.  A workable Java installation was found.
-  HAVE_JAVA=yes    
+  build_java=true
   AC_DEFINE(HAVE_JAVA, 1,
     [Define to 1 if Java is available and is at least version 1.5])
   break
 done
 
-## For later reporting in configure summary
-if test $HAVE_JAVA = no; then
-  build_java=false
-fi
-AM_CONDITIONAL([AMCOND_HAVE_JAVA], [test $HAVE_JAVA = yes])
+AM_CONDITIONAL([AMCOND_HAVE_JAVA], [test $build_java = true])
 AC_SUBST(JAVA)
 AC_SUBST(JAVAC)
 AC_SUBST(JAR)
 AC_SUBST(JAVA_CPPFLAGS)
 AC_SUBST(JAVA_LIBS)
 AC_DEFINE_UNQUOTED([JAVA_HOME], ["$JAVA_HOME"], [Java home (top-level installation dir)])
 AC_DEFINE_UNQUOTED([JAVA_LDPATH], ["$JAVA_LDPATH"], [Java library path (libjvm)])
 
