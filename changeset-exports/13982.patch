# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1322901037 18000
#      Sat Dec 03 03:30:37 2011 -0500
# Node ID 6cdfbe90e2ab89246acc7ecfde6026f033cc6c5c
# Parent  5f8bc2f145f56bf6a8913f764dfd791516e0407c
remove kluge for apparent libc bug that is really a valgrind bug

* oct-time.cc (octave_strptime::init): Simply pass str.c_str () to
strptime.

diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -262,29 +262,17 @@ octave_strptime::init (const std::string
   t.tm_gmtoff = 0;
 #endif
 
 #if defined (HAVE_STRUCT_TM_TM_ZONE)
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
-  // FIXME -- the following kluge avoids a memory access problem with
-  // strptime in some versions of GNU libc.
-  // http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=650714
-
-  const char *pstr = str.c_str ();
-  size_t len = str.length ();
-  const int extra = 128;
-  OCTAVE_LOCAL_BUFFER (char, p, len + extra);
-  char *pp = p;
-  for (size_t i = 0; i < len; i++)
-    *pp++ = *pstr++;
-  for (size_t i = len; i < extra; i++)
-    *pp++ = 0;
+  const char *p = str.c_str ();
 
   char *q = gnulib::strptime (p, fmt.c_str (), &t);
 
   // Fill in wday and yday, but only if mday is valid and the mon and year
   // are filled in, avoiding issues with mktime and invalid dates.
   if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != INT_MIN)
     {
       t.tm_isdst = -1;
