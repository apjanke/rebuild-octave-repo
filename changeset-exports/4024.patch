# HG changeset patch
# User jwe
# Date 1028704304 0
#      Wed Aug 07 07:11:44 2002 +0000
# Node ID 00d06e24cc8900f64eb799cdae9c2389ea5bb2ca
# Parent  ef3caf27cb9ceee58d756fb385732d0aaf9ea547
[project @ 2002-08-07 07:11:44 by jwe]

diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -1966,17 +1966,17 @@ make_binary_op (int op, tree_expression 
 
     case EXPR_AND:
       t = octave_value::op_el_and;
       break;
 
     case EXPR_OR:
       t = octave_value::op_el_or;
       if (Vwarn_precedence_change
-          && op1->paren_count () == 0 && op2->is_binary_expression ())
+          && op2->paren_count () == 0 && op2->is_binary_expression ())
         {
 	  tree_binary_expression *e
 	    = dynamic_cast<tree_binary_expression *> (op2);
 
 	  if (e->op_type () == octave_value::op_el_and)
 	    warning ("meaning may have changed due to change in precedence for & and | operators");
         }
       break;
@@ -2007,17 +2007,17 @@ make_boolean_op (int op, tree_expression
     {
     case EXPR_AND_AND:
       t = tree_boolean_expression::bool_and;
       break;
 
     case EXPR_OR_OR:
       t = tree_boolean_expression::bool_or;
       if (Vwarn_precedence_change
-          && op1->paren_count () == 0 && op2->is_boolean_expression ())
+          && op2->paren_count () == 0 && op2->is_boolean_expression ())
         {
 	  tree_boolean_expression *e
 	    = dynamic_cast<tree_boolean_expression *> (op2);
 
 	  if (e->op_type () == tree_boolean_expression::bool_and)
 	    warning ("meaning may have changed due to change in precedence for && and || operators");
         }
       break;
