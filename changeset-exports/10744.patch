# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1277294284 -7200
#      Wed Jun 23 13:58:04 2010 +0200
# Node ID 4716e2e17118a6994528645353d1fb6e394b8f2a
# Parent  cb3ed842bd3026ee6da3c0f1cb136ed140d8dfa0
fix octave_map::extract_scalar

diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -340,19 +340,18 @@ octave_map::contents (const std::string&
   return vals[idx];
 }
 
 void 
 octave_map::extract_scalar (octave_scalar_map& dest, 
                             octave_idx_type idx) const
 {
   octave_idx_type nf = nfields ();
-  dest.vals.reserve (nf);
   for (octave_idx_type i = 0; i < nf; i++)
-    dest.vals.push_back (vals[i](idx));
+    dest.vals[i] = vals[i](idx);
 }
 
 octave_scalar_map
 octave_map::checkelem (octave_idx_type n) const
 {
   octave_scalar_map retval (keys);
 
   // Optimize this so that there is just one check.
diff --git a/src/oct-map.h b/src/oct-map.h
--- a/src/oct-map.h
+++ b/src/oct-map.h
@@ -312,17 +312,17 @@ public:
   Cell getfield (const std::string& key) const;
 
   // set contents of a given field. add if not exist. checks for
   // correct dimensions.
   void setfield (const std::string& key, const Cell& val);
 
   // remove a given field. do nothing if not exist.
   void rmfield (const std::string& key);
-  void del (const std::string& key) { rmfield (key); }
+  void del (const std::string& k) { rmfield (k); }
 
   // return a copy with fields ordered, optionally along with permutation.
   octave_map orderfields (void) const;
   octave_map orderfields (Array<octave_idx_type>& perm) const;
   octave_map orderfields (const octave_map& other,
                           Array<octave_idx_type>& perm) const;
 
   // aka getfield/setfield, but the latter returns a reference.
