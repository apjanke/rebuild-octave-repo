# HG changeset patch
# User Rik <rik@octave.org>
# Date 1346370456 25200
#      Thu Aug 30 16:47:36 2012 -0700
# Node ID 219dcb37bdf9e5dd5cbff1768f23f63959966e47
# Parent  f463154f1c1b7026d9ee25c0a8f53775ed9d3c2b
Restore ability to build HTML version of documentation.

* doc/interpreter/Makefile.am: New HTMLDIR_IMAGES target using an ordered rule
to copy images to octave.html directory after directory is created.

* doc/interpreter/images.awk: Remove HTMLDIR_IMAGES variable from images.mk.

diff --git a/doc/interpreter/Makefile.am b/doc/interpreter/Makefile.am
--- a/doc/interpreter/Makefile.am
+++ b/doc/interpreter/Makefile.am
@@ -82,18 +82,19 @@ include images.mk
 
 $(srcdir)/images.mk: $(srcdir)/config-images.sh $(srcdir)/images.awk $(srcdir)/images
 	$(srcdir)/config-images.sh $(top_srcdir)
 
 IMAGES = \
   $(IMAGES_EPS) \
   $(IMAGES_PDF) \
   $(IMAGES_PNG) \
-  $(IMAGES_TXT) \
-  $(HTMLDIR_IMAGES)
+  $(IMAGES_TXT)
+
+HTMLDIR_IMAGES = $(addprefix octave.html/, $(IMAGES_PNG))
 
 LOGOS = \
   octave_logo.eps \
   octave_logo.pdf
 
 MUNGED_TEXI_SRC = \
   arith.texi \
   audio.texi \
@@ -142,35 +143,37 @@ MUNGED_TEXI_SRC = \
   stmt.texi \
   strings.texi \
   system.texi \
   testfun.texi \
   tips.texi \
   var.texi \
   vectorize.texi
 
+TXI_SRC = $(MUNGED_TEXI_SRC:.texi=.txi)
+
 BUILT_TEXINFOS = \
   contributors.texi \
   $(MUNGED_TEXI_SRC)
 
-TXI_SRC = $(MUNGED_TEXI_SRC:.texi=.txi)
-
 info_TEXINFOS = octave.texi
 
 octave_TEXINFOS = \
   $(BUILT_TEXINFOS) \
   $(EXAMPLE_FILES) \
   $(IMAGES) \
   $(LOGOS) \
   $(srcdir)/images.mk
 
-octave.html:
-	if [ -d octave.html ]; then true; else mkdir octave.html; fi
+all-local: dvi html pdf ps doc-cache
 
-all-local: dvi html pdf ps doc-cache $(HTMLDIR_IMAGES)
+html: $(HTMLDIR_IMAGES)
+
+$(HTMLDIR_IMAGES): $(IMAGES_PNG) | octave.html
+	cp $(@F) octave.html
 
 # Prevent packaging of distribution unless all libraries 
 # necessary to create documentation are present
 dist-hook:
 	@$(GREP) '#define HAVE_COLAMD 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing COLAMD library.  Cannot package distribution!" ; exit 1; }
 	@$(GREP) '#define HAVE_CHOLMOD 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing CHOLMOD library.  Cannot package distribution!" ; exit 1; }
 	@$(GREP) '#define HAVE_UMFPACK 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing UMFPACK library.  Cannot package distribution!" ; exit 1; }
 	@$(GREP) '#define HAVE_QHULL 1' $(top_builddir)/config.h > /dev/null || { echo "Documentation creation requires missing QHULL library.  Cannot package distribution!" ; exit 1; }
@@ -209,22 +212,22 @@ contributors.texi: contributors.in
 	mv BUGS ../../BUGS
 
 ../../INSTALL.OCTAVE: install.texi
 	rm -f INSTALL
 	-$(MAKEINFO) -D INSTALLONLY \
 	  --no-validate --no-headers --no-split --output INSTALL $<
 	mv INSTALL ../../INSTALL.OCTAVE
 
+
 undocumented_list:
 	rm -f $@
 	-$(PERL) $(srcdir)/doccheck/mk_undocumented_list > $@
 .PHONY: undocumented_list
 
-
 SPELLCHECK_FILES = $(MUNGED_TEXI_SRC:.texi=.scheck)
 
 %.scheck: %.texi
 	$(srcdir)/doccheck/spellcheck $< > $@-t
 	mv $@-t $@
 	[ -s $@ ] || rm -f $@
 
 spellcheck: $(SPELLCHECK_FILES) 
diff --git a/doc/interpreter/images.awk b/doc/interpreter/images.awk
--- a/doc/interpreter/images.awk
+++ b/doc/interpreter/images.awk
@@ -1,15 +1,14 @@
 BEGIN {
   exts[1] = "eps";
   exts[2] = "pdf";
   exts[3] = "png";
   exts[4] = "txt";
   printf ("IMAGES_SRC =\n");
-  printf ("HTMLDIR_IMAGES =\n");
   for (i = 1; i <= 4; i++) {
     printf ("IMAGES_%s =\n", toupper (exts[i]));
   }
 } {
   script = $1;
   basename = script;
   sub (/\.m$/, "", basename);
   ubasename = toupper (basename);
@@ -20,26 +19,15 @@ BEGIN {
 
     printf ("%s_%s =", ubasename, uext);
     for (j = 2; j <= NF; j++)
       printf (" %s.%s", $j, ext);
     printf ("\n");
 
     printf ("IMAGES_%s += $(%s_%s)\n", uext, ubasename, uext);
 
-    if (ext == "png") {
-      printf ("HTMLDIR_IMAGES += ");
-      for (j = 2; j <= NF; j++)
-        printf (" octave.html/%s.png", $j);
-      printf ("\n");
-    }
-
     for (j = 2; j <= NF; j++) {
-      if (ext == "png") {
-	printf ("octave.html/%s.png: %s.png octave.html\n", $j, $j);
-	printf ("\tcp $< $@\n");
-      }
       printf ("%s.%s: %s\n", $j, ext, script);
       printf ("\t$(top_builddir)/run-octave -f -q -H -p $(srcdir) --eval \"%s ('%s', '%s');\"\n",
 	      basename, $j, ext);
     }
   }
 }
