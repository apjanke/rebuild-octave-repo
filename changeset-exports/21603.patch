# HG changeset patch
# User mmuetzel <markus.muetzel@gmx.de>
# Date 1460364317 -7200
#      Mon Apr 11 10:45:17 2016 +0200
# Node ID 37cbdf7bffa94ff655a3ec3e4468eed4521a870d
# Parent  47c76e56a1de0f885ee1ec90e3aafa10d71d495d
Add fftwf_version (bug #45659)

* toplev.cc (F__octave_config_info__): New field, fftwf_version.
* oct-fftw.cc, oct-fftw.h (octave_fftwf_version): New function.

diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -1426,16 +1426,17 @@ specified option.\n\
       { "bindir", subst_octave_home (OCTAVE_BINDIR) },
       { "build_time", octave_build_time () },
       { "canonical_host_type", OCTAVE_CANONICAL_HOST_TYPE },
       { "datadir", subst_octave_home (OCTAVE_DATADIR) },
       { "datarootdir", subst_octave_home (OCTAVE_DATAROOTDIR) },
       { "exec_prefix", subst_octave_home (OCTAVE_EXEC_PREFIX) },
       { "fcnfiledir", subst_octave_home (OCTAVE_FCNFILEDIR) },
       { "fftw_version", octave_fftw_version () },
+      { "fftwf_version", octave_fftwf_version () },
       { "hg_id", octave_hg_id () },
       { "imagedir", subst_octave_home (OCTAVE_IMAGEDIR) },
       { "includedir", subst_octave_home (OCTAVE_INCLUDEDIR) },
       { "infodir", subst_octave_home (OCTAVE_INFODIR) },
       { "infofile", subst_octave_home (OCTAVE_INFOFILE) },
       { "libdir", subst_octave_home (OCTAVE_LIBDIR) },
       { "libexecdir", subst_octave_home (OCTAVE_LIBEXECDIR) },
       { "localapiarchlibdir", subst_octave_home (OCTAVE_LOCALAPIARCHLIBDIR) },
@@ -1715,16 +1716,18 @@ specified option.\n\
 
 /*
 %!assert (ischar (__octave_config_info__ ("version")))
 %!test
 %! x = __octave_config_info__ ();
 %! assert (isstruct (x));
 %! assert (! isempty (x));
 
+%!assert (__octave_config_info__ ("fftw_version"), __octave_config_info__ ("fftwf_version"))
+
 %!error __octave_config_info__ (1, 2)
 */
 
 #if defined (__GNUG__) && defined (DEBUG_NEW_DELETE)
 
 int debug_new_delete = 0;
 
 typedef void (*vfp)(void);
diff --git a/liboctave/numeric/oct-fftw.cc b/liboctave/numeric/oct-fftw.cc
--- a/liboctave/numeric/oct-fftw.cc
+++ b/liboctave/numeric/oct-fftw.cc
@@ -33,17 +33,16 @@ along with Octave; see the file COPYING.
 #  include <fftw3.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-fftw.h"
 #include "quit.h"
 #include "oct-locbuf.h"
 #include "singleton-cleanup.h"
-#include "libinterp/build-info.h"
 
 #if defined (HAVE_FFTW3_THREADS) || defined (HAVE_FFTW3F_THREADS)
 #  include "nproc.h"
 #endif
 
 octave_fftw_planner *octave_fftw_planner::instance = 0;
 
 // Helper class to create and cache FFTW plans for both 1D and
@@ -1138,8 +1137,18 @@ std::string
 octave_fftw_version (void)
 {
 #if defined (HAVE_FFTW)
   return fftw_version;
 #else
   return "none";
 #endif
 }
+
+std::string
+octave_fftwf_version (void)
+{
+#if defined (HAVE_FFTW)
+  return fftwf_version;
+#else
+  return "none";
+#endif
+}
diff --git a/liboctave/numeric/oct-fftw.h b/liboctave/numeric/oct-fftw.h
--- a/liboctave/numeric/oct-fftw.h
+++ b/liboctave/numeric/oct-fftw.h
@@ -360,10 +360,11 @@ public:
 
 private:
   octave_fftw (void);
   octave_fftw (const octave_fftw&);
   octave_fftw& operator = (const octave_fftw&);
 };
 
 extern OCTAVE_API std::string octave_fftw_version (void);
+extern OCTAVE_API std::string octave_fftwf_version (void);
 
 #endif
