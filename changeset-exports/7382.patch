# HG changeset patch
# User jwe
# Date 1200425061 0
#      Tue Jan 15 19:24:21 2008 +0000
# Node ID 4ec8f8a4f0056a00f58dd59ca0c9cd620e73b2e5
# Parent  90b931a4061751a5db217a43b76420892259167b
[project @ 2008-01-15 19:24:21 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-01-15  John W. Eaton  <jwe@octave.org>
+
+	* linear-algebra/__norm__.m: Use sum(abs(x),2), not sum(abs(x.')).
+
 2008-01-15  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* plot/drawnow.m, plot/__go_draw_figure__.m, plot/__go_draw_axes__.m: 
 	Call __get__ instead of get.
 
 2008-01-15  Ben Abbott  <bpabbott@mac.com>
 
 	* linear-algebra/__norm__.m: Avoid divide by zero error for
diff --git a/scripts/linear-algebra/__norm__.m b/scripts/linear-algebra/__norm__.m
--- a/scripts/linear-algebra/__norm__.m
+++ b/scripts/linear-algebra/__norm__.m
@@ -75,49 +75,51 @@ function retval = __norm__ (x, p)
       if (strcmp (p, "fro"))
         inf_norm = norm (x, "inf");
         if (inf_norm)
           retval = inf_norm .* sqrt (sum (sum (abs (x ./ inf_norm) .^ 2)));
         else
           retval = inf_norm;
         endif
       elseif (strcmp (p, "inf"))
-        retval = max (sum (abs (x.')));
+        retval = max (sum (abs (x), 2));
       else
         error ("norm: unrecognized vector norm");
       endif
     else
       if (p == 1)
         retval = max (sum (abs (x)));
       elseif (p == 2)
         s = svd (x);
         retval = s (1);
       elseif (p == Inf)
-        retval = max (sum (abs (x.')));
+        retval = max (sum (abs (x), 2));
       else
         error ("norm: unrecognized matrix norm");
       endif
     endif
   endif
 
 endfunction
 
 %!test
-%! x = __norm__ (zeros (5), "fro");
-%! assert (x, 0);
-%! x = __norm__ (ones (5), "fro");
-%! assert (x, 5);
-%! x = __norm__ (zeros (5,1), "fro");
-%! assert (x, 0);
-%! x = __norm__ (2*ones (5,3), "fro");
-%! assert (x, sqrt (60));
+%! assert (__norm__ (magic (3)), 15, -2*eps);
+%! assert (__norm__ (magic (3) * i), 15, -2*eps);
+
+%!test
+%! assert (__norm__ (zeros (5), "fro"), 0);
+%! assert (__norm__ (ones (5), "fro"), 5);
+%! assert (__norm__ (zeros (5,1), "fro"), 0);
+%! assert (__norm__ (2*ones (5,3), "fro"), sqrt (60));
 
 %!test
-%! x = __norm__ (zeros (5), "inf");
-%! assert (x, 0);
-%! x = __norm__ (ones (5), "inf");
-%! assert (x, 5);
-%! x = __norm__ (2*ones (5,1), "inf");
-%! assert (x, 0);
-%! x = __norm__ (2*ones (5,3), "inf");
-%! assert (x, 6);
+%! assert (__norm__ (zeros (5), "inf"), 0);
+%! assert (__norm__ (ones (5), "inf"), 5);
+%! assert (__norm__ (2*ones (5,1), "inf"), 2);
+%! assert (__norm__ (2*ones (5,3), "inf"), 6);
+
+%!test
+%! assert (__norm__ (zeros (5), 1), 0);
+%! assert (__norm__ (ones (5), 1), 5);
+%! assert (__norm__ (2*ones (1,5), 1), 10);
+%! assert (__norm__ (2*ones (3,5), 1), 6);
 
 
