# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@octave.org>
# Date 1353002844 18000
#      Thu Nov 15 13:07:24 2012 -0500
# Node ID 126285fce87676cdc42d82c900dcec1c17b9cfe4
# Parent  8b04a7d67d8ae9cd9c231debda16bafa5df27c27
check for allowed struct field names in subsref and subsasgn

* ov-struct.cc (octave_scalar_struct::dotref): Check if the provided
  field name is valid. (octave_scalar_struct::subsasgn) Ditto.

diff --git a/libinterp/octave-value/ov-struct.cc b/libinterp/octave-value/ov-struct.cc
--- a/libinterp/octave-value/ov-struct.cc
+++ b/libinterp/octave-value/ov-struct.cc
@@ -1088,21 +1088,29 @@ octave_struct::fast_elem_insert (octave_
 }
 DEFINE_OCTAVE_ALLOCATOR(octave_scalar_struct);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA(octave_scalar_struct, "scalar struct", "struct");
 
 octave_value
 octave_scalar_struct::dotref (const octave_value_list& idx, bool auto_add)
 {
+  octave_value retval;
+
   assert (idx.length () == 1);
 
   std::string nm = idx(0).string_value ();
 
-  octave_value retval = map.getfield (nm);
+  if (! valid_identifier (nm))
+    {
+      error ("subsref: invalid structure field name '%s'", nm.c_str ());
+      return retval;
+    }
+
+  retval = map.getfield (nm);
 
   if (! auto_add && retval.is_undefined ())
     error ("structure has no member '%s'", nm.c_str ());
 
   return retval;
 }
 
 octave_value
@@ -1213,16 +1221,22 @@ octave_scalar_struct::subsasgn (const st
       octave_value t_rhs = rhs;
 
       octave_value_list key_idx = idx.front ();
 
       assert (key_idx.length () == 1);
 
       std::string key = key_idx(0).string_value ();
 
+      if (! valid_identifier (key))
+        {
+          error ("subsasgn: invalid structure field name '%s'", key.c_str ());
+          return retval;
+        }
+
       if (n > 1)
         {
           std::list<octave_value_list> next_idx (idx);
 
           next_idx.erase (next_idx.begin ());
 
           std::string next_type = type.substr (1);
 
