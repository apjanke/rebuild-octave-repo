# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1454009874 18000
#      Thu Jan 28 14:37:54 2016 -0500
# Node ID 95feb42d7a975bd81283707cb8be70a52f25fe0a
# Parent  ea9c050148093d0ad5841f84e642b47c053c0f93
* oct-stream.cc (OCTAVE_SCAN): Eliminate trivial macro.

diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -1102,18 +1102,16 @@ octave_base_stream::skipl (off_t num, bo
 
       if (err)
         cnt = -1;
     }
 
   return cnt;
 }
 
-#define OCTAVE_SCAN(is, fmt, arg) octave_scan (is, fmt, arg)
-
 template <typename T>
 std::istream&
 octave_scan_1 (std::istream& is, const scanf_format_elt& fmt, T* valptr)
 {
   T& ref = *valptr;
 
   switch (fmt.type)
     {
@@ -1251,17 +1249,17 @@ octave_scan<> (std::istream& is, const s
 
 template <typename T>
 void
 do_scanf_conv (std::istream& is, const scanf_format_elt& fmt,
                T valptr, Matrix& mval, double *data, octave_idx_type& idx,
                octave_idx_type& conversion_count, octave_idx_type nr,
                octave_idx_type max_size, bool discard)
 {
-  OCTAVE_SCAN (is, fmt, valptr);
+  octave_scan (is, fmt, valptr);
 
   if (! is)
     return;
 
   if (idx == max_size && ! discard)
     {
       max_size *= 2;
 
@@ -1965,45 +1963,45 @@ octave_base_stream::do_oscanf (const sca
               quit = true;
           }
           break;
 
         case 'd': case 'i':
           {
             int tmp;
 
-            if (OCTAVE_SCAN (is, *elt, &tmp))
+            if (octave_scan (is, *elt, &tmp))
               {
                 if (! discard)
                   retval = tmp;
               }
             else
               quit = true;
           }
           break;
 
         case 'o': case 'u': case 'x':
           {
             long int tmp;
 
-            if (OCTAVE_SCAN (is, *elt, &tmp))
+            if (octave_scan (is, *elt, &tmp))
               {
                 if (! discard)
                   retval = tmp;
               }
             else
               quit = true;
           }
           break;
 
         case 'e': case 'f': case 'g':
           {
             double tmp;
 
-            if (OCTAVE_SCAN (is, *elt, &tmp))
+            if (octave_scan (is, *elt, &tmp))
               {
                 if (! discard)
                   retval = tmp;
               }
             else
               quit = true;
           }
           break;
