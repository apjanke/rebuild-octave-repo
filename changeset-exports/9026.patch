# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1238069103 -3600
#      Thu Mar 26 13:05:03 2009 +0100
# Node ID 6890d411a0b8d8c5a1de65ba323ccfacbf023532
# Parent  484756d558d606e3a19d7c18bae42f3a623da36a
adjust some array dim query methods

diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -250,17 +250,18 @@ public:
 
   octave_idx_type rows (void) const { return dim1 (); }
   octave_idx_type cols (void) const { return dim2 (); }
   octave_idx_type columns (void) const { return dim2 (); }
   octave_idx_type pages (void) const { return dim3 (); }
 
   size_t byte_size (void) const { return numel () * sizeof (T); }
 
-  dim_vector dims (void) const { return dimensions; }
+  // Return a const-reference so that dims ()(i) works efficiently.
+  const dim_vector& dims (void) const { return dimensions; }
 
   Array<T> squeeze (void) const;
   
   void chop_trailing_singletons (void) 
   { dimensions.chop_trailing_singletons (); }
   
   static octave_idx_type get_size (octave_idx_type r, octave_idx_type c);
   static octave_idx_type get_size (octave_idx_type r, octave_idx_type c, octave_idx_type p);
@@ -423,16 +424,18 @@ public:
   Array<T> permute (const Array<octave_idx_type>& vec, bool inv = false) const;
   Array<T> ipermute (const Array<octave_idx_type>& vec) const
     { return permute (vec, true); }
 
   bool is_square (void) const { return (dim1 () == dim2 ()); }
 
   bool is_empty (void) const { return numel () == 0; }
 
+  bool is_vector (void) const { return dimensions.is_vector (); }
+
   Array<T> transpose (void) const;
   Array<T> hermitian (T (*fcn) (const T&) = 0) const;
 
   const T *data (void) const { return slice_data; }
 
   const T *fortran_vec (void) const { return data (); }
 
   T *fortran_vec (void);
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-26  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array.h (Array<T>::dims): Return a const reference.
+	(Array<T>::is_vector): New method.
+
 2009-03-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::find): New method.
 	* Array.h: Declare it.
 
 2009-03-25  John W. Eaton  <jwe@octave.org>
 
 	* EIG.cc (EIG::init (const Matrix&, bool),
