# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1481906986 18000
#      Fri Dec 16 11:49:46 2016 -0500
# Node ID 1b5e7f2bd38d6a3038c2684cc13fabb213895cb3
# Parent  82551783527fb0314b6aa0edfd9148cfb8968bd4
* __ode15__.cc: Avoid NULL in C++ code.

diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -76,29 +76,29 @@ namespace octave
 
     typedef
     SparseMatrix (*DAEJacCellSparse) (SparseMatrix *dfdy,
                                       SparseMatrix *dfdyp, realtype cj);
 
     //Default
     IDA (void)
       : t0 (0.0), y0 (), yp0 (), havejac (false), havejacfun (false),
-        havejacsparse (false), mem (NULL), num (), ida_fun (NULL),
-        ida_jac (NULL), dfdy (NULL), dfdyp (NULL), spdfdy (NULL),
-        spdfdyp (NULL), fun (0), jacfun (NULL), jacspfun (0),
+        havejacsparse (false), mem (0), num (), ida_fun (0),
+        ida_jac (0), dfdy (0), dfdyp (0), spdfdy (0),
+        spdfdyp (0), fun (0), jacfun (0), jacspfun (0),
         jacdcell (0), jacspcell (0)
     { };
 
 
     IDA (realtype t, ColumnVector y, ColumnVector yp,
          octave_function *ida_fcn, DAERHSFuncIDA daefun)
       : t0 (t), y0 (y), yp0 (yp), havejac (false), havejacfun (false),
-        havejacsparse (false), mem (NULL), num (), ida_fun (ida_fcn),
-        ida_jac (NULL), dfdy (NULL), dfdyp (NULL), spdfdy (NULL),
-        spdfdyp (NULL), fun (daefun), jacfun (NULL), jacspfun (0),
+        havejacsparse (false), mem (0), num (), ida_fun (ida_fcn),
+        ida_jac (0), dfdy (0), dfdyp (0), spdfdy (0),
+        spdfdyp (0), fun (daefun), jacfun (0), jacspfun (0),
         jacdcell (0), jacspcell (0)
     { };
 
 
     ~IDA (void) { IDAFree (&mem); }
 
     IDA&
     set_jacobian (octave_function *jac, DAEJacFuncDense j)
@@ -1187,34 +1187,34 @@ namespace octave
 
     //Set Refine
     const int refine =
       options.getfield("Refine").int_value ();
 
     bool haverefine =
       (refine > 1);
 
-    octave_function *output_fcn = NULL;
+    octave_function *output_fcn = 0;
     ColumnVector outputsel;
 
     // OutputFcn
     bool haveoutputfunction =
       options.getfield("haveoutputfunction").bool_value ();
 
     if (haveoutputfunction)
       output_fcn = options.getfield("OutputFcn").function_value ();
 
     // OutputSel
     bool haveoutputsel =
       options.getfield("haveoutputselection").bool_value ();
 
     if (haveoutputsel)
       outputsel = options.getfield("OutputSel").vector_value ();
 
-    octave_function *event_fcn = NULL;
+    octave_function *event_fcn = 0;
 
     // Events
     bool haveeventfunction =
       options.getfield("haveeventfunction").bool_value ();
 
     if (haveeventfunction)
       event_fcn = options.getfield("Events").function_value ();
 
@@ -1251,17 +1251,17 @@ Undocumented internal function.
 
   // Check number of parameters
   int nargin = args.length ();
 
   if (nargin != 5 || nargout != 5)
     print_usage ();
 
   // Check odefun
-  octave_function *ida_fcn = NULL;
+  octave_function *ida_fcn = 0;
 
   octave_value f_arg = args(0);
 
   if (f_arg.is_function_handle ())
     ida_fcn = f_arg.function_value ();
   else
     error ("__ode15__: odefun must be a function handle");
 
