# HG changeset patch
# User jwe
# Date 781395521 0
#      Wed Oct 05 22:18:41 1994 +0000
# Node ID dedc491ec606e41eff2cf713ab769cc38798902c
# Parent  05cd8c8b13b304615aa98bf7cead892c3e8fa3d4
[project @ 1994-10-05 22:15:58 by jwe]

diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -952,16 +952,19 @@ func_def2	: identifier safe local_symtab
 			if (strcmp (curr_fcn_file_name, id_name) != 0)
 			  {
 			    warning ("function name `%s' does not agree\
  with function file name `%s.m'", id_name, curr_fcn_file_name);
 
 			    global_sym_tab->rename (id_name,
 						    curr_fcn_file_name);
 
+			    if (error_state)
+			      ABORT_PARSE;
+
 			    id_name = $1->name ();
 			  }
 
 			$4->stash_fcn_file_name (curr_fcn_file_name);
 			$4->stash_fcn_file_time (time (0));
 			$4->mark_as_system_fcn_file ();
 		      }
 		    else if (! (input_from_tmp_history_file
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -895,17 +895,17 @@ symbol_table::rename (const char *old_na
 
 	  return;
 	}
 
       prev = ptr;
       ptr = ptr->next ();
     }
 
-  panic_impossible ();
+  error ("unable to rename `%s' to `%s', old_name, new_name");
 }
 
 void
 symbol_table::clear (int clear_user_functions)
 {
   for (int i = 0; i < HASH_TABLE_SIZE; i++)
     {
       symbol_record *ptr = table[i].next ();
