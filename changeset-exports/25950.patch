# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1539966509 14400
#      Fri Oct 19 12:28:29 2018 -0400
# Node ID 52ff6e691e49c7e1bc6d4fa28b39a9f2ea565255
# Parent  700b3f415ebedaaf1dfcc99afa7fcf442521c1f7
# Parent  c2bf210ac94f639b176101ae2ecec57506e2ecad
maint: Merge stable to default.

diff --git a/scripts/+containers/Map.m b/scripts/+containers/Map.m
--- a/scripts/+containers/Map.m
+++ b/scripts/+containers/Map.m
@@ -133,18 +133,18 @@ classdef Map < handle
     numeric_keys = false;
   endproperties
 
   methods (Access = public)
 
     function this = Map (varargin)
       if (nargin == 0)
         ## Empty object with "char" key type and "any" value type.
-      elseif (nargin == 2 ||
-              (nargin == 4 && strcmpi (varargin{3}, "UniformValues")))
+      elseif (nargin == 2 || (nargin == 4
+                              && strcmpi (varargin{3}, "UniformValues")))
         ## Get Map keys
         keys = varargin{1};
         if (isempty (keys))
           error ("containers.Map: empty keys are not allowed");
         endif
         if (! iscell (keys))
           if (isnumeric (keys) || islogical (keys))
             keys = num2cell (keys);
diff --git a/scripts/ode/ode15s.m b/scripts/ode/ode15s.m
--- a/scripts/ode/ode15s.m
+++ b/scripts/ode/ode15s.m
@@ -192,18 +192,18 @@ function varargout = ode15s (fun, trange
                  [solver ": invalid value assigned to field 'Mass'"]);
         endif
       else
         error ("Octave:invalid-input-arg",
                [solver ": invalid value assigned to field 'Mass'"]);
       endif
     elseif (ismatrix (options.Mass))
       options.havemasssparse = issparse (options.Mass);
-      if (any (size (options.Mass) != [n n]) ||
-          ! isnumeric (options.Mass) || ! isreal (options.Mass))
+      if (any (size (options.Mass) != [n n])
+          || ! isnumeric (options.Mass) || ! isreal (options.Mass))
         error ("Octave:invalid-input-arg",
                [solver ": invalid value assigned to field 'Mass'"]);
       endif
     else
       error ("Octave:invalid-input-arg",
              [solver ": invalid value assigned to field 'Mass'"]);
     endif
   endif
diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -1214,18 +1214,18 @@ function cb_axes_deleted (~, ~, ca, hleg
     delete (hlegend);
   endif
 endfunction
 
 ## Restore position of axes object when legend is deleted.
 function cb_restore_axes (~, ~, ca, pos, outpos, htdel, hplots)
 
   hf = ancestor (ca(1), "figure");
-  if (strcmp (get (hf, "beingdeleted"), "on") ||
-      strcmp (get (ca(1), "beingdeleted"), "on"))
+  if (strcmp (get (hf, "beingdeleted"), "on")
+      || strcmp (get (ca(1), "beingdeleted"), "on"))
     ## Skip restoring axes if entire figure or axes is being destroyed.
     return;
   endif
 
   ## Remove text object used to trigger legend delete when axes is deleted
   if (ishghandle (htdel))
     set (htdel, "deletefcn", []);
     delete (htdel);
diff --git a/scripts/plot/appearance/material.m b/scripts/plot/appearance/material.m
--- a/scripts/plot/appearance/material.m
+++ b/scripts/plot/appearance/material.m
@@ -68,18 +68,18 @@
 ##
 ## @seealso{light, fill, mesh, patch, pcolor, surf, surface}
 ## @end deftypefn
 
 ## Author: mmuetzel
 
 function retval = material (varargin)
 
-  if (! ((nargout == 0 && (nargin == 1 || nargin == 2)) ||
-         (nargout == 1 && (nargin == 0 || nargin == 1))) )
+  if (! ((nargout == 0 && (nargin == 1 || nargin == 2))
+         || (nargout == 1 && (nargin == 0 || nargin == 1))))
     print_usage ();
   endif
 
   ## resolve input
   h = [];
   if (nargout == 0)
     ## Check whether first argument is list of graphics handles.
     if (all (ishghandle (varargin{1})))
diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -112,19 +112,19 @@ function __gnuplot_draw_axes__ (h, plot_
     sz_str = sprintf ("set size %s %g, %g;\n", sz_str, pos(3:4));
   endif
   if (! isempty (sz_str))
     fputs (plot_stream, sz_str);
   endif
 
   ## Code above uses axis size for the data aspect ratio, which isn't
   ## quite correct.  The only fine control is to set all axes units equal.
-  if (nd == 3 &&
-      strcmp (axis_obj.dataaspectratiomode, "manual") &&
-      axis_obj.dataaspectratio(1) == axis_obj.dataaspectratio(2))
+  if (nd == 3
+      && strcmp (axis_obj.dataaspectratiomode, "manual")
+      && axis_obj.dataaspectratio(1) == axis_obj.dataaspectratio(2))
     if (axis_obj.dataaspectratio(1) == axis_obj.dataaspectratio(3))
       zstr = "z";
     else
       zstr = "";
     endif
     fprintf (plot_stream, "set view equal xy%s;\n", zstr);
   endif
 
@@ -1333,18 +1333,20 @@ function __gnuplot_draw_axes__ (h, plot_
             num_cols = xlen;
           endif
           if (domeshrow)
             num_pass += ylen;
           endif
 
           for np = 1:num_pass
             for i_stl = 1:length (style)
-              has_ccol = ((strncmp (style{i_stl}, "lines", 5) && flat_interp_edge) ||
-                          (strncmp (style{i_stl}, "points", 6) && flat_marker));
+              has_ccol = ((strncmp (style{i_stl}, "lines", 5)
+                           && flat_interp_edge)
+                          || (strncmp (style{i_stl}, "points", 6)
+                              && flat_marker));
               if (has_ccol)
                 ccol = ":($4)";
                 N_tup = 4;
               else
                 ccol = "";
                 N_tup = 3;
               endif
               sopt = sprintf ("ls %d", sidx (i_stl));
