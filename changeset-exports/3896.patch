# HG changeset patch
# User jwe
# Date 1018507031 0
#      Thu Apr 11 06:37:11 2002 +0000
# Node ID 0486f50a8ecb86e42fad95d5dbe7d66e7f3b5562
# Parent  d38c7538b954b2ce7305e3364408c8570b0b3bcb
[project @ 2002-04-11 06:37:11 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2002-04-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DASSL.h (DASSL_options::init): Set absolute tolerance to eps ^ 2.
+	(DASSL_options::set_absolute_tolerance): Likewise.
+	* LSODE.h (LSODE_options::init): Likewise.
+	(LSODE_options::set_absolute_tolerance): Likewise.
+
 2002-04-03  Steven G. Johnson <stevenj@alum.mit.edu>
 
 	* f2c-main.c (MAIN_, MAIN__): Delete.  Use F77_DUMMY_MAIN instead.
 	* file-stat.cc (file_stat::update_internal, file_stat::copy):
 	Use HAVE_STRUCT_STAT_ST_RDEV instead of HAVE_ST_RDEV.
 	Use HAVE_STRUCT_STAT_ST_BLKSIZE instead of HAVE_ST_BLKSIZE.
 	Use HAVE_STRUCT_STAT_ST_BLOCKS instead of HAVE_ST_BLOCKS.
 	* file-stat.h: Likewise.
diff --git a/liboctave/DASSL.h b/liboctave/DASSL.h
--- a/liboctave/DASSL.h
+++ b/liboctave/DASSL.h
@@ -48,37 +48,36 @@ public:
 
       return *this;
     }
 
   ~DASSL_options (void) { }
 
   void init (void)
     {
-      double sqrt_eps = sqrt (DBL_EPSILON);
-      x_absolute_tolerance = sqrt_eps;
+      x_absolute_tolerance = DBL_EPSILON * DBL_EPSILON;
       x_initial_step_size = -1.0;
       x_maximum_step_size = -1.0;
       x_minimum_step_size = 0.0;
-      x_relative_tolerance = sqrt_eps;
+      x_relative_tolerance = sqrt (DBL_EPSILON);
     }
 
   void copy (const DASSL_options& opt)
     {
       x_absolute_tolerance = opt.x_absolute_tolerance;
       x_initial_step_size = opt.x_initial_step_size;
       x_maximum_step_size = opt.x_maximum_step_size;
       x_minimum_step_size = opt.x_minimum_step_size;
       x_relative_tolerance = opt.x_relative_tolerance;
     }
 
   void set_default_options (void) { init (); }
 
   void set_absolute_tolerance (double val)
-    { x_absolute_tolerance = (val > 0.0) ? val : ::sqrt (DBL_EPSILON); }
+    { x_absolute_tolerance = (val > 0.0) ? val : DBL_EPSILON * DBL_EPSILON; }
 
   void set_initial_step_size (double val)
     { x_initial_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_maximum_step_size (double val)
     { x_maximum_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_minimum_step_size (double val)
diff --git a/liboctave/LSODE.h b/liboctave/LSODE.h
--- a/liboctave/LSODE.h
+++ b/liboctave/LSODE.h
@@ -48,23 +48,21 @@ public:
 
       return *this;
     }
 
   ~LSODE_options (void) { }
 
   void init (void)
     {
-      double sqrt_eps = ::sqrt (DBL_EPSILON);
-
-      x_absolute_tolerance = sqrt_eps;
+      x_absolute_tolerance = DBL_EPSILON * DBL_EPSILON;
       x_initial_step_size = -1.0;
       x_maximum_step_size = -1.0;
       x_minimum_step_size = 0.0;
-      x_relative_tolerance = sqrt_eps;
+      x_relative_tolerance = ::sqrt (DBL_EPSILON);
 
       // This is consistent with earlier versions of Octave, and is
       // much larger than the default of 500 specified in the LSODE
       // sources.
       x_step_limit = 100000;
     }
 
   void copy (const LSODE_options& opt)
@@ -76,17 +74,17 @@ public:
       x_relative_tolerance = opt.x_relative_tolerance;
 
       x_step_limit = opt.x_step_limit;
     }
 
   void set_default_options (void) { init (); }
 
   void set_absolute_tolerance (double val)
-    { x_absolute_tolerance = (val > 0.0) ? val : ::sqrt (DBL_EPSILON); }
+    { x_absolute_tolerance = (val > 0.0) ? val : DBL_EPSILON * DBL_EPSILON; }
 
   void set_initial_step_size (double val)
     { x_initial_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_maximum_step_size (double val)
     { x_maximum_step_size = (val >= 0.0) ? val : -1.0; }
 
   void set_minimum_step_size (double val)
