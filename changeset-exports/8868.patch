# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1235548948 18000
#      Wed Feb 25 03:02:28 2009 -0500
# Node ID 4d812facab0e6bca6aacb7a8a42d634335f4b28a
# Parent  ff89a265592b44eff34725c7832494696e8ab26d
write debugging location info directly to std::cerr

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2009-02-25  John W. Eaton  <jwe@octave.org>
 
+	* input.cc (get_debug_input): Write debugging location info
+	directly to std::cerr instead of calling message.
+	* pt-eval.cc (tree_evaluator::do_breakpoint): Write debugging
+	location info directly to std::cerr, not octave_stdout.
+
 	* defaults.h.in (OCTAVE_DOC_CACHE_FILE): New macro.
 	* defaults.cc (set_default_doc_cache_file): New function.
 	(install_defaults): Call it.
 
 	* help.cc (__list_functions__): Simplify
 
 	* input.cc (get_debug_input): Don't pass arbitrary input to
 	message as a format string.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -640,17 +640,22 @@ get_debug_input (const std::string& prom
 		buf << "\n" << curr_debug_line << ": " << line_buf;
 	    }
 	}
     }
 
   std::string msg = buf.str ();
 
   if (! msg.empty ())
-    message (Vgud_mode ? 0 : "keyboard", "%s", msg.c_str ());
+    {
+      if (! Vgud_mode)
+	std::cerr << "keyboard: ";
+
+      std::cerr << msg << std::endl;
+    }
 
   unwind_protect::begin_frame ("get_debug_input");
 
   unwind_protect_str (VPS1);
   VPS1 = prompt;
 
   while (Vdebugging)
     {
diff --git a/src/pt-eval.cc b/src/pt-eval.cc
--- a/src/pt-eval.cc
+++ b/src/pt-eval.cc
@@ -1185,19 +1185,19 @@ tree_evaluator::do_breakpoint (bool is_b
 	dbstep_flag = -1;
     }
 
   if (break_on_this_statement)
     {
       octave_function *xfcn = octave_call_stack::current ();
 
       if (xfcn)
-	octave_stdout << xfcn->name () << ": "; 
+	std::cerr << xfcn->name () << ": "; 
 
-      octave_stdout << "line " << l << ", " << "column " << c << std::endl;
+      std::cerr << "line " << l << ", " << "column " << c << std::endl;
 
       db_line = l;
       db_column = c;
 
       // FIXME -- probably we just want to print one line, not the
       // entire statement, which might span many lines...
       //
       // tree_print_code tpc (octave_stdout);
