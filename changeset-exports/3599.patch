# HG changeset patch
# User jwe
# Date 951346088 0
#      Wed Feb 23 22:48:08 2000 +0000
# Node ID b8fa63b7ea79e44a02c5dcf1f2dd134d8a63ed58
# Parent  0ae310231c463d6d8978ed9e34b2c138d7628d66
[project @ 2000-02-23 22:48:08 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2000-02-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* specfun/erfinv.m: Use z_new in convergence test, not z_old.
+
 2000-02-11  Georg Thimm <mgeorg@SGraphicsWS1.mpe.ntu.edu.sg>
 
 	* set/create_set.m: Use find to avoid while loop.
 
 2000-02-11  Stephen Eglen <stephen@cogsci.ed.ac.uk>
 
 	* plot/hist.m: New optional third argument.
 
diff --git a/scripts/specfun/erfinv.m b/scripts/specfun/erfinv.m
--- a/scripts/specfun/erfinv.m
+++ b/scripts/specfun/erfinv.m
@@ -11,28 +11,28 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Mapping Function} {} erfinv (@var{z})
-## Computes the inverse of the error function,
+## Computes the inverse of the error function.
 ## @end deftypefn
 ## @seealso{erf and erfc}
 
 ## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Created: 27 September 1994
 ## Adapted-By: jwe
 
 function [y, iterations] = erfinv (x)
 
   if (nargin != 1)
-    usage ("erfinv (x)");
+    usage ("erfinv (x, maxit)");
   endif
 
   maxit = 100;
   tol = eps;
 
   iterations = 0;
 
   [m, n] = size (x);
@@ -50,17 +50,17 @@ function [y, iterations] = erfinv (x)
   t = find (x == 1);
   y (t) = Inf * ones (size (t));
 
   i = find ((x > -1) & (x < 1));
   if any (i)
     s = sqrt (pi) / 2;
     z_old = ones (length (i), 1);
     z_new = sqrt (-log (1 - abs (x(i)))) .* sign (x(i));
-    while (any (abs (erf (z_old) - x(i)) > tol * abs (x(i))))
+    while (any (abs (erf (z_new) - x(i)) > tol * abs (x(i))))
       z_old = z_new;
       z_new = z_old - (erf (z_old) - x(i)) .* exp (z_old.^2) * s;
       if (++iterations > maxit)
         warning ("erfinv: iteration limit exceeded");
         break;
       endif
     endwhile
     y(i) = z_new;
