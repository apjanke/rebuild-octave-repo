# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368439092 14400
#      Mon May 13 05:58:12 2013 -0400
# Node ID d446e99f89f73d062a104ad5dfaac9d18bf842ed
# Parent  025bc6b5080e6b7c0531f893e61c611d053b5b9a
disallow setting selection with right mouse button in windows terminal

* QWinTerminalImpl.cpp (QConsolePrivate::m_settingSelection):
New member variable.
(QConsolePrivate::QConsolePrivate): Initialize it.
(QWinTerminalImpl::mousePressEvent,
QWinTerminalImpl::mouseReleaseEvent): Set d->m_settingSelection.
(QWinTerminalImpl::mouseMoveEvent): Don't do anything unless
d->m_settingSelection is true.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -166,16 +166,17 @@ private:
   QPoint m_cursorPos;
   bool m_cursorBlinking;
   bool m_hasBlinkingCursor;
   QTimer *m_blinkCursorTimer;
   KeyboardCursorType m_cursorType;
 
   QPoint m_beginSelection;
   QPoint m_endSelection;
+  bool m_settingSelection;
 
   QColor m_selectionColor;
   QColor m_cursorColor;
 
   HANDLE m_stdOut;
   HWND m_consoleWindow;
   CHAR_INFO* m_buffer;
   CHAR_INFO* m_tmpBuffer;
@@ -197,17 +198,18 @@ static void maybeSwapPoints (QPoint& beg
     qSwap (begin, end);
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 QConsolePrivate::QConsolePrivate (QWinTerminalImpl* parent, const QString& cmd)
   : q (parent), m_command (cmd), m_hasBlinkingCursor (true),
     m_cursorType (BlockCursor), m_beginSelection (0, 0),
-    m_endSelection (0, 0), m_process (NULL), m_inWheelEvent (false)
+    m_endSelection (0, 0), m_settingSelection (false),
+    m_process (NULL), m_inWheelEvent (false)
 {
   log (NULL);
 
   // Possibly detach from any existing console
   log ("Detaching from existing console (if any)...\n");
   FreeConsole ();
   log ("Closing standard IO...\n");
   closeStandardIO (0, STD_INPUT_HANDLE, "STDIN");
@@ -1172,34 +1174,43 @@ QWinTerminalImpl::QWinTerminalImpl (cons
 
 QWinTerminalImpl::~QWinTerminalImpl (void)
 {
   delete d;
 }
 
 void QWinTerminalImpl::mouseMoveEvent (QMouseEvent *event)
 {
-  d->m_endSelection = d->posToCell (event->pos ());
+  if (d->m_settingSelection)
+    {
+      d->m_endSelection = d->posToCell (event->pos ());
 
-  updateSelection ();
+      updateSelection ();
+    }
 }
 
 void QWinTerminalImpl::mousePressEvent (QMouseEvent *event)
 {
   if (event->button () == Qt::LeftButton)
-    d->m_beginSelection = d->posToCell (event->pos ());
+    {
+      d->m_settingSelection = true;
+
+      d->m_beginSelection = d->posToCell (event->pos ());
+    }
 }
 
 void QWinTerminalImpl::mouseReleaseEvent (QMouseEvent *event)
 {
   if (event->button () == Qt::LeftButton)
     {
       d->m_endSelection = d->posToCell (event->pos ());
 
       updateSelection ();
+
+      d->m_settingSelection = false;
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 void QWinTerminalImpl::viewResizeEvent (QConsoleView*, QResizeEvent*)
 {
   d->updateConsoleSize (true);
