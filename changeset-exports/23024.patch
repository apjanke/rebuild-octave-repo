# HG changeset patch
# User Rik <rik@octave.org>
# Date 1483983513 28800
#      Mon Jan 09 09:38:33 2017 -0800
# Node ID a6a7b054e4baff3e076c0aa56fb4ef7a53369ee0
# Parent  63a12df71848d4a94d64d728d8baf0ea8b47bc25
Rationalize #includes in libinterp/dldfcn directory.

* symbfact.cc, __delaunayn__.cc, __eigs__.cc, __fltk_uigetfile__.cc,
__glpk__.cc, __init_fltk__.cc, __init_gnuplot__.cc, __ode15__.cc,
__osmesa_print__.cc, __voronoi__.cc, amd.cc, audiodevinfo.cc, audioread.cc,
ccolamd.cc, chol.cc, colamd.cc, convhulln.cc, dmperm.cc, fftw.cc, gzip.cc,
qr.cc, symrcm.cc: Add missing #includes and remove excess ones.

diff --git a/libinterp/dldfcn/__delaunayn__.cc b/libinterp/dldfcn/__delaunayn__.cc
--- a/libinterp/dldfcn/__delaunayn__.cc
+++ b/libinterp/dldfcn/__delaunayn__.cc
@@ -37,27 +37,31 @@ along with Octave; see the file COPYING.
   * allow options to be specified as cell array of strings
   * change the default options (for compatibility with matlab)
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include <iostream>
+#include <cstdio>
+
+#include <limits>
 #include <string>
 
+#include "Array.h"
+#include "dMatrix.h"
+#include "dRowVector.h"
 #include "oct-locbuf.h"
+#include "unwind-prot.h"
 
-#include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
-#include "unwind-prot.h"
 
 #if defined (HAVE_QHULL)
 
 #  include "oct-qhull.h"
 
 #  if defined (NEED_QHULL_VERSION)
 char qh_version[] = "__delaunayn__.oct 2007-08-21";
 #  endif
@@ -212,18 +216,18 @@ Undocumented internal function.
       qh_memfreeshort (&curlong, &totlong);
 
       if (curlong || totlong)
         warning ("__delaunay__: did not free %d bytes of long memory (%d pieces)",
                  totlong, curlong);
     }
   else if (n == dim + 1)
     {
-      // one should check if nx points span a simplex
-      // I will look at this later.
+      // FIXME: One should check if nx points span a simplex.
+      //        I will look at this later.
       RowVector vec (n);
       for (octave_idx_type i = 0; i < n; i++)
         vec(i) = i + 1.0;
 
       retval(0) = vec;
     }
 
   return retval;
diff --git a/libinterp/dldfcn/__eigs__.cc b/libinterp/dldfcn/__eigs__.cc
--- a/libinterp/dldfcn/__eigs__.cc
+++ b/libinterp/dldfcn/__eigs__.cc
@@ -19,27 +19,30 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <limits>
+#include <string>
+
+#include "Matrix.h"
+#include "eigs-base.h"
+#include "unwind-prot.h"
+
 #include "defun-dld.h"
-#include "eigs-base.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
-#include "ov-cx-sparse.h"
-#include "ov-re-sparse.h"
 #include "ov.h"
+#include "ovl.h"
 #include "pager.h"
-#include "quit.h"
-#include "unwind-prot.h"
 #include "variables.h"
 
 #if defined (HAVE_ARPACK)
 
 // Global pointer for user defined function.
 static octave_function *eigs_fcn = 0;
 
 // Have we warned about imaginary values returned from user function?
diff --git a/libinterp/dldfcn/__fltk_uigetfile__.cc b/libinterp/dldfcn/__fltk_uigetfile__.cc
--- a/libinterp/dldfcn/__fltk_uigetfile__.cc
+++ b/libinterp/dldfcn/__fltk_uigetfile__.cc
@@ -25,30 +25,36 @@ along with Octave; see the file COPYING.
 #endif
 
 #if defined (HAVE_FLTK)
 
 #if defined (WIN32)
 #  define WIN32_LEAN_AND_MEAN
 #endif
 
+#include <string>
+
 #include <FL/Fl.H>
 #include <FL/Fl_File_Chooser.H>
 
 // FLTK headers may include X11/X.h which defines Complex, and that
 // conflicts with Octave's Complex typedef.  We don't need the X11
 // Complex definition in this file, so remove it before including Octave
 // headers which may require Octave's Complex typedef.
 #undef Complex
 
 #endif
 
+#include "dMatrix.h"
+#include "file-ops.h"
+
+#include "Cell.h"
 #include "defun-dld.h"
 #include "errwarn.h"
-#include "file-ops.h"
+#include "ov.h"
 
 DEFUN_DLD (__fltk_uigetfile__, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {} __fltk_uigetfile__ (@dots{})
 Undocumented internal function.
 @end deftypefn */)
 {
 #if defined (HAVE_FLTK)
@@ -97,17 +103,17 @@ Undocumented internal function.
   while (fc.shown ())
     Fl::wait ();
 
   if (fc.value ())
     {
       int file_count = fc.count ();
       std::string fname;
 
-      //fltk uses forward slash even for windows
+      // FLTK uses forward slash even for Windows
       std::string sep = "/";
       size_t idx;
 
       if (file_count == 1 && multi_type != Fl_File_Chooser::DIRECTORY)
         {
           fname = fc.value ();
           idx = fname.find_last_of (sep);
           retval(0) = fname.substr (idx + 1);
diff --git a/libinterp/dldfcn/__glpk__.cc b/libinterp/dldfcn/__glpk__.cc
--- a/libinterp/dldfcn/__glpk__.cc
+++ b/libinterp/dldfcn/__glpk__.cc
@@ -23,24 +23,31 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <ctime>
 
+#include <limits>
+
+#include "Array.h"
+#include "chMatrix.h"
+#include "dColVector.h"
+#include "dMatrix.h"
+#include "dSparse.h"
 #include "lo-ieee.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
+#include "ov.h"
 #include "ovl.h"
-#include "pager.h"
 
 #if defined (HAVE_GLPK)
 
 extern "C"
 {
 #if defined (HAVE_GLPK_GLPK_H)
 #  include <glpk/glpk.h>
 #else
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -31,33 +31,33 @@ To initialize:
 */
 
 // PKG_ADD: if (__have_feature__ ("FLTK") && __have_feature__ ("OPENGL") && have_window_system ()) register_graphics_toolkit ("fltk"); endif
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include "builtin-defun-decls.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
-#include "oct-opengl.h"
-#include "ov-fcn-handle.h"
 
 #if defined (HAVE_FLTK)
 
 #if defined (HAVE_X_WINDOWS)
 #  include <X11/Xlib.h>
 #endif
 
+#include <cmath>
+
+#include <locale>
 #include <map>
-#include <set>
 #include <sstream>
-#include <iostream>
+#include <string>
+#include <vector>
 
 #if defined (WIN32)
 #  define WIN32_LEAN_AND_MEAN
 #endif
 
 #include <FL/Fl.H>
 #include <FL/Fl_Box.H>
 #include <FL/Fl_Button.H>
@@ -74,27 +74,36 @@ To initialize:
 #include <FL/gl.h>
 
 // FLTK headers may include X11/X.h which defines Complex, and that
 // conflicts with Octave's Complex typedef.  We don't need the X11
 // Complex definition in this file, so remove it before including Octave
 // headers which may require Octave's Complex typedef.
 #undef Complex
 
+#include "Array.h"
 #include "cmd-edit.h"
+#include "dColVector.h"
+#include "dMatrix.h"
 #include "lo-ieee.h"
 #include "oct-env.h"
 
+#include "Cell.h"
+#include "builtin-defun-decls.h"
 #include "display.h"
-#include "file-ops.h"
 #include "gl-render.h"
 #include "gl2ps-print.h"
 #include "graphics.h"
+#include "interpreter.h"
+#include "oct-map.h"
+#include "oct-opengl.h"
+#include "ov-fcn-handle.h"
+#include "ov.h"
+#include "ovl.h"
 #include "parse.h"
-#include "interpreter.h"
 #include "variables.h"
 
 #define FLTK_GRAPHICS_TOOLKIT_NAME "fltk"
 
 const char* help_text = "\
 Keyboard Shortcuts\n\
 a - autoscale\n\
 p - pan/zoom\n\
@@ -2401,17 +2410,17 @@ Undocumented internal function.  Calls F
 @end deftypefn */)
 {
 #if defined (HAVE_FLTK)
   Fl::check ();
 
   if (Vdrawnow_requested)
     Fdrawnow ();
 
-  return ovl ();
+  return octave_value_list ();
 #else
   err_disabled_feature ("__fltk_check__", "OpenGL and FLTK");
 #endif
 }
 
 // Initialize the fltk graphics toolkit.
 
 DEFUN_DLD (__init_fltk__, , ,
@@ -2434,17 +2443,17 @@ Undocumented internal function.
 
       octave_value fcn (new octave_builtin (F__fltk_check__));
       octave_value fcn_handle (new octave_fcn_handle (fcn, "@__fltk_check__"));
       octave_value_list id = Fadd_input_event_hook (fcn_handle, 1);
 
       fltk->set_input_event_hook_id (id);
     }
 
-  return ovl ();
+  return octave_value_list ();
 
 #else
   err_disabled_feature ("__init_fltk__", "OpenGL and FLTK");
 #endif
 }
 
 /*
 ## No test needed for internal helper function.
diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -28,23 +28,29 @@ To initialize:
   plot (randn (1e3, 1));
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <string>
+
+#include "dMatrix.h"
+#include "file-stat.h"
+#include "oct-env.h"
+
 #include "build-env.h"
 #include "builtin-defun-decls.h"
 #include "defun-dld.h"
 #include "error.h"
-#include "file-stat.h"
 #include "graphics.h"
-#include "oct-env.h"
+#include "ov.h"
+#include "ovl.h"
 #include "parse.h"
 #include "utils.h"
 #include "variables.h"
 
 // PKG_ADD: if (__have_gnuplot__ ()) register_graphics_toolkit ("gnuplot"); endif
 
 static bool toolkit_loaded = false;
 
@@ -207,43 +213,37 @@ have_gnuplot_binary (void)
 // Initialize the gnuplot graphics toolkit.
 
 DEFUN_DLD (__init_gnuplot__, , ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {} __init_gnuplot__ ()
 Undocumented internal function.
 @end deftypefn */)
 {
-  octave_value retval;
-
   if (! have_gnuplot_binary ())
     error ("__init_gnuplot__: the gnuplot program is not available, see 'gnuplot_binary'");
   else if (! toolkit_loaded)
     {
       mlock ();
 
       graphics_toolkit tk (new gnuplot_graphics_toolkit ());
       gtk_manager::load_toolkit (tk);
 
       toolkit_loaded = true;
     }
 
-  return retval;
+  return octave_value_list ();
 }
 
 DEFUN_DLD (__have_gnuplot__, , ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {@var{gnuplot_available} =} __have_gnuplot__ ()
 Undocumented internal function.
 @end deftypefn */)
 {
-  octave_value retval;
-
-  retval = have_gnuplot_binary ();
-
-  return retval;
+  return ovl (have_gnuplot_binary ());
 }
 
 /*
 ## No test needed for internal helper function.
 %!assert (1)
 */
 
diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -23,22 +23,24 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "dColVector.h"
 #include "dMatrix.h"
 #include "dSparse.h"
 
+#include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
+#include "errwarn.h"
+#include "oct-map.h"
 #include "ov.h"
-#include "ov-struct.h"
+#include "ovl.h"
 #include "parse.h"
-#include "errwarn.h"
 
 #if defined (HAVE_SUNDIALS)
 
 #  if defined (HAVE_IDA_IDA_H)
 #    include <ida/ida.h>
 #    include <ida/ida_dense.h>
 #  endif
 
diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -28,25 +28,33 @@ from git://anongit.freedesktop.org/mesa/
 #endif
 
 #if defined (HAVE_OSMESA_H)
 #  include <osmesa.h>
 #elif defined (HAVE_GL_OSMESA_H)
 #  include <GL/osmesa.h>
 #endif
 
+#include <string>
+
+#include "Array.h"
+#include "dMatrix.h"
 #include "oct-locbuf.h"
+#include "uint8NDArray.h"
 #include "unwind-prot.h"
 
 #include "defun-dld.h"
+#include "error.h"
 #include "errwarn.h"
 #include "gl-render.h"
 #include "gl2ps-print.h"
 #include "graphics.h"
 #include "oct-opengl.h"
+#include "ov.h"
+#include "ovl.h"
 
 #if defined (HAVE_OSMESA)
 
 static void
 reset_visibility (figure::properties *fp)
 {
   fp->set_visible ("on");
 }
@@ -183,17 +191,17 @@ instead.
       Array<idx_vector> idx (dim_vector (3, 1));
 
       // Flip Y
       idx(0) = idx_vector::make_range (Height - 1, -1, Height);
       idx(1) = idx_vector::colon;
 
       // Remove alpha channel
       idx(2) = idx_vector (0, 3);
-      retval = octave_value (img.permute (perm).index(idx));
+      retval(0) = octave_value (img.permute (perm).index(idx));
     }
 
   OSMesaDestroyContext (ctx);
 
   return retval;
 
 #else
 
diff --git a/libinterp/dldfcn/__voronoi__.cc b/libinterp/dldfcn/__voronoi__.cc
--- a/libinterp/dldfcn/__voronoi__.cc
+++ b/libinterp/dldfcn/__voronoi__.cc
@@ -31,27 +31,32 @@ qhull command
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 
-#include <list>
+#include <limits>
+#include <string>
 
+#include "Array.h"
+#include "boolMatrix.h"
+#include "dMatrix.h"
+#include "dRowVector.h"
 #include "oct-locbuf.h"
-#include "lo-ieee.h"
+#include "unwind-prot.h"
 
 #include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
+#include "ov.h"
 #include "ovl.h"
-#include "unwind-prot.h"
 
 #if defined (HAVE_QHULL)
 
 #  include "oct-qhull.h"
 
 #  if defined (NEED_QHULL_VERSION)
 char qh_version[] = "__voronoi__.oct 2007-07-24";
 #  endif
diff --git a/libinterp/dldfcn/amd.cc b/libinterp/dldfcn/amd.cc
--- a/libinterp/dldfcn/amd.cc
+++ b/libinterp/dldfcn/amd.cc
@@ -24,31 +24,28 @@ along with Octave; see the file COPYING.
 // in the help of the functions.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
-#include <string>
-#include <vector>
+#include "CSparse.h"
+#include "Sparse.h"
+#include "dMatrix.h"
+#include "oct-locbuf.h"
+#include "oct-sparse.h"
 
-#include "ov.h"
 #include "defun-dld.h"
+#include "error.h"
 #include "errwarn.h"
-#include "pager.h"
-#include "ov-re-mat.h"
-
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
 #include "oct-map.h"
-
-#include "oct-sparse.h"
-#include "oct-locbuf.h"
+#include "ov.h"
+#include "ovl.h"
 
 #if defined (OCTAVE_ENABLE_64)
 #  define AMD_NAME(name) amd_l ## name
 #else
 #  define AMD_NAME(name) amd ## name
 #endif
 
 DEFUN_DLD (amd, args, nargout,
diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -21,31 +21,36 @@ along with Octave; see the file COPYING.
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdint>
 
+#include <algorithm>
+#include <ostream>
 #include <string>
 #include <vector>
 
+#include "Matrix.h"
 #include "mach-info.h"
-
+#include "oct-locbuf.h"
+#include "quit.h"
+#include "unwind-prot.h"
+
+#include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
-#include "oct-locbuf.h"
-#include "ovl.h"
-#include "ov.h"
+#include "oct-map.h"
 #include "ov-int32.h"
-#include "ov-struct.h"
+#include "ov.h"
+#include "ovl.h"
 #include "parse.h"
-#include "unwind-prot.h"
 
 #if defined (HAVE_PORTAUDIO)
 
 #include <portaudio.h>
 
 PaSampleFormat
 bits_to_format (int bits)
 {
@@ -873,18 +878,18 @@ audioplayer::init_fn (void)
     = device_info ? device_info->defaultHighOutputLatency : -1;
 
   output_parameters.hostApiSpecificStreamInfo = 0;
 }
 
 void
 audioplayer::init (void)
 {
-  // Both of these variables are unused.  Should they be
-  // eliminated or is something not yet implemented?
+  // FIXME: Both of these variables are unused.
+  // Should they be eliminated or is something not yet implemented?
   //
   // int channels = y.rows ();
   // RowVector *sound_l = get_left ();
 
   if (Pa_Initialize () != paNoError)
     error ("audioplayer: initialization error!");
 
   if (Pa_GetDeviceCount () < 1)
diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -20,28 +20,30 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include <string>
+#include <algorithm>
 #include <map>
+#include <string>
 
+#include "dMatrix.h"
+#include "dRowVector.h"
 #include "oct-locbuf.h"
 #include "unwind-prot.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
+#include "ov.h"
 #include "ovl.h"
-#include "ov.h"
-#include "ov-struct.h"
 #include "pager.h"
 
 #if defined (HAVE_SNDFILE)
 #  include <sndfile.h>
 #endif
 
 #if defined (HAVE_SNDFILE)
 static void
@@ -335,18 +337,17 @@ Comment.
   info.channels = audio.columns ();
   info.samplerate = samplerate;
   info.channels = audio.cols ();
   info.format |= extension_to_format (ext);
 
   std::string title = "";
   std::string artist = "";
   std::string comment = "";
-  // Quality is currently unused?
-  //
+  // FIXME: Quality is currently unused?
   // float quality = 0.75;
   for (int i = 3; i < nargin; i += 2)
     {
       if (i >= nargin - 1)
         error ("audiowrite: invalid number of arguments");
 
       std::string keyword = args(i).string_value ();
       octave_value value_arg = args(i+1);
@@ -368,18 +369,17 @@ Comment.
             info.format |= SF_FORMAT_PCM_24;
           else if (bits == 32)
             info.format |= SF_FORMAT_PCM_32;
           else
             error ("audiowrite: wrong number of bits specified");
         }
       else if (keyword == "BitRate")
         ;
-      // Quality is currently unused?
-      //
+      // FIXME: Quality is currently unused?
       // else if (keyword == "Quality")
       //   quality = value_arg.int_value () * 0.01;
       else if (keyword == "Title")
         title = value_arg.string_value ();
       else if (keyword == "Artist")
         artist = value_arg.string_value ();
       else if (keyword == "Comment")
         comment = value_arg.string_value ();
@@ -597,11 +597,11 @@ with names that start with @var{format}.
 
   octave_unused_parameter (args);
 
   err_disabled_feature ("audioformats",
                         "getting sound formats through libsndfile");
 
 #endif
 
-  return octave_value ();
+  return octave_value_list ();
 }
 
diff --git a/libinterp/dldfcn/ccolamd.cc b/libinterp/dldfcn/ccolamd.cc
--- a/libinterp/dldfcn/ccolamd.cc
+++ b/libinterp/dldfcn/ccolamd.cc
@@ -24,30 +24,27 @@ along with Octave; see the file COPYING.
 // in the help of the functions.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
-#include <string>
-#include <vector>
+#include "CSparse.h"
+#include "Sparse.h"
+#include "dNDArray.h"
+#include "oct-locbuf.h"
+#include "oct-sparse.h"
 
+#include "defun-dld.h"
+#include "error.h"
+#include "errwarn.h"
 #include "ov.h"
-#include "defun-dld.h"
-#include "errwarn.h"
 #include "pager.h"
-#include "ov-re-mat.h"
-
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
-
-#include "oct-sparse.h"
-#include "oct-locbuf.h"
 
 #if defined (OCTAVE_ENABLE_64)
 #  define CCOLAMD_NAME(name) ccolamd_l ## name
 #  define CSYMAMD_NAME(name) csymamd_l ## name
 #else
 #  define CCOLAMD_NAME(name) ccolamd ## name
 #  define CSYMAMD_NAME(name) csymamd ## name
 #endif
diff --git a/libinterp/dldfcn/chol.cc b/libinterp/dldfcn/chol.cc
--- a/libinterp/dldfcn/chol.cc
+++ b/libinterp/dldfcn/chol.cc
@@ -23,30 +23,28 @@ along with Octave; see the file COPYING.
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
+#include "Matrix.h"
 #include "chol.h"
+#include "oct-string.h"
 #include "sparse-chol.h"
-#include "oct-spparms.h"
 #include "sparse-util.h"
 
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
+#include "ov.h"
 #include "ovl.h"
 
-#include "oct-string.h"
-
 template <typename CHOLT>
 static octave_value
 get_chol (const CHOLT& fact)
 {
   return octave_value (fact.chol_matrix());
 }
 
 template <typename CHOLT>
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -26,29 +26,28 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <string>
-#include <vector>
 
-#include "ov.h"
+#include "CSparse.h"
+#include "dNDArray.h"
+#include "dSparse.h"
+#include "oct-locbuf.h"
+#include "oct-sparse.h"
+
 #include "defun-dld.h"
+#include "error.h"
 #include "errwarn.h"
+#include "ovl.h"
 #include "pager.h"
-#include "ov-re-mat.h"
-
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
-
-#include "oct-sparse.h"
-#include "oct-locbuf.h"
 
 #if defined (OCTAVE_ENABLE_64)
 #  define COLAMD_NAME(name) colamd_l ## name
 #  define SYMAMD_NAME(name) symamd_l ## name
 #else
 #  define COLAMD_NAME(name) colamd ## name
 #  define SYMAMD_NAME(name) symamd ## name
 #endif
diff --git a/libinterp/dldfcn/convhulln.cc b/libinterp/dldfcn/convhulln.cc
--- a/libinterp/dldfcn/convhulln.cc
+++ b/libinterp/dldfcn/convhulln.cc
@@ -28,25 +28,29 @@ 2006-05-01 Tom Holroyd
 * add support for consistent winding in all dimensions; output is
 * guaranteed to be simplicial.
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include "oct-locbuf.h"
+#include <iostream>
+#include <limits>
+#include <string>
 
-#include "Cell.h"
+#include "Array.h"
+#include "dMatrix.h"
+#include "oct-locbuf.h"
+#include "unwind-prot.h"
+
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
-#include "ovl.h"
-#include "parse.h"
-#include "unwind-prot.h"
+#include "ov.h"
 
 #if defined (HAVE_QHULL)
 
 #  include "oct-qhull.h"
 
 #  if defined (NEED_QHULL_VERSION)
 char qh_version[] = "convhulln.oct 2007-07-24";
 #  endif
diff --git a/libinterp/dldfcn/dmperm.cc b/libinterp/dldfcn/dmperm.cc
--- a/libinterp/dldfcn/dmperm.cc
+++ b/libinterp/dldfcn/dmperm.cc
@@ -20,26 +20,27 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include "CSparse.h"
+#include "dRowVector.h"
+#include "dSparse.h"
+#include "oct-sparse.h"
+
 #include "defun-dld.h"
-#include "error.h"
 #include "errwarn.h"
+#include "ov.h"
 #include "ovl.h"
 #include "utils.h"
 
-#include "oct-sparse.h"
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
-
 #if defined (OCTAVE_ENABLE_64)
 #  define CXSPARSE_NAME(name) cs_dl ## name
 #else
 #  define CXSPARSE_NAME(name) cs_di ## name
 #endif
 
 #if defined (HAVE_CXSPARSE)
 
diff --git a/libinterp/dldfcn/fftw.cc b/libinterp/dldfcn/fftw.cc
--- a/libinterp/dldfcn/fftw.cc
+++ b/libinterp/dldfcn/fftw.cc
@@ -20,29 +20,29 @@ along with Octave; see the file COPYING.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
+#include <string>
 
 #if defined (HAVE_FFTW3_H)
 #  include <fftw3.h>
 #endif
 
 #include "oct-fftw.h"
 
 #include "defun-dld.h"
 #include "error.h"
+#include "errwarn.h"
 #include "ov.h"
 
-#include "errwarn.h"
-
 DEFUN_DLD (fftw, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{method} =} fftw ("planner")
 @deftypefnx {} {} fftw ("planner", @var{method})
 @deftypefnx {} {@var{wisdom} =} fftw ("dwisdom")
 @deftypefnx {} {} fftw ("dwisdom", @var{wisdom})
 @deftypefnx {} {} fftw ("threads", @var{nthreads})
 @deftypefnx {} {@var{nthreads} =} fftw ("threads")
diff --git a/libinterp/dldfcn/gzip.cc b/libinterp/dldfcn/gzip.cc
--- a/libinterp/dldfcn/gzip.cc
+++ b/libinterp/dldfcn/gzip.cc
@@ -47,43 +47,44 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 #include <cstring>
 
-#include <string>
+#include <functional>
 #include <list>
-#include <functional>
 #include <stdexcept>
-#include <iostream>
-#include <fstream>
+#include <string>
+
+#include "Array.h"
+#include "dir-ops.h"
+#include "file-ops.h"
+#include "file-stat.h"
+#include "glob-match.h"
+#include "oct-env.h"
+#include "str-vec.h"
+
+#include "Cell.h"
+#include "defun-dld.h"
+#include "defun-int.h"
+#include "errwarn.h"
+#include "ov.h"
+#include "ovl.h"
 
 #if defined (HAVE_BZLIB_H)
 #  include <bzlib.h>
 #endif
 
 #if defined (HAVE_ZLIB_H)
 #  include <zlib.h>
 #endif
 
-#include "Array.h"
-#include "str-vec.h"
-#include "glob-match.h"
-#include "file-ops.h"
-#include "dir-ops.h"
-#include "file-stat.h"
-#include "oct-env.h"
-
-#include "defun-dld.h"
-#include "defun-int.h"
-#include "errwarn.h"
-
 namespace octave
 {
   //! RIIA wrapper for std::FILE*
   /*! If error handling is available for failing to close the file, use
     the close method which throws.
 
     If the file has been closed, fp is set to nullptr.  Remember that
     behavior is undefined if the value of the pointer stream is used
diff --git a/libinterp/dldfcn/qr.cc b/libinterp/dldfcn/qr.cc
--- a/libinterp/dldfcn/qr.cc
+++ b/libinterp/dldfcn/qr.cc
@@ -21,23 +21,28 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <string>
+
+#include "MArray.h"
+#include "Matrix.h"
 #include "qr.h"
 #include "qrp.h"
 #include "sparse-qr.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
+#include "ov.h"
 #include "ovl.h"
 
 template <typename MT>
 static octave_value
 get_qr_r (const octave::math::qr<MT>& fact)
 {
   MT R = fact.R ();
   if (R.is_square () && fact.regular ())
diff --git a/libinterp/dldfcn/symbfact.cc b/libinterp/dldfcn/symbfact.cc
--- a/libinterp/dldfcn/symbfact.cc
+++ b/libinterp/dldfcn/symbfact.cc
@@ -20,24 +20,29 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <cmath>
+
+#include <string>
+
+#include "CSparse.h"
+#include "boolSparse.h"
+#include "dColVector.h"
+#include "dSparse.h"
 #include "oct-locbuf.h"
 #include "oct-sparse.h"
 #include "oct-spparms.h"
-#include "sparse-chol.h"
 #include "sparse-util.h"
 
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
 
 DEFUN_DLD (symbfact, args, nargout,
            doc: /* -*- texinfo -*-
diff --git a/libinterp/dldfcn/symrcm.cc b/libinterp/dldfcn/symrcm.cc
--- a/libinterp/dldfcn/symrcm.cc
+++ b/libinterp/dldfcn/symrcm.cc
@@ -49,27 +49,30 @@ bandwidth problem.
 Written by Michael Weitzel <michael.weitzel@@uni-siegen.de>
                            <weitzel@@ldknet.org>
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include "ov.h"
-#include "defun-dld.h"
-#include "error.h"
-#include "errwarn.h"
-#include "utils.h"
+#include <algorithm>
+
+#include "CSparse.h"
+#include "boolNDArray.h"
+#include "dNDArray.h"
+#include "dSparse.h"
 #include "oct-locbuf.h"
+#include "oct-sparse.h"
+#include "quit.h"
 
-#include "ov-re-mat.h"
-#include "ov-re-sparse.h"
-#include "ov-cx-sparse.h"
-#include "oct-sparse.h"
+#include "defun-dld.h"
+#include "errwarn.h"
+#include "ov.h"
+#include "ovl.h"
 
 // A node struct for the Cuthill-McKee algorithm
 struct CMK_Node
 {
   // the node's id (matrix row index)
   octave_idx_type id;
   // the node's degree
   octave_idx_type deg;
