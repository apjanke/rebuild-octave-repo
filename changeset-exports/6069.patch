# HG changeset patch
# User jwe
# Date 1161441234 0
#      Sat Oct 21 14:33:54 2006 +0000
# Node ID 67b1a61a85ce033f53123ae2e4d02348e2c73219
# Parent  c9f0839c583f86816e540888edb288e0f4afbcea
[project @ 2006-10-21 14:33:53 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-20  Bill Denney  <denney@seas.upenn.edu>
+
+	* movefile.m, copyfile.m: Handle cellstr lists of files.
+	Quote filenames in shell commands.
+
 2006-10-17  David Bateman  <dbateman@free.fr>
 
 	* pkg/pkg.m (uninstall): Allow the uninstall to proceed even if
 	the package directory is missing.
 
 2006-10-13  John W. Eaton  <jwe@octave.org>
 
 	* plot/box.m: New function.
diff --git a/scripts/miscellaneous/copyfile.m b/scripts/miscellaneous/copyfile.m
--- a/scripts/miscellaneous/copyfile.m
+++ b/scripts/miscellaneous/copyfile.m
@@ -37,17 +37,25 @@ function [status, msg, msgid] = copyfile
   msgid = "";
 
   if (nargin == 2 || nargin == 3)
     if (nargin == 3 && strcmp (force, "f"))
       cmd = "/bin/cp -rf";
     else
       cmd = "/bin/cp -r";
     endif
-    [err, msg] = system (sprintf ("%s %s %s", cmd, f1, f2));
+
+    ## Allow cell input and protect the file name(s).
+    if (iscellstr (f1))
+      f1 = sprintf("\"%s\" ", f1{:});
+    else
+      f1 = sprintf("\"%s\" ", f1);
+    endif
+
+    [err, msg] = system (sprintf ("%s %s \"%s\"", cmd, f1, f2));
     if (err < 0)
       status = false;
       msgid = "copyfile";
     endif
   else
     print_usage ();
   endif
 
diff --git a/scripts/miscellaneous/dos.m b/scripts/miscellaneous/dos.m
--- a/scripts/miscellaneous/dos.m
+++ b/scripts/miscellaneous/dos.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{status}, @var{text}] =} dos (@var{command})
 ## @deftypefnx {Function File} {[@var{status}, @var{text}] =} dos (@var{command}, "-echo")
-## Execute a system command if running under a Windos-like operating
+## Execute a system command if running under a Windows-like operating
 ## system, otherwise do nothing.  Return the exit status of the program
 ## in @var{status} and any output sent to the standard output in
 ## @var{text}.  If the optional second argument @code{"-echo"} is given,
 ## then also send the output from the command to the standard output.
 ## @seealso{unix, isunix, ispc, system}
 ## @end deftypefn
 
 ## Author: octave-forge ???
diff --git a/scripts/miscellaneous/movefile.m b/scripts/miscellaneous/movefile.m
--- a/scripts/miscellaneous/movefile.m
+++ b/scripts/miscellaneous/movefile.m
@@ -37,17 +37,25 @@ function [status, msg, msgid] = movefile
   msgid = "";
 
   if (nargin == 2 || nargin == 3)
     if (nargin == 3 && strcmp (force, "f"))
       cmd = "/bin/mv -f";
     else
       cmd = "/bin/mv";
     endif
-    [err, msg] = system (sprintf ("%s %s %s", cmd, f1, f2));
+
+    ## Allow cell input and protect the file name(s).
+    if (iscellstr (f1))
+      f1 = sprintf("\"%s\" ", f1{:});
+    else
+      f1 = sprintf("\"%s\" ", f1);
+    endif
+
+    [err, msg] = system (sprintf ("%s %s \"%s\"", cmd, f1, f2));
     if (err < 0)
       status = false;
       msgid = "movefile";
     endif
   else
     print_usage ();
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,23 @@
+2006-10-21  John W. Eaton  <jwe@octave.org>
+
+	* ov-intx.h
+	(OCTAVE_VALUE_INT_MATRIX_T::OCTAVE_TYPE_PREDICATE_FUNCTION,
+	(OCTAVE_VALUE_INT_SCALAR_T::OCTAVE_TYPE_PREDICATE_FUNCTION):
+	Function is now const, so it properly overloads method in base
+	class.
+
+	* mex.cc (mxArray_octave_value::is_uint32):
+	Call val.is_uint32_type, not val.is_int32_type.
+	(mxArray_octave_value::is_uint64):
+	Call val.is_uint64_type, not val.is_int64_type.
+	(mxArray_octave_value::is_uint8):
+	Call val.is_uint8_type, not val.is_int8_type.
+
 2006-10-20  Paul Kienzle  <pkienzle@users.sf.net>
 
 	* ov-mex-fcn.h (octave_mex_function::atexit): New function.
 	(octave_mex_function::exit_fcn_ptr): New data member.
 	* ov-mex-fcn.cc (octave_mex_function::exit_fcn_ptr): New data member.
 	(octave_mex_function::octave_mex_function): Initialize it.
 	(octave_mex_function::~octave_mex_function):
 	If we have an exit function, call it.
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -298,21 +298,21 @@ public:
   int is_single (void) const { return val.is_single_type (); }
 
   int is_sparse (void) const { return val.is_sparse_type (); }
 
   int is_struct (void) const { return val.is_map (); }
 
   int is_uint16 (void) const { return val.is_uint16_type (); }
 
-  int is_uint32 (void) const { return val.is_int32_type (); }
-
-  int is_uint64 (void) const { return val.is_int64_type (); }
-
-  int is_uint8 (void) const { return val.is_int8_type (); }
+  int is_uint32 (void) const { return val.is_uint32_type (); }
+
+  int is_uint64 (void) const { return val.is_uint64_type (); }
+
+  int is_uint8 (void) const { return val.is_uint8_type (); }
 
   int is_range (void) const { return val.is_range (); }
 
   int is_real_type (void) const { return val.is_real_type (); }
 
   int is_logical_scalar_true (void) const
   {
     return (is_logical_scalar () && val.is_true ());
diff --git a/src/ov-intx.h b/src/ov-intx.h
--- a/src/ov-intx.h
+++ b/src/ov-intx.h
@@ -53,17 +53,17 @@ public:
   ~OCTAVE_VALUE_INT_MATRIX_T (void) { }
 
   octave_base_value *clone (void) const
     { return new OCTAVE_VALUE_INT_MATRIX_T (*this); }
 
   octave_base_value *empty_clone (void) const
     { return new OCTAVE_VALUE_INT_MATRIX_T (); }
 
-  bool OCTAVE_TYPE_PREDICATE_FUNCTION (void) { return true; }
+  bool OCTAVE_TYPE_PREDICATE_FUNCTION (void) const { return true; }
 
   int8NDArray
   int8_array_value (void) const { return int8NDArray (matrix); }
 
   int16NDArray
   int16_array_value (void) const { return int16NDArray (matrix); }
 
   int32NDArray
@@ -232,17 +232,17 @@ public:
 	     (OCTAVE_VALUE_INT_NDARRAY_EXTRACTOR_FUNCTION ())); 
 
 	  retval = tmp.do_index_op (idx, resize_ok);
 	}
 
       return retval;
     }
 
-  bool OCTAVE_TYPE_PREDICATE_FUNCTION (void) { return true; }
+  bool OCTAVE_TYPE_PREDICATE_FUNCTION (void) const { return true; }
 
   octave_int8
   int8_scalar_value (void) const { return octave_int8 (scalar); }
 
   octave_int16
   int16_scalar_value (void) const { return octave_int16 (scalar); }
 
   octave_int32
