# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1364788486 14400
#      Sun Mar 31 23:54:46 2013 -0400
# Node ID eeedbc7c0740fe06bab5ea7f8bf999551f78ad08
# Parent  24e75566823747ed8a3a0917dee61b34092c4830
make command window text black on white background for Windows systems

* QWinTerminalImpl.cpp (QConsolePrivate::QConsolePrivate): Set
m_backgroundColor to Qt::white instead of Qt::black.
(QWinTerminalImpl::viewPaintEvent): Set Pen and Brush to Qt::black
instead of Qt::white.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -222,17 +222,17 @@ QConsolePrivate::QConsolePrivate (QWinTe
 
   wchar_t titleBuf[260];
   GetConsoleTitleW (titleBuf, sizeof (titleBuf));
   q->setWindowTitle (QString::fromWCharArray (titleBuf));
 
   m_font.setFamily ("Lucida Console");
   m_font.setPointSize (9);
   m_font.setStyleHint (QFont::TypeWriter);
-  m_backgroundColor = Qt::black;
+  m_backgroundColor = Qt::white;
 
   m_buffer = m_tmpBuffer = 0;
 
   m_consoleView = new QConsoleView (parent);
   m_scrollBar = new QScrollBar (Qt::Vertical, parent);
 
   QHBoxLayout* l = new QHBoxLayout (parent);
   l->setContentsMargins (0, 0, 0, 0);
@@ -782,18 +782,18 @@ void QWinTerminalImpl::viewPaintEvent (Q
                     }
                   x += (s.length () * cw);
                   s.clear ();
                   hasChar = false;
                 }
               // Update current pen and store current attributes
               // FIXME: what about background?
               attr = (ci->Attributes & 0x00ff);
-              p.setPen (d->m_colors[attr & 0x000f]);
-              p.setBrush (d->m_colors[(attr >> 4) & 0x000f]);
+              p.setPen (Qt::black);
+              p.setBrush (Qt::black);
             }
 
           // Append current character to the string buffer
           s.append (ci->Char.UnicodeChar);
           if (ci->Char.UnicodeChar != L' ')
             hasChar = true;
         }
 
