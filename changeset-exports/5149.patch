# HG changeset patch
# User jwe
# Date 1108763964 0
#      Fri Feb 18 21:59:24 2005 +0000
# Node ID 8b7b4ffab39c66d02ccaa980408e024f28cf7bc9
# Parent  9eab94f5fadf158c33e1634aaa079f762c5605ae
[project @ 2005-02-18 21:59:24 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2005-02-18  John W. Eaton  <jwe@octave.org>
+
+	* file-ops.cc (file_ops::canonicalize_file_name) [HAVE_RESOLVEPATH]:
+	Pass current directory to octave_env::make_absolute.
+	Save value returned from octave_env::make_absolute in local var.
+	Pass const char*, not std::string as first arg of resolvepath.
+	Provide decl for resolved_len.
+
 2005-02-18  John W. Eaton  <jwe@octave.org>
 
 	* Array.cc (Array<T>::permute): Allow permutation vector longer
 	than number of dimenensions of permuted matrix.
 
 	* Array.cc (Array<T>::permute): Use zero-based indexing for perm_vec.
 	* Array-util.cc (calc_permutated_idx): Likewise.
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -350,27 +350,29 @@ extern int errno;
       __set_errno (ENOENT);
       return retval;
     }
 
   // All known hosts with resolvepath (e.g. Solaris 7) don't turn
   // relative names into absolute ones, so prepend the working
   // directory if the path is not absolute.
 
-  name = octave_env::make_absolute (name);
+  std::string absolute_name
+    = octave_env::make_absolute (name, octave_env::getcwd ());
 
-  size_t resolved_size = name.length ();
+  size_t resolved_size = absolute_name.length ();
 
   while (1)
     {
       resolved_size = 2 * resolved_size + 1;
 
       OCTAVE_LOCAL_BUFFER (char, resolved, resolved_size);
 
-      resolved_len = ::resolvepath (name, resolved, resolved_size);
+      int resolved_len
+	= ::resolvepath (absolute_name.c_str (), resolved, resolved_size);
 
       if (resolved_len < 0)
 	break;
 
       if (resolved_len < resolved_size)
 	{
 	  retval = resolved;
 	  break;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,15 +1,20 @@
 2005-02-18  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (do_permute): Use zero-based indexing for permutation
 	vector that is passed to octave_value::permute method.
 	Allow permutation vector longer	than number of dimenensions of
 	permuted matrix.
 
+2005-02-17  John W. Eaton  <jwe@octave.org>
+
+	* version.h (OCTAVE_API_VERSION): Now 2.1.64-cvs.
+	(OCTAVE_API_VERSION): Now api-v12-cvs.
+
 2005-02-16  John W. Eaton  <jwe@octave.org>
 
 	* ov-base-mat.h (octave_base_matrix::squeeze): Explicitly convert
 	result of matrix.squeeze() to MT.
 
 2005-02-15  John W. Eaton  <jwe@octave.org>
 
 	* dirfns.cc (deftypefn): Don't print to octave_stdout if nargout > 0.
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -18,19 +18,19 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
-#define OCTAVE_VERSION "2.1.64"
+#define OCTAVE_VERSION "2.1.64-cvs"
 
-#define OCTAVE_API_VERSION "api-v12"
+#define OCTAVE_API_VERSION "api-v12-cvs"
 
 #define OCTAVE_COPYRIGHT \
   "Copyright (C) 2004 John W. Eaton."
 
 #define OCTAVE_NAME_AND_VERSION \
   "GNU Octave, version " OCTAVE_VERSION " (" OCTAVE_CANONICAL_HOST_TYPE ")"
 
 #define OCTAVE_COPYING_STATEMENT \
