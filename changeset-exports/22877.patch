# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1481315688 18000
#      Fri Dec 09 15:34:48 2016 -0500
# Node ID 3c0e70e2f51cc30a3e0570b9de1bfc8a32f4f57e
# Parent  763ec7cbee9ee414d6bb0f90c48e8083362d5746
# Parent  233fb529184b1b083c51e599d341928abe2caf06
maint: Periodic merge of stable to default.

diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -796,18 +796,17 @@ namespace octave
     catch (const octave::interrupt_exception&)
       {
         recover_from_exception ();
       }
     catch (const octave::execution_exception&)
       {
         recover_from_exception ();
 
-        std::cerr << "error: unhandled execution exception -- eval failed"
-                  << std::endl;
+        parse_status = 1;
       }
 
     return parse_status;
   }
 
   void interpreter::execute_command_line_file (const std::string& fname)
   {
     octave::unwind_protect frame;
diff --git a/scripts/general/display.m b/scripts/general/display.m
--- a/scripts/general/display.m
+++ b/scripts/general/display.m
@@ -44,18 +44,35 @@
 
 function display (obj)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   ## Only reason we got here is that there was no overloaded display function.
-  ## This may mean it is a built-in class.
-  str = disp (obj);
-  if (isempty (strfind (str, "<class ")))
-    disp (str);
+  ## If obj is truly an instance of a class then there is nothing to be done.
+  ## However, if obj is really a built-in like 'double' then we can display it.
+  if (isobject (obj))
+    error ('display: not defined for class "%s"', class (obj));
+  endif
+
+  varname = inputname (1);
+  if (! isempty (varname))
+    evalin ("caller", varname);
   else
-    error ('display: not defined for class "%s"', class (obj));
+    disp (obj);
   endif
 
 endfunction
 
+
+%!test
+%! str = evalc ("x = 1.1; display (x)");
+%! assert (str, "x =  1.1000\n");
+
+%!test
+%! str = evalc ("display (1.1)");
+%! assert (str, " 1.1000\n"); 
+
+## Test input validation
+%!error display ()
+%!error display (1,2)
diff --git a/test/publish/publish.tst b/test/publish/publish.tst
--- a/test/publish/publish.tst
+++ b/test/publish/publish.tst
@@ -11,54 +11,67 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## publish
+## test for publish
 
 %!test
 %! visibility = get (0, "defaultfigurevisible");
 %! toolkit = graphics_toolkit ();
 %! unwind_protect
-%!   set (0, "defaultfigurevisible", "off");
-%!   if (ispc ())
-%!     graphics_toolkit ("gnuplot");
+%!   if (ispc () || ! __have_feature__ ("OSMESA"))
+%!     try
+%!       graphics_toolkit ("gnuplot");
+%!     catch
+%!       ## The system doesn't support OSMESA or gnuplot for drawing hidden
+%!       ## figures.  Just return and have test marked as passing.
+%!       return;
+%!     end_try_catch
 %!   endif
-%!   cases = dir ("test_script*.m");
-%!   cases = strsplit (strrep ([cases.name], ".m", ".m\n"));
-%!   for i = 1:length(cases)-1
-%!     publish (cases{i});
+%!   set (0, "defaultfigurevisible", "off");
+%!
+%!   scripts = dir ("test_script*.m");
+%!   for fname = {scripts.name}
+%!     publish (fname{1});
 %!   endfor
 %!   confirm_recursive_rmdir (false, "local");
 %!   rmdir ("html", "s");
 %! unwind_protect_cleanup
 %!   set (0, "defaultfigurevisible", visibility);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
-## grabcode
+## test for grabcode
 
 %!test
 %! visibility = get (0, "defaultfigurevisible");
 %! toolkit = graphics_toolkit ();
 %! unwind_protect
+%!   if (ispc () || ! __have_feature__ ("OSMESA"))
+%!     try
+%!       graphics_toolkit ("gnuplot");
+%!     catch
+%!       ## The system doesn't support OSMESA or gnuplot for drawing hidden
+%!       ## figures.  Just return and have test marked as passing.
+%!       return;
+%!     end_try_catch
+%!   endif
 %!   set (0, "defaultfigurevisible", "off");
-%!   if (ispc ())
-%!     graphics_toolkit ("gnuplot");
-%!   endif
+%!
 %!   publish ("test_script.m");
 %!   str1 = fileread ("test_script.m");
 %!   str2 = grabcode ("html/test_script.html");
 %!   confirm_recursive_rmdir (false, "local");
 %!   rmdir ("html", "s");
-%!   # Canonicalize strings
+%!   ## Canonicalize strings
 %!   str1 = strjoin (deblank (strsplit (str1, "\n")), "\n");
 %!   str2 = strjoin (deblank (strsplit (str2, "\n")), "\n");
 %!   assert (hash ("md5", str1), hash ("md5", str2));
 %! unwind_protect_cleanup
 %!   set (0, "defaultfigurevisible", visibility);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
