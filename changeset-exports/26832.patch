# HG changeset patch
# User Rik <rik@octave.org>
# Date 1551662122 28800
#      Sun Mar 03 17:15:22 2019 -0800
# Node ID ca40628fff391cac4b1b36f28ce3fc680a05ace8
# Parent  e255897f353daca3f5216f81c99bc3ef410dbafb
legend.m: Update legend when target axes colormap changes (bug #54757).

* legend.m: When creating legend axes object, inherit colormap from target axes
if it is not the default colormap from the figure.  Add listener on target axes
colormap property that calls cb_legend_colormap_update().
* legend.m (cb_legend_colormap_update): New function that copies colormap from
target axes to legend axes object.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -605,16 +605,21 @@ function [hleg, hleg_obj, hplot, labels]
 
           ## Inherit fontsize from current axis
           ## "fontunits" should be first because it affects interpretation
           ## of "fontsize" property.
           [fontunits, fontsz] = get (ca(1), {"fontunits", "fontsize"}){:};
           fontsz *= 0.90;  # Reduce legend fontsize to 90% of axes fontsize
           set (hlegend, {"fontunits", "fontsize"}, {fontunits, fontsz});
           set (hlegend, "fontunits", "points");  # legend always works in pts.
+          ## Also inherit colormap from axes if it is different than figure
+          cax_cmap = get (cax, "colormap");
+          if (! isequal (cax_cmap, get (hpar, "colormap")))
+            set (hlegend, "colormap", cax_cmap);
+          endif
           old_hplots = [];
         else
           ## Re-use existing legend.
           addprops = false;
           axes (hlegend);
           delete (get (hlegend, "children"));
           ## Hack: get list of hplots for which addlistener has been called.
           old_hplots = get (hlegend, "deletefcn"){6};
@@ -1062,16 +1067,17 @@ function [hleg, hleg_obj, hplot, labels]
           set (hlegend, "location", [location "outside"],
                         "orientation", orientation, "textposition", textpos);
         else
           set (hlegend, "location", location, "orientation", orientation,
                         "textposition", textpos);
         endif
 
         if (addprops)
+          addlistener (cax, "colormap", {@cb_legend_colormap_update, hlegend});
           addlistener (hlegend, "edgecolor", @cb_legend_text_update);
           addlistener (hlegend, "fontangle", @cb_legend_text_update);
           addlistener (hlegend, "fontname", @cb_legend_text_update);
           addlistener (hlegend, "fontweight", @cb_legend_text_update);
           addlistener (hlegend, "textcolor", @cb_legend_text_update);
           ## Properties which could change size of box, such as fontsize,
           ## require legend to be redrawn.
           ## FIXME: fontsize is changed by print.m function during the
@@ -1117,16 +1123,21 @@ function [hleg, hleg_obj, hplot, labels]
     hleg = hlegend;
     hleg_obj = hobjects;
     hplot = hplots;
     labels = text_strings;
   endif
 
 endfunction
 
+## Colormap of the base axes has changed.
+function cb_legend_colormap_update (cax, ~, hlegend)
+  set (hlegend, "colormap", get (cax, "colormap"));
+endfunction
+
 ## A non-text property of legend has changed requiring an update.
 function cb_legend_update (hleg, ~)
   persistent recursive = false;
 
   if (! recursive)
     recursive = true;
     unwind_protect
       hax = getappdata (hleg, "__axes_handle__");
