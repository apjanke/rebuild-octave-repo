# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210000853 14400
#      Mon May 05 11:20:53 2008 -0400
# Branch release-3-0-x
# Node ID 20aba78035b3e0bbf3486664f783f9639b663240
# Parent  9fd25188cfe1b9163477d212007b61ee2e88e7fa
Alias setenv to putenv. Allow single arg to putenv

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-05-05  David Bateman  <dbateman@free.fr>
+
+	* sysdep.cc (Fputenv): Allow single arg. Alias to setenv.
+
 2008-05-04  John W. Eaton  <jwe@octave.org>
 
 	* ov-fcn-handle.cc (Ffunctions): Pass octave_value object instead
 	of Cell in structure field assignment.
 
 2008-04-23  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__qp__.cc (qp): Avoid bounds error when removing
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -618,44 +618,47 @@ returns a string containing the value of
     print_usage ();
 
   return retval;
 }
 
 DEFUN (putenv, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} putenv (@var{var}, @var{value})\n\
+@deftypefnx {Built-in Function} {} setenv (@var{var}, @var{value})\n\
 Set the value of the environment variable @var{var} to @var{value}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
-  if (nargin == 2)
+  if (nargin == 2 || nargin == 1)
     {
       std::string var = args(0).string_value (); 
 
       if (! error_state)
 	{
-	  std::string val = args(1).string_value (); 
+	  std::string val = (nargin == 2
+			     ? args(1).string_value () : std::string ()); 
 
 	  if (! error_state)
 	    octave_env::putenv (var, val);
 	  else
 	    error ("putenv: second argument should be a string");
 	}
       else
 	error ("putenv: first argument should be a string");
     }
   else
     print_usage ();
 
   return retval;
 }
+DEFALIAS (setenv, putenv);
 
 // FIXME -- perhaps kbhit should also be able to print a prompt?
 
 DEFUN (kbhit, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} kbhit ()\n\
 Read a single keystroke from the keyboard. If called with one\n\
 argument, don't wait for a keypress.  For example,\n\
