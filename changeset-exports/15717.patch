# HG changeset patch
# User Rik <rik@octave.org>
# Date 1354516567 28800
#      Sun Dec 02 22:36:07 2012 -0800
# Node ID 3d23579696277c99a6f38ffc012baf8f2da053d0
# Parent  e8a4b99f8bd8c831700176150451659246de388f
NTSC images can only be of class double.

* ntsc2rgb.m: Validate input is only of class double.  Remove code
for conversion of integer input.  Remove FIXME note.

* rgb2ntsc.m: Document that NTSC output is always of class double.
Convert inputs of class single to double.  Remove FIXME note.

diff --git a/scripts/image/ntsc2rgb.m b/scripts/image/ntsc2rgb.m
--- a/scripts/image/ntsc2rgb.m
+++ b/scripts/image/ntsc2rgb.m
@@ -40,32 +40,25 @@
 ## Adapted-By: jwe
 
 function rgb = ntsc2rgb (yiq)
 
   if (nargin != 1)
     print_usage ();
   endif
 
-  cls = class (yiq);
-  if (! any (strcmp (cls, {"uint8", "uint16", "single", "double"})))
-    error ("ntsc2rgb: invalid data type '%s'", cls);
+  if (! isa (yiq, "double"))
+    error ("ntsc2rgb: YIQ must be of type double");
   endif
 
   ## If we have an image convert it into a color map.
   if (ismatrix (yiq) && ndims (yiq) == 3)
     is_image = true;
     sz = size (yiq);
     yiq = [yiq(:,:,1)(:), yiq(:,:,2)(:), yiq(:,:,3)(:)];
-    ## Convert to a double image.
-    if (isinteger (yiq))
-      low = double (intmin (cls));
-      high = double (intmax (cls));
-      yiq = (double (yiq) - low) / (high - low);
-    endif
   else
     is_image = false;
   endif
 
   if (! isreal (yiq) || columns (yiq) != 3 || issparse (yiq))
     error ("ntsc2rgb: input must be a matrix of size Nx3 or NxMx3");
   endif
 
@@ -75,18 +68,16 @@ function rgb = ntsc2rgb (yiq)
   ## x == ntsc2rgb (rgb2ntsc (x)) rather than maintaining strict compatibility
   ## with Matlab.
   trans = [ 1.0,      1.0,      1.0;
             0.95617, -0.27269, -1.10374;
             0.62143, -0.64681,  1.70062 ];
 
   rgb = yiq * trans;
 
-  ## FIXME: ntsc2rgb does not preserve class of image.
-  ##        Should it also convert back to uint8, uint16 for integer images?
   ## If input was an image, convert it back into one.
   if (is_image)
     rgb = reshape (rgb, sz);
   endif
 
 endfunction
 
 
@@ -101,11 +92,11 @@ endfunction
 
 %!test
 %! rgb_img = rand (64, 64, 3);
 %! assert (ntsc2rgb (rgb2ntsc (rgb_img)), rgb_img, 1e-3);
 
 %% Test input validation
 %!error ntsc2rgb ()
 %!error ntsc2rgb (1,2)
-%!error <invalid data type 'cell'> ntsc2rgb ({1})
+%!error <YIQ must be of type double> ntsc2rgb (uint8 (1))
 %!error <must be a matrix of size Nx3 or NxMx3> ntsc2rgb (ones (2,2))
 
diff --git a/scripts/image/rgb2ntsc.m b/scripts/image/rgb2ntsc.m
--- a/scripts/image/rgb2ntsc.m
+++ b/scripts/image/rgb2ntsc.m
@@ -15,17 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{yiq_map} =} rgb2ntsc (@var{rgb_map})
 ## @deftypefnx {Function File} {@var{yiq_img} =} rgb2ntsc (@var{rgb_img})
 ## Transform a colormap or image from red-green-blue (RGB) color space to
-## luminance-chrominance (NTSC) space.
+## luminance-chrominance (NTSC) space.  The input may be of class uint8,
+## uint16, single, or double.  The output is of class double.
 ##
 ## Implementation Note:
 ## The reference matrix for the transformation is
 ##
 ## @example
 ## @group
 ## /Y\     0.299  0.587  0.114  /R\ 
 ## |I|  =  0.596 -0.274 -0.322  |G| 
@@ -62,16 +63,18 @@ function yiq = rgb2ntsc (rgb)
     is_image = true;
     sz = size (rgb);
     rgb = [rgb(:,:,1)(:), rgb(:,:,2)(:), rgb(:,:,3)(:)];
     ## Convert to a double image.
     if (isinteger (rgb))
       low = double (intmin (cls));
       high = double (intmax (cls));
       rgb = (double (rgb) - low) / (high - low);
+    elseif (isa (rgb, "single"))
+      rgb = double (rgb);
     endif
   else
     is_image = false;
   endif
 
   if (! isreal (rgb) || columns (rgb) != 3 || issparse (rgb))
     error ("rgb2ntsc: input must be a matrix of size Nx3 or NxMx3");
   endif
@@ -81,18 +84,16 @@ function yiq = rgb2ntsc (rgb)
   ## conversion.
   trans = [ 0.299,  0.596,  0.211;
             0.587, -0.274, -0.523;
             0.114, -0.322,  0.312 ];
 
   ## Convert data. 
   yiq = rgb * trans;
 
-  ## FIXME: rgb2ntsc does not preserve class of image.
-  ##        Should it also convert back to uint8, uint16 for integer images?
   ## If input was an image, convert it back into one.
   if (is_image)
     yiq = reshape (yiq, sz);
   endif
 
 endfunction
 
 
