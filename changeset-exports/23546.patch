# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1495974067 -7200
#      Sun May 28 14:21:07 2017 +0200
# Node ID 06805aabbdd123e04d61b86edc71d4adfe720d8a
# Parent  7f2fc79d07ad11dcadba107973a26ec590b4dc79
Draw 2D axes primitives in the children stack order (bug #50750)

* gl-render.h/cc: (opengl_renderer::draw_axes_grids): new method to group all
  grids rendering
  (opengl_renderer::draw_axes): for 2D axes disable DEPTH_TEST. Draw grids
  before/after primitives depending on the "layer" property
* gl2ps-print.cc (gl2ps_renderer::draw): if all axes are 2D disable primitive
  sorting

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1907,16 +1907,38 @@ namespace octave
 
         gh_manager::get_object (props.get_zlabel ()).set ("visible", "on");
       }
     else
       gh_manager::get_object (props.get_zlabel ()).set ("visible", "off");
   }
 
   void
+  opengl_renderer::draw_axes_grids (const axes::properties& props)
+  {
+    // Disable line smoothing for axes
+    GLboolean antialias;
+    glGetBooleanv (GL_LINE_SMOOTH, &antialias);
+    if (antialias == GL_TRUE)
+      glDisable (GL_LINE_SMOOTH);
+
+    set_linecap ("square");
+    set_linewidth (props.get_linewidth ());
+    set_font (props);
+    set_interpreter (props.get_ticklabelinterpreter ());
+
+    draw_axes_x_grid (props);
+    draw_axes_y_grid (props);
+    draw_axes_z_grid (props);
+
+    if (antialias == GL_TRUE)
+      glEnable (GL_LINE_SMOOTH);
+  }
+
+  void
   opengl_renderer::draw_all_lights (const base_properties& props,
                                     std::list<graphics_object>& obj_list)
   {
 #if defined (HAVE_OPENGL)
     Matrix children = props.get_all_children ();
 
     for (octave_idx_type i = children.numel () - 1; i >= 0; i--)
       {
@@ -2021,18 +2043,16 @@ namespace octave
     for (it = obj_list.begin (); it != obj_list.end (); it++)
       {
         graphics_object go = (*it);
 
         set_clipping (go.get_properties ().is_clipping ());
         draw (go);
       }
 
-    glEnable (GL_DEPTH_TEST);
-
     set_clipping (false);
 
     // FIXME: finalize rendering (transparency processing)
     // FIXME: draw zoom box, if needed
 
 #else
 
     octave_unused_parameter (props);
@@ -2067,46 +2087,39 @@ namespace octave
         || x_min < -floatmax || y_min < -floatmax || z_min < -floatmax)
       {
         warning ("opengl_renderer: data values greater than float capacity.  (1) Scale data, or (2) Use gnuplot");
         return;
       }
 
     setup_opengl_transformation (props);
 
-    // Disable line smoothing for axes
-    GLboolean antialias;
-    glGetBooleanv (GL_LINE_SMOOTH, &antialias);
-    if (antialias == GL_TRUE)
-      glDisable (GL_LINE_SMOOTH);
-
-    set_font (props);
-    set_interpreter (props.get_ticklabelinterpreter ());
-    set_linecap ("square");
-    set_linewidth (props.get_linewidth ());
-
-    // draw axes object
+    // For 2D axes, draw from back to front without depth sorting
+    bool is2D = props.get_is2D ();
+    if (is2D)
+      glDisable (GL_DEPTH_TEST);
+    else
+      glEnable (GL_DEPTH_TEST);
+
     draw_axes_planes (props);
 
-    draw_axes_x_grid (props);
-    draw_axes_y_grid (props);
-    draw_axes_z_grid (props);
+    if (! is2D || props.layer_is ("bottom"))
+      draw_axes_grids (props);
 
     if (props.get_tag () != "legend" || props.get_box () != "off")
       draw_axes_boxes (props);
 
     set_linestyle ("-");  // Disable LineStipple
 
     set_clipbox (x_min, x_max, y_min, y_max, z_min, z_max);
 
-    // Re-enable line smoothing for children
-    if (antialias == GL_TRUE)
-      glEnable (GL_LINE_SMOOTH);
-
     draw_axes_children (props);
+    
+    if (is2D && props.layer_is ("top"))
+      draw_axes_grids (props);
 
 #else
 
     octave_unused_parameter (props);
 
     // This shouldn't happen because construction of opengl_renderer
     // objects is supposed to be impossible if OpenGL is not available.
 
diff --git a/libinterp/corefcn/gl-render.h b/libinterp/corefcn/gl-render.h
--- a/libinterp/corefcn/gl-render.h
+++ b/libinterp/corefcn/gl-render.h
@@ -168,16 +168,17 @@ namespace octave
     void set_normal (int bfl_mode, const NDArray& n, int j, int i);
 
     unsigned int make_marker_list (const std::string& m, double size,
                                    bool filled) const;
 
     void draw_axes_planes (const axes::properties& props);
     void draw_axes_boxes (const axes::properties& props);
 
+    void draw_axes_grids (const axes::properties& props);
     void draw_axes_x_grid (const axes::properties& props);
     void draw_axes_y_grid (const axes::properties& props);
     void draw_axes_z_grid (const axes::properties& props);
 
     void draw_axes_children (const axes::properties& props);
 
     void draw_all_lights (const base_properties& props,
                           std::list<graphics_object>& obj_list);
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -222,18 +222,20 @@ namespace octave
         GLint gl2ps_text = 0;
         if (term.find ("notxt") != std::string::npos)
           gl2ps_text = GL2PS_NO_TEXT;
 
         // Default sort order optimizes for 3D plots
         GLint gl2ps_sort = GL2PS_BSP_SORT;
 
         // For 2D plots we can use a simpler Z-depth sorting algorithm
+        // FIXME: gl2ps does not provide a way to change the sorting algorythm
+        // on a viewport basis, we thus disable sorting only if all axes are 2D
         if (term.find ("is2D") != std::string::npos)
-          gl2ps_sort = GL2PS_SIMPLE_SORT;
+          gl2ps_sort = GL2PS_NO_SORT;
 
         // Use a temporary file in case an overflow happens
         FILE *tmpf = octave_tmpfile_wrapper ();
 
         if (! tmpf)
           error ("gl2ps_renderer::draw: couldn't open temporary file for printing");
 
         // Reset buffsize, unless this is 2nd pass of a texstandalone print.
