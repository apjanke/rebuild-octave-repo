# HG changeset patch
# User Rik <rik@octave.org>
# Date 1465413279 25200
#      Wed Jun 08 12:14:39 2016 -0700
# Node ID 3ef630a564f88b608dfe2d1bfb72fd2a58ff584d
# Parent  2049e123bf7b3536425e1970d41db911e399f40e
Clean up C++ code for F__octave_link_file_dialog__.

* octave-link.cc (F__octave_link_file_dialog__): Use ovl to assign to retval in
one statement.  Avoid converting it to an octave_value and then subsequently to an
integer.  Simplify for loop body by incrementing iterator in for statement.

diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -225,46 +225,41 @@ Undocumented internal function.\n\
     = octave_link::file_dialog (filter_lst, title, filename, pathname,
                                 multi_on);
 
   nel = items_lst.size ();
 
   // If 3, then retval is filename, directory, and selected index.
   if (nel <= 3)
     {
-      int idx = 0;
       if (items_lst.front ().empty ())
-        {
-          retval(idx++) = 0;
-          retval(idx++) = 0;
-          retval(idx++) = 0;
-        }
+        retval = ovl (octave_value (0.), octave_value (0.), octave_value (0.));
       else
-        for (std::list<std::string>::iterator it = items_lst.begin ();
-             it != items_lst.end (); it++)
-          {
-            retval(idx++) = *it;
-
-            if (idx == 3)
-              retval(2) = atoi (retval(2).string_value ().c_str ());
-          }
+        {
+          int idx = 0;
+          for (std::list<std::string>::iterator it = items_lst.begin ();
+               it != items_lst.end (); it++)
+            {
+              if (idx != 2)
+                retval(idx++) = *it;
+              else
+                retval(idx++) = atoi (it->c_str ());
+            }
+        }
     }
   else
     {
       // Multiple files.
-      nel = items_lst.size () - 2;
+      nel -= 2;
       Cell items (dim_vector (1, nel));
 
       std::list<std::string>::iterator it = items_lst.begin ();
 
-      for (int idx = 0; idx < nel; idx++)
-        {
-          items.xelem (idx) = *it;
-          it++;
-        }
+      for (int idx = 0; idx < nel; idx++, it++)
+        items.xelem (idx) = *it;
 
       retval = ovl (items, *it++, atoi (it->c_str ()));
     }
 
   return retval;
 }
 
 DEFUN (__octave_link_list_dialog__, args, ,
