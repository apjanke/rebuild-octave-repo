# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1376160714 -7200
#      Sat Aug 10 20:51:54 2013 +0200
# Node ID 3d1205d5771ef7d99c39b508d86908ae16ddf813
# Parent  4407606d093967c91169a01a1359635aa576245d
make history widget respect history_control settings

* input.cc(octave_gets): don't call octave_link::append_history because
  it is now called via command_history::add
* oct-hist.cc(edit_history_add_hist,octave_history_write_timestamp): don't call
  octave_link::append_history because it is now called via command_history::add
* cmd-hist.cc: include octave-link.h,
  (gnu_history::do_add): call octave_link::append_history only if
  octave_add_history really has added something
* liboctave/Makefile.am: add libinterp/corefcn as include path as cmd-hist.cc
  needs to include octave-link.h

diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -266,22 +266,17 @@ octave_base_reader::octave_gets (bool& e
     {
       retval = last_debugging_command;
       history_skip_auto_repeated_debugging_command = true;
     }
 
   if (retval != "\n")
     {
       if (! history_skip_auto_repeated_debugging_command)
-        {
-          command_history::add (retval);
-
-          if (! command_history::ignoring_entries ())
-            octave_link::append_history (retval);
-        }
+        command_history::add (retval);
 
       octave_diary << retval;
 
       if (retval[retval.length () - 1] != '\n')
         octave_diary << "\n";
 
       do_input_echo (retval);
     }
diff --git a/libinterp/corefcn/oct-hist.cc b/libinterp/corefcn/oct-hist.cc
--- a/libinterp/corefcn/oct-hist.cc
+++ b/libinterp/corefcn/oct-hist.cc
@@ -323,20 +323,17 @@ edit_history_add_hist (const std::string
       std::string tmp = line;
 
       int len = tmp.length ();
 
       if (len > 0 && tmp[len-1] == '\n')
         tmp.resize (len - 1);
 
       if (! tmp.empty ())
-        {
-          command_history::add (tmp);
-          octave_link::append_history (tmp);
-        }
+        command_history::add (tmp);
     }
 }
 
 static bool
 get_int_arg (const octave_value& arg, int& val)
 {
   bool ok = true;
 
@@ -575,20 +572,17 @@ initialize_history (bool read_history_fi
 void
 octave_history_write_timestamp (void)
 {
   octave_localtime now;
 
   std::string timestamp = now.strftime (Vhistory_timestamp_format_string);
 
   if (! timestamp.empty ())
-    {
-      command_history::add (timestamp); 
-      octave_link::append_history (timestamp);
-   }
+    command_history::add (timestamp);
 }
 
 DEFUN (edit_history, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} edit_history\n\
 @deftypefnx {Command} {} edit_history @var{cmd_number}\n\
 @deftypefnx {Command} {} edit_history @var{first} @var{last}\n\
 Edit the history list using the editor named by the variable\n\
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -29,17 +29,18 @@ SUBDIRS = cruft
 ## Search local directories before those specified by the user.
 AM_CPPFLAGS = \
   -I$(srcdir)/array \
   -I$(srcdir)/cruft/misc \
   -Inumeric -I$(srcdir)/numeric \
   -Ioperators -I$(srcdir)/operators \
   -I$(srcdir)/system \
   -I$(srcdir)/util \
-  -I$(top_builddir)/libgnu -I$(top_srcdir)/libgnu
+  -I$(top_builddir)/libgnu -I$(top_srcdir)/libgnu \
+  -I$(top_srcdir)/libinterp/corefcn
 
 AM_CFLAGS += $(WARN_CFLAGS)
 
 AM_CXXFLAGS += $(WARN_CXXFLAGS)
 
 octlib_LTLIBRARIES = liboctave.la
 
 EXTRA_DIST =
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -43,16 +43,17 @@ command_history *command_history::instan
 #include <cstdlib>
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <fcntl.h>
 
 #include "oct-rl-hist.h"
+#include "octave-link.h"
 
 #include "file-stat.h"
 
 class
 gnu_history : public command_history
 {
 public:
 
@@ -194,17 +195,22 @@ gnu_history::do_add (const std::string& 
         return;
      
       // Strip newline before adding to list
       std::string stmp = s;
       int stmp_len = stmp.length ();
       if (stmp[stmp_len - 1] == '\n')
         stmp.resize (stmp_len - 1);
 
-      lines_this_session += ::octave_add_history (stmp.c_str (), history_control);
+      int added = ::octave_add_history (stmp.c_str (), history_control);
+      if (added > 0)
+        {
+          lines_this_session += added;
+          octave_link::append_history (stmp.c_str ());
+        }
     }
 }
 
 void
 gnu_history::do_remove (int n)
 {
   ::octave_remove_history (n);
 }
