# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1232089995 -3600
#      Fri Jan 16 08:13:15 2009 +0100
# Branch release-3-0-x
# Node ID bacb8412989643828b3c579fc7a9bd934a323e7f
# Parent  304855b33b67af52e6d4049167d22e29faebd21f
style fixes

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2008-12-18  Daniel J Sebald <daniel.sebald@ieee.org>
+
+	* set/unique.m: Only check for options if nargin > 1.
+
 2008-07-10  Jaroslav Hajek <highegg@gmail.com>
 
 	* set/unique.m: Implement 'first' and 'last', some simplifications.
 	* set/union.m: Implement output indices.
 	* set/intersect.m: Implement 'rows'.
 	* set/setdiff.m: Implement output indices.
 	* set/setxor.m: Implement 'rows' and output indices.
 	Add tests and adjust docs in all of the above.
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -44,17 +44,17 @@ function [y, i, j] = unique (x, varargin
   if (nargin < 1)
     print_usage ();
   endif
 
   if (nargin > 1)
 
     ## parse options
     if (iscellstr (varargin))
-      varargin = unique(varargin);
+      varargin = unique (varargin);
       optfirst = strmatch ('first', varargin) > 0;
       optlast = strmatch ('last', varargin) > 0;
       optrows = strmatch ('rows', varargin) > 0 && size (x, 2) > 1;
       if (optfirst && optlast)
         error ("unique: cannot specify both 'last' and 'first'.");
       elseif (optfirst + optlast + optrows != nargin-1)
         error ("unique: invalid option.");
       endif
@@ -103,17 +103,17 @@ function [y, i, j] = unique (x, varargin
       match = (y(1:n-1) == y(2:n));
     endif
     idx = find (match);
     y(idx) = [];
   endif
 
   if (nargout >= 3)
     j = i;
-    j(i) = cumsum ([1 !match]);
+    j(i) = cumsum ([1, !match]);
   endif
 
   if (optfirst)
     i(idx+1) = [];
   else
     i(idx) = [];
   endif
 
