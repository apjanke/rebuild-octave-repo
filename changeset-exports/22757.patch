# HG changeset patch
# User Rik <rik@octave.org>
# Date 1479099040 28800
#      Sun Nov 13 20:50:40 2016 -0800
# Node ID 90281ac10fb42f0685728c7c425f3d6438b86ea7
# Parent  a50b221b8e9f3b71e20f7716bcd354738609fece
maint: Trim trailing whitespace from files.

* Figure.cc, pkg.m4: Trim trailing whitespace from files.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -88,17 +88,17 @@ namespace QtHandles
     gh_manager::auto_lock lock;
 
     Matrix kids = fp.get_all_children ();
 
     for (int i = 0; i < kids.numel (); i++)
       {
         graphics_object go (gh_manager::get_object (kids(i)));
 
-        if (go && go.isa ("uimenu") && 
+        if (go && go.isa ("uimenu") &&
             go.get ("visible").string_value () == "on")
           return true;
       }
 
     return false;
   }
 
   static QRect
@@ -530,35 +530,35 @@ namespace QtHandles
 
         updateBoundingBox (false);
       }
   }
 
   void
   Figure::showMenuBar (bool visible, int h1)
   {
-    // Get the height before and after toggling the visibility of builtin menus 
+    // Get the height before and after toggling the visibility of builtin menus
     if (h1 <= 0)
       h1 = m_menuBar->sizeHint ().height ();
 
     foreach (QAction* a, m_menuBar->actions ())
       if (a->objectName () == "builtinMenu")
         a->setVisible (visible);
 
     int h2 = m_menuBar->sizeHint ().height ();
 
     // Keep the menubar visible if it contains custom menus
     if (! visible)
       visible = hasUiMenuChildren (properties<figure> ());
-    
+
     if (m_menuBar->isVisible () ^ visible)
       {
         int dy = qMax (h1, h2);
         QRect r = qWidget<QWidget> ()->geometry ();
-        
+
         if (! visible)
           r.adjust (0, dy, 0, 0);
         else
           r.adjust (0, -dy, 0, 0);
 
         m_blockUpdates = true;
         qWidget<QWidget> ()->setGeometry (r);
         m_menuBar->setVisible (visible);
@@ -569,17 +569,17 @@ namespace QtHandles
 
   void
   Figure::updateMenuBar (int height)
   {
     gh_manager::auto_lock lock;
     graphics_object go = object ();
 
     if (go.valid_object ())
-      showMenuBar (Utils::properties<figure> (go).menubar_is ("figure"), 
+      showMenuBar (Utils::properties<figure> (go).menubar_is ("figure"),
                    height);
   }
 
   void
   Figure::updateStatusBar (ColumnVector pt)
   {
     if (! m_statusBar->isHidden ())
       m_statusBar->showMessage (QString ("(%1, %2)")
diff --git a/m4/pkg.m4 b/m4/pkg.m4
--- a/m4/pkg.m4
+++ b/m4/pkg.m4
@@ -1,10 +1,10 @@
 # pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
-# 
+#
 # Copyright Â© 2004 Scott James Remnant <scott@netsplit.com>.
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful, but
@@ -115,17 +115,17 @@ AC_MSG_CHECKING([for $1])
 m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
 and $1[]_LIBS to avoid the need to call pkg-config.
 See the pkg-config man page for more details.])
 
 if test $pkg_failed = yes; then
         _PKG_SHORT_ERRORS_SUPPORTED
         if test $_pkg_short_errors_supported = yes; then
 	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --errors-to-stdout --print-errors "$2"`
-        else 
+        else
 	        $1[]_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "$2"`
         fi
 	# Put the nasty error message in config.log where it belongs
 	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
 
 	ifelse([$4], , [AC_MSG_ERROR(dnl
 [Package requirements ($2) were not met:
 
