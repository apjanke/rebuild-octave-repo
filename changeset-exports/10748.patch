# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1277367383 -7200
#      Thu Jun 24 10:16:23 2010 +0200
# Node ID d699a6c63263d9471568d131d427deab2bd32e59
# Parent  58c1b54025882fa78a74e5a30b3ce639ba8c4df4
# Parent  570f30a48732e9c2b151af22fdd32713fe582bfd
merge with main repo

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2010-06-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* configure.ac: Temporarily include F77_INTEGER_8_FLAG in FFLAGS for
+	BLAS checking.
+	* mkoctfile.in: Include F77_INTEGER_8_FLAG in ALL_FFLAGS.
+	* mkoctfile.cc.in: Ditto.
+
 2010-05-18  Jaroslav Hajek  <highegg@gmail.com>
 
 	* NEWS: Update.
 
 2010-05-11  Rik <octave@nomad.inbox5.com>
 
 	* configure.ac: Capitalize ARPACK in messages.
 
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -937,28 +937,43 @@ fi
 XTRA_CRUFT_SH_LDFLAGS=
 if test "$have_msvc" = "yes"; then
   FLIBS="$FLIBS -lkernel32"
   XTRA_CRUFT_SH_LDFLAGS="-Wl,-def:cruft.def"
 fi
 AC_SUBST(XTRA_CRUFT_SH_LDFLAGS)
 
 ### Checks for BLAS and LAPACK libraries:
+
+## Need to adjust FFLAGS to include correct integer size.
+save_FFLAGS="$FFLAGS"
+FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
+
 ACX_BLAS_WITH_F77_FUNC([:], [:])
 ACX_LAPACK([:], [:])
 
+## Restore FFLAGS.
+FFLAGS="$save_FFLAGS"
+
+if test "x$acx_blas_f77_func_ok" = "xno"; then
+  if $USE_64_BIT_IDX_T && test "$acx_blas_integer_size_ok" = "no" ; then
+    ## Attempt to be more informative.
+    AC_MSG_ERROR([BLAS doesn't seem to support 64-bit integers. This is incompatible with --enable-64.])
+  else
+    AC_MSG_ERROR([A BLAS library was detected but found incompatible with your Fortran 77 compiler settings.])
+  fi
+fi
+
 if test x$acx_blas_ok = xno || test x$acx_lapack_ok = xno; then
   AC_MSG_ERROR([You are required to have BLAS and LAPACK libraries])
 fi
 
-if test "x$acx_blas_f77_func_ok" = "xno"; then
-  AC_MSG_ERROR([A BLAS library was detected but found incompatible with your Fortran 77 compiler])
-fi
-
-# Check for the qrupdate library
+### Check for the qrupdate library
+## No need to adjust FFLAGS because only link is attempted. 
+## Must supply proper LIBS, however.
 
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(qrupdate, qrupdate,
   [qrupdate not found.  The QR & Cholesky updating functions will be slow.],
   [],
   [sqr1up],
   [Fortran 77], [don't use qrupdate, disable QR & Cholesky updating functions])
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,31 +1,39 @@
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * ChangeLog: Correctly break lines > 80 characters.
+
+2010-06-16  Rik <octave@nomad.inbox5.com>
+
+        * interpreter/intro.txi: Clarify wording.  (bug #30165).
+
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
         * interpreter/set.txi: Remove reference to deprecated function.
 
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
-        * interpreter/expr.txi, interpreter/func.txi, interpreter/install.txi, 
+        * interpreter/expr.txi, interpreter/func.txi, interpreter/install.txi,
         interpreter/plot.txi, interpreter/sparse.txi: Periodic grammar check
         of documentation to ensure a common format.
 
 2010-05-27  Rik <octave@nomad.inbox5.com>
 
         * interpreter/arith.txi, interpreter/diffeq.txi, interpreter/intro.txi,
         interpreter/nonlin.txi, interpreter/poly.txi, interpreter/sparse.txi:
-        Replace @ifinfo with @ifnottex. 
+        Replace @ifinfo with @ifnottex.
 
 2010-05-07  John W. Eaton  <jwe@octave.org>
 
 	* basics.txi: Update list of internal variables for --traditional.
 
 2010-05-02  Rik <octave@nomad.inbox5.com>
 
-        * interpreter/contrib.txi, interpreter/install.txi, 
+        * interpreter/contrib.txi, interpreter/install.txi,
         interpreter/plot.txi, interpreter/sparse.txi,
         interpreter/octave.texi: Remove tabs causing problems with
         pdf formatting.
 
 2010-04-14  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* interpreter/plot.txi: Document keypress and mouse callback
 	properties
@@ -84,92 +92,93 @@ 2010-01-17  Thorsten Meyer  <thorsten.me
 
 2010-01-09  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/munge-texi.cc: Avoid C-style casts.
 	(main): Call usage if fewer than two arguments.
 
 2009-12-20  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/geometryimages.m: Correctly set postscript output when QHULL
-	library does not exist and sombrero image is printed.
+	* interpreter/geometryimages.m: Correctly set postscript output when
+        QHULL library does not exist and sombrero image is printed.
 
 2009-12-19  Rik <octave@nomad.inbox5.com>
 
 	* Makefile.am, faq/Makefile.am, interpreter/Makefile.am,
-	liboctave/Makefile.am, refcard/Makefile.am, interpreter/images.awk: 
-	Eliminate TOPDIR variable in favor of built-in automake variables of 
+	liboctave/Makefile.am, refcard/Makefile.am, interpreter/images.awk:
+	Eliminate TOPDIR variable in favor of built-in automake variables of
 	top_builddir and top_srcdir.
 
 2009-12-17  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: use automake syntax to build munge-texi.
 
 2009-12-11  Rik  <octave@nomad.inbox5.com>
 
-	* interpreter/Makefile.am: remove install-local target and use automake 
+	* interpreter/Makefile.am: remove install-local target and use automake
 	syntax to install doc-cache file.
 
 2009-12-10  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/Makefile.am: Replace distdir-local with dist-hook rule as it
-	is better supported by automake.
+	* interpreter/Makefile.am: Replace distdir-local with dist-hook rule as
+        it is better supported by automake.
 
 2009-12-10  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/Makefile.am: new distdir-local rule to check for presence of
-	necessary libraries before packaging distribution
+	* interpreter/Makefile.am: new distdir-local rule to check for presence
+        of necessary libraries before packaging distribution
 
 2009-12-08  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/Makefile.am: Distribute all generated documentation (.pdf,
-	.ps, .html, .dvi) to remove build requirement for TexInfo
+	* interpreter/Makefile.am: Distribute all generated documentation
+        (.pdf, .ps, .html, .dvi) to remove build requirement for TexInfo
 
 2009-12-07  Rik <octave@nomad.inbox5.com>
 
-	* interpreter/Makefile.am, faq/Makefile.am, liboctave/Makefile.am: Document
-	use of NOTPARALLEL directive.
+	* interpreter/Makefile.am, faq/Makefile.am, liboctave/Makefile.am:
+        Document use of NOTPARALLEL directive.
 
 2009-12-07  Rik <octave@nomad.inbox5.com>
 
-	* refcard/Makefile.am: Add CLEANFILES and MAINTAINERCLEANFILES objects to
-	properly clean directory.
+	* refcard/Makefile.am: Add CLEANFILES and MAINTAINERCLEANFILES objects
+        to properly clean directory.
 
 2009-12-05  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Set dependency of *.texi files on
 	munge-texi source code rather than executable.
 
 2009-12-04  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/images.awk: Revert to using Ghostscript for documentation
 	pdf image creation rather than Octave.
 
 2009-12-04  Rik <octave@nomad.inbox5.com>
 
 	* Makefile.am, interpreter/Makefile.am, liboctave/Makefile.am: remove
-	  lingering configuration support for conf.texi
-	* liboctave/Makefile.am: distribute .texi files
+	  lingering configuration support for conf.texi.
+	* liboctave/Makefile.am: distribute .texi files.
 
 2009-12-04  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/geometryimages.m, interpreter/interpimages.m,
 	  interpreter/sparseimages.m, interpreter/plotimages.m:
-	  Switch to color output for PostScript documentation images
+	  Switch to color output for PostScript documentation images.
 
 2009-12-04  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/geometryimages.m, interpreter/interpimages.m,
 	  interpreter/sparseimages.m, interpreter/plotimages.m:
-	  Set default paperorientation to landscape to stop warning message
+	  Set default paperorientation to landscape to stop warning message.
 
 2009-12-04  Ben Abbott <bpabbott@mac.com>
 
 	* interpreter/geometryimages.m, interpreter/interpimages.m,
-	  interpreter/sparseimages.m: Set default papersize to the desired imagesize
+	  interpreter/sparseimages.m: Set default papersize to the desired
+          imagesize.
 
 2009-12-04  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/images.awk: Emit rules to copy PNG files to
 	octave.html directory once it is created.
 	* interpreter/Makefile.am (all-local): Depend on $(HTMLDIR_IMAGES).
 	(IMAGES): Include $(HTMLDIR_IMAGES) in the list.
 
@@ -236,18 +245,18 @@ 2009-12-03  John W. Eaton  <jwe@octave.o
 
 2009-12-02  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am: Correct Makefile.am to allow VPATH builds of
 	documentation
 
 2009-12-01  Rik <octave@nomad.inbox5.com>
 
-	* faq/Makefile.am, doc/interpreter/bugs.txi, doc/interpreter/install.txi:
-	Eliminate false dependency on conf.texi
+	* faq/Makefile.am, doc/interpreter/bugs.txi,
+        doc/interpreter/install.txi: Eliminate false dependency on conf.texi.
 
 2009-11-30  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am:
 	Overhaul Makefile to correctly generate *.texi files and to stop their
 	distribution when running 'make dist'
 
 2009-11-30  John W. Eaton  <jwe@octave.org>
@@ -278,57 +287,58 @@ 2009-11-27  David Bateman  <dbateman@fre
 
 	* interpreter/install.txi: Document that curl libraries impact ftp
 	objects.
 	* interpreter/system.txi: Document the ftp objects
 
 2009-11-25  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am:
-	Simplify doc-cache handling in Makefile.am to use only install-data-local
-	target
+	Simplify doc-cache handling in Makefile.am to use only
+        install-data-local target
 
 2009-11-24  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.am:
-	Correct Makefile so that it halts on error when unable to build doc-cache
+	Correct Makefile so that it halts on error when unable to build
+        doc-cache.
 
 2009-11-23  Rik <octave@nomad.inbox5.com>
 
 	* faq/Makefile.am, interpreter/Makefile.am, liboctave/Makefile.am:
 	Stop distribution of conf.texi by autotools.  conf.texi must be re-made
 	from conf.texi.in during configure step
 
 2009-11-23  Rik <octave@nomad.inbox5.com>
 
 	* Makefile.am: Add . to SUBDIRS to force automake to compile this
-	directory, and make conf.texi, before recursively compiling SUBDIRS which
-	depend on conf.texi
+	directory, and make conf.texi, before recursively compiling SUBDIRS
+        which depend on conf.texi
 
 2009-11-11  Rik <octave@nomad.inbox5.com>
 
-	* Makefile.am: Add DISTCLEANFILES macro so that generated conf.texi can be
-	cleaned by automake.
+	* Makefile.am: Add DISTCLEANFILES macro so that generated conf.texi can
+        be cleaned by automake.
 
 2009-11-10  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.am, faq/Makefile.am, interpreter/Makefile.am,
 	liboctave/Makefile.am, refcard/Makefile.am,
 	interpreter/config-images.sh, interpreter/images,
 	interpreter/images.awk: New files.
 	* Makefile.in, faq/Makefile.in, interpreter/Makefile.in,
 	liboctave/Makefile.in, refcard/Makefile.in: Delete.
 	* interpreter/munge-texi.cc (main, usage): Eliminate unnecessary
 	-d option.
 	* liboctave/liboctave.texi: Surround @direntry in appropriate magic.
 	* faq/OctaveFAQ.texi: Rename from faq/Octave-FAQ.texi.
 
 2009-10-23  Rik <octave@nomad.inbox5.com>
 
-	* various: Periodic grammar check of Octave documentation files to 
+	* various: Periodic grammar check of Octave documentation files to
         ensure a standardized format.
 
 2009-10-20  Rik <octave@nomad.inbox5.com>
 
 	* interpreter/Makefile.in: Clean Makefile.in and remove a few
 	non-functional targets
 
 2009-10-13  Rik <octave@nomad.inbox5.com>
@@ -408,20 +418,20 @@ 2009-06-07  Rik  <rdrider0-list@yahoo.co
 	Updated functions delete, allchild, backend, clf, hold, and refreshdata.
 
 2009-06-07  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
 	* interpreter/container.txi: Udate documentation of container types
 
 2009-06-03  Rik  <rdrider0-list@yahoo.com>
 
-	* interpreter/plotimages.m: Correct errorbar plot for docs.  Make hist plot
-	reprodroducible for docs.
-	* interpreter/interpimages.m: Correct typo in legend of interpft plot for
-	docs
+	* interpreter/plotimages.m: Correct errorbar plot for docs.  Make hist
+        plot reprodroducible for docs.
+	* interpreter/interpimages.m: Correct typo in legend of interpft plot
+        for docs.
 
 2009-06-03  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Makefile.in: Omit conf.texi in DISTFILES.
 
 2009-06-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* interpreter/oop.txi: Update docs of polynomial class, mention
@@ -441,28 +451,29 @@ 2009-05-25  Rik  <rdrider0-list@yahoo.co
 	(DIST_FILES) so that pdfs will build.
 
 2009-05-24  Robert T. Short  <octave@phaselockedsystems.com>
 
 	* interpreter/oop.txi: Added inheritance documentatin
 
 2009-05-21  Rik  <rdrider0-list@yahoo.com>
 
-	* interpreter/Makefile.in, texmf.cnf: Change texi2pdf call to include local
-	TeX configuration file which increases save_history variable.
+	* interpreter/Makefile.in, texmf.cnf: Change texi2pdf call to include
+        local TeX configuration file which increases save_history variable.
 
 2009-05-17  Rik  <rdrider0-list@yahoo.com>
 
 	* interpreter/tips.txi: Change recommendation to use @tex rather than
 	@iftex construction.
 
 2009-05-17  Rik  <rdrider0-list@yahoo.com>
 
-	* interpreter/*.txi: Simplify TeXinfo files by eliminating redundant @iftex
-	followed by @tex construction.  Also, spellchecked all .txi and .texi files.
+	* interpreter/*.txi: Simplify TeXinfo files by eliminating redundant
+        @iftex followed by @tex construction.  Also, spellchecked all .txi
+        and .texi files.
 
 2009-05-14  Rik  <rdrider0-list@yahoo.com>
 
 	* interpreter/arith.txi: Update section 17.8 (Mathematical Consants)
 	of arith.txi.
 
 2009-05-01  Rik  <rdrider0-list@yahoo.com>
 
diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -67,17 +67,17 @@ it a @code{SIGTSTP} signal, usually by t
 @node Simple Examples
 @section Simple Examples
 
 The following chapters describe all of Octave's features in detail, but
 before doing that, it might be helpful to give a sampling of some of its
 capabilities.
 
 If you are new to Octave, I recommend that you try these examples to
-begin learning Octave by using it.  Lines marked with @samp{octave:13>}
+begin learning Octave by using it.  Lines marked like so, @samp{octave:13>},
 are lines you type, ending each with a carriage return.  Octave will
 respond with an answer, or by displaying a graph.
 
 @subsection Elementary Calculations
 
 Octave can easily be used for basic numerical calculations.  Octave 
 knows about arithmetic operations (+,-,*,/), exponentiation (^), 
 natural logarithms/exponents (log, exp), and the trigonometric 
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2660,16 +2660,20 @@ ComplexMatrix::lssolve (const ComplexMat
         liwork = 1;
       Array<octave_idx_type> iwork (liwork, 1);
       octave_idx_type* piwork = iwork.fortran_vec ();
 
       F77_XFCN (zgelsd, ZGELSD, (m, n, nrhs, tmp_data, m, pretval, maxmn,
                                  ps, rcon, rank, work.fortran_vec (),
                                  lwork, prwork, piwork, info));
 
+      std::cerr << "work(0): " << work(0) << std::endl;
+      std::cerr << "rwork(0): " << rwork(0) << std::endl;
+      std::cerr << "iwork(0): " << iwork(0) << std::endl;
+
       // The workspace query is broken in at least LAPACK 3.0.0
       // through 3.1.1 when n >= mnthr.  The obtuse formula below
       // should provide sufficient workspace for ZGELSD to operate
       // efficiently.
       if (n >= mnthr)
         {
           octave_idx_type addend = m;
 
@@ -2693,16 +2697,20 @@ ComplexMatrix::lssolve (const ComplexMat
 
           if (std::real (work(0)) < lworkaround)
             work(0) = lworkaround;
         }
 
       lwork = static_cast<octave_idx_type> (std::real (work(0)));
       work.resize (lwork, 1);
 
+      std::cerr << "work numel: " << work.numel () << std::endl;
+      std::cerr << "rwork numel: " << rwork.numel () << std::endl;
+      std::cerr << "iwork numel: " << iwork.numel () << std::endl;
+
       F77_XFCN (zgelsd, ZGELSD, (m, n, nrhs, tmp_data, m, pretval,
                                  maxmn, ps, rcon, rank,
                                  work.fortran_vec (), lwork, 
                                  prwork, piwork, info));
 
       if (s.elem (0) == 0.0)
         rcon = 0.0;
       else
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -56,20 +56,20 @@ 2010-06-06  Michael Goffioul  <michael.g
 	to specify template argument for mx_inline_any_nan.
 	(MS_BOOL_OP, SM_BOOL_OP, MM_BOOL_OP, NDS_BOOL_OP, SND_BOOL_OP,
 	NDND_BOOL_OP): Specify new MNANCHK argument.
 
 2010-06-04  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dim-vector.cc: New source.
 	* Makefile.am: Add it.
-	* dim-vector.h (dim_vector::chop_all_singletons, 
-	dim_vector::str, dim_vector::num_ones, dim_vector::safe_numel, 
+	* dim-vector.h (dim_vector::chop_all_singletons,
+	dim_vector::str, dim_vector::num_ones, dim_vector::safe_numel,
 	dim_vector::squeeze, dim_vector::concat, dim_vector::redim):
-	Move bodies to dim_vector.cc. 
+	Move bodies to dim_vector.cc.
 	(dim_vector::concat): Rewrite.
 	* Array.cc (Array::cat): Fix dim_vector concatenation. Don't use 0x0
 	as neutral element, because it isn't with dim > 1.
 
 2010-06-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array<T>::optimize_dimensions): New method.
 	* Array.h: Declare it.
diff --git a/mkoctfile.cc.in b/mkoctfile.cc.in
--- a/mkoctfile.cc.in
+++ b/mkoctfile.cc.in
@@ -231,18 +231,19 @@ initialize (void)
   vars["FFTW3F_LDFLAGS"] = get_variable ("FFTW3F_LDFLAGS", %OCTAVE_CONF_FFTW3F_LDFLAGS%);
   vars["FFTW3F_LIBS"] = get_variable ("FFTW3F_LIBS", %OCTAVE_CONF_FFTW3F_LIBS%);
   vars["LIBS"] = get_variable ("LIBS", %OCTAVE_CONF_LIBS%);
   vars["FLIBS"] = get_variable ("FLIBS", %OCTAVE_CONF_FLIBS%);
   vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_LD_CXX%);
   vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG", %OCTAVE_CONF_LD_STATIC_FLAG%);
   vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LFLAGS);
+  vars["F77_INTEGER8_FLAG"] = get_variable ("F77_INTEGER8_FLAG", %OCTAVE_CONF_F77_INTEGER8_FLAG%);
 
-  vars["ALL_FFLAGS"] = vars["FFLAGS"];
+  vars["ALL_FFLAGS"] = vars["FFLAGS"] + " " + vars["F77_INTEGER8_FLAG"];
 
   vars["ALL_CFLAGS"] = vars["INCFLAGS"] + " " + vars["XTRA_CFLAGS"]
     + " " + vars["CFLAGS"];
 
   vars["ALL_CXXFLAGS"] = vars["INCFLAGS"] + " " + vars["XTRA_CXXFLAGS"]
     + " " + vars["CXXFLAGS"];
 
   vars["ALL_LDFLAGS"] = vars["LD_STATIC_FLAG"] + " " + vars["CPICFLAG"]
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -98,18 +98,19 @@ fi
 : ${FFTW3F_LDFLAGS=%OCTAVE_CONF_FFTW3F_LDFLAGS%}
 : ${FFTW3F_LIBS=%OCTAVE_CONF_FFTW3F_LIBS%}
 : ${LIBS=%OCTAVE_CONF_LIBS%}
 : ${FLIBS=%OCTAVE_CONF_FLIBS%}
 : ${LD_CXX=%OCTAVE_CONF_LD_CXX%}
 : ${LDFLAGS=%OCTAVE_CONF_LDFLAGS%}
 : ${LD_STATIC_FLAG=%OCTAVE_CONF_LD_STATIC_FLAG%}
 : ${LFLAGS=$DEFAULT_LFLAGS}
+: ${F77_INTEGER_8_FLAG=%F77_INTEGER_8_FLAG%}
 
-: ${ALL_FFLAGS="$FFLAGS"}
+: ${ALL_FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"}
 
 : ${ALL_CFLAGS="$INCFLAGS $XTRA_CFLAGS $CFLAGS"}
 
 : ${ALL_CXXFLAGS="$INCFLAGS $XTRA_CXXFLAGS $CXXFLAGS"}
 
 : ${ALL_LDFLAGS="$LD_STATIC_FLAG $CPICFLAG $LDFLAGS"}
 
 : ${OCTAVE_LIBS="$LIBOCTINTERP $LIBOCTAVE $SPECIAL_MATH_LIB $LIBCRUFT"}
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,25 +1,42 @@
+2010-06-24  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* plot/print.m: convert to wrapper for backend specific print functions
+	* plot/__gnuplot_print__.m: New gnuplot specific print function,
+	largely based on the former print.m
+	* plot/__fltk_print__.m: New fltk specific print function
+	* plot/__print_parse_opts__.m: New option parser for print
+	functions, largely based on the former print.m
+	* plot/module.mk: Add new m-files here
+
+2010-06-23  David Bateman  <dbateman@free.fr>
+
+	* whitebg.m: New function.
+	* module.mk (plot_FCN_FILES): Add it here.
+	* __go_draw_figure__.m: Set the border color to the inverse of the
+	background color.
+
 2010-06-17  Brad Froehle <brad.froehle@gmail.com>
 
 	* sparse/spy.m: Fix typo.
 
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
         * set/union.m: Remove seealso reference to deprecated function.
 
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
-        * @ftp/dir.m, @ftp/ftp.m, @ftp/mget.m, @ftp/mput.m, @ftp/rename.m, 
-        deprecated/fstat.m, general/accumdim.m, general/interp1.m, 
-        linear-algebra/ishermitian.m, linear-algebra/issymmetric.m, 
-        miscellaneous/substruct.m, optimization/fminbnd.m, 
+        * @ftp/dir.m, @ftp/ftp.m, @ftp/mget.m, @ftp/mput.m, @ftp/rename.m,
+        deprecated/fstat.m, general/accumdim.m, general/interp1.m,
+        linear-algebra/ishermitian.m, linear-algebra/issymmetric.m,
+        miscellaneous/substruct.m, optimization/fminbnd.m,
         optimization/fsolve.m, plot/bar.m, plot/daspect.m, plot/pbaspect.m,
         plot/print.m, polynomial/mkpp.m, polynomial/ppval.m, set/union.m,
-        signal/unwrap.m, specfun/nthroot.m: Periodic grammar check of 
+        signal/unwrap.m, specfun/nthroot.m: Periodic grammar check of
         documentation to ensure a common format.
 
 2010-06-14  Rik <octave@nomad.inbox5.com>
 
         * plot/image.m: Flip data, rather than y-axis, for images.  (bug #30033)
 
 2010-06-12  Ben Abbott <bpabbott@mac.com>
 
@@ -44,78 +61,78 @@ 2010-06-10  Jaroslav Hajek  <highegg@gma
 
 2010-06-09  Rik <octave@nomad.inbox5.com>
 
         * general/flipdim.m, general/accumdim.m: Use > 1 test to find
         first non-singleton dimension rather than != 1.
 
 2010-06-08  Rik <octave@nomad.inbox5.com>
 
-        * general/cumtrapz.m, general/postpad.m, general/prepad.m, 
-        general/shift.m, general/trapz.m, signal/unwrap.m: Use common 
+        * general/cumtrapz.m, general/postpad.m, general/prepad.m,
+        general/shift.m, general/trapz.m, signal/unwrap.m: Use common
         method to find first non-singleton dimension.
 
 2010-06-08  Rik <octave@nomad.inbox5.com>
 
         * general/rotdim.m: Modify function to use same variable names
         as documentation.
 
 2010-06-08  Rik <octave@nomad.inbox5.com>
 
-        * general/cart2pol.m, general/cart2sph.m, general/pol2cart.m, 
-        general/sph2cart.m: Add option to operate on column matrix of 
+        * general/cart2pol.m, general/cart2sph.m, general/pol2cart.m,
+        general/sph2cart.m: Add option to operate on column matrix of
         coordinates.
 
 2010-06-08  Rik <octave@nomad.inbox5.com>
 
-        * general/arrayfun.m, general/cart2pol.m, general/cart2sph.m, 
-        general/idivide.m, general/logspace.m, general/sph2cart.m, 
-        general/structfun.m, image/imagesc.m, io/csvread.m, io/csvwrite.m, 
-        linear-algebra/cond.m, linear-algebra/condest.m, 
-        linear-algebra/isdefinite.m, linear-algebra/null.m, 
-        linear-algebra/orth.m, miscellaneous/list_primes.m, 
+        * general/arrayfun.m, general/cart2pol.m, general/cart2sph.m,
+        general/idivide.m, general/logspace.m, general/sph2cart.m,
+        general/structfun.m, image/imagesc.m, io/csvread.m, io/csvwrite.m,
+        linear-algebra/cond.m, linear-algebra/condest.m,
+        linear-algebra/isdefinite.m, linear-algebra/null.m,
+        linear-algebra/orth.m, miscellaneous/list_primes.m,
         optimization/fminunc.m, optimization/fzero.m, path/matlabroot.m,
         plot/axis.m, plot/plot.m, plot/semilogx.m, plot/semilogxerr.m,
         plot/semilogy.m, plot/semilogyerr.m, plot/stem.m, polynomial/poly.m,
         polynomial/polyder.m, polynomial/polyderiv.m, polynomial/polyfit.m,
         polynomial/polyout.m, polynomial/polyval.m, set/ismember.m,
         sparse/spfun.m, specfun/betaln.m, statistics/base/mean.m,
         statistics/base/median.m, statistics/base/mode.m, statistics/base/ols.m,
-        statistics/base/ranks.m, 
-        statistics/distributions/kolmogorov_smirnov_cdf.m, 
+        statistics/base/ranks.m,
+        statistics/distributions/kolmogorov_smirnov_cdf.m,
         statistics/distributions/wblpdf.m: Improve documentation strings
 
 2010-06-07  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pkg/pkg.m: Support pkg list -forge.
 
 2010-06-07  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pkg/get_forge_pkg.m: New function.
 	* pkg/module.mk: Add it here.
 	* pkg/pkg.m: Support -forge switch for auto-downloading OctaveForge
 	packages.
 
 2010-06-03  Alois Schlögl
 
-        * signal/arch_test.m, statistics/tests/bartlett_test.m, 
-        statistics/tests/chisquare_test_homogeneity.m, 
-        statistics/tests/chisquare_test_independence.m, 
-        statistics/tests/manova.m, statistics/tests/mcnemar_test.m, 
-        statistics/tests/run_test.m, statistics/distributions/chi2pdf.m: 
+        * signal/arch_test.m, statistics/tests/bartlett_test.m,
+        statistics/tests/chisquare_test_homogeneity.m,
+        statistics/tests/chisquare_test_independence.m,
+        statistics/tests/manova.m, statistics/tests/mcnemar_test.m,
+        statistics/tests/run_test.m, statistics/distributions/chi2pdf.m:
         Replace calls to obsolete chisquare_cdf with chi2cdf.
 
 2010-06-03  Rik <octave@nomad.inbox5.com>
 
 	* plot/private/__plt__.m: Add newline to usage message.
 
 2010-06-02  Rik <octave@nomad.inbox5.com>
 
 	* optimization/sqp.m: Overhaul sqp code.
-        Guarantee equivalent results if sqp called with or wihout bounds 
+        Guarantee equivalent results if sqp called with or wihout bounds
         (bug #29989).  Simplify input option handling and add %tests
         to check validation code.  Rewrite documentation string.
 
 2010-06-01  Rik <octave@nomad.inbox5.com>
 
 	* optimization/fminbnd.m: Remove unused persistent variable.
 
 2010-06-01  Rik <octave@nomad.inbox5.com>
@@ -125,41 +142,41 @@ 2010-06-01  Rik <octave@nomad.inbox5.com
 
 2010-05-31  Rik <octave@nomad.inbox5.com>
 
 	* specfun/legendre.m: Orient row vector correctly (bug #29997).
         Add input validation for negative values and %tests to check
         validation routines.
 
 2010-05-30  Rik <octave@nomad.inbox5.com>
-        
-        * sparse/svds.m: Overhaul code.  
+
+        * sparse/svds.m: Overhaul code.
         Return smallest singular values if sigma == 0 (Bug #29721).
         Avoid calculating U and V matrices unless requested.
         Correctly handle zero matrix input.
         Improve documentation string.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
 
-        * statistics/base/histc.m, statistics/base/iqr.m, 
-        statistics/base/kurtosis.m, statistics/base/mode.m, 
-        statistics/base/ranks.m, statistics/base/run_count.m, 
-        statistics/base/skewness.m, statistics/base/statistics.m, 
-        statistics/base/studentize.m: Improve validation of input arguments. 
+        * statistics/base/histc.m, statistics/base/iqr.m,
+        statistics/base/kurtosis.m, statistics/base/mode.m,
+        statistics/base/ranks.m, statistics/base/run_count.m,
+        statistics/base/skewness.m, statistics/base/statistics.m,
+        statistics/base/studentize.m: Improve validation of input arguments.
 
 2010-05-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* specfun/isprime.m: Fix and further optimize.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
 
         * plot/legend.m: Improve documentation string.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
-        
+
         * sparse/svds.m: Check struct input arguments.  Overhaul documentation.
 
 2010-05-26  Ben Abbott <bpabbott@mac.com>
 
 	* plot/legend.m: Key labels for specified objects.
 	* plot/ancestor.m: Support vectors of handles.
 
 2010-05-26  Rik <octave@nomad.inbox5.com>
@@ -181,22 +198,22 @@ 2010-05-25  Jaroslav Hajek  <highegg@gma
 	* miscellaneous/unimplemented.m: Don't mention onCleanup (supported).
 
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* statistics/base/median.m: Ensure NaNs where needed. Simplify first
 	non-singleton dimension computation.
 
 2010-05-24  Rik <octave@nomad.inbox5.com>
-        * general/private/__isequal__.m, image/image.m, 
+        * general/private/__isequal__.m, image/image.m,
         statistics/base/ranks.m: Replace calls to deprecated functions.
 
 2010-05-23  Rik <octave@nomad.inbox5.com>
 
-        * image/imshow.m: Scale image point color according to colormap. 
+        * image/imshow.m: Scale image point color according to colormap.
         Bug #29926.
 
 2010-05-16  Rik <octave@nomad.inbox5.com>
 
         * plot/semilogx.m, plot/semilogy.m: Plot minor ticks for semilog plots.
 
 2010-05-16  Rik <octave@nomad.inbox5.com>
 
@@ -220,17 +237,17 @@ 2010-05-16  Rik <octave@nomad.inbox5.com
         special-matrix/hadamard.m, statistics/distributions/unidrnd.m,
         statistics/distributions/unifinv.m,
         statistics/models/logistic_regression.m, strings/strjust.m,
         testfun/rundemos.m, testfun/runtests.m, testfun/test.m, time/datenum.m:
         Print name of function in error() string messages.
 
 2010-05-16  Rik <octave@nomad.inbox5.com>
 
-        * scripts/plot/contourc.m, scripts/plot/private/__contour__.m, 
+        * scripts/plot/contourc.m, scripts/plot/private/__contour__.m,
           scripts/plot/surface.m, scripts/plot/surfnorm.m: Check input
           arguments for size and type (bug #29861).
 
 2010-05-13  John W. Eaton  <jwe@octave.org>
 
 	* help/help.m: Avoid unnecessary use of varargout.
 
 2010-05-13   Qianqian Fang <fangq>
@@ -251,18 +268,18 @@ 2010-05-12  Jordi Gutiérrez Hermoso <jordigh@gmail.com>
 	correct docstring.
 
 2010-05-08  Rik <octave@nomad.inbox5.com>
 
         * testfun/test.m: Don't abort testing when skipping a testif block
 
 2010-05-05  Rik <octave@nomad.inbox5.com>
 
-        * statistics/tests/cor_test.m, statistics/tests/t_test.m, 
-          statistics/tests/t_test_2.m, statistics/tests/t_test_regression.m, 
+        * statistics/tests/cor_test.m, statistics/tests/t_test.m,
+          statistics/tests/t_test_2.m, statistics/tests/t_test_regression.m,
           statistics/tests/welch_test.m: Replace deprecated function calls.
           Patch provided by Alois Schlögl.
 
 2010-05-02  Rik <octave@nomad.inbox5.com>
 
 	* linear-algebra/cond.m: Add TeX equation to documentation
 
 2010-05-02  Peter van den Biggelaar <peter@biglr.net>
@@ -849,17 +866,17 @@ 2010-01-30  Thorsten Meyer  <thorsten.me
 
 	* statistics/tests/kruskal_wallis_test.m: Replace chisquare_cdf
 	by chi2cdf.
 
 2010-01-29  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/axis.m, plot/__go_draw_axes__.m, plot/colorbar.m,
 	plot/isocolors.m, plot/isonormals.m, plot/isosurface.m,
-	plot/plotyy.m, plot/polar.m, plot/surfl.m, 
+	plot/plotyy.m, plot/polar.m, plot/surfl.m,
 	plot/private/__actual_axis_position.m:
 	Replace dataaspectratio and dataaspectratiomode properties with
 	plotboxaspectratio and plotboxaspectratio properties.
 
 2010-01-29  John W. Eaton  <jwe@octave.org>
 
 	* polynomial/compan.m, polynomial/conv.m, polynomial/deconv.m,
 	polynomial/mpoles.m, polynomial/polyderiv.m,
@@ -1032,17 +1049,17 @@ 2010-01-18  David Grundberg  <davidg@cs.
 	* testfun/test.m: Append endfunction to function test blocks.
 
 2010-01-17  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
 	* general/celldisp.m: Add example, add demo.
 
 	* general/structfun.m, miscellaneous/getfield.m,
 	miscellaneous/orderfields.m, miscellaneous/setfield.m,
-	miscellaneous/substruct.m: Update documentation string. 
+	miscellaneous/substruct.m: Update documentation string.
 
 2010-01-16  David Bateman  <dbateman@free.fr>
 
 	* plot/__go_draw_axes__.m (next_marker):  New function to find a
 	new marker. Use it to support the "@" marker.
 	* plot/private/__pltopt__.m: Don't convert "@" marker ro "+";
 
 2010-01-15  David Bateman  <dbateman@free.fr>
diff --git a/scripts/plot/__fltk_print__.m b/scripts/plot/__fltk_print__.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/__fltk_print__.m
@@ -0,0 +1,29 @@
+## Copyright (C) 2010 Shai Ayal
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} __fltk_print__ (@var{...})
+## Undocumented internal function.
+## @end deftypefn
+
+function __fltk_print__ (varargin)
+
+  opts = __print_parse_opts__ (varargin{:});
+  drawnow ("eps", opts.name);
+
+endfunction
diff --git a/scripts/plot/print.m b/scripts/plot/__gnuplot_print__.m
copy from scripts/plot/print.m
copy to scripts/plot/__gnuplot_print__.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/__gnuplot_print__.m
@@ -13,194 +13,26 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} print ()
-## @deftypefnx {Function File} {} print (@var{options})
-## @deftypefnx {Function File} {} print (@var{filename}, @var{options})
-## @deftypefnx {Function File} {} print (@var{h}, @var{filename}, @var{options})
-## Print a graph, or save it to a file
-##
-## @var{filename} defines the file name of the output file.  If the
-## file name has no suffix, one is inferred from the specified
-## device and appended to the file name.  If no
-## filename is specified, the output is sent to the printer.
-##
-## @var{h} specifies the figure handle.  If no handle is specified
-## the handle for the current figure is used.
-##
-## @var{options}:
-## @table @code
-## @item -P@var{printer}
-##   Set the @var{printer} name to which the graph is sent if no
-##   @var{filename} is specified.
-## @item -G@var{ghostscript_command}
-##   Specify the command for calling Ghostscript.  For Unix and Windows,
-## the defaults are 'gs' and 'gswin32c', respectively.
-## @item -color
-## @itemx -mono
-##   Monochrome or color lines.
-## @item -solid
-## @itemx -dashed
-##   Solid or dashed lines.
-## @item -portrait
-## @itemx -landscape
-##   Specify the orientation of the plot for printed output.
-## @item -d@var{device}
-##   Output device, where @var{device} is one of:
-##   @table @code
-##   @item ps
-##   @itemx ps2
-##   @itemx psc
-##   @itemx psc2
-##     Postscript (level 1 and 2, mono and color)
-##   @item eps
-##   @itemx eps2
-##   @itemx epsc
-##   @itemx epsc2
-##     Encapsulated postscript (level 1 and 2, mono and color)
-##   @item tex
-##   @itemx epslatex
-##   @itemx epslatexstandalone
-##   @itemx pstex
-##   @itemx pslatex
-##     Generate a @LaTeX{} (or @TeX{}) file for labels, and eps/ps for
-## graphics.  The file produced by @code{epslatexstandalone} can be
-## processed directly by @LaTeX{}.  The other formats are intended to
-## be included in a @LaTeX{} (or @TeX{}) document.  The @code{tex} device
-## is the same as the @code{epslatex} device.
-##   @item tikz
-##     Generate a @LaTeX{} file using gnuplot's Lua/TikZ terminal.
-##   @item ill
-##   @itemx aifm
-##     Adobe Illustrator
-##   @item cdr
-##   @itemx corel
-##     CorelDraw
-##   @item dxf
-##     AutoCAD
-##   @item emf
-##   @itemx meta
-##     Microsoft Enhanced Metafile
-##   @item fig
-##     XFig.  If this format is selected the additional options
-##     @code{-textspecial} or @code{-textnormal} can be used to control
-##     whether the special flag should be set for the text in
-##     the figure (default is @code{-textnormal}). 
-##   @item hpgl
-##     HP plotter language
-##   @item mf
-##     Metafont
-##   @item png
-##     Portable network graphics
-##   @item jpg
-##   @itemx jpeg
-##     JPEG image
-##   @item gif
-##     GIF image
-##   @item pbm
-##     PBMplus
-##   @item svg
-##     Scalable vector graphics
-##   @item pdf
-##     Portable document format
-##   @end table
-##
-##   If the device is omitted, it is inferred from the file extension,
-## or if there is no filename it is sent to the printer as postscript.
-##
-## @item -d@var{ghostscript_device}
-##   Additional devices are supported by Ghostscript.
-## Some examples are;
-##
-##   @table @code
-##   @item ljet2p 
-##     HP LaserJet IIP
-##   @item ljet3 
-##     HP LaserJet III
-##   @item deskjet
-##     HP DeskJet and DeskJet Plus
-##   @item cdj550
-##     HP DeskJet 550C
-##   @item paintjet
-##     HP PointJet
-##   @item pcx24b
-##     24-bit color PCX file format
-##   @item ppm
-##     Portable Pixel Map file format
-##   @end table
-##
-##   For a complete list, type `system ("gs -h")' to see what formats
-## and devices are available.
-##
-##   When the ghostscript is sent to a printer the size is determined
-## by the figure's "papersize" property.  When the ghostscript output 
-## is sent to a file the size is determined by the figure's
-## "paperposition" property.
-##
-## @itemx -append
-##   Appends the output to a pre-existing file.  Presently only PDF,
-## and Postscript files are supported.
-##
-## @itemx -r@var{NUM}
-##   Resolution of bitmaps in pixels per inch.  For both metafiles and 
-## SVG the default is the screen resolution, for other it is 150 dpi.
-## To specify screen resolution, use "-r0".
-##
-## @item -tight
-##   Forces a tight bounding box for eps-files.  Since the ghostscript
-## devices are conversion of an eps-file, this option works the those
-## devices as well.
-##
-## @itemx -S@var{xsize},@var{ysize}
-##   Plot size in pixels for EMF, GIF, JPEG, PBM, PNG and SVG.  If
-## using the command form of the print function, you must quote the
-## @var{xsize},@var{ysize} option.  For example, by writing
-## @w{@code{"-S640,480"}}.  The size defaults to that specified by the
-## figure's paperposition property.
-##
-## @item -F@var{fontname}
-## @itemx -F@var{fontname}:@var{size}
-## @itemx -F:@var{size}
-##   @var{fontname} set the postscript font (for use with postscript,
-## aifm, corel and fig).  By default, 'Helvetica' is set for PS/Aifm,
-## and 'SwitzerlandLight' for Corel.  It can also be 'Times-Roman'.
-## @var{size} is given in points.  @var{fontname} is ignored for the
-## fig device.
-## @end table
-##
-## The filename and options can be given in any order.
+## @deftypefn {Function File} __gnuplot_ginput__ (@var{...})
+## Undocumented internal function.
 ## @end deftypefn
 
 ## Author: Daniel Heiserer <Daniel.heiserer@physik.tu-muenchen.de>
 ## Adapted-By: jwe
 
-function print (varargin)
+function __gnuplot_print__ (varargin)
 
   persistent warn_on_inconsistent_orientation = true
-  orientation = "";
-  use_color = 0; # 0=default, -1=mono, +1=color
-  append_to_file = 0;
-  force_solid = 0; # 0=default, -1=dashed, +1=solid
-  fontsize = "";
-  font = "";
-  canvas_size = "";
-  name = "";
-  devopt = "";
-  printer = "";
-  debug = false;
-  debug_file = "octave-print-commands.log";
-  special_flag = "textnormal";
-  tight_flag = false;
-  resolution = "";
 
   persistent ghostscript_binary = "";
   if (isempty (ghostscript_binary))
     ghostscript_binary = getenv ("GSC");
     ng = 0;
     if (isunix ())
       ## Unix - Includes Mac OSX and Cygwin.
       gs_binaries = {"gs", "gs.exe"};
@@ -211,137 +43,72 @@ function print (varargin)
     while (ng < numel (gs_binaries) && isempty (ghostscript_binary))
       ng = ng + 1;
       ghostscript_binary = file_in_path (EXEC_PATH, gs_binaries{ng});
     endwhile
   endif
 
   old_fig = get (0, "currentfigure");
   unwind_protect
-    ## Ensure the last figure is on the screen for single line commands like
-    ##   plot(...); print(...);
-    drawnow ();
-
-    for i = 1:nargin
-      arg = varargin{i};
-      if (ischar (arg))
-        if (strcmp (arg, "-color"))
-          use_color = 1;
-        elseif (strcmp (arg, "-append"))
-          append_to_file = 1;
-        elseif (strcmp (arg, "-mono"))
-          use_color = -1;
-        elseif (strcmp (arg, "-solid"))
-          force_solid = 1;
-        elseif (strcmp (arg, "-dashed"))
-          force_solid = -1;
-        elseif (strcmp (arg, "-portrait"))
-          orientation = "portrait";
-        elseif (strcmp (arg, "-landscape"))
-          orientation = "landscape";
-        elseif (strcmp (arg, "-tight"))
-          tight_flag = true;
-        elseif (strcmp (arg, "-textspecial"))
-          special_flag = "textspecial";
-        elseif (strncmp (arg, "-debug", 6))
-          debug = true;
-          if (length (arg) > 7)
-            debug_file = arg(8:end);
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-d")
-          devopt = tolower(arg(3:end));
-        elseif (length (arg) > 2 && arg(1:2) == "-P")
-          printer = arg;
-        elseif ((length (arg) > 2) && arg(1:2) == "-G")
-          ghostscript_binary = arg(3:end);
-          if (exist (ghostscript_binary, "file") != 2)
-            ghostscript_binary = file_in_path (EXEC_PATH, ghostscript_binary);
-          endif
-          if (isempty (ghostscript_binary))
-            error ("print: Ghostscript binary ""%s"" could not be located", arg(3:end))
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-F")
-          idx = rindex (arg, ":");
-          if (idx)
-            font = arg(3:idx-1);
-            fontsize = arg(idx+1:length(arg));
-          else
-            font = arg(3:length(arg));
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-S")
-          canvas_size = arg(3:length(arg));
-        elseif (length (arg) > 2 && arg(1:2) == "-r")
-          resolution = arg(3:length(arg));
-        elseif (length (arg) >= 1 && arg(1) == "-")
-          error ("print: unknown option `%s'", arg);
-        elseif (length (arg) > 0)
-          name = arg;
-        endif
-      elseif (isfigure (arg))
-        figure (arg);
-      else
-        error ("print: expecting inputs to be character string options or a figure handle");
-      endif
-    endfor
-
+    opts = __print_parse_opts__ (varargin{:});
     have_ghostscript = (exist (ghostscript_binary, "file") == 2);
 
-    doprint = isempty (name);
+    doprint = isempty (opts.name);
     if (doprint)
-      if (isempty (devopt))
-        if (use_color < 0)
-          devopt = "ps";
+      if (isempty (opts.devopt))
+        if (opts.use_color < 0)
+          opts.devopt = "ps";
           printname = cstrcat (tmpnam, ".ps");
         else
-          devopt = "psc";
+          opts.devopt = "psc";
           printname = cstrcat (tmpnam, ".psc");
         endif
       else
         printname = cstrcat (tmpnam, ".", devopt);
       endif
-      name = printname;
+      opts.name = printname;
     endif
 
-    dot = rindex (name, ".");
-    if (isempty (devopt))
+    dot = rindex (opts.name, ".");
+    if (isempty (opts.devopt))
       if (dot == 0)
         error ("print: no format specified");
       else
-        dev = tolower (name(dot+1:end));
+        dev = tolower (opts.name(dot+1:end));
       endif
     else
-      dev = devopt;
+      dev = opts.devopt;
     endif
 
     dev_list = {"aifm", "corel", "fig", "png", "jpeg", ...
                 "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
                 "ps", "ps2", "psc", "psc2", "eps", "eps2", ...
                 "epsc", "epsc2", "emf", "pdf", "pslatex", ...
                 "epslatex", "epslatexstandalone", "pstex", "tikz"};
     suffixes = {"ai", "cdr", "fig", "png", "jpeg", ...
                 "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
                 "ps", "ps", "ps", "ps", "eps", "eps", ...
                 "eps", "eps", "emf", "pdf", "tex", ...
                 "tex", "tex", "tex", "tikz"};
     if (dot == 0)
-      name = strcat (name, ".", suffixes {strcmpi (dev_list, dev)});
+      opts.name = strcat (opts.name, ".", suffixes {strcmpi (dev_list, dev)});
       dot = rindex (name, ".");
     endif
 
-    if (append_to_file)
+    if (opts.append_to_file)
       if (any (strcmpi (dev, {"ps", "ps2", "psc", "psc2", "pdf"})))
         if (have_ghostscript)
-          file_exists = ((numel (dir (name)) == 1) && (! isdir (name)));
+          file_exists = ((numel (dir (opts.name)) == 1) && (! isdir (opts.name)));
           if (! file_exists)
-            append_to_file = 0;
+            opts.append_to_file = 0;
           end
         end
       else
         warning ("print.m: appended output is not supported for device '%s'", dev)
-        append_to_file = 0;
+        opts.append_to_file = 0;
       endif
     endif
 
     if (strcmp (dev, "tex"))
       dev = "epslatex";
     elseif (strcmp (dev, "ill"))
       dev = "aifm";
     elseif (strcmp (dev, "cdr"))
@@ -350,33 +117,33 @@ function print (varargin)
       dev = "emf";
     elseif (strcmp (dev, "jpg"))
       dev = "jpeg";
     endif
 
     if (strcmp (dev, "epslatex"))
       ## gnuplot 4.0 wants ".eps" in the output name    
       if (! __gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
-        name = cstrcat (name(1:dot), "eps");
+        opts.name = cstrcat (name(1:dot), "eps");
       endif
     endif
 
     ## Check if the specified device is one that is supported by gnuplot.
     ## If not, assume it is a device/format supported by Ghostscript.
     if (! any (strcmp (dev, dev_list)) && have_ghostscript)
-      ghostscript_output = name;
+      ghostscript_output = opts.name;
       ghostscript_device = dev;
       if (doprint)
         ## If printing, use color postscript.
         dev = "psc";
-        name = cstrcat (tmpnam, ".ps");
+        opts.name = cstrcat (tmpnam, ".ps");
       else
         ## If saving to a file, use color encapsulated postscript.
         dev = "epsc";
-        name = cstrcat (tmpnam, ".eps");
+        opts.name = cstrcat (tmpnam, ".eps");
       endif
     elseif (doprint && all (! strcmpi (suffixes {strcmpi (dev_list, dev)}, 
                                        {"ps", "eps", "hpgl"})))
       ## When not using Ghostscript, verify the format is compatible with
       ## hard copy output.
       error ("print: missing file name, or invalid print format.");
     else
       ghostscript_output = "";
@@ -406,135 +173,135 @@ function print (varargin)
         if (dev(1) == "e")
           options = "eps ";
         else
           options = "";
         endif
         termn = "postscript";
       endif
 
-      if (any (dev == "c") || use_color > 0
-          || (! isempty (strfind (dev, "tex")) && use_color == 0))
-        use_color = 1;
+      if (any (dev == "c") || opts.use_color > 0
+          || (! isempty (strfind (dev, "tex")) && opts.use_color == 0))
+        opts.use_color = 1;
       else
-        use_color = -1;
+        opts.use_color = -1;
       endif
       
-      if (use_color > 0)
-        if (force_solid < 0)
+      if (opts.use_color > 0)
+        if (opts.force_solid < 0)
           options = cstrcat (options, "color dashed ");
         else
           options = cstrcat (options, "color solid ");
         endif
       else
-        if (force_solid > 0)
+        if (opts.force_solid > 0)
           options = cstrcat (options, "mono solid ");
         else
           options = cstrcat (options, "mono dashed ");
         endif
       endif
 
-      if (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
+      if (! isempty (opts.font))
+        options = cstrcat (options, "\"", opts.font, "\" ");
       endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
+      if (! isempty (opts.fontsize))
+        options = cstrcat (options, " ", opts.fontsize);
       endif
 
     elseif (strcmp (dev, "tikz"))
-      if (! isempty (font) && ! isempty (fontsize))
-        options = cstrcat (options, "\"", font, ",", fontsize, "\" ");
+      if (! isempty (font) && ! isempty (opts.fontsize))
+        options = cstrcat (options, "\"", opts.font, ",", opts.fontsize, "\" ");
       elseif (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
+        options = cstrcat (options, "\"", opts.font, "\" ");
       else
         options = "";
       endif
 
     elseif (strcmp (dev, "aifm") || strcmp (dev, "corel"))
       ## Adobe Illustrator, CorelDraw
-      if (use_color >= 0)
+      if (opts.use_color >= 0)
         options = " color";
       else
         options = " mono";
       endif
-      if (! isempty (font))
-        options = cstrcat (options, " \"", font, "\"");
+      if (! isempty (opts.font))
+        options = cstrcat (options, " \"", opts.font, "\"");
       endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
+      if (! isempty (opts.fontsize))
+        options = cstrcat (options, " ", opts.fontsize);
       endif
 
     elseif (strcmp (dev, "fig"))
       ## XFig
       options = orientation;
-      if (use_color >= 0)
+      if (opts.use_color >= 0)
         options = " color";
       else
         options = " mono";
       endif
       options = cstrcat (options, " ", special_flag);
-      if (! isempty (fontsize))
-        options = cstrcat (options, " fontsize ", fontsize);
+      if (! isempty (opts.fontsize))
+        options = cstrcat (options, " fontsize ", opts.fontsize);
       endif
 
     elseif (strcmp (dev, "emf"))
       ## Enhanced Metafile format
       options = " ";
-      if (use_color >= 0)
+      if (opts.use_color >= 0)
         options = " color";
       else
         options = " mono";
       endif
-      if (force_solid >= 0)
+      if (opts.force_solid >= 0)
         options = cstrcat (options, " solid");
       endif
-      if (! isempty (font))
-        options = cstrcat (options, " \"", font, "\"");
+      if (! isempty (opts.font))
+        options = cstrcat (options, " \"", opts.font, "\"");
       endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
+      if (! isempty (opts.fontsize))
+        options = cstrcat (options, " ", opts.fontsize);
       endif
 
     elseif (any (strcmp (dev, bitmap_devices)))
 
-      if (isempty (canvas_size) && isempty (resolution) 
+      if (isempty (opts.canvas_size) && isempty (opts.resolution) 
           && any (strcmp (dev, {"pbm", "gif", "jpeg", "png"})))
         options = "";
       elseif (strcmp (dev, "svg"))
         ## Referring to size, either "dynamic" or "fixed"
         options = "fixed";
       else
         options = "";
       end
-      if (! isempty (canvas_size))
-        options = cstrcat (options, " size ", canvas_size);
+      if (! isempty (opts.canvas_size))
+        options = cstrcat (options, " size ", opts.canvas_size);
       endif
 
     elseif (any (strcmp (dev, {"dxf", "mf", "hpgl"})))
       ## AutoCad DXF, METAFONT, HPGL
       options = "";
 
     elseif (strcmp (dev, "pdf"))
       ## Portable Document format
       options = " ";
-      if (use_color >= 0)
+      if (opts.use_color >= 0)
         options = "color";
       else
         options = "mono";
       endif
-      if (force_solid >= 0)
+      if (opts.force_solid >= 0)
         options = cstrcat (options, " solid");
-      elseif (force_solid < 0)
+      elseif (opts.force_solid < 0)
         options = cstrcat (options, " dashed");
       endif
-      if (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
+      if (! isempty (opts.font))
+        options = cstrcat (options, "\"", opts.font, "\" ");
       endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
+      if (! isempty (opts.fontsize))
+        options = cstrcat (options, " ", opts.fontsize);
       endif
 
     endif
  
     if (__gnuplot_has_feature__ ("variable_GPVAL_TERMINALS"))
       available_terminals = __gnuplot_get_var__ (gcf, "GPVAL_TERMINALS");
       available_terminals = regexp (available_terminals, "\\b\\w+\\b", "match");
       ## Favor the cairo terminals.
@@ -561,20 +328,20 @@ function print (varargin)
     else
       gnuplot_supports_term = true;
     endif
 
     if (! gnuplot_supports_term)
       if (strcmp (termn, "pdf"))
         ## If there the installed gnuplot does not support pdf, use Ghostscript.
         ghostscript_device = "pdfwrite";
-        if (strfind (name, ".pdf") == numel (name) - 3)
-          ghostscript_output = name;
+        if (strfind (opts.name, ".pdf") == numel (opts.name) - 3)
+          ghostscript_output = opts.name;
         else
-          ghostscript_output = strcat (name, ".pdf");
+          ghostscript_output = strcat (opts.name, ".pdf");
         endif
         name = cstrcat (tmpnam, ".ps");
         termn = "postscript";
         ## All "options" for pdf work for postscript as well.
       else
         error ("print: the device, \"%s\", is not available.", dev)
       endif
     endif
@@ -607,147 +374,147 @@ function print (varargin)
         orientation = paperorientation;
       endif
       ## This is done here to accommodate ghostscript conversion.
       options = cstrcat (orientation, " ", options);
     end
 
     new_terminal = cstrcat (termn, " ", options);
 
-    mono = (use_color < 0);
+    mono = (opts.use_color < 0);
 
     terminals_for_prn = {"postscript", "pdf", "pdfcairo"};
     output_for_printer = any (strncmp (termn, terminals_for_prn, numel(termn)));
 
-    if (isempty (resolution))
+    if (isempty (opts.resolution))
       if (any (strcmp (dev, {"emf", "svg"})) || output_for_printer)
-        resolution = get (0, "screenpixelsperinch");
+        opts.resolution = get (0, "screenpixelsperinch");
       else
-        resolution = 150;
+        opts.resolution = 150;
       endif
     else
-      resolution = str2num (resolution);
-      if (resolution == 0)
-        resolution = get (0, "screenpixelsperinch");
+      opts.resolution = str2num (opts.resolution);
+      if (opts.resolution == 0)
+        opts.resolution = get (0, "screenpixelsperinch");
       endif
     endif
     figure_properties = get (gcf);
     if (! isfield (figure_properties, "__pixels_per_inch__"))
-      addproperty ("__pixels_per_inch__", gcf, "double", resolution);
+      addproperty ("__pixels_per_inch__", gcf, "double", opts.resolution);
     endif
-    set (gcf, "__pixels_per_inch__", resolution)
+    set (gcf, "__pixels_per_inch__", opts.resolution)
 
     unwind_protect
       set (gcf, "paperunits", "inches");
       set (gcf, "units", "pixels");
       set (gcf, "color", "none");
       restore_properties = true;
       if ((! output_for_printer || is_eps_file) && ! doprint)
         ## If not PDF or PostScript, and the result is not being sent to a printer,
         ## render an image the size of the paperposition box.
         ## Trigger the listener to convert all paper props to inches.
-        if (! isempty (canvas_size))
-          size_in_pixels = sscanf (canvas_size ,"%d, %d");
+        if (! isempty (opts.canvas_size))
+          size_in_pixels = sscanf (opts.canvas_size ,"%d, %d");
           size_in_pixels = reshape (size_in_pixels, [1, numel(size_in_pixels)]);
-          papersize_in_inches = size_in_pixels ./ resolution;
+          papersize_in_inches = size_in_pixels ./ opts.resolution;
           paperposition_in_inches = [0, 0, papersize_in_inches];
         else
           paperposition_in_inches = get (gcf, "paperposition");
           paperposition_in_inches(1:2) = 0;
           papersize_in_inches = paperposition_in_inches(3:4);
         endif
         set (gcf, "papersize", papersize_in_inches);
         set (gcf, "paperposition", paperposition_in_inches);
         set (gcf, "paperpositionmode", "manual");
       else
         if (strcmp (p.paperpositionmode, "auto"))
           size_in_pixels = get (gcf, "position")(3:4);
-          paperposition_in_inches(3:4) = size_in_pixels ./ resolution;
+          paperposition_in_inches(3:4) = size_in_pixels ./ opts.resolution;
           paperposition_in_inches(1:2) = (p.papersize - paperposition_in_inches(3:4))/2;
         else
           paperposition_in_inches = p.paperposition;
         endif
-        if (! isempty (orientation) && ! strcmp (orientation, paperorientation))
+        if (! isempty (opts.orientation) && ! strcmp (opts.orientation, paperorientation))
           ## When -landscape/portrait changes the orientation, flip both the
           ## papersize and paperposition.
           restore_properties = true;
           set (gcf, "papersize", p.papersize([2, 1]));
           set (gcf, "paperposition", paperposition_in_inches([2, 1, 4, 3]));
         else
           set (gcf, "paperposition", paperposition_in_inches);
         endif
       endif
-      if (use_color < 0)
+      if (opts.use_color < 0)
         [objs_with_color, color_of_objs] = convert_color2mono (gcf);
       endif
-    if (append_to_file)
-         appended_file_name = name;
+    if (opts.append_to_file)
+         appended_file_name = opts.name;
          if (index(termn, "pdf"))
-           name = cstrcat (tmpnam, ".pdf");
+           opts.name = cstrcat (tmpnam, ".pdf");
            temp_name = cstrcat (tmpnam, ".pdf");
            ghostscript_device = "pdfwrite";
          else
-           name = cstrcat (tmpnam, ".ps");
+           opts.name = cstrcat (tmpnam, ".ps");
            temp_name = cstrcat (tmpnam, ".ps");
            ghostscript_device = "pswrite";
          endif
     endif
-      if (debug)
-        drawnow (new_terminal, name, mono, debug_file);
+      if (opts.debug)
+        drawnow (new_terminal, opts.name, mono, debug_file);
       else
-        drawnow (new_terminal, name, mono);
+        drawnow (new_terminal, opts.name, mono);
       endif
-      if (append_to_file)
+      if (opts.append_to_file)
         ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE";
         command = sprintf ("%s %s -sDEVICE=%s -sOutputFile=%s %s %s -q", ...
                     ghostscript_binary, ghostscript_options, ghostscript_device,  ...
-                    temp_name, appended_file_name, name);
+                    temp_name, appended_file_name, opts.name);
         status1 = system (command);
         status2 = system (sprintf ("mv %s %s", temp_name, appended_file_name));
         if (status1 != 0 || status2 != 0)
           error ("print: output failed to append to '%s'.", appended_file_name);
         endif
       endif
     unwind_protect_cleanup
       ## FIXME - it would be nice to delete "__pixels_per_inch__" property here.
       if (restore_properties)
         props = fieldnames (p);
         for n = 1:numel(props)
           set (gcf, props{n}, p.(props{n}))
         endfor
       endif
-      if (use_color < 0)
+      if (opts.use_color < 0)
         convert_mono_to_or_from_color (objs_with_color, color_of_objs, false);
       endif
     end_unwind_protect
 
     if (! isempty (ghostscript_output))
       if (is_eps_file && tight_flag)
         ## If gnuplot's output is an eps-file then crop at the bounding box.
         fix_eps_bbox (name, ghostscript_binary);
       endif
       ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE -dTextAlphaBits=4";
       if (is_eps_file)
         ghostscript_options = sprintf ("%s -dEPSCrop", ghostscript_options);
       endif
       if (isempty (strfind (lower (ghostscript_device), "write")))
         ## If output is a bitmap then include the resolution
-        ghostscript_options = sprintf ("%s -r%d", ghostscript_options, resolution);
+        ghostscript_options = sprintf ("%s -r%d", ghostscript_options, opts.resolution);
       endif
       ghostscript_options = sprintf ("%s -sDEVICE=%s", ghostscript_options,
                                      ghostscript_device);
       command = sprintf ("\"%s\" %s -sOutputFile=\"%s\" \"%s\" 2>&1", ghostscript_binary,
-                          ghostscript_options, ghostscript_output, name);
+                          ghostscript_options, ghostscript_output, opts.name);
       [errcode, output] = system (command);
       unlink (name);
       if (errcode)
         error ("print: Conversion failed, %s -> %s.\nError was:\n%s\n",
                name, ghostscript_output, output);
       endif
-    elseif (is_eps_file && tight_flag && ! doprint)
+    elseif (is_eps_file && opts.tight_flag && ! doprint)
       ## If the saved output file is an eps file, use ghostscript to set a tight bbox.
       ## This may result in a smaller or larger bbox geometry.
       if (have_ghostscript)
         fix_eps_bbox (name, ghostscript_binary);
       endif
     endif
 
     if (doprint)
diff --git a/scripts/plot/__go_draw_figure__.m b/scripts/plot/__go_draw_figure__.m
--- a/scripts/plot/__go_draw_figure__.m
+++ b/scripts/plot/__go_draw_figure__.m
@@ -87,16 +87,19 @@ function __go_draw_figure__ (h, plot_str
                 set (kids(i), "units", "normalized");
                 fg = get (kids(i), "color");
                 if (isnumeric (fg) && strcmp (get (kids(i), "visible"), "on"))
                   fprintf (plot_stream, "set obj 2 rectangle from graph 0,0 to graph 1,1 behind fc rgb \"#%02x%02x%02x\"\n", 255 * fg);
                   fg_is_set = true;
                 else
                   fg_is_set = false;
                 endif
+                if (bg_is_set)
+                  fprintf (plot_stream, "set border linecolor rgb \"#%02x%02x%02x\"\n", 255 * (1 - bg));
+                endif
                 if (output_to_paper)
                   axes_position_on_page = orig_axes_position .* paper_position([3, 4, 3 ,4]);
                   axes_position_on_page(1:2) = axes_position_on_page(1:2) +  paper_position(1:2);
                   set (kids(i), "position", axes_position_on_page);
                   __go_draw_axes__ (kids(i), plot_stream, enhanced, mono, implicit_margin, bg_is_set);
                 else
                   ## Return axes "units" and "position" back to their original values.
                   __go_draw_axes__ (kids(i), plot_stream, enhanced, mono, implicit_margin, bg_is_set);
diff --git a/scripts/plot/__print_parse_opts__.m b/scripts/plot/__print_parse_opts__.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/__print_parse_opts__.m
@@ -0,0 +1,116 @@
+## Copyright (C) 2008, 2009 David Bateman
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{x}, @var{y}, @var{buttons}] =} ginput (@var{n})
+## Return which mouse buttons were pressed and keys were hit on the current
+## figure.  If @var{n} is defined, then wait for @var{n} mouse clicks
+## before returning.  If @var{n} is not defined, then @code{ginput} will
+## loop until the return key is pressed.
+## @end deftypefn
+
+function arg_st = __print_parse_opts__ (varargin)
+
+  arg_st.orientation = "";
+  arg_st.use_color = 0; # 0=default, -1=mono, +1=color
+  arg_st.append_to_file = 0;
+  arg_st.force_solid = 0; # 0=default, -1=dashed, +1=solid
+  arg_st.fontsize = "";
+  arg_st.font = "";
+  arg_st.canvas_size = "";
+  arg_st.name = "";
+  arg_st.devopt = "";
+  arg_st.printer = "";
+  arg_st.debug = false;
+  arg_st.debug_file = "octave-print-commands.log";
+  arg_st.special_flag = "textnormal";
+  arg_st.tight_flag = false;
+  arg_st.resolution = "";
+  
+  old_fig = get (0, "currentfigure");
+
+  unwind_protect
+    for i = 1:nargin
+      arg = varargin{i};
+      if (ischar (arg))
+        if (strcmp (arg, "-color"))
+          arg_st.use_color = 1;
+        elseif (strcmp (arg, "-append"))
+          arg_st.append_to_file = 1;
+        elseif (strcmp (arg, "-mono"))
+          arg_st.use_color = -1;
+        elseif (strcmp (arg, "-solid"))
+          arg_st.force_solid = 1;
+        elseif (strcmp (arg, "-dashed"))
+          arg_st.force_solid = -1;
+        elseif (strcmp (arg, "-portrait"))
+          arg_st.orientation = "portrait";
+        elseif (strcmp (arg, "-landscape"))
+          arg_st.orientation = "landscape";
+        elseif (strcmp (arg, "-tight"))
+          arg_st.tight_flag = true;
+        elseif (strcmp (arg, "-textspecial"))
+          arg_st.special_flag = "textspecial";
+        elseif (strncmp (arg, "-debug", 6))
+          arg_st.debug = true;
+          if (length (arg) > 7)
+            arg_st.debug_file = arg(8:end);
+          endif
+        elseif (length (arg) > 2 && arg(1:2) == "-d")
+          arg_st.devopt = tolower(arg(3:end));
+        elseif (length (arg) > 2 && arg(1:2) == "-P")
+          arg_st.printer = arg;
+        elseif ((length (arg) > 2) && arg(1:2) == "-G")
+          arg_st.ghostscript_binary = arg(3:end);
+          if (exist (arg_st.ghostscript_binary, "file") != 2)
+            arg_st.ghostscript_binary = file_in_path (EXEC_PATH, arg_st.ghostscript_binary);
+          endif
+          if (isempty (arg_st.ghostscript_binary))
+            error ("print: Ghostscript binary ""%s"" could not be located", arg(3:end))
+          endif
+        elseif (length (arg) > 2 && arg(1:2) == "-F")
+          idx = rindex (arg, ":");
+          if (idx)
+            arg_st.font = arg(3:idx-1);
+            arg_st.fontsize = arg(idx+1:length(arg));
+          else
+            arg_st.font = arg(3:length(arg));
+          endif
+        elseif (length (arg) > 2 && arg(1:2) == "-S")
+          arg_st.canvas_size = arg(3:length(arg));
+        elseif (length (arg) > 2 && arg(1:2) == "-r")
+          arg_st.resolution = arg(3:length(arg));
+        elseif (length (arg) >= 1 && arg(1) == "-")
+          error ("print: unknown option `%s'", arg);
+        elseif (length (arg) > 0)
+          arg_st.name = arg;
+        endif
+      elseif (isfigure (arg))
+        arg_st.figure (arg);
+      else
+        error ("print: expecting inputs to be character string options or a figure handle");
+      endif
+    endfor
+  unwind_protect_cleanup
+    if (isfigure (old_fig))
+      figure (old_fig)
+    endif
+  end_unwind_protect
+
+endfunction
+
diff --git a/scripts/plot/module.mk b/scripts/plot/module.mk
--- a/scripts/plot/module.mk
+++ b/scripts/plot/module.mk
@@ -119,16 +119,19 @@ plot_FCN_FILES = \
   plot/peaks.m \
   plot/pie.m \
   plot/plot.m \
   plot/plot3.m \
   plot/plotmatrix.m \
   plot/plotyy.m \
   plot/polar.m \
   plot/print.m \
+  plot/__gnuplot_print__.m \
+  plot/__fltk_print__.m \
+  plot/__print_parse_opts__.m \
   plot/quiver.m \
   plot/quiver3.m \
   plot/refresh.m \
   plot/refreshdata.m \
   plot/replot.m \
   plot/ribbon.m \
   plot/rose.m \
   plot/scatter.m \
@@ -152,16 +155,17 @@ plot_FCN_FILES = \
   plot/surface.m \
   plot/surfc.m \
   plot/surfl.m \
   plot/surfnorm.m \
   plot/text.m \
   plot/title.m \
   plot/view.m \
   plot/waitforbuttonpress.m \
+  plot/whitebg.m \
   plot/xlabel.m \
   plot/xlim.m \
   plot/ylabel.m \
   plot/ylim.m \
   plot/zlabel.m \
   plot/zlim.m \
   $(plot_PRIVATE_FCN_FILES)
 
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -1,10 +1,9 @@
-## Copyright (C) 1999, 2005, 2006, 2007, 2008, 2009 Daniel Heiserer
-## Copyright (C) 2001 Laurent Mazet
+## Copyright (C) 2008, 2009 David Bateman
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -170,719 +169,18 @@
 ## and 'SwitzerlandLight' for Corel.  It can also be 'Times-Roman'.
 ## @var{size} is given in points.  @var{fontname} is ignored for the
 ## fig device.
 ## @end table
 ##
 ## The filename and options can be given in any order.
 ## @end deftypefn
 
-## Author: Daniel Heiserer <Daniel.heiserer@physik.tu-muenchen.de>
-## Adapted-By: jwe
-
-function print (varargin)
-
-  persistent warn_on_inconsistent_orientation = true
-  orientation = "";
-  use_color = 0; # 0=default, -1=mono, +1=color
-  append_to_file = 0;
-  force_solid = 0; # 0=default, -1=dashed, +1=solid
-  fontsize = "";
-  font = "";
-  canvas_size = "";
-  name = "";
-  devopt = "";
-  printer = "";
-  debug = false;
-  debug_file = "octave-print-commands.log";
-  special_flag = "textnormal";
-  tight_flag = false;
-  resolution = "";
-
-  persistent ghostscript_binary = "";
-  if (isempty (ghostscript_binary))
-    ghostscript_binary = getenv ("GSC");
-    ng = 0;
-    if (isunix ())
-      ## Unix - Includes Mac OSX and Cygwin.
-      gs_binaries = {"gs", "gs.exe"};
-    else
-      ## pc - Includes Win32 and mingw.
-      gs_binaries = {"gs.exe", "gswin32c.exe"};
-    endif
-    while (ng < numel (gs_binaries) && isempty (ghostscript_binary))
-      ng = ng + 1;
-      ghostscript_binary = file_in_path (EXEC_PATH, gs_binaries{ng});
-    endwhile
-  endif
-
-  old_fig = get (0, "currentfigure");
-  unwind_protect
-    ## Ensure the last figure is on the screen for single line commands like
-    ##   plot(...); print(...);
-    drawnow ();
-
-    for i = 1:nargin
-      arg = varargin{i};
-      if (ischar (arg))
-        if (strcmp (arg, "-color"))
-          use_color = 1;
-        elseif (strcmp (arg, "-append"))
-          append_to_file = 1;
-        elseif (strcmp (arg, "-mono"))
-          use_color = -1;
-        elseif (strcmp (arg, "-solid"))
-          force_solid = 1;
-        elseif (strcmp (arg, "-dashed"))
-          force_solid = -1;
-        elseif (strcmp (arg, "-portrait"))
-          orientation = "portrait";
-        elseif (strcmp (arg, "-landscape"))
-          orientation = "landscape";
-        elseif (strcmp (arg, "-tight"))
-          tight_flag = true;
-        elseif (strcmp (arg, "-textspecial"))
-          special_flag = "textspecial";
-        elseif (strncmp (arg, "-debug", 6))
-          debug = true;
-          if (length (arg) > 7)
-            debug_file = arg(8:end);
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-d")
-          devopt = tolower(arg(3:end));
-        elseif (length (arg) > 2 && arg(1:2) == "-P")
-          printer = arg;
-        elseif ((length (arg) > 2) && arg(1:2) == "-G")
-          ghostscript_binary = arg(3:end);
-          if (exist (ghostscript_binary, "file") != 2)
-            ghostscript_binary = file_in_path (EXEC_PATH, ghostscript_binary);
-          endif
-          if (isempty (ghostscript_binary))
-            error ("print: Ghostscript binary ""%s"" could not be located", arg(3:end))
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-F")
-          idx = rindex (arg, ":");
-          if (idx)
-            font = arg(3:idx-1);
-            fontsize = arg(idx+1:length(arg));
-          else
-            font = arg(3:length(arg));
-          endif
-        elseif (length (arg) > 2 && arg(1:2) == "-S")
-          canvas_size = arg(3:length(arg));
-        elseif (length (arg) > 2 && arg(1:2) == "-r")
-          resolution = arg(3:length(arg));
-        elseif (length (arg) >= 1 && arg(1) == "-")
-          error ("print: unknown option `%s'", arg);
-        elseif (length (arg) > 0)
-          name = arg;
-        endif
-      elseif (isfigure (arg))
-        figure (arg);
-      else
-        error ("print: expecting inputs to be character string options or a figure handle");
-      endif
-    endfor
-
-    have_ghostscript = (exist (ghostscript_binary, "file") == 2);
-
-    doprint = isempty (name);
-    if (doprint)
-      if (isempty (devopt))
-        if (use_color < 0)
-          devopt = "ps";
-          printname = cstrcat (tmpnam, ".ps");
-        else
-          devopt = "psc";
-          printname = cstrcat (tmpnam, ".psc");
-        endif
-      else
-        printname = cstrcat (tmpnam, ".", devopt);
-      endif
-      name = printname;
-    endif
-
-    dot = rindex (name, ".");
-    if (isempty (devopt))
-      if (dot == 0)
-        error ("print: no format specified");
-      else
-        dev = tolower (name(dot+1:end));
-      endif
-    else
-      dev = devopt;
-    endif
-
-    dev_list = {"aifm", "corel", "fig", "png", "jpeg", ...
-                "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
-                "ps", "ps2", "psc", "psc2", "eps", "eps2", ...
-                "epsc", "epsc2", "emf", "pdf", "pslatex", ...
-                "epslatex", "epslatexstandalone", "pstex", "tikz"};
-    suffixes = {"ai", "cdr", "fig", "png", "jpeg", ...
-                "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
-                "ps", "ps", "ps", "ps", "eps", "eps", ...
-                "eps", "eps", "emf", "pdf", "tex", ...
-                "tex", "tex", "tex", "tikz"};
-    if (dot == 0)
-      name = strcat (name, ".", suffixes {strcmpi (dev_list, dev)});
-      dot = rindex (name, ".");
-    endif
-
-    if (append_to_file)
-      if (any (strcmpi (dev, {"ps", "ps2", "psc", "psc2", "pdf"})))
-        if (have_ghostscript)
-          file_exists = ((numel (dir (name)) == 1) && (! isdir (name)));
-          if (! file_exists)
-            append_to_file = 0;
-          end
-        end
-      else
-        warning ("print.m: appended output is not supported for device '%s'", dev)
-        append_to_file = 0;
-      endif
-    endif
-
-    if (strcmp (dev, "tex"))
-      dev = "epslatex";
-    elseif (strcmp (dev, "ill"))
-      dev = "aifm";
-    elseif (strcmp (dev, "cdr"))
-      dev = "corel";
-    elseif (strcmp (dev, "meta"))
-      dev = "emf";
-    elseif (strcmp (dev, "jpg"))
-      dev = "jpeg";
-    endif
-
-    if (strcmp (dev, "epslatex"))
-      ## gnuplot 4.0 wants ".eps" in the output name    
-      if (! __gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
-        name = cstrcat (name(1:dot), "eps");
-      endif
-    endif
-
-    ## Check if the specified device is one that is supported by gnuplot.
-    ## If not, assume it is a device/format supported by Ghostscript.
-    if (! any (strcmp (dev, dev_list)) && have_ghostscript)
-      ghostscript_output = name;
-      ghostscript_device = dev;
-      if (doprint)
-        ## If printing, use color postscript.
-        dev = "psc";
-        name = cstrcat (tmpnam, ".ps");
-      else
-        ## If saving to a file, use color encapsulated postscript.
-        dev = "epsc";
-        name = cstrcat (tmpnam, ".eps");
-      endif
-    elseif (doprint && all (! strcmpi (suffixes {strcmpi (dev_list, dev)}, 
-                                       {"ps", "eps", "hpgl"})))
-      ## When not using Ghostscript, verify the format is compatible with
-      ## hard copy output.
-      error ("print: missing file name, or invalid print format.");
-    else
-      ghostscript_output = "";
-    endif
-
-    termn = dev;
-
-    ## SVG isn't actually a bitmap, but gnuplot treats its size option as it
-    ## does the bitmap terminals.
-    bitmap_devices = {"emf", "gif", "jpeg", "pbm", "png", "svg"};
-
-    if (any (strcmp (dev, {"ps", "ps2", "psc", "psc2", "epsc", "epsc2", ...
-                           "eps", "eps2", "pstex", "pslatex", "epslatex", ...
-                           "epslatexstandalone"})))
-
-      ## Various postscript options
-      if (any (strcmp (dev, {"pstex", "pslatex", "epslatex"})))
-        options = "";
-      elseif (strcmp (dev, "epslatexstandalone"))
-        if (__gnuplot_has_feature__ ("epslatexstandalone_terminal"))
-          termn = "epslatex";
-          options = "standalone ";
-        else
-          error ("print: epslatexstandalone needs gnuplot 4.2 or higher");
-        endif
-      else
-        if (dev(1) == "e")
-          options = "eps ";
-        else
-          options = "";
-        endif
-        termn = "postscript";
-      endif
-
-      if (any (dev == "c") || use_color > 0
-          || (! isempty (strfind (dev, "tex")) && use_color == 0))
-        use_color = 1;
-      else
-        use_color = -1;
-      endif
-      
-      if (use_color > 0)
-        if (force_solid < 0)
-          options = cstrcat (options, "color dashed ");
-        else
-          options = cstrcat (options, "color solid ");
-        endif
-      else
-        if (force_solid > 0)
-          options = cstrcat (options, "mono solid ");
-        else
-          options = cstrcat (options, "mono dashed ");
-        endif
-      endif
-
-      if (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
-      endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
-      endif
-
-    elseif (strcmp (dev, "tikz"))
-      if (! isempty (font) && ! isempty (fontsize))
-        options = cstrcat (options, "\"", font, ",", fontsize, "\" ");
-      elseif (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
-      else
-        options = "";
-      endif
-
-    elseif (strcmp (dev, "aifm") || strcmp (dev, "corel"))
-      ## Adobe Illustrator, CorelDraw
-      if (use_color >= 0)
-        options = " color";
-      else
-        options = " mono";
-      endif
-      if (! isempty (font))
-        options = cstrcat (options, " \"", font, "\"");
-      endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
-      endif
-
-    elseif (strcmp (dev, "fig"))
-      ## XFig
-      options = orientation;
-      if (use_color >= 0)
-        options = " color";
-      else
-        options = " mono";
-      endif
-      options = cstrcat (options, " ", special_flag);
-      if (! isempty (fontsize))
-        options = cstrcat (options, " fontsize ", fontsize);
-      endif
+function varargout = print (varargin)
 
-    elseif (strcmp (dev, "emf"))
-      ## Enhanced Metafile format
-      options = " ";
-      if (use_color >= 0)
-        options = " color";
-      else
-        options = " mono";
-      endif
-      if (force_solid >= 0)
-        options = cstrcat (options, " solid");
-      endif
-      if (! isempty (font))
-        options = cstrcat (options, " \"", font, "\"");
-      endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
-      endif
-
-    elseif (any (strcmp (dev, bitmap_devices)))
-
-      if (isempty (canvas_size) && isempty (resolution) 
-          && any (strcmp (dev, {"pbm", "gif", "jpeg", "png"})))
-        options = "";
-      elseif (strcmp (dev, "svg"))
-        ## Referring to size, either "dynamic" or "fixed"
-        options = "fixed";
-      else
-        options = "";
-      end
-      if (! isempty (canvas_size))
-        options = cstrcat (options, " size ", canvas_size);
-      endif
-
-    elseif (any (strcmp (dev, {"dxf", "mf", "hpgl"})))
-      ## AutoCad DXF, METAFONT, HPGL
-      options = "";
-
-    elseif (strcmp (dev, "pdf"))
-      ## Portable Document format
-      options = " ";
-      if (use_color >= 0)
-        options = "color";
-      else
-        options = "mono";
-      endif
-      if (force_solid >= 0)
-        options = cstrcat (options, " solid");
-      elseif (force_solid < 0)
-        options = cstrcat (options, " dashed");
-      endif
-      if (! isempty (font))
-        options = cstrcat (options, "\"", font, "\" ");
-      endif
-      if (! isempty (fontsize))
-        options = cstrcat (options, " ", fontsize);
-      endif
-
-    endif
- 
-    if (__gnuplot_has_feature__ ("variable_GPVAL_TERMINALS"))
-      available_terminals = __gnuplot_get_var__ (gcf, "GPVAL_TERMINALS");
-      available_terminals = regexp (available_terminals, "\\b\\w+\\b", "match");
-      ## Favor the cairo terminals.
-      if (strcmp (termn, "pdf") 
-          && any (strcmp (available_terminals, "pdfcairo")))
-        termn = "pdfcairo";
-        gnuplot_supports_term = true;
-      elseif (strcmp (termn, "png")
-              && any (strcmp (available_terminals, "pngcairo")))
-        termn = "pngcairo";
-        gnuplot_supports_term = true;
-      else
-        gnuplot_supports_term = any (strcmp (available_terminals, termn));
-      endif
-    elseif (strcmp (termn, "pdf"))
-      ## Some Linux variants do not include a "pdf" capable gnuplot.
-      ## To be safe, use Ghostscript.
-      if (have_ghostscript)
-        gnuplot_supports_term = false;
-        ghostscript_device = "pdfwrite";
-      else
-        gnuplot_supports_term = true;
-      endif
-    else
-      gnuplot_supports_term = true;
-    endif
-
-    if (! gnuplot_supports_term)
-      if (strcmp (termn, "pdf"))
-        ## If there the installed gnuplot does not support pdf, use Ghostscript.
-        ghostscript_device = "pdfwrite";
-        if (strfind (name, ".pdf") == numel (name) - 3)
-          ghostscript_output = name;
-        else
-          ghostscript_output = strcat (name, ".pdf");
-        endif
-        name = cstrcat (tmpnam, ".ps");
-        termn = "postscript";
-        ## All "options" for pdf work for postscript as well.
-      else
-        error ("print: the device, \"%s\", is not available.", dev)
-      endif
-    endif
-
-    is_eps_file = strncmp (dev, "eps", 3);
-    p.units = get (gcf, "units");
-    p.paperunits = get (gcf, "paperunits");
-    p.papersize = get (gcf, "papersize");
-    p.paperposition = get (gcf, "paperposition");
-    p.paperpositionmode = get (gcf, "paperpositionmode");
-    p.paperorientation = get (gcf, "paperorientation");
-    p.color = get (gcf, "color");
-    if (p.papersize(1) > p.papersize(2))
-      paperorientation = "landscape";
-    else
-      paperorientation = "portrait";
-    endif
-    if (! strcmp (paperorientation, get (gcf, "paperorientation"))
-        && warn_on_inconsistent_orientation)
-       msg = {"print.m - inconsistent papersize and paperorientation properties.\n",
-               sprintf("         papersize = %.2f, %.2f\n", p.papersize),
-               sprintf("         paperorientation = \"%s\"\n", p.paperorientation),
-                       "         the paperorientation property has been ignored"};
-      warning ("%s",msg{:})
-      warn_on_inconsistent_orientation = false;
-    endif
-
-    if (strcmp (termn, "postscript") && ! strncmp (dev, "eps", 3))
-      if (isempty (orientation))
-        orientation = paperorientation;
-      endif
-      ## This is done here to accommodate ghostscript conversion.
-      options = cstrcat (orientation, " ", options);
-    end
-
-    new_terminal = cstrcat (termn, " ", options);
-
-    mono = (use_color < 0);
-
-    terminals_for_prn = {"postscript", "pdf", "pdfcairo"};
-    output_for_printer = any (strncmp (termn, terminals_for_prn, numel(termn)));
+  f = gcf ();
+  drawnow ();
+  backend = (get (f, "__backend__"));
 
-    if (isempty (resolution))
-      if (any (strcmp (dev, {"emf", "svg"})) || output_for_printer)
-        resolution = get (0, "screenpixelsperinch");
-      else
-        resolution = 150;
-      endif
-    else
-      resolution = str2num (resolution);
-      if (resolution == 0)
-        resolution = get (0, "screenpixelsperinch");
-      endif
-    endif
-    figure_properties = get (gcf);
-    if (! isfield (figure_properties, "__pixels_per_inch__"))
-      addproperty ("__pixels_per_inch__", gcf, "double", resolution);
-    endif
-    set (gcf, "__pixels_per_inch__", resolution)
-
-    unwind_protect
-      set (gcf, "paperunits", "inches");
-      set (gcf, "units", "pixels");
-      set (gcf, "color", "none");
-      restore_properties = true;
-      if ((! output_for_printer || is_eps_file) && ! doprint)
-        ## If not PDF or PostScript, and the result is not being sent to a printer,
-        ## render an image the size of the paperposition box.
-        ## Trigger the listener to convert all paper props to inches.
-        if (! isempty (canvas_size))
-          size_in_pixels = sscanf (canvas_size ,"%d, %d");
-          size_in_pixels = reshape (size_in_pixels, [1, numel(size_in_pixels)]);
-          papersize_in_inches = size_in_pixels ./ resolution;
-          paperposition_in_inches = [0, 0, papersize_in_inches];
-        else
-          paperposition_in_inches = get (gcf, "paperposition");
-          paperposition_in_inches(1:2) = 0;
-          papersize_in_inches = paperposition_in_inches(3:4);
-        endif
-        set (gcf, "papersize", papersize_in_inches);
-        set (gcf, "paperposition", paperposition_in_inches);
-        set (gcf, "paperpositionmode", "manual");
-      else
-        if (strcmp (p.paperpositionmode, "auto"))
-          size_in_pixels = get (gcf, "position")(3:4);
-          paperposition_in_inches(3:4) = size_in_pixels ./ resolution;
-          paperposition_in_inches(1:2) = (p.papersize - paperposition_in_inches(3:4))/2;
-        else
-          paperposition_in_inches = p.paperposition;
-        endif
-        if (! isempty (orientation) && ! strcmp (orientation, paperorientation))
-          ## When -landscape/portrait changes the orientation, flip both the
-          ## papersize and paperposition.
-          restore_properties = true;
-          set (gcf, "papersize", p.papersize([2, 1]));
-          set (gcf, "paperposition", paperposition_in_inches([2, 1, 4, 3]));
-        else
-          set (gcf, "paperposition", paperposition_in_inches);
-        endif
-      endif
-      if (use_color < 0)
-        [objs_with_color, color_of_objs] = convert_color2mono (gcf);
-      endif
-    if (append_to_file)
-         appended_file_name = name;
-         if (index(termn, "pdf"))
-           name = cstrcat (tmpnam, ".pdf");
-           temp_name = cstrcat (tmpnam, ".pdf");
-           ghostscript_device = "pdfwrite";
-         else
-           name = cstrcat (tmpnam, ".ps");
-           temp_name = cstrcat (tmpnam, ".ps");
-           ghostscript_device = "pswrite";
-         endif
-    endif
-      if (debug)
-        drawnow (new_terminal, name, mono, debug_file);
-      else
-        drawnow (new_terminal, name, mono);
-      endif
-      if (append_to_file)
-        ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE";
-        command = sprintf ("%s %s -sDEVICE=%s -sOutputFile=%s %s %s -q", ...
-                    ghostscript_binary, ghostscript_options, ghostscript_device,  ...
-                    temp_name, appended_file_name, name);
-        status1 = system (command);
-        status2 = system (sprintf ("mv %s %s", temp_name, appended_file_name));
-        if (status1 != 0 || status2 != 0)
-          error ("print: output failed to append to '%s'.", appended_file_name);
-        endif
-      endif
-    unwind_protect_cleanup
-      ## FIXME - it would be nice to delete "__pixels_per_inch__" property here.
-      if (restore_properties)
-        props = fieldnames (p);
-        for n = 1:numel(props)
-          set (gcf, props{n}, p.(props{n}))
-        endfor
-      endif
-      if (use_color < 0)
-        convert_mono_to_or_from_color (objs_with_color, color_of_objs, false);
-      endif
-    end_unwind_protect
-
-    if (! isempty (ghostscript_output))
-      if (is_eps_file && tight_flag)
-        ## If gnuplot's output is an eps-file then crop at the bounding box.
-        fix_eps_bbox (name, ghostscript_binary);
-      endif
-      ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE -dTextAlphaBits=4";
-      if (is_eps_file)
-        ghostscript_options = sprintf ("%s -dEPSCrop", ghostscript_options);
-      endif
-      if (isempty (strfind (lower (ghostscript_device), "write")))
-        ## If output is a bitmap then include the resolution
-        ghostscript_options = sprintf ("%s -r%d", ghostscript_options, resolution);
-      endif
-      ghostscript_options = sprintf ("%s -sDEVICE=%s", ghostscript_options,
-                                     ghostscript_device);
-      command = sprintf ("\"%s\" %s -sOutputFile=\"%s\" \"%s\" 2>&1", ghostscript_binary,
-                          ghostscript_options, ghostscript_output, name);
-      [errcode, output] = system (command);
-      unlink (name);
-      if (errcode)
-        error ("print: Conversion failed, %s -> %s.\nError was:\n%s\n",
-               name, ghostscript_output, output);
-      endif
-    elseif (is_eps_file && tight_flag && ! doprint)
-      ## If the saved output file is an eps file, use ghostscript to set a tight bbox.
-      ## This may result in a smaller or larger bbox geometry.
-      if (have_ghostscript)
-        fix_eps_bbox (name, ghostscript_binary);
-      endif
-    endif
-
-    if (doprint)
-      if (isunix ())
-        prn_opt = "-l";
-      elseif (ispc ())
-        prn_opt = "-o l";
-      else
-        ## FIXME - besides Unix and Windows, what other OS's might be considered.
-        prn_opt = "";
-      endif
-      if (isempty (printer))
-        prn_cmd = sprintf ("lpr %s '%s' 2>&1", prn_opt, printname);
-      else
-        prn_cmd = sprintf ("lpr %s -P %s '%s' 2>&1", prn_opt, printer, printname);
-      endif
-      [status, output] = system (prn_cmd);
-      if (status != 0)
-        disp (output)
-        warning ("print.m: printing failed.")
-      endif
-      [status, output] = unlink (printname);
-      if (status != 0)
-        disp (output)
-        warning ("print.m: failed to delete temporay file, '%s'.", printname)
-      endif
-    endif
-
-  unwind_protect_cleanup
-    if (isfigure (old_fig))
-      figure (old_fig)
-    endif
-  end_unwind_protect
+  varargout = cell (1, nargout);
+  [varargout{:}] = feval (strcat ("__", backend, "_print__"), varargin{:});
 
 endfunction
-
-function bb = fix_eps_bbox (eps_file_name, ghostscript_binary)
-
-  persistent warn_on_no_ghostscript = true
-
-  box_string = "%%BoundingBox:";
-
-  ghostscript_options = "-q -dBATCH -dSAFER -dNOPAUSE -dTextAlphaBits=4 -sDEVICE=bbox";
-  cmd = sprintf ("\"%s\" %s \"%s\" 2>&1", ghostscript_binary,
-                 ghostscript_options, eps_file_name);
-  [status, output] = system (cmd);
-
-  if (status == 0)
-
-    pattern = strcat (box_string, "[^%]*");
-    pattern = pattern(1:find(double(pattern)>32, 1, "last"));
-    bbox_line = regexp (output, pattern, "match");
-    if (iscell (bbox_line))
-      bbox_line = bbox_line{1};
-    endif
-    ## Remore the EOL characters.
-    bbox_line(double(bbox_line)<32) = "";
-
-    fid = fopen (eps_file_name, "r+");
-    unwind_protect
-      bbox_replaced = false;
-      while (! bbox_replaced)
-        current_line = fgetl (fid);
-        if (strncmpi (current_line, box_string, numel(box_string)))
-          line_length = numel (current_line);
-          num_spaces = line_length - numel (bbox_line);
-          if (numel (current_line) < numel (bbox_line))
-            ## If there new line is longer, continue with the current line.
-            new_line = current_line;
-          else
-            new_line = bbox_line;
-            new_line(end+1:numel(current_line)) = " ";
-          endif
-          ## Back up to the beginning of the line (include EOL characters).
-          if (ispc ())
-            fseek (fid, -line_length-2, "cof");
-          else
-            fseek (fid, -line_length-1, "cof");
-          endif
-          count = fprintf (fid, "%s", new_line);
-          bbox_replaced = true;
-        elseif (! ischar (current_line))
-          bbox_replaced = true;
-          warning ("print.m: no bounding box found in '%s'.", eps_file_name)
-        endif
-      endwhile
-    unwind_protect_cleanup
-      fclose (fid);
-    end_unwind_protect
-  elseif (warn_on_no_ghostscript)
-    warn_on_no_ghostscript = false;
-    warning ("print.m: Ghostscript failed to determine the bounding box.\nError was:\n%s\n", output)
-  endif
-
-endfunction
-
-function [h, c] = convert_color2mono (hfig)
-  unwind_protect
-    showhiddenhandles = get (0, "showhiddenhandles");
-    set (0, "showhiddenhandles", "on");
-    h.color = findobj (hfig, "-property", "color");
-    h.facecolor = findobj (hfig, "-property", "facecolor");
-    h.edgecolor = findobj (hfig, "-property", "edgecolor");
-    h.backgroundcolor = findobj (hfig, "-property", "backgroundcolor");
-    h.colormap = findobj (hfig, "-property", "colormap");
-  unwind_protect_cleanup
-    set (0, "showhiddenhandles", showhiddenhandles);
-  end_unwind_protect
-  f = fieldnames (h);
-  for nf = 1:numel(f)
-    if (! isempty (h.(f{nf})))
-      v = get (h.(f{nf}), f{nf});
-      if (! iscell (v))
-        v = {v};
-      endif
-      c.(f{nf}) = v;
-    endif
-  endfor
-  convert_mono_to_or_from_color (h, c, true)
-endfunction
-
-function convert_mono_to_or_from_color (h, c, mono)
-  f = fieldnames (h);
-  for nf = 1:numel(f)
-    for nh = 1:numel (h.(f{nf}))
-      color = c.(f{nf}){nh};
-      ## Ignore color == {"none", "flat", ...}
-      if (isfloat (color))
-        if (mono)
-          ## Same method as used by rgb2gray in the image pkg.
-          color = rgb2ntsc (color)(:,1) * ones (1, 3);
-        endif
-        set (h.(f{nf})(nh), f{nf}, color);
-      endif
-    endfor
-  endfor
-endfunction
-
diff --git a/scripts/plot/whitebg.m b/scripts/plot/whitebg.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/whitebg.m
@@ -0,0 +1,143 @@
+## Copyright (C) 2010 David Bateman
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} whitebg ()
+## @deftypefnx {Function File} {} whitebg (@var{color})
+## @deftypefnx {Function File} {} whitebg (@var{fig})
+## @deftypefnx {Function File} {} whitebg (@var{fig}, @var{color})
+## Inverts the colors in the current current.  The root properties are
+## also inverted such that all subsequent plot use the new color scheme.
+##
+## If defined, @var{fig} is the handle to the figure to be inverted.  In
+## this case only this figure has its color properties changed
+##
+## The background colors of the figure and its children can be set 
+## specifically if @var{color} is defined.  @var{color} must be a valid
+## color set as a string or an RGB triplet, or  the value "none".
+##
+## @seealso{reset, colordef}
+## @end deftypefn
+
+function whitebg (varargin)
+  h = 0;
+  color = NaN;
+
+  if (nargin > 0 && nargin < 2)
+    if (ishandle (varargin{1}))
+      h = varargin{1};
+      if (nargin == 2)
+        color = varargin{2};
+      endif
+    elseif (nargin == 1)
+      color = varargin{1};
+    else
+      print_usage ();
+    endif
+  elseif (nargin != 0)
+    print_usage ();
+  endif
+
+  typ = get (h, "type");
+
+  if (strcmp (typ, "root"))
+    isroot = true;
+    fig = gcf ();
+  elseif (strcmp (typ, "figure"))
+    isroot = false;
+    fig = h;
+  else
+    error ("expecting a figure handle");
+  endif
+
+  axes = findall (fig, "type", "axes");
+  if (isnan (color))
+    ## Root figure. Set the default axes and figure properties so that
+    ## subsequent plots have the new color scheme
+    if (isroot)
+      fac = get (0, "factory");
+      fields = fieldnames (fac);
+      fieldindex = intersect (find (!cellfun (@isempty, regexp(fields, ".*color.*"))), union (find (!cellfun (@isempty, regexp(fields, "factoryaxes.*"))), find (!cellfun (@isempty, regexp(fields, "factoryfigure.*")))));
+
+      ## Check whether the factory value has been replaced
+      for nf = 1 : numel (fieldindex);
+        defaultfield = strrep (fields {fieldindex (nf)}, "factory", "default");
+        try
+          defaultvalue = 1 - get (0, defaultfield {n});
+        catch
+          field = fields {fieldindex (nf)};
+          defaultvalue = 1 - subsref (fac, struct ("type", ".", "subs", field));
+        end_try_catch
+        set (0, defaultfield, defaultvalue);
+      endfor
+    endif
+
+    ## Load all objects which qualify for being searched.
+    handles = fig;
+    h = fig;
+    while (numel (handles))
+      children = [];
+      for n = 1 : numel (handles)
+        children = union (children, get(handles(n), "children"));
+      endfor 
+      handles = children;
+      h = union (h, children);
+    endwhile
+
+    for nh = 1 : numel(h)
+      p = get (h (nh));
+      fields = fieldnames (p);
+      fieldindex = find (!cellfun (@isempty, regexp(fields, ".*color.*")));
+      if (numel (fieldindex))
+        for nf = 1 : numel (fieldindex);
+          field = fields {fieldindex (nf)};
+          c = subsref (p, struct ("type", ".", "subs", field));
+          if (! ischar(c) && columns(c) == 3)
+            set (h (nh), field, 1 - c);
+          endif
+        endfor
+      endif
+
+      ## If h(nh) is a figure or axes invert default color properties
+      typ = subsref (p, struct ("type", ".", "subs", "type"));
+      if (strcmp (typ, "axes") || strcmp (typ, "figure"))
+        def = get (h (nh), "default");
+        fields = fieldnames (def);
+        if (! isempty (fields))
+          fieldindex = find (!cellfun (@isempty, regexp(fields, ".*color.*")));
+          for nf = 1 : numel (fieldindex)
+            defaultfield = fields {fieldindex (nf)};
+            defaultvalue = 1 - subsref (def, struct ("type", ".", "subs", defaultfield));
+            set (h (nh), defaultfield, defaultvalue);
+          endfor
+        endif
+      endif
+    endfor
+  else
+    ## FIXME
+    ## Is this the right thing to do in this case?
+    set (findall (fig, "type", "axes"), "color", color);
+    if (isroot)
+      defs = get (0, "defaults");
+      if (isfield (defs, "defaultaxescolor") 
+          && strcmp (defs.defaultaxescolor, "none"))
+        set (0, "defaultaxescolor", color);
+      endif
+    endif
+  endif
+endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -10,19 +10,34 @@ 2010-06-24  Jaroslav Hajek  <highegg@gma
 	(octave_base_value::map_value): Return octave_map.
 	(octave_base_value::scalar_map_value): New method.
 	* ov-base.cc (octave_base_value::old_map_value,
 	octave_base_value::map_value, octave_base_value::scalar_map_value): 
 	Add default implementations.
 	* ov-class.h (octave_class::old_map_value): New override.
 	* ov-class.cc: Use old_map_value for efficiency.
 
+2010-06-23  David Bateman  <dbateman@free.fr>
+
+	* graphics.cc (void root_figure::reset_default_properties (void),
+	void figure::reset_default_properties (void),
+	void figure::reset_default_properties (void),
+	Freset): New functions.
+	* graphics.h.in (void graphics_object:reset_default_properies (void),
+	virtual void base_graphics_object:reset_default_properies (void)):
+	New functions.
+	(void root_figure::reset_default_properties (void),
+	void figure::reset_default_properties (void),
+	void figure::reset_default_properties (void)): Declarations.
+	(std::string color_property::values_as_string (void) const,
+	Cell color_property::values_as_cell (void) const): New functions.
+
 2010-06-21  Rik <octave@nomad.inbox5.com>
 
-	* DLD-FUNCTIONS/dlmread.cc: Fix spreadsheet style range option. 
+	* DLD-FUNCTIONS/dlmread.cc: Fix spreadsheet style range option.
         (bug #30183).
 
 2010-06-21  David Bateman  <dbateman@free.fr>
 
 	* graphics.cc (std::string radio_values:values_as_string (void)
 	const, Cell radio_values:values_as_cell (void) const): New functions.
 	(void graphics_object::set (const octave_value_list&)): Throw error
 	with no arguments.
@@ -62,21 +77,21 @@ 2010-06-18  Jaroslav Hajek  <highegg@gma
 	(tm_row_const::do_init_element): Simplify using dim_vector::hvcat.
 	(tm_const::init): Ditto.
 	(single_type_concat): Special-case empty results. Skip or use 0x0 for
 	empty arrays otherwise.
 	(tree_matrix::rvalue1): Skip empty arrays in the fallback branch.
 
 2010-06-16  Rik <octave@nomad.inbox5.com>
 
-        * DLD-FUNCTIONS/cellfun.cc, DLD-FUNCTIONS/dot.cc, 
-        DLD-FUNCTIONS/gammainc.cc, DLD-FUNCTIONS/lookup.cc, 
+        * DLD-FUNCTIONS/cellfun.cc, DLD-FUNCTIONS/dot.cc,
+        DLD-FUNCTIONS/gammainc.cc, DLD-FUNCTIONS/lookup.cc,
         DLD-FUNCTIONS/lu.cc, DLD-FUNCTIONS/luinc.cc, DLD-FUNCTIONS/onCleanup.cc,
         DLD-FUNCTIONS/sparse.cc, DLD-FUNCTIONS/spparms.cc, DLD-FUNCTIONS/svd.cc,
-        data.cc, dirfns.cc, graphics.cc, mappers.cc, ov-cell.cc, ov-range.cc: 
+        data.cc, dirfns.cc, graphics.cc, mappers.cc, ov-cell.cc, ov-range.cc:
         Periodic grammar check of documentation to ensure a common format.
 
 2010-06-11  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/rand.cc : Add "reset" flag to reset the random
 	generators from the entropy pool.
 
 	* genprops.awk : Don't special case the color_property in the
@@ -124,19 +139,19 @@ 2010-06-09  Jaroslav Hajek  <highegg@gma
 	arguments. Simplify computing unknown dimension.
 
 2010-06-09  David Grundberg  <individ@acc.umu.se>
 
 	* ov-struct.cc (Fisfield): Accept cell array as name argument.
 
 2010-06-08  Rik <octave@nomad.inbox5.com>
 
-        * DLD-FUNCTIONS/bsxfun.cc, DLD-FUNCTIONS/cellfun.cc, 
-        DLD-FUNCTIONS/det.cc, DLD-FUNCTIONS/lookup.cc, DLD-FUNCTIONS/lu.cc, 
-        DLD-FUNCTIONS/rand.cc, DLD-FUNCTIONS/svd.cc, DLD-FUNCTIONS/tril.cc, 
+        * DLD-FUNCTIONS/bsxfun.cc, DLD-FUNCTIONS/cellfun.cc,
+        DLD-FUNCTIONS/det.cc, DLD-FUNCTIONS/lookup.cc, DLD-FUNCTIONS/lu.cc,
+        DLD-FUNCTIONS/rand.cc, DLD-FUNCTIONS/svd.cc, DLD-FUNCTIONS/tril.cc,
         data.cc, ov.cc: Improve documentation string.
 
 2010-06-06  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* data.cc (Frem, Fmod): Specify template arguments of binmap
 	explicitely.
 
 2010-06-02  Jaroslav Hajek  <highegg@gmail.com>
@@ -273,17 +288,17 @@ 2010-05-13  Jaroslav Hajek  <highegg@gma
 2010-05-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/sqrtm.cc (sqrtm_utri_inplace): Use an ID for the
 	warning.
 
 2010-05-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* load-save.cc (install_loaded_variable): Pre-extract symbol record
-	reference to do all operations. 
+	reference to do all operations.
 
 2010-05-11  David Bateman  <dbateman@free.fr>
 
 	* ls-mat5.cc (save_mat5_element_length): Correct element length for
 	sparse elements with NZMAX=1 or NC=0.
 	(save_mat5_binary_element): Save the NZMAX elements of the RIDX
 	sparse index.
 
@@ -294,17 +309,17 @@ 2010-05-11  Jaroslav Hajek  <highegg@gma
 
 2010-05-07  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/sqrtm.cc (do_sqrtm): Mark the result as triangular
 	where applicable.
 
 2010-05-10  Rik <octave@nomad.inbox5.com>
 
-	* DLD-FUNCTIONS/qr.cc: Split qrdelete test into high precision test 
+	* DLD-FUNCTIONS/qr.cc: Split qrdelete test into high precision test
         when QRUPDATE is present and low precision when it is not.
 
 2010-05-10  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/schur.cc (Fschur): Mark triangular matrices on output.
 
 2010-05-10  Jaroslav Hajek  <highegg@gmail.com>
 
@@ -378,17 +393,17 @@ 2010-05-05  John W. Eaton  <jwe@octave.o
 2010-05-03  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/svd.cc (driver): New static var.
 	(Fsvd): Use it to select a driver.
 	(Fsvd_driver): New DEFUN.
 
 2010-05-02  Rik <octave@nomad.inbox5.com>
 
-	* ov-cell.cc: Wrap documentation line to prevent overfull hbox 
+	* ov-cell.cc: Wrap documentation line to prevent overfull hbox
         LaTex warning
 
 2010-05-01  Ben Abbott <bpabbott@mac.com>
 
 	* graphics.cc, graphics.h.in: Remove line object properties ldata,
 	udata, xldata, xudata.
 
 2010-04-30  Shai Ayal  <shaiay@users.sourceforge.net>
@@ -772,22 +787,22 @@ 2010-03-12  Ben Abbott <bpabbott@mac.com
 	* /DLD-FUNCTIONS/chol.cc: Increase tolerance for single precision test.
 
 2010-03-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/lookup.cc (Flookup): Fix deprecated array constructor.
 
 2010-03-09  Jaroslav Hajek  <highegg@gmail.com>
 
-	* ov-intx.h 
+	* ov-intx.h
 	(OCTAVE_INT_NDARRAY_T::convert_gripe): Remove method.
 	(OCTAVE_INT_NDARRAY_T): Remove all uses.
 	(OCTAVE_INT_T::convert_gripe): Remove method.
 	(OCTAVE_INT_T): Remove all uses.
-	* ov.cc (convert_to_int_array, convert_to_octave_idx_type_array): 
+	* ov.cc (convert_to_int_array, convert_to_octave_idx_type_array):
 	Remove int conversion warnings.
 	* data.cc (NATIVE_REDUCTION_1): Ditto.
 
 	* OPERATORS/op-intx.h: Remove integer warning stubs.
 	* OPERATORS/opt-int-conv.cc: Ditto.
 
 	* gripes.cc (gripe_truncated_conversion,
 	gripe_binop_integer_math_truncated,
@@ -1933,17 +1948,17 @@ 2010-01-15  Jaroslav Hajek  <highegg@gma
 	* pt-mat.cc (SINGLE_TYPE_CONCAT, DO_SINGLE_TYPE_CONCAT,
 	DO_SINGLE_TYPE_CONCAT_NO_MUTATE): Remove macros.
 	(single_type_concat, do_single_type_concat,
 	do_single_type_concat_no_mutate): New template funcs.
 	(tree_matrix::rvalue1): Call them here.
 
 2010-01-14  Jaroslav Hajek  <highegg@gmail.com>
 
-	* strfns.cc (do_strcmp_fun, 
+	* strfns.cc (do_strcmp_fun,
 	strcmp_array_op, strcmp_str_op,
 	strcmpi_array_op, strcmpi_str_op,
 	strncmp_array_op, strncmp_str_op,
 	strncmpi_array_op, strncmpi_str_op): New functions.
 	(Fstrcmp, Fstrncmp): Reimplement using do_strcmp_fun.
 	(Fstrcmpi, Fstrncmpi): New defuns.
 
 2010-01-14  Jaroslav Hajek  <highegg@gmail.com>
@@ -2100,17 +2115,17 @@ 2010-01-06  Jaroslav Hajek  <highegg@gma
 	  Fdrawnow): Ditto.
 	* help.cc (raw_help_from_file): Ditto.
 	* input.cc (do_keyboard, Fkeyboard, get_debug_input): Ditto.
 	* load-path.cc (load_path::do_set, execute_pkg_add_or_del,
 	* ls-mat4.cc (save_mat_binary_data): Ditto.
 	* ls-mat5.cc (read_mat5_binary_element): Ditto.
 	* mex.cc (call_mex, mexGetVariable): Ditto.
 	* oct-hist.cc (do_edit_history, do_run_history): Ditto.
-	* octave.cc (execute_startup_files, execute_eval_option_code, 
+	* octave.cc (execute_startup_files, execute_eval_option_code,
 	  execute_command_line_file): Ditto.
 	* ov-builtin.cc (octave_builtin::do_multi_index_op): Ditto.
 	* ov-class.cc (octave_class::subsasgn, octave_class::print_raw):
 	Ditto.
 	* ov-fcn-handle.cc (octave_fcn_handle::load_ascii,
 	octave_fcn_handle::load_binary, octave_fcn_handle::load_hdf5): Ditto.
 	* ov-list.cc (octave_list::print_raw): Ditto.
 	* ov-mex-fcn.cc (octave_mex_function::do_multi_index_op): Ditto.
@@ -2145,17 +2160,17 @@ 2010-01-06  Jaroslav Hajek  <highegg@gma
 	* DLD-FUNCTIONS/daspk.cc (Fdaspk): Ditto.
 	* DLD-FUNCTIONS/dasrt.cc (Fdasrt): Ditto.
 	* DLD-FUNCTIONS/dassl.cc (Fdassl): Ditto.
 	* DLD-FUNCTIONS/eigs.cc (Feigs): Ditto.
 	* DLD-FUNCTIONS/lsode.cc (Flsode): Ditto.
 	* DLD-FUNCTIONS/quad.cc (Fquad): Ditto.
 	* DLD-FUNCTIONS/rand.cc (Frandn, Frande, Frandg, Frandp): Ditto.
 	* DLD-FUNCTIONS/typecast.cc (get_data_and_bytesize, Ftypecast): Ditto.
-	* DLD-FUNCTIONS/urlwrite.cc (Furlwrite, mput_directory, 
+	* DLD-FUNCTIONS/urlwrite.cc (Furlwrite, mput_directory,
 	getallfiles, F__ftp_mget__): Ditto.
 
 2010-01-05  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Cell.cc (Cell::cellstr_value): New method.
 	* Cell.h (Cell::cellstr_value): Declare it.
 
 	* ov-cell.h (octave_cell::cellstr_cache): Declare as autopointer.
@@ -2228,17 +2243,17 @@ 2009-12-27  John W. Eaton  <jwe@octave.o
 	(EXTRA_DIST): Include gl2ps.c in the list.
 	(DIST_SRC): Include xgl2ps.c in the list instead of gl2ps.c.
 
 2009-12-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov.cc (decode_subscripts): Move to utils.cc.
 	* utils.cc (decode_subscripts): New func.
 	* utils.h: Declare it.
-	* DLD-FUNCTIONS/cellfun.cc (Fcellfun): Optimize the 
+	* DLD-FUNCTIONS/cellfun.cc (Fcellfun): Optimize the
 	`cellfun (@subsref, args, {subs}, "uniformoutput", true)' case.
 
 2009-12-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* gripes.cc (gripe_nonbraced_cs_list_assignment): New function.
 	* gripes.h: Declare it.
 	* ov-cell.cc (octave_cell::subsasgn): Use it here.
 	* ov-struct.cc (octave_struct::subsasgn): Also here.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2620,16 +2620,44 @@ root_figure::properties::remove_child (c
   xset (0, "currentfigure", cf.value ());
   
   base_properties::remove_child (gh);
 }
 
 property_list
 root_figure::factory_properties = root_figure::init_factory_properties ();
 
+void
+root_figure::reset_default_properties (void)
+{
+  property_list new_defaults;
+
+  for (property_list::plist_map_const_iterator p = default_properties.begin ();
+       p != default_properties.end (); p++)
+    {
+      const property_list::pval_map_type pval_map = p->second;
+      std::string prefix = p->first;
+      
+      for (property_list::pval_map_const_iterator q = pval_map.begin ();
+           q != pval_map.end ();
+           q++)
+        {
+          std::string s = q->first;
+
+          if (prefix == "axes" && (s == "position" || s == "units"))
+            new_defaults.set (prefix + s, q->second);
+          else if (prefix == "figure" && (s == "position" || s == "units" 
+                                          || s == "windowstyle" 
+                                          || s == "paperunits"))
+            new_defaults.set (prefix + s, q->second);
+        }
+    }
+  default_properties = new_defaults;
+}
+
 // ---------------------------------------------------------------------
 
 void
 figure::properties::set_currentaxes (const octave_value& v)
 {
   graphics_handle val (v);
 
   if (error_state)
@@ -2764,16 +2792,44 @@ figure::get_default (const caseless_str&
       graphics_object parent_obj = gh_manager::get_object (parent);
 
       retval = parent_obj.get_default (name);
     }
 
   return retval;
 }
 
+void
+figure::reset_default_properties (void)
+{
+  property_list new_defaults;
+
+  for (property_list::plist_map_const_iterator p = default_properties.begin ();
+       p != default_properties.end (); p++)
+    {
+      const property_list::pval_map_type pval_map = p->second;
+      std::string prefix = p->first;
+      
+      for (property_list::pval_map_const_iterator q = pval_map.begin ();
+           q != pval_map.end ();
+           q++)
+        {
+          std::string s = q->first;
+
+          if (prefix == "axes" && (s == "position" || s == "units"))
+            new_defaults.set (prefix + s, q->second);
+          else if (prefix == "figure" && (s == "position" || s == "units" 
+                                          || s == "windowstyle" 
+                                          || s == "paperunits"))
+            new_defaults.set (prefix + s, q->second);
+        }
+    }
+  default_properties = new_defaults;
+}
+
 // ---------------------------------------------------------------------
 
 void
 axes::properties::init (void)
 {
   position.add_constraint (dim_vector (1, 4));
   position.add_constraint (dim_vector (0, 0));
   outerposition.add_constraint (dim_vector (1, 4));
@@ -4281,16 +4337,44 @@ void
 axes::properties::clear_zoom_stack (void)
 {
   while (zoom_stack.size () > 4)
     zoom_stack.pop_front ();
 
   unzoom ();
 }
 
+void
+axes::reset_default_properties (void)
+{
+  property_list new_defaults;
+
+  for (property_list::plist_map_const_iterator p = default_properties.begin ();
+       p != default_properties.end (); p++)
+    {
+      const property_list::pval_map_type pval_map = p->second;
+      std::string prefix = p->first;
+      
+      for (property_list::pval_map_const_iterator q = pval_map.begin ();
+           q != pval_map.end ();
+           q++)
+        {
+          std::string s = q->first;
+
+          if (prefix == "axes" && (s == "position" || s == "units"))
+            new_defaults.set (prefix + s, q->second);
+          else if (prefix == "figure" && (s == "position" || s == "units" 
+                                          || s == "windowstyle" 
+                                          || s == "paperunits"))
+            new_defaults.set (prefix + s, q->second);
+        }
+    }
+  default_properties = new_defaults;
+}
+
 // ---------------------------------------------------------------------
 
 Matrix
 line::properties::compute_xlim (void) const
 {
   Matrix m (1, 3);
 
   m(0) = xdata.min_val ();
@@ -5027,16 +5111,45 @@ Return true if @var{h} is a graphics han
   if (args.length () == 1)
     retval = is_handle (args(0));
   else
     print_usage ();
 
   return retval;
 }
 
+DEFUN (reset, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} reset (@var{h}, @var{property})\n\
+Removes any defaults set for the handle @var{h}. The default figure\n\
+properties \"position\", \"units\", \"windowstyle\" and\n\
+\"paperunits\" and the default axes properties \"position\" and \"units\"\n\
+are not reset.\n\
+@end deftypefn")
+{
+  int nargin = args.length ();
+
+  if (nargin != 1)
+    print_usage ();
+  else
+    {
+      // get vector of graphics handles
+      ColumnVector hcv (args(0).vector_value ());
+
+      if (! error_state)
+        {
+          // loop over graphics objects
+          for (octave_idx_type n = 0; n < hcv.length (); n++) 
+            gh_manager::get_object (hcv(n)).reset_default_properties ();
+        }
+    }
+
+  return octave_value ();
+}
+
 DEFUN (set, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} set (@var{h}, @var{property}, @var{value}, @dots{})\n\
 @deftypefnx {Built-in Function} {} set (@var{h}, @var{properties}, @var{values})\n\
 @deftypefnx {Built-in Function} {} set (@var{h}, @var{pv})\n\
 Set named property values for the graphics handle (or vector of graphics\n\
 handles) @var{h}.\n\
 There are three ways how to give the property names and values:\n\
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -965,16 +965,20 @@ public:
       set (val);
       return *this;
     }
 
   operator octave_value (void) const { return get (); }
 
   base_property* clone (void) const { return new color_property (*this); }
 
+  std::string values_as_string (void) const { return radio_val.values_as_string (); }
+
+  Cell values_as_cell (void) const { return radio_val.values_as_cell (); }
+      
 protected:
   OCTINTERP_API bool do_set (const octave_value& newval);
 
 private:
   enum current_enum { color_t, radio_t } current_type;
   color_values color_val;
   radio_values radio_val;
   std::string current_val;
@@ -2218,16 +2222,27 @@ public:
                                          listener_mode mode = POSTSET)
     {
       if (valid_object ())
         get_properties ().delete_listener (nm, v, mode);
     }
 
   virtual void remove_all_listeners (void);
 
+  virtual void reset_default_properties (void)
+    {
+      if (valid_object ())
+        {
+          std::string msg = (type () + "::reset_default_properties");
+          gripe_not_implemented (msg.c_str ());
+        }
+      else
+        error ("base_graphics_object::default: invalid graphics object");
+    }
+
 protected:
   // A reference count.
   int count;
 };
 
 class OCTINTERP_API graphics_object
 {
 public:
@@ -2404,16 +2419,19 @@ public:
   void add_property_listener (const std::string& nm, const octave_value& v,
                               listener_mode mode = POSTSET)
     { rep->add_property_listener (nm, v, mode); }
 
   void delete_property_listener (const std::string& nm, const octave_value& v,
                                  listener_mode mode = POSTSET)
     { rep->delete_property_listener (nm, v, mode); }
 
+  void reset_default_properties (void)
+  { rep->reset_default_properties (); }
+
 private:
   base_graphics_object *rep;
 };
 
 // ---------------------------------------------------------------------
 
 class OCTINTERP_API root_figure : public base_graphics_object
 {
@@ -2543,16 +2561,18 @@ public:
   }
 
   base_properties& get_properties (void) { return xproperties; }
 
   const base_properties& get_properties (void) const { return xproperties; }
 
   bool valid_object (void) const { return true; }
 
+  void reset_default_properties (void);
+
 private:
   property_list default_properties;
 
   static property_list factory_properties;
 
   static property_list::plist_map_type init_factory_properties (void);
 };
 
@@ -2747,16 +2767,18 @@ public:
   }
 
   base_properties& get_properties (void) { return xproperties; }
 
   const base_properties& get_properties (void) const { return xproperties; }
 
   bool valid_object (void) const { return true; }
 
+  void reset_default_properties (void);
+
 private:
   property_list default_properties;
 };
 
 // ---------------------------------------------------------------------
 
 class OCTINTERP_API graphics_xform
 {
@@ -3194,16 +3216,18 @@ public:
   base_properties& get_properties (void) { return xproperties; }
 
   const base_properties& get_properties (void) const { return xproperties; }
 
   void update_axis_limits (const std::string& axis_type);
 
   bool valid_object (void) const { return true; }
 
+  void reset_default_properties (void);
+
 private:
   property_list default_properties;
 };
 
 // ---------------------------------------------------------------------
 
 class OCTINTERP_API line : public base_graphics_object
 {
