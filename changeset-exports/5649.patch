# HG changeset patch
# User jwe
# Date 1141849886 0
#      Wed Mar 08 20:31:26 2006 +0000
# Node ID d24b97246b9b1eba0534171f721f09ae54df48ed
# Parent  69a4f320d95a24745627f532094249b0e3ad8cee
[project @ 2006-03-08 20:31:25 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2006-03-08  John W. Eaton  <jwe@octave.org>
+
+	* oct-stream.cc (octave_stream::stream_ok): Move definition here,
+	from oct-stream.h.  New arg, warn.  If warn is true and stream is
+	invalid, print warning.
+	(octave_stream::error): Always avoid warning message from
+	stream_ok.  Return "invalid stream object" if stream is not ok.
+
 2006-03-08  David Bateman  <dbateman@free.fr>
 
 	* ov-mapper.cc (SPARSE_MAPPER_LOOP_2): Change nnz to nz to remove 
 	shadowed variable warning.
 	* DLD-FUNCTIONS/spqr.cc: Update for new upstream CXSPARSE release.
 
 2006-03-06  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -3749,19 +3749,19 @@ octave_stream::eof (void) const
     retval = rep->eof ();
 
   return retval;
 }
 
 std::string
 octave_stream::error (bool clear, int& err_num)
 {
-  std::string retval;
-
-  if (stream_ok ("ferror", false))
+  std::string retval = "invalid stream object";
+
+  if (stream_ok ("ferror", false, false))
     retval = rep->error (clear, err_num);
 
   return retval;
 }
 
 std::string
 octave_stream::name (void) const
 {
@@ -3828,16 +3828,37 @@ octave_stream::mode_as_string (int mode)
     retval = "w+b";
   else if (in_mode == (std::ios::in | std::ios::out | std::ios::ate
 		       | std::ios::binary))
     retval = "a+b";
 
   return retval;
 }
 
+bool
+octave_stream::stream_ok (const std::string& who, bool clear, bool warn) const
+{
+  bool retval = true;
+
+  if (rep)
+    {
+      if (clear)
+	rep->clear ();
+    }
+  else
+    {
+      if (warn)
+	::warning ("%s: attempt to use invalid I/O stream", who.c_str ());
+
+      retval = false;
+    }
+
+  return retval;
+}
+
 octave_stream_list *octave_stream_list::instance = 0;
 
 bool
 octave_stream_list::instance_ok (void)
 {
   bool retval = true;
 
   if (! instance)
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -586,30 +586,18 @@ public:
 
   void clearerr (void) { if (rep) rep->clearerr (); }
 
 private:
 
   // The actual representation of this stream.
   octave_base_stream *rep;
 
-  bool stream_ok (const std::string& who, bool clear = true) const
-    {
-      bool retval = true;
-
-      if (rep)
-	{
-	  if (clear)
-	    rep->clear ();
-	}
-      else
-	retval = false;
-
-      return retval;
-    }
+  bool stream_ok (const std::string& who, bool clear = true,
+		  bool warn = true) const;
 
   void invalid_operation (const std::string& who, const char *rw)
     {
       if (rep)
 	rep->invalid_operation (who, rw);
     }
 };
 
