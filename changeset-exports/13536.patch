# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311696694 -7200
#      Tue Jul 26 18:11:34 2011 +0200
# Node ID 869c62c15e958f1db854c333b788d987a233811f
# Parent  98bde3b5b7a05a61970cef5ca6453ec393527388
Few minor improvements, added advanced settings for file browser.

diff --git a/gui/src/BrowserWidget.h b/gui/src/BrowserWidget.h
--- a/gui/src/BrowserWidget.h
+++ b/gui/src/BrowserWidget.h
@@ -22,21 +22,23 @@
 #include <QWidget>
 #include <QToolBar>
 #include <QLineEdit>
 #include <QtWebKit/QWebView>
 #include <QStatusBar>
 
 class BrowserWidget:public QWidget
 {
-Q_OBJECT public:
+  Q_OBJECT
+public:
   BrowserWidget (QWidget * parent = 0);
   void load (QUrl url);
 
-  public slots:void setUrl (QUrl url);
+public slots:
+  void setUrl (QUrl url);
   void jumpToWebsite ();
   void showStatusMessage (QString message);
 
 private:
   void construct ();
 
   QLineEdit *m_urlLineEdit;
   QToolBar *m_navigationToolBar;
diff --git a/gui/src/FilesDockWidget.cpp b/gui/src/FilesDockWidget.cpp
--- a/gui/src/FilesDockWidget.cpp
+++ b/gui/src/FilesDockWidget.cpp
@@ -160,8 +160,14 @@ FilesDockWidget::currentDirectoryEntered
       setCurrentDirectory (fileInfo.absoluteFilePath ());
     }
   else
     {
       if (QFile::exists (fileInfo.absoluteFilePath ()))
 	emit openFile (fileInfo.absoluteFilePath ());
     }
 }
+
+void
+FilesDockWidget::noticeSettings ()
+{
+
+}
diff --git a/gui/src/FilesDockWidget.h b/gui/src/FilesDockWidget.h
--- a/gui/src/FilesDockWidget.h
+++ b/gui/src/FilesDockWidget.h
@@ -43,29 +43,36 @@
 #include "octave/octave.h"
 #include "octave/str-vec.h"
 #include "octave/cmd-hist.h"
 #include <QDockWidget>
 #include <QLineEdit>
 
 class FilesDockWidget:public QDockWidget
 {
-  Q_OBJECT public:FilesDockWidget (QWidget * parent = 0);
-  public slots:
-    /** Slot for handling a change in directory via double click. */
+  Q_OBJECT
+public:
+  FilesDockWidget (QWidget * parent = 0);
+
+public slots:
+  /** Slot for handling a change in directory via double click. */
   void itemDoubleClicked (const QModelIndex & index);
 
-    /** Slot for handling the up-directory button in the toolbar. */
+  /** Slot for handling the up-directory button in the toolbar. */
   void onUpDirectory ();
 
   void setCurrentDirectory (QString currentDirectory);
 
   void currentDirectoryEntered ();
 
-    signals:void openFile (QString fileName);
+  /** Tells the widget to notice settings that are probably new. */
+  void noticeSettings ();
+
+signals:
+  void openFile (QString fileName);
 
 private:
   // TODO: Add toolbar with buttons for navigating the path, creating dirs, etc
 
     /** Toolbar for file and directory manipulation. */
     QToolBar * m_navigationToolBar;
 
     /** Variables for the up-directory action. */
diff --git a/gui/src/HistoryDockWidget.cpp b/gui/src/HistoryDockWidget.cpp
--- a/gui/src/HistoryDockWidget.cpp
+++ b/gui/src/HistoryDockWidget.cpp
@@ -37,8 +37,14 @@ HistoryDockWidget::construct ()
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
   layout->addWidget (m_historyListView);
   layout->setMargin (2);
 
   widget ()->setLayout (layout);
 }
+
+void
+HistoryDockWidget::noticeSettings ()
+{
+
+}
diff --git a/gui/src/HistoryDockWidget.h b/gui/src/HistoryDockWidget.h
--- a/gui/src/HistoryDockWidget.h
+++ b/gui/src/HistoryDockWidget.h
@@ -25,16 +25,20 @@
 
 class HistoryDockWidget:public QDockWidget
 {
 Q_OBJECT
 public:
   HistoryDockWidget (QWidget *parent = 0);
   void updateHistory (QStringList history);
 
+public slots:
+  /** Tells the widget to notice settings that are probably new. */
+  void noticeSettings ();
+
 signals:
   void information (QString message);
 
 private:
   void construct ();
   QListView *m_historyListView;
 };
 
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -29,19 +29,17 @@
 #include "cmd-edit.h"
 
 #define VERSION_STRING "Octave GUI (0.6.0)"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent),
 m_isRunning (true)
 {
   QDesktopServices desktopServices;
-  m_settingsFile =
-    desktopServices.storageLocation (QDesktopServices::HomeLocation) +
-    "/.quint/settings.ini";
+  m_settingsFile = desktopServices.storageLocation (QDesktopServices::HomeLocation) + "/.quint/settings.ini";
   construct ();
   establishOctaveLink ();
 }
 
 MainWindow::~MainWindow ()
 {
 }
 
@@ -80,32 +78,30 @@ MainWindow::openWebPage (QString url)
 void
 MainWindow::handleSaveWorkspaceRequest ()
 {
   QDesktopServices desktopServices;
   QString selectedFile =
     QFileDialog::getSaveFileName (this, tr ("Save Workspace"),
 				  desktopServices.
 				  storageLocation (QDesktopServices::
-						   HomeLocation) +
-				  "/.quint/workspace");
+                                                   HomeLocation));
   m_octaveTerminal->sendText (QString ("save \'%1\'\n").arg (selectedFile));
   m_octaveTerminal->setFocus ();
 }
 
 void
 MainWindow::handleLoadWorkspaceRequest ()
 {
   QDesktopServices desktopServices;
   QString selectedFile =
     QFileDialog::getOpenFileName (this, tr ("Load Workspace"),
 				  desktopServices.
 				  storageLocation (QDesktopServices::
-						   HomeLocation) +
-				  "/.quint/workspace");
+                                                   HomeLocation));
   m_octaveTerminal->sendText (QString ("load \'%1\'\n").arg (selectedFile));
   m_octaveTerminal->setFocus ();
 }
 
 void
 MainWindow::handleClearWorkspaceRequest ()
 {
   m_octaveTerminal->sendText ("clear\n");
@@ -131,39 +127,37 @@ MainWindow::openEditor ()
   FileEditorMdiSubWindow *subWindow = new FileEditorMdiSubWindow (m_centralMdiArea);
   subWindow->setAttribute (Qt::WA_DeleteOnClose);
   subWindow->newFile ();
 }
 
 void
 MainWindow::openBugTrackerPage ()
 {
-  QDesktopServices::
-    openUrl (QUrl ("http://savannah.gnu.org/bugs/?group=octave"));
+  QDesktopServices::openUrl (QUrl ("http://savannah.gnu.org/bugs/?group=octave"));
 }
 
 void
 MainWindow::openAgoraPage ()
 {
-  QDesktopServices::
-    openUrl (QUrl ("http://agora.panocha.org.mx/"));
+  QDesktopServices::openUrl (QUrl ("http://agora.panocha.org.mx/"));
 }
 
 void
 MainWindow::openOctaveForgePage ()
 {
-  QDesktopServices::
-    openUrl (QUrl ("http://octave.sourceforge.net/"));
+  QDesktopServices::openUrl (QUrl ("http://octave.sourceforge.net/"));
 }
 
 void
 MainWindow::processSettingsDialogRequest ()
 {
   SettingsDialog settingsDialog (this, m_settingsFile);
   settingsDialog.exec ();
+  emit settingsChanged ();
 }
 
 void
 MainWindow::closeEvent (QCloseEvent * closeEvent)
 {
   m_isRunning = false;
   reportStatusMessage (tr ("Saving data and shutting down."));
   writeSettings ();
@@ -176,24 +170,27 @@ MainWindow::closeEvent (QCloseEvent * cl
 }
 
 void
 MainWindow::readSettings ()
 {
   QSettings settings (m_settingsFile, QSettings::IniFormat);
   restoreGeometry (settings.value ("MainWindow/geometry").toByteArray ());
   restoreState (settings.value ("MainWindow/windowState").toByteArray ());
+  m_centralMdiArea->restoreGeometry (settings.value ("MdiArea/geometry").toByteArray ());
+  emit settingsChanged ();
 }
 
 void
 MainWindow::writeSettings ()
 {
   QSettings settings (m_settingsFile, QSettings::IniFormat);
   settings.setValue ("MainWindow/geometry", saveGeometry ());
   settings.setValue ("MainWindow/windowState", saveState ());
+  settings.setValue ("MdiArea/geometry", m_centralMdiArea->saveGeometry ());
 }
 
 void
 MainWindow::construct ()
 {
 
   if (QFile::exists ("../media/logo.png"))
     setWindowIcon (QIcon ("../media/logo.png"));
@@ -287,37 +284,35 @@ MainWindow::construct ()
   // the dock widget is tabbed or minimized.
   connect (showWorkspaceAction, SIGNAL (toggled (bool)), m_variablesDockWidget, SLOT (setShown (bool)));
   //connect (m_variablesDockWidget, SIGNAL (visibilityChanged (bool)), showWorkspaceAction, SLOT (setChecked (bool)));
   connect (showHistoryAction, SIGNAL (toggled (bool)), m_historyDockWidget, SLOT (setShown (bool)));
   //connect (m_historyDockWidget, SIGNAL (visibilityChanged (bool)), showHistoryAction, SLOT (setChecked (bool)));
   connect (showFileBrowserAction, SIGNAL (toggled (bool)), m_filesDockWidget, SLOT (setShown (bool)));
   //connect (m_filesDockWidget, SIGNAL (visibilityChanged (bool)), showFileBrowserAction, SLOT (setChecked (bool)));
 
+  connect (this, SIGNAL (settingsChanged ()), m_variablesDockWidget, SLOT (noticeSettings ()));
+  connect (this, SIGNAL (settingsChanged ()), m_historyDockWidget, SLOT (noticeSettings ()));
+  connect (this, SIGNAL (settingsChanged ()), m_filesDockWidget, SLOT (noticeSettings ()));
+
+  connect (m_filesDockWidget, SIGNAL (openFile (QString)), this, SLOT (handleOpenFileRequest (QString)));
+  connect (m_historyDockWidget, SIGNAL (information (QString)), this, SLOT (reportStatusMessage (QString)));
+  connect (saveWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleSaveWorkspaceRequest ()));
+  connect (loadWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleLoadWorkspaceRequest ()));
+  connect (clearWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleClearWorkspaceRequest ()));
+
   setWindowTitle (QString (VERSION_STRING));
 
   setCentralWidget (m_centralMdiArea);
   addDockWidget (Qt::LeftDockWidgetArea, m_variablesDockWidget);
   addDockWidget (Qt::LeftDockWidgetArea, m_historyDockWidget);
   addDockWidget (Qt::RightDockWidgetArea, m_filesDockWidget);
   setStatusBar (m_statusBar);
 
   readSettings ();
-
-  connect (m_filesDockWidget, SIGNAL (openFile (QString)), this,
-	   SLOT (handleOpenFileRequest (QString)));
-  connect (m_historyDockWidget, SIGNAL (information (QString)), this,
-	   SLOT (reportStatusMessage (QString)));
-  connect (saveWorkspaceAction, SIGNAL (triggered ()), this,
-	   SLOT (handleSaveWorkspaceRequest ()));
-  connect (loadWorkspaceAction, SIGNAL (triggered ()), this,
-	   SLOT (handleLoadWorkspaceRequest ()));
-  connect (clearWorkspaceAction, SIGNAL (triggered ()), this,
-	   SLOT (handleClearWorkspaceRequest ()));
-
   openWebPage ("http://www.gnu.org/software/octave/doc/interpreter/");
 }
 
 void
 MainWindow::establishOctaveLink ()
 {
   m_octaveTerminal->openTerminal ();
 
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -63,18 +63,20 @@ Q_OBJECT public:
   HistoryDockWidget *historyDockWidget ()
   {
     return m_historyDockWidget;
   }
   FilesDockWidget *filesDockWidget ()
   {
     return m_filesDockWidget;
   }
+signals:
+  void settingsChanged ();
 
-  public slots:
+public slots:
   void handleOpenFileRequest (QString fileName);
   void reportStatusMessage (QString statusMessage);
   void openWebPage (QString url);
   void handleSaveWorkspaceRequest ();
   void handleLoadWorkspaceRequest ();
   void handleClearWorkspaceRequest ();
   void handleCommandDoubleClicked (QString command);
   void alignMdiWindows ();
diff --git a/gui/src/SettingsDialog.cpp b/gui/src/SettingsDialog.cpp
--- a/gui/src/SettingsDialog.cpp
+++ b/gui/src/SettingsDialog.cpp
@@ -11,22 +11,34 @@ QDialog (parent), ui (new Ui::SettingsDi
   QSettings settings (m_settingsFile, QSettings::IniFormat);
   ui->connectOnStartup->setChecked (settings.value ("connectOnStartup").toBool ());
   ui->showMessageOfTheDay->setChecked (settings.value ("showMessageOfTheDay").toBool ());
   ui->showTopic->setChecked (settings.value ("showTopic").toBool ());
   ui->autoIdentification->setChecked (settings.value ("autoIdentification").toBool ());
   ui->nickServPassword->setText (settings.value ("nickServPassword").toString ());
   ui->useCustomFileEditor->setChecked (settings.value ("useCustomFileEditor").toBool ());
   ui->customFileEditor->setText (settings.value ("customFileEditor").toString ());
+  ui->showFilenames->setChecked (settings.value ("showFilenames").toBool());
+  ui->showFileSize->setChecked (settings.value ("showFileSize").toBool());
+  ui->showFileType->setChecked (settings.value ("showFileType").toBool());
+  ui->showLastModified->setChecked (settings.value ("showLastModified").toBool());
+  ui->showHiddenFiles->setChecked (settings.value ("showHiddenFiles").toBool());
+  ui->useAlternatingRowColors->setChecked (settings.value ("useAlternatingRowColors").toBool());
 }
 
 SettingsDialog::~SettingsDialog ()
 {
   QSettings settings (m_settingsFile, QSettings::IniFormat);
   settings.setValue ("connectOnStartup", ui->connectOnStartup->isChecked ());
   settings.setValue ("showMessageOfTheDay", ui->showMessageOfTheDay->isChecked ());
   settings.setValue ("showTopic", ui->showTopic->isChecked ());
   settings.setValue ("autoIdentification", ui->autoIdentification->isChecked ());
   settings.setValue ("nickServPassword", ui->nickServPassword->text ());
   settings.setValue ("useCustomFileEditor", ui->useCustomFileEditor->isChecked ());
   settings.setValue ("customFileEditor", ui->customFileEditor->text ());
+  settings.setValue ("showFilenames", ui->showFilenames->isChecked ());
+  settings.setValue ("showFileSize", ui->showFileSize->isChecked ());
+  settings.setValue ("showFileType", ui->showFileType->isChecked ());
+  settings.setValue ("showLastModified", ui->showLastModified->isChecked ());
+  settings.setValue ("showHiddenFiles", ui->showHiddenFiles->isChecked ());
+  settings.setValue ("useAlternatingRowColors", ui->useAlternatingRowColors->isChecked ());
   delete ui;
 }
diff --git a/gui/src/SettingsDialog.ui b/gui/src/SettingsDialog.ui
--- a/gui/src/SettingsDialog.ui
+++ b/gui/src/SettingsDialog.ui
@@ -156,16 +156,65 @@
            <width>20</width>
            <height>158</height>
           </size>
          </property>
         </spacer>
        </item>
       </layout>
      </widget>
+     <widget class="QWidget" name="tab_2">
+      <attribute name="title">
+       <string>File Browser</string>
+      </attribute>
+      <layout class="QVBoxLayout" name="verticalLayout_3">
+       <item>
+        <widget class="QCheckBox" name="showFilenames">
+         <property name="text">
+          <string>Show filenames</string>
+         </property>
+        </widget>
+       </item>
+       <item>
+        <widget class="QCheckBox" name="showFileSize">
+         <property name="text">
+          <string>Show file size</string>
+         </property>
+        </widget>
+       </item>
+       <item>
+        <widget class="QCheckBox" name="showFileType">
+         <property name="text">
+          <string>Show file type</string>
+         </property>
+        </widget>
+       </item>
+       <item>
+        <widget class="QCheckBox" name="showLastModified">
+         <property name="text">
+          <string>Show date of last modification</string>
+         </property>
+        </widget>
+       </item>
+       <item>
+        <widget class="QCheckBox" name="showHiddenFiles">
+         <property name="text">
+          <string>Show hidden files</string>
+         </property>
+        </widget>
+       </item>
+       <item>
+        <widget class="QCheckBox" name="useAlternatingRowColors">
+         <property name="text">
+          <string>Alternating row colors</string>
+         </property>
+        </widget>
+       </item>
+      </layout>
+     </widget>
     </widget>
    </item>
    <item>
     <layout class="QHBoxLayout" name="horizontalLayout_2">
      <item>
       <widget class="QPushButton" name="resetButton">
        <property name="text">
         <string>Reset to defaults</string>
diff --git a/gui/src/VariablesDockWidget.cpp b/gui/src/VariablesDockWidget.cpp
--- a/gui/src/VariablesDockWidget.cpp
+++ b/gui/src/VariablesDockWidget.cpp
@@ -183,8 +183,14 @@ VariablesDockWidget::updateScope (int to
       if (!existsInVariableList)
 	{
 	  topLevelItem->removeChild (child);
 	  delete child;
 	  i--;
 	}
     }
 }
+
+void
+VariablesDockWidget::noticeSettings ()
+{
+
+}
diff --git a/gui/src/VariablesDockWidget.h b/gui/src/VariablesDockWidget.h
--- a/gui/src/VariablesDockWidget.h
+++ b/gui/src/VariablesDockWidget.h
@@ -21,20 +21,25 @@
 
 #include <QDockWidget>
 #include <QTreeWidget>
 #include <QSemaphore>
 #include "OctaveLink.h"
 
 class VariablesDockWidget:public QDockWidget
 {
-Q_OBJECT public:
+  Q_OBJECT
+public:
   VariablesDockWidget (QWidget * parent = 0);
   void setVariablesList (QList < SymbolRecord > symbolTable);
 
+public slots:
+  /** Tells the widget to notice settings that are probably new. */
+  void noticeSettings ();
+
 private:
   void construct ();
   void updateTreeEntry (QTreeWidgetItem * treeItem,
 			SymbolRecord symbolRecord);
   void updateScope (int topLevelItemIndex,
 		    QList < SymbolRecord > symbolTable);
   QTreeWidget *m_variablesTreeWidget;
   QSemaphore *m_updateSemaphore;
