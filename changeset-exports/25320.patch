# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1524794296 14400
#      Thu Apr 26 21:58:16 2018 -0400
# Node ID 2ad00275b79b69aa0b70283354d2fdec2c00d980
# Parent  bb43ec3a304e155410d20f5f227cce50ddf4c443
# Parent  56201aad346295bbdbae533cbce262da53886877
maint: Merge stable to default.

diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -1799,16 +1799,57 @@ cdef_object_scalar::is_partially_constru
 inline void
 cdef_object_scalar::mark_as_constructed (const cdef_class& cls)
 {
   ctor_list.erase (cls);
 }
 
 handle_cdef_object::~handle_cdef_object (void)
 {
+  octave::unwind_protect frame;
+
+  // Clear interrupts.
+  frame.protect_var (octave_interrupt_state);
+  octave_interrupt_state = 0;
+
+  // Disallow quit().
+  frame.protect_var (quit_allowed);
+  quit_allowed = false;
+
+  interpreter_try (frame);
+
+  try
+    {
+      // Call classdef "delete()" method on object
+      get_class ().delete_object (get_class ());
+    }
+  catch (const octave::interrupt_exception&)
+    {
+      octave::interpreter::recover_from_exception ();
+
+      warning ("interrupt occurred in handle class delete method");
+    }
+  catch (const octave::execution_exception&)
+    {
+      std::string msg = last_error_message ();
+      warning ("error caught while executing handle class delete method:\n%s\n",
+               msg.c_str ());
+
+    }
+  catch (const octave::exit_exception&)
+    {
+      // This shouldn't happen since we disabled quit above.
+      warning ("exit disabled while executing handle class delete method");
+    }
+  catch (...) // Yes, the black hole.  We're in a d-tor.
+    {
+      // This shouldn't happen, in theory.
+      warning ("internal error: unhandled exception in handle class delete method");
+    }
+
 #if DEBUG_TRACE
   std::cerr << "deleting " << get_class ().get_name ()
             << " object (handle)" << std::endl;
 #endif
 }
 
 value_cdef_object::~value_cdef_object (void)
 {
diff --git a/libinterp/parse-tree/pt-eval.h b/libinterp/parse-tree/pt-eval.h
--- a/libinterp/parse-tree/pt-eval.h
+++ b/libinterp/parse-tree/pt-eval.h
@@ -304,21 +304,23 @@ namespace octave
       switch (m_result_type)
         {
         case RT_UNDEFINED:
           panic_impossible ();
           break;
 
         case RT_VALUE:
           retval = m_expr_result_value;
+          m_expr_result_value = octave_value ();
           break;
 
         case RT_VALUE_LIST:
           retval = (m_expr_result_value_list.empty ()
                     ? octave_value () : m_expr_result_value_list(0));
+          m_expr_result_value_list = octave_value_list ();
           break;
         }
 
       return retval;
     }
 
     octave_value_list evaluate_n (tree_expression *expr, int nargout = 1)
     {
@@ -333,20 +335,22 @@ namespace octave
       switch (m_result_type)
         {
         case RT_UNDEFINED:
           panic_impossible ();
           break;
 
         case RT_VALUE:
           retval = ovl (m_expr_result_value);
+          m_expr_result_value = octave_value ();
           break;
 
         case RT_VALUE_LIST:
           retval = m_expr_result_value_list;
+          m_expr_result_value_list = octave_value_list ();
           break;
         }
 
       return retval;
     }
 
     octave_value evaluate (tree_decl_elt *);
 
diff --git a/scripts/sparse/eigs.m b/scripts/sparse/eigs.m
--- a/scripts/sparse/eigs.m
+++ b/scripts/sparse/eigs.m
@@ -1425,17 +1425,21 @@ endfunction
 %!   assert (d(4), NaN +1i*NaN);
 %! endif
 %!testif HAVE_ARPACK
 %! A = magic (100) / 10 + eye (100);
 %! opts.v0 = (1:100)';
 %! opts.maxit = 10;
 %! warning ("off", "Octave:eigs:UnconvergedEigenvalues", "local");
 %! d = eigs (A, 10, "sm", opts);
-%! assert (d(10), NaN+1i*NaN);
+%! if (isreal (d))
+%!   assert (d(10), NaN);
+%! else
+%!   assert (d(10), NaN +1i*NaN);
+%! endif
 %!testif HAVE_ARPACK
 %! A = toeplitz ([0, 1, zeros(1, 8)], [0, -1, zeros(1, 8)]);
 %! A = kron (A, eye (10)) + kron (eye (10), A);
 %! Afun = @(x) A * x;
 %! opts.v0 = (1:100)';
 %! opts.maxit = 5;
 %! warning ("off", "Octave:eigs:UnconvergedEigenvalues", "local");
 %! d = eigs (Afun, 100, 4, "lm", opts);
diff --git a/test/bug-46497/bug-46497.tst b/test/bug-46497/bug-46497.tst
new file mode 100644
--- /dev/null
+++ b/test/bug-46497/bug-46497.tst
@@ -0,0 +1,24 @@
+## Copyright (C) 2017 Piotr Held
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or
+## (at your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+%!test
+%! global __bug46497_global__
+%! __bug46497_global__ = 'test_bug46497';
+%! a = class_bug46497 ();
+%! a = [];
+%! assert(__bug46497_global__,'deleted');
\ No newline at end of file
diff --git a/test/bug-46497/class_bug46497.m b/test/bug-46497/class_bug46497.m
new file mode 100644
--- /dev/null
+++ b/test/bug-46497/class_bug46497.m
@@ -0,0 +1,8 @@
+classdef class_bug46497 < handle
+  methods
+    function delete (self)
+      global __bug46497_global__
+      __bug46497_global__ = 'deleted';
+    endfunction
+  endmethods
+endclassdef
diff --git a/test/bug-46497/module.mk b/test/bug-46497/module.mk
new file mode 100644
--- /dev/null
+++ b/test/bug-46497/module.mk
@@ -0,0 +1,5 @@
+bug_46497_TEST_FILES = \
+  %reldir%/bug-46497.tst \
+  %reldir%/class_bug46497.m
+
+TEST_FILES += $(bug_46497_TEST_FILES)
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -51,16 +51,17 @@ DIRSTAMP_FILES += %reldir%/$(octave_dirs
 
 include %reldir%/bug-35448/module.mk
 include %reldir%/bug-35881/module.mk
 include %reldir%/bug-36025/module.mk
 include %reldir%/bug-38236/module.mk
 include %reldir%/bug-38691/module.mk
 include %reldir%/bug-41723/module.mk
 include %reldir%/bug-44940/module.mk
+include %reldir%/bug-46497/module.mk
 include %reldir%/bug-46660/module.mk
 include %reldir%/bug-49379/module.mk
 include %reldir%/bug-50014/module.mk
 include %reldir%/bug-50035/module.mk
 include %reldir%/bug-50716/module.mk
 include %reldir%/bug-51192/module.mk
 include %reldir%/bug-51532/module.mk
 include %reldir%/bug-51534/module.mk
