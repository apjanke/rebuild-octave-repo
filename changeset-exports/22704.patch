# HG changeset patch
# User Rik <rik@octave.org>
# Date 1477941763 25200
#      Mon Oct 31 12:22:43 2016 -0700
# Node ID b5407b1ab11a4d179fc3c3b7d899404498e1c685
# Parent  f8674f166dd5d46d36df6060164af26b857cf754
Provide extra info message when gl2ps buffer overflows (bug #49482).

* gl2ps-print.cc (gl2ps_renderer::draw): If buffer overflows, print a warning
message that Octave will retry with a larger buffer size.

diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -212,17 +212,17 @@ namespace octave
 
         while (buffer_overflow)
           {
             buffer_overflow = false;
             buffsize *= 2;
             std::fseek (tmpf, 0, SEEK_SET);
             octave_ftruncate_wrapper (fileno (tmpf), 0);
 
-            // For LaTeX output the fltk print process uses 2 drawnow() commands.
+            // For LaTeX output the print process uses 2 drawnow() commands.
             // The first one is for the pdf/ps/eps graph to be included.  The
             // print_cmd is saved as old_print_cmd.  Then the second drawnow()
             // outputs the tex-file and the graphic filename to be included is
             // extracted from old_print_cmd.
 
             std::string include_graph;
 
             size_t found_redirect = old_print_cmd.find (">");
@@ -258,16 +258,19 @@ namespace octave
             if (ret == GL2PS_ERROR)
               {
                 old_print_cmd.clear ();
                 error ("gl2ps_renderer::draw: gl2psBeginPage returned GL2PS_ERROR");
               }
 
             octave::opengl_renderer::draw (go);
 
+            if (buffer_overflow)
+              warning ("gl2ps_renderer::draw: retrying with buffer size: %.1E B\n", double (2*buffsize));
+
             if (! buffer_overflow)
               old_print_cmd = print_cmd;
 
             // Don't check return value of gl2psEndPage, it is not meaningful.
             // Errors and warnings are checked after gl2psEndViewport in
             // gl2ps_renderer::draw_axes instead.
             gl2psEndPage ();
           }
