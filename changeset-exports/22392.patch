# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1472112142 -7200
#      Thu Aug 25 10:02:22 2016 +0200
# Node ID 4dfb28724863870c10a076ee4916af65205faa5e
# Parent  c5da5e5e984613e2e5574b942e95fd5a5b6ab0e3
Clip double RGB data before passing to gl2psDrawPixels (bug #48873).

* gl2ps-print.cc (gl2ps_renderer::draw_pixels): clip data between 0 and 1.

* imshow.m: Correct title of demo #8.

diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -686,17 +686,23 @@ namespace octave
       (props.get ("fontangle").xtolower ().string_value () == "italic");
 
     fontname = select_font (fn, isbold, isitalic);
   }
 
   void
   gl2ps_renderer::draw_pixels (int w, int h, const float *data)
   {
-    gl2psDrawPixels (w, h, 0, 0, GL_RGB, GL_FLOAT, data);
+    // Clip data between 0 and 1 for float values 
+    OCTAVE_LOCAL_BUFFER (float, tmp_data, 3*w*h);
+
+    for (int i = 0; i < 3*h*w; i++)
+      tmp_data[i] = (data[i] < 0.0f ? 0.0f : (data[i] > 1.0f ? 1.0f : data[i]));
+        
+    gl2psDrawPixels (w, h, 0, 0, GL_RGB, GL_FLOAT, tmp_data);
   }
 
   void
   gl2ps_renderer::draw_pixels (int w, int h, const uint8_t *data)
   {
     // gl2psDrawPixels only supports the GL_FLOAT type.
 
     OCTAVE_LOCAL_BUFFER (float, tmp_data, 3*w*h);
diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -251,17 +251,17 @@ endfunction
 %!demo
 %! clf;
 %! imshow (rand (100, 100, 3));
 %! title ({"imshow with random 100x100x3 matrix", "RGB color"});
 
 %!demo
 %! clf;
 %! imshow (100*rand (100, 100, 3));
-%! title ({"imshow with random 100x100x3 matrix", "Indexed color"});
+%! title ({"imshow with random 100x100x3 matrix", "RGB values > 1 are clipped"});
 
 ## Test input validation
 %!error imshow ()
 %!error <IM must be an image> imshow ({"cell"})
 %!error <TrueColor image must be uint8> imshow (ones (3,3,3, "uint32"))
 %!error <TrueColor image must be uint8> imshow (ones (3,3,3, "int16"))
 %!error <image must be MxN or MxNx3 matrix> imshow (ones (4,4,4))
 
