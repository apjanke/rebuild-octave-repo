# HG changeset patch
# User Rik <rik@octave.org>
# Date 1531843090 25200
#      Tue Jul 17 08:58:10 2018 -0700
# Node ID d1216d085280fc030b03441c77b5d1c9993e2d9b
# Parent  f092ffdc77704d9a951bcdf7c2359dd254a6a323
# Parent  b96ab99e67bb4386abb64271b216f6d47ded0716
maint: merge stable to default.

diff --git a/scripts/plot/draw/hist.m b/scripts/plot/draw/hist.m
--- a/scripts/plot/draw/hist.m
+++ b/scripts/plot/draw/hist.m
@@ -103,18 +103,22 @@ function [nn, xx] = hist (varargin)
     max_val = double (max_val);
     min_val = double (min_val);
   endif
 
   ## Process possible second argument
   if (nargin == 1 || ischar (varargin{iarg}))
     n = 10;
     ## Use range type to preserve accuracy
-    x = (0.5:n) * (1/n);
-    x = (max_val - min_val) * x + min_val;
+    if (min_val != max_val)
+      x = (0.5:n) * (1/n);
+      x = (max_val - min_val) * x + min_val;
+    else
+      x = (-floor ((n-1)/2):ceil ((n-1)/2)) + min_val;
+    endif
     x = x.';  # Convert to matrix;
   else
     ## Parse bin specification argument
     x = varargin{iarg++};
     if (! isreal (x))
       error ("hist: bin specification must be a numeric scalar or vector");
     endif
 
@@ -124,18 +128,22 @@ function [nn, xx] = hist (varargin)
     endif
 
     if (isscalar (x))
       n = fix (x);
       if (n <= 0)
         error ("hist: number of bins NBINS must be positive");
       endif
       ## Use range type to preserve accuracy
-      x = (0.5:n) * (1/n);
-      x = (max_val - min_val) * x + min_val;
+      if (min_val != max_val)
+        x = (0.5:n) * (1/n);
+        x = (max_val - min_val) * x + min_val;
+      else
+        x = (-floor ((n-1)/2):ceil ((n-1)/2)) + min_val;
+      endif
       x = x.';  # Convert to matrix;
     elseif (isvector (x))
       x = x(:);
       if (! issorted (x))
         warning ("hist: bin values X not sorted on input");
         x = sort (x);
       endif
     else
@@ -228,16 +236,20 @@ endfunction
 %! for n = [10, 30, 100, 1000]
 %!   assert (sum (hist ([1:n], n)), n);
 %!   assert (sum (hist ([1:n], [2:n-1])), n);
 %!   assert (sum (hist ([1:n], [1:n])), n);
 %!   assert (sum (hist ([1:n], 29)), n);
 %!   assert (sum (hist ([1:n], 30)), n);
 %! endfor
 %!assert (hist (1,1), 1)
+%!test <*54326> # All values identical
+%! [nn,xx] = hist (ones (1,5), 3);
+%! assert (nn, [0,5,0]);
+%! assert (xx, [0,1,2]);
 %!assert (size (hist (randn (750,240), 200)), [200, 240])
 %!assert <*42394> (isempty (hist (rand (10,2), 0:5, 1)), false)
 %!assert <*42394> (isempty (hist (rand (10,2), 0:5, [1 1])), false)
 
 %!test <*47707>
 %! y = [1  9  2  2  9  3  8  9  1  7  1  1  3  2  4  4  8  2  1  9  4  1 ...
 %!      2  3  1  1  6  5  5  3  9  9  1  1  8  7  7  2  4  1];
 %! [n, x] = hist (y, 10);
