# HG changeset patch
# User jwe
# Date 822360853 0
#      Tue Jan 23 01:34:13 1996 +0000
# Node ID 4688b760ccb2d43da8a0bc87574aa62c175cfe87
# Parent  78d87372e6013a0face0c460dc6ee7f1da58f147
[project @ 1996-01-23 01:34:07 by jwe]

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -234,41 +234,16 @@ make_absolute (const string& s, const st
 	  current_path.append (s, i, tmp-i+1);
 	  i = tmp + 1;
 	}
     }
 
   return current_path;
 }
 
-// Has file `A' been modified after time `T'?
-//
-// case:
-//
-//   a newer than t         returns    1
-//   a older than t         returns    0
-//   stat on a fails        returns   -1
-
-int
-is_newer (const string& fa, time_t t)
-{
-  struct stat fa_sb;
-  register int fa_stat;
-  register int status = 0;
-
-  fa_stat = stat (fa.c_str (), &fa_sb);
-  if (fa_stat != 0)
-    status = -1;
-
-  if (status != 0)
-    return status;
-
-  return (fa_sb.st_mtime > t);
-}
-
 // Return a consed string which is the current working directory.
 // FOR_WHOM is the name of the caller for error printing.
 
 string
 get_working_directory (const string& for_whom)
 {
   if (! follow_symbolic_links)
     the_current_working_directory = "";
diff --git a/src/dirfns.h b/src/dirfns.h
--- a/src/dirfns.h
+++ b/src/dirfns.h
@@ -28,17 +28,16 @@ Software Foundation, 59 Temple Place - S
 
 #include <string>
 
 extern string polite_directory_format (const string&);
 extern int absolute_pathname (const string&);
 extern int absolute_program (const string&);
 extern string base_pathname (const string&);
 extern string make_absolute (const string&, const string&);
-extern int is_newer (const string&, time_t);
 extern string get_working_directory (const string&);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
