# HG changeset patch
# User jwe
# Date 949300523 0
#      Mon Jan 31 06:35:23 2000 +0000
# Node ID 7923abdeb4e5fd8a048d449fde739073428e39c9
# Parent  3e3e14ad5149319eb13b32f24e8d88bad484e273
[project @ 2000-01-31 06:35:00 by jwe]

diff --git a/scripts/control/base/__bodquist__.m b/scripts/control/base/__bodquist__.m
--- a/scripts/control/base/__bodquist__.m
+++ b/scripts/control/base/__bodquist__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{f}, @var{w}, @var{rsys} =} __bodquist__ (@var{sys}, @var{w}, @var{out_idx}, @var{in_idx})
+## @deftypefn {Function File} {[@var{f}, @var{w}, @var{rsys}] =} __bodquist__ (@var{sys}, @var{w}, @var{out_idx}, @var{in_idx})
 ## used internally by bode, nyquist; compute system frequency response.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## input system structure
 ## @item w
 ## range of frequencies; empty if user wants default
diff --git a/scripts/control/base/__freqresp__.m b/scripts/control/base/__freqresp__.m
--- a/scripts/control/base/__freqresp__.m
+++ b/scripts/control/base/__freqresp__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{out} =} __freqresp__ (@var{sys}, @var{USEW}@{,@var{w}@});
+## @deftypefn {Function File} {} __freqresp__ (@var{sys}, @var{USEW}, @var{w})
 ## Frequency response function - used internally by @code{bode}, @code{nyquist}.
 ## minimal argument checking; "do not attempt to do this at home"
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ## @item USEW
diff --git a/scripts/control/base/__stepimp__.m b/scripts/control/base/__stepimp__.m
--- a/scripts/control/base/__stepimp__.m
+++ b/scripts/control/base/__stepimp__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{y}, @var{t}] = } __stepimp__ (@var{sitype}, @var{sys} [, @var{inp}, @var{tstop}, @var{n}])
+## @deftypefn {Function File} {[@var{y}, @var{t}] =} __stepimp__ (@var{sitype}, @var{sys} [, @var{inp}, @var{tstop}, @var{n}])
 ## Impulse or step response for a linear system.
 ## The system can be discrete or multivariable (or both).
 ## This m-file contains the "common code" of step and impulse.
 ##
 ## Produces a plot or the response data for system sys.
 ##
 ## Limited argument checking; "do not attempt to do this at home".
 ## Used internally in @code{impulse}, @code{step}. Use @code{step}
diff --git a/scripts/control/base/bddemo.m b/scripts/control/base/bddemo.m
--- a/scripts/control/base/bddemo.m
+++ b/scripts/control/base/bddemo.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} bddemo (@var{inputs})
+## @deftypefn {Function File} {} bddemo (@var{inputs})
 ## Octave Controls toolbox demo: Block Diagram Manipulations demo
 ## @end deftypefn
 
 ## Author: David Clem
 ## Created: August 15, 1994
 ## Modified by A S Hodel Summer-Fall 1996
 
 function bddemo ()
diff --git a/scripts/control/base/bode.m b/scripts/control/base/bode.m
--- a/scripts/control/base/bode.m
+++ b/scripts/control/base/bode.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{mag}, @var{phase}, @var{w}] =} bode(@var{sys}@{,@var{w}, @var{out_idx}, @var{in_idx}@})
+## @deftypefn {Function File} {[@var{mag}, @var{phase}, @var{w}] =} bode(@var{sys}, @var{w}, @var{out_idx}, @var{in_idx})
 ## If no output arguments are given: produce Bode plots of a system; otherwise,
 ## compute the frequency response of a system data structure
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   sys
 ## a system data structure (must be either purely continuous or discrete;
 ## see is_digital)
@@ -33,17 +33,17 @@
 ## @math{G(s)} is the system transfer function.
 ##
 ## if @var{sys} is discrete, then bode evaluates G(@code{exp}(jwT)), where
 ## @itemize @bullet
 ## @item @var{T}=@code{sysgettsam(@var{sys})} (the system sampling time) and
 ## @item @math{G(z)} is the system transfer function.
 ## @end itemize
 ##
-## @strong{ Default} the default frequency range is selected as follows: (These
+## @strong{Default} the default frequency range is selected as follows: (These
 ## steps are NOT performed if @var{w} is specified)
 ## @enumerate
 ## @item via routine __bodquist__, isolate all poles and zeros away from
 ## @var{w}=0 (@var{jw}=0 or @math{@code{exp}(jwT)}=1) and select the frequency
 ## range based on the breakpoint locations of the frequencies.
 ## @item if @var{sys} is discrete time, the frequency range is limited
 ##               to @math{jwT} in
 ## @ifinfo
diff --git a/scripts/control/base/bode_bounds.m b/scripts/control/base/bode_bounds.m
--- a/scripts/control/base/bode_bounds.m
+++ b/scripts/control/base/bode_bounds.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{wmin}, @var{wmax}] =} bode_bounds (@var{zer}, @var{pol}, @var{dflg}@{, @var{tsam} @})
+## @deftypefn {Function File} {[@var{wmin}, @var{wmax}] =} bode_bounds (@var{zer}, @var{pol}, @var{dflg}, @var{tsam})
 ## Get default range of frequencies based on cutoff frequencies of system
 ## poles and zeros.
 ## Frequency range is the interval [10^wmin,10^wmax]
 ##
 ## Used internally in __freqresp__ (@code{bode}, @code{nyquist})
 ## @end deftypefn
 
 function [wmin, wmax] = bode_bounds (zer, pol, DIGITAL, tsam)
diff --git a/scripts/control/base/ctrb.m b/scripts/control/base/ctrb.m
--- a/scripts/control/base/ctrb.m
+++ b/scripts/control/base/ctrb.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{Qs} =} ctrb(@var{sys} @{, @var{b}@})
-## @deftypefnx {Function File} {@var{Qs} =} ctrb(@var{A}, @var{B})
+## @deftypefn {Function File} {} ctrb(@var{sys}, @var{b})
+## @deftypefnx {Function File} {} ctrb(@var{A}, @var{B})
 ## Build controllability matrix
 ## @example
 ##              2       n-1
 ## Qs = [ B AB A B ... A   B ]
 ## @end example
 ##
 ## of a system data structure or the pair (@var{A}, @var{B}).
 ##
diff --git a/scripts/control/base/damp.m b/scripts/control/base/damp.m
--- a/scripts/control/base/damp.m
+++ b/scripts/control/base/damp.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} damp(@var{p}@{, @var{tsam}@})
+## @deftypefn {Function File} {} damp(@var{p}, @var{tsam})
 ## Displays eigenvalues, natural frequencies and damping ratios
 ## of the eigenvalues of a matrix @var{p} or the @var{A}-matrix of a
 ## system @var{p}, respectively.
 ## If @var{p} is a system, @var{tsam} must not be specified.
 ## If @var{p} is a matrix and @var{tsam} is specified, eigenvalues
 ## of @var{p} are assumed to be in @var{z}-domain.
 ## @end deftypefn
 ## @seealso{eig}
diff --git a/scripts/control/base/dcgain.m b/scripts/control/base/dcgain.m
--- a/scripts/control/base/dcgain.m
+++ b/scripts/control/base/dcgain.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{gm} =} dcgain (@var{sys}@{, tol@})
+## @deftypefn {Function File} {} dcgain (@var{sys}, tol)
 ## Returns dc-gain matrix. If dc-gain is infinite
 ## an empty matrix is returned.
 ## The argument @var{tol} is an optional tolerance for the condition
 ## number of @var{A}-Matrix in @var{sys} (default @var{tol} = 1.0e-10)
 ## @end deftypefn
 
 ## Author: Kai P. Mueller <mueller@ifr.ing.tu-bs.de>
 ## Created: October 1, 1997
diff --git a/scripts/control/base/dgram.m b/scripts/control/base/dgram.m
--- a/scripts/control/base/dgram.m
+++ b/scripts/control/base/dgram.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{m} =} dgram (@var{a}, @var{b})
+## @deftypefn {Function File} {} dgram (@var{a}, @var{b})
 ## Return controllability grammian of discrete time system
 ## @example
 ##   x(k+1) = a x(k) + b u(k)
 ## @end example
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item a
diff --git a/scripts/control/base/dlyap.m b/scripts/control/base/dlyap.m
--- a/scripts/control/base/dlyap.m
+++ b/scripts/control/base/dlyap.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} dlyap (@var{a}, @var{b})
+## @deftypefn {Function File} {} dlyap (@var{a}, @var{b})
 ## Solve the discrete-time Lyapunov equation
 ##
 ## @strong{Inputs}
 ## @table @var
 ##   @item a
 ##   @var{n} by @var{n} matrix
 ##   @item b
 ##   Matrix: @var{n} by @var{n}, @var{n} by @var{m}, or @var{p} by @var{n}.
diff --git a/scripts/control/base/dre.m b/scripts/control/base/dre.m
--- a/scripts/control/base/dre.m
+++ b/scripts/control/base/dre.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{tvals},@var{Plist}] =} dre (@var{sys},@var{Q},@var{R},@var{Qf},@var{t0},@var{tf}[,@var{Ptol},@var{maxits}]);
+## @deftypefn {Function File} {[@var{tvals}, @var{Plist}] =} dre (@var{sys}, @var{Q}, @var{R}, @var{Qf}, @var{t0}, @var{tf}[, @var{Ptol}, @var{maxits}]);
 ## Solve the differential Riccati equation
 ## @ifinfo
 ## @example
 ##   -d P/dt = A'P + P A - P B inv(R) B' P + Q
 ##   P(tf) = Qf
 ## @end example
 ## @end ifinfo
 ## @iftex
@@ -72,17 +72,17 @@
 ## @item maxits
 ## number of refinement iterations (default=10)
 ## @end table
 ## @strong{Outputs}
 ## @table @var
 ## @item tvals
 ## time values at which @var{P}(@var{t}) is computed
 ## @item Plist
-## list values of @var{P}(@var{t}); nth(@var{Plist},@var{ii})
+## list values of @var{P}(@var{t}); nth (@var{Plist}, @var{ii})
 ## is @var{P}(@var{tvals}(@var{ii})).
 ##
 ## @item tvals
 ## @example
 ## is selected so that || nth(Plist,ii) - nth(Plist,ii-1) || < Ptol
 ## for ii=2:length(tvals)
 ## @end example
 ## @end table
diff --git a/scripts/control/base/freqchkw.m b/scripts/control/base/freqchkw.m
--- a/scripts/control/base/freqchkw.m
+++ b/scripts/control/base/freqchkw.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} freqchkw (@var{w})
+## @deftypefn {Function File} {} freqchkw (@var{w})
 ## Used by @code{__freqresp__} to check that input frequency vector @var{w}
 ## is valid.
 ## Returns boolean value.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 1996
 
diff --git a/scripts/control/base/gram.m b/scripts/control/base/gram.m
--- a/scripts/control/base/gram.m
+++ b/scripts/control/base/gram.m
@@ -12,21 +12,21 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{m} =} gram (@var{a}, @var{b})
+## @deftypefn {Function File} {} gram (@var{a}, @var{b})
 ## Return controllability grammian @var{m} of the continuous time system
-## @math{ dx/dt = a x + b u}.
+## @math{dx/dt = a x + b u}.
 ##
-## @var{m} satisfies @math{ a m + m a' + b b' = 0 }.
+## @var{m} satisfies @math{a m + m a' + b b' = 0}.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 
 function m = gram (a, b)
 
   ## let lyap do the error checking...
   m = lyap(a,b*b');
diff --git a/scripts/control/base/impulse.m b/scripts/control/base/impulse.m
--- a/scripts/control/base/impulse.m
+++ b/scripts/control/base/impulse.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{y}, @var{t}] =} impulse (@var{sys}@{, @var{inp},@var{tstop}, @var{n}@})
+## @deftypefn {Function File} {[@var{y}, @var{t}] =} impulse (@var{sys}, @var{inp}, @var{tstop}, @var{n})
 ## Impulse response for a linear system.
 ## The system can be discrete or multivariable (or both).
 ## If no output arguments are specified, @code{impulse}
 ## produces a plot or the impulse response data for system @var{sys}.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
diff --git a/scripts/control/base/lsim.m b/scripts/control/base/lsim.m
--- a/scripts/control/base/lsim.m
+++ b/scripts/control/base/lsim.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} lsim (@var{sys}, @var{u}, @var{t}@{,@var{x0}@})
+## @deftypefn {Function File} {} lsim (@var{sys}, @var{u}, @var{t}, @var{x0})
 ## Produce output for a linear simulation of a system
 ##
 ## Produces a plot for the output of the system, sys.
 ##
 ## U is an array that contains the system's inputs.  Each column in u
 ## corresponds to a different time step.  Each row in u corresponds to a
 ## different input.  T is an array that contains the time index of the
 ## system.  T should be regularly spaced.  If initial conditions are required
diff --git a/scripts/control/base/ltifr.m b/scripts/control/base/ltifr.m
--- a/scripts/control/base/ltifr.m
+++ b/scripts/control/base/ltifr.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{out} =} ltifr (@var{A}, @var{B}, @var{w})
-## @deftypefnx {Function File} {@var{out} =} ltifr (@var{sys}, @var{w})
+## @deftypefn {Function File} {} ltifr (@var{A}, @var{B}, @var{w})
+## @deftypefnx {Function File} {} ltifr (@var{sys}, @var{w})
 ## Linear time invariant frequency response of single input systems
 ## @strong{Inputs}
 ## @table @var
 ## @item A
 ## @itemx B
 ## coefficient matrices of @math{dx/dt = A x + B u}
 ## @item sys
 ## system data structure
diff --git a/scripts/control/base/nyquist.m b/scripts/control/base/nyquist.m
--- a/scripts/control/base/nyquist.m
+++ b/scripts/control/base/nyquist.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{realp}, @var{imagp}, @var{w}] =} nyquist (@var{sys}@{, @var{w}, @var{out_idx}, @var{in_idx}, @var{atol}@})
-## @deftypefnx {Function File } {} nyquist (@var{sys}@{, @var{w}, @var{out_idx}, @var{in_idx}, @var{atol}@})
+## @deftypefn {Function File} {[@var{realp}, @var{imagp}, @var{w}] =} nyquist (@var{sys}, @var{w}, @var{out_idx}, @var{in_idx}, @var{atol})
+## @deftypefnx {Function File} {} nyquist (@var{sys}, @var{w}, @var{out_idx}, @var{in_idx}, @var{atol})
 ## Produce Nyquist plots of a system; if no output arguments are given, Nyquist
 ## plot is printed to the screen.
 ##
 ## Compute the frequency response of a system.
 ## @strong{Inputs} (pass as empty to get default values)
 ## @table @var
 ## @item sys
 ## system data structure (must be either purely continuous or discrete;
diff --git a/scripts/control/base/obsv.m b/scripts/control/base/obsv.m
--- a/scripts/control/base/obsv.m
+++ b/scripts/control/base/obsv.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-##@deftypefn {Function File} {@var{Qb} =} obsv (@var{sys}@{, @var{c}@})
+##@deftypefn {Function File} {} obsv (@var{sys}, @var{c})
 ## Build observability matrix
 ## @example
 ## @group
 ##      | C        |
 ##      | CA       |
 ## Qb = | CA^2     |
 ##      | ...      |
 ##      | CA^(n-1) |
diff --git a/scripts/control/base/place.m b/scripts/control/base/place.m
--- a/scripts/control/base/place.m
+++ b/scripts/control/base/place.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{K} =} place (@var{sys}, @var{P})
+## @deftypefn {Function File} {} place (@var{sys}, @var{P})
 ## Computes the matrix  K such that if the state
 ## is feedback with gain K, then the eigenvalues  of the closed loop
 ## system (i.e. A-BK) are those specified in the vector P.
 ##
 ## Version: Beta (May-1997): If you have any comments, please let me know.
 ## (see the file place.m for my address)
 ## @end deftypefn
 
diff --git a/scripts/control/base/rldemo.m b/scripts/control/base/rldemo.m
--- a/scripts/control/base/rldemo.m
+++ b/scripts/control/base/rldemo.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-##@deftypefn {Function File} {@var{outputs} =} rldemo (@var{inputs})
+##@deftypefn {Function File} {} rldemo (@var{inputs})
 ##Octave Controls toolbox demo: Root Locus demo
 ##@end deftypefn
 
 ## Author: David Clem
 ## Created: August 15, 1994
 ## Updated by John Ingram December 1996
 
 function rldemo ()
diff --git a/scripts/control/base/rlocus.m b/scripts/control/base/rlocus.m
--- a/scripts/control/base/rlocus.m
+++ b/scripts/control/base/rlocus.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} rlocus (@var{inputs})
+## @deftypefn {Function File} {} rlocus (@var{inputs})
 ## @format
 ## [rldata, k] = rlocus(sys[,increment,min_k,max_k])
 ## Displays root locus plot of the specified SISO system.
 ##
 ##        -----   ---     --------
 ##    --->| + |---|k|---->| SISO |----------->
 ##        -----   ---     --------        |
 ##        - ^                             |
diff --git a/scripts/control/base/step.m b/scripts/control/base/step.m
--- a/scripts/control/base/step.m
+++ b/scripts/control/base/step.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{y}, @var{t}] =} step (@var{sys}@{, @var{inp},@var{tstop}, @var{n}@})
+## @deftypefn {Function File} {[@var{y}, @var{t}] =} step (@var{sys}, @var{inp}, @var{tstop}, @var{n})
 ## Step response for a linear system.
 ## The system can be discrete or multivariable (or both).
 ## If no output arguments are specified, @code{step}
 ## produces a plot or the step response data for system @var{sys}.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
diff --git a/scripts/control/base/tzero.m b/scripts/control/base/tzero.m
--- a/scripts/control/base/tzero.m
+++ b/scripts/control/base/tzero.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} tzero (@var{a}, @var{b}, @var{c}, @var{d}@{, @var{opt}@})
-## @deftypefnx {Function File} {} tzero (@var{sys}@{,@var{opt}@})
+## @deftypefn {Function File} {} tzero (@var{a}, @var{b}, @var{c}, @var{d}, @var{opt})
+## @deftypefnx {Function File} {} tzero (@var{sys}, @var{opt})
 ## Compute transmission zeros of a continuous
 ## @example
 ## .
 ## x = Ax + Bu
 ## y = Cx + Du
 ## @end example
 ## or discrete
 ## @example
diff --git a/scripts/control/base/tzero2.m b/scripts/control/base/tzero2.m
--- a/scripts/control/base/tzero2.m
+++ b/scripts/control/base/tzero2.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{zr} =} tzero2 (@var{a}, @var{b}, @var{c}, @var{d}, @var{bal})
+## @deftypefn {Function File} {} tzero2 (@var{a}, @var{b}, @var{c}, @var{d}, @var{bal})
 ## Compute the transmission zeros of a, b, c, d.
 ##
 ## bal = balancing option (see balance); default is "B".
 ##
 ## Needs to incorporate @code{mvzero} algorithm to isolate finite zeros; use
 ## @code{tzero} instead.
 ## @end deftypefn
 
diff --git a/scripts/control/hinf/h2norm.m b/scripts/control/hinf/h2norm.m
--- a/scripts/control/hinf/h2norm.m
+++ b/scripts/control/hinf/h2norm.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function Fil} {@var{retval} =} h2norm(@var{sys})
+## @deftypefn {Function Fil} {} h2norm(@var{sys})
 ## Computes the H2 norm of a system data structure (continuous time only)
 ##
 ## Reference:
 ## Doyle, Glover, Khargonekar, Francis, ``State Space Solutions to Standard
 ## H2 and Hinf Control Problems", IEEE TAC August 1989
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
diff --git a/scripts/control/hinf/hinf_ctr.m b/scripts/control/hinf/hinf_ctr.m
--- a/scripts/control/hinf/hinf_ctr.m
+++ b/scripts/control/hinf/hinf_ctr.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File } {@var{K} =} hinf_ctr(@var{dgs}, @var{F}, @var{H}, @var{Z}, @var{g})
+## @deftypefn {Function File} {} hinf_ctr(@var{dgs}, @var{F}, @var{H}, @var{Z}, @var{g})
 ## Called by @code{hinfsyn} to compute the H_inf optimal controller.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item dgs
 ## data structure returned by @code{is_dgkf}
 ## @item F
 ## @itemx H
diff --git a/scripts/control/hinf/hinfnorm.m b/scripts/control/hinf/hinfnorm.m
--- a/scripts/control/hinf/hinfnorm.m
+++ b/scripts/control/hinf/hinfnorm.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{g}, @var{gmin}, @var{gmax}] =} hinfnorm(@var{sys}@{, @var{tol}, @var{gmin}, @var{gmax}, @var{ptol}@})
+## @deftypefn {Function File} {[@var{g}, @var{gmin}, @var{gmax}] =} hinfnorm(@var{sys}, @var{tol}, @var{gmin}, @var{gmax}, @var{ptol})
 ##  Computes the H infinity norm of a system data structure.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ## @item tol
 ## H infinity norm search tolerance (default: 0.001)
diff --git a/scripts/control/hinf/hinfsyn.m b/scripts/control/hinf/hinfsyn.m
--- a/scripts/control/hinf/hinfsyn.m
+++ b/scripts/control/hinf/hinfsyn.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{K}, @var{g}, @var{GW}, @var{Xinf}, @var{Yinf}] =} hinfsyn(@var{Asys}, @var{nu}, @var{ny}, @var{gmin}, @var{gmax}, @var{gtol}@{, @var{ptol}, @var{tol}@})
+## @deftypefn {Function File} {[@var{K}, @var{g}, @var{GW}, @var{Xinf}, @var{Yinf}] =} hinfsyn(@var{Asys}, @var{nu}, @var{ny}, @var{gmin}, @var{gmax}, @var{gtol}, @var{ptol}, @var{tol})
 ##
 ## @strong{Inputs} input system is passed as either
 ## @table @var
 ## @item Asys
 ## system data structure (see ss2sys, sys2ss)
 ## @itemize @bullet
 ## @item controller is implemented for continuous time systems
 ## @item controller is NOT implemented for discrete time systems  (see
diff --git a/scripts/control/hinf/hinfsyn_ric.m b/scripts/control/hinf/hinfsyn_ric.m
--- a/scripts/control/hinf/hinfsyn_ric.m
+++ b/scripts/control/hinf/hinfsyn_ric.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{Xinf},@var{x_ha_err}] =} hinfsyn_ric(@var{A},@var{BB}.@var{C1},@var{d1dot},@var{R},@var{ptol})
+## @deftypefn {Function File} {[@var{Xinf}, @var{x_ha_err}] =} hinfsyn_ric (@var{A}, @var{BB}, @var{C1}, @var{d1dot}, @var{R}, @var{ptol})
 ## Forms
 ## @example
 ## xx = ([BB; -C1'*d1dot]/R) * [d1dot'*C1 BB'];
 ## Ha = [A 0*A; -C1'*C1 -A'] - xx;
 ## @end example
 ## and solves associated Riccati equation.
 ## The error code @var{x_ha_err} indicates one of the following
 ## conditions:
diff --git a/scripts/control/hinf/is_dgkf.m b/scripts/control/hinf/is_dgkf.m
--- a/scripts/control/hinf/is_dgkf.m
+++ b/scripts/control/hinf/is_dgkf.m
@@ -55,23 +55,23 @@
 ## dimensions of @var{w}, @var{z}
 ## @item      A
 ## system @var{A} matrix
 ## @item      Bw
 ## (@var{n} x @var{nw}) @var{Qw}-transformed disturbance input matrix
 ## @item      Bu
 ## (@var{n} x @var{nu}) @var{Ru}-transformed controlled input matrix;
 ##
-## @strong{Note} @math{B = [Bw Bu] }
+## @strong{Note} @math{B = [Bw Bu]}
 ## @item      Cz
 ## (@var{nz} x @var{n}) Qz-transformed error output matrix
 ## @item      Cy
 ## (@var{ny} x @var{n}) @var{Ry}-transformed measured output matrix
 ##
-## @strong{Note} @math{C = [Cz; Cy] }
+## @strong{Note} @math{C = [Cz; Cy]}
 ## @item      Dzu
 ## @item      Dyw
 ## off-diagonal blocks of transformed @var{D} matrix that enter
 ## @var{z}, @var{y} from @var{u}, @var{w} respectively
 ## @item      Ru
 ## controlled input transformation matrix
 ## @item      Ry
 ## observed output transformation matrix
diff --git a/scripts/control/hinf/wgt1o.m b/scripts/control/hinf/wgt1o.m
--- a/scripts/control/hinf/wgt1o.m
+++ b/scripts/control/hinf/wgt1o.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{wsys} =} wgt1o (@var{vl}, @var{vh}, @var{fc})
+## @deftypefn {Function File} {} wgt1o (@var{vl}, @var{vh}, @var{fc})
 ## State space description of a first order weighting function.
 ##
 ## Weighting function are needed by the H2/H_infinity design procedure.
 ## These function are part of thye augmented plant P (see hinfdemo
 ## for an applicattion example).
 ##
 ## vl = Gain at low frequencies
 ##
diff --git a/scripts/control/obsolete/dezero.m b/scripts/control/obsolete/dezero.m
--- a/scripts/control/obsolete/dezero.m
+++ b/scripts/control/obsolete/dezero.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Functin File} {@var{t} =} dezero (@var{s})
+## @deftypefn {Functin File} {} dezero (@var{s})
 ## Remove trailing blank entries and all zero entries from the string s.
 ## @end deftypefn
 
 ## Author: Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at>
 ## Adapted-By: jwe
 
 ## Adapted from deblank by A. S. Hodel (a.s.hodel@eng.auburn.edu)
 ##      (the name dezero is a reference to the Fermilab D0 experiment,
diff --git a/scripts/control/obsolete/qzval.m b/scripts/control/obsolete/qzval.m
--- a/scripts/control/obsolete/qzval.m
+++ b/scripts/control/obsolete/qzval.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File } { @var{x} =} qzval (@var{A}, @var{B})
+## @deftypefn {Function File} {} qzval (@var{A}, @var{B})
 ## Compute generalized eigenvalues of the matrix pencil
 ## @ifinfo
 ## @example
 ## (A - lambda B).
 ## @end example
 ## @end ifinfo
 ## @iftex
 ## @tex
diff --git a/scripts/control/obsolete/swapcols.m b/scripts/control/obsolete/swapcols.m
--- a/scripts/control/obsolete/swapcols.m
+++ b/scripts/control/obsolete/swapcols.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File } { outputs =} swapcols ( inputs )
+## @deftypefn {Function File} {} swapcols (inputs)
 ## @format
 ##  function B = swapcols(A)
 ##  permute columns of A into reverse order
 ## @end format
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 23, 1992
diff --git a/scripts/control/obsolete/swaprows.m b/scripts/control/obsolete/swaprows.m
--- a/scripts/control/obsolete/swaprows.m
+++ b/scripts/control/obsolete/swaprows.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File } { outputs =} swaprows ( inputs )
+## @deftypefn {Function File} {} swaprows (inputs)
 ## @format
 ##  function B = swaprows(A)
 ##  permute rows of A into reverse order
 ## @end format
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 23, 1992
diff --git a/scripts/control/obsolete/syschnames.m b/scripts/control/obsolete/syschnames.m
--- a/scripts/control/obsolete/syschnames.m
+++ b/scripts/control/obsolete/syschnames.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File } {@var{retsys} =} syschnames (@var{sys}, @var{opt}, @var{list}, @var{names})
+## @deftypefn {Function File} {} syschnames (@var{sys}, @var{opt}, @var{list}, @var{names})
 ## Superseded by @code{syssetsignals}
 ## @end deftypefn
 
 ## Author: John Ingram <ingraje@eng.auburn.edu>
 ## Created: August 1996
 ## updated by A. S. Hodel 1998
 
 function retsys = syschnames (sys, opt, list, names)
diff --git a/scripts/control/system/__syschnamesl__.m b/scripts/control/system/__syschnamesl__.m
--- a/scripts/control/system/__syschnamesl__.m
+++ b/scripts/control/system/__syschnamesl__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{old_names} =} __syschnamesl__ (@var{olist}, @var{old_names}, @var{inames}, @var{listname})
+## @deftypefn {Function File} {} __syschnamesl__ (@var{olist}, @var{old_names}, @var{inames}, @var{listname})
 ## used internally in syschnames
 ## item olist: index list
 ## old_names: original list names
 ## inames: new names
 ## listname: name of index list
 ##
 ## combines the two string lists old_names and inames
 ## @end deftypefn
diff --git a/scripts/control/system/__syscont_disc__.m b/scripts/control/system/__syscont_disc__.m
--- a/scripts/control/system/__syscont_disc__.m
+++ b/scripts/control/system/__syscont_disc__.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{n_tot}, @var{st_c}, @var{st_d}, @var{y_c}, @var{y_d}] =} __syscont_disc__ (@var{sys})
 ## Used internally in syscont and sysdisc.
 ##
 ## @strong{Inputs}
-## @var{ sys} is a system data structure.
+## @var{sys} is a system data structure.
 ##
 ## @strong{Outputs}
 ## @table @var
 ## @item n_tot
 ## total number of states
 ## @item st_c
 ## vector of continuous state indices (empty if none)
 ## @item st_d
diff --git a/scripts/control/system/__sysdefioname__.m b/scripts/control/system/__sysdefioname__.m
--- a/scripts/control/system/__sysdefioname__.m
+++ b/scripts/control/system/__sysdefioname__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{ioname} =} __sysdefioname__ (@var{n},@var{str} @{,@var{m}@})
+## @deftypefn {Function File} {} __sysdefioname__ (@var{n}, @var{str}, @var{m})
 ## return default input or output names given @var{n}, @var{str}, @var{m}.
 ## @var{n} is the final value, @var{str} is the string prefix, and @var{m}
 ## is start value
 ##
 ## used internally, minimal argument checking
 ##
 ## @strong{Example} @code{ioname = __sysdefioname__(5,"u",3)}
 ## returns the list:
diff --git a/scripts/control/system/__sysdefstname__.m b/scripts/control/system/__sysdefstname__.m
--- a/scripts/control/system/__sysdefstname__.m
+++ b/scripts/control/system/__sysdefstname__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{stname} =} __sysdefstname__ (@var{n}, @var{nz})
+## @deftypefn {Function File} {} __sysdefstname__ (@var{n}, @var{nz})
 ## return default state names given @var{n}, @var{nz}
 ##
 ## used internally, minimal argument checking
 ## @end deftypefn
 
 function stname = __sysdefstname__ (n, nz)
 
   stname = list();
diff --git a/scripts/control/system/__sysgroupn__.m b/scripts/control/system/__sysgroupn__.m
--- a/scripts/control/system/__sysgroupn__.m
+++ b/scripts/control/system/__sysgroupn__.m
@@ -12,18 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{names} =} __sysgroupn__ (@var{names})
-## names = __sysgroupn__(names)
+## @deftypefn {Function File} {} __sysgroupn__ (@var{names})
 ## Locate and mark duplicate names
 ## inputs:
 ## names: list of signal names
 ## kind: kind of signal name (used for diagnostic message purposes only)
 ## outputs:
 ## returns names with unique suffixes added; diagnostic warning
 ## message is printed to inform the user of the new signal name
 ##
diff --git a/scripts/control/system/__tf2sysl__.m b/scripts/control/system/__tf2sysl__.m
--- a/scripts/control/system/__tf2sysl__.m
+++ b/scripts/control/system/__tf2sysl__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{vec} =} __tf2sysl__ (@var{vec})
+## @deftypefn {Function File} {} __tf2sysl__ (@var{vec})
 ## used internally in tf2sys.
 ## strip leading zero coefficients to get the true polynomial length
 ## @end deftypefn
 
 function vec = __tf2sysl__ (vec)
 
   while( (length(vec) > 1) & (vec(1) == 0) )
     vec = vec(2:length(vec));
diff --git a/scripts/control/system/buildssic.m b/scripts/control/system/buildssic.m
--- a/scripts/control/system/buildssic.m
+++ b/scripts/control/system/buildssic.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} buildssic(@var{Clst}, @var{Ulst}, @var{Olst}, @var{Ilst}, @var{s1}, @var{s2}, @var{s3}, @var{s4}, @var{s5}, @var{s6}, @var{s7}, @var{s8})
+## @deftypefn {Function File} {} buildssic(@var{Clst}, @var{Ulst}, @var{Olst}, @var{Ilst}, @var{s1}, @var{s2}, @var{s3}, @var{s4}, @var{s5}, @var{s6}, @var{s7}, @var{s8})
 ##
 ## Form an arbitrary complex (open or closed loop) system in
 ## state-space form from several systems. "@code{buildssic}" can
 ## easily (despite it's cryptic syntax) integrate transfer functions
 ## from a complex block diagram into a single system with one call.
 ## This function is especially useful for building open loop
 ## interconnections for H_infinity and H2 designs or for closing
 ## loops with these controllers.
diff --git a/scripts/control/system/c2d.m b/scripts/control/system/c2d.m
--- a/scripts/control/system/c2d.m
+++ b/scripts/control/system/c2d.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{dsys} =} c2d (@var{sys}@{, @var{opt}, @var{T}@})
-## @deftypefnx {Function File} {@var{dsys} =} c2d (@var{sys}@{, @var{T}@})
+## @deftypefn {Function File} {} c2d (@var{sys}, @var{opt}, @var{T})
+## @deftypefnx {Function File} {} c2d (@var{sys}, @var{T})
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure (may have both continuous time and discrete
 ## time subsystems)
 ## @item opt
 ## string argument; conversion option (optional argument;
diff --git a/scripts/control/system/d2c.m b/scripts/control/system/d2c.m
--- a/scripts/control/system/d2c.m
+++ b/scripts/control/system/d2c.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{csys} =} d2c (@var{sys}@{,@var{tol}@})
-## @deftypefnx {Function File} {@var{csys} =} d2c (@var{sys}, @var{opt})
+## @deftypefn {Function File} {} d2c (@var{sys}, @var{tol})
+## @deftypefnx {Function File} {} d2c (@var{sys}, @var{opt})
 ## Convert discrete (sub)system to a purely continuous system.  Sampling
 ## time used is @code{sysgettsam(@var{sys})}
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   sys
 ## system data structure with discrete components
 ## @item   tol
@@ -33,19 +33,19 @@
 ## conversion option.  Choose from:
 ## @table @code
 ## @item         "log"
 ## (default) Conversion is performed via a matrix logarithm.
 ## Due to some problems with this computation, it is
 ## followed by a steepest descent algorithm to identify continuous time
 ## @var{A}, @var{B}, to get a better fit to the original data.
 ##
-## If called as @code{d2c}(@var{sys},@var{tol}), @var{tol=}positive scalar,
-## the @code{"log"} option is used.  The default value for @var{tol} is
-## @code{1e-8}.
+## If called as @code{d2c (@var{sys}, @var{tol})}, with @var{tol}
+## positive scalar, the @code{"log"} option is used.  The default value
+## for @var{tol} is @code{1e-8}.
 ## @item        "bi"
 ## Conversion is performed via bilinear transform
 ## @math{z = (1 + s T / 2)/(1 - s T / 2)} where @var{T} is the
 ## system sampling time (see @code{sysgettsam}).
 ##
 ## FIXME: bilinear option exits with an error if @var{sys} is not purely
 ## discrete
 ## @end table
diff --git a/scripts/control/system/dmr2d.m b/scripts/control/system/dmr2d.m
--- a/scripts/control/system/dmr2d.m
+++ b/scripts/control/system/dmr2d.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{dsys}, @var{fidx}] =} dmr2d (@var{sys}, @var{idx}, @var{sprefix}, @var{Ts2} @{,@var{cuflg}@})
+## @deftypefn {Function File} {[@var{dsys}, @var{fidx}] =} dmr2d (@var{sys}, @var{idx}, @var{sprefix}, @var{Ts2}, @var{cuflg})
 ## convert a multirate digital system to a single rate digital system
 ## states specified by @var{idx}, @var{sprefix} are sampled at @var{Ts2}, all
 ## others are assumed sampled at @var{Ts1} = @code{sysgettsam(@var{sys})}.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   sys
 ## discrete time system;
diff --git a/scripts/control/system/fir2sys.m b/scripts/control/system/fir2sys.m
--- a/scripts/control/system/fir2sys.m
+++ b/scripts/control/system/fir2sys.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} fir2sys (@var{num}@{, @var{tsam}, @var{inname}, @var{outname} @})
+## @deftypefn {Function File} {} fir2sys (@var{num}, @var{tsam}, @var{inname}, @var{outname})
 ## construct a system data structure from FIR description
 ##
 ## @strong{Inputs:}
 ## @table @var
 ## @item num
 ## vector of coefficients @math{[c_0 c_1 ... c_n]}
 ## of the SISO FIR transfer function
 ## @ifinfo
diff --git a/scripts/control/system/is_abcd.m b/scripts/control/system/is_abcd.m
--- a/scripts/control/system/is_abcd.m
+++ b/scripts/control/system/is_abcd.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} is_abcd (@var{a}@{, @var{b}, @var{c}, @var{d}@})
+## @deftypefn {Function File} {} is_abcd (@var{a}, @var{b}, @var{c}, @var{d})
 ##  Returns @var{retval} = 1 if the dimensions of @var{a}, @var{b},
 ##  @var{c}, @var{d} are compatible, otherwise @var{retval} = 0 with an
 ##  appropriate diagnostic message printed to the screen.  The matrices
 ##  b, c, or d may be omitted.
 ## @end deftypefn
 ## @seealso{abcddim}
 
 ## Author: Kai P. Mueller <mueller@ifr.ing.tu-bs.de>
diff --git a/scripts/control/system/is_controllable.m b/scripts/control/system/is_controllable.m
--- a/scripts/control/system/is_controllable.m
+++ b/scripts/control/system/is_controllable.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_controllable (@var{sys}@{, @var{tol}@})
-## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_controllable (@var{a}@{, @var{b}, @var{tol}@})
+## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_controllable (@var{sys}, @var{tol})
+## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_controllable (@var{a}, @var{b}, @var{tol})
 ## Logical check for system controllability.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ## @item a
 ## @itemx b
diff --git a/scripts/control/system/is_detectable.m b/scripts/control/system/is_detectable.m
--- a/scripts/control/system/is_detectable.m
+++ b/scripts/control/system/is_detectable.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_detectable (@var{a}, @var{c}@{, @var{tol}@})
-## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_detectable (@var{sys}@{, @var{tol}@})
+## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_detectable (@var{a}, @var{c}, @var{tol})
+## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_detectable (@var{sys}, @var{tol})
 ## Test for detactability (observability of unstable modes) of
 ## (@var{a},@var{c}).
 ##
 ## Returns 1 if the system @var{a} or the pair (@var{a},@var{c})is
 ## detectable, 0 if not.
 ##
 ## @strong{See} @code{is_stabilizable} for detailed description of
 ## arguments and computational method.
diff --git a/scripts/control/system/is_digital.m b/scripts/control/system/is_digital.m
--- a/scripts/control/system/is_digital.m
+++ b/scripts/control/system/is_digital.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} is_digital (@var{sys})
+## @deftypefn {Function File} {} is_digital (@var{sys})
 ## Return nonzero if system is digital;
 ## inputs:
 ## sys: system data structure
 ## eflg: 0 [default] exit with an error if system is mixed (continuous and
 ## discrete components)
 ##     : 1 print a warning if system is mixed (continuous and discrete)
 ##     : 2 silent operation
 ## outputs:
diff --git a/scripts/control/system/is_observable.m b/scripts/control/system/is_observable.m
--- a/scripts/control/system/is_observable.m
+++ b/scripts/control/system/is_observable.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{retval},@var{U}] =} is_observable (@var{a}, @var{c}@{,@var{tol}@})
-## @deftypefnx {Function File} {[@var{retval},@var{U}] =} is_observable (@var{sys}@{, @var{tol}@})
+## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_observable (@var{a}, @var{c}, @var{tol})
+## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_observable (@var{sys}, @var{tol})
 ## Logical check for system observability.
 ##
 ## Default: tol = 10*norm(a,'fro')*eps
 ##
 ## Returns 1 if the system @var{sys} or the pair (@var{a},@var{c}) is
 ## observable, 0 if not.
 ##
 ## @strong{See} @code{is_controllable} for detailed description of arguments
diff --git a/scripts/control/system/is_sample.m b/scripts/control/system/is_sample.m
--- a/scripts/control/system/is_sample.m
+++ b/scripts/control/system/is_sample.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} is_sample (@var{Ts})
+## @deftypefn {Function File} {} is_sample (@var{Ts})
 ## return true if @var{Ts} is a valid sampling time
 ## (real,scalar, > 0)
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 1995
 
 function out = is_sample (Ts)
diff --git a/scripts/control/system/is_siso.m b/scripts/control/system/is_siso.m
--- a/scripts/control/system/is_siso.m
+++ b/scripts/control/system/is_siso.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} is_siso (@var{sys})
+## @deftypefn {Function File} {} is_siso (@var{sys})
 ## return nonzero if the system data structure
 ## @var{sys} is single-input, single-output.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 1996, 1998
 
 function  SISO = is_siso (sys)
diff --git a/scripts/control/system/is_stabilizable.m b/scripts/control/system/is_stabilizable.m
--- a/scripts/control/system/is_stabilizable.m
+++ b/scripts/control/system/is_stabilizable.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_stabilizable (@var{sys}@{, @var{tol}@})
-## @deftypefnx {Function File } {[@var{retval}, @var{U}] =} is_stabilizable (@var{a}@{, @var{b} ,@var{tol}@})
+## @deftypefn {Function File} {[@var{retval}, @var{U}] =} is_stabilizable (@var{sys}, @var{tol})
+## @deftypefnx {Function File} {[@var{retval}, @var{U}] =} is_stabilizable (@var{a}, @var{b}, @var{tol})
 ## Logical check for system stabilizability (i.e., all unstable modes are controllable).
 ##
 ## Test for stabilizability is performed via an ordered Schur decomposition
 ## that reveals the unstable subspace of the system @var{A} matrix.
 ##
 ## Returns @code{retval} = 1 if the system, @code{a}, is stabilizable,
 ## if the pair  (@code{a}, @code{b}) is stabilizable, or 0 if not.
 ## @code{U} = orthogonal basis of controllable subspace.
diff --git a/scripts/control/system/is_stable.m b/scripts/control/system/is_stable.m
--- a/scripts/control/system/is_stable.m
+++ b/scripts/control/system/is_stable.m
@@ -12,19 +12,19 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} is_stable (@var{a}@{,@var{tol},@var{dflg}@})
-## @deftypefnx {Function File} {@var{retval} =} is_stable (@var{sys}@{,@var{tol}@})
-## Returns retval = 1 if the matrix @var{a} or the system @var{sys}
+## @deftypefn {Function File} {} is_stable (@var{a}, @var{tol}, @var{dflg})
+## @deftypefnx {Function File} {} is_stable (@var{sys}, @var{tol})
+## Returns 1 if the matrix @var{a} or the system @var{sys}
 ## is stable, or 0 if not.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item  tol
 ## is a roundoff paramter, set to 200*@var{eps} if omitted.
 ## @item dflg
 ## Digital system flag (not required for system data structure):
diff --git a/scripts/control/system/jet707.m b/scripts/control/system/jet707.m
--- a/scripts/control/system/jet707.m
+++ b/scripts/control/system/jet707.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outsys}  =} jet707 ()
+## @deftypefn {Function File} {} jet707 ()
 ## Creates linearized state space model of a Boeing 707-321 aircraft
 ## at v=80m/s. (M = 0.26, Ga0 = -3 deg, alpha0 = 4 deg, kappa = 50 deg)
 ## System inputs:   (1) thrust   and (2) elevator angle
 ## System outputs:  (1) airspeed and (2) pitch angle
 ## Ref: R. Brockhaus: Flugregelung (Flight Control), Springer, 1994
 ## @end deftypefn
 ## @seealso{ord2}
 
diff --git a/scripts/control/system/moddemo.m b/scripts/control/system/moddemo.m
--- a/scripts/control/system/moddemo.m
+++ b/scripts/control/system/moddemo.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} moddemo (@var{inputs})
+## @deftypefn {Function File} {} moddemo (@var{inputs})
 ## Octave Controls toolbox demo: Model Manipulations demo
 ## @end deftypefn
 
 ## Author: David Clem
 ## Created: August 15, 1994
 ## a s hodel: updated to reflect updated output order in ss2zp
 
 function moddemo ()
diff --git a/scripts/control/system/ord2.m b/scripts/control/system/ord2.m
--- a/scripts/control/system/ord2.m
+++ b/scripts/control/system/ord2.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outsys} =} ord2 (@var{nfreq}, @var{damp}@{[, @var{gain}@})
+## @deftypefn {Function File} {} ord2 (@var{nfreq}, @var{damp}, @var{gain})
 ## Creates a continuous 2nd order system with parameters:
 ## @strong{Inputs}
 ## @table @var
 ## @item nfreq
 ## natural frequency [Hz]. (not in rad/s)
 ## @item damp
 ## damping coefficient
 ## @item gain
diff --git a/scripts/control/system/parallel.m b/scripts/control/system/parallel.m
--- a/scripts/control/system/parallel.m
+++ b/scripts/control/system/parallel.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sysp} =} parallel (@var{Asys}, @var{Bsys})
+## @deftypefn {Function File} {} parallel (@var{Asys}, @var{Bsys})
 ## Forms the parallel connection of two systems.
 ##
 ##              ____________________
 ##              |      ________    |
 ##     u  ----->|----> | Asys |--->|----> y1
 ##         |    |      --------    |
 ##         |    |      ________    |
 ##         |--->|----> | Bsys |--->|----> y2
diff --git a/scripts/control/system/ss2sys.m b/scripts/control/system/ss2sys.m
--- a/scripts/control/system/ss2sys.m
+++ b/scripts/control/system/ss2sys.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} ss2sys (@var{a}, @var{b}, @var{c}@{,@var{d}, @var{tsam}, @var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{outlist}@})
+## @deftypefn {Function File} {} ss2sys (@var{a}, @var{b}, @var{c}, @var{d}, @var{tsam}, @var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{outlist})
 ## Create system structure from state-space data.   May be continous,
 ## discrete, or mixed (sampeled-data)
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item a
 ## @itemx b
 ## @itemx c
@@ -92,23 +92,23 @@
 ## c = [ ccc ccd ]  d = [ dc ]
 ##     [ cdc cdd ]      [ dd ]
 ##
 ##     (cdc = c(outlist,1:n), etc.)
 ## @end group
 ## @end example
 ## with dynamic equations:
 ## @ifinfo
-## @math{  d/dt xc(t)     = acc*xc(t)      + acd*xd(k*tsam) + bc*u(t)}
+## @math{d/dt xc(t)     = acc*xc(t)      + acd*xd(k*tsam) + bc*u(t)}
 ##
-## @math{  xd((k+1)*tsam) = adc*xc(k*tsam) + add*xd(k*tsam) + bd*u(k*tsam)}
+## @math{xd((k+1)*tsam) = adc*xc(k*tsam) + add*xd(k*tsam) + bd*u(k*tsam)}
 ##
-## @math{  yc(t)      = ccc*xc(t)      + ccd*xd(k*tsam) + dc*u(t)}
+## @math{yc(t)      = ccc*xc(t)      + ccd*xd(k*tsam) + dc*u(t)}
 ##
-## @math{  yd(k*tsam) = cdc*xc(k*tsam) + cdd*xd(k*tsam) + dd*u(k*tsam)}
+## @math{yd(k*tsam) = cdc*xc(k*tsam) + cdd*xd(k*tsam) + dd*u(k*tsam)}
 ## @end ifinfo
 ## @iftex
 ## @tex
 ## $$\eqalign{
 ## {d \over dt} x_c(t)
 ##   & =   a_{cc} x_c(t)      + a_{cd} x_d(k*t_{sam}) + bc*u(t) \cr
 ## x_d((k+1)*t_{sam})
 ##   & =   a_{dc} x_c(k t_{sam}) + a_{dd} x_d(k t_{sam}) + b_d u(k t_{sam}) \cr
diff --git a/scripts/control/system/ss2tf.m b/scripts/control/system/ss2tf.m
--- a/scripts/control/system/ss2tf.m
+++ b/scripts/control/system/ss2tf.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} ss2tf (@var{inputs})
+## @deftypefn {Function File} {} ss2tf (@var{inputs})
 ## @format
 ## [num,den] = ss2tf(a,b,c,d)
 ## Conversion from tranfer function to state-space.
 ## The state space system
 ##       .
 ##       x = Ax + Bu
 ##       y = Cx + Du
 ##
diff --git a/scripts/control/system/ss2zp.m b/scripts/control/system/ss2zp.m
--- a/scripts/control/system/ss2zp.m
+++ b/scripts/control/system/ss2zp.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} ss2zp (@var{inputs})
+## @deftypefn {Function File} {} ss2zp (@var{inputs})
 ## @format
 ## Converts a state space representation to a set of poles and zeros.
 ##
 ## [pol,zer,k] = ss2zp(a,b,c,d) returns the poles and zeros of the state space
 ## system (a,b,c,d).  K is a gain associated with the zeros.
 ##
 ## used internally in system data structure format manipulations
 ## @end format
diff --git a/scripts/control/system/starp.m b/scripts/control/system/starp.m
--- a/scripts/control/system/starp.m
+++ b/scripts/control/system/starp.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} starp (@var{inputs})
+## @deftypefn {Function File} {} starp (@var{inputs})
 ## @format
 ##
 ## sys = starp(P, K, ny, nu)
 ##
 ## Redheffer star product or upper/lower LFT, respectively.
 ##
 ##
 ##                +-------+
diff --git a/scripts/control/system/sys2ss.m b/scripts/control/system/sys2ss.m
--- a/scripts/control/system/sys2ss.m
+++ b/scripts/control/system/sys2ss.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{a}, @var{b}, @var{c}, @var{d}, @var{tsam},@var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{yd}] =} sys2ss (@var{sys})
+## @deftypefn {Function File} {[@var{a}, @var{b}, @var{c}, @var{d}, @var{tsam}, @var{n}, @var{nz}, @var{stname}, @var{inname}, @var{outname}, @var{yd}] =} sys2ss (@var{sys})
 ## Extract state space representation from system data structure.
 ##
 ## @strong{Inputs}
 ## @var{sys} system data structure
 ##
 ## @strong{Outputs}
 ## @table @var
 ## @item a
diff --git a/scripts/control/system/sysadd.m b/scripts/control/system/sysadd.m
--- a/scripts/control/system/sysadd.m
+++ b/scripts/control/system/sysadd.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =}  sysadd (@var{Gsys}, @var{Hsys})
+## @deftypefn {Function File} {}  sysadd (@var{Gsys}, @var{Hsys})
 ## returns @var{sys} = @var{Gsys} + @var{Hsys}.
 ## @itemize @bullet
 ## @item Exits with
 ## an error if @var{Gsys} and @var{Hsys} are not compatibly dimensioned.
 ## @item Prints a warning message is system states have identical names;
 ## duplicate names are given a suffix to make them unique.
 ## @item @var{sys} input/output names are taken from @var{Gsys}.
 ## @end itemize
diff --git a/scripts/control/system/sysappend.m b/scripts/control/system/sysappend.m
--- a/scripts/control/system/sysappend.m
+++ b/scripts/control/system/sysappend.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} sysappend (@var{sys}, @var{b}@{, @var{c}, @var{d}, @var{outname}, @var{inname}, @var{yd}@})
+## @deftypefn {Function File} {} sysappend (@var{sys}, @var{b}, @var{c}, @var{d}, @var{outname}, @var{inname}, @var{yd})
 ## appends new inputs and/or outputs to a system
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ##
 ## @item b
diff --git a/scripts/control/system/syschtsam.m b/scripts/control/system/syschtsam.m
--- a/scripts/control/system/syschtsam.m
+++ b/scripts/control/system/syschtsam.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} syschtsam (@var{sys}, @var{tsam})
+## @deftypefn {Function File} {} syschtsam (@var{sys}, @var{tsam})
 ## This function changes the sampling time (tsam) of the system.  Exits with
 ## an error if sys is purely continuous time.
 ## @end deftypefn
 
 ## Author: John Ingram <ingraje@eng.auburn.edu>
 ## Created: August 1996
 
 function retsys = syschtsam (sys, tsam)
diff --git a/scripts/control/system/sysconnect.m b/scripts/control/system/sysconnect.m
--- a/scripts/control/system/sysconnect.m
+++ b/scripts/control/system/sysconnect.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} sysconnect (@var{sys}, @var{out_idx},@var{in_idx}@{,@var{order}, @var{tol}@})
+## @deftypefn {Function File} {} sysconnect (@var{sys}, @var{out_idx}, @var{in_idx}, @var{order}, @var{tol})
 ## Close the loop from specified outputs to respective specified inputs
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   sys
 ## system data structure
 ## @item   out_idx
 ## @itemx  in_idx
diff --git a/scripts/control/system/sysdimensions.m b/scripts/control/system/sysdimensions.m
--- a/scripts/control/system/sysdimensions.m
+++ b/scripts/control/system/sysdimensions.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{n}, @var{nz}, @var{m}, @var{p}, @var{yd}] =} sysdimensions (@var{sys}@{, @var{opt}@})
+## @deftypefn {Function File} {[@var{n}, @var{nz}, @var{m}, @var{p}, @var{yd}] =} sysdimensions (@var{sys}, @var{opt})
 ## return the number of states, inputs, and/or outputs in the system
 ## @var{sys}.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ##
diff --git a/scripts/control/system/sysdup.m b/scripts/control/system/sysdup.m
--- a/scripts/control/system/sysdup.m
+++ b/scripts/control/system/sysdup.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} sysdup (@var{Asys}, @var{out_idx}, @var{in_idx})
+## @deftypefn {Function File} {} sysdup (@var{Asys}, @var{out_idx}, @var{in_idx})
 ## Duplicate specified input/output connections of a system
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item Asys
 ## system data structure
 ## @item out_idx
 ## @itemx in_idx
diff --git a/scripts/control/system/sysgetsignals.m b/scripts/control/system/sysgetsignals.m
--- a/scripts/control/system/sysgetsignals.m
+++ b/scripts/control/system/sysgetsignals.m
@@ -13,18 +13,18 @@
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{stname}, @var{inname}, @var{outname}, @var{yd}] =} sysgetsignals (@var{sys})
-## @deftypefnx{Function File} {@var{siglist} =} sysgetsignals (@var{sys},@var{sigid})
-## @deftypefnx{Function File} {@var{signame} =} sysgetsignals (@var{sys},@var{sigid},@var{signum}@{, @var{strflg}@})
+## @deftypefnx{Function File} {@var{siglist} =} sysgetsignals (@var{sys}, @var{sigid})
+## @deftypefnx{Function File} {@var{signame} =} sysgetsignals (@var{sys}, @var{sigid}, @var{signum}, @var{strflg})
 ## Get signal names from a system
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure for the state space system
 ##
 ## @item sigid
diff --git a/scripts/control/system/sysgettype.m b/scripts/control/system/sysgettype.m
--- a/scripts/control/system/sysgettype.m
+++ b/scripts/control/system/sysgettype.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{systype} =} sysgettype (@var{sys})
+## @deftypefn {Function File} {} sysgettype (@var{sys})
 ## return the initial system type of the system
 ##
 ## @strong{Inputs}
 ## @var{sys}: system data structure
 ##
 ## @strong{Outputs}
 ## @var{systype}: string indicating how the structure was initially
 ## constructed:
diff --git a/scripts/control/system/sysgroup.m b/scripts/control/system/sysgroup.m
--- a/scripts/control/system/sysgroup.m
+++ b/scripts/control/system/sysgroup.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} sysgroup (@var{Asys}, @var{Bsys})
+## @deftypefn {Function File} {} sysgroup (@var{Asys}, @var{Bsys})
 ## Combines two systems into a single system
 ##
 ## @strong{Inputs}
 ## @var{Asys}, @var{Bsys}: system data structures
 ##
 ## @strong{Outputs}
 ## @math{sys = @r{block diag}(Asys,Bsys)}
 ## @example
diff --git a/scripts/control/system/sysmult.m b/scripts/control/system/sysmult.m
--- a/scripts/control/system/sysmult.m
+++ b/scripts/control/system/sysmult.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} sysmult (@var{Asys}, @var{Bsys})
+## @deftypefn {Function File} {} sysmult (@var{Asys}, @var{Bsys})
 ## Compute @math{sys = Asys*Bsys} (series connection):
 ## @example
 ## @group
 ## u   ----------     ----------
 ## --->|  Bsys  |---->|  Asys  |--->
 ##     ----------     ----------
 ## @end group
 ## @end example
diff --git a/scripts/control/system/sysout.m b/scripts/control/system/sysout.m
--- a/scripts/control/system/sysout.m
+++ b/scripts/control/system/sysout.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} sysout (@var{sys}@{, @var{opt}@})
+## @deftypefn {Function File} {} sysout (@var{sys}, @var{opt})
 ## print out a system data structure in desired format
 ## @table @var
 ## @item  sys
 ## system data structure
 ## @item  opt
 ## Display option
 ## @table @code
 ## @item []
diff --git a/scripts/control/system/sysprune.m b/scripts/control/system/sysprune.m
--- a/scripts/control/system/sysprune.m
+++ b/scripts/control/system/sysprune.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} sysprune (@var{Asys}, @var{out_idx}, @var{in_idx})
+## @deftypefn {Function File} {} sysprune (@var{Asys}, @var{out_idx}, @var{in_idx})
 ## Extract specified inputs/outputs from a system
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   Asys
 ## system data structure
 ## @item out_idx
 ## @itemx in_idx
diff --git a/scripts/control/system/sysreorder.m b/scripts/control/system/sysreorder.m
--- a/scripts/control/system/sysreorder.m
+++ b/scripts/control/system/sysreorder.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{pv} =} sysreorder (@var{vlen}, @{var{list})
+## @deftypefn {Function File} {} sysreorder (@var{vlen}, @var{list})
 ##
 ## @strong{Inputs}
 ## @var{vlen}=vector length, @var{list}= a subset of @code{[1:vlen]},
 ##
 ## @strong{Outputs}
 ## @var{pv}: a permutation vector to order elements of @code{[1:vlen]} in
 ## @code{list} to the end of a vector.
 ##
diff --git a/scripts/control/system/sysscale.m b/scripts/control/system/sysscale.m
--- a/scripts/control/system/sysscale.m
+++ b/scripts/control/system/sysscale.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} sysscale (@var{sys}, @var{outscale}, @var{inscale}@{, @var{outname}, @var{inname}@})
+## @deftypefn {Function File} {} sysscale (@var{sys}, @var{outscale}, @var{inscale}, @var{outname}, @var{inname})
 ## scale inputs/outputs of a system.
 ##
 ## @strong{Inputs}
 ## sys: structured system
 ## outscale, inscale: constant matrices of appropriate dimension
 ##
 ## @strong{Outputs}
 ## @var{sys}: resulting open loop system:
diff --git a/scripts/control/system/syssetsignals.m b/scripts/control/system/syssetsignals.m
--- a/scripts/control/system/syssetsignals.m
+++ b/scripts/control/system/syssetsignals.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} syssetsignals (@var{sys}, @var{opt}, @var{names}@{, @var{sig_idx}@})
+## @deftypefn {Function File} {} syssetsignals (@var{sys}, @var{opt}, @var{names}, @var{sig_idx})
 ## change the names of selected inputs, outputs and states.
 ## @strong{Inputs}
 ## @table @var
 ## @item sys
 ## system data structure
 ##
 ## @item opt
 ## change default name (output)
diff --git a/scripts/control/system/syssub.m b/scripts/control/system/syssub.m
--- a/scripts/control/system/syssub.m
+++ b/scripts/control/system/syssub.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} syssub (@var{Gsys}, @var{Hsys})
+## @deftypefn {Function File} {} syssub (@var{Gsys}, @var{Hsys})
 ## returns @math{sys = Gsys - Hsys}
 ##
 ## Method: @var{Gsys} and @var{Hsys} are connected in parallel
 ## The input vector is connected to both systems; the outputs are
 ## subtracted.  Returned system names are those of @var{Gsys}.
 ## @example
 ## @group
 ##          +--------+
diff --git a/scripts/control/system/sysupdate.m b/scripts/control/system/sysupdate.m
--- a/scripts/control/system/sysupdate.m
+++ b/scripts/control/system/sysupdate.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 0211
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} sysupdate (@var{sys}, @var{opt})
+## @deftypefn {Function File} {} sysupdate (@var{sys}, @var{opt})
 ## Update the internal representation of a system.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item sys:
 ## system data structure
 ## @item opt
 ## string:
diff --git a/scripts/control/system/tf2ss.m b/scripts/control/system/tf2ss.m
--- a/scripts/control/system/tf2ss.m
+++ b/scripts/control/system/tf2ss.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} tf2ss (@var{inputs})
+## @deftypefn {Function File} {} tf2ss (@var{inputs})
 ## @format
 ## Conversion from tranfer function to state-space.
 ## The state space system
 ##       .
 ##       x = Ax + Bu
 ##       y = Cx + Du
 ##
 ## is obtained from a transfer function
diff --git a/scripts/control/system/tf2sys.m b/scripts/control/system/tf2sys.m
--- a/scripts/control/system/tf2sys.m
+++ b/scripts/control/system/tf2sys.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} tf2sys (@var{num}, @var{den} @{, @var{tsam}, @var{inname}, @var{outname} @})
+## @deftypefn {Function File} {} tf2sys (@var{num}, @var{den}, @var{tsam}, @var{inname}, @var{outname})
 ## build system data structure from transfer function format data
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item  num
 ## @itemx den
 ## coefficients of numerator/denominator polynomials
 ## @item tsam
diff --git a/scripts/control/system/tf2zp.m b/scripts/control/system/tf2zp.m
--- a/scripts/control/system/tf2zp.m
+++ b/scripts/control/system/tf2zp.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} tf2zp (@var{inputs})
+## @deftypefn {Function File} {} tf2zp (@var{inputs})
 ## Converts transfer functions to poles / zeros.
 ##
 ## [zer,pol,k] = tf2zp(num,den) returns the zeros and poles of the SISO system
 ## defined by num/den.  K is a gain associated with the system zeros.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 
diff --git a/scripts/control/system/tfout.m b/scripts/control/system/tfout.m
--- a/scripts/control/system/tfout.m
+++ b/scripts/control/system/tfout.m
@@ -12,18 +12,18 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} tfout (@var{num}, @var{denom}@{, @var{x}@})
-## Print formatted transfer function @math{n(s)/d(s) } to the screen.
+## @deftypefn {Function File} {} tfout (@var{num}, @var{denom}, @var{x})
+## Print formatted transfer function @math{n(s)/d(s)} to the screen.
 ## @var{x} defaults to the string @code{"s"}
 ## @end deftypefn
 ## @seealso{polyval, polyvalm, poly, roots, conv, deconv, residue,
 ## filter, polyderiv, polyinteg, and polyout}
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: June 1995
 
diff --git a/scripts/control/system/ugain.m b/scripts/control/system/ugain.m
--- a/scripts/control/system/ugain.m
+++ b/scripts/control/system/ugain.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outsys} =} ugain (@var{n})
+## @deftypefn {Function File} {} ugain (@var{n})
 ## Creates a system with unity gain, no states.
 ## This trivial system is sometimes needed to create arbitrary
 ## complex systems from simple systems with buildssic.
 ## Watch out if you are forming sampled systems since "ugain"
 ## does not contain a sampling period.
 ## @end deftypefn
 ## @seealso{hinfdemo and jet707}
 
diff --git a/scripts/control/system/zp2sys.m b/scripts/control/system/zp2sys.m
--- a/scripts/control/system/zp2sys.m
+++ b/scripts/control/system/zp2sys.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{sys} =} zp2sys (@var{zer},@var{pol},@var{k}@{,@var{tsam},@var{inname},@var{outname}@})
+## @deftypefn {Function File} {} zp2sys (@var{zer}, @var{pol}, @var{k}, @var{tsam}, @var{inname}, @var{outname})
 ## Create system data structure from zero-pole data.
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item   zer
 ## vector of system zeros
 ## @item   pol
 ## vector of system poles
diff --git a/scripts/control/system/zpout.m b/scripts/control/system/zpout.m
--- a/scripts/control/system/zpout.m
+++ b/scripts/control/system/zpout.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} zpout (@var{zer}, @var{pol}, @var{k}@{, @var{x}@})
+## @deftypefn {Function File} {} zpout (@var{zer}, @var{pol}, @var{k}, @var{x})
 ## print formatted zero-pole form to the screen.
 ## @var{x} defaults to the string @code{"s"}
 ## @end deftypefn
 ## @seealso{polyval, polyvalm, poly, roots, conv, deconv, residue,
 ## filter, polyderiv, polyinteg, and polyout}
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: June 1995
diff --git a/scripts/control/util/__outlist__.m b/scripts/control/util/__outlist__.m
--- a/scripts/control/util/__outlist__.m
+++ b/scripts/control/util/__outlist__.m
@@ -12,30 +12,30 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} __outlist__ (@var{lmat}@{, @var{tabchar}, @var{yd}, @var{ilist} @})
+## @deftypefn {Function File} {} __outlist__ (@var{lmat}, @var{tabchar}, @var{yd}, @var{ilist})
 ## Prints an enumerated list of strings.
 ## internal use only; minimal argument checking performed
 ##
 ## @strong{Inputs}
 ## @table @var
 ## @item        lmat
 ## list of strings
 ## @item        tabchar
 ## tab character (default: none)
 ## @item   yd
 ## indices of strings to append with the string "(discrete)"
 ## (used by @var{sysout}; minimal checking of this argument)
-## @math{yd = [] } indicates all outputs are continuous
+## @math{yd = []} indicates all outputs are continuous
 ## @item ilist
 ## index numbers to print with names.
 ##
 ## default: @code{1:rows(lmat)}
 ## @end table
 ##
 ## @strong{Outputs}
 ## prints the list to the screen, numbering each string in order.
diff --git a/scripts/control/util/__zgpbal__.m b/scripts/control/util/__zgpbal__.m
--- a/scripts/control/util/__zgpbal__.m
+++ b/scripts/control/util/__zgpbal__.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retsys} =} __zgpbal__ (@var{Asys})
+## @deftypefn {Function File} {} __zgpbal__ (@var{Asys})
 ##
 ## used internally in @code{tzero}; minimal argument checking performed
 ##
 ## implementation of zero computation generalized eigenvalue problem
 ## balancing method (Hodel and Tiller, Allerton Conference, 1991)
 ## Based on Ward's balancing algorithm (SIAM J. Sci Stat. Comput., 1981)
 ##
 ## __zgpbal__ computes a state/input/output weighting that attempts to
diff --git a/scripts/control/util/axis2dlim.m b/scripts/control/util/axis2dlim.m
--- a/scripts/control/util/axis2dlim.m
+++ b/scripts/control/util/axis2dlim.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn{Function File} {@var{axvec} =} axis2dlim (@var{axdata})
+## @deftypefn{Function File} {} axis2dlim (@var{axdata})
 ## determine axis limits for 2-d data(column vectors); leaves a 10% margin
 ## around the plots.
 ## puts in margins of +/- 0.1 if data is one dimensional (or a single point)
 ##
 ## @strong{Inputs}
 ## @var{axdata} nx2 matrix of data [x,y]
 ##
 ## @strong{Outputs}
diff --git a/scripts/control/util/prompt.m b/scripts/control/util/prompt.m
--- a/scripts/control/util/prompt.m
+++ b/scripts/control/util/prompt.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} prompt (@var{inputs})
+## @deftypefn {Function File} {} prompt (@var{inputs})
 ## @format
 ## function prompt([str])
 ## Prompt user to continue
 ## str: input string. Default value: "\n ---- Press a key to continue ---"
 ## @end format
 ## @end deftypefn
 
 ## Author: David Clem
diff --git a/scripts/control/util/sortcom.m b/scripts/control/util/sortcom.m
--- a/scripts/control/util/sortcom.m
+++ b/scripts/control/util/sortcom.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} sortcom (@var{inputs})
+## @deftypefn {Function File} {} sortcom (@var{inputs})
 ## @format
 ## [yy,idx] = sortcom(xx[,opt]): sort a complex vector
 ## xx: complex vector
 ## opt: sorting option:
 ##  "re": real part (default)
 ##  "mag": by magnitude
 ##  "im": by imaginary part
 ##
diff --git a/scripts/control/util/swap.m b/scripts/control/util/swap.m
--- a/scripts/control/util/swap.m
+++ b/scripts/control/util/swap.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{outputs} =} swap (@var{inputs})
+## @deftypefn {Function File} {} swap (@var{inputs})
 ## @format
 ## [a1,b1] = swap(a,b)
 ## interchange a and b
 ## @end format
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 24, 1992
diff --git a/scripts/control/util/zgfmul.m b/scripts/control/util/zgfmul.m
--- a/scripts/control/util/zgfmul.m
+++ b/scripts/control/util/zgfmul.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{y} =} zgfmul (@var{a}, @var{b}, @var{c}, @var{d}, @var{x})
+## @deftypefn {Function File} {} zgfmul (@var{a}, @var{b}, @var{c}, @var{d}, @var{x})
 ##
 ## Compute product of zgep incidence matrix @var{F} with vector @var{x}.
 ## Used by zgepbal (in zgscal) as part of generalized conjugate gradient
 ## iteration.
 ## @end deftypefn
 
 ## References:
 ## ZGEP: Hodel, "Computation of Zeros with Balancing," 1992, submitted to  LAA
diff --git a/scripts/control/util/zgfslv.m b/scripts/control/util/zgfslv.m
--- a/scripts/control/util/zgfslv.m
+++ b/scripts/control/util/zgfslv.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} zgfslv (@var{n}, @var{m}, @var{p}, @var{b})
+## @deftypefn {Function File} {} zgfslv (@var{n}, @var{m}, @var{p}, @var{b})
 ## Solve system of equations for dense zgep problem.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Converted to Octave by R Bruce Tenison, July 3, 1994
 
 function x = zgfslv (n, m, p, b)
 
diff --git a/scripts/control/util/zginit.m b/scripts/control/util/zginit.m
--- a/scripts/control/util/zginit.m
+++ b/scripts/control/util/zginit.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{zz} =} zginit (@var{a}, @var{b}, @var{c}, @var{d})
+## @deftypefn {Function File} {} zginit (@var{a}, @var{b}, @var{c}, @var{d})
 ## Construct right hand side vector zz
 ## for the zero-computation generalized eigenvalue problem
 ## balancing procedure.  Called by zgepbal.
 ## @end deftypefn
 
 ## References:
 ## ZGEP: Hodel, "Computation of Zeros with Balancing," 1992, submitted to  LAA
 ## Generalized CG: Golub and Van Loan, "Matrix Computations, 2nd ed" 1989
diff --git a/scripts/control/util/zgscal.m b/scripts/control/util/zgscal.m
--- a/scripts/control/util/zgscal.m
+++ b/scripts/control/util/zgscal.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} zgscal (@var{f}, @var{z}, @var{n}, @var{m}, @var{p})
+## @deftypefn {Function File} {} zgscal (@var{f}, @var{z}, @var{n}, @var{m}, @var{p})
 ## Generalized conjugate gradient iteration to
 ## solve zero-computation generalized eigenvalue problem balancing equation
 ## @math{fx=z};
 ## called by @code{zgepbal}
 ## @end deftypefn
 
 ## References:
 ## ZGEP: Hodel, "Computation of Zeros with Balancing," 1992, submitted to  LAA
diff --git a/scripts/control/util/zgsgiv.m b/scripts/control/util/zgsgiv.m
--- a/scripts/control/util/zgsgiv.m
+++ b/scripts/control/util/zgsgiv.m
@@ -13,17 +13,17 @@
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[a, b] =} zgsgiv (@var{c}, @var{s}, @var{a}, @var{b})
-## apply givens rotation c,s to row vectors @var{a},@var{b}
+## Apply givens rotation c,s to row vectors @var{a}, @var{b}.
 ## No longer used in zero-balancing (__zgpbal__); kept for backward
 ## compatibility.
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 29, 1992
 ## Convertion to Octave by R. Bruce Tenison July 3, 1994
 
diff --git a/scripts/control/util/zgshsr.m b/scripts/control/util/zgshsr.m
--- a/scripts/control/util/zgshsr.m
+++ b/scripts/control/util/zgshsr.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} zgshsr (@var{y})
+## @deftypefn {Function File} {} zgshsr (@var{y})
 ## apply householder vector based on @math{e^(m)} to
 ## (column vector) y.
 ## Called by zgfslv
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: July 24, 1992
 ## Conversion to Octave by R. Bruce Tenison July 3, 1994
diff --git a/scripts/general/postpad.m b/scripts/general/postpad.m
--- a/scripts/general/postpad.m
+++ b/scripts/general/postpad.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} postpad (@var{x}, @var{l}, @var{c})
+## @deftypefn {Function File} {} postpad (@var{x}, @var{l}, @var{c})
 ## See prepad.
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 
 function y = postpad (x, l, c)
 
diff --git a/scripts/general/prepad.m b/scripts/general/prepad.m
--- a/scripts/general/prepad.m
+++ b/scripts/general/prepad.m
@@ -13,25 +13,25 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} prepad (@var{x}, @var{l}, @var{c})
-## @deftypefnx {Function File} {@var{x} =} postpad (@var{x}, @var{l}, @var{c})
+## @deftypefn {Function File} {} prepad (@var{x}, @var{l}, @var{c})
+## @deftypefnx {Function File} {} postpad (@var{x}, @var{l}, @var{c})
 ##
 ## Prepends (appends) the scalar value @var{c} to the vector @var{x}
 ## until it is of length @var{l}.  If the third argument is not
 ## supplied, a value of 0 is used.
 ##
-## If @code{length (x) > l}, elements from the beginning (end) of
-## @var{x} are removed until a vector of length l is obtained.
+## If @code{length (@var{x}) > @var{l}}, elements from the beginning (end) of
+## @var{x} are removed until a vector of length @var{l} is obtained.
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 
 function y = prepad (x, l, c)
 
   if (nargin == 2)
diff --git a/scripts/miscellaneous/path.m b/scripts/miscellaneous/path.m
--- a/scripts/miscellaneous/path.m
+++ b/scripts/miscellaneous/path.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{p} =} path (@dots{})
+## @deftypefn {Function File} {} path (@dots{})
 ## Modify or display Octave's @code{LOADPATH}.
 ##
 ## If @var{nargin} and @var{nargout} are zero, display the elements of
 ## Octave's @code{LOADPATH} in an easy to read format.
 ##
 ## If @var{nargin} is zero and nargout is greater than zero, return the
 ## current value of @code{LOADPATH}.
 ##
diff --git a/scripts/miscellaneous/texas_lotto.m b/scripts/miscellaneous/texas_lotto.m
--- a/scripts/miscellaneous/texas_lotto.m
+++ b/scripts/miscellaneous/texas_lotto.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{winning_numbers} =} texas_lotto ()
+## @deftypefn {Function File} {} texas_lotto ()
 ## Pick 6 unique numbers between 1 and 50 that are guaranteed to win
 ## the Texas Lotto.
 ## @end deftypefn
 ## @seealso{rand}
 
 ## Author: jwe
 
 function picks = texas_lotto ()
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{fmt} =} __pltopt1__ (@var{caller}, @var{opt})
+## @deftypefn {Function File} {} __pltopt1__ (@var{caller}, @var{opt})
 ## Really decode plot option strings.
 ## @end deftypefn
 ## @seealso{__pltopt__}
 
 ## Author: Rick Niles <niles@axp745.gsfc.nasa.gov>
 ## Adapted-By: jwe
 ## Maintainer: jwe
 
diff --git a/scripts/plot/__pltopt__.m b/scripts/plot/__pltopt__.m
--- a/scripts/plot/__pltopt__.m
+++ b/scripts/plot/__pltopt__.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{fmt} =} __pltopt__ (@var{caller}, @var{opt})
+## @deftypefn {Function File} {} __pltopt__ (@var{caller}, @var{opt})
 ## Decode plot option strings.
 ##
 ## If @var{opt} is a valid option string, return a string of the form
 ## @code{"w l 2"} ("with lines 2").  Uses abbreviations for the options
 ## to avoid overrunning gnuplot's command line buffer unnecessarily.
 ##
 ## @var{opt} can currently be some combination of the following:
 ##
diff --git a/scripts/signal/arch_rnd.m b/scripts/signal/arch_rnd.m
--- a/scripts/signal/arch_rnd.m
+++ b/scripts/signal/arch_rnd.m
@@ -10,20 +10,20 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{y} =} arch_rnd (@var{a}, @var{b}, @var{t})
-## Simulate an ARCH sequence, @var{y}, of length @var{t} with AR
+## @deftypefn {Function File} {} arch_rnd (@var{a}, @var{b}, @var{t})
+## Simulate an ARCH sequence of length @var{t} with AR
 ## coefficients @var{b} and CH coefficients @var{a}.  I.e., the result
-## follows the model
+## @math{y(t)} follows the model
 ##
 ## @example
 ## y(t) = b(1) + b(2) * y(t-1) + @dots{} + b(lb) * y(t-lb+1) + e(t),
 ## @end example
 ##
 ## @noindent
 ## where @math{e(t)}, given @var{y} up to time @math{t-1}, is
 ## @math{N(0, h(t))}, with
diff --git a/scripts/signal/synthesis.m b/scripts/signal/synthesis.m
--- a/scripts/signal/synthesis.m
+++ b/scripts/signal/synthesis.m
@@ -10,17 +10,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{x} =} synthesis (@var{y}, @var{c})
+## @deftypefn {Function File} {} synthesis (@var{y}, @var{c})
 ## Compute a signal from its short-time Fourier transform @var{y} and a
 ## 3-element vector @var{c} specifying window size, increment, and
 ## window type.
 ##
 ## The values @var{y} and @var{c} can be derived by
 ##
 ## @example
 ## [@var{y}, @var{c}] = stft (@var{x} , @dots{})
diff --git a/scripts/specfun/log2.m b/scripts/specfun/log2.m
--- a/scripts/specfun/log2.m
+++ b/scripts/specfun/log2.m
@@ -10,17 +10,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this file.  If not, write to the Free Software Foundation,
 ## 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Mapping Function} {@var{y} =} log2 (@var{x})
+## @deftypefn {Mapping Function} {} log2 (@var{x})
 ## @deftypefnx {Mapping Function} {[@var{f}, @var{e}]} log2 (@var{x})
 ## Compute the base-2 logarithm of @var{x}.  With two outputs, returns
 ## @var{f} and @var{e} such that
 ## @iftex
 ## @tex
 ##  $1/2 <= |f| < 1$ and $x = f \cdot 2^e$.
 ## @end tex
 ## @end iftex
diff --git a/scripts/strings/com2str.m b/scripts/strings/com2str.m
--- a/scripts/strings/com2str.m
+++ b/scripts/strings/com2str.m
@@ -12,17 +12,17 @@
 ## FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ## for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{retval} =} com2str(@var{zz}, @var{flg})
+## @deftypefn {Function File} {} com2str(@var{zz}, @var{flg})
 ##
 ## convert complex number to a string
 ## @strong{Inputs}
 ## @table @var
 ## @item zz
 ## complex number
 ## @item flg
 ## format flag
diff --git a/scripts/strings/isletter.m b/scripts/strings/isletter.m
--- a/scripts/strings/isletter.m
+++ b/scripts/strings/isletter.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{bool} =} isletter(@var{s})
+## @deftypefn {Function File} {} isletter(@var{s})
 ## Returns true if @var{s} is a letter false otherwise.
 ## @end deftypefn
 ## @seealso{isalpha}
 
 ## Author: jwe
 
 function retval = isletter (s)
 
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -182,17 +182,17 @@ DEFUN_DLD (qz, args, nargout,
 @deftypefn {Loadable Function} {@var{lambda} =} qz (@var{a}, @var{b})\n\
 Generalized eigenvalue problem @math{A x = s B x},\n\
 @var{QZ} decomposition.  Three ways to call:\n\
 @enumerate\n\
 @item @code{lambda = qz(A,B)}\n\
 \n\
 Computes the generalized eigenvalues @var{lambda} of @math{(A - sB)}.\n\
 \n\
-@item @code{[AA, BB, Q, Z @{, V, W, lambda@}] = qz (A, B)}\n\
+@item @code{[AA, BB, Q, Z, V, W, lambda] = qz (A, B)}\n\
 \n\
 Computes qz decomposition, generalized eigenvectors, and \n\
         generalized eigenvalues of @math{(A - sB)}\n\
 @example\n\
 @group\n\
         A V = B V diag(lambda)\n\
         W' A = diag(lambda) W' B\n\
         AA = Q'*A*Z, BB = Q'*B*Z  with Q, Z orthogonal (unitary)= I\n\
