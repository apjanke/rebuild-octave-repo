# HG changeset patch
# User Rik <rik@octave.org>
# Date 1439587591 25200
#      Fri Aug 14 14:26:31 2015 -0700
# Node ID ab2c5e84954a04ab260d4bb900b586a04c5fe843
# Parent  610c7474851861c4d1a07a75cb9f9f9eaecf74fd
Allow relative paths when printing with -dpdflatex (bug #45601).

* __opengl_print__.m, __gnuplot_print__.m: When processing *latex devices, use
fileparts() and fullfile() to determine names and extensions rather than
searching for a '.' which is confused by relative paths.

diff --git a/scripts/plot/util/private/__gnuplot_print__.m b/scripts/plot/util/private/__gnuplot_print__.m
--- a/scripts/plot/util/private/__gnuplot_print__.m
+++ b/scripts/plot/util/private/__gnuplot_print__.m
@@ -66,25 +66,33 @@ function opts = __gnuplot_print__ (opts)
                             cleanup)};
       else
         eps_drawnow (opts, opts.name, gp_opts);
       endif
     case {"epslatex", "pslatex", "pstex", "epslatexstandalone"}
       dot = find (opts.name == ".", 1, "last");
       n = find (opts.devopt == "l", 1);
       suffix = opts.devopt(1:n-1);
-      if (! isempty (dot))
-        if (any (strcmpi (opts.name(dot:end), {["." suffix], ".tex", "."})))
-          name = opts.name(1:dot-1);
-        else
-          error ("print:invalid-suffix",
-                 "invalid suffix '%s' for device '%s'.",
-                 opts.name(dot:end), lower (opts.devopt));
+      [ndir, name, ext] = fileparts (opts.name);
+      if (isempty (ext))
+        ext = "tex";
+      else
+        ext = ext(2:end);  # remove leading '.'
+      endif
+      if (any (strcmpi (ext, {suffix, "tex"})))
+        name = fullfile (ndir, name);
+        if (any (strcmpi (ext, {"eps", "ps", "pdf"})))
+          suffix = ext;  # If user provides eps/ps/pdf suffix, use it.
         endif
+      else
+        error ("print:invalid-suffix",
+               "invalid suffix '%s' for device '%s'.",
+               ext, lower (opts.devopt));
       endif
+
       if (strfind (opts.devopt, "standalone"))
         term = sprintf ("%s ",
                         strrep (opts.devopt, "standalone", " standalone"));
       else
         term = sprintf ("%s ", opts.devopt);
       endif
       if (__gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
         suffix = "tex";
diff --git a/scripts/plot/util/private/__opengl_print__.m b/scripts/plot/util/private/__opengl_print__.m
--- a/scripts/plot/util/private/__opengl_print__.m
+++ b/scripts/plot/util/private/__opengl_print__.m
@@ -43,30 +43,31 @@ function opts = __opengl_print__ (opts)
       gl2ps_device = {"eps"};
       ## FIXME: use epstool to tighten bbox and provide preview.
       pipeline = {opts.epstool_cmd(opts, "-", opts.name)};
     case {"epslatex", "pslatex", "pdflatex", "epslatexstandalone", ...
           "pslatexstandalone", "pdflatexstandalone"}
       ## format GL2PS_TEX
       n = find (opts.devopt == "l", 1);
       suffix = opts.devopt(1:n-1);
-      dot = find (opts.name == ".", 1, "last");
-      if ((! isempty (dot))
-          && any (strcmpi (opts.name(dot:end), ...
-                  {strcat(".", suffix), ".tex", "."})))
-        name = opts.name(1:dot-1);
-        if (dot < numel (opts.name)
-            && any (strcmpi (opts.name(dot+1:end), {"eps", "ps", "pdf"})))
-          ## If user provides eps/ps/pdf suffix, use it.
-          suffix = opts.name(dot+1:end);
+      [ndir, name, ext] = fileparts (opts.name);
+      if (isempty (ext))
+        ext = "tex";
+      else
+        ext = ext(2:end);  # remove leading '.'
+      endif
+      if (any (strcmpi (ext, {suffix, "tex"})))
+        name = fullfile (ndir, name);
+        if (any (strcmpi (ext, {"eps", "ps", "pdf"})))
+          suffix = ext;  # If user provides eps/ps/pdf suffix, use it.
         endif
       else
         error ("print:invalid-suffix",
                "invalid suffix '%s' for device '%s'.",
-               opts.name(dot:end), lower (opts.devopt));
+               ext, lower (opts.devopt));
       endif
       gl2ps_device = {sprintf("%snotxt", lower (suffix))};
       gl2ps_device{2} = "tex";
       if (dos_shell)
         ## FIXME: this will only work on MinGW with the MSYS shell
         pipeline = {sprintf("cat > %s-inc.%s", name, suffix)};
         pipeline{2} = sprintf ("cat > %s.tex", name);
       else
