# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1442913904 -7200
#      Tue Sep 22 11:25:04 2015 +0200
# Node ID bb09279e5c994f7d6417c32bbd9a0823a4c93b8b
# Parent  bf6c4433ed5f1a9a408659a6b243d2cc8363fe1c
menu.m: Fix bug #45988, return 0 if the dialog is aborted or invalid selection

diff --git a/scripts/miscellaneous/menu.m b/scripts/miscellaneous/menu.m
--- a/scripts/miscellaneous/menu.m
+++ b/scripts/miscellaneous/menu.m
@@ -25,17 +25,18 @@
 ## If the GUI is running, or Java is available, the menu is displayed
 ## graphically using @code{listdlg}.  Otherwise, the title and menu options
 ## are printed on the console.
 ##
 ## @var{title} is a string and the options may be input as individual strings
 ## or as a cell array of strings.
 ##
 ## The return value @var{choice} is the number of the option selected by the
-## user counting from 1.
+## user counting from 1 or 0 if the user aborts the dialog or makes an invalid
+## selection.
 ##
 ## This function is useful for interactive programs.  There is no limit to the
 ## number of options that may be passed in, but it may be confusing to present
 ## more than will fit easily on one screen.
 ## @seealso{input, listdlg}
 ## @end deftypefn
 
 ## Author: jwe
@@ -53,17 +54,17 @@ function choice = menu (title, varargin)
   elseif (! ischar (varargin{1}) && ! iscellstr (varargin{1}))
     error ("menu: OPTIONS must be string or cell array of strings");
   endif
 
   if (isguirunning () || usejava ("awt"))
     [choice, ok] = listdlg ("Name", "menu", "PromptString", title,
                             "ListString", varargin, "SelectionMode", "Single");
     if (! ok)
-      choice = 1;
+      choice = 0;
     endif
   else  # console menu
     ## Force pending output to appear before the menu.
     fflush (stdout);
 
     ## Don't send the menu through the pager since doing that can cause
     ## major confusion.
     page_screen_output (0, "local");
@@ -77,16 +78,17 @@ function choice = menu (title, varargin)
       for i = 1:nopt
         printf ("  [%2d] %s\n", i, varargin{i});
       endfor
       printf ("\n");
       s = input ("Select a number: ", "s");
       choice = sscanf (s, "%d");
       if (! isscalar (choice) || choice < 1 || choice > nopt)
         printf ("\nerror: input invalid or out of range\n\n");
+        choice = 0;
       else
         break;
       endif
     endwhile
   endif
 
 endfunction
 
