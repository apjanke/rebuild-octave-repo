# HG changeset patch
# User jwe
# Date 1159885654 0
#      Tue Oct 03 14:27:34 2006 +0000
# Node ID 500d884ae3730687568c08dd69b61022c4f53c36
# Parent  75a828280d68b38c9b4f6dcfbc6aa9e55d3158e1
[project @ 2006-10-03 14:27:33 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,18 @@
+2006-10-03  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Include CAMD_LIBS, AMD_LIBS, and REGEX_LIBS in the
+	summary.
+
+2006-10-03  David Bateman  <dbateman@free.fr>
+
+	* configure.in: Check for libcamd.
+	* Makeconf.in (CAMD_LIBS): New variable.
+
 2006-09-27  John W. Eaton  <jwe@octave.org>
 
 	* mkoctfile.in [--mex]: Include -I. in incflags.
 	From Soren Hauberg <soren@hauberg.org>.
 
 2006-09-26  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AC_CONFIG_FILES):
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -192,16 +192,17 @@ LIBCRUFT = @LIBCRUFT@
 LIBREADLINE = @LIBREADLINE@
 TERMLIBS = @TERMLIBS@
 
 REGEX_LIBS = @REGEX_LIBS@
 BLAS_LIBS = @BLAS_LIBS@
 FFTW_LIBS = @FFTW_LIBS@
 GLPK_LIBS = @GLPK_LIBS@
 AMD_LIBS = @AMD_LIBS@
+CAMD_LIBS = @CAMD_LIBS@
 UMFPACK_LIBS = @UMFPACK_LIBS@
 COLAMD_LIBS = @COLAMD_LIBS@
 CCOLAMD_LIBS = @CCOLAMD_LIBS@
 CHOLMOD_LIBS = @CHOLMOD_LIBS@
 CXSPARSE_LIBS = @CXSPARSE_LIBS@
 LIBS = @LIBS@
 
 USE_64_BIT_IDX_T = @USE_64_BIT_IDX_T@
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.521 $)
+AC_REVISION($Revision: 1.522 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -708,16 +708,21 @@ ACX_LAPACK([BLAS_LIBS="$LAPACK_LIBS $BLA
 AC_SUBST(BLAS_DIR)
 AC_SUBST(LAPACK_DIR)
 
 # Check for AMD library
 AMD_LIBS=
 AC_SUBST(AMD_LIBS)
 AC_CHECK_LIB(amd, amd_postorder, [AMD_LIBS="-lamd"; with_amd=yes],[with_amd=no])
 
+# Check for CAMD library
+CAMD_LIBS=
+AC_SUBST(CAMD_LIBS)
+AC_CHECK_LIB(camd, camd_postorder, [CAMD_LIBS="-lcamd"; with_camd=yes],[with_camd=no])
+
 # Check for UMFPACK library.
 
 UMFPACK_LIBS=
 AC_SUBST(UMFPACK_LIBS)
 
 AC_ARG_WITH(umfpack,
   [AS_HELP_STRING([--without-umfpack],
      [don't use UMFPACK, disable some sparse functionality])],
@@ -1778,21 +1783,24 @@ Octave is now configured for $canonical_
   C compiler:           $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS
   C++ compiler:         $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $FORT
   Fortran libraries:    $FLIBS
   BLAS libraries:       $BLAS_LIBS
   FFTW libraries:       $FFTW_LIBS
   GLPK libraries:       $GLPK_LIBS
   UMFPACK libraries:    $UMFPACK_LIBS
+  AMD libraries:        $AMD_LIBS
+  CAMD libraries:       $CAMD_LIBS
   COLAMD libraries:     $COLAMD_LIBS
   CCOLAMD libraries:    $CCOLAMD_LIBS
   CHOLMOD libraries:    $CHOLMOD_LIBS
   CXSPARSE libraries:   $CXSPARSE_LIBS
   HDF5 libraries:       $HDF5_LIBS
+  REGEX libraries:      $REGEX_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-03  Rafael Laboissiere <rafael@debian.org>
+
+	* interpreter/mkoctfile.1: Fix indentation for --mex description.
+
 2006-09-26  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in (stamp-images): Delete.
 	(octave.info): Depend on $(IMAGES_TXT), not stamp-images.
 	(octave.dvi): Depend on $(IMAGES_EPS), not stamp-images.
 	(octave.pdf): Depend on $(IMAGES_PDF), not stamp-images.
 	(html-figs): Depend on $(IMAGES_PNG), not stamp-images.
 	(SCRIPT_SOURCES, SPARSEIMAGES_1, SPARSEIMAGES_EPS,
diff --git a/doc/interpreter/mkoctfile.1 b/doc/interpreter/mkoctfile.1
--- a/doc/interpreter/mkoctfile.1
+++ b/doc/interpreter/mkoctfile.1
@@ -61,16 +61,17 @@ Print configuration variable VAR.  Recog
     F2C                       SED         
     F2CFLAGS                  XTRA_CFLAGS   
     F77                       XTRA_CXXFLAGS 
     FFLAGS
 .RE
 .TP 8
 .B \-\-link-stand-alone
 Link a stand-alone executable file.
+.TP 8
 .B \-\-mex
 Assume we are creating a MEX file.  Set the default output extension
 to .mex.
 .TP 8
 .B \-s|--strip
 Strip the output file.
 .TP 8
 .B \-v|--verbose
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2006-10-03  Bill Denney  <denney@seas.upenn.edu>
+
+ 	* audio/loadaudio.m, control/base/nyquist.m,
+ 	control/system/__zp2ssg2__.m, linear-algebra/cross.m,
+ 	linear-algebra/krylov.m, statistics/base/center.m,
+ 	statistics/base/median.m, statistics/base/std.m,
+ 	statistics/base/var.m, testfun/test.m: 	Use the new find syntax to
+	find first or last element matching a condition.
+
 2006-10-02  Bill Denney  <denney@seas.upenn.edu>
 
 	* strings/deblank.m, strings/upper.m, strings/lower.m,
 	general/__isequal__.m: Minimize looping using cellfun.
 
 2006-10-02  David Bateman  <dbateman@free.fr>
 
 	* pkg/pkg.m (copy_files): always create installation directory.
diff --git a/scripts/audio/loadaudio.m b/scripts/audio/loadaudio.m
--- a/scripts/audio/loadaudio.m
+++ b/scripts/audio/loadaudio.m
@@ -62,17 +62,17 @@ function X = loadaudio (name, ext, bit)
       X = Y - 127;
     else
       [X, c] = fread (num, inf, "short");
     endif
   elseif (strcmp (ext, "mu") || strcmp (ext, "au")
 	  || strcmp (ext, "snd") || strcmp(ext, "ul"))
     [Y, c] = fread (num, inf, "uchar");
     ## remove file header
-    m = max (find (Y(1:64) == 0));
+    m = find (Y(1:64) == 0, 1, "last");
     if (! isempty (m))
       Y(1:m) = [];
     endif
     X = mu2lin (Y, bit);
   else
     fclose (num);
     error ("loadaudio does not support given extension");
   endif
diff --git a/scripts/control/base/nyquist.m b/scripts/control/base/nyquist.m
--- a/scripts/control/base/nyquist.m
+++ b/scripts/control/base/nyquist.m
@@ -161,17 +161,17 @@ function [realp, imagp, w] = nyquist (sy
       plot(realp,imagp,"- ;+w;",realp,-imagp,"-@ ;-w;");
 
       ## check for interactive plots
       dnplot = 1; # assume done; will change later if atol is satisfied
       if(atol > 0 & length(f) > 2)
 
         ## check for asymptotes
         fmax = max(abs(f));
-        fi = max(find(abs(f) == fmax));
+        fi = find(abs(f) == fmax, 1, "last");
 
         ## compute angles from point to point
         df = diff(f);
         th = atan2(real(df),imag(df))*180/pi;
 
         ## get angle at fmax
         if(fi == length(f)) fi = fi-1; endif
         thm = th(fi);
diff --git a/scripts/control/system/__zp2ssg2__.m b/scripts/control/system/__zp2ssg2__.m
--- a/scripts/control/system/__zp2ssg2__.m
+++ b/scripts/control/system/__zp2ssg2__.m
@@ -35,17 +35,17 @@ function [poly, rvals] = __zp2ssg2__ (rv
   if(!isempty(cidx))
     ## select first complex root, omit from cidx
     r1i = cidx(1);      r1 = rvals(r1i);     cidx = complement(r1i,cidx);
 
     ## locate conjugate root (must be in cidx list, just in case there's
     ## roundoff)
     err = abs(rvals(cidx) - r1');
     minerr = min(err);
-    c2i = min(find(err == minerr));
+    c2i = find(err == minerr, 1);
     r2i = cidx(c2i);
     r2 = rvals(r2i);
     cidx = complement(r2i,cidx);
 
     ## don't check for divide by zero, since 0 is not complex.
     if(abs(r2 - r1')/abs(r1) > 1e-12)
       error(sprintf("r1=(%f,%f); r2=(%f,%f), not conjugates.", ...
         real(r1),imag(r1),real(r2),imag(r2)));
diff --git a/scripts/linear-algebra/cross.m b/scripts/linear-algebra/cross.m
--- a/scripts/linear-algebra/cross.m
+++ b/scripts/linear-algebra/cross.m
@@ -54,17 +54,17 @@ function z = cross (x, y, dim)
       y = y.';
     elseif (rows (x) == 1 && columns (y) == 1)
       warning ("cross: taking cross product of row by column");
       x = x.';
     endif
   endif
 
   if (nargin == 2)
-     dim = min (find (size (x) == 3));
+     dim = find (size (x) == 3, 1);
      if (isempty (dim)) 
        error ("cross: must have at least one dimension with 3 elements");
      endif
    else
      if (size (x) != 3)
        error ("cross: dimension dim must have 3 elements");
      endif
   endif
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -128,22 +128,22 @@ function [Uret, H, nu] = krylov (A, V, k
 	## one less reflection
         nu--;
       else
 	## new householder reflection
         if (pflg)
           ## locate max magnitude element in short_q
           asq = abs (short_q);
           maxv = max (asq);
-          maxidx = find (asq == maxv);
-          pivot_idx = short_pv(maxidx(1));
+          maxidx = find (asq == maxv, 1);
+          pivot_idx = short_pv(maxidx);
 
 	  ## see if need to change the pivot list
           if (pivot_idx != pivot_vec(nu))
-            swapidx = maxidx(1) + (nu-1);
+            swapidx = maxidx + (nu-1);
             [pivot_vec(nu), pivot_vec(swapidx)] = ...
 		swap (pivot_vec(nu), pivot_vec(swapidx));
           endif
         endif
 
 	## isolate portion of vector for reflection
         idx = pivot_vec(nu:na);
         jdx = pivot_vec(1:nu);
diff --git a/scripts/statistics/base/center.m b/scripts/statistics/base/center.m
--- a/scripts/statistics/base/center.m
+++ b/scripts/statistics/base/center.m
@@ -34,17 +34,17 @@ function retval = center (x, varargin)
   if (nargin != 1 && nargin != 2)
     usage ("center (x)");
   endif
 
   if (isvector (x))
     retval = x - mean (x, varargin{:});
   elseif (ismatrix (x))
     if nargin < 2
-      dim = min (find (size (x) > 1));
+      dim = find (size (x) > 1, 1);
       if isempty (dim), 
 	dim=1; 
       endif;
     else
       dim = varargin {1};
     endif
     sz = ones (1, ndims (x));
     sz (dim) = size (x, dim);
diff --git a/scripts/statistics/base/median.m b/scripts/statistics/base/median.m
--- a/scripts/statistics/base/median.m
+++ b/scripts/statistics/base/median.m
@@ -48,17 +48,17 @@
 ## Author: jwe
 
 function retval = median (a, dim)
 
   if (nargin != 1 && nargin != 2)
     usage ("median (a, dim)");
   endif
   if (nargin < 2)
-    dim = min (find (size (a) > 1));
+    dim = find (size (a) > 1, 1);
     if (isempty (dim))
       dim = 1;
     endif
   endif
 
   sz = size (a);
   s = sort (a, dim);
   if (numel (a) > 0)
diff --git a/scripts/statistics/base/std.m b/scripts/statistics/base/std.m
--- a/scripts/statistics/base/std.m
+++ b/scripts/statistics/base/std.m
@@ -61,17 +61,17 @@
 ## Author: jwe
 
 function retval = std (a, opt, dim)
 
   if (nargin < 1 || nargin > 3)
     usage ("std (a, opt, dim)");
   endif
   if nargin < 3
-    dim = min(find(size(a)>1));
+    dim = find (size (a) > 1, 1);
     if isempty(dim), dim=1; endif;
   endif
   if ((nargin < 2) || isempty(opt))
     opt = 0;
   endif
 
   sz = size(a);
   if (sz (dim) == 1)
diff --git a/scripts/statistics/base/var.m b/scripts/statistics/base/var.m
--- a/scripts/statistics/base/var.m
+++ b/scripts/statistics/base/var.m
@@ -42,17 +42,17 @@
 ## Description: Compute variance
 
 function y = var (x, opt, dim)
 
   if (nargin < 1 || nargin > 3)
     usage ("var (x, opt, sim)");
   endif
   if (nargin < 3)
-    dim = min (find (size (x) > 1));
+    dim = find (size (x) > 1, 1);
     if (isempty (dim))
       dim = 1;
     endif
   endif
   if (nargin < 2 || isempty (opt))
     opt = 0;
   endif
 
diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -474,22 +474,22 @@ function s = varstruct(varargin)
   endfor
 endfunction
 
 ## find [start,end] of fn in 'function [a,b] = fn'
 function pos = function_name(def)
   pos = [];
 
   ## Find the end of the name
-  right = min(find(def=='('));
+  right = find(def=='(', 1);
   if isempty(right), return; endif
-  right = max(find(def(1:right-1) != ' '));
+  right = find(def(1:right-1) != ' ', 1, "last");
 
   ## Find the beginning of the name
-  left = max([find(def(1:right)==' '),find(def(1:right)=='=')]);
+  left = max([find(def(1:right)==' ', 1, "last"),find(def(1:right)=='=', 1, "last")]);
   if isempty(left), return; endif
   left++;
 
   ## Return the end points of the name
   pos = [left,right];
 endfunction
 
 ## strip <pattern> from '<pattern> code'
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-03  David Bateman  <dbateman@free.fr>
+
+	* Makefile.in (OCT_LINK_DEPS) Include $(CAMD_LIBS) in the list.
+	(octave$(EXEEXT)): Include $(CAMD_LIBS) in link command.
+
 2006-10-02  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.9.
 	(OCTAVE_API_VERSION): Now api-v22.
 	(OCTAVE_RELEASE_DATE): Now 2006-10-02.
 
 	* pr-output.cc (pr_plus_format): Use "inline" instead of "static
 	inline" for template functions to avoid problems when not
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -242,17 +242,17 @@ else
 endif
 
 OCTINTERP_LINK_DEPS = \
   -L../liboctave $(LIBOCTAVE) -L../libcruft $(LIBCRUFT) $(LIBS) $(FLIBS)
 
 OCT_LINK_DEPS = \
   -L../libcruft $(LIBCRUFT) -L../liboctave $(LIBOCTAVE) \
   -L. $(LIBOCTINTERP) $(CHOLMOD_LIBS) $(UMFPACK_LIBS) $(AMD_LIBS) \
-   $(COLAMD_LIBS) $(CCOLAMD_LIBS) $(CXSPARSE_LIBS) $(BLAS_LIBS) \
+   $(CAMD_LIBS) $(COLAMD_LIBS) $(CCOLAMD_LIBS) $(CXSPARSE_LIBS) $(BLAS_LIBS) \
    $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 DISTFILES = Makefile.in ChangeLog mkdefs mkops mkgendoc \
 	DOCSTRINGS mkbuiltins mk-errno-list mk-pkg-add \
 	defaults.h.in oct-conf.h.in oct-errno.cc.in octave.gperf \
 	oct-gperf.h parse.cc lex.cc y.tab.h __gnuplot_raw__.cc \
 	$(INCLUDES) $(DIST_SRC) $(OPT_HANDLERS) $(EXTRAS)
 
@@ -306,17 +306,17 @@ stamp-prereq: defaults.h oct-conf.h oct-
 	touch stamp-prereq
 
 octave$(EXEEXT): stamp-prereq $(LIBRARIES) main.o $(DLD_STATIC_OBJ)
 	$(LD_CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(RDYNAMIC_FLAG) \
 	$(ALL_LDFLAGS) -o $@ \
 	main.o $(DLD_STATIC_OBJ) \
 	$(OCTAVE_LFLAGS) \
 	$(OCTAVE_LIBS) \
-	$(LEXLIB) $(UMFPACK_LIBS) $(AMD_LIBS) $(COLAMD_LIBS) \
+	$(LEXLIB) $(UMFPACK_LIBS) $(AMD_LIBS) $(CAMD_LIBS) $(COLAMD_LIBS) \
 	$(CHOLMOD_LIBS) $(CCOLAMD_LIBS) $(CXSPARSE_LIBS) $(BLAS_LIBS) \
 	$(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 stmp-pic: pic
 	@if [ -f stmp-pic ]; then \
 	  true; \
 	else \
 	  echo "touch stmp-pic"; \
