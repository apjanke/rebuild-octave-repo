# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1286537971 14400
#      Fri Oct 08 07:39:31 2010 -0400
# Node ID 2adf4736dafa570d675c93dfbf6d5bfb0be312bb
# Parent  d761f0dc997e95ab1545d27521d44e0c6feca1d0
Do not store flipped image property values when x/ydata descends.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-08  Ben Abbott <bpabbott@mac.com>
+
+	* image/image.m, plot/__go_draw_axes__.m: Do not store flipped image
+	property values when x/ydata descends.
+
 2010-10-07  John W. Eaton  <jwe@octave.org>
 
 	* signal/periodogram.m: Fix parse errors.
 
 2010-10-07  John W. Eaton  <jwe@octave.org>
 
 	* time/datevec.m: Use endfunction to mark end of primary
 	function and subfunctions.
diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -114,35 +114,33 @@ function h = __img__ (x, y, img, varargi
 
   if (isempty (y))
     y = [1, rows(img)];
   endif
 
   xdata = [x(1), x(end)];
   ydata = [y(1), y(end)];
 
-  if (diff (xdata) < 0)
-    xdata = fliplr (xdata);
-    img = fliplr (img);
-  elseif (diff (xdata) == 0)
-    xdata = xdata(1) + [0, size(img,2)-1];
-  endif
-  if (diff (ydata) < 0)
-    ydata = fliplr (ydata);
-    img = flipud (img);
-  elseif (diff (ydata) == 0)
-    ydata = ydata(1) + [0, size(img,1)-1];
-  endif
-
   ca = gca ();
 
   tmp = __go_image__ (ca, "cdata", img, "xdata", xdata, "ydata", ydata,
                     "cdatamapping", "direct", varargin {:});
 
   px = __image_pixel_size__ (tmp);
+
+  if (xdata(2) < xdata(1))
+    xdata = xdata(2:-1:1);
+  elseif (xdata(2) == xdata(1))
+    xdata = xdata(1) + [0, size(img,2)-1];
+  endif
+  if (ydata(2) < ydata(1))
+    ydata = ydata(2:-1:1);
+  elseif (ydata(2) == ydata(1))
+    ydata = ydata(1) + [0, size(img,1)-1];
+  endif
   xlim = xdata + [-px(1), px(1)];
   ylim = ydata + [-px(2), px(2)];
 
   ## FIXME -- how can we do this and also get the {x,y}limmode
   ## properties to remain "auto"?  I suppose this adjustment should
   ## happen automatically in axes::update_axis_limits instead of
   ## explicitly setting the values here.  But then what information is
   ## available to axes::update_axis_limits to determine that the
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -448,31 +448,45 @@ function __go_draw_axes__ (h, plot_strea
               cdatadirect = true;
             endif
             data_idx++;
             is_image_data(data_idx) = true;
             parametric(data_idx) = false;
             have_cdata(data_idx) = false;
             have_3d_patch(data_idx) = false;
 
+            if (img_xdata(2) < img_xdata(1))
+              img_xdata = img_xdata(2:-1:1);
+              img_data = img_data(:,end:-1:1,:);
+            elseif (img_xdata(1) == img_xdata(2))
+              img_xdata = img_xdata(1) + [0, size(img_data,2)-1];
+            endif
+            if (img_ydata(2) < img_ydata(1))
+              img_ydata = img_ydata(2:-1:1);
+              img_data = img_data(end:-1:1,:,:);
+            elseif (img_ydata(1) == img_ydata(2))
+              img_ydata = img_ydata(1) + [0, size(img_data,1)-1];
+            endif
+
             [y_dim, x_dim] = size (img_data(:,:,1));
             if (x_dim > 1)
               dx = abs (img_xdata(2)-img_xdata(1))/(x_dim-1);
             else
               x_dim = 2;
               img_data = [img_data, img_data];
               dx = abs (img_xdata(2)-img_xdata(1));
             endif
             if (y_dim > 1)
               dy = abs (img_ydata(2)-img_ydata(1))/(y_dim-1);
             else
               y_dim = 2;
               img_data = [img_data; img_data];
               dy = abs (img_ydata(2)-img_ydata(1));
             endif
+
             x_origin = min (img_xdata);
             y_origin = min (img_ydata);
 
             if (ndims (img_data) == 3)
               data{data_idx} = permute (img_data, [3, 1, 2])(:);
               format = "1:2:3";
               imagetype = "rgbimage";
             else
