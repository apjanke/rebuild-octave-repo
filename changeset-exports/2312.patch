# HG changeset patch
# User jwe
# Date 837120036 0
#      Thu Jul 11 21:20:36 1996 +0000
# Node ID 204cc7db6f4abf538d2d29a53e578fc60a88569f
# Parent  2b5788792cad9b9643d642c66b36b9fb1e5cf5ae
[project @ 1996-07-11 21:20:36 by jwe]

diff --git a/scripts/audio/lin2mu.m b/scripts/audio/lin2mu.m
--- a/scripts/audio/lin2mu.m
+++ b/scripts/audio/lin2mu.m
@@ -17,21 +17,22 @@
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage:  y = lin2mu (x)
 ##
 ## x is a vector of an 8- or 16-bit linearly encoded audio sample,
 ## This is transformed into a mu-law encoded vector.
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 17 October 1994
+## Adapted-By: jwe
+
 function y = lin2mu (x)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Oct 17, 1994
-  ## Copyright Department of Probability Theory and Statistics TU Wien
-
   if (nargin != 1)
     usage ("y = lin2mu (x)");
   endif
 
   if (! is_vector (x))
     error ("lin2mu: x must be a vector");
   endif
   
diff --git a/scripts/audio/loadaudio.m b/scripts/audio/loadaudio.m
--- a/scripts/audio/loadaudio.m
+++ b/scripts/audio/loadaudio.m
@@ -27,21 +27,22 @@
 ## *) linear encoding with extension "lin" or "raw"
 ## 
 ## The `bit' argument can be either 8 (default) or 16.
 ## Depending on the value of bit, linearly encoded files are
 ## interpreted as being in 8 and 16 bit format, respectively, and
 ## mu-law encoded files are transformed to 8 and 16-bit linear
 ## format, respectively.
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 10 April 1994
+## Adapted-By: jwe
+
 function X = loadaudio (name, ext, bit)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Apr 10, 1994
-  ## Last modified by AW on Oct 29, 1994
-
   if (nargin == 0 || nargin > 3)
     usage ("loadaudio (name [, ext [, bit]])");
   endif
 
   if (nargin == 1)
     ext = "lin";
   endif
 
diff --git a/scripts/audio/mu2lin.m b/scripts/audio/mu2lin.m
--- a/scripts/audio/mu2lin.m
+++ b/scripts/audio/mu2lin.m
@@ -19,22 +19,22 @@
 
 ## usage: y = mu2lin (x [, bit])
 ##
 ## If x is a vector of audio data with mu-law encoding, mu2lin (x)
 ## holds the same data with linear encoding.
 ## The optional argument bit specifies whether the input data is 
 ## 8 bit (default) or 16 bit.
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 18 October 1994
+## Adapted-By: jwe
+
 function y = mu2lin (x, bit)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Oct 18, 1994
-  ## Updated by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Oct 27, 1994
-  ## Copyright Department of Probability Theory and Statistics TU Wien
-
   if (nargin == 1)
     bit = 8;
   elseif (nargin == 2)
     if (bit != 8 && bit != 16)
       error ("mu2lin: bit must be either 8 or 16");
     endif
   else
     usage ("y = mu2lin (x [, bit])");
diff --git a/scripts/audio/playaudio.m b/scripts/audio/playaudio.m
--- a/scripts/audio/playaudio.m
+++ b/scripts/audio/playaudio.m
@@ -26,22 +26,22 @@
 ## Currently, the following audio formats are suppored:
 ## *) linear encoding with extension "lin" or "raw", played using
 ##    /dev/dsp 
 ## *) mu-law encoding with extension "mu", "au" or "snd", played
 ##    using /dev/audio 
 ##
 ## `playaudio (X)' plays the audio data contained in the vector X.
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 11 April 1994
+## Adapted-By: jwe
+
 function playaudio (name, ext)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Apr 11, 1994
-  ## Last modified by AW on Nov 7, 1994
-  ## Copyright Dept of Probability Theory and Statistics TU Wien
-
   file = octave_tmp_file_name ();
 
   usage_msg = "playaudio (name [, ext])  or  playaudio (X)";
   
   if (nargin == 1 && is_vector (name) && ! isstr (name)) 
     ## play a vector
     [nr, nc] = size (name);
     if (nc != 1)
diff --git a/scripts/audio/record.m b/scripts/audio/record.m
--- a/scripts/audio/record.m
+++ b/scripts/audio/record.m
@@ -19,21 +19,21 @@
 
 ## usage:  X = record (sec [, sampling_rate])
 ##
 ## Records sec seconds of audio into the vector X.
 ## The default value for the sampling_rate is 8000, ie. 8kHz.
 ## The program waits for you to hit the ENTER key, then the recording
 ## starts immediatly.
 
-function X = record (sec, sampling_rate)
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 19 September 1994
+## Adapted-By: jwe
 
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Sep 19, 1994
-  ## Last modified by AW on Oct 5, 1994
-  ## Copyright Dept of Probability Theory and Statistics TU Wien
+function X = record (sec, sampling_rate)
 
   if (nargin == 1)
     sampling_rate = 8000;
   elseif (nargin != 2)
     usage ("X = record (sec [, sampling_rate])");
   endif
 
   file = octave_tmp_file_name ();
diff --git a/scripts/audio/saveaudio.m b/scripts/audio/saveaudio.m
--- a/scripts/audio/saveaudio.m
+++ b/scripts/audio/saveaudio.m
@@ -24,22 +24,22 @@
 ## written without an inital ".";  default value for ext is "lin". 
 ##
 ## Currently, the following audio formats are supported:
 ## *) mu-law files with extension "mu", "au" or "snd"
 ## *) linearly encoded files with extension "lin" or "raw"
 ## If the data is saved linearly, the bit argument decides whether an
 ## 8-bit (default) or a 16-bit format is used.
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 5 September 1994
+## Adapted-By: jwe
+
 function saveaudio (name, X, ext, bit)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Sep 5, 1994
-  ## Last modified by AW on Oct 29, 1994
-  ## Copyright Dept of Probability Theory and Statistics TU Wien
-
   if (nargin < 2 || nargin > 4)
     usage ("saveaudio (X, name [, ext [, bit]])");
   endif
 
   if (nargin == 2)
     ext = "lin";
   endif
 
diff --git a/scripts/audio/setaudio.m b/scripts/audio/setaudio.m
--- a/scripts/audio/setaudio.m
+++ b/scripts/audio/setaudio.m
@@ -16,22 +16,22 @@
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage: setaudio ([w_type [, value]])
 ##
 ## executes the shell command `mixer [w_type [, value]]'
 
+## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
+## Created: 5 October 1994
+## Adapted-By: jwe
+
 function setaudio (w_type, value)
   
-  ## Written by AW (Andreas.Weingessel@ci.tuwien.ac.at) on Oct 5, 1994
-  ## Updated by AW on Nov 3, 1994
-  ## Copyright Department of Probability Theory and Statistics TU Wien
-
   if (nargin == 0)
     system ("mixer");
   elseif (nargin == 1)
     system (sprintf ("mixer %s", w_type));
   elseif (nargin == 2)
     system (sprintf ("mixer %s %d", w_type, value));
   else
     usage ("setaudio ([w_type [, value]])");
diff --git a/scripts/control/abcddim.m b/scripts/control/abcddim.m
--- a/scripts/control/abcddim.m
+++ b/scripts/control/abcddim.m
@@ -23,19 +23,21 @@
 ## the linear system (a, b, c, d).
 ##
 ## Returns n = number of system states,
 ##         m = number of system inputs,
 ##         p = number of system outputs.
 ##
 ## Returns n = m = p = -1 if the system is not compatible.
 
-function [n, m, p] = abcddim (a, b, c, d)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function [n, m, p] = abcddim (a, b, c, d)
 
   if (nargin != 4)
     error ("usage: abcddim (a, b, c, d)");
   endif
 
   n = m = p = -1;
 
   [an, am] = size(a);
diff --git a/scripts/control/are.m b/scripts/control/are.m
--- a/scripts/control/are.m
+++ b/scripts/control/are.m
@@ -28,19 +28,21 @@
 ##
 ## Solution method: apply Laub's Schur method (IEEE Trans. Auto. Contr,
 ## 1979) to the appropriate Hamiltonian matrix.
 ##
 ## opt is an option passed to the eigenvalue balancing routine default is "B".
 ##
 ## See also: balance
 
-function x = are (a, b, c, opt)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function x = are (a, b, c, opt)
 
   if (nargin == 3 || nargin == 4)
     if (nargin == 4)
       if (! (strcmp (opt, "N") || strcmp (opt, "P") ...
 	     || strcmp (opt, "S") || strcmp (opt, "B") ...
 	     || strcmp (opt, "n") || strcmp (opt, "p") ...
 	     || strcmp (opt, "s") || strcmp (opt, "b")))
 	warning ("are: opt has an invalid value; setting to B");
diff --git a/scripts/control/c2d.m b/scripts/control/c2d.m
--- a/scripts/control/c2d.m
+++ b/scripts/control/c2d.m
@@ -24,20 +24,21 @@
 ##   x = Ac x + Bc u
 ##
 ## into a discrete time equivalent model via the matrix exponential
 ##
 ##   x[n+1] = Ad x[n] + Bd u[n]
 ##
 ## assuming a zero-order hold on the input and sample time T.
 
-function [Ad, Bd] = c2d (Ac, Bc, T)
+## Author: R.B. Tenison <btenison@eng.auburn.edu>
+## Created: October 1993
+## Adapted-By: jwe
 
-  ## Written by R.B. Tenison (btenison@eng.auburn.edu)
-  ## October 1993
+function [Ad, Bd] = c2d (Ac, Bc, T)
 
   ## check args
   if (nargin != 3)
     usage ("c2d (Ac, Bc, T)");
   endif
 
   [ma, na] = size (Ac);
   [mb, nb] = size (Bc);
diff --git a/scripts/control/dare.m b/scripts/control/dare.m
--- a/scripts/control/dare.m
+++ b/scripts/control/dare.m
@@ -39,19 +39,21 @@
 ## Algebraic Riccati Equations," Mathematics of Control, Signals and
 ## Systems, Vol 5, no 2 (1992)  pp 165-194.
 ##
 ## opt is an option passed to the eigenvalue balancing routine default
 ## is "B". 
 ##
 ## See also: balance, are
 
-function x = dare (a, b, c, r, opt)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function x = dare (a, b, c, r, opt)
 
   if (nargin == 4 || nargin == 5)
     if (nargin == 5)
       if (opt != "N" || opt != "P" || opt != "S" || opt != "B")
 	warning ("dare: opt has an invalid value -- setting to B");
 	opt = "B";
       endif
     else
diff --git a/scripts/control/dgram.m b/scripts/control/dgram.m
--- a/scripts/control/dgram.m
+++ b/scripts/control/dgram.m
@@ -19,18 +19,20 @@
 
 ##  Usage: gramian = dgram (A, B)
 ##
 ##  Returns the discrete controllability and observability gramian.
 ##
 ##  dgram (A, B)   returns the discrete controllability gramian.
 ##  dgram (A', C') returns the observability gramian.
 
-function gramian = dgram (A, B)
+## Author: R. Bruce Tenison <btenison@eng.auburn.edu>
+## Created: October 1993
+## Adapted-By: jwe
 
-  ##  Written by R. Bruce Tenison (btenison@eng.auburn.edu)
-  ##  October 1993
+
+function gramian = dgram (A, B)
 
   [U, Sig, V] = svd (B);
 
   gramian = U * dlyap (U'*A*U, Sig*Sig') * U';
 
 endfunction
diff --git a/scripts/control/dlqe.m b/scripts/control/dlqe.m
--- a/scripts/control/dlqe.m
+++ b/scripts/control/dlqe.m
@@ -35,21 +35,22 @@
 ##
 ## Returns:
 ##
 ##   l = observer gain, (A - A L C) is stable
 ##   m = Ricatti equation solution
 ##   p = the estimate error covariance after the measurement update
 ##   e = closed loop poles of (A - A L C)
 
-function [l, m, p, e] = dlqe (a, g, c, sigw, sigv, zz)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+##         R. Bruce Tenison <btenison@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August, 1993.
-  ## Modified for discrete time by R. Bruce Tenison (btenison@eng.auburn.edu)
-  ## October, 1993
+function [l, m, p, e] = dlqe (a, g, c, sigw, sigv, zz)
 
   if (nargin != 5 && nargin != 6)
     error ("dlqe: invalid number of arguments");
   endif
 
   ## The problem is dual to the regulator design, so transform to lqr
   ## call.
 
diff --git a/scripts/control/dlqr.m b/scripts/control/dlqr.m
--- a/scripts/control/dlqr.m
+++ b/scripts/control/dlqr.m
@@ -32,21 +32,22 @@
 ##  J = Sum { x' Q x + u' R u +2 x' Z u}		Z included
 ##
 ## Returns:
 ##
 ##   k = state feedback gain, (A - B K) is stable
 ##   p = solution of algebraic Riccati equation
 ##   e = closed loop poles of (A - B K)
 
-function [k, p, e] = dlqr (a, b, q, r, zz)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+##         R. B. Tenison <btenison@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
-  ## Converted to discrete time by R. B. Tenison
-  ## (btenison@eng.auburn.edu) October 1993
+function [k, p, e] = dlqr (a, b, q, r, zz)
 
   if (nargin != 4 && nargin != 5)
     error ("dlqr: invalid number of arguments");
   endif
 
   ## Check a.
   if ((n = is_square (a)) == 0)
     error ("dlqr: requires 1st parameter(a) to be square");
diff --git a/scripts/control/dlyap.m b/scripts/control/dlyap.m
--- a/scripts/control/dlyap.m
+++ b/scripts/control/dlyap.m
@@ -27,19 +27,21 @@
 ##
 ## or
 ##
 ##  a' x a - x + b' b = 0
 ##
 ## whichever is appropriate.  Uses Schur decomposition as in Kitagawa
 ## (1977).
 
-function x = dlyap (a, b)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function x = dlyap (a, b)
 
   if ((n = is_square (a)) == 0)
     warning ("dlyap: a must be square");
   endif
 
   if ((m = is_square (b)) == 0)
     [n1, m] = size (b);
     if (n1 == n)
diff --git a/scripts/control/is_controllable.m b/scripts/control/is_controllable.m
--- a/scripts/control/is_controllable.m
+++ b/scripts/control/is_controllable.m
@@ -30,19 +30,21 @@
 ## Krylov subspace.
 ##
 ## (FIX ME... The Krylov subspace approach is not done yet!)
 ##                      n-1
 ##   span ([b,a*b,...,a^   b]).
 ##
 ## tol is a roundoff paramter, set to 2*eps if omitted.
 
-function retval = is_controllable (a, b, tol)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August, 1993.
+function retval = is_controllable (a, b, tol)
 
   if (nargin == 2 || nargin == 3)
 
     n = is_square (a);
     [nr, nc] = size (b);
 
     if (n == 0 || n != nr || nc == 0)
       retval = 0;
diff --git a/scripts/control/is_observable.m b/scripts/control/is_observable.m
--- a/scripts/control/is_observable.m
+++ b/scripts/control/is_observable.m
@@ -18,19 +18,21 @@
 ### 02111-1307, USA.
 
 ## usage: is_observable (a, c {,tol})
 ##
 ## Returns 1 if the pair (a, c) is observable, or 0 if not.
 ##
 ## See also: size, rows, columns, length, is_matrix, is_scalar, is_vector.
 
-function retval = is_observable (a,c,tol)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function retval = is_observable (a,c,tol)
 
   if (nargin == 2)
     retval = is_controllable (a', c');
   elseif (nargin == 3)
     retval = is_controllable (a', c', tol);
   else
     usage ("is_observable (a, c {,tol})");
   endif
diff --git a/scripts/control/lqe.m b/scripts/control/lqe.m
--- a/scripts/control/lqe.m
+++ b/scripts/control/lqe.m
@@ -33,19 +33,21 @@
 ## Observer structure is dz/dt = A z + B u + k( y - C z - D u).
 ##
 ## Returns:
 ##
 ##   k = observer gain, (A - K C) is stable
 ##   p = solution of algebraic Riccati equation
 ##   e = closed loop poles of (A - K C)
 
-function [k, p, e] = lqe (a, g, c, sigw, sigv, zz)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August, 1993.
+function [k, p, e] = lqe (a, g, c, sigw, sigv, zz)
 
   if (nargin != 5 && nargin != 6)
     error ("lqe: invalid number of arguments");
   endif
 
   ## The problem is dual to the regulator design, so transform to lqr
   ## call.
 
diff --git a/scripts/control/lqr.m b/scripts/control/lqr.m
--- a/scripts/control/lqr.m
+++ b/scripts/control/lqr.m
@@ -32,19 +32,21 @@
 ##  J = int_0^\infty{ x' Q x + u' R u +2 x' Z u}		Z included
 ##
 ## Returns:
 ##
 ##   k = state feedback gain, (A - B K) is stable
 ##   p = solution of algebraic Riccati equation
 ##   e = closed loop poles of (A - B K)
 
-function [k, p, e] = lqr (a, b, q, r, zz)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function [k, p, e] = lqr (a, b, q, r, zz)
 
   if (nargin != 4 && nargin != 5)
     error ("lqr: invalid number of arguments");
   endif
 
   ## Check a.
   if ((n = is_square (a)) == 0)
     error ("lqr: requires 1st parameter(a) to be square");
diff --git a/scripts/control/lyap.m b/scripts/control/lyap.m
--- a/scripts/control/lyap.m
+++ b/scripts/control/lyap.m
@@ -36,20 +36,21 @@
 ## or
 ##
 ##   a x + x a' + b b' = 0
 ##
 ## whichever is appropriate.
 ##
 ## Solves by using the Bartels-Stewart algorithm (1972).
 
-function x = lyap (a, b, c)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
-  
+function x = lyap (a, b, c)
 
   if (nargin != 3 && nargin != 2)
     usage ("lyap (a, b {,c})");
   endif
 
   if ((n = is_square(a)) == 0)
     error ("lyap: a is not square");
   endif
diff --git a/scripts/control/tzero.m b/scripts/control/tzero.m
--- a/scripts/control/tzero.m
+++ b/scripts/control/tzero.m
@@ -20,19 +20,21 @@
 ## Usage: zr = tzero (a, b, c, d, bal)
 ##
 ## Compute the transmission zeros of a, b, c, d.
 ##
 ## bal = balancing option (see balance); default is "B".
 ##
 ## Needs to incorporate mvzero algorithm to isolate finite zeros.
 
-function zr = tzero (a, b, c, d, bal)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function zr = tzero (a, b, c, d, bal)
 
   if (nargin == 4)
     bal = "B";
   elseif (nargin != 5)
     error ("tzero: invalid number of arguments");
   endif
 
   [n, m, p] = abcddim (a, b, c, d);
diff --git a/scripts/elfun/gcd.m b/scripts/elfun/gcd.m
--- a/scripts/elfun/gcd.m
+++ b/scripts/elfun/gcd.m
@@ -20,19 +20,21 @@
 ## usage: gcd (a, ...)
 ##  
 ## [g [, v]] = gcd (a) returns the greatest common divisor g of the
 ## entries of the integer vector a, and an integer vector v such that
 ## g = v(1) * a(k) + ... + v(k) * a(k).
 ##
 ## [g [, v]] = gcd (a1, ..., ak) is the same with a = [a1, ..., ak].
 
-function [g, v] = gcd (a, ...)
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 16 September 1994
+## Adapted-By: jwe
 
-## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Sep 16, 1994.
+function [g, v] = gcd (a, ...)
 
   if (nargin > 1)
     va_start;
     for k = 2:nargin;
       a = [a, (va_arg ())];
     endfor
   endif
   
diff --git a/scripts/elfun/lcm.m b/scripts/elfun/lcm.m
--- a/scripts/elfun/lcm.m
+++ b/scripts/elfun/lcm.m
@@ -18,21 +18,22 @@
 ### 02111-1307, USA.
 
 ## usage: lcm (a, ...)
 ##
 ## lcm (a) returns the least common multiple of the entries of the
 ## integer vector a.
 ## lcm (a1, ..., ak) is the same as lcm([a1, ..., ak]).
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 16 September 1994
+## Adapted-By: jwe
+
 function l = lcm (a, ...)
 
-## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Sep 16, 1994.
-
-  if (nargin > 1)
     va_start;
     for k = 2:nargin;
       a = [a, (va_arg ())];
     endfor
   endif
   
   if (round (a) != a)
     error ("lcm:  all arguments must be integer");
diff --git a/scripts/general/is_square.m b/scripts/general/is_square.m
--- a/scripts/general/is_square.m
+++ b/scripts/general/is_square.m
@@ -19,19 +19,21 @@
 
 ## usage: is_square (x)
 ##
 ## If x is square, then return value is the dimension of x.
 ## otherwise, returns a value of 0
 ##
 ## See also: size, rows, columns, length, is_matrix, is_scalar, is_vector
 
-function retval = is_square (x)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function retval = is_square (x)
 
   if (nargin == 1)
     [nr, nc] = size (x);
     if (nr == nc) 
       retval = nr;
     else
       retval = 0;
     endif
diff --git a/scripts/general/is_symmetric.m b/scripts/general/is_symmetric.m
--- a/scripts/general/is_symmetric.m
+++ b/scripts/general/is_symmetric.m
@@ -19,19 +19,21 @@
 
 ## Usage: is_symmetric (x {,tol})
 ##
 ## If x is symmetric, return the dimension of x, otherwise, return 0.
 ##
 ## See also: size, rows, columns, length, is_matrix, is_scalar, 
 ## is_square, is_vector
 
-function retval = is_symmetric (x,tol)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function retval = is_symmetric (x,tol)
 
   if (nargin == 1 || nargin == 2)
     if ((retval = is_square (x)))
       if (nargin == 1)
 	tol = eps;
       endif
       if (norm (x - x') / norm(x) > tol)
         retval = 0;
diff --git a/scripts/image/colormap.m b/scripts/image/colormap.m
--- a/scripts/image/colormap.m
+++ b/scripts/image/colormap.m
@@ -24,19 +24,21 @@
 ## intensities respectively.  All entries should be between 0 and 1
 ## inclusive. The new colormap is returned.
 ## 
 ## colormap ("default") restores the default colormap (a gray scale
 ## colormap with 64 entries). The default colormap is returned.
 ## 
 ## colormap with no arguments returns the current colormap.
 
-function cmap = colormap (map)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function cmap = colormap (map)
 
   global CURRENT_COLOR_MAP
 
   if (nargin > 1)
     usage ("colormap (map)");
   endif
 
   if (nargin == 1)
diff --git a/scripts/image/gray.m b/scripts/image/gray.m
--- a/scripts/image/gray.m
+++ b/scripts/image/gray.m
@@ -14,19 +14,21 @@
 ###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## Colormap.
 
-function map = gray (number)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function map = gray (number)
 
   if (nargin == 0)
     number = 64;
   elseif (nargin > 1)
     usage ("gray (number)");
   endif
 
   gr = [0:(number-1)]';
diff --git a/scripts/image/gray2ind.m b/scripts/image/gray2ind.m
--- a/scripts/image/gray2ind.m
+++ b/scripts/image/gray2ind.m
@@ -14,19 +14,21 @@
 ###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## Image format conversion
 
-function [X, map] = gray2ind (I, n)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function [X, map] = gray2ind (I, n)
 
   if (nargin < 1 || nargin > 2)
     usage ("gray2ind (I, n)");
   elseif (nargin == 1)
     n = 64;
   endif
 
   map = gray (n);
diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -22,19 +22,21 @@
 ## image (x) displays a matrix as a color image. The elements of x are
 ## indices into the current colormap and should have values between 1
 ## and the length of the colormap.
 ##
 ## image (x, zoom) changes the zoom factor.  The default value is 4.
 ##
 ## SEE ALSO: imshow, imagesc, colormap.
 
-function image (x, zoom)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function image (x, zoom)
 
   if (nargin == 0)
     ## Load Bobbie Jo Richardson (Born 3/16/94)
     x = loadimage ("default.img");
     zoom = 2;
   elseif (nargin == 1)
     zoom = 4;
   elseif (nargin > 2)
diff --git a/scripts/image/imagesc.m b/scripts/image/imagesc.m
--- a/scripts/image/imagesc.m
+++ b/scripts/image/imagesc.m
@@ -22,19 +22,21 @@
 ## imagesc(x) displays a scaled version of the matrix x.  The matrix is
 ## scaled so that its entries are indices into the current colormap.
 ## The scaled matrix is returned.
 ##
 ## imagesc (x, zoom) sets the magnification, the default value is 4.
 ##
 ## SEE ALSO: image, imshow
 
-function x = imagesc (x, zoom)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function x = imagesc (x, zoom)
 
   if (nargin < 1 || nargin > 2)
     usage ("image (matrix, [zoom])");
   elseif (nargin == 1)
     zoom = 4;
   endif
 
   [ high, wide ] = size (x);
diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -24,19 +24,21 @@
 ## imshow (X, map) displays an indexed image using the specified colormap.
 ##
 ## imshow (I, n) displays a gray scale intensity image.
 ##
 ## imshow (R, G, B) displays an RGB image.
 ##
 ## SEE ALSO: image, imagesc, colormap, gray2ind, rgb2ind.
 
-function imshow (a1, a2, a3)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function imshow (a1, a2, a3)
 
   if (nargin < 0 || nargin > 3)
     usage ("imshow (args)");
   elseif (nargin == 2)
     if (length (a2) == 1)
       [a1, a2] = gray2ind (a1, a2);
     endif
     colormap (a2);
diff --git a/scripts/image/ind2gray.m b/scripts/image/ind2gray.m
--- a/scripts/image/ind2gray.m
+++ b/scripts/image/ind2gray.m
@@ -23,19 +23,21 @@
 ## image.  The current colormap is used to determine the intensities.
 ## The intensity values lie between 0 and 1 inclusive.
 ##
 ## Y = ind2gray (X, map) uses the specified colormap instead of the
 ## current one in the conversion process.
 ##
 ## SEE ALSO: gray2ind, rgb2ntsc, image, colormap
 
-function Y = ind2gray (X, map)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function Y = ind2gray (X, map)
 
   if (nargin < 1 || nargin > 2)
     usage ("ind2gray (X, map)");
   elseif (nargin == 1)
     map = colormap ();
   endif
 
   ## Convert colormap to intensity values.
diff --git a/scripts/image/ind2rgb.m b/scripts/image/ind2rgb.m
--- a/scripts/image/ind2rgb.m
+++ b/scripts/image/ind2rgb.m
@@ -20,19 +20,21 @@
 ## Convert an indexed image to red, green, and blue color components.
 ##
 ## [R G B] = ind2rgb(X) uses the current colormap for the conversion.
 ##
 ## [R G B] = ind2rgb(X,map) uses the specified colormap.
 ##
 ## SEE ALSO: rgb2ind, image, imshow, ind2gray, gray2ind.
 
-function [R, G, B] = ind2rgb (X, map)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function [R, G, B] = ind2rgb (X, map)
 
   if (nargin < 1 || nargin > 2)
     usage ("ind2rgb (X, map)");
   elseif (nargin == 1)
     map = colormap ();
   endif
 
   [hi, wi] = size (X);
diff --git a/scripts/image/loadimage.m b/scripts/image/loadimage.m
--- a/scripts/image/loadimage.m
+++ b/scripts/image/loadimage.m
@@ -20,19 +20,21 @@
 ## Load an image file.
 ##
 ## [X, map] = loadimage (img_file) loads an image and it's associated
 ## color map from file img_file.  The image must be in stored in
 ## octave's image format.
 ##
 ## SEE ALSO: saveimage, load, save
 
-function [X, map] = loadimage (filename)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function [X, map] = loadimage (filename)
 
   if (nargin != 1)
     usage ("loadimage (filename)");
   elseif (! isstr (filename))
     error ("loadimage: expecting filename as a string");
   endif
 
   file = file_in_path (IMAGEPATH, filename);
diff --git a/scripts/image/ntsc2rgb.m b/scripts/image/ntsc2rgb.m
--- a/scripts/image/ntsc2rgb.m
+++ b/scripts/image/ntsc2rgb.m
@@ -14,19 +14,21 @@
 ###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## Image format conversion.
 
-function rgb = ntsc2rgb (yiq)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function rgb = ntsc2rgb (yiq)
 
   if (nargin != 1)
     usage ("ntsc2rgb (yiq)");
   endif
 
   trans = [ 1.0,      1.0,      1.0;
             0.95617, -0.27269, -1.10374;
             0.62143, -0.64681, 1.70062 ];
diff --git a/scripts/image/ocean.m b/scripts/image/ocean.m
--- a/scripts/image/ocean.m
+++ b/scripts/image/ocean.m
@@ -14,19 +14,21 @@
 ###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## Colormap.
 
-function map = ocean (number)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function map = ocean (number)
 
   if (nargin == 0)
     number = 64;
   elseif (nargin == 1)
     if (! is_scalar (number))
       error ("ocean: argument must be a scalar");
     endif
   else
diff --git a/scripts/image/rgb2ind.m b/scripts/image/rgb2ind.m
--- a/scripts/image/rgb2ind.m
+++ b/scripts/image/rgb2ind.m
@@ -20,19 +20,21 @@
 ## Convert and RGB image to an octave indexed image.
 ##
 ## [X, map] = rgb2ind (R, G, B)
 ##
 ## SEE ALSO: ind2rgb, rgb2ntsc.
 ##
 ## Bugs: The color map may have duplicate entries.
 
-function [X, map] = rgb2ind (R, G, B)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function [X, map] = rgb2ind (R, G, B)
 
   if (nargin != 3)
     usage ("[X, map] = rgb2ind (R, G, B)");
   endif
 
   if (size (R) != size (G) || size (R) != size (B))
     error ("rgb2ind: arguments must all have the same size");
   endif
diff --git a/scripts/image/rgb2ntsc.m b/scripts/image/rgb2ntsc.m
--- a/scripts/image/rgb2ntsc.m
+++ b/scripts/image/rgb2ntsc.m
@@ -14,19 +14,21 @@
 ###
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## Image format conversion.
 
-function yiq = rgb2ntsc (rgb)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+function yiq = rgb2ntsc (rgb)
 
   if (nargin != 1)
     usage ("rgb2ntsc (rgb)");
   endif
 
   trans = [ 0.299,  0.596,  0.211;
             0.587, -0.274, -0.523;
             0.114, -0.322,  0.312 ];
diff --git a/scripts/image/saveimage.m b/scripts/image/saveimage.m
--- a/scripts/image/saveimage.m
+++ b/scripts/image/saveimage.m
@@ -47,35 +47,37 @@
 ##   George Phillips <phillips@cs.ubc.ca>
 ##   Department of Computer Science
 ##   University of British Columbia
 ##
 ## and is part of the portable bitmap utilities,
 ##
 ## SEE ALSO: loadimage, save, load, colormap
 
-function saveimage (filename, img, img_form, map)
-
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) July 1994.
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: July 1994
+## Adapted-By: jwe
 
-  ## Rewritten by jwe to avoid using octoppm and pbm routines so that
-  ## people who don't have the the pbm stuff installed can still use this
-  ## function. 
-  ##
-  ## The conversion to PostScript is based on pnmtops.c, which is part of
-  ## the portable bitmap utilties and bears this copyright notice:
-  ##
-  ## Copyright (C) 1989 by Jef Poskanzer.
-  ##
-  ## Permission to use, copy, modify, and distribute this software and its
-  ## documentation for any purpose and without fee is hereby granted, provided
-  ## that the above copyright notice appear in all copies and that both that
-  ## copyright notice and this permission notice appear in supporting
-  ## documentation.  This software is provided "as is" without express or
-  ## implied warranty.
+## Rewritten by jwe to avoid using octoppm and pbm routines so that
+## people who don't have the the pbm stuff installed can still use this
+## function. 
+##
+## The conversion to PostScript is based on pnmtops.c, which is part of
+## the portable bitmap utilties and bears this copyright notice:
+##
+## Copyright (C) 1989 by Jef Poskanzer.
+##
+## Permission to use, copy, modify, and distribute this software and its
+## documentation for any purpose and without fee is hereby granted, provided
+## that the above copyright notice appear in all copies and that both that
+## copyright notice and this permission notice appear in supporting
+## documentation.  This software is provided "as is" without express or
+## implied warranty.
+
+function saveimage (filename, img, img_form, map)
 
   if (nargin < 2 || nargin > 4)
     usage ("saveimage (filename, matrix, [format, [colormap]])");
   endif
 
   if (nargin < 4)
     map = colormap ();
   endif
diff --git a/scripts/linear-algebra/kron.m b/scripts/linear-algebra/kron.m
--- a/scripts/linear-algebra/kron.m
+++ b/scripts/linear-algebra/kron.m
@@ -19,19 +19,21 @@
 
 ## Usage: x = kron (a, b)
 ##
 ## Form the Kronecker product of two matrices, defined block by block
 ## as 
 ##
 ##   x = [a(i,j) b]
 
-function x = kron (a, b)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function x = kron (a, b)
 
   if (nargin == 2)
 
     [m, n] = size (b);
     [ma, na] = size (a);
 
     ## Do 1st column.
 
diff --git a/scripts/linear-algebra/null.m b/scripts/linear-algebra/null.m
--- a/scripts/linear-algebra/null.m
+++ b/scripts/linear-algebra/null.m
@@ -22,19 +22,21 @@
 ##
 ## Returns an orthonormal basis of the null space of A.
 ##
 ## The dimension of the null space is taken as the number of singular
 ## values of A not greater than tol;  the default for tol is
 ## max (size (A)) * sigma_max (A) * eps, where sigma_max (A) is the
 ## maximal singular value of A. 
 
-function retval = null (A, tol)
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 24 December 1993.
+## Adapted-By: jwe
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Dec 24, 1993.
+function retval = null (A, tol)
 
   [U, S, V] = svd (A);
 
   [rows, cols] = size (A);
 
   [S_nr, S_nc] = size (S);
 
   if (S_nr == 1 || S_nc == 1)
diff --git a/scripts/linear-algebra/orth.m b/scripts/linear-algebra/orth.m
--- a/scripts/linear-algebra/orth.m
+++ b/scripts/linear-algebra/orth.m
@@ -22,19 +22,21 @@
 ##
 ## Returns an orthonormal basis of the range of A.
 ##
 ## The dimension of the range space is taken as the number of singular
 ## values of A greater than tol; the default for tol is
 ## max (size (A)) * sigma_max (A) * eps, where sigma_max (A) is the
 ## maximal singular value of A.
 
-function retval = orth (A, tol)
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 24 December 1993.
+## Adapted-By: jwe
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Dec 24, 1993.
+function retval = orth (A, tol)
 
   [U, S, V] = svd (A);
 
   [rows, cols] = size (A);
 
   [S_nr, S_nc] = size (S);
 
   if (S_nr == 1 || S_nc == 1)
diff --git a/scripts/linear-algebra/qzhess.m b/scripts/linear-algebra/qzhess.m
--- a/scripts/linear-algebra/qzhess.m
+++ b/scripts/linear-algebra/qzhess.m
@@ -25,19 +25,21 @@
 ##
 ##   aa = q*a*z and bb = q*b*z, with q, z orthogonal, and
 ##   v = matrix of generalized eigenvectors.
 ##
 ## This ought to be done in a compiled program
 ##
 ## Algorithm taken from Golub and Van Loan, Matrix Computations, 2nd ed.
 
-function [aa, bb, q, z] = qzhess (a, b)
+## Author: A. S. Hodel <scotte@eng.auburn.edu>
+## Created: August 1993
+## Adapted-By: jwe
 
-  ## Written by A. S. Hodel (scotte@eng.auburn.edu) August 1993.
+function [aa, bb, q, z] = qzhess (a, b)
 
   if (nargin != 2)
     error ("usage: [aa, bb, q, z] = qzhess (a, b)");
   endif
 
   [na, ma] = size (a);
   [nb, mb] = size (b);
   if (na != ma || na != nb || nb != mb)
diff --git a/scripts/plot/bottom_title.m b/scripts/plot/bottom_title.m
--- a/scripts/plot/bottom_title.m
+++ b/scripts/plot/bottom_title.m
@@ -21,19 +21,20 @@
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 ##
 ## makes a title with the given text at the bottom of the plot 
 ## rather than the top.
 ##
 
-function bottom_title (text)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU
+function bottom_title (text)
 
   if (! gnuplot_has_multiplot)
     error ("bottom_title: gnuplot does not appear to support this feature");
   endif
     
   if (nargin != 1)
     usage ("bottom_title (text)");
   endif
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -25,20 +25,20 @@
 ## multiplot version of gnuplot to plot multiple plots per page.
 ## This plot version automatically updates the plot position to
 ## next plot position after making the plot in the given subplot
 ## position.
 ##
 ## See command plot() for the various options to this command
 ## as this is just mulitplot version of the same command.
 
-function mplot (...)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Adapted-By: jwe
 
-
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU
+function mplot (...)
 
   if (! gnuplot_has_multiplot)
     error ("mplot: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
   global multiplot_mode
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -23,19 +23,21 @@
 ##
 ## If multiplot(0,0) then it will close multiplot mode and and if
 ## arguments are non-zero, then it will set up multiplot mode with
 ## xn,yn subplots along x and y axes. 
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 
-function multiplot (xn, yn)
+## Author: Vinayak Dutt, Dutt.Vinayak@mayo.EDU
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function multiplot (xn, yn)
 
   if (! gnuplot_has_multiplot)
     error ("multiplot: gnuplot does not appear to support this feature");
   endif
     
   ## global variables to keep track of multiplot options
 
   global multiplot_mode
diff --git a/scripts/plot/oneplot.m b/scripts/plot/oneplot.m
--- a/scripts/plot/oneplot.m
+++ b/scripts/plot/oneplot.m
@@ -20,19 +20,21 @@
 ## usage: oneplot 
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 ##
 ## Switches from multiplot (if in  multiplot mode) to single plot
 ## mode
 
-function oneplot ()
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function oneplot ()
 
   if (! gnuplot_has_multiplot)
     error ("oneplot: gnuplot does not appear to support this feature");
   endif
     
   global multiplot_mode
 
   set nomultiplot;
diff --git a/scripts/plot/plot_border.m b/scripts/plot/plot_border.m
--- a/scripts/plot/plot_border.m
+++ b/scripts/plot/plot_border.m
@@ -31,19 +31,21 @@
 ##    "all",   "ALL", "a", "A",   ---> All borders displayed
 ##  "north", "NORTH", "n", "N",   ---> North Border
 ##  "south", "SOUTH", "s", "S",   ---> South Border
 ##   "east",  "EAST", "e", "E",   --->  East Border
 ##   "west",  "WEST", "w", "W",   --->  West Border
 ##
 ## Without any arguments, turns borders off.
 
-function plot_border (...)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function plot_border (...)
 
   if (! gnuplot_has_multiplot)
     error ("plot_border: gnuplot does not appear to support this feature");
   endif
     
   south = 0;
   west = 0;
   north = 0;
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -48,19 +48,20 @@
 ##   |        |       |       |        |
 ##   -----------------------------------
 ##   |        |       |       |        |
 ##   |    5   |    6  |    7  |    8   |
 ##   |        |       |       |        |
 ##   -----------------------------------
 ##
 
-function subplot (rows, columns, index)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU
+function subplot (rows, columns, index)
 
   if (! gnuplot_has_multiplot)
     error ("subplot: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
   global multiplot_mode 
diff --git a/scripts/plot/subwindow.m b/scripts/plot/subwindow.m
--- a/scripts/plot/subwindow.m
+++ b/scripts/plot/subwindow.m
@@ -21,19 +21,21 @@
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 ##
 ## Sets subwindow position in multiplot mode for next plot. The
 ## multiplot mode has to be previously initialized using multiplot()
 ## command, else this command just becomes an aliad to multiplot()
 
-function subwindow (xn, yn)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function subwindow (xn, yn)
 
   if (! gnuplot_has_multiplot)
     error ("subwindow: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
   global multiplot_mode 
diff --git a/scripts/plot/top_title.m b/scripts/plot/top_title.m
--- a/scripts/plot/top_title.m
+++ b/scripts/plot/top_title.m
@@ -19,19 +19,21 @@
 
 ## usage: top_title (text)
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 ##
 ## makes a title with text "text" at the top of the plot 
 
-function top_title (text)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function top_title (text)
 
   if (! gnuplot_has_multiplot)
     error ("top_title: gnuplot does not appear to support this feature");
   endif
 
   if (nargin != 1)
     usage ("top_title (text)");
   endif
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -19,19 +19,21 @@
 
 ## usage: zlabel (text)
 ##
 ## Defines a label for the z-axis of a plot.  The label will appear the
 ## next time a plot is displayed.
 ##
 ## See other plotting commands also.
 
-function zlabel (text)
+## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
+## Created: 3 July 95
+## Adapted-By: jwe
 
-  ## Written by Vinayak Dutt, Dutt.Vinayak@mayo.EDU  3 Jul 95 
+function zlabel (text)
 
   if (nargin != 1)
     usage ("zlabel (text)");
   endif
 
   if (isstr (text))
     eval (sprintf ("set zlabel \"%s\"", text));
   else
diff --git a/scripts/polynomial/compan.m b/scripts/polynomial/compan.m
--- a/scripts/polynomial/compan.m
+++ b/scripts/polynomial/compan.m
@@ -37,19 +37,21 @@
 ##        |       .            .           .    .             .      |
 ##        |_      0            0      ...       1             0     _|
 ##
 ## The eigenvalues of the companion matrix are equal to the roots of the
 ## polynomial.
 ##
 ## SEE ALSO: poly, roots, residue, conv, deconv, polyval, polyderiv, polyinteg
 
-function A = compan (c)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function A = compan (c)
 
   if (nargin != 1)
     usage ("compan (vector)");
   endif
 
   if(is_matrix (c))
     error("compan: expecting a vector argument.");
   endif
diff --git a/scripts/polynomial/conv.m b/scripts/polynomial/conv.m
--- a/scripts/polynomial/conv.m
+++ b/scripts/polynomial/conv.m
@@ -24,20 +24,22 @@
 ## y = conv (a, b) returns a vector of length equal to length (a) +
 ## length (b) -1.
 ##
 ## If a and b are polynomial coefficient vectors, conv returns the
 ## coefficients of the product polynomial.
 ##
 ## SEE ALSO: deconv, poly, roots, residue, polyval, polyderiv, polyinteg 
 
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
+
 function y = conv (a, b)
   
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
-
   if (nargin != 2)
     usage ("conv(a, b)");
   endif
 
   if (is_matrix (a) || is_matrix (b))
     error("conv: both arguments must be vectors");
   endif
 
diff --git a/scripts/polynomial/deconv.m b/scripts/polynomial/deconv.m
--- a/scripts/polynomial/deconv.m
+++ b/scripts/polynomial/deconv.m
@@ -26,19 +26,21 @@
 ##
 ## If y and a are polynomial coefficient vectors, b will contain the
 ## coefficients of the polynomial quotient and r will be a remander
 ## polynomial of lowest order.
 ##
 ## SEE ALSO: conv, poly, roots, residue, polyval, polyderiv,
 ## polyinteg 
 
-function [b, r] = deconv (y, a)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function [b, r] = deconv (y, a)
 
   if (nargin != 2)
     usage ("deconv (y, a)");
   endif
 
   if (is_matrix (y) || is_matrix (a))
     error("conv: both arguments must be vectors");
   endif
diff --git a/scripts/polynomial/poly.m b/scripts/polynomial/poly.m
--- a/scripts/polynomial/poly.m
+++ b/scripts/polynomial/poly.m
@@ -21,19 +21,21 @@
 ##
 ## If A is a square n-by-n matrix, poly (A) is the row vector of 
 ## the coefficients of det (z * eye(n) - A), the characteristic
 ## polynomial of A.
 ##
 ## If x is a vector, poly (x) is a vector of coefficients of the
 ## polynomial whose roots are the elements of x.
 
-function y = poly (x)
+## Author: KH <Kurt.Hornik@neuro.tuwien.ac.at>
+## Created: 24 December 1993
+## Adapted-By: jwe
 
-  ## Written by KH (Kurt.Hornik@neuro.tuwien.ac.at) Dec 24, 1993.
+function y = poly (x)
 
   if (nargin != 1)
     usage ("poly (x)");
   endif
 
   m = min (size (x));
   n = max (size (x));
   if (m == 0)
diff --git a/scripts/polynomial/polyderiv.m b/scripts/polynomial/polyderiv.m
--- a/scripts/polynomial/polyderiv.m
+++ b/scripts/polynomial/polyderiv.m
@@ -20,19 +20,21 @@
 ## usage: polyderiv (p)
 ##
 ## Returns the coefficients of the derivative of the polynomial whose
 ## coefficients are given by vector p.
 ##
 ## SEE ALSO: poly, polyinteg, polyreduce, roots, conv, deconv, residue,
 ##           filter, polyval, polyvalm
 
-function q = polyderiv (p)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function q = polyderiv (p)
 
   if (nargin != 1)
     usage ("polyderiv (vector)");
   endif
 
   if (is_matrix (p))
     error ("argument must be a vector");
   endif
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -18,21 +18,23 @@
 ### 02111-1307, USA.
 
 ## usage:  polyfit (x, y, n)
 ##
 ## Returns the coefficients of a polynomial p(x) of degree n that
 ## minimizes sumsq (p(x(i)) - y(i)), i.e., that best fits the data 
 ## in the least squares sense.
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 13 December 1994
+## Adapted-By: jwe
+
 function p = polyfit (x, y, n)
   
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Dec 13, 1994
-  ## Copyright Dept of Statistics and Probability Theory TU Wien
-  
+ 
   if (nargin != 3)
     usage ("polyfit (x, y, n)");
   endif
   
   if (! (is_vector (x) && is_vector (y) && size (x) == size (y)))
     error ("polyfit: x and y must be vectors of the same size");
   endif
   
diff --git a/scripts/polynomial/polyinteg.m b/scripts/polynomial/polyinteg.m
--- a/scripts/polynomial/polyinteg.m
+++ b/scripts/polynomial/polyinteg.m
@@ -22,19 +22,21 @@
 ## Returns the coefficients of the integral the polynomial whose coefficients
 ## are represented by the vector p.
 ##
 ## The constant of integration is zero.
 ##
 ## SEE ALSO: poly, polyderiv, polyreduce, roots, conv, deconv, residue,
 ##           filter, polyval, polyvalm
 
-function p = polyinteg (p)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function p = polyinteg (p)
 
   if(nargin != 1)
     usage ("polyinteg (vector)");
   endif
 
   if (is_matrix (p))
     error ("argument must be a vector");
   endif
diff --git a/scripts/polynomial/polyreduce.m b/scripts/polynomial/polyreduce.m
--- a/scripts/polynomial/polyreduce.m
+++ b/scripts/polynomial/polyreduce.m
@@ -20,19 +20,21 @@
 ## usage: polyreduce(c)
 ##
 ## Reduces a polynomial coefficient vector to a minimum number of terms,
 ## i.e. it strips off any leading zeros.
 ##
 ## SEE ALSO: poly, roots, conv, deconv, residue, filter, polyval, polyvalm,
 ##           polyderiv, polyinteg
 
-function p = polyreduce (p)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function p = polyreduce (p)
 
   index = find (p == 0);
 
   if (length (index) != 0)
 
     index = find (index == 1:length (index));
 
     if (length (index) != 0)
diff --git a/scripts/polynomial/polyval.m b/scripts/polynomial/polyval.m
--- a/scripts/polynomial/polyval.m
+++ b/scripts/polynomial/polyval.m
@@ -30,19 +30,21 @@
 ## polyval(c,x) will evaluate the polynomial at the specified value of x.
 ## 
 ## If x is a vector or matrix, the polynomial is evaluated at each of the
 ## elements of x.
 ## 
 ## SEE ALSO: polyvalm, poly, roots, conv, deconv, residue, filter,
 ##           polyderiv, polyinteg
 
-function y = polyval (c, x)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function y = polyval (c, x)
 
   if (nargin != 2)
     usage ("polyval (c, x)");
   endif
 
   if(is_matrix (c))
     error ("poly: first argument must be a vector.");
   endif
diff --git a/scripts/polynomial/polyvalm.m b/scripts/polynomial/polyvalm.m
--- a/scripts/polynomial/polyvalm.m
+++ b/scripts/polynomial/polyvalm.m
@@ -31,19 +31,21 @@
 ## multiplication is used instead of element by element multiplication as is
 ## used in polyval.
 ##
 ## X must be a square matrix.
 ##
 ## SEE ALSO: polyval, poly, roots, conv, deconv, residue, filter,
 ##           polyderiv, polyinteg
 
-function y = polyvalm (c, x)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function y = polyvalm (c, x)
 
   if(nargin != 2)
     usage ("polyvalm (c, x)");
   endif
 
   if (is_matrix (c))
     error("poly: first argument must be a vector.");
   endif
diff --git a/scripts/polynomial/residue.m b/scripts/polynomial/residue.m
--- a/scripts/polynomial/residue.m
+++ b/scripts/polynomial/residue.m
@@ -57,19 +57,21 @@
 ##  which implies the following partial fraction expansion
 ##
 ##        s^2 + s + 1         -2       7        3
 ##    ------------------- = ----- + ------- + -----
 ##    s^3 - 5s^2 + 8s - 4   (s-2)   (s-2)^2   (s-1)
 ##
 ## SEE ALSO: poly, roots, conv, deconv, polyval, polyderiv, polyinteg
 
-function [r, p, k, e] = residue (b, a, toler)
+## Author: Tony Richardson <amr@mpl.ucsd.edu>
+## Created: June 1994
+## Adapted-By: jwe
 
-  ## Written by Tony Richardson (amr@mpl.ucsd.edu) June 1994.
+function [r, p, k, e] = residue (b, a, toler)
 
   ## Here's the method used to find the residues.
   ## The partial fraction expansion can be written as:
   ##
   ##
   ##   P(s)    D   M(k)      A(k,m)
   ##   ---- =  #    #    -------------
   ##   Q(s)   k=1  m=1   (s - pr(k))^m
diff --git a/scripts/polynomial/roots.m b/scripts/polynomial/roots.m
--- a/scripts/polynomial/roots.m
+++ b/scripts/polynomial/roots.m
@@ -17,21 +17,22 @@
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage: roots (v)
 ##
 ## For a vector v with n components, return the roots of the
 ## polynomial v(1) * z^(n-1) + ... + v(n-1) * z + v(n).
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 24 December 1993
+## Adapted-By: jwe
+
 function r = roots (v)
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Dec 24, 1993
-  ## Updated by KH on Nov 25, 1994
-  
   if (min (size (v)) > 1 || nargin != 1)
     usage ("roots (v), where v is a vector");
   endif
   
   n = length (v);
   v = reshape (v, 1, n);  
 
   ## If v = [ 0 ... 0 v(k+1) ... v(k+l) 0 ... 0 ], we can remove the
diff --git a/scripts/signal/fftconv.m b/scripts/signal/fftconv.m
--- a/scripts/signal/fftconv.m
+++ b/scripts/signal/fftconv.m
@@ -22,20 +22,22 @@
 ## c = fftconv (a, b) returns the convolution of the vectors a and b,
 ## a vector with length equal to length (a) + length (b) - 1.  
 ## If a and b are the coefficient vectors of two polynomials, c is
 ## the coefficient vector of the product polynomial.
 ##
 ## The computation uses the FFT by calling fftfilt.  If the optional
 ## argument N is specified, an N-point FFT is used.
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 3 September 1994
+## Adapted-By: jwe
+
 function c = fftconv (a, b, N)
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Sep 3, 1994.
-  
   if (nargin < 2 || nargin > 3)
     usage ("fftconv (b, x [, N])");
   endif
   
   if (is_matrix (a) || is_matrix (b))
     error ("fftconv:  both a and b should be vectors");
   endif
   la = length (a);
diff --git a/scripts/signal/fftfilt.m b/scripts/signal/fftfilt.m
--- a/scripts/signal/fftfilt.m
+++ b/scripts/signal/fftfilt.m
@@ -17,24 +17,26 @@
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage:  fftfilt (b, x [, N])
 ##
 ## y = fftfilt (b, x) filters x with the FIR filter b using the FFT.
 ## y = fftfilt (b, x, N) uses the overlap-add method to filter x with
 ## b using an N-point FFT.
+##
+## Reference:  Oppenheim & Schafer (1989).  Discrete-time Signal
+## Processing (Chapter 8).  Prentice-Hall.
+
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 3 September 1994
+## Adapted-By: jwe
 
 function y = fftfilt (b, x, N)
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Sep 3, 1994
-
-  ## Reference:  Oppenheim & Schafer (1989).  Discrete-time Signal
-  ## Processing (Chapter 8).  Prentice-Hall.
-
   ## If N is not specified explicitly, we do not use the overlap-add 
   ## method at all because loops are really slow.  Otherwise, we only
   ## ensure that the number of points in the FFT is the smallest power
   ## of two larger than N and length(b).  This could result in length
   ## one blocks, but if the user knows better ...
   
   if (nargin < 2 || nargin > 3)
     usage (" fftfilt (b, x [, N])");
diff --git a/scripts/specfun/beta.m b/scripts/specfun/beta.m
--- a/scripts/specfun/beta.m
+++ b/scripts/specfun/beta.m
@@ -17,20 +17,22 @@
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage: beta (a, b)
 ##
 ## Returns the beta function beta(a,b) = gamma(a) * gamma(b) / gamma(a+b)
 ## of a and b.
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 13 June 1993
+## Adapted-By: jwe
+
 function retval = beta (a, b)
   
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Jun 13, 1993
-
   if (nargin != 2)
     usage ("beta (a, b)");
   endif
 
   retval = exp (lgamma (a) + lgamma (b) - lgamma (a+b));
 
 endfunction
 
diff --git a/scripts/specfun/betai.m b/scripts/specfun/betai.m
--- a/scripts/specfun/betai.m
+++ b/scripts/specfun/betai.m
@@ -19,20 +19,22 @@
 
 ## usage: betai (a, b, x)
 ##
 ## Returns the incomplete beta function
 ##   betai (a, b, x) = BETA(a,b)^(-1) INT_0^x t^(a-1) (1-t)^(b-1) dt.
 ## If x has more than one component, both a and b must be scalars.
 ## If x is a scalar, a and b must be of compatible dimensions.
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 2 August 1994.
+## Adapted-By: jwe
+
 function y = betai (a, b, x)
   
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Aug 2, 1994.
-
   ## Computation is based on the series expansion
   ##   betai(a, b, x) 
   ##     = \frac{1}{B(a, b)} x^a 
   ##         \sum_{k=0}^\infty \frac{(1-b)\cdots(k-b)}{a+k} \frac{x^k}{k!}
   ## for x <= 1/2.  For x > 1/2, betai(a, b, x) = 1 - betai(b, a, 1-x).
 
   if (nargin <> 3)
     usage (" betai (a, b, x)");
diff --git a/scripts/specfun/gammai.m b/scripts/specfun/gammai.m
--- a/scripts/specfun/gammai.m
+++ b/scripts/specfun/gammai.m
@@ -25,20 +25,22 @@
 ##     = (integral from 0 to x of exp(-t) t^(a-1) dt) / gamma(a).
 ##
 ## If a is scalar, then gammai(a, x) is returned for each element of x
 ## and vice versa.
 ##
 ## If neither a nor x is scalar, the sizes of a and x must agree, and
 ## gammai is applied pointwise.
 
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 13 August 1994
+## Adapted-By: jwe
+
 function y = gammai (a, x)
   
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Aug 13, 1994
-
   if (nargin != 2)
     usage ("gammai (a, x)");
   endif
   
   [r_a, c_a] = size (a);
   [r_x, c_x] = size (x);
   e_a = r_a * c_a;
   e_x = r_x * c_x;
diff --git a/scripts/statistics/corrcoef.m b/scripts/statistics/corrcoef.m
--- a/scripts/statistics/corrcoef.m
+++ b/scripts/statistics/corrcoef.m
@@ -19,20 +19,21 @@
 
 ## usage: corrcoef (X [, Y])
 ##
 ## If each row of X and Y is an observation and each column is a variable,
 ## the (i,j)-th entry of corrcoef(X, Y) is the correlation between the
 ## i-th variable in X and the j-th variable in Y.
 ## corrcoef(X) is corrcoef(X, X).
 
-function retval = corrcoef (X, Y)
+## Author: Kurt Hornik <hornik@ci.tuwien.ac.at>
+## Created: March 1993
+## Adapted-By: jwe
 
-  ## Written by Kurt Hornik (hornik@ci.tuwien.ac.at) March 1993.
-  ## Dept of Probability Theory and Statistics TU Wien, Austria.
+function retval = corrcoef (X, Y)
 
   if (nargin < 1 || nargin > 2)
     usage ("corrcoef (X [, Y])");
   endif
 
   if (nargin == 2)
     C = cov (X, Y);
     S = std (X)' * std (Y);
diff --git a/scripts/statistics/cov.m b/scripts/statistics/cov.m
--- a/scripts/statistics/cov.m
+++ b/scripts/statistics/cov.m
@@ -19,20 +19,21 @@
 
 ## usage: cov (X [, Y])
 ##
 ## If each row of X and Y is an observation and each column is a
 ## variable, the (i,j)-th entry of cov(X, Y) is the covariance
 ## between the i-th variable in X and the j-th variable in Y.
 ## cov(X) is cov(X, X).
 
-function retval = cov (X, Y)
+## Author: Kurt Hornik <hornik@ci.tuwien.ac.at>
+## Created: March 1993
+## Adapted-By: jwe
 
-  ## Written by Kurt Hornik (hornik@ci.tuwien.ac.at) March 1993.
-  ## Dept of Probability Theory and Statistics TU Wien, Austria.
+function retval = cov (X, Y)
 
   if (nargin < 1 || nargin > 2)
     usage ("cov (X [, Y])");
   endif
 
   [Tx, kx] = size (X);
   if (nargin == 2)
     [Ty, ky] = size (Y);
diff --git a/scripts/statistics/gls.m b/scripts/statistics/gls.m
--- a/scripts/statistics/gls.m
+++ b/scripts/statistics/gls.m
@@ -28,21 +28,22 @@
 ##      B ...  k x p
 ##      E ...  T x p
 ##      O ... Tp x Tp.
 ##
 ## BETA is the GLS estimator for B.
 ## v is the GLS estimator for s^2.
 ## R = Y - X*BETA is the matrix of GLS residuals.
 
+## Author: Teresa Twaroch <twaroch@ci.tuwien.ac.at>
+## Created: May 1993
+## Adapted-By: jwe
+
 function [BETA, v, R] = gls (Y, X, O)
   
-  ## Written by Teresa Twaroch (twaroch@ci.tuwien.ac.at) May 1993.
-  ## Dept of Probability Theory and Statistics TU Wien, Austria.
-
   if (nargin != 3)
     usage ("[BETA, v [, R]] = gls (Y, X, O)");
   endif
 
   [rx, cx] = size (X);
   [ry, cy] = size (Y);
   if (rx != ry)
     error ("gls: incorrect matrix dimensions");  
diff --git a/scripts/statistics/kurtosis.m b/scripts/statistics/kurtosis.m
--- a/scripts/statistics/kurtosis.m
+++ b/scripts/statistics/kurtosis.m
@@ -23,19 +23,21 @@
 ##
 ##   kurtosis(x) = N^(-1) std(x)^(-4) SUM_i (x(i)-mean(x))^4 - 3
 ##
 ## of x.
 ##
 ## If x is a matrix, return a row vector containing the kurtosis for each
 ## column.
 
-function retval = kurtosis (x)
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 29 July 1994
+## Adapted-By: jwe
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Jul 29, 1994.
+function retval = kurtosis (x)
 
   if (nargin != 1)
     usage ("kurtosis (x)");
   endif
 
   if (is_vector (x))
     x = x - mean (x);
     if (! any (x))
diff --git a/scripts/statistics/mahalanobis.m b/scripts/statistics/mahalanobis.m
--- a/scripts/statistics/mahalanobis.m
+++ b/scripts/statistics/mahalanobis.m
@@ -18,20 +18,21 @@
 ### 02111-1307, USA.
 
 ## usage: mahalanobis (X, Y)
 ##
 ## Returns Mahalanobis' D-square distance between the multivariate
 ## samples X and Y, which must have the same number of components
 ## (columns), but may have a different number of observations (rows).
 
-function retval = mahalanobis (X, Y)
+## Author: Friedrich Leisch <leisch@ci.tuwien.ac.at>
+## Created: July 1993
+## Adapted-By: jwe
 
-  ## Written by Friedrich Leisch (leisch@ci.tuwien.ac.at) July 1993.
-  ## Dept of Probability Theory and Statistics TU Wien, Austria.
+function retval = mahalanobis (X, Y)
 
   if (nargin != 2)
     usage ("mahalanobis (X, Y)");
   endif
 
   [xr, xc] = size (X);
   [yr, yc] = size (Y);
 
diff --git a/scripts/statistics/ols.m b/scripts/statistics/ols.m
--- a/scripts/statistics/ols.m
+++ b/scripts/statistics/ols.m
@@ -34,20 +34,21 @@
 ##
 ## where pinv(X) denotes the pseudoinverse of X.
 ## SIGMA is the OLS estimator for the matrix S, i.e.
 ##
 ##   SIGMA = (Y - X*BETA)'*(Y - X*BETA) / (T - rank(X)).
 ##
 ## R = Y - X*BETA is the matrix of OLS residuals.
 
-function [BETA, SIGMA, R] = ols (Y, X)
+## Author: Teresa Twaroch <twaroch@ci.tuwien.ac.at>
+## Created: May 1993
+## Adapted-By: jwe
 
-  ## Written by Teresa Twaroch (twaroch@ci.tuwien.ac.at) May 1993.
-  ## Dept of Probability Theory and Statistics TU Wien, Austria.
+function [BETA, SIGMA, R] = ols (Y, X)
 
   if (nargin != 2)
     error("usage : [BETA, SIGMA [, R]] = ols (Y, X)");
   endif
 
   [nr, nc] = size (X);
   [ry, cy] = size (Y);
   if (nr != ry)
diff --git a/scripts/statistics/skewness.m b/scripts/statistics/skewness.m
--- a/scripts/statistics/skewness.m
+++ b/scripts/statistics/skewness.m
@@ -23,19 +23,21 @@
 ##
 ##   skewness (x) = N^(-1) std(x)^(-3) SUM_i (x(i)-mean(x))^3
 ##
 ## of x.
 ##
 ## If x is a matrix, return a row vector containing the skewness for each
 ## column.
 
-function retval = skewness (x)
+## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 29 July 1994
+## Adapted-By: jwe
 
-  ## Written by KH (Kurt.Hornik@ci.tuwien.ac.at) on Jul 29, 1994.
+function retval = skewness (x)
 
   if (nargin != 1)
     usage ("skewness (x)");
   endif
 
   if (is_vector (x))
     x = x - mean (x);
     if (! any (x))
diff --git a/scripts/strings/strrep.m b/scripts/strings/strrep.m
--- a/scripts/strings/strrep.m
+++ b/scripts/strings/strrep.m
@@ -17,21 +17,22 @@
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA.
 
 ## usage:  strrep (s, x, y)
 ##
 ## Replace all occurences of the substring x of the string s with the
 ## string y.
 
+## Author: Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at>
+## Created: 11 November 1994
+## Adapted-By: jwe
+
 function t = strrep (s, x, y)
   
-## Written by Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at> on 1994/10/11
-  ## Updated by Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at> on 1996/05/25  
-  
   if (nargin <> 3)
     usage ("strrep (s, x, y)");
   endif
   
   if (! (isstr (s) && isstr (x) && isstr (y)))
     error ("strrep: all arguments must be strings");
   endif
   
