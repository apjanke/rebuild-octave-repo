# HG changeset patch
# User Rik <rik@octave.org>
# Date 1411444014 25200
#      Mon Sep 22 20:46:54 2014 -0700
# Node ID 0f9c5a15c8faa5f06ce482188e33134d01609b22
# Parent  e09318118fd6190cd9e3f2be99dcf5d1462f8e4c
doc: Periodic grammarcheck of documentation.

* doc/interpreter/contrib.txi, doc/interpreter/expr.txi,
doc/interpreter/func.txi, doc/interpreter/linalg.txi, doc/interpreter/plot.txi,
libinterp/corefcn/data.cc, libinterp/corefcn/debug.cc,
libinterp/corefcn/graphics.cc, libinterp/corefcn/help.cc,
libinterp/corefcn/load-save.cc, libinterp/corefcn/profiler.cc,
libinterp/corefcn/syscalls.cc, libinterp/corefcn/utils.cc,
libinterp/corefcn/variables.cc, libinterp/dldfcn/__init_fltk__.cc,
scripts/general/deal.m, scripts/help/__gripe_missing_component__.m,
scripts/miscellaneous/desktop.m, scripts/pkg/private/default_prefix.m,
scripts/plot/appearance/__getlegenddata__.m, scripts/plot/util/pan.m,
scripts/plot/util/rotate.m, scripts/plot/util/rotate3d.m,
scripts/plot/util/zoom.m, scripts/signal/periodogram.m,
scripts/specfun/factor.m, scripts/specfun/primes.m,
scripts/statistics/base/lscov.m, scripts/testfun/private/compare_plot_demos.m,
scripts/testfun/private/dump_demos.m,
scripts/testfun/private/html_compare_plot_demos.m, scripts/testfun/test.m:
Periodic grammarcheck of documentation.

diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -193,16 +193,17 @@ feel about what commits are being based 
 
 All Octave's sources are distributed under the GNU General Public License
 (GPL).  Currently, Octave uses GPL version 3.  For details about this
 license, see @url{http://www.gnu.org/licenses/gpl.html}.  Therefore,
 whenever you create a new source file, it should have the following
 comment header (use appropriate year, name and comment marks):
 
 @example
+@group
 ## Copyright (C) 1996-2013 John W. Eaton <jwe@@octave.org>
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or
 ## (at your option) any later version.
@@ -210,16 +211,17 @@ comment header (use appropriate year, na
 ## Octave is distributed in the hope that it will be useful, but
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not,
 ## see <http://www.gnu.org/licenses/>.
+@end group
 @end example
 
 Always include commit messages in changesets.  After making your source
 changes, record and briefly describe the changes in your commit message.
 You should have previously configured your @file{.hgrc} (or
 @file{Mercurial.ini} on Windows) with your name and email, which will
 be automatically added to your commit message.  Your commit message
 should have a brief one-line explanation of what the commit does.  If you
diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -1238,18 +1238,20 @@ is evaluated as
 
 @noindent
 where @var{op} can be either @code{+}, @code{-}, @code{*}, or @code{/},
 as long as @var{expr2} is a simple expression with no side effects.  If
 @var{expr2} also contains an assignment operator, then this expression
 is evaluated as
 
 @example
+@group
 @var{temp} = @var{expr2}
 @var{expr1} = (@var{expr1}) @var{op} @var{temp}
+@end group
 @end example
 
 @noindent
 where @var{temp} is a placeholder temporary value storing the computed
 result of evaluating @var{expr2}.  So, the expression
 
 @example
 a *= b+1
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -1401,17 +1401,18 @@ f = inline ("x^2 + 2");
 @end example
 
 @noindent
 After this it is possible to evaluate @math{f} at any @math{x} by
 writing @code{f(x)}.
 
 @strong{Caution}: @sc{matlab} has begun the process of deprecating inline
 functions.  At some point in the future support will be dropped and eventually
-Octave will follow @sc{matlab} and also remove inline functions.  Use anonymous functions in all new code.
+Octave will follow @sc{matlab} and also remove inline functions.  Use anonymous
+functions in all new code.
 
 @DOCSTRING(inline)
 
 @DOCSTRING(argnames)
 
 @DOCSTRING(formula)
 
 @DOCSTRING(symvar)
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -24,17 +24,17 @@ This chapter documents the linear algebr
 Reference material for many of these functions may be found in
 @nospell{Golub and Van Loan}, @cite{Matrix Computations, 2nd Ed.},
 Johns Hopkins, 1989, and in the @cite{@sc{lapack} Users' Guide}, SIAM, 1992.
 The @cite{@sc{lapack} Users' Guide} is available at:
 @cite{http://www.netlib.org/lapack/lug/}
 
 A common text for engineering courses is @nospell{G. Strang},
 @cite{Linear Algebra and Its Applications, 4th Edition}. It has become a
-widespread reference for linear algebra. An alternative is P. Lax
+widespread reference for linear algebra.  An alternative is P. Lax
 @cite{Linear Algebra and Its Applications}, and also is a good choice.  It
 claims to be suitable for high school students with substantial mathematical
 interests as well as first-year undergraduates.
 
 @menu
 * Techniques Used for Linear Algebra::
 * Basic Matrix Functions::
 * Matrix Factorizations::
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -1468,16 +1468,17 @@ Handle to graphics object of current axe
 
 @item currentpoint
 An 1-by-2 matrix which holds the coordinates of the point over which
 the mouse pointer was when a mouse event occurred.  The x and y
 coordinates are in units defined by the figures @qcode{"units"} property
 and their origin is the lower left corner of the plotting area.
 
 Events which sets @qcode{"currentpoint"} are
+
 @table @asis
 @item A mouse button was pressed
 always
 
 @item A mouse button was released
 only if the figures callback @qcode{"windowbuttonupfcn"} is defined
 
 @item The pointer was moved while pressing mouse button (drag)
@@ -1583,16 +1584,17 @@ Indicates the orientation for printing. 
 @item selected
 
 @item selectionhighlight
 --- Values: @qcode{"on"}, @qcode{"off"}
 
 @item selectiontype
 Holds information about the last mouse button press within the figure.
 May be one of
+
 @table @asis
 @item @qcode{"normal"}
 Left mouse button click.
 
 @item @qcode{"extend"}
 Shift + left mouse button click.
 
 @item @qcode{"alternate"}
@@ -1713,17 +1715,17 @@ Either @qcode{"manual"} or @qcode{"auto"
 
 @item createfcn
 
 @item currentpoint
 An 2-by-3 matrix @code{[xf, yf, zf; xb, yb, zb]} which holds the
 coordinates of the point over which the mouse pointer was when the
 mouse button was pressed in axes data units.  If a mouse callback
 function is defined, @qcode{"currentpoint"} holds the pointer
-coordinates at the time the mouse button was pressed.  For 3D plots,
+coordinates at the time the mouse button was pressed.  For 3-D plots,
 the first row of the returned matrix specifies the point nearest to
 the current camera position and the second rows the furthest point.
 The two points forms a line which is perpendicular to the screen.
 
 @item dataaspectratio
 A two-element vector specifying the relative height and width of the
 data displayed in the axes.  Setting @code{dataaspectratio} to @samp{1,
 2]} causes the length of one unit as displayed on the y-axis to be the
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -2596,17 +2596,17 @@ do_permute (const octave_value_list& arg
 DEFUN (permute, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} permute (@var{A}, @var{perm})\n\
 Return the generalized transpose for an N-D array object @var{A}.\n\
 The permutation vector @var{perm} must contain the elements\n\
 @code{1:ndims (A)} (in any order, but each element must appear only once).\n\
 \n\
 The @var{N}th dimension of @var{A} gets remapped to dimension \n\
-@code{@var{PERM}(@var{N})}.  For example,\n\
+@code{@var{PERM}(@var{N})}.  For example:\n\
 \n\
 @example\n\
 @group\n\
 @var{x} = zeros ([2, 3, 5, 7]);\n\
 size (@var{x})\n\
    @result{}  2   3   5   7\n\
 \n\
 size (permute (@var{x}, [2, 1, 3, 4]))\n\
diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -628,19 +628,19 @@ intmap_to_ov (const bp_table::intmap& li
 
   retval.resize (dim_vector (1, idx));
 
   return retval;
 }
 
 DEFUN (dbstop, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {Command} dbstop @var{func}\n\
-@deftypefnx {Command} dbstop @var{func} @var{line}\n\
-@deftypefnx {Command} dbstop @var{func} @var{line1} @var{line2} @dots{}\n\
+@deftypefn  {Command} {} dbstop @var{func}\n\
+@deftypefnx {Command} {} dbstop @var{func} @var{line}\n\
+@deftypefnx {Command} {} dbstop @var{func} @var{line1} @var{line2} @dots{}\n\
 @deftypefnx {Command} {} dbstop @var{line} @dots{}\n\
 @deftypefnx {Built-in Function} {@var{rline} =} dbstop (\"@var{func}\")\n\
 @deftypefnx {Built-in Function} {@var{rline} =} dbstop (\"@var{func}\", @var{line})\n\
 @deftypefnx {Built-in Function} {@var{rline} =} dbstop (\"@var{func}\", @var{line1}, @var{line2}, @dots{})\n\
 @deftypefnx {Built-in Function} {} dbstop (\"@var{func}\", [@var{line1}, @dots{}])\n\
 @deftypefnx {Built-in Function} {} dbstop (@var{line}, @dots{})\n\
 Set a breakpoint at line number @var{line} in function @var{func}.\n\
 \n\
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9438,17 +9438,17 @@ is_handle_visible (const octave_value& v
         }
     }
 
   return retval;
 }
 
 DEFUN (__is_handle_visible__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} __is_handle_visible__ (@var{h})\n\
+@deftypefn {Built-in Function} {} __is_handle_visible__ (@var{h})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = is_handle_visible (args(0));
   else
diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -1168,41 +1168,41 @@ The format is a string which is one of @
   return retval;
 }
 
 // Return a cell array of strings containing the names of all
 // operators.
 
 DEFUN (__operators__, , ,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __operators__ ()\n\
+@deftypefn {Function File} {} __operators__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   return octave_value (Cell (names (operators_map)));
 }
 
 // Return a cell array of strings containing the names of all
 // keywords.
 
 DEFUN (__keywords__, , ,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __keywords__ ()\n\
+@deftypefn {Function File} {} __keywords__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   return octave_value (Cell (names (keywords_map)));
 }
 
 // Return a cell array of strings containing the names of all builtin
 // functions.
 
 DEFUN (__builtins__, , ,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __builtins__ ()\n\
+@deftypefn {Function File} {} __builtins__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   const string_vector bif = symbol_table::built_in_function_names ();
 
   return octave_value (Cell (bif));
 }
 
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -1475,25 +1475,24 @@ DEFUN (save, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Command} {} save file\n\
 @deftypefnx {Command} {} save options file\n\
 @deftypefnx {Command} {} save options file @var{v1} @var{v2} @dots{}\n\
 @deftypefnx {Command} {} save options file -struct @var{STRUCT} @var{f1} @var{f2} @dots{}\n\
 @deftypefnx {Command} {} {@var{s} =} save @samp{-} @var{v1} @var{v2} @dots{}\n\
 Save the named variables @var{v1}, @var{v2}, @dots{}, in the file\n\
 @var{file}.  The special filename @samp{-} may be used to return the\n\
-content of the variables as a string.  If no variable names are listed, Octave saves\n\
-all the variables in the current scope.  Otherwise, full variable names or\n\
-pattern syntax can be used to specify the variables to save.\n\
-If the @option{-struct} modifier is used, fields @var{f1} @var{f2} @dots{}\n\
-of the scalar structure @var{STRUCT} are saved as if they were variables\n\
-with corresponding names.\n\
-Valid options for the @code{save} command are listed in the following table.\n\
-Options that modify the output format override the format specified by\n\
-@code{save_default_options}.\n\
+content of the variables as a string.  If no variable names are listed,\n\
+Octave saves all the variables in the current scope.  Otherwise, full\n\
+variable names or pattern syntax can be used to specify the variables to\n\
+save.  If the @option{-struct} modifier is used, fields @var{f1} @var{f2}\n\
+@dots{} of the scalar structure @var{STRUCT} are saved as if they were\n\
+variables with corresponding names.  Valid options for the @code{save}\n\
+command are listed in the following table.  Options that modify the output\n\
+format override the format specified by @code{save_default_options}.\n\
 \n\
 If save is invoked using the functional form\n\
 \n\
 @example\n\
 save (\"-option1\", @dots{}, \"file\", \"v1\", @dots{})\n\
 @end example\n\
 \n\
 @noindent\n\
diff --git a/libinterp/corefcn/profiler.cc b/libinterp/corefcn/profiler.cc
--- a/libinterp/corefcn/profiler.cc
+++ b/libinterp/corefcn/profiler.cc
@@ -414,17 +414,17 @@ profile_data_accumulator::add_current_ti
   active_fcn->add_time (t - last_time);
 }
 
 profile_data_accumulator profiler;
 
 // Enable or disable the profiler data collection.
 DEFUN (__profiler_enable__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __profiler_enable__ ()\n\
+@deftypefn {Function File} {} __profiler_enable__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   const int nargin = args.length ();
   if (nargin > 0)
     {
@@ -440,17 +440,17 @@ Undocumented internal function.\n\
   retval(0) = profiler.is_active ();
 
   return retval;
 }
 
 // Clear all collected profiling data.
 DEFUN (__profiler_reset__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __profiler_reset__ ()\n\
+@deftypefn {Function File} {} __profiler_reset__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
 
   if (nargin > 0)
     warning ("profiler_reset: ignoring extra arguments");
@@ -458,17 +458,17 @@ Undocumented internal function.\n\
   profiler.reset ();
 
   return retval;
 }
 
 // Query the timings collected by the profiler.
 DEFUN (__profiler_data__, args, nargout,
        "-*- texinfo -*-\n\
-@deftypefn {Function File} __profiler_data__ ()\n\
+@deftypefn {Function File} {} __profiler_data__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
   const int nargin = args.length ();
 
   if (nargin > 0)
     warning ("profiler_data: ignoring extra arguments");
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -1876,17 +1876,17 @@ synchronous I/O.\n\
 #else
   error ("O_SYNC: not available on this system");
   return octave_value ();
 #endif
 }
 
 DEFUNX ("O_TRUNC", FO_TRUNC, args, ,
         "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} O_TRUNC ()\n\
+@deftypefn {Built-in Function} {} O_TRUNC ()\n\
 Return the numerical value of the file status flag that may be\n\
 returned by @code{fcntl} to indicate that if file exists, it should\n\
 be truncated when writing.\n\
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_WRONLY}\n\
 @end deftypefn")
 {
 #if defined (O_TRUNC)
   return const_value (args, O_TRUNC);
diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1514,25 +1514,27 @@ octave_preserve_stream_state::~octave_pr
   stream.flags (oflags);
   stream.precision (oprecision);
   stream.width (owidth);
   stream.fill (ofill);
 }
 
 DEFUN (isstudent, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} isstudent ()\n\
-Return true if running in the student edition of Matlab.\n\
-Always return false in Octave.\n\
+@deftypefn {Built-in Function} {} isstudent ()\n\
+Return true if running in the student edition of @sc{matlab}.\n\
+\n\
+@code{isstudent} always returns false in Octave.\n\
 \n\
 @seealso{false}\n\
 @end deftypefn")
 {
   if (args.length () != 0)
     print_usage ();
 
   return octave_value (false);
 }
 
 /*
-%!assert (isstudent (), false);
-%!error isstudent (1);
+%!assert (isstudent (), false)
+
+%!error isstudent (1)
 */
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -561,17 +561,18 @@ Check only for built-in functions.\n\
 \n\
 @item @qcode{\"dir\"}\n\
 Check only for directories.\n\
 \n\
 @item @qcode{\"file\"}\n\
 Check only for files and directories.\n\
 \n\
 @item @qcode{\"class\"}\n\
-Check only for classes.  (Note: This option is accepted, but not currently implemented)\n\
+Check only for classes.  (Note: This option is accepted, but not currently\n\
+implemented)\n\
 @end table\n\
 \n\
 If no type is given, and there are multiple possible matches for name,\n\
 @code{exist} will return a code according to the following priority list:\n\
 variable, built-in function, oct-file, directory, file, class. \n\
 \n\
 @code{exist} returns 2 if a regular file called @var{name} is present in\n\
 Octave's search path.  If you want information about other types of files\n\
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -2226,17 +2226,17 @@ private:
   octave_value_list input_event_hook_fcn_id;
 };
 
 #endif
 
 DEFUN_DLD (__fltk_check__, , ,
            "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __fltk_check__ ()\n\
-Undocumented internal function. Calls Fl::check ()\n\
+Undocumented internal function.  Calls Fl::check ()\n\
 @end deftypefn")
 {
 #ifdef HAVE_FLTK
   Fl::check ();
 #else
   error ("__fltk_check__: not available without OpenGL and FLTK libraries");
 #endif
 
diff --git a/scripts/general/deal.m b/scripts/general/deal.m
--- a/scripts/general/deal.m
+++ b/scripts/general/deal.m
@@ -53,27 +53,27 @@
 ##
 ## @example
 ## a = b = c = x;
 ## @end example
 ##
 ## Programming Note: @code{deal} is often used with comma separated lists
 ## derived from cell arrays or structures.  This is unnecessary as the
 ## interpreter can perform the same action without the overhead of a function
-## call.  For example,
+## call.  For example:
 ##
 ## @example
 ## @group
 ## c = @{[1 2], "Three", 4@};
 ## [x, y, z ] = c@{:@}
 ## @result{}
 ##    x =
-##    
+##
 ##       1   2
-##    
+##
 ##    y = Three
 ##    z =  4
 ## @end group
 ## @end example
 ## @seealso{cell2struct, struct2cell, repmat}
 ## @end deftypefn
 
 ## Author: Ariel Tankus
diff --git a/scripts/help/__gripe_missing_component__.m b/scripts/help/__gripe_missing_component__.m
--- a/scripts/help/__gripe_missing_component__.m
+++ b/scripts/help/__gripe_missing_component__.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} __gripe_missing_component__ (@var{caller}, @var{component})
+## @deftypefn {Function File} {} __gripe_missing_component__ (@var{caller}, @var{component})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function __gripe_missing_component__ (caller, component)
 
   if (nargin != 2)
     print_usage ();
   endif
diff --git a/scripts/miscellaneous/desktop.m b/scripts/miscellaneous/desktop.m
--- a/scripts/miscellaneous/desktop.m
+++ b/scripts/miscellaneous/desktop.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} @var{used} = desktop ("-inuse")
+## @deftypefn {Function File} {@var{used} =} desktop ("-inuse")
 ## Return true if the desktop (GUI) is currently in use.
 ## @seealso{isguirunning}
 ## @end deftypefn
 
 function retval = desktop (arg)
 
   if (nargin == 0)
     if (isguirunning ())
diff --git a/scripts/pkg/private/default_prefix.m b/scripts/pkg/private/default_prefix.m
--- a/scripts/pkg/private/default_prefix.m
+++ b/scripts/pkg/private/default_prefix.m
@@ -12,18 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{prefix}, @var{archprefix} =} @
-## default_prefix (@var{global_install})
+## @deftypefn {Function File} {[@var{prefix}, @var{archprefix} =} default_prefix (@var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [prefix, archprefix] = default_prefix (global_install, desc)
   if (global_install)
     prefix = fullfile (OCTAVE_HOME (), "share", "octave", "packages");
     if (nargin == 2)
       archprefix = fullfile (octave_config_info ("libdir"), "octave",
diff --git a/scripts/plot/appearance/__getlegenddata__.m b/scripts/plot/appearance/__getlegenddata__.m
--- a/scripts/plot/appearance/__getlegenddata__.m
+++ b/scripts/plot/appearance/__getlegenddata__.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{hplots}, @var{strings}]} = __getlegenddata__ (@var{h})
+## @deftypefn {Function File} {[@var{hplots}, @var{strings}] =} __getlegenddata__ (@var{h})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [hplots, text_strings] = __getlegenddata__ (hlegend)
 
   hplots = [];
   text_strings = {};
   ca = getfield (get (hlegend, "userdata"), "handle");
diff --git a/scripts/plot/util/pan.m b/scripts/plot/util/pan.m
--- a/scripts/plot/util/pan.m
+++ b/scripts/plot/util/pan.m
@@ -34,16 +34,17 @@
 ## @qcode{"xon"} limits panning to the x-axis, @qcode{"yon"} to the
 ## y-axis.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axis rather than the current axes returned by @code{gca}.
 ##
 ## To query the current mode use the @code{get}
 ## function.  For example:
+##
 ## @example
 ## mode = get (gca, "pan");
 ## @end example
 ## @seealso{rotate3d, zoom}
 ## @end deftypefn
 
 function pan (varargin)
 
diff --git a/scripts/plot/util/rotate.m b/scripts/plot/util/rotate.m
--- a/scripts/plot/util/rotate.m
+++ b/scripts/plot/util/rotate.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} rotate (@var{h}, @var{dir}, @var{alpha})
+## @deftypefn  {Function File} {} rotate (@var{h}, @var{dir}, @var{alpha})
 ## @deftypefnx {Function File} {} rotate (@dots{}, @var{origin})
 ## Rotate the plot object @var{h} through @var{alpha} degrees around
 ## the line with direction @var{dir} and origin @var{origin}.
 ##
 ## The default value of @var{origin} is the center of the axes
 ## object that is the parent of @var{h}.
 ##
 ## If @var{h} is a vector of handles, they must all have the same
diff --git a/scripts/plot/util/rotate3d.m b/scripts/plot/util/rotate3d.m
--- a/scripts/plot/util/rotate3d.m
+++ b/scripts/plot/util/rotate3d.m
@@ -16,25 +16,26 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Command} {} rotate3d
 ## @deftypefnx {Command} {} rotate3d on
 ## @deftypefnx {Command} {} rotate3d off
 ## @deftypefnx {Function File} {} rotate3d (@var{hax}, @dots{})
-## Control 3D rotation mode of interactive graph in GUI.
+## Control 3-D rotation mode of interactive graph in GUI.
 ##
 ## The function state input may be either @qcode{"on"} or @qcode{"off"}
-## and can only be set for 3D plots.
+## and can only be set for 3-D plots.
 ##
 ## If the first argument @var{hax} is an axes handle, then operate on
 ## this axis rather than the current axes returned by @code{gca}.
 ##
 ## To query the current mode use the @code{get} function.  For example:
+##
 ## @example
 ## mode = get (gca, "rotate3d");
 ## @end example
 ## @seealso{pan, zoom}
 ## @end deftypefn
 
 function rotate3d (varargin)
 
diff --git a/scripts/plot/util/zoom.m b/scripts/plot/util/zoom.m
--- a/scripts/plot/util/zoom.m
+++ b/scripts/plot/util/zoom.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Command} {} zoom (@var{factor})
+## @deftypefn  {Command} {} zoom (@var{factor})
 ## @deftypefnx {Command} {} zoom out
 ## @deftypefnx {Command} {} zoom reset
 ## Zoom the current axes object.
 ##
 ## Given a numeric argument greater than zero, zoom by the given factor.
 ## If the zoom factor is greater than one, zoom in on the plot.  If the
 ## factor is less than one, zoom out.
 ##
diff --git a/scripts/signal/periodogram.m b/scripts/signal/periodogram.m
--- a/scripts/signal/periodogram.m
+++ b/scripts/signal/periodogram.m
@@ -50,17 +50,17 @@
 ## than the length of the input then @var{x} will be zero-padded to the length
 ## of @var{nfft}.
 ##
 ## @item Fs
 ## sampling rate.  The default is 1.
 ##
 ## @item range
 ## range of spectrum.  @qcode{"@nospell{onesided}"} computes spectrum from
-## [0..nfft/2+1]. @qcode{"@nospell{twosided}"} computes spectrum from
+## [0..nfft/2+1].  @qcode{"@nospell{twosided}"} computes spectrum from
 ## [0..nfft-1].
 ## @end table
 ##
 ## The optional second output @var{w} are the normalized angular frequencies.
 ## For a one-sided calculation @var{w} is in the range [0, pi] if @var{nfft}
 ## is even and [0, pi) if @var{nfft} is odd.  Similarly, for a two-sided
 ## calculation @var{w} is in the range [0, 2*pi] or [0, 2*pi) depending on
 ## @var{nfft}.
diff --git a/scripts/specfun/factor.m b/scripts/specfun/factor.m
--- a/scripts/specfun/factor.m
+++ b/scripts/specfun/factor.m
@@ -23,17 +23,17 @@
 ##
 ## The prime factorization is defined as @code{prod (@var{pf}) == @var{q}}
 ## where every element of @var{pf} is a prime number.  If @code{@var{q} == 1},
 ## return 1.
 ##
 ## With two output arguments, return the unique prime factors @var{pf} and
 ## their multiplicities.  That is, @code{prod (@var{pf} .^ @var{n}) == @var{q}}.
 ## 
-## Implementation Note: The input @var{q} must be less than than
+## Implementation Note: The input @var{q} must be less than
 ## @code{bitmax} (9.0072e+15) in order to factor correctly.
 ## @seealso{gcd, lcm, isprime, primes}
 ## @end deftypefn
 
 ## Author: Paul Kienzle
 
 ## 2002-01-28 Paul Kienzle
 ## * remove recursion; only check existing primes for multiplicity > 1
diff --git a/scripts/specfun/primes.m b/scripts/specfun/primes.m
--- a/scripts/specfun/primes.m
+++ b/scripts/specfun/primes.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} primes (@var{n})
 ## Return all primes up to @var{n}.
 ##
 ## The output data class (double, single, uint32, etc.) is the same as
 ## the input class of @var{n}.  The algorithm used is the Sieve of
-## Eratosthenes.    
+## Eratosthenes.
 ##
 ## Notes: If you need a specific number of primes you can use the
 ## fact that the distance from one prime to the next is, on average,
 ## proportional to the logarithm of the prime.  Integrating, one finds
 ## that there are about @math{k} primes less than
 ## @tex
 ## $k \log (5 k)$.
 ## @end tex
diff --git a/scripts/statistics/base/lscov.m b/scripts/statistics/base/lscov.m
--- a/scripts/statistics/base/lscov.m
+++ b/scripts/statistics/base/lscov.m
@@ -24,30 +24,31 @@
 ## where the noise @var{w} is assumed to follow a normal distribution 
 ## with covariance matrix @math{{\sigma^2} V}.
 ##
 ## If the size of the coefficient matrix @var{A} is n-by-p, the
 ## size of the vector/array of constant terms @var{b} must be n-by-k.
 ##
 ## The optional input argument @var{V} may be a n-by-1 vector of positive
 ## weights (inverse variances), or a n-by-n symmetric positive
-## semidefinite matrix representing the covariance of @var{b}. If
+## semidefinite matrix representing the covariance of @var{b}.  If
 ## @var{V} is not supplied, the ordinary least squares solution is
 ## returned.
 ##
 ## The @var{alg} input argument, a guidance on solution method to use,
 ## is currently ignored.
 ##
 ## Besides the least-squares estimate matrix @var{x} (p-by-k), the
-## function also returns @var{stdx} (p-by-k), the error  standard
+## function also returns @var{stdx} (p-by-k), the error standard
 ## deviation of estimated @var{x}; @var{mse} (k-by-1), the estimated
 ## data error covariance scale factors (@math{\sigma^2}); and @var{S}
 ## (p-by-p, or p-by-p-by-k if k > 1), the error covariance of @var{x}.
 ##
-## Reference: Golub and Van Loan (1996), Matrix Computations (3rd Ed.), Johns Hopkins, Section 5.6.3
+## Reference: Golub and Van Loan (1996), Matrix Computations (3rd Ed.), Johns
+## Hopkins, Section 5.6.3
 ##
 ## @end deftypefn
 ## @seealso{ols, gls, lsqnonneg}
 
 ## Author: Nir Krakauer
 
 function [x, stdx, mse, S] = lscov (A, b, V = [], alg)
 
diff --git a/scripts/testfun/private/compare_plot_demos.m b/scripts/testfun/private/compare_plot_demos.m
--- a/scripts/testfun/private/compare_plot_demos.m
+++ b/scripts/testfun/private/compare_plot_demos.m
@@ -19,17 +19,17 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} compare_plot_demos ()
 ## @deftypefnx {Function File} {} compare_plot_demos ("toolkits", @{@var{toolkit1}, @var{toolkit2}, @dots{}@})
 ##
 ## Uses @code{dump_demos} and @code{html_compare_plot_demos} to produce an
 ## html comparison of the plot demos for each of Octave's graphics toolkits.
 ##
 ## An m-file named @file{dump_plots.m} will be created in the current working
-## directory. This function will be used to render and save the plot demo
+## directory.  This function will be used to render and save the plot demo
 ## images.
 ##
 ## If they do not already exist, directories for each available graphics
 ## toolkit are created.  Each toolkit's directory will be populated with images
 ## of each plot demo in the png format.
 ##
 ## Finally, an html document named @file{compare_plot_demos.html} is produced.
 ## This page places each toolkit's images side by side for a convenient
diff --git a/scripts/testfun/private/dump_demos.m b/scripts/testfun/private/dump_demos.m
--- a/scripts/testfun/private/dump_demos.m
+++ b/scripts/testfun/private/dump_demos.m
@@ -26,20 +26,22 @@
 ## graphical output, whose renderings are saved with the specified format,
 ## @var{fmt}.
 ##
 ## The defaults for each input are;
 ##
 ## @table @var
 ##   @item @var{dirs}
 ##   @code{@{"plot/appearance", "plot/draw", "plot/util", "image"@}}
+##
 ##   @item @var{mfile}
-##   @code{"dump.m"}
+##   @qcode{"dump.m"}
+##
 ##   @item @var{fmt}
-##   @code{"png"}
+##   @qcode{"png"}
 ## @end table
 ##
 ## For example, to produce PNG output for all demos of the functions
 ## in the plot directory;
 ##
 ## @example
 ## dump_demos plot dump.m png
 ## @end example
diff --git a/scripts/testfun/private/html_compare_plot_demos.m b/scripts/testfun/private/html_compare_plot_demos.m
--- a/scripts/testfun/private/html_compare_plot_demos.m
+++ b/scripts/testfun/private/html_compare_plot_demos.m
@@ -23,20 +23,23 @@
 ## Produces an html document to compare the plot demos produced by
 ## @var{toolkits}.
 ##
 ## Valid property names, and their defaults, are:
 ##
 ## @table @samp
 ##   @item fmt
 ##   @code{"png"}
+##
 ##   @item output
 ##   @code{"compare_plot_demos.html"}
+##
 ##   @item template
 ##   @code{"html_plot_demos_template.html"}
+##
 ##   @item column_width
 ##   @code{600}
 ## @end table
 ##
 ## The template parameter refers to a specially formatted html file
 ## which accompanies this m-file script.
 ##
 ## Additional toolkit description can be added to the column header
diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -27,18 +27,19 @@
 ## @deftypefnx {Function File} {} test ([], "explain", @var{fid})
 ## @deftypefnx {Function File} {} test ([], "explain", @var{fname})
 ##
 ## Perform built-in self-tests from the first file in the loadpath matching
 ## @var{name}.
 ##
 ## @code{test} can be called in either command or functional form.  The exact
 ## operation of test is determined by a combination of mode (interactive or
-## batch), reporting level ("quiet", "normal", "verbose"), and whether a
-## logfile or summary output variable is used.
+## batch), reporting level (@qcode{"quiet"}, @qcode{"normal"},
+## @qcode{"verbose"}), and whether a logfile or summary output variable is
+## used.
 ##
 ## The default mode when @code{test} is called from the command line is
 ## interactive.  In this mode, tests will be run until the first error is
 ## encountered, or all tests complete successfully.  In batch mode, all tests
 ## are run regardless of any failures, and the results are collected for
 ## reporting.  Tests which require user interaction, i.e., demo blocks,
 ## are never run in batch mode.
 ##
