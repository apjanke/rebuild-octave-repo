# HG changeset patch
# User jwe
# Date 846717356 0
#      Wed Oct 30 23:15:56 1996 +0000
# Node ID c196b6a780b3f37855c2e099751dccc2bb0fb68b
# Parent  31d5588dbb61c4d4c87af5432d4cc4379960fe5d
[project @ 1996-10-30 23:15:55 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,12 @@
 Wed Oct 30 01:04:13 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* configure.in: Default is now no internal bounds checking.
+
 	* Makefile.in (all): Fix message to say 2.7.2, not 2.7.0.
 
 	* config.h.bot (GCC_ATTR_NORETURN): Rename from NORETURN.
 	(GCC_ATTR_UNUSED): Rename from GCC_ATTRIBUTE_UNUSED.
 	(NPOS): Define if using gcc 2.8.x or later.
 
 	* octMakefile.in (DIRS_TO_MAKE): Add localarchlibdir to list.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.221 $)
+AC_REVISION($Revision: 1.222 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -191,17 +191,17 @@ if $USE_READLINE; then
 fi
 AC_SUBST(LIBREADLINE)
 AC_SUBST(READLINE_DIR)
 
 ### By default, Octave's internal array and matrix classes do bounds
 ### checking on element references.  This slows some operations down a
 ### bit, so give the user the option of disabling it.
 
-BOUNDS_CHECKING=true
+BOUNDS_CHECKING=false
 AC_ARG_ENABLE(bounds-check,
   [  --enable-bounds-check   for internal array classes (default is yes)],
   [if test "$enableval" = no; then BOUNDS_CHECKING=false; fi], [])
 if $BOUNDS_CHECKING; then
   AC_DEFINE(BOUNDS_CHECKING, 1)
 fi
 
 ### See which C++ compiler to use (we expect to find g++).
