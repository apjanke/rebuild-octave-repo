# HG changeset patch
# User jwe
# Date 1051127518 0
#      Wed Apr 23 19:51:58 2003 +0000
# Node ID f1fcc371e5efa867a5a7daed60b506cb54853147
# Parent  26f74e9fd8a5dc838b4c6c5f9079cd7f0b95acb4
[project @ 2003-04-23 19:51:57 by jwe]

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -1029,17 +1029,17 @@ ComplexMatrix::inverse (int& info, doubl
 	    }
 	}
     }
   
   return retval;
 }
 
 ComplexMatrix
-ComplexMatrix::pseudo_inverse (double tol)
+ComplexMatrix::pseudo_inverse (double tol) const
 {
   ComplexMatrix retval;
 
   ComplexSVD result (*this, SVD::economy);
 
   DiagMatrix S = result.singular_values ();
   ComplexMatrix U = result.left_singular_matrix ();
   ComplexMatrix V = result.right_singular_matrix ();
diff --git a/liboctave/CMatrix.h b/liboctave/CMatrix.h
--- a/liboctave/CMatrix.h
+++ b/liboctave/CMatrix.h
@@ -138,17 +138,17 @@ public:
   ComplexColumnVector column (int i) const;
   ComplexColumnVector column (char *s) const;
 
   ComplexMatrix inverse (void) const;
   ComplexMatrix inverse (int& info) const;
   ComplexMatrix inverse (int& info, double& rcond, int force = 0,
 			 int calc_cond = 1) const;
 
-  ComplexMatrix pseudo_inverse (double tol = 0.0);
+  ComplexMatrix pseudo_inverse (double tol = 0.0) const;
 
   ComplexMatrix fourier (void) const;
   ComplexMatrix ifourier (void) const;
 
   ComplexMatrix fourier2d (void) const;
   ComplexMatrix ifourier2d (void) const;
 
   ComplexDET determinant (void) const;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2003-04-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dMatrix.cc (Matrix::pseudo_inverse): Now const.
+	* CMatrix.cc (ComplexMatrix::pseudo_inverse): Likewise.
+
 2003-04-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* getopt.c, getopt1.c, getopt.h: Move here from kpathsea.
 	* Makefile.in: Add them to the appropriates lists.
 
 	* oct-getopt.c: Include "getopt.h", not <kpathsea/getopt.h>.
 
 	* Makefile.in (liboctave.$(LIBEXT), liboctave.$(SHLEXT)): Adjust
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -696,17 +696,17 @@ Matrix::inverse (int& info, double& rcon
 	    }
 	}
     }
 
   return retval;
 }
 
 Matrix
-Matrix::pseudo_inverse (double tol)
+Matrix::pseudo_inverse (double tol) const
 {
   SVD result (*this, SVD::economy);
 
   DiagMatrix S = result.singular_values ();
   Matrix U = result.left_singular_matrix ();
   Matrix V = result.right_singular_matrix ();
 
   ColumnVector sigma = S.diag ();
diff --git a/liboctave/dMatrix.h b/liboctave/dMatrix.h
--- a/liboctave/dMatrix.h
+++ b/liboctave/dMatrix.h
@@ -113,17 +113,17 @@ public:
   ColumnVector column (int i) const;
   ColumnVector column (char *s) const;
 
   Matrix inverse (void) const;
   Matrix inverse (int& info) const;
   Matrix inverse (int& info, double& rcond, int force = 0, 
 		  int calc_cond = 1) const;
 
-  Matrix pseudo_inverse (double tol = 0.0);
+  Matrix pseudo_inverse (double tol = 0.0) const;
 
   ComplexMatrix fourier (void) const;
   ComplexMatrix ifourier (void) const;
 
   ComplexMatrix fourier2d (void) const;
   ComplexMatrix ifourier2d (void) const;
 
   DET determinant (void) const;
