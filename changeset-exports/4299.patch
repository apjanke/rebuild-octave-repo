# HG changeset patch
# User jwe
# Date 1042748115 0
#      Thu Jan 16 20:15:15 2003 +0000
# Node ID 02fcb550f20c788f14f414d3b9e7a537e28bbe99
# Parent  055d2f68d445ca8d0bd813923de2bf0defc1ac6c
[project @ 2003-01-16 20:15:14 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* Makeconf.in (SED): Export to subshells.
+
 2003-01-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Don't bother with compiler flags for
 	explicit/no-implicit template instantiation.
 
 2003-01-11  Paul Kienzle <pkienzle@users.sf.net>
 
 	* configure.in, Makeconf.in: Allow setting of BUILD_LDFLAGS.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -5,16 +5,17 @@
 # John W. Eaton
 # jwe@bevo.che.wisc.edu
 # University of Wisconsin-Madison
 # Department of Chemical Engineering
  
 SHELL = /bin/sh
 
 SED = @SED@
+export SED
 
 # A shell command to extract the version number from version.h.
 getversion = $(SED) -e '/VERSION/!d' -e 's/.*"\(.*\)".*$$/\1/' -e q
 
 # Look for version.h to get version information.
 xfiles := $(TOPDIR)/src/version.h $(srcdir)/$(TOPDIR)/src/version.h
 version_file := $(firstword $(foreach file, $(xfiles), $(wildcard $(file))))
 version := $(shell $(getversion) $(version_file))
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* oct-syscalls.cc: Include signal.h.
+
 2003-01-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-syscalls.cc (octave_syscalls::kill): New function.
 	* oct-syscalls.h: Provide decl.
 	
 
 2003-01-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/liboctave/oct-syscalls.cc b/liboctave/oct-syscalls.cc
--- a/liboctave/oct-syscalls.cc
+++ b/liboctave/oct-syscalls.cc
@@ -35,16 +35,21 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 #ifdef HAVE_FCNTL_H
 #include <fcntl.h>
 #endif
 
+// We can't use csignal as kill is not in the std namespace, and picky
+// compiler runtimes will also exclude it from global scope as well.
+
+#include <signal.h>
+
 #include "oct-syscalls.h"
 #include "str-vec.h"
 #include "syswait.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
 
 int
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2003-01-16  Mumit Khan  <khan@nanotech.wisc.edu>
+
+	* mk-oct-links: Use $SED if set.
+	* mkbuiltins: Likewise.
+	* mkdefs: Likewise.
+	* mkdocs: Likewise.
+	* mkgendoc: Likewise.
+	* mkops: Likewise.
+
 2003-01-11  Paul Kienzle <pkienzle@users.sf.net>
 
 	* Makefile.in (gendoc$(BUILD_EXEEXT)): Pass $(BUILD_CXXFLAGS) and
 	$(BUILD_LDFLAGS) to compiler.
 
 2003-01-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (Fassignin): New function.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -310,17 +310,17 @@ doc-files: $(DOC_FILES)
 	@mv $@-t $@
 
 gendoc.cc: doc-files mkgendoc
 	@echo making $@
 	@$(srcdir)/mkgendoc doc-files > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 gendoc$(BUILD_EXEEXT): gendoc.cc
-	$(BUILD_CXX) -o $@ $^
+	$(BUILD_CXX) $(BUILD_CXXFLAGS) -o $@ $^ $(BUILD_LDFLAGS)
 
 ops.cc: $(OP_SRC) mkops
 	@echo making $@ from $(OP_SRC)
 	@$(srcdir)/mkops $(OP_SRC) > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 $(DEF_FILES): mkdefs defun-int.h defun-dld.h defun.h defaults.h oct-conf.h
 
diff --git a/src/mk-oct-links b/src/mk-oct-links
--- a/src/mk-oct-links
+++ b/src/mk-oct-links
@@ -5,29 +5,31 @@
 
 # If the first arg is -p, only print the links we need to make.
 
 # The first non-option arg is taken as the directory where the .oct
 # files are installed.  The remaining arguments should be the list of
 # .df files corresponding to the source files that were used to
 # create the .oct files.
 
+SED=${SED:-'sed'}
+
 print_only=false
 if [ $1 = "-p" ]; then
   print_only=true
   shift
 fi
 
 links_dir=$1
 shift
 
 for f in "$@"; do
-  base=`basename $f | sed 's/\.df$//'`
+  base=`basename $f | $SED 's/\.df$//'`
   fcns=`grep '^ *XDEFUN_DLD_INTERNAL' $f |\
-        sed -e 's/XDEFUN_DLD_INTERNAL *( *//' -e 's/ *,.*$//' |\
+        $SED -e 's/XDEFUN_DLD_INTERNAL *( *//' -e 's/ *,.*$//' |\
         sort -u`
   if [ -n "$fcns" ]; then
     for n in $fcns; do
       if [ "$n" = "$base" ]; then
         true
       else
         if $print_only; then
           echo $base.oct $n.oct
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -1,15 +1,17 @@
 #!/bin/sh
 
 if test $# -ne 2; then
   echo "usage: mkbuiltins f1 f2" 1>&2
   exit 1
 fi
 
+SED=${SED:-'sed'}
+
 DEF_FILES=`cat $1`
 VAR_FILES=`cat $2`
 
 if test -z "$DEF_FILES"; then
   echo "mkbuiltins: DEF_FILES is empty!" 1>&2
   exit 1
 fi
 
@@ -63,52 +65,52 @@ cat << \EOF
 
 #define XDEFUN_MAPPER_INTERNAL(name, ch_map, d_b_map, c_b_map, d_d_map, \
 			       d_c_map, c_c_map, lo, hi, \
 			       ch_map_flag, can_ret_cmplx_for_real, doc)
 
 EOF
 
 for file in $DEF_FILES; do
-  fcn=`echo $file | sed 's,^\./,,; s/\.df//; s/-/_/g'`
+  fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "static void"
   echo "install_${fcn}_fcns (void)"
   echo "{"
   cat $file
   echo "}"
   echo ""
 done
 
 for file in $VAR_FILES; do
-  f=`echo $file | sed 's,^\./,,; s/-/_/g'`
+  f=`echo $file | $SED 's,^\./,,; s/-/_/g'`
   echo "extern void symbols_of_${f} (void);"
 done
 
 cat << \EOF
 
 static void
 install_builtin_variables (void)
 {
 EOF
 
 for file in $VAR_FILES; do
-  f=`echo $file | sed 's,^\./,,; s/-/_/g'`
+  f=`echo $file | $SED 's,^\./,,; s/-/_/g'`
   echo "  symbols_of_${f} ();"
 done
 
 cat << \EOF
 }
 
 static void
 install_builtin_functions (void)
 {
 EOF
 
 for file in $DEF_FILES; do
-  fcn=`echo $file | sed 's,^\./,,; s/\.df//; s/-/_/g'`
+  fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "  install_${fcn}_fcns ();"
 done
 
 cat << \EOF
 }
 
 extern void install_mapper_functions (void);
 
diff --git a/src/mkdefs b/src/mkdefs
--- a/src/mkdefs
+++ b/src/mkdefs
@@ -1,11 +1,13 @@
 #!/bin/sh
 
-sed -n -e '/^ *BEGIN_INSTALL_BUILTIN/{
+SED=${SED:-'sed'}
+
+$SED -n -e '/^ *BEGIN_INSTALL_BUILTIN/{
   : loop
   s/BEGIN_INSTALL_BUILTIN//
   s/^#[ \t][ \t]*[0-9][0-9]*.*$//
   /END_INSTALL_BUILTIN/b done
   p
   n
   b loop
   : done
diff --git a/src/mkdocs b/src/mkdocs
--- a/src/mkdocs
+++ b/src/mkdocs
@@ -1,11 +1,13 @@
 #!/bin/sh
 
-sed -n -e '/^BEGIN_DOC_STRING/{
+SED=${SED:-'sed'}
+
+$SED -n -e '/^BEGIN_DOC_STRING/{
   : loop
   N
   /END_DOC_STRING/b done
   b loop
   : done
   s/BEGIN_DOC_STRING//
   s/END_DOC_STRING//
   p
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -1,10 +1,12 @@
 #! /bin/sh
 
+SED=${SED:-'sed'}
+
 if test $# -ne 1; then
   echo "usage: mkgendoc f1" 1>&2
   exit 1
 fi
 
 DOC_FILES=`cat $1`
 
 if test -z "$DOC_FILES"; then
@@ -62,34 +64,34 @@ print_doc_string (const std::string& nam
     std::cout << name;
 
   std::cout << "\n" << doc << "\n";
 }
 
 EOF
 
 for file in $DOC_FILES; do
-  fcn=`echo $file | sed 's,^\./,,; s/\.df//; s/-/_/g'`
+  fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "static void"
   echo "print_${fcn}_doc_strings (void)"
   echo "{"
   cat $file
   echo "}"
   echo ""
 done
 
 cat << \EOF
 
 int
 main (void)
 {
 EOF
 
 for file in $DOC_FILES; do
-  fcn=`echo $file | sed 's,^\./,,; s/\.df//; s/-/_/g'`
+  fcn=`echo $file | $SED 's,^\./,,; s/\.df//; s/-/_/g'`
   echo "  print_${fcn}_doc_strings ();"
 done
 
 cat << \EOF
 
   return 0;
 }
 EOF
diff --git a/src/mkops b/src/mkops
--- a/src/mkops
+++ b/src/mkops
@@ -1,37 +1,39 @@
 #!/bin/sh
 
+SED=${SED:-'sed'}
+
 cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 extern void install_base_type_conversions (void);
 
 EOF
 
 for file in "$@"; do
-  f=`echo $file | sed 's,^\./,,; s%^OPERATORS/op-%%; s%\.cc%%; s%-%_%g'`
+  f=`echo $file | $SED 's,^\./,,; s%^OPERATORS/op-%%; s%\.cc%%; s%-%_%g'`
   echo "extern void install_${f}_ops (void);"
 done
 
 cat << \EOF
 
 void
 install_ops (void)
 {
   install_base_type_conversions ();
 
 EOF
 
 for file in "$@"; do
-  f=`echo $file | sed 's,^\./,,; s%^OPERATORS/op-%%; s%\.cc%%; s%-%_%g'`
+  f=`echo $file | $SED 's,^\./,,; s%^OPERATORS/op-%%; s%\.cc%%; s%-%_%g'`
   echo "  install_${f}_ops ();"
 done
 
 cat << \EOF
 }
 EOF
 
 exit 0
