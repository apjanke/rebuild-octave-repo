# HG changeset patch
# User jwe
# Date 1163530359 0
#      Tue Nov 14 18:52:39 2006 +0000
# Node ID 8614649c454cda2cc971f3f15c90fe8558e9f6de
# Parent  b3c425131211134d7aea27b129e4b30ed0ce2925
[project @ 2006-11-14 18:52:34 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2006-11-14  John W. Eaton  <jwe@octave.org>
+
+	* plot/__do_legend__.m, plot/__errplot__.m,
+	plot/__init_plot_vars__.m, plot/__plot_globals__.m,
+	plot/__plt3__.m, plot/__plt__.m, plot/__setup_plot__.m,
+	plot/legend.m, plot/mplot.m, plot/multiplot.m, plot/oneplot.m,
+	plot/replot.m, plot/subplot.m, plot/subwindow.m:
+	Use __plot_globals__ for multiplot variables.  Keep track of
+	multiplot info for each figure.  Eliminate __multiplot_xscale__.
+
 2006-11-13  John W. Eaton  <jwe@octave.org>
 
 	* plot/mesh.m: Use proper dimensions for y in call to repmat.
 
 	* miscellaneous/substruct.m: New function.
 
 	* testfun/assert.m: Force orientation to match when comparing
 	struct elements.
diff --git a/scripts/plot/__do_legend__.m b/scripts/plot/__do_legend__.m
--- a/scripts/plot/__do_legend__.m
+++ b/scripts/plot/__do_legend__.m
@@ -1,15 +1,15 @@
 function __do_legend__ ()
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   props = __plot_key_properties__{cf}{mxi,myi};
 
   if (isstruct (props))
     if (isfield (props, "visible"))
       visible = props.visible;
     else
       error ("__do_legend__: missing field \"visible\"");
diff --git a/scripts/plot/__errplot__.m b/scripts/plot/__errplot__.m
--- a/scripts/plot/__errplot__.m
+++ b/scripts/plot/__errplot__.m
@@ -33,18 +33,18 @@
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
 function __errplot__ (fstr, a1, a2, a3, a4, a5, a6)
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   __setup_plot__ ("__gnuplot_plot__");
 
   if (nargin < 3 || nargin > 7) # at least three data arguments needed
     print_usage ();
   endif
 
   j = __plot_data_offset__{cf}(mxi,myi);
@@ -84,31 +84,31 @@ function __errplot__ (fstr, a1, a2, a3, 
 	tmp = [a1(:,i), a2(:,i), ...
 	       a1(:,i)-a3(:,i), a1(:,i)+a4(:,i), ...
 	       a2(:,i)-a5(:,i), a2(:,i)+a6(:,i)];
     endswitch
 
     __plot_data__{cf}{mxi,myi}{j} = tmp;
 
     __plot_command__{cf}{mxi,myi} \
-	= sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d} %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d}",
+	= sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d} %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d}",
 		   __plot_command__{cf}{mxi,myi},
 		   __plot_command_sep__, j, ifmt,
 		   gnuplot_command_title, loff);
     __plot_command_sep__ = ",\\\n";
 
     j++;
     loff++;
 
   endfor
 
   __plot_data_offset__{cf}(mxi,myi) = j;
   __plot_line_offset__{cf}(mxi,myi) = loff;
 
   if (! isempty (__plot_command__{cf}{mxi,myi}))
-    if (__multiplot_mode__)
+    if (__multiplot_mode__(cf))
       __gnuplot_raw__ ("clear\n");
     endif
     __do_legend__ ();
     eval (__plot_command__{cf}{mxi,myi});
   endif
 
 endfunction
diff --git a/scripts/plot/__init_plot_vars__.m b/scripts/plot/__init_plot_vars__.m
--- a/scripts/plot/__init_plot_vars__.m
+++ b/scripts/plot/__init_plot_vars__.m
@@ -17,18 +17,18 @@
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 function __init_plot_vars__ (cmd, sep, clear_data)
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   if (nargin < 3)
     clear_data = true;
     if (nargin < 2)
       sep = "";
       if (nargin < 1)
 	cmd = "";
       endif
diff --git a/scripts/plot/__plot_globals__.m b/scripts/plot/__plot_globals__.m
--- a/scripts/plot/__plot_globals__.m
+++ b/scripts/plot/__plot_globals__.m
@@ -16,73 +16,87 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## This is a script file shared by __plt__ and __errplot__.
 
 ## global variables to keep track of multiplot options
 
-global __multiplot_mode__ = 0;
-global __multiplot_xsize__;
-global __multiplot_ysize__;
-global __multiplot_xn__;
-global __multiplot_yn__;
-global __multiplot_xi__;
-global __multiplot_yi__;
-global __multiplot_scale__;
-
-if (isempty (__multiplot_scale__))
-  __multiplot_scale__ = [1, 1];
-endif
-
-if (isempty (__multiplot_xi__))
-  __multiplot_xi__ = 1;
-endif
-
-if (isempty (__multiplot_yi__))
-  __multiplot_yi__ = 1;
-endif
-
 global __current_figure__;
 global __plot_data_offset__;
 global __plot_line_offset__;
 global __plot_command__;
 global __plot_command_sep__;
 global __plot_data__;
 global __plot_key_labels__;
 global __plot_key_properties__;
+global __multiplot_mode__;
+global __multiplot_xsize__;
+global __multiplot_ysize__;
+global __multiplot_xn__;
+global __multiplot_yn__;
+global __multiplot_xi__;
+global __multiplot_yi__;
 
 if (isempty (__current_figure__))
   __current_figure__ = 1;
 endif
 
+if (length (__multiplot_mode__) < __current_figure__)
+  __multiplot_mode__(__current_figure__) = false;
+endif
+
+if (length (__multiplot_xsize__) < __current_figure__)
+  __multiplot_xsize__(__current_figure__) = 1;
+endif
+
+if (length (__multiplot_ysize__) < __current_figure__)
+  __multiplot_ysize__(__current_figure__) = 1;
+endif
+
+if (length (__multiplot_xn__) < __current_figure__)
+  __multiplot_xn__(__current_figure__) = 1;
+endif
+
+if (length (__multiplot_yn__) < __current_figure__)
+  __multiplot_yn__(__current_figure__) = 1;
+endif
+
+if (length (__multiplot_xi__) < __current_figure__)
+  __multiplot_xi__(__current_figure__) = 1;
+endif
+
+if (length (__multiplot_yi__) < __current_figure__)
+  __multiplot_yi__(__current_figure__) = 1;
+endif
+
 if (length (__plot_data_offset__) < __current_figure__
-    || any (size (__plot_data_offset__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
+    || any (size (__plot_data_offset__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
 
-  __plot_data_offset__{__current_figure__}(__multiplot_xi__,__multiplot_yi__) = 1;
+  __plot_data_offset__{__current_figure__}(__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)) = 1;
 endif
 
 if (length (__plot_line_offset__) < __current_figure__
-    || any (size (__plot_line_offset__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
+    || any (size (__plot_line_offset__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
 
-  __plot_line_offset__{__current_figure__}(__multiplot_xi__,__multiplot_yi__) = 1;
+  __plot_line_offset__{__current_figure__}(__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)) = 1;
 endif
 
 if (length (__plot_command__) < __current_figure__
-    || any (size (__plot_command__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
-  __plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__} = "";
+    || any (size (__plot_command__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
+  __plot_command__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)} = "";
 endif
 
 if (length (__plot_data__) < __current_figure__
-    || any (size (__plot_data__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
-  __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__} = [];
+    || any (size (__plot_data__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
+  __plot_data__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)} = [];
 endif
 
 if (length (__plot_key_labels__) < __current_figure__
-    || any (size (__plot_key_labels__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
-  __plot_key_labels__{__current_figure__}{__multiplot_xi__,__multiplot_yi__} = [];
+    || any (size (__plot_key_labels__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
+  __plot_key_labels__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)} = [];
 endif
 
 if (length (__plot_key_properties__) < __current_figure__
-    || any (size (__plot_key_properties__{__current_figure__}) != [__multiplot_xi__, __multiplot_yi__]))
-  __plot_key_properties__{__current_figure__}{__multiplot_xi__,__multiplot_yi__} = struct ("visible", true, "box", false, "position", 0);
+    || any (size (__plot_key_properties__{__current_figure__}) != [__multiplot_xi__(__current_figure__), __multiplot_yi__(__current_figure__)]))
+  __plot_key_properties__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)} = struct ("visible", true, "box", false, "position", 0);
 endif
diff --git a/scripts/plot/__plt3__.m b/scripts/plot/__plt3__.m
--- a/scripts/plot/__plt3__.m
+++ b/scripts/plot/__plt3__.m
@@ -49,42 +49,42 @@ function __plt3__ (x, usingstr, fmtstr, 
   endif
   if (nargin < 5)
     withstr = "";
   endif
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   __setup_plot__ ("__gnuplot_splot__");
 
   j = __plot_data_offset__{cf}(mxi,myi);
   loff = __plot_line_offset__{cf}(mxi,myi);
   loff1 = loff;
 
   __plot_data__{cf}{mxi,myi}{j} = x;
   __plot_key_labels__{cf}{mxi,myi}{loff1++} = keystr;
 
   if (! have_usingstr)
     usingstr = __make_using_clause__ (__plot_data__{cf}{mxi,myi}{j});
   endif
 
   __plot_command__{cf}{mxi,myi} ...
-      = sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d} %s %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d} %s",
+      = sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d} %s %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d} %s",
 		 __plot_command__{cf}{mxi,myi},
 		 __plot_command_sep__, j++, usingstr, fmtstr,
 		 gnuplot_command_title, loff++, withstr);
   __plot_command_sep__ = ",\\\n";
 
   __plot_data_offset__{cf}(mxi,myi) = j;
   __plot_line_offset__{cf}(mxi,myi) = loff;
 
-  if (__multiplot_mode__)
+  if (__multiplot_mode__(cf))
     __gnuplot_raw__ ("clear\n");
   endif
 
   if (! strcmp (__plot_command__{cf}{mxi,myi}, "__gnuplot_splot__"))
     eval (__plot_command__{cf}{mxi,myi});
   endif
 endfunction
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -23,18 +23,18 @@
 
 ## Author: jwe
 
 function __plt__ (caller, varargin)
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   __setup_plot__ ("__gnuplot_plot__");
 
   nargs = nargin ();
 
   if (nargs > 1)
 
     k = 1;
@@ -101,31 +101,31 @@ function __plt__ (caller, varargin)
 	x = next_arg;
 	x_set = true;
       endif
 
       if (have_data)
 	for i = 1:length (__plot_data__{cf}{mxi,myi}{j})
 	  usingstr = __make_using_clause__ (__plot_data__{cf}{mxi,myi}{j}{i});
 	  __plot_command__{cf}{mxi,myi} ...
-	      = sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d}{%d} %s %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}{%d}",
+	      = sprintf ("%s%s __plot_data__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d}{%d} %s %s %s __plot_key_labels__{__current_figure__}{__multiplot_xi__(__current_figure__),__multiplot_yi__(__current_figure__)}{%d}",
 			 __plot_command__{cf}{mxi,myi},
 			 __plot_command_sep__, j, i, usingstr,
 			 fmtstr{i}, gnuplot_command_title, loff++);
 	  __plot_command_sep__ = ",\\\n";
 	endfor
 	j++;
       endif
 
     endwhile
 
     __plot_data_offset__{cf}(mxi,myi) = j;
     __plot_line_offset__{cf}(mxi,myi) = loff;
 
-    if (__multiplot_mode__)
+    if (__multiplot_mode__(cf))
       __gnuplot_raw__ ("clear\n");
     endif
 
     if (! strcmp (__plot_command__{cf}{mxi,myi}, "__gnuplot_plot__"))
       __do_legend__ ();
       eval (__plot_command__{cf}{mxi,myi});
     endif
 
diff --git a/scripts/plot/__setup_plot__.m b/scripts/plot/__setup_plot__.m
--- a/scripts/plot/__setup_plot__.m
+++ b/scripts/plot/__setup_plot__.m
@@ -16,18 +16,22 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 function __setup_plot__ (plotcmd)
 
   __plot_globals__
 
+  cf = __current_figure__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
+
   if (ishold ())
-    cmd = __plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__};
+    cmd = __plot_command__{cf}{mxi,myi};
     if (isempty (cmd))
       cmd = plotcmd;
       sep = "";
     else
       sep = ",\\\n";
     endif
     clear_data = false;
   else
diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -70,18 +70,18 @@
 
 ## PKG_ADD mark_as_command legend
 
 function legend (varargin)
 
   __plot_globals__;
 
   cf = __current_figure__;
-  mxi = __multiplot_xi__;
-  myi = __multiplot_yi__;
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
 
   nargs = nargin;
 
   if (nargs > 0)
     pos = varargin{nargs};
     if (isnumeric (pos) && isscalar (pos) && round (pos) == pos)
       if (pos >= -3 && pos <= 4)
 	__plot_key_properties__{cf}{mxi,myi}.position = pos;
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -29,46 +29,40 @@
 ## See the description of the @var{plot} function for the various options.
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function mplot (varargin)
 
-  ## global variables to keep track of multiplot options
+  __plot_globals__;
 
-  global __multiplot_mode__ = 0;
-  global __multiplot_xsize__;
-  global __multiplot_ysize__;
-  global __multiplot_xn__;
-  global __multiplot_yn__;
-  global __multiplot_xi__;
-  global __multiplot_yi__;
+  cf = __current_figure__;
 
   __gnuplot_raw__ ("set nologscale;\n");
   __gnuplot_raw__ ("set nopolar;\n");
 
   __plt__ ("plot", varargin{:});
 
   ## update the plot position
 
-  if (__multiplot_mode__)
+  if (__multiplot_mode__(cf))
 
-    if (__multiplot_xi__ < __multiplot_xn__)
-      __multiplot_xi__++;
+    if (__multiplot_xi__(cf) < __multiplot_xn__(cf))
+      __multiplot_xi__(cf)++;
     else
-      __multiplot_xi__ = 1;
-      if (__multiplot_yi__ < __multiplot_yn__)
-        __multiplot_yi__++;
+      __multiplot_xi__(cf) = 1;
+      if (__multiplot_yi__(cf) < __multiplot_yn__(cf))
+        __multiplot_yi__(cf)++;
       else
-        __multiplot_yi__ = 1;
+        __multiplot_yi__(cf) = 1;
       endif
     endif
 
-    xo = (__multiplot_xi__ - 1.0) * __multiplot_xsize__;
-    yo = (__multiplot_yn__ - __multiplot_yi__) * __multiplot_ysize__;
+    xo = (__multiplot_xi__(cf) - 1.0) * __multiplot_xsize__(cf);
+    yo = (__multiplot_yn__(cf) - __multiplot_yi__(cf)) * __multiplot_ysize__(cf);
 
     __gnuplot_raw__ (sprintf ("set origin %g, %g;\n", xo, yo));
 
   endif
 
 endfunction
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -28,49 +28,41 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt, Dutt.Vinayak@mayo.EDU
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function multiplot (xn, yn)
 
-  ## global variables to keep track of multiplot options
+  plot_globals;
 
-  global __multiplot_mode__ = 0;
-  global __multiplot_xsize__;
-  global __multiplot_ysize__;
-  global __multiplot_xn__;
-  global __multiplot_yn__;
-  global __multiplot_xi__;
-  global __multiplot_yi__;
+  cf = __current_figure__;
 
   if (nargin != 2)
     print_usage ();
   endif
 
   if (! (isscalar (xn) && isscalar (yn)))
     error ("multiplot: xn and yn have to be scalars");
   endif
 
   xn = round (xn);
   yn = round (yn);
 
   if (xn == 0 && yn == 0)
 
     oneplot ();
 
-    ## FIXME -- do we really need to reset these here?
-
-    __multiplot_xsize__ = 1;
-    __multiplot_ysize__ = 1;
-    __multiplot_xn__ = 1;
-    __multiplot_yn__ = 1;
-    __multiplot_xi__ = 1;
-    __multiplot_yi__ = 1;
+    __multiplot_xsize__(cf) = 1;
+    __multiplot_ysize__(cf) = 1;
+    __multiplot_xn__(cf) = 1;
+    __multiplot_yn__(cf) = 1;
+    __multiplot_xi__(cf) = 1;
+    __multiplot_yi__(cf) = 1;
 
   else
 
     if (xn < 1 || yn < 1)
       error ("multiplot: xn and yn have to be positive integers");
     endif
 
     __gnuplot_raw__ ("set multiplot;\n");
@@ -80,23 +72,23 @@ function multiplot (xn, yn)
 
     __gnuplot_raw__ (sprintf ("set size %g, %g;\n", xsize, ysize));
 
     xo = 0.0;
     yo = (yn - 1.0)*ysize;
 
     __gnuplot_raw__ (sprintf ("set origin %g, %g;\n", xo, yo));
 
-    __multiplot_mode__ = 1;
-    __multiplot_xsize__ = xsize;
-    __multiplot_ysize__ = ysize;
-    __multiplot_xn__ = xn;
-    __multiplot_yn__ = yn;
-    __multiplot_xi__ = 1;
-    __multiplot_yi__ = 1;
+    __multiplot_mode__(cf) = true;
+    __multiplot_xsize__(cf) = xsize;
+    __multiplot_ysize__(cf) = ysize;
+    __multiplot_xn__(cf) = xn;
+    __multiplot_yn__(cf) = yn;
+    __multiplot_xi__(cf) = 1;
+    __multiplot_yi__(cf) = 1;
 
     gnuplot_command_replot = "cle;rep";
 
     clearplot;
 
   endif
 
 endfunction
diff --git a/scripts/plot/oneplot.m b/scripts/plot/oneplot.m
--- a/scripts/plot/oneplot.m
+++ b/scripts/plot/oneplot.m
@@ -23,19 +23,19 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function oneplot ()
 
-  global __multiplot_mode__ = 0;
+  plot_globals;
 
-  if (__multiplot_mode__)
+  if (__multiplot_mode__(__current_figure__))
     __gnuplot_raw__ ("set nomultiplot;\n");
     __gnuplot_raw__ ("set size 1, 1;\n");
     __gnuplot_raw__ ("set origin 0, 0;\n");
-    __multiplot_mode__ = 0;
+    __multiplot_mode__(__current_figure__) = false;
     gnuplot_command_replot = "rep";
   endif
 
 endfunction
diff --git a/scripts/plot/replot.m b/scripts/plot/replot.m
--- a/scripts/plot/replot.m
+++ b/scripts/plot/replot.m
@@ -23,21 +23,27 @@
 ## @end deftypefn
 
 ## Author: jwe
 
 function replot ()
 
   __plot_globals__;
 
+  cf = __current_figure__;
+  mpmode = __multiplot_mode__(cf);
+  mxi = __multiplot_xi__(cf);
+  myi = __multiplot_yi__(cf);
+  cmd = __plot_command__{cf}{mxi,myi};
+
   if (nargin == 0)
-    if (! isempty (__plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__}))
-      if (__multiplot_mode__)
+    if (! isempty (cmd))
+      if (mpmode)
 	__gnuplot_raw__ ("clear\n");
       endif
       __do_legend__ ();
-      eval (__plot_command__{__current_figure__}{__multiplot_xi__,__multiplot_yi__});
+      eval (cmd);
     endif
   else
     print_usage ();
   endif
 
 endfunction
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -18,24 +18,16 @@
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} subplot (@var{rows}, @var{cols}, @var{index})
 ## @deftypefnx {Function File} {} subplot (@var{rcn})
 ## Sets @code{gnuplot} in multiplot mode and plots in location
 ## given by index (there are @var{cols} by @var{rows} subwindows).
 ##
-## The global variable @var{__multiplot_scale__} should be used when the
-## command @code{__gnuplot_set__ size xsize, ysize} has been used prior to calling
-## @code{subplot}.
-##
-## The value of @var{__multiplot_scale__} should be a vector with two
-## elements, the first set equal to @var{xsize} and the second to
-## @var{ysize}.
-##
 ## Input:
 ##
 ## @table @var
 ## @item rows
 ## Number of rows in subplot grid.
 ##
 ## @item columns
 ## Number of columns in subplot grid.
@@ -80,16 +72,18 @@
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function subplot (rows, columns, index)
 
   __plot_globals__;
 
+  cf = __current_figure__;
+
   if (nargin != 3 && nargin != 1)
     print_usage ();
   endif
 
   if (nargin == 1)
 
     if (! (isscalar (rows) && rows >= 0))
       error ("subplot: input rcn has to be a positive scalar");
@@ -119,50 +113,49 @@ function subplot (rows, columns, index)
   endif
 
   if (columns*rows == 1)
 
     ## switching to single plot ?
 
     oneplot ();
 
-    ## FIXME -- do we really need to reset these here?
-
-    __multiplot_xn__ = 1;
-    __multiplot_yn__ = 1;
+    __multiplot_xn__(cf) = 1;
+    __multiplot_yn__(cf) = 1;
 
   else
 
     ## doing multiplot plots
 
-    if (! __multiplot_mode__
-        || __multiplot_xn__ != columns
-        || __multiplot_yn__ != rows)
+    if (! __multiplot_mode__(cf)
+        || __multiplot_xn__(cf) != columns
+        || __multiplot_yn__(cf) != rows)
 
-      __multiplot_mode__ = 1;
-      __multiplot_xn__ = columns;
-      __multiplot_yn__ = rows;
-      __multiplot_xsize__ = __multiplot_scale__(1) ./ columns;
-      __multiplot_ysize__ = __multiplot_scale__(2) ./ rows;
+      __multiplot_mode__(cf) = true;
+      __multiplot_xn__(cf) = columns;
+      __multiplot_yn__(cf) = rows;
+      __multiplot_xsize__(cf) = 1 / columns;
+      __multiplot_ysize__(cf) = 1 / rows;
 
       __gnuplot_raw__ ("set multiplot;\n");
 
       __gnuplot_raw__ (sprintf ("set size %g, %g;\n",
-				__multiplot_xsize__, __multiplot_ysize__));
+				__multiplot_xsize__(cf),
+				__multiplot_ysize__(cf)));
     endif
 
     ## get the sub plot location
 
     yp = fix ((index-1)/columns);
     xp = index - yp*columns - 1;
-    __multiplot_xi__ = ++xp;
-    __multiplot_yi__ = ++yp;
+    __multiplot_xi__(cf) = ++xp;
+    __multiplot_yi__(cf) = ++yp;
 
     ## set the origin
 
-    xo = (xp - 1.0) * __multiplot_xsize__;
-    yo = (rows - yp) * __multiplot_ysize__;
+    xo = (xp - 1.0) * __multiplot_xsize__(cf);
+    yo = (rows - yp) * __multiplot_ysize__(cf);
 
     __gnuplot_raw__ (sprintf ("set origin %g, %g;\n", xo, yo));
 
   endif
 
 endfunction
diff --git a/scripts/plot/subwindow.m b/scripts/plot/subwindow.m
--- a/scripts/plot/subwindow.m
+++ b/scripts/plot/subwindow.m
@@ -26,23 +26,19 @@
 ## @end deftypefn
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function subwindow (xn, yn)
 
-  ## global variables to keep track of multiplot options
+  __plot_globals__;
 
-  global __multiplot_mode__ = 0;
-  global __multiplot_xsize__;
-  global __multiplot_ysize__;
-  global __multiplot_xn__;
-  global __multiplot_yn__;
+  cf = __current_figure__;
 
   ## check calling argument count
 
   if (nargin != 2)
     print_usage ();
   endif
 
   ## check for scalar inputs
@@ -52,27 +48,28 @@ function subwindow (xn, yn)
   endif
 
   xn = round (xn);
   yn = round (yn);
 
   ## switch to multiplot mode if not already in, and use the args as the
   ## args to multiplot()
 
-  if (! __multiplot_mode__)
+  if (! __multiplot_mode__(cf))
     multiplot (xn, yn);
     return;
   endif
 
   ## get the sub plot location
 
-  if (xn < 1 || xn > __multiplot_xn__ || yn < 1 || yn > __multiplot_yn__)
+  if (xn < 1 || xn > __multiplot_xn__(cf)
+      || yn < 1 || yn > __multiplot_yn__(__currrent_figure__))
     error ("subwindow: incorrect xn and yn");
   endif
 
-  xo = (xn - 1.0) * __multiplot_xsize__;
-  yo = (__multiplot_yn__ - yn) * __multiplot_ysize__;
+  xo = (xn - 1.0) * __multiplot_xsize__(cf);
+  yo = (__multiplot_yn__(cf) - yn) * __multiplot_ysize__(cf);
 
   __gnuplot_raw__ (sprintf ("set origin %g, %g;\n", xo, yo));
 
   clearplot;
 
 endfunction
