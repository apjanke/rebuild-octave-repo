# HG changeset patch
# User jwe
# Date 830688134 0
#      Sun Apr 28 10:42:14 1996 +0000
# Node ID 19ba1a7dcfbb8ee7c2e5be52c21675da3680d744
# Parent  91c0c3d18339a142dce75c901551d9076e355b14
[project @ 1996-04-28 10:40:15 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.192 $)
+AC_REVISION($Revision: 1.193 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -621,22 +621,22 @@ AC_SUBST(CXXLIB_LIST)
 AC_SUBST(CXXLIB_PATH)
 
 ### Checks for header files.
 
 AC_HEADER_STDC
 AC_HEADER_DIRENT
 AC_HEADER_TIME
 AC_HEADER_SYS_WAIT
-AC_CHECK_HEADERS(assert.h float.h floatingpoint.h limits.h memory.h)
-AC_CHECK_HEADERS(pwd.h stdlib.h string.h unistd.h varargs.h)
-AC_CHECK_HEADERS(sys/fcntl.h sys/param.h sys/resource.h sys/select.h)
-AC_CHECK_HEADERS(sys/stat.h sys/time.h sys/times.h sys/utsname.h)
-AC_CHECK_HEADERS(termios.h termio.h sgtty.h)
-AC_CHECK_HEADERS(termcap.h curses.h)
+
+AC_CHECK_HEADERS(assert.h curses.h fcntl.h float.h floatingpoint.h \
+		 limits.h memory.h pwd.h sgtty.h stdlib.h string.h \
+		 sys/param.h sys/resource.h sys/select.h sys/stat.h \
+		 sys/time.h sys/times.h sys/types.h sys/utsname.h \
+		 termcap.h termio.h termios.h unistd.h varargs.h) 
 
 if test "$ac_cv_header_termios_h" = yes \
     || test "$ac_cv_header_termio_h" = yes \
     || test "$ac_cv_header_sgtty_h" = yes; then
   true
 else
   AC_MSG_ERROR([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
@@ -664,21 +664,23 @@ if test -f $srcdir/libcruft/fsqp/fsqpd.f
   AC_MSG_RESULT(yes)
 else
   AC_MSG_RESULT(no)
   AC_DEFINE(FSQP_MISSING, 1)
 fi
 
 ### Checks for functions and variables.
 
-AC_CHECK_FUNCS(setvbuf getcwd gethostname bzero bcopy rindex vfprintf vsprintf)
-AC_CHECK_FUNCS(stricmp strnicmp strcasecmp strncasecmp strerror atexit)
-AC_CHECK_FUNCS(on_exit tempnam memmove putenv strdup)
-AC_CHECK_FUNCS(mkdir rmdir rename umask)
-AC_CHECK_FUNCS(sigaction sigprocmask sigpending sigsuspend)
+AC_CHECK_FUNCS(atexit bcopy bzero dup2 execvp fcntl fork getcwd \
+	       gethostname getpgrp getpid getppid lstat memmove \
+	       mkdir mkfifo on_exit pipe putenv rename rindex rmdir \
+	       setvbuf sigaction sigpending sigprocmask sigsuspend \
+	       stat strcasecmp strdup strerror stricmp strncasecmp \
+	       strnicmp tempnam umask unlink vfprintf vsprintf \
+	       waitpid)
 
 OCTAVE_SMART_PUTENV
 OCTAVE_PROGRAM_INVOCATION_NAME
 
 LIBDLFCN=
 DLFCN_INCFLAGS=
 if test "$WITH_DL" = yes || test "$WITH_DL" = maybe; then
   case "$canonical_host_type" in
@@ -843,16 +845,17 @@ AC_TRY_LINK([#include <stdio.h>],
   AC_MSG_RESULT(yes)
   AC_DEFINE(HAVE_SYS_SIGLIST, 1),
   AC_MSG_RESULT(no))
 
 ### Type stuff.
 
 AC_TYPE_MODE_T
 AC_TYPE_OFF_T
+AC_TYPE_PID_T
 AC_TYPE_SIZE_T
 AC_TYPE_UID_T
 AC_CHECK_TYPE(dev_t, short)
 AC_CHECK_TYPE(ino_t, unsigned long)
 AC_CHECK_TYPE(nlink_t, short)
 
 ### Define VOID_SIGHANDLER for readline.
 
@@ -959,19 +962,16 @@ else
   AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
   AC_MSG_WARN([])
   AC_MSG_WARN([at the Octave prompt.])
 fi
 
 AC_CHECK_PROGS(DEFAULT_PAGER, less more page pg, [])
 if test -z "$DEFAULT_PAGER"; then
   AC_MSG_WARN([I couldn't find `less', `more', `page', or `pg'])
-elif test "$DEFAULT_PAGER" = less; then
-  DEFAULT_PAGER="less -e"
-  AC_MSG_RESULT([defining DEFAULT_PAGER to be $DEFAULT_PAGER])
 fi
 
 ### Even though we include config.h, we need to have the preprocessor
 ### defines available in a variable for the octave-bug script.  Use
 ### UGLY_DEFS for that.
 
 AC_OUTPUT_MAKE_DEFS
 UGLY_DEFS="$DEFS"
diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -304,13 +304,51 @@ Turn output pagination on or off.")
 	error ("more: unrecognized argument `%s'", arg.c_str ());
     }
   else
     print_usage ("more");
 
   return retval;
 }
 
+static string
+default_pager (void)
+{
+  string pager_binary;
+
+  char *pgr = getenv ("PAGER");
+
+  if (pgr)
+    pager_binary = string (pgr);
+#ifdef DEFAULT_PAGER
+  else
+    {
+      pager_binary = string (DEFAULT_PAGER);
+
+      if (pager_binary == "less")
+	{
+	  pager_binary.append (" -e");
+
+	  if (! getenv ("LESS"))
+	    pager_binary.append
+	      (" -P-- less ?pB(%pB\%):--. (f)orward, (b)ack, (q)uit$");
+	}
+    }
+#endif
+
+  return pager_binary;
+}
+
+void
+symbols_of_pager (void)
+{
+  DEFVAR (PAGER, default_pager (), 0, sv_pager_binary,
+    "path to pager binary");
+
+  DEFVAR (page_screen_output, 1.0, 0, page_screen_output,
+    "if possible, send output intended for the screen through the pager");
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/pager.h b/src/pager.h
--- a/src/pager.h
+++ b/src/pager.h
@@ -111,15 +111,17 @@ private:
 #define octave_stdout (octave_pager_stream::stream ())
 
 #define octave_diary (octave_diary_stream::stream ())
 
 extern void flush_octave_stdout (void);
 
 extern pid_t octave_pager_pid;
 
+extern void symbols_of_pager (void);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -348,33 +348,16 @@ octave_fcn_file_dir (void)
 
 string
 octave_bin_dir (void)
 {
   return subst_octave_home (OCTAVE_BINDIR);
 }
 
 string
-default_pager (void)
-{
-  string pager_binary;
-
-  char *pgr = getenv ("PAGER");
-
-  if (pgr)
-    pager_binary = string (pgr);
-#ifdef DEFAULT_PAGER
-  else
-    pager_binary = string (DEFAULT_PAGER);
-#endif
-
-  return pager_binary;
-}
-
-string
 maybe_add_default_load_path (const string& pathstring)
 {
   string std_path = subst_octave_home (OCTAVE_FCNFILEPATH);
 
   string retval;
 
   if (! pathstring.empty ())
     {
@@ -1609,19 +1592,16 @@ install_builtin_variables_1 (void)
 }
 
 static void
 install_builtin_variables_2 (void)
 {
   DEFCONSTX ("OCTAVE_VERSION", SBV_OCTAVE_VERSION, OCTAVE_VERSION, 0, 0,
     "Octave version");
 
-  DEFVAR (PAGER, default_pager (), 0, sv_pager_binary,
-    "path to pager binary");
-
   DEFVAR (PS1, "\\s:\\#> ", 0, sv_ps1,
     "primary prompt string");
 
   DEFVAR (PS2, "> ", 0, sv_ps2,
     "secondary prompt string");
 
   DEFVAR (PS4, "+ ", 0, sv_ps4,
     "string printed before echoed input (enabled by --echo-input)");
@@ -1743,19 +1723,16 @@ install_builtin_variables_5 (void)
     "silently convert from complex to real by dropping imaginary part");
 
   DEFVAR (output_max_field_width, 10.0, 0, set_output_max_field_width,
     "maximum width of an output field for numeric output");
 
   DEFVAR (output_precision, 5.0, 0, set_output_precision,
     "number of significant figures to display for numeric output");
 
-  DEFVAR (page_screen_output, 1.0, 0, page_screen_output,
-    "if possible, send output intended for the screen through the pager");
-
   DEFCONST (pi, 4.0 * atan (1.0), 0, 0,
     "ratio of the circumference of a circle to its diameter");
 
   DEFVAR (prefer_column_vectors, 1.0, 0, prefer_column_vectors,
     "prefer column/row vectors");
 
   DEFVAR (prefer_zero_one_indexing, 0.0, 0, prefer_zero_one_indexing,
     "when there is a conflict, prefer zero-one style indexing");
@@ -1866,16 +1843,17 @@ install_builtin_variables (void)
   install_builtin_variables_2 ();
   install_builtin_variables_3 ();
   install_builtin_variables_4 ();
   install_builtin_variables_5 ();
   install_builtin_variables_6 ();
   install_builtin_variables_7 ();
   install_builtin_variables_8 ();
 
+  symbols_of_pager ();
   symbols_of_syscalls ();
 }
 
 // Deleting names from the symbol tables.
 
 DEFUN_TEXT (clear, args, ,
   "clear [-x] [name ...]\n\
 \n\
