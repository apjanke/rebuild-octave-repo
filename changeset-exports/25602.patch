# HG changeset patch
# User Rik <rik@octave.org>
# Date 1531497252 25200
#      Fri Jul 13 08:54:12 2018 -0700
# Node ID 8f8d3fef29a830a0f802781fba463f96f1703f40
# Parent  a8325f2361c7154bad76625cd8f4cea1cb0448b0
num2str.m: Update Matlab Compatibility BIST tests (bug #36133).

* num2str.m: Update Matlab Compatibility BIST tests to reflect behavior in
2018A release.

diff --git a/scripts/general/num2str.m b/scripts/general/num2str.m
--- a/scripts/general/num2str.m
+++ b/scripts/general/num2str.m
@@ -236,20 +236,24 @@ endfunction
 %! assert (rows (y) == 3);
 %! assert (y, ["8+0i   1+0i   6+0i  -8+2i  -1+0i  -6+0i"
 %!             "3+0i   5+0i   7+0i  -3+0i  -5+0i  -7+0i"
 %!             "4+0i   9+0i   2+0i  -4+0i  -9+0i  -2+0i"]);
 
 ## Clear shared variables
 %!shared
 
-## FIXME: Integers greater than flintmax() - 1 should be masked to show just
-##        16 digits of precision.
-%!test <36133>
-%! assert (num2str (1e23), "100000000000000000000000");
+## FIXME: Integers greater than 1e15 should switch to exponential notation
+%!assert <36133> (num2str (1e15), "1000000000000000")
+%!assert <36133> (num2str (1e16), "1e+16")
+## Even exact integers in IEEE notation should use exponential notation
+%!assert <36133> (num2str(2^512), "1.34078079299426e+154");
+## Mixed integer/floating point arrays
+%!assert <36133> (num2str ([2.1, 1e23, pi]),
+%!                         "2.1  9.999999999999999e+22      3.141592653589793")
 
 ## Test for extra rows generated from newlines in format
 %!assert <*44864> (rows (num2str (magic (3), "%3d %3d %3d\n")), 3)
 
 %!assert <*45174> (num2str ([65 66 67], "%s"), "ABC")
 
 %!error num2str ()
 %!error num2str (1, 2, 3)
