# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1320525975 25200
#      Sat Nov 05 13:46:15 2011 -0700
# Node ID 2e4252228f73a956b824d792a554b92bcb7863a4
# Parent  dc685dd445b41425012ed1699be1f1a53f70b32a
waitbar.m: Eliminate docstring reference to waitbar(frac,msg)

* waitbar.m: Eliminate docstring reference to waitbar(frac,msg)

diff --git a/scripts/plot/waitbar.m b/scripts/plot/waitbar.m
--- a/scripts/plot/waitbar.m
+++ b/scripts/plot/waitbar.m
@@ -16,30 +16,28 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{h} =} waitbar (@var{frac})
 ## @deftypefnx {Function File} {@var{h} =} waitbar (@var{frac}, @var{msg})
 ## @deftypefnx {Function File} {@var{h} =} waitbar (@dots{}, "FigureProperty", "Value", @dots{})
 ## @deftypefnx {Function File} {} waitbar (@var{frac})
-## @deftypefnx {Function File} {} waitbar (@var{frac}, @var{msg})
 ## @deftypefnx {Function File} {} waitbar (@var{frac}, @var{hwbar})
 ## @deftypefnx {Function File} {} waitbar (@var{frac}, @var{hwbar}, @var{msg})
 ## Return a handle @var{h} to a new waitbar object.  The waitbar is
 ## filled to fraction @var{frac} which must be in the range [0, 1].  The
 ## optional message @var{msg} is centered and displayed above the waitbar.
 ## The appearance of the waitbar figure window can be configured by passing 
 ## property/value pairs to the function.
 ## 
-## If no output handle is requested, and there is an existing waitbar, then
-## the current waitbar is updated with new @var{frac} and optional @var{msg}
-## values.  If there are multiple outstanding waitbars they can be updated
-## individually by passing the handle @var{hwbar} of the specific waitbar to
-## modify.
+## When called with a single input the current waitbar, if it exists, is
+## updated to the new value @var{frac}.  If there are multiple outstanding
+## waitbars they can be updated individually by passing the handle @var{hwbar}
+## of the specific waitbar to modify.
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = waitbar (varargin)
 
   persistent curr_waitbar;
 
@@ -141,44 +139,44 @@ endfunction
 
 %!demo
 %! h = waitbar (0, "please wait...");
 %! for i = 0:0.01:0.6
 %!   waitbar (i);
 %! endfor
 %! i = 0.3
 %! waitbar (i, h, "don't you hate taking a step backward?")
-%! pause (0.5)
+%! pause (0.5);
 %! for i = i:0.005:0.7
 %!   waitbar (i, h);
 %! endfor
 %! waitbar (i, h, "or stalling?")
-%! pause (1)
+%! pause (1);
 %! for i = i:0.003:0.8
 %!   waitbar (i, h, "just a little longer now")
 %! endfor
 %! for i = i:0.001:1
 %!   waitbar (i, h, "please don't be impatient")
 %! endfor
 %! close (h);
 
 %!demo
 %! h1 = waitbar (0, "Waitbar #1");
 %! h2 = waitbar (0, "Waitbar #2");
 %! h2pos = get (h2, "position");
 %! h2pos(1) += h2pos(3) + 50;
 %! set (h2, "position", h2pos);
-%! pause (0.5)
+%! pause (0.5);
 %! for i = 1:4
 %!   waitbar (i/4, h1);
 %!   pause (0.5);
 %!   waitbar (i/4, h2);
 %!   pause (0.5);
 %! endfor
-%! pause (0.5)
+%! pause (0.5);
 %! close (h1);
 %! close (h2);
 
 %% Test input validation
 %!error <FRAC must be between 0 and 1> waitbar (-0.5)
 %!error <FRAC must be between 0 and 1> waitbar (1.5)
 %!error <MSG must be a character string> waitbar (0.5, struct ())
 %!error <invalid number of property-value pairs> waitbar (0.5, "msg", "Name")
