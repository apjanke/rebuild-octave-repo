# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1457654437 18000
#      Thu Mar 10 19:00:37 2016 -0500
# Node ID 1da428cbf401573ef60c3fa74cc0bbec47934c90
# Parent  c5f319d0b7f57003e62ef00d65f0ac067a8b93e7
deprecate octave_config_info

* toplev.cc (F__octave_config_info__): Rename from
Foctave_config_info.  Change all uses.
* doc/interpreter/system.texi: Remove entry for octave_config_info.
* scripts/deprecated/octave_config_info.m: New file.
* scripts/deprecated/module.mk (scripts_deprecated_FCN_FILES):
Add it to the list.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -87,16 +87,17 @@ Summary of important user-visible change
     be removed from Octave 4.6 (or whatever version is the second major
     release after 4.2):
 
       Function             | Replacement
       ---------------------|------------------
       bitmax               | flintmax
       mahalanobis          | mahal in Octave-Forge statistics pkg
       md5sum               | hash
+      octve_config_info    | __octave_config_info__
       sleep                | pause
       usleep               | pause
       wavread              | audioread
       wavwrite             | audiowrite
 
  ** The following functions were deprecated in Octave 3.8 and have been
     removed from Octave 4.2.
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -525,18 +525,16 @@ referred to as a @var{grp_struct}.
 @DOCSTRING(version)
 
 @DOCSTRING(ver)
 
 @DOCSTRING(compare_versions)
 
 @DOCSTRING(license)
 
-@DOCSTRING(octave_config_info)
-
 @DOCSTRING(getrusage)
 
 @node Hashing Functions
 @section Hashing Functions
 
 It is often necessary to find if two strings or files are identical.
 This might be done by comparing them character by character and looking
 for differences.  However, this can be slow, and so comparing a hash of
diff --git a/doc/interpreter/testfun.txi b/doc/interpreter/testfun.txi
--- a/doc/interpreter/testfun.txi
+++ b/doc/interpreter/testfun.txi
@@ -136,17 +136,17 @@ block will only be run if Octave was com
 @code{svds()}, depends on having the @sc{arpack} library.  All of the tests
 for @code{svds} begin with
 
 @example
 %!testif HAVE_ARPACK
 @end example
 
 @noindent
-Review @file{config.h} or @code{octave_config_info ("build_features")}
+Review @file{config.h} or @code{__octave_config_info__ ("build_features")}
 to see some of the possible values to check.
 
 Sometimes during development there is a test that should work but is
 known to fail.  You still want to leave the test in because when the
 final code is ready the test should pass, but you may not be able to
 fix it immediately.  To avoid unnecessary bug reports for these known
 failures, mark the block with @code{xtest} rather than @code{test}:
 
diff --git a/examples/code/mex_demo.c b/examples/code/mex_demo.c
--- a/examples/code/mex_demo.c
+++ b/examples/code/mex_demo.c
@@ -1,14 +1,14 @@
 // mex_demo.c -- example of a dynamically linked function for Octave.
 
 // To use this file, your version of Octave must support dynamic
 // linking.  To find out if it does, type the command
 //
-//   octave_config_info ("ENABLE_DYNAMIC_LINKING")
+//   __octave_config_info__ ("ENABLE_DYNAMIC_LINKING")
 //
 // at the Octave prompt.  Support for dynamic linking is included if
 // this expression is true.
 //
 // To compile this file, type the command
 //
 //   mkoctfile --mex mex_demo.c
 //
diff --git a/examples/code/oct_demo.cc b/examples/code/oct_demo.cc
--- a/examples/code/oct_demo.cc
+++ b/examples/code/oct_demo.cc
@@ -1,14 +1,14 @@
 // oct_demo.cc -- example of a dynamically linked function for Octave.
 
 // To use this file, your version of Octave must support dynamic
 // linking.  To find out if it does, type the command
 //
-//   octave_config_info ("ENABLE_DYNAMIC_LINKING")
+//   __octave_config_info__ ("ENABLE_DYNAMIC_LINKING")
 //
 // at the Octave prompt.  Support for dynamic linking is included if
 // this expression is true.
 //
 // To compile this file, type the command
 //
 //   mkoctfile oct_demo.cc
 //
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -861,17 +861,17 @@ read_mat5_binary_element (std::istream& 
                 std::string mroot =
                   m0.contents ("matlabroot").string_value ();
 
                 if ((fpath.length () >= mroot.length ())
                     && fpath.substr (0, mroot.length ()) == mroot
                     && OCTAVE_EXEC_PREFIX != mroot)
                   {
                     // If fpath starts with matlabroot, and matlabroot
-                    // doesn't equal octave_config_info ("exec_prefix")
+                    // doesn't equal __octave_config_info__ ("exec_prefix")
                     // then the function points to a version of Octave
                     // or Matlab other than the running version. In that
                     // case we replace with the same function in the
                     // running version of Octave?
 
                     // First check if just replacing matlabroot is enough
                     std::string str = OCTAVE_EXEC_PREFIX +
                                       fpath.substr (mroot.length ());
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -1335,20 +1335,20 @@ find_config_info (const octave_scalar_ma
 
       if (! c.is_empty ())
         return c(0);
     }
 
   return octave_value ();
 }
 
-DEFUN (octave_config_info, args, ,
+DEFUN (__octave_config_info__, args, ,
        "-*- texinfo -*-\n\
-@deftypefn  {} {} octave_config_info ()\n\
-@deftypefnx {} {} octave_config_info (@var{option})\n\
+@deftypefn  {} {} __octave_config_info__ ()\n\
+@deftypefnx {} {} __octave_config_info__ (@var{option})\n\
 Return a structure containing configuration and installation information for\n\
 Octave.\n\
 \n\
 If @var{option} is a string, return the configuration information for the\n\
 specified option.\n\
 \n\
 @seealso{computer}\n\
 @end deftypefn")
@@ -1681,45 +1681,45 @@ specified option.\n\
 
   if (nargin > 1)
     print_usage ();
 
   octave_value_list retval;
 
   if (nargin == 1)
     {
-      std::string arg = args(0).xstring_value ("octave_config_info: OPTION argument must be a string");
+      std::string arg = args(0).xstring_value ("__octave_config_info__: OPTION argument must be a string");
 
       octave_value info = find_config_info (config, arg);
 
       if (info.is_undefined ())
         info = find_config_info (build_env, arg);
 
       if (info.is_undefined ())
         info = find_config_info (build_features, arg);
 
       if (info.is_undefined ())
-        error ("octave_config_info: no info for '%s'", arg.c_str ());
+        error ("__octave_config_info__: no info for '%s'", arg.c_str ());
 
       return info;
     }
   else
     retval = ovl (config);
 
   return retval;
 }
 
 /*
-%!assert (ischar (octave_config_info ("version")))
+%!assert (ischar (__octave_config_info__ ("version")))
 %!test
-%! x = octave_config_info ();
+%! x = __octave_config_info__ ();
 %! assert (isstruct (x));
 %! assert (! isempty (x));
 
-%!error octave_config_info (1, 2)
+%!error __octave_config_info__ (1, 2)
 */
 
 #if defined (__GNUG__) && defined (DEBUG_NEW_DELETE)
 
 int debug_new_delete = 0;
 
 typedef void (*vfp)(void);
 extern vfp __new_handler;
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1280,18 +1280,18 @@ octave_fcn_handle::load_hdf5 (octave_hdf
 %! hdld = @svd;
 %! hbi = @log2;
 %! f2 = f;
 %! g2 = g;
 %! hm2 = hm;
 %! hdld2 = hdld;
 %! hbi2 = hbi;
 %! modes = {"-text", "-binary"};
-%! if (isfield (octave_config_info, "HAVE_HDF5")
-%!     && octave_config_info ("HAVE_HDF5"))
+%! if (isfield (__octave_config_info__, "HAVE_HDF5")
+%!     && __octave_config_info__ ("HAVE_HDF5"))
 %!   modes(end+1) = "-hdf5";
 %! endif
 %! for i = 1:numel (modes)
 %!   mode = modes{i};
 %!   nm = tempname ();
 %!   unwind_protect
 %!     f2 (1); # bug #33857
 %!     save (mode, nm, "f2", "g2", "hm2", "hdld2", "hbi2");
@@ -1333,18 +1333,18 @@ Test for bug #35876
 %! hdld = @svd;
 %! hbi = @log2;
 %! f2 = f;
 %! g2 = g;
 %! hm2 = hm;
 %! hdld2 = hdld;
 %! hbi2 = hbi;
 %! modes = {"-text", "-binary"};
-%! if (isfield (octave_config_info, "HAVE_HDF5")
-%!     && octave_config_info ("HAVE_HDF5"))
+%! if (isfield (__octave_config_info__, "HAVE_HDF5")
+%!     && __octave_config_info__ ("HAVE_HDF5"))
 %!   modes(end+1) = "-hdf5";
 %! endif
 %! for i = 1:numel (modes)
 %!   mode = modes{i};
 %!   nm = tempname ();
 %!   unwind_protect
 %!     fcn_handle_save_recurse (2, mode, nm, f2, g2, hm2, hdld2, hbi2);
 %!     clear f2 g2 hm2 hdld2 hbi2
diff --git a/scripts/deprecated/dump_prefs.m b/scripts/deprecated/dump_prefs.m
--- a/scripts/deprecated/dump_prefs.m
+++ b/scripts/deprecated/dump_prefs.m
@@ -23,17 +23,16 @@
 ## @code{dump_prefs} is deprecated and will be removed in Octave version 4.4.
 ## Please use individual preference get/set routines in all new code.
 ##
 ## Dump the current settings of all user preferences to stdout in a format that
 ## can be parsed by Octave later.
 ##
 ## If the optional argument @var{fid} is given then the results are written to
 ## the file specified by file descriptor @var{fid}.
-## @seealso{octave_config_info}
 ## @end deftypefn
 
 ## Author: jwe
 
 ## Deprecated in 4.0
 
 function dump_prefs (fid)
 
diff --git a/scripts/deprecated/module.mk b/scripts/deprecated/module.mk
--- a/scripts/deprecated/module.mk
+++ b/scripts/deprecated/module.mk
@@ -12,16 +12,17 @@ scripts_deprecated_FCN_FILES = \
   scripts/deprecated/gmap40.m \
   scripts/deprecated/isstr.m \
   scripts/deprecated/loadaudio.m \
   scripts/deprecated/luinc.m \
   scripts/deprecated/mahalanobis.m \
   scripts/deprecated/md5sum.m \
   scripts/deprecated/mouse_wheel_zoom.m \
   scripts/deprecated/nfields.m \
+  scripts/deprecated/octave_config_info.m \
   scripts/deprecated/octave_tmp_file_name.m \
   scripts/deprecated/playaudio.m \
   scripts/deprecated/saveaudio.m \
   scripts/deprecated/setaudio.m \
   scripts/deprecated/sleep.m \
   scripts/deprecated/syl.m \
   scripts/deprecated/usage.m \
   scripts/deprecated/usleep.m \
diff --git a/scripts/deprecated/octave_config_info.m b/scripts/deprecated/octave_config_info.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/octave_config_info.m
@@ -0,0 +1,88 @@
+## Copyright (C) 2016 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn  {Built-in Function} {} octave_config_info ()
+## @deftypefnx {Built-in Function} {} octave_config_info (@var{option})
+##
+## @code{octave_config_info{} is deprecated and will be removed in
+## Octave version 4.6.
+##
+## Return a structure containing configuration and installation
+## information for Octave. 
+##
+## If @var{option} is a string, return the configuration information for
+## the specified option.
+##
+## @seealso{computer}
+## @end deftypefn
+
+## Deprecated in version 4.2
+
+function [retval, build_env_cell] = octave_config_info (option)
+
+  persistent warned = false;
+  if (! warned)
+    warned = true;
+    warning ("Octave:deprecated-function",
+             "octave_config_info is obsolete and will be removed from a future version of Octave, please use __octave_config_info__ instead.");
+  endif
+
+  if (nargin > 1)
+    print_usage ();
+  endif
+
+  if (nargin == 0)
+    info = __octave_config_info__ ();
+    ## Structure layout has changed.
+
+    dld = info.dld;
+    float_format = info.float_format;
+    words_big_endian = info.words_big_endian;
+    words_little_endian = info.words_little_endian;
+
+    features = info.build_features;
+
+    env = info.build_environment;
+    env_fields = fieldnames (env);
+    env_vals = struct2cell (env);
+    env_cell = [env_fields, env_vals]';
+
+    info = rmfield (info, {"dld", "float_format", "words_big_endian", ...
+                           "words_little_endian", "build_features", ...
+                           "build_environment"});
+
+    other_fields = fieldnames (info);
+    other_vals = struct2cell (info);
+    other_cell = [other_fields, other_vals]';
+
+    retval = struct ("dld", dld,
+                     "float_format", float_format,
+                     "words_big_endian", words_big_endian,
+                     "words_little_endian", words_little_endian,
+                     "features", features,
+                     env_cell{:}, other_cell{:});
+  else
+    if (strcmp (option, "features"))
+      option = "build_features";
+    endif
+    retval = __octave_config_info__ (option);
+  endif
+
+endfunction
+
diff --git a/scripts/help/doc.m b/scripts/help/doc.m
--- a/scripts/help/doc.m
+++ b/scripts/help/doc.m
@@ -61,17 +61,17 @@ function retval = doc (function_name)
 
       if (ftype == 2 || ftype == 3)
         ffile = which (function_name);
       else
         ffile = "";
       endif
 
       if (isempty (ffile))
-        info_dir = octave_config_info ("infodir");
+        info_dir = __octave_config_info__ ("infodir");
       else
         info_dir = fileparts (ffile);
       endif
 
       ## Determine if a file called doc.info exist in the same
       ## directory as the function.
 
       info_file_name = fullfile (info_dir, "doc.info");
diff --git a/scripts/miscellaneous/computer.m b/scripts/miscellaneous/computer.m
--- a/scripts/miscellaneous/computer.m
+++ b/scripts/miscellaneous/computer.m
@@ -55,56 +55,56 @@ function [c, maxsize, endian] = computer
 
   if (nargin > 1)
     print_usage ();
   elseif (nargin == 1 && ! strcmpi (a, "arch"))
     error ('computer: "arch" is only valid argument');
   endif
 
   if (nargin == 0)
-    msg = octave_config_info ("canonical_host_type");
+    msg = __octave_config_info__ ("canonical_host_type");
 
     if (strcmp (msg, "unknown"))
       msg = "Hi Dave, I'm a HAL-9000";
     endif
 
     if (nargout == 0)
       disp (msg);
     else
       c = msg;
       if (isargout (2))
-        if (octave_config_info ("ENABLE_64"))
+        if (__octave_config_info__ ("ENABLE_64"))
           maxsize = 2^63-1;
         else
           maxsize = 2^31-1;
         endif
       endif
       if (isargout (3))
-        if (octave_config_info ("words_big_endian"))
+        if (__octave_config_info__ ("words_big_endian"))
           endian = "B";
-        elseif (octave_config_info ("words_little_endian"))
+        elseif (__octave_config_info__ ("words_little_endian"))
           endian = "L";
         else
           endian = "?";
         endif
       endif
     endif
   else
     ## "arch" argument asked for
-    tmp = ostrsplit (octave_config_info ("canonical_host_type"), "-");
+    tmp = ostrsplit (__octave_config_info__ ("canonical_host_type"), "-");
     if (numel (tmp) == 4)
       c = sprintf ("%s-%s-%s", tmp{4}, tmp{3}, tmp{1});
     else
       c = sprintf ("%s-%s", tmp{3}, tmp{1});
     endif
 
   endif
 
 endfunction
 
 
 %!assert (ischar (computer ()))
-%!assert (computer (), octave_config_info ("canonical_host_type"))
+%!assert (computer (), __octave_config_info__ ("canonical_host_type"))
 %!assert (ischar (computer ("arch")))
 
 %!error computer (1,2)
 %!error <"arch" is only valid argument> computer ("xyz")
 
diff --git a/scripts/miscellaneous/ismac.m b/scripts/miscellaneous/ismac.m
--- a/scripts/miscellaneous/ismac.m
+++ b/scripts/miscellaneous/ismac.m
@@ -20,17 +20,17 @@
 ## @deftypefn {} {} ismac ()
 ## Return true if Octave is running on a Mac OS X system and false otherwise.
 ## @seealso{isunix, ispc}
 ## @end deftypefn
 
 function retval = ismac ()
 
   if (nargin == 0)
-    retval = octave_config_info ("mac");
+    retval = __octave_config_info__ ("mac");
   else
     print_usage ();
   endif
 
 endfunction
 
 
 %!assert (islogical (ismac ()))
diff --git a/scripts/miscellaneous/ispc.m b/scripts/miscellaneous/ispc.m
--- a/scripts/miscellaneous/ispc.m
+++ b/scripts/miscellaneous/ispc.m
@@ -20,17 +20,17 @@
 ## @deftypefn {} {} ispc ()
 ## Return true if Octave is running on a Windows system and false otherwise.
 ## @seealso{isunix, ismac}
 ## @end deftypefn
 
 function retval = ispc ()
 
   if (nargin == 0)
-    retval = octave_config_info ("windows");
+    retval = __octave_config_info__ ("windows");
   else
     print_usage ();
   endif
 
 endfunction
 
 
 %!assert (islogical (ispc ()))
diff --git a/scripts/miscellaneous/isunix.m b/scripts/miscellaneous/isunix.m
--- a/scripts/miscellaneous/isunix.m
+++ b/scripts/miscellaneous/isunix.m
@@ -20,17 +20,17 @@
 ## @deftypefn {} {} isunix ()
 ## Return true if Octave is running on a Unix-like system and false otherwise.
 ## @seealso{ismac, ispc}
 ## @end deftypefn
 
 function retval = isunix ()
 
   if (nargin == 0)
-    retval = octave_config_info ("unix");
+    retval = __octave_config_info__ ("unix");
   else
     print_usage ();
   endif
 
 endfunction
 
 
 %!assert (islogical (isunix ()))
diff --git a/scripts/miscellaneous/mkoctfile.m b/scripts/miscellaneous/mkoctfile.m
--- a/scripts/miscellaneous/mkoctfile.m
+++ b/scripts/miscellaneous/mkoctfile.m
@@ -139,18 +139,18 @@
 ## @end group
 ## @end example
 ##
 ## @end table
 ## @end deftypefn
 
 function [output, status] = mkoctfile (varargin)
 
-  bindir = octave_config_info ("bindir");
-  ext = octave_config_info ("EXEEXT");
+  bindir = __octave_config_info__ ("bindir");
+  ext = __octave_config_info__ ("EXEEXT");
 
   shell_script = fullfile (bindir,
                            sprintf ("mkoctfile-%s%s", OCTAVE_VERSION, ext));
 
   if (! exist (shell_script, "file"))
     __gripe_missing_component__ ("mkoctfile", "mkoctfile");
   endif
 
diff --git a/scripts/miscellaneous/private/display_info_file.m b/scripts/miscellaneous/private/display_info_file.m
--- a/scripts/miscellaneous/private/display_info_file.m
+++ b/scripts/miscellaneous/private/display_info_file.m
@@ -21,17 +21,17 @@
 
 function display_info_file (func, package, file)
 
   if (! ischar (package))
     error ("%s: PACKAGE must be a string", func);
   endif
 
   if (strcmpi (package, "octave"))
-    octetcdir = octave_config_info ("octetcdir");
+    octetcdir = __octave_config_info__ ("octetcdir");
     filepath  = fullfile (octetcdir, file);
   else
     installed = pkg ("list");
     names     = cellfun (@(x) x.name, installed, "UniformOutput", false);
     pos       = strcmpi (names, package);
     if (! any (pos))
       error ("%s: package '%s' is not installed.", func, package);
     endif
diff --git a/scripts/miscellaneous/ver.m b/scripts/miscellaneous/ver.m
--- a/scripts/miscellaneous/ver.m
+++ b/scripts/miscellaneous/ver.m
@@ -42,17 +42,17 @@
 ##
 ## @item Revision
 ## Revision of the package.
 ##
 ## @item Date
 ## Date of the version/revision.
 ## @end table
 ##
-## @seealso{version, octave_config_info, usejava, pkg}
+## @seealso{version, usejava, pkg}
 ## @end deftypefn
 
 ## Author: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function retval = ver (package = "")
 
   if (nargin > 1)
     print_usage ();
diff --git a/scripts/path/pathdef.m b/scripts/path/pathdef.m
--- a/scripts/path/pathdef.m
+++ b/scripts/path/pathdef.m
@@ -58,17 +58,17 @@ function val = pathdef ()
     user_path = __extractpath__ (user_octaverc);
     if (! isempty (user_path))
       val = user_path;
       return;
     endif
   endif
 
   ## No user octaverc file, locate the site octaverc file.
-  pathdir = octave_config_info ("localstartupfiledir");
+  pathdir = __octave_config_info__ ("localstartupfiledir");
   site_octaverc = fullfile (pathdir, "octaverc");
   site_path = __extractpath__ (site_octaverc);
   if (! isempty (site_path))
     val = site_path;
     return;
   endif
 
   ## No project, user, or site octaverc file.  Use Octave's default.
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -331,17 +331,17 @@ function [local_packages, global_package
         auto = -1;
       case "-auto"
         auto = 1;
       case "-verbose"
         verbose = true;
         ## Send verbose output to pager immediately.  Change setting locally.
         page_output_immediately (true, "local");
       case "-forge"
-        if (! octave_config_info ("CURL_LIBS"))
+        if (! __octave_config_info__ ("CURL_LIBS"))
           error ("pkg: can't download from forge without the cURL library");
         endif
         octave_forge = true;
       case "-local"
         global_install = false;
         if (! user_prefix)
           [prefix, archprefix] = default_prefix (global_install);
         endif
diff --git a/scripts/pkg/private/configure_make.m b/scripts/pkg/private/configure_make.m
--- a/scripts/pkg/private/configure_make.m
+++ b/scripts/pkg/private/configure_make.m
@@ -21,19 +21,19 @@
 ## @deftypefn {} {} configure_make (@var{desc}, @var{packdir}, @var{verbose})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function configure_make (desc, packdir, verbose)
   ## Perform ./configure, make, make install in "src".
   if (exist (fullfile (packdir, "src"), "dir"))
     src = fullfile (packdir, "src");
-    octave_bindir = octave_config_info ("bindir");
+    octave_bindir = __octave_config_info__ ("bindir");
     ver = version ();
-    ext = octave_config_info ("EXEEXT");
+    ext = __octave_config_info__ ("EXEEXT");
     mkoctfile_program = fullfile (octave_bindir, ...
                                   sprintf ("mkoctfile-%s%s", ver, ext));
     octave_config_program = fullfile (octave_bindir, ...
                                       sprintf ("octave-config-%s%s", ver, ext));
     octave_binary = fullfile (octave_bindir, sprintf ("octave-%s%s", ver, ext));
 
     if (! exist (mkoctfile_program, "file"))
       __gripe_missing_component__ ("pkg", "mkoctfile");
diff --git a/scripts/pkg/private/default_prefix.m b/scripts/pkg/private/default_prefix.m
--- a/scripts/pkg/private/default_prefix.m
+++ b/scripts/pkg/private/default_prefix.m
@@ -20,20 +20,20 @@
 ## @deftypefn {} {[@var{prefix}, @var{archprefix} =} default_prefix (@var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [prefix, archprefix] = default_prefix (global_install, desc)
   if (global_install)
     prefix = fullfile (OCTAVE_HOME (), "share", "octave", "packages");
     if (nargin == 2)
-      archprefix = fullfile (octave_config_info ("libdir"), "octave",
+      archprefix = fullfile (__octave_config_info__ ("libdir"), "octave",
                              "packages", [desc.name "-" desc.version]);
     else
-      archprefix = fullfile (octave_config_info ("libdir"), "octave",
+      archprefix = fullfile (__octave_config_info__ ("libdir"), "octave",
                              "packages");
     endif
   else
     prefix = tilde_expand (fullfile ("~", "octave"));
     archprefix = prefix;
   endif
 endfunction
 
diff --git a/scripts/pkg/private/getarch.m b/scripts/pkg/private/getarch.m
--- a/scripts/pkg/private/getarch.m
+++ b/scripts/pkg/private/getarch.m
@@ -18,13 +18,13 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {@var{arch} =} getarch ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 function arch = getarch ()
-  persistent _arch = [octave_config_info("canonical_host_type"), "-", ...
-                      octave_config_info("api_version")];
+  persistent _arch = [__octave_config_info__("canonical_host_type"), "-", ...
+                      __octave_config_info__("api_version")];
   arch = _arch;
 endfunction
 
diff --git a/scripts/startup/version-rcfile b/scripts/startup/version-rcfile
--- a/scripts/startup/version-rcfile
+++ b/scripts/startup/version-rcfile
@@ -3,17 +3,17 @@
 ## If the environment variable OCTAVE_VERSION_INITFILE is set when Octave
 ## starts, then that file is executed instead of this file.
 ##
 ## This file contains commands that should be executed each time Octave starts
 ## for every user at this site.
 
 ## Configure readline using the file inputrc in the Octave startup directory.
 readline_read_init_file (sprintf ("%s%s%s",
-                                  octave_config_info ("startupfiledir"),
+                                  __octave_config_info__ ("startupfiledir"),
                                   filesep, "inputrc"));
 
 ## Configure LESS pager if present
 if (strcmp (PAGER (), "less") && isempty (getenv ("LESS")))
   PAGER_FLAGS ('-e -X -P"-- less ?pB(%pB\\%):--. (f)orward, (b)ack, (q)uit$"');
 endif
 
 ## This appears here instead of in the pkg/PKG_ADD file so that --norc
diff --git a/scripts/testfun/__have_feature__.m b/scripts/testfun/__have_feature__.m
--- a/scripts/testfun/__have_feature__.m
+++ b/scripts/testfun/__have_feature__.m
@@ -18,19 +18,19 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {} {} __have_feature__ (feature)
 ## Undocumented internal function.
 ## @end deftypefn
 
 function retval = __have_feature__ (feature)
   if (strncmp (feature, "ENABLE_", 7))
-    features = octave_config_info ();
+    features = __octave_config_info__ ();
   else
-    features = octave_config_info ("build_features");
+    features = __octave_config_info__ ("build_features");
   endif
   if (iscellstr (feature))
     retval = (all (isfield (features, feature))
               && cellfun (@(x) features.(x), feature));
   elseif (ischar (feature))
     retval = isfield (features, feature) && features.(feature);
   else
     retval = false;
diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -18,21 +18,21 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {} {} __run_test_suite__ (@var{fcndirs}, @var{fixedtestdirs})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [pass, fail, xfail, skip] = __run_test_suite__ (fcndirs, fixedtestdirs)
 
-  testsdir = octave_config_info ("octtestsdir");
+  testsdir = __octave_config_info__ ("octtestsdir");
   libinterptestdir = fullfile (testsdir, "libinterp");
   liboctavetestdir = fullfile (testsdir, "liboctave");
   fixedtestdir = fullfile (testsdir, "fixed");
-  fcnfiledir = octave_config_info ("fcnfiledir");
+  fcnfiledir = __octave_config_info__ ("fcnfiledir");
   if (nargin == 0)
     fcndirs = { liboctavetestdir, libinterptestdir, fcnfiledir };
     fixedtestdirs = { fixedtestdir };
   endif
   global files_with_no_tests;
   global files_with_tests;
   files_with_no_tests = {};
   files_with_tests = {};
diff --git a/test/system.tst b/test/system.tst
--- a/test/system.tst
+++ b/test/system.tst
@@ -385,11 +385,11 @@
 %! endgrent ();
 %! assert (strcmp (x.name, y.name) && x.gid == y.gid);
 
 %!error <Invalid call to setgrent> setgrent (1)
 %!error <Invalid call to endgrent> endgrent (1)
 
 %!assert (isieee () == 1 || isieee () == 0)
 
-%!assert (isstruct (octave_config_info ()))
+%!assert (isstruct (__octave_config_info__ ()))
 
 %!assert (isstruct (getrusage ()))
