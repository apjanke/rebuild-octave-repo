# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1341217579 -7200
#      Mon Jul 02 10:26:19 2012 +0200
# Node ID e437bacb3ef6cd062d4e2df0d2341922f9050347
# Parent  93e5ade3fda43a14aef811a3224a4086cd41a162
Fix ppval when pp.dim > 1 and xi is an array (bug #36665)

* ppval.m: Correctly evaluate a piecewise polynomial structure when
pp.dim > 1 and xi is a multi-dimensional array. Added a test for this bug.

diff --git a/scripts/polynomial/ppval.m b/scripts/polynomial/ppval.m
--- a/scripts/polynomial/ppval.m
+++ b/scripts/polynomial/ppval.m
@@ -63,18 +63,18 @@ function yi = ppval (pp, xi)
   else
     Pidx = reshape (Pidx, [sxi, k, d]);
     Pidx = shiftdim (Pidx, length (sxi));
     dimvec = [d, sxi];
   endif
   ndv = length (dimvec);
 
   ## Offsets.
-  dx = (xi - x(idx));
-  dx = repmat (dx, [prod(d), 1]);
+  dx = (xi - x(idx))(:);
+  dx = repmat (dx, [1, prod(d)])';
   dx = reshape (dx, dimvec);
   dx = shiftdim (dx, ndv - 1);
 
   ## Use Horner scheme.
   yi = Pidx;
   if (k > 1)
     yi = shiftdim (reshape (Pidx(1,:), dimvec), ndv - 1);
   endif
@@ -114,9 +114,16 @@ endfunction
 %!assert (ppval (pp, 2.1), 1.1, abserr)
 %!assert (ppval (pp, xi), [1.1 1.3 1.9 1.1], abserr)
 %!assert (ppval (pp, xi.'), [1.1 1.3 1.9 1.1].', abserr)
 %!assert (ppval (pp2, 1.1), [1.1;1.1], abserr)
 %!assert (ppval (pp2, 2.1), [1.1;1.1], abserr)
 %!assert (ppval (pp2, xi), [1.1 1.3 1.9 1.1;1.1 1.3 1.9 1.1], abserr)
 %!assert (ppval (pp2, xi'), [1.1 1.3 1.9 1.1;1.1 1.3 1.9 1.1], abserr)
 %!assert (size (ppval (pp2, [xi;xi])), [2 2 4])
-
+%!test
+%! breaks = [0, 1, 2, 3];
+%! coefs = rand (6, 4);
+%! pp = mkpp (breaks, coefs, 2);
+%! ret = zeros (2, 4, 2);
+%! ret(:,:,1) = ppval (pp, breaks');
+%! ret(:,:,2) = ppval (pp, breaks');
+%! assert (ppval (pp, [breaks',breaks']), ret)
