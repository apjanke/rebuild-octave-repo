# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1265755462 18000
#      Tue Feb 09 17:44:22 2010 -0500
# Node ID 7c7685cc0676d76e0902c5f8eeafc9c859896baa
# Parent  8cf666139297267ea7875adb99bb5ada6cc86a6b
fix reload warning for dynamically linked functions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-02-09  John W. Eaton  <jwe@octave.org>
+
+	* dynamic-ld.cc (clear): Only warn if reloading a dynamically
+	linked file that defines multiple functions.
+
 2010-02-09  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/find.cc (find_nonzero_elem_idx (const Array<T>&, ...)): 
 	Optimize creation of result indices.
 	* data.cc (Fsort): Ditto.
 
 2010-02-09  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -303,33 +303,37 @@ octave_dynamic_loader::instance_ok (void
       ::error ("unable to create dynamic loader object!");
 
       retval = false;
     }
 
   return retval;
 }
 
-static
-void do_clear_function (const std::string& fcn_name)
+static void
+do_clear_function (const std::string& fcn_name)
 {
   warning_with_id ("Octave:reload-forces-clear", "  %s", fcn_name.c_str ());
 
   symbol_table::clear_dld_function (fcn_name);
 }
 
 static void
 clear (octave_shlib& oct_file)
 {
   if (oct_file.number_of_functions_loaded () > 1)
-    warning_with_id ("Octave:reload-forces-clear",
-		     "reloading %s clears the following functions:",
-		     oct_file.file_name().c_str ());
+    {
+      warning_with_id ("Octave:reload-forces-clear",
+                       "reloading %s clears the following functions:",
+                       oct_file.file_name().c_str ());
 
-  octave_shlib_list::remove (oct_file, do_clear_function);
+      octave_shlib_list::remove (oct_file, do_clear_function);
+    }
+  else
+    octave_shlib_list::remove (oct_file, symbol_table::clear_dld_function);
 }
 
 octave_function *
 octave_dynamic_loader::do_load_oct (const std::string& fcn_name,
 				    const std::string& file_name,
 				    bool relative)
 {
   octave_function *retval = 0;
