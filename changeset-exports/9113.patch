# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1239583253 14400
#      Sun Apr 12 20:40:53 2009 -0400
# Node ID 4bb94a71913b97b802634e7b5fc77fcdd8ae882a
# Parent  f5b51f54f44ee22d3638a2212ddf520ad47c0e25
__gnuplot_open_stream__.m: New function and its application.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2009-04-12  Ben Abbott <bpabbott@mac.com>
+
+	* plot/__gnuplot_open_stream__.m: New function.
+	* plot/__gnuplot_get_var__.m: If not open, open the gnuplot plot stream.
+	* plot/gnuplot_drawnow.m: Replace internal function open_gnuplot_stream
+	with new __gnuplot_open_stream__.
+
 2009-04-11  David Bateman  <dbateman@free.fr>
 
 	* geometry/trisurf.m: New file.
 	* geometry/Makefile.in (SOURCES): Add it here.
 	* geometry/trimesh.m: Convert to using 3D patches.
 	* plot/__go_draw_axes__.m: Allow 3D filled triangular patches.
 	* plot/__patch__.m: Rewrite to allow update of dependent variables
 	with listener functions amongst themselves.
diff --git a/scripts/plot/Makefile.in b/scripts/plot/Makefile.in
--- a/scripts/plot/Makefile.in
+++ b/scripts/plot/Makefile.in
@@ -44,16 +44,17 @@ SOURCES = \
   __clabel__.m \
   __contour__.m \
   __default_plot_options__.m \
   __errcomm__.m \
   __errplot__.m \
   __ezplot__.m \
   __gnuplot_get_var__.m \
   __gnuplot_has_feature__.m \
+  __gnuplot_open_stream__.m \
   __go_close_all__.m \
   __go_draw_axes__.m \
   __go_draw_figure__.m \
   __gnuplot_ginput__.m \
   __gnuplot_version__.m \
   __interp_cube__.m \
   __line__.m \
   __marching_cube__.m \
diff --git a/scripts/plot/__gnuplot_get_var__.m b/scripts/plot/__gnuplot_get_var__.m
--- a/scripts/plot/__gnuplot_get_var__.m
+++ b/scripts/plot/__gnuplot_get_var__.m
@@ -32,17 +32,21 @@ function gp_var_value = __gnuplot_get_va
   if (nargin < 2)
     print_usage ();
   endif
   if (nargin < 3)
     fmt = '';
   endif
 
   if (numel (h) == 1 && isfigure (h))
-    ostream = get (h, "__plot_stream__");
+    if (isempty (get (gcf, "__plot_stream__")))
+      ostream = __gnuplot_open_stream__ (2, h);
+    else
+      ostream = get (h, "__plot_stream__");
+    endif
   else
     ostream = h;
   endif
   if (numel (ostream) < 1)
     error ("__gnuplot_get_var__: stream to gnuplot not open");
   elseif (ispc ())
     if (numel (ostream) == 1)
       error ("__gnuplot_get_var__: Need mkfifo that is not implemented under Windows");
diff --git a/scripts/plot/__gnuplot_open_stream__.m b/scripts/plot/__gnuplot_open_stream__.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/__gnuplot_open_stream__.m
@@ -0,0 +1,41 @@
+## Copyright (C) 2009 Ben Abbott
+## 
+## This program is free software; you can redistribute it and/or modify
+## it under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2 of the License, or
+## (at your option) any later version.
+## 
+## This program is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+## 
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{stream}} __gnuplot_open_stream__ (@var{npipes}, @var{h})
+## Undocumented internal function.
+## @end deftypefn
+
+## Author: Ben Abbott <bpabbott@mac.com>
+## Created: 2009-04-11
+
+function plot_stream = __gnuplot_open_stream__ (npipes, h)
+  cmd = gnuplot_binary ();
+  if (npipes > 1)
+    [plot_stream(1), plot_stream(2), pid] = popen2 (cmd);
+    if (pid < 0)
+      error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
+    endif
+  else
+    plot_stream = popen (cmd, "w");
+    if (plot_stream < 0)
+      error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
+    endif
+  endif
+  if (nargin > 1)
+    set (h, "__plot_stream__", plot_stream);
+  endif
+endfunction
diff --git a/scripts/plot/gnuplot_drawnow.m b/scripts/plot/gnuplot_drawnow.m
--- a/scripts/plot/gnuplot_drawnow.m
+++ b/scripts/plot/gnuplot_drawnow.m
@@ -36,17 +36,17 @@ function gnuplot_drawnow (h, term, file,
   if (nargin >= 3 && nargin <= 5)
     ## Produce various output formats, or redirect gnuplot stream to a
     ## debug file.
     plot_stream = [];
     fid = [];
     printing = ! output_to_screen (gnuplot_trim_term (term));
     default_plot_stream = get (h, "__plot_stream__");
     unwind_protect
-      plot_stream = open_gnuplot_stream (2, h);
+      plot_stream = __gnuplot_open_stream__ (2, h);
       if (__gnuplot_has_feature__ ("variable_GPVAL_TERMINALS"))
         available_terminals = __gnuplot_get_var__ (plot_stream, "GPVAL_TERMINALS");
         available_terminals = regexp (available_terminals, "\\b\\w+\\b", "match");
         gnuplot_supports_term = any (strcmpi (available_terminals,
                                               gnuplot_trim_term (term)));
       else
         gnuplot_supports_term = true;
       endif
@@ -74,17 +74,17 @@ function gnuplot_drawnow (h, term, file,
       if (! isempty (fid))
         fclose (fid);
       endif
     end_unwind_protect
   elseif (nargin == 1)
     ##  Graphics terminal for display.
     plot_stream = get (h, "__plot_stream__");
     if (isempty (plot_stream))
-      plot_stream = open_gnuplot_stream (2, h);
+      plot_stream = __gnuplot_open_stream__ (2, h);
       new_stream = true;
     else
       new_stream = false;
     endif
     enhanced = gnuplot_set_term (plot_stream (1), new_stream, h);
     __go_draw_figure__ (h, plot_stream (1), enhanced, mono, 0);
     fflush (plot_stream (1));
   else
@@ -103,34 +103,16 @@ function implicit_margin = gnuplot_impli
       ## When zero, the behavior of gnuplot changes.
       implicit_margin = 1/72;
     endif
   else
     implicit_margin = 0.0;
   endif
 endfunction
 
-function plot_stream = open_gnuplot_stream (npipes, h)
-  cmd = gnuplot_binary ();
-  if (npipes > 1)
-    [plot_stream(1), plot_stream(2), pid] = popen2 (cmd);
-    if (pid < 0)
-      error ("drawnow: failed to open connection to gnuplot");
-    endif
-  else
-    plot_stream = popen (cmd, "w");
-    if (plot_stream < 0)
-      error ("drawnow: failed to open connection to gnuplot");
-    endif
-  endif
-  if (! isempty (h))
-    set (h, "__plot_stream__", plot_stream);
-  endif
-endfunction
-
 function [enhanced, implicit_margin] = gnuplot_set_term (plot_stream, new_stream, h, term, file)
   ## Generate the gnuplot "set terminal <term> ..." command.  Include
   ## the subset of properties "position", "units", "paperposition",
   ## "paperunits", "name", and "numbertitle".  When "term" originates
   ## from print.m, it may include gnuplot terminal options.
   if (nargin < 4)
     ## This supports the gnuplot backend.
     term = gnuplot_default_term ();
