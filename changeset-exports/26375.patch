# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1546465315 18000
#      Wed Jan 02 16:41:55 2019 -0500
# Node ID f1a8a4aac3d4673fdfd58fcaf7ac93b28df40617
# Parent  0249ba4c9589f5bd6014049cd1225c0bd57b3701
# Parent  b3a2ee31dd58bb17f56a4b0d6e8f8f48ac2378d7
maint: Merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2754,17 +2754,17 @@ OCT_GUI_LINK_DEPS=""
 OCT_LINK_OPTS="$LDFLAGS"
 OCT_GUI_LINK_OPTS="$LDFLAGS"
 
 if test $link_all_deps = yes; then
   OCT_LINK_DEPS="libinterp/liboctinterp.la liboctave/liboctave.la"
   OCT_GUI_LINK_DEPS="libgui/liboctgui.la libinterp/liboctinterp.la liboctave/liboctave.la"
 
   MKOCTFILE_OCTAVE_LINK_DEPS="$LIBOCTINTERP_LINK_DEPS $MKOCTFILE_LIBOCTAVE_LINK_DEPS"
-  MKOCTFILE_OCT_LINK_DEPS="$OCT_LINK_DEPS $MKOCTFILE_LIBOCTINTERP_LINK_DEPS"
+  MKOCTFILE_OCT_LINK_DEPS="$LIBOCTINTERP $LIBOCTAVE"
 
   LIBOCTINTERP_LINK_DEPS="$LIBOCTINTERP_LINK_DEPS $LIBOCTAVE_LINK_DEPS"
   LIBOCTINTERP_LINK_OPTS="$LIBOCTINTERP_LINK_OPTS $LIBOCTAVE_LINK_OPTS"
 
   OCTAVE_LINK_DEPS="$LIBOCTINTERP_LINK_DEPS"
   OCTAVE_LINK_OPTS="$LIBOCTINTERP_LINK_OPTS"
 else
   case $host_os in
diff --git a/doc/interpreter/interpimages.m b/doc/interpreter/interpimages.m
--- a/doc/interpreter/interpimages.m
+++ b/doc/interpreter/interpimages.m
@@ -56,17 +56,17 @@ function interpimages (d, nm, typ)
     t = -2:2;
     dt = 1;
     ti =-2:0.025:2;
     dti = 0.025;
     y = sign (t);
     ys = interp1 (t,y,ti,"spline");
     yp = interp1 (t,y,ti,"pchip");
     plot (ti, ys,"r-", ti, yp,"g-");
-    legend ("spline","pchip", 4);
+    legend ("spline","pchip", "location", "southeast");
     print (outfile, d_typ);
   elseif (strcmp (nm, "interpderiv2"))
     t = -2:2;
     dt = 1;
     ti =-2:0.025:2;
     dti = 0.025;
     y = sign (t);
     ddys = diff (diff (interp1 (t,y,ti,"spline"))./dti)./dti;
diff --git a/libgui/graphics/Table.cc b/libgui/graphics/Table.cc
--- a/libgui/graphics/Table.cc
+++ b/libgui/graphics/Table.cc
@@ -51,17 +51,17 @@ along with Octave; see the file COPYING.
 #include "oct-strstrm.h"
 #include "ov-struct.h"
 
 namespace QtHandles
 {
 
   static const int AUTO_WIDTH = 75;
 
-#define AUTO_HEIGHT tp.get_fontsize () * 2 - 1
+#define AUTO_HEIGHT (tp.get_fontsize () * 2 - 1)
 
   static QSize realQSizeForTable (QTableWidget *t)
   {
     int w = t->verticalHeader ()->width () + 4;
     for (int i = 0; i < t->columnCount (); i++)
       w += t->columnWidth (i);
     int h = t->horizontalHeader ()->height () + 4;
     for (int i = 0; i < t->rowCount (); i++)
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -126,24 +126,24 @@ namespace octave
                                                 "", m_navigation_tool_bar);
     directory_up_action->setToolTip (tr ("One directory up"));
 
     m_sync_browser_directory_action
       = new QAction (resource_manager::icon ("go-first"),
                      tr ("Show Octave directory"), m_navigation_tool_bar);
     m_sync_browser_directory_action->setToolTip (
                                                  tr ("Go to current Octave directory"));
-    m_sync_browser_directory_action->setEnabled ("false");
+    m_sync_browser_directory_action->setEnabled (false);
 
     m_sync_octave_directory_action
       = new QAction (resource_manager::icon ("go-last"),
                      tr ("Set Octave directory"), m_navigation_tool_bar);
     m_sync_octave_directory_action->setToolTip (
                                                 tr ("Set Octave directory to current browser directory"));
-    m_sync_octave_directory_action->setEnabled ("false");
+    m_sync_octave_directory_action->setEnabled (false);
 
     QToolButton *popdown_button = new QToolButton ();
     popdown_button->setToolTip (tr ("Actions on current directory"));
     QMenu *popdown_menu = new QMenu ();
     popdown_menu->addAction (resource_manager::icon ("user-home"),
                              tr ("Show Home Directory"),
                              this, SLOT (popdownmenu_home (bool)));
     popdown_menu->addAction (m_sync_browser_directory_action);
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -2331,17 +2331,17 @@ namespace octave
       {
         QVector<uint> u32_str = editor_text.toUcs4 ();
         const uint32_t *src = reinterpret_cast<const uint32_t *>
                               (u32_str.data ());
 
         size_t length;
         char *res_str =
           octave_u32_conv_to_encoding_strict (_encoding.toStdString ().c_str (),
-                                              src, u32_str.length (), &length);
+                                              src, u32_str.size (), &length);
         if (! res_str)
           {
             if (errno == EILSEQ)
               can_encode = false;
           }
         else
           ::free (static_cast<void *> (res_str));
       }
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -6760,17 +6760,16 @@ axes::properties::update_font (std::stri
         }
       else if (prop == "fontweight")
         tval = get ("titlefontweight");
 
       gh_manager::get_object (get_xlabel ()).set (prop, val);
       gh_manager::get_object (get_ylabel ()).set (prop, val);
       gh_manager::get_object (get_zlabel ()).set (prop, val);
       gh_manager::get_object (get_title ()).set (prop, tval);
-
     }
 
   double dpr = device_pixel_ratio (get___myhandle__ ());
 
   gh_manager::auto_lock guard;
   txt_renderer.set_font (get ("fontname").string_value (),
                          get ("fontweight").string_value (),
                          get ("fontangle").string_value (),
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3975,28 +3975,30 @@ public:
     void update_fontweight (void)
     {
       update_font ("fontweight");
       sync_positions ();
     }
 
     void update_titlefontsizemultiplier (void)
     {
+      // update_font handles title and axis labels
       update_font ("fontsize");
       sync_positions ();
     }
 
     void update_labelfontsizemultiplier (void)
     {
       update_font ("fontsize");
       sync_positions ();
     }
 
     void update_titlefontweight (void)
     {
+      // update_font handles title and axis labels
       update_font ("fontweight");
       sync_positions ();
     }
 
     void update_outerposition (void);
     void update_position (void);
     void update_looseinset (void);
 
diff --git a/libinterp/corefcn/ls-oct-text.cc b/libinterp/corefcn/ls-oct-text.cc
--- a/libinterp/corefcn/ls-oct-text.cc
+++ b/libinterp/corefcn/ls-oct-text.cc
@@ -227,17 +227,17 @@ extract_keyword (std::istream& is, const
 //  array
 //
 // FIXME: This format is fairly rigid, and doesn't allow for arbitrary comments.
 // Someone should fix that.  It does allow arbitrary types however.
 
 // Ugh.  The signature of the compare method is not standard in older
 // versions of the GNU libstdc++.  Do this instead:
 
-#define SUBSTRING_COMPARE_EQ(s, pos, n, t) (s.substr (pos, n) == t)
+#define SUBSTRING_COMPARE_EQ(s, pos, n, t) (s.substr (pos, n) == (t))
 
 std::string
 read_text_data (std::istream& is, const std::string& filename, bool& global,
                 octave_value& tc, octave_idx_type count)
 {
   // Read name for this entry or break on EOF.
 
   std::string name = extract_keyword (is, "name");
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -6194,17 +6194,17 @@ namespace octave
     off_t xoffset = val.value ();
 
     int conv_err = 0;
 
     int origin = SEEK_SET;
 
     if (tc_origin.is_string ())
       {
-        std::string xorigin = tc_origin.string_value ("fseek: invalid value for origin");
+        std::string xorigin = tc_origin.xstring_value ("fseek: invalid value for origin");
 
         if (xorigin == "bof")
           origin = SEEK_SET;
         else if (xorigin == "cof")
           origin = SEEK_CUR;
         else if (xorigin == "eof")
           origin = SEEK_END;
         else
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -328,17 +328,17 @@ symbol_exist (const std::string& name, c
 {
   octave::interpreter& interp = octave::__get_interpreter__ ("symbol_exist");
 
   return symbol_exist (interp, name, type);
 }
 
 
 #define GET_IDX(LEN)                                                    \
-  static_cast<int> ((LEN-1) * static_cast<double> (rand ()) / RAND_MAX)
+  static_cast<int> (((LEN)-1) * static_cast<double> (rand ()) / RAND_MAX)
 
 std::string
 unique_symbol_name (const std::string& basename)
 {
   static const std::string alpha
     = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
 
   static size_t len = alpha.length ();
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -523,17 +523,17 @@ public:
             if (item->label ())
               break;
           }
 
         if (idx >= 0 && idx < m_menubar->size ())
           {
             if (uimenup.is_separator ())
               {
-                if (idx >= 0 && !(itemflags & FL_SUBMENU))
+                if (! (itemflags & FL_SUBMENU))
                   m_menubar->mode (idx, itemflags | FL_MENU_DIVIDER);
               }
             else
               m_menubar->mode (idx, itemflags & (~FL_MENU_DIVIDER));
           }
       }
   }
 
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1731,17 +1731,17 @@ Its behavior may change in the future an
 particular output format.
 
 @seealso{func2str, str2func}
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
-  octave_fcn_handle *fh = args(0).fcn_handle_value ("functions: FCN_HANDLE argument must be a function handle object");
+  octave_fcn_handle *fh = args(0).xfcn_handle_value ("functions: FCN_HANDLE argument must be a function handle object");
 
   octave_function *fcn = (fh ? fh->function_value () : nullptr);
 
   if (! fcn)
     error ("functions: FCN_HANDLE is not a valid function handle object");
 
   octave_scalar_map m;
 
@@ -1820,17 +1820,17 @@ DEFUN (func2str, args, ,
 Return a string containing the name of the function referenced by the
 function handle @var{fcn_handle}.
 @seealso{str2func, functions}
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
-  octave_fcn_handle *fh = args(0).fcn_handle_value ("func2str: FCN_HANDLE argument must be a function handle object");
+  octave_fcn_handle *fh = args(0).xfcn_handle_value ("func2str: FCN_HANDLE argument must be a function handle object");
 
   if (! fh)
     error ("func2str: FCN_HANDLE must be a valid function handle");
 
   octave_value retval;
 
   std::string fh_nm = fh->fcn_name ();
 
diff --git a/libinterp/octave-value/ov-fcn-inline.cc b/libinterp/octave-value/ov-fcn-inline.cc
--- a/libinterp/octave-value/ov-fcn-inline.cc
+++ b/libinterp/octave-value/ov-fcn-inline.cc
@@ -795,17 +795,17 @@ functions from strings is through the us
         fargs.append (std::string ("x"));
 
     }
   else if (nargin == 2 && args(1).isnumeric ())
     {
       if (! args(1).is_scalar_type ())
         error ("inline: N must be an integer");
 
-      int n = args(1).int_value ("inline: N must be an integer");
+      int n = args(1).xint_value ("inline: N must be an integer");
 
       if (n < 0)
         error ("inline: N must be a positive integer or zero");
 
       fargs.resize (n+1);
 
       fargs(0) = "x";
 
diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -3157,17 +3157,17 @@ equivalent
 @seealso{__java_set__, javaMethod, javaObject}
 @end deftypefn */)
 {
 #if defined (HAVE_JAVA)
 
   if (args.length () != 2)
     print_usage ();
 
-  std::string name = args(1).string_value ("__java_get__: NAME must be a string");
+  std::string name = args(1).xstring_value ("__java_get__: NAME must be a string");
 
   initialize_java ();
 
   JNIEnv *current_env = thread_jni_env ();
 
   octave_value retval;
 
   if (args(0).isjava ())
diff --git a/liboctave/operators/mx-inlines.cc b/liboctave/operators/mx-inlines.cc
--- a/liboctave/operators/mx-inlines.cc
+++ b/liboctave/operators/mx-inlines.cc
@@ -667,17 +667,17 @@ xis_true (const FloatComplex& x)
 inline bool
 xis_false (const FloatComplex& x)
 {
   return x == 0.0f;
 }
 
 #define OP_RED_SUM(ac, el) ac += el
 #define OP_RED_PROD(ac, el) ac *= el
-#define OP_RED_SUMSQ(ac, el) ac += el*el
+#define OP_RED_SUMSQ(ac, el) ac += (el*el)
 #define OP_RED_SUMSQC(ac, el) ac += cabsq (el)
 
 inline void
 op_dble_prod (double& ac, float el)
 {
   ac *= el;
 }
 
diff --git a/scripts/image/movie.m b/scripts/image/movie.m
--- a/scripts/image/movie.m
+++ b/scripts/image/movie.m
@@ -62,18 +62,20 @@ function movie (varargin)
 
   ## Extract possible handle argument
   hax = [];
   if (ishghandle (varargin{1}))
     typ = get (varargin{1}, "type");
     if (strcmp (typ, "axes"))
       hax = varargin{1};
     elseif (strcmp (typ, "figure"))
-      figure (varargin{1});
-      hax = gca ();
+      hax = get (varargin{1}, "currentaxes");
+      if (isempty (hax))
+        hax = axes ("parent", varargin{1});
+      endif
     else
       error ("movie: H must be a handle to an axes or figure");
     endif
     varargin(1) = [];
     nargin = nargin - 1;
     if (nargin == 0)
       print_usage ();
     endif
@@ -239,31 +241,31 @@ endfunction
 %!error <MOV must be a frame struct array> movie ({2})
 %!error <MOV must contain at least two frames>
 %! movie (struct ("cdata", [], "colormap", []));
 %!error <N must be a non-zero integer>
 %! movie (struct ("cdata", {[], []}, "colormap", []), 2.3);
 %!error <N must be a non-zero integer>
 %! movie (struct ("cdata", {[], []}, "colormap", []), [2.3 -6]);
 %!error <All elements N\(2:end\) must be valid indices into the MOV struct>
-%! movie (struct ("cdata", {[], []}, "colormap", []), [1 -1])
+%! movie (struct ("cdata", {[], []}, "colormap", []), [1 -1]);
 %!error <All elements N\(2:end\) must be valid indices into the MOV struct>
-%! movie (struct ("cdata", {[], []}, "colormap", []), [1 5])
+%! movie (struct ("cdata", {[], []}, "colormap", []), [1 5]);
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, "a")
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, "a");
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, [1 1])
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, [1 1]);
 %!error <FPS must be a numeric scalar . 0>
-%! movie (struct ("cdata", {[], []}, "colormap", []), 1, -1/12)
+%! movie (struct ("cdata", {[], []}, "colormap", []), 1, -1/12);
 %!error <empty image data at frame 1>
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   movie (hf, struct ("cdata", {[], []}, "colormap", []));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %!error <empty image data at frame 2>
 %! hf = figure ("visible", "off");
 %! unwind_protect
-%!   movie (struct ("cdata", {ones(2), []}, "colormap", []))
+%!   movie (struct ("cdata", {ones(2), []}, "colormap", []));
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -209,17 +209,17 @@ initialize (void)
       + " -I" + quote_path (vars["OCTINCLUDEDIR"]);
 #endif
 
   if (vars["INCLUDEDIR"] != "/usr/include")
     DEFAULT_INCFLAGS += " -I" + quote_path (vars["INCLUDEDIR"]);
 
   std::string DEFAULT_LFLAGS;
 
-#if defined (OCTAVE_USE_WINDOWS_API) || defined (CROSS)
+#if (defined (OCTAVE_USE_WINDOWS_API) || defined (CROSS)) || (defined __APPLE__ && defined __MACH__)
 
   // We'll be linking the files we compile with -loctinterp and
   // -loctave, so we need to know where to find them.
 
   DEFAULT_LFLAGS += "-L" + quote_path (vars["OCTLIBDIR"]);
 #endif
 
   if (vars["LIBDIR"] != "/usr/lib")
@@ -549,48 +549,40 @@ run_command (const std::string& cmd, boo
 
 bool
 is_true (const std::string& s)
 {
   return (s == "yes" || s == "true");
 }
 
 static std::string
-do_getenv (const std::string& name)
-{
-  char *value = ::getenv (name.c_str ());
-
-  return value ? value : "";
-}
-
-static std::string
 get_temp_directory (void)
 {
   std::string tempd;
 
 #if defined (__MINGW32__) || defined (_MSC_VER)
 
-  tempd = do_getenv ("TEMP");
+  tempd = octave_getenv ("TEMP");
 
   if (tempd.empty ())
-    tempd = do_getenv ("TMP");
+    tempd = octave_getenv ("TMP");
 
 #if defined (P_tmpdir)
   if (tempd.empty ())
     tempd = P_tmpdir;
 #endif
 
   // Some versions of MinGW and MSVC either don't define P_tmpdir, or
   // define it to a single backslash.  In such cases just use C:\temp.
   if (tempd.empty () || tempd == R"(\)")
     tempd = R"(c:\temp)";
 
 #else
 
-  tempd = do_getenv ("TMP");
+  tempd = octave_getenv ("TMP");
 
 #if defined (P_tmpdir)
   if (tempd.empty ())
     tempd = P_tmpdir;
 #else
   if (tempd.empty ())
     tempd = "/tmp";
 #endif
