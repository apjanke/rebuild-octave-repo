# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1503686944 -7200
#      Fri Aug 25 20:49:04 2017 +0200
# Node ID f5b81e587bb51f9833158f80472a541d9620d693
# Parent  9c736cc2ee948eb6fb5561a78caa0d386adee0e0
only enable toolbar of variable editor if a tab is present

* variable-editor.cc (construct_tool_bar): disable toolbar at start up;
  (edit_variable): enable toolbar if new tab is the first one;
  (closeTab): disable toolbar if closed tab was the last one

diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -175,16 +175,18 @@ variable_editor::construct_tool_bar ()
 
 
 
   tool_bar->addSeparator ();
   tool_bar->addAction
     (QIcon (":/actions/icons/arrow_up.png"),
      tr ("Up"),
      this, SLOT (up ()));
+
+  tool_bar->setEnabled (false);  // Disabled when no tab is present
 }
 
 /*variable_editor::~variable_editor ()
 {
 }*/
 
 namespace
 {
@@ -260,16 +262,20 @@ variable_editor::edit_variable (const QS
   connect (model, SIGNAL (dataChanged(const QModelIndex&,const QModelIndex&)),
            this, SLOT (callUpdate(const QModelIndex&,const QModelIndex&)));
 
   vbox->addWidget (table);
 
   page->setProperty ("data", QVariant::fromValue (table_data (table)));
   int tab_idx = tab_widget->addTab (page, name);
   tab_widget->setCurrentIndex (tab_idx);
+
+  if (tab_widget->count () == 1)
+    tool_bar->setEnabled (true);  // This is the first tab -> enable tool bar
+
   if (autofit)
     {
       table->resizeColumnsToContents();
       if (autofit_max)
         {
           int mx = 0;
           for (int i = 0;i<table->model()->columnCount();i++)
             {
@@ -321,16 +327,20 @@ void
 variable_editor::closeTab (int idx)
 {
   if (idx < 0 || idx > tab_widget->count ())
     return;
 
   QWidget *const wdgt = tab_widget->widget (idx);
   tab_widget->removeTab (idx);
   delete wdgt;
+
+  if (tab_widget->count () == 0)
+    tool_bar->setEnabled (false);  // This was the last tab -> disable tool bar
+
 }
 
 void
 variable_editor::closeEvent (QCloseEvent *e)
 {
   emit finished ();
   octave_dock_widget::closeEvent (e);
 }
