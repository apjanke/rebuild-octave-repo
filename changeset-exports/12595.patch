# HG changeset patch
# User Marco Caliari  <marco.caliari@univr.it>
# Date 1302627373 25200
#      Tue Apr 12 09:56:13 2011 -0700
# Branch stable
# Node ID 68eb9713b55037f7de4675015e677a1bd8f5b6bf
# Parent  47417d37c4db1cfb0c3f510cb6e62169e3315cc2
quadgk.m: Fix problem with -Inf bound on integral (bug #33055).

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-12  Marco Caliari  <marco.caliari@univr.it>
+
+	* general/quadgk.m: Fix problem with -Inf bound on integral (bug
+	#33055). 
+
 2011-04-11  Ben Abbott  <bpabbott@mac.com>
 
 	* miscellaneous/getappdata.m: If appdata propery does not exist, return
 	an empty matrix.
 
 2011-04-08  Rik  <octave@nomad.inbox5.com>
 
 	* linear-algebra/cond.m, linear-algebra/expm.m, linear-algebra/logm.m,
diff --git a/scripts/general/quadgk.m b/scripts/general/quadgk.m
--- a/scripts/general/quadgk.m
+++ b/scripts/general/quadgk.m
@@ -218,19 +218,19 @@ function [q, err] = quadgk (f, a, b, var
       ##   g(s)  = s / (1 + s)
       ##   g'(s) = 1 / (1 + s) ^ 2
       ## waypoint transform is then
       ##   t = sqrt (b - x)
       ##   s =  - t / (t + 1)
       if (!isempty (waypoints))
         tmp = sqrt (b - waypoints);
         trans = @(x)  - x ./ (x + 1);
-        subs = [0; trans(tmp); 1];
+        subs = [-1; trans(tmp); 0];
       else
-        subs = linspace (0, 1, 11)';
+        subs = linspace (-1, 0, 11)';
       endif
       h = 1;
       h0 = b - a;
       trans = @(t) b - (t ./ (1 + t)).^2;
       f = @(s) - 2 * s .* f (b -  (s ./ (1 + s)) .^ 2) ./ ((1 + s) .^ 3);
     elseif (isinf(b))
       ## Formula defined in Shampine paper as two separate steps. One to
       ## weaken singularity at finite end, then a second to transform to
@@ -444,8 +444,9 @@ endfunction
 %!assert (quadgk(@sin,-pi,0), -2, 1e-6)
 %!assert (quadgk(@sin,0,pi), 2, 1e-6)
 %!assert (quadgk(@(x) 1./sqrt(x), 0, 1), 2, 1e-6)
 %!assert (quadgk (@(x) abs (1 - x.^2), 0, 2, 'Waypoints', 1), 2, 1e-6)
 %!assert (quadgk(@(x) 1./(sqrt(x).*(x+1)), 0, Inf), pi, 1e-6)
 %!assert (quadgk (@(z) log (z), 1+1i, 1+1i, 'WayPoints', [1-1i, -1,-1i, -1+1i]), -pi * 1i, 1e-6)
 
 %!assert (quadgk (@(x) exp(-x .^ 2), -Inf, Inf), sqrt(pi), 1e-6)
+%!assert (quadgk (@(x) exp(-x .^ 2), -Inf, 0), sqrt(pi)/2, 1e-6)
