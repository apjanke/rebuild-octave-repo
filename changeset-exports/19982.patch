# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1427227671 -3600
#      Tue Mar 24 21:07:51 2015 +0100
# Node ID 9a8be23d2c0556011b09fc1ce217f06a715c2ebd
# Parent  9d277f245d1100e1101c9775038da05700c694f8
extend sorting of workspave view widget

* workspace-view.cc (workspace_view): get last sort configuration from
  settings file;
  (~workspace_view): save current sort settings into file;

diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -67,21 +67,16 @@ workspace_view::workspace_view (QWidget 
 
   view->setWordWrap (false);
   view->setContextMenuPolicy (Qt::CustomContextMenu);
   view->setShowGrid (false);
   (view->verticalHeader) ()->hide ();
   view->setAlternatingRowColors (true);
   view_previous_row_count = 0;
 
-  //enable sorting by parameter name
-  view->setSortingEnabled (true);
-  view->sortByColumn (0,Qt::AscendingOrder);
-
-
   // Set an empty widget, so we can assign a layout to it.
   setWidget (new QWidget (this));
 
   // Create a new layout and add widgets to it.
   QVBoxLayout *vbox_layout = new QVBoxLayout ();
   QHBoxLayout *hbox_layout = new QHBoxLayout ();
   hbox_layout->addWidget (filter_label);
   hbox_layout->addWidget (_filter_checkbox);
@@ -92,21 +87,27 @@ workspace_view::workspace_view (QWidget 
 
   // Set the empty widget to have our layout.
   widget ()->setLayout (vbox_layout);
 
   // Initialize collapse/expand state of the workspace subcategories.
 
   QSettings *settings = resource_manager::get_settings ();
 
+  //enable sorting as previously configured
+  view->setSortingEnabled (true);
+  view->sortByColumn (
+    settings->value ("workspaceview/sort_by_column",0).toInt (),
+    static_cast<Qt::SortOrder>
+    (settings->value ("workspaceview/sort_order", Qt::AscendingOrder).toUInt ())
+  );
   // Initialize column order and width of the workspace
   view->horizontalHeader ()->restoreState (
     settings->value ("workspaceview/column_state").toByteArray ());
-  // Make the header clickable to enable sorting
-  view->horizontalHeader ()->setClickable (true);
+
   // Init state of the filter
   _filter->addItems (settings->value ("workspaceview/mru_list").toStringList ());
 
   bool filter_state =
     settings->value ("workspaceview/filter_active", false).toBool ();
   _filter_checkbox->setChecked (filter_state);
   filter_activate (filter_state);
 
@@ -128,16 +129,22 @@ workspace_view::workspace_view (QWidget 
 }
 
 workspace_view::~workspace_view (void)
 {
   QSettings *settings = resource_manager::get_settings ();
 
   settings->setValue ("workspaceview/column_state",
                       view->horizontalHeader ()->saveState ());
+
+  int sort_column = view->horizontalHeader ()->sortIndicatorSection ();
+  Qt::SortOrder sort_order = view->horizontalHeader ()->sortIndicatorOrder ();
+  settings->setValue ("workspaceview/sort_by_column", sort_column);
+  settings->setValue ("workspaceview/sort_order", sort_order);
+
   settings->setValue ("workspaceview/filter_active",
                       _filter_checkbox->isChecked ());
 
   QStringList mru;
   for (int i = 0; i < _filter->count (); i++)
     mru.append (_filter->itemText (i));
   settings->setValue ("workspaceview/mru_list", mru);
 
@@ -145,16 +152,17 @@ workspace_view::~workspace_view (void)
 }
 
 void workspace_view::setModel (workspace_model *model)
 {
   _filter_model.setSourceModel (model);
   _filter_model.setFilterKeyColumn(0);
 
   view->setModel (&_filter_model);
+
   _model = model;
 }
 
 void
 workspace_view::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
   QDockWidget::closeEvent (e);
