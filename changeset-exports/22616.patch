# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1476228109 14400
#      Tue Oct 11 19:21:49 2016 -0400
# Branch stable
# Node ID 96411a33f5708ee5ec96d49e852e2d265f6d1b49
# Parent  78b3c48be3e6420aa0c6150e0dacdb0c0827be5e
gui: handle differences in text color for popmenu, checkbox and radiobutton (Bug #49247)

* libgui/graphics/BaseControl.cc
  (QtHandles::updatePalette): apply unique color settings for popmenu, checkbox and radiobutton.

diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -37,28 +37,45 @@ namespace QtHandles
 {
 
   static void
   updatePalette (const uicontrol::properties& props, QWidget* w)
   {
     QPalette p = w->palette ();
 
     if (props.style_is ("edit")
-        || props.style_is ("listbox")
-        || props.style_is ("popupmenu"))
+        || props.style_is ("listbox"))
       {
         p.setColor (QPalette::Base,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::Text,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
+    else if (props.style_is ("popupmenu"))
+      {
+        // popumenu (QComboBox) is a listbox with a button, so needs set colors for both
+        p.setColor (QPalette::Base,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::Text,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+        p.setColor (QPalette::Button,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::ButtonText,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+      }
+    else if (props.style_is ("radiobutton")
+             || props.style_is ("checkbox"))
+      {
+        p.setColor (QPalette::Button,
+                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
+        p.setColor (QPalette::WindowText,
+                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+      }
     else if (props.style_is ("pushbutton")
-             || props.style_is ("togglebutton")
-             || props.style_is ("radiobutton")
-             || props.style_is ("checkbox"))
+             || props.style_is ("togglebutton"))
       {
         p.setColor (QPalette::Button,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::ButtonText,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else
       {
