# HG changeset patch
# User jwe
# Date 1019059282 0
#      Wed Apr 17 16:01:22 2002 +0000
# Node ID bd0dc53a5093542d8122e2ecc8aa08262dd81f4c
# Parent  ce8e45b027d00cb47fc362cfc5ec0c2a6767387c
[project @ 2002-04-17 16:01:22 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2002-04-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* load-save.cc (get_lines_and_columns): Handle CRLF as line
+	separator in addition to LF.
+
 2002-04-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* load-save.cc (hdf5_ofstream::hdf5_ofstream):
 	Explicitly List std::ostream(0) in constructor.
 	(hdf5_ifstream::hdf5_ifstream):
 	Explicitly List std::istream(0) in constructor.
 	(hdf5_fstreambase::hdf5_fstreambase): Use std::ios::setstate, not set.
 	(hdf5_fstreambase::close): Likewise.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -1,9 +1,9 @@
-#
+	#
 # Makefile for octave's src directory
 #
 # John W. Eaton
 # jwe@bevo.che.wisc.edu
 # University of Wisconsin-Madison
 # Department of Chemical Engineering
 
 TOPDIR = ..
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1910,26 +1910,47 @@ get_lines_and_columns (std::istream& is,
   while (is && ! error_state)
     {
       std::string buf = get_mat_data_input_line (is);
 
       file_line_number++;
 
       size_t beg = buf.find_first_not_of (" \t");
 
+      // If we see a CR as the last character in the buffer, we had a
+      // CRLF pair as the line separator.  Any other CR in the text
+      // will not be considered as whitespace.
+
+      if (beg != NPOS && buf[beg] == '\r' && beg == buf.length () - 1)
+	{
+	  // We had a blank line ending with a CRLF.  Handle it the
+	  // same as an empty line.
+	  beg = NPOS;
+	}
+
       int tmp_nc = 0;
 
       while (beg != NPOS)
 	{
 	  tmp_nc++;
 
 	  size_t end = buf.find_first_of (" \t", beg);
 
 	  if (end != NPOS)
-	    beg = buf.find_first_not_of (" \t", end);
+	    {
+	      beg = buf.find_first_not_of (" \t", end);
+
+	      if (buf[beg] == '\r' && beg == buf.length () - 1)
+		{
+		  // We had a line with trailing spaces and
+		  // ending with a CRLF, so this should look like EOL,
+		  // not a new colum.
+		  break;
+		}
+	    }
 	  else
 	    break;
 	}
 
       if (tmp_nc > 0)
 	{
 	  if (nc == 0)
 	    {
