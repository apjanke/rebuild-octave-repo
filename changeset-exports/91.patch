# HG changeset patch
# User jwe
# Date 747887332 0
#      Mon Sep 13 02:28:52 1993 +0000
# Node ID e03eea9ed19be802e9a56b5508cd69786017b549
# Parent  cd4df7ad58fa35c92c06e129c62faca68b0ce5e7
[project @ 1993-09-13 02:28:52 by jwe]
(qzvalue): Call is_empty instead of empty_arg.

diff --git a/src/qzval.cc b/src/qzval.cc
--- a/src/qzval.cc
+++ b/src/qzval.cc
@@ -43,17 +43,16 @@ extern "C"
   int F77_FCN (qzit) (const int*, const int*, double*, double*, const
 		      double*, const long*, double*, int*);
  
   int F77_FCN (qzval) (const int*, const int*, double*, double*,
 		       double*, double*, double*, const long*, double*);
 }
 
 // XXX FIXME XXX
-extern int empty_arg (tree_constant&);
 extern tree_constant* empty_tree (int , char*);
 extern ComplexMatrix ComplexMatrixLoad (tree_constant&);
 
 #ifdef WITH_DLD
 tree_constant *
 builtin_qzvalue_2 (tree_constant *args, int nargin, int nargout)
 {
   return qzvalue (args, nargin, nargout);
@@ -63,17 +62,17 @@ builtin_qzvalue_2 (tree_constant *args, 
 tree_constant *
 qzvalue (tree_constant *args, int nargin, int nargout)
 {
   tree_constant *retval = NULL_TREE_CONST;
 
   tree_constant arga = args[1].make_numeric ();
   tree_constant argb = args[2].make_numeric();
 
-  if (empty_arg (arga) || empty_arg (argb))
+  if (arga.is_empty () || argb.is_empty ())
     retval = empty_tree (nargout, "qzvalue");
   else
     {
 
 // Arguments are not empty, so check for correct dimensions.
 
       int a_rows = arga.rows();
       int a_cols = arga.columns();
