# HG changeset patch
# User jwe
# Date 1057691695 0
#      Tue Jul 08 19:14:55 2003 +0000
# Node ID 042cdbb7f3174e836ebc77ded6783ae0f3f15628
# Parent  252b9162c084f09ceff5239eefb94d580018dc8f
[project @ 2003-07-08 19:14:55 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2003-07-08  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* defun.cc (check_version): Compare version to OCTAVE_API_VERSION,
+	not OCTAVE_VERSION.  Mismatch is now fatal.
+	* defun-int.h (DEFINE_FUN_INSTALLER_FUN3): Pass
+	OCTAVE_API_VERSION instead of OCTAVE_VERSION to check_version.
+	* version.h (OCTAVE_API_VERSION): New macro.
+
 	* defaults.cc (Vdefault_exec_path): New static variable.
 	(set_default_default_exec_path): New function.
 	(install_defaults): Call it.
 	(exec_path): Use it.
 	(default_exec_path): New function.
 	(symbols_of_defaults): Add DEFVAR for DEFAULT_EXEC_PATH.
 
 2003-07-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -82,17 +82,17 @@ typedef bool (*octave_dld_fcn_installer)
 #define DEFINE_FUN_INSTALLER_FUN2(name, doc, cxx_abi) \
   DEFINE_FUN_INSTALLER_FUN3(name, doc, cxx_abi)
 
 #define DEFINE_FUN_INSTALLER_FUN3(name, doc, cxx_abi) \
   extern "C" \
   bool \
   FS ## name ## _ ## cxx_abi (const octave_shlib& shl) \
   { \
-    check_version (OCTAVE_VERSION, #name); \
+    check_version (OCTAVE_API_VERSION, #name); \
     install_dld_function (F ## name, #name, shl, doc); \
     return error_state ? false : true; \
   }
 
 
 // MAKE_BUILTINS is defined to extract function names and related
 // information and create the *.df files that are eventually used to
 // create the builtins.cc file.
diff --git a/src/defun.cc b/src/defun.cc
--- a/src/defun.cc
+++ b/src/defun.cc
@@ -63,23 +63,23 @@ print_usage (const std::string& nm, bool
     }
   else
     warning ("no usage message found for `%s'", nm.c_str ());
 }
 
 void
 check_version (const std::string& version, const std::string& fcn)
 {
-  if (version != OCTAVE_VERSION)
+  if (version != OCTAVE_API_VERSION)
     {
-      warning ("incompatible version %s found in function `%s'",
-	       version.c_str (), fcn.c_str ());
-      warning ("this can lead to incorrect results or other failures");
-      warning ("you can fix this problem by recompiling this .oct file");
-
+      error ("API version %s found in .oct file function `%s'\n"
+	     "       does not match the running Octave (API version %s)\n"
+	     "       this can lead to incorrect results or other failures\n"
+	     "       you can fix this problem by recompiling this .oct file",
+	     version.c_str (), fcn.c_str (), OCTAVE_API_VERSION);
     }
 }
 
 // Install variables and functions in the symbol tables.
 
 void
 install_builtin_mapper (octave_mapper *mf)
 {
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -20,16 +20,18 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
 #define OCTAVE_VERSION "2.1.50"
 
+#define OCTAVE_API_VERSION "1"
+
 #define OCTAVE_COPYRIGHT \
   "Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003 John W. Eaton."
 
 #define OCTAVE_NAME_AND_VERSION \
   "GNU Octave, version " OCTAVE_VERSION " (" OCTAVE_CANONICAL_HOST_TYPE ")"
 
 #define OCTAVE_COPYING_STATEMENT \
   "This is free software; see the source code for copying conditions."
