# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1525633145 -7200
#      Sun May 06 20:59:05 2018 +0200
# Node ID 1008b4797a6e037f6067d6747ea9d5f00891606f
# Parent  5bb07f6e370732bf6300f4b28416340871ba5a2a
fix visibility of dock widgets at startup

* main-window.cc (set_window_layout): use already defined variable instead
  of calling objectName again

* octave-dock-widget.cc (make_widget, make_window): show the widget only if
  it already was visible before bringing it into a widget or a window

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1248,17 +1248,17 @@ namespace octave
 
             // If floating, make window from widget.
             if (floating)
               {
                 widget->make_window ();
 
                 if (visible)
                   {
-                    if (settings->value ("DockWidgets/" + widget->objectName ()
+                    if (settings->value ("DockWidgets/" + name
                                          + "_minimized").toBool ())
                       widget->showMinimized ();
                     else
                       widget->setVisible (true);
                   }
               }
             else  // not floating
               {
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -242,16 +242,18 @@ namespace octave
              this, SLOT (handle_visibility (bool)));
     emit active_changed (isVisible ());  // emit once for init of window menu
   }
 
   // make the widget floating
   void
   octave_dock_widget::make_window (bool)
   {
+    bool vis = isVisible ();
+
     // prevent follow-up calls by clearing state variable
     m_waiting_for_mouse_button_release = false;
 
     set_focus_predecessor ();  // set focus previously active widget if tabbed
 
     // the widget has to be reparented (parent = 0), preferably
     // from a non-toplevel widget otherwise may not have full
     // decorations, e.g., no taskbar icon and always in front
@@ -279,61 +281,67 @@ namespace octave
     else
       {
         set_style (isActiveWindow ());
         disconnect (m_default_float_button, 0, this, 0);
         connect (m_default_float_button, SIGNAL (clicked (bool)),
                  this, SLOT (make_widget (bool)));
       }
 
-    raise ();
-    show ();
-    activateWindow ();
-    setFocus ();
+    if (vis)
+    {
+      raise ();
+      show ();
+      activateWindow ();
+      setFocus ();
+    }
   }
 
   // dock the widget
   void
   octave_dock_widget::make_widget (bool)
   {
+    bool vis = isVisible ();
+
     // Since floating widget has no parent, we have to read it
     QSettings *settings = resource_manager::get_settings ();
 
     settings->setValue ("MainWindow/windowState", m_parent->saveState ());
     // Stay window, otherwise will bounce back to window by default because
     // there is no layout information for this widget in the saved settings.
     setParent (m_parent, Qt::Window);
     m_parent->addDockWidget (Qt::BottomDockWidgetArea, this);
     // recover old window states, hide and re-show new added widget
     m_parent->restoreState (settings->value ("MainWindow/windowState").toByteArray ());
     setFloating (false);
-    show ();
-    QApplication::setActiveWindow (this);
-    focus ();
 
     // adjust the (un)dock icon
     if (titleBarWidget ())
       {
-#if defined (Q_OS_UNIX)
-        m_title_widget->setToolTip ("");
-#endif
         m_dock_action->setIcon (QIcon (":/actions/icons/widget-undock"
                                        + m_icon_color + ".png"));
         m_dock_action->setToolTip (tr ("Undock widget"));
         disconnect (m_dock_action, 0, this, 0);
         connect (m_dock_action, SIGNAL (triggered (bool)),
                  this, SLOT (make_window (bool)));
       }
     else
       {
         set_style (isActiveWindow ());
         disconnect (m_default_float_button, 0, this, 0);
         connect (m_default_float_button, SIGNAL (clicked (bool)),
                  this, SLOT (make_window (bool)));
       }
+
+    if (vis)
+      {
+        show ();
+        QApplication::setActiveWindow (this);
+        focus ();
+      }
   }
 
   // dock the widget
   void
   octave_dock_widget::default_dock (bool)
   {
     setFloating (false);
   }
