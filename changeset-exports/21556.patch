# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1459220178 14400
#      Mon Mar 28 22:56:18 2016 -0400
# Node ID 12f207a534aac660184aab8b96820497496b7835
# Parent  8014bba57c2b3cd130673b7512c9ce1b62c635d5
# Parent  9f0088f3f335224cf0032cc4a11127a60f526a89
maint: merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -502,26 +502,30 @@ AC_ARG_ENABLE([openmp],
 if test $check_for_openmp = yes; then
   AC_LANG_PUSH(C)
   AX_OPENMP([XTRA_CFLAGS="$XTRA_CFLAGS $OPENMP_CFLAGS"; ENABLE_OPENMP=yes], [])
   AC_LANG_POP(C)
   AC_LANG_PUSH(C++)
   AX_OPENMP([XTRA_CXXFLAGS="$XTRA_CXXFLAGS $OPENMP_CXXFLAGS"; ENABLE_OPENMP=yes], [])
   AC_LANG_POP(C++)
 fi
-dnl Define here since it is skipped if the first argument to
-dnl AX_OPENMP is not empty.
-if test $ENABLE_OPENMP = yes; then
-  AC_DEFINE(OCTAVE_ENABLE_OPENMP, 1, [Define if OpenMP is enabled.])
-fi
+
 ## Set these for any other tests that may require them.  They will be
 ## reset before output files are generated.
 CFLAGS="$CFLAGS $OPENMP_CFLAGS"
 CXXFLAGS="$CXXFLAGS $OPENMP_CXXFLAGS"
 
+dnl Define here since it is skipped if the first argument to
+dnl AX_OPENMP is not empty.
+if test $ENABLE_OPENMP = yes; then
+  AC_CHECK_HEADERS([omp.h])
+  AC_CHECK_FUNCS([omp_get_num_threads])
+  AC_DEFINE(OCTAVE_ENABLE_OPENMP, 1, [Define if OpenMP is enabled])
+fi
+
 ### When compiling math for x87, problems may arise in some code comparing
 ### floating-point intermediate results.  The root cause is the extra precision
 ### (~80 bits) of x87 co-processor registers versus the IEEE standard 64 bits.
 ### Generally, storing the result in a local volatile variable forces a
 ### truncation back to 64 bits, but it also degrades performance.
 ### However, this performance degradation is very minimal, if indeed measurable.
 ### Therefore, it has been enabled for all platforms and compilers.
 ### Reported bugs indicate that --enable-float-truncate is required for MinGW
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -55,16 +55,20 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_FLOATINGPOINT_H)
 #  include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #  include <ieeefp.h>
 #endif
 
+#if defined (HAVE_OMP_H)
+#  include <omp.h>
+#endif
+
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
 #include "lo-math.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "quit.h"
 
@@ -304,16 +308,20 @@ same_file_internal (const std::string& f
           && fs_file1.dev () == fs_file2.dev ());
 
 #endif
 }
 
 void
 sysdep_init (void)
 {
+#if defined (HAVE_OMP_GET_NUM_THREADS)
+  omp_get_num_threads ();
+#endif
+
 #if defined (__386BSD__) || defined (__FreeBSD__) || defined (__NetBSD__)
   BSD_init ();
 #elif defined (__MINGW32__)
   MINGW_init ();
 #elif defined (_MSC_VER)
   MSVC_init ();
 #endif
 }
