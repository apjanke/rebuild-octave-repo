# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1318305862 25200
#      Mon Oct 10 21:04:22 2011 -0700
# Node ID fa1b2b3941952960b1497471c867f3892f3be10f
# Parent  da56d27164fe0aa8156b893f4275066fcf718bca
str2num.m: Simplify and speed up code by using indexing.

* str2num.m: Use indexing instead of repmat and concatenation
for 8% speedup.

diff --git a/scripts/strings/str2num.m b/scripts/strings/str2num.m
--- a/scripts/strings/str2num.m
+++ b/scripts/strings/str2num.m
@@ -48,40 +48,38 @@
 ## @end deftypefn
 
 ## Author: jwe
 
 function [m, state] = str2num (s)
 
   if (nargin != 1) 
     print_usage ();
-  endif
-  
-  if (! ischar (s))
+  elseif (! ischar (s))
     error ("str2num: S must be a string or string array");
   endif
 
-  [nr, nc] = size (s);
-  sep = repmat (";", nr, 1);
-  s = sprintf ("m = [%s];", reshape ([s, sep]', 1, nr * (nc + 1)));
+  s(:, end+1) = ";";
+  s = sprintf ("m = [%s];", reshape (s', 1, numel (s)));
   state = true;
   eval (s, "m = []; state = false;");
   if (ischar (m))
     m = [];
     state = false;
   endif
 
 endfunction
 
 
 %!assert(str2num ("-1.3e2"), -130);
 %!assert(str2num ("[1, 2; 3, 4]"), [1, 2; 3, 4]);
 
+%!test
+%! [x, state] = str2num ("pi");
+%! assert (state);
+%! [x, state] = str2num ("Hello World");
+%! assert (! state);
+
 %% Test input validation
 %!error str2num ()
 %!error str2num ("string", 1)
-%!error str2num ({"string"})
+%!error <S must be a string> str2num ({"string"})
 
-%!test
-%! [x, state] = str2num ("pi");
-%! assert (state);
-%! [x, state] = str2num (tmpnam);
-%! assert (! state);
