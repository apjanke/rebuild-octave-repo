# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1246343925 -7200
#      Tue Jun 30 08:38:45 2009 +0200
# Node ID 2ad67ccd09fd9103b75624d8550892b3bac31a95
# Parent  ed392e13c117249d3e1d80eb3628e34f4ebcaacf
fix typo in octave_sort::lookupb

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-30  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-sort.cc (octave_sort<T>::lookupb<Comp>): Fix typo.
+
 2009-06-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-sort.cc (octave_sort<T>::lookup_merge): Delete.
 	(octave_sort<T>::lookup<Comp>,
 	octave_sort<T>::lookupm<Comp>,
 	octave_sort<T>::lookupb<Comp>): Rewrite.
 
 2009-06-26  Michael Goffioul  <michael.goffioul@gmail.com>
diff --git a/liboctave/oct-sort.cc b/liboctave/oct-sort.cc
--- a/liboctave/oct-sort.cc
+++ b/liboctave/oct-sort.cc
@@ -1914,16 +1914,17 @@ octave_sort<T>::lookupm (const T *data, 
     if (compare == descending_compare)
       lookupm (data, nel, values, nvalues, idx, std::greater<T> ());
   else
 #endif
     if (compare)
       lookupm (data, nel, values, nvalues, idx, std::ptr_fun (compare));
 }
 
+#include <iostream>
 template <class T> template <class Comp>
 void 
 octave_sort<T>::lookupb (const T *data, octave_idx_type nel,
                          const T *values, octave_idx_type nvalues,
                          bool *match, Comp comp)
 {
   // Check whether we're comparing two sorted arrays, comparable in size.
   if (nvalues >= ratio * nel / xlog2 (nel + 1.0) 
@@ -1952,17 +1953,17 @@ octave_sort<T>::lookupb (const T *data, 
 
     }
   else
     {
       // Use a sequence of binary lookups.
       for (octave_idx_type j = 0; j < nvalues; j++)
         {
           octave_idx_type i = lookup_binary (data, nel, values[j], comp);
-          match[j] = (j != 0 && ! comp (data[i-1], values[j]));
+          match[j] = (i != 0 && ! comp (data[i-1], values[j]));
         }
     }
 }
 
 template <class T>
 void 
 octave_sort<T>::lookupb (const T *data, octave_idx_type nel,
                          const T* values, octave_idx_type nvalues,
