# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1521509230 25200
#      Mon Mar 19 18:27:10 2018 -0700
# Branch stable
# Node ID 1db0b81efafe2ac5e0b56b868f833dc5f07aad71
# Parent  75a748cb08a65197fccb9dfa86e70d288c7ccc3d
maint: strip trailing whitespace from source files

* __gammainc__.cc, pkg.m hist.m gammainc.m: Strip trailing whitespace.

diff --git a/libinterp/corefcn/__gammainc__.cc b/libinterp/corefcn/__gammainc__.cc
--- a/libinterp/corefcn/__gammainc__.cc
+++ b/libinterp/corefcn/__gammainc__.cc
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "fNDArray.h"
 
-DEFUN (__gammainc__, args, , 
+DEFUN (__gammainc__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {@var{y} =} __gammainc__ (@var{x}, @var{a})
 Continued fraction for incomplete gamma function.
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin != 2)
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -34,36 +34,36 @@
 ## @item install
 ## Install named packages.  For example,
 ##
 ## @example
 ## pkg install image-1.0.0.tar.gz
 ## @end example
 ##
 ## @noindent
-## installs the package found in the file @file{image-1.0.0.tar.gz}.  The 
+## installs the package found in the file @file{image-1.0.0.tar.gz}.  The
 ## file containing the package can be an url, e.g.
 ##
 ## @example
 ## pkg install 'http://somewebsite.org/image-1.0.0.tar.gz'
 ## @end example
 ##
 ## @noindent
 ## installs the package found in the given url.  This
-## requires an internet connection and the cURL library.  
+## requires an internet connection and the cURL library.
 ##
 ## @noindent
 ## @emph{Security risk}: no verification of the package is performed
 ## before the installation.  It has the same security issues as manually
 ## downloading the package from the given url and installing it.
 ##
 ## @noindent
 ## @emph{No support}: the GNU Octave community is not responsible for
-## packages installed from foreign sites.  For support or for 
-## reporting bugs you need to contact the maintainers of the installed 
+## packages installed from foreign sites.  For support or for
+## reporting bugs you need to contact the maintainers of the installed
 ## package directly (see the @file{DESCRIPTION} file of the package)
 ##
 ## The @var{option} variable can contain options that affect the manner
 ## in which a package is installed.  These options can be one or more of
 ##
 ## @table @code
 ## @item -nodeps
 ## The package manager will disable dependency checking.  With this option it
@@ -416,17 +416,17 @@ function [local_packages, global_package
           if (any (external_files_mask))
             [success, msg] = mkdir (tmp_dir = tempname ());
             if (success != 1)
               error ("pkg: failed to create temporary directory: %s", msg);
             endif
 
             for file_idx = find (external_files_mask)
 
-              warning ('Octave:security', 
+              warning ('Octave:security',
               ['You are installing from an unofficial source.\n' ...
                'The GNU Octave community is not responsible' ...
                ' for the content of this package.\n' ...
                '%s will be downloaded and installed.\n'],
                files{file_idx});
               _yes = yes_or_no ('Are you sure you want to do this? ');
 
               if (_yes)
diff --git a/scripts/plot/draw/hist.m b/scripts/plot/draw/hist.m
--- a/scripts/plot/draw/hist.m
+++ b/scripts/plot/draw/hist.m
@@ -329,15 +329,15 @@ endfunction
 %!error hist ()
 %!error <Y must be real-valued> hist (2+i)
 %!error <bin specification must be a numeric> hist (1, {0,1,2})
 %!error <number of bins NBINS must be positive> hist (1, 0)
 %!test
 %! hf = figure ("visible", "off");
 %! hax = gca;
 %! unwind_protect
-%!   fail ("hist (hax, 1, [2 1 0])", "warning", "bin values X not sorted"); 
+%!   fail ("hist (hax, 1, [2 1 0])", "warning", "bin values X not sorted");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %!error <bin specification must be a scalar or vector> hist (1, ones (2,2))
 %!error <NORM must be a numeric constant> hist (1,1, {1})
 %!error <NORM must be a numeric constant . 0> hist (1,1, -1)
diff --git a/scripts/specfun/gammainc.m b/scripts/specfun/gammainc.m
--- a/scripts/specfun/gammainc.m
+++ b/scripts/specfun/gammainc.m
@@ -72,17 +72,17 @@
 ##
 ## References:
 ##
 ## @nospell{M. Abramowitz and I. Stegun},
 ## @cite{Handbook of mathematical functions},
 ## @nospell{Dover publications, Inc.}, 1972.
 ##
 ## @nospell{W. Gautschi},
-## @cite{A computational procedure for incomplete gamma functions}, 
+## @cite{A computational procedure for incomplete gamma functions},
 ## @nospell{ACM Trans. Math Software}, pp. 466--481, Vol 5, No. 4, 2012.
 ##
 ## @nospell{W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery},
 ## @cite{Numerical Recipes in Fortran 77}, ch.@: 6.2, Vol 1, 1992.
 ##
 ## @seealso{gamma, gammaincinv, gammaln}
 ## @end deftypefn
 
@@ -95,17 +95,17 @@ function y = gammainc (x, a, tail = "low
     print_usage ();
   endif
 
   [err, x, a] = common_size (x, a);
   if (err > 0)
     error ("gammainc: X and A must be of common size or scalars");
   endif
 
-  if (iscomplex (x) || iscomplex (a)) 
+  if (iscomplex (x) || iscomplex (a))
     error ("gammainc: all inputs must be real");
   endif
 
   ## Remember original shape of data, but convert to column vector for calcs.
   x_sz = size (x);
   x = x(:);
   a = a(:);
 
@@ -459,26 +459,26 @@ endfunction
 %!assert (gammainc (2, 2, "scaledupper"), 1.500000000000000, -2e-15)
 %!assert (gammainc ([3 2 36],[2 3 18], "upper"), ...
 %!        [4/exp(3) 5*exp(-2) (4369755579265807723 / 2977975)/exp(36)])
 %!assert (gammainc (10, 10), 1 - (5719087 / 567) * exp (-10), -eps)
 %!assert (gammainc (10, 10, "upper"), (5719087 / 567) * exp (-10), -eps)
 
 ## Test: case 8
 %!assert (gammainc (-10, 10), 3.112658265341493126871617e7, -2*eps)
-## Matlab fails this next one%!      %!      
+## Matlab fails this next one%!      %!
 %!assert (isreal (gammainc (-10, 10)), true)
 %!assert (gammainc (-10, 10.1, "upper"), ...
 %!        -2.9582761911890713293e7-1i * 9.612022339061679758e6, -30*eps)
 %!assert (gammainc (-10, 10, "upper"), -3.112658165341493126871616e7, ...
 %!        -2*eps)
 %!assert (gammainc (-10, 10, "scaledlower"), 0.5128019364747265, -1e-14);
 %!assert (gammainc (-10, 10, "scaledupper"), -0.5128019200000000, -1e-14);
 %!assert (gammainc (200, 201, "upper"), 0.518794309678684497, -2 * eps);
-%!assert (gammainc (200, 201, "scaledupper"), 
+%!assert (gammainc (200, 201, "scaledupper"),
 %!        18.4904360746560462660798514, -eps)
 ## Here we are very good (no D (x,a)) involved
 %!assert (gammainc(1000, 1000.5, "scaledlower"), 39.48467539583672271, -2*eps)
 %!assert (gammainc (709, 1000, "upper"), 0.99999999999999999999999954358, -eps)
 
 ## Test: case 9
 %!test <47800>
 %! assert (gammainc (60, 6, "upper"), 6.18022358081160257327264261e-20,
