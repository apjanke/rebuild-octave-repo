# HG changeset patch
# User Rik <rik@octave.org>
# Date 1552328124 25200
#      Mon Mar 11 11:15:24 2019 -0700
# Branch stable
# Node ID 83774c2a1b9265a50a83c02d03275feead1548d5
# Parent  b4a9888bb3c9727ad39b95b95be3fb9361bef86a
doc: Place cross-reference from list of graphics object properties back to object (bug #46076).

* genpropdoc.m: Place a header line above each table of graphics object
properties with a cross-reference to the function call that creates the object

* plot.txi: Remove header line above each @include of graphics object
properties.

* uibuttongroup.m, uicontextmenu.m, uicontrol.m, uimenu.m, uipanel.m,
uipushtool.m, uitable.m, uitoggletool.m, uitoolbar.m: Use common phrasing in
docstring for the cross-reference to the table of graphics object properties.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -1901,18 +1901,25 @@ function def = getdefault (h, objname, f
 
 endfunction
 
 function str = printdoc (objname, obj)
   ## Sort fields so that they appear in alphabetic order in the manual
   fields = sort (fieldnames (obj));
   nf = numel (fields);
 
-  ## File header and begining of properties table
-  str = [warn_autogen() "\n\n@table @asis"];
+  ## File header and beginning of properties table
+  str = warn_autogen ();
+  if (strcmp (objname, "root"))
+    str = sprintf ("%s\n\nProperties of the root graphics object:", str);
+  else
+    str = sprintf ("%s\n\nProperties of @code{%s} objects (@pxref{XREF%s,,%s}):",
+                   str, objname, objname, objname);
+  endif
+  str = sprintf ("%s\n\n@table @asis", str);
 
   for ii = 1:nf
     field = fields{ii};
     str = sprintf ("%s\n\n", str);
 
     ## @anchor: cross reference using XREFobjnamefield label
     ## Concept index: call info from octave with 'doc ("objname field")'
     str = sprintf ("%s@anchor{XREF%s%s}\n@prindex %s %s\n",
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -1503,162 +1503,126 @@ programmatically or displayed using the 
 two arguments call to @code{set} function.  @xref{XREFset, , set}.
 
 In the following documentation, default values are enclosed in @{ @}.
 
 @node Root Figure Properties
 @subsubsection Root Figure Properties
 @prindex @sortas{@ Root Figure Properties} Root Figure Properties
 
-The @code{root figure} properties are:
-
 @include plot-rootproperties.texi
 
 
 @node Figure Properties
 @subsubsection Figure Properties
 @prindex @sortas{@ Figure Properties} Figure Properties
 
-The @code{figure} properties are:
-
 @include plot-figureproperties.texi
 
 
 @node Axes Properties
 @subsubsection Axes Properties
 @prindex @sortas{@ Axes Properties} Axes Properties
 
-The @code{axes} properties are:
-
 @include plot-axesproperties.texi
 
 
 @node Line Properties
 @subsubsection Line Properties
 @prindex @sortas{@ Line Properties} Line Properties
 
-The @code{line} properties are:
-
 @include plot-lineproperties.texi
 
 
 @node Text Properties
 @subsubsection Text Properties
 @prindex @sortas{@ Text Properties} Text Properties
 
-The @code{text} properties are:
-
 @include plot-textproperties.texi
 
 
 @node Image Properties
 @subsubsection Image Properties
 @prindex @sortas{@ Image Properties} Image Properties
 
-The @code{image} properties are:
-
 @include plot-imageproperties.texi
 
 
 @node Patch Properties
 @subsubsection Patch Properties
 @prindex @sortas{@ Patch Properties} Patch Properties
 
-The @code{patch} properties are:
-
 @include plot-patchproperties.texi
 
 
 @node Surface Properties
 @subsubsection Surface Properties
 @prindex @sortas{@ Surface Properties} Surface Properties
 
-The @code{surface} properties are:
-
 @include plot-surfaceproperties.texi
 
 
 @node Light Properties
 @subsubsection Light Properties
 @prindex @sortas{@ Light Properties} Light Properties
 
-The @code{light} properties are:
-
 @include plot-lightproperties.texi
 
 @node Uimenu Properties
 @subsubsection Uimenu Properties
 @prindex @sortas{@ Uimenu Properties} Uimenu Properties
 
-The @code{uimenu} properties are:
-
 @include plot-uimenuproperties.texi
 
 @node Uibuttongroup Properties
 @subsubsection Uibuttongroup Properties
 @prindex @sortas{@ Uibuttongroup Properties} Uibuttongroup Properties
 
-The @code{uibuttongroup} properties are:
-
 @include plot-uibuttongroupproperties.texi
 
 @node Uicontextmenu Properties
 @subsubsection Uicontextmenu Properties
 @prindex @sortas{@ Uicontextmenu Properties} Uicontextmenu Properties
 
-The @code{uicontextmenu} properties are:
-
 @include plot-uicontextmenuproperties.texi
 
 @node Uipanel Properties
 @subsubsection Uipanel Properties
 @prindex @sortas{@ Uipanel Properties} Uipanel Properties
 
-The @code{uipanel} properties are:
-
 @include plot-uipanelproperties.texi
 
 @node Uicontrol Properties
 @subsubsection Uicontrol Properties
 @prindex @sortas{@ Uicontrol Properties} Uicontrol Properties
 
-The @code{uicontrol} properties are:
-
 @include plot-uicontrolproperties.texi
 
 @node Uitable Properties
 @subsubsection Uitable Properties
 @cindex uitable properties
 
-The @code{uitable} properties are:
-
 @include plot-uitableproperties.texi
 
 @node Uitoolbar Properties
 @subsubsection Uitoolbar Properties
 @prindex @sortas{@ Uitoolbar Properties} Uitoolbar Properties
 
-The @code{uitoolbar} properties are:
-
 @include plot-uitoolbarproperties.texi
 
 @node Uipushtool Properties
 @subsubsection Uipushtool Properties
 @prindex @sortas{@ Uipushtool Properties} Uipushtool Properties
 
-The @code{uipushtool} properties are:
-
 @include plot-uipushtoolproperties.texi
 
 @node Uitoggletool Properties
 @subsubsection Uitoggletool Properties
 @prindex @sortas{@ Uitoggletool Properties} Uitoggletool Properties
 
-The @code{uitoggletool} properties are:
-
 @include plot-uitoggletoolproperties.texi
 
 @node Searching Properties
 @subsection Searching Properties
 
 @DOCSTRING(findobj)
 
 @DOCSTRING(findall)
diff --git a/scripts/gui/uibuttongroup.m b/scripts/gui/uibuttongroup.m
--- a/scripts/gui/uibuttongroup.m
+++ b/scripts/gui/uibuttongroup.m
@@ -29,18 +29,17 @@
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uibuttongroup relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uibuttongroup object.
 ##
-## Properties of uibuttongroup objects are documented at
-## @ref{Uibuttongroup Properties}.
+## The full list of properties is documented at @ref{Uibuttongroup Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## ## Create figure and panel on it
 ## f = figure;
 ## ## Create a button group
diff --git a/scripts/gui/uicontextmenu.m b/scripts/gui/uicontextmenu.m
--- a/scripts/gui/uicontextmenu.m
+++ b/scripts/gui/uicontextmenu.m
@@ -25,17 +25,17 @@
 ## If @var{h} is omitted then a uicontextmenu for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{h} is given then a uicontextmenu relative to @var{h} is created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uicontextmenu object.
 ##
-## Uicontextmenu properties are documented at @ref{Uicontextmenu Properties}.
+## The full list of properties is documented at @ref{Uicontextmenu Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## ## create figure and uicontextmenu
 ## f = figure ();
 ## c = uicontextmenu (f);
diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -30,18 +30,17 @@
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uicontrol relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uicontrol object.
 ##
-## Properties of uicontrol objects are documented at
-## @ref{Uicontrol Properties}.
+## The full list of properties is documented at @ref{Uicontrol Properties}.
 ##
 ## The type of uicontrol created is specified by the @var{style} property.  If
 ## no style property is provided, a push button will be created.
 ##
 ## Valid styles for uicontrol are:
 ##
 ## @table @asis
 ## @item @qcode{"checkbox"}
diff --git a/scripts/gui/uimenu.m b/scripts/gui/uimenu.m
--- a/scripts/gui/uimenu.m
+++ b/scripts/gui/uimenu.m
@@ -57,18 +57,17 @@
 ## lowest value is at the first position starting from left or top.
 ##
 ## @item @qcode{"separator"}
 ## Can be set @qcode{"on"} or @qcode{"off"}.  If enabled it draws a separator
 ## line above the current position.  It is ignored for top level entries.
 ##
 ## @end table
 ##
-## The full list of properties is documented at
-## @ref{Uimenu Properties,,Uimenu Properties}.
+## The full list of properties is documented at @ref{Uimenu Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## f = uimenu ("label", "&File", "accelerator", "f");
 ## e = uimenu ("label", "&Edit", "accelerator", "e");
 ## uimenu (f, "label", "Close", "accelerator", "q", ...
diff --git a/scripts/gui/uipanel.m b/scripts/gui/uipanel.m
--- a/scripts/gui/uipanel.m
+++ b/scripts/gui/uipanel.m
@@ -28,17 +28,17 @@
 ## If @var{parent} is omitted then a uipanel for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uipanel relative to @var{parent} is created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uipanel object.
 ##
-## Uipanel properties are documented at @ref{Uipanel Properties}.
+## The full list of properties is documented at @ref{Uipanel Properties}.
 ##
 ## The optional return value @var{hui} is a graphics handle to the created
 ## uipanel object.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
diff --git a/scripts/gui/uipushtool.m b/scripts/gui/uipushtool.m
--- a/scripts/gui/uipushtool.m
+++ b/scripts/gui/uipushtool.m
@@ -33,17 +33,17 @@
 ## created.
 ##
 ## If @var{parent} is given then a uipushtool is created on the @var{parent}
 ## uitoolbar.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uipushtool object.
 ##
-## Uipushtool properties are documented at @ref{Uipushtool Properties}.
+## The full list of properties is documented at @ref{Uipushtool Properties}.
 ##
 ## The optional return value @var{hui} is a graphics handle to the created
 ## uipushtool object.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
diff --git a/scripts/gui/uitable.m b/scripts/gui/uitable.m
--- a/scripts/gui/uitable.m
+++ b/scripts/gui/uitable.m
@@ -27,18 +27,17 @@
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uitable relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uitable object.
 ##
-## Properties of uitable objects are documented at
-## @ref{Uitable Properties}.
+## The full list of properties is documented at @ref{Uitable Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
 ## ## Create figure and place a table on it
 ## f = figure ();
 ## m = magic (8);
diff --git a/scripts/gui/uitoggletool.m b/scripts/gui/uitoggletool.m
--- a/scripts/gui/uitoggletool.m
+++ b/scripts/gui/uitoggletool.m
@@ -33,17 +33,17 @@
 ## created.
 ##
 ## If @var{parent} is given then a uitoggletool is created on the
 ## @var{parent} uitoolbar.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uitoggletool object.
 ##
-## Uitoggletool properties are documented at @ref{Uitoggletool Properties}.
+## The full list of properties is documented at @ref{Uitoggletool Properties}.
 ##
 ## The optional return value @var{hui} is a graphics handle to the created
 ## uitoggletool object.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
diff --git a/scripts/gui/uitoolbar.m b/scripts/gui/uitoolbar.m
--- a/scripts/gui/uitoolbar.m
+++ b/scripts/gui/uitoolbar.m
@@ -28,17 +28,17 @@
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uitoolbar relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uitoolbar object.
 ##
-## Uitoolbar properties are documented at @ref{Uitoolbar Properties}.
+## The full list of properties is documented at @ref{Uitoolbar Properties}.
 ##
 ## The optional return value @var{hui} is a graphics handle to the created
 ## uitoolbar object.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
