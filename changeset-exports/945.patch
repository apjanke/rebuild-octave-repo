# HG changeset patch
# User jwe
# Date 785455015 0
#      Mon Nov 21 21:56:55 1994 +0000
# Node ID a1b0080599e5992ca239d41510ddc5bac36c6211
# Parent  2e954ce5263ff44fc4873e7665efa1a7e589b400
[project @ 1994-11-21 21:56:42 by jwe]

diff --git a/src/npsol.cc b/src/npsol.cc
--- a/src/npsol.cc
+++ b/src/npsol.cc
@@ -353,32 +353,32 @@ Handle all of the following:
       nlp.copy (npsol_opts);
       soln = nlp.minimize (objf, inform, lambda);
 
       goto solved;
     }
 
   npsol_constraints = 0;
   if (nargin == 5 || nargin == 7 || nargin == 8 || nargin == 10)
-    npsol_constraints = is_valid_function (args(nargin-1), "npsol", 0);
+    npsol_constraints = is_valid_function (args(nargin-2), "npsol", 0);
 
   if (nargin == 7 || nargin == 5)
     {
       if (! npsol_constraints)
 	{
-	  ColumnVector lub = args(nargin).vector_value ();
-	  ColumnVector llb = args(nargin-2).vector_value ();
+	  ColumnVector lub = args(nargin-1).vector_value ();
+	  ColumnVector llb = args(nargin-3).vector_value ();
 
 	  if (error_state || llb.capacity () == 0 || lub.capacity () == 0)
 	    {
 	      error ("npsol: bounds for linear constraints must be vectors");
 	      return retval;
 	    }
 
-	  Matrix c = args(nargin-1).matrix_value ();
+	  Matrix c = args(nargin-2).matrix_value ();
 
 	  if (error_state)
 	    {
 	      error ("npsol: invalid linear constraint matrix");
 	      return retval;
 	    }
 
 	  if (! linear_constraints_ok (x, llb, c, lub, "npsol", 1))
@@ -403,18 +403,18 @@ Handle all of the following:
 	      soln = nlp.minimize (objf, inform, lambda);
 	    }
 	  goto solved;
 	}
       else
 	{
 	  if (takes_correct_nargs (npsol_constraints, 1, "npsol", 1))
 	    {
-	      ColumnVector nlub = args(nargin).vector_value ();
-	      ColumnVector nllb = args(nargin-2).vector_value ();
+	      ColumnVector nlub = args(nargin-1).vector_value ();
+	      ColumnVector nllb = args(nargin-3).vector_value ();
 
 	      if (error_state
 		  || (! nonlinear_constraints_ok
 		      (x, nllb, npsol_constraint_function, nlub, "npsol", 1)))
 		return retval;
 
 	      NLFunc const_func (npsol_constraint_function);
 	      NLConst nonlinear_constraints (nllb, const_func, nlub);
@@ -440,43 +440,43 @@ Handle all of the following:
 	}
     }
 
   if (nargin == 8 || nargin == 10)
     {
       if (! npsol_constraints)
 	{
 	  // Produce error message.
-	  is_valid_function (args(nargin-1), "npsol", 1);
+	  is_valid_function (args(nargin-2), "npsol", 1);
 	}
       else
 	{
 	  if (takes_correct_nargs (npsol_constraints, 1, "npsol", 1))
 	    {
-	      ColumnVector nlub = args(nargin).vector_value ();
-	      ColumnVector nllb = args(nargin-2).vector_value ();
+	      ColumnVector nlub = args(nargin-1).vector_value ();
+	      ColumnVector nllb = args(nargin-3).vector_value ();
 
 	      if (error_state
 		  || (! nonlinear_constraints_ok
 		      (x, nllb, npsol_constraint_function, nlub, "npsol", 1)))
 		return retval;
 
 	      NLFunc const_func (npsol_constraint_function);
 	      NLConst nonlinear_constraints (nllb, const_func, nlub);
 
-	      ColumnVector lub = args(nargin-3).vector_value ();
-	      ColumnVector llb = args(nargin-5).vector_value ();
+	      ColumnVector lub = args(nargin-4).vector_value ();
+	      ColumnVector llb = args(nargin-6).vector_value ();
 
 	      if (error_state || llb.capacity () == 0 || lub.capacity () == 0)
 		{
 		  error ("npsol: bounds for linear constraints must be vectors");
 		  return retval;
 		}
 	      
-	      Matrix c = args(nargin-4).matrix_value ();
+	      Matrix c = args(nargin-5).matrix_value ();
 
 	      if (error_state)
 		{
 		  error ("npsol: invalid linear constraint matrix");
 		  return retval;
 		}
 
 	      if (! linear_constraints_ok (x, llb, c, lub, "npsol", 1))
diff --git a/src/qpsol.cc b/src/qpsol.cc
--- a/src/qpsol.cc
+++ b/src/qpsol.cc
@@ -167,26 +167,26 @@ Handle all of the following:
       qp.copy (qpsol_opts);
       soln = qp.minimize (objf, inform, lambda);
 
       goto solved;
     }
 
   if (nargin == 6 || nargin == 8)
     {
-      ColumnVector lub = args(nargin).vector_value ();
-      ColumnVector llb = args(nargin-2).vector_value ();
+      ColumnVector lub = args(nargin-1).vector_value ();
+      ColumnVector llb = args(nargin-3).vector_value ();
 
       if (error_state || llb.capacity () == 0 || lub.capacity () == 0)
 	{
 	  error ("qpsol: bounds for linear constraints must be vectors");
 	  return retval;
 	}
 
-      Matrix A = args(nargin-1).matrix_value ();
+      Matrix A = args(nargin-2).matrix_value ();
 
       if (error_state)
 	{
 	  error ("qpsol: invalid linear constraint matrix");
 	  return retval;
 	}
 
       if (! linear_constraints_ok (x, llb, A, lub, "qpsol", 1))
