# HG changeset patch
# User jwe
# Date 1059501783 0
#      Tue Jul 29 18:03:03 2003 +0000
# Node ID f52db9e1296abfea93935dd927aa97dd8a412be7
# Parent  6a1e6e87f143950f3c2486724159838ed17c98b2
[project @ 2003-07-29 18:03:03 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+2003-07-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install-lib): Use $(INSTALL), not
+	$(INSTALL_PROGRAM) for $(SHLBIN) files.
+
 2003-07-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (CLEAN_SUBDIRS): New variable.
 	(clean mostlyclean distclean maintainer-clean): Use it to ensure
 	cleaning in all subdirs, not just those we build in.
 
 	* Makerules.in (maintainer-clean, distclean): Don't use
 	dependencies on double colon rules.
diff --git a/libcruft/Makefile.in b/libcruft/Makefile.in
--- a/libcruft/Makefile.in
+++ b/libcruft/Makefile.in
@@ -133,17 +133,17 @@ install::
 	if $(SHARED_LIBS); then \
 	  rm -f $(DESTDIR)$(octlibdir)/libcruft.$(SHLLIB_VER); \
 	  $(INSTALL_PROGRAM) \
 	    libcruft.$(SHLLIB) $(DESTDIR)$(octlibdir)/libcruft.$(SHLLIB_VER); \
 	  rm -f $(DESTDIR)$(octlibdir)/libcruft.$(SHLLIB); \
 	  $(LN_S) libcruft.$(SHLLIB_VER) $(DESTDIR)$(octlibdir)/libcruft.$(SHLLIB); \
 	  if  test x$(SHLBIN) != x ; then \
 	    rm -f $(DESTDIR)$(bindir)/libcruft.$(SHLBIN); \
-	    $(INSTALL_PROGRAM) \
+	    $(INSTALL) \
 	      libcruft.$(SHLBIN) $(DESTDIR)$(bindir)/libcruft.$(SHLBIN); \
 	  fi; \
 	fi
 
 install-strip::
 	$(MAKE) INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s" install
 
 uninstall::
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2003-07-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install-lib): Use $(INSTALL), not
+	$(INSTALL_PROGRAM) for $(SHLBIN) files.
+
 2003-07-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-mappers.cc (xmin, xmax): Handle NaN in a Matlab-compatible
 	way.  Handle NA in an R-compatible way.
 
 	* lo-cieee.c (lo_ieee_is_NaN_or_NA): Also check for lo_ieee_is_NA.
 	(lo_ieee_is_NA): Don't call isnan unless HAVE_ISNAN is defined.
 
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -248,17 +248,17 @@ install-lib:
 	if $(SHARED_LIBS); then \
 	  rm -f $(DESTDIR)$(octlibdir)/liboctave.$(SHLLIB_VER); \
 	  $(INSTALL_PROGRAM) \
 	    liboctave.$(SHLLIB) $(DESTDIR)$(octlibdir)/liboctave.$(SHLLIB_VER); \
 	  rm -f $(DESTDIR)$(octlibdir)/liboctave.$(SHLLIB); \
 	  $(LN_S) liboctave.$(SHLLIB_VER) $(DESTDIR)$(octlibdir)/liboctave.$(SHLLIB); \
 	  if  test x$(SHLBIN) != x ; then \
 	    rm -f $(DESTDIR)$(bindir)/liboctave.$(SHLBIN); \
-	    $(INSTALL_PROGRAM) \
+	    $(INSTALL) \
 	      liboctave.$(SHLBIN) $(DESTDIR)$(bindir)/liboctave.$(SHLBIN); \
 	  fi; \
 	fi
 .PHONY: install-lib
 
 install-inc:
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(octincludedir)/octave
 	for f in $(INCLUDES_FOR_INSTALL); do \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2003-07-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install-lib): Use $(INSTALL), not
+	$(INSTALL_PROGRAM) for $(SHLBIN) files.
+
+2003-07-29  Paul Kienzle <pkienzle@users.sf.net>
+
+	* Makefile.in: Don't need special system.c for Cygwin.
+	* oct-procbuf.cc: Use popen rather than fork/exec for Windows.
+
 2003-07-28  Paul Kienzle <pkienzle@users.sf.net>
 
 	* sysdep.cc (CYGWIN_init): Convert TMPDIR to system agnostic path.
 
 2003-07-25  Paul Kienzle <pkienzle@users.sf.net>
 
 	* help.cc (try_info, display_help_text):
 	Protect spaces in filenames with quotes.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -124,17 +124,17 @@ DIST_SRC := Cell.cc c-file-ptr-stream.cc
 	dynamic-ld.cc error.cc file-io.cc fn-cache.cc gripes.cc \
 	help.cc input.cc lex.l load-save.cc main.c mappers.cc \
 	matherr.c oct-fstrm.cc oct-hist.cc oct-iostrm.cc \
 	oct-map.cc oct-obj.cc oct-prcstrm.cc oct-procbuf.cc \
 	oct-stdstrm.cc oct-stream.cc \
 	oct-strstrm.cc oct-lvalue.cc pager.cc parse.y \
 	pr-output.cc procstream.cc sighandlers.cc \
 	siglist.c strcasecmp.c strncase.c strfns.cc symtab.cc \
-	syscalls.cc sysdep.cc system.c token.cc toplev.cc \
+	syscalls.cc sysdep.cc token.cc toplev.cc \
 	unwind-prot.cc utils.cc variables.cc xdiv.cc xpow.cc \
 	$(OV_SRC) \
 	$(PT_SRC)
 
 SOURCES := $(DIST_SRC) $(OP_SRC) $(TI_SRC)
 
 OBJECTS_4 := $(notdir $(SOURCES))
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
@@ -367,17 +367,17 @@ install-lib:
 	if $(SHARED_LIBS); then \
 	  rm -f $(DESTDIR)$(octlibdir)/liboctinterp.$(SHLEXT_VER); \
 	  $(INSTALL_PROGRAM) liboctinterp.$(SHLLIB) \
 	    $(DESTDIR)$(octlibdir)/liboctinterp.$(SHLLIB_VER); \
 	  rm -f $(DESTDIR)$(octlibdir)/liboctinterp.$(SHLLIB); \
 	  $(LN_S) liboctinterp.$(SHLLIB_VER) $(DESTDIR)$(octlibdir)/liboctinterp.$(SHLLIB); \
 	  if  test x$(SHLBIN) != x ; then \
 	    rm -f $(DESTDIR)$(bindir)/liboctinterp.$(SHLBIN); \
-	    $(INSTALL_PROGRAM) \
+	    $(INSTALL) \
 	      liboctinterp.$(SHLBIN) $(DESTDIR)$(bindir)/liboctinterp.$(SHLBIN); \
 	  fi; \
 	fi
 .PHONY: install-lib
 
 install-inc:
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(octincludedir)/octave
 	for f in $(INCLUDES); do \
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -51,17 +51,38 @@ static int Vkluge_procbuf_delay = 0;
 // This class is based on the procbuf class from libg++, written by
 // Per Bothner, Copyright (C) 1993 Free Software Foundation.
 
 static octave_procbuf *octave_procbuf_list = 0;
 
 octave_procbuf *
 octave_procbuf::open (const char *command, int mode)
 {
-#if defined (HAVE_SYS_WAIT_H)
+#if defined (__CYGWIN32__)
+
+  if (is_open ()) 
+    return 0;
+
+  f = popen (command, (mode & std::ios::in) ? "r" : "w");
+
+  if (! f)
+    return 0;
+
+  // Oops... popen doesn't return the associated pid, so fake it for now
+
+  proc_pid = 1;
+
+  open_p = true;
+
+  if (mode & std::ios::out)
+    ::setvbuf (f, 0, _IOLBF, 0);
+
+  return this;
+  
+#elif defined (HAVE_SYS_WAIT_H)
 
   int pipe_fds[2];
 
   volatile int child_std_end = (mode & std::ios::in) ? 1 : 0;
 
   volatile int parent_end, child_end;
 
   if (is_open ())
@@ -139,17 +160,29 @@ octave_procbuf::open (const char *comman
   return 0;
 
 #endif
 }
 
 octave_procbuf *
 octave_procbuf::close (void)
 {
-#if defined (HAVE_SYS_WAIT_H)
+#if defined (__CYGWIN32__)
+
+  if (f)
+    {
+      wstatus = ::pclose (f);
+      f = 0;
+    }
+
+  open_p = false;
+
+  return this;
+  
+#elif defined (HAVE_SYS_WAIT_H)
 
   if (f)
     {
       pid_t wait_pid;
 
       int status = -1;
 
       for (octave_procbuf **ptr = &octave_procbuf_list;
