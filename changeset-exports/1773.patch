# HG changeset patch
# User jwe
# Date 822384668 0
#      Tue Jan 23 08:11:08 1996 +0000
# Node ID 5215571ea78329d487d3e6eb7463fcb537a33a9c
# Parent  95c4c5705909d1c9d3f9404f3a09db427544b1c3
[project @ 1996-01-23 08:10:26 by jwe]

diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -24,19 +24,20 @@ MATRIX_INC := Array.h Array-idx.h MArray
 	CmplxLU.h CmplxQR.h CmplxQRP.h CmplxSCHUR.h CmplxSVD.h EIG.h \
 	chMatrix.h \
 	dColVector.h dDiagMatrix.h dMatrix.h dRowVector.h dbleAEPBAL.h \
 	dbleCHOL.h dbleDET.h dbleGEPBAL.h dbleHESS.h dbleLU.h dbleQR.h \
 	dbleQRP.h dbleSCHUR.h dbleSVD.h
 
 INCLUDES := Bounds.h CollocWt.h DAE.h DAEFunc.h FEGrid.h FSQP.h \
 	LinConst.h LP.h LPsolve.h NLConst.h NLEqn.h NLFunc.h NLP.h \
-	NPSOL.h ODE.h ODEFunc.h Objective.h QP.h QPSOL.h \
-	Quad.h Range.h base-min.h f77-uscore.h idx-vector.h \
-	lo-error.h oct-cmplx.h oct-math.h str-vec.h sun-utils.h \
+	NPSOL.h ODE.h ODEFunc.h Objective.h QP.h QPSOL.h Quad.h \
+	Range.h base-min.h file-ops.h f77-uscore.h idx-vector.h \
+	lo-error.h oct-cmplx.h oct-math.h statdefs.h str-vec.h \
+	sun-utils.h \
 	$(MATRIX_INC)
 
 TEMPLATE_SRC := Array.cc MArray.cc
 
 TI_SRC := Array-C.cc Array-ch.cc Array-i.cc Array-d.cc Array-s.cc \
 	Array-str.cc \
 	MArray-C.cc MArray-ch.cc MArray-i.cc MArray-d.cc MArray-s.cc
 
@@ -45,25 +46,27 @@ MATRIX_SRC := Array-ext.cc CColVector.cc
 	CmplxHESS.cc CmplxLU.cc CmplxQR.cc CmplxQRP.cc CmplxSCHUR.cc \
 	CmplxSVD.cc EIG.cc chMatrix.cc dColVector.cc dDiagMatrix.cc \
 	dMatrix.cc dRowVector.cc dbleAEPBAL.cc dbleCHOL.cc \
 	dbleDET.cc dbleGEPBAL.cc dbleHESS.cc dbleLU.cc dbleQR.cc \
 	dbleQRP.cc dbleSCHUR.cc dbleSVD.cc
 
 SOURCES := Bounds.cc CollocWt.cc DAE.cc FEGrid.cc FSQP.cc LinConst.cc \
 	LPsolve.cc NLEqn.cc NPSOL.cc ODE.cc QPSOL.cc Quad.cc \
-	Range.cc acosh.c asinh.c atanh.c erf.c erfc.c gamma.c \
-	idx-vector.cc lo-error.cc lgamma.c sun-utils.cc \
+	Range.cc acosh.c asinh.c atanh.c erf.c erfc.c file-ops.cc \
+	filemode.c gamma.c idx-vector.cc lo-error.cc lgamma.c mkdir.c \
+	rename.c rmdir.c sun-utils.cc \
 	$(TEMPLATE_SRC) \
 	$(TI_SRC) \
 	$(MATRIX_SRC)
 
 EXTRAS := mx-inlines.cc
 
-DISTFILES := Makefile.in $(SOURCES) $(INCLUDES) $(EXTRAS)
+DISTFILES := Makefile.in safe-xstat.cin safe-xstat.hin \
+	$(SOURCES) $(INCLUDES) $(EXTRAS)
 
 MAKEDEPS_1 := $(patsubst %.cc, %.d, $(SOURCES))
 MAKEDEPS := $(patsubst %.c, %.d, $(MAKEDEPS_1))
 
 OBJECTS_1 := $(patsubst %.cc, %.o, $(SOURCES))
 OBJECTS := $(patsubst %.c, %.o, $(OBJECTS_1))
 
 ifeq ($(SHARED_LIBS), true)
@@ -71,17 +74,17 @@ ifeq ($(SHARED_LIBS), true)
     PICOBJ := $(addprefix pic/, $(OBJECTS))
   else
     PICOBJ := $(OBJECTS)
   endif
 endif
 
 LIBOCTAVE_DEPEND := $(patsubst %, liboctave.a(%), $(OBJECTS))
 
-all: stamp-picdir liboctave.a stamp-shared
+all: safe-stat.h safe-lstat.h stamp-picdir liboctave.a stamp-shared
 .PHONY: all
 
 stamp-picdir:
 	if [ -n "$(CXXPICFLAG)" ]; then \
 	  if [ -d pic ]; then true; else mkdir pic ; fi ; \
 	else true; fi
 	touch stamp-picdir
 
@@ -91,16 +94,42 @@ liboctave.a: $(OBJECTS)
 
 stamp-shared:
 	if $(SHARED_LIBS); then \
 	  $(CXX) -shared -o liboctave.$(SHLEXT) $(PICOBJ) \
 	  -L../libcruft -lcruft; \
 	else true; fi
 	touch stamp-shared
 
+extract_stat = sed 's/@l@//g; s/@L@//g; /@LSTAT_ONLY@/d'
+extract_lstat = sed 's/@l@/l/g; s/@L@/L/g; s/	*@LSTAT_ONLY@//'
+
+safe-lstat.c: safe-xstat.cin
+	@echo "making $@ from $<"
+	@$(extract_lstat) $< > $@.tmp
+	@$(top_srcdir)/move-if-change $@.tmp $@
+
+safe-lstat.h: safe-xstat.hin
+	@echo "making $@ from $<"
+	@$(extract_lstat) $< > $@.tmp
+	@$(top_srcdir)/move-if-change $@.tmp $@
+
+safe-stat.c: safe-xstat.cin
+	@echo "making $@ from $<"
+	@$(extract_stat) $< > $@.tmp
+	@$(top_srcdir)/move-if-change $@.tmp $@
+
+safe-stat.h: safe-xstat.hin
+	@echo "making $@ from $<"
+	@$(extract_stat) $< > $@.tmp
+	@$(top_srcdir)/move-if-change $@.tmp $@
+
+safe-stat.o: safe-stat.h
+safe-lstat.o: safe-lstat.h safe-stat.h
+
 check: all
 .PHONY: check
 
 install: all
 	$(top_srcdir)/mkinstalldirs $(libdir) $(includedir)
 	rm -f $(libdir)/liboctave.a
 	$(INSTALL_DATA) liboctave.a $(libdir)/liboctave.a
 	$(RANLIB) $(libdir)/liboctave.a
@@ -121,17 +150,17 @@ uninstall:
 
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 clean:
-	rm -f *.a *.o *.d pic/*.o
+	rm -f safe-stat.h safe-lstat.h *.a *.o *.d pic/*.o
 	if $(SHARED_LIBS); then rm -f *.$(SHLEXT); fi
 .PHONY: clean
 
 mostlyclean: clean
 .PHONY: mostlyclean
 
 distclean: clean
 	rm -f Makefile
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -29,16 +29,18 @@ Software Foundation, 59 Temple Place - S
 #include <cstring>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
 #include "file-ops.h"
+#include "safe-lstat.h"
+#include "safe-stat.h"
 #include "statdefs.h"
 
 // XXX FIXME XXX -- the is_* and mode_as_string functions are only valid
 // for initialized objects.  If called for an object that is not
 // initialized, they should throw an exception.
 
 bool
 file_stat::is_blk (void) const
@@ -106,17 +108,17 @@ file_stat::update_internal (bool force)
       initialized = false;
       fail = false;
 
       const char *cname = file_name.c_str ();
 
       struct stat buf;
 
       int status = follow_links
-	? stat (cname, &buf) : lstat (cname, &buf);
+	? safe_stat (cname, &buf) : safe_lstat (cname, &buf);
 
       if (status < 0)
 	{
 	  fail = true;
 	  errmsg = strerror (errno);
 	}
       else
 	{
@@ -162,41 +164,47 @@ is_newer (const string& file, time_t tim
 
 int
 oct_mkdir (const string& name, mode_t mode)
 {
   return mkdir (name.c_str (), mode);
 }
 
 int
-oct_rmdir (const string& name)
+oct_mkfifo (const string& name, mode_t mode)
 {
-  return rmdir (name.c_str ());
+  return mkfifo (name.c_str (), mode);
 }
 
 int
 oct_rename (const string& from, const string& to)
 {
   return rename (from.c_str (), to.c_str ());
 }
 
 int
-oct_mkfifo (const string& name, mode_t mode)
+oct_rmdir (const string& name)
 {
-  return mkfifo (name.c_str (), mode);
+  return rmdir (name.c_str ());
 }
 
 int
 oct_umask (mode_t mode)
 {
 #if defined (HAVE_UMASK)
   return umask (mode);
 #else
   return 0;
 #endif
 }
 
+int
+oct_unlink (const string& name)
+{
+  return unlink (name.c_str ());
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
diff --git a/liboctave/file-ops.h b/liboctave/file-ops.h
--- a/liboctave/file-ops.h
+++ b/liboctave/file-ops.h
@@ -185,20 +185,21 @@ private:
 #endif
 
   void update_internal (bool force = false);
 };
 
 extern int is_newer (const string&, time_t);
 
 extern int oct_mkdir (const string&, mode_t);
-extern int oct_rmdir (const string&);
+extern int oct_mkfifo (const string&, mode_t);
 extern int oct_rename (const string&, const string&);
-extern int oct_mkfifo (const string&, mode_t);
+extern int oct_rmdir (const string&);
 extern int oct_umask (mode_t);
+extern int oct_unlink (const string&);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -78,50 +78,51 @@ ifeq ($(OCTAVE_LITE), true)
     DLD_STATIC_OBJ := $(DLD_OBJ)
   endif
 else
   DLD_STATIC_OBJ := $(DLD_OBJ)
 endif
 
 INCLUDES := arith-ops.h builtins.h defaults.h.in defun.h defun-dld.h \
 	defun-int.h dirfns.h dynamic-ld.h error.h file-info.h \
-	file-io.h fnmatch.h getopt.h gripes.h help.h input.h lex.h \
-	load-save.h mappers.h missing-math.h oct-gperf.h \
-	oct-hist.h oct-map.h oct-obj.h pager.h parse.h pathlen.h \
-	pathsearch.h pr-output.h procstream.h pt-base.h pt-cmd.h \
-	pt-const.h pt-exp-base.h pt-exp.h pt-fcn.h pt-fvc-base.h \
-	pt-fvc.h pt-mat.h pt-misc.h pt-mvr-base.h pt-mvr.h pt-plot.h \
-	sighandlers.h statdefs.h symtab.h sysdep.h sysdir.h systime.h \
-	syswait.h token.h toplev.h unwind-prot.h user-prefs.h utils.h \
-	variables.h version.h xdiv.h xpow.h Map.h SLStack.h Stack.h
+	file-io.h fnmatch.h getopt.h gripes.h help.h \
+	input.h lex.h load-save.h mappers.h \
+	oct-gperf.h oct-hist.h oct-map.h oct-obj.h pager.h parse.h \
+	pathlen.h pathsearch.h pr-output.h procstream.h pt-base.h \
+	pt-cmd.h pt-const.h pt-exp-base.h pt-exp.h pt-fcn.h \
+	pt-fvc-base.h pt-fvc.h pt-mat.h pt-misc.h pt-mvr-base.h \
+	pt-mvr.h pt-plot.h sighandlers.h statdefs.h symtab.h sysdep.h \
+	sysdir.h systime.h syswait.h token.h toplev.h unwind-prot.h \
+	user-prefs.h utils.h variables.h version.h xdiv.h xpow.h Map.h \
+	SLStack.h Stack.h
 
 TI_SRC := Array-tc.cc Map-tc.cc DLList-fi.cc \
 	SLList-expr.cc SLList-misc.cc SLList-plot.cc SLList-str.cc \
 	SLList-tc.cc SLStack-i.cc SLStack-pc.cc SLStack-str.cc \
 	SLStack-sym.cc SLStack-tok.cc SLStack-tm.cc SLStack-ue.cc \
 	SLStack-ui.cc
 
 TI_OBJ := $(patsubst %.cc, %.o, $(TI_SRC))
 
 TI_PICOBJ := $(TI_OBJ)
 ifdef CXXPICFLAG
   TI_PICOBJ := $(addprefix pic/, $(TI_OBJ))
 endif
 
-SOURCES := acosh.c arith-ops.cc asinh.c atanh.c data.cc dirfns.cc \
-	dynamic-ld.cc erf.c erfc.c error.cc file-info.cc file-io.cc \
-	filemode.c fnmatch.c getopt.c getopt1.c gripes.cc help.cc \
-	input.cc lex.l load-save.cc mappers.cc mkdir.c oct-hist.cc \
-	oct-map.cc oct-obj.cc pager.cc parse.y pathsearch.cc \
-	pr-output.cc procstream.cc pt-base.cc pt-cmd.cc pt-const.cc \
-	pt-exp-base.cc pt-exp.cc pt-fcn.cc pt-fvc-base.cc pt-fvc.cc \
-	pt-mat.cc pt-misc.cc pt-mvr-base.cc pt-mvr.cc pt-plot.cc \
-	rename.c resource.cc rmdir.c sighandlers.cc strcasecmp.c \
-	strncase.c strfns.cc strftime.c symtab.cc sysdep.cc \
-	tempname.c timefns.cc tempnam.c token.cc toplev.cc \
+SOURCES := arith-ops.cc data.cc dirfns.cc \
+	dynamic-ld.cc error.cc file-info.cc file-io.cc \
+	fnmatch.c getopt.c getopt1.c \
+	gripes.cc help.cc input.cc lex.l load-save.cc mappers.cc \
+	oct-hist.cc oct-map.cc oct-obj.cc pager.cc parse.y \
+	pathsearch.cc pr-output.cc procstream.cc pt-base.cc pt-cmd.cc \
+	pt-const.cc pt-exp-base.cc pt-exp.cc pt-fcn.cc pt-fvc-base.cc \
+	pt-fvc.cc pt-mat.cc pt-misc.cc pt-mvr-base.cc pt-mvr.cc \
+	pt-plot.cc resource.cc sighandlers.cc \
+	strcasecmp.c strncase.c strfns.cc strftime.c symtab.cc \
+	sysdep.cc tempname.c timefns.cc tempnam.c token.cc toplev.cc \
 	unwind-prot.cc user-prefs.cc utils.cc variables.cc xdiv.cc \
 	xpow.cc
 
 TEMPLATE_SRC = Map.cc SLStack.cc
 
 OBJECTS_4 := $(SOURCES)
 OBJECTS_3 := $(patsubst %.l, %.o, $(OBJECTS_4))
 OBJECTS_2 := $(patsubst %.y, %.o, $(OBJECTS_3))
@@ -160,20 +161,20 @@ OCTAVE_LIBS = -loctinterp -loctave -ltin
 LIBS_TO_INSTALL = liboctinterp.a libtinst.a \
 	liboctinterp.$(SHLEXT) libtinst.$(SHLEXT)
 
 TERMLIBS = @TERMLIBS@
 
 LIBS = @LIBS@
 
 DISTFILES = Makefile.in mkdefs mkbuiltins octave.gperf octave.cc \
-	parse.cc lex.cc y.tab.h safe-xstat.cin safe-xstat.hin \
+	parse.cc lex.cc y.tab.h \
 	$(INCLUDES) $(DLD_SRC) $(SOURCES) $(TEMPLATE_SRC) $(TI_SRC)
 
-all: defaults.h safe-stat.h safe-lstat.h stamp-picdir libraries \
+all: defaults.h stamp-picdir libraries \
 	$(OCT_FILES) octave
 .PHONY: all
 
 octave: octave.o builtins.o $(DLD_STATIC_OBJ) libraries
 	$(CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(ALL_LDFLAGS) -o octave \
 	octave.o builtins.o $(DLD_STATIC_OBJ) \
 	$(OCTAVE_LFLAGS) \
 	$(OCTAVE_LIBS) \
@@ -256,17 +257,17 @@ uninstall:
 
 tags: $(SOURCES) $(DLD_SRC) $(TI_SRC)
 	ctags $(SOURCES) $(DLD_SRC) $(TI_SRC)
 
 TAGS: $(SOURCES) $(DLD_SRC) $(TI_SRC)
 	etags $(SOURCES) $(DLD_SRC) $(TI_SRC)
 
 clean:
-	rm -f *.a *.o builtins.cc safe-stat.h safe-lstat.h \
+	rm -f *.a *.o builtins.cc \
 	defaults.h *.d *.def
 	if $(SHARED_LIBS); then rm -f *.$(SHLEXT); fi
 .PHONY: clean
 
 mostlyclean:
 	rm -f *.o
 .PHONY: mostlyclean
 
@@ -318,40 +319,14 @@ defaults.h: defaults.h.in ../Makeconf Ma
 	  -e "s;%CXXLIB_PATH%;\"${CXXLIB_PATH}\";")
 	@$(top_srcdir)/move-if-change $@.tmp $@
 
 oct-gperf.h: octave.gperf
 	gperf -a -C -E -H octave_kw_hash -g -N octave_kw_lookup -p -t \
 	  $< > $@.tmp
 	@$(top_srcdir)/move-if-change $@.tmp $@
 
-extract_stat = sed 's/@l@//g; s/@L@//g; /@LSTAT_ONLY@/d'
-extract_lstat = sed 's/@l@/l/g; s/@L@/L/g; s/	*@LSTAT_ONLY@//'
-
-safe-lstat.c: safe-xstat.cin
-	@echo "making $@ from $<"
-	@$(extract_lstat) $< > $@.tmp
-	@$(top_srcdir)/move-if-change $@.tmp $@
-
-safe-lstat.h: safe-xstat.hin
-	@echo "making $@ from $<"
-	@$(extract_lstat) $< > $@.tmp
-	@$(top_srcdir)/move-if-change $@.tmp $@
-
-safe-stat.c: safe-xstat.cin
-	@echo "making $@ from $<"
-	@$(extract_stat) $< > $@.tmp
-	@$(top_srcdir)/move-if-change $@.tmp $@
-
-safe-stat.h: safe-xstat.hin
-	@echo "making $@ from $<"
-	@$(extract_stat) $< > $@.tmp
-	@$(top_srcdir)/move-if-change $@.tmp $@
-
-safe-stat.o: safe-stat.h
-safe-lstat.o: safe-lstat.h safe-stat.h
-
 check: all
 .PHONY: check
 
 ifndef omit_deps
 -include $(MAKEDEPS)
 endif
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -539,17 +539,17 @@ otherwise prints an error message.")
   if (args.length () == 1)
     {
       string dirname = args(0).string_value ();
 
       if (error_state)
 	gripe_wrong_type_arg ("mkdir", args(0));
       else
 	{
-	  int mkdir_retval = xmkdir (oct_tilde_expand (dirname), 0777);
+	  int mkdir_retval = oct_mkdir (oct_tilde_expand (dirname), 0777);
 
 	  if (mkdir_retval < 0)
 	    {
 	      status = -1;
 	      error ("%s", strerror (errno));
 	    }
 	}
     }
@@ -575,17 +575,17 @@ otherwise prints an error message.")
   if (args.length () == 1)
     {
       string dirname = args(0).string_value ();
 
       if (error_state)
 	gripe_wrong_type_arg ("rmdir", args(0));
       else
 	{
-	  int rmdir_retval = xrmdir (oct_tilde_expand (dirname));
+	  int rmdir_retval = oct_rmdir (oct_tilde_expand (dirname));
 
 	  if (rmdir_retval < 0)
 	    {
 	      status = -1;
 	      error ("%s", strerror (errno));
 	    }
 	}
     }
@@ -615,17 +615,17 @@ otherwise prints an error message and re
       if (error_state)
 	gripe_wrong_type_arg ("rename", args(0));
       else
 	{
 	  string to = args(1).string_value ();
 
 	  if (error_state)
 	    gripe_wrong_type_arg ("rename", args(1));
-	  else if (xrename (from, to) < 0)
+	  else if (oct_rename (from, to) < 0)
 	    {
 	      status = -1;
 	      error ("%s", strerror (errno));
 	    }
 	}
     }
   else
     print_usage ("rename");
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -2340,17 +2340,17 @@ mkfifo_internal (const Octave_object& ar
   if (! args(1).is_scalar_type ())
     {
       error ("mkfifo:  MODE must be an integer");
       return retval;
     }
 
   long mode = (long) args(1).double_value ();
 
-  retval (0) = (double) xmkfifo (name, mode);
+  retval (0) = (double) oct_mkfifo (name, mode);
 
   return retval;
 }
 
 DEFUN ("mkfifo", Fmkfifo, Smkfifo, 10,
   "STATUS = mkfifo (NAME, MODE)\n\
 \n\
   Create a FIFO special file named NAME with file mode MODE\n\
@@ -2381,17 +2381,17 @@ unlink_internal (const Octave_object& ar
     {
       error ("unlink: file name must be a string");
       retval (0) = -1.0;
       return retval;
     }
 
   string name = args(0).string_value ();
 
-  retval (0) = (double) unlink (name.c_str ());
+  retval (0) = (double) oct_unlink (name);
 
   return retval;
 }
 
 DEFUN ("unlink", Funlink, Sunlink, 10,
   "STATUS = unlink (NAME)\n\
 \n\
   Delete the file NAME\n\
@@ -2573,17 +2573,17 @@ printed.")
 	      status = -1;
 	      error ("umask: MASK must be a positive integer value");
 	    }
 	  else
 	    {
 	      int oct_mask = convert (mask, 8, 10);
 
 	      if (! error_state)
-		status = convert (xumask (oct_mask), 10, 8);
+		status = convert (oct_umask (oct_mask), 10, 8);
 	    }
 	}
     }
   else
     print_usage ("umask");
 
   if (status >= 0)
     retval(0) = (double) status;
