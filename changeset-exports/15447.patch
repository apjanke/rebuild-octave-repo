# HG changeset patch
# User John Swensen <jpswensen@gmail.com>
# Date 1348766699 14400
#      Thu Sep 27 13:24:59 2012 -0400
# Node ID 352349219529006de2e72479455ad1450fd0c443
# Parent  137de4fbeaf61d30e0ba811c6ca841aee77e2354
Added multiline copy and execution to command history in IDE (bug #36884)

* history-dockwidget.cc (history_dock_widget::ctxMenu) : New function.
  (history_dock_widget::handle_contextmenu_copy) : New function.
  (history_dock_widget::handle_contextmenu_evaluate) : New function.
  (history_dock_widget::history_dock_widget) : Connected popup menu to QListView.
  (history_dock_widget::handle_double_click) : Append <CR> to selected history to actually execute the command.

diff --git a/libgui/src/history-dockwidget.cc b/libgui/src/history-dockwidget.cc
--- a/libgui/src/history-dockwidget.cc
+++ b/libgui/src/history-dockwidget.cc
@@ -19,17 +19,20 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <QApplication>
+#include <QClipboard>
 #include <QVBoxLayout>
+#include <QMenu>
 
 #include "error.h"
 
 #include "cmd-hist.h"
 
 #include "history-dockwidget.h"
 #include "octave-link.h"
 
@@ -45,16 +48,20 @@ history_dock_widget::construct ()
 {
   _history_model = new QStringListModel ();
   _sort_filter_proxy_model.setSourceModel (_history_model);
   _history_list_view = new QListView (this);
   _history_list_view->setModel (&_sort_filter_proxy_model);
   _history_list_view->setAlternatingRowColors (true);
   _history_list_view->setEditTriggers (QAbstractItemView::NoEditTriggers);
   _history_list_view->setStatusTip (tr ("Doubleclick a command to transfer it to the terminal."));
+  _history_list_view->setSelectionMode (QAbstractItemView::ExtendedSelection);
+  _history_list_view->setContextMenuPolicy(Qt::CustomContextMenu);
+  connect(_history_list_view, SIGNAL(customContextMenuRequested(const QPoint &)), this, SLOT(ctxMenu(const QPoint &)));
+
   _filter_line_edit = new QLineEdit (this);
   _filter_line_edit->setStatusTip (tr ("Enter text to filter the command history."));
   QVBoxLayout *vbox_layout = new QVBoxLayout ();
 
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
   vbox_layout->addWidget (_history_list_view);
@@ -86,20 +93,53 @@ history_dock_widget::construct ()
            this,
            SLOT (request_history_model_update ()));
 
   _update_history_model_timer.start ();
 
   setFocusProxy (_filter_line_edit);
 }
 
+void history_dock_widget::ctxMenu(const QPoint &pos) {
+    QMenu *menu = new QMenu;
+    menu->addAction(tr("Copy"), this, SLOT(handle_contextmenu_copy(bool)));
+    menu->addAction(tr("Evaluate"), this, SLOT(handle_contextmenu_evaluate(bool)));
+    menu->exec(_history_list_view->mapToGlobal(pos));
+}
+
+void history_dock_widget::handle_contextmenu_copy(bool flag)
+{
+  QString text;
+  QItemSelectionModel *selectionModel = _history_list_view->selectionModel();
+  QModelIndexList rows = selectionModel->selectedRows();
+  QModelIndexList::iterator it;
+  for (it=rows.begin() ; it != rows.end(); it++) {
+    if ((*it).isValid()) {
+      text += (*it).data().toString()+"\n";
+    }
+  }
+  QApplication::clipboard()->setText(text);
+}
+
+void history_dock_widget::handle_contextmenu_evaluate(bool flag)
+{
+  QItemSelectionModel *selectionModel = _history_list_view->selectionModel();
+  QModelIndexList rows = selectionModel->selectedRows();
+  QModelIndexList::iterator it;
+  for (it=rows.begin() ; it != rows.end(); it++) {
+    if ((*it).isValid()) {
+      emit command_double_clicked ((*it).data().toString()+"\n");
+    }
+  }
+}
+
 void
 history_dock_widget::handle_double_click (QModelIndex modelIndex)
 {
-  emit command_double_clicked (modelIndex.data().toString());
+  emit command_double_clicked (modelIndex.data().toString()+"\n");
 }
 
 void
 history_dock_widget::handle_visibility_changed (bool visible)
 {
   if (visible)
     emit active_changed (true);
 }
diff --git a/libgui/src/history-dockwidget.h b/libgui/src/history-dockwidget.h
--- a/libgui/src/history-dockwidget.h
+++ b/libgui/src/history-dockwidget.h
@@ -48,16 +48,19 @@ signals:
   void command_double_clicked (const QString& command);
 
   /** Custom signal that tells if a user has clicked away that dock widget. */
   void active_changed (bool active);
 protected:
   void closeEvent (QCloseEvent *event);
 private slots:
   void handle_double_click (QModelIndex modelIndex);
+  void handle_contextmenu_copy(bool flag);
+  void handle_contextmenu_evaluate(bool flag);
+  void ctxMenu(const QPoint &pos);
 
 private:
   void construct ();
   QListView *_history_list_view;
   QLineEdit *_filter_line_edit;
   QSortFilterProxyModel _sort_filter_proxy_model;
 
   /** Stores the current history_model. */
