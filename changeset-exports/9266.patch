# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1243372807 14400
#      Tue May 26 17:20:07 2009 -0400
# Node ID 1d3b91166b9cea5576439e705efe44c536b2f8d6
# Parent  7f3a1a90f4f48ea3ac3e93ac216d29f6ad328751
allow pathsep to be set

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-05-26  John W. Eaton  <jwe@octave.org>
+
+	* src/dirfns.cc (Fpathsep): Allow path separator to be set.
+
 2009-03-17  Thomas Weber  <thomas.weber.mail at gmail.com>
 
         * configure.in: fix typo with regards to termios.h
 
 2009-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* examples/@FIRfilter/Makefile.in: New file.
 	* examples/Makefile.in: Include it.
diff --git a/liboctave/pathsearch.h b/liboctave/pathsearch.h
--- a/liboctave/pathsearch.h
+++ b/liboctave/pathsearch.h
@@ -83,16 +83,21 @@ public:
       init ();
     }
 
   static char path_sep_char (void)
   {
     return static_members::path_sep_char ();
   }
 
+  static void path_sep_char (char c)
+  {
+    static_members::path_sep_char (c);
+  }
+
   static std::string path_sep_str (void)
   {
     return static_members::path_sep_str ();
   }
 
   static bool is_path_sep (char c) { return c == path_sep_char (); }
 
 private:
@@ -126,16 +131,25 @@ private:
 
     static_members (void);
 
     static char path_sep_char (void)
     {
       return instance_ok () ? instance->xpath_sep_char : 0;
     }
 
+    static void path_sep_char (char c)
+    {
+      if (instance_ok ())
+	{
+	  instance->xpath_sep_char = c;
+	  instance->xpath_sep_str = std::string (1, c);
+	}
+    }
+
     static std::string path_sep_str (void)
     {
       return instance_ok () ? instance->xpath_sep_str : std::string ();
     }
 
   private:
 
     static static_members *instance;
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -666,29 +666,57 @@ backward slashes) under Windows.\n\
 	gripe_wrong_type_arg ("filesep", args(0));
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (pathsep, args, ,
+DEFUN (pathsep, args, nargout,
     "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} pathsep ()\n\
-Return the system-dependent character used to separate directories in\n\
+@deftypefn {Built-in Function} {@var{val} =} pathsep ()\n\
+@deftypefn {Built-in Function} {@var{old_val} =} pathsep (@var{new_val})\n\
+Query or set the character used to separate directories in\n\
 a path.\n\
 @seealso{filesep, dir, ls}\n\
 @end deftypefn")
 {
   octave_value retval;
 
-  if (args.length () == 0)
+  int nargin = args.length ();
+
+  if (nargout > 0 || nargin == 0)
     retval = dir_path::path_sep_str ();
-  else
+
+  if (nargin == 1)
+    {
+      std::string sval = args(0).string_value ();
+
+      if (! error_state)
+	{
+	  switch (sval.length ())
+	    {
+	    case 1:
+	      dir_path::path_sep_char (sval[0]);
+	      break;
+
+	    case 0:
+	      dir_path::path_sep_char ('\0');
+	      break;
+
+	    default:
+	      error ("pathsep: argument must be a single character");
+	      break;
+	    }
+	}
+      else
+	error ("pathsep: argument must be a single character");
+    }
+  else if (nargin > 1)
     print_usage ();
 
   return retval;
 }
 
 DEFUN (confirm_recursive_rmdir, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} confirm_recursive_rmdir ()\n\
