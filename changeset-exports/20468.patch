# HG changeset patch
# User Rik <rik@octave.org>
# Date 1440715926 25200
#      Thu Aug 27 15:52:06 2015 -0700
# Node ID 2f94652de9ffbce18713b13ec09a033ccac9cae7
# Parent  4bef1880098ce3bc15bb074c1f73babc84351a4d
Add placeholder functions for save_hdf5, load_hdf5 for octave_java functions.

* ov-java.h (save_hdf5, load_hdf5): Declare prototypes.
* ov-java.cc (save_hdf5): Emit warning about inability to save java objects.
* ov-java.cc (load_hdf5): Silently skip unsaved java objects in file.

diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -1875,16 +1875,32 @@ octave_java::save_binary (std::ostream& 
 bool
 octave_java::load_binary (std::istream& /* is */, bool /* swap*/,
                           oct_mach_info::float_format /* fmt */)
 {
   // Silently skip over java object that was not saved
   return true;
 }
 
+bool
+octave_java::save_hdf5 (octave_hdf5_id /* loc_id */, const char * /* name */,
+                        bool /* save_as_floats */)
+{
+  warning ("save: unable to save java objects, skipping");
+
+  return true;
+}
+
+bool
+octave_java::load_hdf5 (octave_hdf5_id /* loc_id */, const char * /* name */)
+{
+  // Silently skip object that was not saved
+  return true;
+}
+
 octave_value
 octave_java::do_javaMethod (JNIEnv* jni_env, const std::string& name,
                             const octave_value_list& args)
 {
   octave_value retval;
 
   if (jni_env)
     {
diff --git a/libinterp/octave-value/ov-java.h b/libinterp/octave-value/ov-java.h
--- a/libinterp/octave-value/ov-java.h
+++ b/libinterp/octave-value/ov-java.h
@@ -161,16 +161,21 @@ public:
 
   bool load_ascii (std::istream& is);
 
   bool save_binary (std::ostream& os, bool& save_as_floats);
 
   bool load_binary (std::istream& is, bool swap,
                     oct_mach_info::float_format fmt);
 
+  bool save_hdf5 (octave_hdf5_id loc_id, const char *name,
+                  bool save_as_floats);
+
+  bool load_hdf5 (octave_hdf5_id loc_id, const char *name);
+
   octave_value_list
   subsref (const std::string& type,
            const std::list<octave_value_list>& idx, int nargout);
 
   octave_value
   subsref (const std::string& type, const std::list<octave_value_list>& idx)
   {
     octave_value_list retval = subsref (type, idx, 1);
