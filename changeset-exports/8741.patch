# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234592656 -3600
#      Sat Feb 14 07:24:16 2009 +0100
# Node ID 008f3985c8c0daac25699016dc78a303d26bed73
# Parent  cb0ea772a4af2ffb9ef19b79ae82e66e7429dbb5
use new summation code for native integer summation

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-14  Jaroslav Hajek  <highegg@gmail.com>
+
+	* intNDArray.cc: include mx-inlines.cc.
+	(intNDArray::sum): Use mx_do_red_op (..., mx_inline_sum).
+
 2009-02-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (OP_RED_SUM, OP_RED_PROD, OP_RED_SUMSQ, OP_RED_SUMSQC,
 	OP_RED_FCN, OP_RED_FCN2, OP_RED_FCNN, OP_CUM_FCN, OP_CUM_FCN2,
 	OP_CUM_FCNN): New macros.
 	(mx_inline_sum, mx_inline_prod, mx_inline_sumsq, mx_inline_cumsum,
 	mx_inline_cumprod, get_extent_triplet, do_mx_red_op, do_mx_cum_op):
 	New template functions.
diff --git a/liboctave/intNDArray.cc b/liboctave/intNDArray.cc
--- a/liboctave/intNDArray.cc
+++ b/liboctave/intNDArray.cc
@@ -23,16 +23,17 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "Array-util.h"
 #include "mx-base.h"
 #include "lo-ieee.h"
+#include "mx-inlines.cc"
 
 // unary operations
 
 template <class T>
 boolNDArray
 intNDArray<T>::operator ! (void) const
 {
   boolNDArray b (this->dims ());
@@ -200,17 +201,17 @@ intNDArray<T>::signum (void) const
 
   return ret;
 }
 
 template <class T>
 intNDArray<T>
 intNDArray<T>::sum (int dim) const
 {
-  MX_ND_REDUCTION (retval(result_idx) += intNDArray<T>::elem (iter_idx), 0, intNDArray<T>);
+  return do_mx_red_op<intNDArray<T> > (*this, dim, mx_inline_sum);
 }
 
 template <class T>
 intNDArray<T>
 intNDArray<T>::max (int dim) const
 {
   ArrayN<octave_idx_type> dummy_idx;
   return max (dummy_idx, dim);
