# HG changeset patch
# User jwe
# Date 760946612 0
#      Fri Feb 11 06:03:32 1994 +0000
# Node ID f99cd19d183e673e51c91753d388dfdb28396eba
# Parent  f52ab689669a29aeb7513622d069658e93ad83a1
[project @ 1994-02-11 06:03:32 by jwe]

diff --git a/src/g-builtins.cc b/src/g-builtins.cc
--- a/src/g-builtins.cc
+++ b/src/g-builtins.cc
@@ -87,16 +87,19 @@ Software Foundation, Inc.
 #include "pager.h"
 #include "octave.h"
 #include "version.h"
 #include "file-io.h"
 
 extern "C"
 {
 #include <readline/readline.h>
+
+extern char *term_clrpag;
+extern void _rl_output_character_function ();
 }
 
 #ifndef MAXPATHLEN
 #define MAXPATHLEN 1024
 #endif
 
 #ifdef WITH_DLD
 #include "dynamic-ld.h"
@@ -198,17 +201,28 @@ builtin_chol (const tree_constant *args,
 /*
  * Clear the screen?
  */
 tree_constant *
 builtin_clc (const tree_constant *args, int nargin, int nargout)
 {
   rl_beg_of_line ();
   rl_kill_line (1);
-  rl_clear_screen ();
+
+#if ! defined (_GO32_)
+  if (term_clrpag)
+    tputs (term_clrpag, 1, _rl_output_character_function);
+  else
+    crlf ();
+#else
+  crlf ();
+#endif
+
+  fflush (rl_outstream);
+
   return NULL_TREE_CONST;
 }
 
 /*
  * Time in a vector.
  */
 tree_constant *
 builtin_clock (const tree_constant *args, int nargin, int nargout)
@@ -1758,17 +1772,17 @@ builtin_va_arg (const tree_constant *arg
   tree_constant *retval = NULL_TREE_CONST;
   if (nargin == 1)
     {
       if (curr_function != (tree_function *) NULL)
 	{
 	  if (curr_function->takes_varargs ())
 	    {
 	      retval = new tree_constant [2];
-	      retval[0] = curr_function->va_arg ();
+	      retval[0] = curr_function->octave_va_arg ();
 	    }
 	  else
 	    {
 	      error ("va_arg only valid within function taking variable");
 	      error ("number of arguments");
 	    }
 	}
       else
@@ -1784,17 +1798,17 @@ tree_constant *
 builtin_va_start (const tree_constant *args, int nargin, int nargout)
 {
   tree_constant *retval = NULL_TREE_CONST;
   if (nargin == 1)
     {
       if (curr_function != (tree_function *) NULL)
 	{
 	  if (curr_function->takes_varargs ())
-	    curr_function->va_start ();
+	    curr_function->octave_va_start ();
 	  else
 	    {
 	      error ("va_start only valid within function taking variable");
 	      error ("number of arguments");
 	    }
 	}
       else
 	error ("va_start only valid within function body");
