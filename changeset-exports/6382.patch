# HG changeset patch
# User jwe
# Date 1173130180 0
#      Mon Mar 05 21:29:40 2007 +0000
# Node ID f74e71ef6612233e12c4921fb5d8b05fda0606ed
# Parent  8a844b3d10b18fc1c4332597678b6e7798558548
[project @ 2007-03-05 21:29:40 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-03-05  John W. Eaton  <jwe@octave.org>
+
+	* optimization/sqp.m: Defer first call to obj_hess until after
+	calling obj_fun.
+
 2007-03-02  Bob Weigel <rweigel@gmu.edu>
 
 	* specfun/nchoosek.m: Fix nargin check.
 
 2007-03-01  Daniel J Sebald  <daniel.sebald@ieee.org>
 
 	* image/__img__.m: Don't set xlim and ylim properties.
 
diff --git a/scripts/optimization/sqp.m b/scripts/optimization/sqp.m
--- a/scripts/optimization/sqp.m
+++ b/scripts/optimization/sqp.m
@@ -174,18 +174,16 @@ function [x, obj, info, iter, nf, lambda
 
   if (nargin >= 2 && nargin <= 4)
 
     ## Choose an initial NxN symmetric positive definite Hessan
     ## approximation B.
 
     n = length (x);
 
-    B = eye (n, n);
-
     ## Evaluate objective function, constraints, and gradients at initial
     ## value of x.
     ##
     ## obj_fun
     ## obj_grad
     ## ce_fun  -- equality constraint functions
     ## ci_fun  -- inequality constraint functions
     ## A == [grad_{x_1} cx_fun, grad_{x_2} cx_fun, ..., grad_{x_n} cx_fun]^T
@@ -195,17 +193,16 @@ function [x, obj, info, iter, nf, lambda
     if (iscell (objf))
       if (length (objf) > 0)
 	__sqp_obj_fun__ = obj_fun = objf{1};
 	if (length (objf) > 1)
 	  obj_grd = objf{2};
 	  if (length (objf) > 2)
 	    obj_hess = objf{3};
 	    have_hess = 1;
-	    B = feval (obj_hess, x);
 	  endif
 	endif
       else
 	error ("sqp: invalid objective function");
       endif
     else
       __sqp_obj_fun__ = obj_fun = objf;
     endif
@@ -252,16 +249,22 @@ function [x, obj, info, iter, nf, lambda
 
     iter = 0;
 
     obj = feval (obj_fun, x);
     nfun = 1;
 
     c = feval (obj_grd, x);
 
+    if (have_hess)
+      B = feval (obj_hess, x);
+    else
+      B = eye (n, n);
+    endif
+
     ce = feval (ce_fun, x);
     F = feval (ce_grd, x);
 
     ci = feval (ci_fun, x);
     C = feval (ci_grd, x);
 
     A = [F; C];
 
