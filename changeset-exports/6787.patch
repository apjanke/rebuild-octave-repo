# HG changeset patch
# User jwe
# Date 1185218620 0
#      Mon Jul 23 19:23:40 2007 +0000
# Node ID 963a19576024c2b2d6d2d78b7b35160d954201a0
# Parent  bb5958d3510a583c99116b0d088edebc7e1545d6
[project @ 2007-07-23 19:23:39 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-07-23  Aquil H. Abdullah  <aquil.abdullah@gmail.com>
+
+	* mex.cc (mxCreateStructArray): Declare second arg as const.
+	* mexproto.h (mxCreateStructArray): Ditto.
+
 2007-07-20  David Bateman  <dbateman@free.fr>
 
         * zfstream.cc (BUFSIZE): Increase default buffer size to 256kB
         (gzfilebuf::underflow): Stash the last 16 characters read, so as
         to avoid calling pbackfail as much as possible.
 
 2007-07-18  David Bateman  <dbateman@free.fr>
 
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -2490,17 +2490,17 @@ mxCreateSparseLogicalMatrix (mwSize m, m
 
 mxArray *
 mxCreateString (const char *str)
 {
   return maybe_mark_array (new mxArray (str));
 }
 
 mxArray *
-mxCreateStructArray (mwSize ndims, mwSize *dims, int num_keys, const char **keys)
+mxCreateStructArray (mwSize ndims, const mwSize *dims, int num_keys, const char **keys)
 {
   return maybe_mark_array (new mxArray (ndims, dims, num_keys, keys));
 }
 
 mxArray *
 mxCreateStructMatrix (mwSize m, mwSize n, int num_keys, const char **keys)
 {
   return maybe_mark_array (new mxArray (m, n, num_keys, keys));
diff --git a/src/mexproto.h b/src/mexproto.h
--- a/src/mexproto.h
+++ b/src/mexproto.h
@@ -118,17 +118,17 @@ extern OCTINTERP_API mxArray *mxCreateDo
 extern OCTINTERP_API mxArray *mxCreateLogicalArray (mwSize ndims, const mwSize *dims);
 extern OCTINTERP_API mxArray *mxCreateLogicalMatrix (mwSize m, mwSize n);
 extern OCTINTERP_API mxArray *mxCreateLogicalScalar (int val);
 extern OCTINTERP_API mxArray *mxCreateNumericArray (mwSize ndims, const mwSize *dims, mxClassID class_id, mxComplexity flag);
 extern OCTINTERP_API mxArray *mxCreateNumericMatrix (mwSize m, mwSize n, mxClassID class_id, mxComplexity flag);
 extern OCTINTERP_API mxArray *mxCreateSparse (mwSize m, mwSize n, mwSize nzmax, mxComplexity flag);
 extern OCTINTERP_API mxArray *mxCreateSparseLogicalMatrix (mwSize m, mwSize n, mwSize nzmax);
 extern OCTINTERP_API mxArray *mxCreateString (const char *str);
-extern OCTINTERP_API mxArray *mxCreateStructArray (mwSize ndims, mwSize *dims, int num_keys, const char **keys);
+extern OCTINTERP_API mxArray *mxCreateStructArray (mwSize ndims, const mwSize *dims, int num_keys, const char **keys);
 extern OCTINTERP_API mxArray *mxCreateStructMatrix (mwSize rows, mwSize cols, int num_keys, const char **keys);
 
 // Copy constructor.
 extern OCTINTERP_API mxArray *mxDuplicateArray (const mxArray *v);
 
 // Destructor.
 extern OCTINTERP_API void mxDestroyArray (mxArray *v);
 
