# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1435874844 14400
#      Thu Jul 02 18:07:24 2015 -0400
# Node ID 4f911b4e012bf0b226920afffd465c9ea9a2a258
# Parent  dadfb0be8a42f0d65c98760f2189c85b812af28e
allow bc-overload tests to be written to an arbitrary directory

* build-bc-overload-tests.sh: Fix file name in comments to match
file name.  Accept second argument to specify directory in which to
write output files.
* test/Makefile.am (bc-overload-tests.stamp): Adapt rule.

diff --git a/test/Makefile.am b/test/Makefile.am
--- a/test/Makefile.am
+++ b/test/Makefile.am
@@ -86,17 +86,18 @@ sparse.tst: build-sparse-tests.sh
 
 GENERATED_BC_OVERLOADS_DIRS := \
   $(shell $(srcdir)/build-bc-overload-tests.sh --list-dirs)
 
 GENERATED_BC_OVERLOADS_FILES := \
   $(shell $(srcdir)/build-bc-overload-tests.sh --list-files)
 
 bc-overload-tests.stamp: build-bc-overload-tests.sh bc-overloads-expected
-	$(srcdir)/build-bc-overload-tests.sh $(srcdir)/bc-overloads-expected
+	$(AM_V_GEN)rm -f $@ && \
+	$(srcdir)/build-bc-overload-tests.sh $(top_builddir)/test $(srcdir)/bc-overloads-expected && \
 	touch $@
 
 BUILT_SOURCES = bc-overload-tests.stamp
 
 EXTRA_DIST = \
   build-sparse-tests.sh \
   build-bc-overload-tests.sh \
   bc-overloads-expected \
diff --git a/test/build-bc-overload-tests.sh b/test/build-bc-overload-tests.sh
--- a/test/build-bc-overload-tests.sh
+++ b/test/build-bc-overload-tests.sh
@@ -52,50 +52,54 @@ if [ $# -eq 1 ]; then
       done
       exit
     ;;
     --list-classes)
       echo $CLASSES
       exit
     ;;
     *)
-      expected_results_file="$1"
+      echo "usage: build-bc-overload-tests.sh option" 1>&2
+      exit 1
     ;;
   esac
+elif [ $# -eq 2 ]; then
+    output_dir="$1"
+    expected_results_file="$2"
 else
-  echo "usage: build_bc_overload_tests.sh expected-results-file" 1>&2
+  echo "usage: build-bc-overload-tests.sh expected-results-file" 1>&2
   exit 1
 fi
 
 for class in $CLASSES; do
-  DIR="@$class"
+  DIR="$output_dir/@$class"
   test -d $DIR || mkdir $DIR || { echo "error: could not create $DIR"; exit; }
   cat > $DIR/tbcover.m << EOF
 % !!! DO NOT EDIT !!!
-% generated automatically by build_bc_overload_tests.sh
+% generated automatically by build-bc-overload-tests.sh
 function s = tbcover (x, y)
   s = '$class';
 EOF
 done
 
-cat > tbcover.m << EOF
+cat > $output_dir/tbcover.m << EOF
 % !!! DO NOT EDIT !!!
-% generated automatically by build_bc_overload_tests.sh
+% generated automatically by build-bc-overload-tests.sh
 function s = tbcover (x, y)
   s = 'none';
 EOF
 
 if test "$1" = "overloads_only" ; then
   exit
 fi
 
-cat > bc-overloads.tst << EOF
+cat > $output_dir/bc-overloads.tst << EOF
 ## !!! DO NOT EDIT !!!
 ## THIS IS AN AUTOMATICALLY GENERATED FILE
-## modify build_bc_overload_tests.sh to generate the tests you need.
+## modify build-bc-overload-tests.sh to generate the tests you need.
 
 %!shared ex
 %! ex.double = 1;
 %! ex.single = single (1);
 %! ex.logical = true;
 %! ex.char = 'char';
 %! ex.int8  = int8 (1);
 %! ex.int16 = int16 (1);
@@ -108,26 +112,26 @@ cat > bc-overloads.tst << EOF
 %! ex.cell = {};
 %! ex.struct = struct ();
 %! ex.function_handle = @numel;
 
 EOF
 
 cat $expected_results_file | \
 while read cl1 cl2 clr ; do
-  cat >> bc-overloads.tst << EOF
+  cat >> $output_dir/bc-overloads.tst << EOF
 %% Name call
 %!assert (tbcover (ex.$cl1, ex.$cl2), "$clr")
 %% Handle call
 %!assert ((@tbcover) (ex.$cl1, ex.$cl2), "$clr")
 
 EOF
 done
 
-cat >> bc-overloads.tst << EOF
+cat >> $output_dir/bc-overloads.tst << EOF
 %%test handles through cellfun
 %!test
 %! f = fieldnames (ex);
 %! n = numel (f);
 %! s = c1 = c2 = cell (n);
 %! for i = 1:n
 %!   for j = 1:n
 %!     c1{i,j} = ex.(f{i});
