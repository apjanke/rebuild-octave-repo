# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1303073467 -7200
#      Sun Apr 17 22:51:07 2011 +0200
# Node ID 32e2bc78ae77e3dab317e830c1c2276da3c705f3
# Parent  3542af417878c768c1039674e1257f04205e2ec1
Loading, saving and clearing the workspace now works via the GUI.

diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -16,16 +16,17 @@
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include <QMenuBar>
 #include <QMenu>
 #include <QAction>
 #include <QSettings>
 #include <QDesktopServices>
+#include <QFileDialog>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 
 MainWindow::MainWindow(QWidget *parent)
     : QMainWindow(parent),
       m_isRunning(true) {
     QDesktopServices desktopServices;
@@ -58,25 +59,34 @@ void MainWindow::reportStatusMessage(QSt
     m_statusBar->showMessage(statusMessage, 1000);
 }
 
 void MainWindow::openWebPage(QString url) {
     m_browserWidget->load(QUrl(url));
 }
 
 void MainWindow::handleSaveWorkspaceRequest() {
-    // TODO: Handle saving of workspace.
+    QDesktopServices desktopServices;
+    QString selectedFile = QFileDialog::getSaveFileName(this, "Save Workspace",
+        desktopServices.storageLocation(QDesktopServices::HomeLocation) + "/.quint/workspace");
+    m_octaveTerminal->sendText(QString("save \'%1\'\n").arg(selectedFile));
+    m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleLoadWorkspaceRequest() {
-    // TODO: Handle loading of workspace.
+    QDesktopServices desktopServices;
+    QString selectedFile = QFileDialog::getOpenFileName(this, "Load Workspace",
+        desktopServices.storageLocation(QDesktopServices::HomeLocation) + "/.quint/workspace");
+    m_octaveTerminal->sendText(QString("load \'%1\'\n").arg(selectedFile));
+    m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleClearWorkspaceRequest() {
-    // TODO: Handle clearing of workspace.
+    m_octaveTerminal->sendText("clear\n");
+    m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleCommandDoubleClicked(QString command) {
     m_octaveTerminal->sendText(command);
 }
 
 void MainWindow::closeEvent(QCloseEvent *closeEvent) {
     m_isRunning = false;
diff --git a/gui//src/Vt102Emulation.cpp b/gui//src/Vt102Emulation.cpp
--- a/gui//src/Vt102Emulation.cpp
+++ b/gui//src/Vt102Emulation.cpp
@@ -883,16 +883,17 @@ void Vt102Emulation::sendMouseEvent( int
 void Vt102Emulation::sendText( const QString& text )
 {
   if (!text.isEmpty()) 
   {
     QKeyEvent event(QEvent::KeyPress, 
                     0, 
                     Qt::NoModifier, 
                     text);
+
     sendKeyEvent(&event); // expose as a big fat keypress event
   }
 }
 void Vt102Emulation::sendKeyEvent( QKeyEvent* event )
 {
     Qt::KeyboardModifiers modifiers = event->modifiers();
     KeyboardTranslator::States states = KeyboardTranslator::NoState;
 
