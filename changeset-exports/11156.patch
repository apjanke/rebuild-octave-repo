# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1288035389 -7200
#      Mon Oct 25 21:36:29 2010 +0200
# Node ID 83da69c6e7bea15d4abeee10f6e74ea4285e7e5c
# Parent  f0e9befd6a1c90e858838470736e0e283aef4364
Sort values in discrete_pdf before calling lookup

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-10-25  David Bateman  <dbateman@free.fr>
+
+	* statistics/distributions/discrete_pdf.m: Sort values before calling
+	the lookup function.
+
 2010-10-25  Kai Habel  <kai.habel@gmx.de>
 
 	* gl-render.cc (opengl_renderer::draw ): Ignore uimenu objects here.
 	* graphics.h.in (class OCTINTERP_API uimenu): New graphics object.
 	* graphics.cc (lookup_object_name): Add uimenu here.
 	(make_graphics_object_from_type): Likewise.
 	(property_list::set): Likewise.
 	(property_list::lookup): Likewise.
diff --git a/scripts/statistics/distributions/discrete_pdf.m b/scripts/statistics/distributions/discrete_pdf.m
--- a/scripts/statistics/distributions/discrete_pdf.m
+++ b/scripts/statistics/distributions/discrete_pdf.m
@@ -48,12 +48,13 @@ function pdf = discrete_pdf (x, v, p)
   x = reshape (x, n, 1);
   v = reshape (v, 1, m);
   p = reshape (p / sum (p), m, 1);
 
   pdf = NaN (sz);
   k = find (!isnan (x));
   if (any (k))
     n = length (k);
-    pdf (k) = p (lookup (v, x(k), 'm'));
+    [vs, vi] = sort (v);
+    pdf (k) = p (vi(lookup (vs, x(k), 'm')));
   endif
 
 endfunction
