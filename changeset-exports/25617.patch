# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1531515536 -7200
#      Fri Jul 13 22:58:56 2018 +0200
# Node ID 44d638d5eea5d925548135d3d378de6796ec44b8
# Parent  bd362df6277ceca51f5a21e6a41009bb7e13995e
reorganize constants for preferences keys and default values

* editor-settings.h: rename into gui-preferences.h

* gui-preferences.h: define a structure for key string and default value,
  reorganize existing constants using the new structure, renaming constants
  reflecting the main widget they are used in

* file-editor-tab.cc: include gui-preferences.h;
  (do_comment_selected_text): use const structure with new names for
  preferences keys and default values
file-editor-tab.cc	Wed Jul 11 07:56:05 2018 +0200

* octave-qscintilla.cc: include gui-preferences.h;
  (comment_string): use const structure with new names for preferences
  keys and default values

* module.mk: rename editor-settings.h into gui-preferences.h

* settings-dialog.cc:  include gui-preferences.h;
  (settings_dialog, write_changed_settings): use const structure with new
  names for preferences keys and default values

* settings-dialog.h: include gui-preferences.h, use const structure with new
  names for preferences keys and default values

diff --git a/libgui/src/editor-settings.h b/libgui/src/gui-preferences.h
rename from libgui/src/editor-settings.h
rename to libgui/src/gui-preferences.h
--- a/libgui/src/editor-settings.h
+++ b/libgui/src/gui-preferences.h
@@ -23,22 +23,34 @@ along with Octave; see the file COPYING.
 #if ! defined (octave_editor_settings_h)
 #define octave_editor_settings_h 1
 
 //#if defined (HAVE_CONFIG_H)
 //#  include "config.h"
 //#endif
 
 #include <QStringList>
+#include <QVariant>
+
+// Structure for the definition of pairs: key and default value
+
+struct gui_pref
+{
+  gui_pref (const QString& key_, QVariant def_): key (key_), def (def_) {}
+  QString   key;  // the key name
+  QVariant  def;  // the default value
+};
+
+// Editor preferences
 
 // Octave comment strings
-const QString oct_comment_str_old ("editor/octave_comment_string");
-const int oct_comment_str_old_d = 0;
+const gui_pref ed_comment_str_old = gui_pref ("editor/octave_comment_string", QVariant (0));
+const gui_pref ed_comment_str ("editor/oct_comment_str", QVariant (0));
+const gui_pref ed_uncomment_str ("editor/oct_uncomment_str", QVariant (1 + 2 + 4 + 8));
 
-const QString oct_comment_str ("editor/oct_comment_str");
-const QString oct_uncomment_str ("editor/oct_uncomment_str");
-const QString oct_last_comment_str ("editor/oct_last_comment_str");
-const QStringList oct_comment_strings (QStringList () << "##" << "#" << "%"<< "%%" << "%!");
-const int oct_comment_strings_count = 5;
-const int oct_comment_str_d = 0;
-const int oct_uncomment_str_d = 1 + 2 + 4 + 8;
+const QString ed_last_comment_str ("editor/oct_last_comment_str");
+const QStringList ed_comment_strings (QStringList () << "##" << "#" << "%"<< "%%" << "%!");
+const int ed_comment_strings_count = 5;
+
+// File handling
+
 
 #endif
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -55,17 +55,17 @@ along with Octave; see the file COPYING.
 #include <QTextCodec>
 #include <QStyle>
 #include <QTextBlock>
 #include <QLabel>
 #include <QCheckBox>
 #include <QDialogButtonBox>
 #include <QPushButton>
 
-#include "editor-settings.h"
+#include "gui-preferences.h"
 #include "resource-manager.h"
 
 #include "file-editor-tab.h"
 #include "file-editor.h"
 #include "octave-txt-lexer.h"
 #include "marker.h"
 
 #include "file-ops.h"
@@ -1440,23 +1440,23 @@ namespace octave
         if (input_str)
           {
             bool ok;
             QSettings *settings = resource_manager::get_settings ();
 
             used_comment_str = QInputDialog::getText (
                                  this, tr ("Comment selected text"),
                                  tr ("Comment string to use:\n"), QLineEdit::Normal,
-                                 settings->value (oct_last_comment_str, comment_str.at (0)).toString (),
+                                 settings->value (ed_last_comment_str, comment_str.at (0)).toString (),
                                  &ok);
 
             if ((! ok) || used_comment_str.isEmpty ())
               return;  // No input, do nothing
             else
-              settings->setValue (oct_last_comment_str, used_comment_str);  // Store last
+              settings->setValue (ed_last_comment_str, used_comment_str);  // Store last
           }
       }
     else
       {
         // Uncommenting (several strings possible)
 
         // Sort strings according their length
         QStringList comment_str_sorted (comment_str.at (0));
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -45,17 +45,17 @@ along with Octave; see the file COPYING.
 
 #include <Qsci/qscicommandset.h>
 
 #include <QKeySequence>
 #include <QShortcut>
 #include <QToolTip>
 #include <QVBoxLayout>
 
-#include "editor-settings.h"
+#include "gui-preferences.h"
 #include "resource-manager.h"
 #include "shortcut-manager.h"
 
 #include "octave-qscintilla.h"
 #include "file-editor-tab.h"
 // FIXME: hardwired marker numbers?
 #include "marker.h"
 
@@ -387,39 +387,39 @@ namespace octave
 #endif
         {
           QSettings *settings = resource_manager::get_settings ();
           int comment_string;
 
           if (comment)
             {
               // The commenting string is requested
-              if (settings->contains (oct_comment_str))
+              if (settings->contains (ed_comment_str.key))
                 // new version (radio buttons)
-                comment_string = settings->value (oct_comment_str,
-                                                  oct_comment_str_d).toInt ();
+                comment_string = settings->value (ed_comment_str.key,
+                                                  ed_comment_str.def).toInt ();
               else
                 // old version (combo box)
-                comment_string = settings->value (oct_comment_str_old,
-                                                  oct_comment_str_d).toInt ();
+                comment_string = settings->value (ed_comment_str_old.key,
+                                                  ed_comment_str.def).toInt ();
 
-              return (QStringList (oct_comment_strings.at (comment_string)));
+              return (QStringList (ed_comment_strings.at (comment_string)));
             }
           else
             {
               QStringList c_str;
 
               // The possible uncommenting string(s) are requested
-              comment_string = settings->value (oct_uncomment_str,
-                                                oct_uncomment_str_d).toInt ();
+              comment_string = settings->value (ed_uncomment_str.key,
+                                                ed_uncomment_str.def).toInt ();
 
-              for (int i = 0; i < oct_comment_strings_count; i++)
+              for (int i = 0; i < ed_comment_strings_count; i++)
                 {
                   if (1 << i & comment_string)
-                    c_str.append (oct_comment_strings.at (i));
+                    c_str.append (ed_comment_strings.at (i));
                 }
 
               return c_str;
             }
 
         }
 #endif
 
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -150,17 +150,17 @@ octave_gui_UI_H = $(patsubst %reldir%/%.
 BUILT_SOURCES += $(octave_gui_UI_H)
 
 noinst_HEADERS += \
   %reldir%/dialog.h \
   %reldir%/octave-dock-widget.h \
   %reldir%/documentation-dock-widget.h \
   %reldir%/documentation.h \
   %reldir%/dw-main-window.h \
-  %reldir%/editor-settings.h \
+  %reldir%/gui-preferences.h \
   %reldir%/external-editor-interface.h \
   %reldir%/files-dock-widget.h \
   %reldir%/history-dock-widget.h \
   %reldir%/m-editor/file-editor-interface.h \
   %reldir%/m-editor/file-editor-tab.h \
   %reldir%/m-editor/file-editor.h \
   %reldir%/m-editor/find-dialog.h \
   %reldir%/m-editor/octave-qscintilla.h \
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -446,41 +446,41 @@ settings_dialog::settings_dialog (QWidge
   ui->editor_checkbox_ac_replace->setChecked (settings->value ("editor/codeCompletion_replace", false).toBool ());
   ui->editor_ws_checkbox->setChecked (settings->value ("editor/show_white_space", false).toBool ());
   ui->editor_ws_indent_checkbox->setChecked (settings->value ("editor/show_white_space_indent", false).toBool ());
   ui->cb_show_eol->setChecked (settings->value ("editor/show_eol_chars", false).toBool ());
   ui->cb_show_hscrollbar->setChecked (settings->value ("editor/show_hscroll_bar", true).toBool ());
 
   int selected_comment_string, selected_uncomment_string;
 
-  if (settings->contains (oct_comment_str))   // new version (radio buttons)
-    selected_comment_string = settings->value (oct_comment_str,
-                                               oct_comment_str_d).toInt ();
+  if (settings->contains (ed_comment_str.key))   // new version (radio buttons)
+    selected_comment_string = settings->value (ed_comment_str.key,
+                                               ed_comment_str.def).toInt ();
   else                                         // old version (combo box)
-    selected_comment_string = settings->value (oct_comment_str_old,
-                                               oct_comment_str_d).toInt ();
+    selected_comment_string = settings->value (ed_comment_str_old.key,
+                                               ed_comment_str.def).toInt ();
 
-  selected_uncomment_string = settings->value (oct_uncomment_str,
-                                               oct_uncomment_str_d).toInt ();
+  selected_uncomment_string = settings->value (ed_uncomment_str.key,
+                                               ed_uncomment_str.def).toInt ();
 
-  for (int i = 0; i < oct_comment_strings_count; i++)
+  for (int i = 0; i < ed_comment_strings_count; i++)
     {
       m_rb_comment_strings[i] = new QRadioButton ();
       m_rb_uncomment_strings[i] = new QRadioButton ();
 
       connect (m_rb_comment_strings[i], SIGNAL (clicked (bool)),
                m_rb_uncomment_strings[i], SLOT (setChecked (bool)));
       connect (m_rb_comment_strings[i], SIGNAL (toggled (bool)),
                m_rb_uncomment_strings[i], SLOT (setDisabled (bool)));
 
-      m_rb_comment_strings[i]->setText (oct_comment_strings.at(i));
+      m_rb_comment_strings[i]->setText (ed_comment_strings.at(i));
       m_rb_comment_strings[i]->setChecked (i == selected_comment_string);
       ui->layout_comment_strings->addWidget (m_rb_comment_strings[i]);
 
-      m_rb_uncomment_strings[i]->setText (oct_comment_strings.at(i));
+      m_rb_uncomment_strings[i]->setText (ed_comment_strings.at(i));
       m_rb_uncomment_strings[i]->setAutoExclusive (false);
       m_rb_uncomment_strings[i]->setChecked ( 1 << i & selected_uncomment_string);
       ui->layout_uncomment_strings->addWidget (m_rb_uncomment_strings[i]);
     }
 
 
 #if defined (HAVE_QSCINTILLA)
 #  if defined (Q_OS_WIN32)
@@ -848,30 +848,30 @@ settings_dialog::write_changed_settings 
   settings->setValue ("editor/show_white_space", ui->editor_ws_checkbox->isChecked ());
   settings->setValue ("editor/show_white_space_indent", ui->editor_ws_indent_checkbox->isChecked ());
   settings->setValue ("editor/show_eol_chars", ui->cb_show_eol->isChecked ());
   settings->setValue ("editor/show_hscroll_bar", ui->cb_show_hscrollbar->isChecked ());
   settings->setValue ("editor/default_eol_mode", ui->combo_eol_mode->currentIndex ());
 
   // Comment strings
   int rb_uncomment = 0;
-  for (int i = 0; i < oct_comment_strings_count; i++)
+  for (int i = 0; i < ed_comment_strings_count; i++)
     {
       if (m_rb_comment_strings[i]->isChecked ())
         {
-          settings->setValue (oct_comment_str, i);
+          settings->setValue (ed_comment_str.key, i);
           if (i < 3)
-            settings->setValue (oct_comment_str_old, i);
+            settings->setValue (ed_comment_str_old.key, i);
           else
-            settings->setValue (oct_comment_str_old, oct_comment_str_d);
+            settings->setValue (ed_comment_str_old.key, ed_comment_str.def);
         }
       if (m_rb_uncomment_strings[i]->isChecked ())
         rb_uncomment = rb_uncomment + (1 << i);
     }
-  settings->setValue (oct_uncomment_str, rb_uncomment);
+  settings->setValue (ed_uncomment_str.key, rb_uncomment);
 
   settings->setValue ("editor/default_encoding", ui->editor_combo_encoding->currentText ());
   settings->setValue ("editor/auto_indent", ui->editor_auto_ind_checkbox->isChecked ());
   settings->setValue ("editor/tab_indents_line", ui->editor_tab_ind_checkbox->isChecked ());
   settings->setValue ("editor/backspace_unindents_line", ui->editor_bs_unind_checkbox->isChecked ());
   settings->setValue ("editor/show_indent_guides", ui->editor_ind_guides_checkbox->isChecked ());
   settings->setValue ("editor/indent_width", ui->editor_ind_width_spinbox->value ());
   settings->setValue ("editor/indent_uses_tabs", ui->editor_ind_uses_tabs_checkbox->isChecked ());
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 #define octave_settings_dialog_h 1
 
 #include <QDialog>
 #include <QSettings>
 #include <QLineEdit>
 #include <QRadioButton>
 
 #include "color-picker.h"
-#include "editor-settings.h"
+#include "gui-preferences.h"
 
 namespace Ui
 {
   class settings_dialog;
 }
 
 class settings_dialog:public QDialog
 {
@@ -81,13 +81,13 @@ private:
   void write_varedit_colors (QSettings *settings);
 
   color_picker *m_widget_title_bg_color;
   color_picker *m_widget_title_bg_color_active;
   color_picker *m_widget_title_fg_color;
   color_picker *m_widget_title_fg_color_active;
   color_picker *m_editor_current_line_color;
 
-  QRadioButton *m_rb_comment_strings[oct_comment_strings_count];
-  QRadioButton *m_rb_uncomment_strings[oct_comment_strings_count];
+  QRadioButton *m_rb_comment_strings[ed_comment_strings_count];
+  QRadioButton *m_rb_uncomment_strings[ed_comment_strings_count];
 };
 
 #endif
