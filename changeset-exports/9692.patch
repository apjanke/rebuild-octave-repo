# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1254732178 -7200
#      Mon Oct 05 10:42:58 2009 +0200
# Node ID 126b49caba0d465920967308b2e89ef27af89666
# Parent  318e0cdd31bd04ca77ef6792b26fbad5926db8f0
smart splitting of index chains

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-10-05  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-idx.cc (tree_index_expression::rvalue): When evaluating index
+	chain, split on chaining ()() and (){}.
+
 2009-10-05  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pt-misc.cc (tree_argument_list::convert_to_const_vector):
 	Return more than nargout arguments only unless undefined elements
 	occur.
 	* ov-class.cc (octave_class::subsref): Pack return list from
 	overloaded method into first value.
 
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -323,32 +323,39 @@ tree_index_expression::rvalue (int nargo
       std::list<tree_expression *>::iterator p_dyn_field = dyn_field.begin ();
 
       for (int i = 0; i < n; i++)
 	{
 	  if (i > 0)
 	    {
 	      tree_argument_list *al = *p_args;
 
-	      if (al && al->has_magic_end ())
+              // In Matlab, () can only be followed by . In Octave, we do not
+              // enforce this for rvalue expressions, but we'll split the
+              // evaluation at this point. This will, hopefully, allow Octave's
+              // looser rules apply smoothly for Matlab overloaded subsref
+              // codes.
+              bool force_split = type[i-1] == '(' && type[i] != '.';
+
+	      if (force_split || (al && al->has_magic_end ()))
 		{
 		  // We have an expression like
 		  //
 		  //   x{end}.a(end)
 		  //
 		  // and we are looking at the argument list that
 		  // contains the second (or third, etc.) "end" token,
 		  // so we must evaluate everything up to the point of
 		  // that argument list so we can pass the appropriate
 		  // value to the built-in __end__ function.
 
 		  const octave_value_list tmp_list
 		    = tmp.subsref (type.substr (tmpi, i - tmpi), idx, nargout);
 
-		  tmp = tmp_list(0);
+		  tmp = tmp_list.length () ? tmp_list(0) : octave_value ();
                   tmpi = i;
                   idx.clear ();
                   
                   if (tmp.is_cs_list ())
                     gripe_indexed_cs_list ();
 
 		  if (error_state)
 		    break;
