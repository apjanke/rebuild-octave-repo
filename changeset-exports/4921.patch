# HG changeset patch
# User jwe
# Date 1091030026 0
#      Wed Jul 28 15:53:46 2004 +0000
# Node ID d0b8964b9d4ba3d32a009ef5fcaf8a40f1bd95af
# Parent  b22a7a1db0d50e2e05fb71a462d3b1472cc11986
[project @ 2004-07-28 15:53:46 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2004-07-28  John W. Eaton  <jwe@octave.org>
+
+	* oct-cmplx.h (pow (const Complex&, const double&):
+	Convert second arg to complex to avoid libstdc++ bug.
+
 2004-07-27  John W. Eaton  <jwe@octave.org>
 
 	* oct-inttypes.h (bitshift): New arg, MASK.
 	(OCTAVE_INT_BITSHIFT_OP): Bitshift does not saturate.
 
 2004-07-23  John W. Eaton  <jwe@octave.org>
 
 	* Array.cc (Array<T>::reshape): Return *this if no change in size.
diff --git a/liboctave/oct-cmplx.h b/liboctave/oct-cmplx.h
--- a/liboctave/oct-cmplx.h
+++ b/liboctave/oct-cmplx.h
@@ -107,17 +107,20 @@ inline Complex
 pow (const Complex& z, int n)
 {
   return std::pow (z, n);
 }
 
 inline Complex
 pow (const Complex& z, const double& x)
 {
-  return std::pow (z, x);
+  // XXX FIXME XXX -- this should not be needed, but it avoids a bug
+  // in some versions of libstdc++ (3.3.x and possibly others).
+
+  return std::pow (z, Complex (x));
 }
 
 inline Complex
 pow (const Complex& z1, const Complex& z2)
 {
   return std::pow (z1, z2);
 }
 
