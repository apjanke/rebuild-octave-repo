# HG changeset patch
# User Rik <rik@octave.org>
# Date 1513182789 28800
#      Wed Dec 13 08:33:09 2017 -0800
# Branch stable
# Node ID 5528840346e78d7491d267521ea7d362924541d0
# Parent  f6016eeb27ec152951bac041ce2b5ad5c9fca107
doc: Improve documentation for findobj, findall.

* findall.m, findobj.m: Improve docstrings.

diff --git a/scripts/plot/util/findall.m b/scripts/plot/util/findall.m
--- a/scripts/plot/util/findall.m
+++ b/scripts/plot/util/findall.m
@@ -20,17 +20,17 @@
 ## @deftypefn  {} {@var{h} =} findall ()
 ## @deftypefnx {} {@var{h} =} findall (@var{prop_name}, @var{prop_value}, @dots{})
 ## @deftypefnx {} {@var{h} =} findall (@var{prop_name}, @var{prop_value}, "-@var{logical_op}", @var{prop_name}, @var{prop_value})
 ## @deftypefnx {} {@var{h} =} findall ("-property", @var{prop_name})
 ## @deftypefnx {} {@var{h} =} findall ("-regexp", @var{prop_name}, @var{pattern})
 ## @deftypefnx {} {@var{h} =} findall (@var{hlist}, @dots{})
 ## @deftypefnx {} {@var{h} =} findall (@var{hlist}, "flat", @dots{})
 ## @deftypefnx {} {@var{h} =} findall (@var{hlist}, "-depth", @var{d}, @dots{})
-## Find graphics object, including hidden ones, with specified property values.
+## Find graphics object, including hidden ones, with specified properties.
 ##
 ## The return value @var{h} is a list of handles to the found graphic objects.
 ##
 ## @code{findall} performs the same search as @code{findobj}, but it
 ## includes hidden objects (HandleVisibility = @qcode{"off"}).  For full
 ## documentation, @pxref{XREFfindobj,,findobj}.
 ## @seealso{findobj, allchild, get, set}
 ## @end deftypefn
diff --git a/scripts/plot/util/findobj.m b/scripts/plot/util/findobj.m
--- a/scripts/plot/util/findobj.m
+++ b/scripts/plot/util/findobj.m
@@ -20,61 +20,74 @@
 ## @deftypefn  {} {@var{h} =} findobj ()
 ## @deftypefnx {} {@var{h} =} findobj (@var{prop_name}, @var{prop_value}, @dots{})
 ## @deftypefnx {} {@var{h} =} findobj (@var{prop_name}, @var{prop_value}, "-@var{logical_op}", @var{prop_name}, @var{prop_value})
 ## @deftypefnx {} {@var{h} =} findobj ("-property", @var{prop_name})
 ## @deftypefnx {} {@var{h} =} findobj ("-regexp", @var{prop_name}, @var{pattern})
 ## @deftypefnx {} {@var{h} =} findobj (@var{hlist}, @dots{})
 ## @deftypefnx {} {@var{h} =} findobj (@var{hlist}, "flat", @dots{})
 ## @deftypefnx {} {@var{h} =} findobj (@var{hlist}, "-depth", @var{d}, @dots{})
-## Find graphics object with specified property values.
+## Find graphics objects with specified properties.
 ##
-## The simplest form is
+## When called without arguments, return all graphic objects beginning with the
+## root object (0) and including all of its descendants.
+##
+## The simplest form for narrowing the results is
 ##
 ## @example
 ## findobj (@var{prop_name}, @var{prop_value})
 ## @end example
 ##
 ## @noindent
 ## which returns the handles of all objects which have a property named
 ## @var{prop_name} that has the value @var{prop_value}.  If multiple
 ## property/value pairs are specified then only objects meeting all of the
-## conditions are returned.
+## conditions (equivalent to @code{-and}) are returned.
 ##
 ## The search can be limited to a particular set of objects and their
 ## descendants, by passing a handle or set of handles @var{hlist} as the first
 ## argument.
 ##
 ## The depth of the object hierarchy to search can be limited with the
-## @qcode{"-depth"} argument.  An example of searching only three generations
-## of children is:
+## @qcode{"-depth"} argument.  An example of searching through only three
+## generations of children is:
 ##
 ## @example
 ## findobj (@var{hlist}, "-depth", 3, @var{prop_name}, @var{prop_value})
 ## @end example
 ##
-## Specifying a depth @var{d} of 0, limits the search to the set of objects
-## passed in @var{hlist}.  A depth @var{d} of 0 is equivalent to the
-## @qcode{"flat"} argument.
+## Specifying a depth @var{d} of 0 limits the search to the set of objects
+## passed in @var{hlist}.  A depth of 0 is also equivalent to the
+## @qcode{"flat"} argument.  The default depth value is @code{Inf} which
+## includes all descendants.
 ##
-## A specified logical operator may be applied to the pairs of @var{prop_name}
-## and @var{prop_value}.  The supported logical operators are:
-## @qcode{"-and"}, @qcode{"-or"},
-## @qcode{"-xor"}, @qcode{"-not"}.
+## A specified logical operator may be used between @var{prop_name},
+## @var{prop_value} pairs.  The supported logical operators are: @qcode{"-and"},
+## @qcode{"-or"}, @qcode{"-xor"}, @qcode{"-not"}.  Example code to locate all
+## figure and axes objects is
+##
+## @example
+## findobj ("type", "figure", "-or", "type", "axes")
+## @end example
 ##
 ## Objects may also be matched by comparing a regular expression to the
 ## property values, where property values that match
 ## @code{regexp (@var{prop_value}, @var{pattern})} are returned.
 ##
-## Finally, objects may be matched by property name only by using the
-## @qcode{"-property"} option.
+## Finally, objects which have a property name can be found with the 
+## @qcode{"-property"} option.  For example, code to locate objects with a
+## @qcode{"meshstyle"} property is
+##
+## @example
+## findobj ("-property", "meshstyle")
+## @end example
 ##
 ## Implementation Note: The search only includes objects with visible
-## handles (HandleVisibility = @qcode{"on"}).  @xref{XREFfindall,,findall}, to
-## search for all objects including hidden ones.
+## handles (@w{HandleVisibility} = @qcode{"on"}).  @xref{XREFfindall,,findall},
+## to search for all objects including hidden ones.
 ## @seealso{findall, allchild, get, set}
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 
 function h = findobj (varargin)
 
   depth = NaN;
