# HG changeset patch
# User Rik <rik@octave.org>
# Date 1500654204 25200
#      Fri Jul 21 09:23:24 2017 -0700
# Node ID 7becd026c8bad68fbeae98a95f8c63bac57145cf
# Parent  711227992c1de732e15c8494c9c43d541197471f
Array.cc: Move variable declaration to be just ahead of where it is used.

* Array.cc (hermitian): Move "octave_idx_type ii" declaration to be inside of
outer for loop with variable jj.

diff --git a/liboctave/array/Array.cc b/liboctave/array/Array.cc
--- a/liboctave/array/Array.cc
+++ b/liboctave/array/Array.cc
@@ -1651,20 +1651,20 @@ Array<T>::hermitian (T (*fcn) (const T&)
   if (nr >= 8 && nc >= 8)
     {
       Array<T> result (dim_vector (nc, nr));
 
       // Blocked transpose to attempt to avoid cache misses.
 
       T buf[64];
 
-      octave_idx_type ii = 0;
       octave_idx_type jj;
       for (jj = 0; jj < (nc - 8 + 1); jj += 8)
         {
+          octave_idx_type ii;
           for (ii = 0; ii < (nr - 8 + 1); ii += 8)
             {
               // Copy to buffer
               for (octave_idx_type j = jj, k = 0, idxj = jj * nr;
                    j < jj + 8; j++, idxj += nr)
                 for (octave_idx_type i = ii; i < ii + 8; i++)
                   buf[k++] = xelem (i + idxj);
 
@@ -1697,17 +1697,17 @@ Array<T>::hermitian (T (*fcn) (const T&)
           result.xelem (j, i) = fcn (xelem (i, j));
 
       return result;
     }
 }
 
 /*
 
-## Tranpose tests for matrices of the tile size and plus or minus a row
+## Transpose tests for matrices of the tile size and plus or minus a row
 ## and with four tiles.
 
 %!shared m7, mt7, m8, mt8, m9, mt9
 %! m7 = reshape (1 : 7*8, 8, 7);
 %! mt7 = [1:8; 9:16; 17:24; 25:32; 33:40; 41:48; 49:56];
 %! m8 = reshape (1 : 8*8, 8, 8);
 %! mt8 = mt8 = [mt7; 57:64];
 %! m9 = reshape (1 : 9*8, 8, 9);
