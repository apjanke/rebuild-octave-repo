# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1319734203 25200
#      Thu Oct 27 09:50:03 2011 -0700
# Node ID 1d97688f852232614a14d578181b6729c2dc5fd2
# Parent  c4b6ea833fa5dfd15d9298a2c39f9b6a4833a6b2
doc: Don't use @code{} macro for transpose and ctranspose (Bug #34661)

* data.cc (transpose, ctranspose): Don't use @code markup for describing
transpose operations as the markup (`...') looks too similar to the
operator in question.

diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -5301,17 +5301,23 @@ This function is equivalent to @w{@code{
 @end deftypefn")
 {
   return unary_op_defun_body (octave_value::op_uminus, args);
 }
 
 DEFUN (transpose, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} transpose (@var{x})\n\
-Return the transpose of @var{x}.  This function is equivalent to @code{x.'}.\n\
+Return the transpose of @var{x}.  This function is equivalent to\n\
+@tex\n\
+@code{x.'}.\n\
+@end tex\n\
+@ifnottex\n\
+x.'.\n\
+@end ifnottex\n\
 @seealso{ctranspose}\n\
 @end deftypefn")
 {
   return unary_op_defun_body (octave_value::op_transpose, args);
 }
 
 /*
 
@@ -5334,17 +5340,23 @@ Return the transpose of @var{x}.  This f
 %!assert (transpose (single([1,2;3,4])),single([1,3;2,4]));
 
 */
 
 DEFUN (ctranspose, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} ctranspose (@var{x})\n\
 Return the complex conjugate transpose of @var{x}.  This function is\n\
-equivalent to @code{x'}.\n\
+equivalent to\n\
+@tex\n\
+@code{x'}.\n\
+@end tex\n\
+@ifnottex\n\
+x'.\n\
+@end ifnottex\n\
 @seealso{transpose}\n\
 @end deftypefn")
 {
   return unary_op_defun_body (octave_value::op_hermitian, args);
 }
 
 /*
 
