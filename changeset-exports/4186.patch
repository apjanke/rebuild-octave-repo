# HG changeset patch
# User jwe
# Date 1037666020 0
#      Tue Nov 19 00:33:40 2002 +0000
# Node ID bf9c5ca4c3f34e67970353c52df2712e947a6bcf
# Parent  8f6d418d31c322dfc48b9393c4a1503c11d82a78
[project @ 2002-11-19 00:33:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2002-11-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* parse.y (symtab_context): Now extern.
+	* parse.h: Provide decl.
+	* lex.l (reset_parser): Set it to 0.
+
 2002-11-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-bp.cc (octave_debug_on_interrupt_state): New global variable.
 	* pt-bp.h: Provide decl.
 	(MAYBE_DO_BREAKPOINT): Check it.
 
 	* sighandlers.cc (sigint_handler): Handle debug_on_interrupt.
 	(Vdebug_on_interrupt): New static variable.
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -803,16 +803,17 @@ do_comma_insert_check (void)
 void
 reset_parser (void)
 {
   // Start off on the right foot.
   BEGIN 0;
   error_state = 0;
   warning_state = 0;
   parser_end_of_input = false;
+  symtab_context = 0;
 
   // We do want a prompt by default.
   promptflag = 1;
 
   // Error may have occurred inside some brackets, braces, or parentheses.
   nesting_level.clear ();
 
   // Clear out the stack of token info used to track line and column
diff --git a/src/parse.h b/src/parse.h
--- a/src/parse.h
+++ b/src/parse.h
@@ -69,16 +69,19 @@ extern bool input_from_startup_file;
 // the command line.
 extern bool input_from_command_line_file;
 
 // TRUE means that we are in the process of evaluating a function
 // body.  The parser might be called in that case if we are looking at
 // an eval() statement.
 extern bool evaluating_function_body;
 
+// Keep track of symbol table information when parsing functions.
+extern symbol_table *symtab_context;
+
 // TRUE means warn about function files that have time stamps in the future.
 extern bool Vwarn_future_time_stamp;
 
 extern void
 parse_and_execute (FILE *f);
 
 extern void
 parse_and_execute (const std::string& s, bool verbose = false,
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -129,17 +129,17 @@ bool input_from_startup_file = false;
 bool input_from_command_line_file = true;
 
 // TRUE means that we are in the process of evaluating a function
 // body.  The parser might be called in that case if we are looking at
 // an eval() statement.
 bool evaluating_function_body = false;
 
 // Keep track of symbol table information when parsing functions.
-static symbol_table *symtab_context = 0;
+symbol_table *symtab_context = 0;
 
 // Forward declarations for some functions defined at the bottom of
 // the file.
 
 // Generic error messages.
 static void
 yyerror (const char *s);
 
