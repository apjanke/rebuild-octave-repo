# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1204075846 18000
#      Tue Feb 26 20:30:46 2008 -0500
# Branch release-3-0-x
# Node ID 7fde54a3e0ce6cb4472b3a397291316461d70ce0
# Parent  3f5a67e8215c761b269dc217d8318a9e5bea9586
oct-rand.cc: fix typo

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,14 @@
 2008-02-26  John W. Eaton  <jwe@octave.org>
 
+	* oct-rand.cc (get_dist_id): Fix typo.
+	(get_dist_id, octave_rand::distribution, octave_rand::scalar,
+	fill_rand): Improve error messages.
+
 	* oct-rand.cc (unknown_dist): New dist type.
 	(uniform_dist, normal_dist, expon_dist, poisson_dist, gamma_dist):
 	Use static const int instead of #define.
 	(get_dist_id): Default retval is unknown_dist.
 
 	* oct-rand.cc (rand_states): New static variable.
 	(initialize_rand_states, get_dist_id, get_internal_state,
 	set_internal_state, switch_to_generator, save_state): New functions.
diff --git a/liboctave/oct-rand.cc b/liboctave/oct-rand.cc
--- a/liboctave/oct-rand.cc
+++ b/liboctave/oct-rand.cc
@@ -192,20 +192,21 @@ get_dist_id (const std::string& d)
   if (d == "uniform" || d == "rand")
     retval = uniform_dist;
   else if (d == "normal" || d == "randn")
     retval = normal_dist;
   else if (d == "exponential" || d == "rande")
     retval = expon_dist;
   else if (d == "poisson" || d == "randp")
     retval = poisson_dist;
-  else if (d == "gamma" || d == "rangd")
+  else if (d == "gamma" || d == "randg")
     retval = gamma_dist;
   else
-    (*current_liboctave_error_handler) ("rand: invalid distribution");
+    (*current_liboctave_error_handler)
+      ("rand: invalid distribution `%s'", d.c_str ());
 
   return retval;
 }
 
 static void
 set_internal_state (const ColumnVector& s)
 {
   octave_idx_type len = s.length ();
@@ -344,27 +345,30 @@ octave_rand::distribution (void)
       retval = "poisson";
       break;
 
     case gamma_dist:
       retval = "gamma";
       break;
 
     default:
-      (*current_liboctave_error_handler) ("rand: invalid distribution");
+      (*current_liboctave_error_handler)
+	("rand: invalid distribution ID = %d", current_distribution);
       break;
     }
 
   return retval;
 }
 
 void
 octave_rand::distribution (const std::string& d)
 {
-  switch (get_dist_id (d))
+  int id = get_dist_id (d);
+
+  switch (id)
     {
     case uniform_dist:
       octave_rand::uniform_distribution ();
       break;
 
     case normal_dist:
       octave_rand::normal_distribution ();
       break;
@@ -377,17 +381,18 @@ octave_rand::distribution (const std::st
       octave_rand::poisson_distribution ();
       break;
 
     case gamma_dist:
       octave_rand::gamma_distribution ();
       break;
 
     default:
-      (*current_liboctave_error_handler) ("rand: invalid distribution");
+      (*current_liboctave_error_handler)
+	("rand: invalid distribution ID = %d", id);
       break;
     }
 }
 
 void
 octave_rand::uniform_distribution (void)
 {
   maybe_initialize ();
@@ -475,17 +480,18 @@ octave_rand::scalar (double a)
 	case gamma_dist:
 	  if (a <= 0.0 || xisnan(a) || xisinf(a))
 	    retval = octave_NaN;
 	  else
 	    F77_FUNC (dgengam, DGENGAM) (1.0, a, retval);
 	  break;
 
 	default:
-	  (*current_liboctave_error_handler) ("rand: invalid distribution");
+	  (*current_liboctave_error_handler) 
+	    ("rand: invalid distribution ID = %d", current_distribution);
 	  break;
 	}
     }
   else
     {
       switch (current_distribution)
 	{
 	case uniform_dist:
@@ -504,17 +510,18 @@ octave_rand::scalar (double a)
 	  retval = oct_randp (a);
 	  break;
 
 	case gamma_dist:
 	  retval = oct_randg (a);
 	  break;
 
 	default:
-	  (*current_liboctave_error_handler) ("rand: invalid distribution");
+	  (*current_liboctave_error_handler)
+	    ("rand: invalid distribution ID = %d", current_distribution);
 	  break;
 	}
 
       save_state ();
     }
 
   return retval;
 }
@@ -608,17 +615,18 @@ fill_rand (octave_idx_type len, double *
 	    MAKE_RAND (len);
 #undef RAND_FUNC
 	}
       else
 	oct_fill_randg (a, len, v);
       break;
 
     default:
-      (*current_liboctave_error_handler) ("rand: invalid distribution");
+      (*current_liboctave_error_handler)
+	("rand: invalid distribution ID = %d", current_distribution);
       break;
     }
 
   save_state ();
 
   return;
 }
 
