# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1421149843 -3600
#      Tue Jan 13 12:50:43 2015 +0100
# Node ID 62ca016dbb2a930af47600a380cc04c57d3c1c04
# Parent  9b90d8579c61ae214441e84cda8ff813bf74eb6f
audiodevinfo.cc: Stop playback in audioplayers destructor (bug ##43994)

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -436,17 +436,17 @@ or recording using those parameters.\n\
 #ifdef HAVE_PORTAUDIO
 
 enum audio_type { TYPE_INT8, TYPE_UINT8, TYPE_UINT16, TYPE_DOUBLE };
 
 class audioplayer : public octave_base_value
 {
 public:
   audioplayer (void);
-  ~audioplayer (void) {};
+  ~audioplayer (void);
 
   // Overloaded base functions
   double player_value (void) const { return 0; }
   virtual double scalar_value (bool = false) const { return 0; }
   void print (std::ostream& os, bool pr_as_read_syntax = false) const;
   void print_raw (std::ostream& os, bool pr_as_read_syntax) const;
 
   // Properties
@@ -814,16 +814,25 @@ portaudio_play_callback (const void *, v
 
 audioplayer::audioplayer (void)
   : octave_callback_function (0),
     id (-1), fs (0), nbits (16), channels (0), sample_number (0),
     end_sample (-1), tag (""), y (), userdata (Matrix ()),
     left (), right (), stream (0), output_parameters (), type ()
 { }
 
+audioplayer::~audioplayer (void)
+{
+  if (isplaying())
+    {
+      warning ("audioplayer::~audioplayer: Interrupting playing audioplayer");
+      stop ();
+    }
+}
+
 void
 audioplayer::print (std::ostream& os, bool pr_as_read_syntax) const
 {
   print_raw (os, pr_as_read_syntax);
   newline (os);
 }
 
 void
