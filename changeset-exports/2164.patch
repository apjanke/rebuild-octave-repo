# HG changeset patch
# User jwe
# Date 831992724 0
#      Mon May 13 13:05:24 1996 +0000
# Node ID 269db73069800323cef43d5f87ee981980aaa321
# Parent  8901e415035abf4c74b4bd7cbefdda272efe7e29
[project @ 1996-05-13 13:05:24 by jwe]

diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -31,16 +31,17 @@ Software Foundation, 59 Temple Place - S
 
 #include "oct-term.h"
 
 #include "procstream.h"
 
 #include "defaults.h"
 #include "defun.h"
 #include "error.h"
+#include "gripes.h"
 #include "help.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "sighandlers.h"
 #include "unwind-prot.h"
 #include "user-prefs.h"
 
@@ -53,16 +54,28 @@ static oprocstream *external_pager = 0;
 static int write_to_diary_file = 0;
 
 // The name of the current diary file.
 static string diary_file;
 
 // The diary file.
 static ofstream external_diary_file;
 
+// The shell command to run as the pager.
+static string Vpager_binary;
+
+// TRUE means that if output is going to the pager, it is sent as soon
+// as it is available.  Otherwise, it is buffered and only sent to the
+// pager when it is time to print another prompt.
+static bool Vpage_output_immediately;
+
+// TRUE means all output intended for the screen should be passed
+// through the pager.
+static bool Vpage_screen_output;
+
 static sig_handler *saved_sigint_handler = 0;
 
 static int really_flush_to_pager = 0;
 
 static void
 do_sync (const char *msg, bool bypass_pager)
 {
   if (! error_state)
@@ -70,17 +83,17 @@ do_sync (const char *msg, bool bypass_pa
       if (msg && *msg)
 	{
 	  if (bypass_pager)
 	    cout << msg;
 	  else
 	    {
 	      if (! external_pager)
 		{
-		  string pgr = user_pref.pager_binary;
+		  string pgr = Vpager_binary;
 
 		  if (! pgr.empty ())
 		    {
 		      saved_sigint_handler
 			= octave_set_signal_handler (SIGINT, SIG_IGN);
 
 		      external_pager = new oprocstream (pgr.c_str ());
 
@@ -139,32 +152,29 @@ more_than_a_screenful (const char *s)
     }
 
   return false;
 }
 
 int
 octave_pager_buf::sync (void)
 {
-  bool page_output = user_pref.page_screen_output;
-  bool page_immediately = user_pref.page_output_immediately;
-
   if (really_flush_to_pager
-      || (page_output && page_immediately)
-      || ! page_output)
+      || (Vpage_screen_output && Vpage_output_immediately)
+      || ! Vpage_screen_output)
     {
       sputc ('\0');
 
       char *buf = eback ();
 
       bool bypass_pager = (! interactive
-			   || ! page_output
+			   || ! Vpage_screen_output
 			   || (really_flush_to_pager
-			       && page_output
-			       && ! page_immediately
+			       && Vpage_screen_output
+			       && ! Vpage_output_immediately
 			       && ! more_than_a_screenful (buf)));
 
       do_sync (buf, bypass_pager);
 
       octave_diary << buf;
 
       seekoff (0, ios::beg);
     }
@@ -392,20 +402,54 @@ default_pager (void)
 	      (" -P'-- less ?pB(%pB\\%):--. (f)orward, (b)ack, (q)uit$'");
 	}
     }
 #endif
 
   return pager_binary;
 }
 
+static int
+pager_binary (void)
+{
+  int status = 0;
+
+  string s = builtin_string_variable ("PAGER");
+
+  if (s.empty ())
+    {
+      gripe_invalid_value_specified ("PAGER");
+      status = -1;
+    }
+  else
+    Vpager_binary = s;
+
+  return status;
+}
+
+static int
+page_output_immediately (void)
+{
+  Vpage_output_immediately = check_preference ("page_output_immediately");
+
+  return 0;
+}
+
+static int
+page_screen_output (void)
+{
+  Vpage_screen_output = check_preference ("page_screen_output");
+
+  return 0;
+}
+
 void
 symbols_of_pager (void)
 {
-  DEFVAR (PAGER, default_pager (), 0, sv_pager_binary,
+  DEFVAR (PAGER, default_pager (), 0, pager_binary,
     "path to pager binary");
 
   DEFVAR (page_output_immediately, 0.0, 0, page_output_immediately,
     "if paging output, start sending it as soon as it is available");
 
   DEFVAR (page_screen_output, 1.0, 0, page_screen_output,
     "if possible, send output intended for the screen through the pager");
 }
