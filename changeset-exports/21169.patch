# HG changeset patch
# User Rik <rik@octave.org>
# Date 1454362393 28800
#      Mon Feb 01 13:33:13 2016 -0800
# Node ID 40051830f89b57806e20d164e8022661f4b9a1f4
# Parent  26f85aa072de4c00a3c48e090a099a3b854cb370
maint: Replace more instances of goto in liboctave with other constructs.

*dMatrix.cc: (operator >>): Replace "goto done;" with "return is;".

*dNDArray.cc: (operator >>): Replace "goto done;" with "return is;".

*fCMatrix.cc: (operator >>): Replace "goto done;" with "return is;".

*fCNDArray.cc: (operator >>): Replace "goto done;" with "return is;".

*fMatrix.cc: (operator >>): Replace "goto done;" with "return is;".

*fNDArray.cc: (operator >>): Replace "goto done;" with "return is;".

*intNDArray.cc: (operator >>): Replace "goto done;" with "return is;".

diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -2915,22 +2915,20 @@ operator >> (std::istream& is, Matrix& a
       double tmp;
       for (octave_idx_type i = 0; i < nr; i++)
         for (octave_idx_type j = 0; j < nc; j++)
           {
             tmp = octave_read_value<double> (is);
             if (is)
               a.elem (i, j) = tmp;
             else
-              goto done;
+              return is;
           }
     }
 
-done:
-
   return is;
 }
 
 Matrix
 Givens (double x, double y)
 {
   double cc, s, temp_r;
 
diff --git a/liboctave/array/dNDArray.cc b/liboctave/array/dNDArray.cc
--- a/liboctave/array/dNDArray.cc
+++ b/liboctave/array/dNDArray.cc
@@ -887,22 +887,20 @@ operator >> (std::istream& is, NDArray& 
     {
       double tmp;
       for (octave_idx_type i = 0; i < nel; i++)
         {
           tmp = octave_read_value<double> (is);
           if (is)
             a.elem (i) = tmp;
           else
-            goto done;
+            return is;
         }
     }
 
-done:
-
   return is;
 }
 
 MINMAX_FCNS (NDArray, double)
 
 NDS_CMP_OPS (NDArray, double)
 NDS_BOOL_OPS (NDArray, double)
 
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -3460,22 +3460,20 @@ operator >> (std::istream& is, FloatComp
       FloatComplex tmp;
       for (octave_idx_type i = 0; i < nr; i++)
         for (octave_idx_type j = 0; j < nc; j++)
           {
             tmp = octave_read_value<FloatComplex> (is);
             if (is)
               a.elem (i, j) = tmp;
             else
-              goto done;
+              return is;
           }
     }
 
-done:
-
   return is;
 }
 
 FloatComplexMatrix
 Givens (const FloatComplex& x, const FloatComplex& y)
 {
   float cc;
   FloatComplex cs, temp_r;
diff --git a/liboctave/array/fCNDArray.cc b/liboctave/array/fCNDArray.cc
--- a/liboctave/array/fCNDArray.cc
+++ b/liboctave/array/fCNDArray.cc
@@ -873,22 +873,20 @@ operator >> (std::istream& is, FloatComp
     {
       FloatComplex tmp;
       for (octave_idx_type i = 0; i < nel; i++)
         {
           tmp = octave_read_value<FloatComplex> (is);
           if (is)
             a.elem (i) = tmp;
           else
-            goto done;
+            return is;
         }
     }
 
-done:
-
   return is;
 }
 
 MINMAX_FCNS (FloatComplexNDArray, FloatComplex)
 
 NDS_CMP_OPS (FloatComplexNDArray, FloatComplex)
 NDS_BOOL_OPS (FloatComplexNDArray, FloatComplex)
 
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -2932,22 +2932,20 @@ operator >> (std::istream& is, FloatMatr
       float tmp;
       for (octave_idx_type i = 0; i < nr; i++)
         for (octave_idx_type j = 0; j < nc; j++)
           {
             tmp = octave_read_value<float> (is);
             if (is)
               a.elem (i, j) = tmp;
             else
-              goto done;
+              return is;
           }
     }
 
-done:
-
   return is;
 }
 
 FloatMatrix
 Givens (float x, float y)
 {
   float cc, s, temp_r;
 
diff --git a/liboctave/array/fNDArray.cc b/liboctave/array/fNDArray.cc
--- a/liboctave/array/fNDArray.cc
+++ b/liboctave/array/fNDArray.cc
@@ -858,22 +858,20 @@ operator >> (std::istream& is, FloatNDAr
     {
       float tmp;
       for (octave_idx_type i = 0; i < nel; i++)
         {
           tmp = octave_read_value<float> (is);
           if (is)
             a.elem (i) = tmp;
           else
-            goto done;
+            return is;
         }
     }
 
-done:
-
   return is;
 }
 
 MINMAX_FCNS (FloatNDArray, float)
 
 NDS_CMP_OPS (FloatNDArray, float)
 NDS_BOOL_OPS (FloatNDArray, float)
 
diff --git a/liboctave/array/intNDArray.cc b/liboctave/array/intNDArray.cc
--- a/liboctave/array/intNDArray.cc
+++ b/liboctave/array/intNDArray.cc
@@ -163,22 +163,20 @@ operator >> (std::istream& is, intNDArra
 
       for (octave_idx_type i = 0; i < nel; i++)
         {
           is >> tmp;
 
           if (is)
             a.elem (i) = tmp;
           else
-            goto done;
+            return is;
         }
     }
 
-done:
-
   return is;
 }
 
 // FIXME: should abs and signum just be mapper functions?
 
 template <typename T>
 intNDArray<T>
 intNDArray<T>::abs (void) const
