# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368392226 14400
#      Sun May 12 16:57:06 2013 -0400
# Node ID e3a0ca9c883627c03e53a713d533ab9dcb5f77f5
# Parent  64f9a3e301d3fdb47e56ebe9f679df2adf3b046d
eliminate unimplemented New -> Variable menu item

* main-window.h, main-window.cc (main_window::construct_new_menu):
Remove new variable menu item.
(main_window::handle_new_variable_request): Delete.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -210,23 +210,16 @@ main_window::run_file_in_terminal (const
 
 void
 main_window::handle_new_figure_request (void)
 {
   octave_link::post_event (this, &main_window::new_figure_callback);
 }
 
 void
-main_window::handle_new_variable_request (void)
-{
-  QMessageBox::about (this, tr ("New Variable"),
-                      tr ("The new variable action is not implemented."));
-}
-
-void
 main_window::open_online_documentation_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://gnu.org/software/octave/doc/interpreter"));
 }
 
 void
 main_window::open_bug_tracker_page (void)
 {
@@ -1005,30 +998,24 @@ main_window::construct_new_menu (QMenu *
                            tr ("Script"));
 
   QAction *new_function_action = new_menu->addAction (tr ("Function"));
   new_function_action->setEnabled (true);
 
   QAction *new_figure_action = new_menu->addAction (tr ("Figure"));
   new_figure_action->setEnabled (true);
 
-  QAction *new_variable_action = new_menu->addAction (tr ("Variable"));
-  new_variable_action->setEnabled (true);
-
   connect (_new_script_action, SIGNAL (triggered ()),
            editor_window, SLOT (request_new_script ()));
 
   connect (new_function_action, SIGNAL (triggered ()),
            editor_window, SLOT (request_new_function ()));
 
   connect (new_figure_action, SIGNAL (triggered ()),
            this, SLOT (handle_new_figure_request ()));
-
-  connect (new_variable_action, SIGNAL (triggered ()),
-           this, SLOT (handle_new_variable_request ()));
 }
 
 void
 main_window::construct_edit_menu (QMenuBar *p)
 {
   QMenu *edit_menu = p->addMenu (tr ("&Edit"));
 
   QKeySequence ctrl_shift = Qt::ControlModifier + Qt::ShiftModifier;
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -115,18 +115,16 @@ public slots:
   void change_directory_up (void);
   void accept_directory_line_edit (void);
 
   void execute_command_in_terminal(const QString& dir);
   void run_file_in_terminal(const QFileInfo& info);
 
   void handle_new_figure_request (void);
 
-  void handle_new_variable_request (void);
-
   void handle_enter_debugger (void);
   void handle_exit_debugger (void);
   void debug_continue (void);
   void debug_step_into (void);
   void debug_step_over (void);
   void debug_step_out (void);
   void debug_quit (void);
 
