# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1458390053 14400
#      Sat Mar 19 08:20:53 2016 -0400
# Node ID 365c3e0add9838257235593e90e6cdd6d11beb7e
# Parent  9cb37fede0b66b02094dc83331fcf676ea99fd27
Change variable name to avoid bug in doxygen v1.8.

* liboctave/cruft/ranlib/tstmid.for: Change variable "type", to "ctype".  This
avoids a bug in doxygen 1.8 which interprets "type" as a reserved word.

diff --git a/liboctave/cruft/ranlib/tstmid.for b/liboctave/cruft/ranlib/tstmid.for
--- a/liboctave/cruft/ranlib/tstmid.for
+++ b/liboctave/cruft/ranlib/tstmid.for
@@ -49,17 +49,17 @@ C     .. Executable Statements ..
 C     Interactive test for PHRTSD
 C     .. Parameters ..
       INTEGER mxwh,mxncat
       PARAMETER (mxwh=15,mxncat=100)
 C     ..
 C     .. Local Scalars ..
       REAL av,avtr,var,vartr,xmin,xmax,pevt,psum,rtry
       INTEGER i,is1,is2,itmp,iwhich,j,mxint,nperm,nrep,ntot,ntry,ncat
-      CHARACTER type*4,phrase*100
+      CHARACTER ctype*4,phrase*100
 C     ..
 C     .. Local Arrays ..
       REAL array(1000),param(3),prob(mxncat)
       INTEGER iarray(1000),perm(500)
 C     ..
 C     .. External Functions ..
       REAL genbet,genchi,genf,gennch,gennf,genunf,genexp,gengam,gennor
       INTEGER ignuin,ignnbn
@@ -121,81 +121,81 @@ C
       READ (*,'(a)') phrase
       CALL phrtsd(phrase,is1,is2)
       CALL setall(is1,is2)
 
       IF ((1).NE. (iwhich)) GO TO 40
 C
 C     Chi-square deviates
 C
-      type = 'chis'
+      ctype = 'chis'
       WRITE (*,*) ' Enter (real) df for the chi-square generation'
       READ (*,*) param(1)
       DO 30,i = 1,1000
           array(i) = genchi(param(1))
    30 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
 
  9020 FORMAT (' Mean Generated: ',T30,G15.7,5X,'True:',T60,
      +       G15.7/' Variance Generated:',T30,G15.7,5X,'True:',T60,
      +       G15.7/' Minimum: ',T30,G15.7,5X,'Maximum:',T60,G15.7)
 
       GO TO 420
 
    40 IF ((2).NE. (iwhich)) GO TO 60
 
 C
 C     Noncentral Chi-square deviates
 C
-      type = 'ncch'
+      ctype = 'ncch'
       WRITE (*,*) ' Enter (real) df'
       WRITE (*,*) '       (real) noncentrality parameter'
       READ (*,*) param(1),param(2)
       DO 50,i = 1,1000
           array(i) = gennch(param(1),param(2))
    50 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
    60 IF ((3).NE. (iwhich)) GO TO 80
 
 C
 C     F deviates
 C
-      type = 'f'
+      ctype = 'f'
       WRITE (*,*) ' Enter (real) df of the numerator'
       WRITE (*,*) '       (real) df of the denominator'
       READ (*,*) param(1),param(2)
       DO 70,i = 1,1000
           array(i) = genf(param(1),param(2))
    70 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
    80 IF ((4).NE. (iwhich)) GO TO 100
 
 C
 C     Noncentral F deviates
 C
-      type = 'ncf'
+      ctype = 'ncf'
       WRITE (*,*) ' Enter (real) df of the numerator'
       WRITE (*,*) '       (real) df of the denominator'
       WRITE (*,*) '       (real) noncentrality parameter'
       READ (*,*) param(1),param(2),param(3)
       DO 90,i = 1,1000
           array(i) = gennf(param(1),param(2),param(3))
    90 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
   100 IF ((5).NE. (iwhich)) GO TO 140
 
 C
 C     Random permutation
 C
@@ -236,114 +236,114 @@ C
       WRITE (*,'(20I4)') (iarray(j),j=1,mxint)
       GO TO 420
 
   170 IF ((7).NE. (iwhich)) GO TO 190
 
 C
 C     Uniform real
 C
-      type = 'unif'
+      ctype = 'unif'
       WRITE (*,*) ' Enter Low then High bound for uniforms'
       READ (*,*) param(1),param(2)
       DO 180,i = 1,1000
           array(i) = genunf(param(1),param(2))
   180 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
   190 IF ((8).NE. (iwhich)) GO TO 210
 
 C
 C     Beta deviate
 C
-      type = 'beta'
+      ctype = 'beta'
       WRITE (*,*) ' Enter A, B for Beta deviate'
       READ (*,*) param(1),param(2)
       DO 200,i = 1,1000
           array(i) = genbet(param(1),param(2))
   200 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
   210 IF ((9).NE. (iwhich)) GO TO 240
 
 C
 C     Binomial outcomes
 C
-      type = 'bin'
+      ctype = 'bin'
       WRITE (*,*) ' Enter number of trials, Prob event for ',
      +  'binomial outcomes'
       READ (*,*) ntry,pevt
       DO 220,i = 1,1000
           iarray(i) = ignbin(ntry,pevt)
   220 CONTINUE
       DO 230,i = 1,1000
           array(i) = iarray(i)
   230 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
       param(1) = ntry
       param(2) = pevt
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
   240 IF ((10).NE. (iwhich)) GO TO 270
 
 C
 C     Poisson outcomes
 C
-      type = 'pois'
+      ctype = 'pois'
       WRITE (*,*) ' Enter mean for Poisson generation'
       READ (*,*) param(1)
       DO 250,i = 1,1000
           iarray(i) = ignpoi(param(1))
   250 CONTINUE
       DO 260,i = 1,1000
           array(i) = iarray(i)
   260 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
   270 IF ((11).NE. (iwhich)) GO TO 290
 
 C
 C     Exponential deviates
 C
-      type = 'expo'
+      ctype = 'expo'
       WRITE (*,*) ' Enter (real) AV for Exponential'
       READ (*,*) param(1)
       DO 280,i = 1,1000
           array(i) = genexp(param(1))
  280   CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
 
       GO TO 420
 
  290  IF ((12).NE. (iwhich)) GO TO 310
 
 C
 C     Gamma deviates
 C
-      type = 'gamm'
+      ctype = 'gamm'
       WRITE (*,*) ' Enter (real) A, (real) R for Gamma deviate'
       READ (*,*) param(1),param(2)
       DO 300,i = 1,1000
           array(i) = gengam(param(1),param(2))
   300 CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
  310  IF ((13).NE. (iwhich)) GO TO 360
 
 C
 C     Multinomial outcomes
 C
@@ -387,68 +387,68 @@ C
       WRITE (*,'(8F10.7)') (array(i),i=1,ncat)
       GO TO 420
 
  360  IF ((14).NE. (iwhich)) GO TO 380
 
 C
 C     Normal deviates
 C
-      type = 'norm'
+      ctype = 'norm'
       WRITE (*,*) ' Enter (real) AV, (real) SD for Normal'
       READ (*,*) param(1),param(2)
       DO 370,i = 1,1000
          array(i) = gennor(param(1),param(2))
  370  CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
  380  IF ((15).NE. (iwhich)) GO TO 410
 
 C
 C     Negative Binomial outcomes
 C
-      type = 'nbin'
+      ctype = 'nbin'
       WRITE (*,*) ' Enter required (int) Number of events then '
       WRITE (*,*) ' (real) Prob of an event for negative binomial'
       READ (*,*) ntry,pevt
       DO 390,i = 1,1000
          iarray(i) = ignnbn(ntry,pevt)
  390  CONTINUE
       DO 400,i = 1,1000
          array(i) = iarray(i)
  400  CONTINUE
       CALL stat(array,1000,av,var,xmin,xmax)
       param(1) = ntry
       param(2) = pevt
-      CALL trstat(type,param,avtr,vartr)
+      CALL trstat(ctype,param,avtr,vartr)
       WRITE (*,9020) av,avtr,var,vartr,xmin,xmax
       GO TO 420
 
  410  CONTINUE
  420  GO TO 10
 
       END
-      SUBROUTINE trstat(type,parin,av,var)
+      SUBROUTINE trstat(ctype,parin,av,var)
       IMPLICIT INTEGER (i-n),REAL (a-h,o-p,r-z),LOGICAL (q)
 C**********************************************************************
 C
 C     SUBROUTINE TRSTAT( TYPE, PARIN, AV, VAR )
 C               TRue STATistics
 C
 C     Returns mean and variance for a number of statistical distribution
 C     as a function of their parameters.
 C
 C
 C                              Arguments
 C
 C
-C     TYPE --> Character string indicating type of distribution
+C     CTYPE --> Character string indicating type of distribution
 C             'chis' chisquare
 C             'ncch' noncentral chisquare
 C             'f'    F (variance ratio)
 C             'ncf'  noncentral f
 C             'unif' uniform
 C             'beta' beta distribution
 C             'bin'  binomial
 C             'pois' poisson
@@ -505,107 +505,107 @@ C
 C                              Note
 C
 C
 C     AV and Var will be returned -1 if mean or variance is infinite
 C
 C**********************************************************************
 C     .. Scalar Arguments ..
       REAL av,var
-      CHARACTER type* (4)
+      CHARACTER ctype* (4)
 C     ..
 C     .. Array Arguments ..
       REAL parin(*)
 C     ..
 C     .. Local Scalars ..
       REAL a,b,range
 C     ..
 C     .. Executable Statements ..
-      IF (('chis').NE. (type)) GO TO 10
+      IF (('chis').NE. (ctype)) GO TO 10
       av = parin(1)
       var = 2.0*parin(1)
       GO TO 210
 
-   10 IF (('ncch').NE. (type)) GO TO 20
+   10 IF (('ncch').NE. (ctype)) GO TO 20
       a = parin(1) + parin(2)
       b = parin(2)/a
       av = a
       var = 2.0*a* (1.0+b)
       GO TO 210
 
-   20 IF (('f').NE. (type)) GO TO 70
+   20 IF (('f').NE. (ctype)) GO TO 70
       IF (.NOT. (parin(2).LE.2.0001)) GO TO 30
       av = -1.0
       GO TO 40
 
    30 av = parin(2)/ (parin(2)-2.0)
    40 IF (.NOT. (parin(2).LE.4.0001)) GO TO 50
       var = -1.0
       GO TO 60
 
    50 var = (2.0*parin(2)**2* (parin(1)+parin(2)-2.0))/
      +      (parin(1)* (parin(2)-2.0)**2* (parin(2)-4.0))
    60 GO TO 210
 
-   70 IF (('ncf').NE. (type)) GO TO 120
+   70 IF (('ncf').NE. (ctype)) GO TO 120
       IF (.NOT. (parin(2).LE.2.0001)) GO TO 80
       av = -1.0
       GO TO 90
 
    80 av = (parin(2)* (parin(1)+parin(3)))/ ((parin(2)-2.0)*parin(1))
    90 IF (.NOT. (parin(2).LE.4.0001)) GO TO 100
       var = -1.0
       GO TO 110
 
   100 a = (parin(1)+parin(3))**2 + (parin(1)+2.0*parin(3))*
      +    (parin(2)-2.0)
       b = (parin(2)-2.0)**2* (parin(2)-4.0)
       var = 2.0* (parin(2)/parin(1))**2* (a/b)
   110 GO TO 210
 
-  120 IF (('unif').NE. (type)) GO TO 130
+  120 IF (('unif').NE. (ctype)) GO TO 130
       range = parin(2) - parin(1)
       av = parin(1) + range/2.0
       var = range**2/12.0
       GO TO 210
 
-  130 IF (('beta').NE. (type)) GO TO 140
+  130 IF (('beta').NE. (ctype)) GO TO 140
       av = parin(1)/ (parin(1)+parin(2))
       var = (av*parin(2))/ ((parin(1)+parin(2))*
      +      (parin(1)+parin(2)+1.0))
       GO TO 210
 
-  140 IF (('bin').NE. (type)) GO TO 150
+  140 IF (('bin').NE. (ctype)) GO TO 150
       av = parin(1)*parin(2)
       var = av* (1.0-parin(2))
       GO TO 210
 
-  150 IF (('pois').NE. (type)) GO TO 160
+  150 IF (('pois').NE. (ctype)) GO TO 160
       av = parin(1)
       var = parin(1)
       GO TO 210
 
- 160  IF (('expo').NE. (type)) GO TO 170
+ 160  IF (('expo').NE. (ctype)) GO TO 170
       av = parin(1)
       var = parin(1)**2
       GO TO 210
 
- 170  IF (('gamm').NE. (type)) GO TO 180
+ 170  IF (('gamm').NE. (ctype)) GO TO 180
       av = parin(2) / parin(1)
       var = av / parin(1)
       GO TO 210
 
- 180  IF (('norm').NE. (type)) GO TO 190
+ 180  IF (('norm').NE. (ctype)) GO TO 190
       av = parin(1)
       var = parin(2)**2
       GO TO 210
 
- 190  IF (('nbin').NE. (type)) GO TO 200
+ 190  IF (('nbin').NE. (ctype)) GO TO 200
       av = parin(1) * (1.0 - parin(2)) / parin(2)
       var = av / parin(2)
       GO TO 210
 
-  200 WRITE (*,*) 'Unimplemented type ',type
+  200 WRITE (*,*) 'Unimplemented type ',ctype
       STOP 'Unimplemented type in TRSTAT'
 
   210 RETURN
 
       END
