# HG changeset patch
# User Ilya Kurdyukov <olme8@mail.ru>
# Date 1423676404 0
#      Wed Feb 11 17:40:04 2015 +0000
# Node ID c334e4af3a1b194ec462342987673279882836ee
# Parent  05b40890bbb28caaebdcc58792a1d338e45e1db1
Fix incorrect writing of grayscale JPEG images (bugs #41673, #44118, #42474)

* __magick_read__.cc: when writing grayscale images, we should create a
Magick::Image object of Magick::GrayscaleType type, then use Magick::Color
with only the red channel set (the other channels would be ignored).  However,
this seems to not work for JPEG images which would then generate grayscale
images with one third of the intensity.  This fixes it.

diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/dldfcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/dldfcn/__magick_read__.cc
@@ -1103,18 +1103,19 @@ encode_uint_image (std::vector<Magick::I
                                                       Magick::DirectClass);
 
             Magick::PixelPacket *pix = m_img.getPixels (0, 0, nCols, nRows);
             octave_idx_type GM_idx = 0;
             for (octave_idx_type col = 0; col < nCols; col++)
               {
                 for (octave_idx_type row = 0; row < nRows; row++)
                   {
-                    Magick::Color c;
-                    c.redQuantum (double (*img_fvec) / divisor);
+                    const double grey = double (*img_fvec) / divisor;
+                    Magick::Color c (grey, grey, grey);
+                    pix[GM_idx] = c;
                     pix[GM_idx] = c;
                     img_fvec++;
                     GM_idx += nCols;
                   }
                 GM_idx -= nCols * nRows - 1;
               }
             // Save changes to underlying image.
             m_img.syncPixels ();
