# HG changeset patch
# User Rik <rik@octave.org>
# Date 1350087173 25200
#      Fri Oct 12 17:12:53 2012 -0700
# Node ID 271f0a2d15ab26bcb8e1438a4bfa48f8874f119c
# Parent  4beb3a4bd4400171f56267feab1159a00105d3a7
iscolormap.m: Eliminate unnecessary ismatrix() test in code.
Use cmap as variable name for colormap.  Add 2 more tests.

* iscolormap.m: Eliminate unnecessary ismatrix() test in code.
Use cmap as variable name for colormap.  Add 2 more tests.

diff --git a/scripts/image/iscolormap.m b/scripts/image/iscolormap.m
--- a/scripts/image/iscolormap.m
+++ b/scripts/image/iscolormap.m
@@ -12,39 +12,41 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} iscolormap (@var{cm})
-## Return true if @var{cm} is a colormap.
+## @deftypefn {Function File} {} iscolormap (@var{cmap})
+## Return true if @var{cmap} is a colormap.
 ##
 ## A colormap is an @var{n} row by 3 column matrix.  The columns contain red,
-## green, and blue intensities respectively.  All entries should be between 0
+## green, and blue intensities respectively.  All entries must be between 0
 ## and 1 inclusive.
 ##
 ## @seealso{colormap, rgbplot}
 ## @end deftypefn
 
 ## Author: CarnÃ« Draug <carandraug+dev@gmail.com>
 
-function retval = iscolormap (cm)
+function retval = iscolormap (cmap)
 
   if (nargin != 1)
     print_usage;
   endif
 
-  retval = (ismatrix (cm) && isreal (cm) && isnumeric (cm) &&
-            columns(cm) == 3 && ndims (cm) == 2 && isa (cm, "double") &&
-            min (cm(:)) >= 0 && max (cm(:)) <= 1);
+  retval = (isnumeric (cmap) && isreal (cmap) &&
+            columns (cmap) == 3 && ndims (cmap) == 2 && isa (cmap, "double") &&
+            min (cmap(:)) >= 0 && max (cmap(:)) <= 1);
 
 endfunction
 
+
 %!assert (iscolormap (jet (64)))
-%!assert (iscolormap (magic (4)), false)
 %!assert (iscolormap ({0 1 0}), false)
+%!assert (iscolormap ([0 1i 0]), false)
+%!assert (iscolormap (ones (3,4)), false)
 %!assert (iscolormap (ones (3,3,3)), false)
-%!assert (iscolormap (ones (3,4)), false)
+%!assert (iscolormap (single (jet (64))), false)
 %!assert (iscolormap ([0 0 -2]), false)
 %!assert (iscolormap ([0 0 2]), false)
