# HG changeset patch
# User John Donoghue
# Date 1427994536 14400
#      Thu Apr 02 13:08:56 2015 -0400
# Node ID 519eb032ac35e433c6415827715bbf40e34d84f7
# Parent  ab825e51dc687f886110ff83b770a95751318c0a
Check value set for PopuMenuControl and ButtonControl

* libgui/graphics/ButtonControl.cc
  (ButtonControl::update) if toggle button, check value is 0 or 1 and warn otherwise

* libgui/graphics/PopupMenuControl.cc
  (PopupMenuControl::update) if value is outside valid index, show warning

diff --git a/libgui/graphics/ButtonControl.cc b/libgui/graphics/ButtonControl.cc
--- a/libgui/graphics/ButtonControl.cc
+++ b/libgui/graphics/ButtonControl.cc
@@ -74,17 +74,19 @@ ButtonControl::update (int pId)
       if (btn->isCheckable ())
         {
           Matrix value = up.get_value ().matrix_value ();
 
           if (value.numel () > 0)
             {
               double dValue = value(0);
 
-              if (dValue == up.get_min () && btn->isChecked ())
+              if (dValue != 0.0 && dValue != 1.0)
+                warning ("button value not within valid display range");
+              else if (dValue == up.get_min () && btn->isChecked ())
                 btn->setChecked (false);
               else if (dValue == up.get_max () && ! btn->isChecked ())
                 btn->setChecked (true);
             }
         }
       m_blockCallback = false;
       break;
 
diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -107,16 +107,18 @@ void PopupMenuControl::update (int pId)
             {
               int newIndex = int (value(0)) - 1;
 
               if (newIndex >= 0 && newIndex < box->count ()
                   && newIndex != box->currentIndex ())
                 {
                   box->setCurrentIndex (newIndex);
                 }
+              else
+                warning ("popupmenu value not within valid display range");
             }
         }
       m_blockUpdate = false;
       break;
 
     default:
       BaseControl::update (pId);
       break;
