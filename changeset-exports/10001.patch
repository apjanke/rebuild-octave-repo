# HG changeset patch
# User David Grundberg <davidg@cs.umu.se>
# Date 1261160765 18000
#      Fri Dec 18 13:26:05 2009 -0500
# Node ID 6918d86add73884b6318937bbe955e6b6364d392
# Parent  d6e361255a5cea1c7c919ab42231bc536d20f6bf
Print script filename in script indexing errors

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2009-12-18  David Grundberg  <davidg@cs.umu.se>
+
+	* ov-usr-fcn.cc (octave_user_script::do_multi_index_op):
+	Print script filename in script indexing errors.
+	(octave_user_script::subsref): Ditto.
+
 2009-12-18  John W. Eaton  <jwe@octave.org>
 
 	* input.cc (get_debug_input): Don't attempt to get user input
 	unless stdin is a tty.  Force interactive input mode when
 	reading debugging input.
 	(octave_gets): Bypass readline if get_input_from_eval_string is true.
 
 	* input.cc, input.h (stdin_is_tty): New variable.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -98,17 +98,17 @@ octave_user_script::~octave_user_script 
 }
 
 octave_value_list
 octave_user_script::subsref (const std::string&,
 			     const std::list<octave_value_list>&, int)
 {
   octave_value_list retval;
 
-  ::error ("invalid use of script in index expression");
+  ::error ("invalid use of script %s in index expression", file_name.c_str ());
 
   return retval;
 }
 
 octave_value_list
 octave_user_script::do_multi_index_op (int nargout,
 				       const octave_value_list& args)
 {
@@ -145,17 +145,17 @@ octave_user_script::do_multi_index_op (i
 		  if (error_state)
 		    octave_call_stack::backtrace_error_message ();
 		}
 	      else
 		::error ("max_recursion_limit exceeded");
     	    }
 	}
       else
-	error ("invalid call to script");
+	error ("invalid call to script %s", file_name.c_str ());
     }
 
   unwind_protect::run_frame (uwp_frame);
 
   return retval;
 }
 
 void
