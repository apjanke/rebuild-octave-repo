# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1274768669 -7200
#      Tue May 25 08:24:29 2010 +0200
# Node ID 2f0fbfa4dd23a63c1c26f4aac14295df29bef369
# Parent  944b78191f030e80ec759b063d4c1c1892899a38
simplify octave_base_value::ndims

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base.cc (octave_base_value::ndims): Remove fallback
+	implementation (makes no sense).
+	* ov-base.h (octave_base_value::ndims): Use a simplistic fallback
+	here.
+
 2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-base.h (octave_base_value::rows, octave_base_value::columns):
 	Use const where appropriate, don't test for impossible condition.
 
 2010-05-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Cell.h (Cell::index, Cell::assign, Cell::delete_elements):
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -198,41 +198,16 @@ octave_base_value::do_multi_index_op (in
 idx_vector
 octave_base_value::index_vector (void) const
 {
   std::string nm = type_name ();
   error ("%s type invalid as index value", nm.c_str ());
   return idx_vector ();
 }
 
-int
-octave_base_value::ndims (void) const
-{
-  dim_vector dv = dims ();
-
-  int n_dims = dv.length ();
-     
-   // Remove trailing singleton dimensions.
-
-   for (int i = n_dims; i > 2; i--)
-     {
-       if (dv(i-1) == 1)
-         n_dims--;
-       else
-         break;
-     }
-   
-   // The result is always >= 2.
-
-   if (n_dims < 2)
-     n_dims = 2;
-
-   return n_dims;
-}
-
 octave_value
 octave_base_value::subsasgn (const std::string& type,
                              const std::list<octave_value_list>& idx,
                              const octave_value& rhs)
 {
   octave_value retval;
 
   if (is_defined ())
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -284,17 +284,18 @@ public:
 
   octave_idx_type columns (void) const
     {
       const dim_vector dv = dims ();
 
       return dv(1);
     }
 
-  virtual int ndims (void) const;
+  virtual int ndims (void) const
+    { return dims ().length (); }
 
   virtual octave_idx_type numel (void) const { return dims ().numel (); }
 
   virtual octave_idx_type capacity (void) const { return numel (); }
 
   virtual size_t byte_size (void) const { return 0; }
 
   virtual octave_idx_type nnz (void) const;
