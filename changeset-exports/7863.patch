# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1207336681 -10800
#      Fri Apr 04 22:18:01 2008 +0300
# Node ID 2a62d45fa21d8b0e5e2e08fc3e2be8cbc18791b3
# Parent  8f3459a90bf3764c66b2ec404e31bc1babafaedb
added check for FTGL library
* * *
imporve FTGL tests

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,17 @@
 2008-06-04  Shai Ayal  <shaiay@users.sourceforge.net>
 
+	* configure.in: Use AC_TRY_LINK in FTGL test.
+	Include FT_CFLAGS in CXXFLAGS.
+
+	* aclocal.m4 (OCTAVE_OPENGL): Note FIXME for apple.
+
+	* configure.in: Check for FTGL library.
+
 	* configure.in: Remove check for Fl/glu.h header.
 
 	* aclocal.m4 (AC_CHECK_FT2): New macro to check for freetype2.
 
 	* configure.in: Check for FLTK and corresponding compiler flags.
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -1051,16 +1051,18 @@ if test "$octave_cv_lib_qhull_version" =
 else
   AC_MSG_RESULT(no)
   ifelse([$2], , , [$2])
 fi
 ])
 dnl
 dnl Check for OpenGL. If found, define OPENGL_LIBS
 dnl
+dnl FIXME -- add tests for apple
+dnl
 AC_DEFUN([OCTAVE_OPENGL], [
 OPENGL_LIBS=
 case $canonical_host_type in
   *-*-msdosmsvc)
     AC_CHECK_HEADERS(windows.h)
     ;;
 esac
 have_opengl_incs=no
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -635,23 +635,49 @@ if test "$curl_missing" = yes; then
   warn_curl="cURL library not found.  The urlread and urlwrite functions will be disabled."
 fi
 
 
 # ---------------------------------------------------------------------
 
 ## libraries needed for graphics
 
+warn_graphics=""
+
 GRAPHICS_OPENGL=
 OCTAVE_OPENGL
 if test "x$OPENGL_LIBS" != "x"; then
   GRAPHICS_OPENGL="opengl"
+
+## ftgl (needs freetype 2)
+  AC_CHECK_FT2([9.0.3],[],
+    [warn_graphics="FreeType library not found. Native renderer will not have on-screen text"])
+  if test "x$warn_graphics" = "x" ; then
+    AC_LANG_PUSH(C++)
+      AC_CHECK_HEADERS([FTGL/FTGL.h], [
+	AC_MSG_CHECKING([for FTGLTextureFont in -lftgl])
+        save_LIBS="$LIBS"
+	save_CXXFLAGS="$CXXFLAGS"
+	LIBS="$LIBS $OPENGL_LIBS $FT2_LIBS -lftgl"
+	CXXFLAGS="$CXXFLAGS $FT2_CFLAGS"
+        AC_TRY_LINK([
+#include <FTGL/FTGLTextureFont.h>], [
+FTGLTextureFont font("");], [
+          OPENGL_LIBS="$OPENGL_LIBS $FT2_LIBS -lftgl"
+	  LIBS="$save_LIBS"
+          AC_DEFINE(HAVE_FTGL, 1, [Define to 1 if FTGL is present])
+	  AC_MSG_RESULT(yes)],[
+	  LIBS="$save_LIBS"
+	  CXXFLAGS="$save_CXXFLAGS"
+	  AC_MSG_RESULT(no)])],[
+          warn_graphics="FTGL library not found. Native renderer will not have on-screen text"])
+    AC_LANG_POP(C++)
+  fi
 fi
 
-
 GRAPHICS_LIBS=
 GRAPHICS_CFLAGS=
 
 ## fltk (www.fltk.org)
 AC_ARG_WITH(fltk-prefix,
         [  --with-fltk-prefix=PFX   Prefix where FLTK is installed (optional)],
         fltk_prefix="$withval",
         fltk_prefix="")
@@ -671,40 +697,35 @@ if test "x$fltk_prefix" != x ; then
   fltk_args="$fltk_args --prefix=$fltk_prefix"
   if test x${FLTK_CONFIG+set} != xset ; then
     FLTK_CONFIG="$fltk_prefix/bin/fltk-config"
   fi
 fi
 
 AC_PATH_PROG(FLTK_CONFIG, fltk-config, no)
 
-warn_graphics=""
 if test "$FLTK_CONFIG" = "no" ; then
   warn_graphics="fltk library (www.fltk.org) not found.  Native graphics will be disabled."
 else
   FLTK_CFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --cflags`"
   FLTK_LDFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`"
   
   AC_MSG_CHECKING(for OpenGL support in fltk)
   cat > conftest.cc <<EOF
   #include <FL/gl.h>
   int nothing=0;
 EOF
   $CXX $CXXFLAGS $FLTK_CFLAGS -c conftest.cc || \
     warn_graphics="fltk does not have OpenGL support.  Native graphics will be disabled."
 
   if test "x$warn_graphics" = "x" ; then
     AC_MSG_RESULT(yes)
-    ## FTGL flags
-    AC_CHECK_FT2([9.0.3],[],
-             [warn_graphics="FreeType library not found. Native graphics will be disabled."])
-
-    GRAPHICS_CFLAGS="$FLTK_CFLAGS $FT2_CFLAGS"
-    GRAPHICS_LIBS="$FLTK_LDFLAGS $FT2_LIBS"
-    GRAPHICS_OPENGL="$GRAPHICS_OPENGL fltk_backend" 
+    GRAPHICS_CFLAGS="$FLTK_CFLAGS"
+    GRAPHICS_LIBS="$FLTK_LDFLAGS"
+    GRAPHICS_OPENGL="$GRAPHICS_OPENGL fltk_backend"
   else
     AC_MSG_RESULT(no)
   fi
 fi
 
 AC_SUBST(GRAPHICS_CFLAGS)
 AC_SUBST(GRAPHICS_LIBS)
 AC_SUBST(GRAPHICS_OPENGL)
@@ -1974,20 +1995,21 @@ Octave is now configured for $canonical_
   COLAMD libraries:     $COLAMD_LIBS
   CCOLAMD libraries:    $CCOLAMD_LIBS
   CHOLMOD libraries:    $CHOLMOD_LIBS
   CXSPARSE libraries:   $CXSPARSE_LIBS
   HDF5 libraries:       $HDF5_LIBS
   CURL libraries:       $CURL_LIBS
   REGEX libraries:      $REGEX_LIBS
   QHULL libraries:	$QHULL_LIBS
-  GRAPHICS libraries    $GRAPHICS_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT
+  OPENGL libraries:     $OPENGL_LIBS
+  fltk backend libs:    $GRAPHICS_LIBS
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
   Include support for GNU readline:   $USE_READLINE
   64-bit array dims and indexing:     $USE_64_BIT_IDX_T
 ])
