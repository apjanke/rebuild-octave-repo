# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1322987725 18000
#      Sun Dec 04 03:35:25 2011 -0500
# Node ID 2c0765c14e4feb97ed9c4b2ecae7b602df107ee8
# Parent  6be49527e4cfaf69fd10e9d9e437ccde926869c5
eliminate unused error message buffer

* error.cc (error_message_buffer): Delete static variable.  Messages
were written to this std::ostringstream object, but the contents
were never used.
(verror): Delete code that initialized and wrote to
error_message_buffer.

diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -114,19 +114,16 @@ int warning_state = 0;
 int buffer_error_messages = 0;
 
 // TRUE means error messages are turned off.
 bool discard_error_messages = false;
 
 // TRUE means warning messages are turned off.
 bool discard_warning_messages = false;
 
-// The message buffer.
-static std::ostringstream *error_message_buffer = 0;
-
 void
 reset_error_handler (void)
 {
   error_state = 0;
   warning_state = 0;
   buffer_error_messages = 0;
   discard_error_messages = false;
 }
@@ -258,26 +255,17 @@ verror (bool save_last_error, std::ostre
           octave_idx_type curr_frame = -1;
 
           Vlast_error_stack = octave_call_stack::backtrace (0, curr_frame);
         }
       else
         Vlast_error_stack = initialize_last_error_stack ();
     }
 
-  if (buffer_error_messages)
-    {
-      if (error_message_buffer)
-        msg_string = "error: " + msg_string;
-      else
-        error_message_buffer = new std::ostringstream ();
-
-      *error_message_buffer << msg_string;
-    }
-  else
+  if (! buffer_error_messages)
     {
       octave_diary << msg_string;
       os << msg_string;
     }
 }
 
 // Note that we don't actually print any message if the error string
 // is just "" or "\n".  This allows error ("") and error ("\n") to
