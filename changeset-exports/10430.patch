# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1269237004 25200
#      Sun Mar 21 22:50:04 2010 -0700
# Node ID f1567b3e11089f35f028f2f5484391f4b10c6d01
# Parent  ae31852abf75b52061ef31c909c41295e27ead26
scripts/general/quadv.m: Replace 'quadl' with 'quadv' in help text

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-21  Soren Hauberg  <hauberg@gmail.com>
+
+	* general/quadv.m: Replace 'quadl' with 'quadv' in help text.
+
 2010-03-20  Soren Hauberg  <hauberg@gmail.com>
 
 	* general/interp2.m: For nearest neighbour interpolation ceil (instead of
     floor) at the center of the data intervals to be compatible with Matlab.
     Add test.
 	* general/interpn.m: Ditto.
 
 2010-03-19  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/scripts/general/quadv.m b/scripts/general/quadv.m
--- a/scripts/general/quadv.m
+++ b/scripts/general/quadv.m
@@ -13,20 +13,20 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{q} =} quadv (@var{f}, @var{a}, @var{b})
-## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol})
-## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace})
-## @deftypefnx {Function File} {@var{q} =} quadl (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace}, @var{p1}, @var{p2}, @dots{})
-## @deftypefnx {Function File} {[@var{q}, @var{fcnt}] =} quadl (@dots{})
+## @deftypefnx {Function File} {@var{q} =} quadv (@var{f}, @var{a}, @var{b}, @var{tol})
+## @deftypefnx {Function File} {@var{q} =} quadv (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace})
+## @deftypefnx {Function File} {@var{q} =} quadv (@var{f}, @var{a}, @var{b}, @var{tol}, @var{trace}, @var{p1}, @var{p2}, @dots{})
+## @deftypefnx {Function File} {[@var{q}, @var{fcnt}] =} quadv (@dots{})
 ##
 ## Numerically evaluate integral using adaptive Simpson's rule.
 ## @code{quadv (@var{f}, @var{a}, @var{b})} approximates the integral of
 ## @code{@var{f}(@var{x})} to the default absolute tolerance of @code{1e-6}. 
 ## @var{f} is either a function handle, inline function or string
 ## containing the name of the function to evaluate.  The function @var{f}
 ## must accept a string, and can return a vector representing the
 ## approximation to @var{n} different sub-functions.
