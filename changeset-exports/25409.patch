# HG changeset patch
# User Rik <rik@octave.org>
# Date 1527212572 25200
#      Thu May 24 18:42:52 2018 -0700
# Node ID 4f6c985ca28aa53137285ecc5995c1e314c8aa9c
# Parent  ce725103ebf1dcc7233670a5b5393ccdecc53971
Fix various bugs with audioread, audiowrite, audioinfo (bug #53975).

* audioread.cc (Faudioread): Add additional case to switch statement for
"native" option to return an array of type single when there are
32 BitsPerSample.
* audioread.cc (Faudiowrite): For 24 BitsPerSample output, change output
to use 32Bits if format is wav, otherwise use 24Bits.
* audioread.cc (Faudioinfo): Add additional case statements to decode
BitsPerSample and return 32 for float and 64 for double, rather than default -1.

diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -162,16 +162,19 @@ is stored in the audio file.
               ret_audio = int16NDArray (audio * 32767);
               break;
             case SF_FORMAT_PCM_24:
               ret_audio = int32NDArray (audio * 8388608);
               break;
             case SF_FORMAT_PCM_32:
               ret_audio = int32NDArray (audio * 2147483648);
               break;
+            case SF_FORMAT_FLOAT:
+              ret_audio = FloatNDArray (audio);
+              break;
             default:
               ret_audio = audio;
               break;
             }
         }
       else
         ret_audio = audio;
     }
@@ -369,17 +372,22 @@ Comment.
               if ((info.format & SF_FORMAT_TYPEMASK) == SF_FORMAT_WAV)
                 info.format |= SF_FORMAT_PCM_U8;
               else
                 info.format |= SF_FORMAT_PCM_S8;
             }
           else if (bits == 16)
             info.format |= SF_FORMAT_PCM_16;
           else if (bits == 24)
-            info.format |= SF_FORMAT_PCM_32;
+            {
+              if ((info.format & SF_FORMAT_TYPEMASK) == SF_FORMAT_WAV)
+                info.format |= SF_FORMAT_PCM_32;
+              else
+                info.format |= SF_FORMAT_PCM_24;
+            }
           else if (bits == 32)
             {
               if ((info.format & SF_FORMAT_TYPEMASK) == SF_FORMAT_WAV
                   && args(1).isfloat ())
                 info.format |= SF_FORMAT_FLOAT;
               else
                 info.format |= SF_FORMAT_PCM_32;
             }
@@ -579,16 +587,22 @@ Audio bit rate.  Unused, only present fo
       bits = 16;
       break;
     case SF_FORMAT_PCM_24:
       bits = 24;
       break;
     case SF_FORMAT_PCM_32:
       bits = 32;
       break;
+    case SF_FORMAT_FLOAT:
+      bits = 32;
+      break;
+    case SF_FORMAT_DOUBLE:
+      bits = 64;
+      break;
     default:
       bits = -1;
       break;
     }
 
   result.assign ("BitsPerSample", bits);
   result.assign ("BitRate", -1);
   result.assign ("Title", sf_get_string (file, SF_STR_TITLE));
