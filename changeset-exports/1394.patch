# HG changeset patch
# User jwe
# Date 811105224 0
#      Thu Sep 14 19:00:24 1995 +0000
# Node ID a45089a6ea412deb2939a9c67570ab458ef89647
# Parent  a771d1785c2a3f1f2fbf8ca737668d0a9ce19c76
[project @ 1995-09-14 19:00:24 by jwe]

diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -59,18 +59,25 @@ my_friendly_exit (const char *sig_name, 
   clean_up_and_exit (sig_number);
 }
 
 // I know, not really a signal handler.
 
 static void
 octave_new_handler (void)
 {
-  error ("new: virtual memory exhausted -- stopping myself");
-  clean_up_and_exit (1);
+  error ("memory exhausted -- trying to return to prompt");
+
+  if (can_interrupt)
+    {
+      jump_to_top_level ();
+      panic_impossible ();
+    }
+  else
+    clean_up_and_exit (1);
 }
 
 static RETSIGTYPE
 generic_sig_handler (int i)
 {
   my_friendly_exit (sys_siglist[i], i);
 
 #if RETSIGTYPE == void
@@ -125,17 +132,17 @@ sigchld_handler (int i)
 static RETSIGTYPE
 sigfpe_handler (int i)
 {
   // Can this ever cause trouble on systems that don't forget signal
   // handlers when they are invoked?
 
   signal (SIGFPE, sigfpe_handler);
 
-  error ("floating point exception -- trying to continue");
+  error ("floating point exception -- trying to return to prompt");
 
   if (can_interrupt)
     {
       jump_to_top_level ();
       panic_impossible ();
     }
 
 #if RETSIGTYPE == void
