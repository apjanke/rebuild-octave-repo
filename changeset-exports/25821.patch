# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1534883122 14400
#      Tue Aug 21 16:25:22 2018 -0400
# Node ID bd473c0cc34bfeaf79ca348877690a0d944e5395
# Parent  218feb083dcc87cedd6b500513feaefd04ec9800
allow default font, size, and external editor to be set from environment

* resource-manager.cc (resource_manager::do_reload_settings):
Allow default font, font size, and editor to be set from environment
variables.

diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -228,27 +228,47 @@ namespace octave
 #elif defined (Q_WS_X11) || defined (Q_WS_WIN)
         QString default_family = "Courier New";
 #elif defined (Q_WS_MAC)
         QString default_family = "Courier";
 #else
         QString default_family = "courier";
 #endif
 
+        std::string env_default_family
+          = sys::env::getenv ("OCTAVE_DEFAULT_FONT");
+
+        if (! env_default_family.empty ())
+          default_family = QString::fromStdString (env_default_family);
+
+        QString default_font_size = "10";
+
+        std::string env_default_font_size
+          = sys::env::getenv ("OCTAVE_DEFAULT_FONT_SIZE");
+
+        if (! env_default_font_size.empty ())
+          default_font_size = QString::fromStdString (env_default_font_size);
+
         // Get the default custom editor
 #if defined (Q_OS_WIN32)
         QString custom_editor = "notepad++ -n%l %f";
 #else
         QString custom_editor = "emacs +%l %f";
 #endif
 
+        std::string env_default_editor
+          = sys::env::getenv ("OCTAVE_DEFAULT_EDITOR");
+
+        if (! env_default_editor.empty ())
+          custom_editor = QString::fromStdString (env_default_editor);
+
         // Replace placeholders
         settings_text.replace ("__default_custom_editor__", custom_editor);
         settings_text.replace ("__default_font__", default_family);
-        settings_text.replace ("__default_font_size__", "10");
+        settings_text.replace ("__default_font_size__", default_font_size);
 
         QFile user_settings (m_settings_file);
 
         if (! user_settings.open (QIODevice::WriteOnly))
           return;
 
         QTextStream out (&user_settings);
 
