# HG changeset patch
# User jwe
# Date 1096047979 0
#      Fri Sep 24 17:46:19 2004 +0000
# Node ID fdfce0dec36bf72ee729e0ae0c27ae8d52befa13
# Parent  70be065b82019aecb580f51e7d2ca9520cfb685b
[project @ 2004-09-24 17:46:18 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,20 @@
 2004-09-24  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.1.60.
 	(OCTAVE_API_VERSION): Now api-v11.
 
+	* OPERATORS/op-int.h (OCTAVE_MM_INT_OPS): Include missing matrix
+	by int matrix ops.
+	(OCTAVE_INSTALL_MM_INT_OPS): Install them.
+
+	* OPERATORS/op-i64-i64.cc: Define and install missing int64 by
+	matrix and scalar ops.
+
 2004-09-24  David Bateman  <dbateman@free.fr>
 
 	* ov-fcn-inline (Finline): Attempt better auto-detection of
 	symbols that should be recognized as arguments.
 
 2004-09-24  John W. Eaton  <jwe@octave.org>
 
 	* ov-str-mat.cc (default_numeric_conversion_function): Return
diff --git a/src/OPERATORS/op-i64-i64.cc b/src/OPERATORS/op-i64-i64.cc
--- a/src/OPERATORS/op-i64-i64.cc
+++ b/src/OPERATORS/op-i64-i64.cc
@@ -80,30 +80,46 @@ Software Foundation, 59 Temple Place - S
 #include "ops.h"
 #include "xdiv.h"
 #include "xpow.h"
 
 #include "op-int.h"
 
 OCTAVE_S_INT_UNOPS (int64)
 OCTAVE_SS_INT_CMP_OPS (ss, int64_, int64_)
+OCTAVE_SS_INT_CMP_OPS (sx, int64_, )
+OCTAVE_SS_INT_CMP_OPS (xs, , int64_)
 OCTAVE_SS_INT_BOOL_OPS (ss, int64_, int64_, octave_int64 (0), octave_int64 (0))
+OCTAVE_SS_INT_BOOL_OPS (sx, int64_, , octave_int64 (0), 0)
+OCTAVE_SS_INT_BOOL_OPS (xs, , int64_, 0, octave_int64 (0))
 
 OCTAVE_SM_INT_CMP_OPS (sm, int64_, int64_)
+OCTAVE_SM_INT_CMP_OPS (xm, , int64_)
+OCTAVE_SM_INT_CMP_OPS (smx, int64_, )
 OCTAVE_SM_INT_BOOL_OPS (sm, int64_, int64_)
+OCTAVE_SM_INT_BOOL_OPS (xm, , int64_)
+OCTAVE_SM_INT_BOOL_OPS (smx, int64_, )
 
 OCTAVE_MS_INT_CMP_OPS (ms, int64_, int64_)
+OCTAVE_MS_INT_CMP_OPS (mx, int64_, )
+OCTAVE_MS_INT_CMP_OPS (mxs, , int64_)
 OCTAVE_MS_INT_BOOL_OPS (ms, int64_, int64_)
+OCTAVE_MS_INT_BOOL_OPS (mx, int64_, )
+OCTAVE_MS_INT_BOOL_OPS (mxs, , int64_)
 OCTAVE_MS_INT_ASSIGN_OPS (ms, int64_, int64_, int64_)
 OCTAVE_MS_INT_ASSIGN_OPS (mx, int64_, , )
 OCTAVE_MS_INT_ASSIGN_OPS (mc, int64_, complex_, )
 
 OCTAVE_M_INT_UNOPS (int64)
 OCTAVE_MM_INT_CMP_OPS (mm, int64_, int64_)
+OCTAVE_MM_INT_CMP_OPS (mmx, int64_, )
+OCTAVE_MM_INT_CMP_OPS (mxm, , int64_)
 OCTAVE_MM_INT_BOOL_OPS (mm, int64_, int64_)
+OCTAVE_MM_INT_BOOL_OPS (mmx, int64_, )
+OCTAVE_MM_INT_BOOL_OPS (mxm, , int64_)
 OCTAVE_MM_INT_ASSIGN_OPS (mm, int64_, int64_, int64_)
 OCTAVE_MM_INT_ASSIGN_OPS (mmx, int64_, , )
 OCTAVE_MM_INT_ASSIGN_OPS (mmc, int64_, complex_, )
 
 OCTAVE_MS_INT_ASSIGN_OPS (mi8, int64_, int8_, int8_)
 OCTAVE_MS_INT_ASSIGN_OPS (mui8, int64_, uint8_, uint8_)
 OCTAVE_MS_INT_ASSIGN_OPS (mi16, int64_, int16_, int16_)
 OCTAVE_MS_INT_ASSIGN_OPS (mui16, int64_, uint16_, uint16_)
@@ -122,35 +138,53 @@ OCTAVE_MM_INT_ASSIGN_OPS (mmui64, int64_
 OCTAVE_MIXED_INT_CMP_OPS (int64, int8)
 OCTAVE_MIXED_INT_CMP_OPS (int64, uint8)
 OCTAVE_MIXED_INT_CMP_OPS (int64, int16)
 OCTAVE_MIXED_INT_CMP_OPS (int64, uint16)
 OCTAVE_MIXED_INT_CMP_OPS (int64, int32)
 OCTAVE_MIXED_INT_CMP_OPS (int64, uint32)
 OCTAVE_MIXED_INT_CMP_OPS (int64, uint64)
 
+OCTAVE_CONCAT_FN (int64);
+
 void
 install_i64_i64_ops (void)
 {
   OCTAVE_INSTALL_S_INT_UNOPS (int64);
   OCTAVE_INSTALL_SS_INT_CMP_OPS (ss, int64_, int64_);
+  OCTAVE_INSTALL_SS_INT_CMP_OPS (sx, int64_, );
+  OCTAVE_INSTALL_SS_INT_CMP_OPS (xs, , int64_);
   OCTAVE_INSTALL_SS_INT_BOOL_OPS (ss, int64_, int64_);
+  OCTAVE_INSTALL_SS_INT_BOOL_OPS (sx, int64_, );
+  OCTAVE_INSTALL_SS_INT_BOOL_OPS (xs, , int64_);
 
   OCTAVE_INSTALL_SM_INT_CMP_OPS (sm, int64_, int64_);
+  OCTAVE_INSTALL_SM_INT_CMP_OPS (xm, , int64_);
+  OCTAVE_INSTALL_SM_INT_CMP_OPS (smx, int64_, );
   OCTAVE_INSTALL_SM_INT_BOOL_OPS (sm, int64_, int64_);
+  OCTAVE_INSTALL_SM_INT_BOOL_OPS (xm, , int64_);
+  OCTAVE_INSTALL_SM_INT_BOOL_OPS (smx, int64_, );
 
   OCTAVE_INSTALL_MS_INT_CMP_OPS (ms, int64_, int64_);
+  OCTAVE_INSTALL_MS_INT_CMP_OPS (mx, int64_, );
+  OCTAVE_INSTALL_MS_INT_CMP_OPS (mxs, , int64_);
   OCTAVE_INSTALL_MS_INT_BOOL_OPS (ms, int64_, int64_);
+  OCTAVE_INSTALL_MS_INT_BOOL_OPS (mx, int64_, );
+  OCTAVE_INSTALL_MS_INT_BOOL_OPS (mxs, , int64_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (ms, int64_, int64_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mx, int64_, );
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mc, int64_, complex_);
 
   OCTAVE_INSTALL_M_INT_UNOPS (int64);
   OCTAVE_INSTALL_MM_INT_CMP_OPS (mm, int64_, int64_);
+  OCTAVE_INSTALL_MM_INT_CMP_OPS (mmx, int64_, );
+  OCTAVE_INSTALL_MM_INT_CMP_OPS (mxm, , int64_);
   OCTAVE_INSTALL_MM_INT_BOOL_OPS (mm, int64_, int64_);
+  OCTAVE_INSTALL_MM_INT_BOOL_OPS (mmx, int64_, );
+  OCTAVE_INSTALL_MM_INT_BOOL_OPS (mxm, , int64_);
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mm, int64_, int64_);
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mmx, int64_, );
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mmc, int64_, complex_);
 
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mi8, int64_, int8_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mui8, int64_, uint8_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mi16, int64_, int16_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mui16, int64_, uint16_);
@@ -176,15 +210,17 @@ install_i64_i64_ops (void)
 
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, int8);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, uint8);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, int16);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, uint16);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, int32);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, uint32);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (int64, uint64);
+
+  OCTAVE_INSTALL_CONCAT_FN (int64);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/OPERATORS/op-int.h b/src/OPERATORS/op-int.h
--- a/src/OPERATORS/op-int.h
+++ b/src/OPERATORS/op-int.h
@@ -430,18 +430,20 @@ octave_value elem_xpow (T1 ## NDArray a,
   }
 
 #define OCTAVE_MM_INT_OPS(TYPE) \
   OCTAVE_M_INT_UNOPS (TYPE) \
   OCTAVE_MM_POW_OPS (TYPE, TYPE) \
   OCTAVE_MM_INT_ARITH_OPS (TYPE, TYPE) \
   OCTAVE_MM_INT_CMP_OPS (mm, TYPE ## _, TYPE ## _) \
   OCTAVE_MM_INT_CMP_OPS (mmx, TYPE ## _, ) \
+  OCTAVE_MM_INT_CMP_OPS (mxm, , TYPE ## _) \
   OCTAVE_MM_INT_BOOL_OPS (mm, TYPE ## _, TYPE ## _) \
   OCTAVE_MM_INT_BOOL_OPS (mmx, TYPE ## _, ) \
+  OCTAVE_MM_INT_BOOL_OPS (mxm, , TYPE ## _) \
   OCTAVE_MM_INT_ASSIGN_OPS (mm, TYPE ## _, TYPE ## _, TYPE ## _) \
   OCTAVE_MM_INT_ASSIGN_OPS (mmx, TYPE ## _, , ) \
   OCTAVE_MM_CONV(TYPE ## _, complex_)
 
 #define OCTAVE_RE_INT_ASSIGN_OPS(TYPE) \
   DEFNDASSIGNOP_FN (TYPE ## ms_assign, matrix, TYPE ## _scalar, array, assign) \
   DEFNDASSIGNOP_FN (TYPE ## mm_assign, matrix, TYPE ## _matrix, array, assign)
 
@@ -624,18 +626,20 @@ octave_value elem_xpow (T1 ## NDArray a,
 #define OCTAVE_INSTALL_MM_INT_ASSIGN_OPS(PFX, TLHS, TRHS) \
   INSTALL_ASSIGNOP (op_asn_eq, octave_ ## TLHS ## matrix, octave_ ## TRHS ## matrix, PFX ## _assign)
 
 #define OCTAVE_INSTALL_MM_INT_OPS(TYPE) \
   OCTAVE_INSTALL_M_INT_UNOPS (TYPE) \
   OCTAVE_INSTALL_MM_INT_ARITH_OPS (TYPE, TYPE) \
   OCTAVE_INSTALL_MM_INT_CMP_OPS (mm, TYPE ## _, TYPE ## _) \
   OCTAVE_INSTALL_MM_INT_CMP_OPS (mmx, TYPE ## _, ) \
+  OCTAVE_INSTALL_MM_INT_CMP_OPS (mxm, , TYPE ## _) \
   OCTAVE_INSTALL_MM_INT_BOOL_OPS (mm, TYPE ## _, TYPE ## _) \
   OCTAVE_INSTALL_MM_INT_BOOL_OPS (mmx, TYPE ## _, ) \
+  OCTAVE_INSTALL_MM_INT_BOOL_OPS (mxm, , TYPE ## _) \
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mm, TYPE ## _, TYPE ## _) \
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mmx, TYPE ## _, ) \
   INSTALL_WIDENOP (octave_ ## TYPE ## _matrix, octave_complex_matrix, TYPE ## _m_complex_m_conv) \
   INSTALL_ASSIGNCONV (octave_ ## TYPE ## _matrix, octave_complex_matrix, octave_complex_matrix)
 
 #define OCTAVE_INSTALL_RE_INT_ASSIGN_OPS(TYPE) \
   INSTALL_ASSIGNOP (op_asn_eq, octave_matrix, octave_ ## TYPE ## _scalar, TYPE ## ms_assign) \
   INSTALL_ASSIGNOP (op_asn_eq, octave_matrix, octave_ ## TYPE ## _matrix, TYPE ## mm_assign) \
diff --git a/src/OPERATORS/op-ui64-ui64.cc b/src/OPERATORS/op-ui64-ui64.cc
--- a/src/OPERATORS/op-ui64-ui64.cc
+++ b/src/OPERATORS/op-ui64-ui64.cc
@@ -80,30 +80,46 @@ Software Foundation, 59 Temple Place - S
 #include "ops.h"
 #include "xdiv.h"
 #include "xpow.h"
 
 #include "op-int.h"
 
 OCTAVE_S_INT_UNOPS (uint64)
 OCTAVE_SS_INT_CMP_OPS (ss, uint64_, uint64_)
+OCTAVE_SS_INT_CMP_OPS (sx, uint64_, )
+OCTAVE_SS_INT_CMP_OPS (xs, , uint64_)
 OCTAVE_SS_INT_BOOL_OPS (ss, uint64_, uint64_, octave_uint64 (0), octave_uint64 (0))
+OCTAVE_SS_INT_BOOL_OPS (sx, uint64_, , octave_uint64 (0), 0)
+OCTAVE_SS_INT_BOOL_OPS (xs, , uint64_, 0, octave_uint64 (0))
 
 OCTAVE_SM_INT_CMP_OPS (sm, uint64_, uint64_)
+OCTAVE_SM_INT_CMP_OPS (xm, , uint64_)
+OCTAVE_SM_INT_CMP_OPS (smx, uint64_, )
 OCTAVE_SM_INT_BOOL_OPS (sm, uint64_, uint64_)
+OCTAVE_SM_INT_BOOL_OPS (xm, , uint64_)
+OCTAVE_SM_INT_BOOL_OPS (smx, uint64_, )
 
 OCTAVE_MS_INT_CMP_OPS (ms, uint64_, uint64_)
+OCTAVE_MS_INT_CMP_OPS (mx, uint64_, )
+OCTAVE_MS_INT_CMP_OPS (mxs, , uint64_)
 OCTAVE_MS_INT_BOOL_OPS (ms, uint64_, uint64_)
+OCTAVE_MS_INT_BOOL_OPS (mx, uint64_, )
+OCTAVE_MS_INT_BOOL_OPS (mxs, , uint64_)
 OCTAVE_MS_INT_ASSIGN_OPS (ms, uint64_, uint64_, uint64_)
 OCTAVE_MS_INT_ASSIGN_OPS (mx, uint64_, , )
 OCTAVE_MS_INT_ASSIGN_OPS (mc, uint64_, complex_, )
 
 OCTAVE_M_INT_UNOPS (uint64)
 OCTAVE_MM_INT_CMP_OPS (mm, uint64_, uint64_)
+OCTAVE_MM_INT_CMP_OPS (mmx, uint64_, )
+OCTAVE_MM_INT_CMP_OPS (mxm, , uint64_)
 OCTAVE_MM_INT_BOOL_OPS (mm, uint64_, uint64_)
+OCTAVE_MM_INT_BOOL_OPS (mmx, uint64_, )
+OCTAVE_MM_INT_BOOL_OPS (mxm, , uint64_)
 OCTAVE_MM_INT_ASSIGN_OPS (mm, uint64_, uint64_, uint64_)
 OCTAVE_MM_INT_ASSIGN_OPS (mmx, uint64_, , )
 OCTAVE_MM_INT_ASSIGN_OPS (mmc, uint64_, complex_, )
 
 OCTAVE_MS_INT_ASSIGN_OPS (mi8, uint64_, int8_, int8_)
 OCTAVE_MS_INT_ASSIGN_OPS (mui8, uint64_, uint8_, uint8_)
 OCTAVE_MS_INT_ASSIGN_OPS (mi16, uint64_, int16_, int16_)
 OCTAVE_MS_INT_ASSIGN_OPS (mui16, uint64_, uint16_, uint16_)
@@ -122,35 +138,53 @@ OCTAVE_MM_INT_ASSIGN_OPS (mmi64, uint64_
 OCTAVE_MIXED_INT_CMP_OPS (uint64, int8)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, uint8)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, int16)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, uint16)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, int32)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, uint32)
 OCTAVE_MIXED_INT_CMP_OPS (uint64, int64)
 
+OCTAVE_CONCAT_FN (uint64)
+
 void
 install_ui64_ui64_ops (void)
 {
   OCTAVE_INSTALL_S_INT_UNOPS (uint64);
   OCTAVE_INSTALL_SS_INT_CMP_OPS (ss, uint64_, uint64_);
+  OCTAVE_INSTALL_SS_INT_CMP_OPS (sx, uint64_, );
+  OCTAVE_INSTALL_SS_INT_CMP_OPS (xs, , uint64_);
   OCTAVE_INSTALL_SS_INT_BOOL_OPS (ss, uint64_, uint64_);
+  OCTAVE_INSTALL_SS_INT_BOOL_OPS (sx, uint64_, );
+  OCTAVE_INSTALL_SS_INT_BOOL_OPS (xs, , uint64_);
 
   OCTAVE_INSTALL_SM_INT_CMP_OPS (sm, uint64_, uint64_);
+  OCTAVE_INSTALL_SM_INT_CMP_OPS (xm, , uint64_);
+  OCTAVE_INSTALL_SM_INT_CMP_OPS (smx, uint64_, );
   OCTAVE_INSTALL_SM_INT_BOOL_OPS (sm, uint64_, uint64_);
+  OCTAVE_INSTALL_SM_INT_BOOL_OPS (xm, , uint64_);
+  OCTAVE_INSTALL_SM_INT_BOOL_OPS (smx, uint64_, );
 
   OCTAVE_INSTALL_MS_INT_CMP_OPS (ms, uint64_, uint64_);
+  OCTAVE_INSTALL_MS_INT_CMP_OPS (mx, uint64_, );
+  OCTAVE_INSTALL_MS_INT_CMP_OPS (mxs, , uint64_);
   OCTAVE_INSTALL_MS_INT_BOOL_OPS (ms, uint64_, uint64_);
+  OCTAVE_INSTALL_MS_INT_BOOL_OPS (mx, uint64_, );
+  OCTAVE_INSTALL_MS_INT_BOOL_OPS (mxs, , uint64_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (ms, uint64_, uint64_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mx, uint64_, );
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mc, uint64_, complex_);
 
   OCTAVE_INSTALL_M_INT_UNOPS (uint64);
   OCTAVE_INSTALL_MM_INT_CMP_OPS (mm, uint64_, uint64_);
+  OCTAVE_INSTALL_MM_INT_CMP_OPS (mmx, uint64_, );
+  OCTAVE_INSTALL_MM_INT_CMP_OPS (mxm, , uint64_);
   OCTAVE_INSTALL_MM_INT_BOOL_OPS (mm, uint64_, uint64_);
+  OCTAVE_INSTALL_MM_INT_BOOL_OPS (mmx, uint64_, );
+  OCTAVE_INSTALL_MM_INT_BOOL_OPS (mxm, , uint64_);
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mm, uint64_, uint64_);
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mmx, uint64_, );
   OCTAVE_INSTALL_MM_INT_ASSIGN_OPS (mmc, uint64_, complex_);
 
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mi8, uint64_, int8_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mui8, uint64_, uint8_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mi16, uint64_, int16_);
   OCTAVE_INSTALL_MS_INT_ASSIGN_OPS (mui16, uint64_, uint16_);
@@ -176,15 +210,17 @@ install_ui64_ui64_ops (void)
 
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, int8);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, uint8);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, int16);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, uint16);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, int32);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, uint32);
   OCTAVE_INSTALL_MIXED_INT_CMP_OPS (uint64, int64);
+
+  OCTAVE_INSTALL_CONCAT_FN (uint64);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
