# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234778026 -3600
#      Mon Feb 16 10:53:46 2009 +0100
# Node ID 59c0fde890a05e29b4a60a0a9a6ab52faa02289a
# Parent  900a5bf52309616de76cfbbb181db59db6dcb1f6
more NEWS updates

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-02-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Yet more updates.
+
 2009-02-16  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Mention command-style parsing changes.  More updates.
 
 2009-02-13  John W. Eaton  <jwe@octave.org>
 
 	* NEWS: Update for release.
 
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -74,17 +74,20 @@ Summary of important user-visible change
      removed from Octave.  These function were incompatible with the
      high level graphics handle code.
 
  ** Improvements to fsolve.
 
     The fsolve function now accepts an option structure argument (see
     also the optimset function).  The INFO values returned from fsolve
     have changed to be compatible with Matlab's fsolve function.
-    Additionally, fsolve is now able to solve overdetermined systems.
+    Additionally, fsolve is now able to solve overdetermined systems,
+    complex-differentiable complex systems, systems with a sparse
+    jacobian and can work in single precision if given single precision
+    inputs. It can also be called recursively.
 
  ** Object Oriented Programming.
 
     Octave now includes OOP features and the user can create their own
     class objects and overloaded functions and operators.  For
     example, all methods of a class called "myclass" will be found in
     a directory "@myclass" on the users path.  The class specific
     versions of functions and operators take precedence over the
@@ -181,20 +184,27 @@ Summary of important user-visible change
     visa-versa are warned that compatibility might not be assured.
 
  ** Improved array indexing.
 
     The underlying code used for indexing of arrays has been
     completely rewritten and so the indexing of arrays is now
     significantly faster.
 
+ ** Improved memory management.
+
+    Octave will now attempt to share data in some cases where previously
+    a copy would be made, such as certain array slicing operations or
+    conversions between cells, structs and cs-lists. This usually reduces
+    both time and memory consumption.
+
  ** Improved performance for reduction operations.
 
-    The performance of the sum, prod, sumsq, cumsum, and cumprod
-    functions has been significantly improved.
+    The performance of the sum, prod, sumsq, cumsum, cumprod, any, all,
+    max and min functions has been significantly improved.
 
  ** Diagonal and permutation matrices.
 
     The interpreter can now treat diagonal and permutation matrices as
     special objects that store only the non-zero elements, rather than
     general full matrices.  Therefore, it is now possible to construct
     and use these matrices in linear algebra without suffering a
     performance penalty due to storing large numbers of zero elements.
