# HG changeset patch
# User jwe
# Date 812726291 0
#      Tue Oct 03 13:18:11 1995 +0000
# Node ID d361954e95ae3316c23725fc3de33811e7b74a05
# Parent  9e861d5519bde9bfe55073fbd977b975a9be62bb
[project @ 1995-10-03 13:18:11 by jwe]

diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -327,25 +327,19 @@ parse_error	: LEXICAL_ERROR
 		| error
 		;
 
 simple_list	: semi_comma
 		  { $$ = 0; }
 		| comma_semi
 		  { $$ = 0; }
 		| simple_list1
-		  {
-		    maybe_warn_missing_semi ($1);
-		    $$ = $1;
-		  }
+		  { $$ = $1; }
 		| simple_list1 comma_semi
-		  {
-		    maybe_warn_missing_semi ($1);
-		    $$ = $1;
-		  }
+		  { $$ = $1; }
 		| simple_list1 semi_comma
 		  {
 		    tree_statement *tmp = $1->rear ();
 		    tmp->set_print_flag (0);
 		    $$ = $1;
 		  }
 		;
 
@@ -414,18 +408,18 @@ list		: list1
 
 list1		: statement
 		  {
 		    beginning_of_function = 0;
 		    $$ = new tree_statement_list ($1);
 		  }
 		| list1 comma_nl_sep statement
 		  {
+		    maybe_warn_missing_semi ($1);
 		    $1->append ($3);
-		    maybe_warn_missing_semi ($1);
 		    $$ = $1;
 		  }
 		| list1 semi_sep statement
 		  {
 		    tree_statement *tmp = $1->rear ();
 		    tmp->set_print_flag (0);
 		    $1->append ($3);
 		    $$ = $1;
@@ -1690,13 +1684,20 @@ make_index_expression (tree_indirect_ref
 
 static void
 maybe_warn_missing_semi (tree_statement_list *t)
 {
   if (defining_func && user_pref.warn_missing_semicolon)
     {
       tree_statement *tmp = t->rear();
       if (tmp->is_expression ())
+	{
+	  char *fname = input_from_command_line_file
+	    ? curr_fcn_file_name : fcn_file_in_path (curr_fcn_file_name);
 
-	warning ("missing semicolon near line %d, column %d in file `%s.m'",
-		 tmp->line (), tmp->column (), curr_fcn_file_name);
+	  warning ("missing semicolon near line %d, column %d in file `%s'",
+		   tmp->line (), tmp->column (), fname);
+
+	  if (fname != curr_fcn_file_name)
+	    delete [] fname;
+	}
     }
 }
