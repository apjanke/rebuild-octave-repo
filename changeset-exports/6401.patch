# HG changeset patch
# User dbateman
# Date 1173454485 0
#      Fri Mar 09 15:34:45 2007 +0000
# Node ID f8cbc0871ed641d490c5120287a76f11885ec058
# Parent  566343604d9525118f9cf8b4201ca2690994b2c6
[project @ 2007-03-09 15:34:45 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2007-03-09  David Bateman  <dbateman@free.fr>
+
+	* data.cc (do_cat):  Also treat case of all empty matrices.
+
 2007-03-08  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mxArray_octave_value::set_dimensions,
 	mxArray_octave_value::set_m, mxArray_octave_value::set_n, 
 	mxArray_octave_value::set_class_name,
 	mxArray_octave_value::set_ir, mxArray_octave_value::set_jc,
 	mxArray_octave_value::remove_field,
 	mxArray_octave_value::set_field_by_number):
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -741,36 +741,41 @@ do_cat (const octave_value_list& args, s
 	    {
 	      if (! args (i).all_zero_dims ())
 		{
 		  tmp = args (i);
 		  break;
 		}
 	    }
 
-	  tmp = tmp.resize (dim_vector (0,0)).resize (dv);
-
-	  if (error_state)
-	    return retval;
-
-	  Array<int> ra_idx (dv.length (), 0);
-
-	  for (int j = i; j < n_args; j++)
+	  if (i == n_args)
+	    retval = Matrix ();
+	  else
 	    {
-	      tmp = do_cat_op (tmp, args (j), ra_idx);
+	      tmp = tmp.resize (dim_vector (0,0)).resize (dv);
 
 	      if (error_state)
 		return retval;
 
-	      dim_vector dv_tmp = args (j).dims ();
-
-	      ra_idx (dim) += (dim < dv_tmp.length () ? dv_tmp (dim) : 1);
+	      Array<int> ra_idx (dv.length (), 0);
+
+	      for (int j = i; j < n_args; j++)
+		{
+		  tmp = do_cat_op (tmp, args (j), ra_idx);
+
+		  if (error_state)
+		    return retval;
+
+		  dim_vector dv_tmp = args (j).dims ();
+
+		  ra_idx (dim) += (dim < dv_tmp.length () ? dv_tmp (dim) : 1);
+		}
+
+	      retval = tmp;
 	    }
-
-	  retval = tmp;
 	}
       else
 	error ("%s: invalid dimension argument", fname.c_str ());
     }
   else
     print_usage ();
  
   return retval;
