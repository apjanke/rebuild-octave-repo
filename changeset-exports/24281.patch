# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1511113755 18000
#      Sun Nov 19 12:49:15 2017 -0500
# Node ID a01c210e42874301ee870478c337142f5beb11a7
# Parent  a26a8714db26fbfd79622cdd73ff2cded89ae502
delete unused symbol_table functions

* symtab.h (symbol_table::push_context, symbol_table::pop_context):
Delete unused functions.

diff --git a/libinterp/corefcn/symtab.h b/libinterp/corefcn/symtab.h
--- a/libinterp/corefcn/symtab.h
+++ b/libinterp/corefcn/symtab.h
@@ -511,42 +511,16 @@ namespace octave
           fcn_info& finfo = p->second;
 
           finfo.install_built_in_dispatch (klass);
         }
       else
         error ("install_built_in_dispatch: '%s' is undefined", name.c_str ());
     }
 
-    void push_context (void)
-    {
-      if (m_current_scope == m_top_scope)
-        error ("invalid call to symtab::push_context");
-
-      if (m_current_scope)
-        m_current_scope->push_context ();
-    }
-
-    // This is written as two separate functions instead of a single
-    // function with default values so that it will work properly with
-    // unwind_protect.
-
-    void pop_context (void)
-    {
-      if (m_current_scope == m_top_scope)
-        error ("invalid call to symtab::pop_context");
-
-      if (m_current_scope)
-        m_current_scope->pop_context ();
-    }
-
-    // For unwind_protect where a pointer argument is needed.
-
-    void pop_context (void *) { pop_context (); }
-
     std::list<symbol_record> glob (const std::string& pattern)
     {
       return (m_current_scope
               ? m_current_scope->glob (pattern) : std::list<symbol_record> ());
     }
 
     std::list<symbol_record>
       glob_global_variables (const std::string& pattern)
