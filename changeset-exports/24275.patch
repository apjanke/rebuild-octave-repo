# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1511002216 -3600
#      Sat Nov 18 11:50:16 2017 +0100
# Node ID e9fe311185427391240bbf2f884805abc55a50db
# Parent  c1940e9e3399fd57fff4a59ca97139399b3b5624
improve re-docking of a floating widget under windows

* octave-dock-widget.cc (make_widget): save window state before adding the
  widget, restore this state after adding, hide and re-show the widget in
  order to make it visible again

* main-window.cc (set_window_layout): restore state and geometry on windows
  for not storing the default state when calling make_widget

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1260,20 +1260,18 @@ void
 main_window::init_terminal_size (void)
 {
   emit init_terminal_size_signal ();
 }
 
 void
 main_window::set_window_layout (QSettings *settings)
 {
-#if ! defined (Q_OS_WIN32)
   restoreState (settings->value ("MainWindow/windowState").toByteArray ());
   restoreGeometry (settings->value ("MainWindow/geometry").toByteArray ());
-#endif
 
   // Restore the geometry of all dock-widgets
   foreach (octave_dock_widget *widget, dock_widget_list ())
     {
       QString name = widget->objectName ();
 
       if (! name.isEmpty ())
         {
@@ -1304,20 +1302,18 @@ main_window::set_window_layout (QSetting
           else
             {
               widget->make_widget ();
               widget->setVisible (visible);     // not floating -> show
             }
         }
     }
 
-#if defined (Q_OS_WIN32)
   restoreState (settings->value ("MainWindow/windowState").toByteArray ());
   restoreGeometry (settings->value ("MainWindow/geometry").toByteArray ());
-#endif
 
   show ();
 }
 
 void
 main_window::write_settings (void)
 {
   QSettings *settings = resource_manager::get_settings ();
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -191,26 +191,22 @@ octave_dock_widget::make_widget (bool do
   // save last floating geometry if widget really was floating
   if (m_floating)
     settings->setValue ("DockWidgets/" + objectName () + "_floating_geometry",
                         geometry ());
   settings->sync ();
 
   if (dock)
     {
-      // add widget to last saved docking area (dock=true is default)
-      int area
-        = settings->value ("DockWidgets/" + objectName () + "_dock_area",
-                           Qt::TopDockWidgetArea).toInt ();
-      m_parent->addDockWidget (static_cast<Qt::DockWidgetArea> (area), this);
-
-      // FIXME: restoreGeometry is ignored for docked widgets
-      //        and its child widget
-      restoreGeometry (settings->value
-             ("DockWidgets/" + objectName ()).toByteArray ());
+      settings->setValue ("MainWindow/windowState", m_parent->saveState ());
+      m_parent->addDockWidget (Qt::TopDockWidgetArea, this);
+      // recover old window states, hide and re-show new added widget
+      m_parent->restoreState (settings->value ("MainWindow/windowState").toByteArray ());
+      focus ();
+      QApplication::setActiveWindow (this);
     }
   else  // only reparent, no docking
     setParent (m_parent);
 
   // adjust the (un)dock icon
   m_dock_action->setIcon (QIcon (":/actions/icons/widget-undock"
                                 + m_icon_color + ".png"));
   m_dock_action->setToolTip (tr ("Undock widget"));
