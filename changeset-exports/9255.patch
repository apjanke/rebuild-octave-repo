# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1243256410 -7200
#      Mon May 25 15:00:10 2009 +0200
# Node ID 1c2d2c9f4a8d5617d92380e20948e1b35bf288cd
# Parent  fbb43bc17a4de6959c7ac2885769ec783217e24c
don't allow quit() in embedded mode by default, make configurable

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2009-05-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* toplev.h (quit_allowed): New global variable.
+	* toplev.cc (quit_allowed): Declare it.
+	(Fquit): Raise error if quitting is not allowed.
+	* octave.cc (octave_main): if running as embedded, disable quit by
+	default.
+
 2009-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* variables.cc (do_who): Only output symbols with a defined value.
 
 2009-05-22  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* toplev.h (main_loop): Tag with OCTINTERP_API.
 	* input.h (octave_read, get_input_from_file, get_input_from_stdin):
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -642,16 +642,18 @@ octave_main (int argc, char **argv, int 
   initialize_default_warning_state ();
 
   install_defaults ();
 
   initialize_pathsearch ();
 
   if (! embedded)
     install_signal_handlers ();
+  else
+    quit_allowed = false;
 
   initialize_file_io ();
 
   install_types ();
 
   install_ops ();
 
   install_builtins ();
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -76,16 +76,19 @@ along with Octave; see the file COPYING.
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include <version.h>
 
 void (*octave_exit) (int) = ::exit;
 
+// TRUE means the quit() call is allowed.
+bool quit_allowed = true;
+
 // TRUE means we are exiting via the builtin exit or quit functions.
 static bool quitting_gracefully = false;
 
 // TRUE means we are ready to interpret commands, but not everything
 // is ready for interactive use.
 bool octave_interpreter_ready = false;
 
 // TRUE means we've processed all the init code and we are good to go.
@@ -649,17 +652,19 @@ DEFUN (quit, args, nargout,
 @deftypefnx {Built-in Function} {} quit (@var{status})\n\
 Exit the current Octave session.  If the optional integer value\n\
 @var{status} is supplied, pass that value to the operating system as the\n\
 Octave's exit status.  The default value is zero.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
-  if (nargout == 0)
+  if (! quit_allowed)
+    error ("quit: not supported in embedded mode.");
+  else if (nargout == 0)
     {
       int exit_status = 0;
 
       quitting_gracefully = true;
 
       if (args.length () > 0)
 	{
 	  int tmp = args(0).nint_value ();
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -41,16 +41,18 @@ class charMatrix;
 
 #include "input.h"
 #include "oct-map.h"
 
 
 typedef void (*octave_exit_func) (int);
 extern OCTINTERP_API octave_exit_func octave_exit;
 
+extern OCTINTERP_API bool quit_allowed;
+
 // quit is a lot like an interrupt, so we subclass it to simplify possible
 // handling.
 class octave_quit_exception 
 : public octave_interrupt_exception
 {
 public:
   int status;
   octave_quit_exception (int s) : status (s) { }
