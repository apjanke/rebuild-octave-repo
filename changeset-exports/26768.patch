# HG changeset patch
# User Rik <rik@octave.org>
# Date 1550793343 28800
#      Thu Feb 21 15:55:43 2019 -0800
# Node ID 3cbc3c741f8120b6e7a03db1d8f661a987c15aa0
# Parent  ebf5ef76f56e2bd5f3e78706e18a4dc6d1ca8d3c
methods.m: Return a column vector for Matlab compatibility.

* methods.m: Make method list a column vector using '(:)' when necessary (only
method lists from Java).

diff --git a/scripts/miscellaneous/methods.m b/scripts/miscellaneous/methods.m
--- a/scripts/miscellaneous/methods.m
+++ b/scripts/miscellaneous/methods.m
@@ -51,28 +51,30 @@ function mtds = methods (obj, opt)
     mtds_list = __methods__ (obj);
   elseif (ischar (obj))
     ## Could be a classname for an Octave class or Java class.
     ## Try Octave class first.
     mtds_list = __methods__ (obj);
     if (isempty (mtds_list))
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
       mtds_list = ostrsplit (mtds_str, ';');
+      mtds_list = mtds_list(:);  # return a column vector for compatibility
       havesigs = true;
     endif
   elseif (isjava (obj))
     ## FIXME: Function prototype accepts java obj, but doesn't work if obj
     ##        is e.g., java.lang.String.  Convert obj to classname then.
     try
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
     catch
       obj = class (obj);
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
     end_try_catch
     mtds_list = strsplit (mtds_str, ';');
+    mtds_list = mtds_list(:);  # return a column vector for compatibility
     havesigs = true;
   else
     error ("methods: invalid input argument");
   endif
 
   if (havesigs && ! showsigs)
     mtds_list = regexprep (mtds_list, '^(?:[^(]+) (\w+) ?\(.*$', '$1');
     mtds_list = unique (mtds_list);
