# HG changeset patch
# User jwe
# Date 824525616 0
#      Sat Feb 17 02:53:36 1996 +0000
# Node ID 4b8e9571bbdf5e4a86e6dfcf7dc301183201b5ab
# Parent  01e3ed56c415a29678392d1c344212019f171059
[project @ 1996-02-17 02:52:04 by jwe]

diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -86,22 +86,16 @@ extern "C" void _rl_output_character_fun
 #include "sysdep.h"
 #include "toplev.h"
 #include "utils.h"
 
 #ifndef STDIN_FILENO
 #define STDIN_FILENO 1
 #endif
 
-// Octave's idea of infinity.
-double octave_Inf;
-
-// Octave's idea of not a number.
-double octave_NaN;
-
 // Nonzero if the machine we are running on is big-endian.
 int octave_words_big_endian;
 
 #ifdef NeXT
 extern "C"
 {
   typedef void (*_cplus_fcn_int) (int);
   extern void (*malloc_error (_cplus_fcn_int)) (int);
@@ -121,61 +115,16 @@ malloc_handler (int code)
 static void
 NeXT_init (void)
 {
   malloc_error (malloc_handler);
 }
 #endif
 
 static void
-octave_ieee_init (void)
-{
-#if defined (HAVE_ISINF) || defined (HAVE_FINITE)
-
-// Some version of gcc on some old version of Linux used to crash when
-// trying to make Inf and NaN.
-
-#if defined (HAVE_INFINITY)
-  octave_Inf = (double) infinity ();
-#elif defined (linux)
-  octave_Inf = HUGE_VAL;
-#elif defined (__alpha__)
-  extern unsigned int DINFINITY[2];
-  octave_Inf =  (*((double *) (DINFINITY)));
-#else
-  double tmp = 1e+10;
-  octave_Inf = tmp;
-  for (;;)
-    {
-      octave_Inf *= 1e+10;
-      if (octave_Inf == tmp)
-	break;
-      tmp = octave_Inf;
-    }
-#endif
-
-#endif
-
-#if defined (HAVE_ISNAN)
-
-#if defined (HAVE_QUIET_NAN)
-  octave_NaN = (double) quiet_nan ();
-#elif defined (linux)
-  octave_NaN = NAN;
-#elif defined (__alpha__)
-  extern unsigned int DQNAN[2];
-  octave_NaN = (*((double *) (DQNAN)));
-#else
-  octave_NaN = octave_Inf / octave_Inf;
-#endif
-
-#endif
-}
-
-static void
 ten_little_endians (void)
 {
   // Are we little or big endian?  From Harbison & Steele.
 
   union
   {
     long l;
     char c[sizeof (long)];
diff --git a/src/sysdep.h b/src/sysdep.h
--- a/src/sysdep.h
+++ b/src/sysdep.h
@@ -21,34 +21,30 @@ Software Foundation, 59 Temple Place - S
 
 */
 
 #if !defined (octave_sysdep_h)
 #define octave_sysdep_h 1
 
 #include <string>
 
+#include "lo-ieee.h"
+
 extern void sysdep_init (void);
 
 extern void raw_mode (int);
 extern int kbhit (void);
 
 extern string octave_getcwd (void);
 extern int octave_chdir (const string&);
 
 #if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 extern int gethostname (char *, int);
 #endif
 
-// Octave's idea of infinity.
-extern double octave_Inf;
-
-// Octave's idea of not a number.
-extern double octave_NaN;
-
 // Nonzero if the machine we are running on is big-endian.
 extern int octave_words_big_endian;
 
 extern string oct_tilde_expand (const string&);
 
 #endif
 
 /*
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -24,16 +24,18 @@ Software Foundation, 59 Temple Place - S
 #if !defined (octave_utils_h)
 #define octave_utils_h 1
 
 class istream;
 class ostrstream;
 
 #include <string>
 
+#include "lo-utils.h"
+
 class Octave_object;
 class string_vector;
 
 extern char *strsave (const char *);
 
 extern string search_path_for_file (const string&, const string&);
 extern string file_in_path (const string&, const string&);
 extern string fcn_file_in_path (const string&);
@@ -48,21 +50,16 @@ extern int
 keyword_almost_match (const char **std, int *min_len,
 		      const string& s, int min_toks_to_match,
 		      int max_toks);
 
 extern string_vector get_fcn_file_names (const string&, int = 0);
 
 extern string_vector get_fcn_file_names (int = 0);
 
-extern int NINT (double x);
-extern double D_NINT (double x);
-
-extern string_vector make_argv (const Octave_object&, const string&);
-
 extern int empty_arg (const char *name, int nr, int nc);
 
 extern string undo_string_escapes (const string& s);
 
 extern void oct_putenv (const char *, const char *);
 
 #endif
 
