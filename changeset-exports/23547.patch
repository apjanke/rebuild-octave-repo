# HG changeset patch
# User Rik <rik@octave.org>
# Date 1496763796 25200
#      Tue Jun 06 08:43:16 2017 -0700
# Branch stable
# Node ID 8133a5041662a084aebea76bf5f32ec6c18bcaaf
# Parent  7eba3cd5b6e0c0d658de875cf33a6c34eb7b130c
publish.m: Fix corruption of results for some code inputs (bug #51178).

* publish.m (eval_code_helper): Save context (existing variables) using
Octave's binary format rather than default -text format because it preserves
accuracy of range variables.

diff --git a/scripts/general/publish.m b/scripts/general/publish.m
--- a/scripts/general/publish.m
+++ b/scripts/general/publish.m
@@ -998,36 +998,34 @@ function doc_struct = eval_code (doc_str
     body_offset = body_offset + length (elems);
   endfor
 endfunction
 
 
 
 function ___cstr___ = eval_code_helper (___context___, ___code___);
   ## EVAL_CODE_HELPER evaluates a given string with Octave code in an extra
-  ##   temporary context and returns a cellstring with the eval output
+  ## temporary context and returns a cellstring with the eval output.
 
-  ## TODO: potential conflicting variables sourrounded by "___".  Maybe there
-  ##       is a better solution.
+  ## FIXME: code may contain potential conflicting variables named ___code___,
+  ## ___context___, or ___cstr___.  Is there a better solution?
   if (isempty (___code___))
     return;
   endif
 
   if (exist (___context___, "file") == 2)
     load (___context___);
   endif
 
   ___cstr___ = strsplit (evalc (___code___), "\n");
 
-  clear ___code___
-  save (___context___);
+  clear ___code___;
+  save ("-binary", ___context___);
 endfunction
 
 
-
 ## Bad function calls
-
 %!error publish ()
 %!error publish (1)
 %!error publish ("non_existing_file.m")
 %!error<Only Octave script files can be published> publish ("publish.m")
 %!error publish ("test_script.m", "format", "html", "showCode")
 %!error [str1, str2] = publish ("test_script.m")
