# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365055796 14400
#      Thu Apr 04 02:09:56 2013 -0400
# Node ID 203976ae18d1d3cc615bda5a0b405ba65fc584d0
# Parent  8ff9006cedc33ac93214244c62536f2c094638a6
use signals for octave_link::enter_debugger_event and octave_link::exit_debugger_event

* main-window.h, main-window.cc
(main_window::handle_insert_debugger_pointer_request,
main_window::handle_delete_debugger_pointer_request): Delete.
(main_window::construct): Delete signal connections from
_octave_qt_event_listener::insert_debugger_pointer_signal to
main_window::handle_insert_debugger_pointer_request and from
_octave_qt_event_listener::delete_debugger_pointer_signal to
main_window::handle_delete_debugger_pointer_request.
Connect _octave_qt_link::insert_debugger_pointer_signal signal to
_file_editor::handle_insert_debugger_pointer_request.
Connect _octave_qt_link::delete_debugger_pointer_signal signal to
_file_editor::handle_delete_debugger_pointer_request.
* octave-qt-event-listener.h, octave-qt-event-listener.cc
octave_qt_event_listener::insert_debugger_pointer,
octave_qt_event_listener::delete_debugger_pointer): Delete.
(octave_qt_event_listener::insert_debugger_pointer_signal
octave_qt_event_listener::delete_debugger_pointer_signal):
Delete signals.
* octave-qt-link.h, octave-qt-link.cc
(octave_qt_link::do_insert_debugger_pointer,
octave_qt_link::do_delete_debugger_pointer): Now private.
Emit signals instead of using event_listener.
* octave-event-listener.h
(octave_event_listener::insert_debugger_pointer,
octave_event_listener::delete_debugger_pointer): Delete.
* octave-link.h (octave_link::do_insert_debugger_pointer,
octave_link::do_delete_debugger_pointer): Delete.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -490,32 +490,16 @@ main_window::handle_quit_debug_mode ()
   _debug_step_out->setEnabled (false);
   _debug_quit->setEnabled (false);
 #ifdef HAVE_QSCINTILLA
   _file_editor->handle_quit_debug_mode ();
 #endif
 }
 
 void
-main_window::handle_insert_debugger_pointer_request (const QString& file, int line)
-{
-#ifdef HAVE_QSCINTILLA
-  _file_editor->handle_insert_debugger_pointer_request (file, line);
-#endif
-}
-
-void
-main_window::handle_delete_debugger_pointer_request (const QString& file, int line)
-{
-#ifdef HAVE_QSCINTILLA
-  _file_editor->handle_delete_debugger_pointer_request (file, line);
-#endif
-}
-
-void
 main_window::debug_continue ()
 {
   octave_link::post_event (this, &main_window::debug_continue_callback);
 }
 
 void
 main_window::debug_step_into ()
 {
@@ -1170,38 +1154,40 @@ main_window::construct ()
            this,
            SLOT(handle_entered_debug_mode ()));
 
   connect (_octave_qt_event_listener,
            SIGNAL (quit_debug_mode_signal ()),
            this,
            SLOT (handle_quit_debug_mode ()));
 
-  connect (_octave_qt_event_listener,
-           SIGNAL (insert_debugger_pointer_signal (const QString&, int)), this,
-           SLOT (handle_insert_debugger_pointer_request (const QString&, int)));
-
-  connect (_octave_qt_event_listener,
-           SIGNAL (delete_debugger_pointer_signal (const QString&, int)), this,
-           SLOT (handle_delete_debugger_pointer_request (const QString&, int)));
-
   // FIXME -- is it possible to eliminate the event_listenter?
 
   _octave_qt_link = new octave_qt_link ();
 
   connect (_octave_qt_link,
            SIGNAL (update_dbstop_marker_signal (bool, const QString&, int)),
            _file_editor,
            SLOT (handle_update_dbstop_marker_request (bool, const QString&, int)));
 
   connect (_octave_qt_link,
            SIGNAL (edit_file_signal (const QString&)),
            _file_editor,
            SLOT (handle_edit_file_request (const QString&)));
 
+  connect (_octave_qt_link,
+           SIGNAL (insert_debugger_pointer_signal (const QString&, int)),
+           _file_editor,
+           SLOT (handle_insert_debugger_pointer_request (const QString&, int)));
+
+  connect (_octave_qt_link,
+           SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
+           _file_editor,
+           SLOT (handle_delete_debugger_pointer_request (const QString&, int)));
+
   octave_link::connect_link (_octave_qt_link);
 
   octave_link::register_event_listener (_octave_qt_event_listener);
 }
 
 void
 main_window::save_workspace_callback (const std::string& file)
 {
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -103,18 +103,16 @@ public slots:
   void handle_command_history_visible (bool);
   void handle_current_directory_visible (bool);
   void handle_workspace_visible (bool);
   void handle_editor_visible (bool);
   void handle_documentation_visible (bool);
 
   void handle_entered_debug_mode ();
   void handle_quit_debug_mode ();
-  void handle_insert_debugger_pointer_request (const QString& file, int line);
-  void handle_delete_debugger_pointer_request (const QString& file, int line);
   void debug_continue ();
   void debug_step_into ();
   void debug_step_over ();
   void debug_step_out ();
   void debug_quit ();
 
   void read_settings ();
   void write_settings ();
diff --git a/libgui/src/octave-qt-event-listener.cc b/libgui/src/octave-qt-event-listener.cc
--- a/libgui/src/octave-qt-event-listener.cc
+++ b/libgui/src/octave-qt-event-listener.cc
@@ -49,30 +49,16 @@ octave_qt_event_listener::update_workspa
 
 void
 octave_qt_event_listener::update_history (void)
 {
   emit update_history_signal ();
 }
 
 void
-octave_qt_event_listener::insert_debugger_pointer (const std::string& file,
-                                                   int line)
-{
-  emit insert_debugger_pointer_signal (QString::fromStdString (file), line);
-}
-
-void
-octave_qt_event_listener::delete_debugger_pointer (const std::string& file,
-                                                   int line)
-{
-  emit delete_debugger_pointer_signal (QString::fromStdString (file), line);
-}
-
-void
 octave_qt_event_listener::about_to_exit ()
 {
   qApp->quit ();
 }
 
 void
 octave_qt_event_listener::entered_debug_mode ()
 { emit entered_debug_mode_signal (); }
diff --git a/libgui/src/octave-qt-event-listener.h b/libgui/src/octave-qt-event-listener.h
--- a/libgui/src/octave-qt-event-listener.h
+++ b/libgui/src/octave-qt-event-listener.h
@@ -32,26 +32,22 @@ class octave_qt_event_listener
 {
   Q_OBJECT
   public:
   octave_qt_event_listener (QObject *parent = 0);
 
   void current_directory_has_changed (const std::string& directory);
   void update_workspace (void);
   void update_history (void);
-  void insert_debugger_pointer (const std::string& file, int line);
-  void delete_debugger_pointer (const std::string& file, int line);
   void about_to_exit ();
 
   void entered_debug_mode ();
   void quit_debug_mode ();
 
 signals:
   void current_directory_has_changed_signal (const QString& directory);
   void update_workspace_signal (void);
   void update_history_signal (void);
-  void insert_debugger_pointer_signal (const QString& file, int line);
-  void delete_debugger_pointer_signal (const QString& file, int line);
   void entered_debug_mode_signal ();
   void quit_debug_mode_signal ();
 };
 
 #endif // OCTAVEQTEVENTLISTENER_H
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -53,38 +53,16 @@ octave_qt_link::do_update_history (void)
     {
       event_listener->update_history ();
 
       do_process_events ();
     }
 }
 
 void
-octave_qt_link::do_insert_debugger_pointer (const std::string& file, int line)
-{
-  if (event_listener)
-    {
-      event_listener->insert_debugger_pointer (file, line);
-
-      do_process_events ();
-    }
-}
-
-void
-octave_qt_link::do_delete_debugger_pointer (const std::string& file, int line)
-{
-  if (event_listener)
-    {
-      event_listener->delete_debugger_pointer (file, line);
-
-      do_process_events ();
-    }
-}
-
-void
 octave_qt_link::do_pre_input_event (void)
 {
   do_update_workspace ();
 }
 
 void
 octave_qt_link::do_post_input_event (void)
 {
@@ -112,8 +90,20 @@ octave_qt_link::do_update_breakpoint (bo
 
 bool
 octave_qt_link::do_edit_file (const std::string& file)
 {
   emit edit_file_signal (QString::fromStdString (file));
 
   return true;
 }
+
+void
+octave_qt_link::do_insert_debugger_pointer (const std::string& file, int line)
+{
+  emit insert_debugger_pointer_signal (QString::fromStdString (file), line);
+}
+
+void
+octave_qt_link::do_delete_debugger_pointer (const std::string& file, int line)
+{
+  emit delete_debugger_pointer_signal (QString::fromStdString (file), line);
+}
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -50,19 +50,16 @@ public:
   octave_qt_link (void);
 
   ~octave_qt_link (void) { }
 
   void do_update_workspace (void);
 
   void do_update_history (void);
 
-  void do_insert_debugger_pointer (const std::string& file, int line);
-  void do_delete_debugger_pointer (const std::string& file, int line);
-
   void do_pre_input_event (void);
   void do_post_input_event (void);
 
   void do_enter_debugger_event (const std::string& file, int line);
   void do_exit_debugger_event (const std::string& file, int line);
 
   void do_update_breakpoint (bool insert, const std::string& file, int line);
 
@@ -71,19 +68,27 @@ public:
 private:
 
   // No copying!
 
   octave_qt_link (const octave_qt_link&);
 
   octave_qt_link& operator = (const octave_qt_link&);
 
+  void do_insert_debugger_pointer (const std::string& file, int line);
+
+  void do_delete_debugger_pointer (const std::string& file, int line);
+
   // Thread running octave_main.
   octave_main_thread *main_thread;
 
 signals:
 
   void update_dbstop_marker_signal (bool insert, const QString& file, int line);
 
   void edit_file_signal (const QString& file);
+
+  void insert_debugger_pointer_signal (const QString&, int);
+
+  void delete_debugger_pointer_signal (const QString&, int);
 };
 
 #endif
diff --git a/libinterp/interp-core/octave-event-listener.h b/libinterp/interp-core/octave-event-listener.h
--- a/libinterp/interp-core/octave-event-listener.h
+++ b/libinterp/interp-core/octave-event-listener.h
@@ -35,21 +35,15 @@ class octave_event_listener
     current_directory_has_changed (const std::string& directory) = 0;
 
     virtual void
     update_workspace (void) = 0;
 
     virtual void
     update_history (void) = 0;
 
-    virtual void
-    insert_debugger_pointer (const std::string& file, int line) = 0;
-
-    virtual void
-    delete_debugger_pointer (const std::string& file, int line) = 0;
-
     virtual void about_to_exit () = 0;
 
     virtual void entered_debug_mode () = 0;
     virtual void quit_debug_mode () = 0;
 };
 
 #endif // OCTAVEEVENTLISTENER_H
diff --git a/libinterp/interpfcn/octave-link.h b/libinterp/interpfcn/octave-link.h
--- a/libinterp/interpfcn/octave-link.h
+++ b/libinterp/interpfcn/octave-link.h
@@ -222,22 +222,16 @@ protected:
   void do_finished_readline_hook (void) { }
 
   std::string do_last_working_directory (void);
 
   virtual void do_update_workspace (void) = 0;
 
   virtual void do_update_history (void) = 0;
 
-  virtual void
-  do_insert_debugger_pointer (const std::string& file, int line) = 0;
-
-  virtual void
-  do_delete_debugger_pointer (const std::string& file, int line) = 0;
-
   virtual void do_pre_input_event (void) = 0;
   virtual void do_post_input_event (void) = 0;
 
   virtual void do_enter_debugger_event (const std::string& file, int line) = 0;
   virtual void do_exit_debugger_event (const std::string& file, int line) = 0;
 
   virtual void do_update_breakpoint (bool insert,
                                      const std::string& file, int line) = 0;
