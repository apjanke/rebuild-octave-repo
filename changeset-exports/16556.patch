# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1366746036 -7200
#      Tue Apr 23 21:40:36 2013 +0200
# Node ID ce65326ecd6c0dc435ef0218686ab28cef625bdb
# Parent  04fb96f4bea1900a9388e585b69a36afc920ce29
added default colors and fonts to the octave lexer

* lexer-octave-gui.cc: some code formatting
  (defaultColor): new function returning the default colors
  (defaultFont): new function returning the default fonts

* lexer-octave-gui.h: new functions defaultColor and defaultFont

diff --git a/libgui/src/m-editor/lexer-octave-gui.cc b/libgui/src/m-editor/lexer-octave-gui.cc
--- a/libgui/src/m-editor/lexer-octave-gui.cc
+++ b/libgui/src/m-editor/lexer-octave-gui.cc
@@ -62,27 +62,30 @@ lexer_octave_gui::~lexer_octave_gui()
 
 // -----------------------------------------------------------------------------
 // Redefined functions to make an octave lexer from the abtract class Qscilexer.
 //   Scintilla has an octave/matlab-lexer but the interface in Qscintilla is
 //   only available in version 2.5.1. Redefining the following purely virtual
 //   functions of the class QsciLexer () and the enum of available styles (see
 //   lexer-octave-gui.h provides the functionality of the octave lexer.
 // -----------------------------------------------------------------------------
-const char *lexer_octave_gui::language() const
+const char *
+lexer_octave_gui::language() const
 {
   return "Octave";  // return the name of the language
 }
 
-const char *lexer_octave_gui::lexer() const
+const char *
+lexer_octave_gui::lexer() const
 {
   return "octave";  // return the name of the lexer
 }
 
-QString lexer_octave_gui::description(int style) const
+QString
+lexer_octave_gui::description(int style) const
 {
     switch (style)
     {
     case Default:
         return tr("Default");
     case Comment:
         return tr("Comment");
     case Command:
@@ -98,20 +101,76 @@ QString lexer_octave_gui::description(in
     case Identifier:
         return tr("Identifier");
     case DoubleQuotedString:
         return tr("Double-quoted string");
     }
     return QString();  // no valid style, return empty string
 }
 
+
+// -----------------------------------------------------
+// The set of default colors
+// -----------------------------------------------------
+QColor
+lexer_octave_gui::defaultColor (int style) const
+{
+  switch (style)
+    {
+      case Default:
+      case Operator:
+        return QColor (0x00,0x00,0x00);
+
+      case Comment:
+        return QColor (0x00,0x7f,0x00);
+
+      case Command:
+        return QColor (0x7f,0x7f,0x00);
+
+      case Number:
+        return QColor (0x00,0x7f,0x7f);
+
+      case Keyword:
+        return QColor (0x00,0x00,0x7f);
+
+      case SingleQuotedString:
+      case DoubleQuotedString:
+        return QColor (0x7f,0x00,0x7f);
+    }
+
+    return QsciLexer::defaultColor (style);
+}
+
+// -----------------------------------------------------
+// The defaulot fonts
+// -----------------------------------------------------
+QFont
+lexer_octave_gui::defaultFont (int style) const
+{
+  QFont font;
+
+  switch (style)
+    {
+      case Keyword:
+        font = QsciLexer::defaultFont (style);
+        font.setBold(true);
+        break;
+
+      default:
+        font = QsciLexer::defaultFont (style);
+    }
+
+  return font;
+}
+
 // -----------------------------------------------------
 // The set of keywords for highlighting
 // -----------------------------------------------------
-const char *lexer_octave_gui::keywords(int set) const
+const char *
+lexer_octave_gui::keywords(int set) const
 {
   if (set == 1)
       return resource_manager::octave_keywords ();
 
   return 0;
 }
 
 #endif
diff --git a/libgui/src/m-editor/lexer-octave-gui.h b/libgui/src/m-editor/lexer-octave-gui.h
--- a/libgui/src/m-editor/lexer-octave-gui.h
+++ b/libgui/src/m-editor/lexer-octave-gui.h
@@ -48,17 +48,19 @@ public:
     };
 
 
   lexer_octave_gui (QObject *parent = 0);
   ~lexer_octave_gui ();
   virtual const char *keywords (int set) const;
   virtual const char *lexer () const;
   virtual const char *language () const;
-  QString description(int style) const;
+  QString description (int style) const;
+  QColor defaultColor (int style) const;
+  QFont defaultFont (int style) const;
 
 private:
   lexer_octave_gui (const lexer_octave_gui &);
   lexer_octave_gui &operator= (const lexer_octave_gui &);
   QsciAPIs *lexer_api;
 };
 
 #endif
