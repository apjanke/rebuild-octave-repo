# HG changeset patch
# User jwe
# Date 831983671 0
#      Mon May 13 10:34:31 1996 +0000
# Node ID a940dcdfe9deb38614afe0588b25c7a2b4cd5689
# Parent  abb947300970164cde0db6c10aba930f57229035
[project @ 1996-05-13 10:31:51 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.199 $)
+AC_REVISION($Revision: 1.200 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -988,17 +988,17 @@ if test -z "$DEFAULT_PAGER"; then
   AC_MSG_WARN([I couldn't find `less', `more', `page', or `pg'])
 fi
 
 ### Even though we include config.h, we need to have the preprocessor
 ### defines available in a variable for the octave-bug script.  Use
 ### UGLY_DEFS for that.
 
 AC_OUTPUT_MAKE_DEFS
-UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\",g'`
+UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\",g'`
 AC_MSG_RESULT([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)
 
 ### Maybe add -Wall to compiler flags now that we're done feature
 ### testing. 
 ###
 ### To get gcc and g++ to be really picky, try these adding these
 ### options to CFLAGS and CXXFLAGS along with -Wall:
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -49,17 +49,19 @@ Software Foundation, 59 Temple Place - S
 #include "defaults.h"
 #include "defun.h"
 #include "dynamic-ld.h"
 #include "error.h"
 #include "file-io.h"
 #include "help.h"
 #include "input.h"
 #include "lex.h"
+#include "oct-conf.h"
 #include "oct-hist.h"
+#include "oct-map.h"
 #include "pager.h"
 #include "parse.h"
 #include "pathsearch.h"
 #include "procstream.h"
 #include "pt-const.h"
 #include "pt-misc.h"
 #include "pt-plot.h"
 #include "sighandlers.h"
@@ -742,17 +744,17 @@ do_octave_atexit (void)
   while (! octave_atexit_functions.empty ())
     {
       octave_value_list fcn = octave_atexit_functions.pop ();
 
       feval (fcn, 0);
     }
 }
 
-DEFUN(atexit, args, ,
+DEFUN (atexit, args, ,
   "atexit (NAME): register NAME as a function to call when Octave exits\n\
 \n\
 Functions are called with no arguments in the reverse of the order in
 which they were registered with atexit()")
 {
   octave_value_list retval;
 
 #if defined (HAVE_ATEXIT) || defined (HAVE_ON_EXIT)
@@ -771,16 +773,68 @@ which they were registered with atexit()
     print_usage ("atexit");
 #else
   gripe_not_supported ("atexit");
 #endif
 
   return retval;
 }
 
+DEFUN (octave_config_info, , ,
+  "return a structure containing configuration information")
+{
+  Octave_map m;
+
+  m ["default_pager"] = DEFAULT_PAGER;
+  m ["prefix"] = OCTAVE_PREFIX;
+  m ["exec_prefix"] = OCTAVE_EXEC_PREFIX;
+  m ["datadir"] = OCTAVE_DATADIR;
+  m ["libdir"] = OCTAVE_LIBDIR;
+  m ["bindir"] = OCTAVE_BINDIR;
+  m ["infodir"] = OCTAVE_INFODIR;
+  m ["fcnfiledir"] = OCTAVE_FCNFILEDIR;
+  m ["localfcnfiledir"] = OCTAVE_LOCALFCNFILEDIR;
+  m ["localstartupfiledir"] = OCTAVE_LOCALSTARTUPFILEDIR;
+  m ["startupfiledir"] = OCTAVE_STARTUPFILEDIR;
+  m ["localfcnfilepath"] = OCTAVE_LOCALFCNFILEPATH;
+  m ["archlibdir"] = OCTAVE_ARCHLIBDIR;
+  m ["octfiledir"] = OCTAVE_OCTFILEDIR;
+  m ["localoctfilepath"] = OCTAVE_LOCALOCTFILEPATH;
+  m ["fcnfilepath"] = OCTAVE_FCNFILEPATH;
+  m ["imagepath"] = OCTAVE_IMAGEPATH;
+  m ["target_host_type"] = TARGET_HOST_TYPE;
+  m ["configure_options"] = config_opts;
+  m ["F77"] = F77;
+  m ["FFLAGS"] = FFLAGS;
+  m ["FPICFLAG"] = FPICFLAG;
+  m ["F2C"] = F2C;
+  m ["F2CFLAGS"] = F2CFLAGS;
+  m ["FLIBS"] = FLIBS;
+  m ["CPPFLAGS"] = CPPFLAGS;
+  m ["INCFLAGS"] = INCFLAGS;
+  m ["CC"] = CC " " CC_VERSION;
+  m ["CFLAGS"] = CFLAGS;
+  m ["CPICFLAG"] = CPICFLAG;
+  m ["CXX"] = CXX " " CXX_VERSION;
+  m ["CXXFLAGS"] = CXXFLAGS;
+  m ["CXXPICFLAG"] = CXXPICFLAG;
+  m ["LDFLAGS"] = LDFLAGS;
+  m ["LIBFLAGS"] = LIBFLAGS;
+  m ["RLD_FLAG"] = RLD_FLAG;
+  m ["CXXLIBS"] = CXXLIBS;
+  m ["TERMLIBS"] = TERMLIBS;
+  m ["LIBS"] = LIBS;
+  m ["LEXLIB"] = LEXLIB;
+  m ["LIBPLPLOT"] = LIBPLPLOT;
+  m ["LIBDLFCN"] = LIBDLFCN;
+  m ["DEFS"] = DEFS;
+
+  return octave_value (m);
+}
+
 #if defined (__GNUG__) && defined (DEBUG_NEW_DELETE)
 int debug_new_delete = 0;
 
 typedef void (*vfp)(void);
 extern vfp __new_handler;
 
 void *
 __builtin_new (size_t sz)
