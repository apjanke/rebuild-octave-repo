# HG changeset patch
# User Sebastien Loisel
# Date 1204710289 18000
#      Wed Mar 05 04:44:49 2008 -0500
# Node ID 690c91f741b8668661ffd66c1dcf9d24db80d7d0
# Parent  2ba84879f961fbc023aab0c72c593c70968fe2b2
Apply a scaling factor to leading zero removal in roots.m

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2008-03-05  Ben Abbott  <bpabbott@mac.com>
+
+	* polynomial/roots.m: Catch Infs and/or NaNs.
+
+2008-03-05  Sebastien Loisel  <loisel@temple.edu>
+
+	* polynomial/roots.m: Apply a scaling factor to the removal of the
+	leading zeros.
+
 2008-03-04  John W. Eaton  <jwe@octave.org>
 
 	* plot/print.m: Fix oops in applying last change.
 
 2008-03-04  Bill Denney  <bill@denney.ws>
 
 	* plot/allchild.m, plot/findall.m: New functions.
 	* plot/Makefile.in (SOURCES): Add them to the list.
@@ -10,17 +19,17 @@ 2008-03-04  Bill Denney  <bill@denney.ws
 	* geometry/rectint.m: New function.
 	* geometry/Makefile.in (SOURCES): Add it to the list.
 
 2008-03-04  Michael Goffioul <michael.goffioul@gmail.com>
 
 	* pkg/pkg.m (pkg:configure_make): Make it work with recent changes in
 	isspace handling with cell arrays of strings.
 
-2008-03-04  Ben Abbott <bpabbott@mac.com>
+2008-03-04  Ben Abbott  <bpabbott@mac.com>
 
 	* polynomial/polyfit.m: Modified tests to respect a relative tolerance.
 
 	* plot/print.m: Accept a figure handle as an optional input.
  
 2008-02-29  John W. Eaton  <jwe@octave.org>
 
 	* plot/print.m: Handle gif and jpg devices.
diff --git a/scripts/polynomial/roots.m b/scripts/polynomial/roots.m
--- a/scripts/polynomial/roots.m
+++ b/scripts/polynomial/roots.m
@@ -78,26 +78,32 @@
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 24 December 1993
 ## Adapted-By: jwe
 
 function r = roots (v)
 
   if (nargin != 1 || min (size (v)) > 1)
     print_usage ();
+  elseif (any (isnan(v) | isinf(v)))
+    error ("roots: inputs must not contain Inf or NaN")
   endif
 
-  n = length (v);
-  v = reshape (v, 1, n);
+  n = numel (v);
+  v = v(:);
 
   ## If v = [ 0 ... 0 v(k+1) ... v(k+l) 0 ... 0 ], we can remove the
   ## leading k zeros and n - k - l roots of the polynomial are zero.
 
-  f = find (v);
-  m = max (size (f));
+  if (isempty (v))
+    f = v;
+  else
+    f = find (v ./ max (abs (v)));
+  endif
+  m = numel (f);
 
   if (m > 0 && n > 1)
     v = v(f(1):f(m));
     l = max (size (v));
     if (l > 1)
       A = diag (ones (1, l-2), -1);
       A(1,:) = -v(2:l) ./ v(1);
       r = eig (A);
@@ -109,14 +115,29 @@ function r = roots (v)
       r = zeros (n - f(m), 1);
     endif
   else
     r = [];
   endif
 
 endfunction
 
+%!test
+%! p = [poly([3 3 3 3]), 0 0 0 0];
+%! r = sort (roots (p));
+%! assert (r, [0; 0; 0; 0; 3; 3; 3; 3], 0.001)
+
 %!assert(all (all (abs (roots ([1, -6, 11, -6]) - [3; 2; 1]) < sqrt (eps))));
 
 %!assert(isempty (roots ([])));
 
 %!error roots ([1, 2; 3, 4]);
+ 
+%!assert(isempty (roots (1)));
 
+ %!error roots ([1, 2; 3, 4]);
+ 
+%!error roots ([1 Inf 1]);
+
+%!error roots ([1 NaN 1]);
+
+%!assert(roots ([1e-200, -1e200, 1]), 1e-200)
+%!assert(roots ([1e-200, -1e200 * 1i, 1]), -1e-200 * 1i)
