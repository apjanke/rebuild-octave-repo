# HG changeset patch
# User jwe
# Date 976904356 0
#      Fri Dec 15 18:19:16 2000 +0000
# Node ID 574711ce9070250ae3dfc1dc75f4df33ed11f8dd
# Parent  41404c6f4e69046fc89a4911e1bfa9ffb388ae71
[project @ 2000-12-15 18:19:15 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2000-12-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-mappers.cc (xmin (const Complex&, const Complex& y):
+	If args are equal in magnitude, return first arg instead of
+	second.
+
 2000-12-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Range.cc (Range::nelem_internal): Call tfloor, not round, but
 	then try harder to compute correct number of elements.
 
 	* dMatrix.cc (Matrix::lssolve): Ask DGELSS for size of work vector.
 	* CMatrix.cc (ComplexMatrix::lssolve): Likewise, for ZGELSS.
 
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -310,22 +310,22 @@ xisinf (const Complex& x)
   return (xisinf (real (x)) || xisinf (imag (x)));
 }
 
 // (complex, complex) -> complex mappers.
 
 Complex
 xmin (const Complex& x, const Complex& y)
 {
-  return abs (x) < abs (y) ? x : (xisnan (x) ? x : y);
+  return abs (x) <= abs (y) ? x : (xisnan (x) ? x : y);
 }
 
 Complex
 xmax (const Complex& x, const Complex& y)
 {
-  return abs (x) > abs (y) ? x : (xisnan (x) ? x : y);
+  return abs (x) >= abs (y) ? x : (xisnan (x) ? x : y);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2000-12-15  Kai Habel  <kai.habel@gmx.de>
+
+	* saveimage.m: Do create rawbit image for black and white images,
+	but do it correctly.
+
 2000-12-13   Teemu Ikonen  <tpikonen@pcu.helsinki.fi>
 
         * polynomial/deconv.m: For compatibility with Matlab, don't reduce
 	  result polynomials.
 
 2000-12-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* image/saveimage.m: Don't try to create rawbit image.
diff --git a/scripts/image/saveimage.m b/scripts/image/saveimage.m
--- a/scripts/image/saveimage.m
+++ b/scripts/image/saveimage.m
@@ -128,16 +128,20 @@ function saveimage (filename, img, img_f
   idx = find (map > 1);
   map (idx) = ones (size (idx));
 
   idx = find (map < 0);
   map (idx) = zeros (size (idx));
 
   map = round (255 * map);
 
+  bw = (map_nr == 2
+        && ((map(1,1) == 0 && map(2,1) == 255)
+            || (map(1,1) == 255 && map(2,1) == 0)));
+
   img = round (img');
   [img_nr, img_nc] = size (img);
 
   img_sz = img_nr * img_nc;
   img = reshape (img, img_sz, 1);
 
   idx = find (img > map_nr);
   img (idx) = ones (size (idx)) * map_nr;
@@ -151,17 +155,48 @@ function saveimage (filename, img, img_f
     ## load/save functions, but we need a good way to get username and
     ## hostname information.
 
     time_string = ctime (time ());
     time_string = time_string (1:length (time_string)-1);
     tagline = sprintf ("# Created by Octave %s, %s",
 		       __OCTAVE_VERSION__, time_string);
 
-    if (grey)
+    if (grey && bw)
+
+      if (map(1) != 0)
+        map = [0; 1];
+      else
+        map = [1; 0];
+      endif
+
+      n_long = rem (img_nc, 8);
+      tmp = zeros (ceil (img_nc/8), img_nr);
+
+      k = ceil (img_nr/8);
+      tmp = zeros (k, img_nc);
+
+      ## Append columns with zeros to original image so that
+      ## mod (cols, 8) = 0.
+
+      bwimg = postpad (reshape (map(img), img_nr, img_nc), k * 8, 0);
+
+      b = kron (pow2 (7:-1:0)', ones (1, img_nc));
+
+      for i = 1:k
+        tmp(i,:) = sum (bwimg(8*(i-1)+1:8*i,:) .* b);
+      endfor
+
+      fid = fopen (filename, "w");
+      fprintf (fid, "P4\n%s\n%d %d\n", tagline, img_nr, img_nc);
+      fwrite (fid, tmp, "char");
+      fprintf (fid, "\n");
+      fclose (fid);
+
+    elseif (grey)
 
       fid = fopen (filename, "w");
       fprintf (fid, "P5\n%s\n%d %d\n255\n", tagline, img_nr, img_nc);
       fwrite (fid, map(img), "uchar");
       fprintf (fid, "\n");
       fclose (fid);
 
     else
