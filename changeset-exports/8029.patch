# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1218552871 14400
#      Tue Aug 12 10:54:31 2008 -0400
# Node ID 090001c0461970876ca0bc4429f86dac5fc9f60a
# Parent  f0fbf47c914c61d63b45bda33339ffdf7b3c7b0b
initialization check for correct NaN sign

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-08-12  Jaroslav Hajek <highegg@gmail.com>
+
+	* lo-ieee.cc (octave_ieee_init): Try to ensure that octave_NaN is
+	classified as positive by lo_ieee_signbit.
+
 2008-08-11  Jaroslav Hajek <highegg@gmail.com>
 
 	* Array.cc (no_op_fcn): New static function.
 	(Array<T>::hermitian): If fcn is null, set to no_op_fcn.
 
 2008-08-07  John W. Eaton  <jwe@octave.org>
 
 	* sprse-base-chol.h, oct-sparse.h: Don't include config.h.
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -90,16 +90,20 @@ octave_ieee_init (void)
 	  }
 #endif
 
 #if defined (__alpha__) && defined (__osf__)
 	extern unsigned int DQNAN[2];
 	octave_NaN = (*(X_CAST(double *, DQNAN)));
 #else
 	octave_NaN = tmp_inf / tmp_inf;
+        // try to ensure that lo_ieee_sign gives false for a NaN.
+        if (lo_ieee_signbit (octave_NaN))
+          octave_NaN = -octave_NaN;
+
 #endif
 
 	octave_Inf = tmp_inf;
 
 	// This is patterned after code in R.
 
 	if (ff == oct_mach_info::flt_fmt_ieee_big_endian)
 	  {
