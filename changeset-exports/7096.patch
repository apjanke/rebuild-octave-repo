# HG changeset patch
# User jwe
# Date 1194020024 0
#      Fri Nov 02 16:13:44 2007 +0000
# Node ID 81bed50b9feba2e225dc236fee901a65bc0e0ba8
# Parent  efd16513ff8f2c7ef1ecc727e2d5b8b2cdf591d1
[project @ 2007-11-02 16:13:43 by jwe]

diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -1359,21 +1359,21 @@ with an example of its use
 @group
 b = randn(4,1) + 1i * randn(4,1);
 all(b.^2 == mypow2(b))
 @result{} 1
 @end group
 @end example
 
 
-The example above uses @code{mxGetDimensions},
-@code{mxGetNumberOfElements}, @code{mxGetNumberOfDimensions}, to work with
-the dimensional parameters of multi-dimensional arrays.  The also exists
-the functions @code{mxGetM}, and @code{mxGetN} that probe the number of
-rows and columns in a matrix.
+The example above uses the functions @code{mxGetDimensions},
+@code{mxGetNumberOfElements}, and @code{mxGetNumberOfDimensions} to work
+with the dimensions of multi-dimensional arrays.  The functions
+@code{mxGetM}, and @code{mxGetN} are also available to find the number
+of rows and columns in a matrix.
 
 @node Character Strings in Mex-Files
 @subsection Character Strings in Mex-Files
 
 As mex-files do not make the distinction between single and double
 quoted strings within Octave, there is perhaps less complexity in the
 use of strings and character matrices in mex-files.  An example of their
 use, that parallels the demo in @file{stringdemo.cc}, is given in the
@@ -1387,22 +1387,22 @@ An example of its expected output is
 @example
 @group
 mystring(["First String"; "Second String"])
 @result{} s1 = Second String
         First String
 @end group
 @end example
 
-There are a couple of additional functions available in mex-files of
-interest in the treatment of strings.  These are @code{mxCreateString},
-@code{mxArrayToString} and @code{mxCreateCharMatrixFromStrings}.  A
-string in a mex-file is considered to be a vector rather than a
-matrix.  This is perhaps an arbitrary distinction as the data in the
-mxArray for the matrix is consecutive in any case.
+Other functions in the mex interface for handling character strings are
+@code{mxCreateString}, @code{mxArrayToString}, and
+@code{mxCreateCharMatrixFromStrings}.  In a mex-file, a character string
+is considered to be a vector rather than a matrix.  This is perhaps an
+arbitrary distinction as the data in the mxArray for the matrix is
+consecutive in any case.
 
 @node Cell Arrays with Mex-Files
 @subsection Cell Arrays with Mex-Files
 
 We can perform exactly the same operations in Cell arrays in mex-files
 as we can in oct-files.  An example that reduplicates the functional of
 the @file{celldemo.cc} oct-file in a mex-file is given by
 @file{mycell.c} as below
diff --git a/doc/interpreter/emacs.txi b/doc/interpreter/emacs.txi
--- a/doc/interpreter/emacs.txi
+++ b/doc/interpreter/emacs.txi
@@ -475,25 +475,18 @@ this hook.
 from the defaults, make sure that @code{inferior-octave-prompt} matches
 them.  Otherwise, @emph{nothing} will work, because Emacs will not know
 when Octave is waiting for input, or done sending output.
 @end quotation
 
 @node Using the Emacs Info Reader for Octave
 @appendixsec Using the Emacs Info Reader for Octave
 
-You can also set up the Emacs Info reader for dealing with the results
-of Octave's @samp{help -i}.  For this, the package @file{gnuserv} needs
-to be installed, which unfortunately still does not come with GNU Emacs
-(it does with XEmacs).  It can be retrieved from any GNU Emacs Lisp Code
-Directory archive, e.g.@:
-@url{ftp://ftp.cis.ohio-state.edu/pub/gnu/emacs/elisp-archive},
-in the @file{packages} subdirectory.  A recent version of gnuserv is
-available from
-@url{http://www.meltin.net/hacks/emacs/src/gnuserv-3.12.2.tar.gz}.
+You may also use the Emacs Info reader with Octave's @code{doc} function.
+For this, the package @file{gnuserv} needs to be installed.
 
 If @file{gnuserv} is installed, add the lines
 @lisp
 (autoload 'octave-help "octave-hlp" nil t)
 (require 'gnuserv)
 (gnuserv-start)
 @end lisp
 @noindent
@@ -502,15 +495,11 @@ to your @file{.emacs} file.
 You can use either `plain' Emacs Info or the function @code{octave-help}
 as your Octave info reader (for @samp{help -i}).  In the former case,
 use @code{info_program ("info-emacs-info")}.
 The latter is perhaps more attractive because it allows to look up keys
 in the indices of @emph{several} info files related to Octave (provided
 that the Emacs variable @code{octave-help-files} is set correctly).  In
 this case, use @code{info_program ("info-emacs-octave-help")}.
 
-If you use Octave from within Emacs, these settings are best done in the
-@file{~/.emacs-octave} startup file (or the file pointed to by the Emacs
-variable @code{inferior-octave-startup-file}).
-
-@c Local Variables:
-@c TeX-command-default: "Texinfo"
-@c End:
+If you use Octave from within Emacs, it is best to add these settings to
+your @file{~/.emacs-octave} startup file (or the file pointed to by the
+Emacs variable @code{inferior-octave-startup-file}).
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -787,18 +787,19 @@ or backward substitution, and goto 8
 sparse Cholesky factorization using CHOLMOD.
 
 @item If the sparse Cholesky factorization failed or the matrix is not
 hermitian with a real positive diagonal, and the matrix is square, factorize 
 using UMFPACK.
 
 @item If the matrix is not square, or any of the previous solvers flags
 a singular or near singular matrix, find a minimum norm solution using
-CXSPARSE@footnote{CHOLMOD, UMFPACK and CXSPARSE are written by Tim Davis
-and are available at http://www.cise.ufl.edu/research/sparse/}.
+CXSPARSE@footnote{The CHOLMOD, UMFPACK and CXSPARSE packages were
+written by Tim Davis and are available at
+http://www.cise.ufl.edu/research/sparse/}.
 @end enumerate
 
 The band density is defined as the number of non-zero values in the matrix
 divided by the number of non-zero values in the matrix. The banded matrix
 solvers can be entirely disabled by using @dfn{spparms} to set @code{bandden}
 to 1 (i.e. @code{spparms ("bandden", 1)}).
 
 The QR solver factorizes the problem with a Dulmage-Mendhelsohn, to
@@ -1132,12 +1133,8 @@ value in the z-axis for each simplex ver
 @image{grid,8cm}
 @caption{Example finite element model the showing triangular elements. 
 The height of each vertex corresponds to the solution value.}
 @end float
 @end ifset
 @end ifset
 @end ifset
 @end ifset
-
-@c Local Variables: ***
-@c Mode: texinfo ***
-@c End: ***
diff --git a/liboctave/DASPK-opts.in b/liboctave/DASPK-opts.in
--- a/liboctave/DASPK-opts.in
+++ b/liboctave/DASPK-opts.in
@@ -128,17 +128,17 @@ initial condition calculation.
 Maximum number of Newton iterations (default is 5).
 @item MXNJ
 Maximum number of Jacobian evaluations (default is 6).
 @item MXNH
 Maximum number of values of the artificial stepsize parameter to be
 tried if the @code{\"compute consistent initial condition\"} option has
 been set to 1 (default is 5).
 
-Note that the maximum number of Newton iterations allowed in all is
+Note that the maximum total number of Newton iterations allowed is
 @code{MXNIT*MXNJ*MXNH} if the @code{\"compute consistent initial
 condition\"} option has been set to 1 and @code{MXNIT*MXNJ} if it is
 set to 2.
 @item LSOFF
 Set to a nonzero value to disable the linesearch algorithm (default is
 0).
 @item STPTOL
 Minimum scaled step in linesearch algorithm (default is eps^(2/3)).
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-11-02  Kai Habel  <kai.habel@gmx.de>
+
+	* plot/bar.m, plot/barh.m: Doc fix.
+
 2007-10-31  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Call undo_string_escapes on obj.keylabel.
 
 2007-10-31  Michael goffioul  <michael.goffioul@gmail.com>
 
 	* plot/subplot.m: Ignore legend objects when parsing existing axes
 	objects and legend objects are implemented with a separate axes
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -110,36 +110,35 @@
 ## infinite.
 ## 
 ## @item ctype
 ## An array of characters containing the sense of each constraint in the
 ## constraint matrix.  Each element of the array may be one of the
 ## following values
 ## @table @code
 ## @item "F"
-## Free (unbounded) variable (the constraint is ignored).
+## A free (unbounded) constraint (the constraint is ignored).
 ## @item "U"
-## Variable with upper bound (@code{A(i,:)*x <= b(i)}).
+## An inequality constraint with an upper bound (@code{A(i,:)*x <= b(i)}).
 ## @item "S"
-## Fixed Variable (@code{A(i,:)*x = b(i)}).
+## An equality constraint (@code{A(i,:)*x = b(i)}).
 ## @item "L"
-## Variable with lower bound (@code{A(i,:)*x >= b(i)}).
+## An inequality with a lower bound (@code{A(i,:)*x >= b(i)}).
 ## @item "D"
-## Double-bounded variable (@code{A(i,:)*x >= -b(i)} @emph{and}
-## (@code{A(i,:)*x <= b(i)}).
+## An inequality constraint with both upper and lower bounds
+## (@code{A(i,:)*x >= -b(i)} @emph{and} (@code{A(i,:)*x <= b(i)}).
 ## @end table
 ## 
 ## @item vartype
 ## A column array containing the types of the variables.
 ## @table @code
-## @item "F"
-## "C"
-## Continuous variable.
-## "I"
-## Integer variable
+## @item "C"
+## A continuous variable.
+## @item "I"
+## An integer variable.
 ## @end table
 ## 
 ## @item sense
 ## If @var{sense} is 1, the problem is a minimization.  If @var{sense} is
 ## -1, the problem is a maximization.  The default value is 1.
 ## 
 ## @item param
 ## A structure containing the following parameters used to define the
diff --git a/scripts/plot/bar.m b/scripts/plot/bar.m
--- a/scripts/plot/bar.m
+++ b/scripts/plot/bar.m
@@ -13,47 +13,39 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{h} =} bar (@var{x}, @var{y}, @var{p1}, @var{v1}, @dots{})
-## @deftypefnx {Function File} {[@var{xb}, @var{yb}] =} bar (@dots{})
-## Given two vectors of x-y data, @code{bar} produce a bar graph.
+## @deftypefn {Function File}  bar (@var{x}, @var{y})
+## @deftypefnx {Function File} bar (@var{y})
+## @deftypefnx {Function File} bar (@var{x}, @var{y}, @var{w})
+## @deftypefnx {Function File} bar (@var{x}, @var{y}, @var{w}, @var{style})
+## @deftypefnx {Function File} {@var{h} =} bar (...,@var{prop}, @var{val})
+## Produce a bar graph from two vectors of x-y data.
 ##
 ## If only one argument is given, it is taken as a vector of y-values
 ## and the x coordinates are taken to be the indices of the elements.
 ##
+## The default width of 0.8 for the bars can be changed using @var{w}. 
+##
 ## If @var{y} is a matrix, then each column of @var{y} is taken to be a
 ## separate bar graph plotted on the same graph. By default the columns
 ## are plotted side-by-side. This behavior can be changed by the @var{style}
 ## argument, which can take the values @code{"grouped"} (the default),
 ## or @code{"stacked"}.
 ##
-## If two output arguments are specified, the data are generated but
-## not plotted.  For example,
-##
-## @example
-## bar (x, y);
-## @end example
+## The optional return value @var{h} provides a handle to the patch object.
+## Properties of the patch graphics object can be changed using 
+## @var{prop}, @var{val} pairs.
 ##
-## @noindent
-## and
-##
-## @example
-## [xb, yb] = bar (x, y);
-## plot (xb, yb);
-## @end example
-##
-## @noindent
-## are equivalent.
-## @seealso{hbar, plot}
+## @seealso{barh, plot}
 ## @end deftypefn
 
 ## Author: jwe
 
 function varargout = bar (varargin)
   varargout = cell (nargout, 1);
   [varargout{:}] = __bar__ (true, "bar", varargin{:});
 endfunction
diff --git a/scripts/plot/barh.m b/scripts/plot/barh.m
--- a/scripts/plot/barh.m
+++ b/scripts/plot/barh.m
@@ -12,46 +12,38 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{h} =} barh (@var{x}, @var{y}, @var{style})
-## @deftypefnx {Function File} {[@var{xb}, @var{yb}] =} barh (@dots{})
-## Given two vectors of x-y data, @code{bar} produce a horizontal bar graph.
+## @deftypefn {Function File}  barh (@var{x}, @var{y})
+## @deftypefnx {Function File} barh (@var{y})
+## @deftypefnx {Function File} barh (@var{x}, @var{y}, @var{w})
+## @deftypefnx {Function File} barh (@var{x}, @var{y}, @var{w}, @var{style})
+## @deftypefnx {Function File} {@var{h} =} barh (...,@var{prop}, @var{val})
+## Produce a horizontal bar graph from two vectors of x-y data.
 ##
 ## If only one argument is given, it is taken as a vector of y-values
 ## and the x coordinates are taken to be the indices of the elements.
 ##
+## The default width of 0.8 for the bars can be changed using @var{w}. 
+##
 ## If @var{y} is a matrix, then each column of @var{y} is taken to be a
 ## separate bar graph plotted on the same graph. By default the columns
 ## are plotted side-by-side. This behavior can be changed by the @var{style}
 ## argument, which can take the values @code{"grouped"} (the default),
 ## or @code{"stacked"}.
 ##
-## If two output arguments are specified, the data are generated but
-## not plotted.  For example,
-##
-## @example
-## barh (x, y);
-## @end example
+## The optional return value @var{h} provides a handle to the patch object.
+## Properties of the patch graphics object can be changed using 
+## @var{prop}, @var{val} pairs.
 ##
-## @noindent
-## and
-##
-## @example
-## [xb, yb] = barh (x, y);
-## plot (xb, yb);
-## @end example
-##
-## @noindent
-## are equivalent.
 ## @seealso{bar, plot}
 ## @end deftypefn
 
 ## Author: jwe
 
 function varargout = barh (varargin)
   varargout = cell (nargout, 1);
   [varargout{:}] = __bar__ (false, "barh", varargin{:});
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -72,30 +72,30 @@ extern "C"
 }
 
 DEFUN_DLD (balance, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{aa} =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{dd}, @var{aa}] =} balance (@var{a}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{cc}, @var{dd}, @var{aa}, @var{bb}] =} balance (@var{a}, @var{b}, @var{opt})\n\
 \n\
-@code{[dd, aa] = balance (a)} returns @code{aa = dd \\ a * dd}.\n\
-@code{aa} is a matrix whose row and column norms are roughly equal in\n\
-magnitude, and @code{dd} = @code{p * d}, where @code{p} is a permutation\n\
+Compute @code{aa = dd \\ a * dd} in which @code{aa} is a matrix whose\n\
+row and column norms are roughly equal in magnitude, and\n\
+@code{dd} = @code{p * d}, in which @code{p} is a permutation\n\
 matrix and @code{d} is a diagonal matrix of powers of two.  This allows\n\
 the equilibration to be computed without roundoff.  Results of\n\
 eigenvalue calculation are typically improved by balancing first.\n\
 \n\
-@code{[cc, dd, aa, bb] = balance (a, b)} returns @code{aa = cc*a*dd} and\n\
-@code{bb = cc*b*dd)}, where @code{aa} and @code{bb} have non-zero\n\
+If four output values are requested, compute @code{aa = cc*a*dd} and\n\
+@code{bb = cc*b*dd)}, in which @code{aa} and @code{bb} have non-zero\n\
 elements of approximately the same magnitude and @code{cc} and @code{dd}\n\
 are permuted diagonal matrices as in @code{dd} for the algebraic\n\
 eigenvalue problem.\n\
 \n\
-The eigenvalue balancing option @code{opt} is selected as follows:\n\
+The eigenvalue balancing option @code{opt} may be one of:\n\
 \n\
 @table @asis\n\
 @item @code{\"N\"}, @code{\"n\"}\n\
 No balancing; arguments copied, transformation(s) set to identity.\n\
 \n\
 @item @code{\"P\"}, @code{\"p\"}\n\
 Permute argument(s) to isolate eigenvalues where possible.\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/rand.cc b/src/DLD-FUNCTIONS/rand.cc
--- a/src/DLD-FUNCTIONS/rand.cc
+++ b/src/DLD-FUNCTIONS/rand.cc
@@ -336,27 +336,28 @@ rand (\"state\", v)\n\
 You may also initialize the state vector from an arbitrary vector of\n\
 length <= 625 for @var{v}.  This new state will be a hash based on the\n\
 value of @var{v}, not @var{v} itself.\n\
 \n\
 By default, the generator is initialized from @code{/dev/urandom} if it is\n\
 available, otherwise from cpu time, wall clock time and the current\n\
 fraction of a second.\n\
 \n\
-@code{rand} uses the Mersenne Twister with a period of 2^19937-1\n\
-(See M. Matsumoto and T. Nishimura, ``Mersenne Twister: A 623-dimensionally\n\
+To compute the psuedo-random sequence, @code{rand} uses the Mersenne\n\
+Twister with a period of 2^19937-1 (See M. Matsumoto and T. Nishimura,\n\
+``Mersenne Twister: A 623-dimensionally\n\
 equidistributed uniform pseudorandom number generator'', ACM Trans. on\n\
 Modeling and Computer Simulation Vol. 8, No. 1, January pp.3-30 1998,\n\
 @url{http://www.math.keio.ac.jp/~matumoto/emt.html}).\n\
 Do @strong{not} use for cryptography without securely hashing\n\
 several returned values together, otherwise the generator state\n\
 can be learned after reading 624 consecutive values.\n\
 \n\
-@code{rand} includes a second random number generator, that was the\n\
-previous generator used in Octave. The new generator is used by default\n\
+Older versions of Octave used a different random number generator.\n\
+The new generator is used by default\n\
 as it is significantly faster than the old generator, and produces\n\
 random numbers with a significantly longer cycle time. However, in\n\
 some circumstances it might be desirable to obtain the same random\n\
 sequences as used by the old generators. To do this the keyword\n\
 \"seed\" is used to specify that the old generators should be use,\n\
 as in\n\
 \n\
 @example\n\
@@ -644,19 +645,23 @@ r = a * randg (n)\n\
 r = 2 * randg (df / 2)\n\
 @end example\n\
 @item @code{t(df)} for @code{0 < df < inf} (use randn if df is infinite)\n\
 @example\n\
 r = randn () / sqrt (2 * randg (df / 2) / df)\n\
 @end example\n\
 @item @code{F (n1, n2)} for @code{0 < n1}, @code{0 < n2}\n\
 @example\n\
-r1 = 2 * randg (n1 / 2) / n1 ## r1 equals 1 if n1 is infinite\n\
-r2 = 2 * randg (n2 / 2) / n2 ## r2 equals 1 if n2 is infinite\n\
+@group\n\
+## r1 equals 1 if n1 is infinite\n\
+r1 = 2 * randg (n1 / 2) / n1\n\
+## r2 equals 1 if n2 is infinite\n\
+r2 = 2 * randg (n2 / 2) / n2\n\
 r = r1 / r2\n\n\
+@end group\n\
 @end example\n\
 @item negative @code{binomial (n, p)} for @code{n > 0}, @code{0 < p <= 1}\n\
 @example\n\
 r = randp ((1 - p) / p * randg (n))\n\
 @end example\n\
 @item non-central @code{chisq (df, L)}, for @code{df >= 0} and @code{L > 0}\n\
 (use chisq if @code{L = 0})\n\
 @example\n\
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -1419,20 +1419,21 @@ a block of 32 single precision floating 
 blocks is useful in combination with the @var{skip} argument.\n\
 \n\
 The @var{precision} argument may also specify a type conversion.\n\
 For example, @samp{int16=>int32} causes @code{fread} to read 16-bit\n\
 integer values and return an array of 32-bit integer values.  By\n\
 default, @code{fread} returns a double precision array.  The special\n\
 form @samp{*TYPE} is shorthand for @samp{TYPE=>TYPE}.\n\
 \n\
-The conversion and repeat counts may be combined.  For example,\n\
-@samp{32*single=>single} causes @code{fread} to read blocks of single\n\
-precision floating point values and return an array of single precision\n\
-values instead of the default array of double precision values.\n\
+The conversion and repeat counts may be combined.  For example, the\n\
+specification @samp{32*single=>single} causes @code{fread} to read\n\
+blocks of single precision floating point values and return an array\n\
+of single precision values instead of the default array of double\n\
+precision values.\n\
 \n\
 The optional argument @var{skip} specifies the number of bytes to skip\n\
 after each element (or block of elements) is read.  If it is not\n\
 specified, a value of 0 is assumed.  If the final block read is not\n\
 complete, the final skip is omitted.  For example,\n\
 \n\
 @example\n\
 fread (f, 10, \"3*single=>single\", 8)\n\
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -2125,17 +2125,17 @@ which @var{octave-home} is the directory
   return SET_NONEMPTY_INTERNAL_STRING_VARIABLE (info_file);
 }
 
 DEFUN (info_program, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} info_program ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} info_program (@var{new_val})\n\
 Query or set the internal variable that specifies the name of the\n\
-info program to run.  The default initial value is\n\
+info program to run.  The default value is\n\
 @code{\"@var{octave-home}/libexec/octave/@var{version}/exec/@var{arch}/info\"}\n\
 in which @var{octave-home} is the directory where all of Octave is\n\
 installed, @var{version} is the Octave version number, and @var{arch}\n\
 is the system type (for example, @code{i686-pc-linux-gnu}).  The\n\
 default initial value may be overridden by the environment variable\n\
 @code{OCTAVE_INFO_PROGRAM}, or the command line argument\n\
 @code{--info-program NAME}.\n\
 @seealso{info_file, doc, help, makeinfo_program}\n\
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -1289,17 +1289,17 @@ Return if a stopped child has been resum
 This value may not be meaningful on all systems.\n\
 @end table\n\
 \n\
 If the returned value of @var{pid} is greater than 0, it is the process\n\
 ID of the child process that exited.  If an error occurs, @var{pid} will\n\
 be less than zero and @var{msg} will contain a system-dependent error\n\
 message.  The value of @var{status} contains additional system-dependent\n\
 information about the subprocess that exited.\n\
-@seealso{WNOHANG, WUNTRACED, WCONTINUED, WEXITSTATUS, WIFSIGNALED, WTERMSIG, WCOREDUMP, WIFSTOPPED, WSTOPSIG, WIFCONTINUED}\n\
+@seealso{WCONTINUED, WCOREDUMP, WEXITSTATUS, WIFCONTINUED, WIFSIGNALED, WIFSTOPPED, WNOHANG, WSTOPSIG, WTERMSIG, WUNTRACED}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = 0;
   retval(0) = -1;
 
