# HG changeset patch
# User jwe
# Date 795797392 0
#      Tue Mar 21 14:49:52 1995 +0000
# Node ID 99fbb85d81527db91013e70c8d5d0fb7a876f069
# Parent  f6cf5e07cbe5063414ae4d271c81177b8aa7cf3f
[project @ 1995-03-21 14:49:52 by jwe]

diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -1,12 +1,12 @@
 // mappers.cc                                             -*- C++ -*-
 /*
 
-Copyright (C) 1992, 1993 John W. Eaton
+Copyright (C) 1992, 1993, 1995 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -25,27 +25,34 @@ Software Foundation, 675 Mass Ave, Cambr
 #include "config.h"
 #endif
 
 #include <math.h>
 #include <float.h>
 #include <Complex.h>
 
 #include "missing-math.h"
+#include "f77-uscore.h"
 #include "variables.h"
 #include "mappers.h"
 #include "error.h"
 #include "utils.h"
 #include "defun.h"
 
 #if defined (_AIX) && defined (__GNUG__)
 #undef finite
 #define finite(x) ((x) < DBL_MAX && (x) > -DBL_MAX)
 #endif
 
+extern "C"
+{
+  double F77_FCN (dgamma) (double*);
+  int F77_FCN (dlgams) (double*, double*, double*);
+}
+
 #ifndef M_LOG10E
 #define M_LOG10E 0.43429448190325182765
 #endif
 
 #ifndef M_PI
 #define M_PI 3.14159265358979323846
 #endif
 
@@ -147,22 +154,17 @@ xfinite (double x)
 #else
   return (double) (x > -DBL_MAX && x < DBL_MAX);
 #endif
 }
 
 double
 xgamma (double x)
 {
-#if defined (HAVE_LGAMMA)
-  double y = lgamma (x);
-  return signgam * exp (y);
-#else
-  error ("gamma(x) not available on this system");
-#endif
+  return F77_FCN (dgamma) (&x);
 }
 
 double
 xisinf (double x)
 {
 #if defined (HAVE_ISINF)
   return (double) isinf (x);
 #elif defined (HAVE_FINITE) && defined (HAVE_ISNAN)
@@ -170,21 +172,22 @@ xisinf (double x)
 #else
   return (double) (x == DBL_MAX || x == -DBL_MAX);
 #endif
 }
 
 double
 xlgamma (double x)
 {
-#if defined (HAVE_LGAMMA)
-  return lgamma (x);
-#else
-  error ("lgamma (x) not available on this system");
-#endif
+  double result;
+  double sgngam;
+
+  F77_FCN (dlgams) (&x, &result, &sgngam);
+
+  return result;
 }
 
 // Complex -> double mappers.
 
 double
 xisnan (const Complex& x)
 {
 #if defined (HAVE_ISNAN)
