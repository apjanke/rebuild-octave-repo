# HG changeset patch
# User jwe
# Date 848427078 0
#      Tue Nov 19 18:11:18 1996 +0000
# Node ID 64f403ef483d95558e9e803204f4cde4f9d6e364
# Parent  90fa35bd021679233303a7bada9a49b225151946
[project @ 1996-11-19 18:06:02 by jwe]

diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -289,22 +289,17 @@ install-inc:
 	for f in defaults.h oct-conf.h oct-gperf.h ; do \
 	  rm -f $(octincludedir)/$$f ; \
 	  $(INSTALL_DATA) $$f $(octincludedir)/$$f ; \
 	done
 	linkdir=`echo $(octincludedir) | sed 's/-$(version)$$//'` ; \
 	if [ "$$linkdir" = $(octincludedir) ] ; then \
 	  true ; \
 	else \
-	  if [ -d $$linkdir ] ; then \
-	    true ; \
-	  else \
-	    rm -f $$linkdir ; \
-	    $(LN_S) $(octincludedir) $$linkdir ; \
-	  fi ; \
+	  rm -f $$linkdir && $(LN_S) $(octincludedir) $$linkdir ; \
 	fi
 .PHONY: install-lib
 
 uninstall:
 	rm -f $(bindir)/octave
 	for f in $(LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
 	for f in $(SH_LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
 	for f in $(INCLUDES) defaults.h oct-conf.h; do \
diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -23,16 +23,18 @@ Software Foundation, 59 Temple Place - S
 #if defined (__GNUG__)
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <string>
+
 #include <iostream.h>
 #include <strstream.h>
 
 #include "error.h"
 #include "pager.h"
 #include "ov.h"
 #include "pt-exp-base.h"
 
@@ -67,13 +69,19 @@ tree_expression::mark_for_possible_ans_a
 
 octave_value
 tree_expression::eval (bool /* print */)
 {
   panic ("invalid evaluation of generic expression");
   return octave_value ();
 }
 
+string
+tree_expression::original_text (void) const
+{
+  return string ();
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/pt-exp-base.h b/src/pt-exp-base.h
--- a/src/pt-exp-base.h
+++ b/src/pt-exp-base.h
@@ -22,16 +22,18 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_expr_h)
 #define octave_tree_expr_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
+#include <string>
+
 class octave_value;
 
 #include "pt-base.h"
 
 // A base class for expressions.
 
 class
 tree_expression : public tree
@@ -54,19 +56,16 @@ public:
   virtual ~tree_expression (void) { }
 
   virtual bool is_constant (void) const
     { return false; }
 
   virtual bool is_matrix_constant (void) const
     { return false; }
 
-  virtual bool is_range_constant (void) const
-    { return false; }
-
   virtual bool is_multi_val_ret_expression (void) const
     { return false; }
 
   virtual bool is_identifier (void) const
     { return false; }
 
   virtual bool is_indirect_ref (void) const
     { return false; }
@@ -87,16 +86,18 @@ public:
   virtual bool is_in_parens (void) { return in_parens; }
 
   virtual void mark_for_possible_ans_assign (void);
 
   virtual octave_value eval (bool print) = 0;
 
   virtual char *oper (void) const { return "<unknown>"; }
 
+  virtual string original_text (void) const;
+
 protected:
 
   // Nonzero if this expression appears inside parentheses.
   int in_parens;
 
   // The type of this expression.
   type etype;
 };
diff --git a/src/pt-fcn.cc b/src/pt-fcn.cc
--- a/src/pt-fcn.cc
+++ b/src/pt-fcn.cc
@@ -30,16 +30,17 @@ Software Foundation, 59 Temple Place - S
 
 #include <iostream.h>
 
 #include <defaults.h>
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
+#include "input.h"
 #include "pager.h"
 #include "symtab.h"
 #include "toplev.h"
 #include "pt-exp.h"
 #include "pt-fcn.h"
 #include "pt-misc.h"
 #include "pt-pr-code.h"
 #include "pt-walk.h"
@@ -390,25 +391,25 @@ tree_function::traceback_error (void)
 	::error ("called from `%s' in file `%s'",
 		 fcn_name.c_str (), file_name.c_str ());
     }
 }
 
 void
 tree_function::print_code_function_header (void)
 {
-  tree_print_code tpc (octave_stdout);
+  tree_print_code tpc (octave_stdout, Vps4);
 
   tpc.visit_function_header (*this);
 }
 
 void
 tree_function::print_code_function_trailer (void)
 {
-  tree_print_code tpc (octave_stdout);
+  tree_print_code tpc (octave_stdout, Vps4);
 
   tpc.visit_function_trailer (*this);
 }
 
 void
 tree_function::accept (tree_walker& tw)
 {
   tw.visit_function (*this);
diff --git a/src/pt-misc.cc b/src/pt-misc.cc
--- a/src/pt-misc.cc
+++ b/src/pt-misc.cc
@@ -33,16 +33,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #include "error.h"
+#include "input.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "toplev.h"
 #include "pt-cmd.h"
 #include "pt-exp.h"
 #include "pt-fcn.h"
 #include "pt-fvc.h"
 #include "pt-misc.h"
@@ -82,17 +83,17 @@ tree_statement::column (void)
 }
 
 void
 tree_statement::maybe_echo_code (bool in_function_body)
 {
   if (in_function_body
       && (Vecho_executing_commands & ECHO_FUNCTIONS))
     {
-      tree_print_code tpc (octave_stdout);
+      tree_print_code tpc (octave_stdout, Vps4);
 
       accept (tpc);
     }
 }
 
 void
 tree_statement::accept (tree_walker& tw)
 {
diff --git a/src/pt-pr-code.cc b/src/pt-pr-code.cc
--- a/src/pt-pr-code.cc
+++ b/src/pt-pr-code.cc
@@ -26,17 +26,16 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream.h>
 
 #include "error.h"
-#include "input.h"
 #include "pr-output.h"
 #include "pt-pr-code.h"
 
 void
 tree_print_code::visit_argument_list (tree_argument_list& lst)
 {
   Pix p = lst.first ();
 
@@ -564,17 +563,17 @@ tree_print_code::visit_constant (tree_co
 {
   indent ();
 
   bool in_parens = val.is_in_parens ();
 
   if (in_parens)
     os << "(";
 
-  val.print (os, true);
+  val.print (os, true, print_original_text);
 
   if (in_parens)
     os << ")";
 }
 
 void
 tree_print_code::visit_parameter_list (tree_parameter_list& lst)
 {
@@ -1075,17 +1074,17 @@ bool tree_print_code::beginning_of_line 
 
 void
 tree_print_code::indent (void)
 {
   assert (curr_print_indent_level >= 0);
  
   if (beginning_of_line)
     {
-      os.form ("%s%*s", Vps4.c_str (), curr_print_indent_level, "");
+      os.form ("%s%*s", prefix.c_str (), curr_print_indent_level, "");
       beginning_of_line = false;
     }
 }
 
 // All print_code() functions should use this to print new lines.
 
 void
 tree_print_code::newline (void)
diff --git a/src/pt-pr-code.h b/src/pt-pr-code.h
--- a/src/pt-pr-code.h
+++ b/src/pt-pr-code.h
@@ -22,26 +22,30 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_print_code_h)
 #define octave_tree_print_code_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
+#include <string>
+
 #include "pt-walk.h"
 
 // How to print the code that the parse trees represent.
 
 class
 tree_print_code : public tree_walker
 {
 public:
 
-  tree_print_code (ostream& os_arg) : os (os_arg) { }
+  tree_print_code (ostream& os_arg, const string& pfx = string (),
+		   bool pr_orig_txt = true)
+    : os (os_arg), prefix (pfx), print_original_text (pr_orig_txt) { }
 
   ~tree_print_code (void) { }
 
   void visit_argument_list (tree_argument_list&);
 
   void visit_binary_expression (tree_binary_expression&);
 
   void visit_break_command (tree_break_command&);
@@ -125,16 +129,20 @@ public:
   void visit_unwind_protect_command (tree_unwind_protect_command&);
 
   void visit_while_command (tree_while_command&);
 
 private:
 
   ostream& os;
 
+  string prefix;
+
+  bool print_original_text;
+
   static int curr_print_indent_level;
   static bool beginning_of_line;
 
   void reset_indent_level (void)
     { curr_print_indent_level = 0; }
 
   void increment_indent_level (void)
     { curr_print_indent_level += 2; }
