# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1517233907 18000
#      Mon Jan 29 08:51:47 2018 -0500
# Node ID 1f1ac73910aba1db9701e5d737f9f2bb8393e5f3
# Parent  41a87a2a8d381393ada16ebdef0907e57ba1ef24
respect sorting in variable editor (bug #51843)

* workspace-view.h, workspace-view.cc
(workspace_view::handle_contextmenu_edit): Use get_var_name to access
variable name through sort model proxy pointer instead of accessing
through m_model pointer.
(workspace_view::get_var_name): Pass arg by const reference instead of
value.

diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -453,21 +453,17 @@ workspace_view::handle_contextmenu_renam
 
 void
 workspace_view::handle_contextmenu_edit (void)
 {
   QModelIndex index = m_view->currentIndex ();
 
   if (index.isValid ())
     {
-      index = index.sibling (index.row (), 0);
-
-      QMap<int, QVariant> item_data = m_model->itemData (index);
-
-      QString var_name = item_data[0].toString ();
+      QString var_name = get_var_name (index);
 
       octave::symbol_scope scope = m_model->scope ();
 
       octave_value val;
       if (scope)
         val = scope.varval (var_name.toStdString ());
 
       emit edit_variable_signal (var_name, val);
@@ -536,16 +532,20 @@ workspace_view::relay_contextmenu_comman
     {
       QString var_name = get_var_name (index);
 
       emit command_requested (cmdname + " (" + var_name + ");");
     }
 }
 
 QString
-workspace_view::get_var_name (QModelIndex index)
+workspace_view::get_var_name (const QModelIndex& index)
 {
-  index = index.sibling (index.row (), 0);
+  // We are using a sort model proxy so m_model won't provide the
+  // correct ordering.
+
   QAbstractItemModel *m = m_view->model ();
-  QMap<int, QVariant> item_data = m->itemData (index);
+
+  QMap<int, QVariant> item_data
+    = m->itemData (index.sibling (index.row (), 0));
 
   return item_data[0].toString ();
 }
diff --git a/libgui/src/workspace-view.h b/libgui/src/workspace-view.h
--- a/libgui/src/workspace-view.h
+++ b/libgui/src/workspace-view.h
@@ -94,20 +94,24 @@ protected slots:
 
   void copyClipboard (void);
   void selectAll (void);
 
 private:
 
   void relay_contextmenu_command (const QString& cmdname);
 
-  QString get_var_name (QModelIndex index);
+  QString get_var_name (const QModelIndex& index);
 
   QTableView *m_view;
   int m_view_previous_row_count;
+
+  // We are using a sort model proxy so m_model won't provide the
+  // correct ordering.  It is still OK to use this pointer to access
+  // other info attached to the model, for example the scope or colors.
   workspace_model *m_model;
 
   QSortFilterProxyModel m_filter_model;
   QCheckBox *m_filter_checkbox;
   QComboBox *m_filter;
   QWidget *m_filter_widget;
   bool m_filter_shown;
 
