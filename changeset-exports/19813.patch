# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1424537621 18000
#      Sat Feb 21 11:53:41 2015 -0500
# Node ID 879cff0c05dcf6bd8db596d14145988dbaf5dae7
# Parent  f9ca80482c41c919855f48333fee86ce457e12e1
audiowrite: Accept a row vector input as a single channel

* audioread.cc (Faudiowrite): Accept a row vector input as a single channel.

diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -301,17 +301,17 @@ Comment.\n\
       return retval;
     }
 
   std::string filename = args(0).string_value ();
 
   if (error_state)
     return retval;
 
-  const Matrix audio = args(1).matrix_value ();
+  Matrix audio = args(1).matrix_value ();
 
   if (error_state)
     return retval;
 
   double bias = 0.0;
   double scale = 1.0;
 
   if (args(1).is_uint8_type ())
@@ -331,16 +331,19 @@ Comment.\n\
   if (error_state)
     return retval;
 
   std::string ext = filename.substr (filename.find_last_of (".") + 1);
   std::transform (ext.begin (), ext.end (), ext.begin (), ::tolower);
 
   sf_count_t items_to_write = audio.rows () * audio.columns ();
 
+  if (audio.rows () == 1)
+    audio = audio.transpose ();
+
   OCTAVE_LOCAL_BUFFER (float, data, items_to_write);
 
   sf_count_t idx = 0;
   for (int i = 0; i < audio.rows (); i++)
     {
       for (int j = 0; j < audio.columns (); j++)
         {
           double elem = (audio.xelem (i, j) - bias) / scale;
