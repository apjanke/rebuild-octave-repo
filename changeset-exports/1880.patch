# HG changeset patch
# User jwe
# Date 823540231 0
#      Mon Feb 05 17:10:31 1996 +0000
# Node ID cbdbec67ad609928744812c1e7d0584b4dedd449
# Parent  1b43d3c06c048acaf42ba8b05e56dde2f86f6926
[project @ 1996-02-05 17:10:31 by jwe]

diff --git a/liboctave/dbleSVD.h b/liboctave/dbleSVD.h
--- a/liboctave/dbleSVD.h
+++ b/liboctave/dbleSVD.h
@@ -28,72 +28,73 @@ Software Foundation, 59 Temple Place - S
 #pragma interface
 #endif
 
 class ostream;
 
 #include "dDiagMatrix.h"
 #include "dMatrix.h"
 
-class SVD
+class
+SVD
 {
-friend class Matrix;
-
 public:
 
   enum type
     {
       std,
       economy,
       sigma_only,
     };
 
   SVD (void) { }
 
-
   SVD (const Matrix& a, type svd_type = SVD::std) { init (a, svd_type); }
 
   SVD (const Matrix& a, int& info, type svd_type = SVD::std)
     {
       info = init (a, svd_type);
     }
 
   SVD (const SVD& a)
     {
       sigma = a.sigma;
       left_sm = a.left_sm;
       right_sm = a.right_sm;
     }
 
   SVD& operator = (const SVD& a)
     {
-      sigma = a.sigma;
-      left_sm = a.left_sm;
-      right_sm = a.right_sm;
+      if (this != &a)
+	{
+	  sigma = a.sigma;
+	  left_sm = a.left_sm;
+	  right_sm = a.right_sm;
+	}
 
       return *this;
     }
 
   DiagMatrix singular_values (void) const { return sigma; }
 
   Matrix left_singular_matrix (void) const;
 
   Matrix right_singular_matrix (void) const;
 
   friend ostream&  operator << (ostream& os, const SVD& a);
 
 private:
 
-  int init (const Matrix& a, type svd_type = std);
-
   SVD::type type_computed;
 
   DiagMatrix sigma;
   Matrix left_sm;
   Matrix right_sm;
+
+  int init (const Matrix& a, type svd_type = std);
 };
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
