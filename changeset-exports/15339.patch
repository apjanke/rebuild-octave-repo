# HG changeset patch
# User Max Brister <max@2bass.com>
# Date 1347259799 21600
#      Mon Sep 10 00:49:59 2012 -0600
# Node ID b49d707fe9d7bf8f676e8f0469abe443491ff3d5
# Parent  dc39c1d84c5b60763dea290256d0b2bd509b8bf1
pt-jit.cc (jit_function_info::jit_function_info): Verify llvm IR when debugging

diff --git a/libinterp/interp-core/pt-jit.cc b/libinterp/interp-core/pt-jit.cc
--- a/libinterp/interp-core/pt-jit.cc
+++ b/libinterp/interp-core/pt-jit.cc
@@ -1916,16 +1916,17 @@ jit_function_info::jit_function_info (tr
                                                       fcn, argument_types);
 
 #ifdef OCTAVE_JIT_DEBUG
       if (Venable_jit_debug)
         {
           std::cout << "-------------------- raw function ";
           std::cout << "--------------------\n";
           std::cout << *raw_fn.to_llvm () << std::endl;
+          llvm::verifyFunction (*raw_fn.to_llvm ());
         }
 #endif
 
       std::string wrapper_name = fcn.name () + "_wrapper";
       jit_type *any_t = jit_typeinfo::get_any ();
       std::vector<jit_type *> wrapper_args (1, jit_typeinfo::get_any_ptr ());
       jit_function wrapper (module, jit_convention::internal, wrapper_name,
                             any_t, wrapper_args);
@@ -1964,16 +1965,17 @@ jit_function_info::jit_function_info (tr
       tjit.optimize (llvm_function);
 
 #ifdef OCTAVE_JIT_DEBUG
       if (Venable_jit_debug)
         {
           std::cout << "-------------------- optimized and wrapped ";
           std::cout << "--------------------\n";
           std::cout << *llvm_function << std::endl;
+          llvm::verifyFunction (*llvm_function);
         }
 #endif
 
       llvm::ExecutionEngine* engine = tjit.get_engine ();
       void *void_fn = engine->getPointerToFunction (llvm_function);
       function = reinterpret_cast<jited_function> (void_fn);
     }
   catch (const jit_fail_exception& e)
