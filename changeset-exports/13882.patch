# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1321571042 0
#      Thu Nov 17 23:04:02 2011 +0000
# Branch gui
# Node ID b09321ab846475b66731aaeac0ab2782f06afc0c
# Parent  e3066c972c6a4c365ecdcb0386c41ac32a66a21c
[Win32] Implement sendText capability in Win32 terminal widget.

* src/terminal/win32/QConsole.h (QConsole::sendText): New method.
* src/terminal/win32/QConsole.cpp (QConsole::sendText): Likewise.
(QConsolePrivate::sendConsoleText): Likewise, used in QConsole::sendText.
* src/WinTerminalView.cpp (WinTerminalView::sendText): Use it.

diff --git a/gui/src/WinTerminalView.cpp b/gui/src/WinTerminalView.cpp
old mode 100644
new mode 100755
--- a/gui/src/WinTerminalView.cpp
+++ b/gui/src/WinTerminalView.cpp
@@ -21,12 +21,12 @@ WinTerminalView::WinTerminalView (QWidge
     : QConsole (parent)
 {
 }
 
 WinTerminalView::~WinTerminalView (void)
 {
 }
 
-void WinTerminalView::sendText (const QString& /*txt*/)
+void WinTerminalView::sendText (const QString& txt)
 {
-  // FIXME: implement this.
+  QConsole::sendText (txt);
 }
diff --git a/gui/src/terminal/win32/QConsole.cpp b/gui/src/terminal/win32/QConsole.cpp
old mode 100644
new mode 100755
--- a/gui/src/terminal/win32/QConsole.cpp
+++ b/gui/src/terminal/win32/QConsole.cpp
@@ -92,16 +92,17 @@ public:
   void updateConsoleSize (bool sync = false);
   void syncConsoleParameters (void);
   void grabConsoleBuffer (CHAR_INFO* buf = 0);
   void updateScrollBar (void);
   void setScrollValue (int value);
   void updateConsoleView (bool grab = true);
   void monitorConsole (void);
   void startCommand (void);
+  void sendConsoleText (const QString& s);
 
   void log (const char* fmt, ...);
 
   void closeStandardIO (int fd, DWORD stdHandleId, const char* name);
   void setupStandardIO (DWORD stdHandleId, int fd, const char* name,
                         const char* devName);
 
 private:
@@ -624,16 +625,72 @@ void QConsolePrivate::startCommand (void
           CloseHandle (m_process);
           m_process = NULL;
         }
     }
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
+void QConsolePrivate::sendConsoleText (const QString& s)
+{
+  // Send the string in chunks of 512 characters. Each character is
+  // translated into an equivalent keypress event.
+
+#define TEXT_CHUNK_SIZE 512
+
+  int len = s.length ();
+  INPUT_RECORD events[TEXT_CHUNK_SIZE];
+  DWORD nEvents = 0, written;
+  HANDLE hStdIn = GetStdHandle (STD_INPUT_HANDLE);
+
+  ZeroMemory (events, sizeof (events));
+
+  for (int i = 0; i < len; i++)
+    {
+      QChar c = s.at (i);
+
+      if (c == L'\r' || c == L'\n')
+        {
+          if (c == L'\r' && i < (len - 1) && s.at (i+1) == L'\n')
+            i++;
+          if (nEvents)
+            {
+              WriteConsoleInput (hStdIn, events, nEvents, &written);
+              nEvents = 0;
+              ZeroMemory (events, sizeof (events));
+            }
+          PostMessage (m_consoleWindow, WM_KEYDOWN, VK_RETURN, 0x001C0001);
+          PostMessage (m_consoleWindow, WM_KEYDOWN, VK_RETURN, 0xC01C0001);
+        }
+      else
+        {
+          events[nEvents].EventType                        = KEY_EVENT;
+          events[nEvents].Event.KeyEvent.bKeyDown          = TRUE;
+          events[nEvents].Event.KeyEvent.wRepeatCount      = 1;
+          events[nEvents].Event.KeyEvent.wVirtualKeyCode   =
+            LOBYTE (VkKeyScan (c.unicode ()));
+          events[nEvents].Event.KeyEvent.wVirtualScanCode  = 0;
+          events[nEvents].Event.KeyEvent.uChar.UnicodeChar = c.unicode ();
+          events[nEvents].Event.KeyEvent.dwControlKeyState = 0;
+          nEvents++;
+        }
+
+      if (nEvents == TEXT_CHUNK_SIZE
+          || (nEvents > 0 && i == (len - 1)))
+        {
+          WriteConsoleInput (hStdIn, events, nEvents, &written);
+          nEvents = 0;
+          ZeroMemory (events, sizeof (events));
+        }
+    }
+}
+
+//////////////////////////////////////////////////////////////////////////////
+
 QConsole::QConsole (QWidget* parent)
     : d (new QConsolePrivate (this))
 {
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 QConsole::QConsole (const QString& cmd, QWidget* parent)
@@ -802,8 +859,15 @@ void QConsole::focusInEvent (QFocusEvent
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 void QConsole::start (void)
 {
   d->startCommand ();
 }
+
+//////////////////////////////////////////////////////////////////////////////
+
+void QConsole::sendText (const QString& s)
+{
+  d->sendConsoleText (s);
+}
diff --git a/gui/src/terminal/win32/QConsole.h b/gui/src/terminal/win32/QConsole.h
old mode 100644
new mode 100755
--- a/gui/src/terminal/win32/QConsole.h
+++ b/gui/src/terminal/win32/QConsole.h
@@ -43,16 +43,18 @@ class QConsole : public QWidget
   friend class QConsoleThread;
   friend class QConsoleView;
 
 public:
   QConsole (QWidget* parent = 0);
   QConsole (const QString& cmd, QWidget* parent = 0);
   ~QConsole (void);
 
+  void sendText (const QString& s);
+
 signals:
   void terminated (void);
   void titleChanged (const QString&);
 
 protected:
   void viewPaintEvent (QConsoleView*, QPaintEvent*);
   void viewResizeEvent (QConsoleView*, QResizeEvent*);
   void wheelEvent (QWheelEvent*);
