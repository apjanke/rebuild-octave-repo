# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522845259 14400
#      Wed Apr 04 08:34:19 2018 -0400
# Node ID d7239105c409d3085152579d97e24ce3cfb6bc3f
# Parent  623388e8f8fd740a98311d192c559f10fa330f51
# Parent  e512eaba52066f5d4e4accf0d17d1ca0a445a82b
maint: Merge stable to default.

diff --git a/doc/interpreter/doccheck/mk_undocumented_list b/doc/interpreter/doccheck/mk_undocumented_list
--- a/doc/interpreter/doccheck/mk_undocumented_list
+++ b/doc/interpreter/doccheck/mk_undocumented_list
@@ -48,17 +48,17 @@ while (($_ = $octave_output[$idx++]) !~ 
 while ($_ = $octave_output[$idx++])
 {
   push(@where, $1) if (/] = (.+)$/);
 }
 
 # Sanity check that Octave script worked
 if ($#all_functions != $#where)
 {
-  die "Unequal number of functions and locations.  Parsing failed\n"; 
+  die "Unequal number of functions and locations.  Parsing failed\n";
 }
 
 # Second, remove functions based on directory location
 # deprecated directory, doc/interpreter directory, test/ directory
 FUNC: foreach $idx (0 .. $#where)
 {
   next FUNC if ($where[$idx] =~ /deprecated/i);
   next FUNC if ($where[$idx] =~ /interpreter/i);
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -1409,206 +1409,231 @@ status flags.
     err_disabled_feature ("F_SETFL", "F_SETFL");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_APPEND", FO_APPEND, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_APPEND ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate each write operation appends,
-or that may be passed to @code{fcntl} to set the write mode to append.
+Return the numerical value of the @code{O_APPEND} macro.
+
+@code{O_APPEND} is file status flag that may be returned by @code{fcntl}
+to indicate each write operation appends, or that may be passed to
+@code{fcntl} to set the write mode to append.
 @seealso{fcntl, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_append_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_APPEND", "O_APPEND");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_ASYNC", FO_ASYNC, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_ASYNC ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate asynchronous I/O.
+Return the numerical value of the @code{O_ASYNC} macro.
+
+@code{O_ASYNC} is the file status flag that may be returned by
+@code{fcntl} to indicate asynchronous I/O.
 @seealso{fcntl, O_APPEND, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_async_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_ASYNC", "O_ASYNC");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_CREAT", FO_CREAT, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_CREAT ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that a file should be created if it
-does not exist.
+Return the numerical value of the @code{O_CREAT}.
+
+@code{O_CREAT} is the file status flag that may be returned by
+@code{fcntl} to indicate that a file should be created if it does not
+exist.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_creat_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_CREAT", "O_CREAT");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_EXCL", FO_EXCL, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_EXCL ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that file locking is used.
+Return the numerical value of the @code{O_EXCL}.
+
+@code{O_EXCL} is the file status flag that may be returned by
+@code{fcntl} to indicate that file locking is used.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_excl_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_EXCL", "O_EXCL");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_NONBLOCK", FO_NONBLOCK, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_NONBLOCK ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that non-blocking I/O is in use,
-or that may be passsed to @code{fcntl} to set non-blocking I/O.
+Return the numerical value of the @code{O_NONBLOCK}.
+
+@code{O_NONBLOCK} is the file status flag that may be returned by
+@code{fcntl} to indicate that non-blocking I/O is in use, or that may be
+passsed to @code{fcntl} to set non-blocking I/O.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_nonblock_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_NONBLOCK", "O_NONBLOCK");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_RDONLY", FO_RDONLY, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_RDONLY ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that a file is open for reading only.
+Return the numerical value of the @code{O_RDONLY}.
+
+@code{O_RDONLY} is the file status flag that may be returned by
+@code{fcntl} to indicate that a file is open for reading only.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDWR, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_rdonly_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_RDONLY", "O_RDONLY");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_RDWR", FO_RDWR, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_RDWR ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that a file is open for both reading
-and writing.
+Return the numerical value of the @code{O_RDWR}.
+
+@code{O_RDWR} is the file status flag that may be returned by
+@code{fcntl} to indicate that a file is open for both reading and
+writing.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_SYNC, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_rdwr_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_RDWR", "O_RDWR");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_SYNC", FO_SYNC, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_SYNC ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that a file is open for synchronous
-I/O.
+Return the numerical value of the @code{O_SYNC}.
+
+@code{O_SYNC} is the file status flag that may be returned by
+@code{fcntl} to indicate that a file is open for synchronous I/O
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_TRUNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_sync_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_SYNC", "O_SYNC");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_TRUNC", FO_TRUNC, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_TRUNC ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that if file exists, it should be
-truncated when writing.
+Return the numerical value of the @code{O_TRUNC}.
+
+@code{O_TRUNC} is the file status flag that may be returned by
+@code{fcntl} to indicate that if file exists, it should be truncated
+when writing.
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_WRONLY}
 @end deftypefn */)
 {
   static int val = octave_o_trunc_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_TRUNC", "O_TRUNC");
 
   return const_value (args, val);
 }
 
 DEFUNX ("O_WRONLY", FO_WRONLY, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} O_WRONLY ()
-Return the numerical value of the file status flag that may be
-returned by @code{fcntl} to indicate that a file is open for writing only.
+Return the numerical value of the @code{O_WRONLY}.
+
+@code{O_WRONLY} is the file status flag that may be returned by
+@code{fcntl} to indicate that a file is open for writing only
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_TRUNC}
 @end deftypefn */)
 {
   static int val = octave_o_wronly_wrapper ();
 
   if (val < 0)
     err_disabled_feature ("O_WRONLY", "O_WRONLY");
 
   return const_value (args, val);
 }
 
 DEFUNX ("WNOHANG", FWNOHANG, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} WNOHANG ()
-Return the numerical value of the option argument that may be
-passed to @code{waitpid} to indicate that it should return its status
-immediately instead of waiting for a process to exit.
+Return the numerical value of the @code{WNOHANG} macro.
+
+@code{WNOHANG} is the option argument that may be passed to
+@code{waitpid} to indicate that it should return its status immediately
+instead of waiting for a process to exit.
 @seealso{waitpid, WUNTRACED, WCONTINUE}
 @end deftypefn */)
 {
   return const_value (args, octave::sys::wnohang ());
 }
 
 DEFUNX ("WUNTRACED", FWUNTRACED, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} WUNTRACED ()
-Return the numerical value of the option argument that may be
-passed to @code{waitpid} to indicate that it should also return if the child
+Return the numerical value of the @code{WUNTRACED} macro.
+
+@code{WUNTRACED} is the option argument that may be passed to
+@code{waitpid} to indicate that it should also return if the child
 process has stopped but is not traced via the @code{ptrace} system call
 @seealso{waitpid, WNOHANG, WCONTINUE}
 @end deftypefn */)
 {
   return const_value (args, octave::sys::wuntraced ());
 }
 
 DEFUNX ("WCONTINUE", FWCONTINUE, args, ,
         doc: /* -*- texinfo -*-
 @deftypefn {} {} WCONTINUE ()
-Return the numerical value of the option argument that may be
-passed to @code{waitpid} to indicate that it should also return if a stopped
-child has been resumed by delivery of a @code{SIGCONT} signal.
+Return the numerical value of the @code{WCONTINUE} macro.
+
+@code{WCONTINUE} is the option argument that may be passed to
+@code{waitpid} to indicate that it should also return if a stopped child
+has been resumed by delivery of a @code{SIGCONT} signal.
 @seealso{waitpid, WNOHANG, WUNTRACED}
 @end deftypefn */)
 {
   return const_value (args, octave::sys::wcontinue ());
 }
diff --git a/libinterp/dldfcn/chol.cc b/libinterp/dldfcn/chol.cc
--- a/libinterp/dldfcn/chol.cc
+++ b/libinterp/dldfcn/chol.cc
@@ -791,16 +791,18 @@ If @var{info} is not present, an error m
 %! assert (norm (triu (R1)-R1, Inf), single (0));
 %! assert (norm (R1 - R, Inf) < 2e1*eps ("single"));
 */
 
 DEFUN_DLD (cholinsert, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{R1} =} cholinsert (@var{R}, @var{j}, @var{u})
 @deftypefnx {} {[@var{R1}, @var{info}] =} cholinsert (@var{R}, @var{j}, @var{u})
+Update a Cholesky factorization given a row or column to insert in the original factored matrix.
+
 Given a Cholesky@tie{}factorization of a real symmetric or complex Hermitian
 positive definite matrix @w{@var{A} = @var{R}'*@var{R}}, @var{R}@tie{}upper
 triangular, return the Cholesky@tie{}factorization of
 @var{A1}, where @w{A1(p,p) = A}, @w{A1(:,j) = A1(j,:)' = u} and
 @w{p = [1:j-1,j+1:n+1]}.  @w{u(j)} should be positive.
 
 On return, @var{info} is set to
 
@@ -1043,16 +1045,18 @@ If @var{info} is not present, an error m
 %! assert (cca, ccau,   16*eps);
 %! assert (cca, ccal2', 16*eps);
 %! assert (cca, ccau2,  16*eps);
 */
 
 DEFUN_DLD (choldelete, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {@var{R1} =} choldelete (@var{R}, @var{j})
+Update a Cholesky factorization given a row or column to delete from the original factored matrix.
+
 Given a Cholesky@tie{}factorization of a real symmetric or complex Hermitian
 positive definite matrix @w{@var{A} = @var{R}'*@var{R}}, @var{R}@tie{}upper
 triangular, return the Cholesky@tie{}factorization of @w{A(p,p)}, where
 @w{p = [1:j-1,j+1:n+1]}.
 @seealso{chol, cholupdate, cholinsert, cholshift}
 @end deftypefn */)
 {
   if (args.length () != 2)
@@ -1165,16 +1169,18 @@ triangular, return the Cholesky@tie{}fac
 %!
 %! assert (norm (triu (R1)-R1, Inf), single (0));
 %! assert (norm (R1'*R1 - single (Ac(p,p)), Inf) < 1e1*eps ("single"));
 */
 
 DEFUN_DLD (cholshift, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {@var{R1} =} cholshift (@var{R}, @var{i}, @var{j})
+Update a Cholesky factorization given a range of columns to shift in the original factored matrix.
+
 Given a Cholesky@tie{}factorization of a real symmetric or complex Hermitian
 positive definite matrix @w{@var{A} = @var{R}'*@var{R}}, @var{R}@tie{}upper
 triangular, return the Cholesky@tie{}factorization of
 @w{@var{A}(p,p)}, where @w{p} is the permutation @*
 @code{p = [1:i-1, shift(i:j, 1), j+1:n]} if @w{@var{i} < @var{j}} @*
  or @*
 @code{p = [1:j-1, shift(j:i,-1), i+1:n]} if @w{@var{j} < @var{i}}.  @*
 
diff --git a/libinterp/dldfcn/qr.cc b/libinterp/dldfcn/qr.cc
--- a/libinterp/dldfcn/qr.cc
+++ b/libinterp/dldfcn/qr.cc
@@ -924,16 +924,18 @@ bool check_index (const octave_value& i,
 {
   return ((i.isreal () || i.isinteger ())
           && (i.is_scalar_type () || vector_allowed));
 }
 
 DEFUN_DLD (qrupdate, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{Q1}, @var{R1}] =} qrupdate (@var{Q}, @var{R}, @var{u}, @var{v})
+Update a QR factorization given update vectors or matrices.
+
 Given a QR@tie{}factorization of a real or complex matrix
 @w{@var{A} = @var{Q}*@var{R}}, @var{Q}@tie{}unitary and
 @var{R}@tie{}upper trapezoidal, return the QR@tie{}factorization of
 @w{@var{A} + @var{u}*@var{v}'}, where @var{u} and @var{v} are column vectors
 (rank-1 update) or matrices with equal number of columns
 (rank-k update).  Notice that the latter case is done as a sequence of
 rank-1 updates; thus, for k large enough, it will be both faster and more
 accurate to recompute the factorization from scratch.
@@ -1086,16 +1088,19 @@ economized (R is square).
 %! assert (norm (vec (Q'*Q - eye (5,"single")), Inf) < 1e1*eps ("single"));
 %! assert (norm (vec (triu (R)-R), Inf) == 0);
 %! assert (norm (vec (Q*R - single (Ac) - single (uc)*single (vc)'), Inf) < norm (single (Ac))*1e1*eps ("single"));
 */
 
 DEFUN_DLD (qrinsert, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{Q1}, @var{R1}] =} qrinsert (@var{Q}, @var{R}, @var{j}, @var{x}, @var{orient})
+Update a QR factorization given a row or column to insert in the original factored matrix.
+
+
 Given a QR@tie{}factorization of a real or complex matrix
 @w{@var{A} = @var{Q}*@var{R}}, @var{Q}@tie{}unitary and
 @var{R}@tie{}upper trapezoidal, return the QR@tie{}factorization of
 @w{[A(:,1:j-1) x A(:,j:n)]}, where @var{u} is a column vector to be inserted
 into @var{A} (if @var{orient} is @qcode{"col"}), or the
 QR@tie{}factorization of @w{[A(1:j-1,:);x;A(:,j:n)]}, where @var{x} is a row
 vector to be inserted into @var{A} (if @var{orient} is @qcode{"row"}).
 
@@ -1282,16 +1287,18 @@ If @var{orient} is @qcode{"row"}, full f
 %! assert (norm (vec (Q'*Q - eye (6,"single")), Inf) < 1e1*eps ("single"));
 %! assert (norm (vec (triu (R) - R), Inf) == 0);
 %! assert (norm (vec (Q*R - single ([Ac(1:2,:);x;Ac(3:5,:)])), Inf) < norm (single (Ac))*1e1*eps ("single"));
 */
 
 DEFUN_DLD (qrdelete, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{Q1}, @var{R1}] =} qrdelete (@var{Q}, @var{R}, @var{j}, @var{orient})
+Update a QR factorization given a row or column to delete from the original factored matrix.
+
 Given a QR@tie{}factorization of a real or complex matrix
 @w{@var{A} = @var{Q}*@var{R}}, @var{Q}@tie{}unitary and
 @var{R}@tie{}upper trapezoidal, return the QR@tie{}factorization of
 @w{[A(:,1:j-1), U, A(:,j:n)]},
 where @var{u} is a column vector to be inserted into @var{A}
 (if @var{orient} is @qcode{"col"}),
 or the QR@tie{}factorization of @w{[A(1:j-1,:);X;A(:,j:n)]},
 where @var{x} is a row @var{orient} is @qcode{"row"}).
@@ -1527,16 +1534,18 @@ If @var{orient} is @qcode{"row"}, full f
 %! assert (norm (vec (Q'*Q - eye (4,"single")), Inf) < 1e1*eps ("single"));
 %! assert (norm (vec (triu (R) - R), Inf) == 0);
 %! assert (norm (vec (Q*R - [AA(1:2,:);AA(4:5,:)]), Inf) < norm (AA)*1e1*eps ("single"));
 */
 
 DEFUN_DLD (qrshift, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {[@var{Q1}, @var{R1}] =} qrshift (@var{Q}, @var{R}, @var{i}, @var{j})
+Update a QR factorization given a range of columns to shift in the original factored matrix.
+
 Given a QR@tie{}factorization of a real or complex matrix
 @w{@var{A} = @var{Q}*@var{R}}, @var{Q}@tie{}unitary and
 @var{R}@tie{}upper trapezoidal, return the QR@tie{}factorization
 of @w{@var{A}(:,p)}, where @w{p} is the permutation @*
 @code{p = [1:i-1, shift(i:j, 1), j+1:n]} if @w{@var{i} < @var{j}} @*
  or @*
 @code{p = [1:j-1, shift(j:i,-1), i+1:n]} if @w{@var{j} < @var{i}}.  @*
 
diff --git a/libinterp/parse-tree/pt-jit.cc b/libinterp/parse-tree/pt-jit.cc
--- a/libinterp/parse-tree/pt-jit.cc
+++ b/libinterp/parse-tree/pt-jit.cc
@@ -2557,17 +2557,17 @@ namespace octave
         for (size_t i = 0; i < nargs; ++i)
           {
             llvm::Value *arg;
             // LLVM <= 3.6
             // arg = builder.CreateConstInBoundsGEP1_32 (wrapper_arg, i);
             / / LLVM >= 3.7
             arg = builder.CreateConstInBoundsGEP1_32 (any_t->to_llvm (),
                                                       wrapper_arg, i);
-        
+
             arg = builder.CreateLoad (arg);
 
             jit_type *arg_type = m_argument_types[i];
             const jit_function& cast = jit_typeinfo::cast (arg_type, any_t);
             raw_args[i] = cast.call (builder, arg);
           }
 
         llvm::Value *result = raw_fn.call (builder, raw_args);
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1706,16 +1706,22 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
   use_qscintilla=no
   win32_terminal=no
 
   for ver in $octave_qt_versions; do
     OCTAVE_CHECK_QT_VERSION([$ver])
     if test $build_qt_gui = yes; then
       have_qt_version=$ver
       break
+    elif test -n "$QT_MODULES_AVAILABLE"; then
+      ## If some modules were found for $ver, then warn about possible
+      ## incomplete or broken Qt installation instead of checking for
+      ## next version in the list.
+      warn_qt_modules="Your installation of Qt version $ver appears incomplete or broken in some way.  Fix that or use --with-qt=VER to use another version."
+      break
     fi
   done
 
   if test $build_qt_gui = yes; then
     BUILD_QT_SUMMARY_MSG="yes (version: $have_qt_version)"
     if test x"$have_qt_version" = x4; then
       AC_DEFINE(HAVE_QT4, 1, [Define to 1 if using Qt version 4.])
     fi
@@ -1723,16 +1729,19 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
       AC_DEFINE(HAVE_QT5, 1, [Define to 1 if using Qt version 5.])
     fi
   else
     if test -n "$QT_MODULES_MISSING"; then
       BUILD_QT_SUMMARY_MSG="no (missing:$QT_MODULES_MISSING)"
     else
       BUILD_QT_SUMMARY_MSG="no"
     fi
+    if test -n "$warn_qt_modules"; then
+      OCTAVE_CONFIGURE_WARNING([warn_qt_modules])
+    fi
     if test -n "$warn_qt_libraries"; then
       OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
     fi
     if test -n "$warn_qt_version"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_version])
     fi
     if test -n "$warn_qt_tools"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
@@ -1912,30 +1921,33 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     5)
       QT_MODULES="Qt5Core Qt5Gui Qt5Network Qt5OpenGL Qt5PrintSupport Qt5Help"
     ;;
     *)
       AC_MSG_ERROR([Unrecognized Qt version $qt_version])
     ;;
   esac
 
+  ## Use this check to get info in the log file.
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
     [build_qt_gui=no
      warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])
 
+  ## Check the modules again individually to get lists of modules that
+  ## are available and/or missing
+  QT_MODULES_AVAILABLE=
   QT_MODULES_MISSING=
-  if test $build_qt_gui = no; then
-    ## Get list of modules that are missing
-    for pkg in $QT_MODULES; do
-      if ! $PKG_CONFIG --exists $pkg; then
-        QT_MODULES_MISSING="$QT_MODULES_MISSING $pkg"
-      fi
-    done
-  fi
+  for qt_mod in $QT_MODULES; do
+    if $PKG_CONFIG --exists $qt_mod; then
+      QT_MODULES_AVAILABLE="$QT_MODULES_AVAILABLE $qt_mod"
+    else
+      QT_MODULES_MISSING="$QT_MODULES_MISSING $qt_mod"
+    fi
+  done
 
   if test $build_qt_gui = yes; then
     ## Retrieve Qt compilation and linker flags
     QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
 
     case $host_os in
diff --git a/scripts/ode/ode15i.m b/scripts/ode/ode15i.m
--- a/scripts/ode/ode15i.m
+++ b/scripts/ode/ode15i.m
@@ -17,21 +17,21 @@
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {[@var{t}, @var{y}] =} ode15i (@var{fun}, @var{trange}, @var{y0}, @var{yp0})
 ## @deftypefnx {} {[@var{t}, @var{y}] =} ode15i (@var{fun}, @var{trange}, @var{y0}, @var{yp0}, @var{ode_opt})
 ## @deftypefnx {} {[@var{t}, @var{y}, @var{te}, @var{ye}, @var{ie}] =} ode15i (@dots{})
 ## @deftypefnx {} {@var{solution} =} ode15i (@dots{})
 ## @deftypefnx {} {} ode15i (@dots{})
+## Solve a set of fully-implicit Ordinary Differential Equations (ODEs) or
+## index 1 Differential Algebraic Equations (DAEs).
 ##
-## Solve a set of fully-implicit Ordinary Differential Equations (ODEs) or
-## Differential Algebraic Equations (DAEs) of index 1, with a variable step,
-## variable order BDF (Backward Differentiation Formula) method that ranges
-## from order 1 to 5.
+## @code{ode15i} uses a variable step, variable order BDF (Backward
+## Differentiation Formula) method that ranges from order 1 to 5.
 ##
 ## @var{fun} is a function handle, inline function, or string containing the
 ## name of the function that defines the ODE: @code{0 = f(t,y,yp)}.  The
 ## function must accept three inputs where the first is time @var{t}, the
 ## second is the function value @var{y} (a column vector), and the third
 ## is the derivative value @var{yp} (a column vector).
 ##
 ## @var{trange} specifies the time interval over which the ODE will be
diff --git a/scripts/ode/ode15s.m b/scripts/ode/ode15s.m
--- a/scripts/ode/ode15s.m
+++ b/scripts/ode/ode15s.m
@@ -17,21 +17,21 @@
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {[@var{t}, @var{y}] =} ode15s (@var{fun}, @var{trange}, @var{y0})
 ## @deftypefnx {} {[@var{t}, @var{y}] =} ode15s (@var{fun}, @var{trange}, @var{y0}, @var{ode_opt})
 ## @deftypefnx {} {[@var{t}, @var{y}, @var{te}, @var{ye}, @var{ie}] =} ode15s (@dots{})
 ## @deftypefnx {} {@var{solution} =} ode15s (@dots{})
 ## @deftypefnx {} {} ode15s (@dots{})
+## Solve a set of stiff Ordinary Differential Equations (ODEs) or stiff
+## semi-explicit index 1 Differential Algebraic Equations (DAEs).
 ##
-## Solve a set of stiff Ordinary Differential Equations (ODEs) or stiff
-## semi-explicit Differential Algebraic Equations (DAEs) of index 1, with a
-## variable step, variable order BDF (Backward Differentiation Formula) method
-## that ranges from order 1 to 5.
+## @code{ode15s} uses a variable step, variable order BDF (Backward
+## Differentiation Formula) method that ranges from order 1 to 5.
 ##
 ## @var{fun} is a function handle, inline function, or string containing the
 ## name of the function that defines the ODE: @code{y' = f(t,y)}.  The function
 ## must accept two inputs where the first is time @var{t} and the second is a
 ## column vector of unknowns @var{y}.
 ##
 ## @var{trange} specifies the time interval over which the ODE will be
 ## evaluated.  Typically, it is a two-element vector specifying the initial and
diff --git a/scripts/plot/util/struct2hdl.m b/scripts/plot/util/struct2hdl.m
--- a/scripts/plot/util/struct2hdl.m
+++ b/scripts/plot/util/struct2hdl.m
@@ -112,17 +112,17 @@ function [h, pout] = struct2hdl (s, p=[]
       names{n_pos(2)} = "outerposition";
     endif
   endif
   ## Reorder the properties with the mode properties coming last
   s.properties = orderfields (s.properties, names);
 
   ## Silence deprecation warnings
   warning ("off", "Octave:deprecated-property", "local");
-  
+
   ## create object
   if (strcmp (s.type, "root"))
     h = 0;
     s.properties = rmfield (s.properties, ...
                               {"callbackobject", "commandwindowsize", ...
                                "screendepth", "screenpixelsperinch", ...
                                "screensize"});
   elseif (strcmp (s.type, "figure"))
