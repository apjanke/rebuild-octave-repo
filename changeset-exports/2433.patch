# HG changeset patch
# User jwe
# Date 846391140 0
#      Sun Oct 27 04:39:00 1996 +0000
# Node ID 3952436ca2c26f924c4f499550d079669b9fd52c
# Parent  874f758eade54b494c1913de523977e956eef7ce
[project @ 1996-10-27 04:39:00 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Sat Oct 26 23:37:34 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* file-ops.cc (mkfifo) [! HAVE_MKFIFO]: Just print an error
+	message and return -1.
+
 Fri Oct 25 01:24:51 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* str-vec.h (str_vec_compare): Declare args as const void *, then
 	cast them to const string * in the body of the function.
 
 	* file-ops.cc (file_stat::mode_as_string): Explicitly construct
 	string from buf.
 
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -29,16 +29,17 @@ Software Foundation, 59 Temple Place - S
 #include <cstdlib>
 #include <cstring>
 
 #ifdef HAVE_UNISTD_H
 #include <sys/types.h>
 #include <unistd.h>
 #endif
 
+#include "error.h"
 #include "file-ops.h"
 #include "lo-error.h"
 #include "statdefs.h"
 
 // These must come after <sys/types.h> and <sys/stat.h>.
 
 #include "safe-lstat.h"
 #include "safe-stat.h"
@@ -194,40 +195,55 @@ file_stat::copy (const file_stat& fs)
 int
 is_newer (const string& file, time_t time)
 {
   file_stat fs (file);
 
   return fs ? fs.is_newer (time) : -1;
 }
 
+// We provide a replacement for mkdir().
+
 int
 oct_mkdir (const string& name, mode_t mode)
 {
   return mkdir (name.c_str (), mode);
 }
 
+// I don't know how to emulate this on systems that don't provide it.
+
 int
 oct_mkfifo (const string& name, mode_t mode)
 {
+#if defined (HAVE_MKFIFO)
   return mkfifo (name.c_str (), mode);
+#else
+  ::error ("mkfifo: not implemented on this system");
+  return -1;
+#endif
 }
 
+// We provide a replacement for rename().
+
 int
 oct_rename (const string& from, const string& to)
 {
   return rename (from.c_str (), to.c_str ());
 }
 
+// We provide a replacement for rmdir().
+
 int
 oct_rmdir (const string& name)
 {
   return rmdir (name.c_str ());
 }
 
+// We provide a replacement for tempnam().
+
 string
 oct_tempnam (void)
 {
   string retval;
 
   char *tmp = tempnam (0, "oct-");
 
   if (tmp)
