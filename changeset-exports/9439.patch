# HG changeset patch
# User Benjamin Lindner <lindnerb@users.sourceforge.net>
# Date 1247860250 14400
#      Fri Jul 17 15:50:50 2009 -0400
# Node ID 0a696f8aa43445847d3e51fbd45b9c6c4240c13e
# Parent  bac81ac76a570d79ca68eb39b4f90da4b40fe3e4
determine correct image bitwidth in __magick_read__.cc

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-07-17  Benjamin Lindner <lindnerb@users.sourceforge.net>
+
+	* DLD-FUNCTIONS/__magick_read__.cc (F__magick_read__):
+	Determine correct number of bits required when reading images.
+
 2009-07-16  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (get_array_limits): Require min_pos value to be
 	greater than zero.
 
 2009-07-15  Robert T. Short  <octave@phaselockedsystems.com>
 
 	* DLD-FUNCTIONS/filter.cc: New tests.
diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -411,21 +411,25 @@ Instead you should use @code{imread}.\n\
 
   Magick::ClassType klass = imvec[0].classType ();
 
   if (klass == Magick::PseudoClass && nargout > 1)
     output = read_indexed_images (imvec, frameidx, (nargout == 3));
   else
     {
       unsigned int depth = imvec[0].modulusDepth ();
-      int i = 0;
-      while (depth >>= 1)
-        i++;
-      depth = 1 << i;
-
+      if (depth > 1)
+	{
+	  --depth;
+	  int i = 1;
+	  while (depth >>= 1)
+            i++;
+	  depth = 1 << i;
+	}
+      
       switch (depth)
         {
         case 1:
           output = read_images<boolNDArray> (imvec, frameidx, depth);
           break;
 
         case 2:
         case 4:
