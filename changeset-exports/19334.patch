# HG changeset patch
# User Rik <rik@octave.org>
# Date 1416422635 28800
#      Wed Nov 19 10:43:55 2014 -0800
# Branch stable
# Node ID 1213af866a890522b3924b881c0bef7158224a31
# Parent  a791930c3bda62e85451ca85089b408fcaf200c0
doc: Fix backslash not showing in error/warning docs due to escape processing.

* error.cc (Ferror, Fwarning): Remove @qcode macro around "\\n" in order for
it to be processed correctly.  Change "new line" to "newline".

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1024,17 +1024,17 @@ Format the optional arguments under the 
 functions (@pxref{Formatted Output}) and print the resulting message\n\
 on the @code{stderr} stream.  The message is prefixed by the character\n\
 string @samp{error: }.\n\
 \n\
 Calling @code{error} also sets Octave's internal error state such that\n\
 control will return to the top level without evaluating any more\n\
 commands.  This is useful for aborting from functions or scripts.\n\
 \n\
-If the error message does not end with a new line character, Octave will\n\
+If the error message does not end with a newline character, Octave will\n\
 print a traceback of all the function calls leading to the error.  For\n\
 example, given the following function definitions:\n\
 \n\
 @example\n\
 @group\n\
 function f () g (); end\n\
 function g () h (); end\n\
 function h () nargin == 1 || error (\"nargin != 1\"); end\n\
@@ -1052,20 +1052,20 @@ error: nargin != 1\n\
 error: called from:\n\
 error:   error at line -1, column -1\n\
 error:   h at line 1, column 27\n\
 error:   g at line 1, column 15\n\
 error:   f at line 1, column 15\n\
 @end group\n\
 @end example\n\
 \n\
-If the error message ends in a new line character, Octave will print the\n\
+If the error message ends in a newline character, Octave will print the\n\
 message but will not display any traceback messages as it returns\n\
 control to the top level.  For example, modifying the error message\n\
-in the previous example to end in a new line causes Octave to only print\n\
+in the previous example to end in a newline causes Octave to only print\n\
 a single message:\n\
 \n\
 @example\n\
 @group\n\
 function h () nargin == 1 || error (\"nargin != 1\\n\"); end\n\
 f ()\n\
 error: nargin != 1\n\
 @end group\n\
@@ -1088,17 +1088,17 @@ endif\n\
 error (err_msg);\n\
 @end group\n\
 @end example\n\
 \n\
 @noindent\n\
 which will only stop execution if an error has been found.\n\
 \n\
 Implementation Note: For compatibility with @sc{matlab}, escape\n\
-sequences (e.g., @qcode{\"\\n\"} => newline) are processed in @var{template}\n\
+sequences (e.g., \"\\n\" => newline) are processed in @var{template}\n\
 regardless of whether @var{template} has been defined within single quotes\n\
 as long as there are two or more input arguments.\n\
 Use a second backslash to stop interpolation of the escape sequence (e.g.,\n\
 \"\\\\n\") or use the @code{regexptranslate} function.\n\
 @seealso{warning, lasterror}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -1260,17 +1260,17 @@ and the third argument is @qcode{\"local
 will be set temporarily, until the end of the current function.\n\
 Changes to warning states that are set locally affect the current\n\
 function and all functions called from the current scope.  The\n\
 previous warning state is restored on return from the current\n\
 function.  The @qcode{\"local\"} option is ignored if used in the top-level\n\
 workspace.\n\
 \n\
 Implementation Note: For compatibility with @sc{matlab}, escape\n\
-sequences (e.g., @qcode{\"\\n\"} => newline) are processed in @var{template}\n\
+sequences (e.g., \"\\n\" => newline) are processed in @var{template}\n\
 regardless of whether @var{template} has been defined within single quotes\n\
 as long as there are two or more input arguments.\n\
 Use a second backslash to stop interpolation of the escape sequence (e.g.,\n\
 \"\\\\n\") or use the @code{regexptranslate} function.\n\
 @seealso{warning_ids, lastwarn, error}\n\
 @end deftypefn")
 {
   octave_value retval;
