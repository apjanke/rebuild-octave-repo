# HG changeset patch
# User Rik <rik@octave.org>
# Date 1385572280 28800
#      Wed Nov 27 09:11:20 2013 -0800
# Branch stable
# Node ID 9f59f4f749860cb5971bc42bcb22737565ec2870
# Parent  f1d791ffeeb44bcedeedb15ed7b7c2299da8dd19
test: Run test suite tests in compilation order (liboctave, libinterp, scripts).

* __run_test_suite__.m: Run liboctave tests ahead of libinterp tests.

* test/fntests.m: Run liboctave tests ahead of libinterp tests.

diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -23,17 +23,17 @@
 
 function __run_test_suite__ (fcndirs, fixedtestdirs)
   testsdir = octave_config_info ("octtestsdir");
   libinterptestdir = fullfile (testsdir, "libinterp");
   liboctavetestdir = fullfile (testsdir, "liboctave");
   fixedtestdir = fullfile (testsdir, "fixed");
   fcnfiledir = octave_config_info ("fcnfiledir");
   if (nargin == 0)
-    fcndirs = { libinterptestdir, liboctavetestdir, fcnfiledir };
+    fcndirs = { liboctavetestdir, libinterptestdir, fcnfiledir };
     fixedtestdirs = { fixedtestdir };
   endif
   global files_with_no_tests = {};
   global files_with_tests = {};
   ## FIXME: These names don't really make sense if we are running
   ##        tests for an installed copy of Octave.
   global topsrcdir = fcnfiledir;
   global topbuilddir = testsdir;
diff --git a/test/fntests.m b/test/fntests.m
--- a/test/fntests.m
+++ b/test/fntests.m
@@ -38,20 +38,20 @@ topsrcdir = canonicalize_file_name (full
 topbuilddir = canonicalize_file_name (fullfile (currdir, ".."));
 
 if (strcmp (currdir, srcdir))
   testdirs = {srcdir};
 else
   testdirs = {currdir, srcdir};
 endif
 
+liboctave_tree = canonicalize_file_name (fullfile (topbuilddir, "liboctave"));
 src_tree = canonicalize_file_name (fullfile (topbuilddir, "libinterp"));
-liboctave_tree = canonicalize_file_name (fullfile (topbuilddir, "liboctave"));
 script_tree = canonicalize_file_name (fullfile (topsrcdir, "scripts"));
 local_script_tree = canonicalize_file_name (fullfile (currdir, "../scripts"));
 
-fundirs = {src_tree, liboctave_tree, script_tree};
+fundirs = {liboctave_tree, src_tree, script_tree};
 
 if (! strcmp (currdir, srcdir))
   fundirs{end+1} = local_script_tree;
 endif
 
 __run_test_suite__ (fundirs, testdirs);
