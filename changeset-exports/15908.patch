# HG changeset patch
# User CarnÃ« Draug <carandraug+dev@gmail.com>
# Date 1357509551 0
#      Sun Jan 06 21:59:11 2013 +0000
# Node ID 5a4a07a2ec732410a2d1ce47b06a281c60840584
# Parent  53ec9063dc6d6b520bfb4a26c98013082480ebf5
doc: add while and do-until example to help text (bug #7915)

diff --git a/libinterp/interpfcn/help.cc b/libinterp/interpfcn/help.cc
--- a/libinterp/interpfcn/help.cc
+++ b/libinterp/interpfcn/help.cc
@@ -473,17 +473,26 @@ Jump to the end of the innermost enclosi
 @seealso{do, while, for, parfor, break}\n\
 @end deftypefn"),
 
   pair_type ("do",
     "-*- texinfo -*-\n\
 @deftypefn {Keyword} {} do\n\
 Begin a do-until loop.  This differs from a do-while loop in that the\n\
 body of the loop is executed at least once.\n\
-@seealso{while}\n\
+\n\
+@example\n\
+@group\n\
+i = 0;\n\
+do\n\
+  i++\n\
+until (i == 10)\n\
+@end group\n\
+@end example\n\
+@seealso{for, until, while}\n\
 @end deftypefn"),
 
   pair_type ("else",
     "-*- texinfo -*-\n\
 @deftypefn {Keyword} {} else\n\
 Alternate action for an if block.  See @code{if} for an example.\n\
 @seealso{if}\n\
 @end deftypefn"),
@@ -703,17 +712,17 @@ execution will proceed after the catch b
 recommended to use the lasterr function to re-throw the error after cleanup\n\
 is completed).\n\
 @seealso{catch, unwind_protect}\n\
 @end deftypefn"),
 
   pair_type ("until",
     "-*- texinfo -*-\n\
 @deftypefn {Keyword} {} until\n\
-End a do-until loop.\n\
+End a do-until loop.  See @code{do} for an example.\n\
 @seealso{do}\n\
 @end deftypefn"),
 
   pair_type ("unwind_protect",
     "-*- texinfo -*-\n\
 @deftypefn {Keyword} {} unwind_protect\n\
 Begin an unwind_protect block.\n\
 \n\
@@ -746,17 +755,26 @@ Pass an arbitrary number of arguments in
 Pass an arbitrary number of arguments out of a function.\n\
 @seealso{varargin, nargin, isargout, nargout, nthargout}\n\
 @end deftypefn"),
 
   pair_type ("while",
     "-*- texinfo -*-\n\
 @deftypefn {Keyword} {} while\n\
 Begin a while loop.\n\
-@seealso{do}\n\
+\n\
+@example\n\
+@group\n\
+i = 0;\n\
+while (i < 10)\n\
+  i++\n\
+endwhile\n\
+@end group\n\
+@end example\n\
+@seealso{do, endwhile, for, until}\n\
 @end deftypefn"),
 };
 
 // Return a copy of the operator or keyword names.
 static string_vector
 names (const map_type& lst)
 {
   string_vector retval (lst.size ());
