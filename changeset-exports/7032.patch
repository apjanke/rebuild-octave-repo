# HG changeset patch
# User jwe
# Date 1192465915 0
#      Mon Oct 15 16:31:55 2007 +0000
# Node ID 4d4197ffb09dd47293a3c583458ed850662648a2
# Parent  120f3135952f9802c9732e8087fc83cfc256ce5c
[project @ 2007-10-15 16:31:55 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -5,16 +5,19 @@ 2007-10-15  Søren Hauberg  <hauberg@gmail.com>
 	control/system/ss.m, signal/arch_rnd.m, control/system/ss2sys.m,
 	control/system/syssetsignals.m, control/base/lqg.m,
 	strings/str2double.m, control/system/sysscale.m,
 	control/hinf/hinfdemo.m, general/cplxpair.m:
 	Make help text fit on pages when using smallbook.
 
 2007-10-15  David Bateman  <dbateman@free.fr>
 
+	* plot/print.m: Call drawnow before printing to ensure the plot is
+	on the screen.
+
 	* testfun/test.m: In error/warning blocks test for an error before
 	a warning to avoid unexpected failures.
 
 2007-10-15  Kim Hansen  i<kimhanse@gmail.com>
 
 	* testfun/assert.m: Correct documentation of absolution versus 
 	relative error tolerance and add tests.
 
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -123,16 +123,20 @@ function print (varargin)
   font = "";
   size = "";
   name = "";
   devopt = "";
   printer = "";
   debug = false;
   debug_file = "octave-print-commands.log";
 
+  ## Ensure the last figure is on the screen for single line commands like
+  ##   plot(...); print(...);
+  drawnow ();
+
   for i = 1:nargin
     arg = varargin{i};
     if (ischar (arg))
       if (strcmp (arg, "-color"))
 	use_color = 1;
       elseif (strcmp (arg, "-mono"))
 	use_color = -1;
       elseif (strcmp (arg, "-solid"))
diff --git a/scripts/statistics/distributions/frnd.m b/scripts/statistics/distributions/frnd.m
--- a/scripts/statistics/distributions/frnd.m
+++ b/scripts/statistics/distributions/frnd.m
@@ -73,26 +73,43 @@ function rnd = frnd (m, n, r, c)
   elseif (nargin == 2)
     sz = size(a);
   else
     print_usage ();
   endif
 
 
   if (isscalar (m) && isscalar (n))
-    if ((m > 0) && (m < Inf) && (n > 0) && (n < Inf))
-      rnd = n ./ m .* randg(m/2,sz) ./ randg(n/2,sz);
+    if (isinf (m) || isinf (n))
+      if (isinf (m))
+	rnd = ones (sz);
+      else
+	rnd = 2 ./ m .* randg(m / 2, sz);
+      endif
+      if (! isinf (n))
+	rnd = 0.5 .* n .* rnd ./ randg (n / 2, sz); 
+      endif
+    elseif ((m > 0) && (m < Inf) && (n > 0) && (n < Inf))
+      rnd = n ./ m .* randg (m / 2, sz) ./ randg (n / 2, sz);
     else
       rnd = NaN * ones (sz);
     endif
   else
     rnd = zeros (sz);
 
-    k = find (!(m > 0) | !(m < Inf) |
-              !(n > 0) | !(n < Inf));
+    k = find (isinf(m) | isinf(n));
+    if (any (k))
+      rnd (k) = 1;
+      k2 = find (!isinf(m) & isinf(n));
+      rnd (k2) = 2 ./ m(k2) .* randg (m(k2) ./ 2, size(k2));
+      k2 = find (isinf(m) & !isinf(n));
+      rnd (k2) = 0.5 .* n(k2) .* rnd(k2) ./ randg (n(k2) ./ 2, size(k2));
+    endif
+
+    k = find (!(m > 0) | !(n > 0));
     if (any (k))
       rnd(k) = NaN;
     endif
 
     k = find ((m > 0) & (m < Inf) &
               (n > 0) & (n < Inf));
     if (any (k))
       rnd(k) = n(k) ./ m(k) .* randg(m(k)./2,size(k)) ./ randg(n(k)./2,size(k));
