# HG changeset patch
# User Jordi Guti√©rrez Hermoso <jordigh@gmail.com>
# Date 1311924674 18000
#      Fri Jul 29 02:31:14 2011 -0500
# Node ID 00f5292aefeb8c6ee36077ab127990766d6ae2a1
# Parent  0ca8f06aba7a59b5e7bad4a92ff73e1222760b26
Backout 12897:503865c2e542

diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -165,17 +165,16 @@ char ([97, 98, 99], \"\", @{\"98\", \"99
 */
 
 DEFUN (strvcat, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} strvcat (@var{x})\n\
 @deftypefnx {Built-in Function} {} strvcat (@var{x}, @dots{})\n\
 @deftypefnx {Built-in Function} {} strvcat (@var{s1}, @var{s2}, @dots{})\n\
 @deftypefnx {Built-in Function} {} strvcat (@var{cell_array})\n\
-@deftypefnx {Built-in Function} {} strvcat ()\n\
 Create a character array from one or more numeric matrices, character\n\
 matrices, or cell arrays.  Arguments are concatenated vertically.\n\
 The returned values are padded with blanks as needed to make each row\n\
 of the string array have the same length.  Unlike @code{char}, empty\n\
 strings are removed and will not appear in the output.\n\
 \n\
 For numerical input, each element is converted\n\
 to the corresponding ASCII character.  A range error results if an input\n\
@@ -192,19 +191,16 @@ strvcat ([97, 98, 99], \"\", @{\"98\", \
      @result{} [\"abc    \"\n\
          \"98     \"\n\
          \"99     \"\n\
          \"d      \"\n\
          \"str1   \"\n\
          \"half   \"]\n\
 @end group\n\
 @end example\n\
-\n\
-For compatibility with @sc{Matlab}, calling @code{strvcat} without arguments\n\
-returns the empty string.\n\
 @seealso{char, strcat, cstrcat}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin > 0)
@@ -272,17 +268,17 @@ returns the empty string.\n\
                     }
                 }
             }
         }
 
       retval = octave_value (result, '\'');
     }
   else
-    retval = octave_value ("");
+    print_usage ();
 
   return retval;
 }
 
 /*
 %!error <Invalid call to strvcat> strvcat()
 %!assert (strvcat (""), "");
 %!assert (strvcat (100) == "d");
