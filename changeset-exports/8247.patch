# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1224519748 14400
#      Mon Oct 20 12:22:28 2008 -0400
# Node ID e41f420875dbb65416b3ca013f727e50c38fec00
# Parent  db19494c7c2a3735ddba417c10a9e9ec8620e07a
set name of root_figure object to root

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2008-10-20  John W. Eaton  <jwe@octave.org>
+
+	* genprops.awk: Allow whitespace between BEGIN_PROPERTIES and
+	opening paren.  Accept optional second argument for graphics
+	object name.
+	* graphics.h.in (root_figure properties): Pass "root" as second
+	arg to BEGIN_PROPERTIES.
+
 2008-10-16  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (make_handle_fraction): New static function.
 	(gh_manager::get_handle): Use it.
 	(gh_manager::do_free): Call make_handle_fraction to replace
 	fractional part of non-figure handles.
 
 	* graphics.cc (base_properties::remove_child): Handle children as
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -553,35 +553,43 @@ function emit_source ()
     }
 
     printf ("\n  return m;\n}\n\n") >> filename;
 
     ## go_name static field
 
     if (! base)
       printf ("std::string %s::properties::go_name (\"%s\");\n\n",
-              class_name, class_name) >> filename;
+              class_name, object_name) >> filename;
   }
 }
 
 BEGIN {
   filename = "graphics-props.cc";
   printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n");
   printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n") > filename;
   pcount = 0;
 }
 
-/BEGIN_PROPERTIES\(.*\)/ {
+/BEGIN_PROPERTIES *\(.*\)/ {
   gather = 1;
   idx = 0;
   str = $0;
-  k = index (str, "BEGIN_PROPERTIES(");
-  str = substr (str, k + 17);
-  l = index (str, ")");
-  class_name = substr (str, 1, l-1);
+  beg = index (str, "(") + 1;
+  len = index (str, ")") - beg;
+  args = substr (str, beg, len);
+  n = split (args, arg_list, ",");
+  if (n > 0)
+      class_name = arg_list[1];
+  if (n > 1)
+      object_name = arg_list[2];
+  else
+      object_name = class_name;
+  gsub (/ /, "", class_name);
+  gsub (/ /, "", object_name);
   base = 0;
   next;
 }
 
 /BEGIN_PROPERTIES/ {
   gather = 1;
   idx = 0;
   class_name = "";
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -2089,17 +2089,17 @@ public:
   class OCTINTERP_API properties : public base_properties
   {
   public:
     void remove_child (const graphics_handle& h);
     
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(root_figure)
+    BEGIN_PROPERTIES (root_figure, root)
       handle_property currentfigure S , graphics_handle ()
       handle_property callbackobject Sr , graphics_handle ()
       bool_property showhiddenhandles , "off"
     END_PROPERTIES
 
   private:
     std::list<graphics_handle> cbo_stack;
   };
@@ -2255,17 +2255,17 @@ public:
 
     void set_boundingbox (const Matrix& bb);
 
     std::string get_title (void) const;
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(figure)
+    BEGIN_PROPERTIES (figure)
       any_property __plot_stream__ h , Matrix ()
       bool_property __enhanced__ h , "on"
       radio_property nextplot , "new|{add}|replace_children|replace"
       callback_property closerequestfcn , "closereq"
       handle_property currentaxes S , graphics_handle ()
       array_property colormap , jet_colormap ()
       radio_property paperorientation , "{portrait}|landscape|rotated"
       color_property color , color_values (1, 1, 1)
@@ -2536,17 +2536,17 @@ public:
 
     void delete_text_child (handle_property& h);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     // properties which are not in matlab: interpreter
 
-    BEGIN_PROPERTIES(axes)
+    BEGIN_PROPERTIES (axes)
       array_property position u , default_axes_position ()
       handle_property title SOf , gh_manager::make_graphics_handle ("text", __myhandle__)
       bool_property box , "on"
       bool_property key , "off"
       bool_property keybox , "off"
       any_property keypos , 1
       array_property colororder , default_colororder ()
       array_property dataaspectratio m , Matrix (1, 3, 1.0)
@@ -2836,17 +2836,17 @@ public:
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     // properties which are not in matlab:
     // ldata, udata, xldata, xudata, keylabel, interpreter
 
-    BEGIN_PROPERTIES(line)
+    BEGIN_PROPERTIES (line)
       row_vector_property xdata u , default_data ()
       row_vector_property ydata u , default_data ()
       row_vector_property zdata u , Matrix ()
       row_vector_property ldata u , Matrix ()
       row_vector_property udata u , Matrix ()
       row_vector_property xldata u , Matrix ()
       row_vector_property xudata u , Matrix ()
       color_property color , color_values (0, 0, 0)
@@ -2913,17 +2913,17 @@ class OCTINTERP_API text : public base_g
 {
 public:
   class OCTINTERP_API properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(text)
+    BEGIN_PROPERTIES (text)
       string_property string , ""
       radio_property units , "{data}|pixels|normalized|inches|centimeters|points"
       array_property position u , Matrix (1, 3, 0.0)
       double_property rotation , 0
       radio_property horizontalalignment , "{left}|center|right"
       color_property color , color_values (0, 0, 0)
       string_property fontname , "Helvetica"
       double_property fontsize , 10
@@ -3011,17 +3011,17 @@ public:
     bool is_climinclude (void) const
       { return (climinclude.is_on () && cdatamapping.is ("scaled")); }
     std::string get_climinclude (void) const
       { return climinclude.current_value (); }
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(image)
+    BEGIN_PROPERTIES (image)
       row_vector_property xdata u , Matrix ()
       row_vector_property ydata u , Matrix ()
       array_property cdata u , Matrix ()
       radio_property cdatamapping al , "{scaled}|direct"
       // hidden properties for limit computation
       row_vector_property xlim hlr , Matrix()
       row_vector_property ylim hlr , Matrix()
       row_vector_property clim hlr , Matrix()
@@ -3096,17 +3096,17 @@ public:
     bool is_aliminclude (void) const
       { return (aliminclude.is_on () && alphadatamapping.is ("scaled")); }
     std::string get_aliminclude (void) const
       { return aliminclude.current_value (); }
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(patch)
+    BEGIN_PROPERTIES (patch)
       array_property xdata u , Matrix ()
       array_property ydata u , Matrix ()
       array_property zdata u , Matrix ()
       array_property cdata u , Matrix ()
       radio_property cdatamapping l , "{scaled}|direct"
       array_property faces , Matrix ()
       array_property facevertexalphadata , Matrix ()
       array_property facevertexcdata , Matrix ()
@@ -3214,17 +3214,17 @@ public:
     bool is_aliminclude (void) const
       { return (aliminclude.is_on () && alphadatamapping.is ("scaled")); }
     std::string get_aliminclude (void) const
       { return aliminclude.current_value (); }
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(surface)
+    BEGIN_PROPERTIES (surface)
       array_property xdata u , Matrix ()
       array_property ydata u , Matrix ()
       array_property zdata u , Matrix ()
       array_property cdata u , Matrix ()
       radio_property cdatamapping al , "{scaled}|direct"
       color_property facecolor , "{flat}|none|interp|texturemap"
       double_radio_property facealpha , double_radio_property (1.0, radio_values ("flat|interp"))
       color_property edgecolor , color_property (color_values (0, 0, 0), radio_values ("flat|none|interp"))
@@ -3361,17 +3361,17 @@ public:
       {
 	base_properties::adopt (h);
 	update_limits ();
       }
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
-    BEGIN_PROPERTIES(hggroup)
+    BEGIN_PROPERTIES (hggroup)
       // hidden properties for limit computation
       row_vector_property xlim hr , Matrix()
       row_vector_property ylim hr , Matrix()
       row_vector_property zlim hr , Matrix()
       row_vector_property clim hr , Matrix()
       row_vector_property alim hr , Matrix()
       bool_property xliminclude h , "on"
       bool_property yliminclude h , "on"
