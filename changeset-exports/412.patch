# HG changeset patch
# User jwe
# Date 766830304 0
#      Wed Apr 20 08:25:04 1994 +0000
# Node ID 116ab89ce023542a66b5fae4493c70aba89c3c6f
# Parent  b936220a35cf55209394522ba0a71a74b8209d10
[project @ 1994-04-20 08:25:04 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -371,17 +371,17 @@ EXPON	([DdEe][+-]?{D}+)
 			      int c1 = yyinput ();
 			      unput (c1);
 			      int other_op = match_any (c1, ",;\n]");
 
 			      if (! (postfix_un_op || bin_op || other_op)
 				     && in_brace_or_paren.top ()
 				     && convert_spaces_to_comma)
 				{
-				  unput (',');
+				  unput (','); /* XXX */
 				  return ']';
 				}
 			    }
 
 			  quote_is_transpose = 1;
 			  cant_be_identifier = 0;
 			  convert_spaces_to_comma = 1;
 			  return ']';
@@ -392,17 +392,17 @@ EXPON	([DdEe][+-]?{D}+)
 <MATRIX>{S}+		{
 			  int bin_op = next_token_is_bin_op (1, yytext);
 			  int postfix_un_op
 			    = next_token_is_postfix_unary_op (1, yytext);
 
  			  if (! (postfix_un_op || bin_op)
 			      && in_brace_or_paren.top ()
 			      && convert_spaces_to_comma)
-			    TOK_RETURN (',');
+			    TOK_RETURN (','); /* XXX */
 			}
 
 <MATRIX>{SN}*\;{SN}*	|
 <MATRIX>{N}{SN}*	{
 			  fixup_column_count (yytext);
 			  quote_is_transpose = 0;
 			  cant_be_identifier = 0;
 			  convert_spaces_to_comma = 1;
@@ -465,26 +465,16 @@ EXPON	([DdEe][+-]?{D}+)
 
 \[{S}*		{
 		  in_brace_or_paren.push (1);
 		  if (plotting && ! past_plot_range)
 		    {
 		      in_plot_range = 1;
 		      TOK_RETURN (OPEN_BRACE);
 		    }
-
-		  if (do_comma_insert)
-		    {
-		      yyless (0);
-		      do_comma_insert = 0;
-		      quote_is_transpose = 0;
-		      cant_be_identifier = 0;
-		      convert_spaces_to_comma = 1;
-		      return (',');
-		    }
 		  else
 		    {
 		      mlnm.push (1);
 		      braceflag++;
 		      promptflag--;
 		      BEGIN NEW_MATRIX;
 		      TOK_RETURN ('[');
 		    }
@@ -1447,20 +1437,22 @@ handle_identifier (char *tok, int next_t
       int spc_prev = (c0 == ' ' || c0 == '\t');
       int bin_op = next_token_is_bin_op (spc_prev, yytext);
 
       int postfix_un_op = next_token_is_postfix_unary_op (spc_prev,
 							  yytext);
 
       int c1 = yyinput ();
       unput (c1);
-      int other_op = match_any (c1, ",;\n](");
+      int other_op = match_any (c1, ",;\n]");
 
-      if (! (postfix_un_op || bin_op || other_op))
-	unput (',');
+      int index_op = (! spc_prev && c1 == '(');
+
+      if (! (postfix_un_op || bin_op || other_op || index_op))
+	unput (','); /* XXX */
     }
 
   return NAME;
 }
 
 /*
  * Print a warning if a function file that defines a function has
  * anything other than comments and whitespace following the END token
