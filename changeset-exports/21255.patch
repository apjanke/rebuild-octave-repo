# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1452332449 -39600
#      Sat Jan 09 20:40:49 2016 +1100
# Branch stable
# Node ID 6209f428426cdbe9d8f403932526491c5d35ec2c
# Parent  f09f7dd58503a213581971b441650bfb9c3cafb4
Fix memory corruption allocating to sparse arrays (bug #42825).

* liboctave/array/Sparse.cc (Sparse<T>::assign): make room by using
std::copy_backward.

diff --git a/liboctave/array/Sparse.cc b/liboctave/array/Sparse.cc
--- a/liboctave/array/Sparse.cc
+++ b/liboctave/array/Sparse.cc
@@ -2064,20 +2064,20 @@ Sparse<T>::assign (const idx_vector& idx
 
               if (new_nz >= nz && new_nz <= capacity ())
                 {
                   // Adding/overwriting elements, enough capacity allocated.
 
                   if (new_nz > nz)
                     {
                       // Make room first.
-                      std::copy (data () + ui, data () + nz,
-                                 data () + li + rnz);
-                      std::copy (ridx () + ui, ridx () + nz,
-                                 ridx () + li + rnz);
+                      std::copy_backward (data () + ui, data () + nz,
+                                          data () + new_nz);
+                      std::copy_backward (ridx () + ui, ridx () + nz,
+                                          ridx () + new_nz);
                       mx_inline_add2 (nc - ub, cidx () + ub + 1, new_nz - nz);
                     }
 
                   // Copy data and indices from rhs.
                   std::copy (rhs.data (), rhs.data () + rnz, data () + li);
                   std::copy (rhs.ridx (), rhs.ridx () + rnz, ridx () + li);
                   mx_inline_add (ub - lb, cidx () + lb + 1, rhs.cidx () + 1,
                                  li);
