# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1376682183 14400
#      Fri Aug 16 15:43:03 2013 -0400
# Node ID aa09b746fa16b6bdb4c9f0f9316be6dc2a047bc7
# Parent  2ab5636ee75fcaa5365466d008ef1528b5c25f3d
Windows GUI: Reimplement tabbing in terminal window

* libgui/qterminal/libqterminal/win32/QWinTerminalImpl.h, libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
  (QWinTerminalImpl::QWinTerminalImpl): Install event filter.
  (QWinTerminalImpl::eventFilter): New function.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -1222,16 +1222,18 @@ QConsolePrivate::cursorRect (void)
                 cw, ch);
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 QWinTerminalImpl::QWinTerminalImpl (QWidget* parent)
     : QTerminal (parent), d (new QConsolePrivate (this))
 {
+    installEventFilter (this);
+
     connect (this, SIGNAL (set_global_shortcuts_signal (bool)),
            parent, SLOT (set_global_shortcuts (bool)));
 }
 
 //////////////////////////////////////////////////////////////////////////////
 
 QWinTerminalImpl::QWinTerminalImpl (const QString& cmd, QWidget* parent)
     : QTerminal (parent), d (new QConsolePrivate (this, cmd))
@@ -1392,16 +1394,32 @@ void QWinTerminalImpl::focusOutEvent (QF
   // Force the cursor to be redrawn.
   d->m_cursorBlinking = true;
 
   setBlinkingCursorState (false);
 
   QWidget::focusOutEvent (event);
 }
 
+bool QWinTerminalImpl::eventFilter (QObject *obj, QEvent * event)
+{
+  // if a keypress, filter out tab keys so that the next/prev tabbing is
+  // disabled - but we still need to pass along to the console .
+  if (event->type () == QEvent::KeyPress)
+  {
+    QKeyEvent* k = static_cast<QKeyEvent*>(event);
+    if (k->key () == Qt::Key_Tab)
+    {
+      sendText ("\t");
+      return true;
+    }
+  }
+  return false;
+}
+
 void QWinTerminalImpl::keyPressEvent (QKeyEvent* event)
 {
   QString s = translateKey (event);
   if (!s.isEmpty ())
     sendText (s);
 
   if (d->m_hasBlinkingCursor)
     {
diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.h b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.h
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.h
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.h
@@ -81,16 +81,18 @@ protected:
   void focusInEvent (QFocusEvent*);
   void focusOutEvent (QFocusEvent*);
   void keyPressEvent (QKeyEvent*);
   virtual void start (void);
   void mouseMoveEvent (QMouseEvent *event);
   void mousePressEvent (QMouseEvent *event);
   void mouseReleaseEvent (QMouseEvent *event);
 
+  bool eventFilter(QObject *obj, QEvent *ev);
+
 private slots:
   void scrollValueChanged (int value);
   void monitorConsole (void);
   void updateSelection (void);
 
 private:
   QConsolePrivate* d;
 };
