# HG changeset patch
# User Torsten Lilge <ttl-octave@mailbox.org>
# Date 1552243886 -3600
#      Sun Mar 10 19:51:26 2019 +0100
# Node ID ce972086bfd6cd48f33e5e02e3e450494dea111f
# Parent  69722280102ceeb61f3db97df446ad83ac5f20cc
save & run action in editor now also continues in debug mode (bug #44730)

* file-editor.cc (handle_enter_debug_mode): run action stays enabled but
  the tooltip is updated, prevent ambigous shortcuts;
  (handle_exit_debug_mode): back to normal tooltip;
  (request_run_file): Check for debug maode and emit new signal for
  requesting dbcont if it is;
  (construct): new menu name containing continue, connect new signal to
  the slot of the dbcont action in main_window

* file-editor.h: new signal request_dbcont_signal

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -144,24 +144,30 @@ namespace octave
     m_edit_menu->insertSeparator (m_selectall_action);
     // find files
     m_find_files_action = shared_actions.at (FIND_FILES_ACTION);
     m_edit_menu->insertAction (m_find_action, m_find_files_action);
   }
 
   void file_editor::handle_enter_debug_mode (void)
   {
-    m_run_action->setEnabled (false);
-    m_run_action->setShortcut (QKeySequence ());
+    QSettings *settings = resource_manager::get_settings ();
+    QString sc_run = settings->value ("shortcuts/editor_run:run_file").toString ();
+    QString sc_cont = settings->value ("shortcuts/main_debug:continue").toString ();
+
+    if (sc_run == sc_cont)
+      m_run_action->setShortcut (QKeySequence ());  // prevent ambigous shortcuts
+
+    m_run_action->setToolTip (tr ("Continue"));   // update tool tip
   }
 
   void file_editor::handle_exit_debug_mode (void)
   {
-    m_run_action->setEnabled (true);
     shortcut_manager::set_shortcut (m_run_action, "editor_run:run_file");
+    m_run_action->setToolTip (tr ("Save File and Run"));  // update tool tip
   }
 
   void file_editor::check_actions (void)
   {
     bool have_tabs = m_tab_widget->count () > 0;
 
     m_edit_cmd_menu->setEnabled (have_tabs);
     m_edit_fmt_menu->setEnabled (have_tabs);
@@ -536,17 +542,20 @@ namespace octave
 
   void file_editor::request_save_file_as (bool)
   {
     emit fetab_save_file_as (m_tab_widget->currentWidget ());
   }
 
   void file_editor::request_run_file (bool)
   {
-    emit fetab_run_file (m_tab_widget->currentWidget ());
+    if ((Fisdebugmode ())(0).is_true ())
+      emit request_dbcont_signal ();
+    else
+      emit fetab_run_file (m_tab_widget->currentWidget ());
   }
 
   void file_editor::request_step_into_file ()
   {
     emit fetab_run_file (m_tab_widget->currentWidget (), true);
   }
 
   void file_editor::request_context_run (bool)
@@ -2020,17 +2029,17 @@ namespace octave
 
     // run menu
 
     QMenu *_run_menu = add_menu (m_menu_bar, tr ("&Run"));
 
     m_run_action
       = add_action (_run_menu,
                     resource_manager::icon ("system-run"),
-                    tr ("Save File and Run"),
+                    tr ("Save File and Run / Continue"),
                     SLOT (request_run_file (bool)));
 
     m_run_selection_action
       = add_action (_run_menu,
                     tr ("Run &Selection"),
                     SLOT (request_context_run (bool)));
     m_run_selection_action->setEnabled (false);
 
@@ -2115,16 +2124,19 @@ namespace octave
     ctx_men->addAction (m_close_all_action);
     ctx_men->addAction (m_close_others_action);
 
     // signals
     connect (this, SIGNAL (request_settings_dialog (const QString&)),
              main_win (),
              SLOT (process_settings_dialog_request (const QString&)));
 
+    connect (this, SIGNAL (request_dbcont_signal (void)),
+             main_win (), SLOT (debug_continue (void)));
+
     connect (m_mru_file_menu, SIGNAL (triggered (QAction *)),
              this, SLOT (request_mru_open_file (QAction *)));
 
     mru_menu_update ();
 
     connect (m_tab_widget, SIGNAL (tabCloseRequested (int)),
              this, SLOT (handle_tab_close_request (int)));
 
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -172,16 +172,17 @@ namespace octave
     void fetab_set_directory (const QString& dir);
     void fetab_recover_from_exit (void);
 
     void request_settings_dialog (const QString&);
     void request_open_file_external (const QString& file_name, int line);
     void file_loaded_signal (void);
 
     void editor_tabs_changed_signal (bool);
+    void request_dbcont_signal (void);
 
   public slots:
 
     void focus (void);
     void set_focus (QWidget *fet);
     void enable_menu_shortcuts (bool);
     bool check_closing (void);
 
