# HG changeset patch
# User jwe
# Date 1202067266 0
#      Sun Feb 03 19:34:26 2008 +0000
# Node ID da006c2fe55cd5ff68709e3b0b86a09c5a55da7f
# Parent  0207ba146089ee411e644de2bcc5536df27526af
[project @ 2008-02-03 19:34:26 by jwe]

diff --git a/liboctave/Array-i.cc b/liboctave/Array-i.cc
--- a/liboctave/Array-i.cc
+++ b/liboctave/Array-i.cc
@@ -30,19 +30,25 @@ along with Octave; see the file COPYING.
 // Instantiate Arrays of integer values.
 
 #include "Array.h"
 #include "Array.cc"
 #include "oct-sort.cc"
 
 INSTANTIATE_ARRAY_SORT (int);
 INSTANTIATE_ARRAY_SORT (long);
+#if defined (HAVE_LONG_LONG_INT)
+INSTANTIATE_ARRAY_SORT (long long);
+#endif
 
 INSTANTIATE_ARRAY_AND_ASSIGN (int, OCTAVE_API);
 INSTANTIATE_ARRAY_AND_ASSIGN (long, OCTAVE_API);
+#if defined (HAVE_LONG_LONG_INT)
+INSTANTIATE_ARRAY_AND_ASSIGN (long long, OCTAVE_API);
+#endif
 
 INSTANTIATE_ARRAY_ASSIGN (int, short, OCTAVE_API);
 INSTANTIATE_ARRAY_ASSIGN (int, char, OCTAVE_API);
 
 INSTANTIATE_ARRAY_SORT (octave_int8);
 INSTANTIATE_ARRAY_SORT (octave_int16);
 INSTANTIATE_ARRAY_SORT (octave_int32);
 INSTANTIATE_ARRAY_SORT (octave_int64);
diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -31,17 +31,16 @@ along with Octave; see the file COPYING.
 
 #include <iostream>
 #include <sstream>
 #include <vector>
 #include <new>
 
 #include "Array.h"
 #include "Array-util.h"
-#include "Range.h"
 #include "idx-vector.h"
 #include "lo-error.h"
 
 // One dimensional array class.  Handles the reference counting for
 // all the derived classes.
 
 template <class T>
 Array<T>::Array (const Array<T>& a, const dim_vector& dv)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,16 @@
+2008-02-03  John W. Eaton  <jwe@octave.org>
+
+	* Array-i.cc: Also instantiate Arrays for long long type if it exists.
+
+2008-02-03  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* Array.cc: Don't include Range.h.
+
 2008-01-31  David Bateman  <dbateman@free.fr>
 
 	* oct-sort.cc: conversion of int to octave_idx_type where needed
 	for 64-bit builds.
 	(IFLT): Allow IFLT macro to be overridden.
 	* oct-sort.h: conversion of int to octave_idx_type where needed
 	for 64-bit builds.
 	(enum sortmode): Type of sort to perform.
