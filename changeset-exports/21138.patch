# HG changeset patch
# User Rik <rik@octave.org>
# Date 1453659103 28800
#      Sun Jan 24 10:11:43 2016 -0800
# Node ID e2fca7d79169446c0a2b578917eab824df514016
# Parent  623fc7d08cc68180beeca8fb5f2f6fca5c1ec947
maint: Change unsupported warning for qrupdate LU to match common syntax.

* CmplxLU.cc, dbleLU.cc, fCmplxLU.cc, floatLU.cc:
Change unsupported warning for qrupdate LU to match that for
err_disabled_feature.

diff --git a/liboctave/numeric/CmplxLU.cc b/liboctave/numeric/CmplxLU.cc
--- a/liboctave/numeric/CmplxLU.cc
+++ b/liboctave/numeric/CmplxLU.cc
@@ -188,31 +188,35 @@ void ComplexLU::update_piv (const Comple
   for (octave_idx_type i = 0; i < m; i++) ipvt(i) -= 1; // decrement
 }
 
 #else
 
 void ComplexLU::update (const ComplexColumnVector&, const ComplexColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void ComplexLU::update (const ComplexMatrix&, const ComplexMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void ComplexLU::update_piv (const ComplexColumnVector&,
                             const ComplexColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void ComplexLU::update_piv (const ComplexMatrix&, const ComplexMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 #endif
diff --git a/liboctave/numeric/dbleLU.cc b/liboctave/numeric/dbleLU.cc
--- a/liboctave/numeric/dbleLU.cc
+++ b/liboctave/numeric/dbleLU.cc
@@ -186,30 +186,34 @@ void LU::update_piv (const Matrix& u, co
   for (octave_idx_type i = 0; i < m; i++) ipvt(i) -= 1; // decrement
 }
 
 #else
 
 void LU::update (const ColumnVector&, const ColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void LU::update (const Matrix&, const Matrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void LU::update_piv (const ColumnVector&, const ColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void LU::update_piv (const Matrix&, const Matrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 #endif
diff --git a/liboctave/numeric/fCmplxLU.cc b/liboctave/numeric/fCmplxLU.cc
--- a/liboctave/numeric/fCmplxLU.cc
+++ b/liboctave/numeric/fCmplxLU.cc
@@ -193,33 +193,37 @@ void FloatComplexLU::update_piv (const F
 }
 
 #else
 
 void FloatComplexLU::update (const FloatComplexColumnVector&,
                              const FloatComplexColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatComplexLU::update (const FloatComplexMatrix&,
                              const FloatComplexMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatComplexLU::update_piv (const FloatComplexColumnVector&,
                                  const FloatComplexColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatComplexLU::update_piv (const FloatComplexMatrix&,
                                  const FloatComplexMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 #endif
diff --git a/liboctave/numeric/floatLU.cc b/liboctave/numeric/floatLU.cc
--- a/liboctave/numeric/floatLU.cc
+++ b/liboctave/numeric/floatLU.cc
@@ -188,30 +188,34 @@ void FloatLU::update_piv (const FloatMat
   for (octave_idx_type i = 0; i < m; i++) ipvt(i) -= 1; // decrement
 }
 
 #else
 
 void FloatLU::update (const FloatColumnVector&, const FloatColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatLU::update (const FloatMatrix&, const FloatMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatLU::update_piv (const FloatColumnVector&, const FloatColumnVector&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 void FloatLU::update_piv (const FloatMatrix&, const FloatMatrix&)
 {
   (*current_liboctave_error_handler)
-    ("luupdate: not available in this version");
+    ("luupdate: support for qrupdate with LU updates "
+     "was unavailable or disabled when liboctave was built");
 }
 
 #endif
