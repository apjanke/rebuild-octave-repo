# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424415855 18000
#      Fri Feb 20 02:04:15 2015 -0500
# Node ID 8bc45a00c8d63467c7c952720825f0c67b0dccd9
# Parent  fc789d4e362e461136cf68b1f7e86a19d966ddf7
avoid warnings about uninitialized variables

* __ilu__.cc (ilu_tp): Initialize tl, partial_row_sum, and
partial_col_sum to T(0).

diff --git a/libinterp/dldfcn/__ilu__.cc b/libinterp/dldfcn/__ilu__.cc
--- a/libinterp/dldfcn/__ilu__.cc
+++ b/libinterp/dldfcn/__ilu__.cc
@@ -584,17 +584,19 @@ void ilu_tp (octave_matrix_t& sm, octave
     sm = sm.transpose();
 
   // Extract pointers to the arrays for faster access inside loops
   octave_idx_type* cidx_in = sm.cidx ();
   octave_idx_type* ridx_in = sm.ridx ();
   T* data_in = sm.data ();
   octave_idx_type jrow, i, j, k, jj, c, total_len_l, total_len_u, p_perm,
                   max_ind, max_len_l, max_len_u;
-  T tl, aux, maximum;
+  T zero = T(0);
+
+  T tl = zero, aux, maximum;
 
   max_len_u = nnz_u;
   max_len_u += (0.1 * max_len_u) > n ? 0.1 * max_len_u : n;
   max_len_l = nnz_l;
   max_len_l += (0.1 * max_len_l) > n ? 0.1 * max_len_l : n;
 
   Array <octave_idx_type> cidx_out_l (dim_vector (n + 1, 1));
   octave_idx_type* cidx_l = cidx_out_l.fortran_vec ();
@@ -607,27 +609,26 @@ void ilu_tp (octave_matrix_t& sm, octave
   octave_idx_type* cidx_u = cidx_out_u.fortran_vec ();
   Array <octave_idx_type> ridx_out_u (dim_vector (max_len_u, 1));
   octave_idx_type* ridx_u = ridx_out_u.fortran_vec ();
   Array <T> data_out_u (dim_vector (max_len_u, 1));
   T* data_u = data_out_u.fortran_vec();
 
   // Working arrays and permutation arrays
   octave_idx_type w_len_u, w_len_l;
-  T total_sum, partial_col_sum, partial_row_sum;
+  T total_sum, partial_col_sum = zero, partial_row_sum = zero;
   std::set <octave_idx_type> iw_l;
   std::set <octave_idx_type> iw_u;
   std::set <octave_idx_type>::iterator it, it2;
   OCTAVE_LOCAL_BUFFER (T, w_data, n);
   OCTAVE_LOCAL_BUFFER (octave_idx_type, iperm, n);
   octave_idx_type* perm = perm_vec.fortran_vec ();
   OCTAVE_LOCAL_BUFFER (octave_idx_type, uptr, n);
 
 
-  T zero = T(0);
   cidx_l[0] = cidx_in[0];
   cidx_u[0] = cidx_in[0];
   for (i = 0; i < n; i++)
     {
       w_data[i] = 0;
       perm[i] = i;
       iperm[i] = i;
     }
