# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1276691783 -7200
#      Wed Jun 16 14:36:23 2010 +0200
# Node ID 2786b7ae3f80b345adc8cd098a603dec9b81ab80
# Parent  69c5f5ec55d705522ff55e03aed3ceb02d548a6e
workaround bug #30044 (likely in LAPACK)

diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2641,16 +2641,18 @@ ComplexMatrix::lssolve (const ComplexMat
       double tmp = log2 (dminmn / dsmlsizp1);
 #else
       double tmp = log (dminmn / dsmlsizp1) / log (2.0);
 #endif
       octave_idx_type nlvl = static_cast<octave_idx_type> (tmp) + 1;
       if (nlvl < 0)
         nlvl = 0;
 
+      nlvl += 1; // FIXME: workaround for bug in LAPACK 3.1.1
+
       octave_idx_type lrwork = minmn*(10 + 2*smlsiz + 8*nlvl)
         + 3*smlsiz*nrhs + (smlsiz+1)*(smlsiz+1);
       if (lrwork < 1)
         lrwork = 1;
       Array<double> rwork (lrwork, 1);
       double *prwork = rwork.fortran_vec ();
 
       octave_idx_type liwork = 3 * minmn * nlvl + 11 * minmn;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2010-06-16  Jaroslav Hajek  <highegg@gmail.com>
+
+	* CMatrix.cc (ComplexMatrix::lssolve (const ComplexMatrix&)):
+	Workaround LAPACK bug.
+	* fCMatrix.cc (FloatComplexMatrix::lssolve (const FloatComplexMatrix&)):
+	Ditto.
+
 2010-06-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.cc (Array::sort, Array::nth_element): Fix behavior when
 	trailing singleton dim is specified.
 	* Sparse.cc (Sparse::sort): Ditto.
 
 2010-06-14  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/liboctave/fCMatrix.cc b/liboctave/fCMatrix.cc
--- a/liboctave/fCMatrix.cc
+++ b/liboctave/fCMatrix.cc
@@ -2634,16 +2634,18 @@ FloatComplexMatrix::lssolve (const Float
       float tmp = log2 (dminmn / dsmlsizp1);
 #else
       float tmp = log (dminmn / dsmlsizp1) / log (2.0);
 #endif
       octave_idx_type nlvl = static_cast<octave_idx_type> (tmp) + 1;
       if (nlvl < 0)
         nlvl = 0;
 
+      nlvl += 1; // FIXME: workaround for bug in LAPACK 3.1.1
+
       octave_idx_type lrwork = minmn*(10 + 2*smlsiz + 8*nlvl)
         + 3*smlsiz*nrhs + (smlsiz+1)*(smlsiz+1);
       if (lrwork < 1)
         lrwork = 1;
       Array<float> rwork (lrwork, 1);
       float *prwork = rwork.fortran_vec ();
 
       octave_idx_type liwork = 3 * minmn * nlvl + 11 * minmn;
