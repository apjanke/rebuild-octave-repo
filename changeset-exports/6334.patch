# HG changeset patch
# User dbateman
# Date 1172061011 0
#      Wed Feb 21 12:30:11 2007 +0000
# Node ID 877b80a8dee7db26f49c32cde25098ad0cc54ef6
# Parent  4e81fe3bceff887fa4d07477a54058de14c60aa3
[project @ 2007-02-21 12:30:11 by dbateman]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2007-02-21  David Bateman  <dbateman@free.fr>
+
+	* interpreter/sparse.txi: Add functions sprank and normest to
+	documentation.
+
 2007-01-25  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/sparseimages.m: Don't call __gnuplot_x__ functions.
 
 2006-11-17  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/sparseimages.m: Fix call to __plt3__.
 
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -1432,18 +1432,18 @@ For a symmetric positive definite matrix
 @item cholinc
 @emph{Not implemented}
 @item condest
 @emph{Not implemented}
 @item eigs
 @emph{Not implemented}
 @item @ref{matrix_type}
 Identify the matrix type or mark a matrix as a particular type.
-@item normest
-@emph{Not implemented}
+@item @ref{normest}
+Estimates the 2-norm of the matrix @var{a} using a power series analysis.
 @item @ref{spchol}
 Compute the Cholesky factor, R, of the symmetric positive definite.
 @item @ref{spcholinv}
 Use the Cholesky factorization to compute the inverse of the
 sparse symmetric positive definite matrix A.
 @item @ref{spchol2inv}
 Invert a sparse symmetric, positive definite square matrix from its
 Cholesky decomposition, U.
@@ -1454,18 +1454,18 @@ Compute the inverse of the square matrix
 @item @ref{spkron}
 Form the kronecker product of two sparse matrices.
 @item @ref{splchol}
 Compute the Cholesky factor, L, of the symmetric positive definite.
 @item @ref{splu}
 Compute the LU decomposition of the sparse matrix A, using subroutines from UMFPACK.
 @item @ref{spqr}
 Compute the sparse QR factorization of @var{a}, using CSPARSE.
-@item sprank
-@emph{Not implemented}
+@item @ref{sprank}
+Calculates the structural rank of a sparse matrix @var{s}.
 @item svds
 @emph{Not implemented}
 @end table
 @subsubsection Iterative techniques
 @table @asis
 @item bicg
 @emph{Not implemented}
 @item bicgstab
@@ -1545,16 +1545,18 @@ Return a diagonal matrix with the sparse
 * gplot::	Plots a graph defined by @var{A} and @var{xy} in the graph 
 		theory sense.
 * issparse::	Return 1 if the value of the expression EXPR is a sparse
 		matrix.
 * luinc::	Produce the incomplete LU factorization of the sparse 
 		A.
 * matrix_type:: Identify the matrix type or mark a matrix as a particular
 		type.
+* normest:: 	Estimates the 2-norm of the matrix @var{a} using a power 
+		series analysis.
 * nnz:: 	returns number of non zero elements in SM See also: sparse
 * nonzeros::	Returns a vector of the non-zero values of the sparse
 		matrix S
 * nzmax::	Returns the amount of storage allocated to the sparse
 		matrix SM.
 * pcg::		Solves linear system of equations by means of the 
 		Preconditioned Conjugate Gradient iterative method.
 * pcr::		Solves linear system of equations by means of the 
@@ -1593,16 +1595,17 @@ Return a diagonal matrix with the sparse
 * spones::	Replace the non-zero entries of X with ones.
 * spparms::	Sets or displays the parameters used by the sparse solvers
 		and factorization functions.
 * spprod::	Product of elements along dimension DIM.
 * spqr::	Compute the sparse QR factorization of @var{a}, using CSPARSE.
 * sprand::	Generate a random sparse matrix.
 * sprandn::	Generate a random sparse matrix.
 * sprandsym::	Generate a symmetric random sparse matrix.
+* sprank::	Calculates the structural rank of a sparse matrix @var{s}.
 * spstats::	Return the stats for the non-zero elements of the sparse
 		matrix S COUNT is the number of non-zeros in each column,
 		MEAN is the mean of the non-zeros in each column, and VAR
 		is the variance of the non-zeros in each column
 * spsum::	Sum of elements along dimension DIM.
 * spsumsq::	Sum of squares of elements along dimension DIM.
 * spy:: 	Plot the sparsity pattern of the sparse matrix X
 * symamd::	For a symmetric positive definite matrix S, returns the
@@ -1663,22 +1666,28 @@ Return a diagonal matrix with the sparse
 
 @DOCSTRING(issparse)
 
 @node luinc, matrix_type, issparse, Function Reference
 @subsubsection luinc
 
 @DOCSTRING(luinc)
 
-@node matrix_type, nnz, luinc, Function Reference
+@node matrix_type, normest, luinc, Function Reference
 @subsubsection matrix_type
 
 @DOCSTRING(matrix_type)
 
-@node nnz, nonzeros, matrix_type, Function Reference
+
+@node normest, nnz, matrix_type, Function Reference
+@subsubsection normest
+
+@DOCSTRING(normest)
+
+@node nnz, nonzeros, normest, Function Reference
 @subsubsection nnz
 
 @DOCSTRING(nnz)
 
 @node nonzeros, nzmax, nnz, Function Reference
 @subsubsection nonzeros
 
 @DOCSTRING(nonzeros)
@@ -1828,22 +1837,27 @@ Return a diagonal matrix with the sparse
 
 @DOCSTRING(sprand)
 
 @node sprandn, sprandsym, sprand, Function Reference
 @subsubsection sprandn
 
 @DOCSTRING(sprandn)
 
-@node sprandsym, spstats, sprandn, Function Reference
+@node sprandsym, sprank, sprandn, Function Reference
 @subsubsection sprandsym
 
 @DOCSTRING(sprandsym)
 
-@node spstats, spsum, sprandsym, Function Reference
+@node sprank, spstats, sprandsym, Function Reference
+@subsubsection sprank
+
+@DOCSTRING(sprank)
+
+@node spstats, spsum, sprank, Function Reference
 @subsubsection spstats
 
 @DOCSTRING(spstats)
 
 @node spsum, spsumsq, spstats, Function Reference
 @subsubsection spsum
 
 @DOCSTRING(spsum)
