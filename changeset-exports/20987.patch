# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1451116181 -3600
#      Sat Dec 26 08:49:41 2015 +0100
# Node ID f99cbd86a0f9ef694967f9705fdbc878c63ffe68
# Parent  00835323fb44e3ed42bc17ba7f5d431553548f3f
Prevent closing GUI by Ctrl+D in terminal (bug #46661)

* QTerminal.cc (set_global_shortcuts): (un)set shortcut Ctrl-D for dummy action;
  (notice_settings): do not consider obsolete shortcut sets, check whether
  Ctrl+D is used as global shortcut and enable the dummy action accordingly

* QTerminal.h (QTerminal): new dummy action with shortcut Ctrl+D

* shortcut-manager.cc (do_init_data): reset flag for global Ctrl-D usage;
  (init, do_write_shortcuts): check for Ctrl-D usage as global shortcut and
  set the flag in settings accordingly

diff --git a/libgui/qterminal/libqterminal/QTerminal.cc b/libgui/qterminal/libqterminal/QTerminal.cc
--- a/libgui/qterminal/libqterminal/QTerminal.cc
+++ b/libgui/qterminal/libqterminal/QTerminal.cc
@@ -71,20 +71,27 @@ QTerminal::color_names (void)
   return names;
 }
 
 // slot for disabling the interrupt action when terminal loses focus
 void
 QTerminal::set_global_shortcuts (bool focus_out)
   {
     if (focus_out)
-      _interrupt_action->setShortcut (QKeySequence ());
+      {
+        _interrupt_action->setShortcut (QKeySequence ());
+        _nop_action->setShortcut (QKeySequence ());
+      }
     else
-     _interrupt_action->setShortcut (
+      {
+        _interrupt_action->setShortcut (
               QKeySequence (Qt::ControlModifier + Qt::Key_C));
+        _nop_action->setShortcut (
+              QKeySequence (Qt::ControlModifier + Qt::Key_D));
+      }
   }
 
 void
 QTerminal::notice_settings (const QSettings *settings)
 {
   // QSettings pointer is checked before emitting.
 
   // Set terminal font:
@@ -126,29 +133,25 @@ QTerminal::notice_settings (const QSetti
                       QVariant (colors.at (2))).value<QColor> ());
 
   setCursorColor
     (cursorUseForegroundColor,
      settings->value ("terminal/color_c",
                       QVariant (colors.at (3))).value<QColor> ());
   setScrollBufferSize (settings->value ("terminal/history_buffer",1000).toInt () );
 
-  // check whether Copy shoretcut is Ctrl-C
-  int set = settings->value ("shortcuts/set",0).toInt ();
-  QKeySequence copy;
-  QString key = QString ("shortcuts/main_edit:copy");
-  if (set)
-    key.append ("_1");  // if second set is active
-  copy = QKeySequence (settings->value (key).toString ()); // the copy shortcut
+  // check whether Copy shortcut is Ctrl-C
+  QKeySequence sc;
+  sc = QKeySequence (settings->value ("shortcuts/main_edit:copy").toString ());
 
-  // if copy is empty, shortcuts are not yet in the settings (take the default)
-  if (copy.isEmpty ())         // QKeySequence::Copy as second argument in
-    copy = QKeySequence::Copy; // settings->value () does not work!
+  // if sc is empty, shortcuts are not yet in the settings (take the default)
+  if (sc.isEmpty ())         // QKeySequence::Copy as second argument in
+    sc = QKeySequence::Copy; // settings->value () does not work!
 
   //  dis- or enable extra interrupt action
-  QKeySequence ctrl;
-  ctrl = Qt::ControlModifier;
-
-  bool extra_ir_action = (copy != QKeySequence (ctrl + Qt::Key_C));
-
+  bool extra_ir_action = (sc != QKeySequence (Qt::ControlModifier + Qt::Key_C));
   _interrupt_action->setEnabled (extra_ir_action);
   has_extra_interrupt (extra_ir_action);
+
+  // check whether shortcut Ctrl-D is in use by the main-window
+  bool ctrld = settings->value ("shortcuts/main_ctrld",false).toBool ();
+  _nop_action->setEnabled (! ctrld);
 }
diff --git a/libgui/qterminal/libqterminal/QTerminal.h b/libgui/qterminal/libqterminal/QTerminal.h
--- a/libgui/qterminal/libqterminal/QTerminal.h
+++ b/libgui/qterminal/libqterminal/QTerminal.h
@@ -174,21 +174,29 @@ protected:
     _interrupt_action = new QAction (this);
     addAction (_interrupt_action);
 
     _interrupt_action->setShortcut (
             QKeySequence (Qt::ControlModifier + Qt::Key_C));
 
     connect (_interrupt_action, SIGNAL (triggered ()),
             this, SLOT (terminal_interrupt ()));
+
+    // dummy (nop) action catching Ctrl-D in terminal, no connection
+    _nop_action = new QAction (this);
+    addAction (_nop_action);
+
+    _nop_action->setShortcut (
+            QKeySequence (Qt::ControlModifier + Qt::Key_D));
   }
 
 private:
 
   QMenu *_contextMenu;
   QAction * _copy_action;
   QAction * _paste_action;
   QAction * _selectall_action;
 
   QAction *_interrupt_action;
+  QAction *_nop_action;
 };
 
 #endif // QTERMINAL_H
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -100,16 +100,18 @@ shortcut_manager::do_init_data ()
   prefix = Qt::NoModifier;
 #endif
 
   QKeySequence ctrl_shift = ctrl + Qt::ShiftModifier;
   QKeySequence ctrl_alt = ctrl + Qt::AltModifier;
 
   // actions of the main window
 
+  _settings->setValue ("shortcuts/main_ctrld",false); // reset use fo ctrl-d
+
   // file
   init (tr ("New File"), "main_file:new_file", QKeySequence::New);
   init (tr ("New Function"), "main_file:new_function",
         QKeySequence (ctrl_shift + Qt::Key_N));
   init (tr ("New Figure"), "main_file:new_figure", QKeySequence ());
   init (tr ("Open File"), "main_file:open_file", QKeySequence::Open);
   init (tr ("Load Workspace"), "main_file:load_workspace", QKeySequence ());
   init (tr ("Save Workspace As"), "main_file:save_workspace", QKeySequence ());
@@ -338,16 +340,21 @@ shortcut_manager::init (QString descript
   shortcut_info.actual_sc = actual;
   shortcut_info.default_sc = def_sc;
   _sc << shortcut_info;
 
   // insert shortcut in order check for duplicates later
   if (! actual.isEmpty ())
     _shortcut_hash[actual.toString ()] = _sc.count ();
   _action_hash[key] = _sc.count ();
+
+  // check whether ctrl+d is used from main window, i.e. is a global shortcut
+  if (key.startsWith ("main_")
+      && actual == QKeySequence (Qt::ControlModifier+Qt::Key_D))
+    _settings->setValue ("shortcuts/main_ctrld",true);
 }
 
 void
 shortcut_manager::do_fill_treewidget (QTreeWidget *tree_view)
 {
   _dialog = 0;
   _level_hash.clear ();
 
@@ -428,21 +435,30 @@ shortcut_manager::do_fill_treewidget (QT
 
 }
 
 // write one or all actual shortcut set(s) into a settings file
 void
 shortcut_manager::do_write_shortcuts (QSettings* settings,
                                       bool closing)
 {
+  bool sc_ctrld = false;
+
   for (int i = 0; i < _sc.count (); i++)  // loop over all shortcuts
     {
       settings->setValue("shortcuts/"+_sc.at (i).settings_key,
                              _sc.at (i).actual_sc.toString ());
+      // special: check main-window for Ctrl-D (Terminal)
+      if (_sc.at (i).settings_key.startsWith ("main_")
+          && _sc.at (i).actual_sc == QKeySequence (Qt::ControlModifier+Qt::Key_D))
+        sc_ctrld = true;
     }
+
+    settings->setValue ("shortcuts/main_ctrld",sc_ctrld);
+
   if (closing)
     {
       delete _dialog;  // the dialog for key sequences can be removed now
       _dialog = 0;     // make sure it is zero again
     }
 
   settings->sync ();    // sync the settings file
 }
