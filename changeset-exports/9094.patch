# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1239009380 -7200
#      Mon Apr 06 11:16:20 2009 +0200
# Node ID 2e35cfcf6a6a32cf7c7e6a6affecd4f40892d11e
# Parent  8be05554bbd0b5a3d1185291cbe31ea8a3102047
fix, optimize & extend pascal

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-04-06  Jaroslav Hajek  <highegg@gmail.com>
+
+	* special-matrix/pascal.m: Fix, optimize & extend.
+
 2009-04-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* linear-algebra/vech.m: Optimize.
 
 2009-04-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* special-matrix/toeplitz.m: Optimize.
 
diff --git a/scripts/special-matrix/pascal.m b/scripts/special-matrix/pascal.m
--- a/scripts/special-matrix/pascal.m
+++ b/scripts/special-matrix/pascal.m
@@ -1,9 +1,10 @@
 ## Copyright (C) 1999, 2006, 2007 Peter Ekberg
+## Copyright (C) 2009 VZLU Prague
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -18,16 +19,18 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} pascal (@var{n}, @var{t})
 ##
 ## Return the Pascal matrix of order @var{n} if @code{@var{t} = 0}.
 ## @var{t} defaults to 0. Return lower triangular Cholesky factor of 
 ## the Pascal matrix if @code{@var{t} = 1}.  This matrix is its own
 ## inverse, that is @code{pascal (@var{n}, 1) ^ 2 == eye (@var{n})}.
+## If @code{@var{t} = -1}, return its absolute value. This is the
+## standard pascal triangle as a lower-triangular matrix.
 ## If @code{@var{t} = 2}, return a transposed and permuted version of
 ## @code{pascal (@var{n}, 1)}, which is the cube-root of the identity
 ## matrix.  That is @code{pascal (@var{n}, 2) ^ 3 == eye (@var{n})}.
 ##
 ## @seealso{hankel, vander, sylvester_matrix, hilb, invhilb, toeplitz
 ##           hadamard, wilkinson, compan, rosser}
 ## @end deftypefn
 
@@ -39,28 +42,32 @@ function retval = pascal (n, t)
   if (nargin > 2) || (nargin == 0)
     print_usage ();
   endif
 
   if (nargin == 1)
     t = 0;
   endif
 
-  if (! is_scalar (n) || ! is_scalar (t))
+  if (! isscalar (n) || ! isscalar (t))
     error ("pascal: expecting scalar arguments, found something else");
   endif
 
-  retval = diag ((-1).^[0:n-1]);
-  retval(:,1) = ones (n, 1);
+  retval = zeros (n);
+  retval(:,1) = 1;
 
-  for j = 2:n-1
-    for i = j+1:n
-      retval(i,j) = retval(i-1,j) - retval(i-1,j-1);
+  if (t == -1)
+    for j = 2:n-1
+      retval(j:n,j) = cumsum (retval (j-1:n-1,j-1));
     endfor
-  endfor
+  else
+    for j = 2:n-1
+      retval(j:n,j) = -cumsum (retval (j-1:n-1,j-1));
+    endfor
+  endif
 
   if (t == 0)
     retval = retval*retval';
   elseif (t == 2)
     retval = retval';
     retval = retval(n:-1:1,:);
     retval(:,n) = -retval(:,n);
     retval(n,:) = -retval(n,:);
