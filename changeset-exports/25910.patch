# HG changeset patch
# User Lars Kindermann <lars.kindermann@reglos.de>
# Date 1538093212 25200
#      Thu Sep 27 17:06:52 2018 -0700
# Node ID b4bf418dfc7495052e8064a532f872243e18e6f2
# Parent  eea37e4d71393577a3a554d352ac3b9e430d7ebe
Correct audioplayer message strings (bug #54748).

* audiodevinfo.cc: Correctly use "audioplayer:" or "audiorecorder:" to preface
error message strings.

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -1157,29 +1157,29 @@ void
 audioplayer::pause (void)
 {
   if (get_stream () == nullptr)
     return;
 
   PaError err;
   err = Pa_StopStream (stream);
   if (err != paNoError)
-    error ("audiorecorder: failed to stop audio recording stream");
+    error ("audioplayer: failed to stop audio playback stream");
 }
 
 void
 audioplayer::resume (void)
 {
   if (get_stream () == nullptr)
     return;
 
   PaError err;
   err = Pa_StartStream (stream);
   if (err != paNoError)
-    error ("audiorecorder: failed to start audio recording stream");
+    error ("audioplayer: failed to start audio playback stream");
 }
 
 PaStream *
 audioplayer::get_stream (void)
 {
   return stream;
 }
 
@@ -1210,17 +1210,17 @@ bool
 audioplayer::isplaying (void)
 {
   if (get_stream () == nullptr)
     return false;
 
   PaError err;
   err = Pa_IsStreamActive (stream);
   if (err != 0 && err != 1)
-    error ("audiorecorder: checking stream activity status failed");
+    error ("audioplayer: checking stream activity status failed");
 
   return (err == 1);
 }
 
 class audiorecorder : public octave_base_value
 {
 public:
   audiorecorder (void);
@@ -1833,17 +1833,17 @@ Undocumented internal function.
   audiorecorder *recorder = new audiorecorder ();
 
   if (nargin > 0)
     {
       bool is_function = (args(0).is_string () || args(0).is_function_handle ()
                           || args(0).is_inline_function ());
 
       if (is_function)
-        error ("audioplayer: callbacks not yet implemented");
+        error ("audiorecorder: callbacks not yet implemented");
     }
 
   if (nargin >= 3)
     {
       recorder->set_fs (args(0).int_value ());
       recorder->set_nbits (args(1).int_value ());
       recorder->set_channels (args(2).int_value ());
     }
