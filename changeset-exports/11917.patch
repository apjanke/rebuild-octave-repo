# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1231758801 -3600
#      Mon Jan 12 12:13:21 2009 +0100
# Branch release-3-0-x
# Node ID deb777a926ee7a6d2caf2dd76630206fe367fde1
# Parent  377d908f7e408b253f7d8eacd954f0dfdb5aa486
style fixes

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2008-02-19  Ben Abbott  <bpabbott@mac.com>
+
+	* polynomial/polyfit.m: Use QR decomposition.  Handle
+	normalization option.
+	* polynomial/polyval.m: Normalize dependent variable.  Optionally
+	generate 50% prediction intervals.
+
 2008-10-13  Francesco Potorti  <pot@gnu.org>
 
 	* plot/__errplot__.m: Wrong if switch compared strings using ==.
 	Subsituted with a switch statement.
 
 2008-12-26  Francesco Potort√¨  <pot@gnu.org>
 
 	* general/prepad.m: Add reference to postpad.
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -19,30 +19,29 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{p}, @var{s}, @var{mu}] =} polyfit (@var{x}, @var{y}, @var{n})
 ## Return the coefficients of a polynomial @var{p}(@var{x}) of degree
 ## @var{n} that minimizes the least-squares-error of the fit.
 ##
 ## The polynomial coefficients are returned in a row vector.
 ##
-## The second output is a structured variable, @var{s},
-## containing the following fields:
+## The second output is a structure containing the following fields:
 ##
 ## @table @samp
 ## @item R
-##  Triangular factor R from the QR decomposition.
+## Triangular factor R from the QR decomposition.
 ## @item X
-##  The Vandermonde matrix used to compute the polynomial coefficients.
+## The Vandermonde matrix used to compute the polynomial coefficients.
 ## @item df
-##  The degrees of freedom.
+## The degrees of freedom.
 ## @item normr
-##  The norm of the residuals.
+## The norm of the residuals.
 ## @item yf
-##  The values of the polynomial for each value of @var{x}.
+## The values of the polynomial for each value of @var{x}.
 ## @end table
 ##
 ## The second output may be used by @code{polyval} to calculate the 
 ## statistical error limits of the predicted values.
 ##
 ## When the third output, @var{mu}, is present the 
 ## coefficients, @var{p}, are associated with a polynomial in
 ## @var{xhat} = (@var{x}-@var{mu}(1))/@var{mu}(2).
diff --git a/scripts/polynomial/polyval.m b/scripts/polynomial/polyval.m
--- a/scripts/polynomial/polyval.m
+++ b/scripts/polynomial/polyval.m
@@ -19,18 +19,18 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{y}=} polyval (@var{p}, @var{x})
 ## @deftypefnx {Function File} {@var{y}=} polyval (@var{p}, @var{x}, [], @var{mu})
 ## Evaluate the polynomial at of the specified values for @var{x}. When @var{mu}
 ## is present evaluate the polynomial for (@var{x}-@var{mu}(1))/@var{mu}(2).
 ## If @var{x} is a vector or matrix, the polynomial is evaluated for each of
 ## the elements of @var{x}.
-## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{S})
-## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{S}, @var{mu})
+## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s})
+## @deftypefnx {Function File} {[@var{y}, @var{dy}] =} polyval (@var{p}, @var{x}, @var{s}, @var{mu})
 ## In addition to evaluating the polynomial, the second output 
 ## represents the prediction interval, @var{y} +/- @var{dy}, which
 ## contains at least 50% of the future predictions. To calculate the
 ## prediction interval, the structured variable @var{s}, originating
 ## form `polyfit', must be present.
 ## @seealso{polyfit, polyvalm, poly, roots, conv, deconv, residue, filter,
 ## polyderiv, polyinteg}
 ## @end deftypefn
@@ -70,20 +70,16 @@ function [y, dy] = polyval (p, x, s, mu)
   n = length (p) - 1;
   k = numel (x);
   x = (x - mu(1)) / mu(2);
   A = (x(:) * ones (1, n+1)) .^ (ones (k, 1) * (n:-1:0));
   y(:) = A * p(:);
   y = reshape (y, size (x));
 
   if (nargout == 2)
-    ## The line below is *not* the result of a conceptual grasp of statistics.
-    ## Instead, after reading the links below and comparing to the output of Matlab's polyval.m,
-    ## http://www.mathworks.com/access/helpdesk/help/toolbox/stats/index.html?/access/helpdesk/help/toolbox/stats/finv.html
-    ## http://www.mathworks.com/access/helpdesk/help/toolbox/curvefit/index.html?/access/helpdesk/help/toolbox/curvefit/bq_5ka6-1_1.html
     ## Note: the F-Distribution is generally considered to be single-sided.
     ## http://www.itl.nist.gov/div898/handbook/eda/section3/eda3673.htm
     ##   t = finv (1-alpha, s.df, s.df);
     ##   dy = t * sqrt (1 + sumsq (A/s.R, 2)) * s.normr / sqrt (s.df)
     ## If my inference is correct, then t must equal 1 for polyval.
     ## This is because finv (0.5, n, n) = 1.0 for any n.
     dy = sqrt (1 + sumsq (A/s.R, 2)) * s.normr / sqrt (s.df);
     dy = reshape (dy, size (x));
