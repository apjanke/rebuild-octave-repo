# HG changeset patch
# User jwe
# Date 811147133 0
#      Fri Sep 15 06:38:53 1995 +0000
# Node ID 9517c453c9ab4a0bfff39de644fc2e2e0131310d
# Parent  034a57daf076d9619b882d07de502a052bed2794
[project @ 1995-09-15 06:38:53 by jwe]

diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1571,16 +1571,22 @@ install_builtin_variables (void)
 functions.  Only used if the variable initialize_return_values is\n\
 set to \"true\".");
 
   DEFVAR ("default_save_format", SBV_default_save_format, "ascii",
 	  0, 0, 1, sv_default_save_format,
     "default format for files created with save, may be one of\n\
 \"binary\", \"text\", or \"mat-binary\""); 
 
+  DEFVAR ("define_all_return_values", SBV_define_all_return_values,
+	  "false", 0, 0, 1, define_all_return_values,
+    "control whether values returned from functions should have a\n\
+value even if one has not been explicitly assigned.  See also\n\
+default_return_value"); 
+
   DEFVAR ("do_fortran_indexing", SBV_do_fortran_indexing, "false", 0, 0,
 	  1, do_fortran_indexing,
     "allow single indices for matrices");
 
   DEFVAR ("empty_list_elements_ok", SBV_empty_list_elements_ok, "warn",
 	  0, 0, 1, empty_list_elements_ok,
     "ignore the empty element in expressions like `a = [[], 1]'");
 
@@ -1602,22 +1608,16 @@ set to \"true\".");
 
   DEFVAR ("implicit_str_to_num_ok", SBV_implicit_str_to_num_ok, "false",
 	  0, 0, 1, implicit_str_to_num_ok,
     "allow implicit string to number conversion");
 
   DEFVAR ("inf", SBV_inf, octave_Inf, 0, 1, 1, 0,
     "infinity");
 
-  DEFVAR ("define_all_return_values", SBV_define_all_return_values,
-	  "false", 0, 0, 1, define_all_return_values,
-    "control whether values returned from functions should have a\n\
-value even if one has not been explicitly assigned.  See also\n\
-default_return_value"); 
-
   DEFVAR ("j", SBV_j, Complex (0.0, 1.0), 1, 1, 1, 0,
     "sqrt (-1)");
 
   DEFVAR ("nan", SBV_nan, octave_NaN, 0, 1, 1, 0,
     "not a number");
 
   DEFVAR ("ok_to_lose_imaginary_part", SBV_ok_to_lose_imaginary_part,
 	  "warn", 0, 0, 1, ok_to_lose_imaginary_part,
