# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1462568551 14400
#      Fri May 06 17:02:31 2016 -0400
# Branch stable
# Node ID 44f7664689f2ce10d5444768a743a6a3961e3497
# Parent  e47eb34f1b05d23014f698c6645f32961475d30d
make __magick_read__ a built-in function (bug #41699)

* libinterp/Makefile.am (AM_CPPFLAGS):
Add $(MAGICK_CPPFLAGS) to the list.
* corefcn/__magick_read__.cc: Rename from dldfcn/__magick_read__.cc.
Change DEFUN_DLD to DEFUN.
* libinterp/dldfcn/module-files: Delete entry for __magick_read__.cc.
* libinterp/corefcn/module.mk: Update.
* libinterp/link-deps.mk (LIBOCTINTERP_LINK_DEPS):
Add $MAGICK_LIBS to the list.
(LIBOCTINTERP_LINK_OPTS): Add $MAGICK_LDFLAGS to the list.

diff --git a/libinterp/Makefile.am b/libinterp/Makefile.am
--- a/libinterp/Makefile.am
+++ b/libinterp/Makefile.am
@@ -28,17 +28,18 @@ AM_CPPFLAGS = \
   -I$(top_builddir)/liboctave/operators -I$(top_srcdir)/liboctave/operators \
   -I$(top_srcdir)/liboctave/system \
   -I$(top_srcdir)/liboctave/util \
   -I$(srcdir)/octave-value \
   -I$(srcdir)/operators \
   -Iparse-tree -I$(srcdir)/parse-tree \
   -Icorefcn -I$(srcdir)/corefcn \
   -I$(top_builddir)/libgnu -I$(top_srcdir)/libgnu \
-  $(HDF5_CPPFLAGS)
+  $(HDF5_CPPFLAGS) \
+  $(MAGICK_CPPFLAGS)
 
 AM_CFLAGS += $(WARN_CFLAGS)
 
 AM_CXXFLAGS += $(WARN_CXXFLAGS)
 
 octlib_LTLIBRARIES = liboctinterp.la
 
 ## This is the subset of $(BUILT_SOURCES) that may be included by source
diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/corefcn/__magick_read__.cc
rename from libinterp/dldfcn/__magick_read__.cc
rename to libinterp/corefcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/corefcn/__magick_read__.cc
@@ -26,17 +26,17 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "file-stat.h"
 #include "oct-env.h"
 #include "oct-time.h"
 
-#include "defun-dld.h"
+#include "defun.h"
 #include "error.h"
 #include "ov-struct.h"
 
 #include "gripes.h"
 
 #ifdef HAVE_MAGICK
 
 #include <Magick++.h>
@@ -714,18 +714,18 @@ maybe_initialize_magick (void)
                          "your version of %s limits images to %d bits per pixel",
                          MagickPackageName, QuantumDepth);
 
       initialized = true;
     }
 }
 #endif
 
-DEFUN_DLD (__magick_read__, args, nargout,
-           "-*- texinfo -*-\n\
+DEFUN (__magick_read__, args, nargout,
+       "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{img}, @var{map}, @var{alpha}] =} __magick_read__ (@var{fname}, @var{options})\n\
 Read image with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imread} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
@@ -1378,18 +1378,18 @@ write_file (const std::string& filename,
     {
       error ("Magick++ exception: %s", e.what ());
       error_state = 1;
     }
 }
 
 #endif
 
-DEFUN_DLD (__magick_write__, args, ,
-           "-*- texinfo -*-\n\
+DEFUN (__magick_write__, args, ,
+       "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __magick_write__ (@var{fname}, @var{fmt}, @var{img}, @var{map}, @var{options})\n\
 Write image with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imwrite} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
@@ -1558,18 +1558,18 @@ Use @code{imwrite} instead.\n\
 ## No test needed for internal helper function.
 %!assert (1)
 */
 
 // Gets the minimum information from images such as its size and format. Much
 // faster than using imfinfo, which slows down a lot since. Note than without
 // this, we need to read the image once for imfinfo to set defaults (which is
 // done in Octave language), and then again for the actual reading.
-DEFUN_DLD (__magick_ping__, args, ,
-           "-*- texinfo -*-\n\
+DEFUN (__magick_ping__, args, ,
+       "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __magick_ping__ (@var{fname}, @var{idx})\n\
 Ping image information with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 \n\
 @seealso{imfinfo}\n\
 @end deftypefn")
 {
@@ -1779,18 +1779,18 @@ fill_exif_floats (octave_scalar_map& map
         }
       map.setfield (key, octave_value (values));
     }
   return;
 }
 
 #endif
 
-DEFUN_DLD (__magick_finfo__, args, ,
-           "-*- texinfo -*-\n\
+DEFUN (__magick_finfo__, args, ,
+       "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __magick_finfo__ (@var{fname})\n\
 Read image information with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imfinfo} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
@@ -2235,18 +2235,18 @@ Use @code{imfinfo} instead.\n\
   return retval;
 }
 
 /*
 ## No test needed for internal helper function.
 %!assert (1)
 */
 
-DEFUN_DLD (__magick_formats__, args, ,
-           "-*- texinfo -*-\n\
+DEFUN (__magick_formats__, args, ,
+       "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __magick_imformats__ (@var{formats})\n\
 Fill formats info with GraphicsMagick CoderInfo.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_MAGICK
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -137,16 +137,17 @@ C_COREFCN_SRC = \
 COREFCN_SRC = \
   corefcn/Cell.cc \
   corefcn/__contourc__.cc \
   corefcn/__dispatch__.cc \
   corefcn/__dsearchn__.cc \
   corefcn/__ichol__.cc \
   corefcn/__ilu__.cc \
   corefcn/__lin_interpn__.cc \
+  corefcn/__magick_read__.cc \
   corefcn/__pchip_deriv__.cc \
   corefcn/__qp__.cc \
   corefcn/balance.cc \
   corefcn/besselj.cc \
   corefcn/betainc.cc \
   corefcn/bitfcns.cc \
   corefcn/bsxfun.cc \
   corefcn/c-file-ptr-stream.cc \
diff --git a/libinterp/dldfcn/module-files b/libinterp/dldfcn/module-files
--- a/libinterp/dldfcn/module-files
+++ b/libinterp/dldfcn/module-files
@@ -1,16 +1,15 @@
 # FILE|CPPFLAGS|LDFLAGS|LIBRARIES
 __delaunayn__.cc|$(QHULL_CPPFLAGS)|$(QHULL_LDFLAGS)|$(QHULL_LIBS)
 __eigs__.cc|$(ARPACK_CPPFLAGS) $(SPARSE_XCPPFLAGS)|$(ARPACK_LDFLAGS) $(SPARSE_XLDFLAGS)|$(ARPACK_LIBS) $(SPARSE_XLIBS) $(LAPACK_LIBS) $(BLAS_LIBS)
 __fltk_uigetfile__.cc|$(FLTK_CPPFLAGS) $(FT2_CPPFLAGS)|$(FLTK_LDFLAGS) $(FT2_LDFLAGS)|$(FLTK_LIBS) $(FT2_LIBS)
 __glpk__.cc|$(GLPK_CPPFLAGS)|$(GLPK_LDFLAGS)|$(GLPK_LIBS)
 __init_fltk__.cc|$(FLTK_CPPFLAGS) $(FT2_CPPFLAGS) $(FONTCONFIG_CPPFLAGS)|$(FLTK_LDFLAGS) $(FT2_LDFLAGS)|$(FLTK_LIBS) $(FT2_LIBS) $(OPENGL_LIBS)
 __init_gnuplot__.cc|$(FT2_CPPFLAGS) $(FONTCONFIG_CPPFLAGS)||
-__magick_read__.cc|$(MAGICK_CPPFLAGS)|$(MAGICK_LDFLAGS)|$(MAGICK_LIBS)
 __osmesa_print__.cc|$(OSMESA_CPPFLAGS) $(FT2_CPPFLAGS)|$(OSMESA_LDFLAGS)|$(OSMESA_LIBS)
 __voronoi__.cc|$(QHULL_CPPFLAGS)|$(QHULL_LDFLAGS)|$(QHULL_LIBS)
 amd.cc|$(SPARSE_XCPPFLAGS)|$(SPARSE_XLDFLAGS)|$(SPARSE_XLIBS)
 audiodevinfo.cc|$(PORTAUDIO_CPPFLAGS)|$(PORTAUDIO_LDFLAGS)|$(PORTAUDIO_LIBS)
 audioread.cc|$(SNDFILE_CPPFLAGS)|$(SNDFILE_LDFLAGS)|$(SNDFILE_LIBS)
 ccolamd.cc|$(SPARSE_XCPPFLAGS)|$(SPARSE_XLDFLAGS)|$(SPARSE_XLIBS)
 chol.cc|$(SPARSE_XCPPFLAGS)|$(SPARSE_XLDFLAGS)|$(SPARSE_XLIBS)
 colamd.cc|$(SPARSE_XCPPFLAGS)|$(SPARSE_XLDFLAGS)|$(SPARSE_XLIBS)
diff --git a/libinterp/link-deps.mk b/libinterp/link-deps.mk
--- a/libinterp/link-deps.mk
+++ b/libinterp/link-deps.mk
@@ -4,29 +4,30 @@ if AMCOND_ENABLE_DYNAMIC_LINKING
   LIBOCTINTERP_LINK_DEPS =
 else
   LIBOCTINTERP_LINK_DEPS = $(DLDFCN_LIBS)
 endif
 
 LIBOCTINTERP_LINK_DEPS += \
   $(FT2_LIBS) \
   $(HDF5_LIBS) \
-  $(Z_LIBS) \
+  $(MAGICK_LIBS) \
   $(FFTW_XLIBS) \
   $(OPENGL_LIBS) \
   $(X11_LIBS) \
   $(CARBON_LIBS) \
   $(GL2PS_LIBS) \
   $(LLVM_LIBS) \
   $(JAVA_LIBS) \
   $(LAPACK_LIBS)
 
 LIBOCTINTERP_LINK_OPTS = \
   $(FT2_LDFLAGS) \
   $(HDF5_LDFLAGS) \
+  $(MAGICK_LDFLAGS) \
   $(Z_LDFLAGS) \
   $(FFTW_XLDFLAGS) \
   $(LLVM_LDFLAGS)
 
 OCT_LINK_DEPS =
 
 OCT_LINK_OPTS = $(LDFLAGS)
 
