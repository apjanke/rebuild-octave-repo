# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1552335463 0
#      Mon Mar 11 20:17:43 2019 +0000
# Branch stable
# Node ID 4af9840f9ce517ba4b591cfec0907731787a0bbc
# Parent  6c25c714bec436f70098355ab9d81d3b2fb083af
make building with Qt4 QGLWidget work again (bug #55735)

* acinclude.m4 (OCTAVE_CHECK_QT_VERSION): Also set and substitute
QT_OPENGL_CPPFLAGS and QT_OPENGL_LDFLAGS variables.
(OCTAVE_CHECK_QT_OPENGL_OK, OCTAVE_CHECK_QT_OPENGL_OFFSCREEN):
Add QT_OPENGL_CPPFLAGS to CPPFLAGS for tests, not QT_CPPFLAGS.

* libgui/graphics/module.mk %canon_reldir%___init_qt___la_CPPFLAGS):
Use QT_OPENGL_CPPFLAGS instead of QT_CPPFLAGS.
(%canon_reldir%___init_qt___la_LDFLAGS): Also include
$(QT_OPENGL_LDFLAGS) in the list.

diff --git a/libgui/graphics/module.mk b/libgui/graphics/module.mk
--- a/libgui/graphics/module.mk
+++ b/libgui/graphics/module.mk
@@ -133,32 +133,34 @@ TEMPLATE_SRC = \
 nodist_%canon_reldir%___init_qt___la_SOURCES = $(__init_qt___MOC) $(__init_qt___RC)
 
 %canon_reldir%___init_qt___la_CPPFLAGS = \
   $(AM_CPPFLAGS) \
   $(FT2_CPPFLAGS) \
   $(FONTCONFIG_CPPFLAGS) \
   $(HDF5_CPPFLAGS) \
   @OCTGUI_DLL_DEFS@ \
-  @QT_CPPFLAGS@ \
+  @QT_OPENGL_CPPFLAGS@ \
   -Ilibgui/graphics -I$(srcdir)/libgui/graphics \
   -Isrc -I$(srcdir)/libgui/src \
   -Iliboctave \
   -I$(srcdir)/liboctave/array \
   -Iliboctave/numeric -I$(srcdir)/liboctave/numeric \
   -Iliboctave/operators -I$(srcdir)/liboctave/operators \
   -I$(srcdir)/liboctave/system \
   -I$(srcdir)/liboctave/util \
   -Ilibinterp -I$(srcdir)/libinterp \
   -Ilibinterp/parse-tree -I$(srcdir)/libinterp/parse-tree \
   -Ilibinterp/corefcn -I$(srcdir)/libinterp/corefcn \
   -I$(srcdir)/libinterp/octave-value
 
 %canon_reldir%___init_qt___la_LDFLAGS = \
-  -avoid-version -module $(NO_UNDEFINED_LDFLAG) $(WARN_LDFLAGS)
+  -avoid-version -module $(NO_UNDEFINED_LDFLAG) \
+  $(QT_OPENGL_LDFLAGS) \
+  $(WARN_LDFLAGS)
 
 DLD_LIBOCTGUI_LIBADD = $(OCT_GUI_LINK_DEPS)
 
 %canon_reldir%___init_qt___la_LIBADD = \
   $(DLD_LIBOCTGUI_LIBADD) \
   $(QT_OPENGL_LIBS) \
   $(OPENGL_LIBS)
 
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1815,17 +1815,17 @@ dnl
 AC_DEFUN([OCTAVE_CHECK_QT_OPENGL_OFFSCREEN_OK], [
   dnl Normally the language and compiler flags would be set and restored
   dnl inside of the AC_CACHE_CHECK body.  Because we also need to check for
   dnl Qt header files associated with the compilation test, set and restore
   dnl these values outside of the AC_CACHE_CHECK for this macro only.
   AC_LANG_PUSH(C++)
   ac_octave_save_CPPFLAGS="$CPPFLAGS"
   ac_octave_save_CXXFLAGS="$CXXFLAGS"
-  CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
+  CPPFLAGS="$QT_OPENGL_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
   CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
   AC_CHECK_HEADERS([QOffscreenSurface])
   AC_CACHE_CHECK([whether Qt supports full offscreen OpenGL rendering],
     [octave_cv_qt_opengl_os_ok],
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
          #if HAVE_WINDOWS_H
          #  include <windows.h>
          #endif
@@ -1869,17 +1869,17 @@ dnl
 AC_DEFUN([OCTAVE_CHECK_QT_OPENGL_OK], [
   dnl Normally the language and compiler flags would be set and restored
   dnl inside of the AC_CACHE_CHECK body.  Because we also need to check for
   dnl Qt header files associated with the compilation test, set and restore
   dnl these values outside of the AC_CACHE_CHECK for this macro only.
   AC_LANG_PUSH(C++)
   ac_octave_save_CPPFLAGS="$CPPFLAGS"
   ac_octave_save_CXXFLAGS="$CXXFLAGS"
-  CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
+  CPPFLAGS="$QT_OPENGL_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
   CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
   AC_CHECK_HEADERS([QOpenGLWidget QGLWidget QGLFunctions_1_1])
   AC_CACHE_CHECK([whether Qt works with OpenGL and GLU],
     [octave_cv_qt_opengl_ok],
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
          #if HAVE_WINDOWS_H
          #  include <windows.h>
          #endif
@@ -2004,24 +2004,27 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     fi
   done
 
   if test $build_qt_gui = yes; then
     ## Retrieve Qt compilation and linker flags
     QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
+    QT_OPENGL_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"
+    QT_OPENGL_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"
     QT_OPENGL_LIBS="$($PKG_CONFIG --libs-only-l $QT_OPENGL_MODULE | $SED -e 's/^ *$//')"
 
     case $host_os in
       *darwin*)
         ## Qt might be installed in framework
         if test -z "$QT_LIBS"; then
           QT_LDFLAGS="`$PKG_CONFIG --libs-only-other $QT_MODULES | tr ' ' '\n' | $GREP -e '-F' | uniq | tr '\n' ' '`"
           QT_LIBS="`$PKG_CONFIG --libs-only-other $QT_MODULES | tr ' ' '\n' | $GREP -v -e '-F' | uniq | tr '\n' ' '`"
+          QT_OPENGL_LDFLAGS="`$PKG_CONFIG --libs-only-other $QT_OPENGL_MODULE | tr ' ' '\n' | $GREP -e '-F' | uniq | tr '\n' ' '`"
           QT_OPENGL_LIBS="`$PKG_CONFIG --libs-only-other $QT_OPENGL_MODULE | tr ' ' '\n' | $GREP -v -e '-F' | uniq | tr '\n' ' '`"
           ## Enabling link_all_deps works around libtool's imperfect handling
           ## of the -F flag
           AM_CONDITIONAL([AMCOND_LINK_ALL_DEPS],
                          [test $link_all_deps = yes || test -n "$QT_LDFLAGS"])
         fi
       ;;
     esac
@@ -2168,16 +2171,18 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
   AC_SUBST(UICFLAGS)
   AC_SUBST(RCCFLAGS)
   AC_SUBST(LRELEASEFLAGS)
   AC_SUBST(QCOLLECTIONGENERATORFLAGS)
   AC_SUBST(QHELPGENERATORFLAGS)
   AC_SUBST(QT_CPPFLAGS)
   AC_SUBST(QT_LDFLAGS)
   AC_SUBST(QT_LIBS)
+  AC_SUBST(QT_OPENGL_CPPFLAGS)
+  AC_SUBST(QT_OPENGL_LDFLAGS)
   AC_SUBST(QT_OPENGL_LIBS)
 ])
 dnl
 dnl Check if the default Fortran INTEGER is 64 bits wide.
 dnl If cross-compiling, assume 4 bytes unless the cache value
 dnl is already set.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER], [
