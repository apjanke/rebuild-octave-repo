# HG changeset patch
# User dbateman
# Date 1187987184 0
#      Fri Aug 24 20:26:24 2007 +0000
# Node ID 6c85f7d37e6154775c055e65985d25e1630c70af
# Parent  d069de22e9aa329aae8d8aaddea96581ad85e3e2
[project @ 2007-08-24 20:23:21 by dbateman]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2007-08-24  David Bateman  <dbateman@free.fr>
+
+	* configure.in: Extra Qhull bits.
+
 2007-08-24  Kim Hansen  <kimhanse@gmail.com>
 
 	* run-octave.in: Use `command` instead of $(command) to accomodate
 	brain-dead shells.
 
 2007-08-24  David Bateman  <dbateman@free.fr>
 
         * configure.in: Probe for the use of Qhull.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.571 $)
+AC_REVISION($Revision: 1.572 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1428,20 +1428,20 @@ fi
 
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name chmod \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill link localtime_r \
   lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise \
   readlink realpath rename resolvepath rindex rmdir round select setgrent \
   setlocale setpwent setvbuf sigaction siglongjmp sigpending sigprocmask \
-  sigsuspend stat strcasecmp strdup strerror stricmp \
+  sigsuspend snprintf stat strcasecmp strdup strerror stricmp \
   strncasecmp strnicmp strsignal symlink tempnam umask \
   uname unlink usleep utime vfprintf vsprintf vsnprintf waitpid \
-  _chmod _utime _utime32)
+  _chmod _snprintf x_utime _utime32)
 
 case "$canonical_host_type" in
   *-*-msdosmsvc)
     ## The %T format specifier for strftime is reportedly broken,
     ## so use our version.  We could use an actual configure test
     ## for this.
   ;;
   *)
@@ -2051,16 +2051,17 @@ Octave is now configured for $canonical_
   CAMD libraries:       $CAMD_LIBS
   COLAMD libraries:     $COLAMD_LIBS
   CCOLAMD libraries:    $CCOLAMD_LIBS
   CHOLMOD libraries:    $CHOLMOD_LIBS
   CXSPARSE libraries:   $CXSPARSE_LIBS
   HDF5 libraries:       $HDF5_LIBS
   CURL libraries:       $CURL_LIBS
   REGEX libraries:      $REGEX_LIBS
+  QHULL libraries:	$QHULL_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
@@ -2185,16 +2186,21 @@ if test -n "$warn_regex"; then
   warn_msg_printed=true
 fi
 
 if test -n "$warn_pcre"; then
   AC_MSG_WARN($warn_pcre)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_qhull"; then
+  AC_MSG_WARN($warn_qhull)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_zlib"; then
   AC_MSG_WARN($warn_zlib)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_ghostscript"; then
   AC_MSG_WARN($warn_ghostscript)
   warn_msg_printed=true
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-08-24  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m: Treat text color property.
+
 2007-08-24  John W. Eaton  <jwe@octave.org>
 
 	* plot/subplot.m, plot/plot.m, plot/grid.m:
 	Use p = get (h, "prop") instead of obj = get (h); p = obj.prop.
 
 	* miscellaneous/movefile.m: Separate second and third args and
 	use p1 and p2, not f1 and f2 when constructing arguments for
 	calls to system.  From Michael Goffioul <michael.goffioul@gmail.com>.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -594,32 +594,61 @@ function __go_draw_axes__ (h, plot_strea
 	  fputs (plot_stream, "unset colorbox;\n");
 
 	case "text"
 	  lpos = obj.position;
 	  label = obj.string;
 	  halign = obj.horizontalalignment;
 	  angle = obj.rotation;
           units = obj.units;
+	  color = obj.color;
           if (strcmpi (units, "normalized"))
             units = "graph";
           else
             units = "";
           endif
 	  
+	  if (isnumeric (color))
+	    if (have_newer_gnuplot)
+	      colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
+		       round (255*color));
+	    else
+	      if (isequal (color, [0,0,0]))
+		typ = -1;
+	      elseif (isequal (color, [1,0,0]))
+		typ = 1;
+	      elseif (isequal (color, [0,1,0]))
+		typ = 2;
+	      elseif (isequal (color, [0,0,1]))
+		typ = 3;
+	      elseif (isequal (color, [1,0,1]))
+		typ = 4;
+	      elseif (isequal (color, [0,1,1]))
+		typ = 5;
+	      elseif (isequal (color, [1,1,1]))
+		typ = -1;
+	      elseif (isequal (color, [1,1,0]))
+		typ = 7;
+	      else
+		typ = -1;
+	      endif
+	      colorspec = sprintf ("textcolor lt %d", typ);
+	    endif
+	  endif
+
 	  if (nd == 3)
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %g,%g,%g %s rotate by %f;\n",
+		     "set label \"%s\" at %s %g,%g,%g %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units,
-		     lpos(1), lpos(2), lpos(3), halign, angle);
+		     lpos(1), lpos(2), lpos(3), halign, angle, colorspec);
 	  else
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %g,%g %s rotate by %f;\n",
+		     "set label \"%s\" at %s %g,%g %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units,
-		     lpos(1), lpos(2), halign, angle);
+		     lpos(1), lpos(2), halign, angle, colorspec);
 	  endif
 
 	otherwise
 	  error ("__go_draw_axes__: unknown object class, %s",
 		 obj.type);
       endswitch
 
     endfor
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,24 @@
+2007-08-24  David Bateman  <dbateman@free.fr>
+
+	* symtab.cc (void symbol_table::clear (void)): If the record in
+	the symbol table to clear is a user function that is a sub
+	function with a static parent or if the parent is the current
+	parent function, don't delete the record.
+	(void symbol_table::clear_functions (void)): ditto.
+	(void symbol_table::clear (const std::string&)): ditto.
+	(void symbol_table::clear_function (const std::string&)): ditto.
+
+	* graphics.h (class text): Add property color.
+	* graphics.cc (text::text_properties::text_properties) ditto.
+	(text::text_properties::set): ditto.
+	(text::text_properties::get): ditto.
+	(text::text_properties::factory_defaults): ditto.
+
 2007-08-24  John W. Eaton  <jwe@octave.org>
 
 	* mappers.cc (octave_is_NA (int), xisnan (int)): New functions.
 	(install_mapper_functions): Use them to handle character data in
 	isna and isnan functions.
 
 	* load-path.cc (load_path::do_remove): Call remove_hook function
 	before removing directory from list.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1795,17 +1795,18 @@ std::string line::line_properties::go_na
 
 text::text_properties::text_properties (const graphics_handle& mh,
 					const graphics_handle& p)
   : base_properties (go_name, mh, p),
     string (""),
     units ("data"),
     position (Matrix (1, 3, 0.0)),
     rotation (0),
-    horizontalalignment ("left")
+    horizontalalignment ("left"),
+    color (Matrix (1, 3, 1.0))
 { }
 
 void
 text::text_properties::set (const property_name& name, const octave_value& val)
 {
   bool modified = true;
 
   if (name.compare ("parent"))
@@ -1822,16 +1823,18 @@ text::text_properties::set (const proper
   else if (name.compare ("units"))
     units = val;
   else if (name.compare ("position"))
     position = val;
   else if (name.compare ("rotation"))
     rotation = val;
   else if (name.compare ("horizontalalignment"))
     horizontalalignment = val;
+  else if (name.compare ("color"))
+    color = val;
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
     }
 
   if (modified)
     mark_modified ();
@@ -1846,16 +1849,17 @@ text::text_properties::get (void) const
   m.assign ("parent", parent);
   m.assign ("children", children);
   m.assign ("__modified__", __modified__);
   m.assign ("string", string);
   m.assign ("units", units);
   m.assign ("position", position);
   m.assign ("rotation", rotation);
   m.assign ("horizontalalignment", horizontalalignment);
+  m.assign ("color", color);
 
   return m;
 }
 
 octave_value
 text::text_properties::get (const property_name& name) const
 {
   octave_value retval;
@@ -1873,32 +1877,35 @@ text::text_properties::get (const proper
   else if (name.compare ("units"))
     retval = units;
   else if (name.compare ("position"))
     retval = position;
   else if (name.compare ("rotation"))
     retval = rotation;
   else if (name.compare ("horizontalalignment"))
     retval = horizontalalignment;
+  else if (name.compare ("color"))
+    retval = color;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
 }
 
 property_list::pval_map_type
 text::text_properties::factory_defaults (void)
 {
   property_list::pval_map_type m;
 
   m["string"] = "";
   m["units"] = "data";
   m["position"] = Matrix (1, 3, 0.0);
   m["rotation"] = 0;
   m["horizontalalignment"] = "left";
+  m["color"] = Matrix (1, 3, 1.0);
 
   return m;
 }
 
 std::string text::text_properties::go_name ("text");
 
 // ---------------------------------------------------------------------
 
diff --git a/src/graphics.h b/src/graphics.h
--- a/src/graphics.h
+++ b/src/graphics.h
@@ -1441,16 +1441,17 @@ public:
     static property_list::pval_map_type factory_defaults (void);
 
   private:
     octave_value string;
     octave_value units;
     octave_value position;
     octave_value rotation;
     octave_value horizontalalignment;
+    octave_value color;
 
     static std::string go_name;
   };
 
   text_properties properties;
 
 public:
   text (const graphics_handle& mh, const graphics_handle& p)
diff --git a/src/symtab.cc b/src/symtab.cc
--- a/src/symtab.cc
+++ b/src/symtab.cc
@@ -40,16 +40,18 @@ 02110-1301, USA.
 #include "defun.h"
 #include "error.h"
 #include "oct-lvalue.h"
 #include "ov.h"
 #include "pt-pr-code.h"
 #include "symtab.h"
 #include "utils.h"
 #include "variables.h"
+#include "ov-usr-fcn.h"
+#include "toplev.h"
 
 #include "gripes.h"
 #include "lo-mappers.h"
 
 #include "parse.h"
 
 unsigned long int symbol_table::symtab_count = 0;
 
@@ -789,16 +791,42 @@ void
 symbol_table::clear (void)
 {
   for (unsigned int i = 0; i < table_size; i++)
     {
       symbol_record *ptr = table[i].next ();
 
       while (ptr)
 	{
+	  if (ptr->is_user_function())
+	    {
+	      octave_user_function *fcn = ptr->def ().user_function_value ();
+	      std::string parent = (fcn ? fcn->parent_fcn_name () :
+				    std::string ());
+
+	      if (! parent.empty ())
+		{
+		  if (curr_parent_function &&
+		      parent == curr_parent_function->name ())
+		    {
+		      ptr = ptr->next ();
+		      continue;
+		    }			  
+
+		  symbol_record *parent_sr = fbi_sym_tab->lookup (parent);
+
+		  if (parent_sr && (parent_sr->is_static () ||
+				    parent_sr->is_eternal ()))
+		  {
+		    ptr = ptr->next ();
+		    continue;
+		  }
+		}
+	    }
+
 	  ptr->clear ();
 
 	  ptr = ptr->next ();
 	}
     }
 }
 
 void
@@ -827,17 +855,47 @@ symbol_table::clear_functions (void)
     {
       symbol_record *ptr = table[i].next ();
 
       while (ptr)
 	{
 	  if (ptr->is_user_function ()
 	      || ptr->is_dld_function ()
 	      || ptr->is_mex_function ())
-	    ptr->clear ();
+	    {
+
+	      if (ptr->is_user_function())
+		{
+		  octave_user_function *fcn = 
+		    ptr->def ().user_function_value ();
+		  std::string parent = (fcn ? fcn->parent_fcn_name () :
+					std::string ());
+
+		  if (! parent.empty ())
+		    {
+		      if (curr_parent_function &&
+			  parent == curr_parent_function->name ())
+			{
+			  ptr = ptr->next ();
+			  continue;
+			}			  
+
+		      symbol_record *parent_sr = fbi_sym_tab->lookup (parent);
+
+		      if (parent_sr && (parent_sr->is_static () ||
+					parent_sr->is_eternal ()))
+			{
+			  ptr = ptr->next ();
+			  continue;
+			}
+		    }
+		}
+
+	      ptr->clear ();
+	    }
 
 	  ptr = ptr->next ();
 	}
     }
 }
 
 void
 symbol_table::clear_mex_functions (void)
@@ -879,16 +937,37 @@ symbol_table::clear (const std::string& 
   unsigned int index = hash (nm);
 
   symbol_record *ptr = table[index].next ();
 
   while (ptr)
     {
       if (ptr->name () == nm)
 	{
+	  if (ptr->is_user_function())
+	    {
+	      octave_user_function *fcn = 
+		ptr->def ().user_function_value ();
+	      std::string parent = (fcn ? fcn->parent_fcn_name () :
+				    std::string ());
+
+	      if (! parent.empty ())
+		{
+		  if (curr_parent_function &&
+		      parent == curr_parent_function->name ())
+		    return true;
+
+		  symbol_record *parent_sr = fbi_sym_tab->lookup (parent);
+		  
+		  if (parent_sr && (parent_sr->is_static () ||
+				    parent_sr->is_eternal ()))
+		    return true;
+		}
+	    }
+
 	  ptr->clear ();
 
 	  return true;
 	}
       ptr = ptr->next ();
     }
 
   return false;
@@ -947,16 +1026,37 @@ symbol_table::clear_function (const std:
 
   while (ptr)
     {
       if (ptr->name () == nm
 	  && (ptr->is_user_function ()
 	      || ptr->is_dld_function ()
 	      || ptr->is_mex_function ()))
 	{
+	  if (ptr->is_user_function())
+	    {
+	      octave_user_function *fcn = 
+		ptr->def ().user_function_value ();
+	      std::string parent = (fcn ? fcn->parent_fcn_name () :
+				    std::string ());
+
+	      if (! parent.empty ())
+		{
+		  if (curr_parent_function &&
+		      parent == curr_parent_function->name ())
+		    return true;
+
+		  symbol_record *parent_sr = fbi_sym_tab->lookup (parent);
+		  
+		  if (parent_sr && (parent_sr->is_static () ||
+				    parent_sr->is_eternal ()))
+		    return true;
+		}
+	    }
+
 	  ptr->clear ();
 	  return true;
 	}
       ptr = ptr->next ();
     }
 
   return false;
 }
