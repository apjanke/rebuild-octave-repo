# HG changeset patch
# User Rik <rik@octave.org>
# Date 1524530481 25200
#      Mon Apr 23 17:41:21 2018 -0700
# Node ID 5ca8abb276444ebf78080699975525b40ce713c9
# Parent  b99b0d423807776c1f67191ac8b5e80112f39aa3
Only emit a warning, not error, when uiXXX.m are called for focusing (bug #53710).

* uibuttongroup.m, uicontrol.m: Change docstrings to avoid having to capitalize
first letter 'U' of "ui" objects.  Use Octave convention of '##' for comments
in example code in documentation.  Change existing input validation from error()
to warning() when it detects that a call to perform focusing has been given.

diff --git a/scripts/gui/uibuttongroup.m b/scripts/gui/uibuttongroup.m
--- a/scripts/gui/uibuttongroup.m
+++ b/scripts/gui/uibuttongroup.m
@@ -18,67 +18,74 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{hui} =} uibuttongroup (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {} {@var{hui} =} uibuttongroup (@var{parent}, @var{property}, @var{value}, @dots{})
 ## @deftypefnx {} {} uibuttongroup (@var{h})
 ##
 ## Create a uibuttongroup object and return a handle to it.
 ##
-## uibuttongroups are used to create group uicontrols.
+## A uibuttongroup is used to group uicontrol objects.
 ##
 ## If @var{parent} is omitted then a uibuttongroup for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uibuttongroup relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uibuttongroup object.
 ##
-## Uibuttongroup properties are documented at @ref{Uibuttongroup Properties}.
+## Properties of uibuttongroup objects are documented at
+## @ref{Uibuttongroup Properties}.
 ##
 ## Examples:
 ##
 ## @example
 ## @group
-## % create figure and panel on it
+## ## Create figure and panel on it
 ## f = figure;
-## % create a button group
+## ## Create a button group
 ## gp = uibuttongroup (f, "Position", [ 0 0.5 1 1])
-## % create a buttons in the group
+## ## Create a buttons in the group
 ## b1 = uicontrol (gp, "style", "radiobutton", ...
 ##                 "string", "Choice 1", ...
 ##                 "Position", [ 10 150 100 50 ]);
 ## b2 = uicontrol (gp, "style", "radiobutton", ...
 ##                 "string", "Choice 2", ...
 ##                 "Position", [ 10 50 100 30 ]);
-## % create a button not in the group
+## ## Create a button not in the group
 ## b3 = uicontrol (f, "style", "radiobutton", ...
 ##                 "string", "Not in the group", ...
 ##                 "Position", [ 10 50 100 50 ]);
 ## @end group
 ## @end example
+##
+## When called with a single argument @var{h} which is a handle to an existing
+## uibuttongroup object, switch the focus to the specified uibuttongroup.  This
+## functionality is not currently implemented.
 ## @seealso{figure, uipanel}
 ## @end deftypefn
 
 ## Author: zeripath
 
 function hui = uibuttongroup (varargin)
 
   if (nargin == 1 && isgraphics (varargin{1}, "uibuttongroup"))
-    error ("uibuttongroup: focusing not implemented yet");
+    warning ("uibuttongroup: focusing not implemented yet");
+    return;
   endif
 
   [h, args] = __uiobject_split_args__ ("uibuttongroup", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   hui = __go_uibuttongroup__ (h, args{:});
 
 endfunction
 
+
 %!demo
 %! f = figure;
 %! gp = uibuttongroup (f, "Position", [ 0 0.5 1 1], ...
 %!                     "selectionchangedfcn", ...
 %!                     @(x, y) display (['Selection Changed: ' get(y.NewValue, 'String')]));
 %! b1 = uicontrol (gp, "style", "radiobutton", ...
 %!                 "string", "Choice 1", ...
 %!                 "Position", [ 10 150 100 50 ]);
diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -18,33 +18,33 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{hui} =} uicontrol (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {} {@var{hui} =} uicontrol (@var{parent}, @var{property}, @var{value}, @dots{})
 ## @deftypefnx {} {} uicontrol (@var{h})
 ##
 ## Create a uicontrol object and return a handle to it.
 ##
-## uicontrols are used to create simple interactive controls such as push
-## buttons, checkboxes, edit and list controls.
+## A uicontrol object is used to create simple interactive controls such as
+## push buttons, checkboxes, edit and list controls.
 ##
 ## If @var{parent} is omitted then a uicontrol for the current figure is
 ## created.  If no figure is available, a new figure is created first.
 ##
 ## If @var{parent} is given then a uicontrol relative to @var{parent} is
 ## created.
 ##
 ## Any provided property value pairs will override the default values of the
 ## created uicontrol object.
 ##
-## Uicontrol properties are documented at @ref{Uicontrol Properties}.
+## Properties of uicontrol objects are documented at
+## @ref{Uicontrol Properties}.
 ##
-## Control of the type of uicontrol created is through the use of the
-## @var{style} property.  If no style property is provided, a push button will
-## be created.
+## The type of uicontrol created is specified by the @var{style} property.  If
+## no style property is provided, a push button will be created.
 ##
 ## Valid styles for uicontrol are:
 ##
 ## @table @asis
 ## @item @qcode{"checkbox"}
 ## Create a checkbox control that allows user on/off selection.
 ##
 ## @item @qcode{"edit"}
@@ -78,35 +78,42 @@
 ## the user to select between two states.
 ##
 ## @end table
 ##
 ## Examples:
 ##
 ## @example
 ## @group
-## % create figure and panel on it
+## ## Create figure and panel on it
 ## f = figure;
-## % create a button (default style)
-## b1 = uicontrol (f, "string", "A Button", "position",[10 10 150 40]);
-## % create an edit control
-## e1 = uicontrol (f, "style", "edit", "string", "editable text", "position",[10 60 300 40]);
-## % create a checkbox
-## c1 = uicontrol (f, "style", "checkbox", "string", "a checkbox", "position",[10 120 150 40]);
+## ## Create a button (default style)
+## b1 = uicontrol (f, "string", "A Button", "position", [10 10 150 40]);
+## ## Create an edit control
+## e1 = uicontrol (f, "style", "edit", "string", "editable text", ...
+##                    "position", [10 60 300 40]);
+## ## Create a checkbox
+## c1 = uicontrol (f, "style", "checkbox", "string", "a checkbox", ...
+##                    "position", [10 120 150 40]);
 ## @end group
 ## @end example
+##
+## When called with a single argument @var{h} which is a handle to an existing
+## uicontrol object, switch the focus to the specified uicontrol.  This
+## functionality is not currently implemented.
 ## @seealso{figure, uipanel}
 ## @end deftypefn
 
 ## Author: goffioul
 
 function hui = uicontrol (varargin)
 
   if (nargin == 1 && isgraphics (varargin{1}, "uicontrol"))
-    error ("uicontrol: focusing not implemented yet");
+    warning ("uicontrol: focusing not implemented yet");
+    return;
   endif
 
   [h, args] = __uiobject_split_args__ ("uicontrol", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   htmp = __go_uicontrol__ (h, args{:});
 
   if (nargout > 0)
     hui = htmp;
