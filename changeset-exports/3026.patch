# HG changeset patch
# User jwe
# Date 865444730 0
#      Wed Jun 04 17:18:50 1997 +0000
# Node ID 88fa1f27ac1acf9e23cac54ca8d889474443cef8
# Parent  5a9dd0a68b1dcd53b5cebc701ca59a9b8b63beb9
[project @ 1997-06-04 17:18:50 by jwe]

diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,13 +1,15 @@
+Wed Jun  4 12:14:38 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* progname.c (selfdir): Handle dir/exename case here.
+	Patch from Karl Berry  <karl@cs.umb.edu>.
+
 Tue Jun  3 23:48:22 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
-	* absolute.c (kpse_absolute_p): Recognize foo/bar as an
-	explicit_relative file name.
-
 	* common.ac: (program_invocation_name): AC_TRY_LINK only requires
 	function body.  Add declaration for program_invocation_name so gcc
 	won't complain about undeclared variable.
 
 Thu May 22 22:04:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in: Look in make instead of ../make for files to include.
 	Do ac_includes by hand, since ac_include requires an extension to
diff --git a/kpathsea/progname.c b/kpathsea/progname.c
--- a/kpathsea/progname.c
+++ b/kpathsea/progname.c
@@ -399,16 +399,21 @@ selfdir P1C(const_string, argv0)
          `file_status' function in execute_cmd.c in bash for what's
          necessary if we were to do it right.  */
       if (stat (name, &s) == 0 && s.st_mode & (S_IXUSR|S_IXGRP|S_IXOTH)) {
         self = name;
       }
     }
 #endif /* not AMIGA */
   }
+  
+  /* If argv0 is somehow dir/exename, `self' will still be NULL.  */
+  if (!self)
+    self = concat3 (".", DIR_SEP_STRING, argv0);
+    
   ret = my_dirname (remove_dots (expand_symlinks (self)));
 
   free (self);
   
   return ret;
 }
 #endif /* not WIN32 */
 
