# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1425116065 -3600
#      Sat Feb 28 10:34:25 2015 +0100
# Node ID 2f2220bfd379d091b15cf29122718fcfa7ac25b1
# Parent  6b7aee95c54c535e3f8047bc72cbb7b287de672a
ov-base-int.cc, ov-float.cc: Fix build without HDF5

* ov-base-int.cc Without this, gcc 4.7 shows:
  "error: 'gripe_save' was not declared in this scope,
  and no declarations were found by argument-dependent lookup
  at the point of instantiation [-fpermissive]
  note: declarations in dependent base 'octave_base_value'
  are not found by unqualified lookup. Use 'this->gripe_save' instead"

* ov-float.cc: Move retval outside ifdef HAVE_HDF5 block

diff --git a/libinterp/octave-value/ov-base-int.cc b/libinterp/octave-value/ov-base-int.cc
--- a/libinterp/octave-value/ov-base-int.cc
+++ b/libinterp/octave-value/ov-base-int.cc
@@ -375,17 +375,17 @@ octave_base_int_matrix<T>::save_hdf5 (oc
 
   retval = H5Dwrite (data_hid, save_type_hid, H5S_ALL, H5S_ALL,
                      H5P_DEFAULT, this->matrix.data ()) >= 0;
 
   H5Dclose (data_hid);
   H5Sclose (space_hid);
 
 #else
-  gripe_save ("hdf5");
+  this->gripe_save ("hdf5");
 #endif
 
   return retval;
 }
 
 template <class T>
 bool
 octave_base_int_matrix<T>::load_hdf5 (octave_hdf5_id loc_id, const char *name)
@@ -444,17 +444,17 @@ octave_base_int_matrix<T>::load_hdf5 (oc
       retval = true;
       this->matrix = m;
     }
 
   H5Sclose (space_id);
   H5Dclose (data_hid);
 
 #else
-  gripe_load ("hdf5");
+  this->gripe_load ("hdf5");
 #endif
 
   return retval;
 }
 
 template <class T>
 void
 octave_base_int_matrix<T>::print_raw (std::ostream& os,
@@ -584,17 +584,17 @@ octave_base_int_scalar<T>::save_hdf5 (oc
 
   retval = H5Dwrite (data_hid, save_type_hid, H5S_ALL, H5S_ALL,
                      H5P_DEFAULT, &(this->scalar)) >= 0;
 
   H5Dclose (data_hid);
   H5Sclose (space_hid);
 
 #else
-  gripe_save ("hdf5");
+  this->gripe_save ("hdf5");
 #endif
 
   return retval;
 }
 
 template <class T>
 bool
 octave_base_int_scalar<T>::load_hdf5 (octave_hdf5_id loc_id, const char *name)
@@ -627,13 +627,13 @@ octave_base_int_scalar<T>::load_hdf5 (oc
 
   this->scalar = tmp;
 
   H5Dclose (data_hid);
 
   return true;
 
 #else
-  gripe_load ("hdf5");
+  this->gripe_load ("hdf5");
   return false;
 #endif
 }
 
diff --git a/libinterp/octave-value/ov-float.cc b/libinterp/octave-value/ov-float.cc
--- a/libinterp/octave-value/ov-float.cc
+++ b/libinterp/octave-value/ov-float.cc
@@ -183,22 +183,23 @@ octave_float_scalar::load_binary (std::i
   scalar = dtmp;
   return true;
 }
 
 bool
 octave_float_scalar::save_hdf5 (octave_hdf5_id loc_id, const char *name,
                                 bool /* save_as_floats */)
 {
+  bool retval = false;
+
 #if defined (HAVE_HDF5)
 
   hsize_t dimens[3];
   hid_t space_hid, data_hid;
   space_hid = data_hid = -1;
-  bool retval = true;
 
   space_hid = H5Screate_simple (0, dimens, 0);
   if (space_hid < 0) return false;
 #if HAVE_HDF5_18
   data_hid = H5Dcreate (loc_id, name, H5T_NATIVE_FLOAT, space_hid,
                         H5P_DEFAULT, H5P_DEFAULT, H5P_DEFAULT);
 #else
   data_hid = H5Dcreate (loc_id, name, H5T_NATIVE_FLOAT, space_hid,
