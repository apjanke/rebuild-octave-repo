# HG changeset patch
# User jwe
# Date 1162141553 0
#      Sun Oct 29 17:05:53 2006 +0000
# Node ID a1754033bc6c7c775cb75bc03e6a6dd3f1d3e16d
# Parent  58f46c6f0d514ed94f72bd725c94b3c1b0eeffa9
[project @ 2006-10-29 17:05:53 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-29  John W. Eaton  <jwe@octave.org>
+
+	* run-octave.in: Handle spaces in directory names.
+
 2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* configure.in (AH_BOTTOM): If using MSVC, define __WIN32__ before
 	other #ifdefs that use it.
 
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AH_BOTTOM): Move DLL defs to
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-29  John W. Eaton  <jwe@octave.org>
+
+	* misc/Makefile.in (SPECIAL_INCLUDE): Add oct-dlldefs.h to the list.
+
 2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* misc/quit.h: Undefine min and max after including windows.h.
 
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* misc/oct-dlldefs.h: New file.
 
diff --git a/libcruft/misc/Makefile.in b/libcruft/misc/Makefile.in
--- a/libcruft/misc/Makefile.in
+++ b/libcruft/misc/Makefile.in
@@ -12,17 +12,17 @@ srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 SPECIAL_SRC := machar.c f77-extern.cc f77-fcn.c lo-error.c cquit.c quit.cc
 
 DEP_1 := $(patsubst %.c, %.d, $(SPECIAL_SRC))
 MAKEDEPS := $(patsubst %.cc, %.d, $(DEP_1))
 
-SPECIAL_INCLUDE := f77-fcn.h lo-error.h quit.h
+SPECIAL_INCLUDE := f77-fcn.h lo-error.h oct-dlldefs.h quit.h
 
 SPECIAL:= d1mach-tst.for $(SPECIAL_SRC) $(SPECIAL_INCLUDE)
 
 SPECIAL_DEPEND := machar.o f77-extern.o f77-fcn.o lo-error.o quit.o
 
 EXTERNAL_DISTFILES = $(DISTFILES)
 
 include $(TOPDIR)/Makeconf
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -1,20 +1,38 @@
 #! /bin/sh
-top_srcdir=%abs_top_srcdir%
-builddir=%builddir%
-## FIXME -- this will fail for filenames with embedded spaces...
-dirs="$top_srcdir/test $top_srcdir/scripts $builddir/scripts $builddir/src"
-dirs=$(find $dirs -type d -a ! \( \( -name CVS -o -name private \) -a -prune \))
-for d in $dirs; do
-  LOADPATH=$LOADPATH:$d
-done
-LOADPATH=$(echo $LOADPATH | sed 's|^:||')
+
+AWK=${AWK:-'awk'}
+
+# FIXME -- is there a better way to handle the possibility of spaces
+# in these names? 
+
+top_srcdir="%abs_top_srcdir%"
+builddir="%builddir%"
+
+d1="$top_srcdir/test"
+d2="$top_srcdir/scripts"
+d3="$builddir/scripts"
+d4="$builddir/src"
+
+d1_list=$(find "$d1" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
+d2_list=$(find "$d2" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
+d3_list=$(find "$d3" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
+d4_list=$(find "$d4" -type d -a ! \( \( -name CVS -o -name private \) -a -prune \) -exec echo '{}': ';')
+
+d1_path=$(echo "$d1_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
+d2_path=$(echo "$d2_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
+d3_path=$(echo "$d3_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
+d4_path=$(echo "$d4_list" | $AWK '{ s = sprintf ("%s%s", s, $0); } END { sub (/:$/, "", s); print s; }')
+
+LOADPATH="$d1_path:$d2_path:$d3_path:$d4_path"
 IMAGEPATH="$top_srcdir/scripts/image"
-args="--path=$LOADPATH --image-path=$IMAGEPATH"
+
+args="--path=\"$LOADPATH\" --image-path=\"$IMAGEPATH\""
+
 if [ $# -gt 0 ]; then
   if [ "x$1" = "x-g" ]; then
     driver="gdb"
     if [ $(/bin/pwd) = "$builddir" ]; then
       sed "s|^set args.*$|set args $args|" .gdbinit > .gdbinit-tmp
       mv .gdbinit-tmp .gdbinit
     fi
     args=""
@@ -22,12 +40,13 @@ if [ $# -gt 0 ]; then
   elif [ "x$1" = "x-valgrind" ]; then
     driver="valgrind --tool=memcheck"
     shift
   elif [ "x$1" = "x-strace" ]; then
     driver="strace -o octave.trace"
     shift
   fi
 fi
-OCTAVE_SITE_INITFILE=$top_srcdir/scripts/startup/main-rcfile \
+
+OCTAVE_SITE_INITFILE="$top_srcdir/scripts/startup/main-rcfile" \
 %library_path_var%="$builddir/src:$builddir/liboctave:$builddir/libcruft:$%library_path_var%" \
-  exec $driver $builddir/src/octave $args "$@"
+  exec $driver "$builddir/src/octave" "$args" "$@"
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-29  Juhani Saastamoinen  <juhani@cs.joensuu.fi>
+
+	* ls-mat5.cc (read_mat5_tag): Declare bytes as int32_t, not just int. 
+
 2006-10-28  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (Fatexit): Push function names on the stack even if we
 	don't have atexit or on_exit.
 
 2006-10-28  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* mappers.cc (install_mapper_functions): Undefine toascii before
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -330,17 +330,17 @@ template void read_mat5_integer_data (st
 	else \
 	  tc = re; \
   }
   
 // Read one element tag from stream IS, 
 // place the type code in TYPE and the byte count in BYTES
 // return nonzero on error
 static int
-read_mat5_tag (std::istream& is, bool swap, int32_t& type, int& bytes)
+read_mat5_tag (std::istream& is, bool swap, int32_t& type, int32_t& bytes)
 {
   unsigned int upper;
   int32_t temp;
 
   if (! is.read (reinterpret_cast<char *> (&temp), 4 ))
     goto data_read_error;
 
   if (swap)
