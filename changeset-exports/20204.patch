# HG changeset patch
# User Philip Nienhuis <prnienhuis@users.sf.net>
# Date 1432059585 -7200
#      Tue May 19 20:19:45 2015 +0200
# Branch stable
# Node ID 935832827f47466e859e4f078a2d6cce93ce56af
# Parent  b7ee5cefa9d6f45701500e040deb2b439a2aed96
textread.m: properly initialize endofline if specified by user (bug #45046)

diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -110,17 +110,22 @@ function varargout = textread (filename,
     warning ("textread: empty file");
     varargout = cell (1, nargout);
     return;
   endif
 
   endofline = find (strcmpi (varargin, "endofline"), 1);
   if (! isempty (endofline))
     ## 'endofline' option set by user.
-    if (! ischar (varargin{endofline + 1}));
+    if (ischar (varargin{endofline + 1}))
+      eol_char = varargin{endofline + 1};
+      if (! any (strcmp (eol_char, {"", "\n", "\r", "\r\n"})))
+        error ("textscan: illegal EndOfLine character value specified");
+      endif
+    else
       error ("character value required for EndOfLine");
     endif
   else
     ## Determine EOL from file.
     ## Search for EOL candidates in the first BUFLENGTH chars
     eol_srch_len = min (length (str), BUFLENGTH);
     ## First try DOS (CRLF)
     if (! isempty (strfind (str(1 : eol_srch_len), "\r\n")))
@@ -305,16 +310,30 @@ endfunction
 %! fid = fopen (f, "w");
 %! d = rand (1, 4);
 %! fprintf (fid, ",2,,4\n5,\n");
 %! fclose (fid);
 %! A = textread (f, "", "delimiter", ",");
 %! unlink (f);
 %! assert (A, [0 2 0 4; 5 0 0 0], 1e-6);
 
+## Test endofline
+%!test
+%! f = tempname ();
+%! fid = fopen (f, "w");
+%! fprintf (fid, "a\rb\rc");
+%! fclose (fid);
+%! ## Test EOL detection
+%! d = textread (f, "%s");
+%! assert (d, {"a";"b";"c"});
+%! ## Test explicit EOL specification (bug #45046)
+%! d = textread (f, "%s", "endofline", "\r");
+%! assert (d, {"a"; "b"; "c"});
+%! unlink (f);
+
 ## Test input validation
 %!error textread ()
 %!error textread (1)
 %!error <arguments must be strings> textread (1, "%f")
 %!error <arguments must be strings> textread ("fname", 1)
 %!error <missing or illegal value for> textread (file_in_loadpath ("textread.m"), "", "headerlines")
 %!error <missing or illegal value for> textread (file_in_loadpath ("textread.m"), "", "headerlines", 'hh')
 %!error <character value required for> textread (file_in_loadpath ("textread.m"), "%s", "endofline", true)
