# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1250683130 -7200
#      Wed Aug 19 13:58:50 2009 +0200
# Node ID 588c6bb6fdcbc02a1f56fb95ab0b904e89cfe2f1
# Parent  1beb23d2b892a26dfd60087f598ee2a2217418b1
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-08-19  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Update.
+
 2009-08-18  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4 (OCTAVE_HDF5_HAS_REQUIRED_API): If test fails, set
 	octave_hdf5_ok to no instead of setting HAVE_HDF5 to false.
 	* configure.in: Check octave_hdf5_ok instead of HAVE_HDF5.
 	Set TEXINFO_HDF5 if HDF5 library is found.
 
 2009-08-18  John W. Eaton  <jwe@octave.org>
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -36,16 +36,38 @@ Summary of important user-visible change
       assert (2*linspace (1, 5, 5), 2*(1:5))
       assert (zeros (0, 0), [])
       assert (2*ones (1, 5), (2) (ones (1,5)))
 
  ** Function handles are now aware of overloaded functions. If a function
     is overloaded, the handle determines at the time of its reference which
     function to call. A non-overloaded version does not need to exist.
 
+ ** The operation-assignment operators +=, -=, *= and /= now behave more
+    efficiently in certain cases. For instance, if m is a matrix and s
+    a scalar, then the statement
+
+      m += s;
+ 
+    will operate on m's data in-place if it is not shared by another variable,
+    usually increasing both time and memory efficiency.
+    
+    Only the most common combinations are affected, namely:
+    
+      matrix += matrix
+      matrix -= matrix
+      matrix += scalar
+      matrix -= scalar
+      matrix *= scalar
+      matrix /= scalar
+
+   where matrix and scalar belong to the same class. The left-hand side must be
+   a simple variable reference.
+ 
+
 Summary of important user-visible changes for version 3.2:
 ---------------------------------------------------------
 
  ** Compatibility with Matlab graphics has been improved.
 
     The hggroup object and associated listener callback functions have
     been added allowing the inclusion of group objects.  Data sources
     have been added to these group objects such that
