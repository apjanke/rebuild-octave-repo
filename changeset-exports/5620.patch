# HG changeset patch
# User dbateman
# Date 1139862282 0
#      Mon Feb 13 20:24:42 2006 +0000
# Node ID 0225507842a19d9aaa7ccf5468da7681be21a392
# Parent  e9112ff172b1842b3da60a04b46a9592bbcfd2c5
[project @ 2006-02-13 20:24:42 by dbateman]

diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -626,17 +626,17 @@ matches to the first match.\n\
 %! assert (size(te), [1,1])
 %! assert (isempty(te{1}))
 %! assert (m{1},'short')
 %! ## Matlab gives [1,0] here but that seems wrong.
 %! assert (size(t), [1,1])
 
 %!test
 %! ## This test is expected to fail if PCRE is not installed
-%! if (strfind(octave_config_info ("DEFS"),"HAVE_PCRE"))
+%! if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_PCRE")))
 %!   [s, e, te, m, t, nm] = regexp('short test string','(?<word1>\w*t)\s*(?<word2>\w*t)');
 %!   assert (s,1)
 %!   assert (e,10)
 %!   assert (size(te), [1,1])
 %!   assert (te{1}, [1 5; 7, 10])
 %!   assert (m{1},'short test')
 %!   assert (size(t),[1,1])
 %!   assert (t{1}{1},'short')
@@ -645,17 +645,17 @@ matches to the first match.\n\
 %!   assert (!isempty(fieldnames(nm)))
 %!   assert (sort(fieldnames(nm)),{'word1';'word2'})
 %!   assert (nm.word1,'short')
 %!   assert (nm.word2,'test')
 %! endif
 
 %!test
 %! ## This test is expected to fail if PCRE is not installed
-%! if (strfind(octave_config_info ("DEFS"),"HAVE_PCRE"))
+%! if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_PCRE")))
 %!   [nm, m, te, e, s, t] = regexp('short test string','(?<word1>\w*t)\s*(?<word2>\w*t)', 'names', 'match', 'tokenExtents', 'end', 'start', 'tokens');
 %!   assert (s,1)
 %!   assert (e,10)
 %!   assert (size(te), [1,1])
 %!   assert (te{1}, [1 5; 7, 10])
 %!   assert (m{1},'short test')
 %!   assert (size(t),[1,1])
 %!   assert (t{1}{1},'short')
@@ -664,17 +664,17 @@ matches to the first match.\n\
 %!   assert (!isempty(fieldnames(nm)))
 %!   assert (sort(fieldnames(nm)),{'word1';'word2'})
 %!   assert (nm.word1,'short')
 %!   assert (nm.word2,'test')
 %! endif
 
 %!test
 %! ## This test is expected to fail if PCRE is not installed
-%! if (strfind(octave_config_info ("DEFS"),"HAVE_PCRE"))
+%! if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_PCRE")))
 %!   [t, nm] = regexp("John Davis\nRogers, James",'(?<first>\w+)\s+(?<last>\w+)|(?<last>\w+),\s+(?<first>\w+)','tokens','names');
 %!   assert (size(t), [1,2]);
 %!   assert (t{1}{1},'John');
 %!   assert (t{1}{2},'Davis');
 %!   assert (t{2}{1},'Rogers');
 %!   assert (t{2}{2},'James');
 %!   assert (size(nm), [1,1]);
 %!   assert (nm.first{1},'John');
@@ -765,17 +765,17 @@ if there are none. See @code{regexp} for
 %! assert (size(te), [1,1])
 %! assert (isempty(te{1}))
 %! assert (m{1},'ShoRt')
 %! ## Matlab gives [1,0] here but that seems wrong.
 %! assert (size(t), [1,1])
 
 %!test
 %! ## This test is expected to fail if PCRE is not installed
-%! if (strfind(octave_config_info ("DEFS"),"HAVE_PCRE"))
+%! if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_PCRE")))
 %!   [s, e, te, m, t, nm] = regexpi('ShoRt Test String','(?<word1>\w*t)\s*(?<word2>\w*t)');
 %!   assert (s,1)
 %!   assert (e,10)
 %!   assert (size(te), [1,1])
 %!   assert (te{1}, [1 5; 7, 10])
 %!   assert (m{1},'ShoRt Test')
 %!   assert (size(t),[1,1])
 %!   assert (t{1}{1},'ShoRt')
@@ -784,17 +784,17 @@ if there are none. See @code{regexp} for
 %!   assert (!isempty(fieldnames(nm)))
 %!   assert (sort(fieldnames(nm)),{'word1';'word2'})
 %!   assert (nm.word1,'ShoRt')
 %!   assert (nm.word2,'Test')
 %! endif
 
 %!test
 %! ## This test is expected to fail if PCRE is not installed
-%! if (strfind(octave_config_info ("DEFS"),"HAVE_PCRE"))
+%! if (!isempty(findstr(octave_config_info ("DEFS"),"HAVE_PCRE")))
 %!   [nm, m, te, e, s, t] = regexpi('ShoRt Test String','(?<word1>\w*t)\s*(?<word2>\w*t)', 'names', 'match', 'tokenExtents', 'end', 'start', 'tokens');
 %!   assert (s,1)
 %!   assert (e,10)
 %!   assert (size(te), [1,1])
 %!   assert (te{1}, [1 5; 7, 10])
 %!   assert (m{1},'ShoRt Test')
 %!   assert (size(t),[1,1])
 %!   assert (t{1}{1},'ShoRt')
