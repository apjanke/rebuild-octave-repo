# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311708083 -7200
#      Tue Jul 26 21:21:23 2011 +0200
# Node ID a4b5cad8f7c6dab5dd4faeca8f671dd961f6c238
# Parent  ac64163efbe8b4410d86596336a13dea05d94573
Added command line parser class.

diff --git a/gui/octave-gui.pro b/gui/octave-gui.pro
--- a/gui/octave-gui.pro
+++ b/gui/octave-gui.pro
@@ -80,17 +80,18 @@ SOURCES +=\
     	  src/FileEditorMdiSubWindow.cpp \
     	  src/BrowserWidget.cpp \
     	  src/ImageViewerMdiSubWindow.cpp \
     src/IRCWidget.cpp \
     src/qirc/IRCClient.cpp \
     src/qirc/IClientSocket.cpp \
     src/SettingsDialog.cpp \
     src/OctaveGUI.cpp \
-    src/ResourceManager.cpp
+    src/ResourceManager.cpp \
+    src/CommandLineParser.cpp
 
 HEADERS += \
         src/terminal/TerminalCharacterDecoder.h \
         src/terminal/Character.h \
         src/terminal/CharacterColor.h \
 		  src/terminal/ColorTables.h \
         src/terminal/KeyboardTranslator.h \
         src/terminal/Screen.h \
@@ -123,12 +124,13 @@ HEADERS += \
     	  src/FileEditorMdiSubWindow.h \
     	  src/BrowserWidget.h \
     	  src/ImageViewerMdiSubWindow.h \
     src/IRCWidget.h \
     src/qirc/IRCCodes.h \
     src/qirc/IRCClient.h \
     src/qirc/IClientSocket.h \
     src/SettingsDialog.h \
-    src/ResourceManager.h
+    src/ResourceManager.h \
+    src/CommandLineParser.h
 
 FORMS += \
     src/SettingsDialog.ui
diff --git a/gui/src/CommandLineParser.cpp b/gui/src/CommandLineParser.cpp
new file mode 100644
--- /dev/null
+++ b/gui/src/CommandLineParser.cpp
@@ -0,0 +1,47 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "CommandLineParser.h"
+
+CommandLineParser::CommandLineParser ()
+{
+}
+
+void
+CommandLineParser::registerOption (CommandLineOption commandLineOption)
+{
+  if (m_registeredCommandLineOptions.contains(commandLineOption))
+    m_registeredCommandLineOptions.append(commandLineOption);
+}
+
+void
+CommandLineParser::registerOption (QString longOption, QString shortOption, QString description, bool withArgument)
+{
+  CommandLineOption commandLineOption;
+  commandLineOption.longOption = longOption;
+  commandLineOption.shortOption = shortOption;
+  commandLineOption.description = description;
+  commandLineOption.withArgument = withArgument;
+  registerOption (commandLineOption);
+}
+
+void
+CommandLineParser::parse (int argc, char** argv)
+{
+
+}
diff --git a/gui/src/CommandLineParser.h b/gui/src/CommandLineParser.h
new file mode 100644
--- /dev/null
+++ b/gui/src/CommandLineParser.h
@@ -0,0 +1,51 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#ifndef COMMANDLINEPARSER_H
+#define COMMANDLINEPARSER_H
+
+#include <QList>
+#include <QString>
+
+class CommandLineParser
+{
+public:
+  struct CommandLineOption
+  {
+    QString longOption;
+    QString shortOption;
+    QString description;
+    bool withArgument;
+
+    bool operator== (CommandLineOption other)
+    {
+        return longOption == other.longOption
+            || shortOption == other.shortOption;
+    }
+  };
+
+  CommandLineParser ();
+  void registerOption (CommandLineOption commandLineOption);
+  void registerOption (QString longOption, QString shortOption, QString description, bool withArgument);
+  void parse (int argc, char** argv);
+
+private:
+  QList<CommandLineOption> m_registeredCommandLineOptions;
+};
+
+#endif // COMMANDLINEPARSER_H
diff --git a/gui/src/FilesDockWidget.cpp b/gui/src/FilesDockWidget.cpp
--- a/gui/src/FilesDockWidget.cpp
+++ b/gui/src/FilesDockWidget.cpp
@@ -19,16 +19,17 @@
 #include "ResourceManager.h"
 #include "FilesDockWidget.h"
 
 #include <QApplication>
 #include <QFileInfo>
 #include <QCompleter>
 #include <QSettings>
 #include <QProcess>
+#include <QDebug>
 
 FilesDockWidget::FilesDockWidget (QWidget * parent):QDockWidget (parent)
 {
   setObjectName ("FilesDockWidget");
   setWindowTitle (tr ("Current Folder"));
   setWidget (new QWidget (this));
 
   // Create a toolbar
@@ -167,9 +168,10 @@ FilesDockWidget::noticeSettings ()
 {
   QSettings *settings = ResourceManager::instance ()->settings ();
   m_fileTreeView->setColumnHidden (0, !settings->value ("showFilenames").toBool ());
   m_fileTreeView->setColumnHidden (1, !settings->value ("showFileSize").toBool ());
   m_fileTreeView->setColumnHidden (2, !settings->value ("showFileType").toBool ());
   m_fileTreeView->setColumnHidden (3, !settings->value ("showLastModified").toBool ());
   m_fileTreeView->setAlternatingRowColors (settings->value ("useAlternatingRowColors").toBool ());
   //if (settings.value ("showHiddenFiles").toBool ())
+  // TODO: React on option for hidden files.
 }
diff --git a/gui/src/OctaveGUI.cpp b/gui/src/OctaveGUI.cpp
--- a/gui/src/OctaveGUI.cpp
+++ b/gui/src/OctaveGUI.cpp
@@ -14,23 +14,28 @@
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include <QtGui/QApplication>
 #include <QTranslator>
 #include <QSettings>
+#include "CommandLineParser.h"
 #include "ResourceManager.h"
 #include "MainWindow.h"
 
 int
 main (int argc, char *argv[])
 {
   QApplication application (argc, argv);
+  CommandLineParser commandLineParser;
+  commandLineParser.registerOption ("--config", "-c", "Tells OctaveGUI to use that configuration file.", true);
+  commandLineParser.parse (argc, argv);
+
   // QSettings *settings = ResourceManager::instance ()->instance ();
 
   // TODO: reimplement translation.
   // translator.load (translatorFile);
   // application.installTranslator (&translator);
 
   MainWindow w;
   w.show ();
diff --git a/gui/src/ResourceManager.cpp b/gui/src/ResourceManager.cpp
--- a/gui/src/ResourceManager.cpp
+++ b/gui/src/ResourceManager.cpp
@@ -1,17 +1,36 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
 #include "ResourceManager.h"
 
 ResourceManager ResourceManager::m_singleton;
 
 ResourceManager::ResourceManager ()
 {
+  m_settings = 0;
   QDesktopServices desktopServices;
   m_homePath = desktopServices.storageLocation (QDesktopServices::HomeLocation);
-  m_settings = new QSettings (m_homePath + "/.octave-gui", QSettings::IniFormat);
+  setSettings(m_homePath + "/.octave-gui");
 }
 
 ResourceManager::~ResourceManager ()
 {
   delete m_settings;
 }
 
 QSettings *
@@ -20,8 +39,15 @@ ResourceManager::settings ()
   return m_settings;
 }
 
 QString
 ResourceManager::homePath ()
 {
   return m_homePath;
 }
+
+void
+ResourceManager::setSettings (QString file)
+{
+  delete m_settings;
+  m_settings = new QSettings (file, QSettings::IniFormat);
+}
diff --git a/gui/src/ResourceManager.h b/gui/src/ResourceManager.h
--- a/gui/src/ResourceManager.h
+++ b/gui/src/ResourceManager.h
@@ -1,8 +1,26 @@
+/* OctaveGUI - A graphical user interface for Octave
+ * Copyright (C) 2011 Jacob Dawid
+ * jacob.dawid@googlemail.com
+ *
+ * This program is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
 #ifndef RESOURCEMANAGER_H
 #define RESOURCEMANAGER_H
 
 #include <QSettings>
 #include <QDesktopServices>
 
 class ResourceManager
 {
@@ -12,16 +30,17 @@ public:
   static ResourceManager *
   instance ()
   {
     return &m_singleton;
   }
 
   QSettings *settings ();
   QString homePath ();
+  void setSettings (QString file);
 private:
   ResourceManager ();
 
   QSettings *m_settings;
   QString m_homePath;
   static ResourceManager m_singleton;
 };
 
