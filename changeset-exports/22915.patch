# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1481907813 18000
#      Fri Dec 16 12:03:33 2016 -0500
# Node ID 7766e3ef6c69c605323bba899a11aaf92860ec17
# Parent  b7ffd93b8d06df96b037c43b75a7591ed79e0f75
* __ode15__.cc: Avoid old-style cast warnings.

diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -43,16 +43,35 @@ along with Octave; see the file COPYING.
 #    include <ida/ida_klu.h>
 #    include <sundials/sundials_sparse.h>
 #  endif
 
 #  if defined (HAVE_NVECTOR_NVECTOR_SERIAL_H)
 #    include <nvector/nvector_serial.h>
 #  endif
 
+static inline realtype *
+nv_data_s (N_Vector& v)
+{
+#if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
+// Disable warning from GCC about old-style casts in Sundials macro
+// expansions.  Do this in a function so that this diagnostic may still
+// be enabled for the rest of the file.
+#pragma GCC diagnostic push
+#pragma GCC diagnostic ignored "-Wold-style-cast"
+#endif
+
+  return NV_DATA_S (v);
+  
+#if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
+// Restore prevailing warning state for remainder of the file.
+#pragma GCC diagnostic pop
+#endif
+}
+
 namespace octave
 {
   class IDA
   {
   public:
 
     typedef
     ColumnVector (*DAERHSFuncIDA) (const ColumnVector& x,
@@ -298,17 +317,17 @@ namespace octave
 
     ColumnVector yp =
       IDA::NVecToCol (yyp, num);
 
     ColumnVector res =
       (*fun) (y, yp, t, ida_fun);
 
     realtype *puntrr =
-      NV_DATA_S (rr);
+      nv_data_s (rr);
 
     for (octave_idx_type i = 0; i < num; i++)
       puntrr [i] = res (i);
 
     END_INTERRUPT_WITH_EXCEPTIONS;
   }
 
   void
@@ -406,32 +425,32 @@ namespace octave
     END_INTERRUPT_WITH_EXCEPTIONS;
   }
 
   ColumnVector
   IDA::NVecToCol (N_Vector& v, long int n)
   {
     ColumnVector data (n);
     realtype *punt;
-    punt = NV_DATA_S (v);
+    punt = nv_data_s (v);
 
     for (octave_idx_type i = 0; i < n; i++)
       data (i) = punt [i];
 
     return data;
   }
 
   N_Vector
   IDA::ColToNVec (const ColumnVector &data, long int n)
   {
     N_Vector v =
       N_VNew_Serial (n);
 
     realtype * punt;
-    punt = NV_DATA_S (v);
+    punt = nv_data_s (v);
 
     for (octave_idx_type i = 0; i < n; i++)
       punt [i] = data (i);
 
     return v;
   }
 
   void
