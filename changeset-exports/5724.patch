# HG changeset patch
# User jwe
# Date 1143754493 0
#      Thu Mar 30 21:34:53 2006 +0000
# Node ID 82247c2a7520debb314faf57416d284808b899cf
# Parent  7fc5276c8f2f571d44c50dd081abfec4241d8ada
[project @ 2006-03-30 21:34:52 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-03-30  Bill Denney  <denney@seas.upenn.edu>
+
+ 	* data.cc: Include numel in @seealso.
+
 2006-03-30  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/fftw_wisdom.cc: Don't attempt to save wisdom to
 	an empty filename or invalid filename.
 
 2006-03-28  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/matrix_type.cc: Update copyright notice and FSF
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -964,16 +964,17 @@ Trailing singleton dimensions are not co
 
   return retval;
 }
 
 DEFUN (numel, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} numel (@var{a})\n\
 Returns the number of elements in the object @var{a}.\n\
+@seealso{size}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       int numel = args(0).numel ();
 
@@ -1017,16 +1018,17 @@ corresponding dimension.  For example\n\
 \n\
 @example\n\
 size ([1, 2; 3, 4; 5, 6], 2)\n\
      @result{} 2\n\
 @end example\n\
 \n\
 @noindent\n\
 returns the number of columns in the given matrix.\n\
+@seealso{numel}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -1113,34 +1115,34 @@ but in general they will give the same r
 
   return retval;
 }
 
 DEFUN (rows, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} rows (@var{a})\n\
 Return the number of rows of @var{a}.\n\
-@seealso{size, columns, length, isscalar, isvector, ismatrix}\n\
+@seealso{size, numel, columns, length, isscalar, isvector, ismatrix}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).rows ();
   else
     print_usage ("rows");
 
   return retval;
 }
 
 DEFUN (columns, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} columns (@var{a})\n\
 Return the number of columns of @var{a}.\n\
-@seealso{size, rows, length, isscalar, isvector, and ismatrix}\n\
+@seealso{size, numel, rows, length, isscalar, isvector, and ismatrix}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).columns ();
   else
     print_usage ("columns");
