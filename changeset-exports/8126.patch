# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1222104510 14400
#      Mon Sep 22 13:28:30 2008 -0400
# Node ID a012580f0d2f71cdd3e3b21b853b5ffc6c909551
# Parent  4fce6da228c6700cd21935953c37b9b4e5b018f0
comet.m: New File.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-09-22 Ben Abbott <bpabbott@mac.com>
+
+	* plot/comet.m: New file.
+	* plot/Makefile.in (SOURCES): Add it here.
+
 2008-09-22  David Bateman  <dbateman@free.fr>
 
 	general/quadgk.m: No function count in quadgk and so don't try and
 	print it when given trace argument.
 
 2008-09-18  Jaroslav Hajek <highegg@gmail.com>
 
 	* general/blkdiag.m: Skip assignment if rhs is empty.
diff --git a/scripts/plot/Makefile.in b/scripts/plot/Makefile.in
--- a/scripts/plot/Makefile.in
+++ b/scripts/plot/Makefile.in
@@ -81,16 +81,17 @@ SOURCES = \
   bar.m \
   barh.m \
   box.m \
   caxis.m \
   clf.m \
   close.m \
   closereq.m \
   colorbar.m \
+  comet.m \
   compass.m \
   contour3.m \
   contour.m \
   contourc.m \
   contourf.m \
   cylinder.m \
   gnuplot_drawnow.m \
   ellipsoid.m \
diff --git a/scripts/plot/comet.m b/scripts/plot/comet.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/comet.m
@@ -0,0 +1,87 @@
+## Copyright (C) 2008 Ben Abbott
+## 
+## This program is free software; you can redistribute it and/or modify
+## it under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2 of the License, or
+## (at your option) any later version.
+## 
+## This program is distributed in the hope that it will be useful,
+## but WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+## 
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} comet (@var{y})
+## @deftypefnx {Function File} {} comet (@var{x}, @var{y})
+## @deftypefnx {Function File} {} comet (@var{x}, @var{y}, @var{p})
+## @deftypefnx {Function File} {} comet (@var{ax}, @dots{})
+## Produce a simple comet style animation along the trajectory provided by 
+## the input coordinate vecors (@var{x}, @var{y}), where @var{x} will default
+## to the indices of @var{y}.
+##
+## The speed of the comet may be controlled by @var{p}, which represents the
+## time which passes as the animation passes from one point to the next. The
+## default for @var{p} is 0.1 seconds.
+##
+## If @var{ax} is specified the animition is produced in that axis rather than
+## the @code{gca}.
+## 
+## @seealso{comet3}
+## @end deftypefn
+
+## Author: Ben Abbott bpabbott@mac.com
+## Created: 2008-09-21
+
+function comet (varargin)
+
+  if (nargin == 0)
+    print_usage ();
+  elseif (numel (varargin{1}) == 1 && ishandle (varargin{1}))
+    axes (varargin{1});
+    varargin = varargin(2:end);
+    numargin = nargin - 1;
+  else
+    numargin = nargin;
+  endif
+
+  p = 0.1;
+  if (numargin == 1)
+    y = varargin{1};
+    x = 1:numel(y);
+  elseif (numargin == 2)
+    x = varargin{1};
+    y = varargin{2};
+  elseif (numargin == 3)
+    x = varargin{1};
+    y = varargin{2};
+    p = varargin{3};
+  else
+    print_usage ();
+  endif
+  
+  theaxis = [min(x), max(x), min(y), max(y)];
+  num = numel (y);
+  dn = round (num/10);
+  for n = 1:(num+dn);
+    m = n - dn;
+    m = max ([m, 1]);
+    k = min ([n, num]);
+    h = plot (x(1:m), y(1:m), "r", x(m:k), y(m:k), "g", x(k), y(k), "ob");
+    axis (theaxis);
+    drawnow ();
+    pause (p);
+  endfor
+
+endfunction
+
+%!demo
+%! t = 0:.1:2*pi;
+%! x = cos(2*t).*(cos(t).^2);
+%! y = sin(2*t).*(sin(t).^2);
+%! comet(x,y)
+
+
