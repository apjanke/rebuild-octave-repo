# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1272049109 14400
#      Fri Apr 23 14:58:29 2010 -0400
# Node ID 394a83606f03765d7b7aa6783bc4f23d0c6671a3
# Parent  fb14397f73cb8e4d0aa016778db195b1caa1c290
avoid deprecated function warnings from GCC

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2010-04-23  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/gcd.cc (Fgcd): Use two-argument dim_vector constructor.
+
+	* ov-str-mat.cc (octave_char_matrix_str::do_index_op_internal):
+	Explicitly create idx_vec with column orientation.
+
+	* oct-obj.cc (octave_value_list::octave_value_list):
+	Explicitly resize data to be row vector.
+
 2010-04-23  Rik <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/regexp.cc.: eliminate compile warning 
 	warning: suggest explicit braces to avoid ambiguous 'else'.
 
 2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-base-scalar.h (octave_base_scalar::reshape,
diff --git a/src/DLD-FUNCTIONS/gcd.cc b/src/DLD-FUNCTIONS/gcd.cc
--- a/src/DLD-FUNCTIONS/gcd.cc
+++ b/src/DLD-FUNCTIONS/gcd.cc
@@ -103,17 +103,17 @@ all of the values of @var{v1}, @dots{} i
     {
       print_usage ();
       return retval;
     }
 
   bool all_args_scalar = true;
   bool any_single = false;
 
-  dim_vector dv(1);
+  dim_vector dv (1, 1);
 
   for (int i = 0; i < nargin; i++)
     {
       if (! args(i).is_scalar_type ())
         {
           if (! args(i).is_matrix_type ())
             {
               error ("gcd: invalid argument type");
diff --git a/src/oct-obj.cc b/src/oct-obj.cc
--- a/src/oct-obj.cc
+++ b/src/oct-obj.cc
@@ -42,17 +42,17 @@ octave_value_list::octave_value_list (co
       nel += p->length ();
     }
 
   // Optimize single-element case
   if (n == 1)
     data = lst.front ().data;
   else if (nel > 0)
     {
-      data.resize (nel);
+      data.resize (1, nel);
       octave_idx_type k = 0;
       for (std::list<octave_value_list>::const_iterator p = lst.begin ();
            p != lst.end (); p++)
         {
           data.assign (idx_vector (k, k + p->length ()), p->data);
           k += p->length ();
         }
       assert (k == nel);
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -119,17 +119,17 @@ octave_char_matrix_str::do_index_op_inte
         if (! error_state)
           retval = octave_value (charNDArray (matrix.index (i, j, resize_ok)),
                                  type);
       }
       break;
 
     default:
       {
-        Array<idx_vector> idx_vec (len);
+        Array<idx_vector> idx_vec (len, 1);
 
         for (octave_idx_type i = 0; i < len; i++)
           idx_vec(i) = idx(i).index_vector ();
 
         if (! error_state)
           retval = octave_value (charNDArray (matrix.index (idx_vec, resize_ok)),
                                  type);
       }
