# HG changeset patch
# User Rik <rik@octave.org>
# Date 1519069056 28800
#      Mon Feb 19 11:37:36 2018 -0800
# Node ID 06884b2a4fef31126b6f7a101add8238ac0c78fd
# Parent  240bd1e4f31eac45fed804184111c660b596ec5c
# Parent  956e28867c80e826ecfbac04c6091ad71e96edf2
maint: merge stable to default.

diff --git a/liboctave/array/dSparse.cc b/liboctave/array/dSparse.cc
--- a/liboctave/array/dSparse.cc
+++ b/liboctave/array/dSparse.cc
@@ -4665,19 +4665,20 @@ SparseMatrix::bsolve (MatrixType& mattyp
                       for (F77_INT i = 0; i < b_nr; i++)
                         {
                           double tmp = Bx[i];
                           if (tmp != 0.0)
                             {
                               if (ii == x_nz)
                                 {
                                   // Resize the sparse matrix
-                                  octave_idx_type sz = x_nz *
-                                                       (b_nc - j) / b_nc;
-                                  sz = (sz > 10 ? sz : 10) + x_nz;
+                                  octave_idx_type sz;
+                                  sz = (static_cast<double> (b_nc) - j) / b_nc
+                                       * x_nz;
+                                  sz = x_nz + (sz > 100 ? sz : 100);
                                   retval.change_capacity (sz);
                                   x_nz = sz;
                                 }
                               retval.xdata (ii) = tmp;
                               retval.xridx (ii++) = i;
                             }
                         }
                       retval.xcidx (j+1) = ii;
@@ -6141,18 +6142,20 @@ SparseMatrix::fsolve (MatrixType& mattyp
                   for (octave_idx_type i = 0; i < b_nr; i++)
                     {
                       double tmp = Xx[i];
                       if (tmp != 0.0)
                         {
                           if (ii == x_nz)
                             {
                               // Resize the sparse matrix
-                              octave_idx_type sz = x_nz * (b_nc - j) / b_nc;
-                              sz = (sz > 10 ? sz : 10) + x_nz;
+                              octave_idx_type sz;
+                              sz = (static_cast<double> (b_nc) - j) / b_nc
+                                   * x_nz;
+                              sz = x_nz + (sz > 100 ? sz : 100);
                               retval.change_capacity (sz);
                               x_nz = sz;
                             }
                           retval.xdata (ii) = tmp;
                           retval.xridx (ii++) = i;
                         }
                     }
                   retval.xcidx (j+1) = ii;
@@ -6666,18 +6669,20 @@ SparseMatrix::fsolve (MatrixType& mattyp
                   for (octave_idx_type i = 0; i < b_nr; i++)
                     {
                       Complex tmp = Complex (Xx[i], Xz[i]);
                       if (tmp != 0.0)
                         {
                           if (ii == x_nz)
                             {
                               // Resize the sparse matrix
-                              octave_idx_type sz = x_nz * (b_nc - j) / b_nc;
-                              sz = (sz > 10 ? sz : 10) + x_nz;
+                              octave_idx_type sz;
+                              sz = (static_cast<double> (b_nc) - j) / b_nc
+                                   * x_nz;
+                              sz = x_nz + (sz > 100 ? sz : 100);
                               retval.change_capacity (sz);
                               x_nz = sz;
                             }
                           retval.xdata (ii) = tmp;
                           retval.xridx (ii++) = i;
                         }
                     }
                   retval.xcidx (j+1) = ii;
