# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1302112332 -7200
#      Wed Apr 06 19:52:12 2011 +0200
# Node ID 381b7413c652e29bb064783c90f71cd68e109696
# Parent  01eb3fd5faf56b8e8685bf8e4d7feb78f893f919
Prevented the command line to lose focus when pressing tab.

diff --git a/gui//octaveterminal.h b/gui//octaveterminal.h
--- a/gui//octaveterminal.h
+++ b/gui//octaveterminal.h
@@ -22,16 +22,17 @@
 #include <QMdiSubWindow>
 #include <QLineEdit>
 #include <QTextBrowser>
 #include <QAction>
 #include <QMenuBar>
 #include <QMenu>
 #include <QToolBar>
 #include <QKeyEvent>
+#include <QFocusEvent>
 #include <QQueue>
 
 #include "client.h"
 #include "terminalhighlighter.h"
 
 /**
   * \class TerminalCommandLine
   *
@@ -44,28 +45,36 @@ public:
         : QLineEdit(parent),
           m_commandHistoryIndex(0) {
     }
 
 signals:
     void claimCommand(QString command);
 
 protected:
+    void focusOutEvent(QFocusEvent *focusEvent) {
+        setFocus();
+    }
+
     void keyPressEvent(QKeyEvent *keyEvent) {
         QString command;
         switch(keyEvent->key()) {
             case Qt::Key_Return:
                 command = text();
                 emit claimCommand(command);
                 m_commandHistory.append(command);
                 m_commandHistoryIndex = m_commandHistory.size();
                 m_currentlyEditedCommand = "";
                 setText("");
                 break;
 
+            case Qt::Key_Tab:
+                emit claimCommand("\t");
+                break;
+
             case Qt::Key_Up:
                 if(!m_commandHistory.empty())
                 {
                     if(m_commandHistoryIndex == m_commandHistory.size())
                         m_currentlyEditedCommand = text();
 
                     m_commandHistoryIndex--;
                     if(m_commandHistoryIndex < 0)
diff --git a/gui//terminalhighlighter.cpp b/gui//terminalhighlighter.cpp
--- a/gui//terminalhighlighter.cpp
+++ b/gui//terminalhighlighter.cpp
@@ -23,17 +23,17 @@ TerminalHighlighter::TerminalHighlighter
     : QSyntaxHighlighter(parent)
 {
     HighlightingRule rule;
 
     keywordFormat.setForeground(Qt::darkRed);
     QStringList keywordPatterns;
     keywordPatterns << "\\bOctave\\b" << "\\bGNU\\b";
 
-    foreach (const QString &pattern, keywordPatterns) {
+    foreach(const QString &pattern, keywordPatterns) {
         rule.pattern = QRegExp(pattern);
         rule.format = keywordFormat;
         highlightingRules.append(rule);
     }
 
     promptFormat.setForeground(Qt::darkGreen);
     rule.pattern = QRegExp("\\boctave:[0-9]+>");
     rule.format = promptFormat;
@@ -59,18 +59,18 @@ TerminalHighlighter::TerminalHighlighter
     quotationFormat.setForeground(Qt::darkGreen);
     rule.pattern = QRegExp("\".*\"");
     rule.format = quotationFormat;
     highlightingRules.append(rule);
 }
 
 void TerminalHighlighter::highlightBlock(const QString &text)
 {
-    foreach (const HighlightingRule &rule, highlightingRules) {
+    foreach(const HighlightingRule &rule, highlightingRules) {
         QRegExp expression(rule.pattern);
         int index = expression.indexIn(text);
-        while (index >= 0) {
+        while(index >= 0) {
             int length = expression.matchedLength();
             setFormat(index, length, rule.format);
             index = expression.indexIn(text, index + length);
         }
     }
 }
