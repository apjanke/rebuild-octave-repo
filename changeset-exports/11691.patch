# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1205298355 14400
#      Wed Mar 12 01:05:55 2008 -0400
# Branch release-3-0-x
# Node ID c6ce7274fb141682dfc394c6d6219316350a1dd7
# Parent  42e936258b19b70792b494e80b3a8335875a0ce5
one more xGELSD workspace fix

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2008-03-12  John W. Eaton  <jwe@octave.org>
+
+	* dMatrix.cc (Matrix::lssolve): One more xGELSD workspace fix.
+
 2008-03-07  John W. Eaton  <jwe@octave.org>
 
 	* idx-vector.cc (IDX_VEC_REP::idx_vector_rep (bool),
 	IDX_VEC_REP::idx_vector_rep (const boolNDArray&)):
 	Simply perform the equivalent of "find" on the bool argument here,
 	set one_zero to 0 and orig_dims to size of resulting index vector.
 	(IDX_VEC_REP::freeze): Don't call maybe_convert_one_zero_to_idx here.
 
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -2125,19 +2125,19 @@ Matrix::lssolve (const Matrix& b, octave
 				   F77_CHAR_ARG_LEN (6)
 				   F77_CHAR_ARG_LEN (1));
 
       // We compute the size of iwork because DGELSD in older versions
       // of LAPACK does not return it on a query call.
       double dminmn = static_cast<double> (minmn);
       double dsmlsizp1 = static_cast<double> (smlsiz+1);
 #if defined (HAVE_LOG2)
-      double tmp = log2 (dminmn) / dsmlsizp1;
+      double tmp = log2 (dminmn / dsmlsizp1);
 #else
-      double tmp = log (dminmn) / dsmlsizp1 / log (2.0);
+      double tmp = log (dminmn / dsmlsizp1) / log (2.0);
 #endif
       octave_idx_type nlvl = static_cast<octave_idx_type> (tmp) + 1;
       if (nlvl < 0)
 	nlvl = 0;
 
       octave_idx_type liwork = 3 * minmn * nlvl + 11 * minmn;
       if (liwork < 1)
 	liwork = 1;
