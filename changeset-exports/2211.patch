# HG changeset patch
# User jwe
# Date 832165217 0
#      Wed May 15 13:00:17 1996 +0000
# Node ID 71aef7b5339e1e2469a4a2c4ce557ded7d2aeb9c
# Parent  a3e39f8efed2c36df1a29b65b3cc3e1d6a932d68
[project @ 1996-05-15 13:00:17 by jwe]

diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -85,16 +85,19 @@ static char *gnuplot_terminal_type = 0;
 static bool clear_before_plotting = true;
 
 // List of files to delete when we exit or crash.
 static SLStack <string> tmp_files;
 
 // Pipe to gnuplot.
 static oprocstream *plot_stream = 0;
 
+// ID of the plotter process.
+static pid_t plot_stream_pid = 0;
+
 // Use shortest possible abbreviations to minimize trouble caused by
 // gnuplot's fixed-length command line buffer.
 
 #ifndef GNUPLOT_COMMAND_PLOT  
 #define GNUPLOT_COMMAND_PLOT   "pl"
 #endif
 
 #ifndef GNUPLOT_COMMAND_REPLOT 
@@ -121,18 +124,16 @@ static void
 plot_stream_death_handler (pid_t pid, int)
 {
   close_plot_stream ();
 
   warning ("connection to external plotter (pid = %d) lost --", pid);
   warning ("please try your plot command(s) again");
 }
 
-static sig_handler *saved_sigint_handler = 0;
-
 static void
 open_plot_stream (void)
 {
   static bool initialized = false;
 
   if (plot_stream && ! *plot_stream)
     {
       delete plot_stream;
@@ -148,39 +149,48 @@ open_plot_stream (void)
       string plot_prog = Vgnuplot_binary;
 
       if (plot_prog.empty ())
 	plot_prog = "gnuplot";
 
       // XXX FIXME XXX -- I'm not sure this is the right thing to do,
       // but without it, C-c at the octave prompt will kill gnuplot...
 
-      saved_sigint_handler = octave_set_signal_handler (SIGINT, SIG_IGN);
+#if defined (HAVE_POSIX_SIGNALS)
+      sigset_t set, oset;
+      sigemptyset (&set);
+      sigaddset (&set, SIGCHLD);
+      sigaddset (&set, SIGINT);
+      sigprocmask (SIG_BLOCK, &set, &oset);
+#endif
 
       plot_stream = new oprocstream (plot_prog.c_str ());
 
-      octave_set_signal_handler (SIGINT, saved_sigint_handler);
-
       if (plot_stream)
 	{
 	  if (! *plot_stream)
 	    {
 	      delete plot_stream;
 	      plot_stream = 0;
 
 	      error ("plot: unable to open pipe to `%s'", plot_prog.c_str ());
 	    }
 	  else
 	    {
-	      pid_t id = plot_stream->pid ();
-    	      octave_child_list::insert (id, plot_stream_death_handler);
+	      plot_stream_pid = plot_stream->pid ();
+    	      octave_child_list::insert (plot_stream_pid,
+					 plot_stream_death_handler);
 	    }
 	}
       else
 	error ("plot: unable to open pipe to `%s'", plot_prog.c_str ());
+
+#if defined (HAVE_POSIX_SIGNALS)
+      sigprocmask (SIG_SETMASK, &oset, 0);
+#endif
     }
 
   if (! error_state && plot_stream && *plot_stream && ! initialized)
     {
       initialized = true;
       *plot_stream << "set data style lines\n";
 
       if (gnuplot_terminal_type)
@@ -856,16 +866,18 @@ cleanup_tmp_files (void)
       string filename = tmp_files.pop ();
       unlink (filename.c_str ());
     }
 }
 
 void
 close_plot_stream (void)
 {
+  octave_child_list::remove (plot_stream_pid);
+
   if (plot_stream)
     {
       delete plot_stream;
       plot_stream = 0;
     }
 
   plot_line_count = 0;
 }
