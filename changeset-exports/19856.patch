# HG changeset patch
# User Rik <rik@octave.org>
# Date 1424841748 28800
#      Tue Feb 24 21:22:28 2015 -0800
# Node ID 5c1a38089f8999c396d60291596e22cb0f678b25
# Parent  a59c5a16c9abec07ad121ec3450a85acbff461a9
Change open_with_system_app to internal function.

* sysdep.cc (Fopen_with_system_app): Rename function to __open_with_system_app__.

* open.m: Rename instance to __open_with_system_app__.

diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -180,19 +180,19 @@ w32_init (void)
 }
 
 static bool
 w32_shell_execute (const std::string& file)
 {
 }
 #endif
 
-DEFUN (open_with_system_app, args, ,
+DEFUN (__open_with_system_app__, args, ,
            "-*- texinfo -*-\n\
-@deftypefn {Loadable Function} {} __w32_shell_execute__ (@var{file})\n\
+@deftypefn {Loadable Function} {} __open_with_system_app__ (@var{file})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       std::string file = args(0).string_value ();
@@ -210,17 +210,17 @@ Undocumented internal function.\n\
             = Fsystem (ovl ("xdg-open " + file + " 2> /dev/null",
                             false, "async"),
                        1);
 
           retval = (tmp(0).double_value () == 0);
 #endif
         }
       else
-        error ("open_with_system_app: expecting argument to be a file name");
+        error ("__open_with_system_app__: argument must be a file name");
     }
   else
     print_usage ();
 
   return retval;
 }
 
 #if defined (__MINGW32__)
diff --git a/scripts/miscellaneous/open.m b/scripts/miscellaneous/open.m
--- a/scripts/miscellaneous/open.m
+++ b/scripts/miscellaneous/open.m
@@ -62,17 +62,17 @@ function output = open (file)
     error ("opening file type '%s' is not supported", ext);
   elseif (strcmpi (ext, ".exe"))
     if (ispc ())
       dos (file);
     else
       error ("executing .exe files is only supported on Windows systems");
     endif
   else
-    open_with_system_app (file);
+    __open_with_system_app__ (file);
   endif
 
 endfunction
 
 ## Test input validation
 %!error open
 %!error open (1)
 %!error output = open (1)
