# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1258969810 -3600
#      Mon Nov 23 10:50:10 2009 +0100
# Node ID 870a69bac55cbaece2c57c285b63796b346cef45
# Parent  02d59b67632ff2718c666438979e1785bce5b3d0
fix test in merge

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* data.cc (Fmerge): Add missing parentheses.
+
 2009-11-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-complex.h (octave_complex::bool_value,
 	octave_complex::bool_array_value): New methods.
 	* ov-flt-complex.h (octave_float_complex::bool_value,
 	octave_float_complex::bool_array_value): New methods.
 	* ov-cx-mat.cc (octave_complex_matrix::bool_array_value): New method.
 	* ov-cx-mat.h: Declare it.
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -6486,17 +6486,17 @@ result(! mask) = fval(! mask);\n\
 @var{mask} can also be arbitrary numeric type, in which case\n\
 it is first converted to logical.\n\
 @seealso{logical}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value retval;
 
-  if (nargin == 3 && args(0).is_bool_type () || args(0).is_numeric_type ())
+  if (nargin == 3 && (args(0).is_bool_type () || args(0).is_numeric_type ()))
     {
       octave_value mask_val = args(0);
 
       if (mask_val.is_scalar_type ())
         retval = mask_val.is_true () ? args(1) : args(2);
       else
         {
           boolNDArray mask = mask_val.bool_array_value ();
