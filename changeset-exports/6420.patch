# HG changeset patch
# User jwe
# Date 1174411351 0
#      Tue Mar 20 17:22:31 2007 +0000
# Node ID e35658098bbcfba29b17a2c8e3e66565f244b059
# Parent  73fcbac81f332323c18f47e00cdf6089362b80db
[project @ 2007-03-20 17:22:31 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -2,16 +2,20 @@ 2007-03-20  John W. Eaton  <jwe@octave.o
 
 	* plot/newplot.m: Call __request_drawnow__ after initializing axes.
 	* plot/text.m: Call __request_drawnow__ after creating text objects.
 
 	* plot/clf.m: Don't call drawnow.
 
 2007-03-20  Daniel J Sebald  <daniel.sebald@ieee.org>.
 
+	* image/__img__.m: Maybe set yaxis to reverse for images.
+	* plot/__go_draw_axes__.m: Don't add flipy to gnuplot command for
+	images.
+
 	* plot/drawnow.m: Make __go_close_all_registered__ persistent
 	instead of global.  Only register __go_close_all__ with atexit if
 	the plot stream is successfully opened.
 
 2007-03-15  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Make have_newer_gnuplot persistent.
 	From Daniel J Sebald <daniel.sebald@ieee.org>.
diff --git a/scripts/image/__img__.m b/scripts/image/__img__.m
--- a/scripts/image/__img__.m
+++ b/scripts/image/__img__.m
@@ -51,13 +51,17 @@ function h = __img__ (x, y, img)
   ylim = [y(1), y(end)];
 
   ca = gca ();
 
   tmp = __go_image__ (ca, "cdata", img, "xdata", xlim, "ydata", ylim);
 
   set (ca, "view", [0, 90]);
 
+  if (strcmp (get (ca, "nextplot"), "replace"))
+    set (ca, "ydir", "reverse");
+  endif
+
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -330,17 +330,17 @@ function __go_draw_axes__ (h, plot_strea
 			   cmap_fname, palette_size);
 		endif
 	      endif
 	    endif
 	    fclose (img_fid);
 
 	    filespec{data_idx} = img_fname;
 	    titlespec{data_idx} = "";
-	    usingclause{data_idx} = sprintf ("binary array=%dx%d scan=yx flipy origin=(%g,%g) dx=%g dy=%g using %s",
+	    usingclause{data_idx} = sprintf ("binary array=%dx%d scan=yx origin=(%g,%g) dx=%g dy=%g using %s",
 		x_dim, y_dim, x_origin, y_origin, dx, dy, format);
 	    withclause{data_idx} = sprintf ("with %s", imagetype);
 
 	    ## Data in file, set to zero for data available test to pass
 	    ## below.
 	    data{data_idx} = 0; 
 
 	  else
