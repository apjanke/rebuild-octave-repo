# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1349247064 14400
#      Wed Oct 03 02:51:04 2012 -0400
# Node ID b1ff8c83e232a718b498d686a596d822a79d77c2
# Parent  8b5fc510c6d6ac856a20bab5f8f1c3d2f62541f7
set Vdoc_cache_file and Vtexi_macros_file variables directly from command line options

* octave.cc (octave_process_command_line): Set Vdoc_cache_file and
Vtexi_macros_file directly.
(octave_initialize_interpreter): Don't call bind_internal_variable to
set Vdoc_cache_file or Vtexi_macros_file.
(doc_cache_file, Vtexi_macros_file): Delete unused static variables.
* defaults.cc (set_default_doc_cache_file): Don't set Vdoc_cache_file
unless it is empty.
(set_default_texi_macros_file): Don't set Vtexi_macros_file unless it
is empty.

diff --git a/libinterp/interpfcn/defaults.cc b/libinterp/interpfcn/defaults.cc
--- a/libinterp/interpfcn/defaults.cc
+++ b/libinterp/interpfcn/defaults.cc
@@ -291,31 +291,37 @@ set_image_path (const std::string& path)
 
   if (! tpath.empty ())
     VIMAGE_PATH += dir_path::path_sep_str () + tpath;
 }
 
 static void
 set_default_doc_cache_file (void)
 {
-  std::string def_file = subst_octave_home (OCTAVE_DOC_CACHE_FILE);
+  if (Vdoc_cache_file.empty ())
+    {
+      std::string def_file = subst_octave_home (OCTAVE_DOC_CACHE_FILE);
 
-  std::string env_file = octave_env::getenv ("OCTAVE_DOC_CACHE_FILE");
+      std::string env_file = octave_env::getenv ("OCTAVE_DOC_CACHE_FILE");
 
-  Vdoc_cache_file = env_file.empty () ? def_file : env_file;
+      Vdoc_cache_file = env_file.empty () ? def_file : env_file;
+    }
 }
 
 static void
 set_default_texi_macros_file (void)
 {
-  std::string def_file = subst_octave_home (OCTAVE_TEXI_MACROS_FILE);
+  if (Vtexi_macros_file.empty ())
+    {
+      std::string def_file = subst_octave_home (OCTAVE_TEXI_MACROS_FILE);
 
-  std::string env_file = octave_env::getenv ("OCTAVE_TEXI_MACROS_FILE");
+      std::string env_file = octave_env::getenv ("OCTAVE_TEXI_MACROS_FILE");
 
-  Vtexi_macros_file = env_file.empty () ? def_file : env_file;
+      Vtexi_macros_file = env_file.empty () ? def_file : env_file;
+    }
 }
 
 static void
 set_default_info_file (void)
 {
   if (Vinfo_file.empty ())
     {
       std::string std_info_file = subst_octave_home (OCTAVE_INFOFILE);
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -141,36 +141,28 @@ static bool forced_line_editing = false;
 // If TRUE, initialize history list from saved history file.
 // (--no-history; -H)
 static bool read_history_file = true;
 
 // The value of "path" specified on the command line.
 // (--path; -p)
 static std::list<std::string> command_line_path;
 
-// The file used for the doc string cache.
-// (--doc-cache-file)
-static std::string doc_cache_file;
-
 // The value for "EXEC_PATH" specified on the command line.
 // (--exec-path)
 static std::string exec_path;
 
 // The value for "IMAGE_PATH" specified on the command line.
 // (--image-path)
 static std::string image_path;
 
 // If TRUE, ignore the window system even if it is available.
 // (--no-window-system)
 static bool no_window_system = false;
 
-// The value for "texi_macros_file" specified on the command line.
-// (--texi-macros-file)
-static std::string texi_macros_file;
-
 // Usage message
 static const char *usage_string =
   "octave [-HVdfhiqvx] [--debug] [--echo-commands] [--eval CODE]\n\
        [--exec-path path] [--force-gui] [--help] [--image-path path]\n\
        [--info-file file] [--info-program prog] [--interactive]\n\
        [--jit-debug] [--line-editing] [--no-gui] [--no-history]\n\
        [--no-init-file] [--no-init-path] [--no-jit-compiler]\n\
        [--no-line-editing] [--no-site-file] [--no-window-system]\n\
@@ -768,17 +760,17 @@ octave_process_command_line (int argc, c
 
         case BUILT_IN_DOCSTRINGS_FILE_OPTION:
           if (optarg)
             Vbuilt_in_docstrings_file = optarg;
           break;
 
         case DOC_CACHE_FILE_OPTION:
           if (optarg)
-            doc_cache_file = optarg;
+            Vdoc_cache_file = optarg;
           break;
 
         case EVAL_OPTION:
           if (optarg)
             {
               if (code_to_eval.empty ())
                 code_to_eval = optarg;
               else
@@ -847,17 +839,17 @@ octave_process_command_line (int argc, c
           break;
 
         case PERSIST_OPTION:
           persist = true;
           break;
 
         case TEXI_MACROS_FILE_OPTION:
           if (optarg)
-            texi_macros_file = optarg;
+            Vtexi_macros_file = optarg;
           break;
 
         case TRADITIONAL_OPTION:
           maximum_braindamage ();
           break;
 
         default:
           // getopt_long should print a message about unrecognized
@@ -928,31 +920,25 @@ octave_initialize_interpreter (int argc,
   install_ops ();
 
   install_builtins ();
 
   for (std::list<std::string>::const_iterator it = command_line_path.begin ();
        it != command_line_path.end (); it++)
     load_path::set_command_line_path (*it);
 
-  if (! doc_cache_file.empty ())
-    bind_internal_variable ("doc_cache_file", doc_cache_file);
-
   if (! exec_path.empty ())
     set_exec_path (exec_path);
 
   if (! image_path.empty ())
     set_image_path (image_path);
 
   if (no_window_system)
     display_info::no_window_system ();
 
-  if (! texi_macros_file.empty ())
-    bind_internal_variable ("texi_macros_file", texi_macros_file);
-
   if (jit_debug_option)
     bind_internal_variable ("enable_jit_debugging", true);
 
   if (no_jit_compiler_option)
     bind_internal_variable ("enable_jit_compiler", false);
 
   // Make sure we clean up when we exit.  Also allow users to register
   // functions.  If we don't have atexit or on_exit, we're going to
