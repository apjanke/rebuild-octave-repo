# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1234985573 18000
#      Wed Feb 18 14:32:53 2009 -0500
# Node ID 401d54a836905dc39c34c28ce8ab164f0ceea02e
# Parent  c7864bb7491429c30ca5447cad00d2d3c7fda42c
use 'invalid', not 'illegal'

diff --git a/liboctave/LSODE.cc b/liboctave/LSODE.cc
--- a/liboctave/LSODE.cc
+++ b/liboctave/LSODE.cc
@@ -280,17 +280,17 @@ LSODE::do_integrate (double tout)
     case 1:  // prior to initial integration step.
     case 2:  // lsode was successful.
       retval = x;
       t = tout;
       break;
 
     case -1:  // excess work done on this call (perhaps wrong mf).
     case -2:  // excess accuracy requested (tolerances too small).
-    case -3:  // illegal input detected (see printed message).
+    case -3:  // invalid input detected (see printed message).
     case -4:  // repeated error test failures (check all inputs).
     case -5:  // repeated convergence failures (perhaps bad jacobian
 	      // supplied or wrong choice of mf or tolerances).
     case -6:  // error weight became zero during problem. (solution
 	      // component i vanished, and atol or atol(i) = 0.)
     case -13: // return requested in user-supplied function.
       integration_error = true;
       break;
diff --git a/src/DLD-FUNCTIONS/hex2num.cc b/src/DLD-FUNCTIONS/hex2num.cc
--- a/src/DLD-FUNCTIONS/hex2num.cc
+++ b/src/DLD-FUNCTIONS/hex2num.cc
@@ -80,17 +80,17 @@ hex2num ([\"4005bf0a8b145769\";\"4024000
 			num += static_cast<uint64_t> (ch - 'a' + 10);
 		      else if (ch >= 'A')
 			num += static_cast<uint64_t> (ch - 'A' + 10);
 		      else
 			num += static_cast<uint64_t> (ch - '0');
 		    }
 		  else
 		    {
-		      error ("hex2num: illegal character found in string");
+		      error ("hex2num: invalid character found in string");
 		      break;
 		    }
 		}
 
 	      if (error_state)
 		break;
 	      else
 		{
