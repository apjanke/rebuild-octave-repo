# HG changeset patch
# User jwe
# Date 1176742449 0
#      Mon Apr 16 16:54:09 2007 +0000
# Node ID 2a04f026ef54c7c9ce23e8f4bd86ec7086f95fd4
# Parent  2a715c6409a56a93e0a9c13fdf4cafec3ea9c6f6
[project @ 2007-04-16 16:54:09 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,16 @@
+2007-04-16  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m: For log plots, omit zero values too.
+
 2007-04-13  John W. Eaton  <jwe@octave.org>
 
+	* optimization/sqp.m: Initialize info to 0.
+
 	* optimization/qp.m: Undo previous change.
 
 2007-04-13  Geordie McBain  <geordie.mcbain@aeromech.usyd.edu.au>
 
 	* spdiags.m: Fixed the four-argument case to work for columns of
 	length one.
 
 2007-04-12  John W. Eaton  <jwe@octave.org>
diff --git a/scripts/optimization/sqp.m b/scripts/optimization/sqp.m
--- a/scripts/optimization/sqp.m
+++ b/scripts/optimization/sqp.m
@@ -274,16 +274,18 @@ function [x, obj, info, iter, nf, lambda
 
     qp_iter = 1;
     alpha = 1;
 
     ## report ();
 
     ## report (iter, qp_iter, alpha, nfun, obj);
 
+    info = 0;
+
     while (++iter < iter_max)
 
       ## Check convergence.  This is just a simple check on the first
       ## order necessary conditions.
 
       ## IDX is the indices of the active inequality constraints.
 
       nr_f = rows (F);
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -695,22 +695,22 @@ endfunction
 ## value.
 
 function lim = get_axis_limits (min_val, max_val, min_pos, logscale)
 
   if (logscale)
     if (isinf (min_pos))
       warning ("axis: logscale with no positive values to plot");
     endif
-    if (min_val < 0)
+    if (min_val <= 0)
       min_val = min_pos;
-      if (max_val < 0)
+      if (max_val <= 0)
 	max_val = min_pos;
       endif
-      warning ("axis: omitting negative data in log plot");
+      warning ("axis: omitting nonpositive data in log plot");
     endif
     ## FIXME -- maybe this test should also be relative?
     if (abs (min_val - max_val) < sqrt (eps))
       min_val *= 0.9;
       max_val *= 1.1;
     endif
     min_val = 10 ^ floor (log10 (min_val));
     max_val = 10 ^ ceil (log10 (max_val));
