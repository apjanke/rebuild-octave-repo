# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1258547698 -3600
#      Wed Nov 18 13:34:58 2009 +0100
# Node ID 8fd88cc36fa4f9f901152ac3cafe0928bc6a4a8b
# Parent  b96e9239178ed58000538300e38ffc22a52882cd
fix loading sparse matrices

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-18  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Sparse.h (read_sparse_matrix): Fix order of tests and reads. 
+
 2009-11-18  Jaroslav Hajek  <highegg@gmail.com>
 
 	* mx-inlines.cc (mx_inline_any_negative, mx_inline_pow): New loops.
 	(DEFMXMAPPER2X): New macro.
 	* bsxfun-decl.h (BSXFUN_OP2_DECL): New macro.
 	* bsxfun-defs.cc (BSXFUN_OP2_DEF, BSXFUN_OP2_DEF_MXLOOP): New macros.
 	(do_bsxfun_op): Use OCTAVE_QUIT.
 	* dNDArray.cc (NDArray::all_integers (void)): New method.
diff --git a/liboctave/Sparse.h b/liboctave/Sparse.h
--- a/liboctave/Sparse.h
+++ b/liboctave/Sparse.h
@@ -611,71 +611,68 @@ read_sparse_matrix (std::istream& is, Sp
       octave_idx_type iold = 0;
       octave_idx_type jold = 0;
       octave_idx_type ii = 0;
       T tmp;
        
       a.cidx (0) = 0;
       for (octave_idx_type i = 0; i < nz; i++)
 	{
+          itmp = 0; jtmp = 0;
 	  is >> itmp;
 	  itmp--;
 
-	  if (itmp < iold)
-	    {
-	      (*current_liboctave_error_handler)
-		("invalid sparse matrix: row indices must appear in ascending order in each column");
-	      is.setstate (std::ios::failbit);
-	      goto done;
-	    }
+	  is >> jtmp;
+	  jtmp--;
 
 	  if (itmp < 0 || itmp >= nr)
 	    {
 	      (*current_liboctave_error_handler)
 		("invalid sparse matrix: row index = %d out of range",
 		 itmp + 1);
 	      is.setstate (std::ios::failbit);
 	      goto done;
 	    }
 
-
-	  iold = itmp;
-
-	  is >> jtmp;
-	  jtmp--;
-
-	  if (jtmp < jold)
-	    {
-	      (*current_liboctave_error_handler)
-		("invalid sparse matrix: column indices must appear in ascending order");
-	      is.setstate (std::ios::failbit);
-	      goto done;
-	    }
-
 	  if (jtmp < 0 || jtmp >= nc)
 	    {
 	      (*current_liboctave_error_handler)
 		("invalid sparse matrix: column index = %d out of range",
 		 jtmp + 1);
 	      is.setstate (std::ios::failbit);
 	      goto done;
 	    }
 
+	  if (jtmp < jold)
+	    {
+	      (*current_liboctave_error_handler)
+		("invalid sparse matrix: column indices must appear in ascending order");
+	      is.setstate (std::ios::failbit);
+	      goto done;
+	    }
+          else if (jtmp > jold)
+            {
+              for (octave_idx_type j = jold; j < jtmp; j++)
+                a.cidx(j+1) = ii;
+            }
+          else if (itmp < iold)
+	    {
+	      (*current_liboctave_error_handler)
+		("invalid sparse matrix: row indices must appear in ascending order in each column");
+	      is.setstate (std::ios::failbit);
+	      goto done;
+	    }
+
+	  iold = itmp;
+          jold = jtmp;
+
 	  tmp = read_fcn (is);
 	  
 	  if (is)
 	    {
-	      if (jold != jtmp)
-		{
-		  for (octave_idx_type j = jold; j < jtmp; j++)
-		    a.cidx(j+1) = ii;
-		  
-		  jold = jtmp;
-		  iold = 0;
-		}
 	      a.data (ii) = tmp;
 	      a.ridx (ii++) = itmp;
 	    }
 	  else
 	    goto done;
 	}
 
       for (octave_idx_type j = jold; j < nc; j++)
