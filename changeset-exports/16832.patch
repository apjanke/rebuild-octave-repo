# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1372056766 -28800
#      Mon Jun 24 14:52:46 2013 +0800
# Node ID e528beb2d774ddd80817667ead1a5335caaa04d9
# Parent  5893eb92361ad519c11cc57bd141945bd0299c9f
Initialization and updating of tightinset and looseinset properties.
(Bug # 39326)

* libinterp/interpfcn/graphics.cc (axes::properties::update_insets): New
method to update the looseinset and tightinset properties. Use in
axes::properties::sync_positions, and in axes::properties::set_defaults.
* libinterp/interpfcn/graphics.h.in: Declare update_insets.

diff --git a/libinterp/interpfcn/graphics.cc b/libinterp/interpfcn/graphics.cc
--- a/libinterp/interpfcn/graphics.cc
+++ b/libinterp/interpfcn/graphics.cc
@@ -4198,24 +4198,41 @@ axes::properties::sync_positions (const 
       outpos(0) = pos(0)-pos(2)*lratio/wratio;
       outpos(1) = pos(1)-pos(3)*bratio/hratio;
       outpos(2) = pos(2)/wratio;
       outpos(3) = pos(3)/hratio;
 
       outerposition = calc_tightbox (outpos);
     }
 
+  update_insets ();
+}
+
+void
+axes::properties::update_insets (void)
+{
+  Matrix pos = position.get ().matrix_value ();
+  Matrix outpos = outerposition.get ().matrix_value ();
+  Matrix tightpos = calc_tightbox (pos);
+  // Determine the tightinset = axes_bbox - position
   Matrix inset (1, 4, 1.0);
+  inset(0) = pos(0)-tightpos(0);
+  inset(1) = pos(1)-tightpos(1);
+  inset(2) = tightpos(0)+tightpos(2)-pos(0)-pos(2);
+  inset(3) = tightpos(1)+tightpos(3)-pos(1)-pos(3);
+  tightinset = inset;
+
+  // Determine the looseinset = outerposition - position
   inset(0) = pos(0)-outpos(0);
   inset(1) = pos(1)-outpos(1);
   inset(2) = outpos(0)+outpos(2)-pos(0)-pos(2);
   inset(3) = outpos(1)+outpos(3)-pos(1)-pos(3);
-
-  tightinset = inset;
-}
+  looseinset = inset;
+}
+
 
 void
 axes::properties::set_text_child (handle_property& hp,
                                   const std::string& who,
                                   const octave_value& v)
 {
   graphics_handle val;
 
@@ -4400,28 +4417,18 @@ axes::properties::set_defaults (base_gra
   if (mode != "replace")
     {
       fontangle = "normal";
       fontname = OCTAVE_DEFAULT_FONTNAME;
       fontsize = 10;
       fontunits = "points";
       fontweight = "normal";
 
-      Matrix touterposition (1, 4, 0.0);
-      touterposition(2) = 1;
-      touterposition(3) = 1;
-      outerposition = touterposition;
-
+      outerposition = default_axes_outerposition ();
       position = default_axes_position ();
-
-      Matrix tlooseinset = default_axes_position ();
-      tlooseinset(2) = 1-tlooseinset(0)-tlooseinset(2);
-      tlooseinset(3) = 1-tlooseinset(1)-tlooseinset(3);
-      looseinset = tlooseinset;
-
       activepositionproperty = "outerposition";
     }
 
   delete_children (true);
 
   xlabel = gh_manager::make_graphics_handle ("text", __myhandle__,
                                              false, false);
 
@@ -4471,17 +4478,17 @@ axes::properties::set_defaults (base_gra
   xset (title.handle_value (), "autopos_tag", "title");
 
   adopt (xlabel.handle_value ());
   adopt (ylabel.handle_value ());
   adopt (zlabel.handle_value ());
   adopt (title.handle_value ());
 
   update_transform ();
-
+  update_insets ();
   override_defaults (obj);
 }
 
 void
 axes::properties::delete_text_child (handle_property& hp)
 {
   graphics_handle h = hp.handle_value ();
 
diff --git a/libinterp/interpfcn/graphics.in.h b/libinterp/interpfcn/graphics.in.h
--- a/libinterp/interpfcn/graphics.in.h
+++ b/libinterp/interpfcn/graphics.in.h
@@ -3964,16 +3964,18 @@ public:
     void update_fontname (void) { update_font (); }
     void update_fontsize (void) { update_font (); }
     void update_fontangle (void) { update_font (); }
     void update_fontweight (void) { update_font (); }
 
     void sync_positions (const Matrix& linset);
     void sync_positions (void);
 
+    void update_insets (void);
+
     void update_outerposition (void)
     {
       set_activepositionproperty ("outerposition");
       sync_positions ();
     }
 
     void update_position (void)
     {
