# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1295989677 28800
#      Tue Jan 25 13:07:57 2011 -0800
# Node ID b64b827210627be31e84587d9983b20e6081098c
# Parent  1f56327759e5f5c84cbdb7725273cee6cd3a8ce9
Make documentation static by removing docstrings depending on #ifdef variables

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-25  Rik  <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/fft.cc, DLD-FUNCTIONS/fft2.cc, DLD-FUNCTIONS/fftn.cc,
+	load-save.cc: Make docstrings static by removing documentation
+	depending on #ifdef configuration variables.
+
 2011-01-25  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* src/graphics.cc (text::properties::update_text_extent):
 	Disable warning about missing freetype library.
 
 2011-01-25  Konstantinos Poulios  <logari81@googlemail.com>
 
 	* src/graphics.cc (axes::properties::calc_ticks_and_lims):
diff --git a/src/DLD-FUNCTIONS/fft.cc b/src/DLD-FUNCTIONS/fft.cc
--- a/src/DLD-FUNCTIONS/fft.cc
+++ b/src/DLD-FUNCTIONS/fft.cc
@@ -198,19 +198,20 @@ do_fft (const octave_value_list &args, c
 */
 
 
 DEFUN_DLD (fft, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} fft (@var{x})\n\
 @deftypefnx {Loadable Function} {} fft (@var{x}, @var{n})\n\
 @deftypefnx {Loadable Function} {} fft (@var{x}, @var{n}, @var{dim})\n\
-Compute the FFT of @var{x} using subroutines from\n"
-FFTSRC
-".  The FFT is calculated along the first non-singleton dimension of the\n\
+Compute the discrete Fourier transform of @var{A} using\n\
+a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The FFT is calculated along the first non-singleton dimension of the\n\
 array.  Thus if @var{x} is a matrix, @code{fft (@var{x})} computes the\n\
 FFT for each column of @var{x}.\n\
 \n\
 If called with two arguments, @var{n} is expected to be an integer\n\
 specifying the number of elements of @var{x} to use, or an empty\n\
 matrix to specify that its value should be ignored.  If @var{n} is\n\
 larger than the dimension along which the FFT is calculated, then\n\
 @var{x} is resized and padded with zeros.  Otherwise, if @var{n} is\n\
@@ -226,19 +227,20 @@ dimension of the matrix along which the 
 }
 
 
 DEFUN_DLD (ifft, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} ifft (@var{x})\n\
 @deftypefnx {Loadable Function} {} ifft (@var{x}, @var{n})\n\
 @deftypefnx {Loadable Function} {} ifft (@var{x}, @var{n}, @var{dim})\n\
-Compute the inverse FFT of @var{x} using subroutines from\n"
-FFTSRC
-".  The inverse FFT is calculated along the first non-singleton dimension\n\
+Compute the inverse discrete Fourier transform of @var{A}\n\
+using a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The inverse FFT is calculated along the first non-singleton dimension\n\
 of the array.  Thus if @var{x} is a matrix, @code{fft (@var{x})} computes\n\
 the inverse FFT for each column of @var{x}.\n\
 \n\
 If called with two arguments, @var{n} is expected to be an integer\n\
 specifying the number of elements of @var{x} to use, or an empty\n\
 matrix to specify that its value should be ignored.  If @var{n} is\n\
 larger than the dimension along which the inverse FFT is calculated, then\n\
 @var{x} is resized and padded with zeros.  Otherwise, if @var{n} is\n\
diff --git a/src/DLD-FUNCTIONS/fft2.cc b/src/DLD-FUNCTIONS/fft2.cc
--- a/src/DLD-FUNCTIONS/fft2.cc
+++ b/src/DLD-FUNCTIONS/fft2.cc
@@ -166,39 +166,41 @@ do_fft2 (const octave_value_list &args, 
 
   return retval;
 }
 
 DEFUN_DLD (fft2, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} fft2 (@var{A})\n\
 @deftypefnx {Loadable Function} {} fft2 (@var{A}, @var{m}, @var{n})\n\
-Compute the two-dimensional FFT of @var{A} using subroutines from\n"
-FFTSRC
-".  The optional arguments @var{m} and @var{n} may be used specify the\n\
+Compute the two-dimensional discrete Fourier transform of @var{A} using\n\
+a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The optional arguments @var{m} and @var{n} may be used specify the\n\
 number of rows and columns of @var{A} to use.  If either of these is\n\
 larger than the size of @var{A}, @var{A} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{A} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
-of @var{A} is treated separately\n\
+of @var{A} is treated separately.\n\
 @seealso {ifft2, fft, fftn, fftw}\n\
 @end deftypefn")
 {
   return do_fft2 (args, "fft2", 0);
 }
 
 
 DEFUN_DLD (ifft2, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} ifft2 (@var{A})\n\
 @deftypefnx {Loadable Function} {} ifft2 (@var{A}, @var{m}, @var{n})\n\
-Compute the inverse two-dimensional FFT of @var{A} using subroutines from\n"
-FFTSRC
-".  The optional arguments @var{m} and @var{n} may be used specify the\n\
+Compute the inverse two-dimensional discrete Fourier transform of @var{A}\n\
+using a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The optional arguments @var{m} and @var{n} may be used specify the\n\
 number of rows and columns of @var{A} to use.  If either of these is\n\
 larger than the size of @var{A}, @var{A} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{A} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
 of @var{A} is treated separately\n\
 @seealso {fft2, ifft, ifftn, fftw}\n\
 @end deftypefn")
diff --git a/src/DLD-FUNCTIONS/fftn.cc b/src/DLD-FUNCTIONS/fftn.cc
--- a/src/DLD-FUNCTIONS/fftn.cc
+++ b/src/DLD-FUNCTIONS/fftn.cc
@@ -148,39 +148,41 @@ do_fftn (const octave_value_list &args, 
 
   return retval;
 }
 
 DEFUN_DLD (fftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} fftn (@var{A})\n\
 @deftypefnx {Loadable Function} {} fftn (@var{A}, @var{size})\n\
-Compute the N-dimensional FFT of @var{A} using subroutines from\n"
-FFTSRC
-".  The optional vector argument @var{size} may be used specify the\n\
+Compute the N-dimensional discrete Fourier transform of @var{A} using\n\
+a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used.  If an element of @var{size} is\n\
-smaller than the corresponding dimension, then the dimension is\n\
-truncated prior to performing the FFT@.  Otherwise if an element\n\
-of @var{size} is larger than the corresponding dimension @var{A}\n\
+smaller than the corresponding dimension of @var{A}, then the dimension of\n\
+@var{A} is truncated prior to performing the FFT@.  Otherwise, if an element\n\
+of @var{size} is larger than the corresponding dimension then @var{A}\n\
 is resized and padded with zeros.\n\
 @seealso{ifftn, fft, fft2, fftw}\n\
 @end deftypefn")
 {
   return do_fftn (args, "fftn", 0);
 }
 
 DEFUN_DLD (ifftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} ifftn (@var{A})\n\
 @deftypefnx {Loadable Function} {} ifftn (@var{A}, @var{size})\n\
-Compute the inverse N-dimensional FFT of @var{A} using subroutines from\n"
-FFTSRC
-".  The optional vector argument @var{size} may be used specify the\n\
+Compute the inverse N-dimensional discrete Fourier transform of @var{A}\n\
+using a Fast Fourier Transform (FFT) algorithm.\n\
+\n\
+The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used.  If an element of @var{size} is\n\
-smaller than the corresponding dimension, then the dimension is\n\
-truncated prior to performing the inverse FFT@.  Otherwise if an element\n\
-of @var{size} is larger than the corresponding dimension @var{A}\n\
+smaller than the corresponding dimension of @var{A}, then the dimension of\n\
+@var{A} is truncated prior to performing the inverse FFT@.  Otherwise, if an\n\
+element of @var{size} is larger than the corresponding dimension then @var{A}\n\
 is resized and padded with zeros.\n\
 @seealso{fftn, ifft, ifft2, fftw}\n\
 @end deftypefn")
 {
   return do_fftn (args, "ifftn", 1);
 }
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -534,29 +534,16 @@ find_file_to_load (const std::string& na
           error ("load: unable to find file %s", orig_name.c_str ());
         }
     }
 
   return fname;
 }
 
 
-// HDF5 load/save documentation is included in the Octave manual
-// regardless, but if HDF5 is not linked in we also include a
-// sentence noting this, so the user understands that the features
-// aren't available.  Define a macro for this sentence:
-
-#ifdef HAVE_HDF5
-#define HAVE_HDF5_HELP_STRING ""
-#else /* ! HAVE_HDF5 */
-#define HAVE_HDF5_HELP_STRING "\n\
-HDF5 load and save are not available, as this Octave executable was\n\
-not linked with the HDF5 library."
-#endif /* ! HAVE HDF5 */
-
 DEFUN (load, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} load file\n\
 @deftypefnx {Command} {} load options file\n\
 @deftypefnx {Command} {} load options file v1 v2 @dots{}\n\
 @deftypefnx {Command} {} S = load(\"options\", \"file\", \"v1\", \"v2\", @dots{})\n\
 Load the named variables @var{v1}, @var{v2}, @dots{}, from the file\n\
 @var{file}.  If no variables are specified then all variables found in the\n\
@@ -608,24 +595,22 @@ without any header or other information.
 as a single numeric matrix with the name of the variable derived from the\n\
 name of the file.\n\
 \n\
 @item -binary\n\
 Force Octave to assume the file is in Octave's binary format.\n\
 \n\
 @item -hdf5\n\
 Force Octave to assume the file is in @sc{hdf5} format.\n\
-(HDF5 is a free, portable binary format developed by the National\n\
+(@sc{hdf5} is a free, portable binary format developed by the National\n\
 Center for Supercomputing Applications at the University of Illinois.)\n\
 Note that Octave can read @sc{hdf5} files not created by itself, but may\n\
-skip some datasets in formats that it cannot support.\n"
-
-HAVE_HDF5_HELP_STRING
-
-"\n\
+skip some datasets in formats that it cannot support.  This format is\n\
+only available if Octave was built with a link to the @sc{hdf5} libraries.\n\
+\n\
 @item -import\n\
 This option is accepted for backward compatibility but is ignored.\n\
 Octave can now support multi-dimensional HDF data and automatically\n\
 modifies variable names if they are invalid Octave identifiers.\n\
 \n\
 @item -mat\n\
 @itemx -mat-binary\n\
 @itemx -6\n\
@@ -1435,23 +1420,16 @@ dump_octave_core (void)
                 }
               else
                 warning ("unable to open `%s' for writing...", fname);
             }
         }
     }
 }
 
-#ifdef HAVE_ZLIB
-#define HAVE_ZLIB_HELP_STRING ""
-#else /* ! HAVE_ZLIB */
-#define HAVE_ZLIB_HELP_STRING "\n\
-This option is not available, as this Octave executable was not linked with\n\
-the zlib library."
-#endif /* ! HAVE ZLIB */
 
 DEFUN (save, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} save file\n\
 @deftypefnx {Command} {} save options file\n\
 @deftypefnx {Command} {} save options file @var{v1} @var{v2} @dots{}\n\
 @deftypefnx {Command} {} save options file -struct @var{STRUCT} @var{f1} @var{f2} @dots{}\n\
 Save the named variables @var{v1}, @var{v2}, @dots{}, in the file\n\
@@ -1486,35 +1464,31 @@ Save the data in Octave's binary data fo
 @item -float-binary\n\
 Save the data in Octave's binary data format but only using single\n\
 precision.  Only use this format if you know that all the\n\
 values to be saved can be represented in single precision.\n\
 \n\
 @item -hdf5\n\
 Save the data in @sc{hdf5} format.\n\
 (HDF5 is a free, portable binary format developed by the National\n\
-Center for Supercomputing Applications at the University of Illinois.)\n"
-
-HAVE_HDF5_HELP_STRING
-
-"\n\
+Center for Supercomputing Applications at the University of Illinois.)\n\
+This format is only available if Octave was built with a link to the\n\
+@sc{hdf5} libraries.\n\
+\n\
 @item -float-hdf5\n\
 Save the data in @sc{hdf5} format but only using single precision.\n\
 Only use this format if you know that all the\n\
 values to be saved can be represented in single precision.\n\
 \n\
 @item -V7\n\
 @itemx -v7\n\
 @itemx -7\n\
 @itemx -mat7-binary\n\
-Save the data in @sc{matlab}'s v7 binary data format.\n"
-
-HAVE_ZLIB_HELP_STRING
-
-"\n\
+Save the data in @sc{matlab}'s v7 binary data format.\n\
+\n\
 @item -V6\n\
 @itemx -v6\n\
 @itemx -6\n\
 @itemx -mat\n\
 @itemx -mat-binary\n\
 Save the data in @sc{matlab}'s v6 binary data format.\n\
 \n\
 @item -V4\n\
@@ -1525,21 +1499,20 @@ Save the data in the binary format writt
 \n\
 @item -text\n\
 Save the data in Octave's text data format.  (default).\n\
 \n\
 @item -zip\n\
 @itemx -z\n\
 Use the gzip algorithm to compress the file.  This works equally on files\n\
 that are compressed with gzip outside of octave, and gzip can equally be\n\
-used to convert the files for backward compatibility.\n"
-
-HAVE_ZLIB_HELP_STRING
-
-"@end table\n\
+used to convert the files for backward compatibility.\n\
+This option is only available if Octave was built with a link to the zlib\n\
+libraries.\n\
+@end table\n\
 \n\
 The list of variables to save may use wildcard patterns containing\n\
 the following special characters:\n\
 @table @code\n\
 @item ?\n\
 Match any single character.\n\
 \n\
 @item *\n\
