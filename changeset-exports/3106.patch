# HG changeset patch
# User jwe
# Date 879920764 0
#      Wed Nov 19 06:26:04 1997 +0000
# Node ID 21208b7973327e7caf8809b257bb62019b739344
# Parent  f936c7f5074f124e4c0dbb5fe3402192e780f849
[project @ 1997-11-19 06:26:03 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+Wed Nov 19 00:19:18 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* image/colormap.m: Initialize __current_color_map__ in global
+	statement.
+	* miscellaneous/toc.m: Initialize __tic_toc_timestamp__ in global
+	statement.
+	* plot/axis.m: Initialize __current_axis__ in global statement.
+	* plot/mplot.m, plot/multiplot.m, plot/oneplot.m, plot/subplot.m,
+	plot/subwindow.m: Initialize __multiplot_mode__ in global statement.
+
 Tue Nov 18 01:35:50 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* time/tic.m: Rename _time_tic_called to __tic_toc_timestamp__.
 	* time/toc.m: Likewise.
 
 	* image/colormap.m: Rename CURRENT_COLOR_MAP to __current_color_map__.
 
 	* plot/mplot.m, plot/multiplot.m, plot/subplot.m: Don't do
diff --git a/scripts/image/colormap.m b/scripts/image/colormap.m
--- a/scripts/image/colormap.m
+++ b/scripts/image/colormap.m
@@ -30,35 +30,32 @@
 ## colormap with no arguments returns the current colormap.
 
 ## Author: Tony Richardson <amr@mpl.ucsd.edu>
 ## Created: July 1994
 ## Adapted-By: jwe
 
 function cmap = colormap (map)
 
-  global __current_color_map__
+  global __current_color_map__ = gray ();
 
   if (nargin > 1)
     usage ("colormap (map)");
   endif
 
   if (nargin == 1)
     if (isstr (map))
       if (strcmp (map, "default"))
-        __current_color_map__ = gray;
+        __current_color_map__ = gray ();
       else
         error ("invalid argument");
       endif
     else
       ## Set the new color map
       __current_color_map__ = map;
     endif
-  elseif (! exist ("__current_color_map__"))
-    ## If global color map doesn't exist, create the default map.
-    __current_color_map__ = gray;
   endif
 
   ## Return current color map.
 
   cmap = __current_color_map__;
 
 endfunction
diff --git a/scripts/miscellaneous/toc.m b/scripts/miscellaneous/toc.m
--- a/scripts/miscellaneous/toc.m
+++ b/scripts/miscellaneous/toc.m
@@ -27,18 +27,18 @@
 ## Author: jwe
 
 function secs = toc ()
 
   if (nargin != 0)
     warning ("toc: ignoring extra arguments");
   endif
 
-  global __tic_toc_timestamp__;
+  global __tic_toc_timestamp__ = -1;
 
-  if (exist ("__tic_toc_timestamp__"))
-    secs = etime (clock (), __tic_toc_timestamp__);
-  else
+  if (__tic_toc_timestamp__ < 0)
     warning ("toc called before timer set");
     secs = [];
+  else
+    secs = etime (clock (), __tic_toc_timestamp__);
   endif
 
 endfunction
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -31,21 +31,17 @@
 
 ## Author: jwe
 
 function curr_axis = axis (ax)
 
   ## This may not be correct if someone has used the gnuplot interface
   ## directly...
 
-  global __current_axis__;
-
-  if (! exist ("__current_axis__"))
-    __current_axis__ = [-10, 10, -10, 10];
-  endif
+  global __current_axis__ = [-10, 10, -10, 10];
 
   if (nargin > 1)
     usage ("axis ([xmin, xmax, ymin, ymax, zmin, zmax])");
   endif
 
   if (nargin == 0)
     gset autoscale;
     curr_axis = __current_axis__;
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -36,27 +36,23 @@
 function mplot (...)
 
   if (! gnuplot_has_multiplot)
     error ("mplot: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
-  global __multiplot_mode__
-  global __multiplot_xsize__
-  global __multiplot_ysize__
-  global __multiplot_xn__
-  global __multiplot_yn__
-  global __multiplot_xi__
-  global __multiplot_yi__
-
-  if (! exist ("__multiplot_mode__"))
-    __multiplot_mode__ = 0;
-  endif
+  global __multiplot_mode__ = 0;
+  global __multiplot_xsize__;
+  global __multiplot_ysize__;
+  global __multiplot_xn__;
+  global __multiplot_yn__;
+  global __multiplot_xi__;
+  global __multiplot_yi__;
 
   gset nologscale;
   gset nopolar;
 
   __plt__ ("plot", all_va_args);
 
   ## update the plot position
 
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -35,27 +35,23 @@
 function multiplot (xn, yn)
 
   if (! gnuplot_has_multiplot)
     error ("multiplot: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
-  global __multiplot_mode__
-  global __multiplot_xsize__
-  global __multiplot_ysize__
-  global __multiplot_xn__
-  global __multiplot_yn__
-  global __multiplot_xi__
-  global __multiplot_yi__
-
-  if (! exist ("__multiplot_mode__"))
-    __multiplot_mode__ = 0;
-  endif
+  global __multiplot_mode__ = 0;
+  global __multiplot_xsize__;
+  global __multiplot_ysize__;
+  global __multiplot_xn__;
+  global __multiplot_yn__;
+  global __multiplot_xi__;
+  global __multiplot_yi__;
 
   if (nargin != 2)
     usage ("multiplot (xn, yn)");
   endif
 
   if (! (is_scalar (xn) && is_scalar (yn)))
     error ("multiplot: xn and yn have to be scalars");
   endif
diff --git a/scripts/plot/oneplot.m b/scripts/plot/oneplot.m
--- a/scripts/plot/oneplot.m
+++ b/scripts/plot/oneplot.m
@@ -28,21 +28,17 @@
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function oneplot ()
 
   if (gnuplot_has_multiplot)
 
-    global __multiplot_mode__
-
-    if (! exist ("__multiplot_mode__"))
-      __multiplot_mode__ = 0;
-    endif
+    global __multiplot_mode__ = 0;
 
     if (__multiplot_mode__)
       gset nomultiplot;
       gset size 1, 1;
       gset origin 0, 0;
       __multiplot_mode__ = 0;
     endif
 
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -59,27 +59,23 @@
 function subplot (rows, columns, index)
 
   if (! gnuplot_has_multiplot)
     error ("subplot: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
-  global __multiplot_mode__
-  global __multiplot_xsize__
-  global __multiplot_ysize__
-  global __multiplot_xn__
-  global __multiplot_yn__
-  global __multiplot_xi__
-  global __multiplot_yi__
-
-  if (! exist ("__multiplot_mode__"))
-    __multiplot_mode__ = 0;
-  endif
+  global __multiplot_mode__ = 0;
+  global __multiplot_xsize__;
+  global __multiplot_ysize__;
+  global __multiplot_xn__;
+  global __multiplot_yn__;
+  global __multiplot_xi__;
+  global __multiplot_yi__;
 
   if (nargin != 3 && nargin != 1)
     usage ("subplot (rows, columns, index) or subplot (rcn)");
   endif
 
   if (nargin == 1)
 
     if (! (is_scalar (rows) && rows >= 0))
diff --git a/scripts/plot/subwindow.m b/scripts/plot/subwindow.m
--- a/scripts/plot/subwindow.m
+++ b/scripts/plot/subwindow.m
@@ -33,25 +33,21 @@
 function subwindow (xn, yn)
 
   if (! gnuplot_has_multiplot)
     error ("subwindow: gnuplot does not appear to support this feature");
   endif
 
   ## global variables to keep track of multiplot options
 
-  global __multiplot_mode__
-  global __multiplot_xsize__
-  global __multiplot_ysize__
-  global __multiplot_xn__
-  global __multiplot_yn__
-
-  if (! exist ("__multiplot_mode__"))
-    __multiplot_mode__ = 0;
-  endif
+  global __multiplot_mode__ = 0;
+  global __multiplot_xsize__;
+  global __multiplot_ysize__;
+  global __multiplot_xn__;
+  global __multiplot_yn__;
 
   ## check calling argument count
 
   if (nargin != 2)
     usage ("subwindow (xn, yn)");
   endif
 
   ## check for scalar inputs
