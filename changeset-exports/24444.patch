# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1513877691 18000
#      Thu Dec 21 12:34:51 2017 -0500
# Node ID 53ca76c5cc8d6f2ae39bfbead9ecd100c4cabe39
# Parent  92f0d6013ddd772813b0d3ed816ccdaec85e58c9
maint: Indent pragmas as other preprocessor directives.

diff --git a/libinterp/corefcn/ft-text-renderer.cc b/libinterp/corefcn/ft-text-renderer.cc
--- a/libinterp/corefcn/ft-text-renderer.cc
+++ b/libinterp/corefcn/ft-text-renderer.cc
@@ -26,29 +26,29 @@ along with Octave; see the file COPYING.
 #endif
 
 #include "base-text-renderer.h"
 #include "ft-text-renderer.h"
 
 #if defined (HAVE_FREETYPE)
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 #include <ft2build.h>
 #include FT_FREETYPE_H
 
 #if defined (HAVE_FONTCONFIG)
 #  include <fontconfig/fontconfig.h>
 #endif
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic pop
+#  pragma GCC diagnostic pop
 #endif
 
 #include <clocale>
 #include <cwchar>
 #include <iostream>
 #include <map>
 #include <utility>
 
diff --git a/libinterp/corefcn/oct-tex-lexer.in.ll b/libinterp/corefcn/oct-tex-lexer.in.ll
--- a/libinterp/corefcn/oct-tex-lexer.in.ll
+++ b/libinterp/corefcn/oct-tex-lexer.in.ll
@@ -21,26 +21,26 @@ along with Octave; see the file COPYING.
 */
 
 %top {
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// This one needs to be global.
-#pragma GCC diagnostic ignored "-Wunused-function"
+   // This one needs to be global.
+#  pragma GCC diagnostic ignored "-Wunused-function"
 
-// Disable these warnings for code that is generated by flex, including
-// pattern rules.  Push the current state so we can restore the warning
-// state prior to functions we define at the bottom of the file.
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
-#pragma GCC diagnostic ignored "-Wsign-compare"
-#pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
+   // Disable these warnings for code that is generated by flex, including
+   // pattern rules.  Push the current state so we can restore the warning
+   // state prior to functions we define at the bottom of the file.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
+#  pragma GCC diagnostic ignored "-Wsign-compare"
+#  pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
 #endif
 
 // Define away the deprecated register storage class specifier to avoid
 // potential warnings about it.
 #if ! defined (register)
 #  define register
 #endif
 
@@ -173,27 +173,27 @@ NUM (({D}+\.?{D}*)|(\.{D}+))
 "\n" |
 .    {
     yylval->ch = yytext[0];
     return CH;
   }
 
 %{
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Also disable this warning for functions that is generated by flex
-// after the pattern rules.
-#pragma GCC diagnostic ignored "-Wunused-parameter"
+   // Also disable this warning for functions that are generated by flex
+   // after the pattern rules.
+#  pragma GCC diagnostic ignored "-Wunused-parameter"
 #endif
 %}
 
 %%
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 
 void *
 octave_tex_alloc (yy_size_t size, yyscan_t)
 {
   return malloc (size);
 }
 
diff --git a/libinterp/corefcn/oct-tex-parser.in.yy b/libinterp/corefcn/oct-tex-parser.in.yy
--- a/libinterp/corefcn/oct-tex-parser.in.yy
+++ b/libinterp/corefcn/oct-tex-parser.in.yy
@@ -33,21 +33,22 @@ along with Octave; see the file COPYING.
 
 extern int octave_tex_lex (YYSTYPE *, void *);
 static void yyerror (text_parser_tex& parser, const char *s);
 
 #define scanner parser.get_scanner ()
 #define yyalloc octave_tex_yyalloc
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Disable this warning for code that is generated by Bison, including
-// grammar rules.  Push the current state so we can restore the warning
-// state prior to functions we define at the bottom of the file.
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
+   // Disable this warning for code that is generated by Bison,
+   // including grammar rules.  Push the current state so we can
+   // restore the warning state prior to functions we define at
+   // the bottom of the file.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 %}
 
 %API_PREFIX_DECL%
 
 %define api.pure
 %parse-param { text_parser_tex& parser }
@@ -196,18 +197,18 @@ string                          : // emp
                                   { parser.set_parse_result (new text_element_string ("")); }
                                 | string_element_list
                                   { parser.set_parse_result ($1); }
                                 ;
 
 %%
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 
 text_element*
 text_parser_tex::parse (const std::string& s)
 {
   octave_tex_debug = 0;
 
   if (init_lexer (s))
diff --git a/libinterp/dldfcn/__ode15__.cc b/libinterp/dldfcn/__ode15__.cc
--- a/libinterp/dldfcn/__ode15__.cc
+++ b/libinterp/dldfcn/__ode15__.cc
@@ -52,28 +52,28 @@ along with Octave; see the file COPYING.
 #  if defined (HAVE_NVECTOR_NVECTOR_SERIAL_H)
 #    include <nvector/nvector_serial.h>
 #  endif
 
 static inline realtype *
 nv_data_s (N_Vector& v)
 {
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Disable warning from GCC about old-style casts in Sundials macro
-// expansions.  Do this in a function so that this diagnostic may still
-// be enabled for the rest of the file.
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
+   // Disable warning from GCC about old-style casts in Sundials
+   // macro expansions.  Do this in a function so that this
+   // diagnostic may still be enabled for the rest of the file.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
   return NV_DATA_S (v);
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 }
 
 namespace octave
 {
   class IDA
   {
   public:
diff --git a/libinterp/options-usage.h b/libinterp/options-usage.h
--- a/libinterp/options-usage.h
+++ b/libinterp/options-usage.h
@@ -43,19 +43,19 @@ static const char *usage_string =
 
 // This is here so that it's more likely that the usage message and
 // the real set of options will agree.  Note: the '+' must come first
 // to prevent getopt from permuting arguments!
 static const char *short_opts = "+HWVdfhip:qvx";
 
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Disable warning temporarily
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
+   // Disable warning temporarily.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
 #endif
 
 // Long options.  See the comments in getopt.h for the meanings of the
 // fields in this structure.
 #define BUILT_IN_DOCSTRINGS_FILE_OPTION 1
 #define DOC_CACHE_FILE_OPTION 2
 #define EVAL_OPTION 3
 #define EXEC_PATH_OPTION 4
@@ -107,18 +107,18 @@ struct octave_getopt_options long_opts[]
   { "texi-macros-file",         octave_required_arg, 0, TEXI_MACROS_FILE_OPTION },
   { "traditional",              octave_no_arg,       0, TRADITIONAL_OPTION },
   { "verbose",                  octave_no_arg,       0, 'V' },
   { "version",                  octave_no_arg,       0, 'v' },
   { 0,                          0,                   0, 0 }
 };
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 
 // Usage message with extra help.
 
 static void
 octave_print_verbose_usage_and_exit (void)
 {
   std::cout << octave_name_version_copyright_copying_and_warranty ()
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -32,30 +32,29 @@ object) relevant global values before an
 */
 
 %top {
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// This one needs to be global.
-#pragma GCC diagnostic ignored "-Wunused-function"
-
-// Disable these warnings for code that is generated by flex, including
-// pattern rules.  Push the current state so we can restore the warning
-// state prior to functions we define at the bottom of the file.
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
-#pragma GCC diagnostic ignored "-Wsign-compare"
-#pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
-#if defined (HAVE_WARNING_IMPLICIT_FALLTHROUGH)
-#  pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
-#endif
-
+   // This one needs to be global.
+#  pragma GCC diagnostic ignored "-Wunused-function"
+   // Disable these warnings for code that is generated by flex,
+   // including pattern rules.  Push the current state so we can
+   // restore the warning state prior to functions we define at
+   // the bottom of the file.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
+#  pragma GCC diagnostic ignored "-Wsign-compare"
+#  pragma GCC diagnostic ignored "-Wzero-as-null-pointer-constant"
+#  if defined (HAVE_WARNING_IMPLICIT_FALLTHROUGH)
+#    pragma GCC diagnostic ignored "-Wimplicit-fallthrough"
+#  endif
 #endif
 
 // Define away the deprecated register storage class specifier to avoid
 // potential warnings about it.
 #if ! defined (register)
 #  define register
 #endif
 
@@ -1775,27 +1774,27 @@ ANY_INCLUDING_NL (.|{NL})
         curr_lexer->current_input_column++;
 
         return curr_lexer->count_token_internal (LEXICAL_ERROR);
       }
   }
 
 %{
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Disable these warnings for flex code.
-#pragma GCC diagnostic ignored "-Wold-style-cast"
-#pragma GCC diagnostic ignored "-Wunused-parameter"
+   // Disable these warnings for flex code.
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
+#  pragma GCC diagnostic ignored "-Wunused-parameter"
 #endif
 %}
 
 %%
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 
 void *
 octave_alloc (yy_size_t size, yyscan_t)
 {
   return std::malloc (size);
 }
 
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -94,21 +94,22 @@ static std::map<std::string, std::string
 // the file.
 
 static void yyerror (octave::base_parser& parser, const char *s);
 
 #define lexer parser.m_lexer
 #define scanner lexer.scanner
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Disable this warning for code that is generated by Bison, including
-// grammar rules.  Push the current state so we can restore the warning
-// state prior to functions we define at the bottom of the file.
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wold-style-cast"
+   // Disable this warning for code that is generated by Bison,
+   // including grammar rules.  Push the current state so we can
+   // restore the warning state prior to functions we define at
+   // the bottom of the file.
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 %}
 
 // Bison declarations.
 
 // The grammar currently has 9 shift/reduce conflicts.  Ensure that
 // we notice if that number changes.
@@ -2066,18 +2067,18 @@ opt_sep         : // empty
                   { $$ = 0; }
                 | sep
                   { $$ = $1; }
                 ;
 
 %%
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-// Restore prevailing warning state for remainder of the file.
-#pragma GCC diagnostic pop
+   // Restore prevailing warning state for remainder of the file.
+#  pragma GCC diagnostic pop
 #endif
 
 // Generic error messages.
 
 #undef lexer
 #undef scanner
 
 static void
diff --git a/liboctave/util/quit.cc b/liboctave/util/quit.cc
--- a/liboctave/util/quit.cc
+++ b/liboctave/util/quit.cc
@@ -85,24 +85,24 @@ octave_throw_bad_alloc (void)
 }
 
 void
 octave_throw_exit_exception (int exit_status, int safe_to_return)
 {
   octave_exception_state = octave_quit_exception;
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
   throw octave_exit_exception (exit_status, safe_to_return);
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic pop
+#  pragma GCC diagnostic pop
 #endif
 }
 
 void
 octave_rethrow_exception (void)
 {
   if (octave_interrupt_state)
     {
@@ -117,26 +117,26 @@ octave_rethrow_exception (void)
           octave_throw_execution_exception ();
           break;
 
         case octave_alloc_exception:
           octave_throw_bad_alloc ();
           break;
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
         case octave_quit_exception:
           octave_throw_exit_exception (octave_exit_exception_status,
                                        octave_exit_exception_safe_to_return);
           break;
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic pop
+#  pragma GCC diagnostic pop
 #endif
 
         default:
           break;
         }
     }
 }
