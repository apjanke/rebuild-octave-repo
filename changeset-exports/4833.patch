# HG changeset patch
# User jwe
# Date 1078951789 0
#      Wed Mar 10 20:49:49 2004 +0000
# Node ID 399e8681b7745f63cc26be0841d21f550aaa519c
# Parent  f9262b65c7d9186c660ca8f429868fbe81917466
[project @ 2004-03-10 20:49:48 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2004-03-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pr-output.cc (init_format_state): Also set compact_format.
+	(pr_col_num_header): Print one newline character before column
+	headers for compact format.
+
 2004-03-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* version.h (OCTAVE_WWW_STATEMENT): New macro.
 	(OCTAVE_STARTUP_MESSAGE): Include it here.
 	(OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS): And here.
 
 	* octave.cc (verbose_usage): Use OCTAVE_WWW_STATEMENT here.
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -1318,18 +1318,23 @@ pr_scale_header (std::ostream& os, doubl
 }
 
 static void
 pr_col_num_header (std::ostream& os, int total_width, int max_width,
 		   int lim, int col, int extra_indent)
 {
   if (total_width > max_width && Vsplit_long_rows)
     {
-      if (col != 0 && ! compact_format)
-	os << "\n\n";
+      if (col != 0)
+	{
+	  if (compact_format)
+	    os << "\n";
+	  else
+	    os << "\n\n";
+	}
 
       int num_cols = lim - col;
 
       os << std::setw (extra_indent) << "";
 
       if (num_cols == 1)
 	os << " Column " << col + 1 << ":\n";
       else if (num_cols == 2)
@@ -2180,16 +2185,17 @@ returns the formatted output in a string
 static void
 init_format_state (void)
 {
   free_format = false;
   plus_format = false;
   bank_format = false;
   hex_format = 0;
   bit_format = 0;
+  compact_format = false;
   print_e = false;
   print_big_e = false;
   print_g = false;
 }
 
 static void
 set_output_prec_and_fw (int prec, int fw)
 {
@@ -2465,38 +2471,49 @@ is displayed as\n\
 @group\n\
 ans =\n\
 \n\
 +.-\n\
 -.+\n\
 @end group\n\
 @end example\n\
 \n\
-@item hex\n\
+@itemx native-hex\n\
 Print the hexadecimal representation numbers as they are stored in\n\
 memory.  For example, on a workstation which stores 8 byte real values\n\
 in IEEE format with the least significant byte first, the value of\n\
 @code{pi} when printed in @code{hex} format is @code{400921fb54442d18}.\n\
 This format only works for numeric values.\n\
 \n\
-@item bit\n\
+@item hex\n\
+The same as @code{native-hex}, but always print the most significant\n\
+byte first.\n\
+@item native-bit\n\
 Print the bit representation of numbers as stored in memory.\n\
 For example, the value of @code{pi} is\n\
 \n\
 @example\n\
 @group\n\
 01000000000010010010000111111011\n\
 01010100010001000010110100011000\n\
 @end group\n\
 @end example\n\
 \n\
 (shown here in two 32 bit sections for typesetting purposes) when\n\
 printed in bit format on a workstation which stores 8 byte real values\n\
 in IEEE format with the least significant byte first.  This format only\n\
 works for numeric types.\n\
+@item bit\n\
+The same as @code{native-bit}, but always print the most significant\n\
+bits first.\n\
+@item compact\n\
+Remove extra blank space around column number labels.\n\
+@item loose\n\
+Insert blank lines above and below column number labels (this is the\n\
+default).\n\
 @end table\n\
 \n\
 By default, Octave will try to print numbers with at least 5 significant\n\
 figures within a field that is a maximum of 10 characters wide.\n\
 \n\
 If Octave is unable to format a matrix so that columns line up on the\n\
 decimal point and all the numbers fit within the maximum field width,\n\
 it switches to an @samp{e} format.\n\
