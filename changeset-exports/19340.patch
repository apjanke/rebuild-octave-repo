# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1416611211 -3600
#      Sat Nov 22 00:06:51 2014 +0100
# Node ID fcd9e1198847a1cc00bf98a44ae534b5f5ded402
# Parent  3a2a0b72b91b28fae49c44e2429f1e46752b833e
CMatrix.cc: Use undeprecated Array constructor (bug #43646).

diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -1354,17 +1354,17 @@ ComplexMatrix::fourier (void) const
   else
     {
       npts = nr;
       nsamples = nc;
     }
 
   octave_idx_type nn = 4*npts+15;
 
-  Array<Complex> wsave (nn, 1);
+  Array<Complex> wsave (dim_vector (nn, 1));
   Complex *pwsave = wsave.fortran_vec ();
 
   retval = *this;
   Complex *tmp_data = retval.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
@@ -1395,17 +1395,17 @@ ComplexMatrix::ifourier (void) const
   else
     {
       npts = nr;
       nsamples = nc;
     }
 
   octave_idx_type nn = 4*npts+15;
 
-  Array<Complex> wsave (nn, 1);
+  Array<Complex> wsave (dim_vector (nn, 1));
   Complex *pwsave = wsave.fortran_vec ();
 
   retval = *this;
   Complex *tmp_data = retval.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
@@ -1439,17 +1439,17 @@ ComplexMatrix::fourier2d (void) const
   else
     {
       npts = nr;
       nsamples = nc;
     }
 
   octave_idx_type nn = 4*npts+15;
 
-  Array<Complex> wsave (nn, 1);
+  Array<Complex> wsave (dim_vector (nn, 1));
   Complex *pwsave = wsave.fortran_vec ();
 
   retval = *this;
   Complex *tmp_data = retval.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
@@ -1461,17 +1461,17 @@ ComplexMatrix::fourier2d (void) const
 
   npts = nc;
   nsamples = nr;
   nn = 4*npts+15;
 
   wsave.resize (dim_vector (nn, 1));
   pwsave = wsave.fortran_vec ();
 
-  Array<Complex> tmp (npts, 1);
+  Array<Complex> tmp (dim_vector (npts, 1));
   Complex *prow = tmp.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
     {
       octave_quit ();
 
@@ -1505,17 +1505,17 @@ ComplexMatrix::ifourier2d (void) const
   else
     {
       npts = nr;
       nsamples = nc;
     }
 
   octave_idx_type nn = 4*npts+15;
 
-  Array<Complex> wsave (nn, 1);
+  Array<Complex> wsave (dim_vector (nn, 1));
   Complex *pwsave = wsave.fortran_vec ();
 
   retval = *this;
   Complex *tmp_data = retval.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
@@ -1530,17 +1530,17 @@ ComplexMatrix::ifourier2d (void) const
 
   npts = nc;
   nsamples = nr;
   nn = 4*npts+15;
 
   wsave.resize (dim_vector (nn, 1));
   pwsave = wsave.fortran_vec ();
 
-  Array<Complex> tmp (npts, 1);
+  Array<Complex> tmp (dim_vector (npts, 1));
   Complex *prow = tmp.fortran_vec ();
 
   F77_FUNC (zffti, ZFFTI) (npts, pwsave);
 
   for (octave_idx_type j = 0; j < nsamples; j++)
     {
       octave_quit ();
 
