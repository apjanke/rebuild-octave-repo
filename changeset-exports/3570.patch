# HG changeset patch
# User jwe
# Date 949577231 0
#      Thu Feb 03 11:27:11 2000 +0000
# Node ID f74d9dfec96f4f1bbc4064c1c9d0ae84be59319d
# Parent  3796444c54a31bade71ba35503f07c40bb46ccf7
[project @ 2000-02-03 11:27:10 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2000-02-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* oct-fstrm.cc (octave_fstream::seek, octave_fstream::tell): 
+	Call pubseekoff instead of seekoff.
+
 	* DLD-FUNCTIONS/dassl.cc (print_dassl_option_list): Use stream
 	manipulators instead of GNU iostream-specific form function.
 	* DLD-FUNCTIONS/fsolve.cc (print_fsolve_option_list): Ditto.
 	* DLD-FUNCTIONS/lsode.cc (print_lsode_option_list): Ditto.
 	* DLD-FUNCTIONS/quad.cc (print_quad_option_list): Ditto.
 	* pr-output.cc (pr_scale_header): Ditto.
 
 	* sighandlers.h: Include signal.h here.
@@ -46,17 +49,17 @@ 2000-02-02  John W. Eaton  <jwe@bevo.che
 	procstreambase::open, procstreambase::close):
 	Call std::ios::setstate, not set.
 
 	* lex.l (plot_axes_token): Declare plot_axes as const char *.
 	Declare tmp const char **.
 
 	* oct-procbuf.h: Include fstream, not streambuf.h.
 
-	* load-save.cc (Fsave): Call pubseekoff instead of seekoff.	
+	* load-save.cc (Fsave): Call pubseekoff instead of seekoff.
 	* oct-strstrm.cc (octave_base_strstream::tell): Likewise.
 	(octave_base_strstream::seek): Likewise.
 
 	* oct-stream.cc (octave_base_stream::read): Rename count to char_count.
 	(octave_base_stream::do_gets): Likewise.
 
 	* octave-stream.cc (octave_base_stream::write): Rename flt_fmt to ffmt.
 	(octave_base_stream::read): Likewise.
diff --git a/src/oct-fstrm.cc b/src/oct-fstrm.cc
--- a/src/oct-fstrm.cc
+++ b/src/oct-fstrm.cc
@@ -26,31 +26,31 @@ Software Foundation, 59 Temple Place - S
 
 #include <cerrno>
 #include <cstring>
 
 #include "error.h"
 #include "oct-fstrm.h"
 
 octave_stream
-octave_fstream::create (const std::string& nm_arg, std::ios::openmode md,
+octave_fstream::create (const std::string& nm_arg, std::ios::openmode arg_md,
 			oct_mach_info::float_format flt_fmt)
 {
-  return octave_stream (new octave_fstream (nm_arg, md, flt_fmt));
+  return octave_stream (new octave_fstream (nm_arg, arg_md, flt_fmt));
 }
 
 octave_fstream::octave_fstream (const std::string& nm_arg,
-				std::ios::openmode md,
+				std::ios::openmode arg_md,
 				oct_mach_info::float_format flt_fmt)
-  : octave_base_stream (md, flt_fmt), nm (nm_arg)
+  : octave_base_stream (arg_md, flt_fmt), nm (nm_arg)
 {
   // Override default protection of 0664 so that umask will appear to
   // do the right thing.
 
-  fs.open (nm.c_str (), md, 0666);
+  fs.open (nm.c_str (), arg_md, 0666);
 
   if (! fs)
     {
       using namespace std;
 
       error (strerror (errno));
     }
 }
@@ -65,17 +65,17 @@ octave_fstream::seek (std::streamoff off
   if (! fs.bad ())
     {
       fs.clear ();
 
       std::filebuf *fb = fs.rdbuf ();
 
       if (fb)
 	{
-	  fb->seekoff (offset, origin);
+	  fb->pubseekoff (offset, origin);
 	  retval = fs.bad () ? -1 : 0;
 	}
     }
 
   return retval;
 }
 
 // Return current stream position.
@@ -83,17 +83,17 @@ octave_fstream::seek (std::streamoff off
 long
 octave_fstream::tell (void) const
 {
   long retval = -1;
 
   if (fs)
     {
       std::filebuf *fb = fs.rdbuf ();
-      retval = static_cast<long> (fb->seekoff (0, std::ios::cur));
+      retval = static_cast<long> (fb->pubseekoff (0, std::ios::cur));
     }
 
   return retval;
 }
 
 // Return non-zero if EOF has been reached on this stream.
 
 bool
diff --git a/src/oct-fstrm.h b/src/oct-fstrm.h
--- a/src/oct-fstrm.h
+++ b/src/oct-fstrm.h
@@ -28,23 +28,23 @@ Software Foundation, 59 Temple Place - S
 #include "oct-stream.h"
 
 class
 octave_fstream : public octave_base_stream
 {
 public:
 
   octave_fstream (const std::string& nm_arg,
-		  std::ios::openmode md = std::ios::in|std::ios::out,
+		  std::ios::openmode arg_md = std::ios::in|std::ios::out,
 		  oct_mach_info::float_format flt_fmt =
 		  oct_mach_info::native);
 
   static octave_stream
   create (const std::string& nm_arg,
-	  std::ios::openmode md = std::ios::in|std::ios::out,
+	  std::ios::openmode arg_md = std::ios::in|std::ios::out,
 	  oct_mach_info::float_format flt_fmt = oct_mach_info::native);
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (std::streamoff offset, std::ios::seek_dir origin);
 
   // Return current stream position.
 
