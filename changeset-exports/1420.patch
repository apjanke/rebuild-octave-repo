# HG changeset patch
# User jwe
# Date 811214308 0
#      Sat Sep 16 01:18:28 1995 +0000
# Node ID 9ce9e4f1e5b5504c96ee3a826bccd7158acd6ba8
# Parent  0bdbc15a112bb79b51db71b0e5ad819f9e17ab1c
[project @ 1995-09-16 01:18:28 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -15,17 +15,16 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with GNU CC; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
-%x HELP_FCN
 %s TEXT_FCN
 %s MATRIX
 
 %{
 #define SHORT_CIRCUIT_LOGICALS 1
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
@@ -149,17 +148,16 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 %%
 
 %{
 // Help and other text-style functions are a pain in the ass.  This
 // stuff needs to be simplified.  May require some changes in the
 // parser too.
 %}
 
-<HELP_FCN>{NL} |
 <TEXT_FCN>{NL} {
     BEGIN 0;
     current_input_column = 1;
     quote_is_transpose = 0;
     cant_be_identifier = 0;
     convert_spaces_to_comma = 1;
     return '\n';
   }
@@ -179,17 +177,16 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
       }
   }
 
 <TEXT_FCN>[\"\'] {
     current_input_column++;
     return handle_string (yytext[0], 1);
   }
 
-<HELP_FCN>[^ \t\n]*{S}*	|
 <TEXT_FCN>[^ \t\n\;\,]*{S}* {
     char *tok = strip_trailing_whitespace (yytext);
     TOK_PUSH_AND_RETURN (tok, TEXT);
   }
 
 %{
 // For this and the next two rules, we're looking at ']', and we
 // need to know if the next token is `=' or `=='.
@@ -1754,19 +1751,17 @@ handle_identifier (char *tok, int spc_go
 // arguments.  These are also reserved words, but only because it
 // would be very difficult to do anything intelligent with them if
 // they were not reserved.
 
   if (is_text_function_name (tok))
     {
       BEGIN TEXT_FCN;
 
-      if (strcmp (tok, "help") == 0)
-	BEGIN HELP_FCN;
-      else if (strcmp (tok, "set") == 0)
+      if (strcmp (tok, "set") == 0)
 	doing_set = 1;
     }
 
   int c = yyinput ();
   yyunput (c, yytext);
   int next_tok_is_eq = (c == '=');
 
 // Make sure we put the return values of a function in the symbol
