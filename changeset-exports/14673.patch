# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1337722480 -7200
#      Tue May 22 23:34:40 2012 +0200
# Branch gui
# Node ID adad007cd018208ed1bf089b547db3a92f3b3679
# Parent  7b607001d5714c6f4dc90b9c9b199fcbb9f37933
Fixed bug with querying wrong matrix dimensions (bug #36421).

* OctaveLink.cpp (octaveValuesAsQString): Now querying for octaveValue.rows() and columns() instead using the matrix_values() dimensions.

diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -335,17 +335,16 @@ MainWindow::construct ()
   connect (m_historyDockWidget, SIGNAL (information (QString)), this, SLOT (reportStatusMessage (QString)));
   connect (m_historyDockWidget, SIGNAL (commandDoubleClicked (QString)), this, SLOT (handleCommandDoubleClicked (QString)));
   connect (saveWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleSaveWorkspaceRequest ()));
   connect (loadWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleLoadWorkspaceRequest ()));
   connect (clearWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleClearWorkspaceRequest ()));
 
   connect (copyAction, SIGNAL (triggered()), m_terminalView, SLOT(copyClipboard ()));
   connect (pasteAction, SIGNAL (triggered()), m_terminalView, SLOT(pasteClipboard ()));
-
   setWindowTitle ("Octave");
 
   addDockWidget (Qt::LeftDockWidgetArea, m_workspaceView);
   addDockWidget (Qt::LeftDockWidgetArea, m_historyDockWidget);
   addDockWidget (Qt::RightDockWidgetArea, m_filesDockWidget);
   setStatusBar (m_statusBar);
 
   // this has to be done only once, not for each editor
diff --git a/gui/src/WorkspaceModel.cpp b/gui/src/WorkspaceModel.cpp
--- a/gui/src/WorkspaceModel.cpp
+++ b/gui/src/WorkspaceModel.cpp
@@ -258,27 +258,27 @@ WorkspaceModel::octaveValueAsQString (co
                                                          range_value ().
                                                          inc ()).
           arg (octaveValue.range_value ().limit ());
 
       // Convert real matrix.
     }
   else if (octaveValue.is_real_matrix ())
     {
-      return QString ("%1x%2 matrix")
-          .arg (octaveValue.matrix_value ().rows ())
-          .arg (octaveValue.matrix_value ().cols ());
+      return QString ("%1x%2")
+          .arg (octaveValue.rows ())
+          .arg (octaveValue.columns ());
 
       // Convert complex matrix.
     }
   else if (octaveValue.is_complex_matrix ())
     {
-      return QString ("%1x%2 complex matrix")
-          .arg (octaveValue.matrix_value ().rows ())
-          .arg (octaveValue.matrix_value ().cols ());
+      return QString ("%1x%2")
+          .arg (octaveValue.rows ())
+          .arg (octaveValue.columns ());
 
       // If everything else does not fit, we could not recognize the type.
     }
   else
     {
       return QString ("<Type not recognized>");
     }
 }
diff --git a/gui/src/backend/OctaveLink.cpp b/gui/src/backend/OctaveLink.cpp
--- a/gui/src/backend/OctaveLink.cpp
+++ b/gui/src/backend/OctaveLink.cpp
@@ -11,21 +11,24 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program. If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include "OctaveLink.h"
+#include "load-path.h"
+#include <QDir>
 
 int update_hook_impl()
 {
   OctaveLink::instance()->triggerUpdateHistoryModel();
   OctaveLink::instance()->triggerCacheSymbolTable();
+  QDir::setCurrent(load_path::get_command_line_path().c_str());
   return 0;
 }
 
 OctaveLink OctaveLink::m_singleton;
 
 OctaveLink::OctaveLink ():QObject ()
 {
   m_historyModel = new QStringListModel (this);
