# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1502837595 25200
#      Tue Aug 15 15:53:15 2017 -0700
# Node ID ab1aa0e57b724f7ce56603e3db7f16fa163e7d61
# Parent  185f850aa543f7dffb272b7d4242ef1b1fdde6e6
publish: evaluate code in a function scope, allow "clear all" (bug #51096)

* publish.m: Evaluate each code block in a function scope, while preserving
the workspace from previous code blocks, allowing "clear all" to operate in its
own scope.

diff --git a/scripts/general/publish.m b/scripts/general/publish.m
--- a/scripts/general/publish.m
+++ b/scripts/general/publish.m
@@ -1009,35 +1009,34 @@ function doc = eval_code (doc, options)
     j = str2double (fig_code_blocks{i}) + body_offset;
     doc.body = [doc.body(1:j), elems, doc.body(j+1:end)];
     body_offset = body_offset + numel (elems);
   endfor
 
 endfunction
 
 
-function ___cstr___ = eval_code_helper (___context___, ___code___)
+function cstr = eval_code_helper (context, code)
   ## EVAL_CODE_HELPER evaluates a given string with Octave code in an extra
   ## temporary context and returns a cellstring with the eval output.
 
-  ## FIXME: code may contain potential conflicting variables named ___code___,
-  ## ___context___, or ___cstr___.  Is there a better solution?
-
-  if (isempty (___code___))
+  if (isempty (code))
     return;
   endif
 
-  if (exist (___context___, "file") == 2)
-    load (___context___);
+  load_snippet = "";
+  if (exist (context, "file") == 2)
+    load_snippet = sprintf ("load (\"%s\");", context);
   endif
+  save_snippet = sprintf ("save (\"-binary\", \"%s\");", context);
 
-  ___cstr___ = strsplit (evalc (___code___), "\n");
+  eval (sprintf ("function __eval__ ()\n%s\n%s\n%s\nendfunction",
+                 load_snippet, code, save_snippet));
 
-  clear ___code___;
-  save ("-binary", ___context___);
+  cstr = strsplit (evalc ("__eval__"), "\n");
 endfunction
 
 
 ## FIXME: Missing any functional BIST tests
 ## FIXME: Need to create a temporary file for use with error testing
 
 ## Test input validation
 %!error publish ()
