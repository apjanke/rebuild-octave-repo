# HG changeset patch
# User Thorsten Meyer <thorsten.meyier@gmx.de>
# Date 1225317174 14400
#      Wed Oct 29 17:52:54 2008 -0400
# Node ID 6f2d952559110c532de4f3c8a91fadd7af7357ca
# Parent  26f0e69e9f3a5ea8691ca6fab286e9f7ae578fe8
fix @seealso references to point to existing anchors

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,18 @@
+2008-10-29  Thorsten Meyer  <tmeyier@gmx.de>
+
+	* interpreter/system.txi, interpreter/poly.txi,
+	interpreter/arith.txi, interpreter/poly.txi,
+	interpreter/optim.txi, interpreter/diffeq.txi,
+	interpreter/sparse.txi, interpreter/matrix.txi,
+	interpreter/plot.txi, interpreter/io.txi, interpreter/debug.txi,
+	interpreter/var.txi, interpreter/strings.txi:
+	Add missing @DOCSTRING commands.
+
 2008-10-22  David Bateman  <dbateman@free.fr>
 
 	* interprter/plot.txi: Add documentation for error bar series.
 
 	* interprter/plot.txi: Update documentation for line series, Add 
 	documetation for scatter groups, stem series and surface groups.
 
 	* texinfo.tex: Import new upstream version.
diff --git a/doc/interpreter/arith.txi b/doc/interpreter/arith.txi
--- a/doc/interpreter/arith.txi
+++ b/doc/interpreter/arith.txi
@@ -244,16 +244,17 @@ Octave also provides the following funct
 @DOCSTRING(erfinv)
 
 @DOCSTRING(gamma)
 
 @DOCSTRING(gammainc)
 
 @DOCSTRING(legendre)
 
+@anchor{doc-gammaln}
 @DOCSTRING(lgamma)
 
 @DOCSTRING(cross)
 
 @DOCSTRING(commutation_matrix)
 
 @DOCSTRING(duplication_matrix)
 
diff --git a/doc/interpreter/debug.txi b/doc/interpreter/debug.txi
--- a/doc/interpreter/debug.txi
+++ b/doc/interpreter/debug.txi
@@ -162,16 +162,17 @@ Octave entered debug mode.
 
 @DOCSTRING(dbtype)
 
 Debug mode equally allows single line stepping through a function using
 the commands @code{dbstep}.
 
 @c leave dbnext undocumented
 
+@anchor{doc-dbnext}
 @DOCSTRING(dbstep)
 
 @node Call Stack
 @section Call Stack
 
 @DOCSTRING(dbstack)
 
 @DOCSTRING(dbup)
diff --git a/doc/interpreter/diffeq.txi b/doc/interpreter/diffeq.txi
--- a/doc/interpreter/diffeq.txi
+++ b/doc/interpreter/diffeq.txi
@@ -142,15 +142,19 @@ DAE solver @sc{Daspk}.
 @DOCSTRING(daspk)
 
 @DOCSTRING(daspk_options)
 
 Octave also includes @sc{Dassl}, an earlier version of @var{Daspk},
 and @var{dasrt}, which can be used to solve DAEs with constraints
 (stopping conditions).
 
+@DOCSTRING(dassl)
+
+@DOCSTRING(dassl_options)
+
 @DOCSTRING(dasrt)
 
 @DOCSTRING(dasrt_options)
 
 See K. E. Brenan, et al., @cite{Numerical Solution of Initial-Value
 Problems in Differential-Algebraic Equations}, North-Holland (1989) for
 more information about the implementation of @sc{Dassl}.
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -330,16 +330,17 @@ c = 2
 along with a warning.
 
 @DOCSTRING(nargout)
 
 @DOCSTRING(nargchk)
 
 @DOCSTRING(nargoutchk)
 
+@anchor{doc-varargin} @anchor{doc-varargout}
 @node Variable-length Argument Lists
 @section Variable-length Argument Lists
 @cindex variable-length argument lists
 @vrindex @code{varargin}
 
 Sometimes the number of input arguments is not known when the function
 is defined.  As an example think of a function that returns the smallest
 of all its input arguments.  For example,
diff --git a/doc/interpreter/io.txi b/doc/interpreter/io.txi
--- a/doc/interpreter/io.txi
+++ b/doc/interpreter/io.txi
@@ -747,16 +747,18 @@ prints @samp{ nowhere } (note the leadin
 
 Octave provides the @code{scanf}, @code{fscanf}, and @code{sscanf}
 functions to read formatted input.  There are two forms of each of these
 functions.  One can be used to extract vectors of data from a file, and
 the other is more `C-like'.
 
 @DOCSTRING(fscanf)
 
+@DOCSTRING(scanf)
+
 @DOCSTRING(sscanf)
 
 Calls to @code{scanf} are superficially similar to calls to
 @code{printf} in that arbitrary arguments are read under the control of
 a template string.  While the syntax of the conversion specifications in
 the template is very similar to that for @code{printf}, the
 interpretation of the template is oriented more towards free-format
 input and simple pattern matching, rather than fixed-field formatting.
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -138,16 +138,17 @@ a (i, :)
 @end example
 
 @DOCSTRING(swap)
 
 @DOCSTRING(swapcols)
 
 @DOCSTRING(swaprows)
 
+@anchor{doc-triu}
 @DOCSTRING(tril)
 
 @DOCSTRING(vec)
 
 @DOCSTRING(vech)
 
 @DOCSTRING(prepad)
 
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -344,16 +344,24 @@ in the use of methods of other classes w
 @code{double} function for our polynomial class might look like.
 
 @polynomialfile{double.m}
 
 @node Operator Overloading
 @subsection Operator Overloading
 
 @float Table,tab:overload_ops
+
+@anchor{doc-rdivide} @anchor{doc-plus} @anchor{doc-minus} @anchor{doc-uminus}
+@anchor{doc-uplus} @anchor{doc-times} @anchor{doc-mtimes} @anchor{doc-mrdivide}
+@anchor{doc-ldivide} @anchor{doc-mldivide} @anchor{doc-power}
+@anchor{doc-mpower} @anchor{doc-lt} @anchor{doc-le} @anchor{doc-gt}
+@anchor{doc-ge} @anchor{doc-eq} @anchor{doc-ne} @anchor{doc-and}
+@anchor{doc-or} @anchor{doc-not} @anchor{doc-ctranspose} @anchor{doc-transpose}
+
 @iftex
 @tex
 \vskip 6pt
 {\hbox to \hsize {\hfill\vbox{\offinterlineskip \tabskip=0pt 
 \halign{
 \vrule height2.0ex depth1.ex width 0.6pt #\tabskip=0.3em &
 # \hfil & \vrule # & # \hfil & \vrule # & # \hfil & # \vrule 
 width 0.6pt \tabskip=0pt\cr
diff --git a/doc/interpreter/optim.txi b/doc/interpreter/optim.txi
--- a/doc/interpreter/optim.txi
+++ b/doc/interpreter/optim.txi
@@ -133,8 +133,10 @@ can be solved using the @samp{\} or @sam
 function.  In the general case where the noise is assumed to be anisotropic
 the @code{gls} is needed.
 
 @DOCSTRING(ols)
 
 @DOCSTRING(gls)
 
 @DOCSTRING(lsqnonneg)
+
+@DOCSTRING(optimset)
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -331,16 +331,18 @@ and border lines to the plot.  By defaul
 border lines are on.
 
 @DOCSTRING(title)
 
 @DOCSTRING(legend)
 
 @DOCSTRING(text)
 
+@anchor{doc-ylabel}
+@anchor{doc-zlabel}
 @DOCSTRING(xlabel)
 
 @DOCSTRING(box)
 
 @DOCSTRING(grid)
 
 @DOCSTRING(colorbar)
 
@@ -627,23 +629,26 @@ off, consecutive plotting commands like 
 plot.
 
 @DOCSTRING(newplot)
 
 @DOCSTRING(hold)
 
 @DOCSTRING(ishold)
 
-To clear the current figure, call the @code{clf} function.  To bring it
+To clear the current figure, call the @code{clf} function.  To clear the
+current axis, call the @code{cla} function. To bring the current fingure
 to the top of the window stack, call the @code{shg} function.  To delete
 a graphics object, call @code{delete} on its index.  To close the
 figure window, call the @code{close} function.
 
 @DOCSTRING(clf)
 
+@DOCSTRING(cla)
+
 @DOCSTRING(shg)
 
 @DOCSTRING(delete)
 
 @DOCSTRING(close)
 
 @DOCSTRING(closereq)
 
@@ -1601,17 +1606,20 @@ corresponding hggroup elements.
 
 All of the group objects contain data source parameters. There are
 string parameters that contain an expression that is evaluated to update
 the relevant data property of the group when the @code{refreshdata}
 function is called. 
 
 @DOCSTRING(refreshdata)
 
+@anchor{doc-linkdata}
 @c add the description of the linkdata function here when it is written
+@c remove the explicit anchor when you add the corresponding @DOCSTRING
+@c command
 
 @node Area series
 @subsubsection Area series
 @cindex series objects
 @cindex area series
 
 Area series objects are created by the @code{area} function. Each of the
 @code{hggroup} elements contains a single patch object. The properties
diff --git a/doc/interpreter/poly.txi b/doc/interpreter/poly.txi
--- a/doc/interpreter/poly.txi
+++ b/doc/interpreter/poly.txi
@@ -80,16 +80,18 @@ provides such an algorithm.
 Octave can find the roots of a given polynomial.  This is done by computing
 the companion matrix of the polynomial (see the @code{compan} function
 for a definition), and then finding its eigenvalues.
 
 @DOCSTRING(roots)
 
 @DOCSTRING(compan)
 
+@DOCSTRING(mpoles)
+
 @node Products of Polynomials
 @section Products of Polynomials
 
 @DOCSTRING(conv)
 
 @DOCSTRING(convn)
 
 @DOCSTRING(deconv)
@@ -114,16 +116,18 @@ integral = polyint(c);
 area = polyval(integral, 3) - polyval(integral, 0)
 @result{} 12
 @end example
 
 @DOCSTRING(polyderiv)
 
 @DOCSTRING(polyder)
 
+@DOCSTRING(polyinteg)
+
 @DOCSTRING(polyint)
 
 @node Polynomial Interpolation
 @section Polynomial Interpolation
 
 Octave comes with good support for various kinds of interpolation,
 most of which are described in @ref{Interpolation}.  One simple alternative
 to the functions described in the aforementioned chapter, is to fit
@@ -166,8 +170,10 @@ plot(xi, yi);
 
 @DOCSTRING(poly)
 
 @DOCSTRING(polyout)
 
 @DOCSTRING(polyreduce)
 
 
+
+
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -812,16 +812,18 @@ the case of banded matrices.
 The user can force the type of the matrix with the @code{matrix_type}
 function. This overcomes the cost of discovering the type of the matrix.
 However, it should be noted incorrectly identifying the type of the matrix
 will lead to unpredictable results, and so @code{matrix_type} should be
 used with care.
 
 @DOCSTRING(normest)
 
+@DOCSTRING(onenormest)
+
 @DOCSTRING(condest)
 
 @DOCSTRING(spparms)
 
 @DOCSTRING(sprank)
 
 @DOCSTRING(symbfact)
 
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -183,16 +183,18 @@ represent strings of different lengths. 
 array of strings, which is described in @ref{Cell Arrays of Strings}.
 
 @DOCSTRING(char)
 
 @DOCSTRING(strcat)
 
 @DOCSTRING(strvcat)
 
+@DOCSTRING(cstrcat)
+
 @DOCSTRING(strtrunc)
 
 @DOCSTRING(string_fill_char)
 
 @DOCSTRING(str2mat)
 
 @DOCSTRING(ischar)
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -116,16 +116,17 @@ useful.
 @DOCSTRING(date)
 
 @DOCSTRING(etime)
 
 @DOCSTRING(cputime)
 
 @DOCSTRING(is_leap_year)
 
+@anchor{doc-toc}
 @DOCSTRING(tic)
 
 @DOCSTRING(pause)
 
 @DOCSTRING(sleep)
 
 @DOCSTRING(usleep)
 
@@ -138,16 +139,20 @@ useful.
 @DOCSTRING(addtodate)
 
 @DOCSTRING(calendar)
 
 @DOCSTRING(weekday)
 
 @DOCSTRING(eomday)
 
+@DOCSTRING(eomdate)
+
+@DOCSTRING(datetick)
+
 @node Filesystem Utilities
 @section Filesystem Utilities
 
 Octave includes the following functions for renaming and deleting files,
 creating, deleting, and reading directories, and for getting information
 about the status of files.
 
 @DOCSTRING(rename)
@@ -224,16 +229,18 @@ about the status of files.
 @DOCSTRING(zip)
 
 @DOCSTRING(unzip)
 
 @DOCSTRING(pack)
 
 @DOCSTRING(unpack)
 
+@DOCSTRING(bzip2)
+
 @node Networking Utilities
 @section Networking Utilities
 
 @DOCSTRING(urlread)
 
 @DOCSTRING(urlwrite)
 
 @node Controlling Subprocesses
@@ -274,16 +281,38 @@ they can be used, look at the definition
 @DOCSTRING(exec)
 
 @DOCSTRING(pipe)
 
 @DOCSTRING(dup2)
 
 @DOCSTRING(waitpid)
 
+@DOCSTRING(WCONTINUE)
+
+@DOCSTRING(WCOREDUMP)
+
+@DOCSTRING(WEXITSTATUS)
+
+@DOCSTRING(WIFCONTINUED)
+ 
+@DOCSTRING(WIFSIGNALED)
+
+@DOCSTRING(WIFSTOPPED)
+
+@DOCSTRING(WIFEXITED)
+
+@DOCSTRING(WNOHANG)
+
+@DOCSTRING(WSTOPSIG)
+ 
+@DOCSTRING(WTERMSIG)
+
+@DOCSTRING(WUNTRACED)
+
 @DOCSTRING(fcntl)
 
 @DOCSTRING(kill)
 
 @DOCSTRING(SIG)
 
 @node Process ID Information
 @section Process, Group, and User IDs
@@ -403,22 +432,26 @@ referred to as a @var{grp_struct}.
 @DOCSTRING(computer)
 
 @DOCSTRING(uname)
 
 @DOCSTRING(ispc)
 
 @DOCSTRING(isunix)
 
+@DOCSTRING(ismac)
+
 @DOCSTRING(isieee)
 
 @DOCSTRING(OCTAVE_HOME)
 
 @DOCSTRING(OCTAVE_VERSION)
 
+@DOCSTRING(license)
+
 @DOCSTRING(version)
 
 @DOCSTRING(ver)
 
 @DOCSTRING(octave_config_info)
 
 @DOCSTRING(getrusage)
 
diff --git a/doc/interpreter/var.txi b/doc/interpreter/var.txi
--- a/doc/interpreter/var.txi
+++ b/doc/interpreter/var.txi
@@ -178,16 +178,17 @@ the function works with a @emph{copy} of
 
 @DOCSTRING(isglobal)
 
 @node Persistent Variables
 @section Persistent Variables
 @cindex persistent variables
 @cindex @code{persistent} statement
 @cindex variables, persistent
+@anchor{doc-persistent}
 
 A variable that has been declared @dfn{persistent} within a function
 will retain its contents in memory between subsequent calls to the
 same function. The difference between persistent variables and global
 variables is that persistent variables are local in scope to a
 particular function and are not visible elsewhere.
 
 The following example uses a persistent variable to create a function
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,23 @@
+2008-10-29  Thorsten Meyer  <thorsten.meyier@gmx.de>
+
+	* set/create_set.m, set/ismember.m, set/union.m, set/complement.m:
+	Fix @seealso references to deprecated function intersection.
+	* polynomial/polyvalm.m, polynomial/polyout.m,
+	polynomial/polyint.m, polynomial/polygcd.m,
+	deprecated/polyinteg.m: Remove "and" from @seealso string.
+	* specfun/betaln.m: Change @seealso reference from deprecated
+	betai to betainc.
+	* plot/plot.m, plot/xlabel.m, plot/ylabel.m, plot/zlabel.m, 
+	plot/plot3.m: Fix @seealso references to ylabel and zlabel.
+	* general/issymmetric.m, image/imagesc.m, specfun/realpow.m,
+	polynomial/polyfit.m, time/eomday.m: Remove @seealso references to
+	non-existent functions.
+
 2008-10-29  John W. Eaton  <jwe@octave.org>
 
 	* plot/cla.m: In test, set visible off when creating figure.
 
 2008-10-28  Gabriele Pannocchia  <g.pannocchia@ing.unipi.it>
 
 	* optimization/qp.m: Convert bounds of the form b <= x <= b and
 	constraints of the form b <= A*x <= b to equality constraints.
diff --git a/scripts/deprecated/polyinteg.m b/scripts/deprecated/polyinteg.m
--- a/scripts/deprecated/polyinteg.m
+++ b/scripts/deprecated/polyinteg.m
@@ -17,18 +17,18 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} polyinteg (@var{c})
 ## Return the coefficients of the integral of the polynomial whose
 ## coefficients are represented by the vector @var{c}.
 ##
 ## The constant of integration is set to zero.
-## @seealso{poly, polyderiv, polyreduce, roots, conv, deconv, residue,
-## filter, polyval, and polyvalm}
+## @seealso{polyint, poly, polyderiv, polyreduce, roots, conv, deconv, residue,
+## filter, polyval, polyvalm}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 ## Adapted-By: jwe
 
 ## Deprecated in version 3.0
 
diff --git a/scripts/general/issymmetric.m b/scripts/general/issymmetric.m
--- a/scripts/general/issymmetric.m
+++ b/scripts/general/issymmetric.m
@@ -19,17 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} issymmetric (@var{x}, @var{tol})
 ## If @var{x} is symmetric within the tolerance specified by @var{tol},
 ## then return the dimension of @var{x}.  Otherwise, return 0.  If
 ## @var{tol} is omitted, use a tolerance equal to the machine precision.
 ## Matrix @var{x} is considered symmetric if
 ## @code{norm (@var{x} - @var{x}.', inf) / norm (@var{x}, inf) < @var{tol}}.
-## @seealso{size, rows, columns, length, ishermitian, ismatrix, isscalar,
+## @seealso{size, rows, columns, length, ismatrix, isscalar,
 ## issquare, isvector}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
 
 function retval = issymmetric (x, tol)
diff --git a/scripts/image/imagesc.m b/scripts/image/imagesc.m
--- a/scripts/image/imagesc.m
+++ b/scripts/image/imagesc.m
@@ -28,17 +28,17 @@
 ## colormap.  If @var{limits} = [@var{lo}, @var{hi}] are given, then that
 ## range is set to the 'clim' of the current axes.
 ##
 ## The axis values corresponding to the matrix elements are specified in
 ## @var{x} and @var{y}, either as pairs giving the minimum and maximum
 ## values for the respective axes, or as values for each row and column
 ## of the matrix @var{a}.
 ##
-## @seealso{image, imshow, clim, caxis}
+## @seealso{image, imshow, caxis}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
 function retval = imagesc (varargin)
 
diff --git a/scripts/plot/plot3.m b/scripts/plot/plot3.m
--- a/scripts/plot/plot3.m
+++ b/scripts/plot/plot3.m
@@ -74,17 +74,17 @@
 ##
 ## @example
 ## @group
 ##    z = [0:0.05:5];
 ##    plot3 (cos(2*pi*z), sin(2*pi*z), z, ";helix;");
 ##    plot3 (z, exp(2i*pi*z), ";complex sinusoid;");
 ## @end group
 ## @end example
-## @seealso{plot}
+## @seealso{plot, xlabel, ylabel, zlabel, title, print}
 ## @end deftypefn
 
 ## Author: Paul Kienzle
 ##         (modified from __plt__.m)
 
 function retval = plot3 (varargin)
 
   newplot ();
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -20,17 +20,17 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} xlabel (@var{string})
 ## @deftypefnx {Function File} {} ylabel (@var{string})
 ## @deftypefnx {Function File} {} zlabel (@var{string})
 ## @deftypefnx {Function File} {} xlabel (@var{h}, @var{string})
 ## Specify x, y, and z axis labels for the current figure. If @var{h} is
 ## specified then label the axis defined by @var{h}.
 ## @seealso{plot, semilogx, semilogy, loglog, polar, mesh, contour,
-## bar, stairs,  ylabel, title}
+## bar, stairs, title}
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command xlabel
 
 ## Author: jwe
 
 function retval = xlabel (varargin)
 
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -15,17 +15,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ylabel (@var{string})
 ## @deftypefnx {Function File} {} ylabel (@var{h}, @var{string})
-## See xlabel.
+## @seealso{xlabel}.
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command ylabel
 
 ## Author: jwe
 
 function retval = ylabel (varargin)
 
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -15,17 +15,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} zlabel (@var{string})
 ## @deftypefnx {Function File} {} zlabel (@var{h}, @var{string})
-## See xlabel.
+## @seealso{xlabel}.
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command zlabel
 
 ## Author: jwe
 
 function retval = zlabel (varargin)
 
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -43,17 +43,17 @@
 ## statistical error limits of the predicted values.
 ##
 ## When the third output, @var{mu}, is present the 
 ## coefficients, @var{p}, are associated with a polynomial in
 ## @var{xhat} = (@var{x}-@var{mu}(1))/@var{mu}(2).
 ## Where @var{mu}(1) = mean (@var{x}), and @var{mu}(2) = std (@var{x}).
 ## This linear transformation of @var{x} improves the numerical
 ## stability of the fit.
-## @seealso{polyval, polyconf, residue}
+## @seealso{polyval, residue}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 13 December 1994
 ## Adapted-By: jwe
 
 function [p, s, mu] = polyfit (x, y, n)
 
diff --git a/scripts/polynomial/polygcd.m b/scripts/polynomial/polygcd.m
--- a/scripts/polynomial/polygcd.m
+++ b/scripts/polynomial/polygcd.m
@@ -33,17 +33,17 @@
 ## @example
 ## polygcd (poly(1:8), poly(3:12)) - poly(3:8)
 ## @result{} [ 0, 0, 0, 0, 0, 0, 0 ]
 ## deconv (poly(1:8), polygcd (poly(1:8), poly(3:12))) ...
 ##   - poly(1:2)
 ## @result{} [ 0, 0, 0 ]
 ## @end example
 ## @seealso{poly, polyinteg, polyderiv, polyreduce, roots, conv, deconv,
-## residue, filter, polyval, and polyvalm}
+## residue, filter, polyval, polyvalm}
 ## @end deftypefn
 
 function x = polygcd (b, a, tol)
 
   if (nargin == 2 || nargin == 3)
     if (nargin == 2)
       if (isa (a, "single") || isa (b, "single"))
 	tol = sqrt (eps ("single"));
diff --git a/scripts/polynomial/polyint.m b/scripts/polynomial/polyint.m
--- a/scripts/polynomial/polyint.m
+++ b/scripts/polynomial/polyint.m
@@ -17,17 +17,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} polyint (@var{c}, @var{k})
 ## Return the coefficients of the integral of the polynomial whose
 ## coefficients are represented by the vector @var{c}. The variable
 ## @var{k} is the constant of integration, which by default is set to zero.
 ## @seealso{poly, polyderiv, polyreduce, roots, conv, deconv, residue,
-## filter, polyval, and polyvalm}
+## filter, polyval, polyvalm}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 ## Adapted-By: jwe
 
 function p = polyint (p, k)
 
diff --git a/scripts/polynomial/polyout.m b/scripts/polynomial/polyout.m
--- a/scripts/polynomial/polyout.m
+++ b/scripts/polynomial/polyout.m
@@ -29,17 +29,17 @@
 ## @example
 ##    c(x) = c(1) * x^n + ... + c(n) x + c(n+1)
 ## @end example
 ## @end ifinfo
 ##  and return it as a string or write it to the screen (if
 ##  @var{nargout} is zero).
 ##  @var{x} defaults to the string @code{"s"}.
 ## @seealso{polyval, polyvalm, poly, roots, conv, deconv, residue,
-## filter, polyderiv, and polyinteg}
+## filter, polyderiv, polyinteg}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <a.s.hodel@eng.auburn.edu>
 ## Created: May 1995
 ## Nov 1998: Correctly handles complex coefficients
 
 function y = polyout (c, x)
 
diff --git a/scripts/polynomial/polyvalm.m b/scripts/polynomial/polyvalm.m
--- a/scripts/polynomial/polyvalm.m
+++ b/scripts/polynomial/polyvalm.m
@@ -22,17 +22,17 @@
 ## Evaluate a polynomial in the matrix sense.
 ##
 ## @code{polyvalm (@var{c}, @var{x})} will evaluate the polynomial in the
 ## matrix sense, i.e. matrix multiplication is used instead of element by
 ## element multiplication as is used in polyval.
 ##
 ## The argument @var{x} must be a square matrix.
 ## @seealso{polyval, poly, roots, conv, deconv, residue, filter,
-## polyderiv, and polyinteg}
+## polyderiv, polyinteg}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 ## Adapted-By: jwe
 
 function y = polyvalm (c, x)
 
diff --git a/scripts/set/complement.m b/scripts/set/complement.m
--- a/scripts/set/complement.m
+++ b/scripts/set/complement.m
@@ -23,17 +23,17 @@
 ## example,
 ##
 ## @example
 ## @group
 ## complement ([ 1, 2, 3 ], [ 2, 3, 5 ])
 ##      @result{} 5
 ## @end group
 ## @end example
-## @seealso{create_set, union, intersection}
+## @seealso{create_set, union, intersect}
 ## @end deftypefn
 
 ## Author: jwe
 
 function y = complement (a, b)
 
   if (nargin != 2)
     print_usage ();
diff --git a/scripts/set/create_set.m b/scripts/set/create_set.m
--- a/scripts/set/create_set.m
+++ b/scripts/set/create_set.m
@@ -35,17 +35,17 @@
 ## @example
 ## @group
 ## create_set ([ 1, 2; 3, 4; 4, 2; 1, 2 ], "rows")
 ##      @result{}  1   2
 ##     3   4
 ##     4   2
 ## @end group
 ## @end example
-## @seealso{union, intersection, complement, unique}
+## @seealso{union, intersect, complement, unique}
 ## @end deftypefn
 
 ## Author: jwe
 
 function y = create_set (x, rows_opt)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
diff --git a/scripts/set/ismember.m b/scripts/set/ismember.m
--- a/scripts/set/ismember.m
+++ b/scripts/set/ismember.m
@@ -55,17 +55,17 @@
 ## a = [1:3; 5:7; 4:6];
 ## s = [0:2; 1:3; 2:4; 3:5; 4:6];
 ## [tf, a_idx] = ismember(a, s, 'rows');
 ##      @result{} tf = logical ([1; 0; 1])
 ##      @result{} a_idx = [2; 0; 5];
 ## @end group
 ## @end example
 ##
-## @seealso{unique, union, intersection, setxor, setdiff}
+## @seealso{unique, union, intersect, setxor, setdiff}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 ## Author: Søren Hauberg <hauberg@gmail.com>
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Adapted-by: jwe
 
 function [tf, a_idx] = ismember (a, s, rows_opt) 
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -43,17 +43,17 @@
 ## @end group
 ## @end example
 ##
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} union (@var{a}, @var{b})
 ##
 ## Return index vectors @var{ia} and @var{ib} such that @code{a==c(ia)} and
 ## @code{b==c(ib)}.
 ## 
-## @seealso{create_set, intersection, complement}
+## @seealso{create_set, intersect, complement}
 ## @end deftypefn
 
 ## Author: jwe
 
 function [y, ia, ib] = union (a, b, varargin)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
diff --git a/scripts/specfun/betaln.m b/scripts/specfun/betaln.m
--- a/scripts/specfun/betaln.m
+++ b/scripts/specfun/betaln.m
@@ -27,17 +27,17 @@
 ## @end tex
 ## @end iftex
 ## @ifinfo
 ##
 ## @example
 ## betaln (a, b) = gammaln (a) + gammaln (b) - gammaln (a + b)
 ## @end example
 ## @end ifinfo
-## @seealso{beta, betai, gammaln}
+## @seealso{beta, betainc, gammaln}
 ## @end deftypefn
 
 ## Author:   Nicol N. Schraudolph <nic@idsia.ch>
 ## Created:  06 Aug 1998
 ## Keywords: log beta special function
 
 function retval = betaln (a, b)
   if (nargin != 2)
diff --git a/scripts/specfun/realpow.m b/scripts/specfun/realpow.m
--- a/scripts/specfun/realpow.m
+++ b/scripts/specfun/realpow.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} realpow (@var{x}, @var{y})
 ## Return the element by element power operator. This is equivalent to
 ## @code{@var{x} .^ @var{y}}, except that if the return value
 ## is complex @code{realpow} produces an error.
-## @seealso{pow, reallog, realsqrt}
+## @seealso{reallog, realsqrt}
 ## @end deftypefn
 
 function z = realpow (x, y)
   if (nargin != 2)
     print_usage ();
   else
     z = x .^ y;
     if (iscomplex (z))
diff --git a/scripts/time/eomday.m b/scripts/time/eomday.m
--- a/scripts/time/eomday.m
+++ b/scripts/time/eomday.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{e} =} eomday (@var{y}, @var{m})
 ## Return the last day of the month @var{m} for the year @var{y}.
-## @seealso{datenum, datevec, weekday, eomdate}
+## @seealso{datenum, datevec, weekday}
 ## @end deftypefn
 
 ## Author: pkienzle <pkienzle@users.sf.net>
 ## Created: 25 July 2004
 ## Adapted-By: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function e = eomday (y, m)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,29 @@
+2008-10-29  Thorsten Meyer  <thorsten.meyier@gmx.de>
+
+	* data.cc (Fcolumns): Remove "and" from @seealso string.
+	* mappers.cc (Fgamma, Flgamma): Replace @seealso reference to
+	deprecated gammai by gammainc.
+	* DLD-FUNCTIONS/sqrtm.cc (Fsqrtm): Remove reference to Octave
+	Forge function funm.
+	* DLD-FUNCTIONS/qz.cc (Fqz): removed @seealso reference to Octave
+	Forge function dare.
+	* DLD-FUNCTIONS/rcond.cc (Frcond): removed @seealso reference to
+	mldivide.
+	* debug.cc (Fdbstop): Fix @seealso references and function name in
+	docstring of dbnext.
+	* DLD-FUNCTIONS/cellfun.cc (Fcellfun): Remove @seealso reference
+	to isclass.
+	* syscalls.cc (Fwaitpid): Replace WCONTINUED by WCONTINUE.
+	* oct-hist.cc (Fhistory_size, Fsaving_history): Fix @seealso
+	references to history_timestamp_format_string.
+	* DLD-FUNCTIONS/luinc.cc (Fluinc): Remove reference to missing
+	function cholinc.
+        
 2008-10-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/qr.cc (Fcholinsert, Fcholdelete, Fcholshift): Fix
 	inline docs.
 
 2008-10-28  John W. Eaton  <jwe@octave.org>
 
 	* parse.y (finish_function): Clear local variables in function scope.
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -119,17 +119,17 @@ of the element that caused the error. Fo
 @example\n\
 @group\n\
 function y = foo (s, x), y = NaN; endfunction\n\
 cellfun (@@factorial, @{-1,2@},'ErrorHandler',@@foo)\n\
 @result{} ans = [NaN 2]\n\
 @end group\n\
 @end example\n\
 \n\
-@seealso{isempty, islogical, isreal, length, ndims, numel, size, isclass}\n\
+@seealso{isempty, islogical, isreal, length, ndims, numel, size}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   std::string name = "function";
   octave_function *func = 0;
   int nargin = args.length ();
   nargout = (nargout < 1 ? 1 : nargout);
 
diff --git a/src/DLD-FUNCTIONS/luinc.cc b/src/DLD-FUNCTIONS/luinc.cc
--- a/src/DLD-FUNCTIONS/luinc.cc
+++ b/src/DLD-FUNCTIONS/luinc.cc
@@ -88,17 +88,17 @@ Defines the pivot threshold in the inter
 range are ignored.\n\
 @end table\n\
 \n\
 All other fields in @var{opts} are ignored. The outputs from @dfn{luinc}\n\
 are the same as for @dfn{lu}.\n\
 \n\
 Given the string argument 'vector', @dfn{luinc} returns the values of @var{p}\n\
 @var{q} as vector values.\n\
-@seealso{sparse, lu, cholinc}\n\
+@seealso{sparse, lu}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value_list retval;
 
   if (nargin == 0)
     print_usage ();
   else if (nargin < 2 || nargin > 3)
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -275,17 +275,17 @@ in the open left half-plane\n\
 in the closed right half-plane\n\
 @end  table\n\
 @end table\n\
 @end enumerate\n\
 \n\
 Note: qz performs permutation balancing, but not scaling (see balance).\n\
 Order of output arguments was selected for compatibility with MATLAB\n\
 \n\
-@seealso{balance, dare, eig, schur}\n\
+@seealso{balance, eig, schur}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length ();
 
 #ifdef DEBUG
   std::cout << "qz: nargin = " << nargin << ", nargout = " << nargout << std::endl;
 #endif
diff --git a/src/DLD-FUNCTIONS/rcond.cc b/src/DLD-FUNCTIONS/rcond.cc
--- a/src/DLD-FUNCTIONS/rcond.cc
+++ b/src/DLD-FUNCTIONS/rcond.cc
@@ -35,17 +35,17 @@ DEFUN_DLD (rcond, args, ,
 @deftypefn {Loadable Function} {@var{c} =} rcond (@var{a})\n\
 Compute the 1-norm estimate of the reciprocal condition as returned\n\
 by LAPACK. If the matrix is well-conditioned then @var{c} will be near\n\
 1 and if the matrix is poorly conditioned it will be close to zero.\n\
 \n\
 The matrix @var{a} must not be sparse. If the matrix is sparse then\n\
 @code{condest (@var{a})} or @code{rcond (full (@var{a}))} should be used\n\
 instead.\n\
-@seealso{inv, mldivide}\n\
+@seealso{inv}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ();
diff --git a/src/DLD-FUNCTIONS/sqrtm.cc b/src/DLD-FUNCTIONS/sqrtm.cc
--- a/src/DLD-FUNCTIONS/sqrtm.cc
+++ b/src/DLD-FUNCTIONS/sqrtm.cc
@@ -173,17 +173,17 @@ sqrtm_from_schur (const FloatComplexMatr
 DEFUN_DLD (sqrtm, args, nargout,
  "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{result}, @var{error_estimate}] =} sqrtm (@var{a})\n\
 Compute the matrix square root of the square matrix @var{a}.\n\
 \n\
 Ref: Nicholas J. Higham. A new sqrtm for MATLAB. Numerical Analysis\n\
 Report No. 336, Manchester Centre for Computational Mathematics,\n\
 Manchester, England, January 1999.\n\
-@seealso{expm, logm, funm}\n\
+@seealso{expm, logm}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2482,17 +2482,17 @@ Return the number of rows of @var{a}.\n\
 
   return retval;
 }
 
 DEFUN (columns, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} columns (@var{a})\n\
 Return the number of columns of @var{a}.\n\
-@seealso{size, numel, rows, length, isscalar, isvector, and ismatrix}\n\
+@seealso{size, numel, rows, length, isscalar, isvector, ismatrix}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).columns ();
   else
     print_usage ();
diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -373,17 +373,17 @@ Set a breakpoint in a function\n\
 String representing the function name.  When already in debug\n\
 mode this should be left out and only the line should be given.\n\
 @item line\n\
 Line you would like the breakpoint to be set on. Multiple\n\
 lines might be given as separate arguments or as a vector.\n\
 @end table\n\
 \n\
 The rline returned is the real line that the breakpoint was set at.\n\
-@seealso{dbclear, dbstatus, dbnext}\n\
+@seealso{dbclear, dbstatus, dbstep}\n\
 @end deftypefn")
 {
   bp_table::intmap retval;
   std::string symbol_name;
   bp_table::intmap lines;
 
   parse_dbfunction_params ("dbstop", args, symbol_name, lines);
 
@@ -967,17 +967,17 @@ In debugging mode, quit debugging mode a
   else
     error ("dbquit: can only be called in debug mode");
 
   return octave_value_list ();
 }
 
 DEFCMD (dbnext, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} dbquit ()\n\
+@deftypefn {Command} {} dbnext ()\n\
 In debugging mode, execute the next line of code without stepping in to\n\
 functions. This is synonymous with @code{dbstep}.\n\
 @seealso{dbstep, dbcont, dbquit}\n\
 @end deftypefn")
 {
   if (Vdebugging)
     {
     if (args.length() == 0)
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -744,17 +744,17 @@ Computes the Gamma function,\n\
 @example\n\
             infinity\n\
             /\n\
 gamma (z) = | t^(z-1) exp (-t) dt.\n\
             /\n\
          t=0\n\
 @end example\n\
 @end ifinfo\n\
-@seealso{gammai, lgamma}\n\
+@seealso{gammainc, lgamma}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).gamma ();
   else
     print_usage ();
 
@@ -1120,17 +1120,17 @@ Return 1 for characters that are hexadec
   return retval;
 }
 
 DEFUN (lgamma, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} lgamma (@var{x})\n\
 @deftypefnx {Mapping Function} {} gammaln (@var{x})\n\
 Return the natural logarithm of the gamma function of @var{x}.\n\
-@seealso{gamma, gammai}\n\
+@seealso{gamma, gammainc}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).lgamma ();
   else
     print_usage ();
 
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -665,17 +665,17 @@ and the commands are simply executed as 
 
 DEFUN (history_size, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} history_size ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} history_size (@var{new_val})\n\
 Query or set the internal variable that specifies how many entries\n\
 to store in the history file.  The default value is @code{1024},\n\
 but may be overridden by the environment variable @code{OCTAVE_HISTSIZE}.\n\
-@seealso{history_file, history_timestamp_format, saving_history}\n\
+@seealso{history_file, history_timestamp_format_string, saving_history}\n\
 @end deftypefn")
 {
   int saved_history_size = Vhistory_size;
 
   octave_value retval
     = SET_INTERNAL_VARIABLE_WITH_LIMITS (history_size, -1, INT_MAX);
 
   if (Vhistory_size != saved_history_size)
@@ -724,17 +724,17 @@ value is\n\
 }
 
 DEFUN (saving_history, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} saving_history ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} saving_history (@var{new_val})\n\
 Query or set the internal variable that controls whether commands entered\n\
 on the command line are saved in the history file.\n\
-@seealso{history_file, history_size, history_timestamp_format}\n\
+@seealso{history_file, history_size, history_timestamp_format_string}\n\
 @end deftypefn")
 {
   octave_value retval = SET_INTERNAL_VARIABLE (saving_history);
 
   command_history::ignore_entries (! Vsaving_history);
 
   return retval;
 }
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -1279,27 +1279,27 @@ default if the @var{options} argument is
 \n\
 @item WNOHANG\n\
 Do not hang if status is not immediately available.\n\
 \n\
 @item WUNTRACED\n\
 Report the status of any child processes that are stopped, and whose\n\
 status has not yet been reported since they stopped.\n\
 \n\
-@item WCONTINUED\n\
+@item WCONTINUE\n\
 Return if a stopped child has been resumed by delivery of @code{SIGCONT}.\n\
 This value may not be meaningful on all systems.\n\
 @end table\n\
 \n\
 If the returned value of @var{pid} is greater than 0, it is the process\n\
 ID of the child process that exited.  If an error occurs, @var{pid} will\n\
 be less than zero and @var{msg} will contain a system-dependent error\n\
 message.  The value of @var{status} contains additional system-dependent\n\
 information about the subprocess that exited.\n\
-@seealso{WCONTINUED, WCOREDUMP, WEXITSTATUS, WIFCONTINUED, WIFSIGNALED, WIFSTOPPED, WNOHANG, WSTOPSIG, WTERMSIG, WUNTRACED}\n\
+@seealso{WCONTINUE, WCOREDUMP, WEXITSTATUS, WIFCONTINUED, WIFSIGNALED, WIFSTOPPED, WNOHANG, WSTOPSIG, WTERMSIG, WUNTRACED}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = 0;
   retval(0) = -1;
 
