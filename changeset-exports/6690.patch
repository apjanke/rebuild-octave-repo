# HG changeset patch
# User dbateman
# Date 1180997072 0
#      Mon Jun 04 22:44:32 2007 +0000
# Node ID fd242dccd22151f98e5a4fd221f1805003a6ddd6
# Parent  8e0444d9005002fe8e938abcc0b17a823c54984d
[project @ 2007-06-04 22:44:32 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-05-08 Michael Weitzel <michael.weitzel@uni-siegen.de>
+
+	* DLD-FUNCTIONS/symrcm.cc: Fix for queuing error that might cause
+	an infinite loop.
+
 2007-06-04  John W. Eaton  <jwe@octave.org>
 
 	* data.cc (Fislogical): Rename from Fisbool.
 	Make isbool an alias for islogical.
 
 2007-06-03  David Bateman  <dbateman@free.fr>
 
 	* Makefile.in (DISTFILES): Add mxarray.h.in
@@ -23,17 +28,16 @@ 2007-06-03  David Bateman  <dbateman@fre
 	* ov-cx-mat.cc (octave_complex_matrix::as_mxArray): ditto.
 	* ov-cx-sparse.cc (octave_sparse_complex_matrix::as_mxArray): ditto.
 	* ov-int.h (as_mxArray): ditto.
 	* ov-range.cc (octave_range:as_mxArray): ditto.
 	* ov-re-mat.cc (octave_matrix:as_mxArray): ditto.
 	* ov-re-sparse.cc (octave_sparse_matrix::as_mxArray): ditto.
 	* ov-struct.cc (octave_struct::as_mxArray): ditto.
 
->>>>>>> 1.1759
 2007-06-02  David Bateman  <dbateman@free.fr>
 
 	* graphics.cc (color_property class): g++ doesn't like anonymous
 	enums. Give type to color_type enum.
 
 2007-05-31  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* graphics.cc (radio_values, radio_property, color_values):
diff --git a/src/DLD-FUNCTIONS/symrcm.cc b/src/DLD-FUNCTIONS/symrcm.cc
--- a/src/DLD-FUNCTIONS/symrcm.cc
+++ b/src/DLD-FUNCTIONS/symrcm.cc
@@ -449,25 +449,25 @@ Mathematics, ISBN 0-13-165274-5, 1981.\n
 // implementatation of static functions
 //
 
 inline static void 
 Q_enq (CMK_Node *Q, octave_idx_type N, octave_idx_type& qh,
        octave_idx_type& qt, const CMK_Node& o)
 {	
   Q[qt] = o;
-  qt = (qt + 1) % N;
+  qt = (qt + 1) % (N + 1);
 }
 
 inline static CMK_Node 
 Q_deq(CMK_Node * Q, octave_idx_type N, octave_idx_type &qh,
       octave_idx_type &qt)
 {
   CMK_Node r = Q[qh];
-  qh = (qh + 1) % N;
+  qh = (qh + 1) % (N + 1);
   return r;
 }
 
 static void 
 H_heapify_min(CMK_Node *A, octave_idx_type i, octave_idx_type size)
 {
   octave_idx_type j, l, r;
   octave_idx_type smallest;
