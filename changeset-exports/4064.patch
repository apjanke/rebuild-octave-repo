# HG changeset patch
# User jwe
# Date 1033074646 0
#      Thu Sep 26 21:10:46 2002 +0000
# Node ID b4fa31442a785dee6d59d822f502d7612f5c5869
# Parent  9de7822bbdc435e0cad995836e6cb968fe85a3f2
[project @ 2002-09-26 21:10:45 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2002-09-26  Paul Kienzle <pkienzle@users.sf.net>
+
+	* configure.in: Fix syntax errors in !HAVE_XXX_T.
+	Don't require terminal control for build.
+
 2002-09-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Fix typedefs used in AH_BOTTOM.
 
 2002-09-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in (AH_BOTTOM): If using g++, define
 	USE_PRAGMA_INTERFACE_IMPLEMENTATION.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -17,17 +17,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
 AC_INIT
-AC_REVISION($Revision: 1.366 $)
+AC_REVISION($Revision: 1.367 $)
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -823,17 +823,17 @@ case "$canonical_host_type" in
   ;;
 esac
 
 if test "$have_termios_h" = yes \
     || test "$have_termio_h" = yes \
     || test "$have_sgtty_h" = yes; then
   true
 else
-  AC_MSG_ERROR([I couldn't find termios.h, termio.h, or sgtty.h!])
+  AC_MSG_WARN([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
 
 ## I'm told that setting LIBGLOB to be $(TOPDIR)/glob/libglob.a causes
 ## trouble on SCO systems, but setting it to be the two object files
 ## avoids the problem.
 
 GLOB_DIR=glob
 LIBGLOB='$(TOPDIR)/glob/glob.o $(TOPDIR)/glob/fnmatch.o'
@@ -1241,29 +1241,29 @@ AH_BOTTOM([
 #endif
 
 #if defined(HAVE_F2C) && !defined(F77_FUNC)
 #  define F77_FUNC(x,X) x ## _
 #  define F77_FUNC_(x,X) x ## __
 #endif
 
 #if !defined(HAVE_DEV_T)
-typedef short dev_t
+typedef short dev_t;
 #endif
 
 #if !defined(HAVE_INO_T)
-typedef unsigned long ino_t
+typedef unsigned long ino_t;
 #endif
 
 #if !defined(HAVE_NLINK_T)
-typedef short nlink_t
+typedef short nlink_t;
 #endif
 
 #if !defined(HAVE_SIGSET_T)
-typedef int sigset_t
+typedef int sigset_t;
 #endif
 ])
 
 ### Do the substitutions in all the Makefiles.
 
 AC_CONFIG_FILES([Makefile octMakefile Makeconf install-octave \
   test/Makefile dlfcn/Makefile \
   doc/Makefile doc/faq/Makefile doc/interpreter/Makefile \
diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,8 +1,13 @@
+2002-09-26  Paul Kienzle <pkienzle@users.sf.net>
+
+        * config.h: Remove MINGW32 conflicts with win32lib.h.
+        * c-stat.h: Ditto.
+
 2002-09-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* xstat.c: Delete forward decl for lstat.  It apparently causes
 	trouble on some systems with gcc 3.x.
 
 2002-04-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* config.guess, config.sub: Update from FSF sources.
diff --git a/kpathsea/c-stat.h b/kpathsea/c-stat.h
--- a/kpathsea/c-stat.h
+++ b/kpathsea/c-stat.h
@@ -17,17 +17,17 @@ License along with this library; if not,
 Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */
 
 #ifndef KPATHSEA_STAT_H
 #define KPATHSEA_STAT_H
 
 #include <kpathsea/systypes.h>
 #include <sys/stat.h>
 
-#ifdef WIN32
+#if defined (WIN32) && !defined (__MINGW32__)
 #include <kpathsea/win32lib.h>
 #endif /* WIN32 */
 
 /* POSIX predicates for testing file attributes.  */
 
 #if !defined (S_ISBLK) && defined (S_IFBLK)
 #define	S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
 #endif
diff --git a/kpathsea/config.h b/kpathsea/config.h
--- a/kpathsea/config.h
+++ b/kpathsea/config.h
@@ -29,17 +29,21 @@ Foundation, Inc., 59 Temple Place - Suit
 #if defined (DOS) || defined (OS2) || defined (WIN32) || defined(__MSDOS__)
 #define DOSISH
 #endif
 
 #if defined (DOSISH)
 #define MONOCASE_FILENAMES	/* case-insensitive filename comparisons */
 #endif
 
-#ifdef WIN32
+#if defined(__MINGW32__)
+#include <windows.h>
+#include <fcntl.h>
+#include <dirent.h>
+#elif defined(WIN32)
 #define __STDC__ 1
 #include <kpathsea/win32lib.h>
 #endif /* not WIN32 */
 
 #ifdef __DJGPP__
 #include <fcntl.h>	/* for long filenames' stuff */
 #include <dir.h>	/* for `getdisk' */
 #include <io.h>		/* for `setmode' */
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2002-09-26  Paul Kienzle <pkienzle@users.sf.net>
+
+	* lo-mappers.cc: Remove unused #define M_PI.
+	* lo-specfun.cc: Add #define M_PI if needed.
+
 2002-09-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cmd-edit.cc (do_decode_prompt_string): Cope with possibility
 	that geteuid doesn't exist.
 
 	* LP.h: Rename LP class to octave_LP.
 	LPsolve.h: Change all uses.
 
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -48,20 +48,16 @@ Software Foundation, 59 Temple Place - S
 #undef finite
 #define finite(x) ((x) < DBL_MAX && (x) > -DBL_MAX)
 #endif
 
 #ifndef M_LOG10E
 #define M_LOG10E 0.43429448190325182765
 #endif
 
-#ifndef M_PI
-#define M_PI 3.14159265358979323846
-#endif
-
 // double -> double mappers.
 
 double
 arg (double x)
 {
   return atan2 (0.0, x);
 }
 
diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -30,16 +30,20 @@ Software Foundation, 59 Temple Place - S
 #include "dRowVector.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-specfun.h"
 #include "mx-inlines.cc"
 
+#ifndef M_PI
+#define M_PI 3.14159265358979323846
+#endif
+
 extern "C"
 {
   int F77_FUNC (zbesj, ZBESJ) (const double&, const double&,
 			       const double&, const int&, const int&,
 			       double*, double*, int&, int&);
 
   int F77_FUNC (zbesy, ZBESY) (const double&, const double&,
 			       const double&, const int&, const int&,
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,23 @@
+2002-09-26  Paul Kienzle <pkienzle@users.sf.net>
+
+	* pt-bp.cc (tree_breakpoint::visit_unwind_protect_command):
+	Rename lst1 and lst2 to avoid dlgs.h conflict.
+
+	* parse.y: Replace TEXT with STRING to avoid winnt.h conflict.
+	* lex.l: Ditto.
+
+	* sysdep.cc (raw_mode): Non-fatal warning if raw_mode is not
+	supported.
+
+	* sighandlers.cc: Don't define handlers for non-existent signals.
+
+	* utils.cc: Don't include unneeded termio headers.
+
 2002-09-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* BaseSLList.cc, BaseSLList.h, Cell.cc, Cell.h, DLList.cc,
 	DLList.h, Map.cc, Map.h, OPERATORS/op-b-b.cc,
 	OPERATORS/op-bm-b.cc, OPERATORS/op-bm-bm.cc, OPERATORS/op-cell.cc,
 	OPERATORS/op-chm.cc, OPERATORS/op-cm-cm.cc, OPERATORS/op-cm-cs.cc,
 	OPERATORS/op-cm-m.cc, OPERATORS/op-cm-s.cc, OPERATORS/op-cs-cm.cc,
 	OPERATORS/op-cs-cs.cc, OPERATORS/op-cs-m.cc, OPERATORS/op-cs-s.cc,
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -237,17 +237,17 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
     lexer_flags.cant_be_identifier = false;
     lexer_flags.convert_spaces_to_comma = true;
     return '\n';
   }
 
 <TEXT_FCN>[\;\,] {
     if (lexer_flags.doing_set && strcmp (yytext, ",") == 0)
       {
-	TOK_PUSH_AND_RETURN (yytext, TEXT);
+	TOK_PUSH_AND_RETURN (yytext, STRING);
       }
     else
       {
 	BEGIN 0;
 	if (strcmp (yytext, ",") == 0)
 	  TOK_RETURN (',');
 	else
 	  TOK_RETURN (';');
@@ -256,17 +256,17 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 
 <TEXT_FCN>[\"\'] {
     current_input_column++;
     return handle_string (yytext[0], true);
   }
 
 <TEXT_FCN>[^ \t\n\;\,\"\'][^ \t\n\;\,]*{S}* {
     std::string tok = strip_trailing_whitespace (yytext);
-    TOK_PUSH_AND_RETURN (tok, TEXT);
+    TOK_PUSH_AND_RETURN (tok, STRING);
   }
 
 %{
 // For this and the next two rules, we're looking at ']', and we
 // need to know if the next token is `=' or `=='.
 //
 // It would have been so much easier if the delimiters were simply
 // different for the expression on the left hand side of the equals
@@ -2011,17 +2011,17 @@ handle_string (char delim, int text_styl
 		  yylval.tok_val = new token (s, bos_line, bos_col);
 		  token_stack.push (yylval.tok_val);
 
 		  if (delim == '"')
 		    gripe_matlab_incompatible ("\" used as string delimiter");
 		  else if (delim == '\'')
 		    gripe_single_quote_string ();
 
-		  return TEXT;
+		  return STRING;
 		}
 	    }
 	}
       else
 	{
 	  buf << static_cast<char> (c);
 	}
 
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -386,17 +386,17 @@ set_stmt_print_flag (tree_statement_list
 %token <tok_val> LEFTDIV EMUL EDIV ELEFTDIV EPLUS EMINUS
 %token <tok_val> QUOTE TRANSPOSE
 %token <tok_val> PLUS_PLUS MINUS_MINUS POW EPOW
 %token <tok_val> NUM IMAG_NUM
 %token <tok_val> STRUCT_ELT
 %token <tok_val> NAME
 %token <tok_val> END
 %token <tok_val> PLOT
-%token <tok_val> TEXT STYLE AXES_TAG
+%token <tok_val> STRING STYLE AXES_TAG
 %token <tok_val> FOR WHILE DO UNTIL
 %token <tok_val> IF ELSEIF ELSE
 %token <tok_val> SWITCH CASE OTHERWISE
 %token <tok_val> BREAK CONTINUE FUNC_RET
 %token <tok_val> UNWIND CLEANUP
 %token <tok_val> TRY CATCH
 %token <tok_val> GLOBAL STATIC
 
@@ -578,18 +578,18 @@ identifier	: NAME
 		      ($1->sym_rec (), $1->line (), $1->column ());
 		  }
 		;
 
 constant	: NUM
 		  { $$ = make_constant (NUM, $1); }
 		| IMAG_NUM
 		  { $$ = make_constant (IMAG_NUM, $1); }
-		| TEXT
-		  { $$ = make_constant (TEXT, $1); }
+		| STRING
+		  { $$ = make_constant (STRING, $1); }
 		;
 
 in_matrix_or_assign_lhs
 		: // empty
 		  { lexer_flags.looking_at_matrix_or_assign_lhs = true; }
 		;
 
 matrix		: '[' ']'
@@ -848,24 +848,24 @@ assign_expr	: assign_lhs '=' expression
 		| assign_lhs OR_EQ expression
 		  { $$ = make_assign_op (OR_EQ, $1, $2, $3); }
 		;
 
 word_list_cmd	: identifier word_list
 		  { $$ = make_index_expression ($1, $2, '('); }
 		;
 
-word_list	: TEXT
+word_list	: STRING 
 		  {
-		    tree_constant *tmp = make_constant (TEXT, $1);
+		    tree_constant *tmp = make_constant (STRING, $1);
 		    $$ = new tree_argument_list (tmp);
 		  }
-		| word_list TEXT
+		| word_list STRING
 		  {
-		    tree_constant *tmp = make_constant (TEXT, $2);
+		    tree_constant *tmp = make_constant (STRING, $2);
 		    $1->append (tmp);
 		    $$ = $1;
 		  }
 		;
 
 expression	: simple_expr
 		  { $$ = $1; }
 		| word_list_cmd
@@ -1855,17 +1855,17 @@ make_constant (int op, token *tok_val)
     case IMAG_NUM:
       {
 	octave_value tmp (Complex (0.0, tok_val->number ()));
 	retval = new tree_constant (tmp, l, c);
 	retval->stash_original_text (tok_val->text_rep ());
       }
       break;
 
-    case TEXT:
+    case STRING:
       {
 	octave_value tmp (tok_val->text ());
 	retval = new tree_constant (tmp, l, c);
       }
       break;
 
     default:
       panic_impossible ();
diff --git a/src/pt-bp.cc b/src/pt-bp.cc
--- a/src/pt-bp.cc
+++ b/src/pt-bp.cc
@@ -687,24 +687,24 @@ void
 tree_breakpoint::visit_unwind_protect_command (tree_unwind_protect_command& cmd)
 {
   if (found)
     return;
 
   if (cmd.line () >= line)
     take_action (cmd);
 
-  tree_statement_list *lst1 = cmd.body ();
+  tree_statement_list *lstA = cmd.body ();
 
-  if (lst1)
-    lst1->accept (*this);
+  if (lstA)
+    lstA->accept (*this);
 
-  tree_statement_list *lst2 = cmd.cleanup ();
+  tree_statement_list *lstB = cmd.cleanup ();
 
-  if (lst2)
-    lst2->accept (*this);
+  if (lstB)
+    lstB->accept (*this);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -181,16 +181,17 @@ generic_sig_handler (int sig)
 {
   my_friendly_exit (sys_siglist[sig], sig);
 
   SIGHANDLER_RETURN (0);
 }
 
 // Handle SIGCHLD.
 
+#ifdef SIGCHLD
 static RETSIGTYPE
 sigchld_handler (int /* sig */)
 {
   volatile octave_interrupt_handler saved_interrupt_handler
      = octave_ignore_interrupts ();
 
   // I wonder if this is really right, or if SIGCHLD should just be
   // blocked on OS/2 systems the same as for systems with POSIX signal
@@ -240,17 +241,19 @@ sigchld_handler (int /* sig */)
 #endif
 
   MAYBE_ACK_SIGNAL (SIGCHLD);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGCHLD, sigchld_handler);
 
   SIGHANDLER_RETURN (0);
 }
+#endif /* defined(SIGCHLD) */
 
+#ifdef SIGFPE
 #if defined (__alpha__)
 static RETSIGTYPE
 sigfpe_handler (int /* sig */)
 {
   MAYBE_ACK_SIGNAL (SIGFPE);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGFPE, sigfpe_handler);
 
@@ -259,17 +262,18 @@ sigfpe_handler (int /* sig */)
   if (can_interrupt)
     {
       jump_to_top_level ();
       panic_impossible ();
     }
 
   SIGHANDLER_RETURN (0);
 }
-#endif
+#endif /* defined(__alpha__) */
+#endif /* defined(SIGFPE) */
 
 #if 0
 #if defined (SIGWINCH)
 static RETSIGTYPE
 sigwinch_handler (int /* sig */)
 {
   MAYBE_ACK_SIGNAL (SIGWINCH);
 
@@ -303,16 +307,17 @@ sigint_handler (int)
     {
       jump_to_top_level ();
       panic_impossible ();
     }
 
   SIGHANDLER_RETURN (0);
 }
 
+#ifdef SIGPIPE
 static RETSIGTYPE
 sigpipe_handler (int /* sig */)
 {
   MAYBE_ACK_SIGNAL (SIGPIPE);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGPIPE, sigpipe_handler);
 
   if (pipe_handler_error_count++ == 0)
@@ -320,16 +325,17 @@ sigpipe_handler (int /* sig */)
 
   // Don't loop forever on account of this.
 
   if (pipe_handler_error_count  > 100)
     jump_to_top_level ();
 
   SIGHANDLER_RETURN (0);
 }
+#endif /* defined(SIGPIPE) */
 
 octave_interrupt_handler
 octave_catch_interrupts (void)
 {
   octave_interrupt_handler retval;
 
 #ifdef SIGINT
   retval.int_handler = octave_set_signal_handler (SIGINT, sigint_handler);
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -42,18 +42,16 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #if defined (HAVE_TERMIOS_H)
 #include <termios.h>
 #elif defined (HAVE_TERMIO_H)
 #include <termio.h>
 #elif defined (HAVE_SGTTY_H)
 #include <sgtty.h>
-#else
-LOSE! LOSE!
 #endif
 
 #if defined (HAVE_SYS_IOCTL_H)
 #include <sys/ioctl.h>
 #endif
 
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
@@ -297,17 +295,20 @@ raw_mode (bool on, bool wait)
 	// Restore saved modes.
 
 	s = save_term;
       }
 
     ioctl (tty_fd, TIOCSETN, &s);
   }
 #else
-LOSE! LOSE!
+  warning ("no support for raw mode console I/O on this system");
+
+  // Make sure the current mode doesn't toggle.
+  on = curr_on;
 #endif
 
   curr_on = on;
 }
 
 // Read one character from the terminal.
 
 int
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -39,26 +39,16 @@ Software Foundation, 59 Temple Place - S
 #include <unistd.h>
 #endif
 
 // Include setjmp.h, not csetjmp since the latter might only define
 // the ANSI standard C interface.
 
 #include <setjmp.h>
 
-#if defined (HAVE_TERMIOS_H)
-#include <termios.h>
-#elif defined (HAVE_TERMIO_H)
-#include <termio.h>
-#elif defined (HAVE_SGTTY_H)
-#include <sgtty.h>
-#else
-LOSE! LOSE!
-#endif
-
 #include "SLStack.h"
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-sstream.h"
 #include "oct-cmplx.h"
 #include "oct-env.h"
