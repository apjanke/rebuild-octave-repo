# HG changeset patch
# User jwe
# Date 865634891 0
#      Fri Jun 06 22:08:11 1997 +0000
# Node ID d2046ca9a380291cccddb66d398252cba1610355
# Parent  8ec2d00e20e5968ea1f2bebb1524a0db1e89dd07
[project @ 1997-06-06 22:08:11 by jwe]

diff --git a/examples/hello.cc b/examples/hello.cc
--- a/examples/hello.cc
+++ b/examples/hello.cc
@@ -27,23 +27,23 @@
 //   2
 //   3
 //   ans = 3
 
 // Additional examples are available in the files in the src directory
 // of the Octave distribution that use the macro DEFUN_DLD_BUILTIN.
 // Currently, this includes the files
 //
-//   balance.cc  fft.cc      hess.cc     lu.cc       schur.cc
-//   chol.cc	 fft2.cc     ifft.cc     minmax.cc   sort.cc
-//   colloc.cc   filter.cc   ifft2.cc    pinv.cc     svd.cc
-//   dassl.cc    find.cc     inv.cc      qr.cc       syl.cc
-//   det.cc	 fsolve.cc   log.cc      quad.cc
-//   eig.cc	 fsqp.cc     lsode.cc    qzval.cc
-//   expm.cc	 givens.cc   lu.cc       rand.cc
+//   balance.cc  fft.cc      ifft.cc     minmax.cc   sort.cc
+//   chol.cc	 fft2.cc     ifft2.cc    pinv.cc     svd.cc
+//   colloc.cc   filter.cc   inv.cc      qr.cc       syl.cc
+//   dassl.cc    find.cc     log.cc      quad.cc
+//   det.cc	 fsolve.cc   lsode.cc    qzval.cc
+//   eig.cc	 givens.cc   lu.cc       rand.cc
+//   expm.cc	 hess.cc     minmax.cc   schur.cc
 //
 // The difference between DEFUN_DLD and DEFUN_DLD_BUILTIN is that
 // DEFUN_DLD_BUILTIN can define a built-in function that is not
 // dynamically loaded if the operating system does not support dynamic
 // linking.  To define your own dynamically linked functions you
 // should use DEFUN_DLD.
 
 #include <octave/config.h>
diff --git a/scripts/general/perror.m b/scripts/general/perror.m
--- a/scripts/general/perror.m
+++ b/scripts/general/perror.m
@@ -16,21 +16,16 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## usage: perror (name, err)
 ##
 ## Print an error message for error number `err' from function "name".
 ##
-## Messages correspond to the following subroutine versions:
-##
-##   npsol : 4.0
-##   qpsol : 3.2
-##
 ## See also: strerror
 
 ## Author: jwe
 
 function perror (name, err)
 
   if (nargin != 2)
     usage ("perror (name, err)");
diff --git a/scripts/general/strerror.m b/scripts/general/strerror.m
--- a/scripts/general/strerror.m
+++ b/scripts/general/strerror.m
@@ -16,21 +16,16 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## usage: msg = strerror (name, err)
 ##
 ## Return the text of an error message for error number `err' from
 ## function "name".
-##
-## Messages correspond to the following subroutine versions:
-##
-##   npsol : 4.0
-##   qpsol : 3.2
 
 ## Author: jwe
 
 function msg = strerror (name, err)
 
   if (nargin != 2)
     usage ("strerror (name, err)");
   endif
@@ -54,63 +49,15 @@ function msg = strerror (name, err)
     elseif (err == 4)
       msg = "iteration limit exceeded\n";
     elseif (err == 3)
       msg = "iteration is not making good progress\n";
     else
       error ("strerror: unrecognized error code for fsolve");
     endif
 
-  elseif (strcmp (name, "npsol"))
-
-    if (err == 0)
-      msg = "optimal solution found\n";
-    elseif (err == 1)
-      msg = "weak local solution found\n";
-    elseif (err == 2)
-      msg = "no feasible point for linear constraints and bounds\n";
-    elseif (err == 3)
-      msg = "no feasible point found for nonlinear constraints\n";
-    elseif (err == 4)
-      msg = "iteration limit reached\n";
-    elseif (err == 6)
-      msg = "current point cannot be improved upon\n";
-    elseif (err == 7)
-      msg = "user-supplied derivatives appear to be incorrect\n";
-    elseif (err == 9)
-      msg = "internal error: invalid input parameter\n";
-    else
-      error ("strerror: unrecognized error code for npsol");
-    endif
-
-  elseif (strcmp (name, "qpsol"))
-
-    if (err == 0)
-      msg = "optimal solution found\n";
-    elseif (err == 1)
-      msg = "weak local solution found\n";
-    elseif (err == 2)
-      msg = "solution appears to be unbounded\n";
-    elseif (err == 3)
-      msg = "solution appears optimal, but optimality can't be verified\n";
-    elseif (err == 4)
-      msg = "iterates of the QP phase appear to be cycling\n";
-    elseif (err == 5)
-      msg = "iteration limit reached during QP phase\n";
-    elseif (err == 6)
-      msg = "no feasible point found during LP phase\n";
-    elseif (err == 7)
-      msg = "iterates of the LP phase appear to be cycling\n";
-    elseif (err == 8)
-      msg = "iteration limit reached during LP phase\n";
-    elseif (err == 9)
-      msg = "internal error: invalid input parameter\n";
-    else
-      error ("strerror: unrecognized error code for qpsol");
-    endif
-
   else
 
     error ("strerror: unrecognized function name");
 
   endif
 
 endfunction
