# HG changeset patch
# User Jordi Gutiérrez Hermoso <jordigh@gmail.com>
# Date 1299016927 21600
#      Tue Mar 01 16:02:07 2011 -0600
# Node ID 5b1654bc50122174f3fbcfe0a25f13cc83289e5c
# Parent  981cd67960653adea296348f528aeaf8a3a2f3e6
Small FAQ fixes

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -13,17 +13,17 @@ 2011-03-01  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
 	Update other numbers like number of pages in manual, version
 	numbers, dates when things happened, file sizes. Clean out dead
 	links. Remove mentions of bugs@octave.org email address. Don't
 	say you can get Octave tapes from the FSF. Mention Ubuntu as
 	another distribution with Octave packages. Change package names
 	in anticipation for the forthcoming 3.4 binary packages. Explain
 	nested functions. Hint that classdef might happen in 3.5.
 	Mention 3D patches in the OpenGL backend. Clarify Matlab-style
-	short-circuiting.
+	short-circuiting. Specify that Octave also onCleanup.
 
 2010-02-28  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/numbers.txi: Add isrow, iscolumn functions to manual.
 
 2011-02-25  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
 
 	* faq/OctaveFAQ.texi: Uniformise all mentions of Matlab to be
diff --git a/doc/faq/OctaveFAQ.texi b/doc/faq/OctaveFAQ.texi
--- a/doc/faq/OctaveFAQ.texi
+++ b/doc/faq/OctaveFAQ.texi
@@ -531,17 +531,18 @@ end_unwind_protect
 Where @var{body} and @var{cleanup} are both optional and may contain any
 Octave expressions or commands.  The statements in @var{cleanup} are
 guaranteed to be executed regardless of how control exits @var{body}.
 
 The @code{unwind_protect} statement is often used to reliably restore
 the values of global variables that need to be temporarily changed.
 
 @sc{Matlab} can be made to do something similar with their
-@code{OnCleanUp} function that was introduced in 2008a.
+@code{OnCleanUp} function that was introduced in 2008a. Octave also has
+@code{onCleanup} since version 3.4.0.
 
 @node Built-in ODE and DAE solvers
 @section Built-in ODE and DAE solvers
 
 @cindex DASSL
 @cindex LSODE
 
 Octave includes LSODE and DASSL for solving systems of stiff ordinary
@@ -982,17 +983,16 @@ the MEX interface might require copies o
 ones).
 
 @item Block comments
 Block comments denoted by "%@{" and "%@}" markers are supported by
 Octave with some limitations. The major limitation is that block
 comments are not supported within [] or @{@}.
 
 @item Mat-File format
-@c How much of this is still true?
 There are some differences in the mat v5 file format accepted by Octave.
 @sc{Matlab} recently introduced the "-V7.3" save option which is an HDF5
 format which is particularly useful for 64-bit platforms where the
 standard @sc{Matlab} format can not correctly save variables. Octave
 accepts HDF5 files, but is not yet compatible with the "-v7.3" versions
 produced by @sc{Matlab}.
 
 Although Octave can load inline function handles saved by @sc{Matlab},
@@ -1213,17 +1213,19 @@ terminated with block specific terminati
 
 @item
 Octave has a lisp like @code{unwind_protect} block that allows blocks of
 code that terminate in an error to ensure that the variables that are
 touched are restored. You can do something similar with
 @code{try}/@code{catch} combined with @samp{rethrow (lasterror ())} in
 @sc{Matlab}, however rethrow and lasterror are only available in Octave
 2.9.10 and later. @sc{Matlab} 2008a also introduced @code{OnCleanUp}
-that is similar to @code{unwind_protect}.
+that is similar to @code{unwind_protect}, except that the object created
+by this function has to be explicitly cleared in order for the cleanup
+code to run.
 
 Note that using @code{try}/@code{catch} combined with @samp{rethrow
 (lasterror ())} can not guarantee that global variables will be
 correctly reset, as it won't catch user interrupts with Ctrl-C. For
 example
 
 @example
 @group
@@ -1259,17 +1261,17 @@ compared to
     a = _a;
   end
 @end group
 @end example
 
 Typing Ctrl-C in the first case returns the user directly to the
 prompt, and the variable "a" is not reset to the saved value. In the
 second case the variable "a" is reset correctly.  Therefore @sc{Matlab}
-gives no save way of temporarily changing global variables.
+gives no safe way of temporarily changing global variables.
 
 @item
 Indexing can be applied to all objects in Octave and not just
 variable. Therefore @code{sin(x)(1:10);} for example is perfectly valid
 in Octave but not @sc{Matlab}. To do the same in @sc{Matlab} you must do
 @code{y = sin(x); y = y([1:10]);}
 
 @item
