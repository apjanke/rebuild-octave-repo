# HG changeset patch
# User Lukas Reichlin <lukas.reichlin@gmail.com>
# Date 1310080574 14400
#      Thu Jul 07 19:16:14 2011 -0400
# Node ID 0ca5672d5f1ab4be79b7f1c6053e5cbf7e31c253
# Parent  6c1d0f03c33131fa51a88ef3274380fd87f3465e
Implement pkg update command

diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -261,18 +261,19 @@ function [local_packages, global_package
       prefix = fullfile ("~", "octave");
       archprefix = prefix;
     endif
     prefix = tilde_expand (prefix);
     archprefix = tilde_expand (archprefix);
   endif
 
   available_actions = {"list", "install", "uninstall", "load", ...
-                       "unload", "prefix", "local_list", ...
-                       "global_list", "rebuild", "build","describe"};
+                      "unload", "prefix", "local_list", ...
+                       "global_list", "rebuild", "build", ...
+                       "describe", "update"};
   ## Handle input
   if (length (varargin) == 0 || ! iscellstr (varargin))
     print_usage ();
   endif
   files = {};
   deps = true;
   auto = 0;
   action = "none";
@@ -487,16 +488,31 @@ function [local_packages, global_package
           [pkg_desc_list, flag] = describe (files, verbose, local_list, ...
                                             global_list);
           local_packages  = pkg_desc_list;
           global_packages = flag;
         otherwise
           error ("you can request at most two outputs when calling 'pkg describe'");
       endswitch
 
+    case "update"
+      if (nargout == 0)
+        installed_pkgs_lst = installed_packages (local_list, global_list);
+        for i = 1:length (installed_pkgs_lst)
+          installed_pkg_name = installed_pkgs_lst{i}.name;
+          installed_pkg_version = installed_pkgs_lst{i}.version;
+          forge_pkg_version = get_forge_pkg (installed_pkg_name);
+          if (compare_versions (forge_pkg_version, installed_pkg_version, ">"))
+            feval (@pkg, "install", "-forge", installed_pkg_name);
+          endif
+        endfor
+      else
+        error ("no output arguments available");
+      endif
+
     otherwise
       error ("you must specify a valid action for 'pkg'. See 'help pkg' for details");
   endswitch
 endfunction
 
 function descriptions = rebuild (prefix, archprefix, list, files, auto, verbose)
   if (isempty (files))
     [dirlist, err, msg] = readdir (prefix);
