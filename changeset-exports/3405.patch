# HG changeset patch
# User jwe
# Date 947059769 0
#      Wed Jan 05 08:09:29 2000 +0000
# Node ID a020244950f93b44bcd389a370e58a66aca536ea
# Parent  c4ba3cada9cbc3f1dbaab2d403044376b4538d25
[project @ 2000-01-05 08:09:27 by jwe]

diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -1,15 +1,23 @@
 % Copyright (C) 1996, 1997 John W. Eaton
 % This is part of the Octave manual.
 % For copying conditions, see the file gpl.texi.
 
 \input texinfo
 @setfilename octave.info
 
+@c The following macro is used for the on-line help system, but we don't
+@c want lots of `See also: foo, bar, and baz' strings cluttering the
+@c printed manual (that information should be in the supporting text for
+@c each symbol).
+
+@macro seealso {args}
+@end macro
+
 @ifinfo
 @format
 START-INFO-DIR-ENTRY
 * Octave: (octave).	Interactive language for numerical computations.
 END-INFO-DIR-ENTRY
 @end format
 @end ifinfo
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2000-01-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* set/complement.m: Add @seealso{} stuff.
+	* set/create_set.m: Likewise.
+	* set/intersection.m: Likewise.
+	* set/union.m: Likewise.
+
 1999-12-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* control/d2c.m: Use double quotes instead of single quotes for
 	string constants.
 	* control/dgkfdemo.m: Likewise.
 	* control/fir2sys.m: Likewise.
 	* control/frdemo.m: Likewise.
 	* control/moddemo.m: Likewise.
diff --git a/scripts/set/complement.m b/scripts/set/complement.m
--- a/scripts/set/complement.m
+++ b/scripts/set/complement.m
@@ -23,20 +23,20 @@
 ## example,
 ## 
 ## @example
 ## @group
 ## complement ([ 1, 2, 3 ], [ 2, 3, 5 ])
 ##      @result{} 5
 ## @end group
 ## @end example
+##
+## @seealso{create_set, union, and intersection}
 ## @end deftypefn
 
-## See also: create_set, union, intersection
-
 ## Author: jwe
 
 function y = complement (a, b)
 
   if (nargin != 2)
     usage ("complement(a,b)");
   endif
 
diff --git a/scripts/set/create_set.m b/scripts/set/create_set.m
--- a/scripts/set/create_set.m
+++ b/scripts/set/create_set.m
@@ -23,20 +23,20 @@
 ## ascending order.  For example,
 ## 
 ## @example
 ## @group
 ## create_set ([ 1, 2; 3, 4; 4, 2 ])
 ##      @result{} [ 1, 2, 3, 4 ]
 ## @end group
 ## @end example
+##
+## @seealso{union, intersection, and complement}
 ## @end deftypefn
 
-## See also: union, intersection, complement
-
 ## Author: jwe
 
 function y = create_set(x)
 
   if ( nargin != 1)
     usage ("create_set(x)");
   endif
 
diff --git a/scripts/set/intersection.m b/scripts/set/intersection.m
--- a/scripts/set/intersection.m
+++ b/scripts/set/intersection.m
@@ -23,20 +23,20 @@
 ## For example,
 ## 
 ## @example
 ## @group
 ## intersection ([ 1, 2, 3 ], [ 2, 3, 5 ])
 ##      @result{} [ 2, 3 ]
 ## @end group
 ## @end example
+##
+## @seealso{create_set, union, and complement}
 ## @end deftypefn
 
-## See also: create_set, union, complement
-
 ## Author: jwe
 
 function y = intersection(a,b)
 
   if (nargin != 2)
     usage ("intersection(a,b)");
   endif
 
diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -23,20 +23,20 @@
 ## @var{y}.  For example,
 ## 
 ## @example
 ## @group
 ## union ([ 1, 2, 4 ], [ 2, 3, 5 ])
 ##      @result{} [ 1, 2, 3, 4, 5 ]
 ## @end group
 ## @end example
+##
+## @seealso{create_set, intersection, and complement}
 ## @end deftypefn
 
-## See also: create_set, intersection, complement
-
 ## Author: jwe
 
 function y = union(a,b)
 
   if (nargin != 2)
     usage ("union(a,b)");
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2000-01-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* help.cc (display_help_text): Pass a definition for @seealso
+	through the filter.
+
 1999-12-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l (Vwarn_single_quote_string): New variable.
 	(syms_of_lex): DEFVAR it.
 	(warn_single_quote_string): New function.
 	(gripe_single_quote_string): New function.
 	Use new stuff to allow warnings for code that uses single quote
 	characters to introduce string constants.
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -627,16 +627,20 @@ display_help_text (ostream& os, const st
       char *cmd = buf.str ();
 
       oprocstream filter (cmd);
 
       delete [] cmd;
 
       if (filter)
 	{
+	  filter << "@macro seealso {args}\n"
+		 << "See also: \\args\\.\n"
+                 << "@end macro\n";
+
 	  filter << msg.substr (pos+1);
 
 	  filter.close ();
 
 	  ifstream tmp_file (tmp_file_name.c_str ());
 
 	  int c;
 	  while ((c = tmp_file.get ()) != EOF)
