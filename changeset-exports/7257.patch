# HG changeset patch
# User jwe
# Date 1196817522 0
#      Wed Dec 05 01:18:42 2007 +0000
# Node ID e8a3e3e33490b570754122e7a4fe3f70d2d06825
# Parent  be3280acbdb8a3f290f647e8f63cf1d0cf64db2a
[project @ 2007-12-05 01:18:41 by jwe]

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,10 +1,21 @@
 2007-12-04  John W. Eaton  <jwe@octave.org>
 
+	* interpreter/sparseimages.m, interpreter/plotimages.m,
+	interpreter/interpimages.m, interpreter/geometryimages.m:
+	Set default text font to "*" for png images.
+
+	* interpreter/Makefile.in (run-octave): Don't sleep.
+
+2007-12-04  Joseph P. Skudlarek  <Jskud@Jskud.com>
+
+	* interpreter/plotimages.m: Generate text plots.
+	* interpreter/sparseimages.m: Add initial blank line to text plots.
+
 	* interpreter/Makefile.in (IMAGES_TXT): Include $(INTERPIMAGES_TXT)
 	$(GEOMETRYIMAGES_TXT) and $(PLOTIMAGES_TXT) in the list.
 	(INTERPIMAGES_TXT, GEOMETRYIMAGES_TXT, PLOTIMAGES_TXT): New variables.
 
 2007-11-26  David Bateman  <dbateman@free.fr>
 
 	* interpreter/sparse.txi: Document condest.
 	* interpreter/plot.txi: Document the new text properties and the
diff --git a/doc/interpreter/Makefile.in b/doc/interpreter/Makefile.in
--- a/doc/interpreter/Makefile.in
+++ b/doc/interpreter/Makefile.in
@@ -240,21 +240,19 @@ HTML/index.html: $(HTML_IMAGES_PNG) $(TE
 	@if [ -d HTML ]; then \
 	  true; \
 	else \
 	  echo "creating HTML directory"; \
 	  mkdir HTML; \
 	fi
 	cp $(filter-out html-dir, $<) HTML
 
-## Sleep for a second after plotting to allow gnuplot to finish
-## writing its output before Octave exits.
 define run-octave
   $(TOPDIR)/run-octave -f -q -H -p $(srcdir) \
-    --eval "$(notdir $(basename $<)) ('$(notdir $(basename $@))', '$(patsubst .%,%, $(suffix $@))'); sleep (1);"
+    --eval "$(notdir $(basename $<)) ('$(notdir $(basename $@))', '$(patsubst .%,%, $(suffix $@))');"
 endef
 
 $(GEOMETRYIMAGES_EPS) $(GEOMETRYIMAGES_PNG) $(GEOMETRYIMAGES_TXT): geometryimages.m
 	$(run-octave)
 
 $(PLOTIMAGES_EPS) $(PLOTIMAGES_PNG) $(PLOTIMAGES_TXT): plotimages.m
 	$(run-octave)
 
diff --git a/doc/interpreter/geometryimages.m b/doc/interpreter/geometryimages.m
--- a/doc/interpreter/geometryimages.m
+++ b/doc/interpreter/geometryimages.m
@@ -13,16 +13,19 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function geometryimages (nm, typ)
   bury_output ();
+  if (strcmp (typ, "png"))
+    set (0, "defaulttextfontname", "*");
+  endif
   if (isempty (findstr (octave_config_info ("DEFS"), "HAVE_QHULL"))
       && (strcmp (nm, "voronoi") || strcmp (nm, "griddata")
 	  || strcmp (nm, "convhull") || strcmp (nm, "delaunay")
 	  || strcmp (nm, "triplot")))
     sombreroimage (nm, typ);
   elseif (strcmp (nm, "voronoi"))
     rand("state",9);
     x = rand(10,1);
diff --git a/doc/interpreter/interpimages.m b/doc/interpreter/interpimages.m
--- a/doc/interpreter/interpimages.m
+++ b/doc/interpreter/interpimages.m
@@ -13,16 +13,19 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function interpimages (nm, typ)
   bury_output ();
+  if (strcmp (typ, "png"))
+    set (0, "defaulttextfontname", "*");
+  endif
   if (strcmp (nm, "interpft"))
     t = 0 : 0.3 : pi; dt = t(2)-t(1);
     n = length (t); k = 100;
     ti = t(1) + [0 : k-1]*dt*n/k;
     y = sin (4*t + 0.3) .* cos (3*t - 0.1);
     yp = sin (4*ti + 0.3) .* cos (3*ti - 0.1);
     plot (ti, yp, 'g', ti, interp1(t, y, ti, 'spline'), 'b', ...
 	  ti, interpft (y, k), 'c', t, y, 'r+');
diff --git a/doc/interpreter/plotimages.m b/doc/interpreter/plotimages.m
--- a/doc/interpreter/plotimages.m
+++ b/doc/interpreter/plotimages.m
@@ -13,16 +13,19 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function plotimages (nm, typ)
   bury_output ();
+  if (strcmp (typ, "png"))
+    set (0, "defaulttextfontname", "*");
+  endif
   if (strcmp(typ , "txt"))
     image_as_txt(nm);
   elseif (strcmp (nm, "plot"))
     x = -10:0.1:10;
     plot (x, sin (x));
     print (strcat (nm, ".", typ), strcat ("-d", typ))    
   elseif (strcmp (nm, "hist"))
     hist (randn (10000, 1), 30);
diff --git a/doc/interpreter/sparseimages.m b/doc/interpreter/sparseimages.m
--- a/doc/interpreter/sparseimages.m
+++ b/doc/interpreter/sparseimages.m
@@ -12,16 +12,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function sparseimages (nm, typ)
+  if (strcmp (typ, "png"))
+    set (0, "defaulttextfontname", "*");
+  endif
   if (! isempty (findstr (octave_config_info ("DEFS"), "HAVE_COLAMD"))
       && ! isempty (findstr (octave_config_info ("DEFS"), "HAVE_CHOLMOD"))
       && ! isempty (findstr (octave_config_info ("DEFS"), "HAVE_UMFPACK")))
     if (strcmp(typ,"txt"))
       txtimages (nm, 15, typ);
     else
       if (strcmp (nm, "gplot"))
 	gplotimages ("gplot", typ);
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,13 @@
 2007-12-04  John W. Eaton  <jwe@octave.org>
 
+	* plot/__go_draw_axes__.m: Omit "font \"NAME,SIZE\"" in gnuplot
+	text and label commands if font is "*".
+
 	* linear-algebra/krylov.m: Doc fixes.
 	From Marco Caliari <caliari@sci.univr.it>.
 
 2007-12-04  Kai Habel  <kai.habel@gmx.de>
 
 	* plot/shading.m: Use __plt_get_axis_arg__ for optional axes argument.
 	Add "## PKG_ADD: mark_as_command axis" line.
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -69,37 +69,47 @@ function __go_draw_axes__ (h, plot_strea
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", 
 					   have_newer_gnuplot);
-	fprintf (plot_stream, "set title \"%s\" font \"%s,%d\";\n",
-		 undo_string_escapes (tt), f, s);
+	if (strcmp (f, "*"))
+	  fontspec = "";
+	else
+	  fontspec = sprintf ("font \"%s,%d\"", f, s);
+	endif
+	fprintf (plot_stream, "set title \"%s\" %s;\n",
+		 undo_string_escapes (tt), fontspec);
       endif
     endif
 
     if (! isempty (axis_obj.xlabel))
       t = get (axis_obj.xlabel);
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.xcolor);
       if (isempty (t.string))
 	fprintf (plot_stream, "unset xlabel;\n");
 	fprintf (plot_stream, "unset x2label;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
+	if (strcmp (f, "*"))
+	  fontspec = "";
+	else
+	  fontspec = sprintf ("font \"%s,%d\"", f, s);
+	endif
 	if (strcmpi (axis_obj.xaxislocation, "top"))
-	  fprintf (plot_stream, "set x2label \"%s\" %s font \"%s,%d\"",
-		   undo_string_escapes (tt), colorspec, f, s);
+	  fprintf (plot_stream, "set x2label \"%s\" %s %s",
+		   undo_string_escapes (tt), colorspec, fontspec);
 	else
-	  fprintf (plot_stream, "set xlabel \"%s\" %s font \"%s,%d\"",
-		   undo_string_escapes (tt), colorspec, f, s);
+	  fprintf (plot_stream, "set xlabel \"%s\" %s %s",
+		   undo_string_escapes (tt), colorspec, fontspec);
 	endif
 	if (have_newer_gnuplot)
 	  ## Rotation of xlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f", angle);
 	endif
 	fputs (plot_stream, ";\n");
 	if (strcmpi (axis_obj.xaxislocation, "top"))
@@ -115,22 +125,27 @@ function __go_draw_axes__ (h, plot_strea
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.ycolor);
       if (isempty (t.string))
 	fprintf (plot_stream, "unset ylabel;\n");
 	fprintf (plot_stream, "unset y2label;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
+	if (strcmp (f, "*"))
+	  fontspec = "";
+	else
+	  fontspec = sprintf ("font \"%s,%d\"", f, s);
+	endif
 	if (strcmpi (axis_obj.yaxislocation, "right"))
-	  fprintf (plot_stream, "set y2label \"%s\" %s font \"%s,%d\"",
-		   undo_string_escapes (tt), colorspec, f, s);
+	  fprintf (plot_stream, "set y2label \"%s\" %s %s",
+		   undo_string_escapes (tt), colorspec, fontspec);
 	else
-	  fprintf (plot_stream, "set ylabel \"%s\" %s font \"%s,%d\"",
-		   undo_string_escapes (tt), colorspec, f, s);
+	  fprintf (plot_stream, "set ylabel \"%s\" %s %s",
+		   undo_string_escapes (tt), colorspec, fontspec);
 	endif
 	if (have_newer_gnuplot)
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
 	if (strcmpi (axis_obj.yaxislocation, "right"))
 	  fprintf (plot_stream, "unset ylabel;\n");
 	else
@@ -143,18 +158,23 @@ function __go_draw_axes__ (h, plot_strea
       t = get (axis_obj.zlabel);
       angle = t.rotation;
       colorspec = get_text_colorspec (axis_obj.zcolor);
       if (isempty (t.string))
 	fputs (plot_stream, "unset zlabel;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
-	fprintf (plot_stream, "set zlabel \"%s\" %s font \"%s,%d\"",
-		 undo_string_escapes (tt), colorspec, f, s);
+	if (strcmp (f, "*"))
+	  fontspec = "";
+	else
+	  fontspec = sprintf ("font \"%s,%d\"", f, s);
+	endif
+	fprintf (plot_stream, "set zlabel \"%s\" %s %s",
+		 undo_string_escapes (tt), colorspec, fontspec);
 	if (have_newer_gnuplot)
 	  ## Rotation of zlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
@@ -908,16 +928,21 @@ function __go_draw_axes__ (h, plot_strea
 		endif
               endif
             endif
 	  endif
 
 	case "text"
 	  [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string",
 						have_newer_gnuplot);
+	  if (strcmp (f, "*"))
+	    fontspec = "";
+	  else
+	    fontspec = sprintf ("font \"%s,%d\"", f, s);
+	  endif
 	  lpos = obj.position;
 	  halign = obj.horizontalalignment;
 	  angle = obj.rotation;
           units = obj.units;
 	  color = obj.color;
           if (strcmpi (units, "normalized"))
             units = "graph";
           else
@@ -925,24 +950,24 @@ function __go_draw_axes__ (h, plot_strea
           endif
 	  
 	  if (isnumeric (color))
 	    colorspec = get_text_colorspec (color);
 	  endif
 
 	  if (nd == 3)
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %.15g,%.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
+		     "set label \"%s\" at %s %.15g,%.15g,%.15g %s %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units, lpos(1),
-		     lpos(2), lpos(3), f, s, halign, angle, colorspec);
+		     lpos(2), lpos(3), fontspec, halign, angle, colorspec);
 	  else
  	    fprintf (plot_stream,
- 		     "set label \"%s\" at %s %.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
+ 		     "set label \"%s\" at %s %.15g,%.15g %s %s rotate by %f %s;\n",
  		     undo_string_escapes (label), units,
- 		     lpos(1), lpos(2), f, s, halign, angle, colorspec);
+ 		     lpos(1), lpos(2), fontspec, halign, angle, colorspec);
 	  endif
 
 	otherwise
 	  error ("__go_draw_axes__: unknown object class, %s",
 		 obj.type);
       endswitch
 
     endfor
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2007-12-04  John W. Eaton  <jwe@octave.org>
 
+	* src/oct-hist.cc (default_history_file): Use += instead of
+	push_back to append character to std::string object.
+
 	* Makefile.in (LIBDLFCN): Delete all uses.
 
 	* toplev.cc (octave_config_info): Remove LIBDLFCN and
 	DLFCN_INCFLAGS from the list.
 	* oct-conf.h.in (OCTAVE_CONF_DLFCN_INCFLAGS, OCTAVE_CONF_LIBDLFCN):
 	Delete. 
 
 	* error.cc (Ferror): Handle error id.
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -89,17 +89,17 @@ default_history_file (void)
   if (file.empty ())
     {
       std::string home_dir = octave_env::get_home_directory ();
 
       if (! home_dir.empty ())
 	{
 	  file = home_dir;
 	  if (! file_ops::is_dir_sep (file[file.length()-1]))
-	    file.push_back (file_ops::dir_sep_char);
+	    file += file_ops::dir_sep_char;
 	  file.append (".octave_hist");
 	}
       else
 	file = ".octave_hist";
     }
 
   return file;
 }
