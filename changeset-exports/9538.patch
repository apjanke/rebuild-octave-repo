# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1250553138 14400
#      Mon Aug 17 19:52:18 2009 -0400
# Node ID d0239bddf621984fbb94fb4d0fb84679085848d6
# Parent  8f8cb45ad674f83daaef8a55e663c0a33920d3e5
use OCTAVE_CHECK_LIB to check for zlib

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,28 @@
+2009-08-17  John W. Eaton  <jwe@octave.org>
+
+	* mkoctfile.in, mkoctfile.cc.in (FFTW3_LDFLAGS, FFTW3_LIBS,
+	FFTW3F_LDFLAGS, FFTW3F_LIBS): Substitute instead of FFTW_LIBS.
+	(FFTW_LIBS): Define from FFTW3_LDFLAGS, FFTW3_LIBS,
+	FFTW3F_LDFLAGS, and FFTW3F_LIBS variables.
+
+	* octave-bug.cc.in, octave-bug.in (Z_CPPFLAGS, Z_LDFLAGS):
+	Substitute and display them.
+	(Z_LIBS): Rename from ZLIB_LIBS.
+	* configure.in: Use OCTAVE_CHECK_LIBRARY to check for ZLIB.
+	Print Z_CPPFLAGS and Z_LDFLAGS in the summary.
+	* Makeconf.in (Z_CPPFLAGS, Z_LDFLAGS): New variables.
+	(Z_LIBS): Rename from ZLIB_LIBS.
+	(do-subst-config-vals): Substitute them.
+
+	(ALL_CPPFLAGS): New variable.
+	(%.o : %.c, %.o : %.cc, pic/%.o : %.c, pic/%.o : %.cc):
+	Use $(ALL_CPPFLAGS) instead of $(CPPFLAGS) in command.
+
 2009-08-17  John W. Eaton  <jwe@octave.org>
 
 	* octave-bug.in, octave-bug.cc.in: Include AMD_CPPFLAGS,
 	AMD_LDFLAGS, AMD_LIBS, ARPACK_LIBS, BLAS_LIBS, CAMD_CPPFLAGS,
 	CAMD_LDFLAGS, CAMD_LIBS, CARBON_LIBS, CCOLAMD_CPPFLAGS,
 	CCOLAMD_LDFLAGS, CCOLAMD_LIBS, CHOLMOD_CPPFLAGS, CHOLMOD_LDFLAGS,
 	CHOLMOD_LIBS, COLAMD_CPPFLAGS, COLAMD_LDFLAGS, COLAMD_LIBS,
 	CURL_CPPFLAGS, CURL_LDFLAGS, CURL_LIBS, CXSPARSE_CPPFLAGS,
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -224,17 +224,21 @@ FLIBS = @FLIBS@
 
 LIBGLOB = @LIBGLOB@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 
 FT2_LIBS = @FT2_LIBS@
 HDF5_LIBS = @HDF5_LIBS@
-ZLIB_LIBS = @ZLIB_LIBS@
+
+Z_CPPFLAGS = @Z_CPPFLAGS@
+Z_LDFLAGS = @Z_LDFLAGS@
+Z_LIBS = @Z_LIBS@
+
 GRAPHICS_LIBS = @GRAPHICS_LIBS@
 
 QHULL_CPPFLAGS = @QHULL_CPPFLAGS@
 QHULL_LDFLAGS = @QHULL_LDFLAGS@
 QHULL_LIBS = @QHULL_LIBS@
 
 REGEX_LIBS = @REGEX_LIBS@
 BLAS_LIBS = @BLAS_LIBS@
@@ -284,16 +288,18 @@ UMFPACK_LIBS = @UMFPACK_LIBS@
 OPENGL_LIBS = @OPENGL_LIBS@
 QRUPDATE_LIBS = @QRUPDATE_LIBS@
 READLINE_LIBS = @READLINE_LIBS@
 TERM_LIBS = @TERM_LIBS@
 ARPACK_LIBS = @ARPACK_LIBS@
 DL_LIBS = @DL_LIBS@
 LIBS = @LIBS@
 
+ALL_CPPFLAGS = $(CPPFLAGS) $(Z_CPPFLAGS)
+
 ## Use sort to remove duplicates.
 SPARSE_CPPFLAGS = \
   $(sort $(AMD_CPPFLAGS) $(CAMD_CPPFLAGS) $(COLAMD_CPPFLAGS) \
     $(CCOLAMD_CPPFLAGS) $(CHOLMOD_CPPFLAGS) $(CXSPARSE_CPPFLAGS) \
     $(UMFPACK_CPPFLAGS))
 
 ## Use sort to remove duplicates.
 SPARSE_LDFLAGS = \
@@ -458,29 +464,29 @@ NO_OCT_FILE_STRIP = @NO_OCT_FILE_STRIP@
 # GNU make.  If you don't have it, get it!
 
 # How to make .o files:
 
 %.o : %.f
 	$(FC) -c $(ALL_FFLAGS) -o $@ $<
 
 %.o : %.c
-	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $< -o $@
+	$(CC) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) $< -o $@
 
 %.o : %.cc
-	$(CXX) -c $(CPPFLAGS) $(ALL_CXXFLAGS) $< -o $@
+	$(CXX) -c $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $< -o $@
 
 pic/%.o : %.f
 	$(FC) -c $(FPICFLAG) $(ALL_FFLAGS) $< -o $@
 
 pic/%.o : %.c
-	$(CC) -c $(CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o $@
+	$(CC) -c $(ALL_CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o $@
 
 pic/%.o : %.cc
-	$(CXX) -c $(CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o $@
+	$(CXX) -c $(ALL_CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o $@
 
 # Here is a rule for generating dependencies for .cc files:
 
 %.d : %.cc
 	@echo making $@ from $<
 	@rm -f $@
 	@$(CXX) $(DEPEND_FLAGS) $(CPPFLAGS) $(ALL_CXXFLAGS) $< | \
 	  $(SED) \
@@ -656,17 +662,19 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_VERSION%|\"${version}\"|" \
   -e "s|%OCTAVE_CONF_ENABLE_DYNAMIC_LINKING%|\"${ENABLE_DYNAMIC_LINKING}\"|" \
   -e "s|%OCTAVE_CONF_X11_INCFLAGS%|\"${X11_INCFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_X11_LIBS%|\"${X11_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_XTRA_CFLAGS%|\"${XTRA_CFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_XTRA_CXXFLAGS%|\"${XTRA_CXXFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_YACC%|\"${YACC}\"|" \
   -e "s|%OCTAVE_CONF_YFLAGS%|\"${YFLAGS}\"|" \
-  -e "s|%OCTAVE_CONF_ZLIB_LIBS%|\"${ZLIB_LIBS}\"|" \
+  -e "s|%OCTAVE_CONF_Z_CPPFLAGS%|\"${Z_CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_Z_LDFLAGS%|\"${Z_LDFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_Z_LIBS%|\"${Z_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_config_opts%|\"${config_opts}\"|" | \
   $(SED)  -e "s|%OCTAVE_CONF_DEFS%|\"${UGLY_DEFS}\"|" > $@-t
 $(simple-move-if-change-rule)
 endef
 
 define do-subst-default-vals
 echo "making $@ from $<"
 $(SED) < $< > $@-t \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -485,41 +485,23 @@ AC_CHECK_FUNCS(regexec, [using_regex=yes
 if test "$using_regex" = yes; then
   AC_DEFINE(HAVE_REGEX, 1, [Define if regex library is available.])
 fi
 
 AC_SUBST(REGEX_LIBS)
 
 ### Check for ZLIB library.
 
-WITH_ZLIB=true
-AC_ARG_WITH(zlib,
-  [AS_HELP_STRING([--without-zlib], [don't use zlib])],
-  with_zlib=$withval, with_zlib=yes)
-
-zlib_lib=
-if test "$with_zlib" = yes; then
-  zlib_lib="z"
-elif test "$with_zlib" != no; then
-  zlib_lib="$with_zlib"
-fi
+OCTAVE_CHECK_LIBRARY(z, ZLIB,
+  [ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files.],
+  [zlib.h], [gzclearerr])
 
-ZLIB_LIBS=
-WITH_ZLIB=false
-if test -n "$zlib_lib"; then
-  AC_CHECK_LIB($zlib_lib, gzclearerr, [
-    AC_CHECK_HEADERS(zlib.h, [
-      WITH_ZLIB=true
-      ZLIB_LIBS="-l$zlib_lib"
-      AC_DEFINE(HAVE_ZLIB, 1, [Define if ZLIB is available.])])])
-fi
-AC_SUBST(ZLIB_LIBS)
+### Check for HDF5 library.
 
-if $WITH_ZLIB; then
-  ### Check for HDF5 library.
+if $WITH_Z; then
 
   WITH_HDF5=true
   AC_ARG_WITH(hdf5,
     [AS_HELP_STRING([--without-hdf5], [don't use HDF5])],
     with_hdf5=$withval, with_hdf5=yes)
 
   hdf5_lib=
   if test "$with_hdf5" = yes; then
@@ -531,36 +513,33 @@ if $WITH_ZLIB; then
   HDF5_LIBS=
   WITH_HDF5=false
   if test -n "$hdf5_lib"; then
     AC_CHECK_LIB($hdf5_lib, H5Pcreate, [
       AC_CHECK_HEADERS(hdf5.h, [
         WITH_HDF5=true
         HDF5_LIBS="-l$hdf5_lib"
         save_LIBS="$LIBS"
-        LIBS="$HDF5_LIBS $ZLIB_LIBS $LIBS"
+        LIBS="$HDF5_LIBS $Z_LIBS $LIBS"
 	AC_CHECK_LIB($hdf5_lib, H5Gget_num_objs, [
           OCTAVE_HDF5_HAS_REQUIRED_API
           if test $WITH_HDF5; then
             AC_DEFINE(HAVE_HDF5, 1, [Define if HDF5 is available.])
 	    AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])
 	  fi])
         LIBS="$save_LIBS"])])
   fi
 
   if $WITH_HDF5; then
     case "$canonical_host_type" in
       *-*-msdosmsvc)
         OCTAVE_HDF5_DLL
         ;;
     esac
   fi
-else
-  warn_zlib="ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files."
-  AC_MSG_WARN($warn_zlib)
 fi
 AC_SUBST(HDF5_LIBS)
 
 # Subdirectories of libcruft to build if they aren't found on the system:
 FFT_DIR="fftpack"
 AC_SUBST(FFT_DIR)
 
 # Checks for FFTW header and library.
@@ -2098,17 +2077,19 @@ Octave is now configured for $canonical_
   QHULL libraries:      $QHULL_LIBS
   QRUPDATE libraries:   $QRUPDATE_LIBS
   READLINE libraries:   $READLINE_LIBS
   REGEX libraries:      $REGEX_LIBS
   TERM libraries:       $TERM_LIBS
   UMFPACK libraries:    $UMFPACK_LIBS
   X11 include flags:    $X11_INCFLAGS
   X11 libraries:        $X11_LIBS
-  ZLIB libraries:       $ZLIB_LIBS
+  Z CPPFLAGS:           $Z_CPPFLAGS
+  Z LDFLAGS:            $Z_LDFLAGS
+  Z libraries:          $Z_LIBS
 
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT
   Magick config:        $MAGICK_CONFIG
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
diff --git a/mkoctfile.cc.in b/mkoctfile.cc.in
--- a/mkoctfile.cc.in
+++ b/mkoctfile.cc.in
@@ -219,17 +219,20 @@ initialize (void)
 
   vars["RLD_FLAG"] = get_variable ("RLD_FLAG", %OCTAVE_CONF_RLD_FLAG%);
   vars["RDYNAMIC_FLAG"] = get_variable ("RDYNAMIC_FLAG", %OCTAVE_CONF_RDYNAMIC_FLAG%);
   vars["LIBOCTAVE"] = "-loctave";
   vars["LIBOCTINTERP"] = "-loctinterp";
   vars["READLINE_LIBS"] = "-lreadline";
   vars["LIBCRUFT"] = "-lcruft";
   vars["BLAS_LIBS"] = get_variable ("BLAS_LIBS", %OCTAVE_CONF_BLAS_LIBS%);
-  vars["FFTW_LIBS"] = get_variable ("FFTW_LIBS", %OCTAVE_CONF_FFTW_LIBS%);
+  vars["FFTW3_LDFLAGS"] = get_variable ("FFTW3_LDFLAGS", %OCTAVE_CONF_FFTW3_LDFLAGS%);
+  vars["FFTW3_LIBS"] = get_variable ("FFTW3_LIBS", %OCTAVE_CONF_FFTW3_LIBS%);
+  vars["FFTW3F_LDFLAGS"] = get_variable ("FFTW3F_LDFLAGS", %OCTAVE_CONF_FFTW3F_LDFLAGS%);
+  vars["FFTW3F_LIBS"] = get_variable ("FFTW3F_LIBS", %OCTAVE_CONF_FFTW3F_LIBS%);
   vars["LIBS"] = get_variable ("LIBS", %OCTAVE_CONF_LIBS%);
   vars["FLIBS"] = get_variable ("FLIBS", %OCTAVE_CONF_FLIBS%);
   vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_LD_CXX%);
   vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG", %OCTAVE_CONF_LD_STATIC_FLAG%);
   vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LFLAGS);
 
   vars["ALL_FFLAGS"] = vars["FFLAGS"];
@@ -240,16 +243,19 @@ initialize (void)
   vars["ALL_CXXFLAGS"] = vars["INCFLAGS"] + " " + vars["XTRA_CXXFLAGS"]
     + " " + vars["CXXFLAGS"];
 
   vars["ALL_LDFLAGS"] = vars["LD_STATIC_FLAG"] + " " + vars["CPICFLAG"]
     + " " + vars["LDFLAGS"];
 
   vars["OCTAVE_LIBS"] = vars["LIBOCTINTERP"] + " " + vars["LIBOCTAVE"]
     + " " + vars["SPECIAL_MATH_LIB"] + " " + vars["LIBCRUFT"];
+
+  vars["FFTW_LIBS"] = vars["FFTW3_LDFLAGS"] + " " + vars["FFTW3_LIBS"]
+    + " " | vars["FFTW3F_LDFLAGS"] + " " + vars["FFTW3F_LIBS"];
 }
 
 static string usage_msg = "usage: mkoctfile [options] file ...";
 static string version_msg = "mkoctfile, version " + OCTAVE_VERSION;
 static bool debug = false;
 static string help_msg =
 "\n"
 "Options:\n"
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -88,17 +88,20 @@ fi
 
 : ${RLD_FLAG=%OCTAVE_CONF_RLD_FLAG%}
 : ${RDYNAMIC_FLAG=%OCTAVE_CONF_RDYNAMIC_FLAG%}
 : ${LIBOCTAVE=-loctave}
 : ${LIBOCTINTERP=-loctinterp}
 : ${READLINE_LIBS=-lreadline}
 : ${LIBCRUFT=-lcruft}
 : ${BLAS_LIBS=%OCTAVE_CONF_BLAS_LIBS%}
-: ${FFTW_LIBS=%OCTAVE_CONF_FFTW_LIBS%}
+: ${FFTW3_LDFLAGS=%OCTAVE_CONF_FFTW3_LDFLAGS%}
+: ${FFTW3_LIBS=%OCTAVE_CONF_FFTW3_LIBS%}
+: ${FFTW3F_LDFLAGS=%OCTAVE_CONF_FFTW3F_LDFLAGS%}
+: ${FFTW3F_LIBS=%OCTAVE_CONF_FFTW3F_LIBS%}
 : ${LIBS=%OCTAVE_CONF_LIBS%}
 : ${FLIBS=%OCTAVE_CONF_FLIBS%}
 : ${LD_CXX=%OCTAVE_CONF_LD_CXX%}
 : ${LDFLAGS=%OCTAVE_CONF_LDFLAGS%}
 : ${LD_STATIC_FLAG=%OCTAVE_CONF_LD_STATIC_FLAG%}
 : ${LFLAGS=$DEFAULT_LFLAGS}
 
 : ${ALL_FFLAGS="$FFLAGS"}
@@ -108,16 +111,18 @@ fi
 : ${ALL_CXXFLAGS="$INCFLAGS $XTRA_CXXFLAGS $CXXFLAGS"}
 
 : ${ALL_LDFLAGS="$LD_STATIC_FLAG $CPICFLAG $LDFLAGS"}
 
 : ${OCTAVE_LIBS="$LIBOCTINTERP $LIBOCTAVE $SPECIAL_MATH_LIB $LIBCRUFT"}
 
 # Local variables.
 
+FFTW_LIBS="$FFTW3_LDFLAGS $FFTW3_LIBS $FFTW3F_LDFLAGS $FFTW3F_LIBS"
+
 usage_msg="usage: mkoctfile [options] file ..."
 
 version_msg="mkoctfile, version $OCTAVE_VERSION"
 
 cfiles=
 ccfiles=
 f77files=
 objfiles=
diff --git a/octave-bug.cc.in b/octave-bug.cc.in
--- a/octave-bug.cc.in
+++ b/octave-bug.cc.in
@@ -145,17 +145,19 @@ main (int argc, char **argv)
   vars["QHULL_LIBS"] = %QHULL_LIBS%;
   vars["QRUPDATE_LIBS"] = %QRUPDATE_LIBS%;
   vars["READLINE_LIBS"] = %READLINE_LIBS%;
   vars["REGEX_LIBS"] = %REGEX_LIBS%;
   vars["TERM_LIBS"] = %TERM_LIBS%;
   vars["UMFPACK_LIBS"] = %UMFPACK_LIBS%;
   vars["X11_INCFLAGS"] = %X11_INCFLAGS%;
   vars["X11_LIBS"] = %X11_LIBS%;
-  vars["ZLIB_LIBS"] = %ZLIB_LIBS%;
+  vars["Z_CPPFLAGS"] = %Z_CPPFLAGS%;
+  vars["Z_LDFLAGS"] = %Z_LDFLAGS%;
+  vars["Z_LIBS"] = %Z_LIBS%;
 
   vars["DEFS"] = %OCTAVE_CONF_DEFS%;
 
   vars["USER"] = get_env_variable ("LOGNAME");
   if (vars["USER"].empty ())
     vars["USER"] = get_env_variable ("USERNAME");
 
   vars["CC_AND_VERSION"] = (vars["CC"] + ", version" + vars["CC_VERSION"]);
@@ -279,17 +281,19 @@ main (int argc, char **argv)
   os << "QHULL_LIBS:        " << vars["QHULL_LIBS"] << endl;
   os << "QRUPDATE_LIBS:     " << vars["QRUPDATE_LIBS"] << endl;
   os << "READLINE_LIBS:     " << vars["READLINE_LIBS"] << endl;
   os << "REGEX_LIBS:        " << vars["REGEX_LIBS"] << endl;
   os << "TERM_LIBS:         " << vars["TERM_LIBS"] << endl;
   os << "UMFPACK_LIBS:      " << vars["UMFPACK_LIBS"] << endl;
   os << "X11_INCFLAGS:      " << vars["X11_INCFLAGS"] << endl;
   os << "X11_LIBS:          " << vars["X11_LIBS"] << endl;
-  os << "ZLIB_LIBS:         " << vars["ZLIB_LIBS"] << endl;
+  os << "Z_CPPFLAGS:        " << vars["Z_CPPFLAGS"] << endl;
+  os << "Z_LDFLAGS:         " << vars["Z_LDFLAGS"] << endl;
+  os << "Z_LIBS:            " << vars["Z_LIBS"] << endl;
   os << "DEFS:" << endl << vars["DEFS"] << endl;
   os << endl;
 
   if (arg_idx < argc)
     {
       os << endl;
       os << "User-preferences (please do not edit this section):" << endl;
       os << endl;
diff --git a/octave-bug.in b/octave-bug.in
--- a/octave-bug.in
+++ b/octave-bug.in
@@ -97,17 +97,19 @@ QHULL_LDFLAGS=%QHULL_LDFLAGS%
 QHULL_LIBS=%QHULL_LIBS%
 QRUPDATE_LIBS=%QRUPDATE_LIBS%
 READLINE_LIBS=%READLINE_LIBS%
 REGEX_LIBS=%REGEX_LIBS%
 TERM_LIBS=%TERM_LIBS%
 UMFPACK_LIBS=%UMFPACK_LIBS%
 X11_INCFLAGS=%X11_INCFLAGS%
 X11_LIBS=%X11_LIBS%
-ZLIB_LIBS=%ZLIB_LIBS%
+Z_CPPFLAGS=%Z_CPPFLAGS%
+Z_LDFLAGS=%Z_LDFLAGS%
+Z_LIBS=%Z_LIBS%
 
 DEFS=%OCTAVE_CONF_DEFS%
 
 : ${USER=$LOGNAME}
 
 CC_AND_VERSION=
 if test -n "$CC_VERSION"; then
   CC_AND_VERSION="$CC, version $CC_VERSION"
@@ -340,17 +342,19 @@ QHULL_LDFLAGS:     $QHULL_LDFLAGS
 QHULL_LIBS:        $QHULL_LIBS
 QRUPDATE_LIBS:     $QRUPDATE_LIBS
 READLINE_LIBS:     $READLINE_LIBS
 REGEX_LIBS:        $REGEX_LIBS
 TERM_LIBS:         $TERM_LIBS
 UMFPACK_LIBS:      $UMFPACK_LIBS
 X11_INCFLAGS:      $X11_INCFLAGS
 X11_LIBS:          $X11_LIBS
-ZLIB_LIBS:         $ZLIB_LIBS
+Z_CPPFLAGS:        $Z_CPPFLAGS
+Z_LDFLAGS:         $Z_LDFLAGS
+Z_LIBS:            $Z_LIBS
 DEFS:
 
 EOF
 
 if $HAVE_FMT; then
   echo $DEFS | fmt | $SED 's/^/  /' >> $TEMP
 else
   echo $DEFS >> $TEMP
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-08-17  John W. Eaton  <jwe@octave.org>
+
+	* oct-conf.h.in: New #defines for ZLIB_CPPFLAGS and ZLIB_LDFLAGS.
+	* toplev.cc (octave_config_info): Include them in the list.
+
 2009-08-17  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (OCTINTERP_LINK_DEPS): Include FFTW_LDFLAGS,
 	FFTW_LIBS and READLINE_LIBS in the list.
 	(OCTAVE_LIBS): Attempt to include all necessary dependencies for
 	static linking.
 
 2009-08-17  John W. Eaton  <jwe@octave.org>
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -281,17 +281,27 @@ DEF_4 := $(addprefix $(srcdir)/, $(SOURC
 DEF_3 := $(notdir $(shell egrep -l $(DEFUN_PATTERN) $(DEF_4)))
 DEF_2 := $(patsubst %.y, %.df, $(DEF_3))
 DEF_1 := $(patsubst %.l, %.df, $(DEF_2))
 DEF_FILES := $(patsubst %.cc, %.df, $(DEF_1)) $(DLD_DEF_FILES)
 
 DOC_FILES := $(sort $(DEF_FILES))
 
 ifeq ($(ENABLE_DYNAMIC_LINKING), true)
-  OCTAVE_LIBS = $(LIBOCTINTERP)
+  OCTAVE_LIBS = -L. $(LIBOCTINTERP) \
+    -L../liboctave $(LIBOCTAVE) \
+    -L../libcruft $(LIBCRUFT) \
+    $(FFTW_LDFLAGS) $(FFTW_LIBS) \
+    $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
+    $(FT2_LDFLAGS) $(FT2_LIBS) \
+    $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
+    $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
+    $(READLINE_LIBS) $(TERM_LIBS) \
+    $(LIBGLOB) \
+    $(LIBS)
 else
   ## FIXME -- this list is probably not complete now.  It may not even
   ## be possible to build a statically linked copy of Octave that is
   ## fully functional.
   OCTAVE_LIBS = -L. $(LIBOCTINTERP) \
     -L../liboctave $(LIBOCTAVE) \
     -L../libcruft $(LIBCRUFT) \
     $(FFTW_LDFLAGS) $(FFTW_LIBS)
@@ -301,27 +311,27 @@ else
     $(SPARSE_LDFLAGS) $(SPARSE_LIBS) \
     $(BLAS_LIBS) \
     $(REGEX_LDFLAGS) $(REGEX_LIBS) \
     $(CURL_LDFLAGS) $(CURL_LIBS) \
     $(GLPK_LDFLAGS) $(GLPK_LIBS) \
     $(MAGICK_LIBS) \
     $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
     $(FT2_LDFLAGS) $(FT2_LIBS) \
-    $(HDF5_LIBS) $(ZLIB_LIBS) \
+    $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
     $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
     $(READLINE_LIBS) $(TERM_LIBS) \
     $(LIBPLPLOT) $(LIBGLOB) \
     $(LIBS)
 endif
 
 OCTINTERP_LINK_DEPS = $(RLD_FLAG) -L../liboctave $(LIBOCTAVE) \
   -L../libcruft $(LIBCRUFT) \
   $(FFTW_LDFLAGS) $(FFTW_LIBS) \
-  $(HDF5_LIBS) $(ZLIB_LIBS) \
+  $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
   $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
   $(READLINE_LIBS) \
   $(LIBS)
 
 OCT_LINK_DEPS = $(RLD_FLAG) -L. $(LIBOCTINTERP) \
   -L../liboctave $(LIBOCTAVE) \
   -L../libcruft $(LIBCRUFT)
 
@@ -385,18 +395,17 @@ libraries: $(LIBRARIES)
 $(SHLPRE)octinterp.$(SHLEXT): $(PICOBJ) $(PIC_XERBLA)
 	rm -f $@
 	$(SH_LD) $(SH_LDFLAGS) $(LDFLAGS) $(SONAME_FLAGS) -o $@ $^ $(OCTINTERP_LINK_DEPS)
 
 octave$(EXEEXT): $(LIBRARIES) main.o $(DLD_STATIC_OBJ)
 	$(LD_CXX) $(CPPFLAGS) $(ALL_CXXFLAGS) $(RDYNAMIC_FLAG) \
 	$(ALL_LDFLAGS) -o $@ main.o $(DLD_STATIC_OBJ) \
 	$(RLD_FLAG) \
-	-L. $(LIBOCTINTERP) -L../liboctave $(LIBOCTAVE) \
-	-L../libcruft $(LIBCRUFT)
+	$(OCTAVE_LIBS)
 
 stmp-pic: pic
 	@if [ -f stmp-pic ]; then \
 	  true; \
 	else \
 	  echo "touch stmp-pic"; \
 	  touch stmp-pic; \
 	fi
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -492,18 +492,26 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_YACC
 #define OCTAVE_CONF_YACC %OCTAVE_CONF_YACC%
 #endif
 
 #ifndef OCTAVE_CONF_YFLAGS
 #define OCTAVE_CONF_YFLAGS %OCTAVE_CONF_YFLAGS%
 #endif
 
-#ifndef OCTAVE_CONF_ZLIB_LIBS
-#define OCTAVE_CONF_ZLIB_LIBS %OCTAVE_CONF_ZLIB_LIBS%
+#ifndef OCTAVE_CONF_Z_CPPFLAGS
+#define OCTAVE_CONF_Z_CPPFLAGS %OCTAVE_CONF_Z_CPPFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_Z_LDFLAGS
+#define OCTAVE_CONF_Z_LDFLAGS %OCTAVE_CONF_Z_LDFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_Z_LIBS
+#define OCTAVE_CONF_Z_LIBS %OCTAVE_CONF_Z_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_config_opts
 #define OCTAVE_CONF_config_opts %OCTAVE_CONF_config_opts%
 #endif
 
 #endif
 
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1299,17 +1299,19 @@ specified option.\n\
       { false, "UMFPACK_LIBS", OCTAVE_CONF_UMFPACK_LIBS },
       { false, "USE_64_BIT_IDX_T", OCTAVE_CONF_USE_64_BIT_IDX_T },
       { false, "X11_INCFLAGS", OCTAVE_CONF_X11_INCFLAGS },
       { false, "X11_LIBS", OCTAVE_CONF_X11_LIBS },
       { false, "XTRA_CFLAGS", OCTAVE_CONF_XTRA_CFLAGS },
       { false, "XTRA_CXXFLAGS", OCTAVE_CONF_XTRA_CXXFLAGS },
       { false, "YACC", OCTAVE_CONF_YACC },
       { false, "YFLAGS", OCTAVE_CONF_YFLAGS },
-      { false, "ZLIB_LIBS", OCTAVE_CONF_ZLIB_LIBS },
+      { false, "Z_CPPFLAGS", OCTAVE_CONF_Z_CPPFLAGS },
+      { false, "Z_LDFLAGS", OCTAVE_CONF_Z_LDFLAGS },
+      { false, "Z_LIBS", OCTAVE_CONF_Z_LIBS },
       { false, "api_version", OCTAVE_API_VERSION },
       { true, "archlibdir", OCTAVE_ARCHLIBDIR },
       { true, "bindir", OCTAVE_BINDIR },
       { false, "canonical_host_type", OCTAVE_CANONICAL_HOST_TYPE },
       { false, "config_opts", OCTAVE_CONF_config_opts },
       { true, "datadir", OCTAVE_DATADIR },
       { true, "datarootdir", OCTAVE_DATAROOTDIR },
       { true, "exec_prefix", OCTAVE_EXEC_PREFIX },
