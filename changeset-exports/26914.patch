# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1552606601 25200
#      Thu Mar 14 16:36:41 2019 -0700
# Node ID b09941690b651ab74146abe855a941136c7e72bf
# Parent  8efea0dcccd4360123253560eeb1396fc589368c
edit.m: allow HOME to be empty, only use if set and exists (bug #41278)

* edit.m: Allow HOME to be set to empty to disable using it.  Only use HOME
if it is not empty, it exists, and EDITINPLACE is false.  Prefer "chdir"
instead of "cd" for clarity.  Defer tilde expansion until HOME directory is
needed.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -160,19 +160,16 @@ function retval = edit (varargin)
     ## so first check for the various states
     statevar = varargin{1};
     stateval = varargin{2};
     switch (toupper (statevar))
       case "EDITOR"
         error ("Octave:deprecated-function",
                "The EDITOR option of edit has been removed.  Use EDITOR() directly.");
       case "HOME"
-        if (! isempty (stateval) && stateval(1) == "~")
-          stateval = [ get_home_directory, stateval(2:end) ];
-        endif
         FUNCTION.HOME = stateval;
         return;
       case "AUTHOR"
         FUNCTION.AUTHOR = stateval;
         return;
       case "EMAIL"
         FUNCTION.EMAIL = stateval;
         return;
@@ -213,25 +210,33 @@ function retval = edit (varargin)
   elseif (nargin > 2)
     if (iscellstr (varargin))
       editfilelist = varargin;
     else
       error ("edit: if supplying more than one input all inputs must be strings containing field names to open.");
     endif
   endif
 
+  ## Only use the legacy "HOME" directory if the user explicitly configured
+  ## it and if the directory exists.  In previous versions of Octave, HOME
+  ## was ~/octave by default and edited functions were copied into ~/octave.
+  ## Now 'edit_file_in_place' should be true by default unless the user
+  ## opts in by setting "EDITINPLACE" to false and "HOME" to a directory.
+  edit_file_in_place = (FUNCTION.EDITINPLACE || isempty (FUNCTION.HOME)
+                        || ! isfolder (FUNCTION.HOME));
+
   ## Start the editor without a file if no file is given.
   if (nargin == 0)
-    if (isfolder (FUNCTION.HOME))
+    if (! edit_file_in_place && ! strcmp (FUNCTION.HOME, "."))
       curr_dir = pwd ();
       unwind_protect
-        cd (FUNCTION.HOME);
+        chdir (FUNCTION.HOME);
         do_edit (FUNCTION.EDITOR, "", FUNCTION.MODE);
       unwind_protect_cleanup
-        cd (curr_dir);
+        chdir (curr_dir);
       end_unwind_protect
     else
       do_edit (FUNCTION.EDITOR, "", FUNCTION.MODE);
     endif
     return;
   endif
 
   if (numel (editfilelist) > 1)
@@ -302,27 +307,28 @@ function retval = edit (varargin)
         ## The path is explicitly included.
         fileandpath = filetoedit;
         break;
       endif
     endfor
 
     if (! isempty (fileandpath))
       ## If the file exists, then edit it.
-      if (FUNCTION.EDITINPLACE)
+      if (edit_file_in_place)
         ## Edit in place even if it is protected.
         do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
         return;
       else
         ## If the file is modifiable in place then edit it,
         ## otherwise make a copy in HOME and then edit it.
         fid = fopen (fileandpath, "r+t");
         if (fid < 0)
           from = fileandpath;
-          fileandpath = [FUNCTION.HOME, from(rindex(from, filesep):end)];
+          [~, fname, ext] = fileparts (from);
+          fileandpath = fullfile (tilde_expand (FUNCTION.HOME), [fname, ext]);
           [status, msg] = copyfile (from, fileandpath, 1);
           if (status == 0)
             error (msg);
           endif
         else
           fclose (fid);
         endif
         do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
