# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368601682 14400
#      Wed May 15 03:08:02 2013 -0400
# Node ID d68e72ee28bf6ef4e582a651554cf877226b2514
# Parent  789d2376db2d93e8ee5021bb42365759a1c38f13
remove instructions for building dev sources from manual

* contrib.txi: Point to the get-involved page on the web for
instructions for building from the development sources.

diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -42,91 +42,19 @@ development of Octave core, i.e., code t
 You may consider developing and publishing a package instead; a great
 place for this is the allied Octave-Forge project
 (@url{http://octave.sourceforge.net}).  Note that the Octave project is
 inherently more conservative and follows narrower rules.
 
 @node Building the Development Sources
 @section Building the Development Sources
 
-In addition to all the tools (both optional and required) that are
-listed in @ref{Build Dependencies} you will need Mercurial, a
-distributed version control system (@url{http://mercurial.selenic.com}).
-Octave's sources are stored in a Mercurial archive.
-
-Once you have the required tools installed, you can build Octave by
-doing
-
-@itemize @bullet
-@item
-Check out a copy of the Octave sources:
-
-@example
-hg clone http://www.octave.org/hg/octave
-@end example
-
-@item
-Change to the top-level directory of the newly checked out sources:
-
-@example
-cd octave
-@end example
-
-@item
-Generate the necessary configuration files:
-
-@example
-./bootstrap
-@end example
-
-@item
-Create a build directory and change to it:
-
-@example
-@group
-mkdir build
-cd build
-@end group
-@end example
-
-By using a separate build directory, you will keep the source directory
-clean and it will be easy to completely remove all files generated by
-the build.  You can also have parallel build trees for different
-purposes that all share the same sources.  For example, one build tree
-may be configured to disable compiler optimization in order to allow for
-easier debugging while another may be configured to test building with
-other specialized compiler flags.
-
-@item
-Run Octave's configure script from the build directory:
-
-@example
-../configure
-@end example
-
-@item
-Run make in the build directory:
-
-@example
-make
-@end example
-
-@end itemize
-
-Once the build is finished, you will see a message like the following:
-
-@example
-@group
-Octave successfully built.  Now choose from the following:
-
-   ./run-octave    - to run in place to test before installing
-   make check      - to run the tests
-   make install    - to install (PREFIX=...)
-@end group
-@end example
+The directions for building from the Development sources change from
+time to time, so you should read the resources for developers.  Start
+here: @url{http://www.octave.org/get-involved.html}.
 
 @node Basics of Generating a Changeset
 @section Basics of Generating a Changeset
 
 The preferable form of contribution is creating a Mercurial changeset
 and submit it to the @uref{http://savannah.gnu.org/bugs/?group=octave, bug} or
 @uref{http://savannah.gnu.org/patch/?func=additem&group=octave, patch}
 trackers@footnote{Please use the patch tracker only for patches which add new
