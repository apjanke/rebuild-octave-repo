# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1467206510 14400
#      Wed Jun 29 09:21:50 2016 -0400
# Node ID 03c692adf563b2761e4bfce36f5e621cabcdbfad
# Parent  80659e58609f279d588f08f5bd58df4e07e878ed
maint: strip trailing whitespace from files.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -1397,17 +1397,17 @@ The default is 4096, or a value dependen
 A value of 1 or true instructs @code{textscan} to concatenate consecutive
 columns of the same class in the output cell array.  A value of 0 or false
 (default) leaves output in distinct columns.
 
 @item @qcode{"CommentStyle"}
 Specify parts of the input which are considered comments and will be
 skipped.  @var{value} is the comment style and can be either (1) A string
 or 1x1 cell string, to skip everything to the right of it; (2) A cell array
-of two strings, to skip everything between the first and second strings.  
+of two strings, to skip everything between the first and second strings.
 Comments are only parsed where whitespace is accepted and do not act as
 delimiters.
 
 @item @qcode{"Delimiter"}
 If @var{value} is a string, any character in @var{value} will be used to
 split the input into words.  If @var{value} is a cell array of strings,
 any string in the array will be used to split the input into words.
 (default value = any whitespace.)
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3404,17 +3404,17 @@ public:
       radio_property paperunits Su , "{inches}|centimeters|normalized|points"
       radio_property pointer , "crosshair|fullcrosshair|{arrow}|ibeam|watch|topl|topr|botl|botr|left|top|right|bottom|circle|cross|fleur|custom|hand"
       array_property pointershapecdata , Matrix (16, 16, 0)
       array_property pointershapehotspot , Matrix (1, 2, 0)
       array_property position s , default_figure_position ()
       radio_property renderer m , "{opengl}|painters"
       radio_property renderermode , "{auto}|manual"
       bool_property resize , "on"
-      // FIXME: resizefcn has been deprecated by Matlab, and 
+      // FIXME: resizefcn has been deprecated by Matlab, and
       //        replaced with sizechangedfcn
       //        Eventually this will need to be hidden, and then removed.
       callback_property resizefcn , Matrix ()
       radio_property selectiontype , "{normal}|extend|alt|open"
       callback_property sizechangedfcn , Matrix ()
       radio_property toolbar , "{auto}|figure|none"
       radio_property units Su , "{pixels}|normalized|inches|centimeters|points|characters"
       callback_property windowbuttondownfcn , Matrix ()
@@ -3434,17 +3434,17 @@ public:
       radio_property __mouse_mode__ hS , "{none}|pan|rotate|select|text|zoom"
       any_property __pan_mode__ h , Matrix ()
       any_property __plot_stream__ h , Matrix ()
       any_property __rotate_mode__ h , Matrix ()
       any_property __zoom_mode__ h , Matrix ()
 
       // Obsolete properties: doublebuffer, mincolormap, wvisual, wvisualmode,
       //                      xdisplay, xvisual, xvisualmode
-      // FIXME: Remove in version 4.6 
+      // FIXME: Remove in version 4.6
       bool_property doublebuffer h , "on"
       double_property mincolormap h , 64
       string_property wvisual hm , ""
       radio_property wvisualmode h , "{auto}|manual"
       string_property xdisplay h , ""
       string_property xvisual hm , ""
       radio_property xvisualmode h , "{auto}|manual"
     END_PROPERTIES
diff --git a/libinterp/corefcn/load-path.cc b/libinterp/corefcn/load-path.cc
--- a/libinterp/corefcn/load-path.cc
+++ b/libinterp/corefcn/load-path.cc
@@ -2460,17 +2460,17 @@ addpath ("dir1:/dir2:~/dir3")
 
       if (! append)
         std::reverse (dir_elts.begin (), dir_elts.end ());
 
       for (const auto& p : dir_elts)
         {
           std::string dir = p;
 
-          // Remove duplicate directory separators 
+          // Remove duplicate directory separators
           dir.erase (std::unique (dir.begin (), dir.end (),
                                   [](char l, char r)
                                   {
                                     return l == r &&
                                            octave::sys::file_ops::is_dir_sep (l);
                                   }),
                      dir.end ());
 
diff --git a/libinterp/corefcn/sighandlers.cc b/libinterp/corefcn/sighandlers.cc
--- a/libinterp/corefcn/sighandlers.cc
+++ b/libinterp/corefcn/sighandlers.cc
@@ -591,17 +591,17 @@ set_sig_struct_field (octave_scalar_map&
 {
   int signum;
 
   // The names in the struct do not include the leading "SIG" prefix.
 
   if (octave_get_sig_number (signame, &signum))
     m.assign (&signame[3], signum);
 }
- 
+
 static octave_scalar_map
 make_sig_struct (void)
 {
   octave_scalar_map m;
 
   set_sig_struct_field (m, "SIGABRT");
   set_sig_struct_field (m, "SIGALRM");
   set_sig_struct_field (m, "SIGBUS");
diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -1871,44 +1871,44 @@ Undocumented internal function.
 
       retval = ovl (buf.str ());
     }
 
   return retval;
 }
 
 // FIXME: should we have functions like this in Octave?
-// 
+//
 // DEFUN (set_variable, args, , "set_variable (NAME, VALUE)")
 // {
 //   if (args.length () != 2)
 //     print_usage ();
-// 
+//
 //   std::string name = args(0).xstring_value ("set_variable: variable NAME must be a string");
-// 
+//
 //   symbol_table::assign (name, args(1));
-// 
+//
 //   return ovl ();
 // }
-// 
+//
 // DEFUN (variable_value, args, , "VALUE = variable_value (NAME)")
 // {
 //   if (args.length () != 1)
 //     print_usage ();
-// 
+//
 //   octave_value retval;
-// 
+//
 //   std::string name = args(0).xstring_value ("variable_value: variable NAME must be a string");
-// 
+//
 //   retval = symbol_table::varval (name);
-// 
+//
 //   if (retval.is_undefined ())
 //     error ("variable_value: '%s' is not a variable in the current scope",
 //            name.c_str ());
-// 
+//
 //   return retval;
 // }
 
 /*
 bug #34497: 'clear -f' does not work for command line functions
 
 This test relies on bar being a core function that is implemented in an m-file.
 If the first assert fails, this is no longer the case and the tests need to be
diff --git a/liboctave/wrappers/signal-wrappers.h b/liboctave/wrappers/signal-wrappers.h
--- a/liboctave/wrappers/signal-wrappers.h
+++ b/liboctave/wrappers/signal-wrappers.h
@@ -35,17 +35,17 @@ extern "C" {
 
 typedef void octave_sig_handler (int);
 
 extern int octave_kill_wrapper (pid_t pid, int signum);
 
 extern char *octave_strsignal_wrapper (int signum);
 
 extern bool octave_have_kill (void);
-  
+
 extern bool octave_get_sig_number (const char *signame, int *signum);
 
 extern octave_sig_handler *
 octave_set_signal_handler_by_name (const char *signame,
                                    octave_sig_handler *handler,
                                    bool restart_syscalls);
 
 octave_sig_handler *
