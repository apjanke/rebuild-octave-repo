# HG changeset patch
# User Branden Archer <b.m.archer4@gmail.com>
# Date 1395276399 14400
#      Wed Mar 19 20:46:39 2014 -0400
# Branch stable
# Node ID 53ba52143af737bd188802d3cefd63b87b1ef5aa
# Parent  fe1cdc40579cb66973a7cdb5326b8f705107158a
Fix dead assignment in oct-rand.cc do_float_scalar (bug #41827).

* oct-rand.cc (do_float_scalar): Correctly assign temporary output to dretval.

diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -1,15 +1,16 @@
 Ben Abbott
 Andy Adler
 Adam H. Aitkenhead
 Giles Anderson
 Joel Andersson
 Muthiah Annamalai
 Markus Appel
+Branden Archer
 Marco Atzeri
 Shai Ayal
 Roger Banks
 Ben Barrowes
 Alexander Barth
 David Bateman
 Heinz Bauschke
 Julien Bect
diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -846,16 +846,21 @@ classes.\n\
 %!test
 %! ## Test fixed seed
 %! randg ("seed", 1);
 %! assert (randg (10, 1, 6), [6.566435813903809 10.11648464202881 10.73162078857422 7.747178077697754 6.278522491455078 6.240195751190186], 1e-5);
 %!test
 %! ## Test fixed seed
 %! randg ("seed", 1);
 %! assert (randg (100, 1, 6), [89.40208435058594 101.4734725952148 103.4020004272461 93.62763214111328 88.33104705810547 88.1871337890625], 1e-4);
+%!test
+%! ## Test out-of-bounds values produce NaN w/old-style generators & floats
+%! randg ("seed", 1);
+%! result = randg ([-2 Inf], "single");
+%! assert (result, [NaN NaN]);
 
 %!test
 %! if (__random_statistical_tests__)
 %!   ## statistical tests may fail occasionally.
 %!   randg ("state", 12);
 %!   a = 0.1;
 %!   x = randg (a, 100000, 1);
 %!   assert (mean (x),     a,          0.01);
diff --git a/liboctave/numeric/oct-rand.cc b/liboctave/numeric/oct-rand.cc
--- a/liboctave/numeric/oct-rand.cc
+++ b/liboctave/numeric/oct-rand.cc
@@ -450,17 +450,17 @@ octave_rand::do_float_scalar (float a)
               // workaround bug in ignpoi, by calling with different Mu
               F77_FUNC (dignpoi, DIGNPOI) (da + 1, dretval);
               F77_FUNC (dignpoi, DIGNPOI) (da, dretval);
             }
           break;
 
         case gamma_dist:
           if (da <= 0.0 || ! xfinite (a))
-            retval = octave_NaN;
+            dretval = octave_NaN;
           else
             F77_FUNC (dgengam, DGENGAM) (1.0, da, dretval);
           break;
 
         default:
           (*current_liboctave_error_handler)
             ("rand: invalid distribution ID = %d", current_distribution);
           break;
