# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1458011542 14400
#      Mon Mar 14 23:12:22 2016 -0400
# Node ID 06a2f9245a11ffc0352a10b0c26337b8dbfeddc6
# Parent  ac1e50cfc9ed646ad6b0c136d2ad7f30f59d781f
avoid possible memory leak in idx_vector_rep constructor (bug #47372)

* idx-vector.cc (idx_vector::idx_vector_rep::idx_vector_rep):
Wrap pointer to allocated memory in std::unique_vector object.

diff --git a/liboctave/array/idx-vector.cc b/liboctave/array/idx-vector.cc
--- a/liboctave/array/idx-vector.cc
+++ b/liboctave/array/idx-vector.cc
@@ -298,23 +298,22 @@ idx_vector::idx_scalar_rep::as_array (vo
 
 
 template <typename T>
 idx_vector::idx_vector_rep::idx_vector_rep (const Array<T>& nda)
   : data (0), len (nda.numel ()), ext (0), aowner (0), orig_dims (nda.dims ())
 {
   if (len != 0)
     {
-      octave_idx_type *d = new octave_idx_type [len];
+      std::unique_ptr<octave_idx_type []> d (new octave_idx_type [len]);
+
       for (octave_idx_type i = 0; i < len; i++)
         d[i] = convert_index (nda.xelem (i), err, ext);
-      data = d;
 
-      if (err)
-        delete [] data;
+      data = d.release ();
     }
 }
 
 // Note that this makes a shallow copy of the index array.
 
 idx_vector::idx_vector_rep::idx_vector_rep (const Array<octave_idx_type>& inda)
   : data (inda.data ()), len (inda.numel ()), ext (0),
     aowner (new Array<octave_idx_type> (inda)), orig_dims (inda.dims ())
