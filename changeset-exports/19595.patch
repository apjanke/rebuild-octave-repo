# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1421765009 18000
#      Tue Jan 20 09:43:29 2015 -0500
# Branch gui-release
# Node ID be7ac98fab43e2cae6d174437bb8840f5f014fa7
# Parent  fe689210525c318816ffadfd8e8adf202667788c
strip trailing whitespace from most source files

* NEWS, etc/NEWS.3, libgui/graphics/Backend.h,
libgui/graphics/ButtonControl.h, libgui/graphics/EditControl.cc,
libgui/graphics/Object.h, libgui/graphics/QtHandlesUtils.cc,
libgui/graphics/ToolBarButton.h, libgui/graphics/__init_qt__.cc,
libgui/graphics/gl-select.cc,
libgui/qterminal/libqterminal/unix/TerminalView.cpp,
libgui/qterminal/libqterminal/unix/TerminalView.h,
libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp,
libgui/src/m-editor/file-editor-tab.cc,
libgui/src/m-editor/file-editor.cc, libgui/src/m-editor/file-editor.h,
libgui/src/m-editor/octave-qscintilla.cc,
libgui/src/settings-dialog.cc, libgui/src/shortcut-manager.cc,
libgui/src/workspace-view.cc, libinterp/corefcn/graphics.cc,
libinterp/corefcn/input.cc, libinterp/parse-tree/pt-unop.cc,
liboctave/array/dSparse.h, scripts/pkg/pkg.m,
scripts/polynomial/polyeig.m, test/io.tst: Strip trailing whitespace.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -28,30 +28,30 @@ Summary of important user-visible change
  ** Other new functions added in 4.0.0:
 
     validateattributes
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.6 and have been
     removed from Octave 4.0.
-                                           
-      cut                polyderiv        
-      cor                shell_cmd        
-      corrcoef           studentize       
-      __error_text__     sylvester_matrix 
-      error_text         
+
+      cut                polyderiv
+      cor                shell_cmd
+      corrcoef           studentize
+      __error_text__     sylvester_matrix
+      error_text
 
     The following functions have been deprecated in Octave 4.0 and will
     be removed from Octave 4.4 (or whatever version is the second major
     release after 4.0):
 
       allow_noninteger_range_as_index
       do_braindead_shortcircuit_evaluation
-      
+
     The internal function atan2 of the sparse matrix class has been deprecated
     in Octave 4.0 and will be removed from Octave 4.4 (or whatever version is
     the second major release after 4.0).  Use the Fatan2 function with sparse
     inputs as a replacement.
 
 ---------------------------------------------------------
 
 See NEWS.3 for old news.
diff --git a/etc/NEWS.3 b/etc/NEWS.3
--- a/etc/NEWS.3
+++ b/etc/NEWS.3
@@ -58,17 +58,17 @@ Summary of important user-visible change
     within the body of another function.  The nested function is only
     accessible from within the enclosing function which makes it one
     method for making private functions whose names do not conflict with those
     in the global namespace (See also subfunctions and private functions).
     In addition, variables in the enclosing function are visible within the
     nested function.  This makes it possible to have a pseudo-global variable
     which can be seen by a group of functions, but which is not visible in
     the global namespace.
-    
+
     Example:
     function outerfunc (...)
       ...
       function nested1 (...)
         ...
         function nested2 (...)
            ...
         endfunction
@@ -100,17 +100,17 @@ Summary of important user-visible change
       (a \
        b)
 
     will be consistent with other binary operators.
 
  ** Redundant terminal comma accepted by parser
 
     A redundant terminal comma is now accepted in matrix
-    definitions which allows writing code such as 
+    definitions which allows writing code such as
 
     [a,...
      b,...
      c,...
     ] = deal (1,2,3)
 
  ** Octave now has limited support for named exceptions
 
@@ -151,28 +151,28 @@ Summary of important user-visible change
     Octave:array-as-scalar => Octave:array-to-scalar
     Octave:array-as-vector => Octave:array-to-vector
 
  ** 'emptymatch', 'noemptymatch' options added to regular expressions.
 
     With this addition Octave now accepts the entire set of Matlab options
     for regular expressions.  'noemptymatch' is the default, but 'emptymatch'
     has certain uses where you need to match an assertion rather than actual
-    characters.  For example, 
+    characters.  For example,
 
     regexprep ('World', '^', 'Hello ', 'emptymatch')
       => Hello World
 
     where the pattern is actually the assertion '^' or start-of-line.
 
  ** For compatibility with Matlab, the regexp, regexpi, and regexprep
     functions now process backslash escape sequences in single-quoted pattern
     strings.  In addition, the regexprep function now processes backslash
     escapes in single-quoted replacement strings.  For example,
-    
+
     regexprep (str, '\t', '\n')
 
     would search the variable str for a TAB character (escape sequence \t)
     and replace it with a NEWLINE (escape sequence \n).  Previously the
     expression would have searched for a literal '\' followed by 't' and
     replaced the two characters with the sequence '\', 'n'.
 
  ** A TeX parser has been implemented for the FLTK toolkit and is the default
@@ -183,17 +183,17 @@ Summary of important user-visible change
 
     Code         Feature     Example             Comment
     -----------------------------------------------------------------
     _            subscript   H_2O                formula for water
     ^            exponent    y=x^2               formula for parabola
     \char        symbol      \beta               Greek symbol beta
     \fontname    font        \fontname{Arial}    set Arial font
     \fontsize    fontsize    \fontsize{16}       set fontsize 16
-    \color[rgb]  fontcolor   \color[rgb]{1 0 1}  set magenta color 
+    \color[rgb]  fontcolor   \color[rgb]{1 0 1}  set magenta color
     \bf          bold        \bfBold Text        bold font
     \it          italic      \itItalic Text      italic font
     \sl          slanted     \slOblique Text     slanted font
     \rm          normal      \bfBold\rmNormal    normal font
     {}           group       {\bf Bold}Normal    group objects
                              e^{i*\pi} = -1      group objects
 
  ** The m-files in the plot directory have been overhauled.
@@ -247,28 +247,28 @@ Summary of important user-visible change
  ** strsplit has been modified to be compatible with Matlab.  There
     are two instances where backward compatibility is broken.
 
     (1) Delimiters are now string vectors, not scalars.
 
     Octave's legacy behavior
 
       strsplit ("1 2, 3", ", ")
-      ans = 
+      ans =
       {
        [1,1] = 1
        [1,2] = 2
-       [1,3] = 
+       [1,3] =
        [1,4] = 3
       }
 
     Matlab compatible behavior
 
       strsplit ("1 2, 3", ", ")
-      ans = 
+      ans =
       {
        [1,1] = 1 2
        [1,2] = 3
       }
 
     (2) By default, Matlab treats consecutive delimiters as a single
     delimiter.  By default, Octave's legacy behavior was to return an
     empty string for the part between the delmiters.
@@ -282,37 +282,37 @@ Summary of important user-visible change
     22, 26, 29, 31.  This is undocumented, but verifiable, Matlab behavior.
     In addition, the default for formats which do not specify a date is
     January 1st of the current year.  The previous default was the current day,
     month, and year.  This may produce changes in existing scripts.
 
  ** The error function and its derivatives has been extended to accept complex
     arguments.  The following functions now accept complex inputs:
 
-    erf  erfc  erfcx   
+    erf  erfc  erfcx
 
     In addition two new error functions erfi (imaginary error function) and
     dawson (scaled imaginary error function) have been added.
 
  ** The glpk function has been modified to reflect changes in the GLPK
     library.  The "round" and "itcnt" options have been removed.  The
     "relax" option has been replaced by the "rtest" option.  The numeric
     values of error codes and of some options have also changed.
 
- ** The kurtosis function has changed definition to be compatible with 
+ ** The kurtosis function has changed definition to be compatible with
     Matlab.  It now returns the base kurtosis instead of the "excess kurtosis".
     The old behavior can be had by changing scripts to normalize with -3.
 
                "excess kurtosis" = kurtosis (x) - 3
 
- ** The moment function has changed definition to be compatible with 
+ ** The moment function has changed definition to be compatible with
     Matlab.  It now returns the central moment instead of the raw moment.
     The old behavior can be had by passing the type argument "r" for raw.
 
- ** The default name of the Octave crash dump file is now 
+ ** The default name of the Octave crash dump file is now
     "octave-workspace" instead of "octave-core".  The exact name can
     always be customized with the octave_core_file_name function.
 
  ** A citation command has been added to display information on how to
     cite Octave and packages in publications.  The package system will
     look for and install CITATION files from packages.
 
  ** The java package from Octave Forge is now part of core Octave.  The
@@ -353,35 +353,35 @@ Summary of important user-visible change
       ellipke                    jit_debug        struct2hdl
       erfcinv                    jit_enable       tetramesh
                                  jit_startcnt     waterfall
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.4 and have been
     removed from Octave 3.8.
-                                           
+
       autocor    dispatch              is_global    setstr
       autocov    fstat                 krylovb      strerror
       betai      gammai                perror       values
-      cellidx    glpkmex               replot               
-      cquad      is_duplicate_entry    saveimage            
-      
+      cellidx    glpkmex               replot
+      cquad      is_duplicate_entry    saveimage
+
     The following functions have been deprecated in Octave 3.8 and will
     be removed from Octave 3.12 (or whatever version is the second major
     release after 3.8):
 
-      default_save_options    java_new            
-      gen_doc_cache           java_set                   
+      default_save_options    java_new
+      gen_doc_cache           java_set
       interp1q                java_unsigned_conversion
-      isequalwithequalnans    javafields                
-      java_convert_matrix     javamethods               
+      isequalwithequalnans    javafields
+      java_convert_matrix     javamethods
       java_debug              re_read_readline_init_file
-      java_get                read_readline_init_file   
-      java_invoke             saving_history            
+      java_get                read_readline_init_file
+      java_invoke             saving_history
 
 
     The following keywords have been deprecated in Octave 3.8 and will
     be removed from Octave 3.12 (or whatever version is the second major
     release after 3.8):
 
       static
 
@@ -540,17 +540,17 @@ Summary of important user-visible change
 
  ** The following warning IDs have been removed:
 
       Octave:associativity-change
       Octave:complex-cmp-ops
       Octave:empty-list-elements
       Octave:fortran-indexing
       Octave:precedence-change
-      
+
  ** The warning ID Octave:string-concat has been renamed to
     Octave:mixed-string-concat.
 
  ** Octave now includes the following Matlab-compatible preference
     functions:
 
       addpref  getpref  ispref  rmpref  setpref
 
@@ -574,55 +574,55 @@ Summary of important user-visible change
     keyword.  Implementation, however, is still mapped to an ordinary
     for loop.
 
  ** Other new functions added in 3.6.0:
 
       bicg                       nthargout                   usejava
       is_dq_string               narginchk                   waitbar
       is_sq_string               python                      zscore
-      is_function_handle         register_graphics_toolkit 
-      loaded_graphics_toolkits   recycle                   
+      is_function_handle         register_graphics_toolkit
+      loaded_graphics_toolkits   recycle
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.2 and have been
     removed from Octave 3.6.
-                                           
-      create_set          spcholinv    splu   
+
+      create_set          spcholinv    splu
       dmult               spcumprod    spmax
       iscommand           spcumsum     spmin
       israwcommand        spdet        spprod
       lchol               spdiag       spqr
       loadimage           spfind       spsum
       mark_as_command     sphcat       spsumsq
-      mark_as_rawcommand  spinv        spvcat 
+      mark_as_rawcommand  spinv        spvcat
       spatan2             spkron       str2mat
       spchol              splchol      unmark_command
       spchol2inv          split        unmark_rawcommand
 
     The following functions have been deprecated in Octave 3.6 and will
     be removed from Octave 3.10 (or whatever version is the second major
     release after 3.6):
 
       cut                polyderiv
-      cor                shell_cmd 
+      cor                shell_cmd
       corrcoef           studentize
       __error_text__     sylvester_matrix
-      error_text         
+      error_text
 
  ** The following functions have been modified for Matlab compatibility:
 
       randperm
 
 Summary of important user-visible changes for version 3.4.3:
 -----------------------------------------------------------
 
  ** Octave 3.4.3 is a bug fixing release.
-     
+
 Summary of important user-visible changes for version 3.4.2:
 -----------------------------------------------------------
 
  ** Octave 3.4.2 fixes some minor installation problems that affected
     version 3.4.1.
 
 Summary of important user-visible changes for version 3.4.1:
 -----------------------------------------------------------
@@ -676,17 +676,17 @@ Summary of important user-visible change
     source distribution.
 
 Summary of important user-visible changes for version 3.4:
 ---------------------------------------------------------
 
  ** BLAS and LAPACK libraries are now required to build Octave.  The
     subset of the reference BLAS and LAPACK libraries has been removed
     from the Octave sources.
-  
+
  ** The ARPACK library is now distributed with Octave so it no longer
     needs to be available as an external dependency when building
     Octave.
 
  ** The `lookup' function was extended to be more useful for
     general-purpose binary searching.  Using this improvement, the
     ismember function was rewritten for significantly better
     performance.
@@ -709,17 +709,17 @@ Summary of important user-visible change
     functions for better performance.  These functions are now faster,
     can deliver more economized results for ranges, and can reuse the
     index cache mechanism described in previous paragraph.
 
  ** The built-in function equivalents to associative operators (`plus',
     `times', `mtimes', `and', and `or') have been extended to accept
     multiple arguments.  This is especially useful for summing
     (multiplying, etc.) lists of objects (of possibly distinct types):
-   
+
       matrix_sum = plus (matrix_list{:});
 
  ** An FTP object type based on libcurl has been implemented.  These
     objects allow ftp connections, downloads and uploads to be
     managed.  For example,
 
       fp = ftp ("ftp.octave.org);
       cd (fp, "gnu/octave");
@@ -736,36 +736,36 @@ Summary of important user-visible change
     but false in 3.2.x due to new optimizations and improvements:
 
       assert (2*linspace (1, 5, 5), 2*(1:5))
       assert (zeros (0, 0), [])
       assert (2*ones (1, 5), (2) (ones (1,5)))
 
  ** The behavior of library functions `ismatrix', `issquare', and
     `issymmetric' has been changed for better consistency.
-    
+
     * The `ismatrix' function now returns true for all numeric,
-      logical and character 2-D or N-D matrices.  Previously, `ismatrix' 
+      logical and character 2-D or N-D matrices.  Previously, `ismatrix'
       returned false if the first or second dimension was zero.
-      Hence, `ismatrix ([])' was false, 
+      Hence, `ismatrix ([])' was false,
       while `ismatrix (zeros (1,2,0))' was true.
 
     * The `issquare' function now returns a logical scalar, and is
       equivalent to the expression
 
         ismatrix (x) && ndims (x) == 2 && rows (x) == columns (x)
 
       The dimension is no longer returned.  As a result, `issquare ([])'
       now yields true.
-    
+
     * The `issymmetric' function now checks for symmetry instead of
       Hermitianness.  For the latter, ishermitian was created.  Also,
       logical scalar is returned rather than the dimension, so
       `issymmetric ([])' is now true.
-      
+
  ** Function handles are now aware of overloaded functions.  If a
     function is overloaded, the handle determines at the time of its
     reference which function to call.  A non-overloaded version does not
     need to exist.
 
  ** Overloading functions for built-in classes (double, int8, cell,
     etc.) is now compatible with Matlab.
 
@@ -776,22 +776,22 @@ Summary of important user-visible change
     `horzcat', and `vertcat' has been improved for multidimensional
     arrays.
 
  ** The operation-assignment operators +=, -=, *= and /= now behave more
     efficiently in certain cases.  For instance, if M is a matrix and S a
     scalar, then the statement
 
       M += S;
- 
+
     will operate on M's data in-place if it is not shared by another
     variable, usually increasing both time and memory efficiency.
-    
+
     Only selected common combinations are affected, namely:
-    
+
       matrix += matrix
       matrix -= matrix
       matrix .*= matrix
       matrix ./= matrix
 
       matrix += scalar
       matrix -= scalar
       matrix *= scalar
@@ -827,31 +827,31 @@ Summary of important user-visible change
     logical operations are now more easily amenable to compiler
     optimizations and are thus significantly faster.
 
  ** Octave now allows user-defined `subsasgn' methods to optimize out
     redundant copies.  For more information, see the manual.
 
  ** More efficient matrix division handling.  Octave is now able to
     handle the expressions
-    
+
       M' \ V
       M.' \ V
-      V / M 
+      V / M
 
     (M is a matrix and V is a vector) more efficiently in certain cases.
     In particular, if M is triangular, all three expressions will be
     handled by a single call to xTRTRS (from LAPACK), with appropriate
     flags.  Previously, all three expressions required a physical
     transpose of M.
 
  ** More efficient handling of certain mixed real-complex matrix
     operations.  For instance, if RM is a real matrix and CM a complex
     matrix,
-    
+
       RM * CM
 
     can now be evaluated either as
 
       complex (RM * real (CM), RM * imag (CM))
 
     or as
 
@@ -894,21 +894,21 @@ Summary of important user-visible change
     of `strcat' has been vectorized and is now much more efficient when
     many strings are concatenated.  The `strcmpi' and `strncmpi'
     functions are now built-in functions, providing better performance.
 
  ** 'str2double' now has a compiled implementation and the API conforms
     to Matlab.  The additional Octave-specific features of returning a
     boolean matrix indicating which elements were successfully converted
     has been removed.
- 
+
  ** Matlab-style ignoring input and output function arguments using
     tilde (~) is now supported.  Ignored output arguments may be
     detected from a function using the built-in function `isargout'.
-    For more details, consult the manual. 
+    For more details, consult the manual.
 
  ** The list datatype, deprecated since the introduction of cells, has
     been removed.
 
  ** The accumarray function has been optimized and is now significantly
     faster in certain important cases.
 
  ** The behavior of isreal and isnumeric functions was changed to be more
@@ -931,55 +931,55 @@ Summary of important user-visible change
     subsequently fill it by assignments, provided they meet certain
     conditions.  For more information, consult the `spalloc' function,
     which is no longer a mere dummy.  Consequently, nzmax and nnz are no
     longer always equal in Octave.  Octave may also produce a matrix
     with nnz < nzmax as a result of other operations, so you should
     consistently use nnz unless you really want to use nzmax (i.e., the
     space allocated for nonzero elements).
 
-    Sparse concatenation is also affected, and concatenating sparse 
-    matrices, especially larger collections, is now significantly more 
-    efficient.  This applies to both the [] operator and the 
+    Sparse concatenation is also affected, and concatenating sparse
+    matrices, especially larger collections, is now significantly more
+    efficient.  This applies to both the [] operator and the
     cat/vertcat/horzcat functions.
 
  ** It is now possible to optionally employ the xGESDD LAPACK drivers
     for computing the singular value decomposition using svd, instead
     of the default xGESVD, using the configuration pseudo-variable
     svd_driver.  The xGESDD driver can be up to 6x times faster when
     singular vectors are requested, but is reported to be somewhat less
     robust on highly ill-conditioned matrices.
 
- ** Configuration pseudo-variables, such as page_screen_output or 
-    confirm_recursive_rmdir (or the above mentioned svd_driver), now 
-    accept a "local" option as second argument, requesting the change 
+ ** Configuration pseudo-variables, such as page_screen_output or
+    confirm_recursive_rmdir (or the above mentioned svd_driver), now
+    accept a "local" option as second argument, requesting the change
     to be undone when the current function returns:
-        
+
     function [status, msg] = rm_rf (dir)
       confirm_recursive_rmdir (false, "local");
       [status, msg] = rmdir (dir, "s");
       ...
     endfunction
-    
-    Upon return, confirm_recursive_rmdir will be restored to the value 
-    it had on entry to the function, even if there were subsequent 
+
+    Upon return, confirm_recursive_rmdir will be restored to the value
+    it had on entry to the function, even if there were subsequent
     changes to the variable in function rm_rf or any of the functions
     it calls.
 
  ** pkg now accepts a -forge option for downloading and installing
-    packages from Octave Forge automatically.  For example, 
-    
+    packages from Octave Forge automatically.  For example,
+
       pkg install -forge general
-    
+
     will automatically download the latest release of the general
     package and attempt to install it.  No automatic resolving of
     dependencies is provided.  Further,
 
       pkg list -forge
-    
+
     can be used to list all available packages.
 
  ** The internal data representation of structs has been completely
     rewritten to make certain optimizations feasible.  The field data
     can now be shared between structs with equal keys but different
     dimensions or values, making operations that preserve the fields
     faster.  Economized storage is now used for scalar structs (just
     like most other scalars), making their usage more
@@ -996,48 +996,48 @@ Summary of important user-visible change
 
     Both display numbers in engineering notation, i.e., mantissa +
     exponent where the exponent is a multiple of 3.
 
  ** The following functions are new in Octave 3.4:
       accumdim    erfcx        nfields      pqpnonneg  uigetdir
       bitpack     fileread     nth_element  quadcc     uigetfile
       bitunpack   fminbnd      onCleanup    randi      uiputfile
-      blkmm       fskipl       pbaspect     repelems   uimenu           
-      cbrt        ifelse       pie3         reset      whitebg          
-      curl        ishermitian  powerset     rsf2csf            
-      chop        isindex      ppder        saveas             
-      daspect     luupdate     ppint        strread                     
-      divergence  merge        ppjumps      textread             
+      blkmm       fskipl       pbaspect     repelems   uimenu
+      cbrt        ifelse       pie3         reset      whitebg
+      curl        ishermitian  powerset     rsf2csf
+      chop        isindex      ppder        saveas
+      daspect     luupdate     ppint        strread
+      divergence  merge        ppjumps      textread
 
  ** Using the image function to view images with external programs such
     as display, xv, and xloadimage is no longer supported.  The
     image_viewer function has also been removed.
 
  ** The behavior of struct assignments to non-struct values has been
     changed.  Previously, it was possible to overwrite an arbitrary
     value:
 
       a = 1;
       a.x = 2;
 
     This is no longer possible unless a is an empty matrix or cell
     array.
- 
+
  ** The dlmread function has been extended to allow specifying a custom
     value for empty fields.
 
  ** The dlmread and dlmwrite functions have been modified to accept
     file IDs (as returned by fopen) in addition to file names.
 
  ** Octave can now optimize away the interpreter overhead of an
     anonymous function handle, if the function simply calls another
     function or handle with some of its parameters bound to certain
     values.  Example:
-    
+
       f = @(x) sum (x, 1);
 
     When f is called, the call is forwarded to @sum with the constant 1
     appended, and the anonymous function call does not occur on the
     call stack.
 
  ** For compatibility with Matlab, mu2lin (x) is now equivalent to
     mu2lin (x, 0).
@@ -1052,59 +1052,59 @@ Summary of important user-visible change
 
  ** Octave now uses the gnulib library for improved portability and to
     avoid bugs in operating system functions.
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.0 and have been
     removed from Octave 3.4.
-                                           
-      beta_cdf         geometric_pdf        pascal_pdf      
-      beta_inv         geometric_rnd        pascal_rnd      
-      beta_pdf         hypergeometric_cdf   poisson_cdf     
-      beta_rnd         hypergeometric_inv   poisson_inv     
-      binomial_cdf     hypergeometric_pdf   poisson_pdf     
-      binomial_inv     hypergeometric_rnd   poisson_rnd     
-      binomial_pdf     intersection         polyinteg       
-      binomial_rnd     is_bool              setstr          
-      chisquare_cdf    is_complex           struct_contains 
-      chisquare_inv    is_list              struct_elements 
-      chisquare_pdf    is_matrix            t_cdf           
-      chisquare_rnd    is_scalar            t_inv           
-      clearplot        is_square            t_pdf           
-      clg              is_stream            t_rnd           
-      com2str          is_struct            uniform_cdf     
-      exponential_cdf  is_symmetric         uniform_inv     
-      exponential_inv  is_vector            uniform_pdf     
-      exponential_pdf  isstr                uniform_rnd     
-      exponential_rnd  lognormal_cdf        weibcdf         
-      f_cdf            lognormal_inv        weibinv         
-      f_inv            lognormal_pdf        weibpdf         
-      f_pdf            lognormal_rnd        weibrnd         
-      f_rnd            meshdom              weibull_cdf     
-      gamma_cdf        normal_cdf           weibull_inv     
-      gamma_inv        normal_inv           weibull_pdf     
-      gamma_pdf        normal_pdf           weibull_rnd     
-      gamma_rnd        normal_rnd           wiener_rnd      
+
+      beta_cdf         geometric_pdf        pascal_pdf
+      beta_inv         geometric_rnd        pascal_rnd
+      beta_pdf         hypergeometric_cdf   poisson_cdf
+      beta_rnd         hypergeometric_inv   poisson_inv
+      binomial_cdf     hypergeometric_pdf   poisson_pdf
+      binomial_inv     hypergeometric_rnd   poisson_rnd
+      binomial_pdf     intersection         polyinteg
+      binomial_rnd     is_bool              setstr
+      chisquare_cdf    is_complex           struct_contains
+      chisquare_inv    is_list              struct_elements
+      chisquare_pdf    is_matrix            t_cdf
+      chisquare_rnd    is_scalar            t_inv
+      clearplot        is_square            t_pdf
+      clg              is_stream            t_rnd
+      com2str          is_struct            uniform_cdf
+      exponential_cdf  is_symmetric         uniform_inv
+      exponential_inv  is_vector            uniform_pdf
+      exponential_pdf  isstr                uniform_rnd
+      exponential_rnd  lognormal_cdf        weibcdf
+      f_cdf            lognormal_inv        weibinv
+      f_inv            lognormal_pdf        weibpdf
+      f_pdf            lognormal_rnd        weibrnd
+      f_rnd            meshdom              weibull_cdf
+      gamma_cdf        normal_cdf           weibull_inv
+      gamma_inv        normal_inv           weibull_pdf
+      gamma_pdf        normal_pdf           weibull_rnd
+      gamma_rnd        normal_rnd           wiener_rnd
       geometric_cdf    pascal_cdf
       geometric_inv    pascal_inv
 
     The following functions were deprecated in Octave 3.2 and will
     be removed from Octave 3.6 (or whatever version is the second major
     release after 3.2):
 
-      create_set          spcholinv    splu   
+      create_set          spcholinv    splu
       dmult               spcumprod    spmax
       iscommand           spcumsum     spmin
       israwcommand        spdet        spprod
       lchol               spdiag       spqr
       loadimage           spfind       spsum
       mark_as_command     sphcat       spsumsq
-      mark_as_rawcommand  spinv        spvcat 
+      mark_as_rawcommand  spinv        spvcat
       spatan2             spkron       str2mat
       spchol              splchol      unmark_command
       spchol2inv          split        unmark_rawcommand
 
     The following functions have been deprecated in Octave 3.4 and will
     be removed from Octave 3.8 (or whatever version is the second major
     release after 3.4):
 
@@ -1131,25 +1131,25 @@ Summary of important user-visible change
            endfor
 
     works as expected.  This capability has be used to introduce
     stem-series, bar-series, etc., objects for better Matlab
     compatibility.
 
  ** New graphics functions:
 
-      addlistener                  ezcontour   gcbo         refresh  
+      addlistener                  ezcontour   gcbo         refresh
       addproperty                  ezcontourf  ginput       refreshdata
       allchild                     ezmesh      gtext        specular
       available_graphics_toolkits  ezmeshc     intwarning   surfl
       graphics_toolkit             ezplot      ishghandle   trisurf
       cla                          ezplot3     isocolors    waitforbuttonpress
       clabel                       ezpolar     isonormals
-      comet                        ezsurf      isosurface  
-      dellistener                  findall     linkprop   
+      comet                        ezsurf      isosurface
+      dellistener                  findall     linkprop
       diffuse                      gcbf        plotmatrix
 
  ** New experimental OpenGL/FLTK based plotting system.
 
     An experimental plotting system based on OpenGL and the FLTK
     toolkit is now part of Octave.  This graphics toolkit is disabled by
     default.  You can switch to using it with the command
 
@@ -1315,27 +1315,27 @@ Summary of important user-visible change
     completely rewritten and indexing is now significantly faster.
 
  ** Improved memory management.
 
     Octave will now attempt to share data in some cases where previously
     a copy would be made, such as certain array slicing operations or
     conversions between cells, structs and cs-lists.  This usually reduces
     both time and memory consumption.
-    Also, Octave will now attempt to detect and optimize usage of a vector 
-    as a stack, when elements are being repeatedly inserted at/removed from 
+    Also, Octave will now attempt to detect and optimize usage of a vector
+    as a stack, when elements are being repeatedly inserted at/removed from
     the end of the vector.
 
  ** Improved performance for reduction operations.
 
     The performance of the sum, prod, sumsq, cumsum, cumprod, any, all,
     max and min functions has been significantly improved.
 
  ** Sorting and searching.
-    
+
     The performance of sort has been improved, especially when sorting
     indices are requested.  An efficient built-in issorted
     implementation was added.  The sortrows function now uses a more
     efficient algorithm, especially in the homogeneous case.  The lookup
     function is now a built-in function performing a binary search,
     optimized for long runs of close elements.  Lookup also works with
     cell arrays of strings.
 
@@ -1466,44 +1466,44 @@ Summary of important user-visible change
     to generate cache files for external packages when they are
     installed.
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.0 and will be
     removed from Octave 3.4 (or whatever version is the second major
     release after 3.0):
-                                           
-      beta_cdf         geometric_pdf       pascal_pdf      
-      beta_inv         geometric_rnd       pascal_rnd      
-      beta_pdf         hypergeometric_cdf  poisson_cdf     
-      beta_rnd         hypergeometric_inv  poisson_inv     
-      binomial_cdf     hypergeometric_pdf  poisson_pdf     
-      binomial_inv     hypergeometric_rnd  poisson_rnd     
-      binomial_pdf     intersection        polyinteg       
-      binomial_rnd     is_bool             setstr          
-      chisquare_cdf    is_complex          struct_contains 
-      chisquare_inv    is_list             struct_elements 
-      chisquare_pdf    is_matrix           t_cdf           
-      chisquare_rnd    is_scalar           t_inv           
-      clearplot        is_square           t_pdf           
-      clg              is_stream           t_rnd           
-      com2str          is_struct           uniform_cdf     
-      exponential_cdf  is_symmetric        uniform_inv     
-      exponential_inv  is_vector           uniform_pdf     
-      exponential_pdf  isstr               uniform_rnd     
-      exponential_rnd  lognormal_cdf       weibcdf         
-      f_cdf            lognormal_inv       weibinv         
-      f_inv            lognormal_pdf       weibpdf         
-      f_pdf            lognormal_rnd       weibrnd         
-      f_rnd            meshdom             weibull_cdf     
-      gamma_cdf        normal_cdf          weibull_inv     
-      gamma_inv        normal_inv          weibull_pdf     
-      gamma_pdf        normal_pdf          weibull_rnd     
-      gamma_rnd        normal_rnd          wiener_rnd      
+
+      beta_cdf         geometric_pdf       pascal_pdf
+      beta_inv         geometric_rnd       pascal_rnd
+      beta_pdf         hypergeometric_cdf  poisson_cdf
+      beta_rnd         hypergeometric_inv  poisson_inv
+      binomial_cdf     hypergeometric_pdf  poisson_pdf
+      binomial_inv     hypergeometric_rnd  poisson_rnd
+      binomial_pdf     intersection        polyinteg
+      binomial_rnd     is_bool             setstr
+      chisquare_cdf    is_complex          struct_contains
+      chisquare_inv    is_list             struct_elements
+      chisquare_pdf    is_matrix           t_cdf
+      chisquare_rnd    is_scalar           t_inv
+      clearplot        is_square           t_pdf
+      clg              is_stream           t_rnd
+      com2str          is_struct           uniform_cdf
+      exponential_cdf  is_symmetric        uniform_inv
+      exponential_inv  is_vector           uniform_pdf
+      exponential_pdf  isstr               uniform_rnd
+      exponential_rnd  lognormal_cdf       weibcdf
+      f_cdf            lognormal_inv       weibinv
+      f_inv            lognormal_pdf       weibpdf
+      f_pdf            lognormal_rnd       weibrnd
+      f_rnd            meshdom             weibull_cdf
+      gamma_cdf        normal_cdf          weibull_inv
+      gamma_inv        normal_inv          weibull_pdf
+      gamma_pdf        normal_pdf          weibull_rnd
+      gamma_rnd        normal_rnd          wiener_rnd
       geometric_cdf    pascal_cdf
       geometric_inv    pascal_inv
 
     The following functions are now deprecated in Octave 3.2 and will
     be removed from Octave 3.6 (or whatever version is the second major
     release after 3.2):
 
       create_set          spcholinv  spmax
diff --git a/libgui/graphics/Backend.h b/libgui/graphics/Backend.h
--- a/libgui/graphics/Backend.h
+++ b/libgui/graphics/Backend.h
@@ -59,9 +59,9 @@ public:
   static ObjectProxy* toolkitObjectProxy (const graphics_object& go);
 
 signals:
   void createObject (double handle);
 };
 
 }; // namespace QtHandles
 
-#endif 
+#endif
diff --git a/libgui/graphics/ButtonControl.h b/libgui/graphics/ButtonControl.h
--- a/libgui/graphics/ButtonControl.h
+++ b/libgui/graphics/ButtonControl.h
@@ -34,17 +34,17 @@ class ButtonControl : public BaseControl
 {
   Q_OBJECT
 
 public:
   ButtonControl (const graphics_object& go, QAbstractButton* btn);
   ~ButtonControl (void);
 
 protected:
-  void update (int pId); 
+  void update (int pId);
 
 private slots:
   void clicked (void);
   void toggled (bool checked);
 
 private:
   bool m_blockCallback;
 };
diff --git a/libgui/graphics/EditControl.cc b/libgui/graphics/EditControl.cc
--- a/libgui/graphics/EditControl.cc
+++ b/libgui/graphics/EditControl.cc
@@ -96,17 +96,17 @@ void EditControl::init (TextEdit* edit, 
   m_multiLine = true;
   initCommon (edit);
 
   uicontrol::properties& up = properties<uicontrol> ();
 
   edit->setAcceptRichText (false);
   // FIXME: support string_vector
   edit->setPlainText (Utils::fromStdString (up.get_string_string ()));
-  
+
   connect (edit, SIGNAL (textChanged (void)),
 	   SLOT (textChanged (void)));
   connect (edit, SIGNAL (editingFinished (void)),
 	   SLOT (editingFinished (void)));
 }
 
 EditControl::~EditControl (void)
 {
diff --git a/libgui/graphics/Object.h b/libgui/graphics/Object.h
--- a/libgui/graphics/Object.h
+++ b/libgui/graphics/Object.h
@@ -42,27 +42,27 @@ class Object : public QObject
 
 public:
   Object (const graphics_object& go, QObject* obj = 0);
 
   virtual ~Object (void);
 
   base_properties& properties (void)
     { return object ().get_properties (); }
-  
+
   const base_properties& properties (void) const
     { return object ().get_properties (); }
 
   template <class T>
   typename T::properties& properties (void)
     {
       return dynamic_cast<typename T::properties&>
 	(object ().get_properties ());
     }
-  
+
   template <class T>
   const typename T::properties& properties (void) const
     {
       return dynamic_cast<const typename T::properties&>
 	(object ().get_properties ());
     }
 
   graphics_object object (void) const;
diff --git a/libgui/graphics/QtHandlesUtils.cc b/libgui/graphics/QtHandlesUtils.cc
--- a/libgui/graphics/QtHandlesUtils.cc
+++ b/libgui/graphics/QtHandlesUtils.cc
@@ -113,17 +113,17 @@ template QFont computeFont<uipanel> (con
 				     int height);
 
 QColor fromRgb (const Matrix& rgb)
 {
   QColor c;
 
   if (rgb.numel () == 3)
     c.setRgbF (rgb(0), rgb(1), rgb(2));
-  
+
   return c;
 }
 
 Matrix toRgb (const QColor& c)
 {
   Matrix rgb (1, 3);
   double* rgbData = rgb.fortran_vec ();
 
diff --git a/libgui/graphics/ToolBarButton.h b/libgui/graphics/ToolBarButton.h
--- a/libgui/graphics/ToolBarButton.h
+++ b/libgui/graphics/ToolBarButton.h
@@ -26,17 +26,17 @@ along with Octave; see the file COPYING.
 #include "Object.h"
 
 class QAction;
 
 namespace QtHandles
 {
 
 class Container;
-  
+
 template <class T>
 class ToolBarButton : public Object
 {
 public:
   ToolBarButton (const graphics_object& go, QAction* action);
   ~ToolBarButton (void);
 
   Container* innerContainer (void) { return 0; }
diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -200,17 +200,17 @@ DEFUN (__uigetfile_qt__, args, , "")
     retval(0) = "";
   retval(1) = "";
   retval(2) = static_cast<double> (0);
 
   if (defaultFileName.isEmpty ())
     defaultFileName = defaultDirectory;
   else
     defaultFileName = defaultDirectory + "/" + defaultFileName;
-  
+
   QStringList filterSpecs = makeFilterSpecs (args(0).cell_value ());
 
   if (isMultiSelect)
     {
       QString filter;
       QStringList files =
         QFileDialog::getOpenFileNames (0, caption, defaultFileName,
 				       filterSpecs.join (";;"), &filter, 0);
@@ -278,17 +278,17 @@ DEFUN (__uiputfile_qt__, args, , "")
   retval(0) = "";
   retval(1) = "";
   retval(2) = static_cast<double> (0);
 
   if (defaultFileName.isEmpty ())
     defaultFileName = defaultDirectory;
   else
     defaultFileName = defaultDirectory + "/" + defaultFileName;
-  
+
   QStringList filterSpecs = makeFilterSpecs (args(0).cell_value ());
 
   QString filter;
   QString fileName =
     QFileDialog::getSaveFileName (0, caption, defaultFileName,
 				  filterSpecs.join (";;"), &filter, 0);
 
   if (! fileName.isNull ())
diff --git a/libgui/graphics/gl-select.cc b/libgui/graphics/gl-select.cc
--- a/libgui/graphics/gl-select.cc
+++ b/libgui/graphics/gl-select.cc
@@ -46,17 +46,17 @@ opengl_selector::apply_pick_matrix (void
 void
 opengl_selector::setup_opengl_transformation (const axes::properties& props)
 {
   opengl_renderer::setup_opengl_transformation (props);
   apply_pick_matrix ();
 }
 
 void
-opengl_selector::init_marker (const std::string& m, double sz, float width)  
+opengl_selector::init_marker (const std::string& m, double sz, float width)
 {
   opengl_renderer::init_marker (m, sz, width);
   apply_pick_matrix ();
 }
 
 # define BUFFER_SIZE 128
 
 graphics_object
diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.cpp b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
--- a/libgui/qterminal/libqterminal/unix/TerminalView.cpp
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.cpp
@@ -2626,17 +2626,17 @@ void TerminalView::dropEvent(QDropEvent*
   //  KUrl::List urls = KUrl::List::fromMimeData(event->mimeData());
 
   QString dropText;
 
   if (event->mimeData ()->hasUrls ())
   {
     foreach (QUrl url, event->mimeData ()->urls ())
     {
-      if(dropText.length () > 0) 
+      if(dropText.length () > 0)
         dropText += "\n";
       dropText  += url.toLocalFile ();
     }
   }
 
   /*  if (!urls.isEmpty())
   {
     for ( int i = 0 ; i < urls.count() ; i++ )
diff --git a/libgui/qterminal/libqterminal/unix/TerminalView.h b/libgui/qterminal/libqterminal/unix/TerminalView.h
--- a/libgui/qterminal/libqterminal/unix/TerminalView.h
+++ b/libgui/qterminal/libqterminal/unix/TerminalView.h
@@ -412,17 +412,17 @@ public slots:
     void pasteClipboard();
     /**
      * Pastes the content of the selection into the
      * display.
      */
     void pasteSelection();
 
     /**
-     * selects all content 
+     * selects all content
      */
     void selectAll();
 
 	 /**
 	 * Causes the widget to display or hide a message informing the user that terminal
 	 * output has been suspended (by using the flow control key combination Ctrl+S)
 	 *
 	 * @param suspended True if terminal output has been suspended and the warning message should
diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -683,17 +683,17 @@ void QConsolePrivate::drawTextBackground
     }
 
   p.restore ();
 }
 
 void QConsolePrivate::selectAll()
 {
   m_beginSelection = QPoint (0,0);
-  m_endSelection = QPoint(m_bufferSize.width (), 
+  m_endSelection = QPoint(m_bufferSize.width (),
                           m_cursorPos.y());
   updateSelection();
 }
 
 void QConsolePrivate::selectWord (const QPoint & cellpos)
 {
   QPoint begin = cellpos;
   QPoint end = cellpos;
@@ -709,37 +709,37 @@ void QConsolePrivate::selectWord (const 
 
   begin.rx () -= horizontalScrollOffset;
   end.rx () -= horizontalScrollOffset;
 
   // loog at current clicked on char to determinate ig getting space chunk or nonspace chunk
   if (QChar(m_buffer[begin.y ()*stride + begin.x ()].Char.UnicodeChar).isSpace () == false)
   {
     // from current char, go back and fwd to find start and end of block
-    while(begin.x () > 0 && 
+    while(begin.x () > 0 &&
           QChar(m_buffer[begin.y ()*stride + begin.x () -1].Char.UnicodeChar).isSpace() == false)
     {
         begin.rx () --;
     }
 
-    while(end.x () < m_consoleRect.width () && 
+    while(end.x () < m_consoleRect.width () &&
           QChar(m_buffer[end.y ()*stride + end.x () +1].Char.UnicodeChar).isSpace() == false)
     {
       end.rx () ++;
     }
   }
   else
   {
-    while(begin.x () > 0 && 
+    while(begin.x () > 0 &&
           QChar(m_buffer[begin.y ()*stride + begin.x () -1].Char.UnicodeChar).isSpace())
     {
       begin.rx () --;
     }
 
-    while(end.x () < m_consoleRect.width () && 
+    while(end.x () < m_consoleRect.width () &&
           QChar(m_buffer[end.y ()*stride + end.x () +1].Char.UnicodeChar).isSpace ())
     {
       end.rx () ++;
     }
   }
 
   // convert console  offsets to absolute cell positions
   begin.ry () += verticalScrollOffset;
@@ -1007,17 +1007,17 @@ void QConsolePrivate::updateConsoleSize 
 
   // Store the terminal size in the environment.  When Octave is
   // initialized, we ask the command editor (usually readline) to prefer
   // using these values rather than querying the terminal so that the
   // buffer size can be larger than the size of the window that the
   // command editor will actually use.
 
   qputenv ("LINES", QByteArray::number (m_consoleRect.height ()));
-  qputenv ("COLUMNS", QByteArray::number (m_consoleRect.width ())); 
+  qputenv ("COLUMNS", QByteArray::number (m_consoleRect.width ()));
 
   // Force the command line editor (usually readline) to notice the
   // change in screen size as soon as possible.
 
   q->setSize (m_consoleRect.height (), m_consoleRect.width ());
 
   m_consoleRect.moveLeft (0);
   if (m_consoleRect.bottom () >= m_bufferSize.height ())
@@ -1171,17 +1171,17 @@ void QConsolePrivate::setHorizontalScrol
     value = m_bufferSize.width () - m_consoleRect.width ();
 
   r.Left = value;
   r.Top = m_consoleRect.top ();
   r.Right = value + m_consoleRect.width () - 1;
   r.Bottom = m_consoleRect.bottom ();
 
   log ("Scrolling window horizontally: (%d, %d) -> (%d, %d) [%d x %d]\n",
-       r.Left, r.Top, r.Right, r.Bottom, 
+       r.Left, r.Top, r.Right, r.Bottom,
        r.Right - r.Left + 1, r.Bottom - r.Top + 1);
 
   if (SetConsoleWindowInfo (hStdOut, TRUE, &r))
     {
       m_consoleRect.moveLeft (value);
       updateConsoleView ();
     }
 }
@@ -1198,17 +1198,17 @@ void QConsolePrivate::setVerticalScrollV
     value = m_bufferSize.height () - m_consoleRect.height ();
 
   r.Left = m_consoleRect.left ();
   r.Top = value;
   r.Right = m_consoleRect.right ();
   r.Bottom = value + m_consoleRect.height () - 1;
 
   log ("Scrolling window vertically: (%d, %d) -> (%d, %d) [%d x %d]\n",
-       r.Left, r.Top, r.Right, r.Bottom, 
+       r.Left, r.Top, r.Right, r.Bottom,
        r.Right - r.Left + 1, r.Bottom - r.Top + 1);
 
   if (SetConsoleWindowInfo (hStdOut, TRUE, &r))
     {
       m_consoleRect.moveTop (value);
       updateConsoleView ();
     }
 }
@@ -1823,15 +1823,15 @@ void QWinTerminalImpl::dragEnterEvent (Q
 void QWinTerminalImpl::dropEvent (QDropEvent *event)
 {
   QString dropText;
 
   if (event->mimeData ()->hasUrls ())
     {
       foreach (QUrl url, event->mimeData ()->urls ())
         {
-          if(dropText.length () > 0) 
+          if(dropText.length () > 0)
             dropText += "\n";
           dropText  += url.toLocalFile ();
         }
       sendText (dropText);
     }
 }
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1916,17 +1916,17 @@ file_editor_tab::notice_settings (const 
   _edit_area->setEdgeColumn (
               settings->value ("editor/long_line_column",80).toInt ());
   if (settings->value ("editor/long_line_marker",true).toBool ())
     _edit_area->setEdgeMode (QsciScintilla::EdgeLine);
   else
     _edit_area->setEdgeMode (QsciScintilla::EdgeNone);
 
   // reload changed files
-  _always_reload_changed_files = 
+  _always_reload_changed_files =
         settings->value ("editor/always_reload_changed_files",false).toBool ();
 }
 
 void
 file_editor_tab::auto_margin_width ()
 {
   _edit_area->setMarginWidth (2, "1"+QString::number (_edit_area->lines ()));
 }
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1928,17 +1928,17 @@ void
 file_editor::handle_visibility (bool visible)
   {
     empty_script (false, visible);
 
     if (visible && ! isFloating ())
       focus ();
   }
 
-void 
+void
 file_editor::dragEnterEvent (QDragEnterEvent *e)
   {
     if (e->mimeData ()->hasUrls ())
       {
         e->acceptProposedAction();
       }
   }
 
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -229,17 +229,17 @@ private slots:
 
   void create_context_menu (QMenu *);
   void edit_status_update (bool, bool);
 
 protected:
 
   void dragEnterEvent(QDragEnterEvent *event);
   void dropEvent(QDropEvent *event);
-  
+
 private:
 
   bool is_editor_console_tabbed ();
   void construct (void);
   void add_file_editor_tab (file_editor_tab *f, const QString& fn);
   void save_file_as (QWidget *fetabID = 0);
   void mru_menu_update (void);
   bool call_custom_editor (const QString& file_name = QString (), int line = -1);
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -101,17 +101,17 @@ octave_qscintilla::octave_qscintilla (QW
 #endif
 
 #if defined (Q_OS_MAC)
   // Octave interprets Cmd key as Meta whereas Qscintilla interprets it
   // as Ctrl. We thus invert Meta/Ctrl in Qscintilla's shortcuts list.
   QList< QsciCommand * > cmd_list_mac = cmd_set->commands ();
   for (int i = 0; i < cmd_list_mac.length (); i++)
     {
-      // Primary key 
+      // Primary key
       int key = cmd_list_mac.at (i)->key ();
 
       if (static_cast<int> (key | Qt::META) == key &&
           static_cast<int> (key | Qt::CTRL) != key)
         key = (key ^ Qt::META) | Qt::CTRL;
       else if (static_cast<int> (key | Qt::CTRL) == key)
         key = (key ^ Qt::CTRL) | Qt::META;
 
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -727,17 +727,17 @@ settings_dialog::write_changed_settings 
   settings->setValue ("filesdockwidget/showHiddenFiles",
                       ui->showHiddenFiles->isChecked ());
   settings->setValue ("filesdockwidget/useAlternatingRowColors",
                       ui->useAlternatingRowColors->isChecked ());
   settings->setValue ("filesdockwidget/sync_octave_directory",
                       ui->sync_octave_directory->isChecked ());
   settings->setValue ("filesdockwidget/restore_last_dir",
                       ui->cb_restore_file_browser_dir->isChecked ());
-  settings->setValue ("filesdockwidget/startup_dir", 
+  settings->setValue ("filesdockwidget/startup_dir",
                       ui->le_file_browser_dir->text ());
 
 
   settings->setValue ("news/allow_web_connection",
                       ui->checkbox_allow_web_connect->isChecked ());
   settings->setValue ("useProxyServer", ui->useProxyServer->isChecked ());
   settings->setValue ("proxyType", ui->proxyType->currentText ());
   settings->setValue ("proxyHostName", ui->proxyHostName->text ());
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -42,17 +42,17 @@ along with Octave; see the file COPYING.
 #include "shortcut-manager.h"
 #include "singleton-cleanup.h"
 
 shortcut_manager *shortcut_manager::instance = 0;
 
 shortcut_manager::shortcut_manager ()
 {
   setObjectName ("Shortcut_Manager");
-  
+
   // Mac: don't let Qt interpret CMD key ("Meta" in Qt terminology) as Ctrl
 #if defined (Q_OS_MAC)
   QCoreApplication::setAttribute (Qt::AA_MacDontSwapCtrlAndMeta, true);
 #endif
 
   _settings = resource_manager::get_settings ();
 }
 
@@ -82,32 +82,32 @@ shortcut_manager::instance_ok (void)
 
   return retval;
 }
 
 void
 shortcut_manager::do_init_data ()
 {
   QKeySequence ctrl;
-  int prefix; 
+  int prefix;
 #if defined (Q_OS_MAC)
   // Use CMD key as an equivalent of Ctrl key on other platforms
   ctrl =  Qt::MetaModifier;
-  // Some of octave default shortcuts on windows/linux are already defined 
-  // as system wide shortcuts on Mac Os X (almost all Function keys). 
+  // Some of octave default shortcuts on windows/linux are already defined
+  // as system wide shortcuts on Mac Os X (almost all Function keys).
   // Prefix those with Option (Alt) modifier to avoid conflicts.
   prefix = Qt::AltModifier;
 #else
   ctrl = Qt::ControlModifier;
   prefix = Qt::NoModifier;
 #endif
 
   QKeySequence ctrl_shift = ctrl + Qt::ShiftModifier;
   QKeySequence ctrl_alt = ctrl + Qt::AltModifier;
-  
+
   // actions of the main window
 
   // file
   init (tr ("New File"), "main_file:new_file", QKeySequence::New);
   init (tr ("New Function"), "main_file:new_function",
         QKeySequence (ctrl_shift + Qt::Key_N));
   init (tr ("New Figure"), "main_file:new_figure", QKeySequence ());
   init (tr ("Open File"), "main_file:open_file", QKeySequence::Open);
@@ -125,52 +125,52 @@ shortcut_manager::do_init_data ()
   init (tr ("Find in Files"), "main_edit:find_in_files",
         QKeySequence (ctrl_shift + Qt::Key_F));
   init (tr ("Clear Command Window"), "main_edit:clear_command_window",
         QKeySequence ());
   init (tr ("Clear Command History"), "main_edit:clear_history",
         QKeySequence ());
   init (tr ("Clear Workspace"), "main_edit:clear_workspace", QKeySequence ());
 
-  // debug 
-  init (tr ("Step Over"), "main_debug:step_over", 
+  // debug
+  init (tr ("Step Over"), "main_debug:step_over",
         QKeySequence (prefix + Qt::Key_F10));
-  init (tr ("Step Into"), "main_debug:step_into", 
+  init (tr ("Step Into"), "main_debug:step_into",
         QKeySequence (prefix + Qt::Key_F11));
-  init (tr ("Step Out"), "main_debug:step_out", 
+  init (tr ("Step Out"), "main_debug:step_out",
         QKeySequence (prefix + Qt::ShiftModifier + Qt::Key_F11));
-  init (tr ("Continue"), "main_debug:continue", 
+  init (tr ("Continue"), "main_debug:continue",
         QKeySequence (prefix + Qt::Key_F5));
-  init (tr ("Quit Debug Mode"), "main_debug:quit", 
+  init (tr ("Quit Debug Mode"), "main_debug:quit",
         QKeySequence (prefix + Qt::ShiftModifier + Qt::Key_F5));
 
   // window
-  init (tr ("Show Command Window"), "main_window:show_command", 
+  init (tr ("Show Command Window"), "main_window:show_command",
         prefix + ctrl_shift + Qt::Key_0);
-  init (tr ("Show Command History"), "main_window:show_history", 
+  init (tr ("Show Command History"), "main_window:show_history",
         prefix + ctrl_shift + Qt::Key_1);
-  init (tr ("Show File Browser"), "main_window:show_file_browser", 
+  init (tr ("Show File Browser"), "main_window:show_file_browser",
         prefix + ctrl_shift + Qt::Key_2);
-  init (tr ("Show Workspace"), "main_window:show_workspace", 
+  init (tr ("Show Workspace"), "main_window:show_workspace",
         prefix + ctrl_shift + Qt::Key_3);
-  init (tr ("Show Editor"), "main_window:show_editor", 
+  init (tr ("Show Editor"), "main_window:show_editor",
         prefix + ctrl_shift + Qt::Key_4);
-  init (tr ("Show Documentation"), "main_window:show_doc", 
+  init (tr ("Show Documentation"), "main_window:show_doc",
         prefix + ctrl_shift + Qt::Key_5);
-  init (tr ("Command Window"), "main_window:command", 
+  init (tr ("Command Window"), "main_window:command",
         prefix + ctrl + Qt::Key_0);
-  init (tr ("Command History"), "main_window:history", 
+  init (tr ("Command History"), "main_window:history",
         prefix + ctrl + Qt::Key_1);
-  init (tr ("File Browser"), "main_window:file_browser", 
+  init (tr ("File Browser"), "main_window:file_browser",
         prefix + ctrl + Qt::Key_2);
-  init (tr ("Workspace"), "main_window:workspace", 
+  init (tr ("Workspace"), "main_window:workspace",
         prefix + ctrl + Qt::Key_3);
-  init (tr ("Editor"), "main_window:editor", 
+  init (tr ("Editor"), "main_window:editor",
         prefix + ctrl + Qt::Key_4);
-  init (tr ("Documentation"), "main_window:doc", 
+  init (tr ("Documentation"), "main_window:doc",
         prefix + ctrl + Qt::Key_5);
   init (tr ("Reset Window Layout"), "main_window:reset", QKeySequence ());
 
   // help
   init (tr ("Show Ondisk Documentation"), "main_help:ondisk_doc", QKeySequence ());
   init (tr ("Show Online Documentation"), "main_help:online_doc", QKeySequence ());
   init (tr ("Report a Bug"), "main_help:report_bug", QKeySequence ());
   init (tr ("Octave Packages"), "main_help:packages", QKeySequence ());
@@ -199,66 +199,66 @@ shortcut_manager::do_init_data ()
   init (tr ("Undo"), "editor_edit:undo", QKeySequence::Undo);
   init (tr ("Redo"), "editor_edit:redo", QKeySequence::Redo);
   init (tr ("Copy"), "editor_edit:copy", QKeySequence::Copy);
   init (tr ("Cut"), "editor_edit:cut", QKeySequence::Cut);
   init (tr ("Paste"), "editor_edit:paste", QKeySequence::Paste);
   init (tr ("Select All"), "editor_edit:select_all", QKeySequence::SelectAll);
   init (tr ("Find and Replace"), "editor_edit:find_replace",
         QKeySequence::Find);
-  init (tr ("Delete to Start of Word"), "editor_edit:delete_start_word", 
+  init (tr ("Delete to Start of Word"), "editor_edit:delete_start_word",
         QKeySequence::DeleteStartOfWord);
-  init (tr ("Delete to End of Word"), "editor_edit:delete_end_word", 
+  init (tr ("Delete to End of Word"), "editor_edit:delete_end_word",
         QKeySequence::DeleteEndOfWord);
-  init (tr ("Delete to Start of Line"), "editor_edit:delete_start_line",  
+  init (tr ("Delete to Start of Line"), "editor_edit:delete_start_line",
         QKeySequence (ctrl_shift + Qt::Key_Backspace));
-  init (tr ("Delete to End of Line"), "editor_edit:delete_end_line",  
+  init (tr ("Delete to End of Line"), "editor_edit:delete_end_line",
         QKeySequence (ctrl_shift + Qt::Key_Delete));
-  init (tr ("Delete Line"), "editor_edit:delete_line",  
+  init (tr ("Delete Line"), "editor_edit:delete_line",
         QKeySequence (ctrl_shift + Qt::Key_L));
-  init (tr ("Copy Line"), "editor_edit:copy_line",  
+  init (tr ("Copy Line"), "editor_edit:copy_line",
         QKeySequence (ctrl_shift + Qt::Key_C));
-  init (tr ("Cut Line"), "editor_edit:cut_line",  
+  init (tr ("Cut Line"), "editor_edit:cut_line",
         QKeySequence (ctrl_shift + Qt::Key_X));
-  init (tr ("Duplicate Selection/Line"), "editor_edit:duplicate_selection",  
+  init (tr ("Duplicate Selection/Line"), "editor_edit:duplicate_selection",
         QKeySequence (ctrl + Qt::Key_D));
-  init (tr ("Transpose Line"), "editor_edit:transpose_line",  
+  init (tr ("Transpose Line"), "editor_edit:transpose_line",
         QKeySequence (ctrl + Qt::Key_T));
-  init (tr ("Completion List"), "editor_edit:completion_list",  
+  init (tr ("Completion List"), "editor_edit:completion_list",
         QKeySequence (ctrl + Qt::Key_Space));
 
-  init (tr ("Comment Selection"), "editor_edit:comment_selection",  
+  init (tr ("Comment Selection"), "editor_edit:comment_selection",
         QKeySequence (ctrl + Qt::Key_R));
-  init (tr ("Uncomment Selection"), "editor_edit:uncomment_selection",  
+  init (tr ("Uncomment Selection"), "editor_edit:uncomment_selection",
         QKeySequence (ctrl_shift + Qt::Key_R));
-  init (tr ("Uppercase Selection"), "editor_edit:upper_case",  
+  init (tr ("Uppercase Selection"), "editor_edit:upper_case",
         QKeySequence (ctrl + Qt::Key_U));
-  init (tr ("Lowercase Selection"), "editor_edit:lower_case",  
+  init (tr ("Lowercase Selection"), "editor_edit:lower_case",
         QKeySequence (ctrl_alt + Qt::Key_U));
 
 #if defined (Q_OS_MAC)
-  init (tr ("Indent Selection"), "editor_edit:indent_selection",  
+  init (tr ("Indent Selection"), "editor_edit:indent_selection",
         QKeySequence (prefix + Qt::Key_Tab));
-  init (tr ("Unindent Selection"), "editor_edit:unindent_selection",  
+  init (tr ("Unindent Selection"), "editor_edit:unindent_selection",
         QKeySequence (prefix + Qt::ShiftModifier + Qt::Key_Tab));
 #else
-  init (tr ("Indent Selection"), "editor_edit:indent_selection",  
+  init (tr ("Indent Selection"), "editor_edit:indent_selection",
         QKeySequence (ctrl + Qt::Key_Tab));
-  init (tr ("Unindent Selection"), "editor_edit:unindent_selection",  
+  init (tr ("Unindent Selection"), "editor_edit:unindent_selection",
         QKeySequence (ctrl_shift + Qt::Key_Tab));
 #endif
 
   init (tr ("Convert Line Ednings to Windows"), "editor_edit:conv_eol_winows",
         QKeySequence ());
   init (tr ("Convert Line Ednings to Unix"), "editor_edit:conv_eol_unix",
         QKeySequence ());
   init (tr ("Convert Line Ednings to Mac"), "editor_edit:conv_eol_mac",
         QKeySequence ());
 
-  init (tr ("Goto Line"), "editor_edit:goto_line",  
+  init (tr ("Goto Line"), "editor_edit:goto_line",
         QKeySequence (ctrl + Qt::Key_G));
   init (tr ("Toggle Bookmark"), "editor_edit:toggle_bookmark",
         QKeySequence (prefix + Qt::Key_F7));
   init (tr ("Next Bookmark"), "editor_edit:next_bookmark",
         QKeySequence (prefix + Qt::Key_F2));
   init (tr ("Previous Bookmark"), "editor_edit:previous_bookmark",
         QKeySequence (prefix + Qt::SHIFT + Qt::Key_F2));
   init (tr ("Remove All Bookmark"), "editor_edit:remove_bookmark",
@@ -290,19 +290,19 @@ shortcut_manager::do_init_data ()
   init (tr ("Next Breakpoint"), "editor_debug:next_breakpoint",
         QKeySequence ());
   init (tr ("Previous Breakpoint"), "editor_debug:previous_breakpoint",
         QKeySequence ());
   init (tr ("Remove All Breakpoints"), "editor_debug:remove_breakpoints",
         QKeySequence ());
 
   // run
-  init (tr ("Run File"), "editor_run:run_file", 
+  init (tr ("Run File"), "editor_run:run_file",
         QKeySequence (prefix + Qt::Key_F5) );
-  init (tr ("Run Selection"), "editor_run:run_selection", 
+  init (tr ("Run Selection"), "editor_run:run_selection",
         QKeySequence (prefix + Qt::Key_F9) );
 
   // help
   init (tr ("Help on Keyword"), "editor_help:help_keyword", QKeySequence::HelpContents);
   init (tr ("Document on Keyword"), "editor_help:doc_keyword", QKeySequence (Qt::SHIFT + Qt::Key_F1));
 }
 
 void
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -377,10 +377,10 @@ workspace_view::copyClipboard ()
     handle_contextmenu_copy ();
 }
 
 void
 workspace_view::selectAll ()
 {
   if (view->hasFocus ())
     view->selectAll ();
-}  
+}
 
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9624,28 +9624,28 @@ gtk_manager::do_get_toolkit (void) const
                dtk.c_str ());
     }
   else
     retval = pl->second;
 
   return retval;
 }
 
-void 
+void
 gtk_manager::do_register_toolkit (const std::string& name)
 {
   if (dtk.empty () || name == "qt"
       || (name == "fltk"
           && available_toolkits.find ("qt") == available_toolkits.end ()))
     dtk = name;
 
   available_toolkits.insert (name);
 }
 
-void 
+void
 gtk_manager::do_unregister_toolkit (const std::string& name)
 {
   available_toolkits.erase (name);
 
   if (dtk == name)
     {
       if (available_toolkits.empty ())
         dtk.clear ();
diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -179,17 +179,17 @@ octave_base_reader::do_input_echo (const
 static std::string
 gnu_readline (const std::string& s, bool& eof)
 {
   octave_quit ();
 
   eof = false;
 
   std::string retval = command_editor::readline (s, eof);
-  
+
   if (! eof && retval.empty ())
     retval = "\n";
 
   if (command_editor::interrupt (false))
     retval = "";
 
   return retval;
 }
@@ -508,17 +508,17 @@ execute_in_debugger_handler (const std::
 
 static void
 get_debug_input (const std::string& prompt)
 {
   unwind_protect frame;
 
   bool silent = tree_evaluator::quiet_breakpoint_flag;
   tree_evaluator::quiet_breakpoint_flag = false;
-          
+
   octave_user_code *caller = octave_call_stack::caller_user_code ();
   std::string nm;
   int curr_debug_line;
 
   bool have_file = false;
 
   if (caller)
     {
@@ -576,17 +576,17 @@ get_debug_input (const std::string& prom
                     buf << "\n" << curr_debug_line << ": " << line_buf;
                 }
             }
         }
     }
 
   if (silent)
     command_editor::erase_empty_line (true);
-  
+
   std::string msg = buf.str ();
 
   if (! msg.empty ())
     std::cerr << msg << std::endl;
 
   frame.protect_var (VPS1);
   VPS1 = prompt;
 
diff --git a/libinterp/parse-tree/pt-unop.cc b/libinterp/parse-tree/pt-unop.cc
--- a/libinterp/parse-tree/pt-unop.cc
+++ b/libinterp/parse-tree/pt-unop.cc
@@ -69,17 +69,17 @@ tree_prefix_expression::rvalue1 (int)
     {
       if (etype == octave_value::op_incr || etype == octave_value::op_decr)
         {
           octave_lvalue ref = op->lvalue ();
 
           if (! error_state)
             {
               BEGIN_PROFILER_BLOCK (tree_prefix_expression)
-              
+
               ref.do_unary_op (etype);
 
               if (! error_state)
                 retval = ref.value ();
 
               END_PROFILER_BLOCK
             }
         }
diff --git a/liboctave/array/dSparse.h b/liboctave/array/dSparse.h
--- a/liboctave/array/dSparse.h
+++ b/liboctave/array/dSparse.h
@@ -118,17 +118,17 @@ public:
                               const Array<octave_idx_type>& ra_idx);
 
   friend OCTAVE_API SparseMatrix real (const SparseComplexMatrix& a);
   friend OCTAVE_API SparseMatrix imag (const SparseComplexMatrix& a);
 
   friend OCTAVE_API SparseMatrix atan2 (const double& x, const SparseMatrix& y)
                                         GCC_ATTR_DEPRECATED ;
   friend OCTAVE_API SparseMatrix atan2 (const SparseMatrix& x, const double& y)
-                                        GCC_ATTR_DEPRECATED ; 
+                                        GCC_ATTR_DEPRECATED ;
   friend OCTAVE_API SparseMatrix atan2 (const SparseMatrix& x,
                                         const SparseMatrix& y)
                                         GCC_ATTR_DEPRECATED ;
 
   SparseMatrix transpose (void) const
   {
     return MSparse<double>::transpose ();
   }
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -536,17 +536,17 @@ function [local_packages, global_package
         otherwise
           error ("you can request at most two outputs when calling 'pkg describe'");
       endswitch
 
     case "update"
       if (nargout == 0)
         installed_pkgs_lst = installed_packages (local_list, global_list);
         if (length (files) > 0)
-           update_lst = {}; 
+           update_lst = {};
            for i = 1:length (files)
              is_installed = false;
              for j = 1:length (installed_pkgs_lst)
                if (strcmp (files{i}, installed_pkgs_lst{j}.name))
                  update_lst = { update_lst{:}, installed_pkgs_lst{j} };
                  is_installed = true;
                endif
              endfor
diff --git a/scripts/polynomial/polyeig.m b/scripts/polynomial/polyeig.m
--- a/scripts/polynomial/polyeig.m
+++ b/scripts/polynomial/polyeig.m
@@ -23,17 +23,17 @@
 ## Solve the polynomial eigenvalue problem of degree @var{l}.
 ##
 ## Given an @var{n*n} matrix polynomial
 ## @code{@var{C}(s) = @var{C0} + @var{C1} s + @dots{} + @var{Cl} s^l}
 ## polyeig solves the eigenvalue problem
 ## @code{(@var{C0} + @var{C1} + @dots{} + @var{Cl})v = 0}.
 ##
 ## Note that the eigenvalues @var{z} are the zeros of the matrix polynomial.
-## @var{z} is a row vector with @var{n*l} elements.  @var{v} is a matrix 
+## @var{z} is a row vector with @var{n*l} elements.  @var{v} is a matrix
 ## (@var{n} x @var{n}*@var{l}) with columns that correspond to the
 ## eigenvectors.
 ##
 ## @seealso{eig, eigs, compan}
 ## @end deftypefn
 
 ## Author: Fotios Kasolis
 
diff --git a/test/io.tst b/test/io.tst
--- a/test/io.tst
+++ b/test/io.tst
@@ -69,18 +69,18 @@
 %!  persistent a18 = uint64 (floor (10*rand (2,2)));
 %!  ## sparse
 %!  persistent a19 = sprandn (100,100,0.01);
 %!  ## complex sparse
 %!  persistent a20 = sprandn (100,100,0.01) + 1i * sprandn (100,100,0.01);
 %!
 %!  ret = 0;
 %!
-%!  files = cellfun (@fullfile, {P_tmpdir}, 
-%!                   {"text.mat", "binary.mat", "mat5.mat", "mat7.mat"}, 
+%!  files = cellfun (@fullfile, {P_tmpdir},
+%!                   {"text.mat", "binary.mat", "mat5.mat", "mat7.mat"},
 %!                   "UniformOutput", false);
 %!  opts = {"-z -text", "-z -binary", "-z -mat", "-v7"};
 %!  tols = {2*eps, 0, 0, 0};
 %!
 %!  vars = "a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14 a15 a16 a17 a18 a19 a20";
 %!  if (! input)
 %!    for i = 1:length (files)
 %!      eval (sprintf ("save %s %s %s", opts{i}, files{i}, vars));
@@ -193,29 +193,29 @@
 
 %!test
 %!
 %! STR.scalar_fld = 1;
 %! STR.matrix_fld = [1.1,2;3,4];
 %! STR.string_fld = "Octave";
 %! STR.struct_fld.x = 0;
 %! STR.struct_fld.y = 1;
-%! 
+%!
 %! struct_dat = fullfile (P_tmpdir, "struct.dat");
 %! save (struct_dat, "-struct", "STR");
 %! STR = load (struct_dat);
 %!
 %! assert (STR.scalar_fld == 1 && ...
 %!         STR.matrix_fld == [1.1,2;3,4] && ...
 %!         STR.string_fld == "Octave" && ...
 %!         STR.struct_fld.x == 0 && ...
 %!         STR.struct_fld.y == 1 );
 %!
-%! 
-%! save ("-binary", struct_dat, 
+%!
+%! save ("-binary", struct_dat,
 %!       "-struct", "STR", "matrix_fld", "str*_fld");
 %! STR =  load (struct_dat);
 %!
 %! assert (!isfield (STR,"scalar_fld") && ...
 %!         STR.matrix_fld == [1.1,2;3,4] && ...
 %!         STR.string_fld == "Octave" && ...
 %!         STR.struct_fld.x == 0 && ...
 %!         STR.struct_fld.y == 1);
