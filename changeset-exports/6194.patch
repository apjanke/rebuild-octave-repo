# HG changeset patch
# User jwe
# Date 1164950738 0
#      Fri Dec 01 05:25:38 2006 +0000
# Node ID 0d2ff0dfb159410d12c59013e026481df909d7a9
# Parent  ca97c6b26902e2b22c1c89bb8a90c2952dbac617
[project @ 2006-12-01 05:25:38 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2006-11-30  John W. Eaton  <jwe@octave.org>
+
+	* lo-utils.cc (octave_read_double, read_inf_nan_na):
+	Also recognize [+-][Ii]nf.
+
 2006-11-28  David Bateman  <dbateman@free.fr>
 
 	* oct-sparse.h: Allow sparse headers to also be in a sparsesuite
 	sub-directory.
 
         * dSparse.cc (SparseMatrix SparseMatrix::inverse(...)): Transpose
 	the matrix type as well when calling tinverse for lower
 	triangular
diff --git a/liboctave/lo-utils.cc b/liboctave/lo-utils.cc
--- a/liboctave/lo-utils.cc
+++ b/liboctave/lo-utils.cc
@@ -205,30 +205,30 @@ octave_fgetl (FILE *f, bool& eof)
 
   if (retval[len-1] == '\n')
     retval.resize (len-1);
 
   return retval;
 }
 
 static inline double
-read_inf_nan_na (std::istream& is, char c)
+read_inf_nan_na (std::istream& is, char c, char sign = '+')
 {
   double d = 0.0;
 
   switch (c)
     {
     case 'i': case 'I':
       {
 	is >> c;
 	if (c == 'n' || c == 'N')
 	  {
 	    is >> c;
 	    if (c == 'f' || c == 'F')
-	      d = octave_Inf;
+	      d = sign == '-' ? -octave_Inf : octave_Inf;
 	    else
 	      is.putback (c);
 	  }
 	else
 	  is.putback (c);
       }
       break;
 
@@ -258,28 +258,56 @@ read_inf_nan_na (std::istream& is, char 
   return d;
 }
 
 double
 octave_read_double (std::istream& is)
 {
   double d = 0.0;
 
-  char c = 0;
+  char c1 = 0;
 
-  is >> c;
-  switch (c)
+  is >> c1;
+  switch (c1)
     {
+    case '-':
+      {
+	char c2 = 0;
+	is >> c2;
+	if (c2 == 'i' || c2 == 'I')
+	  d = read_inf_nan_na (is, c2, c1);
+	else
+	  {
+	    is.putback (c2);
+	    is.putback (c1);
+	  }
+      }
+      break;
+
+    case '+':
+      {
+	char c2 = 0;
+	is >> c2;
+	if (c2 == 'i' || c2 == 'I')
+	  d = read_inf_nan_na (is, c2, c1);
+	else
+	  {
+	    is.putback (c2);
+	    is.putback (c1);
+	  }
+      }
+      break;
+
     case 'i': case 'I':
     case 'n': case 'N':
-      d = read_inf_nan_na (is, c);
+      d = read_inf_nan_na (is, c1);
       break;
 
     default:
-      is.putback (c);
+      is.putback (c1);
       is >> d;
     }
 
   return d;
 }
 
 Complex
 octave_read_complex (std::istream& is)
