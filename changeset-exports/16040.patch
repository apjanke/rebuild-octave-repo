# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1360444113 18000
#      Sat Feb 09 16:08:33 2013 -0500
# Branch stable
# Node ID 003100ee9e0d33b9e9c1646c6f2f218686a5628b
# Parent  bbef6907d766321e54ce8ddba01bd195e9b4b149
* edit.m: Undo string escape sequences on values used in sprintf formats.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -201,20 +201,21 @@ function ret = edit (file, state)
     endswitch
     return
   endif
 
   ## Start the editor without a file if no file is given.
   if (nargin < 1)
     if (exist (FUNCTION.HOME, "dir") == 7 && (isunix () || ! ispc ()))
       system (cstrcat ("cd \"", FUNCTION.HOME, "\" ; ",
-                      sprintf (FUNCTION.EDITOR, "")),
+                      sprintf (undo_string_escapes (FUNCTION.EDITOR), "")),
               [], FUNCTION.MODE);
     else
-      system (sprintf (FUNCTION.EDITOR,""), [], FUNCTION.MODE);
+      system (sprintf (undo_string_escapes (FUNCTION.EDITOR), ""),
+              [], FUNCTION.MODE);
     endif
     return;
   endif
 
   ## Check whether the user is trying to edit a builtin of compiled function.
   switch (exist (file))
     case {3, 5}
       error ("edit: unable to edit a built-in or compiled function");
@@ -274,50 +275,53 @@ function ret = edit (file, state)
       break;
     endif
   endfor
 
   if (! isempty (fileandpath))
     ## If the file exists, then edit it.
     if (FUNCTION.EDITINPLACE)
       ## Edit in place even if it is protected.
-      system (sprintf (FUNCTION.EDITOR, cstrcat ("\"", fileandpath, "\"")),
+      system (sprintf (undo_string_escapes (FUNCTION.EDITOR),
+                       cstrcat ("\"", fileandpath, "\"")),
               [], FUNCTION.MODE);
       return;
     else
       ## If the file is modifiable in place then edit it, otherwise make
       ## a copy in HOME and then edit it.
       fid = fopen (fileandpath, "r+t");
       if (fid < 0)
         from = fileandpath;
         fileandpath = cstrcat (FUNCTION.HOME, from (rindex (from, filesep):end));
         [status, msg] = copyfile (from, fileandpath, 1);
         if (status == 0)
           error (msg);
         endif
       else
         fclose (fid);
       endif
-      system (sprintf (FUNCTION.EDITOR, cstrcat ("\"", fileandpath, "\"")),
+      system (sprintf (undo_string_escapes (FUNCTION.EDITOR),
+                       cstrcat ("\"", fileandpath, "\"")),
               [], FUNCTION.MODE);
       return;
     endif
   endif
 
   ## If editing a new file that is neither a m-file or an oct-file,
   ## just edit it.
   fileandpath = file;
   idx = rindex (file, ".");
   name = file(1:idx-1);
   ext = file(idx+1:end);
   switch (ext)
     case {"cc", "m"}
       0;
     otherwise
-      system (sprintf (FUNCTION.EDITOR, cstrcat ("\"", fileandpath, "\"")),
+      system (sprintf (undo_string_escapes (FUNCTION.EDITOR),
+                       cstrcat ("\"", fileandpath, "\"")),
               [], FUNCTION.MODE);
       return;
   endswitch
 
   ## The file doesn't exist in path so create it, put in the function
   ## template and edit it.
 
   ## Guess the email name if it was not given.
@@ -454,17 +458,18 @@ SUCH DAMAGE.\
   fid = fopen (fileandpath, "wt");
   if (fid < 0)
     error ("edit: could not create %s", fileandpath);
   endif
   fputs (fid, text);
   fclose (fid);
 
   ## Finally we are ready to edit it!
-  system (sprintf (FUNCTION.EDITOR, cstrcat ("\"", fileandpath, "\"")),
+  system (sprintf (undo_string_escapes (FUNCTION.EDITOR),
+                   cstrcat ("\"", fileandpath, "\"")),
           [], FUNCTION.MODE);
 
 endfunction
 
 function ret = default_home ()
 
   ret = getenv ("HOME");
   if (isempty (ret))
