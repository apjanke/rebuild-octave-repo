# HG changeset patch
# User jwe
# Date 787541291 0
#      Fri Dec 16 01:28:11 1994 +0000
# Node ID af4887fdeaeab0764e64b4fa23871fb77c4e5b9d
# Parent  6ada1ed8eba6c4c31eb332f2b6f1611427eee329
[project @ 1994-12-16 01:28:11 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1992, 1993, 1994 John 
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 
-AC_REVISION($Revision: 1.80 $)
+AC_REVISION($Revision: 1.81 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -395,58 +395,48 @@ fi
 
 F2CFLAGS=
 FFLAGS="-O"
 AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
 if test -n "$F77"; then
   export F77
   FLIBS=`sh $srcdir/flibs.sh`
   AC_MSG_RESULT([defining FLIBS to be $FLIBS])
-  DOT_O_DOT_F_C1=
-  DOT_O_DOT_F_C2=
-  DOT_O_DOT_F_C3=
-  DOT_O_DOT_F_C4=
-  DEFAULT_DOT_C_FROM_DOT_F=
-  DEFAULT_DOT_O_FROM_DOT_F=
+  DOT_C_FROM_DOT_F_CMD=
+  DOT_O_FROM_DOT_F_PAT=
 elif test -n "$F2C" || $use_f2c; then
   AC_CHECK_LIB(f2c, main, FLIBS=-lf2c, [])
   if test -z "$FLIBS" ; then
     AC_CHECK_LIB(F77, main, FLIBS=-lF77, [])
     if test -n "$FLIBS" ; then
       AC_CHECK_LIB(I77, main, FLIBS="$FLIBS -lI77", [])
     fi
   fi
   if test -z "$FLIBS" ; then
     AC_MSG_WARN([I found f2c but not libf2c.a, or libF77.a and libI77.a])
   fi
-DEFAULT_DOT_C_FROM_DOT_F='# A rule for making C source from Fortran source.\
-# If we are using f2c we should also turn off the default rule for\
-# making objects from .f files so that we do not invoke the fortran\
-# compiler by mistake.\
-\
-\%.c : \%.f\
-	cat $< | $(F2C) $(F2CFLAGS) > $(@F)'
-  AC_MSG_RESULT([defining DEFAULT_DOT_C_FROM_DOT_F to be $DEFAULT_DOT_C_FROM_DOT_F])
-  DEFAULT_DOT_O_FROM_DOT_F='%.o : %.f'
-  AC_MSG_RESULT([defining DEFAULT_DOT_O_FROM_DOT_F to be $DEFAULT_DOT_O_FROM_DOT_F])
+  DOT_C_FROM_DOT_F_CMD='	cat $< | $(F2C) $(F2CFLAGS) > $(@F)'
+  AC_MSG_RESULT([defining DOT_C_FROM_DOT_F_CMD to be $DOT_C_FROM_DOT_F_CMD])
+  DOT_O_FROM_DOT_F_PAT='%.o : %.f'
+  AC_MSG_RESULT([defining DOT_O_FROM_DOT_F_PAT to be $DOT_O_FROM_DOT_F_PAT])
   AC_DEFINE(F77_APPEND_UNDERSCORE, 1)
 else
   AC_MSG_WARN([in order to build octave, you must have a compatible])
   AC_MSG_WARN([Fortran compiler or f2c installed and in your path.])
   AC_MSG_WARN([See the file INSTALL for more information.])
   AC_MSG_WARN([Continuing anyway...])
 fi
 
 AC_SUBST(F77)
 AC_SUBST(FFLAGS)
 AC_SUBST(FLIBS)
 AC_SUBST(F2C)
 AC_SUBST(F2CFLAGS)
-AC_SUBST(DEFAULT_DOT_C_FROM_DOT_F)
-AC_SUBST(DEFAULT_DOT_O_FROM_DOT_F)
+AC_SUBST(DOT_C_FROM_DOT_F_CMD)
+AC_SUBST(DOT_O_FROM_DOT_F_PAT)
 
 ### Extract libraries and directories from FLIBS and CXXLIBS.
 ###
 ### Leave only libraries, with -lfoo converted to libfoo.a:
 
 changequote(,)dnl
 FLIB_LIST=`echo " $FLIBS " | sed -e 's/ -Xlinker *[^ ]*/ /g' \
 	-e 's/ -L *[^ ]*/ /g' \
