# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1244350870 25200
#      Sat Jun 06 22:01:10 2009 -0700
# Branch release-3-2-x
# Node ID 087e5d3a82a68444a9ba3097000b64f476f92c54
# Parent  85bbe9e6164784eb4bedd79c3684275444bdf76a
Expand documentation for 'complex' function

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-06  Rik  <rdrider0-list@yahoo.com>
+
+	* data.cc: Update documentation for 'complex' function
+
 2009-06-06  Rik  <rdrider0-list@yahoo.com>
 
 	* load-save.cc: Update documentation for NA and isna functions
 
 2009-06-06  Rik  <rdrider0-list@yahoo.com>
 
 	* load-save.cc: Update documentation for load and save
 
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2778,19 +2778,30 @@ Return true if @var{x} is a floating-poi
   return retval;
 }
 
 // FIXME -- perhaps this should be implemented with an
 // octave_value member function?
 
 DEFUN (complex, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} complex (@var{val})\n\
+@deftypefn  {Built-in Function} {} complex (@var{x})\n\
 @deftypefnx {Built-in Function} {} complex (@var{re}, @var{im})\n\
-Convert @var{x} to a complex value.\n\
+Return a complex result from real arguments.  With 1 real argument @var{x},\n\
+return the complex result @code{@var{x} + 0i}.  With 2 real arguments,\n\
+return the complex result @code{@var{re} + @var{im}}.  @code{complex} can\n\
+often be more convenient than expressions such as @code{a + i*b}.\n\
+For example:\n\
+\n\
+@example\n\
+complex ([1, 2], [3, 4])\n\
+@result{}\n\
+   1 + 3i   2 + 4i\n\
+@end example\n\
+@seealso{real, imag, iscomplex}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
diff --git a/src/ov-flt-re-mat.cc b/src/ov-flt-re-mat.cc
--- a/src/ov-flt-re-mat.cc
+++ b/src/ov-flt-re-mat.cc
@@ -811,16 +811,17 @@ CD_ARRAY_MAPPER (sqrt, ::sqrtf, std::sqr
 ARRAY_MAPPER (tan, FloatNDArray::dmapper, ::tanf)
 ARRAY_MAPPER (tanh, FloatNDArray::dmapper, ::tanhf)
 ARRAY_MAPPER (isna, FloatNDArray::bmapper, octave_is_NA)
 
 DEFUN (single, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} single (@var{x})\n\
 Convert @var{x} to single precision type.\n\
+@seealso{double}\n\
 @end deftypefn")
 {
   // The OCTAVE_TYPE_CONV_BODY3 macro declares retval, so they go
   // inside their own scopes, and we don't declare retval here to
   // avoid a shadowed declaration warning.
 
   if (args.length () == 1)
     {
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -839,16 +839,17 @@ CD_ARRAY_MAPPER (sqrt, ::sqrt, std::sqrt
 ARRAY_MAPPER (tan, NDArray::dmapper, ::tan)
 ARRAY_MAPPER (tanh, NDArray::dmapper, ::tanh)
 ARRAY_MAPPER (isna, NDArray::bmapper, octave_is_NA)
 
 DEFUN (double, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} double (@var{x})\n\
 Convert @var{x} to double precision type.\n\
+@seealso{single}\n\
 @end deftypefn")
 {
   // The OCTAVE_TYPE_CONV_BODY3 macro declares retval, so they go
   // inside their own scopes, and we don't declare retval here to
   // avoid a shadowed declaration warning.
 
   if (args.length () == 1)
     {
