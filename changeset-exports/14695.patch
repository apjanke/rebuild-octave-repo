# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1338164231 -7200
#      Mon May 28 02:17:11 2012 +0200
# Branch gui
# Node ID 55f88d2236b668489ca968678e576ead2aa85ab7
# Parent  ea11c9d8aa470e90960e841e9f4f0e4c6a135d01
Added copy and paste context menu for the terminal.

MainWindow: Removed terminateOctave call in destructor which could lead to segfaults.

diff --git a/.hgsubstate b/.hgsubstate
--- a/.hgsubstate
+++ b/.hgsubstate
@@ -1,2 +1,2 @@
 f9813bce2c06a6130a68db4478d1b16ddadaf276 gnulib
-5c51db4e3b1fcce6a05c59af5be78f43ebc24db4 gui/qterminal
+6ae5b4ef8e8b4ea0b56687a77eeeb60ccc33223d gui/qterminal
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -34,17 +34,16 @@ MainWindow::MainWindow (QWidget * parent
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
   OctaveLink::instance ()->launchOctave();
 }
 
 MainWindow::~MainWindow ()
 {
-  OctaveLink::instance ()->terminateOctave();
 }
 
 void
 MainWindow::newFile ()
 {
   m_fileEditor->requestNewFile ();
 }
 
@@ -118,22 +117,23 @@ MainWindow::openOctaveForgePage ()
 void
 MainWindow::processSettingsDialogRequest ()
 {
   SettingsDialog *settingsDialog = new SettingsDialog (this);
   settingsDialog->exec ();
   delete settingsDialog;
   emit settingsChanged ();
   ResourceManager::instance ()->updateNetworkSettings ();
-  updateTerminalFont();
+  noticeSettings();
 }
 
 void
-MainWindow::updateTerminalFont ()
+MainWindow::noticeSettings ()
 {
+  // Set terminal font:
   QSettings *settings = ResourceManager::instance ()->settings ();
   QFont font = QFont();
   //font.setStyleHint(QFont::TypeWriter);
   font.setFamily(settings->value("terminal/fontName").toString());
   font.setPointSize(settings->value("terminal/fontSize").toInt ());
   m_terminal->setTerminalFont(font);
 }
 
@@ -342,16 +342,17 @@ MainWindow::construct ()
   connect (showFileBrowserAction, SIGNAL (toggled (bool)), m_filesDockWidget, SLOT (setShown (bool)));
   connect (m_filesDockWidget, SIGNAL (activeChanged (bool)), showFileBrowserAction, SLOT (setChecked (bool)));
   connect (showEditorAction, SIGNAL (toggled (bool)), m_fileEditor, SLOT (setShown (bool)));
   connect (m_fileEditor, SIGNAL (activeChanged (bool)), showEditorAction, SLOT (setChecked (bool)));
 
   //connect (this, SIGNAL (settingsChanged ()), m_workspaceView, SLOT (noticeSettings ()));
   //connect (this, SIGNAL (settingsChanged ()), m_historyDockWidget, SLOT (noticeSettings ()));
   connect (this, SIGNAL (settingsChanged ()), m_filesDockWidget, SLOT (noticeSettings ()));
+  connect (this, SIGNAL (settingsChanged ()), this, SLOT (noticeSettings ()));
 
   connect (m_filesDockWidget, SIGNAL (openFile (QString)), m_fileEditor, SLOT (requestOpenFile (QString)));
   connect (m_historyDockWidget, SIGNAL (information (QString)), this, SLOT (reportStatusMessage (QString)));
   connect (m_historyDockWidget, SIGNAL (commandDoubleClicked (QString)), this, SLOT (handleCommandDoubleClicked (QString)));
   connect (saveWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleSaveWorkspaceRequest ()));
   connect (loadWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleLoadWorkspaceRequest ()));
   connect (clearWorkspaceAction, SIGNAL (triggered ()), this, SLOT (handleClearWorkspaceRequest ()));
 
@@ -364,11 +365,10 @@ MainWindow::construct ()
   addDockWidget (Qt::LeftDockWidgetArea, m_workspaceView);
   addDockWidget (Qt::LeftDockWidgetArea, m_historyDockWidget);
   addDockWidget (Qt::RightDockWidgetArea, m_filesDockWidget);
   addDockWidget (Qt::BottomDockWidgetArea, m_fileEditor);
   addDockWidget (Qt::BottomDockWidgetArea, m_terminalDockWidget);
   setStatusBar (m_statusBar);
 
   readSettings ();
-  updateTerminalFont();
 }
 
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -84,17 +84,17 @@ public slots:
   void handleCommandDoubleClicked (QString command);
   void newFile ();
   void openFile ();
   void openBugTrackerPage ();
   void openAgoraPage ();
   void openOctaveForgePage ();
   void processSettingsDialogRequest ();
   void showAboutOctave ();
-  void updateTerminalFont ();
+  void noticeSettings ();
   void prepareForQuit ();
 
 protected:
   void closeEvent (QCloseEvent * closeEvent);
   void readSettings ();
   void writeSettings ();
 
 private:
