# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1235027794 18000
#      Thu Feb 19 02:16:34 2009 -0500
# Node ID 7d48766c21a5c94ec62e0a7871e849b39b710843
# Parent  20dfb885f877be11f33985e69203bd8fc87e977a
use consistent format for doc strings of internal functions

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,32 @@
+2009-02-19  John W. Eaton  <jwe@octave.org>
+
+	* general/__isequal__.m, general/__splinen__.m, image/__img__.m,
+	image/__img_via_file__.m, miscellaneous/__xzip__.m,
+	optimization/__all_opts__.m, optimization/__dogleg__.m,
+	optimization/__fdjac__.m, path/__extractpath__.m,
+	plot/__add_datasource__.m, plot/__area__.m,
+	plot/__axes_limits__.m, plot/__axis_label__.m, plot/__bar__.m,
+	plot/__bars__.m, plot/__clabel__.m, plot/__contour__.m,
+	plot/__default_plot_options__.m, plot/__errcomm__.m,
+	plot/__errplot__.m, plot/__ezplot__.m,
+	plot/__gnuplot_has_feature__.m, plot/__gnuplot_version__.m,
+	plot/__go_close_all__.m, plot/__go_draw_axes__.m,
+	plot/__go_draw_figure__.m, plot/__line__.m,
+	plot/__next_line_color__.m, plot/__patch__.m, plot/__plr1__.m,
+	plot/__plr2__.m, plot/__plt1__.m, plot/__plt2__.m,
+	plot/__plt2mm__.m, plot/__plt2mv__.m, plot/__plt2ss__.m,
+	plot/__plt2sv__.m, plot/__plt2vm__.m, plot/__plt2vs__.m,
+	plot/__plt2vv__.m, plot/__plt__.m, plot/__plt_get_axis_arg__.m,
+	plot/__pltopt1__.m, plot/__pltopt__.m, plot/__quiver__.m,
+	plot/__scatter__.m, plot/__stem__.m, startup/__finish__.m,
+	statistics/base/__quantile__.m: Consistent doc strings for
+	internal fucntions.
+
 2009-02-18  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/subplot.m: Fix unintended deletion of axes.
 
 2009-02-18  Frederick Umminger  <Frederick_Umminger@playstation.sony.com>
 
 	* audio/wavread.m: Improve search for data chunks.
 
diff --git a/scripts/general/__isequal__.m b/scripts/general/__isequal__.m
--- a/scripts/general/__isequal__.m
+++ b/scripts/general/__isequal__.m
@@ -15,22 +15,23 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## Undocumented internal function.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} __isequal__ (@var{nans_compare_equal}, @var{x1}, @var{x2}, @dots{})
+## Undocumented internal function.
+## @end deftypefn
+
 ## Return true if @var{x1}, @var{x2}, @dots{} are all equal and
 ## @var{nans_compare_equal} evaluates to false.
 ##
 ## If @var{nans_compare_equal} evaluates to true, then assume NaN == NaN.
-## @seealso{isequal, isequalwithequalnans}
-## @end deftypefn
 
 ## Modified by: William Poetra Yoga Hadisoeseno
 
 ## Algorithm:
 ##
 ## 1. Determine the class of x
 ## 2. If x is of the struct, cell, list or char class, for each
 ##    argument after x, determine whether it has the same class
diff --git a/scripts/general/__splinen__.m b/scripts/general/__splinen__.m
--- a/scripts/general/__splinen__.m
+++ b/scripts/general/__splinen__.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## Undocumented internal function.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{yi} =} __splinen__ (@var{x}, @var{y}, @var{xi})
-## Internal support function for multi-dimensional splines.
+## Undocumented internal function.
 ## @end deftypefn
 
 ## FIXME: Allow arbitrary grids..
 
 function yi = __splinen__ (x, y, xi, extrapval, f)
   if (nargin != 5)
     error ("Incorrect number of arguments");
   endif
diff --git a/scripts/image/__img__.m b/scripts/image/__img__.m
--- a/scripts/image/__img__.m
+++ b/scripts/image/__img__.m
@@ -14,24 +14,25 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## Undocumented internal function.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} __img__ (@var{img})
-## @deftypefnx {Function File} {} __img__ (@var{x}, @var{y}, @var{img})
+## @deftypefnx {Function File} {} __img__ (@var{x}, @var{y}, @var{img}, @dots{})
+## Undocumented internal function.
+## @end deftypefn
+
 ## Generic image creation.
 ##
 ## The axis values corresponding to the matrix elements are specified in
 ## @var{x} and @var{y}. If you're not using gnuplot 4.2 or later, these
 ## variables are ignored.
-## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
 function h = __img__ (x, y, img, varargin)
 
   newplot ();
diff --git a/scripts/image/__img_via_file__.m b/scripts/image/__img_via_file__.m
--- a/scripts/image/__img_via_file__.m
+++ b/scripts/image/__img_via_file__.m
@@ -14,26 +14,27 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## Undocumented internal function.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} __img_via_file__(@var{x}, @var{y}, @var{im}, @var{zoom}, @var{command})
+## @deftypefn {Function File} {} __img_via_file__ (@var{x}, @var{y}, @var{im}, @var{zoom}, @var{command})
+## Undocumented internal function.
+## @end deftypefn
+
 ## Display an image by saving it to a file in PPM format and launching
 ## @var{command}.
 ##
 ## The @var{command} must be a format string containing @code{%s} and
 ## possibly @code{%f}.  The @code{%s} will be replaced by the filename
 ## of the image, and the @code{%f} will be replaced by @var{zoom}. The
 ## @var{x} and @var{y} arguments are ignored.
-## @seealso{image, imshow, __img__, __img_via_file__, image_viewer}
-## @end deftypefn
 
 function __img_via_file__ (x, y, im, zoom, command)
 
   ppm_name = tmpnam ();
   saveimage (ppm_name, im, "ppm");
 
   rm = sprintf ("rm -f \"%s\"", ppm_name);
 
diff --git a/scripts/miscellaneous/__xzip__.m b/scripts/miscellaneous/__xzip__.m
--- a/scripts/miscellaneous/__xzip__.m
+++ b/scripts/miscellaneous/__xzip__.m
@@ -13,26 +13,27 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{entries} =} _xzip_ (@var{commandname}, @var{extension}, @var{commandtemplate}, @var{files}, @var{outdir})
-## Compresses the list of files and/or directories specified in @var{files} 
+## @deftypefn {Function File} {@var{entries} =} __xzip__ (@var{commandname}, @var{extension}, @var{commandtemplate}, @var{files}, @var{outdir})
+## Undocumented internal function.
+## @end deftypefn
+
+## Compress the list of files and/or directories specified in @var{files} 
 ## with the external compression command @var{commandname}. The template 
 ## @var{commandtemplate} is used to actually start the command. Each file
 ## is compressed separately and a new file with the extension @var{extension} 
 ## is created and placed into the directory @var{outdir}. The original files 
 ## are not touched. Existing compressed files are silently overwritten. 
 ## This is an internal function. Do not use directly.
-## @seealso{gzip, bzip2}
-## @end deftypefn
 
 function entries = __xzip__ (commandname, extension, 
                              commandtemplate, files, outdir)
 
   if (nargin == 4 || nargin == 5)
     if (! ischar (extension) || length (extension) == 0)
       error ("__xzip__: extension has to be a string with finite length");
     endif
diff --git a/scripts/optimization/__all_opts__.m b/scripts/optimization/__all_opts__.m
--- a/scripts/optimization/__all_opts__.m
+++ b/scripts/optimization/__all_opts__.m
@@ -12,21 +12,23 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} __all_opts__ ()
-## internal function. Queries all options from all known optimization
-## functions and returns a list of possible values.
+## @deftypefn {Function File} {@var{names} =} __all_opts__ (@dots{})
+## Undocumented internal function.
 ## @end deftypefn
 
+## Query all options from all known optimization functions and return a
+## list of possible values.
+
 function names = __all_opts__ (varargin)
   
   persistent saved_names = {};
 
   ## do not clear this function
   mlock ();
 
   ## guard against recursive calls.
diff --git a/scripts/optimization/__dogleg__.m b/scripts/optimization/__dogleg__.m
--- a/scripts/optimization/__dogleg__.m
+++ b/scripts/optimization/__dogleg__.m
@@ -13,20 +13,22 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn{Function File} {@var{x}} = __dogleg__ (@var{r}, @var{b}, @var{x}, @var{d}, @var{delta})
-## Solves the double dogleg trust-region problem:
+## Undocumented internal function.
+## @end deftypefn
+
+## Solve the double dogleg trust-region problem:
 ## Minimize norm(r*x-b) subject to the constraint norm(d.*x) <= delta,
 ## x being a convex combination of the gauss-newton and scaled gradient.
-## @end deftypefn
 
 ## TODO: error checks
 ## TODO: handle singularity, or leave it up to mldivide?
 
 function x = __dogleg__ (r, b, d, delta)
   ## Get Gauss-Newton direction.
   x = r \ b;
   xn = norm (d .* x);
diff --git a/scripts/optimization/__fdjac__.m b/scripts/optimization/__fdjac__.m
--- a/scripts/optimization/__fdjac__.m
+++ b/scripts/optimization/__fdjac__.m
@@ -13,16 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn{Function File} {[@var{fval}, @var{fjac}]} =  __fdjac__ (@var{fcn}, @var{x}, @var{err})
+## Undocumented internal function.
 ## @end deftypefn
 
 function [fvec, fjac] = __fdjac__ (fcn, x, err = 0)
   err = sqrt (max (eps, err));
   fvec = fcn (x);
   fv = fvec(:);
   h = abs (x(:))*err;
   h(h == 0) = err;
diff --git a/scripts/path/__extractpath__.m b/scripts/path/__extractpath__.m
--- a/scripts/path/__extractpath__.m
+++ b/scripts/path/__extractpath__.m
@@ -14,22 +14,23 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{val} =} __extractpath__ (@var{file})
+## Undocumented internal function.
+## @end deftypefn
+
 ## Extact the path information from the script/function @var{file},
 ## created by @file{savepath.m}. If @var{file} is omitted, 
 ## @file{~/.octaverc} is used.  If successful, @code{__extractpath__}
 ## returns the path specified in @var{file}.
-## @seealso{path, addpath, rmpath, genpath, pathdef, savepath, pathsep}
-## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 
 function specifiedpath = __extractpath__ (savefile)
 
   ## The majority of this code was borrowed from savepath.m.
   ## FIXME -- is there some way to share the common parts instead of
   ## duplicating?
diff --git a/scripts/plot/__add_datasource__.m b/scripts/plot/__add_datasource__.m
--- a/scripts/plot/__add_datasource__.m
+++ b/scripts/plot/__add_datasource__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## Undocumented internal function
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{newargs} =} __add_datasource__ (@var{fcn}, @var{h}, @var{data}, @var{varargin})
+## Undocumented internal function.
+## @end deftypefn
 
 function newargs = __add_datasource__ (fcn, h, data, varargin)
 
   if (nargin < 3)
     error ("internal error");
   endif
 
   if (ischar (data))
diff --git a/scripts/plot/__area__.m b/scripts/plot/__area__.m
--- a/scripts/plot/__area__.m
+++ b/scripts/plot/__area__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __area__ (@var{ax}, @var{x}, @var{y}, @var{bv}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 function retval = __area__ (ax, x, y, bv, varargin)
 
   y0 = bv * ones (1, rows (y));
   y0 = zeros (1, rows (y));
   retval = [];
   for i = 1: size (y, 2);
     hg = hggroup ();
diff --git a/scripts/plot/__axes_limits__.m b/scripts/plot/__axes_limits__.m
--- a/scripts/plot/__axes_limits__.m
+++ b/scripts/plot/__axes_limits__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __axes_limits__ (@var{fcn}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 function retval = __axes_limits__ (fcn, varargin)
 
   retval = [];
 
   fcnmode = sprintf ("%smode", fcn);
 
   [h, varargin, nargin] = __plt_get_axis_arg__ (fcn, varargin{:});
diff --git a/scripts/plot/__axis_label__.m b/scripts/plot/__axis_label__.m
--- a/scripts/plot/__axis_label__.m
+++ b/scripts/plot/__axis_label__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __axis_label__ (@var{caller}, @var{txt}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __axis_label__ (caller, txt, varargin)
 
   if (ischar (txt))
     ca = gca ();
 
diff --git a/scripts/plot/__bar__.m b/scripts/plot/__bar__.m
--- a/scripts/plot/__bar__.m
+++ b/scripts/plot/__bar__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __bar__ (@var{vertical}, @var{func}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function varargout = __bar__ (vertical, func, varargin)
 
   [h, varargin] = __plt_get_axis_arg__ ((nargout > 1), func, varargin{:});
 
   ## Slightly smaller than 0.8 to avoid clipping issue in gnuplot 4.0
diff --git a/scripts/plot/__bars__.m b/scripts/plot/__bars__.m
--- a/scripts/plot/__bars__.m
+++ b/scripts/plot/__bars__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __bars__ (@var{ax}, @var{vertical}, @var{x}, @var{y}, @var{xb}, @var{yb}, @var{width}, @var{group}, @var{have_color_spec}, @var{base_value}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function tmp = __bars__ (ax, vertical, x, y, xb, yb, width, group, have_color_spec, base_value, varargin)
 
   ycols = columns (y);
   clim = get (ax, "clim");
   tmp = [];
diff --git a/scripts/plot/__clabel__.m b/scripts/plot/__clabel__.m
--- a/scripts/plot/__clabel__.m
+++ b/scripts/plot/__clabel__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{h} =} __clabel__ (@var{c}, @var{v}, @var{hparent}, @var{label_spacing}, @var{z}, @var{varargin})
 ## Undocumented internal function.
+## @end deftypefn
 
 function h = __clabel__ (c, v, hparent, label_spacing, z, varargin)
   ## FIXME
   ## Assume that the plot size is 4 by 3 inches.
   lims = axis ();
   xspacing = 72 * 4 / abs(lims(1) - lims(2));
   yspacing = 72 * 3 / abs(lims(3) - lims(4));
 
diff --git a/scripts/plot/__contour__.m b/scripts/plot/__contour__.m
--- a/scripts/plot/__contour__.m
+++ b/scripts/plot/__contour__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{c}, @var{hg}] =} __contour__ (@dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 function [c, hg] = __contour__ (varargin)
   ax = varargin{1};
   zlevel = varargin{2};
   filled = "off";
 
   linespec.linestyle = "-";
   linespec.color = "auto";
diff --git a/scripts/plot/__default_plot_options__.m b/scripts/plot/__default_plot_options__.m
--- a/scripts/plot/__default_plot_options__.m
+++ b/scripts/plot/__default_plot_options__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{options} =} __default_plot_options__ ()
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function options = __default_plot_options__ ()
 
   options.key = "";
   options.color = [];
   options.linestyle = "-";
diff --git a/scripts/plot/__errcomm__.m b/scripts/plot/__errcomm__.m
--- a/scripts/plot/__errcomm__.m
+++ b/scripts/plot/__errcomm__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __errcomm__ (@var{caller}, @var{p}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Created: 20.02.2001
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
 function retval = __errcomm__ (caller, p, varargin)
 
   if (nargin < 4)
diff --git a/scripts/plot/__errplot__.m b/scripts/plot/__errplot__.m
--- a/scripts/plot/__errplot__.m
+++ b/scripts/plot/__errplot__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{h} =} __errplot__ (@var{fstr}, @var{p}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Created: 18.7.2000
 ## Author: Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 ## Keywords: errorbar, plotting
 
 function h = __errplot__ (fstr, p, a1, a2, a3, a4, a5, a6)
 
   if (nargin < 4 || nargin > 8) # at least two data arguments needed
diff --git a/scripts/plot/__ezplot__.m b/scripts/plot/__ezplot__.m
--- a/scripts/plot/__ezplot__.m
+++ b/scripts/plot/__ezplot__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## Undocumented internal function
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{h}, @var{needusage}] =} __ezplot__ (@var{pfunc}, @var{varargin})
+## Undocumented internal function.
+## @end deftypefn
 
 function [h, needusage] = __ezplot__ (pfunc, varargin)
 
   func = cstrcat ("ez", pfunc);
   if (strncmp (pfunc, "contour", 7))
     iscontour = true;
   else
     iscontour = false;
diff --git a/scripts/plot/__gnuplot_has_feature__.m b/scripts/plot/__gnuplot_has_feature__.m
--- a/scripts/plot/__gnuplot_has_feature__.m
+++ b/scripts/plot/__gnuplot_has_feature__.m
@@ -10,17 +10,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ## 
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{has_feature} = } __gnuplot_has_feature__ (@var{feature})
+## @deftypefn {Function File} {@var{has_feature} =} __gnuplot_has_feature__ (@var{feature})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Created: 2009-01-27
 
 function res = __gnuplot_has_feature__ (feature)
   persistent features has_features
diff --git a/scripts/plot/__gnuplot_version__.m b/scripts/plot/__gnuplot_version__.m
--- a/scripts/plot/__gnuplot_version__.m
+++ b/scripts/plot/__gnuplot_version__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{version} =} __gnuplot_version__ ()
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Return the version of gnuplot we are using.  Note that we do not
 ## attempt to handle the case of the user switching to different
 ## versions of gnuplot during the same session.
 
 function version = __gnuplot_version__ ()
 
   persistent __version__ = "";
diff --git a/scripts/plot/__go_close_all__.m b/scripts/plot/__go_close_all__.m
--- a/scripts/plot/__go_close_all__.m
+++ b/scripts/plot/__go_close_all__.m
@@ -11,15 +11,18 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __go_close_all__ ()
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function __go_close_all__ ()
   close ("all", "hidden");
 endfunction
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __go_draw_axes__ (@var{h}, @var{plot_stream}, @var{enhanced}, @var{mono})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function __go_draw_axes__ (h, plot_stream, enhanced, mono)
 
   if (nargin == 4)
 
     axis_obj = __get__ (h);
diff --git a/scripts/plot/__go_draw_figure__.m b/scripts/plot/__go_draw_figure__.m
--- a/scripts/plot/__go_draw_figure__.m
+++ b/scripts/plot/__go_draw_figure__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __go_draw_figure__ (@var{h}, @var{plot_stream}, @var{enhanced}, @var{mono})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function __go_draw_figure__ (h, plot_stream, enhanced, mono)
 
   if (nargin == 4)
     htype = get (h, "type");
     if (strcmp (htype, "figure"))
diff --git a/scripts/plot/__line__.m b/scripts/plot/__line__.m
--- a/scripts/plot/__line__.m
+++ b/scripts/plot/__line__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{h} =} __line__ (@var{p}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## __line__ (p, x, y, z)
 ## Create line object from x, y, and z with parent p.
 ## Return handle to line object.
 
 ## Author: jwe
 
 function h = __line__ (p, varargin)
diff --git a/scripts/plot/__next_line_color__.m b/scripts/plot/__next_line_color__.m
--- a/scripts/plot/__next_line_color__.m
+++ b/scripts/plot/__next_line_color__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{rgb} =} __next_line_color__ (@var{reset})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Return the next line color in the rotation.
 
 ## Author: jwe
 
 function rgb = __next_line_color__ (reset)
 
   persistent color_rotation;
diff --git a/scripts/plot/__patch__.m b/scripts/plot/__patch__.m
--- a/scripts/plot/__patch__.m
+++ b/scripts/plot/__patch__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{h}, @var{fail}] =} __patch__ (@var{p}, @dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## __patch__ (p, x, y, c)
 ## Create patch object from x and y with color c and parent p.
 ## Return handle to patch object.
 
 ## Author: Kai Habel
 
 function [h, fail] = __patch__ (p, varargin)
diff --git a/scripts/plot/__plr1__.m b/scripts/plot/__plr1__.m
--- a/scripts/plot/__plr1__.m
+++ b/scripts/plot/__plr1__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plr1__ (@var{h}, @var{theta}, @var{fmt})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plr1__ (h, theta, fmt)
 
   if (nargin != 3)
     print_usage ();
   endif
diff --git a/scripts/plot/__plr2__.m b/scripts/plot/__plr2__.m
--- a/scripts/plot/__plr2__.m
+++ b/scripts/plot/__plr2__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plr2__ (@var{h}, @var{theta}, @var{rho}, @var{fmt})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plr2__ (h, theta, rho, fmt)
 
   if (nargin != 4)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt1__.m b/scripts/plot/__plt1__.m
--- a/scripts/plot/__plt1__.m
+++ b/scripts/plot/__plt1__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt1__ (@var{h}, @var{x1}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt1__ (h, x1, options, properties)
 
   if (nargin < 2 || nargin > 4)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2__.m b/scripts/plot/__plt2__.m
--- a/scripts/plot/__plt2__.m
+++ b/scripts/plot/__plt2__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2__ (@var{h}, @var{x1}, @var{x2}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2__ (h, x1, x2, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2mm__.m b/scripts/plot/__plt2mm__.m
--- a/scripts/plot/__plt2mm__.m
+++ b/scripts/plot/__plt2mm__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2mm__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2mm__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2mv__.m b/scripts/plot/__plt2mv__.m
--- a/scripts/plot/__plt2mv__.m
+++ b/scripts/plot/__plt2mv__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2mv__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2mv__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2ss__.m b/scripts/plot/__plt2ss__.m
--- a/scripts/plot/__plt2ss__.m
+++ b/scripts/plot/__plt2ss__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2ss__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2ss__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2sv__.m b/scripts/plot/__plt2sv__.m
--- a/scripts/plot/__plt2sv__.m
+++ b/scripts/plot/__plt2sv__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2sv__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2sv__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2vm__.m b/scripts/plot/__plt2vm__.m
--- a/scripts/plot/__plt2vm__.m
+++ b/scripts/plot/__plt2vm__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2vm__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2vm__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2vs__.m b/scripts/plot/__plt2vs__.m
--- a/scripts/plot/__plt2vs__.m
+++ b/scripts/plot/__plt2vs__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2vs__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2vs__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt2vv__.m b/scripts/plot/__plt2vv__.m
--- a/scripts/plot/__plt2vv__.m
+++ b/scripts/plot/__plt2vv__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt2vv__ (@var{h}, @var{x}, @var{y}, @var{options}, @var{properties})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt2vv__ (h, x, y, options, properties)
 
   if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
diff --git a/scripts/plot/__plt__.m b/scripts/plot/__plt__.m
--- a/scripts/plot/__plt__.m
+++ b/scripts/plot/__plt__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __plt__ (@var{caller}, @var{h}, @var{varargin})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function retval = __plt__ (caller, h, varargin)
 
   nargs = nargin - 2;
 
   if (nargs > 0)
diff --git a/scripts/plot/__plt_get_axis_arg__.m b/scripts/plot/__plt_get_axis_arg__.m
--- a/scripts/plot/__plt_get_axis_arg__.m
+++ b/scripts/plot/__plt_get_axis_arg__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{h}, @var{varargin}, @var{narg}] =} __plt_get_axis_arg__ (@var{caller}, @var{varargin})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Author: jwe
 
 function [h, varargin, narg] = __plt_get_axis_arg__ (caller, varargin)
 
   if (islogical (caller))
     nogca = caller;
     caller = varargin{1};
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {[@var{options}, @var{valid}] =} __pltopt1__ (@var{caller}, @var{opt}, @var{err_on_invalid})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## Really decode plot option strings.
 
 ## Author: Rick Niles <niles@axp745.gsfc.nasa.gov>
 ## Adapted-By: jwe
 ## Maintainer: jwe
 
 function [options, valid] = __pltopt1__ (caller, opt, err_on_invalid)
diff --git a/scripts/plot/__pltopt__.m b/scripts/plot/__pltopt__.m
--- a/scripts/plot/__pltopt__.m
+++ b/scripts/plot/__pltopt__.m
@@ -12,17 +12,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {} __pltopt__ (@var{caller}, @var{opt})
 ## Undocumented internal function.
+## @end deftypefn
 
 ## @deftypefn {Function File} {} __pltopt__ (@var{caller}, @var{opt})
 ##
 ## Decode plot option strings.
 ##
 ## @var{opt} can currently be some combination of the following:
 ##
 ## @table @code
diff --git a/scripts/plot/__quiver__.m b/scripts/plot/__quiver__.m
--- a/scripts/plot/__quiver__.m
+++ b/scripts/plot/__quiver__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## Undocumented internal function
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{hg} =} __quiver__ (@dots{})
+## Undocumented internal function.
+## @end deftypefn
 
 function hg = __quiver__ (varargin)
 
   h = varargin{1};
   is3d = varargin{2};
 
   autoscale = 0.9;
   arrowsize = 0.2;
diff --git a/scripts/plot/__scatter__.m b/scripts/plot/__scatter__.m
--- a/scripts/plot/__scatter__.m
+++ b/scripts/plot/__scatter__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{hg} =} __scatter__ (@dots{})
 ## Undocumented internal function.
+## @end deftypefn
 
 function hg = __scatter__ (varargin)
 
   h = varargin{1};
   nd = varargin{2};
   fcn = varargin{3};
   x = varargin{4}(:);
   y = varargin{5}(:);
diff --git a/scripts/plot/__stem__.m b/scripts/plot/__stem__.m
--- a/scripts/plot/__stem__.m
+++ b/scripts/plot/__stem__.m
@@ -11,17 +11,20 @@
 ## WITHOUT ANY WARRANTY; without even the implied warranty of
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
-## Undocumented internal function
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{h} =} __stem__ (@var{have_z}, @var{varargin})
+## Undocumented internal function.
+## @end deftypefn
 
 ## Author: Michel D. Schmid <michaelschmid@users.sourceforge.net>
 ## Adapted-by: jwe
 
 function h = __stem__ (have_z, varargin)
 
   if (have_z)
     caller = "stem3";
diff --git a/scripts/startup/__finish__.m b/scripts/startup/__finish__.m
--- a/scripts/startup/__finish__.m
+++ b/scripts/startup/__finish__.m
@@ -13,26 +13,25 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} __finish__ ()
-## Checks for the existence of the function/script, @file{finish}, in the 
-## path or current working directory and executes it. This function is
-## intended to be excecuted upon a clean exit form Octave.
-##
-## This functin is intended to be called upon a clean exit from Octave.
-## This is accomplished in the system script @file{startup/octaverc} by 
-## use of the built in function @code{onexit}.
-## @seealso{octaverc, onexit}
+## Undocumented internal function.
 ## @end deftypefn
 
+## Check for the existence of the function/script, @file{finish}, in the 
+## path or current working directory and execute it.  This function is
+## intended to be excecuted upon a clean exit form Octave.  This is
+## accomplished in the system script @file{startup/octaverc} by use of
+## the built-in function @code{onexit}.
+
 function __finish__ ()
 
   if (exist ("finish", "file"))
     ## No arg list here since finish might be a script.
     finish;
   endif
 
 endfunction
diff --git a/scripts/statistics/base/__quantile__.m b/scripts/statistics/base/__quantile__.m
--- a/scripts/statistics/base/__quantile__.m
+++ b/scripts/statistics/base/__quantile__.m
@@ -14,24 +14,26 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{q} =} __quantile__ (@var{x}, @var{p})
 ## @deftypefnx {Function File} {@var{q} =} __quantile__ (@var{x}, @var{p}, @var{method})
+## Undocumented internal function.
+## @end deftypefn
+
 ## For the cumulative probability values in @var{p}, compute the 
 ## quantiles, @var{q} (the inverse of the cdf), for the sample, @var{x}.
 ##
 ## The optional input, @var{method}, refers to nine methods available in R
 ## (http://www.r-project.org/). The default is @var{method} = 7. For more 
 ## detail, see `help quantile'.
 ## @seealso{prctile, quantile, statistics}
-## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Vectorized version: Jaroslav Hajek <highegg@gmail.com>
 ## Description: Quantile function of a empirical samples
 
 function inv = __quantile__ (x, p, method = 5)
 
   if (nargin < 2 || nargin > 3)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-02-19  John W. Eaton  <jwe@octave.org>
+
+	* data.cc, graphics.cc, help.cc, lex.l, load-path.cc, parse.y:
+	Consistent doc strings for internal functions.
+
 2009-02-18  John W. Eaton  <jwe@octave.org>
 
 	* ov.cc (convert_to_octave_idx_type_array): New static function.
 	(octave_value::octave_idx_type_vector_value): New function.
 	* ov.h (octave_value::octave_idx_type_vector_value): Provide decl.
 	* DLD-FUNCTIONS/qr.cc (Fqrdelete, Fqrinsert): Use it to convert
 	octave_value object to array of octave_idx_type values.
 
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -5619,24 +5619,26 @@ ordered lists.\n\
 %! [v, i] = sort (a);
 %! assert (i, [1, 4, 2, 5, 3])
 
 %!error <Invalid call to sort.*> sort ();
 %!error <Invalid call to sort.*> sort (1, 2, 3, 4);
 
 */
 
+// Sort the rows of the matrix @var{a} according to the order
+// specified by @var{mode}, which can either be `ascend' or `descend'
+// and return the index vector corresponding to the sort order.
+//
+// This function does not yet support sparse matrices.
+
 DEFUN (__sort_rows_idx__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} {} __sort_rows_idx__ (@var{a}, @var{mode})\n\
-Sort the rows of the matrix @var{a} according to the order specified\n\
-by @var{mode}, which can either be `ascend' or `descend'.\n\
-Returns the index vector.\n\
-\n\
-This function does not yet support sparse matrices.\n\
+Undocumented internal function.\n\
 @end deftypefn\n")
 {
   octave_value retval;
 
   int nargin = args.length ();
   sortmode smode = ASCENDING;
 
   if (nargin < 1 || nargin > 2 || (nargin == 2 && ! args(1).is_string ()))
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -4447,22 +4447,24 @@ values or lists respectively.\n\
 	retval = Cell (vlist);
       else if (len == 1)
 	retval = vlist(0);
     }
 
   return retval;
 }
 
+// Return all properties from the graphics handle @var{h}.
+// If @var{h} is a vector, return a cell array including the
+// property values or lists respectively.
+
 DEFUN (__get__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __get__ (@var{h})\n\
-Return all properties from the graphics handle @var{h}.\n\
-If @var{h} is a vector, return a cell array including the property\n\
-values or lists respectively.\n\
+Undocumented internal function.\n\
 @end deftypefn")
 {
   gh_manager::autolock guard;
 
   octave_value retval;
   octave_value_list vlist;
 
   int nargin = args.length ();
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -730,17 +730,17 @@ Returns the help text of a given functio
 This function returns the raw help text @var{text} and an indication of\n\
 its format for the function @var{name}. The format indication @var{format}\n\
 is a string that can be either @t{\"texinfo\"}, @t{\"html\"}, or\n\
 @t{\"plain text\"}.\n\
 \n\
 To convert the help text to other formats, use the @code{makeinfo} function.\n\
 \n\
 @seealso{makeinfo}\n\
-@end deftypefn\n")
+@end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
     {
       const std::string name = args (0).string_value ();
 
       if (! error_state)
@@ -757,42 +757,48 @@ To convert the help text to other format
 	error ("get_help_text: invalid input");
     }
   else
     print_usage ();
 
   return retval;
 }
 
-DEFUN (__operators__, , , "-*- texinfo -*-\n\
+// Return a cell array of strings containing the names of all
+// operators.
+
+DEFUN (__operators__, , ,
+  "-*- texinfo -*-\n\
 @deftypefn {Function File} __operators__ ()\n\
-Return a cell array of strings containing the names of all operators.\n\
-\n\
-This is an internal function and should not be used directly.\n\
-@end deftypefn\n")
+Undocumented internal function.\n\
+@end deftypefn")
 {
   return octave_value (Cell (names (operators_map)));
 }
 
-DEFUN (__keywords__, , , "-*- texinfo -*-\n\
+// Return a cell array of strings containing the names of all
+// keywords.
+
+DEFUN (__keywords__, , ,
+  "-*- texinfo -*-\n\
 @deftypefn {Function File} __keywords__ ()\n\
-Return a cell array of strings containing the names of all keywords.\n\
-\n\
-This is an internal function and should not be used directly.\n\
-@end deftypefn\n")
+Undocumented internal function.\n\
+@end deftypefn")
 {
   return octave_value (Cell (names (keywords_map)));
 }
 
-DEFUN (__builtins__, , , "-*- texinfo -*-\n\
+// Return a cell array of strings containing the names of all builtin
+// functions.
+
+DEFUN (__builtins__, , ,
+  "-*- texinfo -*-\n\
 @deftypefn {Function File} __builtins__ ()\n\
-Return a cell array of strings containing the names of all builtin functions.\n\
-\n\
-This is an internal function and should not be used directly.\n\
-@end deftypefn\n")
+Undocumented internal function.\n\
+@end deftypefn")
 {
   const string_vector bif = symbol_table::built_in_function_names ();
 
   return octave_value (Cell (bif));
 }
 
 static std::string
 do_which (const std::string& name, std::string& type)
@@ -909,28 +915,26 @@ file_is_in_dir (const std::string filena
           num_seps ++;
       
       return (num_seps <= max_allowed_seps);
     }
   else
     return false;
 }
 
-DEFUN (__list_functions__, args, , "-*- texinfo -*-\n\
+// Return a cell array of strings containing the names of all
+// functions available in DIRECTORY.  If no directory is given, search
+// the current path.
+
+DEFUN (__list_functions__, args, ,
+  "-*- texinfo -*-\n\
 @deftypefn {Function File} {@var{retval} =} __list_functions__ ()\n\
 @deftypefnx{Function File} {@var{retval} =} __list_functions__ (@var{directory})\n\
-Return the functions available in a given directory.\n\
-\n\
-The function returns a cell array of strings containing the names of all\n\
-functions available in said directory. If no directory is given, the current\n\
-path is searched.\n\
-\n\
-This is an internal function and should not be used directly.\n\
-@seealso{path}\n\
-@end deftypefn\n")
+Undocumented internal function.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   // Get list of functions
   const string_vector ffl = load_path::fcn_names ();
   const int ffl_len = ffl.length ();
   const string_vector afl = autoloaded_functions ();
   const int afl_len = afl.length ();
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -3552,35 +3552,38 @@ lexer_debug (const char *pattern, const 
   display_state ();
 
   std::cerr << "P: " << pattern << std::endl;
   std::cerr << "T: " << text << std::endl;
 }
 
 DEFUN (__display_tokens__, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} __display_tokens__\n\
+@deftypefn {Built-in Function} {} __display_tokens__ ()\n\
 Query or set the internal variable that determines whether Octave's\n\
 lexer displays tokens as they are read.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (display_tokens);
 }
 
 DEFUN (__token_count__, , ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} __token_count__\n\
+@deftypefn {Built-in Function} {} __token_count__ ()\n\
 Number of language tokens processed since Octave startup.\n\
 @end deftypefn")
 {
   return octave_value (Vtoken_count);
 }
 
 DEFUN (__lexer_debug_flag__, args, nargout,
-  "Undocumented internal function.")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {@var{old_val} =} __lexer_debug_flag__ (@var{new_val}))\n\
+Undocumented internal function.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   retval = set_internal_variable (lexer_debug_flag, args, nargout,
            			  "__lexer_debug_flag__");
 
   return retval;
 }
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -1825,24 +1825,25 @@ Restore Octave's path to it's initial st
 @seealso{path, addpath, rmpath, genpath, pathdef, savepath, pathsep}\n\
 @end deftypefn")
 {
   load_path::initialize (true);
 
   return octave_value (load_path::system_path ());
 }
 
+// Return Octave's original default list of directories in which to
+// search for function files.  This corresponds to the path that
+// exists prior to running the system's octaverc file or the user's
+// ~/.octaverc file
+
 DEFUN (__pathorig__, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{val} =} __pathorig__ ()\n\
-Return Octave's original default list of directories in which to search\n\
-for function files. This corresponds to the path that exists prior to\n\
-running the system's @file{octaverc}, or the users' @file{~/.octaverc}\n\
-@seealso{path, addpath, rmpath, genpath, savepath, pathsep, \n\
-restoredefaultpath}\n\
+Undocumented internal function.\n\
 @end deftypefn")
 {
   return octave_value (load_path::system_path ());
 }
 
 DEFUN (path, args, nargout,
     "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} path (@dots{})\n\
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -4202,17 +4202,20 @@ context @var{context}, which may be eith
     }
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (__parser_debug_flag__, args, nargout,
-  "Undocumented internal function.")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {@var{old_val} =} __parser_debug_flag__ (@var{new_val}))\n\
+Undocumented internal function.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   bool debug_flag = octave_debug;
 
   retval = set_internal_variable (debug_flag, args, nargout,
            			  "__parser_debug_flag__");
 
