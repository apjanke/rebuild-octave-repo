# HG changeset patch
# User Rik <rik@octave.org>
# Date 1511330445 28800
#      Tue Nov 21 22:00:45 2017 -0800
# Node ID cf33c1b910b764fb1f606cc21d8a7d864d2eafc6
# Parent  8612ab9fc56429c219a3403926d1cdc7e57ff4b6
maint: Correct typo in comment "Throw-away" => "Throw away"

* CMatrix.cc, CSparse.cc, dMatrix.cc, dSparse.cc, fCMatrix.cc, fMatrix.cc:
Correct typo in comment "Throw-away" => "Throw away".

diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -772,17 +772,17 @@ ComplexMatrix::tinverse (MatrixType& mat
   F77_XFCN (ztrtri, ZTRTRI,(F77_CONST_CHAR_ARG2 (&uplo, 1),
                             F77_CONST_CHAR_ARG2 (&udiag, 1),
                             nr, F77_DBLE_CMPLX_ARG (tmp_data), nr, tmp_info
                             F77_CHAR_ARG_LEN (1)
                             F77_CHAR_ARG_LEN (1)));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT ztrcon_info = 0;
       char job = '1';
 
@@ -858,17 +858,17 @@ ComplexMatrix::finverse (MatrixType& mat
   else
     {
       F77_XFCN (zgetrf, ZGETRF, (nc, nc, F77_DBLE_CMPLX_ARG (tmp_data), nr, pipvt,
                                  tmp_info));
 
       info = tmp_info;
     }
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT zgecon_info = 0;
 
       // Now calculate the condition number for non-singular matrix.
@@ -1439,17 +1439,17 @@ ComplexMatrix::determinant (MatrixType& 
       else
         {
           F77_XFCN (zgetrf, ZGETRF, (nr, nr, F77_DBLE_CMPLX_ARG (tmp_data), nr, pipvt,
                                    tmp_info));
 
           info = tmp_info;
         }
 
-      // Throw-away extra info LAPACK gives so as to not change output.
+      // Throw away extra info LAPACK gives so as to not change output.
       rcon = 0.0;
       if (info != 0)
         {
           info = -1;
           retval = ComplexDET ();
         }
       else
         {
@@ -1902,17 +1902,17 @@ ComplexMatrix::fsolve (MatrixType& matty
           F77_INT tmp_info = 0;
 
           F77_XFCN (zpotrf, ZPOTRF, (F77_CONST_CHAR_ARG2 (&job, 1), nr,
                                      F77_DBLE_CMPLX_ARG (tmp_data), nr, tmp_info
                                      F77_CHAR_ARG_LEN (1)));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               mattype.mark_as_unsymmetric ();
               typ = MatrixType::Full;
             }
@@ -1997,17 +1997,17 @@ ComplexMatrix::fsolve (MatrixType& matty
           else
             {
               F77_XFCN (zgetrf, ZGETRF, (nr, nr, F77_DBLE_CMPLX_ARG (tmp_data), nr, pipvt,
                                          tmp_info));
 
               info = tmp_info;
             }
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               if (sing_handler)
                 sing_handler (rcon);
               else
diff --git a/liboctave/array/CSparse.cc b/liboctave/array/CSparse.cc
--- a/liboctave/array/CSparse.cc
+++ b/liboctave/array/CSparse.cc
@@ -4471,17 +4471,17 @@ SparseComplexMatrix::bsolve (MatrixType&
           F77_INT tmp_err = 0;
 
           F77_XFCN (zgbtrf, ZGBTRF, (tmp_nr, tmp_nr, n_lower, n_upper,
                                      F77_DBLE_CMPLX_ARG (tmp_data),
                                      ldm, pipvt, tmp_err));
 
           err = tmp_err;
 
-          // Throw-away extra info LAPACK gives so as to not
+          // Throw away extra info LAPACK gives so as to not
           // change output.
           if (err != 0)
             {
               rcond = 0.0;
               err = -2;
 
               if (sing_handler)
                 {
diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -486,17 +486,17 @@ Matrix::tinverse (MatrixType& mattype, o
   F77_XFCN (dtrtri, DTRTRI, (F77_CONST_CHAR_ARG2 (&uplo, 1),
                              F77_CONST_CHAR_ARG2 (&udiag, 1),
                              nr, tmp_data, nr, tmp_info
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (1)));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT dtrcon_info = 0;
       char job = '1';
 
@@ -564,17 +564,17 @@ Matrix::finverse (MatrixType& mattype, o
   if (calc_cond)
     anorm = retval.abs ().sum ().row (static_cast<octave_idx_type>(0))
             .max ();
 
   F77_XFCN (dgetrf, DGETRF, (nc, nc, tmp_data, nr, pipvt, tmp_info));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT dgecon_info = 0;
 
       // Now calculate the condition number for non-singular matrix.
@@ -1125,17 +1125,17 @@ Matrix::determinant (MatrixType& mattype
       // Calculate the norm of the matrix, for later use.
       double anorm = 0;
       if (calc_cond) anorm = xnorm (*this, 1);
 
       F77_XFCN (dgetrf, DGETRF, (nr, nr, tmp_data, nr, pipvt, tmp_info));
 
       info = tmp_info;
 
-      // Throw-away extra info LAPACK gives so as to not change output.
+      // Throw away extra info LAPACK gives so as to not change output.
       rcon = 0.0;
       if (info != 0)
         {
           info = -1;
           retval = DET ();
         }
       else
         {
@@ -1576,17 +1576,17 @@ Matrix::fsolve (MatrixType& mattype, con
           F77_INT tmp_info = 0;
 
           F77_XFCN (dpotrf, DPOTRF, (F77_CONST_CHAR_ARG2 (&job, 1), nr,
                                      tmp_data, nr, tmp_info
                                      F77_CHAR_ARG_LEN (1)));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               mattype.mark_as_unsymmetric ();
               typ = MatrixType::Full;
             }
@@ -1664,17 +1664,17 @@ Matrix::fsolve (MatrixType& mattype, con
           F77_INT *piz = iz.fortran_vec ();
 
           F77_INT tmp_info = 0;
 
           F77_XFCN (dgetrf, DGETRF, (nr, nr, tmp_data, nr, pipvt, tmp_info));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               if (sing_handler)
                 sing_handler (rcon);
               else
diff --git a/liboctave/array/dSparse.cc b/liboctave/array/dSparse.cc
--- a/liboctave/array/dSparse.cc
+++ b/liboctave/array/dSparse.cc
@@ -4430,17 +4430,17 @@ SparseMatrix::bsolve (MatrixType& mattyp
 
           F77_INT tmp_err = 0;
 
           F77_XFCN (dgbtrf, DGBTRF, (tmp_nr, tmp_nr, n_lower, n_upper,
                                      tmp_data, ldm, pipvt, tmp_err));
 
           err = tmp_err;
 
-          // Throw-away extra info LAPACK gives so as to not
+          // Throw away extra info LAPACK gives so as to not
           // change output.
           if (err != 0)
             {
               err = -2;
               rcond = 0.0;
 
               if (sing_handler)
                 {
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -775,17 +775,17 @@ FloatComplexMatrix::tinverse (MatrixType
   F77_XFCN (ctrtri, CTRTRI, (F77_CONST_CHAR_ARG2 (&uplo, 1),
                              F77_CONST_CHAR_ARG2 (&udiag, 1),
                              nr, F77_CMPLX_ARG (tmp_data), nr, tmp_info
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (1)));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT ztrcon_info = 0;
       char job = '1';
 
@@ -860,17 +860,17 @@ FloatComplexMatrix::finverse (MatrixType
     info = -1;
   else
     {
       F77_XFCN (cgetrf, CGETRF, (nc, nc, F77_CMPLX_ARG (tmp_data), nr, pipvt, tmp_info));
 
       info = tmp_info;
     }
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT cgecon_info = 0;
 
       // Now calculate the condition number for non-singular matrix.
@@ -1438,17 +1438,17 @@ FloatComplexMatrix::determinant (MatrixT
         info = -1;
       else
         {
           F77_XFCN (cgetrf, CGETRF, (nr, nr, F77_CMPLX_ARG (tmp_data), nr, pipvt, tmp_info));
 
           info = tmp_info;
         }
 
-      // Throw-away extra info LAPACK gives so as to not change output.
+      // Throw away extra info LAPACK gives so as to not change output.
       rcon = 0.0;
       if (info != 0)
         {
           info = -1;
           retval = FloatComplexDET ();
         }
       else
         {
@@ -1908,17 +1908,17 @@ FloatComplexMatrix::fsolve (MatrixType& 
           F77_INT tmp_info = 0;
 
           F77_XFCN (cpotrf, CPOTRF, (F77_CONST_CHAR_ARG2 (&job, 1), nr,
                                      F77_CMPLX_ARG (tmp_data), nr, tmp_info
                                      F77_CHAR_ARG_LEN (1)));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               mattype.mark_as_unsymmetric ();
               typ = MatrixType::Full;
             }
@@ -2002,17 +2002,17 @@ FloatComplexMatrix::fsolve (MatrixType& 
             info = -2;
           else
             {
               F77_XFCN (cgetrf, CGETRF, (nr, nr, F77_CMPLX_ARG (tmp_data), nr, pipvt, tmp_info));
 
               info = tmp_info;
             }
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               if (sing_handler)
                 sing_handler (rcon);
               else
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -492,17 +492,17 @@ FloatMatrix::tinverse (MatrixType& matty
   F77_XFCN (strtri, STRTRI, (F77_CONST_CHAR_ARG2 (&uplo, 1),
                              F77_CONST_CHAR_ARG2 (&udiag, 1),
                              nr, tmp_data, nr, tmp_info
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (1)));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT dtrcon_info = 0;
       char job = '1';
 
@@ -570,17 +570,17 @@ FloatMatrix::finverse (MatrixType& matty
   if (calc_cond)
     anorm = retval.abs ().sum ().row (static_cast<octave_idx_type>(0))
             .max ();
 
   F77_XFCN (sgetrf, SGETRF, (nc, nc, tmp_data, nr, pipvt, tmp_info));
 
   info = tmp_info;
 
-  // Throw-away extra info LAPACK gives so as to not change output.
+  // Throw away extra info LAPACK gives so as to not change output.
   rcon = 0.0;
   if (info != 0)
     info = -1;
   else if (calc_cond)
     {
       F77_INT sgecon_info = 0;
 
       // Now calculate the condition number for non-singular matrix.
@@ -1131,17 +1131,17 @@ FloatMatrix::determinant (MatrixType& ma
       // Calculate the norm of the matrix, for later use.
       float anorm = 0;
       if (calc_cond) anorm = xnorm (*this, 1);
 
       F77_XFCN (sgetrf, SGETRF, (nr, nr, tmp_data, nr, pipvt, tmp_info));
 
       info = tmp_info;
 
-      // Throw-away extra info LAPACK gives so as to not change output.
+      // Throw away extra info LAPACK gives so as to not change output.
       rcon = 0.0;
       if (info != 0)
         {
           info = -1;
           retval = FloatDET ();
         }
       else
         {
@@ -1597,17 +1597,17 @@ FloatMatrix::fsolve (MatrixType& mattype
           F77_INT tmp_info = 0;
 
           F77_XFCN (spotrf, SPOTRF, (F77_CONST_CHAR_ARG2 (&job, 1), nr,
                                      tmp_data, nr, tmp_info
                                      F77_CHAR_ARG_LEN (1)));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               mattype.mark_as_unsymmetric ();
               typ = MatrixType::Full;
             }
@@ -1682,17 +1682,17 @@ FloatMatrix::fsolve (MatrixType& mattype
           F77_INT *piz = iz.fortran_vec ();
 
           F77_INT tmp_info = 0;
 
           F77_XFCN (sgetrf, SGETRF, (nr, nr, tmp_data, nr, pipvt, tmp_info));
 
           info = tmp_info;
 
-          // Throw-away extra info LAPACK gives so as to not change output.
+          // Throw away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               if (sing_handler)
                 sing_handler (rcon);
               else
