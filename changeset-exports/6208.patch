# HG changeset patch
# User jwe
# Date 1165436599 0
#      Wed Dec 06 20:23:19 2006 +0000
# Node ID 323be5eeed1f9ba69f163a36e12c5440452794cf
# Parent  3c92b8d892dd62c20b33bdeeaa1cb0f15d2c6d42
[project @ 2006-12-06 20:23:18 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2006-12-06  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* acx_blas.m4, acx_lapack.m4: Handle f2c calling convention.
+
 2006-12-05  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Don't check for strptime on *-apple-darwin* systems.
 
 2006-11-28  John W. Eaton  <jwe@octave.org>
 
 	* mkoctfile.in: Construct default output file from basename of
 	input file name.
diff --git a/acx_blas.m4 b/acx_blas.m4
--- a/acx_blas.m4
+++ b/acx_blas.m4
@@ -42,18 +42,23 @@ AC_ARG_WITH(blas,
 case $with_blas in
 	yes | "") ;;
 	no) acx_blas_ok=disable ;;
 	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
 	*) BLAS_LIBS="-l$with_blas" ;;
 esac
 
 # Get fortran linker names of BLAS functions to check for.
-AC_F77_FUNC(sgemm)
-AC_F77_FUNC(dgemm)
+if $have_fortran_compiler; then 
+  AC_F77_FUNC(sgemm)
+  AC_F77_FUNC(dgemm)
+elif $have_f2c; then
+  sgemm=sgemm_
+  dgemm=dgemm_
+fi
 
 acx_blas_save_LIBS="$LIBS"
 LIBS="$LIBS $FLIBS"
 
 # First, check BLAS_LIBS environment variable
 if test $acx_blas_ok = no; then
 if test "x$BLAS_LIBS" != x; then
 	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
diff --git a/acx_lapack.m4 b/acx_lapack.m4
--- a/acx_lapack.m4
+++ b/acx_lapack.m4
@@ -39,17 +39,21 @@ AC_ARG_WITH(lapack,
 case $with_lapack in
         yes | "") ;;
         no) acx_lapack_ok=disable ;;
         -* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
         *) LAPACK_LIBS="-l$with_lapack" ;;
 esac
 
 # Get fortran linker name of LAPACK function to check for.
-AC_F77_FUNC(cheev)
+if $have_fortran_compiler; then
+  AC_F77_FUNC(cheev)
+elif $have_f2c; then
+  cheev=cheev_
+fi
 
 # We cannot use LAPACK if BLAS is not found
 if test "x$acx_blas_ok" != xyes; then
         acx_lapack_ok=noblas
 fi
 
 # First, check LAPACK_LIBS environment variable
 if test "x$LAPACK_LIBS" != x; then
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,21 +1,27 @@
+2006-12-06  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* lo-sysdep.cc (opendir): Avoid passing \\* to FindFirstFile.
+
+	* file-ops.cc (ops::canonicalize_file_name): Provide partial
+	implementatino for Windows.
+
 2006-12-06  David Bateman  <dbateman@free.fr>
 
-	* dSparse.cc (SparseMatrix::is_symmetric(void) const): Faster
-	implementation.
-	* CSparse.cc (SparseComplexMatrix::is_symmetric(void) const): ditto.
+	* dSparse.cc (SparseMatrix::is_symmetric): Faster implementation.
+	* CSparse.cc (SparseComplexMatrix::is_symmetric): Ditto.
 
 	* dMatrrix.cc (finverse): Old inverse method renamed inverse.
         (tinverse): New method for triangular matrices.
         (inverse): New function with matrix type probing.
         * dMatrix.h (finverse, tinverse, inverse): New and modified
         declarations.
-        * CMatrix.cc: ditto.
-        * CMatrix.h: ditto.
+        * CMatrix.cc: Ditto.
+        * CMatrix.h: Ditto.
 
 2006-12-06  John W. Eaton  <jwe@octave.org>
 
 	* strptime.c (day_of_the_week): Use code from current glibc sources.
 
 2006-12-05  John W. Eaton  <jwe@octave.org>
 
 	* lo-utils.cc (octave_read_double): If we see '+' or '-' but not
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -433,17 +433,17 @@ extern int errno;
   // relative names into absolute ones, so prepend the working
   // directory if the path is not absolute.
 
   std::string absolute_name
     = octave_env::make_absolute (name, octave_env::getcwd ());
 
   size_t resolved_size = absolute_name.length ();
 
-  while (1)
+  while (true)
     {
       resolved_size = 2 * resolved_size + 1;
 
       OCTAVE_LOCAL_BUFFER (char, resolved, resolved_size);
 
       int resolved_len
 	= ::resolvepath (absolute_name.c_str (), resolved, resolved_size);
 
@@ -452,16 +452,41 @@ extern int errno;
 
       if (resolved_len < resolved_size)
 	{
 	  retval = resolved;
 	  break;
 	}
     }
 
+#elif defined (__WIN32__)
+
+  int n = 1024;
+
+  std::string win_path (n, '\0');
+
+  while (true)
+    {
+      int status = GetFullPathName (name.c_str (), n, &win_path[0], NULL);
+
+      if (status == 0)
+        break;
+      else if (status < n)
+        {
+          win_path.resize (status);
+	  retval = win_path;
+	  break;
+        }
+      else
+        {
+          n *= 2;
+	  win_path.resize (n);
+        }
+    }
+
 #else
 
   // FIXME -- provide replacement here...
   retval = name;
 
 #endif
 
   if (retval.empty ())
diff --git a/liboctave/lo-sysdep.cc b/liboctave/lo-sysdep.cc
--- a/liboctave/lo-sysdep.cc
+++ b/liboctave/lo-sysdep.cc
@@ -113,17 +113,20 @@ struct __DIR
 
 DIR *
 opendir (const char *name)
 {
   DIR *d = static_cast<DIR *> (malloc (sizeof (DIR)));
   static char buffer[MAX_PATH];
 
   strncpy (buffer, name, MAX_PATH);
-  strncat (buffer, "\\*", MAX_PATH);
+  if (buffer[strnlen(buffer, MAX_PATH)-1] != '\\')
+    strncat (buffer, "\\*", MAX_PATH);
+  else
+    strncat (buffer, "*", MAX_PATH);
   d->current = buffer;
   d->hnd = FindFirstFile (buffer, &(d->fd));
   if (d->hnd == INVALID_HANDLE_VALUE)
     return 0;
   d->dirty = 1;
   return d;
 }
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -2,16 +2,19 @@ 2006-12-04  David Bateman  <dbateman@fre
 
 	* xpow.cc (xpow (const Matrix&, double)): Add matrix type probing
         to matrix inverse.
         (xpow (const ComplexMatrix&, double)): ditto.
         * DLD-FUNCTIONS/inv.cc (Finv): Add matrix type probing.
 
 2006-12-06  John W. Eaton  <jwe@octave.org>
 
+	* sysdep.cc: Include "Cell.h" here.
+	* input.h: Include "oct-obj.h", not "ov-list.h".
+
 2006-12-06  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* mappers.cc (install_mapper_functions): Undefine isascii before
 	the DEFUN_MAPPER for it.
 
 	* input.cc (get_user_input): Prevent out of bounds array access
 	when checking for EOL.
 
diff --git a/src/input.h b/src/input.h
--- a/src/input.h
+++ b/src/input.h
@@ -26,16 +26,17 @@ 02110-1301, USA.
 #if !defined (octave_input_h)
 #define octave_input_h 1
 
 #include <cstdio>
 
 #include <string>
 
 #include "oct-time.h"
+#include "oct-obj.h"
 #include "pager.h"
 
 class octave_value;
 
 extern int octave_read (char *buf, unsigned max_size);
 extern FILE *get_input_from_file (const std::string& name, int warn = 1);
 extern FILE *get_input_from_stdin (void);
 
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -72,16 +72,17 @@ 02110-1301, USA.
 
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "quit.h"
 
+#include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "ov.h"
 #include "pager.h"
 #include "sighandlers.h"
 #include "sysdep.h"
