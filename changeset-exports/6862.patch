# HG changeset patch
# User jwe
# Date 1188974969 0
#      Wed Sep 05 06:49:29 2007 +0000
# Node ID d63339cbb2050b9ccd841442b7d721df0b5101dd
# Parent  32558239ed9eac3b13dcc5c307719f075e0c6c13
[project @ 2007-09-05 06:49:29 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2007-09-05  John W. Eaton  <jwe@octave.org>
+
+	* miscellaneous/orderfields.m: Use numel instead of length.
+
+2007-09-05  Michael goffioul  <michael.goffioul@gmail.com>
+
+	* miscellaneous/orderfields.m: Handle empty structs.
+
 2007-09-05  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Consistently index PARAMETRIC with
 	DATA_IDX.
 
 2007-09-04  David Bateman  <dbateman@free.fr>
 
 	* general/isdir.m: Return a logical value.
diff --git a/scripts/miscellaneous/orderfields.m b/scripts/miscellaneous/orderfields.m
--- a/scripts/miscellaneous/orderfields.m
+++ b/scripts/miscellaneous/orderfields.m
@@ -41,21 +41,21 @@ function [t, p] = orderfields (s1, s2)
       error ("orderfields: expecting argument to be a struct");
     endif
   else
     print_usage ();
   endif
 
   if (nargin == 1)
     ## One structure: return the fields in alphabetical order.
-    if (isstruct(s1))
+    if (isstruct (s1))
       names = sort (fieldnames (s1));
     endif
   elseif (nargin == 2)
-    if (isstruct(s2))
+    if (isstruct (s2))
       ## Two structures: return the fields in the order of s2.
       names = fieldnames (s2);
       if (! isequal (sort (fieldnames (s1)), sort (names)))
 	error ("orderfields: structures do not have same fields");
       endif
     elseif (iscellstr (s2))
       ## A structure and a list of fields: order by the list of fields.
       t1 = sort (fieldnames (s1));
@@ -64,33 +64,40 @@ function [t, p] = orderfields (s1, s2)
 	error ("orderfields: name list does not match structure fields");
       endif
       names = s2;
     elseif (isvector (s2))
       ## A structure and a permutation vector: permute the order of s1.
       names = fieldnames (s1);
       t1 = sort (s2);
       t1 = t1(:)';
-      t2 = 1:length (names);
+      t2 = 1:numel (names);
       if (! isequal (t1, t2))
 	error ("orderfields: invalid permutation vector");
       endif
-      names = names(s2);
+      names = names (s2);
     endif
   endif
 
   ## Find permutation vector which converts the original name order
   ## into the new name order.  Note: could save a couple of sorts
   ## in some cases, but performance isn't critical.
 
   if (nargout == 2)
     [oldel, oldidx] = sort (fieldnames (s1));
     [newel, newidx] = sort (names);
     p = oldidx(newidx);
   endif
 
   ## Permute the names in the structure.
-  for i = 1:length (names)
-    el = names(i);
-    t(:).(el) = s1(:).(el);
-  endfor
+  if (numel (s1) == 0)
+    args = cell (1, 2 * numel (names));
+    args(1:2:end) = names;
+      args{2:2:end} = {};
+    t = struct (args{:});
+  else
+    for i = 1:numel (names)
+      el = names(i);
+      t(:).(el) = s1(:).(el);
+    endfor
+  endif
 
 endfunction
