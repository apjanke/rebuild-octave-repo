# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1235112827 -3600
#      Fri Feb 20 07:53:47 2009 +0100
# Node ID 76ddf0ab985dcee23e3bfc75e3c71748af6c121f
# Parent  3efa512a0957c9b9515663df7111804c50c735fc
auto-set cellstr cache when sorting cells

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,15 +1,17 @@
 2009-02-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-base-mat.cc (octave_base_matrix<MT>::do_index_op):
 	Correctly compute all-scalar index.
 	* ov-cell.cc (octave_cell::is_sorted, octave_cell::is_sorted_rows):
 	New methods.
 	* ov-cell.h: Declare them.
+	* ov-cell.cc (octave_cell::sort): Create result already with
+	cellstr_cache.
 
 2009-02-20  John W. Eaton  <jwe@octave.org>
 
 	* ov-base-mat.cc (octave_base_matrix<MT>::assign):
 	Correctly compute all-scalar index.
 
 	* symbtab.cc (symbol_table::stash_dir_name_for_subfunctions):
 	New function.
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -452,17 +452,23 @@ octave_value
 octave_cell::sort (octave_idx_type dim, sortmode mode) const
 {
   octave_value retval;
 
   if (is_cellstr ())
     {
       Array<std::string> tmp = cellstr_value ();
 
-      retval = Cell (tmp.sort (dim, mode));
+      tmp = tmp.sort (dim, mode);
+
+      // We do it the hard way to auto-create the result's cache
+      octave_cell *result = new octave_cell (Cell (tmp));
+      result->cellstr_cache = tmp;
+
+      retval = result;
     }
   else
     error ("sort: only cell arrays of character strings may be sorted");
   
   return retval;
 }
 
 octave_value
@@ -470,17 +476,23 @@ octave_cell::sort (Array<octave_idx_type
 		   sortmode mode) const
 {
   octave_value retval;
 
   if (is_cellstr ())
     {
       Array<std::string> tmp = cellstr_value ();
 
-      retval = Cell (tmp.sort (sidx, dim, mode));
+      tmp = tmp.sort (sidx, dim, mode);
+
+      // We do it the hard way to auto-create the result's cache
+      octave_cell *result = new octave_cell (Cell (tmp));
+      result->cellstr_cache = tmp;
+
+      retval = result;
     }
   else
     error ("sort: only cell arrays of character strings may be sorted");
   
   return retval;
 }
 
 sortmode 
