# HG changeset patch
# User jwe
# Date 1076945002 0
#      Mon Feb 16 15:23:22 2004 +0000
# Node ID 22c4c2be473329cc8245fba31456231cdaefb321
# Parent  7207369b6c8286f2167e0c9d45c4a07304cd7c58
[project @ 2004-02-16 15:23:22 by jwe]

diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -664,46 +664,51 @@ omitted, it defaults to 1 (column-wise p
 {
   DATA_REDUCTION (prod);
 }
 
 static bool
 cat_add_dims (dim_vector& dv_new, const dim_vector& dv_arg, int dim)
 {
   // dv_arg is []
+
   if (dv_arg.all_zero ())
     return true;
   
   // dv_new is []
+
   if (dv_new.all_zero ())
     {
       dv_new = dv_arg;
       return true;
     }
   
   int n_new  = dv_new.length ();
   int n_args = dv_arg.length ();
   
   // Find the max and min value of n_new and n_args
+
   int n_max = n_new > n_args ? n_new : n_args;
   int n_min = n_new < n_args ? n_new : n_args;  
 
   // The elements of the dimension vectors can only differ
   // if the dim variable differs from the actual dimension
   // they differ.
+
   for (int i = 0; i < n_min; i++)
     {
       if (dv_new(i) != dv_arg(i) && dim != i)
 	{
 	  error ("cat: dimension mismatch");
 	  return false;
 	}
     }
   
-  // Ditto
+  // Ditto.
+
   for (int i = n_min; i < n_max; i++)
     {
       if (n_new > n_min)
 	{
 	  if (dv_new(i) != 1 && dim != i)
 	    {
 	      error ("cat: dimension mismatch");
 	      return false;
@@ -717,28 +722,32 @@ cat_add_dims (dim_vector& dv_new, const 
 	      return false;
 	    }
 	}
     }
 
   // If we want to add the dimension vectors at a dimension
   // larger than both, then we need to set n_max to this number
   // so that we resize dv_new to the right dimension.
+
   n_max = n_max > (dim + 1) ? n_max : (dim + 1);
   
   // Resize dv_new to new the appropriate dimensions.
+
   if (n_max > n_new)
     {
       dv_new.resize (n_max);
 
       for (int i = n_new; i < n_max; i++)
 	dv_new.elem (i) = 1;
     }
   
-  if (dim > n_args)
+  // Larger or equal since dim has been decremented by one.
+
+  if (dim >= n_args)
     dv_new.elem (dim) = dv_new.elem (dim)++;
   else
     dv_new.elem (dim) += dv_arg(dim);
 
   return true;
 }
 
 DEFUN (cat, args, ,
