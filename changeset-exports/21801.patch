# HG changeset patch
# User mmuetzel <markus.muetzel@gmx.de>
# Date 1464706186 -7200
#      Tue May 31 16:49:46 2016 +0200
# Node ID 4acfe6a99a9f25b3ad8663beb29322d2cf0b3d5f
# Parent  0eefa882bcc7eac57058a69a67ea9044de702620
Improve parsing of input arguments in __patch__.m (bug #48038).

* __patch__.m: Improve recognition of color spec in input parameters.
Let "set" check the rest of the input parameters.

diff --git a/scripts/plot/draw/private/__patch__.m b/scripts/plot/draw/private/__patch__.m
--- a/scripts/plot/draw/private/__patch__.m
+++ b/scripts/plot/draw/private/__patch__.m
@@ -31,58 +31,48 @@ function [h, failed] = __patch__ (p, var
 
   h = NaN;
   failed = false;
 
   is_numeric_arg = cellfun (@isnumeric, varargin);
 
   if (isempty (varargin))
     args = varargin;
-  elseif (isstruct (varargin{1}))
-    if (isfield (varargin{1}, "vertices") && isfield (varargin{1}, "faces"))
-      fvs = varargin{1};
-      fvc = cell (1, 2*numfields (fvs));
-      fvc(1:2:end) = fieldnames (fvs);
-      fvc(2:2:end) = struct2cell (fvs);
-      args = [fvc(:)', varargin(2:end)];
-    else
-      failed = true;
-    endif
   elseif (is_numeric_arg(1))
     if (nargin < 3 || ! is_numeric_arg(2))
       failed = true;
     else
       if (nargin > 4 && all (is_numeric_arg(1:4)))
         x = varargin{1};
         y = varargin{2};
         z = varargin{3};
         c = varargin{4};
         iarg = 5;
       elseif (nargin > 3 && all (is_numeric_arg(1:3)))
         x = varargin{1};
         y = varargin{2};
-        iarg = 4;
-        if (rem (nargin - iarg, 2) == 1)
-          c = varargin{iarg};
+        if (nargin > 4 && iscolorspec (varargin{4}))
           z = varargin{3};
+          c = varargin{4};
           iarg = 5;
         else
           z = [];
           c = varargin{3};
+          iarg = 4;
         endif
       elseif (nargin > 2 && all (is_numeric_arg(1:2)))
         x = varargin{1};
         y = varargin{2};
         z = [];
-        iarg = 3;
-        if (rem (nargin - iarg, 2) == 1)
-          c = varargin{iarg};
-          iarg += 1;
+        if (iscolorspec (varargin{3}))
+          c = varargin{3};
+          iarg = 4;
         else
           c = [];
+          iarg = 3;
         endif
       endif
 
       if (isvector (x))
         x = x(:);
         y = y(:);
         z = z(:);
         if (isnumeric (c))
@@ -154,33 +144,47 @@ function [h, failed] = __patch__ (p, var
             args{7} = "facecolor";
             args{8} = "interp";
             args{9} = "cdata";
             args{10} = c;
           else
             error ("patch: size of X, Y, and C must be equal");
           endif
         endif
-      elseif (ischar (c) && rem (nargin - iarg, 2) == 0)
-        ## Assume any additional argument over an even number is a color string.
+      elseif (iscolorspec (c))
         args{7} = "facecolor";
         args{8} = tolower (c);
         args{9} = "cdata";
         args{10} = [];
       else
         args{7} = "facecolor";
         args{8} = [0, 0, 0];
         args{9} = "cdata";
         args{10} = [];
       endif
 
-      args = [args, varargin(iarg:end)];
+      if (mod (numel (varargin) - iarg + 1, 2) != 0)
+        failed = true;
+      else
+        args = [args, varargin(iarg:end)];
+      endif
     endif
   else
     args = varargin;
   endif
 
   if (! failed)
     h = __go_patch__ (p, args{:});
   endif
 
 endfunction
 
+function retval = iscolorspec (arg)
+  retval = false;
+  if (ischar (arg))
+    persistent colors = {"y", "yellow", "r", "red", "m", "magenta", ...
+                         "c", "cyan", "g", "green", "b", "blue", ...
+                         "w", "white", "k", "black"};
+    if (any (strcmpi (arg, colors)))
+      retval = true;
+    endif
+  endif
+endfunction
