# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1289872663 28800
#      Mon Nov 15 17:57:43 2010 -0800
# Node ID d682cd6669acb322e11aa02d90945f33d6a8f982
# Parent  31f8534eb055b8cd689a856b43fe82e83228b0b0
Update info-based documentation menus to include new nodes.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2010-11-15  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/bugs.txi, interpreter/emacs.txi, interpreter/func.txi, 
+	interpreter/geometry.txi, interpreter/linalg.txi,
+	interpreter/octave.texi, interpreter/package.txi, interpreter/plot.txi,
+	interpreter/stmt.txi, interpreter/strings.txi, interpreter/system.txi:
+	Update info-based documentation menus to include new nodes.
+
 2010-11-15  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/octave.texi, interpreter/plot.txi: Rename subsection
 	"Printing Plots" to "Printing and Saving Plots".  Add reference to
 	new saveas function.
 
 2010-11-10  John W. Eaton  <jwe@octave.org>
 
diff --git a/doc/interpreter/bugs.txi b/doc/interpreter/bugs.txi
--- a/doc/interpreter/bugs.txi
+++ b/doc/interpreter/bugs.txi
@@ -105,19 +105,19 @@ it may not.  In any case, the principal 
 to help the entire community by making the next version of Octave work
 better.  Bug reports are your contribution to the maintenance of Octave.
 
 In order for a bug report to serve its purpose, you must include the
 information that makes it possible to fix the bug.
 
 @menu
 * Bug Criteria::                
-* Where: Bug Tracker.           Where to submit your bug report.
-* Reporting: Bug Reporting.     How to report a bug effectively.
-* Patches: Sending Patches.     How to send a patch for Octave.
+* Where: Bug Tracker::          Where to submit your bug report.
+* Reporting: Bug Reporting::    How to report a bug effectively.
+* Patches: Sending Patches::    How to send a patch for Octave.
 @end menu
 
 @node Bug Criteria
 @appendixsec Have You Found a Bug?
 @cindex bug criteria
 
 If you are not sure whether you have found a bug, here are some guidelines:
 
diff --git a/doc/interpreter/emacs.txi b/doc/interpreter/emacs.txi
--- a/doc/interpreter/emacs.txi
+++ b/doc/interpreter/emacs.txi
@@ -42,17 +42,17 @@ Octave Support'').  This chapter describ
 package.
 
 Please contact @email{Kurt.Hornik@@wu-wien.ac.at} if you have any questions
 or suggestions on using EOS.
 
 @menu
 * Installing EOS::              
 * Using Octave Mode::           
-* Running Octave From Within Emacs::  
+* Running Octave from Within Emacs::  
 * Using the Emacs Info Reader for Octave::  
 @end menu
 
 @node Installing EOS
 @appendixsec Installing EOS
 
 The Emacs package EOS consists of the three files @file{octave-mod.el},
 @file{octave-inf.el}, and @file{octave-hlp.el}.  These files, or better
@@ -366,18 +366,18 @@ variable @code{octave-mode-hook}.  If th
 non-@code{nil}, turning on Octave mode calls its value.
 
 If you discover a problem with Octave mode, you can conveniently send a
 bug report using @kbd{C-c C-b} (@code{octave-submit-bug-report}).  This
 automatically sets up a mail buffer with version information already
 added.  You just need to add a description of the problem, including a
 reproducible test case and send the message.
 
-@node Running Octave From Within Emacs
-@appendixsec Running Octave From Within Emacs
+@node Running Octave from Within Emacs
+@appendixsec Running Octave from Within Emacs
 
 The package @file{octave} provides commands for running an inferior
 Octave process in a special Emacs buffer.  Use 
 @lisp
 M-x run-octave
 @end lisp
 @noindent
 to directly start an inferior Octave process.  If Emacs does not know
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -29,17 +29,17 @@ interactive Octave sessions, or in exter
 like built-in functions.
 
 @menu
 * Defining Functions::          
 * Multiple Return Values::      
 * Variable-length Argument Lists::  
 * Ignoring Arguments::  
 * Variable-length Return Lists::  
-* Returning From a Function::   
+* Returning from a Function::   
 * Default Arguments::   
 * Function Files::              
 * Script Files::                
 * Function Handles Inline Functions and Anonymous Functions::
 * Commands::
 * Organization of Functions::   
 @end menu
 
@@ -492,18 +492,18 @@ When called this function returns values
 @end example
 
 If @code{varargin} (@code{varargout}) does not appear as the last
 element of the input (output) parameter list, then it is not special,
 and is handled the same as any other parameter name.
 
 @DOCSTRING(deal)
 
-@node Returning From a Function
-@section Returning From a Function
+@node Returning from a Function
+@section Returning from a Function
 
 The body of a user-defined function can contain a @code{return} statement.
 This statement returns control to the rest of the Octave program.  It
 looks like this:
 
 @example
 return
 @end example
@@ -663,17 +663,17 @@ ignore the time stamps for all function 
 
 @DOCSTRING(edit)
 
 @DOCSTRING(mfilename)
 
 @DOCSTRING(ignore_function_time_stamp)
 
 @menu
-* Manipulating the load path::
+* Manipulating the Load Path::
 * Subfunctions::
 * Private Functions::
 * Overloading and Autoloading::
 * Function Locking::
 * Function Precedence::
 @end menu
 
 @node Manipulating the load path
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -83,17 +83,17 @@ The result of which can be seen in @ref{
 @float Figure,fig:delaunay
 @center @image{delaunay,4in}
 @caption{Delaunay triangulation of a random set of points}
 @end float
 @end ifnotinfo
 
 @menu
 * Plotting the Triangulation::
-* Identifying points in Triangulation::
+* Identifying Points in Triangulation::
 @end menu
 
 @node Plotting the Triangulation
 @subsection Plotting the Triangulation
 
 Octave has the functions @code{triplot} and @code{trimesh} to plot the
 Delaunay triangulation of a 2-dimensional set of points.
 
@@ -123,18 +123,18 @@ 2-dimensions.
 The output of the above can be seen in @ref{fig:triplot}.
 
 @float Figure,fig:triplot
 @center @image{triplot,4in}
 @caption{Delaunay triangulation of a random set of points}
 @end float
 @end ifnotinfo
 
-@node Identifying points in Triangulation
-@subsection Identifying points in Triangulation
+@node Identifying Points in Triangulation
+@subsection Identifying Points in Triangulation
 
 It is often necessary to identify whether a particular point in the
 N-dimensional space is within the Delaunay tessellation of a set of
 points in this N-dimensional space, and if so which N-simplex contains
 the point and which point in the tessellation is closest to the desired
 point.  The functions @code{tsearch} and @code{dsearch} perform this
 function in a triangulation, and @code{tsearchn} and @code{dsearchn} in
 an N-dimensional tessellation.
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -20,25 +20,25 @@
 @chapter Linear Algebra
 
 This chapter documents the linear algebra functions of Octave.
 Reference material for many of these functions may be found in
 Golub and Van Loan, @cite{Matrix Computations, 2nd Ed.}, Johns Hopkins,
 1989, and in the @cite{@sc{lapack} Users' Guide}, SIAM, 1992.
 
 @menu
-* Techniques used for Linear Algebra::
+* Techniques Used for Linear Algebra::
 * Basic Matrix Functions::      
 * Matrix Factorizations::       
 * Functions of a Matrix::       
 * Specialized Solvers::
 @end menu
 
-@node Techniques used for Linear Algebra
-@section Techniques used for Linear Algebra
+@node Techniques Used for Linear Algebra
+@section Techniques Used for Linear Algebra
 
 Octave includes a polymorphic solver, that selects an appropriate
 matrix factorization depending on the properties of the matrix itself. 
 Generally, the cost of determining the matrix type is small relative to 
 the cost of factorizing the matrix itself, but in any case the matrix 
 type is cached once it is calculated, so that it is not re-determined 
 each time it is used in a linear equation.
 
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -297,17 +297,17 @@ Matrices
 * Empty Matrices::              
 
 Integer Data Types
 
 * Integer Arithmetic::
 
 Strings
 
-* Escape Sequences in string constants::
+* Escape Sequences in String Constants::
 * Character Arrays::
 * Creating Strings:: 
 * Comparing Strings::           
 * Manipulating Strings::     
 * String Conversions::          
 * Character Class Functions::   
 
 Creating Strings
@@ -318,28 +318,35 @@ Creating Strings
 Data Containers
 
 * Data Structures::
 * Cell Arrays::
 * Comma Separated Lists::
 
 Data Structures
 
+* Basic Usage and Examples::
 * Structure Arrays::
 * Creating Structures::
 * Manipulating Structures::
 * Processing Data in Structures::
 
 Cell Arrays
 
-* Creating Cell Arrays::                 
+* Basic Usage of Cell Arrays::
+* Creating Cell Arrays::
 * Indexing Cell Arrays::
 * Cell Arrays of Strings::
 * Processing Data in Cell Arrays::
 
+Comma Separated Lists
+
+* Comma Separated Lists Generated from Cell Arrays::
+* Comma Separated Lists Generated from Structure Arrays::
+
 Variables
 
 * Global Variables::            
 * Persistent Variables::        
 * Status of Variables::         
 
 Expressions
 
@@ -377,39 +384,40 @@ Statements
 * The @code{break} Statement::         
 * The @code{continue} Statement::      
 * The @code{unwind_protect} Statement::  
 * The @code{try} Statement::           
 * Continuation Lines::          
 
 The @code{switch} Statement
 
-* Notes for the C programmer::  
+* Notes for the C Programmer::  
 
 The @code{for} Statement
 
 * Looping Over Structure Elements::  
 
 Functions and Scripts
 
 * Defining Functions::          
 * Multiple Return Values::      
 * Variable-length Argument Lists::  
+* Ignoring Arguments::  
 * Variable-length Return Lists::  
-* Returning From a Function::   
+* Returning from a Function::   
 * Default Arguments::   
 * Function Files::              
 * Script Files::                
 * Function Handles Inline Functions and Anonymous Functions::
 * Commands::
 * Organization of Functions::   
 
 Function Files
 
-* Manipulating the load path::
+* Manipulating the Load Path::
 * Subfunctions::
 * Private Functions::
 * Overloading and Autoloading::
 * Function Locking::
 * Function Precedence::
 
 Function Handles Inline Functions and Anonymous Functions
 
@@ -484,35 +492,35 @@ C-Style I/O Functions
 
 Plotting
 
 * Introduction to Plotting::    
 * High-Level Plotting::         
 * Graphics Data Structures::    
 * Advanced Plotting::           
 
-Introduction to Plotting
+High-Level Plotting
 
 * Two-Dimensional Plots::       
 * Three-Dimensional Plotting::  
 * Plot Annotations::            
 * Multiple Plots on One Page::  
 * Multiple Plot Windows::       
 * Printing and Saving Plots::              
 * Interacting with Plots::      
 * Test Plotting Functions::     
 
 Two-Dimensional Plots
 
-* Two-dimensional Function Plotting::
+* Two-dimensional Function Plotting::  
 
 Three-Dimensional Plotting
 
-* Three-dimensional Function Plotting::
-* Three-dimensional Geometric Shapes::
+* Three-dimensional Function Plotting::  
+* Three-dimensional Geometric Shapes::  
 
 Graphics Data Structures
 
 * Introduction to Graphics Structures::  
 * Graphics Objects::            
 * Graphics Object Properties::  
 * Searching Properties::        
 * Managing Default Properties::  
@@ -534,31 +542,31 @@ Advanced Plotting
 * Line Styles::                 
 * Marker Styles::               
 * Callbacks::                   
 * Object Groups::               
 * Graphics Backends::           
 
 Object Groups
 
-* Data sources in object groups::  
-* Area series::                 
-* Bar series::                  
-* Contour groups::              
-* Error bar series::            
-* Line series::                 
-* Quiver group::                
-* Scatter group::               
-* Stair group::                 
+* Data Sources in Object Groups::  
+* Area Series::                 
+* Bar Series::                  
+* Contour Groups::              
+* Error Bar Series::            
+* Line Series::                 
+* Quiver Group::                
+* Scatter Group::               
+* Stair Group::                 
 * Stem Series::                 
-* Surface group::               
+* Surface Group::               
 
 Graphics Backends
 
-* Interaction with gnuplot::
+* Interaction with gnuplot::    
 
 Matrix Manipulation
 
 * Finding Elements and Checking Conditions::  
 * Rearranging Matrices::        
 * Applying a Function to an Array::
 * Special Utility Matrices::    
 * Famous Matrices::             
@@ -571,17 +579,17 @@ Arithmetic
 * Sums and Products::           
 * Utility Functions::           
 * Special Functions::           
 * Coordinate Transformations::
 * Mathematical Constants::      
 
 Linear Algebra
 
-* Techniques used for Linear Algebra::
+* Techniques Used for Linear Algebra::
 * Basic Matrix Functions::      
 * Matrix Factorizations::       
 * Functions of a Matrix::       
 * Specialized Solvers::
 
 Diagonal and Permutation Matrices
 
 * Basic Usage::          Creation and Manipulation of Diagonal and Permutation Matrices
@@ -677,32 +685,38 @@ Geometry
 * Delaunay Triangulation::
 * Voronoi Diagrams::
 * Convex Hull::
 * Interpolation on Scattered Data::
 
 Delaunay Triangulation
 
 * Plotting the Triangulation::
-* Identifying points in Triangulation::
+* Identifying Points in Triangulation::
 
 Image Processing
 
 * Loading and Saving Images::   
 * Displaying Images::           
 * Representing Images::         
 * Plotting on top of Images::   
 * Color Conversion::            
 
 Object Oriented Programming
 
 * Creating a Class::
 * Manipulating Classes::
 * Indexing Objects::
 * Overloading Objects::
+* Inheritance and Aggregation::
+
+Indexing Objects
+
+* Defining Indexing And Indexed Assignment::
+* Indexed Assignment Optimization::
 
 Overloading Objects
 
 * Function Overloading::
 * Operator Overloading::
 * Precedence of Objects::
 
 System Utilities
@@ -715,28 +729,33 @@ System Utilities
 * Process ID Information::      
 * Environment Variables::       
 * Current Working Directory::   
 * Password Database Functions::  
 * Group Database Functions::    
 * System Information::          
 * Hashing Functions::
 
+Networking Utilities
+
+* FTP Objects::
+* URL Manipulation::
+
 Packages
 
 * Installing and Removing Packages::  
 * Using Packages::              
 * Administrating Packages::     
 * Creating Packages::           
 
 Creating Packages
 
 * The DESCRIPTION File::        
-* The INDEX file::              
-* PKG_ADD and PKG_DEL directives::  
+* The INDEX File::              
+* PKG_ADD and PKG_DEL Directives::  
 
 Dynamically Linked Functions
 
 * Oct-Files::                   
 * Mex-Files::                   
 * Standalone Programs::         
 
 Oct-Files
@@ -800,29 +819,29 @@ Trouble
 * Bug Tracker::                   
 * Bug Reporting::               
 * Sending Patches::             
 * Service::                     
 
 Reporting Bugs
 
 * Bug Criteria::                
-* Where: Bug Tracker.           Where to send your bug report.
-* Reporting: Bug Reporting.     How to report a bug effectively.
-* Patches: Sending Patches.     How to send a patch for Octave.
+* Where: Bug Tracker::          Where to submit your bug report.
+* Reporting: Bug Reporting::    How to report a bug effectively.
+* Patches: Sending Patches::    How to send a patch for Octave.
 
 Installation
 
 * Installation Problems::       
 
 Emacs Octave Support
 
 * Installing EOS::              
 * Using Octave Mode::           
-* Running Octave From Within Emacs::  
+* Running Octave from Within Emacs::  
 * Using the Emacs Info Reader for Octave::  
 @end detailmenu
 @end menu
 
 @c ------------------------------------------------------------------------
 
 @include preface.texi
 @include intro.texi
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -273,18 +273,18 @@ of the installed package for future refe
 @item package/bin
 An optional directory containing files that will be added to the
 Octave @w{@env{EXEC_PATH}} when the package is loaded.  This might contain
 external scripts, etc., called by functions within the package.
 @end table
 
 @menu
 * The DESCRIPTION File::        
-* The INDEX file::              
-* PKG_ADD and PKG_DEL directives::  
+* The INDEX File::              
+* PKG_ADD and PKG_DEL Directives::  
 @end menu
 
 @node The DESCRIPTION File
 @subsection The DESCRIPTION File
 
 The @code{DESCRIPTION} file contains various information about the
 package, such as its name, author, and version.  This file has a very
 simple format
@@ -413,18 +413,18 @@ format of this is
 BuildRequires: libtermcap-devel [Mandriva] libtermcap2-devel
 @end example
 
 @noindent
 where the first package name will be used as a default and if the
 RPMs are built on a Mandriva distribution, then the second package
 name will be used instead. 
 
-@node The INDEX file
-@subsection The INDEX file
+@node The INDEX File
+@subsection The INDEX File
 
 The optional @code{INDEX} file provides a categorical view of the
 functions in the package.  This file has a very simple format
 
 @noindent
 @itemize
 @item Lines beginning with @samp{#} are comments.
 
@@ -511,18 +511,18 @@ description and it will be expanded.  Fo
 $TSA = see <a href="link_to_spctools">SPC Tools</a>
 arcov = $TSA <code>armcv</code>
 @end group
 @end example
 
 @noindent
 id is any string of letters, numbers and @code{_}.
 
-@node PKG_ADD and PKG_DEL directives
-@subsection PKG_ADD and PKG_DEL directives
+@node PKG_ADD and PKG_DEL Directives
+@subsection PKG_ADD and PKG_DEL Directives
 
 If the package contains files called @w{@code{PKG_ADD}} or @w{@code{PKG_DEL}}
 the commands in these files will be executed when the package is
 added or removed from the users path.  In some situations such files
 are a bit cumbersome to maintain, so the package manager supports
 automatic creation of such files.  If a source file in the package
 contains a @w{@code{PKG_ADD}} or @w{@code{PKG_DEL}} directive they will be
 added to either the @w{@code{PKG_ADD}} or @w{@code{PKG_DEL}} files.
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -2749,27 +2749,27 @@ member.
 
 In addition the members of the group can also be linked to other
 graphics objects through callback functions.  For example the baseline of
 the @code{bar} or @code{stem} functions is a line object, whose length
 and position are automatically adjusted, based on changes to the
 corresponding hggroup elements.
 
 @menu
-* Data sources in object groups::  
-* Area series::                 
-* Bar series::                  
-* Contour groups::              
-* Error bar series::            
-* Line series::                 
-* Quiver group::                
-* Scatter group::               
-* Stair group::                 
+* Data Sources in Object Groups::  
+* Area Series::                 
+* Bar Series::                  
+* Contour Groups::              
+* Error Bar Series::            
+* Line Series::                 
+* Quiver Group::                
+* Scatter Group::               
+* Stair Group::                 
 * Stem Series::                 
-* Surface group::               
+* Surface Group::               
 @end menu
 
 @node Data sources in object groups
 @subsubsection Data sources in object groups
 @cindex data sources in object groups
 @anchor{doc-datasources}
 All of the group objects contain data source parameters.  There are
 string parameters that contain an expression that is evaluated to update
diff --git a/doc/interpreter/stmt.txi b/doc/interpreter/stmt.txi
--- a/doc/interpreter/stmt.txi
+++ b/doc/interpreter/stmt.txi
@@ -324,21 +324,21 @@ switch (X)
   case "a string"
     do_something
   @dots{}
 endswitch
 @end group
 @end example
 
 @menu
-* Notes for the C programmer::  
+* Notes for the C Programmer::  
 @end menu
 
-@node Notes for the C programmer
-@subsection Notes for the C programmer
+@node Notes for the C Programmer
+@subsection Notes for the C Programmer
 
 The @code{switch} statement is also available in the widely used C
 programming language.  There are, however, some differences
 between the statement in Octave and C
 
 @itemize @bullet
 @item
 Cases are exclusive, so they don't `fall through' as do the cases
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -50,17 +50,17 @@ example, the expression
 [ "foo" , "bar" , "baz" ]
 @end example
 
 @noindent
 produces the string whose contents are @samp{foobarbaz}.  @xref{Numeric Data
 Types}, for more information about creating matrices.
 
 @menu
-* Escape Sequences in string constants::
+* Escape Sequences in String Constants::
 * Character Arrays::
 * Creating Strings:: 
 * Comparing Strings::           
 * Manipulating Strings::     
 * String Conversions::          
 * Character Class Functions::   
 @end menu
 
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -240,35 +240,35 @@ about the status of files.
 @DOCSTRING(unpack)
 
 @DOCSTRING(bzip2)
 
 @node Networking Utilities
 @section Networking Utilities
 
 @menu
-* FTP objects::
-* URL manipulation::
+* FTP Objects::
+* URL Manipulation::
 @end menu
 
-@node FTP objects
-@subsection FTP objects
+@node FTP Objects
+@subsection FTP Objects
 
 @DOCSTRING(@ftp/ftp)
 
 @DOCSTRING(@ftp/mget)
 
 @DOCSTRING(@ftp/mput)
 
 @DOCSTRING(@ftp/ascii)
 
 @DOCSTRING(@ftp/binary)
 
-@node URL manipulation
-@subsection URL manipulation
+@node URL Manipulation
+@subsection URL Manipulation
 
 @DOCSTRING(urlread)
 
 @DOCSTRING(urlwrite)
 
 @node Controlling Subprocesses
 @section Controlling Subprocesses
 
