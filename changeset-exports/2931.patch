# HG changeset patch
# User jwe
# Date 862872613 0
#      Mon May 05 22:50:13 1997 +0000
# Node ID dd37ffb94c63511b9e187fb435b864fc8b51e469
# Parent  1b219fa3c56a2d2158dab7a164be2ad2dbe13fa5
[project @ 1997-05-05 22:50:13 by jwe]

diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -69,24 +69,26 @@ static sigset_t octave_signal_mask;
 #define SIGHANDLER_RETURN(status) return
 #else
 #define SIGHANDLER_RETURN(status) return status
 #endif
 
 #if defined (MUST_REINSTALL_SIGHANDLERS)
 #define MAYBE_REINSTALL_SIGHANDLER(sig, handler) \
   octave_set_signal_handler (sig, handler)
+#define REINSTALL_USES_SIG 1
 #else
 #define MAYBE_REINSTALL_SIGHANDLER(sig, handler) \
   do { } while (0)
 #endif
 
 #if defined (__EMX__)
 #define MAYBE_ACK_SIGNAL(sig) \
   octave_set_signal_handler (sig, SIG_ACK)
+#define ACK_USES_SIG 1
 #else
 #define MAYBE_ACK_SIGNAL(sig) \
   do { } while (0)
 #endif
 
 void
 octave_save_signal_mask (void)
 {
@@ -261,17 +263,21 @@ sigfpe_handler (int /* sig */)
 
 // Handle SIGINT by restarting the parser (see octave.cc).
 //
 // This also has to work for SIGBREAK (on systems that have it), so we
 // use the value of sig, instead of just assuming that it is called
 // for SIGINT only.
 
 static RETSIGTYPE
+#if defined (ACK_USES_SIG) || defined (REINSTALL_USES_SIG)
 sigint_handler (int sig)
+#else
+sigint_handler (int)
+#endif
 {
   MAYBE_ACK_SIGNAL (sig);
 
   MAYBE_REINSTALL_SIGHANDLER (sig, sigint_handler);
 
   if (can_interrupt)
     {
       jump_to_top_level ();
