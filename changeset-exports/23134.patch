# HG changeset patch
# User Rik <rik@octave.org>
# Date 1486011964 28800
#      Wed Feb 01 21:06:04 2017 -0800
# Branch stable
# Node ID 01bf5c733de7f63c9b4771bb2674a94ca67ce0ff
# Parent  0f2582425a9e78f9253ef54fe8dde446b43ffde0
doc: Expand documentation for cast() (bug #50201).

* cast.m: Clarify behavior of cast and add a programming note explaining how it
might be used with user-defined classes.

diff --git a/scripts/miscellaneous/cast.m b/scripts/miscellaneous/cast.m
--- a/scripts/miscellaneous/cast.m
+++ b/scripts/miscellaneous/cast.m
@@ -15,17 +15,18 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {} {} cast (@var{val}, "@var{type}")
 ## Convert @var{val} to data type @var{type}.
 ##
-## @var{val} must be one of the numeric classes:
+## Both @var{val} and @var{type} are typically one of the following built-in
+## classes:
 ##
 ## @example
 ## @group
 ## "double"
 ## "single"
 ## "logical"
 ## "char"
 ## "int8"
@@ -47,16 +48,28 @@
 ## @group
 ## cast (-5, "uint8")
 ##    @result{} 0
 ## cast (300, "int8")
 ##    @result{} 127
 ## @end group
 ## @end example
 ##
+## Programming Note: This function relies on the object @var{val} having a
+## conversion method named @var{type}.  User-defined classes may implement only
+## a subset of the full list of types shown above.  In that case, it may be
+## necessary to call cast twice in order to reach the desired type.
+## For example, the conversion to double is nearly always implemented, but
+## the conversion to uint8 might not be.  In that case, the following code will
+## work
+##
+## @example
+## cast (cast (@var{user_defined_val}, "double"), "uint8")
+## @end example
+##
 ## @seealso{typecast, int8, uint8, int16, uint16, int32, uint32, int64, uint64, double, single, logical, char, class, typeinfo}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = cast (val, type)
 
   if (nargin != 2)
