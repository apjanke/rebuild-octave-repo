# HG changeset patch
# User jwe
# Date 1025746966 0
#      Thu Jul 04 01:42:46 2002 +0000
# Node ID 826092b5665effbfd673aae034a8a89e6f2014c5
# Parent  c21bb69ea26201dfa6821dafaae169a9adf51b94
[project @ 2002-07-04 01:42:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2002-07-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* lex.l (EL): Return VARARGIN or VARARGOUT, not ELLIPSIS.
+	* parse.y (param_list): Use VARARGIN instead of ELLIPSIS.
+	(return_list): Use VARARGOUT instead of ELLIPSIS.
+
 	* data.cc (make_diag const octave_value&, const octave_value&):
 	Allow first arg to be 1x0 or 0x1.
 
 2002-07-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* defaults.cc (loadpath): Comment out previous change.
 
 	* DLD-FUNCTIONS/fsolve.cc (Ffsolve): Return message too.  Only
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -475,17 +475,22 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
   }
 
 %{
 // An ellipsis not at the end of a line is not a continuation, but
 // does have another meaning.
 %}
 
 {EL} {
-    return ELLIPSIS;
+    if (lexer_flags.looking_at_parameter_list)
+      return VARARGIN;
+    else if (lexer_flags.looking_at_return_list)
+      return VARARGOUT;
+    else
+      return LEXICAL_ERROR;
   }
 
 %{
 // End of file.
 %}
 
 <<EOF>> {
     TOK_RETURN (END_OF_INPUT);
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -393,17 +393,17 @@ set_stmt_print_flag (tree_statement_list
 %token <tok_val> SWITCH CASE OTHERWISE
 %token <tok_val> BREAK CONTINUE FUNC_RET
 %token <tok_val> UNWIND CLEANUP
 %token <tok_val> TRY CATCH
 %token <tok_val> GLOBAL STATIC
 
 // Other tokens.
 %token END_OF_INPUT LEXICAL_ERROR
-%token FCN ELLIPSIS ALL_VA_ARGS
+%token FCN VARARGIN VARARGOUT ALL_VA_ARGS
 %token USING TITLE WITH AXES COLON OPEN_BRACE CLOSE_BRACE CLEAR
 
 // Nonterminals we construct.
 %type <comment_type> stash_comment function_beg
 %type <sep_type> sep_no_nl opt_sep_no_nl sep opt_sep
 %type <tree_type> input
 %type <tree_constant_type> constant magic_colon
 %type <tree_matrix_type> matrix_rows matrix_rows1
@@ -1098,30 +1098,30 @@ param_list_end	: ')'
 		  { lexer_flags.looking_at_parameter_list = false; }
 		;
 
 param_list	: param_list_beg param_list_end
 		  {
 		    lexer_flags.quote_is_transpose = false;
 		    $$ = 0;
 		  }
-		| param_list_beg ELLIPSIS param_list_end
+		| param_list_beg VARARGIN param_list_end
 		  {
 		    lexer_flags.quote_is_transpose = false;
 		    tree_parameter_list *tmp = new tree_parameter_list ();
 		    tmp->mark_varargs_only ();
 		    $$ = tmp;
 		  }
 		| param_list1 param_list_end
 		  {
 		    lexer_flags.quote_is_transpose = false;
 		    $1->mark_as_formal_parameters ();
 		    $$ = $1;
 		  }
-		| param_list1 ',' ELLIPSIS param_list_end
+		| param_list1 ',' VARARGIN param_list_end
 		  {
 		    lexer_flags.quote_is_transpose = false;
 		    $1->mark_as_formal_parameters ();
 		    $1->mark_varargs ();
 		    $$ = $1;
 		  }
 		;
 
@@ -1153,29 +1153,29 @@ param_list1	: param_list_beg identifier
 return_list_beg	: '[' in_return_list local_symtab
 		;
 
 return_list	: return_list_beg return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
 		    $$ = new tree_parameter_list ();
 		  }
-		| return_list_beg ELLIPSIS return_list_end
+		| return_list_beg VARARGOUT return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
 		    tree_parameter_list *tmp = new tree_parameter_list ();
 		    tmp->mark_varargs_only ();
 		    $$ = tmp;
 		  }
 		| return_list_beg return_list1 return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
 		    $$ = $2;
 		  }
-		| return_list_beg return_list1 ',' ELLIPSIS return_list_end
+		| return_list_beg return_list1 ',' VARARGOUT return_list_end
 		  {
 		    lexer_flags.looking_at_return_list = false;
 		    $2->mark_varargs ();
 		    $$ = $2;
 		  }
 		;
 
 return_list1	: identifier
