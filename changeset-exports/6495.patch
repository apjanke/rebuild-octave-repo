# HG changeset patch
# User dbateman
# Date 1175789901 0
#      Thu Apr 05 16:18:21 2007 +0000
# Node ID fd09c7e8c4c9351eddbbd6ac8c1145242c1a960d
# Parent  76a1a953533da6dd9e34b987d63a37b9225a205c
[project @ 2007-04-05 16:18:20 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2007-04-05  David Bateman <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/regexp.cc (Fregexprep): Correct iteration over 
+	cell arrays so that the source and pattern are iterated seperately 
+	in the same manner as matlab.
+
 2007-04-05  Laurent Mazet <laurent.mazet@motorola.com>
 
 	* mex.cc (mxArray_octave_value::get_string): Copy nel elements,
 	not buflen elements.
 
 2007-04-05  John W. Eaton  <jwe@octave.org>
 
 	* oct-stream.cc (DO_DOUBLE_CONV): New macro.
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -1441,74 +1441,72 @@ Alternatively, use (?x) or (?-x) in the 
       return retval;
     }
 
   if (args(0).is_cell() || args(1).is_cell() || args(2).is_cell())
     {
       Cell str;
       Cell pat;
       Cell rep;
-      dim_vector dv(1,1);
+      dim_vector dv0;
+      dim_vector dv1(1,1);
 
       if (args(0).is_cell())
 	str = args(0).cell_value();
       else
 	str = Cell (args(0));
 
       if (args(1).is_cell())
 	pat = args(1).cell_value();
       else
 	pat = Cell (args(1));
 
       if (args(2).is_cell())
 	rep = args(2).cell_value();
       else
 	rep = Cell (args(2));
 
-      if (str.numel() != 1)
+      dv0 = str.dims();
+      if (pat.numel() != 1)
 	{
-	  dv = str.dims();
-	  if ((pat.numel() != 1 && dv != pat.dims()) ||
-	      (rep.numel() != 1 && dv != rep.dims()))
-	    error ("regexprep: Inconsistent cell array dimensions");
-	}
-      else if (pat.numel() != 1)
-	{
-	  dv = pat.dims();
-	  if ((pat.numel() != 1 && dv != pat.dims()) ||
-	      (rep.numel() != 1 && dv != rep.dims()))
+	  dv1 = pat.dims();
+	  if (rep.numel() != 1 && dv1 != rep.dims())
 	    error ("regexprep: Inconsistent cell array dimensions");
 	}
       else if (rep.numel() != 1)
-	dv = rep.dims();
+	dv1 = rep.dims();
 
       if (!error_state)
 	{
-	  Cell ret (dv);
+	  Cell ret (dv0);
 	  octave_value_list new_args = args;
 
-	  if (str.numel() == 1)
-	    new_args(0) = str(0);
-	  if (pat.numel() == 1)
-	    new_args(1) = pat(0);
-	  if (rep.numel() == 1)
-	    new_args(2) = rep(0);
+	  for (octave_idx_type i = 0; i < dv0.numel(); i++)
+	    {
+	      new_args(0) = str(i);
+	      if (pat.numel() == 1)
+		new_args(1) = pat(0);
+	      if (rep.numel() == 1)
+		new_args(2) = rep(0);
+	      for (octave_idx_type j = 0; j < dv1.numel(); j++)
+		{
+		  if (pat.numel() != 1)
+		    new_args(1) = pat(j);
+		  if (rep.numel() != 1)
+		    new_args(2) = rep(j);
+		  new_args(0) = octregexprep (new_args, "regexprep");
 
-	  for (octave_idx_type i = 0; i < dv.numel(); i++)
-	    {
-	      if (str.numel() != 1)
-		new_args(0) = str(i);
-	      if (pat.numel() != 1)
-		new_args(1) = pat(i);
-	      if (rep.numel() != 1)
-		new_args(2) = rep(i);
-	      ret(i) = octregexprep (new_args, "regexprep");
+		  if (error_state)
+		    break;
+		}
 
 	      if (error_state)
 		break;
+
+	      ret(i) = new_args(0);
 	    }
 
 	  if (!error_state)
 	    retval = octave_value (ret);
 	}
     }
   else
     retval = octregexprep (args, "regexprep");
