# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1522698774 18000
#      Mon Apr 02 14:52:54 2018 -0500
# Branch stable
# Node ID 2b8442c890d8df75ea736db8b1b3112c6b782273
# Parent  c1dab27c55afbee51e0c0681304f6d6a5daede2a
Fix locked GUI panels for Qt 5.6.1 through 5.7.0 series versions (bug #53409)

* main-window.cc (main_window::construct): Place preprocess conditional around
  the setDockOptions such that Qt 5.6.1 through 5.7.0 don't use that function.
  Instead, use the more limited setDockNestingEnabled().

* variable-editor.cc (variable_editor::variable_editor): Ditto.  Move this
  code prior to the addition of the tool bar to the QMainWindow.  Add the
  feature flag AnimatedDocks to the input list of setDockOptions().
  (variable_editor::edit_variable): Remove the extraneous restriction on
  sub-panel allowed areas.

* NEWS: Add note for builders of how Qt bug in pertinent range was addressed.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -22,16 +22,21 @@ Summary of important user-visible change
 
  ** The octave command no longer starts the GUI by default.  Most users
     starting Octave from command line were expecting the command line
     interface and Desktop launchers required the `--force-gui' option
     anyway.  With this change, desktop launchers should change to use
     the new option `--gui'.  The previous `--force-gui' will continue to
     work and maps to `--gui' but will be removed in Octave 4.8.
 
+ ** A known bug in Qt (https://bugreports.qt.io/browse/QTBUG-55357) is
+    addressed by limiting GUI sub-panel relocation capabilities for Qt
+    versions in the range >= 5.6.1 and < 5.7.1.  However, this may not
+    thoroughly avoid issues on all platforms.
+
  ** A new container data type--containers.Map--is available.  Map is a
     key/value storage container (a.k.a, a hash) that efficiently allows
     storing and retrieving values by name, rather than by position which
     is how arrays work.
 
  ** The bareword "import" is now recognized in scripts and functions.
     However, the functionality to import functions and classes from
     other namespaces into the local scope has not yet been implemented.
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1833,19 +1833,24 @@ namespace octave
         connect (m_file_browser_window, SIGNAL (load_file_signal (const QString&)),
                  this, SLOT (handle_load_workspace_request (const QString&)));
 
         connect (m_file_browser_window, SIGNAL (find_files_signal (const QString&)),
                  this, SLOT (find_files (const QString&)));
 
         setWindowTitle ("Octave");
 
+// See Octave bug #53409 and https://bugreports.qt.io/browse/QTBUG-55357
+#if (QT_VERSION < 0x050601) || (QT_VERSION >= 0x050701)
         setDockOptions (QMainWindow::AnimatedDocks
                         | QMainWindow::AllowNestedDocks
                         | QMainWindow::AllowTabbedDocks);
+#else
+        setDockNestingEnabled (true);
+#endif
 
         addDockWidget (Qt::RightDockWidgetArea, m_command_window);
         addDockWidget (Qt::RightDockWidgetArea, m_doc_browser_window);
         tabifyDockWidget (m_command_window, m_doc_browser_window);
 
 #if defined (HAVE_QSCINTILLA)
         addDockWidget (Qt::RightDockWidgetArea, m_editor_window);
         tabifyDockWidget (m_command_window, m_editor_window);
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -992,16 +992,26 @@ namespace octave
       m_hovered_focus_vname ("")
   {
     setObjectName ("VariableEditor");
     set_title (tr ("Variable Editor"));
     setStatusTip (tr ("Edit variables."));
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setAttribute (Qt::WA_AlwaysShowToolTips);
 
+    m_main->setParent (this);
+// See Octave bug #53409 and https://bugreports.qt.io/browse/QTBUG-55357
+#if (QT_VERSION < 0x050601) || (QT_VERSION >= 0x050701)
+    m_main->setDockOptions (QMainWindow::AnimatedDocks |
+                            QMainWindow::AllowNestedDocks |
+                            QMainWindow::VerticalTabs);
+#else
+    m_main->setDockNestingEnabled (true);
+#endif
+
     // Tool Bar.
 
     construct_tool_bar ();
     m_main->addToolBar (m_tool_bar);
 
     // Colors.
 
     for (int i = 0; i < resource_manager::varedit_color_chars ().length (); i++)
@@ -1012,19 +1022,16 @@ namespace octave
     // area is shrunk to nothing and the widgets live in the MDI window.
 
     QMdiArea *central_mdiarea = new QMdiArea (m_main);
     central_mdiarea->setMinimumSize (QSize (0, 0));
     central_mdiarea->setMaximumSize (QSize (0, 0));
     central_mdiarea->resize (QSize (0, 0));
     m_main->setCentralWidget (central_mdiarea);
 
-    m_main->setParent (this);
-    m_main->setDockOptions (QMainWindow::AllowNestedDocks |
-                            QMainWindow::VerticalTabs);
     setWidget (m_main);
 
     connect (this, SIGNAL (command_signal (const QString&)),
              p, SLOT (execute_command_in_terminal (const QString&)));
   }
 
   // Add an action to a menu or the widget itself.
 
@@ -1076,18 +1083,16 @@ namespace octave
         existing_qdw->raise ();
         existing_qdw->activateWindow ();
 
         return;
       }
 
     variable_dock_widget *page = new variable_dock_widget (this);
     page->setObjectName (name);
-    page->setAllowedAreas(Qt::LeftDockWidgetArea |
-                          Qt::RightDockWidgetArea);
     m_main->addDockWidget (Qt::LeftDockWidgetArea, page);
 
     connect (QApplication::instance(), SIGNAL (focusChanged (QWidget *, QWidget *)),
              page, SLOT (handle_focus_change (QWidget *, QWidget *)));
     connect (page, SIGNAL (destroyed (QObject *)),
              this, SLOT (variable_destroyed (QObject *)));
     connect (page, SIGNAL (variable_focused_signal (const QString&)),
              this, SLOT (variable_focused (const QString&)));
