# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1373080097 -3600
#      Sat Jul 06 04:08:17 2013 +0100
# Node ID 04f4f067eb337b9983a369e7e5258557730c222f
# Parent  bfad37d334352c5b28886298bd93935812cf3145
imformats: fix typos and silence some statements.

* imformats: replace some varargin by varargout (typos) and add
missing semi-colon to silence some statements.

diff --git a/scripts/image/imformats.m b/scripts/image/imformats.m
--- a/scripts/image/imformats.m
+++ b/scripts/image/imformats.m
@@ -81,52 +81,52 @@ function varargout = imformats (arg1, ar
     elseif (ischar (arg1))
       switch (tolower (arg1))
         case "add",
           if (! isstruct (arg2))
             error ("imformats: FORMAT to %s must be a structure.", arg1);
           endif
           arrayfun (@is_valid_format, arg2);
           formats(end + numel (b)) = arg2;
-          varargin{1} = formats;
+          varargout{1} = formats;
 
         case {"remove", "update"},
           if (! ischar (arg2))
             error ("imformats: EXT to %s must be a string.", arg1);
           endif
           ## FIXME: suppose a format with multiple extensions. If one of
           ##        them is requested to be removed, should we remove the
           ##        whole format, or just that extension from the format?
-          match = find_ext_idx (formats, arg2)
+          match = find_ext_idx (formats, arg2);
           if (! any (match))
             error ("imformats: no EXT `%s' found.", arg2);
           endif
           if (strcmpi (arg1, "remove"))
             formats(match) = [];
           else
             ## then it's update
             if (! isstruct (arg3))
               error ("imformats: FORMAT to update must be a structure.");
             endif
             is_valid_format (arg3);
             formats(match) = arg3;
           endif
-          varargin{1} = formats;
+          varargout{1} = formats;
 
         case "factory",
           formats = default_formats ();
         otherwise
           ## then we look for a format with that extension.
-          match = find_ext_idx (formats, arg1)
+          match = find_ext_idx (formats, arg1);
           ## For matlab compatibility, if we don't find any format we must
           ## return an empty struct with NO fields. We can't use match as mask
           if (any (match))
-            varargin{1} = formats(match);
+            varargout{1} = formats(match);
           else
-            varargin{1} = struct ();
+            varargout{1} = struct ();
           endif
       endswitch
     else
       error ("imformats: first argument must be either a structure or string.");
     endif
   else
     varargout{1} = formats;
   endif
