# HG changeset patch
# User Rik <rik@octave.org>
# Date 1534196565 25200
#      Mon Aug 13 14:42:45 2018 -0700
# Node ID 0862570da0ae58fa179f30c7b0c76a673c98bc81
# Parent  e04c56bbbacee4fa0878c0a7131dac5cb56159f7
isfile.m: New function for Matlab compatibility (bug #54508).

* scripts/miscellaneous/isfile.m: New function.

* scripts/miscellaneous/module.mk: Add isfile.m to build system.

* NEWS: Announce new function.

* system.txi: Add isfile to manual.

* syscalls.cc (Fstat): Add isfile to seealso link.

* isfolder.m: Add isfile to seealso link.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -60,16 +60,17 @@ Summary of important user-visible change
     FFTPACK sources have been removed from Octave.
 
  ** The OSMesa library is no longer used.  To print invisible figures
     when using OpenGL graphics, the Qt QOFFSCREENSURFACE feature must be
     available and you must use the qt graphics toolkit.
 
  ** New functions added in 5.0:
 
+      isfile
       isfolder
       ordeig
 
  ** Legacy functions.
 
     The following functions have been declared legacy functions which
     means they are obsolete and should not be used in any new code.
     Unlike deprecated functions, however, their removal from Octave has
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -191,16 +191,18 @@ status information on files; and for man
 @DOCSTRING(S_ISLNK)
 
 @DOCSTRING(S_ISREG)
 
 @DOCSTRING(S_ISSOCK)
 
 @DOCSTRING(fileattrib)
 
+@DOCSTRING(isfile)
+
 @DOCSTRING(isdir)
 
 @DOCSTRING(isfolder)
 
 @DOCSTRING(readdir)
 
 @DOCSTRING(glob)
 
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -847,17 +847,17 @@ For example:
        mode = -rw-r--r--
        modestr = -rw-r--r--
        ino = 9316
        dev = 2049
      @}
   @result{} err = 0
   @result{} msg =
 @end example
-@seealso{lstat, ls, dir, isfolder}
+@seealso{lstat, ls, dir, isfile, isfolder}
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
   octave_value_list retval;
 
   if (args(0).is_scalar_type ())
diff --git a/scripts/miscellaneous/isfile.m b/scripts/miscellaneous/isfile.m
new file mode 100644
--- /dev/null
+++ b/scripts/miscellaneous/isfile.m
@@ -0,0 +1,73 @@
+## Copyright (C) 2018 Rik Wehbring
+##
+## This file is part of Octave.
+##
+## Octave is free software: you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation, either version 3 of the License, or
+## (at your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+## GNU General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <https://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {} {@var{tf} =} isfile (@var{f})
+## Return true if @var{f} is a regular file and false otherwise.
+##
+## If @var{f} is a cell array of strings, @var{tf} is a logical array of the
+## same size.
+## @seealso{isfolder, exist, stat, is_absolute_filename, is_rooted_relative_filename}
+## @end deftypefn
+
+function retval = isfile (f)
+
+  if (nargin != 1)
+    print_usage ();
+  endif
+
+  if (! (ischar (f) || iscellstr (f)))
+    error ("isfile: F must be a string or cell array of strings");
+  endif
+
+  f = cellstr (f);
+  retval = false (size (f));
+  for i = 1:numel (f)
+    [info, err] = stat (f{i});
+    retval(i) = (! err && S_ISREG (info.mode));
+  endfor
+
+endfunction
+
+
+%!shared mfile
+%! mfile = which ("isfile");
+
+%!assert (isfile (mfile))
+%!assert (! isfile (tempdir ()))
+%!assert (isfile ({mfile, pwd()}), [true, false])
+%!assert (isfile ({mfile; pwd()}), [true; false])
+
+%!test
+%! unwind_protect
+%!   tmp = tempname ();
+%!   [d, n] = fileparts (tmp);
+%!   assert (! isfile (tmp));
+%!   save ("-text", tmp, "tmp");  # cheap way to create a file
+%!   assert (isfile (tmp));
+%!   addpath (d);
+%!   assert (! isfile (n));
+%! unwind_protect_cleanup
+%!   try, unlink (tmp); end_try_catch
+%!   try, rmpath (d); end_try_catch
+%! end_unwind_protect 
+
+## Test input validation
+%!error isfile ()
+%!error isfile ("a", "b")
+%!error <F must be a string> isfile (1.0)
diff --git a/scripts/miscellaneous/isfolder.m b/scripts/miscellaneous/isfolder.m
--- a/scripts/miscellaneous/isfolder.m
+++ b/scripts/miscellaneous/isfolder.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} isfolder (@var{f})
 ## @deftypefnx {} {@var{tf} =} isfolder (@var{f})
 ## Return true if @var{f} is a directory and false otherwise.
 ##
 ## If @var{f} is a cell array of strings, @var{tf} is a logical array of the
 ## same size.
-## @seealso{exist, stat, is_absolute_filename, is_rooted_relative_filename}
+## @seealso{isfile, exist, stat, is_absolute_filename, is_rooted_relative_filename}
 ## @end deftypefn
 
 function retval = isfolder (f)
 
   if (nargin != 1)
     print_usage ();
   endif
 
diff --git a/scripts/miscellaneous/module.mk b/scripts/miscellaneous/module.mk
--- a/scripts/miscellaneous/module.mk
+++ b/scripts/miscellaneous/module.mk
@@ -28,16 +28,17 @@ FCN_FILE_DIRS += \
   %reldir%/genvarname.m \
   %reldir%/getfield.m \
   %reldir%/grabcode.m \
   %reldir%/gunzip.m \
   %reldir%/info.m \
   %reldir%/inputParser.m \
   %reldir%/inputname.m \
   %reldir%/isdeployed.m \
+  %reldir%/isfile.m \
   %reldir%/isfolder.m \
   %reldir%/ismac.m \
   %reldir%/ispc.m \
   %reldir%/isunix.m \
   %reldir%/license.m \
   %reldir%/list_primes.m \
   %reldir%/loadobj.m \
   %reldir%/ls.m \
