# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1550774475 0
#      Thu Feb 21 18:41:15 2019 +0000
# Node ID 8554becefe1b915235e59fba83842eeaadd7f0cd
# Parent  c97a65af7c4bac33f6fb58fdb713a823f7573836
handle -full argument for methods function (bug #55487)

* methods.m: Accept "-full" argument.  Currently only works for Java
methods.  Update tests.

diff --git a/scripts/miscellaneous/methods.m b/scripts/miscellaneous/methods.m
--- a/scripts/miscellaneous/methods.m
+++ b/scripts/miscellaneous/methods.m
@@ -27,45 +27,55 @@
 ## @var{classname} may be the name of an Octave class or a Java class.
 ##
 ## When called with no output arguments, @code{methods} prints the list of
 ## method names to the screen.  Otherwise, the output argument @var{mtds}
 ## contains the list in a cell array of strings.
 ## @seealso{fieldnames}
 ## @end deftypefn
 
-function mtds = methods (obj)
+function mtds = methods (obj, opt)
 
-  if (nargin != 1)
+  if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
+  showsigs = (nargin > 1 && ischar (opt) && strcmp (opt, "-full"));
+  havesigs = false;
+
   if (isobject (obj))
     ## Call internal C++ function for Octave objects
     mtds_list = __methods__ (obj);
   elseif (ischar (obj))
     ## Could be a classname for an Octave class or Java class.
     ## Try Octave class first.
     mtds_list = __methods__ (obj);
     if (isempty (mtds_list))
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
       mtds_list = ostrsplit (mtds_str, ';');
+      havesigs = true;
     endif
   elseif (isjava (obj))
     ## FIXME: Function prototype accepts java obj, but doesn't work if obj
     ##        is e.g., java.lang.String.  Convert obj to classname then.
     try
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
     catch
       obj = class (obj);
       mtds_str = javaMethod ("getMethods", "org.octave.ClassHelper", obj);
     end_try_catch
     mtds_list = strsplit (mtds_str, ';');
+    havesigs = true;
   else
-    error ("methods: Invalid input argument");
+    error ("methods: invalid input argument");
+  endif
+
+  if (havesigs && ! showsigs)
+    mtds_list = regexprep (mtds_list, '^(?:[^ ]+ )+(\w+)\(.*$', '$1');
+    mtds_list = unique (mtds_list);
   endif
 
   if (nargout == 0)
     classname = ifelse (ischar (obj), obj, class (obj));
     printf ("Methods for class %s:\n", classname);
     disp (list_in_columns (mtds_list));
   else
     mtds = mtds_list;
@@ -76,18 +86,24 @@ endfunction
 
 ## test Octave classname
 %!test
 %! mtds = methods ("ftp");
 %! assert (mtds{1}, "ascii");
 
 ## test Java classname
 %!testif HAVE_JAVA; usejava ("jvm")
+%! mtds = methods ("java.lang.Double", "-full");
+%! search = strfind (mtds, "java.lang.Double valueOf");
+%! assert (! isempty ([search{:}]));
+
+## test Java classname
+%!testif HAVE_JAVA; usejava ("jvm")
 %! mtds = methods ("java.lang.Double");
-%! search = strfind (mtds, "java.lang.Double valueOf");
+%! search = strfind (mtds, "valueOf");
 %! assert (! isempty ([search{:}]));
 
 ## classdef
 %!assert (methods ("inputParser"),
 %!        {"addOptional"; "addParamValue"; "addParameter";
 %!         "addRequired"; "addSwitch"; "add_missing"; "delete";
 %!         "disp"; "error"; "is_argname"; "parse"; "validate_arg";
 %!         "validate_name"});
