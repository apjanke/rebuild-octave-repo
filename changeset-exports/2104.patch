# HG changeset patch
# User jwe
# Date 830701042 0
#      Sun Apr 28 14:17:22 1996 +0000
# Node ID a64f53e6fc73cd625f0fd21c7381f0948012ce58
# Parent  30e2b1c4ffd9f4e5086974f1fffdee75c14bd489
[project @ 1996-04-28 14:14:40 by jwe]

diff --git a/src/oct-fstrm.cc b/src/oct-fstrm.cc
--- a/src/oct-fstrm.cc
+++ b/src/oct-fstrm.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 #include <cerrno>
 #include <cstring>
 
 #include "error.h"
 #include "oct-fstrm.h"
 
 octave_fstream::octave_fstream (const string& nm_arg,
 				ios::openmode md = ios::in|ios::out,
-				octave_base_stream::arch_type at = native)
+				octave_base_stream::arch_type at)
   : octave_base_stream (md, at), nm (nm_arg)
 {
   // Override default protection of 0664 so that umask will appear to
   // do the right thing.
 
   fs.open (nm.c_str (), md, 0666);
 
   if (! fs)
diff --git a/src/oct-fstrm.h b/src/oct-fstrm.h
--- a/src/oct-fstrm.h
+++ b/src/oct-fstrm.h
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_fstream : public octave_base_stream
 {
 public:
 
   octave_fstream (const string& nm_arg,
 		  ios::openmode md = ios::in|ios::out,
-		  octave_base_stream::arch_type at = native);
+		  octave_base_stream::arch_type at = at_native);
 
   ~octave_fstream (void) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (streampos offset, ios::seek_dir origin);
 
   // Return current stream position.
diff --git a/src/oct-iostrm.h b/src/oct-iostrm.h
--- a/src/oct-iostrm.h
+++ b/src/oct-iostrm.h
@@ -30,17 +30,17 @@ class ostream;
 
 class
 octave_base_iostream : public octave_base_stream
 {
 public:
 
   octave_base_iostream (const string& n = string (),
 			ios::openmode md = ios::in|ios::out,
-			octave_base_stream::arch_type at = native)
+			octave_base_stream::arch_type at = at_native)
     : octave_base_stream (md, at), nm (n) { }
 
   ~octave_base_iostream (void) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (streampos offset, ios::seek_dir origin);
 
@@ -74,17 +74,17 @@ private:
 };
 
 class
 octave_istream : public octave_base_iostream
 {
 public:
 
   octave_istream (istream *arg = 0, const string& nm = string ())
-    : octave_base_iostream (nm, ios::in, octave_base_stream::native),
+    : octave_base_iostream (nm, ios::in, octave_base_stream::at_native),
       is (arg) { }
 
   ~octave_istream (void) { }
 
   istream *input_stream (void) { return is; }
 
   ostream *output_stream (void) { return 0; }
 
@@ -102,17 +102,17 @@ private:
 };
 
 class
 octave_ostream : public octave_base_iostream
 {
 public:
 
   octave_ostream (ostream *arg, const string& nm = string ())
-    : octave_base_iostream (nm, ios::out, octave_base_stream::native),
+    : octave_base_iostream (nm, ios::out, octave_base_stream::at_native),
       os (arg) { }
 
   ~octave_ostream (void) { }
 
   istream *input_stream (void) { return 0; }
 
   ostream *output_stream (void) { return os; }
 
diff --git a/src/oct-prcstrm.h b/src/oct-prcstrm.h
--- a/src/oct-prcstrm.h
+++ b/src/oct-prcstrm.h
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_iprocstream : public octave_istdiostream
 {
 public:
 
   octave_iprocstream (const string& n,
 		      ios::openmode arg_md = ios::in,
-		      arch_type arg_at = native);
+		      arch_type arg_at = at_native);
 
   ~octave_iprocstream (void);
 
 private:
 
   // No copying!
 
   octave_iprocstream (const octave_iprocstream&);
@@ -47,17 +47,17 @@ private:
 
 class
 octave_oprocstream : public octave_ostdiostream
 {
 public:
 
   octave_oprocstream (const string& n,
 		       ios::openmode arg_md = ios::out,
-		       arch_type arg_at = native);
+		       arch_type arg_at = at_native);
 
   ~octave_oprocstream (void);
 
 private:
 
   // No copying!
 
   octave_oprocstream (const octave_oprocstream&);
diff --git a/src/oct-stdstrm.h b/src/oct-stdstrm.h
--- a/src/oct-stdstrm.h
+++ b/src/oct-stdstrm.h
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 
 class
 octave_base_stdiostream : public octave_base_stream
 {
 public:
 
   octave_base_stdiostream (const string& n, FILE *f,
 			   ios::openmode arg_md = ios::in|ios::out,
-			   arch_type arg_at = native)
+			   arch_type arg_at = at_native)
     : octave_base_stream (arg_md, arg_at), nm (n), fp (f) { }
 
   ~octave_base_stdiostream (void);
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (streampos offset, ios::seek_dir origin);
 
@@ -72,17 +72,17 @@ protected:
 
 class
 octave_istdiostream : public octave_base_stdiostream
 {
 public:
 
   octave_istdiostream (const string& n, FILE *f = 0,
 		       ios::openmode arg_md = ios::in,
-		       arch_type arg_at = native);
+		       arch_type arg_at = at_native);
 
   ~octave_istdiostream (void);
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return is ? is->eof () : true; }
 
   istream *input_stream (void) { return is; }
@@ -116,17 +116,17 @@ private:
 
 class
 octave_ostdiostream : public octave_base_stdiostream
 {
 public:
 
   octave_ostdiostream (const string& n, FILE *f = 0,
 		       ios::openmode arg_md = ios::out,
-		       arch_type arg_at = native);
+		       arch_type arg_at = at_native);
 
   ~octave_ostdiostream (void);
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return os ? os->eof () : true; }
 
   istream *input_stream (void) { return 0; }
diff --git a/src/oct-strstrm.h b/src/oct-strstrm.h
--- a/src/oct-strstrm.h
+++ b/src/oct-strstrm.h
@@ -29,17 +29,17 @@ Software Foundation, 59 Temple Place - S
 #include "oct-stream.h"
 
 class
 octave_base_strstream : public octave_base_stream
 {
 public:
 
   octave_base_strstream (ios::openmode arg_md = ios::out,
-			 arch_type arg_at = native)
+			 arch_type arg_at = at_native)
     : octave_base_stream (arg_md, arg_at) { }
 
   ~octave_base_strstream (void) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (streampos offset, ios::seek_dir origin);
 
@@ -68,22 +68,22 @@ private:
 
 class
 octave_istrstream : public octave_base_strstream
 {
 public:
 
   octave_istrstream (const char *data,
 		     ios::openmode arg_md = ios::out,
-		     arch_type arg_at = native)
+		     arch_type arg_at = at_native)
     : octave_base_strstream (arg_md, arg_at), is (data) { }
 
   octave_istrstream (const string& data,
 		     ios::openmode arg_md = ios::out,
-		     arch_type arg_at = native)
+		     arch_type arg_at = at_native)
     : octave_base_strstream (arg_md, arg_at), is (data.c_str ()) { }
 
   ~octave_istrstream (void) { }
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return is.eof (); }
 
@@ -109,17 +109,17 @@ private:
 };
 
 class
 octave_ostrstream : public octave_base_strstream
 {
 public:
 
   octave_ostrstream (ios::openmode arg_md = ios::out,
-		     arch_type arg_at = native)
+		     arch_type arg_at = at_native)
     : octave_base_strstream (arg_md, arg_at) { }
 
   ~octave_ostrstream (void) { }
 
   // Return non-zero if EOF has been reached on this stream.
 
   bool eof (void) const { return os.eof (); }
 
