# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1318001940 25200
#      Fri Oct 07 08:39:00 2011 -0700
# Node ID 5c22edebf2e87eedec100adc9fbda760c87ae2d2
# Parent  49ae6f4971711c5e54370d6aa9986ad1773f510e
rot90.m: Simplify function by using mod() rather than rem()

* rot90.m: Simplify function by using mod() rather than rem()

diff --git a/scripts/general/rot90.m b/scripts/general/rot90.m
--- a/scripts/general/rot90.m
+++ b/scripts/general/rot90.m
@@ -55,27 +55,21 @@
 function B = rot90 (A, k = 1)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
   if (ndims (A) > 2)
     error ("rot90: A must be a 2-D array");
-  endif
-
-  if (! (isscalar (k) && isreal (k) && fix (k) == k))
+  elseif (! (isscalar (k) && isreal (k) && k == fix (k)))
     error ("rot90: K must be a single real integer");
   endif
 
-  k = rem (k, 4);
-
-  if (k < 0)
-    k = k + 4;
-  endif
+  k = mod (k, 4);
 
   if (k == 0)
     B = A;
   elseif (k == 1)
     B = flipud (A.');
   elseif (k == 2)
     B = flipud (fliplr (A));
   elseif (k == 3)
@@ -88,21 +82,21 @@ endfunction
 
 
 %!test
 %! x1 = [1, 2; 3, 4];
 %! x2 = [2, 4; 1, 3];
 %! x3 = [4, 3; 2, 1];
 %! x4 = [3, 1; 4, 2];
 %!
-%! assert(rot90 (x1) == x2);
-%! assert(rot90 (x1, 2) == x3);
-%! assert(rot90 (x1, 3) == x4);
-%! assert(rot90 (x1, 4) == x1);
-%! assert(rot90 (x1, 5) == x2);
-%! assert(rot90 (x1, -1) == x4);
+%! assert(rot90 (x1), x2);
+%! assert(rot90 (x1, 2), x3);
+%! assert(rot90 (x1, 3), x4);
+%! assert(rot90 (x1, 4), x1);
+%! assert(rot90 (x1, 5), x2);
+%! assert(rot90 (x1, -1), x4);
 
 %% Test input validation
 %!error rot90 ();
 %!error rot90 (1, 2, 3);
 %!error rot90 (1, ones(2));
 %!error rot90 (1, 1.5);
 %!error rot90 (1, 1+i);
