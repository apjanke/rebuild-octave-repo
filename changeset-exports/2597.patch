# HG changeset patch
# User jwe
# Date 850844882 0
#      Tue Dec 17 17:48:02 1996 +0000
# Node ID 106ae3df29f5f9e579746e33c7a9e1cb9aa315ae
# Parent  7020b79afd9ce4b366a4330efda96c32893a8e20
[project @ 1996-12-17 17:48:01 by jwe]

diff --git a/README.Linux b/README.Linux
--- a/README.Linux
+++ b/README.Linux
@@ -4,18 +4,18 @@ snapshot releases also primarily use Lin
 
 However, I have recently started to receive a significant number of
 reports from people who say that they can't compile or run Octave on
 Linux/GNU systems.  In nearly every case, the problem has turned out
 to be that the compilers or libraries have not been installed
 properly.  I suspect that this often results from a botched upgrade,
 or from attempting to install the compilers from the standard source
 distributions.  But in some cases, the cause has been a buggy Linux
-distributions.  Many of these problems go unnoticed because much of
-the software for Linux is written in C, not C++.
+distribution.  Many of these problems go unnoticed because much of the
+software for Linux is written in C, not C++.
 
 Octave compiles, but it won't run
 ---------------------------------
 
 If you can compile Octave, but it crashes with a segmentation fault
 right away, you probably have incompatible versions of libc and libg++
 installed, or you have a version of the dynamic loader, ld.so, that is
 incompatible with your versions of the libraries, or both.
@@ -62,20 +62,20 @@ gcc version 2.7.2
  /usr/lib/g++-include
  /usr/local/include
  /usr/i486-linux/include
  /usr/lib/gcc-lib/i486-linux/2.7.2/include
  /usr/include
 End of search list.
 ...
 
-If the location of your include files is not listed in the search
-path, then you might be able to fix that with a symbolic link.
-However, if your version of libg++ was not compiled with your current
-version of gcc, you are likely to run into more trouble.
+If the location of the correct set of include files is not listed in
+the search path, then you might be able to fix that with a symbolic
+link.  However, if your version of libg++ was not compiled with your
+current version of gcc, you are likely to run into more trouble.
 
 Upgrading your compiler and libraries
 -------------------------------------
 
 Finally, installing libg++ on a Linux system is not as simple as it
 should be, because libg++ shares some basic I/O code with the Linux C
 library, and they must be compatible.  You should get and read the
 release notes for the compiler and libraries.
diff --git a/doc/faq/FAQ.texi b/doc/faq/FAQ.texi
--- a/doc/faq/FAQ.texi
+++ b/doc/faq/FAQ.texi
@@ -13,59 +13,59 @@
 @finalout
 @end tex
 
 @setchapternewpage off
 
 @titlepage
 @title Octave FAQ
 @subtitle Frequently asked questions about Octave
-@subtitle December 1, 1994
+@subtitle December 14, 1996
 @sp 1
 @author John W. Eaton
 @page
 @end titlepage
 
 @ifinfo
 @node Top, What is Octave?, (dir), (dir)
 @top
 @unnumbered Preface
 @cindex FAQ for Octave, latest version
 @end ifinfo
 
 This is a list of frequently asked questions (FAQ) for Octave users.
 
-Some information in this FAQ was developed for earlier versions of
+Some information in this FAQ was written for earlier versions of
 Octave and may now be obsolete.
 
 I'm looking for new questions (@emph{with} answers), better answers,
 or both.  Please send suggestions to bug-octave@@bevo.che.wisc.edu.
 If you have general questions about Octave, or need help for something
-that is not covered by the FAQ, please use the
+that is not covered by the Octave manual or the FAQ, please use the
 help-octave@@bevo.che.wisc.edu mailing list.
 
 This FAQ is intended to supplement, not replace, the Octave manual.
-Before posting a question to the hlpe-octave mailing list, you should
+Before posting a question to the help-octave mailing list, you should
 first check to see if the topic is covered in the manual.
 
 @menu
 * What is Octave?::             
-* Version 1.1.0::               
+* Version 2.0::               
 * Octave Features::             
 * Documentation::               
 * Getting Octave::              
 * Installation::                
 * Common problems::             
 * Getting additional help::     
 * Bug reports::                 
 * MATLAB compatibility::        
 * Index::                       
 @end menu
 
-@node What is Octave?, Version 1.1.0, Top, Top
+@node What is Octave?, Version 2.0, Top, Top
 @chapter What is Octave?
 
 Octave is a high-level interactive language, primarily intended for
 numerical computations that is mostly compatible with
 @sc{Matlab}.@footnote{@sc{Matlab} is a registered trademark of The MathWorks,
 Inc.}
 
 Octave can do arithmetic for real and complex scalars and matrices,
@@ -92,33 +92,34 @@ of C++ classes.  If possible, the Fortra
 with the system's Fortran compiler, and called directly from the C++
 functions.  If that's not possible, you can still compile Octave if
 you have the free Fortran to C translator f2c.
 
 Octave is also free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation.
 
-@node Version 1.1.0, Octave Features, What is Octave?, Top
-@chapter What's new in version 1.1.0 of Octave
+@node Version 2.0, Octave Features, What is Octave?, Top
+@chapter What's new in version 2.0 of Octave
 
-The long-awaited version 1.1.0 of Octave has now been released.  Many
+The long-awaited version 2.0 of Octave has now been released.  Many
 bugs have been fixed and lots of new features added.  Octave is now much
 more compatible with @sc{Matlab}.
 
-Version 1.1.0 fixes many bugs, but as with any ``x.y.0'' release there
-will be a few glitches.  You can expect a 1.1.1 shortly.  You can help
-contribute to the quality of Octave by trying it out and submitting bug
-reports where you find them.
+Version 2.0 fixes many bugs, but as with any ``x.y.0'' release there
+will be a few glitches.  There will probably be a 2.0.1 release to fix
+most of these problems.  You can help contribute to the quality of
+Octave by using it and submitting bug reports for the problems you
+encounter.
 
 A list of user-visible changes in recent versions of Octave may be found
 in the file NEWS, distributed in both source and binary releases of
 Octave.
 
-@node Octave Features, Documentation, Version 1.1.0, Top
+@node Octave Features, Documentation, Version 2.0, Top
 @chapter What features are unique to Octave?
 
 @menu
 * Command and variable name completion::  
 * Command history::             
 * Data structures::             
 * Short-circuit boolean operators::  
 * Increment and decrement operators::  
@@ -176,95 +177,124 @@ Octave includes a limited amount of supp
 structures.  The current implementation uses an associative array
 with indices limited to strings, but the syntax is more like C-style
 structures.  Here are some examples of using data structures in Octave.
 
 @itemize @bullet
 @item Elements of structures can be of any value type.
 
 @example
+@group
 octave:1> x.a = 1; x.b = [1, 2; 3, 4]; x.c = "string";
 octave:2> x.a
 x.a = 1
 octave:3> x.b
 x.b =
 
   1  2
   3  4
 
 octave:4> x.c
 x.c = string
+@end group
 @end example
 
 @item Structures may be copied.
 
 @example
+@group
 octave:1> y = x
 y =
+@{
+  a = 1
+  b =
 
-<structure: a b c>
+    1  2
+    3  4
+
+  c = string
+  s =
+
+    0.00000  0.00000  0.00000
+    0.00000  5.46499  0.00000
+    0.00000  0.00000  0.36597
+
+  u =
+
+    -0.40455  -0.91451
+    -0.91451   0.40455
+
+  v =
+
+    -0.57605   0.81742
+    -0.81742  -0.57605
+@}
+@end group
 @end example
 
 @item Structure elements may reference other structures.
 
 @example
+@group
 octave:1> x.b.d = 3
 x.b.d = 3
 octave:2> x.b
-x.b =
-
-<structure: d>
-
+ans =
+@{
+  d = 3
+@}
 octave:3> x.b.d
-x.b.d = 3
+ans = 3
+@end group
 @end example
 
 @item Functions can return structures.
 
 @example
+@group
 octave:1> function y = f (x)
 > y.re = real (x);
 > y.im = imag (x);
 > endfunction
 
 octave:2> f (rand + rand*I);
 ans =
-
-<structure: im re>
-
-octave:3> ans.im, ans.re
-ans.im = 0.93411
-ans.re = 0.56234
+@{
+  im = 0.18033
+  re = 0.19069
+@}
+@end group
 @end example
 
 @item Function return lists can include structure elements, and they may
 be indexed like any other variable.
 
 @example
-octave:1> [x.u, x.s(2:3,2:3), x.v] = svd ([1, 2; 3, 4])
-x.u =
+@group
+octave:1> [x.u, x.s(2:3,2:3), x.v] = svd ([1, 2; 3, 4]);
+octave:2> x
+x =
+@{
+  s =
 
-  -0.40455  -0.91451
-  -0.91451   0.40455
-
-x.s =
+    0.00000  0.00000  0.00000
+    0.00000  5.46499  0.00000
+    0.00000  0.00000  0.36597
 
-  0.00000  0.00000  0.00000
-  0.00000  5.46499  0.00000
-  0.00000  0.00000  0.36597
+  u =
 
-x.v =
+    -0.40455  -0.91451
+    -0.91451   0.40455
 
-  -0.57605   0.81742
-  -0.81742  -0.57605
+  v =
 
-octave:8> x
-x =
-
-<structure: s u v>
+    -0.57605   0.81742
+    -0.81742  -0.57605
+@}
+@end group
 @end example
 
 @item You can also use the function @code{is_struct} to determine
 whether a given value is a data structure.  For example
 
 @example
 is_struct (x)
 @end example
@@ -357,23 +387,25 @@ Octave has a real mechanism for handling
 unspecified number of arguments, so it is no longer necessary to place
 an upper bound on the number of optional arguments that a function can
 accept.
 
 Here is an example of a function that uses the new syntax to print a
 header followed by an unspecified number of values:
 
 @example
+@group
 function foo (heading, ...)
   disp (heading);
   va_start ();
   while (--nargin)
     disp (va_arg ());
   endwhile
 endfunction
+@end group
 @end example
 
 Calling @code{va_start()} positions an internal pointer to the first
 unnamed argument and allows you to cycle through the arguments more than
 once.  It is not necessary to call @code{va_start()} if you do not plan
 to cycle through the arguments more than once.
 
 The function @code{va_arg()} returns the value of the next available
@@ -393,30 +425,32 @@ unnamed arguments to another function.
 Octave also has a real mechanism for handling functions that return an
 unspecified number of values, so it is no longer necessary to place an
 upper bound on the number of outputs that a function can produce.
 
 Here is an example of a function that uses the new syntax to produce
 @samp{N} values:
 
 @example
+@group
 function [...] = foo (n)
   for i = 1:n
     vr_val (i);
   endfor
 endfunction
+@end group
 @end example
 
 @node Built-in ODE and DAE solvers,  , Variable-length return lists, Octave Features
 @section Built-in ODE and DAE solvers
 
 @cindex DASSL
 @cindex LSODE
 
-Octave includes LSODE and DASSL for solving systems of stiff 
+Octave includes LSODE and DASSL for solving systems of stiff ordinary
 differential and differential-algebraic equations.  These functions are
 built in to the interpreter.
 
 @node Documentation, Getting Octave, Octave Features, Top
 @chapter What documentation exists for Octave?
 
 @cindex Octave, documentation
 
@@ -428,21 +462,20 @@ it is not a finished document.  If you h
 that some topic is not adequately explained, indexed, or
 cross-referenced, please send a bug report to bug-octave@@bevo.che.wisc.edu.
 
 Because the Octave manual is written using Texinfo, the complete text of
 the Octave manual is also available on line using the GNU Info system
 via the GNU Emacs, info, or xinfo programs, or by using the @samp{help -i} 
 command to start the GNU info browser directly from the Octave prompt.
 
-It is also possible to use WWW browsers such as Mosaic to read the
-Octave manual (or any other Info file) by using Roar Smith's info2www
-program to convert GNU Info files to HTML.  The source for info2www is
-available via anonymous ftp from ftp.che.wisc.edu in the directory
-@file{/pub/www}.
+It is also possible to use your favorite WWW browser to read the Octave
+manual (or any other Info file) by using Roar Smith's info2www program
+to convert GNU Info files to HTML.  The source for info2www is available
+from @url{ftp://ftp.che.wisc.edu/pub/www}.
 
 @node Getting Octave, Installation, Documentation, Top
 @chapter Obtaining Source Code
 
 @cindex Source code
 
 @menu
 * Octave for Unix::             
@@ -517,17 +550,17 @@ Octave currently runs on Unix-like syste
 to make Octave work on other systems.  If you are interested in porting
 Octave to other systems, please contact bug-octave@@bevo.che.wisc.edu.
 
 @node latest versions,  , Octave for other platforms, Getting Octave
 @section What is the latest version of Octave
 
 @cindex Octave, version date
 
-The latest version of Octave is 1.1.0, released January 1995.
+The latest version of Octave is 2.0, released December 1996.
 
 @node Installation, Common problems, Getting Octave, Top
 @chapter Installation Issues and Problems
 
 @cindex Octave, building 
 
 Octave requires approximately 50MB of disk storage to unpack and
 install (significantly less if you don't compile with debugging
@@ -606,18 +639,20 @@ help-octave@@bevo.che.wisc.edu
 is available for questions related to using, installing, and porting
 Octave that are not adequately answered by the Octave manual or by this
 document.
 
 If you would like to join the discussion and receive all messages sent
 to the list, please send a short note to
 
 @example
+@group
 help-octave-request@@bevo.che.wisc.edu
             ^^^^^^^
+@end group
 @end example
 
 @strong{Please do not} send requests to be added or removed from the the
 mailing list, or other administrative trivia to the list itself.
 
 An archive of old postings to the help-octave mailing list is maintained
 on ftp.che.wisc.edu in the directory @file{/pub/octave/MAILING-LISTS}.
 
@@ -674,76 +709,55 @@ Irrelevant.
 @item
 Known differences, perhaps configurable with a user preference variable.
 
 @item
 Unknown differences.
 @end enumerate
 
 The first category, irrelevant differences, do not affect computations
-and most likely do not affect the execution of function files.  Some
-examples are:
-
-When typing @samp{help function}, Octave displays the first set of
-comment lines @emph{after} the function declaration, but @sc{Matlab}
-the first set of comment lines starting from the beginning of the file.
+and most likely do not affect the execution of function files.
 
 The differences of the second category are usually because the authors
 of Octave decided on a better (subjective) implementation that the way
 @sc{Matlab} does it, and so introduced ``user preference variables'' so that
 you can customize Octave's behavior to be either @sc{Matlab}-compatible or
 to use Octave's new features.  To make Octave more @sc{Matlab}-compatible,
-put the following statements in your @file{~/.octaverc} file.  This is a
-partial list of the user preference variables that should be changed to
-get @sc{Matlab}-compatible behavior.  (It is partial because not all the
-differences are currently known, and when they become known, this
-document lags behind.)
+put the following statements in your @file{~/.octaverc} file, or use the
+command line option @samp{--traditional}, which implies all of these
+settings.  Note that this list may not be complete, because some new
+variables may have been introduced since this document was last updated.
 
 @example
-  PS1 = '>> ';
-  PS2 = '';
-  default_save_format = 'mat-binary';
-  define_all_return_values = 'true';
-  do_fortran_indexing = 'true';
-  empty_list_elements_ok = 'true';
-  implicit_str_to_num_ok = 'true';
-  ok_to_lose_imaginary_part = 'true';
-  page_screen_output = 'false';
-  prefer_column_vectors = 'false';
-  prefer_zero_one_indexing = 'true';
-  print_empty_dimensions = 'false';
-  treat_neg_dim_as_zero = 'true';
-  warn_function_name_clash = 'false';
-  whitespace_in_literal_matrix = 'traditional';
+@group
+  PS1 = ">> ";
+  PS2 = "";
+  beep_on_error = 1;
+  default_save_format = "mat-binary";
+  define_all_return_values = 1;
+  do_fortran_indexing = 1;
+  empty_list_elements_ok = 1;
+  implicit_str_to_num_ok = 1;
+  ok_to_lose_imaginary_part = 1;
+  page_screen_output = 0;
+  prefer_column_vectors = 0;
+  prefer_zero_one_indexing = 1;
+  print_empty_dimensions = 0;
+  treat_neg_dim_as_zero = 1;
+  warn_function_name_clash = 0;
+  whitespace_in_literal_matrix = "traditional";
+@end group
 @end example
 
 Some other known differences are:
 
 @itemize @bullet
 @item
-String subscripting is not yet implemented in Octave.  For example,
-
-@example
-a = 'reknob';
-a([6,1,5,3,2,4])
-@end example
-
-@noindent
-returns the string @samp{broken} in @sc{Matlab}, but generates an error in
-Octave.  A future release of Octave will fix this along with providing
-a much more complete and powerful set of functions for manipulating strings.
-
-@item
 The Octave plotting functions are mostly compatible with the ones from
 @sc{Matlab} 3.x, but not from @sc{Matlab} 4.x.
-
-@item
-The C-style I/O functions are not completely compatible.  It would be
-useful for someone to explore the differences so that they might be
-fixed, or at least noted in the manual.
 @end itemize
 
 The third category of differences is (hopefully) shrinking.  If you find
 a difference between Octave behavior and @sc{Matlab}, then you should send a
 description of this difference (with code illustrating the difference,
 if possible) to bug-octave@@bevo.che.wisc.edu.
 
 An archive of old postings to the Octave mailing lists is maintained
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+Tue Dec 17 11:02:02 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* misc/lo-error.c: Convert C++-style comments to C-style comments.
+
 Wed Dec 11 01:50:31 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* misc/Makefile.in (SPECIAL_DEPEND): Delete d1mach.o from the list.
 
 Tue Dec 10 01:43:10 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0 released.
 
diff --git a/libcruft/misc/lo-error.c b/libcruft/misc/lo-error.c
--- a/libcruft/misc/lo-error.c
+++ b/libcruft/misc/lo-error.c
@@ -25,20 +25,20 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
 
 #include "lo-error.h"
 
-// Having this file in this directory is a kluge to avoid unresolved
-// symbol errors when creating shared versions of libcruft.
+/* Having this file in this directory is a kluge to avoid unresolved
+   symbol errors when creating shared versions of libcruft. */
 
-// Pointer to the current error handling function.
+/* Pointer to the current error handling function. */
 liboctave_error_handler current_liboctave_error_handler = liboctave_fatal;
 
 static void
 verror (const char *name, const char *fmt, va_list args)
 {
   if (name)
     fprintf (stderr, "%s: ", name);
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+Mon Dec 16 15:23:04 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install): Use ls -LR to create ls-R database.
+	Also list contents of $libexecdir/octave in ls-R database.
+
 Tue Dec 10 01:43:07 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0 released.
 
 Fri Dec  6 15:23:46 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 1.94.
 
diff --git a/scripts/Makefile.in b/scripts/Makefile.in
--- a/scripts/Makefile.in
+++ b/scripts/Makefile.in
@@ -42,17 +42,17 @@ all: $(SUBDIRS)
 	cd $@ ; $(MAKE) all
 .PHONY: $(SUBDIRS)
 
 install uninstall clean mostlyclean distclean maintainer-clean::
 	@$(subdir-for-command)
 .PHONY: install uninstall clean mostlyclean distclean maintainer-clean
 
 install::
-	ls -R $(datadir)/octave > $(datadir)/octave/ls-R
+	ls -LR $(datadir)/octave $(libexecdir)/octave > $(datadir)/octave/ls-R
 
 uninstall::
 	rm -f $(datadir)/octave/ls-R
 
 tags TAGS:: $(SOURCES)
 	$(SUBDIR_FOR_COMMAND)
 
 tags::
