# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456333575 18000
#      Wed Feb 24 12:06:15 2016 -0500
# Node ID e078d2208d866f931974c63b34f9b4fbcedebdb1
# Parent  36e75e013849b3729ea41742aae58a4bdcc382cf
avoid warnings about implicit float to booll conversions

* oct-stream.cc (is_old_NA, replace_old_NA):
New templates and specializations.
(convert_and_copy): Use them.
Move check for do_NA_conv outside of loop.

diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -3096,16 +3096,46 @@ octave_stream::is_open (void) const
 
 void
 octave_stream::close (void)
 {
   if (stream_ok ())
     rep->close ();
 }
 
+// FIXME: maybe these should be defined in lo-ieee.h?
+
+template <typename T>
+static inline bool
+is_old_NA (T)
+{
+  return false;
+}
+
+template <>
+inline bool
+is_old_NA<double> (double val)
+{
+  return __lo_ieee_is_old_NA (val);
+}
+
+template <typename T>
+static inline T
+replace_old_NA (T val)
+{
+  return val;
+}
+
+template <>
+inline double
+replace_old_NA<double> (double val)
+{
+  return __lo_ieee_replace_old_NA (val);
+}
+
 template <typename SRC_T, typename DST_T>
 static octave_value
 convert_and_copy (std::list<void *>& input_buf_list,
                   octave_idx_type input_buf_elts,
                   octave_idx_type elts_read,
                   octave_idx_type nr, octave_idx_type nc, bool swap,
                   bool do_float_fmt_conv, bool do_NA_conv,
                   oct_mach_info::float_format from_flt_fmt)
@@ -3120,45 +3150,63 @@ convert_and_copy (std::list<void *>& inp
 
   for (std::list<void *>::const_iterator it = input_buf_list.begin ();
        it != input_buf_list.end (); it++)
     {
       SRC_T *data = static_cast<SRC_T *> (*it);
 
       if (swap || do_float_fmt_conv)
         {
-          for (octave_idx_type i = 0; i < input_buf_elts && j < elts_read;
-               i++, j++)
+          if (do_NA_conv)
             {
-              if (swap)
-                swap_bytes<sizeof (SRC_T)> (&data[i]);
-              else if (do_float_fmt_conv)
-                do_float_format_conversion (&data[i], sizeof (SRC_T),
-                                            1, from_flt_fmt,
-                                            oct_mach_info::native_float_format ());
-
-              dst_elt_type tmp (data[i]);
-
-              if (do_NA_conv && __lo_ieee_is_old_NA (tmp))
-                tmp = __lo_ieee_replace_old_NA (tmp);
-
-              conv_data[j] = tmp;
+              for (octave_idx_type i = 0; i < input_buf_elts && j < elts_read;
+                   i++, j++)
+                {
+                  if (swap)
+                    swap_bytes<sizeof (SRC_T)> (&data[i]);
+                  else if (do_float_fmt_conv)
+                    do_float_format_conversion (&data[i], sizeof (SRC_T),
+                                                1, from_flt_fmt,
+                                                oct_mach_info::native_float_format ());
+
+                  dst_elt_type tmp (data[i]);
+
+                  if (is_old_NA (tmp))
+                    tmp = replace_old_NA (tmp);
+
+                  conv_data[j] = tmp;
+                }
+            }
+          else
+            {
+              for (octave_idx_type i = 0; i < input_buf_elts && j < elts_read;
+                   i++, j++)
+                {
+                  if (swap)
+                    swap_bytes<sizeof (SRC_T)> (&data[i]);
+                  else if (do_float_fmt_conv)
+                    do_float_format_conversion (&data[i], sizeof (SRC_T),
+                                                1, from_flt_fmt,
+                                                oct_mach_info::native_float_format ());
+
+                  conv_data[j] = data[i];
+                }
             }
         }
       else
         {
           if (do_NA_conv)
             {
               for (octave_idx_type i = 0; i < input_buf_elts && j < elts_read;
                    i++, j++)
                 {
                   dst_elt_type tmp (data[i]);
 
-                  if (__lo_ieee_is_old_NA (tmp))
-                    tmp = __lo_ieee_replace_old_NA (tmp);
+                  if (is_old_NA (tmp))
+                    tmp = replace_old_NA (tmp);
 
                   conv_data[j] = tmp;
                 }
             }
           else
             {
               for (octave_idx_type i = 0; i < input_buf_elts && j < elts_read;
                    i++, j++)
