# HG changeset patch
# User Rik <rik@octave.org>
# Date 1514420926 28800
#      Wed Dec 27 16:28:46 2017 -0800
# Node ID 04d1a3ea26a3469fcf9fdc42e1f00f7f94e12528
# Parent  6d2dc40a7c0005cfaffd089de482a1a230e51731
runtests.m: Update printing of output.
test.m was modified to report new failure classes (known bug, regression),
but runtests.m was never updated.

* runtests.m (run_all_tests): Call test() and collect additional outputs.
* runtests.m (has_tests): Copy same function from __run_test_suite__.
* runtests.m (print_pass_fail): Copy same function from __run_test_suite__.
* runtests.m (print_test_file_name): Copy same function from
__run_test_suite__.

diff --git a/scripts/testfun/runtests.m b/scripts/testfun/runtests.m
--- a/scripts/testfun/runtests.m
+++ b/scripts/testfun/runtests.m
@@ -70,18 +70,18 @@ function run_all_tests (directory, do_cl
   fflush (stdout);
   for i = 1:numel (flist)
     f = flist{i};
     if ((length (f) > 2 && strcmpi (f((end-1):end), ".m"))
         || (length (f) > 3 && strcmpi (f((end-2):end), ".cc")))
       ff = fullfile (directory, f);
       if (has_tests (ff))
         print_test_file_name (f);
-        [p, n, xf, sk] = test (ff, "quiet");
-        print_pass_fail (n, p, xf);
+        [p, n, xf, xb, sk, rtsk, rgrs] = test (ff, "quiet");
+        print_pass_fail (p, n, xf, xb, sk, rtsk, rgrs);
         fflush (stdout);
       elseif (has_functions (ff))
         no_tests(end+1) = f;
       endif
     elseif (f(1) == "@")
       f = fullfile (directory, f);
       if (isdir (f))
         dirs(end+1) = f;
@@ -127,38 +127,50 @@ function retval = has_tests (f)
 
   fid = fopen (f);
   if (fid < 0)
     error ("runtests: fopen failed: %s", f);
   endif
 
   str = fread (fid, "*char").';
   fclose (fid);
-  retval = ! isempty (regexp (str, '^%!(?:test|xtest|assert|error|warning)',
-                                   'lineanchors', 'once'));
+  retval = ! isempty (regexp (str,
+                              '^%!(assert|error|fail|test|xtest|warning)',
+                              'lineanchors', 'once'));
 
 endfunction
 
-function print_pass_fail (n, p, xf)
+function print_pass_fail (p, n, xf, xb, sk, rtsk, rgrs)
 
-  if (n > 0)
-    printf (" PASS %4d/%-4d", p, n);
-    nfail = n - p;
+  if ((n + sk + rtsk + rgrs) > 0)
+    printf (" PASS   %4d/%-4d", p, n);
+    nfail = n - p - xf - xb - rgrs;
     if (nfail > 0)
-      if (nfail != xf)
-        printf (" FAIL %d", nfail - xf);
-      else
-        printf (" XFAIL %d", xf);
-      endif
+      printf ("\n%71s %3d", "FAIL ", nfail);
+    endif
+    if (rgrs > 0)
+      printf ("\n%71s %3d", "REGRESSION", rgrs);
+    endif
+    if (sk > 0)
+      printf ("\n%71s %3d", "(missing feature) SKIP ", sk);
+    endif
+    if (rtsk > 0)
+      printf ("\n%71s %3d", "(run-time condition) SKIP ", rtsk);
+    endif
+    if (xb > 0)
+      printf ("\n%71s %3d", "(reported bug) XFAIL", xb);
+    endif
+    if (xf > 0)
+      printf ("\n%71s %3d", "(expected failure) XFAIL", xf);
     endif
   endif
   puts ("\n");
 
 endfunction
 
 function print_test_file_name (nm)
-  filler = repmat (".", 1, 55-length (nm));
+  filler = repmat (".", 1, 60-length (nm));
   printf ("  %s %s", nm, filler);
 endfunction
 
 
 %!error runtests ("foo", 1)
 %!error <DIRECTORY argument> runtests ("#_TOTALLY_/_INVALID_/_PATHNAME_#")
