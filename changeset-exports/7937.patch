# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1216287806 -7200
#      Thu Jul 17 11:43:26 2008 +0200
# Node ID 6661387827d6e986e65a26c59d2045db51b8e263
# Parent  78400fde223eb1b06b31a840fa1808d340705d2f
Allow build without GraphicsMagick installed

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2008-07-17  David Bateman  <dbateman@free.fr>
+
+	* configure.in (HAVE_MAGICK): New define for presence of
+	GraphicsMagick.
+
 2008-07-16  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* configure.in: Add check for pthread.h.
 
 2008-07-14  John W. Eaton  <jwe@octave.org>
 
 	* Makeconf.in (MAGICK_CONFIG): Substitute here.
 	(MAGICK_INCFLAGS, MAGICK_LIBS): Define using GraphicsMagick++
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -636,16 +636,18 @@ if test "$curl_missing" = yes; then
 fi
 
 # GraphicsMagick++
 
 warn_magick=
 AC_CHECK_PROGS(MAGICK_CONFIG, [GraphicsMagick++-config GraphicsMagick-config])
 if test -z "$MAGICK_CONFIG"; then
   warn_magick="GraphicsMagick++ config script not found.  Assuming GraphicsMagic++ library and header files are missing, so imread will not be fully functional"
+else
+  AC_DEFINE(HAVE_MAGICK, 1, [Define if GraphicsMagick++ is available.])
 fi
 
 # ---------------------------------------------------------------------
 
 ## libraries needed for graphics
 
 warn_graphics=""
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -43,16 +43,21 @@ 2008-07-16  Michael Goffioul  <michael.g
 	(Fishandle, Fset, Fget, F__get__, F__go_figure__, F__go_delete__,
 	F__go_axes_init__, F__go_handles__, F__go_figure_handles__,
 	Favailable_backends, Fdrawnow, Faddlistener, Faddproperty,
 	get_property_from_handle, set_property_in_handle): Lock graphics
 	system.
 	(GO_BODY): Likewise.
 	(Fdrawnow): Support single "expose" argument.
 
+2008-07-17  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTION/__magick_read__.cc (F__magick_read__): Allow build
+	without GraphicsMagick++ installed.
+
 2008-07-15  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/__convn__.cc (convn): Cast second arg to
 	octave_idx_type in call to std::max.
 
 2008-07-14  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (convhulln.oct, __delaunayn__.oct, __voronoi__.oct, 
diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -23,16 +23,18 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 
+#ifdef HAVE_MAGICK
+
 #include <GraphicsMagick/Magick++.h>
 
 unsigned int
 scale_quantum_to_depth (const Magick::Quantum& quantum, unsigned int depth)
 {
   return (static_cast<unsigned int> (static_cast<double> (quantum)
 				     / MaxRGB * ((1 << depth) - 1)));
 }
@@ -298,29 +300,31 @@ read_images (const std::vector<Magick::I
     }
 
   im.chop_trailing_singletons ();
 
   retval(0) = im;
 
   return retval;
 }
+#endif // HAVE_MAGICK
 
 DEFUN_DLD (__magick_read__, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} {@var{m} =} __magick_read__(@var{fname}, @var{index})\n\
 @deftypefnx{Function File} {[@var{m}, @var{colormap}] =} __magick_read__(@var{fname}, @var{index})\n\
 @deftypefnx{Function File} {[@var{m}, @var{colormap}, @var{alpha}] =} __magick_read__(@var{fname}, @var{index})\n\
 Read images with ImageMagick++. In general you should not be using this function.\n\
 Instead you should use @code{imread}.\n\
 @seealso{imread}\n\
 @end deftypefn")
 {
   octave_value_list output;
 
+#ifdef HAVE_MAGICK
   if (args.length () > 2 || args.length () < 1 || ! args(0).is_string ()
       || nargout > 3)
     {
       print_usage ();
       return output;
     }
 
   Array<int> frameidx;
@@ -396,16 +400,21 @@ Instead you should use @code{imread}.\n\
 	  break;
 
 	case 32:
 	case 64:
         default:
 	  error ("__magick_read__: image depths bigger than 16-bit not supported");
 	}
     }
+#else
+
+  error ("__magick_read__: not available in this version of Octave");
+
+#endif
 
   return output;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
