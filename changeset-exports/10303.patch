# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1265836333 18000
#      Wed Feb 10 16:12:13 2010 -0500
# Node ID e4899d6320b617a5464a91bb2d79a2e37a17bdcd
# Parent  5669a0b893db556a643ec50ea1513654b61098b2
data.cc: use CLOCKS_PER_SEC instead of HZ

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-02-10  John W. Eaton  <jwe@octave.org>
+
+	* data.cc: Ensure that CLOCKS_PER_SEC is defined instead of HZ.
+	(Fcputime): Use CLOCKS_PER_SEC instead of HZ.
+
 2010-02-10  John W. Eaton  <jwe@octave.org>
 
 	* data.cc: Include <sys/times.h>.  Define HZ if it is not defined.
 
 2010-02-10  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (base_properties::set_children): Ensure that new
 	children are stored as a column vector.
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -30,16 +30,17 @@ along with Octave; see the file COPYING.
 #include <sys/types.h>
 #include <sys/times.h>
 
 #ifdef HAVE_SYS_RESOURCE_H
 #include <sys/resource.h>
 #endif
 
 #include <cfloat>
+#include <ctime>
 
 #include <string>
 
 #include "lo-ieee.h"
 #include "lo-math.h"
 #include "oct-time.h"
 #include "str-vec.h"
 #include "quit.h"
@@ -60,21 +61,21 @@ along with Octave; see the file COPYING.
 #include "ov-cx-sparse.h"
 #include "parse.h"
 #include "pt-mat.h"
 #include "utils.h"
 #include "variables.h"
 #include "pager.h"
 #include "xnorm.h"
 
-#if ! defined (HZ)
+#if ! defined (CLOCKS_PER_SEC)
 #if defined (CLK_TCK)
-#define HZ CLK_TCK
+#define CLOCKS_PER_SEC CLK_TCK
 #else
-#define HZ 60
+#error "no definition for CLOCKS_PER_SEC!"
 #endif
 #endif
 
 #if ! defined (HAVE_HYPOTF) && defined (HAVE__HYPOTF)
 #define hypotf _hypotf
 #define HAVE_HYPOTF 1
 #endif
 
@@ -5670,28 +5671,28 @@ CPU time used is nonzero.\n\
 
   times (&t);
 
   unsigned long ticks;
   unsigned long seconds;
   unsigned long fraction;
 
   ticks = t.tms_utime + t.tms_cutime;
-  fraction = ticks % HZ;
-  seconds = ticks / HZ;
+  fraction = ticks % CLOCKS_PER_SEC;
+  seconds = ticks / CLOCKS_PER_SEC;
 
   usr = static_cast<double> (seconds) + static_cast<double>(fraction) /
-    static_cast<double>(HZ);
+    static_cast<double>(CLOCKS_PER_SEC);
 
   ticks = t.tms_stime + t.tms_cstime;
-  fraction = ticks % HZ;
-  seconds = ticks / HZ;
+  fraction = ticks % CLOCKS_PER_SEC;
+  seconds = ticks / CLOCKS_PER_SEC;
 
   sys = static_cast<double> (seconds) + static_cast<double>(fraction) /
-    static_cast<double>(HZ);
+    static_cast<double>(CLOCKS_PER_SEC);
 
 #endif
 
   retval (2) = sys;
   retval (1) = usr;
   retval (0) = sys + usr;
 
   return retval;
