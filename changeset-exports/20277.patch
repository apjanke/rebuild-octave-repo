# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1435161213 14400
#      Wed Jun 24 11:53:33 2015 -0400
# Node ID 48d9001bdee3c0719a81a7a6bb81f434e74ab6fb
# Parent  396e9cd6cd98a084d82d2bd0ee400fee94a3201d
Avoid HAVE_ macros in header file.

* octave-qscintilla.h, octave-qscintilla.cc
(octave_qscintilla::contextMenuEvent): Define unconditionally.

diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -178,21 +178,21 @@ octave_qscintilla::context_edit ()
 // call edit the function related to the current word
 void
 octave_qscintilla::context_run ()
 {
   if (hasSelectedText ())
     contextmenu_run (true);
 }
 
-#ifdef HAVE_QSCI_VERSION_2_6_0
 // context menu requested
 void
 octave_qscintilla::contextMenuEvent (QContextMenuEvent *e)
 {
+#ifdef HAVE_QSCI_VERSION_2_6_0
   QPoint global_pos, local_pos;                         // the menu's position
   QMenu *context_menu = createStandardContextMenu ();  // standard menu
 
   // fill context menu with editor's standard actions
   emit create_context_menu_signal (context_menu);
 
   // determine position depending on mouse or keyboard event
   if (e->reason () == QContextMenuEvent::Mouse)
@@ -230,18 +230,18 @@ octave_qscintilla::contextMenuEvent (QCo
                                    this, SLOT (contextmenu_doc (bool)));
           context_menu->addAction (tr ("Edit") + " " + _word_at_cursor,
                                    this, SLOT (contextmenu_edit (bool)));
         }
     }
 
   // finaly show the menu
   context_menu->exec (global_pos);
+#endif
 }
-#endif
 
 
 // handle the menu entry for calling help or doc
 void
 octave_qscintilla::contextmenu_doc (bool)
 {
   contextmenu_help_doc (true);
 }
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
--- a/libgui/src/m-editor/octave-qscintilla.h
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -33,19 +33,18 @@ class octave_qscintilla : public QsciSci
 {
   Q_OBJECT
 
 public:
 
   octave_qscintilla (QWidget *p);
   ~octave_qscintilla ();
 
-#ifdef HAVE_QSCI_VERSION_2_6_0
   virtual void contextMenuEvent (QContextMenuEvent *e);
-#endif
+
   void context_help_doc (bool);
   void context_edit ();
   void context_run ();
   void get_global_textcursor_pos (QPoint *global_pos, QPoint *local_pos);
   bool get_actual_word ();
 
 signals:
 
