# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1506061633 25200
#      Thu Sep 21 23:27:13 2017 -0700
# Node ID 1909078be6c784de2c1d5f776b260c78dfbfd17d
# Parent  0160a3199b2d66568f5a21b028a2f41ebd9a31aa
pause: don't interrupt sleep on harmless signals (bug #52084)

* utils.cc (octave_sleep): Continue calling nanosleep with time remaining
when it is interrupted by a signal.

diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -1357,20 +1357,24 @@ octave_sleep (double seconds)
   double fraction = std::modf (seconds, &seconds);
   fraction = std::floor (fraction * 1000000000); // nanoseconds
 
   time_t sec = ((seconds > std::numeric_limits<time_t>::max ())
                 ? std::numeric_limits<time_t>::max ()
                 : static_cast<time_t> (seconds));
 
   struct timespec delay = { sec, static_cast<long> (fraction) };
-  struct timespec remaining;
-  octave_nanosleep_wrapper (&delay, &remaining);
+  int status;
 
-  octave_quit ();
+  do
+    {
+      status = octave_nanosleep_wrapper (&delay, &delay);
+      octave_quit ();
+    }
+  while (status == -1 && errno == EINTR);
 }
 
 DEFUN (isindex, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} isindex (@var{ind})
 @deftypefnx {} {} isindex (@var{ind}, @var{n})
 Return true if @var{ind} is a valid index.
 
