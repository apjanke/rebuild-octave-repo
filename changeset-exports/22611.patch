# HG changeset patch
# User John D
# Date 1476135278 14400
#      Mon Oct 10 17:34:38 2016 -0400
# Branch stable
# Node ID 95aff68c443da4a38381a5929e2bbd101b475bdb
# Parent  8ba5e58a770f4ab53795db4b2b6bef73ba1ba45d
gui: style fixes for pushbutton, radiobutton and checkbox (Bug #49247)

* libgui/graphics/BaseControl.cc
  (QtHandles::updatePalette): handle radio and checkbox colors same as pushbutton and togglebutton

* libgui/src/octave-gui.cc
  (toplevel): Include <QStyleFactory>
  (gui_application::execute): call application setStyle(windows) in OS_WIN32

diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -46,17 +46,19 @@ namespace QtHandles
         || props.style_is ("popupmenu"))
       {
         p.setColor (QPalette::Base,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::Text,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else if (props.style_is ("pushbutton")
-             || props.style_is ("togglebutton"))
+             || props.style_is ("togglebutton")
+             || props.style_is ("radiobutton")
+             || props.style_is ("checkbox"))
       {
         p.setColor (QPalette::Button,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::ButtonText,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else
       {
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QTextCodec>
 #include <QThread>
 #include <QTranslator>
 #include <QtGlobal>
+#include <QStyleFactory>
 
 #include <cstdio>
 
 #include <iostream>
 
 #if defined (HAVE_SYS_IOCTL_H)
 #  include <sys/ioctl.h>
 #endif
@@ -153,16 +154,21 @@ namespace octave
     QApplication qt_app (m_argc, m_argv);
     QTranslator gui_tr, qt_tr, qsci_tr;
 
     // Set the codec for all strings (before wizard or any GUI object)
 #if ! defined (Q_OS_WIN32)
     QTextCodec::setCodecForLocale (QTextCodec::codecForName ("UTF-8"));
 #endif
 
+    // set windows style for windows
+#if defined (Q_OS_WIN32)
+    qt_app.setStyle(QStyleFactory::create("Windows"));
+#endif
+
     bool start_gui = start_gui_p ();
 
     // Show welcome wizard if this is the first run.
 
     if (resource_manager::is_first_run () && start_gui)
       {
         // Before wizard.
         resource_manager::config_translators (&qt_tr, &qsci_tr, &gui_tr);
