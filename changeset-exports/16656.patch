# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368485414 14400
#      Mon May 13 18:50:14 2013 -0400
# Node ID cf84ea2ba2d37bdfa21a99f3bf6e5f8f768b90c2
# Parent  8fa0b416f465007ee9fadcc4946f8c1808ee4bb0
require dynamic field names to be character strings

* pt-idx.cc (tree_index_expression::get_struct_index):
Require field names to be character strings.
* orderfields.m: Index fieldnames with {} instead of ().

diff --git a/libinterp/parse-tree/pt-idx.cc b/libinterp/parse-tree/pt-idx.cc
--- a/libinterp/parse-tree/pt-idx.cc
+++ b/libinterp/parse-tree/pt-idx.cc
@@ -211,17 +211,22 @@ tree_index_expression::get_struct_index
     {
       tree_expression *df = *p_dyn_field;
 
       if (df)
         {
           octave_value t = df->rvalue1 ();
 
           if (! error_state)
-            fn = t.string_value ();
+            {
+              if (t.is_string ())
+                fn = t.string_value ();
+              else
+                error ("dynamic structure field names must be character strings");
+            }
         }
       else
         panic_impossible ();
     }
 
   return fn;
 }
 
diff --git a/scripts/miscellaneous/orderfields.m b/scripts/miscellaneous/orderfields.m
--- a/scripts/miscellaneous/orderfields.m
+++ b/scripts/miscellaneous/orderfields.m
@@ -148,17 +148,17 @@ function [t, p] = orderfields (s1, s2)
   if (numel (s1) == 0)
     args = cell (1, 2 * numel (names));
     args(1:2:end) = names;
     args(2:2:end) = {[]};
     t = struct (args{:});
   else
     n = numel (s1);
     for i = 1:numel (names)
-      el = names(i);
+      el = names{i};
       [t(1:n).(el)] = s1(:).(el);
     endfor
     ## inherit dimensions
     t = reshape (t, size (s1));
   endif
 
 endfunction
 
