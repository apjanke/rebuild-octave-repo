# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1341242451 -7200
#      Mon Jul 02 17:20:51 2012 +0200
# Branch gui
# Node ID cff522bf80c55fbb3de4e2ab6d349924c41b7a07
# Parent  41b86dc613069e5f1bd377936e6f5830ece349fa
Fixed debugging shortcuts and debug menu item order.

* file-editor.cc: Fixed shortcuts.
* main-window.cc: Fixed debug menu order.

diff --git a/gui/src/m-editor/file-editor.cc b/gui/src/m-editor/file-editor.cc
--- a/gui/src/m-editor/file-editor.cc
+++ b/gui/src/m-editor/file-editor.cc
@@ -368,17 +368,17 @@ file_editor::construct ()
   QAction *previous_breakpoint_action   = new QAction (tr ("Pre&vious breakpoint"),_tool_bar);
   QAction *toggle_breakpoint_action     = new QAction (tr ("Toggle &breakpoint"),_tool_bar);
   QAction *remove_breakpoint_action     = new QAction (tr ("&Remove All breakpoints"),_tool_bar);
 
   QAction *comment_selection_action   = new QAction (tr ("&Comment Selected Text"),_tool_bar);
   QAction *uncomment_selection_action = new QAction (tr ("&Uncomment Selected Text"),_tool_bar);
 
   _run_action = new QAction (QIcon(":/actions/icons/artsbuilderexecute.png"),
-        tr("&Run File"), _tool_bar);
+        tr("Save File And Run"), _tool_bar);
 
   // some actions are disabled from the beginning
   _copy_action->setEnabled(false);
   _cut_action->setEnabled(false);
   _run_action->setShortcut                      (Qt::ControlModifier+ Qt::Key_R);
   _run_action->setShortcutContext               (Qt::WindowShortcut);
   next_bookmark_action->setShortcut             (Qt::Key_F2);
   next_bookmark_action->setShortcutContext      (Qt::WindowShortcut);
diff --git a/gui/src/main-window.cc b/gui/src/main-window.cc
--- a/gui/src/main-window.cc
+++ b/gui/src/main-window.cc
@@ -572,42 +572,43 @@ main_window::construct ()
   clear_command_window_action->setEnabled (false); // TODO: Make this work.
   QAction *clear_command_history
       = edit_menu->addAction(tr ("Clear Command History"));
   QAction * clear_workspace_action
       = edit_menu->addAction (tr ("Clear Workspace"));
 
   _debug_menu = menuBar ()->addMenu (tr ("De&bug"));
 
+  _debug_step_over = _debug_menu->addAction (tr ("Step"));
+  _debug_step_over->setEnabled (false);
+  _file_editor->debug_menu ()->addAction (_debug_step_over);
+  _debug_step_over->setShortcut (Qt::Key_F10);
+
+  _debug_step_into = _debug_menu->addAction (tr ("Step in"));
+  _debug_step_into->setEnabled (false);
+  _file_editor->debug_menu ()->addAction (_debug_step_into);
+  _debug_step_into->setShortcut (Qt::Key_F11);
+
+  _debug_step_out = _debug_menu->addAction (tr ("Step out"));
+  _debug_step_out->setEnabled (false);
+  _file_editor->debug_menu ()->addAction (_debug_step_out);
+  _debug_step_out->setShortcut (Qt::ShiftModifier + Qt::Key_F11);
+
   _debug_continue = _debug_menu->addAction (tr ("Continue"));
   _debug_continue->setEnabled (false);
   _file_editor->debug_menu ()->addAction (_debug_continue);
   _debug_continue->setShortcut (Qt::Key_F5);
 
-  _debug_step_into = _debug_menu->addAction (tr ("Step into"));
-  _debug_step_into->setEnabled (false);
-  _file_editor->debug_menu ()->addAction (_debug_step_into);
-  _debug_step_into->setShortcut (Qt::Key_F9);
+  _debug_menu->addSeparator ();
+  _file_editor->debug_menu ()->addSeparator ();
 
-  _debug_step_over = _debug_menu->addAction (tr ("Next"));
-  _debug_step_over->setEnabled (false);
-  _file_editor->debug_menu ()->addAction (_debug_step_over);
-  _debug_step_over->setShortcut (Qt::Key_F10);
-
-  _debug_step_out = _debug_menu->addAction (tr ("Step out"));
-  _debug_step_out->setEnabled (false);
-  _file_editor->debug_menu ()->addAction (_debug_step_over);
-  _debug_step_out->setShortcut (Qt::Key_F11);
-
-  _debug_menu->addSeparator ();
-
-  _debug_quit = _debug_menu->addAction (tr ("Quit"));
+  _debug_quit = _debug_menu->addAction (tr ("Exit Debug Mode"));
   _debug_quit->setEnabled (false);
   _file_editor->debug_menu ()->addAction (_debug_quit);
-  _debug_quit->setShortcut (Qt::Key_Escape);
+  _debug_quit->setShortcut (Qt::ShiftModifier + Qt::Key_F5);
 
   //QMenu *parallelMenu = menuBar ()->addMenu (tr ("&Parallel"));
 
   QMenu *   desktop_menu = menuBar ()->addMenu (tr ("&Desktop"));
   QAction * load_workspace_action       = desktop_menu->addAction (tr ("Load workspace"));
 
 
   // Window menu
