# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1494346897 14400
#      Tue May 09 12:21:37 2017 -0400
# Node ID 3530b956d707c393c44aee9fa0f18d15d579bdb9
# Parent  1a4b4c074800e765ef8e0b95e617f060f2a4774c
maint: Strip trailing whitespace from source files.

diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -367,18 +367,18 @@ Note: @code{qz} performs permutation bal
   ComplexMatrix CQ (nn,nn), CZ (nn,nn), CVR (nn,nn), CVL (nn,nn);
   F77_INT ilo, ihi, info;
   char comp_q = (nargout >= 3 ? 'V' : 'N');
   char comp_z = ((nargout >= 4 || nargin == 3)? 'V' : 'N');
 
   // Initialize Q, Z to identity matrix if either is needed
   if (comp_q == 'V' || comp_z == 'V')
     {
-      double *QQptr = QQ.fortran_vec (); 
-      double *ZZptr = ZZ.fortran_vec (); 
+      double *QQptr = QQ.fortran_vec ();
+      double *ZZptr = ZZ.fortran_vec ();
       std::fill_n (QQptr, QQ.numel (), 0.0);
       std::fill_n (ZZptr, ZZ.numel (), 0.0);
       for (F77_INT i = 0; i < nn; i++)
         {
           QQ(i,i) = 1.0;
           ZZ(i,i) = 1.0;
         }
     }
diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -570,36 +570,36 @@ OCTAVE_DEPRECATED ("use 'octave::math::l
 inline double xlog2 (double x) { return octave::math::log2 (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline float xlog2 (float x) { return octave::math::log2 (x); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline Complex xlog2 (const Complex& x) { return octave::math::log2 (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline FloatComplex xlog2 (const FloatComplex& x)
-{ 
+{
   return octave::math::log2 (x);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline double xlog2 (double x, int& exp)
-{ 
+{
   return octave::math::log2 (x, exp);
 }
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline float xlog2 (float x, int& exp) { return octave::math::log2 (x, exp); }
 
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline Complex xlog2 (const Complex& x, int& exp)
-{ 
+{
   return octave::math::log2 (x, exp);
 }
 OCTAVE_DEPRECATED ("use 'octave::math::log2' instead")
 inline FloatComplex xlog2 (const FloatComplex& x, int& exp)
-{ 
+{
   return octave::math::log2 (x, exp);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::exp2' instead")
 inline double xexp2 (double x) { return octave::math::exp2 (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::exp2' instead")
 inline float xexp2 (float x) { return octave::math::exp2 (x); }
 
@@ -613,52 +613,52 @@ OCTAVE_DEPRECATED ("use 'octave::math::c
 std::complex<T>
 ceil (const std::complex<T>& x)
 {
   return octave::math::ceil (x);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::copysign' instead")
 inline double xcopysign (double x, double y)
-{ 
+{
   return octave::math::copysign (x, y);
 }
 OCTAVE_DEPRECATED ("use 'octave::math::copysign' instead")
 inline float xcopysign (float x, float y)
-{ 
+{
   return octave::math::copysign (x, y);
 }
 
 template <typename T>
 OCTAVE_DEPRECATED ("use 'octave::math::signbit' instead")
 T
 xsignbit (T x)
 {
   return octave::math::signbit (x);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::negative_sign' instead")
 inline bool xnegative_sign (double x)
-{ 
+{
   return octave::math::negative_sign (x);
 }
 OCTAVE_DEPRECATED ("use 'octave::math::negative_sign' instead")
 inline bool xnegative_sign (float x)
-{ 
+{
   return octave::math::negative_sign (x);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::positive_sign' instead")
 inline bool xpositive_sign (double x)
-{ 
+{
   return octave::math::positive_sign (x);
 }
 OCTAVE_DEPRECATED ("use 'octave::math::positive_sign' instead")
 inline bool xpositive_sign (float x)
-{ 
+{
   return octave::math::positive_sign (x);
 }
 
 OCTAVE_DEPRECATED ("use 'octave::math::signum' instead")
 inline double signum (double x) { return octave::math::signum (x); }
 OCTAVE_DEPRECATED ("use 'octave::math::signum' instead")
 inline float signum (float x) { return octave::math::signum (x); }
 
diff --git a/liboctave/numeric/sparse-chol.cc b/liboctave/numeric/sparse-chol.cc
--- a/liboctave/numeric/sparse-chol.cc
+++ b/liboctave/numeric/sparse-chol.cc
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include <cstddef> 
+#include <cstddef>
 
 #include "CSparse.h"
 #include "MatrixType.h"
 #include "dRowVector.h"
 #include "dSparse.h"
 #include "lo-error.h"
 #include "oct-cmplx.h"
 #include "oct-refcount.h"
