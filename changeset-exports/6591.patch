# HG changeset patch
# User jwe
# Date 1177640254 0
#      Fri Apr 27 02:17:34 2007 +0000
# Node ID fc0218995ee771a90b2d1999fed27ed36e938479
# Parent  1f466adecafd6bcdda06960ca2f7a3fc7399120e
[project @ 2007-04-27 02:17:34 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-26  John W. Eaton  <jwe@octave.org>
+
+	* ov-usr-fcn.cc (octave_user_function::do_multi_index_op):
+	Only deal with varargout if ret_list->takes_varargs () is true.
+
 2007-04-26  Soren Hauberg  <soren@hauberg.org>
 
 	* DLD-FUNCTIONS/urlwrite.cc: Doc fix.
 
 2007-04-26  David Bateman  <dbateman@free.fr>
 
 	* pt-loop.cc (tree_simple_for_command::eval (void)): Correct
 	reshaping of dim_vector in for loop for multi-dimensional array.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -376,26 +376,29 @@ octave_user_function::do_multi_index_op 
     // Copy return values out.
 
     if (ret_list)
       {
 	ret_list->initialize_undefined_elements (my_name, nargout, Matrix ());
 
 	Cell varargout;
 
-	symbol_record *sr = local_sym_tab->lookup ("varargout");
-
-	if (sr && sr->is_variable ())
+	if (ret_list->takes_varargs ())
 	  {
-	    octave_value v = sr->def ();
+	    symbol_record *sr = local_sym_tab->lookup ("varargout");
+
+	    if (sr && sr->is_variable ())
+	      {
+		octave_value v = sr->def ();
 
-	    varargout = v.cell_value ();
+		varargout = v.cell_value ();
 
-	    if (error_state)
-	      error ("expecting varargout to be a cell array object");
+		if (error_state)
+		  error ("expecting varargout to be a cell array object");
+	      }
 	  }
 
 	if (! error_state)
 	  retval = ret_list->convert_to_const_vector (varargout);
       }
   }
 
  abort:
