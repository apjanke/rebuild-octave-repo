# HG changeset patch
# User Rik <rik@octave.org>
# Date 1553547581 25200
#      Mon Mar 25 13:59:41 2019 -0700
# Node ID aa50801747a935adc1cd6ee8a76c02189e3ad06a
# Parent  2b23129f8a96d33c200c8bfca6e7b5393e39672b
methods.m: Add input validation and BIST tests for option argument (bug #55858).

* methods.m: Validate that option input is "-full" if it exists.
Re-organize BIST tests.  Add input validation BIST tests.

diff --git a/scripts/miscellaneous/methods.m b/scripts/miscellaneous/methods.m
--- a/scripts/miscellaneous/methods.m
+++ b/scripts/miscellaneous/methods.m
@@ -38,18 +38,24 @@
 ## @end deftypefn
 
 function mtds = methods (obj, opt)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
-  showsigs = (nargin > 1 && ischar (opt) && strcmp (opt, "-full"));
   havesigs = false;
+  showsigs = false;
+  if (nargin == 2)
+    if (! strcmp (opt, "-full"))
+      error ("methods: invalid option");
+    endif
+    showsigs = true;
+  endif
 
   if (isobject (obj))
     ## Call internal C++ function for Octave objects
     mtds_list = __methods__ (obj);
   elseif (ischar (obj))
     ## Could be a classname for an Octave class or Java class.
     ## Try Octave class first.
     mtds_list = __methods__ (obj);
@@ -97,36 +103,42 @@ function mtds = methods (obj, opt)
     disp (list_in_columns (mtds_list));
   else
     mtds = mtds_list;
   endif
 
 endfunction
 
 
-## test Octave classname
+## test old-style @classname
 %!test
 %! mtds = methods ("ftp");
 %! assert (mtds{1}, "ascii");
 
 ## test Java classname
 %!testif HAVE_JAVA; usejava ("jvm")
-%! mtds = methods ("java.lang.Double", "-full");
-%! search = strfind (mtds, "java.lang.Double valueOf");
-%! assert (! isempty ([search{:}]));
-
-## test Java classname
-%!testif HAVE_JAVA; usejava ("jvm")
 %! mtds = methods ("java.lang.Double");
 %! search = strfind (mtds, "valueOf");
 %! assert (! isempty ([search{:}]));
 
-## Test that methods does the right thing when passed a String object
+## test Java classname with -full prototypes
+%!testif HAVE_JAVA; usejava ("jvm")
+%! mtds = methods ("java.lang.Double", "-full");
+%! search = strfind (mtds, "java.lang.Double valueOf");
+%! assert (! isempty ([search{:}]));
+
+## test that methods does the right thing when passed a String object
 %!testif HAVE_JAVA; usejava ("jvm") <*48758>
 %! object = javaObject ("java.lang.String", "java.lang.Integer");
-%! assert (methods (object), methods ("java.lang.String"))
+%! assert (methods (object), methods ("java.lang.String"));
 
-## classdef
+## test classdef classname
 %!assert (methods ("inputParser"),
 %!        {"addOptional"; "addParamValue"; "addParameter";
 %!         "addRequired"; "addSwitch"; "add_missing"; "delete";
 %!         "disp"; "error"; "is_argname"; "parse"; "validate_arg";
 %!         "validate_name"});
+
+## Test input validation
+%!error methods ()
+%!error methods ("a", "b", "c")
+%!error <invalid option> methods ("ftp", "option1")
+%!error <invalid input argument> methods (1)
