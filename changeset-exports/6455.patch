# HG changeset patch
# User jwe
# Date 1174924924 0
#      Mon Mar 26 16:02:04 2007 +0000
# Node ID e68b6921b2219773f8b06daeae887bb1ac6c5c36
# Parent  7c9b4a6e090b8e7eac412b9b105a9f1323e3af7f
[project @ 2007-03-26 16:02:04 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-03-26  Kim Hansen  <kimhanse@gmail.com>
+
+	* testfun/assert.m: Delete special check for empty objects.
+	Add test.
+
 2007-03-26  John W. Eaton  <jwe@octave.org>
 
 	* plot/drawnow.m: Exit early if call is recursive.
 
 	* plot/__go_draw_axes__.m (get_data_limits): New function.
 	Check for Inf too.
 	(__go_draw_axes__): Use get_data_limits.
 
diff --git a/scripts/testfun/assert.m b/scripts/testfun/assert.m
--- a/scripts/testfun/assert.m
+++ b/scripts/testfun/assert.m
@@ -113,19 +113,16 @@ function assert(cond, expected, tol)
 	  if normal, v = {v}; else v = v(:)'; endif
 	  assert(v,{expected.(k)},tol)
 	endfor
       catch
 	iserror = 1;
       end
     endif
 
-  elseif (isempty (expected))
-    iserror = (any (size (cond) != size (expected)));
-
   elseif (ndims (cond) != ndims (expected)
 	  || any (size (cond) != size (expected)))
     iserror = 1;
     coda = "Dimensions don't match";
 
   elseif tol==0 && !strcmp(typeinfo(cond),typeinfo(expected))
     iserror = 1;
     coda = ["Type ",typeinfo(cond)," != ",typeinfo(expected)];
@@ -192,16 +189,17 @@ function assert(cond, expected, tol)
   ## error("assertion failed");
 endfunction
 
 ## empty
 %!assert([])
 %!assert(zeros(3,0),zeros(3,0))
 %!error assert(zeros(3,0),zeros(0,2))
 %!error assert(zeros(3,0),[])
+%!fail("assert(zeros(2,0,2),zeros(2,0))", "Dimensions don't match")
 
 ## conditions
 %!assert(isempty([]))
 %!assert(1)
 %!error assert(0)
 %!assert(ones(3,1))
 %!assert(ones(1,3))
 %!assert(ones(3,4))
