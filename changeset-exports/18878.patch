# HG changeset patch
# User Rik <rik@octave.org>
# Date 1404066186 25200
#      Sun Jun 29 11:23:06 2014 -0700
# Node ID d3276190e551cca924275b7f54712b871edc873e
# Parent  1b02bfff39d0b4aa24d8aa2f5e4ff3c797fbcc0d
Revert a0fd65914811 which does not truly fix bug #36067.

* variables.cc: Remove try/catch block around safe_symbol_lookup.

diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -413,22 +413,21 @@ symbol_exist (const std::string& name, c
 
   // We shouldn't need to look in the global symbol table, since any name
   // that is visible in the current scope will be in the local symbol table.
 
   octave_value val;
 
   if (search_any || search_builtin)
     {
-      // Require a try block because symbol_lookup will attempt unsafe load
-      // of .oct/.mex file.
-      try
-        { val = safe_symbol_lookup (name); }
-      catch (octave_execution_exception)
-        { }
+      // FIXME: safe_symbol_lookup will attempt unsafe load of .oct/.mex file.
+      // This can cause a segfault.  To catch this would require temporarily
+      // diverting the SIGSEGV exception handler and then restoring it.
+      // See bug #36067.
+      val = safe_symbol_lookup (name);
 
       if (val.is_defined () && val.is_builtin_function ())
         return 5;
 
       if (search_builtin)
         return 0;
     }
 
