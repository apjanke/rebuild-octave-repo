# HG changeset patch
# User dbateman
# Date 1188605296 0
#      Sat Sep 01 00:08:16 2007 +0000
# Node ID a052825889a075a955399922283f9847c211f494
# Parent  364765c1764885ca32f3c142cf223863535ed28d
[project @ 2007-09-01 00:08:16 by dbateman]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-09-01  David Bateman  <dbateman@free.fr>
+
+	* configure.in: AC_SUBST and check the variable TEXINFO_QHULL.
+	* Makeconf.in: Use it.
+
 2007-08-24  David Bateman  <dbateman@free.fr>
 
 	* configure.in: Extra Qhull bits.
 
 2007-08-24  Kim Hansen  <kimhanse@gmail.com>
 
 	* run-octave.in: Use `command` instead of $(command) to accomodate
 	brain-dead shells.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -222,16 +222,17 @@ CHOLMOD_LIBS = @CHOLMOD_LIBS@
 CXSPARSE_LIBS = @CXSPARSE_LIBS@
 LIBS = @LIBS@
 
 USE_64_BIT_IDX_T = @USE_64_BIT_IDX_T@
 
 TEXINFO_COLAMD = @TEXINFO_COLAMD@
 TEXINFO_CHOLMOD = @TEXINFO_CHOLMOD@
 TEXINFO_UMFPACK = @TEXINFO_UMFPACK@
+TEXINFO_QHULL = @TEXINFO_QHULL@
 
 # The arguments passed to configure.
 config_opts = @config_opts@
 
 # ==================== Where To Install Things ====================
 
 # The default location for installation.  Everything is placed in
 # subdirectories of this directory.  The default values for many of
@@ -572,17 +573,18 @@ define do-subst-texinfo-vals
 echo "making $@ from $<"
 $(SED) < $< \
   -e "s|%abs_top_srcdir%|${abs_top_srcdir}|" \
   -e "s|%top_srcdir%|${top_srcdir}|" \
   -e "s|%OCTAVE_HOME%|${prefix}|" \
   -e "s|%OCTAVE_VERSION%|${version}|" \
   -e "s|%TEXINFO_COLAMD%|${TEXINFO_COLAMD}|" \
   -e "s|%TEXINFO_CHOLMOD%|${TEXINFO_CHOLMOD}|" \
-  -e "s|%TEXINFO_UMFPACK%|${TEXINFO_UMFPACK}|" | \
+  -e "s|%TEXINFO_UMFPACK%|${TEXINFO_UMFPACK}|" \
+  -e "s|%TEXINFO_QHULL%|${TEXINFO_QHULL}|" | \
   $(SED) -e "s|%OCTAVE_CONF_DEFS%|\"${UGLY_DEFS}\"|" > $@-t
 $(simple-move-if-change-rule)
 endef
 
 define do-subst-script-vals
 echo "making $@ from $<"
 $(SED) < $< \
   -e "s|%library_path_var%|${library_path_var}|g" \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.572 $)
+AC_REVISION($Revision: 1.573 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -432,21 +432,24 @@ if test "$have_qhull" = yes; then
   if test "$have_qhull" != yes; then
     AC_CHECK_QHULL_VERSION(have_qhull=yes, have_qhull=no)
     AC_DEFINE(NEED_QHULL_VERSION, 1, [Define if the QHull library needs a wh_version variable defined.])
   fi
 fi
 if test "$have_qhull" = yes; then
   AC_DEFINE(HAVE_QHULL, 1, [Define if the QHull library is used.])
   QHULL_LIBS="-lqhull"
+  TEXINFO_QHULL="@set HAVE_QHULL"
 else
   warn_qhull="Qhull library not found --- This will result in loss of functionality of some geometry functions."
   AC_MSG_WARN($warn_qhull)
 fi
 
+AC_SUBST(TEXINFO_QHULL)
+
 ### Check for pcre/regex library.
 AC_SUBST(REGEX_LIBS)
 WITH_PCRE_CONFIG=no
 AC_CHECK_HEADER(pcre.h, WITH_PCRE=yes, WITH_PCRE=no)
 if test $WITH_PCRE = no ; then
   AC_CHECK_PROG(WITH_PCRE_CONFIG, pcre-config, yes, no)
   if test $WITH_PCRE_CONFIG = yes ; then
     WITH_PCRE=yes
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,16 @@
+2007-09-01  David Bateman  <dbateman@free.fr>
+
+	* conf.texi.in: Substitute for the variable TEXINFO_QHULL
+	* interpreter/geometryimages.m: Check for the HAVE_QHULL build
+	flag before creating certain figures.
+	* interpreter/geometry.txi: Check whether TEXINFO_QHULL is set
+	before including certain figures.
+
 2007-08-31  Søren Hauberg  <hauberg@gmail.com>
 
         * interpreter/nonlin.txi: Extended the example.
 
         * interpreter/poly.txi: Sectioning and documentation.
         * interpreter/octave.texi: Adapt to changes in poly.txi.
 
 2007-08-30  David Bateman  <dbateman@free.fr>
diff --git a/doc/conf.texi.in b/doc/conf.texi.in
--- a/doc/conf.texi.in
+++ b/doc/conf.texi.in
@@ -5,8 +5,9 @@
 @set OCTAVE_MANUAL
 @set top_srcdir %top_srcdir%
 @set abs_top_srcdir %abs_top_srcdir%
 @set OCTAVEHOME %OCTAVE_HOME%
 @set VERSION %OCTAVE_VERSION%
 %TEXINFO_COLAMD%
 %TEXINFO_CHOLMOD%
 %TEXINFO_UMFPACK%
+%TEXINFO_QHULL%
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -57,25 +57,27 @@ y = rand (10, 1);
 T = delaunay (x, y);
 X = [ x(T(:,1)); x(T(:,2)); x(T(:,3)); x(T(:,1)) ];
 Y = [ y(T(:,1)); y(T(:,2)); y(T(:,3)); y(T(:,1)) ];
 axis ([0, 1, 0, 1]);
 plot(X, Y, "b", x, y, "r*");
 @end group
 @end example
 
+@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The result of which can be seen in @ref{fig:delaunay}.
 
 @float Figure,fig:delaunay
 @image{delaunay,8cm}
 @caption{Delaunay triangulation of a random set of points}
 @end float
 @end ifnotinfo
+@end ifset
 
 @menu
 * Plotting the Triangulation::
 * Identifying points in Triangulation::
 @end menu
 
 @node Plotting the Triangulation
 @subsection Plotting the Triangulation
@@ -280,28 +282,30 @@ y = rand(10,1);
 tri = delaunay (x, y);
 [vx, vy] = voronoi (x, y, tri);
 triplot (tri, x, y, "b");
 hold on;
 plot (vx, vy, "r");
 @end group
 @end example
 
+@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The result of which can be seen in @ref{fig:voronoi}. Note that the
 circum-circle of one of the triangles has been added to this figure, to
 make the relationship between the Delaunay tessellation and the Voronoi
 diagram clearer.
 
 @float Figure,fig:voronoi
 @image{voronoi,8cm}
 @caption{Delaunay triangulation and Voronoi diagram of a random set of points}
 @end float
 @end ifnotinfo
+@end ifset
 
 Additional information about the size of the facets of a Voronoi
 diagram, and which points of a set of points is in a polygon can be had
 with the @code{polyarea} and @code{inpolygon} functions respectively.
 
 @DOCSTRING(polyarea)
 
 An example of the use of @code{polyarea} might be 
@@ -368,25 +372,27 @@ An example of the use of @code{convhull}
 x = -3:0.05:3;
 y = abs (sin (x));
 k = convhull (x, y);
 plot (x(k), y(k), "r-", x, y, "b+");
 axis ([-3.05, 3.05, -0.05, 1.05]);
 @end group
 @end example
 
+@ifset HAVE_QHULL
 @ifnotinfo
 @noindent
 The output of the above can be seen in @ref{fig:convhull}.
 
 @float Figure,fig:convhull
 @image{convhull,8cm}
 @caption{The convex hull of a simple set of points}
 @end float
 @end ifnotinfo
+@end ifset
 
 @node Interpolation on Scattered Data
 @section Interpolation on Scattered Data
 
 An important use of the Delaunay tessellation is that it can be used to
 interpolate from scattered data to an arbitrary set of points. To do
 this the N-simplex of the known set of points is calculated with
 @code{delaunay}, @code{delaunay3} or @code{delaunayn}. Then the
@@ -410,19 +416,21 @@ rand("state",1);
 x=2*rand(1000,1)-1;
 y=2*rand(size(x))-1;
 z=sin(2*(x.^2+y.^2));
 [xx,yy]=meshgrid(linspace(-1,1,32));
 griddata(x,y,z,xx,yy);
 @end group
 @end example
 
+@ifset HAVE_QHULL
 @noindent
 that interpolates from a random scattering of points, to a uniform
 grid. 
 @ifnotinfo
 The output of the above can be seen in @ref{fig:griddata}.
 
 @float Figure,fig:griddata
 @image{griddata,8cm}
 @caption{Interpolation from a scattered data to a regular grid}
 @end float
 @end ifnotinfo
+@end ifset
diff --git a/doc/interpreter/geometryimages.m b/doc/interpreter/geometryimages.m
--- a/doc/interpreter/geometryimages.m
+++ b/doc/interpreter/geometryimages.m
@@ -1,11 +1,15 @@
 function geometryimages (nm, typ)
   bury_output ();
-  if (strcmp (nm, "voronoi"))
+  if (isempty (findstr (octave_config_info ("DEFS"), "HAVE_QHULL")) && ...
+      (strcmp (nm, "voronoi") || strcmp (nm, "griddata") || ...
+       strcmp (nm, "convhull") || strcmp (nm, "delaunay")))
+    sombreroimage (nm, typ);
+  elseif (strcmp (nm, "voronoi"))
     rand("state",9);
     x = rand(10,1);
     y = rand(10,1);
     tri = delaunay (x, y);
     [vx, vy] = voronoi (x, y, tri);
     triplot (tri, x, y, "b");
     hold on;
     plot (vx, vy, "r");
@@ -136,8 +140,35 @@ endfunction
 
 ## Use this function before plotting commands and after every call to
 ## print since print() resets output to stdout (unfortunately, gnpulot
 ## can't pop output as it can the terminal type).
 function bury_output ()
   f = figure (1);
   set (f, "visible", "off");
 endfunction
+
+function sombreroimage (nm, typ)
+  if (strcmp (typ, "txt"))
+    fid = fopen (sprintf ("%s.txt", nm), "wt");
+    fputs (fid, "+-----------------------------+\n");
+    fputs (fid, "| Image unavailable because   |\n");
+    fputs (fid, "| of a missing QHULL library. |\n");
+    fputs (fid, "+-----------------------------+\n");
+    fclose (fid);
+    return;
+  else ## if (!strcmp (typ, "txt"))
+
+    bury_output ();
+
+    x = y = linspace (-8, 8, 41)';
+    [xx, yy] = meshgrid (x, y);
+    r = sqrt (xx .^ 2 + yy .^ 2) + eps;
+    z = sin (r) ./ r;
+    unwind_protect
+      mesh (x, y, z);
+      title ("Sorry, graphics not available because octave was\\ncompiled without the QHULL library.");
+    unwind_protect_cleanup
+      print (strcat (nm, ".", typ), strcat ("-d", typ));
+      bury_output ();
+    end_unwind_protect
+  endif
+endfunction
