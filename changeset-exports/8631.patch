# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1232909742 -3600
#      Sun Jan 25 19:55:42 2009 +0100
# Node ID 52956d66950611af3b8b03562b181e4a64d8b1f8
# Parent  540165304f00d10959e61255f3a2bd25ba86421d
Display sensible error message when the help text of an undocumented function is requested

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -87,16 +87,21 @@ 2008-12-24 Ben Abbott <bpabbott@mac.com>
 	* path/savepath.m: Respect cmd-line and env paths.
 
 2009-01-24 Ben Abbott <bpabbott@mac.com>
 
 	* sparse/svds.m: svds.m: skip tests if ARPACK is missing.
 
 2009-01-25  Søren Hauberg  <hauberg@gmail.com>
 
+	* help/help.m, help/print_usage.m, help/get_first_help_sentence.m:
+	print sensible error message when function is found but not documented.
+
+2009-01-25  Søren Hauberg  <hauberg@gmail.com>
+
 	* help/help.m: Allow displaying 'Contents.m' files.
 
 2009-01-23  Søren Hauberg  <hauberg@gmail.com>
 
 	* help/type.m: Make 'type X' work, when X is the name of a variable.
 
 2009-01-22  John W. Eaton  <jwe@octave.org>
 
diff --git a/scripts/help/get_first_help_sentence.m b/scripts/help/get_first_help_sentence.m
--- a/scripts/help/get_first_help_sentence.m
+++ b/scripts/help/get_first_help_sentence.m
@@ -56,16 +56,18 @@ function [retval, status] = get_first_he
   ## Then, we take action depending on the format
   switch (lower (format))
     case "plain text"
       [retval, status] = first_sentence_plain_text (help_text, max_len);
     case "texinfo"
       [retval, status] = first_sentence_texinfo (help_text, max_len);
     case "html"
       [retval, status] = first_sentence_html (help_text, max_len);
+    case "not documented"
+      error ("get_first_help_sentence: `%s' is not documented\n", name);
     case "not found"
       error ("get_first_help_sentence: `%s' not found\n", name);
     otherwise
       error ("get_first_help_sentence: internal error: unsupported help text format: '%s'\n", format);
   endswitch
 
   if (nargout <= 1 && status != 0)
     warning ("get_first_help_sentence: couldn't run makeinfo on '%s'", name);
diff --git a/scripts/help/help.m b/scripts/help/help.m
--- a/scripts/help/help.m
+++ b/scripts/help/help.m
@@ -55,16 +55,18 @@ function help (name)
     ## Take action depending on help text format
     switch (lower (format))
       case "plain text"
         status = 0;
       case "texinfo"
         [text, status] = makeinfo (text, "plain text");
       case "html"
         [text, status] = strip_html_tags (text);
+      case "not documented"
+        error ("help: `%s' is not documented\n", name);
       case "not found"
         [text, status] = do_contents (name);
         if (status != 0)
           error ("help: `%s' not found\n", name);
         endif
       otherwise
         error ("help: internal error: unsupported help text format: '%s'\n", format);
     endswitch
diff --git a/scripts/help/print_usage.m b/scripts/help/print_usage.m
--- a/scripts/help/print_usage.m
+++ b/scripts/help/print_usage.m
@@ -42,16 +42,18 @@ function print_usage (name)
   max_len = 80;
   switch (lower (format))
     case "plain text"
       [usage_string, status] = get_usage_plain_text (text, max_len);
     case "texinfo"
       [usage_string, status] = get_usage_texinfo (text, max_len);
     case "html"
       [usage_string, status] = get_usage_html (text, max_len);
+    case "not documented"
+      error ("print_usage: `%s' is not documented\n", name);
     case "not found"
       error ("print_usage: `%s' not found\n", name);
     otherwise
       error ("print_usage: internal error: unsupported help text format: '%s'\n", format);
   endswitch
   
   ## Raise the final error
   if (status != 0)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -77,16 +77,21 @@ 2008-12-25 Ben Abbott <bpabbott@mac.com>
 	load_path::do_get_command_line_path): New functions.
 
 2009-01-24 Ben Abbott <bpabbott@mac.com>
 
 	* DLD-FUNCTIONS/eigs.cc: eigs.cc: skip tests if ARPACK is missing.
 
 2009-01-25  Søren Hauberg  <hauberg@gmail.com>
 
+	* help.cc (do_get_help_text, raw_help_from_symbol_table): new output to
+	flag the a function is found but not documented.
+	
+2009-01-25  Søren Hauberg  <hauberg@gmail.com>
+
 	* help.cc (raw_help_from_file): No longer search for files called
 	'Contents.m', as this is moved to 'script/help.m'.
 	
 
 2009-01-23  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (octave_call_stack::do_goto_caller_frame):
 	Also allow caller frame to be base frame, not just user code.
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -628,26 +628,23 @@ raw_help_from_symbol_table (const std::s
       octave_function *fcn = val.function_value ();
 
       if (fcn)
 	{
 	  symbol_found = true;
 
 	  h = fcn->doc_string ();
 
-	  if (! h.empty ())
-	    {
-	      retval = true;
+          retval = true;
+
+	  w = fcn->fcn_file_name ();
 
-	      w = fcn->fcn_file_name ();
-
-	      if (w.empty ())
-		w = fcn->is_user_function ()
-		  ? "command-line function" : "built-in function";
-	    }
+	  if (w.empty ())
+            w = fcn->is_user_function ()
+              ? "command-line function" : "built-in function";
 	}
     }
 
   return retval;
 }
 
 static bool
 raw_help_from_file (const std::string& nm, std::string& h, 
@@ -694,17 +691,21 @@ do_get_help_text (const std::string name
 {
   bool symbol_found = false;
   text = raw_help (name, symbol_found);
   
   format = "Not found";
   if (symbol_found)
     {
       size_t idx = -1;
-      if (looks_like_texinfo (text, idx))
+      if (text.empty ())
+        {
+          format = "Not documented";
+        }
+      else if (looks_like_texinfo (text, idx))
         {
           format = "texinfo";
           text.erase (0, idx);
         }
       else if (looks_like_html (text))
         {
           format = "html";
         }
