# HG changeset patch
# User jwe
# Date 1144179705 0
#      Tue Apr 04 19:41:45 2006 +0000
# Node ID e07baa8b93b9af1c1c6ac03887847f6c76b2a003
# Parent  3a89e82677f06eb8ea5f9312c8dc2001f96d8386
[project @ 2006-04-04 19:41:45 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,14 @@
 2006-04-04  John W. Eaton  <jwe@octave.org>
 
+	* path/setpath.m: New file.
+	* path/savepath.m: Use setpath to set path instead of assigning
+	directly to LOADPATH.
+
 	* path/Makefile.in, path/addpath.m, path/rmpath.m, path/savepath.m:
 	New files, adapted from Octave Forge by Keith Goodman
 	<kwgoodman@gmail.com>.
 	* path: New directory.
 	* Makefile.in (SUBDIRS): Add it to the list.
 	* configure.in (AC_CONFIG_FILES): Include path/Makefile here.
 
 2006-04-02  David Bateman  <dbateman@free.fr>
diff --git a/scripts/path/addpath.m b/scripts/path/addpath.m
--- a/scripts/path/addpath.m
+++ b/scripts/path/addpath.m
@@ -12,39 +12,39 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with this program; if not, write to the Free Software
 ## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 ##
 ## Based on code Copyright (C) 2000 Etienne Grossmann 
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} addpath(@var{dir1}, @dots{})
+## @deftypefn {Function File} {} addpath (@var{dir1}, @dots{})
 ## Prepend @var{dir1}, @dots{} to the current @code{LOADPATH}.
 ## If the directory is already in the path, it is moved to the specified
 ## location, prepending by default.
 ## 
 ## @example
 ## addpath (dir1, "-end", dir2, "-begin", dir3, "-END", dir4, "-BEGIN", dir5)
 ## @result{} Prepend dir1, dir3 and dir5 and append dir2 and dir4. 
 ## @end example
 ##
 ## An error will be returned if the string is not a directory, the
 ## directory doesn't exist or you don't have read access to it.
 ##
 ## BUG: This function can't add directories called @samp{-end} or
 ## @samp{-begin} (case insensitively).
 ##
-## @seealso{LOADPATH, rmpath, savepath}
+## @seealso{LOADPATH, rmpath, savepath, setpath}
 ## @end deftypefn
 
 ## Author: Etienne Grossmann <etienne@cs.uky.edu>
 ## Modified-By: Bill Denney <bill@givebillmoney.com>
 
-##PKGADD: mark_as_command addpath
+## PKGADD: mark_as_command addpath
 
 function ret = addpath (varargin)
 
   if (nargout > 0)
     path = varargin{1};
     varargin = varargin(2:end);
   else
     path = LOADPATH;
diff --git a/scripts/path/rmpath.m b/scripts/path/rmpath.m
--- a/scripts/path/rmpath.m
+++ b/scripts/path/rmpath.m
@@ -13,22 +13,22 @@
 ## You should have received a copy of the GNU General Public License
 ## along with this program; if not, write to the Free Software
 ## Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} rmpath (@var{dir1}, @dots{})
 ## Remove @var{dir1}, @dots{} from the current @code{LOADPATH}.
 ##
-## @seealso{LOADPATH, addpath, savepath}
+## @seealso{LOADPATH, addpath, savepath, setpath}
 ## @end deftypefn
 
 ## Author: Etienne Grossmann <etienne@cs.uky.edu>
 
-##PKGADD: mark_as_command rmpath
+## PKGADD: mark_as_command rmpath
 
 function ret = rmpath (varargin)
 
   if (nargout == 0)
     path = LOADPATH;
   else
     path = varargin{1};
   endif
diff --git a/scripts/path/savepath.m b/scripts/path/savepath.m
--- a/scripts/path/savepath.m
+++ b/scripts/path/savepath.m
@@ -20,21 +20,23 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} savepath (@var{file})
 ## This function saves the current @code{LOADPATH} to your personal
 ## default initilization file or optionally the @var{file} that you
 ## specify.
 ##
 ## It will return 0 if it was successful.
 ##
-## @seealso{LOADPATH, addpath, rmpath}
+## @seealso{LOADPATH, addpath, rmpath, setpath}
 ## @end deftypefn
 
 ## Author: Bill Denney <bill@givebillmoney.com>
 
+##PKGADD: mark_as_command savepath
+
 function varargout = savepath (savefile)
 
   retval = 1;
 
   beginstring = "## Begin savepath auto-created section, do not edit";
   endstring   = "## End savepath auto-created section";
 
   if (nargin == 0)
@@ -74,19 +76,16 @@ function varargout = savepath (savefile)
       error ("savepath: could not close savefile after reading, %s", savefile);
     endif
   endif
 
   if (startline > endline || (startline > 0 && endline == 0))
     error ("savepath: unable to parse file, %s", savefile);
   endif
 
-  ## put the path into a cell array
-  pathlines = { beginstring, ["  LOADPATH=\"", LOADPATH, "\";"], endstring };
-
   ## put the current savepath lines into the file
   if (isempty (filelines)
       || (startline == 1 && endline == length (filelines)))
     ## savepath is the entire file
     pre = post = {};
   elseif (endline == 0)
     ## drop the savepath statements at the end of the file
     pre = filelines;
@@ -106,19 +105,20 @@ function varargout = savepath (savefile)
   ## write the results
   [fid, msg] = fopen (savefile, "wt");
   if (fid < 0)
     error ("savepath: unable to open file for writing, %s, %s", savefile, msg);
   end
   for i = 1:length (pre)
     fprintf (fid, "%s\n", pre{i})
   endfor
-  for i = 1:length (pathlines)
-    fprintf (fid, "%s\n", pathlines{i});
-  endfor
+
+  fprintf (fid, "%s\n  setpath (\"%s\");\n%s\n",
+	   beginstring, LOADPATH, endstring);
+
   for i = 1:length (post)
     fprintf (fid, "%s\n", post{i});
   endfor
   closeread = fclose (fid);
   if (closeread < 0)
     error ("savepath: could not close savefile after writing, %s", savefile);
   endif
 
