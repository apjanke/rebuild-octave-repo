# HG changeset patch
# User jwe
# Date 1175873625 0
#      Fri Apr 06 15:33:45 2007 +0000
# Node ID 7e9a548e8ddfa5e45df26dbc3bbff70f8fffff56
# Parent  a46d4161213fc3f11110696de4983840d9767749
[project @ 2007-04-06 15:33:32 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+2007-04-06  John W. Eaton  <jwe@octave.org>
+
+	* ranlib/phrtsd.f (phrtsd): Ensure that the types of the arguments
+	passed to mod are the same even on 64-bit systems.
+
 2007-04-04  John W. Eaton  <jwe@octave.org>
 
 	* Makefules.in: Handle Fortran, C, and C++ sources with separate
 	variables.
 	* misc/Makefile.in: Use new variables for Fortran, C, and C++ files.
 	* Makefile.in (clean mostlyclean distclean): No need to remove
 	$(CRUFT_OBJ) here.
 
diff --git a/libcruft/ranlib/phrtsd.f b/libcruft/ranlib/phrtsd.f
--- a/libcruft/ranlib/phrtsd.f
+++ b/libcruft/ranlib/phrtsd.f
@@ -36,16 +36,18 @@ C
 C**********************************************************************
 C     .. Parameters ..
       CHARACTER*(*) table
       PARAMETER (table='abcdefghijklmnopqrstuvwxyz'//
      +          'ABCDEFGHIJKLMNOPQRSTUVWXYZ'//'0123456789'//
      +          '!@#$%^&*()_+[];:''"<>?,./')
       INTEGER twop30
       PARAMETER (twop30=1073741824)
+      INTEGER sixty4
+      PARAMETER (sixty4=64)
 C     ..
 C     .. Scalar Arguments ..
       INTEGER seed1,seed2
       CHARACTER phrase* (*)
 C     ..
 C     .. Local Scalars ..
       INTEGER i,ichr,j,lphr
 C     ..
@@ -68,17 +70,17 @@ C     .. Data statements ..
       DATA shift/1,64,4096,262144,16777216/
 C     ..
 C     .. Executable Statements ..
       seed1 = 1234567890
       seed2 = 123456789
       lphr = lennob(phrase)
       IF (lphr.LT.1) RETURN
       DO 30,i = 1,lphr
-          ichr = mod(index(table,phrase(i:i)),64)
+          ichr = mod(index(table,phrase(i:i)),sixty4)
           IF (ichr.EQ.0) ichr = 63
           DO 10,j = 1,5
               values(j) = ichr - j
               IF (values(j).LT.1) values(j) = values(j) + 63
    10     CONTINUE
           DO 20,j = 1,5
               seed1 = mod(seed1+shift(j-1)*values(j),twop30)
               seed2 = mod(seed2+shift(j-1)*values(6-j),twop30)
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -412,17 +412,25 @@ execute_command_line_file (const std::st
 
   size_t pos = curr_fcn_file_name.find_last_of (file_ops::dir_sep_chars);
   
   std::string tmp = (pos != NPOS)
     ? curr_fcn_file_name.substr (pos+1) : curr_fcn_file_name;
 
   octave_program_name = tmp;
 
-  parse_and_execute (fname, false, "octave");
+  try
+    {
+      parse_and_execute (fname, false, "octave");
+    }
+  catch (std::bad_alloc)
+    {
+      std::cerr << "error: memory exhausted -- execution of "
+		<< fname << " failed\n";
+    }
  
   unwind_protect::run_frame ("execute_command_line_file");
 }
 
 // Usage message with extra help.
 
 static void
 verbose_usage (void)
