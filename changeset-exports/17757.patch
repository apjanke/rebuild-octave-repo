# HG changeset patch
# User Rik <rik@octave.org>
# Date 1382653324 25200
#      Thu Oct 24 15:22:04 2013 -0700
# Node ID dae2230227a72f114ef02c270f9919f6dbfdc6dd
# Parent  9aff1c9fd70f0956186faf82b7c504446ca66834
doc: Use double-quote in preference to single quote in code examples.

* doc/interpreter/errors.txi, doc/interpreter/interp.txi,
doc/interpreter/intro.txi, doc/interpreter/java.txi,
libinterp/corefcn/besselj.cc, libinterp/octave-value/ov-usr-fcn.cc:
Use double-quote in preference to single quote in code examples.

diff --git a/doc/interpreter/debug.txi b/doc/interpreter/debug.txi
--- a/doc/interpreter/debug.txi
+++ b/doc/interpreter/debug.txi
@@ -301,17 +301,17 @@ or the recursive time-stepping itself.  
 we can use the profiler.
 
 @example
 @group
 profile on;
 foo;
 profile off;
 
-data = profile ('info');
+data = profile ("info");
 profshow (data, 10);
 @end group
 @end example
 
 This prints a table like:
 
 @example
 @group
@@ -381,17 +381,17 @@ profiling session (@code{profile on} doe
 before the profiler is restarted):
 
 @example
 @group
 profile on;
 bar (20);
 profile off;
 
-profshow (profile ('info'));
+profshow (profile ("info"));
 @end group
 @end example
 
 This gives:
 
 @example
 @group
    #            Function Attr     Time (s)        Calls
@@ -419,17 +419,17 @@ the existing data and collect the missin
 This is done by:
 
 @example
 @group
 profile resume;
 foo;
 profile off;
 
-profshow (profile ('info'), 10);
+profshow (profile ("info"), 10);
 @end group
 @end example
 
 As you can see in the table below, now we have both profiles mixed
 together.
 
 @example
 @group
diff --git a/doc/interpreter/errors.txi b/doc/interpreter/errors.txi
--- a/doc/interpreter/errors.txi
+++ b/doc/interpreter/errors.txi
@@ -263,19 +263,19 @@ is executed.
 The function can do anything necessary for cleanup such as closing open file
 handles, printing an error message, or restoring global variables to their
 initial values.  The last example is a very convenient idiom for Octave code.
 For example:
 
 @example
 @group
 function rand42
-  old_state = rand ('state');
-  restore_state = onCleanup (@@() rand ('state', old_state);
-  rand ('state', 42);
+  old_state = rand ("state");
+  restore_state = onCleanup (@@() rand ("state", old_state);
+  rand ("state", 42);
   @dots{}
 endfunction  # rand generator state restored by onCleanup
 @end group
 @end example
 
 @DOCSTRING(onCleanup)
 
 @node Handling Warnings
diff --git a/doc/interpreter/interp.txi b/doc/interpreter/interp.txi
--- a/doc/interpreter/interp.txi
+++ b/doc/interpreter/interp.txi
@@ -51,20 +51,20 @@ dt = 1;
 ti =-2:0.025:2;
 dti = 0.025;
 y = sign (t);
 ys = interp1 (t,y,ti,"spline");
 yp = interp1 (t,y,ti,"pchip");
 ddys = diff (diff (ys)./dti) ./ dti;
 ddyp = diff (diff (yp)./dti) ./ dti;
 figure (1);
-plot (ti,ys,'r-', ti,yp,'g-');
+plot (ti,ys,"r-", ti,yp,"g-");
 legend ("spline", "pchip", 4);
 figure (2);
-plot (ti,ddys,'r+', ti,ddyp,'g*');
+plot (ti,ddys,"r+", ti,ddyp,"g*");
 legend ("spline", "pchip");
 @end group
 @end example
 
 @ifnotinfo
 @noindent
 The result of which can be seen in @ref{fig:interpderiv1} and
 @ref{fig:interpderiv2}.
@@ -97,18 +97,18 @@ points.  An example of the use of @code{
 @example
 @group
 t = 0 : 0.3 : pi; dt = t(2)-t(1);
 n = length (t); k = 100;
 ti = t(1) + [0 : k-1]*dt*n/k;
 y = sin (4*t + 0.3) .* cos (3*t - 0.1);
 yp = sin (4*ti + 0.3) .* cos (3*ti - 0.1);
 plot (ti, yp, "g", ti, interp1 (t, y, ti, "spline"), "b", ...
-      ti, interpft (y, k), "c", t, y, 'r+');
-legend ('sin(4t+0.3)cos(3t-0.1', "spline", "interpft", "data");
+      ti, interpft (y, k), "c", t, y, "r+");
+legend ("sin(4t+0.3)cos(3t-0.1)", "spline", "interpft", "data");
 @end group
 @end example
 
 @noindent
 @ifinfo
 which demonstrates the poor behavior of Fourier interpolation for non-periodic
 functions.
 @end ifinfo
diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -519,17 +519,17 @@ printf ("foo %s\n", "bar")
 
 Some examples signal errors.  This normally displays an error message
 on your terminal.  Error messages are shown on a line beginning with
 @code{error:}.
 
 @example
 @group
 fieldnames ([1, 2; 3, 4])
-error: fieldnames: wrong type argument 'matrix'
+error: fieldnames: Invalid input argument
 @end group
 @end example
 
 @node Format of Descriptions
 @subsection Format of Descriptions
 @cindex description format
 
 Functions and commands are described in this manual in a 
diff --git a/doc/interpreter/java.txi b/doc/interpreter/java.txi
--- a/doc/interpreter/java.txi
+++ b/doc/interpreter/java.txi
@@ -168,17 +168,17 @@ Example:
 @group
 %% 
 %% Return: true if the environment is Octave.
 %% 
 function retval = isOctave
   persistent cacheval;  % speeds up repeated calls
 
   if isempty (cacheval)
-    cacheval = (exist ('OCTAVE_VERSION', 'builtin') > 0);
+    cacheval = (exist ("OCTAVE_VERSION", "builtin") > 0);
   end
 
   retval = cacheval;
 end
 @end group
 @end example
 
 @c ------------------------------------------------------------------------
@@ -248,31 +248,31 @@ step will affect all users.
 
 Classes which are used only by a specific script should be placed in the
 @var{dynamic classpath}.  This portion of the classpath can be modified at
 runtime using the @code{javaaddpath} and @code{javarmpath} functions.
 
 Example:
 
 @example
-octave> base_path = 'C:/Octave/java_files';
+octave> base_path = "C:/Octave/java_files";
 
 octave> % add two JARchives to the dynamic classpath
-octave> javaaddpath ([base_path, '/someclasses.jar']);
-octave> javaaddpath ([base_path, '/moreclasses.jar']);
+octave> javaaddpath ([base_path, "/someclasses.jar"]);
+octave> javaaddpath ([base_path, "/moreclasses.jar"]);
 
 octave> % check the dynamic classpath
 octave> p = javaclasspath;
 octave> disp (p@{1@});
 C:/Octave/java_files/someclasses.jar
 octave> disp (p@{2@});
 C:/Octave/java_files/moreclasses.jar
 
 octave> % remove the first element from the classpath
-octave> javarmpath ([base_path, '/someclasses.jar']);
+octave> javarmpath ([base_path, "/someclasses.jar"]);
 octave> p = javaclasspath;
 octave> disp (p@{1@});
 C:/Octave/java_files/moreclasses.jar
 
 octave> % provoke an error
 octave> disp (p@{2@});
 error: A(I): Index exceeds matrix dimension.
 @end example
@@ -282,35 +282,35 @@ user account is to use the file @file{.o
 directory.  All Octave commands in this file are executed each time you start a
 new instance of Octave.  The following example adds the directory @file{octave}
 to Octave's search path and the archive @file{myclasses.jar} in this directory
 to the Java search path.
 
 @example
 @group
 % contents of .octaverc:
-addpath ('~/octave');
-javaaddpath ('~/octave/myclasses.jar');
+addpath ("~/octave");
+javaaddpath ("~/octave/myclasses.jar");
 @end group
 @end example
 
 @c ------------------------------------------------------------------------
 @node How to create an instance of a Java class?
 @subsection How to create an instance of a Java class?
 @c - index -
 @cindex object, how to create
 @cindex instance, how to create
 @c - index -
 
 The function @code{javaObject} can be used to create Java objects..
 
 Example:
 
 @example
-Passenger = javaObject ('package.FirstClass', row, seat);
+Passenger = javaObject ("package.FirstClass", row, seat);
 @end example
 
 @c ------------------------------------------------------------------------
 @node How can I handle memory limitations?
 @subsection How can I handle memory limitations?
 @cindex memory, limitations
 
 In order to execute Java code Octave creates a Java Virtual Machine (JVM).
@@ -372,17 +372,17 @@ the string @code{12.34}.
 -DMyProperty=12.34
 @end example
 
 The value of this property can then be retrieved as a string by a Java object
 or in Octave:
 
 @example
 @group
-octave> javaMethod ('getProperty', 'java.lang.System', 'MyProperty');
+octave> javaMethod ("getProperty", "java.lang.System", "MyProperty");
 ans = 12.34
 @end group
 @end example
 
 @seealso{javamem}
 
 @c ------------------------------------------------------------------------
 @node Which @TeX{} symbols are implemented in dialog functions?
diff --git a/libinterp/corefcn/besselj.cc b/libinterp/corefcn/besselj.cc
--- a/libinterp/corefcn/besselj.cc
+++ b/libinterp/corefcn/besselj.cc
@@ -524,17 +524,17 @@ See besselj.\n\
 DEFUN (airy, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{a}, @var{ierr}] =} airy (@var{k}, @var{z}, @var{opt})\n\
 Compute Airy functions of the first and second kind, and their\n\
 derivatives.\n\
 \n\
 @example\n\
 @group\n\
- K   Function   Scale factor (if 'opt' is supplied)\n\
+ K   Function   Scale factor (if \"opt\" is supplied)\n\
 ---  --------   ---------------------------------------\n\
  0   Ai (Z)     exp ((2/3) * Z * sqrt (Z))\n\
  1   dAi(Z)/dZ  exp ((2/3) * Z * sqrt (Z))\n\
  2   Bi (Z)     exp (-abs (real ((2/3) * Z * sqrt (Z))))\n\
  3   dBi(Z)/dZ  exp (-abs (real ((2/3) * Z * sqrt (Z))))\n\
 @end group\n\
 @end example\n\
 \n\
diff --git a/libinterp/octave-value/ov-usr-fcn.cc b/libinterp/octave-value/ov-usr-fcn.cc
--- a/libinterp/octave-value/ov-usr-fcn.cc
+++ b/libinterp/octave-value/ov-usr-fcn.cc
@@ -874,17 +874,17 @@ will cause @code{nargout} to return 0 in
 \n\
 @noindent\n\
 will cause @code{nargout} to return 2 inside the function\n\
 @code{f}.\n\
 \n\
 In the second usage,\n\
 \n\
 @example\n\
-nargout (@@histc) \% or nargout ('histc')\n\
+nargout (@@histc) \% or nargout (\"histc\")\n\
 @end example\n\
 \n\
 @noindent\n\
 will return 2, because @code{histc} has two outputs, whereas\n\
 \n\
 @example\n\
 nargout (@@deal)\n\
 @end example\n\
