# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1521646031 -3600
#      Wed Mar 21 16:27:11 2018 +0100
# Node ID cc55705f1f84456da9dc677b8935c40c11fd6a87
# Parent  ecb5688b875feabfc75fdb6121bc0488481b6574
# Parent  7edf1fb1d4b2b48117d98d87895bab31fc65d739
maint: merge stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -167,19 +167,21 @@ OCTAVE_SET_DEFAULT([imagedir], '${datadi
 ## Where Octave will search for example data files shipped with distribution.
 OCTAVE_SET_DEFAULT([octdatadir], '${datadir}/octave/${version}/data')
 
 ## Where Octave will search for Qt help files shipped with distribution.
 OCTAVE_SET_DEFAULT([octdocdir], '${datadir}/octave/${version}/doc')
 
 ## Where Octave will search for fallback font files shipped with distribution.
 OCTAVE_SET_DEFAULT([octfontsdir], '${datadir}/octave/${version}/fonts')
+
 ## Where Octave will look for startup files.
 OCTAVE_SET_DEFAULT([startupfiledir], '${fcnfiledir}/startup')
 OCTAVE_SET_DEFAULT([localstartupfiledir], '${localfcnfiledir}/startup')
+
 ## Where Octave will look for man and info files.
 OCTAVE_SET_DEFAULT([man1dir], '${mandir}/man1')
 OCTAVE_SET_DEFAULT([man1ext], '.1')
 OCTAVE_SET_DEFAULT([infofile], '${infodir}/octave.info')
 
 ### Check for programs used in building, installing, and running Octave.
 
 ## Programs used in configuring Octave.
@@ -2901,16 +2903,17 @@ if test $ENABLE_DOCS = yes; then
 fi
 if test $ENABLE_DOCS = yes; then
   AC_DEFINE(ENABLE_DOCS, 1,
     [Define to 1 to build Octave documentation files.])
 fi
 AM_CONDITIONAL([AMCOND_BUILD_DOCS], [test $ENABLE_DOCS = yes])
 
 ### Determine whether Mercurial ID should be embedded in library binaries.
+
 ENABLE_HG_ID=yes
 AC_ARG_ENABLE([hg-id],
   [AS_HELP_STRING([--disable-hg-id],
     [disable embedding of hg id in libraries])],
   [if test "$enableval" = no; then ENABLE_HG_ID=no; fi], [])
 AM_CONDITIONAL([AMCOND_ENABLE_HG_ID], [test $ENABLE_HG_ID = yes])
 
 ### Determine whether to install build logs with Octave.
diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -200,17 +200,17 @@ octdoc_DATA += \
 $(srcdir)/%reldir%/octave.info: $(DOC_IMAGES_TXT) $(octave_TEXINFOS)
 %reldir%/octave.dvi: $(DOC_IMAGES_EPS) $(octave_TEXINFOS)
 %reldir%/octave.pdf: $(DOC_IMAGES_PDF) $(octave_TEXINFOS)
 $(OCTAVE_HTML_STAMP): $(DOC_IMAGES_PNG) $(octave_TEXINFOS)
 
 $(OCTAVE_QTHELP_FILES): $(OCTAVE_HTML_STAMP) $(srcdir)/%reldir%/prepare_qhelp.py
 	$(AM_V_GEN)rm -f $(OCTAVE_QTHELP_FILES) && \
 	$(PYTHON) $(srcdir)/%reldir%/prepare_qhelp.py %reldir%/octave_interpreter octave.html && \
-	$(QCOLLECTIONGENERATOR) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
+	$(QCOLLECTIONGENERATOR) $(QCOLLECTIONGENERATORFLAGS) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
 	rm -f %reldir%/octave_interpreter.qhcp %reldir%/octave_interpreter.qhp
 
 ## The Qt help collection generator command produces two output files
 ## with the same base name: the compressed help (qch) file and the help
 ## collection (qhc) file.  Declare the qhc file to depend on the
 ## associated qch file, so that the files are built serially.
 %reldir%/octave_interpreter.qhc: %reldir%/octave_interpreter.qch
 
diff --git a/libinterp/corefcn/__gammainc__.cc b/libinterp/corefcn/__gammainc__.cc
--- a/libinterp/corefcn/__gammainc__.cc
+++ b/libinterp/corefcn/__gammainc__.cc
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "fNDArray.h"
 
-DEFUN (__gammainc__, args, , 
+DEFUN (__gammainc__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {@var{y} =} __gammainc__ (@var{x}, @var{a})
 Continued fraction for incomplete gamma function.
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin != 2)
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -2644,17 +2644,17 @@ end-of-file condition.
   return ovl (os.eof () ? 1.0 : 0.0);
 }
 
 DEFMETHODX ("ferror", Fferror, interp, args, ,
             doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{msg} =} ferror (@var{fid})
 @deftypefnx {} {[@var{msg}, @var{err}] =} ferror (@var{fid})
 @deftypefnx {} {[@dots{}] =} ferror (@var{fid}, "clear")
-Query the error status of the stream specified by file descriptor @var{fid}
+Query the error status of the stream specified by file descriptor @var{fid}.
 
 If an error condition exists then return a string @var{msg} describing the
 error.  Otherwise, return an empty string @qcode{""}.
 
 The second input @qcode{"clear"} is optional.  If supplied, the error
 state on the stream will be cleared.
 
 The optional second output is a numeric indication of the error status.
diff --git a/libinterp/corefcn/symscope.h b/libinterp/corefcn/symscope.h
--- a/libinterp/corefcn/symscope.h
+++ b/libinterp/corefcn/symscope.h
@@ -526,43 +526,52 @@ namespace octave
     void bind_script_symbols (const std::shared_ptr<symbol_scope_rep>& curr_scope);
 
     void unbind_script_symbols (void);
 
     octave_value dump_symbols_map (void) const;
 
   private:
 
-    // Name for this scope (usually the corresponding filename of the
-    // function corresponding to the scope).
+    //! Name for this scope (usually the corresponding filename of the
+    //! function corresponding to the scope).
+
     std::string m_name;
 
-    // Map from symbol names to symbol info.
+    //! Map from symbol names to symbol info.
+
     std::map<std::string, symbol_record> m_symbols;
 
-    // Map from symbol names to subfunctions.
+    //! Map from symbol names to subfunctions.
+
     std::map<std::string, octave_value> m_subfunctions;
 
-    // The list of subfunctions (if any) in the order they appear in
-    // the function file.
+    //! The list of subfunctions (if any) in the order they appear in
+    //! the function file.
+
     std::list<std::string> m_subfunction_names;
 
-    // The associated user code (may be null).
+    //! The associated user code (may be null).
+
     octave_user_function *m_fcn;
 
-    // Parent of nested function (may be null).
+    //! Parent of nested function (may be null).
+
     std::weak_ptr<symbol_scope_rep> m_parent;
 
-    // Child nested functions.
+    //! Child nested functions.
+
     std::vector<symbol_scope> m_children;
 
-    // If true, then this scope belongs to a nested function.
+    //! If true, then this scope belongs to a nested function.
+
     bool m_is_nested;
 
-    // If true then no variables can be added.
+    //! If true then no variables can be added.
+    
     bool m_is_static;
 
     symbol_record::context_id m_context;
   };
 
   class symbol_scope
   {
   public:
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1950,26 +1950,28 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
       RCC_QTVER=
       LRELEASE_QTVER=
       QCOLLECTIONGENERATOR_QTVER=
       QHELPGENERATOR_QTVER=
       MOCFLAGS=
       UICFLAGS=
       RCCFLAGS=
       LRELEASEFLAGS=
+      QCOLLECTIONGENERATORFLAGS=
       QHELPGENERATORFLAGS=
-      QCOLLECTIONGENERATORFLAGS=
       $as_unset ac_cv_prog_MOC_QTVER
       $as_unset ac_cv_prog_ac_ct_MOC_QTVER
       $as_unset ac_cv_prog_UIC_QTVER
       $as_unset ac_cv_prog_ac_ct_UIC_QTVER
       $as_unset ac_cv_prog_RCC_QTVER
       $as_unset ac_cv_prog_ac_ct_RCC_QTVER
       $as_unset ac_cv_prog_LRELEASE_QTVER
       $as_unset ac_cv_prog_ac_ct_LRELEASE_QTVER
+      $as_unset ac_cv_prog_QCOLLECTIONGENERATOR_QTVER
+      $as_unset ac_cv_prog_ac_ct_QCOLLECTIONGENERATOR_QTVER
       $as_unset ac_cv_prog_QHELPGENERATOR_QTVER
       $as_unset ac_cv_prog_ac_ct_QHELPGENERATOR_QTVER
     fi
   fi
 
   if test $build_qt_gui = yes; then
     AC_CHECK_FUNCS([setlocale], [],
       [build_qt_gui=no
@@ -2052,16 +2054,18 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
 
     OCTAVE_CHECK_QSCINTILLA([$qt_version])
 
   fi
   AC_SUBST(MOCFLAGS)
   AC_SUBST(UICFLAGS)
   AC_SUBST(RCCFLAGS)
   AC_SUBST(LRELEASEFLAGS)
+  AC_SUBST(QCOLLECTIONGENERATORFLAGS)
+  AC_SUBST(QHELPGENERATORFLAGS)
   AC_SUBST(QT_CPPFLAGS)
   AC_SUBST(QT_LDFLAGS)
   AC_SUBST(QT_LIBS)
 ])
 dnl
 dnl Check if the default Fortran INTEGER is 64 bits wide.
 dnl If cross-compiling, assume 4 bytes unless the cache value
 dnl is already set.
diff --git a/scripts/help/__unimplemented__.m b/scripts/help/__unimplemented__.m
--- a/scripts/help/__unimplemented__.m
+++ b/scripts/help/__unimplemented__.m
@@ -461,25 +461,25 @@ function txt = __unimplemented__ (fcn)
       txt = check_package (fcn, "statistics");
 
     ## symbolic
     case {"argnames", "bernoulli", "catalan", "charpoly", "chebyshevT", ...
           "chebyshevU", "children", "coshint", "cosint", "dawson", ...
           "digits", "dilog", "dirac", "divisors", "dsolve", "ei", ...
           "ellipticCE", "ellipticCK", "ellipticCPi", "ellipticE", ...
           "ellipticF", "ellipticK", "ellipticPi", "euler", "eulergamma", ...
-          "finverse", "formula", "fresnelc", "fresnels", "funtool", ...
-          "gegenbauerC", "harmonic", "heaviside", "hermiteH", "hypergeom", ...
-          "igamma", "jacobiP", "kroneckerDelta", "kummerU", "laguerreL", ...
-          "legendreP", "logint", "minpoly", "pochhammer", "poles", ...
-          "poly2sym", "polylog", "pretty", "quorem", "rectangularPulse", ...
-          "signIm", "simplify", "sinhint", "sinint", "solve", "ssinint", ...
-          "sym", "sym2poly", "symfun", "sympref", "syms", "symvar", ...
-          "triangularPulse", "vpa", "vpasolve", "whittakerM", "whittakerW", ...
-          "zeta"}
+          "expand", "finverse", "formula", "fresnelc", "fresnels", ...
+          "funtool", "gegenbauerC", "harmonic", "heaviside", "hermiteH", ...
+          "hypergeom", "igamma", "jacobiP", "kroneckerDelta", "kummerU", ...
+          "laguerreL", "legendreP", "logint", "minpoly", "pochhammer", ...
+          "poles", "poly2sym", "polylog", "pretty", "quorem", ...
+          "rectangularPulse", "signIm", "simplify", "sinhint", "sinint", ...
+          "solve", "ssinint", "sym", "sym2poly", "symfun", "sympref", ...
+          "syms", "symvar", "triangularPulse", "vpa", "vpasolve", ...
+          "whittakerM", "whittakerW", "zeta"}
       classes = {"sym", "symfun"};
       txt = check_package (fcn, "symbolic", classes);
 
     ## optimization
     case {"bintprog", "color", "fgoalattain", "fmincon", "fminimax", ...
           "fminsearch", "fseminf", "fzmult", "gangstr", "ktrlink", ...
           "linprog", "lsqcurvefit", "lsqlin", "lsqnonlin", "optimoptions", ...
           "optimtool", "quadprog"}
@@ -712,17 +712,16 @@ function rlist = missing_functions ()
   "enableservice",
   "endsWith",
   "enumeration",
   "eraseBetween",
   "eventlisteners",
   "events",
   "exceltime",
   "Execute",
-  "expand",
   "export2wsdlg",
   "exportsetupdlg",
   "extractAfter",
   "extractBefore",
   "extractBetween",
   "faceNormal",
   "faceNormals",
   "fcontour",
@@ -754,17 +753,16 @@ function rlist = missing_functions ()
   "fmesh",
   "fplot3",
   "freeBoundary",
   "freqspace",
   "fsurf",
   "FunctionTestCase",
   "functiontests",
   "funm",
-  "gammaincinv",
   "gather",
   "gcmr",
   "geobubble",
   "geolimits",
   "getabstime",
   "getAColParms",
   "getaudiodata",
   "getBColParms",
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -34,36 +34,36 @@
 ## @item install
 ## Install named packages.  For example,
 ##
 ## @example
 ## pkg install image-1.0.0.tar.gz
 ## @end example
 ##
 ## @noindent
-## installs the package found in the file @file{image-1.0.0.tar.gz}.  The 
+## installs the package found in the file @file{image-1.0.0.tar.gz}.  The
 ## file containing the package can be an url, e.g.
 ##
 ## @example
 ## pkg install 'http://somewebsite.org/image-1.0.0.tar.gz'
 ## @end example
 ##
 ## @noindent
 ## installs the package found in the given url.  This
-## requires an internet connection and the cURL library.  
+## requires an internet connection and the cURL library.
 ##
 ## @noindent
 ## @emph{Security risk}: no verification of the package is performed
 ## before the installation.  It has the same security issues as manually
 ## downloading the package from the given url and installing it.
 ##
 ## @noindent
 ## @emph{No support}: the GNU Octave community is not responsible for
-## packages installed from foreign sites.  For support or for 
-## reporting bugs you need to contact the maintainers of the installed 
+## packages installed from foreign sites.  For support or for
+## reporting bugs you need to contact the maintainers of the installed
 ## package directly (see the @file{DESCRIPTION} file of the package)
 ##
 ## The @var{option} variable can contain options that affect the manner
 ## in which a package is installed.  These options can be one or more of
 ##
 ## @table @code
 ## @item -nodeps
 ## The package manager will disable dependency checking.  With this option it
@@ -416,17 +416,17 @@ function [local_packages, global_package
           if (any (external_files_mask))
             [success, msg] = mkdir (tmp_dir = tempname ());
             if (success != 1)
               error ("pkg: failed to create temporary directory: %s", msg);
             endif
 
             for file_idx = find (external_files_mask)
 
-              warning ('Octave:security', 
+              warning ('Octave:security',
               ['You are installing from an unofficial source.\n' ...
                'The GNU Octave community is not responsible' ...
                ' for the content of this package.\n' ...
                '%s will be downloaded and installed.\n'],
                files{file_idx});
               _yes = yes_or_no ('Are you sure you want to do this? ');
 
               if (_yes)
diff --git a/scripts/plot/draw/hist.m b/scripts/plot/draw/hist.m
--- a/scripts/plot/draw/hist.m
+++ b/scripts/plot/draw/hist.m
@@ -329,15 +329,15 @@ endfunction
 %!error hist ()
 %!error <Y must be real-valued> hist (2+i)
 %!error <bin specification must be a numeric> hist (1, {0,1,2})
 %!error <number of bins NBINS must be positive> hist (1, 0)
 %!test
 %! hf = figure ("visible", "off");
 %! hax = gca;
 %! unwind_protect
-%!   fail ("hist (hax, 1, [2 1 0])", "warning", "bin values X not sorted"); 
+%!   fail ("hist (hax, 1, [2 1 0])", "warning", "bin values X not sorted");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 %!error <bin specification must be a scalar or vector> hist (1, ones (2,2))
 %!error <NORM must be a numeric constant> hist (1,1, {1})
 %!error <NORM must be a numeric constant . 0> hist (1,1, -1)
diff --git a/scripts/plot/draw/rectangle.m b/scripts/plot/draw/rectangle.m
--- a/scripts/plot/draw/rectangle.m
+++ b/scripts/plot/draw/rectangle.m
@@ -47,18 +47,18 @@
 ##
 ## Additional property/value pairs are passed to the underlying patch command.
 ##
 ## If the first argument @var{hax} is an axes handle, then plot into this axes,
 ## rather than the current axes returned by @code{gca}.
 ##
 ## The optional return value @var{h} is a graphics handle to the created
 ## rectangle object.
+## @seealso{patch, line, cylinder, ellipsoid, sphere}
 ## @end deftypefn
-## @seealso{patch, line, cylinder, ellipsoid, sphere}
 
 function h = rectangle (varargin)
 
   [hax, varargin] = __plt_get_axis_arg__ ("rectangle", varargin{:});
 
   if (isempty (hax))
     hax = gca ();
   else
diff --git a/scripts/set/intersect.m b/scripts/set/intersect.m
--- a/scripts/set/intersect.m
+++ b/scripts/set/intersect.m
@@ -30,18 +30,18 @@
 ## strings.
 ##
 ## If the optional input @qcode{"rows"} is given then return the common rows of
 ## @var{a} and @var{b}.  The inputs must be 2-D matrices to use this option.
 ##
 ## If requested, return index vectors @var{ia} and @var{ib} such that
 ## @code{@var{c} = @var{a}(@var{ia})} and @code{@var{c} = @var{b}(@var{ib})}.
 ##
+## @seealso{unique, union, setdiff, setxor, ismember}
 ## @end deftypefn
-## @seealso{unique, union, setdiff, setxor, ismember}
 
 function [c, ia, ib] = intersect (a, b, varargin)
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("intersect", a, b, varargin{:});
diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -83,18 +83,18 @@
 ## @group
 ## norm (@var{A}*@var{v} - @var{u}*@var{s}, 1) <= @var{tol} * norm (@var{A}, 1)
 ## @end group
 ## @end example
 ##
 ## @code{svds} is best for finding only a few singular values from a large
 ## sparse matrix.  Otherwise, @code{svd (full (@var{A}))} will likely be more
 ## efficient.
+## @seealso{svd, eigs}
 ## @end deftypefn
-## @seealso{svd, eigs}
 
 function [u, s, v, flag] = svds (A, k, sigma, opts)
 
   persistent root2 = sqrt (2);
 
   if (nargin < 1 || nargin > 4)
     print_usage ();
   endif
diff --git a/scripts/specfun/gammainc.m b/scripts/specfun/gammainc.m
--- a/scripts/specfun/gammainc.m
+++ b/scripts/specfun/gammainc.m
@@ -63,26 +63,26 @@
 ## function is multiplied by
 ## @tex
 ## $\Gamma(a+1)\exp(x)x^{-a}$.
 ## @end tex
 ## @ifnottex
 ## @math{gamma(a+1)*exp(x)/(x^a)}.
 ## @end ifnottex
 ## If @var{tail} is @qcode{"scaledupper"}, then the upper incomplete gamma
-## function is divided by the same quantity.
+## function is multiplied by the same quantity.
 ##
 ## References:
 ##
 ## @nospell{M. Abramowitz and I. Stegun},
 ## @cite{Handbook of mathematical functions},
 ## @nospell{Dover publications, Inc.}, 1972.
 ##
 ## @nospell{W. Gautschi},
-## @cite{A computational procedure for incomplete gamma functions}, 
+## @cite{A computational procedure for incomplete gamma functions},
 ## @nospell{ACM Trans. Math Software}, pp. 466--481, Vol 5, No. 4, 2012.
 ##
 ## @nospell{W. H. Press, S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery},
 ## @cite{Numerical Recipes in Fortran 77}, ch.@: 6.2, Vol 1, 1992.
 ##
 ## @seealso{gamma, gammaincinv, gammaln}
 ## @end deftypefn
 
@@ -95,17 +95,17 @@ function y = gammainc (x, a, tail = "low
     print_usage ();
   endif
 
   [err, x, a] = common_size (x, a);
   if (err > 0)
     error ("gammainc: X and A must be of common size or scalars");
   endif
 
-  if (iscomplex (x) || iscomplex (a)) 
+  if (iscomplex (x) || iscomplex (a))
     error ("gammainc: all inputs must be real");
   endif
 
   ## Remember original shape of data, but convert to column vector for calcs.
   x_sz = size (x);
   x = x(:);
   a = a(:);
 
@@ -237,17 +237,17 @@ function y = gammainc (x, a, tail = "low
   endif
 
 endfunction
 
 ## Subfunctions to handle each case:
 
 ## x == 0, a == 0.
 function y = gammainc_00 (tail)
-  if ((strcmp (tail, "upper")) || (strcmp (tail, "scaledupper")))
+  if (strcmp (tail, "upper") || strcmp (tail, "scaledupper"))
     y = 0;
   else
     y = 1;
   endif
 endfunction
 
 ## x == 0.
 function y = gammainc_x0 (tail)
@@ -459,26 +459,26 @@ endfunction
 %!assert (gammainc (2, 2, "scaledupper"), 1.500000000000000, -2e-15)
 %!assert (gammainc ([3 2 36],[2 3 18], "upper"), ...
 %!        [4/exp(3) 5*exp(-2) (4369755579265807723 / 2977975)/exp(36)])
 %!assert (gammainc (10, 10), 1 - (5719087 / 567) * exp (-10), -eps)
 %!assert (gammainc (10, 10, "upper"), (5719087 / 567) * exp (-10), -eps)
 
 ## Test: case 8
 %!assert (gammainc (-10, 10), 3.112658265341493126871617e7, -2*eps)
-## Matlab fails this next one%!      %!      
+## Matlab fails this next one%!      %!
 %!assert (isreal (gammainc (-10, 10)), true)
 %!assert (gammainc (-10, 10.1, "upper"), ...
 %!        -2.9582761911890713293e7-1i * 9.612022339061679758e6, -30*eps)
 %!assert (gammainc (-10, 10, "upper"), -3.112658165341493126871616e7, ...
 %!        -2*eps)
 %!assert (gammainc (-10, 10, "scaledlower"), 0.5128019364747265, -1e-14);
 %!assert (gammainc (-10, 10, "scaledupper"), -0.5128019200000000, -1e-14);
 %!assert (gammainc (200, 201, "upper"), 0.518794309678684497, -2 * eps);
-%!assert (gammainc (200, 201, "scaledupper"), 
+%!assert (gammainc (200, 201, "scaledupper"),
 %!        18.4904360746560462660798514, -eps)
 ## Here we are very good (no D (x,a)) involved
 %!assert (gammainc(1000, 1000.5, "scaledlower"), 39.48467539583672271, -2*eps)
 %!assert (gammainc (709, 1000, "upper"), 0.99999999999999999999999954358, -eps)
 
 ## Test: case 9
 %!test <47800>
 %! assert (gammainc (60, 6, "upper"), 6.18022358081160257327264261e-20,
diff --git a/scripts/statistics/corrcoef.m b/scripts/statistics/corrcoef.m
--- a/scripts/statistics/corrcoef.m
+++ b/scripts/statistics/corrcoef.m
@@ -287,9 +287,8 @@ endfunction
 %!error <parameter 1 must be a string> corrcoef (1, 2, 3)
 %!error <parameter "alpha" missing value> corrcoef (1, 2, "alpha")
 %!error <"alpha" must be a number> corrcoef (1,2, "alpha", "1")
 %!error <"alpha" must be a number> corrcoef (1,2, "alpha", ones (2,2))
 %!error <"alpha" must be a number between 0 and 1> corrcoef (1,2, "alpha", -1)
 %!error <"alpha" must be a number between 0 and 1> corrcoef (1,2, "alpha", 2)
 %!error <"rows" must be "all"...> corrcoef (1,2, "rows", "foobar")
 %!error <Unknown option "foobar"> corrcoef (1,2, "foobar", 1)
-%!error <Unknown option "foobar"> corrcoef (1,2, "foobar", 1)
diff --git a/scripts/statistics/zscore.m b/scripts/statistics/zscore.m
--- a/scripts/statistics/zscore.m
+++ b/scripts/statistics/zscore.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {@var{z} =} zscore (@var{x})
 ## @deftypefnx {} {@var{z} =} zscore (@var{x}, @var{opt})
 ## @deftypefnx {} {@var{z} =} zscore (@var{x}, @var{opt}, @var{dim})
 ## @deftypefnx {} {[@var{z}, @var{mu}, @var{sigma}] =} zscore (@dots{})
-## Compute the Z score of @var{x}
+## Compute the Z score of @var{x}.
 ##
 ## If @var{x} is a vector, subtract its mean and divide by its standard
 ## deviation.  If the standard deviation is zero, divide by 1 instead.
 ##
 ## The optional parameter @var{opt} determines the normalization to use when
 ## computing the standard deviation and has the same definition as the
 ## corresponding parameter for @code{std}.
 ##
