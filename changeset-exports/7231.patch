# HG changeset patch
# User jwe
# Date 1196448810 0
#      Fri Nov 30 18:53:30 2007 +0000
# Node ID 2eb392d058bb0c2702342c7c51a7d6e0eb3bf4d9
# Parent  a760bd2630d547cc8e18d378cb1882033cfc24c7
[project @ 2007-11-30 18:53:29 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2007-11-30  Moritz Borgmann  <octave@moriborg.de>
+
+	* configure.in: Also check for sunmath.h.
+
 2007-11-26  David Bateman  <dbateman@free.fr>
 
 	* PROJECTS: condest now implemented.
 
 	* NEWS: Document the TeX interpreter mode and its limitations with
 	gnuplot 4.0.
 
 	* NEWS: Document the use of "colormap gmap40" to workaround some
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl               2002, 2003, 2004, 2005
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.596 $)
+AC_REVISION($Revision: 1.597 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1228,17 +1228,17 @@ AC_HEADER_STDC
 AC_HEADER_DIRENT
 AC_HEADER_TIME
 AC_HEADER_SYS_WAIT
 
 ### C headers
 
 AC_CHECK_HEADERS(assert.h curses.h direct.h dlfcn.h fcntl.h float.h \
   floatingpoint.h grp.h ieeefp.h inttypes.h limits.h locale.h memory.h nan.h \
-  ncurses.h poll.h pwd.h stdint.h stdlib.h string.h sys/ioctl.h \
+  ncurses.h poll.h pwd.h stdint.h stdlib.h string.h sunmath.h sys/ioctl.h \
   sys/param.h sys/poll.h sys/resource.h sys/select.h sys/stat.h \
   sys/time.h sys/times.h sys/types.h sys/utsname.h sys/utime.h termcap.h \
   unistd.h utime.h varargs.h)
 
 ### C++ headers
 
 AC_LANG_PUSH(C++)
 AC_CHECK_HEADERS(sstream)
diff --git a/doc/interpreter/contributors.in b/doc/interpreter/contributors.in
--- a/doc/interpreter/contributors.in
+++ b/doc/interpreter/contributors.in
@@ -7,16 +7,17 @@ Roger Banks
 Ben Barrowes
 Alexander Barth
 David Bateman
 Heinz Bauschke
 Karl Berry
 David Billinghurst
 Don Bindner
 Jakub Bogusz
+Moritz Borgmann
 Marcus Brinkmann
 Remy Bruno
 Marco Caliari
 Daniel Calvelo
 John C. Campbell
 Jean-Francois Cardoso
 Joao Cardoso
 Larrie Carr
diff --git a/liboctave/Array2.h b/liboctave/Array2.h
--- a/liboctave/Array2.h
+++ b/liboctave/Array2.h
@@ -22,21 +22,21 @@ along with Octave; see the file COPYING.
 
 */
 
 #if !defined (octave_Array2_h)
 #define octave_Array2_h 1
 
 #include <cassert>
 #include <climits>
-#include <cmath>
 #include <cstdlib>
 
 #include "Array.h"
 #include "lo-error.h"
+#include "lo-math.h"
 
 class idx_vector;
 
 // Two dimensional array class.
 
 template <class T>
 class
 Array2 : public Array<T>
diff --git a/liboctave/ArrayN.h b/liboctave/ArrayN.h
--- a/liboctave/ArrayN.h
+++ b/liboctave/ArrayN.h
@@ -24,22 +24,22 @@ along with Octave; see the file COPYING.
 
 #if !defined (octave_ArrayN_h)
 #define octave_ArrayN_h 1
 
 #include <iostream>
 
 #include <cassert>
 #include <climits>
-#include <cmath>
 #include <cstdlib>
 
 #include "Array.h"
 #include "Array2.h"
 #include "lo-error.h"
+#include "lo-math.h"
 
 class idx_vector;
 
 // N-dimensional array class.
 
 template <class T>
 class
 ArrayN : public Array<T>
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,24 @@
+2007-11-30  John W. Eaton  <jwe@octave.org>
+
+	* lo-math.h: New file.
+	* Makefile.in (INCLUDES): Add it to the list.
+	* liboctave/Array2.h, liboctave/ArrayN.h, liboctave/CmplxDET.cc,
+	liboctave/DASPK.cc, liboctave/DASPK.h, liboctave/DASRT.cc,
+	liboctave/DASRT.h, liboctave/DASSL.cc, liboctave/DASSL.h,
+	liboctave/LSODE.cc, liboctave/LSODE.h, liboctave/NLEqn.h,
+	liboctave/Quad.h, liboctave/Range.cc, liboctave/dbleDET.cc,
+	liboctave/lo-cieee.c, liboctave/lo-ieee.cc,
+	liboctave/lo-mappers.cc, liboctave/oct-time.cc,
+	liboctave/oct-time.h, liboctave/randgamma.c,
+	liboctave/randmtzig.c, liboctave/randpoisson.c: Include lo-math.h
+	instead of cmath or math.h.
+	* lo-mappers.h: Don't include sunmath.h here.
+
 2007-11-26  John W. Eaton  <jwe@octave.org>
 
 	* idx-vector.h (idx_vector::idx_vector_rep (const intNDArray<U>&)):
 	Eliminate unnecessary second arg from call to tree_to_mat_idx.
 
 	* oct-inttypes.h (operator bool, operator char): Delete.
 	(bool_value, char_value, double_value, float_value): New functions.
 
diff --git a/liboctave/CmplxDET.cc b/liboctave/CmplxDET.cc
--- a/liboctave/CmplxDET.cc
+++ b/liboctave/CmplxDET.cc
@@ -22,20 +22,20 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cassert>
 #include <cfloat>
-#include <cmath>
 
 #include "CmplxDET.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "oct-cmplx.h"
 
 bool
 ComplexDET::value_will_overflow (void) const
 {
   return base2
     ? (e2 + 1 > xlog2 (DBL_MAX) ? 1 : 0)
     : (e10 + 1 > log10 (DBL_MAX) ? 1 : 0);
diff --git a/liboctave/DASPK.cc b/liboctave/DASPK.cc
--- a/liboctave/DASPK.cc
+++ b/liboctave/DASPK.cc
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <sstream>
 
 #include "DASPK.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
+#include "lo-math.h"
 #include "quit.h"
 
 typedef octave_idx_type (*daspk_fcn_ptr) (const double&, const double*,
 			      const double*, const double&,
 			      double*, octave_idx_type&, double*, octave_idx_type*);
 
 typedef octave_idx_type (*daspk_jac_ptr) (const double&, const double*,
 			      const double*, double*,
diff --git a/liboctave/DASPK.h b/liboctave/DASPK.h
--- a/liboctave/DASPK.h
+++ b/liboctave/DASPK.h
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_DASPK_h)
 #define octave_DASPK_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "DASPK-opts.h"
+#include "lo-math.h"
 
 class
 OCTAVE_API
 DASPK : public DAE, public DASPK_options
 {
 public:
 
   DASPK (void) : DAE (), DASPK_options (), initialized (false) { }
diff --git a/liboctave/DASRT.cc b/liboctave/DASRT.cc
--- a/liboctave/DASRT.cc
+++ b/liboctave/DASRT.cc
@@ -20,23 +20,23 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <sstream>
 
 #include "DASRT.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
+#include "lo-math.h"
 #include "quit.h"
 
 typedef octave_idx_type (*dasrt_fcn_ptr) (const double&, const double*, const double*,
 			      double*, octave_idx_type&, double*, octave_idx_type*);
 
 typedef octave_idx_type (*dasrt_jac_ptr) (const double&, const double*, const double*,
 			      double*, const double&, double*, octave_idx_type*);
 
diff --git a/liboctave/DASRT.h b/liboctave/DASRT.h
--- a/liboctave/DASRT.h
+++ b/liboctave/DASRT.h
@@ -19,19 +19,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_DASRT_h)
 #define octave_DASRT_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "DASRT-opts.h"
+#include "lo-math.h"
 
 class
 DASRT_result
 {
 public:
 
   DASRT_result (void) { }
 
diff --git a/liboctave/DASSL.cc b/liboctave/DASSL.cc
--- a/liboctave/DASSL.cc
+++ b/liboctave/DASSL.cc
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <sstream>
 
 #include "DASSL.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
+#include "lo-math.h"
 #include "quit.h"
 
 typedef octave_idx_type (*dassl_fcn_ptr) (const double&, const double*, const double*,
 			      double*, octave_idx_type&, double*, octave_idx_type*);
 
 typedef octave_idx_type (*dassl_jac_ptr) (const double&, const double*, const double*,
 			      double*, const double&, double*, octave_idx_type*);
 
diff --git a/liboctave/DASSL.h b/liboctave/DASSL.h
--- a/liboctave/DASSL.h
+++ b/liboctave/DASSL.h
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_DASSL_h)
 #define octave_DASSL_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "DASSL-opts.h"
+#include "lo-math.h"
 
 class
 OCTAVE_API
 DASSL : public DAE, public DASSL_options
 {
 public:
 
   DASSL (void) : DAE (), DASSL_options (), initialized (false) { }
diff --git a/liboctave/LSODE.cc b/liboctave/LSODE.cc
--- a/liboctave/LSODE.cc
+++ b/liboctave/LSODE.cc
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <sstream>
 
 #include "LSODE.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
+#include "lo-math.h"
 #include "quit.h"
 
 typedef octave_idx_type (*lsode_fcn_ptr) (const octave_idx_type&, const double&, double*,
 			      double*, octave_idx_type&);
 
 typedef octave_idx_type (*lsode_jac_ptr) (const octave_idx_type&, const double&, double*,
 			      const octave_idx_type&, const octave_idx_type&, double*, const
 			      octave_idx_type&);
diff --git a/liboctave/LSODE.h b/liboctave/LSODE.h
--- a/liboctave/LSODE.h
+++ b/liboctave/LSODE.h
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_LSODE_h)
 #define octave_LSODE_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "LSODE-opts.h"
+#include "lo-math.h"
 
 class
 OCTAVE_API
 LSODE : public ODE, public LSODE_options
 {
 public:
 
   LSODE (void) : ODE (), LSODE_options (), initialized (false) { }
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -74,17 +74,17 @@ OPTS_INC := $(OPTS_INC_DATA:.in=.h)
 INCLUDES := Bounds.h CollocWt.h DAE.h DAEFunc.h DAERT.h \
 	DAERTFunc.h DASPK.h DASRT.h DASSL.h FEGrid.h \
 	LinConst.h LP.h LSODE.h NLConst.h NLEqn.h \
 	NLFunc.h NLP.h ODE.h ODEFunc.h ODES.h ODESFunc.h \
 	Objective.h QP.h Quad.h Range.h base-dae.h \
 	base-de.h base-min.h byte-swap.h cmd-edit.h cmd-hist.h \
 	data-conv.h dir-ops.h file-ops.h file-stat.h getopt.h \
 	glob-match.h idx-vector.h kpse-xfns.h \
-	lo-ieee.h lo-mappers.h lo-specfun.h \
+	lo-ieee.h lo-mappers.h lo-math.h lo-specfun.h \
 	lo-sysdep.h lo-utils.h mach-info.h md5.h oct-alloc.h oct-cmplx.h \
 	oct-env.h oct-fftw.h oct-getopt.h oct-group.h oct-inttypes.h \
 	oct-md5.h oct-passwd.h oct-rand.h oct-rl-edit.h oct-rl-hist.h \
 	oct-shlib.h oct-sort.h oct-spparms.h oct-syscalls.h \
 	oct-sparse.h oct-time.h oct-uname.h \
 	pathlen.h pathsearch.h prog-args.h \
 	randgamma.h randmtzig.h randpoisson.h \
 	so-array.h sparse-sort.h statdefs.h str-vec.h \
diff --git a/liboctave/NLEqn.h b/liboctave/NLEqn.h
--- a/liboctave/NLEqn.h
+++ b/liboctave/NLEqn.h
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_NLEqn_h)
 #define octave_NLEqn_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "NLEqn-opts.h"
+#include "lo-math.h"
 
 class
 OCTAVE_API
 NLEqn : public NLFunc, public NLEqn_options
 {
 public:
 
   NLEqn (void)
diff --git a/liboctave/Quad.h b/liboctave/Quad.h
--- a/liboctave/Quad.h
+++ b/liboctave/Quad.h
@@ -20,19 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_Quad_h)
 #define octave_Quad_h 1
 
 #include <cfloat>
-#include <cmath>
 
 #include "dColVector.h"
+#include "lo-math.h"
 
 #if !defined (octave_Quad_typedefs)
 #define octave_Quad_typedefs 1
 
 typedef double (*integrand_fcn) (double x);
 
 #endif
 
diff --git a/liboctave/Range.cc b/liboctave/Range.cc
--- a/liboctave/Range.cc
+++ b/liboctave/Range.cc
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <iostream>
 #include <limits>
 
 #include "Range.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "lo-utils.h"
 
 bool
 Range::all_elements_are_ints (void) const
 {
   // If the base and increment are ints, the final value in the range
   // will also be an integer, even if the limit is not. If there is one
   // or fewer elements only the base needs to be an integer
diff --git a/liboctave/dbleDET.cc b/liboctave/dbleDET.cc
--- a/liboctave/dbleDET.cc
+++ b/liboctave/dbleDET.cc
@@ -21,20 +21,20 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include "dbleDET.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 
 bool
 DET::value_will_overflow (void) const
 {
   return base2
     ? (e2 + 1 > xlog2 (DBL_MAX) ? 1 : 0)
     : (e10 + 1 > log10 (DBL_MAX) ? 1 : 0);
 }
diff --git a/liboctave/lo-cieee.c b/liboctave/lo-cieee.c
--- a/liboctave/lo-cieee.c
+++ b/liboctave/lo-cieee.c
@@ -20,17 +20,16 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <float.h>
-#include <math.h>
 
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #include <ieeefp.h>
 #endif
@@ -41,16 +40,17 @@ along with Octave; see the file COPYING.
 #endif
 #include <nan.h>
 #if defined (SCO)
 #undef _IEEE
 #endif
 #endif
 
 #include "lo-ieee.h"
+#include "lo-math.h"
 
 #if ! defined (HAVE_ISNAN) && defined (HAVE__ISNAN)
 #define isnan _isnan
 #define HAVE_ISNAN 1
 #endif
 
 #if ! defined (HAVE_FINITE) && defined (HAVE__FINITE)
 #define finite _finite
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -21,17 +21,16 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #include <ieeefp.h>
 #endif
@@ -43,16 +42,17 @@ along with Octave; see the file COPYING.
 #include <nan.h>
 #if defined (SCO)
 #undef _IEEE
 #endif
 #endif
 
 #include "lo-error.h"
 #include "lo-ieee.h"
+#include "lo-math.h"
 #include "mach-info.h"
 
 void
 octave_ieee_init (void)
 {
   // Default values.  DBL_MAX is not right for NaN and NA, but do you
   // have a better suggestion?  If you don't have IEEE floating point
   // values, there are many parts of Octave that will not work
diff --git a/liboctave/lo-mappers.cc b/liboctave/lo-mappers.cc
--- a/liboctave/lo-mappers.cc
+++ b/liboctave/lo-mappers.cc
@@ -21,25 +21,21 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
-
-#if defined (HAVE_SUNMATH_H)
-#include <sunmath.h>
-#endif
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "lo-specfun.h"
 #include "lo-utils.h"
 #include "oct-cmplx.h"
 
 #include "f77-fcn.h"
 
 // double -> double mappers.
 
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -20,33 +20,33 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <climits>
-#include <cmath>
 #include <ctime>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
 #if defined (OCTAVE_USE_WINDOWS_API)
 #include <windows.h>
 #undef min
 #undef max
 #endif
 
 #include "lo-error.h"
+#include "lo-math.h"
 #include "lo-utils.h"
 #include "oct-time.h"
 
 #ifndef HAVE_STRFTIME
 // Override any previous definition and use local version.
 extern "C" size_t
 strftime (char *s, size_t maxsize, const char *format, const struct tm *tp);
 #endif
diff --git a/liboctave/oct-time.h b/liboctave/oct-time.h
--- a/liboctave/oct-time.h
+++ b/liboctave/oct-time.h
@@ -18,20 +18,19 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_time_h)
 #define octave_time_h 1
 
-#include <cmath>
-
 #include <string>
 
+#include "lo-math.h"
 #include "systime.h"
 
 class octave_base_tm;
 
 class
 OCTAVE_API
 octave_time
 {
diff --git a/liboctave/randgamma.c b/liboctave/randgamma.c
--- a/liboctave/randgamma.c
+++ b/liboctave/randgamma.c
@@ -76,20 +76,20 @@ Dirichlet(a1,...,ak) for ai > 0
   r = r / sum(r)
   (from GSL, citing Law & Kelton(1991), Simulation Modeling and Analysis)
 */
 
 #if defined (HAVE_CONFIG_H)
 #include <config.h>
 #endif
 
-#include <math.h>
 #include <stdio.h>
 
 #include "lo-ieee.h"
+#include "lo-math.h"
 #include "randmtzig.h"
 #include "randgamma.h"
 
 #undef NAN
 #define NAN octave_NaN
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
 #define RNOR oct_randn()
diff --git a/liboctave/randmtzig.c b/liboctave/randmtzig.c
--- a/liboctave/randmtzig.c
+++ b/liboctave/randmtzig.c
@@ -142,24 +142,24 @@ along with Octave; see the file COPYING.
    void oct_fill_rande(octave_idx_type, double [])
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #include <config.h>
 #endif
 
-#include <math.h>
 #include <stdio.h>
 #include <time.h>
 
 #ifdef HAVE_GETTIMEOFDAY
 #include <sys/time.h>
 #endif
 
+#include "lo-math.h"
 #include "randmtzig.h"
    
 /* FIXME may want to suppress X86 if sizeof(long)>4 */
 #if !defined(USE_X86_32)
 # if defined(i386) || defined(HAVE_X86_32)
 #  define USE_X86_32 1
 # else
 #  define USE_X86_32 0
diff --git a/liboctave/randpoisson.c b/liboctave/randpoisson.c
--- a/liboctave/randpoisson.c
+++ b/liboctave/randpoisson.c
@@ -30,22 +30,22 @@ along with Octave; see the file COPYING.
  * LGAMMA: log gamma function
  * INFINITE: function to test whether a value is infinite
  */
 
 #if defined (HAVE_CONFIG_H)
 #include <config.h>
 #endif
 
-#include <math.h>
 #include <stdio.h>
 
 #include "f77-fcn.h"
+#include "lo-error.h"
 #include "lo-ieee.h"
-#include "lo-error.h"
+#include "lo-math.h"
 #include "randmtzig.h"
 #include "randpoisson.h"
 
 #undef NAN
 #define NAN octave_NaN
 #undef INFINITE
 #define INFINITE lo_ieee_isinf
 #define RUNI oct_randu()
@@ -68,18 +68,16 @@ xlgamma (double x)
   else
     F77_XFCN (dlgams, DLGAMS, (&x, &result, &sgngam));
 
   return result;
 }
 
 /* ---- pprsc.c from Stadloeber's winrand --- */
 
-#include <math.h>
-
 /* flogfak(k) = ln(k!) */
 static double 
 flogfak (double k)
 {
 #define       C0      9.18938533204672742e-01
 #define       C1      8.33333333333333333e-02
 #define       C3     -2.77777777777777778e-03
 #define       C5      7.93650793650793651e-04
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
+	* src/data.cc, src/matherr.c, src/pr-output.cc, src/sysdep.cc,
+	src/DLD-FUNCTIONS/__dsearchn__.cc, src/DLD-FUNCTIONS/minmax.cc,
+	src/DLD-FUNCTIONS/qz.cc, src/DLD-FUNCTIONS/sort.cc,
+	src/DLD-FUNCTIONS/tsearch.cc: Include lo-math.h instead of cmath
+	or math.h.
+
 	* DLD-FUNCTIONS/sort.cc (ascending_compare, descending_compare,
 	operator < (const Complex&, const Complex&)):
 	Pass args by const reference, not value.
 
 2007-11-30  Moritz Borgmann  <octave@moriborg.de>
 
 	* ls-mat5.h (mat5_data_type): Delete trailing comma in enum decl.
 	* oct-stream.cc (octave_base_stream::do_printf): Use
diff --git a/src/DLD-FUNCTIONS/__dsearchn__.cc b/src/DLD-FUNCTIONS/__dsearchn__.cc
--- a/src/DLD-FUNCTIONS/__dsearchn__.cc
+++ b/src/DLD-FUNCTIONS/__dsearchn__.cc
@@ -17,23 +17,24 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #include <iostream>
 #include <fstream>
-#include <cmath>
 #include <string>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include "lo-math.h"
+//FIXME -- Octave sources should use individual include files, not oct.h.
 #include "oct.h"
 
 DEFUN_DLD (__dsearchn__, args, ,
 	"-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{idx}, @var{d}] =} dsearch (@var{x}, @var{xi})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
diff --git a/src/DLD-FUNCTIONS/minmax.cc b/src/DLD-FUNCTIONS/minmax.cc
--- a/src/DLD-FUNCTIONS/minmax.cc
+++ b/src/DLD-FUNCTIONS/minmax.cc
@@ -20,20 +20,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include <cmath>
-
 #include "lo-ieee.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "dNDArray.h"
 #include "CNDArray.h"
 #include "quit.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -27,24 +27,24 @@ along with Octave; see the file COPYING.
 
 #undef DEBUG
 #undef DEBUG_SORT
 #undef DEBUG_EIG
 
 #include "config.h"
 
 #include <cfloat>
-#include <cmath>
 
 #include <iostream>
 #include <iomanip>
 
 #include "CmplxQRP.h"
 #include "dbleQR.h"
 #include "f77-fcn.h"
+#include "lo-math.h"
 #include "quit.h"
 
 #include "defun-dld.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "oct-map.h"
 #include "ov.h"
diff --git a/src/DLD-FUNCTIONS/tsearch.cc b/src/DLD-FUNCTIONS/tsearch.cc
--- a/src/DLD-FUNCTIONS/tsearch.cc
+++ b/src/DLD-FUNCTIONS/tsearch.cc
@@ -19,22 +19,22 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Andreas Stahel <Andreas.Stahel@hta-bi.bfh.ch>
 
 #include <iostream>
 #include <fstream>
-#include <cmath>
 #include <string>
 
 #include "oct.h"
 #include "parse.h"
 #include "lo-ieee.h"
+#include "lo-math.h"
 
 inline double max(double a, double b, double c)
 {
   if (a < b) 
     return ( b < c ? c : b );
   else 
     return ( a < c ? c : a );
 }
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -31,21 +31,21 @@ along with Octave; see the file COPYING.
 #include <sys/types.h>
 #endif
 
 #ifdef HAVE_SYS_RESOURCE_H
 #include <sys/resource.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 
 #include <string>
 
 #include "lo-ieee.h"
+#include "lo-math.h"
 #include "str-vec.h"
 #include "quit.h"
 
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
diff --git a/src/matherr.c b/src/matherr.c
--- a/src/matherr.c
+++ b/src/matherr.c
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #if defined (EXCEPTION_IN_MATH)
 
-#include <math.h>
+#include "lo-math.h"
 
 int
 matherr (struct exception *x)
 {
   /* Possibly print our own message someday.  Should probably be
      user-switchable. */
 
   switch (x->type)
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -21,31 +21,31 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 #include <cstdio>
 #include <cstring>
 
 #include <iomanip>
 #include <iostream>
 #include <sstream>
 #include <string>
 
 #include "Array-util.h"
 #include "CMatrix.h"
 #include "Range.h"
 #include "cmd-edit.h"
 #include "dMatrix.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "mach-info.h"
 #include "oct-cmplx.h"
 #include "quit.h"
 #include "str-vec.h"
 
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -21,17 +21,16 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cfloat>
-#include <cmath>
 #include <cstddef>
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
 
 #include <iostream>
 #include <string>
 
@@ -68,16 +67,17 @@ along with Octave; see the file COPYING.
 
 #if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 #include <sys/utsname.h>
 #endif
 
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
+#include "lo-math.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "quit.h"
 
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
 #include "input.h"
