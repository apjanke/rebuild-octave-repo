# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1242402370 14400
#      Fri May 15 11:46:10 2009 -0400
# Node ID 1f47a9404d9304bd98e71c7eb9674c4f2da93cf0
# Parent  a542fc1581759f1893ce83b60fabd35756da49e2
nargchk.m: don't generate error if output is struct

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2009-05-15  John W. Eaton  <jwe@octave.org>
+
+	* general/nargchk.m: Don't generate error if output is struct.
+	Uncomment some additional tests.
+	From Alois Schloegl <alois.schloegl@tugraz.at>
+
 2009-05-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/fminunc.m: Import the step adaptation strategy
 	improvements from fsolve.
 
 2009-05-08  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__gnuplot_has_feature__.m: Add feature "key_has_font_properties".
diff --git a/scripts/general/nargchk.m b/scripts/general/nargchk.m
--- a/scripts/general/nargchk.m
+++ b/scripts/general/nargchk.m
@@ -33,52 +33,47 @@
 function msg = nargchk (mina, maxa, narg, outtype)
 
   if (nargin < 3 || nargin > 4)
     print_usage ();
   elseif (mina > maxa)
     error ("nargchk: minargs must be <= maxargs");
   elseif (nargin == 3)
     outtype = "string";
-  elseif (! any (strcmpi (outtype, {"string" "struct"})))
+  elseif (! any (strcmpi (outtype, {"string", "struct"})))
     error ("nargchk: output type must be either string or struct");
   elseif (! (isscalar (mina) && isscalar (maxa) && isscalar (narg)))
     error ("nargchk: mina, maxa, and narg must be scalars");
   endif
 
   msg = struct ("message", "", "identifier", "");
   if (narg < mina)
     msg.message = "not enough input arguments";
     msg.identifier = "Octave:nargchk:not-enough-inputs";
   elseif (narg > maxa)
     msg.message = "too many input arguments";
     msg.identifier = "Octave:nargchk:too-many-inputs";
   endif
 
   if (strcmpi (outtype, "string"))
     msg = msg.message;
-  else
-    if (isempty (msg.message))
-      msg = struct ([]);
-    endif
-    ## FIXME: remove the error below if error is modified to accept
-    ## struct inputs
-    error ("nargchk: error does not yet support struct inputs");
+  elseif (isempty (msg.message))
+    msg = struct ([]);
   endif
 
 endfunction
 
 ## Tests
 %!shared stmin, stmax
 %!  stmin = struct ("message", "not enough input arguments",
 %!                  "identifier", "Octave:nargchk:not-enough-inputs");
 %!  stmax = struct ("message", "too many input arguments",
 %!                  "identifier", "Octave:nargchk:too-many-inputs");
 %!assert (nargchk (0, 1, 0), "")
 %!assert (nargchk (0, 1, 1), "")
 %!assert (nargchk (1, 1, 0), "not enough input arguments")
 %!assert (nargchk (0, 1, 2), "too many input arguments")
 %!assert (nargchk (0, 1, 2, "string"), "too many input arguments")
 ## Struct outputs
-#%!assert (nargchk (0, 1, 0, "struct"), struct([]))
-#%!assert (nargchk (0, 1, 1, "struct"), struct([]))
-#%!assert (nargchk (1, 1, 0, "struct"), stmin)
-#%!assert (nargchk (0, 1, 2, "struct"), stmax)
+%!assert (nargchk (0, 1, 0, "struct"), struct([]))
+%!assert (nargchk (0, 1, 1, "struct"), struct([]))
+%!assert (nargchk (1, 1, 0, "struct"), stmin)
+%!assert (nargchk (0, 1, 2, "struct"), stmax)
