# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1272433282 14400
#      Wed Apr 28 01:41:22 2010 -0400
# Node ID ec3cec8277dfd5dc71167eb0affd87a114d247d1
# Parent  9f55d3ce490af3168a3f57e4784002dd28ecf2c4
fixes for --enable-64

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,15 @@
+2010-04-28  John W. Eaton  <jwe@octave.org>
+
+	* dim-vector.h (dim_vector (const octave_idx_type *, size_t)): Delete.
+	* Sparse.cc (Sparse<T>::assign): Cast 0 to octave_idx_type in
+	call to Sparse<T> constructor.
+	Addresses bug #29692.
+
 2010-04-27  John W. Eaton  <jwe@octave.org>
 
 	* intNDArray.cc (intNDArray<T>::abs, intNDArray<T>::signum):
 	Create new vector for return values.  Fixes bug #29685.
 
 2010-04-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.cc (Sparse<T>::assign): Fix typos.
diff --git a/liboctave/Sparse.cc b/liboctave/Sparse.cc
--- a/liboctave/Sparse.cc
+++ b/liboctave/Sparse.cc
@@ -1808,17 +1808,19 @@ Sparse<T>::assign (const idx_vector& idx
               Array<octave_idx_type> new_ri (new_nz, 1);
               Array<T> new_data (new_nz, 1);
               copy_or_memcpy (nz, tmp.ridx (), new_ri.fortran_vec ());
               copy_or_memcpy (nz, tmp.data (), new_data.fortran_vec ());
               // ... insert new data (densified) ...
               idx.copy_data (new_ri.fortran_vec () + nz);
               new_data.assign (idx_vector (nz, new_nz), rhs.array_value ());
               // ... reassembly.
-              *this = Sparse<T> (new_data, new_ri, 0, nr, nc, false);
+              *this = Sparse<T> (new_data, new_ri,
+                                 static_cast<octave_idx_type> (0),
+                                 nr, nc, false);
             }
         }
       else
         {
           dim_vector save_dims = dimensions;
           *this = index (idx_vector::colon);
           assign (idx, rhs.index (idx_vector::colon));
           *this = reshape (save_dims);
diff --git a/liboctave/dim-vector.h b/liboctave/dim-vector.h
--- a/liboctave/dim-vector.h
+++ b/liboctave/dim-vector.h
@@ -169,23 +169,16 @@ public:
   DIM_VECTOR_CTOR (4)
   DIM_VECTOR_CTOR (5)
   DIM_VECTOR_CTOR (6)
   DIM_VECTOR_CTOR (7)
 
 #undef ASSIGN_REP
 #undef DIM_VECTOR_CTOR
 
-  dim_vector (const octave_idx_type *vec, size_t vec_size)
-    : rep (newrep (vec_size))
-  {
-    for (size_t k = 0; k < vec_size; k++)
-      rep[k] = vec[k];
-  }
-
   octave_idx_type& elem (int i)
   {
 #ifdef BOUNDS_CHECKING
     assert (i >= 0 && i < ndims ());
 #endif
     make_unique ();
     return rep[i];
   }
