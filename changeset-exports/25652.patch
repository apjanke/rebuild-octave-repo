# HG changeset patch
# User Rik <rik@octave.org>
# Date 1532117359 25200
#      Fri Jul 20 13:09:19 2018 -0700
# Node ID b400ad33d92d5c060afd5925f51b51226bd44ec1
# Parent  336267b16a3d9a879a8644dbb61202bd6b5227b2
# Parent  c759aa39c23afb062b44ac42a04753425277d34c
maint: merge stable to default.

diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -261,17 +261,23 @@ do_rand (const octave_value_list& args, 
             else if (ts == "state" || ts == "twister")
               {
                 if (args(idx+1).is_string ()
                     && args(idx+1).string_value () == "reset")
                   octave::rand::reset (fcn);
                 else
                   {
                     ColumnVector s =
-                      ColumnVector (args(idx+1).vector_value(false, true));
+                      ColumnVector (args(idx+1).vector_value (false, true));
+                   
+                    // Backwards compatibility with previous versions of
+                    // Octave which mapped Inf to 0.
+                    for (octave_idx_type i = 0; i < s.numel (); i++)
+                      if (octave::math::isinf (s.xelem (i)))
+                        s.xelem (i) = 0.0;
 
                     octave::rand::state (s, fcn);
                   }
               }
             else
               error ("%s: unrecognized string argument", fcn);
           }
         else
@@ -523,17 +529,17 @@ classes.
 %!function v = __rand_sample__ (initval)
 %!  rand ("state", initval);
 %!  v = rand (1, 6);
 %!endfunction
 %!
 %!assert (__rand_sample__ (-1), __rand_sample__ (0))
 %!assert (__rand_sample__ (-Inf), __rand_sample__ (0))
 %!assert (__rand_sample__ (2^33), __rand_sample__ (intmax ("uint32")))
-%!assert (__rand_sample__ (Inf), __rand_sample__ (intmax ("uint32")))
+%!assert (__rand_sample__ (Inf), __rand_sample__ (0))
 %!assert (__rand_sample__ (NaN), __rand_sample__ (0))
 */
 
 static std::string current_distribution = octave::rand::distribution ();
 
 DEFUN (randn, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} randn (@var{n})
diff --git a/libinterp/op-kw-docs b/libinterp/op-kw-docs
--- a/libinterp/op-kw-docs
+++ b/libinterp/op-kw-docs
@@ -173,28 +173,28 @@ Multiplication operator.
 @end deftypefn
 **
 @c libinterp/parse-tree/oct-parse.yy
 -*- texinfo -*-
 @deftypefn {} {} **
 Power operator.
 
 This may return complex results for real inputs.  Use @code{realsqrt},
-@code{cbrt}, @code{nthroot}, or @code{realroot} to obtain real results when
+@code{cbrt}, @code{nthroot}, or @code{realpow} to obtain real results when
 possible.
 @seealso{power, ^, .**, .^, realpow, realsqrt, cbrt, nthroot}
 @end deftypefn
 ^
 @c libinterp/parse-tree/oct-parse.yy
 -*- texinfo -*-
 @deftypefn {} {} ^
 Power operator.
 
 This may return complex results for real inputs.  Use @code{realsqrt},
-@code{cbrt}, @code{nthroot}, or @code{realroot} to obtain real results when
+@code{cbrt}, @code{nthroot}, or @code{realpow} to obtain real results when
 possible.
 @seealso{power, **, .^, .**, realpow, realsqrt, cbrt, nthroot}
 @end deftypefn
 +
 @c libinterp/parse-tree/oct-parse.yy
 -*- texinfo -*-
 @deftypefn {} {} +
 Addition operator.
