# HG changeset patch
# User Rik <rik@octave.org>
# Date 1503897136 25200
#      Sun Aug 27 22:12:16 2017 -0700
# Node ID df49ac93f50c9b5198ef567b5b99102cbc9c0ecf
# Parent  046f9ba5d9e95cec5e315262e0d7fa6838a273b7
run.m: Recode BIST test to pass on Windows (bug #51877).

* run.m: Use single quotes to prevent interpretation of backslashes in Windows
directory names.  Split path based on pathsep() rather than hardcoded ':' which
is UNIX specific.

diff --git a/scripts/miscellaneous/run.m b/scripts/miscellaneous/run.m
--- a/scripts/miscellaneous/run.m
+++ b/scripts/miscellaneous/run.m
@@ -108,25 +108,25 @@ endfunction
 
 ## Test function file execution
 %!test
 %! tmp_dir = tempname ();
 %! mkdir (tmp_dir);
 %! test_function = fullfile (tmp_dir, "tf.m");
 %! fid = fopen (test_function, "w");
 %! fprintf (fid, "function tf ()\n");
-%! fprintf (fid, "  addpath (\"%s\");\n", tmp_dir);
+%! fprintf (fid, "  addpath ('%s');\n", tmp_dir);
 %! fprintf (fid, "endfunction\n");
 %! fclose (fid);
 %! ## Check if temporary directory is on the loadpath.
 %! ## Function 'dir_in_loadpath' is broken for this use case, so code a test.
-%! dirs = strsplit (path (), ":");
+%! dirs = strsplit (path (), pathsep ());
 %! tstval1 = any (strcmp (tmp_dir, dirs));
 %! run (test_function);
-%! dirs = strsplit (path (), ":");
+%! dirs = strsplit (path (), pathsep ());
 %! tstval2 = any (strcmp (tmp_dir, dirs));
 %! unlink (test_function);
 %! rmdir (tmp_dir);
 %! rmpath (tmp_dir);
 %! assert (tstval1, false);
 %! assert (tstval2, true);
 
 ## Test input validation
