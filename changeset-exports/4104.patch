# HG changeset patch
# User jwe
# Date 1034713701 0
#      Tue Oct 15 20:28:21 2002 +0000
# Node ID fef7351801344c27c5dc79e8c22c5a96b6ec95a4
# Parent  677c5f3a15be9d2e7ddb1e27be333f4892f57e1b
[project @ 2002-10-15 20:28:20 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,13 +1,16 @@
+2002-10-15  Paul Kienzle <pkienzle@users.sf.net>
+
+	* configure.in (library_path_var): New variable.
+
 2002-10-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in (SH_LDFLAGS): Additional options for Cygwin:
-	-Wl,--export-all-symbols -Wl,--enable-auto-import
-	-Wl,--allow-multiple-definition.
+	-Wl,--export-all-symbols -Wl,--enable-auto-import.
 
 	* Makeconf.in (TERMLIBS): Substitute here.
 
 	* configure.in: Define OCTAVE_USE_WINDOWS_API if 
 	defined (__WIN32__) && ! defined (__CYGWIN__), not if
 	defined (__WIN32__) || ! defined (__CYGWIN__).
 	Also call AC_SUBST for TERMLIBS.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -17,17 +17,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
 AC_INIT
-AC_REVISION($Revision: 1.377 $)
+AC_REVISION($Revision: 1.378 $)
 AC_PREREQ(2.52)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -636,16 +636,17 @@ SHLBIN=
 SHLLIB=$SHLEXT
 SH_LD="$CXX"
 SH_LDFLAGS=-shared
 SONAME_FLAGS=
 RLD_FLAG=
 INCLUDE_LINK_DEPS=false
 TEMPLATE_AR="$AR"
 TEMPLATE_ARFLAGS="$ARFLAGS"
+library_path_var=LD_LIBRARY_PATH
 case "$canonical_host_type" in
   *-*-386bsd* | *-*-openbsd* | *-*-netbsd* | *-*-freebsd*)
     SH_LD=ld
     SH_LDFLAGS=-Bshareable
   ;;
   alpha*-dec-osf*)
     CPICFLAG=
     CXXPICFLAG=
@@ -659,20 +660,21 @@ case "$canonical_host_type" in
   ;;
   *-*-cygwin*)
     CXXPICFLAG=
     CPICFLAG=
     FPICFLAG=
     SHLEXT=dll
     SHLLIB=dll.a
     SHLBIN=dll
-    SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import -Wl,--allow-multiple-definition"
+    SH_LDFLAGS="-shared -Wl,--export-all-symbols -Wl,--enable-auto-import"
     SHLLINKEXT=.dll
     SONAME_FLAGS='-Wl,--out-implib=$@.a'
     INCLUDE_LINK_DEPS=true
+    library_path_var=PATH
   ;;
   *-*-linux* | *-*-gnu*)
     SONAME_FLAGS='-Xlinker -soname -Xlinker $@'
     RLD_FLAG='-Xlinker -rpath -Xlinker $(octlibdir)'
   ;;
   i[[3456]]86-*-sco3.2v5*)
     SONAME_FLAGS='-Xlinker -h -Xlinker $@'
     RLD_FLAG=
@@ -752,30 +754,32 @@ AC_MSG_RESULT([defining SHLEXT to be $SH
 AC_MSG_RESULT([defining DLFCN_DIR to be $DLFCN_DIR])
 AC_MSG_RESULT([defining SH_LD to be $SH_LD])
 AC_MSG_RESULT([defining SH_LDFLAGS to be $SH_LDFLAGS])
 AC_MSG_RESULT([defining SONAME_FLAGS to be $SONAME_FLAGS])
 AC_MSG_RESULT([defining RLD_FLAG to be $RLD_FLAG])
 AC_MSG_RESULT([defining TEMPLATE_AR to be $TEMPLATE_AR])
 AC_MSG_RESULT([defining TEMPLATE_ARFLAGS to be $TEMPLATE_ARFLAGS])
 AC_MSG_RESULT([defining INCLUDE_LINK_DEPS to be $INCLUDE_LINK_DEPS])
+AC_MSG_RESULT([defining library_path_var to be $library_path_var])
 AC_SUBST(FPICFLAG)
 AC_SUBST(CPICFLAG)
 AC_SUBST(CXXPICFLAG)
 AC_SUBST(SHLEXT)
 AC_SUBST(SHLLIB)
 AC_SUBST(SHLBIN)
 AC_SUBST(DLFCN_DIR)
 AC_SUBST(SH_LD)
 AC_SUBST(SH_LDFLAGS)
 AC_SUBST(SONAME_FLAGS)
 AC_SUBST(RLD_FLAG)
 AC_SUBST(TEMPLATE_AR)
 AC_SUBST(TEMPLATE_ARFLAGS)
 AC_SUBST(INCLUDE_LINK_DEPS)
+AC_SUBST(library_path_var)
 
 if $SHARED_LIBS; then
   LIBOCTINTERP=-loctinterp$SHLLINKEXT
   LIBOCTAVE=-loctave$SHLLINKEXT
   LIBCRUFT=-lcruft$SHLLINKEXT
 else
   LIBOCTINTERP='$(TOPDIR)/src/liboctinterp.$(LIBEXT)'
   LIBOCTAVE='$(TOPDIR)/liboctave/liboctave.$(LIBEXT)'
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,17 +1,16 @@
 2002-10-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-cieee.c: Move everything but lo_ieee_init here.
 	(lo_ieee_Inf_value, lo_ieee_NA_value, lo_ieee_NaN_value):
 	New functions.
 
 	* Makefile.in (install): No need to use cd to create links.
 	(LINK_DEPS): Include $(LIBOCTAVE_LFLAGS) before list of libraries.
-	Include $(TERMLIBS) in list.
 
 2002-10-14  Paul Kienzle <pkienzle@users.sf.net>
 
 	* Makefile.in: Merge liboctave with liboct-readline and
 	liboct-pathsearch.
 	Use link dependencies for shared libs if INCLUDE_LINK_DEPS.
 	(libraries): Depend on versioned library.
 	(liboctave.$(SHLEXT), liboctave.$(SHLEXT_VER)): Reverse actions --
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -18,17 +18,17 @@ INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 LIBOCTAVE_LFLAGS = -L../libcruft -L../kpathsea -L../glob -L. $(RLD_FLAG)
 
 ifeq ($(INCLUDE_LINK_DEPS), true)
   LINK_DEPS = \
     $(LIBOCTAVE_LFLAGS) \
-    $(LIBCRUFT) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBREADLINE) $(TERMLIBS) -lglob
+    $(LIBCRUFT) $(BLAS_LIBS) $(FFTW_LIBS) $(LIBREADLINE) -lglob
 endif
 
 MATRIX_INC := Array.h Array2.h Array3.h ArrayN.h DiagArray2.h Array-flags.h \
 	Array-idx.h Array2-idx.h Array3-idx.h ArrayN-idx.h MArray-defs.h \
 	MArray.h MArray2.h MDiagArray2.h Matrix.h \
 	base-lu.h mx-base.h mx-op-defs.h mx-defs.h mx-ext.h \
 	CColVector.h CDiagMatrix.h CMatrix.h CRowVector.h CmplxAEPBAL.h \
 	CmplxCHOL.h CmplxDET.h CmplxHESS.h CmplxLU.h CmplxQR.h \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2002-10-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-mapper.cc (octave_mapper::apply): Handle real and complex
+	types first.  If the arg is something else, try ch_map_fcn if it
+	is defined.
+
+2002-10-15  Paul Kienzle <pkienzle@users.sf.net>
+
+	* Makefile.in: If building shared but not static libs, only set
+	XERBLA to the location of the pic object file if FPICFLAG is
+	defined.
+
 2002-10-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	*  DLD-FUNCTIONS/minmax.cc, DLD-FUNCTIONS/getrusage.cc, data.cc,
 	file-io.cc, ov-base.cc, ov-bool-mat.cc, ov-ch-mat.cc,
 	ov-complex.cc, ov-cx-mat.cc, ov-range.cc, ov-re-mat.cc,
 	ov-re-nd-array.cc: Change all uses of octave_Inf, octave_NA, and
 	octave_NaN to be calls to lo_ieee_Inf_value, lo_ieee_NA_value, and
 	lo_ieee_NaN_value instead of using the constants directly to avoid
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -229,17 +229,19 @@ objects: $(OBJECTS)
 
 XERBLA = ../libcruft/blas-xtra/xerbla.o
 
 ifeq ($(SHARED_LIBS), true)
   ifeq ($(STATIC_LIBS), true)
     LIBRARIES = liboctinterp.$(LIBEXT) liboctinterp.$(SHLEXT_VER)
   else
     LIBRARIES = liboctinterp.$(SHLEXT_VER)
-    XERBLA = ../libcruft/blas-xtra/pic/xerbla.o
+    ifdef FPICFLAG
+      XERBLA = ../libcruft/blas-xtra/pic/xerbla.o
+    endif
   endif
 else
   ifeq ($(STATIC_LIBS), true)
     LIBRARIES = liboctinterp.$(LIBEXT)
   else
     ## This is not going to work, but hey, you asked for it...
     LIBRARIES =
     XERBLA =
diff --git a/src/ov-mapper.cc b/src/ov-mapper.cc
--- a/src/ov-mapper.cc
+++ b/src/ov-mapper.cc
@@ -100,17 +100,99 @@ any_element_greater_than (const Matrix& 
 #define MAPPER_LOOP(T, F, M) \
   MAPPER_LOOP_1 (T, F, M, )
 
 octave_value
 octave_mapper::apply (const octave_value& arg) const
 {
   octave_value retval;
 
-  if (ch_map_fcn)
+  if (arg.is_real_type ())
+    {
+      if (arg.is_scalar_type ())
+	{
+	  double d = arg.double_value ();
+
+	  if (can_ret_cmplx_for_real && (d < lower_limit || d > upper_limit))
+	    {
+	      if (c_c_map_fcn)
+		retval = c_c_map_fcn (Complex (d));
+	      else
+		error ("%s: unable to handle real arguments",
+		       name().c_str ());
+	    }
+	  else if (d_d_map_fcn)
+	    retval = d_d_map_fcn (d);
+	  else if (d_b_map_fcn)
+	    retval = d_b_map_fcn (d);
+	  else
+	    error ("%s: unable to handle real arguments",
+		   name().c_str ());
+	}
+      else
+	{
+	  Matrix m = arg.matrix_value ();
+
+	  if (error_state)
+	    return retval;
+
+	  if (can_ret_cmplx_for_real
+	      && (any_element_less_than (m, lower_limit)
+		  || any_element_greater_than (m, upper_limit)))
+	    {
+	      if (c_c_map_fcn)
+		MAPPER_LOOP (ComplexMatrix, c_c_map_fcn, m);
+	      else
+		error ("%s: unable to handle real arguments",
+		       name().c_str ());
+	    }
+	  else if (d_d_map_fcn)
+	    MAPPER_LOOP (Matrix, d_d_map_fcn, m);
+	  else if (d_b_map_fcn)
+	    MAPPER_LOOP (boolMatrix, d_b_map_fcn, m);
+	  else
+	    error ("%s: unable to handle real arguments",
+		   name().c_str ());
+	}
+    }
+  else if (arg.is_complex_type ())
+    {
+      if (arg.is_scalar_type ())
+	{
+	  Complex c = arg.complex_value ();
+
+	  if (d_c_map_fcn)
+	    retval = d_c_map_fcn (c);
+	  else if (c_c_map_fcn)
+	    retval = c_c_map_fcn (c);
+	  else if (c_b_map_fcn)
+	    retval = c_b_map_fcn (c);
+	  else
+	    error ("%s: unable to handle complex arguments",
+		   name().c_str ());
+	}
+      else
+	{
+	  ComplexMatrix cm = arg.complex_matrix_value ();
+
+	  if (error_state)
+	    return retval;
+
+	  if (d_c_map_fcn)
+	    MAPPER_LOOP (Matrix, d_c_map_fcn, cm);
+	  else if (c_c_map_fcn)
+	    MAPPER_LOOP (ComplexMatrix, c_c_map_fcn, cm);
+	  else if (c_b_map_fcn)
+	    MAPPER_LOOP (boolMatrix, c_b_map_fcn, cm);
+	  else
+	    error ("%s: unable to handle complex arguments",
+		   name().c_str ());
+	}
+    }
+  else if (ch_map_fcn)
     {
       // XXX FIXME XXX -- this could be done in a better way...
 
       octave_value tmp = arg.convert_to_str ();
 
       if (! error_state)
 	{
 	  charMatrix chm = tmp.char_matrix_value ();
@@ -135,102 +217,17 @@ octave_mapper::apply (const octave_value
 		default:
 		  panic_impossible ();
 		  break;
 		}
 	    }
 	}
     }
   else
-    {
-      if (arg.is_real_type ())
-	{
-	  if (arg.is_scalar_type ())
-	    {
-	      double d = arg.double_value ();
-
-	      if (can_ret_cmplx_for_real && (d < lower_limit || d > upper_limit))
-		{
-		  if (c_c_map_fcn)
-		    retval = c_c_map_fcn (Complex (d));
-		  else
-		    error ("%s: unable to handle real arguments",
-			   name().c_str ());
-		}
-	      else if (d_d_map_fcn)
-		retval = d_d_map_fcn (d);
-	      else if (d_b_map_fcn)
-		retval = d_b_map_fcn (d);
-	      else
-		error ("%s: unable to handle real arguments",
-		       name().c_str ());
-	    }
-	  else
-	    {
-	      Matrix m = arg.matrix_value ();
-
-	      if (error_state)
-		return retval;
-
-	      if (can_ret_cmplx_for_real
-		  && (any_element_less_than (m, lower_limit)
-		      || any_element_greater_than (m, upper_limit)))
-		{
-		  if (c_c_map_fcn)
-		    MAPPER_LOOP (ComplexMatrix, c_c_map_fcn, m);
-		  else
-		    error ("%s: unable to handle real arguments",
-			   name().c_str ());
-		}
-	      else if (d_d_map_fcn)
-		MAPPER_LOOP (Matrix, d_d_map_fcn, m);
-	      else if (d_b_map_fcn)
-		MAPPER_LOOP (boolMatrix, d_b_map_fcn, m);
-	      else
-		error ("%s: unable to handle real arguments",
-		       name().c_str ());
-	    }
-	}
-      else if (arg.is_complex_type ())
-	{
-	  if (arg.is_scalar_type ())
-	    {
-	      Complex c = arg.complex_value ();
-
-	      if (d_c_map_fcn)
-		retval = d_c_map_fcn (c);
-	      else if (c_c_map_fcn)
-		retval = c_c_map_fcn (c);
-	      else if (c_b_map_fcn)
-		retval = c_b_map_fcn (c);
-	      else
-		error ("%s: unable to handle complex arguments",
-		       name().c_str ());
-	    }
-	  else
-	    {
-	      ComplexMatrix cm = arg.complex_matrix_value ();
-
-	      if (error_state)
-		return retval;
-
-	      if (d_c_map_fcn)
-		MAPPER_LOOP (Matrix, d_c_map_fcn, cm);
-	      else if (c_c_map_fcn)
-		MAPPER_LOOP (ComplexMatrix, c_c_map_fcn, cm);
-	      else if (c_b_map_fcn)
-		MAPPER_LOOP (boolMatrix, c_b_map_fcn, cm);
-	      else
-		error ("%s: unable to handle complex arguments",
-		       name().c_str ());
-	    }
-	}
-      else
-	gripe_wrong_type_arg ("mapper", arg);
-    }
+    gripe_wrong_type_arg ("mapper", arg);
 
   return retval;
 }
 
 octave_value_list
 octave_mapper::subsref (const std::string type,
 			const SLList<octave_value_list>& idx,
 			int nargout)
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2002-10-15  Paul Kienzle <pkienzle@users.sf.net>
+
+	* Makefile.in: Use @library_path_var@ instead of LD_LIBRARY_PATH.
+
 2002-09-27  Paul Kienzle <pkienzle@users.sf.net>
 
 	* qr-7.m: Remove randomness from complex matrix generator.
 	Increase tolerance on rosser matrix test.
 
 2002-09-26  Paul Kienzle <pkienzle@users.sf.net>
 
 	* octave.test/linalg/qr-7.m: Replace large random matrix tests 
diff --git a/test/Makefile.in b/test/Makefile.in
--- a/test/Makefile.in
+++ b/test/Makefile.in
@@ -21,22 +21,22 @@ DISTFILES = Makefile.in $(SOURCES) Chang
 SUBDIRS =
 
 OCTAVE_BINARY = ../src/octave
 
 OCTAVE_SCRIPT_PATH = .:$(TOPDIR)/src//:$(srcdir)/../scripts//
 
 ifeq ($(SHARED_LIBS), true)
   OCTAVE_LD_LIBRARY_PATH = `pwd`/../src:`pwd`/../liboctave:`pwd`/../libcruft
-  ifeq ($(LD_LIBRARY_PATH),)
+  ifeq ($(@library_path_var@),)
     XLD_LIBRARY_PATH = $(OCTAVE_LD_LIBRARY_PATH)
   else
-    XLD_LIBRARY_PATH = $(OCTAVE_LD_LIBRARY_PATH):$(LD_LIBRARY_PATH)
+    XLD_LIBRARY_PATH = $(OCTAVE_LD_LIBRARY_PATH):$(@library_path_var@)
   endif
-  SET_LD_LIBRARY_PATH = LD_LIBRARY_PATH="$(XLD_LIBRARY_PATH)"
+  SET_LD_LIBRARY_PATH = @library_path_var@="$(XLD_LIBRARY_PATH)"
 endif
 
 # Complete directory trees to distribute.
 DISTDIRS = config octave.test
 
 all: check
 .PHONY: all
 
