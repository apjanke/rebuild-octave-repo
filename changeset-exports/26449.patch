# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546700929 28800
#      Sat Jan 05 07:08:49 2019 -0800
# Branch stable
# Node ID f8107140087ce17a7d41ff8556b20067726f9a03
# Parent  5f402dfe8179ebe748357ad6ca0a0717a596820a
maint: small indentation changes for readability.

* ov-classdef.cc, ov-fcn-handle.cc: small indentation changes for readability.

diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -2407,18 +2407,17 @@ cdef_class::cdef_class_rep::meta_subsref
 
         if (meth.ok ())
           {
             if (! meth.is_static ())
               error ("method `%s' is not static", nm.c_str ());
 
             octave_value_list args;
 
-            if (type.length () > 1 && idx.size () > 1
-                && type[1] == '(')
+            if (type.length () > 1 && idx.size () > 1 && type[1] == '(')
               {
                 args = *(++(idx.begin ()));
                 skip++;
               }
 
             retval = meth.execute (args, (type.length () > skip
                                           ? 1 : nargout), true,
                                    "meta.class");
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1980,18 +1980,17 @@ octave_fcn_binder::maybe_binder (const o
                        ? cmd_list->front ()->expression () : nullptr);
         }
     }
 
   if (body_expr && body_expr->is_index_expression ()
       && ! (param_list && param_list->takes_varargs ()))
     {
       // It's an index expression.
-      octave::tree_index_expression *idx_expr = dynamic_cast<octave::tree_index_expression *>
-                                        (body_expr);
+      octave::tree_index_expression *idx_expr = dynamic_cast<octave::tree_index_expression *> (body_expr);
       octave::tree_expression *head_expr = idx_expr->expression ();
       std::list<octave::tree_argument_list *> arg_lists = idx_expr->arg_lists ();
       std::string type_tags = idx_expr->type_tags ();
 
       if (type_tags.length () == 1 && type_tags[0] == '('
           && head_expr->is_identifier ())
         {
           assert (arg_lists.size () == 1);
