# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1423603649 -3600
#      Tue Feb 10 22:27:29 2015 +0100
# Node ID b30cd22e6471a713344b1a1ea58889a033277ffc
# Parent  480f0fc56bbf6e85866cc299b418ee3d481cd8b1
fix reappearing closed editor tabs at next restart (bug #44219)

* file-editor.cc (constructor): init flag for closing-check;
  (destructor): call check_closing only if this check is not yet done;
  (check_closing): set flag in order to indicate that check is done

* file-editor.h: new flag

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -49,29 +49,35 @@ along with Octave; see the file COPYING.
 
 file_editor::file_editor (QWidget *p)
   : file_editor_interface (p)
 {
   // Set current editing directory before construct because loaded
   // files will change ced accordingly.
   ced = QDir::currentPath ();
 
+  _check_closing_done = false;  // init flag for closing process
+
   construct ();
 
   setVisible (false);
 
   setAcceptDrops(true);
 }
 
 file_editor::~file_editor (void)
 {
   // Close open tabs, if existing. In this case app closing must be
-  // initiated by octave. All tabs will be definetly closed and the
+  // initiated by octave since check_closing was already done if the gui
+  // initiated the closing. All tabs will be definetly closed and the
   // user can not cancel exiting (close state -1)
-  if (_tab_widget->count ())
+  // We have to prevent that on case of gui-closing this check is done
+  // a second time resulting in an empty file list (tabs closed) for the
+  // the next start, that is what _check_closing_done is for
+  if (! _check_closing_done)
     check_closing (-1);
 
   if (_mru_file_menu)
     delete _mru_file_menu;
 }
 
 bool
 file_editor::check_closing (int closing_state)
@@ -104,16 +110,18 @@ file_editor::check_closing (int closing_
   for (int index = _tab_widget->count ()-1; index >= 0; index--)
     {
       editor_tab = static_cast <file_editor_tab *> (_tab_widget->widget (index));
       if ((! editor_tab->conditional_close (closing_state)) && closing_state == 1)
         return false;
     }
 
   // Here, we really want to exit and all tabs are closed
+  _check_closing_done = true;  // check is already done, prevent a second check
+                               // which would store an empty file list
   return true;
 }
 
 
 void
 file_editor::focus (void)
 {
   octave_dock_widget::focus ();
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -346,11 +346,13 @@ private:
   QTabWidget *_tab_widget;
 
   int _marker_breakpoint;
 
   enum { MaxMRUFiles = 10 };
   QMenu *_mru_file_menu;
   QAction *_mru_file_actions[MaxMRUFiles];
   QStringList _mru_files;
+
+  bool _check_closing_done;
 };
 
 #endif // FILEEDITORMDISUBWINDOW_H
