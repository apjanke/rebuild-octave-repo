# HG changeset patch
# User jwe
# Date 773710899 0
#      Fri Jul 08 23:41:39 1994 +0000
# Node ID dbb8a47acc3aa5167220c98f59b890b7acd8074c
# Parent  e273a853208166c4cbc6912b2b024e184d1db672
[project @ 1994-07-08 23:41:39 by jwe]

diff --git a/src/balance.cc b/src/balance.cc
--- a/src/balance.cc
+++ b/src/balance.cc
@@ -231,51 +231,57 @@ balance (const Octave_object& args, int 
 	    caa = result.left_balancing_matrix () * caa
 	      * result.right_balancing_matrix ();
 
 	    cbb = result.left_balancing_matrix () * cbb
 	      * result.right_balancing_matrix ();
 
 	    switch (nargout)
 	      {
+	      case 0:
 	      case 1:
 		warning ("balance: should use two output arguments");
 		retval(0) = tree_constant (caa);
 		break;
 	      case 2:
 		retval(0) = tree_constant (caa);
 		retval(1) = tree_constant (cbb);
 		break;
 	      case 4:
 		retval(0) = tree_constant (result.left_balancing_matrix ());
 		retval(1) = tree_constant (result.right_balancing_matrix ());
 		retval(2) = tree_constant (caa);
 		retval(3) = tree_constant (cbb);
 		break;
 	      default:
-		error ("balance: illegal number of output arguments");
+		error ("balance: invalid number of output arguments");
 		break;
 	      }
 	  }
 	else
 	  {
 	    switch (nargout)
 	      {
+	      case 0:
+	      case 1:
+		warning ("balance: should use two output arguments");
+		retval(0) = tree_constant (result.balanced_a_matrix ());
+		break;
 	      case 2:
 		retval(0) = tree_constant (result.balanced_a_matrix ());
 		retval(1) = tree_constant (result.balanced_b_matrix ());
 		break;
 	      case 4:
 		retval(0) = tree_constant (result.left_balancing_matrix ());
 		retval(1) = tree_constant (result.right_balancing_matrix ());
 		retval(2) = tree_constant (result.balanced_a_matrix ());
 		retval(3) = tree_constant (result.balanced_b_matrix ());
 		break;
 	      default:
-		error ("balance: illegal number of output arguments");
+		error ("balance: invalid number of output arguments");
 		break;
 	      }
 	  }
       }
       break;
     default:
       error ("balance requires one (AEP) or two (GEP) numeric arguments");
       break;
diff --git a/src/givens.cc b/src/givens.cc
--- a/src/givens.cc
+++ b/src/givens.cc
@@ -106,17 +106,18 @@ givens (const Octave_object& args, int n
       if (arga.is_complex_type () || argb.is_complex_type ())
 	{
 	  Complex cs, temp_r;
  
 	  F77_FCN (zlartg) (&cx, &cy, &cc, &cs, &temp_r);
 
 	  switch (nargout)
 	    {
-	    case 1:		// output a matrix
+	    case 0:		// output a matrix
+	    case 1:
 	      {
 		ComplexMatrix g (2, 2);
 		g.elem (0, 0) = cc;
 		g.elem (1, 1) = cc;
 		g.elem (0, 1) = cs;
 		g.elem (1, 0) = -conj (cs);
 
 		retval(0) = tree_constant (g);
@@ -124,29 +125,30 @@ givens (const Octave_object& args, int n
 	      break;
    
 	    case 2:		// output scalar values
 	      retval(0) = tree_constant(cc);
 	      retval(1) = tree_constant(cs);
 	      break;
 
 	    default:  
-	      error ("givens: illegal number of output arguments");
+	      error ("givens: invalid number of output arguments");
 	      break;
 	    }
 	}
       else
 	{
 	  double s, temp_r;
  
 	  F77_FCN (dlartg) (&x, &y, &cc, &s, &temp_r);
 
 	  switch (nargout)
 	    {
-	    case 1:		// output a matrix
+	    case 0:		// output a matrix
+	    case 1:
 	      {
 		Matrix g (2, 2);
 		g.elem (0, 0) = cc;
 		g.elem (1, 1) = cc;
 		g.elem (0, 1) = s;
 		g.elem (1, 0) = -s;
 
 		retval(0) = tree_constant (g);
@@ -154,17 +156,17 @@ givens (const Octave_object& args, int n
 	      break;
    
 	    case 2:		// output scalar values
 	      retval(0) = tree_constant (cc);
 	      retval(1) = tree_constant (s);
 	      break;
    
 	    default:
-	      error ("givens: illegal number of output arguments");
+	      error ("givens: invalid number of output arguments");
 	      break;
 	    }
 	}
     }
 
   return retval;
 }
 
