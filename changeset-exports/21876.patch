# HG changeset patch
# User Rik <rik@octave.org>
# Date 1465754082 25200
#      Sun Jun 12 10:54:42 2016 -0700
# Node ID ef25c202bacc5bb0f67a1a57567f360bbb308769
# Parent  6c09e42b7ac4efa6b86bc93759e966127330e768
maint: Clean up for-range usage in liboctave in cset 5c67b16acc4a.

* cmd-edit.cc, oct-shlib.cc: Use passing by reference (&) in for-range
loops.

diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -1085,31 +1085,31 @@ namespace octave
   command_editor::insert_initial_input (void)
   {
     return instance_ok () ? instance->do_insert_initial_input () : 0;
   }
 
   int
   command_editor::startup_handler (void)
   {
-    for (auto fcnptr : startup_hook_set)
+    for (auto& fcnptr : startup_hook_set)
       {
         startup_hook_fcn f = *fcnptr;
 
         if (f)
           f ();
       }
 
     return 0;
   }
 
   int
   command_editor::pre_input_handler (void)
   {
-    for (auto fcnptr : pre_input_hook_set)
+    for (auto& fcnptr : pre_input_hook_set)
       {
         pre_input_hook_fcn f = *fcnptr;
 
         if (f)
           f ();
       }
 
     return 0;
@@ -1119,17 +1119,17 @@ namespace octave
   command_editor::event_handler (void)
   {
     event_hook_lock.lock ();
 
     std::set<event_hook_fcn> hook_set (event_hook_set);
 
     event_hook_lock.unlock ();
 
-    for (auto fcnptr : hook_set)
+    for (auto& fcnptr : hook_set)
       {
         event_hook_fcn f = *fcnptr;
 
         if (f)
           f ();
       }
 
     return 0;
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -138,18 +138,18 @@ namespace octave
       }
 
     return retval;
   }
 
   void
   dynamic_library::dynlib_rep::do_close_hook (dynamic_library::close_hook cl_hook)
   {
-    for (auto p = fcn_names.begin (); p != fcn_names.end (); p++)
-      cl_hook (p->first);
+    for (auto& fcn_sz_p : fcn_names)
+      cl_hook (fcn_sz_p.first);
 
     fcn_names.clear ();
   }
 
   std::map<std::string, dynamic_library::dynlib_rep *> dynamic_library::dynlib_rep::instances;
 
   dynamic_library::dynlib_rep dynamic_library::nil_rep;
 
