# HG changeset patch
# User jwe
# Date 1196103235 0
#      Mon Nov 26 18:53:55 2007 +0000
# Node ID 83cbff53bc9628a08a04965a235528187d001df9
# Parent  2f915d6cac3de37f983ed4fbedb771e9e77f0528
[project @ 2007-11-26 18:53:54 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-11-26  Michael Goffioul <michael.goffioul@gmail.com>
+
+	* builtins.h (install_builtins): Tag with OCTINTERP_API.
+	* toplev.h (octave_interpreter_ready, octave_initialized): Likewise.
+
 2007-11-14  John W. Eaton  <jwe@octave.org>
 
 	* mex.cc (mex::foreign_memlist): New data member.
 	(mex::mark_foreign, mex::unmark_foreign): New functions.
 	(mex::free): Don't warn about pointers found in foreign_memlist.
 	(maybe_mark_foreign): New function.
 	(mxArray_octave_value::get_data, mxArray_octave_value::get_ir,
 	mxArray_octave_value::get_jc):
diff --git a/src/builtins.h b/src/builtins.h
--- a/src/builtins.h
+++ b/src/builtins.h
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_builtins_h)
 #define octave_builtins_h 1
 
-extern void install_builtins (void);
+extern OCTINTERP_API void install_builtins (void);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -47,20 +47,20 @@ do_octave_atexit (void);
 // Current command to execute.
 extern tree_statement_list *global_command;
 
 // Pointer to parent function that is currently being evaluated.
 extern octave_function *curr_parent_function;
 
 // TRUE means we are ready to interpret commands, but not everything
 // is ready for interactive use.
-extern bool octave_interpreter_ready;
+extern OCTINTERP_API bool octave_interpreter_ready;
 
 // TRUE means we've processed all the init code and we are good to go.
-extern bool octave_initialized;
+extern OCTINTERP_API bool octave_initialized;
 
 class
 octave_call_stack
 {
 protected:
 
   octave_call_stack (void) : cs () { }
 
