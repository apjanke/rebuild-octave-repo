# HG changeset patch
# User Rik <rik@octave.org>
# Date 1431733917 25200
#      Fri May 15 16:51:57 2015 -0700
# Node ID 2283dd03bf50591252218ce03626815706a8f346
# Parent  10414d7a25f8fab7c1ac9f03d13cbdc472017614
ginput.m: Don't hang if window is close while fcn active (bug #44897).

* ginput.m: Change closerequestfcn for figure to point to ginput_closerequestfcn.

* ginput.m (ginput_closerequestfcn): New callback routine.  Stops collecting
data for ginput.  Calls original closerequestfcn to shutdown window.

diff --git a/scripts/plot/util/ginput.m b/scripts/plot/util/ginput.m
--- a/scripts/plot/util/ginput.m
+++ b/scripts/plot/util/ginput.m
@@ -64,22 +64,25 @@ function varargout = ginput (n = -1)
     endif
     return
   endif
 
   x = y = button = [];
   ginput_accumulator (0, 0, 0, 0);  # initialize accumulator
 
   orig_windowbuttondownfcn = get (fig, "windowbuttondownfcn");
-  orig_ginput_keypressfcn = get (fig, "keypressfcn");
+  orig_keypressfcn = get (fig, "keypressfcn");
+  orig_closerequestfcn = get (fig, "closerequestfcn");
 
   unwind_protect
 
     set (fig, "windowbuttondownfcn", @ginput_windowbuttondownfcn);
     set (fig, "keypressfcn", @ginput_keypressfcn);
+    set (fig, "closerequestfcn", {@ginput_closerequestfcn,
+                                  orig_closerequestfcn});
 
     do
       if (strcmp (toolkit, "fltk"))
         __fltk_check__ ();
       endif
 
       ## Release CPU.
       sleep (0.01);
@@ -90,18 +93,21 @@ function varargout = ginput (n = -1)
     if (n0 > n)
       ## More clicks than requested due to double-click or too fast clicking
       x = x(1:n);
       y = y(1:n);
       button = button(1:n);
     endif
 
   unwind_protect_cleanup
-    set (fig, "windowbuttondownfcn", orig_windowbuttondownfcn);
-    set (fig, "keypressfcn", orig_ginput_keypressfcn);
+    if (isfigure (fig))
+      ## Only execute if window still exists
+      set (fig, "windowbuttondownfcn", orig_windowbuttondownfcn);
+      set (fig, "keypressfcn", orig_keypressfcn);
+    endif
   end_unwind_protect
 
   varargout = {x, y, button};
 
 endfunction
 
 function [x, y, n, button] = ginput_accumulator (mode, xn, yn, btn)
   persistent x y n button;
@@ -118,30 +124,35 @@ function [x, y, n, button] = ginput_accu
     n += 1;
   elseif (mode == 2)
     ## The end due to Enter.
     n = -1;
  endif
 
 endfunction
 
-function ginput_windowbuttondownfcn (src, button)
+function ginput_windowbuttondownfcn (~, button)
   point = get (gca (), "currentpoint");
   ginput_accumulator (1, point(1,1), point(1,2), button);
 endfunction
 
-function ginput_keypressfcn (src, evt)
+function ginput_keypressfcn (~, evt)
   point = get (gca (), "currentpoint");
   if (strcmp (evt.Key, "return"))
     ## Enter key stops ginput.
     ginput_accumulator (2, NaN, NaN, NaN);
   else
     character = evt.Character;
     if (! isempty (character))
       ginput_accumulator (1, point(1,1), point(1,2), uint8 (character(1)));
     endif
   endif
 endfunction
 
+function ginput_closerequestfcn (hfig, ~, orig_closerequestfcn)
+  ginput_accumulator (2, NaN, NaN, NaN);  # Stop ginput
+  feval (orig_closerequestfcn);           # Close window with original fcn
+endfunction
+
 
 ## Remove from test statistics.  No real tests possible.
 %!test
 %! assert (1);
