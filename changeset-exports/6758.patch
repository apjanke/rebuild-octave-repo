# HG changeset patch
# User jwe
# Date 1182812961 0
#      Mon Jun 25 23:09:21 2007 +0000
# Node ID 1894012e6b84eab7a220b11e806d46564682249e
# Parent  c3cd7d14fc5ea0e7cdd864842f2d8fb032cdd84b
[project @ 2007-06-25 23:09:21 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-25  John W. Eaton  <jwe@octave.org>
+
+	* plot/drawnow.m, plot/__go_draw_axes__.m: Use strcmpi instead of
+	strcmp for selected property comparisons.
+
 2007-06-25  Søren Hauberg  <hauberg@gmail.com>
 
         * image/imshow.m: Fix check for colormap arguments.
 
 2007-06-25  Joel Keay  <keay@nhn.ou.edu>
 
 	* plot/drawnow.m: Handle GNUTERM=aqua if DISPLAY is not set.
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -44,17 +44,17 @@ function __go_draw_axes__ (h, plot_strea
     endif
 
     if (! isempty (axis_obj.position))
       pos = axis_obj.position;
       fprintf (plot_stream, "set origin %g, %g;\n", pos(1), pos(2));
       fprintf (plot_stream, "set size %g, %g;\n", pos(3), pos(4));
     endif
 
-    if (strcmp (axis_obj.dataaspectratiomode, "manual"))
+    if (strcmpi (axis_obj.dataaspectratiomode, "manual"))
       r = axis_obj.dataaspectratio;
       fprintf (plot_stream, "set size ratio %g;\n", -r(2)/r(1));
     else
       fputs (plot_stream, "set size noratio;\n");
     endif
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
@@ -110,81 +110,81 @@ function __go_draw_axes__ (h, plot_strea
 	  ## Rotation of zlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
 
-    if (strcmp (axis_obj.xgrid, "on"))
+    if (strcmpi (axis_obj.xgrid, "on"))
       fputs (plot_stream, "set grid xtics;\n");
     else
       fputs (plot_stream, "set grid noxtics;\n");
     endif
 
-    if (strcmp (axis_obj.ygrid, "on"))
+    if (strcmpi (axis_obj.ygrid, "on"))
       fputs (plot_stream, "set grid ytics;\n");
     else
       fputs (plot_stream, "set grid noytics;\n");
     endif
 
-    if (strcmp (axis_obj.zgrid, "on"))
+    if (strcmpi (axis_obj.zgrid, "on"))
       fputs (plot_stream, "set grid ztics;\n");
     else
       fputs (plot_stream, "set grid ztics;\n");
     endif
 
-    if (strcmp (axis_obj.xminorgrid, "on"))
+    if (strcmpi (axis_obj.xminorgrid, "on"))
       fputs (plot_stream, "set mxtics 5;\n");
       fputs (plot_stream, "set grid mxtics;\n");
     else
       fputs (plot_stream, "set grid nomxtics;\n");
     endif
 
-    if (strcmp (axis_obj.yminorgrid, "on"))
+    if (strcmpi (axis_obj.yminorgrid, "on"))
       fputs (plot_stream, "set mytics 5;\n");
       fputs (plot_stream, "set grid mytics;\n");
     else
       fputs (plot_stream, "set grid nomytics;\n");
     endif
 
-    if (strcmp (axis_obj.zminorgrid, "on"))
+    if (strcmpi (axis_obj.zminorgrid, "on"))
       fputs (plot_stream, "set mztics 5;\n");
       fputs (plot_stream, "set grid mztics;\n");
     else
       fputs (plot_stream, "set grid nomztics;\n");
     endif
 
     do_tics (axis_obj, plot_stream);
 
-    xlogscale = strcmp (axis_obj.xscale, "log");
+    xlogscale = strcmpi (axis_obj.xscale, "log");
     if (xlogscale)
       fputs (plot_stream, "set logscale x;\n");
     else
       fputs (plot_stream, "unset logscale x;\n");
     endif
 
-    ylogscale = strcmp (axis_obj.yscale, "log");
+    ylogscale = strcmpi (axis_obj.yscale, "log");
     if (ylogscale)
       fputs (plot_stream, "set logscale y;\n");
     else
       fputs (plot_stream, "unset logscale y;\n");
     endif
 
-    zlogscale = strcmp (axis_obj.zscale, "log");
+    zlogscale = strcmpi (axis_obj.zscale, "log");
     if (zlogscale)
       fputs (plot_stream, "set logscale z;\n");
     else
       fputs (plot_stream, "unset logscale z;\n");
     endif
 
-    xautoscale = strcmp (axis_obj.xlimmode, "auto");
-    yautoscale = strcmp (axis_obj.ylimmode, "auto");
-    zautoscale = strcmp (axis_obj.zlimmode, "auto");
+    xautoscale = strcmpi (axis_obj.xlimmode, "auto");
+    yautoscale = strcmpi (axis_obj.ylimmode, "auto");
+    zautoscale = strcmpi (axis_obj.zlimmode, "auto");
 
     kids = axis_obj.children;
 
     nd = 0;
     data_idx = 0;
     data = cell ();
     is_image_data = [];
 
@@ -484,17 +484,17 @@ function __go_draw_axes__ (h, plot_strea
 	  fputs (plot_stream, "unset colorbox;\n");
 
 	case "text"
 	  lpos = obj.position;
 	  label = obj.string;
 	  halign = obj.horizontalalignment;
 	  angle = obj.rotation;
           units = obj.units;
-          if (strcmp (units, "normalized"))
+          if (strcmpi (units, "normalized"))
             units = "graph";
           else
             units = "";
           endif
 	  
 	  if (nd == 3)
 	    fprintf (plot_stream,
 		     "set label \"%s\" at %s %g,%g,%g %s rotate by %f;\n",
@@ -517,68 +517,68 @@ function __go_draw_axes__ (h, plot_strea
     have_data = ! isempty (data);
 
     if (xautoscale && have_data)
       xlim = get_axis_limits (xmin, xmax, xminp, xlogscale);
       set (h, "xlim", xlim, "xlimmode", "auto");
     else
       xlim = axis_obj.xlim;
     endif
-    if (strcmp (axis_obj.xdir, "reverse"))
+    if (strcmpi (axis_obj.xdir, "reverse"))
       xdir = "reverse";
     else
       xdir = "noreverse";
     endif
     fprintf (plot_stream, "set xrange [%g:%g] %s;\n", xlim, xdir);
 
     if (yautoscale && have_data)
       ylim = get_axis_limits (ymin, ymax, yminp, ylogscale);
       set (h, "ylim", ylim, "ylimmode", "auto");
     else
       ylim = axis_obj.ylim;
     endif
-    if (strcmp (axis_obj.ydir, "reverse"))
+    if (strcmpi (axis_obj.ydir, "reverse"))
       ydir = "reverse";
     else
       ydir = "noreverse";
     endif
     fprintf (plot_stream, "set yrange [%g:%g] %s;\n", ylim, ydir);
 
     if (nd == 3)
       if (zautoscale && have_data)
 	zlim = get_axis_limits (zmin, zmax, zminp, zlogscale);
 	set (h, "zlim", zlim, "zlimmode", "auto");
       else
 	zlim = axis_obj.zlim;
       endif
-      if (strcmp (axis_obj.zdir, "reverse"))
+      if (strcmpi (axis_obj.zdir, "reverse"))
 	zdir = "reverse";
       else
 	zdir = "noreverse";
       endif
       fprintf (plot_stream, "set zrange [%g:%g] %s;\n", zlim, zdir);
     endif
 
-    if (strcmp (axis_obj.box, "on"))
+    if (strcmpi (axis_obj.box, "on"))
       if (nd == 3)
 	fputs (plot_stream, "set border 4095;\n");
       else
 	fputs (plot_stream, "set border 431;\n");
       endif
     else
       if (nd == 3)
 	fputs (plot_stream, "set border 895;\n");
       else
 	fputs (plot_stream, "set border 3;\n");
 	fputs (plot_stream, "set xtics nomirror; set ytics nomirror;\n");
       endif
     endif
 
-    if (strcmp (axis_obj.key, "on"))
-      if (strcmp (axis_obj.keybox, "on"))
+    if (strcmpi (axis_obj.key, "on"))
+      if (strcmpi (axis_obj.keybox, "on"))
 	box = "box";
       else
 	box = "nobox";
       endif
       inout = "inside";
       switch (axis_obj.keypos)
 	case -1
 	  pos = "right bottom";
@@ -835,17 +835,17 @@ function [style, typ, with] = do_linesty
   elseif (! isempty (pt))
     style = "linespoints";
   endif
 
   if (isfield (obj, "markersize"))
     if (have_newer_gnuplot)
       fprintf (plot_stream, " pointsize %f", obj.markersize);
     else
-      if (! strcmp (style, "lines"))
+      if (! strcmpi (style, "lines"))
 	with = sprintf ("%s ps %f", with, obj.markersize);
       endif
     endif
     found_style = true;
   endif
 
   if (have_newer_gnuplot && ! found_style)
     fputs (plot_stream, " default");
@@ -908,20 +908,20 @@ function do_tics (obj, plot_stream)
 	     "x", plot_stream);
   do_tics_1 (obj.ytickmode, obj.ytick, obj.yticklabelmode, obj.yticklabel,
 	     "y", plot_stream);
   do_tics_1 (obj.ztickmode, obj.ztick, obj.zticklabelmode, obj.zticklabel,
 	     "z", plot_stream);
 endfunction
 
 function do_tics_1 (ticmode, tics, labelmode, labels, ax, plot_stream)
-  if (strcmp (ticmode, "manual"))
+  if (strcmpi (ticmode, "manual"))
     if (isempty (tics))
       fprintf (plot_stream, "unset %stics;\n", ax);
-    elseif (strcmp (labelmode, "manual") && ! isempty (labels))
+    elseif (strcmpi (labelmode, "manual") && ! isempty (labels))
       if (ischar (labels))
 	labels = cellstr (labels);
       endif
       if (iscellstr (labels))
 	k = 1;
 	ntics = numel (tics);
 	nlabels = numel (labels);
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
diff --git a/scripts/plot/drawnow.m b/scripts/plot/drawnow.m
--- a/scripts/plot/drawnow.m
+++ b/scripts/plot/drawnow.m
@@ -52,17 +52,17 @@ function drawnow (term, file)
 	error ("drawnow: nothing to draw");
       endif
     elseif (nargin == 0)
       for h = __go_figure_handles__ ()
 	if (! (isnan (h) || h == 0))
 	  f = get (h);
 	  if (f.__modified__)
 	    plot_stream = f.__plot_stream__;
-	    figure_is_visible = strcmp (f.visible, "on");
+	    figure_is_visible = strcmpi (f.visible, "on");
 	    if (figure_is_visible)
 	      if (isempty (plot_stream))
 		plot_stream = open_gnuplot_stream (h);
 	      endif
 	      __go_draw_figure__ (f, plot_stream);
 	    elseif (! isempty (plot_stream))
 	      pclose (plot_stream);
 	      set (h, "__plot_stream__", []);
