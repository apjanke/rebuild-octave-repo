# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424422418 18000
#      Fri Feb 20 03:53:38 2015 -0500
# Node ID a3577622952cc7e9aca2e49db0960c4687d36637
# Parent  2dd6d5bdf11d0deaf9759594f1dd393df1845ed7
avoid some GCC unused parameter warnings

* oct-tex-lexer.in.ll (octave_tex_alloc, octave_tex_realloc,
octave_tex_free): New functions.  Disable flex generated versions.
* lex.ll (octave_alloc, octave_realloc, octave_free): New functions.
Disable flex generated versions.

diff --git a/libinterp/corefcn/oct-tex-lexer.in.ll b/libinterp/corefcn/oct-tex-lexer.in.ll
--- a/libinterp/corefcn/oct-tex-lexer.in.ll
+++ b/libinterp/corefcn/oct-tex-lexer.in.ll
@@ -20,16 +20,20 @@ along with Octave; see the file COPYING.
 
 */
 
 %option prefix = "octave_tex_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
 
+%option noyyalloc
+%option noyyrealloc
+%option noyyfree
+
 %top {
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 }
 
 %x	NUM_MODE
@@ -138,16 +142,34 @@ NUM	(({D}+\.?{D}*)|(\.{D}+))
 // Generic character
 %}
 
 "\n"	|
 .	{ yylval->ch = yytext[0]; return CH; }
 
 %%
 
+void *
+octave_tex_alloc (yy_size_t size, yyscan_t)
+{
+  return malloc (size);
+}
+
+void *
+octave_tex_realloc (void *ptr, yy_size_t size, yyscan_t)
+{
+  return realloc (ptr, size);
+}
+
+void
+octave_tex_free (void *ptr, yyscan_t)
+{
+  free (ptr);
+}
+
 bool
 text_parser_tex::init_lexer (const std::string& s)
 {
   if (! scanner)
     octave_tex_lex_init (&scanner);
 
   if (scanner)
     {
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -31,16 +31,20 @@ care to properly save and restore (typic
 object) relevant global values before and after the nested call.
 */
 
 %option prefix = "octave_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
 
+%option noyyalloc
+%option noyyrealloc
+%option noyyfree
+
 %top {
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 }
 
 %x COMMAND_START
@@ -1708,16 +1712,34 @@ ANY_INCLUDING_NL (.|{NL})
                curr_lexer->input_line_number, curr_lexer->current_input_column);
 
         return LEXICAL_ERROR;
       }
   }
 
 %%
 
+void *
+octave_alloc (yy_size_t size, yyscan_t)
+{
+  return malloc (size);
+}
+
+void *
+octave_realloc (void *ptr, yy_size_t size, yyscan_t)
+{
+  return realloc (ptr, size);
+}
+
+void
+octave_free (void *ptr, yyscan_t)
+{
+  free (ptr);
+}
+
 static void
 display_character (char c)
 {
   if (isgraph (c))
     std::cerr << c;
   else
     switch (c)
       {
