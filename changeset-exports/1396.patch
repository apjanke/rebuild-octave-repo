# HG changeset patch
# User jwe
# Date 811107974 0
#      Thu Sep 14 19:46:14 1995 +0000
# Node ID 1ff9a86e2ad52da85c4d4e2f8e766bab5ff1cf62
# Parent  b6fe9503c6e198f505638b4a40c0b80f4da6f79c
[project @ 1995-09-14 19:46:14 by jwe]

diff --git a/scripts/special-matrix/hankel.m b/scripts/special-matrix/hankel.m
--- a/scripts/special-matrix/hankel.m
+++ b/scripts/special-matrix/hankel.m
@@ -18,52 +18,56 @@
 
 function retval = hankel (c, r)
 
 # usage: hankel (c, r)
 #
 # Return the Hankel matrix constructed given the first column
 # c, and (optionally) the last row r.
 #
-# If the second argument is omitted, the last row is taken to be the
-# same as the first column.  If the last element of c is not the same
-# as the first element of r, the last element of c is used.
+# If the second argument is omitted, zeros are inserted below the main
+# anti-diagonal.  If the last element of c is not the same as the first 
+# element of r, the last element of c is used.
 #
 # See also: vander, hadamard, hilb, invhilb, toeplitz
 
   if (nargin == 1)
-    r = c;
+    r = zeros (size (c));
   elseif (nargin != 2)
     usage ("hankel (c, r)");
   endif
 
   [c_nr, c_nc] = size (c);
   [r_nr, r_nc] = size (r);
 
   if ((c_nr != 1 && c_nc != 1) || (r_nr != 1 && r_nc != 1))
     error ("hankel: expecting vector arguments")
   endif
 
+  if (nargin == 1) 
+    r (1) = c (length (c));
+  endif
+
   if (c_nc != 1)
     c = c.';
   endif
 
   if (r_nr != 1)
     r = r.';
   endif
 
-  if (r (1) != c (1))
+  nc = length (r);
+  nr = length (c);
+
+  if (r (1) != c (nr))
     warning ("hankel: column wins anti-diagonal conflict");
   endif
 
 # This should probably be done with the colon operator...
 
-  nc = length (r);
-  nr = length (c);
-
   retval = zeros (nr, nc);
 
   for i = 1:min (nr, nc)
     retval (1:nr-i+1, i) = c (i:nr);
   endfor
 
   tmp = 1;
   if (nc <= nr)
