# HG changeset patch
# User Rik <rik@octave.org>
# Date 1373405979 25200
#      Tue Jul 09 14:39:39 2013 -0700
# Node ID a7b2fc7fe1a9a1861c43bb924fdd5785c40408d0
# Parent  48f5b993b819266d61d08164553834fc07d6f991
binocdf.m: Reverse calling convention to betaincinv to preserve accuracy when p =~ 1.

* scripts/statistics/distributions/binocdf.m: Reverse calling convention to
betaincinv to preserve accuracy when p =~ 1.

diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -791,17 +791,17 @@ function, not with the comparison operat
 @opindex >=
 @DOCSTRING(ge)
 
 @opindex >
 @DOCSTRING(gt)
 
 @DOCSTRING(isequal)
 
-@DOCSTRING(isequalwithequalnans)
+@DOCSTRING(isequaln)
 
 @opindex <=
 @DOCSTRING(le)
 
 @opindex <
 @DOCSTRING(lt)
 
 @opindex !=
diff --git a/scripts/general/isequalwithequalnans.m b/scripts/deprecated/isequalwithequalnans.m
rename from scripts/general/isequalwithequalnans.m
rename to scripts/deprecated/isequalwithequalnans.m
--- a/scripts/general/isequalwithequalnans.m
+++ b/scripts/deprecated/isequalwithequalnans.m
@@ -13,28 +13,32 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} isequalwithequalnans (@var{x1}, @var{x2}, @dots{})
-## Assuming NaN == NaN, return true if all of @var{x1}, @var{x2}, @dots{}
-## are equal.
-## @seealso{isequal}
+## This function has been deprecated.  Use @code{@file{isequaln}} instead.
+## @seealso{isequaln}
 ## @end deftypefn
 
-function retval = isequalwithequalnans (x1, varargin)
+## Deprecated in 3.8
+
+function retval = isequalwithequalnans (varargin)
 
-  if (nargin < 2)
-    print_usage ();
+  persistent warned = false;
+  if (! warned)
+    warned = true;
+    warning ("Octave:deprecated-function",
+             "isequalwithequalnans is obsolete and will be removed from a future version of Octave, please use isequaln instead");
   endif
 
-  retval = __isequal__ (true, x1, varargin{:});
+  retval = isequaln (varargin{:});
 
 endfunction
 
 
 ## test for equality
 %!assert (isequalwithequalnans ({1,2,NaN,4},{1,2,NaN,4}), true)
 %!assert (isequalwithequalnans ([1,2,NaN,4],[1,2,NaN,4]), true)
 ## test for inequality
diff --git a/scripts/deprecated/module.mk b/scripts/deprecated/module.mk
--- a/scripts/deprecated/module.mk
+++ b/scripts/deprecated/module.mk
@@ -4,16 +4,17 @@ deprecated_FCN_FILES = \
   deprecated/__error_text__.m \
   deprecated/cor.m \
   deprecated/corrcoef.m \
   deprecated/cut.m \
   deprecated/default_save_options.m \
   deprecated/java_debug.m \
   deprecated/error_text.m \
   deprecated/gen_doc_cache.m \
+  deprecated/isequalwithequalnans.m \
   deprecated/isstr.m \
   deprecated/java_convert_matrix.m \
   deprecated/java_get.m \
   deprecated/java_invoke.m \
   deprecated/java_new.m \
   deprecated/java_unsigned_conversion.m \
   deprecated/java_set.m \
   deprecated/javafields.m \
diff --git a/scripts/general/isequal.m b/scripts/general/isequal.m
--- a/scripts/general/isequal.m
+++ b/scripts/general/isequal.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} isequal (@var{x1}, @var{x2}, @dots{})
 ## Return true if all of @var{x1}, @var{x2}, @dots{} are equal.
-## @seealso{isequalwithequalnans}
+## @seealso{isequaln}
 ## @end deftypefn
 
 function retval = isequal (x1, varargin)
 
   if (nargin < 2)
     print_usage ();
   endif
 
@@ -69,8 +69,12 @@ endfunction
 %!assert (isequal ({'a','b','c','d'},{'a';'b';'c';'d'}), false)
 ## test for equality (struct)
 %!assert (isequal (struct ('a',1,'b',2),struct ('a',1,'b',2)), true)
 %!assert (isequal (struct ('a',1,'b',2),struct ('a',1,'b',2),struct ('a',1,'b',2)), true)
 %!assert (isequal (struct ('a',"abc",'b',2),struct ('a',"abc",'b',2)), true)
 ## test for inequality (struct)
 %!assert (isequal (struct ('a',NaN,'b',2),struct ('a',NaN,'b',2),struct ('a',NaN,'b',2)), false)
 
+## Input validation
+%!error isequal ()
+%!error isequal (1)
+
diff --git a/scripts/general/isequaln.m b/scripts/general/isequaln.m
new file mode 100644
--- /dev/null
+++ b/scripts/general/isequaln.m
@@ -0,0 +1,50 @@
+## Copyright (C) 2005-2012 William Poetra Yoga Hadisoeseno
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} isequaln (@var{x1}, @var{x2}, @dots{})
+## Return true if all of @var{x1}, @var{x2}, @dots{} are equal under the
+## additional assumption that NaN == NaN (no comparison of NaN placeholders
+## in dataset).
+## @seealso{isequal}
+## @end deftypefn
+
+function retval = isequaln (x1, varargin)
+
+  if (nargin < 2)
+    print_usage ();
+  endif
+
+  retval = __isequal__ (true, x1, varargin{:});
+
+endfunction
+
+
+## test for equality
+%!assert (isequaln ({1,2,NaN,4},{1,2,NaN,4}), true)
+%!assert (isequaln ([1,2,NaN,4],[1,2,NaN,4]), true)
+## test for inequality
+%!assert (isequaln ([1,2,NaN,4],[1,NaN,3,4]), false)
+%!assert (isequaln ([1,2,NaN,4],[1,2,3,4]), false)
+## test for equality (struct)
+%!assert (isequaln (struct ('a',NaN,'b',2),struct ('a',NaN,'b',2),struct ('a',NaN,'b',2)), true)
+%!assert (isequaln (1,2,1), false)
+
+## Input validation
+%!error isequaln ()
+%!error isequaln (1)
diff --git a/scripts/general/module.mk b/scripts/general/module.mk
--- a/scripts/general/module.mk
+++ b/scripts/general/module.mk
@@ -41,17 +41,17 @@ general_FCN_FILES = \
   general/interp2.m \
   general/interp3.m \
   general/interpn.m \
   general/interpft.m \
   general/isa.m \
   general/iscolumn.m \
   general/isdir.m \
   general/isequal.m \
-  general/isequalwithequalnans.m \
+  general/isequaln.m \
   general/isrow.m \
   general/isscalar.m \
   general/issquare.m \
   general/isvector.m \
   general/loadobj.m \
   general/logspace.m \
   general/methods.m \
   general/nargchk.m \
diff --git a/scripts/statistics/distributions/binocdf.m b/scripts/statistics/distributions/binocdf.m
--- a/scripts/statistics/distributions/binocdf.m
+++ b/scripts/statistics/distributions/binocdf.m
@@ -55,19 +55,19 @@ function cdf = binocdf (x, n, p)
   cdf(k) = NaN;
 
   k = (x >= n) & (n >= 0) & (n == fix (n) & (p >= 0) & (p <= 1));
   cdf(k) = 1;
 
   k = (x >= 0) & (x < n) & (n == fix (n)) & (p >= 0) & (p <= 1);
   tmp = floor (x(k));
   if (isscalar (n) && isscalar (p))
-    cdf(k) = 1 - betainc (p, tmp + 1, n - tmp);
+    cdf(k) = betainc (1 - p, n - tmp, tmp + 1);
   else
-    cdf(k) = 1 - betainc (p(k), tmp + 1, n(k) - tmp);
+    cdf(k) = betainc (1 .- p(k), n(k) - tmp, tmp + 1);
   endif
 
 endfunction
 
 
 %!shared x,y
 %! x = [-1 0 1 2 3];
 %! y = [0 1/4 3/4 1 1];
