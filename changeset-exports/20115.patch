# HG changeset patch
# User Rik <rik@octave.org>
# Date 1429717310 25200
#      Wed Apr 22 08:41:50 2015 -0700
# Node ID 7e0e8fb16201bd7a5888b4bd60add61d864a6a71
# Parent  5f0cb9bb6a50ba1e75300e08643d64d0a6d8b34d
Overhaul close.m to add "force" argument (bug #44324)

* close.m: Emit an error if there is no figure handle or "all" argument given.
Check for "force" argument and delete the requested figure handles rather than
calling closereqfcn.  Add BIST input validation tests.  Add new calling forms
and explanation of "force" to docstring.

diff --git a/scripts/plot/util/close.m b/scripts/plot/util/close.m
--- a/scripts/plot/util/close.m
+++ b/scripts/plot/util/close.m
@@ -14,30 +14,36 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Command} {} close
 ## @deftypefnx {Command} {} close (@var{h})
+## @deftypefnx {Command} {} close @var{h}
 ## @deftypefnx {Command} {} close all
 ## @deftypefnx {Command} {} close all hidden
+## @deftypefnx {Command} {} close all force
 ## Close figure window(s).
 ##
 ## When called with no arguments, close the current figure.  This is equivalent
 ## to @code{close (gcf)}.  If the input @var{h} is a graphic handle, or vector
 ## of graphics handles, then close each figure in @var{h}.
 ##
 ## If the argument @qcode{"all"} is given then all figures with visible handles
 ## (HandleVisibility = @qcode{"on"}) are closed.
 ##
 ## If the argument @qcode{"all hidden"} is given then all figures, including
 ## hidden ones, are closed.
 ##
+## If the argument @qcode{"all force"} is given then all figures are closed
+## even when @qcode{"closerequestfcn"} has been altered to prevent closing
+## the window.
+##
 ## Implementation Note: @code{close} operates by calling the function specified
 ## by the @qcode{"closerequestfcn"} property for each figure.  By default, the
 ## function @code{closereq} is used.  It is possible that the function invoked
 ## will delay or abort removing the figure.  To remove a figure without
 ## executing any callback functions use @code{delete}.  When writing a callback
 ## function to close a window do not use @code{close} to avoid recursion.
 ##
 ## @seealso{closereq, delete}
@@ -58,29 +64,35 @@ function retval = close (arg1, arg2)
     figs = get (0, "currentfigure");
     if (figs == 0)  # don't close root figure
       figs = [];
     endif
   elseif (nargin == 1)
     if (ischar (arg1) && strcmpi (arg1, "all"))
       figs = (get (0, "children"))';
       figs = figs(isfigure (figs));
-    elseif (isfigure (arg1))
-      figs = arg1;
-    elseif (isempty (arg1))
-      figs = [];
+    elseif (any (isfigure (arg1)))
+      figs = arg1(isfigure (arg1));
     else
       error ('close: first argument must be "all" or a figure handle');
     endif
-  elseif (   ischar (arg1) && strcmpi (arg1, "all")
-          && ischar (arg2) && strcmpi (arg2, "hidden"))
-    figs = (allchild (0))';
-    figs = figs(isfigure (figs));
+  elseif (ischar (arg2)
+          && (strcmpi (arg2, "hidden") || strcmpi (arg2, "force")))
+    if (ischar (arg1) && strcmpi (arg1, "all"))
+      figs = (allchild (0))';
+      figs = figs(isfigure (figs));
+    else
+      error ('close: first argument must be "all" with "hidden" or "force"');
+    endif
+    if (strcmpi (arg2, "force"))
+      delete (figs);
+      return;
+    endif
   else
-    error ('close: expecting argument to be "all hidden"');
+    error ('close: second argument must be "hidden" or "force"');
   endif
 
   for h = figs
     __go_execute_callback__ (h, "closerequestfcn");
   endfor
 
   if (nargout > 0)
     retval = 1;
@@ -96,13 +108,18 @@ endfunction
 %!   objs = findobj ("type", "figure");
 %!   assert (! any (objs == hf));
 %! unwind_protect_cleanup
 %!   if (isfigure (hf))
 %!     close (hf);
 %!   endif
 %! end_unwind_protect
 
+## Test input validation
 %!error close (1,2,3)
 %!error <first argument must be "all" or a figure> close ({"all"})
 %!error <first argument must be "all" or a figure> close ("all_and_more")
 %!error <first argument must be "all" or a figure> close (-1)
-%!error <expecting argument to be "all hidden"> close all hid
+%!error <first argument must be "all" with "hidden"> close foo hidden
+%!error <first argument must be "all" with "hidden"> close foo force
+%!error <second argument must be "hidden"> close all hid
+%!error <second argument must be "hidden"> close all for
+
