# HG changeset patch
# User jwe
# Date 996257989 0
#      Fri Jul 27 18:19:49 2001 +0000
# Node ID 08cd791cd6134f0a9be37666ed6ad3d122af9aa5
# Parent  d68c34dc9c2550539a1d117c45192030f85eb916
[project @ 2001-07-27 18:19:48 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2001-07-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makeconf.in (do-subst-config-vals): Substitute DEPEND_FLAGS and
+	DEPEND_EXTRA_SED_PATTERN.
+	* mkoctfile.in: Handle --depend.
+
 2001-07-25  Rafael Laboissiere  <rafael@laboissiere.net>
 
        * octave-config.in: New file.
        * Makeconf.in (do-subst-default-vals): Substitute OCTAVE_VERSION.
        * Makefile.in (TARGETS): Add octave-config to list.
        * octMakefile.in (DISTFILES): Add octave-config.in to list.
        (BINDISTFILES): Add octave-config to list.
        (all): Add octave-config dependency.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -353,16 +353,18 @@ sed < $< \
   -e "s;%OCTAVE_CONF_CPICFLAG%;\"${CPICFLAG}\";" \
   -e "s;%OCTAVE_CONF_CPPFLAGS%;\"${CPPFLAGS}\";" \
   -e "s;%OCTAVE_CONF_CXX%;\"${CXX}\";" \
   -e "s;%OCTAVE_CONF_CXXCPP%;\"${CXXCPP}\";" \
   -e "s;%OCTAVE_CONF_CXXFLAGS%;\"${CXXFLAGS}\";" \
   -e "s;%OCTAVE_CONF_CXXPICFLAG%;\"${CXXPICFLAG}\";" \
   -e "s;%OCTAVE_CONF_CXX_VERSION%;\"${CXX_VERSION}\";" \
   -e "s;%OCTAVE_CONF_DEFAULT_PAGER%;\"${DEFAULT_PAGER}\";" \
+  -e "s;%OCTAVE_CONF_DEPEND_FLAGS%;\"${DEPEND_FLAGS}\";" \
+  -e "s;%OCTAVE_CONF_DEPEND_EXTRA_SED_PATTERN%;\"${DEPEND_EXTRA_SED_PATTERN}\";" \
   -e "s;%OCTAVE_CONF_DLFCN_INCFLAGS%;\"${DLFCN_INCFLAGS}\";" \
   -e "s;%OCTAVE_CONF_EXE%;\"${EXE}\";" \
   -e "s;%OCTAVE_CONF_F2C%;\"${F2C}\";" \
   -e "s;%OCTAVE_CONF_F2CFLAGS%;\"${F2CFLAGS}\";" \
   -e "s;%OCTAVE_CONF_F77%;\"${F77}\";" \
   -e "s;%OCTAVE_CONF_FC%;\"${FC}\";" \
   -e "s;%OCTAVE_CONF_FFLAGS%;\"${FFLAGS}\";" \
   -e "s;%OCTAVE_CONF_FLIBS%;\"${FLIBS}\";" \
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -19,16 +19,19 @@ set -e
 : ${CFLAGS=%OCTAVE_CONF_CFLAGS%}
 : ${CPICFLAG=%OCTAVE_CONF_CPICFLAG%}
 : ${CXX=%OCTAVE_CONF_CXX%}
 : ${CXXFLAGS=%OCTAVE_CONF_CXXFLAGS%}
 : ${CXXPICFLAG=%OCTAVE_CONF_CXXPICFLAG%}
 : ${XTRA_CFLAGS=%OCTAVE_CONF_XTRA_CFLAGS%}
 : ${XTRA_CXXFLAGS=%OCTAVE_CONF_XTRA_CXXFLAGS%}
 
+: ${DEPEND_FLAGS=%OCTAVE_CONF_DEPEND_FLAGS%}
+: ${DEPEND_EXTRA_SED_PATTERN=%OCTAVE_CONF_DEPEND_EXTRA_SED_PATTERN%}
+
 : ${SH_LD=%OCTAVE_CONF_SH_LD%}
 : ${SH_LDFLAGS=%OCTAVE_CONF_SH_LDFLAGS%}
 
 : ${ALL_FFLAGS="$FFLAGS"}
 
 : ${ALL_CFLAGS="$INCFLAGS $XTRA_CFLAGS $CFLAGS"}
 
 : ${ALL_CXXFLAGS="$INCFLAGS $XTRA_CXXFLAGS $CXXFLAGS"}
@@ -44,20 +47,22 @@ objfiles=
 octfiles=
 octfile=
 incflags=
 defs=
 ldflags=
 dbg=:
 strip=false
 link=true
+depend=false
+compile=true
 
 if [ $# -eq 0 ]; then
   echo $usage_msg
-  exit 1;
+  exit 1
 fi
 
 while [ $# -gt 0 ]; do
   file=
   case "$1" in
     *.c)
       file=$1
       cfiles="$cfiles $file"
@@ -88,16 +93,19 @@ Options:
   -IDIR                   Add -IDIR to compile commands.
 
   -DDEF                   Add -DDEF to compile commands.
 
   -lLIB                   Add library LIB to link command.
 
   -LDIR                   Add -LDIR to link command.
 
+  -M, --depend            Generate dependency files (.d) for C and C++
+                          source files.
+
   -c                      Compile, but do not link.
 
   -o FILE, --output FILE  Output file name.  Default extension is .oct.
 
   -p VAR, --print VAR     Print configuration variable VAR.  Recognized
                           variables are:
 
 			    CPPFLAGS    CXX
@@ -130,16 +138,20 @@ EOF
       incflags="$incflags $1"
     ;;
     -D*)
       defs="$defs $1"
     ;;
     -[lL]*)
       ldflags="$ldflags $1"
     ;;
+    -M | --depend)
+      depend=true
+      compile=false
+    ;;
     -o | --output)
       shift
       if [ $# -gt 0 ]; then
         octfile=`echo $1 | sed 's,\.[^.]*$,,'`.oct
       else
         echo "mkoctfile: output file name missing"
       fi
     ;;
@@ -167,16 +179,57 @@ EOF
   if [ -n "$file" ]; then
     if [ -z "$octfile" ]; then
       octfile=`echo $file | sed 's,\.[^.]*$,,'`.oct
     fi
   fi
   shift
 done
 
+# Generate dependency files for C and C++ files.
+
+if $depend; then
+  if [ -n "$cfiles" ]; then
+    for f in $cfiles; do
+      b=`echo $f | sed 's,\.c$,,'`
+      d=$b.d
+
+      $dbg rm -f $d
+      eval rm -f $d
+      cmd="$CC $DEPEND_FLAGS $CPPFLAGS $ALL_CFLAGS $f | sed $DEPEND_EXTRA_SED_PATTERN -e 's,^[^:]*/\(.*\.o\):,\1:,' -e 's,$b\.o,pic/& & $d,g' > $d-t && mv $d-t $d"
+      $dbg $cmd
+      eval $cmd
+    done
+  fi
+
+  if [ -n "$ccfiles" ]; then
+    for f in $ccfiles; do
+      case $f in
+	*.cc)
+	  b=`echo $f | sed 's,\.cc$,,'`
+	;;
+	*.C)
+	  b=`echo $f | sed 's,\.C$,,'`
+	;;
+	*.cpp)
+	  b=`echo $f | sed 's,\.cpp$,,'`
+	;;
+      esac
+      d=$b.d
+      $dbg rm -f $d
+      eval rm -f $d
+      cmd="$CXX $DEPEND_FLAGS $CPPFLAGS $ALL_CXXFLAGS $f | sed $DEPEND_EXTRA_SED_PATTERN -e 's,^[^:]*/\(.*\.o\):,\1:,' -e 's,$b\.o,pic/& & $d,g' > $d-t && mv $d-t $d"
+      $dbg $cmd
+      eval $cmd
+    done
+  fi
+  # If generating dependencies, that's all we do.
+  exit 0
+fi
+
 # Compile Fortran, C, and C++ files.  Add the name of each object file
 # that is produced to the overall list of object files.
 
 if [ -n "$f77files" ]; then
   for f in $f77files; do
     case $f in
       *.f)
         b=`echo $f | sed 's,\.f$,,'`
