# HG changeset patch
# User jwe
# Date 1173258830 0
#      Wed Mar 07 09:13:50 2007 +0000
# Node ID f427b33aeb4c4e756bfb36183e3183f4bdfc3046
# Parent  4109a238634692b442ad03d8bbd8a869a29246be
[project @ 2007-03-07 09:13:50 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2511,16 +2511,26 @@ assign1 (Array<LT>& lhs, const Array<RT>
 
   octave_idx_type lhs_len = lhs.length ();
   octave_idx_type rhs_len = rhs.length ();
 
   octave_idx_type n = lhs_idx.freeze (lhs_len, "vector", true);
 
   if (n != 0)
     {
+      dim_vector lhs_dims = lhs.dims ();
+
+      if (lhs_len == 0 && ! lhs_dims.all_zero ())
+	{
+	  (*current_liboctave_error_handler)
+	    ("A(I) = X: unable to resize A");
+
+	  retval = 0;
+	}
+
       if (rhs_len == n || rhs_len == 1)
 	{
 	  octave_idx_type max_idx = lhs_idx.max () + 1;
 	  if (max_idx > lhs_len)
 	    lhs.resize_and_fill (max_idx, rfv);
 	}
 
       if (rhs_len == n)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2007-03-07  John W. Eaton  <jwe@octave.org>
 
+	* Array.cc (assign1 (Array<LT>&, const Array<RT>&, const LT&)):
+	Only allow resizing empty LHS if it is 0x0.
+
 	* Array.cc (Array<T>::maybe_delete_elements (Array<idx_vector>&,
 	const T&)): Handle case of more indices than dimensions.
 	(assign (Array<LT>&, const Array<RT>&, const LT&)): Allow more
 	cases to be handled by assignN.
 	(assignN (Array<LT>&, const Array<RT>&, const LT&)):
 	Special cases for 2-d array assignments for speed.
 	Improve handling of scalar RHS and empty indices.
 
