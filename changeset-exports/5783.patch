# HG changeset patch
# User jwe
# Date 1146614542 0
#      Wed May 03 00:02:22 2006 +0000
# Node ID 2a9089b47dc23a7e113e9af17537ff4a496126b1
# Parent  96cd81ed579e8fee19dd42e927e9ec42799adbf6
[project @ 2006-05-03 00:02:22 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-05-02  John W. Eaton  <jwe@octave.org>
+
+	* lex.l ({CCHAR}): Exit rawcommand mode if returning '\n' token.
+
 2006-05-02  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/rand.cc (do_rand): Require real scalar for seed.
 
 2006-05-01  John W. Eaton  <jwe@octave.org>
 
 	* error.h (Vwarning_option): Delete.
 	* variables.cc (looks_like_struct): Remove use from commented code.
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -805,17 +805,17 @@ be used to set the state of all warnings
 @deftypefnx {Built-in Function} {} warning (\"on\", @var{id})\n\
 @deftypefnx {Built-in Function} {} warning (\"off\", @var{id})\n\
 @deftypefnx {Built-in Function} {} warning (\"error\", @var{id})\n\
 @deftypefnx {Built-in Function} {} warning (\"query\", @var{id})\n\
 Set or query the the state of a particular warning using the identifier\n\
 @var{id}.  If the identifier is omitted, a value of @samp{\"all\"} is\n\
 assumed.  If you set the state of a warning to @samp{\"error\"}, the\n\
 warning named by @var{id} is handled as if it were an error instead.\n\
-@seealso{warning_ids}.\n\
+@seealso{warning_ids}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
   int argc = nargin + 1;
 
   bool done = false;
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -691,17 +691,20 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
     lexer_flags.convert_spaces_to_comma = true;
 
     maybe_gripe_matlab_incompatible_comment (yytext[0]);
 
     if (YY_START == COMMAND_START)
       BEGIN (INITIAL);
 
     if (nesting_level.none ())
-      COUNT_TOK_AND_RETURN ('\n');
+      {
+	lexer_flags.doing_rawcommand = false;
+	COUNT_TOK_AND_RETURN ('\n');
+      }
     else if (nesting_level.is_bracket_or_brace ())
       COUNT_TOK_AND_RETURN (';');
   }
 
 %{
 // Other operators.
 %}
 
