# HG changeset patch
# User jwe
# Date 837469894 0
#      Mon Jul 15 22:31:34 1996 +0000
# Node ID 7ffb2a630708ecccb86aebd6d3b0573ba377cdc7
# Parent  b5568c31ee2c8adbaebe32b78e0a42b12a441f84
[project @ 1996-07-15 22:31:34 by jwe]

diff --git a/scripts/audio/loadaudio.m b/scripts/audio/loadaudio.m
--- a/scripts/audio/loadaudio.m
+++ b/scripts/audio/loadaudio.m
@@ -73,11 +73,8 @@ function X = loadaudio (name, ext, bit)
   else
     fclose (num);
     error ("loadaudio does not support given extension");
   endif
 
   fclose (num);
 
 endfunction
-
-
-
diff --git a/scripts/elfun/acot.m b/scripts/elfun/acot.m
--- a/scripts/elfun/acot.m
+++ b/scripts/elfun/acot.m
@@ -24,9 +24,9 @@
 function w = acot (z)
 
   if (nargin != 1)
     usage ("acot (z)");
   endif
 
   w = atan (1 ./ z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/acoth.m b/scripts/elfun/acoth.m
--- a/scripts/elfun/acoth.m
+++ b/scripts/elfun/acoth.m
@@ -24,9 +24,9 @@
 function w = acoth (z)
 
   if (nargin != 1)
     usage ("acoth (z)");
   endif
 
   w = atanh (1 ./ z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/acsc.m b/scripts/elfun/acsc.m
--- a/scripts/elfun/acsc.m
+++ b/scripts/elfun/acsc.m
@@ -24,9 +24,9 @@
 function w = acsc (z)
 
   if (nargin != 1)
     usage ("acsc (z)");
   endif
 
   w = asin (1 ./ z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/acsch.m b/scripts/elfun/acsch.m
--- a/scripts/elfun/acsch.m
+++ b/scripts/elfun/acsch.m
@@ -24,9 +24,9 @@
 function w = acsch (z)
 
   if (nargin != 1)
     usage ("acsch (z)");
   endif
 
   w = asinh (1 ./ z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/asec.m b/scripts/elfun/asec.m
--- a/scripts/elfun/asec.m
+++ b/scripts/elfun/asec.m
@@ -24,9 +24,9 @@
 function w = asec (z)
 
   if (nargin != 1)
     usage ("asec (z)");
   endif
 
   w = acos (1 ./ z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/cot.m b/scripts/elfun/cot.m
--- a/scripts/elfun/cot.m
+++ b/scripts/elfun/cot.m
@@ -24,9 +24,9 @@
 function w = cot (z)
 
   if (nargin != 1)
     usage ("cot (z)");
   endif
 
   w = 1 ./ tan(z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/coth.m b/scripts/elfun/coth.m
--- a/scripts/elfun/coth.m
+++ b/scripts/elfun/coth.m
@@ -24,9 +24,9 @@
 function w = coth (z)
 
   if (nargin != 1)
     usage ("coth (z)");
   endif
 
   w = 1 ./ tanh(z);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/elfun/log2.m b/scripts/elfun/log2.m
--- a/scripts/elfun/log2.m
+++ b/scripts/elfun/log2.m
@@ -24,9 +24,9 @@
 function w = log2 (z)
 
 if (nargin != 1)
     usage ("log2 (z)");
   endif
 
   w = log(z) / log(2);
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/miscellaneous/list_primes.m b/scripts/miscellaneous/list_primes.m
--- a/scripts/miscellaneous/list_primes.m
+++ b/scripts/miscellaneous/list_primes.m
@@ -75,9 +75,9 @@ function retval = list_primes (n)
     if (is_prime)
       retval (i++) = p;
       n--;
     endif
     p = p + 2;
 
   endwhile
 
-endfunction
\ No newline at end of file
+endfunction
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -81,11 +81,8 @@ function mplot (...)
     xo = (multiplot_xi - 1.0)*multiplot_xsize;
     yo = (multiplot_yn - multiplot_yi)*multiplot_ysize;
 
     eval (sprintf ("set origin %g, %g", xo,yo));
 
   endif
 
 endfunction
-
-
-
diff --git a/scripts/set/complement.m b/scripts/set/complement.m
--- a/scripts/set/complement.m
+++ b/scripts/set/complement.m
@@ -44,9 +44,8 @@ function y = complement (a, b)
       if (all (a != b (index)))
         y(yindex++) = b(index);
       endif
     endfor
     y = y(1:(yindex-1));
   endif
 
 endfunction
-
diff --git a/scripts/set/create_set.m b/scripts/set/create_set.m
--- a/scripts/set/create_set.m
+++ b/scripts/set/create_set.m
@@ -49,9 +49,8 @@ function y = create_set(x)
         y(yindex++) = cur_val;
       endif
       xindex++;
     endwhile
     y = y(1:(yindex-1));
   endif
 
 endfunction
-
diff --git a/scripts/signal/fftfilt.m b/scripts/signal/fftfilt.m
--- a/scripts/signal/fftfilt.m
+++ b/scripts/signal/fftfilt.m
@@ -90,14 +90,8 @@ function y = fftfilt (b, x, N)
   if (! (any (imag (x)) || any (imag (b))))
     y = real (y);
   endif
   if (! (any (x - round (x)) || any (b - round (b))))
     y = round (y);
   endif
 
 endfunction
-
-
-
-
-
-
diff --git a/scripts/specfun/beta.m b/scripts/specfun/beta.m
--- a/scripts/specfun/beta.m
+++ b/scripts/specfun/beta.m
@@ -30,9 +30,8 @@ function retval = beta (a, b)
 
   if (nargin != 2)
     usage ("beta (a, b)");
   endif
 
   retval = exp (lgamma (a) + lgamma (b) - lgamma (a+b));
 
 endfunction
-
diff --git a/scripts/statistics/ols.m b/scripts/statistics/ols.m
--- a/scripts/statistics/ols.m
+++ b/scripts/statistics/ols.m
@@ -63,9 +63,8 @@ function [BETA, SIGMA, R] = ols (Y, X)
   else
     BETA = pinv (X) * Y;
   endif
 
   R = Y - X * BETA;
   SIGMA = R' * R / (nr - r);
 
 endfunction
-
diff --git a/scripts/strings/blanks.m b/scripts/strings/blanks.m
--- a/scripts/strings/blanks.m
+++ b/scripts/strings/blanks.m
@@ -33,12 +33,8 @@ function s = blanks (n)
 
   if (is_scalar (n) && n > 0 && n == round (n))
     s = setstr (ones (1, n) * toascii (" "));
   else
     error ("blanks: n must be a positive integer");
   endif
 
 endfunction
-
-
-
-
diff --git a/scripts/strings/dec2bin.m b/scripts/strings/dec2bin.m
--- a/scripts/strings/dec2bin.m
+++ b/scripts/strings/dec2bin.m
@@ -57,9 +57,8 @@ function y = dec2bin (x)
     endfor
     y = fliplr (y);
     y = setstr (y + toascii ("0"));
   unwind_protect_cleanup
     empty_list_elements_ok = eleo;
   end_unwind_protect
 
 endfunction
-
