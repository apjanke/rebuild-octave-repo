# HG changeset patch
# User Rik <rik@octave.org>
# Date 1378402449 25200
#      Thu Sep 05 10:34:09 2013 -0700
# Node ID 15e2ad6372f75c9d74278cd09ddd64ec1deff9f2
# Parent  f0e3d3de5c2202829c86c4675975ca7de4f2a199
maint: Tweaks to remove compiler warnings.

* libgui/src/find-files-model.cc(rowCount, columnCount): Eliminate unused input
parameter p.

* libinterp/corefcn/octave-link.cc(F__octave_link_file_dialog__):  Use signed int
in for loop index for comparison to octave_idx_type.

* libinterp/corefcn/txt-eng-ft.cc(ft_render::visit): Initialize all of
mbstate_t structure (not just first field) with memset() to 0.

* libinterp/parse-tree/oct-parse.in.yy(F__parse_file__): Remove unused nargout
parameter.

diff --git a/libgui/src/find-files-model.cc b/libgui/src/find-files-model.cc
--- a/libgui/src/find-files-model.cc
+++ b/libgui/src/find-files-model.cc
@@ -106,23 +106,23 @@ find_files_model::addFile (const QFileIn
     }
 
   _files.insert (it, info);
 
   endInsertRows (); 
 }
 
 int 
-find_files_model::rowCount (const QModelIndex & p) const
+find_files_model::rowCount (const QModelIndex &) const
 {
   return _files.size();
 }
 
 int 
-find_files_model::columnCount (const QModelIndex & p) const
+find_files_model::columnCount (const QModelIndex &) const
 {
   return _columnNames.size ();
 }
 
 QVariant 
 find_files_model::data (const QModelIndex& idx, int role) const
 {
   QVariant retval;
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -250,17 +250,17 @@ Undocumented internal function.\n\
           else
             {
               // Multiple files.
               nel = items_lst.size () - 2;
               Cell items (dim_vector (1, nel));
 
               std::list<std::string>::iterator it = items_lst.begin ();
 
-              for (unsigned int idx = 0; idx < nel; idx++)
+              for (int idx = 0; idx < nel; idx++)
                 {
                   items.xelem (idx) = *it;
                   it++;
                 }
 
               retval(0) = items;
               retval(1) = *it++;
               retval(2) = atoi (it->c_str ());
diff --git a/libinterp/corefcn/txt-eng-ft.cc b/libinterp/corefcn/txt-eng-ft.cc
--- a/libinterp/corefcn/txt-eng-ft.cc
+++ b/libinterp/corefcn/txt-eng-ft.cc
@@ -37,18 +37,18 @@ along with Octave; see the file COPYING.
 #include <utility>
 
 #include "singleton-cleanup.h"
 
 #include "error.h"
 #include "pr-output.h"
 #include "txt-eng-ft.h"
 
-// FIXME -- maybe issue at most one warning per glyph/font/size/weight
-// combination.
+// FIXME: maybe issue at most one warning per glyph/font/size/weight
+//        combination.
 
 static void
 gripe_missing_glyph (FT_ULong c)
 {
   warning_with_id ("Octave:missing-glyph",
                    "ft_render: skipping missing glyph for character '%x'",
                    c);
 }
@@ -57,20 +57,20 @@ static void
 gripe_glyph_render (FT_ULong c)
 {
   warning_with_id ("Octave:glyph-render",
                    "ft_render: unable to render glyph for character '%x'",
                    c);
 }
 
 #ifdef _MSC_VER
-// This is just a trick to avoid multiply symbols definition.
+// This is just a trick to avoid multiple symbol definitions.
 // PermMatrix.h contains a dllexport'ed Array<octave_idx_type>
-// that will make MSVC not to generate new instantiation and
-// use the imported one.
+// that will cause MSVC not to generate a new instantiation and
+// use the imported one instead.
 #include "PermMatrix.h"
 #endif
 
 // Forward declaration
 static void ft_face_destroyed (void* object);
 
 class
 ft_manager
@@ -149,18 +149,17 @@ private:
     }
 
   ~ft_manager (void)
     {
       if (freetype_initialized)
         FT_Done_FreeType (library);
 
 #if defined (HAVE_FONTCONFIG)
-      // FIXME -- Skip the call to FcFini because it can trigger the
-      // assertion
+      // FIXME: Skip the call to FcFini because it can trigger the assertion
       //
       //   octave: fccache.c:507: FcCacheFini: Assertion 'fcCacheChains[i] == ((void *)0)' failed.
       //
       // if (fontconfig_initialized)
       //   FcFini ();
 #endif
     }
 
@@ -220,17 +219,17 @@ private:
           if (FcConfigSubstitute (0, pat, FcMatchPattern))
             {
               FcResult res;
               FcPattern *match;
 
               FcDefaultSubstitute (pat);
               match = FcFontMatch (0, pat, &res);
 
-              // FIXME -- originally, this test also required that
+              // FIXME: originally, this test also required that
               // res != FcResultNoMatch.  Is that really needed?
               if (match)
                 {
                   unsigned char *tmp;
 
                   FcPatternGetString (match, FC_FILE, 0, &tmp);
                   file = reinterpret_cast<char*> (tmp);
                 }
@@ -279,18 +278,17 @@ private:
 
       return retval;
     }
 
   void do_font_destroyed (FT_Face face)
     {
       if (face->generic.data)
         {
-          ft_key* pkey =
-            reinterpret_cast<ft_key*> (face->generic.data);
+          ft_key* pkey = reinterpret_cast<ft_key*> (face->generic.data);
 
           cache.erase (*pkey);
           delete pkey;
           face->generic.data = 0;
         }
     }
 
 private:
@@ -629,17 +627,18 @@ void
 ft_render::visit (text_element_string& e)
 {
   if (font.is_valid ())
     {
       FT_UInt glyph_index, previous = 0;
 
       std::string str = e.string_value ();
       size_t n = str.length (), curr = 0;
-      mbstate_t ps = { 0 };
+      mbstate_t ps;
+      memset (&ps, 0, sizeof (ps));  // Initialize state to 0.
       wchar_t wc;
 
       while (n > 0)
         {
           size_t r = gnulib::mbrtowc (&wc, str.data () + curr, n, &ps);
 
           if (r > 0
               && r != static_cast<size_t> (-1)
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -4431,17 +4431,17 @@ Undocumented internal function.\n\
   retval = set_internal_variable (debug_flag, args, nargout,
                                   "__parser_debug_flag__");
 
   octave_debug = debug_flag;
 
   return retval;
 }
 
-DEFUN (__parse_file__, args, nargout,
+DEFUN (__parse_file__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __parse_file__ (@var{file}, @var{verbose})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
