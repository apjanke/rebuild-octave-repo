# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1245650184 -7200
#      Mon Jun 22 07:56:24 2009 +0200
# Branch release-3-2-x
# Node ID ff8c445edeb4b9ecdd861de5ed339e4efde5ebc0
# Parent  10fb62b821088454869314b4b5a60a906807a054
fix null assign test

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-22  Jaroslav Hajek  <highegg@gmail.com>
+
+	* test_null_assign.m: Fix test.
+
 	2009-05-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	Version 3.2.0 released.
 
 2009-04-17  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
 	* test_struct.m: Add tests to prevent regression of bug with
 	indexed assignment into empty struct array.
diff --git a/test/test_null_assign.m b/test/test_null_assign.m
--- a/test/test_null_assign.m
+++ b/test/test_null_assign.m
@@ -52,12 +52,12 @@
 %! a = ones (3); b.x = []; fail ("a(:,1:3) = b.x", ".")
 
 % filtering a null matrix through a function should not delete
 %!test
 %! a = ones (3); fail ("a(:,1:3) = double ([])")
 
 % subsasgn should work the same way
 %!test
-%! a = ones (3); subsasgn (a, substruct ('()', {':',1:2}), []); assert (size (a), [3,1])
+%! a = ones (3); a = subsasgn (a, substruct ('()', {':',1:2}), []); assert (size (a), [3,1])
 %!test
 %! a = ones (3); b = []; fail ("subsasgn (a, substruct ('()', {':',1:2}), b)", ".")
 
