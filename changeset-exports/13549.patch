# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311761459 -7200
#      Wed Jul 27 12:10:59 2011 +0200
# Node ID 807e5e9b759141f9a1758b17daff49ccbdf12af0
# Parent  5c2ea445e100e7d0ee493a3e15dbc2387a9e7cca
Added lots of status tips.

diff --git a/gui/src/FilesDockWidget.cpp b/gui/src/FilesDockWidget.cpp
--- a/gui/src/FilesDockWidget.cpp
+++ b/gui/src/FilesDockWidget.cpp
@@ -38,17 +38,20 @@ FilesDockWidget::FilesDockWidget (QWidge
   m_navigationToolBar->setMovable (false);
   m_navigationToolBar->setIconSize (QSize (20, 20));
 
   // Add a button to the toolbar with the QT standard icon for up-directory
   // TODO: Maybe change this to be an up-directory icon that is OS specific???
   QStyle *style = QApplication::style ();
   m_directoryIcon = style->standardIcon (QStyle::SP_FileDialogToParent);
   m_directoryUpAction = new QAction (m_directoryIcon, "", m_navigationToolBar);
+  m_directoryUpAction->setStatusTip (tr ("Move up one directory."));
+
   m_currentDirectory = new QLineEdit (m_navigationToolBar);
+  m_currentDirectory->setStatusTip (tr ("Enter the path or filename."));
 
   m_navigationToolBar->addAction (m_directoryUpAction);
   m_navigationToolBar->addWidget (m_currentDirectory);
   connect (m_directoryUpAction, SIGNAL (triggered ()), this,
 	   SLOT (onUpDirectory ()));
 
   // TODO: Add other buttons for creating directories
 
@@ -67,16 +70,18 @@ FilesDockWidget::FilesDockWidget (QWidge
   m_fileTreeView->setModel (m_fileSystemModel);
   m_fileTreeView->setRootIndex (rootPathIndex);
   m_fileTreeView->setSortingEnabled (true);
   m_fileTreeView->setAlternatingRowColors (true);
   m_fileTreeView->setAnimated (true);
   m_fileTreeView->setColumnHidden (1, true);
   m_fileTreeView->setColumnHidden (2, true);
   m_fileTreeView->setColumnHidden (3, true);
+  m_fileTreeView->setStatusTip (tr ("Doubleclick a file to open it."));
+
   setCurrentDirectory (m_fileSystemModel->fileInfo (rootPathIndex).
 		       absoluteFilePath ());
 
   connect (m_fileTreeView, SIGNAL (doubleClicked (const QModelIndex &)), this,
 	   SLOT (itemDoubleClicked (const QModelIndex &)));
 
   // Layout the widgets vertically with the toolbar on top
   QVBoxLayout *
diff --git a/gui/src/HistoryDockWidget.cpp b/gui/src/HistoryDockWidget.cpp
--- a/gui/src/HistoryDockWidget.cpp
+++ b/gui/src/HistoryDockWidget.cpp
@@ -28,17 +28,19 @@ HistoryDockWidget::HistoryDockWidget (QW
 void
 HistoryDockWidget::construct ()
 {
   m_sortFilterProxyModel.setSourceModel(OctaveLink::instance ()->historyModel());
   m_historyListView = new QListView (this);
   m_historyListView->setModel (&m_sortFilterProxyModel);
   m_historyListView->setAlternatingRowColors (true);
   m_historyListView->setEditTriggers (QAbstractItemView::NoEditTriggers);
+  m_historyListView->setStatusTip (tr ("Doubleclick a command to transfer it to the terminal."));
   m_filterLineEdit = new QLineEdit (this);
+  m_filterLineEdit->setStatusTip (tr ("Enter text to filter the command history."));
   QVBoxLayout *layout = new QVBoxLayout ();
 
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
   layout->addWidget (m_historyListView);
   layout->addWidget (m_filterLineEdit);
   layout->setMargin (2);
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -217,53 +217,57 @@ MainWindow::construct ()
 
   // Initialize MDI area.
   m_centralMdiArea = new QMdiArea (this);
   m_centralMdiArea->setObjectName ("CentralMdiArea");
   m_centralMdiArea->setViewMode (QMdiArea::TabbedView);
 
   // Setup dockable widgets and the status bar.
   m_variablesDockWidget = new VariablesDockWidget (this);
+  m_variablesDockWidget->setStatusTip (tr ("View the variables in the active workspace."));
   m_historyDockWidget = new HistoryDockWidget (this);
+  m_historyDockWidget->setStatusTip (tr ("Browse and search the command history."));
   m_filesDockWidget = new FilesDockWidget (this);
+  m_filesDockWidget->setStatusTip (tr ("Browse your files."));
   m_statusBar = new QStatusBar (this);
 
   // Setup essential MDI Windows.
   m_octaveTerminal = new OctaveTerminal (this);
   m_documentationWidget = new BrowserWidget (this);
   m_ircWidget = new IRCWidget (this);
 
   m_octaveTerminal->openTerminal ();
 
   m_documentationWidgetSubWindow =
     m_centralMdiArea->addSubWindow (m_documentationWidget,
 				    Qt::WindowTitleHint | Qt::
 				    WindowMinMaxButtonsHint);
-  m_documentationWidgetSubWindow->
-    setObjectName ("DocumentationWidgetSubWindow");
+  m_documentationWidgetSubWindow->setObjectName ("DocumentationWidgetSubWindow");
   m_documentationWidgetSubWindow->setWindowTitle (tr ("Documentation"));
-  m_documentationWidgetSubWindow->
-    setWindowIcon (QIcon ("../media/help_index.png"));
+  m_documentationWidgetSubWindow->setWindowIcon (QIcon ("../media/help_index.png"));
+  m_documentationWidgetSubWindow->setStatusTip (tr ("Browse the Octave documentation for help."));
 
   m_octaveTerminalSubWindow =
     m_centralMdiArea->addSubWindow (m_octaveTerminal,
 				    Qt::WindowTitleHint | Qt::
 				    WindowMinMaxButtonsHint);
   m_octaveTerminalSubWindow->setObjectName ("OctaveTerminalSubWindow");
   m_octaveTerminalSubWindow->setWindowTitle (tr ("Terminal"));
   m_octaveTerminalSubWindow->setWindowIcon (QIcon ("../media/terminal.png"));
+  m_octaveTerminalSubWindow->setStatusTip (tr ("Enter your commands into the Octave terminal."));
 
   m_ircWidgetSubWindow = m_centralMdiArea->addSubWindow (m_ircWidget,
 							 Qt::
 							 WindowTitleHint |
 							 Qt::
 							 WindowMinMaxButtonsHint);
   m_ircWidgetSubWindow->setObjectName ("ChatWidgetSubWindow");
   m_ircWidgetSubWindow->setWindowTitle (tr ("Chat"));
   m_ircWidgetSubWindow->setWindowIcon (QIcon ("../media/chat.png"));
+  m_ircWidgetSubWindow->setStatusTip(tr ("Instantly chat with other Octave users for help."));
 
   QMenu *controlMenu = menuBar ()->addMenu (tr ("Octave"));
   QAction *settingsAction = controlMenu->addAction (tr ("Settings"));
   controlMenu->addSeparator ();
   QAction *exitAction = controlMenu->addAction (tr ("Exit"));
 
   QMenu *interfaceMenu = menuBar ()->addMenu (tr ("Interface"));
 
