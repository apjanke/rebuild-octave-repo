# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1456683759 0
#      Sun Feb 28 18:22:39 2016 +0000
# Node ID 8cfc50637511402e5af99922d119aed9820d8a38
# Parent  2f402f7c1a0b781f1ce95e06c98666222a3b5a30
accumarray: fix default output size for empty list of subscripts (bug #47287)

diff --git a/scripts/general/accumarray.m b/scripts/general/accumarray.m
--- a/scripts/general/accumarray.m
+++ b/scripts/general/accumarray.m
@@ -346,17 +346,18 @@ function A = accumarray (subs, vals, sz 
       if (! strcmp (func2str (func), simple_cell_str))
         vals = cellfun (func, vals);
       endif
 
       subs = subs(jdx);
 
       if (isempty (sz))
         sz = max (subs);
-        if (length (sz) == 1)
+        ## If subs is empty, sz will be too, and length will be 0, hence "<= 1"
+        if (length (sz) <= 1)
           sz(2) = 1;
         endif
       endif
 
       ## Construct matrix of fillvals.
       if (iscell (vals))
         A = cell (sz);
       elseif (fillval == 0)
@@ -433,13 +434,14 @@ endfunction
 
 ## Handle empty arrays (bug #47287)
 %!test
 %! ## min, max, and sum are special cases within accumarray so test them.
 %! funcs = {@(x) length (x) > 1, @min, @max, @sum};
 %! for idx = 1:numel (funcs)
 %!   assert (accumarray (zeros (0, 1), [], [0 1] , funcs{idx}), zeros (0, 1))
 %!   assert (accumarray (zeros (0, 1), [], [1 0] , funcs{idx}), zeros (1, 0))
+%!   assert (accumarray (zeros (0, 1), [], [] , funcs{idx}), zeros (0, 1))
 %! endfor
 
 ## Matlab returns an array of doubles even though FUNC returns cells.  In
 ## Octave, we do not have that bug, at least for this case.
 %!assert (accumarray (zeros (0, 1), [], [0 1] , @(x) {x}), cell (0, 1))
