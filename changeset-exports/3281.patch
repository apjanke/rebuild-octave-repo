# HG changeset patch
# User jwe
# Date 939798323 0
#      Wed Oct 13 07:05:23 1999 +0000
# Node ID aaaa20d31a5feb4d9f9ffa0a5efa4e4851160faf
# Parent  46b82fca02fcc7819a460d254b632fc80cdf45be
[project @ 1999-10-13 07:02:46 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+1999-10-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* cmd-edit.h (command_editor::do_resize_terminal): New function.
+	* cmd-edit.cc (command_editor::resize_terminal): New function.
+	(gnu_readline::do_resize_terminal): New function.
+
 Fri Sep  3 12:39:17 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-mappers.cc: Include ieeefp.h and sunmath.h if we have them.
 	* lo-ieee.c: Likewise.
 	Delete extern "C" declarations for infinity and quiet_nan.
 
 Fri Aug 20 07:58:00 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/liboctave/cmd-edit.cc b/liboctave/cmd-edit.cc
--- a/liboctave/cmd-edit.cc
+++ b/liboctave/cmd-edit.cc
@@ -86,16 +86,18 @@ public:
   FILE *do_get_output_stream (void);
 
   int do_terminal_rows (void);
 
   int do_terminal_cols (void);
 
   void do_clear_screen (void);
 
+  void do_resize_terminal (void);
+
   string newline_chars (void);
 
   void do_restore_terminal_state (void);
 
   void do_blink_matching_paren (bool flag);
 
   void do_set_basic_quote_characters (const string& s);
 
@@ -242,16 +244,22 @@ gnu_readline::do_terminal_cols (void)
 }
 
 void
 gnu_readline::do_clear_screen (void)
 {
   rl_clear_screen ();
 }
 
+void
+gnu_readline::do_resize_terminal (void)
+{
+  rl_resize_terminal ();
+}
+
 string
 gnu_readline::newline_chars (void)
 {
   return "\r\n";
 }
 
 void
 gnu_readline::do_restore_terminal_state (void)
@@ -589,16 +597,23 @@ command_editor::terminal_cols (void)
 
 void
 command_editor::clear_screen (void)
 {
   if (instance_ok ())
     instance->do_clear_screen ();
 }
 
+void
+command_editor::resize_terminal (void)
+{
+  if (instance_ok ())
+    instance->do_resize_terminal ();
+}
+
 string
 command_editor::decode_prompt_string (const string& s)
 {
   return (instance_ok ())
     ? instance->do_decode_prompt_string (s) : string ();
 }
 
 int
diff --git a/liboctave/cmd-edit.h b/liboctave/cmd-edit.h
--- a/liboctave/cmd-edit.h
+++ b/liboctave/cmd-edit.h
@@ -58,16 +58,18 @@ public:
   static FILE *get_output_stream (void);
 
   static int terminal_rows (void);
 
   static int terminal_cols (void);
 
   static void clear_screen (void);
 
+  static void resize_terminal (void);
+
   static string decode_prompt_string (const string& s);
 
   static void restore_terminal_state (void);
 
   static void blink_matching_paren (bool flag);
 
   static void set_basic_quote_characters (const string& s);
 
@@ -140,16 +142,18 @@ protected:
   virtual FILE *do_get_output_stream (void) = 0;
 
   virtual int do_terminal_rows (void) { return 24; }
 
   virtual int do_terminal_cols (void) { return 80; }
 
   virtual void do_clear_screen (void) { }
 
+  virtual void do_resize_terminal (void) { }
+
   virtual string do_decode_prompt_string (const string&);
 
   virtual string newline_chars (void) { return "\n"; } 
 
   virtual void do_restore_terminal_state (void) { }
 
   virtual void do_blink_matching_paren (bool) { }
 
diff --git a/readline/ChangeLog b/readline/ChangeLog
--- a/readline/ChangeLog
+++ b/readline/ChangeLog
@@ -1,8 +1,12 @@
+1999-10-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* terminal.c (rl_resize_terminal): Import from readline 4.0.
+
 Thu May 27 21:47:26 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* histfile.c [__CYGWIN__]: Define O_BINARY if not already defined.
 
 Mon Aug 31 12:07:02 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* config.sub: Accept armv4 everywhere arm is allowed.
 
diff --git a/readline/readline.h b/readline/readline.h
--- a/readline/readline.h
+++ b/readline/readline.h
@@ -202,16 +202,17 @@ extern int crlf ();
 
 /* Modifying text. */
 extern int rl_insert_text (), rl_delete_text ();
 extern int rl_kill_text ();
 extern char *rl_copy_text ();
 
 /* `Public' utility functions. */
 extern int rl_reset_terminal ();
+extern void rl_resize_terminal ();
 extern int rl_stuff_char ();
 extern int rl_read_key (), rl_getc ();
 
 extern int rl_initialize ();
 
 /* Undocumented. */
 extern int rl_expand_prompt ();
 extern int rl_set_signals (), rl_clear_signals ();
diff --git a/readline/terminal.c b/readline/terminal.c
--- a/readline/terminal.c
+++ b/readline/terminal.c
@@ -227,16 +227,26 @@ void
   screenwidth = cols;
 
   if (_rl_term_autowrap == 0)
     screenwidth--;
 
   screenchars = screenwidth * screenheight;
 }
 
+void
+rl_resize_terminal ()
+{
+  if (readline_echoing_p)
+    {
+      _rl_get_screen_size (fileno (rl_instream), 1);
+      _rl_redisplay_after_sigwinch ();
+    }
+}
+
 struct _tc_string {
      char *tc_var;
      char **tc_value;
 };
 
 /* This should be kept sorted, just in case we decide to change the
    search algorithm to something smarter. */
 static struct _tc_string tc_strings[] =
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+1999-10-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sighandlers.cc (sigwinch_handler): New function.
+	(install_signal_handlers): Install it.
+
 Thu Sep 23 19:49:36 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* toplev.cc (Fsystem): For async case, use execl instead of
 	system, avoiding the need to exit after executing the subprocess.
 
 Thu Sep  9 17:09:23 1999  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-stream.cc (get_size): Allow zero values.
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -33,16 +33,18 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
+#include "cmd-edit.h"
+
 #include "error.h"
 #include "load-save.h"
 #include "pager.h"
 #include "sighandlers.h"
 #include "syswait.h"
 #include "toplev.h"
 #include "utils.h"
 
@@ -262,16 +264,30 @@ sigfpe_handler (int /* sig */)
       jump_to_top_level ();
       panic_impossible ();
     }
 
   SIGHANDLER_RETURN (0);
 }
 #endif
 
+#if defined (SIGWINCH)
+static RETSIGTYPE
+sigwinch_handler (int /* sig */)
+{
+  MAYBE_ACK_SIGNAL (SIGWINCH);
+
+  MAYBE_REINSTALL_SIGHANDLER (SIGWINCH, sigwinch_handler);
+
+  command_editor::resize_terminal ();
+
+  SIGHANDLER_RETURN (0);
+}
+#endif
+
 // Handle SIGINT by restarting the parser (see octave.cc).
 //
 // This also has to work for SIGBREAK (on systems that have it), so we
 // use the value of sig, instead of just assuming that it is called
 // for SIGINT only.
 
 static RETSIGTYPE
 #if defined (ACK_USES_SIG) || defined (REINSTALL_USES_SIG)
@@ -470,17 +486,19 @@ install_signal_handlers (void)
 #ifdef SIGVTALRM
   octave_set_signal_handler (SIGVTALRM, generic_sig_handler);
 #endif
 
 #ifdef SIGIO
   octave_set_signal_handler (SIGIO, SIG_IGN);
 #endif
 
-  // SIGWINCH
+#ifdef SIGWINCH
+  octave_set_signal_handler (SIGWINCH, sigwinch_handler);
+#endif
 
 #ifdef SIGXCPU
   octave_set_signal_handler (SIGXCPU, generic_sig_handler);
 #endif
 
 #ifdef SIGXFSZ
   octave_set_signal_handler (SIGXFSZ, generic_sig_handler);
 #endif
