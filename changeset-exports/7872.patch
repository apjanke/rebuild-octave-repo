# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1212691312 14400
#      Thu Jun 05 14:41:52 2008 -0400
# Node ID 1b63f8da772d677f0f71af4a4dec614dda995c04
# Parent  ab9fc4e3cdca2d4e8eb2aba095fa9be61a8472a8
fix unloading of mex files

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-06-05  John W. Eaton  <jwe@octave.org>
+
+	* oct-shlib.cc (octave_base_shlib::remove): Only dereference
+	counter if iterator is valid.
+
 2008-06-02  David Bateman  <dbateman@free.fr>
 
 	* fCmplxDET.cc (FloatComplexDET::value_will_overflow,
 	FloatComplexDET:value_will_underflow): Replace DBL_MIN and DBL_MAX
 	with FLT_MIN and FLT_MAX.
 	* floatDET.cc ((FloatDET::value_will_overflow,
 	FloatDET:value_will_underflow): Ditto.
 	* lo-cieee.c (__lo_ieee_float_is_NA): Check only a sngle word for
diff --git a/liboctave/oct-shlib.cc b/liboctave/oct-shlib.cc
--- a/liboctave/oct-shlib.cc
+++ b/liboctave/oct-shlib.cc
@@ -131,17 +131,17 @@ protected:
 
 bool
 octave_base_shlib::remove (const std::string& fcn_name)
 {
   bool retval = false;
 
   fcn_names_iterator p = fcn_names.find (fcn_name);
 
-  if (--(p->second) == 0)
+  if (p != fcn_names.end () && --(p->second) == 0)
     {
       fcn_names.erase (fcn_name);
       retval = true;
     }
 
   return retval;
 }
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,19 @@
 2008-06-05  John W. Eaton  <jwe@octave.org>
 
+	* dynamic-ld.cc (octave_dynamic_loader::mex_mangler,
+	octave_dynamic_loader::mex_uscore_mangler,
+	octave_dynamic_loader::mex_f77_mangler): New functions.
+	(octave_dynamic_loader::do_load_mex): Use them.
+	(octave_dynamic_loader::do_remove_oct): Rename from
+	octave_dynamic_loader::do_remove.
+	(octave_dynamic_loader::do_remove_mex): New function.
+	* dynamic-ld.h: Provide/fix decls.
+
 	* graphics.cc (properties::update_normals): Style fixes.
 	* graphics.h.in: Style fixes.
 
 2008-06-04  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* graphics.cc (axes::properties::set_defaults): Preserve position
 	if mode is replace.
 	(axes::properties::sync_positions): Use default_axes_postion for
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -415,28 +415,29 @@ octave_dynamic_loader::do_load_mex (cons
       mex_file.open (mex_file_name);
 
       if (! error_state)
 	{
 	  if (mex_file)
 	    {
 	      octave_mex_file_list::append (mex_file);
 
-	      function = mex_file.search ("mexFunction");
+	      function = mex_file.search (fcn_name, mex_mangler);
 
 	      if (! function)
 		{
 		  // FIXME -- can we determine this C mangling scheme
 		  // automatically at run time or configure time?
 
-		  function = mex_file.search ("_mexFunction");
+		  function = mex_file.search (fcn_name, mex_uscore_mangler);
 
 		  if (! function)
 		    {
-		      function = mex_file.search (STRINGIFY (F77_FUNC (mexfunction, MEXFUNCTION)));
+		      function = mex_file.search (fcn_name, mex_f77_mangler);
+
 		      if (function)
 			have_fmex = true;
 		    }
 		}
 	    }
 	  else
 	    ::error ("%s is not a valid shared library",
 		     mex_file_name.c_str ());
@@ -449,17 +450,18 @@ octave_dynamic_loader::do_load_mex (cons
     ::error ("failed to install .mex file function `%s'", fcn_name.c_str ());
   
   unwind_protect::run_frame ("octave_dynamic_loader::do_load");
 
   return retval;
 }
 
 bool
-octave_dynamic_loader::do_remove (const std::string& fcn_name, octave_shlib& shl)
+octave_dynamic_loader::do_remove_oct (const std::string& fcn_name,
+				      octave_shlib& shl)
 {
   bool retval = false;
 
   // We don't need to do anything if this is called because we are in
   // the process of reloading a .oct file that has changed.
 
   if (! doing_load)
     {
@@ -467,16 +469,36 @@ octave_dynamic_loader::do_remove (const 
 
       if (shl.number_of_functions_loaded () == 0)
 	octave_shlib_list::remove (shl);
     }
 
   return retval;
 }
 
+bool
+octave_dynamic_loader::do_remove_mex (const std::string& fcn_name,
+				      octave_shlib& shl)
+{
+  bool retval = false;
+
+  // We don't need to do anything if this is called because we are in
+  // the process of reloading a .oct file that has changed.
+
+  if (! doing_load)
+    {
+      retval = shl.remove (fcn_name);
+
+      if (shl.number_of_functions_loaded () == 0)
+	octave_mex_file_list::remove (shl);
+    }
+
+  return retval;
+}
+
 octave_function *
 octave_dynamic_loader::load_oct (const std::string& fcn_name,
 				  const std::string& file_name,
 				  bool relative)
 {
   return (instance_ok ())
     ? instance->do_load_oct (fcn_name, file_name, relative) : 0;
 }
@@ -486,19 +508,27 @@ octave_dynamic_loader::load_mex (const s
 				  const std::string& file_name,
 				  bool relative)
 {
   return (instance_ok ())
     ? instance->do_load_mex (fcn_name, file_name, relative) : 0;
 }
 
 bool
-octave_dynamic_loader::remove (const std::string& fcn_name, octave_shlib& shl)
+octave_dynamic_loader::remove_oct (const std::string& fcn_name,
+				   octave_shlib& shl)
 {
-  return (instance_ok ()) ? instance->do_remove (fcn_name, shl) : false;
+  return (instance_ok ()) ? instance->do_remove_oct (fcn_name, shl) : false;
+}
+
+bool
+octave_dynamic_loader::remove_mex (const std::string& fcn_name,
+				   octave_shlib& shl)
+{
+  return (instance_ok ()) ? instance->do_remove_mex (fcn_name, shl) : false;
 }
 
 std::string
 octave_dynamic_loader::mangle_name (const std::string& name)
 {
 #if defined (CXX_PREPENDS_UNDERSCORE)
   std::string retval ("_FS");
 #else
@@ -519,13 +549,31 @@ octave_dynamic_loader::xmangle_name (con
   std::string retval ("G");
 #endif
   retval.append (name);
   retval.append ("_");
   retval.append (STRINGIFY (CXX_ABI));
   return retval;
 }
 
+std::string
+octave_dynamic_loader::mex_mangler (const std::string&)
+{
+  return "mexFunction";
+}
+
+std::string
+octave_dynamic_loader::mex_uscore_mangler (const std::string&)
+{
+  return "_mexFunction";
+}
+
+std::string
+octave_dynamic_loader::mex_f77_mangler (const std::string&)
+{
+  return STRINGIFY (F77_FUNC (mexfunction, MEXFUNCTION));
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/dynamic-ld.h b/src/dynamic-ld.h
--- a/src/dynamic-ld.h
+++ b/src/dynamic-ld.h
@@ -46,17 +46,19 @@ public:
 	     const std::string& file_name = std::string (),
 	     bool relative = false);
 
   static octave_function *
   load_mex (const std::string& fcn_name,
 	     const std::string& file_name = std::string (),
 	     bool relative = false);
 
-  static bool remove (const std::string& fcn_name, octave_shlib& shl);
+  static bool remove_oct (const std::string& fcn_name, octave_shlib& shl);
+
+  static bool remove_mex (const std::string& fcn_name, octave_shlib& shl);
 
 private:
 
   // No copying!
 
   octave_dynamic_loader (const octave_dynamic_loader&);
 
   octave_dynamic_loader& operator = (const octave_dynamic_loader&);
@@ -70,25 +72,33 @@ private:
 		const std::string& file_name = std::string (),
 		bool relative = false);
 
   octave_function *
   do_load_mex (const std::string& fcn_name,
 		const std::string& file_name = std::string (),
 		bool relative = false);
 
-  bool do_remove (const std::string& fcn_name, octave_shlib& shl);
+  bool do_remove_oct (const std::string& fcn_name, octave_shlib& shl);
+
+  bool do_remove_mex (const std::string& fcn_name, octave_shlib& shl);
 
   static bool doing_load;
 
 protected:
 
   static std::string mangle_name (const std::string& name);
 
   static std::string xmangle_name (const std::string& name);
+
+  static std::string mex_mangler (const std::string& name);
+
+  static std::string mex_uscore_mangler (const std::string& name);
+
+  static std::string mex_f77_mangler (const std::string& name);
 };
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/ov-dld-fcn.cc b/src/ov-dld-fcn.cc
--- a/src/ov-dld-fcn.cc
+++ b/src/ov-dld-fcn.cc
@@ -52,17 +52,17 @@ octave_dld_function::octave_dld_function
 
   system_fcn_file
     = (! file_name.empty ()
        && Voct_file_dir == file_name.substr (0, Voct_file_dir.length ()));
 }
 
 octave_dld_function::~octave_dld_function (void)
 {
-  octave_dynamic_loader::remove (my_name, sh_lib);
+  octave_dynamic_loader::remove_oct (my_name, sh_lib);
 }
 
 std::string
 octave_dld_function::fcn_file_name (void) const
 {
   return sh_lib.file_name ();
 }
 
diff --git a/src/ov-mex-fcn.cc b/src/ov-mex-fcn.cc
--- a/src/ov-mex-fcn.cc
+++ b/src/ov-mex-fcn.cc
@@ -55,17 +55,17 @@ octave_mex_function::octave_mex_function
        && Voct_file_dir == file_name.substr (0, Voct_file_dir.length ()));
 }
 
 octave_mex_function::~octave_mex_function (void)
 {
   if (exit_fcn_ptr)
     (*exit_fcn_ptr) ();
 
-  octave_dynamic_loader::remove (my_name, sh_lib);
+  octave_dynamic_loader::remove_mex (my_name, sh_lib);
 }
 
 std::string
 octave_mex_function::fcn_file_name (void) const
 {
   return sh_lib.file_name ();
 }
 
