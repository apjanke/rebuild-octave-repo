# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1324584412 28800
#      Thu Dec 22 12:06:52 2011 -0800
# Branch stable
# Node ID 4804ad4ce0de58cc96e972d118b82b1a5d33079d
# Parent  153581342e47676957a06d0801565620bdfc64c3
Plug memory leak in Matrixtype for sparse permuted matrices.

* Matrixtype.cc: Plug memory leak in Matrixtype for sparse permuted matrices.

diff --git a/liboctave/MatrixType.cc b/liboctave/MatrixType.cc
--- a/liboctave/MatrixType.cc
+++ b/liboctave/MatrixType.cc
@@ -451,21 +451,21 @@ MatrixType::MatrixType (const SparseMatr
       // Disable lower under-determined and upper over-determined problems
       // as being detected, and force to treat as singular. As this seems
       // to cause issues
       if (((typ == MatrixType::Lower || typ == MatrixType::Permuted_Lower)
            && nrows > ncols) ||
           ((typ == MatrixType::Upper || typ == MatrixType::Permuted_Upper)
            && nrows < ncols))
         {
-          typ = MatrixType::Rectangular;
           if (typ == MatrixType::Permuted_Upper ||
               typ == MatrixType::Permuted_Lower)
             delete [] perm;
           nperm = 0;
+          typ = MatrixType::Rectangular;
         }
 
       if (typ == MatrixType::Full && ncols != nrows)
         typ = MatrixType::Rectangular;
 
       if (maybe_hermitian && (typ == MatrixType::Full ||
                               typ == MatrixType::Tridiagonal ||
                               typ == MatrixType::Banded))
@@ -772,21 +772,21 @@ MatrixType::MatrixType (const SparseComp
       // Disable lower under-determined and upper over-determined problems
       // as being detected, and force to treat as singular. As this seems
       // to cause issues
       if (((typ == MatrixType::Lower || typ == MatrixType::Permuted_Lower)
            && nrows > ncols) ||
           ((typ == MatrixType::Upper || typ == MatrixType::Permuted_Upper)
            && nrows < ncols))
         {
-          typ = MatrixType::Rectangular;
           if (typ == MatrixType::Permuted_Upper ||
               typ == MatrixType::Permuted_Lower)
             delete [] perm;
           nperm = 0;
+          typ = MatrixType::Rectangular;
         }
 
       if (typ == MatrixType::Full && ncols != nrows)
         typ = MatrixType::Rectangular;
 
       if (maybe_hermitian && (typ == MatrixType::Full ||
                               typ == MatrixType::Tridiagonal ||
                               typ == MatrixType::Banded))
