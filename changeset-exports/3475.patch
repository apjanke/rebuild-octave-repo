# HG changeset patch
# User jwe
# Date 948835389 0
#      Tue Jan 25 21:23:09 2000 +0000
# Node ID 6293a9d5650acd44b15f94d6d1a99c3d65bc63e3
# Parent  9c68cfa263eb77fe46eada35ea68023e9b4efe4f
[project @ 2000-01-25 21:23:07 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,16 @@
 2000-01-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* configure.in: Don't look for the sunmath library.
+	Don't check for infinity or quiet_nan.
+
+	* emacs/octave-mod.el (octave-mode-syntax-table):
+	Undo previous change, but add a comment explaining why.
+
 	* install-octave.in: Exit on any error instead of continuing.
 	Install Octave binary last.
 
 2000-01-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* emacs/octave-mod.el (octave-mode-syntax-table):
 	Make `%' a comment start character too.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.321 $)
+AC_REVISION($Revision: 1.322 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -903,41 +903,33 @@ dnl   AC_CHECK_FUNCS(finite isnan isinf)
 dnl
 dnl instead, but that used to fail on some systems...
 dnl
 dnl Also just using AC_CHECK_FUNCS doesn't seem to work to find isinf
 dnl and isnan on Linux systems, so we use AC_CHECK_FUNC, and if that
 dnl fails, we try again by including math.h and invoking the function
 dnl with an argument. 
 
-### Check to see if we have IEEE math functions, and if so, which ones.
-###
-### Also check for some additional trig functions that aren't ANSI but
-### are often available.  If they are missing, we try to replace them
-### with functions from the BSD/NET2 math library.
-
-AC_CHECK_LIB(sunmath, quiet_nan)
-
 ### I am told that Inf and NaN don't work on m68k HP sytems, and that
 ### on SCO systems, isnan and isinf don't work, but they can be
 ### replaced by something that does.
 
 case "$canonical_host_type" in
   m68k-hp-hpux*)
   ;;
   *-*-sco*)
     AC_MSG_RESULT([defining SCO to be 1])
     AC_DEFINE(SCO, 1)
     AC_MSG_RESULT([forcing HAVE_ISINF for SCO])
     AC_DEFINE(HAVE_ISINF, 1)
     AC_MSG_RESULT([forcing HAVE_ISNAN for SCO])
     AC_DEFINE(HAVE_ISNAN, 1)
   ;;
   *)
-    AC_CHECK_FUNCS(finite isnan isinf infinity quiet_nan)
+    AC_CHECK_FUNCS(finite isnan isinf)
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
 AC_CHECK_FUNCS(acosh asinh atanh erf erfc)
 
 ### Checks for OS specific cruft.
diff --git a/emacs/octave-mod.el b/emacs/octave-mod.el
--- a/emacs/octave-mod.el
+++ b/emacs/octave-mod.el
@@ -274,16 +274,25 @@ parenthetical grouping.")
 	["Toggle Auto-Fill Mode"	auto-fill-mode t]
 	"-"
 	["Submit Bug Report"		octave-submit-bug-report t]
 	"-"
 	["Describe Octave Mode"		octave-describe-major-mode t]
 	["Lookup Octave Index"		octave-help t])
   "Menu for Octave mode.")
 
+;; XXX FIXME XXX -- the syntax mode for `%' is punctuation instead of
+;; begin-comment because if it is begin-comment, then typing M-;
+;; (octave-indent-for-comment) on lines like
+;;
+;;  sprintf ("%d", foobar);
+;;
+;; causes them to be improperly indented (the `%' is moved over to the
+;; comment-column).
+
 (defvar octave-mode-syntax-table nil
   "Syntax table in use in octave-mode buffers.")
 (if octave-mode-syntax-table
     ()
   (let ((table (make-syntax-table)))
     (modify-syntax-entry ?\r " "  table)
     (modify-syntax-entry ?+ "."   table)
     (modify-syntax-entry ?- "."   table)
@@ -296,17 +305,17 @@ parenthetical grouping.")
     (modify-syntax-entry ?| "."   table)
     (modify-syntax-entry ?! "."   table)
     (modify-syntax-entry ?\\ "\\" table)
     (modify-syntax-entry ?\' "."  table)
     (modify-syntax-entry ?\` "w"  table)
     (modify-syntax-entry ?\" "\"" table)
     (modify-syntax-entry ?. "w"   table)
     (modify-syntax-entry ?_ "w"   table)
-    (modify-syntax-entry ?\% "<"  table)
+    (modify-syntax-entry ?\% "."  table) ; see above
     (modify-syntax-entry ?\# "<"  table)
     (modify-syntax-entry ?\n ">"  table)
     (setq octave-mode-syntax-table table)))
 
 (defcustom octave-auto-indent nil
   "*Non-nil means indent line after a semicolon or space in Octave mode."
   :type 'boolean
   :group 'octave)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2000-01-25  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* lo-ieee.cc (octave_ieee_init): Don't include sunmath.h.
+	No longer bother with infinity or quiet_nan.
+
 	* Array2.cc (Array2<T>::get_size): New function.
 	(Array2<T>::Array2, Array2<T>::resize): Use it.
 
 2000-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array2-idx.h (Array2<T>::maybe_delete_elements (idx_vector&)):
 	New function.
 	(assign (Array2<LT>& lhs, const Array2<RT>& rhs)):
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -30,20 +30,16 @@ Software Foundation, 59 Temple Place - S
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #include <ieeefp.h>
 #endif
 
-#if defined (HAVE_SUNMATH_H)
-#include <sunmath.h>
-#endif
-
 #if defined (HAVE_NAN_H)
 #if defined (SCO)
 #define _IEEE 1
 #endif
 #include <nan.h>
 #if defined (SCO)
 #undef _IEEE
 #endif
@@ -66,18 +62,16 @@ octave_ieee_init (void)
 // trying to make Inf and NaN.
 
 #if defined (SCO)
   double tmp = 1.0;
   octave_Inf = 1.0 / (tmp - tmp);
 #elif defined (__alpha__) && ! defined (linux)
   extern unsigned int DINFINITY[2];
   octave_Inf =  (*(X_CAST(double *, DINFINITY)));
-#elif defined (HAVE_INFINITY)
-  octave_Inf = infinity ();
 #else
   double tmp = 1e+10;
   octave_Inf = tmp;
   for (;;)
     {
       octave_Inf *= 1e+10;
       if (octave_Inf == tmp)
 	break;
@@ -87,18 +81,16 @@ octave_ieee_init (void)
 
 #endif
 
 #if defined (HAVE_ISNAN)
 
 #if defined (__alpha__) && ! defined (linux)
   extern unsigned int DQNAN[2];
   octave_NaN = (*(X_CAST(double *, DQNAN)));
-#elif defined (HAVE_QUIET_NAN)
-  octave_NaN = quiet_nan (0L);
 #else
   octave_NaN = octave_Inf / octave_Inf;
 #endif
 
 #endif
 }
 
 #if defined (SCO)
