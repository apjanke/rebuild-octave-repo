# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1232900715 -3600
#      Sun Jan 25 17:25:15 2009 +0100
# Node ID 540165304f00d10959e61255f3a2bd25ba86421d
# Parent  f07730ed561303175fbaa3f6c7f82aa10d09051f
Allow displaying 'Contents.m' files.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -85,16 +85,20 @@ 2009-01-17  Jaroslav Hajek  <highegg@gma
 2008-12-24 Ben Abbott <bpabbott@mac.com>
 
 	* path/savepath.m: Respect cmd-line and env paths.
 
 2009-01-24 Ben Abbott <bpabbott@mac.com>
 
 	* sparse/svds.m: svds.m: skip tests if ARPACK is missing.
 
+2009-01-25  Søren Hauberg  <hauberg@gmail.com>
+
+	* help/help.m: Allow displaying 'Contents.m' files.
+
 2009-01-23  Søren Hauberg  <hauberg@gmail.com>
 
 	* help/type.m: Make 'type X' work, when X is the name of a variable.
 
 2009-01-22  John W. Eaton  <jwe@octave.org>
 
 	* help/which.m: New function.
 	* help/Makefile.in (SOURCES): Add it to the list.
diff --git a/scripts/help/help.m b/scripts/help/help.m
--- a/scripts/help/help.m
+++ b/scripts/help/help.m
@@ -56,17 +56,20 @@ function help (name)
     switch (lower (format))
       case "plain text"
         status = 0;
       case "texinfo"
         [text, status] = makeinfo (text, "plain text");
       case "html"
         [text, status] = strip_html_tags (text);
       case "not found"
-        error ("help: `%s' not found\n", name);
+        [text, status] = do_contents (name);
+        if (status != 0)
+          error ("help: `%s' not found\n", name);
+        endif
       otherwise
         error ("help: internal error: unsupported help text format: '%s'\n", format);
     endswitch
     
     ## Print text
     if (status != 0)
       warning ("makeinfo: Texinfo formatting filter exited abnormally");
       warning ("makeinfo: raw Texinfo source of help text follows...\n");
@@ -75,8 +78,36 @@ function help (name)
     which (name);
     printf ("\n%s\n%s", text, __additional_help_message__ ());
     
   else
     error ("help: invalid input\n");
   endif
 endfunction
 
+function [text, status] = do_contents (name)
+  text = "";
+  status = 1;
+
+  d = find_dir_in_path (name);
+  if (!isempty (d))
+    p = path ();
+    unwind_protect
+      ## Only include 'd' in the path, and then get the help text of 'Contents'
+      path (d);
+      [text, format] = get_help_text ("Contents");
+
+      ## Take action depending on help text format
+      switch (lower (format))
+        case "plain text"
+          status = 0;
+        case "texinfo"
+          [text, status] = makeinfo (text, "plain text");
+        case "html"
+          [text, status] = strip_html_tags (text);
+      endswitch
+    unwind_protect_cleanup
+      ## Restore path
+      path (p);
+    end_unwind_protect
+  endif
+endfunction
+
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -75,16 +75,22 @@ 2008-12-25 Ben Abbott <bpabbott@mac.com>
 	* load-path.cc (Fcommandlinepath): New function.
 	* load-path.h (load_path::get_command_line_path,
 	load_path::do_get_command_line_path): New functions.
 
 2009-01-24 Ben Abbott <bpabbott@mac.com>
 
 	* DLD-FUNCTIONS/eigs.cc: eigs.cc: skip tests if ARPACK is missing.
 
+2009-01-25  Søren Hauberg  <hauberg@gmail.com>
+
+	* help.cc (raw_help_from_file): No longer search for files called
+	'Contents.m', as this is moved to 'script/help.m'.
+	
+
 2009-01-23  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (octave_call_stack::do_goto_caller_frame):
 	Also allow caller frame to be base frame, not just user code.
 
 2009-01-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* gripes.cc (gripe_indexed_cs_list, gripe_invalid_inquiry_subscript):
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -654,28 +654,16 @@ raw_help_from_file (const std::string& n
 		    std::string& file, bool& symbol_found)
 {
   bool retval = false;
 
   h = get_help_from_file (nm, symbol_found, file);
 
   if (h.length () > 0)
     retval = true;
-  else if (! symbol_found)
-    {
-      file = contents_file_in_path (nm);
-      
-      if (! file.empty ())
-	{
-	  h = get_help_from_file (file, symbol_found);
-
-	  if (h.length () > 0)
-	    retval = true;
-	}
-    }
 
   return retval;
 }
 
 static bool
 raw_help_from_map (const std::string& nm, std::string& h, 
 		   const map_type& map, bool& symbol_found)
 {
