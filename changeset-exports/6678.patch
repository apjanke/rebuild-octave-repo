# HG changeset patch
# User jwe
# Date 1180640685 0
#      Thu May 31 19:44:45 2007 +0000
# Node ID 49724abe1236be7b3b97accdf5ce19f19985315a
# Parent  9a8861bc2b343592237dc79ac705a732fc5c10db
[project @ 2007-05-31 19:44:45 by jwe]

diff --git a/src/DLD-FUNCTIONS/kron.cc b/src/DLD-FUNCTIONS/kron.cc
--- a/src/DLD-FUNCTIONS/kron.cc
+++ b/src/DLD-FUNCTIONS/kron.cc
@@ -66,17 +66,17 @@ kron (const Array2<T>& A, const Array2<T
 
 template void
 kron (const Array2<double>&, const Array2<double>&, Array2<double>&);
 
 template void
 kron (const Array2<Complex>&, const Array2<Complex>&, Array2<Complex>&);
 
 DEFUN_DLD (kron, args,  nargout, "-*- texinfo -*-\n\
-@deftypefn {Function File} {} kron (@var{a}, @var{b})\n\
+@deftypefn {Loadable Function} {} kron (@var{a}, @var{b})\n\
 Form the kronecker product of two matrices, defined block by block as\n\
 \n\
 @example\n\
 x = [a(i, j) b]\n\
 @end example\n\
 \n\
 For example,\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -1385,17 +1385,17 @@ octregexprep (const octave_value_list &a
     }
   
   retval = rep;
   return retval;
 }
 
 DEFUN_DLD (regexprep, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File}  {@var{string} =} regexprep (@var{string}, @var{pat}, @var{repstr}, @var{options})\n\
+@deftypefn {Loadable Function}  {@var{string} =} regexprep (@var{string}, @var{pat}, @var{repstr}, @var{options})\n\
 Replace matches of @var{pat} in  @var{string} with @var{repstr}.\n\
 \n\
 \n\
 The replacement can contain @code{$i}, which subsubstitutes\n\
 for the ith set of parentheses in the match string.  E.g.,\n\
 @example\n\
 \n\
    regexprep(\"Bill Dunn\",'(\\w+) (\\w+)','$2, $1')\n\
diff --git a/src/DLD-FUNCTIONS/spkron.cc b/src/DLD-FUNCTIONS/spkron.cc
--- a/src/DLD-FUNCTIONS/spkron.cc
+++ b/src/DLD-FUNCTIONS/spkron.cc
@@ -78,17 +78,17 @@ kron (const Sparse<double>&, const Spars
 
 template void
 kron (const Sparse<Complex>&, const Sparse<Complex>&, Sparse<Complex>&);
 
 // PKG_ADD: dispatch ("kron", "spkron", "sparse matrix");
 // PKG_ADD: dispatch ("kron", "spkron", "sparse complex matrix");
 // PKG_ADD: dispatch ("kron", "spkron", "sparse bool matrix");
 DEFUN_DLD (spkron, args,  nargout, "-*- texinfo -*-\n\
-@deftypefn {Function File} {} spkron (@var{a}, @var{b})\n\
+@deftypefn {Loadable Function} {} spkron (@var{a}, @var{b})\n\
 Form the kronecker product of two sparse matrices. This is defined\n\
 block by block as\n\
 \n\
 @example\n\
 x = [a(i, j) b]\n\
 @end example\n\
 \n\
 For example,\n\
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -380,18 +380,18 @@ bitshift (double a, int n, int64_t mask)
       else if ((N) < 1) \
 	mask = 0; \
       DO_BITSHIFT (T); \
     } \
   while (0)
 
 DEFUN (bitshift, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} bitshift (@var{a}, @var{k})\n\
-@deftypefnx {Function File} {} bitshift (@var{a}, @var{k}, @var{n})\n\
+@deftypefn {Built-in Function} {} bitshift (@var{a}, @var{k})\n\
+@deftypefnx {Built-in Function} {} bitshift (@var{a}, @var{k}, @var{n})\n\
 Return a @var{k} bit shift of @var{n}- digit unsigned\n\
 integers in @var{a}.  A positive @var{k} leads to a left shift.\n\
 A negative value to a right shift.  If @var{n} is omitted it defaults\n\
 to log2(bitmax)+1.\n\
 @var{n} must be in range [1,log2(bitmax)+1] usually [1,33]\n\
 \n\
 @example\n\
 bitshift (eye (3), 1))\n\
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3308,33 +3308,33 @@ root_figure::init_factory_properties (vo
 
   return plist_map;
 }
 
 // ---------------------------------------------------------------------
 
 DEFUN (ishandle, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} ishandle (@var{h})\n\
+@deftypefn {Built-in Function} {} ishandle (@var{h})\n\
 Return true if @var{h} is a graphics handle and false otherwise.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = is_handle (args(0));
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (set, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} set (@var{h}, @var{p}, @var{v}, @dots{})\n\
+@deftypefn {Built-in Function} {} set (@var{h}, @var{p}, @var{v}, @dots{})\n\
 Set the named property @var{p} to the value @var{v} in the graphics\n\
 handle @var{h}.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
@@ -3361,17 +3361,17 @@ handle @var{h}.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (get, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} get (@var{h}, @var{p})\n\
+@deftypefn {Built-in Function} {} get (@var{h}, @var{p})\n\
 Return the named property @var{p} from the graphics handle @var{h}.\n\
 If @var{p} is omitted, return the complete property list for @var{h}.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -1288,17 +1288,17 @@ files.\n\
 @seealso{path, addpath, rmpath, genpath, savepath, pathsep}\n\
 @end deftypefn")
 {
   return octave_value (load_path::system_path ());
 }
 
 DEFUN (path, args, nargout,
     "-*- texinfo -*-\n\
-@deftypefn {Function File} {} path (@dots{})\n\
+@deftypefn {Built-in Function} {} path (@dots{})\n\
 Modify or display Octave's load path.\n\
 \n\
 If @var{nargin} and @var{nargout} are zero, display the elements of\n\
 Octave's load path in an easy to read format.\n\
 \n\
 If @var{nargin} is zero and nargout is greater than zero, return the\n\
 current load path.\n\
 \n\
@@ -1342,18 +1342,18 @@ No checks are made for duplicate element
 	}
     }
 
   return retval;
 }
 
 DEFCMD (addpath, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} addpath (@var{dir1}, @dots{})\n\
-@deftypefnx {Function File} {} addpath (@var{dir1}, @dots{}, @var{option})\n\
+@deftypefn {Built-in Function} {} addpath (@var{dir1}, @dots{})\n\
+@deftypefnx {Built-in Function} {} addpath (@var{dir1}, @dots{}, @var{option})\n\
 Add @var{dir1}, @dots{} to the current function search path.  If\n\
 @var{option} is @samp{\"-begin\"} or 0 (the default), prepend the\n\
 directory name to the current path.  If @var{option} is @samp{\"-end\"}\n\
 or 1, append the directory name to the current path.\n\
 Directories added to the path must exist.\n\
 @seealso{path, rmpath, genpath, pathdef, savepath, pathsep}\n\
 @end deftypefn")
 {
@@ -1438,17 +1438,17 @@ Directories added to the path must exist
   else
     print_usage ();
 
   return retval;
 }
 
 DEFCMD (rmpath, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} rmpath (@var{dir1}, @dots{})\n\
+@deftypefn {Built-in Function} {} rmpath (@var{dir1}, @dots{})\n\
 Remove @var{dir1}, @dots{} from the current function search path.\n\
 \n\
 @seealso{path, addpath, genpath, pathdef, savepath, pathsep}\n\
 @end deftypefn")
 {
   // Originally by Etienne Grossmann. Heavily modified and translated
   // to C++ by jwe.
 
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -219,17 +219,17 @@ initialize_pathsearch (void)
 
   if (odb.empty ())
     odb = Vdata_dir + file_ops::dir_sep_str + "octave:"
       + Vlibexec_dir + file_ops::dir_sep_str + "octave";
 }
 
 DEFUN (__version_info__, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {retval =} __version_info__ (@var{name}, @var{version}, @var{release}, @var{date})\n\
+@deftypefn {Built-in Function} {retval =} __version_info__ (@var{name}, @var{version}, @var{release}, @var{date})\n\
 @end deftypefn")
 {
   octave_value retval;
 
   static Octave_map vinfo;
 
   int nargin = args.length ();
 
diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -142,17 +142,17 @@ Return 1 if @var{a} is a string.  Otherw
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (strcmp, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} strcmp (@var{s1}, @var{s2})\n\
+@deftypefn {Built-in Function} {} strcmp (@var{s1}, @var{s2})\n\
 Return 1 if the character strings @var{s1} and @var{s2} are the same,\n\
 and 0 otherwise.\n\
 \n\
 If either @var{s1} or @var{s2} is a cell array of strings, then an array\n\
 of the same size is returned, containing the values described above for\n\
 every member of the cell array. The other argument may also be a cell\n\
 array of strings (of the same size or with only one element), char matrix\n\
 or character string.\n\
@@ -420,17 +420,17 @@ This is just the opposite of the corresp
 %!assert (all (strcmp ({'foo'}, y) == [false; false]));
 %!assert (all (strcmp ({'foo'}, y) == [false; false]));
 %!assert (all (strcmp (y, {'foo'}) == [false; false]));
 %!assert (all (strcmp (y, {'foo'}) == [false; false]));
 */
 
 DEFUN (strncmp, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Function File} {} strncmp (@var{s1}, @var{s2}, @var{n})\n\
+@deftypefn {Built-in Function} {} strncmp (@var{s1}, @var{s2}, @var{n})\n\
 Return 1 if the first @var{n} characters of strings @var{s1} and @var{s2} are the same,\n\
 and 0 otherwise.\n\
 \n\
 @example\n\
 @group\n\
 strncmp (\"abce\", \"abcd\", 3)\n\
      @result{} 1\n\
 @end group\n\
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -218,17 +218,17 @@ error message.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (popen2, args, ,
  "-*- texinfo -*-\n\
-@deftypefn {Function File} {[@var{in}, @var{out}, @var{pid}] =} popen2 (@var{command}, @var{args})\n\
+@deftypefn {Built-in Function} {[@var{in}, @var{out}, @var{pid}] =} popen2 (@var{command}, @var{args})\n\
 Start a subprocess with two-way communication.  The name of the process\n\
 is given by @var{command}, and @var{args} is an array of strings\n\
 containing options for the command.  The file identifiers for the input\n\
 and output streams of the subprocess are returned in @var{in} and\n\
 @var{out}.  If execution of the command is successful, @var{pid}\n\
 contains the process ID of the subprocess.  Otherwise, @var{pid} is\n\
 @minus{}1.\n\
 \n\
