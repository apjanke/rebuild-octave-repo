# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1505943919 25200
#      Wed Sep 20 14:45:19 2017 -0700
# Node ID 34506e4e3b048162861fac284370b3a693ce3854
# Parent  5bf2e2ceace2f66db900347f7dbaf897b664d396
pathdef: don't restore the default load path (bug #51994)

* load-path.cc (F__pathorig__): Don't call octave::load_path::initialize.
* pathdef.m: Add %!tests.

diff --git a/libinterp/corefcn/load-path.cc b/libinterp/corefcn/load-path.cc
--- a/libinterp/corefcn/load-path.cc
+++ b/libinterp/corefcn/load-path.cc
@@ -2263,18 +2263,16 @@ Restore Octave's path to its initial sta
 DEFMETHOD (__pathorig__, interp, , ,
           doc: /* -*- texinfo -*-
 @deftypefn {} {@var{val} =} __pathorig__ ()
 Undocumented internal function.
 @end deftypefn */)
 {
   octave::load_path& lp = interp.get_load_path ();
 
-  lp.initialize (true);
-
   return ovl (lp.system_path ());
 }
 
 DEFMETHOD (path, interp, args, nargout,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} path ()
 @deftypefnx {} {@var{str} =} path ()
 @deftypefnx {} {@var{str} =} path (@var{path1}, @dots{})
diff --git a/scripts/path/pathdef.m b/scripts/path/pathdef.m
--- a/scripts/path/pathdef.m
+++ b/scripts/path/pathdef.m
@@ -91,10 +91,43 @@ function path = __extractpath__ (savefil
     path = strjoin (tmp, ":");
   else
     path = "";
   endif
 
 endfunction
 
 
-## FIXME: Need some better BIST tests
-%!assert (ischar (pathdef ()))
+## Test that pathdef does not contain a newly added directory
+%!test
+%! path_orig = path ();
+%! tmp_dir = tempname ();
+%! unwind_protect
+%!   mkdir (tmp_dir);
+%!   addpath (tmp_dir);
+%!   p1 = path ();
+%!   p2 = pathdef ();
+%!   assert (! isempty (strfind (p1, tmp_dir)))
+%!   assert (isempty (strfind (p2, tmp_dir)))
+%! unwind_protect_cleanup
+%!   rmdir (tmp_dir);
+%!   path (path_orig);
+%! end_unwind_protect
+
+## Test that pathdef does not modify the current load path
+%!test <*51994>
+%! path_orig = path ();
+%! tmp_dir = tempname ();
+%! unwind_protect
+%!   mkdir (tmp_dir);
+%!   addpath (tmp_dir);
+%!   path_1 = path ();
+%!   p = pathdef ();
+%!   path_2 = path ();
+%!   assert (path_1, path_2)
+%! unwind_protect_cleanup
+%!   rmdir (tmp_dir);
+%!   path (path_orig);
+%! end_unwind_protect
+
+## Test input validation
+%!error pathdef (1)
+%!error pathdef ("/")
