# HG changeset patch
# User Rik <rik@octave.org>
# Date 1435785289 25200
#      Wed Jul 01 14:14:49 2015 -0700
# Branch stable
# Node ID 2fc43288a6c48b8c02fa1ddcaf1d82249408dc7c
# Parent  077e73619ba8ab2189450402ac5d7616b0f3c4f1
unpack.m: Stop hang when unpacking on to existing filename (bug #45331).

* unpack.m: Follow documentation and use current directory for unpacking if no
output directory is specified.  Call tilde_expand() on any user-supplied
directory in case it contains '~'.  Add -f(orce) flag to gzip and bzip unpack
commands so that any file will be overwritten and Octave will not hang waiting
for user input.  Strip trailing file separator from output directory so that
a proper comparison is made to beginning directory which never includes the
file separator.

diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -141,33 +141,39 @@ function filelist = unpack (file, dir = 
         error ('unpack: could not fetch "%s": %s', urlfile, msg);
       endif
     endif
 
   endif
 
   file = make_absolute_filename (file);
 
+  if (isempty (dir))
+    dir = ".";
+  else
+    dir = tilde_expand (dir);
+  endif
+
   ## Instructions on what to do for any extension.
   ##
   ## The field names are the file extension without periods.
   ## The first cell is what is executed to unpack an archive verbosely.
   ## The second cell is what is executed to unpack an archive quietly.
   ## The third cell is the function to execute on output to get the files list.
   ## The fourth cell indicates if the files may need to be manually moved
   ##   (i.e., tar and unzip decompress into the current directory while
   ##    bzip2 and gzip decompress the file at its location).
   persistent commandlist;
   if (isempty (commandlist))
-    commandlist.gz = {'gzip -d -v -r "%s"', ...
-                      'gzip -d -r "%s"', ...
+    commandlist.gz = {'gzip -d -v -f -r "%s"', ...
+                      'gzip -d -f -r "%s"', ...
                       @__parse_gzip__, true};
     commandlist.z = commandlist.gz;
-    commandlist.bz2 = {'bzip2 -d -v "%s"', ...
-                       'bzip2 -d "%s"', ...
+    commandlist.bz2 = {'bzip2 -d -v -f "%s"', ...
+                       'bzip2 -d -f "%s"', ...
                        @__parse_bzip2__, true};
     commandlist.bz = commandlist.bz2;
     commandlist.tar = {'tar xvf "%s"', ...
                        'tar xf "%s"', ...
                        @__parse_tar__, false};
     commandlist.targz = {'gzip -d -c "%s" | tar xvf -', ...
                          'gzip -d -c "%s" | tar xf -', ...
                          @__parse_tar__, false};
@@ -200,16 +206,19 @@ function filelist = unpack (file, dir = 
     origdir = pwd ();
     if (move)
       startdir = fileparts (file);
     else
       startdir = origdir;
     endif
     cstartdir = make_absolute_filename (startdir);
     cenddir = make_absolute_filename (dir);
+    if (cenddir(end) == filesep)
+      cenddir(end) = [];
+    endif
     needmove = move && ! strcmp (cstartdir, cenddir);
     if (nargout > 0 || needmove)
       command = commandv;
     else
       command = commandq;
     endif
   else
     warning ("unpack: unrecognized FILETYPE <%s>", ext);
