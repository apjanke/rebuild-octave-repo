# HG changeset patch
# User jwe
# Date 1175794231 0
#      Thu Apr 05 17:30:31 2007 +0000
# Node ID fc8ed0c77e08daafe233549428594e2c319804f5
# Parent  e0acfe7c3f7b96147e7162527fd1616a055d072e
[project @ 2007-04-05 17:30:31 by jwe]

diff --git a/scripts/finance/fv.m b/scripts/finance/fv.m
--- a/scripts/finance/fv.m
+++ b/scripts/finance/fv.m
@@ -34,23 +34,23 @@
 ## not 5 percent).
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Future value of an investment
 
 function v = fv (r, n, p, l, m)
 
-  if ((nargin < 3) || (nargin > 5))
+  if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
 
-  if (! (isscalar (r) && (r > -1)))
+  if (! (isscalar (r) && r > -1))
     error ("fv: r must be a scalar > -1");
-  elseif (! (isscalar (n) && (n > 0)))
+  elseif (! (isscalar (n) && n > 0))
     error ("fv: n must be a positive scalar");
   elseif (! isscalar (p))
     error ("fv: p must be a scalar");
   endif
 
   if (r != 0)
     v = p * ((1 + r)^n - 1) / r;
   else
diff --git a/scripts/finance/fvl.m b/scripts/finance/fvl.m
--- a/scripts/finance/fvl.m
+++ b/scripts/finance/fvl.m
@@ -31,19 +31,19 @@
 ## Description: Future value of an initial lump sum investment
 
 function v = fvl (r, n, l)
 
   if (nargin != 3)
     print_usage ();
   endif
 
-  if (! (isscalar (r) && (r > -1)))
+  if (! (isscalar (r) && r > -1))
     error ("fvl: r has to be a scalar > -1");
-  elseif (! (isscalar (n) && (n > 0)))
+  elseif (! (isscalar (n) && n > 0))
     error ("fvl: n has to be a positive scalar");
   elseif (! isscalar (l))
     error ("fvl: l has to be a scalar");
   endif
 
   v = l * (1 + r)^n;
 
 endfunction
\ No newline at end of file
diff --git a/scripts/finance/nper.m b/scripts/finance/nper.m
--- a/scripts/finance/nper.m
+++ b/scripts/finance/nper.m
@@ -34,21 +34,21 @@
 ## @seealso{pv, pmt, rate, npv}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Number of payments needed for amortizing a loan
 
 function n = nper (r, p, a, l, m)
 
-  if ((nargin < 3) || (nargin > 5))
+  if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
 
-  if (! (isscalar (r) && (r > -1)))
+  if (! (isscalar (r) && r > -1))
     error ("nper: r must be a scalar > -1");
   elseif (! isscalar (p))
     error ("nper: p must be a scalar");
   elseif (! isscalar (a))
     error ("nper: a must be a scalar");
   endif
 
   if (nargin == 5)
diff --git a/scripts/finance/npv.m b/scripts/finance/npv.m
--- a/scripts/finance/npv.m
+++ b/scripts/finance/npv.m
@@ -33,17 +33,17 @@
 ## @seealso{irr, pv}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Net present value of a series of payments
 
 function v = npv (r, p, i)
 
-  if ((nargin < 2) || (nargin > 3))
+  if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   if (! (isvector (p)))
     error ("npv: p has to be a vector");
   else
     n = length (p);
     p = reshape (p, 1, n);
diff --git a/scripts/finance/pv.m b/scripts/finance/pv.m
--- a/scripts/finance/pv.m
+++ b/scripts/finance/pv.m
@@ -34,23 +34,23 @@
 ## @seealso{pmt, nper, rate, npv}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Present value of an investment
 
 function v = pv (r, n, p, l, m)
 
-  if ((nargin < 3) || (nargin > 5))
+  if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
 
-  if (! (isscalar (r) && (r > -1)))
+  if (! (isscalar (r) && r > -1))
     error ("pv: r must be a scalar > -1");
-  elseif (! (isscalar (n) && (n > 0)))
+  elseif (! (isscalar (n) && n > 0))
     error ("pv: n must be a positive scalar");
   elseif (! isscalar (p))
     error ("pv: p must be a scalar");
   endif
 
   if (r != 0)
     v = p * (1 - (1 + r)^(-n)) / r;
   else
diff --git a/scripts/finance/pvl.m b/scripts/finance/pvl.m
--- a/scripts/finance/pvl.m
+++ b/scripts/finance/pvl.m
@@ -33,17 +33,17 @@
 function v = pvl (r, n, p)
 
   if (nargin != 3)
     print_usage ();
   endif
 
   if (! (isscalar (r) && (r > -1)))
     error ("pvl: r has to be a scalar > -1");
-  elseif (! (isscalar (n) && (n > 0)))
+  elseif (! (isscalar (n) && n > 0))
     error ("pvl: n has to be a positive scalar");
   elseif (! isscalar (p))
     error ("pvl: p has to be a scalar");
   endif
 
   v = p / (1 + r)^n;
 
 endfunction
diff --git a/scripts/finance/rate.m b/scripts/finance/rate.m
--- a/scripts/finance/rate.m
+++ b/scripts/finance/rate.m
@@ -31,21 +31,21 @@
 ## @seealso{pv, pmt, nper, npv}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Rate of return of an investment
 
 function r = rate (n, p, v, l, m)
 
-  if ((nargin < 3) || (nargin > 5))
+  if (nargin < 3 || nargin > 5)
     print_usage ();
   endif
 
-  if (! (isscalar (n) && (n > 0)))
+  if (! (isscalar (n) && n > 0))
     error ("rate: n must be a positive scalar");
   elseif (! isscalar (p))
     error ("rate: p must be a scalar");
   elseif (! isscalar (v))
     error ("rate: p must be a scalar");
   endif
 
   if (nargin == 5)
