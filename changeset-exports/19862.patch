# HG changeset patch
# User Rik <rik@octave.org>
# Date 1424896932 28800
#      Wed Feb 25 12:42:12 2015 -0800
# Node ID 6b851f6acd55adb146a08d87b65c846e998c4f2e
# Parent  19755f4fc851f3fa8721c1885d32f99a2d654d13
configure.ac: Remove a few more test x"" instances.

* configure.ac: Don't use x"$VAR" for testing enable_shared and enable_static.
Rewrite FFLAGS testing to use -z to avoid testing for x"".  Rewrite F77 compiler
existence test to use -n to ovaid testing for x"".

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -596,39 +596,38 @@ AC_ARG_VAR([BUILD_EXEEXT],
 
 dnl Keep this check before the check for the Fortran compiler,
 dnl in case -lm is needed to compile Fortran programs.
 AC_CHECK_LIB(m, sin)
 
 ### Determine the Fortran compiler and how to invoke it
 
 ## Default FFLAGS is -O.
-if test x"$FFLAGS" = x""; then
+if test -z "$FFLAGS"; then
   FFLAGS="-O"
 fi
 
 ## Prefer gfortran, but the user's F77 environment variable will override.
 AC_PROG_F77([gfortran])
 if test -z "$F77"; then
   ## No gfortran found, search for any other installed compiler.
   AC_PROG_F77
 fi
 if test "$F77" = g77; then
   AC_MSG_ERROR([g77 is not a supported Fortran compiler.  Select another compiler by setting the environment variable F77 and re-running configure.])
 fi
 
-AC_MSG_CHECKING([if we have a usable Fortran compiler])
-if test x"$F77" = x""; then
+AC_MSG_CHECKING([whether a usable Fortran compiler was found])
+if test -n "$F77"; then
+  AC_MSG_RESULT(yes)
+else
   AC_MSG_RESULT(no)
-  AC_MSG_ERROR(No Fortran compiler found)
-else
-  AC_MSG_RESULT(yes)
+  AC_MSG_ERROR([A Fortran compiler is required])
 fi
 
-
 ## Determine calling conventions for Fortran compiler
 AC_F77_LIBRARY_LDFLAGS
 AC_F77_DUMMY_MAIN
 AC_F77_WRAPPERS
 
 F77_TOLOWER=yes
 F77_APPEND_UNDERSCORE=yes
 F77_APPEND_EXTRA_UNDERSCORE=yes
@@ -1409,23 +1408,23 @@ OCTAVE_PROG_AR
 ifdef([LT_INIT], [], [
   errprint([error: you must have libtool 2.2.2 or a more recent version
 ])
   m4exit([1])])
 
 LT_PREREQ([2.2.2])
 LT_INIT([disable-static dlopen win32-dll])
 
-if test x"$enable_shared" = x"yes"; then
+if test $enable_shared = yes; then
   SHARED_LIBS=yes
 else
   SHARED_LIBS=no
 fi
 
-if test x"$enable_static" = x"yes"; then
+if test $enable_static = yes; then
   STATIC_LIBS=yes
 else
   STATIC_LIBS=no
 fi
 
 XTRA_CRUFT_SH_LDFLAGS=
 if test $have_msvc = yes; then
   FLIBS="$FLIBS -lkernel32"
