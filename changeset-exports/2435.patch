# HG changeset patch
# User jwe
# Date 846451890 0
#      Sun Oct 27 21:31:30 1996 +0000
# Node ID 3be97fe02051f7c622bca0faddac416174a0eead
# Parent  ced642d8ba6a6d12e1f9654b8c8487794e88ef6f
[project @ 1996-10-27 21:31:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+Sun Oct 27 14:06:44 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-hist.cc (do_history): Rewite option parsing to avoid
+	(probably bogus) errors from g++ on cygwin32 system.
+
+	* strftime.c: Use autoconf macros TIME_WITH_SYS_TIME and
+	HAVE_SYS_TIME_H to decide which time.h files to include.
+
+	* oct-stream.h, oct-stream.cc (octave_stream::error,
+	octave_base_stream::error): Rename errno => err_num.
+
 Sat Oct 26 10:40:05 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-hist.cc (do_history): Move declaration of file inside
 	conditional.
 
 	* defun.h (DEFVAR_INT): Set eternal flag with (svc_fcn != 0)
 	instead of (sv_fcn ? 1 : 0)
 
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -126,44 +126,46 @@ default_history_file (void)
 static void
 do_history (int argc, const string_vector& argv)
 {
   int numbered_output = 1;
 
   int i;
   for (i = 1; i < argc; i++)
     {
-      if (argv[i][0] == '-' && argv[i].length () == 2
-	  && (argv[i][1] == 'r' || argv[i][1] == 'w'
-	      || argv[i][1] == 'a' || argv[i][1] == 'n'))
+      string option = argv[i];
+
+      if (option == "-r" || option == "-w" || option == "-a"
+	  || option == "-n")
 	{
 	  if (i < argc - 1)
 	    {
 	      string file = oct_tilde_expand (argv[i+1]);
 	      octave_command_history.set_file (file);
 	    }
 
-	  switch (argv[i][1])
-	    {
-	    case 'a':		// Append `new' lines to file.
-	      octave_command_history.append ();
-	      break;
+	  if (option == "-a")
+	    // Append `new' lines to file.
+	    octave_command_history.append ();
+
+	  else if (option == "-w")
+	    // Write entire history.
+	    octave_command_history.write ();
 
-	    case 'w':		// Write entire history.
-	      octave_command_history.write ();
-	      break;
+	  else if (option == "-r")
+	    // Read entire file.
+	    octave_command_history.read ();
 
-	    case 'r':		// Read entire file.
-	      octave_command_history.read ();
-	      break;
+	  else if (option == "-n")
+	    // Read `new' history from file.
+	    octave_command_history.read_range ();
 
-	    case 'n':		// Read `new' history from file.
-	      octave_command_history.read_range ();
-	      break;
-	    }
+	  else
+	    panic_impossible ();
+
 	  return;
 	}
       else if (argv[i] == "-q")
 	numbered_output = 0;
       else if (argv[i] == "--")
 	{
 	  i++;
 	  break;
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -1899,19 +1899,19 @@ int
 octave_base_stream::rewind (void)
 {
   return seek (0, ios::beg);
 }
 
 // Return current error message for this stream.
 
 string
-octave_base_stream::error (bool clear_err, int& errno)
+octave_base_stream::error (bool clear_err, int& err_num)
 {
-  errno = fail ? -1 : 0;
+  err_num = fail ? -1 : 0;
 
   string tmp = errmsg;
 
   if (clear_err)
     clear ();
 
   return tmp;
 }
@@ -2185,22 +2185,22 @@ octave_stream::eof (void) const
 
   if (stream_ok ("feof"))
     retval = rep->eof ();
 
   return retval;
 }
 
 string
-octave_stream::error (bool clear, int& errno)
+octave_stream::error (bool clear, int& err_num)
 {
   string retval;
 
   if (stream_ok ("ferror", false))
-    retval = rep->error (clear, errno);
+    retval = rep->error (clear, err_num);
 
   return retval;
 }
 
 string
 octave_stream::name (void)
 {
   string retval;
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -253,17 +253,17 @@ public:
   // automatically work for this stream.
 
   virtual ostream *output_stream (void) { return 0; }
 
   bool ok (void) const { return ! fail; }
 
   // Return current error message for this stream.
 
-  string error (bool clear, int& errno);
+  string error (bool clear, int& err_num);
 
 protected:
 
   int mode (void) { return md; }
 
   oct_mach_info::float_format float_format (void) { return flt_fmt; }
 
   // Set current error state and set fail to TRUE.
@@ -394,22 +394,22 @@ public:
 
   int printf (const string& fmt, const octave_value_list& args);
 
   int puts (const string& s);
   int puts (const octave_value& s);
 
   bool eof (void) const;
 
-  string error (bool clear, int& errno);
+  string error (bool clear, int& err_num);
 
   string error (bool clear = false)
     {
-      int errno;
-      return error (clear, errno);
+      int err_num;
+      return error (clear, err_num);
     }
 
   bool ok (void) const { return rep && rep->ok (); }
 
   operator void* () const { return ok () ? (void *) -1 : (void *) 0; }
 
   string name (void);
 
diff --git a/src/strftime.c b/src/strftime.c
--- a/src/strftime.c
+++ b/src/strftime.c
@@ -75,17 +75,22 @@
    David MacKenzie <djm@gnu.ai.mit.edu> */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <stdio.h>
 #include <sys/types.h>
-#if defined(TM_IN_SYS_TIME) || (!defined(HAVE_TM_ZONE) && !defined(HAVE_TZNAME))
+
+#if defined(TIME_WITH_SYS_TIME)
+#include <sys/time.h>
+#include <time.h>
+#else
+#if defined(HAVE_SYS_TIME_H)
 #include <sys/time.h>
 #else
 #include <time.h>
 #endif
 
 #ifndef STDC_HEADERS
 time_t mktime ();
 #endif
