# HG changeset patch
# User jwe
# Date 879914276 0
#      Wed Nov 19 04:37:56 1997 +0000
# Node ID f936c7f5074f124e4c0dbb5fe3402192e780f849
# Parent  b9aea66ecbae7b2d9b0633f0c5b855e059567a26
[project @ 1997-11-19 04:36:17 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Mon Oct 20 01:31:45 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: Reprint important warning messages at the end of
+	the run.
+
 Fri Oct 17 04:43:27 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Include the following change from RMS for octave-mode.el:
 
 	1997-04-22  Richard Stallman  <rms@psilocin.gnu.ai.mit.edu>
 
 	* octave-mod.el (inferior-octave-output-list): Declare here
         to avoid compiler warnings.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -146,16 +146,22 @@ Summary of changes for version 2.1.x:
 
     where JAC is the Jacobian matrix of partial derivatives of the
     right-hand-side functions that define the set of differential
     equations with respect to the state vector X.
 
   * Structure elements completion on the command line actually works
     now.
 
+  * The new built-in variable `fixed_point_format' controls whether
+    Octave uses a scaled fixed-point format for displaying matrices.
+    The default value is 0 unless you use --traditional.
+
+  * The function sumsq now computes sum (x .* conj (x)) for complex values.
+
   * New configure option, --enable-readline.
 
   * New configure option, --enable-static.
 
 Summary of changes for version 2.0.7:
 ------------------------------------
 
   This is a bug-fixing release.  There are no new user-visible features.
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -229,16 +229,18 @@ Input/Output:
 
   * Complain if there is not enough disk space available (I think
     there is simply not enough error checking in the code that handles
     writing data).
 
   * Make it possible to tie arbitrary input and output streams
     together, similar to the way iostreams can be tied together.
 
+  * Allow comments in number-only data files.
+
 -----------
 Interpreter:
 -----------
 
   * Fix the parser so that
 
       function foo ()
         implicit_str_to_num_ok = 1;
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.285 $)
+AC_REVISION($Revision: 1.286 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -83,25 +83,28 @@ AC_ARG_WITH(f77,
   [  --with-f77              use f77 to compile Fortran subroutines],
   [if test "$withval" = no; then use_f77=false; else use_f77=true; fi],
   use_f77=false)
 
 ### Make sure only one of the above options for Fortran compilers was
 ### specified (multiple "no" or --without-FOO options are ok).
 
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77, g77,
-  [AC_MSG_WARN([--with-f77 and --with-g77 both specified!  Using g77...])
+  [warn_f77_and_g77="--with-f77 and --with-g77 both specified!  Using g77..."
+  AC_MSG_WARN($warn_f77_and_g77)
   use_g77=false])
 
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77, f2c,
-  [AC_MSG_WARN([--with-f2c and --with-f77 both specified!  Using f77...])
+  [warn_f2c_and_f77="--with-f2c and --with-f77 both specified!  Using f77..."
+  AC_MSG_WARN($warn_f2c_and_f77)
   use_f2c=false])
 
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(g77, f2c,
-  [AC_MSG_WARN([--with-f2c and --with-g77 both specified!  Using g77...])
+  [warn_f2c_and_g77="--with-f2c and --with-g77 both specified!  Using g77..."
+  AC_MSG_WARN($warn_f2c_and_g77)
   use_f2c=false])
 
 ### Allow the user disable support for GNU info.
 
 case "$canonical_host_type" in
   *-*-cygwin32)
     USE_GNU_INFO=false
   ;;
@@ -193,17 +196,18 @@ changequote([,])dnl
     AC_MSG_RESULT([defining NO_IMPLICIT_TEMPLATES to be $NO_IMPLICIT_TEMPLATES])
   ;;
 changequote(,)dnl
   1.* | 2.[012345].*)
 changequote([,])dnl
     AC_MSG_ERROR([g++ version $gxx_version will not work to compile Octave])
   ;;
   *)
-    AC_MSG_WARN([Octave has only been tested with g++, and I can't find it])
+    warn_gxx_only="Octave has only been tested with g++, and I can't find it"
+    AC_MSG_WARN($warn_gxx_only)
   ;;
 esac
 
 HOST_CXXFLAGS=
 case "$gxx_version" in
   2.6.*)
     case "$canonical_host_type" in
       rs6000-ibm-aix* | powerpc-ibm-aix*)
@@ -242,20 +246,22 @@ case "$gcc_version" in
       ADD_CC_WALL=true
     fi
     if test -z "$LDFLAGS"; then
       LDFLAGS="-g"
       AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
     fi
   ;;
   1.*)
-    AC_MSG_WARN([gcc version $gcc_version is likely to cause problems])
+    warn_gcc_version="gcc version $gcc_version is likely to cause problems"
+    AC_MSG_WARN($warn_gcc_version)
   ;;
   *)
-    AC_MSG_WARN([Octave has only been tested with gcc, and I can't find it])
+    warn_gcc_only="Octave has only been tested with gcc, and I can't find it"
+    AC_MSG_WARN($warn_gcc_only)
   ;;
 esac
 
 CC_VERSION=
 if test -n "$gcc_version"; then
   CC_VERSION="$gcc_version"
 fi
 AC_SUBST(CC_VERSION)
@@ -463,17 +469,18 @@ EOF
   if test -z "$FLIBS"; then
     AC_CHECK_LIB(F77, d_sin, FLIBS=-lF77, FLIBS=, -lm)
     if test -n "$FLIBS"; then
       AC_CHECK_LIB(I77, f_rew, FLIBS="$FLIBS -lI77", FLIBS=, -lF77)
     fi
   fi
 
   if test -z "$FLIBS"; then
-    AC_MSG_WARN([I found f2c but not libf2c.a, or libF77.a and libI77.a])
+    warn_f2c_no_lib="I found f2c but not libf2c.a, or libF77.a and libI77.a"
+    AC_MSG_WARN($warn_f2c_no_lib)
   fi
   f77_rules_frag=Makefrag.f77
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
 	cat $< | $(F2C) $(F2CFLAGS) > $(@F)
 
 %.o : %.f
@@ -916,17 +923,18 @@ AC_SUBST(TERMLIBS)
 
 if test "$ac_cv_lib_termcap_tputs" = yes \
     || test "$ac_cv_lib_terminfo_tputs" = yes \
     || test "$ac_cv_lib_ncurses_tputs" = yes \
     || test "$ac_cv_lib_curses_tputs" = yes \
     || test "$ac_cv_lib_termlib_tputs" = yes; then
   true
 else
-  AC_MSG_WARN([I couldn't find -ltermcap, -lterminfo, -lncurses, -lcurses, or -ltermlib!])
+  warn_termlibs="I couldn't find -ltermcap, -lterminfo, -lncurses, -lcurses, or -ltermlib!"
+  AC_MSG_WARN($warn_termlibs)
 fi
 
 AC_MSG_CHECKING([for struct exception in math.h])
 AC_TRY_LINK([#include <math.h>],
   [struct exception *x; x->type; x->name;],
   AC_MSG_RESULT(yes)
   AC_DEFINE(EXCEPTION_IN_MATH, 1),
   AC_MSG_RESULT(no))
@@ -1017,38 +1025,38 @@ case "$LEX" in
   flex*)
     LFLAGS="-t -I"
     AC_MSG_RESULT([defining LFLAGS to be $LFLAGS])
     LEXLIB=
   ;;
   *)
     LFLAGS="-t"
     AC_MSG_RESULT([defining LFLAGS to be $LFLAGS])
-    AC_MSG_WARN([I didn't find flex, but that's only a problem])
-    AC_MSG_WARN([if you need to reconstruct lex.cc])
+    warn_flex="I didn't find flex, but it's only a problem if you need to reconstruct lex.cc"
+    AC_MSG_WARN($warn_flex)
   ;;
 esac
 AC_SUBST(LFLAGS)
 
 AC_PROG_YACC
 case "$YACC" in
   bison*)
   ;;
   *)
-    AC_MSG_WARN([I didn't find bison, but that's only a problem])
-    AC_MSG_WARN([if you need to reconstruct parse.cc])
+    warn_bison="I didn't find bison, but it's only a problem if you need to reconstruct parse.cc"
+    AC_MSG_WARN($warn_bison)
   ;;
 esac
 
 AC_PROG_LN_S
 
 AC_CHECK_PROG(RUNTEST, runtest, runtest, [])
-AC_CHECK_PROG(EXPECT, expect, expect, [])
-if test -z "$EXPECT"; then
-  RUNTEST=
+if test -z "$RUNTEST"; then
+  warn_runtest="I didn't find runtest -- install DejaGNU if you want to run \`make check'"
+  AC_MSG_WARN($warn_runtest)
 fi
 AC_SUBST(RUNTEST)
 
 AC_PROG_INSTALL
 INSTALL_SCRIPT='${INSTALL}'
 AC_SUBST(INSTALL_SCRIPT)
 
 EXE=
@@ -1072,16 +1080,21 @@ if test -n "$GNUPLOT_BINARY"; then
   AC_MSG_CHECKING([to see if your gnuplot supports multiple plot windows])
   if test -z "`echo 'set term x11 2' | $GNUPLOT_BINARY 2>&1`"; then
     AC_MSG_RESULT([yes])
     AC_DEFINE(GNUPLOT_HAS_FRAMES, 1)
   else
     AC_MSG_RESULT([no])
   fi
 else
+  warn_gnuplot="yes"
+
+  ## If you change this text, be sure to also copy it to the set of
+  ## warnings at the end of the script
+
   AC_MSG_WARN([I didn't find gnuplot.  It isn't necessary to have gnuplot])
   AC_MSG_WARN([installed, but you won't be able to use any of Octave's])
   AC_MSG_WARN([plotting commands without it.])
   AC_MSG_WARN([])
   AC_MSG_WARN([If gnuplot is installed but it isn't in your path, you can])
   AC_MSG_WARN([tell Octave where to find it by typing the command])
   AC_MSG_WARN([])
   AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
@@ -1093,17 +1106,18 @@ octave_possible_pagers="less more page p
 case "$canonical_host_type" in
   *-*-cygwin32)
     octave_possible_pagers="$octave_possible_pagers more.com"
   ;;
 esac
 
 AC_CHECK_PROGS(DEFAULT_PAGER, $octave_possible_pagers, [])
 if test -z "$DEFAULT_PAGER"; then
-  AC_MSG_WARN([I couldn't find `less', `more', `page', or `pg'])
+  warn_less="I couldn't find \`less', \`more', \`page', or \`pg'"
+  AC_MSG_WARN($warn_less)
 fi
 
 ### Even though we include config.h, we need to have the preprocessor
 ### defines available in a variable for the octave-bug script.  Use
 ### UGLY_DEFS for that.
 
 AC_OUTPUT_MAKE_DEFS
 UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\",g'`
@@ -1213,8 +1227,94 @@ Octave is now configured for $canonical_
   Build static libraries:                  $STATIC_LIBS
   Build shared libraries:                  $SHARED_LIBS
   Minimal kernel option:                   $OCTAVE_LITE
   Dynamic Linking (dlopen/dlsym):          $WITH_DL
   Dynamic Linking (shl_load/shl_findsym):  $WITH_SHL
   Include support for GNU readline:        $USE_READLINE
   Include support for the GNU Info reader: $USE_GNU_INFO
 ])
+
+warn_msg_printed=false
+
+if test -n "$warn_f77_and_g77"; then
+  AC_MSG_WARN($warn_f77_and_g77)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_f2c_and_f77"; then
+  AC_MSG_WARN($warn_f2c_and_f77)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_f2c_and_g77"; then
+  AC_MSG_WARN($warn_f2c_and_g77)
+  warn_msg_printed=true
+fi
+
+if test -n "$gxx_only"; then
+  AC_MSG_WARN($gxx_only)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_gcc_version"; then
+  AC_MSG_WARN($warn_gcc_version)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_gcc_only"; then
+  AC_MSG_WARN($warn_gcc_only)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_f2c_no_lib"; then
+  AC_MSG_WARN($warn_f2c_no_lib)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_termlibs"; then
+  AC_MSG_WARN($warn_termlibs)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_flex"; then
+  AC_MSG_WARN($warn_flex)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_bison"; then
+  AC_MSG_WARN($warn_bison)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_less"; then
+  AC_MSG_WARN($warn_less)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_runtest"; then
+  AC_MSG_WARN($warn_runtest)
+  warn_msg_printed=true
+fi
+
+if test -n "$warn_gnuplot"; then
+
+  ## If you change this text, be sure to also change the corresponding
+  ## set of warnings above.
+
+  AC_MSG_WARN([I didn't find gnuplot.  It isn't necessary to have gnuplot])
+  AC_MSG_WARN([installed, but you won't be able to use any of Octave's])
+  AC_MSG_WARN([plotting commands without it.])
+  AC_MSG_WARN([])
+  AC_MSG_WARN([If gnuplot is installed but it isn't in your path, you can])
+  AC_MSG_WARN([tell Octave where to find it by typing the command])
+  AC_MSG_WARN([])
+  AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
+  AC_MSG_WARN([])
+  AC_MSG_WARN([at the Octave prompt.])
+  warn_msg_printed=true
+fi
+
+if $warn_msg_printed; then
+  AC_MSG_RESULT([])
+fi
+
+### End of configure.
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -62,21 +62,21 @@ function [p, yf] = polyfit (x, y, n)
   ## N or X...
 
   X = (x * ones (1, n+1)) .^ (ones (l, 1) * (0 : n));
 
   p = (X' * X) \ (X' * y);
 
   if (nargout == 2)
     yf = X * p;
+
+    if (y_is_row_vector)
+      yf = yf';
+    endif
   endif
 
   p = flipud (p);
 
   if (! prefer_column_vectors)
     p = p';
   endif
 
-  if (y_is_row_vector)
-    yf = yf';
-  endif
-
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,20 +1,34 @@
 Tue Nov 18 04:27:55 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pr-output.cc (Vfixed_point_format): New variable.
+	(fixed_point_format): New fucntion.
+	(symbols_of_pr_output): Add DEFVAR for fixed_point_format.
+	(set_real_matrix_format): Handle fixed point format
+	(set_complex_matrix_format): Handle fixed point format
+	(set_format): New arg, scale in Matrix, ComplexMatrix, Range versions.
+	(pr_scale_header): New function.
+	(octave_print_internal): Handle fixed point format in Matrix,
+	ComplexMatrix, and Range versions.
+	* octave.cc (maximum_braindamage): Set fixed_point_format to 1.0.
+
 	* utils.cc (do_string_escapes): Move here, from lex.l.
 	Arg is now const string& instead of char*.
 	Return new string object instead of modifying arg in place.
 	(Fdo_string_escapes): New function.
 	* lex.l (handle_string): Use new version of do_string_escapes.
-	* lex.l (Vbackslash_escapes): No longer static.
-	* oct-stream.cc (octave_base_stream::scanf): If !Vbackslash_escapes,
-	call do_backslash_escapes on format string here.
-	* oct-stream.cc (octave_base_stream::oscanf): Likewise.
-	* oct-stream.cc (octave_base_stream::printf): Likewise.
+
+	* lex.l (Vbackslash_escapes): Delete.
+	(backslash_escapes): Delete.
+	(do_string_escapes): Undo previous change.
+	(eat_whitespace, eat_continuation): Undo previous change.
+	(handle_string): Undo previous change.
+	(symbols_of_lex): Undo previous change.
+	* octave.cc (maximum_braindamage): Undo previous change.
 
 Fri Nov 14 01:53:13 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (eval_string (const string&, bool, int&, int)): No
 	longer static.
 	* parse.h: Provide declaration.
 	* input.cc (get_user_input (const octave_value_list&, bool, int)):
 	New arg, nargout.  Pass it to eval_string.
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -154,20 +154,16 @@ static brace_paren_nesting_level nesting
 // comma between identifiers and `('.  For example, the statement
 //
 //   [eye (2)]
 //
 // will result in a call to `eye' with the argument `2'.
 
 static int Vwhitespace_in_literal_matrix;
 
-// Should Octave treat backslashes in strings as escapes that
-// introduce special characters like newline (\n), tab (\t), etc.?
-static bool Vbackslash_escapes;
-
 // Forward declarations for functions defined at the bottom of this
 // file.
 
 static void fixup_column_count (char *s);
 static void do_comma_insert_check (void);
 static int is_plot_keyword (const string& s);
 static int is_keyword (const string& s);
 static string plot_style_token (const string& s);
@@ -1291,17 +1287,17 @@ eat_whitespace (void)
 		goto done;
 	    }
 
 	case '\\':
 	  if (in_comment)
 	    break;
 	  else
 	    {
-	      if (Vbackslash_escapes && have_continuation ())
+	      if (have_continuation ())
 		break;
 	      else
 		goto done;
 	    }
 
 	default:
 	  if (in_comment)
 	    break;
@@ -1446,17 +1442,17 @@ have_ellipsis_continuation (bool trailin
 // Return value is the same as described for eat_whitespace().
 
 static yum_yum
 eat_continuation (void)
 {
   int retval = ATE_NOTHING;
   int c = yyinput ();
   if ((c == '.' && have_ellipsis_continuation ())
-      || (c == '\\' && Vbackslash_escapes && have_continuation ()))
+      || (c == '\\' && have_continuation ()))
     retval = eat_whitespace ();
   else
     yyunput (c, yytext);
 
   return retval;
 }
 
 static int
@@ -1466,17 +1462,17 @@ handle_string (char delim, int text_styl
 
   int c;
   int escape_pending = 0;
 
   while ((c = yyinput ()) != EOF)
     {
       current_input_column++;
 
-      if (c == '\\' && Vbackslash_escapes)
+      if (c == '\\')
 	{
 	  if (escape_pending)
 	    {
 	      buf << (char) c;
 	      escape_pending = 0;
 	    }
 	  else
 	    {
@@ -1508,34 +1504,33 @@ handle_string (char delim, int text_styl
 	    {
 	      c = yyinput ();
 	      if (c == delim)
 		buf << (char) c;
 	      else
 		{
 		  yyunput (c, yytext);
 		  buf << ends;
-		  char *tmp = buf.str ();
-		  string tok = Vbackslash_escapes
-		    ? do_string_escapes (tmp) : string (tmp);
-		  delete [] tmp;
+		  char *t = buf.str ();
+		  string s = do_string_escapes (t);
+		  delete [] t;
 
 		  if (text_style && lexer_flags.doing_set)
 		    {
-		      if (! tok.empty ())
-			tok = string (delim, 1) + tok + string (delim, 1);
+		      if (! s.empty ())
+			s = string (delim, 1) + s + string (delim, 1);
 		    }
 		  else
 		    {
 		      lexer_flags.quote_is_transpose = true;
 		      lexer_flags.cant_be_identifier = true;
 		      lexer_flags.convert_spaces_to_comma = true;
 		    }
 
-		  yylval.tok_val = new token (tok);
+		  yylval.tok_val = new token (s);
 		  token_stack.push (yylval.tok_val);
 		  return TEXT;
 		}
 	    }
 	}
       else
 	{
 	  buf << (char) c;
@@ -1872,24 +1867,16 @@ lexical_feedback::init (void)
   // Not initially looking at indirect references.
   looking_at_indirect_ref = false;
 
   // Quote marks strings intially.
   quote_is_transpose = false;
 }
 
 int
-backslash_escapes (void)
-{
-  Vbackslash_escapes = check_preference ("backslash_escapes");
-
-  return 0;
-}
-
-int
 whitespace_in_literal_matrix (void)
 {
   int pref = 0;
 
   string val = builtin_string_variable ("whitespace_in_literal_matrix");
 
   if (! val.empty ())
     {
@@ -1902,20 +1889,16 @@ whitespace_in_literal_matrix (void)
   Vwhitespace_in_literal_matrix = pref;
 
   return 0;
 }
 
 void
 symbols_of_lex (void)
 {
-  DEFVAR (backslash_escapes, 1.0, 0, backslash_escapes,
-    "if nonzero, Octave recognizes backslashes in strings as escapes that\n\
-introduce special characters like newline (\\n), tab (\\t), etc.");
-
   DEFVAR (whitespace_in_literal_matrix, "", 0, whitespace_in_literal_matrix,
     "control auto-insertion of commas and semicolons in literal matrices");
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -326,16 +326,17 @@ maximum_braindamage (void)
   bind_builtin_variable ("PS1", ">> ");
   bind_builtin_variable ("PS2", "");
   bind_builtin_variable ("beep_on_error", 1.0);
   bind_builtin_variable ("default_eval_print_flag", 0.0);
   bind_builtin_variable ("default_save_format", "mat-binary");
   bind_builtin_variable ("define_all_return_values", 1.0);
   bind_builtin_variable ("do_fortran_indexing", 1.0);
   bind_builtin_variable ("empty_list_elements_ok", 1.0);
+  bind_builtin_variable ("fixed_point_format", 1.0);
   bind_builtin_variable ("implicit_str_to_num_ok", 1.0);
   bind_builtin_variable ("ok_to_lose_imaginary_part", 1.0);
   bind_builtin_variable ("page_screen_output", 0.0);
   bind_builtin_variable ("prefer_column_vectors", 0.0);
   bind_builtin_variable ("print_empty_dimensions", 0.0);
   bind_builtin_variable ("treat_neg_dim_as_zero", 1.0);
   bind_builtin_variable ("warn_function_name_clash", 0.0);
   bind_builtin_variable ("whitespace_in_literal_matrix", "traditional");
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -49,16 +49,20 @@ Software Foundation, 59 Temple Place - S
 #include "gripes.h"
 #include "oct-obj.h"
 #include "pager.h"
 #include "pr-output.h"
 #include "sysdep.h"
 #include "utils.h"
 #include "variables.h"
 
+// TRUE means use a scaled fixed point format for `format long' and
+// `format short'.
+static bool Vfixed_point_format;
+
 // The maximum field width for a number printed by the default output
 // routines.
 static int Voutput_max_field_width;
 
 // The precision of the numbers printed by the default output
 // routines.
 static int Voutput_precision;
 
@@ -293,16 +297,24 @@ set_real_matrix_format (bool sign, int x
     {
       int digits = x_max > x_min ? x_max : x_min;
       fw = digits <= 0 ? 1 : digits;
       if (inf_or_nan && fw < 3)
 	fw = 3;
       fw += sign;
       rd = 0;
     }
+  else if (Vfixed_point_format)
+    {
+      rd = prec;
+      fw = rd + 2;
+      if (inf_or_nan && fw < 3)
+	fw = 3;
+      fw += sign;
+    }
   else
     {
       int ld_max, rd_max;
       if (x_max > 0)
 	{
 	  ld_max = x_max;
 	  rd_max = prec > x_max ? prec - x_max : prec;
 	  x_max++;
@@ -333,17 +345,18 @@ set_real_matrix_format (bool sign, int x
 
       fw = ld + 1 + rd;
       if (inf_or_nan && fw < 3)
 	fw = 3;
       fw += sign;
     }
 
   if (! (bank_format || hex_format || bit_format)
-      && (fw > Voutput_max_field_width || print_e))
+      && (print_e
+	  || (! Vfixed_point_format && fw > Voutput_max_field_width)))
     {
       int exp_field = 4;
       if (x_max > 100 || x_min > 100)
 	exp_field++;
 
       fw = 2 + prec + exp_field;
       if (inf_or_nan && fw < 3)
 	fw = 3;
@@ -358,17 +371,17 @@ set_real_matrix_format (bool sign, int x
     {
       sprintf (fmt_buf, "%%%d.%df", fw, rd);
     }
 
   curr_real_fmt = &fmt_buf[0];
 }
 
 static void
-set_format (const Matrix& m, int& fw)
+set_format (const Matrix& m, int& fw, double& scale)
 {
   curr_real_fmt = 0;
   curr_imag_fmt = 0;
 
   if (free_format)
     return;
 
   bool sign = m.any_element_is_negative ();
@@ -382,25 +395,28 @@ set_format (const Matrix& m, int& fw)
   double min_abs = pr_min_internal (m_abs);
 
   int x_max = max_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (max_abs) + 1.0));
 
   int x_min = min_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (min_abs) + 1.0));
 
+  scale = x_max == 0 ? 1.0 : pow (10.0, x_max - 1);
+
   set_real_matrix_format (sign, x_max, x_min, inf_or_nan,
 			  int_or_inf_or_nan, fw);
 }
 
 static inline void
 set_format (const Matrix& m)
 {
   int fw;
-  set_format (m, fw);
+  double scale;
+  set_format (m, fw, scale);
 }
 
 static void
 set_complex_format (bool sign, int x_max, int x_min, int r_x,
 		    bool inf_or_nan, int int_only, int& r_fw, int& i_fw)
 {
   static char r_fmt_buf[128];
   static char i_fmt_buf[128];
@@ -601,16 +617,24 @@ set_complex_matrix_format (bool sign, in
     {
       int digits = x_max > x_min ? x_max : x_min;
       i_fw = r_fw = digits <= 0 ? 1 : digits;
       if (inf_or_nan && i_fw < 3)
 	i_fw = r_fw = 3;
       r_fw += sign;
       rd = 0;
     }
+  else if (Vfixed_point_format)
+    {
+      rd = prec;
+      i_fw = r_fw = rd + 2;
+      if (inf_or_nan && i_fw < 3)
+	i_fw = r_fw = 3;
+      r_fw += sign;
+    }
   else
     {
       int ld_max, rd_max;
       if (x_max > 0)
 	{
 	  ld_max = x_max;
 	  rd_max = prec > x_max ? prec - x_max : prec;
 	  x_max++;
@@ -641,17 +665,18 @@ set_complex_matrix_format (bool sign, in
 
       i_fw = r_fw = ld + 1 + rd;
       if (inf_or_nan && i_fw < 3)
 	i_fw = r_fw = 3;
       r_fw += sign;
     }
 
   if (! (bank_format || hex_format || bit_format)
-      && (r_fw > Voutput_max_field_width || print_e))
+      && (print_e
+	  || (! Vfixed_point_format && r_fw > Voutput_max_field_width)))
     {
       int exp_field = 4;
       if (x_max > 100 || x_min > 100)
 	exp_field++;
 
       i_fw = r_fw = 1 + prec + exp_field;
       if (inf_or_nan && i_fw < 3)
 	i_fw = r_fw = 3;
@@ -674,17 +699,17 @@ set_complex_matrix_format (bool sign, in
       sprintf (i_fmt_buf, "%%%d.%df", i_fw, rd);
     }
 
   curr_real_fmt = &r_fmt_buf[0];
   curr_imag_fmt = &i_fmt_buf[0];
 }
 
 static void
-set_format (const ComplexMatrix& cm, int& r_fw, int& i_fw)
+set_format (const ComplexMatrix& cm, int& r_fw, int& i_fw, double& scale)
 {
   curr_real_fmt = 0;
   curr_imag_fmt = 0;
 
   if (free_format)
     return;
 
   Matrix rp = real (cm);
@@ -715,29 +740,33 @@ set_format (const ComplexMatrix& cm, int
     ? 0 : static_cast<int> (floor (log10 (i_max_abs) + 1.0));
 
   int i_x_min = i_min_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (i_min_abs) + 1.0));
 
   int x_max = r_x_max > i_x_max ? r_x_max : i_x_max;
   int x_min = r_x_min > i_x_min ? r_x_min : i_x_min;
 
+  scale = x_max == 0 ? 1.0 : pow (10.0, x_max - 1);
+
   set_complex_matrix_format (sign, x_max, x_min, r_x_max, r_x_min,
 			     inf_or_nan, int_or_inf_or_nan, r_fw, i_fw);
 }
 
 static inline void
 set_format (const ComplexMatrix& cm)
 {
   int r_fw, i_fw;
-  set_format (cm, r_fw, i_fw);
+  double scale;
+  set_format (cm, r_fw, i_fw, scale);
 }
 
 static void
-set_range_format (bool sign, int x_max, int x_min, int all_ints, int& fw)
+set_range_format (bool sign, int x_max, int x_min, int all_ints,
+		  int& fw)
 {
   static char fmt_buf[128];
 
   int prec = Voutput_precision;
 
   int ld, rd;
 
   if (bank_format)
@@ -757,16 +786,21 @@ set_range_format (bool sign, int x_max, 
       rd = 0;
     }
   else if (all_ints)
     {
       int digits = x_max > x_min ? x_max : x_min;
       fw = sign + digits;
       rd = 0;
     }
+  else if (Vfixed_point_format)
+    {
+      rd = prec;
+      fw = rd + 2 + sign;
+    }
   else
     {
       int ld_max, rd_max;
       if (x_max > 0)
 	{
 	  ld_max = x_max;
 	  rd_max = prec > x_max ? prec - x_max : prec;
 	  x_max++;
@@ -794,17 +828,18 @@ set_range_format (bool sign, int x_max, 
 
       ld = ld_max > ld_min ? ld_max : ld_min;
       rd = rd_max > rd_min ? rd_max : rd_min;
 
       fw = sign + ld + 1 + rd;
     }
 
   if (! (bank_format || hex_format || bit_format)
-      && (fw > Voutput_max_field_width || print_e))
+      && (print_e
+	  || (! Vfixed_point_format && fw > Voutput_max_field_width)))
     {
       int exp_field = 4;
       if (x_max > 100 || x_min > 100)
 	exp_field++;
 
       fw = sign + 2 + prec + exp_field;
 
       if (print_big_e)
@@ -816,17 +851,17 @@ set_range_format (bool sign, int x_max, 
     {
       sprintf (fmt_buf, "%%%d.%df", fw, rd);
     }
 
   curr_real_fmt = &fmt_buf[0];
 }
 
 static void
-set_format (const Range& r, int& fw)
+set_format (const Range& r, int& fw, double& scale)
 {
   curr_real_fmt = 0;
   curr_imag_fmt = 0;
 
   if (free_format)
     return;
 
   double r_min = r.base ();
@@ -847,24 +882,27 @@ set_format (const Range& r, int& fw)
   double min_abs = r_min < 0.0 ? -r_min : r_min;
 
   int x_max = max_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (max_abs) + 1.0));
 
   int x_min = min_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (min_abs) + 1.0));
 
+  scale = x_max == 0 ? 1.0 : pow (10.0, x_max - 1);
+
   set_range_format (sign, x_max, x_min, all_ints, fw);
 }
 
 static inline void
 set_format (const Range& r)
 {
   int fw;
-  set_format (r, fw);
+  double scale;
+  set_format (r, fw, scale);
 }
 
 union equiv
 {
   double d;
   unsigned char i[sizeof (double)];
 };
 
@@ -1075,16 +1113,28 @@ print_empty_matrix (ostream& os, int nr,
     {
       os << "[]";
       if (Vprint_empty_dimensions)
 	os << "(" << nr << "x" << nc << ")";
     }
 }
 
 static void
+pr_scale_header (ostream& os, double scale)
+{
+  if (Vfixed_point_format && scale != 1.0)
+    {
+      os.form ("  %-8.1e *\n", scale);
+
+      if (! compact_format)
+	os << "\n";
+    }
+}
+
+static void
 pr_col_num_header (ostream& os, int total_width, int max_width,
 		   int lim, int col, int extra_indent)
 {
   if (total_width > max_width && Vsplit_long_rows)
     {
       if (col != 0 && ! compact_format)
 	os << "\n\n";
 
@@ -1150,17 +1200,18 @@ octave_print_internal (ostream& os, cons
 
 	  if (i < nr - 1)
 	    os << "\n";
 	}
     }
   else
     {
       int fw;
-      set_format (m, fw);
+      double scale = 1.0;
+      set_format (m, fw, scale);
       int column_width = fw + 2;
       int total_width = nc * column_width;
       int max_width = command_editor::terminal_cols ();
 
       if (pr_as_read_syntax)
 	max_width -= 4;
       else
 	max_width -= extra_indent;
@@ -1224,32 +1275,37 @@ octave_print_internal (ostream& os, cons
 		    }
 		  else
 		    os << " ...\n";
 		}
 	    }
 	}
       else
 	{
+	  pr_scale_header (os, scale);
+
 	  for (int col = 0; col < nc; col += inc)
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
 	      for (int i = 0; i < nr; i++)
 		{
 		  os << setw (extra_indent) << "";
 
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
-		      pr_float (os, m (i, j), fw);
+		      double tmp = (Vfixed_point_format && scale != 1.0)
+			? m(i,j) / scale : m(i,j);
+
+		      pr_float (os, tmp, fw);
 		    }
 
 		  if (i < nr - 1)
 		    os << "\n";
 		}
 	    }
 	}
     }
@@ -1302,17 +1358,18 @@ octave_print_internal (ostream& os, cons
 
 	  if (i < nr - 1)
 	    os << "\n";
 	}
     }
   else
     {
       int r_fw, i_fw;
-      set_format (cm, r_fw, i_fw);
+      double scale = 1.0;
+      set_format (cm, r_fw, i_fw, scale);
       int column_width = i_fw + r_fw;
       column_width += (bank_format || hex_format|| bit_format) ? 2 : 7;
       int total_width = nc * column_width;
       int max_width = command_editor::terminal_cols ();
 
       if (pr_as_read_syntax)
 	max_width -= 4;
       else
@@ -1377,32 +1434,37 @@ octave_print_internal (ostream& os, cons
 		    }
 		  else
 		    os << " ...\n";
 		}
 	    }
 	}
       else
 	{
+	  pr_scale_header (os, scale);
+
 	  for (int col = 0; col < nc; col += inc)
 	    {
 	      int lim = col + inc < nc ? col + inc : nc;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
 	      for (int i = 0; i < nr; i++)
 		{
 		  os << setw (extra_indent) << "";
 
 		  for (int j = col; j < lim; j++)
 		    {
 		      os << "  ";
 
-		      pr_complex (os, cm (i, j));
+		      Complex tmp = (Vfixed_point_format && scale != 1.0)
+			? cm(i,j) / scale : cm(i,j);
+
+		      pr_complex (os, tmp, r_fw, i_fw);
 		    }
 
 		  if (i < nr - 1) 
 		    os << "\n";
 		}
 	    }
 	}
     }
@@ -1427,17 +1489,18 @@ octave_print_internal (ostream& os, cons
 	    os << " ";
 	  else
 	    os << "+";
 	}
     }
   else
     {
       int fw;
-      set_format (r, fw);
+      double scale = 1.0;
+      set_format (r, fw, scale);
 
       if (pr_as_read_syntax)
 	{
 	  if (free_format)
 	    {
 	      os << base << " : ";
 	      if (increment != 1.0)
 		os << increment << " : ";
@@ -1475,30 +1538,37 @@ octave_print_internal (ostream& os, cons
 		inc++;
 	    }
 
 	  max_width -= extra_indent;
 
 	  if (max_width < 0)
 	    max_width = 0;
 
+	  pr_scale_header (os, scale);
+
 	  int col = 0;
 	  while (col < num_elem)
 	    {
 	      int lim = col + inc < num_elem ? col + inc : num_elem;
 
 	      pr_col_num_header (os, total_width, max_width, lim, col,
 				 extra_indent);
 
 	      os << setw (extra_indent) << "";
 
 	      for (int i = col; i < lim; i++)
 		{
 		  double val = base + i * increment;
+
 		  os << "  ";
+
+		  if (Vfixed_point_format && scale != 1.0)
+		    val /= scale;
+
 		  pr_float (os, val, fw);
 		}
 
 	      col += inc;
 
 	      if (col < num_elem)
 		os << "\n";
 	    }
@@ -1724,16 +1794,24 @@ set output formatting style")
     return retval;
 
   set_format_style (argc, argv);
 
   return retval;
 }
 
 static int
+fixed_point_format (void)
+{
+  Vfixed_point_format = check_preference ("fixed_point_format");
+
+  return 0;
+}
+
+static int
 output_max_field_width (void)
 {
   double val;
   if (builtin_real_scalar_variable ("output_max_field_width", val)
       && ! xisnan (val))
     {
       int ival = NINT (val);
       if (ival > 0 && ival == val)
@@ -1778,16 +1856,19 @@ split_long_rows (void)
   Vsplit_long_rows = check_preference ("split_long_rows");
 
   return 0;
 }
 
 void
 symbols_of_pr_output (void)
 {
+  DEFVAR (fixed_point_format, 0.0, 0, fixed_point_format,
+    "use scaled fixed point format for `format short' and `format long'");
+
   DEFVAR (output_max_field_width, 10.0, 0, output_max_field_width,
     "maximum width of an output field for numeric output");
 
   DEFVAR (output_precision, 5.0, 0, output_precision,
     "number of significant figures to display for numeric output");
 
   DEFVAR (print_empty_dimensions, 1.0, 0, print_empty_dimensions,
     "also print dimensions of empty matrices");
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -391,17 +391,17 @@ do_string_escapes (const string& s)
 	{
 	  retval[i] = s[j];
 	}
 
       i++;
       j++;
     }
 
-  retval.resize (j);
+  retval.resize (i);
 
   return retval;
 }
 
 DEFUN (do_string_escapes, args, ,
   "do_string_escapes (STRING)")
 {
   octave_value retval;
diff --git a/test/octave.test/arith/sumsq-1.m b/test/octave.test/arith/sumsq-1.m
--- a/test/octave.test/arith/sumsq-1.m
+++ b/test/octave.test/arith/sumsq-1.m
@@ -1,1 +1,1 @@
-sumsq ([1, 2, 3]) == 14 && sumsq ([-1; -2; 4i]) == -11
+sumsq ([1, 2, 3]) == 14 && sumsq ([-1; -2; 4i]) == 21
diff --git a/test/octave.test/arith/sumsq-2.m b/test/octave.test/arith/sumsq-2.m
--- a/test/octave.test/arith/sumsq-2.m
+++ b/test/octave.test/arith/sumsq-2.m
@@ -1,1 +1,1 @@
-all (all (sumsq ([1, 2, 3; 2, 3, 4; 4i, 6i, 2]) == [-11, -23, 29]))
+all (all (sumsq ([1, 2, 3; 2, 3, 4; 4i, 6i, 2]) == [21, 49, 29]))
