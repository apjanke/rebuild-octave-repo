# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1272070330 14400
#      Fri Apr 23 20:52:10 2010 -0400
# Node ID 23c1910dbd8ed87818c56cc8fc627aa67005f7b6
# Parent  e86651d2fde5efa45245384b7efc11de006a543c
Fix colorbar() bugs for manual plotboxaspectratio.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,11 @@
 2010-04-23  Ben Abbott <bpabbott@mac.com>
 
+	* plot/colorbar.m: Fix colorbar() bugs for manual plotboxaspectratio.
 	* plot/axis.m: For 'axis normal' restore plotboxaspectratio.
 
 2010-04-23  John W. Eaton  <jwe@octave.org>
 
 	* gethelp.cc (extract_help_text): Use C++ static_cast instead of
 	C-style cast.
 
 2010-04-23  Rik <octave@nomad.inbox5.com>
diff --git a/scripts/plot/colorbar.m b/scripts/plot/colorbar.m
--- a/scripts/plot/colorbar.m
+++ b/scripts/plot/colorbar.m
@@ -101,18 +101,16 @@ function h = colorbar (varargin)
     obj = get (ax);
     position = obj.position;
     clen = rows (get (get (ax, "parent"), "colormap"));
     cext = get (ax, "clim");
     cdiff = (cext(2) - cext(1)) / clen / 2;
     cmin = cext(1) + cdiff;
     cmax = cext(2) - cdiff;
 
-    orig_pos = obj.position;
-    orig_opos = obj.outerposition;
     [pos, cpos, vertical, mirror] =  ...
         __position_colorbox__ (loc, obj, ancestor (ax, "figure"));
     set (ax, "activepositionproperty", "position", "position", pos);
 
     cax = __go_axes__ (get (ax, "parent"), "tag", "colorbar", 
                        "handlevisibility", "on", 
                        "activepositionproperty", "position", 
                        "position", cpos);
@@ -143,52 +141,54 @@ function h = colorbar (varargin)
              "xlim", cext, "xlimmode", "manual",
              "xaxislocation", "bottom", args{:});
       endif
     endif
 
     ctext = text (0, 0, "", "tag", "colorbar","visible", "off", 
                   "handlevisibility", "off", "xliminclude", "off",  
                   "yliminclude", "off", "zliminclude", "off",
-                  "deletefcn", {@deletecolorbar, cax, orig_pos, orig_opos});
+                  "deletefcn", {@deletecolorbar, cax, obj});
 
-    set (cax, "deletefcn", {@resetaxis, orig_pos, orig_opos});
+    set (cax, "deletefcn", {@resetaxis, obj});
 
     addlistener (ax, "clim", {@update_colorbar_clim, hi, vertical})
-    addlistener (ax, "plotboxaspectratio", {@update_colorbar_axis, cax})
-    addlistener (ax, "plotboxaspectratiomode", {@update_colorbar_axis, cax})
-    addlistener (ax, "position", {@update_colorbar_axis, cax})
+    addlistener (ax, "plotboxaspectratio", {@update_colorbar_axis, cax, obj})
+    addlistener (ax, "plotboxaspectratiomode", {@update_colorbar_axis, cax, obj})
+    addlistener (ax, "position", {@update_colorbar_axis, cax, obj})
 
   endif
 
   if (nargout > 0)
     h = cax;
   endif
 endfunction
 
-function deletecolorbar (h, d, hc, pos, opos)
+function deletecolorbar (h, d, hc, orig_props)
   ## Don't delete the colorbar and reset the axis size if the
   ## parent figure is being deleted.
   if (ishandle (hc) && strcmp (get (hc, "type"), "axes") && 
       (isempty (gcbf()) || strcmp (get (gcbf(), "beingdeleted"),"off")))
     if (strcmp (get (hc, "beingdeleted"), "off"))
       delete (hc);
     endif
     if (!isempty (ancestor (h, "axes")) &&
         strcmp (get (ancestor (h, "axes"), "beingdeleted"), "off"))
-      set (ancestor (h, "axes"), "position", pos, "outerposition", opos);
+      set (ancestor (h, "axes"), "position", orig_props.position, ...
+                                 "outerposition", orig_props.outerposition);
     endif
   endif
 endfunction
 
-function resetaxis (h, d, pos, opos)
+function resetaxis (h, d, orig_props)
   if (ishandle (h) && strcmp (get (h, "type"), "axes") && 
       (isempty (gcbf()) || strcmp (get (gcbf(), "beingdeleted"),"off")) &&
       ishandle (get (h, "axes")))
-     set (get (h, "axes"), "position", pos, "outerposition", opos);
+     set (get (h, "axes"), "position", orig_props.position, ...
+                           "outerposition", orig_props.outerposition);
   endif
 endfunction
 
 function update_colorbar_clim (h, d, hi, vert)
   if (ishandle (h) && strcmp (get (h, "type"), "image") && 
       (isempty (gcbf()) || strcmp (get (gcbf(), "beingdeleted"),"off")))
     clen = rows (get (get (h, "parent"), "colormap"));
     cext = get (h, "clim");
@@ -201,21 +201,24 @@ function update_colorbar_clim (h, d, hi,
       set (get (hi, "parent"), "ylim", cext);
     else
       set (hi, "xdata", [cmin, cmax]);
       set (get (hi, "parent"), "xlim", cext);
     endif
   endif
 endfunction
 
-function update_colorbar_axis (h, d, cax)
+function update_colorbar_axis (h, d, cax, orig_props)
+
   if (ishandle (cax) && strcmp (get (cax, "type"), "axes") && 
       (isempty (gcbf()) || strcmp (get (gcbf(), "beingdeleted"),"off")))
     loc = get (cax, "location");
     obj = get (h);
+    obj.position = orig_props.position;
+    obj.outerposition = orig_props.outerposition;
     [pos, cpos, vertical, mirror] =  ...
         __position_colorbox__ (loc, obj, ancestor (h, "figure"));
 
     if (vertical)
       if (mirror)
         set (cax, "xtick", [], "xdir", "normal", "ydir", "normal",
              "yaxislocation", "right", "position", cpos);
       else
@@ -232,44 +235,35 @@ function update_colorbar_axis (h, d, cax
       endif
     endif
 
   endif
 endfunction
 
 function [pos, cpos, vertical, mirr] = __position_colorbox__ (cbox, obj, cf)
 
+  ## This will always represent the position prior to adding the colorbar.
   pos = obj.position;
   sz = pos(3:4);
 
-  off = 0;
   if (strcmpi (obj.plotboxaspectratiomode, "manual"))
-    r = obj.plotboxaspectratio;
-    if (pos(3) > pos(4))
-      switch (cbox)
-        case {"east", "eastoutside", "west", "westoutside"}
-          off = [(pos(3) - pos(4)) ./ (r(2) / r(1)), 0];          
-      endswitch
+    if (isempty (strfind (cbox, "outside")))
+      scale = 1.0;
     else
-      switch (cbox)
-        case {"north", "northoutside", "south", "southoutside"}
-          off = [0, (pos(4) - pos(3)) ./ (r(1) / r(2))];
-          ## This shouldn't be here except that gnuplot doesn't have a
-          ## square window and so a square aspect ratio is not square.
-          ## The corrections are empirical.
-          if (strcmp (get (cf, "__backend__"), "gnuplot"))
-            if (length (cbox) > 7 && strcmp (cbox(end-6:end),"outside"))
-              off = off / 2;
-            else
-              off = off / 1.7;
-            endif
-          endif
-      endswitch
+      scale = 0.8;
     endif
-    off = off / 2;
+    if (isempty (strfind (cbox, "east")) && isempty (strfind (cbox, "west")))
+      scale = [1, scale];
+    else
+      scale = [scale, 1];
+    endif
+    obj.position = obj.position .* [1, 1, scale];
+    off = 0.5 * (obj.position (3:4) - __actual_axis_position__ (obj)(3:4));
+  else
+    off = 0.0;
   endif
 
   switch (cbox)
     case "northoutside"
       origin = pos(1:2) + [0., 0.9] .* sz + [1, -1] .* off;
       sz = sz .* [1.0, 0.06];
       pos(4) = 0.8 * pos(4);
       mirr = true;
@@ -322,20 +316,22 @@ function [pos, cpos, vertical, mirr] = _
     obj.position = pos;
     actual_pos = __actual_axis_position__ (obj);
     if (strfind (cbox, "outside"))
       scale = 1.0;
     else
       scale = 0.9;
     endif
     if (sz(1) > sz(2))
+      ## Ensure north or south colorbars are the proper length
       dx = (1-scale)*actual_pos(3);
       cpos(1) = actual_pos(1) + dx/2;
       cpos(3) = actual_pos(3) - dx;
     else
+      ## Ensure east or west colorbars are the proper height
       dy = (1-scale)*actual_pos(4);
       cpos(2) = actual_pos(2) + dy/2;
       cpos(4) = actual_pos(4) - dy;
     endif
   endif
 
 endfunction
 
