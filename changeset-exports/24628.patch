# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1516574000 18000
#      Sun Jan 21 17:33:20 2018 -0500
# Node ID 55da6c4f1382a8d2ba5899df08f1732c5e800d5f
# Parent  a79f782653ced9948ccf56f5dcf5ca74139889ef
update chdir handling in GUI

* main-window.cc (main_window::new_figure_callback):
Don't call octave_qt_link::update_directory here.  This function
executes in the interpreter thread.

* octave-qt-link.cc (octave_qt_link::m_current_directory,
octave_qt_link::m_new_dir): Delete variables and all uses.
(octave_qt_link::update_directory): Delete function and all uses.
(octave_qt_link::do_change_directory): Don't store directory name
here.  Simply emit change_directory_signal with the name of the new
directory.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -2617,18 +2617,19 @@ main_window::new_figure_callback (void)
 
   Fbuiltin (interp, ovl ("figure"));
   Fdrawnow ();
 }
 
 void
 main_window::change_directory_callback (const std::string& directory)
 {
+  // INTERPRETER THREAD
+
   Fcd (ovl (directory));
-  m_octave_qt_link->update_directory ();
 }
 
 void
 main_window::configure_shortcuts (void)
 {
   // file menu
   shortcut_manager::set_shortcut (m_open_action, "main_file:open_file");
   shortcut_manager::set_shortcut (m_new_script_action, "main_file:new_file");
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -44,20 +44,17 @@ along with Octave; see the file COPYING.
 #include "octave-gui.h"
 #include "octave-qt-link.h"
 #include "resource-manager.h"
 #include "workspace-element.h"
 
 octave_qt_link::octave_qt_link (QWidget *,
                                 octave::gui_application *app_context)
   : octave_link (), m_app_context (app_context)
-{
-  m_current_directory = "";
-  m_new_dir = true;
-}
+{ }
 
 bool
 octave_qt_link::do_confirm_shutdown (void)
 {
   // Lock the mutex before emitting signal.
   lock ();
 
   emit confirm_shutdown_signal ();
@@ -405,44 +402,33 @@ octave_qt_link::do_debug_cd_or_addpath_e
     retval = 2;
 
   return retval;
 }
 
 void
 octave_qt_link::do_change_directory (const std::string& dir)
 {
-  m_current_directory = QString::fromStdString (dir);
-  m_new_dir = true;
-}
-
-void
-octave_qt_link::update_directory ()
-{
-  emit change_directory_signal (m_current_directory);
-  m_new_dir = false;
+  emit change_directory_signal (QString::fromStdString (dir));
 }
 
 void
 octave_qt_link::do_execute_command_in_terminal (const std::string& command)
 {
   emit execute_command_in_terminal_signal (QString::fromStdString (command));
 }
 
 void
 octave_qt_link::do_set_workspace (bool top_level, bool debug,
                                   const std::list<workspace_element>& ws,
                                   const bool& update_variable_editor)
 {
   if (! top_level && ! debug)
     return;
 
-  if (m_new_dir)
-    update_directory ();
-
   QString scopes;
   QStringList symbols;
   QStringList class_names;
   QStringList dimensions;
   QStringList values;
   QIntList complex_flags;
 
   for (std::list<workspace_element>::const_iterator it = ws.begin ();
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -102,18 +102,16 @@ public:
 
   int
   do_debug_cd_or_addpath_error (const std::string& file,
                                 const std::string& dir,
                                 bool addpath_option);
 
   void do_change_directory (const std::string& dir);
 
-  void update_directory (void);
-
   void do_execute_command_in_terminal (const std::string& command);
 
   void do_set_workspace (bool top_level, bool debug,
                          const std::list<workspace_element>& ws,
                          const bool& variable_editor_too = true);
 
   void do_clear_workspace (void);
 
@@ -153,19 +151,16 @@ private:
 
   void do_insert_debugger_pointer (const std::string& file, int line);
   void do_delete_debugger_pointer (const std::string& file, int line);
 
   octave::gui_application *m_app_context;
 
   bool m_shutdown_confirm_result;
 
-  QString m_current_directory;
-  bool m_new_dir;
-
   QMutex m_mutex;
   QWaitCondition m_waitcondition;
 
 signals:
 
   void copy_image_to_clipboard_signal (const QString& file, bool remove_file);
 
   void edit_file_signal (const QString& file);
