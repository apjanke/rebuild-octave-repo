# HG changeset patch
# User Rik <rik@octave.org>
# Date 1513032445 28800
#      Mon Dec 11 14:47:25 2017 -0800
# Node ID 4fda27e1c909ef2b21b88be87f8e0e6778cf85b4
# Parent  08f19fd144f4bf27c6e5de7d26959d5ff7a7c374
# Parent  a7dfb685d261e6cae088e84a4d6c2f35e59360dd
maint: merge stable to default.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -407,16 +407,20 @@ function [hleg, hleg_obj, hplot, labels]
         endif
         typ = get (kids(k), "type");
         while (k > 0
                && ! any (strcmp (typ, {"line","patch","surface","hggroup"})))
           typ = get (kids(--k), "type");
         endwhile
         if (k > 0)
           if (have_labels)
+            ## FIXME: This is inefficient on an existing legend object because
+            ##        it triggers the updateline() callback which then calls
+            ##        legend() itself.  Possibly better to delete the callback
+            ##        on displayname and then re-attach it.  See bug #52641.
             set (kids(k), "displayname", arg);
           endif
           hplots(end+1) = kids(k);
           text_strings(end+1) = arg;
 
           if (--k == 0)
             break;
           endif
@@ -1177,17 +1181,21 @@ function deletelegend2 (h, ~, ca, pos, o
 
 endfunction
 
 function updateline (h, ~, hlegend, linelength, update_name)
 
   if (update_name)
     ## When string changes, have to rebuild legend completely
     [hplots, text_strings] = __getlegenddata__ (hlegend);
-    legend (get (hplots(1), "parent"), hplots, text_strings);
+    ## FIXME: See bug #52641.  Changing an existing legend string to a blank
+    ##        can trigger this.
+    if (! isempty (hplots))
+      legend (get (hplots(1), "parent"), hplots, text_strings);
+    endif
   else
     kids = get (hlegend, "children");
     ll = lm = [];
     for i = 1 : numel (kids)
       if (get (kids(i), "userdata") == h
           && strcmp (get (kids(i), "type"), "line"))
         if (strcmp (get (kids(i), "marker"), "none"))
           ll = kids(i);
