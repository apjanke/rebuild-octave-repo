# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1530041978 -7200
#      Tue Jun 26 21:39:38 2018 +0200
# Node ID 3edae6ba1fcde67f1f435db32dbaf1c24d5c13bb
# Parent  b61f3500651fcbd7fecb0a3b3573453e11c3fd2a
use a custom title bar widget for the main dock widgets

* documentation-dock-widget.cc (documentation_dock_widget):
  replace setWindowTitle () by set_title () which uses a custom title bar
* files-dock-widget.cc (files_dock_widgets): dito
* history-dock-widget.cc (history_dock_widgets): dito
* file-editor.cc (construct): dito
* terminal-dock-widget.cc (terminal_dock_widgets): dito
* variable-editor.cc (variable_editor): dito
* workspace-view.cc (workspace_view): dito

diff --git a/libgui/src/documentation-dock-widget.cc b/libgui/src/documentation-dock-widget.cc
--- a/libgui/src/documentation-dock-widget.cc
+++ b/libgui/src/documentation-dock-widget.cc
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 #include "interpreter-private.h"
 
 namespace octave
 {
   documentation_dock_widget::documentation_dock_widget (QWidget *p)
     : octave_dock_widget ("DocumentationDockWidget", p)
   {
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("Documentation"));
+    set_title (tr ("Documentation"));
     setStatusTip (tr ("See the documentation for help."));
 
     m_docs = new documentation (this);
     setWidget (m_docs);
 
     connect (p, SIGNAL (show_doc_signal (const QString&)),
              this, SLOT (showDoc (const QString&)));
 
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -64,17 +64,17 @@ namespace octave
         QTreeView::mousePressEvent (e);
     }
   };
 
   files_dock_widget::files_dock_widget (QWidget *p)
     : octave_dock_widget ("FilesDockWidget", p)
   {
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("File Browser"));
+    set_title (tr ("File Browser"));
     setToolTip (tr ("Browse your files"));
 
     m_sig_mapper = nullptr;
 
     m_columns_shown = QStringList ();
     m_columns_shown.append (tr ("File size"));
     m_columns_shown.append (tr ("File type"));
     m_columns_shown.append (tr ("Date modified"));
diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -288,17 +288,17 @@ namespace octave
     m_filter->setSizePolicy (sizePol);
     m_filter->completer ()->setCaseSensitivity (Qt::CaseSensitive);
 
     QLabel *filter_label = new QLabel (tr ("Filter"));
 
     m_filter_checkbox = new QCheckBox ();
 
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("Command History"));
+    set_title (tr ("Command History"));
     setWidget (new QWidget ());
 
     m_filter_widget = new QWidget (this);
     QHBoxLayout *filter_layout = new QHBoxLayout ();
     filter_layout->addWidget (filter_label);
     filter_layout->addWidget (m_filter_checkbox);
     filter_layout->addWidget (m_filter);
     filter_layout->setMargin(0);
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -2041,17 +2041,17 @@ namespace octave
     connect (m_tab_widget, SIGNAL (tabCloseRequested (int)),
              this, SLOT (handle_tab_close_request (int)));
 
     connect (m_tab_widget, SIGNAL (currentChanged (int)),
              this, SLOT (active_tab_changed (int)));
 
     resize (500, 400);
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("Editor"));
+    set_title (tr ("Editor"));
 
     check_actions ();
   }
 
   void file_editor::add_file_editor_tab (file_editor_tab *f, const QString& fn)
   {
     m_tab_widget->addTab (f, fn);
 
diff --git a/libgui/src/terminal-dock-widget.cc b/libgui/src/terminal-dock-widget.cc
--- a/libgui/src/terminal-dock-widget.cc
+++ b/libgui/src/terminal-dock-widget.cc
@@ -40,17 +40,17 @@ namespace octave
   terminal_dock_widget::terminal_dock_widget (QWidget *p)
     : octave_dock_widget ("TerminalDockWidget", p),
       m_terminal (QTerminal::create (p))
   {
     m_terminal->setObjectName ("OctaveTerminal");
     m_terminal->setFocusPolicy (Qt::StrongFocus);
 
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("Command Window"));
+    set_title (tr ("Command Window"));
 
     setWidget (m_terminal);
     setFocusProxy (m_terminal);
 
     connect (m_terminal, SIGNAL (interrupt_signal (void)),
              this, SLOT (terminal_interrupt (void)));
 
     // Connect the visibility signal to the terminal for dis-/enabling timers
diff --git a/libgui/src/variable-editor.cc b/libgui/src/variable-editor.cc
--- a/libgui/src/variable-editor.cc
+++ b/libgui/src/variable-editor.cc
@@ -1038,17 +1038,17 @@ namespace octave
       m_font (),
       m_sel_font (),
       m_table_colors (),
       m_current_focus_vname (""),
       m_hovered_focus_vname (""),
       m_focus_widget (nullptr),
       m_focus_widget_vdw (nullptr)
   {
-    setWindowTitle (tr ("Variable Editor"));
+    set_title (tr ("Variable Editor"));
     setStatusTip (tr ("Edit variables."));
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
     setAttribute (Qt::WA_AlwaysShowToolTips);
 
     m_main->setParent (this);
 // See Octave bug #53409 and https://bugreports.qt.io/browse/QTBUG-55357
 #if (QT_VERSION < 0x050601) || (QT_VERSION >= 0x050701)
     m_main->setDockOptions (QMainWindow::AnimatedDocks |
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -46,17 +46,17 @@ along with Octave; see the file COPYING.
 #include "symscope.h"
 
 namespace octave
 {
   workspace_view::workspace_view (QWidget *p)
     : octave_dock_widget ("WorkspaceView", p), m_view (new QTableView (this))
   {
     setWindowIcon (QIcon (":/actions/icons/logo.png"));
-    setWindowTitle (tr ("Workspace"));
+    set_title (tr ("Workspace"));
     setStatusTip (tr ("View the variables in the active workspace."));
 
     m_filter = new QComboBox (this);
     m_filter->setToolTip (tr ("Enter text to filter the workspace"));
     m_filter->setEditable (true);
     m_filter->setMaxCount (MaxFilterHistory);
     m_filter->setInsertPolicy (QComboBox::NoInsert);
     m_filter->setSizeAdjustPolicy (QComboBox::AdjustToMinimumContentsLengthWithIcon);
