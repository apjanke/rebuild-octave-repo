# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1310604210 25200
#      Wed Jul 13 17:43:30 2011 -0700
# Node ID 645a87434fcb97868281b57435aa3ec840092af6
# Parent  c99714aeb00850dffa1b419ba53bb3463da6c257
std.m: Allow null inputs [].  Bug #33532.

* std.m: Allow null inputs [].  Bug #33532.

diff --git a/scripts/statistics/base/std.m b/scripts/statistics/base/std.m
--- a/scripts/statistics/base/std.m
+++ b/scripts/statistics/base/std.m
@@ -86,26 +86,24 @@ function retval = std (x, opt = 0, dim)
   else
     if (!(isscalar (dim) && dim == fix (dim))
         || !(1 <= dim && dim <= nd))
       error ("std: DIM must be an integer and a valid dimension");
     endif
   endif
 
   n = sz(dim);
-  if (n == 1)
+  if (n == 1 || isempty (x))
     if (isa (x, 'single'))
       retval = zeros (sz, 'single');
     else
       retval = zeros (sz);
     endif
-  elseif (numel (x) > 0)
+  else
     retval = sqrt (sumsq (center (x, dim), dim) / (n - 1 + opt));
-  else
-    error ("std: X must not be empty");
   endif
 
 endfunction
 
 
 %!test
 %! x = ones (10, 2);
 %! y = [1, 3];
@@ -113,16 +111,17 @@ endfunction
 %! assert(std (y), sqrt (2), sqrt (eps));
 %! assert(std (x, 0, 2), zeros (10, 1));
 
 %!assert(std (ones (3, 1, 2), 0, 2), zeros (3, 1, 2));
 %!assert(std ([1 2], 0), sqrt(2)/2, 5*eps);
 %!assert(std ([1 2], 1), 0.5, 5*eps);
 %!assert(std(1), 0);
 %!assert(std(single(1)), single(0));
+%!assert(std([]), []);
+%!assert(std(ones (1,3,0,2)), ones (1,3,0,2));
 
 %% Test input validation
 %!error std ();
 %!error std (1, 2, 3, 4);
 %!error std (['A'; 'B'])
 %!error std (1, -1);
-%!error std ([], 1);
 
