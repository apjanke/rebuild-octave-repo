# HG changeset patch
# User jwe
# Date 1171091442 0
#      Sat Feb 10 07:10:42 2007 +0000
# Node ID 85eb75190e01c317c42f4b81bc8766e2320bd096
# Parent  0fcce0872e02ee2dd8a5173aa01c09b03cd8baf7
[project @ 2007-02-10 07:10:42 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2007-02-10  John W. Eaton  <jwe@octave.org>
+
+	* oct-stream.cc (octave_stream::rewind): Call seek (0, SEEK_SET)
+	instead of rep->rewind.
+	(octave_base_stream::rewind): Delete Function.
+	* oct-stream.h (octave_base_stream::rewind): Delete decl.
+
 2007-02-09  John W. Eaton  <jwe@octave.org>
 
 	* ls-mat5.cc (PAD): Adjust to change in write_mat5_tag.
 	(TAGLENGTH): Delete unused macro.
 
 	* ov-struct.cc (octave_struct::load_ascii,
 	octave_struct::load_binary, octave_struct::load_hdf5):
 	Delete obsolete attempt at backward compatibility.
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -927,17 +927,17 @@ octave_base_stream::error (const std::st
   fail = true;
   errmsg = msg;
 }
 
 void
 octave_base_stream::error (const std::string& who, const std::string& msg)
 {
   fail = true;
-  errmsg = who + msg;
+  errmsg = who + ": " + msg;
 }
 
 void
 octave_base_stream::clear (void)
 {
   fail = false;
   errmsg = "";
 }
@@ -2704,22 +2704,16 @@ octave_base_stream::puts (const std::str
 	error ("%s: write error", who.c_str ());
     }
   else
     invalid_operation (who, "writing");
 
   return retval;
 }
 
-int
-octave_base_stream::rewind (void)
-{
-  return seek (0, std::ios::beg);
-}
-
 // Return current error message for this stream.
 
 std::string
 octave_base_stream::error (bool clear_err, int& err_num)
 {
   err_num = fail ? -1 : 0;
 
   std::string tmp = errmsg;
@@ -2730,17 +2724,17 @@ octave_base_stream::error (bool clear_er
   return tmp;
 }
 
 void
 octave_base_stream::invalid_operation (const std::string& who, const char *rw)
 {
   // Note that this is not ::error () !
 
-  error (who + ": stream not open for " + rw);
+  error (who, "stream not open for " + rw);
 }
 
 octave_stream::octave_stream (octave_base_stream *bs)
   : rep (bs)
 {
   if (rep)
     rep->count = 1;
 }
@@ -2970,22 +2964,17 @@ octave_stream::tell (void)
     retval = rep->tell ();
 
   return retval;
 }
 
 int
 octave_stream::rewind (void)
 {
-  int retval = -1;
-
-  if (stream_ok ())
-    retval = rep->rewind ();
-
-  return retval;
+  return seek (0, SEEK_SET);
 }
 
 bool
 octave_stream::is_open (void) const
 {
   bool retval = false;
 
   if (stream_ok ())
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -462,18 +462,16 @@ private:
   int printf (const std::string& fmt, const octave_value_list& args,
 	      const std::string& who /* = "printf" */);
 
   int puts (const std::string& s, const std::string& who /* = "puts" */);
 
   // We can always do this in terms of seek(), so the derived class
   // only has to provide that.
 
-  int rewind (void);
-
   void invalid_operation (const std::string& who, const char *rw);
 
   // No copying!
 
   octave_base_stream (const octave_base_stream&);
 
   octave_base_stream& operator = (const octave_base_stream&);
 };
