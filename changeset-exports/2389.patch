# HG changeset patch
# User jwe
# Date 845147407 0
#      Sat Oct 12 19:10:07 1996 +0000
# Node ID 3db75e5cdf7c2dff195cd748d2d3f7dfc72d776d
# Parent  4be11abb8d8c6aba08e04c672bb89b5242c8e6c7
[project @ 1996-10-12 19:07:29 by jwe]

diff --git a/src/pt-mvr-base.cc b/src/pt-mvr-base.cc
--- a/src/pt-mvr-base.cc
+++ b/src/pt-mvr-base.cc
@@ -24,17 +24,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "error.h"
-#include "pt-const.h"
+#include "ov.h"
 #include "pt-mvr-base.h"
 
 // A base class for objects that can be return multiple values
 
 octave_value
 tree_multi_val_ret::eval (bool /* print */)
 {
   panic ("invalid evaluation of generic expression");
diff --git a/src/pt-mvr.cc b/src/pt-mvr.cc
--- a/src/pt-mvr.cc
+++ b/src/pt-mvr.cc
@@ -307,25 +307,25 @@ tree_multi_assignment_expression::eval (
 	  tree_index_expression *lhs_expr = lhs->operator () (p);
 
 	  if (i < nargout)
 	    {
 	      // XXX FIXME? XXX -- this is apparently the way Matlab
 	      // works, but maybe we should have the option of
 	      // skipping the assignment instead.
 
-	      octave_value *tmp = 0;
+	      tree_constant *tmp = 0;
 	      if (results(i).is_undefined ())
 		{
 		  error ("element number %d undefined in return list", i+1);
 		  eval_error ();
 		  break;
 		}
 	      else
-		tmp = new octave_value (results(i));
+		tmp = new tree_constant (results(i));
 
 	      tree_simple_assignment_expression tmp_expr
 		(lhs_expr, tmp, 1, 0, ma_line, ma_column);
 
 	      results(i) = tmp_expr.eval (false); // May change
 
 	      if (error_state)
 		break;
diff --git a/src/pt-mvr.h b/src/pt-mvr.h
--- a/src/pt-mvr.h
+++ b/src/pt-mvr.h
@@ -36,17 +36,17 @@ class tree_identifier;
 class tree_index_expression;
 class tree_indirect_ref;
 class tree_return_list;
 
 class tree_walker;
 
 #include <string>
 
-#include "pt-const.h"
+#include "ov.h"
 #include "pt-mvr-base.h"
 #include "oct-obj.h"
 
 // Used internally.
 
 class
 tree_oct_obj : public tree_multi_val_ret
 {
