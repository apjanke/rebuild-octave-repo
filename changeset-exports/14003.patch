# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1323249387 18000
#      Wed Dec 07 04:16:27 2011 -0500
# Node ID 1555c5a177c9ff53417d5b8dd846793c4472e6cb
# Parent  82f5f76726a20cbc18ee9ce7b1577b5d7aef11ba
better fix for fontconfig segfault

* txt-eng-ft.cc (ft_manager::fontconfig_initialized): Rename from
fc_init_done.  Always declare and define.
(ft_manager::freetype_initialized): New data member.
(ft_manager::ft_manager): Set freetype_initialized.
(ft_manager::~ft_manager): Call FT_Done_FreeType if freetype is
initialized.  Comment out code to conditionally call FcFini.
(ft_manager::instance_ok): Do delete instance.

diff --git a/src/txt-eng-ft.cc b/src/txt-eng-ft.cc
--- a/src/txt-eng-ft.cc
+++ b/src/txt-eng-ft.cc
@@ -19,19 +19,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#if HAVE_FREETYPE
+#if defined (HAVE_FREETYPE)
 
-#if HAVE_FONTCONFIG
+#if defined (HAVE_FONTCONFIG)
 #include <fontconfig/fontconfig.h>
 #endif
 
 #include <iostream>
 
 #include "singleton-cleanup.h"
 
 #include "error.h"
@@ -72,24 +72,18 @@ public:
   static bool instance_ok (void)
     {
       bool retval = true;
 
       if (! instance)
         {
           instance = new ft_manager ();
 
-          // FIXME -- there seem to be some memory management errors
-          // related to fontconfig that cause segfaults when Octave
-          // exits if ft_manager::instance is explicitly deleted.  So
-          // skip doing that for now.
-#if 0
           if (instance)
             singleton_cleanup_list::add (cleanup_instance);
-#endif
         }
 
       if (! instance)
         {
           ::error ("unable to create ft_manager!");
 
           retval = false;
         }
@@ -112,56 +106,58 @@ private:
 private:
 
   // No copying!
 
   ft_manager (const ft_manager&);
 
   ft_manager& operator = (const ft_manager&);
 
-  ft_manager (void) : library ()
-#if HAVE_FONTCONFIG
-    , fc_init_done (false)
-#endif
+  ft_manager (void)
+    : library (), freetype_initialized (false), fontconfig_initialized (false)
     {
       if (FT_Init_FreeType (&library))
-        {
-          ::error ("unable to initialize freetype library");
-        }
+        ::error ("unable to initialize freetype library");
+      else
+        freetype_initialized = true;
 
-#if HAVE_FONTCONFIG
-      fc_init_done = false;
+#if defined (HAVE_FONTCONFIG)
       if (! FcInit ())
-        {
-          ::error ("unable to initialize fontconfig library");
-        }
+        ::error ("unable to initialize fontconfig library");
       else
-        {
-          fc_init_done = true;
-        }
+        fontconfig_initialized = true;
 #endif
     }
 
   ~ft_manager (void)
     {
-#if HAVE_FONTCONFIG
-      FcFini ();
-      fc_init_done = false;
+      if (freetype_initialized)
+        FT_Done_FreeType (library);
+
+#if defined (HAVE_FONTCONFIG)
+      // FIXME -- Skip the call to FcFini because it can trigger the
+      // assertion
+      //
+      //   octave: fccache.c:507: FcCacheFini: Assertion `fcCacheChains[i] == ((void *)0)' failed.
+      //
+      // if (fontconfig_initialized)
+      //   FcFini ();
 #endif
     }
 
+
   FT_Face do_get_font (const std::string& name, const std::string& weight,
                        const std::string& angle, double size)
     {
       FT_Face retval = 0;
 
       std::string file;
 
-#if HAVE_FONTCONFIG
-      if (fc_init_done)
+#if defined (HAVE_FONTCONFIG)
+      if (fontconfig_initialized)
         {
           int fc_weight, fc_angle;
 
           if (weight == "bold")
             fc_weight = FC_WEIGHT_BOLD;
           else if (weight == "light")
             fc_weight = FC_WEIGHT_LIGHT;
           else if (weight == "demi")
@@ -228,19 +224,18 @@ private:
       if (! file.empty () && FT_New_Face (library, file.c_str (), 0, &retval))
         ::warning ("ft_manager: unable to load font: %s", file.c_str ());
 
       return retval;
     }
 
 private:
   FT_Library library;
-#if HAVE_FONTCONFIG
-  bool fc_init_done;
-#endif
+  bool freetype_initialized;
+  bool fontconfig_initialized;
 };
 
 ft_manager* ft_manager::instance = 0;
 
 // ---------------------------------------------------------------------------
 
 ft_render::ft_render (void)
     : text_processor (), face (0), bbox (1, 4, 0.0),
