# HG changeset patch
# User David Grundberg <davidg@cs.umu.se>
# Date 1259146069 -3600
#      Wed Nov 25 11:47:49 2009 +0100
# Branch release-3-2-x
# Node ID 11f9c592b035d1067daae72561c30c26a27619ba
# Parent  2641c6febd46387f2df0c60979b47e5dc61e24dc
Call user-defined subsref/subsasgn with 1xN structs instead of Nx1

diff --git a/scripts/miscellaneous/substruct.m b/scripts/miscellaneous/substruct.m
--- a/scripts/miscellaneous/substruct.m
+++ b/scripts/miscellaneous/substruct.m
@@ -26,18 +26,18 @@
 ## Author:  jwe
 
 function retval = substruct (varargin)
 
   nargs = nargin;
 
   if (nargs > 1 && mod (nargs, 2) == 0)
     narg_pairs = nargs / 2;
-    typ = cell (narg_pairs, 1);
-    sub = cell (narg_pairs, 1);
+    typ = cell (1, narg_pairs);
+    sub = cell (1, narg_pairs);
     k = 1;
     for i = 1:2:nargs
       t = varargin{i};
       dot = false;
       switch (t)
 	case { "()", "{}" }
 	case "."
 	  dot = true;
@@ -61,20 +61,20 @@ function retval = substruct (varargin)
   else
     print_usage ();
   endif
 
 endfunction
 
 %!test
 %! x(1,1).type = "()";
-%! x(2,1).type = "{}";
-%! x(3,1).type = ".";
+%! x(1,2).type = "{}";
+%! x(1,3).type = ".";
 %! x(1,1).subs = {1,2,3};
-%! x(2,1).subs = ":";
-%! x(3,1).subs = "foo";
+%! x(1,2).subs = ":";
+%! x(1,3).subs = "foo";
 %! y = substruct ("()", {1,2,3}, "{}", ":", ".", "foo");
 %! assert(x,y);
 %!error assert(substruct);
 %!error assert(substruct (1, 2, 3));
 %!error assert(substruct ("x", 1));
 %!error assert(substruct ("()", [1,2,3]));
 %!error assert(substruct (".", {1,2,3}));
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-03  David Grundberg  <davidg@cs.umu.se>
+
+	* ov-class.cc (make_idx_args): Call user-defined subsref/subsasgn
+	with 1xN structs instead of Nx1.
+
 2009-09-30  John W. Eaton  <jwe@octave.org>
 
 	* error.cc (error_1, pr_where_2, handle_message):
 	Don't do anything if fmt is empty.
 	(Ferror): Call print_usage if nargin == 0.
 
 	2009-09-18  Jaroslav Hajek  <highegg@gmail.com>
 
diff --git a/src/ov-class.cc b/src/ov-class.cc
--- a/src/ov-class.cc
+++ b/src/ov-class.cc
@@ -155,18 +155,18 @@ make_idx_args (const std::string& type,
 	       const std::string& who)
 {
   octave_value retval;
 
   size_t len = type.length ();
 
   if (len == idx.size ())
     {
-      Cell type_field (len, 1);
-      Cell subs_field (len, 1);
+      Cell type_field (1, len);
+      Cell subs_field (1, len);
 
       std::list<octave_value_list>::const_iterator p = idx.begin ();
 
       for (size_t i = 0; i < len; i++)
 	{
 	  char t = type[i];
 
 	  switch (t)
