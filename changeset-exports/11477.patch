# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294689033 18000
#      Mon Jan 10 14:50:33 2011 -0500
# Node ID a02d00dd3d5f5a3a5c1ff7f968921bf9657ff23b
# Parent  ff7e0776ba0fa297ee68aae627b61130c17efc08
expm.m: new tests

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-10  John W. Eaton  <jwe@octave.org>
+
+	* linear-algebra/expm.m: Validate nargin.  New tests.
+
 2011-01-10  John W. Eaton  <jwe@octave.org>
 
 	* linear-algebra/logm.m: Handle scalar and diagonal matrix
 	arguments specially.  Call logm_pade_pf only if m > 1.  New tests.
 	Special case suggested by Marco Caliari <marco.caliari@univr.it>.
 
 2011-01-10  John W. Eaton  <jwe@octave.org>
 
diff --git a/scripts/linear-algebra/expm.m b/scripts/linear-algebra/expm.m
--- a/scripts/linear-algebra/expm.m
+++ b/scripts/linear-algebra/expm.m
@@ -67,16 +67,20 @@
 ## @ifnottex
 ## @code{Dq(A)}
 ## @end ifnottex
 ## is ill-conditioned.
 ## @end deftypefn
 
 function r = expm (A)
 
+  if (nargin != 1)
+    print_usage ();
+  endif
+
   if (! ismatrix (A) || ! issquare (A))
     error ("expm: A must be a square matrix");
   endif
 
   if (isscalar (A))
     r = exp (A);
     return
   elseif (strfind (typeinfo (A), "diagonal matrix"))
@@ -130,8 +134,20 @@ function r = expm (A)
   r = d * r / d;
   r(p, p) = r;
   ## Inverse trace reduction.
   if (trshift >0)
     r *= exp (trshift);
   endif
 
 endfunction
+
+%!assert(norm(expm([1 -1;0 1]) - [e -e; 0 e]) < 1e-5);
+%!assert(expm([1 -1 -1;0 1 -1; 0 0 1]), [e -e -e/2; 0 e -e; 0 0 e], 1e-5);
+
+%% Test input validation
+%!error expm ();
+%!error expm (1, 2);
+%!error <expm: A must be a square matrix> expm([1 0;0 1; 2 2]);
+
+%!assert (expm (10), expm (10))
+%!assert (full (expm (eye (3))), expm (full (eye (3))))
+%!assert (full (expm (10*eye (3))), expm (full (10*eye (3))), 8*eps)
