# HG changeset patch
# User jwe
# Date 848601091 0
#      Thu Nov 21 18:31:31 1996 +0000
# Node ID 97abf5d72929f42f0280c3f0a9d906bc36b5a403
# Parent  f7e3d23f0a8fcbbeee151578a6eee1132875c373
[project @ 1996-11-21 18:31:31 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+Thu Nov 21 12:30:36 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-str-mat.h (octave_char_matrix_str): Provide transpose and
+	hermitian operators.
+	* ov-ch-mat.h (octave_char_matrix): Likewise.
+
 Wed Nov 20 00:35:57 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sighandlers.h (struct octave_interrupt_handler): Provide
 	forward declaration here.
 	* sighandlers.cc (octave_interrupt_handler): New struct.
 	(octave_catch_interrupts): Rename from catch_interrupts.
 	(octave_ignore_interrupts, octave_set_interrupt_handler):
 	New functions.
diff --git a/src/ov-ch-mat.h b/src/ov-ch-mat.h
--- a/src/ov-ch-mat.h
+++ b/src/ov-ch-mat.h
@@ -111,16 +111,22 @@ public:
 
   ComplexMatrix complex_matrix_value (bool = false) const { return matrix; }
 
   charMatrix char_matrix_value (bool = false) const { return matrix; }
 
   octave_value convert_to_str (void) const
     { return octave_value (matrix); }
 
+  octave_value transpose (void) const
+    { return octave_value (matrix.transpose ()); }
+
+  octave_value hermitian (void) const
+    { return octave_value (matrix.transpose ()); }
+
   void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
diff --git a/src/ov-str-mat.h b/src/ov-str-mat.h
--- a/src/ov-str-mat.h
+++ b/src/ov-str-mat.h
@@ -97,16 +97,22 @@ public:
   bool is_true (void) const;
 
   Matrix matrix_value (bool = false) const;
 
   string_vector all_strings (void) const;
 
   string string_value (void) const;
 
+  octave_value transpose (void) const
+    { return octave_value (matrix.transpose (), true); }
+
+  octave_value hermitian (void) const
+    { return octave_value (matrix.transpose (), true); }
+
   void print (ostream& os, bool pr_as_read_syntax = false);
 
   int type_id (void) const { return t_id; }
 
   string type_name (void) const { return t_name; }
 
   static int static_type_id (void) { return t_id; }
 
