# HG changeset patch
# User pantxo <pantxo.diribarne@gmail.com>
# Date 1395137173 -3600
#      Tue Mar 18 11:06:13 2014 +0100
# Node ID 89a8a90ac8508a3ddfde0867eeb50dc9e73dbe98
# Parent  5264b0ec9f97a745baaaecf139479fc676e81a62
axis.m: Use -Inf/Inf to indicated autoscaling for a particular bound (bug #37006).

* axis.m (__axis__): replace -Inf/Inf limits by autoscaled values.

diff --git a/scripts/plot/appearance/axis.m b/scripts/plot/appearance/axis.m
--- a/scripts/plot/appearance/axis.m
+++ b/scripts/plot/appearance/axis.m
@@ -25,17 +25,19 @@
 ## @deftypefnx {Function File} {} axis (@dots{}, @var{option})
 ## @deftypefnx {Function File} {} axis (@var{hax}, @dots{})
 ## @deftypefnx {Function File} {@var{limits} =} axis ()
 ## Set axis limits and appearance.
 ##
 ## The argument @var{limits} should be a 2-, 4-, or 6-element vector.  The
 ## first and second elements specify the lower and upper limits for the
 ## x-axis.  The third and fourth specify the limits for the y-axis, and the
-## fifth and sixth specify the limits for the z-axis.
+## fifth and sixth specify the limits for the z-axis.  The special values
+## -Inf and Inf may be used to indicate that the limit should automatically be
+## computed based on the data in the axis.
 ##
 ## Without any arguments, @code{axis} turns autoscaling on.
 ##
 ## With one output argument, @code{@var{limits} = axis} returns the current
 ## axis limits.
 ##
 ## The vector argument specifying limits is optional, and additional
 ## string arguments may be used to specify various axis properties.  For
@@ -291,25 +293,45 @@ function limits = __axis__ (ca, ax, vara
     endif
 
     for i = 1:2:len
       if (ax(i) >= ax(i+1))
         error ("axis: limits(%d) must be less than limits(%d)", i, i+1);
       endif
     endfor
 
+    autoscale = isinf (ax);
+    lims = [];
     if (len > 1)
+      if (any (autoscale(1:2)))
+        set (ca, "xlimmode", "auto");
+        lims = ax(1:2);
+        lims(autoscale(1:2)) = get (ca, "xlim")(autoscale(1:2));
+        ax(1:2) = lims;
+      endif
       set (ca, "xlim", [ax(1), ax(2)]);
     endif
 
     if (len > 3)
+      if (any (autoscale(3:4)))
+        set (ca, "ylimmode", "auto");
+        lims = ax(3:4);
+        lims(autoscale(3:4)) = get (ca, "ylim")(autoscale(3:4));
+        ax(3:4) = lims;
+      endif
       set (ca, "ylim", [ax(3), ax(4)]);
     endif
 
     if (len > 5)
+      if (any (autoscale(5:6)))
+        set (ca, "zlimmode", "auto");
+        lims = ax(5:6);
+        lims(autoscale(5:6)) = get (ca, "zlim")(autoscale(5:6));
+        ax(5:6) = lims;
+      endif
       set (ca, "zlim", [ax(5), ax(6)]);
     endif
 
   else
     error ("axis: expecting no args, or a vector with 2, 4, or 6 elements");
   endif
 
   if (! isempty (varargin))
