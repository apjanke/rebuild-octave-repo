# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1551837210 28800
#      Tue Mar 05 17:53:30 2019 -0800
# Branch stable
# Node ID b0f359a5ad350cb8d71511a1ab06815eb1de2cd8
# Parent  4d7665fc8f6c797ad085ade5f346da346e1a0778
mkoctfile: use the TMPDIR environment variable if set (bug #55814)

* mkoctfile.in.cc (get_temp_directory): Use the standard TMPDIR environment
variable when writing temporary files on all systems.  Do not use the TMP
environment variable on Unixy systems, only on Windows.

diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -554,37 +554,38 @@ is_true (const std::string& s)
   return (s == "yes" || s == "true");
 }
 
 static std::string
 get_temp_directory (void)
 {
   std::string tempd;
 
+  tempd = octave_getenv ("TMPDIR");
+
 #if defined (__MINGW32__) || defined (_MSC_VER)
 
-  tempd = octave_getenv ("TEMP");
+  if (tempd.empty ())
+    tempd = octave_getenv ("TEMP");
 
   if (tempd.empty ())
     tempd = octave_getenv ("TMP");
 
 #if defined (P_tmpdir)
   if (tempd.empty ())
     tempd = P_tmpdir;
 #endif
 
   // Some versions of MinGW and MSVC either don't define P_tmpdir, or
   // define it to a single backslash.  In such cases just use C:\temp.
   if (tempd.empty () || tempd == R"(\)")
     tempd = R"(c:\temp)";
 
 #else
 
-  tempd = octave_getenv ("TMP");
-
 #if defined (P_tmpdir)
   if (tempd.empty ())
     tempd = P_tmpdir;
 #else
   if (tempd.empty ())
     tempd = "/tmp";
 #endif
 
