# HG changeset patch
# User Rik <rik@octave.org>
# Date 1450487844 28800
#      Fri Dec 18 17:17:24 2015 -0800
# Node ID 42319d289714e47b0cbde468e8c8215e9768a2a3
# Parent  7832c351a6f5cccff0bbf68dfbc1c1748bb15f9e
maint: Eliminate ANY_ALL macro in data.cc

* data.cc (Fany, Fall): Replace macro call used just twice with actual
expansion of code.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -83,31 +83,16 @@ along with Octave; see the file COPYING.
 #endif
 
 static void
 index_error (const char *fmt, const std::string& idx, const std::string& msg)
 {
   error (fmt, idx.c_str (), msg.c_str ());
 }
 
-#define ANY_ALL(FCN) \
- \
-  int nargin = args.length (); \
- \
-  if (nargin < 1 || nargin > 2) \
-    print_usage (); \
- \
-  int dim = (nargin == 1 ? -1 : args(1).int_value (#FCN ": DIM must be an integer") - 1); \
- \
-  if (dim >= -1) \
-    return octave_value (args(0).FCN (dim)); \
-  else \
-    error (#FCN ": invalid dimension argument = %d", dim + 1); \
- \
-
 DEFUN (all, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} all (@var{x})\n\
 @deftypefnx {} {} all (@var{x}, @var{dim})\n\
 For a vector argument, return true (logical 1) if all elements of the vector\n\
 are nonzero.\n\
 \n\
 For a matrix argument, return a row vector of logical ones and\n\
@@ -121,17 +106,28 @@ all ([2, 3; 1, 0])\n\
 @end group\n\
 @end example\n\
 \n\
 If the optional argument @var{dim} is supplied, work along dimension\n\
 @var{dim}.\n\
 @seealso{any}\n\
 @end deftypefn")
 {
-  ANY_ALL (all);
+  int nargin = args.length ();
+
+  if (nargin < 1 || nargin > 2)
+    print_usage ();
+
+  int dim = (nargin == 1 ? -1
+                         : args(1).int_value ("all: DIM must be an integer")-1);
+
+  if (dim < -1)
+    error ("all: invalid dimension argument = %d", dim + 1);
+
+  return ovl (args(0).all (dim));
 }
 
 /*
 %!test
 %! x = ones (3);
 %! x(1,1) = 0;
 %! assert (all (all (rand (3) + 1) == [1, 1, 1]) == 1);
 %! assert (all (all (x) == [0, 1, 1]) == 1);
@@ -175,17 +171,28 @@ If the optional argument @var{dim} is su
 @group\n\
 any (eye (2, 4), 2)\n\
  @result{} [ 1; 1 ]\n\
 @end group\n\
 @end example\n\
 @seealso{all}\n\
 @end deftypefn")
 {
-  ANY_ALL (any);
+  int nargin = args.length ();
+
+  if (nargin < 1 || nargin > 2)
+    print_usage ();
+
+  int dim = (nargin == 1 ? -1
+                         : args(1).int_value ("any: DIM must be an integer")-1);
+
+  if (dim < -1)
+    error ("any: invalid dimension argument = %d", dim + 1);
+
+  return ovl (args(0).any (dim));
 }
 
 /*
 %!test
 %! x = zeros (3);
 %! x(3,3) = 1;
 %! assert (all (any (x) == [0, 0, 1]) == 1);
 %! assert (all (any (ones (3)) == [1, 1, 1]) == 1);
