# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1507834112 -7200
#      Thu Oct 12 20:48:32 2017 +0200
# Node ID e201dc969e2409d107908738094935018c4fa259
# Parent  60e4e324a52504de37d387ead5c8e26082a42a0e
* camlookat.m: Act on correct axes. No user interaction for demo. (patch #9049)

diff --git a/scripts/plot/appearance/camlookat.m b/scripts/plot/appearance/camlookat.m
--- a/scripts/plot/appearance/camlookat.m
+++ b/scripts/plot/appearance/camlookat.m
@@ -59,31 +59,31 @@ function camlookat (hh)
       hax = hh;
       hh = get (hax, "children");
     elseif (all (ishandle (hh)))
       hax = ancestor (hh, "axes");
       if numel (hax) > 1
         hax = unique ([hax{:}]);
       endif
       if (numel (hax) > 1)
-        error ("camlookat: HANDLE_LIST must be children of the same axes.")
+        error ("camlookat: HANDLE_LIST must be children of the same axes.");
       endif
     endif
   endif
 
   if (isempty (hh))
     return
   end
 
   x0 = x1 = y0 = y1 = z0 = z1 = [];
   for i = 1:numel (hh)
     h = hh(i);
 
     if (! ishandle (h))
-      error ("camlookat: Inputs must be handles.")
+      error ("camlookat: Inputs must be handles.");
     end
 
     x0_ = min (get (h, "xdata")(:));
     x1_ = max (get (h, "xdata")(:));
     y0_ = min (get (h, "ydata")(:));
     y1_ = max (get (h, "ydata")(:));
     z0_ = min (get (h, "zdata")(:));
     z1_ = max (get (h, "zdata")(:));
@@ -97,17 +97,17 @@ function camlookat (hh)
       y0 = min (y0, y0_);  y1 = max (y1, y1_);
       z0 = min (z0, z0_);  z1 = max (z1, z1_);
     endif
   endfor
 
   dar = daspect (hax);
   
   ## current view direction
-  curdir = (camtarget () - campos ()) ./ dar;
+  curdir = (camtarget (hax) - campos (hax)) ./ dar;
   curdir /= norm (curdir);
 
   ## target to middle of bounding box
   mid = [x0+x1, y0+y1, z0+z1]/2 ./ dar;
 
   ## vertices of the bounding box
   bb = [x0 y0 z0;
         x0 y0 z1;
@@ -137,43 +137,43 @@ function camlookat (hh)
   ## Is bb_proj in front of or behind mid?
   if (curdir * (mid - bb_proj)' > 0)
     cp = bb_proj - dist * curdir;
   else
     cp = 2*mid - bb_proj - dist * curdir;
   endif
 
   ## set camera properties
-  camva ("manual")  # avoid auto-adjusting
-  camtarget (mid .* dar)
-  campos (cp .* dar)
+  camva (hax, "manual");  # avoid auto-adjusting
+  camtarget (hax, mid .* dar);
+  campos (hax, cp .* dar);
 
 endfunction
 
 
 %!demo
 %! [x, y, z] = peaks ();
-%! surf(x, y, z/5);
+%! surf (x, y, z/5);
 %! hold on
 %! [x, y, z] = sphere ();
-%! s1 = surf(x/2, y/2+1.5, z/2+2);
-%! s2 = surf(x/5+0.2, y/5-2, z/5+1);
+%! s1 = surf (x/2, y/2+1.5, z/2+2);
+%! s2 = surf (x/5+0.2, y/5-2, z/5+1);
 %! axis equal
 %! axis tight
-%! pause
-%! camlookat (s1)
-%! pause
-%! camlookat (s2)
-%! pause
-%! camlookat ([s1 s2])
+%! pause (1);
+%! camlookat (s1);
+%! pause (1);
+%! camlookat (s2);
+%! pause (1);
+%! camlookat ([s1 s2]);
 
 
 %!test
 %! ## not an error (does nothing)
-%! camlookat ([])
+%! camlookat ([]);
 
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   sphere ();
 %!   camlookat ();
 %!   assert (camva ("mode"), "manual");
 %! unwind_protect_cleanup
@@ -246,40 +246,64 @@ endfunction
 %!   T3 = camtarget ();
 %!   P3 = campos ();
 %!   assert (T1, T3, -10*eps);
 %!   assert (P1, P3, -10*eps);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
+## act on given axes
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   [x, y, z] = sphere ();
+%!   hax1 = subplot (1, 2, 1);
+%!   hs11 = surf (hax1, x, y, z);
+%!   hold on
+%!   hs12 = surf (hax1, x, y+2, z+3);
+%!   hax2 = subplot (1, 2, 2);
+%!   hs21 = surf (hax2, x, y, z);
+%!   hold on
+%!   hs22 = surf (hax2, x, y+2, z+3);
+%!   ct2 = camtarget (hax2);
+%!   camlookat (hs11);
+%!   assert (camtarget (hax1), [0 0 0]);
+%!   assert (camtarget (hax2), ct2);
+%!   camlookat (hs22);
+%!   assert (camtarget (hax1), [0 0 0]);
+%!   assert (camtarget (hax2), [0 2 3]);
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
 ## compare to matlab2014a output
 %!test
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   [x, y, z] = peaks ();
-%!   s3 = surf(x, y, z/5);
+%!   s3 = surf (x, y, z/5);
 %!   hold on
 %!   [x, y, z] = sphere ();
-%!   s2 = surf(x/2, y/2+1.5, z/2+2);
-%!   s1 = mesh(x/2-4, 3*y, z/2 - 1);
+%!   s2 = surf (x/2, y/2+1.5, z/2+2);
+%!   s1 = mesh (x/2-4, 3*y, z/2 - 1);
 %!   axis equal
 %!   axis tight
-%!   camlookat (s1)
-%!   assert (camtarget (), [-4 0 -1], -eps)
-%!   assert (campos (), [-22.806319527016 -24.5088727773662 16.8359421671461], -1e-7)
-%!   camlookat (s2)
-%!   assert (camtarget (), [0 1.5 2], -eps)
-%!   assert (campos (), [-5.82093528266174 -6.08599055403138 7.52058391388657], -1e-7)
-%!   camlookat (s3)
-%!   assert (camtarget (), [0 0 0.1528529020838], 1e-10)
-%!   assert (campos (), [-30.3728392082653 -39.5826547014375 28.9585000034444], -1e-7)
-%!   camlookat ()
-%!   assert (camtarget (), [-0.75 0 0.5], -eps)
-%!   assert (campos (), [-35.7955620339723 -45.6722656481532 33.7372645671114], -1e-7)
+%!   camlookat (s1);
+%!   assert (camtarget (), [-4 0 -1], -eps);
+%!   assert (campos (), [-22.806319527016 -24.5088727773662 16.8359421671461], -1e-7);
+%!   camlookat (s2);
+%!   assert (camtarget (), [0 1.5 2], -eps);
+%!   assert (campos (), [-5.82093528266174 -6.08599055403138 7.52058391388657], -1e-7);
+%!   camlookat (s3);
+%!   assert (camtarget (), [0 0 0.1528529020838], 1e-10);
+%!   assert (campos (), [-30.3728392082653 -39.5826547014375 28.9585000034444], -1e-7);
+%!   camlookat ();
+%!   assert (camtarget (), [-0.75 0 0.5], -eps);
+%!   assert (campos (), [-35.7955620339723 -45.6722656481532 33.7372645671114], -1e-7);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
 ## Test input validation
 %!error <Invalid call> camlookat (1, 2)
 %!error <must be handle> camlookat ("a")
 %!error <children of the same axes>
