# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1452196594 -3600
#      Thu Jan 07 20:56:34 2016 +0100
# Node ID 43b498b8c38cee239fce988ea67bf31f36e1d5ad
# Parent  e2fdbdd00ef9ffcb2fb2644853b7c65e574063ef
always restore breakpoints of an editor file after saving

* file-editor-tab.cc (save_file): always restore the breakpoints without
  checking preferences or asking the user;
  (notice_settings): no more preferences for restoring the breakpoints

* file-editor-tab.h: removed obsolete class varaibale

* settings-dialog.cc (settings_dialog, write_changed_settings): no more
  references for restoring breakpoints

* settings-dialog.ui: removed tab for debugger settings

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1628,76 +1628,18 @@ file_editor_tab::save_file (const QStrin
 
   if (remove_on_success)
     {
       emit tab_remove_request ();
       return;  // Don't touch member variables after removal
     }
 
   // Attempt to restore the breakpoints if that is desired.
-  if (! list.isEmpty ())
-    {
-      bool restore_breakpoints;
-      if (_breakpoint_filesave_behavior == "RESTORE")
-        restore_breakpoints = true;
-      else if (_breakpoint_filesave_behavior == "DISCARD")
-        restore_breakpoints = false;
-      else
-        {
-          // ask user
-          QMessageBox *dlgBox = new QMessageBox (QMessageBox::Question,
-                                  tr ("Octave Editor"),
-                                  tr ("Would you like to restore adjusted breakpoints?"),
-                                  QMessageBox::Yes | QMessageBox::No, this);
-
-          // add checkbox whether to store the result in the settings
-          QCheckBox *checkBox = new QCheckBox ("Don't ask again.");
-          checkBox->setCheckState (Qt::Unchecked);
-          QVBoxLayout *extra = new QVBoxLayout (dlgBox);
-          extra->addWidget (checkBox);
-          QGridLayout *dialog_layout = dynamic_cast<QGridLayout*> (dlgBox->layout ());
-          dialog_layout->addLayout (extra,dialog_layout->rowCount (),0,
-                                    1,dialog_layout->columnCount ());
-
-          // shoe the dialog
-          dlgBox->exec ();
-
-          // evaluate result
-          QMessageBox::StandardButton clicked = dlgBox->standardButton (dlgBox->clickedButton ());
-          restore_breakpoints = (clicked == QMessageBox::Yes);
-
-          if (checkBox->checkState () == Qt::Checked)
-            {
-              // User no longer wants to be asked so save the setting for
-              // this object...
-              if (restore_breakpoints)
-                _breakpoint_filesave_behavior = "RESTORE";
-              else
-                _breakpoint_filesave_behavior = "DISCARD";
-
-              // ...and on disc (and Preferences...)
-              QSettings *settings = resource_manager::get_settings ();
-              if (settings)
-                {
-                  settings->setValue ("debugger/breakpoint_filesave_behavior",
-                                      _breakpoint_filesave_behavior);
-                  settings->sync ();
-                }
-            }
-
-          delete dlgBox;
-
-        }
-
-      if (restore_breakpoints)
-        {
-          for (int i = 0; i < list.length (); i++)
-            handle_request_add_breakpoint (list.value (i) + 1);
-        }
-    }
+  for (int i = 0; i < list.length (); i++)
+    handle_request_add_breakpoint (list.value (i) + 1);
 }
 
 void
 file_editor_tab::save_file_as (bool remove_on_success)
 {
   // Simply put up the file chooser dialog box with a slot connection
   // then return control to the system waiting for a file selection.
 
@@ -2098,19 +2040,16 @@ file_editor_tab::notice_settings (const 
   _edit_area->SendScintilla (QsciScintillaBase::SCI_SETHSCROLLBAR,
         settings->value ("editor/show_hscroll_bar",true).toBool ());
   _edit_area->SendScintilla (QsciScintillaBase::SCI_SETSCROLLWIDTH,-1);
   _edit_area->SendScintilla (QsciScintillaBase::SCI_SETSCROLLWIDTHTRACKING,true);
 
   _long_title = settings->value ("editor/longWindowTitle", false).toBool ();
   update_window_title (_edit_area->isModified ());
 
-  _breakpoint_filesave_behavior = settings->value ("debugger/breakpoint_filesave_behavior", "ASK").
-                                                    toString ();
-
   _edit_area->setEdgeColumn (
               settings->value ("editor/long_line_column",80).toInt ());
   if (settings->value ("editor/long_line_marker",true).toBool ())
     _edit_area->setEdgeMode (QsciScintilla::EdgeLine);
   else
     _edit_area->setEdgeMode (QsciScintilla::EdgeNone);
 
   // reload changed files
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -267,18 +267,16 @@ private:
   QString _new_encoding;
 
   bool _long_title;
   bool _copy_available;
   bool _is_octave_file;
   bool _always_reload_changed_files;
   bool _smart_indent;
 
-  QString _breakpoint_filesave_behavior;
-
   QFileSystemWatcher _file_system_watcher;
 
   find_dialog *_find_dialog;
   bool _find_dialog_is_visible;
   QRect _find_dialog_geometry;
 
   QsciAPIs *_lexer_apis;
   QString _prep_apis_file;
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -303,24 +303,16 @@ settings_dialog::settings_dialog (QWidge
   icon_group->addButton (ui->general_icon_letter);
   QString widget_icon_set =
     settings->value ("DockWidgets/widget_icon_set","NONE").toString ();
   ui->general_icon_octave-> setChecked (true);  // the default (if invalid set)
   ui->general_icon_octave-> setChecked (widget_icon_set == "NONE");
   ui->general_icon_graphic-> setChecked (widget_icon_set == "GRAPHIC");
   ui->general_icon_letter-> setChecked (widget_icon_set == "LETTER");
 
-  // how breakpoints should behave when file is saved
-  QString breakpoint_filesave_behavior =
-      settings->value ("debugger/breakpoint_filesave_behavior", "ASK").toString ();
-  ui->debugger_filesave_ask->setChecked (true);  // the default (if invalid set)
-  ui->debugger_filesave_ask->setChecked (breakpoint_filesave_behavior == "ASK");
-  ui->debugger_filesave_restore->setChecked (breakpoint_filesave_behavior == "RESTORE");
-  ui->debugger_filesave_discard->setChecked (breakpoint_filesave_behavior == "DISCARD");
-
   // custom title bar of dock widget
   QVariant default_var = QColor (255,255,255);
   QColor bg_color = settings->value ("Dockwidgets/title_bg_color",
                                      default_var).value<QColor> ();
   _widget_title_bg_color = new color_picker (bg_color);
   _widget_title_bg_color->setEnabled (false);
   ui->layout_widget_bgtitle->addWidget (_widget_title_bg_color,0);
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
@@ -715,25 +707,16 @@ settings_dialog::read_terminal_colors (Q
   // place grid with elements into the tab
   ui->terminal_colors_box->setLayout (style_grid);
 }
 
 void
 settings_dialog::write_changed_settings (bool closing)
 {
   QSettings *settings = resource_manager::get_settings ();
-  // FIXME: what should happen if settings is 0?
-
-  // how breakpoints should be treated when file is saved
-  QString breakpoint_filesave_behavior = "ASK";
-  if (ui->debugger_filesave_restore->isChecked ())
-    breakpoint_filesave_behavior = "RESTORE";
-  else if (ui->debugger_filesave_discard->isChecked ())
-    breakpoint_filesave_behavior = "DISCARD";
-  settings->setValue ("debugger/breakpoint_filesave_behavior", breakpoint_filesave_behavior);
 
   // the icon set
   QString widget_icon_set = "NONE";
   if (ui->general_icon_letter->isChecked ())
     widget_icon_set = "LETTER";
   else if (ui->general_icon_graphic->isChecked ())
     widget_icon_set = "GRAPHIC";
   settings->setValue ("DockWidgets/widget_icon_set",widget_icon_set);
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -1494,121 +1494,16 @@
             </sizepolicy>
            </property>
           </widget>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="tab_debugger">
-      <attribute name="title">
-       <string>Debugger</string>
-      </attribute>
-      <layout class="QVBoxLayout" name="vlayout_dbg_00">
-       <item>
-        <widget class="QScrollArea" name="scrollArea_8">
-         <property name="maximumSize">
-          <size>
-           <width>16777215</width>
-           <height>16777215</height>
-          </size>
-         </property>
-         <property name="widgetResizable">
-          <bool>true</bool>
-         </property>
-         <widget class="QWidget" name="scrollAreaWidgetContents_9">
-          <property name="geometry">
-           <rect>
-            <x>0</x>
-            <y>0</y>
-            <width>658</width>
-            <height>571</height>
-           </rect>
-          </property>
-          <layout class="QVBoxLayout" name="vlayout_dbg_01">
-           <item>
-            <layout class="QVBoxLayout" name="vlayout_dbg_02">
-             <item>
-              <layout class="QGridLayout" name="glayout_dbg_01">
-               <item row="4" column="0">
-                <widget class="QGroupBox" name="groupbox_dbg_01">
-                 <property name="sizePolicy">
-                  <sizepolicy hsizetype="Expanding" vsizetype="Expanding">
-                   <horstretch>0</horstretch>
-                   <verstretch>0</verstretch>
-                  </sizepolicy>
-                 </property>
-                 <property name="title">
-                  <string>Breakpoint Retention Upon Saving File</string>
-                 </property>
-                 <widget class="QRadioButton" name="debugger_filesave_ask">
-                  <property name="geometry">
-                   <rect>
-                    <x>10</x>
-                    <y>20</y>
-                    <width>273</width>
-                    <height>21</height>
-                   </rect>
-                  </property>
-                  <property name="text">
-                   <string>Ask whether breakpoints should be restored</string>
-                  </property>
-                 </widget>
-                 <widget class="QRadioButton" name="debugger_filesave_restore">
-                  <property name="geometry">
-                   <rect>
-                    <x>10</x>
-                    <y>40</y>
-                    <width>231</width>
-                    <height>21</height>
-                   </rect>
-                  </property>
-                  <property name="text">
-                   <string>Automatically restore breakpoints</string>
-                  </property>
-                 </widget>
-                 <widget class="QRadioButton" name="debugger_filesave_discard">
-                  <property name="geometry">
-                   <rect>
-                    <x>10</x>
-                    <y>60</y>
-                    <width>231</width>
-                    <height>21</height>
-                   </rect>
-                  </property>
-                  <property name="text">
-                   <string>Discard breakpoints</string>
-                  </property>
-                 </widget>
-                </widget>
-               </item>
-              </layout>
-             </item>
-            </layout>
-           </item>
-           <item>
-            <spacer name="vspacer_dbg_01">
-             <property name="orientation">
-              <enum>Qt::Vertical</enum>
-             </property>
-             <property name="sizeHint" stdset="0">
-              <size>
-               <width>20</width>
-               <height>40</height>
-              </size>
-             </property>
-            </spacer>
-           </item>
-          </layout>
-         </widget>
-        </widget>
-       </item>
-      </layout>
-     </widget>
      <widget class="QWidget" name="tab_terminal">
       <attribute name="title">
        <string>Terminal</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_14">
        <item>
         <widget class="QScrollArea" name="scrollArea_3">
          <property name="widgetResizable">
