# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1202804861 18000
#      Tue Feb 12 03:27:41 2008 -0500
# Branch release-3-0-x
# Node ID 83f4996e8d01d0ef8156c611cb300158119cf0ff
# Parent  a3710cf0b0104cc218d8bc5e32073631c4aa9cd1
fix for loop iteration limit bug with ranges

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-02-12  John W. Eaton  <jwe@octave.org>
+
+	* pt-loop.cc (tree_simple_for_command::eval): Compute range
+	element with multiplication.
+
 2008-02-08  John W. Eaton  <jwe@octave.org>
 
 	* ov-struct.cc (octave_struct::subsref): Allow Cell::index to resize.
 
 2008-02-07  David Bateman  <dbateman@free.fr>
 
 	* ov-range.h (octave_range::sort): New functions.
 
diff --git a/src/pt-loop.cc b/src/pt-loop.cc
--- a/src/pt-loop.cc
+++ b/src/pt-loop.cc
@@ -352,23 +352,31 @@ tree_simple_for_command::eval (void)
     if (rhs.is_range ())
       {
 	Range rng = rhs.range_value ();
 
 	octave_idx_type steps = rng.nelem ();
 	double b = rng.base ();
 	double increment = rng.inc ();
 	bool quit = false;
-	double tmp_val = b;
 
-	for (octave_idx_type i = 0; i < steps; i++, tmp_val += increment)
+	for (octave_idx_type i = 0; i < steps; i++)
 	  {
 	    MAYBE_DO_BREAKPOINT;
 
-	    octave_value val (tmp_val);
+	    // Use multiplication here rather than declaring a
+	    // temporary variable outside the loop and using
+	    //
+	    //   tmp_val += increment
+	    //
+	    // to avoid problems with limited precision.  Also, this
+	    // is consistent with the way Range::matrix_value is
+	    // implemented.
+
+	    octave_value val (b + i * increment);
 
 	    do_for_loop_once (ult, val, quit);
 
 	    if (quit)
 	      break;
 	  }
       }
     else if (rhs.is_scalar_type ())
