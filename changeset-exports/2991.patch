# HG changeset patch
# User jwe
# Date 863816449 0
#      Fri May 16 21:00:49 1997 +0000
# Node ID fc751d2a99fd46cf509fc598c580b39125da359d
# Parent  35bd1b05cfbe506510dc80c782a65d4dd36e2cf6
[project @ 1997-05-16 21:00:48 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 Fri May 16 00:07:11 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pt-idx.cc (tree_index_expression::name): New function.
+
+	* pt.cc	(tree::str_print_code): New file, new convenience function.
+	* pt-arg-list.cc (tree_argument_list::get_arg_names): Use it.
+	* pt-assign.cc (tree_simple_assignment::rvalue): Likewise.
+	(tree_multi_assignment::rvalue): Likewise.
+
 	* pt-colon.h (tree_colon_expression::save_base): New data memmber.
 	(tree_colon_expression::preserve_base): New function.
 	* parse.y (finish_colon_expression): When converting to a simple
 	expression, be sure to delete the original colon expression but
 	not the base value.
 
 	* pt-mat.cc (tree_matrix::~tree_matrix): Actually do something.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -65,17 +65,17 @@ else
 endif
 
 OV_INCLUDES := ov-re-mat.h ov-cx-mat.h ov-ch-mat.h \
 	ov-list.h ov-struct.h ov-scalar.h ov-range.h \
 	ov-complex.h ov-va-args.h ov-colon.h ov-base.h \
 	ov-str-mat.h ov-bool-mat.h ov-bool.h ov-file.h ov.h \
 	ov-fcn.h ov-builtin.h ov-mapper.h ov-usr-fcn.h ov-typeinfo.h
 
-PT_INCLUDES := pt-all.h pt-arg-list.h pt-assign.h pt-base.h \
+PT_INCLUDES := pt.h pt-all.h pt-arg-list.h pt-assign.h \
 	pt-binop.h pt-cmd.h pt-colon.h pt-const.h pt-decl.h \
 	pt-except.h pt-exp.h pt-id.h pt-idx.h pt-indir.h \
 	pt-jump.h pt-loop.h pt-mat.h pt-misc.h pt-plot.h \
 	pt-pr-code.h pt-select.h pt-stmt.h pt-unop.h pt-walk.h
 
 INCLUDES := BaseSLList.h Map.h SLList.h SLStack.h Stack.h defun-dld.h \
 	defun-int.h defun.h dirfns.h dynamic-ld.h error.h file-io.h \
 	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
@@ -106,17 +106,17 @@ OP_XSRC := op-b-b.cc op-bm-bm.cc op-cm-c
 OP_SRC := $(addprefix OPERATORS/, $(OP_XSRC))
 
 OV_SRC := ov-base.cc ov-ch-mat.cc ov-list.cc ov-re-mat.cc \
 	ov-cx-mat.cc ov-range.cc ov-scalar.cc ov-complex.cc \
 	ov-str-mat.cc ov-struct.cc ov-va-args.cc ov-colon.cc \
 	ov-bool-mat.cc ov-bool.cc ov-file.cc ov.cc ov-fcn.cc \
 	ov-builtin.cc ov-mapper.cc ov-usr-fcn.cc ov-typeinfo.cc
 
-PT_SRC := pt-arg-list.cc pt-assign.cc pt-binop.cc \
+PT_SRC := pt.cc pt-arg-list.cc pt-assign.cc pt-binop.cc \
 	pt-cmd.cc pt-colon.cc pt-const.cc pt-decl.cc pt-except.cc \
 	pt-exp.cc pt-id.cc pt-idx.cc pt-indir.cc pt-jump.cc \
 	pt-loop.cc pt-mat.cc pt-misc.cc pt-plot.cc pt-pr-code.cc \
 	pt-select.cc pt-stmt.cc pt-unop.cc
 
 SOURCES := BaseSLList.cc Map.cc SLList.cc SLStack.cc Stack.cc \
 	data.cc defaults.cc defun.cc dirfns.cc dynamic-ld.cc \
 	error.cc file-io.cc fn-cache.cc gripes.cc help.cc input.cc \
diff --git a/src/pt-arg-list.cc b/src/pt-arg-list.cc
--- a/src/pt-arg-list.cc
+++ b/src/pt-arg-list.cc
@@ -142,29 +142,17 @@ tree_argument_list::get_arg_names (void)
   string_vector retval (len);
 
   int k = 0;
 
   for (Pix p = first (); p; next (p))
     {
       tree_expression *elt = this->operator () (p);
 
-      strstream str_buf;
-
-      tree_print_code pc_buf (str_buf);
-
-      elt->accept (pc_buf);
-
-      str_buf << ends;
-
-      const char *s = str_buf.str ();
-
-      retval(k++) = s;
-
-      delete [] s;
+      retval(k++) = elt->str_print_code ();
     }
 
   return retval;
 }
 
 void
 tree_argument_list::accept (tree_walker& tw)
 {
diff --git a/src/pt-assign.cc b/src/pt-assign.cc
--- a/src/pt-assign.cc
+++ b/src/pt-assign.cc
@@ -35,17 +35,16 @@ Software Foundation, 59 Temple Place - S
 #include "error.h"
 #include "input.h"
 #include "oct-obj.h"
 #include "oct-lvalue.h"
 #include "pager.h"
 #include "ov.h"
 #include "pt-arg-list.h"
 #include "pt-assign.h"
-#include "pt-pr-code.h"
 #include "pt-walk.h"
 #include "utils.h"
 
 // TRUE means print the right hand side of an assignment instead of
 // the left.
 static bool Vprint_rhs_assign_val;
 
 // Simple assignment expressions.
@@ -109,38 +108,25 @@ tree_simple_assignment::rvalue (void)
 		  // new value of the referenced object below, instead
 		  // of the indexed value (which should be the same as
 		  // the right hand side value).
 
 		  ult.clear_index ();
 
 		  if (error_state)
 		    eval_error ();
-		  else if (! Vprint_rhs_assign_val)
+		  else
 		    {
 		      octave_value lhs_val = ult.value ();
 
 		      if (! error_state && print_result ())
 			{
 			  if (Vprint_rhs_assign_val)
-			    {
-			      ostrstream buf;
-
-			      tree_print_code tpc (buf);
-
-			      lhs->accept (tpc);
-
-			      buf << ends;
-
-			      const char *tag = buf.str ();
-
-			      rhs_val.print_with_name (octave_stdout, tag);
-
-			      delete [] tag;
-			    }
+			    rhs_val.print_with_name (octave_stdout,
+						     lhs->str_print_code ());
 			  else
 			    lhs_val.print_with_name (octave_stdout,
 						     lhs->name ());
 			}
 		    }
 		}
 	    }
 	}
@@ -266,32 +252,18 @@ tree_multi_assignment::rvalue (int)
 			    eval_error ();
 			  else if (! Vprint_rhs_assign_val)
 			    {
 			      octave_value lhs_val = ult.value ();
 
 			      if (! error_state && print_result ())
 				{
 				  if (Vprint_rhs_assign_val)
-				    {
-				      ostrstream buf;
-
-				      tree_print_code tpc (buf);
-
-				      lhs_elt->accept (tpc);
-
-				      buf << ends;
-
-				      const char *tag = buf.str ();
-
-				      tmp.print_with_name
-					(octave_stdout, tag);
-
-				      delete [] tag;
-				    }
+				    tmp.print_with_name (octave_stdout,
+							 lhs_elt->str_print_code ());
 				  else
 				    lhs_val.print_with_name (octave_stdout,
 							     lhs_elt->name ());
 				}
 			    }
 			}
 		    }
 
diff --git a/src/pt-idx.cc b/src/pt-idx.cc
--- a/src/pt-idx.cc
+++ b/src/pt-idx.cc
@@ -39,16 +39,25 @@ Software Foundation, 59 Temple Place - S
 // Index expressions.
 
 tree_index_expression::~tree_index_expression (void)
 {
   delete expr;
   delete list;
 }
 
+// This is useful for printing the name of the variable in an indexed
+// assignment.
+
+string
+tree_index_expression::name (void) const
+{
+  return expr->name ();
+}
+
 octave_value_list
 tree_index_expression::rvalue (int nargout)
 {
   octave_value_list retval;
 
   if (error_state)
     return retval;
 
diff --git a/src/pt-idx.h b/src/pt-idx.h
--- a/src/pt-idx.h
+++ b/src/pt-idx.h
@@ -50,16 +50,18 @@ public:
 			 int l = -1, int c = -1)
     : tree_expression (l, c), expr (e), list (lst), arg_nm () { }
 
   ~tree_index_expression (void);
 
   bool is_index_expression (void) const
     { return true; }
 
+  string name (void) const;
+
   tree_expression *expression (void)
     { return expr; }
 
   tree_argument_list *arg_list (void)
     { return list; }
 
   bool rvalue_ok (void) const
     { return true; }
diff --git a/src/pt.cc b/src/pt.cc
new file mode 100644
--- /dev/null
+++ b/src/pt.cc
@@ -0,0 +1,66 @@
+/*
+
+Copyright (C) 1996, 1997 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+*/
+
+#if defined (__GNUG__)
+#pragma implementation
+#endif
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <string>
+
+#include <iostream.h>
+#include <strstream.h>
+
+#include "pt.h"
+#include "pt-pr-code.h"
+
+// Hide the details of the string buffer so that we are less likely to
+// create a memory leak.
+
+string
+tree::str_print_code (void)
+{
+  ostrstream buf;
+
+  tree_print_code tpc (buf);
+
+  accept (tpc);
+
+  buf << ends;
+
+  const char *s = buf.str ();
+
+  string retval = s;
+
+  delete [] s;
+
+  return retval;
+}
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; End: ***
+*/
diff --git a/src/pt.h b/src/pt.h
--- a/src/pt.h
+++ b/src/pt.h
@@ -22,16 +22,20 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_tree_h)
 #define octave_tree_h 1
 
 #if defined (__GNUG__)
 #pragma interface
 #endif
 
+#include <string>
+
+class ostream;
+
 class tree_walker;
 
 // Base class for the parse tree.
 
 class
 tree
 {
 public:
@@ -47,16 +51,18 @@ public:
   virtual int line (void) const
     { return line_num; }
 
   virtual int column (void) const
     { return column_num; }
 
   virtual void accept (tree_walker& tw) = 0;
 
+  string str_print_code (void);
+
 private:
 
   // The input line and column where we found the text that was
   // eventually converted to this tree node.
   int line_num;
   int column_num;
 
   // No copying!
