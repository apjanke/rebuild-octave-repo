# HG changeset patch
# User Rik <rik@octave.org>
# Date 1493766074 25200
#      Tue May 02 16:01:14 2017 -0700
# Node ID 314d980bee931b04049ca39be784d01d3bb126b1
# Parent  8befed6e9ccc48aff6d79fde7296e5314832a469
maint: Add '#include "XXX.h"' to XXX.cc files.

* __init_qt__.cc, data.cc, ft-text-renderer.cc, sparse-dmsolve.cc:
Add '#include "XXX.h".

* oct-string.cc, ov-java.h, singleton-cleanup.cc: Use quotes rather than angle
brackets for #includes of local header files.

diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -32,16 +32,17 @@ along with Octave; see the file COPYING.
 #include <QRegExp>
 
 #include "graphics.h"
 #include "interpreter.h"
 #include "defun.h"
 
 #include "Backend.h"
 #include "QtHandlesUtils.h"
+#include "__init_qt__.h"
 
 namespace QtHandles
 {
 
   static bool qtHandlesInitialized = false;
 
   bool
   __init__ (void)
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -39,33 +39,34 @@ along with Octave; see the file COPYING.
 #include "lo-math.h"
 #include "mx-base.h"
 #include "oct-base64.h"
 #include "oct-binmap.h"
 #include "oct-time.h"
 #include "quit.h"
 
 #include "Cell.h"
+#include "data.h"
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
-#include "ovl.h"
-#include "ov.h"
 #include "ov-class.h"
-#include "ov-float.h"
 #include "ov-complex.h"
+#include "ov-cx-mat.h"
+#include "ov-cx-sparse.h"
+#include "ov-float.h"
 #include "ov-flt-complex.h"
-#include "ov-cx-mat.h"
 #include "ov-flt-cx-mat.h"
-#include "ov-cx-sparse.h"
+#include "ov.h"
+#include "ovl.h"
+#include "pager.h"
 #include "pt-mat.h"
 #include "utils.h"
 #include "variables.h"
-#include "pager.h"
 #include "xnorm.h"
 
 #if ! defined (HAVE_HYPOTF) && defined (HAVE__HYPOTF)
 #  define hypotf _hypotf
 #  define HAVE_HYPOTF 1
 #endif
 
 static void
diff --git a/libinterp/corefcn/ft-text-renderer.cc b/libinterp/corefcn/ft-text-renderer.cc
--- a/libinterp/corefcn/ft-text-renderer.cc
+++ b/libinterp/corefcn/ft-text-renderer.cc
@@ -21,16 +21,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "base-text-renderer.h"
+#include "ft-text-renderer.h"
 
 #if defined (HAVE_FREETYPE)
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
diff --git a/libinterp/octave-value/ov-java.h b/libinterp/octave-value/ov-java.h
--- a/libinterp/octave-value/ov-java.h
+++ b/libinterp/octave-value/ov-java.h
@@ -20,18 +20,18 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_ov_java_h)
 #define octave_ov_java_h 1
 
 #include "octave-config.h"
 
-#include <ovl.h>
-#include <ov.h>
+#include "ov.h"
+#include "ovl.h"
 
 typedef void *voidptr;
 
 class OCTINTERP_API octave_java : public octave_base_value
 {
 public:
 
   octave_java (void);
diff --git a/liboctave/numeric/sparse-dmsolve.cc b/liboctave/numeric/sparse-dmsolve.cc
--- a/liboctave/numeric/sparse-dmsolve.cc
+++ b/liboctave/numeric/sparse-dmsolve.cc
@@ -29,16 +29,17 @@ along with Octave; see the file COPYING.
 
 #include "MArray.h"
 #include "MSparse.h"
 #include "MatrixType.h"
 #include "oct-inttypes.h"
 #include "oct-locbuf.h"
 #include "oct-sort.h"
 #include "oct-sparse.h"
+#include "sparse-dmsolve.h"
 #include "sparse-qr.h"
 
 template <typename T>
 static MSparse<T>
 dmsolve_extract (const MSparse<T> &A, const octave_idx_type *Pinv,
                  const octave_idx_type *Q, octave_idx_type rst,
                  octave_idx_type rend, octave_idx_type cst,
                  octave_idx_type cend, octave_idx_type maxnz = -1,
diff --git a/liboctave/util/oct-string.cc b/liboctave/util/oct-string.cc
--- a/liboctave/util/oct-string.cc
+++ b/liboctave/util/oct-string.cc
@@ -25,17 +25,17 @@ along with Octave; see the file COPYING.
 
 #include "oct-string.h"
 
 #include <cctype>
 #include <cstring>
 
 #include <string>
 
-#include <Array.h>
+#include "Array.h"
 
 template <typename T>
 static bool
 str_data_cmp (const typename T::value_type *a, const typename T::value_type *b,
               const typename T::size_type n)
 {
   for (typename T::size_type i = 0; i < n; ++i)
     if (a[i] != b[i])
diff --git a/liboctave/util/singleton-cleanup.cc b/liboctave/util/singleton-cleanup.cc
--- a/liboctave/util/singleton-cleanup.cc
+++ b/liboctave/util/singleton-cleanup.cc
@@ -19,18 +19,18 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include <lo-error.h>
-#include <singleton-cleanup.h>
+#include "lo-error.h"
+#include "singleton-cleanup.h"
 
 singleton_cleanup_list *singleton_cleanup_list::instance = nullptr;
 
 singleton_cleanup_list::~singleton_cleanup_list (void)
 {
   for (fptr fcn : fcn_list)
     {
       fcn ();
