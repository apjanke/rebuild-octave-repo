# HG changeset patch
# User Julien Bect <jbect@users.sourceforge.net>
# Date 1500897264 -7200
#      Mon Jul 24 13:54:24 2017 +0200
# Node ID 9eef7983b9bcf88895d99aa118e3ed789f6f056c
# Parent  735ebdfdb7d4a4b6e8e8424a89bcfdadc9c3e9bc
jit: pt-jit.cc: Fix llvm::raw_fd_ostream syntax

* libinterp/corefcn/pt-jit.cc: Fix llvm::raw_fd_ostream syntax for use with LLVM
  3.6 and later.  FIXME: Check final arg.  FIXME: autoconf.

diff --git a/libinterp/parse-tree/pt-jit.cc b/libinterp/parse-tree/pt-jit.cc
--- a/libinterp/parse-tree/pt-jit.cc
+++ b/libinterp/parse-tree/pt-jit.cc
@@ -2182,24 +2182,27 @@ void
     if (Vdebug_jit)
       llvm::verifyModule (*module);
 
     module_pass_manager->run (*module);
     pass_manager->run (*fn);
 
     if (Vdebug_jit)
       {
-        std::string error;
-#if defined (RAW_FD_OSTREAM_ARG_IS_LLVM_SYS_FS)
-        llvm::raw_fd_ostream fout ("test.bc", error,
-                                   llvm::sys::fs::F_Binary);
-#else
-        llvm::raw_fd_ostream fout ("test.bc", error,
-                                   llvm::raw_fd_ostream::F_Binary);
-#endif
+        // This should be OK in LLVM 3.6 -- 3.8 (and later ?)
+        std::error_code ec;
+        llvm::raw_fd_ostream fout ("test.bc", ec, llvm::sys::fs::F_None);
+
+        //      std::string error;
+        //#if defined (RAW_FD_OSTREAM_ARG_IS_LLVM_SYS_FS)
+        //      llvm::raw_fd_ostream fout ("test.bc", error, llvm::sys::fs::F_Binary);
+        //#else
+        //      llvm::raw_fd_ostream fout ("test.bc", error, llvm::raw_fd_ostream::F_Binary);
+        //#endif
+
         llvm::WriteBitcodeToFile (module, fout);
       }
   }
 
   // -------------------- jit_function_info --------------------
   jit_function_info::jit_function_info (tree_jit& tjit,
                                         octave_user_function& fcn,
                                         const octave_value_list& ov_args)
