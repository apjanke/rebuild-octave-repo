# HG changeset patch
# User jwe
# Date 864251498 0
#      Wed May 21 21:51:38 1997 +0000
# Node ID 91589ab98e37afd46c93cf3fb9ca306b3be1b100
# Parent  53b38bf1d443c2932feee32910a986336b1c72dc
[project @ 1997-05-21 21:44:54 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,20 @@
+Wed May 21 16:33:33 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* octMakefile.in (install, install-strip): Append version
+	information to octave-bug and mkoctfile.
+
+	* configure.in (octlibdir): New variable.
+	* Makeconf.in: Substitute it here.	
+	(do-subst-config-vals): Add -I${octincludedir} to INCFLAGS.
+	Add -L${octlibdir} to LIBFLAGS.
+
+	* Makeconf.in (mk-includedir-link, mk-libdir-link): New macros.
+
 Mon May  5 00:58:00 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Make --enable-readline work again.
 	* Makeconf.in: Ditto.
 
 Tue Apr  8 12:38:18 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mkoctfile.in: Do substitute SH_LD and SH_LDFLAGS.  Don't
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -164,37 +164,41 @@ libdir = @libdir@
 # Where to install and expect executable programs to be run by Octave
 # rather than directly by users.
 libexecdir = @libexecdir@
 
 # The prefix for Octave's include file directory.  The default is
 # ${prefix}/include
 includedir = @includedir@
 
-# Where to install Octave's include files.  The default is
-# ${includedir}/octave-${version}
-octincludedir = @octincludedir@
-
 # Where to install Octave's man pages, and what extension they should
 # have.  The default is ${prefix}/man/man1
 mandir = @mandir@
 man1dir = @man1dir@
 man1ext = @man1ext@
 
 # Where to install and expect the info files describing Octave..
 infodir = @infodir@
 
 # The fill path to the default info file.
 infofile = @infofile@
 
 # ==================== Octave-specific directories ====================
 
-# These variables hold the values Octave will actually use.  They are
+# These variables hold the values specific to Octave.  They are
 # based on the values of the standard Make variables above.
 
+# Where to install Octave's library files.  The default is
+# ${libdir}/octave-${version}
+octlibdir = @octlibdir@
+
+# Where to install Octave's include files.  The default is
+# ${includedir}/octave-${version}
+octincludedir = @octincludedir@
+
 # Where to install the function file distributed with
 # Octave.  This includes the Octave version, so that the
 # function files for different versions of Octave will install
 # themselves in separate directories.
 fcnfiledir = @fcnfiledir@
 
 # Directories Octave should search for function files specific
 # to this site (i.e. customizations), before consulting
@@ -315,21 +319,21 @@ sed < $< \
   -e "s;%F2C%;\"${F2C}\";" \
   -e "s;%F2CFLAGS%;\"${F2CFLAGS}\";" \
   -e "s;%F77%;\"${F77}\";" \
   -e "s;%FFLAGS%;\"${FFLAGS}\";" \
   -e "s;%FLIBS%;\"${FLIBS}\";" \
   -e "s;%FPICFLAG%;\"${FPICFLAG}\";" \
   -e "s;%GCC_IEEE_FP_FLAG%;\"${GCC_IEEE_FP_FLAG}\";" \
   -e "s;%HOST_CXXFLAGS%;\"${HOST_CXXFLAGS}\";" \
-  -e "s;%INCFLAGS%;\"-I${includedir} -I${octincludedir}\";" \
+  -e "s;%INCFLAGS%;\"-I${octincludedir} -I${includedir}\";" \
   -e "s;%LDFLAGS%;\"${LDFLAGS}\";" \
   -e "s;%LEXLIB%;\"${LEXLIB}\";" \
   -e "s;%LIBDLFCN%;\"${LIBDLFCN}\";" \
-  -e "s;%LIBFLAGS%;\"-L${libdir}\";" \
+  -e "s;%LIBFLAGS%;\"-L${octlibdir} -L${libdir}\";" \
   -e "s;%LIBPLPLOT%;\"${LIBPLPLOT}\";" \
   -e "s;%LIBS%;\"${LIBS}\";" \
   -e "s;%NO_IMPLICIT_TEMPLATES%;\"${NO_IMPLICIT_TEMPLATES}\";" \
   -e "s;%RLD_FLAG%;\"${RLD_FLAG}\";" \
   -e "s;%SH_LD%;\"${SH_LD}\";" \
   -e "s;%SH_LDFLAGS%;\"${SH_LDFLAGS}\";" \
   -e "s;%TARGET_HOST_TYPE%;\"${target_host_type}\";" \
   -e "s;%TERMLIBS%;\"${TERMLIBS}\";" \
@@ -357,8 +361,43 @@ sed < $< > $@.tmp \
   -e "s;%OCTAVE_LOCALFCNFILEDIR%;\"${localfcnfiledir}\";" \
   -e "s;%OCTAVE_LOCALFCNFILEPATH%;\"${localfcnfilepath}\";" \
   -e "s;%OCTAVE_LOCALOCTFILEPATH%;\"${localoctfilepath}\";" \
   -e "s;%OCTAVE_OCTFILEDIR%;\"${octfiledir}\";" \
   -e "s;%OCTAVE_PREFIX%;\"${prefix}\";" \
   -e "s;%TARGET_HOST_TYPE%;\"${target_host_type}\";"
 $(top_srcdir)/move-if-change $@.tmp $@
 endef
+
+# Make a relative symbolic link from $includedir/octave to $octincludedir. 
+
+# XXX FIXME XXX -- this assumes that $octincludedir is a subdirectory
+# of $includedir.
+
+define mk-includedir-link
+src=`echo $(octincludedir) | sed 's|^$(includedir)/*||'` ; \
+if [ "$$src" = "octave" ] ; then \
+  true ; \
+else \
+  if [ -d $(includedir)/octave ] ; then \
+    true ; \
+  else \
+    cd $(includedir) ; rm -f octave && $(LN_S) $$src octave ; \
+  fi ; \
+fi
+endef
+
+# Make a relative symbolic link from $libdir/octave to $octlibdir. 
+
+# XXX FIXME XXX -- this assumes that $octlibdir is a subdirectory of $libdir.
+
+define mk-libdir-link
+src=`echo $(octlibdir) | sed 's|^$(libdir)/*||'` ; \
+if [ "$$src" = "octave" ] ; then \
+  true ; \
+else \
+  if [ -d $(libdir)/octave ] ; then \
+    true ; \
+  else \
+    cd $(libdir) ; rm -f octave && $(LN_S) $$src octave ; \
+  fi ; \
+fi
+endef
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,8 +1,24 @@
+Summary of changes for version 2.0.6:
+------------------------------------
+
+  This is primarily a bug-fixing release.  There are only a few new
+  user-visible features.
+
+  * The new built-in variable default_eval_print_flag controls whether
+    Octave prints the results of commands executed by eval() that do
+    not end with semicolons.  The default is 1.
+
+  * The new built-in constant OCTAVE_HOME specifies the top-level
+    directory where Octave is installed.
+
+  * Octave no longer includes functions to work with NPSOL or QPSOL,
+    because they are not free software.
+
 Summary of changes since version 2.0.5:
 --------------------------------------
 
   * Octave's expression parser is more general and consistent.  It is
     now possible to access structure elements and index arbitrary
     values.  For example, expressions like
 
       my_home_dir = getpwuid (getuid ()) . dir;
@@ -69,32 +85,32 @@ Summary of changes since version 2.0.5:
       The built-in variables stdin, stdout, and stderr are now also
       file objects instead of integers.
 
     list:
 
       A list is an array of Octave objects.  It can be indexed using
       the normal indexing operator.  For example,
 
-        x = make_list ([1,2;3,4], 1, "foo");
+        x = list ([1,2;3,4], 1, "foo");
         stdout << x(2) << "\n"
         1
         stdout << x;
         (
          [1] =
         
            1  2
            3  4
         
           [2] = 1
           [3] = foo
         )
 
       There is currently no special syntax for creating lists; you
-      must use the make_list function.
+      must use the list function.
 
   * Commas in global statements are no longer special.  They are now
     treated as command separators.  This removes a conflict in the
     grammar and is consistent with the way Matlab behaves.  The
     variable `warn_comma_in_global_decl' has been eliminated.
 
   * It is now possible to declare static variables that retain their
     values across function calls.  For example,
diff --git a/README b/README
--- a/README
+++ b/README
@@ -1,38 +1,40 @@
-Octave -- a high-level language for numerical computations.
+GNU Octave -- a high-level language for numerical computations.
 
 Copyright (C) 1996, 1997 John W. Eaton
 
-Last updated: Tue Dec 10 01:41:30 1996
+Last updated: Tue May 20 14:16:45 1997
 
 Overview
 --------
 
-Octave is a high-level language, primarily intended for numerical
+GNU Octave is a high-level language, primarily intended for numerical
 computations.  It provides a convenient command line interface for
 solving linear and nonlinear problems numerically.
 
-Octave is free software; you can redistribute it and/or modify it
+GNU Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
-Octave is distributed in the hope that it will be useful, but WITHOUT
-ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
-FITNESS FOR A PARTICULAR PURPOSE.  See the file COPYING for more
-details.
+GNU Octave is distributed in the hope that it will be useful, but
+WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the file
+COPYING for more details.
 
 Availability
 ------------
 
 The latest released version of Octave is always available via
 anonymous ftp from ftp.che.wisc.edu in the directory /pub/octave.
 Complete source and binaries for several popular systems are
-available.
+available.  Source distributions of Octave are also available from
+prep.ai.mit.edu in the directory /pub/gnu, as well as many mirror
+sites around the world.
 
 Installation and Bugs
 ---------------------
 
 Octave requires approximately 125MB of disk storage to unpack and
 compile from source (significantly less if you don't compile with
 debugging symbols or create shared libraries).  Once installed, Octave
 requires approximately 65MB of disk space (again, considerably less if
diff --git a/README.Linux b/README.Linux
--- a/README.Linux
+++ b/README.Linux
@@ -146,18 +146,26 @@ Installing libg++ on a Linux system is n
 because libg++ shares some basic I/O code with the Linux C library,
 and they must be compatible.  You should get and read the release
 notes for the compiler and libraries.
 
 If you decide to install versions of the libraries that are older (or
 newer) than the ones you already have, you should follow the
 directions in the release notes very carefully.
 
+I/O in dynamically loaded .oct files doesn't work
+-------------------------------------------------
+
+If Octave prints things like `%.-1e' instead of numbers when you use a
+dynamically linked .oct file, you probably need to create shared
+versions of the Octave libraries.  To do that, configure Octave with
+--enable-shared.
+
 
 If you have comments or suggestions for this document, please contact
 bug-octave@bevo.che.wisc.edu.
 
 John W. Eaton
 jwe@bevo.che.wisc.edu
 University of Wisconsin-Madison
 Department of Chemical Engineering
 
-Wed Jan 29 13:39:02 1997
+Mon May 19 23:13:35 1997
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.266 $)
+AC_REVISION($Revision: 1.267 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -40,17 +40,18 @@ OCTAVE_SET_DEFAULT(datadir)
 OCTAVE_SET_DEFAULT(libdir)
 OCTAVE_SET_DEFAULT(libexecdir)
 OCTAVE_SET_DEFAULT(includedir)
 OCTAVE_SET_DEFAULT(mandir)
 OCTAVE_SET_DEFAULT(infodir)
 OCTAVE_SET_DEFAULT(man1dir, '$(mandir)/man1')
 OCTAVE_SET_DEFAULT(man1ext, '.1')
 OCTAVE_SET_DEFAULT(infofile, '$(infodir)/octave.info')
-OCTAVE_SET_DEFAULT(octincludedir, '$(includedir)/octave-$(version)')
+OCTAVE_SET_DEFAULT(octlibdir, '$(libdir)/octave-$(version)')
+OCTAVE_SET_DEFAULT(octincludedir, '$(includedir)/octave-$(version)/octave')
 OCTAVE_SET_DEFAULT(fcnfiledir, '$(datadir)/octave/$(version)/m')
 OCTAVE_SET_DEFAULT(localfcnfiledir, '$(datadir)/octave/site/m')
 OCTAVE_SET_DEFAULT(localfcnfilepath, '$(localfcnfiledir)//')
 OCTAVE_SET_DEFAULT(archlibdir,
   '$(libexecdir)/octave/$(version)/exec/$(target_host_type)')
 OCTAVE_SET_DEFAULT(localarchlibdir,
   '$(libexecdir)/octave/site/exec/$(target_host_type)')
 OCTAVE_SET_DEFAULT(octfiledir,
diff --git a/doc/interpreter/arith.texi b/doc/interpreter/arith.texi
--- a/doc/interpreter/arith.texi
+++ b/doc/interpreter/arith.texi
@@ -339,17 +339,16 @@ Inverse hyperbolic trigonometric functio
 @end deftypefn
 
 Each of these functions expect a single argument.  For matrix arguments,
 they work on an element by element basis.  For example,
 
 @example
 @group
 sin ([1, 2; 3, 4])
-
      @result{}  0.84147   0.90930
          0.14112  -0.75680
 @end group
 @end example
 
 @deftypefn {Mapping Function} {} atan2 (@var{y}, @var{x})
 Return the arctangent of @var{y}/@var{x}.  The signs of the arguments
 are used to determine the quadrant of the result, which is in the range
@@ -381,30 +380,28 @@ or a vector of ones if it has no rows (@
 @end deftypefn
 
 @deftypefn {Built-in Function} {} cumsum (@var{x})
 Return the cumulative sum of each column of @var{x}.  For example,
 
 @example
 @group
 cumsum ([1, 2; 3, 4])
-
      @result{}  1  2
          4  6
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Built-in Function} {} cumprod (@var{x})
 Return the cumulative product of each column of @var{x}.  For example,
 
 @example
 @group
 cumprod ([1, 2; 3, 4])
-
      @result{}  1  2
          3  8
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Built-in Function} {} sumsq (@var{x})
 For a vector argument, return the sum of the squares of all the
diff --git a/doc/interpreter/basics.texi b/doc/interpreter/basics.texi
--- a/doc/interpreter/basics.texi
+++ b/doc/interpreter/basics.texi
@@ -28,18 +28,18 @@ Normally, Octave is used interactively b
 commands from the terminal until you tell it to exit.
 
 You can also specify the name of a file on the command line, and Octave
 will read and execute the commands from the named file and then exit
 when it is finished.
 
 You can further control how Octave starts by using the command-line
 options described in the next section, and Octave itself can remind you
-of the options available.  Type @kbd{octave --help} to display all
-available options and briefly describe their use (@kbd{octave -h} is a
+of the options available.  Type @samp{octave --help} to display all
+available options and briefly describe their use (@samp{octave -h} is a
 shorter equivalent).
 
 @menu
 * Command Line Options::        
 * Startup Files::               
 @end menu
 
 @node Command Line Options, Startup Files, Invoking Octave, Invoking Octave
@@ -66,40 +66,42 @@ probably only useful if you are actually
 @cindex @code{-x}
 Echo commands as they are executed.
 
 @item --exec-path @var{path}
 @cindex @code{--exec-path @var{path}}
 Specify the path to search for programs to run.  The value of @var{path}
 specified on the command line will override any value of
 @code{OCTAVE_EXEC_PATH} found in the environment, but not any commands
-in the system or user startup files that set @code{EXEC_PATH}.
+in the system or user startup files that set the built-in variable
+@code{EXEC_PATH}.
 
 @item --help
 @itemx -h
 @itemx -?
 @cindex @code{--help}
 @cindex @code{-h}
 @cindex @code{-?}
 Print short help message and exit.
 
 @item --info-file @var{filename}
 @cindex @code{--info-file @var{filename}}
 Specify the name of the info file to use.  The value of @var{filename}
 specified on the command line will override any value of
 @code{OCTAVE_INFO_FILE} found in the environment, but not any commands
-in the system or user startup files that set @samp{INFO_FILE}.
+in the system or user startup files that set the built-in variable
+@code{INFO_FILE}.
 
 @item --info-program @var{program}
 @cindex @code{--info-program @var{program}}
 Specify the name of the info program to use.  The value of @var{program}
 specified on the command line will override any value of
 @code{OCTAVE_INFO_PROGRAM} found in the environment, but not any
-commands in the system or user startup files that set
-@code{INFO_PROGRAM}.
+commands in the system or user startup files that set the built-in
+variable @code{INFO_PROGRAM}.
 
 @item --interactive
 @itemx -i
 @cindex @code{--interactive}
 @cindex @code{-i}
 Force interactive behavior.  This can be useful for running Octave via a
 remote shell command or inside an Emacs shell buffer.  For another way
 to run Octave within Emacs, see @ref{Emacs}.
@@ -126,17 +128,17 @@ and @code{--no-site-file}.
 
 @item --path @var{path}
 @itemx -p @var{path}
 @cindex @code{--path @var{path}}
 @cindex @code{-p @var{path}}
 Specify the path to search for function files.  The value of @var{path}
 specified on the command line will override any value of
 @code{OCTAVE_PATH} found in the environment, but not any commands in the
-system or user startup files that set @code{LOADPATH}.
+system or user startup files that set the built-in variable @code{LOADPATH}.
 
 @item --silent
 @itemx --quiet
 @itemx -q
 @cindex @code{--silent}
 @cindex @code{--quiet}
 @cindex @code{-q}
 Don't print the usual greeting and version message at startup.
@@ -209,17 +211,17 @@ arguments that were passed to Octave.
 
 @defvr {Built-in Variable} program_invocation_name
 @defvrx {Built-in Variable} program_name
 When Octave starts, the value of the built-in variable
 @code{program_invocation_name} is automatically set to the name that was
 typed at the shell prompt to run Octave, and the value of
 @code{program_name} is automatically set to the final component of
 @code{program_invocation_name}.  For example, if you typed
-@kbd{@value{OCTAVEHOME}/bin/octave} to start Octave,
+@samp{@value{OCTAVEHOME}/bin/octave} to start Octave,
 @code{program_invocation_name} would have the value
 @code{"@value{OCTAVEHOME}/bin/octave"}, and @code{program_name} would
 have the value @code{"octave"}.
 
 If executing a script from the command line (e.g., @code{octave foo.m}
 or using an executable Octave script, the program name is set to the
 name of the script.  @xref{Executable Octave Programs} for an example of
 how to create an executable Octave script.
@@ -246,27 +248,27 @@ arrays of strings and substrings in Octa
 @cindex startup
 
 When Octave starts, it looks for commands to execute from the following
 files:
 
 @cindex startup files
 
 @table @code
-@item @var{OCTAVE_HOME}/share/octave/site/m/startup/octaverc
-Where @var{OCTAVE_HOME} is the directory in which all of Octave is
+@item @var{octave-home}/share/octave/site/m/startup/octaverc
+Where @var{octave-home} is the directory in which all of Octave is
 installed (the default is @file{@value{OCTAVEHOME}}).  This file is
 provided so that changes to the default Octave environment can be made
 globally for all users at your site for all versions of Octave you have
 installed.  Some care should be taken when making changes to this file,
 since all users of Octave at your site will be affected.
 
-@item @var{OCTAVE_HOME}/share/octave/@var{VERSION}/m/startup/octaverc
-Where @var{OCTAVE_HOME} is the directory in which all of Octave is
-installed (the default is @file{@value{OCTAVEHOME}}), and @var{VERSION}
+@item @var{octave-home}/share/octave/@var{version}/m/startup/octaverc
+Where @var{octave-home} is the directory in which all of Octave is
+installed (the default is @file{@value{OCTAVEHOME}}), and @var{version}
 is the version number of Octave.  This file is provided so that changes
 to the default Octave environment can be made globally for all users for
 a particular version of Octave.  Some care should be taken when making
 changes to this file, since all users of Octave at your site will be
 affected.
 
 @item ~/.octaverc
 @cindex @code{~/.octaverc}
@@ -352,30 +354,30 @@ using the command @kbd{C-h}.
 @end deffn
 
 The help command can give you information about operators, but not the
 comma and semicolons that are used as command separators.  To get help
 for those, you must type @kbd{help comma} or @kbd{help semicolon}.
 
 @defvr {Built-in Variable} INFO_FILE
 The variable @code{INFO_FILE} names the location of the Octave info file.
-The default value is @code{"@var{OCTAVE_HOME}/info/octave.info"}, where
-@var{OCTAVE_HOME} is the directory where all of Octave is installed.
+The default value is @code{"@var{octave-home}/info/octave.info"}, where
+@var{octave-home} is the directory where all of Octave is installed.
 @end defvr
 
 @defvr {Built-in Variable} INFO_PROGRAM
 The variable @code{INFO_PROGRAM} names the info program to run.  Its
 initial value is
-@code{"@var{OCTAVE_HOME}/libexec/octave/@var{VERSION}/exec/@var{ARCH}/info"},
-where @var{OCTAVE_HOME} is the directory where all of Octave is
-installed, @var{VERSION} is the Octave version number, and @var{ARCH} is
+@code{"@var{octave-home}/libexec/octave/@var{version}/exec/@var{arch}/info"},
+where @var{octave-home} is the directory where all of Octave is
+installed, @var{version} is the Octave version number, and @var{arch} is
 the machine type.  The value of @code{INFO_PROGRAM} can be overridden by
 the environment variable @code{OCTAVE_INFO_PROGRAM}, or the command line
-argument @code{--info-program NAME}, or by setting the value of
-@code{INFO_PROGRAM} in a startup script.
+argument @code{--info-program NAME}, or by setting the value of the
+built-in variable @code{INFO_PROGRAM} in a startup script.
 @end defvr
 
 @defvr {Built-in Variable} suppress_verbose_help_message
 If the value of @code{suppress_verbose_help_message} is nonzero, Octave
 will not add additional help information to the end of the output from
 the @code{help} command and usage messages for built-in commands.
 @end defvr
 
@@ -425,17 +427,17 @@ The following commands allow you to posi
 
 @table @kbd
 @item C-b
 Move back one character.
 
 @item C-f
 Move forward one character.
 
-@item DEL
+@item @key{DEL}
 Delete the character to the left of the cursor.
 
 @item C-d
 Delete the character underneath the cursor.
 
 @item M-f
 Move forward a word.
 
@@ -494,23 +496,23 @@ Here is the list of commands for killing
 @table @kbd
 @item C-k
 Kill the text from the current cursor position to the end of the line.
 
 @item M-d
 Kill from the cursor to the end of the current word, or if between
 words, to the end of the next word.
 
-@item M-DEL
+@item M-@key{DEL}
 Kill from the cursor to the start of the previous word, or if between
 words, to the start of the previous word. 
 
 @item C-w
 Kill from the cursor to the previous whitespace.  This is different than
-@kbd{M-DEL} because the word boundaries differ.
+@kbd{M-@key{DEL}} because the word boundaries differ.
 @end table
 
 And, here is how to @dfn{yank} the text back into the line.  Yanking
 means to copy the most-recently-killed text from the kill buffer.
 
 @table @kbd
 @item C-y
 Yank the most recently killed text back into the buffer at the cursor.
@@ -535,17 +537,17 @@ otherwise have a special meaning (e.g., 
 for quickly correcting typing mistakes.
 
 @table @kbd
 @item C-q
 @itemx C-v
 Add the next character that you type to the line verbatim.  This is
 how to insert things like @kbd{C-q} for example.
 
-@item M-TAB
+@item M-@key{TAB}
 Insert a tab character.
 
 @item C-t
 Drag the character before the cursor forward over the character at the
 cursor, also moving the cursor forward.  If the cursor is at the end of
 the line, then transpose the two characters before it.
 
 @item M-t
@@ -569,17 +571,17 @@ of the word.
 @node Commands For Completion, Commands For History, Commands For Text, Command Line Editing
 @subsection Letting Readline Type For You
 @cindex command completion
 
 The following commands allow Octave to complete command and variable
 names for you.
 
 @table @kbd
-@item TAB
+@item @key{TAB}
 Attempt to do completion on the text before the cursor.  Octave can
 complete the names of commands and variables.
 
 @item M-?
 List the possible completions of the text before the cursor.
 @end table
 
 @defvr {Built-in Variable} completion_append_char
@@ -609,18 +611,18 @@ Octave, the most recent commands you hav
 specified by the variable @code{history_size}, are saved in a file.
 When Octave starts, it loads an initial list of commands from the file
 named by the variable @code{history_file}.
 
 Here are the commands for simple browsing and searching the history
 list.
 
 @table @kbd
-@item LFD
-@itemx RET
+@item @key{LFD}
+@itemx @key{RET}
 Accept the line regardless of where the cursor is.  If this line is
 non-empty, add it to the history list.  If this line was a history
 line, then restore the history line to its original state.
 
 @item C-p
 Move `up' through the history list.
 
 @item C-n
@@ -648,22 +650,22 @@ In addition to the keyboard commands for
 list, Octave provides three functions for viewing, editing, and
 re-running chunks of commands from the history list.
 
 @deffn {Command} history options
 If invoked with no arguments, @code{history} displays a list of commands
 that you have executed.  Valid options are:
 
 @table @code
-@item -w file
-Write the current history to the named file.  If the name is omitted,
-use the default history file (normally @file{~/.octave_hist}).
+@item -w @var{file}
+Write the current history to the file @var{file}.  If the name is
+omitted, use the default history file (normally @file{~/.octave_hist}).
 
-@item -r file
-Read the named file, replacing the current history list with its
+@item -r @var{file}
+Read the file @var{file}, replacing the current history list with its
 contents.  If the name is omitted, use the default history file
 (normally @file{~/.octave_hist}).
 
 @item @var{N}
 Only display the most recent @var{N} lines of history.
 
 @item -q
 Don't number the displayed lines of history.  This is useful for cutting
@@ -713,17 +715,17 @@ omitted, the previous command in the his
 Similar to @code{edit_history}, except that the editor is not invoked,
 and the commands are simply executed as they appear in the history list.
 @end deffn
 
 @defvr {Built-in Variable} EDITOR
 A string naming the editor to use with the @code{edit_history} command.
 If the environment variable @code{EDITOR} is set when Octave starts, its
 value is used as the default.  Otherwise, @code{EDITOR} is set to
-@code{"vi"}.
+@code{"emacs"}.
 @end defvr
 
 @defvr {Built-in Variable} history_file
 This variable specifies the name of the file used to store command
 history.  The default value is @code{"~/.octave_hist"}, but may be
 overridden by the environment variable @code{OCTAVE_HISTFILE}.
 @end defvr
 
@@ -756,17 +758,17 @@ The time.
 @item \d
 The date.
 
 @item \n
 Begins a new line by printing the equivalent of a carriage return
 followed by a line feed.
 
 @item \s
-The name of the program (usually just @code{octave}).
+The name of the program (usually just @samp{octave}).
 
 @item \w
 The current working directory.
 
 @item \W
 The basename of the current working directory.
 
 @item \u
@@ -781,20 +783,20 @@ The hostname.
 @item \#
 The command number of this command, counting from when Octave starts.
 
 @item \!
 The history number of this command.  This differs from @samp{\#} by the
 number of commands in the history list when Octave starts.
 
 @item \$
-If the effective UID is 0, a #, otherwise a $.
+If the effective UID is 0, a @samp{#}, otherwise a @samp{$}.
 
 @item \nnn
-The character whose character code in octal is @samp{nnn}.
+The character whose character code in octal is @var{nnn}.
 
 @item \\
 A backslash.
 @end table
 
 @defvr {Built-in Variable} PS1
 The primary prompt string.  When executing interactively, Octave
 displays the primary prompt @code{PS1} when it is ready to read a
@@ -911,18 +913,17 @@ The value of @code{echo_executing_comman
 command and the command line option @code{--echo-input}.
 @end defvr
 
 @node Errors, Executable Octave Programs, Command Line Editing, Getting Started
 @section How Octave Reports Errors
 @cindex error messages
 @cindex messages, error
 
-There are two classes of errors that Octave produces when it encounters
-input that it is unable to understand.
+Octave reports two kinds of errors for invalid programs.
 
 A @dfn{parse error} occurs if Octave cannot understand something you
 have typed.  For example, if you misspell a keyword,
 
 @example
 octave:13> functon y = f (x) y = x^2; endfunction
 @end example
 
@@ -1008,26 +1009,26 @@ on GNU systems and on many Unix systems 
 mechanism works on Unix systems derived from Berkeley Unix, System V
 Release 4, and some System V Release 3 systems.}
 
 For example, you could create a text file named @file{hello}, containing
 the following lines:
 
 @example
 @group
-#! /path/to/octave -qf
+#! @var{octave-interpreter-name} -qf
 # a sample Octave program
 printf ("Hello, world!\n");
 @end group
 @end example
 
 @noindent
-(where @code{/path/to/octave} should be replaced with the full file name
-for your Octave binary).  After making this file executable (with the
-@code{chmod} command), you can simply type:
+(where @var{octave-interpreter-name} should be replaced with the full
+file name for your Octave binary).  After making this file executable
+(with the @code{chmod} command), you can simply type:
 
 @example
 hello
 @end example
 
 @noindent
 at the shell, and the system will arrange to run Octave as if you had
 typed:
@@ -1037,17 +1038,17 @@ octave hello
 @end example
 
 The line beginning with @samp{#!} lists the full file name of an
 interpreter to be run, and an optional initial command line argument to
 pass to that interpreter.  The operating system then runs the
 interpreter with the given argument and the full argument list of the
 executed program.  The first argument in the list is the full file name
 of the Octave program. The rest of the argument list will either be
-options to Octave, or data files, or both.  The @code{-qf} option is
+options to Octave, or data files, or both.  The @samp{-qf} option is
 usually specified in stand-alone Octave programs to prevent them from
 printing the normal startup message, and to keep them from behaving
 differently depending on the contents of a particular user's
 @file{~/.octaverc} file.  @xref{Invoking Octave}.  Note that some
 operating systems may place a limit on the number of characters that are
 recognized after @samp{#!}.
 
 Self-contained Octave scripts are useful when you want to write a
diff --git a/doc/interpreter/data.texi b/doc/interpreter/data.texi
--- a/doc/interpreter/data.texi
+++ b/doc/interpreter/data.texi
@@ -145,19 +145,17 @@ number of rows is assigned to the first,
 the second.  For example,
 
 @example
 @group
 size ([1, 2; 3, 4; 5, 6])
      @result{} [ 3, 2 ]
 
 [nr, nc] = size ([1, 2; 3, 4; 5, 6])
-
      @result{} nr = 3
-
      @result{} nc = 2
 @end group
 @end example
 
 If given a second argument of either 1 or 2, @code{size} will return
 only the row or column dimension.  For example
 
 @example
diff --git a/doc/interpreter/emacs.texi b/doc/interpreter/emacs.texi
--- a/doc/interpreter/emacs.texi
+++ b/doc/interpreter/emacs.texi
@@ -89,42 +89,42 @@ Font-lock mode.
 
 In Octave mode, the following special Emacs commands can be used in
 addition to the standard Emacs commands.
 
 @table @kbd
 @item C-h m
 Describe the features of Octave mode.
 
-@item LFD
+@item @key{LFD}
 Reindent the current Octave line, insert a newline and indent the new
 line (@code{octave-reindent-then-newline-and-indent}).  An abbrev before
 point is expanded if @code{abbrev-mode} is non-@code{nil}.
 
-@item TAB
+@item @key{TAB}
 Indents current Octave line based on its contents and on previous
 lines (@code{indent-according-to-mode}). 
 
 @item ;
 Insert an ``electric'' semicolon (@code{octave-electric-semi}).  If
 @code{octave-auto-newline} is non-@code{nil}, typing a @samp{;}
 automatically reindents the current line, inserts a newline and indents
 the new line.
 
 @item `
 Start entering an abbreviation (@code{octave-abbrev-start}).  If Abbrev
 mode is turned on, typing @kbd{`C-h} or @kbd{`?} lists all abbrevs.
 Any other key combination is executed normally.  Note that all Octave
 abbrevs start with a grave accent.
 
-@item M-LFD
+@item M-@key{LFD}
 Break line at point and insert continuation marker and alignment
 (@code{octave-split-line}).
 
-@item M-TAB
+@item M-@key{TAB}
 Perform completion on Octave symbol preceding point, comparing that
 symbol against Octave's reserved words and builtin variables
 (@code{octave-complete-symbol}). 
 
 @item M-C-a
 Move backward to the beginning of a function
 (@code{octave-beginning-of-defun}).
 With prefix argument @var{N}, do it that many times if @var{N} is
@@ -267,20 +267,21 @@ solution is
 (defun RET-behaves-as-LFD ()
   (let ((x (key-binding "\C-j")))
     (local-set-key "\C-m" x)))
 (add-hook 'octave-mode-hook 'RET-behaves-as-LFD)
 @end lisp
 @noindent
 (this works for all modes by adding to the startup hooks, without having
 to know the particular binding of @key{RET} in that mode!).  Similar
-considerations apply for using @kbd{M-RET} as @kbd{M-LFD}.  As Barry
-A. Warsaw <bwarsaw@@cnri.reston.va.us> says in the documentation for his
-@code{cc-mode}, ``This is a very common question. @code{:-)} If you want
-this to be the default behavior, don't lobby me, lobby RMS!''
+considerations apply for using @kbd{M-@key{RET}} as @kbd{M-@key{LFD}}.
+As Barry A. Warsaw <bwarsaw@@cnri.reston.va.us> says in the
+documentation for his @code{cc-mode}, ``This is a very common
+question. @code{:-)} If you want this to be the default behavior, don't
+lobby me, lobby RMS!''
 
 The following variables can be used to customize Octave mode.
 
 @table @code
 @item octave-auto-newline
 Non-@code{nil} means auto-insert a newline and indent after semicolons
 are typed.  The default value is @code{nil}.
 
diff --git a/doc/interpreter/eval.texi b/doc/interpreter/eval.texi
--- a/doc/interpreter/eval.texi
+++ b/doc/interpreter/eval.texi
@@ -20,37 +20,43 @@ call user-supplied functions.
 Parse the string @var{command} and evaluate it as if it were an Octave
 program, returning the last value computed.  The @var{command} is
 evaluated in the current context, so any results remain available after
 @code{eval} returns.  For example,
 
 @example
 @group
 eval ("a = 13")
-
      @print{} a = 13
-
      @result{} 13
 @end group
 @end example
 
 In this case, the value of the evaluated expression is printed and it is
 also returned returned from @code{eval}.  Just as with any other
 expression, you can turn printing off by ending the expression in a
 semicolon.  For example,
 
 @example
 eval ("a = 13;")
      @result{} 13
 @end example
 
 In this example, the variable @code{a} has been given the value 13, but
-the value of the expression is not printed.
+the value of the expression is not printed.  You can also turn off
+automatic printing for all expressions executed by @code{eval} using the
+variable @code{default_eval_print_flag}.
 @end deftypefn
 
+@defvr {Built-in Variable} default_eval_print_flag
+If the value of this variable is nonzero, Octave prints the results of
+commands executed by @code{eval} that do not end with semicolons.  If it
+is zero, automatic printing is suppressed.  The default value is 1.
+@end defvr
+
 @deftypefn {Built-in Function} {} feval (@var{name}, @dots{})
 Evaluate the function named @var{name}.  Any arguments after the first
 are passed on to the named function.  For example,
 
 @example
 feval ("acos", -1)
      @result{} 3.1416
 @end example
diff --git a/doc/interpreter/expr.texi b/doc/interpreter/expr.texi
--- a/doc/interpreter/expr.texi
+++ b/doc/interpreter/expr.texi
@@ -606,17 +606,16 @@ such as equality.  They are written usin
 
 All of Octave's comparison operators return a value of 1 if the
 comparison is true, or 0 if it is false.  For matrix values, they all
 work on an element-by-element basis.  For example,
 
 @example
 @group
 [1, 2; 3, 4] == [1, 3; 2, 4]
-
      @result{}  1  0
          0  1
 @end group
 @end example
 
 If one operand is a scalar and the other is a matrix, the scalar is
 compared to each element of the matrix in turn, and the result is the
 same size as the matrix.
diff --git a/doc/interpreter/func.texi b/doc/interpreter/func.texi
--- a/doc/interpreter/func.texi
+++ b/doc/interpreter/func.texi
@@ -483,19 +483,17 @@ to produce @var{n} values:
 @group
 function [...] = f (n, x)
   for i = 1:n
     vr_val (i * x);
   endfor
 endfunction
 
 [dos, quatro] = f (2, 2)
-
      @result{} dos = 2
-
      @result{} quatro = 4
 @end group
 @end example
 
 As with variable argument lists, the ellipsis that marks the variable
 return list may only appear once and must be the last element in the
 list of returned values.
 
@@ -612,17 +610,17 @@ Checking the time stamp allows you to ed
 while Octave is running, and automatically use the new function
 definition without having to restart your Octave session.  Checking the
 time stamp every time a function is used is rather inefficient, but it
 has to be done to ensure that the correct function definition is used.
 
 To avoid degrading performance unnecessarily by checking the time stamps
 on functions that are not likely to change, Octave assumes that function
 files in the directory tree
-@file{@var{OCTAVE_HOME}/share/octave/@var{VERSION}/m}
+@file{@var{octave-home}/share/octave/@var{version}/m}
 will not change, so it doesn't have to check their time stamps every time the
 functions defined in those files are used.  This is normally a very good
 assumption and provides a significant improvement in performance for the
 function files that are distributed with Octave.
 
 If you know that your own function files will not change while you are
 running Octave, you can improve performance by setting the variable
 @code{ignore_function_time_stamp} to @code{"all"}, so that Octave will
@@ -658,17 +656,17 @@ not a mixture of both.
 directories that are distributed with Octave.
 @end defvr
 
 @defvr {Built-in Variable} ignore_function_time_stamp
 This variable can be used to prevent Octave from making the system call
 @code{stat} each time it looks up functions defined in function files.
 If @code{ignore_function_time_stamp} to @code{"system"}, Octave will not
 automatically recompile function files in subdirectories of
-@file{@var{OCTAVE_HOME}/lib/@var{VERSION}} if they have changed since
+@file{@var{octave-home}/lib/@var{version}} if they have changed since
 they were last compiled, but will recompile other function files in the
 @code{LOADPATH} if they change.  If set to @code{"all"}, Octave will not
 recompile any function files unless their definitions are removed with
 @code{clear}.  For any other value of @code{ignore_function_time_stamp},
 Octave will always check to see if functions defined in function files
 need to recompiled.  The default value of @code{ignore_function_time_stamp} is
 @code{"system"}.
 @end defvr
@@ -919,17 +917,17 @@ there is a default constructor that can 
 of that type from an @code{octave_value} object, so we can just use that
 instead.
 
 To use this file, your version of Octave must support dynamic linking.
 To find out if it does, type the command
 @kbd{octave_config_info ("dld")} at the Octave prompt.  Support for
 dynamic linking is included if this command returns 1.
 
-To compile the example file, type the command @kbd{mkoctfile
+To compile the example file, type the command @samp{mkoctfile
 oregonator.cc} at the shell prompt.  The script @code{mkoctfile} should
 have been installed along with Octave.  Running it will create a file
 called @file{oregonator.oct} that can be loaded by Octave.  To test the
 @file{oregonator.oct} file, start Octave and type the command
 
 @example
 oregonator ([1, 2, 3], 0)
 @end example
@@ -958,23 +956,24 @@ functions, particularly those that rely 
 that require user-supplied functions.
 
 Additional examples are available in the files in the @file{src}
 directory of the Octave distribution.  Currently, this includes the
 files
 
 @example
 @group
-balance.cc  fft.cc      hess.cc     lu.cc       schur.cc
-chol.cc     fft2.cc     ifft.cc     minmax.cc   sort.cc
-colloc.cc   filter.cc   ifft2.cc    pinv.cc     svd.cc
-dassl.cc    find.cc     inv.cc      qr.cc       syl.cc
-det.cc      fsolve.cc   log.cc      quad.cc
-eig.cc      fsqp.cc     lsode.cc    qzval.cc
-expm.cc     givens.cc   lu.cc       rand.cc
+balance.cc   fft2.cc      inv.cc       qzval.cc
+chol.cc      filter.cc    log.cc       schur.cc
+colloc.cc    find.cc      lsode.cc     sort.cc 
+dassl.cc     fsolve.cc    lu.cc        svd.cc
+det.cc       givens.cc    minmax.cc    syl.cc
+eig.cc       hess.cc      pinv.cc      
+expm.cc      ifft.cc      qr.cc     
+fft.cc       ifft2.cc     quad.cc
 @end group
 @end example
 
 @noindent
 These files use the macro @code{DEFUN_DLD_BUILTIN} instead of
 @code{DEFUN_DLD}.  The difference between these two macros is just that
 @code{DEFUN_DLD_BUILTIN} can define a built-in function that is not
 dynamically loaded if the operating system does not support dynamic
@@ -985,17 +984,17 @@ There is currently no detailed descripti
 can call in a built-in function.  For the time being, you will have to
 read the source code for Octave.
 
 @node Organization of Functions,  , Dynamically Linked Functions, Functions and Scripts
 @section Organization of Functions Distributed with Octave
 
 Many of Octave's standard functions are distributed as function files.
 They are loosely organized by topic, in subdirectories of
-@file{@var{OCTAVE_HOME}/lib/octave/@var{VERSION}/m}, to make it easier
+@file{@var{octave-home}/lib/octave/@var{version}/m}, to make it easier
 to find them.
 
 The following is a list of all the function file subdirectories, and the
 types of functions you will find there.
 
 @table @file
 @item audio
 Functions for playing and recording sounds.
diff --git a/doc/interpreter/image.texi b/doc/interpreter/image.texi
--- a/doc/interpreter/image.texi
+++ b/doc/interpreter/image.texi
@@ -1,18 +1,17 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
 @node Image Processing, Audio Processing, Signal Processing, Top
 @chapter Image Processing
 
-To display images using these functions, you must be using Octave with
-the X Window System, and you must have either @code{xloadimage} or
-@code{xv} installed.  You do not need to be running X in order to
+Octave can display images with the X Window System using the
+@code{xloadimage} program.  You do not need to be running X in order to
 manipulate images, however, so some of these functions may be useful
 even if you are not able to view the results.
 
 Loading images only works with Octave's image format (a file with a
 matrix containing the image data, and a matrix containing the
 colormap).  Contributions of robust, well-written functions to read
 other image formats are welcome.  If you can provide them, or would like
 to improve Octave's image processing capabilities in other ways, please
diff --git a/doc/interpreter/install.texi b/doc/interpreter/install.texi
--- a/doc/interpreter/install.texi
+++ b/doc/interpreter/install.texi
@@ -153,17 +153,17 @@ for information about how to report bugs
 
 @item
 Once you have successfully compiled Octave, run @samp{make install}.
 
 This will install a copy of octave, its libraries, and its documentation
 in the destination directory.  As distributed, Octave is installed in
 the following directories.  In the table below, @var{prefix} defaults to
 @file{/usr/local}, @var{version} stands for the current version number
-of the interpreter, and @var{host_type} is the type of computer on which
+of the interpreter, and @var{arch} is the type of computer on which
 Octave is installed (for example, @samp{i586-unknown-gnu}).
 
 @table @file
 @item @var{prefix}/bin
 Octave and other binaries that people will want to run directly.
 
 @item @var{prefix}/lib
 Libraries like libcruft.a and liboctave.a.
@@ -180,20 +180,20 @@ Unix-style man pages describing Octave.
 @item @var{prefix}/info
 Info files describing Octave.
 
 @item @var{prefix}/share/octave/@var{version}/m
 Function files distributed with Octave.  This includes the Octave
 version, so that multiple versions of Octave may be installed at the
 same time.
 
-@item @var{prefix}/lib/octave/@var{version}/exec/@var{host_type}
+@item @var{prefix}/lib/octave/@var{version}/exec/@var{arch}
 Executables to be run by Octave rather than the user.
 
-@item @var{prefix}/lib/octave/@var{version}/oct/@var{host_type}
+@item @var{prefix}/lib/octave/@var{version}/oct/@var{arch}
 Object files that will be dynamically loaded.
 
 @item @var{prefix}/share/octave/@var{version}/imagelib
 Image files that are distributed with Octave.
 @end table
 @end itemize
 
 @menu
@@ -400,38 +400,16 @@ infinity and NaN variables.
 If your system does not support IEEE arithmetic but Octave's configure
 script incorrectly determined that it does, you can work around the
 problem by editing the file @file{config.h} to not define
 @code{HAVE_ISINF}, @code{HAVE_FINITE}, and @code{HAVE_ISNAN}.
 
 In any case, please report this as a bug since it might be possible to
 modify Octave's configuration script to automatically determine the
 proper thing to do.
-
-@item
-If you don't have @sc{Npsol} but you still want to be able to solve
-NLPs, or if you don't have @sc{Qpsol} but you still want to solve QPs,
-you'll need to find replacements or order them from Stanford.  If you
-know of a freely redistributable replacement, please let us know---we
-might be interested in distributing it with Octave.
-
-You can get more information about @sc{Npsol} and @sc{Qpsol} from
-
-@quotation
-Stanford Business Sofrtware, Inc.@*
-2680 Bayshore Parkway, Suite 304@*
-Mountain View, CA 94043@*
-Tel: (415) 962-8719@*
-Fax: (415) 962-1869
-@end quotation
-
-Octave may soon support @sc{Fsqp}, an NLP solver from Andre Tits
-@email{andre@@src.umd.edu} of the University of Maryland.  @sc{Fsqp} is
-available free of charge to academic sites, but can not be redistributed
-to third parties.
 @end itemize
 
 @node Binary Distributions,  , Installation Problems, Installation
 @appendixsec Binary Distributions
 
 Although Octave is not very difficult to build from its sources, it is a
 relatively large program that does require a significant amount of time
 and disk space to compile and install.  Because of this, many people
@@ -490,45 +468,45 @@ Unix-style man pages describing Octave.
 @item info
 Info files describing Octave.
 
 @item share/octave/@var{version}/m
 Function files distributed with Octave.  This includes the Octave
 version, so that multiple versions of Octave may be installed at the
 same time.
 
-@item libexec/octave/@var{version}/exec/@var{host_type}
+@item libexec/octave/@var{version}/exec/@var{arch}
 Executables to be run by Octave rather than the user.
 
-@item libexec/octave/@var{version}/oct/@var{host_type}
+@item libexec/octave/@var{version}/oct/@var{arch}
 Object files that will be dynamically loaded.
 
 @item share/octave/@var{version}/imagelib
 Image files that are distributed with Octave.
 @end table
 
 @noindent
 where @var{version} stands for the current version number of the
-interpreter, and @var{host_type} is the type of computer on which Octave
+interpreter, and @var{arch} is the type of computer on which Octave
 is installed (for example, @samp{@value{TARGETHOSTTYPE}}).
 
 If these directories don't exist, the script @code{install-octave} will
 create them for you.  The installation script also creates the following
 subdirectories of @file{/usr/local} that are intended for locally
 installed functions:
 
 @table @file
 @item share/octave/site/m
 Locally installed M-files.
 
-@item libexec/octave/site/exec/@var{host_type}
+@item libexec/octave/site/exec/@var{arch}
 Locally installed binaries intended to be run by Octave rather than by
 the user.
 
-@item libexec/octave/site/octave/@var{host_type}
+@item libexec/octave/site/octave/@var{arch}
 Local object files that will be dynamically linked.
 @end table
 
 If it is not possible for you to install Octave in @file{/usr/local}, or
 if you would prefer to install it in a different directory, you can
 specify the name of the top level directory as an argument to the
 @file{install-octave} script.  For example:
 
diff --git a/doc/interpreter/intro.texi b/doc/interpreter/intro.texi
--- a/doc/interpreter/intro.texi
+++ b/doc/interpreter/intro.texi
@@ -1,29 +1,29 @@
 @c Copyright (C) 1996, 1997 John W. Eaton
 @c This is part of the Octave manual.
 @c For copying conditions, see the file gpl.texi.
 
 @node Introduction, Getting Started, Preface, Top
 @chapter A Brief Introduction to Octave
 @cindex introduction
 
-This manual documents how to run, install and port Octave, and how to
-report bugs.
+This manual documents how to run, install and port GNU Octave, and how
+to report bugs.
 
-Octave is a high-level language, primarily intended for numerical
+GNU Octave is a high-level language, primarily intended for numerical
 computations.  It provides a convenient command line interface for
 solving linear and nonlinear problems numerically, and for performing
 other numerical experiments.  It may also be used as a batch-oriented
 language.
 
-Octave is also freely redistributable software.  You may redistribute it
-and/or modify it under the terms of the GNU General Public License as
-published by the Free Software Foundation.  The GPL is included in this
-manual in @ref{Copying}.
+GNU Octave is also freely redistributable software.  You may
+redistribute it and/or modify it under the terms of the GNU General
+Public License as published by the Free Software Foundation.  The GPL is
+included in this manual in @ref{Copying}.
 
 This document corresponds to Octave version @value{VERSION}.
 
 @c XXX FIXME XXX -- add explanation about how and why Octave was written.
 @c
 @c XXX FIXME XXX -- add a sentence or two explaining that we could
 @c                  always use more funding.
 
@@ -32,17 +32,17 @@ This document corresponds to Octave vers
 * Simple Examples::             
 * Conventions::                 
 @end menu
 
 @node Running Octave, Simple Examples, Introduction, Introduction
 @section Running Octave
 
 On most systems, the way to invoke Octave is with the shell command
-@kbd{octave}.  Octave displays an initial message and then a prompt
+@samp{octave}.  Octave displays an initial message and then a prompt
 indicating it is ready to accept input.  You can begin typing Octave
 commands immediately afterward.
 
 If you get into trouble, you can usually interrupt Octave by typing
 @kbd{Control-C} (usually written @kbd{C-c} for short).  @kbd{C-c} gets
 its name from the fact that you type it by holding down @key{CTRL} and
 then pressing @key{c}.  Doing this will normally return you to Octave's
 prompt.
@@ -358,58 +358,57 @@ manual.  You may want to skip this secti
 @end menu
 
 @node Fonts, Evaluation Notation, Conventions, Conventions
 @subsection Fonts
 @cindex fonts
 
 Examples of Octave code appear in this font or form: @code{svd (a)}.
 Names that represent arguments or metasyntactic variables appear
-in this font or form: @var{first-number}.  Commands that you type
-sometimes appear in this font or form: @kbd{foo --bar --baz}.  Specific
-keys on your keyboard appear in this font or form: @key{ANY}.
+in this font or form: @var{first-number}.  Commands that you type at the
+shell prompt sometimes appear in this font or form:
+@samp{octave --no-init-file}.  Commands that you type at the Octave
+prompt sometimes appear in this font or form: @kbd{foo --bar --baz}.
+Specific keys on your keyboard appear in this font or form: @key{ANY}.
 @cindex any key
 
 @node Evaluation Notation, Printing Notation, Fonts, Conventions
 @subsection Evaluation Notation
 @cindex evaluation notation
 @cindex documentation notation
 
 In the examples in this manual, results from expressions that you
 evaluate are indicated with @samp{@result{}}.  For example,
 
 @example
 @group
 sqrt (2)
-
      @result{} 1.4142
 @end group
 @end example
 
 @noindent
 You can read this as ``@code{sqrt (2)} evaluates to 1.4142''.
 
 In some cases, matrix values that are returned by expressions are
 displayed like this
 
 @example
 @group
 [1, 2; 3, 4] == [1, 3; 2, 4]
-
      @result{} [ 1, 0; 0, 1 ]
 @end group
 @end example
 
 @noindent
 and in other cases, they are displayed like this
 
 @example
 @group
 eye (3)
-
      @result{}  1  0  0
          0  1  0
          0  0  1
 @end group
 @end example
 
 @noindent
 in order to clearly show the structure of the result.
@@ -436,19 +435,17 @@ Many of the examples in this manual prin
 evaluated.  Examples in this manual indicate printed text with
 @samp{@print{}}.  The value that is returned by evaluating the
 expression (here @code{1}) is displayed with @samp{@result{}} and
 follows on a separate line.
 
 @example
 @group
 printf ("foo %s\n", "bar")
-
      @print{} foo bar
-
      @result{} 1
 @end group
 @end example
 
 @node Error Messages, Format of Descriptions, Printing Notation, Conventions
 @subsection Error Messages
 @cindex error message notation
 
@@ -500,21 +497,18 @@ Here is a description of an imaginary fu
 @deftypefn {Function} {} foo (@var{x}, @var{y}, @dots{})
 The function @code{foo} subtracts @var{x} from @var{y}, then adds the
 remaining arguments to the result.  If @var{y} is not supplied, then the
 number 19 is used by default.
 
 @example
 @group
 foo (1, [3, 5], 3, 9)
-
      @result{} [ 14, 16 ]
-
 foo (5)
-
      @result{} 14
 @end group
 @end example
 
 More generally,
 
 @example
 @group
diff --git a/doc/interpreter/linalg.texi b/doc/interpreter/linalg.texi
--- a/doc/interpreter/linalg.texi
+++ b/doc/interpreter/linalg.texi
@@ -100,17 +100,16 @@ Return a 2 by 2 orthogonal matrix
 @code{@var{G} [@var{x}; @var{y}] = [*; 0]} with @var{x} and @var{y} scalars.
 @end ifinfo
 
 For example,
 
 @example
 @group
 givens (1, 1)
-
      @result{}   0.70711   0.70711
          -0.70711   0.70711
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Loadable Function} {} inv (@var{a})
 @deftypefnx {Loadable Function} {} inverse (@var{a})
@@ -773,17 +772,16 @@ Form the kronecker product of two matric
 x = [a(i, j) b]
 @end example
 
 For example,
 
 @example
 @group
 kron (1:4, ones (3, 1))
-
      @result{}  1  2  3  4
          1  2  3  4
          1  2  3  4
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Function File} {[@var{aa}, @var{bb}, @var{q}, @var{z}] =} qzhess (@var{a}, @var{b})
@@ -791,23 +789,19 @@ Compute the Hessenberg-triangular decomp
 @code{(@var{a}, @var{b})}, returning
 @code{@var{aa} = @var{q} * @var{a} * @var{z}}, 
 @code{@var{bb} = @var{q} * @var{b} * @var{z}}, with @var{q} and @var{z}
 orthogonal.  For example,
 
 @example
 @group
 [aa, bb, q, z] = qzhess ([1, 2; 3, 4], [5, 6; 7, 8])
-
      @result{} aa = [ -3.02244, -4.41741;  0.92998,  0.69749 ]
-
      @result{} bb = [ -8.60233, -9.99730;  0.00000, -0.23250 ]
-
      @result{}  q = [ -0.58124, -0.81373; -0.81373,  0.58124 ]
-
      @result{}  z = [ 1, 0; 0, 1 ]
 @end group
 @end example
 
 The Hessenberg-triangular decomposition is the first step in
 Moler and Stewart's QZ decomposition algorithm.
 
 Algorithm taken from Golub and Van Loan, @cite{Matrix Computations, 2nd
diff --git a/doc/interpreter/matrix.texi b/doc/interpreter/matrix.texi
--- a/doc/interpreter/matrix.texi
+++ b/doc/interpreter/matrix.texi
@@ -33,17 +33,16 @@ nonzero.
 
 For a matrix argument, return a row vector of ones and
 zeros with each element indicating whether any of the elements of the
 corresponding column of the matrix are nonzero.  For example,
 
 @example
 @group
 any (eye (2, 4))
-
      @result{} [ 1, 1, 0, 0 ]
 @end group
 @end example
 
 To see if any of the elements of a matrix are nonzero, you can use a
 statement like
 
 @example
@@ -59,17 +58,16 @@ elements in a column of a matrix, are no
 
 Since the comparison operators (@pxref{Comparison Ops}) return matrices
 of ones and zeros, it is easy to test a matrix for many things, not just
 whether the elements are nonzero.  For example, 
 
 @example
 @group
 all (all (rand (5) < 0.9))
-
      @result{} 0
 @end group
 @end example
 
 @noindent
 tests a random 5 by 5 matrix to see if all of it's elements are less
 than 0.9.
 
@@ -82,21 +80,18 @@ Determine if all input arguments are eit
 size.  If so, @var{err} is zero, and @var{yi} is a matrix of the
 common size with all entries equal to @var{xi} if this is a scalar or
 @var{xi} otherwise.  If the inputs cannot be brought to a common size,
 errorcode is 1, and @var{yi} is @var{xi}.  For example,
 
 @example
 @group
 [errorcode, a, b] = common_size ([1 2; 3 4], 5)
-
      @result{} errorcode = 0
-
      @result{} a = [ 1, 2; 3, 4 ]
-
      @result{} b = [ 5, 5; 5, 5 ]
 @end group
 @end example
 
 @noindent
 This is useful for implementing functions where arguments can either
 be scalars or of common size.
 @end deftypefn
@@ -123,133 +118,121 @@ The second argument is optional.  If sup
 
 @deftypefn {Mapping Function} {} isinf (@var{x})
 Return 1 for elements of @var{x} that are infinite and zero
 otherwise. For example,
 
 @example
 @group
 isinf ([13, Inf, NaN])
-
      @result{} [ 0, 1, 0 ]
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Mapping Function} {} isnan (@var{x})
 Return 1 for elements of @var{x} that are NaN values and zero
 otherwise. For example,
 
 @example
 @group
 isnan ([13, Inf, NaN])
-
      @result{} [ 0, 0, 1 ]
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Mapping Function} {} finite (@var{x})
 Return 1 for elements of @var{x} that are NaN values and zero
 otherwise. For example,
 
 @example
 @group
 finite ([13, Inf, NaN])
-
      @result{} [ 1, 0, 0 ]
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Loadable Function} {} find (@var{x})
 Return a vector of indices of nonzero elements of a matrix.  To obtain a
 single index for each matrix element, Octave pretends that the columns
 of a matrix form one long vector (like Fortran arrays are stored).  For
 example,
 
 @example
 @group
 find (eye (2))
-
      @result{} [ 1; 4 ]
 @end group
 @end example
 
 If two outputs are requested, @code{find} returns the row and column
 indices of nonzero elements of a matrix.  For example,
 
 @example
 @group
 [i, j] = find (2 * eye (2))
-
      @result{} i = [ 1; 2 ]
-
      @result{} j = [ 1; 2 ]
 @end group
 @end example
 
 If three outputs are requested, @code{find} also returns a vector
 containing the the nonzero values.  For example,
 
 @example
 @group
 [i, j, v] = find (3 * eye (2))
-
      @result{} i = [ 1; 2 ]
-
      @result{} j = [ 1; 2 ]
-
      @result{} v = [ 3; 3 ]
 @end group
 @end example
 @end deftypefn
         
 @node Rearranging Matrices, Special Utility Matrices, Finding Elements and Checking Conditions, Matrix Manipulation
 @section Rearranging Matrices
 
 @deftypefn {Function File} {} fliplr (@var{x})
 Return a copy of @var{x} with the order of the columns reversed.  For
 example, 
 
 @example
 @group
 fliplr ([1, 2; 3, 4])
-
      @result{}  2  1
          4  3
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Function File} {} flipud (@var{x})
 Return a copy of @var{x} with the order of the rows reversed.  For
 example,
 
 @example
 @group
 flipud ([1, 2; 3, 4])
-
      @result{}  3  4
          1  2
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Function File} {} rot90 (@var{x}, @var{n})
 Return a copy of @var{x} with the elements rotated counterclockwise in
 90-degree increments.  The second argument is optional, and specifies
 how many 90-degree rotations are to be applied (the default value is 1).
 Negative values of @var{n} rotate the matrix in a clockwise direction.
 For example,
 
 @example
 @group
 rot90 ([1, 2; 3, 4], -1)
-
      @result{}  3  1
          4  2
 @end group
 @end example
 
 @noindent
 rotates the given matrix clockwise by 90 degrees.  The following are all
 equivalent statements:
@@ -271,17 +254,16 @@ taken from the matrix @var{a}.  To decid
 Octave pretends that the elements of a matrix are stored in column-major
 order (like Fortran arrays are stored).
 
 For example,
 
 @example
 @group
 reshape ([1, 2, 3, 4], 2, 2)
-
      @result{}  1  3
          2  4
 @end group
 @end example
 
 If the variable @code{do_fortran_indexing} is nonzero, the
 @code{reshape} function is equivalent to
 
@@ -310,58 +292,54 @@ Return a copy of @var{x} with the elemen
 increasing order.  For matrices, @code{sort} orders the elements in each
 column.
 
 For example,
 
 @example
 @group
 sort ([1, 2; 2, 3; 3, 1])
-
      @result{}  1  1
          2  2
          3  3
 @end group
 @end example
 
 The @code{sort} function may also be used to produce a matrix
 containing the original row indices of the elements in the sorted
 matrix.  For example,
 
 @example
 @group
 [s, i] = sort ([1, 2; 2, 3; 3, 1])
-
      @result{} s = 1  1
             2  2
             3  3
-
      @result{} i = 1  3
             2  1
             3  2
 @end group
 @end example
 @end deftypefn
 
 Since the @code{sort} function does not allow sort keys to be specified,
-so it can't be used to order the rows of a matrix according to the
-values of the elements in various columns@footnote{For example, to first
-sort based on the values in column 1, and then, for any values that are
+it can't be used to order the rows of a matrix according to the values
+of the elements in various columns@footnote{For example, to first sort
+based on the values in column 1, and then, for any values that are
 repeated in column 1, sort based on the values found in column 2, etc.}
 in a single call.  Using the second output, however, it is possible to
 sort all rows based on the values in a given column.  Here's an example
 that sorts the rows of a matrix based on the values in the second
 column.
 
 @example
 @group
 a = [1, 2; 2, 3; 3, 1];
 [s, i] = sort (a (:, 2));
 a (i, :)
-
      @result{}  3  1
          1  2
          2  3
 @end group
 @end example
 
 @deftypefn {Function File} {} tril (@var{a}, @var{k})
 @deftypefnx {Function File} {} triu (@var{a}, @var{k})
@@ -382,30 +360,28 @@ selected.
 The absolute value of @var{k} must not be greater than the number of
 sub- or super-diagonals.
 
 For example,
 
 @example
 @group
 tril (ones (3), -1)
-
      @result{}  0  0  0
          1  0  0
          1  1  0
 @end group
 @end example
 
 @noindent
 and
 
 @example
 @group
 tril (ones (3), 1)
-
      @result{}  1  1  0
          1  1  1
          1  1  1
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Function File} {} vec (@var{x})
@@ -429,17 +405,16 @@ Return an identity matrix.  If invoked w
 supply two scalar arguments, @code{eye} takes them to be the number of
 rows and columns.  If given a vector with two elements, @code{eye} uses
 the values of the elements as the number of rows and columns,
 respectively.  For example,
 
 @example
 @group
 eye (3)
-
      @result{}  1  0  0
          0  1  0
          0  0  1
 @end group
 @end example
 
 The following expressions all produce the same result:
 
@@ -574,17 +549,16 @@ Return a diagonal matrix with vector @va
 second argument is optional.  If it is positive, the vector is placed on
 the @var{k}-th super-diagonal.  If it is negative, it is placed on the
 @var{-k}-th sub-diagonal.  The default value of @var{k} is 0, and the
 vector is placed on the main diagonal.  For example,
 
 @example
 @group
 diag ([1, 2, 3], 1)
-
      @result{}  0  1  0  0
          0  0  2  0
          0  0  0  3
          0  0  0  0
 @end group
 @end example
 @end deftypefn
 
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -33,17 +33,17 @@ END-INFO-DIR-ENTRY
 @defindex op
 
 @c Things like the Octave version number are defined in conf.texi.
 @c This file doesn't include a chapter, so it must not be included
 @c if you want to run the Emacs function texinfo-multiple-files-update.
 
 @include conf.texi
 
-@settitle Octave
+@settitle GNU Octave
 
 @ifinfo
 
 Copyright (C) 1996, 1997 John W. Eaton.
 
 Permission is granted to make and distribute verbatim copies of
 this manual provided the copyright notice and this permission notice
 are preserved on all copies.
@@ -61,17 +61,17 @@ the entire resulting derived work is dis
 a permission notice identical to this one.
 
 Permission is granted to copy and distribute translations of this
 manual into another language, under the above conditions for
 modified versions.
 @end ifinfo
 
 @titlepage
-@title Octave
+@title GNU Octave
 @subtitle A high-level interactive language for numerical computations
 @subtitle Edition 3 for Octave version @value{VERSION}
 @subtitle February 1997
 @author John W. Eaton
 @page
 @vskip 0pt plus 1filll
 Copyright @copyright{} 1996, 1997 John W. Eaton.
 
@@ -95,19 +95,19 @@ Portions of this document have been adap
 Software Foundation, 59 Temple Place---Suite 330, Boston, MA
 02111--1307, USA.
 @end titlepage
 
 @ifinfo
 @node Top, Preface, (dir), (dir)
 @top
 
-This manual documents how to run, install and port Octave, as well as
-its new features and incompatibilities, and how to report bugs.
-It corresponds to Octave version @value{VERSION}.
+This manual documents how to run, install and port GNU Octave, as well
+as its new features and incompatibilities, and how to report bugs.
+It corresponds to GNU Octave version @value{VERSION}.
 @end ifinfo
 
 @menu
 * Preface::                     
 * Introduction::                A brief introduction to Octave.
 * Getting Started::             
 * Data Types::                  
 * Numeric Data Types::          
diff --git a/doc/interpreter/optim.texi b/doc/interpreter/optim.texi
--- a/doc/interpreter/optim.texi
+++ b/doc/interpreter/optim.texi
@@ -17,74 +17,19 @@
 @cindex optimization
 @cindex LP
 @cindex QP
 @cindex NLP
 
 @node Quadratic Programming, Nonlinear Programming, Optimization, Optimization
 @section Quadratic Programming
 
-@deftypefn {Loadable Function} {[@var{x}, @var{obj}, @var{info}, @var{lambda}] =} qpsol (@var{x}, @var{H}, @var{c}, @var{lb}, @var{ub}, @var{lb}, @var{A}, @var{ub})
-Solve quadratic programs using Gill and Murray's @sc{Qpsol}.  Because
-@sc{Qpsol} is not freely redistributable, this function is only
-available if you have obtained your own copy of @sc{Qpsol}.
-@xref{Installation}.
-@end deftypefn
-
-@deftypefn {Loadable Function} {} qpsol_options (@var{opt}, @var{val})
-When called with two arguments, this function allows you set options
-parameters for the function @code{qpsol}.  Given one argument,
-@code{qpsol_options} returns the value of the corresponding option.  If
-no arguments are supplied, the names of all the available options and
-their current values are displayed.
-@end deftypefn
-
 @node Nonlinear Programming, Linear Least Squares, Quadratic Programming, Optimization
 @section Nonlinear Programming
 
-@ignore
-@deftypefn {Loadable Function} {} fsqp ()
-@end deftypefn
-
-@deftypefn {Loadable Function} {} fsqp_options (@var{opt}, @var{val})
-When called with two arguments, this function allows you set options
-parameters for the function @code{fsqp}.  Given one argument,
-@code{fsqp_options} returns the value of the corresponding option.  If
-no arguments are supplied, the names of all the available options and
-their current values are displayed.
-@end deftypefn
-
-Sorry, this hasn't been implemented yet.
-@end ignore
-
-@deftypefn {Loadable Function} {[@var{x}, @var{obj}, @var{info}, @var{lambda}] =} npsol (@var{x}, @var{phi}, @var{lb}, @var{ub}, @var{lb}, @var{A}, @var{ub}, @var{lb}, @var{g}, @var{ub})
-Solve nonlinear programs using Gill and Murray's @sc{Npsol}.  Because
-@sc{Npsol} is not freely redistributable, this function is only
-available if you have obtained your own copy of @sc{Npsol}.
-@xref{Installation}.
-
-The second argument is a string containing the name of the objective
-function to call.  The objective function must be of the form
-
-@example
-y = phi (x)
-@end example
-
-@noindent
-where x is a vector and y is a scalar.
-@end deftypefn
-
-@deftypefn {Loadable Function} {} npsol_options (@var{opt}, @var{val})
-When called with two arguments, this function allows you set options
-parameters for the function @code{npsol}.  Given one argument,
-@code{npsol_options} returns the value of the corresponding option.  If
-no arguments are supplied, the names of all the available options and
-their current values are displayed.
-@end deftypefn
-
 @node Linear Least Squares,  , Nonlinear Programming, Optimization
 @section Linear Least Squares
 
 @deftypefn {Function File} {[@var{beta}, @var{v}, @var{r}] =} gls (@var{y}, @var{x}, @var{o})
 Generalized least squares estimation for the multivariate model
 @iftex
 @tex
 $y = x b + e$
diff --git a/doc/interpreter/poly.texi b/doc/interpreter/poly.texi
--- a/doc/interpreter/poly.texi
+++ b/doc/interpreter/poly.texi
@@ -203,27 +203,21 @@ whether poles with small imaginary compo
 also used to determine if two poles are distinct.  If the ratio of the
 imaginary part of a pole to the real part is less than @var{tol}, the
 imaginary part is discarded.  If two poles are farther apart than
 @var{tol} they are distinct.  For example,
 
 @example
 @group
  b = [1, 1, 1];
-
  a = [1, -5, 8, -4];
-
  [r, p, k, e] = residue (b, a);
-
      @result{} r = [-2, 7, 3]
-
      @result{} p = [2, 2, 1]
-
      @result{} k = [](0x0)
-
      @result{} e = [1, 2, 1]
 @end group
 @end example
 
 @noindent
 which implies the following partial fraction expansion
 @iftex
 @tex
diff --git a/doc/interpreter/quad.texi b/doc/interpreter/quad.texi
--- a/doc/interpreter/quad.texi
+++ b/doc/interpreter/quad.texi
@@ -90,23 +90,19 @@ for the call to @code{quad}, but it make
 set of points for plotting (because it makes it possible to call the
 function with a vector argument to produce a vector result).
 
 Then we simply call quad:
 
 @example
 @group
 [v, ier, nfun, err] = quad ("f", 0, 3)
-
      @result{} 1.9819
-
      @result{} 1
-
      @result{} 5061
-
      @result{} 1.1522e-07
 @end group
 @end example
 
 Although @code{quad} returns a nonzero value for @var{ier}, the result
 is reasonably accurate (to see why, examine what happens to the result
 if you move the lower bound to 0.1, then 0.01, then 0.001, etc.).
 
diff --git a/doc/interpreter/strings.texi b/doc/interpreter/strings.texi
--- a/doc/interpreter/strings.texi
+++ b/doc/interpreter/strings.texi
@@ -146,19 +146,18 @@ setstr ([97, 98, 99])
 @end example
 @end deftypefn
 
 @deftypefn {Function File} {} strcat (@var{s1}, @var{s2}, @dots{})
 Return a string containing all the arguments concatenated.  For example,
 
 @example
 @group
-s = [ "ab"; "cde" ]
+s = [ "ab"; "cde" ];
 strcat (s, s, s)
-
      @result{} "ab ab ab "
         "cdecdecde"
 @end group
 @end example
 @end deftypefn
 
 @defvr {Built-in Variable} string_fill_char
 The value of this variable is used to pad all strings in a string matrix
diff --git a/doc/interpreter/system.texi b/doc/interpreter/system.texi
--- a/doc/interpreter/system.texi
+++ b/doc/interpreter/system.texi
@@ -571,38 +571,34 @@ If @var{file} is a symbolic link, @code{
 about the actual file the is referenced by the link.  Use @code{lstat}
 if you want information about the symbolic link itself.
 
 For example,
 
 @example
 @group
 [s, err, msg] = stat ("/vmlinuz")
-
      @result{} s =
         @{
           atime = 855399756
           rdev = 0
           ctime = 847219094
           uid = 0
           size = 389218
           blksize = 4096
           mtime = 847219094
           gid = 6
           nlink = 1
           blocks = 768
           modestr = -rw-r--r--
           ino = 9316
           dev = 2049
         @}
-
      @result{} err = 0
-
      @result{} msg = 
-
 @end group
 @end example
 @end deftypefn
 
 @deftypefn {Built-in Function} {} glob (@var{pattern})
 Given an array of strings in @var{pattern}, return the list of file
 names that any of them, or an empty string if no patterns match.  Tilde
 expansion is performed on each of the patterns before looking for
@@ -789,23 +785,23 @@ to search when executing subprograms.  I
 the environment variable @code{OCTAVE_EXEC_PATH} (if it exists) or
 @code{PATH}, but that value can be overridden by the the command line
 argument @code{--exec-path PATH}, or by setting the value of
 @code{EXEC_PATH} in a startup script.  If the value of @code{EXEC_PATH}
 begins (ends) with a colon, the directories
 
 @example
 @group
-@var{OCTAVE_HOME}/libexec/octave/site/exec/@var{ARCH}
-@var{OCTAVE_HOME}/libexec/octave/@var{VERSION}/exec/@var{ARCH}
+@var{octave-home}/libexec/octave/site/exec/@var{arch}
+@var{octave-home}/libexec/octave/@var{version}/exec/@var{arch}
 @end group
 @end example
 
 @noindent
-are prepended (appended) to @code{EXEC_PATH}, where @var{OCTAVE_HOME}
+are prepended (appended) to @code{EXEC_PATH}, where @var{octave-home}
 is the top-level directory where all of Octave is installed
 (the default value is @file{@value{OCTAVEHOME}}).  If you don't specify
 a value for @code{EXEC_PATH} explicitly, these special directories are
 prepended to your shell path.
 @end defvr
 
 In most cases, the following functions simply decode their arguments and
 make the corresponding Unix system calls.  For a complete example of how
@@ -873,17 +869,17 @@ Wait for process @var{pid} to terminate.
 @item @minus{}1
 Wait for any child process.
 
 @item 0
 Wait for any child process whose process group ID is equal to that of
 the Octave interpreter process.
 
 @item > 0
-Wait for termination of the child process with ID @var{PID}.
+Wait for termination of the child process with ID @var{pid}.
 @end table
 
 The @var{options} argument can be:
 
 @table @asis
 @item 0
 Wait until signal is received or a child process exits (this is the
 default if the @var{options} argument is missing).
diff --git a/doc/interpreter/var.texi b/doc/interpreter/var.texi
--- a/doc/interpreter/var.texi
+++ b/doc/interpreter/var.texi
@@ -276,47 +276,51 @@ Display the type of each @var{name}.  If
 function file, the full name of the file is also displayed.
 @end deffn
 
 @node Summary of Built-in Variables, Defaults from the Environment, Status of Variables, Variables
 @section Summary of Built-in Variables
 
 Here is a summary of all of Octave's built-in variables along with
 cross references to additional information and their default values.  In
-the following table @code{OCT_HOME} stands for the root directory where
-all of Octave is installed (the default is @file{@value{OCTAVEHOME}},
-@code{VERSION} stands for the Octave version number (for example,
-@value{VERSION}, and @code{SYS} stands for the type of system for which
+the following table @var{octave-home} stands for the root directory
+where all of Octave is installed (the default is @file{@value{OCTAVEHOME}},
+@var{version} stands for the Octave version number (for example,
+@value{VERSION}) and @var{arch} stands for the type of system for which
 Octave was compiled (for example, @code{@value{TARGETHOSTTYPE}}).
 
 @vtable @code
 @item EDITOR
 @xref{Commands For History}.
 
-Default value: @code{"vi"}.
+Default value: @code{"emacs"}.
 
 @item EXEC_PATH
 @xref{Controlling Subprocesses}.
 
 Default value: @code{":$PATH"}.
 
 @item INFO_FILE
 @xref{Getting Help}.
 
-Default value: @code{"OCT_HOME/info/octave.info"}.
+Default value: @code{"@var{octave-home}/info/octave.info"}.
 
 @item INFO_PROGRAM
 @xref{Getting Help}.
 
-Default value: @code{"OCT_HOME/libexec/octave/VERSION/exec/SYS/info"}.
+Default value: @code{"@var{octave-home}/libexec/octave/@var{version}/exec/@var{arch}/info"}.
 
 @item LOADPATH
 @xref{Function Files}.
 
-Default value: @code{".:OCT_HOME/lib/VERSION"}.
+Default value: @code{".:@var{octave-home}/lib/@var{version}"}.
+
+@item OCTAVE_HOME
+
+Default value: @code{"@value{OCTAVEHOME}"}.
 
 @item PAGER
 @xref{Input and Output}.
 
 Default value: @code{"less", or "more"}.
 
 @item PS1
 @xref{Customizing the Prompt}.
@@ -343,16 +347,21 @@ Default value: 0.
 
 Default value: 0.
 
 @item completion_append_char
 @xref{Commands For Completion}.
 
 Default value: @code{" "}.
 
+@item default_eval_print_flag
+@xref{Evaluation}.
+
+Default value: 1.
+
 @item default_return_value
 @xref{Multiple Return Values}.
 
 Default value: @code{[]}.
 
 @item default_save_format
 @xref{Simple File I/O}.
 
diff --git a/doc/liboctave/optim.texi b/doc/liboctave/optim.texi
--- a/doc/liboctave/optim.texi
+++ b/doc/liboctave/optim.texi
@@ -162,65 +162,16 @@
 @end deftypefn
 
 @deftypefn {} {virtual ColumnVector} minimize (const ColumnVector &@var{x})
 @deftypefnx {} {virtual ColumnVector} minimize (const ColumnVector &@var{x}, double &@var{objf})
 @deftypefnx {} {virtual ColumnVector} minimize (const ColumnVector &@var{x}, double &@var{objf}, int &@var{inform})
 @deftypefnx {} {virtual ColumnVector} minimize (const ColumnVector &@var{x}, double &@var{objf}, int &@var{inform}, ColumnVector &@var{lambda})
 @end deftypefn
 
-@deftypefn  {} {}QPSOL_options (void)
-@deftypefnx  {} {}QPSOL_options (const QPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} QPSOL_options& {operator =} (const QPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} void init (void)
-@end deftypefn
-
-@deftypefn {} void copy (const QPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} void set_default_options (void)
-@end deftypefn
-
-@deftypefn {} void set_feasibility_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_infinite_bound (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_iteration_limit (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_print_level (int @var{val})
-@end deftypefn
-
-@deftypefn {} double feasibility_tolerance (void)
-@deftypefnx {} double infinite_bound (void)
-@deftypefnx {} int iteration_limit (void)
-@deftypefnx {} int print_level (void)
-@end deftypefn
-
-@deftypefn  {} {}QPSOL (void)
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const ColumnVector &@var{c})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const Bounds &@var{b})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const LinConst &@var{lc})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const ColumnVector &@var{c}, const Bounds &@var{b})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const ColumnVector &@var{c}, const LinConst &@var{lc})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const Bounds &@var{b}, const LinConst &@var{lc})
-@deftypefnx  {} {}QPSOL (const ColumnVector &@var{x}, const Matrix &@var{H}, const ColumnVector &@var{c}, const Bounds &@var{b}, const LinConst &@var{lc})
-@deftypefnx  {} {}QPSOL (const QPSOL &@var{a})
-@end deftypefn
-
-@deftypefn {} QPSOL& {operator =} (const QPSOL &@var{a})
-@end deftypefn
-
 @deftypefn {} ColumnVector minimize (double &@var{objf}, int &@var{inform}, ColumnVector &@var{lambda})
 @end deftypefn
 
 @c ------------------------------------------------------------------------
 
 @node Nonlinear Programming,  , Quadratic Programming, Optimization
 @section Nonlinear Programming
 @cindex NLP
@@ -238,124 +189,16 @@
 @end deftypefn
 
 @deftypefn {} NLP& {operator =} (const NLP &@var{a})
 @end deftypefn
 
 @deftypefn {} int size (void) const
 @end deftypefn
 
-@deftypefn  {} {}NPSOL_options (void)
-@deftypefnx  {} {}NPSOL_options (const NPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} NPSOL_options& {operator =} (const NPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} void init (void)
-@deftypefnx {} void copy (const NPSOL_options &@var{opt})
-@end deftypefn
-
-@deftypefn {} void set_default_options (void)
-@end deftypefn
-
-@deftypefn {} void set_central_difference_interval (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_crash_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_difference_interval (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_function_precision (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_infinite_bound (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_infinite_step (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_linear_feasibility_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_linesearch_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_nonlinear_feasibility_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_optimality_tolerance (double @var{val})
-@end deftypefn
-
-@deftypefn {} void set_derivative_level (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_major_iteration_limit (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_minor_iteration_limit (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_major_print_level (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_minor_print_level (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_start_objective_check (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_start_constraint_check (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_stop_objective_check (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_stop_constraint_check (int @var{val})
-@end deftypefn
-
-@deftypefn {} void set_verify_level (int @var{val})
-@end deftypefn
-
-@deftypefn {} double central_difference_interval (void) const
-@deftypefnx {} double crash_tolerance (void) const
-@deftypefnx {} double difference_interval (void) const
-@deftypefnx {} double function_precision (void) const
-@deftypefnx {} double infinite_bound (void) const
-@deftypefnx {} double infinite_step (void) const
-@deftypefnx {} double linear_feasibility_tolerance (void) const
-@deftypefnx {} double linesearch_tolerance (void) const
-@deftypefnx {} double nonlinear_feasibility_tolerance (void) const
-@deftypefnx {} double optimality_tolerance (void) const
-@deftypefnx {} int derivative_level (void) const
-@deftypefnx {} int major_iteration_limit (void) const
-@deftypefnx {} int minor_iteration_limit (void) const
-@deftypefnx {} int major_print_level (void) const
-@deftypefnx {} int minor_print_level (void) const
-@deftypefnx {} int start_objective_check (void) const
-@deftypefnx {} int start_constraint_check (void) const
-@deftypefnx {} int stop_objective_check (void) const
-@deftypefnx {} int stop_constraint_check (void) const
-@deftypefnx {} int verify_level (void) const
-@end deftypefn
-
-@deftypefn  {} {}NPSOL (void)
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b}, const LinConst &@var{lc})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b}, const LinConst &@var{lc}, const NLConst &@var{nlc})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const LinConst &@var{lc})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const LinConst &@var{lc}, const NLConst &@var{nlc})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const NLConst &@var{nlc})
-@deftypefnx  {} {}NPSOL (const ColumnVector &@var{x}, const Objective &@var{phi}, const Bounds &@var{b}, const NLConst &@var{nlc})
-@deftypefnx  {} {}NPSOL (const NPSOL &@var{a})
-@end deftypefn
-
 @deftypefn {} ColumnVector minimize (void)
 @deftypefnx {} ColumnVector minimize (double &@var{objf})
 @deftypefnx {} ColumnVector minimize (double &@var{objf}, int &@var{inform})
 @deftypefnx {} ColumnVector minimize (double &@var{objf}, int &@var{inform}, ColumnVector &@var{lambda})
 @end deftypefn
 
 @deftypefn {} ColumnVector minimize (const ColumnVector &@var{x})
 @deftypefnx {} ColumnVector minimize (const ColumnVector &@var{x}, double &@var{objf})
diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,8 +1,12 @@
+Tue May 20 14:34:34 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in: Turn off optimization for hash.c.
+
 Thu Mar 13 13:08:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Don't set special PIC options on SGI systems,
 	since PIC is apparently the default.
 
 Wed Mar 12 17:00:16 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install-strip): New target.
diff --git a/kpathsea/Makefile.in b/kpathsea/Makefile.in
--- a/kpathsea/Makefile.in
+++ b/kpathsea/Makefile.in
@@ -142,16 +142,27 @@ tex-file.o:
 	$(CC) $(CPPFLAGS) $(CFLAGS) \
 	  -DDEFAULT_FONT_SIZES='"$(default_texsizes)"' -c $(srcdir)/tex-file.c
 
 pic/tex-file.o:
 	$(CC) $(CPPFLAGS) $(CPICFLAG) $(CFLAGS) \
 	  -DDEFAULT_FONT_SIZES='"$(default_texsizes)"'\
 	  -c $(srcdir)/tex-file.c -o $@
 
+# Don't optimize.
+
+XCC = $(patsubst -O%, , $(CC))
+XCFLAGS = $(patsubst -O%, , $(ALL_CFLAGS))
+
+hash.o:
+	$(XCC) $(CPPFLAGS) $(XCFLAGS) -c $(srcdir)/hash.c
+
+pic/hash.o:
+	$(XCC) $(CPPFLAGS) $(CPICFLAG) $(XCFLAGS) -c $(srcdir)/hash.c -o $@
+
 # Need the -DHAVE_CONFIG_H.
 gmalloc.o:
 	$(CC) $(CPPFLAGS) @DEFS@ $(CFLAGS) -c $(srcdir)/gmalloc.c
 
 pic/gmalloc.o:
 	$(CC) $(CPPFLAGS) $(CPICFLAG) @DEFS@ $(CFLAGS) \
 	  -c $(srcdir)/gmalloc.c -o pic/gmalloc.o
 
diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,13 @@
+Wed May 21 16:29:42 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* misc/Makefile.in (install): Ensure include directory link is made.
+	(uninstall): Delete all installed files. 
+
 Thu Mar 13 22:31:35 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* blas, lapack: Add new files for symmetric eigenvalue
 	computation.
 
 Wed Mar 12 16:59:59 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* misc/Makefile.in (install-strip): New target.
diff --git a/libcruft/Makefile.in b/libcruft/Makefile.in
--- a/libcruft/Makefile.in
+++ b/libcruft/Makefile.in
@@ -80,30 +80,32 @@ stamp-shared: $(CRUFT_PICOBJ)
 
 check: all
 .PHONY: check
 
 install install-strip uninstall clean mostlyclean distclean maintainer-clean::
 	@$(subdir-for-command)
 
 install::
-	$(top_srcdir)/mkinstalldirs $(libdir)
-	rm -f $(libdir)/libcruft.a
-	$(INSTALL_DATA) libcruft.a $(libdir)/libcruft.a
-	$(RANLIB) $(libdir)/libcruft.a
+	$(top_srcdir)/mkinstalldirs $(octlibdir)
+	rm -f $(octlibdir)/libcruft.a
+	$(INSTALL_DATA) libcruft.a $(octlibdir)/libcruft.a
+	$(RANLIB) $(octlibdir)/libcruft.a
 	if $(SHARED_LIBS); then \
-	  rm -f $(libdir)/libcruft.$(SHLEXT); \
-	  $(INSTALL_PROGRAM) libcruft.$(SHLEXT) $(libdir)/libcruft.$(SHLEXT); \
+	  rm -f $(octlibdir)/libcruft.$(SHLEXT); \
+	  $(INSTALL_PROGRAM) \
+	    libcruft.$(SHLEXT) $(octlibdir)/libcruft.$(SHLEXT); \
 	fi
+	$(mk-libdir-link)
 
 install-strip::
 	$(MAKE) INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s" install
 
 uninstall::
-	rm -f $(libdir)/libcruft.a
+	rm -f $(octlibdir)/libcruft.a
 
 tags TAGS:: $(SOURCES)
 	$(SUBDIR_FOR_COMMAND)
 
 tags::
 	ctags $(SOURCES)
 
 TAGS:: $(SOURCES)
diff --git a/libcruft/misc/Makefile.in b/libcruft/misc/Makefile.in
--- a/libcruft/misc/Makefile.in
+++ b/libcruft/misc/Makefile.in
@@ -20,35 +20,40 @@ SPECIAL_DEPEND := machar.o dostop.o f77-
 EXTERNAL_DISTFILES = $(DISTFILES)
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
+INCLUDES := f77-fcn.h lo-error.h
+
 ifeq ($(SHARED_LIBS), true)
   ifdef CPICFLAG
     CPICDEP := pic/machar.o pic/dostop.o pic/f77-fcn.o
   endif
   ifdef CXXPICFLAG
     CXXPICDEP := pic/f77-extern.o pic/lo-error.o
   endif
   SPECIAL_PICDEPEND := $(CPICDEP) $(CXXPICDEP)
 endif
 
 include ../Makerules
 
 install install-strip::
 	$(top_srcdir)/mkinstalldirs $(octincludedir)
-	$(INSTALL_DATA) $(srcdir)/f77-fcn.h $(octincludedir)/f77-fcn.h
-	$(INSTALL_DATA) $(srcdir)/lo-error.h $(octincludedir)/lo-error.h
+	for f in $(INCLUDES) ; do \
+	  rm -f $(octincludedir)/$$f ; \
+	  $(INSTALL_DATA) $(srcdir)/$$f $(octincludedir)/$$f ; \
+	done
+	$(mk-includedir-link)
 
 uninstall::
-	rm -f $(octincludedir)/f77-fcn.h
+	for f in $(INCLUDES) ; do rm -f $(octincludedir)/$$f ; done
 
 # Don't optimize.
 
 XCC = $(patsubst -O%, , $(CC))
 XALL_CFLAGS = $(patsubst -O%, , $(ALL_CFLAGS))
 
 machar.o: $(srcdir)/machar.c
 	$(XCC) -c $(CPPFLAGS) $(XALL_CFLAGS) -DDP $<
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2752,20 +2752,22 @@ operator >> (istream& is, ComplexMatrix&
       Complex tmp;
       for (int i = 0; i < nr; i++)
 	for (int j = 0; j < nc; j++)
 	  {
 	    is >> tmp;
 	    if (is)
 	      a.elem (i, j) = tmp;
 	    else
-	      return is;
+	      goto done;
 	  }
     }
 
+done:
+
   return is;
 }
 
 ComplexMatrix
 Givens (const Complex& x, const Complex& y)
 {
   double cc;
   Complex cs, temp_r;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Wed May 21 16:30:25 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install-in): Use new mk-includedir-link macro.
+	(install-lib): Install in $octlibdir.  Use new mk-libdir-link macro.
+
 Thu May 15 11:46:42 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cmd-edit.cc (command_editor::increment_current_command_number):
 	New static function.
 
 Mon May 12 02:14:13 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* idx-vector.cc (IDX_VEC_REP::is_colon_equiv): Make it work when
diff --git a/liboctave/Makefile.in b/liboctave/Makefile.in
--- a/liboctave/Makefile.in
+++ b/liboctave/Makefile.in
@@ -182,50 +182,39 @@ check: all
 install: install-lib install-inc
 .PHONY: install
 
 install-strip:
 	$(MAKE) INSTALL_PROGRAM="$(INSTALL_PROGRAM) -s" install
 .PHONY: install-strip
 
 install-lib:
-	$(top_srcdir)/mkinstalldirs $(libdir)
-	rm -f $(libdir)/liboctave.a
-	$(INSTALL_DATA) liboctave.a $(libdir)/liboctave.a
-	$(RANLIB) $(libdir)/liboctave.a
+	$(top_srcdir)/mkinstalldirs $(octlibdir)
+	rm -f $(octlibdir)/liboctave.a
+	$(INSTALL_DATA) liboctave.a $(octlibdir)/liboctave.a
+	$(RANLIB) $(octlibdir)/liboctave.a
 	if $(SHARED_LIBS); then \
-	  rm -f $(libdir)/liboctave.$(SHLEXT); \
-	  $(INSTALL_PROGRAM) liboctave.$(SHLEXT) \
-	    $(libdir)/liboctave.$(SHLEXT); \
+	  rm -f $(octlibdir)/liboctave.$(SHLEXT); \
+	  $(INSTALL_PROGRAM) \
+	    liboctave.$(SHLEXT) $(octlibdir)/liboctave.$(SHLEXT); \
 	fi
+	$(mk-libdir-link)
 .PHONY: install-lib
 
 install-inc:
 	$(top_srcdir)/mkinstalldirs $(octincludedir)
 	for f in $(INCLUDES_FOR_INSTALL) ; do \
 	  rm -f $(octincludedir)/$$f ; \
 	  $(INSTALL_DATA) $(srcdir)/$$f $(octincludedir)/$$f ; \
 	done
-	tmp=`echo $(octincludedir) | sed 's|/*$$||'` ; \
-	dir=`echo $$tmp | sed 's|[^/]*$$||'` ; \
-	src=`echo $$tmp | sed 's|^.*/||'` ; \
-	dest=`echo $$src | sed 's|-$(version)$$||'` ; \
-	if [ "$$src" = "$$dest" ] ; then \
-	  true ; \
-	else \
-	  if [ -d $$dir/$$dest ] ; then \
-	    true ; \
-	  else \
-	    cd $$dir ; rm -f $$dest && $(LN_S) $$src $$dest ; \
-	  fi ; \
-	fi
+	$(mk-includedir-link)
 .PHONY: install-inc
 
 uninstall:
-	rm -f $(libdir)/liboctave.a $(libdir)/liboctave.$(SHLEXT)
+	rm -f $(octlibdir)/liboctave.a $(octlibdir)/liboctave.$(SHLEXT)
 	for f in $(INCLUDES) ; do rm -f $(octincludedir)/$$f ; done
 .PHONY: uninstall
 
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -97,18 +97,20 @@ INSTALL.OCTAVE:
 .PHONY: INSTALL.OCTAVE
 
 BUGS:
 	cd doc ; $(MAKE) ../BUGS
 .PHONY: BUGS
 
 install install-strip ::
 	$(top_srcdir)/mkinstalldirs $(DIRS_TO_MAKE)
-	$(INSTALL_SCRIPT) octave-bug $(bindir)/octave-bug
-	$(INSTALL_SCRIPT) mkoctfile $(bindir)/mkoctfile
+	$(INSTALL_SCRIPT) octave-bug $(bindir)/octave-bug-$(version)
+	cd $(bindir) ; $(LN_S) octave-bug-$(version) octave-bug
+	$(INSTALL_SCRIPT) mkoctfile $(bindir)/mkoctfile-$(version)
+	cd $(bindir) ; $(LN_S) mkoctfile-$(version) mkoctfile
 	$(INSTALL_DATA) config.h $(octincludedir)/config.h
 
 maintainer-clean::
 	@echo ""
 	@echo "************************************************************"
 	@echo "*                                                          *"
 	@echo "* This command is intended for maintainers to use; it      *"
 	@echo "* deletes files that may require special tools to rebuild. *"
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+Wed May 21 11:45:31 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* miscellaneous/bug_report.m: Pass file id to dump_prefs, not file
+	name.
+
 Mon May 12 02:04:01 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* specfun/erfinv.m: Add missing semicolon.
 
 Wed Apr  2 22:04:03 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* miscellaneous/xor.m: Make type of return value logical.
 
diff --git a/scripts/miscellaneous/bug_report.m b/scripts/miscellaneous/bug_report.m
--- a/scripts/miscellaneous/bug_report.m
+++ b/scripts/miscellaneous/bug_report.m
@@ -37,19 +37,21 @@ function bug_report ()
   subject = "";
   subject = input ("Subject: ", "s");
 
   unwind_protect
 
     prefs = tmpnam ();
 
     if (! isempty (prefs))
-      fopen (prefs, "w");
-      dump_prefs (prefs);
-      fclose (prefs);
+      fid = fopen (prefs, "w");
+      if (fid > 0)
+        dump_prefs (fid);
+        fclose (fid);
+      endif
     endif
 
     cmd = strcat (OCTAVE_HOME, "/bin/octave-bug");
 
     if (length (subject) > 0)
       cmd = sprintf ("%s -s \"%s\"", cmd, subject);
     endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,28 @@
+Wed May 21 16:30:25 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DLD-FUNCTIONS/time.cc (extract_tm): Avoid memory leak in dealing
+	with time zone.
+
+	* Makefile.in (install-in): Use new mk-includedir-link macro.
+	(install-lib): Install in $octlibdir.  Use new mk-libdir-link macro.
+
+Tue May 20 01:24:11 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-list.cc (Flist): Rename from Fmake_list.
+
+Mon May 19 14:45:58 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* octave.cc (maximum_braindamage): Set default_eval_print_flag to 0.
+
+Sat May 17 16:32:23 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* defaults.cc (set_default_editor): Default is now Emacs, not vi.
+
 Fri May 16 00:07:11 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-idx.cc (tree_index_expression::name): New function.
 
 	* pt.cc	(tree::str_print_code): New file, new convenience function.
 	* pt-arg-list.cc (tree_argument_list::get_arg_names): Use it.
 	* pt-assign.cc (tree_simple_assignment::rvalue): Likewise.
 	(tree_multi_assignment::rvalue): Likewise.
diff --git a/src/DLD-FUNCTIONS/time.cc b/src/DLD-FUNCTIONS/time.cc
--- a/src/DLD-FUNCTIONS/time.cc
+++ b/src/DLD-FUNCTIONS/time.cc
@@ -77,18 +77,24 @@ extract_tm (Octave_map &m, double& fract
   tm.tm_mday = static_cast<int> (m ["mday"] . double_value ());
   tm.tm_mon = static_cast<int> (m ["mon"] . double_value ());
   tm.tm_year = static_cast<int> (m ["year"] . double_value ());
   tm.tm_wday = static_cast<int> (m ["wday"] . double_value ());
   tm.tm_yday = static_cast<int> (m ["yday"] . double_value ());
   tm.tm_isdst = static_cast<int> (m ["isdst"] . double_value ());
 
 #if defined (HAVE_TM_ZONE)
+  static char *tm_zone = 0;
+
   string tstr = m ["zone"] . string_value ();
-  tm.tm_zone = tstr.c_str ();
+
+  delete [] tm_zone;
+  tm_zone = strsave (tstr.c_str ());
+
+  tm.tm_zone = tm_zone;
 #endif
 
   return &tm;
 }
 
 DEFUN_DLD (time, , ,
   "time ()\n\
 \n\
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -65,18 +65,18 @@ else
 endif
 
 OV_INCLUDES := ov-re-mat.h ov-cx-mat.h ov-ch-mat.h \
 	ov-list.h ov-struct.h ov-scalar.h ov-range.h \
 	ov-complex.h ov-va-args.h ov-colon.h ov-base.h \
 	ov-str-mat.h ov-bool-mat.h ov-bool.h ov-file.h ov.h \
 	ov-fcn.h ov-builtin.h ov-mapper.h ov-usr-fcn.h ov-typeinfo.h
 
-PT_INCLUDES := pt.h pt-all.h pt-arg-list.h pt-assign.h \
-	pt-binop.h pt-cmd.h pt-colon.h pt-const.h pt-decl.h \
+PT_INCLUDES := pt.h pt-all.h pt-arg-list.h pt-assign.h pt-binop.h \
+	pt-check.h pt-cmd.h pt-colon.h pt-const.h pt-decl.h \
 	pt-except.h pt-exp.h pt-id.h pt-idx.h pt-indir.h \
 	pt-jump.h pt-loop.h pt-mat.h pt-misc.h pt-plot.h \
 	pt-pr-code.h pt-select.h pt-stmt.h pt-unop.h pt-walk.h
 
 INCLUDES := BaseSLList.h Map.h SLList.h SLStack.h Stack.h defun-dld.h \
 	defun-int.h defun.h dirfns.h dynamic-ld.h error.h file-io.h \
 	fn-cache.h gripes.h help.h input.h lex.h load-save.h \
 	oct-fstrm.h oct-hist.h oct-iostrm.h \
@@ -106,17 +106,17 @@ OP_XSRC := op-b-b.cc op-bm-bm.cc op-cm-c
 OP_SRC := $(addprefix OPERATORS/, $(OP_XSRC))
 
 OV_SRC := ov-base.cc ov-ch-mat.cc ov-list.cc ov-re-mat.cc \
 	ov-cx-mat.cc ov-range.cc ov-scalar.cc ov-complex.cc \
 	ov-str-mat.cc ov-struct.cc ov-va-args.cc ov-colon.cc \
 	ov-bool-mat.cc ov-bool.cc ov-file.cc ov.cc ov-fcn.cc \
 	ov-builtin.cc ov-mapper.cc ov-usr-fcn.cc ov-typeinfo.cc
 
-PT_SRC := pt.cc pt-arg-list.cc pt-assign.cc pt-binop.cc \
+PT_SRC := pt.cc pt-arg-list.cc pt-assign.cc pt-binop.cc pt-check.cc \
 	pt-cmd.cc pt-colon.cc pt-const.cc pt-decl.cc pt-except.cc \
 	pt-exp.cc pt-id.cc pt-idx.cc pt-indir.cc pt-jump.cc \
 	pt-loop.cc pt-mat.cc pt-misc.cc pt-plot.cc pt-pr-code.cc \
 	pt-select.cc pt-stmt.cc pt-unop.cc
 
 SOURCES := BaseSLList.cc Map.cc SLList.cc SLStack.cc Stack.cc \
 	data.cc defaults.cc defun.cc dirfns.cc dynamic-ld.cc \
 	error.cc file-io.cc fn-cache.cc gripes.cc help.cc input.cc \
@@ -284,54 +284,43 @@ install-oct:
 	    $(INSTALL_PROGRAM) $$f $(octfiledir)/$$f; \
 	  done ; \
 	  $(srcdir)/mk-oct-links \
 	    $(octfiledir) $(addprefix $(srcdir)/, $(DLD_SRC)) ; \
 	fi
 .PHONY: install-oct
 
 install-lib:
-	$(top_srcdir)/mkinstalldirs $(libdir)
+	$(top_srcdir)/mkinstalldirs $(octlibdir)
 	for f in $(LIBS_TO_INSTALL); do \
-	  if [ -f $$f ]; then $(INSTALL_DATA) $$f $(libdir)/$$f; fi; \
+	  if [ -f $$f ]; then $(INSTALL_DATA) $$f $(octlibdir)/$$f; fi; \
 	done
 	for f in $(SH_LIBS_TO_INSTALL); do \
-	  if [ -f $$f ]; then $(INSTALL_PROGRAM) $$f $(libdir)/$$f; fi; \
+	  if [ -f $$f ]; then $(INSTALL_PROGRAM) $$f $(octlibdir)/$$f; fi; \
 	done
+	$(mk-libdir-link)
 .PHONY: install-lib
 
 install-inc:
 	$(top_srcdir)/mkinstalldirs $(octincludedir)
 	for f in $(INCLUDES) ; do \
 	  rm -f $(octincludedir)/$$f ; \
 	  $(INSTALL_DATA) $(srcdir)/$$f $(octincludedir)/$$f ; \
 	done
 	for f in defaults.h oct-conf.h oct-gperf.h ; do \
 	  rm -f $(octincludedir)/$$f ; \
 	  $(INSTALL_DATA) $$f $(octincludedir)/$$f ; \
 	done
-	tmp=`echo $(octincludedir) | sed 's|/*$$||'` ; \
-	dir=`echo $$tmp | sed 's|[^/]*$$||'` ; \
-	src=`echo $$tmp | sed 's|^.*/||'` ; \
-	dest=`echo $$src | sed 's|-$(version)$$||'` ; \
-	if [ "$$src" = "$$dest" ] ; then \
-	  true ; \
-	else \
-	  if [ -d $$dir/$$dest ] ; then \
-	    true ; \
-	  else \
-	    cd $$dir ; rm -f $$dest && $(LN_S) $$src $$dest ; \
-	  fi ; \
-	fi
+	$(mk-includedir-link)
 .PHONY: install-inc
 
 uninstall:
 	rm -f $(bindir)/octave$(EXE)
-	for f in $(LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
-	for f in $(SH_LIBS_TO_INSTALL); do rm -f $(libdir)/$$f; done
+	for f in $(LIBS_TO_INSTALL); do rm -f $(octlibdir)/$$f; done
+	for f in $(SH_LIBS_TO_INSTALL); do rm -f $(octlibdir)/$$f; done
 	for f in $(INCLUDES) defaults.h oct-conf.h; do \
 	  rm -f $(octincludedir)/$$f; \
 	done
 .PHONY: uninstall
 
 tags: $(SOURCES) $(DLD_SRC)
 	ctags $(SOURCES) $(DLD_SRC)
 
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -197,17 +197,17 @@ set_default_info_prog (void)
     }
   else
     Vinfo_prog = string (oct_info_prog);
 }
 
 static void
 set_default_editor (void)
 {
-  Veditor = "vi";
+  Veditor = "emacs";
 
   string env_editor = octave_env::getenv ("EDITOR");
 
   if (! env_editor.empty ())
     Veditor = env_editor;
 }
 
 static void
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -343,16 +343,17 @@ initialize_error_handlers ()
 // What happens on --traditional.
 
 static void
 maximum_braindamage (void)
 {
   bind_builtin_variable ("PS1", ">> ");
   bind_builtin_variable ("PS2", "");
   bind_builtin_variable ("beep_on_error", 1.0);
+  bind_builtin_variable ("default_eval_print_flag", 0.0);
   bind_builtin_variable ("default_save_format", "mat-binary");
   bind_builtin_variable ("define_all_return_values", 1.0);
   bind_builtin_variable ("do_fortran_indexing", 1.0);
   bind_builtin_variable ("empty_list_elements_ok", 1.0);
   bind_builtin_variable ("implicit_str_to_num_ok", 1.0);
   bind_builtin_variable ("ok_to_lose_imaginary_part", 1.0);
   bind_builtin_variable ("page_screen_output", 0.0);
   bind_builtin_variable ("prefer_column_vectors", 0.0);
diff --git a/src/ov-list.cc b/src/ov-list.cc
--- a/src/ov-list.cc
+++ b/src/ov-list.cc
@@ -125,18 +125,18 @@ bool
 octave_list::print_name_tag (ostream& os, const string& name) const
 {
   indent (os);
   os << name << " =";
   newline (os);
   return false;
 }
 
-DEFUN (make_list, args, ,
-  "make_list (ARGS)\n\
+DEFUN (list, args, ,
+  "list (ARGS)\n\
 \n\
 Create a new list from ARGS.")
 {
   return octave_value (args);
 }
 
 DEFUN (append, args, ,
   "append (LIST, ARGS)\n\
