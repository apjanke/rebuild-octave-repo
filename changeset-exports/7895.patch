# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1213997924 -7200
#      Fri Jun 20 23:38:44 2008 +0200
# Node ID f1a1f6dd7fac4a6d98932571657d19bbd7b3dc0a
# Parent  72c332d2db3c31950571999179026003bf16bc6e
avoid using gensub in genprops.awk

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-06-23  Jaroslav Hajek <highegg@gmail.com>
+
+	* genprops.awk (emit_source): Avoid gensub for portability.
+	(BEGIN): Ditto.
+
 2008-06-20  Jaroslav Hajek <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/regexp.cc (octregexp_list): Make "once" an output
 	argument.
 	(octregexp): Do not use cell arrays when "once" is requested.
 
 	* ov.cc (make_vector_dims): New function.
 	(vector_value, complex_vector_value, float_vector_value,
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -460,19 +460,26 @@ function emit_source ()
     printf ("property_list::pval_map_type\n%s::properties::factory_defaults (void)\n{\n",
             class_name) >> filename;
     printf ("  property_list::pval_map_type m;\n\n") >> filename;
 
     for (i = 1; i <= idx; i++)
     {
       dval = defval[i];
       if (type[i] == "radio_property" || type[i] == "color_property")
-        dval = gensub (/^.*\{(.*)\}.*$/, "\"\\1\"", "g", dval);
-      if (! dval)
-        dval = "octave_value ()";
+	{
+	  k = index (dval, "{");
+	  dval = substr (dval, k+1);
+	  l = index (dval, "}");
+	  if (k > 0 && l > 0)
+	    dval = "\"" + substr (dval, 1, l-1) +  "\"";
+	  else
+	    dval = "octave_value ()";
+	}
+
       printf ("  m[\"%s\"] = %s%s;\n", name[i], dval,
 		 (type[i] == "handle_property" ? ".as_octave_value ()" : "")) >> filename;
     }
 
     printf ("\n  return m;\n}\n\n") >> filename;
 
     ## go_name static field
 
@@ -485,17 +492,21 @@ BEGIN {
   filename = "graphics-props.cc";
   printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n");
   printf ("// DO NOT EDIT!  Generated automatically by genprops.awk.\n\n") > filename;
 }
 
 /BEGIN_PROPERTIES\(.*\)/ {
   gather = 1;
   idx = 0;
-  class_name = gensub (/^.*BEGIN_PROPERTIES\((.*)\)/, "\\1", "g");
+  str = $0;
+  k = index (str, "BEGIN_PROPERTIES(");
+  str = substr (str, k + 17);
+  l = index (str, ")");
+  class_name = substr (str, 1, l-1);
   next;
 }
 
 /BEGIN_PROPERTIES/ {
   gather = 1;
   idx = 0;
   class_name = "";
   next;
