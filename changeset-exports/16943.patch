# HG changeset patch
# User Carl Osterwisch <costerwisch@costerwisch-lt1>
# Date 1373421186 25200
#      Tue Jul 09 18:53:06 2013 -0700
# Node ID 0dab17e69a5556609e5399decbf2b82bfe2dbc77
# Parent  78a2f43bbc69c3b6e54688c96171fe83851c8c21
Implement line color and style rotation across multiple axes (bug #39344).

* scripts/plot/private/__next_line_color__.m: Get ColorOrder from gca rather
than using persistent variable.

* scripts/plot/private/__next_line_style__.m: Get LineStyleOrder from gca
rather than using persistent variable.

diff --git a/scripts/plot/private/__next_line_color__.m b/scripts/plot/private/__next_line_color__.m
--- a/scripts/plot/private/__next_line_color__.m
+++ b/scripts/plot/private/__next_line_color__.m
@@ -1,8 +1,9 @@
+## Copyright (C) 2013 Carl Osterwisch
 ## Copyright (C) 2007-2012 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
@@ -19,35 +20,38 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{rgb} =} __next_line_color__ (@var{reset})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Return the next line color in the rotation.
 
 ## Author: Carl Osterwisch
+## Author: jwe
 
 function rgb = __next_line_color__ (reset)
 
   persistent reset_colors = true;
 
-  if (nargin < 2)
-    if (nargin == 1)
-      % Indicates whether the next call will increment or not
-      reset_colors = reset;
-    else
-      % Find and return the next line color
-      ca = gca();
-      colorOrder = get(ca, "ColorOrder");
-      if reset_colors
-        color_index = 1;
-      else
-        % Executed when "hold all" is active
-        nChildren = length(get(ca, "Children"));
-        nColors = rows(colorOrder);
-        color_index = mod(nChildren, nColors) + 1;
-      endif
-      rgb = colorOrder(color_index,:);
-    endif
-  else
+  if (nargin > 1)
     print_usage ();
   endif
+
+  if (nargin == 1)
+    ## Indicates whether the next call will increment or not
+    reset_colors = reset;
+  else
+    ## Find and return the next line color
+    ca = gca ();
+    colorOrder = get (ca, "ColorOrder");
+    if (reset_colors)
+      color_index = 1;
+    else
+      ## Executed when "hold all" is active
+      nChildren = length (get (ca, "Children"));
+      nColors = rows (colorOrder);
+      color_index = mod (nChildren, nColors) + 1;
+    endif
+    rgb = colorOrder(color_index,:);
+  endif
+
 endfunction
+
diff --git a/scripts/plot/private/__next_line_style__.m b/scripts/plot/private/__next_line_style__.m
--- a/scripts/plot/private/__next_line_style__.m
+++ b/scripts/plot/private/__next_line_style__.m
@@ -23,37 +23,38 @@
 
 ## Return the next line style in the rotation.
 
 
 function [linestyle, marker] = __next_line_style__ (reset)
 
   persistent reset_style = true;
 
-  if (nargin < 2)
-    if (nargin == 1)
-      % Indicates whether the next call will increment or not
-      reset_style = reset;
-    else
-      % Find and return the next line style
-      ca = gca();
-      style_rotation = get (ca, "linestyleorder");
-      if (ischar (style_rotation))
-        style_rotation = strsplit (style_rotation, "|");
-      endif
-      nStyles = length (style_rotation);
-      if reset_style || (nStyles < 2)
-        style_index = 1;
-      else
-        % Executed when "hold all" is active
-        nChildren = length(get(ca, "Children"));
-        nColors = length(get(ca, "ColorOrder"));
-        style_index = mod(floor(nChildren/nColors), nStyles) + 1;
-      endif
-      options = __pltopt__ ("__next_line_style__",
-                            style_rotation (style_index));
-      linestyle = options.linestyle;
-      marker = options.marker;
-    endif
-  else
+  if (nargin > 1)
     print_usage ();
   endif
+
+  if (nargin == 1)
+    ## Indicates whether the next call will increment or not
+    reset_style = reset;
+  else
+    ## Find and return the next line style
+    ca = gca ();
+    style_rotation = get (ca, "linestyleorder");
+    if (ischar (style_rotation))
+      style_rotation = strsplit (style_rotation, "|");
+    endif
+    nStyles = length (style_rotation);
+    if (reset_style || (nStyles < 2))
+      style_index = 1;
+    else
+      ## Executed when "hold all" is active
+      nChildren = length (get (ca, "Children"));
+      nColors = length (get (ca, "ColorOrder"));
+      style_index = mod (floor (nChildren/nColors), nStyles) + 1;
+    endif
+    options = __pltopt__ ("__next_line_style__",
+                          style_rotation(style_index));
+    linestyle = options.linestyle;
+    marker = options.marker;
+  endif
+
 endfunction
