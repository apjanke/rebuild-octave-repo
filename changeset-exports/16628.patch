# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1367956333 14400
#      Tue May 07 15:52:13 2013 -0400
# Node ID a66c285729a66a2876c28b1ba81902aaae784d3e
# Parent  de91b1621260e81d66f6fa7bd4546f93f20a2b9e
use swapped points when getting selection text in Windows terminal

* QWinTerminalImpl.cpp (QConsolePrivagte::getSelection): Extract text
using swapped points, not original points.

diff --git a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
--- a/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
+++ b/libgui/qterminal/libqterminal/win32/QWinTerminalImpl.cpp
@@ -407,42 +407,42 @@ QString QConsolePrivate::getSelection (v
 {
   QString selection;
 
   QPoint begin = m_beginSelection;
   QPoint end = m_endSelection;
 
   maybeSwapPoints (begin, end);
 
-  if (m_beginSelection != m_endSelection)
+  if (begin != end)
     {
       CHAR_INFO* buf;
       COORD bufSize, bufCoord;
       SMALL_RECT bufRect;
       int nr;
 
-      nr = m_endSelection.y () - m_beginSelection.y () + 1;
+      nr = end.y () - begin.y () + 1;
       buf =  new CHAR_INFO[m_bufferSize.width () * nr];
       bufSize.X = m_bufferSize.width ();
       bufSize.Y = nr;
       bufCoord.X = 0;
       bufCoord.Y = 0;
 
       bufRect.Left = 0;
       bufRect.Right = m_bufferSize.width ();
-      bufRect.Top = m_beginSelection.y ();
-      bufRect.Bottom = m_endSelection.y ();
+      bufRect.Top = begin.y ();
+      bufRect.Bottom = end.y ();
 
       if (ReadConsoleOutput (m_stdOut, buf, bufSize, bufCoord, &bufRect))
         {
-          int start = m_beginSelection.x ();
-          int end = (nr - 1) * m_bufferSize.width () + m_endSelection.x ();
+          int start_pos = begin.x ();
+          int end_pos = (nr - 1) * m_bufferSize.width () + end.x ();
           int lastNonSpace = -1;
 
-          for (int i = start; i <= end; i++)
+          for (int i = start_pos; i <= end_pos; i++)
             {
               if (i && (i % m_bufferSize.width ()) == 0)
                 {
                   if (lastNonSpace >= 0)
                     selection.truncate (lastNonSpace);
                   selection.append ('\n');
                   lastNonSpace = selection.length ();
                 }
