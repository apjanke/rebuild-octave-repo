# HG changeset patch
# User Rik <rik@octave.org>
# Date 1444520760 25200
#      Sat Oct 10 16:46:00 2015 -0700
# Branch stable
# Node ID ffc6cdcd02c5dfb3b1c7d070e0e0c72ac4040248
# Parent  7890893a0e69752c867f0d325f68e9d11a6c26b1
Fix segfault when complex double matrix calls ZGETRF (bug #45577).

* CMatrix.cc (finverse, determinant, rcond, fsolve): Calculate norm of matrix
and if it is NaN, skip calling ZGETRF in LAPACK and set info to non-zero value
to signal an error.

diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -1126,21 +1126,24 @@ ComplexMatrix::finverse (MatrixType &mat
       lwork = (lwork <  2 *nc ? 2*nc : lwork);
       z.resize (dim_vector (lwork, 1));
       Complex *pz = z.fortran_vec ();
 
       info = 0;
 
       // Calculate the norm of the matrix, for later use.
       double anorm;
-      if (calc_cond)
-        anorm = retval.abs ().sum ().row (static_cast<octave_idx_type>(0))
-                .max ();
-
-      F77_XFCN (zgetrf, ZGETRF, (nc, nc, tmp_data, nr, pipvt, info));
+      //if (calc_cond)   // Must always calculate anorm for bug #45577 
+      anorm = retval.abs ().sum ().row (static_cast<octave_idx_type>(0)).max ();
+
+      // Work around bug #45577, LAPACK crashes Octave if norm is NaN
+      if (xisnan (anorm))
+        info = -1;
+      else
+        F77_XFCN (zgetrf, ZGETRF, (nc, nc, tmp_data, nr, pipvt, info));
 
       // Throw-away extra info LAPACK gives so as to not change output.
       rcon = 0.0;
       if (info != 0)
         info = -1;
       else if (calc_cond)
         {
           // Now calculate the condition number for non-singular matrix.
@@ -1693,19 +1696,24 @@ ComplexMatrix::determinant (MatrixType& 
 
           ComplexMatrix atmp = *this;
           Complex *tmp_data = atmp.fortran_vec ();
 
           info = 0;
 
           // Calculate the norm of the matrix, for later use.
           double anorm = 0;
-          if (calc_cond) anorm = xnorm (*this, 1);
-
-          F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
+          //if (calc_cond)   // Must always calculate anorm for bug #45577 
+          anorm = xnorm (*this, 1);
+
+          // Work around bug #45577, LAPACK crashes Octave if norm is NaN
+          if (xisnan (anorm))
+            info = -1;
+          else
+            F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
 
           // Throw-away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -1;
               retval = ComplexDET ();
             }
@@ -1886,17 +1894,21 @@ ComplexMatrix::rcond (MatrixType &mattyp
                 anorm = atmp.abs ().sum ().
                         row(static_cast<octave_idx_type>(0)).max ();
 
               Array<Complex> z (dim_vector (2 * nc, 1));
               Complex *pz = z.fortran_vec ();
               Array<double> rz (dim_vector (2 * nc, 1));
               double *prz = rz.fortran_vec ();
 
-              F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
+              // Work around bug #45577, LAPACK crashes Octave if norm is NaN
+              if (xisnan (anorm))
+                info = -1;
+              else
+                F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
 
               if (info != 0)
                 {
                   rcon = 0.0;
                   mattype.mark_as_rectangular ();
                 }
               else
                 {
@@ -2220,17 +2232,21 @@ ComplexMatrix::fsolve (MatrixType &matty
           Array<double> rz (dim_vector (2 * nc, 1));
           double *prz = rz.fortran_vec ();
 
           // Calculate the norm of the matrix, for later use.
           if (anorm < 0.)
             anorm = atmp.abs ().sum ().row (static_cast<octave_idx_type>(0))
                     .max ();
 
-          F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
+          // Work around bug #45577, LAPACK crashes Octave if norm is NaN
+          if (xisnan (anorm))
+            info = -2;
+          else
+            F77_XFCN (zgetrf, ZGETRF, (nr, nr, tmp_data, nr, pipvt, info));
 
           // Throw-away extra info LAPACK gives so as to not change output.
           rcon = 0.0;
           if (info != 0)
             {
               info = -2;
 
               if (sing_handler)
