# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1380831836 14400
#      Thu Oct 03 16:23:56 2013 -0400
# Node ID 9e8a9f043944cd12f990b3da40f55f50c619912e
# Parent  0946b0e06544478fc8706bea576d05e00c64a653
fix error in previous commit

* urlwrite.cc (ch_manager::make_curl_handle): New arg, OS.
(ch_manager::do_make_curl_handle): Likewise.  Pass OS to url_transfer
instead of unconditionally passing octave_stdout.

diff --git a/libinterp/corefcn/urlwrite.cc b/libinterp/corefcn/urlwrite.cc
--- a/libinterp/corefcn/urlwrite.cc
+++ b/libinterp/corefcn/urlwrite.cc
@@ -126,20 +126,21 @@ public:
 
   static url_transfer get_object (const curl_handle& h)
   {
     return instance_ok () ? instance->do_get_object (h) : url_transfer ();
   }
 
   static curl_handle make_curl_handle (const std::string& host,
                                        const std::string& user,
-                                       const std::string& passwd)
+                                       const std::string& passwd,
+                                       std::ostream& os)
   {
     return instance_ok ()
-      ? instance->do_make_curl_handle (host, user, passwd) : curl_handle ();
+      ? instance->do_make_curl_handle (host, user, passwd, os) : curl_handle ();
   }
 
   static Matrix handle_list (void)
   {
     return instance_ok () ? instance->do_handle_list () : Matrix ();
   }
 
 private:
@@ -176,21 +177,22 @@ private:
   {
     iterator p = (h.ok () ? handle_map.find (h) : handle_map.end ());
 
     return (p != handle_map.end ()) ? p->second : url_transfer ();
   }
 
   curl_handle do_make_curl_handle (const std::string& host,
                                    const std::string& user,
-                                   const std::string& passwd)
+                                   const std::string& passwd,
+                                   std::ostream& os)
   {
     curl_handle h = get_handle ();
 
-    url_transfer obj (host, user, passwd, octave_stdout);
+    url_transfer obj (host, user, passwd, os);
 
     if (! error_state)
       handle_map[h] = obj;
     else
       h = curl_handle ();
 
     return h;
   }
