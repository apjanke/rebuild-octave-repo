# HG changeset patch
# User Rik <rik@octave.org>
# Date 1354845923 28800
#      Thu Dec 06 18:05:23 2012 -0800
# Node ID ac0964f482aeb3ab332d383ae28b6f521085c8d1
# Parent  1a350ab31b55ba354d556e19008b402a7fd9e7f3
isa.m: Add "integer" class category for compatibility with Matlab.

* scripts/general/isa.m: Add "integer" class category for compatibility with
Matlab.

diff --git a/scripts/general/isa.m b/scripts/general/isa.m
--- a/scripts/general/isa.m
+++ b/scripts/general/isa.m
@@ -14,38 +14,47 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} isa (@var{obj}, @var{class})
 ## Return true if @var{obj} is an object from the class @var{class}.
+##
+## @var{class} may also be one of the following class categories: 
+##
+## @table @asis
+## @item "float"
+## Floating point value comprising classes "double" and "single".
+##
+## @item "integer"
+## Integer value comprising classes (u)int8, (u)int16, (u)int32, (u)int64.
+##
+## @item "numeric"
+## Numeric value comprising either a floating point or integer value.
+## @end table
 ## @seealso{class, typeinfo}
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 ## Adapted-by: jwe
 
 function retval = isa (obj, cname)
 
   if (nargin != 2)
     print_usage ();
   endif
 
-  persistent float_classes = {"double", "single"};
-
-  persistent fnum_classes = {"double", "single", ...
-                             "uint8", "uint16", "uint32", "uint64", ...
-                             "int8", "int16", "int32", "int64"};
-
   if (strcmp (cname, "float"))
-    retval = any (strcmp (class (obj), float_classes));
+    retval = isfloat (obj);
+  elseif (strcmp (cname, "integer"))
+    retval = isinteger (obj);
   elseif (strcmp (cname, "numeric"))
-    retval = any (strcmp (class (obj), fnum_classes));
+    retval = isnumeric (obj);
   else
     class_of_x = class (obj);
     retval = strcmp (class_of_x, cname);
     if (! retval && isobject (obj))
       retval = __isa_parent__ (obj, cname);
     endif
   endif
 
@@ -71,16 +80,19 @@ endfunction
 %!assert (isa (int8 (13), "numeric"), true)
 %!assert (isa (int16 (13), "numeric"), true)
 %!assert (isa (int32 (13), "numeric"), true)
 %!assert (isa (int64 (13), "numeric"), true)
 %!assert (isa (uint8 (13), "numeric"), true)
 %!assert (isa (uint16 (13), "numeric"), true)
 %!assert (isa (uint32 (13), "numeric"), true)
 %!assert (isa (uint64 (13), "numeric"), true)
+%!assert (isa (uint8 (13), "integer"), true)
+%!assert (isa (double (13), "integer"), false)
+%!assert (isa (single (13), "integer"), false)
 
 %!assert (isa (double (13), "double"))
 %!assert (isa (single (13), "single"))
 %!assert (isa (int8 (13), "int8"))
 %!assert (isa (int16 (13), "int16"))
 %!assert (isa (int32 (13), "int32"))
 %!assert (isa (int64 (13), "int64"))
 %!assert (isa (uint8 (13), "uint8"))
