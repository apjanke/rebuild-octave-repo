# HG changeset patch
# User Rik <rik@octave.org>
# Date 1462212830 25200
#      Mon May 02 11:13:50 2016 -0700
# Node ID 5b9868c2e212b3e01fb308c3656e01548ea67beb
# Parent  1b9a36a66b01cc969cb20d04bc2f6d710a56218a
maint: Octave coding convention cleanups.

* Figure.cc, QtHandlesUtils.cc, files-dock-widget.cc, find-files-dialog.cc,
debug.cc, ls-hdf5.h, oct-fstrm.h, oct-iostrm.h, oct-stdstrm.h, oct-stream.h,
pr-output.cc, sysdep.cc, zfstream.h, pt-cbinop.cc, f77-fcn.h, DASPK.cc,
DASSL.cc, cmd-hist.cc, glob-match.h:
Cuddle angle bracket '<' next to C++ cast operator.
Space between variable reference and variable name (int& a).
Space between bitwise operators and their operands (A & B).
Create typedef tree_expression_ptr_t to avoid "tree_expression *&a"
which is unclear.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -319,22 +319,22 @@ Figure::createFigureToolBarAndMenuBar (v
   win->setMenuBar (m_menuBar);
 
   QMenu* fileMenu = m_menuBar->addMenu (tr ("&File"));
   fileMenu->menuAction ()->setObjectName ("builtinMenu");
   fileMenu->addAction (tr ("&Save"), this, SLOT (fileSaveFigure (bool)));
   fileMenu->addAction (tr ("Save &As"), this, SLOT (fileSaveFigureAs (void)));
   fileMenu->addSeparator ();
   fileMenu->addAction (tr ("&Close Figure"), this,
-                       SLOT (fileCloseFigure (void)), Qt::CTRL|Qt::Key_W);
+                       SLOT (fileCloseFigure (void)), Qt::CTRL | Qt::Key_W);
 
   QMenu* editMenu = m_menuBar->addMenu (tr ("&Edit"));
   editMenu->menuAction ()->setObjectName ("builtinMenu");
   editMenu->addAction (tr ("Cop&y"), this, SLOT (editCopy (bool)),
-                       Qt::CTRL|Qt::Key_C);
+                       Qt::CTRL | Qt::Key_C);
   editMenu->addSeparator ();
   editMenu->addActions (m_mouseModeGroup->actions ());
 
   QMenu* helpMenu = m_menuBar->addMenu (tr ("&Help"));
   helpMenu->menuAction ()->setObjectName ("builtinMenu");
   helpMenu->addAction (tr ("&About QtHandles"), this,
                        SLOT (helpAboutQtHandles (void)));
   helpMenu->addAction (tr ("About &Qt"), qApp, SLOT (aboutQt (void)));
diff --git a/libgui/graphics/QtHandlesUtils.cc b/libgui/graphics/QtHandlesUtils.cc
--- a/libgui/graphics/QtHandlesUtils.cc
+++ b/libgui/graphics/QtHandlesUtils.cc
@@ -173,17 +173,17 @@ figureSelectionType (QMouseEvent* event,
 
       if (mods == Qt::NoModifier)
         {
           if (buttons == Qt::LeftButton)
             return std::string ("normal");
           else if (buttons == Qt::RightButton)
             return std::string ("alt");
 #if defined (Q_WS_WIN)
-          else if (buttons == (Qt::LeftButton|Qt::RightButton))
+          else if (buttons == (Qt::LeftButton | Qt::RightButton))
             return std::string ("extend");
 #elif defined (Q_WS_X11)
           else if (buttons == Qt::MidButton)
             return std::string ("extend");
 #endif
         }
       else if (buttons == Qt::LeftButton)
         {
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -673,17 +673,17 @@ files_dock_widget::contextmenu_delete (b
     {
       QModelIndex index = *it;
 
       QFileInfo info = _file_system_model->fileInfo (index);
 
       if (QMessageBox::question (this, tr ("Delete file/directory"),
                                  tr ("Are you sure you want to delete\n")
                                  + info.filePath (),
-                                 QMessageBox::Yes|QMessageBox::No)
+                                 QMessageBox::Yes | QMessageBox::No)
           == QMessageBox::Yes)
         {
           if (info.isDir ())
             {
               // see if direcory is empty
               QDir path (info.absoluteFilePath ());
               QList<QFileInfo> fileLst = path.entryInfoList (QDir::AllEntries |
                                          QDir::NoDotAndDotDot);
diff --git a/libgui/src/find-files-dialog.cc b/libgui/src/find-files-dialog.cc
--- a/libgui/src/find-files-dialog.cc
+++ b/libgui/src/find-files-dialog.cc
@@ -250,17 +250,17 @@ find_files_dialog::start_find ()
 
   find_files_model *m = static_cast<find_files_model *> (_file_list->model ());
   m->clear ();
 
   QDirIterator::IteratorFlags flags = QDirIterator::NoIteratorFlags;
   if (_recurse_dirs_check->isChecked ())
     flags |= QDirIterator::Subdirectories;
 
-  QDir::Filters filters = QDir::Dirs|QDir::NoDotAndDotDot|QDir::Files;
+  QDir::Filters filters = QDir::Dirs | QDir::NoDotAndDotDot | QDir::Files;
   if (! _name_case_check->isChecked ())
     filters |= QDir::CaseSensitive;
 
   QStringList nameFilters;
   nameFilters.append (_file_name_edit->text ());
 
   if (_dir_iterator) delete _dir_iterator;
 
diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -78,17 +78,17 @@ snarf_file (const std::string& fname)
   std::string retval;
 
   file_stat fs (fname);
 
   if (fs)
     {
       size_t sz = fs.size ();
 
-      std::ifstream file (fname.c_str (), std::ios::in|std::ios::binary);
+      std::ifstream file (fname.c_str (), std::ios::in | std::ios::binary);
 
       if (file)
         {
           std::string buf (sz+1, 0);
 
           file.read (&buf[0], sz+1);
 
           if (! file.eof ())
diff --git a/libinterp/corefcn/ls-hdf5.h b/libinterp/corefcn/ls-hdf5.h
--- a/libinterp/corefcn/ls-hdf5.h
+++ b/libinterp/corefcn/ls-hdf5.h
@@ -58,36 +58,36 @@ public:
 // so that we can pass them for stream parameters in the functions below.
 
 class hdf5_ifstream : public hdf5_fstreambase, public std::istream
 {
 public:
 
   hdf5_ifstream () : hdf5_fstreambase (), std::istream (0) { }
 
-  hdf5_ifstream (const char *name, int mode = std::ios::in|std::ios::binary,
+  hdf5_ifstream (const char *name, int mode = std::ios::in | std::ios::binary,
                  int prot = 0)
     : hdf5_fstreambase (name, mode, prot), std::istream (0) { }
 
-  void open (const char *name, int mode = std::ios::in|std::ios::binary,
+  void open (const char *name, int mode = std::ios::in | std::ios::binary,
              int prot = 0)
   { hdf5_fstreambase::open (name, mode, prot); }
 };
 
 class hdf5_ofstream : public hdf5_fstreambase, public std::ostream
 {
 public:
 
   hdf5_ofstream () : hdf5_fstreambase (), std::ostream (0) { }
 
-  hdf5_ofstream (const char *name, int mode = std::ios::out|std::ios::binary,
+  hdf5_ofstream (const char *name, int mode = std::ios::out | std::ios::binary,
                  int prot = 0)
     : hdf5_fstreambase (name, mode, prot), std::ostream (0) { }
 
-  void open (const char *name, int mode = std::ios::out|std::ios::binary,
+  void open (const char *name, int mode = std::ios::out | std::ios::binary,
              int prot = 0)
   { hdf5_fstreambase::open (name, mode, prot); }
 };
 
 // Callback data structure for passing data to hdf5_read_next_data, below.
 
 struct
 hdf5_callback_data
diff --git a/libinterp/corefcn/oct-fstrm.h b/libinterp/corefcn/oct-fstrm.h
--- a/libinterp/corefcn/oct-fstrm.h
+++ b/libinterp/corefcn/oct-fstrm.h
@@ -31,23 +31,23 @@ along with Octave; see the file COPYING.
 #include "oct-stream.h"
 
 class
 octave_fstream : public octave_base_stream
 {
 public:
 
   octave_fstream (const std::string& nm_arg,
-                  std::ios::openmode arg_md = std::ios::in|std::ios::out,
+                  std::ios::openmode arg_md = std::ios::in | std::ios::out,
                   oct_mach_info::float_format flt_fmt
                     = oct_mach_info::native_float_format ());
 
   static octave_stream
   create (const std::string& nm_arg,
-          std::ios::openmode arg_md = std::ios::in|std::ios::out,
+          std::ios::openmode arg_md = std::ios::in | std::ios::out,
           oct_mach_info::float_format flt_fmt
             = oct_mach_info::native_float_format ());
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (off_t offset, int origin);
 
   // Return current stream position.
diff --git a/libinterp/corefcn/oct-iostrm.h b/libinterp/corefcn/oct-iostrm.h
--- a/libinterp/corefcn/oct-iostrm.h
+++ b/libinterp/corefcn/oct-iostrm.h
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 #include "oct-stream.h"
 
 class
 octave_base_iostream : public octave_base_stream
 {
 public:
 
   octave_base_iostream (const std::string& n = "",
-                        std::ios::openmode m = std::ios::in|std::ios::out,
+                        std::ios::openmode m = std::ios::in | std::ios::out,
                         oct_mach_info::float_format ff
                           = oct_mach_info::native_float_format ())
     : octave_base_stream (m, ff), nm (n) { }
 
   // Position a stream at OFFSET relative to ORIGIN.
 
   int seek (off_t offset, int origin);
 
diff --git a/libinterp/corefcn/oct-stdstrm.h b/libinterp/corefcn/oct-stdstrm.h
--- a/libinterp/corefcn/oct-stdstrm.h
+++ b/libinterp/corefcn/oct-stdstrm.h
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 
 template <typename BUF_T, typename STREAM_T, typename FILE_T>
 class
 octave_tstdiostream : public octave_base_stream
 {
 public:
 
   octave_tstdiostream (const std::string& n, FILE_T f = 0, int fid = 0,
-                       std::ios::openmode m = std::ios::in|std::ios::out,
+                       std::ios::openmode m = std::ios::in | std::ios::out,
                        oct_mach_info::float_format ff
                          = oct_mach_info::native_float_format (),
                        typename BUF_T::close_fcn cf = BUF_T::file_close)
     : octave_base_stream (m, ff), nm (n), md (m),
       s (f ? new STREAM_T (f, cf) : 0), fnum (fid)
   { }
 
   // Position a stream at OFFSET relative to ORIGIN.
@@ -100,26 +100,26 @@ private:
 
 class
 octave_stdiostream
   : public octave_tstdiostream<c_file_ptr_buf, io_c_file_ptr_stream, FILE *>
 {
 public:
 
   octave_stdiostream (const std::string& n, FILE *f = 0,
-                      std::ios::openmode m = std::ios::in|std::ios::out,
+                      std::ios::openmode m = std::ios::in | std::ios::out,
                       oct_mach_info::float_format ff
                         = oct_mach_info::native_float_format (),
                       c_file_ptr_buf::close_fcn cf = c_file_ptr_buf::file_close)
     : octave_tstdiostream<c_file_ptr_buf, io_c_file_ptr_stream, FILE *>
        (n, f, f ? fileno (f) : -1, m, ff, cf) { }
 
   static octave_stream
   create (const std::string& n, FILE *f = 0,
-          std::ios::openmode m = std::ios::in|std::ios::out,
+          std::ios::openmode m = std::ios::in | std::ios::out,
           oct_mach_info::float_format ff
             = oct_mach_info::native_float_format (),
           c_file_ptr_buf::close_fcn cf = c_file_ptr_buf::file_close)
   {
     return octave_stream (new octave_stdiostream (n, f, m, ff, cf));
   }
 
 protected:
@@ -139,27 +139,27 @@ private:
 
 class
 octave_zstdiostream
   : public octave_tstdiostream<c_zfile_ptr_buf, io_c_zfile_ptr_stream, gzFile>
 {
 public:
 
   octave_zstdiostream (const std::string& n, gzFile f = 0, int fid = 0,
-                       std::ios::openmode m = std::ios::in|std::ios::out,
+                       std::ios::openmode m = std::ios::in | std::ios::out,
                        oct_mach_info::float_format ff
                          = oct_mach_info::native_float_format (),
                        c_zfile_ptr_buf::close_fcn cf
                          = c_zfile_ptr_buf::file_close)
     : octave_tstdiostream<c_zfile_ptr_buf, io_c_zfile_ptr_stream, gzFile>
        (n, f, fid, m, ff, cf) { }
 
   static octave_stream
   create (const std::string& n, gzFile f = 0, int fid = 0,
-          std::ios::openmode m = std::ios::in|std::ios::out,
+          std::ios::openmode m = std::ios::in | std::ios::out,
           oct_mach_info::float_format ff
             = oct_mach_info::native_float_format (),
           c_zfile_ptr_buf::close_fcn cf = c_zfile_ptr_buf::file_close)
   {
     return octave_stream (new octave_zstdiostream (n, f, fid, m, ff, cf));
   }
 
 protected:
diff --git a/libinterp/corefcn/oct-stream.h b/libinterp/corefcn/oct-stream.h
--- a/libinterp/corefcn/oct-stream.h
+++ b/libinterp/corefcn/oct-stream.h
@@ -57,17 +57,17 @@ class string_vector;
 class
 OCTINTERP_API
 octave_base_stream
 {
   friend class octave_stream;
 
 public:
 
-  octave_base_stream (std::ios::openmode arg_md = std::ios::in|std::ios::out,
+  octave_base_stream (std::ios::openmode arg_md = std::ios::in | std::ios::out,
                       oct_mach_info::float_format ff
                         = oct_mach_info::native_float_format ())
     : count (0), md (arg_md), flt_fmt (ff), fail (false), open_state (true),
       errmsg ()
   { }
 
   virtual ~octave_base_stream (void) { }
 
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -1657,17 +1657,17 @@ static void
 pr_scale_header (std::ostream& os, double scale)
 {
   if (Vfixed_point_format && ! print_g && scale != 1.0)
     {
       octave_preserve_stream_state stream_state (os);
 
       os << "  "
          << std::setw (8) << std::setprecision (1)
-         << std::setiosflags (std::ios::scientific|std::ios::left)
+         << std::setiosflags (std::ios::scientific | std::ios::left)
          << scale
          << " *\n";
 
       if (! Vcompact_format)
         os << "\n";
     }
 }
 
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -377,18 +377,18 @@ raw_mode (bool on, bool wait)
 
         save_term = s;
 //      ospeed = s.c_cflag & CBAUD;
 //      erase_char = s.c_cc[VERASE];
 //      kill_char = s.c_cc[VKILL];
 
         // Set the modes to the way we want them.
 
-        s.c_lflag &= ~(ICANON|ECHO|ECHOE|ECHOK|ECHONL);
-        s.c_oflag |=  (OPOST|ONLCR);
+        s.c_lflag &= ~(ICANON | ECHO | ECHOE | ECHOK | ECHONL);
+        s.c_oflag |=  (OPOST | ONLCR);
 #if defined (OCRNL)
         s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
         s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
         s.c_oflag &= ~(ONLRET);
@@ -420,18 +420,18 @@ raw_mode (bool on, bool wait)
 
         save_term = s;
 //      ospeed = s.c_cflag & CBAUD;
 //      erase_char = s.c_cc[VERASE];
 //      kill_char = s.c_cc[VKILL];
 
         // Set the modes to the way we want them.
 
-        s.c_lflag &= ~(ICANON|ECHO|ECHOE|ECHOK|ECHONL);
-        s.c_oflag |=  (OPOST|ONLCR);
+        s.c_lflag &= ~(ICANON | ECHO | ECHOE | ECHOK | ECHONL);
+        s.c_oflag |=  (OPOST | ONLCR);
 #if defined (OCRNL)
         s.c_oflag &= ~(OCRNL);
 #endif
 #if defined (ONOCR)
         s.c_oflag &= ~(ONOCR);
 #endif
 #if defined (ONLRET)
         s.c_oflag &= ~(ONLRET);
diff --git a/libinterp/corefcn/zfstream.h b/libinterp/corefcn/zfstream.h
--- a/libinterp/corefcn/zfstream.h
+++ b/libinterp/corefcn/zfstream.h
@@ -173,26 +173,26 @@ protected:
   /**
    *  @brief  Alters the stream positions.
    *
    *  Each derived class provides its own appropriate behavior.
    */
   virtual pos_type
   seekoff (off_type off, std::ios_base::seekdir way,
            std::ios_base::openmode mode =
-             std::ios_base::in|std::ios_base::out);
+             std::ios_base::in | std::ios_base::out);
 
   /**
    *  @brief  Alters the stream positions.
    *
    *  Each derived class provides its own appropriate behavior.
    */
   virtual pos_type
   seekpos (pos_type sp, std::ios_base::openmode mode =
-             std::ios_base::in|std::ios_base::out);
+             std::ios_base::in | std::ios_base::out);
 
   virtual int_type
   pbackfail (int_type c = traits_type::eof ());
 
 //
 // Some future enhancements
 //
 //  virtual int_type uflow();
diff --git a/libinterp/parse-tree/pt-cbinop.cc b/libinterp/parse-tree/pt-cbinop.cc
--- a/libinterp/parse-tree/pt-cbinop.cc
+++ b/libinterp/parse-tree/pt-cbinop.cc
@@ -27,16 +27,18 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "ovl.h"
 #include "ov.h"
 #include "pt-cbinop.h"
 #include "pt-bp.h"
 #include "pt-unop.h"
 #include "pt-walk.h"
 
+typedef tree_expression* tree_expression_ptr_t;
+
 octave_value_list
 tree_compound_binary_expression::rvalue (int nargout)
 {
   octave_value_list retval;
 
   if (nargout > 1)
     error ("binary operator '%s': invalid number of output arguments",
            oper ().c_str ());
@@ -66,17 +68,17 @@ tree_compound_binary_expression::rvalue1
 
   return retval;
 }
 
 // If a tree expression is a transpose or hermitian transpose, return
 // the argument and corresponding operator.
 
 static octave_value::unary_op
-strip_trans_herm (tree_expression *&exp)
+strip_trans_herm (tree_expression_ptr_t& exp)
 {
   if (exp->is_unary_expression ())
     {
       tree_unary_expression *uexp =
         dynamic_cast<tree_unary_expression *> (exp);
 
       octave_value::unary_op op = uexp->op_type ();
 
@@ -88,17 +90,17 @@ strip_trans_herm (tree_expression *&exp)
 
       return op;
     }
   else
     return octave_value::unknown_unary_op;
 }
 
 static octave_value::unary_op
-strip_not (tree_expression *&exp)
+strip_not (tree_expression_ptr_t& exp)
 {
   if (exp->is_unary_expression ())
     {
       tree_unary_expression *uexp =
         dynamic_cast<tree_unary_expression *> (exp);
 
       octave_value::unary_op op = uexp->op_type ();
 
@@ -112,17 +114,17 @@ strip_not (tree_expression *&exp)
   else
     return octave_value::unknown_unary_op;
 }
 
 // Possibly convert multiplication to trans_mul, mul_trans, herm_mul,
 // or mul_herm.
 
 static octave_value::compound_binary_op
-simplify_mul_op (tree_expression *&a, tree_expression *&b)
+simplify_mul_op (tree_expression_ptr_t& a, tree_expression_ptr_t& b)
 {
   octave_value::compound_binary_op retop
     = octave_value::unknown_compound_binary_op;
 
   octave_value::unary_op opa = strip_trans_herm (a);
 
   if (opa == octave_value::op_hermitian)
     retop = octave_value::op_herm_mul;
@@ -139,17 +141,17 @@ simplify_mul_op (tree_expression *&a, tr
     }
 
   return retop;
 }
 
 // Possibly convert left division to trans_ldiv or herm_ldiv.
 
 static octave_value::compound_binary_op
-simplify_ldiv_op (tree_expression *&a, tree_expression *&)
+simplify_ldiv_op (tree_expression_ptr_t& a, tree_expression_ptr_t&)
 {
   octave_value::compound_binary_op retop
     = octave_value::unknown_compound_binary_op;
 
   octave_value::unary_op opa = strip_trans_herm (a);
 
   if (opa == octave_value::op_hermitian)
     retop = octave_value::op_herm_ldiv;
@@ -157,17 +159,17 @@ simplify_ldiv_op (tree_expression *&a, t
     retop = octave_value::op_trans_ldiv;
 
   return retop;
 }
 
 // Possibly contract and/or with negation.
 
 static octave_value::compound_binary_op
-simplify_and_or_op (tree_expression *&a, tree_expression *&b,
+simplify_and_or_op (tree_expression_ptr_t& a, tree_expression_ptr_t& b,
                     octave_value::binary_op op)
 {
   octave_value::compound_binary_op retop
     = octave_value::unknown_compound_binary_op;
 
   octave_value::unary_op opa = strip_not (a);
 
   if (opa == octave_value::op_not)
diff --git a/liboctave/cruft/misc/f77-fcn.h b/liboctave/cruft/misc/f77-fcn.h
--- a/liboctave/cruft/misc/f77-fcn.h
+++ b/liboctave/cruft/misc/f77-fcn.h
@@ -151,17 +151,17 @@ not returning a value from a function de
 #define F77_CHAR_ARG_LEN_DECL
 
 /* Use these macros to write C-language functions that accept
    Fortran-style character strings.  */
 #define F77_CHAR_ARG_DEF(s, len) octave_cray_ftn_ch_dsc s
 #define F77_CONST_CHAR_ARG_DEF(s, len) octave_cray_ftn_ch_dsc s
 #define F77_CHAR_ARG_LEN_DEF(len)
 #define F77_CHAR_ARG_USE(s) s.ptr
-#define F77_CHAR_ARG_LEN_USE(s, len) (s.mask.len>>3)
+#define F77_CHAR_ARG_LEN_USE(s, len) (s.mask.len >> 3)
 
 /* Use this macro to declare the return type of a C-language function
    that is supposed to act like a Fortran subroutine.  */
 #define F77_RET_T int
 
 /* Use these macros to return from C-language functions that are
    supposed to act like Fortran subroutines.  F77_NORETURN is intended
    to be used as the last statement of such a function that has been
diff --git a/liboctave/numeric/DASPK.cc b/liboctave/numeric/DASPK.cc
--- a/liboctave/numeric/DASPK.cc
+++ b/liboctave/numeric/DASPK.cc
@@ -155,17 +155,17 @@ ddaspk_j (const double& time, const doub
 ColumnVector
 DASPK::do_integrate (double tout)
 {
   // FIXME: should handle all this option stuff just once
   // for each new problem.
 
   ColumnVector retval;
 
-  if (! initialized || restart || DAEFunc::reset|| DASPK_options::reset)
+  if (! initialized || restart || DAEFunc::reset || DASPK_options::reset)
     {
       integration_error = false;
 
       initialized = true;
 
       info.resize (dim_vector (20, 1));
 
       for (octave_idx_type i = 0; i < 20; i++)
diff --git a/liboctave/numeric/DASSL.cc b/liboctave/numeric/DASSL.cc
--- a/liboctave/numeric/DASSL.cc
+++ b/liboctave/numeric/DASSL.cc
@@ -126,17 +126,17 @@ ddassl_j (const double& time, const doub
   return 0;
 }
 
 ColumnVector
 DASSL::do_integrate (double tout)
 {
   ColumnVector retval;
 
-  if (! initialized || restart || DAEFunc::reset|| DASSL_options::reset)
+  if (! initialized || restart || DAEFunc::reset || DASSL_options::reset)
     {
       integration_error = false;
 
       initialized = true;
 
       info.resize (dim_vector (15, 1));
 
       for (octave_idx_type i = 0; i < 15; i++)
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -134,17 +134,17 @@ gnu_history::do_process_histcontrol (con
           if (end == std::string::npos)
             end = len;
 
           std::string tmp = control_arg.substr (beg, end-beg);
 
           if (tmp == "erasedups")
             history_control |= HC_ERASEDUPS;
           else if (tmp == "ignoreboth")
-            history_control |= HC_IGNDUPS|HC_IGNSPACE;
+            history_control |= (HC_IGNDUPS | HC_IGNSPACE);
           else if (tmp == "ignoredups")
             history_control |= HC_IGNDUPS;
           else if (tmp == "ignorespace")
             history_control |= HC_IGNSPACE;
           else
             (*current_liboctave_warning_with_id_handler)
               ("Octave:history-control",
                "unknown histcontrol directive %s", tmp.c_str ());
diff --git a/liboctave/util/glob-match.h b/liboctave/util/glob-match.h
--- a/liboctave/util/glob-match.h
+++ b/liboctave/util/glob-match.h
@@ -39,21 +39,21 @@ public:
   enum opts
   {
     pathname = 1,  // No wildcard can ever match '/'.
     noescape = 2,  // Backslashes don't quote special chars.
     period = 4     // Leading '.' is matched only explicitly.
   };
 
   glob_match (const std::string& p,
-              unsigned int xopts = pathname|noescape|period)
+              unsigned int xopts = pathname | noescape | period)
     : pat (p), fnmatch_flags (opts_to_fnmatch_flags (xopts)) { }
 
   glob_match (const string_vector& p = string_vector (),
-              unsigned int xopts = pathname|noescape|period)
+              unsigned int xopts = pathname | noescape | period)
     : pat (p), fnmatch_flags (opts_to_fnmatch_flags (xopts)) { }
 
   glob_match (const glob_match& gm)
     : pat (gm.pat), fnmatch_flags (gm.fnmatch_flags) { }
 
   glob_match& operator = (const glob_match& gm)
   {
     if (this != &gm)
