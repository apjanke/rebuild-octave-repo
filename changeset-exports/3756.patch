# HG changeset patch
# User jwe
# Date 976850085 0
#      Fri Dec 15 03:14:45 2000 +0000
# Node ID 41404c6f4e69046fc89a4911e1bfa9ffb388ae71
# Parent  4c230f72b1d22bcbcda2ce9b32e0cb79c6a46109
[project @ 2000-12-15 03:14:44 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2000-12-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pager.h (octave_pager_buf::diary_skip): New data member.
+	(octave_pager_buf::octave_pager_buf): Initialize it.
+	* pager.cc (octave_pager_buf::set_diary_skip): New function.
+	(octave_pager_stream::set_diary_skip): New function.
+	(octave_pager_buf::sync): Call flush_current_contents_to_diary
+	instead of octave_diary.write.
+	(octave_pager_buf::flush_current_contents_to_diary): Use
+	diary_skip, reset when done.
+	(open_diary_file): Call octave_stdout.set_diary_skip here.
+
 2000-12-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/minmax.cc (EMPTY_RETURN_CHECK): New macro.
 	(min, max): Use it.
 
 	* DLD-FUNCTIONS/minmax.cc (MINMAX_BODY): New macro.  If single arg
 	is empty, return empty matrix result and empty matrix for index.
 	(Fmin, Fmax): Use MINMAX_BODY, so we have consistent definition
diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -236,31 +236,39 @@ octave_pager_buf::sync (void)
 			       && ! more_than_a_screenful (buf, len)));
 
       if (len > 0)
 	{
 	  do_sync (buf, len, bypass_pager);
 
 	  seekoff (0, std::ios::beg);
 
-	  octave_diary.write (buf, len);
+	  flush_current_contents_to_diary ();
 	}
     }
 
   return 0;
 }
 
 void
 octave_pager_buf::flush_current_contents_to_diary (void)
 {
-  char *buf = eback ();
+  char *buf = eback () + diary_skip;
 
-  int len = pptr () - buf;
+  size_t len = pptr () - buf;
 
   octave_diary.write (buf, len);
+
+  diary_skip = 0;  
+}
+
+void
+octave_pager_buf::set_diary_skip (void)
+{
+  diary_skip = pptr () - eback ();
 }
 
 int
 octave_diary_buf::sync (void)
 {
   if (write_to_diary_file && external_diary_file)
     {
       int len = pptr () - eback ();
@@ -300,16 +308,23 @@ octave_pager_stream::stream (void)
 
 void
 octave_pager_stream::flush_current_contents_to_diary (void)
 {
   if (pb)
     pb->flush_current_contents_to_diary ();
 }
 
+void
+octave_pager_stream::set_diary_skip (void)
+{
+  if (pb)
+    pb->set_diary_skip ();
+}
+
 octave_diary_stream *octave_diary_stream::instance = 0;
 
 octave_diary_stream::octave_diary_stream (void) : std::ostream (), db (0)
 {
   db = new octave_diary_buf;
   rdbuf (db);
   setf (unitbuf);
 }
@@ -374,16 +389,21 @@ close_diary_file (void)
     }
 }
 
 static void
 open_diary_file (void)
 {
   close_diary_file ();
 
+  // If there is pending output in the pager buf, it should not go
+  // into the diary file.
+ 
+  octave_stdout.set_diary_skip ();
+
   external_diary_file.open (diary_file.c_str (), std::ios::app);
 
   if (! external_diary_file)
     error ("diary: can't open diary file `%s'", diary_file.c_str ());
 }
 
 DEFUN_TEXT (diary, args, ,
   "-*- texinfo -*-\n\
diff --git a/src/pager.h b/src/pager.h
--- a/src/pager.h
+++ b/src/pager.h
@@ -31,38 +31,47 @@ Software Foundation, 59 Temple Place - S
 #include <sys/types.h>
 #endif
 
 class
 octave_pager_buf : public std::strstreambuf
 {
 public:
 
-  octave_pager_buf (int size = 0) : std::strstreambuf (size) { }
+  octave_pager_buf (int size = 0)
+    : std::strstreambuf (size), diary_skip (0) { }
 
   void flush_current_contents_to_diary (void);
 
+  void set_diary_skip (void);
+
 protected:
 
   int sync (void);
+
+private:
+
+  size_t diary_skip;
 };
 
 class
 octave_pager_stream : public std::ostream
 {
 protected:
 
   octave_pager_stream (void);
 
 public:
 
   ~octave_pager_stream (void);
 
   void flush_current_contents_to_diary (void);
 
+  void set_diary_skip (void);
+
   static octave_pager_stream& stream (void);
 
 private:
 
   static octave_pager_stream *instance;
 
   octave_pager_buf *pb;
 
