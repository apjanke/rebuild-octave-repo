# HG changeset patch
# User Rafael Laboissiere <rafael@laboissiere.net>
# Date 1451386276 -3600
#      Tue Dec 29 11:51:16 2015 +0100
# Branch stable
# Node ID f7e416862e909e83db265ccb5ddc518cf6908a12
# Parent  8281e37a56315ed47623e9abb5ddad40a3236ac9
doc: fix spelling of "occurred".

* etc/OLD-ChangeLogs/scripts-ChangeLog, libinterp/corefcn/error.cc,
libinterp/corefcn/urlwrite.cc, libinterp/octave-value/ov-oncleanup.cc,
liboctave/cruft/dassl/ddastp.f, liboctave/cruft/odepack/sstode.f,
liboctave/cruft/odepack/stode.f, liboctave/util/oct-inttypes.cc,
scripts/gui/errordlg.m, scripts/gui/warndlg.m: fix spelling of "occurred"

diff --git a/etc/OLD-ChangeLogs/scripts-ChangeLog b/etc/OLD-ChangeLogs/scripts-ChangeLog
--- a/etc/OLD-ChangeLogs/scripts-ChangeLog
+++ b/etc/OLD-ChangeLogs/scripts-ChangeLog
@@ -5563,17 +5563,17 @@ 2009-03-19  Jaroslav Hajek  <highegg@gma
 	semicolon.
 
 2009-03-17  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/__fdjac__.m: Pass in fvec to save one evaluation.
 	* optimization/fsolve.m: Avoid redundant reevaluation when using
 	FD jacobians. Document how it can be done with user jacobians.  Make
 	first iteration special and call outputfcn after it. Skip updates
-	unless two successful iterations have occured.
+	unless two successful iterations have occurred.
 	* optimization/__dogleg__.m: Add missing alpha in the zero-gradient
 	case.
 	* optimization/fsolve.m: Remove autodg (not used), simplify.
 
 2009-03-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* statistics/base/var.m: a -> x.
 
diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -81,17 +81,17 @@ static std::string Vlast_error_message;
 static std::string Vlast_warning_message;
 
 // The last warning message id.
 static std::string Vlast_warning_id;
 
 // The last error message id.
 static std::string Vlast_error_id;
 
-// The last file in which an error occured
+// The last file in which an error occurred
 static octave_map Vlast_error_stack;
 
 // Current error state.
 //
 // Valid values:
 //
 //   -2: an error has occurred, but don't print any messages.
 //   -1: an error has occurred, we are printing a traceback
diff --git a/libinterp/corefcn/urlwrite.cc b/libinterp/corefcn/urlwrite.cc
--- a/libinterp/corefcn/urlwrite.cc
+++ b/libinterp/corefcn/urlwrite.cc
@@ -558,17 +558,17 @@ s = urlread (\"http://www.google.com/sea
   url_transfer curl = url_transfer (url, buf);
 
   if (curl.is_valid ())
     {
       curl.http_action (param, method);
 
       if (nargout > 0)
         {
-          // Return empty string if no error occured.
+          // Return empty string if no error occurred.
           retval(2) = curl.good () ? "" : curl.lasterror ();
           retval(1) = curl.good ();
           retval(0) = buf.str ();
         }
 
       if (nargout < 2 && ! curl.good ())
         error ("urlread: %s", curl.lasterror().c_str());
     }
diff --git a/libinterp/octave-value/ov-oncleanup.cc b/libinterp/octave-value/ov-oncleanup.cc
--- a/libinterp/octave-value/ov-oncleanup.cc
+++ b/libinterp/octave-value/ov-oncleanup.cc
@@ -85,17 +85,17 @@ octave_oncleanup::~octave_oncleanup (voi
   try
     {
       // Run the actual code.
       fcn.do_multi_index_op (0, octave_value_list ());
     }
   catch (octave_interrupt_exception)
     {
       // Swallow the interrupt.
-      warning ("onCleanup: interrupt occured in cleanup action");
+      warning ("onCleanup: interrupt occurred in cleanup action");
     }
   catch (...) // Yes, the black hole. We're in a d-tor.
     {
       // This shouldn't happen, in theory.
       error ("onCleanup: internal error: unhandled exception in cleanup action");
     }
 
   // FIXME: can this happen now?
diff --git a/liboctave/cruft/dassl/ddastp.f b/liboctave/cruft/dassl/ddastp.f
--- a/liboctave/cruft/dassl/ddastp.f
+++ b/liboctave/cruft/dassl/ddastp.f
@@ -538,17 +538,17 @@ C     THE SAME STEP, RETURN WITH AN ERRO
       IF (NSF .LT. 3 .AND. ABS(H) .GE. HMIN) GO TO 690
       IDID=-8
       GO TO 675
 C
 C
 C     THE NEWTON ITERATION FAILED TO CONVERGE FOR A REASON
 C     OTHER THAN A SINGULAR ITERATION MATRIX.  IF IRES = -2, THEN
 C     RETURN.  OTHERWISE, REDUCE THE STEPSIZE AND TRY AGAIN, UNLESS
-C     TOO MANY FAILURES HAVE OCCURED.
+C     TOO MANY FAILURES HAVE OCCURRED.
 650   CONTINUE
       IF (IRES .GT. -2) GO TO 655
       IDID = -11
       GO TO 675
 655   NCF = NCF + 1
       R = 0.25D0
       H = H*R
       IF (NCF .LT. 10 .AND. ABS(H) .GE. HMIN) GO TO 690
diff --git a/liboctave/cruft/odepack/sstode.f b/liboctave/cruft/odepack/sstode.f
--- a/liboctave/cruft/odepack/sstode.f
+++ b/liboctave/cruft/odepack/sstode.f
@@ -446,17 +446,17 @@ C In any case H is reset according to RH
 C Then exit from 690 if the step was OK, or redo the step otherwise.
 C-----------------------------------------------------------------------
       IF (NEWQ .EQ. NQ) GO TO 170
  630  NQ = NEWQ
       L = NQ + 1
       IRET = 2
       GO TO 150
 C-----------------------------------------------------------------------
-C Control reaches this section if 3 or more failures have occured.
+C Control reaches this section if 3 or more failures have occurred.
 C If 10 failures have occurred, exit with KFLAG = -1.
 C It is assumed that the derivatives that have accumulated in the
 C YH array have errors of the wrong order.  Hence the first
 C derivative is recomputed, and the order is set to 1.  Then
 C H is reduced by a factor of 10, and the step is retried,
 C until it succeeds or H reaches HMIN.
 C-----------------------------------------------------------------------
  640  IF (KFLAG .EQ. -10) GO TO 660
diff --git a/liboctave/cruft/odepack/stode.f b/liboctave/cruft/odepack/stode.f
--- a/liboctave/cruft/odepack/stode.f
+++ b/liboctave/cruft/odepack/stode.f
@@ -430,17 +430,17 @@ C IN ANY CASE H IS RESET ACCORDING TO RH
 C THEN EXIT FROM 690 IF THE STEP WAS OK, OR REDO THE STEP OTHERWISE.
 C-----------------------------------------------------------------------
       IF (NEWQ .EQ. NQ) GO TO 170
  630  NQ = NEWQ
       L = NQ + 1
       IRET = 2
       GO TO 150
 C-----------------------------------------------------------------------
-C CONTROL REACHES THIS SECTION IF 3 OR MORE FAILURES HAVE OCCURED.
+C CONTROL REACHES THIS SECTION IF 3 OR MORE FAILURES HAVE OCCURRED.
 C IF 10 FAILURES HAVE OCCURRED, EXIT WITH KFLAG = -1.
 C IT IS ASSUMED THAT THE DERIVATIVES THAT HAVE ACCUMULATED IN THE
 C YH ARRAY HAVE ERRORS OF THE WRONG ORDER.  HENCE THE FIRST
 C DERIVATIVE IS RECOMPUTED, AND THE ORDER IS SET TO 1.  THEN
 C H IS REDUCED BY A FACTOR OF 10, AND THE STEP IS RETRIED,
 C UNTIL IT SUCCEEDS OR H REACHES HMIN.
 C-----------------------------------------------------------------------
  640  IF (KFLAG .EQ. -10) GO TO 660
diff --git a/liboctave/util/oct-inttypes.cc b/liboctave/util/oct-inttypes.cc
--- a/liboctave/util/oct-inttypes.cc
+++ b/liboctave/util/oct-inttypes.cc
@@ -196,17 +196,17 @@ octave_int_cmp_op::emulate_mop (uint64_t
   static const double xxup = std::numeric_limits<uint64_t>::max ();
   // This converts to the nearest double. Unless there's an equality, the
   // result is clear.
   double xx = x;
   if (xx != y)
     return xop::op (xx, y);
   else
     {
-      // If equality occured we compare as integers.
+      // If equality occurred we compare as integers.
       if (xx == xxup)
         return xop::gtval;
       else
         return xop::op (x, static_cast<uint64_t> (xx));
     }
 }
 
 template <class xop>
@@ -217,17 +217,17 @@ octave_int_cmp_op::emulate_mop (int64_t 
   static const double xxlo = std::numeric_limits<int64_t>::min ();
   // This converts to the nearest double. Unless there's an equality, the
   // result is clear.
   double xx = x;
   if (xx != y)
     return xop::op (xx, y);
   else
     {
-      // If equality occured we compare as integers.
+      // If equality occurred we compare as integers.
       if (xx == xxup)
         return xop::gtval;
       else if (xx == xxlo)
         return xop::ltval;
       else
         return xop::op (x, static_cast<int64_t> (xx));
     }
 
diff --git a/scripts/gui/errordlg.m b/scripts/gui/errordlg.m
--- a/scripts/gui/errordlg.m
+++ b/scripts/gui/errordlg.m
@@ -44,14 +44,14 @@ function retval = errordlg (msg, title =
 
   retval = message_dialog ("errordlg", msg, title, "error", varargin{:});
 
 endfunction
 
 
 %!demo
 %! disp ('- test errordlg with prompt only.');
-%! errordlg ('Oops, an expected error occured');
+%! errordlg ('Oops, an expected error occurred');
 
 %!demo
 %! disp ('- test errordlg with prompt and caption.');
 %! errordlg ('Oops another error','This is a very long and informative caption');
 
diff --git a/scripts/gui/warndlg.m b/scripts/gui/warndlg.m
--- a/scripts/gui/warndlg.m
+++ b/scripts/gui/warndlg.m
@@ -44,14 +44,14 @@ function retval = warndlg (msg, title = 
 
   retval = message_dialog ("warndlg", msg, title, "warn", varargin{:});
 
 endfunction
 
 
 %!demo
 %! disp ('- test warndlg with prompt only.');
-%! warndlg ('Oh, a warning occured');
+%! warndlg ('Oh, a warning occurred');
 
 %!demo
 %! disp ('- test warndlg with prompt and caption.');
 %! warndlg ('Oh, No...','This is the last Warning');
 
