# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1293009361 18000
#      Wed Dec 22 04:16:01 2010 -0500
# Node ID ed827ffa5a4316b38d50db2053e48fecb8d0be15
# Parent  a7e73f903ea683d8bd722865e130818f74fce5ba
optimset, optimget, __all_opts__: consistently use lower case for storing and searching options

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2010-12-22  John W. Eaton  <jwe@octave.org>
+
+	* optimization/optimset.m, optimization/optimget.m,
+	optimization/__all_opts__.m: Consistently use lower case for
+	storing and searching option names.
+
 2010-12-22  John W. Eaton  <jwe@octave.org>
 
 	* statistics/base/skewness.m: Make returned value have the same
 	class as the input.
 
 2010-12-21  John W. Eaton  <jwe@octave.org>
 
 	* time/datevec.m: Style fixes.
diff --git a/scripts/optimization/optimget.m b/scripts/optimization/optimget.m
--- a/scripts/optimization/optimget.m
+++ b/scripts/optimization/optimget.m
@@ -28,17 +28,17 @@
 
 function retval = optimget (options, parname, default)
 
   if (nargin < 2 || nargin > 4 || ! isstruct (options) || ! ischar (parname))
     print_usage ();
   endif
 
   opts = __all_opts__ ();
-  idx = lookup (toupper(opts), toupper(parname), "m");
+  idx = lookup (tolower (opts), tolower (parname), "m");
 
   if (idx)
     parname = opts{idx};
   else
     warning ("unrecognized option: %s", parname);
   endif
   if (isfield (options, parname))
     retval = options.(parname);
diff --git a/scripts/optimization/optimset.m b/scripts/optimization/optimset.m
--- a/scripts/optimization/optimset.m
+++ b/scripts/optimization/optimset.m
@@ -42,33 +42,33 @@ function retval = optimset (varargin)
       ## Return empty structure.
       ## We're incompatible with Matlab at this point.
       retval = struct ();
     endif
   elseif (nargs == 1 && ischar (varargin{1}))
     ## Return defaults for named function.
     fcn = varargin{1};
     try
-      retval = feval (fcn, 'defaults');
+      retval = feval (fcn, "defaults");
     catch
       error ("optimset: no defaults for function `%s'", fcn);
     end_try_catch
   elseif (nargs == 2 && isstruct (varargin{1}) && isstruct (varargin{2}))
     ## Set slots in old from nonempties in new.  Should we be checking
     ## to ensure that the field names are expected?
     old = varargin{1};
     new = varargin{2};
     fnames = fieldnames (old);
     ## skip validation if we're in the internal query
     validation = ! isempty (opts);
-    uopts = toupper(opts);
+    lopts = tolower (opts);
     for [val, key] = new
       if (validation)
         ## Case insensitive lookup in all options.
-        i = lookup (uopts, toupper(key), "i");
+        i = lookup (lopts, tolower (key), "i");
         ## Validate option.
         if (i > 0 && strcmpi (opts{i}, key))
           ## Use correct case.
           key = opts{i};
         else
           warning ("unrecognized option: %s", key);
         endif
       endif
