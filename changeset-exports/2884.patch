# HG changeset patch
# User jwe
# Date 861918880 0
#      Thu Apr 24 21:54:40 1997 +0000
# Node ID d500989072ebfa9e669f905a708a15a2851f5ba4
# Parent  0b3954110c77ec60ce6e96bc83d1d97eb5fe0dd8
[project @ 1997-04-24 21:54:40 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 Thu Apr 24 03:58:16 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* parse.y (magic_colon): New nonterminal.
+	(arg_list): Simplify using magic_colon.
+
 	* lex.h (class lexical_feedback): Delete maybe_screwed field.
 	New field, parsed_function name.
 	* lex.l (lexical_feedback::init): Initialize it.
 	(handle_identifier): Don't return SCREW.  Handle switching
 	symbol table context properly for `function f ()' vs `function x ='.
 	(is_keyword): If looking at function keyword, don't set current
 	symbol table to point to the local table.
 	* parse.y (recover_from_parsing_function): New function.
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -336,16 +336,17 @@ static void set_stmt_print_flag (tree_st
 %token ELLIPSIS
 %token ALL_VA_ARGS
 %token END_OF_INPUT
 %token USING TITLE WITH COLON OPEN_BRACE CLOSE_BRACE CLEAR
 
 // Nonterminals we construct.
 %type <sep_type> sep_no_nl opt_sep_no_nl sep opt_sep
 %type <tree_type> input
+%type <tree_constant_type> magic_colon
 %type <tree_matrix_type> rows rows1
 %type <tree_matrix_row_type> matrix_row matrix_row1
 %type <tree_expression_type> expression simple_expr simple_expr1
 %type <tree_expression_type> ans_expression title matrix
 %type <tree_identifier_type> identifier
 %type <tree_indirect_ref_type> indirect_ref indirect_ref1
 %type <tree_function_type> func_def1 func_def2 func_def3
 %type <tree_index_expression_type> variable word_list_cmd
@@ -1117,35 +1118,36 @@ param_list1	: param_list_beg identifier
 
 identifier	: NAME
 		  {
 		    $$ = new tree_identifier
 		      ($1->sym_rec (), $1->line (), $1->column ());
 		  }
 		;
 
-arg_list	: ':'
+magic_colon	: ':'
 		  {
 		    octave_value tmp (octave_value::magic_colon_t);
-		    tree_constant *colon = new tree_constant (tmp);
-		    $$ = new tree_argument_list (colon);
+		    $$ = new tree_constant (tmp);
 		  }
+		;
+
+arg_list	: magic_colon
+		  { $$ = new tree_argument_list (colon); }
 		| expression
 		  { $$ = new tree_argument_list ($1); }
 		| ALL_VA_ARGS
 		  {
 		    octave_value tmp (octave_value::all_va_args_t);
 		    tree_constant *all_va_args = new tree_constant (tmp);
 		    $$ = new tree_argument_list (all_va_args);
 		  }
-		| arg_list ',' ':'
+		| arg_list ',' magic_colon
 		  {
-		    octave_value tmp (octave_value::magic_colon_t);
-		    tree_constant *colon = new tree_constant (tmp);
-		    $1->append (colon);
+		    $1->append ($3);
 		    $$ = $1;
 		  }
 		| arg_list ',' expression
 		  {
 		    $1->append ($3);
 		    $$ = $1;
 		  }
 		| arg_list ',' ALL_VA_ARGS
