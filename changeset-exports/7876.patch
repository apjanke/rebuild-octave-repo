# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1212779052 14400
#      Fri Jun 06 15:04:12 2008 -0400
# Node ID 8447a5024650ca44c7b28feae41a1ebbccdb9244
# Parent  bff8dbc1be117b8e3d770355c038dd49313ff9a1
clear subfunctions when clearing parent function

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,23 @@
 2008-06-06  John W. Eaton  <jwe@octave.org>
 
+	* ov.h (octave_value::erase_subfunctions):
+	New function.
+	* ov-base.h (octave_base_value::erase_subfunctions):
+	New virtual function.
+	* ov-usr-fcn.h (octave_user_function::erase_subfunctions):
+	New function.
+	* symtab.h (symbol_table::fcn_info::::erase_subfunction,
+	symbol_table::fcn_info::fcn_info_rep::erase_subfunction,
+	symbol_table::erase_subfunctions_in_scope):
+	New functions.
+	(symbol_table::fcn_info::fcn_info_rep::clear_user_function):
+	Erase subfunctions here.
+
 	* variables.cc (Fmlock): Doc fix.
 
 2008-06-05  John W. Eaton  <jwe@octave.org>
 
 	* gl-render.cc (opengl_renderer::draw): Correctly avoid shadow
 	warnings from gcc for xmin, xmax, ymin, ymax, zmin, and zmax.
 
 	* graphics/ChangeLog, graphics/Makefile.in, graphics/Makerules.in,
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -305,16 +305,18 @@ public:
   virtual bool is_user_code (void) const { return false; }
 
   virtual bool is_builtin_function (void) const { return false; }
 
   virtual bool is_dld_function (void) const { return false; }
 
   virtual bool is_mex_function (void) const { return false; }
 
+  virtual void erase_subfunctions (void) { }
+
   virtual short int short_value (bool = false, bool = false) const;
 
   virtual unsigned short int ushort_value (bool = false, bool = false) const;
 
   virtual int int_value (bool = false, bool = false) const;
 
   virtual unsigned int uint_value (bool = false, bool = false) const;
 
diff --git a/src/ov-usr-fcn.h b/src/ov-usr-fcn.h
--- a/src/ov-usr-fcn.h
+++ b/src/ov-usr-fcn.h
@@ -220,16 +220,21 @@ public:
   octave_time time_checked (void) const { return t_checked; }
 
   void mark_as_system_fcn_file (void);
 
   bool is_system_fcn_file (void) const { return system_fcn_file; }
 
   bool is_user_function (void) const { return true; }
 
+  void erase_subfunctions (void)
+    {
+      symbol_table::erase_subfunctions_in_scope (local_scope);
+    }
+
   bool takes_varargs (void) const;
 
   bool takes_var_return (void) const;
 
   void lock_subfunctions (void);
 
   void unlock_subfunctions (void);
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -608,16 +608,18 @@ public:
     { return rep->is_builtin_function (); }
 
   bool is_dld_function (void) const
     { return rep->is_dld_function (); }
 
   bool is_mex_function (void) const
     { return rep->is_mex_function (); }
 
+  void erase_subfunctions (void) { rep->erase_subfunctions (); }
+
   // Values.
 
   octave_value eval (void) { return *this; }
 
   short int
   short_value (bool req_int = false, bool frc_str_conv = false) const
     { return rep->short_value (req_int, frc_str_conv); }
 
diff --git a/src/symtab.h b/src/symtab.h
--- a/src/symtab.h
+++ b/src/symtab.h
@@ -563,16 +563,24 @@ public:
       {
 	scope_val_const_iterator p = subfunctions.find (scope);
 
 	return p == subfunctions.end ()
 	  ? std::pair<std::string, octave_value> ()
 	  : std::pair<std::string, octave_value> (name, p->second);
       }	     
 
+      void erase_subfunction (scope_id scope)
+      {
+	scope_val_iterator p = subfunctions.find (scope);
+
+	if (p != subfunctions.end ())
+	  subfunctions.erase (p);
+      }
+
       void install_cmdline_function (const octave_value& f)
       {
 	cmdline_function = f;
       }
 
       void install_subfunction (const octave_value& f, scope_id scope)
       {
 	subfunctions[scope] = f;
@@ -615,17 +623,21 @@ public:
 	  autoload_function = octave_value ();
       }
 
       // FIXME -- should this also clear the cmdline and other "user
       // defined" functions?
       void clear_user_function (void)
       {
 	if (! function_on_path.islocked ())
-	  function_on_path = octave_value ();
+	  {
+	    function_on_path.erase_subfunctions ();
+
+	    function_on_path = octave_value ();
+	  }
       }
 
       void clear_mex_function (void)
       {
 	if (function_on_path.is_mex_function ())
 	  clear_user_function ();
       }
 
@@ -774,16 +786,21 @@ public:
     }
 
     std::pair<std::string, octave_value>
     subfunction_defined_in_scope (scope_id scope = xcurrent_scope) const
     {
       return rep->subfunction_defined_in_scope (scope);
     }	     
 
+    void erase_subfunction (scope_id scope)
+    {
+      rep->erase_subfunction (scope);
+    }
+
     void install_cmdline_function (const octave_value& f)
     {
       rep->install_cmdline_function (f);
     }
 
     void install_subfunction (const octave_value& f, scope_id scope)
     {
       rep->install_subfunction (f, scope);
@@ -954,16 +971,23 @@ public:
 	delete p->second;
 
 	all_instances.erase (p);
 
 	free_scope (scope);
       }
   }
 
+  static void erase_subfunctions_in_scope (scope_id scope)
+  {
+    for (fcn_table_iterator q = fcn_table.begin ();
+	 q != fcn_table.end (); q++)
+      q->second.erase_subfunction (scope);
+  }
+
   static scope_id dup_scope (scope_id scope)
   {
     scope_id retval = -1;
 
     symbol_table *inst = get_instance (scope);
 
     if (inst)
       {
