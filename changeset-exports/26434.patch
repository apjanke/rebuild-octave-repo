# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546643580 28800
#      Fri Jan 04 15:13:00 2019 -0800
# Branch stable
# Node ID fad593da4b5733c2303c56de70f30fd90bd88f42
# Parent  58aa6d0694c21a5cbddb9dd0ab4c21332ad292dc
variables.cc: Fix static analyzer detected issues (bug #55347).

* variables.cc (extract_function): Declare and assign *retval in one statement.
* variables.cc (Fclear): Call do_clear_variables() with the correct 4th
parameter when no arguments to clear() are given.

diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -117,19 +117,17 @@ is_valid_function (const octave_value& a
   return ans;
 }
 
 octave_function *
 extract_function (const octave_value& arg, const std::string& warn_for,
                   const std::string& fname, const std::string& header,
                   const std::string& trailer)
 {
-  octave_function *retval = nullptr;
-
-  retval = is_valid_function (arg, warn_for, 0);
+  octave_function *retval = is_valid_function (arg, warn_for, 0);
 
   if (! retval)
     {
       std::string s = arg.xstring_value ("%s: argument must be a string",
                                          warn_for.c_str ());
 
       std::string cmd = header;
       cmd.append (s);
@@ -1267,17 +1265,17 @@ Executing @code{clear foo} a second time
   octave::symbol_table& symtab = interp.get_symbol_table ();
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("clear");
 
   if (argc == 1)
     {
-      do_clear_variables (symtab, argv, argc, true);
+      do_clear_variables (symtab, argv, argc, argc);
 
       octave_link::clear_workspace ();
     }
   else
     {
       int idx = 0;
 
       bool clear_all = false;
