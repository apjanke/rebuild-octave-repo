# HG changeset patch
# User jwe
# Date 1197328393 0
#      Mon Dec 10 23:13:13 2007 +0000
# Node ID a1fdd4dabefba2ca3d1fdfba475e69b6f768cb16
# Parent  30100a15625cc784a539dbda6fed30681f34b1f3
[project @ 2007-12-10 23:13:13 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,21 +1,14 @@
 2007-12-10  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/fsolve.cc (Ffsolve):
 	For compatibility, return [x, fval, info] instead of [x, info, msg].
  	Move tests here from test/test_nonlin.m.
 
-2007-12-10  David Bateman  <dbateman@free.fr>
-
-	* graphics.h.in (data_property::data): Declare as NDArray instead
-	of Matrix.  Change all uses.
-
-2007-12-10  John W. Eaton  <jwe@octave.org>
-
 	* OPERATORS/op-cm-s.cc: Define function for el_mul with
 	DEFNDBINOP_OP, not DEFBINOP_OP.
 
 	* OPERATORS/op-s-cm.cc: Define functions for el_and and el_or
 	operators with DEFNDBINOP_FN.
 
 	* oct-hist.cc (default_history_file): Use file_ops::concat.
 	* load-path.cc (dir_info::initialize, dir_info::get_file_list,
@@ -24,16 +17,26 @@ 2007-12-10  John W. Eaton  <jwe@octave.o
 	load_path::do_find_all_first_of): Likewise.
 
 	* help.cc (Flookfor): Avoid doubling directory separator.
 	* dirfns.cc (Fmkdir): Likewise.
 
 	* pt-mat.cc (tree_matrix::rvalue): Produce sq_string if any
 	strings are sq_string objects.
 
+2007-12-10  David Bateman  <dbateman@free.fr>
+
+	* graphics.h.in (data_property::data): Declare as NDArray instead
+	of Matrix.  Change all uses.
+
+2007-12-10  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* graphics.h.in (class figure) Add the color property.
+	* graphics.cc (class figure) Ditto.
+
 2007-12-07  David Bateman  <dbateman@free.fr>
 
 	* data.cc (Fnorm): Don't return a scalar stored as a sparse
 	matrix. Convert it to a scalar.
 
 	* graphics.cc (check_limit_val): Delete.
 	(check_limit_vals): Simplify and no longer use check_limit_val.
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -858,17 +858,18 @@ figure::properties::properties (const gr
   : base_properties (go_name, mh, p),
     __plot_stream__ (Matrix ()),
     __enhanced__ (false),
     nextplot ("replace"),
     closerequestfcn (make_fcn_handle ("closereq")),
     currentaxes (octave_NaN),
     colormap (),
     visible ("on"),
-    paperorientation ("portrait")
+    paperorientation ("portrait"),
+    color ( color_values (1, 1, 1))
 { }
 
 void
 figure::properties::set_currentaxes (const graphics_handle& val)
 {
   if (error_state)
     return;
 
@@ -917,16 +918,18 @@ figure::properties::set (const caseless_
   else if (name.compare ("currentaxes"))
     set_currentaxes (val);
   else if (name.compare ("colormap"))
     set_colormap (val);
   else if (name.compare ("visible"))
     set_visible (val);
   else if (name.compare ("paperorientation"))
     set_paperorientation (val);
+  else if (name.compare ("color"))
+    set_color (val);
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
     }
 
   if (modified)
     mark_modified ();
@@ -945,16 +948,17 @@ figure::properties::get (void) const
   m.assign ("__plot_stream__", __plot_stream__);
   m.assign ("__enhanced__", __enhanced__);
   m.assign ("nextplot", nextplot);
   m.assign ("closerequestfcn", closerequestfcn);
   m.assign ("currentaxes", currentaxes.as_octave_value ());
   m.assign ("colormap", colormap);
   m.assign ("visible", visible);
   m.assign ("paperorientation", paperorientation);
+  m.assign ("color", color);
 
   return m;
 }
 
 octave_value
 figure::properties::get (const caseless_str& name) const
 {
   octave_value retval;
@@ -980,16 +984,18 @@ figure::properties::get (const caseless_
   else if (name.compare ("currentaxes"))
     retval = currentaxes.as_octave_value ();
   else if (name.compare ("colormap"))
     retval = colormap;
   else if (name.compare ("visible"))
     retval = visible;
   else if (name.compare ("paperorientation"))
     retval = paperorientation;
+  else if (name.compare ("color"))
+    retval = color;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
 }
 
 void
 figure::properties::close (void)
@@ -1017,17 +1023,17 @@ figure::properties::factory_defaults (vo
 {
   property_list::pval_map_type m;
 
   m["nextplot"] = "replace";
   // m["closerequestfcn"] = make_fcn_handle ("closereq");
   m["colormap"] = colormap_property ();
   m["visible"] = "on";
   m["paperorientation"] = "portrait";
-
+  m["color"] = color_property (color_values (1, 1, 1));
   return m;
 }
 
 octave_value
 figure::get_default (const caseless_str& name) const
 {
   octave_value retval = default_properties.lookup (name);
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1214,16 +1214,17 @@ public:
       octave_value __plot_stream__
       octave_value __enhanced__
       octave_value nextplot
       octave_value closerequestfcn
       graphics_handle currentaxes S
       colormap_property colormap
       octave_value visible S
       octave_value paperorientation
+      color_property color
     END_PROPERTIES
 
     static std::string go_name;
   };
 
 private:
   properties xproperties;
 
