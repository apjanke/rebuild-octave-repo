# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1494348593 14400
#      Tue May 09 12:49:53 2017 -0400
# Node ID 06bf3a0b08bfe8bc7005e441d74ce39ca35587af
# Parent  bce43f1a3cced131abbd8bd76f567b5305b864e3
maint: Use "" instead of <> for our own include files.

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -38,20 +38,20 @@ along with Octave; see the file COPYING.
 #include <QMimeData>
 #include <QProcess>
 #include <QStyle>
 #include <QTabBar>
 #include <QTextStream>
 #include <QVBoxLayout>
 #include <Qsci/qscicommandset.h>
 
+#include "main-window.h"
+#include "oct-map.h"
 #include "octave-link.h"
 #include "utils.h"
-#include "main-window.h"
-#include <oct-map.h>
 
 file_editor::file_editor (QWidget *p)
   : file_editor_interface (p)
 {
   // Set current editing directory before construct because loaded
   // files will change ced accordingly.
   ced = QDir::currentPath ();
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -56,21 +56,21 @@ along with Octave; see the file COPYING.
 #include "shortcut-manager.h"
 
 #include "Array.h"
 #include "cmd-edit.h"
 #include "url-transfer.h"
 
 #include "builtin-defun-decls.h"
 #include "defaults.h"
+#include "oct-map.h"
 #include "octave.h"
 #include "symtab.h"
+#include "utils.h"
 #include "version.h"
-#include "utils.h"
-#include <oct-map.h>
 
 static file_editor_interface *
 create_default_editor (QWidget *p)
 {
 #if defined (HAVE_QSCINTILLA)
   return new file_editor (p);
 #else
   octave_unused_parameter (p);
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -26,17 +26,17 @@ along with Octave; see the file COPYING.
 
 #include <iostream>
 
 #if defined (HAVE_WINDOWS_H)
 #  define WIN32_LEAN_AND_MEAN
 #  include <windows.h>
 #endif
 
-#include <lo-mappers.h>
+#include "lo-mappers.h"
 #include "oct-locbuf.h"
 #include "oct-refcount.h"
 
 #include "errwarn.h"
 #include "gl-render.h"
 #include "oct-opengl.h"
 #include "text-renderer.h"
 
diff --git a/libinterp/octave.h b/libinterp/octave.h
--- a/libinterp/octave.h
+++ b/libinterp/octave.h
@@ -25,17 +25,17 @@ along with Octave; see the file COPYING.
 
 #include "octave-config.h"
 
 #if defined  (__cplusplus)
 
 #include <list>
 #include <string>
 
-#include <str-vec.h>
+#include "str-vec.h"
 
 namespace octave
 {
   // Command line arguments.  See also options-usage.h.
 
   class OCTINTERP_API cmdline_options
   {
   public:
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -111,18 +111,18 @@ object) relevant global values before an
 #include "octave.h"
 #include "ov.h"
 #include "parse.h"
 #include "pt-all.h"
 #include "symtab.h"
 #include "token.h"
 #include "utils.h"
 #include "variables.h"
-#include <oct-parse.h>
-#include <oct-gperf.h>
+#include "oct-parse.h"
+#include "oct-gperf.h"
 
 // FIXME: with bison 3.x, OCTAVE_STYPE appears in the generated
 // oct-parse.h file, but there is no definition for YYSTYPE, which is
 // needed by the code that is generated by flex.  I can't seem to find a
 // way to tell flex to use OCTAVE_STYPE instead of YYSTYPE in the code
 // it generates, or to tell bison to provide the definition of YYSTYPE
 // in the generated oct-parse.h file.
 
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -79,17 +79,17 @@ along with Octave; see the file COPYING.
 #include "pt-funcall.h"
 #include "symtab.h"
 #include "token.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 
 // oct-parse.h must be included after pt-all.h
-#include <oct-parse.h>
+#include "oct-parse.h"
 
 extern int octave_lex (YYSTYPE *, void *);
 
 // List of autoloads (function -> file mapping).
 static std::map<std::string, std::string> autoload_map;
 
 // Forward declarations for some functions defined at the bottom of
 // the file.
