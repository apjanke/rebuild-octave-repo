# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546539662 28800
#      Thu Jan 03 10:21:02 2019 -0800
# Branch stable
# Node ID abca0c2690b76d19ff597fa1c242759ad9b20856
# Parent  6c65dafb72ca0677cf4c0cfdccf0596635062825
oct-parse.yy: Fix static analyzer detected issues (bug #55347).

* oct-parse.yy (base_parser::make_colon_expression): Remove redundant test for
non-zero value of "incr".
* oct-parse.yy (base_parser::make_function): Declare and initialize retval
in one statement.

diff --git a/libinterp/parse-tree/oct-parse.yy b/libinterp/parse-tree/oct-parse.yy
--- a/libinterp/parse-tree/oct-parse.yy
+++ b/libinterp/parse-tree/oct-parse.yy
@@ -2513,17 +2513,17 @@ namespace octave
 
     int l = base->line ();
     int c = base->column ();
 
     tree_colon_expression *e
       = new tree_colon_expression (base, limit, incr, l, c);
 
     if (base->is_constant () && limit->is_constant ()
-        && (! incr || (incr && incr->is_constant ())))
+        && (! incr || incr->is_constant ()))
       {
         try
           {
             tree_evaluator& tw
               = __get_evaluator__ ("finish_colon_expression");
 
             octave_value tmp = tw.evaluate (e);
 
@@ -3294,25 +3294,23 @@ namespace octave
   base_parser::make_function (token *fcn_tok,
                               tree_parameter_list *ret_list,
                               tree_identifier *id,
                               tree_parameter_list *param_list,
                               tree_statement_list *body,
                               tree_statement *end_fcn_stmt,
                               comment_list *lc)
   {
-    tree_function_def *retval = nullptr;
-
     int l = fcn_tok->line ();
     int c = fcn_tok->column ();
 
     octave_user_function *tmp_fcn
       = start_function (id, param_list, body, end_fcn_stmt);
 
-    retval = finish_function (ret_list, tmp_fcn, lc, l, c);
+    tree_function_def *retval = finish_function (ret_list, tmp_fcn, lc, l, c);
 
     recover_from_parsing_function ();
 
     return retval;
   }
 
   // Begin defining a function.
 
