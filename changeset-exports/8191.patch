# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1223386125 -7200
#      Tue Oct 07 15:28:45 2008 +0200
# Node ID 9cb73236e5521df0e35a81b4179f98c145e1ecf6
# Parent  73d6b71788c066dcf57a810fee00b467ec1d0a60
fix uint64 mixed operations

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-10-07  Jaroslav Hajek <highegg@gmail.com>
+
+	* oct-inttypes.h (OCTAVE_INT_DOUBLE_BIN_OP): Change octave_int64 to 
+	octave_uint64 where appropriate.
+
 2008-10-06  David Bateman  <dbateman@free.fr>
 	
 	* Sparse-op-defs.h (SPARSE_SMSM_CMP_OPS): Duplicate code for scalar
 	sparse arguments rather than rely on extern function.
 
 2008-10-06  John W. Eaton  <jwe@octave.org>
 
 	* Spasre-op-defs.h: Undo previous change.
diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -982,25 +982,25 @@ typedef octave_int<uint64_t> octave_uint
   OCTAVE_INT_DOUBLE_BIN_OP0(OP) \
   template <> \
   inline octave_int64 \
   operator OP (const double& x, const octave_int64& y) \
   { return octave_int64 (x OP static_cast<long double> (y.value ())); } \
   template <> \
   inline octave_uint64 \
   operator OP (const double& x, const octave_uint64& y) \
-  { return octave_int64 (x OP static_cast<long double> (y.value ())); } \
+  { return octave_uint64 (x OP static_cast<long double> (y.value ())); } \
   template <> \
   inline octave_int64 \
   operator OP (const octave_int64& x, const double& y) \
   { return octave_int64 (static_cast<long double> (x.value ()) OP y); } \
   template <> \
   inline octave_uint64 \
   operator OP (const octave_uint64& x, const double& y) \
-  { return octave_int64 (static_cast<long double> (x.value ()) OP y); }
+  { return octave_uint64 (static_cast<long double> (x.value ()) OP y); }
 
 #else
 // external handlers
 #define OCTAVE_INT_DOUBLE_BIN_OP(OP) \
   OCTAVE_INT_DOUBLE_BIN_OP0(OP) \
   template <> \
   OCTAVE_API octave_int64 \
   operator OP (const double&, const octave_int64&); \
