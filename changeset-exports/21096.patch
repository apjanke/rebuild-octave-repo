# HG changeset patch
# User Andreas Weber <andy.weber.aw@gmail.com>
# Date 1453047623 -3600
#      Sun Jan 17 17:20:23 2016 +0100
# Node ID a1529d24beff0bf545fe74f54341dd713c717ff7
# Parent  d6fa72047aeb113052297c5057631dde60373756
maint: Use gripe_disabled_feature in audiodevinfo and audioread

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -61,20 +61,16 @@ bits_to_format (int bits)
   else if (bits == -1)
     return paFloat32;
   else
     return 0;
 }
 
 #endif
 
-#define NO_PORTAUDIO_MSG \
-  error ("portaudio not found on your system and thus audio functionality is not present"); \
-  (void) args;  /* silence compiler warning "unused parameter" */
-
 DEFUN_DLD (audiodevinfo, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{devinfo} =} audiodevinfo ()\n\
 \n\
 @deftypefnx {} {@var{devs} =} audiodevinfo (@var{io})\n\
 @deftypefnx {} {@var{name} =} audiodevinfo (@var{io}, @var{id})\n\
 @deftypefnx {} {@var{id} =} audiodevinfo (@var{io}, @var{name})\n\
 @deftypefnx {} {@var{id} =} audiodevinfo (@var{io}, @var{rate}, @var{bits}, @var{chans})\n\
@@ -405,18 +401,19 @@ recording using those parameters.\n\
         error ("audiodevinfo: please specify 0 for output and 1 for input devices");
 
       retval = 0;
     }
 
   return retval;
 
 #else
-  NO_PORTAUDIO_MSG
-  (void) args;  //silence compiler warning "unused parameter"
+  gripe_disabled_feature ("audiodevinfo",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #endif
 }
 
 /*
 %!testif HAVE_PORTAUDIO
 %! devinfo = audiodevinfo;
 %! assert (rows (devinfo.input), 1);
 %! assert (rows (devinfo.output), 1);
@@ -1810,17 +1807,19 @@ DEFUN_DLD (__recorder_audiorecorder__, a
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fs}, @var{nbits}, @var{channels}, @var{id})\n\
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fcn}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_audiorecorder__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
 
   int nargin = args.length ();
 
   audiorecorder* recorder = new audiorecorder ();
 
   if (nargin > 0)
     {
@@ -1872,196 +1871,222 @@ get_recorder (const octave_value& ov)
 DEFUN_DLD (__recorder_getaudiodata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data}} __recorder_getaudiodata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_getaudiodata__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->getaudiodata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_channels__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_channels__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_channels ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __recorder_get_fs__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_fs__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_fs ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __recorder_get_id__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_id__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_id ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __recorder_get_nbits__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_nbits__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_nbits ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_sample_number__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_sample_number__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_sample_number ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __recorder_get_tag__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_tag__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_tag ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_total_samples__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_total_samples__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_total_samples ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __recorder_get_userdata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_get_userdata__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->get_userdata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_isrecording__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_isrecording__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_isrecording__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   retval = get_recorder (args(0))->isrecording ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_pause__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_pause__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   get_recorder (args(0))->pause ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_recordblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_recordblocking__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_recordblocking__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   float seconds = args(1).float_value ();
   get_recorder (args(0))->recordblocking (seconds);
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_record__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __recorder_record__ (@var{recorder})\n\
 @deftypefnx {} {} __recorder_record__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_record__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   audiorecorder *recorder = get_recorder (args(0));
 
   if (args.length () == 2)
     recorder->set_end_sample (args(1).int_value () * recorder->get_fs ());
 
   recorder->record ();
 #endif
@@ -2070,77 +2095,87 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_resume__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_resume__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->resume ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_fs__ (@var{recorder}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_set_fs__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_fs (args(1).int_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_tag__ (@var{recorder}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_set_tag__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_userdata__ (@var{recorder}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_set_userdata__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_userdata (args(1));
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__recorder_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_stop__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__recorder_stop__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->stop ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_audioplayer__, args, ,
@@ -2148,17 +2183,19 @@ DEFUN_DLD (__player_audioplayer__, args,
 @deftypefn  {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits}, @var{id})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_audioplayer__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
 
   int nargin = args.length ();
 
   audioplayer* recorder = new audioplayer ();
 
   if (! recorder)
     error ("__player_audioplayer__: Couldn't instantiate new audioplayer");
@@ -2215,177 +2252,199 @@ get_player (const octave_value& ov)
 DEFUN_DLD (__player_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_channels__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_channels__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_channels ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __player_get_fs__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_fs__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_fs ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __player_get_id__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_id__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_id ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __player_get_nbits__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_nbits__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_nbits ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_sample_number__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_sample_number__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_sample_number ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __player_get_tag__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_tag__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_tag ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_total_samples__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_total_samples__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_total_samples ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __player_get_userdata__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_get_userdata__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_userdata ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_isplaying__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_isplaying__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_isplaying__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->isplaying ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__player_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_pause__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_pause__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     get_player (args(0))->pause ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_playblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_playblocking__ (@var{player})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_playblocking__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
 
   audioplayer *player = get_player (args(0));
 
   if (args.length () == 1)
     {
       player->playblocking ();
     }
@@ -2427,17 +2486,19 @@ DEFUN_DLD (__player_play__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_play__ (@var{player})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_play__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
 
   if (args.length () == 1)
     {
       get_player (args(0))->play ();
     }
   else if (args.length () == 2)
     {
@@ -2477,75 +2538,85 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_resume__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_resume__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     get_player (args(0))->resume ();
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_fs__ (@var{player}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_set_fs__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_fs (args(1).int_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_tag__ (@var{player}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_set_tag__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_tag (args(1).char_matrix_value ());
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_userdata__ (@var{player}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_set_userdata__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_userdata (args(1));
 #endif
   return octave_value ();
 }
 
 DEFUN_DLD (__player_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_stop__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
 #ifndef HAVE_PORTAUDIO
-  NO_PORTAUDIO_MSG
+  gripe_disabled_feature ("__player_stop__",
+                          "audio playback and recording through PortAudio",
+                          "Octave");
 #else
   if (args.length () == 1)
     get_player (args(0))->stop ();
 #endif
   return octave_value ();
 }
diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -167,17 +167,18 @@ is stored in the audio file.\n\
         ret_audio = audio;
     }
   else
     ret_audio = audio;
 
   return ovl (ret_audio, info.samplerate);
 
 #else
-  error ("sndfile not found on your system and thus audioread is not functional");
+  gripe_disabled_feature ("audioread", "reading and writing sound files"
+                          " through libsndfile", "Octave");
 #endif
 }
 
 #ifdef HAVE_SNDFILE
 
 static int
 extension_to_format (const std::string& ext)
 {
@@ -414,19 +415,18 @@ Comment.\n\
       offset += chunk_size;
     }
 
   // FIXME: shouldn't we return something to indicate whether the file
   // was written successfully?
   return ovl ();
 
 #else
-
-  error ("sndfile not found on your system and thus audiowrite is not functional");
-
+  gripe_disabled_feature ("audiowrite", "reading and writing sound files"
+                          " through libsndfile", "Octave");
 #endif
 }
 
 DEFUN_DLD (audioinfo, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{info} =} audioinfo (@var{filename})\n\
 Return information about an audio file specified by @var{filename}.\n\
 @end deftypefn")
@@ -487,13 +487,12 @@ Return information about an audio file s
   result.assign ("BitRate", -1);
   result.assign ("Title", sf_get_string (file, SF_STR_TITLE));
   result.assign ("Artist", sf_get_string (file, SF_STR_ARTIST));
   result.assign ("Comment", sf_get_string (file, SF_STR_COMMENT));
 
   return ovl (result);
 
 #else
-
-  error ("sndfile not found on your system and thus audioinfo is not functional");
-
+  gripe_disabled_feature ("audioinfo", "reading and writing sound files"
+                          " through libsndfile", "Octave");
 #endif
 }
