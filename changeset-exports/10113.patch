# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1263505157 -3600
#      Thu Jan 14 22:39:17 2010 +0100
# Node ID 5aff7f14aa7f92fe58522fa95ecabdbf8913fa2c
# Parent  fddfebeeb33ac1ea4187305aa6490adcf23ed99c
fix concatenation bug

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1588,27 +1588,27 @@ Array<T>::insertN (const Array<T>& a, oc
 }
 
 template <class T>
 Array<T>&
 Array<T>::insert (const Array<T>& a, const Array<octave_idx_type>& ra_idx)
 {
   octave_idx_type n = ra_idx.length ();
 
-  if (n == dimensions.length ())
+  if (n >= dimensions.length ())
     {
-      dim_vector dva = a.dims ();
-      dim_vector dv = dims ();
+      const dim_vector dva = a.dims ();
+      const dim_vector dv = dims ().redim (n);
       int len_a = dva.length ();
       int non_full_dim = 0;
 
       for (octave_idx_type i = 0; i < n; i++)
 	{
 	  if (ra_idx(i) < 0 || (ra_idx(i) + 
-				(i < len_a ? dva(i) : 1)) > dimensions(i))
+				(i < len_a ? dva(i) : 1)) > dv(i))
 	    {
 	      (*current_liboctave_error_handler)
 		("Array<T>::insert: range error for insert");
 	      return *this;
 	    }
 
 	  if (dv(i) != (i < len_a ? dva(i) : 1))
 	    non_full_dim++;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-14  Jaroslav Hajek  <highegg@gmail.com>
+
+	* Array.cc (Array<T>::insert (const Array<T>&, const
+	Array<octave_idx_type>&): Allow less dimensions than indices.
+
 2010-01-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* chNDArray.h: Declare relational bsxfun ops.
 	* chNDArray.cc: Define them.
 
 2010-01-14  John W. Eaton  <jwe@octave.org>
 
 	* CMatrix.cc: Fix prototype for zherk.
