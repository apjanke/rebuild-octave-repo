# HG changeset patch
# User Michael C. Grant <mcg@cvxr.com>
# Date 1392991537 21600
#      Fri Feb 21 08:05:37 2014 -0600
# Branch gui-release
# Node ID 83f5f2d414865e0826ab254ac5561d9caaa9fbdd
# Parent  9831d6b4c5a7482685b376782d56a6303c573489
correctly handle nested evalin ('caller', ...) calls at top scope (bug #41651)

* toplev.cc (octave_call_stack::do_goto_caller_frame): Compare scope of
current stack element to scope of the top of the call stack instead of
checking whether the current frame is 0.

diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -464,17 +464,17 @@ octave_call_stack::do_goto_caller_frame 
   while (frame != 0)
     {
       frame = cs[frame].prev;
 
       const call_stack_elt& elt = cs[frame];
 
       octave_function *f = elt.fcn;
 
-      if (frame == 0 || (f && f->is_user_code ()))
+      if (elt.scope == cs[0].scope || (f && f->is_user_code ()))
         {
           if (! skipped)
             // We found the current user code frame, so skip it.
             skipped = true;
           else
             {
               // We found the caller user code frame.
               call_stack_elt tmp (elt);
