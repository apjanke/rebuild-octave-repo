# HG changeset patch
# User jwe
# Date 828003999 0
#      Thu Mar 28 09:06:39 1996 +0000
# Node ID 31f4f775b8c6ab07604abc60a42e01e3ea41ab77
# Parent  70dedaeb25b9ad48ad97e73c8569973fe2473f94
[project @ 1996-03-28 09:06:28 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -134,18 +134,18 @@ static int have_continuation (int traili
 static int have_ellipsis_continuation (int trailing_comments_ok = 1);
 static yum_yum eat_whitespace (void);
 static yum_yum eat_continuation (void);
 
 %}
 
 D	[0-9]
 S	[ \t]
-NL	[\n]
-SNL	[ \t\n]
+NL	((\n)|(\r\n))
+SNL	({S}|{NL})
 EL	(\.\.\.)
 BS	(\\)
 CONT	({EL}|{BS})
 Im	[iIjJ]
 CCHAR	[#%]
 COMMENT	({CCHAR}.*{NL})
 SNLCMT	({SNL}|{COMMENT})
 NOTEQ	((~=)|(!=)|(<>))
@@ -571,17 +571,20 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
     return ')';
   }
 
 %{
 // We return everything else as single character tokens, which should
 // eventually result in a parse error.
 %}
 
-.		{ TOK_RETURN (yytext[0]); }
+. {
+    error ("invalid character `%s' on input", undo_string_escape (yytext[0]));
+    TOK_RETURN (yytext[0]);
+}
 
 %%
 
 // GAG.
 //
 // If we're reading a matrix and the next character is '[', make sure
 // that we insert a comma ahead of it.
 
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -51,16 +51,18 @@ keyword_almost_match (const char **std, 
 		      int max_toks);
 
 extern string_vector get_fcn_file_names (const string&, int = 0);
 
 extern string_vector get_fcn_file_names (int = 0);
 
 extern int empty_arg (const char *name, int nr, int nc);
 
+extern const char *undo_string_escape (char c);
+
 extern string undo_string_escapes (const string& s);
 
 extern void oct_putenv (const char *, const char *);
 
 #endif
 
 /*
 ;;; Local Variables: ***
