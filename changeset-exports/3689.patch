# HG changeset patch
# User jwe
# Date 962357446 0
#      Fri Jun 30 09:30:46 2000 +0000
# Node ID 9143cd2129c4eb945311de26d5b203769f5858d4
# Parent  8aea513ff224fa83c49f34c8bb11e06ca1968c13
[project @ 2000-06-30 09:30:44 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2000-06-29  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dMatrix.h (read_int): Provide declaration.
+
 2000-06-29  James R. Van Zandt  <jrv@vanzandt.mv.com>
 
 	* data-conv.cc (read_doubles): Handle EIGHT_BYTE_INT cases.
 	(write_doubles): Ditto.
 	* data-conv.h: Ditto.
 	(enum save_type): New values, LS_U_LONG and LS_LONG.
 
 2000-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/liboctave/dMatrix.h b/liboctave/dMatrix.h
--- a/liboctave/dMatrix.h
+++ b/liboctave/dMatrix.h
@@ -250,15 +250,18 @@ MS_BOOL_OP_DECLS (Matrix, double)
 SM_CMP_OP_DECLS (double, Matrix)
 SM_BOOL_OP_DECLS (double, Matrix)
 
 MM_CMP_OP_DECLS (Matrix, Matrix)
 MM_BOOL_OP_DECLS (Matrix, Matrix)
 
 MARRAY_FORWARD_DEFS (MArray2, Matrix, double)
 
+template <class T>
+void read_int (std::istream& is, bool swap_bytes, T& val);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,11 @@
 2000-06-29  James R. Van Zandt  <jrv@vanzandt.mv.com>
 
-	* load-save.cc (read_int): New template function.  Instantiate it
-	for various integer types.
-	(load_save_format): New value, LS_MAT5_BINARY.
+	* load-save.cc (load_save_format): New value, LS_MAT5_BINARY.
 	(arrayclasstype, mat5_data_type): New enums.
 	(read_mat5_binary_data): New function.
 	(read_mat5_tag): New function.
 	(read_mat5_binary_element): New function.
 	(read_mat5_binary_file_header): New function.
 	(get_file_format): Check for mat5 binary format too.
 	(do_load): Handle mat5 binary format.
 	(write_mat5_tag): New function.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -65,58 +65,16 @@ Software Foundation, 59 Temple Place - S
 #include "utils.h"
 #include "variables.h"
 #include "version.h"
 #include "dMatrix.h"
 
 #define PAD(l) (((l)<=4)?4:(((l)+7)/8)*8)
 #define TAGLENGTH(l) ((l)<=4?4:8)
 
-template <class T>
-void
-read_int (std::istream& is, bool swap_bytes, T& val)
-{
-  is.read (X_CAST (char *, &val), sizeof (T));
-
-  if (swap_bytes)
-    {
-      switch (sizeof (T))
-	{
-	case 1:
-	  break;
-
-	case 2:
-	  swap_2_bytes (X_CAST (char *, &val));
-	  break;
-
-	case 4:
-	  swap_4_bytes (X_CAST (char *, &val));
-	  break;
-
-	case 8:
-	  swap_8_bytes (X_CAST (char *, &val));
-	  break;
-
-	default:
-	  (*current_liboctave_error_handler)
-	    ("read_int: unrecognized data format!");
-	}
-    }
-}
-
-template void read_int (std::istream&, bool, char&);
-template void read_int (std::istream&, bool, signed char&);
-template void read_int (std::istream&, bool, unsigned char&);
-template void read_int (std::istream&, bool, short&);
-template void read_int (std::istream&, bool, unsigned short&);
-template void read_int (std::istream&, bool, int&);
-template void read_int (std::istream&, bool, unsigned int&);
-template void read_int (std::istream&, bool, long&);
-template void read_int (std::istream&, bool, unsigned long&);
-
 // Write octave-core file if Octave crashes or is killed by a signal.
 static bool Vcrash_dumps_octave_core;
 
 // The default output format.  May be one of "binary", "text",
 // "mat-binary", or "hdf5".
 static std::string Vdefault_save_format;
 
 // The number of decimal digits to use when writing ascii data.
