# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438200865 25200
#      Wed Jul 29 13:14:25 2015 -0700
# Node ID 71bd638e0ef64068bc74783d1580a7c4caf2b013
# Parent  4bde15a9c8bba9e15c2568c234ae0bf07cc41eca
legend.m: Fix listeners on legend line objects (bug #45563).

* legend.m: Get list of hplots already in the existing legend (old_hplots).
Add listeners on new hplot objects when they are not in the list old_hplots.
Re-ordered %!demo blocks to make slightly more logical sense.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -589,20 +589,23 @@ function [hleg, hleg_obj, hplot, labels]
                           "activepositionproperty", "position");
           ## Inherit properties from current axis
           ## "fontunits" shoud be first because it affects interpretation
           ## of "fontsize" property
           proplist = {"fontunits", "fontangle", "fontname", "fontsize", ...
                       "fontweight"};
           ca_props = get (ca(1), proplist);
           set (hlegend, proplist, ca_props);
+          old_hplots = [];
         else
           addprops = false;
           axes (hlegend);
           delete (get (hlegend, "children"));
+          ## Hack, to get list of hplots for which addlistener has already been called.
+          old_hplots = [ get(hlegend, "deletefcn"){6:end} ];
         endif
         if (addprops)
           addproperty ("edgecolor", hlegend, "color", [0, 0, 0]);
           addproperty ("textcolor", hlegend, "color", [0, 0, 0]);
           locations = {"north", "south", "east", "west", ...
                        "{northeast}", "southeast", "northwest", "southwest", ...
                        "northoutside", "southoutside", ...
                        "eastoutside", "westoutside", ...
@@ -854,17 +857,17 @@ function [hleg, hleg_obj, hplot, labels]
                            "marker", marker,
                            "markeredgecolor",get (hplots(k), "markeredgecolor"),
                            "markerfacecolor",get (hplots(k), "markerfacecolor"),
                            "markersize", min (get (hplots(k), "markersize"),10),
                            "userdata", hplots(k));
                 hobjects(end+1) = l1;
               endif
 
-              if (addprops)
+              if (! any (hplots(k) == old_hplots))
                 addlistener (hplots(k), "color",
                              {@updateline, hlegend, linelength, false});
                 addlistener (hplots(k), "linestyle",
                              {@updateline, hlegend, linelength, false});
                 addlistener (hplots(k), "linewidth",
                              {@updateline, hlegend, linelength, false});
                 addlistener (hplots(k), "marker",
                              {@updateline, hlegend, linelength, false});
@@ -1249,17 +1252,17 @@ endfunction
 %! title ('legend called with cellstr and string inputs for labels');
 %! h = legend ({'foo'}, 'bar');
 %! legend (h, 'location', 'northeastoutside');
 %! set (h, 'fontsize', 20);
 
 %!demo
 %! clf;
 %! plot (rand (3));
-%! title ('legend("show") without inputs creates default labels');
+%! title ('legend ("show") without inputs creates default labels');
 %! h = legend ('show');
 
 %!demo
 %! clf;
 %! x = 0:1;
 %! plot (x,x,';I am Blue;', x,2*x, x,3*x,';I am Red;');
 %! h = legend ('location', 'northeastoutside');
 %! ## Placing legend inside should return axes to original size
@@ -1338,22 +1341,16 @@ endfunction
 %! clf;
 %! plot (rand (2));
 %! title ('Labels with TeX interpreter turned off');
 %! h = legend ('Hello_World', 'foo^bar');
 %! set (h, 'interpreter', 'none');
 
 %!demo
 %! clf;
-%! plot (1:10, 1:10);
-%! title ('a very long label can sometimes cause problems');
-%! legend ('hello very big world', 'location', 'northeastoutside');
-
-%!demo
-%! clf;
 %! labels = {};
 %! colororder = get (gca, 'colororder');
 %! for i = 1:5
 %!   h = plot (1:100, i + rand (100,1)); hold on;
 %!   set (h, 'color', colororder(i,:));
 %!   labels = {labels{:}, ['Signal ', num2str(i)]};
 %! end
 %! hold off;
@@ -1391,16 +1388,23 @@ endfunction
 %! rand_2x3_data1 = [0.341447, 0.171220, 0.284370; 0.039773, 0.731725, 0.779382];
 %! bar (rand_2x3_data1);
 %! ylim ([0 1.0]);
 %! title ('legend() works for bar graphs (hggroups)');
 %! legend ({'1st Bar', '2nd Bar', '3rd Bar'});
 
 %!demo
 %! clf;
+%! colormap (cool (64));
+%! surf (peaks ());
+%! legend ('peaks()')
+%! title ('legend() works for surface objects too');
+
+%!demo
+%! clf reset;  % needed to undo colormap assignment in previous demo
 %! rand_2x3_data2 = [0.44804, 0.84368, 0.23012; 0.72311, 0.58335, 0.90531];
 %! bar (rand_2x3_data2);
 %! ylim ([0 1.2]);
 %! title ('"left" option places text label west of colors');
 %! legend ('1st Bar', '2nd Bar', '3rd Bar');
 %! legend left;
 
 %!demo
@@ -1450,16 +1454,17 @@ endfunction
 %!  plot (x, rand (numel (x)));
 %!  legend (cellstr (num2str (x)), 'location', 'northeastoutside');
 %! subplot (2,2,3);
 %!  plot (x, rand (numel (x)));
 %!  legend (cellstr (num2str (x)), 'location', 'southwestoutside');
 %! subplot (2,2,4);
 %!  plot (x, rand (numel (x)));
 %!  legend (cellstr (num2str (x)), 'location', 'southeastoutside');
+%! %% Legend works on a per axes basis for each subplot
 
 %!demo
 %! clf;
 %! plot (rand (2));
 %! title ('legend() will warn if extra labels are specified');
 %! legend ('Hello', 'World', 'interpreter', 'foobar');
 
 %!demo
@@ -1484,24 +1489,30 @@ endfunction
 %! clf;
 %! x = 0:10;
 %! y1 = rand (size (x));
 %! y2 = rand (size (x));
 %! [ax, h1, h2] = plotyy (x, y1, x, y2);
 %! title ('plotyy legend test #3: Blue and Green labels');
 %! legend ('Blue', 'Green', 'location', 'south');
 
+%!demo
+%! clf;
+%! plot (1:10, 1:10);
+%! title ('a very long label can sometimes cause problems');
+%! legend ('hello very big world', 'location', 'northeastoutside');
+
 %!demo % bug 36408
 %! clf;
 %! option = 'right';
 %! subplot (3,1,1);
 %!  plot (rand (1,4));
 %!  xlabel xlabel;
 %!  ylabel ylabel;
-%!  title ('Subplots should adjust to the legend placed outside');
+%!  title ('Subplots adjust to the legend placed outside');
 %!  legend ({'1'}, 'location', 'northeastoutside');
 %!  legend (option);
 %! subplot (3,1,2);
 %!  plot (rand (1,4));
 %!  xlabel xlabel;
 %!  ylabel ylabel;
 %!  legend ({'1234567890'}, 'location', 'eastoutside');
 %!  legend (option);
@@ -1512,17 +1523,17 @@ endfunction
 %!  legend ({'12345678901234567890'}, 'location', 'southeastoutside');
 %!  legend (option);
 
 %!demo % bug 36408
 %! clf;
 %! option = 'right';
 %! subplot (3,1,1);
 %!  plot (rand (1,4));
-%!  title ('Subplots should adjust to the legend placed outside');
+%!  title ('Subplots adjust to the legend placed outside');
 %!  legend ({'1'}, 'location', 'northwestoutside');
 %!  legend (option);
 %! subplot (3,1,2);
 %!  plot (rand (1,4));
 %!  legend ({'1234567890'}, 'location', 'westoutside');
 %!  legend (option);
 %! subplot (3,1,3);
 %!  plot (rand (1,4));
@@ -1532,17 +1543,17 @@ endfunction
 %!demo % bug 36408
 %! clf;
 %! option = 'right';
 %! subplot (3,1,1);
 %!  plot (rand (1,4));
 %!  set (gca (), 'yaxislocation', 'right');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
-%!  title ('Subplots should adjust to the legend placed outside');
+%!  title ('Subplots adjust to the legend placed outside');
 %!  legend ({'1'}, 'location', 'northeastoutside');
 %!  legend (option);
 %! subplot (3,1,2);
 %!  plot (rand (1,4));
 %!  set (gca (), 'yaxislocation', 'right');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
 %!  legend ({'1234567890'}, 'location', 'eastoutside');
@@ -1558,17 +1569,17 @@ endfunction
 %!demo % bug 36408
 %! clf;
 %! option = 'right';
 %! subplot (3,1,1);
 %!  plot (rand (1,4));
 %!  set (gca (), 'yaxislocation', 'right');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
-%!  title ('Subplots should adjust to the legend placed outside');
+%!  title ('Subplots adjust to the legend placed outside');
 %!  legend ({'1'}, 'location', 'northwestoutside');
 %!  legend (option);
 %! subplot (3,1,2);
 %!  plot (rand (1,4));
 %!  set (gca (), 'yaxislocation', 'right');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
 %!  legend ({'1234567890'}, 'location', 'westoutside');
@@ -1584,17 +1595,17 @@ endfunction
 %!demo % bug 36408;
 %! clf;
 %! option = 'right';
 %! subplot (3,1,1);
 %!  plot (rand (1,4));
 %!  set (gca (), 'xaxislocation', 'top');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
-%!  title ('Subplots should adjust to the legend placed outside');
+%!  title ('Subplots adjust to the legend placed outside');
 %!  legend ({'1'}, 'location', 'northwestoutside');
 %!  legend (option);
 %! subplot (3,1,2);
 %!  plot (rand (1,4));
 %!  set (gca (), 'xaxislocation', 'top');
 %!  xlabel ('xlabel');
 %!  ylabel ('ylabel');
 %!  legend ({'1234567890'}, 'location', 'westoutside');
@@ -1606,24 +1617,17 @@ endfunction
 %!  ylabel ('ylabel');
 %!  legend ({'12345678901234567890'}, 'location', 'southwestoutside');
 %!  legend (option);
 
 %!demo % bug 39697
 %! clf;
 %! plot (1:10);
 %! legend ('Legend Text');
-%! title ({'Multi-line', 'titles', 'are a', 'problem'});
-
-%!demo
-%! clf;
-%! colormap (cool (64));
-%! surf (peaks ());
-%! legend ('peaks()')
-%! title ('legend() works for surface objects too');
+%! title ({'Multi-line', 'titles', 'are a', 'problem', 'See bug #39697'});
 
 %!test
 %! toolkit = graphics_toolkit ("gnuplot");
 %! h = figure ("visible", "off");
 %! unwind_protect
 %!   position = get (h, "position");
 %!   plot (rand (3));
 %!   legend ();
