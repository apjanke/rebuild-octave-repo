# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1522194689 25200
#      Tue Mar 27 16:51:29 2018 -0700
# Branch stable
# Node ID 91671d57817ede04909b66230ac3dab9db9a0976
# Parent  acb7094aebb367e9802fc227cb0697df880b0248
configure: mention qcollectiongenerator and qhelpgenerator in diagnostics (bug #53474)

* acinclude.m4 (OCTAVE_CHECK_QT_VERSION): Mention qcollectiongenerator and
qhelpgenerator in Qt warning message.  Do not list all utilities in comment
associated with HAVE_QT preprocessor symbol.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1938,17 +1938,17 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
       if test -n "$QHELPGENERATOR" && test -n "$QTCHOOSER"; then
         QHELPGENERATORFLAGS="-qt$qt_version"
       fi
     else
       QHELPGENERATOR="$QHELPGENERATOR_QTVER"
     fi
 
     if test -z "$MOC" || test -z "$UIC" || test -z "$RCC" || test -z "$LRELEASE" || test -z "$QCOLLECTIONGENERATOR" || test -z "$QHELPGENERATOR"; then
-      warn_qt_tools="one or more of the Qt utility programs moc, uic, rcc, and lrelease not found; disabling Qt GUI"
+      warn_qt_tools="one or more of the Qt utilities moc, uic, rcc, lrelease, qcollectiongenerator, and qhelpgenerator not found; disabling Qt GUI"
       build_qt_gui=no
       MOC_QTVER=
       UIC_QTVER=
       RCC_QTVER=
       LRELEASE_QTVER=
       QCOLLECTIONGENERATOR_QTVER=
       QHELPGENERATOR_QTVER=
       MOCFLAGS=
@@ -2008,17 +2008,17 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     fi
   fi
 
   if test $build_qt_gui = yes; then
     ## We have what we need to build the Qt GUI.  The remaining
     ## checks below are for optional features related to the Qt GUI.
 
     AC_DEFINE(HAVE_QT, 1,
-      [Define to 1 if Qt is available, with all required functions, libraries, developer header files, and utility programs (moc, uic, rcc, and lrelease).])
+      [Define to 1 if Qt is available, with all required functions, libraries, developer header files, and utilities.])
 
     AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
     AC_CHECK_HEADERS([QStandardPaths])
     CPPFLAGS="$ac_octave_save_CPPFLAGS"
     AC_LANG_POP(C++)
 
