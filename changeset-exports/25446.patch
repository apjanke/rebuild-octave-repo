# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1528736875 14400
#      Mon Jun 11 13:07:55 2018 -0400
# Node ID 1eedd589fb3e3f08e56bc0ddbaa059735a235ecd
# Parent  37132909ac9158f59852027a13f4f46544127127
# Parent  97e64c23fd076cd164c5cb86039e2a7356300dff
maint: Merge stable to default.

diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2464,28 +2464,37 @@ static inline void *
 maybe_unmark (void *ptr)
 {
   if (mex_context)
     mex_context->unmark (ptr);
 
   return ptr;
 }
 
+static mxArray *
+make_empty_matrix (void)
+{
+  static const mwSize zero = 0;
+
+  return new mxArray (mxDOUBLE_CLASS, zero, zero, mxREAL);
+}
+
 void
 mxArray_struct::set_field_by_number (mwIndex index, int key_num, mxArray *val)
 {
   if (key_num >= 0 && key_num < nfields)
-    data[nfields * index + key_num] = maybe_unmark_array (val);
+    data[nfields * index + key_num]
+      = val ? maybe_unmark_array (val) : make_empty_matrix ();
 }
 
 void
 mxArray_cell::set_cell (mwIndex idx, mxArray *val)
 {
   if (idx >= 0 && idx < get_number_of_elements ())
-    data[idx] = maybe_unmark_array (val);
+    data[idx] = val ? maybe_unmark_array (val) : make_empty_matrix ();
 }
 
 // ------------------------------------------------------------------
 
 // C interface to mxArray objects:
 
 // Floating point predicates.
 
