# HG changeset patch
# User Rik <rik@octave.org>
# Date 1431881292 25200
#      Sun May 17 09:48:12 2015 -0700
# Node ID 5fb4bc5f70ce919c41875ca54d9dcedac8479d56
# Parent  2283dd03bf50591252218ce03626815706a8f346
# Parent  b597bd161a5f7cd0af41e06bcc15d79f38ea3315
maint: Periodic merge of stable to default.

diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -603,16 +603,17 @@ More generally,
 
 @example
 @group
 foo (@var{w}, @var{x}, @var{y}, @dots{})
 @equiv{}
 @var{x} - @var{w} + @var{y} + @dots{}
 @end group
 @end example
+
 @b{See also:} bar
 @end deftypefn
 
 Any parameter whose name contains the name of a type (e.g.,
 @var{integer} or @var{matrix}) is expected to be of that
 type.  Parameters named @var{object} may be of any type.  Parameters
 with other sorts of names (e.g., @var{new_file}) are discussed
 specifically in the description of the function.  In some sections,
diff --git a/libinterp/corefcn/dirfns.cc b/libinterp/corefcn/dirfns.cc
--- a/libinterp/corefcn/dirfns.cc
+++ b/libinterp/corefcn/dirfns.cc
@@ -225,17 +225,20 @@ Create a directory named @var{dir} in th
 \n\
 If no @var{parent} directory is specified the present working directory is\n\
 used.\n\
 \n\
 If successful, @var{status} is 1, and @var{msg}, @var{msgid} are empty\n\
 character strings ("").  Otherwise, @var{status} is 0, @var{msg} contains a\n\
 system-dependent error message, and @var{msgid} contains a unique message\n\
 identifier.\n\
-@seealso{rmdir, pwd, cd}\n\
+\n\
+When creating a directory permissions will be set to\n\
+@code{0777 - @var{umask}}.\n\
+@seealso{rmdir, pwd, cd, umask}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
   retval(0) = false;
 
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -677,17 +677,20 @@ IEEE big endian format.\n\
 \n\
 @item ieee-le\n\
 IEEE little endian format.\n\
 @end table\n\
 \n\
 @noindent\n\
 however, conversions are currently only supported for @samp{native}\n\
 @samp{ieee-be}, and @samp{ieee-le} formats.\n\
-@seealso{fclose, fgets, fgetl, fscanf, fread, fputs, fdisp, fprintf, fwrite, fskipl, fseek, frewind, ftell, feof, ferror, fclear, fflush, freport}\n\
+\n\
+When opening a new file that does not yet exist, permissions will be set to\n\
+@code{0666 - @var{umask}}.\n\
+@seealso{fclose, fgets, fgetl, fscanf, fread, fputs, fdisp, fprintf, fwrite, fskipl, fseek, frewind, ftell, feof, ferror, fclear, fflush, freport, umask}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(0) = -1.0;
 
   int nargin = args.length ();
 
@@ -2234,17 +2237,23 @@ DEFUNX ("umask", Fumask, args, ,
         "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} umask (@var{mask})\n\
 Set the permission mask for file creation.\n\
 \n\
 The parameter @var{mask} is an integer, interpreted as an octal number.\n\
 \n\
 If successful, returns the previous value of the mask (as an integer to be\n\
 interpreted as an octal number); otherwise an error message is printed.\n\
-@seealso{fopen, mkdir}\n\
+\n\
+The permission mask is a UNIX concept used when creating new objects on a\n\
+file system such as files, directories, or named FIFOs.  The object to be\n\
+created has base permissions in an octal number @var{mode} which are\n\
+modified according to the octal value of @var{mask}.  The final permissions\n\
+for the new object are @code{@var{mode} - @var{mask}}.\n\
+@seealso{fopen, mkdir, mkfifo}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int status = 0;
 
   if (args.length () == 1)
     {
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -816,24 +816,28 @@ The function outputs are described in th
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUNX ("mkfifo", Fmkfifo, args, ,
         "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {} mkfifo (@var{name}, @var{mode})\n\
+@deftypefn  {Built-in Function} {@var{err} =} mkfifo (@var{name}, @var{mode})\n\
 @deftypefnx {Built-in Function} {[@var{err}, @var{msg}] =} mkfifo (@var{name}, @var{mode})\n\
-Create a FIFO special file named @var{name} with file mode @var{mode}\n\
+Create a FIFO special file named @var{name} with file mode @var{mode}.\n\
+\n\
+@var{mode} is interpreted as a decimal number (@emph{not} octal) and is\n\
+subject to umask processing.  The final calculated mode is\n\
+@code{@var{mode} - @var{umask}}.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a system-dependent\n\
 error message.\n\
-@seealso{pipe}\n\
+@seealso{pipe, umask}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
   retval(0) = -1;
 
   int nargin = args.length ();
diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -690,22 +690,17 @@ do_string_escapes (const std::string& s)
       i++;
       j++;
     }
 
   retval.resize (i);
 
   return retval;
 }
-/*
-Escape sequences begin with a leading backslash (@qcode{"@xbackslashchar{}"})\n\
-followed by 1--3 characters (.e.g., @qcode{"@xbackslashchar{}n"} => newline).\n\
 
-
-   */
 DEFUN (do_string_escapes, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} do_string_escapes (@var{string})\n\
 Convert escape sequences in @var{string} to the characters they represent.\n\
 \n\
 Escape sequences begin with a leading backslash\n\
 (@qcode{'@xbackslashchar{}'}) followed by 1--3 characters\n\
 (.e.g., @qcode{\"@xbackslashchar{}n\"} => newline).\n\
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -68,50 +68,50 @@
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{cond, norm, onenormest}
 ## @end deftypefn
 
-## Code originally licensed under
+## Code originally licensed under:
 ##
-##  Copyright (c) 2007, Regents of the University of California
-##  All rights reserved.
+## Copyright (c) 2007, Regents of the University of California
+## All rights reserved.
 ##
-##  Redistribution and use in source and binary forms, with or without
-##  modification, are permitted provided that the following conditions
-##  are met:
+## Redistribution and use in source and binary forms, with or without
+## modification, are permitted provided that the following conditions
+## are met:
 ##
-##     * Redistributions of source code must retain the above copyright
-##       notice, this list of conditions and the following disclaimer.
+##    * Redistributions of source code must retain the above copyright
+##      notice, this list of conditions and the following disclaimer.
 ##
-##     * Redistributions in binary form must reproduce the above
-##       copyright notice, this list of conditions and the following
-##       disclaimer in the documentation and/or other materials provided
-##       with the distribution.
+##    * Redistributions in binary form must reproduce the above
+##      copyright notice, this list of conditions and the following
+##      disclaimer in the documentation and/or other materials provided
+##      with the distribution.
 ##
-##     * Neither the name of the University of California, Berkeley nor
-##       the names of its contributors may be used to endorse or promote
-##       products derived from this software without specific prior
-##       written permission.
+##    * Neither the name of the University of California, Berkeley nor
+##      the names of its contributors may be used to endorse or promote
+##      products derived from this software without specific prior
+##      written permission.
 ##
-##  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
-##  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-##  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-##  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND
-##  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-##  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-##  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
-##  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-##  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-##  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-##  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-##  SUCH DAMAGE.
+## THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
+## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+## TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
+## PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND
+## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+## SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+## LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
+## USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+## ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+## OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+## OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+## SUCH DAMAGE.
 
 ## Author: Jason Riedy <ejr@cs.berkeley.edu>
 ## Keywords: linear-algebra norm estimation
 ## Version: 0.2
 
 function [est, v] = condest (varargin)
 
   if (nargin < 1 || nargin > 6)
diff --git a/scripts/linear-algebra/onenormest.m b/scripts/linear-algebra/onenormest.m
--- a/scripts/linear-algebra/onenormest.m
+++ b/scripts/linear-algebra/onenormest.m
@@ -50,50 +50,50 @@
 ## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{condest, norm, cond}
 ## @end deftypefn
 
-## Code originally licensed under
+## Code originally licensed under:
 ##
-##  Copyright (c) 2007, Regents of the University of California
-##  All rights reserved.
+## Copyright (c) 2007, Regents of the University of California
+## All rights reserved.
 ##
-##  Redistribution and use in source and binary forms, with or without
-##  modification, are permitted provided that the following conditions
-##  are met:
+## Redistribution and use in source and binary forms, with or without
+## modification, are permitted provided that the following conditions
+## are met:
 ##
-##     * Redistributions of source code must retain the above copyright
-##       notice, this list of conditions and the following disclaimer.
+##    * Redistributions of source code must retain the above copyright
+##      notice, this list of conditions and the following disclaimer.
 ##
-##     * Redistributions in binary form must reproduce the above
-##       copyright notice, this list of conditions and the following
-##       disclaimer in the documentation and/or other materials provided
-##       with the distribution.
+##    * Redistributions in binary form must reproduce the above
+##      copyright notice, this list of conditions and the following
+##      disclaimer in the documentation and/or other materials provided
+##      with the distribution.
 ##
-##     * Neither the name of the University of California, Berkeley nor
-##       the names of its contributors may be used to endorse or promote
-##       products derived from this software without specific prior
-##       written permission.
+##    * Neither the name of the University of California, Berkeley nor
+##      the names of its contributors may be used to endorse or promote
+##      products derived from this software without specific prior
+##      written permission.
 ##
-##  THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
-##  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
-##  TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-##  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND
-##  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-##  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-##  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
-##  USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
-##  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-##  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
-##  OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
-##  SUCH DAMAGE.
+## THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
+## AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+## TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
+## PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND
+## CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
+## SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
+## LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
+## USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+## ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
+## OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
+## OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+## SUCH DAMAGE.
 
 ## Author: Jason Riedy <ejr@cs.berkeley.edu>
 ## Keywords: linear-algebra norm estimation
 ## Version: 0.2
 
 function [est, v, w, iter] = onenormest (varargin)
 
   if (nargin < 1 || nargin > 4)
diff --git a/scripts/linear-algebra/subspace.m b/scripts/linear-algebra/subspace.m
--- a/scripts/linear-algebra/subspace.m
+++ b/scripts/linear-algebra/subspace.m
@@ -21,19 +21,19 @@
 ## Determine the largest principal angle between two subspaces
 ## spanned by the columns of matrices @var{A} and @var{B}.
 ## @end deftypefn
 
 ## Author: Jaroslav Hajek <highegg@gmail.com>
 
 ## reference:
 ## [1]  Andrew V. Knyazev, Merico E. Argentati:
-##   Principal Angles between Subspaces in an A-Based Scalar Product:
-##  Algorithms and Perturbation Estimates.
-##  SIAM Journal on Scientific Computing, Vol. 23 no. 6, pp. 2008-2040
+## Principal Angles between Subspaces in an A-Based Scalar Product:
+## Algorithms and Perturbation Estimates.
+## SIAM Journal on Scientific Computing, Vol. 23 no. 6, pp. 2008-2040
 ##
 ## other texts are also around...
 
 function ang = subspace (A, B)
 
   if (nargin != 2)
     print_usage ();
   elseif (ndims (A) != 2 || ndims (B) != 2)
diff --git a/scripts/plot/appearance/annotation.m b/scripts/plot/appearance/annotation.m
--- a/scripts/plot/appearance/annotation.m
+++ b/scripts/plot/appearance/annotation.m
@@ -18,139 +18,132 @@
 ## @deftypefn  {Function File} {} annotation (@var{type})
 ## @deftypefnx {Function File} {} annotation ("line", @var{x}, @var{y})
 ## @deftypefnx {Function File} {} annotation ("arrow", @var{x}, @var{y})
 ## @deftypefnx {Function File} {} annotation ("doublearrow", @var{x}, @var{y})
 ## @deftypefnx {Function File} {} annotation ("textarrow", @var{x}, @var{y})
 ## @deftypefnx {Function File} {} annotation ("textbox", @var{pos})
 ## @deftypefnx {Function File} {} annotation ("rectangle", @var{pos})
 ## @deftypefnx {Function File} {} annotation ("ellipse", @var{pos})
+## @deftypefnx {Function File} {} annotation (@dots{}, @var{prop}, @var{val})
 ## @deftypefnx {Function File} {} annotation (@var{hf}, @dots{})
-## @deftypefnx {Function File} {} annotation (@dots{}, @var{prop}, @var{val})
 ## @deftypefnx {Function File} {@var{h} =} annotation (@dots{})
 ## Draw annotations to emphasize parts of a figure.
 ##
-## You may build a default annotation specifying only the type
-## @var{type} of the annotation.  Otherwise you can set the position of
-## the annotation using either @var{x} and @var{y} coordinates for
-## line-based annotations or a position vector @var{pos} for others.
-## In any case, coordinates are interpreted using the @qcode{"units"}
-## property of the annotation objects: the default is
-## @qcode{"normalized"}, which means the lower left hand corner of the
-## figure has coordinates @samp{[0 0]} and the upper right hand corner
+## You may build a default annotation by specifying only the @var{type}
+## of the annotation.
+##
+## Otherwise you can select the type of annotation and then set its position
+## using either @var{x} and @var{y} coordinates for line-based annotations or a
+## position vector @var{pos} for others.  In either case, coordinates are
+## interpreted using the @qcode{"units"} property of the annotation object.
+## The default is @qcode{"normalized"}, which means the lower left hand corner
+## of the figure has coordinates @samp{[0 0]} and the upper right hand corner
 ## @samp{[1 1]}.
 ##
-## The figure on which the annotations should be drawn may be
-## specified by providing its graphics handle @var{hf} before any
-## other argument.  Otherwise annotations are drawn on the current
-## figure.
+## If the first argument @var{hf} is a figure handle, then plot into this
+## figure, rather than the current figure returned by @code{gcf}.
 ##
-## Further arguments can be provided in the form of
-## @var{prop}/@var{val} pairs to customize the annotation appearance
-## and the units in which coordinates are interpreted.  The annotation
-## can also be customized afterward using its graphics handle
-## @var{h} and @code{set} function.
+## Further arguments can be provided in the form of @var{prop}/@var{val} pairs
+## to customize the annotation appearance.
+##
+## The optional return value @var{h} is a graphics handle to the created
+## annotation object.  This can be used with the @code{set} function to
+## customize an existing annotation object.
 ##
 ## All annotation objects share two properties:
 ##
 ## @itemize
-## @item
-##  @qcode{"units"}: the units in which coordinates are interpreted.
-##  Its value may be one of @qcode{"centimeters"} |
-##  @qcode{"characters"} | @qcode{"inches"} | @qcode{"@{normalized@}"}
-##  | @qcode{"pixels"} | @qcode{"points"}.
+## @item @qcode{"units"}: the units in which coordinates are interpreted.@*
+## Its value may be one of @qcode{"centimeters"} | @qcode{"characters"} |
+## @qcode{"inches"} | @qcode{"@{normalized@}"} | @qcode{"pixels"} |
+## @qcode{"points"}.
 ##
-## @item
-##  @qcode{"position"}: a four elements vector [x0 y0 width height]
-##  specifying the coordinates (x0,y0) of the origin of the annotation
-##  object, its width and its height.  The width and height may be
-##  negative, depending on the orientation of the object.
+## @item @qcode{"position"}: a four-element vector [x0 y0 width height].@*
+## The vector specifies the coordinates (x0,y0) of the origin of the annotation
+## object, its width, and its height.  The width and height may be negative,
+## depending on the orientation of the object.
 ##
 ## @end itemize
 ##
 ## Valid annotation types and their specific properties are described
 ## below:
 ##
 ## @table @asis
 ## @item @qcode{"line"}
-##  Constructs a line.  @var{x} and @var{y} must be two
-##  elements vectors specifying the x and y coordinates of the two
-##  ends of the line.
+## Constructs a line.  @var{x} and @var{y} must be two-element vectors
+## specifying the x and y coordinates of the two ends of the line.
 ##
-##  The line can be customized using @qcode{"linewidth"},
-##  @qcode{"linestyle"} and @qcode{"color"} properties the same way
-##  as with @code{line} objects.
+## The line can be customized using @qcode{"linewidth"}, @qcode{"linestyle"},
+## and @qcode{"color"} properties the same way as for @code{line} objects.
 ##
-## @item  @qcode{"arrow"}
-##   Construct an arrow.  The second point in vectors @var{x} and
-##   @var{y} specifies the arrowhead coordinates.
+## @item @qcode{"arrow"}
+## Construct an arrow.  The second point in vectors @var{x} and @var{y}
+## specifies the arrowhead coordinates.
 ##
-##  Besides line properties, the arrowhead can be customized using
-##  @qcode{"headlength"}, @qcode{"headwidth"} and @qcode{"headstyle"}
-##  properties.  Supported values for @qcode{"headstyle"} property are:
-##  [@qcode{"diamond"} | @qcode{"ellipse"} | @qcode{"plain"} |
-##  @qcode{"rectangle"} | @qcode{"vback1"} | @qcode{"@{vback2@}"} |
-##  @qcode{"vback3"}]
-##
-## @item  @qcode{"doublearrow"}
-##   Construct a double arrow.  Vectors @var{x} and @var{y} specify the
-##   arrowheads coordinates.
+## Besides line properties, the arrowhead can be customized using
+## @qcode{"headlength"}, @qcode{"headwidth"}, and @qcode{"headstyle"}
+## properties.  Supported values for @qcode{"headstyle"} property are:
+## [@qcode{"diamond"} | @qcode{"ellipse"} | @qcode{"plain"} |
+## @qcode{"rectangle"} | @qcode{"vback1"} | @qcode{"@{vback2@}"} |
+## @qcode{"vback3"}]
 ##
-##  The line and the arrowhead can be customized as for arrow
-##  annotations but some property names are duplicated:
-##  @qcode{"head1length"}/@qcode{"head2length"},
-##  @qcode{"head1width"}/@qcode{"head2width"}, etc.  The index 1 marks
-##  the properties of the arrowhead at the first point in @var{x} and
-##  @var{y} coordinates.
+## @item @qcode{"doublearrow"}
+## Construct a double arrow.  Vectors @var{x} and @var{y} specify the
+## arrowhead coordinates.
 ##
-## @item  @qcode{"textarrow"}
-##  Construct an arrow with a text label at the opposite of the
-##  arrowhead.
+## The line and the arrowhead can be customized as for arrow annotations, but
+## some property names are duplicated:
+## @qcode{"head1length"}/@qcode{"head2length"},
+## @qcode{"head1width"}/@qcode{"head2width"}, etc.  The index 1 marks the
+## properties of the arrowhead at the first point in @var{x} and @var{y}
+## coordinates.
+##
+## @item @qcode{"textarrow"}
+## Construct an arrow with a text label at the opposite end from the arrowhead.
 ##
-##  The line and the arrowhead can be customized as for arrow
-##  annotations, and the text can be customized using the same
-##  properties as @code{text} graphics objects.  Note however
-##  that some text property names are prefixed with "text" to
-##  distinguish arrow and text properties:
-##  @qcode{"textbackgroundcolor"}, @qcode{"textcolor"},
-##  @qcode{"textedgecolor"}, @qcode{"textlinewidth"},
-##  @qcode{"textmargin"}, @qcode{"textrotation"}.
+## The line and the arrowhead can be customized as for arrow annotations, and
+## the text can be customized using the same properties as @code{text} graphics
+## objects.  Note, however, that some text property names are prefixed with
+## "text" to distinguish them from arrow properties:
+## @qcode{"textbackgroundcolor"}, @qcode{"textcolor"},
+## @qcode{"textedgecolor"}, @qcode{"textlinewidth"},
+## @qcode{"textmargin"}, @qcode{"textrotation"}.
 ##
-## @item  @qcode{"textbox"}
-##  Construct a box with a text inside.  @var{pos} specifies the
-##  @qcode{"position"} property of the annotation.
+## @item @qcode{"textbox"}
+## Construct a box with text inside.  @var{pos} specifies the
+## @qcode{"position"} property of the annotation.
 ##
-##  You may use @qcode{"backgroundcolor"}, @qcode{"edgecolor"},
-##  @qcode{"linestyle"} , @qcode{"linewidth"} properties to customize
-##  the box background color and edges appearance.  A limited set of
-##  @code{text} objects properties is also available: besides
-##  @qcode{"font@dots{}"} properties, you may also use
-##  @qcode{"horizontalalignment"} and @qcode{"verticalalignment"} to
-##  move the text inside the box.
+## You may use @qcode{"backgroundcolor"}, @qcode{"edgecolor"},
+## @qcode{"linestyle"}, and @qcode{"linewidth"} properties to customize
+## the box background color and edge appearance.  A limited set of @code{text}
+## objects properties are also available; Besides @qcode{"font@dots{}"}
+## properties, you may also use @qcode{"horizontalalignment"} and
+## @qcode{"verticalalignment"} to position the text inside the box.
 ##
-##  Finally the  @qcode{"fitboxtotext"} property controls the actual
-##  extent of the box.  If @qcode{"on"} (the default) the
-##  box limits are fitted to the text extent.
+## Finally, the @qcode{"fitboxtotext"} property controls the actual extent of
+## the box.  If @qcode{"on"} (the default) the box limits are fitted to the
+## text extent.
 ##
-## @item  @qcode{"rectangle"}
-##  Construct a rectangle.  @var{pos} specifies the
-##  @qcode{"position"} property of the annotation.
+## @item @qcode{"rectangle"}
+## Construct a rectangle.  @var{pos} specifies the @qcode{"position"} property
+## of the annotation.
 ##
-##  You may use @qcode{"facecolor"}, @qcode{"color"},
-##  @qcode{"linestyle"} and @qcode{"linewidth"} properties to customize
-##  the rectangle background color and edges appearance.
+## You may use @qcode{"facecolor"}, @qcode{"color"}, @qcode{"linestyle"}, and
+## @qcode{"linewidth"} properties to customize the rectangle background color
+## and edge appearance.
 ##
-## @item  @qcode{"ellipse"}
-##  Construct an ellipse.  @var{pos} specifies the
-##  @qcode{"position"} property of the annotation.
+## @item @qcode{"ellipse"}
+## Construct an ellipse.  @var{pos} specifies the @qcode{"position"} property
+## of the annotation.
 ##
-##  See @qcode{"rectangle"} annotations for customization.
+## See @qcode{"rectangle"} annotations for customization.
 ## @end table
 ##
-## @seealso{xlabel, title, legend, colorbar}
+## @seealso{xlabel, ylabel, zlabel, title, text, gtext, legend, colorbar}
 ## @end deftypefn
 
 function varargout = annotation (varargin)
 
   objtype = "";
   hf = [];
   lims = [];
   x = y = [];
diff --git a/scripts/signal/sinc.m b/scripts/signal/sinc.m
--- a/scripts/signal/sinc.m
+++ b/scripts/signal/sinc.m
@@ -20,17 +20,17 @@
 ## @deftypefn {Function File} {} sinc (@var{x})
 ## Compute the sinc function.
 ##
 ## Return
 ## @tex
 ## $ \sin (\pi x)/(\pi x)$.
 ## @end tex
 ## @ifnottex
-##  sin (pi*x) / (pi*x).
+## sin (pi*x) / (pi*x).
 ## @end ifnottex
 ## @end deftypefn
 
 ## Author: jwe ???
 
 function result = sinc (x)
 
   if (nargin != 1)
diff --git a/scripts/special-matrix/invhilb.m b/scripts/special-matrix/invhilb.m
--- a/scripts/special-matrix/invhilb.m
+++ b/scripts/special-matrix/invhilb.m
@@ -35,33 +35,33 @@
 ##               \left( \matrix{ n \cr k } \right)
 ## $$
 ## @end tex
 ## @ifnottex
 ##
 ## @example
 ## @group
 ##
-##             (i+j)         /n+i-1\  /n+j-1\   /i+j-2\ 2
-##  A(i,j) = -1      (i+j-1)(       )(       ) (       )
-##                           \ n-j /  \ n-i /   \ i-2 /
+##            (i+j)         /n+i-1\  /n+j-1\   /i+j-2\ 2
+## A(i,j) = -1      (i+j-1)(       )(       ) (       )
+##                          \ n-j /  \ n-i /   \ i-2 /
 ##
-##         = p(i) p(j) / (i+j-1)
+##        = p(i) p(j) / (i+j-1)
 ##
 ## @end group
 ## @end example
 ##
 ## @noindent
 ## where
 ##
 ## @example
 ## @group
-##              k  /k+n-1\   /n\
-##     p(k) = -1  (       ) (   )
-##                 \ k-1 /   \k/
+##          k  /k+n-1\   /n\
+## p(k) = -1  (       ) (   )
+##             \ k-1 /   \k/
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ## The validity of this formula can easily be checked by expanding the binomial
 ## coefficients in both formulas as factorials.  It can be derived more
 ## directly via the theory of Cauchy matrices.  See @nospell{J. W. Demmel},
 ## @cite{Applied Numerical Linear Algebra}, p. 92.
diff --git a/scripts/statistics/base/gls.m b/scripts/statistics/base/gls.m
--- a/scripts/statistics/base/gls.m
+++ b/scripts/statistics/base/gls.m
@@ -24,17 +24,17 @@
 ## @tex
 ## $y = x b + e$
 ## with $\bar{e} = 0$ and cov(vec($e$)) = $(s^2)o$,
 ## @end tex
 ## @ifnottex
 ## @w{@math{y = x*b + e}} with @math{mean (e) = 0} and
 ## @math{cov (vec (e)) = (s^2) o},
 ## @end ifnottex
-##  where
+## where
 ## @tex
 ## $y$ is a $t \times p$ matrix, $x$ is a $t \times k$ matrix, $b$ is a $k
 ## \times p$ matrix, $e$ is a $t \times p$ matrix, and $o$ is a $tp \times
 ## tp$ matrix.
 ## @end tex
 ## @ifnottex
 ## @math{y} is a @math{t} by @math{p} matrix, @math{x} is a @math{t} by
 ## @math{k} matrix, @math{b} is a @math{k} by @math{p} matrix, @math{e}
diff --git a/scripts/statistics/base/ols.m b/scripts/statistics/base/ols.m
--- a/scripts/statistics/base/ols.m
+++ b/scripts/statistics/base/ols.m
@@ -25,17 +25,17 @@
 ## $y = x b + e$
 ## with
 ## $\bar{e} = 0$, and cov(vec($e$)) = kron ($s, I$)
 ## @end tex
 ## @ifnottex
 ## @w{@math{y = x*b + e}} with
 ## @math{mean (e) = 0} and @math{cov (vec (e)) = kron (s, I)}.
 ## @end ifnottex
-##  where
+## where
 ## @tex
 ## $y$ is a $t \times p$ matrix, $x$ is a $t \times k$ matrix,
 ## $b$ is a $k \times p$ matrix, and $e$ is a $t \times p$ matrix.
 ## @end tex
 ## @ifnottex
 ## @math{y} is a @math{t} by @math{p} matrix, @math{x} is a @math{t} by @math{k}
 ## matrix, @math{b} is a @math{k} by @math{p} matrix, and @math{e} is a
 ## @math{t} by @math{p} matrix.
