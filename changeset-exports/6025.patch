# HG changeset patch
# User jwe
# Date 1159903269 0
#      Tue Oct 03 19:21:09 2006 +0000
# Node ID bb0c9f97fe4fcb17a5b05722b581efc8cb2514be
# Parent  500d884ae3730687568c08dd69b61022c4f53c36
[project @ 2006-10-03 19:21:09 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,12 @@
 2006-10-03  John W. Eaton  <jwe@octave.org>
 
+	* configure.in: Warn if PCRE library is not found.
+
 	* configure.in: Include CAMD_LIBS, AMD_LIBS, and REGEX_LIBS in the
 	summary.
 
 2006-10-03  David Bateman  <dbateman@free.fr>
 
 	* configure.in: Check for libcamd.
 	* Makeconf.in (CAMD_LIBS): New variable.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.522 $)
+AC_REVISION($Revision: 1.523 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -411,16 +411,19 @@ if test $WITH_PCRE = yes ; then
   AC_CHECK_LIB(pcre, pcre_compile, WITH_PCRE=yes, WITH_PCRE=no)
   if test $WITH_PCRE = yes ; then
     AC_DEFINE(HAVE_PCRE, 1, [Define if PCRE is available.])
     if test $WITH_PCRE_CONFIG = yes ; then
       REGEX_LIBS=`pcre-config --cflags --libs`
     else
       REGEX_LIBS="-lpcre"
     fi
+  else
+    warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
+    AC_MSG_WARN($warn_pcre)
   fi
 fi
 AC_CHECK_FUNCS(regexec, WITH_REGEX=yes , [
   AC_CHECK_LIB(regex, regexec, WITH_REGEX=yes, WITH_REGEX=no)])
 if test $WITH_REGEX = yes ; then
   AC_DEFINE(HAVE_REGEX, 1, [Define if regex is available.])
   if test $WITH_PCRE = no ; then
     AC_CHECK_FUNCS(regexec, REGEX_LIBS= , [
@@ -1900,16 +1903,21 @@ if test -n "$warn_cxsparse"; then
   warn_msg_printed=true
 fi
 
 if test -n "$warn_hdf5"; then
   AC_MSG_WARN($warn_hdf5)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_pcre"; then
+  AC_MSG_WARN($warn_pcre)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_zlib"; then
   AC_MSG_WARN($warn_zlib)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_ghostscript"; then
   AC_MSG_WARN($warn_ghostscript)
   warn_msg_printed=true
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2006-10-03  Søren Hauberg  <soren@hauberg.org>
+
+	* pkg/pkg.m: Avoid calling addpath with no args.
+
 2006-10-03  Bill Denney  <denney@seas.upenn.edu>
 
  	* audio/loadaudio.m, control/base/nyquist.m,
  	control/system/__zp2ssg2__.m, linear-algebra/cross.m,
  	linear-algebra/krylov.m, statistics/base/center.m,
  	statistics/base/median.m, statistics/base/std.m,
  	statistics/base/var.m, testfun/test.m: 	Use the new find syntax to
 	find first or last element matching a condition.
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -1063,17 +1063,19 @@ function load_packages(files, handle_dep
 		    break;
                 endif
             endfor
 	    if (isempty(dirs{j}))
               error("Package %s is not installed\n", files{j});
             endif
         endfor
     endif
-    addpath(dirs{:});
+    if (length(dirs) > 0)
+        addpath(dirs{:});
+    endif
 
     ## Add local binaries, if any, to the EXEC_PATH
     for i = 1:length(dirs)
        if (exist ([dirs{i} "/bin"],"dir"))
          EXEC_PATH ([dirs{i} "/bin:" EXEC_PATH()]);
        endif
     endfor
 endfunction
