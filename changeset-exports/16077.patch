# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1361406581 18000
#      Wed Feb 20 19:29:41 2013 -0500
# Node ID 39129305b914ef480e7908a861f66d8cb1b30cbf
# Parent  c90c9623b20f297c1404f5f6ccc63f6b8c91216b
provide some undocumented matlab behavior for linspace (bug #38151)

* data.cc (Flinspace): Accept linspace (a, b, []).

diff --git a/libinterp/interpfcn/data.cc b/libinterp/interpfcn/data.cc
--- a/libinterp/interpfcn/data.cc
+++ b/libinterp/interpfcn/data.cc
@@ -4724,17 +4724,27 @@ if fewer than two values are requested.\
 
   if (nargin != 2 && nargin != 3)
     {
       print_usage ();
       return retval;
     }
 
   if (nargin == 3)
-    npoints = args(2).idx_type_value ();
+    {
+      // Apparently undocumented Matlab.  If the third arg is an empty
+      // numeric value, the number of points defaults to 1.
+
+      octave_value arg_3 = args(2);
+
+      if (arg_3.is_numeric_type () && arg_3.is_empty ())
+        npoints = 1;
+      else
+        npoints = arg_3.idx_type_value ();
+    }
 
   if (! error_state)
     {
       octave_value arg_1 = args(0);
       octave_value arg_2 = args(1);
 
       if (arg_1.is_single_type () || arg_2.is_single_type ())
         {
@@ -4765,16 +4775,18 @@ if fewer than two values are requested.\
 %! x2 = linspace (1, 2, 10);
 %! x3 = linspace (1, -2, 10);
 %! assert (size (x1) == [1, 100] && x1(1) == 1 && x1(100) == 2);
 %! assert (size (x2) == [1, 10] && x2(1) == 1 && x2(10) == 2);
 %! assert (size (x3) == [1, 10] && x3(1) == 1 && x3(10) == -2);
 
 %assert (linspace ([1, 2; 3, 4], 5, 6), linspace (1, 5, 6))
 
+%assert (linspace (0, 1, []), 1)
+
 %!error linspace ()
 %!error linspace (1, 2, 3, 4)
 */
 
 // FIXME -- should accept dimensions as separate args for N-d
 // arrays as well as 1-d and 2-d arrays.
 
 DEFUN (resize, args, ,
