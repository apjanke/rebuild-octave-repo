# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1289981043 18000
#      Wed Nov 17 03:04:03 2010 -0500
# Node ID fe11e2b9d48a7054d62dfbdfe1f9b6cb6cbf652d
# Parent  795c97ace02c1215a62e88ab812769fadf2f1d29
eliminate text engine memory leak

diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -5038,16 +5038,18 @@ text::properties::update_text_extent (vo
   // FIXME: parsed content should be cached for efficiency
   
   elt = text_parser_none ().parse (get_string ());
 #ifdef HAVE_FONTCONFIG
   text_renderer.set_font (*this);
 #endif
   box = text_renderer.get_extent (elt, get_rotation ());
 
+  delete elt;
+
   Matrix ext (1, 4, 0.0);
 
   // FIXME: also handle left and bottom components
 
   ext(0) = ext(1) = 1;
   ext(2) = box(0);
   ext(3) = box(1);
 
diff --git a/src/txt-eng.h b/src/txt-eng.h
--- a/src/txt-eng.h
+++ b/src/txt-eng.h
@@ -174,15 +174,20 @@ class
 OCTINTERP_API
 text_parser_none : public text_parser
 {
 public:
   text_parser_none (void) : text_parser () { }
 
   ~text_parser_none (void) { }
 
+  // FIXME: is it possible to use reference counting to manage the
+  // memory for the object returned by the text parser?  That would be
+  // preferable to having to know when and where to delete the object it
+  // creates...
+
   text_element* parse (const std::string& s)
     {
       return new text_element_string (s);
     }
 };
 
 #endif
