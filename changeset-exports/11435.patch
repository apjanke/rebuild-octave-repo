# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1294108609 28800
#      Mon Jan 03 18:36:49 2011 -0800
# Node ID 20f53b3a558f9232276fbb58d00489731962b6ff
# Parent  1f54ee6760b55058a568792bde8e2337838abca3
Add tests for sparse forms of logical matrices to islogical, isnumeric.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-03  Rik  <octave@nomad.inbox5.com>
+
+	* data.cc (islogical, isnumeric): Add tests to check sparse forms of
+	logical matrices.
+
 2011-01-02  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-bool-sparse.h (octave_sparse_bool_matrix::is_numeric_type): New
 	virtual method override.
 
 2010-12-31  Rik  <octave@nomad.inbox5.com>
 
 	* toplev.cc (system): Add additional calling form "shell_cmd" to
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2518,16 +2518,18 @@ DEFALIAS (isbool, islogical);
 %!assert (islogical(false), true)
 %!assert (islogical([true, false]), true)
 %!assert (islogical(1), false)
 %!assert (islogical(1i), false)
 %!assert (islogical([1,1]), false)
 %!assert (islogical(single(1)), false)
 %!assert (islogical(single(1i)), false)
 %!assert (islogical(single([1,1])), false)
+%!assert (islogical(sparse ([true, false])), true)
+%!assert (islogical(sparse ([1, 0])), false)
 
  */
 
 DEFUN (isinteger, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} isinteger (@var{x})\n\
 Return true if @var{x} is an integer object (int8, uint8, int16, etc.).\n\
 Note that @w{@code{isinteger (14)}} is false because numeric constants in\n\
@@ -2924,16 +2926,34 @@ numeric.\n\
   if (args.length () == 1)
     retval = args(0).is_numeric_type ();
   else
     print_usage ();
 
   return retval;
 }
 
+/*
+
+%!assert (isnumeric(1), true)
+%!assert (isnumeric(1i), true)
+%!assert (isnumeric([1,1]), true)
+%!assert (isnumeric(single(1)), true)
+%!assert (isnumeric(single(1i)), true)
+%!assert (isnumeric(single([1,1])), true)
+%!assert (isnumeric(int8(1)), true)
+%!assert (isnumeric(uint8([1,1])), true)
+%!assert (isnumeric("Hello World"), false)
+%!assert (isnumeric(true), false)
+%!assert (isnumeric(false), false)
+%!assert (isnumeric([true, false]), false)
+%!assert (isnumeric(sparse ([true, false])), false)
+
+*/
+
 DEFUN (ismatrix, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} ismatrix (@var{a})\n\
 Return true if @var{a} is a numeric, logical, or character matrix.\n\
 Scalars (1x1 matrices) and vectors (1xN or Nx1 matrices) are subsets\n\
 of the more general N-dimensional matrix and @code{ismatrix} will return\n\
 true for these objects as well.\n\
 @seealso{isscalar, isvector, iscell, isstruct, issparse}\n\
