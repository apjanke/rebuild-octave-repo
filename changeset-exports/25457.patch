# HG changeset patch
# User Rik <rik@octave.org>
# Date 1528816522 25200
#      Tue Jun 12 08:15:22 2018 -0700
# Node ID 49fa88321686005fe62b9dcfe7b379e67a094b92
# Parent  b09f306fcd122c43e9f9631d257e5f1bae05f239
# Parent  4c4a49bffdc596efc3558da9225e462a5791c921
maint: merge stable to default.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -716,20 +716,20 @@ is equivalent to @code{fseek (@var{fid},
 DEFMETHOD (fseek, interp, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} fseek (@var{fid}, @var{offset})
 @deftypefnx {} {} fseek (@var{fid}, @var{offset}, @var{origin})
 @deftypefnx {} {@var{status} =} fseek (@dots{})
 Set the file pointer to the location @var{offset} within the file @var{fid}.
 
 The pointer is positioned @var{offset} characters from the @var{origin}, which
-may be one of the predefined variables @w{@code{SEEK_SET}} (beginning),
-@w{@code{SEEK_CUR}} (current position), or @w{@code{SEEK_END}} (end of file) or
-strings @nospell{@qcode{"bof"}}, @nospell{@qcode{"cof"}}, or
-@nospell{@qcode{"eof"}}.  If @var{origin} is omitted, @w{@code{SEEK_SET}} is
+may be one of the predefined variables @w{@qcode{SEEK_SET}} (beginning),
+@w{@qcode{SEEK_CUR}} (current position), or @w{@qcode{SEEK_END}} (end of file)
+or strings @nospell{@qcode{"bof"}}, @nospell{@qcode{"cof"}}, or
+@nospell{@qcode{"eof"}}.  If @var{origin} is omitted, @w{@qcode{SEEK_SET}} is
 assumed.  @var{offset} may be positive, negative, or zero but not all
 combinations of @var{origin} and @var{offset} can be realized.
 
 @code{fseek} returns 0 on success and -1 on error.
 @seealso{fskipl, frewind, ftell, fopen, SEEK_SET, SEEK_CUR, SEEK_END}
 @end deftypefn */)
 {
   int nargin = args.length ();
diff --git a/scripts/+containers/Map.m b/scripts/+containers/Map.m
--- a/scripts/+containers/Map.m
+++ b/scripts/+containers/Map.m
@@ -369,17 +369,17 @@ classdef Map < handle
               sref = this.ValueType;
             case {"isKey", "remove"}
               if (numel (s) < 2 || numel (s(2).subs) != 1)
                 error ("containers.Map: input argument 'KeySet' is missing");
               endif
               sref = feval (s(1).subs, this, s(2).subs{1});
               s = s(3:end);
             otherwise
-              error ("containters.Map: unknown property '%s'", s(1).subs);
+              error ("containers.Map: unknown property '%s'", s(1).subs);
           endswitch
         case "()"
           if (isempty (s(1).subs))
             error ("containers.Map: no key specified");
           endif
           key = s(1).subs{1};
           if ((! this.numeric_keys && ! ischar (key))
               || (this.numeric_keys && (! (isnumeric (key) || islogical (key))
