# HG changeset patch
# User jwe
# Date 1067570888 0
#      Fri Oct 31 03:28:08 2003 +0000
# Node ID c8c06e5ef5db8f71b6924658048c351f0112ba40
# Parent  4623ef02a6055496d19a9f3ddcea7b1bec5ac87a
[project @ 2003-10-31 03:28:08 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -35,16 +35,18 @@ Software Foundation, 59 Temple Place - S
 #include <iostream>
 
 #include "Array.h"
 #include "Array-flags.h"
 #include "Range.h"
 #include "idx-vector.h"
 #include "lo-error.h"
 
+#include "ArrayN-inline.h"
+
 // One dimensional array class.  Handles the reference counting for
 // all the derived classes.
 
 template <class T>
 Array<T>::~Array (void)
 {
   if (--rep->count <= 0)
     delete rep;
@@ -1931,18 +1933,16 @@ Array<T>::index (idx_vector& idx_i, idx_
 	}
     }
 
   // idx_vector::freeze() printed an error message for us.
 
   return retval;
 }
 
-#include "ArrayN-inline.h"
-
 template <class T>
 Array<T>
 Array<T>::index (Array<idx_vector>& ra_idx, int resize_ok, const T& rfv) const
 {
   // This function handles all calls with more than one idx.
   // For (3x3x3), the call can be A(2,5), A(2,:,:), A(3,2,3) etc.
 
   Array<T> retval;
