# HG changeset patch
# User jwe
# Date 1191955156 0
#      Tue Oct 09 18:39:16 2007 +0000
# Node ID deb175b6e4a1cd8a7a1a167816f720ba34d55a92
# Parent  4ad04ff722d76956e71fabf237e417ba6edbe795
[project @ 2007-10-09 18:39:15 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,19 @@
+2007-10-09  John W. Eaton  <jwe@octave.org>
+
+	* gdbinit.in: Delete.
+	* octMakefile.in (DISTFILES): Remove it from the list.
+	(.gdbinit): Delete rule.
+	(maintainer-clean, distclean): No need to delete .gdbinit.
+
+2007-10-09  Kim Hansen  <kimhanse@gmail.com>
+
+        * run-octave.in: Use gdb with --args, not .gdbinit.
+
 2007-10-08  John W. Eaton  <jwe@octave.org>
 
 	* emacs/octave-hlp.el, emacs/octave-inf.el, emacs/octave-mod.el:
 	Sync with GNU Emacs versions.
 	* emacs/octave-mod.el: Delete last two args from calls to
 	define-abbrev.
 
 2007-10-06  John W. Eaton  <jwe@octave.org>
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -30,17 +30,17 @@ BUILT_DISTFILES = $(BUILT_CONF_DISTFILES
 
 DISTFILES = $(CONF_DISTFILES) \
 	COPYING FLEX.patch INSTALL NEWS \
 	NEWS.[0-9] PROJECTS README README.Linux README.Windows \
 	README.Cygwin README.MSVC \
 	README.MachTen README.kpathsea ROADMAP SENDING-PATCHES \
 	THANKS move-if-change octave-sh octave-bug.in \
 	octave-config.in mk-opts.pl mkinstalldirs \
-	mkoctfile.in run-octave.in gdbinit.in ChangeLog ChangeLog.[0-9]
+	mkoctfile.in run-octave.in ChangeLog ChangeLog.[0-9]
 
 # Subdirectories in which to run `make all'.
 SUBDIRS = @DLFCN_DIR@ libcruft liboctave src scripts doc examples
 
 # Subdirectories in which to run `make all'.
 INSTALL_SUBDIRS = libcruft liboctave src scripts doc examples
 
 # Subdirectories in which to run `make conf-dist'.
@@ -88,19 +88,16 @@ octave-config: octave-config.in Makeconf
 mkoctfile: mkoctfile.in Makeconf octMakefile
 	@$(do-subst-config-vals)
 	chmod a+rx $@
 
 run-octave: run-octave.in Makeconf octMakefile
 	@$(do-subst-script-vals)
 	chmod a+rx "$@"
 
-.gdbinit: gdbinit.in Makeconf octMakefile
-	$(do-subst-script-vals)
-
 check:
 	$(MAKE) -C test $@
 .PHONY: check
 
 octave.info:
 	$(MAKE) -C doc/interpreter octave.info
 .PHONY: octave.info
 
@@ -150,17 +147,17 @@ install install-strip uninstall tags TAG
 clean mostlyclean distclean maintainer-clean::
 	$(foreach d, $(CLEANSUBDIRS), $(do-subdir-for-command))
 .PHONY: clean mostlyclean distclean maintainer-clean
 
 maintainer-clean distclean::
 	rm -f octMakefile Makefile Makeconf Makefrag.f77 Makerules.f77
 	rm -f config.cache config.h config.log config.status
 	rm -rf autom4te.cache
-	rm -f $(SHELL_SCRIPTS) .gdbinit
+	rm -f $(SHELL_SCRIPTS)
 	rm -f unistd.h
 
 maintainer-clean::
 	rm -f configure config.h.in BUGS INSTALL.OCTAVE
 
 # Rules for making a source distribution.
 
 dist-info-files: INSTALL.OCTAVE BUGS
diff --git a/run-octave.in b/run-octave.in
--- a/run-octave.in
+++ b/run-octave.in
@@ -30,22 +30,17 @@ d4_path=`echo "$d4_list" | $AWK '{ t = (
 LOADPATH="$d1_path:$d2_path:$d3_path:$d4_path"
 IMAGEPATH="$top_srcdir/scripts/image"
 INFOFILE="$builddir/doc/interperter/octave.info"
 
 args="--no-initial-path --path=\"$LOADPATH\" --image-path=\"$IMAGEPATH\" --info-file=\"$INFOFILE\""
 
 if [ $# -gt 0 ]; then
   if [ "x$1" = "x-g" ]; then
-    driver="gdb"
-    if [ `/bin/pwd` = "$builddir" ]; then
-      sed "s|^set args.*$|set args $args|" .gdbinit > .gdbinit-tmp
-      mv .gdbinit-tmp .gdbinit
-    fi
-    args=""
+    driver="gdb --args"
     shift
   elif [ "x$1" = "x-valgrind" ]; then
     driver="valgrind --tool=memcheck"
     shift
   elif [ "x$1" = "x-strace" ]; then
     driver="strace -o octave.trace"
     shift
   fi
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-10-09:  Kim Hansen  <kimhanse@gmail.com>
+
+        * general/repmat.m: Handle sparse input.  Add tests.
+
 2007-10-09  John W. Eaton  <jwe@octave.org>
 
 	* audio/wavwrite.m: Accept arguments in compatible order.
 
 2007-10-08  David Bateman  <dbateman@free.fr>
 
 	* general/interp2.m: Relax test for values outside the grid to
 	allow monotonically decreasing abscissa as well.
diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -15,16 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} repmat (@var{A}, @var{m}, @var{n})
 ## @deftypefnx {Function File} {} repmat (@var{A}, [@var{m} @var{n}])
+## @deftypefnx {Function File} {} repmat (@var{A}, [@var{m} @var{n} @var{p} ...])
 ## Form a block matrix of size @var{m} by @var{n}, with a copy of matrix
 ## @var{A} as each element.  If @var{n} is not specified, form an 
 ## @var{m} by @var{m} block matrix.
 ## @end deftypefn
 
 ## Author: Paul Kienzle <pkienzle@kienzle.powernet.co.uk>
 ## Created: July 2000
 
@@ -64,18 +65,23 @@ function x = repmat (a, m, n)
 	  cidx{i} = ones (1,idx(i));
 	endfor
 	x = a (cidx{:});
       endif
     endif
   elseif (ndims (a) == 2 && length (idx) < 3)
     if (ischar (a))
       x = char (kron (ones (idx), toascii (a)));
-    elseif (strcmp (class(a), "double")) 
-      x = kron (ones (idx), a);
+    elseif (strcmp (class(a), "double"))
+      ## FIXME -- DISPATCH.
+      if (issparse (a))
+        x = spkron (ones (idx), a);
+      else
+        x = kron (ones (idx), a);
+      endif
     else
       aidx = size(a);
       x = a (kron (ones (1, idx(1)), 1:aidx(1)),  
 	     kron (ones (1, idx(2)), 1:aidx(2)));
     endif
   else
     aidx = size(a);
     if (length(aidx) > length(idx))
@@ -86,8 +92,47 @@ function x = repmat (a, m, n)
     cidx = cell (1, length (aidx));
     for i=1:length(aidx)
       cidx{i} = kron (ones (1, idx(i)), 1:aidx(i));
     endfor
     x = a (cidx{:});
   endif
 
 endfunction
+
+# Test various methods of providing size parameters
+%!shared x
+%! x = [1 2;3 4];
+%!assert(repmat(x, [1 1]), repmat(x, 1));
+%!assert(repmat(x, [3 3]), repmat(x, 3));
+%!assert(repmat(x, [1 1]), repmat(x, 1, 1));
+%!assert(repmat(x, [1 3]), repmat(x, 1, 3));
+%!assert(repmat(x, [3 1]), repmat(x, 3, 1));
+%!assert(repmat(x, [3 3]), repmat(x, 3, 3));
+
+# Tests for numel==1 case:
+%!shared x, r
+%! x = [ 65 ];
+%! r = kron(ones(2,2), x);
+%!assert(r, repmat(x, [2 2]));
+%!assert(char(r), repmat(char(x), [2 2]));
+%!assert(int8(r), repmat(int8(x), [2 2]));
+
+# Tests for ndims==2 case:
+%!shared x, r
+%! x = [ 65 66 67 ];
+%! r = kron(ones(2,2), x);
+%!assert(r, repmat(x, [2 2]));
+%!assert(char(r), repmat(char(x), [2 2]));
+%!assert(int8(r), repmat(int8(x), [2 2]));
+
+# Tests for dim>2 case:
+%!shared x, r
+%! x = [ 65 66 67 ];
+%! r = kron(ones(2,2), x);
+%! r(:,:,2) = r(:,:,1);
+%!assert(r, repmat(x, [2 2 2]));
+%!assert(char(r), repmat(char(x), [2 2 2]));
+%!assert(int8(r), repmat(int8(x), [2 2 2]));
+
+# Test that sparsity is kept
+%!assert(sparse(4,4), repmat(sparse(2,2),[2 2]));
+
