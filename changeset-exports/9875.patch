# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1259237859 -3600
#      Thu Nov 26 13:17:39 2009 +0100
# Node ID 47f36dd27203d8d67bb0da48ca48c25621c4c149
# Parent  90bc0cc4518f350d6f32404af98299059d20d3ce
randomize initial guess in normest

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-26  Jaroslav Hajek  <highegg@gmail.com>
+
+	* linear-algebra/normest.m: Randomize initial vector.
+
 2009-11-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* linear-algebra/dot.m: Remove.
 	* linear-algebra/module.mk: Update.
 
 2009-11-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/qp.m: Fix matrix tests.
diff --git a/scripts/linear-algebra/normest.m b/scripts/linear-algebra/normest.m
--- a/scripts/linear-algebra/normest.m
+++ b/scripts/linear-algebra/normest.m
@@ -37,16 +37,20 @@ function [e, c] = normest (A, tol = 1e-6
     A = double (A);
   endif
   tol = max (tol, eps (class (A)));
   c = 0;
   x = norm (A, "columns").';
   e = norm (x);
   if (e > 0)
     [m, n] = size (A);
+    ## Randomize x to avoid bad guesses for important matrices.
+    ## FIXME: can we do something smarter?
+    x .*= randn (n, 1);
+    e = norm (x);
     x /= e;
     e0 = 0;
     while (abs (e - e0) > tol * e)
       e0 = e;
       y = A*x;
       e = norm (y);
       if (e == 0)
         x = rand (n, 1);
