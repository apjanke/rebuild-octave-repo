# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1519477507 -3600
#      Sat Feb 24 14:05:07 2018 +0100
# Node ID 9421e891294ec6f81fcdad066d21c1b8b37a70b6
# Parent  d331650ce3899b4b1b483b38b4319a96dd978ee3
fix truncated startup message in terminal widget on windows (bug #53189)

* terminal-dock-widget.cc (ctor): set initial terminal size

diff --git a/libgui/src/terminal-dock-widget.cc b/libgui/src/terminal-dock-widget.cc
--- a/libgui/src/terminal-dock-widget.cc
+++ b/libgui/src/terminal-dock-widget.cc
@@ -20,17 +20,20 @@ along with Octave; see the file COPYING.
 <https://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
+#include <QDesktopWidget>
+
 #include "terminal-dock-widget.h"
+#include "resource-manager.h"
 
 namespace octave
 {
   terminal_dock_widget::terminal_dock_widget (QWidget *p)
     : octave_dock_widget (p), m_terminal (QTerminal::create (p))
   {
     m_terminal->setObjectName ("OctaveTerminal");
     m_terminal->setFocusPolicy (Qt::StrongFocus);
@@ -43,16 +46,41 @@ namespace octave
     setFocusProxy (m_terminal);
 
     connect (m_terminal, SIGNAL (interrupt_signal (void)),
              this, SLOT (terminal_interrupt (void)));
 
     // Connect the visibility signal to the terminal for dis-/enabling timers
     connect (this, SIGNAL (visibilityChanged (bool)),
              m_terminal, SLOT (handle_visibility_changed (bool)));
+
+    // Chose a reasonable size at startup in order to avoid truncated
+    // startup messages
+    QSettings *settings = resource_manager::get_settings ();
+
+    QFont font = QFont ();
+    font.setStyleHint (QFont::TypeWriter);
+    font.setFamily
+      (settings->value ("terminal/fontName", "Courier New").toString ());
+    font.setPointSize (settings->value ("terminal/fontSize", 10).toInt ());
+
+    QFontMetrics metrics(font);
+
+    int win_x =  metrics.maxWidth()*80;
+    int win_y =  metrics.height()*25;
+
+    int max_x = QApplication::desktop ()->screenGeometry (this).width ();
+    int max_y = QApplication::desktop ()->screenGeometry (this).height ();
+
+    if (win_x > max_x)
+      win_x = max_x;
+    if (win_y > max_y)
+      win_y = max_y;
+
+    setGeometry (0, 0, win_x, win_y);
   }
 
   terminal_dock_widget::~terminal_dock_widget (void)
   {
     delete m_terminal;
   }
 
   bool terminal_dock_widget::has_focus (void) const
