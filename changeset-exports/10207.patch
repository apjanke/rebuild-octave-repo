# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1264594406 -3600
#      Wed Jan 27 13:13:26 2010 +0100
# Node ID 76a880a588ce196f1ef505462d5d9940e6d23d05
# Parent  37a08e0ce2dcecc92932e76f1f5153eb5aacaaa0
error when using ~ in matrix expression

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-27  Jaroslav Hajek  <highegg@gmail.com>
+
+	* oct-parse.yy (validate_matrix_row): New static helper func.
+	(cell_or_matrix_row): Call it here.
+
 2010-01-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* oct-lvalue.h (octave_lvalue::is_black_hole): New method.
 	(octave_lvalue::black_hole): New field.
 	(octave_lvalue::is_defined, octave_lvalue::is_undefined,
 	octave_lvalue::is_map): Make const.
 	(octave_lvalue::index_set): Remove field.
 	(octave_lvalue::octave_lvalue, octave_lvalue::operator =): Correctly
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -310,16 +310,20 @@ make_indirect_ref (tree_expression *expr
 // Make an indirect reference expression with dynamic field name.
 static tree_index_expression *
 make_indirect_ref (tree_expression *expr, tree_expression *field);
 
 // Make a declaration command.
 static tree_decl_command *
 make_decl_command (int tok, token *tok_val, tree_decl_init_list *lst);
 
+// Validate argument list forming a matrix or cell row.
+static tree_argument_list *
+validate_matrix_row (tree_argument_list *row);
+
 // Finish building a matrix list.
 static tree_expression *
 finish_matrix (tree_matrix *m);
 
 // Finish building a cell list.
 static tree_expression *
 finish_cell (tree_cell *c);
 
@@ -709,19 +713,19 @@ cell_rows1	: cell_or_matrix_row
 		  {
 		    $1->append ($3);
 		    $$ = $1;
 		  }
 		;
 
 cell_or_matrix_row
 		: arg_list
-		  { $$ = $1; }
+		  { $$ = validate_matrix_row ($1); }
 		| arg_list ','	// Ignore trailing comma.
-		  { $$ = $1; }
+		  { $$ = validate_matrix_row ($1); }
 		;
 
 fcn_handle	: '@' FCN_HANDLE
 		  {
 		    $$ = make_fcn_handle ($2);
 		    lexer_flags.looking_at_function_handle--;
 		  }
 		;
@@ -3099,16 +3103,24 @@ make_decl_command (int tok, token *tok_v
     default:
       panic_impossible ();
       break;
     }
 
   return retval;
 }
 
+static tree_argument_list *
+validate_matrix_row (tree_argument_list *row)
+{
+  if (row && row->has_magic_tilde ())
+    yyerror ("invalid use of tilde (~) in matrix expression");
+  return row;
+}
+
 // Finish building a matrix list.
 
 static tree_expression *
 finish_matrix (tree_matrix *m)
 {
   tree_expression *retval = m;
 
   unwind_protect frame;
