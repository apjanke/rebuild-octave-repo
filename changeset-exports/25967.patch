# HG changeset patch
# User Marco Caliari <marco.caliari@univr.it>
# Date 1539967598 -7200
#      Fri Oct 19 18:46:38 2018 +0200
# Node ID e02f500a098033897e392c610052c8059f4d715c
# Parent  d85049849e8802ce2ddd34ebba7ea2872607a131
poly.m: Return a real polynomial for input of complex conjugate pairs (bug #53897).

* poly.m: Return a real value when the input has only real elements or complex
conjugate pairs.

diff --git a/scripts/polynomial/poly.m b/scripts/polynomial/poly.m
--- a/scripts/polynomial/poly.m
+++ b/scripts/polynomial/poly.m
@@ -68,24 +68,38 @@ function y = poly (x)
   elseif (m == n)
     v = eig (x);
   else
     print_usage ();
   endif
 
   y = zeros (1, n+1);
   y(1) = 1;
-  for j = 1:n;
-    y(2:(j+1)) = y(2:(j+1)) - v(j) .* y(1:j);
+  for j = 1:n
+    y(2:(j+1)) -= v(j) .* y(1:j);
   endfor
 
-  if (all (all (imag (x) == 0)))
+  ## Real, or complex conjugate inputs, should result in real output
+  if (isreal (x))
     y = real (y);
+  else
+    tmp = sort (v(imag (v) > 0)) == sort (conj (v(imag (v) < 0)));
+    if (! isempty (tmp) && all (tmp))
+      y = real (y);
+    endif
   endif
 
 endfunction
 
 
 %!assert (poly ([]), 1)
 %!assert (poly ([1, 2, 3]), [1, -6, 11, -6])
 %!assert (poly ([1, 2; 3, 4]), [1, -5, -2], sqrt (eps))
 
+%!test <*53897>
+%! x = [1, sqrt(2)/2+sqrt(2)/2*i, 1i, -sqrt(2)/2+sqrt(2)/2*i, -1, ...
+%!      -sqrt(2)/2-sqrt(2)/2*i, -1i, sqrt(2)/2-sqrt(2)/2*i];
+%! y = poly (x);
+%! assert (isreal (y), true);
+
+%!error poly ()
+%!error poly (1,2)
 %!error poly ([1, 2, 3; 4, 5, 6])
