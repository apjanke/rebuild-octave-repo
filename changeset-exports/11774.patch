# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1210693535 -7200
#      Tue May 13 17:45:35 2008 +0200
# Branch release-3-0-x
# Node ID 3c08ffee113776baf069e52c527708298eaa934e
# Parent  cfe88845aa1ee8204273e7acbc2674e6191dacac
all false logical indexing fix

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2008-05-19  David Bateman  <dbateman@free.fr>
+
+	* idx-vector.cc (IDX_VEC_REP::idx_vector_rep (const boolNDArray&)):
+	If len is zero size the index vector in the same manner as if len
+	is not zero.
+
 2008-05-11  John W. Eaton  <jwe@octave.org>
 
 	* intNDArray.cc (intNDArray<T>::any (int)): Use != for comparison.
 
 2008-05-05  Rafael Laboissiere  <rafael@debian.org>
 
 	* oct-rl-edit.c (octave_read_init_file): Simply call rl_read_init_file.
 
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -291,36 +291,33 @@ IDX_VEC_REP::idx_vector_rep (bool b)
 
 IDX_VEC_REP::idx_vector_rep (const boolNDArray& bnda)
   : data (0), len (bnda.nnz ()), num_zeros (0), num_ones (0),
     max_val (0), min_val (0), count (1), frozen_at_z_len (0),
     frozen_len (0), colon (0), one_zero (0), initialized (0),
     frozen (0), colon_equiv_checked (0), colon_equiv (0),
     orig_dims ()
 {
+  dim_vector dv = bnda.dims ();
+
+  orig_dims = ((dv.length () == 2 && dv(0) == 1)
+	       ? dim_vector (1, len) : orig_dims = dim_vector (len, 1));
+
   if (len == 0)
-    {
-      orig_dims = dim_vector (0, 0);
-      initialized = 1;
-    }
+    initialized = 1;
   else
     {
       data = new octave_idx_type [len];
 
       octave_idx_type ntot = bnda.length ();
 
       for (octave_idx_type i = 0, k = 0; i < ntot && k < len; i++)
 	if (bnda.elem (i))
 	  data[k++] = i;
 
-      dim_vector dv = bnda.dims ();
-
-      orig_dims = ((dv.length () == 2 && dv(0) == 1)
-		   ? dim_vector (1, len) : orig_dims = dim_vector (len, 1));
-
       init_state ();
     }
 }
 
 IDX_VEC_REP&
 IDX_VEC_REP::operator = (const IDX_VEC_REP& a)
 {
   if (this != &a)
