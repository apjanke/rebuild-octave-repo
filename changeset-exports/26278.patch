# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1545414210 28800
#      Fri Dec 21 09:43:30 2018 -0800
# Branch stable
# Node ID 01fdb337fa20a4a6de12ff445f50e7434dd625f7
# Parent  e92a44730a6e1435f2ab40c9802193c8f0afa3de
test: do not look for BISTs in .m files in fixed test dirs (bug #55250)

* __run_test_suite__.m (run_test_dir): Distinguish between file patterns to
search for tests in function dirs versus fixed test dirs.  Avoids including
auxiliary function and script files in the number of files missing tests.

diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -56,28 +56,28 @@ function [pass, fail, xfail, xbug, skip,
     try
       fid = fopen (logfile, "wt");
       if (fid < 0)
         error ("__run_test_suite__: could not open %s for writing", logfile);
       endif
       test ("", "explain", fid);
       puts ("\nIntegrated test scripts:\n\n");
       for i = 1:length (fcndirs)
-        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, fcndirs{i});
+        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, fcndirs{i}, false);
         dp += p;
         dn += n;
         dxf += xf;
         dxb += xb;
         dsk += sk;
         drtsk += rtsk;
         drgrs += rgrs;
       endfor
       puts ("\nFixed test scripts:\n\n");
       for i = 1:length (fixedtestdirs)
-        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, fixedtestdirs{i});
+        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, fixedtestdirs{i}, true);
         dp += p;
         dn += n;
         dxf += xf;
         dxb += xb;
         dsk += sk;
         drtsk += rtsk;
         drgrs += rgrs;
       endfor
@@ -145,24 +145,24 @@ function [pass, fail, xfail, xbug, skip,
     fail = nfail;
     xfail = dxf;
     xbug = dxb;
     skip = dsk;
     rtskip = drtsk;
     regress = drgrs;
   endif
 
-  function [dp, dn, dxf, dxb, dsk, drtsk, drgrs] = run_test_dir (fid, d)
+  function [dp, dn, dxf, dxb, dsk, drtsk, drgrs] = run_test_dir (fid, d, is_fixed = false)
 
     lst = dir (d);
     dp = dn = dxf = dxb = dsk = drtsk = drgrs = 0;
     for i = 1:length (lst)
       nm = lst(i).name;
       if (lst(i).isdir && nm(1) != "." && ! strcmp (nm, "private"))
-        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, [d, filesep, nm]);
+        [p, n, xf, xb, sk, rtsk, rgrs] = run_test_dir (fid, [d, filesep, nm], is_fixed);
         dp += p;
         dn += n;
         dxf += xf;
         dxb += xb;
         dsk += sk;
         drtsk += rtsk;
         drgrs += rgrs;
       endif
@@ -175,20 +175,19 @@ function [pass, fail, xfail, xbug, skip,
         cd (d);
       endif
       for i = 1:length (lst)
         nm = lst(i).name;
         ## Ignore hidden files
         if (nm(1) == '.')
           continue
         endif
-        if ((length (nm) > 2 && strcmpi (nm((end-1):end), ".m"))
-            || (length (nm) > 4
-                && (strcmpi (nm((end-3):end), "-tst")
-                    || strcmpi (nm((end-3):end), ".tst"))))
+        if ((! is_fixed && length (nm) > 2 && strcmpi (nm((end-1):end), ".m"))
+            || (! is_fixed && length (nm) > 4 && strcmpi (nm((end-3):end), "-tst"))
+            || (is_fixed && length (nm) > 4 && strcmpi (nm((end-3):end), ".tst")))
           p = n = xf = xb = sk = rtsk = rgrs = 0;
           ffnm = fullfile (d, nm);
           ## Only run if contains %!test, %!assert, %!error, %!fail, or %!warning
           if (has_tests (ffnm))
             tmp = reduce_test_file_name (ffnm, topbuilddir, topsrcdir);
             print_test_file_name (tmp);
             [p, n, xf, xb, sk, rtsk, rgrs] = test (ffnm, "quiet", fid);
             print_pass_fail (p, n, xf, xb, sk, rtsk, rgrs);
