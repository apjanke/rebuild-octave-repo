# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1328121445 28800
#      Wed Feb 01 10:37:25 2012 -0800
# Branch stable
# Node ID 824e5d362aba9f8e8b11bb56384b3ea78932114e
# Parent  61db003b8e4735933ab4c0152108556f3224ebbf
Fix Qhull calling convention by passing true file pointer to qh_new_qhull

* __delaunayn__.cc, __voronoi__.cc, convhulln.cc: Pass file pointer
to "/dev/null" for output of Qhull rather than 0.

diff --git a/src/DLD-FUNCTIONS/__delaunayn__.cc b/src/DLD-FUNCTIONS/__delaunayn__.cc
--- a/src/DLD-FUNCTIONS/__delaunayn__.cc
+++ b/src/DLD-FUNCTIONS/__delaunayn__.cc
@@ -116,20 +116,30 @@ Undocumented internal function.\n\
       double *pt_array = p.fortran_vec ();
       boolT ismalloc = false;
 
       // Qhull flags argument is not const char*
       OCTAVE_LOCAL_BUFFER (char, flags, 9 + options.length());
 
       sprintf (flags, "qhull d %s", options.c_str ());
 
-      // Replace the 0 pointer with stdout for debugging information
-      FILE *outfile = 0;
+      // Replace the outfile pointer with stdout for debugging information.
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM)
+      FILE *outfile = gnulib::fopen ("NUL", "w");
+#else
+      FILE *outfile = gnulib::fopen ("/dev/null", "w");
+#endif
       FILE *errfile = stderr;
-      
+          
+      if  (! outfile)
+        {
+          error ("__delaunayn__: Unable to create temporary file for output.");
+          return retval;
+        }
+
       int exitcode = qh_new_qhull (dim, n, pt_array, 
                                    ismalloc, flags, outfile, errfile);
       if (! exitcode)
         {
           // triangulate non-simplicial facets
           qh_triangulate ();
 
           facetT *facet;
diff --git a/src/DLD-FUNCTIONS/__voronoi__.cc b/src/DLD-FUNCTIONS/__voronoi__.cc
--- a/src/DLD-FUNCTIONS/__voronoi__.cc
+++ b/src/DLD-FUNCTIONS/__voronoi__.cc
@@ -110,19 +110,29 @@ Undocumented internal function.\n\
           error ("%s: OPTIONS must be a string, cell array of strings, or empty",
                  caller.c_str ());
           return retval;
         }
     }
 
   boolT ismalloc = false;
 
-  // Replace the 0 pointer with stdout for debugging information
-  FILE *outfile = 0;
+  // Replace the outfile pointer with stdout for debugging information.
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM)
+  FILE *outfile = gnulib::fopen ("NUL", "w");
+#else
+  FILE *outfile = gnulib::fopen ("/dev/null", "w");
+#endif
   FILE *errfile = stderr;
+      
+  if  (! outfile)
+    {
+      error ("__voronoi__: Unable to create temporary file for output.");
+      return retval;
+    }
 
   // qh_new_qhull command and points arguments are not const...
 
   std::string cmd = "qhull v" + options;
 
   OCTAVE_LOCAL_BUFFER (char, cmd_str, cmd.length () + 1);
 
   strcpy (cmd_str, cmd.c_str ());
diff --git a/src/DLD-FUNCTIONS/convhulln.cc b/src/DLD-FUNCTIONS/convhulln.cc
--- a/src/DLD-FUNCTIONS/convhulln.cc
+++ b/src/DLD-FUNCTIONS/convhulln.cc
@@ -123,20 +123,30 @@ convex hull is calculated.\n\n\
         {
           error ("convhulln: OPTIONS must be a string, cell array of strings, or empty");
           return retval;
         }
      }
 
   boolT ismalloc = false;
 
-  // Replace the 0 pointer with stdout for debugging information.
-  FILE *outfile = 0;
+  // Replace the outfile pointer with stdout for debugging information.
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM)
+  FILE *outfile = gnulib::fopen ("NUL", "w");
+#else
+  FILE *outfile = gnulib::fopen ("/dev/null", "w");
+#endif
   FILE *errfile = stderr;
       
+  if  (! outfile)
+    {
+      error ("convhulln: Unable to create temporary file for output.");
+      return retval;
+    }
+
   // qh_new_qhull command and points arguments are not const...
 
   std::string cmd = "qhull" + options;
 
   OCTAVE_LOCAL_BUFFER (char, cmd_str, cmd.length () + 1);
 
   strcpy (cmd_str, cmd.c_str ());
 
