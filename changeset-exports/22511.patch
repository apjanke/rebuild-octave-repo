# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1474065386 25200
#      Fri Sep 16 15:36:26 2016 -0700
# Node ID 1e81abd0314aa15588f726fd9b2a496ac98cce4f
# Parent  00bf2e2de5813e3e979b7c8c7b60b8ad0cc492d8
tempname: respect the value of $TMPDIR if set, be consistent with tempdir

* file-io.cc (Ftempname): Default to creating files in $TMPDIR when called
without a directory argument.
* unpack.m: Update BIST test to unpack files in tempdir, which may differ from
P_tmpdir.

diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -2746,16 +2746,18 @@ see @code{tmpfile}.
 
   if (nargin > 2)
     print_usage ();
 
   std::string dir;
 
   if (nargin > 0)
     dir = args(0).xstring_value ("tempname: DIR must be a string");
+  else
+    dir = octave::sys::env::getenv ("TMPDIR");
 
   std::string pfx ("oct-");
 
   if (nargin > 1)
     pfx = args(1).xstring_value ("tempname: PREFIX must be a string");
 
   return ovl (octave::sys::tempnam (dir, pfx));
 }
diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -313,17 +313,17 @@ endfunction
 %! assert (fid >= 0);
 %! fprintf (fid, "Hello World\n");
 %! fprintf (fid, "123 456 789\n");
 %! fclose (fid);
 %! unwind_protect
 %!   copyfile (filename, [filename ".orig"]);
 %!   gzip (filename, dirname);
 %!   [~, f] = fileparts (filename);
-%!   filelist = unpack (fullfile (dirname, [f ".gz"]), P_tmpdir);
+%!   filelist = unpack (fullfile (dirname, [f ".gz"]), tempdir);
 %!   assert (filelist{1}, filename);
 %!   fid = fopen ([filename ".orig"], "rb");
 %!   assert (fid >= 0);
 %!   orig_data = fread (fid);
 %!   fclose (fid);
 %!   fid = fopen (filename, "rb");
 %!   assert (fid >= 0);
 %!   new_data = fread (fid);
