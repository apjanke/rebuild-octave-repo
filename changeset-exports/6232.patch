# HG changeset patch
# User dbateman
# Date 1168286048 0
#      Mon Jan 08 19:54:08 2007 +0000
# Node ID 900d4394e7d8340ecc53d442b9dd05c84af99512
# Parent  82021cf7e53a5c1f72f2132ea437ff223e613ced
[project @ 2007-01-08 19:54:08 by dbateman]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.549 $)
+AC_REVISION($Revision: 1.550 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -837,17 +837,17 @@ AC_SUBST(UMFPACK_LIBS)
 AC_ARG_WITH(umfpack,
   [AS_HELP_STRING([--without-umfpack],
      [don't use UMFPACK, disable some sparse functionality])],
   with_umfpack=$withval, with_umfpack=yes)
 
 warn_umfpack="UMFPACK not found.  This will result in some lack of functionality for sparse matrices."
 if test "$with_umfpack" = yes && test "$with_amd" = yes; then
   with_umfpack=no
-  AC_CHECK_HEADERS([sparsesuite/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h], [
+  AC_CHECK_HEADERS([suitesparse/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h], [
     AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
       UMFPACK_LIBS="-lumfpack"; with_umfpack=yes], [
         ## Invalidate the cache.
 	$as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
 	AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
           UMFPACK_LIBS="-lumfpack"; with_umfpack=yes], [
 
 	  ## Invalidate the cache.
@@ -878,17 +878,17 @@ AC_SUBST(COLAMD_LIBS)
 AC_ARG_WITH(colamd,
   [AS_HELP_STRING([--without-colamd],
      [don't use COLAMD, disable some sparse functionality])],
   with_colamd=$withval, with_colamd=yes)
 
 warn_colamd="COLAMD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_colamd" = yes; then
   with_colamd=no
-  AC_CHECK_HEADERS([sparsesuite/colamd.h ufsparse/colamd.h colamd/colamd.h colamd.h], [
+  AC_CHECK_HEADERS([suitesparse/colamd.h ufsparse/colamd.h colamd/colamd.h colamd.h], [
     AC_CHECK_LIB(colamd, colamd, [COLAMD_LIBS="-lcolamd"; with_colamd=yes])
     if test "$with_colamd" = yes; then
       AC_DEFINE(HAVE_COLAMD, 1, [Define if the COLAMD library is used.])
       TEXINFO_COLAMD="@set HAVE_COLAMD"
       warn_colamd=
     fi
     break])
 fi 
@@ -904,17 +904,17 @@ AC_SUBST(CCOLAMD_LIBS)
 AC_ARG_WITH(ccolamd,
   [AS_HELP_STRING([--without-ccolamd],
      [don't use CCOLAMD, disable some sparse functionality])],
   with_ccolamd=$withval, with_ccolamd=yes)
 
 warn_ccolamd="CCOLAMD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_ccolamd" = yes; then
   with_ccolamd=no
-  AC_CHECK_HEADERS([sparsesuite/ccolamd.h ufsparse/ccolamd.h ccolamd/ccolamd.h ccolamd.h], [
+  AC_CHECK_HEADERS([suitesparse/ccolamd.h ufsparse/ccolamd.h ccolamd/ccolamd.h ccolamd.h], [
     AC_CHECK_LIB(ccolamd, ccolamd, [CCOLAMD_LIBS="-lccolamd"; with_ccolamd=yes])
     if test "$with_ccolamd" = yes; then
       AC_DEFINE(HAVE_CCOLAMD, 1, [Define if the CCOLAMD library is used.])
       warn_ccolamd=
     fi
     break])
 fi 
 if test -n "$warn_ccolamd"; then
@@ -928,18 +928,18 @@ AC_ARG_WITH(cholmod,
   [AS_HELP_STRING([--without-cholmod],
      [don't use CHOLMOD, disable some sparse functionality])],
   with_cholmod=$withval, with_cholmod=yes)
 
 warn_cholmod="CHOLMOD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_cholmod" = yes && test "$with_colamd" = yes &&
 	test "$with_ccolamd" = yes && test "$with_amd" = yes; then
   with_cholmod=no
-  AC_CHECK_HEADERS([sparsesuite/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h], [
-    AC_CHECK_HEADERS([sparsesuite/metis.h ufsparse/metis.h metis/metis.h metis.h], [
+  AC_CHECK_HEADERS([suitesparse/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h], [
+    AC_CHECK_HEADERS([suitesparse/metis.h ufsparse/metis.h metis/metis.h metis.h], [
       AC_CHECK_LIB(metis, METIS_NodeND, with_metis=yes, with_metis=no)
       break],
       with_metis=no)
 
     if test "$with_metis" = yes; then
       AC_DEFINE(HAVE_METIS, 1, [Define if the METIS library is used.])
       AC_CHECK_LIB(cholmod, cholmod_start, [CHOLMOD_LIBS="-lcholmod -lmetis"; 
 	with_cholmod=yes], [
@@ -975,28 +975,57 @@ AC_SUBST(CXSPARSE_LIBS)
 AC_ARG_WITH(cxsparse,
   [AS_HELP_STRING([--without-cxsparse],
      [don't use CXSparse, disable some sparse functionality])],
   with_cxsparse=$withval, with_cxsparse=yes)
 
 warn_cxsparse="CXSparse not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_cxsparse" = yes; then
   with_cxsparse=no
-  AC_CHECK_HEADERS([sparsesuite/cs.h ufsparse/cs.h cxsparse/cs.h cs.h], [
+  AC_CHECK_HEADERS([suitesparse/cs.h ufsparse/cs.h cxsparse/cs.h cs.h], [
     AC_CHECK_LIB(cxsparse, cs_di_sqr, [CXSPARSE_LIBS="-lcxsparse"; with_cxsparse=yes])
     if test "$with_cxsparse" = yes; then
       AC_DEFINE(HAVE_CXSPARSE, 1, [Define if the CXSparse library is used.])
       warn_cxsparse=
     fi
     break])
 fi
 if test -n "$warn_cxsparse"; then
   AC_MSG_WARN($warn_cxsparse)
 fi
 
+WITH_ARPACK=true
+AC_ARG_WITH(arpack,
+  [AS_HELP_STRING([--without-arpack], [don't use arpack])],
+  with_arpack=$withval, with_arpack=yes)
+
+arpack_lib=
+if test "$with_arpack" = yes; then
+  arpack_lib="arpack"
+elif test "$with_arpack" != no; then
+  arpack_lib="$with_arpack"
+fi
+
+ARPACK_LIBS=
+AC_SUBST(ARPACK_LIBS)
+WITH_ARPACK=false
+if test -n "$arpack_lib"; then
+  AC_CHECK_LIB($arpack_lib, F77_FUNC(dseupd,DSEUPD), [
+	WITH_ARPACK=true
+        ARPACK_LIBS="-l$arpack_lib"
+        FLIBS="$ARPACK_LIBS $FLIBS"
+        AC_DEFINE(HAVE_ARPACK, 1, [Define if ARPACK is available.])], , 
+	$BLAS_LIBS $FLIBS)
+fi
+if test $WITH_ARPACK = no; then
+  warn_arpack="arpack not found. This will result in a lack of the eigs function."
+  AC_MSG_WARN($warn_arpack)
+fi
+
+
 ### Handle shared library options.
 
 ### Enable creation of static libraries.
 
 AC_ARG_ENABLE(static,
   [AS_HELP_STRING([--enable-static], [create static libraries])],
   [if test "$enableval" = no; then STATIC_LIBS=false;
    else STATIC_LIBS=true; fi],
@@ -2001,16 +2030,17 @@ Octave is now configured for $canonical_
   GLPK libraries:       $GLPK_LIBS
   UMFPACK libraries:    $UMFPACK_LIBS
   AMD libraries:        $AMD_LIBS
   CAMD libraries:       $CAMD_LIBS
   COLAMD libraries:     $COLAMD_LIBS
   CCOLAMD libraries:    $CCOLAMD_LIBS
   CHOLMOD libraries:    $CHOLMOD_LIBS
   CXSPARSE libraries:   $CXSPARSE_LIBS
+  ARPACK libraries:     $ARPACK_LIBS
   HDF5 libraries:       $HDF5_LIBS
   CURL libraries:       $CURL_LIBS
   REGEX libraries:      $REGEX_LIBS
   LIBS:                 $LIBS
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT_BINARY
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
@@ -2108,16 +2138,21 @@ if test -n "$warn_cholmod"; then
   warn_msg_printed=true
 fi
 
 if test -n "$warn_cxsparse"; then
   AC_MSG_WARN($warn_cxsparse)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_arpack"; then
+  AC_MSG_WARN($warn_arpack)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_fftw"; then
   AC_MSG_WARN($warn_fftw)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_glpk"; then
   AC_MSG_WARN($warn_glpk)
   warn_msg_printed=true
