# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1272396011 -7200
#      Tue Apr 27 21:20:11 2010 +0200
# Node ID fd6899b1b00eed431db6865d14e4f2cd386c3d04
# Parent  cb08831272516afeec113d0a1eebbea8d411005e
use common error message for indexed cs-lists

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-04-27  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-cs-list.cc (octave_cs_list::subsref): New methods. Just gripe.
+	* ov-cs-list.h: Declare them.
+
 2010-04-27  John W. Eaton  <jwe@octave.org>
 
 	* ov-usr-fcn.cc (octave_user_script::do_multi_index_op):
 	Correct spelling of max_recursion_depth in error message.
 	(octave_usr_fcn::do_multi_index_op): Ditto.
 	* pt-eval.h, pt-eval.cc (Vmax_recursion_depth): Move definition
 	here from ov-usr-fcn.cc.  Now extern.
 	(Fmax_recursion_depth): Move definition here from ov-usr-fcn.cc.
diff --git a/src/ov-cs-list.cc b/src/ov-cs-list.cc
--- a/src/ov-cs-list.cc
+++ b/src/ov-cs-list.cc
@@ -26,19 +26,37 @@ along with Octave; see the file COPYING.
 
 #include <iostream>
 #include <sstream>
 
 #include "lo-utils.h"
 
 #include "defun.h"
 #include "error.h"
+#include "gripes.h"
 #include "ov-cs-list.h"
 #include "unwind-prot.h"
 
 DEFINE_OCTAVE_ALLOCATOR (octave_cs_list);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_cs_list, "cs-list", "cs-list");
 
 octave_cs_list::octave_cs_list (const Cell& c)
   : octave_base_value (), lst (c)
 {
 }
+
+octave_value
+octave_cs_list::subsref (const std::string&,
+                         const std::list<octave_value_list>&)
+{
+  gripe_indexed_cs_list ();
+  return octave_value ();
+}
+
+octave_value_list
+octave_cs_list::subsref (const std::string&,
+                         const std::list<octave_value_list>&, int)
+{
+  gripe_indexed_cs_list ();
+  return octave_value_list ();
+}
+
diff --git a/src/ov-cs-list.h b/src/ov-cs-list.h
--- a/src/ov-cs-list.h
+++ b/src/ov-cs-list.h
@@ -67,16 +67,22 @@ public:
   bool is_defined (void) const { return true; }
 
   bool is_constant (void) const { return true; }
 
   bool is_cs_list (void) const { return true; }
 
   octave_value_list list_value (void) const { return lst; }
 
+  octave_value subsref (const std::string& type,
+                        const std::list<octave_value_list>& idx);
+
+  octave_value_list subsref (const std::string& type,
+                             const std::list<octave_value_list>& idx, int);
+
 private:
 
   // The list of Octave values.
   octave_value_list lst;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
