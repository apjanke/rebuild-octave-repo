# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1488466772 28800
#      Thu Mar 02 06:59:32 2017 -0800
# Branch stable
# Node ID c21939b049314a51dd2a24f920c16df83352dc3b
# Parent  22ab93db26cba4b73235e99e8b3edc62d6db1418
Fix compilation of jit caused by cset d0562b3159c7 (bug #50398).

* jit-typeinfo.cc (octave_jit_err_nan_to_logical_conversion): Change function
to file local rather than placing in octave_jit_octave namespace.
* jit-typeinfo.cc (jit_typeinfo): Call local function
octave_jit_err_nan_to_logical_conversion.

diff --git a/libinterp/corefcn/jit-typeinfo.cc b/libinterp/corefcn/jit-typeinfo.cc
--- a/libinterp/corefcn/jit-typeinfo.cc
+++ b/libinterp/corefcn/jit-typeinfo.cc
@@ -208,17 +208,17 @@ octave_jit_cast_any_complex (Complex c)
 {
   if (c.imag () == 0)
     return new octave_scalar (c.real ());
   else
     return new octave_complex (c);
 }
 
 extern "C" void
-octave_jit_octave::err_nan_to_logical_conversion (void)
+octave_jit_err_nan_to_logical_conversion (void)
 {
   octave::err_nan_to_logical_conversion ();
 }
 
 extern "C" void
 octave_jit_ginvalid_index (void)
 {
   // FIXME: 0-argument form of octave::err_invalid_index removed in cset dd6345fd8a97
@@ -1500,17 +1500,17 @@ jit_typeinfo::jit_typeinfo (llvm::Module
     fn.do_return (builder, ret);
   }
   for_index_fn.add_overload (fn);
 
   // logically true
   logically_true_fn.stash_name ("logically_true");
 
   jit_function gripe_nantl
-    = create_external (JIT_FN (octave_jit_octave::err_nan_to_logical_conversion), 0);
+    = create_external (JIT_FN (octave_jit_err_nan_to_logical_conversion), 0);
   gripe_nantl.mark_can_error ();
 
   fn = create_internal ("octave_jit_logically_true_scalar", boolean, scalar);
   fn.mark_can_error ();
 
   body = fn.new_block ();
   builder.SetInsertPoint (body);
   {
