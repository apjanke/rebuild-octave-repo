# HG changeset patch
# User dbateman
# Date 1121071276 0
#      Mon Jul 11 08:41:16 2005 +0000
# Node ID fda074a55b5c4eb3706b963f8d9657a2e55838fe
# Parent  9461ff9278fb27cbb1d92fe4b4daa9720b5fec8e
[project @ 2005-07-11 08:41:16 by dbateman]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2005-07-11  David Bateman  <dbateman@free.fr>
+
+	* ov-fc-inline.cc (Fvectorize): Allow string arguments
+
 2005-07-08  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/gplot.l (Fhold, Fishold): Delete.
 	(clear_before_plotting): Delete static variable.
 	Delete PKG_ADD line for hold.
 
 2005-07-07  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/ov-fcn-inline.cc b/src/ov-fcn-inline.cc
--- a/src/ov-fcn-inline.cc
+++ b/src/ov-fcn-inline.cc
@@ -805,23 +805,36 @@ by replacing all occurrences of @code{*}
 @seealso{argnames, inline, formula, vectorize}")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
-      octave_fcn_inline* old = args(0).fcn_inline_value (true);
+      std::string old_func;
+      octave_fcn_inline* old = 0;
+      bool func_is_string = true;
 
-      if (old)
+      if (args(0).is_string ())
+	old_func = args(0).string_value ();
+      else
 	{
-	  std::string old_func = old->fcn_text ();
+	  old = args(0).fcn_inline_value (true);
+	  func_is_string = false;
+
+	  if (old)
+	    old_func = old->fcn_text ();
+	  else
+	    error ("vectorize: must be a string or inline function");
+	}
+
+      if (! error_state)
+	{
 	  std::string new_func;
-
 	  size_t i = 0;
 
 	  while (i < old_func.length ())
 	    {
 	      std::string t1 = old_func.substr (i, 1);
 
 	      if (t1 == "*" || t1 == "/" || t1 == "\\" || t1 == "^")
 		{
@@ -835,20 +848,22 @@ by replacing all occurrences of @code{*}
 		      new_func.append ("*");
 		      i++;
 		    }
 		}
 	      new_func.append (t1);
 	      i++;
 	    }
 
-	  retval = octave_value (new octave_fcn_inline (new_func, old->fcn_arg_names ()));
+	  if (func_is_string)
+	    retval = octave_value (new_func);
+	  else
+	    retval = octave_value (new octave_fcn_inline 
+				   (new_func, old->fcn_arg_names ()));
 	}
-      else
-	error ("vectorize: must be an inline function");
     }
   else
     print_usage ("vectorize");
 
   return retval;
 }
 
 /*
