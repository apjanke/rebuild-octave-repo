# HG changeset patch
# User Rik <rik@octave.org>
# Date 1483057169 28800
#      Thu Dec 29 16:19:29 2016 -0800
# Branch stable
# Node ID aca714a80cfca286cc6e8225b48e87d09dd9d2b8
# Parent  03819d65cc1d71f684483e8a3fe1455e1646530f
doc: Add more sealso links between docstrings.

* input.cc (Fecho, Fecho_executing_commands): Add seealso links between echo()
and echo_executing_commands().

* ov-fcn-handle.cc (Ffunctions): Add seealso links to func2str and str2func.
* ov-fcn-handle.cc (Fstr2func): Add seealso links to functions.

diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -1027,16 +1027,18 @@ functions.
 
 @item off all
 Disable echoing of commands as they are executed in script files and
 functions.
 @end table
 
 @noindent
 With no arguments, @code{echo} toggles the current echo state.
+
+@seealso{echo_executing_commands}
 @end deftypefn */)
 {
   string_vector argv = args.make_argv ();
 
   switch (args.length ())
     {
     case 0:
       {
@@ -1484,16 +1486,18 @@ More than one state can be active at onc
 equivalent to the command @kbd{echo on all}.
 
 The value of @code{echo_executing_commands} may be set by the @kbd{echo}
 command or the command line option @option{--echo-commands}.
 
 When called from inside a function with the @qcode{"local"} option, the
 variable is changed locally for the function and any subroutines it calls.
 The original variable value is restored when exiting the function.
+
+@seealso{echo}
 @end deftypefn */)
 {
   return SET_INTERNAL_VARIABLE (echo_executing_commands);
 }
 
 DEFUN (__request_drawnow__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} __request_drawnow__ ()
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1697,19 +1697,20 @@ The function is a subfunction within an 
 The m-file that will be called to perform the function.  This field is empty
 for anonymous and built-in functions.
 @end table
 
 In addition, some function types may return more information in additional
 fields.
 
 @strong{Warning:} @code{functions} is provided for debugging purposes only.
-Its behavior may change in the future and programs should not depend on a
-particular output.
+Its behavior may change in the future and programs should not depend on any
+particular output format.
 
+@seealso{func2str, str2func}
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
   octave_fcn_handle *fh = args(0).fcn_handle_value ("functions: FCN_HANDLE argument must be a function handle object");
 
   octave_function *fcn = fh ? fh->function_value () : 0;
@@ -1822,17 +1823,17 @@ function handle @var{fcn_handle}.
 DEFUN (str2func, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {} str2func (@var{fcn_name})
 @deftypefnx {} {} str2func (@var{fcn_name}, "global")
 Return a function handle constructed from the string @var{fcn_name}.
 
 If the optional @qcode{"global"} argument is passed, locally visible
 functions are ignored in the lookup.
-@seealso{func2str, inline}
+@seealso{func2str, inline, functions}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
   std::string nm = args(0).xstring_value ("str2func: FCN_NAME must be a string");
