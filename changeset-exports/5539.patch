# HG changeset patch
# User jwe
# Date 1132166732 0
#      Wed Nov 16 18:45:32 2005 +0000
# Node ID b800ae36fc6acb3065e3e858425cd6dc4da80e6b
# Parent  8d2903f71c9661ca7ca4e5d59a52e76049e5ccd7
[project @ 2005-11-16 18:45:32 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2005-11-15  John W. Eaton  <jwe@octave.org>
+
+	* general/shiftdim.m: Doc fix.
+
 2005-11-07  Keith Goodman  <kwgoodman@gmail.com>
 
 	* set/unique.m: Doc string fix.
 
 2005-11-01  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (distclean, maintainer-clean):
 	Also remove autom4te.cache directory.
diff --git a/scripts/general/shiftdim.m b/scripts/general/shiftdim.m
--- a/scripts/general/shiftdim.m
+++ b/scripts/general/shiftdim.m
@@ -16,20 +16,20 @@
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{y}} = shiftdim (@var{x}, @var{n})
 ## @deftypefnx {Function File} {[@var{y}, @var{ns}]} = shiftdim (@var{x})
 ## Shifts the dimension of @var{x} by @var{n}, where @var{n} must be
-## an integer scalar. When @var{n} is negative, the dimensions of
+## an integer scalar. When @var{n} is positive, the dimensions of
 ## @var{x} are shifted to the left, with the leading dimensions
-## circulated to the end. If @var{n} is positive, then the dimensions
-## of @var{x} are shifted to the right, with the @var{n} singleton
+## circulated to the end. If @var{n} is negative, then the dimensions
+## of @var{x} are shifted to the right, with @var{n} leading singleton
 ## dimensions added.
 ##
 ## Called with a single argument, @code{shiftdim}, removes the leading
 ## singleton dimensions, returning the number of dimensions removed
 ## in the second output argument @var{ns}.
 ##
 ## For example 
 ##
diff --git a/src/Cell.cc b/src/Cell.cc
--- a/src/Cell.cc
+++ b/src/Cell.cc
@@ -48,16 +48,20 @@ Cell
 Cell::index (const octave_value_list& idx_arg, bool resize_ok) const
 {
   Cell retval;
 
   octave_idx_type n = idx_arg.length ();
 
   switch (n)
     {
+    case 0:
+      retval = *this;
+      break;
+
     case 1:
       {
 	idx_vector i = idx_arg(0).index_vector ();
 
 	if (! error_state)
 	  retval = index (i, resize_ok);
       }
       break;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,24 @@
+2005-11-16  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (PKG_ADD.inst): New target.
+	(install): Dependo on it.
+	(clean): Remove it.
+
+	* mk-pkg-add: New option --install.  Don't use --prefix option.
+	Delete obsolete comments.
+
+	* Cell.cc (Cell::index): Indexing with () is a no-op, not an error.
+	* oct-map.cc (Octave_map::index): Likewise.
+	* ov-base-mat.cc (octave_base_matrix<MT>::do_index_op): Likewise.
+	* ov-base-sparse.cc (octave_base_sparse<T>::do_index_op): Likewise.
+	* ov-str-mat.cc (octave_char_matrix_str::do_index_op_internal):
+	Likewise.
+
 2005-11-11  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (install-oct): Fix thinko in previous change.
 
 	* version.h (OCTAVE_VERSION): Now 2.9.4
 	(OCTAVE_API_VERSION): Now api-v17.
 
 	* variables.cc (symbol_out_of_date): Check for autoloads here too.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -338,18 +338,22 @@ builtins.cc: $(DEF_FILES) mkbuiltins
 	@echo DEF_FILES = $(DEF_FILES)
 	@echo VAR_FILES = $(VAR_FILES)
 	@echo $(DEF_FILES) > def-files
 	@echo $(VAR_FILES) > var-files
 	@$(srcdir)/mkbuiltins def-files var-files > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 PKG_ADD: $(DLD_DEF_FILES)
-	$(srcdir)/mk-pkg-add --prefix $(shell pwd) $(DLD_DEF_FILES) > PKG_ADD-t
-	mv PKG_ADD-t PKG_ADD
+	$(srcdir)/mk-pkg-add --prefix $(shell pwd) $(DLD_DEF_FILES) > $@-t
+	mv $@-t $@
+
+PKG_ADD.inst: $(srcdir)/mk-pkg-add $(DLD_DEF_FILES)
+	$(srcdir)/mk-pkg-add --install $(DLD_DEF_FILES) > $@-t
+	mv $@-t $@
 
 DOCSTRINGS: gendoc$(BUILD_EXEEXT)
 	./gendoc > $@-t
 	mv $@-t $@
 
 doc-files: $(DOC_FILES)
 	@echo making $@
 	@echo DOC_FILES = $(DOC_FILES)
@@ -391,19 +395,19 @@ install-strip:
 
 install-bin:
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(bindir)
 	rm -f $(DESTDIR)$(bindir)/octave$(EXEEXT)
 	$(INSTALL_PROGRAM) octave$(EXEEXT) $(DESTDIR)$(bindir)/octave-$(version)$(EXEEXT)
 	cd $(DESTDIR)$(bindir) ; $(LN_S) octave-$(version)$(EXEEXT) octave$(EXEEXT)
 .PHONY: install-bin
 
-install-oct:
+install-oct: PKG_ADD.inst
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(octfiledir)
-	$(srcdir)/mk-pkg-add --prefix $(octfiledir) $(DLD_DEF_FILES) > $(DESTDIR)$(octfiledir)/PKG_ADD
+	$(INSTALL_DATA) PKG_ADD.inst $(DESTDIR)$(octfiledir)/PKG_ADD
 	if [ -n "$(OCT_FILES)" ]; then \
 	  xfiles="$(OCT_FILES)"; \
 	  for f in $$xfiles; do \
 	    $(INSTALL_PROGRAM) $$f $(DESTDIR)$(octfiledir)/$$f; \
 	  done; \
 	fi
 .PHONY: install-oct
 
@@ -467,16 +471,17 @@ TAGS: $(SOURCES) $(DLD_SRC)
 
 clean:
 	rm -f liboctinterp.$(LIBEXT)
 	rm -f liboctinterp.$(SHLEXT_VER) liboctinterp.$(SHLEXT)
 	rm -f $(OBJECTS) $(MAKEDEPS) $(DOC_FILES) $(OCT_FILES)
 	rm -f $(PICOBJ) $(DLD_PICOBJ) stmp-pic gendoc$(EXEEXT)
 	rm -f builtins.cc ops.cc defaults.h oct-conf.h def-files var-files
 	rm -f PKG_ADD
+	rm -f PKG_ADD.inst
 	-rmdir pic
 .PHONY: clean
 
 mostlyclean: clean
 .PHONY: mostlyclean
 
 distclean: clean
 	rm -f Makefile octave$(EXEEXT) .fname so_locations oct-errno.cc
diff --git a/src/mk-pkg-add b/src/mk-pkg-add
--- a/src/mk-pkg-add
+++ b/src/mk-pkg-add
@@ -1,26 +1,30 @@
 #! /bin/sh -e
 
-# Create additional links to .oct files that define more than one
-# function.
-
-# If the first arg is --print, only print the links we need to make.
-
-# The first non-option arg is taken as the directory where the .oct
-# files are installed.  The remaining arguments should be the list of
-# .df files corresponding to the source files that were used to
-# create the .oct files.
-
 SED=${SED:-'sed'}
 
+install=false
 if [ $1 = "--prefix" ]; then
   shift
   prefix="$1"
   shift
+elif [ $1 = "--install" ]; then
+  install=true
+  shift
+fi
+
+if [ $# -gt 0 ]; then
+  if $install; then
+    cat <<EOF
+__octfiledir__ = strrep (octave_config_info ("octfiledir"),
+                         octave_config_info ("prefix"),
+                         OCTAVE_HOME);
+EOF
+  fi
 fi
 
 for f in "$@"; do
   if [ -f $f ]; then
 
     ## Compute and print the autoloads.
   
     base=`basename $f | $SED 's/\.df$//'`
@@ -28,17 +32,19 @@ for f in "$@"; do
 	  $SED -e 's/XDEFUN_DLD_INTERNAL *( *//' -e 's/ *,.*$//' |\
 	  sort -u`
     if [ -n "$fcns" ]; then
       for n in $fcns; do
 	if [ "$n" = "$base" ]; then
 	  true
 	else
           if [ -n "$prefix" ]; then
-	    echo "autoload (\"$n\", \"$prefix/$base.oct\");"
+	    echo "autoload (\"$n\", strcat (\"$prefix\", filesep, \"$base.oct\"));"
+          elif $install; then
+            echo "autoload (\"$n\", strcat (__octfiledir__, filesep, \"$base.oct\"));"
 	  else
 	    echo "autoload (\"$n\", \"$base.oct\");"
 	  fi
 	fi
       done
     fi
 
     ## Process PKG_ADD directives after autoloads so that all
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -344,19 +344,18 @@ Octave_map::index (const octave_value_li
 
 	  if (error_state)
 	    break;
 
 	  retval.assign (key(p), tmp);
 	}
     }
   else
-    error ("invalid number of indices (= 0) for %d-dimensional struct array",
-	   ndims ());
+    retval = *this;
 
-  return error_state ? Octave_map () : retval;
+  return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -134,17 +134,17 @@ octave_base_matrix<MT>::do_index_op (con
 
   octave_idx_type n_idx = idx.length ();
 
   int nd = matrix.ndims ();
 
   switch (n_idx)
     {
     case 0:
-      error ("invalid number of indices (= 0) for %d-dimensional array", nd);
+      retval = matrix;
       break;
 
     case 1:
       {
 	idx_vector i = idx (0).index_vector ();
 
 	if (! error_state)
 	  retval = MT (matrix.index (i, resize_ok, MT::resize_fill_value ()));
diff --git a/src/ov-base-sparse.cc b/src/ov-base-sparse.cc
--- a/src/ov-base-sparse.cc
+++ b/src/ov-base-sparse.cc
@@ -50,17 +50,17 @@ octave_base_sparse<T>::do_index_op (cons
 
   octave_idx_type n_idx = idx.length ();
 
   int nd = matrix.ndims ();
 
   switch (n_idx)
     {
     case 0:
-      error ("invalid number of indices (= 0) for %d-dimensional array", nd);
+      retval = matrix;
       break;
 
     case 1:
       {
 	idx_vector i = idx (0).index_vector ();
 
 	if (! error_state)
 	  retval = octave_value (matrix.index (i, resize_ok));
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -85,39 +85,39 @@ octave_char_matrix_str::do_index_op_inte
 					      int resize_ok, char type)
 {
   octave_value retval;
 
   octave_idx_type len = idx.length ();
 
   switch (len)
     {
-    case 2:
-      {
-	idx_vector i = idx (0).index_vector ();
-	idx_vector j = idx (1).index_vector ();
-
-	if (! error_state)
-	  retval = octave_value (charNDArray (matrix.index (i, j, resize_ok)),
-				 true, type);
-      }
+    case 0:
+      retval = octave_value (matrix, true, type);
       break;
 
     case 1:
       {
 	idx_vector i = idx (0).index_vector ();
 
 	if (! error_state)
 	  retval = octave_value (charNDArray (matrix.index (i, resize_ok)),
 				 true, type);
       }
       break;
 
-    case 0:
-      error ("invalid number of indices (= 0) for %d-dimensional character array", matrix.ndims ());
+    case 2:
+      {
+	idx_vector i = idx (0).index_vector ();
+	idx_vector j = idx (1).index_vector ();
+
+	if (! error_state)
+	  retval = octave_value (charNDArray (matrix.index (i, j, resize_ok)),
+				 true, type);
+      }
       break;
 
     default:
       {
 	Array<idx_vector> idx_vec (len);
 
 	for (octave_idx_type i = 0; i < len; i++)
 	  idx_vec(i) = idx(i).index_vector ();
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -794,22 +794,28 @@ octave_value::octave_value (octave_value
   : rep (new_rep)
 {
   rep->count = cnt;
 }
 
 octave_value::~octave_value (void)
 {
 #if defined (MDEBUG)
-  std::cerr << "~octave_value: rep: " << rep
-	    << " rep->count: " << rep->count << "\n";
+  if (rep)
+    std::cerr << "~octave_value: rep: " << rep
+	      << " rep->count: " << rep->count << std::endl;
+  else
+    std::cerr << "~octave_value: rep is 0!" << std::endl;
 #endif
 
   if (rep && --rep->count == 0)
-    delete rep;
+    {
+      delete rep;
+      rep = 0;
+    }
 }
 
 octave_value *
 octave_value::clone (void) const
 {
   panic_impossible ();
   return 0;
 }
