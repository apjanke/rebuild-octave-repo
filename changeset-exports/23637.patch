# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1497746089 14400
#      Sat Jun 17 20:34:49 2017 -0400
# Node ID 2208cc0e89a3de9dedaa0ae18d4fa1aaaf04086e
# Parent  563a9fc1ef232e38db4333faf605d6eda0cfb567
don't create tree_function_def objects for local functions in classdef files

* oct-parse.in.yy (base_parser::finish_function): Don't create
tree_function_def objects for local functions in classdef files.

diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -3433,17 +3433,17 @@ namespace octave
                }
           }
 
         if (parsing_local_functions )
           symtab.install_local_function (nm, octave_value (fcn), file);
         else if (curr_fcn_depth == 1)
           fcn_scope->update_nest ();
 
-        if (! lexer.reading_fcn_file && curr_fcn_depth == 1)
+        if (! (lexer.reading_classdef_file || lexer.reading_fcn_file))
           {
             // We are either reading a script file or defining a function
             // at the command line, so this definition creates a
             // tree_function object that is placed in the parse tree.
             // Otherwise, it is just inserted in the symbol table,
             // either as a subfunction or nested function (see above),
             // or as the primary function for the file, via
             // primary_fcn_ptr (see also load_fcn_from_file,,
