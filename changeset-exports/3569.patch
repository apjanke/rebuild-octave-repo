# HG changeset patch
# User jwe
# Date 949576615 0
#      Thu Feb 03 11:16:55 2000 +0000
# Node ID 3796444c54a31bade71ba35503f07c40bb46ccf7
# Parent  58549b931ad53b7c3525bcf01da8047ac789c5c9
[project @ 2000-02-03 11:16:54 by jwe]

diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -78,17 +78,17 @@ protected:
     int length (void) const { return len; }
 
     T& elem (int n) { return data[n]; }
 
     T elem (int n) const { return data[n]; }
 
     void qsort (int (*compare) (const void *, const void *))
       {
-	::qsort (data, len, sizeof (T), compare);
+	::qsort (data, static_cast<size_t> (len), sizeof (T), compare);
       }
   };
 
   void make_unique (void)
     {
       if (rep->count > 1)
 	{
 	  --rep->count;
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2000-02-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array.h (Array::ArrayRep::qsort): Cast len to size_t.
+
 2000-02-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-rl-edit.c, oct-rl-edit.h: New files for interface to GNU
 	readline library.
 	* Makefile.in: Add them to the appropriate lists.
 
 	* oct-rl-hist.c, oct-rl-hist.h: New files for interface to GNU
 	readline history library.
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -111,27 +111,27 @@ fopen_mode_to_ios_mode (const std::strin
 	retval = std::ios::out | std::ios::app;
       else if (mode == "r+")
 	retval = std::ios::in | std::ios::out;
       else if (mode == "w+")
 	retval = std::ios::in | std::ios::out | std::ios::trunc;
       else if (mode == "a+")
 	retval = std::ios::in | std::ios::out | std::ios::app;
       else if (mode == "rb")
-	retval = std::ios::in | std::ios::bin;
+	retval = std::ios::in | std::ios::binary;
       else if (mode == "wb")
-	retval = std::ios::out | std::ios::trunc | std::ios::bin;
+	retval = std::ios::out | std::ios::trunc | std::ios::binary;
       else if (mode == "ab")
-	retval = std::ios::out | std::ios::app | std::ios::bin;
+	retval = std::ios::out | std::ios::app | std::ios::binary;
       else if (mode == "r+b")
-	retval = std::ios::in | std::ios::out | std::ios::bin;
+	retval = std::ios::in | std::ios::out | std::ios::binary;
       else if (mode == "w+b")
-	retval = std::ios::in | std::ios::out | std::ios::trunc | std::ios::bin; 
+	retval = std::ios::in | std::ios::out | std::ios::trunc | std::ios::binary; 
       else if (mode == "a+b")
-	retval = std::ios::in | std::ios::out | std::ios::app | std::ios::bin;
+	retval = std::ios::in | std::ios::out | std::ios::app | std::ios::binary;
       else
 	::error ("invalid mode specified");
     }
 
   return retval;
 }
 
 DEFUN (is_stream, args, ,
