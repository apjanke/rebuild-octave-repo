# HG changeset patch
# User Rik <rik@octave.org>
# Date 1442916494 25200
#      Tue Sep 22 03:08:14 2015 -0700
# Branch stable
# Node ID 19617a5b7202e68e551fa293729e2734244375eb
# Parent  1339ad3c9faa2fb7cdb5e2c9d1de89ee99682597
Fix regression in displayed error message for nargin and nargout.

* ov-usr-fcn.cc (nargin, nargout): After printing error message, use
'return retval' to immediately break out of the function.

diff --git a/libinterp/octave-value/ov-usr-fcn.cc b/libinterp/octave-value/ov-usr-fcn.cc
--- a/libinterp/octave-value/ov-usr-fcn.cc
+++ b/libinterp/octave-value/ov-usr-fcn.cc
@@ -861,17 +861,20 @@ Programming Note: @code{nargin} does not
     {
       octave_value func = args(0);
 
       if (func.is_string ())
         {
           std::string name = func.string_value ();
           func = symbol_table::find_function (name);
           if (func.is_undefined ())
-            error ("nargout: invalid function name: %s", name.c_str ());
+            {
+              error ("nargin: invalid function name: %s", name.c_str ());
+              return retval;
+            }
         }
 
       octave_function *fcn_val = func.function_value ();
       if (fcn_val)
         {
           octave_user_function *fcn = fcn_val->user_function_value (true);
 
           if (fcn)
@@ -968,17 +971,20 @@ returns -1 for all anonymous functions.\
     {
       octave_value func = args(0);
 
       if (func.is_string ())
         {
           std::string name = func.string_value ();
           func = symbol_table::find_function (name);
           if (func.is_undefined ())
-            error ("nargout: invalid function name: %s", name.c_str ());
+            {
+              error ("nargout: invalid function name: %s", name.c_str ());
+              return retval;
+            }
         }
 
       if (func.is_inline_function ())
         {
           retval = 1;
           return retval;
         }
 
