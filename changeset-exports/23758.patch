# HG changeset patch
# User Rik <rik@octave.org>
# Date 1499655035 25200
#      Sun Jul 09 19:50:35 2017 -0700
# Node ID 2fc60498549564e53b02b9c00f44174819b1b94e
# Parent  bba752b37f8e321183cd4a033a3fbb891bd9093f
graphics.cc: Remove unnecessary code related to bug #49980.

* graphics.cc (axes::properties::set_defaults): Remove bits of code related to
mode != "reset".  An assert statement at the head of the function guarantees
that mode will always be "reset".

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4945,18 +4945,17 @@ axes::properties::set_defaults (base_gra
                                 const std::string& mode)
 {
   // FIXME: Should this have all properties in it?
   // Including ones we do don't implement?
 
   // FIXME: This function is probably never called without mode == "reset"
   //        Check that this is the case with an assert statement (1/6/2017).
   //        If there are reports of problems then figure out what code is
-  //        calling it with the mode set to something else.  Otherwise,
-  //        delete branches of the code in this function that depend on mode.
+  //        calling it with the mode set to something else.
   assert (mode == "reset");
 
   Matrix tlim (1, 2, 0.0);
   tlim(1) = 1;
   alim = tlim;
   xlim = tlim;
   ylim = tlim;
   zlim = tlim;
@@ -5087,63 +5086,24 @@ axes::properties::set_defaults (base_gra
   ztickmode = "auto";
 
   sx = "linear";
   sy = "linear";
   sz = "linear";
 
   visible = "on";
 
-  // Replace/Reset preserves Position and Units properties
-  if (mode != "replace" && mode != "reset")
-    {
-      outerposition = default_axes_outerposition ();
-      position = default_axes_position ();
-      activepositionproperty = "outerposition";
-    }
-
-  if (mode != "reset")
-    {
-      delete_children (true);
-
-      xlabel.invalidate ();
-      ylabel.invalidate ();
-      zlabel.invalidate ();
-      title.invalidate ();
-
-      xlabel = gh_manager::make_graphics_handle ("text", __myhandle__,
-                                                 false, false, false);
-      ylabel = gh_manager::make_graphics_handle ("text", __myhandle__,
-                                                 false, false, false);
-      zlabel = gh_manager::make_graphics_handle ("text", __myhandle__,
-                                                 false, false, false);
-      title = gh_manager::make_graphics_handle ("text", __myhandle__,
-                                                false, false, false);
-
-      adopt (xlabel.handle_value ());
-      adopt (ylabel.handle_value ());
-      adopt (zlabel.handle_value ());
-      adopt (title.handle_value ());
-
-      update_xlabel_position ();
-      update_ylabel_position ();
-      update_zlabel_position ();
-      update_title_position ();
-    }
-  else
-    {
-      graphics_object go = gh_manager::get_object (xlabel.handle_value ());
-      go.reset_default_properties ();
-      go = gh_manager::get_object (ylabel.handle_value ());
-      go.reset_default_properties ();
-      go = gh_manager::get_object (zlabel.handle_value ());
-      go.reset_default_properties ();
-      go = gh_manager::get_object (title.handle_value ());
-      go.reset_default_properties ();
-    }
+  graphics_object go = gh_manager::get_object (xlabel.handle_value ());
+  go.reset_default_properties ();
+  go = gh_manager::get_object (ylabel.handle_value ());
+  go.reset_default_properties ();
+  go = gh_manager::get_object (zlabel.handle_value ());
+  go.reset_default_properties ();
+  go = gh_manager::get_object (title.handle_value ());
+  go.reset_default_properties ();
 
   xset (xlabel.handle_value (), "handlevisibility", "off");
   xset (ylabel.handle_value (), "handlevisibility", "off");
   xset (zlabel.handle_value (), "handlevisibility", "off");
   xset (title.handle_value (), "handlevisibility", "off");
 
   xset (xlabel.handle_value (), "horizontalalignment", "center");
   xset (xlabel.handle_value (), "horizontalalignmentmode", "auto");
