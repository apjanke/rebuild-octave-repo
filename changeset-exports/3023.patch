# HG changeset patch
# User jwe
# Date 865400212 0
#      Wed Jun 04 04:56:52 1997 +0000
# Node ID 0d37334d13ab017e9a0930a472afca9babe98866
# Parent  0e458bbb1859a1b79490e1f2ab7468b61d0c0299
[project @ 1997-06-04 04:56:51 by jwe]

diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,8 +1,14 @@
+Tue Jun  3 23:48:22 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* common.ac: (program_invocation_name): AC_TRY_LINK only requires
+	function body.  Add declaration for program_invocation_name so gcc
+	won't complain about undeclared variable.
+
 Thu May 22 22:04:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in: Look in make instead of ../make for files to include.
 	Do ac_includes by hand, since ac_include requires an extension to
 	autoconf that doesn't seem to be distributed with kpathsea (yet).
 	($(kpathsea)): Add a rule to `install' libkpathsea.a locally so
 	Octave will have something to link to.
 	(hash.lo): Don't optimize.
diff --git a/kpathsea/common.ac b/kpathsea/common.ac
--- a/kpathsea/common.ac
+++ b/kpathsea/common.ac
@@ -30,17 +30,18 @@ kb_AC_KLIBTOOL_REPLACE_FUNCS(basename pu
 
 AC_CHECK_FUNCS(bcopy getwd)
 
 AC_C_CONST
 
 # This is a GNU libc invention.
 AC_MSG_CHECKING(whether program_invocation_name is predefined)
 AC_CACHE_VAL(kb_cv_var_program_inv_name,
-[AC_TRY_LINK(, [main() { program_invocation_name = "love"; }],
+[AC_TRY_LINK(,
+  [extern char *program_invocation_name; program_invocation_name = "love";],
   kb_cv_var_program_inv_name=yes, kb_cv_var_program_inv_name=no)])dnl
 AC_MSG_RESULT($kb_cv_var_program_inv_name)
 if test "$kb_cv_var_program_inv_name" = yes; then
   AC_DEFINE(HAVE_PROGRAM_INVOCATION_NAME)
 fi
 
 # Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
 # This test program is due to Mike Hibler <mike@cs.utah.edu>.
