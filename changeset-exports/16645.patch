# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1368409677 14400
#      Sun May 12 21:47:57 2013 -0400
# Branch classdef
# Node ID 450c03932d6c5d9c65bfe268f80a3df7443e41d8
# Parent  856cb7cba231f397f401c8ec4005507d341b5e93
don't push superclass and metaclass tokens twice

* lex.ll (metaclass and superclass patterns):
Use count_token_internal, not count_token.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -738,17 +738,17 @@ ANY_INCLUDING_NL (.|{NL})
     curr_lexer->lexer_debug ("{IDENT}@{IDENT}|{IDENT}@{IDENT}.{IDENT}");
 
     int id_tok = curr_lexer->handle_superclass_identifier ();
 
     if (id_tok >= 0)
       {
         curr_lexer->looking_for_object_index = true;
 
-        return curr_lexer->count_token (id_tok);
+        return curr_lexer->count_token_internal (id_tok);
       }
   }
 
 %{
 // Metaclass query
 %}
 
 \?{IDENT} |
@@ -756,17 +756,17 @@ ANY_INCLUDING_NL (.|{NL})
     curr_lexer->lexer_debug ("\\?{IDENT}|\\?{IDENT}\\.{IDENT}");
 
     int id_tok = curr_lexer->handle_meta_identifier ();
 
     if (id_tok >= 0)
       {
         curr_lexer->looking_for_object_index = true;
 
-        return curr_lexer->count_token (id_tok);
+        return curr_lexer->count_token_internal (id_tok);
       }
   }
 
 "@" {
     if (curr_lexer->previous_token_may_be_command ()
         &&  curr_lexer->space_follows_previous_token ())
       {
         yyless (0);
