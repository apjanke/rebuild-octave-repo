# HG changeset patch
# User Julien Bect <julien.bect@supelec.fr>
# Date 1409817089 -7200
#      Thu Sep 04 09:51:29 2014 +0200
# Node ID d171e23cac813bd8f79a65da1e5a3ae0db2fa171
# Parent  38b9849cd9078a00fa539a037159395fb1df407d
setxor.m: Fix bug with empty set input and multiple outputs (bug #43140).

* scripts/set/setxor.m: Fix a bug that occurs when one of the input sets is
  empty and more than one output argument is required (bug #43140).
  Add regression tests.

diff --git a/scripts/set/setxor.m b/scripts/set/setxor.m
--- a/scripts/set/setxor.m
+++ b/scripts/set/setxor.m
@@ -1,8 +1,9 @@
+## Copyright (C) 2014 Julien Bect
 ## Copyright (C) 2008-2013 Jaroslav Hajek
 ## Copyright (C) 2000, 2006-2007 Paul Kienzle
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by the
 ## Free Software Foundation; either version 3 of the License, or (at
@@ -89,21 +90,21 @@ function [c, ia, ib] = setxor (a, b, var
         i([idx, idx+1]) = [];
       endif
 
       ## Adjust output orientation for Matlab compatibility
       if (! iscol)
         c = c.';
       endif
     endif
-  endif
 
-  if (nargout > 1)
-    ia = ia(i(i <= na));
-    ib = ib(i(i > na) - na);
+    if (nargout > 1)
+      ia = ia(i(i <= na));
+      ib = ib(i(i > na) - na);
+    endif
   endif
 
 endfunction
 
 
 %!assert (setxor ([1,2,3], [2,3,4]), [1,4])
 %!assert (setxor ({'a'}, {'a', 'b'}), {'b'})
 
@@ -116,16 +117,44 @@ endfunction
 
 %!test
 %! a = [1 2; 4 5; 1 3];
 %! b = [1 1; 1 2; 4 5; 2 10];
 %! [c, ia, ib] = setxor (a, b, "rows");
 %! assert (c, [1 1; 1 3; 2 10]);
 %! assert (c, sortrows ([a(ia,:); b(ib,:)]));
 
+%!assert (setxor (1, []), 1)
+%!assert (setxor ([], 1), 1)
+
+%!test
+%! [c, ia, ib] = setxor (1, []);
+%! assert (c, 1);
+%! assert (ia, 1);
+%! assert (isempty (ib));
+
+%!test
+%! [c, ia, ib] = setxor ([], 1);
+%! assert (c, 1);
+%! assert (isempty (ia));
+%! assert (ib, 1);
+
+%!test
+%! a = [2 1; 4 3];  b = [];
+%! [c, ia, ib] = setxor (a, b);
+%! assert (c, [1; 2; 3; 4]);
+%! assert (ia, [3; 1; 4; 2]);
+%! assert (isempty (ib));
+
+%!test
+%! a = [];  b = [2 1; 4 3];
+%! [c, ia, ib] = setxor (a, b);
+%! assert (c, [1; 2; 3; 4]);
+%! assert (isempty (ia));
+%! assert (ib, [3; 1; 4; 2]);
 ## Test orientation of output
 %!shared x,y
 %! x = 1:3;
 %! y = 2:5;
 
 %!assert (size (setxor (x, y)), [1 3])
 %!assert (size (setxor (x', y)), [1 3])
 %!assert (size (setxor (x, y')), [1 3])
