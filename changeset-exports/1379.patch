# HG changeset patch
# User jwe
# Date 810866518 0
#      Tue Sep 12 00:41:58 1995 +0000
# Node ID e2969748490878312c7aaacfd65a2ce1817337dc
# Parent  53a7bdf180772868c58e97d1a2eaffd5baa67d4a
[project @ 1995-09-12 00:41:58 by jwe]

diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -66,16 +66,18 @@ Software Foundation, 59 Temple Place - S
 #include "syswait.h"
 #include "tree-const.h"
 #include "utils.h"
 #include "variables.h"
 
 extern "C"
 {
 #include <readline/tilde.h>
+
+extern void mode_string ();
 }
 
 // keeps a count of args sent to printf or scanf
 static int fmt_arg_count = 0;
 
 // double linked list containing relevant information about open files
 static DLList <file_info> file_list;
 
@@ -2451,19 +2453,30 @@ DEFUN ("unlink", Funlink, Sunlink, 1, 1,
   return retval;
 }
 
 static Octave_map
 mk_stat_map (struct stat& st)
 {
   Octave_map m;
 
+  unsigned mode = st.st_mode;
+  int mode_as_int = 1000 * ((mode & 7000) >> 9)
+    + 100 * ((mode & 0700) >> 6)
+      + 10 * ((mode & 0070) >> 3)
+	+ ((mode & 0007) >> 0);
+
+  char mode_as_string[11];
+  mode_string (mode, mode_as_string);
+  mode_as_string[10] = '\0';
+
   m["dev"] = (double) st.st_dev;
   m["ino"] = (double) st.st_ino;
-  m["mode"] = (double) st.st_mode;
+  m["mode"] = (double) mode_as_int;
+  m["modestr"] = mode_as_string;
   m["nlink"] = (double) st.st_nlink;
   m["uid"] = (double) st.st_uid;
   m["gid"] = (double) st.st_gid;
 #if defined (HAVE_ST_RDEV)
   m["rdev"] = (double) st.st_rdev;
 #endif
   m["size"] = (double) st.st_size;
   m["atime"] = (double) st.st_atime;
@@ -2525,14 +2538,49 @@ DEFUN ("stat", Fstat, Sstat, 1, 1,
 	}
     }
   else
     print_usage ("stat");
 
   return retval;
 }
 
+DEFUN ("lstat", Flstat, Slstat, 1, 1,
+  "lstat (NAME)\n\
+\n\
+  Like stat (NAME), but if NAME refers to a symbolic link, returns\n\
+  information about the link itself, not the file that it points to.")
+{
+  Octave_object retval;
+
+  if (args.length () == 1)
+    {
+      const char *name = args(0).string_value ();
+
+      static char *fname = 0;
+
+      if (fname)
+	free (fname);
+
+      fname = tilde_expand (name);
+
+      if (! error_state)
+	{
+	  struct stat buf;
+
+	  if (lstat (fname, &buf) < 0)
+	    retval = -1.0;
+	  else
+	    retval = tree_constant (mk_stat_map (buf));
+	}
+    }
+  else
+    print_usage ("stat");
+
+  return retval;
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
