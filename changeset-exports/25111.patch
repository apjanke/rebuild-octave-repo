# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522836327 14400
#      Wed Apr 04 06:05:27 2018 -0400
# Branch stable
# Node ID 959d6c3da1667e20e3dd9982ac275b6918c92c1a
# Parent  d890fdd23c95d068b0ca821e7fc20ca03e2609e9
undo previous change for handles to nested functions

Backed out changeset daff5efe062f

diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -87,16 +87,19 @@ octave_fcn_handle::octave_fcn_handle (co
 
   if (uf && nm != anonymous)
     {
       octave::symbol_scope uf_scope = uf->scope ();
 
       if (uf_scope)
         uf_scope.cache_name (nm);
     }
+
+  if (uf && uf->is_nested_function () && ! uf->is_subfunction ())
+    error ("handles to nested functions are not yet supported");
 }
 
 octave_value_list
 octave_fcn_handle::subsref (const std::string& type,
                             const std::list<octave_value_list>& idx,
                             int nargout)
 {
   octave_value_list retval;
diff --git a/test/nest/nest.tst b/test/nest/nest.tst
--- a/test/nest/nest.tst
+++ b/test/nest/nest.tst
@@ -55,16 +55,16 @@
 %!error <can not add variable "y" to a static workspace>
 %! nest_eval ("x = -5; x = abs (x);", "y = 6;")
 
 %!test
 %! f = no_closure (0);
 %! assert (f("foo"), "nested foo");
 %! assert (f("foo"), "nested foo");
 
-%!test <*39257>
+%!test <39257>
 %! f = no_closure (1);
 %! assert (f(), "nested");
 %! assert (f("foo"), "nested foo");
 
 %!error <D' undefined near line 7> scope2
 %!error <can not add variable "y" to a static workspace> nest_eval ("y = 5;", "")
 %!error <can not add variable "y" to a static workspace> nest_eval ("y;", "")
