# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1404845703 -3600
#      Tue Jul 08 19:55:03 2014 +0100
# Node ID e6872e945553b0af08e35576caf2b49f656bcc24
# Parent  df972b9d080aac5ae7b8637c1d81321b0a15f000
fieldnames: return only field names of java objects instead of description.

* java/org/octave/ClassHelper.java (getFields): the method
java.lang.reflect.Field.toString() returns a string description of each field,
e.g., 'public static final double java.lang.Double.MAX_VALUE', instead of just
the name 'MAX_VALUE'. Fixed by using the correct method getName().
* general/fieldnames.m: adapt the tests to check for the name and extend for
when passing a java object instead of just the class name.

diff --git a/scripts/general/fieldnames.m b/scripts/general/fieldnames.m
--- a/scripts/general/fieldnames.m
+++ b/scripts/general/fieldnames.m
@@ -65,14 +65,18 @@ endfunction
 %! x(3).d=1;  x(2).a=2;  x(1).b=3;  x(2).c=3;
 %! assert (fieldnames (x), {"d"; "a"; "b"; "c"});
 
 ## test empty structure
 %!test
 %! s = struct ();
 %! assert (fieldnames (s), cell (0, 1));
 
-## test Java classname
-%!testif HAVE_JAVA 
+## test Java classname by passing classname
+%!testif HAVE_JAVA
 %! names = fieldnames ("java.lang.Double");
-%! search = strfind (names, "java.lang.Double.MAX_VALUE");
-%! assert (! isempty ([search{:}]));
+%! assert (any (strcmp (names, "MAX_VALUE")));
 
+## test Java classname by passing java object
+%!testif HAVE_JAVA
+%! names = fieldnames (javaObject ("java.lang.Double", 10));
+%! assert (any (strcmp (names, "MAX_VALUE")));
+
diff --git a/scripts/java/org/octave/ClassHelper.java b/scripts/java/org/octave/ClassHelper.java
--- a/scripts/java/org/octave/ClassHelper.java
+++ b/scripts/java/org/octave/ClassHelper.java
@@ -194,17 +194,17 @@ public class ClassHelper
 
     Field theField[] = klass.getFields ();
     for (int i = 0; i < theField.length; i++)
       {
         if (i > 0)
           {
             sb.append (";");
           }
-        sb.append (theField[i].toString ());
+        sb.append (theField[i].getName ());
       }
 
     return (sb.toString ());
   }
 
 
   // new -MH-
   // return list of fields for given class name
