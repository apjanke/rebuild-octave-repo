# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1250138467 14400
#      Thu Aug 13 00:41:07 2009 -0400
# Node ID ee99f9f37505b43d8084f85b2ce4f46d9bbf1c76
# Parent  113dba092d8c65c20d28ea4320e7eb026db13dd2
improve configure checks for qhull and curl libs

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,23 @@
+2009-08-13  John W. Eaton  <jwe@octave.org>
+
+	* Makeconf.in (QHULL_CPPFLAGS, QHULL_LDFLAGS, CURL_CPPFLAGS,
+	CURL_LDFLAGS): New variables.
+	(do-subst-config-vals): Substitute QHULL_CPPFLAGS, QHULL_LDFLAGS,
+	CURL_CPPFLAGS, and CURL_LDFLAGS
+	* configure.in: Use OCTAVE_CHECK_LIBRARY to check for qhull and
+	curl libraries.  Print QHULL_CPPFLAGS, QHULL_LDFLAGS,
+	CURL_CPPFLAGS, and CURL_LDFLAGS in the summary.  Print glpk
+	library warning at time of check.  Use AC_MSG_WARN, not
+	AC_MSG_RESULT, to print fftw warning.
+	* aclocal.m4 (OCTAVE_CHECK_LIBRARY): New macro.
+	(AC_CHECK_QHULL_VERSION, AC_CHECK_QHULL_OK):
+	Implement with modern autoconf macros.
+
 2009-08-11  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Define and substitute TERM_LIBS instead of
 	TERMLIBS.  Don't add TERM_LIBS to LIBS.  Define DL_LIBS instead of
 	adding them to LIBS.  Display TERM_LIBS and DL_LIBS in summary
 	reporrt.
 	* aclocal.m4 (OCTAVE_ENABLE_READLINE): Define and substitute
 	READLINE_LIBS instead of LIBREADLINE.  Don't add readline library
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -226,22 +226,30 @@ LIBGLOB = @LIBGLOB@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 
 FT2_LIBS = @FT2_LIBS@
 HDF5_LIBS = @HDF5_LIBS@
 ZLIB_LIBS = @ZLIB_LIBS@
 GRAPHICS_LIBS = @GRAPHICS_LIBS@
+
+QHULL_CPPFLAGS = @QHULL_CPPFLAGS@
+QHULL_LDFLAGS = @QHULL_LDFLAGS@
 QHULL_LIBS = @QHULL_LIBS@
+
 REGEX_LIBS = @REGEX_LIBS@
 BLAS_LIBS = @BLAS_LIBS@
 FFTW_LIBS = @FFTW_LIBS@
 GLPK_LIBS = @GLPK_LIBS@
+
+CURL_CPPFLAGS = @CURL_CPPFLAGS@
+CURL_LDFLAGS = @CURL_LDFLAGS@
 CURL_LIBS = @CURL_LIBS@
+
 AMD_LIBS = @AMD_LIBS@
 CAMD_LIBS = @CAMD_LIBS@
 UMFPACK_LIBS = @UMFPACK_LIBS@
 COLAMD_LIBS = @COLAMD_LIBS@
 CCOLAMD_LIBS = @CCOLAMD_LIBS@
 CHOLMOD_LIBS = @CHOLMOD_LIBS@
 CXSPARSE_LIBS = @CXSPARSE_LIBS@
 OPENGL_LIBS = @OPENGL_LIBS@
@@ -490,16 +498,18 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_CC%|\"${CC}\"|" \
   -e "s|%OCTAVE_CONF_CC_VERSION%|\"${CC_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_CCOLAMD_LIBS%|\"${CCOLAMD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_CFLAGS%|\"${CFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_CHOLMOD_LIBS%|\"${CHOLMOD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_COLAMD_LIBS%|\"${COLAMD_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_CPICFLAG%|\"${CPICFLAG}\"|" \
   -e "s|%OCTAVE_CONF_CPPFLAGS%|\"${CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_CURL_CPPFLAGS%|\"${CURL_CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_CURL_LDFLAGS%|\"${CURL_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_CURL_LIBS%|\"${CURL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_CXSPARSE_LIBS%|\"${CXSPARSE_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_CXX%|\"${CXX}\"|" \
   -e "s|%OCTAVE_CONF_CXXCPP%|\"${CXXCPP}\"|" \
   -e "s|%OCTAVE_CONF_CXXFLAGS%|\"${CXXFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_CXXPICFLAG%|\"${CXXPICFLAG}\"|" \
   -e "s|%OCTAVE_CONF_CXX_VERSION%|\"${CXX_VERSION}\"|" \
   -e "s|%OCTAVE_CONF_DEFAULT_PAGER%|\"${DEFAULT_PAGER}\"|" \
@@ -542,16 +552,18 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_MAGICK_LIBS%|\"${MAGICK_LIBS}\"|" \
   -e 's|%OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS%|\"@MKOCTFILE_DL_LDFLAGS@\"|' \
   -e "s|%OCTAVE_CONF_OCTINCLUDEDIR%|\"${octincludedir}\"|" \
   -e "s|%OCTAVE_CONF_OCTLIBDIR%|\"${octlibdir}\"|" \
   -e "s|%OCTAVE_CONF_OPENGL_LIBS%|\"${OPENGL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_PREFIX%|\"${prefix}\"|" \
   -e "s|%OCTAVE_CONF_PTHREAD_CFLAGS%|\"${PTHREAD_CFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_PTHREAD_LIBS%|\"${PTHREAD_LIBS}\"|" \
+  -e "s|%OCTAVE_CONF_QHULL_CPPFLAGS%|\"${QHULL_CPPFLAGSS}\"|" \
+  -e "s|%OCTAVE_CONF_QHULL_LDFLAGS%|\"${QHULL_LDFLAGSS}\"|" \
   -e "s|%OCTAVE_CONF_QHULL_LIBS%|\"${QHULL_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_QRUPDATE_LIBS%|\"${QRUPDATE_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_RANLIB%|\"${RANLIB}\"|" \
   -e "s|%OCTAVE_CONF_RDYNAMIC_FLAG%|\"${RDYNAMIC_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_READLINE_LIBS%|\"${READLINE_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_REGEX_LIBS%|\"${REGEX_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_RLD_FLAG%|\"${RLD_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_SED%|\"${SED}\"|" \
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -406,16 +406,82 @@ AC_DEFUN(OCTAVE_F77_FLAG, [
       FFLAGS="$FFLAGS $1"
       AC_MSG_RESULT([adding $1 to FFLAGS])], [$2])
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
 dnl
+dnl
+dnl
+dnl OCTAVE_CHECK_LIBRARY(LIBRARY, DOC-NAME, WARN-MSG, HEADER, FUNC, EXTRA-CHECK)
+AC_DEFUN(OCTAVE_CHECK_LIBRARY, [
+  AC_ARG_WITH($1-includedir,
+    [AS_HELP_STRING([--with-$1-includedir=DIR],
+      [look for $2 include files in DIR])],
+    [m4_toupper([$1])_CPPFLAGS="-I$withval"])
+  AC_SUBST(m4_toupper([$1])_CPPFLAGS)
+
+  AC_ARG_WITH($1-libdir,
+    [AS_HELP_STRING([--with-$1-libdir=DIR],
+      [look for $2 libraries in DIR])],
+    [m4_toupper([$1])_LDFLAGS="-L$withval"])
+  AC_SUBST(m4_toupper([$1])_LDFLAGS)
+
+  AC_ARG_WITH($1,
+    [AS_HELP_STRING([--without-$1], [don't use $2])],
+    with_$1=$withval, with_$1=yes)
+
+  m4_toupper([$1])_LIBS=
+  case $with_$1 in
+    yes | "")
+      m4_toupper([$1])_LIBS="-l$1"
+    ;;
+    -* | */* | *.a | *.so | *.so.* | *.o)
+      m4_toupper([$1])_LIBS="$with_$1"
+    ;;
+    *)
+      m4_toupper([$1])_LIBS="-l$with_$1"
+    ;;
+  esac
+
+  [TEXINFO_]m4_toupper([$1])=
+  warn_$1="$3"
+  if test -n "$m4_toupper([$1])_LIBS"; then
+    save_CPPFLAGS="$CPPFLAGS"
+    CPPFLAGS="$m4_toupper([$1])_CPPFLAGS $CPPFLAGS"
+    AC_CHECK_HEADERS($4, [
+      save_LDFLAGS="$LDFLAGS"
+      LDFLAGS="$m4_toupper([$1])_LDFLAGS $LDFLAGS"
+      save_LIBS="$LIBS"
+      LIBS="$m4_toupper([$1])_LIBS"
+      octave_$1_ok=no
+      AC_MSG_CHECKING([for $5 in $m4_toupper([$1])_LIBS])
+      AC_LINK_IFELSE([AC_LANG_CALL([], [$5])],
+	[octave_$1_ok=yes], [m4_toupper([$1])_LIBS=""])
+      AC_MSG_RESULT($octave_$1_ok)
+      if test $octave_$1_ok = yes; then
+	ifelse($#, 6, [$6], [
+	  warn_$1=
+	  AC_DEFINE([HAVE_]m4_toupper([$1]), 1,
+            [Define if $2 is available.])
+	  [TEXINFO_]m4_toupper([$1])="@set [HAVE_]m4_toupper([$1])"])
+      fi
+      LIBS="$save_LIBS"
+      LDFLAGS="$save_LDFLAGS"])
+    CPPFLAGS="$save_CPPFLAGS"
+  fi
+  AC_SUBST(m4_toupper([$1])_LIBS)
+  AC_SUBST([TEXINFO_]m4_toupper([$1]))
+  if test -n "$warn_$1"; then
+    AC_MSG_WARN($warn_$1)
+  fi
+])
+dnl
 dnl Check for flex
 dnl
 AC_DEFUN(OCTAVE_PROG_FLEX, [
 ### For now, don't define LEXLIB to be -lfl -- we don't use anything in
 ### it, and it might not be installed.
 ###
 ### Also make sure that we generate an interactive scanner if we are
 ### using flex.
@@ -924,90 +990,53 @@ AC_DEFUN([OCTAVE_HDF5_HAS_REQUIRED_API],
     WITH_HDF5=false
     warn_hdf5="HDF5 library does not provide the version 1.6 API.  Octave will not be able to save or load HDF5 data files."
     AC_MSG_WARN($warn_hdf5)
   fi
 ])
 dnl
 dnl Check for the QHull version.
 dnl
-AC_DEFUN(AC_CHECK_QHULL_VERSION,
-[AC_MSG_CHECKING([for qh_qhull in -lqhull with qh_version])
-AC_CACHE_VAL(octave_cv_lib_qhull_version,  [
-cat > conftest.c <<EOF
-#include <stdio.h>
-char *qh_version = "version";
-char qh_qhull();
-int
-main(argc, argv)
-  int argc;
-  char **argv;
-{
-  qh_qhull();
-  return 0;
-}
-EOF
-
-octave_qhull_try="${CC-cc} $CFLAGS $CPPFLAGS $LDFLAGS conftest.c -o conftest -lqhull $LIBS"
-if (eval "$octave_qhull_try") 2>&AS_MESSAGE_LOG_FD && test -s conftest ; then
-    octave_cv_lib_qhull_version=yes
-else
-    octave_cv_lib_qhull_version=no
-fi
-rm -f conftest.c conftest.o conftest
-])dnl
-if test "$octave_cv_lib_qhull_version" = "yes"; then
-  AC_MSG_RESULT(yes)
-  ifelse([$1], , , [$1])
-else
-  AC_MSG_RESULT(no)
-  ifelse([$2], , , [$2])
-fi
+AC_DEFUN(OCTAVE_CHECK_QHULL_VERSION,
+  [AC_CACHE_CHECK([for qh_version in $QHULL_LIBS],
+    octave_cv_lib_qhull_version,  [
+      AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+#include <qhull/qhull_a.h>
+]], [[
+const char *tmp = qh_version;
+]])], [octave_cv_lib_qhull_version=yes], [octave_cv_lib_qhull_version=no])])
+  if test "$octave_cv_lib_qhull_version" = no; then
+    AC_DEFINE(NEED_QHULL_VERSION, 1,
+      [Define if the QHull library needs a qh_version variable defined.])
+  fi
 ])
 dnl
 dnl Check whether QHull works (does not crash)
 dnl
-AC_DEFUN(AC_CHECK_QHULL_OK,
-[AC_MSG_CHECKING([whether the qhull library works])
-AC_CACHE_VAL(octave_cv_lib_qhull_ok,
-[
-  save_LIBS="$LIBS"
-  LIBS="$LIBS -lqhull"
-  case $host in
-    *-mingw*|*-msdosmsvc*) ;;
-    *) LIBS="$LIBS -lm" ;;
-  esac
-AC_RUN_IFELSE([AC_LANG_SOURCE([[
+AC_DEFUN(OCTAVE_CHECK_QHULL_OK,
+  [AC_CACHE_CHECK([whether the qhull library works],
+    octave_cv_lib_qhull_ok, [
+      AC_RUN_IFELSE([AC_LANG_PROGRAM([[
 #include <stdio.h>
 #include <qhull/qhull.h>
-
 #ifdef NEED_QHULL_VERSION
 char *qh_version = "version";
 #endif
-int main()
-{
-  int dim = 2, n = 4;
-  coordT points[8] = { -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5 };
-  boolT ismalloc = 0;
-
-  return qh_new_qhull (dim, n, points, ismalloc, "qhull ", 0, stderr); 
-}
-]])],
-  [octave_cv_lib_qhull_ok=yes],
-  [octave_cv_lib_qhull_ok=no],
-  [octave_cv_lib_qhull_ok=yes])
-  LIBS="$save_LIBS"
-])
-if test "$octave_cv_lib_qhull_ok" = "yes"; then
-  AC_MSG_RESULT(yes)
-  ifelse([$1], , , [$1])
-else
-  AC_MSG_RESULT(no)
-  ifelse([$2], , , [$2])
-fi
+]], [[
+int dim = 2;
+int n = 4;
+coordT points[8] = { -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5 };
+boolT ismalloc = 0;
+return qh_new_qhull (dim, n, points, ismalloc, "qhull ", 0, stderr); 
+]])], [octave_cv_lib_qhull_ok=yes], [octave_cv_lib_qhull_ok=no])])
+  if test "$octave_cv_lib_qhull_ok" = "yes"; then
+    $1
+  else
+    $2
+  fi
 ])
 dnl
 dnl Check for OpenGL. If found, define OPENGL_LIBS
 dnl
 AC_DEFUN([OCTAVE_OPENGL], [
 OPENGL_LIBS=
 
 ### On MacOSX systems the OpenGL framework can be used
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -418,42 +418,25 @@ case "$canonical_host_type" in
     AC_CHECK_LIB(m, sin, , , -lc)
   ;;
   *)
     AC_CHECK_LIB(m, sin)
   ;;
 esac
 
 ### Check for the QHull library
-AC_SUBST(QHULL_LIBS)
-AC_CHECK_HEADER(qhull/qhull_a.h, have_qhull=yes, have_qhull=no)
-if test "$have_qhull" = yes; then
-  AC_CHECK_LIB(qhull, qh_qhull, have_qhull=yes, have_qhull=no)
-  if test "$have_qhull" != yes; then
-    AC_CHECK_QHULL_VERSION(have_qhull=yes, have_qhull=no)
-    AC_DEFINE(NEED_QHULL_VERSION, 1, [Define if the QHull library needs a wh_version variable defined.])
-  fi
-  if test "$have_qhull" = yes; then
-    AC_CHECK_QHULL_OK(have_qhull=yes, have_qhull=bad)
-  fi
-fi
-if test "$have_qhull" = yes; then
-  AC_DEFINE(HAVE_QHULL, 1, [Define if the QHull library is used.])
-  QHULL_LIBS="-lqhull"
-  TEXINFO_QHULL="@set HAVE_QHULL"
-else
-  if test "$have_qhull" = bad; then
-    warn_qhull="Qhull library found, but seems not to work properly --- This will result in loss of functionality of some geometry functions. Please try recompiling the library with -fno-strict-aliasing."
-  else
-    warn_qhull="Qhull library not found --- This will result in loss of functionality of some geometry functions."
-  fi
-  AC_MSG_WARN($warn_qhull)
-fi
 
-AC_SUBST(TEXINFO_QHULL)
+OCTAVE_CHECK_LIBRARY(qhull, QHull,
+  [Qhull library not found -- this will result in loss of functionality of some geometry functions.],
+  [qhull/qhull_a.h], [qh_qhull],
+  [warn_qhull=
+   OCTAVE_CHECK_QHULL_VERSION
+   OCTAVE_CHECK_QHULL_OK([TEXINFO_QHULL="@set HAVE_QHULL"
+     AC_DEFINE(HAVE_QHULL, 1, [Define if QHull is available.])], [
+     warn_qhull="Qhull library found, but seems not to work properly -- this will result in loss of functionality of some geometry functions.  Please try recompiling the library with -fno-strict-aliasing."])])
 
 ### Check for pcre/regex library.
 
 ## check for pcre-config, and if so, set CPPFLAGS appropriately
 AC_CHECK_PROG(WITH_PCRE_CONFIG, pcre-config, yes, no)
 if test $WITH_PCRE_CONFIG = yes ; then
   CPPFLAGS="$CPPFLAGS $(pcre-config --cflags)"
 fi
@@ -601,17 +584,17 @@ if test "$with_fftw" = yes; then
   fi
 fi
 
 if test "$with_fftw" = yes && test "$with_fftw3" = yes; then
   FFT_DIR=''
   AC_DEFINE(HAVE_FFTW3, 1, [Define if the FFTW3 library is used.])
 else
   warn_fftw="FFTW library not found.  Octave will use the (slower) FFTPACK library instead."
-  AC_MSG_RESULT($warn_fftw)
+  AC_MSG_WARN($warn_fftw)
 fi
 
 # Checks for GLPK header and library.
 
 AC_ARG_WITH(glpk,
   [AS_HELP_STRING([--without-glpk], [don't use GLPK])],
   with_glpk=$withval, with_glpk=yes)
 
@@ -634,45 +617,24 @@ if test -n "$glpk_lib"; then
     if test -n "$GLPK_LIBS"; then
       AC_DEFINE(HAVE_GLPK, 1, [Define if GLPK is available.])
     fi
     break])
 fi
 AC_SUBST(GLPK_LIBS)
 if test -z "$GLPK_LIBS"; then
   warn_glpk="GLPK library not found.  The glpk function for solving linear programs will be disabled."
+  AC_MSG_WARN($warn_glpk)
 fi
 
 # Checks for CURL header and library.
 
-AC_ARG_WITH(curl,
-  [AS_HELP_STRING([--without-curl], [don't use CURL])],
-  with_curl=$withval, with_curl=yes)
-
-curl_lib=
-if test "$with_curl" = yes; then
-  curl_lib="curl"
-elif test "$with_curl" != no; then
-  curl_lib="$with_curl"
-else
-  curl_missing=yes
-fi
-
-CURL_LIBS=
-if test -n "$curl_lib"; then
-  AC_CHECK_LIB($curl_lib, curl_easy_escape, [
-    AC_CHECK_HEADERS(curl/curl.h, [
-      CURL_LIBS="-l$curl_lib"
-      AC_DEFINE(HAVE_CURL, 1, [Define if CURL is available.])], [
-      curl_missing=yes])])
-fi
-AC_SUBST(CURL_LIBS)
-if test "$curl_missing" = yes; then
-  warn_curl="cURL library not found.  The urlread and urlwrite functions will be disabled."
-fi
+OCTAVE_CHECK_LIBRARY(curl, cURL,
+  [cURL library not found.  The urlread and urlwrite functions will be disabled.],
+  [curl/curl.h], [curl_easy_escape])
 
 # GraphicsMagick++
 
 warn_magick=
 AC_CHECK_PROGS(MAGICK_CONFIG, [GraphicsMagick++-config GraphicsMagick-config])
 if test -z "$MAGICK_CONFIG"; then
   warn_magick="GraphicsMagick++ config script not found.  Assuming GraphicsMagic++ library and header files are missing, so imread will not be fully functional"
 else
@@ -2203,44 +2165,50 @@ AC_MSG_NOTICE([
 Octave is now configured for $canonical_host_type
 
   Source directory:     $srcdir
   Installation prefix:  $prefix
   C compiler:           $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS
   C++ compiler:         $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $F77 $FFLAGS
   Fortran libraries:    $FLIBS
+  LIBS:                 $LIBS
+
+  AMD libraries:        $AMD_LIBS
+  ARPACK libraries:     $ARPACK_LIBS
   BLAS libraries:       $BLAS_LIBS
-  FFTW libraries:       $FFTW_LIBS
-  GLPK libraries:       $GLPK_LIBS
-  UMFPACK libraries:    $UMFPACK_LIBS
-  AMD libraries:        $AMD_LIBS
   CAMD libraries:       $CAMD_LIBS
-  COLAMD libraries:     $COLAMD_LIBS
+  CARBON libraries:     $CARBON_LIBS
   CCOLAMD libraries:    $CCOLAMD_LIBS
   CHOLMOD libraries:    $CHOLMOD_LIBS
+  COLAMD libraries:     $COLAMD_LIBS
+  CURL CPPFLAGS:        $CURL_CPPFLAGS
+  CURL LDFLAGS:         $CURL_LDFLAGS
+  CURL libraries:       $CURL_LIBS
   CXSPARSE libraries:   $CXSPARSE_LIBS
-  ARPACK libraries:     $ARPACK_LIBS
-  QRUPDATE libraries:	$QRUPDATE_LIBS
+  DL libraries:         $DL_LIBS
+  FFTW libraries:       $FFTW_LIBS
+  FLTK backend libs:    $GRAPHICS_LIBS
+  GLPK libraries:       $GLPK_LIBS
   HDF5 libraries:       $HDF5_LIBS
-  ZLIB libraries:       $ZLIB_LIBS
-  CURL libraries:       $CURL_LIBS
+  OPENGL libraries:     $OPENGL_LIBS
+  PTHREAD flags:        $PTHREAD_CFLAGS
+  PTHREAD libraries:    $PTHREAD_LIBS
+  QHULL CPPFLAGS:       $QHULL_CPPFLAGS
+  QHULL LDFLAGS:        $QHULL_LDFLAGS
+  QHULL libraries:      $QHULL_LIBS
+  QRUPDATE libraries:   $QRUPDATE_LIBS
+  READLINE libraries:   $READLINE_LIBS
   REGEX libraries:      $REGEX_LIBS
-  QHULL libraries:	$QHULL_LIBS
-  OPENGL libraries:     $OPENGL_LIBS
-  FLTK backend libs:    $GRAPHICS_LIBS
+  TERM libraries:       $TERM_LIBS
+  UMFPACK libraries:    $UMFPACK_LIBS
   X11 include flags:    $X11_INCFLAGS
   X11 libraries:        $X11_LIBS
-  CARBON libraries:     $CARBON_LIBS
-  PTHREAD flags:        $PTHREAD_CFLAGS
-  PTHREAD libraries:    $PTHREAD_LIBS
-  READLINE libraries:   $READLINE_LIBS
-  TERM libraries:       $TERM_LIBS
-  DL libraries:         $DL_LIBS
-  LIBS:                 $LIBS
+  ZLIB libraries:       $ZLIB_LIBS
+
   Default pager:        $DEFAULT_PAGER
   gnuplot:              $GNUPLOT
   Magick config:        $MAGICK_CONFIG
 
   Do internal array bounds checking:  $BOUNDS_CHECKING
   Build static libraries:             $STATIC_LIBS
   Build shared libraries:             $SHARED_LIBS
   Dynamic Linking:                    $ENABLE_DYNAMIC_LINKING $DL_API_MSG
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2009-08-13  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in: Consistently add library-specific CPPFLAGS and
+	LDFLAGS variables to CPPFLAGS and LDFLAGS for .oct files that need
+	them.  Also add X11_FLAGS to CPPFLAGS for display.d display.df and
+	pic/display.o.
+
+	* oct-conf.h.in: New #defines for QHULL_CPPFLAGS, QHULL_LDFLAGS,
+	CURL_CPPFLAGS, and CURL_LDFLAGS.
+	* toplev.cc (octave_config_info): Include them in the list.
+
 2009-08-12  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Makefile.in: Include LDFLAGS when linking shared executable.
 
 2009-08-12  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (Fissorted, F__sort_rows_idx__, Fnorm): Mark as Built-in
 	Functions in the inline help.
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -635,33 +635,55 @@ oct-errno.cc: oct-errno.cc.in ../Makecon
 ## will still be success and we will end up creating an empty
 ## oct-gperf.h file.
 oct-gperf.h: octave.gperf
 	$(GPERF) -t -C -D -G -L C++ -Z octave_kw_hash $< > $@-t1
 	$(SED) 's,lookup\[,gperf_lookup[,' < $@-t1 > $@-t2
 	mv $@-t2 $@
 	rm -f $@-t1
 
-display.o: CPPFLAGS += $(X11_FLAGS)
+display.d display.df display.o pic/display.o: CPPFLAGS += $(X11_FLAGS)
 
-__magick_read__.d: CPPFLAGS += $(MAGICK_INCFLAGS)
-__magick_read__.df: CPPFLAGS += $(MAGICK_INCFLAGS)
-__magick_read__.o pic/__magick_read__.o: CPPFLAGS += $(MAGICK_INCFLAGS)
+__magick_read__.d __magick_read__.df __magick_read__.o pic/__magick_read__.o: \
+  CPPFLAGS += $(MAGICK_INCFLAGS)
 __magick_read__.oct: OCT_LINK_DEPS += $(MAGICK_LIBS)
 
-convhulln.oct: OCT_LINK_DEPS += $(QHULL_LIBS)
-__delaunayn__.oct: OCT_LINK_DEPS += $(QHULL_LIBS)
-__voronoi__.oct: OCT_LINK_DEPS += $(QHULL_LIBS)
-eigs.oct: OCT_LINK_DEPS += $(ARPACK_LIBS)
-qr.oct: OCT_LINK_DEPS += $(QRUPDATE_LIBS)
-chol.oct: OCT_LINK_DEPS += $(QRUPDATE_LIBS)
-regexp.oct: OCT_LINK_DEPS += $(REGEX_LIBS)
-urlwrite.oct: OCT_LINK_DEPS += $(CURL_LIBS)
-__glpk__.oct: OCT_LINK_DEPS += $(GLPK_LIBS)
-fltk_backend.oct: OCT_LINK_DEPS += $(GRAPHICS_LIBS) $(FT2_LIBS)
+convhull.d convhull.df convhull.o pic/convhull.o: CPPFLAGS += $(QHULL_CPPFLAGS)
+convhulln.oct: OCT_LINK_DEPS += $(QHULL_LDFLAGS) $(QHULL_LIBS)
+
+__delaunayn__.d __delaunayn__.df __delaunayn__.o pic/__delaunayn__.o: \
+  CPPFLAGS += $(QHULL_CPPFLAGS)
+__delaunayn__.oct: OCT_LINK_DEPS += $(QHULL_LDFLAGS) $(QHULL_LIBS)
+
+__voronoi__.d __voronoi__.df __voronoi__.o pic/__voronoi__.o: \
+  CPPFLAGS += $(QHULL_CPPFLAGS)
+__voronoi__.oct: OCT_LINK_DEPS += $(QHULL_LDFLAGS) $(QHULL_LIBS)
+
+eigs.d eigs.df eigs.o pic/eigs.o: CPPFLAGS += $(ARPACK_CPPFLAGS)
+eigs.oct: OCT_LINK_DEPS += $(ARPACK_LDFLAGS) $(ARPACK_LIBS)
+
+qr.d qr.df qr.o pic/qr.o: CPPFLAGS += $(QRUPDATE_CPPFLAGS)
+qr.oct: OCT_LINK_DEPS += $(QRUPDATE_LDFLAGS) $(QRUPDATE_LIBS)
+
+chol.d chol.df chol.o pic/chol.o: CPPFLAGS += $(QRUPDATE_CPPFLAGS)
+chol.oct: OCT_LINK_DEPS += $(QRUPDATE_LDFLAGS) $(QRUPDATE_LIBS)
+
+regexp.d regexp.df regexp.o pic/regexp.o: CPPFLAGS += $(REGEX_CPPFLAGS)
+regexp.oct: OCT_LINK_DEPS += $(REGEX_LDFLAGS) $(REGEX_LIBS)
+
+urlwrite.d urlwrite.df urlwrite.o pic/urlwrite.o: CPPFLAGS += $(CURL_CPPFLAGS)
+urlwrite.oct: OCT_LINK_DEPS += $(CURL_LDFLAGS) $(CURL_LIBS)
+
+__glpk__.d __glpk__.df __glpk__.o pic/__glpk__.o: CPPFLAGS += $(GLPK_CPPFLAGS)
+__glpk__.oct: OCT_LINK_DEPS += $(GLPK_LDFLAGS) $(GLPK_LIBS)
+
+fltk_backend.d fltk_backend.df fltk_backend.o pic/fltk_backend.o: \
+  CPPFLAGS += $(GRAPHICS_CPPFLAGS) $(FT2_CPPFLAGS)
+fltk_backend.oct: \
+  OCT_LINK_DEPS += $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) $(FT2_LDFLAGS) $(FT2_LIBS)
 
 check: all
 .PHONY: check
 
 ifdef omit_deps
 .PHONY: $(MAKEDEPS)
 endif
 
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -96,16 +96,24 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_CPICFLAG
 #define OCTAVE_CONF_CPICFLAG %OCTAVE_CONF_CPICFLAG%
 #endif
 
 #ifndef OCTAVE_CONF_CPPFLAGS
 #define OCTAVE_CONF_CPPFLAGS %OCTAVE_CONF_CPPFLAGS%
 #endif
 
+#ifndef OCTAVE_CONF_CURL_CPPFLAGS
+#define OCTAVE_CONF_CURL_CPPFLAGS %OCTAVE_CONF_CURL_CPPFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_CURL_LDFLAGS
+#define OCTAVE_CONF_CURL_LDFLAGS %OCTAVE_CONF_CURL_LDFLAGS%
+#endif
+
 #ifndef OCTAVE_CONF_CURL_LIBS
 #define OCTAVE_CONF_CURL_LIBS %OCTAVE_CONF_CURL_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_CXSPARSE_LIBS
 #define OCTAVE_CONF_CXSPARSE_LIBS %OCTAVE_CONF_CXSPARSE_LIBS%
 #endif
 
@@ -296,16 +304,24 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_PTHREAD_CFLAGS
 #define OCTAVE_CONF_PTHREAD_CFLAGS %OCTAVE_CONF_PTHREAD_CFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_PTHREAD_LIBS
 #define OCTAVE_CONF_PTHREAD_LIBS %OCTAVE_CONF_PTHREAD_LIBS%
 #endif
 
+#ifndef OCTAVE_CONF_QHULL_CPPFLAGS
+#define OCTAVE_CONF_QHULL_CPPFLAGS %OCTAVE_CONF_QHULL_CPPFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_QHULL_LDFLAGS
+#define OCTAVE_CONF_QHULL_LDFLAGS %OCTAVE_CONF_QHULL_LDFLAGS%
+#endif
+
 #ifndef OCTAVE_CONF_QHULL_LIBS
 #define OCTAVE_CONF_QHULL_LIBS %OCTAVE_CONF_QHULL_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_QRUPDATE_LIBS
 #define OCTAVE_CONF_QRUPDATE_LIBS %OCTAVE_CONF_QRUPDATE_LIBS%
 #endif
 
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1205,16 +1205,18 @@ specified option.\n\
       { false, "CC", OCTAVE_CONF_CC },
       { false, "CC_VERSION", OCTAVE_CONF_CC_VERSION },
       { false, "CCOLAMD_LIBS", OCTAVE_CONF_CCOLAMD_LIBS },
       { false, "CFLAGS", OCTAVE_CONF_CFLAGS },
       { false, "CHOLMOD_LIBS", OCTAVE_CONF_CHOLMOD_LIBS },
       { false, "COLAMD_LIBS", OCTAVE_CONF_COLAMD_LIBS },
       { false, "CPICFLAG", OCTAVE_CONF_CPICFLAG },
       { false, "CPPFLAGS", OCTAVE_CONF_CPPFLAGS },
+      { false, "CURL_CPPFLAGS", OCTAVE_CONF_CURL_CPPFLAGS },
+      { false, "CURL_LDFLAGS", OCTAVE_CONF_CURL_LDFLAGS },
       { false, "CURL_LIBS", OCTAVE_CONF_CURL_LIBS },
       { false, "CXSPARSE_LIBS", OCTAVE_CONF_CXSPARSE_LIBS },
       { false, "CXX", OCTAVE_CONF_CXX },
       { false, "CXXCPP", OCTAVE_CONF_CXXCPP },
       { false, "CXXFLAGS", OCTAVE_CONF_CXXFLAGS },
       { false, "CXXPICFLAG", OCTAVE_CONF_CXXPICFLAG },
       { false, "CXX_VERSION", OCTAVE_CONF_CXX_VERSION },
       { false, "DEFAULT_PAGER", OCTAVE_DEFAULT_PAGER },
@@ -1251,16 +1253,18 @@ specified option.\n\
       { false, "LIBS", OCTAVE_CONF_LIBS },
       { false, "LN_S", OCTAVE_CONF_LN_S },
       { false, "MAGICK_INCFLAGS", OCTAVE_CONF_MAGICK_INCFLAGS },
       { false, "MAGICK_LIBS", OCTAVE_CONF_MAGICK_LIBS },
       { false, "MKOCTFILE_DL_LDFLAGS", OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS },
       { false, "OPENGL_LIBS", OCTAVE_CONF_OPENGL_LIBS },
       { false, "PTHREAD_CFLAGS", OCTAVE_CONF_PTHREAD_CFLAGS },
       { false, "PTHREAD_LIBS", OCTAVE_CONF_PTHREAD_LIBS },
+      { false, "QHULL_CPPFLAGS", OCTAVE_CONF_QHULL_CPPFLAGS },
+      { false, "QHULL_LDFLAGS", OCTAVE_CONF_QHULL_LDFLAGS },
       { false, "QHULL_LIBS", OCTAVE_CONF_QHULL_LIBS },
       { false, "QRUPDATE_LIBS", OCTAVE_CONF_QRUPDATE_LIBS },
       { false, "RANLIB", OCTAVE_CONF_RANLIB },
       { false, "RDYNAMIC_FLAG", OCTAVE_CONF_RDYNAMIC_FLAG },
       { false, "READLINE_LIBS", OCTAVE_CONF_READLINE_LIBS },
       { false, "REGEX_LIBS", OCTAVE_CONF_REGEX_LIBS },
       { false, "RLD_FLAG", OCTAVE_CONF_RLD_FLAG },
       { false, "SED", OCTAVE_CONF_SED },
