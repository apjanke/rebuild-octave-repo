# HG changeset patch
# User jwe
# Date 781838211 0
#      Tue Oct 11 01:16:51 1994 +0000
# Node ID 5148e500c2fbd6618c923e6485e7defc6f80076f
# Parent  c5d35bb139b6606cf8407975fa4329d38b56cc47
[project @ 1994-10-11 01:16:51 by jwe]

diff --git a/src/pt-exp-base.cc b/src/pt-exp-base.cc
--- a/src/pt-exp-base.cc
+++ b/src/pt-exp-base.cc
@@ -2382,63 +2382,65 @@ apply_mapper_fcn (const tree_constant& a
 	      else
 		error ("%s: unable to handle real arguments", m_fcn.name);
 	    }
 	  else if (m_fcn.d_d_mapper)
 	    retval = m_fcn.d_d_mapper (d);
 	  else
 	    error ("%s: unable to handle real arguments", m_fcn.name);
 	}
-      else if (arg.is_matrix_type ())
+      else
 	{
 	  Matrix m = arg.matrix_value ();
 
+	  if (error_state)
+	    return retval;
+
 	  if (m_fcn.can_return_complex_for_real_arg
 	      && (any_element_less_than (m, m_fcn.lower_limit)
 		  || any_element_greater_than (m, m_fcn.upper_limit)))
 	    {
 	      if (m_fcn.c_c_mapper)
 		retval = map (m_fcn.c_c_mapper, ComplexMatrix (m));
 	      else
 		error ("%s: unable to handle real arguments", m_fcn.name);
 	    }
 	  else if (m_fcn.d_d_mapper)
 	    retval = map (m_fcn.d_d_mapper, m);
 	  else
 	    error ("%s: unable to handle real arguments", m_fcn.name);
 	}
-      else
-	gripe_wrong_type_arg ("mapper", arg);
     }
   else if (arg.is_complex_type ())
     {
       if (arg.is_scalar_type ())
 	{
 	  Complex c = arg.complex_value ();
 
 	  if (m_fcn.d_c_mapper)
 	    retval = m_fcn.d_c_mapper (c);
 	  else if (m_fcn.c_c_mapper)
 	    retval = m_fcn.c_c_mapper (c);
 	  else
 	    error ("%s: unable to handle complex arguments", m_fcn.name);
 	}
-      else if (arg.is_matrix_type ())
+      else
 	{
 	  ComplexMatrix cm = arg.complex_matrix_value ();
 
+	  if (error_state)
+	    return retval;
+
 	  if (m_fcn.d_c_mapper)
 	    retval = map (m_fcn.d_c_mapper, cm);
 	  else if (m_fcn.c_c_mapper)
 	    retval = map (m_fcn.c_c_mapper, cm);
 	  else
 	    error ("%s: unable to handle complex arguments", m_fcn.name);
 	}
-      else
-	gripe_wrong_type_arg ("mapper", arg);
     }
   else
     gripe_wrong_type_arg ("mapper", arg);
 
   return retval;
 }
 
 Octave_object
