# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294922986 18000
#      Thu Jan 13 07:49:46 2011 -0500
# Node ID a2289858dcb218cc64151021b7c6e174097747c2
# Parent  e4e82740e9cd6f553f728b649bfb53286aaa8379
more warning flags for GCC if configured with --enable-extra-warning-flags (on by default)

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* configure.ac (AC_ARG_ENABLE(extra-warning-flags)): Check for
+	-Wcast-qual and -Wcast-align and add them to WARN_CFLAGS and
+	WARN_CXXFLAGS.
+
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac (AC_ARG_ENABLE(extra-warning-flags)): Check for
 	-Wpointer-arith, -Wmissing-prototypes, -Wstrict-prototypes, and
 	-Wwrite-strings and add them to WARN_CFLAGS.  Check for
 	-Wpointer-arith and add them to WARN_CXXFLAGS.
 
 2011-01-12  John W. Eaton  <jwe@octave.org>
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1858,16 +1858,22 @@ if $try_extra_warning_flags; then
     WARN_CFLAGS="$WARN_CFLAGS -Wmissing-prototypes";
     AC_MSG_RESULT([adding -Wmissing-prototypes to WARN_CFLAGS])])
   OCTAVE_CC_FLAG(-Wstrict-prototypes, [
     WARN_CFLAGS="$WARN_CFLAGS -Wstrict-prototypes";
     AC_MSG_RESULT([adding -Wstrict-prototypes to WARN_CFLAGS])])
   OCTAVE_CC_FLAG(-Wwrite-strings, [
     WARN_CFLAGS="$WARN_CFLAGS -Wwrite-strings";
     AC_MSG_RESULT([adding -Wwrite-strings to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wcast-align, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wcast-align";
+    AC_MSG_RESULT([adding -Wcast-align to WARN_CFLAGS])])
+  OCTAVE_CC_FLAG(-Wcast-qual, [
+    WARN_CFLAGS="$WARN_CFLAGS -Wcast-qual";
+    AC_MSG_RESULT([adding -Wcast-qual to WARN_CFLAGS])])
 
   OCTAVE_CXX_FLAG(-Wall, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wall";
     AC_MSG_RESULT([adding -Wall to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-W, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -W";
     AC_MSG_RESULT([adding -W to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wshadow, [
@@ -1880,21 +1886,27 @@ if $try_extra_warning_flags; then
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wformat";
     AC_MSG_RESULT([adding -Wformat to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wpointer-arith, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wpointer-arith";
     AC_MSG_RESULT([adding -Wpointer-arith to WARN_CXXFLAGS])])
   OCTAVE_CXX_FLAG(-Wwrite-strings, [
     WARN_CXXFLAGS="$WARN_CXXFLAGS -Wwrite-strings";
     AC_MSG_RESULT([adding -Wwrite-strings to WARN_CXXFLAGS])])
+  OCTAVE_CXX_FLAG(-Wcast-align, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wcast-align";
+    AC_MSG_RESULT([adding -Wcast-align to WARN_CXXFLAGS])])
+  OCTAVE_CXX_FLAG(-Wcast-qual, [
+    WARN_CXXFLAGS="$WARN_CXXFLAGS -Wcast-qual";
+    AC_MSG_RESULT([adding -Wcast-qual to WARN_CXXFLAGS])])
 fi
 
-GCC_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion"
+GCC_STRICT_FLAGS="-Wconversion"
 
-GXX_STRICT_FLAGS="-Wcast-align -Wcast-qual -Wconversion -Weffc++"
+GXX_STRICT_FLAGS="-Wconversion -Weffc++"
 
 try_strict_warning_flags=false
 
 AC_ARG_ENABLE(strict-warning-flags,
   [AS_HELP_STRING([--enable-strict-warning-flags],
      [add extra strict warning options to CFLAGS and CXXFLAGS (off by default)])],
   [if test "$enableval" = yes; then
      try_strict_warning_flags=true
