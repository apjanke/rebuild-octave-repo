# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438098759 25200
#      Tue Jul 28 08:52:39 2015 -0700
# Node ID e3f84a8c6788666d0e2449cd85b340ba34138d92
# Parent  d8535ec99c86fb622b10c3f79d38584a3ae2dca6
# Parent  5b7d7051a032cc6fabb7de4077cea1a3a12fed3d
maint: Periodic merge of stable to default.

diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -174,24 +174,30 @@ history_dock_widget::update_filter_histo
 
   _filter->insertItem (0, text);    // (re)insert at beginning
   _filter->setCurrentIndex (0);
 }
 
 void history_dock_widget::ctxMenu (const QPoint &xpos)
 {
   QMenu menu (this);
-  menu.addAction (resource_manager::icon ("edit-copy"),
+
+  QModelIndex index = _history_list_view->indexAt (xpos);
+
+  if (index.isValid () && index.column () == 0)
+    {
+      menu.addAction (resource_manager::icon ("edit-copy"),
                   tr ("Copy"), this, SLOT (handle_contextmenu_copy (bool)));
-  menu.addAction (tr ("Evaluate"), this,
+      menu.addAction (tr ("Evaluate"), this,
                   SLOT (handle_contextmenu_evaluate (bool)));
-  menu.addAction (resource_manager::icon ("document-new"),
+      menu.addAction (resource_manager::icon ("document-new"),
                   tr ("Create script"), this,
                   SLOT (handle_contextmenu_create_script (bool)));
-  menu.exec (_history_list_view->mapToGlobal (xpos));
+      menu.exec (_history_list_view->mapToGlobal (xpos));
+    }
 }
 
 void history_dock_widget::handle_contextmenu_copy (bool)
 {
   QString text;
   QItemSelectionModel *selectionModel = _history_list_view->selectionModel ();
   QModelIndexList rows = selectionModel->selectedRows ();
   QModelIndexList::iterator it;
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -87,26 +87,30 @@ workspace_view::workspace_view (QWidget 
 
   // Set the empty widget to have our layout.
   widget ()->setLayout (vbox_layout);
 
   // Initialize collapse/expand state of the workspace subcategories.
 
   QSettings *settings = resource_manager::get_settings ();
 
-  //enable sorting as previously configured
+  //enable sorting (setting column and order after model was set)
   view->setSortingEnabled (true);
-  view->sortByColumn (
+  // Initialize column order and width of the workspace
+  view->horizontalHeader ()->restoreState (
+    settings->value ("workspaceview/column_state").toByteArray ());
+  // Set header properties for sorting
+  view->horizontalHeader ()->setClickable (true);
+  view->horizontalHeader ()->setMovable (true);
+  view->horizontalHeader ()->setSortIndicator (
     settings->value ("workspaceview/sort_by_column",0).toInt (),
     static_cast<Qt::SortOrder>
     (settings->value ("workspaceview/sort_order", Qt::AscendingOrder).toUInt ())
   );
-  // Initialize column order and width of the workspace
-  view->horizontalHeader ()->restoreState (
-    settings->value ("workspaceview/column_state").toByteArray ());
+  view->horizontalHeader ()->setSortIndicatorShown (true);
 
   // Init state of the filter
   _filter->addItems (settings->value ("workspaceview/mru_list").toStringList ());
 
   bool filter_state =
     settings->value ("workspaceview/filter_active", false).toBool ();
   _filter_checkbox->setChecked (filter_state);
   filter_activate (filter_state);
@@ -153,16 +157,24 @@ workspace_view::~workspace_view (void)
 
 void workspace_view::setModel (workspace_model *model)
 {
   _filter_model.setSourceModel (model);
   _filter_model.setFilterKeyColumn(0);
 
   view->setModel (&_filter_model);
 
+  // set the sorting after a model was set, it would be ignored otherwise
+  QSettings *settings = resource_manager::get_settings ();
+  view->sortByColumn (
+    settings->value ("workspaceview/sort_by_column",0).toInt (),
+    static_cast<Qt::SortOrder>
+    (settings->value ("workspaceview/sort_order", Qt::AscendingOrder).toUInt ())
+  );
+
   _model = model;
 }
 
 void
 workspace_view::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
   QDockWidget::closeEvent (e);
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -2698,19 +2698,19 @@ returns the original array @var{A}.\n\
 }
 
 DEFUN (length, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} length (@var{a})\n\
 Return the length of the object @var{a}.\n\
 \n\
 The length is 0 for empty objects, 1 for scalars, and the number of elements\n\
-for vectors.  For matrix objects, the length is the number of rows or\n\
-columns, whichever is greater (this odd definition is used for compatibility\n\
-with @sc{matlab}).\n\
+for vectors.  For matrix or N-dimensional objects, the length is the number\n\
+of elements along the largest dimension\n\
+(equivalent to @w{@code{max (size (@var{a}))}}).\n\
 @seealso{numel, size}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).length ();
   else
diff --git a/scripts/plot/draw/private/__patch__.m b/scripts/plot/draw/private/__patch__.m
--- a/scripts/plot/draw/private/__patch__.m
+++ b/scripts/plot/draw/private/__patch__.m
@@ -33,27 +33,21 @@ function [h, failed] = __patch__ (p, var
   failed = false;
 
   is_numeric_arg = cellfun (@isnumeric, varargin);
 
   if (isempty (varargin))
     args = varargin;
   elseif (isstruct (varargin{1}))
     if (isfield (varargin{1}, "vertices") && isfield (varargin{1}, "faces"))
-      args{1} = "faces";
-      args{2} = getfield (varargin{1}, "faces");
-      args{3} = "vertices";
-      args{4} = getfield (varargin{1}, "vertices");
-      args{5} = "facevertexcdata";
-      if (isfield (varargin{1}, "facevertexcdata"))
-        args{6} = getfield (varargin{1}, "facevertexcdata");
-      else
-        args{6} = [];
-      endif
-      args = [args, varargin(2:end)];
+      fvs = varargin{1};
+      fvc = cell (1, 2*numfields (fvs));
+      fvc(1:2:end) = fieldnames (fvs);
+      fvc(2:2:end) = struct2cell (fvs);
+      args = [fvc{:}, varargin(2:end)];
     else
       failed = true;
     endif
   elseif (is_numeric_arg(1))
     if (nargin < 3 || ! is_numeric_arg(2))
       failed = true;
     else
       if (nargin > 4 && all (is_numeric_arg(1:4)))
