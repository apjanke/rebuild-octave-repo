# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1202546259 18000
#      Sat Feb 09 03:37:39 2008 -0500
# Node ID 8d6ab12f8fda3d17be69c515a726716af0c88ca7
# Parent  2a1cb886ec9821b7bc608cf47c6a397b8ed0590c
format Range output more like N-d arrays

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-02-09  John W. Eaton  <jwe@octave.org>
+
+	* pr-output.cc (set_range_format): Eliminate sign arg.
+	Change all callers.
+
 2008-02-08  John W. Eaton  <jwe@octave.org>
 
 	* ov-struct.cc (octave_struct::subsref): Allow Cell::index to resize.
 
 	* input.cc (interactive_input): Eliminate debug arg.  Change All uses.
 	(get_user_input): Don't process input_buf if there is an error.
 	Call reset_error_handler instead of setting error_state to 0.
 
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -1083,55 +1083,55 @@ static inline void
 set_format (const ComplexMatrix& cm)
 {
   int r_fw, i_fw;
   double scale;
   set_format (cm, r_fw, i_fw, scale);
 }
 
 static void
-set_range_format (bool sign, int x_max, int x_min, int all_ints, int& fw)
+set_range_format (int x_max, int x_min, int all_ints, int& fw)
 {
   static float_format fmt;
 
   int prec = Voutput_precision;
 
   int ld, rd;
 
   if (rat_format)
     {
       fw = 9;
       rd = 0;
     }
   else if (bank_format)
     {
       int digits = x_max > x_min ? x_max : x_min;
-      fw = sign + digits < 0 ? 4 : digits + 3;
+      fw = digits < 0 ? 5 : digits + 4;
       rd = 2;
     }
   else if (hex_format)
     {
       fw = 2 * sizeof (double);
       rd = 0;
     }
   else if (bit_format)
     {
       fw = 8 * sizeof (double);
       rd = 0;
     }
   else if (all_ints)
     {
       int digits = x_max > x_min ? x_max : x_min;
-      fw = sign + digits;
+      fw = digits + 1;
       rd = fw;
     }
   else if (Vfixed_point_format && ! print_g)
     {
       rd = prec;
-      fw = rd + 2 + sign;
+      fw = rd + 3;
     }
   else
     {
       int ld_max, rd_max;
       if (x_max > 0)
 	{
 	  ld_max = x_max;
 	  rd_max = prec > x_max ? prec - x_max : prec;
@@ -1156,33 +1156,33 @@ set_range_format (bool sign, int x_max, 
 	  ld_min = 1;
 	  rd_min = prec > x_min ? prec - x_min : prec;
 	  x_min = -x_min + 1;
 	}
 
       ld = ld_max > ld_min ? ld_max : ld_min;
       rd = rd_max > rd_min ? rd_max : rd_min;
 
-      fw = sign + 1 + ld + 1 + rd;
+      fw = ld + rd + 3;
     }
 
   if (! (rat_format || bank_format || hex_format || bit_format)
       && (print_e
 	  || print_g
 	  || (! Vfixed_point_format && fw > Voutput_max_field_width)))
     {
       if (print_g)
 	fmt = float_format ();
       else
 	{
 	  int exp_field = 4;
 	  if (x_max > 100 || x_min > 100)
 	    exp_field++;
 
-	  fw = sign + 2 + prec + exp_field;
+	  fw = 3 + prec + exp_field;
 
 	  fmt = float_format (fw, prec - 1, std::ios::scientific);
 	}
 
       if (print_big_e)
 	fmt.uppercase ();
     }
   else if (! bank_format && all_ints)
@@ -1207,32 +1207,30 @@ set_format (const Range& r, int& fw, dou
 
   if (r_max < r_min)
     {
       double tmp = r_max;
       r_max = r_min;
       r_min = tmp;
     }
 
-  bool sign = (r_min < 0.0);
-
   bool all_ints = r.all_elements_are_ints ();
 
   double max_abs = r_max < 0.0 ? -r_max : r_max;
   double min_abs = r_min < 0.0 ? -r_min : r_min;
 
   int x_max = max_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (max_abs) + 1.0));
 
   int x_min = min_abs == 0.0
     ? 0 : static_cast<int> (floor (log10 (min_abs) + 1.0));
 
   scale = (x_max == 0 || all_ints) ? 1.0 : std::pow (10.0, x_max - 1);
 
-  set_range_format (sign, x_max, x_min, all_ints, fw);
+  set_range_format (x_max, x_min, all_ints, fw);
 }
 
 static inline void
 set_format (const Range& r)
 {
   int fw;
   double scale;
   set_format (r, fw, scale);
