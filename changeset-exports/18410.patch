# HG changeset patch
# User John Donoghue <john.donoghue@ieee.org>
# Date 1391041513 18000
#      Wed Jan 29 19:25:13 2014 -0500
# Branch gui-release
# Node ID 073fbe7e6a3a75852686026ea0de904182c84a99
# Parent  a9cec5517d9255fa7ea35cd9d41384f434ab83ae
Use native separatos in __fltk_getfile__

* liboctave/system/file-ops.cc, liboctave/system/file-ops.h
  (file_ops::native_separator_path): New function.

* libinterp/dldfcn/__fltk_uigetfile__.cc
  (__fltk_uigetfile__): use file_ops::native_separator_path for returned file path.

diff --git a/libinterp/dldfcn/__fltk_uigetfile__.cc b/libinterp/dldfcn/__fltk_uigetfile__.cc
--- a/libinterp/dldfcn/__fltk_uigetfile__.cc
+++ b/libinterp/dldfcn/__fltk_uigetfile__.cc
@@ -118,20 +118,20 @@ Undocumented internal function.\n\
               fname = fc.value (n);
               idx = fname.find_last_of (sep);
               file_cell(n - 1) = fname.substr (idx + 1);
             }
           retval(0) = file_cell;
         }
 
       if (multi_type == Fl_File_Chooser::DIRECTORY)
-        retval(0) = std::string (fc.value ());
+        retval(0) = file_ops::native_separator_path (std::string (fc.value ()));
       else
         {
-          retval(1) = std::string (fc.directory ()) + sep;
+          retval(1) = file_ops::native_separator_path (std::string (fc.directory ()) + sep);
           retval(2) = fc.filter_value () + 1;
         }
     }
 
   fc.hide ();
   Fl::flush ();
 
   return retval;
diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -357,16 +357,35 @@ file_ops::concat (const std::string& dir
 {
   return dir.empty ()
          ? file
          : (is_dir_sep (dir[dir.length ()-1])
             ? dir + file
             : dir + dir_sep_char () + file);
 }
 
+std::string
+file_ops::native_separator_path(const std::string& path)
+{
+  std::string retval;
+  if (dir_sep_char() == '/')
+    retval = path;
+  else
+    {
+      int n = path.length ();
+      for (int  i = 0; i < n; i++)
+        {
+          if (path[i] == '/') 
+            retval += dir_sep_char();
+          else
+            retval += path[i];
+        }
+    }
+  return retval;
+}
 
 int
 octave_mkdir (const std::string& nm, mode_t md)
 {
   std::string msg;
   return octave_mkdir (nm, md, msg);
 }
 
diff --git a/liboctave/system/file-ops.h b/liboctave/system/file-ops.h
--- a/liboctave/system/file-ops.h
+++ b/liboctave/system/file-ops.h
@@ -90,16 +90,19 @@ public:
     if (ipos != std::string::npos)
       ipos++;
     else
       ipos = 0;
 
     return path.substr (ipos);
   }
 
+  // convert path from UNIX type separators to whatever is the system separators
+  static std::string native_separator_path (const std::string& path);
+
 private:
 
   static file_ops *instance;
 
   static void cleanup_instance (void) { delete instance; instance = 0; }
 
   // No copying!
 
