# HG changeset patch
# User Rik <rik@octave.org>
# Date 1343147691 25200
#      Tue Jul 24 09:34:51 2012 -0700
# Node ID 8f0e3c5bfa5fad500e802e6a0c126a51858a9592
# Parent  d8acad691f26756b2b9050843543626ae47b7d48
doc: Periodic grammarcheck of documentation

* fileattrib.m, glpk.m, axis.m, copyobj.m, gco.m, hdl2struct.m, struct2hdl.m,
eigs.cc, variables.cc:  Periodic grammarcheck of documentation

diff --git a/scripts/miscellaneous/fileattrib.m b/scripts/miscellaneous/fileattrib.m
--- a/scripts/miscellaneous/fileattrib.m
+++ b/scripts/miscellaneous/fileattrib.m
@@ -52,16 +52,17 @@
 ## @var{file}.
 ##
 ## @item UserExecute
 ## @itemx GroupExecute
 ## @itemx OtherExecute
 ## True if the user (group; other users) has execute permission for
 ## @var{file}.
 ## @end table
+##
 ## If an attribute does not apply (i.e., archive on a Unix system) then
 ## the field is set to NaN.
 ##
 ## With no input arguments, return information about the current
 ## directory.
 ##
 ## If @var{file} contains globbing characters, return information about
 ## all the matching files.
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -364,40 +364,43 @@
 ## Problem has no feasible solution.
 ##
 ## @item 184 (@w{@code{LPX_UNBND}})
 ## Problem has no unbounded solution.
 ##
 ## @item 185 (@w{@code{LPX_UNDEF}})
 ## Solution status is undefined.
 ## @end table
+##
 ## Interior Point Method:
 ##
 ## @table @asis
 ## @item 150 (@w{@code{LPX_T_UNDEF}})
 ## The interior point method is undefined.
 ##
 ## @item 151 (@w{@code{LPX_T_OPT}})
 ## The interior point method is optimal.
 ## @end table
+##
 ## Mixed Integer Method:
 ##
 ## @table @asis
 ## @item 170 (@w{@code{LPX_I_UNDEF}})
 ## The status is undefined.
 ##
 ## @item 171 (@w{@code{LPX_I_OPT}})
 ## The solution is integer optimal.
 ##
 ## @item 172 (@w{@code{LPX_I_FEAS}})
 ## Solution integer feasible but its optimality has not been proven
 ##
 ## @item 173 (@w{@code{LPX_I_NOFEAS}})
 ## No integer feasible solution.
 ## @end table
+##
 ## @noindent
 ## If an error occurs, @var{status} will contain one of the following
 ## codes:
 ##
 ## @table @asis
 ## @item 204 (@w{@code{LPX_E_FAULT}})
 ## Unable to start the search.
 ##
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -104,16 +104,17 @@
 ##
 ## @item "label[xyz]"
 ## Turn tic labels on for all axes, or turn them on for the
 ## specified axes and off for the remainder.
 ##
 ## @item "nolabel"
 ## Turn tic labels off for all axes.
 ## @end table
+##
 ## Note, if there are no tic marks for an axis, there can be no labels.
 ##
 ## @noindent
 ## The following options affect the direction of increasing values on
 ## the axes.
 ##
 ## @table @asis
 ## @item "ij"
diff --git a/scripts/plot/copyobj.m b/scripts/plot/copyobj.m
--- a/scripts/plot/copyobj.m
+++ b/scripts/plot/copyobj.m
@@ -10,22 +10,22 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn   {Function File} {@var{hnew} =} copyobj (@var{horig})
-## @deftypefnx  {Function File} {@var{hnew} =} copyobj (@var{horig}, @var{hparent})
-## Constructs a copy of the object associated with handle @var{horig}
-## and returns a handle, @var{hnew}, to the new object.
-## If a parent handle @var{hparent} (root, figure, axes or hggroup) is specified,
-## the copied object will be created as a child to @var{hparent}.
+## @deftypefn  {Function File} {@var{hnew} =} copyobj (@var{horig})
+## @deftypefnx {Function File} {@var{hnew} =} copyobj (@var{horig}, @var{hparent})
+## Construct a copy of the object associated with handle @var{horig}
+## and return a handle @var{hnew} to the new object.
+## If a parent handle @var{hparent} (root, figure, axes, or hggroup) is
+## specified, the copied object will be created as a child to @var{hparent}.
 ## @seealso{findobj, get, set, struct2hdl, hdl2struct}
 ## @end deftypefn
 
 ## Author: pdiribarne <pdiribarne@new-host.home>
 ## Created: 2012-04-01
 
 function hout = copyobj (hin, hpar = 0)
 
diff --git a/scripts/plot/gco.m b/scripts/plot/gco.m
--- a/scripts/plot/gco.m
+++ b/scripts/plot/gco.m
@@ -15,28 +15,28 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{h} =} gco ()
 ## @deftypefnx {Function File} {@var{h} =} gco (@var{fig})
 ## Return a handle to the current object of the current figure, or a handle
-## to the current object of the figure with handle @var{fig}. The current
-## object of a figure is the object that was last clicked on. It is stored
+## to the current object of the figure with handle @var{fig}.  The current
+## object of a figure is the object that was last clicked on.  It is stored
 ## in the CurrentObject property of the target figure.
 ##
 ## If the last mouse click didn't occur on any child object of the figure,
 ## the current object is the figure itself.
 ##
 ## If no mouse click occured in the target figure, this function returns and
 ## empty matrix.
 ##
 ## Note that the value returned by this function is not necessarily the same
-## as the one returned by gcbo during callback execution. An executing
+## as the one returned by gcbo during callback execution.  An executing
 ## callback can be interrupted by another callback and the current object
 ## can be modified.
 ##
 ##@seealso{gcbo, gcf}
 ##@end deftypefn
 
 function h = gco ()
 
diff --git a/scripts/plot/hdl2struct.m b/scripts/plot/hdl2struct.m
--- a/scripts/plot/hdl2struct.m
+++ b/scripts/plot/hdl2struct.m
@@ -10,18 +10,18 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 ## GNU General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{s} =} hdl2struct (@var{h})
-## Returns a structure, @var{s}, whose fields describe the properties
+## @deftypefn {Function File} {@var{s} =} hdl2struct (@var{h})
+## Return a structure, @var{s}, whose fields describe the properties
 ## of the object, and its children, associated with the handle, @var{h}.
 ## The fields of the structure, @var{s}, are "type", "handle", "properties",
 ## "children" and "special".
 ## @seealso{findobj, get, set, struct2hdl}
 ## @end deftypefn
 
 ## Author: pdiribarne <pdiribarne@new-host.home>
 ## Created: 2012-03-04
diff --git a/scripts/plot/struct2hdl.m b/scripts/plot/struct2hdl.m
--- a/scripts/plot/struct2hdl.m
+++ b/scripts/plot/struct2hdl.m
@@ -13,27 +13,27 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{h} =} struct2hdl (@var{s})
 ## @deftypefnx {Function File} {@var{h} =} struct2hdl (@var{s}, @var{p})
 ## @deftypefnx {Function File} {@var{h} =} struct2hdl (@var{s}, @var{p}, @var{hilev})
-## Constructs an object from the structure @var{s}. The structure must
+## Construct an object from the structure @var{s}.  The structure must
 ## contain the fields "handle", "type", "children", "properties", and
 ## "special".  If the handle of an existing figure or axes is specified,
 ## @var{p}, the new object will be created as a child to that object.
 ## If no object handle is provided, then a new figure and the necessary
 ## children will be constructed using the default object values from
 ## the root figure.
 ##
 ## A third boolean argument @var{hilev} can be passed to specify wether
-## the function should try to preserve listeners/calbacks e.g for
-## legends or hggroups. Default is false.
+## the function should try to preserve listeners/calbacks e.g., for
+## legends or hggroups.  Default is false.
 ## @seealso{findobj, get, hdl2struct, set}
 ## @end deftypefn
 
 ## Author: pdiribarne <pdiribarne@new-host.home>
 ## Created: 2012-03-04
 
 function [ h, matchout ] = struct2hdl (hgS, matchin=[], hilev = false)
 
diff --git a/src/DLD-FUNCTIONS/eigs.cc b/src/DLD-FUNCTIONS/eigs.cc
--- a/src/DLD-FUNCTIONS/eigs.cc
+++ b/src/DLD-FUNCTIONS/eigs.cc
@@ -253,16 +253,17 @@ Flag if @code{chol (@var{B})} is passed 
 false.\n\
 \n\
 @item permB\n\
 The permutation vector of the Cholesky@tie{}factorization of @var{B} if\n\
 @code{cholB} is true.  That is @code{chol (@var{B}(permB, permB))}.  The\n\
 default is @code{1:@var{n}}.\n\
 \n\
 @end table\n\
+\n\
 It is also possible to represent @var{A} by a function denoted @var{af}.\n\
 @var{af} must be followed by a scalar argument @var{n} defining the length\n\
 of the vector argument accepted by @var{af}.  @var{af} can be\n\
 a function handle, an inline function, or a string.  When @var{af} is a\n\
 string it holds the name of the function to use.\n\
 \n\
 @var{af} is a function of the form @code{y = af (x)}\n\
 where the required return value of @var{af} is determined by\n\
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -543,16 +543,17 @@ Check only for variables.\n\
 Check only for built-in functions.\n\
 \n\
 @item \"file\"\n\
 Check only for files.\n\
 \n\
 @item \"dir\"\n\
 Check only for directories.\n\
 @end table\n\
+\n\
 @seealso{file_in_loadpath}\n\
 @end deftypefn")
 {
   octave_value retval = false;
 
   int nargin = args.length ();
 
   if (nargin == 1 || nargin == 2)
@@ -2319,16 +2320,17 @@ Clears the local variable names.\n\
 \n\
 @item -classes, -c\n\
 Clears the class structure table and clears all objects.\n\
 \n\
 @item -regexp, -r\n\
 The arguments are treated as regular expressions as any variables that\n\
 match will be cleared.\n\
 @end table\n\
+\n\
 With the exception of @code{exclusive}, all long options can be used\n\
 without the dash as well.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
