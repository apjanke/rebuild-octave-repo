# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1293576064 18000
#      Tue Dec 28 17:41:04 2010 -0500
# Node ID a451eb6f92b2bac3a50908203a0f734dddf6ce05
# Parent  466ba499eff5166595ddc6f02c23752aa80fcda8
__plt__.m: Fix to allow inline legend keys. Bug 31991.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-12-28  Ben Abbott <bpabbott@mac.com>
+
+	* plot/private/__plt__.m: Fix to allow inline legend keys. Bug 31991.
+
 2010-12-28  Rik  <octave@nomad.inbox5.com>
 
 	* image/autumn.m, image/bone.m, image/cool.m, image/copper.m, 
 	image/flag.m, image/gray.m, image/hot.m, image/hsv.m, image/jet.m,
 	image/ocean.m, image/pink.m, image/prism.m, image/rainbow.m,
 	image/spring.m, image/summer.m, image/white.m, image/winter.m: Use
 	same variable name for documentation and function call.  Change demo
 	code to explicitly use colormap size.  Update docstring.
diff --git a/scripts/plot/private/__plt__.m b/scripts/plot/private/__plt__.m
--- a/scripts/plot/private/__plt__.m
+++ b/scripts/plot/private/__plt__.m
@@ -75,35 +75,35 @@ function retval = __plt__ (caller, h, va
               endif
               properties = [properties, varargin(k:k+1)];
               k += 2;
               nargs -= 2;
             endwhile
           endif
           if (y_set)
             tmp = __plt2__ (h, x, y, options, properties);
-            [hlgnd, tlgnd] = __plt_key__ (tmp, options);
+            [hlgnd, tlgnd] = __plt_key__ (tmp, options, hlgnd, tlgnd);
             properties = {};
             retval = [retval; tmp];
           else
             tmp = __plt1__ (h, x, options, properties);
-            [hlgnd, tlgnd] = __plt_key__ (tmp, options);
+            [hlgnd, tlgnd] = __plt_key__ (tmp, options, hlgnd, tlgnd);
             properties = {};
             retval = [retval; tmp];
           endif
           x_set = false;
           y_set = false;
         else
           error ("plot: no data to plot");
         endif
       elseif (x_set)
         if (y_set)
           options = __pltopt__ (caller, {""});
           tmp = __plt2__ (h, x, y, options, properties);
-          [hlgnd, tlgnd] = __plt_key__ (tmp, options);
+          [hlgnd, tlgnd] = __plt_key__ (tmp, options, hlgnd, tlgnd);
           retval = [retval; tmp];
           x = next_arg;
           y_set = false;
           properties = {};
         else
           y = next_arg;
           y_set = true;
         endif
@@ -118,28 +118,26 @@ function retval = __plt__ (caller, h, va
       legend (gca(), hlgnd, tlgnd);
     endif
   else
     error ("__plt__: invalid number of arguments");
   endif
 
 endfunction
 
-function [hlgnd, tlgnd] = __plt_key__ (h, options)
-  hlgnd = [];
-  tlgnd = {};
+function [hlgnd, tlgnd] = __plt_key__ (h, options, hlgnd, tlgnd)
   n = numel (h);
   if (numel (options) == 1)
     options = repmat (options(:), n, 1);
   endif
 
   for i = 1 : n
     key = options.key;
     if (! isempty (key))
-      hlgnd = [h(i), h(i)];
+      hlgnd = [hlgnd(:), h(i)];
       tlgnd = {tlgnd{:}, key};
     endif
   endfor
 endfunction
 
 function retval = __plt1__ (h, x1, options, properties)
 
   if (nargin < 2 || nargin > 4)
