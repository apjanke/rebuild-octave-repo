# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1235470300 -3600
#      Tue Feb 24 11:11:40 2009 +0100
# Node ID 97d146d1648b9bb3ebb0784dd99b671133f4d303
# Parent  9df4c9c94862599ca81d094735953576ec51d8c1
add missing scalar->int scalar conversions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,30 @@
+2009-02-24  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-scalar.h 
+	(octave_scalar::int8_scalar_value): New method.
+	(octave_scalar::int16_scalar_value): New method.
+	(octave_scalar::int32_scalar_value): New method.
+	(octave_scalar::int64_scalar_value): New method.
+	(octave_scalar::uint8_scalar_value): New method.
+	(octave_scalar::uint16_scalar_value): New method.
+	(octave_scalar::uint32_scalar_value): New method.
+	(octave_scalar::uint64_scalar_value): New method.
+
+	* ov-float.h 
+	(octave_float_scalar::int8_scalar_value): New method.
+	(octave_float_scalar::int16_scalar_value): New method.
+	(octave_float_scalar::int32_scalar_value): New method.
+	(octave_float_scalar::int64_scalar_value): New method.
+	(octave_float_scalar::uint8_scalar_value): New method.
+	(octave_float_scalar::uint16_scalar_value): New method.
+	(octave_float_scalar::uint32_scalar_value): New method.
+	(octave_float_scalar::uint64_scalar_value): New method.
+
 2009-02-24  John W. Eaton  <jwe@octave.org>
 
 	* OPERATORS/op-float-conv.cc: New file.
 	* Makefile.in (FLOAT_OP_XSRC): Add it to the list.
 	(DOUBLE_OP_XSRC): Move op-double-conv.cc here from INTTYPE_OP_XSRC.
 	* ops.h (DEFFLTCONVFN, DEFSTRFLTCONVFN): New macros.
 
 2009-02-23  John W. Eaton  <jwe@octave.org>
diff --git a/src/ov-float.h b/src/ov-float.h
--- a/src/ov-float.h
+++ b/src/ov-float.h
@@ -117,16 +117,32 @@ public:
   uint32NDArray
   uint32_array_value (void) const
     { return uint32NDArray (dim_vector (1, 1), scalar); }
 
   uint64NDArray
   uint64_array_value (void) const
     { return uint64NDArray (dim_vector (1, 1), scalar); }
 
+#define DEFINE_INT_SCALAR_VALUE(TYPE) \
+  octave_ ## TYPE \
+  TYPE ## _scalar_value (void) const \
+    { return octave_ ## TYPE (scalar); }
+
+  DEFINE_INT_SCALAR_VALUE (int8)
+  DEFINE_INT_SCALAR_VALUE (int16)
+  DEFINE_INT_SCALAR_VALUE (int32)
+  DEFINE_INT_SCALAR_VALUE (int64)
+  DEFINE_INT_SCALAR_VALUE (uint8)
+  DEFINE_INT_SCALAR_VALUE (uint16)
+  DEFINE_INT_SCALAR_VALUE (uint32)
+  DEFINE_INT_SCALAR_VALUE (uint64)
+
+#undef DEFINE_INT_SCALAR_VALUE
+
   double double_value (bool = false) const { return static_cast<double> (scalar); }
 
   float float_value (bool = false) const { return scalar; }
 
   double scalar_value (bool = false) const { return static_cast<double> (scalar); }
 
   float float_scalar_value (bool = false) const { return scalar; }
 
diff --git a/src/ov-scalar.h b/src/ov-scalar.h
--- a/src/ov-scalar.h
+++ b/src/ov-scalar.h
@@ -118,16 +118,32 @@ public:
   uint32NDArray
   uint32_array_value (void) const
     { return uint32NDArray (dim_vector (1, 1), scalar); }
 
   uint64NDArray
   uint64_array_value (void) const
     { return uint64NDArray (dim_vector (1, 1), scalar); }
 
+#define DEFINE_INT_SCALAR_VALUE(TYPE) \
+  octave_ ## TYPE \
+  TYPE ## _scalar_value (void) const \
+    { return octave_ ## TYPE (scalar); }
+
+  DEFINE_INT_SCALAR_VALUE (int8)
+  DEFINE_INT_SCALAR_VALUE (int16)
+  DEFINE_INT_SCALAR_VALUE (int32)
+  DEFINE_INT_SCALAR_VALUE (int64)
+  DEFINE_INT_SCALAR_VALUE (uint8)
+  DEFINE_INT_SCALAR_VALUE (uint16)
+  DEFINE_INT_SCALAR_VALUE (uint32)
+  DEFINE_INT_SCALAR_VALUE (uint64)
+
+#undef DEFINE_INT_SCALAR_VALUE
+
   double double_value (bool = false) const { return scalar; }
 
   float float_value (bool = false) const { return static_cast<float> (scalar); }
 
   double scalar_value (bool = false) const { return scalar; }
 
   float float_scalar_value (bool = false) const { return static_cast<float> (scalar); }
 
