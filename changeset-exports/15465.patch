# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1349122578 -7200
#      Mon Oct 01 22:16:18 2012 +0200
# Node ID ded4ce76ee7aabdede2e7aa8689356d57a55fa58
# Parent  930117c97760fe72097e7cba1a64cc4f29ffc8ab
save and restore the list of recently visited directories

* main-window.cc: added the contents of the combo-box with the actual and recently
  visited directories to read_setting and write_settings

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -198,24 +198,23 @@ void
 main_window::reset_windows ()
 {
   // TODO: Implement.
 }
 
 void
 main_window::current_working_directory_has_changed (const QString& directory)
 {
-  if (_current_directory_combo_box->count () > 31)
-    {
-      _current_directory_combo_box->removeItem (0);
+  int index = _current_directory_combo_box->findText (directory);
+  if ( index >= 0 )  // directory already in list -> remove it
+    { 
+      _current_directory_combo_box->removeItem (index);
     }
-  _current_directory_combo_box->addItem (directory);
-  int index = _current_directory_combo_box->findText (directory);
-  _current_directory_combo_box->setCurrentIndex (index);
-
+  _current_directory_combo_box->insertItem (0,directory);  // add (on top)
+  _current_directory_combo_box->setCurrentIndex (0);  // top is actual
   _files_dock_widget->set_current_directory (directory);
 }
 
 void
 main_window::change_current_working_directory ()
 {
   QString selectedDirectory =
     QFileDialog::getExistingDirectory(this, tr ("Set working direcotry"));
@@ -406,16 +405,22 @@ main_window::read_settings ()
         {
           QWidget *widget = qobject_cast<QWidget *> (obj);
           QVariant val = settings->value (name);
           widget->restoreGeometry (val.toByteArray ());
         }
     }
   settings->endGroup();
   restoreGeometry (settings->value ("MainWindow/geometry").toByteArray ());
+  // restore the list of the last directories
+  QStringList curr_dirs = settings->value ("MainWindow/current_directory_list").toStringList ();
+  for (int i=0; i < curr_dirs.size (); i++)
+    {
+      _current_directory_combo_box->addItem (curr_dirs.at (i));
+    }
   emit settings_changed ();
 }
 
 void
 main_window::write_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
@@ -431,16 +436,23 @@ main_window::write_settings ()
       if (obj->isWidgetType () && ! name.isEmpty ())
         {
           QWidget *widget = qobject_cast<QWidget *>(obj);
           settings->setValue (name, widget->saveGeometry ());
         }
     }
 
   settings->endGroup();
+  // write the list of recent used directories
+  QStringList curr_dirs;
+  for (int i=0; i<_current_directory_combo_box->count (); i++)
+    {
+      curr_dirs.append (_current_directory_combo_box->itemText (i));
+    }
+  settings->setValue ("MainWindow/current_directory_list",curr_dirs);
   settings->sync ();
 }
 
 void
 main_window::construct ()
 {
   _closing = false;   // flag for editor files when closed
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
@@ -455,17 +467,18 @@ main_window::construct ()
   _documentation_dock_widget= new documentation_dock_widget (this);
   _documentation_dock_widget->setStatusTip (tr ("See the documentation for help."));
   _status_bar               = new QStatusBar (this);
 
   _current_directory_combo_box = new QComboBox (this);
   _current_directory_combo_box->setFixedWidth (300);
   _current_directory_combo_box->setEditable (true);
   _current_directory_combo_box->setInsertPolicy (QComboBox::InsertAtTop);
-  _current_directory_combo_box->setMaxVisibleItems (14);
+  _current_directory_combo_box->setMaxVisibleItems (16);
+  _current_directory_combo_box->setMaxCount (16);
 
   _current_directory_tool_button = new QToolButton (this);
   _current_directory_tool_button->setIcon (QIcon(":/actions/icons/search.png"));
 
   _current_directory_up_tool_button = new QToolButton (this);
   _current_directory_up_tool_button->setIcon (QIcon(":/actions/icons/up.png"));
 
   // Octave Terminal subwindow.
