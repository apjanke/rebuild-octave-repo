# HG changeset patch
# User jwe
# Date 749695257 0
#      Mon Oct 04 00:40:57 1993 +0000
# Node ID 6906d6591452a1f3a8fbbfa6d64dbf674a2b58fc
# Parent  9d169ddba3b1dc942cbdaadc751c0bf33c3f87d6
[project @ 1993-10-04 00:40:57 by jwe]
Initial revision

diff --git a/src/token.cc b/src/token.cc
new file mode 100644
--- /dev/null
+++ b/src/token.cc
@@ -0,0 +1,139 @@
+// token.cc                                              -*- C++ -*-
+/*
+
+Copyright (C) 1992, 1993 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+
+*/
+
+#ifdef __GNUG__
+#pragma implementation
+#endif
+
+#include <assert.h>
+
+#include "token.h"
+#include "utils.h"
+#include "symtab.h"
+
+token::token (int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = generic_token;
+}
+
+token::token (char *s, int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = string_token;
+  str = strsave (s);
+}
+
+token::token (double d, int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = double_token;
+  num = d;
+}
+
+token::token (end_tok_type t, int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = ettype_token;
+  et = t;
+}
+
+token::token (plot_tok_type t, int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = pttype_token;
+  pt = t;
+}
+
+token::token (symbol_record *s, int l = -1, int c = -1)
+{
+  line_num = l;
+  column_num = c;
+  type_tag = sym_rec_token;
+  sr = s;
+}
+
+token::~token (void)
+{
+  if (type_tag == string_token)
+    delete [] str;
+}
+
+int
+token::line (void)
+{
+  return line_num;
+}
+
+int
+token::column (void)
+{
+  return column_num;
+}
+
+char *
+token::string (void)
+{
+  assert (type_tag == string_token);
+  return str;
+}
+
+double
+token::number (void)
+{
+  assert (type_tag == double_token);
+  return num;
+}
+
+token::end_tok_type
+token::ettype (void)
+{
+  assert (type_tag == ettype_token);
+  return et;
+}
+
+token::plot_tok_type
+token::pttype (void)
+{
+  assert (type_tag == pttype_token);
+  return pt;
+}
+
+symbol_record *
+token::sym_rec (void)
+{
+  assert (type_tag == sym_rec_token);
+  return sr;
+}
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; page-delimiter: "^/\\*" ***
+;;; End: ***
+*/
diff --git a/src/token.h b/src/token.h
new file mode 100644
--- /dev/null
+++ b/src/token.h
@@ -0,0 +1,100 @@
+// token.h                                               -*- C++ -*-
+/*
+
+Copyright (C) 1992, 1993 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, write to the Free
+Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
+
+*/
+
+#if !defined (_token_h)
+#define _token_h 1
+
+#ifdef __GNUG__
+#pragma interface
+#endif
+
+class symbol_record;
+
+class token
+{
+public:
+  enum token_type
+    {
+      generic_token,
+      string_token,
+      double_token,
+      ettype_token,
+      pttype_token,
+      sym_rec_token,
+    };
+
+  enum end_tok_type
+    {
+      simple_end,
+      for_end,
+      function_end,
+      if_end,
+      while_end,
+    };
+
+  enum plot_tok_type
+    {
+      two_dee = 2,
+      three_dee = 3,
+    };
+
+  token (int l = -1, int c = -1);
+  token (char *s, int l = -1, int c = -1);
+  token (double d, int l = -1, int c = -1);
+  token (end_tok_type t, int l = -1, int c = -1);
+  token (plot_tok_type t, int l = -1, int c = -1);
+  token (symbol_record *s, int l = -1, int c = -1);
+
+ ~token (void);
+
+  int line (void);
+  int column (void);
+
+  char *string (void);
+  double number (void);
+  end_tok_type ettype (void);
+  plot_tok_type pttype (void);
+  symbol_record *sym_rec (void);
+
+private:
+  int line_num;
+  int column_num;
+  token_type type_tag;
+  union
+    {
+      char *str;
+      double num;
+      end_tok_type et;
+      plot_tok_type pt;
+      symbol_record *sr;
+    };
+};
+
+#endif
+
+/*
+;;; Local Variables: ***
+;;; mode: C++ ***
+;;; page-delimiter: "^/\\*" ***
+;;; End: ***
+*/
