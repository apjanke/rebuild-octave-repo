# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1515439222 18000
#      Mon Jan 08 14:20:22 2018 -0500
# Node ID e721ca8bb801b8d57d2cf3112ea1fe005485f9e9
# Parent  ac9b4751c2239084e903875e85319d3d8c22424d
restore f77_exception_encountered, but deprecate and always define as 0

* f77-fcn.h (f77_exception_encountered): Restore previously deleted
variable as static const value set to 0 and tagged as deprecated.

diff --git a/liboctave/util/f77-fcn.h b/liboctave/util/f77-fcn.h
--- a/liboctave/util/f77-fcn.h
+++ b/liboctave/util/f77-fcn.h
@@ -40,16 +40,19 @@ extern "C" {
 
 #define F77_XFCN(f, F, args)                    \
   F77_FUNC (f, F) args
 
 #if ! defined (F77_FCN)
 #  define F77_FCN(f, F) F77_FUNC (f, F)
 #endif
 
+OCTAVE_DEPRECATED (4.4, "this variable is obsolete and should not be needed")
+static const int f77_exception_encountered = 0;
+
 /*
 
 The following macros are used for handling Fortran <-> C calling
 conventions.  They are defined below for three different types of
 systems, Cray (possibly now obsolete), Visual Fortran, and gfortran.
 Note that we don't attempt to handle Fortran functions, we always use
 subroutine wrappers for them and pass the return value as an extra
 argument.
