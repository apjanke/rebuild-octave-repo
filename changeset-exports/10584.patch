# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1272417006 -7200
#      Wed Apr 28 03:10:06 2010 +0200
# Node ID 6a81e809a39259ff90e232e2d65ea8b4c3c50df0
# Parent  78466af1913cfb63935c32c34e15095246edb9ef
Make errorbar objects markers be 'none'

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -11,16 +11,18 @@ 2010-04-27  David Bateman  <dbateman@fre
 
 	* plot/private/__default_plot_options_.m: New option errorstyle.
 	* plot/private/__pltopt__.m: Use errorstyle here seperately from
 	the linestyle so that both can be set.
 	* plot/private/__errcomm__.m: Allow for the fact that matrices
 	to __errplot__ with return a vector of handles.
 	* plot/private/__errplot__.m: Allow for default linestyles.
 
+	* plot/private/__errplot__.m: Set the errorbar marker to "none".
+
 2010-04-26  David Bateman  <dbateman@free.fr>
 
 	* plot/bar.m: Document the use of the colormap for the color of
 	the bars.
 
 	* plot/private/__errplot__.m: Allow x, box and xy errorbars with
 	different syntax.
 
diff --git a/scripts/plot/private/__errplot__.m b/scripts/plot/private/__errplot__.m
--- a/scripts/plot/private/__errplot__.m
+++ b/scripts/plot/private/__errplot__.m
@@ -59,30 +59,31 @@ function h = __errplot__ (fstr, p, a1, a
     hg = hggroup ("parent", p);
     h = [h; hg];
     args = __add_datasource__ ("__errplot__", hg, 
                                {"x", "y", "l", "u", "xl", "xu"});
 
     if (isempty (fmt.marker) && isempty (fmt.linestyle))
       [linestyle, marker] = __next_line_style__ ();
       if (isempty (fmt.color))
-        hl = __line__ (hg, "linestyle", linestyle, "marker", marker,
+        hl = __line__ (hg, "linestyle", linestyle, "marker", "none",
                        "color", __next_line_color__ ());
       else
-        hl = __line__ (hg, "linestyle", linestyle, "marker", marker,
+        hl = __line__ (hg, "linestyle", linestyle, "marker", "none",
                        "color", fmt.color);
       endif
     else
       if (isempty (fmt.color))
-        hl = __line__ (hg, "linestyle", fmt.linestyle, "marker", fmt.marker,
+        hl = __line__ (hg, "linestyle", fmt.linestyle, "marker", "none",
                        "color", __next_line_color__ ());
       else
-        hl = __line__ (hg, "linestyle", fmt.linestyle, "marker", fmt.marker,
+        hl = __line__ (hg, "linestyle", fmt.linestyle, "marker", "none",
                        "color", fmt.color);
       endif
+      marker = fmt.marker;
     endif
 
     ## FIXME -- note the code below adds the errorbar data directly as
     ## ldata, etc properties of the line objects, as gnuplot can handle
     ## this.  Matlab has the errorbar part of the plot as a special line
     ## object with embedded NaNs that draws the three segments of the
     ## bar separately.  Should we duplicate Matlab's behavior and stop
     ## using the ldata, etc. properties of the line objects that are
@@ -166,17 +167,17 @@ function h = __errplot__ (fstr, p, a1, a
     addlistener (hg, "xldata", @update_data);
     addlistener (hg, "xudata", @update_data);
 
     __line__ (hg, "xdata", get (hl, "xdata"), 
               "ydata", get (hl, "ydata"), 
               "color", get (hl, "color"),
               "linewidth", get (hl, "linewidth"),
               "linestyle", get (hl, "linestyle"), 
-              "marker", get (hl, "marker"), "parent", hg);
+              "marker", marker, "parent", hg);
   endfor
 
 endfunction
 
 function update_props (h, d)
   set (get (h, "children"), "color", get (h, "color"), 
        "linewidth", get (h, "linewidth"), "linestyle", get (h, "linestyle"), 
        "marker", get (h, "marker"), "markersize", get (h, "markersize"),
