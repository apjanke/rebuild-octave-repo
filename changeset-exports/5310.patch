# HG changeset patch
# User jwe
# Date 1114616333 0
#      Wed Apr 27 15:38:53 2005 +0000
# Node ID 2fbcdc356fc72ead339c262cc82cdb857386a97e
# Parent  15031c6fab31d7e3ab5409a0af3879cb68886e0e
[project @ 2005-04-27 15:38:53 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2005-04-27  John W. Eaton  <jwe@octave.org>
+
+	* optimization/qp.m: Define n_in after removing -Inf bounds from Ain.
+
 2005-04-21  John W. Eaton  <jwe@octave.org>
 
 	* optimization/glpk.m: Handle SENSE argument.
 
 	* optimization/qp.m, optimization/sqp.m: New files.
 
 2005-04-08  John W. Eaton  <jwe@octave.org>
 
diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -161,30 +161,31 @@ function [x, obj, INFO, lambda] = qp (x0
 	    error ("qp: inequality constraint matrix and upper bound vector inconsistent");
 	  else
 	    Ain = [Ain; -A_in];
 	    bin = [bin; -A_ub];
 	  endif
 	endif
       endif
     endif
-    n_in = length (bin);
 
     ## Now we should have the following QP:
     ##
     ##   min_x  0.5*x'*H*x + x'*q
     ##   s.t.   A*x = b
     ##          Ain*x >= bin
 
     ## Discard inequality constraints that have -Inf bounds since those
     ## will never be active.
     idx = isinf (bin) & bin < 0;
     bin(idx) = [];
     Ain(idx,:) = [];
 
+    n_in = length (bin);
+
     ## Check if the initial guess is feasible.
     rtol = sqrt (eps);
 
     eq_infeasible = (n_eq > 0 && norm (A*x0-b) > rtol*(1+norm (b)));
     in_infeasible = (n_in > 0 && any (Ain*x0-bin < -rtol*(1+norm (bin))));
 
     info = 0;
     if (eq_infeasible || in_infeasible)
