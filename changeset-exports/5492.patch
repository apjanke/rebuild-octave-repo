# HG changeset patch
# User jwe
# Date 1129222703 0
#      Thu Oct 13 16:58:23 2005 +0000
# Node ID 179096e8e57fcb58c6e39491afbfd81e349e7693
# Parent  eacb3f5cfb993ecf74be8b38c12dbf667dbb3fa4
[project @ 2005-10-13 16:58:23 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2005-10-13  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/gplot.l (F__gnuplot_raw__):
+	Call print_usage with correct function name.
+
 2005-10-12  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/gplot.l: Major cleanup.
 	Built-in variable gnuplot_has_frames no longer necessary.
 	(gnuplot): New class to manage multiple gnuplot processes.
 	(handle_string): Delete.  It was only used for the case of
 	__gnuplot_plot__ "file", which is no longer allowed.
 
diff --git a/src/DLD-FUNCTIONS/gplot.l b/src/DLD-FUNCTIONS/gplot.l
--- a/src/DLD-FUNCTIONS/gplot.l
+++ b/src/DLD-FUNCTIONS/gplot.l
@@ -1,8 +1,31 @@
+/*
+
+Copyright (C) 2004 John W. Eaton and Teemu Ikonen
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 2, or (at your option) any
+later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octavee; see the file COPYING.  If not, write to the Free
+Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+02110-1301, USA.
+
+*/
+
 %option prefix="gpt"
 %option noyywrap
 
 %{
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_plot__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_set__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_splot__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_replot__");
@@ -280,83 +303,16 @@ is_plot_keyword (const std::string& s)
   else if (almost_match ("axes", s, 2) || almost_match ("axis", s, 2))
     return AXES;
   else if ("clear" == s)
     return CLEAR;
   else
     return 0;
 }
 
-// This is used to handle single-quote delimited strings.  Kludge alert.
-
-static int
-handle_string (char delim)
-{
-  static char *buf = 0;
-
-  int c;
-  bool escape_pending = false;
-
-  std::string strbuf (1, static_cast<char> (delim));
-
-  while ((c = yyinput ()) != EOF)
-    {
-      if (c == '\\')
-	{
-	  if (escape_pending)
-	    {
-	      strbuf += static_cast<char> (c);
-	      escape_pending = false;
-	    }
-	  else
-	    {
-		strbuf += static_cast<char> (c);
-		escape_pending = true;
-	    }
-	  continue;
-	}
-      else if (c == '\n')
-	{
-	  error ("unterminated string constant");
-	  break;
-	}
-      else if (c == delim)
-	{
-	  if (escape_pending)
-	    strbuf += static_cast<char> (c);
-	  else
-	    {
-	      c = yyinput ();
-
-	      if (c == delim)
-		{
-		  strbuf += static_cast<char> (c);
-		  strbuf += static_cast<char> (c);
-		}
-	      else
-		{
-		  yyunput (c, yytext);
-		  strbuf += static_cast<char> (delim);
-		  delete [] buf;
-		  yytext = strsave (strbuf.c_str ());
-		  return STRING;
-		}
-	    }
-	}
-      else
-	strbuf += static_cast<char> (c);
-
-      escape_pending = false;
-    }
-
-  throw gpt_parse_error ("unterminated string");
-
-  return 0;
-}
-
 // (Probably not necessesary, but current Matlab style plot functions
 // break without this (they emit too short gnuplot commands))
 
 static std::string
 plot_style_token (const std::string& s)
 {
   std::string retval;
 
