# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1442741256 -7200
#      Sun Sep 20 11:27:36 2015 +0200
# Branch stable
# Node ID 635c93bba6b606090c40a9ad6e9304878a30c1a1
# Parent  6ef177ddc1ee7814b0305b24086148b961be6532
doc: Make excplicit that asctime and ctime values end in a newline (bug #45976)

* asctime.m, ctime.m: Update docstrings to show trailing newline in the returned
string.  Add %!tests.

diff --git a/scripts/time/asctime.m b/scripts/time/asctime.m
--- a/scripts/time/asctime.m
+++ b/scripts/time/asctime.m
@@ -14,24 +14,24 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} asctime (@var{tm_struct})
 ## Convert a time structure to a string using the following
-## format: @qcode{"ddd mmm mm HH:MM:SS yyyy"}.
+## format: @qcode{"ddd mmm mm HH:MM:SS yyyy@xbackslashchar{}n"}.
 ##
 ## For example:
 ##
 ## @example
 ## @group
 ## asctime (localtime (time ()))
-##      @result{} "Mon Feb 17 01:15:06 1997"
+##      @result{} "Mon Feb 17 01:15:06 1997@xbackslashchar{}n"
 ## @end group
 ## @end example
 ##
 ## This is equivalent to @code{ctime (time ())}.
 ## @seealso{ctime, localtime, time}
 ## @end deftypefn
 
 ## Author: jwe
@@ -46,11 +46,13 @@ function retval = asctime (tm_struct)
 
 endfunction
 
 
 %!test
 %! t = time ();
 %! assert (strcmp (asctime (localtime (t)), ctime (t)));
 
+%!assert (asctime (localtime (time ()))(end), "\n")
+
 %!error asctime ()
 %!error asctime (1, 2)
 
diff --git a/scripts/time/ctime.m b/scripts/time/ctime.m
--- a/scripts/time/ctime.m
+++ b/scripts/time/ctime.m
@@ -23,17 +23,17 @@
 ## @code{asctime}.
 ##
 ## The function @code{ctime (time)} is equivalent to
 ## @code{asctime (localtime (time))}.  For example:
 ##
 ## @example
 ## @group
 ## ctime (time ())
-##    @result{} "Mon Feb 17 01:15:06 1997"
+##    @result{} "Mon Feb 17 01:15:06 1997@xbackslashchar{}n"
 ## @end group
 ## @end example
 ## @seealso{asctime, time, localtime}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = ctime (t)
@@ -46,11 +46,13 @@ function retval = ctime (t)
 
 endfunction
 
 
 %!test
 %! t = time ();
 %! assert (strcmp (asctime (localtime (t)), ctime (t)));
 
+%!assert (ctime (time ())(end), "\n")
+
 %!error ctime ()
 %!error ctime (1, 2)
 
