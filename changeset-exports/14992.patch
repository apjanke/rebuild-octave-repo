# HG changeset patch
# User Michael Goffioul
# Date 1342536533 18000
#      Tue Jul 17 09:48:53 2012 -0500
# Node ID fd8d1a616be1c2ca1c1fc26a0be245eda6202059
# Parent  6bc39019f7260fb4b0f81f0ea311240a79ad094b
Compile JIT on msvc

* src/TEMPLATE-INST/Array-jit.cc: Mark Array<octave_idx_type> as dll import.

* src/pt-jit.cc: Include symtab.h.
* src/pt-jit.h: Avoid including Array<octave_value> in Cell.h.

diff --git a/src/TEMPLATE-INST/Array-jit.cc b/src/TEMPLATE-INST/Array-jit.cc
--- a/src/TEMPLATE-INST/Array-jit.cc
+++ b/src/TEMPLATE-INST/Array-jit.cc
@@ -24,15 +24,17 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #ifdef HAVE_LLVM
 
 #include "Array.h"
 #include "Array.cc"
 
+extern template class OCTAVE_API Array<octave_idx_type>;
+
 #include "pt-jit.h"
 
 NO_INSTANTIATE_ARRAY_SORT (jit_operation::overload);
 
 INSTANTIATE_ARRAY (jit_operation::overload, OCTINTERP_API);
 
 #endif
diff --git a/src/pt-jit.cc b/src/pt-jit.cc
--- a/src/pt-jit.cc
+++ b/src/pt-jit.cc
@@ -55,16 +55,17 @@ along with Octave; see the file COPYING.
 
 #include "octave.h"
 #include "ov-fcn-handle.h"
 #include "ov-usr-fcn.h"
 #include "ov-builtin.h"
 #include "ov-scalar.h"
 #include "ov-complex.h"
 #include "pt-all.h"
+#include "symtab.h"
 
 static llvm::IRBuilder<> builder (llvm::getGlobalContext ());
 
 static llvm::LLVMContext& context = llvm::getGlobalContext ();
 
 jit_typeinfo *jit_typeinfo::instance;
 
 // thrown when we should give up on JIT and interpret
diff --git a/src/pt-jit.h b/src/pt-jit.h
--- a/src/pt-jit.h
+++ b/src/pt-jit.h
@@ -30,17 +30,16 @@ along with Octave; see the file COPYING.
 #include <set>
 #include <stdexcept>
 #include <vector>
 #include <stack>
 
 #include "Array.h"
 #include "Range.h"
 #include "pt-walk.h"
-#include "symtab.h"
 
 // -------------------- Current status --------------------
 // Simple binary operations (+-*/) on octave_scalar's (doubles) are optimized.
 // a = 5;
 // b = a * 5 + a;
 //
 // Indexing matrices with scalars works.
 //
