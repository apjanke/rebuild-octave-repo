# HG changeset patch
# User Rik <rik@octave.org>
# Date 1377703778 25200
#      Wed Aug 28 08:29:38 2013 -0700
# Node ID a31b54b5f84a857efae925369204f98312637193
# Parent  b81b9d079515fc60486fbee7755e918b72c680ee
Use only 1 space between '%!' and start of test/demo code.

* libinterp/corefcn/besselj.cc, scripts/miscellaneous/private/__xzip__.m,
scripts/statistics/tests/kolmogorov_smirnov_test.m, scripts/ui/msgbox.m,
test/global.tst, test/jit.tst: Use only 1 space between '%!' and start of
test/demo code.

diff --git a/libinterp/corefcn/besselj.cc b/libinterp/corefcn/besselj.cc
--- a/libinterp/corefcn/besselj.cc
+++ b/libinterp/corefcn/besselj.cc
@@ -907,17 +907,17 @@ return @code{NaN}.\n\
 %!
 %!assert (besselj (alpha,x,1), jx*exp(-abs(imag(x))), 100*eps)
 %!assert (bessely (alpha,x,1), yx*exp(-abs(imag(x))), 100*eps)
 %!assert (besseli (alpha,x,1), ix*exp(-abs(real(x))), 100*eps)
 %!assert (besselk (alpha,x,1), kx*exp(x), 100*eps)
 %!assert (besselh (alpha,1,x,1), (jx + I*yx)*exp(-I*x), 100*eps)
 %!assert (besselh (alpha,2,x,1), (jx - I*yx)*exp(I*x), 100*eps)
 %!
-%!  nix = 0.09822388691172060573913739253 - 0.7110230642207380127317227407*I;
+%! nix = 0.09822388691172060573913739253 - 0.7110230642207380127317227407*I;
 %!
 %!assert (besselj (-alpha,x), yx, 100*eps)
 %!assert (bessely (-alpha,x), -jx, 100*eps)
 %!assert (besseli (-alpha,x), nix, 100*eps)
 %!assert (besselk (-alpha,x), kx, 100*eps)
 %!assert (besselh (-alpha,1,x), -I*(jx + I*yx), 100*eps)
 %!assert (besselh (-alpha,2,x), I*(jx - I*yx), 100*eps)
 %!
diff --git a/scripts/miscellaneous/private/__xzip__.m b/scripts/miscellaneous/private/__xzip__.m
--- a/scripts/miscellaneous/private/__xzip__.m
+++ b/scripts/miscellaneous/private/__xzip__.m
@@ -103,16 +103,17 @@ function [d, f] = myfileparts (files)
   [d, f, ext] = cellfun ("fileparts", files, "uniformoutput", false);
   f = cellfun (@(x, y) sprintf ("%s%s", x, y), f, ext,
                "uniformoutput", false);
   idx = cellfun ("isdir", files);
   d(idx) = "";
   f(idx) = files(idx);
 endfunction
 
+
 ## FIXME -- reinstate these tests if we invent a way to test private
 ## functions directly.
 ##
 ## %!error <extension has to be a string with finite length>
 ## %!  __xzip__ ("gzip", "", "gzip -r %s", "bla");
 ## %!error <no files to move>
 ## %!  __xzip__ ("gzip", ".gz", "gzip -r %s", tmpnam);
 ## %!error <command failed with exit status>
@@ -124,8 +125,9 @@ endfunction
 ## %!    dirname  = tmpnam;
 ## %!    mkdir (dirname);
 ## %!    entry = __xzip__ ("gzip", ".gz", "xxxzipxxx -r %s 2>/dev/null",
 ## %!                     filename, dirname);
 ## %!  unwind_protect_cleanup
 ## %!    delete (filename);
 ## %!    rmdir (dirname);
 ## %!  end_unwind_protect
+
diff --git a/scripts/statistics/tests/kolmogorov_smirnov_test.m b/scripts/statistics/tests/kolmogorov_smirnov_test.m
--- a/scripts/statistics/tests/kolmogorov_smirnov_test.m
+++ b/scripts/statistics/tests/kolmogorov_smirnov_test.m
@@ -116,12 +116,12 @@ endfunction
 ## test for recognition of logistic_cdf function
 %!assert (kolmogorov_smirnov_test (0:100, "logistic"), 0)
 ## test for  F < G
 %!assert (kolmogorov_smirnov_test (50:100, "unif", 0, 50, "<"))
 
 %!error kolmogorov_smirnov_test (1)
 %!error <X must be a vector> kolmogorov_smirnov_test ({}, "unif", 2, 4)
 %!error <no not_a_distcdf or not_a_dist_cdf function found>
-%!  kolmogorov_smirnov_test (1, "not_a_dist");
+%! kolmogorov_smirnov_test (1, "not_a_dist");
 %!error <alternative foo not recognized>
-%!  kolmogorov_smirnov_test (1, "unif", 2, 4, "foo");
+%! kolmogorov_smirnov_test (1, "unif", 2, 4, "foo");
 
diff --git a/scripts/ui/msgbox.m b/scripts/ui/msgbox.m
--- a/scripts/ui/msgbox.m
+++ b/scripts/ui/msgbox.m
@@ -40,15 +40,17 @@ function retval = msgbox (msg, title = "
   if (nargin < 1 || nargin > 3)
     print_usage ();
   endif
 
   retval = message_dialog ("msgbox", msg, title, varargin{:});
 
 endfunction
 
-%!demo
-%!  disp('- test msgbox message only.');
-%!  msgbox("Below, you should see 3 lines:\nline #1\nline #2, and\nline #3.");
 
 %!demo
-%!  disp('- test msgbox message and caption.');
-%!  msgbox('You should see a single line.','A msgbox');
+%! disp('- test msgbox message only.');
+%! msgbox("Below, you should see 3 lines:\nline #1\nline #2, and\nline #3.");
+
+%!demo
+%! disp('- test msgbox message and caption.');
+%! msgbox('You should see a single line.','A msgbox');
+
diff --git a/test/global.tst b/test/global.tst
--- a/test/global.tst
+++ b/test/global.tst
@@ -34,18 +34,18 @@
 %!test
 %! global G = 1;
 %! f ();
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
-%!  f;
-%!  fail ("H");
+%! f;
+%! fail ("H");
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %!function g ()
 %!  fail ("H");
 %!test
diff --git a/test/jit.tst b/test/jit.tst
--- a/test/jit.tst
+++ b/test/jit.tst
@@ -36,19 +36,19 @@
 %!   endif
 %! endfor
 %! assert (i, 1);
 
 %!testif HAVE_LLVM
 %! while (1)
 %!   if (1)
 %!     break;
-%!  else
-%!    break;
-%!  endif
+%!   else
+%!     break;
+%!   endif
 %! endwhile
 
 %!testif HAVE_LLVM
 %! for i=1:1e6
 %!   if (i == 100)
 %!     break;
 %!   endif
 %! endfor
