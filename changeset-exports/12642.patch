# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1304275190 25200
#      Sun May 01 11:39:50 2011 -0700
# Branch stable
# Node ID f96b9b9f141b3d2e472f1bd26ae0c89536574e7e
# Parent  4d777e05d47c2a82879e5ad7f1d9ca8a5869741b
doc: Periodic grammarcheck and spellcheck of documentation.

* func.txi: Correct two misspellings
* cumtrapz.m, dblquad.m, quadgk.m, quadl.m, quadv.m, trapz.m, triplequad.m,
cond.m, gmres.m, bzip2.m, compare_versions.m, getappdata.m, unpack.m, ver.m,
glpk.m, pkg.m, axis.m, uigetdir.m, uigetfile.m, view.m, prctile.m, quantile.m,
unidcdf.m, unidinv.m, isstrprop.m, balance.cc, besselj.cc, cellfun.cc,
colamd.cc, dot.cc, eigs.cc, fftw.cc, matrix_type.cc, pinv.cc, qr.cc, quad.cc,
quadcc.cc, qz.cc, regexp.cc, schur.cc, time.cc (gmtime), typecast.cc
urlwrite.cc bitfcns.cc (bitshift), data.cc (rem, norm, merge) debug.cc
(dbstatus), dirfns.cc (glob), file-io.cc (freport), load-path.cc (genpath),
load-save.cc (save), mappers.cc (islower, isupper, tolower, toupper)
oct-hist.cc (edit_history), ov-fcn-inline.cc (vectorize), ov.cc (subsref),
syscalls.cc (stat), variables.cc (whos, clear): Improve docstrings.
Removed trailing whitespace characters on line.

diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -348,17 +348,17 @@ if (nargin < min_#_inputs || nargin > ma
 endif
 @end group
 @end example
 
 @noindent
 which stops the function execution and prints a message about the correct
 way to call the function whenever the number of inputs is wrong.
 
-For compatability with @sc{matlab}, @code{nargchk} and @code{nargoutchk} are
+For compatibility with @sc{matlab}, @code{nargchk} and @code{nargoutchk} are
 available which provide similar error checking.
 
 @DOCSTRING(nargchk)
 
 @DOCSTRING(nargoutchk)
 
 @anchor{doc-varargin} @anchor{doc-varargout}
 @node Variable-length Argument Lists
@@ -1323,17 +1323,17 @@ Input-output functions.
 
 @item linear-algebra
 Functions for linear algebra.
 
 @item miscellaneous
 Functions that don't really belong anywhere else.
 
 @item optimization
-Functions related to minimzation, optimization, and root finding.
+Functions related to minimization, optimization, and root finding.
 
 @item path
 Functions to manage the directory path Octave uses to find functions.
 
 @item pkg
 Package manager for installing external packages of functions in Octave.
 
 @item plot
diff --git a/scripts/general/cumtrapz.m b/scripts/general/cumtrapz.m
--- a/scripts/general/cumtrapz.m
+++ b/scripts/general/cumtrapz.m
@@ -22,17 +22,17 @@
 ## @deftypefnx {Function File} {@var{q} =} cumtrapz (@dots{}, @var{dim})
 ##
 ## Cumulative numerical integration of points @var{y} using the trapezoidal
 ## method.
 ## @w{@code{cumtrapz (@var{y})}} computes the cumulative integral of @var{y}
 ## along the first non-singleton dimension.  Where @code{trapz} reports
 ## only the overall integral sum, @code{cumtrapz} reports the current partial
 ## sum value at each point of @var{y}.  When the argument @var{x} is omitted
-## an equally spaced @var{x} vector with unit spacing (1) is assumed. 
+## an equally spaced @var{x} vector with unit spacing (1) is assumed.
 ## @code{cumtrapz (@var{x}, @var{y})} evaluates the integral with respect to
 ## the spacing in @var{x} and the values in @var{y}.  This is useful if the
 ## points in @var{y} have been sampled unevenly.  If the optional @var{dim}
 ## argument is given, operate along this dimension.
 ##
 ## If @var{x} is not specified then unit spacing will be used.  To scale
 ## the integral to the correct value you must multiply by the actual spacing
 ## value (deltaX).
diff --git a/scripts/general/dblquad.m b/scripts/general/dblquad.m
--- a/scripts/general/dblquad.m
+++ b/scripts/general/dblquad.m
@@ -27,17 +27,17 @@
 ## have the form @math{z = f(x,y)} where @var{x} is a vector and @var{y} is a
 ## scalar.  It should return a vector of the same length and orientation as
 ## @var{x}.
 ##
 ## @var{xa}, @var{ya} and @var{xb}, @var{yb} are the lower and upper limits of
 ## integration for x and y respectively.  The underlying integrator determines
 ## whether infinite bounds are accepted.
 ##
-## The optional argument @var{tol} defines the absolute tolerance used to 
+## The optional argument @var{tol} defines the absolute tolerance used to
 ## integrate each sub-integral.  The default value is @math{1e^{-6}}.
 ##
 ## The optional argument @var{quadf} specifies which underlying integrator
 ## function to use.  Any choice but @code{quad} is available and the default
 ## is @code{quadgk}.
 ##
 ## Additional arguments, are passed directly to @var{f}.  To use the default
 ## value for @var{tol} or @var{quadf} one may pass an empty matrix ([]).
diff --git a/scripts/general/quadgk.m b/scripts/general/quadgk.m
--- a/scripts/general/quadgk.m
+++ b/scripts/general/quadgk.m
@@ -47,21 +47,21 @@
 ##
 ## @noindent
 ## Note that the formulation of the integrand uses the
 ## element-by-element operator @code{./} and all user functions to
 ## @code{quadgk} should do the same.
 ##
 ## The optional argument @var{tol} defines the absolute tolerance used to stop
 ## the integration procedure.  The default value is @math{1e^{-10}}.
-## 
+##
 ## The algorithm used by @code{quadgk} involves subdividing the
 ## integration interval and evaluating each subinterval.
 ## If @var{trace} is true then after computing each of these partial
-## integrals display: (1) the number of subintervals at this step, 
+## integrals display: (1) the number of subintervals at this step,
 ## (2) the current estimate of the error @var{err}, (3) the current estimate
 ## for the integral @var{q}.
 ##
 ## Alternatively, properties of @code{quadgk} can be passed to the function as
 ## pairs @code{"@var{prop}", @var{val}}.  Valid properties are
 ##
 ## @table @code
 ## @item AbsTol
@@ -111,18 +111,18 @@
 ##         [1-1i, -1,-1i, -1+1i])
 ## @end group
 ## @end example
 ##
 ## @noindent
 ## integrates @code{log (z)} along the square defined by @code{[1+1i,
 ##  1-1i, -1-1i, -1+1i]}
 ##
-## The result of the integration is returned in @var{q}.  
-## @var{err} is an approximate bound on the error in the integral 
+## The result of the integration is returned in @var{q}.
+## @var{err} is an approximate bound on the error in the integral
 ## @code{abs (@var{q} - @var{I})}, where @var{I} is the exact value of the
 ## integral.
 ##
 ## @seealso{quad, quadv, quadl, quadcc, trapz, dblquad, triplequad}
 ## @end deftypefn
 
 function [q, err] = quadgk (f, a, b, varargin)
   if (nargin < 3)
diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -34,17 +34,17 @@
 ##
 ## The optional argument @var{tol} defines the relative tolerance with which
 ## to perform the integration.  The default value is @code{eps}.
 ##
 ## The algorithm used by @code{quadl} involves recursively subdividing the
 ## integration interval.
 ## If @var{trace} is defined then for each subinterval display: (1) the left
 ## end of the subinterval, (2) the length of the subinterval, (3) the
-## approximation of the integral over the subinterval. 
+## approximation of the integral over the subinterval.
 ##
 ## Additional arguments @var{p1}, etc., are passed directly to the function
 ## @var{f}.  To use default values for @var{tol} and @var{trace}, one may pass
 ## empty matrices ([]).
 ##
 ## Reference: W. Gander and W. Gautschi, @cite{Adaptive Quadrature -
 ## Revisited}, BIT Vol. 40, No. 1, March 2000, pp. 84--101.
 ## @url{http://www.inf.ethz.ch/personal/gander/}
diff --git a/scripts/general/quadv.m b/scripts/general/quadv.m
--- a/scripts/general/quadv.m
+++ b/scripts/general/quadv.m
@@ -28,17 +28,17 @@
 ## @var{f} is a function handle, inline function, or string
 ## containing the name of the function to evaluate.
 ## @code{quadv} is a vectorized version of @code{quad} and the function
 ## defined by @var{f} must accept a scalar or vector as input and return a
 ## scalar, vector, or array as output.
 ##
 ## @var{a} and @var{b} are the lower and upper limits of integration.  Both
 ## limits must be finite.
-## 
+##
 ## The optional argument @var{tol} defines the tolerance used to stop
 ## the adaptation procedure.  The default value is @math{1e^{-6}}.
 ##
 ## The algorithm used by @code{quadv} involves recursively subdividing the
 ## integration interval and applying Simpson's rule on each subinterval.
 ## If @var{trace} is true then after computing each of these partial
 ## integrals display: (1) the total number of function evaluations,
 ## (2) the left end of the subinterval, (3) the length of the subinterval,
@@ -47,17 +47,17 @@
 ## Additional arguments @var{p1}, etc., are passed directly to the function
 ## @var{f}.  To use default values for @var{tol} and @var{trace}, one may pass
 ## empty matrices ([]).
 ##
 ## The result of the integration is returned in @var{q}.  @var{nfun} indicates
 ## the number of function evaluations that were made.
 ##
 ## Note: @code{quadv} is written in Octave's scripting language and can be
-## used recursively in @code{dblquad} and @code{triplequad}, unlike the 
+## used recursively in @code{dblquad} and @code{triplequad}, unlike the
 ## similar @code{quad} function.
 ## @seealso{quad, quadl, quadgk, quadcc, trapz, dblquad, triplequad}
 ## @end deftypefn
 
 function [q, nfun] = quadv (f, a, b, tol, trace, varargin)
   if (nargin < 3)
     print_usage ();
   endif
diff --git a/scripts/general/trapz.m b/scripts/general/trapz.m
--- a/scripts/general/trapz.m
+++ b/scripts/general/trapz.m
@@ -20,17 +20,17 @@
 ## @deftypefn  {Function File} {@var{q} =} trapz (@var{y})
 ## @deftypefnx {Function File} {@var{q} =} trapz (@var{x}, @var{y})
 ## @deftypefnx {Function File} {@var{q} =} trapz (@dots{}, @var{dim})
 ##
 ## Numerically evaluate the integral of points @var{y} using the trapezoidal
 ## method.
 ## @w{@code{trapz (@var{y})}} computes the integral of @var{y} along the first
 ## non-singleton dimension.  When the argument @var{x} is omitted an
-## equally spaced @var{x} vector with unit spacing (1) is assumed.  
+## equally spaced @var{x} vector with unit spacing (1) is assumed.
 ## @code{trapz (@var{x}, @var{y})} evaluates the integral with respect
 ## to the spacing in @var{x} and the values in @var{y}.  This is useful if
 ## the points in @var{y} have been sampled unevenly.
 ## If the optional @var{dim} argument is given, operate along this dimension.
 ##
 ## If @var{x} is not specified then unit spacing will be used.  To scale
 ## the integral to the correct value you must multiply by the actual spacing
 ## value (deltaX).  As an example, the integral of @math{x^3} over the range
@@ -40,17 +40,17 @@
 ## @example
 ## @group
 ## x = 0:0.1:1;
 ## y = x.^3;
 ## q = trapz (y)
 ##   @result{} q = 2.525   # No scaling
 ## q * 0.1
 ##   @result{} q = 0.2525  # Approximation to integral by scaling
-## trapz (x, y) 
+## trapz (x, y)
 ##   @result{} q = 0.2525  # Same result by specifying @var{x}
 ## @end group
 ## @end example
 ##
 ## @seealso{cumtrapz}
 ## @end deftypefn
 
 ## Author:      Kai Habel <kai.habel@gmx.de>
diff --git a/scripts/general/triplequad.m b/scripts/general/triplequad.m
--- a/scripts/general/triplequad.m
+++ b/scripts/general/triplequad.m
@@ -27,17 +27,17 @@
 ## have the form @math{w = f(x,y,z)} where either @var{x} or @var{y} is a
 ## vector and the remaining inputs are scalars.  It should return a vector of
 ## the same length and orientation as @var{x} or @var{y}.
 ##
 ## @var{xa}, @var{ya}, @var{za} and @var{xb}, @var{yb}, @var{zb} are the lower
 ## and upper limits of integration for x, y, and z respectively.  The
 ## underlying integrator determines whether infinite bounds are accepted.
 ##
-## The optional argument @var{tol} defines the absolute tolerance used to 
+## The optional argument @var{tol} defines the absolute tolerance used to
 ## integrate each sub-integral.  The default value is @math{1e^{-6}}.
 ##
 ## The optional argument @var{quadf} specifies which underlying integrator
 ## function to use.  Any choice but @code{quad} is available and the default
 ## is @code{quadgk}.
 ##
 ## Additional arguments, are passed directly to @var{f}.  To use the default
 ## value for @var{tol} or @var{quadf} one may pass an empty matrix ([]).
diff --git a/scripts/linear-algebra/cond.m b/scripts/linear-algebra/cond.m
--- a/scripts/linear-algebra/cond.m
+++ b/scripts/linear-algebra/cond.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} cond (@var{A})
 ## @deftypefnx {Function File} {} cond (@var{A}, @var{p})
 ## Compute the @var{p}-norm condition number of a matrix.
-## 
+##
 ## @code{cond (@var{A})} is ## defined as
 ## @tex
 ## $ {\parallel A \parallel_p * \parallel A^{-1} \parallel_p .} $
 ## @end tex
 ## @ifnottex
 ## @code{norm (@var{A}, @var{p}) * norm (inv (@var{A}), @var{p})}.
 ## @end ifnottex
 ##
diff --git a/scripts/linear-algebra/gmres.m b/scripts/linear-algebra/gmres.m
--- a/scripts/linear-algebra/gmres.m
+++ b/scripts/linear-algebra/gmres.m
@@ -19,35 +19,35 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{x} =} gmres (@var{A}, @var{b}, @var{m}, @var{rtol}, @var{maxit}, @var{M1}, @var{M2}, @var{x0})
 ## @deftypefnx {Function File} {@var{x} =} gmres (@var{A}, @var{b}, @var{m}, @var{rtol}, @var{maxit}, @var{P})
 ## @deftypefnx {Function File} {[@var{x}, @var{flag}, @var{relres}, @var{iter}, @var{resvec}] =} gmres (@dots{})
 ## Solve @code{A x = b} using the Preconditioned GMRES iterative method
 ## with restart, a.k.a. PGMRES(m).
 ##
 ## @itemize @minus
-## @item @var{rtol} is the relative tolerance, 
+## @item @var{rtol} is the relative tolerance,
 ## if not given or set to [] the default value 1e-6 is used.
 ##
 ## @item @var{maxit} is the maximum number of outer iterations,
-## if not given or set to [] the default value 
+## if not given or set to [] the default value
 ## @code{min (10, numel (b) / restart)} is used.
 ##
 ## @item @var{x0} is the initial guess,
-## if not given or set to [] the default value @code{zeros(size (b))} is used. 
+## if not given or set to [] the default value @code{zeros(size (b))} is used.
 ##
 ## @item @var{m} is the restart parameter,
 ## if not given or set to [] the default value @code{numel (b)} is used.
 ## @end itemize
 ##
-## Argument @var{A} can be passed as a matrix, function handle, or 
+## Argument @var{A} can be passed as a matrix, function handle, or
 ## inline function @code{f} such that @code{f(x) = A*x}.
 ##
-## The preconditioner @var{P} is given as @code{P = M1 * M2}. 
-## Both @var{M1} and @var{M2} can be passed as a matrix, function handle, or 
+## The preconditioner @var{P} is given as @code{P = M1 * M2}.
+## Both @var{M1} and @var{M2} can be passed as a matrix, function handle, or
 ## inline function @code{g} such that @code{g(x) = M1\x} or @code{g(x) = M2\x}.
 ##
 ## Besides the vector @var{x}, additional outputs are:
 ##
 ## @itemize @minus
 ## @item @var{flag} indicates the exit status:
 ##
 ## @table @asis
@@ -58,17 +58,17 @@
 ##   @item 2 : unused, but skipped for compatibility
 ##
 ##   @item 3 : algorithm reached stagnation
 ## @end table
 ##
 ## @item @var{relres} is the final value of the relative residual.
 ##
 ## @item @var{iter} is a vector containing the number of outer iterations and
-## total iterations performed. 
+## total iterations performed.
 ##
 ## @item @var{resvec} is a vector containing the relative residual at each
 ## iteration.
 ## @end itemize
 ##
 ## @seealso{pcg, cgs, bigcstab}
 ## @end deftypefn
 
diff --git a/scripts/miscellaneous/bzip2.m b/scripts/miscellaneous/bzip2.m
--- a/scripts/miscellaneous/bzip2.m
+++ b/scripts/miscellaneous/bzip2.m
@@ -18,17 +18,17 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{entries} =} bzip2 (@var{files})
 ## @deftypefnx {Function File} {@var{entries} =} bzip2 (@var{files}, @var{outdir})
 ## Compress the list of files specified in @var{files}.
 ## Each file is compressed separately and a new file with a '.bz2' extension
 ## is created.  The original files are not modified.  Existing compressed files
-## are silently overwritten.  If @var{outdir} is defined the compressed 
+## are silently overwritten.  If @var{outdir} is defined the compressed
 ## files are placed in this directory.
 ## @seealso{bunzip2, gzip, zip, tar}
 ## @end deftypefn
 
 function entries = bzip2 (varargin)
 
   if (nargin == 1 || nargin == 2)
     if nargout == 0
diff --git a/scripts/miscellaneous/compare_versions.m b/scripts/miscellaneous/compare_versions.m
--- a/scripts/miscellaneous/compare_versions.m
+++ b/scripts/miscellaneous/compare_versions.m
@@ -61,17 +61,17 @@
 ## @item
 ## "~="
 ## not equal
 ## @end itemize
 ##
 ## Note that version "1.1-test2" will compare as greater than
 ## "1.1-test10".  Also, since the numeric part is compared first, "a"
 ## compares less than "1a" because the second string starts with a
-## numeric part even though @code{double("a")} is greater than 
+## numeric part even though @code{double("a")} is greater than
 ## @code{double("1").}
 ## @end deftypefn
 
 ## Author: Bill Denney <denney@seas.upenn.edu>
 
 function out = compare_versions (v1, v2, operator)
 
   if (nargin != 3)
diff --git a/scripts/miscellaneous/getappdata.m b/scripts/miscellaneous/getappdata.m
--- a/scripts/miscellaneous/getappdata.m
+++ b/scripts/miscellaneous/getappdata.m
@@ -14,17 +14,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{value} =} getappdata (@var{h}, @var{name})
 ## Return the @var{value} for named application data for the object(s) with
 ## handle(s) @var{h}.
 ## @deftypefnx {Function File} {@var{appdata} =} getappdata (@var{h})
-## Returns a structure, @var{appdata}, whose fields correspond to the appdata
+## Return a structure, @var{appdata}, whose fields correspond to the appdata
 ## properties.
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Created: 2010-07-15
 
 function val = getappdata (h, name)
 
diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -16,22 +16,22 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{files} =} unpack (@var{file})
 ## @deftypefnx {Function File} {@var{files} =} unpack (@var{file}, @var{dir})
 ## @deftypefnx {Function File} {@var{files} =} unpack (@var{file}, @var{dir}, @var{filetype})
 ## Unpack the archive @var{file} based on its extension to the directory
-## @var{dir}.  If @var{file} is a list of strings, then each file is 
+## @var{dir}.  If @var{file} is a list of strings, then each file is
 ## unpacked individually.  If @var{dir} is not specified, it defaults to
 ## the current directory.  If a directory is in the file list, then the
 ## @var{filetype} must also be specified.
 ##
-## The optional return value is a list of @var{files} unpacked.  
+## The optional return value is a list of @var{files} unpacked.
 ## @seealso{bzip2, gzip, zip, tar}
 ## @end deftypefn
 
 ## Author: Bill Denney <denney@seas.upenn.edu>
 
 function filelist = unpack (file, dir = ".", filetype = "")
 
   if (nargin < 1 || nargin > 3)
diff --git a/scripts/miscellaneous/ver.m b/scripts/miscellaneous/ver.m
--- a/scripts/miscellaneous/ver.m
+++ b/scripts/miscellaneous/ver.m
@@ -37,17 +37,17 @@
 ## Revision of the package.
 ##
 ## @item Date
 ## Date respecting the version/revision.
 ## @end table
 ##
 ## @deftypefnx {Function File} {v =} ver (@code{"Octave"})
 ## Return version information for Octave only.
-## 
+##
 ## @deftypefnx {Function File} {v =} ver (@var{package})
 ## Return version information for @var{package}.
 ##
 ## @seealso{version, octave_config_info}
 ## @end deftypefn
 
 ## Author: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -337,70 +337,89 @@
 ##
 ## @item status
 ## Status of the optimization.
 ##
 ## Simplex Method:
 ## @table @asis
 ## @item 180 (@w{@code{LPX_OPT}})
 ## Solution is optimal.
+##
 ## @item 181 (@w{@code{LPX_FEAS}})
 ## Solution is feasible.
+##
 ## @item 182 (@w{@code{LPX_INFEAS}})
 ## Solution is infeasible.
+##
 ## @item 183 (@w{@code{LPX_NOFEAS}})
 ## Problem has no feasible solution.
+##
 ## @item 184 (@w{@code{LPX_UNBND}})
 ## Problem has no unbounded solution.
+##
 ## @item 185 (@w{@code{LPX_UNDEF}})
 ## Solution status is undefined.
 ## @end table
 ## Interior Point Method:
 ## @table @asis
 ## @item 150 (@w{@code{LPX_T_UNDEF}})
 ## The interior point method is undefined.
+##
 ## @item 151 (@w{@code{LPX_T_OPT}})
 ## The interior point method is optimal.
 ## @end table
 ## Mixed Integer Method:
 ## @table @asis
 ## @item 170 (@w{@code{LPX_I_UNDEF}})
 ## The status is undefined.
+##
 ## @item 171 (@w{@code{LPX_I_OPT}})
 ## The solution is integer optimal.
+##
 ## @item 172 (@w{@code{LPX_I_FEAS}})
 ## Solution integer feasible but its optimality has not been proven
+##
 ## @item 173 (@w{@code{LPX_I_NOFEAS}})
 ## No integer feasible solution.
 ## @end table
 ## @noindent
 ## If an error occurs, @var{status} will contain one of the following
 ## codes:
 ##
 ## @table @asis
 ## @item 204 (@w{@code{LPX_E_FAULT}})
 ## Unable to start the search.
+##
 ## @item 205 (@w{@code{LPX_E_OBJLL}})
 ## Objective function lower limit reached.
+##
 ## @item 206 (@w{@code{LPX_E_OBJUL}})
 ## Objective function upper limit reached.
+##
 ## @item 207 (@w{@code{LPX_E_ITLIM}})
 ## Iterations limit exhausted.
+##
 ## @item 208 (@w{@code{LPX_E_TMLIM}})
 ## Time limit exhausted.
+##
 ## @item 209 (@w{@code{LPX_E_NOFEAS}})
 ## No feasible solution.
+##
 ## @item 210 (@w{@code{LPX_E_INSTAB}})
 ## Numerical instability.
+##
 ## @item 211 (@w{@code{LPX_E_SING}})
 ## Problems with basis matrix.
+##
 ## @item 212 (@w{@code{LPX_E_NOCONV}})
 ## No convergence (interior).
+##
 ## @item 213 (@w{@code{LPX_E_NOPFS}})
 ## No primal feasible solution (LP presolver).
+##
 ## @item 214 (@w{@code{LPX_E_NODFS}})
 ## No dual feasible solution (LP presolver).
 ## @end table
 ##
 ## @item extra
 ## A data structure containing the following fields:
 ## @table @code
 ## @item lambda
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -53,17 +53,17 @@
 ## starting Octave, even if the package requests that it isn't.
 ##
 ## @item -local
 ## A local installation is forced, even if the user has system privileges.
 ##
 ## @item -global
 ## A global installation is forced, even if the user doesn't normally have
 ## system privileges
-## 
+##
 ## @item -forge
 ## Install a package directly from the Octave-Forge repository.  This
 ## requires an internet connection and the cURL library.
 ##
 ## @item -verbose
 ## The package manager will print the output of all of the commands that are
 ## performed.
 ## @end table
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -13,19 +13,19 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} axis ()
-## @deftypefnx {Function File} {} axis ([@var{x}_lo, @var{x}_hi])
-## @deftypefnx {Function File} {} axis ([@var{x}_lo, @var{x}_hi, @var{y}_lo, @var{y}_hi])
-## @deftypefnx {Function File} {} axis ([@var{x}_lo, @var{x}_hi, @var{y}_lo, @var{y}_hi, @var{z}_lo, @var{z}_hi])
+## @deftypefnx {Function File} {} axis ([@var{x}_lo @var{x}_hi])
+## @deftypefnx {Function File} {} axis ([@var{x}_lo @var{x}_hi @var{y}_lo @var{y}_hi])
+## @deftypefnx {Function File} {} axis ([@var{x}_lo @var{x}_hi @var{y}_lo @var{y}_hi @var{z}_lo @var{z}_hi])
 ## @deftypefnx {Function File} {} axis (@var{option})
 ## @deftypefnx {Function File} {} axis (@dots{}, @var{option})
 ## @deftypefnx {Function File} {} axis (@var{h}, @dots{})
 ## @deftypefnx {Function File} {@var{limits} =} axis ()
 ## Set axis limits for plots.
 ##
 ## The argument @var{limits} should be a 2-, 4-, or 6-element vector.  The
 ## first and second elements specify the lower and upper limits for the
diff --git a/scripts/plot/uigetdir.m b/scripts/plot/uigetdir.m
--- a/scripts/plot/uigetdir.m
+++ b/scripts/plot/uigetdir.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{dirname} =} uigetdir ()
 ## @deftypefnx {Function File} {@var{dirname} =} uigetdir (@var{init_path})
 ## @deftypefnx {Function File} {@var{dirname} =} uigetdir (@var{init_path}, @var{dialog_name})
-## Open a GUI dialog for selecting a directory.  If @var{init_path} is not 
+## Open a GUI dialog for selecting a directory.  If @var{init_path} is not
 ## given the current working directory is used.  @var{dialog_name} may be
 ## used to customize the dialog title.
 ## @seealso{uigetfile}
 ## @end deftypefn
 
 ## Author: Kai Habel
 
 function dirname = uigetdir (init_path = pwd, dialog_name = "Choose directory?")
diff --git a/scripts/plot/uigetfile.m b/scripts/plot/uigetfile.m
--- a/scripts/plot/uigetfile.m
+++ b/scripts/plot/uigetfile.m
@@ -16,17 +16,17 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{fname}, @var{fpath}, @var{fltidx}] =} uigetfile ()
 ## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@var{flt})
 ## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@var{flt}, @var{dialog_name})
 ## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@var{flt}, @var{dialog_name}, @var{default_file})
-## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@dots{}, "Position", [@var{px}, @var{py}])
+## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@dots{}, "Position", [@var{px} @var{py}])
 ## @deftypefnx {Function File} {[@dots{}] =} uigetfile (@dots{}, "MultiSelect", @var{mode})
 ##
 ## Open a GUI dialog for selecting a file.  It returns the filename @var{fname},
 ## the path to this file @var{fpath}, and the filter index @var{fltidx}.
 ## @var{flt} contains a (list of) file filter string(s) in one of the following
 ## formats:
 ##
 ## @table @asis
diff --git a/scripts/plot/view.m b/scripts/plot/view.m
--- a/scripts/plot/view.m
+++ b/scripts/plot/view.m
@@ -14,18 +14,18 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{azimuth}, @var{elevation}] =} view ()
 ## @deftypefnx {Function File} {} view (@var{azimuth}, @var{elevation})
-## @deftypefnx {Function File} {} view ([@var{azimuth}, @var{elevation}])
-## @deftypefnx {Function File} {} view ([@var{x}, @var{y}, @var{z}])
+## @deftypefnx {Function File} {} view ([@var{azimuth} @var{elevation}])
+## @deftypefnx {Function File} {} view ([@var{x} @var{y} @var{z}])
 ## @deftypefnx {Function File} {} view (@var{dims})
 ## @deftypefnx {Function File} {} view (@var{ax}, @dots{})
 ## Query or set the viewpoint for the current axes.  The parameters
 ## @var{azimuth} and @var{elevation} can be given as two arguments or as
 ## 2-element vector.
 ## The viewpoint can also be given with Cartesian coordinates @var{x},
 ## @var{y}, and @var{z}.
 ## The call @code{view (2)} sets the viewpoint to @var{azimuth} = 0
diff --git a/scripts/statistics/base/prctile.m b/scripts/statistics/base/prctile.m
--- a/scripts/statistics/base/prctile.m
+++ b/scripts/statistics/base/prctile.m
@@ -27,17 +27,17 @@
 ## If @var{x} is a matrix, compute the percentiles for each column and
 ## return them in a matrix, such that the i-th row of @var{y} contains the
 ## @var{p}(i)th percentiles of each column of @var{x}.
 ##
 ## If @var{p} is unspecified, return the quantiles for @code{[0 25 50 75 100]}.
 ## The optional argument @var{dim} determines the dimension along which
 ## the percentiles are calculated.  If @var{dim} is omitted, and @var{x} is
 ## a vector or matrix, it defaults to 1 (column-wise quantiles).  When
-## @var{x} is an N-d array, @var{dim} defaults to the first non-singleton
+## @var{x} is an N-D array, @var{dim} defaults to the first non-singleton
 ## dimension.
 ## @seealso{quantile}
 ## @end deftypefn
 
 ## Author: Ben Abbott <bpabbott@mac.com>
 ## Description: Matlab style prctile function.
 
 function q = prctile (x, p, dim)
diff --git a/scripts/statistics/base/quantile.m b/scripts/statistics/base/quantile.m
--- a/scripts/statistics/base/quantile.m
+++ b/scripts/statistics/base/quantile.m
@@ -26,17 +26,17 @@
 ##
 ## If @var{x} is a matrix, compute the quantiles for each column and
 ## return them in a matrix, such that the i-th row of @var{q} contains
 ## the @var{p}(i)th quantiles of each column of @var{x}.
 ##
 ## The optional argument @var{dim} determines the dimension along which
 ## the quantiles are calculated.  If @var{dim} is omitted, and @var{x} is
 ## a vector or matrix, it defaults to 1 (column-wise quantiles).  If
-## @var{x} is an N-d array, @var{dim} defaults to the first non-singleton
+## @var{x} is an N-D array, @var{dim} defaults to the first non-singleton
 ## dimension.
 ##
 ## The methods available to calculate sample quantiles are the nine methods
 ## used by R (http://www.r-project.org/).  The default value is METHOD = 5.
 ##
 ## Discontinuous sample quantile methods 1, 2, and 3
 ##
 ## @enumerate 1
diff --git a/scripts/statistics/distributions/unidcdf.m b/scripts/statistics/distributions/unidcdf.m
--- a/scripts/statistics/distributions/unidcdf.m
+++ b/scripts/statistics/distributions/unidcdf.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} unidcdf (@var{x}, @var{v})
 ## For each element of @var{x}, compute the cumulative distribution
 ## function (CDF) at @var{x} of a discrete uniform distribution which
-## assumes the values in @var{v} with equal probability.  
+## assumes the values in @var{v} with equal probability.
 ## If @var{v} is a scalar then @code{1/@var{v}} is the probability of a
 ## single element.
 ## @end deftypefn
 
 function cdf = unidcdf (x, v)
 
   if (nargin != 2)
     print_usage ();
diff --git a/scripts/statistics/distributions/unidinv.m b/scripts/statistics/distributions/unidinv.m
--- a/scripts/statistics/distributions/unidinv.m
+++ b/scripts/statistics/distributions/unidinv.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} unidinv (@var{x}, @var{v})
 ## For each component of @var{x}, compute the quantile (the inverse of
 ## the CDF) at @var{x} of the discrete uniform distribution which assumes the
-## values in @var{v} with equal probability. 
+## values in @var{v} with equal probability.
 ## If @var{v} is a scalar then @code{1/@var{v}} is the probability of a
 ## single element.
 ## @end deftypefn
 
 function inv = unidinv (x, v)
 
   if (nargin != 2)
     print_usage ();
diff --git a/scripts/strings/isstrprop.m b/scripts/strings/isstrprop.m
--- a/scripts/strings/isstrprop.m
+++ b/scripts/strings/isstrprop.m
@@ -38,20 +38,20 @@
 ## @item "alpha"
 ## True for characters that are alphabetic (letters).
 ##
 ## @item "alnum"
 ## @itemx "alphanum"
 ## True for characters that are alphabetic or digits.
 ##
 ## @item "lower"
-## True for lower-case letters.
+## True for lowercase letters.
 ##
 ## @item "upper"
-## True for upper-case letters.
+## True for uppercase letters.
 ##
 ## @item "digit"
 ## True for decimal digits (0-9).
 ##
 ## @item "xdigit"
 ## True for hexadecimal digits (@nospell{a-fA-F0-9}).
 ##
 ## @item "space"
diff --git a/src/DLD-FUNCTIONS/balance.cc b/src/DLD-FUNCTIONS/balance.cc
--- a/src/DLD-FUNCTIONS/balance.cc
+++ b/src/DLD-FUNCTIONS/balance.cc
@@ -56,20 +56,20 @@ DEFUN_DLD (balance, args, nargout,
 \n\
 Compute @code{@var{AA} = @var{DD} \\ @var{A} * @var{DD}} in which @var{AA}\n\
 is a matrix whose row and column norms are roughly equal in magnitude, and\n\
 @code{@var{DD} = @var{P} * @var{D}}, in which @var{P} is a permutation\n\
 matrix and @var{D} is a diagonal matrix of powers of two.  This allows the\n\
 equilibration to be computed without round-off.  Results of eigenvalue\n\
 calculation are typically improved by balancing first.\n\
 \n\
-If two output values are requested, @code{balance} returns \n\
+If two output values are requested, @code{balance} returns\n\
 the diagonal @var{D} and the permutation @var{P} separately as vectors.\n\
 In this case, @code{@var{DD} = eye(n)(:,@var{P}) * diag (@var{D})}, where\n\
-@math{n} is the matrix size.  \n\
+@math{n} is the matrix size.\n\
 \n\
 If four output values are requested, compute @code{@var{AA} =\n\
 @var{CC}*@var{A}*@var{DD}} and @code{@var{BB} = @var{CC}*@var{B}*@var{DD}},\n\
 in which @var{AA} and @var{BB} have non-zero elements of approximately the\n\
 same magnitude and @var{CC} and @var{DD} are permuted diagonal matrices as\n\
 in @var{DD} for the algebraic eigenvalue problem.\n\
 \n\
 The eigenvalue balancing option @var{opt} may be one of:\n\
diff --git a/src/DLD-FUNCTIONS/besselj.cc b/src/DLD-FUNCTIONS/besselj.cc
--- a/src/DLD-FUNCTIONS/besselj.cc
+++ b/src/DLD-FUNCTIONS/besselj.cc
@@ -382,17 +382,17 @@ DEFUN_DLD (besselj, args, nargout,
 @deftypefnx {Loadable Function} {[@var{y}, @var{ierr}] =} bessely (@var{alpha}, @var{x}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{i}, @var{ierr}] =} besseli (@var{alpha}, @var{x}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{k}, @var{ierr}] =} besselk (@var{alpha}, @var{x}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{h}, @var{ierr}] =} besselh (@var{alpha}, @var{k}, @var{x}, @var{opt})\n\
 Compute Bessel or Hankel functions of various kinds:\n\
 \n\
 @table @code\n\
 @item besselj\n\
-Bessel functions of the first kind.  If the argument @var{opt} is supplied, \n\
+Bessel functions of the first kind.  If the argument @var{opt} is supplied,\n\
 the result is multiplied by @code{exp(-abs(imag(@var{x})))}.\n\
 \n\
 @item bessely\n\
 Bessel functions of the second kind.  If the argument @var{opt} is supplied,\n\
 the result is multiplied by @code{exp(-abs(imag(@var{x})))}.\n\
 \n\
 @item besseli\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -154,17 +154,17 @@ into the output arguments of @code{cellf
 @example\n\
 @group\n\
 function [a, b] = twoouts (x)\n\
   a = x;\n\
   b = x*x;\n\
 endfunction\n\
 [aa, bb] = cellfun(@@twoouts, @{1, 2, 3@})\n\
      @result{}\n\
-        aa = \n\
+        aa =\n\
            1 2 3\n\
         bb =\n\
            1 4 9\n\
 @end group\n\
 @end example\n\
 \n\
 Note that per default the output argument(s) are arrays of the same size as\n\
 the input arguments.  Input arguments that are singleton (1x1) cells will be\n\
diff --git a/src/DLD-FUNCTIONS/colamd.cc b/src/DLD-FUNCTIONS/colamd.cc
--- a/src/DLD-FUNCTIONS/colamd.cc
+++ b/src/DLD-FUNCTIONS/colamd.cc
@@ -454,25 +454,25 @@ DEFUN_DLD (symamd, args, nargout,
 @deftypefnx {Loadable Function} {@var{p} =} symamd (@var{S}, @var{knobs})\n\
 @deftypefnx {Loadable Function} {[@var{p}, @var{stats}] =} symamd (@var{S})\n\
 @deftypefnx {Loadable Function} {[@var{p}, @var{stats}] =} symamd (@var{S}, @var{knobs})\n\
 \n\
 For a symmetric positive definite matrix @var{S}, returns the permutation\n\
 vector p such that @code{@var{S}(@var{p}, @var{p})} tends to have a\n\
 sparser Cholesky@tie{}factor than @var{S}.  Sometimes @code{symamd} works\n\
 well for symmetric indefinite matrices too.  The matrix @var{S} is assumed\n\
-to be symmetric; only the strictly lower triangular part is referenced.  \n\
+to be symmetric; only the strictly lower triangular part is referenced.\n\
 @var{S} must be square.\n\
 \n\
 @var{knobs} is an optional one- to two-element input vector.  If @var{S} is\n\
 n-by-n, then rows and columns with more than\n\
 @code{max(16,@var{knobs}(1)*sqrt(n))} entries are removed prior to ordering,\n\
 and ordered last in the output permutation @var{p}.  No rows/columns are\n\
 removed if @code{@var{knobs}(1) < 0}.  If @code{@var{knobs} (2)} is nonzero,\n\
-@code{stats} and @var{knobs} are printed.  The default is @code{@var{knobs} \n\
+@code{stats} and @var{knobs} are printed.  The default is @code{@var{knobs}\n\
 = [10 0]}.  Note that @var{knobs} differs from earlier versions of symamd.\n\
 \n\
 @var{stats} is an optional 20-element output vector that provides data\n\
 about the ordering and the validity of the input matrix @var{S}.  Ordering\n\
 statistics are in @code{@var{stats}(1:3)}.  @code{@var{stats}(1) =\n\
 @var{stats}(2)} is the number of dense or empty rows and columns\n\
 ignored by SYMAMD and @code{@var{stats}(3)} is the number of garbage\n\
 collections performed on the internal data structure used by SYMAMD\n\
diff --git a/src/DLD-FUNCTIONS/dot.cc b/src/DLD-FUNCTIONS/dot.cc
--- a/src/DLD-FUNCTIONS/dot.cc
+++ b/src/DLD-FUNCTIONS/dot.cc
@@ -102,17 +102,17 @@ get_red_dims (const dim_vector& x, const
         }
     }
 }
 
 DEFUN_DLD (dot, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} dot (@var{x}, @var{y}, @var{dim})\n\
 Compute the dot product of two vectors.  If @var{x} and @var{y}\n\
-are matrices, calculate the dot products along the first \n\
+are matrices, calculate the dot products along the first\n\
 non-singleton dimension.  If the optional argument @var{dim} is\n\
 given, calculate the dot products along this dimension.\n\
 \n\
 This is equivalent to\n\
 @code{sum (conj (@var{X}) .* @var{Y}, @var{dim})},\n\
 but avoids forming a temporary array and is faster.  When @var{X} and\n\
 @var{Y} are column vectors, the result is equivalent to\n\
 @code{@var{X}' * @var{Y}}.\n\
diff --git a/src/DLD-FUNCTIONS/eigs.cc b/src/DLD-FUNCTIONS/eigs.cc
--- a/src/DLD-FUNCTIONS/eigs.cc
+++ b/src/DLD-FUNCTIONS/eigs.cc
@@ -255,17 +255,17 @@ false.\n\
 @item permB\n\
 The permutation vector of the Cholesky@tie{}factorization of @var{B} if\n\
 @code{cholB} is true.  That is @code{chol (@var{B}(permB, permB))}.  The\n\
 default is @code{1:@var{n}}.\n\
 \n\
 @end table\n\
 It is also possible to represent @var{A} by a function denoted @var{af}.\n\
 @var{af} must be followed by a scalar argument @var{n} defining the length\n\
-of the vector argument accepted by @var{af}.  @var{af} can be \n\
+of the vector argument accepted by @var{af}.  @var{af} can be\n\
 a function handle, an inline function, or a string.  When @var{af} is a\n\
 string it holds the name of the function to use.\n\
 \n\
 @var{af} is a function of the form @code{y = af (x)}\n\
 where the required return value of @var{af} is determined by\n\
 the value of @var{sigma}.  The four possible forms are\n\
 \n\
 @table @code\n\
diff --git a/src/DLD-FUNCTIONS/fftw.cc b/src/DLD-FUNCTIONS/fftw.cc
--- a/src/DLD-FUNCTIONS/fftw.cc
+++ b/src/DLD-FUNCTIONS/fftw.cc
@@ -53,17 +53,17 @@ the @code{fftw} function can be used to 
 @noindent\n\
 will save the existing wisdom used by Octave to the string @var{wisdom}.\n\
 This string can then be saved to a file and restored using the @code{save}\n\
 and @code{load} commands respectively.  This existing wisdom can be\n\
 reimported as follows\n\
 \n\
 @example\n\
 fftw ('dwisdom', @var{wisdom})\n\
-@end example \n\
+@end example\n\
 \n\
 If @var{wisdom} is an empty matrix, then the wisdom used is cleared.\n\
 \n\
 During the calculation of Fourier transforms further wisdom is generated.\n\
 The fashion in which this wisdom is generated is also controlled by\n\
 the @code{fftw} function.  There are five different manners in which the\n\
 wisdom can be treated:\n\
 \n\
diff --git a/src/DLD-FUNCTIONS/matrix_type.cc b/src/DLD-FUNCTIONS/matrix_type.cc
--- a/src/DLD-FUNCTIONS/matrix_type.cc
+++ b/src/DLD-FUNCTIONS/matrix_type.cc
@@ -40,17 +40,17 @@ DEFUN_DLD (matrix_type, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {@var{type} =} matrix_type (@var{A})\n\
 @deftypefnx {Loadable Function} {@var{type} =} matrix_type (@var{A}, 'nocompute')\n\
 @deftypefnx {Loadable Function} {@var{A} =} matrix_type (@var{A}, @var{type})\n\
 @deftypefnx {Loadable Function} {@var{A} =} matrix_type (@var{A}, 'upper', @var{perm})\n\
 @deftypefnx {Loadable Function} {@var{A} =} matrix_type (@var{A}, 'lower', @var{perm})\n\
 @deftypefnx {Loadable Function} {@var{A} =} matrix_type (@var{A}, 'banded', @var{nl}, @var{nu})\n\
 Identify the matrix type or mark a matrix as a particular type.  This allows\n\
-more rapid solutions of linear equations involving @var{A} to be performed.  \n\
+more rapid solutions of linear equations involving @var{A} to be performed.\n\
 Called with a single argument, @code{matrix_type} returns the type of the\n\
 matrix and caches it for future use.  Called with more than one argument,\n\
 @code{matrix_type} allows the type of the matrix to be defined.\n\
 \n\
 If the option 'nocompute' is given, the function will not attempt to guess\n\
 the type if it is still unknown.  This is useful for debugging purposes.\n\
 \n\
 The possible matrix types depend on whether the matrix is full or sparse, and\n\
@@ -94,17 +94,17 @@ probably a positive definite.  (Sparse m
 @item 'singular'\n\
 The matrix is assumed to be singular and will be treated with a minimum norm\n\
 solution.\n\
 \n\
 @end table\n\
 \n\
 Note that the matrix type will be discovered automatically on the first\n\
 attempt to solve a linear equation involving @var{A}.  Therefore\n\
-@code{matrix_type} is only useful to give Octave hints of the matrix type.  \n\
+@code{matrix_type} is only useful to give Octave hints of the matrix type.\n\
 Incorrectly defining the matrix type will result in incorrect results from\n\
 solutions of linear equations; it is entirely @strong{the responsibility of\n\
 the user} to correctly identify the matrix type.\n\
 \n\
 Also, the test for positive definiteness is a low-cost test for a Hermitian\n\
 matrix with a real positive diagonal.  This does not guarantee that the\n\
 matrix is positive definite, but only that it is a probable candidate.  When\n\
 such a matrix is factorized, a Cholesky@tie{}factorization is first\n\
diff --git a/src/DLD-FUNCTIONS/pinv.cc b/src/DLD-FUNCTIONS/pinv.cc
--- a/src/DLD-FUNCTIONS/pinv.cc
+++ b/src/DLD-FUNCTIONS/pinv.cc
@@ -36,17 +36,17 @@ along with Octave; see the file COPYING.
 #include "ov-flt-cx-diag.h"
 #include "ov-perm.h"
 
 DEFUN_DLD (pinv, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {} pinv (@var{x})\n\
 @deftypefnx {Loadable Function} {} pinv (@var{x}, @var{tol})\n\
 Return the pseudoinverse of @var{x}.  Singular values less than\n\
-@var{tol} are ignored.  \n\
+@var{tol} are ignored.\n\
 \n\
 If the second argument is omitted, it is taken to be\n\
 \n\
 @example\n\
 tol = max (size (@var{x})) * sigma_max (@var{x}) * eps,\n\
 @end example\n\
 \n\
 @noindent\n\
diff --git a/src/DLD-FUNCTIONS/qr.cc b/src/DLD-FUNCTIONS/qr.cc
--- a/src/DLD-FUNCTIONS/qr.cc
+++ b/src/DLD-FUNCTIONS/qr.cc
@@ -145,17 +145,17 @@ 2; 3, 4]},\n\
 [@var{Q}, @var{R}, @var{P}] = qr (@var{A})\n\
 @end example\n\
 \n\
 @noindent\n\
 returns\n\
 \n\
 @example\n\
 @group\n\
-@var{Q} = \n\
+@var{Q} =\n\
 \n\
   -0.44721  -0.89443\n\
   -0.89443   0.44721\n\
 \n\
 @var{R} =\n\
 \n\
   -4.47214  -3.13050\n\
    0.00000   0.44721\n\
diff --git a/src/DLD-FUNCTIONS/quad.cc b/src/DLD-FUNCTIONS/quad.cc
--- a/src/DLD-FUNCTIONS/quad.cc
+++ b/src/DLD-FUNCTIONS/quad.cc
@@ -174,20 +174,20 @@ quad_float_user_function (float x)
 
 DEFUN_DLD (quad, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {@var{q} =} quad (@var{f}, @var{a}, @var{b})\n\
 @deftypefnx {Loadable Function} {@var{q} =} quad (@var{f}, @var{a}, @var{b}, @var{tol})\n\
 @deftypefnx {Loadable Function} {@var{q} =} quad (@var{f}, @var{a}, @var{b}, @var{tol}, @var{sing})\n\
 @deftypefnx {Loadable Function} {[@var{q}, @var{ier}, @var{nfun}, @var{err}] =} quad (@dots{})\n\
 Numerically evaluate the integral of @var{f} from @var{a} to @var{b} using\n\
-Fortran routines from @w{@sc{quadpack}}.  @var{f} is a function handle, inline\n\
-function, or a string containing the name of the function to evaluate.\n\
-The function must have the form @code{y = f (x)} where @var{y} and @var{x}\n\
-are scalars.\n\
+Fortran routines from @w{@sc{quadpack}}.  @var{f} is a function handle,\n\
+inline function, or a string containing the name of the function to\n\
+evaluate.  The function must have the form @code{y = f (x)} where @var{y} and\n\
+@var{x} are scalars.\n\
 \n\
 @var{a} and @var{b} are the lower and upper limits of integration.  Either\n\
 or both may be infinite.\n\
 \n\
 The optional argument @var{tol} is a vector that specifies the desired\n\
 accuracy of the result.  The first element of the vector is the desired\n\
 absolute tolerance, and the second element is the desired relative\n\
 tolerance.  To choose a relative test only, set the absolute\n\
diff --git a/src/DLD-FUNCTIONS/quadcc.cc b/src/DLD-FUNCTIONS/quadcc.cc
--- a/src/DLD-FUNCTIONS/quadcc.cc
+++ b/src/DLD-FUNCTIONS/quadcc.cc
@@ -1520,17 +1520,17 @@ The result of the integration is returne
 @var{err} is an estimate of the absolute integration error and\n\
 @var{nr_points} is the number of points at which the integrand was evaluated.\n\
 If the adaptive integration did not converge, the value of\n\
 @var{err} will be larger than the requested tolerance.  Therefore, it is\n\
 recommended to verify this value for difficult integrands.\n\
 \n\
 @code{quadcc} is capable of dealing with non-numeric\n\
 values of the integrand such as @code{NaN} or @code{Inf}.\n\
-If the integral diverges, and @code{quadcc} detects this, \n\
+If the integral diverges, and @code{quadcc} detects this,\n\
 then a warning is issued and @code{Inf} or @code{-Inf} is returned.\n\
 \n\
 Note: @code{quadcc} is a general purpose quadrature algorithm\n\
 and, as such, may be less efficient for a smooth or otherwise\n\
 well-behaved integrand than other methods such as @code{quadgk}.\n\
 \n\
 The algorithm uses Clenshaw-Curtis quadrature rules of increasing\n\
 degree in each interval and bisects the interval if either the\n\
diff --git a/src/DLD-FUNCTIONS/qz.cc b/src/DLD-FUNCTIONS/qz.cc
--- a/src/DLD-FUNCTIONS/qz.cc
+++ b/src/DLD-FUNCTIONS/qz.cc
@@ -302,17 +302,17 @@ Computes the generalized eigenvalues\n\
 @end tex\n\
 @ifnottex\n\
 @var{lambda}\n\
 @end ifnottex\n\
 of @math{(A - s B)}.\n\
 \n\
 @item @code{[AA, BB, Q, Z, V, W, @var{lambda}] = qz (@var{A}, @var{B})}\n\
 \n\
-Computes QZ@tie{}decomposition, generalized eigenvectors, and \n\
+Computes QZ@tie{}decomposition, generalized eigenvectors, and\n\
 generalized eigenvalues of @math{(A - s B)}\n\
 @tex\n\
 $$ AV = BV{ \\rm diag }(\\lambda) $$\n\
 $$ W^T A = { \\rm diag }(\\lambda)W^T B $$\n\
 $$ AA = Q^T AZ, BB = Q^T BZ $$\n\
 @end tex\n\
 @ifnottex\n\
 \n\
@@ -338,23 +338,23 @@ the generalized eigenvectors @var{V}, @v
 @var{Q}.\n\
 \n\
 @table @var\n\
 @item opt\n\
 for ordering eigenvalues of the GEP pencil.  The leading block\n\
 of the revised pencil contains all eigenvalues that satisfy:\n\
 @table @asis\n\
 @item \"N\"\n\
-= unordered (default) \n\
+= unordered (default)\n\
 \n\
 @item \"S\"\n\
-= small: leading block has all |lambda| @leq{} 1 \n\
+= small: leading block has all |lambda| @leq{} 1\n\
 \n\
 @item \"B\"\n\
-= big: leading block has all |lambda| @geq{} 1 \n\
+= big: leading block has all |lambda| @geq{} 1\n\
 \n\
 @item \"-\"\n\
 = negative real part: leading block has all eigenvalues\n\
 in the open left half-plane\n\
 \n\
 @item \"+\"\n\
 = non-negative real part: leading block has all eigenvalues\n\
 in the closed right half-plane\n\
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -932,17 +932,17 @@ Make the matching case sensitive.  (defa
 Alternatively, use (?-i) in the pattern.\n\
 \n\
 @item ignorecase\n\
 Ignore case when matching the pattern to the string.\n\
 \n\
 Alternatively, use (?i) in the pattern.\n\
 \n\
 @item stringanchors\n\
-Match the anchor characters at the beginning and end of the string.  \n\
+Match the anchor characters at the beginning and end of the string.\n\
 (default)\n\
 \n\
 Alternatively, use (?-m) in the pattern.\n\
 \n\
 @item lineanchors\n\
 Match the anchor characters at the beginning and end of the line.\n\
 \n\
 Alternatively, use (?m) in the pattern.\n\
diff --git a/src/DLD-FUNCTIONS/schur.cc b/src/DLD-FUNCTIONS/schur.cc
--- a/src/DLD-FUNCTIONS/schur.cc
+++ b/src/DLD-FUNCTIONS/schur.cc
@@ -288,17 +288,17 @@ Riccati equations in control (see @code{
 */
 
 DEFUN_DLD (rsf2csf, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Function File} {[@var{U}, @var{T}] =} rsf2csf (@var{UR}, @var{TR})\n\
 Convert a real, upper quasi-triangular Schur@tie{}form @var{TR} to a complex,\n\
 upper triangular Schur@tie{}form @var{T}.\n\
 \n\
-Note that the following relations hold: \n\
+Note that the following relations hold:\n\
 \n\
 @tex\n\
 $UR \\cdot TR \\cdot {UR}^T = U T U^{\\dagger}$ and\n\
 $U^{\\dagger} U$ is the identity matrix I.\n\
 @end tex\n\
 @ifnottex\n\
 @code{@var{UR} * @var{TR} * @var{UR}' = @var{U} * @var{T} * @var{U}'} and\n\
 @code{@var{U}' * @var{U}} is the identity matrix I.\n\
diff --git a/src/DLD-FUNCTIONS/time.cc b/src/DLD-FUNCTIONS/time.cc
--- a/src/DLD-FUNCTIONS/time.cc
+++ b/src/DLD-FUNCTIONS/time.cc
@@ -126,17 +126,17 @@ value returned by @code{time} was 856163
 %!assert(time () > 0);
 
 */
 
 DEFUN_DLD (gmtime, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{tm_struct} =} gmtime (@var{t})\n\
 Given a value returned from @code{time}, or any non-negative integer,\n\
-return a time structure corresponding to CUT (Coordinated Universal Time).  \n\
+return a time structure corresponding to CUT (Coordinated Universal Time).\n\
 For example:\n\
 \n\
 @example\n\
 @group\n\
 gmtime (time ())\n\
      @result{} @{\n\
            usec = 0\n\
            sec = 6\n\
diff --git a/src/DLD-FUNCTIONS/typecast.cc b/src/DLD-FUNCTIONS/typecast.cc
--- a/src/DLD-FUNCTIONS/typecast.cc
+++ b/src/DLD-FUNCTIONS/typecast.cc
@@ -113,17 +113,17 @@ of @var{x} and @var{class} must be one o
 @end example\n\
 \n\
 @noindent\n\
 the last two are reserved for @var{class}; they indicate that a\n\
 complex-valued result is requested.  Complex arrays are stored in memory as\n\
 consecutive pairs of real numbers.  The sizes of integer types are given by\n\
 their bit counts.  Both logical and char are typically one byte wide;\n\
 however, this is not guaranteed by C++.  If your system is IEEE conformant,\n\
-single and double should be 4 bytes and 8 bytes wide, respectively.  \n\
+single and double should be 4 bytes and 8 bytes wide, respectively.\n\
 \"logical\" is not allowed for @var{class}.  If the input is a row vector,\n\
 the return value is a row vector, otherwise it is a column vector.  If the\n\
 bit length of @var{x} is not divisible by that of @var{class}, an error\n\
 occurs.\n\
 \n\
 An example of the use of typecast on a little-endian machine is\n\
 \n\
 @example\n\
diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -685,17 +685,17 @@ DEFUN_DLD (urlwrite, args, nargout,
 @deftypefnx {Loadable Function} {@var{f} =} urlwrite (@var{url}, @var{localfile})\n\
 @deftypefnx {Loadable Function} {[@var{f}, @var{success}] =} urlwrite (@var{url}, @var{localfile})\n\
 @deftypefnx {Loadable Function} {[@var{f}, @var{success}, @var{message}] =} urlwrite (@var{url}, @var{localfile})\n\
 Download a remote file specified by its @var{url} and save it as\n\
 @var{localfile}.  For example:\n\
 \n\
 @example\n\
 @group\n\
-urlwrite (\"ftp://ftp.octave.org/pub/octave/README\", \n\
+urlwrite (\"ftp://ftp.octave.org/pub/octave/README\",\n\
           \"README.txt\");\n\
 @end group\n\
 @end example\n\
 \n\
 The full path of the downloaded file is returned in @var{f}.  The\n\
 variable @var{success} is 1 if the download was successful,\n\
 otherwise it is 0 in which case @var{message} contains an error\n\
 message.  If no output argument is specified and an error occurs,\n\
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -423,18 +423,18 @@ bitshift (eye (3), 1)\n\
 2 0 0\n\
 0 2 0\n\
 0 0 2\n\
 @end group\n\
 \n\
 bitshift (10, [-2, -1, 0, 1, 2])\n\
 @result{} 2   5  10  20  40\n\
 @c FIXME -- restore this example when third arg is allowed to be an array.\n\
-@c \n\
-@c \n\
+@c\n\
+@c\n\
 @c bitshift ([1, 10], 2, [3,4])\n\
 @c @result{} 4  8\n\
 @end group\n\
 @end example\n\
 @seealso{bitand, bitor, bitxor, bitset, bitget, bitcmp, bitmax}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -513,17 +513,17 @@ bitshift (10, [-2, -1, 0, 1, 2])\n\
 }
 
 DEFUN (bitmax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} bitmax ()\n\
 @deftypefnx {Built-in Function} {} bitmax (\"double\")\n\
 @deftypefnx {Built-in Function} {} bitmax (\"single\")\n\
 Return the largest integer that can be represented within a floating point\n\
-value.  The default class is \"double\", but \"single\" is a valid option.  \n\
+value.  The default class is \"double\", but \"single\" is a valid option.\n\
 On IEEE-754 compatible systems, @code{bitmax} is @w{@math{2^{53} - 1}}.\n\
 @end deftypefn")
 {
   octave_value retval;
   std::string cname = "double";
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_string ())
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -513,17 +513,17 @@ and @var{e} is an integer.  If\n\
 %! assert (f, complex (zeros (3, 2), [0,-0.5; 0.5,-0.5; Inf,-Inf]));
 %! assert (e(1:2,:), [0,1; 2,3]);
 */
 
 DEFUN (rem, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Mapping Function} {} rem (@var{x}, @var{y})\n\
 @deftypefnx {Mapping Function} {} fmod (@var{x}, @var{y})\n\
-Return the remainder of the division @code{@var{x} / @var{y}}, computed \n\
+Return the remainder of the division @code{@var{x} / @var{y}}, computed\n\
 using the expression\n\
 \n\
 @example\n\
 x - y .* fix (x ./ y)\n\
 @end example\n\
 \n\
 An error message is printed if the dimensions of the arguments do not\n\
 agree, or if either of the arguments is complex.\n\
@@ -4743,17 +4743,17 @@ Largest singular value of @var{A}.\n\
 @cindex infinity norm\n\
 Infinity norm, the largest row sum of the absolute values of @var{A}.\n\
 \n\
 @item @var{p} = @code{\"fro\"}\n\
 @cindex Frobenius norm\n\
 Frobenius norm of @var{A}, @code{sqrt (sum (diag (@var{A}' * @var{A})))}.\n\
 \n\
 @item other @var{p}, @code{@var{p} > 1}\n\
-@cindex general p-norm \n\
+@cindex general p-norm\n\
 maximum @code{norm (A*x, p)} such that @code{norm (x, p) == 1}\n\
 @end table\n\
 \n\
 If @var{A} is a vector or a scalar:\n\
 \n\
 @table @asis\n\
 @item @var{p} = @code{Inf} or @code{\"inf\"}\n\
 @code{max (abs (@var{A}))}.\n\
@@ -6393,17 +6393,17 @@ Merge elements of @var{true_val} and @va
 value of @var{mask}.  If @var{mask} is a logical scalar, the other two\n\
 arguments can be arbitrary values.  Otherwise, @var{mask} must be a logical\n\
 array, and @var{tval}, @var{fval} should be arrays of matching class, or\n\
 cell arrays.  In the scalar mask case, @var{tval} is returned if @var{mask}\n\
 is true, otherwise @var{fval} is returned.\n\
 \n\
 In the array mask case, both @var{tval} and @var{fval} must be either\n\
 scalars or arrays with dimensions equal to @var{mask}.  The result is\n\
-constructed as follows: \n\
+constructed as follows:\n\
 \n\
 @example\n\
 @group\n\
 result(mask) = tval(mask);\n\
 result(! mask) = fval(! mask);\n\
 @end group\n\
 @end example\n\
 \n\
diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -540,17 +540,17 @@ a breakpoint.  If you get the wrong line
     bp_table::remove_breakpoint (symbol_name, lines);
 
   return retval;
 }
 
 DEFUN (dbstatus, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {lst =} dbstatus (@var{func})\n\
-Return a vector containing the lines on which a function has \n\
+Return a vector containing the lines on which a function has\n\
 breakpoints set.\n\
 @table @code\n\
 @item func\n\
 String representing the function name.  When already in debug\n\
 mode this should be left out.\n\
 @end table\n\
 @seealso{dbclear, dbwhere}\n\
 @end deftypefn")
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -540,17 +540,17 @@ system-dependent error message.\n\
   return retval;
 }
 
 DEFUN (glob, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} glob (@var{pattern})\n\
 Given an array of pattern strings (as a char array or a cell array) in\n\
 @var{pattern}, return a cell array of file names that match any of\n\
-them, or an empty cell array if no patterns match.  The pattern strings are \n\
+them, or an empty cell array if no patterns match.  The pattern strings are\n\
 interpreted as filename globbing patterns (as they are used by Unix shells).\n\
 Within a pattern\n\
 @table @code\n\
 @itemx *\n\
 matches any string, including the null string,\n\
 @itemx ?\n\
 matches any single character, and\n\
 \n\
@@ -560,17 +560,17 @@ matches any of the enclosed characters.\
 \n\
 Tilde expansion\n\
 is performed on each of the patterns before looking for matching file\n\
 names.  For example:\n\
 \n\
 @example\n\
 ls\n\
      @result{}\n\
-        file1  file2  file3  myfile1 myfile1b \n\
+        file1  file2  file3  myfile1 myfile1b\n\
 glob (\"*file1\")\n\
      @result{}\n\
         @{\n\
           [1,1] = file1\n\
           [2,1] = myfile1\n\
         @}\n\
 glob (\"myfile?\")\n\
      @result{}\n\
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -728,17 +728,17 @@ DEFUN (freport, args, ,
 Print a list of which files have been opened, and whether they are open\n\
 for reading, writing, or both.  For example:\n\
 \n\
 @example\n\
 @group\n\
 freport ()\n\
 \n\
      @print{}  number  mode  name\n\
-     @print{} \n\
+     @print{}\n\
      @print{}       0     r  stdin\n\
      @print{}       1     w  stdout\n\
      @print{}       2     w  stderr\n\
      @print{}       3     r  myfile\n\
 @end group\n\
 @end example\n\
 @end deftypefn")
 {
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -1951,17 +1951,17 @@ execute_pkg_del (const std::string& dir)
   execute_pkg_add_or_del (dir, "PKG_DEL");
 }
 
 DEFUN (genpath, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} genpath (@var{dir})\n\
 @deftypefnx {Built-in Function} {} genpath (@var{dir}, @var{skip}, @dots{})\n\
 Return a path constructed from @var{dir} and all its subdirectories.\n\
-If additional string parameters are given, the resulting path will \n\
+If additional string parameters are given, the resulting path will\n\
 exclude directories with those names.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   octave_idx_type nargin = args.length ();
 
   if (nargin == 1)
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1436,17 +1436,17 @@ Save the named variables @var{v1}, @var{
 @var{file}.  The special filename @samp{-} may be used to write\n\
 output to the terminal.  If no variable names are listed, Octave saves\n\
 all the variables in the current scope.  Otherwise, full variable names or\n\
 pattern syntax can be used to specify the variables to save.\n\
 If the @option{-struct} modifier is used, fields @var{f1} @var{f2} @dots{}\n\
 of the scalar structure @var{STRUCT} are saved as if they were variables\n\
 with corresponding names.\n\
 Valid options for the @code{save} command are listed in the following table.\n\
-Options that modify the output format override the format specified by \n\
+Options that modify the output format override the format specified by\n\
 @code{default_save_options}.\n\
 \n\
 If save is invoked using the functional form\n\
 \n\
 @example\n\
 save (\"-option1\", @dots{}, \"file\", \"v1\", @dots{})\n\
 @end example\n\
 \n\
@@ -1517,17 +1517,17 @@ Match any single character.\n\
 \n\
 @item *\n\
 Match zero or more characters.\n\
 \n\
 @item [ @var{list} ]\n\
 Match the list of characters specified by @var{list}.  If the first\n\
 character is @code{!} or @code{^}, match all characters except those\n\
 specified by @var{list}.  For example, the pattern @code{[a-zA-Z]} will\n\
-match all lower and upper case alphabetic characters.  \n\
+match all lower and uppercase alphabetic characters.\n\
 \n\
 Wildcards may also be used in the field name specifications when using\n\
 the @option{-struct} modifier (but not in the struct name itself).\n\
 \n\
 @end table\n\
 \n\
 Except when using the @sc{matlab} binary data file format or the\n\
 @samp{-ascii} format, saving global\n\
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -1109,17 +1109,17 @@ not.\n\
 
   return retval;
 }
 
 DEFUNX ("islower", Fislower, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} islower (@var{s})\n\
 Return a logical array which is true where the elements of @var{s} are\n\
-lower case letters and false where they are not.\n\
+lowercase letters and false where they are not.\n\
 @seealso{isupper, isalpha, isletter, isalnum}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).xislower ();
   else
     print_usage ();
@@ -1261,17 +1261,17 @@ vertical tab) and false where they are n
 
   return retval;
 }
 
 DEFUNX ("isupper", Fisupper, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} isupper (@var{s})\n\
 Return a logical array which is true where the elements of @var{s} are\n\
-upper case letters and false where they are not.\n\
+uppercase letters and false where they are not.\n\
 @seealso{islower, isalpha, isletter, isalnum}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).xisupper ();
   else
     print_usage ();
@@ -1776,18 +1776,18 @@ toascii (\"ASCII\")\n\
 
   return retval;
 }
 
 DEFUNX ("tolower", Ftolower, args, ,
     "-*- texinfo -*-\n\
 @deftypefn  {Mapping Function} {} tolower (@var{s})\n\
 @deftypefnx {Mapping Function} {} lower (@var{s})\n\
-Return a copy of the string or cell string @var{s}, with each upper-case\n\
-character replaced by the corresponding lower-case one; non-alphabetic\n\
+Return a copy of the string or cell string @var{s}, with each uppercase\n\
+character replaced by the corresponding lowercase one; non-alphabetic\n\
 characters are left unchanged.  For example:\n\
 \n\
 @example\n\
 @group\n\
 tolower (\"MiXeD cAsE 123\")\n\
      @result{} \"mixed case 123\"\n\
 @end group\n\
 @end example\n\
@@ -1822,18 +1822,18 @@ DEFALIAS (lower, tolower);
 
 */
 
 
 DEFUNX ("toupper", Ftoupper, args, ,
     "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} toupper (@var{s})\n\
 @deftypefnx {Built-in Function} {} upper (@var{s})\n\
-Return a copy of the string or cell string @var{s}, with each lower-case\n\
-character replaced by the corresponding upper-case one; non-alphabetic\n\
+Return a copy of the string or cell string @var{s}, with each lowercase\n\
+character replaced by the corresponding uppercase one; non-alphabetic\n\
 characters are left unchanged.  For example:\n\
 \n\
 @example\n\
 @group\n\
 toupper (\"MiXeD cAsE 123\")\n\
      @result{} \"MIXED CASE 123\"\n\
 @end group\n\
 @end example\n\
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -554,17 +554,17 @@ octave_history_write_timestamp (void)
 
 DEFUN (edit_history, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Command} {} edit_history [@var{first}] [@var{last}]\n\
 If invoked with no arguments, @code{edit_history} allows you to edit the\n\
 history list using the editor named by the variable @w{@env{EDITOR}}.  The\n\
 commands to be edited are first copied to a temporary file.  When you\n\
 exit the editor, Octave executes the commands that remain in the file.\n\
-It is often more convenient to use @code{edit_history} to define functions \n\
+It is often more convenient to use @code{edit_history} to define functions\n\
 rather than attempting to enter them directly on the command line.\n\
 By default, the block of commands is executed as soon as you exit the\n\
 editor.  To avoid executing any commands, simply delete all the lines\n\
 from the buffer before exiting the editor.\n\
 \n\
 The @code{edit_history} command takes two optional arguments specifying\n\
 the history numbers of first and last commands to edit.  For example,\n\
 the command\n\
@@ -610,17 +610,17 @@ If invoked with no arguments, @code{hist
 that you have executed.  Valid options are:\n\
 \n\
 @table @code\n\
 @item -w @var{file}\n\
 Write the current history to the file @var{file}.  If the name is\n\
 omitted, use the default history file (normally @file{~/.octave_hist}).\n\
 \n\
 @item -r @var{file}\n\
-Read the file @var{file}, appending its contents to the current \n\
+Read the file @var{file}, appending its contents to the current\n\
 history list.  If the name is omitted, use the default history file\n\
 (normally @file{~/.octave_hist}).\n\
 \n\
 @item @var{n}\n\
 Display only the most recent @var{n} lines of history.\n\
 \n\
 @item -q\n\
 Don't number the displayed lines of history.  This is useful for cutting\n\
diff --git a/src/ov-fcn-inline.cc b/src/ov-fcn-inline.cc
--- a/src/ov-fcn-inline.cc
+++ b/src/ov-fcn-inline.cc
@@ -880,20 +880,22 @@ Create a vectorized version of the inlin
 by replacing all occurrences of @code{*}, @code{/}, etc., with\n\
 @code{.*}, @code{./}, etc.\n\
 \n\
 This may be useful, for example, when using inline functions with\n\
 numerical integration or optimization where a vector-valued function\n\
 is expected.\n\
 \n\
 @example\n\
+@group\n\
 fcn = vectorize (inline (\"x^2 - 1\"))\n\
    @result{} fcn = f(x) = x.^2 - 1\n\
 quadv (fcn, 0, 3)\n\
    @result{} 6\n\
+@end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -2745,18 +2745,18 @@ a matrix\n\
 @group\n\
 val = magic(3)\n\
      @result{} val = [ 8   1   6\n\
                 3   5   7\n\
                 4   9   2 ]\n\
 idx.type = \"()\";\n\
 idx.subs = @{\":\", 1:2@};\n\
 subsref(val, idx)\n\
-     @result{} [ 8   1 \n\
-          3   5 \n\
+     @result{} [ 8   1\n\
+          3   5\n\
           4   9 ]\n\
 @end group\n\
 @end example\n\
 \n\
 @noindent\n\
 Note that this is the same as writing @code{val(:,1:2)}.\n\
 @seealso{subsasgn, substruct}\n\
 @end deftypefn")
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -963,17 +963,17 @@ For example:\n\
           nlink = 1\n\
           blocks = 768\n\
           mode = -rw-r--r--\n\
           modestr = -rw-r--r--\n\
           ino = 9316\n\
           dev = 2049\n\
         @}\n\
      @result{} err = 0\n\
-     @result{} msg = \n\
+     @result{} msg =\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   if (args.length () == 1)
     {
       if (args(0).is_scalar_type ())
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1823,17 +1823,17 @@ The class of the variable.  Examples inc
 cell, and struct.\n\
 @end table\n\
 \n\
 The table can be customized to display more or less information through\n\
 the function @code{whos_line_format}.\n\
 \n\
 If @code{whos} is called as a function, return a struct array of defined\n\
 variable names matching the given patterns.  Fields in the structure\n\
-describing each variable are: name, size, bytes, class, global, sparse, \n\
+describing each variable are: name, size, bytes, class, global, sparse,\n\
 complex, nesting, persistent.\n\
 @seealso{who, whos_line_format}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (nargout < 2)
     {
@@ -2258,17 +2258,17 @@ Match any single character.\n\
 \n\
 @item *\n\
 Match zero or more characters.\n\
 \n\
 @item [ @var{list} ]\n\
 Match the list of characters specified by @var{list}.  If the first\n\
 character is @code{!} or @code{^}, match all characters except those\n\
 specified by @var{list}.  For example, the pattern @samp{[a-zA-Z]} will\n\
-match all lower and upper case alphabetic characters.\n\
+match all lowercase and uppercase alphabetic characters.\n\
 @end table\n\
 \n\
 For example, the command\n\
 \n\
 @example\n\
 clear foo b*r\n\
 @end example\n\
 \n\
@@ -2306,17 +2306,17 @@ Clears the local variable names.\n\
 \n\
 @item -classes, -c\n\
 Clears the class structure table and clears all objects.\n\
 \n\
 @item -regexp, -r\n\
 The arguments are treated as regular expressions as any variables that\n\
 match will be cleared.\n\
 @end table\n\
-With the exception of @code{exclusive}, all long options can be used \n\
+With the exception of @code{exclusive}, all long options can be used\n\
 without the dash as well.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("clear");
