# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1234777210 -3600
#      Mon Feb 16 10:40:10 2009 +0100
# Node ID 900a5bf52309616de76cfbbb181db59db6dcb1f6
# Parent  c141078e083abc81e59bde195a34e61ceb6aac21
Fix invalid conversion error on implicit demotion of n-d arrays

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,14 @@
 2009-02-16  Jaroslav Hajek  <highegg@gmail.com>
 
-	* ov-base-mat (octave_base_matrix<MT>::assign (const octave_value_list&,
+	* ov-base-mat.cc (octave_base_matrix<MT>::assign (const octave_value_list&,
 	typename MT::element_type): Fix invalid index.
+	* ov-re-mat.cc (default_numeric_demotion_function): Use
+	float_array_value instead of float_matrix_value.
 
 2009-02-16  John W. Eaton  <jwe@octave.org>
 
 	* input.cc (gnu_readline): Use fputs instead of fprintf.
 
 2009-02-15  John W. Eaton  <jwe@octave.org>
 
 	* defun.cc, defun-int.h, defun-dld.h (DEFUN_INTERNAL,
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -77,17 +77,17 @@ DEFINE_OCTAVE_ALLOCATOR (octave_matrix);
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_matrix, "matrix", "double");
 
 static octave_base_value *
 default_numeric_demotion_function (const octave_base_value& a)
 {
   CAST_CONV_ARG (const octave_matrix&);
 
-  return new octave_float_matrix (v.float_matrix_value ());
+  return new octave_float_matrix (v.float_array_value ());
 }
 
 octave_base_value::type_conv_info
 octave_matrix::numeric_demotion_function (void) const
 {
   return octave_base_value::type_conv_info(default_numeric_demotion_function,
                                            octave_float_matrix::static_type_id ());
 }
