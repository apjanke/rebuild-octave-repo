# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1448639177 18000
#      Fri Nov 27 10:46:17 2015 -0500
# Node ID 7655b399abff362137f8cfdbe6c32aa86259ffac
# Parent  a972a2dc27352cc55ab8b9463e62f79c0434fc2c
eliminate trailing whitespace in source files we maintain

diff --git a/doc/module.mk b/doc/module.mk
--- a/doc/module.mk
+++ b/doc/module.mk
@@ -16,22 +16,22 @@ export TEXMFVAR
 
 DVIPS = dvips
 TEX = tex
 PDFTEX = pdftex
 
 AM_V_TEX = $(am__v_TEX_$(V))
 am__v_TEX_ = $(am__v_TEX_$(AM_DEFAULT_VERBOSITY))
 am__v_TEX_0 = @echo "  TEX     " $@;
-am__v_TEX_1 = 
+am__v_TEX_1 =
 
 AM_V_PDFTEX = $(am__v_PDFTEX_$(V))
 am__v_PDFTEX_ = $(am__v_PDFTEX_$(AM_DEFAULT_VERBOSITY))
 am__v_PDFTEX_0 = @echo "  PDFTEX  " $@;
-am__v_PDFTEX_1 = 
+am__v_PDFTEX_1 =
 
 if AMCOND_BUILD_DOCS
 
 ## Listing "dvi" explicitly here seems to cause two simultaneous
 ## builds of the DVI files, presumably because the PS version
 ## also depends on the DVI file and somehow the rules are invoked
 ## twice.  Is that a bug in automake or make or what?
 
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -204,17 +204,17 @@ viridis_colormap (void)
     4.10292713809524e-01, 3.91487632857143e-01, 3.71420688571429e-01,
     3.50098750000000e-01, 3.27544678571429e-01, 3.03798967142857e-01,
     2.78916748571429e-01, 2.53000856190476e-01, 2.26223670000000e-01,
     1.98879439523810e-01, 1.71494930000000e-01, 1.45037631428572e-01,
     1.21291048571429e-01, 1.03326155238095e-01, 9.53507900000000e-02,
     1.00469958095238e-01, 1.17876387142857e-01, 1.43936200000000e-01};
 
   // It would be nice if Matrix had a ctor allowing to do the
-  // following without a copy 
+  // following without a copy
   Matrix cmap (64, 3, 0.0);
   std::copy (cmapv, cmapv + (64*3), cmap.fortran_vec ());
   return cmap;
 }
 
 
 static double
 default_screendepth (void)
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -4360,18 +4360,18 @@ octave_stream_list::do_clear (bool flush
       int fid = iter->first;
       if (fid < 3)  // Don't delete stdin, stdout, stderr
         {
           iter++;
           continue;
         }
 
       octave_stream os = iter->second;
-     
-      std::string name = os.name (); 
+
+      std::string name = os.name ();
       std::transform (name.begin (), name.end (), name.begin (), tolower);
 
       // FIXME: This test for gnuplot is hardly foolproof.
       if (name.find ("gnuplot") != std::string::npos)
         {
           // Don't close down pipes to gnuplot
           iter++;
           continue;
diff --git a/libinterp/octave-value/ov.h b/libinterp/octave-value/ov.h
--- a/libinterp/octave-value/ov.h
+++ b/libinterp/octave-value/ov.h
@@ -1158,17 +1158,17 @@ public:
   octave_function *xfunction_value (const char *fmt, ...) const;
   octave_user_function *xuser_function_value (const char *fmt, ...) const;
   octave_user_script *xuser_script_value (const char *fmt, ...) const;
   octave_user_code *xuser_code_value (const char *fmt, ...) const;
   octave_fcn_handle *xfcn_handle_value (const char *fmt, ...) const;
   octave_fcn_inline *xfcn_inline_value (const char *fmt, ...) const;
 
   octave_value_list xlist_value (const char *fmt, ...) const;
-  
+
   // Possibly economize a lazy-indexed value.
 
   void maybe_economize (void)
   { rep->maybe_economize (); }
 
   // The following two hook conversions are called on any octave_value prior to
   // storing it to a "permanent" location, like a named variable, a cell or a
   // struct component, or a return value of a function.
diff --git a/scripts/gui/uipushtool.m b/scripts/gui/uipushtool.m
--- a/scripts/gui/uipushtool.m
+++ b/scripts/gui/uipushtool.m
@@ -18,17 +18,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{hui} =} uipushtool (@var{property}, @var{value}, @dots{})
 ## @deftypefnx {Function File} {@var{hui} =} uipushtool (@var{parent}, @var{property}, @var{value}, @dots{})
 ##
 ## Create a uipushtool object and return a handle to it.
 ##
 ## uipushtools are buttons that appear on a figure toolbar.  The button is
-## created with a border that is shown when the user hovers over the button. 
+## created with a border that is shown when the user hovers over the button.
 ## An image can be set using the cdata property.
 ##
 ## If @var{parent} is omitted then a uipushtool for the current figure is
 ## created.  If no figure is available, a new figure is created first.  If a
 ## figure is available, but does not contain a uitoolbar, a uitoolbar will be
 ## created.
 ##
 ## If @var{parent} is given then an uipushtools is created on the
diff --git a/scripts/miscellaneous/inputname.m b/scripts/miscellaneous/inputname.m
--- a/scripts/miscellaneous/inputname.m
+++ b/scripts/miscellaneous/inputname.m
@@ -65,17 +65,17 @@ endfunction
 ## trivial.
 
 %!shared hello, worldly
 %!assert (inputname (1), "hello")
 %!assert (inputname (2), "worldly")
 %!assert (inputname (3), "")
 
 ## Clear parameter list so that testfn is created with zero inputs/outputs
-%!shared  
+%!shared
 %!assert (inputname (-1), "")
 %!assert (inputname (1), "")
 
 %!function r = __foo__ (x, y)
 %!  r = inputname (2);
 %!endfunction
 %!assert (__foo__ (pi, e), "e");
 %!assert (feval (@__foo__, pi, e), "e");
