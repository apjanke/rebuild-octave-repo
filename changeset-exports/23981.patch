# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1504213239 25200
#      Thu Aug 31 14:00:39 2017 -0700
# Node ID 6420142ff32c072fca384af5b6f5e931a5daf493
# Parent  eb6602171d5989aee7afa5b90a11fc0e20182c33
configure: fix capitalization of SUNDIALS, reword related terms

* configure.ac: Fix capitalization of SUNDIALS.  Refer to NVECTOR library
rather than nvecserial.  Delete unnecessary duplicate definition of
HAVE_SUNDIALS_NVECSERIAL.
* m4/acinclude.m4 (OCTAVE_CHECK_SUNDIALS_IDAKLU,
OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE): Fix capitalization of SUNDIALS.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2186,47 +2186,42 @@ if test -n "$UMFPACK_LIBS"; then
 
   OCTAVE_UMFPACK_SEPARATE_SPLIT
 
   CPPFLAGS="$save_CPPFLAGS"
   LDFLAGS="$save_LDFLAGS"
   LIBS="$save_LIBS"
 fi
 
-### Check for Sundials nvecserial library and header.
-
-OCTAVE_CHECK_LIB(sundials_nvecserial, [Sundials nvecserial],
-  [Sundials nvecserial library not found.  Solvers ode15i and ode15s will be disabled.],
+### Check for SUNDIALS NVECTOR serial library and header.
+
+OCTAVE_CHECK_LIB(sundials_nvecserial, [SUNDIALS NVECTOR],
+  [SUNDIALS NVECTOR serial library not found.  Solvers ode15i and ode15s will be disabled.],
   [nvector/nvector_serial.h nvector_serial.h ], [N_VNew_Serial],
-  [], [don't use Sundials nvecserial library, solvers ode15i and ode15s will be disabled])
-
-if test -n "$SUNDIALS_NVECSERIAL_LIBS"; then
-  AC_DEFINE(HAVE_SUNDIALS_NVECSERIAL, 1,
-    [Define to 1 if Sundials nvecserial is available.])
-fi
-
-### Check for Sundials IDA library and header.
+  [], [don't use SUNDIALS NVECTOR library, solvers ode15i and ode15s will be disabled])
+
+### Check for SUNDIALS IDA library and header.
 
 save_LIBS="$LIBS"
 LIBS="$SUNDIALS_NVECSERIAL_LIBS $KLU_LIBS $BLAS_LIBS $FLIBS $LIBS"
-OCTAVE_CHECK_LIB(sundials_ida, [Sundials IDA],
-  [Sundials IDA library not found.  Solvers ode15i and ode15s will be disabled.],
+OCTAVE_CHECK_LIB(sundials_ida, [SUNDIALS IDA],
+  [SUNDIALS IDA library not found.  Solvers ode15i and ode15s will be disabled.],
   [ida/ida.h ida.h], [IDAInit],
-  [], [don't use Sundials IDA library, solvers ode15i and ode15s will be disabled],
+  [], [don't use SUNDIALS IDA library, solvers ode15i and ode15s will be disabled],
   [warn_sundials_ida=
    OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE
    OCTAVE_CHECK_SUNDIALS_IDAKLU])
 LIBS="$save_LIBS"
 
 ## Define this way instead of with an #if in oct-conf-post.h so that
 ## the build features script will get the correct value.
 if test -n "$SUNDIALS_IDA_LIBS" \
     && test -n "$SUNDIALS_NVECSERIAL_LIBS" \
     && test $octave_cv_sundials_realtype_is_double = yes; then
-  AC_DEFINE(HAVE_SUNDIALS, 1, [Define Sundials is available.])
+  AC_DEFINE(HAVE_SUNDIALS, 1, [Define to 1 if SUNDIALS is available.])
 fi
 
 ## Collections of flags.  These are here instead of just in the
 ## Makefile.am file because we substitute some of them into other
 ## source files like mkoctfile.
 
 ## Order matters, at least on some systems (Cygwin, for example).
 
@@ -3287,22 +3282,22 @@ Octave is now configured for $canonical_
   Qt uic:                        $UIC $UICFLAGS
   Qt rcc:                        $RCC $RCCFLAGS
   Qt lrelease:                   $LRELEASE $LRELEASEFLAGS
   READLINE libraries:            $READLINE_LIBS
   Sndfile CPPFLAGS:              $SNDFILE_CPPFLAGS
   Sndfile LDFLAGS:               $SNDFILE_LDFLAGS
   Sndfile libraries:             $SNDFILE_LIBS
   SuiteSparse config libraries:  $SUITESPARSE_CONFIG_LIBS
-  SUNDIALS_IDA CPPFLAGS:         $SUNDIALS_IDA_CPPFLAGS
-  SUNDIALS_IDA LDFLAGS:          $SUNDIALS_IDA_LDFLAGS
-  SUNDIALS_IDA libraries:        $SUNDIALS_IDA_LIBS
-  SUNDIALS_NVECSERIAL CPPFLAGS:  $SUNDIALS_NVECSERIAL_CPPFLAGS
-  SUNDIALS_NVECSERIAL LDFLAGS:   $SUNDIALS_NVECSERIAL_LDFLAGS
-  SUNDIALS_NVECSERIAL libraries: $SUNDIALS_NVECSERIAL_LIBS
+  SUNDIALS IDA CPPFLAGS:         $SUNDIALS_IDA_CPPFLAGS
+  SUNDIALS IDA LDFLAGS:          $SUNDIALS_IDA_LDFLAGS
+  SUNDIALS IDA libraries:        $SUNDIALS_IDA_LIBS
+  SUNDIALS NVECTOR CPPFLAGS:     $SUNDIALS_NVECSERIAL_CPPFLAGS
+  SUNDIALS NVECTOR LDFLAGS:      $SUNDIALS_NVECSERIAL_LDFLAGS
+  SUNDIALS NVECTOR libraries:    $SUNDIALS_NVECSERIAL_LIBS
   TERM libraries:                $TERM_LIBS
   UMFPACK CPPFLAGS:              $UMFPACK_CPPFLAGS
   UMFPACK LDFLAGS:               $UMFPACK_LDFLAGS
   UMFPACK libraries:             $UMFPACK_LIBS
   X11 include flags:             $X11_INCFLAGS
   X11 libraries:                 $X11_LIBS
   Z CPPFLAGS:                    $Z_CPPFLAGS
   Z LDFLAGS:                     $Z_LDFLAGS
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1593,67 +1593,67 @@ c assume the default integer size is 32-
        octave_cv_sizeof_fortran_integer=8,
        octave_cv_sizeof_fortran_integer=4,
        octave_cv_sizeof_fortran_integer=4)
   ])
   AC_LANG_POP(Fortran 77)
   FFLAGS="$ac_octave_save_FFLAGS"
 ])
 dnl
-dnl Check whether Sundials IDA library is configured with double
+dnl Check whether SUNDIALS IDA library is configured with double
 dnl precision realtype.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SUNDIALS_SIZEOF_REALTYPE], [
   AC_CHECK_HEADERS([ida/ida.h ida.h])
-  AC_CACHE_CHECK([whether Sundials IDA is configured with double precision realtype],
+  AC_CACHE_CHECK([whether SUNDIALS IDA is configured with double precision realtype],
     [octave_cv_sundials_realtype_is_double],
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if defined (HAVE_IDA_IDA_H)
         #include <ida/ida.h>
         #else
         #include <ida.h>
         #endif
         #include <assert.h>
         ]], [[
         static_assert (sizeof (realtype) == sizeof (double),
                        "SUNDIALS is not configured for double precision");
       ]])],
       octave_cv_sundials_realtype_is_double=yes,
       octave_cv_sundials_realtype_is_double=no)
   ])
   if test $octave_cv_sundials_realtype_is_double = no; then
-    warn_sundials_realtype="Sundials IDA library not configured with double precision realtype, ode15i and ode15s will be disabled"
+    warn_sundials_realtype="SUNDIALS IDA library not configured with double precision realtype, ode15i and ode15s will be disabled"
     OCTAVE_CONFIGURE_WARNING([warn_sundials_realtype])
   fi
 ])
 dnl
-dnl Check whether Sundials IDA library is configured with IDAKLU
+dnl Check whether SUNDIALS IDA library is configured with IDAKLU
 dnl enabled.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SUNDIALS_IDAKLU], [
   AC_CHECK_HEADERS([ida/ida_klu.h ida_klu.h])
-  AC_CACHE_CHECK([whether Sundials IDA is configured with IDAKLU enabled],
+  AC_CACHE_CHECK([whether SUNDIALS IDA is configured with IDAKLU enabled],
     [octave_cv_sundials_idaklu],
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
          #if defined (HAVE_IDA_IDA_KLU_H)
          #include <ida/ida_klu.h>
          #else
          #include <ida_klu.h>
          #endif
          ]], [[
          IDAKLU (0, 0, 0, 0);
       ]])],
       octave_cv_sundials_idaklu=yes,
       octave_cv_sundials_idaklu=no)
     ])
   if test $octave_cv_sundials_idaklu = yes; then
     AC_DEFINE(HAVE_SUNDIALS_IDAKLU, 1,
-      [Define to 1 if Sundials IDA is configured with IDAKLU enabled.])
+      [Define to 1 if SUNDIALS IDA is configured with IDAKLU enabled.])
   else
-    warn_sundials_idaklu="Sundials IDA library not configured with IDAKLU, ode15i and ode15s will not support the sparse Jacobian feature"
+    warn_sundials_idaklu="SUNDIALS IDA library not configured with IDAKLU, ode15i and ode15s will not support the sparse Jacobian feature"
     OCTAVE_CONFIGURE_WARNING([warn_sundials_idaklu])
   fi
 ])
 dnl
 dnl Add warning to final summary.
 dnl
 AC_DEFUN([OCTAVE_CONFIGURE_WARNING], [
   AC_MSG_WARN([$][$1])
