# HG changeset patch
# User jwe
# Date 1200645339 0
#      Fri Jan 18 08:35:39 2008 +0000
# Node ID 270f28cfa7a0054c2167e9a382c99fd5e736fda4
# Parent  f9df7f7520e7c981c8b4712ca16958ca7dd0f80b
[project @ 2008-01-18 08:35:39 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-01-15  Rolf Fabian  <Rolf.Fabian@gmx.de>
+
+	* linear-algebra/__norm__.m: Only scale if inf norm is finite.
+	New tests.
+
 2008-01-18  John W. Eaton  <jwe@octave.org>
 
 	* optimization/sqp.m: End each function with endfunction.
 
 2008-01-18  Ben Abbott  <bpabbott@mac.com>
 
 	* polynomial/residue.m: For each group of pole multiplicity, set
 	the poles of the group to the value of the group's average.
diff --git a/scripts/linear-algebra/__norm__.m b/scripts/linear-algebra/__norm__.m
--- a/scripts/linear-algebra/__norm__.m
+++ b/scripts/linear-algebra/__norm__.m
@@ -39,17 +39,17 @@ function retval = __norm__ (x, p)
     p = 2;
   endif
 
   ## Do we have a vector or matrix as the first argument?
   if (ndims(x) == 2 && (rows (x) == 1 || columns (x) == 1))
     if (ischar (p))
       if (strcmp (p, "fro"))
         inf_norm = norm (x, "inf");
-        if (inf_norm)
+        if (inf_norm && finite (inf_norm)) 
           retval = inf_norm .* sqrt (sum (abs (x ./ inf_norm) .^ 2));
         else
           retval = inf_norm;
         endif
       elseif (strcmp (p, "inf"))
         retval = max (abs (x));
       else
         error ("norm: unrecognized norm");
@@ -69,17 +69,17 @@ function retval = __norm__ (x, p)
       else
         retval = sum (abs (x) .^ p) ^ (1/p);
       endif
     endif
   else
     if (ischar (p))
       if (strcmp (p, "fro"))
         inf_norm = norm (x, "inf");
-        if (inf_norm)
+        if (inf_norm && finite (inf_norm))
           retval = inf_norm .* sqrt (sum (sum (abs (x ./ inf_norm) .^ 2)));
         else
           retval = inf_norm;
         endif
       elseif (strcmp (p, "inf"))
         retval = max (sum (abs (x), 2));
       else
         error ("norm: unrecognized vector norm");
@@ -118,8 +118,25 @@ endfunction
 
 %!test
 %! assert (__norm__ (zeros (5), 1), 0);
 %! assert (__norm__ (ones (5), 1), 5);
 %! assert (__norm__ (2*ones (1,5), 1), 10);
 %! assert (__norm__ (2*ones (3,5), 1), 6);
 
 
+%!test
+%! assert (__norm__ (1e304 * ones (5, 3), "fro"), 1e304 * sqrt (15));
+%! assert (__norm__ (1e-320 * ones (5, 3), "fro"), 1e-320 * sqrt (15));
+%! assert (x = __norm__ ([1, 2; 3, Inf], "fro"), Inf);
+%! assert (x = __norm__ ([1, 2, 3, Inf], "fro"), Inf);
+%! assert (x = __norm__ ([1, -Inf; 3, 4], "fro"), Inf);
+%! assert (x = __norm__ ([1, 2; 3, NaN], "fro"), NaN);
+
+%!test
+%! assert (__norm__ (1e304 * ones (5, 3), "inf"), 3e304);
+%! assert (__norm__ (1e-320 * ones (5, 3), "inf"), 3e-320);
+%! assert (x = __norm__ ([1, 2; 3, Inf], "inf"), Inf);
+%! assert (x = __norm__ ([1, 2, 3, Inf], "inf"), Inf);
+%! assert (x = __norm__ ([1, -Inf; 3, 4], "inf"), Inf);
+%! assert (x = __norm__ ([1, 2; 3, NaN], "inf"), 3);
+
+
