# HG changeset patch
# User Rik <rik@octave.org>
# Date 1482074795 28800
#      Sun Dec 18 07:26:35 2016 -0800
# Branch stable
# Node ID dba7d8acc3e370fb2ebc5f146f08c248fbfd85d8
# Parent  426325aa8ee91dd3ddfaf0480c3f9b3b132e067f
doc: Correct documentation for javaclasspath file (bug #49873).

* external.txi: Remove text referring to having single class files in
javaclasspath.txt.

diff --git a/doc/interpreter/external.txi b/doc/interpreter/external.txi
--- a/doc/interpreter/external.txi
+++ b/doc/interpreter/external.txi
@@ -2013,19 +2013,19 @@ Octave searches the @var{static classpat
 classpath}.  Classes appearing in the @var{static} as well as in the
 @var{dynamic classpath} will therefore be found in the @var{static classpath}
 and loaded from this location.  Classes which will be used frequently or must
 be available to all users should be added to the @var{static classpath}.  The
 @var{static classpath} is populated once from the contents of a plain text file
 named @file{javaclasspath.txt} (or @file{classpath.txt} historically) when the
 Java Virtual Machine starts.  This file contains one line for each individual
 classpath to be added to the @var{static classpath}.  These lines can identify
-single class files, directories containing class files, or Java archives with
-complete class file hierarchies.  Comment lines starting with a @samp{#} or a
-@samp{%} character are ignored.
+directories containing class files, or Java archives with complete class file
+hierarchies.  Comment lines starting with a @samp{#} or a @samp{%} character
+are ignored.
 
 The search rules for the file @file{javaclasspath.txt}
 (or @file{classpath.txt}) are:
 
 @itemize
 @item First, Octave tries to locate it in the current directory (where Octave
 was started from).  If such a file is found, it is read and defines the initial
 @var{static classpath}.  Thus, it is possible to define a static classpath on a
