# HG changeset patch
# User jwe
# Date 847905670 0
#      Wed Nov 13 17:21:10 1996 +0000
# Node ID f8d5dbbbc50a8705cb6c11cd0bf79c344bc8b668
# Parent  bea4ff48d3883cebb5b72084b136ee5f5ada57d8
[project @ 1996-11-13 17:21:07 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+Wed Nov 13 11:04:26 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in: If running on an SCO system, define SCO, and force
+	HAVE_ISINF and HAVE_ISNAN to be defined.
+	Also check for ieeefp.h and nan.h.
+
 Tue Nov 12 21:50:49 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* MAKEINFO.PATCH: Update to use patch relative to texinfo-3.9.
 
 	* INFO.PATCH: New file.
 	* octMakefile.in (DISTFILES): Add it.
 
 	* info: Update to current release from texinfo-3.9.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.230 $)
+AC_REVISION($Revision: 1.231 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -607,20 +607,20 @@ AC_SUBST_FILE(f77_rules_frag)
 ### Checks for header files.
 
 AC_HEADER_STDC
 AC_HEADER_DIRENT
 AC_HEADER_TIME
 AC_HEADER_SYS_WAIT
 
 AC_CHECK_HEADERS(assert.h curses.h fcntl.h float.h floatingpoint.h \
-  grp.h limits.h memory.h ncurses.h pwd.h sgtty.h stdlib.h string.h \
-  sys/param.h sys/resource.h sys/select.h sys/stat.h sys/time.h \
-  sys/times.h sys/types.h sys/utsname.h termcap.h termio.h termios.h \
-  unistd.h varargs.h)
+  grp.h ieeefp.h limits.h memory.h nan.h ncurses.h pwd.h sgtty.h \
+  stdlib.h string.h sys/param.h sys/resource.h sys/select.h sys/stat.h \
+  sys/time.h sys/times.h sys/types.h sys/utsname.h termcap.h termio.h \
+  termios.h unistd.h varargs.h)
 
 if test "$ac_cv_header_termios_h" = yes \
     || test "$ac_cv_header_termio_h" = yes \
     || test "$ac_cv_header_sgtty_h" = yes; then
   true
 else
   AC_MSG_ERROR([I couldn't find termios.h, termio.h, or sgtty.h!])
 fi
@@ -769,21 +769,31 @@ case "$canonical_host_type" in
   *)
     AC_CHECK_LIB(m, sin)
   ;;
 esac
 
 XCFLAGS="$CFLAGS"
 CFLAGS="$CFLAGS $GCC_IEEE_FP_FLAG"
 
-### I am told that Inf and NaN don't work on m68k HP sytems.
+### I am told that Inf and NaN don't work on m68k HP sytems, and that
+### on SCO systems, isnan and isinf don't work, but they can be
+### replaced by something that does.
 
 case "$canonical_host_type" in
   m68k-hp-hpux*)
   ;;
+  *-*-sco*)
+    AC_MSG_RESULT([defining SCO to be 1])
+    AC_DEFINE(SCO, 1)
+    AC_MSG_RESULT([forcing HAVE_ISINF for SCO])
+    AC_DEFINE(HAVE_ISINF, 1)
+    AC_MSG_RESULT([forcing HAVE_ISNAN for SCO])
+    AC_DEFINE(HAVE_ISNAN, 1)
+  ;;
   *)
     AC_CHECK_FUNCS(finite isnan isinf infinity quiet_nan)
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
 AC_CHECK_FUNCS(acosh asinh atanh erf erfc)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+Wed Nov 13 11:19:22 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-ieee.cc (isnan, isinf): Provide functions for SCO.
+
 Tue Nov 12 11:11:21 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* idx-vector.cc (idx_is_inf_or_nan): New function.
 	(IDX_VEC_REP::idx_vector_rep): Use it.
 
 Sun Nov 10 17:09:24 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* str-vec.h, str-vec.cc: Add constructors to make string vectors
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -199,16 +199,18 @@ IDX_VEC_REP::idx_vector_rep (double d)
   if (idx_is_inf_or_nan (d))
     return;
   else
     {
       data = new int [len];
 
       data[0] = tree_to_mat_idx (d);
     }
+
+  init_state ();
 }
 
 IDX_VEC_REP::idx_vector_rep (const Range& r)
 {
   data = 0;
   initialized = 0;
   frozen = 0;
   colon_equiv_checked = 0;
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -26,16 +26,20 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cmath>
 
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
+#if defined (HAVE_NAN_H)
+#include <nan.h>
+#endif
+
 #include "lo-ieee.h"
 
 // Octave's idea of infinity.
 double octave_Inf;
 
 // Octave's idea of not a number.
 double octave_NaN;
 
@@ -79,13 +83,28 @@ octave_ieee_init (void)
   octave_NaN = (*((double *) (DQNAN)));
 #else
   octave_NaN = octave_Inf / octave_Inf;
 #endif
 
 #endif
 }
 
+#if defined (SCO)
+#define _IEEE 1
+extern "C" int
+isnan (double x)
+{
+  return (IsNANorINF(x) && NaN(x)) ? 1 : 0;
+}
+
+extern "C" int
+isinf (double x)
+{
+  return (IsNANorINF(x) && IsINF(x)) ? 1 : 0;
+}
+#endif
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,18 @@
+Wed Nov 13 11:13:22 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sysdep.cc: Conditionally include ieeefp.h.
+	(BSD_init, SCO_init): New functions.
+	(sysdep_init): Conditionally call them here.
+
 Tue Nov 12 00:14:56 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pt-plot.cc (open_plot_stream): Don't block SIGCHLD.
+
 	* load-save.cc (read_binary_data): When reading string arrays, be
 	sure to create an octave_char_matrix_str object, not just an
 	octave_char_matrix object.
 	(read_ascii_data): Likewise.
 
 Mon Nov 11 22:52:58 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* load-save.cc (read_binary_data): Don't forget teminating NUL for
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -158,17 +158,16 @@ open_plot_stream (void)
 	plot_prog = "gnuplot";
 
       // XXX FIXME XXX -- I'm not sure this is the right thing to do,
       // but without it, C-c at the octave prompt will kill gnuplot...
 
 #if defined (HAVE_POSIX_SIGNALS)
       sigset_t set, oset;
       sigemptyset (&set);
-      sigaddset (&set, SIGCHLD);
       sigaddset (&set, SIGINT);
       sigprocmask (SIG_BLOCK, &set, &oset);
 #endif
 
       plot_stream = new oprocstream (plot_prog.c_str ());
 
       if (plot_stream)
 	{
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -58,16 +58,20 @@ Software Foundation, Inc.
 #else
 LOSE! LOSE!
 #endif
 
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
+#if defined (HAVE_IEEEFP_H)
+#include <ieeefp.h>
+#endif
+
 #if !defined (HAVE_GETHOSTNAME) && defined (HAVE_SYS_UTSNAME_H)
 #include <sys/utsname.h>
 #endif
 
 #if defined (USE_READLINE)
 #include <readline/readline.h>
 #include <readline/tilde.h>
 #endif
@@ -89,17 +93,28 @@ extern "C" void _rl_output_character_fun
 #include "sysdep.h"
 #include "toplev.h"
 #include "utils.h"
 
 #ifndef STDIN_FILENO
 #define STDIN_FILENO 1
 #endif
 
-#ifdef NeXT
+#if defined (__386BSD__) || defined (__FreeBSD__)
+static void
+BSD_init (void)
+{
+#if defined (HAVE_FLOATINGPOINT_H)
+  // Disable trapping on common exceptions.
+  fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
+#endif
+}
+#endif
+
+#if defined NeXT
 extern "C"
 {
   typedef void (*_cplus_fcn_int) (int);
   extern void (*malloc_error (_cplus_fcn_int)) (int);
 }
 
 static void
 malloc_handler (int code)
@@ -114,16 +129,27 @@ malloc_handler (int code)
 
 static void
 NeXT_init (void)
 {
   malloc_error (malloc_handler);
 }
 #endif
 
+#if defined (SCO)
+static void
+SCO_init (void)
+{
+#if defined (HAVE_IEEEFP_H)
+  // Disable trapping on common exceptions.
+  fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
+#endif
+}
+#endif
+
 #if defined (EXCEPTION_IN_MATH)
 extern "C"
 int
 matherr (struct exception *x)
 {
   // Possibly print our own message someday.  Should probably be
   // user-switchable.
 
@@ -144,24 +170,21 @@ matherr (struct exception *x)
   return 1;
 }
 #endif
 
 void
 sysdep_init (void)
 {
 #if defined (__386BSD__) || defined (__FreeBSD__)
-#if defined (HAVE_FLOATINGPOINT_H)
-  // Disable trapping on common exceptions.
-  fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
-#endif
-#endif
-
-#ifdef NeXT
+  BSD_init ();
+#elif defined NeXT
   NeXT_init ();
+#elif defined (SCO)
+  SCO_init ();
 #endif
 
   octave_ieee_init ();
 }
 
 // Set terminal in raw mode.  From less-177.
 //
 // Change terminal to "raw mode", or restore to "normal" mode.
