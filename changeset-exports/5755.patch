# HG changeset patch
# User jwe
# Date 1144866467 0
#      Wed Apr 12 18:27:47 2006 +0000
# Node ID ca40a52804f4d3b1f8582cb434c2888fb277088d
# Parent  a9ac02e9fda5fb64e6e95f14bc2be835be2ce99c
[project @ 2006-04-12 18:27:47 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,16 @@
 2006-04-12  John W. Eaton  <jwe@octave.org>
 
+	* gripes.cc (warn_divide_by_zero): Move here from ov.cc.
+	(Vwarn_divide_by_zero): Likewise.  Now static.
+	(symbols_of_gripes): New function.  Move DEFVAR for
+	warn_divide_by_zero here from symbols_of_ov in ov.cc.
+	* ov.h (Vwarn_divide_by_zero): Delete decl.
+
 	* load-save.cc (do_load): Declare count octave_idx_type, not int.
 	* ls-oct-ascii.cc, ls-oct-ascii.h (read_ascii_data): Likewise.
 
 2006-04-11  John W. Eaton  <jwe@octave.org>
 
 	* pt-assign.cc (tree_simple_assignment::rvalue,
 	tree_multi_assignment::rvalue):
 	Error if RHS is a comma-separated list.
diff --git a/src/gripes.cc b/src/gripes.cc
--- a/src/gripes.cc
+++ b/src/gripes.cc
@@ -20,19 +20,24 @@ Software Foundation, Inc., 51 Franklin S
 02110-1301, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
+#include "utils.h"
+
+// Allow divide by zero errors to be suppressed.
+bool Vwarn_divide_by_zero;
 
 void
 gripe_not_supported (const char *fcn)
 {
   error ("%s: not supported on this system", fcn);
 }
 
 void
@@ -175,13 +180,33 @@ gripe_implicit_conversion (const std::st
 
 void
 gripe_divide_by_zero (void)
 {
   if (Vwarn_divide_by_zero)
     warning ("division by zero");
 }
 
+static int
+warn_divide_by_zero (void)
+{
+  Vwarn_divide_by_zero = check_preference ("warn_divide_by_zero");
+
+  return 0;
+}
+
+void
+symbols_of_gripes (void)
+{
+  DEFVAR (warn_divide_by_zero, true, warn_divide_by_zero,
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} warn_divide_by_zero\n\
+If the value of @code{warn_divide_by_zero} is nonzero, a warning\n\
+is issued when Octave encounters a division by zero.  If the value is\n\
+0, the warning is omitted.  The default value is 1.\n\
+@end defvr");
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -108,19 +108,16 @@ bool Vwarn_num_to_str;
 int Vwarn_str_to_num;
 
 // If TRUE, print the name along with the value.
 bool Vprint_answer_id_name;
 
 // How many levels of structure elements should we print?
 int Vstruct_levels_to_print;
 
-// Allow divide by zero errors to be suppressed.
-bool Vwarn_divide_by_zero;
-
 // If TRUE, print a warning when a matrix is resized by an indexed
 // assignment with indices outside the current bounds.
 bool Vwarn_resize_on_range_error;
 
 // XXX FIXME XXX
 
 // Octave's value type.
 
@@ -2326,24 +2323,16 @@ struct_levels_to_print (void)
 	  Vstruct_levels_to_print = ival;
 	  return 0;
 	}
     }
   gripe_invalid_value_specified ("struct_levels_to_print");
   return -1;
 }
 
-static int
-warn_divide_by_zero (void)
-{
-  Vwarn_divide_by_zero = check_preference ("warn_divide_by_zero");
-
-  return 0;
-}
-
 void
 symbols_of_ov (void)
 {
   DEFVAR (print_answer_id_name, true, print_answer_id_name,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} print_answer_id_name\n\
 If the value of @code{print_answer_id_name} is nonzero, variable\n\
 names are printed along with the result.  Otherwise, only the result\n\
@@ -2373,24 +2362,16 @@ depending on the value of @code{silent_f
 
   DEFVAR (struct_levels_to_print, 2.0, struct_levels_to_print,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} struct_levels_to_print\n\
 You can tell Octave how many structure levels to display by setting the\n\
 built-in variable @code{struct_levels_to_print}.  The default value is 2.\n\
 @end defvr");
 
-  DEFVAR (warn_divide_by_zero, true, warn_divide_by_zero,
-    "-*- texinfo -*-\n\
-@defvr {Built-in Variable} warn_divide_by_zero\n\
-If the value of @code{warn_divide_by_zero} is nonzero, a warning\n\
-is issued when Octave encounters a division by zero.  If the value is\n\
-0, the warning is omitted.  The default value is 1.\n\
-@end defvr");
-
   DEFVAR (warn_fortran_indexing, false, warn_fortran_indexing,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} warn_fortran_indexing\n\
 If the value of @code{warn_fortran_indexing} is nonzero, a warning is\n\
 printed for expressions which select elements of a two-dimensional matrix\n\
 using a single index.  The default value is 0.\n\
 @end defvr");
 
diff --git a/src/ov.h b/src/ov.h
--- a/src/ov.h
+++ b/src/ov.h
@@ -973,19 +973,16 @@ extern int Vwarn_str_to_num;
 extern int Vwarn_imag_to_real;
 
 // If TRUE, print the name along with the value.
 extern bool Vprint_answer_id_name;
 
 // How many levels of structure elements should we print?
 extern int Vstruct_levels_to_print;
 
-// Allow divide by zero errors to be suppressed.
-extern bool Vwarn_divide_by_zero;
-
 // If TRUE, print a warning when a matrix is resized by an indexed
 // assignment with indices outside the current bounds.
 extern bool Vwarn_resize_on_range_error;
 
 // Indentation level for structures.
 extern int struct_indent;
 
 extern void increment_struct_indent (void);
