# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1392237619 -3600
#      Wed Feb 12 21:40:19 2014 +0100
# Node ID 0cbd0d285541663251d257954cf0032ca3d27217
# Parent  b26d6be1767a85541006704249fa3da100ffd3de
Avoid reseting "parent" property to the same value (bug #37752).

* base_properties::set_parent (graphics.cc): do nothing if current and new parent are the same
* add test according to bug #37752

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -2772,17 +2772,23 @@ base_properties::set_parent (const octav
         {
           new_parent = gh_manager::lookup (hnp);
 
           if (new_parent.ok ())
             {
               // Remove child from current parent
               graphics_object old_parent_obj;
               old_parent_obj = gh_manager::get_object (get_parent ());
-              old_parent_obj.remove_child (__myhandle__);
+
+               
+              if (old_parent_obj.get_handle () != hnp) 
+                old_parent_obj.remove_child (__myhandle__);
+              else
+                // Do nothing more
+                return;
 
               // Check new parent's parent is not this child to avoid recursion
               graphics_object new_parent_obj;
               new_parent_obj = gh_manager::get_object (new_parent);
               if (new_parent_obj.get_parent () == __myhandle__)
                 {
                   // new parent's parent gets child's original parent
                   new_parent_obj.get_properties ().set_parent (get_parent ().as_octave_value ());
@@ -2795,16 +2801,28 @@ base_properties::set_parent (const octav
           else
             error ("set: invalid graphics handle (= %g) for parent", hnp);
         }
     }
   else
     error ("set: expecting parent to be a graphics handle");
 }
 
+/*
+%!test
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   hax = gca ();
+%!   set (hax, "parent", gcf ())
+%!   assert (gca (), hax)
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+*/
+
 void
 base_properties::mark_modified (void)
 {
   __modified__ = "on";
   graphics_object parent_obj = gh_manager::get_object (get_parent ());
   if (parent_obj)
     parent_obj.mark_modified ();
 }
