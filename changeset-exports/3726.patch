# HG changeset patch
# User jwe
# Date 972669087 0
#      Fri Oct 27 17:51:27 2000 +0000
# Node ID b7d997d593d95d18056b3eeed09a23fb1b6d02a6
# Parent  7d2d642cbb539f33fbac4c501b86b26ff372459e
[project @ 2000-10-27 17:51:21 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,17 @@
+2000-10-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* autogen.sh: Don't run configure.
+
+	* configure.in (SPECIAL_MATH_LIB): Delete code related to this var.
+	* Makeconf.in: Ditto.
+	(BLAS_LIBS, LIBS): Substitute here.
+	(do-subst-config-vals): Put BLAS_LIBS in oct-conf.h.
+
 2000-07-20  Joao Cardoso  <jcardoso@inescn.pt>
 
 	* configure.in: (LD_CXX): Define and substitute.
 	For sco3.2v5 systems, set SONAME_FLAGS and RLD_FLAG.
 	* Makeconf.in (LD_CXX): Allow substitution.
 
 2000-07-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -142,17 +142,19 @@ TERMLIBS = @TERMLIBS@
 LIBDLFCN = @LIBDLFCN@
 LIBGLOB = @LIBGLOB@
 LIBPLPLOT = @LIBPLPLOT@
 LIBREADLINE = @LIBREADLINE@
 LIBKPATHSEA = @LIBKPATHSEA@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
-SPECIAL_MATH_LIB = @SPECIAL_MATH_LIB@
+
+BLAS_LIBS = @BLAS_LIBS@
+LIBS = @LIBS@
 
 # The arguments passed to configure.
 config_opts = @config_opts@
 
 # ==================== Where To Install Things ====================
 
 # The default location for installation.  Everything is placed in
 # subdirectories of this directory.  The default values for many of
@@ -327,16 +329,17 @@ define do-subst-config-vals
 echo "making $@ from $<"
 sed < $< \
   -e "s;%OCTAVE_CONF_ALL_CFLAGS%;\"${ALL_CFLAGS}\";" \
   -e "s;%OCTAVE_CONF_ALL_CXXFLAGS%;\"${ALL_CXXFLAGS}\";" \
   -e "s;%OCTAVE_CONF_ALL_FFLAGS%;\"${ALL_FFLAGS}\";" \
   -e "s;%OCTAVE_CONF_ALL_LDFLAGS%;\"${ALL_LDFLAGS}\";" \
   -e "s;%OCTAVE_CONF_AR%;\"${AR}\";" \
   -e "s;%OCTAVE_CONF_ARFLAGS%;\"${ARFLAGS}\";" \
+  -e "s;%OCTAVE_CONF_BLAS_LIBS%;\"${BLAS_LIBS}\";" \
   -e "s;%OCTAVE_CONF_CC%;\"${CC}\";" \
   -e "s;%OCTAVE_CONF_CC_VERSION%;\"${CC_VERSION}\";" \
   -e "s;%OCTAVE_CONF_CFLAGS%;\"${CFLAGS}\";" \
   -e "s;%OCTAVE_CONF_CPICFLAG%;\"${CPICFLAG}\";" \
   -e "s;%OCTAVE_CONF_CPPFLAGS%;\"${CPPFLAGS}\";" \
   -e "s;%OCTAVE_CONF_CXX%;\"${CXX}\";" \
   -e "s;%OCTAVE_CONF_CXXCPP%;\"${CXXCPP}\";" \
   -e "s;%OCTAVE_CONF_CXXFLAGS%;\"${CXXFLAGS}\";" \
@@ -379,17 +382,16 @@ sed < $< \
   -e "s;%OCTAVE_CONF_RLD_FLAG%;\"${RLD_FLAG}\";" \
   -e "s;%OCTAVE_CONF_RUNTEST%;\"${RUNTEST}\";" \
   -e "s;%OCTAVE_CONF_SHARED_LIBS%;\"${SHARED_LIBS}\";" \
   -e "s;%OCTAVE_CONF_SHLEXT%;\"${SHLEXT}\";" \
   -e "s;%OCTAVE_CONF_SHLEXT_VER%;\"${SHLEXT_VER}\";" \
   -e "s;%OCTAVE_CONF_SH_LD%;\"${SH_LD}\";" \
   -e "s;%OCTAVE_CONF_SH_LDFLAGS%;\"${SH_LDFLAGS}\";" \
   -e "s;%OCTAVE_CONF_SONAME_FLAGS%;\"${SONAME_FLAGS}\";" \
-  -e "s;%OCTAVE_CONF_SPECIAL_MATH_LIB%;\"${SPECIAL_MATH_LIB}\";" \
   -e "s;%OCTAVE_CONF_STATIC_LIBS%;\"${STATIC_LIBS}\";" \
   -e "s;%OCTAVE_CONF_TERMLIBS%;\"${TERMLIBS}\";" \
   -e "s;%OCTAVE_CONF_UGLY_DEFS%;\"${UGLY_DEFS}\";" \
   -e "s;%OCTAVE_CONF_VERSION%;\"${version}\";" \
   -e "s;%OCTAVE_CONF_WITH_DL%;\"${WITH_DL}\";" \
   -e "s;%OCTAVE_CONF_WITH_DYNAMIC_LINKING%;\"${WITH_DYNAMIC_LINKING}\";" \
   -e "s;%OCTAVE_CONF_WITH_SHL%;\"${WITH_SHL}\";" \
   -e "s;%OCTAVE_CONF_XTRA_CFLAGS%;\"${XTRA_CFLAGS}\";" \
diff --git a/autogen.sh b/autogen.sh
--- a/autogen.sh
+++ b/autogen.sh
@@ -24,18 +24,16 @@ echo "calling autoconf and autoheader...
 
 for i in `find . -name configure.in -print`; do (
     cd `dirname $i`
     pwd
     autoconf 
     autoheader
 ); done
 
-echo Done.cc
-
-./configure "$@"
+echo done
 
 if [ -f cvs.motd ]; then
   echo "ATTENTION CVS Users!"
   echo ""
   cat cvs.motd
   echo ""
 fi
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.334 $)
+AC_REVISION($Revision: 1.335 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -801,23 +801,16 @@ AC_SUBST(OCTAVE_LITE)
 ### functions like gethostname and gettimeofday is in libsocket.
 
 AC_ISC_POSIX
 AC_MINIX
 AC_AIX
 AC_CHECK_LIB(sun, getpwnam)
 AC_CHECK_LIB(socket, gethostname)
 
-case "$canonical_host_type" in
-  alpha*-dec-osf*)
-    AC_CHECK_LIB(dxml, dgemm_, [SPECIAL_MATH_LIB=-ldxml])
-  ;;
-esac
-AC_SUBST(SPECIAL_MATH_LIB)
-
 ### How big are ints and how are they oriented?  These could probably
 ### be eliminated in favor of run-time checks.
 
 AC_CHECK_SIZEOF(short, 2)
 AC_CHECK_SIZEOF(int, 4)
 AC_CHECK_SIZEOF(long, 4)
 AC_CHECK_SIZEOF(long long, 8)
 
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -2326,20 +2326,20 @@ ComplexMatrix::cumprod (int dim) const
   int nc = cols ();
   ComplexMatrix retval (nr, nc);
   if (nr > 0 && nc > 0)
     {
       if ((nr == 1 && dim == 0) || dim == 1)
 	{
 	  for (int i = 0; i < nr; i++)
 	    {
-	      Complex prod = elem (0, 0);
+	      Complex prod = elem (i, 0);
 	      for (int j = 0; j < nc; j++)
 		{
-		  retval.elem (0, j) = prod;
+		  retval.elem (i, j) = prod;
 		  if (j < nc - 1)
 		    prod *= elem (i, j+1);
 		}
 	    }
 	}
       else
 	{
 	  for (int j = 0; j < nc; j++)
@@ -2364,17 +2364,17 @@ ComplexMatrix::cumsum (int dim) const
   int nc = cols ();
   ComplexMatrix retval (nr, nc);
   if (nr > 0 && nc > 0)
     {
       if ((nr == 1 && dim == 0) || dim == 1)
 	{
 	  for (int i = 0; i < nr; i++)
 	    {
-	      Complex sum = elem (0, 0);
+	      Complex sum = elem (i, 0);
 	      for (int j = 0; j < nc; j++)
 		{
 		  retval.elem (i, j) = sum;
 		  if (j < nc - 1)
 		    sum += elem (i, j+1);
 		}
 	    }
 	}
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2000-10-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* CMatrix.cc (ComplexMatrix::cumsum, ComplexMatrix::cumprod):
+	Correct indexing for operation across rows.
+	* dMatrix.cc (Matrix::cumsum, Matrix::cumprod): Likewise.
+
 2000-10-12  Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
 
 	* Array2-idx.h (Array2<T>::index (idx_vector&)): Avoid copying
 	elements if arg is a colon.
 
 2000-10-12  Cai Jianming <caijianming@yahoo.co.uk>
 
 	dMatrix.cc (Matrix::cumprod (int) const): New arg, DIM.
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -1883,17 +1883,17 @@ Matrix::cumprod (int dim) const
     {
       if ((nr == 1 && dim == 0) || dim == 1)
 	{
 	  for (int i = 0; i < nr; i++)
 	    {
 	      double prod = elem (i, 0);
 	      for (int j = 0; j < nc; j++)
 		{
-		  retval.elem (0, j) = prod;
+		  retval.elem (i, j) = prod;
 		  if (j < nc - 1)
 		    prod *= elem (i, j+1);
 		}
 	    }
 	}
       else
 	{
 	  for (int j = 0; j < nc; j++)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,21 @@
+2000-10-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (ops.cc): Don't substitute BLAS_LIBS and LIBS here.
+
+	* oct-conf.h.in (OCTAVE_CONF_SPECIAL_MATH_LIB): Delete.
+	(OCTAVE_CONF_BLAS_LIBS): Add.
+	* toplev.cc (octave_config_info): Likewise, add BLAS_LIBS and
+	remove SPECIAL_MATH_LIB from the struct.
+
+	* parse.y (feval (const octave_value_list&, int)): Don't panic
+	while processing arg names if arg.length() and arg_names.length()
+	differ.
+
 2000-10-12  Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
 
 	* ov-cell.h (octave_cell::is_cell): New function.
 
 	* pt-select.cc (equal): New static function.
 	(tree_switch_case::label_matches): Use it to compare case label
 	against arg.  Handle cell arrays as case labels.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -185,19 +185,16 @@ VAR_FILES := $(patsubst %.cc, %, $(VAR_1
 DOC_FILES := $(sort $(DEF_FILES) $(patsubst %, %.df, $(VAR_FILES)))
 
 OCTAVE_LFLAGS = -L$(TOPDIR)/liboctave -L$(TOPDIR)/libcruft \
   -L$(TOPDIR)/src $(RLD_FLAG)
 
 OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
   $(LIBPLPLOT) $(LIBREADLINE) $(LIBKPATHSEA) $(LIBGLOB) $(LIBDLFCN)
 
-BLAS_LIBS = @BLAS_LIBS@
-LIBS = @LIBS@
-
 DISTFILES = Makefile.in ChangeLog mkdefs mkops mkgendoc \
 	DOCSTRINGS mkbuiltins mk-oct-links \
 	defaults.h.in oct-conf.h.in octave.gperf oct-gperf.h \
 	octave.cc parse.cc lex.cc y.tab.h \
 	$(INCLUDES) $(DIST_SRC)
 
 ifeq ($(SHARED_LIBS), true)
   BINDISTLIBS = src/liboctinterp
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -43,16 +43,20 @@ Software Foundation, 59 Temple Place - S
 #ifndef OCTAVE_CONF_ARFLAGS
 #define OCTAVE_CONF_ARFLAGS %OCTAVE_CONF_ARFLAGS%
 #endif
 
 #ifndef OCTAVE_CONF_AR
 #define OCTAVE_CONF_AR %OCTAVE_CONF_AR%
 #endif
 
+#ifndef OCTAVE_CONF_BLAS_LIBS
+#define OCTAVE_CONF_BLAS_LIBS %OCTAVE_CONF_BLAS_LIBS%
+#endif
+
 #ifndef OCTAVE_CONF_CC
 #define OCTAVE_CONF_CC %OCTAVE_CONF_CC%
 #endif
 
 #ifndef OCTAVE_CONF_CC_VERSION
 #define OCTAVE_CONF_CC_VERSION %OCTAVE_CONF_CC_VERSION%
 #endif
 
@@ -255,20 +259,16 @@ Software Foundation, 59 Temple Place - S
 #ifndef OCTAVE_CONF_SH_LD
 #define OCTAVE_CONF_SH_LD %OCTAVE_CONF_SH_LD%
 #endif
 
 #ifndef OCTAVE_CONF_SONAME_FLAGS
 #define OCTAVE_CONF_SONAME_FLAGS %OCTAVE_CONF_SONAME_FLAGS%
 #endif
 
-#ifndef OCTAVE_CONF_SPECIAL_MATH_LIB
-#define OCTAVE_CONF_SPECIAL_MATH_LIB %OCTAVE_CONF_SPECIAL_MATH_LIB%
-#endif
-
 #ifndef OCTAVE_CONF_STATIC_LIBS
 #define OCTAVE_CONF_STATIC_LIBS %OCTAVE_CONF_STATIC_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_TERMLIBS
 #define OCTAVE_CONF_TERMLIBS %OCTAVE_CONF_TERMLIBS%
 #endif
 
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -3248,29 +3248,40 @@ be named @file{@var{file}.m}.\n\
 	error ("source: expecting file name as argument");
     }
   else
     print_usage ("source");
 
   return retval;
 }
 
+// Evaluate an Octave function (built-in or interpreted) and return
+// the list of result values.  the results.  NAME is the name of the
+// function to call.  ARGS are the arguments to the function.  NARGOUT
+// is the number of output arguments expected.
+
 octave_value_list
 feval (const std::string& name, const octave_value_list& args, int nargout)
 {
   octave_value_list retval;
 
   octave_function *fcn = is_valid_function (name, "feval", 1);
 
   if (fcn)
     retval = fcn->do_multi_index_op (nargout, args);
 
   return retval;
 }
 
+// Evaluate an Octave function (built-in or interpreted) and return
+// the list of result values.  The first element of ARGS should be a
+// string containing the name of the function to call, then the rest
+// are the actual arguments to the function.  NARGOUT is the number of
+// output arguments expected.
+
 octave_value_list
 feval (const octave_value_list& args, int nargout)
 {
   octave_value_list retval;
 
   if (args.length () > 0)
     {
       std::string name = args(0).string_value ();
@@ -3283,21 +3294,26 @@ feval (const octave_value_list& args, in
 
 	  for (int i = 0; i < tmp_nargin; i++)
 	    tmp_args(i) = args(i+1);
 
 	  string_vector arg_names = args.name_tags ();
 
 	  if (! arg_names.empty ())
 	    {
-	      assert (arg_names.length () == tmp_nargin + 1);
-
-	      string_vector tmp_arg_names (tmp_nargin);
-
-	      for (int i = 0; i < tmp_nargin; i++)
+	      // tmp_nargin and arg_names.length () - 1 may differ if
+	      // we are passed all_va_args.
+
+	      int n = arg_names.length () - 1;
+
+	      int len = n > tmp_nargin ? tmp_nargin : n;
+
+	      string_vector tmp_arg_names (len);
+
+	      for (int i = 0; i < len; i++)
 		tmp_arg_names(i) = arg_names(i+1);
 
 	      tmp_args.stash_name_tags (tmp_arg_names);
 	    }
 
 	  retval = feval (name, tmp_args, nargout);
 	}
     }
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -607,16 +607,17 @@ specified option.\n\
   Octave_map m;
 
   m ["ALL_CFLAGS"] = OCTAVE_CONF_ALL_CFLAGS;
   m ["ALL_CXXFLAGS"] = OCTAVE_CONF_ALL_CXXFLAGS;
   m ["ALL_FFLAGS"] = OCTAVE_CONF_ALL_FFLAGS;
   m ["ALL_LDFLAGS"] = OCTAVE_CONF_ALL_LDFLAGS;
   m ["AR"] = OCTAVE_CONF_AR;
   m ["ARFLAGS"] = OCTAVE_CONF_ARFLAGS;
+  m ["BLAS_LIBS"] = OCTAVE_CONF_BLAS_LIBS;
   m ["CC"] = OCTAVE_CONF_CC;
   m ["CC_VERSION"] = OCTAVE_CONF_CC_VERSION;
   m ["CFLAGS"] = OCTAVE_CONF_CFLAGS;
   m ["CPICFLAG"] = OCTAVE_CONF_CPICFLAG;
   m ["CPPFLAGS"] = OCTAVE_CONF_CPPFLAGS;
   m ["CXX"] = OCTAVE_CONF_CXX;
   m ["CXXCPP"] = OCTAVE_CONF_CXXCPP;
   m ["CXXFLAGS"] = OCTAVE_CONF_CXXFLAGS;
@@ -659,17 +660,16 @@ specified option.\n\
   m ["RLD_FLAG"] = OCTAVE_CONF_RLD_FLAG;
   m ["RUNTEST"] = OCTAVE_CONF_RUNTEST;
   m ["SHARED_LIBS"] = OCTAVE_CONF_SHARED_LIBS;
   m ["SHLEXT"] = OCTAVE_CONF_SHLEXT;
   m ["SHLEXT_VER"] = OCTAVE_CONF_SHLEXT_VER;
   m ["SH_LD"] = OCTAVE_CONF_SH_LD;
   m ["SH_LDFLAGS"] = OCTAVE_CONF_SH_LDFLAGS;
   m ["SONAME_FLAGS"] = OCTAVE_CONF_SONAME_FLAGS;
-  m ["SPECIAL_MATH_LIB"] = OCTAVE_CONF_SPECIAL_MATH_LIB;
   m ["STATIC_LIBS"] = OCTAVE_CONF_STATIC_LIBS;
   m ["TERMLIBS"] = OCTAVE_CONF_TERMLIBS;
   m ["UGLY_DEFS"] = OCTAVE_CONF_DEFS;
   m ["UGLY_DEFS"] = OCTAVE_CONF_UGLY_DEFS;
   m ["WITH_DL"] = OCTAVE_CONF_WITH_DL;
   m ["WITH_DYNAMIC_LINKING"] = OCTAVE_CONF_WITH_DYNAMIC_LINKING;
   m ["WITH_SHL"] = OCTAVE_CONF_WITH_SHL;
   m ["XTRA_CFLAGS"] = OCTAVE_CONF_XTRA_CFLAGS;
diff --git a/test/octave.test/arith/arith.exp b/test/octave.test/arith/arith.exp
--- a/test/octave.test/arith/arith.exp
+++ b/test/octave.test/arith/arith.exp
@@ -712,81 +712,81 @@ set test sum-2
 set prog_output "ans = 1"
 do_test sum-2.m
 
 set test sum-3
 set prog_output "\n... sum:.*"
 do_test sum-3.m
 
 set test sum-4
-set prog_output "\n... sum:.*"
+set prog_output "ans = 1"
 do_test sum-4.m
 
 set test prod-1
 set prog_output "ans = 1"
 do_test prod-1.m
 
 set test prod-2
 set prog_output "ans = 1"
 do_test prod-2.m
 
 set test prod-3
 set prog_output "\n... prod:.*"
 do_test prod-3.m
 
 set test prod-4
-set prog_output "\n... prod:.*"
+set prog_output "ans = 1"
 do_test prod-4.m
 
 set test cumsum-1
 set prog_output "ans = 1"
 do_test cumsum-1.m
 
 set test cumsum-2
 set prog_output "ans = 1"
 do_test cumsum-2.m
 
 set test cumsum-3
 set prog_output "\n... cumsum:.*"
 do_test cumsum-3.m
 
 set test cumsum-4
-set prog_output "\n... cumsum:.*"
+set prog_output "ans = 1"
 do_test cumsum-4.m
 
 set test cumprod-1
 set prog_output "ans = 1"
 do_test cumprod-1.m
 
 set test cumprod-2
 set prog_output "ans = 1"
 do_test cumprod-2.m
 
 set test cumprod-3
 set prog_output "\n... cumprod:.*"
 do_test cumprod-3.m
 
 set test cumprod-4
-set prog_output "\n... cumprod:.*"
+set prog_output "ans = 1"
 do_test cumprod-4.m
 
 set test sumsq-1
 set prog_output "ans = 1"
 do_test sumsq-1.m
 
 set test sumsq-2
 set prog_output "ans = 1"
 do_test sumsq-2.m
 
 set test sumsq-3
 set prog_output "\n... sumsq:.*"
 do_test sumsq-3.m
 
 set test sumsq-4
-set prog_output "\n... sumsq:.*"
+set prog_output "ans = 1"
 do_test sumsq-4.m
 
 set test bincoeff-1
 set prog_output "ans = 1"
 do_test bincoeff-1.m
 
 set test bincoeff-2
 set prog_output "usage:.*"
diff --git a/test/octave.test/arith/cumprod-4.m b/test/octave.test/arith/cumprod-4.m
--- a/test/octave.test/arith/cumprod-4.m
+++ b/test/octave.test/arith/cumprod-4.m
@@ -1,1 +1,2 @@
-cumprod (1, 2)
+(all (cumprod ([2, 3; 4, 5], 1) == [2, 3; 8, 15])
+ && all (cumprod ([2, 3; 4, 5], 2) == [2, 6; 4, 20]))
diff --git a/test/octave.test/arith/cumsum-4.m b/test/octave.test/arith/cumsum-4.m
--- a/test/octave.test/arith/cumsum-4.m
+++ b/test/octave.test/arith/cumsum-4.m
@@ -1,1 +1,2 @@
-cumsum (1, 2)
+(all (cumsum ([1, 2; 3, 4], 1) == [1, 2; 4, 6])
+ && all (cumsum ([1, 2; 3, 4], 2) == [1, 3; 3, 7]))
diff --git a/test/octave.test/arith/prod-4.m b/test/octave.test/arith/prod-4.m
--- a/test/octave.test/arith/prod-4.m
+++ b/test/octave.test/arith/prod-4.m
@@ -1,1 +1,2 @@
-prod (1, 2)
+(all (prod ([1, 2; 3, 4], 1) == [3, 8])
+ && all (prod ([1, 2; 3, 4], 2) == [2; 12]))
diff --git a/test/octave.test/arith/sum-4.m b/test/octave.test/arith/sum-4.m
--- a/test/octave.test/arith/sum-4.m
+++ b/test/octave.test/arith/sum-4.m
@@ -1,1 +1,2 @@
-sum (1, 2)
+(all (sum ([1, 2; 3, 4], 1) == [4, 6])
+ && all (sum ([1, 2; 3, 4], 2) == [3; 7]))
diff --git a/test/octave.test/arith/sumsq-4.m b/test/octave.test/arith/sumsq-4.m
--- a/test/octave.test/arith/sumsq-4.m
+++ b/test/octave.test/arith/sumsq-4.m
@@ -1,1 +1,2 @@
-sumsq (1, 2)
+(all (sumsq ([1, 2; 3, 4], 1) == [10, 20])
+ && all (sumsq ([1, 2; 3, 4], 2) == [5; 25]))
