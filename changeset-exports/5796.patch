# HG changeset patch
# User jwe
# Date 1147140295 0
#      Tue May 09 02:04:55 2006 +0000
# Node ID 20f4bd627a748b361cf31a630ad60af00a443d20
# Parent  dd0422e4022cc465224a1f2b3448564295de4355
[project @ 2006-05-09 02:04:54 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,23 @@
 2006-05-08  John W. Eaton  <jwe@octave.org>
 
+	* Makefile.in (DEFUN_PATTERN): Match DEFUNX_DLD.
+	* mkbuiltins: Handle XDEFUNX_DLD_INTERNAL.
+	* mkgendoc: Likewise.
+	* mk-pkg-add: Likewise.  Do all the matching with sed.
+	* defun-int.h 	(DEFINE_FUNX_INSTALLER_FUN, DEFINE_FUNX_INSTALLER_FUN2,
+	DEFINE_FUNX_INSTALLER_FUN3): New macros.
+	(DEFINE_FUN_INSTALLER_FUN3): Define using DEFINE_FUNX_INSTALLER_FUN3.
+	(DEFUNX_DLD_INTERNAL): New macro.
+	* defun-dld.h (DEFUNX_DLD): New macro.
+
+	* DLD-FUNCTIONS/__gnuplot_raw__.l: Mark __gnuplot_set__ as a
+	command, not a rawcommand.
+
 	* load-save.cc: No need to handle built-in variables.
 	* help.cc (simple_help): No need to handle built-in variables.
 
 	* variables.cc (is_builtin_variable, builtin_string_variable,
 	builtin_real_scalar_variable, builtin_any_variable):
 	Delete functions.
 	(Fexist, Fdocument, do_who, Fwho, link_to_builtin_or_function): 
 	No need to handle built-in variables.
diff --git a/src/DLD-FUNCTIONS/__gnuplot_raw__.l b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
--- a/src/DLD-FUNCTIONS/__gnuplot_raw__.l
+++ b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
@@ -21,20 +21,20 @@ 02110-1301, USA.
 
 */
 
 %option prefix="gpt"
 %option noyywrap
 
 %{
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_plot__");
-// PKG_ADD: mark_as_rawcommand ("__gnuplot_set__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_splot__");
 // PKG_ADD: mark_as_rawcommand ("__gnuplot_replot__");
 
+// PKG_ADD: mark_as_command ("__gnuplot_set__");
 // PKG_ADD: mark_as_command ("__gnuplot_show__");
 
 // PKG_ADD: atexit ("closeplot");
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -207,17 +207,17 @@ DEP_3 := $(patsubst %.l, %.cc, $(DEP_4))
 DEP_2 := $(patsubst %.y, %.cc, $(DEP_3))
 DEP_1 := $(patsubst %.c, %.d, $(DEP_2))
 MAKEDEPS := $(patsubst %.cc, %.d, $(DEP_1))
 
 # Some stupid egreps don't like empty elements in alternation patterns,
 # so we have to repeat ourselves because some stupid egreps don't like
 # empty elements in alternation patterns.
 
-DEFUN_PATTERN = "^[ \t]*DEF(CONSTFUN|CMD|UN|UN_DLD|UN_TEXT|UN_MAPPER)[ \t]*\\("
+DEFUN_PATTERN = "^[ \t]*DEF(CONSTFUN|CMD|UN|UN_DLD|UNX_DLD|UN_TEXT|UN_MAPPER)[ \t]*\\("
 
 DLD_DEF_FILES_1 := $(patsubst %.l, %.df, $(DLD_XSRC))
 DLD_DEF_FILES := $(patsubst %.cc, %.df, $(DLD_DEF_FILES_1))
 
 DEF_4 := $(addprefix $(srcdir)/, $(SOURCES))
 DEF_3 := $(notdir $(shell egrep -l $(DEFUN_PATTERN) $(DEF_4)))
 DEF_2 := $(patsubst %.y, %.df, $(DEF_3))
 DEF_1 := $(patsubst %.l, %.df, $(DEF_2))
diff --git a/src/defun-dld.h b/src/defun-dld.h
--- a/src/defun-dld.h
+++ b/src/defun-dld.h
@@ -38,25 +38,38 @@ 02110-1301, USA.
 // an extra externally visible function.
 //
 // The first DECLARE_FUN is for the benefit of the installer function
 // and the second is for the definition of the function.
 
 #if defined (MAKE_BUILTINS)
 
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
-  DEFUN_DLD_INTERNAL (name, args_name, nargout_name, 0, doc)
+  DEFUN_DLD_INTERNAL (name, args_name, nargout_name, false, doc)
+
+// This one can be used when `name' cannot be used directly (if it is
+// already defined as a macro).  In that case, name is already a
+// quoted string, and the internal name of the function must be passed
+// too (the convention is to use a prefix of "F", so "foo" becomes "Ffoo").
+
+#define DEFUNX_DLD(name, fname, fsname, args_name, nargout_name, doc) \
+  DEFUNX_DLD_INTERNAL (name, fname, args_name, nargout_name, false, doc)
 
 #else
 
 #define DEFUN_DLD(name, args_name, nargout_name, doc) \
   DECLARE_FUN (name, args_name, nargout_name); \
   DEFINE_FUN_INSTALLER_FUN (name, doc) \
   DECLARE_FUN (name, args_name, nargout_name)
 
+#define DEFUNX_DLD(name, fname, fsname, args_name, nargout_name, doc) \
+  DECLARE_FUNX (fname, args_name, nargout_name); \
+  DEFINE_FUNX_INSTALLER_FUN (name, fname, fsname, doc) \
+  DECLARE_FUNX (fname, args_name, nargout_name)
+
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
diff --git a/src/defun-int.h b/src/defun-int.h
--- a/src/defun-int.h
+++ b/src/defun-int.h
@@ -70,22 +70,31 @@ typedef bool (*octave_dld_fcn_installer)
 
 #define DEFINE_FUN_INSTALLER_FUN(name, doc) \
   DEFINE_FUN_INSTALLER_FUN2(name, doc, CXX_ABI)
 
 #define DEFINE_FUN_INSTALLER_FUN2(name, doc, cxx_abi) \
   DEFINE_FUN_INSTALLER_FUN3(name, doc, cxx_abi)
 
 #define DEFINE_FUN_INSTALLER_FUN3(name, doc, cxx_abi) \
+  DEFINE_FUNX_INSTALLER_FUN3(#name, F ## name, FS ## name, doc, cxx_abi)
+
+#define DEFINE_FUNX_INSTALLER_FUN(name, fname, fsname, doc) \
+  DEFINE_FUNX_INSTALLER_FUN2(name, fname, fsname, doc, CXX_ABI)
+
+#define DEFINE_FUNX_INSTALLER_FUN2(name, fname, fsname, doc, cxx_abi) \
+  DEFINE_FUNX_INSTALLER_FUN3(name, fname, fsname, doc, cxx_abi)
+
+#define DEFINE_FUNX_INSTALLER_FUN3(name, fname, fsname, doc, cxx_abi) \
   extern "C" \
   bool \
-  FS ## name ## _ ## cxx_abi (const octave_shlib& shl) \
+  fsname ## _ ## cxx_abi (const octave_shlib& shl) \
   { \
-    check_version (OCTAVE_API_VERSION, #name); \
-    install_dld_function (F ## name, #name, shl, doc); \
+    check_version (OCTAVE_API_VERSION, name); \
+    install_dld_function (fname, name, shl, doc); \
     return error_state ? false : true; \
   }
 
 // MAKE_BUILTINS is defined to extract function names and related
 // information and create the *.df files that are eventually used to
 // create the builtins.cc file.
 
 #if defined (MAKE_BUILTINS)
@@ -114,16 +123,22 @@ typedef bool (*octave_dld_fcn_installer)
 // mkdefs will create a .def file for every .cc file that uses
 // DEFUN_DLD.
 
 #define DEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   BEGIN_INSTALL_BUILTIN \
     XDEFUN_DLD_INTERNAL (name, args_name, nargout_name, is_text_fcn, doc) \
   END_INSTALL_BUILTIN
 
+#define DEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, \
+			    is_text_fcn, doc) \
+  BEGIN_INSTALL_BUILTIN \
+    XDEFUNX_DLD_INTERNAL (name, fname, args_name, nargout_name, is_text_fcn, doc) \
+  END_INSTALL_BUILTIN
+
 // Generate code for making another name for an existing function.
 
 #define DEFALIAS_INTERNAL(alias, name) \
   BEGIN_INSTALL_BUILTIN \
     XDEFALIAS_INTERNAL(alias, name) \
   END_INSTALL_BUILTIN
 
 #define DEFUN_MAPPER_INTERNAL(name, ch_map, d_b_map, c_b_map, d_d_map, \
diff --git a/src/mk-pkg-add b/src/mk-pkg-add
--- a/src/mk-pkg-add
+++ b/src/mk-pkg-add
@@ -3,18 +3,17 @@
 SED=${SED:-'sed'}
 
 for f in "$@"; do
   if [ -f $f ]; then
 
     ## Compute and print the autoloads.
   
     base=`basename $f | $SED 's/\.df$//'`
-    fcns=`grep '^ *XDEFUN_DLD_INTERNAL' $f |\
-	  $SED -e 's/XDEFUN_DLD_INTERNAL *( *//' -e 's/ *,.*$//' |\
+    fcns=`$SED -n -e 's/XDEFUN\(X\|\)_DLD_INTERNAL *( *\("\|\)\([^", ]*\)[", ].*$/\3/p' $f | \
 	  sort -u`
     if [ -n "$fcns" ]; then
       for n in $fcns; do
 	if [ "$n" = "$base" ]; then
 	  true
 	else
           echo "autoload (\"$n\", fullfile (fileparts (mfilename (\"fullpath\")), \"$base.oct\"));"
 	fi
diff --git a/src/mkbuiltins b/src/mkbuiltins
--- a/src/mkbuiltins
+++ b/src/mkbuiltins
@@ -25,20 +25,31 @@ cat << \EOF
 #include "oct-obj.h"
 #include "variables.h"
 
 #if defined (quad)
 #undef quad
 #endif
 
 #if defined (ENABLE_DYNAMIC_LINKING)
+
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
+
+#define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, \
+                             is_text_fcn, doc)
+
 #else
+
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc)
+
+#define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, \
+                             is_text_fcn, doc) \
+  XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, is_text_fcn, doc)
+
 #endif
 
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
   install_builtin_function (F ## name, #name, doc, is_text_fcn); \
 
 #define XDEFCONSTFUN_INTERNAL(name, args_name, nargout_name, \
 			      is_text_fcn, doc) \
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -22,16 +22,20 @@ cat << \EOF
 #endif
 
 #include <iostream>
 #include <string>
 
 #define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   print_doc_string (#name, doc);
 
+#define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, \
+                             is_text_fcn, doc) \
+  print_doc_string (name, doc);
+
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, is_text_fcn, doc) \
   print_doc_string (#name, doc);
 
 #define XDEFCONSTFUN_INTERNAL(name, args_name, nargout_name, \
 			      is_text_fcn, doc) \
   print_doc_string (#name, doc);
 
 #define XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, \
