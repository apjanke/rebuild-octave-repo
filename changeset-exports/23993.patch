# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1504294249 25200
#      Fri Sep 01 12:30:49 2017 -0700
# Node ID 49e37560e0fec320e788b2da0eba7b242fc5b0d9
# Parent  74fa9f184f920f0305487736cf8919a4b64db081
configure: rely on gnulib for detection of clock_gettime

* bootstrap.conf (gnulib_modules): Include clock-time in the list.
* configure.ac: Don't test for clock_gettime, use LIB_CLOCK_GETTIME instead.
Include LIB_CLOCK_GETTIME in standard link dependency lists.

diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -20,16 +20,17 @@
 # <http://www.gnu.org/licenses/>.
 
 # gnulib modules used by this package.
 gnulib_modules="
   areadlink
   base64
   canonicalize
   chdir
+  clock-time
   close
   closedir
   crypto/md2
   crypto/md4
   crypto/md5
   crypto/sha1
   crypto/sha256
   crypto/sha512
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2275,28 +2275,27 @@ else
   CHOLMOD_TAG="_"
   CXSPARSE_TAG="_di_"
   UMFPACK_TAG="_zi_"
 fi
 
 ## On some systems, explicitly linking with -lsuitesparseconfig is
 ## needed when using SuiteSparse libraries.  If so, the checks below
 ## for specific SuiteSparse libraries may fail without it.
-## On some systems, explicitly linking with -lrt is also needed.
+## Include LIB_CLOCK_GETTIME (from gnulib) on systems where needed.
 
 save_LIBS="$LIBS"
-AC_CHECK_LIB([rt], [clock_gettime], [SSCONFIG_RT_LIB="-lrt"], [])
-LIBS="$SSCONFIG_RT_LIB $LIBS"
+LIBS="$LIB_CLOCK_GETTIME $LIBS"
 OCTAVE_CHECK_LIB(suitesparseconfig, SUITESPARSECONFIG,
   [], [], [SuiteSparse_time], [],
   [don't link directly with suitesparseconfig library])
 LIBS="$save_LIBS"
 
-if test -n "$SUITESPARSECONFIG_LIBS" && test -n "$SSCONFIG_RT_LIB"; then
-  SUITESPARSECONFIG_LIBS="$SUITESPARSECONFIG_LIBS $SSCONFIG_RT_LIB"
+if test -n "$SUITESPARSECONFIG_LIBS" && test -n "$LIB_CLOCK_GETTIME"; then
+  SUITESPARSECONFIG_LIBS="$SUITESPARSECONFIG_LIBS $LIB_CLOCK_GETTIME"
 fi
 
 ### Reset below, after all checks for SuiteSparse libraries.
 suitesparse_save_LIBS="$LIBS"
 LIBS="$SUITESPARSECONFIG_LIBS $LIBS"
 
 ### Check for AMD library
 
@@ -2913,19 +2912,19 @@ AC_CACHE_CHECK([for @%:@pragma GCC diagn
 
 if test $octave_cv_gcc_has_pragma_GCC_diagnostic = yes; then
   AC_DEFINE(HAVE_PRAGMA_GCC_DIAGNOSTIC, 1,
    [define if GCC supports @%:@pragma GCC diagnostic ...])
 fi
 
 ### These are recommended by the gnulib bootstrap script:
 
-GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LTLIBICONV $LTLIBINTL $LTLIBTHREAD"
-
-MKOCTFILE_GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LIBICONV $LIBINTL $LIBTHREAD"
+GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CLOCK_GETTIME $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LTLIBICONV $LTLIBINTL $LTLIBTHREAD"
+
+MKOCTFILE_GNULIB_LINK_DEPS="$FREXPF_LIBM $FREXP_LIBM $GETHOSTNAME_LIB $LIBSOCKET $LIB_CLOCK_GETTIME $LIB_CRYPTO $LIB_GETLOGIN $LIB_NANOSLEEP $LIB_SELECT $LIBICONV $LIBINTL $LIBTHREAD"
 
 AC_SUBST(GNULIB_LINK_DEPS)
 
 BASE_LIBOCTAVE_LINK_DEPS="$CURL_LIBS $SPARSE_XLIBS $ARPACK_LIBS $QRUPDATE_LIBS $FFTW_XLIBS $LAPACK_LIBS $BLAS_LIBS $READLINE_LIBS $TERM_LIBS $LIBGLOB $PCRE_LIBS $DL_LIBS $PTHREAD_LIBS $FLIBS $LIBS"
 
 LIBOCTAVE_LINK_DEPS="$BASE_LIBOCTAVE_LINK_DEPS $GNULIB_LINK_DEPS"
 
 MKOCTFILE_LIBOCTAVE_LINK_DEPS="$BASE_LIBOCTAVE_LINK_DEPS $MKOCTFILE_GNULIB_LINK_DEPS"
