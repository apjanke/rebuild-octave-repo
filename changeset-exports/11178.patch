# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1288739719 14400
#      Tue Nov 02 19:15:19 2010 -0400
# Node ID c08e9d4e54c7732d6b693d3188d20f86fc10c51c
# Parent  30bcd1aa9f09fe4d27dbae7b1da212536b12d9aa
cquad.cc (Fcquad): use octave_Inf, not INFINITY

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2010-11-02  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/cquad.cc (Fcquad): Use octave_Inf, not INFINITY.
+
 2010-11-02  David Bateman  <dbateman@free.fr>
 
 	* ls-hdf5.cc (bool hdf5_get_scalar_attr (hid_t, hid_t,
         const char *, void *), herr_t hdf5_add_scalar_attr
 	(hid_t, hid_t, const char *, void *)): New functions.
 	(herr_t hdf5_add_scalar_attr (hid_t, const char *)): Remove static
 	definition to make this function visible externally.
 	* ls-hdf5.h (extern OCTINTERP_API bool hdf5_check_attr (hid_t,
diff --git a/src/DLD-FUNCTIONS/cquad.cc b/src/DLD-FUNCTIONS/cquad.cc
--- a/src/DLD-FUNCTIONS/cquad.cc
+++ b/src/DLD-FUNCTIONS/cquad.cc
@@ -2020,17 +2020,17 @@ well-behaved integrand than other method
             }
           ncdiff = sqrt (ncdiff);
           ivl->err = ncdiff * h;
           /* Check for divergence. */
           ivl->ndiv = iv->ndiv + (fabs (iv->c[0]) > 0
                                   && ivl->c[0] / iv->c[0] > 2);
           if (ivl->ndiv > ndiv_max && 2 * ivl->ndiv > ivl->rdepth)
             {
-              igral = copysign (INFINITY, igral);
+              igral = copysign (octave_Inf, igral);
               warning ("cquad: divergent integral detected.");
               break;
             }
 
           /* Compute the local integral. */
           ivl->igral = h * w * ivl->c[0];
           
           
@@ -2118,17 +2118,17 @@ well-behaved integrand than other method
             }
           ncdiff = sqrt (ncdiff);
           ivr->err = ncdiff * h;
           /* Check for divergence. */
           ivr->ndiv = iv->ndiv + (fabs (iv->c[0]) > 0
                                   && ivr->c[0] / iv->c[0] > 2);
           if (ivr->ndiv > ndiv_max && 2 * ivr->ndiv > ivr->rdepth)
             {
-              igral = copysign (INFINITY, igral);
+              igral = copysign (octave_Inf, igral);
               warning ("cquad: divergent integral detected.");
               break;
             }
 
           /* Compute the local integral. */
           ivr->igral = h * w * ivr->c[0];
           
           
