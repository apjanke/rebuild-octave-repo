# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424328765 18000
#      Thu Feb 19 01:52:45 2015 -0500
# Node ID eebe8da58f8d40054642ee55c21d71490ec1ccec
# Parent  74b5209ad68d3e90a5d11e9a048ede44a5423702
allow shift + left button to zoom out (bug #44304)

* Canvas.cc (Canvas::canvasMouseReleaseEvent): Allow shift + left
button to zoom out.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -514,46 +514,68 @@ void Canvas::canvasMousePressEvent (QMou
           // Handle text insertion here.
           break;
 
         case PanMode:
         case RotateMode:
         case ZoomMode:
           if (axesObj)
             {
-              if (event->buttons () == Qt::LeftButton
-                  && event->modifiers () == Qt::NoModifier)
-                {
-                  m_mouseAnchor = m_mouseCurrent = event->pos ();
-                  m_mouseAxes = axesObj.get_handle ();
-                  m_mouseMode = newMouseMode;
-                }
-              else if (event->modifiers () == Qt::NoModifier)
+              bool redraw_figure = true;
+
+              if (event->modifiers () == Qt::NoModifier)
                 {
                   switch (event->buttons ())
                     {
+                    case Qt::LeftButton:
+                      m_mouseAnchor = m_mouseCurrent = event->pos ();
+                      m_mouseAxes = axesObj.get_handle ();
+                      m_mouseMode = newMouseMode;
+                      break;
+
                     case Qt::RightButton:
                       Utils::properties<axes> (axesObj).unzoom ();
                       break;
+
                     case Qt::MidButton:
                         {
                           axes::properties& ap =
                             Utils::properties<axes> (axesObj);
 
                           ap.clear_zoom_stack ();
                           ap.set_xlimmode ("auto");
                           ap.set_ylimmode ("auto");
                           ap.set_zlimmode ("auto");
                         }
                       break;
+
+                    default:
+                      redraw_figure = false;
+                      break;
                     }
-                  redraw (false);
                 }
+              else if (event->modifiers () == Qt::ShiftModifier)
+                {
+                  switch (event->buttons ())
+                    {
+                    case Qt::LeftButton:
+                      Utils::properties<axes> (axesObj).unzoom ();
+                      break;
+
+                    default:
+                      redraw_figure = false;
+                      break;
+                    }
+                }
+
+              if (redraw_figure)
+                redraw (false);
             }
           break;
+
         default:
           break;
         }
     }
 }
 
 void Canvas::canvasMouseReleaseEvent (QMouseEvent* event)
 {
