# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1390376969 18000
#      Wed Jan 22 02:49:29 2014 -0500
# Branch stable
# Node ID f59459404f55fbc8fa7e6db3ebe22dd6a2650887
# Parent  b14cdae65abd9080c6320d0cf72e85fd8acdd07d
allow "methods ftp" to work outside of classdef (bug #41227)

* lex.ll (octave_base_lexer::handle_keyword_token): Don't alter
at_beginning_of_statement if something that looks like a keyword is
used in a context where it is not.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -2203,16 +2203,18 @@ octave_base_lexer::is_keyword_token (con
   int c = current_input_column;
 
   int len = s.length ();
 
   const octave_kw *kw = octave_kw_hash::in_word_set (s.c_str (), len);
 
   if (kw)
     {
+      bool previous_at_bos = at_beginning_of_statement;
+
       // May be reset to true for some token types.
       at_beginning_of_statement = false;
 
       token *tok_val = 0;
 
       switch (kw->kw_id)
         {
         case break_kw:
@@ -2250,17 +2252,20 @@ octave_base_lexer::is_keyword_token (con
           break;
 
         case end_kw:
           if (inside_any_object_index ()
               || (! reading_classdef_file
                   && (defining_func
                       && ! (looking_at_return_list
                             || parsed_function_name.top ()))))
-            return 0;
+            {
+              at_beginning_of_statement = previous_at_bos;
+              return 0;
+            }
 
           tok_val = new token (end_kw, token::simple_end, l, c);
           at_beginning_of_statement = true;
           break;
 
         case end_try_catch_kw:
           tok_val = new token (end_try_catch_kw, token::try_catch_end, l, c);
           at_beginning_of_statement = true;
@@ -2352,27 +2357,33 @@ octave_base_lexer::is_keyword_token (con
           decrement_promptflag ();
           break;
 
         case get_kw:
         case set_kw:
           // 'get' and 'set' are keywords in classdef method
           // declarations.
           if (! maybe_classdef_get_set_method)
-            return 0;
+            {
+              at_beginning_of_statement = previous_at_bos;
+              return 0;
+            }
           break;
 
         case enumeration_kw:
         case events_kw:
         case methods_kw:
         case properties_kw:
           // 'properties', 'methods' and 'events' are keywords for
           // classdef blocks.
           if (! parsing_classdef)
-            return 0;
+            {
+              at_beginning_of_statement = previous_at_bos;
+              return 0;
+            }
           // fall through ...
 
         case classdef_kw:
           // 'classdef' is always a keyword.
           decrement_promptflag ();
 
           if (! force_script && token_count == 0 && input_from_file ())
             {
