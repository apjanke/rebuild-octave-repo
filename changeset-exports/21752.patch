# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1463755653 14400
#      Fri May 20 10:47:33 2016 -0400
# Node ID 949cb46e6bdbe5161fd89c221024a0e4da03e1c8
# Parent  b571fc85953f2f5a6013641bd1fca68d2d27bf48
use consistent style for deprecated function/class messages

diff --git a/liboctave/system/dir-ops.h b/liboctave/system/dir-ops.h
--- a/liboctave/system/dir-ops.h
+++ b/liboctave/system/dir-ops.h
@@ -92,14 +92,14 @@ namespace octave
       // If a failure occurs, this contains the system error text.
       std::string errmsg;
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::dir_entry instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::dir_entry' instead")
 typedef octave::sys::dir_entry dir_entry;
 
 #endif
 
 #endif
diff --git a/liboctave/system/file-ops.h b/liboctave/system/file-ops.h
--- a/liboctave/system/file-ops.h
+++ b/liboctave/system/file-ops.h
@@ -195,177 +195,177 @@ namespace octave
 
     extern OCTAVE_API std::string
     canonicalize_file_name (const std::string&, std::string&);
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::file_ops instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::file_ops' instead")
   typedef octave::sys::file_ops file_ops;
 
-OCTAVE_DEPRECATED ("use octave::sys::mkdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::mkdir' instead")
 inline int
 octave_mkdir (const std::string& nm, mode_t md)
 {
   return octave::sys::mkdir (nm, md);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::mkdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::mkdir' instead")
 inline int
 octave_mkdir (const std::string& nm, mode_t md, std::string& msg)
 {
   return octave::sys::mkdir (nm, md, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::mkfifo instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::mkfifo' instead")
 inline int
 octave_mkfifo (const std::string& nm, mode_t md)
 {
   return octave::sys::mkfifo (nm, md);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::mkfifo instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::mkfifo' instead")
 inline int
 octave_mkfifo (const std::string& nm, mode_t md, std::string& msg)
 {
   return octave::sys::mkfifo (nm, md, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::link instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::link' instead")
 inline int
 octave_link (const std::string& old_name, const std::string& new_name)
 {
   return octave::sys::link (old_name, new_name);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::link instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::link' instead")
 inline int
 octave_link (const std::string& old_name, const std::string& new_name,
              std::string& msg)
 {
   return octave::sys::link (old_name, new_name, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::symlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::symlink' instead")
 inline int
 octave_symlink (const std::string& old_name, const std::string& new_name)
 {
   return octave::sys::symlink (old_name, new_name);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::symlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::symlink' instead")
 inline int
 octave_symlink (const std::string& old_name, const std::string& new_name,
                 std::string& msg)
 {
   return octave::sys::symlink (old_name, new_name, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::readlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::readlink' instead")
 inline int
 octave_readlink (const std::string& path, std::string& result)
 {
   return octave::sys::readlink (path, result);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::readlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::readlink' instead")
 inline int
 octave_readlink (const std::string& path, std::string& result, std::string& msg)
 {
   return octave::sys::readlink (path, result, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::rename instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::rename' instead")
 inline int
 octave_rename (const std::string& from, const std::string& to)
 {
   return octave::sys::rename (from, to);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::rename instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::rename' instead")
 inline int
 octave_rename (const std::string& from, const std::string& to, std::string& msg)
 {
   return octave::sys::rename (from, to, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::rmdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::rmdir' instead")
 inline int
 octave_rmdir (const std::string& nm)
 {
   return octave::sys::rmdir (nm);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::rmdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::rmdir' instead")
 inline int
 octave_rmdir (const std::string& nm, std::string& msg)
 {
   return octave::sys::rmdir (nm, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::recursive_rmdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::recursive_rmdir' instead")
 inline int
 octave_recursive_rmdir (const std::string& nm)
 {
   return octave::sys::recursive_rmdir (nm);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::recursive_rmdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::recursive_rmdir' instead")
 inline int
 octave_recursive_rmdir (const std::string& nm, std::string& msg)
 {
   return octave::sys::recursive_rmdir (nm, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::umask instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::umask' instead")
 inline int
 octave_umask (mode_t md)
 {
   return octave::sys::umask (md);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::unlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::unlink' instead")
 inline int
 octave_unlink (const std::string& nm)
 {
   return octave::sys::unlink (nm);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::unlink instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::unlink' instead")
 inline int
 octave_unlink (const std::string& nm, std::string& msg)
 {
   return octave::sys::unlink (nm, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::tempnam instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::tempnam' instead")
 inline std::string
 octave_tempnam (const std::string& dir, const std::string& pfx)
 {
   return octave::sys::tempnam (dir, pfx);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::tempnam instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::tempnam' instead")
 inline std::string
 octave_tempnam (const std::string& dir, const std::string& pfx,
                 std::string& msg)
 {
   return octave::sys::tempnam (dir, pfx, msg);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::canonicalize_file_name instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::canonicalize_file_name' instead")
 inline std::string
 octave_canonicalize_file_name (const std::string& nm)
 {
   return octave::sys::canonicalize_file_name (nm);
 }
 
-OCTAVE_DEPRECATED ("use octave::sys::canonicalize_file_name instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::canonicalize_file_name' instead")
 inline std::string
 octave_canonicalize_file_name (const std::string& nm, std::string& msg)
 {
   return octave::sys::canonicalize_file_name (nm, msg);
 }
 
 #endif
 
diff --git a/liboctave/system/file-stat.h b/liboctave/system/file-stat.h
--- a/liboctave/system/file-stat.h
+++ b/liboctave/system/file-stat.h
@@ -316,20 +316,20 @@ namespace octave
 
       void update_internal (bool force = false);
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::base_file_stat instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::base_file_stat' instead")
 typedef octave::sys::base_file_stat base_file_stat;
 
-OCTAVE_DEPRECATED ("use octave::sys::file_stat instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::file_stat' instead")
 typedef octave::sys::file_stat file_stat;
 
-OCTAVE_DEPRECATED ("use octave::sys::file_fstat instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::file_fstat' instead")
 typedef octave::sys::file_fstat file_fstat;
 
 #endif
 
 #endif
diff --git a/liboctave/system/lo-sysdep.h b/liboctave/system/lo-sysdep.h
--- a/liboctave/system/lo-sysdep.h
+++ b/liboctave/system/lo-sysdep.h
@@ -43,22 +43,22 @@ namespace octave
     extern pid_t popen2 (const std::string&, const string_vector&,
                          bool, int *, std::string&);
 #endif
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::getcwd instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::getcwd' instead")
 const auto octave_getcwd = octave::sys::getcwd;
 
-OCTAVE_DEPRECATED ("use octave::sys::chdir instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::chdir' instead")
 const auto octave_chdir = octave::sys::chdir;
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
-OCTAVE_DEPRECATED ("use octave::sys:: instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::popen2' instead")
 const auto octave_popen2 = octave::sys::popen2;
 #endif
 
 #endif
 
 #endif
diff --git a/liboctave/system/mach-info.h b/liboctave/system/mach-info.h
--- a/liboctave/system/mach-info.h
+++ b/liboctave/system/mach-info.h
@@ -75,14 +75,14 @@ namespace octave
     mach_info (const mach_info&);
 
     mach_info& operator = (const mach_info&);
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::mach_info instead")
+OCTAVE_DEPRECATED ("use 'octave::mach_info' instead")
 typedef octave::mach_info oct_mach_info;
 
 #endif
 
 #endif
diff --git a/liboctave/system/oct-env.h b/liboctave/system/oct-env.h
--- a/liboctave/system/oct-env.h
+++ b/liboctave/system/oct-env.h
@@ -148,14 +148,14 @@ namespace octave
 
       mutable std::string host_name;
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::env instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::env' instead")
 typedef octave::sys::env octave_env;
 
 #endif
 
 #endif
diff --git a/liboctave/system/oct-group.h b/liboctave/system/oct-group.h
--- a/liboctave/system/oct-group.h
+++ b/liboctave/system/oct-group.h
@@ -112,14 +112,14 @@ namespace octave
       // to a struct group.
       group (void *p, std::string& msg);
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::group instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::group' instead")
 typedef octave::sys::group octave_group;
 
 #endif
 
 #endif
diff --git a/liboctave/system/oct-passwd.h b/liboctave/system/oct-passwd.h
--- a/liboctave/system/oct-passwd.h
+++ b/liboctave/system/oct-passwd.h
@@ -132,14 +132,14 @@ namespace octave
       // to a struct passwd.
       password (void *p, std::string& msg);
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::password instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::password' instead")
 typedef octave::sys::password octave_passwd;
 
 #endif
 
 #endif
diff --git a/liboctave/system/oct-time.h b/liboctave/system/oct-time.h
--- a/liboctave/system/oct-time.h
+++ b/liboctave/system/oct-time.h
@@ -363,26 +363,26 @@ namespace octave
 
       void init (const std::string& str, const std::string& fmt);
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::time instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::time' instead")
 typedef octave::sys::time octave_time;
 
-OCTAVE_DEPRECATED ("use octave::sys::base_tm instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::base_tm' instead")
 typedef octave::sys::base_tm octave_base_tm;
 
-OCTAVE_DEPRECATED ("use octave::sys::localtime instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::localtime' instead")
 typedef octave::sys::localtime octave_localtime;
 
-OCTAVE_DEPRECATED ("use octave::sys::gmtime instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::gmtime' instead")
 typedef octave::sys::gmtime octave_gmtime;
 
-OCTAVE_DEPRECATED ("use octave::sys::strptime instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::strptime' instead")
 typedef octave::sys::strptime octave_strptime;
 
 #endif
 
 #endif
diff --git a/liboctave/system/oct-uname.h b/liboctave/system/oct-uname.h
--- a/liboctave/system/oct-uname.h
+++ b/liboctave/system/oct-uname.h
@@ -91,14 +91,14 @@ namespace octave
 
       void init (void);
     };
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::uname instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::uname' instead")
 typedef octave::sys::uname octave_uname;
 
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-edit.h b/liboctave/util/cmd-edit.h
--- a/liboctave/util/cmd-edit.h
+++ b/liboctave/util/cmd-edit.h
@@ -365,14 +365,14 @@ namespace octave
     bool interrupted;
 
     std::string initial_input;
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::command_editor instead")
+OCTAVE_DEPRECATED ("use 'octave::command_editor' instead")
 typedef octave::command_editor command_editor;
 
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-hist.h b/liboctave/util/cmd-hist.h
--- a/liboctave/util/cmd-hist.h
+++ b/liboctave/util/cmd-hist.h
@@ -230,14 +230,14 @@ namespace octave
 
     // The number of lines of history to save.
     int xsize;
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::command_history instead")
+OCTAVE_DEPRECATED ("use 'octave::command_history' instead")
 typedef octave::command_history command_history;
 
 #endif
 
 #endif
diff --git a/liboctave/util/oct-glob.h b/liboctave/util/oct-glob.h
--- a/liboctave/util/oct-glob.h
+++ b/liboctave/util/oct-glob.h
@@ -37,17 +37,17 @@ namespace octave
 
     extern string_vector
     glob (const string_vector&);
   }
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::sys::fnmatch instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::fnmatch' instead")
 const auto octave_fnmatch = octave::sys::fnmatch;
 
-OCTAVE_DEPRECATED ("use octave::sys::glob instead")
+OCTAVE_DEPRECATED ("use 'octave::sys::glob' instead")
 const auto octave_glob = octave::sys::glob;
 
 #endif
 
 #endif
diff --git a/liboctave/util/oct-shlib.h b/liboctave/util/oct-shlib.h
--- a/liboctave/util/oct-shlib.h
+++ b/liboctave/util/oct-shlib.h
@@ -191,14 +191,14 @@ namespace octave
   private:
 
     dynlib_rep *rep;
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::dynamic_library instead")
+OCTAVE_DEPRECATED ("use 'octave::dynamic_library' instead")
 typedef octave::dynamic_library octave_shlib;
 
 #endif
 
 #endif
diff --git a/liboctave/util/pathsearch.h b/liboctave/util/pathsearch.h
--- a/liboctave/util/pathsearch.h
+++ b/liboctave/util/pathsearch.h
@@ -170,14 +170,14 @@ namespace octave
 
       std::string xpath_sep_str;
     };
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::directory_path instead")
+OCTAVE_DEPRECATED ("use 'octave::directory_path' instead")
 typedef octave::directory_path dir_path;
 
 #endif
 
 #endif
diff --git a/liboctave/util/unwind-prot.h b/liboctave/util/unwind-prot.h
--- a/liboctave/util/unwind-prot.h
+++ b/liboctave/util/unwind-prot.h
@@ -148,17 +148,17 @@ namespace octave
     unwind_protect_safe (const unwind_protect_safe&);
 
     unwind_protect_safe& operator = (const unwind_protect_safe&);
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::unwind_protect instead")
+OCTAVE_DEPRECATED ("use 'octave::unwind_protect' instead")
 typedef octave::unwind_protect unwind_protect;
 
-OCTAVE_DEPRECATED ("use octave::unwind_protect_safe instead")
+OCTAVE_DEPRECATED ("use 'octave::unwind_protect_safe' instead")
 typedef octave::unwind_protect_safe unwind_protect_safe;
 
 #endif
 
 #endif
diff --git a/liboctave/util/url-transfer.h b/liboctave/util/url-transfer.h
--- a/liboctave/util/url-transfer.h
+++ b/liboctave/util/url-transfer.h
@@ -286,17 +286,17 @@ namespace octave
   private:
 
     base_url_transfer *rep;
   };
 }
 
 #if defined (OCTAVE_USE_DEPRECATED_FUNCTIONS)
 
-OCTAVE_DEPRECATED ("use octave::base_url_transfer instead")
+OCTAVE_DEPRECATED ("use 'octave::base_url_transfer' instead")
 typedef octave::base_url_transfer base_url_transfer;
 
-OCTAVE_DEPRECATED ("use octave::url_transfer instead")
+OCTAVE_DEPRECATED ("use 'octave::url_transfer' instead")
 typedef octave::url_transfer url_transfer;
 
 #endif
 
 #endif
