# HG changeset patch
# User jwe
# Date 856564490 0
#      Fri Feb 21 22:34:50 1997 +0000
# Node ID eb99ed3112d9d9fa3afd07d41f42f32647d84720
# Parent  2ff2b536cc9d286755b3f2e80fb90872da57d4d1
[project @ 1997-02-21 22:34:50 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Fri Feb 21 16:07:56 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* lo-ieee.cc (octave_ieee_init): Reorder #ifdef stuff to put
+	system-specific tests first.
+
 Thu Feb 20 02:58:05 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 2.0.4 released.
 
 Wed Feb 19 09:42:30 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-ieee.cc: D'oh, it's `extern "C"', not `#extern "C"'.
 
diff --git a/liboctave/lo-ieee.cc b/liboctave/lo-ieee.cc
--- a/liboctave/lo-ieee.cc
+++ b/liboctave/lo-ieee.cc
@@ -60,49 +60,49 @@ double octave_NaN;
 void
 octave_ieee_init (void)
 {
 #if defined (HAVE_ISINF) || defined (HAVE_FINITE)
 
 // Some version of gcc on some old version of Linux used to crash when
 // trying to make Inf and NaN.
 
-#if defined (HAVE_INFINITY)
+#if defined (SCO)
+  double tmp = 1.0;
+  octave_Inf = 1.0 / (tmp - tmp);
+#elif defined (__alpha__)
+  extern unsigned int DINFINITY[2];
+  octave_Inf =  (*((double *) (DINFINITY)));
+#elif defined (HAVE_INFINITY)
   octave_Inf = infinity ();
 #elif defined (linux)
   octave_Inf = HUGE_VAL;
-#elif defined (__alpha__)
-  extern unsigned int DINFINITY[2];
-  octave_Inf =  (*((double *) (DINFINITY)));
-#elif defined (SCO)
-  double tmp = 1.0;
-  octave_Inf = 1.0 / (tmp - tmp);
 #else
   double tmp = 1e+10;
   octave_Inf = tmp;
   for (;;)
     {
       octave_Inf *= 1e+10;
       if (octave_Inf == tmp)
 	break;
       tmp = octave_Inf;
     }
 #endif
 
 #endif
 
 #if defined (HAVE_ISNAN)
 
-#if defined (HAVE_QUIET_NAN)
-  octave_NaN = quiet_nan (0L);
-#elif defined (linux)
+#if defined (linux)
   octave_NaN = NAN;
 #elif defined (__alpha__)
   extern unsigned int DQNAN[2];
   octave_NaN = (*((double *) (DQNAN)));
+#elif defined (HAVE_QUIET_NAN)
+  octave_NaN = quiet_nan (0L);
 #else
   octave_NaN = octave_Inf / octave_Inf;
 #endif
 
 #endif
 }
 
 #if defined (SCO)
