# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1486599410 18000
#      Wed Feb 08 19:16:50 2017 -0500
# Node ID 6f2164303aacb92bd044eb821c8baf6de417c826
# Parent  a2d6b84ce5c5b7ee9c37603033ecf07f69feb382
# Parent  d7ea2662a7a8c55f592de1a83fe1b12bbbdb4273
maint: Merge stable to default.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1440,16 +1440,18 @@ main_window::construct (void)
                history_window, SLOT (save_settings ()));
       connect (qApp, SIGNAL (aboutToQuit ()),
                file_browser_window, SLOT (save_settings ()));
       connect (qApp, SIGNAL (aboutToQuit ()),
                doc_browser_window, SLOT (save_settings ()));
       connect (qApp, SIGNAL (aboutToQuit ()),
                workspace_window, SLOT (save_settings ()));
       connect (qApp, SIGNAL (aboutToQuit ()),
+               editor_window, SLOT (save_settings ()));
+      connect (qApp, SIGNAL (aboutToQuit ()),
                this, SLOT (prepare_to_exit ()));
       connect (qApp, SIGNAL (aboutToQuit ()),
                shortcut_manager::instance, SLOT (cleanup_instance ()));
       // QSettings are saved upon deletion (i.e., cleanup_instance)
       connect (qApp, SIGNAL (aboutToQuit ()),
                resource_manager::instance, SLOT (cleanup_instance ()));
 
       connect (qApp, SIGNAL (focusChanged (QWidget*, QWidget*)),
diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -368,18 +368,18 @@ function [x, obj, INFO, lambda] = qp (x0
           gamma = eye (n_in);
           if (n_eq > 0)
             Atmp = [Ain*Z, gamma];
             btmp = -res;
           else
             Atmp = [Ain, gamma];
             btmp = bin;
           endif
-          ctmp = [zeros(n, 1); ones(n_in, 1)];
-          lb = [-Inf(n,1); zeros(n_in,1)];
+          ctmp = [zeros(n-n_eq, 1); ones(n_in, 1)];
+          lb = [-Inf(n-n_eq,1); zeros(n_in,1)];
           ub = [];
           ctype = repmat ("L", n_in, 1);
           [P, dummy, status] = glpk (ctmp, Atmp, btmp, lb, ub, ctype);
           if ((status == 0)
               && all (abs (P(n-n_eq+1:end)) < rtol * (1 + norm (btmp))))
             ## We found a feasible starting point
             if (n_eq > 0)
               x0 = xbar + Z*P(1:n-n_eq);
diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -117,20 +117,20 @@ function [pass, fail, xfail, skip] = __r
     end_try_catch
   unwind_protect_cleanup
     warning ("off", "all");
     warning (orig_wstate);
     page_screen_output (pso);
   end_unwind_protect
 
   if (nargout > 0)
-    pass = np;
+    pass = dp;
     fail = nfail;
     xfail = dxf;
-    skip = xsk;
+    skip = dsk;
   endif
 
 endfunction
 
 function print_test_file_name (nm)
   filler = repmat (".", 1, 60-length (nm));
   printf ("  %s %s", nm, filler);
 endfunction
