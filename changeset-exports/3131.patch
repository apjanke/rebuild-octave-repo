# HG changeset patch
# User jwe
# Date 886049196 0
#      Thu Jan 29 04:46:36 1998 +0000
# Node ID 9c5160c83bd2db3b13f6e2691b382e540a135b97
# Parent  02766207b74ca2a9423a3cf1704e5c51a56b9696
[project @ 1998-01-29 04:46:33 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,24 @@
+Mon Jan 26 13:26:09 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makeconf.in (do-subst-config-vals): Substitute XTRA_CFLAGS and
+	XTRA_CXXFLAGS.
+	* mkoctfile.in: Substitute XTRA_CFLAGS and XTRA_CXXFLAGS, not
+	GCC_IEEE_FP_FLAG, HOST_CXXFLAGS, and NO_IMPLICIT_TEMPLATES.
+	(ALL_CFLAGS): Use XTRA_CFLAGS, not GCC_IEEE_FP_FLAG here.
+	(ALL_CXXFLAGS): Use XTRA_CXXFLAGS, not GCC_IEEE_FP_FLAG,
+	HOST_CXXFLAGS, and NO_IMPLICIT_TEMPLATES here.
+
 Sun Jan 25 01:59:47 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* configure.in: (GXX_PICKY_FLAGS): Add -Weffc++.
+	Use OCTAVE_CC_FLAG and OCTAVE_CXX_FLAG to add -Wall and for adding
+	picky flags in AC_ARG_ENABLE(picky-flags ...) macro.
+
 	* aclocal.m4 (OCTAVE_F2C_F77_COMPAT): Require OCTAVE_PROG_G77.
 	Handle cross compiling with g77.
 	(OCTAVE_REINSTALL_SIGHANDLERS): Provide defaults for cross compiling.
 
 	* aclocal.m4 (OCTAVE_PROG_AR, OCTAVE_PROG_G77, OCTAVE_PROG_PAGER,
 	OCTAVE_PROG_GNUPLOT, OCTAVE_PROG_RUNTEST, OCTAVE_F77_MAIN_FLAG):
 	New macros.
 	* configure.in: Use them in place of in-line code.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -330,16 +330,18 @@ sed < $< \
   -e "s;%LIBPLPLOT%;\"${LIBPLPLOT}\";" \
   -e "s;%LIBS%;\"${LIBS}\";" \
   -e "s;%RLD_FLAG%;\"${RLD_FLAG}\";" \
   -e "s;%SH_LD%;\"${SH_LD}\";" \
   -e "s;%SH_LDFLAGS%;\"${SH_LDFLAGS}\";" \
   -e "s;%TARGET_HOST_TYPE%;\"${target_host_type}\";" \
   -e "s;%TERMLIBS%;\"${TERMLIBS}\";" \
   -e "s;%VERSION%;\"${version}\";" \
+  -e "s;%XTRA_CFLAGS%;\"${XTRA_CFLAGS}\";" \
+  -e "s;%XTRA_CXXFLAGS%;\"${XTRA_CXXFLAGS}\";" \
   -e "s;%config_opts%;\"${config_opts}\";" | \
   sed  -e "s;%DEFS%;\"${UGLY_DEFS}\";" > $@.tmp
 $(top_srcdir)/move-if-change $@.tmp $@
 endef
 
 define do-subst-default-vals
 echo "making $@ from $<"
 sed < $< > $@.tmp \
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -165,16 +165,20 @@ Summary of changes for version 2.1.x:
     now.
 
   * The new built-in variable `fixed_point_format' controls whether
     Octave uses a scaled fixed-point format for displaying matrices.
     The default value is 0 unless you use --traditional.
 
   * The function sumsq now computes sum (x .* conj (x)) for complex values.
 
+  * The new built-in variable max_recursion_depth allows you to
+    prevent Octave from attempting infinite recursion.  The default
+    value is 256.
+
   * Octave now uses readline version 2.1 and kpathsea 3.0.
 
   * New configure option, --enable-readline.
 
   * New configure option, --enable-static.
 
 Summary of changes for version 2.0.7:
 ------------------------------------
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -677,17 +677,19 @@ AC_DEFUN(OCTAVE_CC_FLAG, [
     AC_TRY_LINK([], [],
       eval "octave_cv_cc_flag_$ac_safe=yes",
       eval "octave_cv_cc_flag_$ac_safe=no")
     CFLAGS="$XCFLAGS"
     AC_LANG_RESTORE
   ])
   if eval "test \"`echo '$octave_cv_cc_flag_'$ac_safe`\" = yes"; then
     AC_MSG_RESULT(yes)
-    ifelse([$2], , [CFLAGS="$CFLAGS $1"], [$2])
+    ifelse([$2], , [
+      CFLAGS="$CFLAGS $1"
+      AC_MSG_RESULT([adding $1 to CFLAGS])], [$2])
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
 dnl
 dnl Check to see if C++ compiler handles FLAG command line option and
 dnl add it to CXXFLAGS if it does.
@@ -704,17 +706,19 @@ AC_DEFUN(OCTAVE_CXX_FLAG, [
     AC_TRY_LINK([], [],
       eval "octave_cv_cxx_flag_$ac_safe=yes",
       eval "octave_cv_cxx_flag_$ac_safe=no")
     CXXFLAGS="$XCXXFLAGS"
     AC_LANG_RESTORE
   ])
   if eval "test \"`echo '$octave_cv_cxx_flag_'$ac_safe`\" = yes"; then
     AC_MSG_RESULT(yes)
-    ifelse([$2], , [CXXFLAGS="$CXXFLAGS $1"], [$2])
+    ifelse([$2], , [
+      CXXFLAGS="$CXXFLAGS $1"
+      AC_MSG_RESULT([adding $1 to CXXFLAGS])], [$2])
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
 dnl
 dnl What pager should we use?
 dnl
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.294 $)
+AC_REVISION($Revision: 1.295 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -176,45 +176,25 @@ fi
 
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_PROG_CXX
 AC_PROG_CXXCPP
 
 ### Do special things for g++.
 
-ADD_CXX_WALL=false
-
 gxx_version=`$CXX -v 2>&1 | grep "^.*g.. version" | \
   sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//'`
 
 case "$gxx_version" in
 changequote(,)dnl
   1.* | 2.[0123456].* | 2.7.[01]*)
 changequote([,])dnl
     AC_MSG_ERROR([g++ version $gxx_version will not work to compile Octave])
   ;;
-changequote(,)dnl
-  2.7.[23456789]* | 2.7.[123456789][0123456789]*)
-changequote([,])dnl
-    if test -z "$EXTERN_CXXFLAGS"; then
-      ADD_CXX_WALL=true
-    fi
-  ;;
-changequote(,)dnl
-  2.[89].* | 2.[123456789][0123456789].*)
-changequote([,])dnl
-    if test -z "$EXTERN_CXXFLAGS"; then
-      ADD_CXX_WALL=true
-    fi
-  ;;
-  *)
-    warn_gxx_only="Octave has only been tested with g++, and I can't find it"
-    AC_MSG_WARN($warn_gxx_only)
-  ;;
 esac
 
 CXX_VERSION=
 if test -n "$gxx_version"; then
   CXX_VERSION="$gxx_version"
 fi
 AC_SUBST(CXX_VERSION)
 
@@ -225,37 +205,29 @@ OCTAVE_CXX_NEW_FRIEND_TEMPLATE_DECL
 EXTERN_CFLAGS="$CFLAGS"
 
 AC_PROG_CC
 AC_PROG_CPP
 AC_PROG_GCC_TRADITIONAL
 
 ### Do special things for gcc.
 
-ADD_CC_WALL=false
 gcc_version=`$CC -v 2>&1 | grep "^.*gcc version" | \
   sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//'`
 case "$gcc_version" in
   2.*)
-    if test -z "$EXTERN_CFLAGS"; then
-      ADD_CC_WALL=true
-    fi
     if test -z "$LDFLAGS"; then
       LDFLAGS="-g"
       AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
     fi
   ;;
   1.*)
     warn_gcc_version="gcc version $gcc_version is likely to cause problems"
     AC_MSG_WARN($warn_gcc_version)
   ;;
-  *)
-    warn_gcc_only="Octave has only been tested with gcc, and I can't find it"
-    AC_MSG_WARN($warn_gcc_only)
-  ;;
 esac
 
 CC_VERSION=
 if test -n "$gcc_version"; then
   CC_VERSION="$gcc_version"
 fi
 AC_SUBST(CC_VERSION)
 
@@ -266,45 +238,53 @@ AC_SUBST(CC_VERSION)
 
 ieee_fp_flag=
 case "$canonical_host_type" in
 changequote(,)dnl
   i[3456789]86-*-*)
 changequote([,])dnl
     OCTAVE_CC_FLAG(-mieee-fp, [
       ieee_fp_flag=-mieee-fp
-      XTRA_CFLAGS="$XTRA_CFLAGS -mieee-fp"])
+      XTRA_CFLAGS="$XTRA_CFLAGS -mieee-fp"
+      AC_MSG_RESULT([adding -mieee-fp to XTRA_CFLAGS])])
 
     OCTAVE_CXX_FLAG(-mieee-fp, [
       ieee_fp_flag=-mieee-fp
-      XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee-fp"])
+      XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee-fp"
+      AC_MSG_RESULT([adding -mieee-fp to XTRA_CXXFLAGS])])
   ;;
   alpha*-*-*)
     OCTAVE_CC_FLAG(-mieee, [
       ieee_fp_flag=-mieee
-      XTRA_CFLAGS="$XTRA_CFLAGS -mieee"])
+      XTRA_CFLAGS="$XTRA_CFLAGS -mieee"
+      AC_MSG_RESULT([adding -mieee to XTRA_CFLAGS])])
+
     OCTAVE_CXX_FLAG(-mieee, [
       ieee_fp_flag=-mieee
-      XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee"])
+      XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee"
+      AC_MSG_RESULT([adding -mieee to XTRA_CXXFLAGS])])
   ;;
 esac
 
 ### Octave doesn't use run-time type identification or exceptions yet,
 ### so disable them for somewhat faster and smaller code.
 
-OCTAVE_CXX_FLAG(-fno-rtti,
-  [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-rtti"])
+OCTAVE_CXX_FLAG(-fno-rtti, [
+  XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-rtti"
+  AC_MSG_RESULT([adding -fno-rtti to XTRA_CXXFLAGS])])
 
-OCTAVE_CXX_FLAG(-fno-exceptions,
-  [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-exceptions"])
+OCTAVE_CXX_FLAG(-fno-exceptions, [
+  XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-exceptions"
+  AC_MSG_RESULT([adding -fno-exceptions to XTRA_CXXFLAGS])])
 
 ### We do our own template instantiation.
 
-OCTAVE_CXX_FLAG(-fno-implicit-templates,
-  [XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-implicit-templates"])
+OCTAVE_CXX_FLAG(-fno-implicit-templates, [
+  XTRA_CXXFLAGS="$XTRA_CXXFLAGS -fno-implicit-templates"
+  AC_MSG_RESULT([adding -fno-implicit-templates to XTRA_CXXFLAGS])])
 
 AC_SUBST(XTRA_CFLAGS)
 AC_SUBST(XTRA_CXXFLAGS)
 
 ### Use -static if compiling on Alpha OSF/1 1.3 systems.
 
 case "$canonical_host_type" in
   alpha*-dec-osf1.3)
@@ -1061,61 +1041,46 @@ AC_SUBST(EXE)
 AC_OUTPUT_MAKE_DEFS
 UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\",g'`
 AC_MSG_RESULT([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)
 
 ### Maybe add -Wall to compiler flags now that we're done feature
 ### testing. 
 
-if $ADD_CXX_WALL; then
-  CXXFLAGS="$CXXFLAGS -Wall"
-  AC_MSG_RESULT([adding -Wall to CXXFLAGS])
+if test -z "$EXTERN_CFLAGS"; then
+  OCTAVE_CC_FLAG(-Wall)
 fi
-if $ADD_CC_WALL; then
-  CFLAGS="$CFLAGS -Wall"
-  AC_MSG_RESULT([adding -Wall to CFLAGS])
+
+if test -z "$EXTERN_CXXFLAGS"; then
+  OCTAVE_CXX_FLAG(-Wall)
 fi
 
 ### Someday, maybe include -ansi and even -pedantic in this list...
 
 GCC_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wid-clash-31 \
  -Winline -Wmissing-prototypes -Wnested-externs -Wpointer-arith \
  -Wstrict-prototypes -Wwrite-strings"
 
-GXX_PICKY_FLAGS="$GCC_PICKY_FLAGS -fno-nonnull-objects"
+GXX_PICKY_FLAGS="$GCC_PICKY_FLAGS -Weffc++ -Wenum-clash -fno-nonnull-objects"
 
 AC_ARG_ENABLE(picky-flags,
   [  --enable-picky-flags    add picky options to CFLAGS, CXXFLAGS, FFLAGS],
-  [if test "$enableval" = no; then true;
+  [if test "$enableval" = no; then
+     true
    elif test "$enableval" = yes; then
-     if $ADD_CXX_WALL; then
-       CXXFLAGS="$GXX_PICKY_FLAGS $CXXFLAGS"
-       AC_MSG_RESULT([adding picky options to CXXFLAGS])
-     else
-       AC_MSG_WARN([CXX doesn't look like g++ -- not adding picky options])
+     if test -z "$EXTERN_CFLAGS"; then
+       for flag in $GCC_PICKY_FLAGS; do
+	 OCTAVE_CC_FLAG($flag)
+       done
      fi
-     if $ADD_CC_WALL; then
-       CFLAGS="$GCC_PICKY_FLAGS $CFLAGS"
-       AC_MSG_RESULT([adding picky options to CFLAGS])
-     else
-       AC_MSG_WARN([CC doesn't look like gcc -- not adding picky options])
-     fi
-   else
-     if $ADD_CXX_WALL; then
-       CXXFLAGS="$enableval $CXXFLAGS"
-       AC_MSG_RESULT([adding picky options to CXXFLAGS])
-     else
-       AC_MSG_WARN([CXX doesn't look like g++ -- not adding picky options])
-     fi
-     if $ADD_CC_WALL; then
-       CFLAGS="$enableval $CFLAGS"
-       AC_MSG_RESULT([adding picky options to CFLAGS])
-     else
-       AC_MSG_WARN([CC doesn't look like gcc -- not adding picky options])
+     if test -z "$EXTERN_CXXFLAGS"; then
+       for flag in $GXX_PICKY_FLAGS; do
+	 OCTAVE_CXX_FLAG($flag)
+       done
      fi
    fi], [])
 
 ### Run configure in subdirectories.
 
 export CC
 export CXX
 export F77
diff --git a/doc/interpreter/arith.texi b/doc/interpreter/arith.texi
--- a/doc/interpreter/arith.texi
+++ b/doc/interpreter/arith.texi
@@ -407,16 +407,48 @@ cumprod ([1, 2; 3, 4])
 For a vector argument, return the sum of the squares of all the
 elements.  For a matrix argument, return the sum of the squares of the
 elements in each column, as a row vector.
 @end deftypefn
 
 @node Special Functions, Mathematical Constants, Sums and Products, Arithmetic
 @section Special Functions
 
+@deftypefn {Mapping Function} {} besseli (@var{alpha}, @var{x})
+@deftypefnx {Mapping Function} {} besselj (@var{alpha}, @var{x})
+@deftypefnx {Mapping Function} {} besselk (@var{alpha}, @var{x})
+@deftypefnx {Mapping Function} {} bessely (@var{alpha}, @var{x})
+Compute Bessel functions of the following types:
+
+@table @code
+@item besselj
+Bessel functions of the first kind.
+
+@item bessely
+Bessel functions of the second kind.
+
+@item besseli
+Modified Bessel functions of the first kind.
+
+@item besselk
+Modified Bessel functions of the second kind.
+@end table
+
+The second argument, @var{x}, must be a real matrix, vector, or scalar.
+
+The first argument, @var{alpha}, must be greater than or equal to zero.
+If @var{alpha} is a range, it must have an increment equal to one.
+
+If @var{alpha} is a scalar, the result is the same size as @var{x}.
+
+If @var{alpha} is a range, @var{x} must be a vector or scalar, and the
+result is a matrix with @code{length(@var{x})} rows and
+@code{length(@var{alpha})} columns.
+@end deftypefn
+
 @deftypefn {Mapping Function} {} beta (@var{a}, @var{b})
 Return the Beta function,
 @iftex
 @tex
 $$
  B (a, b) = {\Gamma (a) \Gamma (b) \over \Gamma (a + b)}.
 $$
 @end tex
diff --git a/doc/interpreter/basics.texi b/doc/interpreter/basics.texi
--- a/doc/interpreter/basics.texi
+++ b/doc/interpreter/basics.texi
@@ -199,21 +199,16 @@ octave --no-line-editing --silent
 @noindent
 @code{argv} would be a string vector with the elements
 @code{--no-line-editing} and @code{--silent}.
 
 If you write an executable Octave script, @code{argv} will contain the
 list of arguments passed to the script.  @pxref{Executable Octave Programs}.
 @end defvr
 
-@defvr {Built-in Variable} nargin
-At the top level, this variable is defined as the number of command line
-arguments that were passed to Octave.
-@end defvr
-
 @defvr {Built-in Variable} program_invocation_name
 @defvrx {Built-in Variable} program_name
 When Octave starts, the value of the built-in variable
 @code{program_invocation_name} is automatically set to the name that was
 typed at the shell prompt to run Octave, and the value of
 @code{program_name} is automatically set to the final component of
 @code{program_invocation_name}.  For example, if you typed
 @samp{@value{OCTAVEHOME}/bin/octave} to start Octave,
@@ -235,17 +230,18 @@ printf ("%s", program_name);
 for i = 1:nargin
   printf (" %s", argv(i,:));
 endfor
 printf ("\n");
 @end example
 
 @noindent
 @xref{Index Expressions} for an explanation of how to properly index
-arrays of strings and substrings in Octave.
+arrays of strings and substrings in Octave, and @xref{Defining Functions} 
+for information about the variable @code{nargin}.
 
 @node Startup Files,  , Command Line Options, Invoking Octave
 @subsection Startup Files
 @cindex initialization
 @cindex startup
 
 When Octave starts, it looks for commands to execute from the following
 files:
diff --git a/doc/interpreter/expr.texi b/doc/interpreter/expr.texi
--- a/doc/interpreter/expr.texi
+++ b/doc/interpreter/expr.texi
@@ -409,23 +409,26 @@ endfunction
 @end example
 
 This function is recursive because it calls itself directly.  It
 eventually terminates because each time it calls itself, it uses an
 argument that is one less than was used for the previous call.  Once the
 argument is no longer greater than zero, it does not call itself, and
 the recursion ends.
 
-There is currently no limit on the recursion depth, so infinite
-recursion is possible.  If this happens, Octave will consume more and
-more memory attempting to store intermediate values for each function
-call context until there are no more resources available.  This is
-obviously undesirable, and will probably be fixed in some future version
-of Octave by allowing users to specify a maximum allowable recursion
-depth.
+The built-in variable @code{max_recursion_depth} specifies a limit to
+the recursion depth and prevents Octave from recursing infinitely.
+
+@defvr max_recursion_depth
+Limit the number of times a function may be called recursively.
+If the limit is exceeded, an error message is printed and control
+returns to the top level.
+
+The default value is 256.
+@end defvr
 
 @node Arithmetic Ops, Comparison Ops, Calling Functions, Expressions
 @section Arithmetic Operators
 @cindex arithmetic operators
 @cindex operators, arithmetic
 @cindex addition
 @cindex subtraction
 @cindex multiplication
diff --git a/doc/interpreter/func.texi b/doc/interpreter/func.texi
--- a/doc/interpreter/func.texi
+++ b/doc/interpreter/func.texi
@@ -950,19 +950,38 @@ You can now use the @file{oregonator.oct
 
 On a 133 MHz Pentium running Linux, Octave can solve the problem shown
 in @ref{Ordinary Differential Equations} in about 1.4 second using the
 dynamically linked function, compared to about 19 seconds using the
 M-file.  Similar decreases in execution time can be expected for other
 functions, particularly those that rely on functions like @code{lsode}
 that require user-supplied functions.
 
-Additional examples are available in the files in the @file{src}
-directory of the Octave distribution.  Currently, this includes the
-files
+Just as for M-files, Octave will automatically reload dynamically linked
+functions when the files that define them are more recent than the last
+time that the function was loaded.  Two variables are available to
+control how Octave behaves when dynamically linked functions are cleared
+or reloaded.
+
+@defvr {Built-in Variable} auto_unload_dot_oct_files
+If the value of @code{auto_unload_dot_oct_files} is nonzero, Octave will
+automatically unload any @file{.oct} files when there are no longer any
+functions in the symbol table that reference them.
+@end defvr
+
+@defvr {Built-in Variable} warn_reload_forces_clear
+If several functions have been loaded from the same file, Octave must
+clear all the functions before any one of them can be reloaded.  If
+@code{warn_reload_forces_clear}, Octave will warn you when this happens,
+and print a list of the additional functions that it is forced to clear.
+@end defvr
+
+Additional examples for writing dynamically linked functions are
+available in the files in the @file{src} directory of the Octave
+distribution.  Currently, this includes the files
 
 @example
 @group
 balance.cc   fft2.cc      inv.cc       qzval.cc
 chol.cc      filter.cc    log.cc       schur.cc
 colloc.cc    find.cc      lsode.cc     sort.cc 
 dassl.cc     fsolve.cc    lu.cc        svd.cc
 det.cc       givens.cc    minmax.cc    syl.cc
diff --git a/doc/interpreter/numbers.texi b/doc/interpreter/numbers.texi
--- a/doc/interpreter/numbers.texi
+++ b/doc/interpreter/numbers.texi
@@ -299,20 +299,18 @@ example, the expression
 
 will produce @samp{3}.  This is the way Octave has always behaved.
 @end defvr
 
 When you type a matrix or the name of a variable whose value is a
 matrix, Octave responds by printing the matrix in with neatly aligned
 rows and columns.  If the rows of the matrix are too large to fit on the
 screen, Octave splits the matrix and displays a header before each
-section to indicate which columns are being displayed.
-
-@noindent
-You can use the following variables to control the format of the output.
+section to indicate which columns are being displayed.  You can use the
+following variables to control the format of the output.
 
 @defvr {Built-in Variable} output_max_field_width
 This variable specifies the maximum width of a numeric output field.
 The default value is 10.
 @end defvr
 
 @defvr {Built-in Variable} output_precision
 This variable specifies the minimum number of significant figures to
@@ -352,16 +350,52 @@ ans =
   0.44672  0.94303  0.56564  0.82150
 @end group
 @end smallexample
 
 @noindent
 The default value of @code{split_long_rows} is nonzero.
 @end defvr
 
+Octave automatically switches to scientific notation when values become
+very large or very small.  This guarantees that you will see several
+significant figures for every value in a matrix.  If you would prefer to
+see all values in a matrix printed in a fixed point format, you can set
+the built-in variable @code{fixed_point_format} to a nonzero value.  But
+doing so is not recommended, because it can produce output that can
+easily be misinterpreted.
+
+@defvr {Built-in Variable} fixed_point_format
+If the value of this variable is nonzero, Octave will scale all values
+in a matrix so that the largest may be written with one leading digit.
+The scaling factor is printed on the first line of output.  For example,
+
+@example
+@group
+octave:1> logspace (1, 7, 5)'
+ans =
+
+  1.0e+07  *
+
+  0.00000
+  0.00003
+  0.00100
+  0.03162
+  1.00000
+@end group
+@end example
+
+@noindent
+Notice that first value appears to be zero when it is actually 1.  For
+this reason, you should be careful when setting
+@code{fixed_point_format} to a nonzero value.
+
+The default value of @code{fixed_point_format} is 0.
+@end defvr
+
 @menu
 * Empty Matrices::              
 @end menu
 
 @node Empty Matrices,  , Matrices, Matrices
 @subsection Empty Matrices
 
 A matrix may have one or both dimensions zero, and operations on empty
diff --git a/doc/interpreter/stmt.texi b/doc/interpreter/stmt.texi
--- a/doc/interpreter/stmt.texi
+++ b/doc/interpreter/stmt.texi
@@ -346,16 +346,21 @@ particularly for C programmers.
 @item
 The implementation is simple-minded and currently offers no real
 performance improvement over an equivalent @code{if} block, even if all
 the labels are integer constants.  Perhaps a future variation on this
 could detect all constant integer labels and improve performance by
 using a jump table.
 @end itemize
 
+@defvr {Built-in Variable} warn_variable_switch_label
+If the value of this variable is nonzero, Octave will print a warning if
+a switch label is not a constant or constant expression
+@end defvr
+
 @node The while Statement, The for Statement, The switch Statement, Statements
 @section The @code{while} Statement
 @cindex @code{while} statement
 @cindex @code{endwhile} statement
 @cindex loop
 @cindex body of a loop
 
 In programming, a @dfn{loop} means a part of a program that is (or at least can
diff --git a/doc/interpreter/strings.texi b/doc/interpreter/strings.texi
--- a/doc/interpreter/strings.texi
+++ b/doc/interpreter/strings.texi
@@ -388,16 +388,32 @@ octave:13> undo_string_escapes (bell)
 ans = \a
 @end example
 
 @noindent
 replaces the unprintable alert character with its printable
 representation.
 @end deftypefn
 
+@defvr {Built-in Variable} implicit_num_to_str_ok
+If the value of @code{implicit_num_to_str_ok} is nonzero, implicit
+conversions of numbers to their ASCII character equivalents are
+allowed when strings are constructed using a mixture of strings and
+numbers in matrix notation.  Otherwise, an error message is printed and
+control is returned to the top level. The default value is 0.  For
+example,
+
+@example
+@group
+[ "f", 111, 111 ]
+     @result{} "foo"
+@end group
+@end example
+@end defvr
+
 @defvr {Built-in Variable} implicit_str_to_num_ok
 If the value of @code{implicit_str_to_num_ok} is nonzero, implicit
 conversions of strings to their numeric ASCII equivalents are allowed.
 Otherwise, an error message is printed and control is returned to the
 top level.  The default value is 0.
 @end defvr
 
 @node Character Class Functions,  , String Conversions, Strings
diff --git a/doc/interpreter/var.texi b/doc/interpreter/var.texi
--- a/doc/interpreter/var.texi
+++ b/doc/interpreter/var.texi
@@ -333,16 +333,21 @@ Default value: @code{"\s:\#> "}.
 
 Default value: @code{"> "}.
 
 @item PS4
 @xref{Customizing the Prompt}.
 
 Default value: @code{"+ "}.
 
+@item auto_unload_dot_oct_files
+@xref{Dynamically Linked Functions}.
+
+Default value: 0.
+
 @item automatic_replot
 @xref{Two-Dimensional Plotting}.
 
 Default value: 0.
 
 @item beep_on_error
 @xref{Error Handling}.
 
@@ -378,16 +383,21 @@ Default value: 0.
 
 Default value: 0.
 
 @item empty_list_elements_ok
 @xref{Empty Matrices}.
 
 Default value: @code{"warn"}.
 
+@item fixed_point_format
+@xref{Matrices}.
+
+Default value: 0.
+
 @item gnuplot_binary
 @xref{Three-Dimensional Plotting}.
 
 Default value: @code{"gnuplot"}.
 
 @item history_file
 @xref{Commands For History}.
 
@@ -398,21 +408,31 @@ Default value: @code{"~/.octave_hist"}.
 
 Default value: 1024.
 
 @item ignore_function_time_stamp
 @xref{Function Files}.
 
 Default value: @code{"system"}.
 
+@item implicit_num_to_str_ok
+@xref{String Conversions}.
+
+Default value: 0.
+
 @item implicit_str_to_num_ok
 @xref{String Conversions}.
 
 Default value: 0.
 
+@item max_recursion_depth
+@xref{Recursion}.
+
+Default value: 256.
+
 @item ok_to_lose_imaginary_part
 @xref{Special Utility Matrices}.
 
 Default value: @code{"warn"}.
 
 @item output_max_field_width
 @xref{Matrices}.
 
@@ -503,16 +523,26 @@ Default value: 1.
 
 Default value: 1.
 
 @item warn_function_name_clash
 @xref{Function Files}.
 
 Default value: 1.
 
+@item warn_reload_forces_clear
+@xref{Dynamically Linked Functions}.
+
+Default value: 1.
+
+@item warn_variable_switch_label
+@xref{The switch Statement}.
+
+Default value: 0.
+
 @item whitespace_in_literal_matrix
 @xref{Matrices}.
 
 Default value: @code{""}.
 @end vtable
 
 
 @node Defaults from the Environment,  , Summary of Built-in Variables, Variables
diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,8 +1,12 @@
+Sun Jan 25 02:28:04 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (install, uninstall): For use with Octave, do nothing.
+
 Thu Jun  5 12:38:35 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* acklibtool.m4: For use with Octave, ignore --enable-static and
 	--enable-shared and only build static libraries.
 
 Wed Jun  4 12:14:38 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* progname.c (selfdir): Handle dir/exename case here.
diff --git a/kpathsea/Makefile.in b/kpathsea/Makefile.in
--- a/kpathsea/Makefile.in
+++ b/kpathsea/Makefile.in
@@ -311,18 +311,20 @@ tex-file.o:
 # for this file on the DEC Alpha with some versions of gcc.  It's
 # simpler to just omit optimization for all platforms.  --jwe
 hash.lo:
 	$(KPATHSEA_CC) $(srcdir)/hash.c $(filter-out -O%, $(ALL_CFLAGS))
 
 check: kpsewhich
 	./kpsewhich -expand-var '$$TEXMF'
 
-install: install-exec install-data
-uninstall: uninstall-exec uninstall-data
+install uninstall:
+
+#install: install-exec install-data
+#uninstall: uninstall-exec uninstall-data
 
 install-exec: kpsewhich
 	$(SHELL) $(top_srcdir)/../mkdirchain $(bindir) $(scriptdir) \
 	  $(libdir) $(web2cdir)
 	if grep 'original MakeTeXPK --' $(scriptdir)/MakeTeXPK >/dev/null 2>&1\
 	   || test ! -r $(scriptdir)/MakeTeXPK; then \
 	  $(INSTALL_SCRIPT) $(srcdir)/MakeTeXPK $(scriptdir)/MakeTeXPK; \
 	else true; fi
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -16,28 +16,27 @@ set -e
 : ${FFLAGS=%FFLAGS%}
 : ${FPICFLAG=%FPICFLAG%}
 : ${CC=%CC%}
 : ${CFLAGS=%CFLAGS%}
 : ${CPICFLAG=%CPICFLAG%}
 : ${CXX=%CXX%}
 : ${CXXFLAGS=%CXXFLAGS%}
 : ${CXXPICFLAG=%CXXPICFLAG%}
-: ${HOST_CXXFLAGS=%HOST_CXXFLAGS%}
-: ${NO_IMPLICIT_TEMPLATES=%NO_IMPLICIT_TEMPLATES%}
-: ${GCC_IEEE_FP_FLAG=%GCC_IEEE_FP_FLAG%}
+: ${XTRA_CFLAGS=%XTRA_CFLAGS%}
+: ${XTRA_CXXFLAGS=%XTRA_CXXFLAGS%}
 
 : ${SH_LD=%SH_LD%}
 : ${SH_LDFLAGS=%SH_LDFLAGS%}
 
 : ${ALL_FFLAGS="$FFLAGS"}
 
-: ${ALL_CFLAGS="$INCFLAGS $GCC_IEEE_FP_FLAG $CFLAGS"}
+: ${ALL_CFLAGS="$INCFLAGS $XTRA_CFLAGS $CFLAGS"}
 
-: ${ALL_CXXFLAGS="$INCFLAGS $HOST_CXXFLAGS $NO_IMPLICIT_TEMPLATES $GCC_IEEE_FP_FLAG $CXXFLAGS"}
+: ${ALL_CXXFLAGS="$INCFLAGS $XTRA_CXXFLAGS $CXXFLAGS"}
 
 # Local variables.
 
 usage_msg="usage: mkoctfile [options] file ..."
 
 cfiles=
 ccfiles=
 f77files=
diff --git a/readline/configure b/readline/configure
--- a/readline/configure
+++ b/readline/configure
@@ -1489,20 +1489,24 @@ fi
 
 
 echo $ac_n "checking if signal handlers must be reinstalled when invoked""... $ac_c" 1>&6
 echo "configure:1493: checking if signal handlers must be reinstalled when invoked" >&5
 if eval "test \"`echo '$''{'bash_cv_must_reinstall_sighandlers'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   if test "$cross_compiling" = yes; then
-  { echo "configure: error: cannot check signal handling if cross compiling" 1>&2; exit 1; }
+  if test "$bash_cv_signal_vintage" = svr3; then
+  bash_cv_must_reinstall_sighandlers=yes
+else
+  bash_cv_must_reinstall_sighandlers=no
+fi
 else
   cat > conftest.$ac_ext <<EOF
-#line 1501 "configure"
+#line 1505 "configure"
 #include "confdefs.h"
 
 #include <signal.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
 typedef RETSIGTYPE sigfunc();
@@ -1539,50 +1543,54 @@ main()
 	nsigint = 0;
 	set_signal_handler(SIGINT, sigint);
 	kill((int)getpid(), SIGINT);
 	kill((int)getpid(), SIGINT);
 	exit(nsigint != 2);
 }
 
 EOF
-if { (eval echo configure:1548: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1552: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
 then
   bash_cv_must_reinstall_sighandlers=no
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -fr conftest*
   bash_cv_must_reinstall_sighandlers=yes
 fi
 rm -fr conftest*
 fi
 
 fi
 
-echo "$ac_t""$bash_cv_must_reinstall_sighandlers" 1>&6
+if test "$cross_compiling" = yes; then
+  echo "$ac_t""$bash_cv_must_reinstall_sighandlers assumed for cross compilation" 1>&6
+else
+  echo "$ac_t""$bash_cv_must_reinstall_sighandlers" 1>&6
+fi
 if test $bash_cv_must_reinstall_sighandlers = yes; then
 cat >> confdefs.h <<\EOF
 #define MUST_REINSTALL_SIGHANDLERS 1
 EOF
 
 fi
 
 
 
 echo $ac_n "checking for presence of POSIX-style sigsetjmp/siglongjmp""... $ac_c" 1>&6
-echo "configure:1573: checking for presence of POSIX-style sigsetjmp/siglongjmp" >&5
+echo "configure:1581: checking for presence of POSIX-style sigsetjmp/siglongjmp" >&5
 if eval "test \"`echo '$''{'bash_cv_func_sigsetjmp'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   if test "$cross_compiling" = yes; then
-  { echo "configure: error: cannot check for sigsetjmp/siglongjmp if cross-compiling" 1>&2; exit 1; }
+  bash_cv_func_sigsetjmp=present
 else
   cat > conftest.$ac_ext <<EOF
-#line 1581 "configure"
+#line 1589 "configure"
 #include "confdefs.h"
 
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 #include <sys/types.h>
 #include <signal.h>
 #include <setjmp.h>
@@ -1613,56 +1621,60 @@ sigaddset(&set, SIGINT);
 sigprocmask(SIG_BLOCK, &set, (sigset_t *)NULL);
 
 /* and siglongjmp */
 siglongjmp(xx, 10);
 exit(1);
 #endif
 }
 EOF
-if { (eval echo configure:1622: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1630: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
 then
   bash_cv_func_sigsetjmp=present
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -fr conftest*
   bash_cv_func_sigsetjmp=missing
 fi
 rm -fr conftest*
 fi
 
 
 fi
 
-echo "$ac_t""$bash_cv_func_sigsetjmp" 1>&6
+if test "$cross_compiling" = yes; then
+  echo "$ac_t""$bash_cv_func_sigsetjmp=present assumed for cross compiling" 1>&6
+else
+  echo "$ac_t""$bash_cv_func_sigsetjmp" 1>&6
+fi
 if test $bash_cv_func_sigsetjmp = present; then
 cat >> confdefs.h <<\EOF
 #define HAVE_POSIX_SIGSETJMP 1
 EOF
 
 fi
 
 echo $ac_n "checking for lstat""... $ac_c" 1>&6
-echo "configure:1646: checking for lstat" >&5
+echo "configure:1658: checking for lstat" >&5
 if eval "test \"`echo '$''{'bash_cv_func_lstat'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1651 "configure"
+#line 1663 "configure"
 #include "confdefs.h"
 
 #include <sys/types.h>
 #include <sys/stat.h>
 
 int main() {
  lstat("",(struct stat *)0); 
 ; return 0; }
 EOF
-if { (eval echo configure:1661: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
+if { (eval echo configure:1673: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then
   rm -rf conftest*
   bash_cv_func_lstat=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_func_lstat=no
 fi
@@ -1673,31 +1685,31 @@ echo "$ac_t""$bash_cv_func_lstat" 1>&6
 if test $bash_cv_func_lstat = yes; then
   cat >> confdefs.h <<\EOF
 #define HAVE_LSTAT 1
 EOF
 
 fi
 
 echo $ac_n "checking whether programs are able to redeclare getpw functions""... $ac_c" 1>&6
-echo "configure:1682: checking whether programs are able to redeclare getpw functions" >&5
+echo "configure:1694: checking whether programs are able to redeclare getpw functions" >&5
 if eval "test \"`echo '$''{'bash_cv_can_redecl_getpw'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1687 "configure"
+#line 1699 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <pwd.h>
 extern struct passwd *getpwent();
 int main() {
 struct passwd *z; z = getpwent();
 ; return 0; }
 EOF
-if { (eval echo configure:1696: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1708: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_can_redecl_getpw=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_can_redecl_getpw=no
 fi
@@ -1709,25 +1721,25 @@ if test $bash_cv_can_redecl_getpw = no; 
 cat >> confdefs.h <<\EOF
 #define HAVE_GETPW_DECLS 1
 EOF
 
 fi
 
 
 echo $ac_n "checking whether or not strcoll and strcmp differ""... $ac_c" 1>&6
-echo "configure:1718: checking whether or not strcoll and strcmp differ" >&5
+echo "configure:1730: checking whether or not strcoll and strcmp differ" >&5
 if eval "test \"`echo '$''{'bash_cv_func_strcoll_broken'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   if test "$cross_compiling" = yes; then
-  { echo "configure: error: cannot check strcoll if cross compiling" 1>&2; exit 1; }
+  bash_cv_func_strcoll_broken=no
 else
   cat > conftest.$ac_ext <<EOF
-#line 1726 "configure"
+#line 1738 "configure"
 #include "confdefs.h"
 
 #include <stdio.h>
 #if defined (HAVE_LOCALE_H)
 #include <locale.h>
 #endif
 
 main(c, v)
@@ -1756,62 +1768,66 @@ char    *v[];
 
         /* Exit with 1 (failure) if these two values are both > 0, since
 	   this tests whether strcoll(3) is broken with respect to strcmp(3)
 	   in the default locale. */
 	exit (r1 > 0 && r2 > 0);
 }
 
 EOF
-if { (eval echo configure:1765: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
+if { (eval echo configure:1777: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null
 then
   bash_cv_func_strcoll_broken=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -fr conftest*
   bash_cv_func_strcoll_broken=no
 fi
 rm -fr conftest*
 fi
 
 
 fi
 
-echo "$ac_t""$bash_cv_func_strcoll_broken" 1>&6
+if test "$cross_compiling" = yes; then
+  echo "$ac_t""$bash_cv_func_strcoll_broken assumed for cross compiling" 1>&6
+else
+  echo "$ac_t""$bash_cv_func_strcoll_broken" 1>&6
+fi
 if test $bash_cv_func_strcoll_broken = yes; then
 cat >> confdefs.h <<\EOF
 #define STRCOLL_BROKEN 1
 EOF
 
 fi
 
 
 echo $ac_n "checking whether signal handlers are of type void""... $ac_c" 1>&6
-echo "configure:1790: checking whether signal handlers are of type void" >&5
+echo "configure:1806: checking whether signal handlers are of type void" >&5
 if eval "test \"`echo '$''{'bash_cv_void_sighandler'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1795 "configure"
+#line 1811 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <signal.h>
 #ifdef signal
 #undef signal
 #endif
 #ifdef __cplusplus
 extern "C"
 #endif
 void (*signal ()) ();
 int main() {
 int i;
 ; return 0; }
 EOF
-if { (eval echo configure:1810: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1826: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_void_sighandler=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_void_sighandler=no
 fi
@@ -1821,30 +1837,30 @@ echo "$ac_t""$bash_cv_void_sighandler" 1
 if test $bash_cv_void_sighandler = yes; then
 cat >> confdefs.h <<\EOF
 #define VOID_SIGHANDLER 1
 EOF
 
 fi
 
 echo $ac_n "checking for TIOCGWINSZ in sys/ioctl.h""... $ac_c" 1>&6
-echo "configure:1830: checking for TIOCGWINSZ in sys/ioctl.h" >&5
+echo "configure:1846: checking for TIOCGWINSZ in sys/ioctl.h" >&5
 if eval "test \"`echo '$''{'bash_cv_tiocgwinsz_in_ioctl'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1835 "configure"
+#line 1851 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <sys/ioctl.h>
 int main() {
 int x = TIOCGWINSZ;
 ; return 0; }
 EOF
-if { (eval echo configure:1843: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1859: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_tiocgwinsz_in_ioctl=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_tiocgwinsz_in_ioctl=no
 fi
@@ -1855,30 +1871,30 @@ echo "$ac_t""$bash_cv_tiocgwinsz_in_ioct
 if test $bash_cv_tiocgwinsz_in_ioctl = yes; then   
 cat >> confdefs.h <<\EOF
 #define GWINSZ_IN_SYS_IOCTL 1
 EOF
 
 fi
 
 echo $ac_n "checking for TIOCSTAT in sys/ioctl.h""... $ac_c" 1>&6
-echo "configure:1864: checking for TIOCSTAT in sys/ioctl.h" >&5
+echo "configure:1880: checking for TIOCSTAT in sys/ioctl.h" >&5
 if eval "test \"`echo '$''{'bash_cv_tiocstat_in_ioctl'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1869 "configure"
+#line 1885 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <sys/ioctl.h>
 int main() {
 int x = TIOCSTAT;
 ; return 0; }
 EOF
-if { (eval echo configure:1877: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1893: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_tiocstat_in_ioctl=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_tiocstat_in_ioctl=no
 fi
@@ -1889,30 +1905,30 @@ echo "$ac_t""$bash_cv_tiocstat_in_ioctl"
 if test $bash_cv_tiocstat_in_ioctl = yes; then   
 cat >> confdefs.h <<\EOF
 #define TIOCSTAT_IN_SYS_IOCTL 1
 EOF
 
 fi
 
 echo $ac_n "checking for FIONREAD in sys/ioctl.h""... $ac_c" 1>&6
-echo "configure:1898: checking for FIONREAD in sys/ioctl.h" >&5
+echo "configure:1914: checking for FIONREAD in sys/ioctl.h" >&5
 if eval "test \"`echo '$''{'bash_cv_fionread_in_ioctl'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1903 "configure"
+#line 1919 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 #include <sys/ioctl.h>
 int main() {
 int x = FIONREAD;
 ; return 0; }
 EOF
-if { (eval echo configure:1911: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1927: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_fionread_in_ioctl=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_fionread_in_ioctl=no
 fi
@@ -1923,29 +1939,29 @@ echo "$ac_t""$bash_cv_fionread_in_ioctl"
 if test $bash_cv_fionread_in_ioctl = yes; then   
 cat >> confdefs.h <<\EOF
 #define FIONREAD_IN_SYS_IOCTL 1
 EOF
 
 fi
 
 echo $ac_n "checking for speed_t in sys/types.h""... $ac_c" 1>&6
-echo "configure:1932: checking for speed_t in sys/types.h" >&5
+echo "configure:1948: checking for speed_t in sys/types.h" >&5
 if eval "test \"`echo '$''{'bash_cv_speed_t_in_sys_types'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1937 "configure"
+#line 1953 "configure"
 #include "confdefs.h"
 #include <sys/types.h>
 int main() {
 speed_t x;
 ; return 0; }
 EOF
-if { (eval echo configure:1944: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:1960: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_speed_t_in_sys_types=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_speed_t_in_sys_types=no
 fi
@@ -1957,22 +1973,22 @@ if test $bash_cv_speed_t_in_sys_types = 
 cat >> confdefs.h <<\EOF
 #define SPEED_T_IN_SYS_TYPES 1
 EOF
 
 fi
 
 
 echo $ac_n "checking if struct dirent has a d_ino member""... $ac_c" 1>&6
-echo "configure:1966: checking if struct dirent has a d_ino member" >&5
+echo "configure:1982: checking if struct dirent has a d_ino member" >&5
 if eval "test \"`echo '$''{'bash_cv_dirent_has_dino'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 1971 "configure"
+#line 1987 "configure"
 #include "confdefs.h"
 
 #include <stdio.h>
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
 #endif /* HAVE_UNISTD_H */
 #if defined(HAVE_DIRENT_H)
@@ -1991,17 +2007,17 @@ else
 #endif /* HAVE_DIRENT_H */
 
 int main() {
 
 struct dirent d; int z; z = d.d_ino;
 
 ; return 0; }
 EOF
-if { (eval echo configure:2000: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:2016: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_dirent_has_dino=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_dirent_has_dino=no
 fi
@@ -2013,22 +2029,22 @@ if test $bash_cv_dirent_has_dino = yes; 
 cat >> confdefs.h <<\EOF
 #define STRUCT_DIRENT_HAS_D_INO 1
 EOF
 
 fi
 
 
 echo $ac_n "checking if struct dirent has a d_fileno member""... $ac_c" 1>&6
-echo "configure:2022: checking if struct dirent has a d_fileno member" >&5
+echo "configure:2038: checking if struct dirent has a d_fileno member" >&5
 if eval "test \"`echo '$''{'bash_cv_dirent_has_d_fileno'+set}'`\" = set"; then
   echo $ac_n "(cached) $ac_c" 1>&6
 else
   cat > conftest.$ac_ext <<EOF
-#line 2027 "configure"
+#line 2043 "configure"
 #include "confdefs.h"
 
 #include <stdio.h>
 #include <sys/types.h>
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
 #endif /* HAVE_UNISTD_H */
 #if defined(HAVE_DIRENT_H)
@@ -2047,17 +2063,17 @@ else
 #endif /* HAVE_DIRENT_H */
 
 int main() {
 
 struct dirent d; int z; z = d.d_fileno;
 
 ; return 0; }
 EOF
-if { (eval echo configure:2056: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
+if { (eval echo configure:2072: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
   rm -rf conftest*
   bash_cv_dirent_has_d_fileno=yes
 else
   echo "configure: failed program was:" >&5
   cat conftest.$ac_ext >&5
   rm -rf conftest*
   bash_cv_dirent_has_d_fileno=no
 fi
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+Wed Jan 28 22:44:59 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* plot/contour.m: Handle discrete contour levels.
+
+Tue Jan 27 04:31:22 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* control/lyap.m: For compatibility with Matlab, solve
+ 	A*X + X*A' + C = 0 instead of A'*X + X*A + C = 0.
+
 Wed Dec 10 00:14:29 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* specfun/bessel.m: New file.
 
 	* specfun/betai.m, specfun/betainc.m, specfun/gammai.m,
 	specfun/gammainc.m: Delete.
 
 Wed Nov 19 00:19:18 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/scripts/plot/contour.m b/scripts/plot/contour.m
--- a/scripts/plot/contour.m
+++ b/scripts/plot/contour.m
@@ -34,17 +34,25 @@ function contour (z, n, x, y)
   ## temporarily, probably inside an unwind_protect block, but there is
   ## no way to determine their current values.
 
   if (nargin == 1 || nargin == 2)
     if (is_matrix (z))
       gset nosurface;
       gset contour;
       gset cntrparam bspline;
-      command = sprintf ("gset cntrparam levels %d", n);
+      if (is_scalar (n))
+	command = sprintf ("gset cntrparam levels %d", n);
+      elseif (is_vector (n))
+	tmp = sprintf ("%f", n(1));
+	for i = 2:length (n)
+	  tmp = sprintf ("%s, %f", tmp, n(i));
+	endfor
+	command = sprintf ("gset cntrparam levels discrete %s", tmp);
+      endif
       eval (command);
       gset noparametric;
       gset view 0, 0, 1, 1;
       gsplot z w l 1;
     else
       error ("contour: argument must be a matrix");
     endif
   elseif (nargin == 4)
@@ -62,17 +70,25 @@ function contour (z, n, x, y)
           zz(:,i)   = x;
           zz(:,i+1) = y(k) * ones (xlen, 1);
           zz(:,i+2) = z(k,:)';
           k++;
         endfor
         gset nosurface;
         gset contour;
         gset cntrparam bspline;
-        command = sprintf ("gset cntrparam levels %d", n);
+	if (is_scalar (n))
+          command = sprintf ("gset cntrparam levels %d", n);
+	elseif (is_vector (n))
+	  tmp = sprintf ("%f", n(1));
+	  for i = 2:length (n)
+	    tmp = sprintf ("%s, %f", tmp, n(i));
+	  endfor
+	  command = sprintf ("gset cntrparam levels discrete %s", tmp);
+	endif
         eval (command);
 	gset parametric;
         gset view 0, 0, 1, 1;
 	gsplot zz w l 1;
       else
         msg = "contour: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,27 @@
+Wed Jan 28 00:18:17 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DLD-FUNCTIONS/dassl.cc (lsode_option_table):
+	Add missing & to function names.
+	* DLD-FUNCTIONS/lsode.cc (lsode_option_table): Likewise.
+	* DLD-FUNCTIONS/quad.cc (quad_option_table): Likewise.
+
+	* Makefile.in (oct-gperf.h): Add -G option to gperf.
+
+	* load-save.cc (get_save_type): Add `UL' and `L' suffixes to large
+	constant values.  For LS_INT, use <= and >= for comparison.
+
+Mon Jan 26 13:17:59 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-usr-fcn.cc (Vmax_recursion_depth): New static variable.
+	(max_recursion_depth): New fucnction
+	(symbols_of_ov_usr_fcn): DEFVAR max_recursion_depth.
+	(octave_user_function::do_index_op): Check Vmax_recursion_depth.
+
 Thu Jan 22 13:45:26 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dynamic-ld.cc (make_dynamic_loader): Fix typo.
 
 Tue Jan 20 17:02:19 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* variables.cc (Fexist): If local symbol is undefined, check
 	global table.
diff --git a/src/DLD-FUNCTIONS/dassl.cc b/src/DLD-FUNCTIONS/dassl.cc
--- a/src/DLD-FUNCTIONS/dassl.cc
+++ b/src/DLD-FUNCTIONS/dassl.cc
@@ -218,36 +218,36 @@ struct DASSL_OPTIONS
   d_get_opt_mf d_get_fcn;
 };
 
 static DASSL_OPTIONS dassl_option_table [] =
 {
   { "absolute tolerance",
     { "absolute", "tolerance", 0, 0, },
     { 1, 0, 0, 0, }, 1,
-    DASSL_options::set_absolute_tolerance,
-    DASSL_options::absolute_tolerance, },
+    &DASSL_options::set_absolute_tolerance,
+    &DASSL_options::absolute_tolerance, },
 
   { "initial step size",
     { "initial", "step", "size", 0, },
     { 1, 0, 0, 0, }, 1,
-    DASSL_options::set_initial_step_size,
-    DASSL_options::initial_step_size, },
+    &DASSL_options::set_initial_step_size,
+    &DASSL_options::initial_step_size, },
 
   { "maximum step size",
     { "maximum", "step", "size", 0, },
     { 2, 0, 0, 0, }, 1,
-    DASSL_options::set_maximum_step_size,
-    DASSL_options::maximum_step_size, },
+    &DASSL_options::set_maximum_step_size,
+    &DASSL_options::maximum_step_size, },
 
   { "relative tolerance",
     { "relative", "tolerance", 0, 0, },
     { 1, 0, 0, 0, }, 1,
-    DASSL_options::set_relative_tolerance,
-    DASSL_options::relative_tolerance, },
+    &DASSL_options::set_relative_tolerance,
+    &DASSL_options::relative_tolerance, },
 
   { 0,
     { 0, 0, 0, 0, },
     { 0, 0, 0, 0, }, 0,
     0, 0, },
 };
 
 static void
diff --git a/src/DLD-FUNCTIONS/lsode.cc b/src/DLD-FUNCTIONS/lsode.cc
--- a/src/DLD-FUNCTIONS/lsode.cc
+++ b/src/DLD-FUNCTIONS/lsode.cc
@@ -271,48 +271,48 @@ struct LSODE_OPTIONS
   i_get_opt_mf i_get_fcn;
 };
 
 static LSODE_OPTIONS lsode_option_table [] =
 {
   { "absolute tolerance",
     { "absolute", "tolerance", 0, 0, },
     { 1, 0, 0, 0, }, 1,
-    LSODE_options::set_absolute_tolerance, 0,
-    LSODE_options::absolute_tolerance, 0, },
+    &LSODE_options::set_absolute_tolerance, 0,
+    &LSODE_options::absolute_tolerance, 0, },
 
   { "initial step size",
     { "initial", "step", "size", 0, },
     { 1, 0, 0, 0, }, 1,
-    LSODE_options::set_initial_step_size, 0,
-    LSODE_options::initial_step_size, 0, },
+    &LSODE_options::set_initial_step_size, 0,
+    &LSODE_options::initial_step_size, 0, },
 
   { "maximum step size",
     { "maximum", "step", "size", 0, },
     { 2, 0, 0, 0, }, 1,
-    LSODE_options::set_maximum_step_size, 0,
-    LSODE_options::maximum_step_size, 0, },
+    &LSODE_options::set_maximum_step_size, 0,
+    &LSODE_options::maximum_step_size, 0, },
 
   { "minimum step size",
     { "minimum", "step", "size", 0, },
     { 2, 0, 0, 0, }, 1,
-    LSODE_options::set_minimum_step_size, 0,
-    LSODE_options::minimum_step_size, 0, },
+    &LSODE_options::set_minimum_step_size, 0,
+    &LSODE_options::minimum_step_size, 0, },
 
   { "relative tolerance",
     { "relative", "tolerance", 0, 0, },
     { 1, 0, 0, 0, }, 1,
-    LSODE_options::set_relative_tolerance, 0,
-    LSODE_options::relative_tolerance, 0, },
+    &LSODE_options::set_relative_tolerance, 0,
+    &LSODE_options::relative_tolerance, 0, },
 
   { "step limit",
     { "step", "limit", 0, 0, },
     { 1, 0, 0, 0, }, 1,
-    0, LSODE_options::set_step_limit,
-    0, LSODE_options::step_limit, },
+    0, &LSODE_options::set_step_limit,
+    0, &LSODE_options::step_limit, },
 
   { 0,
     { 0, 0, 0, 0, },
     { 0, 0, 0, 0, }, 0,
     0, 0, 0, 0, },
 };
 
 static void
diff --git a/src/DLD-FUNCTIONS/quad.cc b/src/DLD-FUNCTIONS/quad.cc
--- a/src/DLD-FUNCTIONS/quad.cc
+++ b/src/DLD-FUNCTIONS/quad.cc
@@ -265,24 +265,24 @@ struct QUAD_OPTIONS
   d_get_opt_mf d_get_fcn;
 };
 
 static QUAD_OPTIONS quad_option_table [] =
 {
   { "absolute tolerance",
     { "absolute", "tolerance", 0, },
     { 1, 0, 0, }, 1,
-    Quad_options::set_absolute_tolerance,
-    Quad_options::absolute_tolerance, },
+    &Quad_options::set_absolute_tolerance,
+    &Quad_options::absolute_tolerance, },
 
   { "relative tolerance",
     { "relative", "tolerance", 0, },
     { 1, 0, 0, }, 1,
-    Quad_options::set_relative_tolerance,
-    Quad_options::relative_tolerance, },
+    &Quad_options::set_relative_tolerance,
+    &Quad_options::relative_tolerance, },
 
   { 0,
     { 0, 0, 0, },
     { 0, 0, 0, }, 0,
     0, 0, },
 };
 
 static void
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -409,17 +409,17 @@ lex.cc : lex.l
 defaults.h: defaults.h.in ../Makeconf Makefile
 	@$(do-subst-default-vals)
 
 oct-conf.h: oct-conf.h.in ../Makeconf Makefile
 	@$(do-subst-config-vals)
 
 oct-gperf.h: octave.gperf
 	@echo "making $@ from $<"
-	@gperf -a -C -E -H octave_kw_hash -g -N octave_kw_lookup -p -t \
+	@gperf -a -C -E -G -H octave_kw_hash -g -N octave_kw_lookup -p -t \
 	  $< > $@.t
 	@$(top_srcdir)/move-if-change $@.t $@
 
 check: all
 .PHONY: check
 
 # If missing, GNU make attempts to create them in the reverse of the
 # order in which they are listed here.  We rely on that fact to ensure
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1781,23 +1781,23 @@ static save_type
 get_save_type (double max_val, double min_val)
 {
   save_type st = LS_DOUBLE;
 
   if (max_val < 256 && min_val > -1)
     st = LS_U_CHAR;
   else if (max_val < 65536 && min_val > -1)
     st = LS_U_SHORT;
-  else if (max_val < 4294967295 && min_val > -1)
+  else if (max_val < 4294967295UL && min_val > -1)
     st = LS_U_INT;
   else if (max_val < 128 && min_val >= -128)
     st = LS_CHAR;
   else if (max_val < 32768 && min_val >= -32768)
     st = LS_SHORT;
-  else if (max_val < 2147483648 && min_val > -2147483648)
+  else if (max_val <= 2147483647L && min_val >= -2147483647L)
     st = LS_INT;
 
   return st;
 }
 
 // Save the data from TC along with the corresponding NAME, help
 // string DOC, and global flag MARK_AS_GLOBAL on stream OS in the
 // binary format described above for read_binary_data.
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -48,16 +48,19 @@ Software Foundation, 59 Temple Place - S
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 
 // If TRUE, variables returned from functions have default values even
 // if they are not explicitly initialized.
 static bool Vdefine_all_return_values;
 
+// Maximum nesting level for functions called recursively.
+static int Vmax_recursion_depth;
+
 // If TRUE, the last computed value is returned from functions that
 // don't actually define any return variables.
 static bool Vreturn_last_computed_value;
 
 // User defined functions.
 
 octave_allocator
 octave_user_function::allocator (sizeof (octave_user_function));
@@ -241,16 +244,22 @@ octave_user_function::do_index_op (int n
 
   int nargin = args.length ();
 
   unwind_protect::begin_frame ("func_eval");
 
   unwind_protect_int (call_depth);
   call_depth++;
 
+  if (call_depth > Vmax_recursion_depth)
+    {
+      ::error ("max_recursion_limit exceeded");
+      return retval;
+    }
+
   if (symtab_entry && ! symtab_entry->is_read_only ())
     {
       symtab_entry->protect ();
       unwind_protect::add (unprotect_function, symtab_entry);
     }
 
   if (call_depth > 1)
     {
@@ -520,16 +529,24 @@ static int
 define_all_return_values (void)
 {
   Vdefine_all_return_values = check_preference ("define_all_return_values");
 
   return 0;
 }
 
 static int
+max_recursion_depth (void)
+{
+  Vmax_recursion_depth = check_preference ("max_recursion_depth");
+
+  return 0;
+}
+
+static int
 return_last_computed_value (void)
 {
   Vreturn_last_computed_value
     = check_preference ("return_last_computed_value");
 
   return 0;
 }
 
@@ -541,16 +558,20 @@ symbols_of_ov_usr_fcn (void)
 functions.  Only used if the variable initialize_return_values is\n\
 set to \"true\".");
 
   DEFVAR (define_all_return_values, 0.0, 0, define_all_return_values,
     "control whether values returned from functions should have a\n\
 value even if one has not been explicitly assigned.  See also\n\
 default_return_value");
 
+  DEFVAR (max_recursion_depth, 256.0, 0, max_recursion_depth,
+    "maximum nesting level for functions called recursively.\n\
+The default value is 256.");
+
   DEFVAR (return_last_computed_value, 0.0, 0, return_last_computed_value,
     "if a function does not return any values explicitly, return the\n\
   last computed value");
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/test/octave.test/system/computer-1.m b/test/octave.test/system/computer-1.m
--- a/test/octave.test/system/computer-1.m
+++ b/test/octave.test/system/computer-1.m
@@ -1,1 +1,2 @@
-isstr (computer ()) && computer () == octave_config_info ("target_host_type")
+(isstr (computer ())
+ && computer () == octave_config_info ("canonical_host_type"))
