# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1470934131 14400
#      Thu Aug 11 12:48:51 2016 -0400
# Node ID 89e1be7b75113a4e22fb05440c0d73abf1b85286
# Parent  15b9d7cb309888383e259f9ff1f72934f4b6994d
* chol.cc (chol<T>::insert_sym): Use std::imag and std::conj.

diff --git a/liboctave/numeric/chol.cc b/liboctave/numeric/chol.cc
--- a/liboctave/numeric/chol.cc
+++ b/liboctave/numeric/chol.cc
@@ -511,29 +511,29 @@ chol<T>::insert_sym (const VT& u, octave
 
   if (u.numel () != n + 1)
     (*current_liboctave_error_handler) ("cholinsert: dimension mismatch");
   if (j < 0 || j > n)
     (*current_liboctave_error_handler) ("cholinsert: index out of range");
 
   if (singular (chol_mat))
     info = 2;
-  else if (imag (u(j)) != zero)
+  else if (std::imag (u(j)) != zero)
     info = 3;
   else
     {
       T a = chol_mat.hermitian () * chol_mat;
       T a1 (n+1, n+1);
       for (octave_idx_type k = 0; k < n+1; k++)
         for (octave_idx_type l = 0; l < n+1; l++)
           {
             if (l == j)
               a1(k, l) = u(k);
             else if (k == j)
-              a1(k, l) = conj (u(l));
+              a1(k, l) = std::conj (u(l));
             else
               a1(k, l) = a(k < j ? k : k-1, l < j ? l : l-1);
           }
       info = init (a1, true, false);
       if (info) info = 1;
     }
 
   return info;
