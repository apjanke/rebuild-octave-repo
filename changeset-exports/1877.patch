# HG changeset patch
# User jwe
# Date 823442498 0
#      Sun Feb 04 14:01:38 1996 +0000
# Node ID 6f70b6929cc1767667653bbc482a8ed1cb78e5dc
# Parent  3eeb7826e2981b012a08e8ba0aadac4c980511a8
[project @ 1996-02-04 14:01:12 by jwe]

diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -280,20 +280,19 @@ NPSOL::do_minimize (double& objf, int& i
     {
 
       F77_XFCN (npsol, NPSOL,
 		(n, nclin, ncnln, nrowa, nrowj, nrowr, pclin, clow,
 		 cup, npsol_confun, npsol_objfun, inform, iter,
 		 istate, c, cjac, pclambda, objf, objgrd, r, px, iw,
 		 leniw, w, lenw));
 
-      // XXX FIXME XXX -- need to know if an exception that resulted
-      // in a call to xstopx has occurred...
-
-      if (inform == 6 || inform == 1)
+      if (f77_exception_encountered)
+	(*current_liboctave_error_handler) ("unrecoverable error in npsol");
+      else if (inform == 6 || inform == 1)
 	continue;
       else
 	break;
     }
 
   // Clean up.
 
   delete [] istate;
diff --git a/liboctave/f77-fcn.h b/liboctave/f77-fcn.h
--- a/liboctave/f77-fcn.h
+++ b/liboctave/f77-fcn.h
@@ -62,27 +62,34 @@ extern "C" {
    XSTOPX.  XSTOPX will call lonjmp with f77_context and we'll return,
    call the error function, restore the previous context.  After using
    this macro, error_state should be checked. */
 
 #define F77_XFCN(f, F, args) \
   do \
     { \
       jmp_buf saved_f77_context; \
+      f77_exception_encountered = 0; \
       copy_f77_context ((char *) f77_context, (char *) saved_f77_context, \
 			sizeof (jmp_buf)); \
       if (setjmp (f77_context)) \
-	F77_XFCN_ERROR (f, F); \
+	{ \
+	  f77_exception_encountered = 1; \
+	  F77_XFCN_ERROR (f, F); \
+	} \
       else \
 	F77_FCN (f, F) args; \
       copy_f77_context ((char *) saved_f77_context, (char *) f77_context, \
 			sizeof (jmp_buf)); \
     } \
   while (0)
 
+/* So we can check to see if an exception has occurred. */
+extern int f77_exception_encountered;
+
 /* For setjmp/longjmp. */
 extern jmp_buf f77_context;
 
 /* Defining this as a separate function allows us to avoid having to
    include string.h in this file. */
 
 extern void copy_f77_context (void *, void *, unsigned int);
 
