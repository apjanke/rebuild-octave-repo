# HG changeset patch
# User John Donoghue
# Date 1426855460 14400
#      Fri Mar 20 08:44:20 2015 -0400
# Node ID f7846f0ea6db0b16284e644baa1143cb13aec413
# Parent  3f3418ccd6d4a0a9ce132e3133c9abb1cf406b6e
GUI: enable workspace update when debugging (Bug #44455)

* libgui/src/main-window.cc
  (main_window::construct_octave_qt_link): add debug parameter to set_workspace

* libgui/src/octave-qt-link.cc, libgui/src/octave-qt-link.h
  (octave_qt_link::do_set_workspace): add debug variable, check top_level AND debug flag for redraw
  (octave_qt_link::do_set_workspace): add debug variable to emit set_work_space_signal

* libgui/src/workspace-model.cc, libgui/src/workspace-model.h
  (workspace_model::set_workspace): add debug flag to function

* libinterp/corefcn/octave-link.cc, libinterp/corefcn/octave-link.h
  (octave_link::set_workspace): send debug flag in do_set_workspace
  (octave_link::do_set_workspace): add debug flag

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1463,22 +1463,22 @@ main_window::construct_octave_qt_link (v
 
   connect (_octave_qt_link, SIGNAL (confirm_shutdown_signal ()),
            this, SLOT (confirm_shutdown_octave ()));
 
   if (_start_gui)
     {
       connect (_octave_qt_link,
                SIGNAL (set_workspace_signal
-                       (bool, const QString&, const QStringList&,
+                       (bool, bool, const QString&, const QStringList&,
                         const QStringList&, const QStringList&,
                         const QStringList&, const QIntList&)),
                _workspace_model,
                SLOT (set_workspace
-                     (bool, const QString&, const QStringList&,
+                     (bool, bool, const QString&, const QStringList&,
                       const QStringList&, const QStringList&,
                       const QStringList&, const QIntList&)));
 
       connect (_octave_qt_link, SIGNAL (clear_workspace_signal ()),
                _workspace_model, SLOT (clear_workspace ()));
 
       connect (_octave_qt_link, SIGNAL (change_directory_signal (QString)),
                this, SLOT (change_directory (QString)));
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -369,20 +369,20 @@ octave_qt_link::do_change_directory (con
 
 void
 octave_qt_link::do_execute_command_in_terminal (const std::string& command)
 {
   emit execute_command_in_terminal_signal (QString::fromStdString (command));
 }
 
 void
-octave_qt_link::do_set_workspace (bool top_level,
+octave_qt_link::do_set_workspace (bool top_level, bool debug, 
                                   const std::list<workspace_element>& ws)
 {
-  if (! top_level)
+  if (! top_level && ! debug)
     return;
 
   QString scopes;
   QStringList symbols;
   QStringList class_names;
   QStringList dimensions;
   QStringList values;
   QIntList complex_flags;
@@ -393,17 +393,17 @@ octave_qt_link::do_set_workspace (bool t
       scopes.append (it->scope ());
       symbols.append (QString::fromStdString (it->symbol ()));
       class_names.append (QString::fromStdString (it->class_name ()));
       dimensions.append (QString::fromStdString (it->dimension ()));
       values.append (QString::fromStdString (it->value ()));
       complex_flags.append (it->complex_flag ());
     }
 
-  emit set_workspace_signal (top_level, scopes, symbols, class_names,
+  emit set_workspace_signal (top_level, debug, scopes, symbols, class_names,
                              dimensions, values, complex_flags);
 }
 
 void
 octave_qt_link::do_clear_workspace (void)
 {
   emit clear_workspace_signal ();
 }
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -101,17 +101,17 @@ public:
   do_debug_cd_or_addpath_error (const std::string& file,
                                 const std::string& dir,
                                 bool addpath_option);
 
   void do_change_directory (const std::string& dir);
 
   void do_execute_command_in_terminal (const std::string& command);
 
-  void do_set_workspace (bool top_level,
+  void do_set_workspace (bool top_level, bool debug, 
                          const std::list<workspace_element>& ws);
 
   void do_clear_workspace (void);
 
   void do_set_history (const string_vector& hist);
   void do_append_history (const std::string& hist_entry);
   void do_clear_history (void);
 
@@ -159,16 +159,17 @@ signals:
 
   void edit_file_signal (const QString& file);
 
   void change_directory_signal (const QString& dir);
 
   void execute_command_in_terminal_signal (const QString& command);
 
   void set_workspace_signal (bool top_level,
+                             bool debug,
                              const QString& scopes,
                              const QStringList& symbols,
                              const QStringList& class_names,
                              const QStringList& dimensions,
                              const QStringList& values,
                              const QIntList& complex_flags);
 
   void clear_workspace_signal (void);
diff --git a/libgui/src/workspace-model.cc b/libgui/src/workspace-model.cc
--- a/libgui/src/workspace-model.cc
+++ b/libgui/src/workspace-model.cc
@@ -223,16 +223,17 @@ workspace_model::setData (const QModelIn
     }
 
   return retval;
 }
 
 
 void
 workspace_model::set_workspace (bool top_level,
+                                bool debug,
                                 const QString& scopes,
                                 const QStringList& symbols,
                                 const QStringList& class_names,
                                 const QStringList& dimensions,
                                 const QStringList& values,
                                 const QIntList& complex_flags)
 {
   _top_level = top_level;
diff --git a/libgui/src/workspace-model.h b/libgui/src/workspace-model.h
--- a/libgui/src/workspace-model.h
+++ b/libgui/src/workspace-model.h
@@ -68,16 +68,17 @@ public:
   bool is_top_level (void) const { return _top_level; }
 
   QColor storage_class_color (int s_class)
   { return _storage_class_colors.at (s_class); }
 
 public slots:
 
   void set_workspace (bool top_level,
+                      bool debug,
                       const QString& scopes,
                       const QStringList& symbols,
                       const QStringList& class_names,
                       const QStringList& dimensions,
                       const QStringList& values,
                       const QIntList& complex_flags);
 
   void clear_workspace (void);
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -56,16 +56,17 @@ octave_link::octave_link (void)
 }
 
 void
 octave_link::set_workspace (void)
 {
   if (enabled ())
     instance->do_set_workspace ((symbol_table::current_scope ()
                                  == symbol_table::top_scope ()),
+                                instance->debugging, 
                                 symbol_table::workspace_info ());
 }
 
 // OBJ should be an object of a class that is derived from the base
 // class octave_link, or 0 to disconnect the link.  It is the
 // responsibility of the caller to delete obj.
 
 void
diff --git a/libinterp/corefcn/octave-link.h b/libinterp/corefcn/octave-link.h
--- a/libinterp/corefcn/octave-link.h
+++ b/libinterp/corefcn/octave-link.h
@@ -226,17 +226,17 @@ public:
   }
 
   static void set_workspace (void);
 
   static void set_workspace (bool top_level,
                              const std::list<workspace_element>& ws)
   {
     if (enabled ())
-      instance->do_set_workspace (top_level, ws);
+      instance->do_set_workspace (top_level, instance->debugging, ws);
   }
 
   static void clear_workspace (void)
   {
     if (enabled ())
       instance->do_clear_workspace ();
   }
 
@@ -432,17 +432,17 @@ protected:
                                 const std::string& dir,
                                 bool addpath_option) = 0;
 
   virtual void do_change_directory (const std::string& dir) = 0;
 
   virtual void do_execute_command_in_terminal (const std::string& command) = 0;
 
   virtual void
-  do_set_workspace (bool top_level,
+  do_set_workspace (bool top_level, bool debug,
                     const std::list<workspace_element>& ws) = 0;
 
   virtual void do_clear_workspace (void) = 0;
 
   virtual void do_set_history (const string_vector& hist) = 0;
   virtual void do_append_history (const std::string& hist_entry) = 0;
   virtual void do_clear_history (void) = 0;
 
