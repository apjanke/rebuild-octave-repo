# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1449265684 18000
#      Fri Dec 04 16:48:04 2015 -0500
# Node ID fee9c63157620ccae04d3e8407aaee7ac8c097fa
# Parent  20975a6f677ae9bc66b7b1b8a193ed3d675cea71
avoid build dependency issue

* ov-struct.cc: Provide explicit decl for Fcellstr instead of
including builtin-defun-decl.h.

diff --git a/libinterp/octave-value/ov-struct.cc b/libinterp/octave-value/ov-struct.cc
--- a/libinterp/octave-value/ov-struct.cc
+++ b/libinterp/octave-value/ov-struct.cc
@@ -22,17 +22,16 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Cell.h"
-#include "builtin-defun-decls.h"
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "mxarray.h"
 #include "oct-lvalue.h"
 #include "oct-hdf5.h"
 #include "ov-struct.h"
 #include "unwind-prot.h"
@@ -2100,16 +2099,20 @@ A(1)\n\
 %! assert (struct2cell (s), vals');
 %! assert (fieldnames (s), keys');
 
 %!assert (cell2struct ({1; 2}, {"a"; "b"}), struct ("a", 1, "b", 2));
 
 %!assert (cell2struct ({}, {"f"}, 3), struct ("f", {}));
 */
 
+// FIXME: we should be including builtin-defun-decls.h but doing that
+// currently exposes a problem with dependencies in the the build system.
+extern OCTINTERP_API octave_value_list
+Fcellstr (const octave_value_list& = octave_value_list (), int = 0);
 
 DEFUN (rmfield, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{sout} =} rmfield (@var{s}, \"@var{f}\")\n\
 @deftypefnx {Built-in Function} {@var{sout} =} rmfield (@var{s}, @var{f})\n\
 Return a @emph{copy} of the structure (array) @var{s} with the field @var{f}\n\
 removed.\n\
 \n\
