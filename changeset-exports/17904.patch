# HG changeset patch
# User Rik <rik@octave.org>
# Date 1384274585 28800
#      Tue Nov 12 08:43:05 2013 -0800
# Node ID 817da22e58edef23326abaa7bba09e823ae840b2
# Parent  de8591a19bc67bf1ce9a67c815e4ad83a004f8d7
speed.m: Change %!test blocks to %!xtest blocks.

* speed.m: speed tests can fail on systems with low resolution timers.
Because of this variability, make tests %!xtest blocks.

diff --git a/scripts/testfun/speed.m b/scripts/testfun/speed.m
--- a/scripts/testfun/speed.m
+++ b/scripts/testfun/speed.m
@@ -407,30 +407,32 @@ endfunction
 %!
 %! disp ("Vectorized test.\nThis takes a little while...");
 %! speed ("build (n)", "", 1000, "build_orig (n)");
 %! clear -f build build_orig
 %! disp ("-----------------------");
 %! disp ("This time, the for loop is done away with entirely.");
 %! disp ("Notice how much bigger the speedup is than in example 1.");
 
-%!test
+## FIXME: Tests are known to fail on operating systems with low resolution
+##        timers such as MinGW.  Therefore, tests are made xtests so that false
+##        failures are not reported.  However, it might be better to either
+##        force the tests to do more work, or use %!testif to check the OS.
+%!xtest
 %! [order, n, T_f1, T_f2] = speed ("airy (x)", "x = rand (n, 10)", [100, 1000]);
 %! assert (isstruct (order));
 %! assert (size (order), [1, 1]);
 %! assert (fieldnames (order), {"p"; "a"});
 %! assert (isnumeric (n));
 %! assert (length (n) > 10);
 %! assert (isnumeric (T_f1));
 %! assert (size (T_f1), size (n));
 %! assert (isnumeric (T_f2));
 %! assert (length (T_f2) > 10);
 
-%% This test is known to fail on operating systems with low resolution timers
-%% such as MinGW
 %!xtest
 %! [order, n, T_f1, T_f2] = speed ("sum (x)", "", [100, 1000], "v = 0; for i = 1:length (x), v += x(i); endfor");
 %! assert (isstruct (order));
 %! assert (size (order), [1, 1]);
 %! assert (fieldnames (order), {"p"; "a"});
 %! assert (isnumeric (n));
 %! assert (length (n) > 10);
 %! assert (isnumeric (T_f1));
