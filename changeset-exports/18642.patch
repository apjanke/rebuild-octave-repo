# HG changeset patch
# User Rik <rik@octave.org>
# Date 1397012907 25200
#      Tue Apr 08 20:08:27 2014 -0700
# Node ID a07814a8ffb04e75cb18bfe49eff32e6742a55d0
# Parent  4792a115c7358d8f332ef591888daac2da5568b8
interp1.m: Small formatting changes only.

* interp1.m: Keep line lengths < 80 characters.  Use if/elseif to
avoid one unnecessary calculation.

diff --git a/scripts/general/interp1.m b/scripts/general/interp1.m
--- a/scripts/general/interp1.m
+++ b/scripts/general/interp1.m
@@ -190,20 +190,18 @@ function yi = interp1 (x, y, varargin)
 
   if (isnan (rightcontinuous))
     ## If not specified, set the continuity condition
     if (x(end) < x(1))
       rightcontinuous = false;
     else
       rightcontinuous = true;
     endif
-  endif
-
-  if ((rightcontinuous && (x(end) < x(1)))
-      || (! rightcontinuous && (x(end) > x(1))))
+  elseif ((rightcontinuous && (x(end) < x(1)))
+          || (! rightcontinuous && (x(end) > x(1))))
     ## Switch between left-continuous and right-continuous
     x = flipud (x);
     y = flipud (y);
   endif
 
   starmethod = method(1) == "*";
 
   if (starmethod)
@@ -212,17 +210,18 @@ function yi = interp1 (x, y, varargin)
     jumps = x(1:end-1) == x(2:end);
     have_jumps = any (jumps);
     if (have_jumps)
       if (strcmp (method, "linear") || strcmp (method, ("nearest")))
         if (any (jumps(1:nx-2) & jumps(2:nx-1)))
           warning ("interp1: multiple discontinuities at the same X value");
         endif
       else
-        error ("interp1: discontinuities not supported for method '%s'", method);
+        error ("interp1: discontinuities not supported for method '%s'",
+                                                                   method);
       endif
     endif
   endif
 
   ## Proceed with interpolating by all methods.
   switch (method)
 
     case "nearest"
@@ -235,16 +234,17 @@ function yi = interp1 (x, y, varargin)
       else
         yi = ppval (pp, reshape (xi, szx));
       endif
 
     case "*nearest"
       pp = mkpp ([x(1), x(1)+[0.5:(nx-1)]*dx, x(nx)],
                  shiftdim (y, 1), szy(2:end));
       pp.orient = "first";
+
       if (ispp)
         yi = pp;
       else
         yi = ppval (pp, reshape (xi, szx));
       endif
 
     case "linear"
       xx = x;
