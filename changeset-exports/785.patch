# HG changeset patch
# User jwe
# Date 781817926 0
#      Mon Oct 10 19:38:46 1994 +0000
# Node ID efdb7d3eddd8924262207e459f8bc4bc55b4a37d
# Parent  07b48e7ddd9bc00bf878bff777d29ae27a215703
[project @ 1994-10-10 19:35:30 by jwe]

diff --git a/src/det.cc b/src/det.cc
--- a/src/det.cc
+++ b/src/det.cc
@@ -89,17 +89,17 @@ DEFUN_DLD_BUILTIN ("det", Fdet, Sdet, 2,
 	    warning ("det: matrix singular to machine precision, rcond = %g",
 		     rcond);
 	  else
 	    d = det.value ();
 
 	  retval = d;
 	}
     }
-  else if (arg.is_complex_matrix ())
+  else if (arg.is_complex_type ())
     {
       ComplexMatrix m = arg.complex_matrix_value ();
 
       if (! error_state)
 	{
 	  int info;
 	  double rcond = 0.0;
 
diff --git a/src/lu.cc b/src/lu.cc
--- a/src/lu.cc
+++ b/src/lu.cc
@@ -91,17 +91,17 @@ DEFUN_DLD_BUILTIN ("lu", Flu, Slu, 2, 3,
 	    default:
 	      retval(2) = fact.P ();
 	      retval(1) = fact.U ();
 	      retval(0) = fact.L ();
 	      break;
 	    }
 	}
     }
-  else if (arg.is_complex_matrix ())
+  else if (arg.is_complex_type ())
     {
       ComplexMatrix m = arg.complex_matrix_value ();
 
       if (! error_state)
 	{
 	  ComplexLU fact (m);
 
 	  switch (nargout)
diff --git a/src/minmax.cc b/src/minmax.cc
--- a/src/minmax.cc
+++ b/src/minmax.cc
@@ -285,17 +285,17 @@ DEFUN_DLD_BUILTIN ("min", Fmin, Smin, 3,
 		  if (! error_state)
 		    {
 		      Matrix result = min (m1, m2);
 		      if (! error_state)
 			retval(0) = result;
 		    }
 		}
 	    }
-	  else if (arg1.is_complex_matrix () || arg2.is_complex_type ())
+	  else if (arg1.is_complex_type () || arg2.is_complex_type ())
 	    {
 	      ComplexMatrix m1 = arg1.complex_matrix_value ();
 
 	      if (! error_state)
 		{
 		  ComplexMatrix m2 = arg2.complex_matrix_value ();
 
 		  if (! error_state)
@@ -357,25 +357,25 @@ DEFUN_DLD_BUILTIN ("max", Fmax, Smax, 3,
       if (arg1.is_real_scalar ())
 	{
 	  retval(0) = arg1.double_value ();
 	}
       else if (arg1.is_complex_scalar ())
 	{
           retval(0) = arg1.complex_value ();
 	}
-      else if (arg1.is_real_matrix ())
+      else if (arg1.is_real_type ())
 	{
 	  Matrix m = arg1.matrix_value ();
 	  if (m.rows () == 1)
 	    retval(0) = m.row_max ();
 	  else
 	    retval(0) = tree_constant (m.column_max (), 0);
 	}
-      else if (arg1.is_complex_matrix ())
+      else if (arg1.is_complex_type ())
 	{
 	  ComplexMatrix m = arg1.complex_matrix_value ();
 	  if (m.rows () == 1)
 	    retval(0) = m.row_max ();
 	  else
 	    retval(0) = tree_constant (m.column_max (), 0);
 	}
       else
@@ -391,31 +391,31 @@ DEFUN_DLD_BUILTIN ("max", Fmax, Smax, 3,
 	  retval(1) = 1;
 	  retval(0) = arg1.double_value ();
 	}
       else if (arg1.is_complex_scalar ())
 	{
 	  retval(1) = 1;
 	  retval(0) = arg1.complex_value ();
 	}
-      else if (arg1.is_real_matrix ())
+      else if (arg1.is_real_type ())
 	{
 	  Matrix m = arg1.matrix_value ();
 	  if (m.rows () == 1)
 	    {
 	      retval(1) = m.row_max_loc ();
 	      retval(0) = m.row_max ();
 	    }
 	  else
 	    {
 	      retval(1) = tree_constant (m.column_max_loc (), 0);
 	      retval(0) = tree_constant (m.column_max (), 0);
 	    }
 	}
-      else if (arg1.is_complex_matrix ())
+      else if (arg1.is_complex_type ())
 	{
 	  ComplexMatrix m = arg1.complex_matrix_value ();
 	  if (m.rows () == 1)
 	    {
 	      retval(1) = m.row_max_loc ();
 	      retval(0) = m.row_max ();
 	    }
 	  else
@@ -450,23 +450,23 @@ DEFUN_DLD_BUILTIN ("max", Fmax, Smax, 3,
 	      Complex a_elem = arg1.complex_value ();
 	      Complex b_elem = arg2.complex_value ();
 	      if (abs (a_elem) > abs (b_elem))
 		result = a_elem;
 	      else
 		result = b_elem;
 	      retval(0) = result;
 	    }
-	  else if (arg1.is_real_matrix ())
+	  else if (arg1.is_real_type ())
 	    {
 	      Matrix result;
 	      result = max (arg1.matrix_value (), arg2.matrix_value ());
 	      retval(0) = result;
 	    }
-	  else if (arg1.is_complex_matrix ())
+	  else if (arg1.is_complex_type ())
 	    {
 	      ComplexMatrix result;
 	      result = max (arg1.complex_matrix_value (),
 			    arg2.complex_matrix_value ());
 	      retval(0) = result;
 	    }
 	  else 
 	    {
diff --git a/src/schur.cc b/src/schur.cc
--- a/src/schur.cc
+++ b/src/schur.cc
@@ -91,17 +91,17 @@ characters:\n\
     return Octave_object (2, Matrix ());
 
   if (nr != nc)
     {
       gripe_square_matrix_required ("schur");
       return retval;
     }
 
-  if (arg.is_real_matrix ())
+  if (arg.is_real_type ())
     {
       Matrix tmp = arg.matrix_value ();
 
       if (! error_state)
 	{
 	  SCHUR result (tmp,ord);
 
 	  if (nargout == 0 || nargout == 1)
@@ -110,17 +110,17 @@ characters:\n\
 	    }
 	  else
 	    {
 	      retval(1) = result.schur_matrix ();
 	      retval(0) = result.unitary_matrix ();
 	    }
 	}
     }
-  else if (arg.is_complex_matrix ())
+  else if (arg.is_complex_type ())
     {
       ComplexMatrix ctmp = arg.complex_matrix_value ();
 
       if (! error_state)
 	{
 	  ComplexSCHUR result (ctmp,ord);
  
 	  if (nargout == 0 || nargout == 1)
