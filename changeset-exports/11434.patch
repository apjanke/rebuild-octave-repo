# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1294020684 18000
#      Sun Jan 02 21:11:24 2011 -0500
# Node ID 1f54ee6760b55058a568792bde8e2337838abca3
# Parent  9f4321024fbf73f294e3e2f27dd52bfd119c4239
legend.m: Only one legend per axes (bug 32022)

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-02  Ben Abbott <bpabbott@mac.com>
+
+	* plot/legend.m: Only one legend per axes (bug 32022). Add / modify
+	demos to test addional features.
+
 2010-12-31  Rik  <octave@nomad.inbox5.com>
 
 	* general/is_duplicate_entry.m , general/isdir.m, general/isscalar.m,
 	general/issquare.m, general/isvector.m, linear-algebra/isdefinite.m,
 	linear-algebra/ishermitian.m, linear-algebra/issymmetric.m,
 	miscellaneous/isappdata.m, miscellaneous/ismac.m, miscellaneous/ispc.m,
 	miscellaneous/isunix.m, plot/isfigure.m, plot/ishold.m, plot/isprop.m,
 	set/ismember.m, specfun/isprime.m, strings/isletter.m,
diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -461,16 +461,17 @@ function [hlegend2, hobjects2, hplot2, t
                           "yticklabel", "", "zticklabel", "", 
                           "xlim", [0, 1], "ylim", [0, 1], "visible", "off",
                           "activepositionproperty", "position");
         else
           addprops = false;
           axes (hlegend);
           delete (get (hlegend, "children"));
         endif
+
         ## Add text label to the axis first, checking their extents
         nentries = numel (hplots);
         texthandle = [];
         maxwidth = 0;
         maxheight = 0;
         for k = 1 : nentries
           if (strcmp (textpos, "right"))
             texthandle = [texthandle, text(0, 0, text_strings {k}, 
@@ -769,18 +770,19 @@ function [hlegend2, hobjects2, hplot2, t
   endif
 
 endfunction
 
 function updatelegend (h, d)
   persistent recursive = false;
   if (! recursive)
     recursive = true;
+    hax = getfield (get (h, "userdata"), "handle");
     [hplots, text_strings] = getlegenddata (h);
-    h = legend (fliplr (hplots), get (h, "string"));
+    h = legend (hax, flipud (hplots), get (h, "string"));
     recursive = false;
   endif
 endfunction
 
 function updatelegendtext (h, d)
   kids = get (h, "children");
   k = numel (kids);
   in = get (h, "interpreter");
@@ -982,30 +984,47 @@ function [hplots, text_strings] = getleg
       endif
     endif
   endwhile
 endfunction
 
 %!demo
 %! clf
 %! x = 0:1;
-%! plot (x, x, ";1;", x, 2*x, x, 3*x, ";3;")
-%! title ("1 is Blue, and 3 is Red")
+%! plot (x, x, ";I am Blue;", x, 2*x, x, 3*x, ";I am Red;")
 
 %!demo
 %! clf
 %! plot(1:10, 1:10, 1:10, fliplr(1:10));
 %! title("incline is blue and decline is green");
-%! legend({"I'm blue", "I'm green"}, "location", "east");
+%! legend({"I am blue", "I am green"}, "location", "east");
+%! legend({"I am blue", "I am green"}, "location", "east");
+%! legend hide
+%! legend show
 
 %!demo
 %! clf
 %! plot(1:10, 1:10, 1:10, fliplr(1:10));
-%! title("incline is blue and decline is green");
-%! legend("I'm blue", "I'm green", "location", "east");
+%! title("Legend is hidden")
+%! legend({"I am blue", "I am green"}, "location", "east");
+%! legend hide
+
+%!demo
+%! clf
+%! plot(1:10, 1:10, 1:10, fliplr(1:10));
+%! title("Legend with box on")
+%! legend({"I am blue", "I am green"}, "location", "east");
+%! legend boxon
+
+%!demo
+%! clf
+%! plot(1:10, 1:10, 1:10, fliplr(1:10));
+%! title("Legend with text to the right")
+%! legend({"I am blue", "I am green"}, "location", "east");
+%! legend right
 
 %!demo
 %! clf
 %! plot(1:10, 1:10);
 %! title("a very long label can sometimes cause problems");
 %! legend({"hello world"}, "location", "northeastoutside");
 
 %!demo
