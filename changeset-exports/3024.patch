# HG changeset patch
# User jwe
# Date 865401094 0
#      Wed Jun 04 05:11:34 1997 +0000
# Node ID 95e8b5c4824a09af0cad869a6378b4cbff1eb5a0
# Parent  0d37334d13ab017e9a0930a472afca9babe98866
[project @ 1997-06-04 05:06:26 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+Wed Jun  4 00:07:29 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in (OCTAVE_PROGRAM_INVOCATION_NAME): Delete check.
+	* aclocal.m4 (OCTAVE_PROGRAM_INVOCATION_NAME): Delete macro.
+
 Mon Jun  2 13:56:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Move checks for RANLIB, AR, and ARFLAGS before
 	checks for libf2c.
 
 Fri May 30 14:59:59 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* configure.in: Fix typo in check for $with_f77.
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -280,28 +280,16 @@ Interpreter:
     current implementation of `:' won't work. 
 
   * If foo.oct and foo.m both exist in the LOADPATH, Octave will
     always find foo.oct, even if foo.m appears earlier in the list of
     directories.  This should be fixed (in the kpathsearch library) to
     find the first .oct or .m file in the path, and only prefer .oct
     over .m if both files are in the same directory.
 
-  * Fix the grammar to allow structure references and index operations
-    for for anonymous expressions.  For example, it should be possible
-    to write
-
-      localtime (time ()) . hour;
-
-    to get the current hour.  Likewise, it should be possible to write
-
-      svd (A) (1:13);
-
-    to extract the first 13 singular values of the matrix A.
-
   * Consider grouping all preference variables in a structure instead
     of further polluting the namespace.  Maybe `Octave_options.xxx'?
 
   * Rewrite functions in input.cc to do the right thing in all cases
     of using readline, forced interactive behavior, echoing of input,
     etc.
 
   * Make it possible to redefine built-in variables and functions.
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -426,29 +426,16 @@ main ()
   exit (rstr1 == rstr2 ? 0 : 1);
 }], octave_cv_func_putenv_malloc=yes, octave_cv_func_putenv_malloc=no,
     octave_cv_func_putenv_malloc=no)])dnl
 AC_MSG_RESULT($octave_cv_func_putenv_malloc)
 if test $octave_cv_func_putenv_malloc = yes; then
   AC_DEFINE(SMART_PUTENV)
 fi])
 dnl
-dnl This is a GNU libc invention, and this check is also from Karl
-dnl Berry's kpathsea library.
-dnl
-AC_DEFUN(OCTAVE_PROGRAM_INVOCATION_NAME,
-[AC_MSG_CHECKING(whether program_invocation_name is predefined)
-AC_CACHE_VAL(octave_cv_var_program_inv_name,
-[AC_TRY_LINK(, [main() { program_invocation_name = "love"; }],
-  octave_cv_var_program_inv_name=yes, octave_cv_var_program_inv_name=no)])dnl
-AC_MSG_RESULT($octave_cv_var_program_inv_name)
-if test $octave_cv_var_program_inv_name = yes; then
-  AC_DEFINE(HAVE_PROGRAM_INVOCATION_NAME)
-fi])
-dnl
 dnl These two checks for signal functions were originally part of the
 dnl aclocal.m4 file distributed with bash 2.0.
 dnl
 dnl Check type of signal routines (posix, 4.2bsd, 4.1bsd or v7)
 AC_DEFUN(OCTAVE_SIGNAL_CHECK,
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_MSG_CHECKING(for type of signal functions)
 AC_CACHE_VAL(octave_cv_signal_vintage,
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.270 $)
+AC_REVISION($Revision: 1.272 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -40,16 +40,17 @@ OCTAVE_SET_DEFAULT(datadir)
 OCTAVE_SET_DEFAULT(libdir)
 OCTAVE_SET_DEFAULT(libexecdir)
 OCTAVE_SET_DEFAULT(includedir)
 OCTAVE_SET_DEFAULT(mandir)
 OCTAVE_SET_DEFAULT(infodir)
 OCTAVE_SET_DEFAULT(man1dir, '$(mandir)/man1')
 OCTAVE_SET_DEFAULT(man1ext, '.1')
 OCTAVE_SET_DEFAULT(infofile, '$(infodir)/octave.info')
+OCTAVE_SET_DEFAULT(octlibdir, '$(libdir)/octave-$(version)')
 OCTAVE_SET_DEFAULT(octincludedir, '$(includedir)/octave')
 OCTAVE_SET_DEFAULT(fcnfiledir, '$(datadir)/octave/m')
 OCTAVE_SET_DEFAULT(localfcnfiledir, '$(datadir)/octave/site/m')
 OCTAVE_SET_DEFAULT(localfcnfilepath, '$(localfcnfiledir)//')
 OCTAVE_SET_DEFAULT(archlibdir, '$(libexecdir)/octave/exec/$(target_host_type)')
 OCTAVE_SET_DEFAULT(localarchlibdir, '$(libexecdir)/octave/site/exec/$(target_host_type)')
 OCTAVE_SET_DEFAULT(octfiledir, '$(libexecdir)/octave/oct/$(target_host_type)')
 OCTAVE_SET_DEFAULT(localoctfiledir, '$(libexecdir)/octave/site/oct/$(target_host_type)')
@@ -728,17 +729,16 @@ AC_CHECK_FUNCS(atexit bcopy bzero dup2 e
   gethostname getpgrp getpid getppid getpwent getpwnam getpwuid \
   gettimeofday getuid lstat memmove mkdir mkfifo on_exit pipe putenv \
   rename rindex rmdir setgrent setpwent setvbuf sigaction sigpending \
   sigprocmask sigsuspend stat strcasecmp strdup strerror stricmp \
   strncasecmp strnicmp tempnam umask unlink usleep vfprintf vsprintf \
   waitpid)
 
 OCTAVE_SMART_PUTENV
-OCTAVE_PROGRAM_INVOCATION_NAME
 
 LIBDLFCN=
 DLFCN_INCFLAGS=
 if test "$WITH_DL" = yes || test "$WITH_DL" = maybe; then
   case "$canonical_host_type" in
     rs6000-ibm-aix* | powerpc-ibm-aix*)
       LIBDLFCN="-ldlfcn -ll -lld"
       DLFCN_INCFLAGS='-I$(top_srcdir)/dlfcn -I$(TOPDIR)/dlfcn'
diff --git a/kpathsea/ChangeLog b/kpathsea/ChangeLog
--- a/kpathsea/ChangeLog
+++ b/kpathsea/ChangeLog
@@ -1,10 +1,13 @@
 Tue Jun  3 23:48:22 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* absolute.c (kpse_absolute_p): Recognize foo/bar as an
+	explicit_relative file name.
+
 	* common.ac: (program_invocation_name): AC_TRY_LINK only requires
 	function body.  Add declaration for program_invocation_name so gcc
 	won't complain about undeclared variable.
 
 Thu May 22 22:04:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in: Look in make instead of ../make for files to include.
 	Do ac_includes by hand, since ac_include requires an extension to
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+Wed Jun  4 00:08:55 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* pathsearch.h, pathsearch.cc (dir_pat::set_program_name):
+	New static function.
+
 Mon Jun  2 12:44:14 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lo-mappers.cc (fix): Use floor and ceil instead of casting to int.
 
 Thu May 22 16:20:43 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* cmd-edit.h, cmd-edit.cc: Rename set_paren_string_delimiters to
 	set_basic_quote_characters, to match new version of readline.
diff --git a/liboctave/pathsearch.cc b/liboctave/pathsearch.cc
--- a/liboctave/pathsearch.cc
+++ b/liboctave/pathsearch.cc
@@ -23,35 +23,32 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <cstdlib>
 
 #include <string>
 
+#include "lo-utils.h"
 #include "pathsearch.h"
 #include "str-vec.h"
+#include "str-vec.h"
 
 extern "C"
 {
 // Have to redefine these because they conflict with new C++ keywords
 // or otherwise cause trouble...
-#define boolean kpse_boolean
-#define true kpse_true
-#define false kpse_false
 #define string kpse_string
 
 #include <kpathsea/pathsearch.h>
+#include <kpathsea/progname.h>
 
 extern unsigned int kpathsea_debug;
 
-#undef true
-#undef false
-#undef boolean
 #undef string
 }
 
 bool dir_path::kpathsea_debug_initialized = false;
 
 string_vector
 dir_path::elements (void)
 {
@@ -101,18 +98,17 @@ dir_path::all_directories (void)
 
 string
 dir_path::find_first (const string& nm)
 {
   string retval;
 
   if (initialized)
     {
-      char *tmp = kpse_path_search (p.c_str (), nm.c_str (),
-				    kpse_true);
+      char *tmp = kpse_path_search (p.c_str (), nm.c_str (), true);
       if (tmp)
 	{
 	  retval = tmp;
 	  free (tmp);
 	}
     }
 
   return retval;
@@ -137,16 +133,22 @@ dir_path::find_all (const string& nm)
       for (int i = 0; i < count; i++)
 	retval[i] = tmp[i];
     }
 
   return retval;
 }
 
 void
+dir_path::set_program_name (const char *nm)
+{
+  kpse_set_progname (nm);
+}
+
+void
 dir_path::init (void)
 {
   initialized = false;
 
   if (! kpathsea_debug_initialized)
     {
       char *s = getenv ("KPATHSEA_DEBUG");
 
diff --git a/liboctave/pathsearch.h b/liboctave/pathsearch.h
--- a/liboctave/pathsearch.h
+++ b/liboctave/pathsearch.h
@@ -61,16 +61,18 @@ public:
   string_vector elements (void);
   string_vector all_directories (void);
 
   string find_first (const string&);
   string find (const string& nm) { return find_first (nm); }
 
   string_vector find_all (const string&);
 
+  static void set_program_name (const char *);
+
 private:
 
   // The colon separated list.
   string p;
 
   // TRUE means we've unpacked p.
   bool initialized;
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Tue Jun  3 12:16:00 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* miscellaneous/path.m: New file.
+
 Wed May 21 11:45:31 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* miscellaneous/bug_report.m: Pass file id to dump_prefs, not file
 	name.
 
 Mon May 12 02:04:01 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* specfun/erfinv.m: Add missing semicolon.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+Wed Jun  4 00:09:42 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* octave.cc (main): Call dir_path::set_program_name here.
+
 Tue Jun  3 16:47:34 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* variables.cc (symbol_out_of_date): Make it work again.
 
 	* parse.y (parse_and_execute): Move here from toplev.cc
 	(default_eval_print_flag): Likewise.
 	(safe_fclose): Likewise.
 	(eval_string): Likewise.
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -343,16 +343,18 @@ maximum_braindamage (void)
 
 // You guessed it.
 
 int
 main (int argc, char **argv)
 {
   octave_env::set_program_name (argv[0]);
 
+  dir_path::set_program_name (argv[0]);
+
   // The order of these calls is important.  The call to
   // install_defaults must come before install_builtins because
   // default variable values must be available for the variables to be
   // installed, and the call to install_builtins must come before the
   // options are processed because some command line options override
   // defaults by calling bind_builtin_variable.
 
   sysdep_init ();
