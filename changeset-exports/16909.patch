# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1373126805 14400
#      Sat Jul 06 12:06:45 2013 -0400
# Node ID 8f9ed9d8a4788229d8f39fac9281d79ed3aa4fae
# Parent  1c4be5dcacd543d442c43ec5130dd21f3f9156db
Allow gnuplot to handle keybox and axes positioning.

scripts/plot/legend.m: When the legend is place outside the plotbox, allow
gnuplot to handle its placement and the resizing of the plotbox.
Rename extra_offset to gnuplot_offset, and add some line continuations.

diff --git a/scripts/plot/legend.m b/scripts/plot/legend.m
--- a/scripts/plot/legend.m
+++ b/scripts/plot/legend.m
@@ -673,36 +673,37 @@ function [hlegend2, hobjects2, hplot2, t
 
         ## Place the legend in the desired location
         if (strcmp (orientation, "vertical"))
           lpos = [0, 0, num2 * xstep, num1 * ystep];
         else
           lpos = [0, 0, num1 * xstep, num2 * ystep];
         endif
 
-        if (strcmp (get (fig, "__graphics_toolkit__"), "gnuplot"))
+        gnuplot =  strcmp (get (fig, "__graphics_toolkit__"), "gnuplot");
+        if (gnuplot)
           ## Gnuplot places the key (legend) at edge of the figure window.
           ## OpenGL places the legend box at edge of the unmodified axes
           ## position.
           if (isempty (strfind (location, "east")))
-            extra_offset = unmodified_axes_outerposition(1) ...
+            gnuplot_offset = unmodified_axes_outerposition(1) ...
                          + unmodified_axes_outerposition(3) ...
                          - unmodified_axes_position(1) ...
                          - unmodified_axes_position(3);
           else
-            extra_offset = unmodified_axes_position(1) ...
+            gnuplot_offset = unmodified_axes_position(1) ...
                          - unmodified_axes_outerposition(1);
           endif
           ## FIXME - the "fontsize" is added to match the behavior of OpenGL.
           ## This implies that a change in fontsize should trigger a listener
           ## to update the legend.  The "2" was determined using a long legend
           ## key in the absence of any subplots.
-          extra_offset = extra_offset - 2 * fontsize;
+          gnuplot_offset = gnuplot_offset - 2 * fontsize;
         else
-          extra_offset = 0;
+          gnuplot_offset = 0;
         endif
 
         switch (location)
           case "north"
             if (outside)
               lpos = [ca_pos(1) + (ca_pos(3) - lpos(3)) / 2, ...
                       ca_outpos(2) + ca_outpos(4) - lpos(4) - ypad, lpos(3), ...
                       lpos(4)];
@@ -722,74 +723,74 @@ function [hlegend2, hobjects2, hplot2, t
               lpos = [ca_pos(1) + (ca_pos(3) - lpos(3)) / 2, ...
                       ca_pos(2) + ypad, lpos(3), lpos(4)];
             endif
           case "east"
             if (outside)
               lpos = [ca_outpos(1) + ca_outpos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + (ca_pos(4) - lpos(4)) / 2, lpos(3), lpos(4)];
               new_pos = [ca_pos(1), ca_pos(2), ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) + ca_pos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + (ca_pos(4) - lpos(4)) / 2, lpos(3), lpos(4)];
             endif
           case "west"
             if (outside)
               lpos = [ca_outpos(1) + ypad, ...
                       ca_pos(2) + (ca_pos(4) - lpos(4)) / 2, ...
                       lpos(3), lpos(4)];
               new_pos = [ca_pos(1) + lpos(3), ca_pos(2), ...
                          ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(1) = new_pos(1) - extra_offset;
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(1) = new_pos(1) - gnuplot_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) +  ypad, ...
                       ca_pos(2) + (ca_pos(4) - lpos(4)) / 2, lpos(3), lpos(4)];
             endif
           case "northeast"
             if (outside)
               lpos = [ca_outpos(1) + ca_outpos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + ca_pos(4) - lpos(4), lpos(3), lpos(4)];
               new_pos = [ca_pos(1), ca_pos(2), ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) + ca_pos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + ca_pos(4) - lpos(4) - ypad, lpos(3), lpos(4)];
             endif
           case "northwest"
             if (outside)
               lpos = [ca_outpos(1) + ypad , ca_pos(2) + ca_pos(4) - lpos(4), ...
                       lpos(3), lpos(4)];
               new_pos = [ca_pos(1) + lpos(3), ca_pos(2), ...
                          ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(1) = new_pos(1) - extra_offset;
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(1) = new_pos(1) - gnuplot_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) + ypad, ...
                       ca_pos(2) + ca_pos(4) - lpos(4) - ypad, lpos(3), lpos(4)];
             endif
           case "southeast"
             if (outside)
               lpos = [ca_outpos(1) + ca_outpos(3) - lpos(3) - ypad, ...
                       ca_pos(2), lpos(3), lpos(4)];
               new_pos = [ca_pos(1), ca_pos(2), ...
                          ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) + ca_pos(3) - lpos(3) - ypad, ...
                       ca_pos(2) + ypad, lpos(3), lpos(4)];
             endif
           case "southwest"
             if (outside)
               lpos = [ca_outpos(1) + ypad, ca_pos(2), lpos(3), lpos(4)];
               new_pos = [ca_pos(1) + lpos(3), ca_pos(2), ...
                          ca_pos(3) - lpos(3), ca_pos(4)];
-              new_pos(1) = new_pos(1) - extra_offset;
-              new_pos(3) = new_pos(3) + extra_offset;
+              new_pos(1) = new_pos(1) - gnuplot_offset;
+              new_pos(3) = new_pos(3) + gnuplot_offset;
             else
               lpos = [ca_pos(1) + ypad, ca_pos(2) + ypad, lpos(3), lpos(4)];
             endif
         endswitch
 
         units = get (hlegend, "units");
         unwind_protect
           set (hlegend, "units", "points");
@@ -897,27 +898,38 @@ function [hlegend2, hobjects2, hplot2, t
         ## legend is "outside" the plot and create a listener to
         ## resize axis to original size if the legend is deleted,
         ## hidden, or shown.
         if (outside)
           for i = 1 : numel (ca)
             units = get (ca(i), "units");
             unwind_protect
               set (ca(i), "units", "points");
-              set (ca(i), "position", new_pos);
+              if (gnuplot && numel (ca) == 1)
+                ## Let Gnuplot handle the positioning of the keybox.
+                ## This violates strict Matlab compatibility, but reliably
+                ## renders an esthetic result.
+                set (ca(i), "position",  unmodified_axes_position);
+                set (ca(i), "activepositionproperty", "outerposition")
+              else
+                ## numel (ca) > 1 for axes overlays (like plotyy)
+                set (ca(i), "position", new_pos);
+              endif
             unwind_protect_cleanup
               set (ca(i), "units", units);
             end_unwind_protect
           endfor
 
           set (hlegend, "deletefcn", {@deletelegend2, ca, ...
                                       unmodified_axes_position, ...
-                                      unmodified_axes_outerposition, t1, hplots});
+                                      unmodified_axes_outerposition, ...
+                                      t1, hplots});
           addlistener (hlegend, "visible", {@hideshowlegend, ca, ...
-                                            unmodified_axes_position, new_pos});
+                                            unmodified_axes_position, ...
+                                            new_pos});
         else
           set (hlegend, "deletefcn", {@deletelegend2, ca, [], [], t1, hplots});
         endif
 
         if (addprops)
           addproperty ("edgecolor", hlegend, "color", [0, 0, 0]);
           addproperty ("textcolor", hlegend, "color", [0, 0, 0]);
           locations = {"north", "south", "east", "west", ...
