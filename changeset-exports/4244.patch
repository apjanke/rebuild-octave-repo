# HG changeset patch
# User jwe
# Date 1041040805 0
#      Sat Dec 28 02:00:05 2002 +0000
# Node ID 189df16144fc95e830f5b03b1fad05491801bff2
# Parent  7e4d5b5520e5cd5483e6c899a1c3a1d912c5d5b0
[project @ 2002-12-28 02:00:05 by jwe]

diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -3371,46 +3371,45 @@ parse_fcn_file (const std::string& ff, b
 
 bool
 load_fcn_from_file (symbol_record *sym_rec, bool exec_script)
 {
   bool script_file_executed = false;
 
   std::string nm = sym_rec->name ();
 
-  static string_vector names (2);
+  string_vector names (2);
 
   names[0] = nm + ".oct";
   names[1] = nm + ".m";
 
   std::string file
    = octave_env::make_absolute (Vload_path_dir_path.find_first_of (names),
                                 octave_env::getcwd ());
 
   int len = file.length ();
 
-  if (file.substr (len-4, len-1) == ".oct")
+  if (len > 4 && file.substr (len-4, len-1) == ".oct")
     {
       if (octave_dynamic_loader::load (nm, file))
         force_link_to_function (nm);
     }
-  else
+  else if (len > 2)
     {
       // These are needed by yyparse.
 
       unwind_protect::begin_frame ("load_fcn_from_file");
 
       unwind_protect_str (curr_fcn_file_name);
       unwind_protect_str (curr_fcn_file_full_name);
 
       curr_fcn_file_name = nm;
       curr_fcn_file_full_name = file;
 
-      if (file.length () > 0)
-	script_file_executed = parse_fcn_file (file, exec_script);
+      script_file_executed = parse_fcn_file (file, exec_script);
 
       if (! (error_state || script_file_executed))
 	force_link_to_function (nm);
 
       unwind_protect::run_frame ("load_fcn_from_file");
     }
 
   return script_file_executed;
