# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1382034557 -7200
#      Thu Oct 17 20:29:17 2013 +0200
# Node ID c060ad097056ff3037191412486c7dc1d7da3c6b
# Parent  4e5c17b3294af052ff28578583ace36eaaaceeaf
add menu entries to the editor for directly accessing the editor's settings

* settings-dialog.ui: tabs with self explaining names
* settings-dialog.cc(constructor): name of desired tab as new parameter,
  open the last or desired tab depending on this parameter;
  (destructor, write_lexer_settings): update to new tab names
* settings-dialog.h: new parameter in constructor

* main-window.cc(process_settings_dialog_request): name of desired tab as new
  parameter, settings-dialog is created with this parameter
* main-window.h: new parameter for process_settings_dialog_request

* file-editor.cc(request_preferences,request_styles_preferences): new slots
  emtting a new signal for opening the settings dialog via the main window;
  (construct): new actions for opening the editor and editor styles settings
* file-editor.h: new actions, related slots and signal for main window

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -746,16 +746,28 @@ file_editor::notice_settings (const QSet
 {
   int icon_size = settings->value ("toolbar_icon_size", 24).toInt ();
   _tool_bar->setIconSize (QSize (icon_size, icon_size));
   // Relay signal to file editor tabs.
   emit fetab_settings_changed (settings);
 }
 
 void
+file_editor::request_preferences (bool)
+{
+  emit request_settings_dialog ("editor");
+}
+
+void
+file_editor::request_styles_preferences (bool)
+{
+  emit request_settings_dialog ("editor_styles");
+}
+
+void
 file_editor::construct (void)
 {
   QWidget *editor_widget = new QWidget (this);
 
   // FIXME -- what was the intended purpose of this unused variable?
   // QStyle *editor_style = QApplication::style ();
 
   _menu_bar = new QMenuBar (editor_widget);
@@ -935,16 +947,23 @@ file_editor::construct (void)
   editMenu->addAction (_uncomment_selection_action);
   editMenu->addSeparator ();
   editMenu->addAction (_toggle_bookmark_action);
   editMenu->addAction (_next_bookmark_action);
   editMenu->addAction (_previous_bookmark_action);
   editMenu->addAction (_remove_bookmark_action);
   editMenu->addSeparator ();
   editMenu->addAction (_goto_line_action);
+  editMenu->addSeparator ();
+  _preferences_action =
+     editMenu->addAction (QIcon (":/actions/icons/configure.png"),
+       tr ("&Preferences"), this, SLOT (request_preferences (bool)));
+  _styles_preferences_action =
+    editMenu->addAction (QIcon (":/actions/icons/configure.png"),
+      tr ("&Styles Preferences"), this, SLOT (request_styles_preferences (bool)));
   _menu_bar->addMenu (editMenu);
 
   _debug_menu = new QMenu (tr ("&Debug"), _menu_bar);
   _debug_menu->addAction (toggle_breakpoint_action);
   _debug_menu->addAction (next_breakpoint_action);
   _debug_menu->addAction (previous_breakpoint_action);
   _debug_menu->addAction (remove_all_breakpoints_action);
   _debug_menu->addSeparator ();
@@ -976,16 +995,19 @@ file_editor::construct (void)
   vbox_layout->addWidget (_menu_bar);
   vbox_layout->addWidget (_tool_bar);
   vbox_layout->addWidget (_tab_widget);
   vbox_layout->setMargin (0);
   editor_widget->setLayout (vbox_layout);
   setWidget (editor_widget);
 
   // signals
+  connect (this, SIGNAL (request_settings_dialog (const QString&)),
+           main_win (), SLOT (process_settings_dialog_request (const QString&)));
+
   connect (main_win (), SIGNAL (new_file_signal (const QString&)),
            this, SLOT (request_new_file (const QString&)));
 
   connect (main_win (), SIGNAL (open_file_signal (const QString&)),
            this, SLOT (request_open_file (const QString&)));
 
   connect (new_action, SIGNAL (triggered ()),
            this, SLOT (request_new_file ()));
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -93,16 +93,17 @@ signals:
   void fetab_uncomment_selected_text (const QWidget* ID);
   void fetab_find (const QWidget* ID);
   void fetab_goto_line (const QWidget* ID, int line = -1);
   void fetab_insert_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_delete_debugger_pointer (const QWidget* ID, int line = -1);
   void fetab_do_breakpoint_marker (bool insert, const QWidget* ID,
                                    int line = -1);
   void fetab_set_focus (const QWidget* ID);
+  void request_settings_dialog (const QString&);
 
 public slots:
   void focus (void);
 
   void request_new_file (const QString& commands);
   void request_new_script (const QString& commands);
   void request_new_function (const QString& commands);
   void request_open_file (void);
@@ -168,16 +169,18 @@ protected slots:
   void copyClipboard ();
   void pasteClipboard ();
 
 private slots:
 
   void request_open_file (const QString& fileName, int line = -1,
                           bool debug_pointer = false,
                           bool breakpoint_marker = false, bool insert = true);
+  void request_preferences (bool);
+  void request_styles_preferences (bool);
 
 private:
 
   void construct (void);
   void add_file_editor_tab (file_editor_tab *f, const QString& fn);
   void save_file_as (QWidget *fetabID = 0);
   void mru_menu_update (void);
 
@@ -217,16 +220,19 @@ private:
   QAction *_save_as_action;
   QAction *_close_action;
   QAction *_close_all_action;
   QAction *_close_others_action;
 
   QAction *_redo_action;
   QAction *_undo_action;
 
+  QAction *_preferences_action;
+  QAction *_styles_preferences_action;
+
   QTabWidget *_tab_widget;
 
   int _marker_breakpoint;
 
   enum { MaxMRUFiles = 10 };
   QMenu *_mru_file_menu;
   QAction *_mru_file_actions[MaxMRUFiles];
   QStringList _mru_files;
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -301,19 +301,19 @@ main_window::open_contribute_page (void)
 
 void
 main_window::open_developer_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://octave.org/get-involved.html"));
 }
 
 void
-main_window::process_settings_dialog_request (void)
+main_window::process_settings_dialog_request (const QString& desired_tab)
 {
-  settings_dialog *settingsDialog = new settings_dialog (this);
+  settings_dialog *settingsDialog = new settings_dialog (this, desired_tab);
   int change_settings = settingsDialog->exec ();
   if (change_settings == QDialog::Accepted)
     {
       settingsDialog->write_changed_settings ();
       QSettings *settings = resource_manager::get_settings ();
       if (settings)
         emit settings_changed (settings);
     }
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -110,17 +110,17 @@ public slots:
   void open_file (const QString& file_name = QString ());
   void open_online_documentation_page (void);
   void display_release_notes (void);
   void open_bug_tracker_page (void);
   void open_octave_packages_page (void);
   void open_agora_page (void);
   void open_contribute_page (void);
   void open_developer_page (void);
-  void process_settings_dialog_request (void);
+  void process_settings_dialog_request (const QString& desired_tab = QString ());
   void show_about_octave (void);
   void notice_settings (const QSettings *settings);
   void prepare_to_exit (void);
   void exit (int status);
   void reset_windows (void);
 
   void change_directory (const QString& dir);
   void browse_for_directory (void);
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -26,16 +26,17 @@ along with Octave; see the file COPYING.
 
 #include "resource-manager.h"
 #include "workspace-model.h"
 #include "settings-dialog.h"
 #include "ui-settings-dialog.h"
 #include <QDir>
 #include <QFileInfo>
 #include <QVector>
+#include <QHash>
 
 #ifdef HAVE_QSCINTILLA
 #include <QScrollArea>
 
 #if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
 #define HAVE_LEXER_OCTAVE
 #include <Qsci/qscilexeroctave.h>
 #elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
@@ -45,17 +46,17 @@ along with Octave; see the file COPYING.
 
 #include <Qsci/qscilexercpp.h>
 #include <Qsci/qscilexerbash.h>
 #include <Qsci/qscilexerperl.h>
 #include <Qsci/qscilexerbatch.h>
 #include <Qsci/qscilexerdiff.h>
 #endif
 
-settings_dialog::settings_dialog (QWidget *p):
+settings_dialog::settings_dialog (QWidget *p, const QString& desired_tab):
   QDialog (p), ui (new Ui::settings_dialog)
 {
   ui->setupUi (this);
 
   QSettings *settings = resource_manager::get_settings ();
   // FIXME -- what should happen if settings is 0?
 
   // look for available language files and the actual settings
@@ -189,17 +190,28 @@ settings_dialog::settings_dialog (QWidge
   lexer = new QsciLexerDiff ();
   read_lexer_settings (lexer,settings);
   delete lexer;
   lexer = new QsciLexerBash ();
   read_lexer_settings (lexer,settings);
   delete lexer;
 #endif
 
-  ui->tabWidget->setCurrentIndex (settings->value("settings/last_tab",0).toInt ());
+  // which tab is the desired one?
+  if (desired_tab.isEmpty ())
+    ui->tabWidget->setCurrentIndex (settings->value("settings/last_tab",0).toInt ());
+  else
+    {
+      QHash <QString, QWidget*> tab_hash;
+      tab_hash["editor"] = ui->tab_editor;
+      tab_hash["editor_styles"] = ui->tab_editor_styles;
+      ui->tabWidget->setCurrentIndex (ui->tabWidget->indexOf (tab_hash.value (desired_tab)));
+    }
+
+
 }
 
 settings_dialog::~settings_dialog ()
 {
   delete ui;
 }
 
 
@@ -298,19 +310,19 @@ settings_dialog::read_lexer_settings (Qs
       style_grid->addWidget (bg_color[i],        i, column++);
     }
   // place grid with elements into the tab
   QScrollArea *scroll_area = new QScrollArea ();
   QWidget *scroll_area_contents = new QWidget ();
   scroll_area_contents->setObjectName (QString (lexer->language ())+"_styles");
   scroll_area_contents->setLayout (style_grid);
   scroll_area->setWidget (scroll_area_contents);
-  ui->tabs_editor_styles->addTab (scroll_area,lexer->language ());
+  ui->tabs_editor_lexers->addTab (scroll_area,lexer->language ());
 
-  ui->tabs_editor_styles->setCurrentIndex (
+  ui->tabs_editor_lexers->setCurrentIndex (
           settings->value("settings/last_editor_styles_tab",0).toInt ());
 }
 #endif  
 
 void
 settings_dialog::read_workspace_colors (QSettings *settings)
 {
 
@@ -494,17 +506,17 @@ settings_dialog::write_changed_settings 
 
   settings->setValue("settings/last_tab",ui->tabWidget->currentIndex ());
 }
 
 #ifdef HAVE_QSCINTILLA
 void
 settings_dialog::write_lexer_settings (QsciLexer *lexer, QSettings *settings)
 {
-  QWidget *tab = ui->tabs_editor_styles->
+  QWidget *tab = ui->tabs_editor_lexers->
             findChild <QWidget *>(QString (lexer->language ())+"_styles");
   int styles[MaxLexerStyles];  // array for saving valid styles (enum is not continuous)
   int max_style = get_valid_lexer_styles (lexer, styles);
   QFontComboBox *select_font;
   QSpinBox *font_size;
   QCheckBox *attrib_font[3];
   color_picker *color;
   color_picker *bg_color;
@@ -570,17 +582,17 @@ settings_dialog::write_lexer_settings (Q
                 lexer->setPaper (bg_color->color (),styles[i]);
             }
         }
     }
 
   lexer->writeSettings (*settings);
 
   settings->setValue (
-    "settings/last_editor_styles_tab",ui->tabs_editor_styles->currentIndex ());
+    "settings/last_editor_styles_tab",ui->tabs_editor_lexers->currentIndex ());
 }
 #endif
 
 void
 settings_dialog::write_workspace_colors (QSettings *settings)
 {
 
   QString class_chars = resource_manager::storage_class_chars ();
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -35,17 +35,17 @@ class QsciLexer;
 namespace Ui
 {
   class settings_dialog;
 }
 
 class settings_dialog:public QDialog
 {
   Q_OBJECT public:
-  explicit settings_dialog (QWidget * parent);
+  explicit settings_dialog (QWidget * parent, const QString& desired_tab = QString ());
   ~settings_dialog ();
   void write_changed_settings ();
 
 private:
   Ui::settings_dialog * ui;
 #ifdef HAVE_QSCINTILLA
   void read_lexer_settings (QsciLexer *lexer, QSettings *settings);
   void write_lexer_settings (QsciLexer *lexer, QSettings *settings);
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -27,19 +27,19 @@
   </property>
   <property name="windowTitle">
    <string>Settings</string>
   </property>
   <layout class="QVBoxLayout" name="verticalLayout_2">
    <item>
     <widget class="QTabWidget" name="tabWidget">
      <property name="currentIndex">
-      <number>1</number>
+      <number>2</number>
      </property>
-     <widget class="QWidget" name="tab_4">
+     <widget class="QWidget" name="tab_general">
       <property name="enabled">
        <bool>true</bool>
       </property>
       <attribute name="title">
        <string>General</string>
       </attribute>
       <widget class="QWidget" name="verticalLayoutWidget">
        <property name="geometry">
@@ -185,30 +185,30 @@
             <height>40</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </widget>
      </widget>
-     <widget class="QWidget" name="tab">
+     <widget class="QWidget" name="tab_editor">
       <attribute name="title">
        <string>Editor</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_6">
        <item>
         <layout class="QVBoxLayout" name="verticalLayout_9">
          <property name="spacing">
           <number>4</number>
          </property>
          <item>
           <layout class="QGridLayout" name="editor_common_settings_grid">
            <property name="spacing">
-            <number>-1</number>
+            <number>6</number>
            </property>
            <item row="2" column="0">
             <widget class="QCheckBox" name="editor_ws_checkbox">
              <property name="text">
               <string>Show white space</string>
              </property>
             </widget>
            </item>
@@ -778,17 +778,17 @@
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="tab_6">
+     <widget class="QWidget" name="tab_editor_styles">
       <attribute name="title">
        <string>Editor Styles</string>
       </attribute>
       <widget class="QWidget" name="verticalLayoutWidget_4">
        <property name="geometry">
         <rect>
          <x>0</x>
          <y>0</y>
@@ -821,29 +821,29 @@
            <bool>true</bool>
           </property>
           <property name="margin">
            <number>4</number>
           </property>
          </widget>
         </item>
         <item>
-         <widget class="QTabWidget" name="tabs_editor_styles">
+         <widget class="QTabWidget" name="tabs_editor_lexers">
           <property name="maximumSize">
            <size>
             <width>676</width>
             <height>351</height>
            </size>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
      </widget>
-     <widget class="QWidget" name="tab_5">
+     <widget class="QWidget" name="tab_terminal">
       <attribute name="title">
        <string>Terminal</string>
       </attribute>
       <widget class="QWidget" name="horizontalLayoutWidget">
        <property name="geometry">
         <rect>
          <x>10</x>
          <y>50</y>
@@ -1007,17 +1007,17 @@
             <height>20</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </widget>
      </widget>
-     <widget class="QWidget" name="tab_2">
+     <widget class="QWidget" name="tab_file_browser">
       <attribute name="title">
        <string>File Browser</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_3">
        <item>
         <widget class="QCheckBox" name="showFileSize">
          <property name="text">
           <string>Show file size</string>
@@ -1134,17 +1134,17 @@
             <height>40</height>
            </size>
           </property>
          </spacer>
         </item>
        </layout>
       </widget>
      </widget>
-     <widget class="QWidget" name="tab_3">
+     <widget class="QWidget" name="tab_network">
       <attribute name="title">
        <string>Network</string>
       </attribute>
       <layout class="QVBoxLayout" name="verticalLayout_4">
        <item>
         <layout class="QGridLayout" name="gridLayout_5">
          <item row="1" column="1">
           <widget class="QLabel" name="label_4">
