# HG changeset patch
# User jwe
# Date 1191976397 0
#      Wed Oct 10 00:33:17 2007 +0000
# Node ID 963878fa32678212fb50b16d35683d6ba5c27ab0
# Parent  3fbf49bde6d4a5648dbf31baf10be6ce0a95e123
[project @ 2007-10-10 00:33:17 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,15 +1,18 @@
 2007-10-09  John W. Eaton  <jwe@octave.org>
 
 	* dSparse.cc (SparseMatrix::all_elements_are_zero): New function.
 	* dNDArray.cc (NDArray::all_elements_are_zero): New function.
 
 2007-10-09  David Bateman  <dbateman@free.fr>
 
+	* oct-time.cc (octave_strptime::init): Only call mktime if mday is
+	valud and mon and year are also filled in.
+
 	* Array2.h (Array2<T>::Array2(const dim_vector&),
 	Array2<T>::Array(const dim_vector&, const T&)): Check that
 	dim_vector is 2 dimensional.
 
 	* Sparse.cc (Sparse<T> Sparse<T>::index (idx_vector&, idx_vector&,
 	int)): Remove a for loop in the random indexing case at the
 	expense of maintaining a set of linked lists of indices that point 
 	to the same column in the original matrix.
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -351,19 +351,23 @@ octave_strptime::init (const std::string
   char *ps = strsave ("");
   t.tm_zone = ps;
 #endif
 
   char *p = strsave (str.c_str ());
 
   char *q = oct_strptime (p, fmt.c_str (), &t);
 
-  // Fill in wday and yday.
-  t.tm_isdst = -1;
-  mktime (&t);
+  // Fill in wday and yday, but only if mday is valid and the mon and year
+  // are filled in, avoiding issues with mktime and invalid dates.
+  if (t.tm_mday != 0 && t.tm_mon >= 0 && t.tm_year != 0)
+    {
+      t.tm_isdst = -1;
+      mktime (&t);
+    }
 
   if (q)
     nchars = q - p + 1;
   else
     nchars = 0;
 
   delete [] p;
 
