# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1229628179 -3600
#      Thu Dec 18 20:22:59 2008 +0100
# Node ID 69d45a4c7d94c151bc33815c1260d216cc651173
# Parent  ba24ecd4c01966e23e96db382593fb16e3261512
avoid repeated parsing of format string in datevec

diff --git a/scripts/time/datevec.m b/scripts/time/datevec.m
--- a/scripts/time/datevec.m
+++ b/scripts/time/datevec.m
@@ -103,43 +103,44 @@ function [y, m, d, h, mi, s] = datevec (
     f = -1;
   endif
 
   if (isempty (p))
     p = (localtime (time)).year + 1900 - 50;
   endif
 
   if (ischar (date))
-    t = date;
-    date = cell (1);
-    date{1} = t;
+    date = cellstr (date);
   endif
 
   if (iscell (date))
 
     nd = numel (date);
 
     y = m = d = h = mi = s = zeros (nd, 1);
 
     if (f == -1)
       for k = 1:nd
         found = false;
         for l = 1:nfmt
-          [found y(k) m(k) d(k) h(k) mi(k) s(k)] = __date_str2vec__ (date{k}, std_formats{l}, p);
+          [f, rY, ry, fy, fm, fd, fh, fmi, fs] = __date_vfmt2sfmt__ (std_formats{l});
+          [found y(k) m(k) d(k) h(k) mi(k) s(k)] = __date_str2vec__ (date{k}, p, f, rY, ry, fy, fm, fd, fh, fmi, fs);
           if (found)
             break;
           endif
         endfor
         if (! found)
           error ("datevec: none of the standard formats match the date string");
         endif
       endfor
     else
+      % Decipher the format string just once for sake of speed.
+      [f, rY, ry, fy, fm, fd, fh, fmi, fs] = __date_vfmt2sfmt__ (f);
       for k = 1:nd
-        [found y(k) m(k) d(k) h(k) mi(k) s(k)] = __date_str2vec__ (date{k}, f, p);
+        [found y(k) m(k) d(k) h(k) mi(k) s(k)] = __date_str2vec__ (date{k}, p, f, rY, ry, fy, fm, fd, fh, fmi, fs);
         if (! found)
           error ("datevec: date not parsed correctly with given format");
         endif
       endfor
     endif
 
   else
 
@@ -178,17 +179,17 @@ function [y, m, d, h, mi, s] = datevec (
   endif
 
   if (nargout <= 1)
     y = [y, m, d, h, mi, s];
   endif
 
 ### endfunction
 
-function [found, y, m, d, h, mi, s] = __date_str2vec__ (ds, f, p)
+function [f, rY, ry, fy, fm, fd, fh, fmi, fs] = __date_vfmt2sfmt__ (f)
 
   # Play safe with percent signs
   f = strrep(f, "%", "%%");
 
   ## dates to lowercase (note: we cannot convert MM to mm)
   f = strrep (f, "YYYY", "yyyy");
   f = strrep (f, "YY", "yy");
   f = strrep (f, "QQ", "qq");
@@ -240,43 +241,49 @@ function [found, y, m, d, h, mi, s] = __
     f = strrep (f, "PM", "%p");
     f = strrep (f, "AM", "%p");
   else
     f = strrep (f, "HH", "%H");
   endif
   f = strrep (f, "MM", "%M");
   f = strrep (f, "SS", "%S");
 
+  rY = rindex (f, "%Y");
+  ry = rindex (f, "%y");
+
+  # check whether we need to give default values
+  # possible error when string contains "%%"
+  fy = rY || ry;
+  fm = index (f, "%m") || index (f, "%b") || index (f, "%B");
+  fd = index (f, "%d") || index (f, "%a") || index (f, "%A");
+  fh = index (f, "%H") || index (f, "%I");
+  fmi = index (f, "%M");
+  fs = index (f, "%S");
+
+### endfunction
+
+function [found, y, m, d, h, mi, s] = __date_str2vec__ (ds, p, f, rY, ry, fy, fm, fd, fh, fmi, fs)
+
   [tm, nc] = strptime (ds, f);
 
-  if (nc == length (ds) + 1)
+  if (nc == size (ds, 2) + 1)
     y = tm.year + 1900; m = tm.mon + 1; d = tm.mday;
     h = tm.hour; mi = tm.min; s = tm.sec + tm.usec / 1e6;
     found = true;
-    rY = rindex (f, "%Y");
-    ry = rindex (f, "%y");
     if (rY < ry)
       if (y > 1999)
         y -= 2000;
       else
         y -= 1900;
       endif
       y += p - mod (p, 100);
       if (y < p)
         y += 100;
       endif
     endif
-    # check whether we need to give default values
-    # possible error when string contains "%%"
-    fy = rY || ry;
-    fm = index (f, "%m") || index (f, "%b") || index (f, "%B");
-    fd = index (f, "%d") || index (f, "%a") || index (f, "%A");
-    fh = index (f, "%H") || index (f, "%I");
-    fmi = index (f, "%M");
-    fs = index (f, "%S");
     if (! fy && ! fm && ! fd)
       tvm = localtime (time ());  ## tvm: this very moment
       y = tvm.year + 1900;
       m = tvm.mon + 1;
       d = tvm.mday;
     elseif (! fy && fm && fd)
       tvm = localtime (time ());  ## tvm: this very moment
       y = tvm.year + 1900;
