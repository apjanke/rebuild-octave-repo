# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1317399608 25200
#      Fri Sep 30 09:20:08 2011 -0700
# Node ID be74491c20e804b6ea8478ba2989b622f039a007
# Parent  e052c36bf14f4ade3844983fbcaa2072a1f83f42
Correct typo in input validation of polynomial functions (Bug #33252)

* ppder.m, ppint.m, ppjumps.m, ppval.m: Correct typo placing negation (!)
only on first isstruct argument rather than combined (isstruct && strcmp)
condition.

diff --git a/scripts/polynomial/ppder.m b/scripts/polynomial/ppder.m
--- a/scripts/polynomial/ppder.m
+++ b/scripts/polynomial/ppder.m
@@ -27,17 +27,17 @@
 function ppd = ppder (pp, m)
 
   if ((nargin < 1) || (nargin > 2))
     print_usage ();
   elseif (nargin == 1)
     m = 1;
   endif
 
-  if !(isstruct (pp) && strcmp (pp.form, "pp"))
+  if (! (isstruct (pp) && strcmp (pp.form, "pp")))
     error ("ppder: PP must be a structure");
   endif
 
   [x, p, n, k, d] = unmkpp (pp);
 
   if (k - m <= 0)
     x = [x(1) x(end)];
     pd = zeros (prod (d), 1);
diff --git a/scripts/polynomial/ppint.m b/scripts/polynomial/ppint.m
--- a/scripts/polynomial/ppint.m
+++ b/scripts/polynomial/ppint.m
@@ -23,17 +23,17 @@
 ## @var{c}, if given, is the constant of integration.
 ## @seealso{mkpp, ppval, ppder}
 ## @end deftypefn
 
 function ppi = ppint (pp, c)
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
-  if (! isstruct (pp) && strcmp (pp.form, "pp"))
+  if (! (isstruct (pp) && strcmp (pp.form, "pp")))
     error ("ppint: PP must be a structure");
   endif
 
   [x, p, n, k, d] = unmkpp (pp);
   p = reshape (p, [], k);
 
   ## Get piecewise antiderivatives
   pi = p / diag (k:-1:1);
diff --git a/scripts/polynomial/ppjumps.m b/scripts/polynomial/ppjumps.m
--- a/scripts/polynomial/ppjumps.m
+++ b/scripts/polynomial/ppjumps.m
@@ -24,17 +24,17 @@
 ## @seealso{mkpp}
 ## @end deftypefn
 
 function jumps = ppjumps (pp)
   if (nargin != 1)
     print_usage ();
   endif
 
-  if (! isstruct (pp) && strcmp (pp.form, "pp"))
+  if (! (isstruct (pp) && strcmp (pp.form, "pp")))
     error ("ppjumps: PP must be a structure");
   endif
 
   ## Extract info.
   [x, P, n, k, d] = unmkpp(pp);
   nd = length (d) + 1;
 
   ## Offsets.
diff --git a/scripts/polynomial/ppval.m b/scripts/polynomial/ppval.m
--- a/scripts/polynomial/ppval.m
+++ b/scripts/polynomial/ppval.m
@@ -32,18 +32,18 @@
 ## @seealso{mkpp, unmkpp, spline, pchip, interp1}
 ## @end deftypefn
 
 function yi = ppval (pp, xi)
 
   if (nargin != 2)
     print_usage ();
   endif
-  if (! isstruct (pp) && strcmp (pp.form, "pp"))
-    error ("ppval: expects a pp-form structure");
+  if (! (isstruct (pp) && strcmp (pp.form, "pp")))
+    error ("ppval: first argument must be a pp-form structure");
   endif
 
   ## Extract info.
   [x, P, n, k, d] = unmkpp (pp);
 
   ## dimension checks
   sxi = size (xi);
   if (isvector (xi))
