# HG changeset patch
# User Rik <rik@octave.org>
# Date 1355847689 28800
#      Tue Dec 18 08:21:29 2012 -0800
# Node ID 83bf6fd9e46d841c06a40ab53b6098487f215b9f
# Parent  317f4857c1e1f6859ff22c69ad181017b474914d
ov-class.cc: Fix compilation when HAVE_JAVA is false.

* libinterp/octave-value/ov-class.cc(Fclass): protect section
calling java_class_name() with #ifdef HAVE_JAVA.

diff --git a/libinterp/octave-value/ov-class.cc b/libinterp/octave-value/ov-class.cc
--- a/libinterp/octave-value/ov-class.cc
+++ b/libinterp/octave-value/ov-class.cc
@@ -40,17 +40,19 @@ along with Octave; see the file COPYING.
 #include "load-path.h"
 #include "ls-hdf5.h"
 #include "ls-oct-ascii.h"
 #include "ls-oct-binary.h"
 #include "ls-utils.h"
 #include "mxarray.h"
 #include "oct-lvalue.h"
 #include "ov-class.h"
+#ifdef HAVE_JAVA
 #include "ov-java.h"
+#endif
 #include "ov-fcn.h"
 #include "ov-usr-fcn.h"
 #include "pager.h"
 #include "parse.h"
 #include "pr-output.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "variables.h"
@@ -1939,18 +1941,20 @@ derived.\n\
   if (nargin == 0)
     print_usage ();
   else if (nargin == 1)
     // Called for class of object
     if (! args(0).is_java ())
       retval = args(0).class_name ();
     else
       {
+#ifdef HAVE_JAVA
         octave_java *jobj = dynamic_cast<octave_java*>(args(0).internal_rep ());
         retval = jobj->java_class_name ();
+#endif
       }
   else
     {
       // Called as class constructor
       octave_function *fcn = octave_call_stack::caller ();
 
       std::string id = args(1).string_value ();
 
