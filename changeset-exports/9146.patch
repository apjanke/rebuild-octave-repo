# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1240391155 -7200
#      Wed Apr 22 11:05:55 2009 +0200
# Node ID a48c500e48e1c933e652aafe241b5e429db10c00
# Parent  53364bb317d4dc10fdd26b365be9c191fa7f0325
support range->string conversions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2009-04-22  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-range.cc (octave_range::char_array_value): New virtual function
+	override.
+	* ov-range.h: Declare it.
+
 2009-04-22  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pt-mat.cc (tm_row_const::tm_row_const_rep::do_init_element):
 	Update class name even for all-zeros elements.
 	(get_concat_class): Update the default value if possible.
 
 2009-04-21  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/ov-range.cc b/src/ov-range.cc
--- a/src/ov-range.cc
+++ b/src/ov-range.cc
@@ -168,16 +168,30 @@ octave_range::float_value (bool) const
       retval = range.base ();
     }
   else
     gripe_invalid_conversion ("range", "real scalar");
 
   return retval;
 }
 
+charNDArray
+octave_range::char_array_value (bool) const
+{
+  const Matrix matrix = range.matrix_value ();
+  charNDArray retval (dims ());
+
+  octave_idx_type nel = numel ();
+  
+  for (octave_idx_type i = 0; i < nel; i++)
+    retval.elem (i) = static_cast<char>(matrix.elem (i));
+
+  return retval;
+}
+  
 octave_value
 octave_range::all (int dim) const
 {
   // FIXME -- this is a potential waste of memory.
 
   Matrix m = range.matrix_value ();
 
   return m.all (dim);
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -176,16 +176,18 @@ public:
     { return range.matrix_value (); }
 
   NDArray array_value (bool = false) const
     { return range.matrix_value (); }
 
   FloatNDArray float_array_value (bool = false) const
     { return FloatMatrix (range.matrix_value ()); }
 
+  charNDArray char_array_value (bool = false) const;
+  
   // FIXME -- it would be better to have Range::intXNDArray_value
   // functions to avoid the intermediate conversion to a matrix
   // object.
 
   int8NDArray
   int8_array_value (void) const { return int8NDArray (array_value ()); }
 
   int16NDArray
