# HG changeset patch
# User Rik <rik@octave.org>
# Date 1501979860 25200
#      Sat Aug 05 17:37:40 2017 -0700
# Node ID ca4cca5710dcbb18849c76e67b36d789161d9479
# Parent  3544f88a2bb5e02ffb0598e2d1e90abf47ce3c59
__opengl_info__.m: Overhaul function (bug #51631).

* __opengl_info__.m: Add label to example code in docstring.
Add runtime checks to BIST tests to execute only when qt or fltk toolkit is
available.  Save and restore graphics toolkit.
* __opengl_info__.m (fig_gl_info): Only fetch __gl_vendor__ property, and if it
is empty return immediately.
*_ __opengl_info__.m (gl_info): Add call to refresh() to force OpenGL object to
be drawn.

diff --git a/scripts/plot/util/__opengl_info__.m b/scripts/plot/util/__opengl_info__.m
--- a/scripts/plot/util/__opengl_info__.m
+++ b/scripts/plot/util/__opengl_info__.m
@@ -37,25 +37,26 @@
 ##
 ## @item renderer
 ## OpenGL renderer string
 ##
 ## @item extensions
 ## List of enabled extensions for the OpenGL driver.
 ## @end table
 ##
+## Example Code:
+##
 ## @example
 ## glinfo = __opengl_info__ ();
 ## @end example
 ##
 ## @end deftypefn
 
 function retval = __opengl_info__ ()
 
-  ## currently we only handle a single argument
   if (nargin != 0)
     print_usage ();
   endif
 
   [info, msg] = gl_info ();
 
   if (! isempty (msg))
     warning (msg);
@@ -69,70 +70,80 @@ function retval = __opengl_info__ ()
     else
       retval = info;
     endif
   endif
 
 endfunction
 
 function info = fig_gl_info (h)
+
   info = [];
 
   if (ishandle (h) && strcmp (get (h, "renderer"), "opengl"))
-    vers = get (h, "__gl_version__");
     vend = get (h, "__gl_vendor__");
-    rend = get (h, "__gl_renderer__");
-    exts = get (h, "__gl_extensions__");
-    if (! isempty (vend))
-      info.version = vers;
-      info.vendor = vend;
-      info.renderer = rend;
-      info.extensions = strsplit (strtrim (exts));
+    if (isempty (vend))
+      return;
     endif
+    info.vendor   = vend;
+    info.version  = get (h, "__gl_version__");
+    info.renderer = get (h, "__gl_renderer__");
+    info.extensions = strsplit (strtrim (get (h, "__gl_extensions__")));
   endif
+  
 endfunction
 
 function [info, msg] = gl_info ()
+
   info = [];
   msg = "";
 
-  ## If we have any open figures, take a look for any OpenGL info.
+  ## If we have any open figures, take a look there for OpenGL info.
   figs = findall (0, "type", "figure");
 
   for hf = figs.'
     info = fig_gl_info (hf);
     if (! isempty (info))
       break;
     endif
   endfor
 
   ## If no info yet, try open a figure to get the info.
   if (isempty (info))
     ## Need to create a figure, place an OpenGL object, and force drawing.
-    h = figure ("position", [0,0,1,1], "toolbar", "none", "menubar", "none");
+    hf = figure ("position", [0,0,1,1], "toolbar", "none", "menubar", "none");
     hax = axes ();
-    ## Hmm, drawnow did not seem to be working as intended here.
-    pause (0.2);
-    info = fig_gl_info (h);
-    close (h);
+    pause (0.1);  # FIXME: Race condition means this delay may not always work.
+    refresh (hf);
+    info = fig_gl_info (hf);
+    close (hf);
   endif
 
   if (isempty (info))
     msg = "__opengl_info__: can not obtain OpenGL information";
   endif
 
 endfunction
 
 
-## Duplicate the test since there is currently no way to write
-## "HAVE_OPENGL && (HAVE_FLTK || HAVE_QT)"
+%!testif HAVE_OPENGL, HAVE_FLTK; have_window_system () && any (strcmp ("fltk", available_graphics_toolkits ()))
+%! old_toolkit = graphics_toolkit ();
+%! unwind_protect
+%!   graphics_toolkit ("fltk");
+%!   a = __opengl_info__ ();
+%! unwind_protect_cleanup
+%!   graphics_toolkit (old_toolkit); 
+%! end_unwind_protect
+%! assert (! isempty (a));
+%! assert (isfield (a, "version"));
 
-%!testif HAVE_OPENGL, HAVE_FLTK; have_window_system
-%! a = __opengl_info__ ();
-%! assert (! isempty (a))
-%! assert (isfield (a, "version"))
-
-%!testif HAVE_OPENGL, HAVE_QT; have_window_system
-%! a = __opengl_info__ ();
-%! assert (! isempty (a))
-%! assert (isfield (a, "version"))
+%!testif HAVE_OPENGL, HAVE_QT; have_window_system () && any (strcmp ("qt", available_graphics_toolkits ()))
+%! old_toolkit = graphics_toolkit ();
+%! unwind_protect
+%!   graphics_toolkit ("qt");
+%!   a = __opengl_info__ ();
+%! unwind_protect_cleanup
+%!   graphics_toolkit (old_toolkit); 
+%! end_unwind_protect
+%! assert (! isempty (a));
+%! assert (isfield (a, "version"));
 
 %!error __opengl_info ("foobar")
