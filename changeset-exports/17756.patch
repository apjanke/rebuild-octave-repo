# HG changeset patch
# User Rik <rik@octave.org>
# Date 1382651063 25200
#      Thu Oct 24 14:44:23 2013 -0700
# Node ID 9aff1c9fd70f0956186faf82b7c504446ca66834
# Parent  9c03b071fd7bd6f47b369ee6fcd0afdf43ebfc8f
doc: Add missing functions to manual.

* doc/interpreter/doccheck/mk_undocumented_list: Mark 'end' as an exception
not required to be in manual.

* doc/interpreter/gui.txi: Add isguirunning() and desktop() to list of
GUI utility functions.

* doc/interpreter/octave.texi: Add new subsection "Missing Components" to menu.

* doc/interpreter/package.txi: Add "Missing Components" section with DOCSTRING
reference for missing_component_hook().

* libinterp/corefcn/variables.cc: Add seealso links between
missing_component_hook() and missing_function_hook().

* libinterp/parse-tree/pt-arg-list.cc(Fend): Write docstring for 'end' index
keyword.

diff --git a/doc/interpreter/doccheck/mk_undocumented_list b/doc/interpreter/doccheck/mk_undocumented_list
--- a/doc/interpreter/doccheck/mk_undocumented_list
+++ b/doc/interpreter/doccheck/mk_undocumented_list
@@ -77,16 +77,17 @@ besselh
 besseli
 besselk
 bessely
 bug_report
 chdir
 comma
 debug
 dbnext
+end
 exit
 F_DUPFD
 F_GETFD
 F_GETFL
 fact
 finite
 fmod
 F_SETFD
diff --git a/doc/interpreter/gui.txi b/doc/interpreter/gui.txi
--- a/doc/interpreter/gui.txi
+++ b/doc/interpreter/gui.txi
@@ -63,20 +63,24 @@ a file name.
 
 @node GUI Utility Functions
 @section GUI Utility Functions
 
 These functions do not implement a GUI element but are useful when developing
 programs that do.  @strong{Warning:} The functions @code{uiwait},
 @code{uiresume}, and @code{waitfor} are only available for the FLTK tooolkit.
 
+@DOCSTRING(desktop)
+
 @DOCSTRING(guidata)
 
 @DOCSTRING(guihandles)
 
+@DOCSTRING(isguirunning)
+
 @DOCSTRING(uiwait)
 
 @DOCSTRING(uiresume)
 
 @DOCSTRING(waitfor)
 
 @node User-Defined Preferences
 @section User-Defined Preferences
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -790,16 +790,17 @@ Packages
 * Administrating Packages::
 * Creating Packages::
 
 Creating Packages
 
 * The DESCRIPTION File::
 * The INDEX File::
 * PKG_ADD and PKG_DEL Directives::
+* Missing Components::
 
 External Code Interface
 
 * Oct-Files::
 * Mex-Files::
 * Standalone Programs::
 
 Oct-Files
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -304,16 +304,17 @@ An optional directory containing files t
 Octave @w{@env{EXEC_PATH}} when the package is loaded.  This might contain
 external scripts, etc., called by functions within the package.
 @end table
 
 @menu
 * The DESCRIPTION File::
 * The INDEX File::
 * PKG_ADD and PKG_DEL Directives::
+* Missing Components::
 @end menu
 
 @node The DESCRIPTION File
 @subsection The DESCRIPTION File
 
 The @file{DESCRIPTION} file contains various information about the
 package, such as its name, author, and version.  This file has a very
 simple format
@@ -570,8 +571,18 @@ In C++ files a @w{@code{PKG_ADD}} direct
 
 @noindent
 In both cases @code{some_octave_command} should be replaced by the
 command that should be placed in the @w{@code{PKG_ADD}} file.
 @w{@code{PKG_DEL}} directives work in the same way, except the
 @w{@code{PKG_ADD}} keyword is replaced with @w{@code{PKG_DEL}} and the commands
 get added to the @w{@code{PKG_DEL}} file.
 
+@node Missing Components
+@subsection Missing Components
+
+If a package relies on a component, such as another Octave package, that may
+not be present it may be useful to install a function which informs users what
+to do when a particular component is missing.  The function must be written by
+the package maintainer and registered with Octave using
+@code{missing_component_hook}.
+
+@DOCSTRING(missing_component_hook)
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -2551,16 +2551,17 @@ DEFUN (missing_function_hook, args, narg
 @deftypefnx {Built-in Function} {@var{old_val} =} missing_function_hook (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} missing_function_hook (@var{new_val}, \"local\")\n\
 Query or set the internal variable that specifies the function to call when\n\
 an unknown identifier is requested.\n\
 \n\
 When called from inside a function with the @qcode{\"local\"} option, the\n\
 variable is changed locally for the function and any subroutines it calls.  \n\
 The original variable value is restored when exiting the function.\n\
+@seealso{missing_component_hook}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (missing_function_hook);
 }
 
 void maybe_missing_function_hook (const std::string& name)
 {
   // Don't do this if we're handling errors.
@@ -2627,12 +2628,13 @@ The hook function is expected to be of t
 \n\
 @example\n\
 @var{fcn} (@var{component})\n\
 @end example\n\
 \n\
 Octave will call @var{fcn} with the name of the function that requires the\n\
 component and a string describing the missing component.  The hook function\n\
 should return an error message to be displayed.\n\
+@seealso{missing_function_hook}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (missing_component_hook);
 }
diff --git a/libinterp/parse-tree/pt-arg-list.cc b/libinterp/parse-tree/pt-arg-list.cc
--- a/libinterp/parse-tree/pt-arg-list.cc
+++ b/libinterp/parse-tree/pt-arg-list.cc
@@ -122,17 +122,36 @@ tree_argument_list::is_valid_lvalue_list
   return retval;
 }
 
 static const octave_value *indexed_object = 0;
 static int index_position = 0;
 static int num_indices = 0;
 
 DEFCONSTFUN (end, , ,
-  "internal function")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} end\n\
+The magic index @qcode{\"end\"} refers to the last valid entry in an indexing\n\
+operation.\n\
+\n\
+Example:\n\
+\n\
+@example\n\
+@group\n\
+@var{x} = [ 1 2 3 \n\
+      4 5 6 ];\n\
+@var{x}(1,end)\n\
+    @result{} 3\n\
+@var{x}(end,1)\n\
+    @result{} 4\n\
+@var{x}(end,end)\n\
+    @result{} 6\n\
+@end group\n\
+@end example\n\
+@end deftypefn")
 {
   octave_value retval;
 
   if (indexed_object)
     {
       if (indexed_object->is_object ())
         {
           octave_value_list args;
