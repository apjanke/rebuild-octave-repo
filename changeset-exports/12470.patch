# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1298422017 18000
#      Tue Feb 22 19:46:57 2011 -0500
# Node ID 64ae43e0e1c0dae01373d08c0a4f71f11b28852b
# Parent  0ee8d7d60c8239d6255a99ea7b323d51a31e0158
subplot.m: Use new looseinset property introduced by changeset 12467.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,14 @@
+2011-02-22  Ben Abbott  <bpabbott@mac.com>
+
+	* plot/subplot.m: Use new looseinset property introduced by changeset
+	12467. Decrease spacing between subplots rows / columns. Clean up and
+	add comments.
+
 2010-02-22  Rik  <octave@nomad.inbox5.com>
 
 	* io/strread.m, plot/whitebg.m, strings/regexptranslate.m,
 	testfun/runtests.m: Use single quotes around regexp patterns.
 
 2010-02-20  Karsten Trulsen  <karstent@math.uio.no>
 
 	* signal/fftshift.m: Fix broken function.  Bug 32442.
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -105,23 +105,24 @@ function h = subplot (rows, cols, index,
   if (index > cols*rows)
     error ("subplot: INDEX must be less than COLS*ROWS");
   endif
 
   if (cols < 1 || rows < 1 || index < 1)
     error ("subplot: COLS,ROWS,INDEX must be be positive");
   endif
 
-  units = get (0, "defaultaxesunits");
+  axesunits = get (0, "defaultaxesunits");
   cf = gcf ();
-  figunits = get (cf, "units");
+  figureunits = get (cf, "units");
   unwind_protect
-    set (0, "defaultaxesunits", "normalized");
+    units = "normalized";
+    set (0, "defaultaxesunits", units);
     set (cf, "units", "pixels");
-    pos = subplot_position (rows, cols, index, "position", units);
+    pos = subplot_position (rows, cols, index, "position");
 
     set (cf, "nextplot", "add");
 
     found = false;
     kids = get (cf, "children");
     for child = reshape (kids, 1, numel (kids))
       ## Check whether this child is still valid; this might not be the
       ## case anymore due to the deletion of previous children (due to
@@ -157,41 +158,42 @@ function h = subplot (rows, cols, index,
             delete (child);
           endif
         endif
       endif
     endfor
 
     if (found)
       set (cf, "currentaxes", tmp);
+      position = get (tmp, "position");
+      outerposition = get (tmp, "outerposition");
     else
-      outerposition = subplot_position (rows, cols, index,
-                                        "outerposition", units);
-      position = subplot_position (rows, cols, index, "position", units);
-      tmp = axes ("position", position, "outerposition", outerposition,
-                  "activepositionproperty", "outerposition",
-                  "box", "off");
+      outerposition = subplot_position (rows, cols, index, "outerposition");
+      position = subplot_position (rows, cols, index, "position");
+      tmp = axes ("looseinset", [0 0 0 0], "box", "off",
+                  "outerposition", outerposition,
+                  "position", position);
     endif
 
     if (align_axes && strcmp (get (cf, "__graphics_toolkit__"), "gnuplot"))
       set (tmp, "activepositionproperty", "position");
     endif
 
   unwind_protect_cleanup
-    set (0, "defaultaxesunits", units);
-    set (cf, "units", figunits);
+    set (0, "defaultaxesunits", axesunits);
+    set (cf, "units", figureunits);
   end_unwind_protect
 
   if (nargout > 0)
     h = tmp;
   endif
 
 endfunction
 
-function pos = subplot_position (rows, cols, index, position_property, units)
+function pos = subplot_position (rows, cols, index, position_property)
 
   defaultaxesposition = get (0, "defaultaxesposition");
   defaultaxesouterposition = get (0, "defaultaxesouterposition");
 
   if (rows == 1 && cols == 1)
     ## Trivial result for subplot (1,1,1)
     if (strcmpi (position_property, "position"))
       pos = defaultaxesposition;
@@ -222,28 +224,29 @@ function pos = subplot_position (rows, c
   height = height / rows;
 
   if (strcmp (position_property, "outerposition") )
     ## Calculate the inset of the position relative to the outerposition
     ## The outerpositions are assumed to be tiled. Matlab's implementation
     ## has outerposition overlap.
     if (rows > 1)
       ## Title on top and xlabel & xticks on bottom
-      inset.top = margins.row / 3;
+      inset.top = margins.row * (1/3);
       inset.bottom = margins.row * (2/3);
       ## Matlab behavior is approximately ...
       % inset.bottom = margins.row;
     else
       inset.bottom = margins.bottom;
       inset.top = margins.top;
     endif
     if (cols > 1)
       ## ylabel & yticks on left and some overhang for xticks on right
-      inset.right = 0.1 * margins.column;
-      inset.left = 0.9 * margins.column;
+      x = 0.1;
+      inset.right = x * margins.column;
+      inset.left = (1 - x) * margins.column;
     else
       inset.left  = margins.left;
       inset.right = margins.right;
     endif
     ## Apply the inset to the geometries for the "position" property.
     margins.column = margins.column - inset.right - inset.left;
     margins.row = margins.row - inset.top - inset.bottom;
     width = width + inset.right + inset.left;
@@ -306,12 +309,12 @@ endfunction
 %!   subplot (2, 2, n, "align")
 %!   plot (x, x)
 %!   xlabel (sprintf ("xlabel (2,2,%d)", n))
 %!   ylabel (sprintf ("ylabel (2,2,%d)", n))
 %!   title (sprintf ("title (2,2,%d)", n))
 %! endfor
 %! subplot (1, 2, 1, "align")
 %! plot (x, x)
-%! xlabel (sprintf ("xlabel (1,2,%d)", n))
-%! ylabel (sprintf ("ylabel (1,2,%d)", n))
-%! title (sprintf ("title (1,2,%d)", n))
+%! xlabel ("xlabel (1,2,1)")
+%! ylabel ("ylabel (1,2,1)")
+%! title ("title (1,2,1)")
 
