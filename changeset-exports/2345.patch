# HG changeset patch
# User jwe
# Date 838277463 0
#      Thu Jul 25 06:51:03 1996 +0000
# Node ID 0f441b4fefdb05ec8766560f081e9c954c1be8b4
# Parent  968a33af8b3d3310121dd957dd15b7cb8159a94e
[project @ 1996-07-25 06:51:03 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+Thu Jul 25 01:42:38 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* load-save.cc (read_mat_binary_data): Expect to read terminating
+	NUL character in the variable name.
+	(save_mat_binary_data): Likewise, save it here.
+
 Wed Jul 24 05:08:07 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lsode.cc (Flsode): Don't set the return value if an error
 	occurred during integration.
 	* dassl.cc (Fdassl): Likewise.
 
 	* file-io.cc (symbols_of_file_io): Redefine values of SEEK_SET,
 	SEEK_CUR, and SEEK_END for Matlab compatibility.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -1142,18 +1142,20 @@ read_mat_binary_data (istream& is, const
     }
 
   if (imag && type == 1)
     {
       error ("load: encountered complex matrix with string flag set!");
       return 0;
     }
 
-  name = new char [len+1];
-  name[len] = '\0';
+  // LEN includes the terminating character, and the file is also
+  // supposed to include it.
+
+  name = new char [len];
   if (! is.read (name, len))
     goto data_read_error;
 
   dlen = nr * nc;
   if (dlen < 0)
     goto data_read_error;
 
   re.resize (nr, nc);
@@ -1779,20 +1781,23 @@ save_mat_binary_data (ostream& os, const
   FOUR_BYTE_INT nc = tc.columns ();
   os.write (&nc, 4);
 
   int len = nr * nc;
 
   FOUR_BYTE_INT imag = tc.is_complex_type () ? 1 : 0;
   os.write (&imag, 4);
 
-  FOUR_BYTE_INT name_len = name.length ();
+  // LEN includes the terminating character, and the file is also
+  // supposed to include it.
+
+  FOUR_BYTE_INT name_len = name.length () + 1;
 
   os.write (&name_len, 4);
-  os << name;
+  os << name << '\0';
 
   if (tc.is_real_scalar ())
     {
       double tmp = tc.double_value ();
       os.write (&tmp, 8);
     }
   else if (tc.is_real_matrix ())
     {
