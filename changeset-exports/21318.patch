# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1456074513 28800
#      Sun Feb 21 09:08:33 2016 -0800
# Node ID 280ea93d48ddebfc4292f1f342d569d2e16f3e26
# Parent  a4faec57f4c819895e746b4d87daad8d836c05a4
* debug.cc (Fdbstop): Fix error in docstring from cset 4ee768b71a0e (bug #47213)

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -957,17 +957,17 @@ function will be used.  Breakpoints at s
 operator @samp{>}.  For example, If @file{file.m} has a subfunction\n\
 @code{func2}, then a breakpoint in @code{func2} can be specified by\n\
 @code{file>func2}.\n\
 \n\
 @var{line} is the line number at which to break.  If @var{line} is not\n\
 specified, it defaults to the first executable line in the file\n\
 @file{func.m}.  Multiple lines can be specified in a single command; when\n\
 function syntax is used, the lines may also be passed as a single vector\n\
-argument (@code{[@var{line1}, @var {line2}, @dots{}]}).\n\
+argument (@code{[@var{line1}, @var{line2}, @dots{}]}).\n\
 \n\
 @var{condition} is any Octave expression that can be evaluated in the code\n\
 context that exists at the breakpoint.  When the breakpoint is encountered,\n\
 @var{condition} will be evaluated, and execution will stop if\n\
 @var{condition} is true.  If @var{condition} cannot be evaluated, for\n\
 example because it refers to an undefined variable, an error will be thrown.\n\
  Expressions with side effects (such as @code{y++ > 1}) will alter\n\
 variables, and should generally be avoided.  Conditions containing quotes\n\
