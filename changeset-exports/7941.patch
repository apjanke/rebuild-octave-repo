# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1216306582 14400
#      Thu Jul 17 10:56:22 2008 -0400
# Node ID f8cab9eeb128a062153720153880b6ef27ba8397
# Parent  1bfb88e78027d7557195d0d6c812ac7cdda7de26
Fix NDArray compilation/export

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-07-17  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* dNDArray.cc: Do not include ctor NDArray(Array<octave_idx_type>,
+	bool, bool) into conditional HAVE_FFTW3 preprocessor statement.
+
 2008-07-16  John W. Eaton  <jwe@octave.org>
 
 	* oct-mutex.h (octave_autolock::octave_autolock (void),
 	octave_autolock (const octave_autolock&),
 	octave_autolock::operator = (const octave_autolock&)):
 	Delete definitions.
 
 2008-07-16  Michael Goffioul  <michael.goffioul@gmail.com>
diff --git a/liboctave/dNDArray.cc b/liboctave/dNDArray.cc
--- a/liboctave/dNDArray.cc
+++ b/liboctave/dNDArray.cc
@@ -35,16 +35,17 @@ along with Octave; see the file COPYING.
 #include "mx-base.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
 
 #if defined (HAVE_FFTW3)
 #include "oct-fftw.h"
+#endif
 
 NDArray::NDArray (const Array<octave_idx_type>& a, bool zero_based,
 		  bool negative_to_nan)
 {
   const octave_idx_type *pa = a.fortran_vec ();
   resize (a.dims ());
   double *ptmp = fortran_vec ();
   if (negative_to_nan)
@@ -78,16 +79,18 @@ NDArray::NDArray (const Array<octave_idx
 	  ptmp[i] = static_cast<double> 
 	    (pa[i] + static_cast<octave_idx_type> (1));
       else
 	for (octave_idx_type i = 0; i < a.numel (); i++)
 	  ptmp[i] = static_cast<double> (pa[i]);
     }
 }
 
+#if defined (HAVE_FFTW3)
+
 ComplexNDArray
 NDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.length () || dim < 0)
     return ComplexNDArray ();
 
