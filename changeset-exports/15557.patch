# HG changeset patch
# User Rik <rik@octave.org>
# Date 1351024635 25200
#      Tue Oct 23 13:37:15 2012 -0700
# Node ID 13206177060be3db1b6f55219a7c36bb013c327b
# Parent  427020b2ceaf1e63bd72209771fa3e68173e7fce
importdata.m: 3X speedup by using str2double rather than num2str.

* importdata.m: 3X speedup by using str2double rather than num2str.

diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -188,20 +188,16 @@ function [output, delimiter, header_rows
   output.data       = [];
   output.textdata   = [];
   output.rowheaders = [];
   output.colheaders = [];
 
   ## Read file into string and count the number of header rows
   file_content = fileread (fname);
 
-  ## The characters need to be in a row vector instead of a column
-  ## vector to be recognized as a proper string.
-  file_content = file_content(:)';
-
   ## Split the file into rows (using \r\n or \n as delimiters between rows).
   file_content_rows = regexp (file_content, "\r?\n", "split");
 
   ## FIXME: guess delimiter, if it isn't defined
   if (isempty (delimiter))
     error ("importdata: Guessing delimiter is not implemented yet, you have to specify it.");
   endif
 
@@ -270,17 +266,17 @@ function [output, delimiter, header_rows
     ## Only use the row if it contains anything other than white-space
     ## characters.
     if (any (file_content_rows{i} != " "))
       row_data = regexp (file_content_rows{i}, delimiter_pattern, "split");
 
       for j=1:length(row_data)
         ## Try to convert the column to a number, if it works put it in
         ## output.data, otherwise in output.textdata
-        data_numeric = str2num (row_data{j});
+        data_numeric = str2double (row_data{j});
         if (!isempty (data_numeric))
           output.data(i-header_rows, j) = data_numeric;
         else
           output.textdata{i,j} = row_data{j};
         endif
       endfor
 
     endif
@@ -288,14 +284,14 @@ function [output, delimiter, header_rows
 
   ## Check wether rowheaders or colheaders should be used
   if ((header_rows == data_columns) && (size (output.textdata, 2) == 1))
     output.rowheaders = output.textdata;
   elseif (size (output.textdata, 2) == data_columns)
     output.colheaders = output.textdata(end,:);
   endif
 
-  ## When delimiter = "\\t" convert it to a tab, as is done in the Matlab
-  ## version
-  if (strcmpi (delimiter, "\\t"))
+  ## When delimiter = "\\t" convert it to a tab, done for Matlab compatibility.
+  if (strcmp (delimiter, '\t'))
     delimiter = "\t";
   endif
+
 endfunction
