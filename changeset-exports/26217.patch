# HG changeset patch
# User Rik <rik@octave.org>
# Date 1544677018 28800
#      Wed Dec 12 20:56:58 2018 -0800
# Node ID 31267a10f8a9d8dab2fd1164bf4e01b2ac4a7b48
# Parent  96b6b69a157590a5cf77c2a3ebe0460c6afdd523
Use __go_line__ directly in plot scripts for performance.

* legend.m, plot3.m, __bar__.m, __stem__.m:
Replace instances of line() with __go_line__().

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -872,32 +872,34 @@ function [hleg, hleg_obj, hplot, labels]
 
           switch (typ)
 
             case "line"
               color = get (hplt, "color");
               style = get (hplt, "linestyle");
               lwidth = min (get (hplt, "linewidth"), 5);
               if (! strcmp (style, "none"))
-                l1 = line ("xdata", ([xoffset, xoffset + linelength] + xk * xstep) / lpos(3),
-                           "ydata", [1, 1] .* (lpos(4) - yoffset - yk * ystep) / lpos(4),
-                           "color", color, "linestyle", style, "linewidth", lwidth,
-                           "marker", "none");
+                l1 = __go_line__ (hlegend, ...
+                       "xdata", ([xoffset, xoffset + linelength] + xk * xstep) / lpos(3), ...
+                       "ydata", [1, 1] .* (lpos(4) - yoffset - yk * ystep) / lpos(4), ...
+                       "color", color, "linestyle", style, ...
+                       "linewidth", lwidth, "marker", "none");
                 setappdata (l1, "handle", hplt);
                 hobjects(end+1) = l1;
               endif
               marker = get (hplt, "marker");
               if (! strcmp (marker, "none"))
-                l1 = line ("xdata", (xoffset + 0.5 * linelength  + xk * xstep) / lpos(3),
-                           "ydata", (lpos(4) - yoffset - yk * ystep) / lpos(4),
-                           "color", color, "linestyle", "none", "linewidth", lwidth,
-                           "marker", marker,
-                           "markeredgecolor", get (hplt, "markeredgecolor"),
-                           "markerfacecolor", get (hplt, "markerfacecolor"),
-                           "markersize", min (get (hplt, "markersize"),10));
+                l1 = __go_line__ (hlegend, ...
+                       "xdata", (xoffset + 0.5 * linelength  + xk * xstep) / lpos(3), ...
+                       "ydata", (lpos(4) - yoffset - yk * ystep) / lpos(4), ...
+                       "color", color, "linestyle", "none", ...
+                       "linewidth", lwidth, "marker", marker, ...
+                       "markeredgecolor", get (hplt, "markeredgecolor"), ...
+                       "markerfacecolor", get (hplt, "markerfacecolor"), ...
+                       "markersize", min (get (hplt, "markersize"),10));
                 setappdata (l1, "handle", hplt);
                 hobjects(end+1) = l1;
               endif
 
               ## Newly labeled objects have listeners added
               if (! any (hplt == old_hplots))
                 addlistener (hplt, "color",
                              {@cb_line_listener, hlegend, linelength, false});
@@ -1305,31 +1307,31 @@ function cb_line_listener (h, ~, hlegend
     else
       [xpos2, ypos2] = get (lm, {"xdata", "ydata"}){:};
       xpos1 = xpos2 + [-0.5, 0.5] * linelength;
       ypos1 = [ypos2, ypos2];
       delete (lm);
     endif
 
     if (! strcmp (linestyle, "none"))
-      hl = line ("xdata", xpos1, "ydata", ypos1, "color", get (h, "color"),
-                 "linestyle", get (h, "linestyle"),
-                 "linewidth", min (get (h, "linewidth"), 5),
-                 "marker", "none",
-                 "parent", hlegend);
+      hl = __go_line__ (hlegend, "xdata", xpos1, "ydata", ypos1,
+                        "color", get (h, "color"),
+                        "linestyle", get (h, "linestyle"),
+                        "linewidth", min (get (h, "linewidth"), 5),
+                        "marker", "none");
       setappdata (hl, "handle", h);
     endif
     if (! strcmp (marker, "none"))
-      hl = line ("xdata", xpos2, "ydata", ypos2, "color", get (h, "color"),
-                 "marker", marker, "markeredgecolor", get (h, "markeredgecolor"),
-                 "markerfacecolor", get (h, "markerfacecolor"),
-                 "markersize", min (get (h, "markersize"), 10),
-                 "linestyle", "none",
-                 "linewidth", min (get (h, "linewidth"), 5),
-                 "parent", hlegend);
+      hl = __go_line__ (hlegend, "xdata", xpos2, "ydata", ypos2, ...
+                        "color", get (h, "color"), ...
+                        "marker", marker, "markeredgecolor", get (h, "markeredgecolor"), ...
+                        "markerfacecolor", get (h, "markerfacecolor"), ...
+                        "markersize", min (get (h, "markersize"), 10), ...
+                        "linestyle", "none", ...
+                        "linewidth", min (get (h, "linewidth"), 5));
       setappdata (hl, "handle", h);
     endif
   endif
 
 endfunction
 
 
 %!demo
diff --git a/scripts/plot/draw/plot3.m b/scripts/plot/draw/plot3.m
--- a/scripts/plot/draw/plot3.m
+++ b/scripts/plot/draw/plot3.m
@@ -208,19 +208,20 @@ function h = plot3 (varargin)
           if (isempty (marker) && isempty (linestyle))
              [linestyle, marker] = __next_line_style__ ();
           endif
           color = options.color;
           if (isempty (color))
             color = __next_line_color__ ();
           endif
 
-          htmp(++idx) = line (x(:, i), y(:, i), z(:, i),
-                              "color", color, "linestyle", linestyle,
-                              "marker", marker, properties{:});
+          htmp(++idx) = __go_line__ (hax, "xdata", x(:, i), "ydata", y(:, i),
+                                     "zdata", z(:, i),
+                                     "color", color, "linestyle", linestyle,
+                                     "marker", marker, properties{:});
           key = options.key;
           if (! isempty (key))
             hlgnd = [hlgnd, htmp(idx)];
             tlgnd = {tlgnd{:}, key};
           endif
         endfor
 
         x_set = 0;
@@ -263,19 +264,20 @@ function h = plot3 (varargin)
           if (isempty (marker) && isempty (linestyle))
             [linestyle, marker] = __next_line_style__ ();
           endif
           color = options.color;
           if (isempty (color))
             color = __next_line_color__ ();
           endif
 
-          htmp(++idx) = line (x(:, i), y(:, i), z(:, i),
-                              "color", color, "linestyle", linestyle,
-                              "marker", marker, properties{:});
+          htmp(++idx) = __go_line__ (hax, "xdata", x(:, i), "ydata", y(:, i),
+                                     "zdata", z(:, i),
+                                     "color", color, "linestyle", linestyle,
+                                     "marker", marker, properties{:});
           key = options.key;
           if (! isempty (key))
             hlgnd = [hlgnd, htmp(idx)];
             tlgnd = {tlgnd{:}, key};
           endif
         endfor
 
         x = new;
@@ -338,19 +340,20 @@ function h = plot3 (varargin)
         if (isempty (marker) && isempty (linestyle))
           [linestyle, marker] = __next_line_style__ ();
         endif
         color = options.color;
         if (isempty (color))
           color = __next_line_color__ ();
         endif
 
-        htmp(++idx) = line (x(:, i), y(:, i), z(:, i),
-                            "color", color, "linestyle", linestyle,
-                            "marker", marker, properties{:});
+        htmp(++idx) = __go_line__ (hax, "xdata", x(:, i), "ydata", y(:, i),
+                                   "zdata", z(:, i),
+                                   "color", color, "linestyle", linestyle,
+                                   "marker", marker, properties{:});
         key = options.key;
         if (! isempty (key))
           hlgnd = [hlgnd, htmp(idx)];
           tlgnd = {tlgnd{:}, key};
         endif
       endfor
     endif
 
diff --git a/scripts/plot/draw/private/__bar__.m b/scripts/plot/draw/private/__bar__.m
--- a/scripts/plot/draw/private/__bar__.m
+++ b/scripts/plot/draw/private/__bar__.m
@@ -277,18 +277,19 @@ function hglist = bars (hax, vertical, x
       else
         h = patch (hax, yb(:,:,i), xb(:,:,i), "parent", hg);
       endif
     endif
 
     if (i == 1)
       ## Add baseline object the first time through loop
       x_axis_range = get (hax, "xlim");
-      h_baseline = line (hax, x_axis_range, [base_value, base_value],
-                             "color", [0, 0, 0]);
+      h_baseline = __go_line__ (hax, "xdata", x_axis_range,
+                                     "ydata", [base_value, base_value],
+                                     "color", [0, 0, 0]);
       set (h_baseline, "handlevisibility", "off", "xliminclude", "off");
       set (h_baseline, "parent", get (hg, "parent"));
     endif
 
     ## Setup the hggroup and listeners
     addproperty ("showbaseline", hg, "radio", "{on}|off");
     addproperty ("basevalue", hg, "data", base_value);
     addproperty ("baseline", hg, "data", h_baseline);
diff --git a/scripts/plot/draw/private/__stem__.m b/scripts/plot/draw/private/__stem__.m
--- a/scripts/plot/draw/private/__stem__.m
+++ b/scripts/plot/draw/private/__stem__.m
@@ -94,17 +94,19 @@ function h = __stem__ (have_z, varargin)
                        "marker", ms, "markerfacecolor", fc, "parent", hg);
       else
         __line__ (hax, xt, yt, "color", lc, "linestyle", ls, "parent", hg);
         __line__ (hax, x(:,i), y(:, i), "color", mc, "linestyle", "none",
                        "marker", ms, "markerfacecolor", fc, "parent", hg);
 
         x_axis_range = get (hax, "xlim");
         if (isempty (h_baseline))
-          h_baseline = line (hax, x_axis_range, [0, 0], "color", [0, 0, 0]);
+          h_baseline = __go_line__ (hax, "xdata", x_axis_range,
+                                         "ydata", [0, 0],
+                                         "color", [0, 0, 0]);
           set (h_baseline, "handlevisibility", "off", "xliminclude", "off");
           addproperty ("basevalue", h_baseline, "data", 0);
         else
           set (h_baseline, "xdata", x_axis_range);
         endif
       endif
 
       ## Setup the hggroup and listeners.
