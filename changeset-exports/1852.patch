# HG changeset patch
# User jwe
# Date 823357404 0
#      Sat Feb 03 14:23:24 1996 +0000
# Node ID 4ca8c2d4e5f8d5f57d2ec25dcd66ac0167a1842b
# Parent  a032a0a729bd6e08de2169061f585c6b570f00d6
[project @ 1996-02-03 14:22:52 by jwe]

diff --git a/liboctave/f77-fcn.h b/liboctave/f77-fcn.h
--- a/liboctave/f77-fcn.h
+++ b/liboctave/f77-fcn.h
@@ -18,45 +18,49 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_f77_fcn_h)
 #define octave_f77_fcn_h 1
 
+#ifdef __cplusplus
+extern "C" {
+#endif
+
 #include <setjmp.h>
 
 /* Some Fortran compilers append underscores or generate uppercase
    external names. */
 
 #if defined (F77_APPEND_UNDERSCORE)
 #if defined (F77_UPPERCASE_NAMES)
-#define F77_FCN(f, F) F ## _
+#define F77_FCN(f, F) F##_
 #else
-#define F77_FCN(f, F) f ## _
+#define F77_FCN(f, F) f##_
 #endif
 #else
 #if defined (F77_UPPERCASE_NAMES)
 #define F77_FCN(f, F) F
 #else
 #define F77_FCN(f, F) f
 #endif
 #endif
 
 /* How to print an error for the F77_XFCN macro. */
 
 #if defined (F77_UPPERCASE_NAMES)
 #define F77_XFCN_ERROR(f, F) \
   (*current_liboctave_error_handler) \
-    ("exception encountered in Fortran subroutine %s", F);
+    ("exception encountered in Fortran subroutine %s", #F)
 #else
 #define F77_XFCN_ERROR(f, F) \
   (*current_liboctave_error_handler) \
-    ("exception encountered in Fortran subroutine %s", f);
+    ("exception encountered in Fortran subroutine %s", #f)
 #endif
 
 /* This can be used to call a Fortran subroutine that might call
    XSTOPX.  XSTOPX will call lonjmp with f77_context and we'll return,
    call the error function, restore the previous context.  After using
    this macro, error_state should be checked. */
 
 #define F77_XFCN(f, F, args) \
@@ -77,16 +81,20 @@ Software Foundation, 59 Temple Place - S
 /* For setjmp/longjmp. */
 extern jmp_buf f77_context;
 
 /* Defining this as a separate function allows us to avoid having to
    include string.h in this file. */
 
 extern void copy_f77_context (void *, void *, unsigned int);
 
+#ifdef __cplusplus
+}
+#endif
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
 */
