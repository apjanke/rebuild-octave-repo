# HG changeset patch
# User jwe
# Date 775506571 0
#      Fri Jul 29 18:29:31 1994 +0000
# Node ID a10f1c8ab10f9248d4cbef9985ab3d4ba56f3fff
# Parent  5d1aae432b690ac8a8f0184203fd1ade9614165a
[project @ 1994-07-29 18:29:13 by jwe]

diff --git a/src/oct-obj.h b/src/oct-obj.h
--- a/src/oct-obj.h
+++ b/src/oct-obj.h
@@ -93,17 +93,17 @@ private:
 //
 // from doing different things.  Instead, you have to use the
 // constructor
 //
 //   Octave_object (n, val);
 //
 // and supply a default value to create a vector-valued Octave_object.
 
-  Octave_object (int n) : Array<tree_constant> (n);
+  Octave_object (int n);
 
   void maybe_resize (int n);
 
   tree_constant& elem (int n);
   tree_constant& checkelem (int n);
 
   tree_constant& xelem (int n);
 
diff --git a/src/toplev.h b/src/toplev.h
--- a/src/toplev.h
+++ b/src/toplev.h
@@ -32,18 +32,19 @@ class tree_function;
 // Tell g++ that clean_up_and_exit doesn't return;
 
 #ifdef __GNUG__
 typedef void v_fcn_i (int);
 volatile v_fcn_i clean_up_and_exit;
 #endif
 
 extern void clean_up_and_exit (int);
-extern void parse_and_execute (char*, int);
-extern void parse_and_execute (FILE*, int);
+
+extern void parse_and_execute (FILE *f, int print = 0);
+extern void parse_and_execute (char *s, int print = 0, int verbose = 0);
 
 // argv[0] for this program.
 extern char *raw_prog_name;
 
 // Cleaned-up name of this program, not including path information.
 extern char *prog_name;
 
 // Login name for user running this program.
