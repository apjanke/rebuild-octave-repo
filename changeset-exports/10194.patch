# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1264263586 18000
#      Sat Jan 23 11:19:46 2010 -0500
# Node ID d4f813c3f5ed682fa05bfa364ee75f10c71d8d96
# Parent  1a4074e277fe8387ba39e0f790e6a17cd7a3b25a
more debug mode fixes

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2010-01-23  John W. Eaton  <jwe@octave.org>
+
+	* sighandlers.cc (user_abort): Also set debug_mode if Vdebugging.
+	* debug.cc (bp_table::do_add_breakpoint, do_remove_all_breakpoints,
+	bp_table::do_remove_breakpoint,	do_remove_all_breakpoints_in_file):
+	Also set debug_mode if Vdebugging.
+	* pt-eval.cc (visit_return_command): Actually call reset_debug_state.
+	(reset_debug_state): Also set debug_mode if Vdebugging.
+
 2010-01-22  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc (octave_main): Use new names for prog_args member
 	functions.
 
 2010-01-22  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc: Don't include sys/types.h, unistd.h, or fstream.
diff --git a/src/debug.cc b/src/debug.cc
--- a/src/debug.cc
+++ b/src/debug.cc
@@ -282,17 +282,17 @@ bp_table::do_add_breakpoint (const std::
 		    }
 		}
 	    }
 	}
     }
   else
     error ("add_breakpoint: unable to find the function requested\n");
 
-  tree_evaluator::debug_mode = bp_table::have_breakpoints ();
+  tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   return retval;
 }
 
 
 int 
 bp_table::do_remove_breakpoint (const std::string& fname, 
 				const bp_table::intmap& line)
@@ -338,17 +338,17 @@ bp_table::do_remove_breakpoint (const st
 
 	      retval = results.length ();
 	    }
 	}
       else
 	error ("remove_breakpoint: unable to find the function requested\n");
     }
 
-  tree_evaluator::debug_mode = bp_table::have_breakpoints ();
+  tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   return retval;
 }
 
 
 bp_table::intmap
 bp_table::do_remove_all_breakpoints_in_file (const std::string& fname, 
 					     bool silent)
@@ -377,29 +377,29 @@ bp_table::do_remove_all_breakpoints_in_f
 	    bp_set.erase (it);
 
 	}
     }
   else if (! silent)
     error ("remove_all_breakpoint_in_file: "
 	   "unable to find the function requested\n");
 
-  tree_evaluator::debug_mode = bp_table::have_breakpoints ();
+  tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   return retval;
 }
 
 void 
 bp_table::do_remove_all_breakpoints (void)
 {
   for (const_bp_set_iterator it = bp_set.begin (); it != bp_set.end (); it++)
     remove_all_breakpoints_in_file (*it);
 
 
-  tree_evaluator::debug_mode = bp_table::have_breakpoints ();
+  tree_evaluator::debug_mode = bp_table::have_breakpoints () || Vdebugging;
 }
 
 std::string 
 do_find_bkpt_list (octave_value_list slist, 
 		   std::string match)
 {
   std::string retval;
 
diff --git a/src/pt-eval.cc b/src/pt-eval.cc
--- a/src/pt-eval.cc
+++ b/src/pt-eval.cc
@@ -114,17 +114,17 @@ tree_evaluator::visit_continue_command (
           || tree_evaluator::in_loop_command)
         tree_continue_command::continuing = 1;
     }
 }
 
 void
 tree_evaluator::reset_debug_state (void)
 {
-  debug_mode = bp_table::have_breakpoints ();
+  debug_mode = bp_table::have_breakpoints () || Vdebugging;
 
   dbstep_flag = 0;
 }
 
 static inline void
 do_global_init (tree_decl_elt& elt)
 {
   tree_identifier *id = elt.ident ();
@@ -642,17 +642,17 @@ tree_evaluator::visit_return_command (tr
 
       // Act like dbcont.
 
       if (Vdebugging
           && octave_call_stack::current_frame () == current_frame)
         {
           Vdebugging = false;
 
-          reset_debug_state;
+          reset_debug_state ();
         }
       else if (tree_evaluator::in_fcn_or_script_body
                || tree_evaluator::in_loop_command)
         tree_return_command::returning = 1;
     }
 }
 
 void
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -35,16 +35,17 @@ along with Octave; see the file COPYING.
 
 #include "cmd-edit.h"
 #include "oct-syscalls.h"
 #include "quit.h"
 
 #include "debug.h"
 #include "defun.h"
 #include "error.h"
+#include "input.h"
 #include "load-save.h"
 #include "oct-map.h"
 #include "pager.h"
 #include "pt-bp.h"
 #include "pt-eval.h"
 #include "sighandlers.h"
 #include "sysdep.h"
 #include "syswait.h"
@@ -370,17 +371,18 @@ user_abort (const char *sig_name, int si
 	      octave_debug_on_interrupt_state = true;
 
 	      return;
 	    }
 	  else
 	    {
 	      // Clear the flag and do normal interrupt stuff.
 
-	      tree_evaluator::debug_mode = bp_table::have_breakpoints ();
+	      tree_evaluator::debug_mode
+                = bp_table::have_breakpoints () || Vdebugging;
 	      octave_debug_on_interrupt_state = false;
 	    }
 	}
 
       if (octave_interrupt_immediately)
 	{
 	  if (octave_interrupt_state == 0)
 	    octave_interrupt_state = 1;
