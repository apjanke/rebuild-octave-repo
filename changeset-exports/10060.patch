# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1262672922 -3600
#      Tue Jan 05 07:28:42 2010 +0100
# Node ID 8f51a90eb8d1eb31b670a606d4437b0447972ff4
# Parent  665ad34efeedd69571e319d6829fa9cb4f69efe7
implement default opts query and register opts for qp

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-01-05  Jaroslav Hajek  <highegg@gmail.com>
+
+	* optimization/qp.m: Supply default values on request and register
+	options.
+
 2010-01-05  John W. Eaton  <jwe@octave.org>
 
 	* qp.m: Allow linear term and constraint arguments to be
 	optional.
 
 2010-01-05  Joshua Redstone  <redstone@gmail.com>
 
 	* qp.m: Handle optimset options struct argument.
diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -93,20 +93,27 @@
 ## @item 3
 ## Maximum number of iterations reached.
 ## @item 6
 ## The problem is infeasible.
 ## @end table
 ## @end table
 ## @end deftypefn
 
+## PKG_ADD: __all_opts__ ("qp");
+
 function [x, obj, INFO, lambda] = qp (x0, H, varargin)
 
   nargs = nargin;
 
+  if (nargin == 1 && ischar (x0) && strcmp (x0, 'defaults'))
+    x = optimset ("MaxIter", 200);
+    return;
+  endif
+
   if (nargs > 2 && isstruct (varargin{end}))
     options = varargin{end};
     nargs--;
   else
     options = struct ();
   endif
 
   if (nargs >= 3)
