# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1243434899 14400
#      Wed May 27 10:34:59 2009 -0400
# Node ID 86f475d5e7d11fd464e2ee6951637a5fdc650739
# Parent  6e519bd0161590b2fd61026d3facb2a2375d5a77
imwrite.m: convert indexed images to RGB before calling __magick_write__

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,13 @@
 2009-05-27  John W. Eaton  <jwe@octave.org>
 
+	* image/imwrite.m: Convert indexed images to RGB before calling
+	__magick_write__.
+
 	* image/imshow.m: In demo, convert image to rgb before scaling
 	components.  Use imread instead of loadimage.
 
 2009-05-26  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Fix rendering of overlaping images and
 	line objects. Add demos as well.
 
diff --git a/scripts/image/imwrite.m b/scripts/image/imwrite.m
--- a/scripts/image/imwrite.m
+++ b/scripts/image/imwrite.m
@@ -137,16 +137,25 @@ function imwrite (varargin)
     if (isa (map, "double"))
       if (ndims (map) != 2 || size (map, 2) != 3)
         error ("imwrite: invalid size for colormap");
       endif
     else
       error ("imwrite: %s invalid class for indexed image colormap",
              class (map));
     endif
+
+    ## FIXME -- we should really be writing indexed images here but
+    ## __magick_write__ needs to be fixed to handle them.
+
+    [r, g, b] = ind2rgb (img, map);
+    tmp = uint8 (cat (3, r, g, b) * 255);
+
     if (has_param_list)
-      __magick_write__ (filename, fmt, img, map, options);
+      __magick_write__ (filename, fmt, tmp, options);
+      ## __magick_write__ (filename, fmt, img, map, options);
     else
-      __magick_write__ (filename, fmt, img, map);
+      __magick_write__ (filename, fmt, tmp);
+      ## __magick_write__ (filename, fmt, img, map);
     endif
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-05-27  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/__magick_read__.cc (write_image):
+	Bail out if given indexed image.
+
 2009-05-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/__magick_read__.cc (encode_map): Fix RGB color
 	construction.
 
 2009-05-26  John W. Eaton  <jwe@octave.org>
 
 	* load-path.h, load-path.cc (load_path::files, load_path::do_files): 
diff --git a/src/DLD-FUNCTIONS/__magick_read__.cc b/src/DLD-FUNCTIONS/__magick_read__.cc
--- a/src/DLD-FUNCTIONS/__magick_read__.cc
+++ b/src/DLD-FUNCTIONS/__magick_read__.cc
@@ -692,40 +692,48 @@ encode_map (std::vector<Magick::Image>& 
 static void
 write_image (const std::string& filename, const std::string& fmt,
              const octave_value& img,
              const octave_value& map = octave_value (),
              const octave_value& params = octave_value ())
 {
   std::vector<Magick::Image> imvec;
 
+  bool has_map = map.is_defined ();
+
+  if (has_map)
+    {
+      error ("__magick_write__: direct saving of indexed images not currently supported; use ind2rgb and save converted image");
+      return;
+    }
+
   if (img.is_bool_type ())
     encode_bool_image (imvec, img);
   else if (img.is_uint8_type ())
-    encode_uint_image<uint8NDArray> (imvec, img, map.is_defined ());
+    encode_uint_image<uint8NDArray> (imvec, img, has_map);
   else if (img.is_uint16_type ())
-    encode_uint_image<uint16NDArray> (imvec, img, map.is_defined ());
+    encode_uint_image<uint16NDArray> (imvec, img, has_map);
   else
     error ("__magick_write__: image type not supported");
 
-  if (! error_state && map.is_defined ())
+  if (! error_state && has_map)
     {
       NDArray cmap = map.array_value ();
 
       if (! error_state)
         encode_map (imvec, cmap);
     }
 
   if (! error_state && params.is_defined ())
     {
       Octave_map options = params.map_value ();
 
       // Insert calls here to handle parameters for various image formats
       if (fmt == "jpg" || fmt == "jpeg")
-        jpg_settings (imvec, options, map.is_defined ());
+        jpg_settings (imvec, options, has_map);
       else
         warning ("warning: your parameter(s) currently not supported");
     }
 
   try
     {
       Magick::writeImages (imvec.begin (), imvec.end (), filename);
     }
