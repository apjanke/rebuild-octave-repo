# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1370977361 18000
#      Tue Jun 11 14:02:41 2013 -0500
# Node ID c9007267cbf50bbb1ec094fbd3ba2212c85b2b34
# Parent  28a58b06e4ff488168853e3e893315f7a5729214
Variation of color option layouts with columns packed to the left

* settings-dialog.cc (settings_dialog::read_workspace_colors,
settings_dialog::read_terminal_colors): Add 4 space characters to front of
color description.  Set the column stretch for last (blank) column to 10.

diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -322,28 +322,29 @@ settings_dialog::read_workspace_colors (
   QGridLayout *style_grid = new QGridLayout ();
   QVector<QLabel*> description (nr_of_classes);
   QVector<color_picker*> color (nr_of_classes);
 
   int column = 0;
   int row = 0;
   for (int i = 0; i < nr_of_classes; i++)
     {
-      description[i] = new QLabel (class_names.at (i));
+      description[i] = new QLabel ("    " + class_names.at (i));
       description[i]->setAlignment (Qt::AlignRight);
       QVariant default_var = default_colors.at (i);
       QColor setting_color = settings->value ("workspaceview/color_"+class_chars.mid (i,1),
                                               default_var).value<QColor> ();
       color[i] = new color_picker (setting_color);
       color[i]->setObjectName ("color_"+class_chars.mid (i, 1));
       color[i]->setMinimumSize (30, 10);
       style_grid->addWidget (description[i], row, 3*column);
       style_grid->addWidget (color[i],       row, 3*column+1);
       if (++column == 3)
         {
+          style_grid->setColumnStretch (4*column, 10);
           row++;
           column = 0;
         }
     }
 
   // place grid with elements into the tab
   ui->workspace_colors_box->setLayout (style_grid);
 }
@@ -360,32 +361,29 @@ settings_dialog::read_terminal_colors (Q
   QGridLayout *style_grid = new QGridLayout ();
   QVector<QLabel*> description (nr_of_classes);
   QVector<color_picker*> color (nr_of_classes);
 
   int column = 0;
   int row = 0;
   for (int i = 0; i < nr_of_classes; i++)
     {
-      description[i] = new QLabel (class_names.at (i));
+      description[i] = new QLabel ("    " + class_names.at (i));
       description[i]->setAlignment (Qt::AlignRight);
       QVariant default_var = default_colors.at (i);
       QColor setting_color = settings->value ("terminal/color_"+class_chars.mid (i,1),
                                               default_var).value<QColor> ();
       color[i] = new color_picker (setting_color);
       color[i]->setObjectName ("terminal_color_"+class_chars.mid (i, 1));
       color[i]->setMinimumSize (30, 10);
       style_grid->addWidget (description[i], row, 2*column);
       style_grid->addWidget (color[i],       row, 2*column+1);
-      style_grid->setColumnStretch (2*column, 10);
-      style_grid->setColumnStretch (2*column+1, 10);
       if (++column == 2)
         {
           style_grid->setColumnStretch (3*column, 10);
-          style_grid->setColumnStretch (3*column+1, 10);
           row++;
           column = 0;
         }
     }
 
   // place grid with elements into the tab
   ui->terminal_colors_box->setLayout (style_grid);
 }
