# HG changeset patch
# User Max Brister <max@2bass.com>
# Date 1345923408 21600
#      Sat Aug 25 13:36:48 2012 -0600
# Node ID b0c08e995950264214367ffda28641c29b3f2ee6
# Parent  e5a86de6023c3f3310a349a9dbe295d81662f4ea
pt-jit.cc (jit_convert::get_variable): Add type bound

diff --git a/libinterp/interp-core/pt-jit.cc b/libinterp/interp-core/pt-jit.cc
--- a/libinterp/interp-core/pt-jit.cc
+++ b/libinterp/interp-core/pt-jit.cc
@@ -735,16 +735,18 @@ jit_variable *
 jit_convert::get_variable (const std::string& vname)
 {
   jit_variable *ret = find_variable (vname);
   if (ret)
     return ret;
 
   octave_value val = symbol_table::find (vname);
   jit_type *type = jit_typeinfo::type_of (val);
+  bounds.push_back (type_bound (type, vname));
+
   return create_variable (vname, type);
 }
 
 jit_variable *
 jit_convert::create_variable (const std::string& vname, jit_type *type)
 {
   jit_variable *var = factory.create<jit_variable> (vname);
   jit_extract_argument *extract;
@@ -2007,9 +2009,19 @@ Test some simple cases that compile.
 %!     li++;
 %!   else
 %!     si++;
 %!   endif;
 %! endwhile
 
 %!error test_compute_idom ()
 
+%!function x = test_overload (a)
+%!  while 1
+%!    x = a;
+%!    break;
+%!  endwhile
+%!endfunction
+
+%!assert (test_overload (1), 1);
+%!assert (test_overload ([1 2]), [1 2]);
+
 */
