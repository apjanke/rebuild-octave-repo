# HG changeset patch
# User jwe
# Date 813245502 0
#      Mon Oct 09 13:31:42 1995 +0000
# Node ID b1ba1894bccc46729a18ffe3e9dfcf24e8a5f05b
# Parent  539c43aa46e500c693caaadfda926558b7a759f5
[project @ 1995-10-09 13:31:42 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -1198,16 +1198,18 @@ next_token_is_postfix_unary_op (int spc_
 //   [ a . b ]
 //
 // which probably doesn't occur that often, can be worked around by
 // eliminating the whitespace, putting the expression in parentheses,
 // or using `whitespace_in_literal_matrix = "ignored"', so I think it
 // is an acceptable change.  It would be quite a bit harder to `fix'
 // this.  (Well, maybe not.  the best fix would be to do away with the
 // specialness of whitespace inside of `[ ... ]').
+//
+// However, we still do check for `.+', `.*', etc.
 
 static int
 next_token_is_bin_op (int spc_prev, char *yytext)
 {
   int bin_op = 0;
 
   int c0 = yyinput ();
 
@@ -1218,16 +1220,24 @@ next_token_is_bin_op (int spc_prev, char
       {
 	int c1 = yyinput ();
 	yyunput (c1, yytext);
 	int spc_next = (c1 == ' ' || c1 == '\t');
 	bin_op = looks_like_bin_op (spc_prev, spc_next);
       }
       break;
 
+    case '.':
+      {
+	int c1 = yyinput ();
+	yyunput (c1, yytext);
+	bin_op = match_any (c1, "+-*/\\^");
+      }
+      break;
+
     case '/':
     case ':':
     case '\\':
     case '^':
     case '&':
     case '*':
     case '|':
     case '<':
