# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1541150437 -3600
#      Fri Nov 02 10:20:37 2018 +0100
# Node ID 1c6dd836bca9052fa093b2f22c69848de563ebfc
# Parent  80c8062e855a3a86cccbda5d91f853214440dddb
Fix regression introduced by cset f5e08983d07c (bug #49490)

* gl-render.cc (draw_image): First compute all figure limits in axes
  coordinates and swap if x/ymin<x/ymax.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -3846,29 +3846,36 @@ namespace octave
     float im_xmax = x(1) + nor_dx/2;
     float im_ymin = y(0) - nor_dy/2;
     float im_ymax = y(1) + nor_dy/2;
 
     // Clip to axes or viewport
     bool do_clip = props.is_clipping ();
     Matrix vp = get_viewport_scaled ();
 
-    ColumnVector vp_lim =
+    ColumnVector vp_lim_min =
       xform.untransform (std::numeric_limits <float>::epsilon (),
                          std::numeric_limits <float>::epsilon ());
+    ColumnVector vp_lim_max = xform.untransform (vp(2), vp(3));
+
+    if (vp_lim_min(0) > vp_lim_max(0))
+      std::swap (vp_lim_min(0), vp_lim_max(0));
+        
+    if (vp_lim_min(1) > vp_lim_max(1))
+      std::swap (vp_lim_min(1), vp_lim_max(1));
+        
     float clip_xmin =
-      (do_clip ? (vp_lim(0) > xmin ? vp_lim(0) : xmin) : vp_lim(0));
+      (do_clip ? (vp_lim_min(0) > xmin ? vp_lim_min(0) : xmin) : vp_lim_min(0));
     float clip_ymin =
-      (do_clip ? (vp_lim(1) > ymin ? vp_lim(1) : ymin) : vp_lim(1));
-
-    vp_lim = xform.untransform (vp(2), vp(3));
+      (do_clip ? (vp_lim_min(1) > ymin ? vp_lim_min(1) : ymin) : vp_lim_min(1));
+
     float clip_xmax =
-      (do_clip ? (vp_lim(0) < xmax ? vp_lim(0) : xmax) : vp_lim(0));
+      (do_clip ? (vp_lim_max(0) < xmax ? vp_lim_max(0) : xmax) : vp_lim_max(0));
     float clip_ymax =
-      (do_clip ? (vp_lim(1) < ymax ? vp_lim(1) : ymax) : vp_lim(1));
+      (do_clip ? (vp_lim_max(1) < ymax ? vp_lim_max(1) : ymax) : vp_lim_max(1));
 
     if (im_xmin < clip_xmin)
       j0 += (clip_xmin - im_xmin)/nor_dx + 1;
     if (im_xmax > clip_xmax)
       j1 -= (im_xmax - clip_xmax)/nor_dx;
 
     if (im_ymin < clip_ymin)
       i0 += (clip_ymin - im_ymin)/nor_dy + 1;
