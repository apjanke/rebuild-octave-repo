# HG changeset patch
# User jwe
# Date 1041650197 0
#      Sat Jan 04 03:16:37 2003 +0000
# Node ID e0f687d372ef8d72d82f66f89daa010e990f5bdc
# Parent  3dc0815a2954ab1f5b8d6a5ce62d9fccbd39d471
[project @ 2003-01-04 03:16:37 by jwe]

diff --git a/liboctave/oct-alloc.h b/liboctave/oct-alloc.h
--- a/liboctave/oct-alloc.h
+++ b/liboctave/oct-alloc.h
@@ -59,17 +59,17 @@ private:
   bool grow (void);
 };
 
 #define DECLARE_OCTAVE_ALLOCATOR \
   public: \
     void *operator new (size_t size, void *p) \
       { return ::operator new (size, p); } \
     void operator delete (void *p, void *) \
-      { return ::operator delete (p); } \
+      { ::operator delete (p); } \
     void *operator new (size_t size) { return allocator.alloc (size); } \
     void operator delete (void *p, size_t size) { allocator.free (p, size); } \
   private: \
     static octave_allocator allocator;
 
 #define DEFINE_OCTAVE_ALLOCATOR(t) \
   octave_allocator t::allocator (sizeof (t))
 
diff --git a/src/oct-obj.h b/src/oct-obj.h
--- a/src/oct-obj.h
+++ b/src/oct-obj.h
@@ -61,17 +61,17 @@ public:
     { allocator.free (p, size); }
 
   // XXX FIXME XXX -- without this, I have errors with the stack of
   // octave_value_list objects in ov-usr-fcn.h.  Why?
   void *operator new (size_t size, void *p)
     { return ::operator new (size, p); }
 
   void operator delete (void *p, void *)
-    { return ::operator delete (p, static_cast<void *> (0)); }
+    { ::operator delete (p, static_cast<void *> (0)); }
 
   octave_value_list& operator = (const octave_value_list& obj)
     {
       if (this != &obj)
 	{
 	  data = obj.data;
 	  names = obj.names;
 	}
