# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1261261442 28800
#      Sat Dec 19 14:24:02 2009 -0800
# Node ID 2ea3110e15ed8d54cf4e2eecf194ec533e466468
# Parent  e93c9bfff8b891913e3b99e3210e2bc995d4cbc7
Use M4 quoting for arguments to autoconf macros containing variables

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,11 +1,17 @@
+2009-12-11  Rik <octave@nomad.inbox5.com>
+
+	* Makefile.am: Use M4 quoting for arguments to autoconf macros containing
+	variables
+
 2009-12-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (Fsize_equal): Allow calling with zero arguments.
+	variables
 
 2009-12-15  John W. Eaton  <jwe@octave.org>
 
 	* README.MSVC: Delete section about obtaining glob library.
 	* bootstrap.conf (gnulib_modules): Add fnmatch and glob to the list.
 	* common.mk (LIBGLOB): Delete variable.
 	(do_subst_config_vals): Don't substitute it.
 	* octave-bug.in, octave-bug.cc.in: Eliminate LIBGLOB variable.
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -167,22 +167,22 @@ if $USE_64_BIT_IDX_T; then
   if test $ac_cv_sizeof_void_p -eq 8; then
     if test $ac_cv_sizeof_int -eq 8; then
       OCTAVE_IDX_TYPE=int
     elif test $ac_cv_sizeof_long -eq 8; then
       OCTAVE_IDX_TYPE=long
       AC_DEFINE(IDX_TYPE_LONG, 1, [Define to 1 if octave index type is long])
     else
       warn_64_bit="no suitable type found for octave_idx_type so disabling 64-bit features"
-      AC_MSG_WARN($warn_64_bit)
+      AC_MSG_WARN([$warn_64_bit])
       USE_64_BIT_IDX_T=false
     fi
   else
     warn_64_bit="pointers are not 64-bits wide so disabling 64-bit features"
-    AC_MSG_WARN($warn_64_bit)
+    AC_MSG_WARN([$warn_64_bit])
     USE_64_BIT_IDX_T=false
   fi
 fi
 AC_SUBST(OCTAVE_IDX_TYPE)
 AC_DEFINE_UNQUOTED(OCTAVE_IDX_TYPE, $OCTAVE_IDX_TYPE,
   [Define to the type of octave_idx_type (64 or 32 bit signed integer)])
 if $USE_64_BIT_IDX_T; then
   AC_DEFINE(USE_64_BIT_IDX_T, 1, [Define if using 64-bit integers for array dimensions and indexing])
@@ -236,17 +236,17 @@ gl_INIT
 
 ### Do special things for gcc.
 
 gcc_version=`$CC -v 2>&1 | grep "^.*gcc version" | \
   sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//'`
 case "$gcc_version" in
   [12].*)
     warn_gcc_version="gcc version $gcc_version is likely to cause problems"
-    AC_MSG_WARN($warn_gcc_version)
+    AC_MSG_WARN([$warn_gcc_version])
   ;;
 esac
 
 CC_VERSION=
 if test -n "$gcc_version"; then
   CC_VERSION="$gcc_version"
 fi
 AC_SUBST(CC_VERSION)
@@ -604,28 +604,28 @@ if test "$WITH_PCRE" = yes; then
     REGEX_LIBS=-lpcre
   fi
   save_LIBS="$LIBS"
   LIBS="$REGEX_LIBS $LIBS"
   AC_CHECK_FUNCS(pcre_compile, [using_pcre=yes
     AC_DEFINE(HAVE_PCRE, 1, [Define if PCRE library is available.])], [
       REGEX_LIBS=
       warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
-      AC_MSG_WARN($warn_pcre)])
+      AC_MSG_WARN([$warn_pcre])])
   LIBS="$save_LIBS"
 else
   warn_pcre="PCRE library not found.  This will result in some loss of functionality for the regular expression matching functions."
-  AC_MSG_WARN($warn_pcre)
+  AC_MSG_WARN([$warn_pcre])
 fi
 
 AC_CHECK_FUNCS(regexec, [using_regex=yes], [
   AC_CHECK_LIB(regex, regexec, [using_regex=yes
     REGEX_LIBS="-lregex $REGEX_LIBS"], [
       warn_regex="regular expression functions not found.  The regular expression matching functions will be disabled."
-      AC_MSG_WARN($warn_regex)])])
+      AC_MSG_WARN([$warn_regex])])])
 
 if test "$using_regex" = yes; then
   AC_DEFINE(HAVE_REGEX, 1, [Define if regex library is available.])
 fi
 
 AC_SUBST(REGEX_LIBS)
 
 ### Check for ZLIB library.
@@ -816,17 +816,17 @@ else
   FLTK_LDFLAGS="`$FLTK_CONFIG $fltkconf_args --use-gl --ldflags`"
   
   case "$canonical_host_type" in
     *-*-mingw*)
       FLTK_LDFLAGS="`echo $FLTK_LDFLAGS | sed -e 's/-mwindows//g'`"
     ;;
   esac
 
-  AC_MSG_CHECKING(for OpenGL support in FLTK)
+  AC_MSG_CHECKING([for OpenGL support in FLTK])
   cat > conftest.cc <<EOF
   #include <FL/gl.h>
   int nothing=0;
 EOF
   $CXX $CXXFLAGS $FLTK_CFLAGS -c conftest.cc || \
     warn_fltk_opengl="FLTK does not have OpenGL support.  Native graphics will be disabled."
 
   if test -z "$warn_fltk_opengl"; then
@@ -899,100 +899,100 @@ OCTAVE_CHECK_LIBRARY(qrupdate, qrupdate,
 
 if test "$octave_qrupdate_ok" = yes; then
   LIBS="$LIBS $QRUPDATE_LIBS"
   AC_LANG_PUSH([Fortran 77])
   AC_MSG_CHECKING([for slup1up in $QRUPDATE_LIBS])
   octave_qrupdate_luu=no
   AC_LINK_IFELSE([AC_LANG_CALL([], [slup1up])],
   [octave_qrupdate_luu=yes])
-  AC_MSG_RESULT($octave_qrupdate_luu)
+  AC_MSG_RESULT([$octave_qrupdate_luu])
   if test "$octave_qrupdate_luu" = yes; then
     AC_DEFINE(HAVE_QRUPDATE_LUU, [1], [Define if qrupdate supports LU updates])
   fi
   AC_LANG_POP([Fortran 77])
 fi
 LIBS="$save_LIBS"
 
 # Check for AMD library
 
 OCTAVE_CHECK_LIBRARY(amd, AMD,
   [AMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/amd.h ufsparse/amd.h amd/amd.h amd.h],
   [amd_postorder],
-  [], [don't use AMD library, disable some sparse functionality])
+  [], [don't use AMD library, disable some sparse matrix functionality])
 
 # Check for CAMD library
 
 OCTAVE_CHECK_LIBRARY(camd, CAMD,
   [CAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/camd.h ufsparse/camd.h amd/camd.h camd.h],
   [camd_postorder],
-  [], [don't use CAMD library, disable some sparse functionality])
+  [], [don't use CAMD library, disable some sparse matrix functionality])
 
 # Check for COLAMD library
 
 OCTAVE_CHECK_LIBRARY(colamd, COLAMD,
   [COLAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/colamd.h ufsparse/colamd.h amd/colamd.h colamd.h],
   [colamd],
-  [], [don't use COLAMD library, disable some sparse functionality])
+  [], [don't use COLAMD library, disable some sparse matrix functionality])
 
 # Check for CCOLAMD library
 
 OCTAVE_CHECK_LIBRARY(ccolamd, CCOLAMD,
   [CCOLAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/ccolamd.h ufsparse/ccolamd.h amd/ccolamd.h ccolamd.h],
   [ccolamd],
-  [], [don't use CCOLAMD library, disable some sparse functionality])
+  [], [don't use CCOLAMD library, disable some sparse matrix functionality])
 
 # Check for CHOLMOD library.  If your cholmod library requires cblas,
 # then you will need to configure with --with-cholmod="-lcholmod -lcblas".
 
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(cholmod, CHOLMOD,
   [CHOLMOD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h],
   [cholmod_start],
-  [], [don't use CHOLMOD library, disable some sparse functionality])
+  [], [don't use CHOLMOD library, disable some sparse matrix functionality])
 LIBS="$save_LIBS"
 
 # Check for CXSparse library
 
 OCTAVE_CHECK_LIBRARY(cxsparse, CXSparse,
   [CXSparse library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/cs.h ufsparse/cs.h amd/cs.h cs.h],
   [cs_di_sqr],
-  [C++], [don't use CXSparse library, disable some sparse functionality])
+  [C++], [don't use CXSparse library, disable some sparse matrix functionality])
 
 # Check for UMFPACK library.
 
 save_LIBS="$LIBS"
 save_CPPFLAGS="$CPPFLAGS"
 LIBS="$AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS"
 CPPFLAGS="$AMD_CPPFLAGS $CPPFLAGS"
 OCTAVE_CHECK_LIBRARY(umfpack, UMFPACK,
   [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h],
   [umfpack_zi_get_determinant],
-  [], [don't use UMFPACK, disable some sparse functionality])
+  [], [don't use UMFPACK, disable some sparse matrix functionality])
 CPPFLAGS="$save_CPPFLAGS"
 LIBS="$save_LIBS"
 
 if test -z "$UMFPACK_LIBS"; then
   ## Invalidate the cache and try again with -lcblas.
   $as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
   save_LIBS="$LIBS"
   LIBS="-lcblas $AMD_LDFLAGS $AMD_LIBS $BLAS_LIBS $FLIBS $LIBS"
   OCTAVE_CHECK_LIBRARY(umfpack, UMFPACK,
     [UMFPACK not found.  This will result in some lack of functionality for sparse matrices.],
     [suitesparse/umfpack.h ufsparse/umfpack.h umfpack/umfpack.h umfpack.h],
     [umfpack_zi_get_determinant],
-    [], [don't use UMFPACK, disable some sparse functionality])
+    [], [don't use UMFPACK, disable some sparse matrix functionality])
   if test -n "$UMFPACK_LIBS"; then
     UMFPACK_LIBS="$UMFPACK_LIBS -lcblas"
   fi
   LIBS="$save_LIBS"
 fi
 
 if test -n "$UMFPACK_LIBS"; then
   save_LIBS="$LIBS";
@@ -1464,17 +1464,17 @@ double tgamma (double);
 #endif
 ])
 AC_LANG_POP(C++)
 
 case "$canonical_host_type" in
   *-*-mingw*)
     ## MinGW does not provide a mkstemp function.  However, it provides
     ## the mkstemps function in libiberty.
-    AC_MSG_CHECKING(for mkstemps in libiberty)
+    AC_MSG_CHECKING([for mkstemps in libiberty])
     save_LIBS="$LIBS"
     LIBS="-liberty $LIBS"
     AC_LINK_IFELSE([
       AC_LANG_PROGRAM([[int mkstemps (char *pattern, int suffix_len);]], 
        [[mkstemps ("XXXXXX", 0);]]
     )],
     [AC_MSG_RESULT(yes)
      HAVE_MKSTEMPS=yes
@@ -1635,17 +1635,17 @@ AC_SUBST(ENABLE_DYNAMIC_LINKING)
 AC_SUBST(LIBOCTINTERP)
 AC_SUBST(LIBOCTAVE)
 AC_SUBST(LIBCRUFT)
 
 ### There is more than one possible prototype for gettimeofday.  See
 ### which one (if any) appears in sys/time.h.  These tests are from
 ### Emacs 19.
 
-AC_MSG_CHECKING(for struct timeval)
+AC_MSG_CHECKING([for struct timeval])
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef TIME_WITH_SYS_TIME
 #include <sys/time.h>
 #include <time.h>
 #else
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #else
 #include <time.h>
@@ -1653,17 +1653,17 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#if
 #endif]], [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
   [AC_MSG_RESULT(yes)
    HAVE_TIMEVAL=yes
    AC_DEFINE(HAVE_TIMEVAL, 1, [Define if struct timeval is defined.])],
   [AC_MSG_RESULT(no)
    HAVE_TIMEVAL=no])
 
 if test "x$HAVE_TIMEVAL" = xyes; then
-AC_MSG_CHECKING(whether gettimeofday can't accept two arguments)
+AC_MSG_CHECKING([whether gettimeofday can't accept two arguments])
 AC_LINK_IFELSE([AC_LANG_PROGRAM([[#ifdef TIME_WITH_SYS_TIME
 #include <sys/time.h>
 #include <time.h>
 #else
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #else
 #include <time.h>
@@ -1740,17 +1740,17 @@ for termlib in ncurses curses termcap te
     TERM_LIBS="-l${termlib}"
     octave_found_termlib=yes
     break])
 done
 
 if test "$octave_found_termlib" = no; then
   warn_termlibs="I couldn't find -ltermcap, -lterminfo, -lncurses, -lcurses, o\
 r -ltermlib!"
-  AC_MSG_WARN($warn_termlibs)
+  AC_MSG_WARN([$warn_termlibs])
 fi
 AC_SUBST(TERM_LIBS)
 
 OCTAVE_ENABLE_READLINE
 
 AC_MSG_CHECKING([for struct exception in math.h])
 AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <math.h>]],
   [[struct exception *x; x->type; x->name;]])],
@@ -2231,167 +2231,167 @@ if $ENABLE_DYNAMIC_LINKING; then
   else
     AC_MSG_WARN([You used --enable-dl but not --enable-shared.])
     AC_MSG_WARN([Are you sure that is what you want to do?])
     warn_msg_printed=true
   fi
 fi
 
 if test -n "$gxx_only"; then
-  AC_MSG_WARN($gxx_only)
+  AC_MSG_WARN([$gxx_only])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_gcc_version"; then
-  AC_MSG_WARN($warn_gcc_version)
+  AC_MSG_WARN([$warn_gcc_version])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_gcc_only"; then
-  AC_MSG_WARN($warn_gcc_only)
+  AC_MSG_WARN([$warn_gcc_only])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_readline"; then
-  AC_MSG_WARN($warn_readline)
+  AC_MSG_WARN([$warn_readline])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_termlibs"; then
-  AC_MSG_WARN($warn_termlibs)
+  AC_MSG_WARN([$warn_termlibs])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_gperf"; then
-  AC_MSG_WARN($warn_gperf)
+  AC_MSG_WARN([$warn_gperf])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_flex"; then
-  AC_MSG_WARN($warn_flex)
+  AC_MSG_WARN([$warn_flex])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_bison"; then
-  AC_MSG_WARN($warn_bison)
+  AC_MSG_WARN([$warn_bison])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_less"; then
-  AC_MSG_WARN($warn_less)
+  AC_MSG_WARN([$warn_less])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_umfpack"; then
-  AC_MSG_WARN($warn_umfpack)
+  AC_MSG_WARN([$warn_umfpack])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_qrupdate"; then
-  AC_MSG_WARN($warn_qrupdate)
+  AC_MSG_WARN([$warn_qrupdate])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_amd"; then
-  AC_MSG_WARN($warn_amd)
+  AC_MSG_WARN([$warn_amd])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_colamd"; then
-  AC_MSG_WARN($warn_colamd)
+  AC_MSG_WARN([$warn_colamd])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_ccolamd"; then
-  AC_MSG_WARN($warn_ccolamd)
+  AC_MSG_WARN([$warn_ccolamd])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_cholmod"; then
-  AC_MSG_WARN($warn_cholmod)
+  AC_MSG_WARN([$warn_cholmod])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_cxsparse"; then
-  AC_MSG_WARN($warn_cxsparse)
+  AC_MSG_WARN([$warn_cxsparse])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_arpack"; then
-  AC_MSG_WARN($warn_arpack)
+  AC_MSG_WARN([$warn_arpack])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_curl"; then
-  AC_MSG_WARN($warn_curl)
+  AC_MSG_WARN([$warn_curl])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_fftw"; then
-  AC_MSG_WARN($warn_fftw)
+  AC_MSG_WARN([$warn_fftw])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_glpk"; then
-  AC_MSG_WARN($warn_glpk)
+  AC_MSG_WARN([$warn_glpk])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_magick"; then
-  AC_MSG_WARN($warn_magick)
+  AC_MSG_WARN([$warn_magick])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_hdf5"; then
-  AC_MSG_WARN($warn_hdf5)
+  AC_MSG_WARN([$warn_hdf5])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_regex"; then
-  AC_MSG_WARN($warn_regex)
+  AC_MSG_WARN([$warn_regex])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_pcre"; then
-  AC_MSG_WARN($warn_pcre)
+  AC_MSG_WARN([$warn_pcre])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_qhull"; then
-  AC_MSG_WARN($warn_qhull)
+  AC_MSG_WARN([$warn_qhull])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_zlib"; then
-  AC_MSG_WARN($warn_zlib)
+  AC_MSG_WARN([$warn_zlib])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_ghostscript"; then
-  AC_MSG_WARN($warn_ghostscript)
+  AC_MSG_WARN([$warn_ghostscript])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_makeinfo"; then
-  AC_MSG_WARN($warn_makeinfo)
+  AC_MSG_WARN([$warn_makeinfo])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_texi2dvi"; then
-  AC_MSG_WARN($warn_texi2dvi)
+  AC_MSG_WARN([$warn_texi2dvi])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_texi2pdf"; then
-  AC_MSG_WARN($warn_texi2pdf)
+  AC_MSG_WARN([$warn_texi2pdf])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_64_bit"; then
-  AC_MSG_WARN($warn_64_bit)
+  AC_MSG_WARN([$warn_64_bit])
   warn_msg_printed=true
 fi
 
 if test -n "$warn_gnuplot"; then
 
   ## If you change this text, be sure to also change the corresponding
   ## set of warnings above.
 
@@ -2423,35 +2423,35 @@ if $USE_64_BIT_IDX_T; then
   AC_MSG_WARN([BLAS and LAPACK libraries are compiled to use 8 byte])
   AC_MSG_WARN([signed integers for array indexing.])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
 
 native_graphics=true
 if test -n "$warn_freetype"; then
-  AC_MSG_WARN("$warn_freetype")
+  AC_MSG_WARN([$warn_freetype])
   native_graphics=false
   warn_msg_printed=true
 fi
 
 if test -n "$warn_fontconfig"; then
-  AC_MSG_WARN("$warn_fontconfig")
+  AC_MSG_WARN([$warn_fontconfig])
   native_graphics=false
   warn_msg_printed=true
 fi
 
 if test -n "$warn_fltk_config"; then
-  AC_MSG_WARN("$warn_fltk_config")
+  AC_MSG_WARN([$warn_fltk_config])
   native_graphics=false
   warn_msg_printed=true
 fi
 
 if test -n "$warn_fltk_opengl"; then
-  AC_MSG_WARN("$warn_fltk_opengl")
+  AC_MSG_WARN([$warn_fltk_opengl])
   native_graphics=false
   warn_msg_printed=true
 fi
 
 if $native_graphics; then
   true;
 else
   AC_MSG_WARN([])
@@ -2459,16 +2459,14 @@ else
   AC_MSG_WARN([graphics. It isn't necessary to have native graphics])
   AC_MSG_WARN([but you will have to use gnuplot or you won't be able])
   AC_MSG_WARN([to use any of Octave's plotting commands])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
 
 if $warn_msg_printed; then
-  AC_MSG_NOTICE([
-
-NOTE: libraries may be skipped if a library is not found OR
-      if the library on your system is missing required features.
-])
+  AC_MSG_NOTICE([])
+  AC_MSG_NOTICE([NOTE: libraries may be skipped if a library is not found OR])
+  AC_MSG_NOTICE([NOTE: if the library on your system is missing required features.])
 fi
 
 ### End of configure.
