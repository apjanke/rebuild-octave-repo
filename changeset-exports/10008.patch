# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1261342928 -7200
#      Sun Dec 20 23:02:08 2009 +0200
# Node ID b6261d776a8257b7ee560684f6852a14b0edfba4
# Parent  12dd0a7597ff9615c515ac9a9f43cc07b1d27d14
handle window title correctly in fltk_backend

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2009-12-20  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* DLD-FUNCTIONS/fltk_backend.cc (plot_sindow::set_name): New method.
+	(figure_manager::set_name, figure_manage::do_set_name): New methods.
+	(fltk_backend::property_changed): Handle change of figure title string.
+
 2009-12-19  Rik <octave@nomad.inbox5.com>
 
 	* Makefile.am: Eliminate TOPDIR variable in favor of built-in automake
 	variables of top_builddir and top_srcdir.
 
 2009-12-18  David Grundberg  <davidg@cs.umu.se>
 
 	* ov-usr-fcn.cc (octave_user_script::do_multi_index_op):
diff --git a/src/DLD-FUNCTIONS/fltk_backend.cc b/src/DLD-FUNCTIONS/fltk_backend.cc
--- a/src/DLD-FUNCTIONS/fltk_backend.cc
+++ b/src/DLD-FUNCTIONS/fltk_backend.cc
@@ -278,23 +278,20 @@ public:
         }
     }
     end ();
 
     status->show ();
     autoscale->show ();
     togglegrid->show ();
 
+    set_name ();
     resizable (canvas);
     size_range (4*status_h, 2*status_h);
 
-    std::stringstream name;
-    name << "octave: figure " << number ();
-    window_label = name.str ();
-    label (window_label.c_str ());
   }
 
   ~plot_window (void)
   {
     canvas->hide ();
     status->hide ();
     this->hide ();
     delete canvas;
@@ -315,16 +312,33 @@ public:
   }
 
   void mark_modified (void)
   {
     damage (FL_DAMAGE_ALL);
     canvas->damage (FL_DAMAGE_ALL);
   }
 
+  void set_name (void)
+  {
+    std::stringstream name;
+    std::string sep;
+
+    if (fp.is_numbertitle ()) 
+      {
+        name << "Figure " << number ();
+        sep = ": ";
+      }
+    if (fp.get_name ().size ())
+      name << sep << fp.get_name ();
+
+    window_label = name.str ();
+    label (window_label.c_str ());
+  }
+
 private:
   // window name -- this must exists for the duration of the window's
   // life
   std::string window_label;
 
   // Figure properties.
   figure::properties& fp;
 
@@ -703,16 +717,27 @@ public:
       instance->do_mark_modified (idx);
   }
 
   static void mark_modified (const graphics_handle& gh)
   {
     mark_modified (hnd2idx (gh));
   }
 
+  static void set_name (int idx)
+  {
+    if (instance_ok ())
+      instance->do_set_name (idx);
+  }
+
+  static void set_name (std::string idx_str)
+  {
+    set_name (str2idx (idx_str));
+  }
+
   static Matrix get_size (int idx)
   {
     return instance_ok () ? instance->do_get_size (idx) : Matrix ();
   }
 
   static Matrix get_size (const graphics_handle& gh)
   {
     return get_size (hnd2idx (gh));
@@ -792,16 +817,25 @@ private:
   {
     wm_iterator win;
     if ((win = windows.find (idx)) != windows.end ())
       {
 	win->second->mark_modified ();
       }
   }
 
+  void do_set_name (int idx)
+  {
+    wm_iterator win;
+    if ((win = windows.find (idx)) != windows.end ())
+      {
+	win->second->set_name ();
+      }
+  }
+
   Matrix do_get_size (int idx)
   {
     Matrix sz (1, 2, 0.0);
 
     wm_iterator win;
     if ((win = windows.find (idx)) != windows.end ())
       {
 	sz(0) = win->second->w ();
@@ -948,18 +982,23 @@ public:
 	if (! ov.is_empty ())
 	  {
             const figure::properties& fp =
               dynamic_cast<const figure::properties&> (go.get_properties ());
             
 	    switch (id)
 	      {
 	      case base_properties::VISIBLE:
-                figure_manager::toggle_window_visibility (ov.string_value(), fp.is_visible ());
+                figure_manager::toggle_window_visibility (ov.string_value (), fp.is_visible ());
 		break;
+
+              case figure::properties::NAME:
+              case figure::properties::NUMBERTITLE:
+                figure_manager::set_name (ov.string_value ());
+                break;
 	      }
 	  }
       }
   }
 
   void redraw_figure (const graphics_object& go) const
   {
     figure_manager::mark_modified (go.get_handle ());
