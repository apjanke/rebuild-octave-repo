# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1463489107 -36000
#      Tue May 17 22:45:07 2016 +1000
# Node ID be52b94354a3ca4513e219f9574d9b08a97d7d7a
# Parent  949cb46e6bdbe5161fd89c221024a0e4da03e1c8
Restore ability to breakpoint scripts (not functions) (bug #47917).

* debug.cc (bp_table::do_add_breakpoint): Add 'else' clause for scripts.

diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -711,20 +711,25 @@ bp_table::do_add_breakpoint (const std::
           // The breakpoint is either in the subfunction found above,
           // or in the main function, which we check now.
           if (main_fcn->is_user_function ())
             {
               int e = dynamic_cast<octave_user_function*> (main_fcn)
                       ->ending_line ();
               if (e >= lineno && e < earliest_end)
                 dbg_fcn = main_fcn;
+
+              if (! dbg_fcn)
+                dbg_fcn = next_fcn;
             }
-
-          if (! dbg_fcn)
-            dbg_fcn = next_fcn;
+          else
+            {
+              if (! dbg_fcn)
+                dbg_fcn = main_fcn;
+            }
 
           // We've found the right (sub)function.  Now insert the breakpoint.
           // We insert all breakpoints.
           // If multiple are in the same function, we insert multiple times.
           intmap ret_one;
           if (dbg_fcn
               && do_add_breakpoint_1 (dbg_fcn, fname, line, condition, ret_one))
             retval.insert (std::pair<int,int> (i, ret_one.find (i)->second));
