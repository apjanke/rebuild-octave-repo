# HG changeset patch
# User jwe
# Date 1181712243 0
#      Wed Jun 13 05:24:03 2007 +0000
# Node ID 7817779989273fa1f01168acbe8062bb813da5eb
# Parent  31c8d115f25d9155973017251f14192d3bb16dba
[project @ 2007-06-13 05:23:56 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-12  Benjamin Lindner  <lindnerben@gmx.net>
+
+	* configure.in: For mingw, add -lws2_32 -lkernel32 to LIBS and set
+	_USE_MATH_DEFINES same as for msvc.
+
 2007-06-06  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* configure.in: Check for utime.h and sys/utime.h headers.
 	Check for utime, _chmod, _utime, and _utime32 functions.
 
 2007-06-03  David Bateman  <dbateman@free.fr>
 
 	* configure.in (AC_CONFIG_FILES): Add src/mxarray.h
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.564 $)
+AC_REVISION($Revision: 1.565 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1285,21 +1285,21 @@ AC_SUBST(library_path_var)
 ###
 ### I am told that on some SCO systems, the only place to find some
 ### functions like gethostname and gettimeofday is in libsocket.
 
 AC_CHECK_FUNCS(gethostname, [], [AC_CHECK_LIB(socket, gethostname)])
 AC_CHECK_FUNCS(getpwnam, [], [AC_CHECK_LIB(sun, getpwnam)])
 
 case "$canonical_host_type" in
-  *-*-cygwin* | *-*-mingw*)
+  *-*-cygwin*)
    AC_CHECK_LIB(wsock32, gethostname)
    LIBS="$LIBS -lwsock32"
   ;;
-  *-*-msdosmsvc*)
+  *-*-msdosmsvc* | *-*-mingw*)
   LIBS="$LIBS -lws2_32 -lkernel32"
   ;;
 esac
 
 ### Type stuff.
 
 AC_TYPE_MODE_T
 AC_TYPE_OFF_T
@@ -1436,17 +1436,17 @@ case "$canonical_host_type" in
   *)
     AC_CHECK_FUNCS(strptime)
   ;;
 esac
 
 OCTAVE_SMART_PUTENV
 
 case "$canonical_host_type" in
-  *-*-msdosmsvc)
+  *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[
 #include <windows.h>
 #if _WIN32_WINNT < 0x0403
 #error "Wrong version"
 #endif]], []),
       AC_MSG_RESULT([none]), [
 	AC_DEFINE(_WIN32_WINNT, 0x0403, [Define to 0x0403 to access InitializeCriticalSectionAndSpinCount])
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,25 +1,28 @@
+2007-06-12  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* plot/__pltopt1__.m: Set linestyle to "none" instead of "".
+	Set have_linestyle to true if two character linestyle is found.
+
 2007-06-12  David Bateman  <dbateman@free.fr>
 
-	* general/interp1.m: Change examples to use new graphics
-	interface.
+	* general/interp1.m: Change examples to use new graphics interface.
 	* general/__splinen__.m: New support function for N-dimensional
 	spline interpolation.
 	* general/bicubic.m: Allow definition of extrapolation
 	value. Adapt tests to use new graphics interface
 	* general/interp2.m: Call __splinen__ for 2-D spline
 	interpolation. Make the lookup table code only be called for
 	linear and nearest methods.
 	* general/interpn.m: New function for N-dimensional, linear, nearest
 	and spline interpolation.
 	* general/interp3.m: New function for 3-dimensional, linear, nearest
 	and spline interpolation.
-	* polynomial/spline.m: Change examples to use new graphics
-	interface.
+	* polynomial/spline.m: Change examples to use new graphics interface.
 	
 2007-06-12  Steve M. Robbins  <steve@sumost.ca>
 
 	* statistics/tests/wilcoxon_test.m: Error if N <= 25.
 
 2007-06-12  Søren Hauberg  <soren@hauberg.org>
 
 	* plot/fplot.m: If function is inline, vectorize it.
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -43,16 +43,17 @@ function [options, valid] = __pltopt1__ 
   endif
 
   have_linestyle = false;
   have_marker = false;
 
   while (! isempty (opt))
     if (strncmp (opt, "--", 2) || strncmp (opt, "-.", 2))
       options.linestyle = opt(1:2);
+      have_linestyle = true;
       n = 2;
     else
       topt = opt(1);
       n = 1;
       if (topt == "-" || topt == ":")
 	have_linestyle = true;
 	options.linestyle = topt;
       elseif (topt == "+" || topt == "o" || topt == "*"
@@ -108,12 +109,12 @@ function [options, valid] = __pltopt1__ 
 	  return;
 	endif
       endif
     endif
     opt(1:n) = [];
   endwhile
 
   if (have_marker && ! have_linestyle)
-    options.linestyle = "";
+    options.linestyle = "none";
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-06-12  Benjamin Lindner  <lindnerben@gmx.net>
+
+	* DLD-FUNCTIONS/cellfun.cc: Use fullfile to generate filenames
+	instead of assuming / will work as directory separator.
+
 2007-06-12  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/interpn.cc: Remove it.
 	* DLD-FUNCTIONS/__lin_interpn__.cc: Move it. This is now a support
 	function of interpn.m.
 	* Makefile.in (DLD_XSRC): Remove interpn.cc and add __lin_interpn__.cc.
 
 2007-06-07  David Bateman  <dbateman@free.fr>
diff --git a/src/DLD-FUNCTIONS/cellfun.cc b/src/DLD-FUNCTIONS/cellfun.cc
--- a/src/DLD-FUNCTIONS/cellfun.cc
+++ b/src/DLD-FUNCTIONS/cellfun.cc
@@ -521,18 +521,18 @@ cellfun (@@factorial, @{-1,2@},'ErrorHan
 %!assert(cellfun('size',{zeros([1,2,3]),1},3),[3,1])
 %!assert(cellfun(@atan2,{1,1},{1,2}),[atan2(1,1),atan2(1,2)])
 %!assert(cellfun(@atan2,{1,1},{1,2},'UniformOutput',false),{atan2(1,1),atan2(1,2)})
 %!assert(cellfun(@sin,{1,2;3,4}),sin([1,2;3,4]))
 %!assert(cellfun(@atan2,{1,1;1,1},{1,2;1,2}),atan2([1,1;1,1],[1,2;1,2]))
 %!error(cellfun(@factorial,{-1,3}))
 %!assert(cellfun(@factorial,{-1,3},'ErrorHandler',@(x,y) NaN),[NaN,6])
 %!test
-%! [a,b,c]=cellfun(@fileparts,{'/a/b/c.d','/e/f/g.h'},'UniformOutput',false);
-%! assert(a,{'/a/b','/e/f'})
+%! [a,b,c]=cellfun(@fileparts,{fullfile("a","b","c.d"),fullfile("e","f","g.h")},'UniformOutput',false);
+%! assert(a,{fullfile("a","b"),fullfile("e","f")})
 %! assert(b,{'c','g'})
 %! assert(c,{'.d','.h'})
 
 */
 
 DEFUN_DLD (num2cell, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{c} =} num2cell (@var{m})\n\
