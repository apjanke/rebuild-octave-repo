# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1546783046 -3600
#      Sun Jan 06 14:57:26 2019 +0100
# Branch stable
# Node ID a8b8b0726b083680e0750857950c9506de1b3f1f
# Parent  8818342ad4966862c66fd32a485ebb16a9843565
Avoid heap-buffer-overflow with patch graphics objects (bug #55400).

* graphics.cc (patch::properties::update_data): Check size before indexing
  array.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -9448,17 +9448,17 @@ patch::properties::update_data (void)
   if (fcmax > 3 && vert.columns () > 2)
     {
       for (octave_idx_type jj = 0; jj < idx.columns (); jj++)
         {
           if (! octave::math::isnan (idx(3,jj)))
             {
               // find first element that is NaN to get number of corners
               octave_idx_type nc = 3;
-              while (! octave::math::isnan (idx(nc,jj)) && nc < fcmax)
+              while (nc < fcmax && ! octave::math::isnan (idx(nc,jj)))
                 nc++;
 
               std::list<octave_idx_type> coplanar_ends;
 
               octave_idx_type i_start = 1;
               octave_idx_type i_end = 2;
               while (i_end < nc - 1)
                 {
