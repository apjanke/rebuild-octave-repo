# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1296595515 18000
#      Tue Feb 01 16:25:15 2011 -0500
# Node ID 85934e0fcce9bba460ba09628e51639069983ff2
# Parent  c8da31f12c1d692ec543a05e8955908b912c287f
gl-renderer.cc and gl2ps-renderer.cc: access objects directly from gh_manager instead of working with handles

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2011-02-01  John W. Eaton  <jwe@octave.org>
+
+	* gl-render.h (opengl_renderer::draw (const Matrix& hlist)):
+	Use get_object instead of lookup.
+	* DLD-FUNCTIONS/__init_fltk__.cc (Fl_Gl_Window::draw): Likewise.
+	* graphics.h.in (gh_manager::get_object (double)): New function.
+	* gl-renderer.h (opengl_renderer::draw (const graphics_handle&)):
+	Delete.
+	* gl2ps-renderer.h (glps_renderer::draw (const graphics_handle&)):
+	Delete.
+
 2011-02-01  John W. Eaton  <jwe@octave.org>
 
 	* gl2ps-renderer.h: Remove virtual tag for derived virtual functions.
 	(opengl_renderer (const graphics_handle&)): New function.
 	* DLD-FUNCTIONS/__init_fltk__.cc (OpenGL_fltk::Fl_Gl_Window):
 	Don't use new to create temporary glps_renderer object.
 
 2011-02-01  Michael Godfrey  <godfrey@isl.stanford.edu>
diff --git a/src/DLD-FUNCTIONS/__init_fltk__.cc b/src/DLD-FUNCTIONS/__init_fltk__.cc
--- a/src/DLD-FUNCTIONS/__init_fltk__.cc
+++ b/src/DLD-FUNCTIONS/__init_fltk__.cc
@@ -152,23 +152,23 @@ private:
         valid (1);
         setup_viewport (w (), h ());
       }
 
     if (print_fid > 0)
       {
         glps_renderer rend (print_fid, print_term);
 
-        rend.draw (gh_manager::lookup (number));
+        rend.draw (gh_manager::get_object (number));
 
         print_fid = -1;
       }
     else
       {
-        renderer.draw (gh_manager::lookup (number));
+        renderer.draw (gh_manager::get_object (number));
 
         if (zoom ())
           overlay ();
       }
   }
 
   void zoom_box_vertex (void)
   {
diff --git a/src/gl-render.h b/src/gl-render.h
--- a/src/gl-render.h
+++ b/src/gl-render.h
@@ -54,31 +54,28 @@ public:
     camera_pos (), camera_dir ()
 #if HAVE_FREETYPE
     , text_renderer ()
 #endif
   { }
 
   virtual ~opengl_renderer (void) { }
 
-  virtual void draw (const graphics_handle& h)
-    { draw (gh_manager::get_object (h)); }
-
   virtual void draw (const graphics_object& go);
 
   virtual void draw (const Matrix& hlist)
     {
       int len = hlist.length ();
 
       for (int i = len-1; i >= 0; i--)
         {
-          graphics_handle h = gh_manager::lookup (hlist(i));
+          graphics_object obj = gh_manager::get_object (hlist(i));
 
-          if (h.ok ())
-            draw (h);
+          if (obj)
+            draw (obj);
         }
     }
 
   virtual void set_viewport (int w, int h);
   virtual graphics_xform get_transform (void) const { return xform; }
 
 protected:
   virtual void draw_figure (const figure::properties& props);
diff --git a/src/gl2ps-renderer.h b/src/gl2ps-renderer.h
--- a/src/gl2ps-renderer.h
+++ b/src/gl2ps-renderer.h
@@ -32,21 +32,16 @@ glps_renderer : public opengl_renderer
 {
 public:
   glps_renderer (const int _fid, const std::string& _term)
     : opengl_renderer () , fid (_fid), term (_term),
     fontsize (), fontname () { }
 
   ~glps_renderer (void) { }
 
-  void draw (const graphics_handle& h)
-  {
-    draw (gh_manager::get_object (h));
-  }
-
   void draw (const graphics_object& go);
 
 protected:
 
   Matrix render_text (const std::string& txt,
                       double x, double y, double z,
                       int halign, int valign, double rotation = 0.0);
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -4308,16 +4308,21 @@ public:
   }
 
   static graphics_handle lookup (const octave_value& val)
   {
     return val.is_real_scalar ()
       ? lookup (val.double_value ()) : graphics_handle ();
   }
 
+  static graphics_object get_object (double val)
+  {
+    return get_object (lookup (val));
+  }
+
   static graphics_object get_object (const graphics_handle& h)
   {
     return instance_ok () ? instance->do_get_object (h) : graphics_object ();
   }
 
   static graphics_handle
   make_graphics_handle (const std::string& go_name,
                         const graphics_handle& parent, bool do_createfcn = true)
