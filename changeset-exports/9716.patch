# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1255350678 -7200
#      Mon Oct 12 14:31:18 2009 +0200
# Node ID d33a318c1de45067edcbcc013b9cf5bd4682cf03
# Parent  9f27172fbd1ee786f9db102b162d1737d867b0b0
partially revert 1be3c73ed7b5

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-10-12  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-binop.cc, pt-unop.cc: Revert the effect of 1be3c73ed7b5.
+
 2009-10-12  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/lu.cc (maybe_set_triangular): Remove.
 	(get_lu_l, get_lu_u): New helper funcs.
 	(Flu, Fluupdate): Use them to auto-set MatrixType of results.
 	* DLD-FUNCTIONS/qr.cc (maybe_set_triangular): Remove.
 	(get_qr_r): New helper func.
 	(Fqr, Fqrupdate, Fqrinsert, Fqrdelete,
diff --git a/src/pt-binop.cc b/src/pt-binop.cc
--- a/src/pt-binop.cc
+++ b/src/pt-binop.cc
@@ -61,22 +61,17 @@ tree_binary_expression::rvalue1 (int)
       octave_value a = op_lhs->rvalue1 ();
 
       if (! error_state && a.is_defined () && op_rhs)
 	{
 	  octave_value b = op_rhs->rvalue1 ();
 
 	  if (! error_state && b.is_defined ())
 	    {
-              octave_value::assign_op aop = octave_value::binary_op_to_assign_op (etype);
-
-              if (aop == octave_value::unknown_assign_op)
-                retval = ::do_binary_op (etype, a, b);
-              else
-                retval = a.assign (aop, b);
+	      retval = ::do_binary_op (etype, a, b);
 
 	      if (error_state)
 		retval = octave_value ();
 	    }
 	}
     }
 
   return retval;
diff --git a/src/pt-unop.cc b/src/pt-unop.cc
--- a/src/pt-unop.cc
+++ b/src/pt-unop.cc
@@ -84,17 +84,17 @@ tree_prefix_expression::rvalue1 (int)
 	    }
 	}
       else
 	{
 	  octave_value val = op->rvalue1 ();
 
 	  if (! error_state && val.is_defined ())
 	    {
-	      retval = val.do_non_const_unary_op (etype);
+	      retval = ::do_unary_op (etype, val);
 
 	      if (error_state)
 		retval = octave_value ();
 	    }
 	}
     }
 
   return retval;
