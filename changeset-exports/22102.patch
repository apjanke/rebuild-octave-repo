# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1468449808 25200
#      Wed Jul 13 15:43:28 2016 -0700
# Node ID 3b2198c3013be2c06d413737f407a686d168d600
# Parent  4e770056f74ad27ff900fb94fc9acea3859f1c38
maint: delete unused build rules for legacy doc string files

* libinterp/corefcn/module.mk (COREFCN_FT2_DF): Delete definition and
associated build pattern rule for .df files.
* libinterp/octave-value/module.mk (OV_JAVA_DF): Delete definition and
associated build pattern rule for .df files.
* libinterp/dldfcn/config-module.awk: Don't emit .df targets for .oct files.

diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -256,40 +256,16 @@ COREFCN_SRC = \
   libinterp/corefcn/variables.cc \
   libinterp/corefcn/xdiv.cc \
   libinterp/corefcn/xnorm.cc \
   libinterp/corefcn/xpow.cc \
   libinterp/corefcn/zfstream.cc \
   $(JIT_SRC) \
   $(NOINSTALL_COREFCN_INC)
 
-COREFCN_FT2_DF = \
-  libinterp/corefcn/graphics.df \
-  libinterp/corefcn/gl-render.df \
-  libinterp/corefcn/toplev.df \
-  libinterp/corefcn/txt-eng-ft.df
-
-## FIXME: Automake does not support per-object rules.
-##        These rules could be emulated by creating a new convenience
-##        library and using per-library rules.  Or we can just live
-##        without the rule since there haven't been any problems. (09/18/2012)
-#display.df display.lo: CPPFLAGS += $(X11_FLAGS)
-
-## Special rules for FreeType .df files so that not all .df files are built
-## with FT2_CPPFLAGS, FONTCONFIG_CPPFLAGS
-$(COREFCN_FT2_DF) : libinterp/corefcn/%.df : libinterp/corefcn/%.cc $(GENERATED_MAKE_BUILTINS_INCS) octave-config.h | libinterp/corefcn/$(octave_dirstamp)
-	$(AM_V_GEN)rm -f $@-t $@-t1 $@ && \
-	$(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
-	  $(libinterp_corefcn_libcorefcn_la_CPPFLAGS) $(CPPFLAGS) \
-	  $(libinterp_corefcn_libcorefcn_la_CXXFLAGS) $(CXXFLAGS) \
-	  -DMAKE_BUILTINS $< > $@-t1 && \
-	$(SHELL) $(srcdir)/libinterp/mkdefs $(srcdir)/libinterp $< < $@-t1 > $@-t && \
-	rm -f $@-t1 && \
-	mv $@-t $@
-
 ## Special rules for sources which must be built before rest of compilation.
 
 libinterp/corefcn/defaults.h: libinterp/corefcn/defaults.in.h build-aux/subst-default-vals.sh | libinterp/corefcn/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/subst-default-vals.sh)
 
 libinterp/corefcn/graphics.h: libinterp/corefcn/graphics.in.h libinterp/genprops.awk | libinterp/corefcn/$(octave_dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(AWK) -f $(srcdir)/libinterp/genprops.awk $< > $@-t && \
diff --git a/libinterp/dldfcn/config-module.awk b/libinterp/dldfcn/config-module.awk
--- a/libinterp/dldfcn/config-module.awk
+++ b/libinterp/dldfcn/config-module.awk
@@ -50,18 +50,16 @@ BEGIN {
   for (i = 1; i <= nfiles; i++) {
     basename = files[i];
     sub (/\.cc$/, "", basename);
     print "";
     printf ("libinterp_dldfcn_%s_la_SOURCES = libinterp/dldfcn/%s\n",
             basename, files[i]);
     if (cppflags[i])
       {
-        printf ("libinterp/dldfcn/%s.df: CPPFLAGS += %s\n",
-                basename, cppflags[i]);
         printf ("libinterp_dldfcn_%s_la_CPPFLAGS = $(libinterp_liboctinterp_la_CPPFLAGS) %s\n",
                 basename, cppflags[i]);
       }
     printf ("libinterp_dldfcn_%s_la_CFLAGS = $(libinterp_liboctinterp_la_CFLAGS) %s\n",
             basename, cppflags[i]);
     printf ("libinterp_dldfcn_%s_la_CXXFLAGS = $(libinterp_liboctinterp_la_CXXFLAGS) %s\n",
             basename, cppflags[i]);
     printf ("libinterp_dldfcn_%s_la_LDFLAGS = -avoid-version -module $(NO_UNDEFINED_LDFLAG) %s $(OCT_LINK_OPTS) $(WARN_LDFLAGS)\n",
diff --git a/libinterp/octave-value/module.mk b/libinterp/octave-value/module.mk
--- a/libinterp/octave-value/module.mk
+++ b/libinterp/octave-value/module.mk
@@ -128,34 +128,16 @@ OCTAVE_VALUE_SRC = \
 
 libinterp_EXTRA_DIST += \
   libinterp/octave-value/ov-base-diag.cc \
   libinterp/octave-value/ov-base-int.cc \
   libinterp/octave-value/ov-base-mat.cc \
   libinterp/octave-value/ov-base-scalar.cc \
   libinterp/octave-value/ov-base-sparse.cc
 
-OV_JAVA_DF = \
-  libinterp/octave-value/ov.df \
-  libinterp/octave-value/ov-class.df \
-  libinterp/octave-value/ov-java.df \
-  libinterp/octave-value/ov-typeinfo.df
-
-## Special rules for Java .df files so that not all .df files are built with
-## JAVA_CPPFLAGS
-$(OV_JAVA_DF) : libinterp/octave-value/%.df : libinterp/octave-value/%.cc $(GENERATED_MAKE_BUILTINS_INCS) octave-config.h
-	$(AM_V_GEN)rm -f $@-t $@-t1 $@ && \
-	$(CXXCPP) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
-	  $(libinterp_octave_value_liboctave_value_la_CPPFLAGS) $(JAVA_CPPFLAGS) $(CPPFLAGS) \
-	  $(libinterp_octave_value_liboctave_value_la_CXXFLAGS) $(CXXFLAGS) \
-	  -DMAKE_BUILTINS $< > $@-t1 && \
-	$(SHELL) $(srcdir)/libinterp/mkdefs $(srcdir)/libinterp $< < $@-t1 > $@-t && \
-	mv $@-t $@ && \
-	rm -f $@-t1
-
 noinst_LTLIBRARIES += libinterp/octave-value/liboctave-value.la
 
 libinterp_octave_value_liboctave_value_la_SOURCES = $(OCTAVE_VALUE_SRC)
 
 ## FIXME: maybe it would be better to limit the JAVA flags to
 ## the compile commands for ov-java.cc?  Does JAVA_LIBS need to be
 ## added to LIBOCTINTERP_LINK_DEPS (see libinterp/link-deps.mk)?
 ## Should we have a separate set of JAVA_LDFLAGS?
