# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1383322818 14400
#      Fri Nov 01 12:20:18 2013 -0400
# Node ID eaf5c3ef3e8dba64a9de257d38a52f19bcdbc651
# Parent  ebb3ef964372dc5439b4df71df58f5fce92c946b
avoid crash in sparse constructor (bug #)

* Sparse.cc (Sparse<T>::Sparse (octave_idx_type, octave_idx_type, T)):
Use safe_numel instead of computing nr * nc directly.

diff --git a/liboctave/array/Sparse.cc b/liboctave/array/Sparse.cc
--- a/liboctave/array/Sparse.cc
+++ b/liboctave/array/Sparse.cc
@@ -200,17 +200,17 @@ Sparse<T>::SparseRep::indices_ok (void) 
 }
 
 template <class T>
 Sparse<T>::Sparse (octave_idx_type nr, octave_idx_type nc, T val)
   : rep (0), dimensions (dim_vector (nr, nc))
 {
   if (val != T ())
     {
-      rep = new typename Sparse<T>::SparseRep (nr, nc, nr*nc);
+      rep = new typename Sparse<T>::SparseRep (nr, nc, dimensions.safe_numel ());
 
       octave_idx_type ii = 0;
       xcidx (0) = 0;
       for (octave_idx_type j = 0; j < nc; j++)
         {
           for (octave_idx_type i = 0; i < nr; i++)
             {
               xdata (ii) = val;
