# HG changeset patch
# User jwe
# Date 916858550 0
#      Wed Jan 20 18:55:50 1999 +0000
# Node ID 3f6ae91e86b06d1c89d17b36b6b30db8fdb7d446
# Parent  7a489cafe48eaa5491876491b20ce12f82fb375e
[project @ 1999-01-20 18:55:50 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.313 $)
+AC_REVISION($Revision: 1.314 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 OCTAVE_HOST_TYPE
 
@@ -293,16 +293,31 @@ case "$canonical_host_type" in
 esac
 if test -n "$LD_STATIC_FLAG"; then
   AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(LD_STATIC_FLAG)
 
 OCTAVE_CXX_PREPENDS_UNDERSCORE
 
+dnl This is bogus.  We shouldn't have to explicitly add libc too!
+
+### Look for math library.  If found, this will add -lm to LIBS.
+
+case "$canonical_host_type" in
+  *-*-nextstep*)
+  ;;  
+  *-*-linux*)
+    AC_CHECK_LIB(m, sin, , , -lc)
+  ;;
+  *)
+    AC_CHECK_LIB(m, sin)
+  ;;
+esac
+
 ### We need these before trying to find libf2c.
 
 OCTAVE_PROG_AR
 
 AC_PROG_RANLIB
 
 ### If we haven't been forced to use a particular Fortran compiler,
 ### try to find one using any one of several common Un*x Fortran
@@ -428,21 +443,21 @@ EOF
 
   if AC_TRY_EVAL(ac_compile); then
     $AR $ARFLAGS $oct_conflib conftest.$oct_obj_ext 1>&AC_FD_CC
     if test -n "$RANLIB"; then
       $RANLIB $oct_conflib 1>&AC_FD_CC
     fi
   fi
   rm -f conftest*
-  AC_CHECK_LIB(f2c, f_open, FLIBS=-lf2c, FLIBS=, [-L. -lconflib -lm])
+  AC_CHECK_LIB(f2c, f_open, FLIBS=-lf2c, FLIBS=, [-L. -lconflib])
   rm -f $oct_conflib
 
   if test -z "$FLIBS"; then
-    AC_CHECK_LIB(F77, d_sin, FLIBS=-lF77, FLIBS=, -lm)
+    AC_CHECK_LIB(F77, d_sin, FLIBS=-lF77, FLIBS=)
     if test -n "$FLIBS"; then
       AC_CHECK_LIB(I77, f_rew, FLIBS="$FLIBS -lI77", FLIBS=, -lF77)
     fi
   fi
 
   if test -z "$FLIBS"; then
     warn_f2c_no_lib="I found f2c but not libf2c.a, or libF77.a and libI77.a"
     AC_MSG_WARN($warn_f2c_no_lib)
@@ -762,16 +777,17 @@ AC_CHECK_FUNCS(atexit bcopy bzero dup2 e
   sigpending sigprocmask sigsuspend stat strcasecmp strdup strerror \
   strftime stricmp strncasecmp strnicmp tempnam umask unlink usleep \
   vfprintf vsprintf waitpid)
 
 OCTAVE_SMART_PUTENV
 
 LIBDLFCN=
 DLFCN_INCFLAGS=
+RDYNAMIC_FLAG=
 if test "$WITH_DL" = yes || test "$WITH_DL" = maybe; then
   case "$canonical_host_type" in
     rs6000-ibm-aix* | powerpc-ibm-aix*)
       LIBDLFCN="-ldlfcn -ll -lld"
       DLFCN_INCFLAGS='-I$(top_srcdir)/dlfcn -I$(TOPDIR)/dlfcn'
       WITH_DL=true
     ;;
 changequote(,)dnl
@@ -791,24 +807,26 @@ changequote([,])dnl
 	if test "$WITH_DL" = yes; then
 	  AC_MSG_ERROR([--enable-dl specified, but functions are missing!])
 	fi
 	WITH_DL=false
       fi
     ;;
   esac
   if $WITH_DL; then
+    OCTAVE_CXX_FLAG(-rdynamic, [RDYNAMIC_FLAG=-rdynamic])
     AC_DEFINE(WITH_DL, 1)
   fi
 else
   WITH_DL=false
 fi
 AC_SUBST(WITH_DL)
 AC_SUBST(LIBDLFCN)
 AC_SUBST(DLFCN_INCFLAGS)
+AC_SUBST(RDYNAMIC_FLAG)
 
 if test "$WITH_SHL" = yes || test "$WITH_SHL" = maybe; then
   AC_CHECK_LIB(dld, shl_load)
   AC_CHECK_FUNCS(shl_load shl_findsym)
   if test "$ac_cv_func_shl_load" = yes \
      && test "$ac_cv_func_shl_findsym" = yes; then
     WITH_SHL=true
   else
@@ -886,28 +904,17 @@ dnl fails, we try again by including mat
 dnl with an argument. 
 
 ### Check to see if we have IEEE math functions, and if so, which ones.
 ###
 ### Also check for some additional trig functions that aren't ANSI but
 ### are often available.  If they are missing, we try to replace them
 ### with functions from the BSD/NET2 math library.
 
-AC_CHECK_LIB(sunmath, quiet_nan, , , -lm)
-
-dnl This is bogus.  We shouldn't have to explicitly add libc too!
-
-case "$canonical_host_type" in
-  *-*-linux*)
-    AC_CHECK_LIB(m, sin, , , -lc)
-  ;;
-  *)
-    AC_CHECK_LIB(m, sin)
-  ;;
-esac
+AC_CHECK_LIB(sunmath, quiet_nan)
 
 ### I am told that Inf and NaN don't work on m68k HP sytems, and that
 ### on SCO systems, isnan and isinf don't work, but they can be
 ### replaced by something that does.
 
 case "$canonical_host_type" in
   m68k-hp-hpux*)
   ;;
