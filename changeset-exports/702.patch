# HG changeset patch
# User jwe
# Date 779596367 0
#      Thu Sep 15 02:32:47 1994 +0000
# Node ID 45764610984ad0d6d43e58c3918c22676cc52f12
# Parent  0a81458ef677098624bd732e73aba5262316355b
[project @ 1994-09-15 02:32:47 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -18,16 +18,20 @@ YACC = @YACC@
 YFLAGS = -dv
 
 RANLIB = @RANLIB@
 
 RUNTEST = @RUNTEST@
 
 DEFAULT_PAGER = @DEFAULT_PAGER@
 
+WITH_DLD = @use_dld@
+
+OCTAVE_LITE = @lite_kernel@
+
 # Fortran to C translator and associated flags.
 
 F2C = @F2C@
 F2CFLAGS = @F2CFLAGS@
 
 # Fortran compiler flags.
 
 FFLAGS = @FFLAGS@
diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -49,26 +49,33 @@
 
 /* Define if your system stores doubles in IEEE format with the least
    significant byte first. */
 #undef IEEE_LITTLE_ENDIAN
 
 /* Define if you don't have NPSOL. */
 #undef NPSOL_MISSING
 
-/* Define to make Octave look for info files and function files in the
-   directory tree as the sources. */
-#undef RUN_IN_PLACE
+/* Define to compile smaller kernel.  Only works if some form of
+   dynamic linking is also supported and used. */
+#undef OCTAVE_LITE
 
 /* Define if this is Octave. */
 #undef OCTAVE_SOURCE
 
 /* Define if you don't have QPSOL. */
 #undef QPSOL_MISSING
 
+/* Define to make Octave look for info files and function files in the
+   directory tree as the sources. */
+#undef RUN_IN_PLACE
+
+/* To quiet autoheader. */
+#undef SMART_PUTENV
+
 /* Define if using -fexternal-templates with g++. */
 #undef USE_EXTERNAL_TEMPLATES
 
 /* Define if using dld for dynamic linking of object files. */
 #undef WITH_DLD
 
 /* Define if your system stores doubles in the VAX D format. */
 #undef VAX_D_FLOAT
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.44 $)dnl
+AC_REVISION($Revision: 1.45 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -67,16 +67,26 @@ AC_VERBOSE([canonical_host_type is $cano
 dnl
 dnl Allow the user to force us to use f2c.
 dnl
 AC_WITH(f2c, use_f2c=true, use_f2c=false)dnl
 dnl
 dnl Allow the user to experiment with dynamic linking using GNU dld.
 dnl
 AC_ENABLE(dld, use_dld=true, use_dld=false)dnl
+AC_SUBST(use_dld)dnl
+dnl
+dnl Allow compilation of smaller kernel.  This only works if some form
+dnl of dynamic linking is also supported and used.
+dnl
+AC_ENABLE(lite-kernel, lite_kernel=true, lite_kernel=false)dnl
+if $lite_kernel; then
+  AC_DEFINE(OCTAVE_LITE, 1)dnl
+fi
+AC_SUBST(lite_kernel)dnl
 dnl
 dnl some defaults
 dnl
 exec_prefix='$(prefix)'
 bindir='$(exec_prefix)/bin'
 datadir='$(prefix)/lib'
 libdir='$(exec_prefix)/lib'
 includedir='$(prefix)/include'
@@ -164,17 +174,21 @@ DYNAMIC_LD_OBJ=
 DLD_DIR=
 LIBDLD=
 LIBOCTDLD='../liboctdld.a'
 LD_STATIC_FLAG=
 if $use_dld; then
   DYNAMIC_LD_OBJ='dynamic-ld.o'
   DLD_DIR=dld
   LIBDLD='../libdld.a'
-  LIBOCTDLD= # don't link them in if doing dynamic linking
+# don't link them in only if doing dynamic linking and small kernel
+# requested.
+  if $lite_kernel; then
+    LIBOCTDLD=
+  fi
   LD_STATIC_FLAG=-static
   AC_DEFINE(WITH_DLD, 1)dnl
 fi
 if test -n "$DYNAMIC_LD_OBJ"; then
   AC_VERBOSE([setting DYNAMIC_LD_OBJ to $DYNAMIC_LD_OBJ])
 fi
 if test -n "$DLD_DIR"; then
   AC_VERBOSE([setting DLD_DIR to $DLD_DIR])
