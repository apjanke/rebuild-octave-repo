# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1308950821 25200
#      Fri Jun 24 14:27:01 2011 -0700
# Node ID ec6c524964854bcafa46874604dad4b037a3db67
# Parent  c55df65b543ae072a451fbf2dc7e82021571956a
Fix input validation of SI vector for filter() when DIM used (Bug #33625)

diff --git a/src/DLD-FUNCTIONS/filter.cc b/src/DLD-FUNCTIONS/filter.cc
--- a/src/DLD-FUNCTIONS/filter.cc
+++ b/src/DLD-FUNCTIONS/filter.cc
@@ -99,26 +99,27 @@ filter (MArray<T>& b, MArray<T>& a, MArr
     }
 
   if (si_dims.length () != x_dims.length ())
     {
       error ("filter: dimensionality of SI and X must agree");
       return y;
     }
 
-  octave_idx_type si_dim = 0;
-  for (octave_idx_type i = 0; i < x_dims.length (); i++)
+  for (octave_idx_type i = 1; i < dim; i++)
     {
-      if (i == dim)
-        continue;
-
-      if (x_dims(i) == 1)
-        continue;
-
-      if (si_dims(++si_dim) != x_dims(i))
+      if (si_dims(i) != x_dims(i-1))
+        {
+          error ("filter: dimensionality of SI and X must agree");
+          return y;
+        }
+    }
+  for (octave_idx_type i = dim+1; i < x_dims.length (); i++)
+    {
+      if (si_dims(i) != x_dims(i))
         {
           error ("filter: dimensionality of SI and X must agree");
           return y;
         }
     }
 
   if (x_len == 0)
     return x;
@@ -715,11 +716,18 @@ filter (MArray<FloatComplex>&, MArray<Fl
 %!assert(filter (1, ones(10,1)/10, zeros(0,10)), zeros(0,10));
 %!assert(filter (1, ones(10,1)/10, single (1:5)), repmat (single (10), 1, 5));
 %% Test using initial conditions
 %!assert(filter([1, 1, 1], [1, 1], [1 2], [1, 1]), [2 2]);
 %!assert(filter([1, 1, 1], [1, 1], [1 2], [1, 1]'), [2 2]);
 %!assert(filter([1, 3], [1], [1 2; 3 4; 5 6], [4, 5]), [5 7; 6 10; 14 18]);
 %!error (filter([1, 3], [1], [1 2; 3 4; 5 6], [4, 5]'));
 %!assert(filter([1, 3, 2], [1], [1 2; 3 4; 5 6], [1 0 0; 1 0 0], 2), [2 6; 3 13; 5 21]);
-%%  Should put some tests of the "DIM" parameter in here.
+%% Test of DIM parameter
+%!test
+%! x = ones (2, 1, 3, 4);
+%! x(1,1,:,:) = [1 2 3 4; 5 6 7 8; 9 10 11 12];
+%! y0 = [1 1 6 2 15 3 2 1 8 2 18 3 3 1 10 2 21 3 4 1 12 2 24 3];
+%! y0 = reshape (y0, size (x));
+%! y = filter([1 1 1], 1, x, [], 3); 
+%! assert (y, y0);
 
 */
