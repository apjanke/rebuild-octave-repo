# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1202918782 -3600
#      Wed Feb 13 17:06:22 2008 +0100
# Node ID 4739b6a1925cc9abca61ee4e5d13dc6ff9141700
# Parent  3584f37eac698dcb061ab715e62464f84240289d
Implement resize handler mechanism (call resizefcn on figure resize and notify children).
* * *
Fix figure boundingbox <-> position conversion bug.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -10,16 +10,29 @@ 2008-06-04  Shai Ayal  <shaiay@users.sou
 
 	* graphics.h.in (axes::properties::update_xlim): call the new
 	axes::properties::calc_ticks_and_lims method
 	(axes::properties::update_ylim): ditto
 	(axes::properties::update_zlim): ditto
 
 2008-06-04  Michael Goffioul <michael.goffioul@gmail.com>
 
+	* graphics.h.in (base_properties::update_boundingbox): New method
+	to handle object resize.
+	(figure::properties::set_boundingbox): New method to set figure
+	position from backend.
+	(figure::properties::update_position): Remove method.
+	(figure::properties::position): Remove 'u' modifier and add 'S'
+	modifier.
+	(axes::properties::update_boundingbox): Overload to recompute
+	transformation when axes size changed.
+	* graphics.cc (base_properties::update_boundingbox): New method.
+	(figure::properties::set_boundingbox,
+	figure::properties::set_position): Likewise.
+
 	* genprops.awk: Add 'U' modifier to support extern updaters.
 	* graphics.h.in (base_graphics_backend::gripe_invalid): New method
 	to simplify error reporting.
 	(class base_graphics_backend): Use it.
 	(base_graphics_backend::set_figure_position): New backend method.
 	(graphics_backend::set_figure_position): Likewise.
 	(figure::properties::position): Mark property with updater.
 	(figure::properties::update_position): New updater.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1296,16 +1296,30 @@ base_properties::get_backend (void) cons
   graphics_object go = gh_manager::get_object (get_parent ());
 
   if (go)
     return go.get_backend ();
   else
     return graphics_backend ();
 }
 
+void
+base_properties::update_boundingbox (void)
+{
+  Matrix kids = get_children ();
+
+  for (int i = 0; i < kids.numel (); i++)
+    {
+      graphics_object go = gh_manager::get_object (kids(i));
+
+      if (go.valid_object ())
+	go.get_properties ().update_boundingbox ();
+    }
+}
+
 // ---------------------------------------------------------------------
 
 class gnuplot_backend : public base_graphics_backend
 {
 public:
   gnuplot_backend (void)
       : base_graphics_backend ("gnuplot") { }
 
@@ -1498,16 +1512,59 @@ figure::properties::get_boundingbox (boo
 
   pos(0)--;
   pos(1)--;
   pos(1) = screen_size(1) - pos(1) - pos(3);
 
   return pos;
 }
 
+void
+figure::properties::set_boundingbox (const Matrix& bb)
+{
+  graphics_backend b = get_backend ();
+  // FIXME: screen size should be obtained from root object
+  Matrix screen_size = b.get_screen_size ();
+  Matrix pos = bb;
+
+  pos(1) = screen_size(1) - pos(1) - pos(3);
+  pos(1)++;
+  pos(0)++;
+  pos = convert_position (pos, "pixels", get_units (), screen_size, b);
+
+  set_position (pos);
+}
+
+void
+figure::properties::set_position (const octave_value& v)
+{
+  if (! error_state)
+    {
+      Matrix old_bb, new_bb;
+
+      old_bb = get_boundingbox ();
+      position = v;
+      new_bb = get_boundingbox ();
+
+      if (old_bb != new_bb)
+	{
+	  // FIXME: maybe this should be converted into a more generic
+	  //        call like "update_gui (this)"
+	  get_backend ().set_figure_position (__myhandle__, new_bb);
+	  if (old_bb(2) != new_bb(2) || old_bb(3) != new_bb(3))
+	    {
+	      execute_resizefcn ();
+	      update_boundingbox ();
+	    }
+	}
+
+      mark_modified ();
+    }
+}
+
 octave_value
 figure::get_default (const caseless_str& name) const
 {
   octave_value retval = default_properties.lookup (name);
 
   if (retval.is_undefined ())
     {
       graphics_handle parent = get_parent ();
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1416,16 +1416,18 @@ public:
     children(n) = h.value ();
   }
 
   virtual graphics_backend get_backend (void) const;
 
   virtual Matrix get_boundingbox (bool /*internal*/ = false) const
     { return Matrix (1, 4, 0.0); }
 
+  virtual void update_boundingbox (void);
+
   void set_tag (const octave_value& val) { tag = val; }
 
   void set_parent (const octave_value& val);
 
   void set_modified (const octave_value& val) { __modified__ = val; }
 
   void set_busyaction (const octave_value& val)
   {
@@ -2157,18 +2159,17 @@ public:
 	    }
 	  else
 	    error ("__backend__ must be a string");
 	}
     }
 
     Matrix get_boundingbox (bool internal = false) const;
 
-    void update_position (void)
-      { backend.set_figure_position (__myhandle__, get_boundingbox ()); }
+    void set_boundingbox (const Matrix& bb);
 
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(figure)
       any_property __plot_stream__ h , Matrix ()
       bool_property __enhanced__ h , "on"
       radio_property nextplot , "new|{add}|replace_children|replace"
@@ -2195,17 +2196,17 @@ public:
       radio_property paperunits , "{inches}|centimeters|normalized|points"
       array_property paperposition , Matrix (1, 4 , 0) 
       radio_property paperpositionmode , "auto|{manual}"
       array_property papersize r , Matrix (1, 4, 0)
       radio_property papertype , "{usletter}|uslegal|a0|a1|a2|a3|a4|a5|b0|b1|b2|b3|b4|b5|arch-a|arch-b|arch-c|arch-d|arch-e|a|b|c|d|e|tabloid"
       radio_property pointer , "crosshair|fullcrosshair|{arrow}|ibeam|watch|topl|topr|botl|botr|left|top|right|bottom|circle|cross|fleur|custom|hand"
       array_property pointershapecdata , Matrix (16, 16, 0)
       array_property pointershapehotspot , Matrix (1, 2, 0)
-      array_property position u , default_figure_position ()
+      array_property position S , default_figure_position ()
       radio_property renderer , "{painters}|zbuffer|opengl|none"
       radio_property renderermode , "{auto}|manual"
       bool_property resize , "on"
       callback_property resizefcn , Matrix ()
       radio_property selectiontype , "{normal}|open|alt|extend"
       radio_property toolbar , "none|{auto}|figure"
       radio_property units , "inches|centimeters|normalized|points|{pixels}|characters"
       callback_property windowbuttondownfcn , Matrix ()
@@ -2372,16 +2373,25 @@ public:
     void delete_children (void);
 
     const scaler& get_x_scaler (void) const { return sx; }
     const scaler& get_y_scaler (void) const { return sy; }
     const scaler& get_z_scaler (void) const { return sz; }
 
     Matrix get_boundingbox (bool internal = false) const;
 
+    void update_boundingbox (void)
+      {
+	if (units_is ("normalized"))
+	  {
+	    update_transform ();
+	    base_properties::update_boundingbox ();
+	  }
+      }
+
     void update_camera (void);
     void update_aspectratios (void);
     void update_transform (void)
       {
 	update_aspectratios ();
 	update_camera ();
       }
 
