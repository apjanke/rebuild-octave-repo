# HG changeset patch
# User jwe
# Date 1160594584 0
#      Wed Oct 11 19:23:04 2006 +0000
# Node ID 53e42cafb94a6dfc0011d448ab96f0aabde7a51c
# Parent  176f1c58a474423099ad56c221f78fada97e88a7
[project @ 2006-10-11 19:23:04 by jwe]

diff --git a/liboctave/SparseCmplxQR.cc b/liboctave/SparseCmplxQR.cc
--- a/liboctave/SparseCmplxQR.cc
+++ b/liboctave/SparseCmplxQR.cc
@@ -32,17 +32,18 @@ Boston, MA 02110-1301, USA.
 // an error ?
 #define OCTAVE_C99_COMPLEX(buf, n) \
   OCTAVE_LOCAL_BUFFER (double, buf ## tmp, (2 * (n))); \
   double _Complex *buf = reinterpret_cast<double _Complex *> (buf ## tmp);
 
 #define OCTAVE_C99_ZERO (0. + 0.iF);
 
 SparseComplexQR::SparseComplexQR_rep::SparseComplexQR_rep 
-(const SparseComplexMatrix& a, int order)
+(const SparseComplexMatrix& a GCC_ATTR_UNUSED,
+ int order GCC_ATTR_UNUSED)
 {
 #ifdef HAVE_CXSPARSE
   CXSPARSE_ZNAME () A;
   A.nzmax = a.nnz ();
   A.m = a.rows ();
   A.n = a.cols ();
   nrows = A.m;
   // Cast away const on A, with full knowledge that CSparse won't touch it
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2006-10-11  John W. Eaton  <jwe@octave.org>
+
+	* mex.h (UINT64_T, uint64_T, INT64_T, int64_T, UINT32_T, uint32_T,
+	INT32_T, int32_T, UINT16_T, uint16_T, INT16_T, int16_T, UINT8_T,
+	uint8_T, INT8_T, int8_T): Conditionally define.
+	From Andy Adler <adler@site.uottawa.ca>.
+
 2006-10-09  John W. Eaton  <jwe@octave.org>
 
 	* oct-conf.h.in (OCTAVE_CONF_CURL_LIBS): Substitute.
 	* toplev.cc (octave_config_info): Add CURL_LIBS to the list.
 
 2006-10-09  Alexander Barth  <abarth@marine.usf.edu>
 
 	* DLD-FUNCTIONS/urlwrite.cc: New file providing urlwrite and urlread.
diff --git a/src/mex.h b/src/mex.h
--- a/src/mex.h
+++ b/src/mex.h
@@ -98,16 +98,82 @@ void mexFunction (int nlhs, mxArray* plh
 #define mxCreateFull mxCreateDoubleMatrix
 
 #define mxCreateScalarDouble mxCreateDoubleScalar
 
 #define mxFreeMatrix mxDestroyArray
 
 #define mxIsString mxIsChar
 
+/* Apparently these are also defined.  */
+
+#ifndef UINT64_T
+#define UINT64_T uint64_t
+#endif
+
+#ifndef uint64_T
+#define uint64_T uint64_t
+#endif
+
+#ifndef INT64_T
+#define INT64_T int64_t
+#endif
+
+#ifndef int64_T
+#define int64_T int64_t
+#endif
+
+#ifndef UINT32_T
+#define UINT32_T uint32_t
+#endif
+
+#ifndef uint32_T
+#define uint32_T uint32_t
+#endif
+
+#ifndef INT32_T
+#define INT32_T int32_t
+#endif
+
+#ifndef int32_T
+#define int32_T int32_t
+#endif
+
+#ifndef UINT16_T
+#define UINT16_T uint16_t
+#endif
+
+#ifndef uint16_T
+#define uint16_T uint16_t
+#endif
+
+#ifndef INT16_T
+#define INT16_T int16_t
+#endif
+
+#ifndef int16_T
+#define int16_T int16_t
+#endif
+
+#ifndef UINT8_T
+#define UINT8_T uint8_t
+#endif
+
+#ifndef uint8_T
+#define uint8_T uint8_t
+#endif
+
+#ifndef INT8_T
+#define INT8_T int8_t
+#endif
+
+#ifndef int8_T
+#define int8_T int8_t
+#endif
+
 #if defined (__cplusplus)
 }
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
