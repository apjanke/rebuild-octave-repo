# HG changeset patch
# User jwe
# Date 908836677 0
#      Mon Oct 19 22:37:57 1998 +0000
# Node ID 70eb3f4136cd658793a6950e0b48a469707f9505
# Parent  bef7b73c0724f1e066f6ddbb62bbfead26b5203d
[project @ 1998-10-19 22:37:56 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+Mon Oct 19 17:26:35 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* polynomial/polyfit.m: Just use the \ operator to handle the
+	least-squares solution.
+
 Thu Sep  3 12:40:47 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* strings/str2num.m: If eval returns a string, return an empty matrix.
 
 	* strings/strrep.m: Don't convert args to numeric values.
 	Prevent warnings for empty string args.
 	From Georg Thimm <thimm@idiap.ch>.
 
diff --git a/scripts/polynomial/polyfit.m b/scripts/polynomial/polyfit.m
--- a/scripts/polynomial/polyfit.m
+++ b/scripts/polynomial/polyfit.m
@@ -46,29 +46,19 @@ function [p, yf] = polyfit (x, y, n)
   endif
 
   y_is_row_vector = (rows (y) == 1);
 
   l = length (x);
   x = reshape (x, l, 1);
   y = reshape (y, l, 1);
 
-  ## Unfortunately, the economy QR factorization doesn't really save
-  ## memory doing the computation -- the returned values are just
-  ## smaller.
-
-  ## [Q, R] = qr (X, 0);
-  ## p = flipud (R \ (Q' * y));
-
-  ## XXX FIXME XXX -- this is probably not so good for extreme values of
-  ## N or X...
-
   X = (x * ones (1, n+1)) .^ (ones (l, 1) * (0 : n));
 
-  p = (X' * X) \ (X' * y);
+  p = X \ y;
 
   if (nargout == 2)
     yf = X * p;
 
     if (y_is_row_vector)
       yf = yf';
     endif
   endif
