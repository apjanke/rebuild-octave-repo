# HG changeset patch
# User jwe
# Date 825605978 0
#      Thu Feb 29 14:59:38 1996 +0000
# Node ID 1c121da7b952fa571b83bd6f27be0ca8aef040a4
# Parent  aaf4ad3da905656d4e97a5d7495c12186bdc88b9
[project @ 1996-02-29 14:57:47 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -226,43 +226,45 @@ target_host_type = @target_host_type@
 # the pattern `%.c : %.f', but we don't want to replace make's default
 # rule for making object from Fortran source files, so there should be
 # no pattern or command for that.
 
 @f77_rules_frag@
 
 # How to make .o files:
 
-.c.o:
-	[ -z "$(CPICFLAG)" ] ||\
-	  $(CC) -c $(CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o pic/$@
+%.o : %.c
 	$(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
 
-.cc.o:
-	[ -z "$(CXXPICFLAG)" ] ||\
-	  $(CXX) -c $(CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o pic/$@
+%.o : %.cc
 	$(CXX) -c $(CPPFLAGS) $(ALL_CXXFLAGS) $<
 
+pic/%.o : %.c
+	$(CC) -c $(CPPFLAGS) $(CPICFLAG) $(ALL_CFLAGS) $< -o $@
+
+pic/%.o : %.cc
+	$(CXX) -c $(CPPFLAGS) $(CXXPICFLAG) $(ALL_CXXFLAGS) $< -o $@
+
 # Here is a rule for generating dependencies for .cc files:
 
-%.d: %.cc
+%.d : %.cc
 	@echo making $@ from $<
 	@rm -f $@
 	@-if test "$(srcdir)" = "." ; then \
 	  $(CXX) -MM $(CPPFLAGS) $(ALL_CXXFLAGS) $< | \
 	    sed -e 's/$*\.o/& $@/g' > $@.tmp ; \
 	else \
 	  $(CXX) -MM $(CPPFLAGS) $(ALL_CXXFLAGS) $< | \
 	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp ; \
 	fi
 	@mv $@.tmp $@
 
 # And one for .c files.too:
 
-%.d: %.c
+%.d : %.c
 	@echo making $@ from $<
 	@rm -f $@
 	@-if test "$(srcdir)" = "." ; then \
 	  $(CC) -MM $(CPPFLAGS) $(ALL_CFLAGS) $< | \
 	    sed -e 's/$*\.o/& $@/g' > $@.tmp ; \
 	else \
 	  $(CC) -MM $(CPPFLAGS) $(ALL_CFLAGS) $< | \
 	    sed -e 's/$*\.o/& $@/g' -e 's,$(srcdir)/,,g' > $@.tmp ; \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.167 $)
+AC_REVISION($Revision: 1.168 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -503,20 +503,21 @@ fi
 f77_rules_frag=Makerules.f77
 if $have_fortran_compiler; then
 changequote(,)dnl
   cat << \EOF > $f77_rules_frag
 
 %.c : %.f
 
 %.o : %.f
-	[ -z "$(FPICFLAG)" ] || \
-	  $(FC) -c $(FPICFLAG) $(ALL_FFLAGS) $< -o pic/$@
 	$(FC) -c $(ALL_FFLAGS) $<
 
+pic/%.o : %.f
+	$(FC) -c $(FPICFLAG) $(ALL_FFLAGS) $< -o $@
+
 EOF
 changequote([,])dnl
 elif $have_f2c; then
   AC_DEFINE(F77_APPEND_UNDERSCORE, 1)
   AC_MSG_RESULT([defining F77_APPEND_UNDERSCORE to be 1])
   AC_CHECK_LIB(f2c, main, FLIBS=-lf2c, [], -lm)
   if test -z "$FLIBS"; then
     AC_CHECK_LIB(F77, main, FLIBS=-lF77, [])
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -40,23 +40,23 @@ XALL_CXXFLAGS = $(subst -fno-implicit-te
 	@echo making $@ from $<
 	@$(CXXCPP) -c $(CPPFLAGS) $(XALL_CXXFLAGS) -DMAKE_BUILTINS $< \
 	  | $(srcdir)/mkdefs > $@.tmp
 	@mv $@.tmp $@
 
 # How to make a .oct file from a .o file:
 
 ifdef CXXPICFLAG
-%.oct: pic/%.o
+%.oct : pic/%.o
 	$(CXX) -shared -o $@ $< \
 	  $(OCTAVE_LFLAGS) \
 	  $(OCTAVE_LIBS) \
 	  $(FLIBS) $(LEXLIB) $(TERMLIBS) $(LIBS) -lg++
 else
-%.oct: %.o
+%.oct : %.o
 	$(CXX) -shared -o $@ $< \
 	  $(OCTAVE_LFLAGS) \
 	  $(OCTAVE_LIBS) \
 	  $(FLIBS) $(LEXLIB) $(TERMLIBS) $(LIBS) -lg++
 endif
 
 DLD_SRC := balance.cc chol.cc colloc.cc dassl.cc det.cc eig.cc \
 	   expm.cc fft.cc fft2.cc filter.cc find.cc fsolve.cc \
