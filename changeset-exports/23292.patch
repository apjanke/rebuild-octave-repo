# HG changeset patch
# User Lars Kindermann
# Date 1489148123 -3600
#      Fri Mar 10 13:15:23 2017 +0100
# Branch stable
# Node ID 6cbf5c2d4d55e452021c65d2d328301eafe81ab7
# Parent  92d60bf4588924374d48e0d46fa333fb9ae39897
datetick.m: Fix uneven range bugs (bug #50493)

* datetick.m: Use round() and floor() to calculate an even series of ticks.

diff --git a/scripts/plot/appearance/datetick.m b/scripts/plot/appearance/datetick.m
--- a/scripts/plot/appearance/datetick.m
+++ b/scripts/plot/appearance/datetick.m
@@ -205,25 +205,29 @@ function __datetick__ (varargin)
         ticks = xmin + [0 : nticks - 1] / (nticks - 1) * (xmax - xmin);
       elseif (maxyear - minyear < N)
         sep = __calc_tick_sep__ (minmonth, maxmonth);
         minyear = floor (minyear);
         minmonth = sep * floor (minmonth / sep);
         minmonth = ifelse (minmonth == 0, 1, minmonth);
         maxmonth = sep * ceil (maxmonth / sep);
         rangemonth = (minmonth:sep:maxmonth)';
+        tickdays = round (1 + 28*mod (rangemonth, 1));
         ticks = datenum ([repmat(minyear, size(rangemonth)), ...
-                          rangemonth, ...
-                          ones(size (rangemonth))]);
+                          floor(rangemonth), ...
+                          tickdays]);
       else
         sep = __calc_tick_sep__ (minyear, maxyear);
         minyear = sep * floor (minyear / sep);
         maxyear = sep * ceil (maxyear / sep);
         rangeyear = (minyear:sep:maxyear)';
-        ticks = datenum ([rangeyear, ones(rows(rangeyear),2)]);
+        tickmonth = round (1 + 12*mod (rangeyear, 1));
+        ticks = datenum ([floor(rangeyear), ... 
+                          tickmonth, ...
+                          ones(rows (rangeyear), 1)]);
       endif
     endif
   endif
 
   if (isempty (form))
     r = max (ticks) - min (ticks);
     if (r < 10/60/24)
       ## minutes and seconds
