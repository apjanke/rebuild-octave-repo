# HG changeset patch
# User jwe
# Date 1116878919 0
#      Mon May 23 20:08:39 2005 +0000
# Node ID 4229d6801f231e5ea6b9642be28b49a12072c8fc
# Parent  c9c773d8333f683356a05d46d33914ed83d180ca
[project @ 2005-05-23 20:08:39 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,22 @@
+2005-05-23  John W. Eaton  <jwe@octave.org>
+
+	* plot/orient.m: New file.  Adapt to Octave coding style.
+	Texinfoize doc string.
+
+	* plot/print.m: New file.  Adapt to Octave coding style. Include
+	PKG_ADD command.  Use set terminal consistently	throughout.  Use
+	set terminal push/pop and unconditionally set output to screen
+	when done to avoid requiring gget.  Use a cell array for dev_list
+	and cellidx to search for items in the list.  Delete local
+	variable endl.  Don't set and restore automatic_replot.  Use {}
+	instead of nth to index varargin.  Delete local variable
+	va_arg_cnt.
+
 2005-05-18  John W. Eaton  <jwe@octave.org>
 
 	* general/num2str.m: Return early if X is a character string.
 
 2005-05-11  John W. Eaton  <jwe@octave.org>
 
 	* strings/findstr.m: Allow non-string arguments for compatiblity.
 	From Tom Holroyd <tomh@kurage.nimh.nih.gov>.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,16 @@
 2005-05-23  John W. Eaton  <jwe@octave.org>
 
+	* DLD-FUNCTIONS/sort.cc (mx_sort, mx_sort_indexed): Return
+	appropriately sized empty values for empty args.
+
 	* debug.cc (Fdbwhere, get_user_function): Look at
 	curr_caller_function, not curr_function, since function is now set
-	inside mapper, built-in (and thereford dld) functions too.
+	inside mapper, built-in (and therefore dld) functions too.
 
 2005-05-21  John W. Eaton  <jwe@octave.org>
 
 	* pr-output.cc, pr-output.h (Vprint_empty_dimensions): Now extern.
 	* ov-cell.cc (octave_cell::print_raw): Conditionally print
 	dimensions of empty 2-d cell arrays.
 
 	* DLD-FUNCTIONS/sort.cc (mx_sort, mx_sort_indexed): Return empty
diff --git a/src/DLD-FUNCTIONS/sort.cc b/src/DLD-FUNCTIONS/sort.cc
--- a/src/DLD-FUNCTIONS/sort.cc
+++ b/src/DLD-FUNCTIONS/sort.cc
@@ -81,20 +81,21 @@ descending_compare (vec_index<T> *a, vec
 }
 
 template <class T>
 static octave_value
 mx_sort (ArrayN<T> &m, int dim, sortmode mode = UNDEFINED)
 {
   octave_value retval;
 
+  dim_vector dv = m.dims ();
+
   if (m.length () < 1)
-    return ArrayN<T> ();
+    return ArrayN<T> (dv);
 
-  dim_vector dv = m.dims ();
   octave_idx_type ns = dv(dim);
   octave_idx_type iter = dv.numel () / ns;
   octave_idx_type stride = 1;
   for (int i = 0; i < dim; i++)
     stride *= dv(i);
 
   T *v = m.fortran_vec ();
   octave_sort<T> sort;
@@ -142,24 +143,25 @@ mx_sort (ArrayN<T> &m, int dim, sortmode
 }
 
 template <class T>
 static octave_value_list
 mx_sort_indexed (ArrayN<T> &m, int dim, sortmode mode = UNDEFINED)
 {
   octave_value_list retval;
 
+  dim_vector dv = m.dims ();
+
   if (m.length () < 1)
     {
-      retval(1) = NDArray ();
-      retval(0) = ArrayN<T> ();
+      retval(1) = NDArray (dv);
+      retval(0) = ArrayN<T> (dv);
       return retval;
     }
 
-  dim_vector dv = m.dims ();
   octave_idx_type ns = dv(dim);
   octave_idx_type iter = dv.numel () / ns;
   octave_idx_type stride = 1;
   for (int i = 0; i < dim; i++)
     stride *= dv(i);
 
   T *v = m.fortran_vec ();
   octave_sort<vec_index<T> *> indexed_sort;
@@ -294,20 +296,21 @@ template class vec_index<unsigned EIGHT_
 template class octave_sort<vec_index<unsigned EIGHT_BYTE_INT> *>;
 
 template <>
 octave_value
 mx_sort (ArrayN<double> &m, int dim, sortmode mode)
 {
   octave_value retval;
 
+  dim_vector dv = m.dims ();
+
   if (m.length () < 1)
-    return ArrayN<double> ();
+    return ArrayN<double> (dv);
 
-  dim_vector dv = m.dims ();
   octave_idx_type ns = dv(dim);
   octave_idx_type iter = dv.numel () / ns;
   octave_idx_type stride = 1;
   for (int i = 0; i < dim; i++)
     stride *= dv(i);
 
   double *v = m.fortran_vec ();
 
@@ -431,24 +434,25 @@ mx_sort (ArrayN<double> &m, int dim, sor
 
 // Should other overloaded functions have their static keywords removed?
 template <>
 octave_value_list
 mx_sort_indexed (ArrayN<double> &m, int dim, sortmode mode)
 {
   octave_value_list retval;
 
+  dim_vector dv = m.dims ();
+
   if (m.length () < 1)
     {
-      retval(1) = ArrayN<double> ();
-      retval(0) = NDArray ();
+      retval(1) = ArrayN<double> (dv);
+      retval(0) = NDArray (dv);
       return retval;
     }
 
-  dim_vector dv = m.dims ();
   octave_idx_type ns = dv(dim);
   octave_idx_type iter = dv.numel () / ns;
   octave_idx_type stride = 1;
   for (int i = 0; i < dim; i++)
     stride *= dv(i);
 
   double *v = m.fortran_vec ();
 
