# HG changeset patch
# User jwe
# Date 793035926 0
#      Fri Feb 17 15:45:26 1995 +0000
# Node ID 46619c5ca048ed0d12026dac34516260d9c2169d
# Parent  3508c2ef142c890d4746f9ad0a8454650801e91e
[project @ 1995-02-17 15:45:07 by jwe]

diff --git a/src/user-prefs.cc b/src/user-prefs.cc
--- a/src/user-prefs.cc
+++ b/src/user-prefs.cc
@@ -699,17 +699,17 @@ int
 sv_loadpath (void)
 {
   int status = 0;
 
   char *s = builtin_string_variable ("LOADPATH");
   if (s)
     {
       delete [] user_pref.loadpath;
-      user_pref.loadpath = s;
+      user_pref.loadpath = maybe_add_default_load_path (s);
     }
   else
     {
       warning ("invalid value specified for LOADPATH");
       status = -1;
     }
 
   return status;
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -373,16 +373,43 @@ default_pager (void)
     pager_binary = strsave (DEFAULT_PAGER);
 #else
     pager_binary = strsave ("");
 #endif
 
   return pager_binary;
 }
 
+// Always returns a new string.
+
+char *
+maybe_add_default_load_path (const char *p)
+{
+  static char *std_path = subst_octave_home (OCTAVE_FCNFILEPATH);
+
+  char *pathstring = strsave (p);
+
+  if (pathstring[0] == SEPCHAR)
+    {
+      char *tmp = pathstring;
+      pathstring = strconcat (std_path, pathstring);
+      delete [] tmp;
+    }
+
+  int tmp_len = strlen (pathstring);
+  if (pathstring[tmp_len-1] == SEPCHAR)
+    {
+      char *tmp = pathstring;
+      pathstring = strconcat (pathstring, std_path);
+      delete [] tmp;
+    }
+
+  return pathstring;
+}
+
 char *
 octave_lib_dir (void)
 {
   static char *retval = subst_octave_home (OCTAVE_LIBDIR);
   return retval;
 }
 
 // Handle OCTAVE_PATH from the environment like TeX handles TEXINPUTS.
@@ -391,46 +418,24 @@ octave_lib_dir (void)
 // `:', do both (which is useless, but the luser asked for it...).
 //
 // This function may eventually be called more than once, so be
 // careful not to create memory leaks. 
 
 char *
 default_path (void)
 {
+  static char *std_path = subst_octave_home (OCTAVE_FCNFILEPATH);
+
+  static char *oct_path = getenv ("OCTAVE_PATH");
+
   static char *pathstring = 0;
   delete [] pathstring;
 
-  static char *std_path = subst_octave_home (OCTAVE_FCNFILEPATH);
-
-  char *oct_path = getenv ("OCTAVE_PATH");
-
-  if (oct_path)
-    {
-      pathstring = strsave (oct_path);
-
-      if (pathstring[0] == SEPCHAR)
-	{
-	  char *tmp = pathstring;
-	  pathstring = strconcat (std_path, pathstring);
-	  delete [] tmp;
-	}
-
-      int tmp_len = strlen (pathstring);
-      if (pathstring[tmp_len-1] == SEPCHAR)
-	{
-	  char *tmp = pathstring;
-	  pathstring = strconcat (pathstring, std_path);
-	  delete [] tmp;
-	}
-    }
-  else
-    pathstring = strsave (std_path);
-
-  return pathstring;
+  return oct_path ? strsave (oct_path) : strsave (std_path);
 }
 
 char *
 default_info_file (void)
 {
   static char *info_file_string = 0;
   delete [] info_file_string;
   char *oct_info_file = getenv ("OCTAVE_INFO_FILE");
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -109,16 +109,18 @@ extern void bind_nargin_and_nargout (sym
 
 extern void bind_builtin_variable (const char *, tree_constant *,
 				   int protect = 0, int eternal = 0,
 				   sv_Function f = (sv_Function) 0,
 				   const char *help = 0);
 
 extern void install_builtin_variables (void);
 
+extern char *maybe_add_default_load_path (const char *p);
+
 extern char *octave_lib_dir (void);
 extern char *octave_arch_lib_dir (void);
 extern char *octave_bin_dir (void);
 extern char *default_path (void);
 extern char *default_info_file (void);
 extern char *default_editor (void);
 extern char *get_site_defaults (void);
 
