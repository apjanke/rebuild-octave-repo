# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1518202659 -3600
#      Fri Feb 09 19:57:39 2018 +0100
# Node ID 36cd70fc2d63a6a16d6c02d6664afb787d927e5b
# Parent  95815fc93a3a35b7e0dc4209c2b6bc9b9ea7451f
style fixes for file editor

* file-editor.cc (file_editor_tab_widget::file_editor_tab_widget):
  moved some setups of file_editor_tab_widget into its constructor;
  (file_editor_tab_widget::tabBar) renamed into get_tab_bar and casting here;
  (file_editor::construct): setup of tab widget moved into the constructor,
  no more casting when getting the tab bar

* file-editor.h: renamed file_editor_tab_widget::tabBar

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -24,17 +24,16 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #if defined (HAVE_QSCINTILLA)
 
 #include "file-editor.h"
 #include "resource-manager.h"
 #include "shortcut-manager.h"
-#include "tab-bar.h"
 
 #include <QApplication>
 #include <QFile>
 #include <QFileDialog>
 #include <QFont>
 #include <QMessageBox>
 #include <QMimeData>
 #include <QProcess>
@@ -50,31 +49,38 @@ along with Octave; see the file COPYING.
 #include "utils.h"
 
 
 // Functions of the the reimplemented tab widget
 
 file_editor_tab_widget::file_editor_tab_widget (QWidget *p)
   : QTabWidget (p)
 {
-  tab_bar *bar;
-  bar = new tab_bar (this);
+  tab_bar *bar = new tab_bar (this);
 
   connect (bar, SIGNAL (close_current_tab_signal (bool)),
            p->parent (), SLOT (request_close_file (bool)));
 
   this->setTabBar (bar);
+
+  setTabsClosable (true);
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
+  setMovable (true);
+#endif
 }
 
-QTabBar*
-file_editor_tab_widget::tabBar (void) const
+tab_bar *
+file_editor_tab_widget::get_tab_bar (void) const
 {
-  return (QTabWidget::tabBar ());
+  return qobject_cast<tab_bar *> (tabBar ());
 }
 
+
+// File editor
+
 file_editor::file_editor (QWidget *p)
   : file_editor_interface (p)
 {
   // Set current editing directory before construct because loaded
   // files will change ced accordingly.
   m_ced = QDir::currentPath ();
 
   // set action that are later added by the main window to null,
@@ -1621,20 +1627,16 @@ file_editor::construct (void)
   // on other platforms.
   m_menu_bar = new QMenuBar (editor_widget);
   m_menu_bar->setNativeMenuBar (false);
 
   m_tool_bar = new QToolBar (editor_widget);
   m_tool_bar->setMovable (true);
 
   m_tab_widget = new file_editor_tab_widget (editor_widget);
-  m_tab_widget->setTabsClosable (true);
-#if defined (HAVE_QTABWIDGET_SETMOVABLE)
-  m_tab_widget->setMovable (true);
-#endif
 
   // the mru-list and an empty array of actions
   QSettings *settings = resource_manager::get_settings ();
   m_mru_files = settings->value ("editor/mru_file_list").toStringList ();
   m_mru_files_encodings = settings->value ("editor/mru_file_encodings")
                                    .toStringList ();
 
   if (m_mru_files_encodings.count () != m_mru_files.count ())
@@ -1953,18 +1955,17 @@ file_editor::construct (void)
   vbox_layout->addWidget (m_menu_bar);
   vbox_layout->addWidget (m_tool_bar);
   vbox_layout->addWidget (m_tab_widget);
   vbox_layout->setMargin (0);
   editor_widget->setLayout (vbox_layout);
   setWidget (editor_widget);
 
   // create the context menu of the tab bar
-  tab_bar *bar
-      = static_cast<tab_bar *>(m_tab_widget->tabBar ());
+  tab_bar *bar = m_tab_widget->get_tab_bar ();
   QMenu *ctx_men = bar->get_context_menu ();
   ctx_men->addAction (m_close_action);
   ctx_men->addAction (m_close_all_action);
   ctx_men->addAction (m_close_others_action);
 
   // signals
   connect (this, SIGNAL (execute_command_in_terminal_signal (const QString&)),
            main_win (), SLOT (execute_command_in_terminal (const QString&)));
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -33,31 +33,32 @@ along with Octave; see the file COPYING.
 
 #include <QDragEnterEvent>
 #include <QDropEvent>
 
 #include <map>
 
 #include "file-editor-interface.h"
 #include "file-editor-tab.h"
+#include "tab-bar.h"
 
 
 // subclassed QTabWidget for using custom tabbar
 
 class file_editor_tab_widget : public QTabWidget
 {
   Q_OBJECT
 
 public:
 
   file_editor_tab_widget (QWidget *p);
 
   ~file_editor_tab_widget (void) = default;
 
-  QTabBar * tabBar (void) const;
+  tab_bar * get_tab_bar (void) const;
 };
 
 // the class for the file editor
 
 class file_editor : public file_editor_interface
 {
   Q_OBJECT
 
