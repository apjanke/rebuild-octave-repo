# HG changeset patch
# User jwe
# Date 848033948 0
#      Fri Nov 15 04:59:08 1996 +0000
# Node ID a034dcdbc282a025d532581f1f85c7de25ad537c
# Parent  6914eab16f0bea73ad365ee41745836b83e30f83
[project @ 1996-11-15 04:57:21 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,13 @@
 Thu Nov 14 00:07:31 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* emacs/octave.el (octave-text-functions): Change set and show to
+	gset and gshow.
+
 	* Makeconf.in (TEXI2DVI): Define to be our own private version.
 
 	* texi2dvi: New file.
 	* octMakefile.in (DISTFILES): Add it to the list.
 
 	* configure.in: Don't substitute values in src/mk-oct-links.in.
 
 	* emacs/octave.el: Update to version 0.8.6, from Kurt Hornik.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -1,11 +1,19 @@
 Summary of changes for version 2.0:
 ----------------------------------
 
+  * The set and show commands for setting and displaying gnuplot
+    parameters have been replaced by gset and gshow.  This change will
+    probably break lots of things, but it is necessary to allow for
+    compatibility with the Matlab graphics and GUI commands in a
+    future version of Octave.  (For now, the old set and show commands
+    do work, but they print an annoying warning message to try to get
+    people to switch to using gset.)
+
   * New data types can be added to Octave by writing a C++ class.  On
     systems that support dynamic linking, new data types can be added
     to an already running Octave binary.  A simple example appears in
     the file examples/make_int.cc.  Other examples are the standard
     Octave data types defined in the files src/ov*.{h,cc} and
     src/op-*.cc.  [This feature should be better documented by the
     time 2.0 is released].
 
diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -189,16 +189,28 @@ Input/Output:
 
   * Make it possible to tie arbitrary input and output streams
     together, similar to the way iostreams can be tied together.
 
 -----------
 Interpreter:
 -----------
 
+  * Fix the grammar to allow structure references and index operations
+    for for anonymous expressions.  For example, it should be possible
+    to write
+
+      localtime (time ()) . hour;
+
+    to get the current hour.  Likewise, it should be possible to write
+
+      svd (A) (1:13);
+
+    to extract the first 13 singular values of the matrix A.
+
   * Consider grouping all preference variables in a structure instead
     of further polluting the namespace.  Maybe `Octave_options.xxx'?
 
   * Rewrite functions in input.cc to do the right thing in all cases
     of using readline, forced interactive behavior, echoing of input,
     etc.
 
   * Make it possible to redefine built-in variables and functions.
diff --git a/emacs/octave.el b/emacs/octave.el
--- a/emacs/octave.el
+++ b/emacs/octave.el
@@ -259,17 +259,17 @@ name are given by the first and third pa
   (append octave-begin-keywords octave-else-keywords octave-end-keywords
 	  '("all_va_args" "break" "continue" "global" "gplot" "gsplot"
 	    "replot" "return"))
   "Reserved words in Octave.")
 
 (defvar octave-text-functions
   '("casesen" "cd" "chdir" "clear" "diary" "dir" "document" "echo"
     "edit_history" "format" "help" "history" "hold" "load" "ls" "more"
-    "run_history" "save" "set" "show" "type" "which" "who" "whos")
+    "run_history" "save" "gset" "gshow" "type" "which" "who" "whos")
   "Octave text functions (these names are also reserved.")
 
 (defvar octave-variables
   '("EDITOR" "EXEC_PATH" "F_DUPFD" "F_GETFD" "F_GETFL" "F_SETFD"
     "F_SETFL" "I" "IMAGEPATH" "INFO_FILE" "INFO_PROGRAM" "Inf" "J"
     "LOADPATH" "NaN" "OCTAVE_VERSION" "O_APPEND" "O_CREAT" "O_EXCL"
     "O_NONBLOCK" "O_RDONLY" "O_RDWR" "O_TRUNC" "O_WRONLY" "PAGER" "PS1"
     "PS2" "PS4" "PWD" "SEEK_CUR" "SEEK_END" "SEEK_SET" "__F_DUPFD__"
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,18 @@
 Thu Nov 14 00:06:34 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* plot/axis.m, plot/bottom_title.m, plot/contour.m,
+	plot/figure.m, plot/grid.m, plot/loglog.m, plot/mesh.m,
+	plot/mplot.m, plot/multiplot.m, plot/oneplot.m, plot/plot.m,
+	plot/plot_border.m, plot/polar.m, plot/semilogx.m,
+	plot/semilogy.m, plot/subplot.m, plot/subwindow.m, plot/title.m,
+	plot/top_title.m, plot/xlabel.m, plot/ylabel.m, plot/zlabel.m:
+	Uset gset, not set.
+
 	* Version 1.92.
 
 Thu Nov  7 12:43:12 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* image/saveimage.m: When writing PostScript, name Octave as the
 	almighty Creator.  Use single call to fprintf instead of looping.
 
 	* image/Makefile.in: Delete references to octtopnm.
diff --git a/scripts/plot/axis.m b/scripts/plot/axis.m
--- a/scripts/plot/axis.m
+++ b/scripts/plot/axis.m
@@ -42,37 +42,37 @@ function curr_axis = axis (ax)
     __current_axis__ = [-10, 10, -10, 10];
   endif
 
   if (nargin > 1)
     usage ("axis ([xmin, xmax, ymin, ymax, zmin, zmax])");
   endif
 
   if (nargin == 0)
-    set autoscale;
+    gset autoscale;
     curr_axis = __current_axis__;
   elseif (is_vector (ax))
 
     len = length (ax);
 
     if (len != 2 && len != 4 && len != 6)
       error ("axis: expecting vector with 2, 4, or 6 elements");
     endif
 
     __current_axis__ = reshape (ax, 1, len);
 
     if (len > 1)
-      eval (sprintf ("set xrange [%g:%g];", ax (1), ax (2)));
+      eval (sprintf ("gset xrange [%g:%g];", ax (1), ax (2)));
     endif
 
     if (len > 3)
-      eval (sprintf ("set yrange [%g:%g];", ax (3), ax (4)));
+      eval (sprintf ("gset yrange [%g:%g];", ax (3), ax (4)));
     endif
 
     if (len > 5)
-      eval (sprintf ("set zrange [%g:%g];", ax (5), ax (6)));
+      eval (sprintf ("gset zrange [%g:%g];", ax (5), ax (6)));
     endif
 
   else
     error ("axis: expecting no args, or a vector with 2, 4, or 6 elements");
   endif
 
 endfunction
diff --git a/scripts/plot/bottom_title.m b/scripts/plot/bottom_title.m
--- a/scripts/plot/bottom_title.m
+++ b/scripts/plot/bottom_title.m
@@ -35,16 +35,16 @@ function bottom_title (text)
     error ("bottom_title: gnuplot does not appear to support this feature");
   endif
 
   if (nargin != 1)
     usage ("bottom_title (text)");
   endif
 
   if (isstr (text))
-    set top_title;
-    set title;
-    eval (sprintf ("set bottom_title \"%s\"", text));
+    gset top_title;
+    gset title;
+    eval (sprintf ("gset bottom_title \"%s\"", text));
   else
     error ("bottom_title: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/plot/contour.m b/scripts/plot/contour.m
--- a/scripts/plot/contour.m
+++ b/scripts/plot/contour.m
@@ -28,23 +28,23 @@ function contour (z, n, x, y)
 
 
   if (nargin == 1)
     n = 10;
   endif
 
   if (nargin == 1 || nargin == 2)
     if (is_matrix (z))
-      set nosurface;
-      set contour;
-      set cntrparam bspline;
-      command = sprintf ("set cntrparam levels %d", n);
+      gset nosurface;
+      gset contour;
+      gset cntrparam bspline;
+      command = sprintf ("gset cntrparam levels %d", n);
       eval (command);
-      set noparametric;
-      set view 0, 0, 1.9, 1;
+      gset noparametric;
+      gset view 0, 0, 1.9, 1;
       gsplot z w l 1;
     else
       error ("mesh: argument must be a matrix");
     endif
   elseif (nargin == 4)
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
       ylen = length (y);
@@ -56,23 +56,23 @@ function contour (z, n, x, y)
         zz = zeros (xlen, ylen);
         k = 1;
         for i = 1:3:len
           zz(:,i)   = x;
           zz(:,i+1) = y(k) * ones (xlen, 1);
           zz(:,i+2) = z(:,k);
           k++;
         endfor
-        set nosurface;
-        set contour;
-        set cntrparam bspline;
+        gset nosurface;
+        gset contour;
+        gset cntrparam bspline;
         command = sprintf ("set cntrparam levels %d", n);
         eval (command);
-	set parametric;
-        set view 0, 0, 1.9, 1;
+	gset parametric;
+        gset view 0, 0, 1.9, 1;
 	gsplot zz w l 1;
       else
         msg = "mesh: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     else
       error ("mesh: x and y must be vectors and z must be a matrix");
diff --git a/scripts/plot/figure.m b/scripts/plot/figure.m
--- a/scripts/plot/figure.m
+++ b/scripts/plot/figure.m
@@ -24,17 +24,17 @@
 
 ## Author: jwe
 
 function figure (n)
 
   if (nargin == 1)
     if (gnuplot_has_frames)
       if (! isempty (getenv ("DISPLAY")))
-	eval (sprintf ("set term x11 %d\n", n));
+	eval (sprintf ("gset term x11 %d\n", n));
       else
 	error ("figure: requires X11 and valid DISPLAY");
       endif
     else
       error ("figure: gnuplot doesn't appear to support this feature");
     endif
   else
     usage ("figure (n)");
diff --git a/scripts/plot/grid.m b/scripts/plot/grid.m
--- a/scripts/plot/grid.m
+++ b/scripts/plot/grid.m
@@ -26,23 +26,23 @@
 ## See also: plot, semilogx, semilogy, loglog, polar, mesh, contour,
 ##           bar, stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function grid (x)
 
   if (nargin == 0)
-    set grid;
+    gset grid;
   elseif (nargin == 1)
     if (isstr (x))
       if (strcmp ("off", x))
-        set nogrid;
+        gset nogrid;
       elseif (strcmp ("on", x))
-        set grid;
+        gset grid;
       else
     usage ("grid (\"on\" | \"off\")");
       endif
     else
       error ("grid: argument must be a string");
     endif
   else
     error ("usage: grid (\"on\" | \"off\")");
diff --git a/scripts/plot/loglog.m b/scripts/plot/loglog.m
--- a/scripts/plot/loglog.m
+++ b/scripts/plot/loglog.m
@@ -28,15 +28,15 @@
 ##
 ## See also: plot, semilogy, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function loglog (...)
 
-  set logscale x;
-  set logscale y;
-  set nopolar;
+  gset logscale x;
+  gset logscale y;
+  gset nopolar;
 
   __plt__ ("loglog", all_va_args);
 
 endfunction
diff --git a/scripts/plot/mesh.m b/scripts/plot/mesh.m
--- a/scripts/plot/mesh.m
+++ b/scripts/plot/mesh.m
@@ -30,22 +30,22 @@
 
 ## Author: jwe
 
 function mesh (x, y, z)
 
   if (nargin == 1)
     z = x;
     if (is_matrix (z))
-      set hidden3d;
-      set data style lines;
-      set surface;
-      set nocontour;
-      set noparametric;
-      set view 60, 30, 1, 1
+      gset hidden3d;
+      gset data style lines;
+      gset surface;
+      gset nocontour;
+      gset noparametric;
+      gset view 60, 30, 1, 1
       gsplot (z');
     else
       error ("mesh: argument must be a matrix");
     endif
   elseif (nargin == 3)
     if (is_vector (x) && is_vector (y) && is_matrix (z))
       xlen = length (x);
       ylen = length (y);
@@ -57,22 +57,22 @@ function mesh (x, y, z)
         zz = zeros (ylen, len);
         k = 1;
         for i = 1:3:len
           zz(:,i)   = x(k) * ones (ylen, 1);
           zz(:,i+1) = y;
           zz(:,i+2) = z(:,k);
           k++;
         endfor
-	set hidden3d;
-	set data style lines;
-        set surface;
-        set nocontour;
-	set parametric;
-        set view 60, 30, 1, 1
+	gset hidden3d;
+	gset data style lines;
+        gset surface;
+        gset nocontour;
+	gset parametric;
+        gset view 60, 30, 1, 1
 	gsplot (zz);
       else
         msg = "mesh: rows (z) must be the same as length (x) and";
         msg = sprintf ("%s\ncolumns (z) must be the same as length (y)", msg);
         error (msg);
       endif
     elseif (is_matrix (x) && is_matrix (y) && is_matrix (z))
       xlen = columns (z);
@@ -83,22 +83,22 @@ function mesh (x, y, z)
         zz = zeros (ylen, len);
         k = 1;
         for i = 1:3:len
           zz(:,i)   = x(:,k);
           zz(:,i+1) = y(:,k);
           zz(:,i+2) = z(:,k);
           k++;
         endfor
-	set hidden3d;
-	set data style lines;
-        set surface;
-        set nocontour;
-	set parametric;
-        set view 60, 30, 1, 1
+	gset hidden3d;
+	gset data style lines;
+        gset surface;
+        gset nocontour;
+	gset parametric;
+        gset view 60, 30, 1, 1
 	gsplot (zz);
       else
         error ("mesh: x, y, and z must have same dimensions");
       endif
     else
       error ("mesh: x and y must be vectors and z must be a matrix");
     endif
   else
diff --git a/scripts/plot/mplot.m b/scripts/plot/mplot.m
--- a/scripts/plot/mplot.m
+++ b/scripts/plot/mplot.m
@@ -52,18 +52,18 @@ function mplot (...)
   global multiplot_save_auto_replot = automatic_replot
 
   if (automatic_replot)
     warning ("turning off automatic replot for multiplot mode");
     multiplot_save_auto_replot = automatic_replot;
     automatic_replot = 0;
   endif
 
-  set nologscale;
-  set nopolar;
+  gset nologscale;
+  gset nopolar;
 
   __plt__ ("plot", all_va_args);
 
   ## update the plot position
 
   if (multiplot_mode)
 
     if (multiplot_xi < multiplot_xn)
@@ -75,13 +75,13 @@ function mplot (...)
       else
 	multiplot_yi = 1;
       endif
     endif
 
     xo = (multiplot_xi - 1.0)*multiplot_xsize;
     yo = (multiplot_yn - multiplot_yi)*multiplot_ysize;
 
-    eval (sprintf ("set origin %g, %g", xo,yo));
+    eval (sprintf ("gset origin %g, %g", xo,yo));
 
   endif
 
 endfunction
diff --git a/scripts/plot/multiplot.m b/scripts/plot/multiplot.m
--- a/scripts/plot/multiplot.m
+++ b/scripts/plot/multiplot.m
@@ -64,19 +64,19 @@ function multiplot (xn, yn)
     automatic_replot = 0;
   endif
 
   xn = round (xn);
   yn = round (yn);
 
   if (xn == 0 && yn == 0)
 
-    set nomultiplot;
-    set size 1, 1;
-    set origin 0, 0;
+    gset nomultiplot;
+    gset size 1, 1;
+    gset origin 0, 0;
 
     multiplot_mode = 0;
     multiplot_xsize = 1;
     multiplot_ysize = 1;
     multiplot_xn = 1;
     multiplot_yn = 1;
     multiplot_xi = 1;
     multiplot_yi = 1;
@@ -90,27 +90,27 @@ function multiplot (xn, yn)
     return;
 
   else
 
     if (xn < 1 || yn < 1)
       error ("multiplot: xn and yn have to be positive integers");
     endif
 
-    set multiplot;
+    gset multiplot;
 
     xsize = 1.0 ./ xn;
     ysize = 1.0 ./ yn;
 
-    eval (sprintf ("set size %g, %g", xsize, ysize));
+    eval (sprintf ("gset size %g, %g", xsize, ysize));
 
     xo = 0.0;
     yo = (yn - 1.0)*ysize;
 
-    eval (sprintf ("set origin %g, %g", xo, yo));
+    eval (sprintf ("gset origin %g, %g", xo, yo));
 
     multiplot_mode = 1;
     multiplot_xsize = xsize;
     multiplot_ysize = ysize;
     multiplot_xn = xn;
     multiplot_yn = yn;
     multiplot_xi = 1;
     multiplot_yi = 1;
diff --git a/scripts/plot/oneplot.m b/scripts/plot/oneplot.m
--- a/scripts/plot/oneplot.m
+++ b/scripts/plot/oneplot.m
@@ -32,14 +32,14 @@
 function oneplot ()
 
   if (! gnuplot_has_multiplot)
     error ("oneplot: gnuplot does not appear to support this feature");
   endif
 
   global multiplot_mode
 
-  set nomultiplot;
-  set size 1, 1;
-  set origin 0, 0;
+  gset nomultiplot;
+  gset size 1, 1;
+  gset origin 0, 0;
   multiplot_mode = 0;
 
 endfunction
diff --git a/scripts/plot/plot.m b/scripts/plot/plot.m
--- a/scripts/plot/plot.m
+++ b/scripts/plot/plot.m
@@ -60,14 +60,14 @@
 ##
 ## See also: semilogx, semilogy, loglog, polar, mesh, contour, __pltopt__
 ##           bar, stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function plot (...)
 
-  set nologscale;
-  set nopolar;
+  gset nologscale;
+  gset nopolar;
 
   __plt__ ("plot", all_va_args);
 
 endfunction
diff --git a/scripts/plot/plot_border.m b/scripts/plot/plot_border.m
--- a/scripts/plot/plot_border.m
+++ b/scripts/plot/plot_border.m
@@ -86,19 +86,19 @@ function plot_border (...)
       elseif (strcmp (arg, "all") || strcmp (arg, "ALL")
 	      || strcmp (arg, "a") || strcmp (arg, "A"))
 	all = 1;
       endif
     endif
   endwhile
 
   if (none)
-    set noborder;
+    gset noborder;
   else
     if (all)
       border = 15;
     else
       border = south + west + north + east;
     endif
-    eval (sprintf ("set border %d", border));
+    eval (sprintf ("gset border %d", border));
   endif
 
 endfunction
diff --git a/scripts/plot/polar.m b/scripts/plot/polar.m
--- a/scripts/plot/polar.m
+++ b/scripts/plot/polar.m
@@ -25,18 +25,18 @@
 ##
 ## See also: plot, semilogx, semilogy, loglog, mesh, contour, bar,
 ##           stairs, gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function polar (x1, x2, fmt)
 
-  set nologscale;
-  set nopolar;
+  gset nologscale;
+  gset nopolar;
 
   if (nargin == 3)
     if (isstr (fmt))
       fmt = __pltopt__ ("polar", fmt);
     else
       error ("polar: third argument must be a string");
     endif
     __plr2__ (x1, x2, fmt);
diff --git a/scripts/plot/semilogx.m b/scripts/plot/semilogx.m
--- a/scripts/plot/semilogx.m
+++ b/scripts/plot/semilogx.m
@@ -28,15 +28,15 @@
 ##
 ## See also: plot, semilogy, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function semilogx (...)
 
-  set logscale x;
-  set nologscale y;
-  set nopolar;
+  gset logscale x;
+  gset nologscale y;
+  gset nopolar;
 
   __plt__ ("semilogx", all_va_args);
 
 endfunction
diff --git a/scripts/plot/semilogy.m b/scripts/plot/semilogy.m
--- a/scripts/plot/semilogy.m
+++ b/scripts/plot/semilogy.m
@@ -28,15 +28,15 @@
 ##
 ## See also: plot, semilogx, loglog, polar, mesh, contour, bar, stairs,
 ##           gplot, gsplot, replot, xlabel, ylabel, title
 
 ## Author: jwe
 
 function semilogy (...)
 
-  set nologscale x;
-  set logscale y;
-  set nopolar;
+  gset nologscale x;
+  gset logscale y;
+  gset nopolar;
 
   __plt__ ("semilogy", all_va_args);
 
 endfunction
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -112,19 +112,19 @@ function subplot (rows, columns, index)
   if (columns < 1 || rows < 1 || index < 1)
     error ("subplot: columns,rows,index must be be positive");
   endif
 
   if (columns*rows == 1)
 
     ## switching to single plot ?
 
-    set nomultiplot;
-    set size 1, 1;
-    set origin 0, 0;
+    gset nomultiplot;
+    gset size 1, 1;
+    gset origin 0, 0;
 
     multiplot_xn = 1;
     multiplot_yn = 1;
     multiplot_mode = 0;
 
     ## Someone may have reset it betweeen calls...
 
     if (! isstr (automatic_replot) && ! automatic_replot)
@@ -147,31 +147,31 @@ function subplot (rows, columns, index)
     if (doagain)
 
       multiplot_mode = 1;
       multiplot_xn = columns;
       multiplot_yn = rows;
       multiplot_xsize = 1.0 ./ columns;
       multiplot_ysize = 1.0 ./ rows;
 
-      set multiplot;
+      gset multiplot;
 
-      eval (sprintf ("set size %g, %g", multiplot_xsize, multiplot_ysize));
+      eval (sprintf ("gset size %g, %g", multiplot_xsize, multiplot_ysize));
 
     endif
 
     ## get the sub plot location
 
     yp = fix ((index-1)/columns);
     xp = index - yp*columns - 1;
     multiplot_xi = ++xp;
     multiplot_yi = ++yp;
 
     ## set the origin
 
     xo = (xp - 1.0)*multiplot_xsize;
     yo = (rows - yp)*multiplot_ysize;
 
-    eval (sprintf ("set origin %g, %g", xo, yo));
+    eval (sprintf ("gset origin %g, %g", xo, yo));
 
   endif
 
 endfunction
diff --git a/scripts/plot/subwindow.m b/scripts/plot/subwindow.m
--- a/scripts/plot/subwindow.m
+++ b/scripts/plot/subwindow.m
@@ -69,11 +69,11 @@ function subwindow (xn, yn)
 
   if (xn < 1 || xn > multiplot_xn || yn < 1 || yn > multiplot_yn)
     error ("subwindow: incorrect xn and yn");
   endif
 
   xo = (xn - 1.0)*multiplot_xsize;
   yo = (multiplot_yn - yn)*multiplot_ysize;
 
-  eval (sprintf ("set origin %g, %g", xo, yo));
+  eval (sprintf ("gset origin %g, %g", xo, yo));
 
 endfunction
diff --git a/scripts/plot/title.m b/scripts/plot/title.m
--- a/scripts/plot/title.m
+++ b/scripts/plot/title.m
@@ -29,15 +29,15 @@
 
 function title (text)
 
   if (nargin != 1)
     usage ("title (text)");
   endif
 
   if (isstr (text))
-    command = sprintf ("set title \"%s\"", text);
+    command = sprintf ("gset title \"%s\"", text);
     eval (command);
   else
     error ("title: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/plot/top_title.m b/scripts/plot/top_title.m
--- a/scripts/plot/top_title.m
+++ b/scripts/plot/top_title.m
@@ -34,16 +34,16 @@ function top_title (text)
     error ("top_title: gnuplot does not appear to support this feature");
   endif
 
   if (nargin != 1)
     usage ("top_title (text)");
   endif
 
   if (isstr (text))
-    set bottom_title;
-    set title;
-    eval (sprintf ("set top_title \"%s\"", text));
+    gset bottom_title;
+    gset title;
+    eval (sprintf ("gset top_title \"%s\"", text));
   else
     error ("error: top_title: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -29,15 +29,15 @@
 
 function xlabel (text)
 
   if (nargin != 1)
     usage ("xlabel (text)");
   endif
 
   if (isstr (text))
-    command = sprintf ("set xlabel \"%s\"", text);
+    command = sprintf ("gset xlabel \"%s\"", text);
     eval (command);
   else
     error ("xlabel: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -29,15 +29,15 @@
 
 function ylabel (text)
 
   if (nargin != 1)
     usage ("ylabel (text)");
   endif
 
   if (isstr (text))
-    command = sprintf ("set ylabel \"%s\"", text);
+    command = sprintf ("gset ylabel \"%s\"", text);
     eval (command);
   else
     error ("ylabel: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -30,14 +30,14 @@
 
 function zlabel (text)
 
   if (nargin != 1)
     usage ("zlabel (text)");
   endif
 
   if (isstr (text))
-    eval (sprintf ("set zlabel \"%s\"", text));
+    eval (sprintf ("gset zlabel \"%s\"", text));
   else
     error ("error: zlabel: text must be a string");
   endif
 
 endfunction
diff --git a/scripts/signal/filter.m b/scripts/signal/filter.m
deleted file mode 100644
--- a/scripts/signal/filter.m
+++ /dev/null
@@ -1,135 +0,0 @@
-function [y, w] = filter(b,a,x,w)
-
-# Filter a vector.
-# y = filter(b,a,x) returns the solution to the following linear,
-# time-invariant difference equation:
-# 
-#    N                   M
-#   sum a(k+1) y(n-k) = sum b(k+1) x(n-k)            for 1<=n<=length(x)
-#   k=0                 k=0
-# 
-# where N=length(a)-1 and M=length(b)-1. An equivalent form of this
-# equation is:
-# 
-#             N                   M
-#   y(n) = - sum c(k+1) y(n-k) + sum d(k+1) x(n-k)   for 1<=n<=length(x)
-#            k=1                 k=0				     
-# 				  
-# where c = a/a(1) and d = b/a(1).
-# 
-# In terms of the z-transform, y is the result of passing the discrete-
-# time signal x through a system characterized by the following rational
-# system function:							
-# 									
-#              M
-#             sum d(k+1) z^(-k)
-#             k=0	       
-#   H(z) = ----------------------
-#                N
-#           1 + sum c(k+1) z^(-k)
-#               k=1
-# 
-# [y, sf] = filter(b,a,x,si) sets the initial state of the system, si,
-# and returns the final state, sf.  The state vector is a column vector
-# whose length is equal to the length of the longest coefficient vector
-# minus one.  If si is not set, the initial state vector is set to all
-# zeros.
-# 
-# The particular algorithm employed is known as a transposed Direct
-# Form II implementation.
-# 
-# SEE ALSO: poly, roots, conv, deconv, residue, polyval, polyderiv, polyinteg
-
-# Written by Tony Richardson <amr@mpl.ucsd.edu> June 1994.
-
-# Bug fix by FL (Friedrich.Leisch@ci.tuwien.ac.at) on Oct 12, 1994
-
-  if(nargin < 3 || nargin > 4)
-    error("usage: [y, sf] = filter(b,a,x[,si])");
-  endif
-
-  if(is_matrix(a) || is_matrix(b) || is_matrix(x))
-    error("Argument must be a vector.");
-  endif
-
-  N = length(a);
-  M = length(b);
-  L = length(x);
-
-  MN = max([N, M]);
-  lw = MN - 1;
-
-  # It's convenient to pad the coefficient vectors to the same length.
-  b = postpad(b,MN);
-
-  # Ensure that all vectors have the assumed dimension.
-  if(columns(a) > 1)
-    a = reshape(a,N,1);
-  endif
-  if(columns(b) > 1)
-    b = reshape(b,MN,1);
-  endif
-
-  if(nargin == 3)
-    # Set initial state to zero.
-    w = zeros(lw,1);
-  else
-    if(is_matrix(w) || length(w) != lw)
-      error("state vector has the wrong dimensions.");
-    endif
-    if(columns(w) > 1)
-      w = reshape(w,lw,1);
-    endif
-  endif
-
-  # Allocate space for result.
-  y = zeros(1,L);
-
-  norm = a(1);
-  if (norm == 0.)
-    error("First element in second argument must be non-zero.");
-  endif
-
-  if (norm != 1.)
-    b = b/norm;
-  endif
-
-  # Distinguish between IIR and FIR cases.  The IIR code can easily be made
-  # to  work for both cases, but the FIR code is slightly faster when it can
-  # be used.
-
-  if (N > 1)
-    # IIR filter.
-    a = postpad(a,MN);
-    if (norm != 1.)
-      a = a/norm;
-    endif
-    for index = 1:L
-      y(index) = w(1) + b(1)*x(index);
-      # Update state vector
-      if(lw > 1)
-        w(1:(lw-1)) = w(2:lw) - a(2:lw)*y(index) + b(2:lw)*x(index);
-        w(lw) = b(MN)*x(index) - a(MN) * y(index);
-      else
-        w(1) = b(MN)*x(index) - a(MN) * y(index);
-      endif
-    endfor
-  else
-    # FIR filter.
-    if(lw > 0)
-      for index = 1:L
-        y(index) = w(1) + b(1)*x(index);
-        if ( lw > 1)
-          # Update state vector
-          w(1:lw-1) = w(2:lw) + b(2:lw)*x(index);
-          w(lw) = b(MN)*x(index);
-        else
-          w(1) = b(2)*x(index);
-        endif
-      endfor
-    else
-      # Handle special case where there is no delay separately.
-      y = b(1)*x;
-    endif
-  endif
-endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 Thu Nov 14 00:06:19 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* pt-plot.cc (Fgset, Fgshow): New commands.
+	(Fshow): Print warning and call gshow.
+	(Fset): Print warning and call gset.
+
 	* variables.cc (parse_fcn_file): Add unwind-protect for file
 	pointer, so the file is always closed.
 	(get_help_from_file): Likewise.
 	* toplev.cc (parse_and_execute): Likewise.
 
 	* Makefile.in (install-oct): Depend on mk-oct-links.
 	(mk-oct-links): New target.
 
diff --git a/src/pt-plot.cc b/src/pt-plot.cc
--- a/src/pt-plot.cc
+++ b/src/pt-plot.cc
@@ -982,20 +982,20 @@ Return 1 if hold is on, otherwise return
 DEFUN (purge_tmp_files, , ,
   "delete temporary data files used for plotting")
 {
   octave_value_list retval;
   cleanup_tmp_files ();
   return retval;
 }
 
-DEFUN_TEXT (set, args, ,
-  "set [options]\n\
+DEFUN_TEXT (gset, args, ,
+  "gset [options]\n\
 \n\
-set plotting options")
+set plotting options for gnuplot")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("set");
 
   if (error_state)
@@ -1028,18 +1028,25 @@ set plotting options")
   char *plot_command = plot_buf.str ();
   send_to_plot_stream (plot_command);
 
   delete [] plot_command;
 
   return retval;
 }
 
-DEFUN_TEXT (show, args, ,
-  "show [options]\n\
+DEFUN_TEXT (set, args, nargout,
+  "This command is has been replaced by `gset'.")
+{
+  warning ("set is obsolete -- use gset instead")
+  return Fgset (args, nargout);
+}
+
+DEFUN_TEXT (gshow, args, ,
+  "gshow [options]\n\
 \n\
 show plotting options")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("show");
@@ -1057,16 +1064,23 @@ show plotting options")
   char *plot_command = plot_buf.str ();
   send_to_plot_stream (plot_command);
 
   delete [] plot_command;
 
   return retval;
 }
 
+DEFUN_TEXT (show, args, nargout,
+  "This command is has been replaced by `gshow'.")
+{
+  warning ("show is obsolete -- use gshow instead")
+  return Fgshow (args, nargout);
+}
+
 static int
 automatic_replot (void)
 {
   Vautomatic_replot = check_preference ("automatic_replot");
 
   return 0;
 }
 
