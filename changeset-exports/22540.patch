# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1474975342 -7200
#      Tue Sep 27 13:22:22 2016 +0200
# Node ID 6574e90e8e27f51f14d7370a7b37575133cef396
# Parent  e9f77d099a63da6db99c4e65ca7da4443a9cb160
dec2base.m: avoid check for vectorization, as it is done anyway.

diff --git a/scripts/strings/dec2base.m b/scripts/strings/dec2base.m
--- a/scripts/strings/dec2base.m
+++ b/scripts/strings/dec2base.m
@@ -58,19 +58,17 @@ function retval = dec2base (d, base, len
     print_usage ();
   endif
 
   if (iscell (d))
     d = cell2mat (d);
   endif
 
   ## Create column vector for algorithm
-  if (! iscolumn (d))
-    d = d(:);
-  endif
+  d = d(:);
 
   ## Treat logical as numeric for compatibility with ML
   if (islogical (d))
     d = double (d);
   elseif (! isnumeric (d) || iscomplex (d) || any (d < 0 | d != fix (d)))
     error ("dec2base: input must be real non-negative integers");
   endif
 
@@ -87,17 +85,17 @@ function retval = dec2base (d, base, len
   elseif (! isscalar (base))
     error ("dec2base: cannot convert from several bases at once");
   elseif (base < 2 || base > length (symbols))
     error ("dec2base: BASE must be between 2 and 36, or a string of symbols");
   endif
 
   ## determine number of digits required to handle all numbers, can overflow
   ## by 1 digit
-  max_len = round (log (max (max (d(:)), 1)) / log (base)) + 1;
+  max_len = round (log (max (max (d), 1)) / log (base)) + 1;
 
   if (nargin == 3)
     max_len = max (max_len, len);
   endif
 
   ## determine digits for each number
   digits = zeros (length (d), max_len);
   for k = max_len:-1:1
