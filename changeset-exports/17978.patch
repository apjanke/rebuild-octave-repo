# HG changeset patch
# User Rik <rik@octave.org>
# Date 1385064864 28800
#      Thu Nov 21 12:14:24 2013 -0800
# Node ID 86846ce0371a858dc22709b2f30807b8f734dff0
# Parent  acdee77299e1c51fca71aa01b3eb3f02e8357f55
acinclude.m4: Clean up indentation of Fortran code tests.

* m4/acinclude.m4: Clean up indentation of Fortran code tests.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -310,29 +310,29 @@ AC_DEFUN([OCTAVE_CHECK_VERSION_2_6_0], [
 ])
 dnl
 dnl Check if Fortran compiler has the intrinsic function ISNAN.
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_FORTRAN_ISNAN], [
   AC_CACHE_CHECK([whether $F77 has the intrinsic function ISNAN],
     [octave_cv_func_fortran_isnan],
     [AC_LANG_PUSH(Fortran 77)
-    AC_COMPILE_IFELSE(
-[[      program foo
+    AC_COMPILE_IFELSE([[
+      program foo
       implicit none
       real x
       double precision y
       if (isnan(x)) then
         print *, 'x is NaN'
       end if
       if (isnan(y)) then
         print *, 'y is NaN'
       end if
       end program
-]],
+      ]],
       octave_cv_func_fortran_isnan=yes, octave_cv_func_fortran_isnan=no)
     AC_LANG_POP(Fortran 77)
   ])
 ])
 dnl
 dnl Check if function gluTessCallback is called with "(...)".
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS], [
@@ -1006,33 +1006,34 @@ dnl
 dnl Check if the default Fortran INTEGER is 64 bits wide.
 dnl
 AC_DEFUN([OCTAVE_CHECK_SIZEOF_FORTRAN_INTEGER], [
   AC_CACHE_CHECK([whether $F77 generates correct size integers],
     [octave_cv_sizeof_fortran_integer],
     [ac_octave_save_FFLAGS="$FFLAGS"
     FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
     AC_LANG_PUSH(Fortran 77)
-    AC_COMPILE_IFELSE(
-[[      subroutine foo(n, in, out)
+    AC_COMPILE_IFELSE([[
+      subroutine foo(n, in, out)
       integer n, in(n), out(n)
       integer i
       do 10 i = 1, n
         out(i) = in(i)
    10 continue
       return
       end
-]],
+      ]],
       [mv conftest.$ac_objext fintsize.$ac_objext
       ac_octave_save_LIBS="$LIBS"
       LIBS="fintsize.$ac_objext $[]_AC_LANG_PREFIX[]LIBS"
       AC_LANG_PUSH(C)
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
           #include <assert.h>
-          #include <stdint.h> ]], [[
+          #include <stdint.h>
+          ]], [[
           #ifdef USE_64_BIT_IDX_T
             typedef int64_t octave_idx_type;
           #else
             typedef int octave_idx_type;
           #endif
           octave_idx_type n = 2;
           octave_idx_type in[2];
           octave_idx_type out[2];
