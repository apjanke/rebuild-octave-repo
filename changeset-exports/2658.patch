# HG changeset patch
# User jwe
# Date 854945410 0
#      Mon Feb 03 04:50:10 1997 +0000
# Node ID dd71eb0bb4141026e37a6671e0de02de5ea0c1dd
# Parent  7457014d8985ee2791e9eba90181e1d70bdedb44
[project @ 1997-02-03 04:49:57 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+Sun Feb  2 22:33:44 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* cmd-hist.cc (command_history::read): New arg, must_exist.
+	Set line_in_file here too.
+	(command_history::read_range): New arg, must_exist.
+
 Fri Jan 31 09:21:57 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* f2c-main.c: Change C++-style comments to C-style comments.
 
 Tue Jan 28 10:46:02 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (install-inc): Create a relative symbolic link.
 
diff --git a/liboctave/cmd-hist.cc b/liboctave/cmd-hist.cc
--- a/liboctave/cmd-hist.cc
+++ b/liboctave/cmd-hist.cc
@@ -174,57 +174,74 @@ command_history::unstifle (void)
 
 int
 command_history::is_stifled (void)
 {
   return ::history_is_stifled ();
 }
 
 void
-command_history::read (const string& f_arg)
+command_history::read (bool must_exist)
+{
+  read (xfile, must_exist);
+}
+
+void
+command_history::read (const string& f_arg, bool must_exist)
 {
   string f = f_arg;
 
   if (f.empty ())
     f = xfile;
 
   if (! f.empty ())
     {
       int status = ::read_history (f.c_str ());
 
-      if (status != 0)
+      if (status != 0 && must_exist)
 	error (status);
       else
-	::using_history ();
+	{
+	  lines_in_file = where ();
+
+	  ::using_history ();
+	}
     }
   else
     error ("command_history::read: missing file name");
 }
 
+command_history::read_range (int from, int to, bool must_exist)
+{
+  read_range (xfile, from, to, must_exist);
+}
+
 void
-command_history::read_range (const string& f_arg, int from, int to)
+command_history::read_range (const string& f_arg, int from, int to,
+			     bool must_exist)
 {
   if (from < 0)
     from = lines_in_file;
 
   string f = f_arg;
 
   if (f.empty ())
     f = xfile;
 
   if (! f.empty ())
     {
       int status = ::read_history_range (f.c_str (), from, to);
 
-      if (status != 0)
+      if (status != 0 && must_exist)
 	error (status);
       else
 	{
+	  lines_in_file = where ();
+
 	  ::using_history ();
-	  lines_in_file = where ();
 	}
     }
   else
     error ("command_history::read_range: missing file name");
 }
 
 void
 command_history::write (const string& f_arg)
diff --git a/liboctave/cmd-hist.h b/liboctave/cmd-hist.h
--- a/liboctave/cmd-hist.h
+++ b/liboctave/cmd-hist.h
@@ -27,17 +27,19 @@ Software Foundation, 59 Temple Place - S
 
 #include "str-vec.h"
 
 class
 command_history
 {
 public:
 
-  command_history (const string& = string (), int = -1);
+  command_history (const string& = string (), int = -1, bool = false)
+
+  command_history (const string& = string (), int = -1)
 
   ~command_history (void) { initialized = false; }
 
   void set_file (const string&);
 
   string file (void);
 
   void set_size (int);
@@ -59,19 +61,24 @@ public:
   int current_number (void);
 
   void stifle (int);
 
   int unstifle (void);
 
   int is_stifled (void);
 
-  void read (const string& = string ());
+  void read (bool = true);
+
+  void read (const string& = string (), bool = true)
 
-  void read_range (const string& = string (), int = -1, int = -1);
+  void read_range (int = -1, int = -1, bool = true)
+
+  void read_range (const string& = string (), int = -1, int = -1,
+		   bool = true)
 
   void write (const string& = string ());
 
   void append (const string& = string ());
 
   void truncate_file (const string& = string (), int = -1);
 
   string_vector list (int = -1, int = 0);
diff --git a/src/Stack.h b/src/Stack.h
--- a/src/Stack.h
+++ b/src/Stack.h
@@ -40,18 +40,20 @@ License as published by the Free Softwar
 #pragma interface
 #endif
 
 template <class T>
 class
 Stack
 {
  public:
-  inline Stack (void) { }
-  inline virtual ~Stack (void) { }
+
+  Stack (void) { }
+
+  virtual ~Stack (void) { }
 
   virtual void push (const T& item) = 0;
 
   virtual T pop (void) = 0;
   virtual T& top (void) = 0; 
 
   virtual void del_top (void) = 0;
 
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -528,17 +528,17 @@ main (int argc, char **argv)
   if (! inhibit_startup_message)
     cout << OCTAVE_STARTUP_MESSAGE "\n" << endl;
 
   if (traditional)
     maximum_braindamage ();
 
   execute_startup_files ();
 
-  octave_command_history.read ();
+  octave_command_history.read (false);
 
   if (! inhibit_startup_message && reading_startup_message_printed)
     cout << endl;
 
   // Avoid counting commands executed from startup files.
 
   current_command_number = 1;
 
