# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1534274721 14400
#      Tue Aug 14 15:25:21 2018 -0400
# Node ID cc9da21511c15f159df90d4851d7735a7142cdf1
# Parent  88e87c69c8b8dbca9a75b00b6721c38daadc15d0
use consistent eval order in simple and multi assignment (bug #54490)

* pt-eval.cc (tree_evaluator::visit_simple_assignment): Create lvalue
object before evaluating RHS of assignment expression.

* test/bug-54490.tst: New test.
* test/module.mk: Update.

diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -2520,31 +2520,16 @@ namespace octave
   tree_evaluator::visit_simple_assignment (tree_simple_assignment& expr)
   {
     octave_value val;
 
     tree_expression *rhs = expr.right_hand_side ();
 
     if (rhs)
       {
-        octave_value rhs_val = evaluate (rhs);
-
-        if (rhs_val.is_undefined ())
-          error ("value on right hand side of assignment is undefined");
-
-        if (rhs_val.is_cs_list ())
-          {
-            const octave_value_list lst = rhs_val.list_value ();
-
-            if (lst.empty ())
-              error ("invalid number of elements on RHS of assignment");
-
-            rhs_val = lst(0);
-          }
-
         tree_expression *lhs = expr.left_hand_side ();
 
         try
           {
             unwind_protect frame;
 
             octave_lvalue ult = lhs->lvalue (*this);
 
@@ -2554,16 +2539,31 @@ namespace octave
             m_lvalue_list_stack.push (&lvalue_list);
 
             frame.add_method (m_lvalue_list_stack,
                               &value_stack<const std::list<octave_lvalue>*>::pop);
 
             if (ult.numel () != 1)
               err_invalid_structure_assignment ();
 
+            octave_value rhs_val = evaluate (rhs);
+
+            if (rhs_val.is_undefined ())
+              error ("value on right hand side of assignment is undefined");
+
+            if (rhs_val.is_cs_list ())
+              {
+                const octave_value_list lst = rhs_val.list_value ();
+
+                if (lst.empty ())
+                  error ("invalid number of elements on RHS of assignment");
+
+                rhs_val = lst(0);
+              }
+
             octave_value::assign_op etype = expr.op_type ();
 
             ult.assign (etype, rhs_val);
 
             if (etype == octave_value::op_asn_eq)
               val = rhs_val;
             else
               val = ult.value ();
diff --git a/test/bug-54490.tst b/test/bug-54490.tst
new file mode 100644
--- /dev/null
+++ b/test/bug-54490.tst
@@ -0,0 +1,17 @@
+%!function out = bug54490 ()
+%!  global k;
+%!  k = 1;
+%!  out = 3;
+%!endfunction
+
+%!test
+%! global k;
+%! k = 2;
+%! a = [5, 6];
+%! a(k) = bug54490 ();
+%! assert (a, [5, 3]);
+%! k = 2;
+%! a = [5, 6];
+%! [a(k)] = bug54490 ();
+%! assert (a, [5, 3]);
+%! clear -global k;  # cleanup after test
diff --git a/test/module.mk b/test/module.mk
--- a/test/module.mk
+++ b/test/module.mk
@@ -9,16 +9,17 @@ TEST_FILES += \
   %reldir%/args.tst \
   %reldir%/bug-31371.tst \
   %reldir%/bug-38565.tst \
   %reldir%/bug-38576.tst \
   %reldir%/bug-46330.tst \
   %reldir%/bug-49904.tst \
   %reldir%/bug-53579.tst \
   %reldir%/bug-53599.tst \
+  %reldir%/bug-54990.tst \
   %reldir%/colormaps.tst \
   %reldir%/command.tst \
   %reldir%/complex.tst \
   %reldir%/deprecate-props.tst \
   %reldir%/diag-perm.tst \
   %reldir%/error.tst \
   %reldir%/eval-catch.tst \
   %reldir%/for.tst \
