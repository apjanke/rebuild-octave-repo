# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1322001810 18000
#      Tue Nov 22 17:43:30 2011 -0500
# Node ID 8d19194c4b1fcfac7265b402714fe18d0ee680c7
# Parent  1398901839b62e86c074ec679c297f414ffd965a
cd: behave like unixy shells for "cd" alone, but be Matlab compatible if doing "current_dir = cd"

* dirfns.cc (Fcd): Return current directory instead of changing to
home directory if nargin == 0 and nargout > 0.

diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -82,17 +82,17 @@ octave_change_to_directory (const std::s
       load_path::update ();
     }
   else
     error ("%s: %s", newdir.c_str (), gnulib::strerror (errno));
 
   return cd_ok;
 }
 
-DEFUN (cd, args, ,
+DEFUN (cd, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Command} {} cd dir\n\
 @deftypefnx {Command} {} chdir dir\n\
 Change the current working directory to @var{dir}.  If @var{dir} is\n\
 omitted, the current directory is changed to the user's home\n\
 directory.  For example,\n\
 \n\
 @example\n\
@@ -122,20 +122,28 @@ directory is not changed.\n\
       if (dirname.length () > 0
           && ! octave_change_to_directory (dirname))
         {
           return retval;
         }
     }
   else
     {
-      std::string home_dir = octave_env::get_home_directory ();
+      // Behave like Unixy shells for "cd" by itself, but be Matlab
+      // compatible if doing "current_dir = cd".
 
-      if (home_dir.empty () || ! octave_change_to_directory (home_dir))
-        return retval;
+      if (nargout == 0)
+        {
+          std::string home_dir = octave_env::get_home_directory ();
+
+          if (home_dir.empty () || ! octave_change_to_directory (home_dir))
+            return retval;
+        }
+      else
+        retval = octave_value (octave_env::get_current_directory ());
     }
 
   return retval;
 }
 
 DEFALIAS (chdir, cd);
 
 DEFUN (pwd, , ,
