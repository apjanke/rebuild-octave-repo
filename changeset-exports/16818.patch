# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1371982027 -7200
#      Sun Jun 23 12:07:07 2013 +0200
# Node ID caf3d2a45da0154551b854c9f5ffd8444d648c50
# Parent  893e9cec62f1f4874be1b7a63110c396d7ca9437
clean up some code for undocking and docking widgets

* octave-dock-widget.cc(make_window,makewidget): remove boolean parameter,
  (change_floating): call make_widget and make_window without parameter
* octave-dock-wodget.h(make_window,makewidget): remove boolean parameter
* main-window.cc(set_window_layout): call make_widget and make_window without
  parameter

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -548,17 +548,17 @@ main_window::set_window_layout (QSetting
       QString name = widget->objectName ();
 
       if (! name.isEmpty ())
         {
           // If floating, make window from widget.
           bool floating = settings->value
               ("DockWidgets/" + name + "Floating", false).toBool ();
           if (floating)
-            widget->make_window (false);
+            widget->make_window ();
           else if (! widget->parent ())  // should not be floating but is
             widget->setParent (this);    // reparent
 
           // restore geometry
           QVariant val = settings->value (name);
           widget->restoreGeometry (val.toByteArray ());
 
           // make widget visible if desired
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -121,41 +121,38 @@ octave_dock_widget::set_title (const QSt
       static_cast<QHBoxLayout *> (titleBarWidget ()->layout ());
   QLabel *label = new QLabel (title);
   h_layout->insertWidget (0,label);
   setWindowTitle (title);
 }
 
 // make the widget floating
 void
-octave_dock_widget::make_window (bool visible)
+octave_dock_widget::make_window ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // save the docking area for later redocking
   // FIXME: dockWidgetArea always returns 2
   settings->setValue ("DockWidgets/" + objectName () + "_dock_area",
                       _parent->dockWidgetArea (this));
 
   // remove parent and adjust the (un)dock icon
   setParent (0, Qt::Window);
   _dock_action->setIcon (QIcon (":/actions/icons/widget-dock.png"));
   _dock_action->setToolTip (tr ("Dock widget"));
 
   // restore the last geometry when floating
   restoreGeometry (settings->value
           ("DockWidgets/" + objectName ()+"_floating_geometry").toByteArray ());
-
-  if (visible)
-    show ();  // make visible if desired
 }
 
 // dock the widget
 void
-octave_dock_widget::make_widget (bool visible)
+octave_dock_widget::make_widget ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   // save last floating geometry
   settings->setValue ("DockWidgets/" + objectName () + "_floating_geometry",
                       saveGeometry ());
 
   // add widget to last saved docking area
@@ -165,31 +162,29 @@ octave_dock_widget::make_widget (bool vi
 
   // FIXME: restoreGeometry is ignored for docked widgets and its child widget
   // restoreGeometry (settings->value
   //        ("DockWidgets/" + objectName ()).toByteArray ());
 
   // adjust the (un)dock icon
   _dock_action->setIcon (QIcon (":/actions/icons/widget-undock.png"));
   _dock_action->setToolTip (tr ("Unock widget"));
-
-  setVisible (visible);
 }
 
 // slot for (un)dock action
 void
 octave_dock_widget::change_floating (bool)
 {
   if (parent())
     {
-      make_window (true);
+      make_window ();
       focus ();
     }
   else
-    make_widget (true);
+    make_widget ();
 }
 
 // slot for hiding the widget
 void
 octave_dock_widget::change_visibility (bool)
 {
   setVisible (false);
   emit active_changed (false);
diff --git a/libgui/src/octave-dock-widget.h b/libgui/src/octave-dock-widget.h
--- a/libgui/src/octave-dock-widget.h
+++ b/libgui/src/octave-dock-widget.h
@@ -34,18 +34,18 @@ class octave_dock_widget : public QDockW
   Q_OBJECT
 
 public:
 
   octave_dock_widget (QWidget *p = 0);
   virtual ~octave_dock_widget ();
 
   virtual void connect_visibility_changed (void);
-  void make_window (bool visible);
-  void make_widget (bool visible);
+  void make_window (void);
+  void make_widget (void);
   void set_title (const QString&);
 
 signals:
 
   /** Custom signal that tells whether a user has clicked away
    *  that dock widget, i.e the active dock widget has
    *  changed. */
   void active_changed (bool active);
