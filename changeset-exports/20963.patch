# HG changeset patch
# User Lachlan Andrew <lachlanbis@gmail.com>
# Date 1450827011 -3600
#      Wed Dec 23 00:30:11 2015 +0100
# Branch stable
# Node ID 6ed7bae8017b6b01ccf07058197ad24c19f99fce
# Parent  a7ebc9815d71485a23c7272d085689ca91493c7f
Fix behavior of warning ("error") call (bug #45753).

* error.cc (Fwarning): Only apply to all warnings if "all" given explicitly.
New test case.

* error.cc (set_warning_option): "all" does not reinitialize all warnings

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1285,22 +1285,16 @@ display_warning_options (std::ostream& o
     }
 
   os << std::endl;
 }
 
 static void
 set_warning_option (const std::string& state, const std::string& ident)
 {
-  if (ident == "all")
-    {
-      initialize_warning_options (state);
-      return;
-    }
-
   std::string all_state = default_warning_state ();
 
   if (state != "on" && state != "off" && state != "error")
     error ("invalid warning state: %s", state.c_str ());
 
   Cell tid = warning_options.contents ("identifier");
   Cell tst = warning_options.contents ("state");
 
@@ -1513,17 +1507,19 @@ disable escape sequence expansion use a 
                   symbol_table::assign
                     (".saved_warning_states.", m, scope, context);
 
                   // Now ignore the "local" argument and continue to
                   // handle the current setting.
                   argc--;
                 }
 
-              if (arg2 == "all")
+              // If "all" is explicitly given.
+
+              if (argc >= 3 && arg2 == "all")
                 {
                   octave_map tmp;
 
                   Cell id (1, 1);
                   Cell st (1, 1);
 
                   id(0) = arg2;
                   st(0) = arg1;
@@ -1711,16 +1707,24 @@ disable escape sequence expansion use a 
 
       if (nargout > 0)
         retval = prev_msg;
     }
 
   return retval;
 }
 
+/*
+## Test for (bug #45753)
+
+%!test
+%! warning ("error");
+%! assert (! isempty (help ("warning")));
+*/
+
 octave_value_list
 set_warning_state (const std::string& id, const std::string& state)
 {
   octave_value_list args;
 
   args(1) = id;
   args(0) = state;
 
