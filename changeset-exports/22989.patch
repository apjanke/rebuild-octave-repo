# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1483367637 18000
#      Mon Jan 02 09:33:57 2017 -0500
# Node ID 698c1190d79027fb1edc911ef7d3f224d20c3a41
# Parent  cd33c785e80eff1791548685fd4cd5e6d1ca8900
* pr-output.cc (Fdisplay): Use octave_value::print_name_tag.

diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -3637,26 +3637,29 @@ myobj = myclass (@dots{})
       string_vector names = args.name_tags ();
       name = names(0);
     }
 
   // Only reason we got here is that there was no overloaded display
   // function.  Rely on built-in functions to display whatever obj is.
 
   octave_value value = args(0);
-  bool is_scalar = value.is_scalar_type ();
-
+
+  // If print_name_tag displays a newline, then also print one after
+  // disp is done.
+
+  bool print_newlines = false;
   if (valid_identifier (name))
-    octave_stdout << name << (is_scalar ? " = " : " =\n\n");
+    print_newlines = value.print_name_tag (octave_stdout, name);
 
   // Use feval so that dispatch will also work for disp.
 
   feval ("disp", ovl (value));
 
-  if (! is_scalar)
+  if (print_newlines)
     octave_stdout << std::endl;
 
   return ovl ();
 }
 
 /*
 %!test
 %! str = evalc ("x = 1.1; display (x)");
