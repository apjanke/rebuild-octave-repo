# HG changeset patch
# User jwe
# Date 1055627017 0
#      Sat Jun 14 21:43:37 2003 +0000
# Node ID 8040775cf0a90f84c73f3a7431629800130d0d68
# Parent  51a0dcde877846dcaa670f0447810e829149166c
[project @ 2003-06-14 21:43:37 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2003-06-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* load-save.cc (get_save_type): Avoid all save types other than
+	LS_DOUBLE to avoid apparent Matlab bugs.
+
 2003-06-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y (frob_function, parse_fcn_file): Handle help_buf as
 	stack of strings.
 	* lex.l ({CCHAR}): Handle help_buf as stack of strings.
 	Store text returned from grab_help_text in help_buf here.
 	(reset_parser): Handle help_buf as stack of strings.
 	(prep_for_nested_function): Push empty string onto help_buf stack.
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -3502,32 +3502,33 @@ glob_pattern_p (const std::string& patte
 
 static save_type
 get_save_type (double max_val, double min_val)
 {
   save_type st = LS_DOUBLE;
 
   // Matlab doesn't seem to load the UINT32 type correctly, so let's
   // avoid it (and the other unsigned types, even though they may not
-  // have the same problem.
+  // have the same problem.  And apparently, there are problems with
+  // other smaller types as well.  If we avoid them all, then maybe we
+  // will avoid problems.  Unfortunately, we won't be able to save
+  // space...
 
   //  if (max_val < 256 && min_val > -1)
   //    st = LS_U_CHAR;
   //  else if (max_val < 65536 && min_val > -1)
   //    st = LS_U_SHORT;
   //  else if (max_val < 4294967295UL && min_val > -1)
   //    st = LS_U_INT;
-  //  else
-
-  if (max_val < 128 && min_val >= -128)
-    st = LS_CHAR;
-  else if (max_val < 32768 && min_val >= -32768)
-    st = LS_SHORT;
-  else if (max_val <= 2147483647L && min_val >= -2147483647L)
-    st = LS_INT;
+  //  else if (max_val < 128 && min_val >= -128)
+  //    st = LS_CHAR;
+  //  else if (max_val < 32768 && min_val >= -32768)
+  //    st = LS_SHORT;
+  //  else if (max_val <= 2147483647L && min_val >= -2147483647L)
+  //    st = LS_INT;
 
   return st;
 }
 
 // Save the data from TC along with the corresponding NAME, help
 // string DOC, and global flag MARK_AS_GLOBAL on stream OS in the
 // binary format described above for read_binary_data.
 
