# HG changeset patch
# User jwe
# Date 760606532 0
#      Mon Feb 07 07:35:32 1994 +0000
# Node ID 57cdcf21c1df2acdd2a8ba50cc39e09ba7ce85e2
# Parent  94f0f219a94681da728f68ff07f6105dff945463
[project @ 1994-02-07 07:35:28 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -1494,17 +1494,17 @@ check_for_garbage_after_fcn_def (void)
 	  in_comment = 1;
 	  break;
 	default:
 	  if (in_comment)
 	    break;
 	  else
 	    {
 	      warning ("ignoring trailing garbage after end of function\n\
-         near line %d of file `%s.m'", lineno, curr_fcn_file_name);
+         near line %d of file `%s'", lineno, curr_fcn_file_name);
 	      
 	      yyunput ('\n', yytext);
 	      return;
 	    }
 	}
     }
   yyunput ('\n', yytext);
 }
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -918,17 +918,17 @@ func_def2	: identifier safe local_symtab
 			$4->mark_as_system_fcn_file ();
 		      }
 		    else if (! (input_from_tmp_history_file
 				|| input_from_startup_file)
 			     && reading_script_file
 			     && strcmp (curr_fcn_file_name, id_name) == 0)
 		      {
 			warning ("function `%s' defined within\
- script file `%s.m'", id_name, curr_fcn_file_name);
+ script file `%s'", id_name, curr_fcn_file_name);
 		      }
 
 		    top_level_sym_tab->clear (id_name);
 
 		    $4->stash_function_name (id_name);
 
 		    $1->define ($4);
 		    $1->document (help_buf);
@@ -1113,17 +1113,17 @@ yyerror (char *s)
   if (err_col == 0 && line != (char *) NULL)
     err_col = strlen (line) + 1;
 
 // Print a message like `parse error'.
   fprintf (stderr, "\n%s", s);
 
 // Maybe print the line number and file name.
   if (reading_fcn_file || reading_script_file)
-    fprintf (stderr, " near line %d of file %s.m", input_line_number,
+    fprintf (stderr, " near line %d of file %s", input_line_number,
 	     curr_fcn_file_name);
 
   if (line != (char *) NULL)
     {
       int len = strlen (line);
       if (line[len-1] == '\n')
         {
           len--;
