# HG changeset patch
# User Rik <rik@octave.org>
# Date 1552931025 25200
#      Mon Mar 18 10:43:45 2019 -0700
# Node ID 72fab319b47d19c4e5cf86531dd977b4f7187802
# Parent  d17eecaf4a149ae891992a77eba3d4a097bbd4cc
Capitalize "Octave" in warning IDs.

* print.m, __print_parse_opts__.m: Change "octave:print:" warning IDs to
"Octave:print" IDs.

diff --git a/scripts/plot/util/print.m b/scripts/plot/util/print.m
--- a/scripts/plot/util/print.m
+++ b/scripts/plot/util/print.m
@@ -716,18 +716,18 @@ function rgbout = print (varargin)
 
     ## Avoid a redraw since the figure should not have changed
     set (gcf, "__modified__", "off");
 
     ## Unlink temporary files
     for n = 1:numel (opts.unlink)
       [status, output] = unlink (opts.unlink{n});
       if (status != 0)
-        warning ("octave:print:unlinkerror", ...
-                 "print.m: %s, '%s'", output, opts.unlink{n});
+        warning ("Octave:print:unlinkerror", ...
+                 "print: %s, '%s'", output, opts.unlink{n});
       endif
     endfor
   end_unwind_protect
 
   if (isfigure (orig_figure))
     set (0, "currentfigure", orig_figure);
   endif
 endfunction
@@ -784,18 +784,18 @@ function cmd = epstool (opts, filein, fi
       cleanup = [cleanup, sprintf("; rm %s ", fileout)];
     endif
   else
     pipeout = false;
     fileout = ["'" strtrim(fileout) "'"];
   endif
 
   if (! isempty (opts.preview) && opts.tight)
-    warning ("octave:print:previewandtight",
-             "print.m: eps preview may not be combined with -tight");
+    warning ("Octave:print:previewandtight",
+             "print: eps preview may not be combined with -tight");
   endif
   if (! isempty (opts.preview) || opts.tight)
 
     if (isempty (opts.epstool_binary))
       error ("print:noepstool", "print.m: 'epstool' is required for specified output format, but binary is not available in PATH");
     endif
 
     if (opts.tight)
@@ -1045,19 +1045,19 @@ function cmd = svgconvert (opts, devopt)
 
   cmd = "";
 
   if (nargin < 2)
     devopt = opts.devopt;
   endif
 
   if (isempty (opts.svgconvert_binary))
-    warning ("octave:print:nosvgconvert", ...
-             ["print.m: unale to find octave-svgconvert, ", ...
-              "falling back to eps convertion"]);
+    warning ("Octave:print:nosvgconvert", ...
+             ["print: unable to find octave-svgconvert, ", ...
+              "falling back to eps conversion"]);
   else
     fontdir = getenv ("OCTAVE_FONTS_DIR");
 
     if (isempty (fontdir))
       fontdir = __octave_config_info__ ("octfontsdir");
     endif
 
     cmd = sprintf ("%s - %%s %3.2f %s %d %%s", opts.svgconvert_binary, ...
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -361,17 +361,17 @@ function arg_st = __print_parse_opts__ (
       warning ("print.m: appended output is not supported for device '%s'",
                arg_st.devopt);
       arg_st.append_to_file = false;
     endif
   endif
 
   if (arg_st.rgb_output)
     if (! isempty (arg_st.printer) || ! isempty (arg_st.name))
-      warning ("octave:print:ignored_argument",
+      warning ("Octave:print:ignored_argument",
                "print: ignoring file name and printer argument when using -RGBImage option");
     endif
   elseif (! isempty (arg_st.printer) || isempty (arg_st.name))
     arg_st.send_to_printer = true;
   endif
 
   if (any (strcmp (arg_st.devopt, {"ps", "ps2", "psc", "psc2", "pdf"})))
     arg_st.formatted_for_printing = true;
@@ -490,17 +490,17 @@ function arg_st = __print_parse_opts__ (
   else
     arg_st.ghostscript.papersize = "";
     arg_st.ghostscript.pageoffset = [0, 0];
   endif
 
   if (warn_on_missing_ghostscript)
     if (isempty (arg_st.ghostscript.binary))
       warning ("octave:print:missing_gs", ...
-               ["print.m: Ghostscript binary is not available.  ", ...
+               ["print: Ghostscript binary is not available.  ", ...
                 "Only eps output is possible"]);
     endif
     warn_on_missing_ghostscript = false;
   endif
 
 endfunction
 
 
@@ -585,18 +585,18 @@ function gs = __ghostscript_binary__ ()
   persistent warn_on_bad_gsc = true;
 
   if (isempty (ghostscript_binary))
     GSC = getenv ("GSC");
     if (exist (GSC, "file")
         || (! isempty (GSC) && file_in_path (getenv ("PATH"), GSC)))
       gs_binaries = {GSC};
     elseif (! isempty (GSC) && warn_on_bad_gsc)
-      warning ("octave:print:badgscenv",
-               "print.m: GSC environment variable not set properly");
+      warning ("Octave:print:badgscenv",
+               "print: GSC environment variable not set properly");
       warn_on_bad_gsc = false;
       gs_binaries = {};
     else
       gs_binaries = {};
     endif
 
     if (isunix ())
       ## Unix - Includes Mac OSX and Cygwin.
