# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1546205193 28800
#      Sun Dec 30 13:26:33 2018 -0800
# Branch stable
# Node ID 4877f77d5e1d69f20752be7bf671e66a65bcf1b5
# Parent  c5a909b164de9fb7f12c1093368c2a3d15990eb6
add necessary includes and forward decls in public header files (bug #55277)

* load-save.h: Include ovl.h for full octave_value_list definition, delete
forward decls that are now declared by inclusion.
* oct-hist.h: Include ovl.h for full octave_value_list definition, add forward
decl of octave::interpreter.
* pager.h: Add forward decl of octave_value_list.
* settings.h: Add forward decl of octave_value, include cstddef for size_t.
* pt-tm-const.h: Include pt-mat.h for full octave::tree_matrix definition.

diff --git a/libinterp/corefcn/load-save.h b/libinterp/corefcn/load-save.h
--- a/libinterp/corefcn/load-save.h
+++ b/libinterp/corefcn/load-save.h
@@ -25,18 +25,17 @@ along with Octave; see the file COPYING.
 
 #include "octave-config.h"
 
 #include <iosfwd>
 #include <string>
 
 #include "mach-info.h"
 
-class string_vector;
-class octave_value;
+#include "ovl.h"
 
 namespace octave
 {
   class interpreter;
   class load_save_format;
   class symbol_info;
 
   class load_save_system
diff --git a/libinterp/corefcn/oct-hist.h b/libinterp/corefcn/oct-hist.h
--- a/libinterp/corefcn/oct-hist.h
+++ b/libinterp/corefcn/oct-hist.h
@@ -24,18 +24,22 @@ along with Octave; see the file COPYING.
 #define octave_oct_hist_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
 #include "cmd-hist.h"
 
+#include "ovl.h"
+
 namespace octave
 {
+  class interpreter;
+
   class history_system
   {
   public:
 
     history_system (interpreter& interp);
 
     history_system (const history_system&) = delete;
 
diff --git a/libinterp/corefcn/pager.h b/libinterp/corefcn/pager.h
--- a/libinterp/corefcn/pager.h
+++ b/libinterp/corefcn/pager.h
@@ -26,16 +26,17 @@ along with Octave; see the file COPYING.
 #include "octave-config.h"
 
 #include <fstream>
 #include <iosfwd>
 #include <sstream>
 #include <string>
 
 class octave_value;
+class octave_value_list;
 class oprocstream;
 
 namespace octave
 {
   class interpreter;
 
   class
   OCTINTERP_API
diff --git a/libinterp/corefcn/settings.h b/libinterp/corefcn/settings.h
--- a/libinterp/corefcn/settings.h
+++ b/libinterp/corefcn/settings.h
@@ -20,16 +20,19 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_settings_h)
 #define octave_settings_h 1
 
 #include "octave-config.h"
 
+#include <cstddef>
+
+class octave_value;
 class octave_value_list;
 
 namespace octave
 {
   // Most settings for the interpreter are stored in the classes which
   // they affect (intput_system, output_system, load_path, etc.  Some
   // don't really fit anywhere else.  For example, there is no single
   // lexer or parser object, so we store settings for those things
diff --git a/libinterp/parse-tree/pt-tm-const.h b/libinterp/parse-tree/pt-tm-const.h
--- a/libinterp/parse-tree/pt-tm-const.h
+++ b/libinterp/parse-tree/pt-tm-const.h
@@ -33,21 +33,21 @@ along with Octave; see the file COPYING.
 #include "Sparse.h"
 
 #include "data.h"
 #include "dim-vector.h"
 #include "oct-map.h"
 #include "ov.h"
 #include "ovl.h"
 #include "pt-arg-list.h"
+#include "pt-mat.h"
 
 namespace octave
 {
   class tree_evaluator;
-  class tree_matrix;
 
   // Evaluate tree_matrix objects and convert them to octave_value
   // arrays (full and sparse numeric, char, cell, struct, class and
   // anything else that works like an array).  Use a separate class
   // (tm_const) and pass the evaluator object to it instead of doing
   // all this work in tree_evaluator::visit_matrix because the job is
   // fairly large and requires extra data (stored in the tm_info
   // class) for each row and for the overall array.
