# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546359221 28800
#      Tue Jan 01 08:13:41 2019 -0800
# Node ID 661fe14264c6a6e5d7f2e5dceb335b84471a2cbb
# Parent  4bad0d5b97b30ed4062d7ea406a5392d583f30c4
# Parent  b880c64264244e5317b32b5efa90cca0bfdbd1a6
maint: merge stable to default.

diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -89,16 +89,17 @@ gnulib_modules="
   sys_time
   sys_times
   sys_wait
   tempname
   tmpfile
   uname
   unicase/u8-tolower
   unicase/u8-toupper
+  uniconv/u32-conv-to-enc
   uniconv/u8-conv-from-enc
   uniconv/u8-conv-to-enc
   unictype/ctype-alnum
   unictype/ctype-alpha
   unictype/ctype-blank
   unictype/ctype-cntrl
   unictype/ctype-digit
   unictype/ctype-graph
diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -47,40 +47,42 @@ namespace QtHandles
         p.setColor (QPalette::Base,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::Text,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else if (props.style_is ("popupmenu"))
       {
         // popumenu (QComboBox) is a listbox with a button, so needs set colors for both
-        p.setColor (QPalette::Base,
-                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
-        p.setColor (QPalette::Text,
-                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
-        p.setColor (QPalette::Button,
-                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
-        p.setColor (QPalette::ButtonText,
-                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+        QColor bcol = Utils::fromRgb (props.get_backgroundcolor_rgb ());
+        QColor fcol = Utils::fromRgb (props.get_foregroundcolor_rgb ());
+        QString qss = QString ("background: %1 none;\n"
+                               "color: %2;")
+                      .arg(bcol.name ()).arg (fcol.name ());
+        w->setStyleSheet(qss);
+        return;
       }
     else if (props.style_is ("radiobutton")
              || props.style_is ("checkbox"))
       {
         p.setColor (QPalette::Button,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::WindowText,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
     else if (props.style_is ("pushbutton")
              || props.style_is ("togglebutton"))
       {
-        p.setColor (QPalette::Button,
-                    Utils::fromRgb (props.get_backgroundcolor_rgb ()));
-        p.setColor (QPalette::ButtonText,
-                    Utils::fromRgb (props.get_foregroundcolor_rgb ()));
+        QColor bcol = Utils::fromRgb (props.get_backgroundcolor_rgb ());
+        QColor fcol = Utils::fromRgb (props.get_foregroundcolor_rgb ());
+        QString qss = QString ("background: %1 none;\n"
+                               "color: %2;")
+                      .arg(bcol.name ()).arg (fcol.name ());
+        w->setStyleSheet(qss);
+        return;
       }
     else
       {
         p.setColor (QPalette::Window,
                     Utils::fromRgb (props.get_backgroundcolor_rgb ()));
         p.setColor (QPalette::WindowText,
                     Utils::fromRgb (props.get_foregroundcolor_rgb ()));
       }
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -62,35 +62,16 @@ along with Octave; see the file COPYING.
 
 #include "builtin-defun-decls.h"
 
 namespace QtHandles
 {
 
   DECLARE_GENERICEVENTNOTIFY_SENDER(MenuBar, QMenuBar);
 
-  static bool
-  hasUiControlChildren (const figure::properties& fp)
-  {
-    gh_manager::auto_lock lock;
-
-    Matrix kids = fp.get_all_children ();
-
-    for (int i = 0; i < kids.numel (); i++)
-      {
-        graphics_object go (gh_manager::get_object (kids(i)));
-
-        if (go && (go.isa ("uicontrol") || go.isa ("uipanel")
-                   || go.isa ("uibuttongroup")))
-          return true;
-      }
-
-    return false;
-  }
-
   static QRect
   boundingBoxToRect (const Matrix& bb)
   {
     QRect r;
 
     if (bb.numel () == 4)
       {
         r = QRect (octave::math::round (bb(0)), octave::math::round (bb(1)),
@@ -127,18 +108,17 @@ namespace QtHandles
     m_statusBar = win->statusBar ();
     int boffset = 0;
 
     // Toolbar and menubar
     createFigureToolBarAndMenuBar ();
     int toffset = 0;
 
     if (fp.toolbar_is ("figure")
-        || (fp.toolbar_is ("auto") && fp.menubar_is ("figure")
-            && ! hasUiControlChildren (fp)))
+        || (fp.toolbar_is ("auto") && fp.menubar_is ("figure")))
       {
         toffset += m_figureToolBar->sizeHint ().height ();
         boffset += m_statusBar->sizeHint ().height ();
       }
     else
       {
         m_figureToolBar->hide ();
         m_statusBar->hide ();
@@ -491,19 +471,18 @@ namespace QtHandles
           }
         break;
 
       case figure::properties::ID_TOOLBAR:
         if (fp.toolbar_is ("none"))
           showFigureToolBar (false);
         else if (fp.toolbar_is ("figure"))
           showFigureToolBar (true);
-        else // "auto"
-          showFigureToolBar (! hasUiControlChildren (fp)
-                             && fp.menubar_is ("figure"));
+        else  // "auto"
+          showFigureToolBar (fp.menubar_is ("figure"));
         break;
 
       case figure::properties::ID_MENUBAR:
         if (fp.toolbar_is ("auto"))
           showFigureToolBar (fp.menubar_is ("figure"));
         break;
 
       case figure::properties::ID_KEYPRESSFCN:
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -64,16 +64,17 @@ along with Octave; see the file COPYING.
 #include "resource-manager.h"
 
 #include "file-editor-tab.h"
 #include "file-editor.h"
 #include "octave-txt-lexer.h"
 #include "marker.h"
 
 #include "file-ops.h"
+#include "uniconv-wrappers.h"
 
 #include "bp-table.h"
 #include "call-stack.h"
 #include "interpreter-private.h"
 #include "interpreter.h"
 #include "oct-map.h"
 #include "octave-qt-link.h"
 #include "ov-usr-fcn.h"
@@ -2316,17 +2317,42 @@ namespace octave
                                tr ("Octave Editor"),
                                tr ("The current encoding %1\n"
                                    "can not be applied.\n\n"
                                    "Please select another one!").arg (_encoding));
 
         return nullptr;
       }
 
-    if (! codec->canEncode (_edit_area->text ()))
+    QString editor_text = _edit_area->text ();
+    bool can_encode = codec->canEncode (editor_text);
+
+    // We cannot rely on QTextCodec::canEncode because it uses the
+    // ConverterState of convertFromUnicode which isn't updated by some
+    // implementations.
+    if (can_encode)
+      {
+        std::u32string u32_str = editor_text.toStdU32String ();
+        const uint32_t *src = reinterpret_cast<const uint32_t *>
+                              (u32_str.c_str ());
+
+        size_t length;
+        char *res_str =
+          octave_u32_conv_to_encoding_strict (_encoding.toStdString ().c_str (),
+                                              src, u32_str.length (), &length);
+        if (! res_str)
+          {
+            if (errno == EILSEQ)
+              can_encode = false;
+          }
+        else
+          ::free (static_cast<void *> (res_str));
+      }
+
+    if (! can_encode)
       {
         QMessageBox::critical (nullptr,
                                tr ("Octave Editor"),
                                tr ("The current editor contents can not be encoded\n"
                                    "with the selected encoding %1.\n"
                                    "Using it would result in data loss!\n\n"
                                    "Please select another one!").arg (_encoding));
 
diff --git a/libgui/src/welcome-wizard.cc b/libgui/src/welcome-wizard.cc
--- a/libgui/src/welcome-wizard.cc
+++ b/libgui/src/welcome-wizard.cc
@@ -304,21 +304,21 @@ namespace octave
     message_and_logo->addStretch (10);
     message_and_logo->addWidget (m_logo, 0, Qt::AlignTop);
 
     m_links->setText
       (tr ("<html><head>\n"
            "<style>\n"
            "a:link { text-decoration: underline; color: #0000ff; }\n"
            "</style>\n"
-           "<head/><body>\n"
+           "</head><body>\n"
            "<p>For more information about Octave:</p>\n"
            "<ul>\n"
            "<li>Visit <a href=\"https://octave.org\">https://octave.org</a> (opens in external browser)</li>\n"
-           "<li>Get the documentation online as <a href=\"https://www.gnu.org/software/octave/doc/interpreter/index.html\">html</a>- or <a href=\"https://www.gnu.org/software/octave/octave.pdf\">pdf</span></a>-document (opens in external browser)</li>\n"
+           "<li>Get the documentation online as <a href=\"https://www.gnu.org/software/octave/doc/interpreter/index.html\">html</a>- or <a href=\"https://www.gnu.org/software/octave/octave.pdf\">pdf</a>-document (opens in external browser)</li>\n"
            "<li>Open the documentation browser of the Octave GUI with the help menu</li>\n"
            "</ul>\n"
            "</body></html>"));
     m_links->setWordWrap (true);
     m_links->setOpenExternalLinks (true);
 
     QHBoxLayout *button_bar = new QHBoxLayout;
 
diff --git a/libinterp/corefcn/ft-text-renderer.cc b/libinterp/corefcn/ft-text-renderer.cc
--- a/libinterp/corefcn/ft-text-renderer.cc
+++ b/libinterp/corefcn/ft-text-renderer.cc
@@ -654,17 +654,19 @@ namespace octave
     // current line bbox with the new font metrics.  This also includes the
     // current yoffset, that is the offset of the current glyph's baseline
     // the line's baseline.
 
     if (mode == MODE_BBOX)
       {
         Matrix& bb = line_bbox.back ();
         bb(1) = m_ymin;
-        bb(3) = m_ymax - m_ymin;
+        // Add one pixel to the bbox height to avoid occasional text clipping.
+        // See bug #55328.
+        bb(3) = (m_ymax + 1) - m_ymin;
         if (m_deltax > 0)
           bb(2) += m_deltax;
       }
   }
 
   void
   ft_text_renderer::set_mode (int m)
   {
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -395,17 +395,20 @@ Undocumented internal function.
     key = args(0).string_value();
   else
     error ("__octave_link_gui_preference__: "
            "first argument must be the preference key");
 
   if (args.length () >= 2)
     value = args(1).string_value();
 
-  return ovl (octave_link::gui_preference (key, value));
+  if (octave::application::is_gui_running ())
+    return ovl (octave_link::gui_preference (key, value));
+  else
+    return ovl (value);
 }
 
 DEFUN (__octave_link_file_remove__, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {} __octave_link_file_remove__ ()
 Undocumented internal function.
 @end deftypefn */)
 {
diff --git a/libinterp/parse-tree/jit-typeinfo.cc b/libinterp/parse-tree/jit-typeinfo.cc
--- a/libinterp/parse-tree/jit-typeinfo.cc
+++ b/libinterp/parse-tree/jit-typeinfo.cc
@@ -2207,17 +2207,17 @@ namespace octave
 
   octave_builtin *
   jit_typeinfo::find_builtin (const std::string& name)
   {
     symbol_table& symtab = __get_symbol_table__ ("jit_typeinfo::find_builtin");
 
     // FIXME: Finalize what we want to store in octave_builtin, then add
     // functions to access these values in octave_value
-    octave_value ov_builtin = symtab.find (name);
+    octave_value ov_builtin = symtab.builtin_find (name);
     return dynamic_cast<octave_builtin *> (ov_builtin.internal_rep ());
   }
 
   void
   jit_typeinfo::register_generic (const std::string& name, jit_type *result,
                                   const std::vector<jit_type *>& args)
   {
     octave_builtin *builtin = find_builtin (name);
diff --git a/liboctave/wrappers/uniconv-wrappers.c b/liboctave/wrappers/uniconv-wrappers.c
--- a/liboctave/wrappers/uniconv-wrappers.c
+++ b/liboctave/wrappers/uniconv-wrappers.c
@@ -49,16 +49,24 @@ char *
 octave_u8_conv_to_encoding (const char *tocode, const uint8_t *src,
                             size_t srclen, size_t *lengthp)
 {
   return u8_conv_to_encoding (tocode, iconveh_question_mark,
                               src, srclen, NULL, NULL, lengthp);
 }
 
 char *
+octave_u32_conv_to_encoding_strict (const char *tocode, const uint32_t *src,
+                            size_t srclen, size_t *lengthp)
+{
+  return u32_conv_to_encoding (tocode, iconveh_error,
+                              src, srclen, NULL, NULL, lengthp);
+}
+
+char *
 u8_from_wchar (const wchar_t *wc)
 {
   // Convert wide char array to multibyte UTF-8 char array
   // The memory at the returned pointer must be freed after use.
 
   size_t srclen = wcslen (wc) * sizeof (wchar_t);
   const char *src = (const char *) wc;
 
diff --git a/liboctave/wrappers/uniconv-wrappers.h b/liboctave/wrappers/uniconv-wrappers.h
--- a/liboctave/wrappers/uniconv-wrappers.h
+++ b/liboctave/wrappers/uniconv-wrappers.h
@@ -42,16 +42,20 @@ extern uint8_t *
 octave_u8_conv_from_encoding (const char *fromcode, const char *src,
                               size_t srclen, size_t *lengthp);
 
 extern char *
 octave_u8_conv_to_encoding (const char *tocode, const uint8_t *src,
                             size_t srclen, size_t *lengthp);
 
 extern char *
+octave_u32_conv_to_encoding_strict (const char *tocode, const uint32_t *src,
+                                    size_t srclen, size_t *lengthp);
+
+extern char *
 u8_from_wchar (const wchar_t *wc);
 
 extern wchar_t *
 u8_to_wchar (const char *u8_char);
 
 #if defined __cplusplus
 }
 #endif
