# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1269732628 14400
#      Sat Mar 27 19:30:28 2010 -0400
# Node ID 944aa97069edd8118d15ef7051b42fabb5e614aa
# Parent  bcabc1c4f20c0244793a31f60261b2a3f5a2a575
print.m: Provide default suffixes & validate hardcopy format.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-27  Ben Abbott <bpabbott@mac.com>
+
+	* plot/print.m: Provide default suffixes & validate hardcopy format.
+
 2010-03-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* optimization/fzero.m: Handle the breakdown if initial bracketing
 	contains an exact root. Improve docstring.
 
 2010-03-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* miscellaneous/module.mk: Add unimplemented.m here.
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -19,17 +19,19 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} print ()
 ## @deftypefnx {Function File} {} print (@var{options})
 ## @deftypefnx {Function File} {} print (@var{filename}, @var{options})
 ## @deftypefnx {Function File} {} print (@var{h}, @var{filename}, @var{options})
 ## Print a graph, or save it to a file
 ##
-## @var{filename} defines the file name of the output file.  If no
+## @var{filename} defines the file name of the output file.  If the
+## file name has no suffix, one is inferred from the specified
+## device and appended to the file name.  If no
 ## filename is specified, the output is sent to the printer.
 ##
 ## @var{h} specifies the figure handle.  If no handle is specified
 ## the handle for the current figure is used.
 ##
 ## @var{options}:
 ## @table @code
 ## @item -P@var{printer}
@@ -293,76 +295,94 @@ function print (varargin)
           printname = cstrcat (tmpnam, ".psc");
         endif
       else
         printname = cstrcat (tmpnam, ".", devopt);
       endif
       name = printname;
     endif
 
+    dot = rindex (name, ".");
     if (isempty (devopt))
-      dot = rindex (name, ".");
       if (dot == 0)
         error ("print: no format specified");
       else
         dev = tolower (name(dot+1:end));
       endif
     else
       dev = devopt;
     endif
 
+    dev_list = {"aifm", "corel", "fig", "png", "jpeg", ...
+                "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
+                "ps", "ps2", "psc", "psc2", "eps", "eps2", ...
+                "epsc", "epsc2", "emf", "pdf", "pslatex", ...
+                "epslatex", "epslatexstandalone", "pstex", "tikz"};
+    suffixes = {"ai", "cdr", "fig", "png", "jpeg", ...
+                "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
+                "ps", "ps", "ps", "ps", "eps", "eps", ...
+                "eps", "eps", "emf", "pdf", "tex", ...
+                "tex", "tex", "tex", "tikz"};
+    if (dot == 0)
+      name = strcat (name, ".", suffixes {strcmpi (dev_list, dev)});
+      dot = rindex (name, ".");
+    endif
+
     if (append_to_file)
       if (any (strcmpi (dev, {"ps", "ps2", "psc", "psc2", "pdf"})))
         if (have_ghostscript)
           file_exists = ((numel (dir (name)) == 1) && (! isdir (name)));
           if (! file_exists)
             append_to_file = 0;
           end
         end
       else
         warning ("print.m: appended output is not supported for device '%s'", dev)
         append_to_file = 0;
       endif
     endif
 
     if (strcmp (dev, "tex"))
       dev = "epslatex";
-      ## gnuplot 4.0 wants ".eps" in the output name    
-      if (! __gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
-        name = cstrcat (name(1:dot), "eps");
-      endif
     elseif (strcmp (dev, "ill"))
       dev = "aifm";
     elseif (strcmp (dev, "cdr"))
       dev = "corel";
     elseif (strcmp (dev, "meta"))
       dev = "emf";
     elseif (strcmp (dev, "jpg"))
       dev = "jpeg";
     endif
 
+    if (strcmp (dev, "epslatex"))
+      ## gnuplot 4.0 wants ".eps" in the output name    
+      if (! __gnuplot_has_feature__ ("epslatex_implies_eps_filesuffix"))
+        name = cstrcat (name(1:dot), "eps");
+      endif
+    endif
+
     ## Check if the specified device is one that is supported by gnuplot.
     ## If not, assume it is a device/format supported by Ghostscript.
-    dev_list = {"aifm", "corel", "fig", "png", "jpeg", ...
-                "gif", "pbm", "dxf", "mf", "svg", "hpgl", ...
-                "ps", "ps2", "psc", "psc2", "eps", "eps2", ...
-                "epsc", "epsc2", "emf", "pdf", "pslatex", ...
-                "epslatex", "epslatexstandalone", "pstex", "tikz"};
     if (! any (strcmp (dev, dev_list)) && have_ghostscript)
       ghostscript_output = name;
       ghostscript_device = dev;
       if (doprint)
         ## If printing, use color postscript.
         dev = "psc";
         name = cstrcat (tmpnam, ".ps");
       else
         ## If saving to a file, use color encapsulated postscript.
         dev = "epsc";
         name = cstrcat (tmpnam, ".eps");
       endif
+    elseif (doprint && all (! strcmpi (suffixes {strcmpi (dev_list, dev)}, 
+                                       {"ps", "eps", "hpgl"})))
+      ## When not using Ghostscript, verify the format is compatible with
+      ## hard copy output.
+      error ("print: missing file name, or invalid print format.");
     else
       ghostscript_output = "";
     endif
 
     termn = dev;
 
     ## SVG isn't actually a bitmap, but gnuplot treats its size option as it
     ## does the bitmap terminals.
