# HG changeset patch
# User jwe
# Date 1056459612 0
#      Tue Jun 24 13:00:12 2003 +0000
# Node ID 689f730954b3f4a0013a205da94bb0732e44542e
# Parent  dd7af4fa19421cbb2451dc804f9e305f004c79ed
[project @ 2003-06-24 13:00:12 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,14 @@
+2003-06-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* ov-base.cc (octave_base_value::subsasgn): Also allow type
+	conversion for empty numeric objects with more than one index.
+	* ov-base-mat.cc (octave_base_matrix<T>::subsasgn): Likewise.
+
 2003-06-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* variables.cc (do_who): New arg, return_list.  If return_list is
 	true, return values in cell or struct arrays instead of printing.
 	(Fwho, Fwhos): If nargout is 1, ask do_who to return lists of values.
 	* oct-map.h (Octave_map (const std::string&, const octave_value_list&):
 	New constructor.
 
diff --git a/src/ov-base-mat.cc b/src/ov-base-mat.cc
--- a/src/ov-base-mat.cc
+++ b/src/ov-base-mat.cc
@@ -74,16 +74,27 @@ octave_base_matrix<MT>::subsasgn (const 
   octave_value retval;
 
   switch (type[0])
     {
     case '(':
       {
 	if (type.length () == 1)
 	  retval = numeric_assign (type, idx, rhs);
+	else if (is_empty ())
+	  {
+	    // Allow conversion of empty matrix to some other type in
+	    // cases like
+	    //
+	    //  x = []; x(i).f = rhs
+
+	    octave_value tmp = octave_value::empty_conv (type, rhs);
+
+	    retval = tmp.subsasgn (type, idx, rhs);
+	  }
 	else
 	  {
 	    std::string nm = type_name ();
 	    error ("in indexed assignment of %s, last rhs index must be ()",
 		   nm.c_str ());
 	  }
       }
       break;
diff --git a/src/ov-base.cc b/src/ov-base.cc
--- a/src/ov-base.cc
+++ b/src/ov-base.cc
@@ -109,16 +109,27 @@ octave_base_value::subsasgn (const std::
       if (is_numeric_type ())
 	{
 	  switch (type[0])
 	    {
 	    case '(':
 	      {
 		if (type.length () == 1)
 		  retval = numeric_assign (type, idx, rhs);
+		else if (is_empty ())
+		  {
+		    // Allow conversion of empty matrix to some other
+		    // type in cases like
+		    //
+		    //  x = []; x(i).f = rhs
+
+		    octave_value tmp = octave_value::empty_conv (type, rhs);
+
+		    retval = tmp.subsasgn (type, idx, rhs);
+		  }
 		else
 		  {
 		    std::string nm = type_name ();
 		    error ("in indexed assignment of %s, last rhs index must be ()",
 			   nm.c_str ());
 		  }
 	      }
 	      break;
