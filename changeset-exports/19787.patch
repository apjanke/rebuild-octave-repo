# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1424424999 18000
#      Fri Feb 20 04:36:39 2015 -0500
# Node ID 4ae2987c5f6624b8d807e70984b0decad091afd8
# Parent  d6652461dfbc79edebacb9356d1f0bd550041dee
avoid variable possibly clobbered by longjmp warning from GCC

* __pchip_deriv__.cc (F__pchip_deriv__): Avoid GCC warning about
variables possibly clobbered by longjmp.

diff --git a/libinterp/corefcn/__pchip_deriv__.cc b/libinterp/corefcn/__pchip_deriv__.cc
--- a/libinterp/corefcn/__pchip_deriv__.cc
+++ b/libinterp/corefcn/__pchip_deriv__.cc
@@ -80,31 +80,31 @@ Undocumented internal function.\n\
           octave_idx_type nyc = ymat.columns ();
 
           if (nx != (rows ? nyc : nyr))
             {
               error ("__pchip_deriv__: X and Y dimension mismatch");
               return retval;
             }
 
-          const float *yvec = ymat.data ();
           FloatMatrix dmat (nyr, nyc);
-          float *dvec = dmat.fortran_vec ();
 
           octave_idx_type ierr;
           const octave_idx_type incfd = rows ? nyr : 1;
-          const octave_idx_type inc = rows ? 1 : nyr;
+          volatile const octave_idx_type inc = rows ? 1 : nyr;
+          volatile octave_idx_type k = 0;
 
           for (octave_idx_type i = (rows ? nyr : nyc); i > 0; i--)
             {
               F77_XFCN (pchim, PCHIM, (nx, xvec.data (),
-                                       yvec, dvec, incfd, &ierr));
+                                       ymat.data () + k * inc,
+                                       dmat.fortran_vec () + k * inc,
+                                       incfd, &ierr));
 
-              yvec += inc;
-              dvec += inc;
+              k++;
 
               if (ierr < 0)
                 {
                   error ("__pchip_deriv__: PCHIM failed with ierr = %i", ierr);
                   return retval;
                 }
             }
 
@@ -127,31 +127,30 @@ Undocumented internal function.\n\
           octave_idx_type nyc = ymat.columns ();
 
           if (nx != (rows ? nyc : nyr))
             {
               error ("__pchip_deriv__: X and Y dimension mismatch");
               return retval;
             }
 
-          const double *yvec = ymat.data ();
           Matrix dmat (nyr, nyc);
-          double *dvec = dmat.fortran_vec ();
 
           octave_idx_type ierr;
           const octave_idx_type incfd = rows ? nyr : 1;
-          const octave_idx_type inc = rows ? 1 : nyr;
+          volatile const octave_idx_type inc = rows ? 1 : nyr;
+          volatile octave_idx_type k = 0;
 
           for (octave_idx_type i = (rows ? nyr : nyc); i > 0; i--)
             {
               F77_XFCN (dpchim, DPCHIM, (nx, xvec.data (),
-                                         yvec, dvec, incfd, &ierr));
-
-              yvec += inc;
-              dvec += inc;
+                                         ymat.data () + k * inc,
+                                         dmat.fortran_vec () + k * inc,
+                                         incfd, &ierr));
+              k++;
 
               if (ierr < 0)
                 {
                   error ("__pchip_deriv__: DPCHIM failed with ierr = %i", ierr);
                   return retval;
                 }
             }
 
