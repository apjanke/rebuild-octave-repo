# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1463501370 14400
#      Tue May 17 12:09:30 2016 -0400
# Node ID aba2e6293dd8311b457e52b552318f52f301cae7
# Parent  bae585228161375dd5e453ad3be55f3f0ba251e6
use "#if ..." consistently instead of "#ifdef" and "#ifndef"

* configure.ac, Doxyfile.in, make_int.cc, Backend.cc, BaseControl.cc,
ButtonControl.cc, Canvas.cc, CheckBoxControl.cc, Container.cc,
ContextMenu.cc, EditControl.cc, Figure.cc, FigureWindow.cc,
GLCanvas.cc, KeyMap.cc, ListBoxControl.cc, Logger.cc, Menu.cc,
MouseModeActionGroup.cc, Object.cc, ObjectFactory.cc,
ObjectProxy.cc, Panel.cc, PopupMenuControl.cc, PushButtonControl.cc,
PushTool.cc, QtHandlesUtils.cc, RadioButtonControl.cc,
SliderControl.cc, TextControl.cc, TextEdit.cc,
ToggleButtonControl.cc, ToggleTool.cc, ToolBar.cc, __init_qt__.cc,
annotation-dialog.cc, gl-select.cc, module.mk, color-picker.cc,
dialog.cc, documentation-dock-widget.cc, files-dock-widget.cc,
find-files-dialog.cc, find-files-model.cc, history-dock-widget.cc,
liboctgui-build-info.in.cc, file-editor-tab.cc, file-editor.cc,
find-dialog.cc, marker.cc, marker.h, octave-qscintilla.cc,
octave-txt-lexer.cc, main-window.cc, octave-cmd.cc,
octave-dock-widget.cc, octave-gui.cc, octave-interpreter.cc,
octave-qt-link.cc, parser.cc, webinfo.cc, resource-manager.cc,
settings-dialog.cc, shortcut-manager.cc, terminal-dock-widget.cc,
thread-manager.cc, welcome-wizard.cc, workspace-model.cc,
workspace-view.cc, build-env.in.cc, Cell.cc, __contourc__.cc,
__dispatch__.cc, __dsearchn__.cc, __ichol__.cc, __ilu__.cc,
__lin_interpn__.cc, __luinc__.cc, __magick_read__.cc,
__pchip_deriv__.cc, __qp__.cc, balance.cc, besselj.cc, betainc.cc,
bitfcns.cc, bsxfun.cc, c-file-ptr-stream.cc, c-file-ptr-stream.h,
cdisplay.c, cdisplay.h, cellfun.cc, coct-hdf5-types.c, colloc.cc,
comment-list.cc, conv2.cc, daspk.cc, dasrt.cc, dassl.cc, data.cc,
debug.cc, defaults.cc, defaults.in.h, defun.cc, det.cc, dirfns.cc,
display.cc, dlmread.cc, dot.cc, dynamic-ld.cc, eig.cc, ellipj.cc,
error.cc, errwarn.cc, event-queue.cc, fft.cc, fft2.cc, fftn.cc,
file-io.cc, filter.cc, find.cc, ft-text-renderer.cc, gammainc.cc,
gcd.cc, getgrent.cc, getpwent.cc, getrusage.cc, givens.cc,
gl-render.cc, gl2ps-print.cc, graphics.cc, gripes.cc, hash.cc,
help.cc, hess.cc, hex2num.cc, input.cc, inv.cc, jit-ir.cc, jit-ir.h,
jit-typeinfo.cc, jit-typeinfo.h, jit-util.cc, jit-util.h, kron.cc,
load-path.cc, load-save.cc, lookup.cc, ls-ascii-helper.cc,
ls-hdf5.cc, ls-mat-ascii.cc, ls-mat4.cc, ls-mat5.cc,
ls-oct-binary.cc, ls-oct-text.cc, ls-oct-text.h, ls-utils.cc,
lsode.cc, lu.cc, mappers.cc, matrix_type.cc, max.cc, mex.cc, mex.h,
mexproto.h, mgorth.cc, nproc.cc, oct-errno.in.cc, oct-fstrm.cc,
oct-hdf5-types.cc, oct-hdf5-types.h, oct-hist.cc, oct-iostrm.cc,
oct-lvalue.cc, oct-map.cc, oct-prcstrm.cc, oct-procbuf.cc,
oct-stdstrm.h, oct-stream.cc, oct-strstrm.cc, oct-tex-lexer.in.ll,
oct-tex-parser.in.yy, octave-link.cc, ordschur.cc, pager.cc,
pinv.cc, pr-output.cc, procstream.cc, profiler.cc, psi.cc,
pt-jit.cc, pt-jit.h, quad.cc, quadcc.cc, qz.cc, rand.cc, rcond.cc,
regexp.cc, schur.cc, sighandlers.cc, sighandlers.h, siglist.c,
siglist.h, sparse-xdiv.cc, sparse-xpow.cc, sparse.cc, spparms.cc,
sqrtm.cc, str2double.cc, strfind.cc, strfns.cc, sub2ind.cc, svd.cc,
sylvester.cc, symtab.cc, syscalls.cc, sysdep.cc, text-renderer.cc,
time.cc, toplev.cc, tril.cc, tsearch.cc, txt-eng.cc, typecast.cc,
urlwrite.cc, utils.cc, variables.cc, xdiv.cc, xgl2ps.c, xnorm.cc,
xpow.cc, zfstream.cc, zfstream.h, __delaunayn__.cc, __eigs__.cc,
__fltk_uigetfile__.cc, __glpk__.cc, __init_fltk__.cc,
__init_gnuplot__.cc, __osmesa_print__.cc, __voronoi__.cc, amd.cc,
audiodevinfo.cc, audioread.cc, ccolamd.cc, chol.cc, colamd.cc,
convhulln.cc, dmperm.cc, fftw.cc, qr.cc, symbfact.cc, symrcm.cc,
liboctinterp-build-info.in.cc, mkbuiltins, mkops, ov-base.cc,
ov-bool-mat.cc, ov-bool-sparse.cc, ov-bool.cc, ov-builtin.cc,
ov-cell.cc, ov-ch-mat.cc, ov-class.cc, ov-classdef.cc, ov-colon.cc,
ov-complex.cc, ov-cs-list.cc, ov-cx-diag.cc, ov-cx-mat.cc,
ov-cx-sparse.cc, ov-dld-fcn.cc, ov-fcn-handle.cc, ov-fcn-inline.cc,
ov-fcn.cc, ov-float.cc, ov-flt-complex.cc, ov-flt-cx-diag.cc,
ov-flt-cx-mat.cc, ov-flt-re-diag.cc, ov-flt-re-mat.cc, ov-int16.cc,
ov-int32.cc, ov-int64.cc, ov-int8.cc, ov-java.cc, ov-lazy-idx.cc,
ov-mex-fcn.cc, ov-null-mat.cc, ov-oncleanup.cc, ov-perm.cc,
ov-range.cc, ov-re-diag.cc, ov-re-mat.cc, ov-re-sparse.cc,
ov-scalar.cc, ov-str-mat.cc, ov-struct.cc, ov-typeinfo.cc,
ov-uint16.cc, ov-uint32.cc, ov-uint64.cc, ov-uint8.cc,
ov-usr-fcn.cc, ov-usr-fcn.h, ov.cc, ovl.cc, octave.cc, octave.h,
op-b-b.cc, op-b-bm.cc, op-b-sbm.cc, op-bm-b.cc, op-bm-bm.cc,
op-bm-sbm.cc, op-cdm-cdm.cc, op-cdm-cm.cc, op-cdm-dm.cc,
op-cdm-m.cc, op-cell.cc, op-chm.cc, op-class.cc, op-cm-cdm.cc,
op-cm-cm.cc, op-cm-cs.cc, op-cm-dm.cc, op-cm-m.cc, op-cm-s.cc,
op-cm-scm.cc, op-cm-sm.cc, op-cs-cm.cc, op-cs-cs.cc, op-cs-m.cc,
op-cs-s.cc, op-cs-scm.cc, op-cs-sm.cc, op-dm-cdm.cc, op-dm-cm.cc,
op-dm-dm.cc, op-dm-m.cc, op-dm-scm.cc, op-dm-sm.cc,
op-dm-template.cc, op-dms-template.cc, op-double-conv.cc,
op-fcdm-fcdm.cc, op-fcdm-fcm.cc, op-fcdm-fdm.cc, op-fcdm-fm.cc,
op-fcm-fcdm.cc, op-fcm-fcm.cc, op-fcm-fcs.cc, op-fcm-fdm.cc,
op-fcm-fm.cc, op-fcm-fs.cc, op-fcn.cc, op-fcs-fcm.cc, op-fcs-fcs.cc,
op-fcs-fm.cc, op-fcs-fs.cc, op-fdm-fcdm.cc, op-fdm-fcm.cc,
op-fdm-fdm.cc, op-fdm-fm.cc, op-float-conv.cc, op-fm-fcdm.cc,
op-fm-fcm.cc, op-fm-fcs.cc, op-fm-fdm.cc, op-fm-fm.cc, op-fm-fs.cc,
op-fs-fcm.cc, op-fs-fcs.cc, op-fs-fm.cc, op-fs-fs.cc, op-i16-i16.cc,
op-i32-i32.cc, op-i64-i64.cc, op-i8-i8.cc, op-int-concat.cc,
op-int-conv.cc, op-m-cdm.cc, op-m-cm.cc, op-m-cs.cc, op-m-dm.cc,
op-m-m.cc, op-m-s.cc, op-m-scm.cc, op-m-sm.cc, op-pm-pm.cc,
op-pm-scm.cc, op-pm-sm.cc, op-pm-template.cc, op-range.cc,
op-s-cm.cc, op-s-cs.cc, op-s-m.cc, op-s-s.cc, op-s-scm.cc,
op-s-sm.cc, op-sbm-b.cc, op-sbm-bm.cc, op-sbm-sbm.cc, op-scm-cm.cc,
op-scm-cs.cc, op-scm-m.cc, op-scm-s.cc, op-scm-scm.cc, op-scm-sm.cc,
op-sm-cm.cc, op-sm-cs.cc, op-sm-m.cc, op-sm-s.cc, op-sm-scm.cc,
op-sm-sm.cc, op-str-m.cc, op-str-s.cc, op-str-str.cc, op-struct.cc,
op-ui16-ui16.cc, op-ui32-ui32.cc, op-ui64-ui64.cc, op-ui8-ui8.cc,
lex.ll, oct-parse.in.yy, pt-arg-list.cc, pt-array-list.cc,
pt-assign.cc, pt-binop.cc, pt-bp.cc, pt-cbinop.cc, pt-cell.cc,
pt-check.cc, pt-classdef.cc, pt-cmd.cc, pt-colon.cc, pt-const.cc,
pt-decl.cc, pt-eval.cc, pt-except.cc, pt-exp.cc, pt-fcn-handle.cc,
pt-funcall.cc, pt-id.cc, pt-idx.cc, pt-jump.cc, pt-loop.cc,
pt-loop.h, pt-mat.cc, pt-misc.cc, pt-pr-code.cc, pt-select.cc,
pt-stmt.cc, pt-unop.cc, pt.cc, token.cc, Array-jit.cc, Array-tc.cc,
version.cc, Array-C.cc, Array-b.cc, Array-ch.cc, Array-d.cc,
Array-f.cc, Array-fC.cc, Array-i.cc, Array-idx-vec.cc, Array-s.cc,
Array-str.cc, Array-util.cc, Array-voidp.cc, Array.cc,
CColVector.cc, CDiagMatrix.cc, CMatrix.cc, CNDArray.cc,
CRowVector.cc, CSparse.cc, MArray-C.cc, MArray-d.cc, MArray-f.cc,
MArray-fC.cc, MArray-i.cc, MArray-s.cc, MSparse-C.cc, MSparse-d.cc,
MatrixType.cc, PermMatrix.cc, Range.cc, Sparse-C.cc, Sparse-b.cc,
Sparse-d.cc, boolMatrix.cc, boolNDArray.cc, boolSparse.cc,
chMatrix.cc, chNDArray.cc, dColVector.cc, dDiagMatrix.cc,
dMatrix.cc, dNDArray.cc, dRowVector.cc, dSparse.cc, dim-vector.cc,
dim-vector.h, fCColVector.cc, fCDiagMatrix.cc, fCMatrix.cc,
fCNDArray.cc, fCRowVector.cc, fColVector.cc, fDiagMatrix.cc,
fMatrix.cc, fNDArray.cc, fRowVector.cc, idx-vector.cc,
int16NDArray.cc, int32NDArray.cc, int64NDArray.cc, int8NDArray.cc,
uint16NDArray.cc, uint32NDArray.cc, uint64NDArray.cc,
uint8NDArray.cc, Faddeeva.cc, blaswrap.c, cquit.c, f77-extern.cc,
f77-fcn.c, f77-fcn.h, lo-error.c, lo-error.h, quit.cc, quit.h,
liboctave-build-info.in.cc, CollocWt.cc, DASPK.cc, DASRT.cc,
DASSL.cc, EIG.cc, LSODE.cc, ODES.cc, Quad.cc, aepbalance.cc,
chol.cc, eigs-base.cc, fEIG.cc, gepbalance.cc, hess.cc,
lo-mappers.cc, lo-specfun.cc, lu.cc, oct-convn.cc, oct-fftw.cc,
oct-norm.cc, oct-rand.cc, oct-spparms.cc, qr.cc, qrp.cc,
randmtzig.cc, randpoisson.cc, schur.cc, sparse-chol.cc,
sparse-dmsolve.cc, sparse-lu.cc, sparse-qr.cc, svd.cc, mk-ops.awk,
mx-defs.h, dir-ops.cc, file-ops.cc, file-stat.cc, lo-sysdep.cc,
mach-info.cc, oct-env.cc, oct-group.cc, oct-passwd.cc,
oct-syscalls.cc, oct-time.cc, oct-uname.cc, pathlen.h, syswait.h,
cmd-edit.cc, cmd-hist.cc, data-conv.cc, f2c-main.c, glob-match.cc,
kpse.cc, lo-array-errwarn.cc, lo-array-gripes.cc, lo-cutils.c,
lo-cutils.h, lo-ieee.cc, lo-ieee.h, lo-regexp.cc, lo-utils.cc,
oct-base64.cc, oct-glob.cc, oct-inttypes.cc, oct-inttypes.h,
oct-locbuf.cc, oct-mutex.cc, oct-rl-edit.c, oct-rl-edit.h,
oct-rl-hist.c, oct-rl-hist.h, oct-shlib.cc, oct-sort.cc,
pathsearch.cc, singleton-cleanup.cc, sparse-sort.cc, sparse-util.cc,
statdefs.h, str-vec.cc, unwind-prot.cc, url-transfer.cc,
acinclude.m4, display-available.c, display-available.h, main-cli.cc,
main-gui.cc, main.in.cc, mkoctfile.in.cc, octave-build-info.in.cc,
octave-config.in.cc, shared-fcns.h:
Use "#if ..." consistently instead of "#ifdef" and "#ifndef".

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -386,17 +386,17 @@ original_octave_configure_CXXFLAGS="$CXX
 have_msvc=no
 case $host_os in
   msdosmsvc)
     have_msvc=yes
   ;;
   mingw*)
     AC_MSG_CHECKING([for MSVC compiler])
     AC_PREPROC_IFELSE([AC_LANG_SOURCE([[
-        #ifndef _MSC_VER
+        #if ! defined (_MSC_VER)
         #error "Not MSVC compiler"
         #endif
         ]])],
       have_msvc=yes, have_msvc=no)
     AC_MSG_RESULT([$have_msvc])
   ;;
 esac
 
diff --git a/doc/doxyhtml/Doxyfile.in b/doc/doxyhtml/Doxyfile.in
--- a/doc/doxyhtml/Doxyfile.in
+++ b/doc/doxyhtml/Doxyfile.in
@@ -201,17 +201,18 @@ INCLUDE_PATH = \
   @abs_top_srcdir@/libinterp/template-inst \
   @abs_top_srcdir@/liboctave/array \
   @abs_top_srcdir@/liboctave/numeric \
   @abs_top_srcdir@/liboctave/operators \
   @abs_top_srcdir@/liboctave/system \
   @abs_top_srcdir@/liboctave/util \
   @abs_top_srcdir@/src
 
-# So that features that are behind #ifdef HAVE_FOO macros get processed by Doxygen
+# So that features that are behind #if defined (HAVE_FOO) macros
+# get processed by Doxygen
 
 PREDEFINED = HAVE_ARPACK=1          \
              HAVE_CCOLAMD=1         \
              HAVE_CHOLMOD=1         \
              HAVE_CURL=1            \
              HAVE_CXSPARSE=1        \
              HAVE_FFTW=1            \
              HAVE_FFTW3=1           \
diff --git a/examples/code/make_int.cc b/examples/code/make_int.cc
--- a/examples/code/make_int.cc
+++ b/examples/code/make_int.cc
@@ -114,17 +114,17 @@ private:
 
 void
 octave_integer::print (std::ostream& os, bool pr_as_read_syntax)
 {
   os << scalar;
   newline (os);
 }
 
-#ifdef DEFUNOP_OP
+#if defined (DEFUNOP_OP)
 #undef DEFUNOP_OP
 #endif
 
 #define DEFUNOP_OP(name, t, op) \
   static octave_value \
   CONCAT2(oct_unop_, name) (const octave_base_value& a) \
   { \
     const octave_ ## t& v = dynamic_cast<const octave_ ## t&> (a); \
@@ -134,17 +134,17 @@ octave_integer::print (std::ostream& os,
 DEFUNOP_OP (gnot, integer, !)
 DEFUNOP_OP (uminus, integer, -)
 DEFUNOP_OP (transpose, integer, /* no-op */)
 DEFUNOP_OP (hermitian, integer, /* no-op */)
 
 DEFNCUNOP_METHOD (incr, integer, increment)
 DEFNCUNOP_METHOD (decr, integer, decrement)
 
-#ifdef DEFBINOP_OP
+#if defined (DEFBINOP_OP)
 #undef DEFBINOP_OP
 #endif
 
 #define DEFBINOP_OP(name, t1, t2, op) \
   static octave_value \
   CONCAT2(oct_binop_, name) (const octave_base_value& a1, const octave_base_value& a2) \
   { \
     const octave_ ## t1& v1 = dynamic_cast<const octave_ ## t1&> (a1); \
diff --git a/libgui/graphics/Backend.cc b/libgui/graphics/Backend.cc
--- a/libgui/graphics/Backend.cc
+++ b/libgui/graphics/Backend.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QThread>
 
 #include <stdint.h>
 
diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QEvent>
 #include <QKeyEvent>
 #include <QMouseEvent>
 #include <QWidget>
 
diff --git a/libgui/graphics/ButtonControl.cc b/libgui/graphics/ButtonControl.cc
--- a/libgui/graphics/ButtonControl.cc
+++ b/libgui/graphics/ButtonControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QAbstractButton>
 
 #include "ButtonControl.h"
 #include "Container.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QBitmap>
 #include <QCursor>
 #include <QInputDialog>
 #include <QList>
diff --git a/libgui/graphics/CheckBoxControl.cc b/libgui/graphics/CheckBoxControl.cc
--- a/libgui/graphics/CheckBoxControl.cc
+++ b/libgui/graphics/CheckBoxControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QCheckBox>
 
 #include "CheckBoxControl.h"
 #include "Container.h"
 
diff --git a/libgui/graphics/Container.cc b/libgui/graphics/Container.cc
--- a/libgui/graphics/Container.cc
+++ b/libgui/graphics/Container.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QChildEvent>
 #include <QVBoxLayout>
 
 #include "graphics.h"
 
diff --git a/libgui/graphics/ContextMenu.cc b/libgui/graphics/ContextMenu.cc
--- a/libgui/graphics/ContextMenu.cc
+++ b/libgui/graphics/ContextMenu.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QMenu>
 
 #include "Backend.h"
 #include "ContextMenu.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/EditControl.cc b/libgui/graphics/EditControl.cc
--- a/libgui/graphics/EditControl.cc
+++ b/libgui/graphics/EditControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QLineEdit>
 
 #include "Container.h"
 #include "EditControl.h"
 #include "TextEdit.h"
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QAction>
 #include <QActionEvent>
 #include <QActionGroup>
 #include <QApplication>
 #include <QClipboard>
diff --git a/libgui/graphics/FigureWindow.cc b/libgui/graphics/FigureWindow.cc
--- a/libgui/graphics/FigureWindow.cc
+++ b/libgui/graphics/FigureWindow.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QMenu>
 
 #include "FigureWindow.h"
 
 namespace QtHandles
diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "gl-render.h"
 #include "graphics.h"
 
 #include "GLCanvas.h"
 #include "gl-select.h"
diff --git a/libgui/graphics/KeyMap.cc b/libgui/graphics/KeyMap.cc
--- a/libgui/graphics/KeyMap.cc
+++ b/libgui/graphics/KeyMap.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QMap>
 #include <Qt>
 
 #include "KeyMap.h"
 
diff --git a/libgui/graphics/ListBoxControl.cc b/libgui/graphics/ListBoxControl.cc
--- a/libgui/graphics/ListBoxControl.cc
+++ b/libgui/graphics/ListBoxControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QListWidget>
 
 #include "Container.h"
 #include "ListBoxControl.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/Logger.cc b/libgui/graphics/Logger.cc
--- a/libgui/graphics/Logger.cc
+++ b/libgui/graphics/Logger.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QMutex>
 #include <QMutexLocker>
 #include <QProcessEnvironment>
 
 #include <cstdio>
diff --git a/libgui/graphics/Menu.cc b/libgui/graphics/Menu.cc
--- a/libgui/graphics/Menu.cc
+++ b/libgui/graphics/Menu.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QAction>
 #include <QMainWindow>
 #include <QMenu>
 #include <QMenuBar>
 
diff --git a/libgui/graphics/MouseModeActionGroup.cc b/libgui/graphics/MouseModeActionGroup.cc
--- a/libgui/graphics/MouseModeActionGroup.cc
+++ b/libgui/graphics/MouseModeActionGroup.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QAction>
 #include <QIcon>
 
 #include "Figure.h"
 #include "MouseModeActionGroup.h"
diff --git a/libgui/graphics/Object.cc b/libgui/graphics/Object.cc
--- a/libgui/graphics/Object.cc
+++ b/libgui/graphics/Object.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QString>
 #include <QVariant>
 
 #include "Backend.h"
 #include "Object.h"
diff --git a/libgui/graphics/ObjectFactory.cc b/libgui/graphics/ObjectFactory.cc
--- a/libgui/graphics/ObjectFactory.cc
+++ b/libgui/graphics/ObjectFactory.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QThread>
 
 #include "graphics.h"
 
diff --git a/libgui/graphics/ObjectProxy.cc b/libgui/graphics/ObjectProxy.cc
--- a/libgui/graphics/ObjectProxy.cc
+++ b/libgui/graphics/ObjectProxy.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QString>
 
 #include "oct-mutex.h"
 
 #include "Object.h"
diff --git a/libgui/graphics/Panel.cc b/libgui/graphics/Panel.cc
--- a/libgui/graphics/Panel.cc
+++ b/libgui/graphics/Panel.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QEvent>
 #include <QFrame>
 #include <QLabel>
 #include <QMouseEvent>
 #include <QTimer>
diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QComboBox>
 
 #include "Container.h"
 #include "PopupMenuControl.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/PushButtonControl.cc b/libgui/graphics/PushButtonControl.cc
--- a/libgui/graphics/PushButtonControl.cc
+++ b/libgui/graphics/PushButtonControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QPushButton>
 #include <QtDebug>
 
 #include "PushButtonControl.h"
 #include "Container.h"
diff --git a/libgui/graphics/PushTool.cc b/libgui/graphics/PushTool.cc
--- a/libgui/graphics/PushTool.cc
+++ b/libgui/graphics/PushTool.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "PushTool.h"
 
 #include "ToolBarButton.cc"
 
 namespace QtHandles
diff --git a/libgui/graphics/QtHandlesUtils.cc b/libgui/graphics/QtHandlesUtils.cc
--- a/libgui/graphics/QtHandlesUtils.cc
+++ b/libgui/graphics/QtHandlesUtils.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QKeyEvent>
 #include <QMouseEvent>
 
 #include <list>
@@ -357,24 +357,24 @@ makeKeyEventStruct (QKeyEvent* event)
   retval.setfield ("Character", toStdString (event->text ()));
 
   std::list<std::string> modList;
   Qt::KeyboardModifiers mods = event->modifiers ();
 
   if (mods & Qt::ShiftModifier)
     modList.push_back ("shift");
   if (mods & Qt::ControlModifier)
-#ifdef Q_OS_MAC
+#if defined (Q_OS_MAC)
     modList.push_back ("command");
 #else
     modList.push_back ("control");
 #endif
   if (mods & Qt::AltModifier)
     modList.push_back ("alt");
-#ifdef Q_OS_MAC
+#if defined (Q_OS_MAC)
   if (mods & Qt::MetaModifier)
     modList.push_back ("control");
 #endif
 
   retval.setfield ("Modifier", Cell (modList));
 
   return retval;
 }
diff --git a/libgui/graphics/RadioButtonControl.cc b/libgui/graphics/RadioButtonControl.cc
--- a/libgui/graphics/RadioButtonControl.cc
+++ b/libgui/graphics/RadioButtonControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QRadioButton>
 
 #include "RadioButtonControl.h"
 #include "Container.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/SliderControl.cc b/libgui/graphics/SliderControl.cc
--- a/libgui/graphics/SliderControl.cc
+++ b/libgui/graphics/SliderControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QScrollBar>
 
 #include "Container.h"
 #include "SliderControl.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/TextControl.cc b/libgui/graphics/TextControl.cc
--- a/libgui/graphics/TextControl.cc
+++ b/libgui/graphics/TextControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QLabel>
 
 #include "Container.h"
 #include "TextControl.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/TextEdit.cc b/libgui/graphics/TextEdit.cc
--- a/libgui/graphics/TextEdit.cc
+++ b/libgui/graphics/TextEdit.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QKeyEvent>
 
 #include "TextEdit.h"
 
 namespace QtHandles
diff --git a/libgui/graphics/ToggleButtonControl.cc b/libgui/graphics/ToggleButtonControl.cc
--- a/libgui/graphics/ToggleButtonControl.cc
+++ b/libgui/graphics/ToggleButtonControl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QPushButton>
 
 #include "ToggleButtonControl.h"
 #include "Container.h"
 #include "QtHandlesUtils.h"
diff --git a/libgui/graphics/ToggleTool.cc b/libgui/graphics/ToggleTool.cc
--- a/libgui/graphics/ToggleTool.cc
+++ b/libgui/graphics/ToggleTool.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ToggleTool.h"
 
 #include "ToolBarButton.cc"
 
 namespace QtHandles
diff --git a/libgui/graphics/ToolBar.cc b/libgui/graphics/ToolBar.cc
--- a/libgui/graphics/ToolBar.cc
+++ b/libgui/graphics/ToolBar.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QAction>
 #include <QActionEvent>
 #include <QApplication>
 #include <QEvent>
 #include <QIcon>
diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QDir>
 #include <QFileDialog>
 #include <QMetaType>
 #include <QPalette>
diff --git a/libgui/graphics/annotation-dialog.cc b/libgui/graphics/annotation-dialog.cc
--- a/libgui/graphics/annotation-dialog.cc
+++ b/libgui/graphics/annotation-dialog.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "annotation-dialog.h"
 #include "ui-annotation-dialog.h"
 
 #include "QtHandlesUtils.h"
 
diff --git a/libgui/graphics/gl-select.cc b/libgui/graphics/gl-select.cc
--- a/libgui/graphics/gl-select.cc
+++ b/libgui/graphics/gl-select.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "gl-select.h"
 
 void
diff --git a/libgui/module.mk b/libgui/module.mk
--- a/libgui/module.mk
+++ b/libgui/module.mk
@@ -73,26 +73,26 @@ octlocale_DATA += $(LOCALES)
 libgui/default-qt-settings: libgui/default-qt-settings.in build-aux/mk-default-qt-settings.sh | libgui/$(octave_dirstamp)
 	$(AM_V_GEN)$(call simple-filter-rule,build-aux/mk-default-qt-settings.sh)
 
 DIRSTAMP_FILES += \
   libgui/$(octave_dirstamp)
 
 define moc-command
   rm -f $@-t $@ && \
-  ( echo "#ifdef HAVE_CONFIG_H"; \
+  ( echo "#if defined (HAVE_CONFIG_H)"; \
     echo '#include "config.h"'; \
     echo "#endif"; \
     $(MOC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(MOC_OCTAVE_CPPFLAGS) $(MOC_CPPFLAGS) $(libgui_liboctgui_la_CPPFLAGS) $< ) > $@-t && \
   mv $@-t $@
 endef
 
 define rcc-command
   rm -f $@-t $@ && \
-  ( echo "#ifdef HAVE_CONFIG_H"; \
+  ( echo "#if defined (HAVE_CONFIG_H)"; \
     echo '#include "config.h"'; \
     echo "#endif"; \
     echo "// Ignore unused variable warnings in generated code."; \
     echo "#if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)"; \
     echo "#pragma GCC diagnostic ignored \"-Wunused-variable\""; \
     echo "#endif"; \
     $(RCC) -name $(@D) $< ) > $@-t && \
   mv $@-t $@
diff --git a/libgui/src/color-picker.cc b/libgui/src/color-picker.cc
--- a/libgui/src/color-picker.cc
+++ b/libgui/src/color-picker.cc
@@ -19,17 +19,17 @@
 //
 // You should have received a copy of the GNU General Public License
 // along with Octave; see the file COPYING.  If not, see
 // <http://www.gnu.org/licenses/>.
 //
 
 // Author: Torsten <ttl@justmail.de>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "color-picker.h"
 
 // constuctor with initial color as parameter
 color_picker::color_picker (QColor old_color, QWidget* p) : QPushButton (p)
 {
diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "dialog.h"
 
 #include <QString>
 #include <QStringList>
 #include <QStringListModel>
diff --git a/libgui/src/documentation-dock-widget.cc b/libgui/src/documentation-dock-widget.cc
--- a/libgui/src/documentation-dock-widget.cc
+++ b/libgui/src/documentation-dock-widget.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "documentation-dock-widget.h"
 
 documentation_dock_widget::documentation_dock_widget (QWidget *p)
   : octave_dock_widget (p)
 {
diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "resource-manager.h"
 #include "files-dock-widget.h"
 
 #include <QApplication>
 #include <QClipboard>
diff --git a/libgui/src/find-files-dialog.cc b/libgui/src/find-files-dialog.cc
--- a/libgui/src/find-files-dialog.cc
+++ b/libgui/src/find-files-dialog.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QPushButton>
 #include <QDialogButtonBox>
 #include <QGridLayout>
 #include <QLabel>
 #include <QLineEdit>
diff --git a/libgui/src/find-files-model.cc b/libgui/src/find-files-model.cc
--- a/libgui/src/find-files-model.cc
+++ b/libgui/src/find-files-model.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QFileIconProvider>
 #include <QtAlgorithms>
 
 #include "find-files-model.h"
 
diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QClipboard>
 #include <QVBoxLayout>
 #include <QMenu>
 #include <QScrollBar>
diff --git a/libgui/src/liboctgui-build-info.in.cc b/libgui/src/liboctgui-build-info.in.cc
--- a/libgui/src/liboctgui-build-info.in.cc
+++ b/libgui/src/liboctgui-build-info.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "liboctgui-build-info.h"
 
 std::string
 liboctgui_hg_id (void)
 {
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -21,21 +21,21 @@ along with Octave; see the file COPYING.
 
 */
 
 /**
  @file A single GUI file tab.
  This interfaces QSciScintilla with the rest of Octave.
  */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
 #  define HAVE_LEXER_OCTAVE 1
 #  include <Qsci/qscilexeroctave.h>
 #elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
 #  define HAVE_LEXER_MATLAB 1
 #  include <Qsci/qscilexermatlab.h>
 #endif
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -15,21 +15,21 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #include "file-editor.h"
 #include "resource-manager.h"
 #include "shortcut-manager.h"
 
 #include <QVBoxLayout>
 #include <QApplication>
 #include <QFile>
@@ -1533,17 +1533,17 @@ file_editor::construct (void)
   _menu_bar = new QMenuBar (editor_widget);
 #if defined (Q_OS_MAC)
   _menu_bar->setNativeMenuBar (false);
 #endif
   _tool_bar = new QToolBar (editor_widget);
   _tool_bar->setMovable (true);
   _tab_widget = new tab_widget (editor_widget);
   _tab_widget->setTabsClosable (true);
-#ifdef HAVE_QTABWIDGET_SETMOVABLE
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
   _tab_widget->setMovable (true);
 #endif
 
 
   // the mru-list and an empty array of actions
   QSettings *settings = resource_manager::get_settings ();
   _mru_files = settings->value ("editor/mru_file_list").toStringList ();
   _mru_files_encodings = settings->value ("editor/mru_file_encodings")
@@ -2338,24 +2338,24 @@ file_editor::switch_left_tab ()
 void
 file_editor::switch_right_tab ()
 {
   switch_tab (1);
 }
 void
 file_editor::move_tab_left ()
 {
-#ifdef HAVE_QTABWIDGET_SETMOVABLE
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
   switch_tab (-1, true);
 #endif
 }
 void
 file_editor::move_tab_right ()
 {
-#ifdef HAVE_QTABWIDGET_SETMOVABLE
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
   switch_tab (1, true);
 #endif
 }
 void
 file_editor::switch_tab (int direction, bool movetab)
 {
   int tabs = _tab_widget->count ();
 
@@ -2365,17 +2365,17 @@ file_editor::switch_tab (int direction, 
   int old_pos = _tab_widget->currentIndex ();
   int new_pos = _tab_widget->currentIndex () + direction;
 
   if (new_pos < 0 || new_pos >= tabs)
     new_pos = new_pos - direction*tabs;
 
   if (movetab)
     {
-#ifdef HAVE_QTABWIDGET_SETMOVABLE
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
       _tab_widget->tabBar ()->moveTab (old_pos, new_pos);
       _tab_widget->setCurrentIndex (old_pos);
       _tab_widget->setCurrentIndex (new_pos);
       focus ();
 #endif
     }
   else
     _tab_widget->setCurrentIndex (new_pos);
diff --git a/libgui/src/m-editor/find-dialog.cc b/libgui/src/m-editor/find-dialog.cc
--- a/libgui/src/m-editor/find-dialog.cc
+++ b/libgui/src/m-editor/find-dialog.cc
@@ -54,21 +54,21 @@ along with Octave; see the file COPYING.
 **
 ** If you have questions regarding the use of this file, please contact
 ** Nokia at qt-info@nokia.com.
 ** $QT_END_LICENSE$
 **
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #include <QtGui>
 #include <QIcon>
 #include "find-dialog.h"
 
 find_dialog::find_dialog (QsciScintilla* edit_area, QWidget *p)
   : QDialog (p)
 {
@@ -103,17 +103,17 @@ find_dialog::find_dialog (QsciScintilla*
   _button_box->addButton (_more_button, QDialogButtonBox::ActionRole);
   _button_box->addButton (QDialogButtonBox::Close);
 
   _extension = new QWidget (this);
   _whole_words_check_box = new QCheckBox (tr ("&Whole words"));
   _regex_check_box = new QCheckBox (tr ("Regular E&xpressions"));
   _backward_check_box = new QCheckBox (tr ("Search &backward"));
   _search_selection_check_box = new QCheckBox (tr ("Search se&lection"));
-#ifdef HAVE_QSCI_FINDSELECTION
+#if defined (HAVE_QSCI_FINDSELECTION)
   _search_selection_check_box->setCheckable (true);
   _search_selection_check_box->setEnabled (edit_area->hasSelectedText ());
 #else
   _search_selection_check_box->setCheckable (false);
   _search_selection_check_box->setEnabled (false);
 #endif
 
   _edit_area = edit_area;
@@ -129,17 +129,17 @@ find_dialog::find_dialog (QsciScintilla*
            this,                SLOT (replace_all ()));
   connect (_backward_check_box, SIGNAL (stateChanged (int)),
            this,                SLOT (handle_backward_search_changed (int)));
   connect (_button_box,         SIGNAL (rejected ()),
            this,                SLOT (close ()));
   connect (_search_line_edit,   SIGNAL (textChanged (QString)),
            this,                SLOT (handle_search_text_changed (QString)));
 
-#ifdef HAVE_QSCI_FINDSELECTION
+#if defined (HAVE_QSCI_FINDSELECTION)
   connect (_edit_area, SIGNAL (copyAvailable (bool)),
            this,       SLOT (handle_selection_changed (bool)));
   connect (_search_selection_check_box, SIGNAL (stateChanged (int)),
            this,                        SLOT (handle_sel_search_changed (int)));
 #endif
 
   QVBoxLayout *extension_layout = new QVBoxLayout ();
   extension_layout->setMargin (0);
@@ -199,29 +199,29 @@ find_dialog::handle_backward_search_chan
 // search text has changed: reset the search
 void
 find_dialog::handle_search_text_changed (QString)
 {
   if (_search_selection_check_box->isChecked ())
     _find_result_available = false;
 }
 
-#ifdef HAVE_QSCI_FINDSELECTION
+#if defined (HAVE_QSCI_FINDSELECTION)
 void
 find_dialog::handle_sel_search_changed (int selected)
 {
   _from_start_check_box->setEnabled (! selected);
   _find_result_available = false;
 }
 #else
 void
 find_dialog::handle_sel_search_changed (int /* selected */) { }
 #endif
 
-#ifdef HAVE_QSCI_FINDSELECTION
+#if defined (HAVE_QSCI_FINDSELECTION)
 void
 find_dialog::handle_selection_changed (bool has_selected)
 {
   if (_rep_active)
     return;
 
   _search_selection_check_box->setEnabled (has_selected);
   _find_result_available = false;
@@ -321,46 +321,46 @@ find_dialog::find (bool forward)
         }
     }
 
   if (_edit_area)
     {
       if (_edit_area->hasSelectedText ()
           && _search_selection_check_box->isChecked ())
         {
-#ifdef HAVE_QSCI_FINDSELECTION
+#if defined (HAVE_QSCI_FINDSELECTION)
            if (_find_result_available)
              _find_result_available = _edit_area->findNext ();
            else
             _find_result_available
               = _edit_area->findFirstInSelection (
                                       _search_line_edit->text (),
                                       _regex_check_box->isChecked (),
                                       _case_check_box->isChecked (),
                                       _whole_words_check_box->isChecked (),
                                       do_forward,
                                       true
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
                                       , true
 #endif
                                       );
 #endif
         }
       else
         {
           _find_result_available
             = _edit_area->findFirst (_search_line_edit->text (),
                                     _regex_check_box->isChecked (),
                                     _case_check_box->isChecked (),
                                     _whole_words_check_box->isChecked (),
                                     do_wrap,
                                     do_forward,
                                     line,col,
                                     true
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
                                     , true
 #endif
                                     );
         }
     }
 
   if (_find_result_available)
     _from_start_check_box->setChecked (0);
diff --git a/libgui/src/m-editor/marker.cc b/libgui/src/m-editor/marker.cc
--- a/libgui/src/m-editor/marker.cc
+++ b/libgui/src/m-editor/marker.cc
@@ -15,21 +15,21 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #include <stdio.h>
 
 #include "marker.h"
 
 
 marker::marker (QsciScintilla *area, int original_linenr, editor_markers type,
                 int editor_linenr, const QString& condition) : QObject ()
diff --git a/libgui/src/m-editor/marker.h b/libgui/src/m-editor/marker.h
--- a/libgui/src/m-editor/marker.h
+++ b/libgui/src/m-editor/marker.h
@@ -14,17 +14,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifndef MARKER_H
+#if ! defined (MARKER_H)
 #define MARKER_H
 
 #include <Qsci/qsciscintilla.h>
 #include <QObject>
 
 // Defined for purposes of sending QList<int> as part of signal.
 #include <QList>
 typedef QList<int> QIntList;
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -17,21 +17,21 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Torsten <ttl@justmail.de>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #include <Qsci/qscilexer.h>
 #include <Qsci/qscicommandset.h>
 #include <QShortcut>
 #include <QMessageBox>
 
 #include "octave-qscintilla.h"
 #include "file-editor-tab.h"
@@ -40,17 +40,17 @@ along with Octave; see the file COPYING.
 octave_qscintilla::octave_qscintilla (QWidget *p)
   : QsciScintilla (p)
 {
   connect (this, SIGNAL (textChanged ()), this, SLOT (text_changed ()));
 
   // clear scintilla edit shortcuts that are handled by the editor
   QsciCommandSet *cmd_set = standardCommands ();
 
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
   // find () was added in QScintilla 2.6
   cmd_set->find (QsciCommand::SelectionCopy)->setKey (0);
   cmd_set->find (QsciCommand::SelectionCut)->setKey (0);
   cmd_set->find (QsciCommand::Paste)->setKey (0);
   cmd_set->find (QsciCommand::SelectAll)->setKey (0);
   cmd_set->find (QsciCommand::SelectionDuplicate)->setKey (0);
   cmd_set->find (QsciCommand::LineTranspose)->setKey (0);
   cmd_set->find (QsciCommand::Undo)->setKey (0);
@@ -185,17 +185,17 @@ octave_qscintilla::context_run ()
   if (hasSelectedText ())
     contextmenu_run (true);
 }
 
 // context menu requested
 void
 octave_qscintilla::contextMenuEvent (QContextMenuEvent *e)
 {
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
   QPoint global_pos, local_pos;                         // the menu's position
   QMenu *context_menu = createStandardContextMenu ();  // standard menu
 
   bool in_left_margin = false;
 
   // determine position depending on mouse or keyboard event
   if (e->reason () == QContextMenuEvent::Mouse)
     {
@@ -211,17 +211,17 @@ octave_qscintilla::contextMenuEvent (QCo
       get_global_textcursor_pos (&global_pos, &local_pos);
       QRect editor_rect = geometry ();      // editor rect mapped to global
       editor_rect.moveTopLeft
       (parentWidget ()->mapToGlobal (editor_rect.topLeft ()));
       if (! editor_rect.contains (global_pos))  // is cursor outside editor?
         global_pos = editor_rect.topLeft ();   // yes, take top left corner
     }
 
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
   if (! in_left_margin)
 #endif
     {
       // fill context menu with editor's standard actions
       emit create_context_menu_signal (context_menu);
 
       // additional custom entries of the context menu
       context_menu->addSeparator ();   // separator before custom entries
@@ -239,17 +239,17 @@ octave_qscintilla::contextMenuEvent (QCo
               context_menu->addAction (tr ("Documentation on")
                                        + " " + _word_at_cursor,
                                        this, SLOT (contextmenu_doc (bool)));
               context_menu->addAction (tr ("Edit") + " " + _word_at_cursor,
                                        this, SLOT (contextmenu_edit (bool)));
             }
         }
       }
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
     else
       {
         // remove all standard actions from scintilla
         QList<QAction *> all_actions = context_menu->actions ();
         QAction* a;
 
         foreach (a, all_actions)
           context_menu->removeAction (a);
@@ -304,32 +304,32 @@ octave_qscintilla::contextmenu_run (bool
 }
 
 // wrappers for dbstop related context menu items
 
 // FIXME: Why can't the data be sent as the argument to the function???
 void
 octave_qscintilla::contextmenu_break_condition (bool)
 {
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
   QAction *action = qobject_cast<QAction *>(sender());
   QPoint local_pos = action->data ().value<QPoint> ();
 
   // pick point just right of margins, so lineAt doesn't give -1
   int margins = marginWidth (1) + marginWidth (2) + marginWidth (3);
   local_pos = QPoint (margins + 1, local_pos.y ());
 
   emit context_menu_break_condition_signal (lineAt (local_pos));
 #endif
 }
 
 void
 octave_qscintilla::contextmenu_break_once (const QPoint& local_pos)
 {
-#ifdef HAVE_QSCI_VERSION_2_6_0
+#if defined (HAVE_QSCI_VERSION_2_6_0)
   emit context_menu_break_once (lineAt (local_pos));
 #endif
 }
 
 void
 octave_qscintilla::text_changed ()
 {
   emit status_update (isUndoAvailable (), isRedoAvailable ());
diff --git a/libgui/src/m-editor/octave-txt-lexer.cc b/libgui/src/m-editor/octave-txt-lexer.cc
--- a/libgui/src/m-editor/octave-txt-lexer.cc
+++ b/libgui/src/m-editor/octave-txt-lexer.cc
@@ -17,21 +17,21 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Torsten <ttl@justmail.de>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 #include <Qsci/qscilexer.h>
 
 #include "octave-txt-lexer.h"
 
 QString
 octave_txt_lexer::description (int style) const
 {
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QKeySequence>
 #include <QApplication>
 #include <QLabel>
 #include <QMenuBar>
 #include <QMenu>
@@ -42,17 +42,17 @@ along with Octave; see the file COPYING.
 #include <QTextStream>
 #include <QThread>
 #include <QDateTime>
 #include <QDebug>
 #include <QTimer>
 
 #include <utility>
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 #  include "file-editor.h"
 #endif
 #include "main-window.h"
 #include "settings-dialog.h"
 #include "shortcut-manager.h"
 
 #include "Array.h"
 #include "cmd-edit.h"
@@ -62,17 +62,17 @@ along with Octave; see the file COPYING.
 #include "defaults.h"
 #include "symtab.h"
 #include "version.h"
 #include "utils.h"
 
 static file_editor_interface *
 create_default_editor (QWidget *p)
 {
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   return new file_editor (p);
 #else
   return 0;
 #endif
 }
 
 main_window::main_window (QWidget *p, bool start_gui)
   : QMainWindow (p),
@@ -169,17 +169,17 @@ main_window::focus_changed (QWidget *, Q
   int count = 0;                // fallback to prevent endless loop
 
   while (w_new && w_new != _main_tool_bar && count < 100)
     {
       dock = qobject_cast<octave_dock_widget *> (w_new);
       if (dock)
         break; // it is a QDockWidget ==> exit loop
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       if (qobject_cast<octave_qscintilla *> (w_new))
         {
           dock = static_cast<octave_dock_widget *> (editor_window);
           break; // it is the editor window ==> exit loop
         }
 #endif
 
       w_new = qobject_cast<QWidget *> (w_new->previousInFocusChain ());
@@ -793,17 +793,17 @@ main_window::confirm_shutdown_octave (vo
           int ans = QMessageBox::question (this, tr ("Octave"),
                                            tr ("Are you sure you want to exit Octave?"),
                                            QMessageBox::Ok | QMessageBox::Cancel, QMessageBox::Ok);
 
           if (ans != QMessageBox::Ok)
             closenow = false;
         }
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       if (closenow)
         closenow = editor_window->check_closing ();
 #endif
     }
 
   // Wait for link thread to go to sleep state.
   _octave_qt_link->mutex.lock ();
 
@@ -914,33 +914,33 @@ main_window::handle_enter_debugger (void
   setWindowTitle ("Octave (Debugging)");
 
   _debug_continue->setEnabled (true);
   _debug_step_into->setEnabled (true);
   _debug_step_over->setEnabled (true);
   _debug_step_out->setEnabled (true);
   _debug_quit->setEnabled (true);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   editor_window->handle_enter_debug_mode ();
 #endif
 }
 
 void
 main_window::handle_exit_debugger (void)
 {
   setWindowTitle ("Octave");
 
   _debug_continue->setEnabled (false);
   _debug_step_into->setEnabled (false);
   _debug_step_over->setEnabled (false);
   _debug_step_out->setEnabled (false);
   _debug_quit->setEnabled (false);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   editor_window->handle_exit_debug_mode ();
 #endif
 }
 
 void
 main_window::debug_continue (void)
 {
   octave_cmd_debug *cmd = new octave_cmd_debug ("cont", _suppress_dbg_location);
@@ -1140,17 +1140,17 @@ main_window::write_settings (void)
 // Connecting the signals emitted when the visibility of a widget changes.
 // This has to be done after the window is shown (see octave-gui.cc)
 void
 main_window::connect_visibility_changed (void)
 {
   foreach (octave_dock_widget *widget, dock_widget_list ())
     widget->connect_visibility_changed ();
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   editor_window->enable_menu_shortcuts (false);
 #endif
 }
 
 void
 main_window::copyClipboard (void)
 {
   if (_current_directory_combo_box->hasFocus ())
@@ -1378,17 +1378,17 @@ main_window::construct (void)
       setDockOptions (QMainWindow::AnimatedDocks
                       | QMainWindow::AllowNestedDocks
                       | QMainWindow::AllowTabbedDocks);
 
       addDockWidget (Qt::RightDockWidgetArea, command_window);
       addDockWidget (Qt::RightDockWidgetArea, doc_browser_window);
       tabifyDockWidget (command_window, doc_browser_window);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       addDockWidget (Qt::RightDockWidgetArea, editor_window);
       tabifyDockWidget (command_window, editor_window);
 #endif
 
       addDockWidget (Qt::LeftDockWidgetArea, file_browser_window);
       addDockWidget (Qt::LeftDockWidgetArea, workspace_window);
       addDockWidget (Qt::LeftDockWidgetArea, history_window);
 
@@ -1400,17 +1400,17 @@ main_window::construct (void)
 
       if (win_y > 720)
         win_y = 720;
 
       setGeometry (0, 0, win_x, win_y);
 
       setStatusBar (status_bar);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       connect (this,
                SIGNAL (insert_debugger_pointer_signal (const QString&, int)),
                editor_window,
                SLOT (handle_insert_debugger_pointer_request (const QString&, int)));
 
       connect (this,
                SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
                editor_window,
@@ -1462,17 +1462,17 @@ main_window::handle_octave_ready ()
       // the configured startup dir does not exist, take actual one
       startup_dir = QDir ();
     }
 
   set_current_working_directory (startup_dir.absolutePath ());
 
   if (editor_window)
     {
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       // Octave ready, determine whether to create an empty script.
       // This can not be done when the editor is created because all functions
       // must be known for the lexer's auto completion informations
       editor_window->empty_script (true, false);
 #endif
     }
 
   if (_start_gui)
@@ -1540,17 +1540,17 @@ main_window::construct_octave_qt_link (v
 
       connect (_octave_qt_link, SIGNAL (exit_debugger_signal ()),
                this, SLOT (handle_exit_debugger ()));
 
       connect (_octave_qt_link,
                SIGNAL (show_preferences_signal (void)),
                this, SLOT (process_settings_dialog_request ()));
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
       connect (_octave_qt_link,
                SIGNAL (edit_file_signal (const QString&)),
                editor_window,
                SLOT (handle_edit_file_request (const QString&)));
 #endif
 
       connect (_octave_qt_link,
                SIGNAL (insert_debugger_pointer_signal (const QString&, int)),
@@ -1610,17 +1610,17 @@ main_window::construct_menu_bar (void)
   construct_debug_menu (menu_bar);
 
   construct_window_menu (menu_bar);
 
   construct_help_menu (menu_bar);
 
   construct_news_menu (menu_bar);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   // call the editor to add actions which should also be available in the
   // editor's menu and tool bar
   QList<QAction*> shared_actions;
   shared_actions << _new_script_action
                  << _new_function_action
                  << _open_action
                  << _find_files_action
                  << _undo_action
@@ -1687,34 +1687,34 @@ main_window::construct_file_menu (QMenuB
   construct_new_menu (file_menu);
 
   _open_action
     = file_menu->addAction (resource_manager::icon ("document-open"),
                             tr ("Open..."));
   _open_action->setShortcutContext (Qt::ApplicationShortcut);
   _open_action->setToolTip (tr ("Open an existing file in editor"));
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   file_menu->addMenu (editor_window->get_mru_menu ());
 #endif
 
   file_menu->addSeparator ();
 
   _load_workspace_action
     = file_menu->addAction (tr ("Load Workspace..."));
 
   _save_workspace_action
     = file_menu->addAction (tr ("Save Workspace As..."));
 
   file_menu->addSeparator ();
 
   _exit_action = file_menu->addAction (tr ("Exit"));
   _exit_action->setShortcutContext (Qt::ApplicationShortcut);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   connect (_open_action, SIGNAL (triggered ()),
            editor_window, SLOT (request_open_file ()));
 #endif
 
   connect (_load_workspace_action, SIGNAL (triggered ()),
            this, SLOT (handle_load_workspace_request ()));
 
   connect (_save_workspace_action, SIGNAL (triggered ()),
@@ -1736,17 +1736,17 @@ main_window::construct_new_menu (QMenu *
 
   _new_function_action = new_menu->addAction (tr ("New Function..."));
   _new_function_action->setEnabled (true);
   _new_function_action->setShortcutContext (Qt::ApplicationShortcut);
 
   _new_figure_action = new_menu->addAction (tr ("New Figure"));
   _new_figure_action->setEnabled (true);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   connect (_new_script_action, SIGNAL (triggered ()),
            editor_window, SLOT (request_new_script ()));
 
   connect (_new_function_action, SIGNAL (triggered ()),
            editor_window, SLOT (request_new_function ()));
 #endif
 
   connect (_new_figure_action, SIGNAL (triggered ()),
@@ -1832,17 +1832,17 @@ main_window::construct_debug_menu_item (
                                         const char *member)
 {
   QAction *action = add_action (_debug_menu,
                                   resource_manager::icon (QString (icon)),
                                 item, member);
 
   action->setEnabled (false);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   editor_window->debug_menu ()->addAction (action);
   editor_window->toolbar ()->addAction (action);
 #endif
 
   return action;
 }
 
 void
@@ -1862,17 +1862,17 @@ main_window::construct_debug_menu (QMenu
                       "db-step-out", tr ("Step Out"),
                        SLOT (debug_step_out ()));
 
   _debug_continue = construct_debug_menu_item (
                       "db-cont", tr ("Continue"),
                        SLOT (debug_continue ()));
 
   _debug_menu->addSeparator ();
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   editor_window->debug_menu ()->addSeparator ();
 #endif
 
   _debug_quit = construct_debug_menu_item (
                       "db-stop", tr ("Quit Debug Mode"),
                        SLOT (debug_quit ()));
 }
 
@@ -2315,17 +2315,17 @@ main_window::set_global_shortcuts (bool 
 QList<octave_dock_widget *>
 main_window::dock_widget_list ()
 {
   QList<octave_dock_widget *> list = QList<octave_dock_widget *> ();
   list.append (static_cast<octave_dock_widget *> (command_window));
   list.append (static_cast<octave_dock_widget *> (history_window));
   list.append (static_cast<octave_dock_widget *> (file_browser_window));
   list.append (static_cast<octave_dock_widget *> (doc_browser_window));
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   list.append (static_cast<octave_dock_widget *> (editor_window));
 #endif
   list.append (static_cast<octave_dock_widget *> (workspace_window));
   return list;
 }
 
 void
 main_window::set_screen_size (int ht, int wd)
diff --git a/libgui/src/octave-cmd.cc b/libgui/src/octave-cmd.cc
--- a/libgui/src/octave-cmd.cc
+++ b/libgui/src/octave-cmd.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Torsten <ttl@justmail.de>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "octave-cmd.h"
 
 #include "octave-qt-link.h"
 #include "cmd-edit.h"
 #include "builtin-defun-decls.h"
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QToolBar>
 #include <QAction>
 #include <QHBoxLayout>
 #include <QLabel>
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QTextCodec>
 #include <QThread>
 #include <QTranslator>
 
diff --git a/libgui/src/octave-interpreter.cc b/libgui/src/octave-interpreter.cc
--- a/libgui/src/octave-interpreter.cc
+++ b/libgui/src/octave-interpreter.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <signal.h>
 
 #include "octave.h"
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QStringList>
 #include <QDialog>
 #include <QDir>
 #include <QPushButton>
 
diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: P. L. Lucas
 // Author: Jacob Dawid <jacob.dawid@cybercatalyst.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "parser.h"
 #include "procstream.h"
 #include <QFileInfo>
 #include <QDir>
 #include <QFile>
diff --git a/libgui/src/qtinfo/webinfo.cc b/libgui/src/qtinfo/webinfo.cc
--- a/libgui/src/qtinfo/webinfo.cc
+++ b/libgui/src/qtinfo/webinfo.cc
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: P. L. Lucas
 // Author: Jacob Dawid <jacob.dawid@cybercatalyst.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "webinfo.h"
 #include <QVBoxLayout>
 #include <QHBoxLayout>
 #include <QApplication>
 #include <QClipboard>
@@ -53,17 +53,17 @@ webinfo::webinfo (QWidget *p)
   hbox_layout->setMargin (0);
   hbox_layout->setSpacing (0);
   vbox_layout->addLayout (hbox_layout);
 
   _tab_bar = new QTabBar (this);
   _tab_bar->setSizePolicy (QSizePolicy::Preferred,QSizePolicy::Preferred);
   _tab_bar->setExpanding (false);
   _tab_bar->setTabsClosable (true);
-#ifdef HAVE_QTABWIDGET_SETMOVABLE
+#if defined (HAVE_QTABWIDGET_SETMOVABLE)
   _tab_bar->setMovable (true);
 #endif
   hbox_layout->addWidget (_tab_bar);
 
   _zoom_in_button = new QToolButton (this);
   _zoom_in_button->setIcon (resource_manager::icon ("zoom-in"));
   hbox_layout->addWidget (_zoom_in_button);
 
@@ -73,17 +73,17 @@ webinfo::webinfo (QWidget *p)
 
   _stacked_widget = new QStackedWidget (this);
   vbox_layout->addWidget (_stacked_widget);
 
   hbox_layout = new QHBoxLayout ();
   vbox_layout->addLayout (hbox_layout);
 
   _search_line_edit = new QLineEdit(this);
-#ifdef HAVE_SETPLACEHOLDERTEXT
+#if defined (HAVE_SETPLACEHOLDERTEXT)
   _search_line_edit->setPlaceholderText (
     tr ("Type here and press \'Return\' to search"));
 #endif
   hbox_layout->addWidget (_search_line_edit);
 
   _search_check_box = new QCheckBox (tr ("Global search"));
   hbox_layout->addWidget (_search_check_box);
 
diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <QFile>
 #include <QDir>
 #include <QNetworkProxy>
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -15,33 +15,33 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "resource-manager.h"
 #include "shortcut-manager.h"
 #include "workspace-model.h"
 #include "settings-dialog.h"
 #include "ui-settings-dialog.h"
 #include <QDir>
 #include <QFileInfo>
 #include <QFileDialog>
 #include <QVector>
 #include <QHash>
 #include <QTextCodec>
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 #  include "octave-qscintilla.h"
 #  include "octave-txt-lexer.h"
 #  include <QScrollArea>
 
 #  if defined (HAVE_QSCI_QSCILEXEROCTAVE_H)
 #    define HAVE_LEXER_OCTAVE 1
 #    include <Qsci/qscilexeroctave.h>
 #  elif defined (HAVE_QSCI_QSCILEXERMATLAB_H)
@@ -51,17 +51,17 @@ along with Octave; see the file COPYING.
 
 #  include <Qsci/qscilexercpp.h>
 #  include <Qsci/qscilexerbash.h>
 #  include <Qsci/qscilexerperl.h>
 #  include <Qsci/qscilexerbatch.h>
 #  include <Qsci/qscilexerdiff.h>
 #endif
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 
 static const int MaxLexerStyles = 64;
 static const int MaxStyleNumber = 128;
 
 static int
 get_valid_lexer_styles (QsciLexer *lexer, int styles[])
 {
   int max_style = 0;
@@ -424,17 +424,17 @@ settings_dialog::settings_dialog (QWidge
     settings->value ("editor/show_white_space", false).toBool ());
   ui->editor_ws_indent_checkbox->setChecked (
     settings->value ("editor/show_white_space_indent",false).toBool ());
   ui->cb_show_eol->setChecked (
     settings->value ("editor/show_eol_chars",false).toBool () );
   ui->cb_show_hscrollbar->setChecked (
     settings->value ("editor/show_hscroll_bar",true).toBool ());
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
 #  if defined (Q_OS_WIN32)
   int eol_mode = QsciScintilla::EolWindows;
 #elif defined (Q_OS_MAC)
   int eol_mode = QsciScintilla::EolMac;
 #else
   int eol_mode = QsciScintilla::EolUnix;
 #endif
 #else
@@ -558,17 +558,17 @@ settings_dialog::settings_dialog (QWidge
   connect (ui->btn_import_shortcut_set, SIGNAL (clicked ()),
            this, SLOT (import_shortcut_set ()));
   connect (ui->btn_export_shortcut_set, SIGNAL (clicked ()),
            this, SLOT (export_shortcut_set ()));
   connect (ui->btn_default_shortcut_set, SIGNAL (clicked ()),
            this, SLOT (default_shortcut_set ()));
 
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   // editor styles: create lexer, read settings, and create dialog elements
   QsciLexer *lexer;
 #if defined (HAVE_LEXER_OCTAVE)
   lexer = new QsciLexerOctave ();
   read_lexer_settings (ui, lexer, settings);
   delete lexer;
 #elif defined (HAVE_LEXER_MATLAB)
   lexer = new QsciLexerMatlab ();
@@ -872,17 +872,17 @@ settings_dialog::write_changed_settings 
   switch (ui->terminal_cursorType->currentIndex ())
     {
     case 0: cursorType = "ibeam"; break;
     case 1: cursorType = "block"; break;
     case 2: cursorType = "underline";  break;
     }
   settings->setValue ("terminal/cursorType", cursorType);
 
-#ifdef HAVE_QSCINTILLA
+#if defined (HAVE_QSCINTILLA)
   // editor styles: create lexer, get dialog contents, and write settings
   QsciLexer *lexer;
 #if defined (HAVE_LEXER_OCTAVE)
   lexer = new QsciLexerOctave ();
   write_lexer_settings (ui, lexer, settings);
   delete lexer;
 #elif defined (HAVE_LEXER_MATLAB)
   lexer = new QsciLexerMatlab ();
diff --git a/libgui/src/shortcut-manager.cc b/libgui/src/shortcut-manager.cc
--- a/libgui/src/shortcut-manager.cc
+++ b/libgui/src/shortcut-manager.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QtCore>
 #include <QMessageBox>
 #include <QDebug>
 #include <QGridLayout>
 #include <QVBoxLayout>
diff --git a/libgui/src/terminal-dock-widget.cc b/libgui/src/terminal-dock-widget.cc
--- a/libgui/src/terminal-dock-widget.cc
+++ b/libgui/src/terminal-dock-widget.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "terminal-dock-widget.h"
 
 terminal_dock_widget::terminal_dock_widget (QWidget *p)
   : octave_dock_widget (p), terminal (QTerminal::create (p))
 {
diff --git a/libgui/src/thread-manager.cc b/libgui/src/thread-manager.cc
--- a/libgui/src/thread-manager.cc
+++ b/libgui/src/thread-manager.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
 #  include <windows.h>
 #else
 #  include <pthread.h>
 #endif
diff --git a/libgui/src/welcome-wizard.cc b/libgui/src/welcome-wizard.cc
--- a/libgui/src/welcome-wizard.cc
+++ b/libgui/src/welcome-wizard.cc
@@ -16,26 +16,26 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QApplication>
 #include <QPushButton>
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 
-#ifdef __WIN32__
+#if defined (__WIN32__)
   #define WIN32_LEAN_AND_MEAN
   #include <windows.h>
 #endif
 
 #include "welcome-wizard.h"
 #include "resource-manager.h"
 
 static QLabel *
@@ -284,17 +284,17 @@ welcome_wizard::welcome_wizard (QWidget 
   setWindowTitle (tr ("Welcome to GNU Octave"));
 
   setEnabled (true);
   resize (600, 480);
   setMinimumSize (QSize (600, 480));
 
   show_page ();
 
-#ifdef __WIN32__
+#if defined (__WIN32__)
   // HACK to forceshow of dialog if started minimized
   ShowWindow((HWND)winId(), SW_SHOWNORMAL);
 #endif
 }
 
 void
 welcome_wizard::handle_web_connect_option (int state)
 {
diff --git a/libgui/src/workspace-model.cc b/libgui/src/workspace-model.cc
--- a/libgui/src/workspace-model.cc
+++ b/libgui/src/workspace-model.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QTreeWidget>
 #include <QSettings>
 
 #include "utils.h"
 #include "resource-manager.h"
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <QInputDialog>
 #include <QApplication>
 #include <QClipboard>
 #include <QMessageBox>
 #include <QLineEdit>
diff --git a/libinterp/build-env.in.cc b/libinterp/build-env.in.cc
--- a/libinterp/build-env.in.cc
+++ b/libinterp/build-env.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "build-env.h"
 
 namespace octave
 {
   namespace build_env
diff --git a/libinterp/corefcn/Cell.cc b/libinterp/corefcn/Cell.cc
--- a/libinterp/corefcn/Cell.cc
+++ b/libinterp/corefcn/Cell.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "idx-vector.h"
 
 #include "Cell.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/__contourc__.cc b/libinterp/corefcn/__contourc__.cc
--- a/libinterp/corefcn/__contourc__.cc
+++ b/libinterp/corefcn/__contourc__.cc
@@ -27,17 +27,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include "quit.h"
 
 #include "defun.h"
diff --git a/libinterp/corefcn/__dispatch__.cc b/libinterp/corefcn/__dispatch__.cc
--- a/libinterp/corefcn/__dispatch__.cc
+++ b/libinterp/corefcn/__dispatch__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <list>
 #include <map>
 #include <string>
 
 #include "Cell.h"
diff --git a/libinterp/corefcn/__dsearchn__.cc b/libinterp/corefcn/__dsearchn__.cc
--- a/libinterp/corefcn/__dsearchn__.cc
+++ b/libinterp/corefcn/__dsearchn__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <fstream>
 #include <string>
 
 #include "lo-math.h"
diff --git a/libinterp/corefcn/__ichol__.cc b/libinterp/corefcn/__ichol__.cc
--- a/libinterp/corefcn/__ichol__.cc
+++ b/libinterp/corefcn/__ichol__.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-locbuf.h"
 
 #include "defun.h"
 #include "error.h"
 #include "parse.h"
diff --git a/libinterp/corefcn/__ilu__.cc b/libinterp/corefcn/__ilu__.cc
--- a/libinterp/corefcn/__ilu__.cc
+++ b/libinterp/corefcn/__ilu__.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-locbuf.h"
 
 #include "defun.h"
 #include "error.h"
 #include "parse.h"
diff --git a/libinterp/corefcn/__lin_interpn__.cc b/libinterp/corefcn/__lin_interpn__.cc
--- a/libinterp/corefcn/__lin_interpn__.cc
+++ b/libinterp/corefcn/__lin_interpn__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-ieee.h"
 #include "dNDArray.h"
 #include "oct-locbuf.h"
 
 #include "defun.h"
@@ -51,17 +51,17 @@ lookup (const T *x, octave_idx_type n, T
 
   if (x[0] < x[n-1])
     {
       // increasing x
 
       if (y > x[n-1] || y < x[0])
         return -1;
 
-#ifdef EXHAUSTIF
+#if defined (EXHAUSTIF)
       for (j = 0; j < n - 1; j++)
         {
           if (x[j] <= y && y <= x[j+1])
             return j;
         }
 #else
       octave_idx_type j0 = 0;
       octave_idx_type j1 = n - 1;
@@ -86,17 +86,17 @@ lookup (const T *x, octave_idx_type n, T
   else
     {
       // decreasing x
       // previous code with x -> -x and y -> -y
 
       if (y > x[0] || y < x[n-1])
         return -1;
 
-#ifdef EXHAUSTIF
+#if defined (EXHAUSTIF)
       for (j = 0; j < n - 1; j++)
         {
           if (x[j+1] <= y && y <= x[j])
             return j;
         }
 #else
       octave_idx_type j0 = 0;
       octave_idx_type j1 = n - 1;
diff --git a/libinterp/corefcn/__luinc__.cc b/libinterp/corefcn/__luinc__.cc
--- a/libinterp/corefcn/__luinc__.cc
+++ b/libinterp/corefcn/__luinc__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/__magick_read__.cc b/libinterp/corefcn/__magick_read__.cc
--- a/libinterp/corefcn/__magick_read__.cc
+++ b/libinterp/corefcn/__magick_read__.cc
@@ -18,31 +18,31 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "file-stat.h"
 #include "oct-env.h"
 #include "oct-time.h"
 
 #include "defun.h"
 #include "error.h"
 #include "ov-struct.h"
 
 #include "errwarn.h"
 
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
 #include <Magick++.h>
 #include <clocale>
 
 // In theory, it should be enough to check the class:
 // Magick::ClassType
 // PseudoClass:
 // Image is composed of pixels which specify an index in a color palette.
@@ -749,17 +749,17 @@ DEFUN (__magick_read__, args, nargout,
 Read image with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imread} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
 {
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
   if (args.length () != 2 || ! args(0).is_string ())
     print_usage ();
 
   maybe_initialize_magick ();
 
   const octave_scalar_map options = args(1).xscalar_map_value ("__magick_read__: OPTIONS must be a struct");
 
@@ -860,17 +860,17 @@ Use @code{imread} instead.\n\
 #endif
 }
 
 /*
 ## No test needed for internal helper function.
 %!assert (1)
 */
 
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
 template <typename T>
 static uint32NDArray
 img_float2uint (const T& img)
 {
   typedef typename T::element_type P;
   uint32NDArray out (img.dims ());
 
@@ -1392,17 +1392,17 @@ DEFUN (__magick_write__, args, ,
 Write image with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imwrite} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
 {
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
   if (args.length () != 5 || ! args(0).is_string () || ! args(1).is_string ())
     print_usage ();
 
   maybe_initialize_magick ();
 
   const std::string filename = args(0).string_value ();
   const std::string ext = args(1).string_value ();
@@ -1570,17 +1570,17 @@ DEFUN (__magick_ping__, args, ,
 @deftypefn {} {} __magick_ping__ (@var{fname}, @var{idx})\n\
 Ping image information with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 \n\
 @seealso{imfinfo}\n\
 @end deftypefn")
 {
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
   if (args.length () < 1 || ! args(0).is_string ())
     print_usage ();
 
   maybe_initialize_magick ();
 
   const std::string filename = args(0).string_value ();
 
@@ -1618,17 +1618,17 @@ This is a private internal function not 
 
   octave_unused_parameter (args);
 
   err_disabled_feature ("imfinfo", "Image IO");
 
 #endif
 }
 
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
 static octave_value
 magick_to_octave_value (const Magick::CompressionType& magick)
 {
   switch (magick)
     {
     case Magick::NoCompression:
       return octave_value ("none");
@@ -1796,17 +1796,17 @@ DEFUN (__magick_finfo__, args, ,
 Read image information with GraphicsMagick or ImageMagick.\n\
 \n\
 This is a private internal function not intended for direct use.\n\
 Use @code{imfinfo} instead.\n\
 \n\
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
 {
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
   if (args.length () < 1 || ! args(0).is_string ())
     print_usage ();
 
   maybe_initialize_magick ();
 
   const std::string filename = args(0).string_value ();
 
@@ -2249,17 +2249,17 @@ Fill formats info with GraphicsMagick Co
 @seealso{imfinfo, imformats, imread, imwrite}\n\
 @end deftypefn")
 {
   if (args.length () != 1 || ! args(0).is_map ())
     print_usage ();
 
   octave_map formats = args(0).map_value ();
 
-#ifdef HAVE_MAGICK
+#if defined (HAVE_MAGICK)
 
   maybe_initialize_magick ();
 
   for (octave_idx_type idx = 0; idx < formats.numel (); idx++)
     {
       try
         {
           octave_scalar_map fmt = formats.checkelem (idx);
diff --git a/libinterp/corefcn/__pchip_deriv__.cc b/libinterp/corefcn/__pchip_deriv__.cc
--- a/libinterp/corefcn/__pchip_deriv__.cc
+++ b/libinterp/corefcn/__pchip_deriv__.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/__qp__.cc b/libinterp/corefcn/__qp__.cc
--- a/libinterp/corefcn/__qp__.cc
+++ b/libinterp/corefcn/__qp__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include "chol.h"
 #include "svd.h"
 #include "mx-m-dm.h"
diff --git a/libinterp/corefcn/balance.cc b/libinterp/corefcn/balance.cc
--- a/libinterp/corefcn/balance.cc
+++ b/libinterp/corefcn/balance.cc
@@ -18,17 +18,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: A. S. Hodel <scotte@eng.auburn.edu>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "CMatrix.h"
 #include "aepbalance.h"
 #include "dMatrix.h"
diff --git a/libinterp/corefcn/besselj.cc b/libinterp/corefcn/besselj.cc
--- a/libinterp/corefcn/besselj.cc
+++ b/libinterp/corefcn/besselj.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-specfun.h"
 #include "quit.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/betainc.cc b/libinterp/corefcn/betainc.cc
--- a/libinterp/corefcn/betainc.cc
+++ b/libinterp/corefcn/betainc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-specfun.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <limits>
 
 #include "str-vec.h"
 #include "quit.h"
 
diff --git a/libinterp/corefcn/bsxfun.cc b/libinterp/corefcn/bsxfun.cc
--- a/libinterp/corefcn/bsxfun.cc
+++ b/libinterp/corefcn/bsxfun.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <vector>
 #include <list>
 
 #include "lo-mappers.h"
diff --git a/libinterp/corefcn/c-file-ptr-stream.cc b/libinterp/corefcn/c-file-ptr-stream.cc
--- a/libinterp/corefcn/c-file-ptr-stream.cc
+++ b/libinterp/corefcn/c-file-ptr-stream.cc
@@ -15,33 +15,33 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "c-file-ptr-stream.h"
 
-#ifndef SEEK_SET
+#if ! defined (SEEK_SET)
 #  define SEEK_SET 0
 #endif
 
-#ifndef SEEK_CUR
+#if ! defined (SEEK_CUR)
 #  define SEEK_CUR 1
 #endif
 
-#ifndef SEEK_END
+#if ! defined (SEEK_END)
 #  define SEEK_END 2
 #endif
 
 c_file_ptr_buf::~c_file_ptr_buf (void)
 {
   buf_close ();
 }
 
@@ -177,17 +177,17 @@ c_file_ptr_buf::tell (void)
 }
 
 int
 c_file_ptr_buf::file_close (FILE *f)
 {
   return gnulib::fclose (f);
 }
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
 c_zfile_ptr_buf::~c_zfile_ptr_buf (void)
 {
   buf_close ();
 }
 
 // FIXME: I'm sure there is room for improvement here...
 
diff --git a/libinterp/corefcn/c-file-ptr-stream.h b/libinterp/corefcn/c-file-ptr-stream.h
--- a/libinterp/corefcn/c-file-ptr-stream.h
+++ b/libinterp/corefcn/c-file-ptr-stream.h
@@ -134,19 +134,19 @@ private:
 
 typedef c_file_ptr_stream<std::istream, FILE *, c_file_ptr_buf>
   i_c_file_ptr_stream;
 typedef c_file_ptr_stream<std::ostream, FILE *, c_file_ptr_buf>
   o_c_file_ptr_stream;
 typedef c_file_ptr_stream<std::iostream, FILE *, c_file_ptr_buf>
   io_c_file_ptr_stream;
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
-#ifdef HAVE_ZLIB_H
+#if defined (HAVE_ZLIB_H)
 #  include <zlib.h>
 #endif
 
 class
 c_zfile_ptr_buf : public std::streambuf
 {
 public:
 
diff --git a/libinterp/corefcn/cdisplay.c b/libinterp/corefcn/cdisplay.c
--- a/libinterp/corefcn/cdisplay.c
+++ b/libinterp/corefcn/cdisplay.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <stdlib.h>
 
 #if defined (OCTAVE_USE_WINDOWS_API)
 #include <windows.h>
 #elif defined (HAVE_FRAMEWORK_CARBON)
diff --git a/libinterp/corefcn/cdisplay.h b/libinterp/corefcn/cdisplay.h
--- a/libinterp/corefcn/cdisplay.h
+++ b/libinterp/corefcn/cdisplay.h
@@ -20,21 +20,21 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_cdisplay_h)
 #define octave_cdisplay_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 OCTINTERP_API extern const char *
 octave_get_display_info (int *ht, int *wd, int *dp, double *rx, double *ry,
                          int *dpy_avail);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/libinterp/corefcn/cellfun.cc b/libinterp/corefcn/cellfun.cc
--- a/libinterp/corefcn/cellfun.cc
+++ b/libinterp/corefcn/cellfun.cc
@@ -18,17 +18,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <vector>
 #include <list>
 #include <memory>
 
diff --git a/libinterp/corefcn/coct-hdf5-types.c b/libinterp/corefcn/coct-hdf5-types.c
--- a/libinterp/corefcn/coct-hdf5-types.c
+++ b/libinterp/corefcn/coct-hdf5-types.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include "oct-hdf5.h"
 
 // Programming Note: This file exists so that we can hide the use
 // of macros and C-style casts in a C warnings about using old-style
 // casts in C++.
diff --git a/libinterp/corefcn/colloc.cc b/libinterp/corefcn/colloc.cc
--- a/libinterp/corefcn/colloc.cc
+++ b/libinterp/corefcn/colloc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "CollocWt.h"
 #include "lo-mappers.h"
 
diff --git a/libinterp/corefcn/comment-list.cc b/libinterp/corefcn/comment-list.cc
--- a/libinterp/corefcn/comment-list.cc
+++ b/libinterp/corefcn/comment-list.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-utils.h"
 
 #include "comment-list.h"
 #include "error.h"
 
diff --git a/libinterp/corefcn/conv2.cc b/libinterp/corefcn/conv2.cc
--- a/libinterp/corefcn/conv2.cc
+++ b/libinterp/corefcn/conv2.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-convn.h"
 
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
diff --git a/libinterp/corefcn/daspk.cc b/libinterp/corefcn/daspk.cc
--- a/libinterp/corefcn/daspk.cc
+++ b/libinterp/corefcn/daspk.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <iomanip>
 #include <iostream>
 
diff --git a/libinterp/corefcn/dasrt.cc b/libinterp/corefcn/dasrt.cc
--- a/libinterp/corefcn/dasrt.cc
+++ b/libinterp/corefcn/dasrt.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "DASRT.h"
 #include "lo-mappers.h"
diff --git a/libinterp/corefcn/dassl.cc b/libinterp/corefcn/dassl.cc
--- a/libinterp/corefcn/dassl.cc
+++ b/libinterp/corefcn/dassl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <iomanip>
 #include <iostream>
 
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -18,24 +18,24 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sys/types.h>
 #include <sys/times.h>
 
-#ifdef HAVE_SYS_RESOURCE_H
+#if defined (HAVE_SYS_RESOURCE_H)
 #  include <sys/resource.h>
 #endif
 
 #include <cfloat>
 #include <ctime>
 
 #include <string>
 
diff --git a/libinterp/corefcn/debug.cc b/libinterp/corefcn/debug.cc
--- a/libinterp/corefcn/debug.cc
+++ b/libinterp/corefcn/debug.cc
@@ -15,17 +15,17 @@ ANY WARRANTY; without even the implied w
 FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <deque>
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 #include <limits>
@@ -203,17 +203,17 @@ get_user_code (const std::string& fname 
 
       if (fcn.is_defined () && fcn.is_user_code ())
         dbg_fcn = fcn.user_code_value ();
     }
 
   return dbg_fcn;
 }
 
-#ifdef DBSTOP_NANINF
+#if defined (DBSTOP_NANINF)
 #  include "sigfpe.cc"
 #endif
 
 enum
 dbstop_args {dbstop_in, dbstop_at, dbstop_if, dbstop_none};
 
 // Parse parameters (args) of dbstop and dbclear commands.
 // For dbstop, who=="dbstop"; for dbclear, who=="dbclear".
@@ -373,17 +373,17 @@ parse_dbfunction_params (const char *who
                     stop_flag = &Vdebug_on_caught;
                     pos++;
                   }
                 else if (condition == "interrupt")
                   {
                     Vdebug_on_interrupt = on_off;
                   }
                 else if (condition == "naninf")
-#ifdef DBSTOP_NANINF
+#if defined (DBSTOP_NANINF)
                   {
                     Vdebug_on_naninf = on_off;
                     enable_fpe (on_off);
                   }
 #else
                   warning ("%s: condition '%s' not yet supported",
                            who, condition.c_str ());
 #endif
diff --git a/libinterp/corefcn/defaults.cc b/libinterp/corefcn/defaults.cc
--- a/libinterp/corefcn/defaults.cc
+++ b/libinterp/corefcn/defaults.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <algorithm>
 #include <iostream>
 #include <string>
diff --git a/libinterp/corefcn/defaults.in.h b/libinterp/corefcn/defaults.in.h
--- a/libinterp/corefcn/defaults.in.h
+++ b/libinterp/corefcn/defaults.in.h
@@ -25,173 +25,173 @@ along with Octave; see the file COPYING.
 #define octave_defaults_h 1
 
 #include "octave-config.h"
 
 #include <string>
 
 #include "pathsearch.h"
 
-#ifndef OCTAVE_CANONICAL_HOST_TYPE
+#if ! defined (OCTAVE_CANONICAL_HOST_TYPE)
 #  define OCTAVE_CANONICAL_HOST_TYPE %OCTAVE_CANONICAL_HOST_TYPE%
 #endif
 
-#ifndef OCTAVE_DEFAULT_PAGER
+#if ! defined (OCTAVE_DEFAULT_PAGER)
 #  define OCTAVE_DEFAULT_PAGER %OCTAVE_DEFAULT_PAGER%
 #endif
 
-#ifndef OCTAVE_ARCHLIBDIR
+#if ! defined (OCTAVE_ARCHLIBDIR)
 #  define OCTAVE_ARCHLIBDIR %OCTAVE_ARCHLIBDIR%
 #endif
 
-#ifndef OCTAVE_BINDIR
+#if ! defined (OCTAVE_BINDIR)
 #  define OCTAVE_BINDIR %OCTAVE_BINDIR%
 #endif
 
-#ifndef OCTAVE_DATADIR
+#if ! defined (OCTAVE_DATADIR)
 #  define OCTAVE_DATADIR %OCTAVE_DATADIR%
 #endif
 
-#ifndef OCTAVE_DATAROOTDIR
+#if ! defined (OCTAVE_DATAROOTDIR)
 #  define OCTAVE_DATAROOTDIR %OCTAVE_DATAROOTDIR%
 #endif
 
-#ifndef OCTAVE_DOC_CACHE_FILE
+#if ! defined (OCTAVE_DOC_CACHE_FILE)
 #  define OCTAVE_DOC_CACHE_FILE %OCTAVE_DOC_CACHE_FILE%
 #endif
 
-#ifndef OCTAVE_TEXI_MACROS_FILE
+#if ! defined (OCTAVE_TEXI_MACROS_FILE)
 #  define OCTAVE_TEXI_MACROS_FILE %OCTAVE_TEXI_MACROS_FILE%
 #endif
 
-#ifndef OCTAVE_EXEC_PREFIX
+#if ! defined (OCTAVE_EXEC_PREFIX)
 #  define OCTAVE_EXEC_PREFIX %OCTAVE_EXEC_PREFIX%
 #endif
 
-#ifndef OCTAVE_FCNFILEDIR
+#if ! defined (OCTAVE_FCNFILEDIR)
 #  define OCTAVE_FCNFILEDIR %OCTAVE_FCNFILEDIR%
 #endif
 
-#ifndef OCTAVE_IMAGEDIR
+#if ! defined (OCTAVE_IMAGEDIR)
 #  define OCTAVE_IMAGEDIR %OCTAVE_IMAGEDIR%
 #endif
 
-#ifndef OCTAVE_INCLUDEDIR
+#if ! defined (OCTAVE_INCLUDEDIR)
 #  define OCTAVE_INCLUDEDIR %OCTAVE_INCLUDEDIR%
 #endif
 
-#ifndef OCTAVE_INFODIR
+#if ! defined (OCTAVE_INFODIR)
 #  define OCTAVE_INFODIR %OCTAVE_INFODIR%
 #endif
 
-#ifndef OCTAVE_INFOFILE
+#if ! defined (OCTAVE_INFOFILE)
 #  define OCTAVE_INFOFILE %OCTAVE_INFOFILE%
 #endif
 
-#ifndef OCTAVE_LIBDIR
+#if ! defined (OCTAVE_LIBDIR)
 #  define OCTAVE_LIBDIR %OCTAVE_LIBDIR%
 #endif
 
-#ifndef OCTAVE_LIBEXECDIR
+#if ! defined (OCTAVE_LIBEXECDIR)
 #  define OCTAVE_LIBEXECDIR %OCTAVE_LIBEXECDIR%
 #endif
 
-#ifndef OCTAVE_LIBEXECDIR
+#if ! defined (OCTAVE_LIBEXECDIR)
 #  define OCTAVE_LIBEXECDIR %OCTAVE_LIBEXECDIR%
 #endif
 
-#ifndef OCTAVE_LOCALAPIFCNFILEDIR
+#if ! defined (OCTAVE_LOCALAPIFCNFILEDIR)
 #  define OCTAVE_LOCALAPIFCNFILEDIR %OCTAVE_LOCALAPIFCNFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALAPIOCTFILEDIR
+#if ! defined (OCTAVE_LOCALAPIOCTFILEDIR)
 #  define OCTAVE_LOCALAPIOCTFILEDIR %OCTAVE_LOCALAPIOCTFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALARCHLIBDIR
+#if ! defined (OCTAVE_LOCALARCHLIBDIR)
 #  define OCTAVE_LOCALARCHLIBDIR %OCTAVE_LOCALARCHLIBDIR%
 #endif
 
-#ifndef OCTAVE_LOCALFCNFILEDIR
+#if ! defined (OCTAVE_LOCALFCNFILEDIR)
 #  define OCTAVE_LOCALFCNFILEDIR %OCTAVE_LOCALFCNFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALOCTFILEDIR
+#if ! defined (OCTAVE_LOCALOCTFILEDIR)
 #  define OCTAVE_LOCALOCTFILEDIR %OCTAVE_LOCALOCTFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALSTARTUPFILEDIR
+#if ! defined (OCTAVE_LOCALSTARTUPFILEDIR)
 #  define OCTAVE_LOCALSTARTUPFILEDIR %OCTAVE_LOCALSTARTUPFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALAPIARCHLIBDIR
+#if ! defined (OCTAVE_LOCALAPIARCHLIBDIR)
 #  define OCTAVE_LOCALAPIARCHLIBDIR %OCTAVE_LOCALAPIARCHLIBDIR%
 #endif
 
-#ifndef OCTAVE_LOCALVERARCHLIBDIR
+#if ! defined (OCTAVE_LOCALVERARCHLIBDIR)
 #  define OCTAVE_LOCALVERARCHLIBDIR %OCTAVE_LOCALVERARCHLIBDIR%
 #endif
 
-#ifndef OCTAVE_LOCALVERFCNFILEDIR
+#if ! defined (OCTAVE_LOCALVERFCNFILEDIR)
 #  define OCTAVE_LOCALVERFCNFILEDIR %OCTAVE_LOCALVERFCNFILEDIR%
 #endif
 
-#ifndef OCTAVE_LOCALVEROCTFILEDIR
+#if ! defined (OCTAVE_LOCALVEROCTFILEDIR)
 #  define OCTAVE_LOCALVEROCTFILEDIR %OCTAVE_LOCALVEROCTFILEDIR%
 #endif
 
-#ifndef OCTAVE_MAN1DIR
+#if ! defined (OCTAVE_MAN1DIR)
 #  define OCTAVE_MAN1DIR %OCTAVE_MAN1DIR%
 #endif
 
-#ifndef OCTAVE_MAN1EXT
+#if ! defined (OCTAVE_MAN1EXT)
 #  define OCTAVE_MAN1EXT %OCTAVE_MAN1EXT%
 #endif
 
-#ifndef OCTAVE_MANDIR
+#if ! defined (OCTAVE_MANDIR)
 #  define OCTAVE_MANDIR %OCTAVE_MANDIR%
 #endif
 
-#ifndef OCTAVE_OCTDATADIR
+#if ! defined (OCTAVE_OCTDATADIR)
 #  define OCTAVE_OCTDATADIR %OCTAVE_OCTDATADIR%
 #endif
 
-#ifndef OCTAVE_OCTFILEDIR
+#if ! defined (OCTAVE_OCTFILEDIR)
 #  define OCTAVE_OCTFILEDIR %OCTAVE_OCTFILEDIR%
 #endif
 
-#ifndef OCTAVE_OCTETCDIR
+#if ! defined (OCTAVE_OCTETCDIR)
 #  define OCTAVE_OCTETCDIR %OCTAVE_OCTETCDIR%
 #endif
 
-#ifndef OCTAVE_OCTLOCALEDIR
+#if ! defined (OCTAVE_OCTLOCALEDIR)
 #  define OCTAVE_OCTLOCALEDIR %OCTAVE_OCTLOCALEDIR%
 #endif
 
-#ifndef OCTAVE_OCTINCLUDEDIR
+#if ! defined (OCTAVE_OCTINCLUDEDIR)
 #  define OCTAVE_OCTINCLUDEDIR %OCTAVE_OCTINCLUDEDIR%
 #endif
 
-#ifndef OCTAVE_OCTLIBDIR
+#if ! defined (OCTAVE_OCTLIBDIR)
 #  define OCTAVE_OCTLIBDIR %OCTAVE_OCTLIBDIR%
 #endif
 
-#ifndef OCTAVE_OCTTESTSDIR
+#if ! defined (OCTAVE_OCTTESTSDIR)
 #  define OCTAVE_OCTTESTSDIR %OCTAVE_OCTTESTSDIR%
 #endif
 
-#ifndef OCTAVE_PREFIX
+#if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
-#ifndef OCTAVE_STARTUPFILEDIR
+#if ! defined (OCTAVE_STARTUPFILEDIR)
 #  define OCTAVE_STARTUPFILEDIR %OCTAVE_STARTUPFILEDIR%
 #endif
 
-#ifndef OCTAVE_RELEASE
+#if ! defined (OCTAVE_RELEASE)
 #  define OCTAVE_RELEASE %OCTAVE_RELEASE%
 #endif
 
 extern OCTINTERP_API std::string Voctave_home;
 
 extern OCTINTERP_API std::string Vbin_dir;
 extern OCTINTERP_API std::string Vinfo_dir;
 extern OCTINTERP_API std::string Vdata_dir;
diff --git a/libinterp/corefcn/defun.cc b/libinterp/corefcn/defun.cc
--- a/libinterp/corefcn/defun.cc
+++ b/libinterp/corefcn/defun.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sstream>
 #include <iostream>
 #include <string>
 
 #include "defun.h"
diff --git a/libinterp/corefcn/det.cc b/libinterp/corefcn/det.cc
--- a/libinterp/corefcn/det.cc
+++ b/libinterp/corefcn/det.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "DET.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/dirfns.cc b/libinterp/corefcn/dirfns.cc
--- a/libinterp/corefcn/dirfns.cc
+++ b/libinterp/corefcn/dirfns.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdio>
 #include <cstddef>
 #include <cstdlib>
 #include <cstring>
diff --git a/libinterp/corefcn/display.cc b/libinterp/corefcn/display.cc
--- a/libinterp/corefcn/display.cc
+++ b/libinterp/corefcn/display.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "singleton-cleanup.h"
 
 #include "cdisplay.h"
 #include "display.h"
 #include "error.h"
diff --git a/libinterp/corefcn/dlmread.cc b/libinterp/corefcn/dlmread.cc
--- a/libinterp/corefcn/dlmread.cc
+++ b/libinterp/corefcn/dlmread.cc
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Adapted from previous version of dlmread.occ as authored by Kai
 // Habel, but core code has been completely re-written.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <fstream>
 #include <limits>
 
 #include "file-ops.h"
diff --git a/libinterp/corefcn/dot.cc b/libinterp/corefcn/dot.cc
--- a/libinterp/corefcn/dot.cc
+++ b/libinterp/corefcn/dot.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "f77-fcn.h"
 #include "mx-base.h"
 #include "error.h"
 #include "defun.h"
 #include "parse.h"
diff --git a/libinterp/corefcn/dynamic-ld.cc b/libinterp/corefcn/dynamic-ld.cc
--- a/libinterp/corefcn/dynamic-ld.cc
+++ b/libinterp/corefcn/dynamic-ld.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <list>
 
 #include "file-stat.h"
 #include "oct-env.h"
diff --git a/libinterp/corefcn/eig.cc b/libinterp/corefcn/eig.cc
--- a/libinterp/corefcn/eig.cc
+++ b/libinterp/corefcn/eig.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "EIG.h"
 #include "fEIG.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/ellipj.cc b/libinterp/corefcn/ellipj.cc
--- a/libinterp/corefcn/ellipj.cc
+++ b/libinterp/corefcn/ellipj.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "lo-specfun.h"
 
 DEFUN (ellipj, args, ,
diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdarg>
 #include <cstring>
 
 #include <iomanip>
 #include <iostream>
diff --git a/libinterp/corefcn/errwarn.cc b/libinterp/corefcn/errwarn.cc
--- a/libinterp/corefcn/errwarn.cc
+++ b/libinterp/corefcn/errwarn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/event-queue.cc b/libinterp/corefcn/event-queue.cc
--- a/libinterp/corefcn/event-queue.cc
+++ b/libinterp/corefcn/event-queue.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "event-queue.h"
 
 void
 event_queue_safe::warn_unhandled_exception (void) const
diff --git a/libinterp/corefcn/fft.cc b/libinterp/corefcn/fft.cc
--- a/libinterp/corefcn/fft.cc
+++ b/libinterp/corefcn/fft.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-mappers.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/fft2.cc b/libinterp/corefcn/fft2.cc
--- a/libinterp/corefcn/fft2.cc
+++ b/libinterp/corefcn/fft2.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-mappers.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/fftn.cc b/libinterp/corefcn/fftn.cc
--- a/libinterp/corefcn/fftn.cc
+++ b/libinterp/corefcn/fftn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-mappers.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -29,34 +29,34 @@ along with Octave; see the file COPYING.
 //   pclose
 //   execute       (now popen2.m)
 //   sync_system   (now merged with system)
 //   async_system  (now merged with system)
 
 // Extensively revised by John W. Eaton <jwe@octave.org>,
 // April 1996.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdio>
 
 #include <iostream>
 #include <limits>
 #include <stack>
 #include <string>
 #include <vector>
 
 #include <fcntl.h>
 #include <sys/types.h>
 #include <unistd.h>
 
-#ifdef HAVE_ZLIB_H
+#if defined (HAVE_ZLIB_H)
 #  include <zlib.h>
 #endif
 
 #include "error.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-ieee.h"
 #include "oct-env.h"
diff --git a/libinterp/corefcn/filter.cc b/libinterp/corefcn/filter.cc
--- a/libinterp/corefcn/filter.cc
+++ b/libinterp/corefcn/filter.cc
@@ -23,17 +23,17 @@ along with Octave; see the file COPYING.
 // Based on Tony Richardson's filter.m.
 //
 // Originally translated to C++ by KH (Kurt.Hornik@wu-wien.ac.at)
 // with help from Fritz Leisch and Andreas Weingessel on Oct 20, 1994.
 //
 // Rewritten to use templates to handle both real and complex cases by
 // jwe, Wed Nov  1 19:15:29 1995.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "quit.h"
 
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
diff --git a/libinterp/corefcn/find.cc b/libinterp/corefcn/find.cc
--- a/libinterp/corefcn/find.cc
+++ b/libinterp/corefcn/find.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "quit.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/ft-text-renderer.cc b/libinterp/corefcn/ft-text-renderer.cc
--- a/libinterp/corefcn/ft-text-renderer.cc
+++ b/libinterp/corefcn/ft-text-renderer.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "base-text-renderer.h"
 
 #if defined (HAVE_FREETYPE)
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
diff --git a/libinterp/corefcn/gammainc.cc b/libinterp/corefcn/gammainc.cc
--- a/libinterp/corefcn/gammainc.cc
+++ b/libinterp/corefcn/gammainc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-specfun.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/gcd.cc b/libinterp/corefcn/gcd.cc
--- a/libinterp/corefcn/gcd.cc
+++ b/libinterp/corefcn/gcd.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "dNDArray.h"
 #include "CNDArray.h"
 #include "fNDArray.h"
 #include "fCNDArray.h"
 #include "lo-mappers.h"
diff --git a/libinterp/corefcn/getgrent.cc b/libinterp/corefcn/getgrent.cc
--- a/libinterp/corefcn/getgrent.cc
+++ b/libinterp/corefcn/getgrent.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <sys/types.h>
 
 #include "oct-group.h"
diff --git a/libinterp/corefcn/getpwent.cc b/libinterp/corefcn/getpwent.cc
--- a/libinterp/corefcn/getpwent.cc
+++ b/libinterp/corefcn/getpwent.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <sys/types.h>
 
 #include "oct-passwd.h"
diff --git a/libinterp/corefcn/getrusage.cc b/libinterp/corefcn/getrusage.cc
--- a/libinterp/corefcn/getrusage.cc
+++ b/libinterp/corefcn/getrusage.cc
@@ -15,25 +15,25 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sys/time.h>
 #include <sys/times.h>
 #include <sys/types.h>
 
-#ifdef HAVE_SYS_RESOURCE_H
+#if defined (HAVE_SYS_RESOURCE_H)
 #  include <sys/resource.h>
 #endif
 
 #if defined (HAVE_SYS_PARAM_H)
 #  include <sys/param.h>
 #endif
 
 #include "defun.h"
@@ -48,17 +48,17 @@ along with Octave; see the file COPYING.
 #    define HZ CLK_TCK
 #  elif defined (USG)
 #    define HZ 100
 #  else
 #    define HZ 60
 #  endif
 #endif
 
-#ifndef RUSAGE_SELF
+#if ! defined (RUSAGE_SELF)
 #  define RUSAGE_SELF 0
 #endif
 
 // System resource functions.
 
 DEFUN (getrusage, , ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} getrusage ()\n\
diff --git a/libinterp/corefcn/givens.cc b/libinterp/corefcn/givens.cc
--- a/libinterp/corefcn/givens.cc
+++ b/libinterp/corefcn/givens.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Originally written by A. S. Hodel <scotte@eng.auburn.edu>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
 
 DEFUN (givens, args, nargout,
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -15,23 +15,23 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
-#ifdef HAVE_WINDOWS_H
+#if defined (HAVE_WINDOWS_H)
 #  define WIN32_LEAN_AND_MEAN
 #  include <windows.h>
 #endif
 
 #include <lo-mappers.h>
 #include "oct-locbuf.h"
 #include "oct-refcount.h"
 
@@ -67,17 +67,17 @@ enum
   NONE,
   //FLAT,  // Already declared in anonymous enum for color mode
   GOURAUD = 2
 };
 
 // Win32 API requires the CALLBACK attributes for
 // GLU callback functions. Define it to empty on
 // other platforms.
-#ifndef CALLBACK
+#if ! defined (CALLBACK)
 #  define CALLBACK
 #endif
 
 class
 opengl_texture
 {
 protected:
   class texture_rep
diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -15,25 +15,25 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Both header files are required outside of HAVE_GLP2S_H
 #include "errwarn.h"
 #include "gl2ps-print.h"
 
-#ifdef HAVE_GL2PS_H
+#if defined (HAVE_GL2PS_H)
 
 #include <cstdio>
 #include <limits>
 #include <unistd.h>
 
 #include <gl2ps.h>
 
 #include "lo-mappers.h"
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <cfloat>
 #include <cstdlib>
 #include <ctime>
 
diff --git a/libinterp/corefcn/gripes.cc b/libinterp/corefcn/gripes.cc
--- a/libinterp/corefcn/gripes.cc
+++ b/libinterp/corefcn/gripes.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // FIXME: All gripe_XXX functions deprecated in 4.2.  Remove file in 4.6
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/hash.cc b/libinterp/corefcn/hash.cc
--- a/libinterp/corefcn/hash.cc
+++ b/libinterp/corefcn/hash.cc
@@ -29,17 +29,17 @@ The GNULIB, contains even more HMAC base
 https://www.gnu.org/software/gnulib/MODULES.html#module=crypto/hmac-md5
 so a future project might be including these algorithms as well, adding
 a third key input parameter.  There is also a GNULIB "high-level"
 interface to Libcrypt. It might be easier to use, but it introduces
 a new build dependency, so better stick to the "low-level" functions
 for now.
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 #include <iomanip>
 #include <sstream>
 
 #include "defun.h"
diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <algorithm>
 #include <iostream>
diff --git a/libinterp/corefcn/hess.cc b/libinterp/corefcn/hess.cc
--- a/libinterp/corefcn/hess.cc
+++ b/libinterp/corefcn/hess.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "hess.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/hex2num.cc b/libinterp/corefcn/hex2num.cc
--- a/libinterp/corefcn/hex2num.cc
+++ b/libinterp/corefcn/hex2num.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/input.cc b/libinterp/corefcn/input.cc
--- a/libinterp/corefcn/input.cc
+++ b/libinterp/corefcn/input.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Get command input interactively or from files.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
 #include <cassert>
 
diff --git a/libinterp/corefcn/inv.cc b/libinterp/corefcn/inv.cc
--- a/libinterp/corefcn/inv.cc
+++ b/libinterp/corefcn/inv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "ops.h"
diff --git a/libinterp/corefcn/jit-ir.cc b/libinterp/corefcn/jit-ir.cc
--- a/libinterp/corefcn/jit-ir.cc
+++ b/libinterp/corefcn/jit-ir.cc
@@ -21,25 +21,25 @@ along with Octave; see the file COPYING.
 */
 
 // Author: Max Brister <max@2bass.com>
 
 // defines required by llvm
 #define __STDC_LIMIT_MACROS
 #define __STDC_CONSTANT_MACROS
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include "jit-ir.h"
 
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
 #  include <llvm/IR/BasicBlock.h>
 #  include <llvm/IR/Instructions.h>
 #else
 #  include <llvm/BasicBlock.h>
 #  include <llvm/Instructions.h>
 #endif
 
 #include "error.h"
diff --git a/libinterp/corefcn/jit-ir.h b/libinterp/corefcn/jit-ir.h
--- a/libinterp/corefcn/jit-ir.h
+++ b/libinterp/corefcn/jit-ir.h
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 // Author: Max Brister <max@2bass.com>
 
 #if ! defined (octave_jit_ir_h)
 #define octave_jit_ir_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include <list>
 #include <stack>
 #include <set>
 
 #include "jit-typeinfo.h"
 
 // The low level octave jit ir
diff --git a/libinterp/corefcn/jit-typeinfo.cc b/libinterp/corefcn/jit-typeinfo.cc
--- a/libinterp/corefcn/jit-typeinfo.cc
+++ b/libinterp/corefcn/jit-typeinfo.cc
@@ -21,47 +21,47 @@ along with Octave; see the file COPYING.
 */
 
 // Author: Max Brister <max@2bass.com>
 
 // defines required by llvm
 #define __STDC_LIMIT_MACROS
 #define __STDC_CONSTANT_MACROS
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include "jit-typeinfo.h"
 
-#ifdef HAVE_LLVM_IR_VERIFIER_H
+#if defined (HAVE_LLVM_IR_VERIFIER_H)
 #  include <llvm/IR/Verifier.h>
 #else
 #  include <llvm/Analysis/Verifier.h>
 #endif
 
 #include <llvm/ExecutionEngine/ExecutionEngine.h>
 
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
 #  include <llvm/IR/GlobalVariable.h>
 #  include <llvm/IR/LLVMContext.h>
 #  include <llvm/IR/Function.h>
 #  include <llvm/IR/Instructions.h>
 #  include <llvm/IR/Intrinsics.h>
 #else
 #  include <llvm/GlobalVariable.h>
 #  include <llvm/LLVMContext.h>
 #  include <llvm/Function.h>
 #  include <llvm/Instructions.h>
 #  include <llvm/Intrinsics.h>
 #endif
 
-#ifdef HAVE_LLVM_SUPPORT_IRBUILDER_H
+#if defined (HAVE_LLVM_SUPPORT_IRBUILDER_H)
 #  include <llvm/Support/IRBuilder.h>
 #  elif defined(HAVE_LLVM_IR_IRBUILDER_H)
 #  include <llvm/IR/IRBuilder.h>
 #else
 #  include <llvm/IRBuilder.h>
 #endif
 
 #include <llvm/Support/raw_os_ostream.h>
@@ -563,28 +563,28 @@ jit_function::jit_function (llvm::Module
   // we mark all functinos as external linkage because this prevents llvm
   // from getting rid of always inline functions
   llvm::FunctionType *ft = llvm::FunctionType::get (rtype, llvm_args, false);
   llvm_function = llvm::Function::Create (ft, llvm::Function::ExternalLinkage,
                                           aname, module);
 
   if (sret ())
     {
-#ifdef FUNCTION_ADDATTRIBUTE_ARG_IS_ATTRIBUTES
+#if defined (FUNCTION_ADDATTRIBUTE_ARG_IS_ATTRIBUTES)
       llvm::AttrBuilder attr_builder;
       attr_builder.addAttribute (llvm::Attributes::StructRet);
       llvm::Attributes attrs = llvm::Attributes::get(context, attr_builder);
       llvm_function->addAttribute (1, attrs);
 #else
       llvm_function->addAttribute (1, llvm::Attribute::StructRet);
 #endif
     }
 
   if (call_conv == jit_convention::internal)
-#ifdef FUNCTION_ADDFNATTR_ARG_IS_ATTRIBUTES
+#if defined (FUNCTION_ADDFNATTR_ARG_IS_ATTRIBUTES)
     llvm_function->addFnAttr (llvm::Attributes::AlwaysInline);
 #else
     llvm_function->addFnAttr (llvm::Attribute::AlwaysInline);
 #endif
 }
 
 jit_function::jit_function (const jit_function& fn, jit_type *aresult,
                             const std::vector<jit_type *>& aargs)
@@ -681,17 +681,17 @@ jit_function::call (llvm::IRBuilderD& bu
       llvm_args.push_back (arg);
     }
 
   llvm::CallInst *callinst = builder.CreateCall (llvm_function, llvm_args);
   llvm::Value *ret = callinst;
 
   if (sret ())
     {
-#ifdef CALLINST_ADDATTRIBUTE_ARG_IS_ATTRIBUTES
+#if defined (CALLINST_ADDATTRIBUTE_ARG_IS_ATTRIBUTES)
       llvm::AttrBuilder attr_builder;
       attr_builder.addAttribute(llvm::Attributes::StructRet);
       llvm::Attributes attrs = llvm::Attributes::get(context, attr_builder);
       callinst->addAttribute (1, attrs);
 #else
       callinst->addAttribute (1, llvm::Attribute::StructRet);
 #endif
       ret = builder.CreateLoad (sret_mem);
diff --git a/libinterp/corefcn/jit-typeinfo.h b/libinterp/corefcn/jit-typeinfo.h
--- a/libinterp/corefcn/jit-typeinfo.h
+++ b/libinterp/corefcn/jit-typeinfo.h
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 // Author: Max Brister <max@2bass.com>
 
 #if ! defined (octave_jit_typeinfo_h)
 #define octave_jit_typeinfo_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include <map>
 #include <vector>
 
 #include "Range.h"
 #include "jit-util.h"
 
 // Defines the type system used by jit and a singleton class, jit_typeinfo, to
diff --git a/libinterp/corefcn/jit-util.cc b/libinterp/corefcn/jit-util.cc
--- a/libinterp/corefcn/jit-util.cc
+++ b/libinterp/corefcn/jit-util.cc
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 */
 
 // Author: Max Brister <max@2bass.com>
 
 // defines required by llvm
 #define __STDC_LIMIT_MACROS
 #define __STDC_CONSTANT_MACROS
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
 #  include <llvm/IR/Value.h>
 #else
 #  include <llvm/Value.h>
 #endif
 
 #include <llvm/Support/raw_os_ostream.h>
 
 std::ostream&
diff --git a/libinterp/corefcn/jit-util.h b/libinterp/corefcn/jit-util.h
--- a/libinterp/corefcn/jit-util.h
+++ b/libinterp/corefcn/jit-util.h
@@ -24,32 +24,32 @@ along with Octave; see the file COPYING.
 
 // Some utility classes and functions used throughout jit
 
 #if ! defined (octave_jit_util_h)
 #define octave_jit_util_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include <stdexcept>
 
 #if defined (HAVE_LLVM_IR_DATALAYOUT_H) || defined (HAVE_LLVM_DATALAYOUT_H)
 #  define HAVE_LLVM_DATALAYOUT
 #endif
 
 // we don't want to include llvm headers here, as they require
 // __STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS be defined in the entire
 // compilation unit
 namespace llvm
 {
   class Value;
   class Module;
-#ifdef LEGACY_PASSMANAGER
+#if defined (LEGACY_PASSMANAGER)
   namespace legacy {
     class FunctionPassManager;
     class PassManager;
   }
 #else
   class FunctionPassManager;
   class PassManager;
 #endif
diff --git a/libinterp/corefcn/kron.cc b/libinterp/corefcn/kron.cc
--- a/libinterp/corefcn/kron.cc
+++ b/libinterp/corefcn/kron.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Paul Kienzle <pkienzle@users.sf.net>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "dMatrix.h"
 #include "fMatrix.h"
 #include "CMatrix.h"
 #include "fCMatrix.h"
 
diff --git a/libinterp/corefcn/load-path.cc b/libinterp/corefcn/load-path.cc
--- a/libinterp/corefcn/load-path.cc
+++ b/libinterp/corefcn/load-path.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -19,17 +19,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: John W. Eaton.
 // HDF5 support by Steven G. Johnson <stevenj@alum.mit.edu>
 // Matlab v5 support by James R. Van Zandt <jrv@vanzandt.mv.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
@@ -76,24 +76,24 @@ along with Octave; see the file COPYING.
 #include "ls-hdf5.h"
 #include "ls-mat-ascii.h"
 #include "ls-mat4.h"
 #include "ls-mat5.h"
 #include "ls-oct-text.h"
 #include "ls-oct-binary.h"
 
 // Remove gnulib definitions, if any.
-#ifdef close
+#if defined (close)
 #  undef close
 #endif
-#ifdef open
+#if defined (open)
 #  undef open
 #endif
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 #  include "zfstream.h"
 #endif
 
 // Write octave-workspace file if Octave crashes or is killed by a signal.
 static bool Vcrash_dumps_octave_core = true;
 
 // The maximum amount of memory (in kilobytes) that we will attempt to
 // write to the Octave core file.
@@ -205,17 +205,17 @@ read_binary_file_header (std::istream& i
         error ("load: unrecognized binary format!");
 
       return -1;
     }
 
   return 0;
 }
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 static bool
 check_gzip_magic (const std::string& fname)
 {
   bool retval = false;
   std::ifstream file (fname.c_str ());
   OCTAVE_LOCAL_BUFFER (unsigned char, magic, 2);
 
   if (file.read (reinterpret_cast<char *> (magic), 2) && magic[0] == 0x1f
@@ -295,40 +295,40 @@ get_file_format (std::istream& file, con
 }
 
 static load_save_format
 get_file_format (const std::string& fname, const std::string& orig_fname,
                  bool &use_zlib, bool quiet = false)
 {
   load_save_format retval = LS_UNKNOWN;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
   // check this before we open the file
   if (H5Fis_hdf5 (fname.c_str ()) > 0)
     return LS_HDF5;
 #endif
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
   use_zlib = check_gzip_magic (fname);
 #else
   use_zlib = false;
 #endif
 
   if (! use_zlib)
     {
       std::ifstream file (fname.c_str ());
       if (file)
         {
           retval = get_file_format (file, orig_fname);
           file.close ();
         }
       else if (! quiet)
         err_file_open ("load", orig_fname);
     }
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
   else
     {
       gzifstream gzfile (fname.c_str ());
       if (gzfile)
         {
           retval = get_file_format (gzfile, orig_fname);
           gzfile.close ();
         }
@@ -377,17 +377,17 @@ do_load (std::istream& stream, const std
         case LS_MAT_ASCII:
           name = read_mat_ascii_data (stream, orig_fname, tc);
           break;
 
         case LS_MAT_BINARY:
           name = read_mat_binary_data (stream, orig_fname, tc);
           break;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
         case LS_HDF5:
           name = read_hdf5_data (stream, orig_fname, global, tc, doc,
                                  argv, argv_idx, argc);
           break;
 #endif
 
         case LS_MAT5_BINARY:
         case LS_MAT7_BINARY:
@@ -687,17 +687,17 @@ Force Octave to assume the file is in Oc
         }
       else if (argv[i] == "-mat4-binary" || argv[i] == "-V4"
                || argv[i] == "-v4" || argv[i] == "-4")
         {
           format = LS_MAT_BINARY;
         }
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
         {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
           format = LS_HDF5;
 #else
           err_disabled_feature ("load", "HDF5");
 #endif
         }
       else if (argv[i] == "-import" || argv[i] == "-i")
         {
           warning ("load: -import ignored");
@@ -723,17 +723,17 @@ Force Octave to assume the file is in Oc
   oct_mach_info::float_format flt_fmt = oct_mach_info::flt_fmt_unknown;
 
   bool swap = false;
 
   if (orig_fname == "-")
     {
       i++;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
       if (format == LS_HDF5)
         error ("load: cannot read HDF5 format from stdin");
       else
 #endif
       if (format != LS_UNKNOWN)
         {
           // FIXME: if we have already seen EOF on a previous call,
           // how do we fix up the state of std::cin so that we can get
@@ -753,17 +753,17 @@ Force Octave to assume the file is in Oc
 
       fname = find_file_to_load (fname, orig_fname);
 
       bool use_zlib = false;
 
       if (format == LS_UNKNOWN)
         format = get_file_format (fname, orig_fname, use_zlib);
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
       if (format == LS_HDF5)
         {
           i++;
 
           hdf5_ifstream hdf5_file (fname.c_str ());
 
           if (hdf5_file.file_id < 0)
             err_file_open ("load", orig_fname);
@@ -781,17 +781,17 @@ Force Octave to assume the file is in Oc
       if (format != LS_UNKNOWN)
         {
           i++;
 
           // Always open in binary mode and handle various
           // line-endings explicitly.
           std::ios::openmode mode = std::ios::in | std::ios::binary;
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
           if (use_zlib)
             {
               gzifstream file (fname.c_str (), mode);
 
               if (! file)
                 err_file_open ("load", orig_fname);
 
               if (format == LS_BINARY)
@@ -923,17 +923,17 @@ do_save (std::ostream& os, const octave_
                                  fmt.opts & LS_MAT_ASCII_TABS))
         warning ("save: unable to save %s in ASCII format", name.c_str ());
       break;
 
     case LS_MAT_BINARY:
       save_mat_binary_data (os, tc, name);
       break;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
     case LS_HDF5:
       save_hdf5_data (os, tc, name, help, global, save_as_floats);
       break;
 #endif
 
     case LS_MAT5_BINARY:
       save_mat5_binary_element (os, tc, name, global, false, save_as_floats);
       break;
@@ -1056,29 +1056,29 @@ parse_save_options (const string_vector 
           format = LS_TEXT;
         }
       else if (argv[i] == "-binary" || argv[i] == "-b")
         {
           format = LS_BINARY;
         }
       else if (argv[i] == "-hdf5" || argv[i] == "-h")
         {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
           format = LS_HDF5;
 #else
           err_disabled_feature ("save", "HDF5");
 #endif
         }
       else if (argv[i] == "-mat-binary" || argv[i] == "-mat"
                || argv[i] == "-m" || argv[i] == "-6" || argv[i] == "-v6"
                || argv[i] == "-V6")
         {
           format = LS_MAT5_BINARY;
         }
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
       else if (argv[i] == "-mat7-binary" || argv[i] == "-7"
                || argv[i] == "-v7" || argv[i] == "-V7")
         {
           format = LS_MAT7_BINARY;
         }
 #endif
       else if (argv[i] == "-mat4-binary" || argv[i] == "-V4"
                || argv[i] == "-v4" || argv[i] == "-4")
@@ -1087,24 +1087,24 @@ parse_save_options (const string_vector 
         }
       else if (argv[i] == "-float-binary" || argv[i] == "-f")
         {
           format = LS_BINARY;
           save_as_floats = true;
         }
       else if (argv[i] == "-float-hdf5")
         {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
           format = LS_HDF5;
           save_as_floats = true;
 #else
           err_disabled_feature ("save", "HDF5");
 #endif
         }
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
       else if (argv[i] == "-zip" || argv[i] == "-z")
         {
           use_zlib = true;
         }
 #endif
       else if (argv[i] == "-struct")
         {
           retval.append (argv[i]);
@@ -1202,28 +1202,28 @@ write_header (std::ostream& os, load_sav
           versionmagic = "\x00\x01\x49\x4d"; // this machine is little endian
 
         memcpy (headertext+124, versionmagic, 4);
         os.write (headertext, 128);
       }
 
       break;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
     case LS_HDF5:
 #endif
     case LS_TEXT:
       {
         octave_localtime now;
 
         std::string comment_string = now.strftime (Vsave_header_format_string);
 
         if (! comment_string.empty ())
           {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
             if (format == LS_HDF5)
               {
                 hdf5_ofstream& hs = dynamic_cast<hdf5_ofstream&> (os);
                 H5Gset_comment (hs.file_id, "/", comment_string.c_str ());
               }
             else
 #endif
               os << comment_string << "\n";
@@ -1234,25 +1234,25 @@ write_header (std::ostream& os, load_sav
     default:
       break;
     }
 }
 
 void
 octave_prepare_hdf5 (void)
 {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
   H5dont_atexit ();
 #endif
 }
 
 void
 octave_finalize_hdf5 (void)
 {
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
   H5close ();
 #endif
 }
 
 static void
 save_vars (const string_vector& argv, int argv_idx, int argc,
            std::ostream& os, load_save_format fmt,
            bool save_as_floats, bool write_header_info)
@@ -1375,27 +1375,27 @@ dump_octave_core (void)
 
       std::ios::openmode mode = std::ios::out;
 
       // Matlab v7 files are always compressed
       if (format == LS_MAT7_BINARY)
         use_zlib = false;
 
       if (format == LS_BINARY
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
           || format == LS_HDF5
 #endif
           || format == LS_MAT_BINARY
           || format == LS_MAT5_BINARY
           || format == LS_MAT7_BINARY)
         mode |= std::ios::binary;
 
       mode |= append ? std::ios::ate : std::ios::trunc;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
       if (format == LS_HDF5)
         {
           hdf5_ofstream file (fname, mode);
 
           if (file.file_id >= 0)
             {
               dump_octave_core (file, fname, format, save_as_floats);
 
@@ -1405,17 +1405,17 @@ dump_octave_core (void)
             warning ("dump_octave_core: unable to open '%s' for writing...",
                      fname);
         }
       else
 #endif
         // don't insert any commands here!  The open brace below must
         // go with the else above!
         {
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
           if (use_zlib)
             {
               gzofstream file (fname, mode);
 
               if (file)
                 {
                   dump_octave_core (file, fname, format, save_as_floats);
 
@@ -1601,17 +1601,17 @@ the file @file{data} in Octave's binary 
     error ("save: cannot specify both -text and -float-binary");
 
   octave_value_list retval;
 
   if (argv[i] == "-")
     {
       i++;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
       if (format == LS_HDF5)
         error ("save: cannot write HDF5 format to stdout");
       else
 #endif
         // don't insert any commands here!  the brace below must go
         // with the "else" above!
         {
           if (append)
@@ -1641,25 +1641,25 @@ the file @file{data} in Octave's binary 
       // Matlab v7 files are always compressed
       if (format == LS_MAT7_BINARY)
         use_zlib = false;
 
       std::ios::openmode mode
         = append ? (std::ios::app | std::ios::ate) : std::ios::out;
 
       if (format == LS_BINARY
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
           || format == LS_HDF5
 #endif
           || format == LS_MAT_BINARY
           || format == LS_MAT5_BINARY
           || format == LS_MAT7_BINARY)
         mode |= std::ios::binary;
 
-#ifdef HAVE_HDF5
+#if defined (HAVE_HDF5)
       if (format == LS_HDF5)
         {
           // FIXME: It should be possible to append to HDF5 files.
           if (append)
             error ("save: appending to HDF5 files is not implemented");
 
           bool write_header_info
             = ! (append && H5Fis_hdf5 (fname.c_str ()) > 0);
@@ -1674,17 +1674,17 @@ the file @file{data} in Octave's binary 
 
           hdf5_file.close ();
         }
       else
 #endif
         // don't insert any statements here!  The brace below must go
         // with the "else" above!
         {
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
           if (use_zlib)
             {
               gzofstream file (fname.c_str (), mode);
 
               if (! file)
                 err_file_open ("save", fname);
 
               bool write_header_info = ! file.tellp ();
diff --git a/libinterp/corefcn/lookup.cc b/libinterp/corefcn/lookup.cc
--- a/libinterp/corefcn/lookup.cc
+++ b/libinterp/corefcn/lookup.cc
@@ -17,17 +17,17 @@ General Public License for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Jaroslav Hajek <highegg@gmail.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <functional>
 #include <algorithm>
 
 #include "dNDArray.h"
diff --git a/libinterp/corefcn/ls-ascii-helper.cc b/libinterp/corefcn/ls-ascii-helper.cc
--- a/libinterp/corefcn/ls-ascii-helper.cc
+++ b/libinterp/corefcn/ls-ascii-helper.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ls-ascii-helper.h"
 
 #include <iostream>
 #include <sstream>
 
diff --git a/libinterp/corefcn/ls-hdf5.cc b/libinterp/corefcn/ls-hdf5.cc
--- a/libinterp/corefcn/ls-hdf5.cc
+++ b/libinterp/corefcn/ls-hdf5.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Steven G. Johnson <stevenj@alum.mit.edu>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (HAVE_HDF5)
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
@@ -487,17 +487,17 @@ hdf5_read_next_data (octave_hdf5_id grou
             d->tc = octave_value_typeinfo::lookup_type ("matrix");
 
           H5Sclose (space_id);
         }
       else if (type_class_id == H5T_INTEGER)
         {
           // What integer type do we really have..
           std::string int_typ;
-#ifdef HAVE_H5T_GET_NATIVE_TYPE
+#if defined (HAVE_H5T_GET_NATIVE_TYPE)
           // FIXME: test this code and activated with an autoconf
           // test!! It is also incorrect for 64-bit indexing!!
 
           switch (H5Tget_native_type (type_id, H5T_DIR_ASCEND))
             {
             case H5T_NATIVE_CHAR:
               int_typ = "int8 ";
               break;
diff --git a/libinterp/corefcn/ls-mat-ascii.cc b/libinterp/corefcn/ls-mat-ascii.cc
--- a/libinterp/corefcn/ls-mat-ascii.cc
+++ b/libinterp/corefcn/ls-mat-ascii.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
diff --git a/libinterp/corefcn/ls-mat4.cc b/libinterp/corefcn/ls-mat4.cc
--- a/libinterp/corefcn/ls-mat4.cc
+++ b/libinterp/corefcn/ls-mat4.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: James R. Van Zandt <jrv@vanzandt.mv.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
@@ -72,17 +72,17 @@ along with Octave; see the file COPYING.
 #include "dMatrix.h"
 
 #include "ls-utils.h"
 #include "ls-mat5.h"
 
 #include "parse.h"
 #include "defaults.h"
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 #  include <zlib.h>
 #endif
 
 #define READ_PAD(is_small_data_element, l) ((is_small_data_element) ? 4 : (((l)+7)/8)*8)
 #define PAD(l) (((l) > 0 && (l) <= 4) ? 4 : (((l)+7)/8)*8)
 #define INT8(l) ((l) == miINT8 || (l) == miUINT8 || (l) == miUTF8)
 
 
@@ -505,17 +505,17 @@ read_mat5_binary_element (std::istream& 
   int32_t type = 0;
   int32_t element_length;
   bool is_small_data_element;
   if (read_mat5_tag (is, swap, type, element_length, is_small_data_element))
     return retval;                      // EOF
 
   if (type == miCOMPRESSED)
     {
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
       // If C++ allowed us direct access to the file descriptor of an
       // ifstream in a uniform way, the code below could be vastly
       // simplified, and additional copies of the data in memory
       // wouldn't be needed.
 
       OCTAVE_LOCAL_BUFFER (char, inbuf, element_length);
       is.read (inbuf, element_length);
 
@@ -2281,17 +2281,17 @@ save_mat5_binary_element (std::ostream& 
       nnz_32 = nnz;
     }
   else if (dv.numel () > max_dim_val)
     {
       warn_dim_too_large (name);
       return true;  // skip to next
     }
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
   if (mat7_format && ! compressing)
     {
       bool ret = false;
 
       std::ostringstream buf;
 
       // The code seeks backwards in the stream to fix the header. Can't
diff --git a/libinterp/corefcn/ls-oct-binary.cc b/libinterp/corefcn/ls-oct-binary.cc
--- a/libinterp/corefcn/ls-oct-binary.cc
+++ b/libinterp/corefcn/ls-oct-binary.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
diff --git a/libinterp/corefcn/ls-oct-text.cc b/libinterp/corefcn/ls-oct-text.cc
--- a/libinterp/corefcn/ls-oct-text.cc
+++ b/libinterp/corefcn/ls-oct-text.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: John W. Eaton.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
diff --git a/libinterp/corefcn/ls-oct-text.h b/libinterp/corefcn/ls-oct-text.h
--- a/libinterp/corefcn/ls-oct-text.h
+++ b/libinterp/corefcn/ls-oct-text.h
@@ -34,17 +34,17 @@ along with Octave; see the file COPYING.
 
 #include "ls-ascii-helper.h"
 
 // Flag for cell elements
 #define CELL_ELT_TAG "<cell-element>"
 
 // Used when converting Inf to something that gnuplot can read.
 
-#ifndef OCT_RBV
+#if ! defined (OCT_RBV)
 #  define OCT_RBV (std::numeric_limits<double>::max () / 100.0)
 #endif
 
 extern OCTINTERP_API std::string
 extract_keyword (std::istream& is, const char *keyword,
                  const bool next_only = false);
 
 extern OCTINTERP_API std::string
diff --git a/libinterp/corefcn/ls-utils.cc b/libinterp/corefcn/ls-utils.cc
--- a/libinterp/corefcn/ls-utils.cc
+++ b/libinterp/corefcn/ls-utils.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "data-conv.h"
 
 #include "ls-utils.h"
 
 // MAX_VAL and MIN_VAL are assumed to have integral values even though
diff --git a/libinterp/corefcn/lsode.cc b/libinterp/corefcn/lsode.cc
--- a/libinterp/corefcn/lsode.cc
+++ b/libinterp/corefcn/lsode.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <iomanip>
 #include <iostream>
 
diff --git a/libinterp/corefcn/lu.cc b/libinterp/corefcn/lu.cc
--- a/libinterp/corefcn/lu.cc
+++ b/libinterp/corefcn/lu.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lu.h"
 #include "sparse-lu.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/mappers.cc b/libinterp/corefcn/mappers.cc
--- a/libinterp/corefcn/mappers.cc
+++ b/libinterp/corefcn/mappers.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <cfloat>
 
 #include "lo-ieee.h"
 #include "lo-specfun.h"
diff --git a/libinterp/corefcn/matrix_type.cc b/libinterp/corefcn/matrix_type.cc
--- a/libinterp/corefcn/matrix_type.cc
+++ b/libinterp/corefcn/matrix_type.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #include "ov.h"
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/max.cc b/libinterp/corefcn/max.cc
--- a/libinterp/corefcn/max.cc
+++ b/libinterp/corefcn/max.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-ieee.h"
 #include "lo-mappers.h"
 #include "lo-math.h"
 #include "dNDArray.h"
 #include "CNDArray.h"
diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2126,44 +2126,44 @@ public:
             xfree (ptr);
           }
         else
           {
             p = foreign_memlist.find (ptr);
 
             if (p != foreign_memlist.end ())
               foreign_memlist.erase (p);
-#ifdef DEBUG
+#if defined (DEBUG)
             else
               warning ("mxFree: skipping memory not allocated by mxMalloc, mxCalloc, or mxRealloc");
 #endif
           }
       }
   }
 
   // Mark a pointer to be freed on exit.
   void mark (void *ptr)
   {
-#ifdef DEBUG
+#if defined (DEBUG)
     if (memlist.find (ptr) != memlist.end ())
       warning ("%s: double registration ignored", function_name ());
 #endif
 
     memlist.insert (ptr);
   }
 
   // Unmark a pointer to be freed on exit, either because it was
   // made persistent, or because it was already freed.
   void unmark (void *ptr)
   {
     std::set<void *>::iterator p = memlist.find (ptr);
 
     if (p != memlist.end ())
       memlist.erase (p);
-#ifdef DEBUG
+#if defined (DEBUG)
     else
       warning ("%s: value not marked", function_name ());
 #endif
   }
 
   mxArray *mark_array (mxArray *ptr)
   {
     arraylist.insert (ptr);
@@ -2176,32 +2176,32 @@ public:
 
     if (p != arraylist.end ())
       arraylist.erase (p);
   }
 
   // Mark a pointer as one we allocated.
   void mark_foreign (void *ptr)
   {
-#ifdef DEBUG
+#if defined (DEBUG)
     if (foreign_memlist.find (ptr) != foreign_memlist.end ())
       warning ("%s: double registration ignored", function_name ());
 #endif
 
     foreign_memlist.insert (ptr);
   }
 
   // Unmark a pointer as one we allocated.
   void unmark_foreign (void *ptr)
   {
     std::set<void *>::iterator p = foreign_memlist.find (ptr);
 
     if (p != foreign_memlist.end ())
       foreign_memlist.erase (p);
-#ifdef DEBUG
+#if defined (DEBUG)
     else
       warning ("%s: value not marked", function_name ());
 #endif
 
   }
 
   // Make a new array value and initialize from an octave value; it will be
   // freed on exit unless marked as persistent.
@@ -2218,17 +2218,17 @@ public:
     std::set<mxArray *>::iterator p = arraylist.find (ptr);
 
     if (p != arraylist.end ())
       {
         inlist = true;
         arraylist.erase (p);
         delete ptr;
       }
-#ifdef DEBUG
+#if defined (DEBUG)
     else
       warning ("mex::free_value: skipping memory not allocated by mex::make_value");
 #endif
 
     return inlist;
   }
 
   octave_mex_function *current_mex_function (void) const
@@ -2258,32 +2258,32 @@ private:
   mutable char *fname;
 
   // List of memory resources we allocated.
   static std::set<void *> global_memlist;
 
   // Mark a pointer as one we allocated.
   void global_mark (void *ptr)
   {
-#ifdef DEBUG
+#if defined (DEBUG)
     if (global_memlist.find (ptr) != global_memlist.end ())
       warning ("%s: double registration ignored", function_name ());
 #endif
 
     global_memlist.insert (ptr);
   }
 
   // Unmark a pointer as one we allocated.
   void global_unmark (void *ptr)
   {
     std::set<void *>::iterator p = global_memlist.find (ptr);
 
     if (p != global_memlist.end ())
       global_memlist.erase (p);
-#ifdef DEBUG
+#if defined (DEBUG)
     else
       warning ("%s: value not marked", function_name ());
 #endif
 
   }
 
   // No copying!
 
diff --git a/libinterp/corefcn/mex.h b/libinterp/corefcn/mex.h
--- a/libinterp/corefcn/mex.h
+++ b/libinterp/corefcn/mex.h
@@ -103,77 +103,77 @@ void mexFunction (int nlhs, mxArray* plh
 #define mxCreateScalarDouble mxCreateDoubleScalar
 
 #define mxFreeMatrix mxDestroyArray
 
 #define mxIsString mxIsChar
 
 /* Apparently these are also defined.  */
 
-#ifndef UINT64_T
+#if ! defined (UINT64_T)
 #  define UINT64_T uint64_t
 #endif
 
-#ifndef uint64_T
+#if ! defined (uint64_T)
 #  define uint64_T uint64_t
 #endif
 
-#ifndef INT64_T
+#if ! defined (INT64_T)
 #  define INT64_T int64_t
 #endif
 
-#ifndef int64_T
+#if ! defined (int64_T)
 #  define int64_T int64_t
 #endif
 
-#ifndef UINT32_T
+#if ! defined (UINT32_T)
 #  define UINT32_T uint32_t
 #endif
 
-#ifndef uint32_T
+#if ! defined (uint32_T)
 #  define uint32_T uint32_t
 #endif
 
-#ifndef INT32_T
+#if ! defined (INT32_T)
 #  define INT32_T int32_t
 #endif
 
-#ifndef int32_T
+#if ! defined (int32_T)
 #  define int32_T int32_t
 #endif
 
-#ifndef UINT16_T
+#if ! defined (UINT16_T)
 #  define UINT16_T uint16_t
 #endif
 
-#ifndef uint16_T
+#if ! defined (uint16_T)
 #  define uint16_T uint16_t
 #endif
 
-#ifndef INT16_T
+#if ! defined (INT16_T)
 #  define INT16_T int16_t
 #endif
 
-#ifndef int16_T
+#if ! defined (int16_T)
 #  define int16_T int16_t
 #endif
 
-#ifndef UINT8_T
+#if ! defined (UINT8_T)
 #  define UINT8_T uint8_t
 #endif
 
-#ifndef uint8_T
+#if ! defined (uint8_T)
 #  define uint8_T uint8_t
 #endif
 
-#ifndef INT8_T
+#if ! defined (INT8_T)
 #  define INT8_T int8_t
 #endif
 
-#ifndef int8_T
+#if ! defined (int8_T)
 #  define int8_T int8_t
 #endif
 
 #if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/libinterp/corefcn/mexproto.h b/libinterp/corefcn/mexproto.h
--- a/libinterp/corefcn/mexproto.h
+++ b/libinterp/corefcn/mexproto.h
@@ -270,17 +270,17 @@ extern OCTINTERP_API const char *mxGetFi
                                                          int key_num);
 extern OCTINTERP_API int mxGetFieldNumber (const mxArray *ptr, const char *key);
 
 extern OCTINTERP_API int mxGetString (const mxArray *ptr, char *buf,
                                       mwSize buflen);
 extern OCTINTERP_API char *mxArrayToString (const mxArray *ptr);
 
 /* Miscellaneous.  */
-#ifdef NDEBUG
+#if defined (NDEBUG)
 #  define mxAssert(expr, msg) \
     do \
       { \
         if (! expr) \
           { \
             mexPrintf ("Assertion failed: %s, at line %d of file \"%s\".\n%s\n", \
                        #expr, __LINE__, __FILE__, msg); \
           } \
diff --git a/libinterp/corefcn/mgorth.cc b/libinterp/corefcn/mgorth.cc
--- a/libinterp/corefcn/mgorth.cc
+++ b/libinterp/corefcn/mgorth.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-norm.h"
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 
diff --git a/libinterp/corefcn/nproc.cc b/libinterp/corefcn/nproc.cc
--- a/libinterp/corefcn/nproc.cc
+++ b/libinterp/corefcn/nproc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "nproc.h"
 
 DEFUN (nproc, args, ,
        "-*- texinfo -*-\n\
diff --git a/libinterp/corefcn/oct-errno.in.cc b/libinterp/corefcn/oct-errno.in.cc
--- a/libinterp/corefcn/oct-errno.in.cc
+++ b/libinterp/corefcn/oct-errno.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 
 #include "singleton-cleanup.h"
 
 #include "oct-errno.h"
diff --git a/libinterp/corefcn/oct-fstrm.cc b/libinterp/corefcn/oct-fstrm.cc
--- a/libinterp/corefcn/oct-fstrm.cc
+++ b/libinterp/corefcn/oct-fstrm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include "error.h"
 #include "oct-fstrm.h"
diff --git a/libinterp/corefcn/oct-hdf5-types.cc b/libinterp/corefcn/oct-hdf5-types.cc
--- a/libinterp/corefcn/oct-hdf5-types.cc
+++ b/libinterp/corefcn/oct-hdf5-types.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "errwarn.h"
 #include "oct-hdf5.h"
 
 bool
diff --git a/libinterp/corefcn/oct-hdf5-types.h b/libinterp/corefcn/oct-hdf5-types.h
--- a/libinterp/corefcn/oct-hdf5-types.h
+++ b/libinterp/corefcn/oct-hdf5-types.h
@@ -20,34 +20,34 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_oct_hdf5_types_h)
 #define octave_oct_hdf5_types_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 // This function only needs to be defined for C++.
 extern bool check_hdf5_types (bool warn = true);
 #endif
 
 // Available for C and C++.
 
 typedef int octave_hdf5_id;
 typedef int octave_hdf5_err;
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 // These are defined in a C file, so they should have C-linkage in
 // both C and C++ source files.
 
 extern const octave_hdf5_id octave_H5E_DEFAULT;
 extern const octave_hdf5_id octave_H5P_DEFAULT;
 extern const octave_hdf5_id octave_H5S_ALL;
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/libinterp/corefcn/oct-hist.cc b/libinterp/corefcn/oct-hist.cc
--- a/libinterp/corefcn/oct-hist.cc
+++ b/libinterp/corefcn/oct-hist.cc
@@ -26,17 +26,17 @@ The functions listed below were adapted 
 GNU Bash, the Bourne Again SHell, copyright (C) 1987, 1989, 1991 Free
 Software Foundation, Inc.
 
   do_history         edit_history_readline
   do_edit_history    edit_history_add_hist
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
 
diff --git a/libinterp/corefcn/oct-iostrm.cc b/libinterp/corefcn/oct-iostrm.cc
--- a/libinterp/corefcn/oct-iostrm.cc
+++ b/libinterp/corefcn/oct-iostrm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "oct-iostrm.h"
 
 // Position a stream at OFFSET relative to ORIGIN.
 
diff --git a/libinterp/corefcn/oct-lvalue.cc b/libinterp/corefcn/oct-lvalue.cc
--- a/libinterp/corefcn/oct-lvalue.cc
+++ b/libinterp/corefcn/oct-lvalue.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "oct-lvalue.h"
 #include "ov.h"
 
diff --git a/libinterp/corefcn/oct-map.cc b/libinterp/corefcn/oct-map.cc
--- a/libinterp/corefcn/oct-map.cc
+++ b/libinterp/corefcn/oct-map.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 #include "error.h"
 #include "oct-locbuf.h"
 #include "str-vec.h"
 
diff --git a/libinterp/corefcn/oct-prcstrm.cc b/libinterp/corefcn/oct-prcstrm.cc
--- a/libinterp/corefcn/oct-prcstrm.cc
+++ b/libinterp/corefcn/oct-prcstrm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 
 #include "oct-prcstrm.h"
 #include "sysdep.h"
 
diff --git a/libinterp/corefcn/oct-procbuf.cc b/libinterp/corefcn/oct-procbuf.cc
--- a/libinterp/corefcn/oct-procbuf.cc
+++ b/libinterp/corefcn/oct-procbuf.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 
 #include <iostream>
 
 #include <sys/types.h>
@@ -37,26 +37,26 @@ along with Octave; see the file COPYING.
 #include "oct-syscalls.h"
 #include "sysdep.h"
 #include "variables.h"
 
 #include "defun.h"
 #include "errwarn.h"
 #include "utils.h"
 
-#ifndef SHELL_PATH
+#if ! defined (SHELL_PATH)
 #  define SHELL_PATH "/bin/sh"
 #endif
 
 // This class is based on the procbuf class from libg++, written by
 // Per Bothner, Copyright (C) 1993 Free Software Foundation.
 
 static octave_procbuf *octave_procbuf_list = 0;
 
-#ifndef BUFSIZ
+#if ! defined (BUFSIZ)
 #  define BUFSIZ 1024
 #endif
 
 octave_procbuf *
 octave_procbuf::open (const char *command, int mode)
 {
 #if defined (__CYGWIN__) || defined (__MINGW32__) || defined (_MSC_VER)
 
diff --git a/libinterp/corefcn/oct-stdstrm.h b/libinterp/corefcn/oct-stdstrm.h
--- a/libinterp/corefcn/oct-stdstrm.h
+++ b/libinterp/corefcn/oct-stdstrm.h
@@ -130,17 +130,17 @@ private:
 
   // No copying!
 
   octave_stdiostream (const octave_stdiostream&);
 
   octave_stdiostream& operator = (const octave_stdiostream&);
 };
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
 class
 octave_zstdiostream
   : public octave_tstdiostream<c_zfile_ptr_buf, io_c_zfile_ptr_stream, gzFile>
 {
 public:
 
   octave_zstdiostream (const std::string& n, gzFile f = 0, int fid = 0,
diff --git a/libinterp/corefcn/oct-stream.cc b/libinterp/corefcn/oct-stream.cc
--- a/libinterp/corefcn/oct-stream.cc
+++ b/libinterp/corefcn/oct-stream.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cctype>
 #include <cstring>
 
 #include <deque>
diff --git a/libinterp/corefcn/oct-strstrm.cc b/libinterp/corefcn/oct-strstrm.cc
--- a/libinterp/corefcn/oct-strstrm.cc
+++ b/libinterp/corefcn/oct-strstrm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-strstrm.h"
 
 // Position a stream at OFFSET relative to ORIGIN.
 
 int
diff --git a/libinterp/corefcn/oct-tex-lexer.in.ll b/libinterp/corefcn/oct-tex-lexer.in.ll
--- a/libinterp/corefcn/oct-tex-lexer.in.ll
+++ b/libinterp/corefcn/oct-tex-lexer.in.ll
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 %top {
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
 // This one needs to be global.
 #pragma GCC diagnostic ignored "-Wunused-function"
 
 // Disable this warning for code that is generated by flex, including
@@ -34,17 +34,17 @@ along with Octave; see the file COPYING.
 // state prior to functions we define at the bottom of the file.
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 // Define away the deprecated register storage class specifier to avoid
 // potential warnings about it.
 #if ! defined (register)
-#define register
+#  define register
 #endif
 
 }
 
 %option prefix = "octave_tex_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
@@ -71,30 +71,30 @@ along with Octave; see the file COPYING.
 // FIXME: with bison 3.x, OCTAVE_TEX_STYPE appears in the generated
 // oct-parse.h file, but there is no definition for YYSTYPE, which is
 // needed by the code that is generated by flex.  I can't seem to find
 // a way to tell flex to use OCTAVE_TEX_STYPE instead of YYSTYPE in
 // the code it generates, or to tell bison to provide the definition
 // of YYSTYPE in the generated oct-parse.h file.
 
 #if defined (OCTAVE_TEX_STYPE_IS_DECLARED) && ! defined YYSTYPE
-#define YYSTYPE OCTAVE_TEX_STYPE
+#  define YYSTYPE OCTAVE_TEX_STYPE
 #endif
 
 #if defined (GNULIB_NAMESPACE)
 // Calls to the following functions appear in the generated output
 // from flex without the namespace tag.  Redefine them so we will use
 // them via the gnulib namespace.
-#define fprintf GNULIB_NAMESPACE::fprintf
-#define fread GNULIB_NAMESPACE::fread
-#define fwrite GNULIB_NAMESPACE::fwrite
-#define getc GNULIB_NAMESPACE::getc
-#define isatty GNULIB_NAMESPACE::isatty
-#define malloc GNULIB_NAMESPACE::malloc
-#define realloc GNULIB_NAMESPACE::realloc
+#  define fprintf GNULIB_NAMESPACE::fprintf
+#  define fread GNULIB_NAMESPACE::fread
+#  define fwrite GNULIB_NAMESPACE::fwrite
+#  define getc GNULIB_NAMESPACE::getc
+#  define isatty GNULIB_NAMESPACE::isatty
+#  define malloc GNULIB_NAMESPACE::malloc
+#  define realloc GNULIB_NAMESPACE::realloc
 #endif
 
 %}
 
 D   [0-9]
 NUM (({D}+\.?{D}*)|(\.{D}+))
 
 %%
diff --git a/libinterp/corefcn/oct-tex-parser.in.yy b/libinterp/corefcn/oct-tex-parser.in.yy
--- a/libinterp/corefcn/oct-tex-parser.in.yy
+++ b/libinterp/corefcn/oct-tex-parser.in.yy
@@ -19,33 +19,33 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 %{
 
 #define YYDEBUG 1
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include "txt-eng.h"
 #include "oct-tex-parser.h"
 
 extern int octave_tex_lex (YYSTYPE *, void *);
 static void yyerror (text_parser_tex& parser, const char *s);
 
 #if defined (GNULIB_NAMESPACE)
 // Calls to the following functions appear in the generated output
 // from Bison without the namespace tag.  Redefine them so we will use
 // them via the gnulib namespace.
-#define fclose GNULIB_NAMESPACE::fclose
-#define fprintf GNULIB_NAMESPACE::fprintf
-#define malloc GNULIB_NAMESPACE::malloc
+#  define fclose GNULIB_NAMESPACE::fclose
+#  define fprintf GNULIB_NAMESPACE::fprintf
+#  define malloc GNULIB_NAMESPACE::malloc
 #endif
 
 #define scanner parser.get_scanner ()
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
 // Disable this warning for code that is generated by Bison, including
 // grammar rules.  Push the current state so we can restore the warning
 // state prior to functions we define at the bottom of the file.
diff --git a/libinterp/corefcn/octave-link.cc b/libinterp/corefcn/octave-link.cc
--- a/libinterp/corefcn/octave-link.cc
+++ b/libinterp/corefcn/octave-link.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "cmd-edit.h"
 #include "defun.h"
 #include "oct-env.h"
 #include "oct-mutex.h"
 #include "singleton-cleanup.h"
diff --git a/libinterp/corefcn/ordschur.cc b/libinterp/corefcn/ordschur.cc
--- a/libinterp/corefcn/ordschur.cc
+++ b/libinterp/corefcn/ordschur.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "ovl.h"
 #include "f77-fcn.h"
 
diff --git a/libinterp/corefcn/pager.cc b/libinterp/corefcn/pager.cc
--- a/libinterp/corefcn/pager.cc
+++ b/libinterp/corefcn/pager.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <fstream>
 #include <iostream>
 #include <string>
 
 #include "cmd-edit.h"
@@ -57,17 +57,17 @@ static std::string diary_file ("diary");
 // The diary file.
 static std::ofstream external_diary_file;
 
 static std::string
 default_pager (void)
 {
   std::string pager_binary = octave_env::getenv ("PAGER");
 
-#ifdef OCTAVE_DEFAULT_PAGER
+#if defined (OCTAVE_DEFAULT_PAGER)
   if (pager_binary.empty ())
     pager_binary = OCTAVE_DEFAULT_PAGER;
 #endif
 
   return pager_binary;
 }
 
 // The shell command to run as the pager.
diff --git a/libinterp/corefcn/pinv.cc b/libinterp/corefcn/pinv.cc
--- a/libinterp/corefcn/pinv.cc
+++ b/libinterp/corefcn/pinv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstdio>
 #include <cstring>
 
 #include <iomanip>
diff --git a/libinterp/corefcn/procstream.cc b/libinterp/corefcn/procstream.cc
--- a/libinterp/corefcn/procstream.cc
+++ b/libinterp/corefcn/procstream.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "procstream.h"
 
 procstreambase::procstreambase (const std::string& command, int mode)
diff --git a/libinterp/corefcn/profiler.cc b/libinterp/corefcn/profiler.cc
--- a/libinterp/corefcn/profiler.cc
+++ b/libinterp/corefcn/profiler.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "defun.h"
 #include "oct-time.h"
 #include "ov-struct.h"
diff --git a/libinterp/corefcn/psi.cc b/libinterp/corefcn/psi.cc
--- a/libinterp/corefcn/psi.cc
+++ b/libinterp/corefcn/psi.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov.h"
 #include "defun.h"
 #include "error.h"
 #include "dNDArray.h"
 #include "fNDArray.h"
diff --git a/libinterp/corefcn/pt-jit.cc b/libinterp/corefcn/pt-jit.cc
--- a/libinterp/corefcn/pt-jit.cc
+++ b/libinterp/corefcn/pt-jit.cc
@@ -20,79 +20,79 @@ along with Octave; see the file COPYING.
 
 */
 
 // Author: Max Brister <max@2bass.com>
 
 #define __STDC_LIMIT_MACROS
 #define __STDC_CONSTANT_MACROS
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "debug.h"
 #include "defun.h"
 #include "errwarn.h"
 #include "ov.h"
 #include "pt-all.h"
 #include "pt-jit.h"
 #include "sighandlers.h"
 #include "symtab.h"
 #include "variables.h"
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 static bool Vdebug_jit = false;
 
 static bool Vjit_enable = false;
 
 static int Vjit_startcnt = 1000;
 
 static int Vjit_failcnt = 0;
 
 #include <llvm/Analysis/CallGraph.h>
 #include <llvm/Analysis/Passes.h>
 
-#ifdef HAVE_LLVM_IR_VERIFIER_H
+#if defined (HAVE_LLVM_IR_VERIFIER_H)
 #  include <llvm/IR/Verifier.h>
 #else
 #  include <llvm/Analysis/Verifier.h>
 #endif
 
 #include <llvm/Bitcode/ReaderWriter.h>
 #include <llvm/ExecutionEngine/ExecutionEngine.h>
 #include <llvm/ExecutionEngine/JIT.h>
 
-#ifdef LEGACY_PASSMANAGER
+#if defined (LEGACY_PASSMANAGER)
 #  include <llvm/IR/LegacyPassManager.h>
 #else
 #  include <llvm/PassManager.h>
 #endif
 
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
 #  include <llvm/IR/LLVMContext.h>
 #  include <llvm/IR/Module.h>
 #else
 #  include <llvm/LLVMContext.h>
 #  include <llvm/Module.h>
 #endif
 
-#ifdef HAVE_LLVM_SUPPORT_IRBUILDER_H
+#if defined (HAVE_LLVM_SUPPORT_IRBUILDER_H)
 #  include <llvm/Support/IRBuilder.h>
 #elif defined(HAVE_LLVM_IR_IRBUILDER_H)
 #  include <llvm/IR/IRBuilder.h>
 #else
 #  include <llvm/IRBuilder.h>
 #endif
 
 #include <llvm/Support/raw_os_ostream.h>
 #include <llvm/Support/TargetSelect.h>
 
-#ifdef HAVE_LLVM_IR_DATALAYOUT_H
+#if defined (HAVE_LLVM_IR_DATALAYOUT_H)
 #  include <llvm/IR/DataLayout.h>
 #elif defined(HAVE_LLVM_DATALAYOUT_H)
 #  include <llvm/DataLayout.h>
 #else
 #  include <llvm/Target/TargetData.h>
 #endif
 
 #include <llvm/Transforms/IPO.h>
@@ -2063,26 +2063,26 @@ tree_jit::initialize (void)
     }
 
   // sometimes this fails pre main
   engine = llvm::ExecutionEngine::createJIT (module);
 
   if (! engine)
     return false;
 
-#ifdef LEGACY_PASSMANAGER
+#if defined (LEGACY_PASSMANAGER)
   module_pass_manager = new llvm::legacy::PassManager ();
   pass_manager = new llvm::legacy::FunctionPassManager (module);
 #else
   module_pass_manager = new llvm::PassManager ();
   pass_manager = new llvm::FunctionPassManager (module);
 #endif
   module_pass_manager->add (llvm::createAlwaysInlinerPass ());
 
-#ifdef HAVE_LLVM_DATALAYOUT
+#if defined (HAVE_LLVM_DATALAYOUT)
   pass_manager->add (new llvm::DataLayout (*engine->getDataLayout ()));
 #else
   pass_manager->add (new llvm::TargetData (*engine->getTargetData ()));
 #endif
   pass_manager->add (llvm::createCFGSimplificationPass ());
   pass_manager->add (llvm::createBasicAliasAnalysisPass ());
   pass_manager->add (llvm::createPromoteMemoryToRegisterPass ());
   pass_manager->add (llvm::createInstructionCombiningPass ());
@@ -2186,17 +2186,17 @@ tree_jit::optimize (llvm::Function *fn)
     llvm::verifyModule (*module);
 
   module_pass_manager->run (*module);
   pass_manager->run (*fn);
 
   if (Vdebug_jit)
     {
       std::string error;
-#ifdef RAW_FD_OSTREAM_ARG_IS_LLVM_SYS_FS
+#if defined (RAW_FD_OSTREAM_ARG_IS_LLVM_SYS_FS)
       llvm::raw_fd_ostream fout ("test.bc", error,
                                  llvm::sys::fs::F_Binary);
 #else
       llvm::raw_fd_ostream fout ("test.bc", error,
                                  llvm::raw_fd_ostream::F_Binary);
 #endif
       llvm::WriteBitcodeToFile (module, fout);
     }
diff --git a/libinterp/corefcn/pt-jit.h b/libinterp/corefcn/pt-jit.h
--- a/libinterp/corefcn/pt-jit.h
+++ b/libinterp/corefcn/pt-jit.h
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 // Author: Max Brister <max@2bass.com>
 
 #if ! defined (octave_pt_jit_h)
 #define octave_pt_jit_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include "jit-ir.h"
 #include "pt-walk.h"
 #include "symtab.h"
 
 class octave_value_list;
 
 // Convert from the parse tree (AST) to the low level Octave IR.
@@ -383,17 +383,17 @@ private:
   bool do_execute (octave_user_function& fcn, const octave_value_list& args,
                    octave_value_list& retval);
 
   bool enabled (void);
 
   size_t trip_count (const octave_value& bounds) const;
 
   llvm::Module *module;
-#ifdef LEGACY_PASSMANAGER
+#if defined (LEGACY_PASSMANAGER)
   llvm::legacy::PassManager *module_pass_manager;
   llvm::legacy::FunctionPassManager *pass_manager;
 #else
   llvm::PassManager *module_pass_manager;
   llvm::FunctionPassManager *pass_manager;
 #endif
   llvm::ExecutionEngine *engine;
 };
diff --git a/libinterp/corefcn/quad.cc b/libinterp/corefcn/quad.cc
--- a/libinterp/corefcn/quad.cc
+++ b/libinterp/corefcn/quad.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include <iomanip>
 #include <iostream>
 
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-ieee.h"
 #include "oct-locbuf.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -23,17 +23,17 @@ along with Octave; see the file COPYING.
 // Generalized eigenvalue balancing via LAPACK
 
 // Author: A. S. Hodel <scotte@eng.auburn.edu>
 
 #undef DEBUG
 #undef DEBUG_SORT
 #undef DEBUG_EIG
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <iomanip>
 
@@ -254,17 +254,17 @@ fin (const octave_idx_type& lsize, const
 {
   octave_idx_type retval;
 
   if (lsize == 1)
     retval = (fabs (alpha) < fabs (beta) ? 1 : -1);
   else
     retval = (fabs (p) < 1 ? 1 : -1);
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: fin: retval=" << retval << std::endl;
 #endif
 
   return retval;
 }
 
 static octave_idx_type
 folhp (const octave_idx_type& lsize, const double& alpha,
@@ -369,28 +369,28 @@ in the closed right half-plane\n\
 Note: @code{qz} performs permutation balancing, but not scaling\n\
 (@pxref{XREFbalance}).  The order of output arguments was selected for\n\
 compatibility with @sc{matlab}.\n\
 @seealso{eig, balance, lu, chol, hess, qr, qzhess, schur, svd}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: nargin = " << nargin
             << ", nargout = " << nargout << std::endl;
 #endif
 
   if (nargin < 2 || nargin > 3 || nargout > 7)
     print_usage ();
 
   if (nargin == 3 && (nargout < 3 || nargout > 4))
     error ("qz: invalid number of output arguments for form [3] call");
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: determine ordering option" << std::endl;
 #endif
 
   // Determine ordering option.
   volatile char ord_job = 0;
   static double safmin;
 
   if (nargin == 2)
@@ -408,50 +408,50 @@ compatibility with @sc{matlab}.\n\
              || ord_job == '+' || ord_job == '-'))
         error ("qz: invalid order option");
 
       // overflow constant required by dlag2
       F77_FUNC (xdlamch, XDLAMCH) (F77_CONST_CHAR_ARG2 ("S", 1),
                                    safmin
                                    F77_CHAR_ARG_LEN (1));
 
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
       std::cout << "qz: initial value of safmin="
                 << setiosflags (std::ios::scientific)
                 << safmin << std::endl;
 #endif
 
       // Some machines (e.g., DEC alpha) get safmin = 0;
       // for these, use eps instead to avoid problems in dlag2.
       if (safmin == 0)
         {
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
           std::cout << "qz: DANGER WILL ROBINSON: safmin is 0!" << std::endl;
 #endif
 
           F77_FUNC (xdlamch, XDLAMCH) (F77_CONST_CHAR_ARG2 ("E", 1),
                                        safmin
                                        F77_CHAR_ARG_LEN (1));
 
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
           std::cout << "qz: safmin set to "
                     << setiosflags (std::ios::scientific)
                     << safmin << std::endl;
 #endif
         }
     }
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: check argument 1" << std::endl;
 #endif
 
   // Argument 1: check if it's o.k. dimensioned.
   octave_idx_type nn = args(0).rows ();
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "argument 1 dimensions: ("
             << nn << "," << args(0).columns () << ")"
             << std::endl;
 #endif
 
   octave_value_list retval;
 
   int arg_is_empty = empty_arg ("qz", nn, args(0).columns ());
@@ -473,17 +473,17 @@ compatibility with @sc{matlab}.\n\
   Matrix aa;
   ComplexMatrix caa;
 
   if (args(0).is_complex_type ())
     caa = args(0).complex_matrix_value ();
   else
     aa = args(0).matrix_value ();
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: check argument 2" << std::endl;
 #endif
 
   // Extract argument 2 (bb, or cbb if complex).
   if ((nn != args(1).columns ()) || (nn != args(1).rows ()))
     err_nonconformant ();
 
   Matrix bb;
@@ -523,17 +523,17 @@ compatibility with @sc{matlab}.\n\
         }
 
   // Always perform permutation balancing.
   const char bal_job = 'P';
   RowVector lscale (nn), rscale (nn), work (6 * nn), rwork (nn);
 
   if (complex_case)
     {
-#ifdef DEBUG
+#if defined (DEBUG)
       if (compq == 'V')
         std::cout << "qz: performing balancing; CQ=" << std::endl
                   << CQ << std::endl;
 #endif
       if (args(0).is_real_type ())
         caa = ComplexMatrix (aa);
 
       if (args(1).is_real_type ())
@@ -549,17 +549,17 @@ compatibility with @sc{matlab}.\n\
                 (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                  nn, caa.fortran_vec (), nn, cbb.fortran_vec (),
                  nn, ilo, ihi, lscale.fortran_vec (),
                  rscale.fortran_vec (), work.fortran_vec (), info
                  F77_CHAR_ARG_LEN (1)));
     }
   else
     {
-#ifdef DEBUG
+#if defined (DEBUG)
       if (compq == 'V')
         std::cout << "qz: performing balancing; QQ=" << std::endl
                   << QQ << std::endl;
 #endif
 
       F77_XFCN (dggbal, DGGBAL,
                 (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                  nn, aa.fortran_vec (), nn, bb.fortran_vec (),
@@ -577,34 +577,34 @@ compatibility with @sc{matlab}.\n\
       F77_XFCN (dggbak, DGGBAK,
                 (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                  F77_CONST_CHAR_ARG2 ("L", 1),
                  nn, ilo, ihi, lscale.data (), rscale.data (),
                  nn, QQ.fortran_vec (), nn, info
                  F77_CHAR_ARG_LEN (1)
                  F77_CHAR_ARG_LEN (1)));
 
-#ifdef DEBUG
+#if defined (DEBUG)
       if (compq == 'V')
         std::cout << "qz: balancing done; QQ=" << std::endl << QQ << std::endl;
 #endif
   }
 
   // then right
   if (compz == 'V')
     {
       F77_XFCN (dggbak, DGGBAK,
                 (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                  F77_CONST_CHAR_ARG2 ("R", 1),
                  nn, ilo, ihi, lscale.data (), rscale.data (),
                  nn, ZZ.fortran_vec (), nn, info
                  F77_CHAR_ARG_LEN (1)
                  F77_CHAR_ARG_LEN (1)));
 
-#ifdef DEBUG
+#if defined (DEBUG)
       if (compz == 'V')
         std::cout << "qz: balancing done; ZZ=" << std::endl << ZZ << std::endl;
 #endif
     }
 #endif
 
   static char qz_job;
   qz_job = (nargout < 2 ? 'E' : 'S');
@@ -669,52 +669,52 @@ compatibility with @sc{matlab}.\n\
                      nn, CZ.fortran_vec (), nn, info
                      F77_CHAR_ARG_LEN (1)
                      F77_CHAR_ARG_LEN (1)));
         }
 
     }
   else
     {
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: peforming qr decomposition of bb" << std::endl;
 #endif
 
       // Compute the QR factorization of bb.
       qr<Matrix> bqr (bb);
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: qr (bb) done; now peforming qz decomposition"
                 << std::endl;
 #endif
 
       bb = bqr.R ();
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: extracted bb" << std::endl;
 #endif
 
       aa = (bqr.Q ()).transpose () * aa;
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: updated aa " << std::endl;
       std::cout << "bqr.Q () = " << std::endl << bqr.Q () << std::endl;
 
       if (compq == 'V')
         std::cout << "QQ =" << QQ << std::endl;
 #endif
 
       if (compq == 'V')
         QQ = QQ * bqr.Q ();
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: precursors done..." << std::endl;
 #endif
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: compq = " << compq << ", compz = " << compz
                 << std::endl;
 #endif
 
       // Reduce to generalized Hessenberg form.
       F77_XFCN (dgghrd, DGGHRD,
                 (F77_CONST_CHAR_ARG2 (&compq, 1),
                  F77_CONST_CHAR_ARG2 (&compz, 1),
@@ -745,17 +745,17 @@ compatibility with @sc{matlab}.\n\
           F77_XFCN (dggbak, DGGBAK,
                     (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                      F77_CONST_CHAR_ARG2 ("L", 1),
                      nn, ilo, ihi, lscale.data (), rscale.data (),
                      nn, QQ.fortran_vec (), nn, info
                      F77_CHAR_ARG_LEN (1)
                      F77_CHAR_ARG_LEN (1)));
 
-#ifdef DEBUG
+#if defined (DEBUG)
           if (compq == 'V')
             std::cout << "qz: balancing done; QQ=" << std::endl
                       << QQ << std::endl;
 #endif
         }
 
       // then right
       if (compz == 'V')
@@ -763,33 +763,33 @@ compatibility with @sc{matlab}.\n\
           F77_XFCN (dggbak, DGGBAK,
                     (F77_CONST_CHAR_ARG2 (&bal_job, 1),
                      F77_CONST_CHAR_ARG2 ("R", 1),
                      nn, ilo, ihi, lscale.data (), rscale.data (),
                      nn, ZZ.fortran_vec (), nn, info
                      F77_CHAR_ARG_LEN (1)
                      F77_CHAR_ARG_LEN (1)));
 
-#ifdef DEBUG
+#if defined (DEBUG)
           if (compz == 'V')
             std::cout << "qz: balancing done; ZZ=" << std::endl
                       << ZZ << std::endl;
 #endif
         }
 
     }
 
   // Order the QZ decomposition?
   if (! (ord_job == 'N' || ord_job == 'n'))
     {
       if (complex_case)
         // Probably not needed, but better be safe.
         error ("qz: cannot re-order complex qz decomposition");
 
-#ifdef DEBUG_SORT
+#if defined (DEBUG_SORT)
       std::cout << "qz: ordering eigenvalues: ord_job = "
                 << ord_job << std::endl;
 #endif
 
       // Declared static to avoid vfork/long jump compiler complaints.
       static sort_function sort_test;
       sort_test = 0;
 
@@ -825,17 +825,17 @@ compatibility with @sc{matlab}.\n\
 
       F77_XFCN (xdlange, XDLANGE,
                 (F77_CONST_CHAR_ARG2 ("I", 1),
                  nn, nn, aa.data (), nn, work.fortran_vec (), inf_norm
                  F77_CHAR_ARG_LEN (1)));
 
       double eps = std::numeric_limits<double>::epsilon () * inf_norm * nn;
 
-#ifdef DEBUG_SORT
+#if defined (DEBUG_SORT)
       std::cout << "qz: calling dsubsp: aa=" << std::endl;
       octave_print_internal (std::cout, aa, 0);
       std::cout << std::endl << "bb="  << std::endl;
       octave_print_internal (std::cout, bb, 0);
       if (compz == 'V')
         {
           std::cout << std::endl << "ZZ="  << std::endl;
           octave_print_internal (std::cout, ZZ, 0);
@@ -852,17 +852,17 @@ compatibility with @sc{matlab}.\n\
 
       Array<octave_idx_type> ind (dim_vector (nn, 1));
 
       F77_XFCN (dsubsp, DSUBSP,
                 (nn, nn, aa.fortran_vec (), bb.fortran_vec (),
                  ZZ.fortran_vec (), sort_test, eps, ndim, fail,
                  ind.fortran_vec ()));
 
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: back from dsubsp: aa=" << std::endl;
       octave_print_internal (std::cout, aa, 0);
       std::cout << std::endl << "bb="  << std::endl;
       octave_print_internal (std::cout, bb, 0);
       if (compz == 'V')
         {
           std::cout << std::endl << "ZZ="  << std::endl;
           octave_print_internal (std::cout, ZZ, 0);
@@ -871,49 +871,49 @@ compatibility with @sc{matlab}.\n\
 #endif
 
       // Manually update alphar, alphai, betar.
       static int jj;
 
       jj = 0;
       while (jj < nn)
         {
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
           std::cout << "computing gen eig #" << jj << std::endl;
 #endif
 
           // Number of zeros in this block.
           static int zcnt;
 
           if (jj == (nn-1))
             zcnt = 1;
           else if (aa(jj+1,jj) == 0)
             zcnt = 1;
           else zcnt = 2;
 
           if (zcnt == 1)
             {
               // Real zero.
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
               std::cout << "  single gen eig:" << std::endl;
               std::cout << "  alphar(" << jj << ") = " << aa(jj,jj)
                         << std::endl;
               std::cout << "  betar(" << jj << ") = " << bb(jj,jj)
                         << std::endl;
               std::cout << "  alphai(" << jj << ") = 0" << std::endl;
 #endif
 
               alphar(jj) = aa(jj,jj);
               alphai(jj) = 0;
               betar(jj) = bb(jj,jj);
             }
           else
             {
               // Complex conjugate pair.
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
               std::cout << "qz: calling dlag2:" << std::endl;
               std::cout << "safmin="
                         << setiosflags (std::ios::scientific)
                         << safmin << std::endl;
 
               for (int idr = jj; idr <= jj+1; idr++)
                 {
                   for (int idc = jj; idc <= jj+1; idc++)
@@ -931,17 +931,17 @@ compatibility with @sc{matlab}.\n\
 
               double scale1, scale2, wr1, wr2, wi;
               const double *aa_ptr = aa.data () + jj * nn + jj;
               const double *bb_ptr = bb.data () + jj * nn + jj;
               F77_XFCN (dlag2, DLAG2,
                         (aa_ptr, nn, bb_ptr, nn, safmin,
                          scale1, scale2, wr1, wr2, wi));
 
-#ifdef DEBUG_EIG
+#if defined (DEBUG_EIG)
               std::cout << "dlag2 returns: scale1=" << scale1
                         << "\tscale2=" << scale2 << std::endl
                         << "\twr1=" << wr1 << "\twr2=" << wr2
                         << "\twi=" << wi << std::endl;
 #endif
 
               // Just to be safe, check if it's a real pair.
               if (wi == 0)
@@ -960,17 +960,17 @@ compatibility with @sc{matlab}.\n\
                   betar(jj)  = betar(jj+1) = scale1;
                 }
             }
 
           // Advance past this block.
           jj += zcnt;
         }
 
-#ifdef DEBUG_SORT
+#if defined (DEBUG_SORT)
       std::cout << "qz: back from dsubsp: aa=" << std::endl;
       octave_print_internal (std::cout, aa, 0);
       std::cout << std::endl << "bb="  << std::endl;
       octave_print_internal (std::cout, bb, 0);
 
       if (compz == 'V')
         {
           std::cout << std::endl << "ZZ="  << std::endl;
@@ -1005,17 +1005,17 @@ compatibility with @sc{matlab}.\n\
           cnt = 0;
           for (int ii = 0; ii < nn; ii++)
             tmp(cnt++) = xalpha(ii) / xbeta(ii);
 
           gev = tmp;
         }
       else
         {
-#ifdef DEBUG
+#if defined (DEBUG)
           std::cout << "qz: computing generalized eigenvalues" << std::endl;
 #endif
 
           // Return finite generalized eigenvalues.
           int cnt = 0;
 
           for (int ii = 0; ii < nn; ii++)
             if (betar(ii) != 0)
@@ -1056,17 +1056,17 @@ compatibility with @sc{matlab}.\n\
                      select, nn, caa.fortran_vec (), nn, cbb.fortran_vec (),
                      nn, CVL.fortran_vec (), nn, CVR.fortran_vec (), nn, nn,
                      m, cwork2.fortran_vec (), rwork2.fortran_vec (), info
                      F77_CHAR_ARG_LEN (1)
                      F77_CHAR_ARG_LEN (1)));
         }
       else
         {
-#ifdef DEBUG
+#if defined (DEBUG)
           std::cout << "qz: computing generalized eigenvectors" << std::endl;
 #endif
 
           VL = QQ;
           VR = ZZ;
           octave_idx_type m;
 
           F77_XFCN (dtgevc, DTGEVC,
@@ -1141,17 +1141,17 @@ compatibility with @sc{matlab}.\n\
 
     case 5:
       // Return eigenvectors.
       retval(4) = CVR;
 
     case 4:
       if (nargin == 3)
         {
-#ifdef DEBUG
+#if defined (DEBUG)
           std::cout << "qz: sort: retval(3) = gev = " << std::endl;
           octave_print_internal (std::cout, gev);
           std::cout << std::endl;
 #endif
           retval(3) = gev;
         }
       else
         {
@@ -1176,55 +1176,55 @@ compatibility with @sc{matlab}.\n\
           else
             retval(2) = QQ.transpose ();
         }
 
     case 2:
       {
         if (complex_case)
           {
-#ifdef DEBUG
+#if defined (DEBUG)
             std::cout << "qz: retval(1) = cbb = " << std::endl;
             octave_print_internal (std::cout, cbb, 0);
             std::cout << std::endl << "qz: retval(0) = caa = " <<std::endl;
             octave_print_internal (std::cout, caa, 0);
             std::cout << std::endl;
 #endif
             retval(1) = cbb;
             retval(0) = caa;
           }
         else
           {
-#ifdef DEBUG
+#if defined (DEBUG)
             std::cout << "qz: retval(1) = bb = " << std::endl;
             octave_print_internal (std::cout, bb, 0);
             std::cout << std::endl << "qz: retval(0) = aa = " <<std::endl;
             octave_print_internal (std::cout, aa, 0);
             std::cout << std::endl;
 #endif
             retval(1) = bb;
             retval(0) = aa;
           }
       }
       break;
 
     case 1:
     case 0:
-#ifdef DEBUG
+#if defined (DEBUG)
       std::cout << "qz: retval(0) = gev = " << gev << std::endl;
 #endif
       retval(0) = gev;
       break;
 
     default:
       error ("qz: too many return arguments");
       break;
   }
 
-#ifdef DEBUG
+#if defined (DEBUG)
   std::cout << "qz: exiting (at long last)" << std::endl;
 #endif
 
   return retval;
 }
 
 /*
 %!shared a, b, c
diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <ctime>
 #if defined (HAVE_UNORDERED_MAP)
 #  include <unordered_map>
 #elif defined (HAVE_TR1_UNORDERED_MAP)
 #  include <tr1/unordered_map>
@@ -1073,17 +1073,17 @@ replacement from @code{1:@var{n}}.\n\
 \n\
 The complexity is O(@var{n}) in memory and O(@var{m}) in time, unless\n\
 @var{m} < @var{n}/5, in which case O(@var{m}) memory is used as well.  The\n\
 randomization is performed using rand().  All permutations are equally\n\
 likely.\n\
 @seealso{perms}\n\
 @end deftypefn")
 {
-#ifdef USE_UNORDERED_MAP_WITH_TR1
+#if defined (USE_UNORDERED_MAP_WITH_TR1)
 using std::tr1::unordered_map;
 #else
 using std::unordered_map;
 #endif
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
diff --git a/libinterp/corefcn/rcond.cc b/libinterp/corefcn/rcond.cc
--- a/libinterp/corefcn/rcond.cc
+++ b/libinterp/corefcn/rcond.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <list>
 #include <sstream>
 
 #include <pcre.h>
 
diff --git a/libinterp/corefcn/schur.cc b/libinterp/corefcn/schur.cc
--- a/libinterp/corefcn/schur.cc
+++ b/libinterp/corefcn/schur.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "schur.h"
 
 #include "defun.h"
diff --git a/libinterp/corefcn/sighandlers.cc b/libinterp/corefcn/sighandlers.cc
--- a/libinterp/corefcn/sighandlers.cc
+++ b/libinterp/corefcn/sighandlers.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <iostream>
 #include <new>
 
@@ -121,17 +121,17 @@ private:
 
     DuplicateHandle (GetCurrentProcess (), GetCurrentThread (),
                      GetCurrentProcess (), &thread, 0, FALSE,
                      DUPLICATE_SAME_ACCESS);
   }
 
   static void octave_jump_to_enclosing_context_sync (void)
   {
-#ifdef _MSC_VER
+#if defined (_MSC_VER)
     _fpreset ();
 #endif
     ::octave_jump_to_enclosing_context ();
   }
 
   void do_octave_jump_to_enclosing_context (void)
   {
     bool is_interrupt_thread = (GetCurrentThreadId () == thread_id);
@@ -221,17 +221,17 @@ w32_interrupt_manager* w32_interrupt_man
 void w32_raise_sigint (void)
 {
   w32_interrupt_manager::raise_sigint ();
 }
 
 #endif
 
 // Signal handler return type.
-#ifndef BADSIG
+#if ! defined (BADSIG)
 #  define BADSIG (void (*)(int))-1
 #endif
 
 // The following is a workaround for an apparent bug in GCC 4.1.2 and
 // possibly earlier versions.  See Octave bug report #30685 for details.
 #if defined (__GNUC__)
 #  if ! (__GNUC__ > 4 \
          || (__GNUC__ == 4 && (__GNUC_MINOR__ > 1 \
@@ -271,17 +271,17 @@ octave_signal_handler (void)
   for (int i = 0; i < NSIG; i++)
     {
       if (octave_signals_caught[i])
         {
           octave_signals_caught[i] = false;
 
           switch (i)
             {
-#ifdef SIGCHLD
+#if defined (SIGCHLD)
             case SIGCHLD:
               {
                 volatile octave_interrupt_handler saved_interrupt_handler
                   = octave_ignore_interrupts ();
 
                 sigset_t set, oset;
 
                 BLOCK_CHILD (set, oset);
@@ -296,17 +296,17 @@ octave_signal_handler (void)
               }
               break;
 #endif
 
             case SIGFPE:
               std::cerr << "warning: floating point exception" << std::endl;
               break;
 
-#ifdef SIGPIPE
+#if defined (SIGPIPE)
             case SIGPIPE:
               std::cerr << "warning: broken pipe" << std::endl;
               break;
 #endif
             }
         }
     }
 }
@@ -390,17 +390,17 @@ octave_set_signal_handler (int sig, sig_
 static void
 generic_sig_handler (int sig)
 {
   my_friendly_exit (strsignal (sig), sig);
 }
 
 // Handle SIGCHLD.
 
-#ifdef SIGCHLD
+#if defined (SIGCHLD)
 static void
 sigchld_handler (int /* sig */)
 {
   octave_signal_caught = 1;
 
   octave_signals_caught[SIGCHLD] = true;
 }
 #endif
@@ -534,17 +534,17 @@ sigint_handler (int sig)
 {
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   w32_interrupt_manager::user_abort (strsignal (sig), sig);
 #else
   user_abort (strsignal (sig), sig);
 #endif
 }
 
-#ifdef SIGPIPE
+#if defined (SIGPIPE)
 static void
 sigpipe_handler (int /* sig */)
 {
   octave_signal_caught = 1;
 
   octave_signals_caught[SIGPIPE] = true;
 
   // Don't loop forever on account of this.
@@ -558,63 +558,63 @@ octave_interrupt_handler
 octave_catch_interrupts (void)
 {
   octave_interrupt_handler retval;
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   w32_interrupt_manager::init ();
 #endif
 
-#ifdef SIGINT
+#if defined (SIGINT)
   retval.int_handler = octave_set_signal_handler (SIGINT, sigint_handler);
 #endif
 
-#ifdef SIGBREAK
+#if defined (SIGBREAK)
   retval.brk_handler = octave_set_signal_handler (SIGBREAK, sigint_handler);
 #endif
 
   return retval;
 }
 
 octave_interrupt_handler
 octave_ignore_interrupts (void)
 {
   octave_interrupt_handler retval;
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   w32_interrupt_manager::init ();
 #endif
 
-#ifdef SIGINT
+#if defined (SIGINT)
   retval.int_handler = octave_set_signal_handler (SIGINT, SIG_IGN);
 #endif
 
-#ifdef SIGBREAK
+#if defined (SIGBREAK)
   retval.brk_handler = octave_set_signal_handler (SIGBREAK, SIG_IGN);
 #endif
 
   return retval;
 }
 
 octave_interrupt_handler
 octave_set_interrupt_handler (const volatile octave_interrupt_handler& h,
                               bool restart_syscalls)
 {
   octave_interrupt_handler retval;
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
   w32_interrupt_manager::init ();
 #endif
 
-#ifdef SIGINT
+#if defined (SIGINT)
   retval.int_handler = octave_set_signal_handler (SIGINT, h.int_handler,
                                                   restart_syscalls);
 #endif
 
-#ifdef SIGBREAK
+#if defined (SIGBREAK)
   retval.brk_handler = octave_set_signal_handler (SIGBREAK, h.brk_handler,
                                                   restart_syscalls);
 #endif
 
   return retval;
 }
 
 // Install all the handlers for the signals we might care about.
@@ -622,290 +622,290 @@ octave_set_interrupt_handler (const vola
 void
 install_signal_handlers (void)
 {
   for (int i = 0; i < NSIG; i++)
     octave_signals_caught[i] = false;
 
   octave_catch_interrupts ();
 
-#ifdef SIGABRT
+#if defined (SIGABRT)
   octave_set_signal_handler (SIGABRT, generic_sig_handler);
 #endif
 
-#ifdef SIGALRM
+#if defined (SIGALRM)
   octave_set_signal_handler (SIGALRM, generic_sig_handler);
 #endif
 
-#ifdef SIGBUS
+#if defined (SIGBUS)
   octave_set_signal_handler (SIGBUS, generic_sig_handler);
 #endif
 
-#ifdef SIGCHLD
+#if defined (SIGCHLD)
   octave_set_signal_handler (SIGCHLD, sigchld_handler);
 #endif
 
   // SIGCLD
   // SIGCONT
 
-#ifdef SIGEMT
+#if defined (SIGEMT)
   octave_set_signal_handler (SIGEMT, generic_sig_handler);
 #endif
 
-#ifdef SIGFPE
+#if defined (SIGFPE)
 #  if defined (__alpha__)
   octave_set_signal_handler (SIGFPE, sigfpe_handler);
 #  else
   octave_set_signal_handler (SIGFPE, generic_sig_handler);
 #  endif
 #endif
 
-#ifdef SIGHUP
+#if defined (SIGHUP)
   octave_set_signal_handler (SIGHUP, sig_hup_or_term_handler);
 #endif
 
-#ifdef SIGILL
+#if defined (SIGILL)
   octave_set_signal_handler (SIGILL, generic_sig_handler);
 #endif
 
   // SIGINFO
   // SIGINT
 
-#ifdef SIGIOT
+#if defined (SIGIOT)
   octave_set_signal_handler (SIGIOT, generic_sig_handler);
 #endif
 
-#ifdef SIGLOST
+#if defined (SIGLOST)
   octave_set_signal_handler (SIGLOST, generic_sig_handler);
 #endif
 
-#ifdef SIGPIPE
+#if defined (SIGPIPE)
   octave_set_signal_handler (SIGPIPE, sigpipe_handler);
 #endif
 
-#ifdef SIGPOLL
+#if defined (SIGPOLL)
   octave_set_signal_handler (SIGPOLL, SIG_IGN);
 #endif
 
   // SIGPROF
   // SIGPWR
 
-#ifdef SIGQUIT
+#if defined (SIGQUIT)
   octave_set_signal_handler (SIGQUIT, generic_sig_handler);
 #endif
 
-#ifdef SIGSEGV
+#if defined (SIGSEGV)
   octave_set_signal_handler (SIGSEGV, generic_sig_handler);
 #endif
 
   // SIGSTOP
 
-#ifdef SIGSYS
+#if defined (SIGSYS)
   octave_set_signal_handler (SIGSYS, generic_sig_handler);
 #endif
 
-#ifdef SIGTERM
+#if defined (SIGTERM)
   octave_set_signal_handler (SIGTERM, sig_hup_or_term_handler);
 #endif
 
-#ifdef SIGTRAP
+#if defined (SIGTRAP)
   octave_set_signal_handler (SIGTRAP, generic_sig_handler);
 #endif
 
   // SIGTSTP
   // SIGTTIN
   // SIGTTOU
   // SIGURG
 
-#ifdef SIGUSR1
+#if defined (SIGUSR1)
   octave_set_signal_handler (SIGUSR1, generic_sig_handler);
 #endif
 
-#ifdef SIGUSR2
+#if defined (SIGUSR2)
   octave_set_signal_handler (SIGUSR2, generic_sig_handler);
 #endif
 
-#ifdef SIGVTALRM
+#if defined (SIGVTALRM)
   octave_set_signal_handler (SIGVTALRM, generic_sig_handler);
 #endif
 
-#ifdef SIGIO
+#if defined (SIGIO)
   octave_set_signal_handler (SIGIO, SIG_IGN);
 #endif
 
 #if 0
-#  ifdef SIGWINCH
+#  if defined (SIGWINCH)
   octave_set_signal_handler (SIGWINCH, sigwinch_handler);
 #endif
 #endif
 
-#ifdef SIGXCPU
+#if defined (SIGXCPU)
   octave_set_signal_handler (SIGXCPU, generic_sig_handler);
 #endif
 
-#ifdef SIGXFSZ
+#if defined (SIGXFSZ)
   octave_set_signal_handler (SIGXFSZ, generic_sig_handler);
 #endif
 
 }
 
 static octave_scalar_map
 make_sig_struct (void)
 {
   octave_scalar_map m;
 
-#ifdef SIGABRT
+#if defined (SIGABRT)
   m.assign ("ABRT", SIGABRT);
 #endif
 
-#ifdef SIGALRM
+#if defined (SIGALRM)
   m.assign ("ALRM", SIGALRM);
 #endif
 
-#ifdef SIGBUS
+#if defined (SIGBUS)
   m.assign ("BUS", SIGBUS);
 #endif
 
-#ifdef SIGCHLD
+#if defined (SIGCHLD)
   m.assign ("CHLD", SIGCHLD);
 #endif
 
-#ifdef SIGCLD
+#if defined (SIGCLD)
   m.assign ("CLD", SIGCLD);
 #endif
 
-#ifdef SIGCONT
+#if defined (SIGCONT)
   m.assign ("CONT", SIGCONT);
 #endif
 
-#ifdef SIGEMT
+#if defined (SIGEMT)
   m.assign ("EMT", SIGEMT);
 #endif
 
-#ifdef SIGFPE
+#if defined (SIGFPE)
   m.assign ("FPE", SIGFPE);
 #endif
 
-#ifdef SIGHUP
+#if defined (SIGHUP)
   m.assign ("HUP", SIGHUP);
 #endif
 
-#ifdef SIGILL
+#if defined (SIGILL)
   m.assign ("ILL", SIGILL);
 #endif
 
-#ifdef SIGINFO
+#if defined (SIGINFO)
   m.assign ("INFO", SIGINFO);
 #endif
 
-#ifdef SIGINT
+#if defined (SIGINT)
   m.assign ("INT", SIGINT);
 #endif
 
-#ifdef SIGIO
+#if defined (SIGIO)
   m.assign ("IO", SIGIO);
 #endif
 
-#ifdef SIGIOT
+#if defined (SIGIOT)
   m.assign ("IOT", SIGIOT);
 #endif
 
-#ifdef SIGKILL
+#if defined (SIGKILL)
   m.assign ("KILL", SIGKILL);
 #endif
 
-#ifdef SIGLOST
+#if defined (SIGLOST)
   m.assign ("LOST", SIGLOST);
 #endif
 
-#ifdef SIGPIPE
+#if defined (SIGPIPE)
   m.assign ("PIPE", SIGPIPE);
 #endif
 
-#ifdef SIGPOLL
+#if defined (SIGPOLL)
   m.assign ("POLL", SIGPOLL);
 #endif
 
-#ifdef SIGPROF
+#if defined (SIGPROF)
   m.assign ("PROF", SIGPROF);
 #endif
 
-#ifdef SIGPWR
+#if defined (SIGPWR)
   m.assign ("PWR", SIGPWR);
 #endif
 
-#ifdef SIGQUIT
+#if defined (SIGQUIT)
   m.assign ("QUIT", SIGQUIT);
 #endif
 
-#ifdef SIGSEGV
+#if defined (SIGSEGV)
   m.assign ("SEGV", SIGSEGV);
 #endif
 
-#ifdef SIGSTKFLT
+#if defined (SIGSTKFLT)
   m.assign ("STKFLT", SIGSTKFLT);
 #endif
 
-#ifdef SIGSTOP
+#if defined (SIGSTOP)
   m.assign ("STOP", SIGSTOP);
 #endif
 
-#ifdef SIGSYS
+#if defined (SIGSYS)
   m.assign ("SYS", SIGSYS);
 #endif
 
-#ifdef SIGTERM
+#if defined (SIGTERM)
   m.assign ("TERM", SIGTERM);
 #endif
 
-#ifdef SIGTRAP
+#if defined (SIGTRAP)
   m.assign ("TRAP", SIGTRAP);
 #endif
 
-#ifdef SIGTSTP
+#if defined (SIGTSTP)
   m.assign ("TSTP", SIGTSTP);
 #endif
 
-#ifdef SIGTTIN
+#if defined (SIGTTIN)
   m.assign ("TTIN", SIGTTIN);
 #endif
 
-#ifdef SIGTTOU
+#if defined (SIGTTOU)
   m.assign ("TTOU", SIGTTOU);
 #endif
 
-#ifdef SIGUNUSED
+#if defined (SIGUNUSED)
   m.assign ("UNUSED", SIGUNUSED);
 #endif
 
-#ifdef SIGURG
+#if defined (SIGURG)
   m.assign ("URG", SIGURG);
 #endif
 
-#ifdef SIGUSR1
+#if defined (SIGUSR1)
   m.assign ("USR1", SIGUSR1);
 #endif
 
-#ifdef SIGUSR2
+#if defined (SIGUSR2)
   m.assign ("USR2", SIGUSR2);
 #endif
 
-#ifdef SIGVTALRM
+#if defined (SIGVTALRM)
   m.assign ("VTALRM", SIGVTALRM);
 #endif
 
-#ifdef SIGWINCH
+#if defined (SIGWINCH)
   m.assign ("WINCH", SIGWINCH);
 #endif
 
-#ifdef SIGXCPU
+#if defined (SIGXCPU)
   m.assign ("XCPU", SIGXCPU);
 #endif
 
-#ifdef SIGXFSZ
+#if defined (SIGXFSZ)
   m.assign ("XFSZ", SIGXFSZ);
 #endif
 
   return m;
 }
 
 octave_child_list::octave_child_list_rep *octave_child_list::instance = 0;
 
diff --git a/libinterp/corefcn/sighandlers.h b/libinterp/corefcn/sighandlers.h
--- a/libinterp/corefcn/sighandlers.h
+++ b/libinterp/corefcn/sighandlers.h
@@ -45,21 +45,21 @@ Free Software Foundation, Inc.
 
 typedef void sig_handler (int);
 
 // FIXME: the data should probably be private...
 
 struct
 octave_interrupt_handler
 {
-#ifdef SIGINT
+#if defined (SIGINT)
   sig_handler *int_handler;
 #endif
 
-#ifdef SIGBREAK
+#if defined (SIGBREAK)
   sig_handler *brk_handler;
 #endif
 };
 
 // Nonzero means we have already printed a message for this series of
 // SIGPIPES.  We assume that the writer will eventually give up.
 extern int pipe_handler_error_count;
 
diff --git a/libinterp/corefcn/siglist.c b/libinterp/corefcn/siglist.c
--- a/libinterp/corefcn/siglist.c
+++ b/libinterp/corefcn/siglist.c
@@ -15,31 +15,31 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include <signal.h>
 
 #include "siglist.h"
 
 /* The following is all borrowed from Emacs.  */
 
 #if ! (defined HAVE_STRSIGNAL || HAVE_DECL_SYS_SIGLIST)
 
 static char *my_sys_siglist[NSIG];
 
-#ifdef sys_siglist
+#if defined (sys_siglist)
 #undef sys_siglist
 #endif
 #define sys_siglist my_sys_siglist
 
 #endif
 
 void
 init_signals (void)
@@ -47,176 +47,176 @@ init_signals (void)
 #if ! (defined HAVE_STRSIGNAL || HAVE_DECL_SYS_SIGLIST)
 
   static int initialized = 0;
 
   if (! initialized)
     {
       initialized = 1;
 
-# ifdef SIGABRT
+# if defined (SIGABRT)
       sys_siglist[SIGABRT] = "Aborted";
 # endif
-# ifdef SIGAIO
+# if defined (SIGAIO)
       sys_siglist[SIGAIO] = "LAN I/O interrupt";
 # endif
-# ifdef SIGALRM
+# if defined (SIGALRM)
       sys_siglist[SIGALRM] = "Alarm clock";
 # endif
-# ifdef SIGBUS
+# if defined (SIGBUS)
       sys_siglist[SIGBUS] = "Bus error";
 # endif
-# ifdef SIGCLD
+# if defined (SIGCLD)
       sys_siglist[SIGCLD] = "Child status changed";
 # endif
-# ifdef SIGCHLD
+# if defined (SIGCHLD)
       sys_siglist[SIGCHLD] = "Child status changed";
 # endif
-# ifdef SIGCONT
+# if defined (SIGCONT)
       sys_siglist[SIGCONT] = "Continued";
 # endif
-# ifdef SIGDANGER
+# if defined (SIGDANGER)
       sys_siglist[SIGDANGER] = "Swap space dangerously low";
 # endif
-# ifdef SIGDGNOTIFY
+# if defined (SIGDGNOTIFY)
       sys_siglist[SIGDGNOTIFY] = "Notification message in queue";
 # endif
-# ifdef SIGEMT
+# if defined (SIGEMT)
       sys_siglist[SIGEMT] = "Emulation trap";
 # endif
-# ifdef SIGFPE
+# if defined (SIGFPE)
       sys_siglist[SIGFPE] = "Arithmetic exception";
 # endif
-# ifdef SIGFREEZE
+# if defined (SIGFREEZE)
       sys_siglist[SIGFREEZE] = "SIGFREEZE";
 # endif
-# ifdef SIGGRANT
+# if defined (SIGGRANT)
       sys_siglist[SIGGRANT] = "Monitor mode granted";
 # endif
-# ifdef SIGHUP
+# if defined (SIGHUP)
       sys_siglist[SIGHUP] = "Hangup";
 # endif
-# ifdef SIGILL
+# if defined (SIGILL)
       sys_siglist[SIGILL] = "Illegal instruction";
 # endif
-# ifdef SIGINT
+# if defined (SIGINT)
       sys_siglist[SIGINT] = "Interrupt";
 # endif
-# ifdef SIGIO
+# if defined (SIGIO)
       sys_siglist[SIGIO] = "I/O possible";
 # endif
-# ifdef SIGIOINT
+# if defined (SIGIOINT)
       sys_siglist[SIGIOINT] = "I/O intervention required";
 # endif
-# ifdef SIGIOT
+# if defined (SIGIOT)
       sys_siglist[SIGIOT] = "IOT trap";
 # endif
-# ifdef SIGKILL
+# if defined (SIGKILL)
       sys_siglist[SIGKILL] = "Killed";
 # endif
-# ifdef SIGLOST
+# if defined (SIGLOST)
       sys_siglist[SIGLOST] = "Resource lost";
 # endif
-# ifdef SIGLWP
+# if defined (SIGLWP)
       sys_siglist[SIGLWP] = "SIGLWP";
 # endif
-# ifdef SIGMSG
+# if defined (SIGMSG)
       sys_siglist[SIGMSG] = "Monitor mode data available";
 # endif
-# ifdef SIGPHONE
+# if defined (SIGPHONE)
       sys_siglist[SIGPHONE] = "SIGPHONE";
 # endif
-# ifdef SIGPIPE
+# if defined (SIGPIPE)
       sys_siglist[SIGPIPE] = "Broken pipe";
 # endif
-# ifdef SIGPOLL
+# if defined (SIGPOLL)
       sys_siglist[SIGPOLL] = "Pollable event occurred";
 # endif
-# ifdef SIGPROF
+# if defined (SIGPROF)
       sys_siglist[SIGPROF] = "Profiling timer expired";
 # endif
-# ifdef SIGPTY
+# if defined (SIGPTY)
       sys_siglist[SIGPTY] = "PTY I/O interrupt";
 # endif
-# ifdef SIGPWR
+# if defined (SIGPWR)
       sys_siglist[SIGPWR] = "Power-fail restart";
 # endif
-# ifdef SIGQUIT
+# if defined (SIGQUIT)
       sys_siglist[SIGQUIT] = "Quit";
 # endif
-# ifdef SIGRETRACT
+# if defined (SIGRETRACT)
       sys_siglist[SIGRETRACT] = "Need to relinguish monitor mode";
 # endif
-# ifdef SIGSAK
+# if defined (SIGSAK)
       sys_siglist[SIGSAK] = "Secure attention";
 # endif
-# ifdef SIGSEGV
+# if defined (SIGSEGV)
       sys_siglist[SIGSEGV] = "Segmentation violation";
 # endif
-# ifdef SIGSOUND
+# if defined (SIGSOUND)
       sys_siglist[SIGSOUND] = "Sound completed";
 # endif
-# ifdef SIGSTKFLT
+# if defined (SIGSTKFLT)
       sys_siglist[SIGSTKFLT] = "Stack fault";
 # endif
-# ifdef SIGSTOP
+# if defined (SIGSTOP)
       sys_siglist[SIGSTOP] = "Stopped (signal)";
 # endif
-# ifdef SIGSTP
+# if defined (SIGSTP)
       sys_siglist[SIGSTP] = "Stopped (user)";
 # endif
-# ifdef SIGSYS
+# if defined (SIGSYS)
       sys_siglist[SIGSYS] = "Bad argument to system call";
 # endif
-# ifdef SIGTERM
+# if defined (SIGTERM)
       sys_siglist[SIGTERM] = "Terminated";
 # endif
-# ifdef SIGTHAW
+# if defined (SIGTHAW)
       sys_siglist[SIGTHAW] = "SIGTHAW";
 # endif
-# ifdef SIGTRAP
+# if defined (SIGTRAP)
       sys_siglist[SIGTRAP] = "Trace/breakpoint trap";
 # endif
-# ifdef SIGTSTP
+# if defined (SIGTSTP)
       sys_siglist[SIGTSTP] = "Stopped (user)";
 # endif
-# ifdef SIGTTIN
+# if defined (SIGTTIN)
       sys_siglist[SIGTTIN] = "Stopped (tty input)";
 # endif
-# ifdef SIGTTOU
+# if defined (SIGTTOU)
       sys_siglist[SIGTTOU] = "Stopped (tty output)";
 # endif
-# ifdef SIGUNUSED
+# if defined (SIGUNUSED)
       sys_siglist[SIGUNUSED] = "SIGUNUSED";
 # endif
-# ifdef SIGURG
+# if defined (SIGURG)
       sys_siglist[SIGURG] = "Urgent I/O condition";
 # endif
-# ifdef SIGUSR1
+# if defined (SIGUSR1)
       sys_siglist[SIGUSR1] = "User defined signal 1";
 # endif
-# ifdef SIGUSR2
+# if defined (SIGUSR2)
       sys_siglist[SIGUSR2] = "User defined signal 2";
 # endif
-# ifdef SIGVTALRM
+# if defined (SIGVTALRM)
       sys_siglist[SIGVTALRM] = "Virtual timer expired";
 # endif
-# ifdef SIGWAITING
+# if defined (SIGWAITING)
       sys_siglist[SIGWAITING] = "Process's LWPs are blocked";
 # endif
-# ifdef SIGWINCH
+# if defined (SIGWINCH)
       sys_siglist[SIGWINCH] = "Window size changed";
 # endif
-# ifdef SIGWIND
+# if defined (SIGWIND)
       sys_siglist[SIGWIND] = "SIGWIND";
 # endif
-# ifdef SIGXCPU
+# if defined (SIGXCPU)
       sys_siglist[SIGXCPU] = "CPU time limit exceeded";
 # endif
-# ifdef SIGXFSZ
+# if defined (SIGXFSZ)
       sys_siglist[SIGXFSZ] = "File size limit exceeded";
 # endif
     }
 
 #endif
 }
 
 #if ! defined (HAVE_STRSIGNAL)
diff --git a/libinterp/corefcn/siglist.h b/libinterp/corefcn/siglist.h
--- a/libinterp/corefcn/siglist.h
+++ b/libinterp/corefcn/siglist.h
@@ -20,30 +20,30 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_siglist_h)
 #define octave_siglist_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C"
 {
 #endif
 
 /* This is borrowed from Emacs.  */
 
 #if ! defined (HAVE_DECL_SYS_SIGLIST)
 extern char *sys_siglist[];
 #endif
 
 extern void init_signals (void);
 
 #if ! defined (HAVE_STRSIGNAL)
 extern char *strsignal (int);
 #endif
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/libinterp/corefcn/sparse-xdiv.cc b/libinterp/corefcn/sparse-xdiv.cc
--- a/libinterp/corefcn/sparse-xdiv.cc
+++ b/libinterp/corefcn/sparse-xdiv.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include "Array-util.h"
 #include "lo-array-errwarn.h"
 #include "oct-cmplx.h"
diff --git a/libinterp/corefcn/sparse-xpow.cc b/libinterp/corefcn/sparse-xpow.cc
--- a/libinterp/corefcn/sparse-xpow.cc
+++ b/libinterp/corefcn/sparse-xpow.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include <limits>
 
 #include "Array-util.h"
diff --git a/libinterp/corefcn/sparse.cc b/libinterp/corefcn/sparse.cc
--- a/libinterp/corefcn/sparse.cc
+++ b/libinterp/corefcn/sparse.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 #include <string>
 
 #include "variables.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/spparms.cc b/libinterp/corefcn/spparms.cc
--- a/libinterp/corefcn/spparms.cc
+++ b/libinterp/corefcn/spparms.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "ov.h"
 #include "pager.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/sqrtm.cc b/libinterp/corefcn/sqrtm.cc
--- a/libinterp/corefcn/sqrtm.cc
+++ b/libinterp/corefcn/sqrtm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <float.h>
 
 #include "schur.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
diff --git a/libinterp/corefcn/str2double.cc b/libinterp/corefcn/str2double.cc
--- a/libinterp/corefcn/str2double.cc
+++ b/libinterp/corefcn/str2double.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <cctype>
 #include <sstream>
 #include <algorithm>
 
diff --git a/libinterp/corefcn/strfind.cc b/libinterp/corefcn/strfind.cc
--- a/libinterp/corefcn/strfind.cc
+++ b/libinterp/corefcn/strfind.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 #include <deque>
 #include <limits>
 #include <string>
 
diff --git a/libinterp/corefcn/strfns.cc b/libinterp/corefcn/strfns.cc
--- a/libinterp/corefcn/strfns.cc
+++ b/libinterp/corefcn/strfns.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 
 #include <queue>
 #include <sstream>
 
diff --git a/libinterp/corefcn/sub2ind.cc b/libinterp/corefcn/sub2ind.cc
--- a/libinterp/corefcn/sub2ind.cc
+++ b/libinterp/corefcn/sub2ind.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 #include "oct-locbuf.h"
 #include "quit.h"
 
 #include "defun.h"
diff --git a/libinterp/corefcn/svd.cc b/libinterp/corefcn/svd.cc
--- a/libinterp/corefcn/svd.cc
+++ b/libinterp/corefcn/svd.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "svd.h"
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
diff --git a/libinterp/corefcn/sylvester.cc b/libinterp/corefcn/sylvester.cc
--- a/libinterp/corefcn/sylvester.cc
+++ b/libinterp/corefcn/sylvester.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: A. S. Hodel <scotte@eng.auburn.edu>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/corefcn/symtab.cc b/libinterp/corefcn/symtab.cc
--- a/libinterp/corefcn/symtab.cc
+++ b/libinterp/corefcn/symtab.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sstream>
 
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-env.h"
diff --git a/libinterp/corefcn/syscalls.cc b/libinterp/corefcn/syscalls.cc
--- a/libinterp/corefcn/syscalls.cc
+++ b/libinterp/corefcn/syscalls.cc
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 
 */
 
 // Thomas Baier <baier@ci.tuwien.ac.at> added the original versions of
 // the following functions:
 //
 //   mkfifo  unlink  waitpid
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 #include <cstring>
 
 #include <sys/types.h>
 #include <unistd.h>
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cstddef>
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
@@ -84,27 +84,27 @@ along with Octave; see the file COPYING.
 #include "pager.h"
 #include "parse.h"
 #include "sighandlers.h"
 #include "sysdep.h"
 #include "toplev.h"
 #include "utils.h"
 #include "file-stat.h"
 
-#ifndef STDIN_FILENO
+#if ! defined (STDIN_FILENO)
 #  define STDIN_FILENO 1
 #endif
 
 #if defined (__386BSD__) || defined (__FreeBSD__) || defined (__NetBSD__)
 static void
 BSD_init (void)
 {
 #  if defined (HAVE_FLOATINGPOINT_H)
   // Disable trapping on common exceptions.
-#    ifndef FP_X_DNML
+#    if ! defined (FP_X_DNML)
 #      define FP_X_DNML 0
 #    endif
   fpsetmask (~(FP_X_OFL|FP_X_INV|FP_X_DZ|FP_X_DNML|FP_X_UFL|FP_X_IMP));
 #  endif
 }
 #endif
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
@@ -114,17 +114,17 @@ BSD_init (void)
 #include <windows.h>
 
 static void
 w32_set_octave_home (void)
 {
   std::string bin_dir;
 
   HANDLE h = CreateToolhelp32Snapshot (TH32CS_SNAPMODULE
-#ifdef TH32CS_SNAPMODULE32
+#if defined (TH32CS_SNAPMODULE32)
                                        | TH32CS_SNAPMODULE32
 #endif
                                        , 0);
 
   if (h != INVALID_HANDLE_VALUE)
     {
       MODULEENTRY32 mod_info;
 
@@ -245,17 +245,17 @@ MSVC_init (void)
 #endif
 
 
 // Return TRUE if FILE1 and FILE2 refer to the same (physical) file.
 
 bool
 same_file_internal (const std::string& file1, const std::string& file2)
 {
-#ifdef OCTAVE_USE_WINDOWS_API
+#if defined (OCTAVE_USE_WINDOWS_API)
 
   bool retval = false;
 
   const char *f1 = file1.c_str ();
   const char *f2 = file2.c_str ();
 
   bool f1_is_dir = GetFileAttributes (f1) & FILE_ATTRIBUTE_DIRECTORY;
   bool f2_is_dir = GetFileAttributes (f2) & FILE_ATTRIBUTE_DIRECTORY;
diff --git a/libinterp/corefcn/text-renderer.cc b/libinterp/corefcn/text-renderer.cc
--- a/libinterp/corefcn/text-renderer.cc
+++ b/libinterp/corefcn/text-renderer.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include "base-text-renderer.h"
 #include "errwarn.h"
 #include "ft-text-renderer.h"
 #include "text-renderer.h"
 
diff --git a/libinterp/corefcn/time.cc b/libinterp/corefcn/time.cc
--- a/libinterp/corefcn/time.cc
+++ b/libinterp/corefcn/time.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "defun.h"
 #include "error.h"
 #include "oct-map.h"
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cerrno>
 #include <cstdlib>
 #include <cstring>
 #include <new>
@@ -77,17 +77,17 @@ along with Octave; see the file COPYING.
 #include "sysdep.h"
 #include "syswait.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include "version.h"
 
-#ifndef SHELL_PATH
+#if ! defined (SHELL_PATH)
 #  define SHELL_PATH "/bin/sh"
 #endif
 
 void (*octave_exit) (int) = ::exit;
 
 // TRUE means the quit() call is allowed.
 bool quit_allowed = true;
 
@@ -772,17 +772,17 @@ main_loop (void)
       catch (const std::bad_alloc&)
         {
           recover_from_exception ();
 
           std::cerr << "error: out of memory -- trying to return to prompt"
                     << std::endl;
         }
 
-#ifdef DBSTOP_NANINF
+#if defined (DBSTOP_NANINF)
       if (Vdebug_on_naninf)
         {
           if (setjump (naninf_jump) != 0)
             debug_or_throw_exception (true);  // true = stack trace
         }
 #endif
     }
   while (retval == 0);
@@ -1166,17 +1166,17 @@ command shell that is started to run the
   // Work around weird double-quote handling on Windows systems.
   if (type == et_sync)
     cmd_str = "\"" + cmd_str + "\"";
 #endif
 
   if (type == et_async)
     {
       // FIXME: maybe this should go in sysdep.cc?
-#ifdef HAVE_FORK
+#if defined (HAVE_FORK)
       pid_t pid = fork ();
 
       if (pid < 0)
         error ("system: fork failed -- can't create child process");
       else if (pid == 0)
         {
           // FIXME: should probably replace this call with something portable.
           execl (SHELL_PATH, "sh", "-c", cmd_str.c_str (),
diff --git a/libinterp/corefcn/tril.cc b/libinterp/corefcn/tril.cc
--- a/libinterp/corefcn/tril.cc
+++ b/libinterp/corefcn/tril.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 #include "Array.h"
 #include "Sparse.h"
 #include "mx-base.h"
 
diff --git a/libinterp/corefcn/tsearch.cc b/libinterp/corefcn/tsearch.cc
--- a/libinterp/corefcn/tsearch.cc
+++ b/libinterp/corefcn/tsearch.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Andreas Stahel <Andreas.Stahel@hta-bi.bfh.ch>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-ieee.h"
 #include "lo-math.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/corefcn/txt-eng.cc b/libinterp/corefcn/txt-eng.cc
--- a/libinterp/corefcn/txt-eng.cc
+++ b/libinterp/corefcn/txt-eng.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "txt-eng.h"
 #include "oct-tex-symbols.cc"
 
 uint32_t
 text_element_symbol::get_symbol_code (void) const
diff --git a/libinterp/corefcn/typecast.cc b/libinterp/corefcn/typecast.cc
--- a/libinterp/corefcn/typecast.cc
+++ b/libinterp/corefcn/typecast.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <limits>
 
 #include "mx-base.h"
 
 #include "defun.h"
diff --git a/libinterp/corefcn/urlwrite.cc b/libinterp/corefcn/urlwrite.cc
--- a/libinterp/corefcn/urlwrite.cc
+++ b/libinterp/corefcn/urlwrite.cc
@@ -20,17 +20,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Alexander Barth <abarth@marine.usf.edu>
 // Adapted-By: jwe
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 
diff --git a/libinterp/corefcn/utils.cc b/libinterp/corefcn/utils.cc
--- a/libinterp/corefcn/utils.cc
+++ b/libinterp/corefcn/utils.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include <fstream>
 #include <iostream>
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 #include <cstring>
 
 #include <iomanip>
 #include <set>
diff --git a/libinterp/corefcn/xdiv.cc b/libinterp/corefcn/xdiv.cc
--- a/libinterp/corefcn/xdiv.cc
+++ b/libinterp/corefcn/xdiv.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include "Array-util.h"
 #include "CMatrix.h"
 #include "dMatrix.h"
diff --git a/libinterp/corefcn/xgl2ps.c b/libinterp/corefcn/xgl2ps.c
--- a/libinterp/corefcn/xgl2ps.c
+++ b/libinterp/corefcn/xgl2ps.c
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 /* Wrapper for "imported" file gl2ps.c so that config.h will be included
    before any other system or gnulib headers.  */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #if defined (HAVE_OPENGL)
 
 #include "gl2ps.c"
 
 #endif
diff --git a/libinterp/corefcn/xnorm.cc b/libinterp/corefcn/xnorm.cc
--- a/libinterp/corefcn/xnorm.cc
+++ b/libinterp/corefcn/xnorm.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // author: Jaroslav Hajek <highegg@gmail.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cfloat>
 #include <cmath>
 
 #include "oct-norm.h"
diff --git a/libinterp/corefcn/xpow.cc b/libinterp/corefcn/xpow.cc
--- a/libinterp/corefcn/xpow.cc
+++ b/libinterp/corefcn/xpow.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include <limits>
 
 #include "Array-util.h"
diff --git a/libinterp/corefcn/zfstream.cc b/libinterp/corefcn/zfstream.cc
--- a/libinterp/corefcn/zfstream.cc
+++ b/libinterp/corefcn/zfstream.cc
@@ -26,25 +26,25 @@ along with Octave; see the file COPYING.
  This file is adapted from the zlib 1.2.2 contrib/iostream3 code,
  written by
 
    Ludwig Schwardt <schwardt@sun.ac.za>
    original version by Kevin Ruland <kevin@rodin.wustl.edu>
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "zfstream.h"
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
 // For strcpy, strcat, strlen (mode strings).
 #include <cstring>
 // For BUFSIZ.
 #include <cstdio>
 
 // Internal buffer sizes (default and "unbuffered" versions)
 #define STASHED_CHARACTERS 16
diff --git a/libinterp/corefcn/zfstream.h b/libinterp/corefcn/zfstream.h
--- a/libinterp/corefcn/zfstream.h
+++ b/libinterp/corefcn/zfstream.h
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_zfsstream_h)
 #define octave_zfsstream_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_ZLIB
+#if defined (HAVE_ZLIB)
 
 #include <iosfwd>
 
 #include "zlib.h"
 
 /**
  *  @brief  Gzipped file stream buffer class.
  *
diff --git a/libinterp/dldfcn/__delaunayn__.cc b/libinterp/dldfcn/__delaunayn__.cc
--- a/libinterp/dldfcn/__delaunayn__.cc
+++ b/libinterp/dldfcn/__delaunayn__.cc
@@ -33,17 +33,17 @@ along with Octave; see the file COPYING.
 
   6. June 2006: Changes by Alexander Barth <abarth@marine.usf.edu>
 
   * triangulate non-simplicial facets
   * allow options to be specified as cell array of strings
   * change the default options (for compatibility with matlab)
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "oct-locbuf.h"
 
diff --git a/libinterp/dldfcn/__eigs__.cc b/libinterp/dldfcn/__eigs__.cc
--- a/libinterp/dldfcn/__eigs__.cc
+++ b/libinterp/dldfcn/__eigs__.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun-dld.h"
 #include "eigs-base.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
@@ -144,17 +144,17 @@ DEFUN_DLD (__eigs__, args, nargout,
 @deftypefnx {} {@var{d} =} __eigs__ (@var{af}, @var{n}, @var{B}, @var{k}, @var{sigma}, @var{opts})\n\
 @deftypefnx {} {[@var{V}, @var{d}] =} __eigs__ (@var{A}, @dots{})\n\
 @deftypefnx {} {[@var{V}, @var{d}] =} __eigs__ (@var{af}, @var{n}, @dots{})\n\
 @deftypefnx {} {[@var{V}, @var{d}, @var{flag}] =} __eigs__ (@var{A}, @dots{})\n\
 @deftypefnx {} {[@var{V}, @var{d}, @var{flag}] =} __eigs__ (@var{af}, @var{n}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifdef HAVE_ARPACK
+#if defined (HAVE_ARPACK)
 
   int nargin = args.length ();
 
   if (nargin == 0)
     print_usage ();
 
   octave_value_list retval;
 
diff --git a/libinterp/dldfcn/__fltk_uigetfile__.cc b/libinterp/dldfcn/__fltk_uigetfile__.cc
--- a/libinterp/dldfcn/__fltk_uigetfile__.cc
+++ b/libinterp/dldfcn/__fltk_uigetfile__.cc
@@ -15,23 +15,23 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_FLTK
+#if defined (HAVE_FLTK)
 
-#ifdef WIN32
+#if defined (WIN32)
 #  define WIN32_LEAN_AND_MEAN
 #endif
 
 #include <FL/Fl.H>
 #include <FL/Fl_File_Chooser.H>
 
 // FLTK headers may include X11/X.h which defines Complex, and that
 // conflicts with Octave's Complex typedef.  We don't need the X11
@@ -46,17 +46,17 @@ along with Octave; see the file COPYING.
 #include "file-ops.h"
 
 DEFUN_DLD (__fltk_uigetfile__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __fltk_uigetfile__ (@dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifdef HAVE_FLTK
+#if defined (HAVE_FLTK)
 
   // Expected argument list:
   //
   //   args(0) ... FileFilter in fltk format
   //   args(1) ... Title
   //   args(2) ... Default Filename
   //   args(3) ... PositionValue [x,y]
   //   args(4) ... SelectValue "on"/"off"/"dir"/"create"
diff --git a/libinterp/dldfcn/__glpk__.cc b/libinterp/dldfcn/__glpk__.cc
--- a/libinterp/dldfcn/__glpk__.cc
+++ b/libinterp/dldfcn/__glpk__.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <ctime>
 
 #include "lo-ieee.h"
 
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -27,28 +27,28 @@ To initialize:
 
   graphics_toolkit ("fltk");
   plot (randn (1e3, 1));
 
 */
 
 // PKG_ADD: if (__have_feature__ ("FLTK") && __have_feature__ ("OPENGL") && have_window_system ()) register_graphics_toolkit ("fltk"); endif
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "builtin-defun-decls.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "oct-opengl.h"
 #include "ov-fcn-handle.h"
 
-#ifdef HAVE_FLTK
+#if defined (HAVE_FLTK)
 
 #if defined (HAVE_X_WINDOWS)
 #  include <X11/Xlib.h>
 #endif
 
 #include <map>
 #include <set>
 #include <sstream>
@@ -2391,17 +2391,17 @@ private:
 #endif
 
 DEFUN_DLD (__fltk_check__, , ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __fltk_check__ ()\n\
 Undocumented internal function.  Calls Fl::check ()\n\
 @end deftypefn")
 {
-#ifdef HAVE_FLTK
+#if defined (HAVE_FLTK)
   Fl::check ();
 
   if (Vdrawnow_requested)
     Fdrawnow ();
 
   return ovl ();
 #else
   err_disabled_feature ("__fltk_check__", "OpenGL and FLTK");
@@ -2411,17 +2411,17 @@ Undocumented internal function.  Calls F
 // Initialize the fltk graphics toolkit.
 
 DEFUN_DLD (__init_fltk__, , ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __init_fltk__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifdef HAVE_FLTK
+#if defined (HAVE_FLTK)
   if (! display_info::display_available ())
     error ("__init_fltk__: no graphics DISPLAY available");
   else if (! toolkit_loaded)
     {
       mlock ();
 
       fltk_graphics_toolkit *fltk = new fltk_graphics_toolkit ();
       graphics_toolkit tk (fltk);
diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 
 To initialize:
 
   graphics_toolkit ("gnuplot");
   plot (randn (1e3, 1));
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "build-env.h"
 #include "builtins.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "file-stat.h"
diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 This code is based on Brian Pauls' src/osdemos/osdemo.c
 from git://anongit.freedesktop.org/mesa/demos
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (HAVE_OSMESA_H)
 #  include <osmesa.h>
 #elif defined (HAVE_GL_OSMESA_H)
 #  include <GL/osmesa.h>
 #endif
diff --git a/libinterp/dldfcn/__voronoi__.cc b/libinterp/dldfcn/__voronoi__.cc
--- a/libinterp/dldfcn/__voronoi__.cc
+++ b/libinterp/dldfcn/__voronoi__.cc
@@ -25,17 +25,17 @@ 20. Augiust 2000 - Kai Habel: first rele
 */
 
 /*
 2003-12-14 Rafael Laboissiere <rafael@laboissiere.net>
 Added optional second argument to pass options to the underlying
 qhull command
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 
 #include <list>
 
 #include "oct-locbuf.h"
diff --git a/libinterp/dldfcn/amd.cc b/libinterp/dldfcn/amd.cc
--- a/libinterp/dldfcn/amd.cc
+++ b/libinterp/dldfcn/amd.cc
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // This is the octave interface to amd, which bore the copyright given
 // in the help of the functions.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <string>
 #include <vector>
 
@@ -80,17 +80,17 @@ absorption.  The default is not to perfo
 @end table\n\
 \n\
 The author of the code itself is Timothy A. Davis\n\
 @email{davis@@cise.ufl.edu}, University of Florida\n\
 (see @url{http://www.cise.ufl.edu/research/sparse/amd}).\n\
 @seealso{symamd, colamd}\n\
 @end deftypefn")
 {
-#ifdef HAVE_AMD
+#if defined (HAVE_AMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
   octave_idx_type n_row, n_col;
   const octave_idx_type *ridx, *cidx;
diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // <cstdint> requires c++11
 #include <stdint.h>
 
 #include <string>
 #include <vector>
@@ -96,17 +96,17 @@ named device.\n\
 Given a sampling rate, bits per sample, and number of channels for an input\n\
 or output device, return the ID of the first device that supports playback\n\
 or recording using the specified parameters.\n\
 \n\
 If also given a device ID, return true if the device supports playback or\n\
 recording using those parameters.\n\
 @end deftypefn")
 {
-#ifdef HAVE_PORTAUDIO
+#if defined (HAVE_PORTAUDIO)
 
   int nargin = args.length ();
 
   if (nargin > 5)
     print_usage ();
 
   octave_scalar_map devinfo;
   octave_value_list input;
@@ -444,17 +444,17 @@ recording using those parameters.\n\
 %! for i = 1:nout,
 %!   assert (devinfo.output(i).ID, audiodevinfo (0, devinfo.output(i).Name));
 %! endfor
 %! for i = 1:nin,
 %!   assert (devinfo.input(i).ID, audiodevinfo (1, devinfo.input(i).Name));
 %! endfor
 */
 
-#ifdef HAVE_PORTAUDIO
+#if defined (HAVE_PORTAUDIO)
 
 enum audio_type { TYPE_INT8, TYPE_UINT8, TYPE_UINT16, TYPE_DOUBLE };
 
 class audioplayer : public octave_base_value
 {
 public:
   audioplayer (void);
   ~audioplayer (void);
@@ -1807,17 +1807,17 @@ DEFUN_DLD (__recorder_audiorecorder__, a
 @deftypefn  {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fs}, @var{nbits}, @var{channels})\n\
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fs}, @var{nbits}, @var{channels}, @var{id})\n\
 @deftypefnx {} {@var{recorder} =} __recorder_audiorecorder__ (@var{fcn}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_audiorecorder__",
                         "audio playback and recording through PortAudio");
 #else
 
   int nargin = args.length ();
 
@@ -1847,17 +1847,17 @@ Undocumented internal function.\n\
   recorder->init ();
   retval = recorder;
 
 #endif
 
   return retval;
 }
 
-#ifdef HAVE_PORTAUDIO
+#if defined (HAVE_PORTAUDIO)
 
 static audiorecorder *
 get_recorder (const octave_value& ov)
 {
   const octave_base_value& rep = ov.get_rep ();
 
   octave_base_value *ncrep = const_cast<octave_base_value *> (&rep);
 
@@ -1872,17 +1872,17 @@ get_recorder (const octave_value& ov)
 
 DEFUN_DLD (__recorder_getaudiodata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data}} __recorder_getaudiodata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_getaudiodata__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->getaudiodata ();
 #endif
   return retval;
@@ -1890,17 +1890,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_channels__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_channels__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_channels ();
 #endif
   return retval;
@@ -1908,17 +1908,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __recorder_get_fs__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_fs__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_fs ();
 #endif
   return retval;
@@ -1926,17 +1926,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __recorder_get_id__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_id__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_id ();
 #endif
   return retval;
@@ -1944,17 +1944,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __recorder_get_nbits__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_nbits__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_nbits ();
 #endif
   return retval;
@@ -1962,17 +1962,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_sample_number__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_sample_number__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_sample_number ();
 #endif
   return retval;
@@ -1980,17 +1980,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __recorder_get_tag__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_tag__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_tag ();
 #endif
   return retval;
@@ -1998,17 +1998,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __recorder_get_total_samples__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_total_samples__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_total_samples ();
 #endif
   return retval;
@@ -2016,17 +2016,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __recorder_get_userdata__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_get_userdata__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->get_userdata ();
 #endif
   return retval;
@@ -2034,51 +2034,51 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_isrecording__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_isrecording__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_isrecording__",
                         "audio playback and recording through PortAudio");
 #else
   retval = get_recorder (args(0))->isrecording ();
 #endif
   return retval;
 }
 
 DEFUN_DLD (__recorder_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_pause__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_pause__",
                         "audio playback and recording through PortAudio");
 #else
   get_recorder (args(0))->pause ();
   return ovl ();
 #endif
 }
 
 DEFUN_DLD (__recorder_recordblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_recordblocking__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_recordblocking__",
                         "audio playback and recording through PortAudio");
 #else
   float seconds = args(1).float_value ();
   get_recorder (args(0))->recordblocking (seconds);
   return ovl ();
@@ -2087,17 +2087,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__recorder_record__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __recorder_record__ (@var{recorder})\n\
 @deftypefnx {} {} __recorder_record__ (@var{recorder}, @var{seconds})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_record__",
                         "audio playback and recording through PortAudio");
 #else
   audiorecorder *recorder = get_recorder (args(0));
 
   if (args.length () == 2)
@@ -2109,17 +2109,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__recorder_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_resume__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_resume__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->resume ();
   return ovl ();
@@ -2127,17 +2127,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__recorder_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_fs__ (@var{recorder}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_set_fs__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_fs (args(1).int_value ());
   return ovl ();
@@ -2145,17 +2145,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__recorder_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_tag__ (@var{recorder}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_set_tag__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_tag (args(1).char_matrix_value ());
   return ovl ();
@@ -2163,17 +2163,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__recorder_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_set_userdata__ (@var{recorder}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_set_userdata__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_recorder (args(0))->set_userdata (args(1));
   return ovl ();
@@ -2181,17 +2181,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__recorder_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __recorder_stop__ (@var{recorder})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__recorder_stop__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_recorder (args(0))->stop ();
   return ovl ();
@@ -2202,17 +2202,17 @@ DEFUN_DLD (__player_audioplayer__, args,
            "-*- texinfo -*-\n\
 @deftypefn  {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits})\n\
 @deftypefnx {} {@var{player} =} __player_audioplayer__ (@var{y}, @var{fs}, @var{nbits}, @var{id})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_audioplayer__",
                         "audio playback and recording through PortAudio");
 #else
 
   int nargin = args.length ();
 
@@ -2247,17 +2247,17 @@ Undocumented internal function.\n\
   else
     recorder->init ();
 
   retval = recorder;
 #endif
   return retval;
 }
 
-#ifdef HAVE_PORTAUDIO
+#if defined (HAVE_PORTAUDIO)
 
 static audioplayer *
 get_player (const octave_value& ov)
 {
   const octave_base_value& rep = ov.get_rep ();
 
   octave_base_value *ncrep = const_cast<octave_base_value *> (&rep);
 
@@ -2272,17 +2272,17 @@ get_player (const octave_value& ov)
 
 DEFUN_DLD (__player_get_channels__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_channels__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_channels__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_channels ();
 #endif
@@ -2291,17 +2291,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{fs} =} __player_get_fs__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_fs__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_fs ();
 #endif
@@ -2310,17 +2310,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_id__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{id} =} __player_get_id__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_id__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_id ();
 #endif
@@ -2329,17 +2329,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_nbits__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{nbits} =} __player_get_nbits__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_nbits__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_nbits ();
 #endif
@@ -2348,17 +2348,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_sample_number__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_sample_number__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_sample_number__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_sample_number ();
 #endif
@@ -2367,17 +2367,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{tag} =} __player_get_tag__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_tag__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_tag ();
 #endif
@@ -2386,17 +2386,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_total_samples__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{n} =} __player_get_total_samples__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_total_samples__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_total_samples ();
 #endif
@@ -2405,17 +2405,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_get_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{data} =} __player_get_userdata__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_get_userdata__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->get_userdata ();
 #endif
@@ -2424,17 +2424,17 @@ Undocumented internal function.\n\
 
 DEFUN_DLD (__player_isplaying__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_isplaying__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_isplaying__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     retval = get_player (args(0))->isplaying ();
 #endif
@@ -2442,17 +2442,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_pause__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_pause__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_pause__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->pause ();
   return ovl ();
@@ -2462,17 +2462,17 @@ Undocumented internal function.\n\
 DEFUN_DLD (__player_playblocking__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_playblocking__ (@var{player})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_playblocking__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_playblocking__",
                         "audio playback and recording through PortAudio");
 #else
 
   audioplayer *player = get_player (args(0));
 
@@ -2516,17 +2516,17 @@ Undocumented internal function.\n\
 DEFUN_DLD (__player_play__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn  {} {} __player_play__ (@var{player})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, @var{start})\n\
 @deftypefnx {} {} __player_play__ (@var{player}, [@var{start}, @var{end}])\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_play__",
                         "audio playback and recording through PortAudio");
 #else
 
   if (args.length () == 1)
     {
@@ -2568,17 +2568,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_resume__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_resume__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_resume__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->resume ();
   return ovl ();
@@ -2586,17 +2586,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_set_fs__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_fs__ (@var{player}, @var{fs})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_set_fs__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_fs (args(1).int_value ());
   return ovl ();
@@ -2604,17 +2604,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_set_tag__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_tag__ (@var{player}, @var{tag})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_set_tag__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_tag (args(1).char_matrix_value ());
   return ovl ();
@@ -2622,17 +2622,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_set_userdata__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_set_userdata__ (@var{player}, @var{data})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_set_userdata__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 2)
     get_player (args(0))->set_userdata (args(1));
   return ovl ();
@@ -2640,17 +2640,17 @@ Undocumented internal function.\n\
 }
 
 DEFUN_DLD (__player_stop__, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {} __player_stop__ (@var{player})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
-#ifndef HAVE_PORTAUDIO
+#if ! defined (HAVE_PORTAUDIO)
   octave_unused_parameter (args);
 
   err_disabled_feature ("__player_stop__",
                         "audio playback and recording through PortAudio");
 #else
   if (args.length () == 1)
     get_player (args(0))->stop ();
   return ovl ();
diff --git a/libinterp/dldfcn/audioread.cc b/libinterp/dldfcn/audioread.cc
--- a/libinterp/dldfcn/audioread.cc
+++ b/libinterp/dldfcn/audioread.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <map>
 
 #include "oct-locbuf.h"
 #include "unwind-prot.h"
@@ -35,21 +35,21 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-struct.h"
 #include "pager.h"
 
 
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 #  include <sndfile.h>
 #endif
 
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
 static void
 safe_close (SNDFILE *file)
 {
   sf_close (file);
 }
 
 #endif
@@ -70,17 +70,17 @@ and columns corresponding to channels.\n
 The optional two-element vector argument @var{samples} specifies starting\n\
 and ending frames.\n\
 \n\
 The optional argument @var{datatype} specifies the datatype to return.\n\
 If it is @qcode{\"native\"}, then the type of data depends on how the data\n\
 is stored in the audio file.\n\
 @end deftypefn")
 {
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
     print_usage ();
 
   std::string filename = args(0).xstring_value ("audioread: FILENAME must be a string");
 
@@ -181,17 +181,17 @@ is stored in the audio file.\n\
   octave_unused_parameter (args);
 
   err_disabled_feature ("audioread",
                         "reading and writing sound files through libsndfile");
 
 #endif
 }
 
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
 static int
 extension_to_format (const std::string& ext)
 {
   static bool initialized = false;
 
   static std::map<std::string, int> table;
 
@@ -262,17 +262,17 @@ Title for the audio file.\n\
 @item Artist\n\
 Artist name.\n\
 \n\
 @item Comment\n\
 Comment.\n\
 @end table\n\
 @end deftypefn")
 {
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
   int nargin = args.length ();
 
   if (nargin < 3)
     print_usage ();
 
   std::string filename = args(0).xstring_value ("audiowrite: FILENAME must be a string");
 
@@ -443,17 +443,17 @@ Comment.\n\
 }
 
 DEFUN_DLD (audioinfo, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {} {@var{info} =} audioinfo (@var{filename})\n\
 Return information about an audio file specified by @var{filename}.\n\
 @end deftypefn")
 {
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
   if (args.length () != 1)
     print_usage ();
 
   std::string filename = args(0).xstring_value ("audioinfo: FILENAME must be a string");
 
   SF_INFO info;
   info.format = 0;
@@ -514,17 +514,17 @@ Return information about an audio file s
   octave_unused_parameter (args);
 
   err_disabled_feature ("audioinfo",
                         "reading and writing sound files through libsndfile");
 
 #endif
 }
 
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
 static void
 audio_sub_formats (int format)
 {
   int count;
   sf_command (NULL, SFC_GET_FORMAT_SUBTYPE_COUNT, &count, sizeof (int));
 
   for (int i = 0; i < count; i++)
@@ -550,17 +550,17 @@ DEFUN_DLD (audioformats, args, ,
 @deftypefn  {} {} audioformats ()\n\
 @deftypefnx {} {} audioformats (@var{format})\n\
 Display information about all supported audio formats.\n\
 \n\
 If the optional argument @var{format} is given, then display only formats\n\
 with names that start with @var{format}.\n\
 @end deftypefn")
 {
-#ifdef HAVE_SNDFILE
+#if defined (HAVE_SNDFILE)
 
   if (args.length () > 1)
     print_usage ();
 
   std::string search = "";
   if (args.length () > 0)
     {
       search = args(0).string_value ();
diff --git a/libinterp/dldfcn/ccolamd.cc b/libinterp/dldfcn/ccolamd.cc
--- a/libinterp/dldfcn/ccolamd.cc
+++ b/libinterp/dldfcn/ccolamd.cc
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // This is the octave interface to ccolamd, which bore the copyright given
 // in the help of the functions.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <string>
 #include <vector>
 
@@ -139,17 +139,17 @@ The authors of the code itself are @nosp
 @nospell{J. Bilbert and E. Ng}.  Supported by the National Science Foundation\n\
 @nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from\n\
 @nospell{Sandia} National Lab.\n\
 See @url{http://www.cise.ufl.edu/research/sparse} for\n\
 ccolamd, csymamd, amd, colamd, symamd, and other related orderings.\n\
 @seealso{colamd, csymamd}\n\
 @end deftypefn")
 {
-#ifdef HAVE_CCOLAMD
+#if defined (HAVE_CCOLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
     print_usage ();
 
   octave_value_list retval (nargout == 2 ? 2 : 1);
   int spumoni = 0;
diff --git a/libinterp/dldfcn/chol.cc b/libinterp/dldfcn/chol.cc
--- a/libinterp/dldfcn/chol.cc
+++ b/libinterp/dldfcn/chol.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "chol.h"
 #include "sparse-chol.h"
 #include "oct-spparms.h"
 #include "sparse-util.h"
 
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // This is the octave interface to colamd, which bore the copyright given
 // in the help of the functions.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <string>
 #include <vector>
 
@@ -273,17 +273,17 @@ The ordering is followed by a column eli
 \n\
 The authors of the code itself are @nospell{Stefan I. Larimore} and\n\
 @nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of Florida.  The algorithm was developed in collaboration with @nospell{John Gilbert},\n\
 Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.  (see\n\
 @url{http://www.cise.ufl.edu/research/sparse/colamd})\n\
 @seealso{colperm, symamd, ccolamd}\n\
 @end deftypefn")
 {
-#ifdef HAVE_COLAMD
+#if defined (HAVE_COLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
   octave_value_list retval (nargout == 2 ? 2 : 1);
   int spumoni = 0;
@@ -511,17 +511,17 @@ The ordering is followed by a column eli
 \n\
 The authors of the code itself are @nospell{Stefan I. Larimore} and\n\
 @nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of Florida.  The algorithm was developed in collaboration with @nospell{John Gilbert},\n\
 Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.  (see\n\
 @url{http://www.cise.ufl.edu/research/sparse/colamd})\n\
 @seealso{colperm, colamd}\n\
 @end deftypefn")
 {
-#ifdef HAVE_COLAMD
+#if defined (HAVE_COLAMD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
   octave_value_list retval (nargin == 2 ? 2 : 1);
   int spumoni = 0;
diff --git a/libinterp/dldfcn/convhulln.cc b/libinterp/dldfcn/convhulln.cc
--- a/libinterp/dldfcn/convhulln.cc
+++ b/libinterp/dldfcn/convhulln.cc
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 29. July 2000 - Kai Habel: first release
 2002-04-22 Paul Kienzle
 * Use warning(...) function rather than writing to cerr
 2006-05-01 Tom Holroyd
 * add support for consistent winding in all dimensions; output is
 * guaranteed to be simplicial.
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-locbuf.h"
 
 #include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
diff --git a/libinterp/dldfcn/dmperm.cc b/libinterp/dldfcn/dmperm.cc
--- a/libinterp/dldfcn/dmperm.cc
+++ b/libinterp/dldfcn/dmperm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "utils.h"
diff --git a/libinterp/dldfcn/fftw.cc b/libinterp/dldfcn/fftw.cc
--- a/libinterp/dldfcn/fftw.cc
+++ b/libinterp/dldfcn/fftw.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #if defined (HAVE_FFTW3_H)
 #  include <fftw3.h>
 #endif
diff --git a/libinterp/dldfcn/qr.cc b/libinterp/dldfcn/qr.cc
--- a/libinterp/dldfcn/qr.cc
+++ b/libinterp/dldfcn/qr.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "qr.h"
 #include "qrp.h"
 #include "sparse-qr.h"
 
 
diff --git a/libinterp/dldfcn/symbfact.cc b/libinterp/dldfcn/symbfact.cc
--- a/libinterp/dldfcn/symbfact.cc
+++ b/libinterp/dldfcn/symbfact.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-locbuf.h"
 #include "oct-sparse.h"
 #include "oct-spparms.h"
 #include "sparse-chol.h"
 #include "sparse-util.h"
@@ -97,17 +97,17 @@ The elimination tree itself.\n\
 \n\
 @item post\n\
 A sparse boolean matrix whose structure is that of the\n\
 Cholesky@tie{}factorization as determined by @var{typ}.\n\
 @end table\n\
 @seealso{chol, etree, treelayout}\n\
 @end deftypefn")
 {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
     print_usage ();
 
   octave_value_list retval;
 
diff --git a/libinterp/dldfcn/symrcm.cc b/libinterp/dldfcn/symrcm.cc
--- a/libinterp/dldfcn/symrcm.cc
+++ b/libinterp/dldfcn/symrcm.cc
@@ -45,17 +45,17 @@ The implementation of this algorithm is 
 
 The algorithm represents a heuristic approach to the NP-complete minimum
 bandwidth problem.
 
 Written by Michael Weitzel <michael.weitzel@@uni-siegen.de>
                            <weitzel@@ldknet.org>
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "errwarn.h"
 #include "utils.h"
diff --git a/libinterp/liboctinterp-build-info.in.cc b/libinterp/liboctinterp-build-info.in.cc
--- a/libinterp/liboctinterp-build-info.in.cc
+++ b/libinterp/liboctinterp-build-info.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "liboctinterp-build-info.h"
 
 std::string
 liboctinterp_hg_id (void)
 {
diff --git a/libinterp/mkbuiltins b/libinterp/mkbuiltins
--- a/libinterp/mkbuiltins
+++ b/libinterp/mkbuiltins
@@ -70,43 +70,43 @@ EOF
 
 EOF
 
 else
 
   cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include "defun.h"
 #include "help.h"
 #include "ovl.h"
 #include "variables.h"
 #include "builtins.h"
 
 #if defined (quad)
-#undef quad
+#  undef quad
 #endif
 
 #if defined (ENABLE_DYNAMIC_LINKING)
 
-#define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc)
+#  define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc)
 
-#define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc)
+#  define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc)
 
 #else
 
-#define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc) \
-  XDEFUN_INTERNAL(name, args_name, nargout_name, doc)
+#  define XDEFUN_DLD_INTERNAL(name, args_name, nargout_name, doc) \
+     XDEFUN_INTERNAL(name, args_name, nargout_name, doc)
 
-#define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc) \
-  XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, doc)
+#  define XDEFUNX_DLD_INTERNAL(name, fname, args_name, nargout_name, doc) \
+     XDEFUNX_INTERNAL(name, fname, args_name, nargout_name, doc)
 
 #endif
 
 #define XDEFUN_FILE_NAME(name) \
   std::string file = name;
 
 #define XDEFUN_INTERNAL(name, args_name, nargout_name, doc) \
   extern DECLARE_FUN (name, args_name, nargout_name); \
diff --git a/libinterp/mkops b/libinterp/mkops
--- a/libinterp/mkops
+++ b/libinterp/mkops
@@ -18,17 +18,17 @@
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 SED=${SED:-sed}
 
 cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkops.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 extern void install_base_type_conversions (void);
 
 EOF
 
 for file in "$@"; do
diff --git a/libinterp/octave-value/ov-base.cc b/libinterp/octave-value/ov-base.cc
--- a/libinterp/octave-value/ov-base.cc
+++ b/libinterp/octave-value/ov-base.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-mappers.h"
diff --git a/libinterp/octave-value/ov-bool-mat.cc b/libinterp/octave-value/ov-bool-mat.cc
--- a/libinterp/octave-value/ov-bool-mat.cc
+++ b/libinterp/octave-value/ov-bool-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <vector>
 
 #include "lo-ieee.h"
 #include "mx-base.h"
diff --git a/libinterp/octave-value/ov-bool-sparse.cc b/libinterp/octave-value/ov-bool-sparse.cc
--- a/libinterp/octave-value/ov-bool-sparse.cc
+++ b/libinterp/octave-value/ov-bool-sparse.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "dim-vector.h"
diff --git a/libinterp/octave-value/ov-bool.cc b/libinterp/octave-value/ov-bool.cc
--- a/libinterp/octave-value/ov-bool.cc
+++ b/libinterp/octave-value/ov-bool.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "mx-base.h"
 
 #include "errwarn.h"
diff --git a/libinterp/octave-value/ov-builtin.cc b/libinterp/octave-value/ov-builtin.cc
--- a/libinterp/octave-value/ov-builtin.cc
+++ b/libinterp/octave-value/ov-builtin.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov-builtin.h"
 #include "ov.h"
diff --git a/libinterp/octave-value/ov-cell.cc b/libinterp/octave-value/ov-cell.cc
--- a/libinterp/octave-value/ov-cell.cc
+++ b/libinterp/octave-value/ov-cell.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iomanip>
 #include <iostream>
 #include <sstream>
 #include <vector>
 #include <queue>
diff --git a/libinterp/octave-value/ov-ch-mat.cc b/libinterp/octave-value/ov-ch-mat.cc
--- a/libinterp/octave-value/ov-ch-mat.cc
+++ b/libinterp/octave-value/ov-ch-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <iostream>
 
 #include "lo-ieee.h"
 #include "mx-base.h"
@@ -178,26 +178,26 @@ octave_char_matrix::as_mxArray (void) co
 
 // The C++ standard guarantees cctype defines functions, not macros (and
 // hence macros *CAN'T* be defined if only cctype is included) so
 // there's no need to fuck around.  The exceptions are isascii and
 // toascii, which are not C++.  Oddly enough, all those character
 // functions are int (*) (int), even in C++.  Wicked!
 static inline int xisascii (int c)
 {
-#ifdef HAVE_ISASCII
+#if defined (HAVE_ISASCII)
   return isascii (c);
 #else
   return (c >= 0x00 && c <= 0x7f);
 #endif
 }
 
 static inline int xtoascii (int c)
 {
-#ifdef HAVE_TOASCII
+#if defined (HAVE_TOASCII)
   return toascii (c);
 #else
   return (c & 0x7F);
 #endif
 }
 
 octave_value
 octave_char_matrix::map (unary_mapper_t umap) const
diff --git a/libinterp/octave-value/ov-class.cc b/libinterp/octave-value/ov-class.cc
--- a/libinterp/octave-value/ov-class.cc
+++ b/libinterp/octave-value/ov-class.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "byte-swap.h"
 #include "oct-locbuf.h"
diff --git a/libinterp/octave-value/ov-classdef.cc b/libinterp/octave-value/ov-classdef.cc
--- a/libinterp/octave-value/ov-classdef.cc
+++ b/libinterp/octave-value/ov-classdef.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #include "defun.h"
 #include "load-path.h"
 #include "ov-builtin.h"
diff --git a/libinterp/octave-value/ov-colon.cc b/libinterp/octave-value/ov-colon.cc
--- a/libinterp/octave-value/ov-colon.cc
+++ b/libinterp/octave-value/ov-colon.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "error.h"
 #include "pr-output.h"
 #include "ovl.h"
diff --git a/libinterp/octave-value/ov-complex.cc b/libinterp/octave-value/ov-complex.cc
--- a/libinterp/octave-value/ov-complex.cc
+++ b/libinterp/octave-value/ov-complex.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <sstream>
 
 #include "lo-ieee.h"
 #include "lo-specfun.h"
diff --git a/libinterp/octave-value/ov-cs-list.cc b/libinterp/octave-value/ov-cs-list.cc
--- a/libinterp/octave-value/ov-cs-list.cc
+++ b/libinterp/octave-value/ov-cs-list.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <sstream>
 
 #include "lo-utils.h"
 
diff --git a/libinterp/octave-value/ov-cx-diag.cc b/libinterp/octave-value/ov-cx-diag.cc
--- a/libinterp/octave-value/ov-cx-diag.cc
+++ b/libinterp/octave-value/ov-cx-diag.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "byte-swap.h"
 
 #include "ov-cx-diag.h"
 #include "ov-flt-cx-diag.h"
 #include "ov-re-diag.h"
diff --git a/libinterp/octave-value/ov-cx-mat.cc b/libinterp/octave-value/ov-cx-mat.cc
--- a/libinterp/octave-value/ov-cx-mat.cc
+++ b/libinterp/octave-value/ov-cx-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <vector>
 
 #include "data-conv.h"
 #include "lo-ieee.h"
diff --git a/libinterp/octave-value/ov-cx-sparse.cc b/libinterp/octave-value/ov-cx-sparse.cc
--- a/libinterp/octave-value/ov-cx-sparse.cc
+++ b/libinterp/octave-value/ov-cx-sparse.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "lo-specfun.h"
diff --git a/libinterp/octave-value/ov-dld-fcn.cc b/libinterp/octave-value/ov-dld-fcn.cc
--- a/libinterp/octave-value/ov-dld-fcn.cc
+++ b/libinterp/octave-value/ov-dld-fcn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-shlib.h"
 
 #include <defaults.h>
 #include "dynamic-ld.h"
 #include "error.h"
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <sstream>
 #include <vector>
 
 #include "file-ops.h"
diff --git a/libinterp/octave-value/ov-fcn-inline.cc b/libinterp/octave-value/ov-fcn-inline.cc
--- a/libinterp/octave-value/ov-fcn-inline.cc
+++ b/libinterp/octave-value/ov-fcn-inline.cc
@@ -19,17 +19,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 In addition to the terms of the GPL, you are permitted to link
 this program with any Open Source program, as defined by the
 Open Source Initiative (www.opensource.org)
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <istream>
 #include <iostream>
 #include <sstream>
 #include <vector>
 
diff --git a/libinterp/octave-value/ov-fcn.cc b/libinterp/octave-value/ov-fcn.cc
--- a/libinterp/octave-value/ov-fcn.cc
+++ b/libinterp/octave-value/ov-fcn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "ov-fcn.h"
 
 
diff --git a/libinterp/octave-value/ov-float.cc b/libinterp/octave-value/ov-float.cc
--- a/libinterp/octave-value/ov-float.cc
+++ b/libinterp/octave-value/ov-float.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "data-conv.h"
 #include "mach-info.h"
 #include "lo-specfun.h"
diff --git a/libinterp/octave-value/ov-flt-complex.cc b/libinterp/octave-value/ov-flt-complex.cc
--- a/libinterp/octave-value/ov-flt-complex.cc
+++ b/libinterp/octave-value/ov-flt-complex.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "lo-ieee.h"
 #include "lo-specfun.h"
 #include "lo-mappers.h"
diff --git a/libinterp/octave-value/ov-flt-cx-diag.cc b/libinterp/octave-value/ov-flt-cx-diag.cc
--- a/libinterp/octave-value/ov-flt-cx-diag.cc
+++ b/libinterp/octave-value/ov-flt-cx-diag.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "byte-swap.h"
 
 #include "ov-flt-cx-diag.h"
 #include "ov-base-diag.cc"
 #include "ov-flt-re-diag.h"
diff --git a/libinterp/octave-value/ov-flt-cx-mat.cc b/libinterp/octave-value/ov-flt-cx-mat.cc
--- a/libinterp/octave-value/ov-flt-cx-mat.cc
+++ b/libinterp/octave-value/ov-flt-cx-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <vector>
 
 #include "data-conv.h"
 #include "lo-ieee.h"
diff --git a/libinterp/octave-value/ov-flt-re-diag.cc b/libinterp/octave-value/ov-flt-re-diag.cc
--- a/libinterp/octave-value/ov-flt-re-diag.cc
+++ b/libinterp/octave-value/ov-flt-re-diag.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "byte-swap.h"
 
 #include "ov-flt-re-diag.h"
 #include "ov-base-diag.cc"
 #include "ov-float.h"
diff --git a/libinterp/octave-value/ov-flt-re-mat.cc b/libinterp/octave-value/ov-flt-re-mat.cc
--- a/libinterp/octave-value/ov-flt-re-mat.cc
+++ b/libinterp/octave-value/ov-flt-re-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "data-conv.h"
diff --git a/libinterp/octave-value/ov-int16.cc b/libinterp/octave-value/ov-int16.cc
--- a/libinterp/octave-value/ov-int16.cc
+++ b/libinterp/octave-value/ov-int16.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-int32.cc b/libinterp/octave-value/ov-int32.cc
--- a/libinterp/octave-value/ov-int32.cc
+++ b/libinterp/octave-value/ov-int32.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-int64.cc b/libinterp/octave-value/ov-int64.cc
--- a/libinterp/octave-value/ov-int64.cc
+++ b/libinterp/octave-value/ov-int64.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-int8.cc b/libinterp/octave-value/ov-int8.cc
--- a/libinterp/octave-value/ov-int8.cc
+++ b/libinterp/octave-value/ov-int8.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "fpucw.h"
 
@@ -275,17 +275,17 @@ private:
 
 private:
 
   JavaVMInitArgs vm_args;
 
   std::list<std::string> java_opts;
 };
 
-#ifdef __WIN32__
+#if defined (__WIN32__)
 
 static std::string
 read_registry_string (const std::string& key, const std::string& value)
 {
   HKEY hkey;
   DWORD len;
 
   std::string retval;
@@ -503,17 +503,17 @@ initial_class_path (void)
         error ("octave.jar does not exist: %s", jar_file.c_str ());
     }
   else
     error ("initial java dir is empty");
 
   return retval;
 }
 
-#ifndef _FPU_DEFAULT
+#if ! defined (_FPU_DEFAULT)
 #  if defined __i386__ || defined __x86_64__
 #    define _FPU_DEFAULT 0x037f
 #  else
 #    define _FPU_DEFAULT 0
 #  endif
 #endif
 
 static void
diff --git a/libinterp/octave-value/ov-lazy-idx.cc b/libinterp/octave-value/ov-lazy-idx.cc
--- a/libinterp/octave-value/ov-lazy-idx.cc
+++ b/libinterp/octave-value/ov-lazy-idx.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov-lazy-idx.h"
 #include "ops.h"
 #include "ov-scalar.h"
 #include "ls-oct-text.h"
 #include "ls-oct-binary.h"
diff --git a/libinterp/octave-value/ov-mex-fcn.cc b/libinterp/octave-value/ov-mex-fcn.cc
--- a/libinterp/octave-value/ov-mex-fcn.cc
+++ b/libinterp/octave-value/ov-mex-fcn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-shlib.h"
 
 #include <defaults.h>
 #include "dynamic-ld.h"
 #include "error.h"
diff --git a/libinterp/octave-value/ov-null-mat.cc b/libinterp/octave-value/ov-null-mat.cc
--- a/libinterp/octave-value/ov-null-mat.cc
+++ b/libinterp/octave-value/ov-null-mat.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov-null-mat.h"
 #include "ops.h"
 #include "defun.h"
 
 DEFINE_OV_TYPEID_FUNCTIONS_AND_DATA (octave_null_matrix, "null_matrix",
diff --git a/libinterp/octave-value/ov-oncleanup.cc b/libinterp/octave-value/ov-oncleanup.cc
--- a/libinterp/octave-value/ov-oncleanup.cc
+++ b/libinterp/octave-value/ov-oncleanup.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "ov-oncleanup.h"
 #include "ov-fcn.h"
 #include "ov-usr-fcn.h"
 #include "pt-misc.h"
diff --git a/libinterp/octave-value/ov-perm.cc b/libinterp/octave-value/ov-perm.cc
--- a/libinterp/octave-value/ov-perm.cc
+++ b/libinterp/octave-value/ov-perm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "byte-swap.h"
 #include "dim-vector.h"
 
 #include "mxarray.h"
 #include "ov-perm.h"
diff --git a/libinterp/octave-value/ov-range.cc b/libinterp/octave-value/ov-range.cc
--- a/libinterp/octave-value/ov-range.cc
+++ b/libinterp/octave-value/ov-range.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
 
diff --git a/libinterp/octave-value/ov-re-diag.cc b/libinterp/octave-value/ov-re-diag.cc
--- a/libinterp/octave-value/ov-re-diag.cc
+++ b/libinterp/octave-value/ov-re-diag.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "byte-swap.h"
 
 #include "ov-re-diag.h"
 #include "ov-flt-re-diag.h"
 #include "ov-base-diag.cc"
diff --git a/libinterp/octave-value/ov-re-mat.cc b/libinterp/octave-value/ov-re-mat.cc
--- a/libinterp/octave-value/ov-re-mat.cc
+++ b/libinterp/octave-value/ov-re-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "data-conv.h"
diff --git a/libinterp/octave-value/ov-re-sparse.cc b/libinterp/octave-value/ov-re-sparse.cc
--- a/libinterp/octave-value/ov-re-sparse.cc
+++ b/libinterp/octave-value/ov-re-sparse.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "lo-specfun.h"
diff --git a/libinterp/octave-value/ov-scalar.cc b/libinterp/octave-value/ov-scalar.cc
--- a/libinterp/octave-value/ov-scalar.cc
+++ b/libinterp/octave-value/ov-scalar.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "data-conv.h"
 #include "mach-info.h"
 #include "lo-specfun.h"
diff --git a/libinterp/octave-value/ov-str-mat.cc b/libinterp/octave-value/ov-str-mat.cc
--- a/libinterp/octave-value/ov-str-mat.cc
+++ b/libinterp/octave-value/ov-str-mat.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 
 #include <iostream>
 #include <vector>
 
diff --git a/libinterp/octave-value/ov-struct.cc b/libinterp/octave-value/ov-struct.cc
--- a/libinterp/octave-value/ov-struct.cc
+++ b/libinterp/octave-value/ov-struct.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Cell.h"
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/octave-value/ov-typeinfo.cc b/libinterp/octave-value/ov-typeinfo.cc
--- a/libinterp/octave-value/ov-typeinfo.cc
+++ b/libinterp/octave-value/ov-typeinfo.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array.h"
 #include "singleton-cleanup.h"
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/octave-value/ov-uint16.cc b/libinterp/octave-value/ov-uint16.cc
--- a/libinterp/octave-value/ov-uint16.cc
+++ b/libinterp/octave-value/ov-uint16.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-uint32.cc b/libinterp/octave-value/ov-uint32.cc
--- a/libinterp/octave-value/ov-uint32.cc
+++ b/libinterp/octave-value/ov-uint32.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-uint64.cc b/libinterp/octave-value/ov-uint64.cc
--- a/libinterp/octave-value/ov-uint64.cc
+++ b/libinterp/octave-value/ov-uint64.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-uint8.cc b/libinterp/octave-value/ov-uint8.cc
--- a/libinterp/octave-value/ov-uint8.cc
+++ b/libinterp/octave-value/ov-uint8.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <limits>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
diff --git a/libinterp/octave-value/ov-usr-fcn.cc b/libinterp/octave-value/ov-usr-fcn.cc
--- a/libinterp/octave-value/ov-usr-fcn.cc
+++ b/libinterp/octave-value/ov-usr-fcn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sstream>
 
 #include "str-vec.h"
 
 #include <defaults.h>
@@ -187,17 +187,17 @@ octave_user_function::octave_user_functi
     t_checked (static_cast<time_t> (0)),
     system_fcn_file (false), call_depth (-1),
     num_named_args (param_list ? param_list->length () : 0),
     subfunction (false), inline_function (false),
     anonymous_function (false), nested_function (false),
     class_constructor (none), class_method (false),
     parent_scope (-1), local_scope (sid),
     curr_unwind_protect_frame (0)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
     , jit_info (0)
 #endif
 {
   if (cmd_list)
     cmd_list->mark_as_function_body ();
 
   if (local_scope >= 0)
     symbol_table::set_curr_fcn (this, local_scope);
@@ -209,17 +209,17 @@ octave_user_function::~octave_user_funct
     cmd_list->remove_all_breakpoints (file_name);
 
   delete param_list;
   delete ret_list;
   delete cmd_list;
   delete lead_comm;
   delete trail_comm;
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   delete jit_info;
 #endif
 
   // FIXME: this is really playing with fire.
   symbol_table::erase_scope (local_scope);
 }
 
 octave_user_function *
@@ -480,17 +480,17 @@ octave_user_function::do_multi_index_op 
         {
           ret_args = args.slice (0, 1, true);
           args = args.slice (1, args.length () - 1, true);
         }
       else
         panic_impossible ();
     }
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   if (is_special_expr ()
       && tree_jit::execute (*this, args, retval))
     return retval;
 #endif
 
   unwind_protect frame;
 
   frame.protect_var (call_depth);
diff --git a/libinterp/octave-value/ov-usr-fcn.h b/libinterp/octave-value/ov-usr-fcn.h
--- a/libinterp/octave-value/ov-usr-fcn.h
+++ b/libinterp/octave-value/ov-usr-fcn.h
@@ -41,17 +41,17 @@ class string_vector;
 
 class octave_value;
 class tree_parameter_list;
 class tree_statement_list;
 class tree_va_return_list;
 class tree_expression;
 class tree_walker;
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 class jit_function_info;
 #endif
 
 class
 octave_user_code : public octave_function
 {
 public:
   octave_user_code (void)
@@ -400,17 +400,17 @@ public:
       {
         curr_unwind_protect_frame->protect_var (variable);
         return true;
       }
     else
       return false;
   }
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   jit_function_info *get_info (void) { return jit_info; }
 
   void stash_info (jit_function_info *info) { jit_info = info; }
 #endif
 
 #if 0
   void print_symtab_info (std::ostream& os) const;
 #endif
@@ -495,17 +495,17 @@ private:
   // The scope of the parent function, if any.
   symbol_table::scope_id parent_scope;
 
   symbol_table::scope_id local_scope;
 
   // pointer to the current unwind_protect frame of this function.
   unwind_protect *curr_unwind_protect_frame;
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   jit_function_info *jit_info;
 #endif
 
   void maybe_relocate_end_internal (void);
 
   void print_code_function_header (void);
 
   void print_code_function_trailer (void);
diff --git a/libinterp/octave-value/ov.cc b/libinterp/octave-value/ov.cc
--- a/libinterp/octave-value/ov.cc
+++ b/libinterp/octave-value/ov.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "data-conv.h"
 #include "quit.h"
 #include "str-vec.h"
 
 #include "ovl.h"
diff --git a/libinterp/octave-value/ovl.cc b/libinterp/octave-value/ovl.cc
--- a/libinterp/octave-value/ovl.cc
+++ b/libinterp/octave-value/ovl.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "Cell.h"
 
 // We are likely to have a lot of octave_value_list objects to allocate,
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Born February 20, 1992.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <clocale>
 #include <cstdlib>
 #include <cstring>
 #include <ctime>
diff --git a/libinterp/octave.h b/libinterp/octave.h
--- a/libinterp/octave.h
+++ b/libinterp/octave.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_octave_h)
 #define octave_octave_h 1
 
 #include "octave-config.h"
 
-#ifdef  __cplusplus
+#if defined  (__cplusplus)
 extern "C" {
 #endif
 
 extern OCTINTERP_API int octave_main (int argc, char **argv, int embedded);
 
 extern OCTINTERP_API void octave_process_command_line (int argc, char **argv);
 
 extern OCTINTERP_API void
@@ -40,13 +40,13 @@ extern OCTINTERP_API int octave_execute_
 
 extern OCTINTERP_API int octave_cmdline_argc;
 extern OCTINTERP_API char **octave_cmdline_argv;
 extern OCTINTERP_API int octave_embedded;
 
 extern OCTINTERP_API int octave_starting_gui (void);
 extern OCTINTERP_API int octave_fork_gui (void);
 
-#ifdef  __cplusplus
+#if defined  (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/libinterp/operators/op-b-b.cc b/libinterp/operators/op-b-b.cc
--- a/libinterp/operators/op-b-b.cc
+++ b/libinterp/operators/op-b-b.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-bool.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-b-bm.cc b/libinterp/operators/op-b-bm.cc
--- a/libinterp/operators/op-b-bm.cc
+++ b/libinterp/operators/op-b-bm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-bool.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-b-sbm.cc b/libinterp/operators/op-b-sbm.cc
--- a/libinterp/operators/op-b-sbm.cc
+++ b/libinterp/operators/op-b-sbm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool.h"
diff --git a/libinterp/operators/op-bm-b.cc b/libinterp/operators/op-bm-b.cc
--- a/libinterp/operators/op-bm-b.cc
+++ b/libinterp/operators/op-bm-b.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-bool.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-bm-bm.cc b/libinterp/operators/op-bm-bm.cc
--- a/libinterp/operators/op-bm-bm.cc
+++ b/libinterp/operators/op-bm-bm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-bool-mat.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-bm-sbm.cc b/libinterp/operators/op-bm-sbm.cc
--- a/libinterp/operators/op-bm-sbm.cc
+++ b/libinterp/operators/op-bm-sbm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-cdm-cdm.cc b/libinterp/operators/op-cdm-cdm.cc
--- a/libinterp/operators/op-cdm-cdm.cc
+++ b/libinterp/operators/op-cdm-cdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cx-mat.h"
 #include "ov-cx-diag.h"
diff --git a/libinterp/operators/op-cdm-cm.cc b/libinterp/operators/op-cdm-cm.cc
--- a/libinterp/operators/op-cdm-cm.cc
+++ b/libinterp/operators/op-cdm-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-cx-diag.h"
 #define RINCLUDE "ov-cx-mat.h"
 
 #define LMATRIX complex_diag_matrix
 #define RMATRIX complex_matrix
diff --git a/libinterp/operators/op-cdm-dm.cc b/libinterp/operators/op-cdm-dm.cc
--- a/libinterp/operators/op-cdm-dm.cc
+++ b/libinterp/operators/op-cdm-dm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-cx-diag.h"
 #define RINCLUDE "ov-re-diag.h"
 
 #define LMATRIX complex_diag_matrix
 #define RMATRIX diag_matrix
diff --git a/libinterp/operators/op-cdm-m.cc b/libinterp/operators/op-cdm-m.cc
--- a/libinterp/operators/op-cdm-m.cc
+++ b/libinterp/operators/op-cdm-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-cx-diag.h"
 #define RINCLUDE "ov-re-mat.h"
 
 #define LMATRIX complex_diag_matrix
 #define LDMATRIX complex_matrix
diff --git a/libinterp/operators/op-cell.cc b/libinterp/operators/op-cell.cc
--- a/libinterp/operators/op-cell.cc
+++ b/libinterp/operators/op-cell.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cell.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-chm.cc b/libinterp/operators/op-chm.cc
--- a/libinterp/operators/op-chm.cc
+++ b/libinterp/operators/op-chm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-ch-mat.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-class.cc b/libinterp/operators/op-class.cc
--- a/libinterp/operators/op-class.cc
+++ b/libinterp/operators/op-class.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-time.h"
 
 #include "errwarn.h"
 #include "load-path.h"
 #include "ovl.h"
diff --git a/libinterp/operators/op-cm-cdm.cc b/libinterp/operators/op-cm-cdm.cc
--- a/libinterp/operators/op-cm-cdm.cc
+++ b/libinterp/operators/op-cm-cdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-cx-mat.h"
 #define RINCLUDE "ov-cx-diag.h"
 
 #define LMATRIX complex_matrix
 #define RMATRIX complex_diag_matrix
diff --git a/libinterp/operators/op-cm-cm.cc b/libinterp/operators/op-cm-cm.cc
--- a/libinterp/operators/op-cm-cm.cc
+++ b/libinterp/operators/op-cm-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cx-mat.h"
 #include "ov-flt-cx-mat.h"
diff --git a/libinterp/operators/op-cm-cs.cc b/libinterp/operators/op-cm-cs.cc
--- a/libinterp/operators/op-cm-cs.cc
+++ b/libinterp/operators/op-cm-cs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cx-mat.h"
 #include "ov-flt-cx-mat.h"
diff --git a/libinterp/operators/op-cm-dm.cc b/libinterp/operators/op-cm-dm.cc
--- a/libinterp/operators/op-cm-dm.cc
+++ b/libinterp/operators/op-cm-dm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-cx-mat.h"
 #define RINCLUDE "ov-re-diag.h"
 
 #define LMATRIX complex_matrix
 #define RMATRIX diag_matrix
diff --git a/libinterp/operators/op-cm-m.cc b/libinterp/operators/op-cm-m.cc
--- a/libinterp/operators/op-cm-m.cc
+++ b/libinterp/operators/op-cm-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-cm-m.h"
 #include "mx-m-cm.h"
 #include "mx-cnda-nda.h"
 #include "mx-nda-cnda.h"
 
diff --git a/libinterp/operators/op-cm-s.cc b/libinterp/operators/op-cm-s.cc
--- a/libinterp/operators/op-cm-s.cc
+++ b/libinterp/operators/op-cm-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-cm-s.h"
 #include "mx-cnda-s.h"
 
 #include "errwarn.h"
 #include "ovl.h"
diff --git a/libinterp/operators/op-cm-scm.cc b/libinterp/operators/op-cm-scm.cc
--- a/libinterp/operators/op-cm-scm.cc
+++ b/libinterp/operators/op-cm-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-cm-sm.cc b/libinterp/operators/op-cm-sm.cc
--- a/libinterp/operators/op-cm-sm.cc
+++ b/libinterp/operators/op-cm-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-cs-cm.cc b/libinterp/operators/op-cs-cm.cc
--- a/libinterp/operators/op-cs-cm.cc
+++ b/libinterp/operators/op-cs-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-complex.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-cs-cs.cc b/libinterp/operators/op-cs-cs.cc
--- a/libinterp/operators/op-cs-cs.cc
+++ b/libinterp/operators/op-cs-cs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
diff --git a/libinterp/operators/op-cs-m.cc b/libinterp/operators/op-cs-m.cc
--- a/libinterp/operators/op-cs-m.cc
+++ b/libinterp/operators/op-cs-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-cs-nda.h"
 #include "mx-nda-cs.h"
 #include "mx-cs-nda.h"
 #include "mx-nda-cs.h"
 
diff --git a/libinterp/operators/op-cs-s.cc b/libinterp/operators/op-cs-s.cc
--- a/libinterp/operators/op-cs-s.cc
+++ b/libinterp/operators/op-cs-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-complex.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-cs-scm.cc b/libinterp/operators/op-cs-scm.cc
--- a/libinterp/operators/op-cs-scm.cc
+++ b/libinterp/operators/op-cs-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-cs-sm.cc b/libinterp/operators/op-cs-sm.cc
--- a/libinterp/operators/op-cs-sm.cc
+++ b/libinterp/operators/op-cs-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-complex.h"
diff --git a/libinterp/operators/op-dm-cdm.cc b/libinterp/operators/op-dm-cdm.cc
--- a/libinterp/operators/op-dm-cdm.cc
+++ b/libinterp/operators/op-dm-cdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-re-diag.h"
 #define RINCLUDE "ov-cx-diag.h"
 
 #define LMATRIX diag_matrix
 #define RMATRIX complex_diag_matrix
diff --git a/libinterp/operators/op-dm-cm.cc b/libinterp/operators/op-dm-cm.cc
--- a/libinterp/operators/op-dm-cm.cc
+++ b/libinterp/operators/op-dm-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-re-diag.h"
 #define RINCLUDE "ov-cx-mat.h"
 
 #define LMATRIX diag_matrix
 #define RMATRIX complex_matrix
diff --git a/libinterp/operators/op-dm-dm.cc b/libinterp/operators/op-dm-dm.cc
--- a/libinterp/operators/op-dm-dm.cc
+++ b/libinterp/operators/op-dm-dm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-re-diag.h"
diff --git a/libinterp/operators/op-dm-m.cc b/libinterp/operators/op-dm-m.cc
--- a/libinterp/operators/op-dm-m.cc
+++ b/libinterp/operators/op-dm-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-re-diag.h"
 #define RINCLUDE "ov-re-mat.h"
 
 #define LMATRIX diag_matrix
 #define LDMATRIX matrix
diff --git a/libinterp/operators/op-dm-scm.cc b/libinterp/operators/op-dm-scm.cc
--- a/libinterp/operators/op-dm-scm.cc
+++ b/libinterp/operators/op-dm-scm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-cm-s.h"
 #include "mx-s-cm.h"
 
 #include "mx-dm-cs.h"
 #include "mx-cs-dm.h"
diff --git a/libinterp/operators/op-dm-sm.cc b/libinterp/operators/op-dm-sm.cc
--- a/libinterp/operators/op-dm-sm.cc
+++ b/libinterp/operators/op-dm-sm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
diff --git a/libinterp/operators/op-dm-template.cc b/libinterp/operators/op-dm-template.cc
--- a/libinterp/operators/op-dm-template.cc
+++ b/libinterp/operators/op-dm-template.cc
@@ -27,53 +27,53 @@ along with Octave; see the file COPYING.
 // FIXME: it might be nice to only include the declarations of the
 // operators that are actually needed instead of including all of them.
 #include "mx-ops.h"
 
 #include "ops.h"
 #include "xdiv.h"
 #include LINCLUDE
 #include RINCLUDE
-#ifdef DEFINENULLASSIGNCONV
+#if defined (DEFINENULLASSIGNCONV)
 #  include "ov-null-mat.h"
 #endif
 
 // matrix by diag matrix ops.
 
 DEFBINOP_OP (add, LMATRIX, RMATRIX, +)
 DEFBINOP_OP (sub, LMATRIX, RMATRIX, -)
 DEFBINOP_OP (mul, LMATRIX, RMATRIX, *)
 
-#ifndef LDMATRIX
+#if ! defined (LDMATRIX)
 #  define LDMATRIX LMATRIX
 #endif
 
-#ifndef RDMATRIX
+#if ! defined (RDMATRIX)
 #  define RDMATRIX RMATRIX
 #endif
 
 #define OCTAVE_LMATRIX CONCAT2(octave_, LMATRIX)
 #define OCTAVE_LDMATRIX CONCAT2(octave_, LDMATRIX)
 #define OCTAVE_RMATRIX CONCAT2(octave_, RMATRIX)
 #define LMATRIX_VALUE CONCAT2(LMATRIX, _value)
 #define RMATRIX_VALUE CONCAT2(RMATRIX, _value)
 #define LDMATRIX_VALUE CONCAT2(LDMATRIX, _value)
 #define RDMATRIX_VALUE CONCAT2(RDMATRIX, _value)
 
-#ifdef DEFINEDIV
+#if defined (DEFINEDIV)
 DEFBINOP (div, LMATRIX, RMATRIX)
 {
   const OCTAVE_LMATRIX& v1 = dynamic_cast<const OCTAVE_LMATRIX&> (a1);
   const OCTAVE_RMATRIX& v2 = dynamic_cast<const OCTAVE_RMATRIX&> (a2);
 
   return xdiv (v1.LDMATRIX_VALUE (), v2.RMATRIX_VALUE ());
 }
 #endif
 
-#ifdef DEFINELDIV
+#if defined (DEFINELDIV)
 DEFBINOP (ldiv, LMATRIX, RMATRIX)
 {
   const OCTAVE_LMATRIX& v1 = dynamic_cast<const OCTAVE_LMATRIX&> (a1);
   const OCTAVE_RMATRIX& v2 = dynamic_cast<const OCTAVE_RMATRIX&> (a2);
 
   return xleftdiv (v1.LMATRIX_VALUE (), v2.RDMATRIX_VALUE ());
 }
 #endif
@@ -82,20 +82,20 @@ DEFBINOP (ldiv, LMATRIX, RMATRIX)
 #define INST_NAME CONCAT3(install_, SHORT_NAME, _ops)
 
 void
 INST_NAME (void)
 {
   INSTALL_BINOP (op_add, OCTAVE_LMATRIX, OCTAVE_RMATRIX, add);
   INSTALL_BINOP (op_sub, OCTAVE_LMATRIX, OCTAVE_RMATRIX, sub);
   INSTALL_BINOP (op_mul, OCTAVE_LMATRIX, OCTAVE_RMATRIX, mul);
-#ifdef DEFINEDIV
+#if defined (DEFINEDIV)
   INSTALL_BINOP (op_div, OCTAVE_LMATRIX, OCTAVE_RMATRIX, div);
 #endif
-#ifdef DEFINELDIV
+#if defined (DEFINELDIV)
   INSTALL_BINOP (op_ldiv, OCTAVE_LMATRIX, OCTAVE_RMATRIX, ldiv);
 #endif
-#ifdef DEFINENULLASSIGNCONV
+#if defined (DEFINENULLASSIGNCONV)
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_matrix, OCTAVE_LDMATRIX);
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_str, OCTAVE_LDMATRIX);
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_sq_str, OCTAVE_LDMATRIX);
 #endif
 }
diff --git a/libinterp/operators/op-dms-template.cc b/libinterp/operators/op-dms-template.cc
--- a/libinterp/operators/op-dms-template.cc
+++ b/libinterp/operators/op-dms-template.cc
@@ -15,33 +15,33 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ops.h"
 #include "errwarn.h"
 #include "xpow.h"
 #include SINCLUDE
 #include MINCLUDE
 
 // matrix by diag matrix ops.
 
-#ifndef SCALARV
+#if ! defined (SCALARV)
 #  define SCALARV SCALAR
 #endif
 
-#ifndef MATRIXV
+#if ! defined (MATRIXV)
 #  define MATRIXV MATRIX
 #endif
 
 DEFNDBINOP_OP (sdmmul, SCALAR, MATRIX, SCALARV, MATRIXV, *)
 DEFNDBINOP_OP (dmsmul, MATRIX, SCALAR, MATRIXV, SCALARV, *)
 
 #define OCTAVE_MATRIX CONCAT2(octave_, MATRIX)
 #define OCTAVE_SCALAR CONCAT2(octave_, SCALAR)
diff --git a/libinterp/operators/op-double-conv.cc b/libinterp/operators/op-double-conv.cc
--- a/libinterp/operators/op-double-conv.cc
+++ b/libinterp/operators/op-double-conv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-int8.h"
 #include "ov-int16.h"
diff --git a/libinterp/operators/op-fcdm-fcdm.cc b/libinterp/operators/op-fcdm-fcdm.cc
--- a/libinterp/operators/op-fcdm-fcdm.cc
+++ b/libinterp/operators/op-fcdm-fcdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-flt-cx-mat.h"
 #include "ov-flt-cx-diag.h"
diff --git a/libinterp/operators/op-fcdm-fcm.cc b/libinterp/operators/op-fcdm-fcm.cc
--- a/libinterp/operators/op-fcdm-fcm.cc
+++ b/libinterp/operators/op-fcdm-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-cx-diag.h"
 #define RINCLUDE "ov-flt-cx-mat.h"
 
 #define LMATRIX float_complex_diag_matrix
 #define RMATRIX float_complex_matrix
diff --git a/libinterp/operators/op-fcdm-fdm.cc b/libinterp/operators/op-fcdm-fdm.cc
--- a/libinterp/operators/op-fcdm-fdm.cc
+++ b/libinterp/operators/op-fcdm-fdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-flt-cx-diag.h"
 #include "ov-flt-re-diag.h"
diff --git a/libinterp/operators/op-fcdm-fm.cc b/libinterp/operators/op-fcdm-fm.cc
--- a/libinterp/operators/op-fcdm-fm.cc
+++ b/libinterp/operators/op-fcdm-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-cx-diag.h"
 #define RINCLUDE "ov-flt-re-mat.h"
 
 #define LMATRIX float_complex_diag_matrix
 #define RMATRIX float_matrix
diff --git a/libinterp/operators/op-fcm-fcdm.cc b/libinterp/operators/op-fcm-fcdm.cc
--- a/libinterp/operators/op-fcm-fcdm.cc
+++ b/libinterp/operators/op-fcm-fcdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-cx-mat.h"
 #define RINCLUDE "ov-flt-cx-diag.h"
 
 #define LMATRIX float_complex_matrix
 #define RMATRIX float_complex_diag_matrix
diff --git a/libinterp/operators/op-fcm-fcm.cc b/libinterp/operators/op-fcm-fcm.cc
--- a/libinterp/operators/op-fcm-fcm.cc
+++ b/libinterp/operators/op-fcm-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cx-mat.h"
 #include "ov-flt-cx-mat.h"
diff --git a/libinterp/operators/op-fcm-fcs.cc b/libinterp/operators/op-fcm-fcs.cc
--- a/libinterp/operators/op-fcm-fcs.cc
+++ b/libinterp/operators/op-fcm-fcs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-cx-mat.h"
 #include "ov-flt-cx-mat.h"
diff --git a/libinterp/operators/op-fcm-fdm.cc b/libinterp/operators/op-fcm-fdm.cc
--- a/libinterp/operators/op-fcm-fdm.cc
+++ b/libinterp/operators/op-fcm-fdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-cx-mat.h"
 #define RINCLUDE "ov-flt-re-diag.h"
 
 #define LMATRIX float_complex_matrix
 #define RMATRIX float_diag_matrix
diff --git a/libinterp/operators/op-fcm-fm.cc b/libinterp/operators/op-fcm-fm.cc
--- a/libinterp/operators/op-fcm-fm.cc
+++ b/libinterp/operators/op-fcm-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fcm-fm.h"
 #include "mx-fm-fcm.h"
 #include "mx-fcnda-fnda.h"
 #include "mx-fnda-fcnda.h"
 
diff --git a/libinterp/operators/op-fcm-fs.cc b/libinterp/operators/op-fcm-fs.cc
--- a/libinterp/operators/op-fcm-fs.cc
+++ b/libinterp/operators/op-fcm-fs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fcnda-fs.h"
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
diff --git a/libinterp/operators/op-fcn.cc b/libinterp/operators/op-fcn.cc
--- a/libinterp/operators/op-fcn.cc
+++ b/libinterp/operators/op-fcn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-fcn-handle.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-fcs-fcm.cc b/libinterp/operators/op-fcs-fcm.cc
--- a/libinterp/operators/op-fcs-fcm.cc
+++ b/libinterp/operators/op-fcs-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-complex.h"
 #include "ov-flt-complex.h"
diff --git a/libinterp/operators/op-fcs-fcs.cc b/libinterp/operators/op-fcs-fcs.cc
--- a/libinterp/operators/op-fcs-fcs.cc
+++ b/libinterp/operators/op-fcs-fcs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-complex.h"
 #include "ov-flt-complex.h"
diff --git a/libinterp/operators/op-fcs-fm.cc b/libinterp/operators/op-fcs-fm.cc
--- a/libinterp/operators/op-fcs-fm.cc
+++ b/libinterp/operators/op-fcs-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fcs-fnda.h"
 #include "mx-fnda-fcs.h"
 
 #include "errwarn.h"
 #include "ovl.h"
diff --git a/libinterp/operators/op-fcs-fs.cc b/libinterp/operators/op-fcs-fs.cc
--- a/libinterp/operators/op-fcs-fs.cc
+++ b/libinterp/operators/op-fcs-fs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-complex.h"
 #include "ov-flt-complex.h"
diff --git a/libinterp/operators/op-fdm-fcdm.cc b/libinterp/operators/op-fdm-fcdm.cc
--- a/libinterp/operators/op-fdm-fcdm.cc
+++ b/libinterp/operators/op-fdm-fcdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-re-diag.h"
 #define RINCLUDE "ov-flt-cx-diag.h"
 
 #define LMATRIX float_diag_matrix
 #define RMATRIX float_complex_diag_matrix
diff --git a/libinterp/operators/op-fdm-fcm.cc b/libinterp/operators/op-fdm-fcm.cc
--- a/libinterp/operators/op-fdm-fcm.cc
+++ b/libinterp/operators/op-fdm-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-re-diag.h"
 #define RINCLUDE "ov-flt-cx-mat.h"
 
 #define LMATRIX float_diag_matrix
 #define RMATRIX float_complex_matrix
diff --git a/libinterp/operators/op-fdm-fdm.cc b/libinterp/operators/op-fdm-fdm.cc
--- a/libinterp/operators/op-fdm-fdm.cc
+++ b/libinterp/operators/op-fdm-fdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-flt-re-mat.h"
 #include "ov-flt-re-diag.h"
diff --git a/libinterp/operators/op-fdm-fm.cc b/libinterp/operators/op-fdm-fm.cc
--- a/libinterp/operators/op-fdm-fm.cc
+++ b/libinterp/operators/op-fdm-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-re-diag.h"
 #define RINCLUDE "ov-flt-re-mat.h"
 
 #define LMATRIX float_diag_matrix
 #define RMATRIX float_matrix
diff --git a/libinterp/operators/op-float-conv.cc b/libinterp/operators/op-float-conv.cc
--- a/libinterp/operators/op-float-conv.cc
+++ b/libinterp/operators/op-float-conv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-int8.h"
 #include "ov-int16.h"
diff --git a/libinterp/operators/op-fm-fcdm.cc b/libinterp/operators/op-fm-fcdm.cc
--- a/libinterp/operators/op-fm-fcdm.cc
+++ b/libinterp/operators/op-fm-fcdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-re-mat.h"
 #define RINCLUDE "ov-flt-cx-diag.h"
 
 #define LMATRIX float_matrix
 #define RMATRIX float_complex_diag_matrix
diff --git a/libinterp/operators/op-fm-fcm.cc b/libinterp/operators/op-fm-fcm.cc
--- a/libinterp/operators/op-fm-fcm.cc
+++ b/libinterp/operators/op-fm-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fm-fcm.h"
 #include "mx-fcm-fm.h"
 #include "mx-fnda-fcnda.h"
 #include "mx-fcnda-fnda.h"
 
diff --git a/libinterp/operators/op-fm-fcs.cc b/libinterp/operators/op-fm-fcs.cc
--- a/libinterp/operators/op-fm-fcs.cc
+++ b/libinterp/operators/op-fm-fcs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fm-fcs.h"
 #include "mx-fcs-fm.h"
 #include "mx-fnda-fcs.h"
 #include "mx-fcs-fnda.h"
 
diff --git a/libinterp/operators/op-fm-fdm.cc b/libinterp/operators/op-fm-fdm.cc
--- a/libinterp/operators/op-fm-fdm.cc
+++ b/libinterp/operators/op-fm-fdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-flt-re-mat.h"
 #define RINCLUDE "ov-flt-re-diag.h"
 
 #define LMATRIX float_matrix
 #define RMATRIX float_diag_matrix
diff --git a/libinterp/operators/op-fm-fm.cc b/libinterp/operators/op-fm-fm.cc
--- a/libinterp/operators/op-fm-fm.cc
+++ b/libinterp/operators/op-fm-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-flt-re-mat.h"
diff --git a/libinterp/operators/op-fm-fs.cc b/libinterp/operators/op-fm-fs.cc
--- a/libinterp/operators/op-fm-fs.cc
+++ b/libinterp/operators/op-fm-fs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-flt-re-mat.h"
 #include "ov-float.h"
diff --git a/libinterp/operators/op-fs-fcm.cc b/libinterp/operators/op-fs-fcm.cc
--- a/libinterp/operators/op-fs-fcm.cc
+++ b/libinterp/operators/op-fs-fcm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-fs-fcm.h"
 #include "mx-fcm-fs.h"
 #include "mx-fs-fcnda.h"
 #include "mx-fcnda-fs.h"
 
diff --git a/libinterp/operators/op-fs-fcs.cc b/libinterp/operators/op-fs-fcs.cc
--- a/libinterp/operators/op-fs-fcs.cc
+++ b/libinterp/operators/op-fs-fcs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-scalar.h"
 #include "ov-float.h"
diff --git a/libinterp/operators/op-fs-fm.cc b/libinterp/operators/op-fs-fm.cc
--- a/libinterp/operators/op-fs-fm.cc
+++ b/libinterp/operators/op-fs-fm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-scalar.h"
 #include "ov-float.h"
diff --git a/libinterp/operators/op-fs-fs.cc b/libinterp/operators/op-fs-fs.cc
--- a/libinterp/operators/op-fs-fs.cc
+++ b/libinterp/operators/op-fs-fs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
diff --git a/libinterp/operators/op-i16-i16.cc b/libinterp/operators/op-i16-i16.cc
--- a/libinterp/operators/op-i16-i16.cc
+++ b/libinterp/operators/op-i16-i16.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-i16nda-i8.h"
 #include "mx-i16nda-ui8.h"
 #include "mx-i16nda-ui16.h"
 #include "mx-i16nda-i32.h"
 #include "mx-i16nda-ui32.h"
diff --git a/libinterp/operators/op-i32-i32.cc b/libinterp/operators/op-i32-i32.cc
--- a/libinterp/operators/op-i32-i32.cc
+++ b/libinterp/operators/op-i32-i32.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-i32nda-i8.h"
 #include "mx-i32nda-ui8.h"
 #include "mx-i32nda-i16.h"
 #include "mx-i32nda-ui16.h"
 #include "mx-i32nda-ui32.h"
diff --git a/libinterp/operators/op-i64-i64.cc b/libinterp/operators/op-i64-i64.cc
--- a/libinterp/operators/op-i64-i64.cc
+++ b/libinterp/operators/op-i64-i64.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-i64nda-i8.h"
 #include "mx-i64nda-ui8.h"
 #include "mx-i64nda-i16.h"
 #include "mx-i64nda-ui16.h"
 #include "mx-i64nda-i32.h"
diff --git a/libinterp/operators/op-i8-i8.cc b/libinterp/operators/op-i8-i8.cc
--- a/libinterp/operators/op-i8-i8.cc
+++ b/libinterp/operators/op-i8-i8.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-i8nda-ui8.h"
 #include "mx-i8nda-i16.h"
 #include "mx-i8nda-ui16.h"
 #include "mx-i8nda-i32.h"
 #include "mx-i8nda-ui32.h"
diff --git a/libinterp/operators/op-int-concat.cc b/libinterp/operators/op-int-concat.cc
--- a/libinterp/operators/op-int-concat.cc
+++ b/libinterp/operators/op-int-concat.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-int8.h"
 #include "ov-int16.h"
diff --git a/libinterp/operators/op-int-conv.cc b/libinterp/operators/op-int-conv.cc
--- a/libinterp/operators/op-int-conv.cc
+++ b/libinterp/operators/op-int-conv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-int8.h"
 #include "ov-int16.h"
diff --git a/libinterp/operators/op-m-cdm.cc b/libinterp/operators/op-m-cdm.cc
--- a/libinterp/operators/op-m-cdm.cc
+++ b/libinterp/operators/op-m-cdm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-re-mat.h"
 #define RINCLUDE "ov-cx-diag.h"
 
 #define LMATRIX matrix
 #define RMATRIX complex_diag_matrix
diff --git a/libinterp/operators/op-m-cm.cc b/libinterp/operators/op-m-cm.cc
--- a/libinterp/operators/op-m-cm.cc
+++ b/libinterp/operators/op-m-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-m-cm.h"
 #include "mx-cm-m.h"
 #include "mx-nda-cnda.h"
 #include "mx-cnda-nda.h"
 
diff --git a/libinterp/operators/op-m-cs.cc b/libinterp/operators/op-m-cs.cc
--- a/libinterp/operators/op-m-cs.cc
+++ b/libinterp/operators/op-m-cs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-m-cs.h"
 #include "mx-cs-m.h"
 #include "mx-nda-cs.h"
 #include "mx-cs-nda.h"
 
diff --git a/libinterp/operators/op-m-dm.cc b/libinterp/operators/op-m-dm.cc
--- a/libinterp/operators/op-m-dm.cc
+++ b/libinterp/operators/op-m-dm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #define LINCLUDE "ov-re-mat.h"
 #define RINCLUDE "ov-re-diag.h"
 
 #define LMATRIX matrix
 #define RMATRIX diag_matrix
diff --git a/libinterp/operators/op-m-m.cc b/libinterp/operators/op-m-m.cc
--- a/libinterp/operators/op-m-m.cc
+++ b/libinterp/operators/op-m-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-flt-re-mat.h"
diff --git a/libinterp/operators/op-m-s.cc b/libinterp/operators/op-m-s.cc
--- a/libinterp/operators/op-m-s.cc
+++ b/libinterp/operators/op-m-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-flt-re-mat.h"
diff --git a/libinterp/operators/op-m-scm.cc b/libinterp/operators/op-m-scm.cc
--- a/libinterp/operators/op-m-scm.cc
+++ b/libinterp/operators/op-m-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-m-sm.cc b/libinterp/operators/op-m-sm.cc
--- a/libinterp/operators/op-m-sm.cc
+++ b/libinterp/operators/op-m-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-pm-pm.cc b/libinterp/operators/op-pm-pm.cc
--- a/libinterp/operators/op-pm-pm.cc
+++ b/libinterp/operators/op-pm-pm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-perm.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-pm-scm.cc b/libinterp/operators/op-pm-scm.cc
--- a/libinterp/operators/op-pm-scm.cc
+++ b/libinterp/operators/op-pm-scm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
diff --git a/libinterp/operators/op-pm-sm.cc b/libinterp/operators/op-pm-sm.cc
--- a/libinterp/operators/op-pm-sm.cc
+++ b/libinterp/operators/op-pm-sm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
diff --git a/libinterp/operators/op-pm-template.cc b/libinterp/operators/op-pm-template.cc
--- a/libinterp/operators/op-pm-template.cc
+++ b/libinterp/operators/op-pm-template.cc
@@ -15,55 +15,55 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // FIXME: it might be nice to only include the declarations of the
 // operators that are actually needed instead of including all of them.
 #include "mx-ops.h"
 
 #include "ov-perm.h"
 #include MINCLUDE
 #include "ops.h"
-#ifdef DEFINENULLASSIGNCONV
+#if defined (DEFINENULLASSIGNCONV)
 #  include "ov-null-mat.h"
 #endif
 
-#ifndef LDMATRIX
+#if ! defined (LDMATRIX)
 #  define LDMATRIX LMATRIX
 #endif
 
 #define OCTAVE_LMATRIX CONCAT2(octave_, LMATRIX)
 #define OCTAVE_LDMATRIX CONCAT2(octave_, LDMATRIX)
 #define OCTAVE_RMATRIX CONCAT2(octave_, RMATRIX)
-#ifdef LEFT
+#if defined (LEFT)
 #  define LMATRIX_VALUE perm_matrix_value
 #  define RMATRIX_VALUE CONCAT2(RMATRIX, _value)
 #else
 #  define LMATRIX_VALUE CONCAT2(LMATRIX, _value)
 #  define RMATRIX_VALUE perm_matrix_value
 #endif
 
 DEFBINOP (mul, LMATRIX, RMATRIX)
 {
   const OCTAVE_LMATRIX& v1 = dynamic_cast<const OCTAVE_LMATRIX&> (a1);
   const OCTAVE_RMATRIX& v2 = dynamic_cast<const OCTAVE_RMATRIX&> (a2);
 
   return v1.LMATRIX_VALUE () * v2.RMATRIX_VALUE ();
 }
 
-#ifdef LEFT
+#if defined (LEFT)
 DEFBINOP (ldiv, LMATRIX, RMATRIX)
 {
   const OCTAVE_LMATRIX& v1 = dynamic_cast<const OCTAVE_LMATRIX&> (a1);
   const OCTAVE_RMATRIX& v2 = dynamic_cast<const OCTAVE_RMATRIX&> (a2);
 
   return v1.perm_matrix_value ().inverse () * v2.RMATRIX_VALUE ();
 }
 #else
@@ -79,19 +79,19 @@ DEFBINOP (div, LMATRIX, RMATRIX)
 
 #define SHORT_NAME CONCAT3(LSHORT, _, RSHORT)
 #define INST_NAME CONCAT3(install_, SHORT_NAME, _ops)
 
 void
 INST_NAME (void)
 {
   INSTALL_BINOP (op_mul, OCTAVE_LMATRIX, OCTAVE_RMATRIX, mul);
-#ifdef LEFT
+#if defined (LEFT)
   INSTALL_BINOP (op_ldiv, OCTAVE_LMATRIX, OCTAVE_RMATRIX, ldiv);
 #else
   INSTALL_BINOP (op_div, OCTAVE_LMATRIX, OCTAVE_RMATRIX, div);
 #endif
-#ifdef DEFINENULLASSIGNCONV
+#if defined (DEFINENULLASSIGNCONV)
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_matrix, OCTAVE_LDMATRIX);
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_str, OCTAVE_LDMATRIX);
   INSTALL_ASSIGNCONV (OCTAVE_LMATRIX, octave_null_sq_str, OCTAVE_LDMATRIX);
 #endif
 }
diff --git a/libinterp/operators/op-range.cc b/libinterp/operators/op-range.cc
--- a/libinterp/operators/op-range.cc
+++ b/libinterp/operators/op-range.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-range.h"
 #include "ov-ch-mat.h"
diff --git a/libinterp/operators/op-s-cm.cc b/libinterp/operators/op-s-cm.cc
--- a/libinterp/operators/op-s-cm.cc
+++ b/libinterp/operators/op-s-cm.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-s-cm.h"
 #include "mx-cm-s.h"
 #include "mx-s-cnda.h"
 #include "mx-cnda-s.h"
 
diff --git a/libinterp/operators/op-s-cs.cc b/libinterp/operators/op-s-cs.cc
--- a/libinterp/operators/op-s-cs.cc
+++ b/libinterp/operators/op-s-cs.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-scalar.h"
 #include "ov-float.h"
diff --git a/libinterp/operators/op-s-m.cc b/libinterp/operators/op-s-m.cc
--- a/libinterp/operators/op-s-m.cc
+++ b/libinterp/operators/op-s-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-scalar.h"
 #include "ov-float.h"
diff --git a/libinterp/operators/op-s-s.cc b/libinterp/operators/op-s-s.cc
--- a/libinterp/operators/op-s-s.cc
+++ b/libinterp/operators/op-s-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
diff --git a/libinterp/operators/op-s-scm.cc b/libinterp/operators/op-s-scm.cc
--- a/libinterp/operators/op-s-scm.cc
+++ b/libinterp/operators/op-s-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-s-sm.cc b/libinterp/operators/op-s-sm.cc
--- a/libinterp/operators/op-s-sm.cc
+++ b/libinterp/operators/op-s-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-sbm-b.cc b/libinterp/operators/op-sbm-b.cc
--- a/libinterp/operators/op-sbm-b.cc
+++ b/libinterp/operators/op-sbm-b.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool.h"
diff --git a/libinterp/operators/op-sbm-bm.cc b/libinterp/operators/op-sbm-bm.cc
--- a/libinterp/operators/op-sbm-bm.cc
+++ b/libinterp/operators/op-sbm-bm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-sbm-sbm.cc b/libinterp/operators/op-sbm-sbm.cc
--- a/libinterp/operators/op-sbm-sbm.cc
+++ b/libinterp/operators/op-sbm-sbm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-bool-mat.h"
diff --git a/libinterp/operators/op-scm-cm.cc b/libinterp/operators/op-scm-cm.cc
--- a/libinterp/operators/op-scm-cm.cc
+++ b/libinterp/operators/op-scm-cm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-scm-cs.cc b/libinterp/operators/op-scm-cs.cc
--- a/libinterp/operators/op-scm-cs.cc
+++ b/libinterp/operators/op-scm-cs.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-scm-m.cc b/libinterp/operators/op-scm-m.cc
--- a/libinterp/operators/op-scm-m.cc
+++ b/libinterp/operators/op-scm-m.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-scm-s.cc b/libinterp/operators/op-scm-s.cc
--- a/libinterp/operators/op-scm-s.cc
+++ b/libinterp/operators/op-scm-s.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-scm-scm.cc b/libinterp/operators/op-scm-scm.cc
--- a/libinterp/operators/op-scm-scm.cc
+++ b/libinterp/operators/op-scm-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-null-mat.h"
diff --git a/libinterp/operators/op-scm-sm.cc b/libinterp/operators/op-scm-sm.cc
--- a/libinterp/operators/op-scm-sm.cc
+++ b/libinterp/operators/op-scm-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
diff --git a/libinterp/operators/op-sm-cm.cc b/libinterp/operators/op-sm-cm.cc
--- a/libinterp/operators/op-sm-cm.cc
+++ b/libinterp/operators/op-sm-cm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-cx-mat.h"
diff --git a/libinterp/operators/op-sm-cs.cc b/libinterp/operators/op-sm-cs.cc
--- a/libinterp/operators/op-sm-cs.cc
+++ b/libinterp/operators/op-sm-cs.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-complex.h"
diff --git a/libinterp/operators/op-sm-m.cc b/libinterp/operators/op-sm-m.cc
--- a/libinterp/operators/op-sm-m.cc
+++ b/libinterp/operators/op-sm-m.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-sm-s.cc b/libinterp/operators/op-sm-s.cc
--- a/libinterp/operators/op-sm-s.cc
+++ b/libinterp/operators/op-sm-s.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-scalar.h"
diff --git a/libinterp/operators/op-sm-scm.cc b/libinterp/operators/op-sm-scm.cc
--- a/libinterp/operators/op-sm-scm.cc
+++ b/libinterp/operators/op-sm-scm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ops.h"
diff --git a/libinterp/operators/op-sm-sm.cc b/libinterp/operators/op-sm-sm.cc
--- a/libinterp/operators/op-sm-sm.cc
+++ b/libinterp/operators/op-sm-sm.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-typeinfo.h"
 #include "ov-re-mat.h"
diff --git a/libinterp/operators/op-str-m.cc b/libinterp/operators/op-str-m.cc
--- a/libinterp/operators/op-str-m.cc
+++ b/libinterp/operators/op-str-m.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-str-mat.h"
diff --git a/libinterp/operators/op-str-s.cc b/libinterp/operators/op-str-s.cc
--- a/libinterp/operators/op-str-s.cc
+++ b/libinterp/operators/op-str-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-scalar.h"
 #include "ov-str-mat.h"
diff --git a/libinterp/operators/op-str-str.cc b/libinterp/operators/op-str-str.cc
--- a/libinterp/operators/op-str-str.cc
+++ b/libinterp/operators/op-str-str.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-str-mat.h"
 #include "ov-typeinfo.h"
diff --git a/libinterp/operators/op-struct.cc b/libinterp/operators/op-struct.cc
--- a/libinterp/operators/op-struct.cc
+++ b/libinterp/operators/op-struct.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "errwarn.h"
 #include "ovl.h"
 #include "ov.h"
 #include "ov-re-mat.h"
 #include "ov-struct.h"
diff --git a/libinterp/operators/op-ui16-ui16.cc b/libinterp/operators/op-ui16-ui16.cc
--- a/libinterp/operators/op-ui16-ui16.cc
+++ b/libinterp/operators/op-ui16-ui16.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-ui16nda-i8.h"
 #include "mx-ui16nda-ui8.h"
 #include "mx-ui16nda-i16.h"
 #include "mx-ui16nda-i32.h"
 #include "mx-ui16nda-ui32.h"
diff --git a/libinterp/operators/op-ui32-ui32.cc b/libinterp/operators/op-ui32-ui32.cc
--- a/libinterp/operators/op-ui32-ui32.cc
+++ b/libinterp/operators/op-ui32-ui32.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-ui32nda-i8.h"
 #include "mx-ui32nda-ui8.h"
 #include "mx-ui32nda-i16.h"
 #include "mx-ui32nda-ui16.h"
 #include "mx-ui32nda-i32.h"
diff --git a/libinterp/operators/op-ui64-ui64.cc b/libinterp/operators/op-ui64-ui64.cc
--- a/libinterp/operators/op-ui64-ui64.cc
+++ b/libinterp/operators/op-ui64-ui64.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-ui64nda-i8.h"
 #include "mx-ui64nda-ui8.h"
 #include "mx-ui64nda-i16.h"
 #include "mx-ui64nda-ui16.h"
 #include "mx-ui64nda-i32.h"
diff --git a/libinterp/operators/op-ui8-ui8.cc b/libinterp/operators/op-ui8-ui8.cc
--- a/libinterp/operators/op-ui8-ui8.cc
+++ b/libinterp/operators/op-ui8-ui8.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "mx-ui8nda-i8.h"
 #include "mx-ui8nda-i16.h"
 #include "mx-ui8nda-ui16.h"
 #include "mx-ui8nda-i32.h"
 #include "mx-ui8nda-ui32.h"
diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -27,17 +27,17 @@ reentrant because both still use many gl
 safe to create a parser object and call it while another parser
 object is active (to parse a callback function while the main
 interactive parser is waiting for input, for example) if you take
 care to properly save and restore (typically with an unwind_protect
 object) relevant global values before and after the nested call.
 */
 
 %top {
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
 // This one needs to be global.
 #pragma GCC diagnostic ignored "-Wunused-function"
 
 // Disable this warning for code that is generated by flex, including
@@ -45,17 +45,17 @@ object) relevant global values before an
 // state prior to functions we define at the bottom of the file.
 #pragma GCC diagnostic push
 #pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 // Define away the deprecated register storage class specifier to avoid
 // potential warnings about it.
 #if ! defined (register)
-#define register
+#  define register
 #endif
 
 }
 
 %option prefix = "octave_"
 %option noyywrap
 %option reentrant
 %option bison-bridge
@@ -123,51 +123,51 @@ object) relevant global values before an
 // FIXME: with bison 3.x, OCTAVE_STYPE appears in the generated
 // oct-parse.h file, but there is no definition for YYSTYPE, which is
 // needed by the code that is generated by flex.  I can't seem to find a
 // way to tell flex to use OCTAVE_STYPE instead of YYSTYPE in the code
 // it generates, or to tell bison to provide the definition of YYSTYPE
 // in the generated oct-parse.h file.
 
 #if defined (OCTAVE_STYPE_IS_DECLARED) && ! defined YYSTYPE
-#define YYSTYPE OCTAVE_STYPE
+#  define YYSTYPE OCTAVE_STYPE
 #endif
 
 #if defined (GNULIB_NAMESPACE)
 // Calls to the following functions appear in the generated output from
 // flex without the namespace tag.  Redefine them so we will use them
 // via the gnulib namespace.
-#define fprintf GNULIB_NAMESPACE::fprintf
-#define fwrite GNULIB_NAMESPACE::fwrite
-#define isatty GNULIB_NAMESPACE::isatty
-#define malloc GNULIB_NAMESPACE::malloc
-#define realloc GNULIB_NAMESPACE::realloc
+#  define fprintf GNULIB_NAMESPACE::fprintf
+#  define fwrite GNULIB_NAMESPACE::fwrite
+#  define isatty GNULIB_NAMESPACE::isatty
+#  define malloc GNULIB_NAMESPACE::malloc
+#  define realloc GNULIB_NAMESPACE::realloc
 #endif
 
 #if ! (defined (FLEX_SCANNER) \
        && defined (YY_FLEX_MAJOR_VERSION) && YY_FLEX_MAJOR_VERSION >= 2 \
        && defined (YY_FLEX_MINOR_VERSION) && YY_FLEX_MINOR_VERSION >= 5)
 #error lex.l requires flex version 2.5.4 or later
 #endif
 
 #define YY_EXTRA_TYPE octave_base_lexer *
 #define curr_lexer yyextra
 
 // Arrange to get input via readline.
 
-#ifdef YY_INPUT
-#undef YY_INPUT
+#if defined (YY_INPUT)
+#  undef YY_INPUT
 #endif
 #define YY_INPUT(buf, result, max_size) \
   result = curr_lexer->fill_flex_buffer (buf, max_size)
 
 // Try to avoid crashing out completely on fatal scanner errors.
 
-#ifdef YY_FATAL_ERROR
-#undef YY_FATAL_ERROR
+#if defined (YY_FATAL_ERROR)
+#  undef YY_FATAL_ERROR
 #endif
 #define YY_FATAL_ERROR(msg) \
   (yyget_extra (yyscanner))->fatal_error (msg)
 
 #define CMD_OR_OP(PATTERN, TOK, COMPAT) \
  \
   do \
     { \
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -26,17 +26,17 @@ along with Octave; see the file COPYING.
 // Parser for Octave.
 
 // C decarations.
 
 %{
 
 #define YYDEBUG 1
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include <cassert>
 #include <cstdio>
 #include <cstdlib>
 
 #include <iostream>
@@ -88,19 +88,19 @@ extern int octave_lex (YYSTYPE *, void *
 // Global access to currently active lexer.
 // FIXME: to be removed after more parser+lexer refactoring.
 octave_base_lexer *LEXER = 0;
 
 #if defined (GNULIB_NAMESPACE)
 // Calls to the following functions appear in the generated output from
 // Bison without the namespace tag.  Redefine them so we will use them
 // via the gnulib namespace.
-#define fclose GNULIB_NAMESPACE::fclose
-#define fprintf GNULIB_NAMESPACE::fprintf
-#define malloc GNULIB_NAMESPACE::malloc
+#  define fclose GNULIB_NAMESPACE::fclose
+#  define fprintf GNULIB_NAMESPACE::fprintf
+#  define malloc GNULIB_NAMESPACE::malloc
 #endif
 
 // TRUE means we printed messages about reading startup files.
 bool reading_startup_message_printed = false;
 
 // List of autoloads (function -> file mapping).
 static std::map<std::string, std::string> autoload_map;
 
diff --git a/libinterp/parse-tree/pt-arg-list.cc b/libinterp/parse-tree/pt-arg-list.cc
--- a/libinterp/parse-tree/pt-arg-list.cc
+++ b/libinterp/parse-tree/pt-arg-list.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "str-vec.h"
 
diff --git a/libinterp/parse-tree/pt-array-list.cc b/libinterp/parse-tree/pt-array-list.cc
--- a/libinterp/parse-tree/pt-array-list.cc
+++ b/libinterp/parse-tree/pt-array-list.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "error.h"
 #include "pt-array-list.h"
 
diff --git a/libinterp/parse-tree/pt-assign.cc b/libinterp/parse-tree/pt-assign.cc
--- a/libinterp/parse-tree/pt-assign.cc
+++ b/libinterp/parse-tree/pt-assign.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <set>
 
 #include "defun.h"
 #include "error.h"
diff --git a/libinterp/parse-tree/pt-binop.cc b/libinterp/parse-tree/pt-binop.cc
--- a/libinterp/parse-tree/pt-binop.cc
+++ b/libinterp/parse-tree/pt-binop.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "defun.h"
 #include "ovl.h"
 #include "ov.h"
 #include "profiler.h"
diff --git a/libinterp/parse-tree/pt-bp.cc b/libinterp/parse-tree/pt-bp.cc
--- a/libinterp/parse-tree/pt-bp.cc
+++ b/libinterp/parse-tree/pt-bp.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov-usr-fcn.h"
 #include "pager.h"
 #include "pt-all.h"
 
 // TRUE means SIGINT should put us in the debugger at the next
diff --git a/libinterp/parse-tree/pt-cbinop.cc b/libinterp/parse-tree/pt-cbinop.cc
--- a/libinterp/parse-tree/pt-cbinop.cc
+++ b/libinterp/parse-tree/pt-cbinop.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "ov.h"
 #include "pt-cbinop.h"
 #include "pt-bp.h"
diff --git a/libinterp/parse-tree/pt-cell.cc b/libinterp/parse-tree/pt-cell.cc
--- a/libinterp/parse-tree/pt-cell.cc
+++ b/libinterp/parse-tree/pt-cell.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Cell.h"
 #include "ovl.h"
 #include "pt-arg-list.h"
diff --git a/libinterp/parse-tree/pt-check.cc b/libinterp/parse-tree/pt-check.cc
--- a/libinterp/parse-tree/pt-check.cc
+++ b/libinterp/parse-tree/pt-check.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "input.h"
 #include "ov-usr-fcn.h"
 #include "pt-all.h"
 
diff --git a/libinterp/parse-tree/pt-classdef.cc b/libinterp/parse-tree/pt-classdef.cc
--- a/libinterp/parse-tree/pt-classdef.cc
+++ b/libinterp/parse-tree/pt-classdef.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov-classdef.h"
 #include "pt-classdef.h"
 
 // Classdef attribute
 
diff --git a/libinterp/parse-tree/pt-cmd.cc b/libinterp/parse-tree/pt-cmd.cc
--- a/libinterp/parse-tree/pt-cmd.cc
+++ b/libinterp/parse-tree/pt-cmd.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "pt-cmd.h"
 #include "pt-walk.h"
 
 // No-op.
 
diff --git a/libinterp/parse-tree/pt-colon.cc b/libinterp/parse-tree/pt-colon.cc
--- a/libinterp/parse-tree/pt-colon.cc
+++ b/libinterp/parse-tree/pt-colon.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "pager.h"
 #include "ov.h"
 #include "pt-bp.h"
diff --git a/libinterp/parse-tree/pt-const.cc b/libinterp/parse-tree/pt-const.cc
--- a/libinterp/parse-tree/pt-const.cc
+++ b/libinterp/parse-tree/pt-const.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "error.h"
 #include "ovl.h"
 #include "pager.h"
diff --git a/libinterp/parse-tree/pt-decl.cc b/libinterp/parse-tree/pt-decl.cc
--- a/libinterp/parse-tree/pt-decl.cc
+++ b/libinterp/parse-tree/pt-decl.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "pt-cmd.h"
 #include "ov.h"
 #include "oct-lvalue.h"
diff --git a/libinterp/parse-tree/pt-eval.cc b/libinterp/parse-tree/pt-eval.cc
--- a/libinterp/parse-tree/pt-eval.cc
+++ b/libinterp/parse-tree/pt-eval.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 
 #include <iostream>
 
 #include <fstream>
diff --git a/libinterp/parse-tree/pt-except.cc b/libinterp/parse-tree/pt-except.cc
--- a/libinterp/parse-tree/pt-except.cc
+++ b/libinterp/parse-tree/pt-except.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "quit.h"
 
 #include "error.h"
 #include "oct-lvalue.h"
 #include "ov.h"
diff --git a/libinterp/parse-tree/pt-exp.cc b/libinterp/parse-tree/pt-exp.cc
--- a/libinterp/parse-tree/pt-exp.cc
+++ b/libinterp/parse-tree/pt-exp.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "error.h"
 #include "pager.h"
diff --git a/libinterp/parse-tree/pt-fcn-handle.cc b/libinterp/parse-tree/pt-fcn-handle.cc
--- a/libinterp/parse-tree/pt-fcn-handle.cc
+++ b/libinterp/parse-tree/pt-fcn-handle.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "error.h"
 #include "ovl.h"
 #include "ov-fcn-handle.h"
diff --git a/libinterp/parse-tree/pt-funcall.cc b/libinterp/parse-tree/pt-funcall.cc
--- a/libinterp/parse-tree/pt-funcall.cc
+++ b/libinterp/parse-tree/pt-funcall.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ov-fcn.h"
 #include "pt-funcall.h"
 #include "pt-walk.h"
 
 // Function call objects.
diff --git a/libinterp/parse-tree/pt-id.cc b/libinterp/parse-tree/pt-id.cc
--- a/libinterp/parse-tree/pt-id.cc
+++ b/libinterp/parse-tree/pt-id.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "oct-lvalue.h"
 #include "pager.h"
 #include "pt-bp.h"
diff --git a/libinterp/parse-tree/pt-idx.cc b/libinterp/parse-tree/pt-idx.cc
--- a/libinterp/parse-tree/pt-idx.cc
+++ b/libinterp/parse-tree/pt-idx.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Cell.h"
 #include "error.h"
 #include "oct-map.h"
 #include "ovl.h"
 #include "oct-lvalue.h"
diff --git a/libinterp/parse-tree/pt-jump.cc b/libinterp/parse-tree/pt-jump.cc
--- a/libinterp/parse-tree/pt-jump.cc
+++ b/libinterp/parse-tree/pt-jump.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "pt-bp.h"
 #include "pt-jump.h"
 #include "pt-walk.h"
diff --git a/libinterp/parse-tree/pt-loop.cc b/libinterp/parse-tree/pt-loop.cc
--- a/libinterp/parse-tree/pt-loop.cc
+++ b/libinterp/parse-tree/pt-loop.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "quit.h"
 
 #include "error.h"
 #include "errwarn.h"
 #include "oct-map.h"
@@ -45,17 +45,17 @@ along with Octave; see the file COPYING.
 // While.
 
 tree_while_command::~tree_while_command (void)
 {
   delete expr;
   delete list;
   delete lead_comm;
   delete trail_comm;
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   delete compiled;
 #endif
 }
 
 tree_command *
 tree_while_command::dup (symbol_table::scope_id scope,
                          symbol_table::context_id context) const
 {
@@ -96,17 +96,17 @@ tree_do_until_command::accept (tree_walk
 tree_simple_for_command::~tree_simple_for_command (void)
 {
   delete lhs;
   delete expr;
   delete maxproc;
   delete list;
   delete lead_comm;
   delete trail_comm;
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   delete compiled;
 #endif
 }
 
 tree_command *
 tree_simple_for_command::dup (symbol_table::scope_id scope,
                               symbol_table::context_id context) const
 {
diff --git a/libinterp/parse-tree/pt-loop.h b/libinterp/parse-tree/pt-loop.h
--- a/libinterp/parse-tree/pt-loop.h
+++ b/libinterp/parse-tree/pt-loop.h
@@ -45,39 +45,39 @@ class jit_info;
 class
 tree_while_command : public tree_command
 {
 public:
 
   tree_while_command (int l = -1, int c = -1)
     : tree_command (l, c), expr (0), list (0), lead_comm (0),
       trail_comm (0)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
       , compiled (0)
 #endif
   { }
 
   tree_while_command (tree_expression *e,
                       octave_comment_list *lc = 0,
                       octave_comment_list *tc = 0,
                       int l = -1, int c = -1)
     : tree_command (l, c), expr (e), list (0), lead_comm (lc),
       trail_comm (tc)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
       , compiled (0)
 #endif
   { }
 
   tree_while_command (tree_expression *e, tree_statement_list *lst,
                       octave_comment_list *lc = 0,
                       octave_comment_list *tc = 0,
                       int l = -1, int c = -1)
     : tree_command (l, c), expr (e), list (lst), lead_comm (lc),
       trail_comm (tc)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
       , compiled (0)
 #endif
   { }
 
   ~tree_while_command (void);
 
   tree_expression *condition (void) { return expr; }
 
@@ -87,17 +87,17 @@ public:
 
   octave_comment_list *trailing_comment (void) { return trail_comm; }
 
   tree_command *dup (symbol_table::scope_id scope,
                      symbol_table::context_id context) const;
 
   void accept (tree_walker& tw);
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   // some functions use by tree_jit
   jit_info *get_info (void) const
   {
     return compiled;
   }
 
   void stash_info (jit_info *jinfo)
   {
@@ -116,17 +116,17 @@ protected:
   // Comment preceding WHILE token.
   octave_comment_list *lead_comm;
 
   // Comment preceding ENDWHILE token.
   octave_comment_list *trail_comm;
 
 private:
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   // compiled version of the loop
   jit_info *compiled;
 #endif
 
   // No copying!
 
   tree_while_command (const tree_while_command&);
 
@@ -176,32 +176,32 @@ private:
 class
 tree_simple_for_command : public tree_command
 {
 public:
 
   tree_simple_for_command (int l = -1, int c = -1)
     : tree_command (l, c), parallel (false), lhs (0), expr (0),
       maxproc (0), list (0), lead_comm (0), trail_comm (0)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
       , compiled (0)
 #endif
   { }
 
   tree_simple_for_command (bool parallel_arg, tree_expression *le,
                            tree_expression *re,
                            tree_expression *maxproc_arg,
                            tree_statement_list *lst,
                            octave_comment_list *lc = 0,
                            octave_comment_list *tc = 0,
                            int l = -1, int c = -1)
     : tree_command (l, c), parallel (parallel_arg), lhs (le),
       expr (re), maxproc (maxproc_arg), list (lst),
       lead_comm (lc), trail_comm (tc)
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
       , compiled (0)
 #endif
   { }
 
   ~tree_simple_for_command (void);
 
   bool in_parallel (void) { return parallel; }
 
@@ -217,17 +217,17 @@ public:
 
   octave_comment_list *trailing_comment (void) { return trail_comm; }
 
   tree_command *dup (symbol_table::scope_id scope,
                      symbol_table::context_id context) const;
 
   void accept (tree_walker& tw);
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
   // some functions use by tree_jit
   jit_info *get_info (void) const
   {
     return compiled;
   }
 
   void stash_info (jit_info *jinfo)
   {
diff --git a/libinterp/parse-tree/pt-mat.cc b/libinterp/parse-tree/pt-mat.cc
--- a/libinterp/parse-tree/pt-mat.cc
+++ b/libinterp/parse-tree/pt-mat.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "oct-locbuf.h"
 #include "quit.h"
 
diff --git a/libinterp/parse-tree/pt-misc.cc b/libinterp/parse-tree/pt-misc.cc
--- a/libinterp/parse-tree/pt-misc.cc
+++ b/libinterp/parse-tree/pt-misc.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Cell.h"
 
 #include "defun.h"
 #include "error.h"
 #include "ov.h"
diff --git a/libinterp/parse-tree/pt-pr-code.cc b/libinterp/parse-tree/pt-pr-code.cc
--- a/libinterp/parse-tree/pt-pr-code.cc
+++ b/libinterp/parse-tree/pt-pr-code.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 
 #include <iostream>
 
 #include "comment-list.h"
diff --git a/libinterp/parse-tree/pt-select.cc b/libinterp/parse-tree/pt-select.cc
--- a/libinterp/parse-tree/pt-select.cc
+++ b/libinterp/parse-tree/pt-select.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "ov.h"
 #include "pt-cmd.h"
 #include "pt-exp.h"
diff --git a/libinterp/parse-tree/pt-stmt.cc b/libinterp/parse-tree/pt-stmt.cc
--- a/libinterp/parse-tree/pt-stmt.cc
+++ b/libinterp/parse-tree/pt-stmt.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <typeinfo>
 
 #include "quit.h"
 
 #include "defun.h"
diff --git a/libinterp/parse-tree/pt-unop.cc b/libinterp/parse-tree/pt-unop.cc
--- a/libinterp/parse-tree/pt-unop.cc
+++ b/libinterp/parse-tree/pt-unop.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "error.h"
 #include "ovl.h"
 #include "oct-lvalue.h"
 #include "ov.h"
 #include "profiler.h"
diff --git a/libinterp/parse-tree/pt.cc b/libinterp/parse-tree/pt.cc
--- a/libinterp/parse-tree/pt.cc
+++ b/libinterp/parse-tree/pt.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <sstream>
 #include <string>
 
 #include "ov-fcn.h"
diff --git a/libinterp/parse-tree/token.cc b/libinterp/parse-tree/token.cc
--- a/libinterp/parse-tree/token.cc
+++ b/libinterp/parse-tree/token.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include "error.h"
 #include "ovl.h"
 #include "symtab.h"
diff --git a/libinterp/template-inst/Array-jit.cc b/libinterp/template-inst/Array-jit.cc
--- a/libinterp/template-inst/Array-jit.cc
+++ b/libinterp/template-inst/Array-jit.cc
@@ -17,35 +17,35 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Max Brister <max@2bass.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#ifdef HAVE_LLVM
+#if defined (HAVE_LLVM)
 
 #include "Array.h"
 #include "Array.cc"
 
 #include "jit-ir.h"
 
 // Prevent implicit instantiations on some systems (Windows, others?)
 // that can lead to duplicate definitions of static data members.
 
 extern template class OCTAVE_API Array<idx_vector>;
 extern template class OCTAVE_API Array<octave_idx_type>;
 
 NO_INSTANTIATE_ARRAY_SORT (jit_function);
 
 INSTANTIATE_ARRAY (jit_function, OCTINTERP_API);
 
-#ifdef Cell_h
+#if defined (Cell_h)
 #  error Must not include Cell.h in Array-jit.h
 #  error This causes problems on MSVC
 #endif
 
 #endif
diff --git a/libinterp/template-inst/Array-tc.cc b/libinterp/template-inst/Array-tc.cc
--- a/libinterp/template-inst/Array-tc.cc
+++ b/libinterp/template-inst/Array-tc.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Instantiate Arrays of octave_values.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array.h"
 #include "Array.cc"
 
 #include "ov.h"
 #include "ov-classdef.h"
diff --git a/libinterp/version.cc b/libinterp/version.cc
--- a/libinterp/version.cc
+++ b/libinterp/version.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "defaults.h"
 #include "version.h"
 
diff --git a/liboctave/array/Array-C.cc b/liboctave/array/Array-C.cc
--- a/liboctave/array/Array-C.cc
+++ b/liboctave/array/Array-C.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of Complex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 
diff --git a/liboctave/array/Array-b.cc b/liboctave/array/Array-b.cc
--- a/liboctave/array/Array-b.cc
+++ b/liboctave/array/Array-b.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of bool values.
 
 #include "Array.h"
 #include "Array.cc"
 
diff --git a/liboctave/array/Array-ch.cc b/liboctave/array/Array-ch.cc
--- a/liboctave/array/Array-ch.cc
+++ b/liboctave/array/Array-ch.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of char values.
 
 #include "Array.h"
 #include "Array.cc"
 
diff --git a/liboctave/array/Array-d.cc b/liboctave/array/Array-d.cc
--- a/liboctave/array/Array-d.cc
+++ b/liboctave/array/Array-d.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of double values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array-f.cc b/liboctave/array/Array-f.cc
--- a/liboctave/array/Array-f.cc
+++ b/liboctave/array/Array-f.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of float values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array-fC.cc b/liboctave/array/Array-fC.cc
--- a/liboctave/array/Array-fC.cc
+++ b/liboctave/array/Array-fC.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of FloatComplex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 
diff --git a/liboctave/array/Array-i.cc b/liboctave/array/Array-i.cc
--- a/liboctave/array/Array-i.cc
+++ b/liboctave/array/Array-i.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-inttypes.h"
 
 // Instantiate Arrays of integer values.
 
 #include "Array.h"
diff --git a/liboctave/array/Array-idx-vec.cc b/liboctave/array/Array-idx-vec.cc
--- a/liboctave/array/Array-idx-vec.cc
+++ b/liboctave/array/Array-idx-vec.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of integer values.
 
 #include "idx-vector.h"
 
 #include "Array.h"
diff --git a/liboctave/array/Array-s.cc b/liboctave/array/Array-s.cc
--- a/liboctave/array/Array-s.cc
+++ b/liboctave/array/Array-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Arrays of short int values.
 
 #include "Array.h"
 #include "Array.cc"
 
diff --git a/liboctave/array/Array-str.cc b/liboctave/array/Array-str.cc
--- a/liboctave/array/Array-str.cc
+++ b/liboctave/array/Array-str.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 // Instantiate Arrays of strings.
 
 #include "Array.h"
diff --git a/liboctave/array/Array-util.cc b/liboctave/array/Array-util.cc
--- a/liboctave/array/Array-util.cc
+++ b/liboctave/array/Array-util.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 #include "dim-vector.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
diff --git a/liboctave/array/Array-voidp.cc b/liboctave/array/Array-voidp.cc
--- a/liboctave/array/Array-voidp.cc
+++ b/liboctave/array/Array-voidp.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 // Instantiate Arrays of void *.
 
 #include "Array.h"
diff --git a/liboctave/array/Array.cc b/liboctave/array/Array.cc
--- a/liboctave/array/Array.cc
+++ b/liboctave/array/Array.cc
@@ -261,44 +261,44 @@ Array<T>::checkelem (const Array<octave_
   return elem (compute_index (ra_idx));
 }
 
 template <typename T>
 Array<T>
 Array<T>::column (octave_idx_type k) const
 {
   octave_idx_type r = dimensions(0);
-#ifdef OCTAVE_ENABLE_BOUNDS_CHECK
+#if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
   if (k < 0 || k > dimensions.numel (1))
     err_index_out_of_range (2, 2, k+1, dimensions.numel (1), dimensions);
 #endif
 
   return Array<T> (*this, dim_vector (r, 1), k*r, k*r + r);
 }
 
 template <typename T>
 Array<T>
 Array<T>::page (octave_idx_type k) const
 {
   octave_idx_type r = dimensions(0);
   octave_idx_type c = dimensions(1);
   octave_idx_type p = r*c;
-#ifdef OCTAVE_ENABLE_BOUNDS_CHECK
+#if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
   if (k < 0 || k > dimensions.numel (2))
     err_index_out_of_range (3, 3, k+1, dimensions.numel (2), dimensions);
 #endif
 
   return Array<T> (*this, dim_vector (r, c), k*p, k*p + p);
 }
 
 template <typename T>
 Array<T>
 Array<T>::linear_slice (octave_idx_type lo, octave_idx_type up) const
 {
-#ifdef OCTAVE_ENABLE_BOUNDS_CHECK
+#if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
   if (lo < 0)
     err_index_out_of_range (1, 1, lo+1, numel (), dimensions);
   if (up > numel ())
     err_index_out_of_range (1, 1, up, numel (), dimensions);
 #endif
   if (up < lo) up = lo;
   return Array<T> (*this, dim_vector (up - lo, 1), lo, up);
 }
diff --git a/liboctave/array/CColVector.cc b/liboctave/array/CColVector.cc
--- a/liboctave/array/CColVector.cc
+++ b/liboctave/array/CColVector.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/CDiagMatrix.cc b/liboctave/array/CDiagMatrix.cc
--- a/liboctave/array/CDiagMatrix.cc
+++ b/liboctave/array/CDiagMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -18,17 +18,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
diff --git a/liboctave/array/CNDArray.cc b/liboctave/array/CNDArray.cc
--- a/liboctave/array/CNDArray.cc
+++ b/liboctave/array/CNDArray.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
diff --git a/liboctave/array/CRowVector.cc b/liboctave/array/CRowVector.cc
--- a/liboctave/array/CRowVector.cc
+++ b/liboctave/array/CRowVector.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/CSparse.cc b/liboctave/array/CSparse.cc
--- a/liboctave/array/CSparse.cc
+++ b/liboctave/array/CSparse.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
@@ -1137,17 +1137,17 @@ SparseComplexMatrix::determinant (octave
 }
 
 ComplexDET
 SparseComplexMatrix::determinant (octave_idx_type& err, double& rcond,
                                   bool) const
 {
   ComplexDET retval;
 
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
 
   octave_idx_type nr = rows ();
   octave_idx_type nc = cols ();
 
   if (nr == 0 || nc == 0 || nr != nc)
     {
       retval = ComplexDET (1.0);
     }
@@ -5432,17 +5432,17 @@ SparseComplexMatrix::factorize (octave_i
                                 Matrix &Control, Matrix &Info,
                                 solve_singularity_handler sing_handler,
                                 bool calc_cond) const
 {
   // The return values
   void *Numeric = 0;
   err = 0;
 
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
 
   // Setup the control parameters
   Control = Matrix (UMFPACK_CONTROL, 1);
   double *control = Control.fortran_vec ();
   UMFPACK_ZNAME (defaults) (control);
 
   double tmp = octave_sparse_params::get_key ("spumoni");
   if (! xisnan (tmp))
@@ -5574,17 +5574,17 @@ SparseComplexMatrix::fsolve (MatrixType 
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -5709,45 +5709,45 @@ SparseComplexMatrix::fsolve (MatrixType 
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
               int status = 0;
               double *control = Control.fortran_vec ();
               double *info = Info.fortran_vec ();
               const octave_idx_type *Ap = cidx ();
               const octave_idx_type *Ai = ridx ();
               const Complex *Ax = data ();
-#ifdef UMFPACK_SEPARATE_SPLIT
+#if defined (UMFPACK_SEPARATE_SPLIT)
               const double *Bx = b.fortran_vec ();
               OCTAVE_LOCAL_BUFFER (double, Bz, b_nr);
               for (octave_idx_type i = 0; i < b_nr; i++)
                 Bz[i] = 0.;
 #else
               OCTAVE_LOCAL_BUFFER (Complex, Bz, b_nr);
 #endif
               retval.resize (b_nr, b_nc);
               Complex *Xx = retval.fortran_vec ();
 
               for (octave_idx_type j = 0, iidx = 0; j < b_nc; j++, iidx += b_nr)
                 {
-#ifdef UMFPACK_SEPARATE_SPLIT
+#if defined (UMFPACK_SEPARATE_SPLIT)
                   status = UMFPACK_ZNAME (solve) (UMFPACK_A, Ap,
                                                   Ai,
                                                   reinterpret_cast<const double *> (Ax),
                                                   0,
                                                   reinterpret_cast<double *> (&Xx[iidx]),
                                                   0,
                                                   &Bx[iidx], Bz, Numeric,
                                                   control, info);
@@ -5824,17 +5824,17 @@ SparseComplexMatrix::fsolve (MatrixType 
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -5975,33 +5975,33 @@ SparseComplexMatrix::fsolve (MatrixType 
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
               int status = 0;
               double *control = Control.fortran_vec ();
               double *info = Info.fortran_vec ();
               const octave_idx_type *Ap = cidx ();
               const octave_idx_type *Ai = ridx ();
               const Complex *Ax = data ();
 
-#ifdef UMFPACK_SEPARATE_SPLIT
+#if defined (UMFPACK_SEPARATE_SPLIT)
               OCTAVE_LOCAL_BUFFER (double, Bx, b_nr);
               OCTAVE_LOCAL_BUFFER (double, Bz, b_nr);
               for (octave_idx_type i = 0; i < b_nr; i++)
                 Bz[i] = 0.;
 #else
               OCTAVE_LOCAL_BUFFER (Complex, Bz, b_nr);
 #endif
 
@@ -6012,17 +6012,17 @@ SparseComplexMatrix::fsolve (MatrixType 
               retval = SparseComplexMatrix (b_nr, b_nc, x_nz);
 
               OCTAVE_LOCAL_BUFFER (Complex, Xx, b_nr);
 
               retval.xcidx (0) = 0;
               for (octave_idx_type j = 0; j < b_nc; j++)
                 {
 
-#ifdef UMFPACK_SEPARATE_SPLIT
+#if defined (UMFPACK_SEPARATE_SPLIT)
                   for (octave_idx_type i = 0; i < b_nr; i++)
                     Bx[i] = b.elem (i, j);
 
                   status = UMFPACK_ZNAME (solve) (UMFPACK_A, Ap,
                                                   Ai,
                                                   reinterpret_cast<const double *> (Ax),
                                                   0,
                                                   reinterpret_cast<double *> (Xx),
@@ -6122,17 +6122,17 @@ SparseComplexMatrix::fsolve (MatrixType 
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -6257,17 +6257,17 @@ SparseComplexMatrix::fsolve (MatrixType 
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
@@ -6351,17 +6351,17 @@ SparseComplexMatrix::fsolve (MatrixType 
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -6502,17 +6502,17 @@ SparseComplexMatrix::fsolve (MatrixType 
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
@@ -6669,17 +6669,17 @@ SparseComplexMatrix::solve (MatrixType &
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<ComplexMatrix, SparseComplexMatrix, Matrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
@@ -6734,17 +6734,17 @@ SparseComplexMatrix::solve (MatrixType &
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<SparseComplexMatrix, SparseComplexMatrix, SparseMatrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
@@ -6799,17 +6799,17 @@ SparseComplexMatrix::solve (MatrixType &
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<ComplexMatrix, SparseComplexMatrix, ComplexMatrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
@@ -6865,17 +6865,17 @@ SparseComplexMatrix::solve (MatrixType &
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<SparseComplexMatrix, SparseComplexMatrix,
                        SparseComplexMatrix> (*this, b, err);
 #endif
     }
 
   return retval;
diff --git a/liboctave/array/MArray-C.cc b/liboctave/array/MArray-C.cc
--- a/liboctave/array/MArray-C.cc
+++ b/liboctave/array/MArray-C.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate MArrays of Complex values.
 
 #include "oct-cmplx.h"
 
 #include "MArray.h"
diff --git a/liboctave/array/MArray-d.cc b/liboctave/array/MArray-d.cc
--- a/liboctave/array/MArray-d.cc
+++ b/liboctave/array/MArray-d.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate MArrays of double values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
diff --git a/liboctave/array/MArray-f.cc b/liboctave/array/MArray-f.cc
--- a/liboctave/array/MArray-f.cc
+++ b/liboctave/array/MArray-f.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate MArrays of float values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
diff --git a/liboctave/array/MArray-fC.cc b/liboctave/array/MArray-fC.cc
--- a/liboctave/array/MArray-fC.cc
+++ b/liboctave/array/MArray-fC.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate MArrays of FloatComplex values.
 
 #include "oct-cmplx.h"
 
 #include "MArray.h"
diff --git a/liboctave/array/MArray-i.cc b/liboctave/array/MArray-i.cc
--- a/liboctave/array/MArray-i.cc
+++ b/liboctave/array/MArray-i.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-inttypes.h"
 
 // Instantiate MArrays of int values.
 
 #include "MArray.h"
diff --git a/liboctave/array/MArray-s.cc b/liboctave/array/MArray-s.cc
--- a/liboctave/array/MArray-s.cc
+++ b/liboctave/array/MArray-s.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate MArrays of short int values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
diff --git a/liboctave/array/MSparse-C.cc b/liboctave/array/MSparse-C.cc
--- a/liboctave/array/MSparse-C.cc
+++ b/liboctave/array/MSparse-C.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-cmplx.h"
 
 #include "MSparse.h"
 
 template class OCTAVE_API MSparse<Complex>;
diff --git a/liboctave/array/MSparse-d.cc b/liboctave/array/MSparse-d.cc
--- a/liboctave/array/MSparse-d.cc
+++ b/liboctave/array/MSparse-d.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "MSparse.h"
 
 template class OCTAVE_API MSparse<double>;
 
 INSTANTIATE_SPARSE_FRIENDS (double, OCTAVE_API);
diff --git a/liboctave/array/MatrixType.cc b/liboctave/array/MatrixType.cc
--- a/liboctave/array/MatrixType.cc
+++ b/liboctave/array/MatrixType.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <vector>
 
 #include "MatrixType.h"
 #include "dMatrix.h"
 #include "fMatrix.h"
diff --git a/liboctave/array/PermMatrix.cc b/liboctave/array/PermMatrix.cc
--- a/liboctave/array/PermMatrix.cc
+++ b/liboctave/array/PermMatrix.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "PermMatrix.h"
 #include "idx-vector.h"
 #include "Array-util.h"
 #include "oct-locbuf.h"
 
diff --git a/liboctave/array/Range.cc b/liboctave/array/Range.cc
--- a/liboctave/array/Range.cc
+++ b/liboctave/array/Range.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <limits>
 
diff --git a/liboctave/array/Sparse-C.cc b/liboctave/array/Sparse-C.cc
--- a/liboctave/array/Sparse-C.cc
+++ b/liboctave/array/Sparse-C.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Sparse matrix of complex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/Sparse-b.cc b/liboctave/array/Sparse-b.cc
--- a/liboctave/array/Sparse-b.cc
+++ b/liboctave/array/Sparse-b.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Sparse matrix of double values.
 
 #include "Sparse.h"
 #include "Sparse.cc"
 
diff --git a/liboctave/array/Sparse-d.cc b/liboctave/array/Sparse-d.cc
--- a/liboctave/array/Sparse-d.cc
+++ b/liboctave/array/Sparse-d.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 // Instantiate Sparse matrix of double values.
 
 #include "lo-mappers.h"
 #include "Sparse.h"
 #include "Sparse.cc"
diff --git a/liboctave/array/boolMatrix.cc b/liboctave/array/boolMatrix.cc
--- a/liboctave/array/boolMatrix.cc
+++ b/liboctave/array/boolMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "boolMatrix.h"
 #include "lo-error.h"
diff --git a/liboctave/array/boolNDArray.cc b/liboctave/array/boolNDArray.cc
--- a/liboctave/array/boolNDArray.cc
+++ b/liboctave/array/boolNDArray.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Array-util.h"
 #include "boolNDArray.h"
 #include "CNDArray.h"
 #include "mx-base.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/boolSparse.cc b/liboctave/array/boolSparse.cc
--- a/liboctave/array/boolSparse.cc
+++ b/liboctave/array/boolSparse.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <vector>
 
 #include "quit.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/chMatrix.cc b/liboctave/array/chMatrix.cc
--- a/liboctave/array/chMatrix.cc
+++ b/liboctave/array/chMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <string>
 
diff --git a/liboctave/array/chNDArray.cc b/liboctave/array/chNDArray.cc
--- a/liboctave/array/chNDArray.cc
+++ b/liboctave/array/chNDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "Array-util.h"
 #include "chNDArray.h"
 #include "mx-base.h"
diff --git a/liboctave/array/dColVector.cc b/liboctave/array/dColVector.cc
--- a/liboctave/array/dColVector.cc
+++ b/liboctave/array/dColVector.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/dDiagMatrix.cc b/liboctave/array/dDiagMatrix.cc
--- a/liboctave/array/dDiagMatrix.cc
+++ b/liboctave/array/dDiagMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "mx-base.h"
diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -18,17 +18,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
diff --git a/liboctave/array/dNDArray.cc b/liboctave/array/dNDArray.cc
--- a/liboctave/array/dNDArray.cc
+++ b/liboctave/array/dNDArray.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
diff --git a/liboctave/array/dRowVector.cc b/liboctave/array/dRowVector.cc
--- a/liboctave/array/dRowVector.cc
+++ b/liboctave/array/dRowVector.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/dSparse.cc b/liboctave/array/dSparse.cc
--- a/liboctave/array/dSparse.cc
+++ b/liboctave/array/dSparse.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 #include <functional>
@@ -1223,17 +1223,17 @@ SparseMatrix::determinant (octave_idx_ty
   return determinant (info, rcond, 0);
 }
 
 DET
 SparseMatrix::determinant (octave_idx_type& err, double& rcond, bool) const
 {
   DET retval;
 
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
 
   octave_idx_type nr = rows ();
   octave_idx_type nc = cols ();
 
   if (nr == 0 || nc == 0 || nr != nc)
     {
       retval = DET (1.0);
     }
@@ -5627,17 +5627,17 @@ void *
 SparseMatrix::factorize (octave_idx_type& err, double &rcond, Matrix &Control,
                          Matrix &Info, solve_singularity_handler sing_handler,
                          bool calc_cond) const
 {
   // The return values
   void *Numeric = 0;
   err = 0;
 
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
 
   // Setup the control parameters
   Control = Matrix (UMFPACK_CONTROL, 1);
   double *control = Control.fortran_vec ();
   UMFPACK_DNAME (defaults) (control);
 
   double tmp = octave_sparse_params::get_key ("spumoni");
   if (! xisnan (tmp))
@@ -5766,17 +5766,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -5902,17 +5902,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric =
             factorize (err, rcond, Control, Info, sing_handler, calc_cond);
 
           if (err == 0)
             {
               const double *Bx = b.fortran_vec ();
               retval.resize (b.rows (), b.cols ());
@@ -5990,17 +5990,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -6140,17 +6140,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
@@ -6259,17 +6259,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -6394,17 +6394,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
@@ -6500,17 +6500,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
   else
     {
       // Print spparms("spumoni") info if requested
       volatile int typ = mattype.type ();
       mattype.info ();
 
       if (typ == MatrixType::Hermitian)
         {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
           cholmod_common Common;
           cholmod_common *cm = &Common;
 
           // Setup initial parameters
           CHOLMOD_NAME(start) (cm);
           cm->prefer_zomplex = false;
 
           double spu = octave_sparse_params::get_key ("spumoni");
@@ -6651,17 +6651,17 @@ SparseMatrix::fsolve (MatrixType &mattyp
 
           mattype.mark_as_unsymmetric ();
           typ = MatrixType::Full;
 #endif
         }
 
       if (typ == MatrixType::Full)
         {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
           Matrix Control, Info;
           void *Numeric = factorize (err, rcond, Control, Info,
                                      sing_handler, calc_cond);
 
           if (err == 0)
             {
               octave_idx_type b_nr = b.rows ();
               octave_idx_type b_nc = b.cols ();
@@ -6808,17 +6808,17 @@ SparseMatrix::solve (MatrixType &mattype
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   // Rectangular or one of the above solvers flags a singular matrix
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<Matrix, SparseMatrix, Matrix> (*this, b, err);
 #endif
     }
 
   return retval;
 }
@@ -6872,17 +6872,17 @@ SparseMatrix::solve (MatrixType &mattype
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<SparseMatrix, SparseMatrix, SparseMatrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
@@ -6937,17 +6937,17 @@ SparseMatrix::solve (MatrixType &mattype
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<ComplexMatrix, SparseMatrix, ComplexMatrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
@@ -7002,17 +7002,17 @@ SparseMatrix::solve (MatrixType &mattype
   else if (typ == MatrixType::Full || typ == MatrixType::Hermitian)
     retval = fsolve (mattype, b, err, rcond, sing_handler, true);
   else if (typ != MatrixType::Rectangular)
     (*current_liboctave_error_handler) ("unknown matrix type");
 
   if (singular_fallback && mattype.type (false) == MatrixType::Rectangular)
     {
       rcond = 1.;
-#ifdef USE_QRSOLVE
+#if defined (USE_QRSOLVE)
       retval = qrsolve (*this, b, err);
 #else
       retval = dmsolve<SparseComplexMatrix, SparseMatrix, SparseComplexMatrix>
                (*this, b, err);
 #endif
     }
 
   return retval;
diff --git a/liboctave/array/dim-vector.cc b/liboctave/array/dim-vector.cc
--- a/liboctave/array/dim-vector.cc
+++ b/liboctave/array/dim-vector.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "dim-vector.h"
 
 octave_idx_type *
diff --git a/liboctave/array/dim-vector.h b/liboctave/array/dim-vector.h
--- a/liboctave/array/dim-vector.h
+++ b/liboctave/array/dim-vector.h
@@ -233,26 +233,26 @@ public:
   //! @see dim_vector(octave_idx_type d0, octave_idx_type d1)
   DIM_VECTOR_CTOR (7)
 
 #undef ASSIGN_REP
 #undef DIM_VECTOR_CTOR
 
   octave_idx_type& elem (int i)
   {
-#ifdef OCTAVE_ENABLE_BOUNDS_CHECK
+#if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
     assert (i >= 0 && i < ndims ());
 #endif
     make_unique ();
     return rep[i];
   }
 
   octave_idx_type elem (int i) const
   {
-#ifdef OCTAVE_ENABLE_BOUNDS_CHECK
+#if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
     assert (i >= 0 && i < ndims ());
 #endif
     return rep[i];
   }
 
   void chop_trailing_singletons (void)
   {
     int l = ndims ();
diff --git a/liboctave/array/fCColVector.cc b/liboctave/array/fCColVector.cc
--- a/liboctave/array/fCColVector.cc
+++ b/liboctave/array/fCColVector.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/fCDiagMatrix.cc b/liboctave/array/fCDiagMatrix.cc
--- a/liboctave/array/fCDiagMatrix.cc
+++ b/liboctave/array/fCDiagMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -18,17 +18,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
diff --git a/liboctave/array/fCNDArray.cc b/liboctave/array/fCNDArray.cc
--- a/liboctave/array/fCNDArray.cc
+++ b/liboctave/array/fCNDArray.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
diff --git a/liboctave/array/fCRowVector.cc b/liboctave/array/fCRowVector.cc
--- a/liboctave/array/fCRowVector.cc
+++ b/liboctave/array/fCRowVector.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/fColVector.cc b/liboctave/array/fColVector.cc
--- a/liboctave/array/fColVector.cc
+++ b/liboctave/array/fColVector.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/fDiagMatrix.cc b/liboctave/array/fDiagMatrix.cc
--- a/liboctave/array/fDiagMatrix.cc
+++ b/liboctave/array/fDiagMatrix.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "mx-base.h"
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -18,17 +18,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
diff --git a/liboctave/array/fNDArray.cc b/liboctave/array/fNDArray.cc
--- a/liboctave/array/fNDArray.cc
+++ b/liboctave/array/fNDArray.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
diff --git a/liboctave/array/fRowVector.cc b/liboctave/array/fRowVector.cc
--- a/liboctave/array/fRowVector.cc
+++ b/liboctave/array/fRowVector.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
diff --git a/liboctave/array/idx-vector.cc b/liboctave/array/idx-vector.cc
--- a/liboctave/array/idx-vector.cc
+++ b/liboctave/array/idx-vector.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <iostream>
 
 #include "idx-vector.h"
diff --git a/liboctave/array/int16NDArray.cc b/liboctave/array/int16NDArray.cc
--- a/liboctave/array/int16NDArray.cc
+++ b/liboctave/array/int16NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "int16NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/int32NDArray.cc b/liboctave/array/int32NDArray.cc
--- a/liboctave/array/int32NDArray.cc
+++ b/liboctave/array/int32NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "int32NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/int64NDArray.cc b/liboctave/array/int64NDArray.cc
--- a/liboctave/array/int64NDArray.cc
+++ b/liboctave/array/int64NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "int64NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/int8NDArray.cc b/liboctave/array/int8NDArray.cc
--- a/liboctave/array/int8NDArray.cc
+++ b/liboctave/array/int8NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "int8NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/uint16NDArray.cc b/liboctave/array/uint16NDArray.cc
--- a/liboctave/array/uint16NDArray.cc
+++ b/liboctave/array/uint16NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "uint16NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/uint32NDArray.cc b/liboctave/array/uint32NDArray.cc
--- a/liboctave/array/uint32NDArray.cc
+++ b/liboctave/array/uint32NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "uint32NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/uint64NDArray.cc b/liboctave/array/uint64NDArray.cc
--- a/liboctave/array/uint64NDArray.cc
+++ b/liboctave/array/uint64NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "uint64NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/array/uint8NDArray.cc b/liboctave/array/uint8NDArray.cc
--- a/liboctave/array/uint8NDArray.cc
+++ b/liboctave/array/uint8NDArray.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "uint8NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
diff --git a/liboctave/cruft/Faddeeva/Faddeeva.cc b/liboctave/cruft/Faddeeva/Faddeeva.cc
--- a/liboctave/cruft/Faddeeva/Faddeeva.cc
+++ b/liboctave/cruft/Faddeeva/Faddeeva.cc
@@ -143,24 +143,24 @@
 */
 
 /////////////////////////////////////////////////////////////////////////
 /* If this file is compiled as a part of a larger project,
    support using an autoconf-style config.h header file
    (with various "HAVE_*" #defines to indicate features)
    if HAVE_CONFIG_H is #defined (in GNU autotools style). */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 /////////////////////////////////////////////////////////////////////////
 // macros to allow us to use either C++ or C (with C99 features)
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 
 #  include "lo-ieee.h"
 
 #  include "Faddeeva.hh"
 
 #  include <cfloat>
 #  include <cmath>
 #  include <limits>
@@ -208,17 +208,17 @@ static inline double my_copysign(double 
 #  endif
 
 // If we are using the gnulib <cmath> (e.g. in the GNU Octave sources),
 // gnulib generates a link warning if we use ::floor instead of gnulib::floor.
 // This warning is completely innocuous because the only difference between
 // gnulib::floor and the system ::floor (and only on ancient OSF systems)
 // has to do with floor(-0), which doesn't occur in the usage below, but
 // the Octave developers prefer that we silence the warning.
-#  ifdef GNULIB_NAMESPACE
+#  if defined (GNULIB_NAMESPACE)
 #    define floor GNULIB_NAMESPACE::floor
 #    define log GNULIB_NAMESPACE::log
 #  endif
 
 #else // !__cplusplus, i.e. pure C (requires C99 features)
 
 #  include "Faddeeva.h"
 
@@ -242,20 +242,20 @@ typedef double complex cmplx;
 /* __builtin_complex was introduced in gcc 4.7, but the C11 CMPLX macro
    may not be defined unless we are using a recent (2012) version of
    glibc and compile with -std=c11... note that icc lies about being
    gcc and probably doesn't have this builtin(?), so exclude icc explicitly */
 #  if !defined(CMPLX) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 7)) && !(defined(__ICC) || defined(__INTEL_COMPILER))
 #    define CMPLX(a,b) __builtin_complex((double) (a), (double) (b))
 #  endif
 
-#  ifdef CMPLX // C11
+#  if defined (CMPLX) // C11
 #    define C(a,b) CMPLX(a,b)
 #    define Inf INFINITY // C99 infinity
-#    ifdef NAN // GNU libc extension
+#    if defined (NAN) // GNU libc extension
 #      define NaN NAN
 #    else
 #      define NaN (0./0.) // NaN
 #    endif
 #  else
 #    define C(a,b) ((a) + I*(b))
 #    define Inf (1./0.) 
 #    define NaN (0./0.) 
@@ -1889,19 +1889,19 @@ double FADDEEVA(w_im)(double x)
     }
     return -w_im_y100(100/(1-x), -x);
   }
 }
 
 /////////////////////////////////////////////////////////////////////////
 
 // Compile with -DTEST_FADDEEVA to compile a little test program
-#ifdef TEST_FADDEEVA
+#if defined (TEST_FADDEEVA)
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 #  include <cstdio>
 #else
 #  include <stdio.h>
 #endif
 
 // compute relative error |b-a|/|a|, handling case of NaN and Inf,
 static double relerr(double a, double b) {
   if (isnan(a) || isnan(b) || isinf(a) || isinf(b)) {
diff --git a/liboctave/cruft/misc/blaswrap.c b/liboctave/cruft/misc/blaswrap.c
--- a/liboctave/cruft/misc/blaswrap.c
+++ b/liboctave/cruft/misc/blaswrap.c
@@ -33,31 +33,31 @@ architecture.
 Newer gfortran compoilers no longer default to the F2C calling
 convention.  These wrappers map the F2C conformant functions in
 libBLAS and libLAPACK to the native gfortran calling convention, so
 that the libraries can be used with software built for x86_64
 architecture.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h" /* USE_BLASWRAP ? */
 #endif
 
-#ifdef USE_BLASWRAP
+#if defined (USE_BLASWRAP)
 
 /*
  * vecLib is an Apple framework (collection of libraries) containing
  * libBLAS and libLAPACK.  The fortran stubs in these libraries are
  * (mostly, but not completely) in the F2C calling convention.
  * We access the libraries via the vecLib framework to make sure we
  * get the Apple versions, rather than some other blas/lapack with the
  * same name.
  */
-#ifndef VECLIB_FILE
+#if ! defined (VECLIB_FILE)
 #  define VECLIB_FILE "/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib"
 #endif
 
 /*
  * Since this is a wrapper for fortran functions,
  * we do not have prototypes for them.
  */
 #pragma GCC diagnostic ignored "-Wmissing-prototypes"
diff --git a/liboctave/cruft/misc/cquit.c b/liboctave/cruft/misc/cquit.c
--- a/liboctave/cruft/misc/cquit.c
+++ b/liboctave/cruft/misc/cquit.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <signal.h>
 #include <string.h>
 
 #include "quit.h"
 
diff --git a/liboctave/cruft/misc/f77-extern.cc b/liboctave/cruft/misc/f77-extern.cc
--- a/liboctave/cruft/misc/f77-extern.cc
+++ b/liboctave/cruft/misc/f77-extern.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 // This whole file is a kluge just to avoid unresolved symbol errors
 // when creating shared versions of libcruft.
diff --git a/liboctave/cruft/misc/f77-fcn.c b/liboctave/cruft/misc/f77-fcn.c
--- a/liboctave/cruft/misc/f77-fcn.c
+++ b/liboctave/cruft/misc/f77-fcn.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <stdlib.h>
 #include <string.h>
 
 #include "f77-fcn.h"
 #include "quit.h"
diff --git a/liboctave/cruft/misc/f77-fcn.h b/liboctave/cruft/misc/f77-fcn.h
--- a/liboctave/cruft/misc/f77-fcn.h
+++ b/liboctave/cruft/misc/f77-fcn.h
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_f77_fcn_h)
 #define octave_f77_fcn_h 1
 
 #include "octave-config.h"
 
 #include "quit.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 /* Hack to stringize macro results. */
 #define xSTRINGIZE(x) #x
 #define STRINGIZE(x) xSTRINGIZE(x)
 
 /* How to print an error for the F77_XFCN macro. */
@@ -185,17 +185,17 @@ typedef union
     unsigned off : 6;
     unsigned len : 26;
     unsigned add : 32;
   } mask;
 } octave_cray_descriptor;
 
 typedef void *octave_cray_ftn_ch_dsc;
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 #  define OCTAVE_F77_FCN_INLINE inline
 #else
 #  define OCTAVE_F77_FCN_INLINE
 #endif
 
 static OCTAVE_F77_FCN_INLINE octave_cray_ftn_ch_dsc
 octave_make_cray_ftn_ch_dsc (char *ptr_arg, unsigned long len_arg)
 {
@@ -209,17 +209,17 @@ static OCTAVE_F77_FCN_INLINE octave_cray
 octave_make_cray_const_ftn_ch_dsc (const char *ptr_arg, unsigned long len_arg)
 {
   octave_cray_descriptor desc;
   desc.const_ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_ftn_ch_dsc *) &desc);
 }
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 #  undef OCTAVE_F77_FCN_INLINE
 #endif
 
 #elif defined (F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION)
 
 /* Use these macros to pass character strings from C to Fortran.  */
 #define F77_CHAR_ARG(x) x, strlen (x)
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
@@ -285,13 +285,13 @@ octave_make_cray_const_ftn_ch_dsc (const
  cs[F77_CHAR_ARG_LEN_USE(s, len)] = '\0'
 
 
 OCTAVE_NORETURN OCTAVE_API extern
 F77_RET_T
 F77_FUNC (xstopx, XSTOPX) (F77_CONST_CHAR_ARG_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/cruft/misc/lo-error.c b/liboctave/cruft/misc/lo-error.c
--- a/liboctave/cruft/misc/lo-error.c
+++ b/liboctave/cruft/misc/lo-error.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
 
 #include "lo-error.h"
diff --git a/liboctave/cruft/misc/lo-error.h b/liboctave/cruft/misc/lo-error.h
--- a/liboctave/cruft/misc/lo-error.h
+++ b/liboctave/cruft/misc/lo-error.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_lo_error_h)
 #define octave_lo_error_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 OCTAVE_NORETURN extern void
 liboctave_fatal (const char *fmt, ...);
 
 OCTAVE_NORETURN extern
 void liboctave_fatal_with_id (const char *id, const char *fmt, ...);
@@ -66,13 +66,13 @@ OCTAVE_API extern void
 set_liboctave_error_with_id_handler (OCTAVE_NORETURN liboctave_error_with_id_handler f);
 
 OCTAVE_API extern void
 set_liboctave_warning_handler (liboctave_warning_handler f);
 
 OCTAVE_API extern void
 set_liboctave_warning_with_id_handler (liboctave_warning_with_id_handler f);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/cruft/misc/quit.cc b/liboctave/cruft/misc/quit.cc
--- a/liboctave/cruft/misc/quit.cc
+++ b/liboctave/cruft/misc/quit.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <new>
 
diff --git a/liboctave/cruft/misc/quit.h b/liboctave/cruft/misc/quit.h
--- a/liboctave/cruft/misc/quit.h
+++ b/liboctave/cruft/misc/quit.h
@@ -25,17 +25,17 @@ along with Octave; see the file COPYING.
 
 #include "octave-config.h"
 
 #include <stdio.h>
 
 #include <signal.h>
 #include <setjmp.h>
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 #  include <new>
 #  include <string>
 extern "C" {
 #endif
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #define WIN32_LEAN_AND_MEAN 1
@@ -69,17 +69,17 @@ OCTAVE_API extern void octave_save_curre
 OCTAVE_API extern void octave_restore_current_context (void *);
 
 OCTAVE_NORETURN OCTAVE_API extern void octave_jump_to_enclosing_context (void);
 
 OCTAVE_API extern void octave_save_signal_mask (void);
 
 OCTAVE_API extern void octave_restore_signal_mask (void);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 class
 octave_execution_exception
 {
 public:
 
   octave_execution_exception (void) : m_stack_trace () { }
 
   octave_execution_exception (const octave_execution_exception& x)
@@ -146,17 +146,17 @@ OCTAVE_API extern void octave_handle_sig
 OCTAVE_NORETURN OCTAVE_API extern void octave_throw_interrupt_exception (void);
 
 OCTAVE_NORETURN OCTAVE_API extern void octave_throw_execution_exception (void);
 
 OCTAVE_NORETURN OCTAVE_API extern void octave_throw_bad_alloc (void);
 
 OCTAVE_API extern void octave_rethrow_exception (void);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 inline void octave_quit (void)
 {
   if (octave_signal_caught)
     {
       octave_signal_caught = 0;
       octave_handle_signal ();
     }
 };
@@ -217,17 +217,17 @@ inline void octave_quit (void)
 
 #define END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE \
           octave_interrupt_immediately--; \
           octave_restore_current_context (saved_context); \
         } \
     } \
   while (0)
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 
 #define BEGIN_INTERRUPT_WITH_EXCEPTIONS \
   sig_atomic_t saved_octave_interrupt_immediately = octave_interrupt_immediately; \
  \
   try \
     { \
       octave_interrupt_immediately = 0;
 
@@ -249,17 +249,17 @@ inline void octave_quit (void)
       octave_interrupt_immediately = saved_octave_interrupt_immediately; \
       octave_exception_state = octave_alloc_exception; \
       octave_jump_to_enclosing_context (); \
     } \
  \
   octave_interrupt_immediately = saved_octave_interrupt_immediately
 #endif
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 
 /* These should only be declared for C++ code, and should also be
    outside of any extern "C" block.  */
 
 extern OCTAVE_API void (*octave_signal_hook) (void);
 extern OCTAVE_API void (*octave_interrupt_hook) (void);
 extern OCTAVE_API void (*octave_bad_alloc_hook) (void);
diff --git a/liboctave/liboctave-build-info.in.cc b/liboctave/liboctave-build-info.in.cc
--- a/liboctave/liboctave-build-info.in.cc
+++ b/liboctave/liboctave-build-info.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "liboctave-build-info.h"
 
 std::string
 liboctave_hg_id (void)
 {
diff --git a/liboctave/numeric/CollocWt.cc b/liboctave/numeric/CollocWt.cc
--- a/liboctave/numeric/CollocWt.cc
+++ b/liboctave/numeric/CollocWt.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include <cfloat>
 
 #include "CollocWt.h"
diff --git a/liboctave/numeric/DASPK.cc b/liboctave/numeric/DASPK.cc
--- a/liboctave/numeric/DASPK.cc
+++ b/liboctave/numeric/DASPK.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASPK.h"
diff --git a/liboctave/numeric/DASRT.cc b/liboctave/numeric/DASRT.cc
--- a/liboctave/numeric/DASRT.cc
+++ b/liboctave/numeric/DASRT.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASRT.h"
diff --git a/liboctave/numeric/DASSL.cc b/liboctave/numeric/DASSL.cc
--- a/liboctave/numeric/DASSL.cc
+++ b/liboctave/numeric/DASSL.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASSL.h"
diff --git a/liboctave/numeric/EIG.cc b/liboctave/numeric/EIG.cc
--- a/liboctave/numeric/EIG.cc
+++ b/liboctave/numeric/EIG.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "EIG.h"
 #include "dColVector.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
diff --git a/liboctave/numeric/LSODE.cc b/liboctave/numeric/LSODE.cc
--- a/liboctave/numeric/LSODE.cc
+++ b/liboctave/numeric/LSODE.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "LSODE.h"
diff --git a/liboctave/numeric/ODES.cc b/liboctave/numeric/ODES.cc
--- a/liboctave/numeric/ODES.cc
+++ b/liboctave/numeric/ODES.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "ODES.h"
 #include "lo-error.h"
 
 void
 ODES::initialize (const ColumnVector& xx, double tt)
diff --git a/liboctave/numeric/Quad.cc b/liboctave/numeric/Quad.cc
--- a/liboctave/numeric/Quad.cc
+++ b/liboctave/numeric/Quad.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Quad.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "quit.h"
 #include "sun-utils.h"
diff --git a/liboctave/numeric/aepbalance.cc b/liboctave/numeric/aepbalance.cc
--- a/liboctave/numeric/aepbalance.cc
+++ b/liboctave/numeric/aepbalance.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "aepbalance.h"
diff --git a/liboctave/numeric/chol.cc b/liboctave/numeric/chol.cc
--- a/liboctave/numeric/chol.cc
+++ b/liboctave/numeric/chol.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <vector>
 
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "CRowVector.h"
@@ -65,17 +65,17 @@ extern "C"
 
   F77_RET_T
   F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, double*,
                              const octave_idx_type&, const double&,
                              double&, double*, octave_idx_type*,
                              octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
   F77_RET_T
   F77_FUNC (dch1up, DCH1UP) (const octave_idx_type&, double*,
                              const octave_idx_type&, double*, double*);
 
   F77_RET_T
   F77_FUNC (dch1dn, DCH1DN) (const octave_idx_type&, double*,
                              const octave_idx_type&, double*, double*,
@@ -111,17 +111,17 @@ extern "C"
 
   F77_RET_T
   F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, float*,
                              const octave_idx_type&, const float&,
                              float&, float*, octave_idx_type*,
                              octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
   F77_RET_T
   F77_FUNC (sch1up, SCH1UP) (const octave_idx_type&, float*,
                              const octave_idx_type&, float*, float*);
 
   F77_RET_T
   F77_FUNC (sch1dn, SCH1DN) (const octave_idx_type&, float*,
                              const octave_idx_type&, float*, float*,
@@ -155,17 +155,17 @@ extern "C"
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, Complex*,
                              const octave_idx_type&, const double&,
                              double&, Complex*, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
   F77_RET_T
   F77_FUNC (zch1up, ZCH1UP) (const octave_idx_type&, Complex*,
                              const octave_idx_type&, Complex*, double*);
 
   F77_RET_T
   F77_FUNC (zch1dn, ZCH1DN) (const octave_idx_type&, Complex*,
                              const octave_idx_type&, Complex*, double*,
@@ -199,17 +199,17 @@ extern "C"
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, const float&,
                              float&, FloatComplex*, float*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
   F77_RET_T
   F77_FUNC (cch1up, CCH1UP) (const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*, float*);
 
   F77_RET_T
   F77_FUNC (cch1dn, CCH1DN) (const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*,
@@ -830,17 +830,17 @@ chol<FloatMatrix>::init (const FloatMatr
 
       if (spocon_info != 0)
         info = -1;
     }
 
   return info;
 }
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
 template <>
 void
 chol<FloatMatrix>::update (const FloatColumnVector& u)
 {
   octave_idx_type n = chol_mat.rows ();
 
   if (u.numel () != n)
@@ -998,17 +998,17 @@ chol<ComplexMatrix>::init (const Complex
 
       if (zpocon_info != 0)
         info = -1;
     }
 
   return info;
 }
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
 template <>
 void
 chol<ComplexMatrix>::update (const ComplexColumnVector& u)
 {
   octave_idx_type n = chol_mat.rows ();
 
   if (u.numel () != n)
@@ -1169,17 +1169,17 @@ chol<FloatComplexMatrix>::init (const Fl
 
       if (cpocon_info != 0)
         info = -1;
     }
 
   return info;
 }
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
 template <>
 void
 chol<FloatComplexMatrix>::update (const FloatComplexColumnVector& u)
 {
   octave_idx_type n = chol_mat.rows ();
 
   if (u.numel () != n)
diff --git a/liboctave/numeric/eigs-base.cc b/liboctave/numeric/eigs-base.cc
--- a/liboctave/numeric/eigs-base.cc
+++ b/liboctave/numeric/eigs-base.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cmath>
 #include <vector>
 #include <iostream>
 
@@ -38,17 +38,17 @@ along with Octave; see the file COPYING.
 #include "f77-fcn.h"
 #include "mx-ops.h"
 #include "oct-locbuf.h"
 #include "oct-rand.h"
 #include "quit.h"
 #include "sparse-chol.h"
 #include "sparse-lu.h"
 
-#ifdef HAVE_ARPACK
+#if defined (HAVE_ARPACK)
 
 // Arpack and blas fortran functions we call.
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dsaupd, DSAUPD) (octave_idx_type&,
                              F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&,
diff --git a/liboctave/numeric/fEIG.cc b/liboctave/numeric/fEIG.cc
--- a/liboctave/numeric/fEIG.cc
+++ b/liboctave/numeric/fEIG.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "fEIG.h"
 #include "fColVector.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
diff --git a/liboctave/numeric/gepbalance.cc b/liboctave/numeric/gepbalance.cc
--- a/liboctave/numeric/gepbalance.cc
+++ b/liboctave/numeric/gepbalance.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <string>
 #include <vector>
 
 #include "Array-util.h"
 #include "CMatrix.h"
diff --git a/liboctave/numeric/hess.cc b/liboctave/numeric/hess.cc
--- a/liboctave/numeric/hess.cc
+++ b/liboctave/numeric/hess.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 
 #include "CMatrix.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 #include "fCMatrix.h"
diff --git a/liboctave/numeric/lo-mappers.cc b/liboctave/numeric/lo-mappers.cc
--- a/liboctave/numeric/lo-mappers.cc
+++ b/liboctave/numeric/lo-mappers.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -19,17 +19,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "Range.h"
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "dRowVector.h"
 #include "dMatrix.h"
diff --git a/liboctave/numeric/lu.cc b/liboctave/numeric/lu.cc
--- a/liboctave/numeric/lu.cc
+++ b/liboctave/numeric/lu.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "dColVector.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
@@ -40,17 +40,17 @@ along with Octave; see the file COPYING.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&,
                              double*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
   F77_FUNC (dlu1up, DLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              double *, const octave_idx_type&,
                              double *, const octave_idx_type&,
                              double *, double *);
 
   F77_RET_T
   F77_FUNC (dlup1up, DLUP1UP) (const octave_idx_type&, const octave_idx_type&,
@@ -60,17 +60,17 @@ extern "C"
                                const double *, double *);
 #endif
 
   F77_RET_T
   F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&, const octave_idx_type&,
                              float*, const octave_idx_type&, octave_idx_type*,
                              octave_idx_type&);
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
   F77_FUNC (slu1up, SLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              float *, const octave_idx_type&,
                              float *, const octave_idx_type&,
                              float *, float *);
 
   F77_RET_T
   F77_FUNC (slup1up, SLUP1UP) (const octave_idx_type&, const octave_idx_type&,
@@ -80,17 +80,17 @@ extern "C"
                                const float *, float *);
 #endif
 
   F77_RET_T
   F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&,
                              Complex*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
   F77_FUNC (zlu1up, ZLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              Complex *, const octave_idx_type&,
                              Complex *, const octave_idx_type&,
                              Complex *, Complex *);
 
   F77_RET_T
   F77_FUNC (zlup1up, ZLUP1UP) (const octave_idx_type&, const octave_idx_type&,
@@ -100,17 +100,17 @@ extern "C"
                                const Complex *, Complex *);
 #endif
 
   F77_RET_T
   F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&,
                              FloatComplex*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
   F77_RET_T
   F77_FUNC (clu1up, CLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              FloatComplex *, const octave_idx_type&,
                              FloatComplex *, const octave_idx_type&,
                              FloatComplex *, FloatComplex *);
 
   F77_RET_T
   F77_FUNC (clup1up, CLUP1UP) (const octave_idx_type&, const octave_idx_type&,
@@ -343,17 +343,17 @@ lu<Matrix>::lu (const Matrix& a)
   octave_idx_type info = 0;
 
   F77_XFCN (dgetrf, DGETRF, (a_nr, a_nc, tmp_data, a_nr, pipvt, info));
 
   for (octave_idx_type i = 0; i < mn; i++)
     pipvt[i] -= 1;
 }
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
 
 template <>
 void
 lu<Matrix>::update (const ColumnVector& u, const ColumnVector& v)
 {
   if (packed ())
     unpack ();
 
@@ -477,17 +477,17 @@ lu<FloatMatrix>::lu (const FloatMatrix& 
   octave_idx_type info = 0;
 
   F77_XFCN (sgetrf, SGETRF, (a_nr, a_nc, tmp_data, a_nr, pipvt, info));
 
   for (octave_idx_type i = 0; i < mn; i++)
     pipvt[i] -= 1;
 }
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
 
 template <>
 void
 lu<FloatMatrix>::update (const FloatColumnVector& u, const FloatColumnVector& v)
 {
   if (packed ())
     unpack ();
 
@@ -613,17 +613,17 @@ lu<ComplexMatrix>::lu (const ComplexMatr
   octave_idx_type info = 0;
 
   F77_XFCN (zgetrf, ZGETRF, (a_nr, a_nc, tmp_data, a_nr, pipvt, info));
 
   for (octave_idx_type i = 0; i < mn; i++)
     pipvt[i] -= 1;
 }
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
 
 template <>
 void
 lu<ComplexMatrix>::update (const ComplexColumnVector& u,
                            const ComplexColumnVector& v)
 {
   if (packed ())
     unpack ();
@@ -749,17 +749,17 @@ lu<FloatComplexMatrix>::lu (const FloatC
   octave_idx_type info = 0;
 
   F77_XFCN (cgetrf, CGETRF, (a_nr, a_nc, tmp_data, a_nr, pipvt, info));
 
   for (octave_idx_type i = 0; i < mn; i++)
     pipvt[i] -= 1;
 }
 
-#ifdef HAVE_QRUPDATE_LUU
+#if defined (HAVE_QRUPDATE_LUU)
 
 template <>
 void
 lu<FloatComplexMatrix>::update (const FloatComplexColumnVector& u,
                              const FloatComplexColumnVector& v)
 {
   if (packed ())
     unpack ();
diff --git a/liboctave/numeric/oct-convn.cc b/liboctave/numeric/oct-convn.cc
--- a/liboctave/numeric/oct-convn.cc
+++ b/liboctave/numeric/oct-convn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <algorithm>
 
 #include "f77-fcn.h"
 
diff --git a/liboctave/numeric/oct-fftw.cc b/liboctave/numeric/oct-fftw.cc
--- a/liboctave/numeric/oct-fftw.cc
+++ b/liboctave/numeric/oct-fftw.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 
 #include <iostream>
 #include <string>
 #include <vector>
 
diff --git a/liboctave/numeric/oct-norm.cc b/liboctave/numeric/oct-norm.cc
--- a/liboctave/numeric/oct-norm.cc
+++ b/liboctave/numeric/oct-norm.cc
@@ -17,17 +17,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // author: Jaroslav Hajek <highegg@gmail.com>
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cfloat>
 #include <cmath>
 
 #include <iostream>
diff --git a/liboctave/numeric/oct-rand.cc b/liboctave/numeric/oct-rand.cc
--- a/liboctave/numeric/oct-rand.cc
+++ b/liboctave/numeric/oct-rand.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <map>
 #include <vector>
 
 #include <stdint.h>
 
diff --git a/liboctave/numeric/oct-spparms.cc b/liboctave/numeric/oct-spparms.cc
--- a/liboctave/numeric/oct-spparms.cc
+++ b/liboctave/numeric/oct-spparms.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 
 #include "oct-spparms.h"
 #include "singleton-cleanup.h"
diff --git a/liboctave/numeric/qr.cc b/liboctave/numeric/qr.cc
--- a/liboctave/numeric/qr.cc
+++ b/liboctave/numeric/qr.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "CRowVector.h"
 #include "dColVector.h"
 #include "dMatrix.h"
@@ -220,17 +220,17 @@ extern "C"
 
   F77_RET_T
   F77_FUNC (cungqr, CUNGQR) (const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*,
                              FloatComplex*, const octave_idx_type&,
                              octave_idx_type&);
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
   F77_RET_T
   F77_FUNC (cqr1up, CQR1UP) (const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*,
                              FloatComplex*, FloatComplex*, float*);
 
@@ -1046,17 +1046,17 @@ qr<FloatMatrix>::init (const FloatMatrix
       OCTAVE_LOCAL_BUFFER (float, work, lwork);
       F77_XFCN (sgeqrf, SGEQRF, (m, n, afact.fortran_vec (), m, tau,
                                  work, lwork, info));
     }
 
   form (n, afact, tau, qr_type);
 }
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
 template <>
 void
 qr<FloatMatrix>::update (const FloatColumnVector& u, const FloatColumnVector& v)
 {
   octave_idx_type m = q.rows ();
   octave_idx_type n = r.columns ();
   octave_idx_type k = q.columns ();
@@ -1772,17 +1772,17 @@ qr<FloatComplexMatrix>::init (const Floa
       OCTAVE_LOCAL_BUFFER (FloatComplex, work, lwork);
       F77_XFCN (cgeqrf, CGEQRF, (m, n, afact.fortran_vec (), m, tau,
                                  work, lwork, info));
     }
 
   form (n, afact, tau, qr_type);
 }
 
-#ifdef HAVE_QRUPDATE
+#if defined (HAVE_QRUPDATE)
 
 template <>
 void
 qr<FloatComplexMatrix>::update (const FloatComplexColumnVector& u, const FloatComplexColumnVector& v)
 {
   octave_idx_type m = q.rows ();
   octave_idx_type n = r.columns ();
   octave_idx_type k = q.columns ();
diff --git a/liboctave/numeric/qrp.cc b/liboctave/numeric/qrp.cc
--- a/liboctave/numeric/qrp.cc
+++ b/liboctave/numeric/qrp.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include "CMatrix.h"
 #include "dMatrix.h"
 #include "dRowVector.h"
diff --git a/liboctave/numeric/randmtzig.cc b/liboctave/numeric/randmtzig.cc
--- a/liboctave/numeric/randmtzig.cc
+++ b/liboctave/numeric/randmtzig.cc
@@ -154,17 +154,17 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdio>
 #include <ctime>
 
-#ifdef HAVE_GETTIMEOFDAY
+#if defined (HAVE_GETTIMEOFDAY)
 #  include <sys/time.h>
 #endif
 
 #include "lo-math.h"
 #include "randmtzig.h"
 
 /* FIXME: may want to suppress X86 if sizeof(long) > 4 */
 #if ! defined (USE_X86_32)
@@ -274,17 +274,17 @@ oct_init_by_entropy (void)
       fclose (urandom);
     }
 
   /* If there isn't enough entropy, gather some from various sources */
   if (n < MT_N)
     entropy[n++] = time (0); /* Current time in seconds */
   if (n < MT_N)
     entropy[n++] = clock ();    /* CPU time used (usec) */
-#ifdef HAVE_GETTIMEOFDAY
+#if defined (HAVE_GETTIMEOFDAY)
   if (n < MT_N)
     {
       struct timeval tv;
       if (gettimeofday (&tv, 0) != -1)
         entropy[n++] = tv.tv_usec;   /* Fractional part of current time */
     }
 #endif
   /* Send all the entropy into the initial state vector */
@@ -357,33 +357,33 @@ randmt (void)
 /* Select which 32 bit generator to use */
 #define randi32 randmt
 
 static uint64_t
 randi53 (void)
 {
   const uint32_t lo = randi32 ();
   const uint32_t hi = randi32 () & 0x1FFFFF;
-#ifdef HAVE_X86_32
+#if defined (HAVE_X86_32)
   uint64_t u;
   uint32_t *p = (uint32_t *)&u;
   p[0] = lo;
   p[1] = hi;
   return u;
 #else
   return ((static_cast<uint64_t> (hi) << 32) | lo);
 #endif
 }
 
 static uint64_t
 randi54 (void)
 {
   const uint32_t lo = randi32 ();
   const uint32_t hi = randi32 () & 0x3FFFFF;
-#ifdef HAVE_X86_32
+#if defined (HAVE_X86_32)
   uint64_t u;
   uint32_t *p = static_cast<uint32_t *> (&u);
   p[0] = lo;
   p[1] = hi;
   return u;
 #else
   return ((static_cast<uint64_t> (hi) << 32) | lo);
 #endif
@@ -572,17 +572,17 @@ oct_randn (void)
       /* The following code is specialized for 32-bit mantissa.
        * Compared to the arbitrary mantissa code, there is a performance
        * gain for 32-bits:  PPC: 2%, MIPS: 8%, x86: 40%
        * There is a bigger performance gain compared to using a full
        * 53-bit mantissa:  PPC: 60%, MIPS: 65%, x86: 240%
        * Of course, different compilers and operating systems may
        * have something to do with this.
        */
-# ifdef HAVE_X86_32
+# if defined (HAVE_X86_32)
       /* 53-bit mantissa, 1-bit sign, x86 32-bit architecture */
       double x;
       int si,idx;
       uint32_t lo, hi;
       int64_t rabs;
       uint32_t *p = (uint32_t *)&rabs;
       lo = randi32 ();
       idx = lo & 0xFF;
diff --git a/liboctave/numeric/randpoisson.cc b/liboctave/numeric/randpoisson.cc
--- a/liboctave/numeric/randpoisson.cc
+++ b/liboctave/numeric/randpoisson.cc
@@ -50,17 +50,17 @@ along with Octave; see the file COPYING.
 
 F77_RET_T
 F77_FUNC (dlgams, DLGAMS) (const double *, double *, double *);
 
 static double
 xlgamma (double x)
 {
   double result;
-#ifdef HAVE_LGAMMA
+#if defined (HAVE_LGAMMA)
   result = lgamma (x);
 #else
   double sgngam;
 
   if (lo_ieee_isnan (x))
     result = x;
   else if (x <= 0 || lo_ieee_isinf (x))
     result = octave_Inf;
diff --git a/liboctave/numeric/schur.cc b/liboctave/numeric/schur.cc
--- a/liboctave/numeric/schur.cc
+++ b/liboctave/numeric/schur.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "CMatrix.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 #include "fCMatrix.h"
 #include "fMatrix.h"
diff --git a/liboctave/numeric/sparse-chol.cc b/liboctave/numeric/sparse-chol.cc
--- a/liboctave/numeric/sparse-chol.cc
+++ b/liboctave/numeric/sparse-chol.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "sparse-chol.h"
 #include "sparse-util.h"
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "oct-spparms.h"
@@ -36,60 +36,60 @@ along with Octave; see the file COPYING.
 
 template <typename chol_type>
 class sparse_chol<chol_type>::sparse_chol_rep
 {
 public:
 
   sparse_chol_rep (void)
     : count (1), is_pd (false), minor_p (0), perms (), cond (0)
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
       , Lsparse (0), Common ()
 #endif
   { }
 
   sparse_chol_rep (const chol_type& a, bool natural, bool force)
     : count (1), is_pd (false), minor_p (0), perms (), cond (0)
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
       , Lsparse (0), Common ()
 #endif
   {
     init (a, natural, force);
   }
 
   sparse_chol_rep (const chol_type& a, octave_idx_type& info,
                    bool natural, bool force)
     : count (1), is_pd (false), minor_p (0), perms (), cond (0)
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
       , Lsparse (0), Common ()
 #endif
   {
     info = init (a, natural, force);
   }
 
   ~sparse_chol_rep (void)
   {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
     if (Lsparse)
       CHOLMOD_NAME (free_sparse) (&Lsparse, &Common);
 
     CHOLMOD_NAME(finish) (&Common);
 #endif
   }
 
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
   cholmod_sparse *L (void) const
   {
     return Lsparse;
   }
 #endif
 
   octave_idx_type P (void) const
   {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
     return (minor_p == static_cast<octave_idx_type>(Lsparse->ncol) ?
             0 : minor_p + 1);
 #else
     return 0;
 #endif
   }
 
   ColumnVector perm (void) const { return perms + 1; }
@@ -107,34 +107,34 @@ private:
   bool is_pd;
 
   octave_idx_type minor_p;
 
   ColumnVector perms;
 
   double cond;
 
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
   cholmod_sparse *Lsparse;
 
   cholmod_common Common;
 
   void drop_zeros (const cholmod_sparse *S);
 #endif
 
   octave_idx_type init (const chol_type& a, bool natural, bool force);
 
   // No copying!
 
   sparse_chol_rep (const sparse_chol_rep&);
 
   sparse_chol_rep& operator = (const sparse_chol_rep&);
 };
 
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
 // Can't use CHOLMOD_NAME(drop)(0.0, S, cm) because it doesn't treat
 // complex matrices.
 
 template <typename chol_type>
 void
 sparse_chol<chol_type>::sparse_chol_rep::drop_zeros (const cholmod_sparse *S)
 {
@@ -197,17 +197,17 @@ get_xtype<Complex> (void)
 
 template <typename chol_type>
 octave_idx_type
 sparse_chol<chol_type>::sparse_chol_rep::init (const chol_type& a,
                                                bool natural, bool force)
 {
   volatile octave_idx_type info = 0;
 
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   octave_idx_type a_nr = a.rows ();
   octave_idx_type a_nc = a.cols ();
 
   if (a_nr != a_nc)
     (*current_liboctave_error_handler) ("sparse_chol requires square matrix");
 
   cholmod_common *cm = &Common;
@@ -345,17 +345,17 @@ sparse_chol<chol_type>::sparse_chol_rep:
 
 #endif
 }
 
 template <typename chol_type>
 SparseMatrix
 sparse_chol<chol_type>::sparse_chol_rep::Q (void) const
 {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   octave_idx_type n = Lsparse->nrow;
   SparseMatrix p (n, n, n);
 
   for (octave_idx_type i = 0; i < n; i++)
     {
       p.xcidx (i) = i;
       p.xridx (i) = static_cast<octave_idx_type>(perms (i));
@@ -434,17 +434,17 @@ sparse_chol<chol_type>::operator = (cons
 
   return *this;
 }
 
 template <typename chol_type>
 chol_type
 sparse_chol<chol_type>::L (void) const
 {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   cholmod_sparse *m = rep->L ();
 
   octave_idx_type nc = m->ncol;
   octave_idx_type nnz = m->nzmax;
 
   chol_type ret (m->nrow, nc, nnz);
 
@@ -502,17 +502,17 @@ sparse_chol<chol_type>::rcond (void) con
 }
 
 template <typename chol_type>
 chol_type
 sparse_chol<chol_type>::inverse (void) const
 {
   chol_type retval;
 
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   cholmod_sparse *m = rep->L ();
   octave_idx_type n = m->ncol;
   ColumnVector perms = rep->perm ();
   double rcond2;
   octave_idx_type info;
   MatrixType mattype (MatrixType::Upper);
   chol_type linv = L ().hermitian ().inverse (mattype, info, rcond2, 1, 0);
diff --git a/liboctave/numeric/sparse-dmsolve.cc b/liboctave/numeric/sparse-dmsolve.cc
--- a/liboctave/numeric/sparse-dmsolve.cc
+++ b/liboctave/numeric/sparse-dmsolve.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <vector>
 
 #include "MArray.h"
 #include "MSparse.h"
 #include "MatrixType.h"
@@ -339,34 +339,34 @@ dmsolve_permute (MSparse<RT> &a, const M
           octave_quit ();
           a.xdata (i) = X[a.xridx (i)];
         }
 
       a.xcidx (j+1) = nz;
     }
 }
 
-#ifdef HAVE_CXSPARSE
+#if defined (HAVE_CXSPARSE)
 
 static void
 solve_singularity_warning (double)
 {
   // Dummy singularity handler so that LU solver doesn't flag
   // an error for numerically rank defficient matrices
 }
 
 #endif
 
 template <typename RT, typename ST, typename T>
 RT
 dmsolve (const ST &a, const T &b, octave_idx_type &info)
 {
   RT retval;
 
-#ifdef HAVE_CXSPARSE
+#if defined (HAVE_CXSPARSE)
 
   octave_idx_type nr = a.rows ();
   octave_idx_type nc = a.cols ();
 
   octave_idx_type b_nr = b.rows ();
   octave_idx_type b_nc = b.cols ();
 
   if (nr < 0 || nc < 0 || nr != b_nr)
diff --git a/liboctave/numeric/sparse-lu.cc b/liboctave/numeric/sparse-lu.cc
--- a/liboctave/numeric/sparse-lu.cc
+++ b/liboctave/numeric/sparse-lu.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "CSparse.h"
 #include "PermMatrix.h"
 #include "dSparse.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
@@ -373,17 +373,17 @@ umfpack_report_symbolic <Complex> (void 
 
 #endif
 
 template <typename lu_type>
 sparse_lu<lu_type>::sparse_lu (const lu_type& a, const Matrix& piv_thres,
                                bool scale)
   : Lfact (), Ufact (), Rfact (), cond (0), P (), Q ()
 {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
   octave_idx_type nr = a.rows ();
   octave_idx_type nc = a.cols ();
 
   // Setup the control parameters
   Matrix Control (UMFPACK_CONTROL, 1);
   double *control = Control.fortran_vec ();
   umfpack_defaults<lu_elt_type> (control);
 
@@ -566,17 +566,17 @@ sparse_lu<lu_type>::sparse_lu (const lu_
 template <typename lu_type>
 sparse_lu<lu_type>::sparse_lu (const lu_type& a,
                                const ColumnVector& Qinit,
                                const Matrix& piv_thres, bool scale,
                                bool FixedQ, double droptol,
                                bool milu, bool udiag)
   : Lfact (), Ufact (), Rfact (), cond (0), P (), Q ()
 {
-#ifdef HAVE_UMFPACK
+#if defined (HAVE_UMFPACK)
 
   if (milu)
     (*current_liboctave_error_handler)
       ("Modified incomplete LU not implemented");
 
   octave_idx_type nr = a.rows ();
   octave_idx_type nc = a.cols ();
 
diff --git a/liboctave/numeric/sparse-qr.cc b/liboctave/numeric/sparse-qr.cc
--- a/liboctave/numeric/sparse-qr.cc
+++ b/liboctave/numeric/sparse-qr.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-sparse.h"
 #include "sparse-qr.h"
 
diff --git a/liboctave/numeric/svd.cc b/liboctave/numeric/svd.cc
--- a/liboctave/numeric/svd.cc
+++ b/liboctave/numeric/svd.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 
 #include "CMatrix.h"
 #include "dDiagMatrix.h"
 #include "fDiagMatrix.h"
diff --git a/liboctave/operators/mk-ops.awk b/liboctave/operators/mk-ops.awk
--- a/liboctave/operators/mk-ops.awk
+++ b/liboctave/operators/mk-ops.awk
@@ -288,17 +288,17 @@ BEGIN {
               print "#endif";
 
               exit (0);
             }
           else if (make_source)
             {
               print "// DO NOT EDIT -- generated by mk-ops.awk";
 
-              print "#ifdef HAVE_CONFIG_H";
+              print "#if defined (HAVE_CONFIG_H)";
               print "#  include \"config.h\"";
               print "#endif";
 
               print "#include \"Array-util.h\"";
 
               printf ("#include \"%s\"\n", h_file);
 
               if (! sparse)
diff --git a/liboctave/operators/mx-defs.h b/liboctave/operators/mx-defs.h
--- a/liboctave/operators/mx-defs.h
+++ b/liboctave/operators/mx-defs.h
@@ -78,17 +78,17 @@ template <typename T> class qr;
 
 template <typename T> class qrp;
 
 // Other data types we use but that don't always need to have full
 // declarations.
 
 #include "oct-cmplx.h"
 
-#ifndef MAPPER_FCN_TYPEDEFS
+#if ! defined (MAPPER_FCN_TYPEDEFS)
 #  define MAPPER_FCN_TYPEDEFS 1
 
 typedef bool (*b_d_Mapper)(double);
 typedef bool (*b_c_Mapper)(const Complex&);
 
 typedef double (*d_d_Mapper)(double);
 typedef double (*d_c_Mapper)(const Complex&);
 typedef Complex (*c_c_Mapper)(const Complex&);
diff --git a/liboctave/system/dir-ops.cc b/liboctave/system/dir-ops.cc
--- a/liboctave/system/dir-ops.cc
+++ b/liboctave/system/dir-ops.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 #include <cstring>
 
 #include <list>
diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
 
diff --git a/liboctave/system/file-stat.cc b/liboctave/system/file-stat.cc
--- a/liboctave/system/file-stat.cc
+++ b/liboctave/system/file-stat.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include <sys/types.h>
 #include <unistd.h>
@@ -80,77 +80,77 @@ bool
 base_file_stat::is_sock (void) const
 {
   return exists () && is_sock (fs_mode);
 }
 
 bool
 base_file_stat::is_blk (mode_t mode)
 {
-#ifdef S_ISBLK
+#if defined (S_ISBLK)
   return S_ISBLK (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_chr (mode_t mode)
 {
-#ifdef S_ISCHR
+#if defined (S_ISCHR)
   return S_ISCHR (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_dir (mode_t mode)
 {
-#ifdef S_ISDIR
+#if defined (S_ISDIR)
   return S_ISDIR (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_fifo (mode_t mode)
 {
-#ifdef S_ISFIFO
+#if defined (S_ISFIFO)
   return S_ISFIFO (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_lnk (mode_t mode)
 {
-#ifdef S_ISLNK
+#if defined (S_ISLNK)
   return S_ISLNK (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_reg (mode_t mode)
 {
-#ifdef S_ISREG
+#if defined (S_ISREG)
   return S_ISREG (mode);
 #else
   return false;
 #endif
 }
 
 bool
 base_file_stat::is_sock (mode_t mode)
 {
-#ifdef S_ISSOCK
+#if defined (S_ISSOCK)
   return S_ISSOCK (mode);
 #else
   return false;
 #endif
 }
 
 std::string
 base_file_stat::mode_as_string (void) const
diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 #include <vector>
 
 #include <sys/types.h>
diff --git a/liboctave/system/mach-info.cc b/liboctave/system/mach-info.cc
--- a/liboctave/system/mach-info.cc
+++ b/liboctave/system/mach-info.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "mach-info.h"
 #include "singleton-cleanup.h"
 
diff --git a/liboctave/system/oct-env.cc b/liboctave/system/oct-env.cc
--- a/liboctave/system/oct-env.cc
+++ b/liboctave/system/oct-env.cc
@@ -31,17 +31,17 @@ Free Software Foundation, Inc.
   octave_env::do_chdir
   octave_env::do_getcwd
   octave_env::do_make_absolute
   octave_env::do_polite_directory_format
   octave_env::pathname_backup
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
diff --git a/liboctave/system/oct-group.cc b/liboctave/system/oct-group.cc
--- a/liboctave/system/oct-group.cc
+++ b/liboctave/system/oct-group.cc
@@ -15,23 +15,23 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sys/types.h>
 
-#ifdef HAVE_GRP_H
+#if defined (HAVE_GRP_H)
 #  include <grp.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-group.h"
 #include "str-vec.h"
 
 #define NOT_SUPPORTED(nm) \
diff --git a/liboctave/system/oct-passwd.cc b/liboctave/system/oct-passwd.cc
--- a/liboctave/system/oct-passwd.cc
+++ b/liboctave/system/oct-passwd.cc
@@ -15,23 +15,23 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sys/types.h>
 
-#ifdef HAVE_PWD_H
+#if defined (HAVE_PWD_H)
 #  include <pwd.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-passwd.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 
 #include <string.h>
 
diff --git a/liboctave/system/oct-time.cc b/liboctave/system/oct-time.cc
--- a/liboctave/system/oct-time.cc
+++ b/liboctave/system/oct-time.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <limits>
 
 #include <ctime>
 
 #include <sys/time.h>
diff --git a/liboctave/system/oct-uname.cc b/liboctave/system/oct-uname.cc
--- a/liboctave/system/oct-uname.cc
+++ b/liboctave/system/oct-uname.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include <sys/utsname.h>
 
diff --git a/liboctave/system/pathlen.h b/liboctave/system/pathlen.h
--- a/liboctave/system/pathlen.h
+++ b/liboctave/system/pathlen.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_pathlen_h)
 #define octave_pathlen_h 1
 
 #include "octave-config.h"
 
-#ifdef HAVE_SYS_PARAM_H
+#if defined (HAVE_SYS_PARAM_H)
 #  include <sys/param.h>
 #endif
 
-#ifndef MAXPATHLEN
+#if ! defined (MAXPATHLEN)
 #  define MAXPATHLEN 1024
 #endif
 
 #endif
diff --git a/liboctave/system/syswait.h b/liboctave/system/syswait.h
--- a/liboctave/system/syswait.h
+++ b/liboctave/system/syswait.h
@@ -20,48 +20,48 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_syswait_h)
 #define octave_syswait_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 /* This mess suggested by the autoconf manual.  */
 
 #include <sys/types.h>
 
 #if defined HAVE_SYS_WAIT_H
 #  include <sys/wait.h>
 #endif
 
-#ifndef WIFEXITED
+#if ! defined (WIFEXITED)
 #  define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
 #endif
 
-#ifndef WEXITSTATUS
+#if ! defined (WEXITSTATUS)
 #  define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
 #endif
 
-#ifndef WIFSIGNALLED
+#if ! defined (WIFSIGNALLED)
 #  define WIFSIGNALLED(stat_val) \
           (((stat_val) & 0177) != 0177 && ((stat_val) & 0177) != 0)
 #endif
 
 #if defined (__MINGW32__) || defined (_MSC_VER)
 #  define HAVE_WAITPID 1
 #  include <process.h>
 #  define WAITPID(a, b, c) _cwait (b, a, c)
 /* Action argument is ignored for _cwait, so arbitrary definition.  */
 #  define WNOHANG 0
 #else
 #  define WAITPID(a, b, c) waitpid (a, b, c)
 #endif
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
 
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <sstream>
 #include <string>
diff --git a/liboctave/util/data-conv.cc b/liboctave/util/data-conv.cc
--- a/liboctave/util/data-conv.cc
+++ b/liboctave/util/data-conv.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <cstdlib>
 
 #include <iostream>
 #include <limits>
diff --git a/liboctave/util/f2c-main.c b/liboctave/util/f2c-main.c
--- a/liboctave/util/f2c-main.c
+++ b/liboctave/util/f2c-main.c
@@ -15,25 +15,25 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <assert.h>
 
 
 /* Dummy Fortran main declaration, needed in order to link to some
    Fortran libraries.  See the AC_F77_DUMMY_MAIN macro documentation.
    This function should never be called. */
 
-#ifdef F77_DUMMY_MAIN
-#  ifdef __cplusplus
+#if defined (F77_DUMMY_MAIN)
+#  if defined (__cplusplus)
 extern "C"
 #  endif
 int F77_DUMMY_MAIN () { assert (0); return 1; }
 #endif
diff --git a/liboctave/util/glob-match.cc b/liboctave/util/glob-match.cc
--- a/liboctave/util/glob-match.cc
+++ b/liboctave/util/glob-match.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <fnmatch.h>
 
 #include "glob-match.h"
 #include "oct-glob.h"
 
diff --git a/liboctave/util/kpse.cc b/liboctave/util/kpse.cc
--- a/liboctave/util/kpse.cc
+++ b/liboctave/util/kpse.cc
@@ -48,31 +48,31 @@ along with Octave; see the file COPYING.
 #endif
 
 extern "C" {
 #if defined (__MINGW32__)
 #include <windows.h>
 #include <fcntl.h>
 #include <dirent.h>
 #elif defined (WIN32)
-#ifndef _MSC_VER
+#if ! defined (_MSC_VER)
 #define __STDC__ 1
 #include "win32lib.h"
 #endif
 #endif /* not WIN32 */
 
-#ifdef __DJGPP__
+#if defined (__DJGPP__)
 #include <fcntl.h>      /* for long filenames' stuff */
 #include <dir.h>        /* for 'getdisk' */
 #include <io.h>         /* for 'setmode' */
 #endif
 }
 
 /* Some drivers have partially integrated kpathsea changes.  */
-#ifndef KPATHSEA
+#if ! defined (KPATHSEA)
 #define KPATHSEA 32
 #endif
 
 /* System dependencies that are figured out by 'configure'.  If we are
    compiling standalone, we get our c-auto.h.  Otherwise, the package
    containing us must provide this (unless it can somehow generate ours
    from c-auto.in).  We use <...> instead of "..." so that the current
    cpp directory (i.e., kpathsea/) won't be searched. */
@@ -80,50 +80,51 @@ extern "C" {
 /* If you want to find subdirectories in a directory with non-Unix
    semantics (specifically, if a directory with no subdirectories does
    not have exactly two links), define this.  */
 #if defined (__DJGPP__) || ! defined (DOSISH)
 /* Surprise!  DJGPP returns st_nlink exactly like on Unix.  */
 #define ST_NLINK_TRICK
 #endif /* either not DOSISH or __DJGPP__ */
 
-#ifdef OS2
+#if defined (OS2)
 #define access ln_access
 #define fopen ln_fopen
 #define rename ln_rename
 #define stat ln_stat
 #endif /* OS2 */
 
 /* Define the characters which separate components of
    filenames and environment variable paths.  */
 
 /* What separates filename components?  */
-#ifndef DIR_SEP
-#ifdef DOSISH
+#if ! defined (DIR_SEP)
+#if defined (DOSISH)
 /* Either \'s or 's work.  Wayne Sullivan's web2pc prefers /, so we'll
    go with that.  */
 #define DIR_SEP '/'
 #define DIR_SEP_STRING "/"
 #define IS_DEVICE_SEP(ch) ((ch) == ':')
 #define NAME_BEGINS_WITH_DEVICE(name) ((name.length ()>0) && IS_DEVICE_SEP((name)[1]))
 /* On DOS, it's good to allow both \ and / between directories.  */
 #define IS_DIR_SEP(ch) ((ch) == '/' || (ch) == '\\')
 #else
 #define DIR_SEP '/'
 #define DIR_SEP_STRING "/"
 #endif /* not DOSISH */
 #endif /* not DIR_SEP */
 
-#ifndef IS_DIR_SEP
+#if ! defined (IS_DIR_SEP)
 #define IS_DIR_SEP(ch) ((ch) == DIR_SEP)
 #endif
-#ifndef IS_DEVICE_SEP /* No 'devices' on, e.g., Unix.  */
+#if ! defined (IS_DEVICE_SEP)
+/* No 'devices' on, e.g., Unix.  */
 #define IS_DEVICE_SEP(ch) 0
 #endif
-#ifndef NAME_BEGINS_WITH_DEVICE
+#if ! defined (NAME_BEGINS_WITH_DEVICE)
 #define NAME_BEGINS_WITH_DEVICE(name) 0
 #endif
 
 #include "lo-error.h"
 #include "oct-env.h"
 #include "oct-passwd.h"
 #include "str-vec.h"
 
@@ -143,65 +144,65 @@ extern "C" {
 #include "statdefs.h"
 
 /* define NAME_MAX, the maximum length of a single
    component in a filename.  No such limit may exist, or may vary
    depending on the filesystem.  */
 
 /* Most likely the system will truncate filenames if it is not POSIX,
    and so we can use the BSD value here.  */
-#ifndef _POSIX_NAME_MAX
+#if ! defined (_POSIX_NAME_MAX)
 #define _POSIX_NAME_MAX 255
 #endif
 
-#ifndef NAME_MAX
+#if ! defined (NAME_MAX)
 #define NAME_MAX _POSIX_NAME_MAX
 #endif
 
 #include <cctype>
 
 /* What separates elements in environment variable path lists?  */
-#ifndef ENV_SEP
+#if ! defined (ENV_SEP)
 #if defined (SEPCHAR) && defined (SEPCHAR_STR)
 #define ENV_SEP SEPCHAR
 #define ENV_SEP_STRING SEPCHAR_STR
 #elif defined (DOSISH)
 #define ENV_SEP ';'
 #define ENV_SEP_STRING ";"
 #else
 #define ENV_SEP ':'
 #define ENV_SEP_STRING ":"
 #endif /* not DOS */
 #endif /* not ENV_SEP */
 
-#ifndef IS_ENV_SEP
+#if ! defined (IS_ENV_SEP)
 #define IS_ENV_SEP(ch) ((ch) == ENV_SEP)
 #endif
 
 /* define PATH_MAX, the maximum length of a filename.  Since no such
    limit may exist, it's preferable to dynamically grow filenames as
    needed.  */
 
 /* Cheat and define this as a manifest constant no matter what, instead
    of using pathconf.  I forget why we want to do this.  */
 
-#ifndef _POSIX_PATH_MAX
+#if ! defined (_POSIX_PATH_MAX)
 #define _POSIX_PATH_MAX 255
 #endif
 
-#ifndef PATH_MAX
-#ifdef MAXPATHLEN
+#if ! defined (PATH_MAX)
+#if defined (MAXPATHLEN)
 #define PATH_MAX MAXPATHLEN
 #else
 #define PATH_MAX _POSIX_PATH_MAX
 #endif
 #endif /* not PATH_MAX */
 
 /* If NO_DEBUG is defined (not recommended), skip all this.  */
-#ifndef NO_DEBUG
+#if ! defined (NO_DEBUG)
 
 /* OK, we'll have tracing support.  */
 #define KPSE_DEBUG
 
 /* Test if a bit is on.  */
 #define KPSE_DEBUG_P(bit) (kpathsea_debug & (1 << (bit)))
 
 #define KPSE_DEBUG_STAT 0               /* stat calls */
@@ -225,34 +226,34 @@ extern "C" {
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2); DEBUGF_END ()
 #define DEBUGF3(str, e1, e2, e3)                                        \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2, e3); DEBUGF_END ()
 #define DEBUGF4(str, e1, e2, e3, e4)                                    \
   DEBUGF_START (); gnulib::fprintf (stderr, str, e1, e2, e3, e4); DEBUGF_END ()
 
 #endif /* not NO_DEBUG */
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
 static unsigned int kpathsea_debug = 0;
 #endif
 
 #if defined (WIN32) && ! defined (__MINGW32__)
 
 /* System description file for Windows NT.  */
 
 /*
  *      Define symbols to identify the version of Unix this is.
  *      Define all the symbols that apply correctly.
  */
 
-#ifndef DOSISH
+#if ! defined (DOSISH)
 #define DOSISH
 #endif
 
-#ifndef MAXPATHLEN
+#if ! defined (MAXPATHLEN)
 #define MAXPATHLEN      _MAX_PATH
 #endif
 
 /* These have to be defined because our compilers treat __STDC__ as being
    defined (most of them anyway). */
 
 #define access  _access
 #define stat    _stat
@@ -295,17 +296,17 @@ static unsigned int kpathsea_debug = 0;
     { \
       gnulib::fputs ("pathsearch: fatal: ", stderr); \
       gnulib::fputs (str, stderr); \
       gnulib::fputs (".\n", stderr); \
       exit (1); \
     } \
   while (0)
 
-#ifndef WIN32
+#if ! defined (WIN32)
 static void xclosedir (DIR *d);
 #endif
 
 /* It's a little bizarre to be using the same type for the list and the
    elements of the list, but no reason not to in this case, I think --
    we never need a NULL string in the middle of the list, and an extra
    NULL/NULL element always at the end is inconsequential.  */
 
@@ -414,17 +415,17 @@ hash_lookup (hash_table_type table, cons
   string_vector ret;
   unsigned n = kpse_hash (table, key);
 
   /* Look at everything in this bucket.  */
   for (p = table.buckets[n]; p; p = p->next)
     if (key == p->key)
       ret.append (p->value);
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
   if (KPSE_DEBUG_P (KPSE_DEBUG_HASH))
     {
       DEBUGF1 ("hash_lookup (%s) =>", key.c_str ());
       if (ret.empty ())
         gnulib::fputs (" (nil)\n", stderr);
       else
         {
           int len = ret.numel ();
@@ -515,17 +516,17 @@ kpse_var_value (const std::string& var)
 {
   std::string ret;
 
   std::string tmp = octave_env::getenv (var);
 
   if (! tmp.empty ())
     ret = kpse_var_expand (tmp);
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
   if (KPSE_DEBUG_P (KPSE_DEBUG_VARS))
     DEBUGF2 ("variable: %s = %s\n", var.c_str (),
              tmp.empty () ? "(nil)" :  tmp.c_str ());
 #endif
 
   return ret;
 }
 
@@ -565,17 +566,17 @@ kpse_truncate_filename (const std::strin
   return ret;
 }
 
 /* If access can read FN, run stat (assigning to stat buffer ST) and
    check that fn is not a directory.  Don't check for just being a
    regular file, as it is potentially useful to read fifo's or some
    kinds of devices.  */
 
-#ifdef WIN32
+#if defined (WIN32)
 static inline bool
 READABLE (const std::string& fn, struct stat&)
 {
   const char *t = fn.c_str ();
   return (GetFileAttributes (t) != 0xFFFFFFFF
           && ! (GetFileAttributes (t) & FILE_ATTRIBUTE_DIRECTORY));
 }
 #else
@@ -599,17 +600,17 @@ kpse_readable_file (const std::string& n
 {
   struct stat st;
   std::string ret;
 
   if (READABLE (name, st))
     {
       ret = name;
 
-#ifdef ENAMETOOLONG
+#if defined (ENAMETOOLONG)
     }
   else if (errno == ENAMETOOLONG)
     {
       ret = kpse_truncate_filename (name);
 
       /* Perhaps some other error will occur with the truncated name,
          so let's call access again.  */
 
@@ -640,21 +641,21 @@ kpse_readable_file (const std::string& n
    to usefully generalize.  */
 
 static bool
 kpse_absolute_p (const std::string& filename, int relative_ok)
 {
   size_t len = filename.length ();
 
   int absolute = (len > 0 && IS_DIR_SEP (filename[0]))
-#ifdef DOSISH
+#if defined (DOSISH)
                  /* Novell allows non-alphanumeric drive letters. */
                  || (len > 0 && IS_DEVICE_SEP (filename[1]))
 #endif /* DOSISH */
-#ifdef WIN32
+#if defined (WIN32)
                  /* UNC names */
                  || (len > 1 && filename[0] == '\\' && filename[1] == '\\')
 #endif
                  ;
 
   int explicit_relative
     = relative_ok
       && (len > 1
@@ -1226,17 +1227,17 @@ kpse_tilde_expand (const std::string& na
         c++;
 
       expansion = home + name.substr (c);
 
       /* If '~user' or '~user/', look up user in the passwd database (but
          OS/2 doesn't have this concept.  */
     }
   else
-#ifdef HAVE_PWD_H
+#if defined (HAVE_PWD_H)
     {
       unsigned c = 2;
 
       /* find user name */
       while (name.length () > c && ! IS_DIR_SEP (name[c]))
         c++;
 
       std::string user = name.substr (1, c-1);
@@ -1915,17 +1916,17 @@ kpse_db_search (const std::string& name_
          and the path looks like .../cx, we don't want the ricoh file.  */
 
       int db_dirs_len = db_dirs.numel ();
       for (int j = 0; j < db_dirs_len && ! done; j++)
         {
           std::string db_file = db_dirs[j] + atry;
           bool matched = match (db_file, path_elt);
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
           if (KPSE_DEBUG_P (KPSE_DEBUG_SEARCH))
             DEBUGF3 ("db:match (%s,%s) = %d\n",
                      db_file.c_str (), path_elt.c_str (), matched);
 #endif
 
           /* We got a hit in the database.  Now see if the file actually
              exists, possibly under an alias.  */
           if (matched)
@@ -2051,17 +2052,17 @@ dir_list_add (str_llist_type *l, const s
 }
 
 /* Return true if FN is a directory or a symlink to a directory,
    false if not. */
 
 static bool
 dir_p (const std::string& fn)
 {
-#ifdef WIN32
+#if defined (WIN32)
   unsigned int fa = GetFileAttributes (fn.c_str ());
   return (fa != 0xFFFFFFFF && (fa & FILE_ATTRIBUTE_DIRECTORY));
 #else
   struct stat stats;
   return stat (fn.c_str (), &stats) == 0 && S_ISDIR (stats.st_mode);
 #endif
 }
 
@@ -2141,17 +2142,17 @@ cached (const std::string& key)
 /* Declare recursively called routine.  */
 static void expand_elt (str_llist_type *, const std::string&, unsigned);
 
 /* POST is a pointer into the original element (which may no longer be
    ELT) to just after the doubled DIR_SEP, perhaps to the null.  Append
    subdirectories of ELT (up to ELT_LENGTH, which must be a /) to
    STR_LIST_PTR.  */
 
-#ifdef WIN32
+#if defined (WIN32)
 
 /* Shared across recursive calls, it acts like a stack. */
 static std::string dirname;
 
 #else /* WIN32 */
 
 /* Return -1 if FN isn't a directory, else its number of links.
    Duplicate the call to stat; no need to incur overhead of a function
@@ -2170,32 +2171,32 @@ dir_links (const std::string& fn)
     {
       struct stat stats;
 
       ret = stat (fn.c_str (), &stats) == 0 && S_ISDIR (stats.st_mode)
             ? stats.st_nlink : static_cast<unsigned> (-1);
 
       link_table[fn] = ret;
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
       if (KPSE_DEBUG_P (KPSE_DEBUG_STAT))
         DEBUGF2 ("dir_links (%s) => %ld\n", fn.c_str (), ret);
 #endif
     }
 
   return ret;
 }
 
 #endif /* WIN32 */
 
 static inline void
 do_subdir (str_llist_type *str_list_ptr, const std::string& elt,
            unsigned elt_length, const std::string& post)
 {
-#ifdef WIN32
+#if defined (WIN32)
   WIN32_FIND_DATA find_file_data;
   HANDLE hnd;
   int proceed;
 #else
   DIR *dir;
   struct dirent *e;
 #endif /* not WIN32 */
 
@@ -2295,26 +2296,26 @@ do_subdir (str_llist_type *str_list_ptr,
 
               /* Should we recurse?  To see if the subdirectory is a
                  leaf, check if it has two links (one for . and one for
                  ..).  This means that symbolic links to directories do
                  not affect the leaf-ness.  This is arguably wrong, but
                  the only alternative I know of is to stat every entry
                  in the directory, and that is unacceptably slow.
 
-                 The #ifdef here makes all this configurable at
+                 The #if here makes all this configurable at
                  compile-time, so that if we're using VMS directories or
                  some such, we can still find subdirectories, even if it
                  is much slower.  */
-#ifdef ST_NLINK_TRICK
+#if defined (ST_NLINK_TRICK)
               if (links != 2)
 #endif /* not ST_NLINK_TRICK */
                 /* All criteria are met; find subdirectories.  */
                 do_subdir (str_list_ptr, name, potential_len, post);
-#ifdef ST_NLINK_TRICK
+#if defined (ST_NLINK_TRICK)
               else if (post.empty ())
                 /* Nothing to match, no recursive subdirectories to
                    look for: we're done with this branch.  Add it.  */
                 dir_list_add (str_list_ptr, name);
 #endif
             }
 
           /* Remove the directory entry we just checked from 'name'.  */
@@ -2402,17 +2403,17 @@ kpse_element_dirs (const std::string& el
 
   /* We handle the hard case in a subroutine.  */
   expand_elt (ret, elt, 0);
 
   /* Remember the directory list we just found, in case future calls are
      made with the same ELT.  */
   cache (elt, ret);
 
-#ifdef KPSE_DEBUG
+#if defined (KPSE_DEBUG)
   if (KPSE_DEBUG_P (KPSE_DEBUG_EXPAND))
     {
       DEBUGF1 ("path element %s =>", elt.c_str ());
       if (ret)
         {
           str_llist_elt_type *e;
           for (e = *ret; e; e = STR_LLIST_NEXT (*e))
             gnulib::fprintf (stderr, " %s", (STR_LLIST (*e)).c_str ());
@@ -2420,17 +2421,17 @@ kpse_element_dirs (const std::string& el
       gnulib::putc ('\n', stderr);
       gnulib::fflush (stderr);
     }
 #endif /* KPSE_DEBUG */
 
   return ret;
 }
 
-#ifndef WIN32
+#if ! defined (WIN32)
 void
 xclosedir (DIR *d)
 {
   int ret = gnulib::closedir (d);
 
   if (ret != 0)
     FATAL ("closedir failed");
 }
@@ -2561,26 +2562,29 @@ expand (std::string &expansion, const st
           expanding (var, false);
           expansion += tmp;
         }
     }
 }
 
 /* Can't think of when it would be useful to change these (and the
    diagnostic messages assume them), but ... */
-#ifndef IS_VAR_START /* starts all variable references */
+#if ! defined (IS_VAR_START)
+/* starts all variable references */
 #define IS_VAR_START(c) ((c) == '$')
 #endif
-#ifndef IS_VAR_CHAR  /* variable name constituent */
+#if ! defined (IS_VAR_CHAR)
+/* variable name constituent */
 #define IS_VAR_CHAR(c) (isalnum (c) || (c) == '_')
 #endif
-#ifndef IS_VAR_BEGIN_DELIMITER /* start delimited variable name (after $) */
+#if ! defined (IS_VAR_BEGIN_DELIMITER)
+/* start delimited variable name (after $) */
 #define IS_VAR_BEGIN_DELIMITER(c) ((c) == '{')
 #endif
-#ifndef IS_VAR_END_DELIMITER
+#if ! defined (IS_VAR_END_DELIMITER)
 #define IS_VAR_END_DELIMITER(c) ((c) == '}')
 #endif
 
 /* Maybe we should support some or all of the various shell ${...}
    constructs, especially ${var-value}.  */
 
 static std::string
 kpse_var_expand (const std::string& src)
diff --git a/liboctave/util/lo-array-errwarn.cc b/liboctave/util/lo-array-errwarn.cc
--- a/liboctave/util/lo-array-errwarn.cc
+++ b/liboctave/util/lo-array-errwarn.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sstream>
 
 #include "lo-array-errwarn.h"
 #include "lo-error.h"
 
diff --git a/liboctave/util/lo-array-gripes.cc b/liboctave/util/lo-array-gripes.cc
--- a/liboctave/util/lo-array-gripes.cc
+++ b/liboctave/util/lo-array-gripes.cc
@@ -18,17 +18,17 @@ for more details.
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // FIXME: All gripe_XXX functions deprecated in 4.2.  Remove file in 4.6
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <sstream>
 
 #include "lo-array-gripes.h"
 #include "lo-error.h"
 
diff --git a/liboctave/util/lo-cutils.c b/liboctave/util/lo-cutils.c
--- a/liboctave/util/lo-cutils.c
+++ b/liboctave/util/lo-cutils.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-error.h"
 
 /* This gives us a better chance of finding a prototype for strptime
    on some systems.  */
 
diff --git a/liboctave/util/lo-cutils.h b/liboctave/util/lo-cutils.h
--- a/liboctave/util/lo-cutils.h
+++ b/liboctave/util/lo-cutils.h
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_lo_cutils_h)
 #define octave_lo_cutils_h 1
 
 #include "octave-config.h"
 
 #include <sys/types.h>
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 OCTAVE_API void
 octave_qsort (void *base, size_t n, size_t size,
               int (*cmp) (const void *, const void *));
 
 OCTAVE_API int
@@ -48,13 +48,13 @@ OCTAVE_API int octave_wifexited (int sta
 OCTAVE_API int octave_wexitstatus (int status);
 OCTAVE_API int octave_wifsignaled (int status);
 OCTAVE_API int octave_wtermsig (int status);
 OCTAVE_API int octave_wcoredump (int status);
 OCTAVE_API int octave_wifstopped (int status);
 OCTAVE_API int octave_wstopsig (int status);
 OCTAVE_API int octave_wifcontinued (int status);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/util/lo-ieee.cc b/liboctave/util/lo-ieee.cc
--- a/liboctave/util/lo-ieee.cc
+++ b/liboctave/util/lo-ieee.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cfloat>
 #include <cmath>
 #include <cstdlib>
 
 #include <limits>
diff --git a/liboctave/util/lo-ieee.h b/liboctave/util/lo-ieee.h
--- a/liboctave/util/lo-ieee.h
+++ b/liboctave/util/lo-ieee.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_lo_ieee_h)
 #define octave_lo_ieee_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C" {
 #endif
 
 /*  Octave's idea of infinity.  */
 #define octave_Inf (lo_ieee_inf_value ())
 
 /* Octave's idea of a missing value.  */
 #define octave_NA (lo_ieee_na_value ())
@@ -91,17 +91,17 @@ extern OCTAVE_API int __lo_ieee_float_is
 extern OCTAVE_API int __lo_ieee_float_is_NA (float);
 
 extern OCTAVE_API float lo_ieee_float_inf_value (void);
 extern OCTAVE_API float lo_ieee_float_na_value (void);
 extern OCTAVE_API float lo_ieee_float_nan_value (void);
 
 extern OCTAVE_API int __lo_ieee_float_signbit (float);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #define lo_ieee_isnan(x) (sizeof (x) == sizeof (float) ? \
                          __lo_ieee_float_isnan (x) : __lo_ieee_isnan (x))
 #define lo_ieee_finite(x) (sizeof (x) == sizeof (float) ? \
                            __lo_ieee_float_finite (x) : __lo_ieee_finite (x))
 #define lo_ieee_isinf(x) (sizeof (x) == sizeof (float) ? \
@@ -110,17 +110,17 @@ extern OCTAVE_API int __lo_ieee_float_si
 
 #define lo_ieee_is_NA(x) (sizeof (x) == sizeof (float) ? \
                           __lo_ieee_float_is_NA (x) : __lo_ieee_is_NA (x))
 #define lo_ieee_is_NaN_or_NA(x) (sizeof (x) == sizeof (float) ? \
                           __lo_ieee_float_is_NaN_or_NA (x) : __lo_ieee_is_NaN_or_NA (x))
 #define lo_ieee_signbit(x) (sizeof (x) == sizeof (float) ? \
                           __lo_ieee_float_signbit (x) : __lo_ieee_signbit (x))
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 
 namespace
 octave
 {
   template <typename T>
   struct numeric_limits
   {
     static T NA (void) { return static_cast<T> (0); }
diff --git a/liboctave/util/lo-regexp.cc b/liboctave/util/lo-regexp.cc
--- a/liboctave/util/lo-regexp.cc
+++ b/liboctave/util/lo-regexp.cc
@@ -17,17 +17,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <list>
 #include <sstream>
 #include <string>
 #include <vector>
 
diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cctype>
 #include <cstdlib>
 #include <cstdio>
 #include <cstring>
 #include <cfloat>
diff --git a/liboctave/util/oct-base64.cc b/liboctave/util/oct-base64.cc
--- a/liboctave/util/oct-base64.cc
+++ b/liboctave/util/oct-base64.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 
 #include <base64.h>
 
 #include "Array.h"
diff --git a/liboctave/util/oct-glob.cc b/liboctave/util/oct-glob.cc
--- a/liboctave/util/oct-glob.cc
+++ b/liboctave/util/oct-glob.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 #include <string>
 
 #include <fnmatch.h>
 #include <glob.h>
diff --git a/liboctave/util/oct-inttypes.cc b/liboctave/util/oct-inttypes.cc
--- a/liboctave/util/oct-inttypes.cc
+++ b/liboctave/util/oct-inttypes.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <fpucw.h>
 
 #include "lo-error.h"
 
 #include "oct-inttypes.h"
@@ -98,19 +98,19 @@ octave_int_base<T>::convert_real (const 
   INSTANTIATE_CONVERT_REAL_1 (uint64_t, S)
 
 INSTANTIATE_CONVERT_REAL (double);
 INSTANTIATE_CONVERT_REAL (float);
 #if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 INSTANTIATE_CONVERT_REAL (long double);
 #endif
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 
 #define DEFINE_OCTAVE_LONG_DOUBLE_CMP_OP_TEMPLATES(T) \
   template <typename xop> \
   bool \
   octave_int_cmp_op::external_mop (double x, T y) \
   { \
      DECL_LONG_DOUBLE_ROUNDING \
    \
diff --git a/liboctave/util/oct-inttypes.h b/liboctave/util/oct-inttypes.h
--- a/liboctave/util/oct-inttypes.h
+++ b/liboctave/util/oct-inttypes.h
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 
 #include <limits>
 #include <iosfwd>
 
 #include "lo-traits.h"
 #include "lo-math.h"
 #include "lo-mappers.h"
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 inline long double xround (long double x) { return roundl (x); }
 inline long double xisnan (long double x)
 { return xisnan (static_cast<double> (x)); }
 #endif
 
 // FIXME: we define this by our own because some compilers, such as
 // MSVC, do not provide std::abs (int64_t) and std::abs (uint64_t).  In
 // the future, it should go away in favor of std::abs.
@@ -173,32 +173,32 @@ public:
   mop (T x, double y)
   { return xop::op (static_cast<double> (x), y); }
 
   template <typename xop, typename T>
   static bool
   mop (double x, T y)
   { return xop::op (x, static_cast<double> (y)); }
 
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 #  define DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS(T) \
      template <typename xop> static OCTAVE_API bool \
      external_mop (double, T); \
      template <typename xop> static OCTAVE_API bool \
      external_mop (T, double)
 
      DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (int64_t);
      DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (uint64_t);
 #endif
 
   // Typecasting to doubles won't work properly for 64-bit integers --
   // they lose precision.
   // If we have long doubles, use them...
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
-#  ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
+#  if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 #    define DEFINE_LONG_DOUBLE_CMP_OP(T) \
        template <typename xop> \
        static bool \
        mop (double x, T y) \
        { \
          return external_mop<xop> (x, y); \
        } \
        template <typename xop> \
@@ -424,21 +424,21 @@ public:
   // Modulus. Note the weird y = 0 case for Matlab compatibility.
   static T
   mod (T x, T y)
   {
     return y != 0 ? x % y : x;
   }
 };
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 
 // Handle 64-bit multiply using long double
 
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 
 extern OCTAVE_API uint64_t
 octave_external_uint64_uint64_mul (uint64_t, uint64_t);
 
 #endif
 
 template <>
 inline uint64_t
@@ -455,17 +455,17 @@ octave_int_arith_base<uint64_t, false>::
 
   return retval;
 }
 
 template <>
 inline uint64_t
 octave_int_arith_base<uint64_t, false>::mul (uint64_t x, uint64_t y)
 {
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
   return octave_external_uint64_uint64_mul (x, y);
 #else
   return mul_internal (x, y);
 #endif
 }
 
 #else
 
@@ -748,21 +748,21 @@ public:
         T r = x % y;
         return ((r < 0) != (y < 0)) ? r + y : r;
       }
     else
       return x;
   }
 };
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 
 // Handle 64-bit multiply using long double
 
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 
 extern OCTAVE_API int64_t
 octave_external_int64_int64_mul (int64_t, int64_t);
 
 #endif
 
 template <>
 inline int64_t
@@ -784,17 +784,17 @@ octave_int_arith_base<int64_t, true>::mu
 
   return retval;
 }
 
 template <>
 inline int64_t
 octave_int_arith_base<int64_t, true>::mul (int64_t x, int64_t y)
 {
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
   return octave_external_int64_int64_mul (x, y);
 #else
   return mul_internal (x, y);
 #endif
 }
 
 #else
 
@@ -828,17 +828,17 @@ public:
     : ival (octave_int_base<T>::truncate_int (static_cast<unsigned char> (c)))
   { }
 #endif
 
   octave_int (double d) : ival (octave_int_base<T>::convert_real (d)) { }
 
   octave_int (float d) : ival (octave_int_base<T>::convert_real (d)) { }
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
   octave_int (long double d) : ival (octave_int_base<T>::convert_real (d)) { }
 #endif
 
   octave_int (bool b) : ival (b) { }
 
   template <typename U>
   octave_int (const U& i) : ival(octave_int_base<T>::truncate_int (i)) { }
 
@@ -1099,17 +1099,17 @@ typedef octave_int<int16_t> octave_int16
 typedef octave_int<int32_t> octave_int32;
 typedef octave_int<int64_t> octave_int64;
 
 typedef octave_int<uint8_t> octave_uint8;
 typedef octave_int<uint16_t> octave_uint16;
 typedef octave_int<uint32_t> octave_uint32;
 typedef octave_int<uint64_t> octave_uint64;
 
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 
 #define DECLARE_EXTERNAL_LONG_DOUBLE_OP(T, OP) \
   extern OCTAVE_API T \
   external_double_ ## T ## _ ## OP (double x, T y); \
   extern OCTAVE_API T \
   external_ ## T ## _double_ ## OP (T x, double y)
 
 #define DECLARE_EXTERNAL_LONG_DOUBLE_OPS(T) \
@@ -1128,19 +1128,19 @@ DECLARE_EXTERNAL_LONG_DOUBLE_OPS (octave
   inline octave_int<T> \
   operator OP (const octave_int<T>& x, const double& y) \
   { return octave_int<T> (static_cast<double> (x) OP y); } \
   template <typename T> \
   inline octave_int<T> \
   operator OP (const double& x, const octave_int<T>& y) \
   { return octave_int<T> (x OP static_cast<double> (y)); }
 
-#ifdef OCTAVE_INT_USE_LONG_DOUBLE
+#if defined (OCTAVE_INT_USE_LONG_DOUBLE)
 // Handle mixed op using long double
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#if defined (OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED)
 #  define OCTAVE_INT_DOUBLE_BIN_OP(OP, NAME) \
   OCTAVE_INT_DOUBLE_BIN_OP0(OP) \
   template <> \
   inline octave_int64 \
   operator OP (const double& x, const octave_int64& y) \
   { \
     return external_double_octave_int64_ ## NAME (x, y); \
   } \
diff --git a/liboctave/util/oct-locbuf.cc b/liboctave/util/oct-locbuf.cc
--- a/liboctave/util/oct-locbuf.cc
+++ b/liboctave/util/oct-locbuf.cc
@@ -15,28 +15,28 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 // FIXME: Maybe we should querying for available physical memory?
 
-#ifndef OCTAVE_LOCBUF_CHUNKSIZE_MB
+#if ! defined (OCTAVE_LOCBUF_CHUNKSIZE_MB)
 #  define OCTAVE_LOCBUF_CHUNKSIZE_MB 32
 #endif
 
 // Each chunk will be at least this big.
 
 const size_t octave_chunk_buffer::chunk_size =
   static_cast<size_t> (OCTAVE_LOCBUF_CHUNKSIZE_MB) << 20;
 
diff --git a/liboctave/util/oct-mutex.cc b/liboctave/util/oct-mutex.cc
--- a/liboctave/util/oct-mutex.cc
+++ b/liboctave/util/oct-mutex.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-mutex.h"
 #include "lo-error.h"
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
 #  include <windows.h>
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #if defined (USE_READLINE)
 
 #include <stdio.h>
 #include <stdlib.h>
 
diff --git a/liboctave/util/oct-rl-edit.h b/liboctave/util/oct-rl-edit.h
--- a/liboctave/util/oct-rl-edit.h
+++ b/liboctave/util/oct-rl-edit.h
@@ -40,17 +40,17 @@ typedef char * (*rl_completer_fcn_ptr) (
 typedef char * (*rl_quoting_fcn_ptr) (char *, int, char *);
 
 typedef char * (*rl_dequoting_fcn_ptr) (char *, int);
 
 typedef int (*rl_char_is_quoted_fcn_ptr) (char *, int);
 
 typedef int (*rl_command_fcn_ptr) (int, int);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C"
 {
 #endif
 
 extern void octave_rl_redisplay (void);
 
 extern int octave_rl_screen_height (void);
 
@@ -165,13 +165,13 @@ extern void octave_rl_initialize (void);
 extern int octave_rl_history_search_forward (int, int);
 
 extern int octave_rl_history_search_backward (int, int);
 
 extern int octave_rl_ctrl (char);
 
 extern int octave_rl_meta (char);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/util/oct-rl-hist.c b/liboctave/util/oct-rl-hist.c
--- a/liboctave/util/oct-rl-hist.c
+++ b/liboctave/util/oct-rl-hist.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "oct-rl-hist.h"
 
 #if defined (USE_READLINE)
 
 #include <stdio.h>
diff --git a/liboctave/util/oct-rl-hist.h b/liboctave/util/oct-rl-hist.h
--- a/liboctave/util/oct-rl-hist.h
+++ b/liboctave/util/oct-rl-hist.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_oct_rl_hist_h)
 #define octave_oct_rl_hist_h 1
 
 #include "octave-config.h"
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 extern "C"
 {
 #endif
 
 enum {
   HC_IGNSPACE = 0x01,
   HC_IGNDUPS = 0x02,
   HC_ERASEDUPS = 0x04
@@ -73,13 +73,13 @@ extern void octave_clear_history (void);
 extern char *octave_history_goto_mark (int n);
 
 extern char *octave_history_get (int n);
 
 extern char **octave_history_list (int, int);
 
 extern void octave_replace_history_entry (int, const char *);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <map>
 
 #if defined (HAVE_SHL_LOAD_API)
 #  include <cerrno>
 #  include <cstring>
diff --git a/liboctave/util/oct-sort.cc b/liboctave/util/oct-sort.cc
--- a/liboctave/util/oct-sort.cc
+++ b/liboctave/util/oct-sort.cc
@@ -1502,40 +1502,40 @@ octave_sort<T>::sort (T *data, octave_id
       merge_force_collapse (data, idx, comp);
     }
 }
 
 template <typename T>
 void
 octave_sort<T>::sort (T *data, octave_idx_type nel)
 {
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     sort (data, nel, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       sort (data, nel, std::greater<T> ());
     else
 #endif
       if (compare)
         sort (data, nel, compare);
 }
 
 template <typename T>
 void
 octave_sort<T>::sort (T *data, octave_idx_type *idx, octave_idx_type nel)
 {
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     sort (data, idx, nel, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       sort (data, idx, nel, std::greater<T> ());
     else
 #endif
       if (compare)
         sort (data, idx, nel, compare);
 }
 
@@ -1560,22 +1560,22 @@ octave_sort<T>::is_sorted (const T *data
   return data == end;
 }
 
 template <typename T>
 bool
 octave_sort<T>::is_sorted (const T *data, octave_idx_type nel)
 {
   bool retval = false;
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     retval = is_sorted (data, nel, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       retval = is_sorted (data, nel, std::greater<T> ());
     else
 #endif
       if (compare)
         retval = is_sorted (data, nel, compare);
 
   return retval;
@@ -1649,22 +1649,22 @@ octave_sort<T>::sort_rows (const T *data
     }
 }
 
 template <typename T>
 void
 octave_sort<T>::sort_rows (const T *data, octave_idx_type *idx,
                            octave_idx_type rows, octave_idx_type cols)
 {
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     sort_rows (data, idx, rows, cols, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       sort_rows (data, idx, rows, cols, std::greater<T> ());
     else
 #endif
       if (compare)
         sort_rows (data, idx, rows, cols, compare);
 }
 
@@ -1728,22 +1728,22 @@ octave_sort<T>::is_sorted_rows (const T 
 
 template <typename T>
 bool
 octave_sort<T>::is_sorted_rows (const T *data, octave_idx_type rows,
                                 octave_idx_type cols)
 {
   bool retval = false;
 
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     retval = is_sorted_rows (data, rows, cols, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       retval = is_sorted_rows (data, rows, cols, std::greater<T> ());
     else
 #endif
       if (compare)
         retval = is_sorted_rows (data, rows, cols, compare);
 
   return retval;
@@ -1774,22 +1774,22 @@ octave_sort<T>::lookup (const T *data, o
 
 template <typename T>
 octave_idx_type
 octave_sort<T>::lookup (const T *data, octave_idx_type nel,
                         const T& value)
 {
   octave_idx_type retval = 0;
 
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     retval = lookup (data, nel, value, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       retval = lookup (data, nel, value, std::greater<T> ());
     else
 #endif
       if (compare)
         retval = lookup (data, nel, value, std::ptr_fun (compare));
 
   return retval;
@@ -1810,22 +1810,22 @@ octave_sort<T>::lookup (const T *data, o
 }
 
 template <typename T>
 void
 octave_sort<T>::lookup (const T *data, octave_idx_type nel,
                         const T* values, octave_idx_type nvalues,
                         octave_idx_type *idx)
 {
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     lookup (data, nel, values, nvalues, idx, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       lookup (data, nel, values, nvalues, idx, std::greater<T> ());
     else
 #endif
       if (compare)
         lookup (data, nel, values, nvalues, idx, std::ptr_fun (compare));
 }
 
@@ -1885,22 +1885,22 @@ octave_sort<T>::lookup_sorted (const T *
 }
 
 template <typename T>
 void
 octave_sort<T>::lookup_sorted (const T *data, octave_idx_type nel,
                                const T* values, octave_idx_type nvalues,
                                octave_idx_type *idx, bool rev)
 {
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     lookup_sorted (data, nel, values, nvalues, idx, rev, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       lookup_sorted (data, nel, values, nvalues, idx, rev, std::greater<T> ());
     else
 #endif
       if (compare)
         lookup_sorted (data, nel, values, nvalues, idx, rev,
                        std::ptr_fun (compare));
 }
@@ -1934,22 +1934,22 @@ octave_sort<T>::nth_element (T *data, oc
 
 template <typename T>
 void
 octave_sort<T>::nth_element (T *data, octave_idx_type nel,
                              octave_idx_type lo, octave_idx_type up)
 {
   if (up < 0)
     up = lo + 1;
-#ifdef INLINE_ASCENDING_SORT
+#if defined (INLINE_ASCENDING_SORT)
   if (compare == ascending_compare)
     nth_element (data, nel, lo, up, std::less<T> ());
   else
 #endif
-#ifdef INLINE_DESCENDING_SORT
+#if defined (INLINE_DESCENDING_SORT)
     if (compare == descending_compare)
       nth_element (data, nel, lo, up, std::greater<T> ());
     else
 #endif
       if (compare)
         nth_element (data, nel, lo, up, std::ptr_fun (compare));
 }
 
diff --git a/liboctave/util/pathsearch.cc b/liboctave/util/pathsearch.cc
--- a/liboctave/util/pathsearch.cc
+++ b/liboctave/util/pathsearch.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <string>
 
 #include "lo-utils.h"
diff --git a/liboctave/util/singleton-cleanup.cc b/liboctave/util/singleton-cleanup.cc
--- a/liboctave/util/singleton-cleanup.cc
+++ b/liboctave/util/singleton-cleanup.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <lo-error.h>
 #include <singleton-cleanup.h>
 
 singleton_cleanup_list *singleton_cleanup_list::instance = 0;
 
diff --git a/liboctave/util/sparse-sort.cc b/liboctave/util/sparse-sort.cc
--- a/liboctave/util/sparse-sort.cc
+++ b/liboctave/util/sparse-sort.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cassert>
 #include <cstring>
 
 #include "oct-sort.cc"
 #include "quit.h"
diff --git a/liboctave/util/sparse-util.cc b/liboctave/util/sparse-util.cc
--- a/liboctave/util/sparse-util.cc
+++ b/liboctave/util/sparse-util.cc
@@ -16,31 +16,31 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <stdio.h>
 #include <stdarg.h>
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "sparse-util.h"
 
 static inline void
 sparse_chol_error_internal (int status, const char *file,
                             int line, const char *message)
 {
-#ifdef HAVE_CHOLMOD
+#if defined (HAVE_CHOLMOD)
 
   // Ignore CHOLMOD_NOT_POSDEF, since we handle that in Fchol as an
   // error or exit status.
   if (status != CHOLMOD_NOT_POSDEF)
     (*current_liboctave_warning_with_id_handler)
       ("Octave:cholmod-message", "warning %i, at line %i in file %s: %s",
        status, line, file, message);
 
diff --git a/liboctave/util/statdefs.h b/liboctave/util/statdefs.h
--- a/liboctave/util/statdefs.h
+++ b/liboctave/util/statdefs.h
@@ -22,22 +22,22 @@ along with Octave; see the file COPYING.
 
 #if ! defined (octave_statdefs_h)
 #define octave_statdefs_h 1
 
 #include "octave-config.h"
 
 #include <sys/types.h>
 
-#ifdef HAVE_SYS_STAT_H
+#if defined (HAVE_SYS_STAT_H)
 #  include <sys/stat.h>
 #endif
 
-#ifndef S_ISREG
-#  ifndef mode_t
+#if ! defined (S_ISREG)
+#  if ! defined (mode_t)
 #    define mode_t unsigned short
 #  endif
 #endif
 #if ! defined (S_ISBLK) && defined (S_IFBLK)
 #  define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
 #endif
 #if ! defined (S_ISCHR) && defined (S_IFCHR)
 #  define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)
@@ -60,13 +60,13 @@ along with Octave; see the file COPYING.
 #if ! defined (S_ISMPB) && defined (S_IFMPB)
 #  define S_ISMPB(m) (((m) & S_IFMT) == S_IFMPB)
 #  define S_ISMPC(m) (((m) & S_IFMT) == S_IFMPC)
 #endif
 #if ! defined (S_ISNWK) && defined (S_IFNWK)
 #  define S_ISNWK(m) (((m) & S_IFMT) == S_IFNWK)
 #endif
 
-#ifndef S_ISLNK
+#if ! defined (S_ISLNK)
 #  undef HAVE_LSTAT
 #endif
 
 #endif
diff --git a/liboctave/util/str-vec.cc b/liboctave/util/str-vec.cc
--- a/liboctave/util/str-vec.cc
+++ b/liboctave/util/str-vec.cc
@@ -23,17 +23,17 @@ along with Octave; see the file COPYING.
 /*
 
 The function string_vector::list_in_columns was adapted from a similar
 function distributed in the GNU file utilities, copyright (C) 85, 88,
 90, 91, 95, 1996 Free Software Foundation, Inc.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "cmd-edit.h"
 #include "lo-utils.h"
diff --git a/liboctave/util/unwind-prot.cc b/liboctave/util/unwind-prot.cc
--- a/liboctave/util/unwind-prot.cc
+++ b/liboctave/util/unwind-prot.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "lo-error.h"
 #include "unwind-prot.h"
 
 void
 unwind_protect_safe::warn_unhandled_exception (void) const
diff --git a/liboctave/util/url-transfer.cc b/liboctave/util/url-transfer.cc
--- a/liboctave/util/url-transfer.cc
+++ b/liboctave/util/url-transfer.cc
@@ -20,31 +20,31 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Alexander Barth <abarth@marine.usf.edu>
 // Author: jwe
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "unwind-prot.h"
 #include "url-transfer.h"
 
-#ifdef HAVE_CURL
+#if defined (HAVE_CURL)
 #  include <curl/curl.h>
 #  include <curl/curlver.h>
 #  include <curl/easy.h>
 #endif
 
 void
 base_url_transfer::delete_file (const std::string& file)
 {
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -374,17 +374,17 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_FORTRAN_ISNA
 dnl
 dnl Check if function gluTessCallback is called with "(...)".
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS], [
   AC_CACHE_CHECK([whether gluTessCallback is called with "(...)"],
     [octave_cv_func_glutesscallback_threedots],
     [AC_LANG_PUSH(C++)
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-        #ifdef HAVE_GL_GLU_H
+        #if defined (HAVE_GL_GLU_H)
         # include <GL/glu.h>
         #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
         # include <OpenGL/glu.h>
         #endif
         ]], [[
         GLvoid (*func)(...);
         gluTessCallback(0, 0, func);
         ]])],
@@ -981,30 +981,30 @@ AC_DEFUN([OCTAVE_CHECK_LIB_OPENGL], [
       *-*-mingw32* | *-*-msdosmsvc)
         AC_CHECK_HEADERS([windows.h])
       ;;
     esac
     have_opengl_incs=no
     AC_CHECK_HEADERS([GL/gl.h OpenGL/gl.h],
       [AC_CHECK_HEADERS([GL/glu.h OpenGL/glu.h],
         [have_opengl_incs=yes; break], [], [
-#ifdef HAVE_WINDOWS_H
+#if defined (HAVE_WINDOWS_H)
 #include <windows.h>
 #endif
       ])
       break
       ], [], [
-#ifdef HAVE_WINDOWS_H
+#if defined (HAVE_WINDOWS_H)
 # include <windows.h>
 #endif
     ])
 
     if test $have_opengl_incs = yes; then
       AC_CHECK_HEADERS([GL/glext.h OpenGL/glext.h], [], [], [
-#ifdef HAVE_WINDOWS_H
+#if defined (HAVE_WINDOWS_H)
 # include <windows.h>
 #endif
 #if defined (HAVE_GL_GL_H)
 # include <GL/gl.h>
 #elif defined (HAVE_OPENGL_GL_H)
 # include <OpenGL/gl.h>
 #endif
       ])
@@ -1075,17 +1075,17 @@ AC_DEFUN([OCTAVE_CHECK_LIB_QHULL_OK], [
         # else
         #  include <qhull.h>
         # endif
         # include <qset.h>
         # include <geom.h>
         # include <poly.h>
         # include <io.h>
         #endif
-        #ifdef NEED_QHULL_VERSION
+        #if defined (NEED_QHULL_VERSION)
           char *qh_version = "version";
         #endif
         ]], [[
         int dim = 2;
         int n = 4;
         coordT points[8] = { -0.5, -0.5, -0.5, 0.5, 0.5, -0.5, 0.5, 0.5 };
         boolT ismalloc = 0;
         return qh_new_qhull (dim, n, points, ismalloc, "qhull ", 0, stderr);
@@ -1213,17 +1213,17 @@ AC_DEFUN([OCTAVE_CHECK_QT_OPENGL_OK], [
          #if HAVE_WINDOWS_H
          # include <windows.h>
          #endif
          #if defined (HAVE_GL_GL_H)
          # include <GL/gl.h>
          #elif defined (HAVE_OPENGL_GL_H)
          # include <OpenGL/gl.h>
          #endif
-         #ifdef HAVE_GL_GLU_H
+         #if defined (HAVE_GL_GLU_H)
          # include <GL/glu.h>
          #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
          # include <OpenGL/glu.h>
          #endif
          #include <QGLWidget>
          class gl_widget : public QGLWidget
          {
          public:
@@ -1268,17 +1268,17 @@ AC_DEFUN([OCTAVE_CHECK_SIZEOF_FORTRAN_IN
       [mv conftest.$ac_objext fintsize.$ac_objext
       ac_octave_save_LIBS="$LIBS"
       LIBS="fintsize.$ac_objext $[]_AC_LANG_PREFIX[]LIBS"
       AC_LANG_PUSH(C)
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
           #include <assert.h>
           #include <stdint.h>
           ]], [[
-          #ifdef OCTAVE_ENABLE_64
+          #if defined (OCTAVE_ENABLE_64)
             typedef int64_t octave_idx_type;
           #else
             typedef int octave_idx_type;
           #endif
           octave_idx_type n = 2;
           octave_idx_type in[2];
           octave_idx_type out[2];
           in[0] = 13;
@@ -1688,17 +1688,17 @@ dnl
 dnl Check for CallInst::addAttribute API
 dnl
 AC_DEFUN([OCTAVE_LLVM_CALLINST_ADDATTRIBUTE_API], [
   AC_CACHE_CHECK([check LLVM::CallInst::addAttribute arg type is llvm::Attributes],
     [octave_cv_callinst_addattribute_arg_is_attributes],
     [AC_LANG_PUSH(C++)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
           #include <llvm/IR/Instructions.h>
           #include <llvm/IR/Attributes.h>
 #else
           #include <llvm/Instructions.h>
           #include <llvm/Attributes.h>
 #endif
           ]], [[
           llvm::CallInst *callinst;
@@ -1720,17 +1720,17 @@ dnl
 dnl Check for Function::addAttribute API
 dnl
 AC_DEFUN([OCTAVE_LLVM_FUNCTION_ADDATTRIBUTE_API], [
   AC_CACHE_CHECK([check llvm::Function::addAttribute arg type is llvm::Attributes],
     [octave_cv_function_addattribute_arg_is_attributes],
     [AC_LANG_PUSH(C++)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
           #include <llvm/IR/Function.h>
           #include <llvm/IR/Attributes.h>
           #include <llvm/IR/LLVMContext.h>
 #else
           #include <llvm/Function.h>
           #include <llvm/Attributes.h>
           #include <llvm/LLVMContext.h>
 #endif
@@ -1754,17 +1754,17 @@ dnl
 dnl Check for Function::addFnAttr API
 dnl
 AC_DEFUN([OCTAVE_LLVM_FUNCTION_ADDFNATTR_API], [
   AC_CACHE_CHECK([check LLVM::Function::addFnAttr arg type is llvm::Attributes],
     [octave_cv_function_addfnattr_arg_is_attributes],
     [AC_LANG_PUSH(C++)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[
-#ifdef HAVE_LLVM_IR_FUNCTION_H
+#if defined (HAVE_LLVM_IR_FUNCTION_H)
           #include <llvm/IR/Function.h>
           #include <llvm/IR/Attributes.h>
 #else
           #include <llvm/Function.h>
           #include <llvm/Attributes.h>
 #endif
           ]], [[
           llvm::Function *llvm_function;
@@ -2338,17 +2338,17 @@ AC_DEFUN([OCTAVE_UMFPACK_SEPARATE_SPLIT]
         # include <suitesparse/umfpack.h>
         #elif defined (HAVE_UFSPARSE_UMFPACK_H)
         # include <ufsparse/umfpack.h>
         #elif defined (HAVE_UMFPACK_UMFPACK_H)
         # include <umfpack/umfpack.h>
         #elif defined (HAVE_UMFPACK_H)
         # include <umfpack.h>
         #endif
-        #ifdef OCTAVE_ENABLE_64
+        #if defined (OCTAVE_ENABLE_64)
         typedef uint64_t idx_type;
         #define UMFPACK_NAME(name) umfpack_zl_ ## name
         #else
         typedef int idx_type;
         #define UMFPACK_NAME(name) umfpack_zi_ ## name
         #endif
         idx_type n = 5;
         idx_type Ap[] = {0, 2, 5, 9, 10, 12};
diff --git a/src/display-available.c b/src/display-available.c
--- a/src/display-available.c
+++ b/src/display-available.c
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #include "config.h"
 #endif
 
 #include <stdlib.h>
 
 #if defined (OCTAVE_USE_WINDOWS_API)
 #include <windows.h>
 #elif defined (HAVE_FRAMEWORK_CARBON)
diff --git a/src/display-available.h b/src/display-available.h
--- a/src/display-available.h
+++ b/src/display-available.h
@@ -18,20 +18,20 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_display_available_h)
 #define octave_display_available_h 1
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 #  include <new>
 extern "C" {
 #endif
 
 extern const char *display_available (int *dpy_avail);
 
-#ifdef __cplusplus
+#if defined (__cplusplus)
 }
 #endif
 
 #endif
diff --git a/src/main-cli.cc b/src/main-cli.cc
--- a/src/main-cli.cc
+++ b/src/main-cli.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <iostream>
 #include <string>
 
diff --git a/src/main-gui.cc b/src/main-gui.cc
--- a/src/main-gui.cc
+++ b/src/main-gui.cc
@@ -15,17 +15,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 
 #include <iostream>
 #include <string>
 
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -23,43 +23,43 @@ along with Octave; see the file COPYING.
 
 // NOTE: This program is supposed to be a small wrapper that exists
 // primarily to give up the controlling TTY and then exec Octave with
 // its GUI.  It may also execute Octave without the GUI or the command
 // line version of Octave that is not linked with GUI libraries.  So
 // that it remains small, it should NOT depend on or be linked with
 // liboctave or libinterp.
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <algorithm>
 #include <iostream>
 #include <string>
 
 #include <sys/types.h>
 #include <unistd.h>
 
-#ifndef OCTAVE_VERSION
+#if ! defined (OCTAVE_VERSION)
 #  define OCTAVE_VERSION %OCTAVE_VERSION%
 #endif
 
-#ifndef OCTAVE_ARCHLIBDIR
+#if ! defined (OCTAVE_ARCHLIBDIR)
 #  define OCTAVE_ARCHLIBDIR %OCTAVE_ARCHLIBDIR%
 #endif
 
-#ifndef OCTAVE_BINDIR
+#if ! defined (OCTAVE_BINDIR)
 #  define OCTAVE_BINDIR %OCTAVE_BINDIR%
 #endif
 
-#ifndef OCTAVE_PREFIX
+#if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
 #include "display-available.h"
 #include "shared-fcns.h"
 
 #include <cstdlib>
 
@@ -103,128 +103,128 @@ octave_set_signal_handler (int sig, sig_
 
   return oact.sa_handler;
 }
 
 static void
 install_signal_handlers (void)
 {
 
-#ifdef SIGINT
+#if defined (SIGINT)
   octave_set_signal_handler (SIGINT, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGBREAK
+#if defined (SIGBREAK)
   octave_set_signal_handler (SIGBREAK, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGABRT
+#if defined (SIGABRT)
   octave_set_signal_handler (SIGABRT, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGALRM
+#if defined (SIGALRM)
   octave_set_signal_handler (SIGALRM, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGBUS
+#if defined (SIGBUS)
   octave_set_signal_handler (SIGBUS, gui_driver_sig_handler);
 #endif
 
   // SIGCHLD
   // SIGCLD
   // SIGCONT
 
-#ifdef SIGEMT
+#if defined (SIGEMT)
   octave_set_signal_handler (SIGEMT, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGFPE
+#if defined (SIGFPE)
   octave_set_signal_handler (SIGFPE, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGHUP
+#if defined (SIGHUP)
   octave_set_signal_handler (SIGHUP, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGILL
+#if defined (SIGILL)
   octave_set_signal_handler (SIGILL, gui_driver_sig_handler);
 #endif
 
   // SIGINFO
   // SIGINT
 
-#ifdef SIGIOT
+#if defined (SIGIOT)
   octave_set_signal_handler (SIGIOT, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGLOST
+#if defined (SIGLOST)
   octave_set_signal_handler (SIGLOST, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGPIPE
+#if defined (SIGPIPE)
   octave_set_signal_handler (SIGPIPE, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGPOLL
+#if defined (SIGPOLL)
   octave_set_signal_handler (SIGPOLL, gui_driver_sig_handler);
 #endif
 
   // SIGPROF
   // SIGPWR
 
-#ifdef SIGQUIT
+#if defined (SIGQUIT)
   octave_set_signal_handler (SIGQUIT, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGSEGV
+#if defined (SIGSEGV)
   octave_set_signal_handler (SIGSEGV, gui_driver_sig_handler);
 #endif
 
   // SIGSTOP
 
-#ifdef SIGSYS
+#if defined (SIGSYS)
   octave_set_signal_handler (SIGSYS, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGTERM
+#if defined (SIGTERM)
   octave_set_signal_handler (SIGTERM, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGTRAP
+#if defined (SIGTRAP)
   octave_set_signal_handler (SIGTRAP, gui_driver_sig_handler);
 #endif
 
   // SIGTSTP
   // SIGTTIN
   // SIGTTOU
   // SIGURG
 
-#ifdef SIGUSR1
+#if defined (SIGUSR1)
   octave_set_signal_handler (SIGUSR1, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGUSR2
+#if defined (SIGUSR2)
   octave_set_signal_handler (SIGUSR2, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGVTALRM
+#if defined (SIGVTALRM)
   octave_set_signal_handler (SIGVTALRM, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGIO
+#if defined (SIGIO)
   octave_set_signal_handler (SIGIO, gui_driver_sig_handler);
 #endif
 
   // SIGWINCH
 
-#ifdef SIGXCPU
+#if defined (SIGXCPU)
   octave_set_signal_handler (SIGXCPU, gui_driver_sig_handler);
 #endif
 
-#ifdef SIGXFSZ
+#if defined (SIGXFSZ)
   octave_set_signal_handler (SIGXFSZ, gui_driver_sig_handler);
 #endif
 
 }
 
 static bool
 have_controlling_terminal (void)
 {
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -40,31 +40,31 @@ along with Octave; see the file COPYING.
 // This mess suggested by the autoconf manual.
 
 #include <sys/types.h>
 
 #if defined HAVE_SYS_WAIT_H
 #  include <sys/wait.h>
 #endif
 
-#ifndef WIFEXITED
+#if ! defined (WIFEXITED)
 #  define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
 #endif
 
-#ifndef WEXITSTATUS
+#if ! defined (WEXITSTATUS)
 #  define WEXITSTATUS(stat_val) (static_cast<unsigned> (stat_val) >> 8)
 #endif
 
 static std::map<std::string, std::string> vars;
 
-#ifndef OCTAVE_VERSION
+#if ! defined (OCTAVE_VERSION)
 #  define OCTAVE_VERSION %OCTAVE_CONF_VERSION%
 #endif
 
-#ifndef OCTAVE_PREFIX
+#if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_CONF_PREFIX%
 #endif
 
 #include "shared-fcns.h"
 
 static std::string
 get_line (FILE *fp)
 {
@@ -309,17 +309,17 @@ static std::string help_msg =
 "                            .C    C++ source\n"
 "                            .cpp  C++ source\n"
 "                            .f    Fortran source (fixed form)\n"
 "                            .F    Fortran source (fixed form)\n"
 "                            .f90  Fortran source (free form)\n"
 "                            .F90  Fortran source (free form)\n"
 "                            .o    object file\n"
 "                            .a    library file\n"
-#ifdef _MSC_VER
+#if defined (_MSC_VER)
 "                            .lib  library file\n"
 #endif
 "\n";
 
 static std::string
 basename (const std::string& s, bool strip_path = false)
 {
   std::string retval;
@@ -536,17 +536,17 @@ main (int argc, char **argv)
         }
       else if (arg == "-link-stand-alone" || arg == "--link-stand-alone")
         {
           link_stand_alone = true;
         }
       else if (arg == "-mex" || arg == "--mex")
         {
           incflags += " -I.";
-#ifdef _MSC_VER
+#if defined (_MSC_VER)
           ldflags += " -Wl,-export:mexFunction";
 #endif
           output_ext = ".mex";
         }
       else if (starts_with (arg, "-W"))
         {
           pass_on_options += (" " + arg);
         }
diff --git a/src/octave-build-info.in.cc b/src/octave-build-info.in.cc
--- a/src/octave-build-info.in.cc
+++ b/src/octave-build-info.in.cc
@@ -16,17 +16,17 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
+#if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include "octave-build-info.h"
 
 std::string
 octave_hg_id (void)
 {
diff --git a/src/octave-config.in.cc b/src/octave-config.in.cc
--- a/src/octave-config.in.cc
+++ b/src/octave-config.in.cc
@@ -26,17 +26,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <string>
 #include <map>
 #include <iostream>
 #include <algorithm>
 #include <cstdlib>
 
-#ifndef OCTAVE_PREFIX
+#if ! defined (OCTAVE_PREFIX)
 #  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
 #include "shared-fcns.h"
 
 static std::map<std::string,std::string> vars;
 
 static std::string usage_msg = "usage: octave-config [options]";
diff --git a/src/shared-fcns.h b/src/shared-fcns.h
--- a/src/shared-fcns.h
+++ b/src/shared-fcns.h
@@ -23,30 +23,30 @@ along with Octave; see the file COPYING.
 #if ! defined (octave_shared_fcns_h)
 #define octave_shared_fcns_h 1
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #include <windows.h>
 #include <tlhelp32.h>
 
-#ifdef _MSC_VER
+#if defined (_MSC_VER)
 #  define popen _popen
 #  define pclose _pclose
 #endif
 
 static std::string
 w32_get_octave_home (void)
 {
   std::string retval;
 
   std::string bin_dir;
 
   HANDLE h = CreateToolhelp32Snapshot (TH32CS_SNAPMODULE
-#ifdef TH32CS_SNAPMODULE32
+#if defined (TH32CS_SNAPMODULE32)
                                        | TH32CS_SNAPMODULE32
 #endif
                                        , 0);
 
   if (h != INVALID_HANDLE_VALUE)
     {
       MODULEENTRY32 mod_info;
 
