# HG changeset patch
# User jwe
# Date 1196134197 0
#      Tue Nov 27 03:29:57 2007 +0000
# Node ID cd6ceb8cbf095baf68c8c10734e7a897542937d3
# Parent  4555c116b42084e4c2436dd2778a41d0da07f930
[project @ 2007-11-27 03:29:57 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2007-11-26  John W. Eaton  <jwe@octave.org>
 
+	* oct-stream.cc (DO_DOUBLE_CONV): Always use long.
+
 	* oct-stream.cc (do_write): Call float_value and double_value on
 	octave_int<T> objects instead of relying on conversion operators.
 
 	* ls-mat5.cc (read_mat5_binary_element, OCTAVE_MAT5_INTEGER_READ): 
 	Call double_value on octave_int<T> objects
 	instead of relying on conversion operator.
 	(read_mat5_binary_file_header): 
 	Call char_value on octave_int<T> objects
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -2486,49 +2486,32 @@ do_printf_conv (std::ostream&, const cha
 
 template int
 do_printf_conv (std::ostream&, const char*, int, int, int, const char*,
 		const std::string&);
 
 #define DO_DOUBLE_CONV(TQUAL) \
   do \
     { \
-      if (elt->modifier == 'l') \
+      if (val > std::numeric_limits<TQUAL long>::max () \
+	  || val < std::numeric_limits<TQUAL long>::min ()) \
 	{ \
-	  if (val > std::numeric_limits<TQUAL long>::max () \
-	      || val < std::numeric_limits<TQUAL long>::min ()) \
-	    { \
-	      std::string tfmt = fmt; \
+	  std::string tfmt = fmt; \
  \
-	      tfmt.replace (tfmt.rfind (elt->type), 1, ".f"); \
-	      tfmt.replace (tfmt.rfind (elt->modifier), 1, ""); \
+	  tfmt.replace (tfmt.rfind (elt->type), 1, ".f"); \
  \
-	      retval += do_printf_conv (os, tfmt.c_str (), nsa, sa_1, sa_2, \
-					val, who); \
-	    } \
-	  else \
-	    retval += do_printf_conv (os, fmt, nsa, sa_1, sa_2, \
-				      static_cast<TQUAL long> (val), who); \
+	  if (elt->modifier == 'l') \
+	    tfmt.replace (tfmt.rfind (elt->modifier), 1, ""); \
+ \
+	  retval += do_printf_conv (os, tfmt.c_str (), nsa, sa_1, sa_2, \
+				    val, who); \
 	} \
       else \
-	{ \
-	  if (val > std::numeric_limits<TQUAL int>::max () \
-	      || val < std::numeric_limits<TQUAL int>::min ()) \
-	    { \
-	      std::string tfmt = fmt; \
- \
-	      tfmt.replace (tfmt.rfind (elt->type), 1, ".f"); \
- \
-	      retval += do_printf_conv (os, tfmt.c_str (), nsa, sa_1, sa_2, \
-					val, who); \
-	    } \
-	  else \
-	    retval += do_printf_conv (os, fmt, nsa, sa_1, sa_2, \
-				      static_cast<TQUAL int> (val), who); \
-	} \
+	retval += do_printf_conv (os, fmt, nsa, sa_1, sa_2, \
+				  static_cast<TQUAL long> (val), who); \
     } \
   while (0)
 
 int
 octave_base_stream::do_printf (printf_format_list& fmt_list,
 			       const octave_value_list& args,
 			       const std::string& who)
 {
@@ -2630,17 +2613,17 @@ octave_base_stream::do_printf (printf_fo
 			}
 		      else
 			{
 			  char type = elt->type;
 
 			  switch (type)
 			    {
 			    case 'd': case 'i': case 'c':
-			      DO_DOUBLE_CONV ( );
+			      DO_DOUBLE_CONV ();
 			      break;
 
 			    case 'o': case 'x': case 'X': case 'u':
 			      DO_DOUBLE_CONV (unsigned);
 			      break;
 
 			    case 'f': case 'e': case 'E':
 			    case 'g': case 'G':
