# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1218572813 14400
#      Tue Aug 12 16:26:53 2008 -0400
# Node ID 2fd4a5ef6b593a531f248d25341e7e25d4d979e3
# Parent  d9987dbdf91bfa615f784733ac7e940d9ac921b8
stash parent function scope for inline functions and anonymous function handles.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,15 @@
 2008-08-12  John W. Eaton  <jwe@octave.org>
 
+	* pt-fcn-handle.cc (tree_anon_fcn_handle::rvalue):
+	Call stash_parent_function_scope for user function.
+	* ov-fcn-inline.cc (octave_fcn_inline::octave_fcn_inline): 
+	Likewise.
+
 	* ov-struct.cc (octave_struct::subsref): Don't allow resizing for
 	simple x(idx) case.
 
 2008-08-07  John W. Eaton  <jwe@octave.org>
 
 	* ov.cc (octave_value::idx_type_value): Don't include default
 	argument values in definition.
 
diff --git a/src/ov-fcn-inline.cc b/src/ov-fcn-inline.cc
--- a/src/ov-fcn-inline.cc
+++ b/src/ov-fcn-inline.cc
@@ -34,19 +34,21 @@ Open Source Initiative (www.opensource.o
 #include <vector>
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-map.h"
 #include "ov-base.h"
 #include "ov-fcn-inline.h"
+#include "ov-usr-fcn.h"
 #include "pr-output.h"
 #include "variables.h"
 #include "parse.h"
+#include "toplev.h"
 
 #include "byte-swap.h"
 #include "ls-oct-ascii.h"
 #include "ls-hdf5.h"
 #include "ls-utils.h"
 
 DEFINE_OCTAVE_ALLOCATOR (octave_fcn_inline);
 
@@ -78,17 +80,24 @@ octave_fcn_inline::octave_fcn_inline (co
   int parse_status;
   octave_value anon_fcn_handle = eval_string (buf.str (), true, parse_status);
 
   if (parse_status == 0)
     {
       octave_fcn_handle *fh = anon_fcn_handle.fcn_handle_value ();
 
       if (fh)
-	fcn = fh->fcn_val ();
+	{
+	  fcn = fh->fcn_val ();
+
+	  octave_user_function *uf = fcn.user_function_value ();
+
+	  if (uf)
+	    uf->stash_parent_fcn_scope (octave_call_stack::current_scope ());
+	}
     }
 
   if (fcn.is_undefined ())
     error ("inline: unable to define function");
 }
 
 // This function is supplied to allow a Matlab style class structure
 // to be returned..
diff --git a/src/pt-fcn-handle.cc b/src/pt-fcn-handle.cc
--- a/src/pt-fcn-handle.cc
+++ b/src/pt-fcn-handle.cc
@@ -107,17 +107,20 @@ tree_anon_fcn_handle::rvalue (void)
     = new octave_user_function (new_scope,
 				param_list ? param_list->dup (new_scope, 0) : 0,
 				ret_list ? ret_list->dup (new_scope, 0) : 0,
 				cmd_list ? cmd_list->dup (new_scope, 0) : 0);
 
   octave_function *curr_fcn = octave_call_stack::current ();
 
   if (curr_fcn)
-    uf->stash_parent_fcn_name (curr_fcn->name ());
+    {
+      uf->stash_parent_fcn_name (curr_fcn->name ());
+      uf->stash_parent_fcn_scope (curr_fcn->scope ());
+    }
 
   uf->mark_as_inline_function ();
 
   octave_value ov_fcn (uf);
 
   octave_value fh (new octave_fcn_handle (ov_fcn, "@<anonymous>"));
 
   return fh;
