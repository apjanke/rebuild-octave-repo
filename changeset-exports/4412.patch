# HG changeset patch
# User jwe
# Date 1052951017 0
#      Wed May 14 22:23:37 2003 +0000
# Node ID 34438519fac393307b637036b88ddc7253c81b9f
# Parent  cd14ff360ec81f1a87f1ca4a1b2a849635de25a6
[project @ 2003-05-14 22:23:37 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2003-05-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* kpse.cc (kpse_path_iterator::next): Skip consecutive colons here.
+	(kpse_path_iterator::set_end): Don't miss last element when not
+	followed by a colon.
+
 2003-05-11  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array-idx.h (Array<T>::index): Fix off-by-one error.
 
 2003-05-07  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* kpse.cc (kpse_absolute_p): Fix typo in translation.
 	(find_first_of): Also do an absolute search on each
diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -540,33 +540,39 @@ private:
   size_t b;
   size_t e;
   size_t len;
 
   void set_end (void)
     {
       e = b + 1;
 
-      if (e >= len)
+      if (e == len)
+	; /* OK, we have found the last element.  */
+      else if (e > len)
 	b = e = NPOS;
       else
 	{
 	  /* Find the next colon not enclosed by braces (or the end of
 	     the path).  */
 
 	  int brace_level = 0;
 	  while (e < len && ! (brace_level == 0 && kpse_is_env_sep (path[e])))
 	    e++;
 	}
     }
 
   void next (void)
     {
       b = e + 1;
 
+      /* Skip any consecutive colons.  */
+      while (kpse_is_env_sep (path[b]) && b < len)
+	b++;
+
       if (b >= len)
 	b = e = NPOS;
       else
 	set_end ();
     }
 };
 
 /* Here's the simple one, when a program just wants a value.  */
