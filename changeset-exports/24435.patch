# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1513760968 -3600
#      Wed Dec 20 10:09:28 2017 +0100
# Node ID e7624c23b1017d3ca4f194260a3dc7a2d4b28e5b
# Parent  436deae9f9abafdd17270e730b88efa3b204c7e3
Make use of "close" function to close Qt figures (bug #52698).

* Figure.h/cc (Figure::close_figure_callback): new callback method that calls
  "close" interpreted function.
  (Figure::eventNotifyBefore): make use of close_figure_callback to handle
  QEvent::Close.

diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -691,16 +691,25 @@ namespace QtHandles
     d->m_bbox = bb;
     d->m_internal = internal;
     d->m_handle = m_handle;
     d->m_figure = this;
 
     gh_manager::post_function (Figure::updateBoundingBoxHelper, d);
   }
 
+  void
+  Figure::close_figure_callback (void)
+  {
+    figure::properties& fp = properties<figure> ();
+    octave_value fnum = fp.get___myhandle__ ().as_octave_value ();
+    
+    Ffeval (ovl ("close", fnum));
+  }
+
   bool
   Figure::eventNotifyBefore (QObject *obj, QEvent *xevent)
   {
     if (! m_blockUpdates)
       {
         if (obj == m_container)
           {
             // Do nothing...
@@ -727,17 +736,17 @@ namespace QtHandles
               }
           }
         else
           {
             switch (xevent->type ())
               {
               case QEvent::Close:
                 xevent->ignore ();
-                gh_manager::post_callback (m_handle, "closerequestfcn");
+                octave_link::post_event (this, &Figure::close_figure_callback);
                 return true;
 
               default:
                 break;
               }
           }
       }
 
diff --git a/libgui/graphics/Figure.h b/libgui/graphics/Figure.h
--- a/libgui/graphics/Figure.h
+++ b/libgui/graphics/Figure.h
@@ -105,18 +105,19 @@ namespace QtHandles
     void showMenuBar (bool visible, int height = -1);
     void addCustomToolBar (QToolBar *bar, bool visible);
     void showCustomToolBar (QToolBar *bar, bool visible);
 
     void updateFigureToolBarAndMenuBar (void);
 
     static void updateBoundingBoxHelper (void*);
 
+    void close_figure_callback (void);
+    void copy_figure_callback (const std::string& format);
     void save_figure_callback (const std::string& file);
-    void copy_figure_callback (const std::string& format);
 
     void enableMouseTracking (void);
 
   private slots:
     void setMouseMode (MouseMode mode);
     void fileSaveFigure (bool prompt = false);
     void fileSaveFigureAs (void);
     void fileCloseFigure (void);
