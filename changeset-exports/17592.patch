# HG changeset patch
# User Rik <rik@octave.org>
# Date 1381190816 25200
#      Mon Oct 07 17:06:56 2013 -0700
# Node ID 28eb00d3edf449abb39c0253f93cd6fb2a0f15cb
# Parent  7c479b7d3aab423713e88fba2d169e3956799a98
edit.m: Work correctly for file names with '~'.

* scripts/miscellaneous/edit.m: Use tilde_expand() on base filename immediately
before proceeding to make a search list based off that filename.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -224,18 +224,18 @@ function ret = edit (varargin)
       case "GET"
         if (isfield (FUNCTION, toupper (stateval)))
           ret = FUNCTION.(toupper (stateval));
         else
           ret = FUNCTION;
         endif
         return;
       otherwise
-        ## If none of the states match, assume both inputs are
-        ## actually both file names to be opened
+        ## If none of the states match, assume both inputs are actually
+        ## file names to be opened.
         editfilelist = varargin;
     endswitch
   elseif (nargin > 2)
     if (iscellstr (varargin))
       editfilelist = varargin;
     else
       error ("edit: if supplying more than one input all inputs must be strings containing field names to open.");
     endif
@@ -262,17 +262,17 @@ function ret = edit (varargin)
     ## Call edit on each of the files in the list if there are more than 1
     for i = 1:numel (editfilelist)
       edit (editfilelist{i});
     endfor
 
   else
   
     ## Only one file name was supplied, get it from the cell array
-    file = editfilelist{1};
+    file = tilde_expand (editfilelist{1});
 
     ## Check whether the user is trying to edit a builtin or compiled function.
     switch (exist (file))
       case {3, 5}
         error ("edit: unable to edit a built-in or compiled function");
     endswitch
 
     ## Checks for whether the file is
@@ -295,30 +295,31 @@ function ret = edit (varargin)
 
     ## Create list of explicit and implicit file names.
     filelist = {file};
     ## If file has no extension, add file.m and file.cc to the list.
     idx = rindex (file, ".");
     if (idx == 0)
       if (isempty (regexp (file, '\.m$')))
         ## No ".m" at the end of the file, add to the list.
-        filelist{end+1} = [file ".m"];
+        filelist(end+1) = [file ".m"];
       endif
       if (isempty (regexp (file, '\.cc$')))
         ## No ".cc" at the end of the file, add to the list.
-        filelist{end+1} = [file ".cc"];
+        filelist(end+1) = [file ".cc"];
       endif
     endif
 
+    keyboard;
     ## If the file includes a path, it may be an overloaded function.
-    if (! strcmp (file, "@") && index (file, filesep))
+    if (! index (file, "@") && index (file, filesep))
       ## No "@" at the beginning of the file, add to the list.
       numfiles = numel (filelist);
       for n = 1:numfiles
-        filelist{n+numfiles} = ["@" filelist{n}];
+        filelist(n+numfiles) = ["@" filelist{n}];
       endfor
     endif
 
     ## Search the entire path for the 1st instance of a file in the list.
     fileandpath = "";
     for n = 1:numel (filelist)
       filetoedit = file_in_path (path, filelist{n});
       if (! isempty (filetoedit))
@@ -348,17 +349,17 @@ function ret = edit (varargin)
         else
           fclose (fid);
         endif
         do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
         return;
       endif
     endif
 
-    ## If editing a new file that is neither a m-file or an oct-file,
+    ## If editing a new file that is neither an m-file or an oct-file,
     ## just edit it.
     fileandpath = file;
     idx = rindex (file, ".");
     name = file(1:idx-1);
     ext = file(idx+1:end);
     if (! any (strcmp (ext, {"cc", "m"})))
       ## Some unknown file.  Just open it up.
       do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
