# HG changeset patch
# User Rik <rik@octave.org>
# Date 1371955652 25200
#      Sat Jun 22 19:47:32 2013 -0700
# Node ID 12005245b64537c6852384b033cafd199f20bc13
# Parent  7a97ff5ef42e4fe54ebabdcd931402c16f56ab3f
doc: Periodic grammarcheck of documentation.

* doc/interpreter/basics.txi, doc/interpreter/container.txi,
doc/interpreter/contrib.txi, doc/interpreter/diagperm.txi,
doc/interpreter/errors.txi, doc/interpreter/install.txi,
doc/interpreter/sparse.txi, libinterp/corefcn/ellipj.cc,
libinterp/corefcn/mappers.cc, libinterp/corefcn/regexp.cc,
libinterp/corefcn/tril.cc, libinterp/dldfcn/__init_fltk__.cc,
libinterp/dldfcn/fftw.cc, libinterp/interpfcn/dirfns.cc,
libinterp/interpfcn/input.cc, libinterp/octave-value/ov-fcn-inline.cc,
libinterp/octave-value/ov-struct.cc, scripts/@ftp/cd.m,
scripts/general/interp1.m, scripts/general/num2str.m, scripts/image/ind2rgb.m,
scripts/image/rgb2ind.m, scripts/io/importdata.m, scripts/io/textread.m,
scripts/java/javamem.m, scripts/linear-algebra/condest.m,
scripts/linear-algebra/onenormest.m, scripts/miscellaneous/error_ids.m,
scripts/miscellaneous/getfield.m, scripts/miscellaneous/setfield.m,
scripts/plot/area.m, scripts/plot/pcolor.m, scripts/plot/stairs.m,
scripts/set/powerset.m, scripts/sparse/bicg.m, scripts/sparse/bicgstab.m,
scripts/sparse/cgs.m, scripts/specfun/ellipke.m,
scripts/special-matrix/gallery.m, scripts/strings/strjoin.m,
scripts/strings/strsplit.m, scripts/testfun/__have_feature__.m,
scripts/testfun/__printf_assert__.m, scripts/testfun/__prog_output_assert__.m,
scripts/testfun/__run_test_suite__.m: grammarcheck documentation.

diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -267,17 +267,17 @@ Octave:fopen-file-in-path
 Octave:function-name-clash
 Octave:load-file-in-path
 @end group
 @end example
 
 @noindent
 Note that this does not enable the @code{Octave:matlab-incompatible}
 warning, which you might want if you want to be told about writing code
-that works in Octave but not Matlab (@pxref{docXwarning},
+that works in Octave but not @sc{matlab} (@pxref{docXwarning},
 @pxref{docXwarning_ids}).
 
 @item  --verbose
 @itemx -V
 @cindex @code{--verbose}
 @cindex @code{-V}
 Turn on verbose output.
 
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -33,17 +33,17 @@ another data container, the comma separa
 * Comma Separated Lists::
 @end menu
 
 @node Structures
 @section Structures
 @cindex structures
 @cindex data structures
 
-Octave includes support for organizing data in structures. The current
+Octave includes support for organizing data in structures.  The current
 implementation uses an associative array with indices limited to
 strings, but the syntax is more like C-style structures.
 
 @menu
 * Basic Usage and Examples::
 * Structure Arrays::
 * Creating Structures::
 * Manipulating Structures::
@@ -387,17 +387,17 @@ x
           a =  1
           field2 =  2
         @}
 @end group
 @end example
 
 @noindent
 Dynamic indexing also allows you to use arbitrary strings, not merely
-valid Octave identifiers (note that this does not work on @sc{Matlab}):
+valid Octave identifiers (note that this does not work on @sc{matlab}):
 
 @example
 @group
 a = "long field with spaces (and funny char$)";
 x.a = 1;
 x.(a) = 2;
 x
      @result{} x =
@@ -405,17 +405,17 @@ x
           a =  1
           long field with spaces (and funny char$) =  2
         @}
 @end group
 @end example
 
 @noindent
 The warning id @code{Octave:matlab-incompatible} can be enabled to warn
-about this usage. @xref{docXwarning_ids}.
+about this usage.  @xref{docXwarning_ids}.
 
 More realistically, all of the functions that operate on strings can be used
 to build the correct field name before it is entered into the data structure.
 
 @example
 @group
 names = ["Bill"; "Mary"; "John"];
 ages  = [37; 26; 31];
diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -84,23 +84,25 @@ hg commit -m "make Octave the coolest so
 hg export -o ../cool.diff tip
                              # export the changeset to a diff
                              # file
 # attach ../cool.diff to your bug report
 @end group
 @end example
 
 You may want to get familiar with Mercurial queues to manage your
-changesets. For working with queues you have to activate the extension
+changesets.  For working with queues you have to activate the extension
 mq with the following entry in Mercurials config file @file{.hgrc} (or
 @file{Mercurial.ini} on Windows):
 
 @example
+@group
 [extensions]
 mq=
+@end group
 @end example
 
 Here is a slightly more complex example using Mercurial
 queues, where work on two unrelated changesets is done in parallel and
 one of the changesets is updated after discussion on the bug tracker:
 
 @example
 hg qnew nasty_bug            # create a new patch
@@ -133,54 +135,60 @@ hg export -o ../nasty2.diff tip
 
 Mercurial has a more useful extensions that really should be enabled.
 They are not enabled by default due to a number of factors
 (mostly because they don't work in all terminal types).
 
 The following entries in the @file{.hgrc} are recommended
 
 @example
+@group
 [extensions]
 graphlog=
 color=
 progress=
 pager=
+@end group
 @end example
 
 For the colour extension, default colour and formatting
 of @code{hg status} can be modified by
 
 @example
+@group
 [color]
 status.modified = magenta bold
 status.added = green bold
 status.removed = red bold
 status.deleted = cyan bold
 status.unknown = black  bold
 status.ignored = black bold
+@end group
 @end example
 
 Sometimes a few further improvements for the pager extension are
-necessary. The following options should not be enabled unless paging
+necessary.  The following options should not be enabled unless paging
 isn't working correctly:
 
 @example
+@group
 [pager]
 # Some options for the less pager, see less(1) for their meaning.
 pager = LESS='FSRX' less
 
 # Some commands that aren't paged by default; also enable paging
 # for them
 attend = tags, help, annotate, cat, diff, export, status, \
          outgoing, incoming
+@end group
 @end example
 
 Enabling the described extensions should immediately lead to a difference
-when using the command line version of hg. Of these options, the only one
-that enables a new command is graphlog. It is recommanded that you use the
+when using the command line version of hg.  Of these options, the only one
+that enables a new command is graphlog.  It is recommanded that you use the
 command @code{hg glog} instead of @code{hg log} for a better feel
 what commits are being based on.
 
 
 @node General Guidelines
 @section General Guidelines
 
 All Octave's sources are distributed under the General Public License
diff --git a/doc/interpreter/diagperm.txi b/doc/interpreter/diagperm.txi
--- a/doc/interpreter/diagperm.txi
+++ b/doc/interpreter/diagperm.txi
@@ -514,16 +514,17 @@ like:
 
 @itemize
 @item scalar * diagonal matrix is a diagonal matrix
 
 @item sparse matrix / scalar preserves the sparsity pattern
 
 @item permutation matrix * matrix is equivalent to permuting rows
 @end itemize
+
 all of these natural mathematical truths would be invalidated by treating
 assumed zeros as numerical ones.
 
 Note that @sc{matlab} does not strictly follow this principle and converts
 assumed zeros to numerical zeros in certain cases, while not doing so in
 other cases.  As of today, there are no intentions to mimic such behavior
 in Octave.
 
diff --git a/doc/interpreter/errors.txi b/doc/interpreter/errors.txi
--- a/doc/interpreter/errors.txi
+++ b/doc/interpreter/errors.txi
@@ -184,17 +184,17 @@ It is also possible to assign an identif
 If an error has such an ID the user can catch this error
 as will be shown in the next example.  To assign an ID to an error,
 simply call @code{error} with two string arguments, where the first
 is the identification string, and the second is the actual error.  Note
 that error IDs are in the format "NAMESPACE:ERROR-NAME".  The namespace
 "Octave" is used for Octave's own errors.  Any other string is available
 as a namespace for user's own errors.
 
-The next example counts indexing errors. The errors are catched using the
+The next example counts indexing errors.  The errors are catched using the
 field identifier of the structure returned by the function @code{lasterror}.
 
 @example
 @group
 number_of_errors = 0;
 for n = 1:100
   try
     @dots{}
diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -271,17 +271,17 @@ required to provide the functions @code{
 
 @item QRUPDATE
 QR factorization updating library
 (@url{http://sourceforge.net/projects/qrupdate}).  QRUPDATE is used to
 provide improved performance for the functions @code{qrdelete},
 @code{qrinsert}, @code{qrshift}, and @code{qrupdate}.
 
 @item QScintilla
-Source code highlighter and manipulator; a Qt  port of Scintilla
+Source code highlighter and manipulator; a Qt port of Scintilla
 (@url{http://www.riverbankcomputing.co.uk/software/qscintilla}).
 QScintilla is used for syntax highlighting and code completion in the
 GUI.
 
 @item Qt
 GUI and utility libraries (@url{}).  Qt is required for building the GUI.
 It is a large framework, but the only components required are the GUI,
 core, WebKit, and network modules.
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -84,23 +84,23 @@ However, this is not the case for sparse
 of the non-zero elements of the matrix must equally be stored. 
 
 An obvious way to do this is by storing the elements of the matrix as
 triplets, with two elements being their position in the array 
 (rows and column) and the third being the data itself.  This is conceptually
 easy to grasp, but requires more storage than is strictly needed.
 
 The storage technique used within Octave is the compressed column
-format. It is similar to the Yale format.
+format.  It is similar to the Yale format.
 @footnote{@url{http://en.wikipedia.org/wiki/Sparse_matrix#Yale_format}}
 In this format the position of each element in a row and the data are
-stored as previously. However, if we assume that all elements in the
+stored as previously.  However, if we assume that all elements in the
 same column are stored adjacent in the computers memory, then we only
 need to store information on the number of non-zero elements in each
-column, rather than their positions. Thus assuming that the matrix has
+column, rather than their positions.  Thus assuming that the matrix has
 more non-zero elements than there are columns in the matrix, we win in
 terms of the amount of memory used.
 
 In fact, the column index contains one more element than the number of
 columns, with the first element always being zero.  The advantage of
 this is a simplification in the code, in that there is no special case
 for the first or last columns.  A short example, demonstrating this in
 C is.
@@ -795,26 +795,26 @@ using @sc{umfpack}.
 @item If the matrix is not square, or any of the previous solvers flags
 a singular or near singular matrix, find a minimum norm solution using
 @sc{cxsparse}@footnote{The @sc{cholmod}, @sc{umfpack} and @sc{cxsparse} packages were
 written by Tim Davis and are available at
 @url{http://www.cise.ufl.edu/research/sparse/}}.
 @end enumerate
 
 The band density is defined as the number of non-zero values in the band
-divided by the total number of values in the full band. The banded
+divided by the total number of values in the full band.  The banded
 matrix solvers can be entirely disabled by using @dfn{spparms} to set
 @code{bandden} to 1 (i.e., @code{spparms ("bandden", 1)}).
 
 The QR@tie{}solver factorizes the problem with a Dulmage-Mendelsohn
 decomposition, to separate the problem into blocks that can be treated
 as over-determined, multiple well determined blocks, and a final
-over-determined block. For matrices with blocks of strongly connected
+over-determined block.  For matrices with blocks of strongly connected
 nodes this is a big win as LU@tie{}decomposition can be used for many
-blocks. It also significantly improves the chance of finding a solution
+blocks.  It also significantly improves the chance of finding a solution
 to over-determined problems rather than just returning a vector of
 @dfn{NaN}'s.
 
 All of the solvers above, can calculate an estimate of the condition
 number.  This can be used to detect numerical stability problems in the
 solution and force a minimum norm solution to be used.  However, for
 narrow banded, triangular or diagonal matrices, the cost of
 calculating the condition number is significant, and can in fact
diff --git a/libinterp/corefcn/ellipj.cc b/libinterp/corefcn/ellipj.cc
--- a/libinterp/corefcn/ellipj.cc
+++ b/libinterp/corefcn/ellipj.cc
@@ -144,27 +144,28 @@ of complex argument @var{u} and real par
 If @var{m} is a scalar, the results are the same size as @var{u}.\n\
 If @var{u} is a scalar, the results are the same size as @var{m}.\n\
 If @var{u} is a column vector and @var{m} is a row vector, the\n\
 results are matrices with @code{length (@var{u})} rows and\n\
 @code{length (@var{m})} columns.  Otherwise, @var{u} and\n\
 @var{m} must conform and the results will be the same size.\n\
 \n\
 The value of @var{u} may be complex.\n\
-The value of @var{m} must be 0 <= m <= 1.\n\
+The value of @var{m} must be 0 @leq{} m @leq{} 1.\n\
 \n\
-@var{tol} is currently ignored (@sc{Matlab} uses this to allow faster,\n\
+@var{tol} is currently ignored (@sc{matlab} uses this to allow faster,\n\
 less accurate approximation).\n\
 \n\
 If requested, @var{err} contains the following status information\n\
 and is the same size as the result.\n\
 \n\
 @enumerate 0\n\
 @item\n\
 Normal return.\n\
+\n\
 @item\n\
 Error---no computation, algorithm termination condition not met,\n\
 return @code{NaN}.\n\
 @end enumerate\n\
  Ref: Abramowitz, Milton and Stegun, Irene A\n\
       Handbook of Mathematical Functions, Dover, 1965\n\
       Chapter 16 (Sections 16.4, 16.13 and 16.15)\n\
 @seealso{ellipke}\n\
diff --git a/libinterp/corefcn/mappers.cc b/libinterp/corefcn/mappers.cc
--- a/libinterp/corefcn/mappers.cc
+++ b/libinterp/corefcn/mappers.cc
@@ -1879,17 +1879,17 @@ whether zero is signed, use the @code{si
 %!error sign (1, 2)
 */
 
 DEFUNX ("signbit", Fsignbit, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} signbit (@var{x})\n\
 Return logical true if the value of @var{x} has its sign bit set.\n\
 Otherwise return logical false.  This behavior is consistent with the other\n\
-logical functions. See@ref{Logical Values}.  The behavior differs from the\n\
+logical functions.  See@ref{Logical Values}.  The behavior differs from the\n\
 C language function which returns non-zero if the sign bit is set.\n\
 \n\
 This is not the same as @code{x < 0.0}, because IEEE 754 floating point\n\
 allows zero to be signed.  The comparison @code{-0.0 < 0.0} is false,\n\
 but @code{signbit (-0.0)} will return a nonzero value.\n\
 @seealso{sign}\n\
 @end deftypefn")
 {
diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -1300,18 +1300,19 @@ Replace only the first occurrence of @va
 \n\
 @item warnings\n\
 This option is present for compatibility but is ignored.\n\
 \n\
 @end table\n\
 \n\
 Implementation Note: For compatibility with @sc{matlab}, ordinary escape\n\
 sequences (e.g., \"\\n\" => newline) are processed in both @var{pat}\n\
-and @var{repstr} regardless of whether they were defined within single quotes.  Use a second backslash to stop interpolation of the escape sequence (e.g.,\n\
-\"\\\\n\") or use the @code{regexptranslate} function.\n\
+and @var{repstr} regardless of whether they were defined within single\n\
+quotes.  Use a second backslash to stop interpolation of the escape sequence\n\
+(e.g., \"\\\\n\") or use the @code{regexptranslate} function.\n\
 @seealso{regexp, regexpi, strrep}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length ();
 
   if (nargin < 3)
     {
diff --git a/libinterp/corefcn/tril.cc b/libinterp/corefcn/tril.cc
--- a/libinterp/corefcn/tril.cc
+++ b/libinterp/corefcn/tril.cc
@@ -351,19 +351,19 @@ Return a new matrix formed by extracting
 or upper (@code{triu}) triangular part of the matrix @var{A}, and\n\
 setting all other elements to zero.  The second argument is optional,\n\
 and specifies how many diagonals above or below the main diagonal should\n\
 also be set to zero.\n\
 \n\
 The default value of @var{k} is zero, so that @code{triu} and\n\
 @code{tril} normally include the main diagonal as part of the result.\n\
 \n\
-If the value of @var{k} is nonzero integer, the selection of elements\
-starts at an offset of @var{k} diagonals above or below the main\
-diagonal; above for positive @var{k} and below for negative @var{k}.\
+If the value of @var{k} is nonzero integer, the selection of elements\n\
+starts at an offset of @var{k} diagonals above or below the main\n\
+diagonal; above for positive @var{k} and below for negative @var{k}.\n\
 \n\
 The absolute value of @var{k} must not be greater than the number of\n\
 sub-diagonals or super-diagonals.\n\
 \n\
 For example:\n\
 \n\
 @example\n\
 @group\n\
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -2066,17 +2066,17 @@ Undocumented internal function.\n\
 #else
   error ("__fltk_maxtime__: not available without OpenGL and FLTK libraries");
   return octave_value ();
 #endif
 }
 
 DEFUN_DLD (__have_fltk__, , ,
   "-*- texinfo -*-\n\
-@deftypefn  {Loadable Function} {@var{FLTK_available} =} __have_fltk__ ()\n\
+@deftypefn {Loadable Function} {@var{FLTK_available} =} __have_fltk__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value retval;
 
 #ifdef HAVE_FLTK
   retval = true;
 #else
diff --git a/libinterp/dldfcn/fftw.cc b/libinterp/dldfcn/fftw.cc
--- a/libinterp/dldfcn/fftw.cc
+++ b/libinterp/dldfcn/fftw.cc
@@ -115,18 +115,19 @@ they will not be efficient and the point
 \n\
 The number of threads used for computing the plans and executing the\n\
 transforms can be set with\n\
 \n\
 @example\n\
 fftw (\"threads\", @var{NTHREADS})\n\
 @end example\n\
 \n\
-Note that octave must be compiled with multi-threaded FFTW support for this feature.\n\
-The number of processors available to the current process is used per default.\n\
+Note that octave must be compiled with multi-threaded @sc{fftw} support for\n\
+this feature.  The number of processors available to the current process is\n\
+used per default.\n\
 \n\
 @seealso{fft, ifft, fft2, ifft2, fftn, ifftn}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
diff --git a/libinterp/interpfcn/dirfns.cc b/libinterp/interpfcn/dirfns.cc
--- a/libinterp/interpfcn/dirfns.cc
+++ b/libinterp/interpfcn/dirfns.cc
@@ -558,16 +558,17 @@ Given an array of pattern strings (as a 
 @var{pattern}, return a cell array of file names that match any of\n\
 them, or an empty cell array if no patterns match.  The pattern strings are\n\
 interpreted as filename globbing patterns (as they are used by Unix shells).\n\
 Within a pattern\n\
 \n\
 @table @code\n\
 @item *\n\
 matches any string, including the null string,\n\
+\n\
 @item ?\n\
 matches any single character, and\n\
 \n\
 @item [@dots{}]\n\
 matches any of the enclosed characters.\n\
 @end table\n\
 \n\
 Tilde expansion\n\
diff --git a/libinterp/interpfcn/input.cc b/libinterp/interpfcn/input.cc
--- a/libinterp/interpfcn/input.cc
+++ b/libinterp/interpfcn/input.cc
@@ -1123,18 +1123,18 @@ internal_input_event_hook_fcn (void)
 
   return 0;
 }
 
 DEFUN (add_input_event_hook, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{id} =} add_input_event_hook (@var{fcn})\n\
 @deftypefnx {Built-in Function} {@var{id} =} add_input_event_hook (@var{fcn}, @var{data})\n\
-Add the named function or function handle @var{fcn} to the list of functions to call\n\
-periodically when Octave is waiting for input.  The function should\n\
+Add the named function or function handle @var{fcn} to the list of functions\n\
+to call periodically when Octave is waiting for input.  The function should\n\
 have the form\n\
 \n\
 @example\n\
 @var{fcn} (@var{data})\n\
 @end example\n\
 \n\
 If @var{data} is omitted, Octave calls the function without any\n\
 arguments.\n\
@@ -1172,17 +1172,17 @@ the list of input hook functions.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (remove_input_event_hook, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} remove_input_event_hook (@var{name})\n\
+@deftypefn  {Built-in Function} {} remove_input_event_hook (@var{name})\n\
 @deftypefnx {Built-in Function} {} remove_input_event_hook (@var{fcn_id})\n\
 Remove the named function or function handle with the given identifier\n\
 from the list of functions to call periodically when Octave is waiting\n\
 for input.\n\
 @seealso{add_input_event_hook}\n\
 @end deftypefn")
 {
   octave_value_list retval;
diff --git a/libinterp/octave-value/ov-fcn-inline.cc b/libinterp/octave-value/ov-fcn-inline.cc
--- a/libinterp/octave-value/ov-fcn-inline.cc
+++ b/libinterp/octave-value/ov-fcn-inline.cc
@@ -640,17 +640,17 @@ DEFUNX ("inline", Finline, args, ,
 @deftypefnx {Built-in Function} {} inline (@var{str}, @var{n})\n\
 Create an inline function from the character string @var{str}.\n\
 If called with a single argument, the arguments of the generated\n\
 function are extracted from the function itself.  The generated\n\
 function arguments will then be in alphabetical order.  It should\n\
 be noted that i, and j are ignored as arguments due to the\n\
 ambiguity between their use as a variable or their use as an inbuilt\n\
 constant.  All arguments followed by a parenthesis are considered\n\
-to be functions. If no arguments are found, a function taking a single\n\
+to be functions.  If no arguments are found, a function taking a single\n\
 argument named @code{x} will be created.\n\
 \n\
 If the second and subsequent arguments are character strings,\n\
 they are the names of the arguments of the function.\n\
 \n\
 If the second argument is an integer @var{n}, the arguments are\n\
 @code{\"x\"}, @code{\"P1\"}, @dots{}, @code{\"P@var{N}\"}.\n\
 @seealso{argnames, formula, vectorize}\n\
diff --git a/libinterp/octave-value/ov-struct.cc b/libinterp/octave-value/ov-struct.cc
--- a/libinterp/octave-value/ov-struct.cc
+++ b/libinterp/octave-value/ov-struct.cc
@@ -1746,31 +1746,31 @@ octave_scalar_struct::fast_elem_insert_s
   else
     return false;
 }
 
 DEFUN (struct, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} struct (@var{field1}, @var{value1}, @var{field2}, @var{value2}, @dots{})\n\
 \n\
-Create a scalar or array structure and initialize its values. The\n\
+Create a scalar or array structure and initialize its values.  The\n\
 @var{field1}, @var{field2}, @dots{} variables are strings giving the\n\
 names of the fields and the @var{value1}, @var{value2}, @dots{}\n\
 variables can be any type.\n\
 \n\
 If the values are cell arrays, create a structure array and initialize\n\
 its values.  The dimensions of each cell array of values must match.\n\
 Singleton cells and non-cell values are repeated so that they fill\n\
 the entire array.  If the cells are empty, create an empty structure\n\
 array with the specified field names.\n\
 \n\
 If the argument is an object, return the underlying struct.\n\
 \n\
-Observe that the syntax is optimized for struct @strong{arrays}. Consider the\n\
-following examples:\n\
+Observe that the syntax is optimized for struct @strong{arrays}.  Consider\n\
+the following examples:\n\
 \n\
 @example\n\
 @group\n\
 struct (\"foo\", 1)\n\
   @result{} scalar structure containing the fields:\n\
     foo =  1\n\
 \n\
 struct (\"foo\", @{@})\n\
@@ -1784,21 +1784,21 @@ struct (\"foo\", @{ @{@} @})\n\
 struct (\"foo\", @{1, 2, 3@})\n\
   @result{} 1x3 struct array containing the fields:\n\
     foo\n\
 \n\
 @end group\n\
 @end example\n\
 \n\
 @noindent\n\
-The first case is an ordinary scalar struct, one field, one value. The\n\
+The first case is an ordinary scalar struct, one field, one value.  The\n\
 second produces an empty struct array with one field and no values, since\n\
-s being passed an empty cell array of struct array values. When the value is\n\
+s being passed an empty cell array of struct array values.  When the value is\n\
 a cell array containing a single entry, this becomes a scalar struct with\n\
-that single entry as the value of the field. That single entry happens\n\
+that single entry as the value of the field.  That single entry happens\n\
 to be an empty cell array.\n\
 \n\
 Finally, if the value is a non-scalar cell array, then @code{struct}\n\
 produces a struct @strong{array}.\n\
 @end deftypefn")
 {
   octave_value retval;
 
diff --git a/scripts/@ftp/cd.m b/scripts/@ftp/cd.m
--- a/scripts/@ftp/cd.m
+++ b/scripts/@ftp/cd.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} cd (@var{f})
+## @deftypefn  {Function File} {} cd (@var{f})
 ## @deftypefnx {Function File} {} cd (@var{f}, @var{path})
 ## Get or set the remote directory on the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ##
 ## If @var{path} is not specified, return the remote current working
 ## directory.  Otherwise, set the remote directory to @var{path} and
 ## return the new remote working directory.
diff --git a/scripts/general/interp1.m b/scripts/general/interp1.m
--- a/scripts/general/interp1.m
+++ b/scripts/general/interp1.m
@@ -63,17 +63,17 @@
 ## can later be used with @code{ppval} to evaluate the interpolation.
 ## There is an equivalence, such that @code{ppval (interp1 (@var{x},
 ## @var{y}, @var{method}, "pp"), @var{xi}) == interp1 (@var{x}, @var{y},
 ## @var{xi}, @var{method}, "extrap")}.
 ##
 ## Duplicate points in @var{x} specify a discontinuous interpolant.  There
 ## may be at most 2 consecutive points with the same value.
 ## If @var{x} is increasing, the default discontinuous interpolant is
-## right-continuous. If @var{x} is decreasing, the default discontinuous
+## right-continuous.  If @var{x} is decreasing, the default discontinuous
 ## interpolant is left-continuous.
 ## The continuity condition of the interpolant may be specified by using
 ## the options, "-left" or "-right", to select a left-continuous
 ## or right-continuous interpolant, respectively.
 ## Discontinuous interpolation is only allowed for "nearest" and "linear"
 ## methods; in all other cases, the @var{x}-values must be unique.
 ##
 ## An example of the use of @code{interp1} is
diff --git a/scripts/general/num2str.m b/scripts/general/num2str.m
--- a/scripts/general/num2str.m
+++ b/scripts/general/num2str.m
@@ -48,17 +48,17 @@
 ##
 ## num2str (1.234 + 27.3i)
 ##      @result{} "1.234+27.3i"
 ## @end group
 ## @end example
 ##
 ## Notes:
 ##
-## For Matlab compatibility, leading spaces are stripped before returning
+## For @sc{matlab} compatibility, leading spaces are stripped before returning
 ## the string.
 ##
 ## The @code{num2str} function is not very flexible.  For better control
 ## over the results, use @code{sprintf} (@pxref{Formatted Output}).
 ##
 ## For complex @var{x}, the format string may only contain one
 ## output conversion specification and nothing else.  Otherwise, results
 ## will be unpredictable.
diff --git a/scripts/image/ind2rgb.m b/scripts/image/ind2rgb.m
--- a/scripts/image/ind2rgb.m
+++ b/scripts/image/ind2rgb.m
@@ -26,17 +26,17 @@
 ## image, pixels in @var{x} outside the range are mapped to the last color in
 ## the map.
 ##
 ## The output may be a single RGB image (MxNx3 matrix where M and N are the
 ## original image @var{x} dimensions, one for each of the red, green and blue
 ## channels).  Alternatively, the individual red, green, and blue color matrices
 ## of size MxN may be returned.
 ##
-## Multidimensional indexed images (of size MxNx1xK) are also supported.
+## Multi-dimensional indexed images (of size MxNx1xK) are also supported.
 ##
 ## @seealso{rgb2ind, ind2gray, hsv2rgb, ntsc2rgb}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: July 1994
 ## Adapted-By: jwe
 
diff --git a/scripts/image/rgb2ind.m b/scripts/image/rgb2ind.m
--- a/scripts/image/rgb2ind.m
+++ b/scripts/image/rgb2ind.m
@@ -31,26 +31,26 @@
 ## @deftypefnx {Function File} {[@var{x}, @var{map}] =} rgb2ind (@var{R}, @var{G}, @var{B}, @var{n})
 ## @deftypefnx {Function File} {[@var{x}, @var{map}] =} rgb2ind (@var{R}, @var{G}, @var{B}, @var{tol})
 ## @deftypefnx {Function File} {[@var{x}, @var{map}] =} rgb2ind (@var{R}, @var{G}, @var{B}, @var{map}, @var{dither_option})
 ## @deftypefnx {Function File} {[@var{x}, @var{map}] =} rgb2ind (@var{R}, @var{G}, @var{B}, @var{n}, @var{dither_option})
 ## @deftypefnx {Function File} {[@var{x}, @var{map}] =} rgb2ind (@var{R}, @var{G}, @var{B}, @var{tol}, @var{dither_option})
 ## Convert an image in red-green-blue (RGB) color space to an indexed image.
 ##
 ## The input image @var{rgb} must be an N-dimensional RGB image
-## (MxNxO...x3 array) where M,N,O... are the image dimensions, and the
+## (MxNxO@dots{}x3 array) where M,N,O@dots{} are the image dimensions, and the
 ## final dimension contains the values in the red, green and blue
-## channels. Alternatively, the red, green and blue color channels can
+## channels.  Alternatively, the red, green and blue color channels can
 ## be input as separate arrays @var{R}, @var{G} and  @var{B}.
 ##
 ## The input @var{map} defines the colormap to be used.  Alternatively,
 ## @var{n} or @var{tol} may be used to define the maximum number of
 ## colors to use in an automatically generated colormap.  @var{n} is
 ## related to @var{tol} by:  @var{n} = (floor (1/@var{tol}) + 1)^3;
-## @var{tol} must be >0 and <=1.
+## @var{tol} must be >0 and @leq{}1.
 ##
 ## @var{dither_option} is a string which enables or disables dithering:
 ## 'dither' (default) or 'nodither'.
 ##
 ## @seealso{ind2rgb, rgb2hsv, rgb2ntsc}
 ## @end deftypefn
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -22,38 +22,40 @@
 ## @deftypefnx {Function File} {@var{A} =} importdata (@var{fname}, @var{delimiter}, @var{header_rows})
 ## @deftypefnx {Function File} {[@var{A}, @var{delimiter}] =} importdata (@dots{})
 ## @deftypefnx {Function File} {[@var{A}, @var{delimiter}, @var{header_rows}] =} importdata (@dots{})
 ## Importing data from file.
 ##
 ## Importing the contents of file @var{fname} into workspace.
 ##
 ## Input parameters:
+##
 ## @itemize
 ## @item @var{fname}
 ## The file name for the file to import.
 ## 
 ## @item @var{delimiter}
-## The character separating columns of data. Use @code{\t} for tab.
+## The character separating columns of data.  Use @code{\t} for tab.
 ## (Only valid for ascii files)
 ##
 ## @item @var{header_rows}
-## Number of header rows before the data begins. (Only valid for ascii files)
+## Number of header rows before the data begins.  (Only valid for ascii files)
 ## @end itemize
 ##
 ## Different file types are supported:
+##
 ## @itemize
 ## @item Ascii table
 ##
 ## Importing ascii table using the specified number of header rows and
 ## the specified delimiter.
 ##
 ## @item Image file
 ##
-## @item @sc{Matlab} file
+## @item @sc{matlab} file
 ##
 ## @item Spreadsheet files (depending on external software)
 ##
 ## @item Wav file
 ##
 ## @end itemize
 ##
 ## @seealso{textscan, dlmread, csvread, load}
diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -42,17 +42,17 @@
 ## @end itemize
 ##
 ## The optional input @var{n} specifies the number of data lines to read; in
 ## this sense it differs slightly from the format repeat count in strread.
 ##
 ## If the format string is empty (not: omitted) and the file contains only
 ## numeric data (excluding headerlines), textread will return a rectangular
 ## matrix with the number of columns matching the number of numeric fields on
-## the first data line of the file. Empty fields are returned as zero values.
+## the first data line of the file.  Empty fields are returned as zero values.
 ##
 ## @seealso{strread, load, dlmread, fscanf, textscan}
 ## @end deftypefn
 
 function varargout = textread (filename, format = "%f", varargin)
 
   BUFLENGTH = 4096;       # Read buffer to speed up processing @var{n}
 
diff --git a/scripts/java/javamem.m b/scripts/java/javamem.m
--- a/scripts/java/javamem.m
+++ b/scripts/java/javamem.m
@@ -30,17 +30,18 @@
 ## a dedicated and separate part of memory claimed by the JVM from
 ## your computer's total memory (which comprises physical RAM and
 ## virtual memory / swap space on hard disk).
 ##
 ## The maximum allowable memory usage can be configured using the file
 ## @file{java.opts}.  The directory where this file resides is
 ## determined by the environment variable @w{@env{OCTAVE_JAVA_DIR}}.
 ## If unset, the directory where @file{javaaddpath.m} resides is used instead
-## (typically @file{@env{OCTAVE_HOME}/share/octave/@env{OCTAVE_VERSION}/m/java/}
+## (typically
+## @file{@w{@env{OCTAVE_HOME}}/share/octave/@w{@env{OCTAVE_VERSION}}/m/java/}
 ##
 ## @file{java.opts} is a plain text file with one option per line.  The
 ## default initial memory size and default maximum memory size (which
 ## are both system dependent) can be overridden like so:
 ##
 ## @nospell{-Xms64m}
 ##
 ## @nospell{-Xmx512m}
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -51,16 +51,17 @@
 ## the 1-norms.
 ##
 ## @code{condest} returns the 1-norm condition estimate @var{est} and
 ## a vector @var{v} satisfying @code{norm (A*v, 1) == norm (A, 1) * norm
 ## (@var{v}, 1) / @var{est}}.  When @var{est} is large, @var{v} is an
 ## approximate null vector.
 ##
 ## References:
+##
 ## @itemize
 ## @item
 ## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
 ##
 ## @item
diff --git a/scripts/linear-algebra/onenormest.m b/scripts/linear-algebra/onenormest.m
--- a/scripts/linear-algebra/onenormest.m
+++ b/scripts/linear-algebra/onenormest.m
@@ -33,16 +33,17 @@
 ##
 ## Returns the norm estimate @var{est}, two vectors @var{v} and
 ## @var{w} related by norm
 ## @code{(@var{w}, 1) = @var{est} * norm (@var{v}, 1)},
 ## and the number of iterations @var{iter}.  The number of
 ## iterations is limited to 10 and is at least 2.
 ##
 ## References:
+##
 ## @itemize
 ## @item
 ## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
 ##
 ## @item
diff --git a/scripts/miscellaneous/error_ids.m b/scripts/miscellaneous/error_ids.m
--- a/scripts/miscellaneous/error_ids.m
+++ b/scripts/miscellaneous/error_ids.m
@@ -35,17 +35,17 @@
 ## @item Octave:invalid-indexing
 ## Indicates that a data-type was indexed incorrectly, e.g., real-value index
 ## for arrays, non-existent field of a structure.
 ##
 ## @item Octave:bad-alloc
 ## Indicates that memory couldn't be allocated.
 ##
 ## @item Octave:undefined-function
-## Indicates a call to a function that is not defined. The function may
+## Indicates a call to a function that is not defined.  The function may
 ## exist but Octave is unable to find it in the search path.
 ##
 ## @end table
 
 
 function error_ids ()
   help ("error_ids");
 endfunction
diff --git a/scripts/miscellaneous/getfield.m b/scripts/miscellaneous/getfield.m
--- a/scripts/miscellaneous/getfield.m
+++ b/scripts/miscellaneous/getfield.m
@@ -13,19 +13,19 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {[@var{val}] =} getfield (@var{s}, @var{field})
+## @deftypefn  {Function File} {[@var{val}] =} getfield (@var{s}, @var{field})
 ## @deftypefnx {Function File} {[@var{val}] =} getfield (@var{s}, @var{idx1}, @var{field1}, @var{idx2}, @var{field2}, @dots{})
-## Extract a field from a structure (or a nested structure). The syntax
+## Extract a field from a structure (or a nested structure).  The syntax
 ## is the same as @code{setfield}, except it omits the final @var{val}
 ## argument, returning this value instead of setting it.
 ##
 ## @seealso{setfield, rmfield, isfield, isstruct, fieldnames, struct}
 ## @end deftypefn
 
 ## Author: Etienne Grossmann <etienne@cs.uky.edu>
 
diff --git a/scripts/miscellaneous/setfield.m b/scripts/miscellaneous/setfield.m
--- a/scripts/miscellaneous/setfield.m
+++ b/scripts/miscellaneous/setfield.m
@@ -13,20 +13,21 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{s} =} setfield (@var{s}, @var{field}, @var{val})
+## @deftypefn  {Function File} {@var{s} =} setfield (@var{s}, @var{field}, @var{val})
 ## @deftypefnx {Function File} {@var{s} =} setfield (@var{s}, @var{idx1}, @var{field1}, @var{idx2}, @var{field2}, @dots{}, @var{val})
 ##
-## Set a field member @var{field} in a structure @var{s} equal to @var{val}.  For example:
+## Set a field member @var{field} in a structure @var{s} equal to @var{val}. 
+## For example:
 ##
 ## @example
 ## @group
 ## @var{s} = struct ();
 ## @var{s} = setfield (@var{s}, "foo bar", 42);
 ## @end group
 ## @end example
 ##
@@ -34,20 +35,20 @@
 ## This is equivalent to
 ##
 ## @example
 ## @var{s}.("foo bar") = 42;
 ## @end example
 ##
 ## @noindent
 ## Note that ordinary structure syntax @code{@var{s}.foo bar = 42} cannot be
-## used here, as the field name is not a valid Octave identifier. Using
-## arbitrary strings for field name is incompatible with @sc{Matlab}, so
+## used here, as the field name is not a valid Octave identifier.  Using
+## arbitrary strings for field name is incompatible with @sc{matlab}, so
 ## this usage will warn if the @code{Octave:matlab-incompatible} warning
-## is set. @xref{docXwarning_ids}.
+## is set.  @xref{docXwarning_ids}.
 ##
 ## With the second calling form, set a field on a structure array,
 ## possibly nested, with successive nested indices @var{idx1},
 ## @var{idx2}, @dots{} and fields @var{field1}, @var{field2}, @dots{}
 ## The indices must be cells containing the desired index at this
 ## nesting depth.
 ##
 ## Thus consider instead,
@@ -61,17 +62,17 @@
 ##       baz =  42
 ##       foo =
 ##         scalar structure containing the fields:
 ##           bar =  54
 ## @end group
 ## @end example
 ##
 ## Here we first have an ordinary structure array with one field
-## @code{baz} set to 42. Then we set another field in a nested scalar structure
+## @code{baz} set to 42.  Then we set another field in a nested scalar structure
 ## indexing with two single cells containing the unique desired indices.
 ##
 ## Finally an example with nested structure arrays,
 ##
 ## @example
 ## @group
 ## @var{sa}.foo = 1;
 ## @var{sa} = setfield (@var{sa}, @{2@}, "bar", @{3@}, "baz", 6);
diff --git a/scripts/plot/area.m b/scripts/plot/area.m
--- a/scripts/plot/area.m
+++ b/scripts/plot/area.m
@@ -20,39 +20,41 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} area (@var{y})
 ## @deftypefnx {Function File} {} area (@var{x}, @var{y})
 ## @deftypefnx {Function File} {} area (@dots{}, @var{lvl})
 ## @deftypefnx {Function File} {} area (@dots{}, @var{prop}, @var{val}, @dots{})
 ## @deftypefnx {Function File} {} area (@var{h}, @dots{})
 ## @deftypefnx {Function File} {@var{h} =} area (@dots{})
 ## Area plot of the columns of @var{y}.  This shows the
-## contributions of each column value to the row sum.  It is functionally similar to
-## @code{plot (@var{x}, cumsum (@var{y}, 2))}, except that the area under
-## the curve is shaded.
+## contributions of each column value to the row sum.  It is functionally
+## similar to @code{plot (@var{x}, cumsum (@var{y}, 2))}, except that the
+## area under the curve is shaded.
 ##
 ## If the @var{x} argument is omitted it defaults to 
 ## @code{1 : rows (@var{y})}.  A value @var{lvl} can be defined that determines
 ## where the base level of the shading under the curve should be defined.  The
 ## default level is 0.
 ##
 ## Additional arguments to the @code{area} function are passed directly to
 ## @code{patch}.  
 ##
 ## The optional return value @var{h} is a graphics handle to the hggroup
 ## object representing the area patch objects.  The "BaseValue" property
 ## of the hggroup can be used to adjust the level where shading begins.
 ##
 ## Example: Verify identity sin^2 + cos^2 = 1
 ##
 ## @example
+## @group
 ## t = linspace (0, 2*pi, 100)';
 ## y = [sin(t).^2, cos(t).^2)];
 ## area (t, y);
 ## legend ('sin^2', 'cos^2', 'location', 'NorthEastOutside');  
+## @end group
 ## @end example
 ## @seealso{plot, patch}
 ## @end deftypefn
 
 function h = area (varargin)
 
   [ax, varargin, nargin] = __plt_get_axis_arg__ ("area", varargin{:});
 
diff --git a/scripts/plot/pcolor.m b/scripts/plot/pcolor.m
--- a/scripts/plot/pcolor.m
+++ b/scripts/plot/pcolor.m
@@ -14,21 +14,22 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} pcolor (@var{x}, @var{y}, @var{c})
 ## @deftypefnx {Function File} {} pcolor (@var{c})
-## Produce a density plot for matrices @var{x} and @var{y} from @code{meshgrid},## and a matrix @var{c} corresponding to the @var{x} and @var{y} coordinates of
-## the mesh's vertices.  If @var{x} and @var{y} are vectors, then a typical
-## vertex is (@var{x}(j), @var{y}(i), @var{c}(i,j)).  Thus, columns of @var{c}
-## correspond to different @var{x} values and rows of @var{c} correspond
-## to different @var{y} values.
+## Produce a density plot for matrices @var{x} and @var{y} from
+## @code{meshgrid}, and a matrix @var{c} corresponding to the @var{x} and
+## @var{y} coordinates of the mesh's vertices.  If @var{x} and @var{y} are
+## vectors, then a typical vertex is (@var{x}(j), @var{y}(i), @var{c}(i,j)). 
+## Thus, columns of @var{c} correspond to different @var{x} values and rows
+## of @var{c} correspond to different @var{y} values.
 ##
 ## The @code{colormap} is scaled to the extents of @var{c}.
 ## Limits may be placed on the color axis by the command @code{caxis}, or by
 ## setting the @code{clim} property of the parent axis.
 ##
 ## The face color of each cell of the mesh is determined by interpolating
 ## the values of @var{c} for the cell's vertices.  Contrast this with
 ## @code{imagesc} which renders one cell for each element of @var{c}.
diff --git a/scripts/plot/stairs.m b/scripts/plot/stairs.m
--- a/scripts/plot/stairs.m
+++ b/scripts/plot/stairs.m
@@ -25,17 +25,17 @@
 ## @deftypefnx {Function File} {@var{h} =} stairs (@dots{})
 ## @deftypefnx {Function File} {[@var{xstep}, @var{ystep}] =} stairs (@dots{})
 ## Produce a stairstep plot.  The arguments may be vectors or matrices.
 ##
 ## If only one argument is given, it is taken as a vector of y-values
 ## and the x coordinates are taken to be the indices of the elements.
 ##
 ## If one output argument is requested, return a graphics handle to the
-## created plot. If two output arguments are specified, the data are generated
+## created plot.  If two output arguments are specified, the data are generated
 ## but not plotted.  For example,
 ##
 ## @example
 ## stairs (x, y);
 ## @end example
 ##
 ## @noindent
 ## and
diff --git a/scripts/set/powerset.m b/scripts/set/powerset.m
--- a/scripts/set/powerset.m
+++ b/scripts/set/powerset.m
@@ -21,17 +21,17 @@
 ## @deftypefnx {Function File} {} powerset (@var{a}, "rows")
 ## Compute the powerset (all subsets) of the set @var{a}.
 ##
 ## The set @var{a} must be a numerical matrix or a cell array of strings.  The
 ## output will always be a cell array of either vectors or strings.
 ##
 ## With the optional second argument @code{"rows"}, each row of the set @var{a}
 ## is considered one element of the set.  As a result, @var{a} must then be a
-## numerical 2D matrix.
+## numerical 2-D matrix.
 ##
 ## @seealso{unique, union, setxor, setdiff, ismember}
 ## @end deftypefn
 
 function p = powerset (a, byrows_arg)
 
   byrows = false;
 
diff --git a/scripts/sparse/bicg.m b/scripts/sparse/bicg.m
--- a/scripts/sparse/bicg.m
+++ b/scripts/sparse/bicg.m
@@ -49,16 +49,17 @@
 ##
 ## @itemize @minus
 ## @item 0: iteration converged to the within the chosen tolerance
 ##
 ## @item 1: the maximum number of iterations was reached before convergence
 ##
 ## @item 3: the algorithm reached stagnation
 ## @end itemize
+##
 ## (the value 2 is unused but skipped for compatibility).
 ##
 ## @item @var{relres} is the final value of the relative residual.
 ##
 ## @item @var{iter} is the number of iterations performed.
 ##
 ## @item @var{resvec} is a vector containing the relative residual at each iteration.
 ## @end itemize
diff --git a/scripts/sparse/bicgstab.m b/scripts/sparse/bicgstab.m
--- a/scripts/sparse/bicgstab.m
+++ b/scripts/sparse/bicgstab.m
@@ -51,16 +51,17 @@
 ##
 ## @itemize @minus
 ## @item 0: iteration converged to the within the chosen tolerance
 ##
 ## @item 1: the maximum number of iterations was reached before convergence
 ##
 ## @item 3: the algorithm reached stagnation
 ## @end itemize
+##
 ## (the value 2 is unused but skipped for compatibility).
 ##
 ## @item @var{relres} is the final value of the relative residual.
 ##
 ## @item @var{iter} is the number of iterations performed.
 ##
 ## @item @var{resvec} is a vector containing the relative residual at each iteration.
 ## @end itemize
diff --git a/scripts/sparse/cgs.m b/scripts/sparse/cgs.m
--- a/scripts/sparse/cgs.m
+++ b/scripts/sparse/cgs.m
@@ -51,16 +51,17 @@
 ##
 ## @itemize @minus
 ## @item 0: iteration converged to the within the chosen tolerance
 ##
 ## @item 1: the maximum number of iterations was reached before convergence
 ##
 ## @item 3: the algorithm reached stagnation
 ## @end itemize
+##
 ## (the value 2 is unused but skipped for compatibility).
 ##
 ## @item @var{relres} is the final value of the relative residual.
 ##
 ## @item @var{iter} is the number of iterations performed.
 ##
 ## @item @var{resvec} is a vector containing the relative residual at
 ## each iteration.
diff --git a/scripts/specfun/ellipke.m b/scripts/specfun/ellipke.m
--- a/scripts/specfun/ellipke.m
+++ b/scripts/specfun/ellipke.m
@@ -20,19 +20,19 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} ellipke (@var{m})
 ## @deftypefnx {Function File} {} ellipke (@var{m}, @var{tol})
 ## @deftypefnx {Function File} {[@var{k}, @var{e}] =} ellipke (@dots{})
 ## Compute complete elliptic integral of the first K(@var{m}) and second
 ## E(@var{m}) kind.
 ##
-## @var{m} is either real array or scalar with 0 <= m <= 1.
+## @var{m} is either real array or scalar with 0 @leq{} m @leq{} 1.
 ##
-## @var{tol} is currently ignored (@sc{Matlab} uses this to allow faster,
+## @var{tol} is currently ignored (@sc{matlab} uses this to allow faster,
 ## less accurate approximation).
 ##
 ## Ref: Abramowitz, Milton and Stegun, Irene A. Handbook of Mathematical
 ## Functions, Dover, 1965, Chapter 17.
 ## @seealso{ellipj}
 ## @end deftypefn
 
 ## Author: David Billinghurst <David.Billinghurst@riotinto.com>
diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -45,17 +45,17 @@
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("chow", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("chow", @var{n}, @var{alpha})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("chow", @var{n}, @var{alpha}, @var{delta})
 ## Create a Chow matrix -- a singular Toeplitz lower Hessenberg matrix.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{c} =} gallery ("circul", @var{v})
+## @deftypefn {Function File} {@var{c} =} gallery ("circul", @var{v})
 ## Create a circulant matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("clement", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("clement", @var{n}, @var{k})
 ## Create a tridiagonal matrix with zero diagonal entries.
 ##
@@ -76,30 +76,30 @@
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("cycol", [@var{m} @var{n}])
 ## @deftypefnx {Function File} {@var{a} =} gallery ("cycol", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery (@dots{}, @var{k})
 ## Create a matrix whose columns repeat cyclically.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {[@var{c},@var{d}, @var{e}] =} gallery ("dorr", @var{n})
-## @deftypefnx {Function File} {[@var{c},@var{d}, @var{e}] =} gallery ("dorr", @var{n}, @var{theta})
+## @deftypefn  {Function File} {[@var{c}, @var{d}, @var{e}] =} gallery ("dorr", @var{n})
+## @deftypefnx {Function File} {[@var{c}, @var{d}, @var{e}] =} gallery ("dorr", @var{n}, @var{theta})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("dorr", @dots{})
 ## Create a diagonally dominant, ill conditioned, tridiagonal matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("dramadah", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("dramadah", @var{n}, @var{k})
 ## Create a (0, 1) matrix whose inverse has large integer entries.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("fiedler", @var{c})
+## @deftypefn {Function File} {@var{a} =} gallery ("fiedler", @var{c})
 ## Create a symmetric Fiedler matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("forsythe", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("forsythe", @var{n}, @var{alpha})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("forsythe", @var{n}, @var{alpha}, @var{lambda})
 ## Create a Forsythe matrix (a perturbed Jordan block).
@@ -107,17 +107,17 @@
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{f} =} gallery ("frank", @var{n})
 ## @deftypefnx {Function File} {@var{f} =} gallery ("frank", @var{n}, @var{k})
 ## Create a Frank matrix (ill conditioned eigenvalues).
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{c} =} gallery ("gcdmat", @var{n})
+## @deftypefn {Function File} {@var{c} =} gallery ("gcdmat", @var{n})
 ## Create a greatest common divisor matrix.
 ##
 ## @var{c} is an @var{n}-by-@var{n} matrix whose values correspond to the
 ## greatest common divisor of its coordinate values, i.e., @var{c}(i,j)
 ## correspond @code{gcd (i, j)}.
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("gearmat", @var{n})
@@ -130,33 +130,34 @@
 ## @deftypefn  {Function File} {@var{g} =} gallery ("grcar", @var{n})
 ## @deftypefnx {Function File} {@var{g} =} gallery ("grcar", @var{n}, @var{k})
 ## Create a Toeplitz matrix with sensitive eigenvalues.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("hanowa", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("hanowa", @var{n}, @var{d})
-## Create a matrix whose eigenvalues lie on a vertical line in the complex plane.
+## Create a matrix whose eigenvalues lie on a vertical line in the complex
+## plane.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{v} =} gallery ("house", @var{x})
 ## @deftypefnx {Function File} {[@var{v}, @var{beta}] =} gallery ("house", @var{x})
 ## Create a householder matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("invhess", @var{x})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("invhess", @var{x}, @var{y})
 ## Create the inverse of an upper Hessenberg matrix.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("invol", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("invol", @var{n})
 ## Create an involutory matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("ipjfact", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("ipjfact", @var{n}, @var{k})
 ## Create an Hankel matrix with factorial elements.
 ##
@@ -189,76 +190,76 @@
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("lauchli", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("lauchli", @var{n}, @var{mu})
 ## Create a Lauchli matrix (rectangular).
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("lehmer", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("lehmer", @var{n})
 ## Create a Lehmer matrix (symmetric positive definite).
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{t} =} gallery ("lesp", @var{n})
+## @deftypefn {Function File} {@var{t} =} gallery ("lesp", @var{n})
 ## Create a tridiagonal matrix with real, sensitive eigenvalues.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("lotkin", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("lotkin", @var{n})
 ## Create a Lotkin matrix.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("minij", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("minij", @var{n})
 ## Create a symmetric positive definite matrix MIN(i,j).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("moler", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("moler", @var{n}, @var{alpha})
 ## Create a Moler matrix (symmetric positive definite).
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {[@var{a}, @var{t}] =} gallery ("neumann", @var{n})
+## @deftypefn {Function File} {[@var{a}, @var{t}] =} gallery ("neumann", @var{n})
 ## Create a singular matrix from the discrete Neumann problem (sparse).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{q} =} gallery ("orthog", @var{n})
 ## @deftypefnx {Function File} {@var{q} =} gallery ("orthog", @var{n}, @var{k})
 ## Create orthogonal and nearly orthogonal matrices.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("parter", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("parter", @var{n})
 ## Create a Parter matrix (a Toeplitz matrix with singular values near pi).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{p} =} gallery ("pei", @var{n})
 ## @deftypefnx {Function File} {@var{p} =} gallery ("pei", @var{n}, @var{alpha})
 ## Create a Pei matrix.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("poisson", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("Poisson", @var{n})
 ## Create a block tridiagonal matrix from Poisson's equation (sparse).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("prolate", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("prolate", @var{n}, @var{w})
 ## Create a prolate matrix (symmetric, ill-conditioned Toeplitz matrix).
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{h} =} gallery ("randhess", @var{x})
+## @deftypefn {Function File} {@var{h} =} gallery ("randhess", @var{x})
 ## Create a random, orthogonal upper Hessenberg matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("rando", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("rando", @var{n}, @var{k})
 ## Create a random matrix with elements -1, 0 or 1.
 ##
@@ -268,28 +269,28 @@
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode}, @var{kl})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode}, @var{kl}, @var{ku})
 ## Create a random matrix with pre-assigned singular values.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("redheff", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("redheff", @var{n})
 ## Create a zero and ones matrix of Redheffer associated with the Riemann
 ## hypothesis.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("riemann", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("riemann", @var{n})
 ## Create a matrix associated with the Riemann hypothesis.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {@var{a} =} gallery ("ris", @var{n})
+## @deftypefn {Function File} {@var{a} =} gallery ("ris", @var{n})
 ## Create a symmetric Hankel matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("smoke", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("smoke", @var{n}, @var{k})
 ## Create a complex matrix, with a `smoke ring' pseudospectrum.
 ##
@@ -328,17 +329,17 @@
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("wathen", @var{nx}, @var{ny})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("wathen", @var{nx}, @var{ny}, @var{k})
 ## Create the Wathen matrix.
 ##
 ## @end deftypefn
 ##
-## @deftypefn  {Function File} {[@var{a}, @var{b}] =} gallery ("wilk", @var{n})
+## @deftypefn {Function File} {[@var{a}, @var{b}] =} gallery ("wilk", @var{n})
 ## Create various specific matrices devised/discussed by Wilkinson.
 ##
 ## @end deftypefn
 
 ## Code for most of the individual matrices (except binomial, gcdmat,
 ## integerdata, leslie, normaldata, randcolu, randcorr, randjorth, sampling,
 ## uniformdata) by Nicholas .J. Higham <Nicholas.J.Higham@manchester.ac.uk>
 ## Adapted for Octave and into single gallery function by Carnë Draug
diff --git a/scripts/strings/strjoin.m b/scripts/strings/strjoin.m
--- a/scripts/strings/strjoin.m
+++ b/scripts/strings/strjoin.m
@@ -13,30 +13,30 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {@var{str} =} strjoin (@var{cstr})
+## @deftypefn  {Function File} {@var{str} =} strjoin (@var{cstr})
 ## @deftypefnx {Function File} {@var{str} =} strjoin (@var{cstr}, @var{delimiter})
-## Joins the elements of the cell-string array, @var{cstr}, into a single
+## Join the elements of the cell-string array, @var{cstr}, into a single
 ## string.
 ##
 ## If no @var{delimiter} is specified, the elements of @var{cstr}
 ## seperated by a space.
 ##
 ## If @var{delimiter} is specified as a string, the cell-string array is
-## joined using the string. Escape sequences are supported.
+## joined using the string.  Escape sequences are supported.
 ##
 ## If @var{delimiter} is a cell-string array whose length is one less
 ## than @var{cstr}, then the elemennts of @var{cstr} are joined by
-## interleaving the cell-string elements of @var{delimiter}. Escape
+## interleaving the cell-string elements of @var{delimiter}.  Escape
 ## sequences are not supported.
 ##
 ## @example
 ## @group
 ## strjoin (@{'Octave','Scilab','Lush','Yorick'@}, '*')
 ##       @result{} 'Octave*Scilab*Lush*Yorick'
 ## @end group
 ## @end example
diff --git a/scripts/strings/strsplit.m b/scripts/strings/strsplit.m
--- a/scripts/strings/strsplit.m
+++ b/scripts/strings/strsplit.m
@@ -29,17 +29,16 @@
 ## delimiters in the input string, @var{s}, are collapsed into one.
 ##
 ## The second output, @var{matches}, returns the delmiters which were matched
 ## in the original string.
 ##
 ## Example:
 ##
 ## @example
-## @group
 ## strsplit ("a b c")
 ##       @result{}
 ##           @{
 ##             [1,1] = a
 ##             [1,2] = b
 ##             [1,3] = c
 ##           @}
 ##
@@ -64,33 +63,32 @@
 ##           @{
 ##             [1,1] = a
 ##             [1,2] = 
 ##             [1,3] = b
 ##             [1,4] = 
 ##             [1,5] = c
 ##           @}
 ##
-## @end group
 ## @end example
 ##
 ## Supported @var{name}/@var{value} pair arguments are;
 ##
 ## @itemize
 ## @item @var{collapsedelimiters} may take the value of @var{true} or
 ## @var{false} with the default being @var{false}.
+##
 ## @item @var{delimitertype} may take the value of @code{simple} or
-## @code{regularexpression}. The default is @var{delimitertype} is
+## @code{regularexpression}.  The default is @var{delimitertype} is
 ## @code{simple}.
 ## @end itemize
 ## 
 ## Example:
 ##
 ## @example
-## @group
 ## strsplit ("a foo b,bar c", ",|\\s|foo|bar", "delimitertype", "regularexpression")
 ##       @result{}
 ##           @{
 ##             [1,1] = a
 ##             [1,2] = b
 ##             [1,3] = c
 ##           @}
 ## 
@@ -117,17 +115,16 @@
 ##           @{
 ##             [1,1] = a
 ##             [1,2] = 
 ##             [1,3] = 
 ##             [1,4] = b
 ##             [1,5] = 
 ##             [1,6] = c
 ##           @}
-## @end group
 ## @end example
 ## 
 ## @seealso{ostrsplit, strjoin, strtok, regexp}
 ## @end deftypefn
 
 function [result, matches] = strsplit (str, del, varargin)
 
   args.collapsedelimiters = true;
diff --git a/scripts/testfun/__have_feature__.m b/scripts/testfun/__have_feature__.m
--- a/scripts/testfun/__have_feature__.m
+++ b/scripts/testfun/__have_feature__.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} __have_feature__ (feature)
+## @deftypefn {Function File} {} __have_feature__ (feature)
 ## Undocumented internal function.
 ## @end deftypefn
 
 function retval = __have_feature__ (feature)
   features = octave_config_info ("features");
   if (iscellstr (feature))
     retval = (all (isfield (features, feature))
               && cellfun (@(x) features.(x), feature));
diff --git a/scripts/testfun/__printf_assert__.m b/scripts/testfun/__printf_assert__.m
--- a/scripts/testfun/__printf_assert__.m
+++ b/scripts/testfun/__printf_assert__.m
@@ -12,16 +12,16 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} __printf_assert__ (@dots{})
+## @deftypefn {Function File} {} __printf_assert__ (@dots{})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function __printf_assert__ (varargin)
   global _assert_printf;
   _assert_printf = cat (2, _assert_printf, sprintf (varargin{:}));
 endfunction
diff --git a/scripts/testfun/__prog_output_assert__.m b/scripts/testfun/__prog_output_assert__.m
--- a/scripts/testfun/__prog_output_assert__.m
+++ b/scripts/testfun/__prog_output_assert__.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} __prog_output_assert__ (@var{str})
+## @deftypefn {Function File} {} __prog_output_assert__ (@var{str})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function ret = __prog_output_assert__ (str)
   global _assert_printf;
   if (isempty (_assert_printf))
     ret = isempty (str);
   elseif (_assert_printf(end) == "\n")
diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -12,17 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} __run_test_suite__ (@var{fcndirs}, @var{fixedtestdirs})
+## @deftypefn {Function File} {} __run_test_suite__ (@var{fcndirs}, @var{fixedtestdirs})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function __run_test_suite__ (fcndirs, fixedtestdirs)
   testsdir = octave_config_info ("octtestsdir");
   libinterptestdir = fullfile (testsdir, "libinterp");
   liboctavetestdir = fullfile (testsdir, "liboctave");
   fixedtestdir = fullfile (testsdir, "fixed");
