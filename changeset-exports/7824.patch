# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1202485594 -3600
#      Fri Feb 08 16:46:34 2008 +0100
# Node ID adb520646d7e75704edfa5dc974c929c5c260705
# Parent  feaaf725c54f26da380e168ef7bfd9f89ff65f52
Fix execution of callback strings and allow execution of callback by name.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -3,16 +3,24 @@ 2008-06-04  Michael Goffioul <michael.go
 	* graphics.h.in (root_figure::properties::callbackobject):
 	New root property.
 	(root_figure::properties::cbo_stack): New field.
 	* graphics.cc (xset_gcbo, xreset_gcbo): New utility functions.
 	(execute_callback): Set callbackobject property in root object
 	before executing a callback.
 	(root_figure::properties::set_callbackobject): Implement accessor.
 
+	* graphics.h.in (root_figure::properties::callbackobject):
+	New root property.
+	(root_figure::properties::cbo_stack): New field.
+	* graphics.cc (xset_gcbo, xreset_gcbo): New utility functions.
+	(execute_callback): Set callbackobject property in root object
+	before executing a callback.
+	(root_figure::properties::set_callbackobject): Implement accessor.
+
 	* graphics.h.in (class root_figure::properties,
 	class line::properties, class text::properties,
 	class image::properties, class patch::properties,
 	class surface::properties): Export classes with
 	OCTINTERP_API.
 
 	* graphics.cc (axes::properties::set_defaults): Use correct
 	default values for gridlinestyle and minorgridlinestyle.
@@ -1853,16 +1861,24 @@ 2008-02-09  John W. Eaton  <jwe@octave.o
 2008-02-08  John W. Eaton  <jwe@octave.org>
 
 	* ov-struct.cc (octave_struct::subsref): Allow Cell::index to resize.
 
 	* input.cc (interactive_input): Eliminate debug arg.  Change All uses.
 	(get_user_input): Don't process input_buf if there is an error.
 	Call reset_error_handler instead of setting error_state to 0.
 
+2008-02-08  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* graphics.h.in (callback_property::execute): New static
+	helper method (useful to execute callbacks by name).
+	* graphics.cc (callback_property::execute): Likewise.
+	(execute_callback): Avoid undefined argument when executing
+	callback. Do not use arguments when the callback is a string.
+
 2008-02-07  John W. Eaton  <jwe@octave.org>
 
 	* ov-range.h (octave_range::sort): New functions.
 
 2008-02-07  David Bateman  <dbateman@free.fr>
 
 	* Makefile.in (DLD_XSRC): Delete spkron.cc.
 	* DLD-FUNCTIONS/spkron.cc: Delete.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -195,37 +195,36 @@ xreset_gcbo (void *)
 static void
 execute_callback (octave_value cb, const graphics_handle& h,
                   const octave_value& data)
 {
   octave_value_list args;
   octave_function *fcn = 0;
 
   args(0) = h.as_octave_value ();
-  args(1) = data;
+  if (data.is_defined ())
+    args(1) = data;
+  else
+    args(1) = Matrix ();
 
   unwind_protect::begin_frame ("execute_callback");
   unwind_protect::add (xreset_gcbo);
 
   xset_gcbo (h);
 
   BEGIN_INTERRUPT_WITH_EXCEPTIONS;
 
   if (cb.is_function_handle ())
     fcn = cb.function_value ();
   else if (cb.is_string ())
     {
+      int status;
       std::string s = cb.string_value ();
-      octave_value f = symbol_table::find_function (s);
-      int status;
-
-      if (f.is_defined ())
-        fcn = f.function_value ();
-      else
-	eval_string (s, false, status);
+
+      eval_string (s, false, status);
     }
   else if (cb.is_cell () && cb.length () > 0
            && (cb.rows () == 1 || cb.columns () == 1)
            && cb.cell_value ()(0).is_function_handle ())
     {
       Cell c = cb.cell_value ();
 
       fcn = c(0).function_value ();
@@ -557,16 +556,24 @@ callback_property::validate (const octav
 
 void
 callback_property::execute (const octave_value& data) const
 {
   if (callback.is_defined () && ! callback.is_empty ())
     execute_callback (callback, get_parent (), data);
 }
 
+void
+callback_property::execute (const octave_value& cb, const graphics_handle& h,
+			    const octave_value& data)
+{
+  if (cb.is_defined () && ! cb.is_empty ())
+    execute_callback (cb, h, data);
+}
+
 // ---------------------------------------------------------------------
 
 void
 property_list::set (const caseless_str& name, const octave_value& val)
 {
   size_t offset = 0;
 
   size_t len = name.length ();
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -980,16 +980,21 @@ public:
         callback = v;
       else
         error ("invalid value for callback property \"%s\"",
                get_name ().c_str ());
     }
 
   OCTINTERP_API void execute (const octave_value& data = octave_value ()) const;
 
+  OCTINTERP_API static
+      void execute (const octave_value& cb, const graphics_handle& h,
+		    const octave_value& data = octave_value ());
+
+
   callback_property& operator = (const octave_value& val)
     {
       set (val);
       return *this;
     }
 
 private:
   OCTINTERP_API bool validate (const octave_value& v) const;
