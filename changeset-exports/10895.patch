# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1282091466 25200
#      Tue Aug 17 17:31:06 2010 -0700
# Node ID 4176c5c621385213cbbe5e4d447b179a20efe6cd
# Parent  89f13bc14494a6c35fbef1172cfc5be67650d339
Imrove documentation string for sizemax

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,14 +1,18 @@
 2010-08-16  Ben Abbott <bpabbott@mac.com>
 
 	* gl2ps.c: Use upstream version gl2ps-1.3.5-svn-20100816.
 
 2010-08-13  Rik <octave@nomad.inbox5.com>
 
+	* bitfcns.cc (sizemax): Improve documentation string.
+
+2010-08-13  Rik <octave@nomad.inbox5.com>
+
 	* toplev.c (do_goto_frame_relative): Remove unused variable c.
 
 2010-08-13  Jaroslav Hajek  <highegg@gmail.com>
 
 	* ov-builtin.cc 
 	(octave_builtin::subsref (..., const std::list<octave_lvalue> *)
 	octave_builtin::do_multi_index_op (..., const std::list<octave_lvalue> *)): 
 	New methods. Move code here. Set curr_lvalue_list.
diff --git a/src/bitfcns.cc b/src/bitfcns.cc
--- a/src/bitfcns.cc
+++ b/src/bitfcns.cc
@@ -665,20 +665,21 @@ The default for @var{type} is @code{uint
     error ("intmin: not defined for '%s' objects", cname.c_str ());
 
   return retval;
 }
 
 DEFUN (sizemax, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} sizemax ()\n\
-Return the largest value that is allowed as the size of an array.\n\
+Return the largest value allowed for the size of an array.\n\
 If Octave is compiled with 64-bit indexing, the result is of class int64,\n\
-otherwise it is of class int32.  It will be a tiny bit lower than the maximum\n\
-allowable value for that type, as reported by intmax.\n\
+otherwise it is of class int32.  The maximum array size is slightly\n\
+smaller than the maximum value allowable for the relevant class as reported\n\
+by @code{intmax}.\n\
 @seealso{intmax}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 0)
     retval = octave_int<octave_idx_type> (dim_vector::dim_max ());
   else
