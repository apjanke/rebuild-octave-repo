# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1295488282 28800
#      Wed Jan 19 17:51:22 2011 -0800
# Node ID 7d6d8c1e471f7d71087c8594952ca549058081bb
# Parent  0e414f837c5810cb7dd4fd7b1531b32c5b4ddfbd
Grammarcheck Texinfo for files in src directory.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2011-01-19  Rik  <octave@nomad.inbox5.com>
+
+	* DLD-FUNCTIONS/dlmread.cc, DLD-FUNCTIONS/filter.cc,
+	DLD-FUNCTIONS/inv.cc, DLD-FUNCTIONS/lu.cc, DLD-FUNCTIONS/quad.cc,
+	DLD-FUNCTIONS/quadcc.cc, DLD-FUNCTIONS/rcond.cc,
+	DLD-FUNCTIONS/regexp.cc, DLD-FUNCTIONS/strfind.cc,
+	DLD-FUNCTIONS/typecast.cc, data.cc, dirfns.cc, error.cc, file-io.cc,
+	graphics.cc, help.cc, input.cc, load-path.cc, load-save.cc, mappers.cc,
+	oct-hist.cc, oct-parse.yy, pager.cc, pr-output.cc, pt-binop.cc,
+	sparse.cc, strfns.cc, syscalls.cc, sysdep.cc, utils.cc: grammarcheck
+	files in src directory.	
+
 2011-01-19  John W. Eaton  <jwe@octave.org>
 
 	* oct-obj.cc (octave_value_list::all_scalars): Check for scalar
 	values, not strings.  Bug #32172.
 
 2011-01-17  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/module-files: Add quadcc.cc to list of files.
diff --git a/src/DLD-FUNCTIONS/dlmread.cc b/src/DLD-FUNCTIONS/dlmread.cc
--- a/src/DLD-FUNCTIONS/dlmread.cc
+++ b/src/DLD-FUNCTIONS/dlmread.cc
@@ -176,17 +176,17 @@ where the lowest index value is zero.  A
 range such as 'A2..Q15' or 'T1:AA5' can be used.  The lowest alphabetical\n\
 index 'A' refers to the first column.  The lowest row index is 1.\n\
 \n\
 @var{file} should be a file name or file id given by @code{fopen}.  In the\n\
 latter case, the file is read until end of file is reached.\n\
 \n\
 The \"emptyvalue\" option may be used to specify the value used to fill empty\n\
 fields.  The default is zero.\n\
-@seealso{csvread,textscan,textread,dlmwrite}\n\
+@seealso{csvread, textscan, textread, dlmwrite}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   double empty_value = 0.0;
 
diff --git a/src/DLD-FUNCTIONS/filter.cc b/src/DLD-FUNCTIONS/filter.cc
--- a/src/DLD-FUNCTIONS/filter.cc
+++ b/src/DLD-FUNCTIONS/filter.cc
@@ -371,17 +371,17 @@ H(z) = {\\displaystyle\\sum_{k=0}^M d_{k
   H(z) = ----------------------\n\
                N\n\
           1 + SUM c(k+1) z^(-k)\n\
               k=1\n\
 @end group\n\
 @end example\n\
 \n\
 @end ifnottex\n\
-@seealso{filter2,fftfilt,freqz}\n\
+@seealso{filter2, fftfilt, freqz}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin  = args.length ();
 
   if (nargin < 3 || nargin > 5)
     {
diff --git a/src/DLD-FUNCTIONS/inv.cc b/src/DLD-FUNCTIONS/inv.cc
--- a/src/DLD-FUNCTIONS/inv.cc
+++ b/src/DLD-FUNCTIONS/inv.cc
@@ -48,17 +48,17 @@ In general it is best to avoid calculati
 directly.  For example, it is both faster and more accurate to solve\n\
 systems of equations (@var{A}*@math{x} = @math{b}) with\n\
 @code{@var{y} = @var{A} \\ @math{b}}, rather than\n\
 @code{@var{y} = inv (@var{A}) * @math{b}}.\n\
 \n\
 If called with a sparse matrix, then in general @var{x} will be a full\n\
 matrix requiring significantly more storage.  Avoid forming the inverse\n\
 of a sparse matrix if possible.\n\
-@seealso{ldivide,rdivide}\n\
+@seealso{ldivide, rdivide}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     {
diff --git a/src/DLD-FUNCTIONS/lu.cc b/src/DLD-FUNCTIONS/lu.cc
--- a/src/DLD-FUNCTIONS/lu.cc
+++ b/src/DLD-FUNCTIONS/lu.cc
@@ -632,17 +632,17 @@ or\n\
 \n\
 The first form uses the unpivoted algorithm, which is faster, but less\n\
 stable.  The second form uses a slower pivoted algorithm, which is more\n\
 stable.\n\
 \n\
 The matrix case is done as a sequence of rank-1 updates;\n\
 thus, for large enough k, it will be both faster and more accurate to\n\
 recompute the factorization from scratch.\n\
-@seealso{lu,qrupdate,cholupdate}\n\
+@seealso{lu, qrupdate, cholupdate}\n\
 @end deftypefn")
 {
   octave_idx_type nargin = args.length ();
   octave_value_list retval;
 
   bool pivoted = nargin == 5;
 
   if (nargin != 4 && nargin != 5)
diff --git a/src/DLD-FUNCTIONS/quad.cc b/src/DLD-FUNCTIONS/quad.cc
--- a/src/DLD-FUNCTIONS/quad.cc
+++ b/src/DLD-FUNCTIONS/quad.cc
@@ -209,17 +209,17 @@ contains an integer error code (0 indica
 made, and @var{err} contains an estimate of the error in the\n\
 solution.\n\
 \n\
 The function @code{quad_options} can set other optional\n\
 parameters for @code{quad}.\n\
 \n\
 Note: because @code{quad} is written in Fortran it\n\
 cannot be called recursively.\n\
-@seealso{quad_options,quadv,quadl,quadgk,quadcc,trapz,dblquad,triplequad}\n\
+@seealso{quad_options, quadv, quadl, quadgk, quadcc, trapz, dblquad, triplequad}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   std::string fcn_name;
 
   warned_imaginary = false;
 
diff --git a/src/DLD-FUNCTIONS/quadcc.cc b/src/DLD-FUNCTIONS/quadcc.cc
--- a/src/DLD-FUNCTIONS/quadcc.cc
+++ b/src/DLD-FUNCTIONS/quadcc.cc
@@ -1538,17 +1538,17 @@ or @code{-Inf}, as in the above example 
 If the integral diverges and @code{quadcc} detects this, \n\
 a warning is issued and @code{Inf} or @code{-Inf} is returned.\n\
 \n\
 Note that @code{quadcc} is a general purpose quadrature algorithm\n\
 and as such may be less efficient for smooth or otherwise\n\
 well-behaved integrand than other methods such as\n\
 @code{quadgk} or @code{trapz}.\n\
 \n\
-@seealso{quad,quadv,quadl,quadgk,trapz,dblquad,triplequad}\n\
+@seealso{quad, quadv, quadl, quadgk, trapz, dblquad, triplequad}\n\
 @end deftypefn")
 {
 
   /* Some constants that we will need. */
   static const int n[4] = { 4, 8, 16, 32 };
   static const int skip[4] = { 8, 4, 2, 1 };
   static const int idx[4] = { 0, 5, 14, 31 };
   static const double w = M_SQRT2 / 2;
diff --git a/src/DLD-FUNCTIONS/rcond.cc b/src/DLD-FUNCTIONS/rcond.cc
--- a/src/DLD-FUNCTIONS/rcond.cc
+++ b/src/DLD-FUNCTIONS/rcond.cc
@@ -35,17 +35,17 @@ DEFUN_DLD (rcond, args, ,
 @deftypefn {Loadable Function} {@var{c} =} rcond (@var{A})\n\
 Compute the 1-norm estimate of the reciprocal condition number as returned\n\
 by @sc{lapack}.  If the matrix is well-conditioned then @var{c} will be near\n\
 1 and if the matrix is poorly conditioned it will be close to zero.\n\
 \n\
 The matrix @var{A} must not be sparse.  If the matrix is sparse then\n\
 @code{condest (@var{A})} or @code{rcond (full (@var{A}))} should be used\n\
 instead.\n\
-@seealso{cond,condest}\n\
+@seealso{cond, condest}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin != 1)
     print_usage ();
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -1072,17 +1072,17 @@ Alternatively, use (?-x) in the pattern 
 @item freespacing\n\
 The pattern may include arbitrary whitespace and also comments beginning with\n\
 the character @samp{#}.\n\
 Only available when Octave is compiled with PCRE.\n\
 \n\
 Alternatively, use (?x) in the pattern when PCRE is available.\n\
 \n\
 @end table\n\
-@seealso{regexpi,strfind,regexprep}\n\
+@seealso{regexpi, strfind, regexprep}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length();
 
   if (nargin < 2)
     print_usage ();
   else if (args(0).is_cell() || args(1).is_cell())
@@ -1638,17 +1638,17 @@ Options in addition to those of @code{re
 \n\
 @item once\n\
 Replace only the first occurrence of @var{pat} in the result.\n\
 \n\
 @item warnings\n\
 This option is present for compatibility but is ignored.\n\
 \n\
 @end table\n\
-@seealso{regexp,regexpi,strrep}\n\
+@seealso{regexp, regexpi, strrep}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length();
 
   if (nargin < 3)
     {
       print_usage ();
diff --git a/src/DLD-FUNCTIONS/strfind.cc b/src/DLD-FUNCTIONS/strfind.cc
--- a/src/DLD-FUNCTIONS/strfind.cc
+++ b/src/DLD-FUNCTIONS/strfind.cc
@@ -170,17 +170,17 @@ strfind (@{\"abababa\", \"bebebe\", \"ab
 \n\
              1   3   5\n\
 \n\
           [1,2] = [](1x0)\n\
           [1,3] = [](1x0)\n\
         @}\n\
 @end group\n\
 @end example\n\
-@seealso{findstr,strmatch,regexp,regexpi,find}\n\
+@seealso{findstr, strmatch, regexp, regexpi, find}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
   bool overlaps = true;
 
   if (nargin == 4 && args(2).is_string () && args(3).is_scalar_type ())
     {
diff --git a/src/DLD-FUNCTIONS/typecast.cc b/src/DLD-FUNCTIONS/typecast.cc
--- a/src/DLD-FUNCTIONS/typecast.cc
+++ b/src/DLD-FUNCTIONS/typecast.cc
@@ -294,17 +294,17 @@ Return a new array @var{y} resulting fro
 @end group\n\
 @end example\n\
 \n\
 The number of elements of @var{x} should be divisible by the bit length of\n\
 @var{class}.  If it is not, excess bits are discarded.  Bits come in\n\
 increasing order of significance, i.e., @code{x(1)} is bit 0, @code{x(2)} is\n\
 bit 1, etc.  The result is a row vector if @var{x} is a row vector, otherwise\n\
 it is a column vector.\n\
-@seealso{bitunpack,typecast}\n\
+@seealso{bitunpack, typecast}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 2 && args(0).is_bool_type ())
     {
       boolNDArray bitp = args(0).bool_array_value ();
 
@@ -399,17 +399,17 @@ Return an array @var{y} corresponding to
   \"uint64\"\n\
   \"double\"\n\
   \"single\"\n\
 @end group\n\
 @end example\n\
 \n\
 The result is a row vector if @var{x} is a row vector; otherwise, it is a\n\
 column vector.\n\
-@seealso{bitpack,typecast}\n\
+@seealso{bitpack, typecast}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1 && (args(0).is_numeric_type () || args(0).is_string ()))
     {
       octave_value array = args(0);
 
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -2158,17 +2158,17 @@ Called with a single or no argument, siz
     }
 
   return retval;
 }
 
 DEFUN (nnz, args, ,
    "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {@var{scalar} =} nnz (@var{a})\n\
-Returns the number of non zero elements in @var{a}.\n\
+Return the number of non zero elements in @var{a}.\n\
 @seealso{sparse}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     retval = args(0).nnz ();
   else
@@ -6310,17 +6310,17 @@ do_merge (const Array<bool>& mask,
                          tval.INTX ## _array_value (), \
                          fval.INTX ## _array_value ()); \
     }
 
 DEFUN (merge, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} merge (@var{mask}, @var{tval}, @var{fval})\n\
 @deftypefnx {Built-in Function} {} ifelse (@var{mask}, @var{tval}, @var{fval})\n\
-Merges elements of @var{true_val} and @var{false_val}, depending on the\n\
+Merge elements of @var{true_val} and @var{false_val}, depending on the\n\
 value of @var{mask}.  If @var{mask} is a logical scalar, the other two\n\
 arguments can be arbitrary values.  Otherwise, @var{mask} must be a logical\n\
 array, and @var{tval}, @var{fval} should be arrays of matching class, or\n\
 cell arrays.  In the scalar mask case, @var{tval} is returned if @var{mask}\n\
 is true, otherwise @var{fval} is returned.\n\
 \n\
 In the array mask case, both @var{tval} and @var{fval} must be either\n\
 scalars or arrays with dimensions equal to @var{mask}.  The result is\n\
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -84,17 +84,17 @@ octave_change_to_directory (const std::s
   else
     error ("%s: %s", newdir.c_str (), gnulib::strerror (errno));
 
   return cd_ok;
 }
 
 DEFUN (cd, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} cd dir\n\
+@deftypefn  {Command} {} cd dir\n\
 @deftypefnx {Command} {} chdir dir\n\
 Change the current working directory to @var{dir}.  If @var{dir} is\n\
 omitted, the current directory is changed to the user's home\n\
 directory.  For example,\n\
 \n\
 @example\n\
 cd ~/octave\n\
 @end example\n\
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -834,17 +834,17 @@ handle_message (error_fun f, const char 
     }
 
   return retval;
 }
 
 DEFUN (rethrow, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} rethrow (@var{err})\n\
-Reissues a previous error as defined by @var{err}.  @var{err} is a structure\n\
+Reissue a previous error as defined by @var{err}.  @var{err} is a structure\n\
 that must contain at least the 'message' and 'identifier' fields.  @var{err}\n\
 can also contain a field 'stack' that gives information on the assumed\n\
 location of the error.  Typically @var{err} is returned from\n\
 @code{lasterror}.\n\
 @seealso{lasterror, lasterr, error}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -1472,19 +1472,20 @@ initialize_default_warning_state (void)
 
   // This should be an error unless we are in maximum braindamage mode.
 
   set_warning_state ("Octave:allow-noninteger-ranges-as-indices", "error");
 }
 
 DEFUN (lasterror, args, ,
   "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {@var{err} =} lasterror (@var{err})\n\
+@deftypefn  {Built-in Function} {@var{lasterr} =} lasterror ()\n\
+@deftypefnx {Built-in Function} {} lasterror (@var{err})\n\
 @deftypefnx {Built-in Function} {} lasterror ('reset')\n\
-Returns or sets the last error message.  Called without any arguments\n\
+Query or set the last error message.  Called without any arguments\n\
 returns a structure containing the last error message, as well as other\n\
 information related to this error.  The elements of this structure are:\n\
 \n\
 @table @asis\n\
 @item 'message'\n\
 The text of the last error message\n\
 \n\
 @item 'identifier'\n\
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -205,17 +205,17 @@ fopen_mode_to_ios_mode (const std::strin
     }
 
   return retval;
 }
 
 DEFUN (fclose, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} fclose (@var{fid})\n\
-Closes the specified file.  If successful, @code{fclose} returns 0,\n\
+Close the specified file.  If successful, @code{fclose} returns 0,\n\
 otherwise, it returns -1.\n\
 @seealso{fopen, fseek, ftell}\n\
 @end deftypefn")
 {
   octave_value retval = -1;
 
   int nargin = args.length ();
 
@@ -389,17 +389,17 @@ If there are no more characters to read,
     print_usage ();
 
   return retval;
 }
 
 DEFUN (fskipl, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} fskipl (@var{fid}, @var{count})\n\
-Skips a given number of lines, i.e., discards characters until an end-of-line\n\
+Skip a given number of lines, i.e., discards characters until an end-of-line\n\
 is met exactly @var{count}-times, or end-of-file occurs.\n\
 Returns the number of lines skipped (end-of-line sequences encountered).\n\
 If @var{count} is omitted, it defaults to 1. @var{count} may also be\n\
 @code{Inf}, in which case lines are skipped to the end of file.\n\
 This form is suitable for counting lines in a file.\n\
 @seealso{fgetl, fgets}\n\
 @end deftypefn")
 {
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -5931,17 +5931,17 @@ graphics handles and false where they ar
     print_usage ();
 
   return retval;
 }
 
 DEFUN (reset, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} reset (@var{h}, @var{property})\n\
-Removes any defaults set for the handle @var{h}.  The default figure\n\
+Remove any defaults set for the handle @var{h}.  The default figure\n\
 properties \"position\", \"units\", \"windowstyle\" and\n\
 \"paperunits\" and the default axes properties \"position\" and \"units\"\n\
 are not reset.\n\
 @end deftypefn")
 {
   int nargin = args.length ();
 
   if (nargin != 1)
@@ -6393,17 +6393,17 @@ calc_dimensions (const graphics_object& 
     }
 
   return nd;
 }
 
 DEFUN (__calc_dimensions__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __calc_dimensions__ (@var{axes})\n\
-Internal function. Determine the number of dimensions in a graphics\n\
+Internal function.  Determine the number of dimensions in a graphics\n\
 object, whether 2 or 3.\n\
 @end deftypefn")
 {
   gh_manager::autolock guard;
 
   octave_value retval;
 
   int nargin = args.length ();
@@ -6692,17 +6692,17 @@ Undocumented internal function.\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (__image_pixel_size__, args, ,
    "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {@var{px},@var{py}} __image_pixel_size__ (@var{h})\n\
+@deftypefn {Built-in Function} {@var{px}, @var{py}} __image_pixel_size__ (@var{h})\n\
 Internal function: returns the pixel size of the image in normalized units.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
@@ -7044,17 +7044,18 @@ dellistener (gcf, \"position\", c);\n\
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (addproperty, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} addproperty (@var{name}, @var{h}, @var{type}, [@var{arg}, @dots{}])\n\
+@deftypefn  {Built-in Function} {} addproperty (@var{name}, @var{h}, @var{type})\n\
+@deftypefnx {Built-in Function} {} addproperty (@var{name}, @var{h}, @var{type}, @var{arg}, @dots{})\n\
 Create a new property named @var{name} in graphics object @var{h}.\n\
 @var{type} determines the type of the property to create.  @var{args}\n\
 usually contains the default value of the property, but additional\n\
 arguments might be given, depending on the type of the property.\n\
 \n\
 The supported property types are:\n\
 \n\
 @table @code\n\
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -714,17 +714,17 @@ do_get_help_text (const std::string& nam
         {
           format = "plain text";
         }
     }
 }
 
 DEFUN (get_help_text, args, , "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{text}, @var{format}] =} get_help_text (@var{name})\n\
-Returns the help text of a given function.\n\
+Return the help text of a given function.\n\
 \n\
 This function returns the raw help text @var{text} and an indication of\n\
 its format for the function @var{name}.  The format indication @var{format}\n\
 is a string that can be either @t{\"texinfo\"}, @t{\"html\"}, or\n\
 @t{\"plain text\"}.\n\
 \n\
 To convert the help text to other formats, use the @code{makeinfo} function.\n\
 \n\
@@ -788,17 +788,17 @@ do_get_help_text_from_file (const std::s
           format = "plain text";
         }
     }
 }
 
 DEFUN (get_help_text_from_file, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {[@var{text}, @var{format}] =} get_help_text_from_file (@var{fname})\n\
-Returns the help text from the given file.\n\
+Return the help text from the given file.\n\
 \n\
 This function returns the raw help text @var{text} and an indication of\n\
 its format for the function @var{name}.  The format indication @var{format}\n\
 is a string that can be either @t{\"texinfo\"}, @t{\"html\"}, or\n\
 @t{\"plain text\"}.\n\
 \n\
 To convert the help text to other formats, use the @code{makeinfo} function.\n\
 \n\
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -1374,22 +1374,23 @@ PS1 (\"\\\\u@@\\\\H> \")\n\
 \n\
 @noindent\n\
 which will result in the prompt @samp{boris@@kremvax> } for the user\n\
 @samp{boris} logged in on the host @samp{kremvax.kgb.su}.  Note that two\n\
 backslashes are required to enter a backslash into a double-quoted\n\
 character string.  @xref{Strings}.\n\
 \n\
 You can also use ANSI escape sequences if your terminal supports them.\n\
-This can be useful for colouring the prompt. For example,\n\
+This can be useful for colouring the prompt.  For example,\n\
 \n\
 @example\n\
 PS1 (\"\\\\[\\\\033[01;31m\\\\]\\\\s:\\\\#> \\\\[\\\\033[0m\\]\")\n\
 @end example\n\
 \n\
+@noindent\n\
 will give the default Octave prompt a red colouring.\n\
 @seealso{PS2, PS4}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (PS1);
 }
 
 DEFUN (PS2, args, nargout,
@@ -1501,17 +1502,17 @@ Undocumented internal function.\n\
     print_usage ();
 
   return retval;
 }
 
 DEFUN (filemarker, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} filemarker ()\n\
-Returns or sets the character used to separate filename from the\n\
+Query or set the character used to separate filename from the\n\
 the subfunction names contained within the file.  This can be used in\n\
 a generic manner to interact with subfunctions.  For example,\n\
 \n\
 @example\n\
 help ([\"myfunc\", filemarker, \"mysubfunc\"])\n\
 @end example\n\
 \n\
 @noindent\n\
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -1926,21 +1926,21 @@ execute_pkg_add (const std::string& dir)
 void
 execute_pkg_del (const std::string& dir)
 {
   execute_pkg_add_or_del (dir, "PKG_DEL");
 }
 
 DEFUN (genpath, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} genpath (@var{dir})\n\
+@deftypefn  {Built-in Function} {} genpath (@var{dir})\n\
 @deftypefnx {Built-in Function} {} genpath (@var{dir}, @var{skip}, @dots{})\n\
 Return a path constructed from @var{dir} and all its subdirectories.\n\
 If additional string parameters are given, the resulting path will \n\
-exclude directories with those names.\
+exclude directories with those names.\n\
 @end deftypefn")
 {
   octave_value retval;
 
   octave_idx_type nargin = args.length ();
 
   if (nargin == 1)
     {
@@ -2101,17 +2101,17 @@ DEFUN (addpath, args, nargout,
 @deftypefnx {Built-in Function} {} addpath (@var{dir1}, @dots{}, @var{option})\n\
 Add @var{dir1}, @dots{} to the current function search path.  If\n\
 @var{option} is @samp{\"-begin\"} or 0 (the default), prepend the\n\
 directory name to the current path.  If @var{option} is @samp{\"-end\"}\n\
 or 1, append the directory name to the current path.\n\
 Directories added to the path must exist.\n\
 \n\
 In addition to accepting individual directory arguments, lists of\n\
-directory names separated by @code{pathsep} are also accepted.  For example,\n\
+directory names separated by @code{pathsep} are also accepted.  For example:\n\
 \n\
 @example\n\
 addpath (\"dir1:/dir2:~/dir3\");\n\
 @end example\n\
 @seealso{path, rmpath, genpath, pathdef, savepath, pathsep}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -2212,17 +2212,17 @@ addpath (\"dir1:/dir2:~/dir3\");\n\
 }
 
 DEFUN (rmpath, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} rmpath (@var{dir1}, @dots{})\n\
 Remove @var{dir1}, @dots{} from the current function search path.\n\
 \n\
 In addition to accepting individual directory arguments, lists of\n\
-directory names separated by @code{pathsep} are also accepted.  For example,\n\
+directory names separated by @code{pathsep} are also accepted.  For example:\n\
 \n\
 @example\n\
 rmpath (\"dir1:/dir2:~/dir3\");\n\
 @end example\n\
 @seealso{path, addpath, genpath, pathdef, savepath, pathsep}\n\
 @end deftypefn")
 {
   // Originally by Etienne Grossmann. Heavily modified and translated
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -549,17 +549,17 @@ find_file_to_load (const std::string& na
 #else /* ! HAVE_HDF5 */
 #define HAVE_HDF5_HELP_STRING "\n\
 HDF5 load and save are not available, as this Octave executable was\n\
 not linked with the HDF5 library."
 #endif /* ! HAVE HDF5 */
 
 DEFUN (load, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} load file\n\
+@deftypefn  {Command} {} load file\n\
 @deftypefnx {Command} {} load options file\n\
 @deftypefnx {Command} {} load options file v1 v2 @dots{}\n\
 @deftypefnx {Command} {} S = load(\"options\", \"file\", \"v1\", \"v2\", @dots{})\n\
 Load the named variables @var{v1}, @var{v2}, @dots{}, from the file\n\
 @var{file}.  If no variables are specified then all variables found in the\n\
 file will be loaded.  As with @code{save}, the list of variables to extract\n\
 can be full names or use a pattern syntax.  The format of the file is\n\
 automatically detected but may be overridden by supplying the appropriate\n\
@@ -1445,17 +1445,17 @@ dump_octave_core (void)
 #else /* ! HAVE_ZLIB */
 #define HAVE_ZLIB_HELP_STRING "\n\
 This option is not available, as this Octave executable was not linked with\n\
 the zlib library."
 #endif /* ! HAVE ZLIB */
 
 DEFUN (save, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} save file\n\
+@deftypefn  {Command} {} save file\n\
 @deftypefnx {Command} {} save options file\n\
 @deftypefnx {Command} {} save options file @var{v1} @var{v2} @dots{}\n\
 @deftypefnx {Command} {} save options file -struct @var{STRUCT} @var{f1} @var{f2} @dots{}\n\
 Save the named variables @var{v1}, @var{v2}, @dots{}, in the file\n\
 @var{file}.  The special filename @samp{-} may be used to write\n\
 output to the terminal.  If no variable names are listed, Octave saves\n\
 all the variables in the current scope.  Otherwise, full variable names or\n\
 pattern syntax can be used to specify the variables to save.\n\
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -535,17 +535,17 @@ Compute the hyperbolic cosine for each e
 %!error cosh ();
 %!error cosh (1, 2);
 
 */
 
 DEFUN (erf, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erf (@var{z})\n\
-Computes the error function,\n\
+Compute the error function,\n\
 @tex\n\
 $$\n\
  {\\rm erf} (z) = {2 \\over \\sqrt{\\pi}}\\int_0^z e^{-t^2} dt\n\
 $$\n\
 @end tex\n\
 @ifnottex\n\
 \n\
 @example\n\
@@ -599,17 +599,17 @@ erf (z) = (2/sqrt (pi)) | e^(-t^2) dt\n\
 
 
 
 */
 
 DEFUN (erfinv, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfinv (@var{x})\n\
-Computes the inverse error function, i.e., @var{y} such that\n\
+Compute the inverse error function, i.e., @var{y} such that\n\
 \n\
 @example\n\
   erf(@var{y}) == @var{x}\n\
 @end example\n\
 @seealso{erf, erfc, erfcx}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -634,17 +634,17 @@ Computes the inverse error function, i.e
 %% exceptional
 %!assert (erfinv ([-1, 1, 1.1, -2.1]), [-Inf, Inf, NaN, NaN])
 %!error erfinv (1+2i)
 */
 
 DEFUN (erfc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfc (@var{z})\n\
-Computes the complementary error function,\n\
+Compute the complementary error function,\n\
 @tex\n\
 $1 - {\\rm erf} (z)$.\n\
 @end tex\n\
 @ifnottex\n\
 @code{1 - erf (@var{z})}.\n\
 @end ifnottex\n\
 @seealso{erfcx, erf, erfinv}\n\
 @end deftypefn")
@@ -664,17 +664,17 @@ Computes the complementary error functio
 %! a = -1i*sqrt(-1/(6.4187*6.4187));
 %! assert (erfc(a), erfc(real(a)));
 
 */
 
 DEFUN (erfcx, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} erfcx (@var{z})\n\
-Computes the scaled complementary error function,\n\
+Compute the scaled complementary error function,\n\
 @tex\n\
 $z^2 (1 - {\\rm erf} (z))$.\n\
 @end tex\n\
 @ifnottex\n\
 @code{z^2*(1 - erf (@var{z}))}.\n\
 @end ifnottex\n\
 @seealso{erfc, erf, erfinv}\n\
 @end deftypefn")
@@ -864,17 +864,17 @@ floor ([-2.7, 2.7])\n\
 %!error floor ();
 %!error floor (1, 2);
 
 */
 
 DEFUN (gamma, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} gamma (@var{z})\n\
-Computes the Gamma function,\n\
+Compute the Gamma function,\n\
 @tex\n\
 $$\n\
  \\Gamma (z) = \\int_0^\\infty t^{z-1} e^{-t} dt.\n\
 $$\n\
 @end tex\n\
 @ifnottex\n\
 \n\
 @example\n\
diff --git a/src/oct-hist.cc b/src/oct-hist.cc
--- a/src/oct-hist.cc
+++ b/src/oct-hist.cc
@@ -673,18 +673,18 @@ DEFUN (history_control, args, nargout,
 @deftypefn  {Built-in Function} {@var{val} =} history_control ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} history_control (@var{new_val})\n\
 Query or set the internal variable that specifies how commands are saved\n\
 to the history list.  The default value is an empty character string,\n\
 but may be overridden by the environment variable\n\
 @w{@env{OCTAVE_HISTCONTROL}}.\n\
 \n\
 The value of @code{history_control} is a colon-separated list of values\n\
-controlling how commands are saved on the history list.   If the list\n\
-of values includes @code{ignorespace},  lines which begin with a space\n\
+controlling how commands are saved on the history list.  If the list\n\
+of values includes @code{ignorespace}, lines which begin with a space\n\
 character are not saved in the history list.  A value of @code{ignoredups}\n\
 causes lines matching the previous history entry to not be saved.\n\
 A value of @code{ignoreboth} is shorthand for @code{ignorespace} and\n\
 @code{ignoredups}.  A value of @code{erasedups} causes all previous lines\n\
 matching the current line to be removed from the history list before that\n\
 line is saved.  Any value not in the above list is ignored.  If\n\
 @code{history_control} is the empty string, all commands are saved on\n\
 the history list, subject to the value of @code{saving_history}.\n\
diff --git a/src/oct-parse.yy b/src/oct-parse.yy
--- a/src/oct-parse.yy
+++ b/src/oct-parse.yy
@@ -3811,16 +3811,17 @@ Normally, calls to @code{autoload} appea
 are evaluated when a directory is added to the Octave's load path.  To\n\
 avoid having to hardcode directory names in @var{file}, if @var{file}\n\
 is in the same directory as the PKG_ADD script then\n\
 \n\
 @example\n\
 autoload (\"foo\", \"bar.oct\");\n\
 @end example\n\
 \n\
+@noindent\n\
 will load the function @code{foo} from the file @code{bar.oct}.  The above\n\
 when @code{bar.oct} is not in the same directory or uses like\n\
 \n\
 @example\n\
 autoload (\"foo\", file_in_loadpath (\"bar.oct\"))\n\
 @end example\n\
 \n\
 @noindent\n\
@@ -4008,17 +4009,17 @@ source_file (const std::string& file_nam
       else
         error ("source: error sourcing file `%s'",
                file_full_name.c_str ());
     }
 }
 
 DEFUN (mfilename, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} mfilename ()\n\
+@deftypefn  {Built-in Function} {} mfilename ()\n\
 @deftypefnx {Built-in Function} {} mfilename (@code{\"fullpath\"})\n\
 @deftypefnx {Built-in Function} {} mfilename (@code{\"fullpathext\"})\n\
 Return the name of the currently executing file.  At the top-level,\n\
 return the empty string.  Given the argument @code{\"fullpath\"},\n\
 include the directory part of the file name, but not the extension.\n\
 Given the argument @code{\"fullpathext\"}, include the directory part\n\
 of the file name and the extension.\n\
 @end deftypefn")
@@ -4202,18 +4203,20 @@ feval (const octave_value_list& args, in
 
 DEFUN (feval, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} feval (@var{name}, @dots{})\n\
 Evaluate the function named @var{name}.  Any arguments after the first\n\
 are passed on to the named function.  For example,\n\
 \n\
 @example\n\
+@group\n\
 feval (\"acos\", -1)\n\
      @result{} 3.1416\n\
+@end group\n\
 @end example\n\
 \n\
 @noindent\n\
 calls the function @code{acos} with the argument @samp{-1}.\n\
 \n\
 The function @code{feval} is necessary in order to be able to write\n\
 functions that call user-supplied functions, because Octave does not\n\
 have a way to declare a pointer to a function (like C) or to declare a\n\
@@ -4437,20 +4440,22 @@ value 3.1416 available.\n\
 @example\n\
 eval(\"a = acos(-1);\");\n\
 @end example\n\
 \n\
 If an error occurs during the evaluation of @var{try} the @var{catch}\n\
 string is evaluated, as the following example shows:\n\
 \n\
 @example\n\
+@group\n\
 eval ('error (\"This is a bad example\");',\n\
       'printf (\"This error occurred:\\n%s\\n\", lasterr ());');\n\
      @print{} This error occurred:\n\
         This is a bad example\n\
+@end group\n\
 @end example\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin > 0)
diff --git a/src/pager.cc b/src/pager.cc
--- a/src/pager.cc
+++ b/src/pager.cc
@@ -484,17 +484,17 @@ With no arguments, @code{diary} toggles 
       break;
     }
 
   return retval;
 }
 
 DEFUN (more, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} more\n\
+@deftypefn  {Command} {} more\n\
 @deftypefnx {Command} {} more on\n\
 @deftypefnx {Command} {} more off\n\
 Turn output pagination on or off.  Without an argument, @code{more}\n\
 toggles the current state.\n\
 The current state can be determined via @code{page_screen_output}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
diff --git a/src/pr-output.cc b/src/pr-output.cc
--- a/src/pr-output.cc
+++ b/src/pr-output.cc
@@ -3727,17 +3727,17 @@ set_format_style (int argc, const string
     {
       init_format_state ();
       set_output_prec_and_fw (5, 10);
     }
 }
 
 DEFUN (format, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Command} {} format\n\
+@deftypefn  {Command} {} format\n\
 @deftypefnx {Command} {} format options\n\
 Reset or specify the format of the output produced by @code{disp} and\n\
 Octave's normal echoing mechanism.  This command only affects the display\n\
 of numbers but not how they are stored or computed.  To change the internal\n\
 representation from the default double use one of the conversion functions\n\
 such as @code{single}, @code{uint8}, @code{int64}, etc.\n\
 \n\
 By default, Octave displays 5 significant digits in a human readable form\n\
diff --git a/src/pt-binop.cc b/src/pt-binop.cc
--- a/src/pt-binop.cc
+++ b/src/pt-binop.cc
@@ -260,22 +260,22 @@ tree_boolean_expression::dup (symbol_tab
   new_be->copy_base (*this);
 
   return new_be;
 }
 
 DEFUN (do_braindead_shortcircuit_evaluation, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} do_braindead_shortcircuit_evaluation ()\n\
-@deftypefnx  {Built-in Function} {@var{old_val} =} do_braindead_shortcircuit_evaluation (@var{new_val})\n\
+@deftypefnx {Built-in Function} {@var{old_val} =} do_braindead_shortcircuit_evaluation (@var{new_val})\n\
 Query or set the internal variable that controls whether Octave will\n\
 do short-circuit evaluation of @samp{|} and @samp{&} operators inside the\n\
 conditions of if or while statements.\n\
 \n\
-This feature is only provided for compatibility with Matlab and should\n\
+This feature is only provided for compatibility with @sc{matlab} and should\n\
 not be used unless you are porting old code that relies on this feature.\n\
 \n\
 To obtain short-circuit behavior for logical expressions in new programs,\n\
 you should always use the @samp{&&} and @samp{||} operators.\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (do_braindead_shortcircuit_evaluation);
 }
diff --git a/src/sparse.cc b/src/sparse.cc
--- a/src/sparse.cc
+++ b/src/sparse.cc
@@ -204,17 +204,17 @@ to have a common size.\n\
      }
 
    return retval;
 }
 
 DEFUN (spalloc, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} spalloc (@var{m}, @var{n}, @var{nz})\n\
-Creates a @var{m}-by-@var{n} sparse matrix with pre-allocated space for at\n\
+Create an @var{m}-by-@var{n} sparse matrix with pre-allocated space for at\n\
 most @var{nz} nonzero elements.  This is useful for building the matrix\n\
 incrementally by a sequence of indexed assignments.  Subsequent indexed\n\
 assignments will reuse the pre-allocated memory, provided they are of one of\n\
 the simple forms\n\
 \n\
 @itemize\n\
 @item @code{@var{s}(I:J) = @var{x}}\n\
 \n\
diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -729,17 +729,17 @@ strcmpi_str_op (const std::string& s1, c
   return (s1.size () == s2.size ()
           && std::equal (s1.data (), s1.data () + s1.size (), s2.data (),
                          icmp_char_eq ()));
 }
 
 DEFUNX ("strcmpi", Fstrcmpi, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} strcmpi (@var{s1}, @var{s2})\n\
-Returns 1 if the character strings @var{s1} and @var{s2} are the same,\n\
+Return 1 if the character strings @var{s1} and @var{s2} are the same,\n\
 disregarding case of alphabetic characters, and 0 otherwise.\n\
 \n\
 If either @var{s1} or @var{s2} is a cell array of strings, then an array\n\
 of the same size is returned, containing the values described above for\n\
 every member of the cell array.  The other argument may also be a cell\n\
 array of strings (of the same size or with only one element), char matrix\n\
 or character string.\n\
 \n\
@@ -786,17 +786,17 @@ strncmpi_str_op (const std::string& s1, 
   return (n > 0 && n <= l1 && n <= l2 
           && std::equal (s1.data (), s1.data () + n, s2.data (),
                          icmp_char_eq ()));
 }
 
 DEFUNX ("strncmpi", Fstrncmpi, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} strncmpi (@var{s1}, @var{s2}, @var{n})\n\
-Returns 1 if the first @var{n} character of @var{s1} and @var{s2} are the\n\
+Return 1 if the first @var{n} character of @var{s1} and @var{s2} are the\n\
 same, disregarding case of alphabetic characters, and 0 otherwise.\n\
 \n\
 If either @var{s1} or @var{s2} is a cell array of strings, then an array\n\
 of the same size is returned, containing the values described above for\n\
 every member of the cell array.  The other argument may also be a cell\n\
 array of strings (of the same size or with only one element), char matrix\n\
 or character string.\n\
 \n\
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -1812,17 +1812,17 @@ synchronous I/O.\n\
 {
   return const_value (args, O_SYNC);
 }
 #endif
 
 #if defined (O_TRUNC)
 DEFUNX ("O_TRUNC", FO_TRUNC, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Variable} O_TRUNC ()\n\
+@deftypefn {Built-in Function} O_TRUNC ()\n\
 Return the numerical value of the file status flag that may be\n\
 returned by @code{fcntl} to indicate that if file exists, it should\n\
 be truncated when writing.\n\
 @seealso{fcntl, O_APPEND, O_ASYNC, O_CREAT, O_EXCL, O_NONBLOCK, O_RDONLY, O_RDWR, O_SYNC, O_WRONLY}\n\
 @end deftypefn")
 {
   return const_value (args, O_TRUNC);
 }
diff --git a/src/sysdep.cc b/src/sysdep.cc
--- a/src/sysdep.cc
+++ b/src/sysdep.cc
@@ -746,17 +746,17 @@ Return the native floating point format 
   oct_mach_info::float_format flt_fmt = oct_mach_info::native_float_format ();
 
   return octave_value (oct_mach_info::float_format_as_string (flt_fmt));
 }
 
 DEFUN (tilde_expand, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} tilde_expand (@var{string})\n\
-Performs tilde expansion on @var{string}.  If @var{string} begins with a\n\
+Perform tilde expansion on @var{string}.  If @var{string} begins with a\n\
 tilde character, (@samp{~}), all of the characters preceding the first\n\
 slash (or all characters, if there is no slash) are treated as a\n\
 possible user name, and the tilde and the following characters up to the\n\
 slash are replaced by the home directory of the named user.  If the\n\
 tilde is followed immediately by a slash, the tilde is replaced by the\n\
 home directory of the user running Octave.  For example:\n\
 \n\
 @example\n\
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -680,17 +680,17 @@ undo_string_escapes (const std::string& 
     retval.append (undo_string_escape (s[i]));
 
   return retval;
 }
 
 DEFUN (undo_string_escapes, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} undo_string_escapes (@var{s})\n\
-Converts special characters in strings back to their escaped forms.  For\n\
+Convert special characters in strings back to their escaped forms.  For\n\
 example, the expression\n\
 \n\
 @example\n\
 bell = \"\\a\";\n\
 @end example\n\
 \n\
 @noindent\n\
 assigns the value of the alert character (control-g, ASCII code 7) to\n\
