# HG changeset patch
# User jwe
# Date 886800433 0
#      Fri Feb 06 21:27:13 1998 +0000
# Node ID 8cdcb8945695a2cc68a7446b2e6cd6b8791bfc4a
# Parent  894d516b4a006b530a04b0b9a933914680261fb3
[project @ 1998-02-06 21:25:11 by jwe]

diff --git a/Makefile.in b/Makefile.in
--- a/Makefile.in
+++ b/Makefile.in
@@ -2,17 +2,17 @@
 # Makefile for octave's src directory
 #
 # John W. Eaton
 # jwe@bevo.che.wisc.edu
 # University of Wisconsin-Madison
 # Department of Chemical Engineering
 
 TARGETS = octave-bug mkoctfile libcruft liboctave kpathsea dlfcn \
-	src scripts doc check octave.info INSTALL.OCTAVE BUGS \
+	readline src scripts doc check octave.info INSTALL.OCTAVE BUGS \
 	install install-strip uninstall tags TAGS dist conf-dist \
 	snapshot snapshot-version
 
 NO_DEP_TARGETS = clean mostlyclean distclean maintainer-clean
 
 all: header-msg config-check
 	$(MAKE) -f octMakefile all
 
@@ -34,33 +34,35 @@ binary-dist: FORCE
 	$(MAKE) -f octMakefile CFLAGS=-O CXXFLAGS=-O LDFLAGS=-static all
 	$(MAKE) -f octMakefile binary-dist
 
 # Maybe this message will prevent people from asking why the
 # Makefiles don't work for them.  Maybe not.
 
 header-msg: FORCE
 	@echo ""
-	@echo "**********************************************************"
-	@echo "*                                                        *"
-	@echo "*  To compile Octave, you will need a recent version of  *"
-	@echo "*  GNU Make.                                             *"
-	@echo "*                                                        *"
-	@echo "*  You will also need g++ and libg++.                    *"
-	@echo "*                                                        *"
-	@echo "*  This version of Octave has been developed with        *"
-	@echo "*  version 2.7.2.   You probably won't get very far      *"
-	@echo "*  with earlier versions.  Later versions may work,      *"
-	@echo "*  but C++ is still evolving, so don't be too surprised  *"
-	@echo "*  if you run into some trouble.                         *"
-	@echo "*                                                        *"
-	@echo "*  Now would be a good time to read INSTALL.OCTAVE if    *"
-	@echo "*  you have not done so already.                         *"
-	@echo "*                                                        *"
-	@echo "**********************************************************"
+	@echo "***********************************************************"
+	@echo "*                                                         *"
+	@echo "*  To compile Octave, you will need a recent version of   *"
+	@echo "*  GNU Make.                                              *"
+	@echo "*                                                         *"
+	@echo "*  You will also need g++ 2.7.2 or later.  Version 2.8.0  *"
+	@echo "*  or egcs 1.0.x should work.  Later versions may work,   *"
+	@echo "*  but C++ is still evolving, so don't be too surprised   *"
+	@echo "*  if you run into some trouble.                          *"
+	@echo "*                                                         *"
+	@echo "*  libg++ is no longer required (if you are using g++     *"
+	@echo "*  2.7.2, libstdc++ is distributed along with libg++,     *"
+	@echo "*  but for later versions, libstdc++ is distributed       *"
+	@echo "*  separately).                                           *"
+	@echo "*                                                         *"
+	@echo "*  Now would be a good time to read INSTALL.OCTAVE if     *"
+	@echo "*  you have not done so already.                          *"
+	@echo "*                                                         *"
+	@echo "***********************************************************"
 	@echo ""
 
 help: header-msg
 	@echo ""
 	@echo "For more information, please read the files INSTALL,"
 	@echo "INSTALL.OCTAVE, and any other system-specific README"
 	@echo "files that apply (e.g., README.Linux)."
 	@echo ""
diff --git a/README b/README
--- a/README
+++ b/README
@@ -1,13 +1,13 @@
 GNU Octave -- a high-level language for numerical computations.
 
 Copyright (C) 1996, 1997 John W. Eaton
 
-Last updated: Tue May 20 14:16:45 1997
+Last updated: Fri Feb  6 02:23:36 1998
 
 Overview
 --------
 
 GNU Octave is a high-level language, primarily intended for numerical
 computations.  It provides a convenient command line interface for
 solving linear and nonlinear problems numerically.
 
@@ -36,22 +36,26 @@ Installation and Bugs
 
 Octave requires approximately 125MB of disk storage to unpack and
 compile from source (significantly less if you don't compile with
 debugging symbols or create shared libraries).  Once installed, Octave
 requires approximately 65MB of disk space (again, considerably less if
 you don't build shared libraries or the binaries and libraries do not
 include debugging symbols).
 
-In order to build Octave, you will need a current version of g++,
-libg++, and GNU make.  Recommended versions are
+To compile Octave, you will need a recent version of GNU Make.  You
+will also need g++ 2.7.2 or later.  Version 2.8.0 or egcs 1.0.x should
+work.  Later versions may work, but C++ is still evolving, so don't be
+too surprised if you run into some trouble.
 
-  g++ 2.7.2 or 2.7.2.1
-  libg++ 2.7.1 or 2.7.2
-  make 3.75
+It is no longer necessary to have libg++, but you do need to have the
+GNU implementation of libstdc++.  If you are using g++ 2.7.2,
+libstdc++ is distributed along with libg++, but for later versions,
+libstdc++ is distributed separately.  For egcs, libstdc++ is included
+with the compiler distribution.
 
 YOU MUST HAVE GNU MAKE TO COMPILE OCTAVE.  Octave's Makefiles use
 features of GNU Make that are not present in other versions of make.
 GNU Make is very portable and easy to install.
 
 See the notes in the files INSTALL and INSTALL.OCTAVE for more
 specific installation instructions, including directions for
 installing Octave from a binary distribution.
@@ -70,19 +74,19 @@ notice ommissions or inconsistencies, pl
 bug-octave@bevo.che.wisc.edu.  Specific suggestions for ways to
 improve Octave and its documentation are always welcome.
 
 Implementation
 --------------
 
 Octave is being developed with the Free Software Foundation's make,
 bison (a replacement for YACC), flex (a replacement for lex), gcc/g++,
-and libg++ on an Intel Pentium 133 system running Debian Linux/GNU.
-It should be possible to install it on any machine that runs GCC/G++.
-It may also be possible to install it using other implementations of
+and libstdc++ on an Intel Pentium II system running Linux/GNU.  It
+should be possible to install it on any machine that runs GCC/G++.  It
+may also be possible to install it using other implementations of
 these tools, but it will most certainly require much more work.  Do
 yourself a favor and get the GNU development tools, either via
 anonymous ftp from prep.ai.mit.edu or by writing the Free Software
 Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 
 The underlying numerical solvers are currently standard Fortran ones
 like Lapack, Linpack, Odepack, the Blas, etc., packaged in a library
 of C++ classes (see the files in the libcruft and liboctave
diff --git a/doc/interpreter/install.texi b/doc/interpreter/install.texi
--- a/doc/interpreter/install.texi
+++ b/doc/interpreter/install.texi
@@ -54,20 +54,20 @@ Use @code{g77} to compile Fortran code.
 
 @item --enable-shared
 Create shared libraries.  If you are planning to use
 @code{--enable-lite-kernelel} or the dynamic loading features, you will
 probably want to use this option.  It will make your @file{.oct} files
 much smaller and on some systems it may be necessary to build shared
 libraries in order to use dynamically linked functions.
 
-You may also want to build a shared version of @code{libg++}, if your
+You may also want to build a shared version of @code{libstdc++}, if your
 system doesn't already have one.  Note that a patch is needed to build
-shared versions of version 2.7.2 of @code{libg++} and @code{libstdc++}
-on the HP-PA architecture.  You can find the patch at
+shared versions of version 2.7.2 of @code{libstdc++} on the HP-PA
+architecture.  You can find the patch at
 @url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.
 
 @item --enable-dl
 Use @code{dlopen} and friends to make Octave capable of dynamically
 linking externally compiled functions.  This only works on systems that
 actually have these functions.  If you plan on using this feature, you
 should probably also use @code{--enable-shared} to reduce the size of
 your @file{.oct} files.
@@ -100,33 +100,39 @@ makefiles to work with other make progra
 your time.  We recommend you get and compile GNU Make instead.
 
 For plotting, you will need to have gnuplot installed on your system.
 Gnuplot is a command-driven interactive function plotting program.
 Gnuplot is copyrighted, but freely distributable.  The `gnu' in gnuplot
 is a coincidence---it is not related to the GNU project or the FSF in
 any but the most peripheral sense.
 
-For reading the on-line documentation, you will need the GNU Info reader
-from the GNU Texinfo package, version 3.11 or later.
+To compile Octave, you will need a recent version of GNU Make.  You
+will also need @code{g++} 2.7.2 or later.  Version 2.8.0 or @code{egcs}
+1.0.x should work.  Later versions may work, but C++ is still evolving,
+so don't be too surprised if you run into some trouble.
+
+It is no longer necessary to have @code{libg++}, but you do need to have
+the GNU implementation of @code{libstdc++}.  If you are using @code{g++}
+2.7.2, @code{libstdc++} is distributed along with @code{libg++}, but for
+later versions, @code{libstdc++} is distributed separately.  For
+@code{egcs}, @code{libstdc++} is included with the compiler
+distribution.
 
-For version @value{VERSION}, you must have the GNU C++ compiler
-(@code{gcc}) version 2.7.2 or later to compile Octave.  You will also
-need version 2.7.1 or 2.7.2 of the GNU C++ class library
-(@code{libg++}).  If you plan to modify the parser you will also need
-GNU @code{bison} and @code{flex}.  If you modify the documentation, you
-will need the @code{makeinfo} from the GNU Texinfo package.
+If you plan to modify the parser you will also need GNU @code{bison} and
+@code{flex}.  If you modify the documentation, you will need GNU
+Texinfo, along with the patch for the @code{makeinfo} program that is
+distributed with Octave.
 
-GNU Make, @code{gcc}, and @code{libg++}, @code{gnuplot}, @code{bison},
-@code{flex}, and Texinfo are all available from many anonymous ftp
-archives.  The primary site is @url{prep.ai.mit.edu}, but it is often
-very busy.  A list of sites that mirror the software on @code{prep} is
-available by anonymous ftp from
-@url{ftp://prep.ai.mit.edu/pub/gnu/GNUinfo/FTP}, or by fingering 
-@email{fsf@@prep.ai.mit.edu}.
+GNU Make, @code{gcc}, and @code{libstdc++}, @code{gnuplot},
+@code{bison}, @code{flex}, and Texinfo are all available from many
+anonymous ftp archives.  The primary site is @url{ftp.gnu.org}, but it
+is often very busy.  A list of sites that mirror the software on
+@url{ftp.gnu.org} is available by anonymous ftp from
+@url{ftp://ftp.gnu.org/pub/gnu/GNUinfo/FTP}.
 
 If you don't have a Fortran compiler, or if your Fortran compiler
 doesn't work like the traditional Unix f77, you will need to have the
 Fortran to C translator @code{f2c}.  You can get @code{f2c} from any
 number of anonymous ftp archives.  The most recent version of @code{f2c}
 is always available from @url{netlib.att.com}.
 
 On an otherwise idle Pentium 133 running Linux, it will take somewhere
@@ -223,19 +229,19 @@ and @code{dlerror}, but not the header f
 find the source for the header file and install it in the directory
 @file{usr/include}.  This is reportedly a problem with Slackware 3.1.
 For Linux/GNU systems, the source for @file{dlfcn.h} is in the
 @code{ldso} package.
 
 @item
 Building @file{.oct} files doesn't work.
 
-You should probably have a shared version of @code{libg++}.  A patch is
-needed to build shared versions of version 2.7.2 of @code{libg++} and
-@code{libstdc++} on the HP-PA architecture.  You can find the patch at
+You should probably have a shared version of @code{libstdc++}.  A patch
+is needed to build shared versions of version 2.7.2 of @code{libstdc++}
+on the HP-PA architecture.  You can find the patch at
 @url{ftp://ftp.cygnus.com/pub/g++/libg++-2.7.2-hppa-gcc-fix}.
 
 @item
 On FreeBSD systems Octave may hang while initializing some internal
 constants.  The fix appears to be to use
 
 @example
 options      GPL_MATH_EMULATE
diff --git a/liboctave/oct-syscalls.cc b/liboctave/oct-syscalls.cc
--- a/liboctave/oct-syscalls.cc
+++ b/liboctave/oct-syscalls.cc
@@ -151,17 +151,17 @@ pid_t
 octave_syscalls::vfork (string& msg)
 {
   pid_t status = -1;
 
 #if defined (HAVE_VFORK) || defined (HAVE_FORK)
 #if defined (HAVE_VFORK)
   status = ::vfork ();
 #else
-  status = ::vfork ();
+  status = ::fork ();
 #endif
 
   if (status < 0)
     msg = ::strerror (errno);
 #else
   msg = NOT_SUPPORTED ("vfork");
 #endif
 
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -161,17 +161,19 @@ dist: dist-info-files
 	  cd ..; \
 	done
 	tar chf `cat .fname`.tar `cat .fname`
 	rm -rf `cat .fname`
 	tar xf `cat .fname`.tar
 	find `cat .fname` \( \( -name RCS -a -type d \) \
 	  -o \( -name CVS -a -type d \) -o \( -name OLD -a -type d \) \
 	  -o -name "=*" -o -name '*~' -o -name '#*#' -o -name config.log \
-	  -o -name config.status -o -name c-auto.h \) -print | xargs rm -rf
+	  -o -name config.status -o -name config.cache -o-name config.h \
+	  -o -name Makefile -o -name stamp-h -o -name klibtool.config \
+	  -o -name c-auto.h \) -print | xargs rm -rf
 	rm -f `cat .fname`/test/octave.test/*.m
 	chmod -R a+rwX `cat .fname`
 	tar cf `cat .fname`.tar `cat .fname`
 	rm -rf `cat .fname`
 	gzip --best `cat .fname`.tar
 	rm -f .fname
 .PHONY: dist
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+Fri Feb  6 00:29:50 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* miscellaneous/popen2.m: Use vfork instead of fork.
+
 Tue Feb  3 00:18:40 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* special-matrix/sylvester_matrix.m: Rename from hadamard.m
 
 	* miscellaneous/bug_report.m: Don't try to get smart with
 	OCTAVE_HOME.  Assume octave-bug can be found in EXEC_PATH.
 
 	* Makefile.in (install): Create separate ls-R files for
diff --git a/scripts/miscellaneous/popen2.m b/scripts/miscellaneous/popen2.m
--- a/scripts/miscellaneous/popen2.m
+++ b/scripts/miscellaneous/popen2.m
@@ -54,17 +54,17 @@ function [in, out, pid] = popen2 (comman
 
     if (isstr (command))
 
       [stdin_pipe, stdin_status] = pipe ();
       [stdout_pipe, stdout_status] = pipe ();
 
       if (stdin_status == 0 && stdout_status == 0)
 
-	pid = fork ();
+	pid = vfork ();
 
 	if (pid == 0)
 
 	  fclose (stdin_pipe (2));
 	  fclose (stdout_pipe (1));
 
 	  dup2 (stdin_pipe (1), stdin);
 	  fclose (stdin_pipe (1));
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+Fri Feb  6 01:23:18 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-stream.cc (octave_base_stream::file_number): Rename from fileno.
+	Change all uses.
+
+	* fsolve.cc (fsolve_option_table): Add missing & to function names.
+
 Thu Feb  5 02:27:18 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dirfns.cc (Fls): If first attempt at reading process output
 	fails, sleep once and try again.
 	* toplev.cc (run_command_and_return_output): Likewise.
 
 	* oct-procbuf.cc (octave_procbuf::open): Use vfork if it is available.
 
diff --git a/src/DLD-FUNCTIONS/fsolve.cc b/src/DLD-FUNCTIONS/fsolve.cc
--- a/src/DLD-FUNCTIONS/fsolve.cc
+++ b/src/DLD-FUNCTIONS/fsolve.cc
@@ -195,18 +195,18 @@ struct NLEQN_OPTIONS
   d_get_opt_mf d_get_fcn;
 };
 
 static NLEQN_OPTIONS fsolve_option_table [] =
 {
   { "tolerance",
     { "tolerance", 0, },
     { 1, 0, }, 1,
-    NLEqn_options::set_tolerance,
-    NLEqn_options::tolerance, },
+    &NLEqn_options::set_tolerance,
+    &NLEqn_options::tolerance, },
 
   { 0,
     { 0, 0, },
     { 0, 0, }, 0,
     0, 0, },
 };
 
 static void
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -716,17 +716,17 @@ printf_format_list::printme (void) const
       cerr << elt->args<< "\t"
 	   << elt->type << "\t"
 	   << elt->modifier << "\t"
 	   << undo_string_escapes (elt->text) << "\n";
     }
 }
 
 int
-octave_base_stream::fileno (void)
+octave_base_stream::file_number (void)
 {
   // Kluge alert!
 
   if (name () == "stdin")
     return 0;
 
   if (name () == "stdout")
     return 1;
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -252,17 +252,17 @@ public:
   virtual istream *input_stream (void) { return 0; }
 
   // If the derived class provides this function and it returns a
   // pointer to a valid ostream, flush(), write(), and printf() will
   // automatically work for this stream.
 
   virtual ostream *output_stream (void) { return 0; }
 
-  int fileno (void);
+  int file_number (void);
 
   bool ok (void) const { return ! fail; }
 
   // Return current error message for this stream.
 
   string error (bool clear, int& err_num);
 
 protected:
@@ -407,17 +407,17 @@ public:
   string error (bool clear, int& err_num);
 
   string error (bool clear = false)
     {
       int err_num;
       return error (clear, err_num);
     }
 
-  int fileno (void) { return rep ? rep->fileno () : -1; }
+  int file_number (void) { return rep ? rep->file_number () : -1; }
 
   bool ok (void) const { return rep && rep->ok (); }
 
   operator bool () const { return ok (); }
 
   string name (void);
 
   int mode (void);
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -106,18 +106,18 @@ Otherwise, FID is negative and MSG conta
 
   if (nargin == 2)
     {
       octave_stream *old_stream = octave_stream_list::lookup (args(0));
       octave_stream *new_stream = octave_stream_list::lookup (args(1));
 
       if (! error_state)
 	{
-	  int i_old = old_stream->fileno ();
-	  int i_new = new_stream->fileno ();
+	  int i_old = old_stream->file_number ();
+	  int i_new = new_stream->file_number ();
 
 	  if (i_old >= 0 && i_new >= 0)
 	    {
 	      string msg;
 
 	      int status = octave_syscalls::dup2 (i_old, i_new, msg);
 
 	      retval(0) = static_cast<double> (status);
