# HG changeset patch
# User jwe
# Date 1077652038 0
#      Tue Feb 24 19:47:18 2004 +0000
# Node ID e2d7d1ef5e5556d0073dfbe46a44757ab7756271
# Parent  da0d1c453971a75900d007d29a26bf299f16ed18
[project @ 2004-02-24 19:47:18 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,15 @@
 2004-02-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-io.cc (do_stream_open): Don't call ::error if stream can't
-	be created.  Don't call ::fopen if arch is invalid.	
+	be created.  Don't call ::fopen if arch is invalid.  Set error
+	state for stream if fopen fails.
+	* oct-stream.h (octave_stream::error (const char *)): New function.
+	(octave_stream::error (const std::string&)): Now public.
 
 2004-02-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-io.cc (Fftell): Return long integer instead of streamoff_array.
 	(do_stream_open): Create octave_stdiostream instead of octave_fstream.
 
 	* oct-fstrm.cc (octave_fstream::seek, octave_fstream::tell):
 	Always fail.  Signatures now match C library functionsb.
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -337,25 +337,22 @@ do_stream_open (const std::string& name,
     {
       oct_mach_info::float_format flt_fmt =
 	oct_mach_info::string_to_float_format (arch);
 
       if (! error_state)
 	{
 	  FILE *fptr = ::fopen (name.c_str (), mode.c_str ());
 
-	  if (fptr)
-	    {
-	      retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
+	  retval = octave_stdiostream::create (name, fptr, md, flt_fmt);
 
-	      // XXX FIXME XXX -- it would now be possible for the
-	      // file id returned by fopen to correspond directly to
-	      // the underlying system file id (::fileno (fptr)).
-	      // Doing that would require some changes to the
-	      // octave_stream_list class.
+	  if (! fptr)
+	    {
+	      using namespace std;
+	      retval.error (::strerror (errno));
 	    }
 	}
     }
 
   return retval;
 }
 
 static octave_stream
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -537,16 +537,26 @@ public:
   std::string error (bool clear, int& err_num);
 
   std::string error (bool clear = false)
     {
       int err_num;
       return error (clear, err_num);
     }
 
+  // Set the error message and state.
+
+  void error (const std::string& msg)
+    {
+      if (rep)
+	rep->error (msg);
+    }
+
+  void error (const char *msg) { error (std::string (msg)); }
+
   int file_number (void) { return rep ? rep->file_number () : -1; }
 
   bool is_valid (void) const { return (rep != 0); }
 
   bool ok (void) const { return rep && rep->ok (); }
 
   operator bool () const { return ok (); }
 
@@ -581,22 +591,16 @@ private:
       else
 	{
 	  retval = false;
 	  invalid_stream_error (who);
 	}
 
       return retval;
     }
-
-  void error (const std::string& msg)
-    {
-      if (rep)
-	rep->error (msg);
-    }
 };
 
 class
 octave_stream_list
 {
 protected:
 
   octave_stream_list (void) : list (32), curr_len (0) { }
