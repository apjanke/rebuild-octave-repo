# HG changeset patch
# User jwe
# Date 1078865418 0
#      Tue Mar 09 20:50:18 2004 +0000
# Node ID bb82599f039faf28a7cf1fc4133638c350d9df24
# Parent  a7b1e6122d0c1873f95a65fc1d0dee094f48384e
[project @ 2004-03-09 20:50:18 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1997,38 +1997,26 @@ Array<T>::index2 (idx_vector& idx_arg, i
       // If indexing a vector with a matrix, return value has same
       // shape as the index.  Otherwise, it has same orientation as
       // indexed object.
 
       Array<T> tmp = index1 (idx_arg, resize_ok);
 
       int len = tmp.length ();
 
-      if (len == 0)
+      if ((len != 0 && idx_arg.one_zero_only ())
+	  || idx_orig_rows == 1 || idx_orig_columns == 1)
 	{
-	  if (idx_orig_rows == 0 || idx_orig_columns == 0)
-	    retval = Array<T> (dim_vector (idx_orig_rows, idx_orig_columns));
-	  else if (nr == 1)
-	    retval = Array<T> (dim_vector (1, 0));
+	  if (nr == 1)
+	    retval = Array<T> (tmp, dim_vector (1, len));
 	  else
-	    retval = Array<T> (dim_vector (0, 1));
+	    retval = Array<T> (tmp, dim_vector (len, 1));
 	}
       else
-	{
-	  if (idx_arg.one_zero_only ()
-	      || idx_orig_rows == 1 || idx_orig_columns == 1)
-	    {
-	      if (nr == 1)
-		retval = Array<T> (tmp, dim_vector (1, len));
-	      else
-		retval = Array<T> (tmp, dim_vector (len, 1));
-	    }
-	  else
-	    retval = Array<T> (tmp, dim_vector (idx_orig_rows, idx_orig_columns));
-	}
+	retval = Array<T> (tmp, dim_vector (idx_orig_rows, idx_orig_columns));
     }
   else
     {
       if (liboctave_wfi_flag
 	  && ! (idx_arg.one_zero_only ()
 		&& idx_orig_rows == nr
 		&& idx_orig_columns == nc))
 	(*current_liboctave_warning_handler) ("single index used for matrix");
