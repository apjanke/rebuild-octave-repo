# HG changeset patch
# User jwe
# Date 1075746669 0
#      Mon Feb 02 18:31:09 2004 +0000
# Node ID c88afb778c4102096e1958167089762f082ffc75
# Parent  2ae4a2695ab61a627433179e91168c40a0280bde
[project @ 2004-02-02 18:31:09 by jwe]

diff --git a/liboctave/Array-flags.cc b/liboctave/Array-flags.cc
--- a/liboctave/Array-flags.cc
+++ b/liboctave/Array-flags.cc
@@ -19,17 +19,17 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
-#include "Array.h"
+#include "Array-flags.h"
 
 // These have to be defined somewhere, but only once.
 
 bool liboctave_wfi_flag = false;
 bool liboctave_wrore_flag = false;
 
 /*
 ;;; Local Variables: ***
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,17 @@
+2004-02-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* boolNDArray.h (boolNDArray::boolNDArray): Declare dim_vector
+	reference arg const.
+
+2004-01-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Array-flags.cc: Include Array-flags.h, not Array.h.  Doh.
+
 2004-01-30  Jakub Bogusz  <qboosh@pld-linux.org>
 
 	* Array-flags.h (liboctave_wfi_flag, liboctave_wrore_flag):
 	Now bool, to match definition in Array-flags.cc.
 
 2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-ops.cc: Include <vector> instead of <memory> for new
diff --git a/liboctave/boolNDArray.h b/liboctave/boolNDArray.h
--- a/liboctave/boolNDArray.h
+++ b/liboctave/boolNDArray.h
@@ -40,19 +40,19 @@ Software Foundation, 59 Temple Place - S
 
 class
 boolNDArray : public ArrayN<bool>
 {
 public:
   
   boolNDArray (void) : ArrayN<bool> () { }
 
-  boolNDArray (dim_vector& dv) : ArrayN<bool> (dv) { }
+  boolNDArray (const dim_vector& dv) : ArrayN<bool> (dv) { }
 
-  boolNDArray (dim_vector& dv, const bool& val)
+  boolNDArray (const dim_vector& dv, const bool& val)
     : ArrayN<bool> (dv, val) { }
   
   boolNDArray (const boolNDArray& a) : ArrayN<bool> (a) { }
 
   boolNDArray (const boolMatrix& a) : ArrayN<bool> (a) { }
 
   boolNDArray (const Array2<bool>& a) : ArrayN<bool> (a) { }
 
diff --git a/liboctave/kpse.cc b/liboctave/kpse.cc
--- a/liboctave/kpse.cc
+++ b/liboctave/kpse.cc
@@ -338,17 +338,17 @@ xfopen (const std::string& filename, con
     FATAL_PERROR (filename.c_str ());
 
   return f;
 }
 
 static void
 xfclose (FILE *f, const std::string& filename)
 {
-  assert (f);
+  assert (f != 0);
 
   if (! fclose (f))
     FATAL_PERROR (filename.c_str ());
 }
 
 /* A single (key,value) pair.  */
 
 struct hash_element_type
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-02-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-map.cc (Octave_map::assign (const std::string, const Cell&)):
+	Set dimensions to RHS dimensions, not 1x1.
+
 2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-bool.cc, ov-cx-mat.cc, ov-re-mat.cc, ov-str-mat.cc:
 	Include <vector>.
 	* file-io.cc, ls-hdf5.cc, ls-mat4.cc, ls-mat5.cc, ls-oct-binary.cc:
 	Include <vector>, not <memory> for new defn of OCTAVE_LOCAL_BUFFER.
 	* load-save.cc, ls-mat-ascii.cc, ls-oct-ascii.cc
 	No need to include <memory> now.
@@ -1593,17 +1598,17 @@ 2003-07-08  John W. Eaton  <jwe@bevo.che
 
 	* defaults.h.in (OCTAVE_LOCALAPIFCNFILEDIR, OCTAVE_LOCALAPIOCTFILEDIR):
 	Subsitute new variables. 
 
 	* defun.cc (check_version): Compare version to OCTAVE_API_VERSION,
 	not OCTAVE_VERSION.  Mismatch is now fatal.
 	* defun-int.h (DEFINE_FUN_INSTALLER_FUN3): Pass
 	OCTAVE_API_VERSION instead of OCTAVE_VERSION to check_version.
-	* version.h (OCTAVE_API_VERSION): New macro.
+	* version.h (OCTAVE_API_VERSION): New macro, initial value api-v1.
 
 	* defaults.cc (Vdefault_exec_path): New static variable.
 	(set_default_default_exec_path): New function.
 	(install_defaults): Call it.
 	(exec_path): Use it.
 	(default_exec_path): New function.
 	(symbols_of_defaults): Add DEFVAR for DEFAULT_EXEC_PATH.
 
@@ -1612,16 +1617,20 @@ 2003-07-07  John W. Eaton  <jwe@bevo.che
 	* defaults.h.in (OCTAVE_LOCALSTARTUPFILEDIR, OCTAVE_STARTUPFILEDIR):
 	Set values directly instead of constructing them.
 
 2003-06-28  Arno J. Klaassen  <arno@heho.snv.jussieu.fr>
 
 	* toplev.cc (octave_config_info): Key for OCTAVE_CONF_DEFS should
 	be DEFS, not UGLY_DEFS.
 
+2003-06-27  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* version.h (OCTAVE_VERSION): Now 2.1.50.
+
 2003-06-26  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* variables.cc (symbol_exist): Distinguish between user and dld
 	functions loaded in memory.
 
 2003-06-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-mat.cc (tm_row_const::init, tm_const::init): Don't ignore
@@ -1688,16 +1697,20 @@ 2003-06-13  John W. Eaton  <jwe@bevo.che
 	to extract values when none are available.
 
 2003-06-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-plot.cc (Vgnuplot_has_multiplot): Delete variable.
 	(gnuplot_has_multiplot): Delete.
 	(symbols_of_pt_plot): Delete DEFVAR for gnuplot_has_multiplot.
 
+2003-05-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* version.h (OCTAVE_VERSION): Now 2.1.49.
+
 2003-05-28  Teemu Ikonen <tpikonen@pcu.helsinki.fi>
 
 	* load-save.cc (save_mat5_binary_element, save_mat_binary_data):
 	Allow saving of non-7-bit ASCII characters.
 
 2003-05-28  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* oct-stream.cc (FINISH_CHARACTER_CONVERSION,
@@ -1718,16 +1731,24 @@ 2003-05-14  John W. Eaton  <jwe@bevo.che
 
 	* Makefile.in: Handle DESTDIR.
 
 2003-05-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l: Use yyunput (X, yytext) instead of unput (X) for newer
 	versions of flex.
 
+2003-05-06  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* version.h (OCTAVE_VERSION): Now 2.1.48.
+
+2003-05-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* version.h (OCTAVE_VERSION): Now 2.1.47.
+
 2003-05-01  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* load-save.cc (save_ascii_data): If saving a range with
 	non-integer base, limit, or increment, save as matrix instead.
 	(get_save_type): Avoid unsigned types.
 
 2003-04-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/ls-oct-binary.cc b/src/ls-oct-binary.cc
--- a/src/ls-oct-binary.cc
+++ b/src/ls-oct-binary.cc
@@ -277,17 +277,17 @@ save_binary_data (std::ostream& os, cons
   os.write (X_CAST (char *, &name_len), 4);
   os << name;
 
   FOUR_BYTE_INT doc_len = doc.length ();
 
   os.write (X_CAST (char *, &doc_len), 4);
   os << doc;
 
-  char tmp;
+  unsigned char tmp;
 
   tmp = mark_as_global;
   os.write (X_CAST (char *, &tmp), 1);
 
   // 255 flags the new binary format
   tmp = 255;
   os.write (X_CAST (char *, &tmp), 1);
 
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -230,17 +230,17 @@ Octave_map::assign (const std::string& k
 
 Octave_map&
 Octave_map::assign (const std::string& k, const Cell& rhs)
 {
   if (empty ())
     {
       map[k] = rhs;
 
-      dimensions = dim_vector (1, 1);
+      dimensions = rhs.dims ();
     }
   else
     {
       if (dims () == rhs.dims ())
 	map[k] = rhs;
       else
 	error ("invalid structure assignment");
     }
