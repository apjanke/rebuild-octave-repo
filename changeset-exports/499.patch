# HG changeset patch
# User jwe
# Date 773633510 0
#      Fri Jul 08 02:11:50 1994 +0000
# Node ID 966db71124dc5ab472ca4fc887024fa0ea2f2942
# Parent  2e13534654689fdcccccee759f67aa5ae2a16934
[project @ 1994-07-08 02:09:25 by jwe]

diff --git a/src/builtins.h b/src/builtins.h
--- a/src/builtins.h
+++ b/src/builtins.h
@@ -23,25 +23,20 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #if !defined (octave_builtins_h)
 #define octave_builtins_h 1
 
 class ostrstream;
 class Complex;
 struct help_list;
 
-#ifndef MAPPER_FCN_TYPEDEFS
-#define MAPPER_FCN_TYPEDEFS 1
-
 typedef double (*d_d_Mapper)(double);
 typedef double (*d_c_Mapper)(const Complex&);
 typedef Complex (*c_c_Mapper)(const Complex&);
 
-#endif
-
 // If can_return_complex_for_real_arg is 1, lower_limit and
 // upper_limit specify the range of values for which a real arg
 // returns a real value.  Outside that range, we have to convert args
 // to complex, and call the complex valued function.
 //
 // If can_return_complex_for_real_arg is 0, lower_limit and
 // upper_limit are ignored.
 
@@ -62,23 +57,18 @@ struct builtin_mapper_functions
   double lower_limit;
   double upper_limit;
   d_d_Mapper d_d_mapper;
   d_c_Mapper d_c_mapper;
   c_c_Mapper c_c_mapper;
   char *help_string;
 };
 
-#ifndef SV_FUNCTION_TYPEDEFS
-#define SV_FUNCTION_TYPEDEFS 1
-
 typedef int (*sv_Function)(void);
 
-#endif
-
 struct builtin_string_variables
 {
   char *name;
   char *value;
   sv_Function sv_function;
   char *help_string;
 };
 
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -1,12 +1,12 @@
 // dynamic-ld.cc                                         -*- C++ -*-
 /*
 
-Copyright (C) 1993 John W. Eaton
+Copyright (C) 1993, 1994 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -135,21 +135,21 @@ octave_dld_tc2 (const char *name, const 
     }
 
   delete [] mangled_fcn_name;
 
   return retval;
     
 }
 
-tree_constant *
-octave_dld_tc2_and_go (tree_constant *args, int nargin, int nargout,
+Octave_object
+octave_dld_tc2_and_go (const Octave_object& args, int nargin, int nargout,
 		       const char *name, const char *fcn, const char *object)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   builtin_fcn_ptr fcn_to_call = octave_dld_tc2 (name, fcn, object);
 
   if (fcn_to_call != (builtin_fcn_ptr) NULL)
     retval = (*fcn_to_call) (args, nargin, nargout);
   else
     error ("octave_dld_tc2_and_go: failed to load `%s'", name);
 
diff --git a/src/pt-plot.h b/src/pt-plot.h
--- a/src/pt-plot.h
+++ b/src/pt-plot.h
@@ -74,17 +74,16 @@ tree_subplot_list : public tree
 
   tree_subplot_list *chain (tree_subplot_list *t);
 
   tree_subplot_list *reverse (void);
 
   tree_subplot_list *next_elem (void);
 
   tree_constant eval (int print);
-//  tree_constant *eval (int print, int nargout);
 
   int print (int ndim, ostrstream& plot_buf);
 
  private:
   tree_expression *plot_data;
   tree_subplot_using *using;
   tree_expression *title;
   tree_subplot_style *style;
diff --git a/src/t-builtins.cc b/src/t-builtins.cc
--- a/src/t-builtins.cc
+++ b/src/t-builtins.cc
@@ -169,38 +169,38 @@ list_in_columns (ostrstream& os, char **
 	  pos += max_name_length;
 	}
       os << "\n";
     }
 
   return os;
 }
 
-tree_constant *
+Octave_object
 builtin_casesen (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   if (argc == 1 || (argc > 1 && strcmp (argv[1], "off") == 0))
     warning ("casesen: sorry, Octave is always case sensitive");
   else if (argc > 1 && strcmp (argv[1], "on") == 0)
     ; // ok.
   else
     print_usage ("casesen");
 
   return retval;
 }
 
 /*
  * Change current working directory.
  */
-tree_constant *
+Octave_object
 builtin_cd (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   if (argc > 1)
     {
       static char *dirname = (char *) NULL;
 
       if (dirname)
 	free (dirname);
 
@@ -246,20 +246,20 @@ in_list (char *s, char **list)
   return 0;
 }
 #endif
 
 /*
  * Wipe out user-defined variables and functions given a list of
  * globbing patterns.
  */
-tree_constant *
+Octave_object
 builtin_clear (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
 // Always clear the local table, but don't clear currently compiled
 // functions unless we are at the top level.  (Allowing that to happen
 // inside functions would result in pretty odd behavior...)
 
   int clear_user_functions = (curr_sym_tab == top_level_sym_tab);
 
   if (argc == 1)
@@ -323,45 +323,45 @@ builtin_clear (int argc, char **argv, in
 
     }
   return retval;
 }
 
 /*
  * Associate a cryptic message with a variable name.
  */
-tree_constant *
+Octave_object
 builtin_document (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
   if (argc == 3)
     document_symbol (argv[1], argv[2]);
   else
     print_usage ("document");
   return retval;
 }
 
 /*
  * Edit commands with your favorite editor.
  */
-tree_constant *
+Octave_object
 builtin_edit_history (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
   do_edit_history (argc, argv);
   return retval;
 }
 
 /*
  * Set output format state.
  */
-tree_constant *
+Octave_object
 builtin_format (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
   set_format_style (argc, argv);
   return retval;
 }
 
 static void
 help_syms_list (ostrstream& output_buf, help_list *list,
 		const char *desc)
 {
@@ -483,20 +483,20 @@ try_info (const char *string, int force 
     }
 
   return status;
 }
 
 /*
  * Print cryptic yet witty messages.
  */
-tree_constant *
+Octave_object
 builtin_help (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   if (argc == 1)
     {
       simple_help ();
     }
   else
     {
       if (argv[1] != (char *) NULL && strcmp (argv[1], "-i") == 0)
@@ -618,34 +618,34 @@ builtin_help (int argc, char **argv, int
     }
 
   return retval;
 }
 
 /*
  * Display, save, or load history.
  */
-tree_constant *
+Octave_object
 builtin_history (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   do_history (argc, argv);
 
   return retval;
 }
 
 /*
  * Change state flag that determines whether lines are added to plots
  * or drawn on new plots.
  */
-tree_constant *
+Octave_object
 builtin_hold (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
   
   switch (argc)
     {
     case 1:
       clear_before_plotting = ! clear_before_plotting;
       break;
     case 2:
       if (strcasecmp (argv[1], "on") == 0)
@@ -804,20 +804,20 @@ load_variable (char *nm, int force, istr
 
 /*
  * Read variables from an input stream.
  *
  * BUGS:
  *
  *  -- This function is not terribly robust.
  */
-tree_constant *
+Octave_object
 builtin_load (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   argc--;
   argv++;
 
   int force = 0;
   if (argc > 0 && strcmp (*argv, "-force") == 0)
     {
       force++;
@@ -890,20 +890,20 @@ builtin_load (int argc, char **argv, int
     file.close ();
 
   return retval;
 }
 
 /*
  * Get a directory listing.
  */
-tree_constant *
+Octave_object
 builtin_ls (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   ostrstream ls_buf;
 
   ls_buf << "ls -C ";
   for (int i = 1; i < argc; i++)
     ls_buf << tilde_expand (argv[i]) << " ";
 
   ls_buf << ends;
@@ -924,20 +924,20 @@ builtin_ls (int argc, char **argv, int n
   delete [] ls_command;
 
   return retval;
 }
 
 /*
  * Run previous commands from the history list.
  */
-tree_constant *
+Octave_object
 builtin_run_history (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
   do_run_history (argc, argv);
   return retval;
 }
 
 /*
  * Return nonzero if PATTERN has any special globbing chars in it.
  */
 static int
@@ -974,20 +974,20 @@ glob_pattern_p (char *pattern)
     }
 
   return 0;
 }
 
 /*
  * Write variables to an output stream.
  */
-tree_constant *
+Octave_object
 builtin_save (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   if (argc < 2)
     {
       print_usage ("save");
       return retval;
     }
 
   argc--;
@@ -1077,20 +1077,20 @@ builtin_save (int argc, char **argv, int
     file.close ();
 
   return retval;
 }
 
 /*
  * Set plotting options.
  */
-tree_constant *
+Octave_object
 builtin_set (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   ostrstream plot_buf;
 
   if (argc > 1)
     {
       if (almost_match ("parametric", argv[1], 3))
 	parametric_plot = 1;
       else if (almost_match ("noparametric", argv[1], 5))
@@ -1108,20 +1108,20 @@ builtin_set (int argc, char **argv, int 
   delete [] plot_command;
 
   return retval;
 }
 
 /*
  * Set plotting options.
  */
-tree_constant *
+Octave_object
 builtin_show (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   ostrstream plot_buf;
 
   for (int i = 0; i < argc; i++)
     plot_buf << argv[i] << " ";
 
   plot_buf << "\n" << ends;
 
@@ -1200,20 +1200,20 @@ maybe_list (const char *header, ostrstre
 	  list_in_columns (output_buf, symbols);
 	  status = 1;
 	}
       delete [] symbols;
     }
   return status;
 }
 
-tree_constant *
+Octave_object
 builtin_who (int argc, char **argv, int nargout)
 {
-  tree_constant *retval = NULL_TREE_CONST;
+  Octave_object retval;
 
   int show_builtins = 0;
   int show_functions = (curr_sym_tab == top_level_sym_tab);
   int show_variables = 1;
   int show_verbose = 0;
 
   if (argc > 1)
     {
diff --git a/src/t-builtins.h b/src/t-builtins.h
--- a/src/t-builtins.h
+++ b/src/t-builtins.h
@@ -29,33 +29,33 @@ Software Foundation, 675 Mass Ave, Cambr
 struct builtin_text_functions
 {
   char *name;
   int nargin_max;
   Text_fcn text_fcn;
   char *help_string;
 };
 
-extern tree_constant *builtin_casesen (int argc, char **argv, int nargout);
-extern tree_constant *builtin_cd (int argc, char **argv, int nargout);
-extern tree_constant *builtin_clear (int argc, char **argv, int nargout);
-extern tree_constant *builtin_document (int argc, char **argv, int nargout);
-extern tree_constant *builtin_edit_history (int argc, char **argv,
+extern Octave_object builtin_casesen (int argc, char **argv, int nargout);
+extern Octave_object builtin_cd (int argc, char **argv, int nargout);
+extern Octave_object builtin_clear (int argc, char **argv, int nargout);
+extern Octave_object builtin_document (int argc, char **argv, int nargout);
+extern Octave_object builtin_edit_history (int argc, char **argv,
 					    int nargout);
-extern tree_constant *builtin_format (int argc, char **argv, int nargout);
-extern tree_constant *builtin_help (int argc, char **argv, int nargout);
-extern tree_constant *builtin_history (int argc, char **argv, int nargout);
-extern tree_constant *builtin_hold (int argc, char **argv, int nargout);
-extern tree_constant *builtin_load (int argc, char **argv, int nargout);
-extern tree_constant *builtin_ls (int argc, char **argv, int nargout);
-extern tree_constant *builtin_run_history (int argc, char **argv, int nargout);
-extern tree_constant *builtin_save (int argc, char **argv, int nargout);
-extern tree_constant *builtin_set (int argc, char **argv, int nargout);
-extern tree_constant *builtin_show (int argc, char **argv, int nargout);
-extern tree_constant *builtin_who (int argc, char **argv, int nargout);
+extern Octave_object builtin_format (int argc, char **argv, int nargout);
+extern Octave_object builtin_help (int argc, char **argv, int nargout);
+extern Octave_object builtin_history (int argc, char **argv, int nargout);
+extern Octave_object builtin_hold (int argc, char **argv, int nargout);
+extern Octave_object builtin_load (int argc, char **argv, int nargout);
+extern Octave_object builtin_ls (int argc, char **argv, int nargout);
+extern Octave_object builtin_run_history (int argc, char **argv, int nargout);
+extern Octave_object builtin_save (int argc, char **argv, int nargout);
+extern Octave_object builtin_set (int argc, char **argv, int nargout);
+extern Octave_object builtin_show (int argc, char **argv, int nargout);
+extern Octave_object builtin_who (int argc, char **argv, int nargout);
 
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
 ;;; End: ***
