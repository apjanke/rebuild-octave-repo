# HG changeset patch
# User Andriy Shinkarchuck <adriano32.gnu@gmail.com>
# Date 1314404231 0
#      Sat Aug 27 00:17:11 2011 +0000
# Node ID 1347d498959cdafbf38e24182aed3dd2f515405c
# Parent  7df7650492e85245c6653062ad4610af4bb6fd6c
Comment/uncomment selected text operation can be undone with a single Undo action

diff --git a/gui/src/FileEditorMdiSubWindow.cpp b/gui/src/FileEditorMdiSubWindow.cpp
--- a/gui/src/FileEditorMdiSubWindow.cpp
+++ b/gui/src/FileEditorMdiSubWindow.cpp
@@ -263,30 +263,32 @@ void
 FileEditorMdiSubWindow::doCommentSelectedText (bool comment)
 {
   if ( m_editor->hasSelectedText() )
     {
       int lineFrom, lineTo, colFrom, colTo, i;
       m_editor->getSelection (&lineFrom,&colFrom,&lineTo,&colTo);
       if ( colTo == 0 )  // the beginning of last line is not selected
         lineTo--;        // stop at line above
+      m_editor->beginUndoAction ();
       for ( i=lineFrom; i<=lineTo; i++ )
         {
           if ( comment )
             m_editor->insertAt("%",i,0);
           else
             {
               QString line(m_editor->text(i));
               if ( line.startsWith("%") )
                 {
                   m_editor->setSelection(i,0,i,1);
                   m_editor->removeSelectedText();
                 }
             }
         }
+      m_editor->endUndoAction ();
     }
 }
 
 
 // remove bookmarks
 void
 FileEditorMdiSubWindow::removeBookmark ()
 {
@@ -474,18 +476,18 @@ FileEditorMdiSubWindow::construct ()
   redoAction->setShortcut(QKeySequence::Redo);
   m_copyAction->setShortcut(QKeySequence::Copy);
   m_cutAction->setShortcut(QKeySequence::Cut);
   pasteAction->setShortcut(QKeySequence::Paste);
   runAction->setShortcut(Qt::Key_F5);
   nextBookmarkAction->setShortcut(Qt::Key_F2);
   prevBookmarkAction->setShortcut(Qt::SHIFT + Qt::Key_F2);
   toggleBookmarkAction->setShortcut(Qt::Key_F7);
-  commentSelectedAction->setShortcut(Qt::CTRL + Qt::Key_T);
-  uncommentSelectedAction->setShortcut(Qt::CTRL + Qt::Key_U);
+  commentSelectedAction->setShortcut(Qt::CTRL + Qt::Key_R);
+  uncommentSelectedAction->setShortcut(Qt::CTRL + Qt::Key_T);
 
   // toolbar
   m_toolBar->setIconSize(QSize(16,16)); // smaller icons (make configurable in user settings?)
   m_toolBar->addAction (closeAction);
   m_toolBar->addAction (newAction);
   m_toolBar->addAction (openAction);
   m_toolBar->addAction (saveAction);
   m_toolBar->addAction (saveAsAction);
