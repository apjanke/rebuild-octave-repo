# HG changeset patch
# User jwe
# Date 1170092115 0
#      Mon Jan 29 17:35:15 2007 +0000
# Node ID 5b43c2332b6967a075e64e0ad4940f567ce7680d
# Parent  f1676652d808c69f665d4631caad9f2fd9373a18
[project @ 2007-01-29 17:35:15 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,13 @@
 2007-01-24  David Bateman  <dbateman@free.fr>
 
+	* pkg/pkg.m: Install ChangeLog file if it exists.
+	Delete bare newline in string passed to write_INDEX.
+
 	* sparse/sprandsym.m: Make work for even values of N.
 
 2007-01-24  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/news.m: New file.
 
 2007-01-23  Luis F. Ortiz  <lortiz@interactivesupercomputing.com>
 
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -760,28 +760,37 @@ function copy_files (desc, packdir, bind
 
     ## Copy COPYING
     [status, output] = copyfile(fullfile(packdir, "COPYING"), packinfo);
     if (status != 1)
        rm_rf(desc.dir);
        error("Couldn't copy COPYING: %s", output);
     endif
 
+    ## If the file ChangeLog exists, copy it
+    fChangeLog = fullfile(packdir, "ChangeLog");
+    if (exist(fChangeLog, "file"))
+        [status, output] = copyfile(fChangeLog, packinfo);
+        if (status != 1)
+            rm_rf(desc.dir);
+            error("Couldn't copy ChangeLog file: %s", output);
+        endif
+    endif
+
     ## Is there an INDEX file to copy or should we generate one?
     fINDEX = fullfile(packdir, "INDEX");
     if (exist(fINDEX, "file"))
         [status, output] = copyfile(fINDEX, packinfo);
         if (status != 1)
             rm_rf(desc.dir);
             error("Couldn't copy INDEX file: %s", output);
         endif
     else
         try
-            write_INDEX(desc, fullfile(packdir, "inst"), fullfile(packinfo, "IND
-EX"));
+            write_INDEX(desc, fullfile(packdir, "inst"), fullfile(packinfo, "INDEX"));
         catch
             rm_rf(desc.dir);
             error(lasterr);
         end_try_catch
     endif
     
     ## Is there an 'on_uninstall.m' to install?
     fon_uninstall = fullfile(packdir, "on_uninstall.m");
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2007-01-29  David Bateman  <dbateman@free.fr>
+
+	* DLD-FUNCTIONS/find.cc (find_nonzero_elem_idx): Don't panic if
+	nargout is greater than 3.
+
 2007-01-24  John W. Eaton  <jwe@octave.org>
 
 	* pt-assgn.cc (former_built_in_variables): New static data.
 	(maybe_warn_former_built_in_variable): New static function.
 	(tree_simple_assignment::tree_simple_assignment,
 	tree_multi_assignment::tree_multi_assignment):
 	Move definition here from pt-assign.h
 	Maybe warn about assignment to obsolete built-in variables.
diff --git a/src/DLD-FUNCTIONS/find.cc b/src/DLD-FUNCTIONS/find.cc
--- a/src/DLD-FUNCTIONS/find.cc
+++ b/src/DLD-FUNCTIONS/find.cc
@@ -148,32 +148,29 @@ find_nonzero_elem_idx (const T& nda, int
       i_idx.resize (0, 0);
       j_idx.resize (0, 0);
 
       val.resize (dim_vector (0, 0));
     }
 
   switch (nargout)
     {
-    case 0:
-    case 1:
-      retval(0) = idx;
-      break;
-
+    default:
     case 3:
       retval(2) = val;
       // Fall through!
 
     case 2:
       retval(1) = j_idx;
       retval(0) = i_idx;
       break;
 
-    default:
-      panic_impossible ();
+    case 1:
+    case 0:
+      retval(0) = idx;
       break;
     }
 
   return retval;
 }
 
 template octave_value_list find_nonzero_elem_idx (const NDArray&, int,
 						  octave_idx_type, int);
