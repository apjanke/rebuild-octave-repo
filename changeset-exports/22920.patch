# HG changeset patch
# User Rik <rik@octave.org>
# Date 1481922798 28800
#      Fri Dec 16 13:13:18 2016 -0800
# Node ID c9ef5571e11ac118234c2ba6ed3c4618d2082a0f
# Parent  eb064b1b4269f1aab6fb43eb0c382fa60316ef6d
colorbar.m: Disallow log scale and emit an error as Matlab does (bug #42311).

* colorbar.m: Add listener on yscale property of colorbar.  In callback,
prevent any change to yscale property and emit an error.

diff --git a/scripts/plot/draw/colorbar.m b/scripts/plot/draw/colorbar.m
--- a/scripts/plot/draw/colorbar.m
+++ b/scripts/plot/draw/colorbar.m
@@ -233,33 +233,34 @@ function h = colorbar (varargin)
     ctext = text (0, 0, "", "tag", "colorbar",
                   "visible", "off", "handlevisibility", "off",
                   "xliminclude", "off", "yliminclude", "off",
                   "zliminclude", "off",
                   "deletefcn", {@deletecolorbar, cax, obj});
 
     set (cax, "deletefcn", {@resetaxis, ax, obj});
 
+    addlistener (cax, "yscale", @error_if_logscale);
     addlistener (hpar, "colormap", {@update_colorbar_cmap, hi, vertical, clen});
     addlistener (ax, "clim", {@update_colorbar_clim, hi, vertical});
     addlistener (ax, "dataaspectratio", {@update_colorbar_axis, cax, obj});
     addlistener (ax, "dataaspectratiomode", {@update_colorbar_axis, cax, obj});
     addlistener (ax, "plotboxaspectratio", {@update_colorbar_axis, cax, obj});
     addlistener (ax, "plotboxaspectratiomode", {@update_colorbar_axis, cax, obj});
     addlistener (ax, "position", {@update_colorbar_axis, cax, obj});
 
   endif
 
   if (nargout > 0)
     h = cax;
   endif
 
 endfunction
 
-function deletecolorbar (h, d, hc, orig_props)
+function deletecolorbar (h, ~, hc, orig_props)
   ## Don't delete the colorbar and reset the axis size
   ## if the parent figure is being deleted.
   if (isaxes (hc)
       && (isempty (gcbf ()) || strcmp (get (gcbf (), "beingdeleted"), "off")))
     if (strcmp (get (hc, "beingdeleted"), "off"))
       delete (hc);
     endif
     if (! isempty (ancestor (h, "axes"))
@@ -271,17 +272,24 @@ function deletecolorbar (h, d, hc, orig_
                             "outerposition", orig_props.outerposition,
                    "activepositionproperty", orig_props.activepositionproperty);
       set (ax, "units", units);
     endif
   endif
 
 endfunction
 
-function resetaxis (cax, d, ax, orig_props)
+function error_if_logscale (cax, ~)
+  if (strcmp (get (cax, "yscale"), "log"))
+    set (cax, "yscale", "linear");
+    error ("colorbar: Only linear colorbars are possible");
+  endif
+endfunction
+
+function resetaxis (cax, ~, ax, orig_props)
 
   if (isaxes (ax))
     ## FIXME: Probably don't want to delete everyone's listeners on colormap.
     dellistener (ancestor (ax, "figure"), "colormap");
     dellistener (ax, "clim");
     dellistener (ax, "dataaspectratio");
     dellistener (ax, "dataaspectratiomode");
     dellistener (ax, "plotboxaspectratio");
@@ -293,17 +301,17 @@ function resetaxis (cax, d, ax, orig_pro
     set (ax, "position", orig_props.position,
              "outerposition", orig_props.outerposition,
              "activepositionproperty", orig_props.activepositionproperty);
     set (ax, "units", units);
   endif
 
 endfunction
 
-function update_colorbar_clim (hax, d, hi, vert)
+function update_colorbar_clim (hax, ~, hi, vert)
 
   if (isaxes (hax)
       && (isempty (gcbf ()) || strcmp (get (gcbf (), "beingdeleted"), "off")))
     clen = rows (get (ancestor (hax, "figure"), "colormap"));
     cext = get (hax, "clim");
     cdiff = (cext(2) - cext(1)) / clen / 2;
     cmin = cext(1) + cdiff;
     cmax = cext(2) - cdiff;
@@ -335,17 +343,17 @@ function update_colorbar_cmap (hf, d, hi
       sz = clen;
       ## Also update limits on axis or there will be white gaps
       update_colorbar_clim (get (hi, "parent"), d, hi, vert);
     endif
   endif
 
 endfunction
 
-function update_colorbar_axis (h, d, cax, orig_props)
+function update_colorbar_axis (h, ~, cax, orig_props)
 
   if (isaxes (cax)
       && (isempty (gcbf ()) || strcmp (get (gcbf (), "beingdeleted"),"off")))
     loc = get (cax, "location");
     obj = get (h);
     obj.__cbar_hax__ = h;
     obj.position = orig_props.position;
     obj.outerposition = orig_props.outerposition;
