# HG changeset patch
# User Rik <rik@octave.org>
# Date 1362521016 28800
#      Tue Mar 05 14:03:36 2013 -0800
# Node ID 576daea679febafceba220676eb750d3499b0b65
# Parent  5bcae3970d9d7970c0d24b34ef922e4d6de064d7
num2str.m: Clarify in docstring that leading spaces will be trimmed (bug #38463)

* scripts/general/num2str.m: Clarify in docstring that leading spaces will be
trimmed (bug #38463).

diff --git a/scripts/general/num2str.m b/scripts/general/num2str.m
--- a/scripts/general/num2str.m
+++ b/scripts/general/num2str.m
@@ -19,18 +19,19 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} num2str (@var{x})
 ## @deftypefnx {Function File} {} num2str (@var{x}, @var{precision})
 ## @deftypefnx {Function File} {} num2str (@var{x}, @var{format})
 ## Convert a number (or array) to a string (or a character array).  The
 ## optional second argument may either give the number of significant
 ## digits (@var{precision}) to be used in the output or a format
 ## template string (@var{format}) as in @code{sprintf} (@pxref{Formatted
-## Output}).  @code{num2str} can also handle complex numbers.  For
-## example:
+## Output}).  @code{num2str} can also handle complex numbers.
+##
+## Examples:
 ##
 ## @example
 ## @group
 ## num2str (123.456)
 ##      @result{} "123.46"
 ##
 ## num2str (123.456, 4)
 ##      @result{} "123.5"
@@ -45,21 +46,27 @@
 ##       ==== ====        ====                     =====  =====
 ##            s           2x8                         16  char
 ##
 ## num2str (1.234 + 27.3i)
 ##      @result{} "1.234+27.3i"
 ## @end group
 ## @end example
 ##
+## Notes:
+##
+## For Matlab compatibility, leading spaces are stripped before returning
+## the string.
+##
 ## The @code{num2str} function is not very flexible.  For better control
 ## over the results, use @code{sprintf} (@pxref{Formatted Output}).
-## Note that for complex @var{x}, the format string may only contain one
-## output conversion specification and nothing else.  Otherwise, you
-## will get unpredictable results.
+##
+## For complex @var{x}, the format string may only contain one
+## output conversion specification and nothing else.  Otherwise, results
+## will be unpredictable.
 ## @seealso{sprintf, int2str, mat2str}
 ## @end deftypefn
 
 ## Author: jwe
 
 function retval = num2str (x, arg)
 
   if (nargin != 1 && nargin != 2)
