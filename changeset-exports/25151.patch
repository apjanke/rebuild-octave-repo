# HG changeset patch
# User Rik <rik@octave.org>
# Date 1523135156 25200
#      Sat Apr 07 14:05:56 2018 -0700
# Branch stable
# Node ID 40466945a45184e5f5c75869917ffb6da8e62460
# Parent  dedc0128645a2ca68b9c91fa2144468296a5976f
pcg.m: Tweaks to documentation for clarity.

* pcg.m: Tweaks to documentation for clarity.

diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -24,23 +24,23 @@
 ##
 ## Solve the linear system of equations @w{@code{@var{A} * @var{x} = @var{b}}}
 ## by means of the Preconditioned Conjugate Gradient iterative method.
 ##
 ## The input arguments are:
 ##
 ## @itemize
 ## @item @var{A} is the matrix of the linear system and it must be square.
-## @var{A} can be passed as a matrix, function handle, or inline
-## function @code{Afun} such that @code{Afun(x) = A * x}.  Additional
-## parameters to @code{Afun} are passed after @var{x0}.
+## @var{A} can be passed as a matrix, function handle, or inline function
+## @code{Afun} such that @code{Afun(x) = A * x}.  Additional parameters to
+## @code{Afun} may be passed after @var{x0}.
 ##
 ## @var{A} has to be Hermitian and Positive Definite (@nospell{HPD})@.  If
-## @code{pcg} detects @var{A} not to be positive definite, a warning
-## is printed and the @var{flag} output is set.
+## @code{pcg} detects @var{A} not to be positive definite, a warning is printed
+## and the @var{flag} output is set.
 ##
 ## @item
 ## @var{b} is the right-hand side vector.
 ##
 ## @item
 ## @var{tol} is the required relative tolerance for the residual error,
 ## @w{@code{@var{b} - @var{A} * @var{x}}}.  The iteration stops if
 ## @w{@code{norm (@var{b} - @var{A} * @var{x})} @leq{}
@@ -49,17 +49,17 @@
 ##
 ## @item
 ## @var{maxit} is the maximum allowed number of iterations; if @var{maxit}
 ## is omitted or empty then a value of 20 is used.
 ##
 ## @item
 ## @var{m} is a @nospell{HPD} preconditioning matrix.  For any decomposition
 ## @code{@var{m} = @var{p1} * @var{p2}} such that
-## @w{@code{inv (@var{p1}) * @var{A} * inv (@var{p2})}} is @nospell{HPD,} the
+## @w{@code{inv (@var{p1}) * @var{A} * inv (@var{p2})}} is @nospell{HPD}, the
 ## conjugate gradient method is formally applied to the linear system
 ## @w{@code{inv (@var{p1}) * @var{A} * inv (@var{p2}) * @var{y} = inv
 ## (@var{p1}) * @var{b}}},
 ## with @code{@var{x} = inv (@var{p2}) * @var{y}} (split preconditioning).
 ## In practice, at each iteration of the conjugate gradient method a
 ## linear system with matrix @var{m} is solved with @code{mldivide}.
 ## If a particular factorization
 ## @code{@var{m} = @var{m1} * @var{m2}} is available (for instance, an
@@ -76,43 +76,42 @@
 ## used to pass the preconditioner @var{m}.
 ##
 ## @item
 ## @var{x0} is the initial guess.  If @var{x0} is omitted or empty then the
 ## function sets @var{x0} to a zero vector by default.
 ## @end itemize
 ##
 ## The arguments which follow @var{x0} are treated as parameters, and passed in
-## a proper way to any of the functions (@var{A} or @var{m1} or
-## @var{m2}) which are passed to @code{pcg}.
+## an appropriate manner to any of the functions (@var{A} or @var{m1} or
+## @var{m2}) that have been given to @code{pcg}.
 ## See the examples below for further details.
 ##
 ## The output arguments are:
 ##
 ## @itemize
 ## @item
 ## @var{x} is the computed approximation to the solution of
 ## @w{@code{@var{A} * @var{x} = @var{b}}}.  If the algorithm did not converge,
-## then @var{x} is the iterated which has the minimum residual.
+## then @var{x} is the iteration which has the minimum residual.
 ##
 ## @item
 ## @var{flag} reports on the convergence:
 ##
 ## @itemize
-## @item 0: The algorithm converged at the prescribed tolerance.
+## @item 0: The algorithm converged to within the prescribed tolerance.
 ##
 ## @item 1: The algorithm did not converge and it reached the maximum
 ## number of iterations.
 ##
 ## @item 2: The preconditioner matrix is singular.
 ##
 ## @item 3: The algorithm stagnated, i.e., the absolute value of the
-## difference between
-## the actual iteration @var{x} and the previous is less than
-## @code{@var{eps} * norm (@var{x},2)}.
+## difference between the current iteration @var{x} and the previous is less
+## than @code{@var{eps} * norm (@var{x},2)}.
 ##
 ## @item 4: The algorithm detects that the input (preconditioned) matrix is not
 ## @nospell{HPD}.
 ## @end itemize
 ##
 ## @item
 ## @var{relres} is the ratio of the final residual to its initial value,
 ## measured in the Euclidean norm.
