# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1520726997 28800
#      Sat Mar 10 16:09:57 2018 -0800
# Node ID 009ed89dd0fa5e5ac4c2943264563819f632e659
# Parent  4186341e60418151d39d1d7bbfcb1a0d509687e2
test: make bicg and pcg tests conditional on CHOLMOD and UMFPACK

* bicg.m: Make %!test conditional on HAVE_UMFPACK for sparse lu.
* pcg.m: Make %!test conditional on HAVE_CHOLMOD for sparse chol.

diff --git a/scripts/sparse/bicg.m b/scripts/sparse/bicg.m
--- a/scripts/sparse/bicg.m
+++ b/scripts/sparse/bicg.m
@@ -501,16 +501,17 @@ endfunction
 %! M1fun = @(x, string) Mfun (M, x, string);
 %! x = bicg (Afun, b, 1e-6, n, M1fun);
 %! M1fun = @(x, string) Mfun (M1, x, string);
 %! M2fun = @(x, string) Mfun (M2, x, string);
 %! x = bicg (Afun, b, 1e-6, n, M1fun, M2fun);
 %! Afun = @(x, string, p) Ap (A, x, string, p);
 %! x = bicg (Afun, b, [], 2*n, [], [], [], 2); # solution of A^2 * x = b
 
-%!test # preconditioned technique
+## Preconditioned technique
+%!testif HAVE_UMFPACK
 %! A = toeplitz (sparse ([2, 1, 0, 0, 0]), sparse ([2, -1, 0, 0, 0]));
 %! b = sum (A, 2);
 %! [M1, M2] = lu (A + eye (5));
 %! [x, flag] = bicg (A, b, [], 1, M1, M2);
 %! ## b has two columns!
 %! [y, flag]  = bicg (M1 \ A / M2, [M1 \ b, M2' \ b], [], 1);
 %! assert (x, M2 \ y, 8 * eps)
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -561,17 +561,17 @@ endfunction
 %! sparse ([0, -1, zeros(1,18)]));
 %! b = A * ones (N, 1);
 %! Hermitian_A = ishermitian (A);
 %! [x,flag] = pcg (A, b, [], 2*N);
 %! assert (Hermitian_A, true)
 %! assert (flag, 0)
 %! assert (x, ones (N, 1), -1e-4)
 
-%!test
+%!testif HAVE_CHOLMOD
 %! ## pcg solves preconditioned linear system with A HPD
 %! N = 20;
 %! A = toeplitz (sparse ([4, 1, zeros(1, 18)])) + ...
 %! 1i * toeplitz (sparse ([0, 1, zeros(1, 18)]), ...
 %! sparse ([0, -1, zeros(1,18)]));
 %! b = A * ones (N, 1);
 %! M2 = chol (A + 0.1 * eye (N)); # factor of a perturbed matrix
 %! M = M2' * M2;
