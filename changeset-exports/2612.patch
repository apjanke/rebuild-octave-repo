# HG changeset patch
# User jwe
# Date 853801591 0
#      Mon Jan 20 23:06:31 1997 +0000
# Node ID e2d1b073b78a0d17c3afc5712d419d1c42541098
# Parent  4474b4cf6cf64f0703febf7d8f874ac9a9de9685
[project @ 1997-01-20 23:06:31 by jwe]

diff --git a/src/op-str-str.cc b/src/op-str-str.cc
--- a/src/op-str-str.cc
+++ b/src/op-str-str.cc
@@ -45,31 +45,30 @@ eq (const octave_value& a1, const octave
   charMatrix cm1 = v1.char_matrix_value ();
   charMatrix cm2 = v2.char_matrix_value ();
 
   if (cm1.rows () == 1 && cm1.columns () == 1)
     {
       if (cm2.rows () == 1 && cm2.columns () == 1)
 	return octave_value (cm1 (0, 0) == cm2 (0, 0));
       else
-	SC_MX_BOOL_OP (char, c, cm1 (0, 0), \
-		       charMatrix, m, cm2, \
+	SC_MX_BOOL_OP (char, c, cm1 (0, 0), charMatrix, m, cm2,
 		       c == m (i, j), 0.0);
     }
   else
     {
-      if (cm2.rows () == 1 && cm2.columns () == 1)
-	MX_SC_BOOL_OP (charMatrix, m, cm1, \
-		       char, c, cm2 (0, 0), \
+      int cm2_nr = cm2.rows ();
+      int cm2_nc = cm2.cols ();
+
+      if (cm2_nr == 1 && cm2_nc == 1)
+	MX_SC_BOOL_OP (charMatrix, m, cm1, char, c, cm2 (0, 0),
 		       c == m (i, j), 0.0);
       else
-	MX_MX_BOOL_OP (charMatrix, m1, cm1, \
-		       charMatrix, m2, cm2, \
-		       m1 (i, j) == m2 (i, j), \
-		       "==", 0.0);
+	MX_MX_BOOL_OP (charMatrix, m1, cm1, charMatrix, m2, cm2,
+		       m1 (i, j) == m2 (i, j), "==", 0.0);
     }
 }
 
 static octave_value
 ne (const octave_value& a1, const octave_value& a2)
 {
   CAST_BINOP_ARGS (const octave_char_matrix_str&,
 		   const octave_char_matrix_str&);
diff --git a/src/ops.h b/src/ops.h
--- a/src/ops.h
+++ b/src/ops.h
@@ -60,28 +60,28 @@ extern void install_ops (void);
       retval (i, j) = test; \
   return retval;
 
 #define SC_MX_BOOL_OP(st, sn, get_s, mt, mn, get_m, test, empty_result) \
   do \
     { \
       BOOL_OP1 (st, sn, get_s, mt, mn, get_m) \
       BOOL_OP2 (mn) \
-      if (nr == 0|| nc == 0) \
+      if (nr == 0 || nc == 0) \
         return empty_result; \
       BOOL_OP3 (test) \
     } \
   while (0)
 
 #define MX_SC_BOOL_OP(mt, mn, get_m, st, sn, get_s, test, empty_result) \
   do \
     { \
       BOOL_OP1 (mt, mn, get_m, st, sn, get_s) \
       BOOL_OP2 (mn) \
-      if (nr == 0|| nc == 0) \
+      if (nr == 0 || nc == 0) \
         return empty_result; \
       BOOL_OP3 (test) \
     } \
   while (0)
 
 #define MX_MX_BOOL_OP(m1t, m1n, get_m1, m2t, m2n, get_m2, test, op, \
 		      empty_result) \
   do \
