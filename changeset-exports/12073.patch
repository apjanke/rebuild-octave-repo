# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1251267428 -7200
#      Wed Aug 26 08:17:08 2009 +0200
# Branch release-3-2-x
# Node ID fe30458b1de801fe2a4aac2a02ecd458c01c981a
# Parent  33c46d112b0522541470d7a26484bb37e44547ac
try to avoid gnuplot zombies

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2009-08-25  John W. Eaton  <jwe@octave.org>
+
+	* plot/__gnuplot_open_stream__.m: Save pid in __plot_stream__ property.
+	* plot/gnuplot_drawnow.m: Wait for gnuplot subprocess when printing.
+	From Ben Abbott <bpabbott@mac.com>, Rob Mahurin <rob@utk.edu>, and
+	Dmitri Sergatskov <dasergatskov@gmail.com>.
+
 2009-08-22  David Bateman  <dbateman@free.fr>
 
 	* plot/__add_datasource__.m: Correct test for "datasource" argument
 	* plot/__countour__.m: Add edgecolor properties and make it an alias
 	for linecolor with the value "auto" being "flat" for the edgecolor.
 
 2009-08-04  Pieter Eendebak <pieter.eendebak@gmail.com> 
 
diff --git a/scripts/plot/__gnuplot_open_stream__.m b/scripts/plot/__gnuplot_open_stream__.m
--- a/scripts/plot/__gnuplot_open_stream__.m
+++ b/scripts/plot/__gnuplot_open_stream__.m
@@ -23,16 +23,18 @@
 ## Created: 2009-04-11
 
 function plot_stream = __gnuplot_open_stream__ (npipes, h)
   cmd = gnuplot_binary ();
   if (npipes > 1)
     [plot_stream(1), plot_stream(2), pid] = popen2 (cmd);
     if (pid < 0)
       error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
+    else
+      plot_stream(3) = pid;
     endif
   else
     plot_stream = popen (cmd, "w");
     if (plot_stream < 0)
       error ("__gnuplot_open_stream__: failed to open connection to gnuplot.");
     endif
   endif
   if (nargin > 1)
diff --git a/scripts/plot/gnuplot_drawnow.m b/scripts/plot/gnuplot_drawnow.m
--- a/scripts/plot/gnuplot_drawnow.m
+++ b/scripts/plot/gnuplot_drawnow.m
@@ -62,19 +62,22 @@ function gnuplot_drawnow (h, term, file,
       else
         error ("gnuplot_drawnow: the gnuplot terminal, \"%s\", is not available.",
                gnuplot_trim_term (term))
       endif
     unwind_protect_cleanup
       set (h, "__plot_stream__", default_plot_stream);
       if (! isempty (plot_stream))
         pclose (plot_stream(1));
-        if (numel (plot_stream) == 2)
+        if (numel (plot_stream) > 1)
           pclose (plot_stream(2));
         endif
+	if (numel (plot_stream) > 2)
+	  waitpid (plot_stream(3));
+	endif
       endif
       if (! isempty (fid))
         fclose (fid);
       endif
     end_unwind_protect
   elseif (nargin == 1)
     ##  Graphics terminal for display.
     plot_stream = get (h, "__plot_stream__");
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-08-25  John W. Eaton  <jwe@octave.org>
+
+	* graphics.cc (gnuplot_backend::send_quit): Wait for gnuplot process.
+
 2009-08-12  Jaroslav Hajek  <highegg@gmail.com>
 
 	* data.cc (Fissorted, F__sort_rows_idx__, Fnorm): Mark as Built-in
 	Functions in the inline help.
 
 2009-08-10  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/dlmread.cc (Fdlmread): Perform tilde expansion on
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -2028,33 +2028,41 @@ public:
     { return 72.0; }
 
   Matrix get_screen_size (void) const
     { return Matrix (1, 2, 0.0); }
 
 private:
   void send_quit (const octave_value& pstream) const
     {
-      if (! pstream.is_empty())
+      if (! pstream.is_empty ())
 	{
 	  octave_value_list args;
 	  Matrix fids = pstream.matrix_value ();
 
 	  if (! error_state)
 	    {
 	      args(1) = "\nquit;\n";
-	      args(0) = octave_value (fids (0));
+	      args(0) = fids(0);
 	      feval ("fputs", args);
+
 	      args.resize (1);
 	      feval ("fflush", args);
 	      feval ("pclose", args);
+
 	      if (fids.numel () > 1)
 		{
-		  args(0) = octave_value (fids (1));
+		  args(0) = fids(1);
 		  feval ("pclose", args);
+
+		  if (fids.numel () > 2)
+		    {
+		      args(0) = fids(2);
+		      feval ("waitpid", args);
+		    }
 		}
 	    }
 	}
     }
 };
 
 graphics_backend
 graphics_backend::default_backend (void)
