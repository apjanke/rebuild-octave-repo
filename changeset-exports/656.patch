# HG changeset patch
# User jwe
# Date 778134852 0
#      Mon Aug 29 04:34:12 1994 +0000
# Node ID d285f62d8638fd111bab3099de393f566635d380
# Parent  6a2e35dc94c35271eeb5de74b6fd3ba647a586c7
[project @ 1994-08-29 04:32:55 by jwe]

diff --git a/liboctave/NPSOL.cc b/liboctave/NPSOL.cc
--- a/liboctave/NPSOL.cc
+++ b/liboctave/NPSOL.cc
@@ -181,34 +181,34 @@ NPSOL::minimize (double& objf, int& info
 {
   Vector lambda;
   return minimize (objf, inform, lambda);
 }
 
 Vector
 NPSOL::minimize (double& objf, int& inform, Vector& lambda)
 {
-  // Dimensions of various things.
+// Dimensions of various things.
 
   int n     = x.capacity ();
   int nclin = lc.size ();
   int ncnln = nlc.size ();
   int nrowa = 1 > nclin ? 1 : nclin;
   int nrowj = 1 > ncnln ? 1 : ncnln;
   int nrowr = n;
 
-  // Informative stuff.
+// Informative stuff.
 
   int iter;
   int *istate = new int [n+nclin+ncnln];
 
-  // User defined function stuff is defined above in the functions
-  // npsol_confun() and npsol_objfun();
+// User defined function stuff is defined above in the functions
+// npsol_confun() and npsol_objfun();
 
-  // Constraint stuff.
+// Constraint stuff.
 
   double dummy;
   double *pclin = &dummy;
   Matrix clin;
   if (nclin > 0)
     {
       clin = lc.constraint_matrix ();
       pclin  = clin.fortran_vec ();
@@ -242,40 +242,40 @@ NPSOL::minimize (double& objf, int& info
     }
 
   for (i = 0; i < ncnln; i++)
     {
       clow[i+n+nclin] = nlc.lower_bound (i);
       cup[i+n+nclin] = nlc.upper_bound (i);
     }
 
-  double *c = &dummy;
-  double *cjac = &dummy;
+  double *c = 0;
+  double *cjac = 0;
   if (ncnln > 0)
     {
       c = new double [ncnln];
       cjac = new double [nrowj*n];
     }
 
-  // Objective stuff.
+// Objective stuff.
 
   double *objgrd = new double [n];
 
-  // Other stuff.
+// Other stuff.
 
   double *r = new double [n*n];
 
   lambda.resize (n+nclin+ncnln);
   double *pclambda = lambda.fortran_vec ();
 
-  // Decision variable stuff.
+// Decision variable stuff.
 
   double *px = x.fortran_vec ();
 
-  // Workspace parameters.
+// Workspace parameters.
 
   int lenw;
   int leniw = 3 * n + nclin + 2 * ncnln;
   if (nclin == 0 && ncnln == 0)
     lenw = 20*n;
   else if (ncnln == 0)
     lenw = 2*n*(10 + n) + 11*nclin;
   else
@@ -310,17 +310,29 @@ NPSOL::minimize (double& objf, int& info
 		       px, iw, &leniw, w, &lenw);
 
       if (inform == 6 || inform == 1)
 	continue;
       else
 	break;
     }
 
-  // See how it went.
+// Clean up.
+
+  delete [] istate;
+  delete [] clow;
+  delete [] cup;
+  delete [] c;
+  delete [] clin;
+  delete [] objgrd;
+  delete [] r;
+  delete [] iw;
+  delete [] w;
+
+// See how it went.
 
   return x;
 }
 
 Vector
 NPSOL::minimize (const Vector& xnew)
 {
   x = xnew;
diff --git a/liboctave/QPSOL.cc b/liboctave/QPSOL.cc
--- a/liboctave/QPSOL.cc
+++ b/liboctave/QPSOL.cc
@@ -163,16 +163,18 @@ QPSOL::minimize (double& objf, int& info
   int *iw = new int [leniw];
   double *w = new double [lenw];
 
   F77_FCN (qpsol) (&itmax, &msglvl, &n, &nclin, &nctotl, &ncon, &n,
 		   &n, &bigbnd, pa, pbl, pbu, pc, featol, ph, qphess,
 		   &cold, &lp, &orthog, istate, px, &inform, &iter,
 		   &objf, pclambda, iw, &leniw, w, &lenw);
 
+  delete [] pbl;
+  delete [] pbu;
   delete [] featol;
   delete [] istate;
   delete [] iw;
   delete [] w;
 
   return x;
 }
 
