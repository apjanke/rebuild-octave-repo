# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1456373834 18000
#      Wed Feb 24 23:17:14 2016 -0500
# Node ID 798273bbe551c2604d8c91c077fb33e80fcade82
# Parent  ae384d86196e607a78bc04bfd5c76fea66b7b587
avoid infinite recursion in SparseCholError

* sparse-utils.cc (sparse_chol_error_internal): New function.
(SparseCholError): Always define both variants to call
sparse_chol_error_internal.

diff --git a/liboctave/util/sparse-util.cc b/liboctave/util/sparse-util.cc
--- a/liboctave/util/sparse-util.cc
+++ b/liboctave/util/sparse-util.cc
@@ -26,45 +26,43 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <stdio.h>
 #include <stdarg.h>
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "sparse-util.h"
 
-// FIXME: this overload is here due to API change in SuiteSparse (3.1 -> 3.2)
-
-void
-SparseCholError (int status, char *file, int line, char *message)
+static inline void
+sparse_chol_error_internal (int status, const char *file,
+                            int line, const char *message)
 {
-  SparseCholError (status, file, line, message);
-}
-
 #ifdef HAVE_CHOLMOD
-
-void
-SparseCholError (int status, const char *file, int line, const char *message)
-{
   // Ignore CHOLMOD_NOT_POSDEF, since we handle that in Fchol as an
   // error or exit status.
   if (status != CHOLMOD_NOT_POSDEF)
     (*current_liboctave_warning_with_id_handler)
       ("Octave:cholmod-message", "warning %i, at line %i in file %s: %s",
        status, line, file, message);
+#endif
 }
 
-#else
+// FIXME: this overload is here due to API change in SuiteSparse (3.1 -> 3.2)
 
 void
-SparseCholError (int status, const char *, int, const char *)
+SparseCholError (int status, char *file, int line, char *message)
 {
+  sparse_chol_error_internal (status, file, line, message);
 }
 
-#endif
+void
+SparseCholError (int status, const char *file, int line, const char *message)
+{
+  sparse_chol_error_internal (status, file, line, message);
+}
 
 int
 SparseCholPrint (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
   int ret = gnulib::vfprintf (stderr, fmt, args);
   gnulib::fflush (stderr);
