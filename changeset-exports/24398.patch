# HG changeset patch
# User Rik <rik@octave.org>
# Date 1513032403 28800
#      Mon Dec 11 14:46:43 2017 -0800
# Branch stable
# Node ID a7dfb685d261e6cae088e84a4d6c2f35e59360dd
# Parent  295664c0c92287673b6fd31b0480de242b2cf426
legend.m: Fix callback error when changing a legend string to "".

* legend.m (updateline): Check whether hplots variable is empty before
trying to index into it.  Add FIXME notes to the code about why this
is necessary, and why it is innefficient.

diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -407,16 +407,20 @@ function [hleg, hleg_obj, hplot, labels]
         endif
         typ = get (kids(k), "type");
         while (k > 0
                && ! any (strcmp (typ, {"line","patch","surface","hggroup"})))
           typ = get (kids(--k), "type");
         endwhile
         if (k > 0)
           if (have_labels)
+            ## FIXME: This is inefficient on an existing legend object because
+            ##        it triggers the updateline() callback which then calls
+            ##        legend() itself.  Possibly better to delete the callback
+            ##        on displayname and then re-attach it.  See bug #52641.
             set (kids(k), "displayname", arg);
           endif
           hplots(end+1) = kids(k);
           text_strings(end+1) = arg;
 
           if (--k == 0)
             break;
           endif
@@ -1168,17 +1172,21 @@ function deletelegend2 (h, ~, ca, pos, o
 
 endfunction
 
 function updateline (h, ~, hlegend, linelength, update_name)
 
   if (update_name)
     ## When string changes, have to rebuild legend completely
     [hplots, text_strings] = __getlegenddata__ (hlegend);
-    legend (get (hplots(1), "parent"), hplots, text_strings);
+    ## FIXME: See bug #52641.  Changing an existing legend string to a blank
+    ##        can trigger this.
+    if (! isempty (hplots))
+      legend (get (hplots(1), "parent"), hplots, text_strings);
+    endif
   else
     kids = get (hlegend, "children");
     ll = lm = [];
     for i = 1 : numel (kids)
       if (get (kids(i), "userdata") == h
           && strcmp (get (kids(i), "type"), "line"))
         if (strcmp (get (kids(i), "marker"), "none"))
           ll = kids(i);
