# HG changeset patch
# User jwe
# Date 1162578517 0
#      Fri Nov 03 18:28:37 2006 +0000
# Node ID c5874b47d571f616e5b6ac77d953a5163c77a6e0
# Parent  4fb3f3e3d6bb871cbb06a59e7587a1cf1d02e8f8
[project @ 2006-11-03 18:26:11 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-03  Bill Denney  <denney@seas.upenn.edu>
+
+	* scripts/blanks.m, scripts/strcat.m: Simplify.  Add tests.
+
 2006-11-01  Bill Denney  <denney@seas.upenn.edu>
 
 	* general/__isequal__.m: Test size and class more consistently.
 
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/ls_command.m: Use /D instead of /w.
 	From Michael Goffioul <michael.goffioul@swing.be>.
diff --git a/scripts/strings/blanks.m b/scripts/strings/blanks.m
--- a/scripts/strings/blanks.m
+++ b/scripts/strings/blanks.m
@@ -1,9 +1,9 @@
-## Copyright (C) 1996 Kurt Hornik
+## Copyright (C) 1996, 2006 Kurt Hornik
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 2, or (at your option)
 ## any later version.
 ##
@@ -15,26 +15,30 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 ## 02110-1301, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} blanks (@var{n})
 ## Return a string of @var{n} blanks.
+## @seealso{repmat}
 ## @end deftypefn
 
 ## Author: Kurt Hornik <Kurt.Hornik@wu-wien.ac.at>
 ## Adapted-By: jwe
 
 function s = blanks (n)
 
   if (nargin != 1)
     print_usage ();
-  endif
-
-  if (isscalar (n) && n == round (n))
-    s = char (ones (1, n) * toascii (" "));
-  else
+  elseif (! (isscalar (n) && n == round (n)))
     error ("blanks: n must be a non-negative integer");
   endif
 
+  s(1,1:n) = " ";
+
 endfunction
+
+## There really isn't that much to test here
+%!assert(blanks (0), "")
+%!assert(blanks (5), "     ")
+%!assert(blanks (10), "          ")
diff --git a/scripts/strings/strcat.m b/scripts/strings/strcat.m
--- a/scripts/strings/strcat.m
+++ b/scripts/strings/strcat.m
@@ -1,9 +1,9 @@
-## Copyright (C) 1996, 1997 John W. Eaton
+## Copyright (C) 1996, 1997, 2006 John W. Eaton
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 2, or (at your option)
 ## any later version.
 ##
@@ -28,33 +28,25 @@
 ##      @result{} "ab ab ab "
 ##         "cdecdecde"
 ## @end group
 ## @end example
 ## @end deftypefn
 
 ## Author: jwe
 
-function st = strcat (s, varargin)
+function st = strcat (varargin)
 
-  if (nargin > 0)
-    if (ischar (s))
-      tmpst = s;
-    else
-      error ("strcat: all arguments must be strings");
-    endif
-    n = nargin - 1;
-    k = 1;
-    while (n--)
-      tmp = varargin{k++};
-      if (ischar (tmp))
-	tmpst = [tmpst, tmp];
-      else
-	error ("strcat: all arguments must be strings");
-      endif
-    endwhile
-  else
+  if (nargin < 1)
     print_usage ();
+  elseif (! iscellstr (varargin))
+    error ("strcat: all arguments must be strings");
   endif
 
-  st = tmpst;
+  st = [varargin{:}];
 
 endfunction
+
+## test the dimensionality
+## 1d
+%!assert(strcat("ab ", "ab "), "ab ab ")
+## 2d
+%!assert(strcat(["ab ";"cde"], ["ab ";"cde"]), ["ab ab ";"cdecde"])
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2006-11-03  Bill Denney  <denney@seas.upenn.edu>
+
+	* help.cc (keywords): Document try and unwind_protect.
+
 2006-11-03  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (DLL_CXXDEFS): Rename from XTRA_CXXDEFS.
 	(DLL_CDEFS): Rename from XTRA_CDEFS.
 	Substitute OCTINTERP_DLL_DEFS, not XTRA_OCTINTERP_DEFS.
 
 2006-11-02  Michael Goffioul  <michael.goffioul@swing.be>
 
diff --git a/src/help.cc b/src/help.cc
--- a/src/help.cc
+++ b/src/help.cc
@@ -447,31 +447,43 @@ endswitch\n\
 @end example\n\
 @seealso{if, case, otherwise}\n\
 @end deffn", },
 
   { "try",
     "-*- texinfo -*-\n\
 @deffn Keyword try\n\
 Begin a try-catch block.\n\
-@seealso{catch}\n\
+\n\
+If an error occurs within a try block, then the catch code will be run and\n\
+execution will proceed after the catch block (though it is often\n\
+recommended to use the lasterr function to re-throw the error after cleanup\n\
+is completed).\n\
+@seealso{catch,unwind_protect}\n\
 @end deffn", }, 
 
   { "until",
     "-*- texinfo -*-\n\
 @deffn Keyword until\n\
 End a do-until loop.\n\
 @seealso{do}\n\
 @end deffn", },
 
   { "unwind_protect",
     "-*- texinfo -*-\n\
 @deffn Keyword unwind_protect\n\
 Begin an unwind_protect block.\n\
-@seealso{unwind_protect_cleanup}\n\
+\n\
+If an error occurs within the first part of an unwind_protect block\n\
+the commands within the unwind_protect_cleanup block are executed before\n\
+the error is thrown.  If an error is not thrown, then the\n\
+unwind_protect_cleanup block is still executed (in other words, the\n\
+unwind_protect_cleanup will be run with or without an error in the\n\
+unwind_protect block).\n\
+@seealso{unwind_protect_cleanup,try}\n\
 @end deffn", }, 
 
   { "unwind_protect_cleanup",
     "-*- texinfo -*-\n\
 @deffn Keyword unwind_protect_cleanup\n\
 Begin the cleanup section of an unwind_protect block.\n\
 @seealso{unwind_protect}\n\
 @end deffn", }, 
