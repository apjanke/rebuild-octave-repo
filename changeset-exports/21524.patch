# HG changeset patch
# User bpabbott
# Date 1458412195 14400
#      Sat Mar 19 14:29:55 2016 -0400
# Node ID aac8b2ca928084b45d69328581124ee038be29ce
# Parent  86d8801a14ddfbc645a1504aae90c8923a2406a8
Include curly braces when adding weight to strings for gnuplot (bug #46037).

* __gnuplot_draw_axes__.m: Gnuplot 5 requires curly braces when indicating
bold-face, italics and such.  For earlier versions both '{\bf foobar}' and
'\bf foobar' produce the same results.  Thus, the gnuplot 5 syntax may be always
used without creating problems for earlier versions.

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -2359,30 +2359,30 @@ function str = __tex2enhanced__ (str, fn
         ##  endif
         ##elseif (it)
         ##  g = strrep (g, '/Symbol', '/Symbol-italic');
         ##endif
         str = [str(1:s(i) - 1) g str(e(i) + 1:end)];
       elseif (strncmp (f, "rm", 2))
         bld = false;
         it = false;
-        str = [str(1:s(i) - 1) '/' fnt ' ' str(s(i) + 3:end)];
+        str = [str(1:s(i) - 1) '{/' fnt ' ' str(s(i) + 3:end) '}'];
       elseif (strncmp (f, "it", 2) || strncmp (f, "sl", 2))
         it = true;
         if (bld)
-          str = [str(1:s(i) - 1) '/' fnt '-bolditalic ' str(s(i) + 3:end)];
+          str = [str(1:s(i) - 1) '{/' fnt '-bolditalic ' str(s(i) + 3:end) '}'];
         else
-          str = [str(1:s(i) - 1) '/' fnt '-italic ' str(s(i) + 3:end)];
+          str = [str(1:s(i) - 1) '{/' fnt '-italic ' str(s(i) + 3:end) '}'];
         endif
       elseif (strncmp (f, "bf", 2))
         bld = true;
         if (it)
-          str = [str(1:s(i) - 1) '/' fnt '-bolditalic ' str(s(i) + 3:end)];
+          str = [str(1:s(i) - 1) '{/' fnt '-bolditalic ' str(s(i) + 3:end) '}'];
         else
-          str = [str(1:s(i) - 1) '/' fnt '-bold ' str(s(i) + 3:end)];
+          str = [str(1:s(i) - 1) '{/' fnt '-bold ' str(s(i) + 3:end) '}'];
         endif
       elseif (strcmpi (f, "color"))
         ## FIXME: Ignore \color but remove trailing {} block as well
         d = strfind (str(e(i) + 1:end),'}');
         if (isempty (d))
           warning ('syntax error in \color argument');
         else
           str = [str(1:s(i) - 1) str(e(i) + d + 1:end)];
