# HG changeset patch
# User jwe
# Date 1194904448 0
#      Mon Nov 12 21:54:08 2007 +0000
# Node ID d4d8c7b33e167d7bdf25ee0bbc90be87f67c03cc
# Parent  f2ba4aa9a5f9f8710bd1d7966e1b2687154804b1
[project @ 2007-11-12 21:54:07 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2007-11-12  Kai Habel  <kai.habel@gmx.de>
+
+	* plot/spinmap.m, plot/ribbon.m: New functions.
+	* plot/Makefile.in (SOURCES): Add them to the list.
+
+2007-11-12  John W. Eaton  <jwe@octave.org>
+
+	* plot/__go_draw_axes__.m (get_fontname_and_size): New subfunction.
+	Use it to avoid duplicated code.
+
 2007-11-12  David Bateman  <dbateman@free.fr>
 
 	* plot/title.m: Fix return value for nargout > 0.
 
 	* plot/__go_draw_axes.m: Allow the font and fontsize to be
 	specified for the title, xlabel, ylabel and text objects.
 
 	* plot/__go_draw_axes.m: Allow arbitrary colormaps with gnuplot
diff --git a/scripts/plot/Makefile.in b/scripts/plot/Makefile.in
--- a/scripts/plot/Makefile.in
+++ b/scripts/plot/Makefile.in
@@ -103,23 +103,25 @@ SOURCES = \
   peaks.m \
   pie.m \
   plot.m \
   plot3.m \
   polar.m \
   print.m \
   quiver.m \
   replot.m \
+  ribbon.m \
   semilogx.m \
   semilogxerr.m \
   semilogy.m \
   semilogyerr.m \
   shading.m \
   shg.m \
   sombrero.m \
+  spinmap.m \
   stairs.m \
   stem.m \
   subplot.m \
   surf.m \
   surface.m \
   surfc.m \
   text.m \
   title.m \
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -54,47 +54,29 @@ function __go_draw_axes__ (h, plot_strea
 
     fputs (plot_stream, "unset label;\n");
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
-	if (isempty (t.fontname))
-	  f = "Helvetica";
-	else
-	  f = t.fontname;
-	endif
-	if (isempty (t.fontsize))
-	  s = 10;
-	else
-	  s = t.fontsize;
-	endif
+	[f, s] = get_fontname_and_size (t);
 	fprintf (plot_stream, "set title \"%s\" font \"%s,%d\";\n",
 		 undo_string_escapes (t.string), f, s);
       endif
     endif
 
     if (! isempty (axis_obj.xlabel))
       t = get (axis_obj.xlabel);
       angle = t.rotation;
       if (isempty (t.string))
 	fputs (plot_stream, "unset xlabel;\n");
       else
-	if (isempty (t.fontname))
-	  f = "Helvetica";
-	else
-	  f = t.fontname;
-	endif
-	if (isempty (t.fontsize))
-	  s = 10;
-	else
-	  s = t.fontsize;
-	endif
+	[f, s] = get_fontname_and_size (t);
 	fprintf (plot_stream, "set xlabel \"%s\" font \"%s,%d\"",
 		 undo_string_escapes (t.string), f, s);
 	if (have_newer_gnuplot)
 	  ## Rotation of xlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f", angle);
 	endif
 	fputs (plot_stream, ";\n");
@@ -102,26 +84,17 @@ function __go_draw_axes__ (h, plot_strea
     endif
 
     if (! isempty (axis_obj.ylabel))
       t = get (axis_obj.ylabel);
       angle = t.rotation;
       if (isempty (t.string))
 	fputs (plot_stream, "unset ylabel;\n");
       else
-	if (isempty (t.fontname))
-	  f = "Helvetica";
-	else
-	  f = t.fontname;
-	endif
-	if (isempty (t.fontsize))
-	  s = 10;
-	else
-	  s = t.fontsize;
-	endif
+	[f, s] = get_fontname_and_size (t);
 	fprintf (plot_stream, "set ylabel \"%s\" font \"%s,%d\"",
 		 undo_string_escapes (t.string), f, s);
 	if (have_newer_gnuplot)
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
@@ -847,26 +820,17 @@ function __go_draw_axes__ (h, plot_strea
 		typ = 7;
 	      else
 		typ = -1;
 	      endif
 	      colorspec = sprintf ("textcolor lt %d", typ);
 	    endif
 	  endif
 
-	  if (isempty (obj.fontname))
-	    f = "Helvetica";
-	  else
-	    f = obj.fontname;
-	  endif
-	  if (isempty (obj.fontsize))
-	    s = 10;
-	  else
-	    s = obj.fontsize;
-	  endif
+	  [f, s] = get_fontname_and_size (obj);
 
 	  if (nd == 3)
 	    fprintf (plot_stream,
 		     "set label \"%s\" at %s %.15g,%.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units, lpos(1),
 		     lpos(2), lpos(3), f, s, halign, angle, colorspec);
 	  else
  	    fprintf (plot_stream,
@@ -1408,8 +1372,21 @@ function do_tics_1 (ticmode, tics, label
       fprintf (plot_stream, " %g,", tics(1:end-1));
       fprintf (plot_stream, " %g);\n", tics(end));
     endif
   else
     fprintf (plot_stream, "set format %s \"%%g\";\n", ax);
     fprintf (plot_stream, "set %stics;\n", ax);
   endif
 endfunction
+
+function [f, s] = get_fontname_and_size (t)
+  if (isempty (t.fontname))
+    f = "Helvetica";
+  else
+    f = t.fontname;
+  endif
+  if (isempty (t.fontsize))
+    s = 10;
+  else
+    s = t.fontsize;
+  endif
+endfunction
diff --git a/scripts/plot/ribbon.m b/scripts/plot/ribbon.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/ribbon.m
@@ -0,0 +1,84 @@
+## Copyright (C) 2007 Kai Habel
+##
+## This program is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## OctPlot is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with OctPlot; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File}  ribbon (@var{X}, @var{Y}, @var{WIDTH})
+## @deftypefnx {Function File}  ribbon (@var{X}, @var{Y})
+## @deftypefnx {Function File}  ribbon (@var{Y})
+## @deftypefnx {Function File}  @var{h} = ribbon (...)
+## Plots ribbon plot for the columns of @var{Y} vs. @var{X}. The optional 
+## parameter @var{WIDTH} specifies the width of a single ribbon (default is 0.75).
+## If @var{X} is omitted, a vector containing the row numbers is assumed (1:rows(Y)).
+## If requested a vector @var{h} of the handles to the surface objects is returned.
+## @end deftypefn
+## @seealso{gca, colorbar}
+
+## Author: Kai Habel <kai.habel at gmx.de>
+
+function h = ribbon(X, Y, W)
+
+  newplot ();
+
+  if (nargin == 1)
+    Y = X;
+    if (isvector(Y))
+      Y = Y(:);
+    endif
+    [nr, nc] = size(Y);
+    X = repmat((1 : nr)', 1, nc);
+    W = 0.75;
+  elseif (nargin == 2)
+    W = 0.75;
+  elseif (nargin == 3)
+  else
+    print_usage();
+  end
+
+  if (isvector(X) && isvector(Y))
+    if (length(X) != length(Y))
+      error("In case of vectors, X and Y must have same length")
+    else
+      [X, Y] = meshgrid(X, Y);
+    endif
+  else
+    if (!all(size(X) == size(Y)))
+      error("In case of matrices, X and Y must have same size")
+    endif
+  endif
+
+  [nr,nc] = size(Y);
+  tmp = zeros(1,nc);
+
+  for c = nc:-1:1
+    ZZ = [Y(:,c) Y(:,c)];
+    y = X(:,c);
+    x = [c - W / 2, c + W / 2];
+    [XX,YY] = meshgrid(x,y);
+    CC = ones(size(ZZ))*c;
+    tmp(c) = surface(XX,YY,ZZ,CC);
+  endfor
+
+  ax = get (tmp(c), "parent");
+
+  if (!ishold ())
+    set (ax, "view", [-37.5, 30], "box","off","xgrid","on","ygrid","on","zgrid","on");
+  endif
+
+  if (nargout > 0)
+    h = tmp;
+  endif
+end
diff --git a/scripts/plot/spinmap.m b/scripts/plot/spinmap.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/spinmap.m
@@ -0,0 +1,53 @@
+## Copyright (C) 2007 Kai Habel
+##
+## This program is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## OctPlot is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with OctPlot; see the file COPYING.  If not, write to the Free
+## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
+## 02111-1307, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File}  spinmap (@var{T}, @var{inc})
+## @deftypefnx {Function File}  spinmap (@var{T})
+## @deftypefnx {Function File}  spinmap ()
+## Cycles the colormap for @var{T} seconds with an increment
+## of @var{inc}. Both parameter are optional. In that case 5s and an increment 
+## of 2 is taken.
+## A higher @var{inc} causes a faster cycle through the colormap.
+## @end deftypefn
+## @seealso{gca, colorbar}
+
+## Author: Kai Habel <kai.habel at gmx.de>
+
+function spinmap(T, inc)
+
+  if (nargin == 0)
+    inc = 2;
+    T = 5;
+  elseif (nargin == 1)
+    inc = 2;
+  endif
+
+  cmap = get(gcf,"Colormap");
+  clen = rows(cmap);
+
+  t0 = clock;
+
+  while (etime(clock, t0) < T)
+    for n = 1 : inc : clen
+      newmap = shift(cmap, n, 1);
+      set(gcf,"Colormap",newmap)
+      drawnow
+    endfor
+  end
+  set(gcf,"Colormap",cmap)
+end
