# HG changeset patch
# User jwe
# Date 1130884882 0
#      Tue Nov 01 22:41:22 2005 +0000
# Node ID 480035e1c2b03e9b997c7ee3cbd5d74619658fe4
# Parent  ce71ed4c6da60acfe80b9d8335a52791dfa2fdb8
[project @ 2005-11-01 22:41:22 by jwe]

diff --git a/libcruft/ChangeLog b/libcruft/ChangeLog
--- a/libcruft/ChangeLog
+++ b/libcruft/ChangeLog
@@ -1,8 +1,12 @@
+2005-11-01  John W. Eaton  <jwe@octave.org>
+
+	* ranlib/ignbin.f, ranlib/ignpoi.f: Avoid arithmetic IF statements.
+
 2005-10-17  John W. Eaton  <jwe@octave.org>
 
 	* lapack/Makefile.in (dlamc1.o pic/dlamc1.o):
 	Add $(F77_FLOAT_STORE_FLAG) to FFLAGS.
 
 2005-09-23  John W. Eaton  <jwe@octave.org>
 
 	* misc/machar.c: Restore test code.
diff --git a/libcruft/ranlib/ignbin.f b/libcruft/ranlib/ignbin.f
--- a/libcruft/ranlib/ignbin.f
+++ b/libcruft/ranlib/ignbin.f
@@ -173,17 +173,18 @@ C     ..
 C     .. Data statements ..
 C     JJV made these ridiculous starting values - the hope is that
 C     JJV no one will call this the first time with them as args
       DATA psave,nsave/-1.0E37,-214748365/
 C     ..
 C     .. Executable Statements ..
       IF (pp.NE.psave) GO TO 10
       IF (n.NE.nsave) GO TO 20
-      IF (xnp-30.) 150,30,30
+      IF (xnp-30.0.LT.0.0) GOTO 150
+      GO TO 30
 C
 C*****SETUP, PERFORM ONLY WHEN PARAMETERS CHANGE
 C
 
 C     JJV added the argument checker - involved only renaming 10
 C     JJV and 20 to the checkers and adding checkers
 C     JJV Only remaining problem - if called initially with the
 C     JJV initial values of psave and nsave, it will hang
@@ -254,28 +255,31 @@ C
    70 k = iabs(ix-m)
       IF (k.GT.20 .AND. k.LT.xnpq/2-1) GO TO 130
 C
 C     EXPLICIT EVALUATION
 C
       f = 1.0
       r = p/q
       g = (n+1)*r
-      IF (m-ix) 80,120,100
+      IF (m-ix.LT.0) GO TO 80
+      IF (m-ix.EQ.0) GO TO 120
+      GO TO 100
    80 mp = m + 1
       DO 90 i = mp,ix
           f = f* (g/i-r)
    90 CONTINUE
       GO TO 120
 
   100 ix1 = ix + 1
       DO 110 i = ix1,m
           f = f/ (g/i-r)
   110 CONTINUE
-  120 IF (v-f) 170,170,30
+  120 IF (v-f.LE.0) GOTO 170
+      GO TO 30
 C
 C     SQUEEZING USING UPPER AND LOWER BOUNDS ON ALOG(F(X))
 C
   130 amaxp = (k/xnpq)* ((k* (k/3.+.625)+.1666666666666)/xnpq+.5)
       ynorm = -k*k/ (2.*xnpq)
       alv = alog(v)
       IF (alv.LT.ynorm-amaxp) GO TO 170
       IF (alv.GT.ynorm+amaxp) GO TO 30
@@ -291,17 +295,18 @@ C
       x2 = x1*x1
       f2 = f1*f1
       w2 = w*w
       IF (alv- (xm*alog(f1/x1)+ (n-m+.5)*alog(z/w)+ (ix-
      +    m)*alog(w*p/ (x1*q))+ (13860.- (462.- (132.- (99.-
      +    140./f2)/f2)/f2)/f2)/f1/166320.+ (13860.- (462.- (132.- (99.-
      +    140./z2)/z2)/z2)/z2)/z/166320.+ (13860.- (462.- (132.- (99.-
      +    140./x2)/x2)/x2)/x2)/x1/166320.+ (13860.- (462.- (132.- (99.-
-     +    140./w2)/w2)/w2)/w2)/w/166320.)) 170,170,30
+     +    140./w2)/w2)/w2)/w2)/w/166320. .LE. 0.)) GO TO 170
+      GO TO 30
 C
 C     INVERSE CDF LOGIC FOR MEAN LESS THAN 30
 C
   140 qn = q**n
       r = p/q
       g = r* (n+1)
   150 ix = 0
       f = qn
diff --git a/libcruft/ranlib/ignpoi.f b/libcruft/ranlib/ignpoi.f
--- a/libcruft/ranlib/ignpoi.f
+++ b/libcruft/ranlib/ignpoi.f
@@ -220,17 +220,18 @@ C
 
    90 px = fk*v*v* (((((((a7*v+a6)*v+a5)*v+a4)*v+a3)*v+a2)*v+a1)*v+a0) -
      +     del
   100 py = .3989423/sqrt(fk)
   110 x = (0.5-difmuk)/s
       xx = x*x
       fx = -0.5*xx
       fy = omega* (((c3*xx+c2)*xx+c1)*xx+c0)
-      IF (kflag) 40,40,60
+      IF (kflag.LE.0) GO TO 40
+      GO TO 60
 C
 C     C A S E  B. (START NEW TABLE AND CALCULATE P0 IF NECESSARY)
 C
 C     JJV changed MUPREV assignment from 0.0 to initial value
   120 muprev = -1.0E37
       IF (mu.EQ.muold) GO TO 130
 C     JJV added argument checker here
       IF (mu.GE.0.0) GO TO 125
