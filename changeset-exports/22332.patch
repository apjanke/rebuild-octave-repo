# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471455050 25200
#      Wed Aug 17 10:30:50 2016 -0700
# Node ID 1d85005fc6b72cd682f76500ff5950a0f03ec08d
# Parent  b81b08cc4c83260476be5bdebb8ba601f82f0694
Fix minor issues revealed from dump_plots.

* errorbar.m: Remove extra newline in code.

* ezplot3.m: Add information on "animate" option to docstring.

* fill.m: In demo #3, explicitly expand column vector of cdata to a matrix
to make Matlab happy.

diff --git a/scripts/plot/draw/errorbar.m b/scripts/plot/draw/errorbar.m
--- a/scripts/plot/draw/errorbar.m
+++ b/scripts/plot/draw/errorbar.m
@@ -211,17 +211,16 @@ endfunction
 %! x = 0:0.5:2*pi;
 %! err = x/30;
 %! y1 = sin (x);
 %! y2 = cos (x);
 %! errorbar (x, y1, err, "~", x, y2, err, ">");
 %! legend ("Y errbar", "X errbar");
 %! title ("errorbar() with 2 datasets");
 
-
 %!demo
 %! clf;
 %! x = 0:0.5:2*pi;
 %! err = x/30;
 %! y1 = sin (x);
 %! y2 = cos (x);
 %! errorbar (x, y1, err, err, "#r", x, y2, err, err, "#~");
 %! legend ("X errbox", "Y errbox");
diff --git a/scripts/plot/draw/ezplot3.m b/scripts/plot/draw/ezplot3.m
--- a/scripts/plot/draw/ezplot3.m
+++ b/scripts/plot/draw/ezplot3.m
@@ -15,47 +15,51 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {} {} ezplot3 (@var{fx}, @var{fy}, @var{fz})
 ## @deftypefnx {} {} ezplot3 (@dots{}, @var{dom})
 ## @deftypefnx {} {} ezplot3 (@dots{}, @var{n})
+## @deftypefnx {} {} ezplot3 (@dots{}, "animate")
 ## @deftypefnx {} {} ezplot3 (@var{hax}, @dots{})
 ## @deftypefnx {} {@var{h} =} ezplot3 (@dots{})
 ##
 ## Plot a parametrically defined curve in three dimensions.
 ##
 ## @var{fx}, @var{fy}, and @var{fz} are strings, inline functions,
 ## or function handles with one argument defining the function.  By
 ## default the plot is over the domain @code{0 <= @var{t} <= 2*pi}
 ## with 500 points.
 ##
 ## If @var{dom} is a two element vector, it represents the minimum and maximum
 ## values of @var{t}.
 ##
 ## @var{n} is a scalar defining the number of points to use in plotting the
 ## function.
 ##
+## If the @qcode{"animate"} option is given then the plotting is animated
+## in the style of @code{comet3}.
+##
 ## If the first argument @var{hax} is an axes handle, then plot into this axis,
 ## rather than the current axes returned by @code{gca}.
 ##
 ## The optional return value @var{h} is a graphics handle to the created plot.
 ##
 ## @example
 ## @group
 ## fx = @@(t) cos (t);
 ## fy = @@(t) sin (t);
 ## fz = @@(t) t;
 ## ezplot3 (fx, fy, fz, [0, 10*pi], 100);
 ## @end group
 ## @end example
 ##
-## @seealso{plot3, ezplot, ezmesh, ezsurf}
+## @seealso{plot3, comet3, ezplot, ezmesh, ezsurf}
 ## @end deftypefn
 
 function h = ezplot3 (varargin)
 
   [htmp, needusage] = __ezplot__ ("plot3", varargin{:});
 
   if (needusage)
     print_usage ();
diff --git a/scripts/plot/draw/fill.m b/scripts/plot/draw/fill.m
--- a/scripts/plot/draw/fill.m
+++ b/scripts/plot/draw/fill.m
@@ -192,11 +192,11 @@ endfunction
 %!      1 0.5
 %!      1 0.5
 %!      0 0];
 %! y = [0 0
 %!      0 0
 %!      1 0.5
 %!      1 0.5];
 %! c = [1 2 3 4]';
-%! fill (x, y, c);
+%! fill (x, y, [c c]);
 %! title ({"fill() function"; 'cdata = column vector produces FaceColor = "interp"'});
 
