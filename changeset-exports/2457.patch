# HG changeset patch
# User jwe
# Date 846989721 0
#      Sun Nov 03 02:55:21 1996 +0000
# Node ID 5be3f6f5986aa9d2f17b3f413dc72aacc6da9661
# Parent  fd838110e6cad1af765e14b7779afd29117938f9
[project @ 1996-11-03 02:54:44 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.222 $)
+AC_REVISION($Revision: 1.223 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -686,21 +686,22 @@ if test -f $srcdir/libcruft/fsqp/fsqpd.f
   AC_MSG_RESULT(yes)
 else
   AC_MSG_RESULT(no)
   AC_DEFINE(FSQP_MISSING, 1)
 fi
 
 ### Checks for functions and variables.
 
-AC_CHECK_FUNCS(atexit bcopy bzero dup2 execvp fcntl fork getcwd \
-	       gethostname getpgrp getpid getppid lstat memmove \
-	       mkdir mkfifo on_exit pipe putenv rename rindex rmdir \
-	       setvbuf sigaction sigpending sigprocmask sigsuspend \
-	       stat strcasecmp strdup strerror stricmp strncasecmp \
+AC_CHECK_FUNCS(atexit bcopy bzero dup2 endpwent execvp fcntl fork \
+	       getcwd gethostname getpgrp getpid getppid getpwent \
+	       getpwnam getpwuid lstat memmove mkdir mkfifo on_exit \
+	       pipe putenv rename rindex rmdir setpwent setvbuf \
+	       sigaction sigpending sigprocmask sigsuspend stat \
+	       strcasecmp strdup strerror stricmp strncasecmp \
 	       strnicmp tempnam umask unlink vfprintf vsprintf \
 	       waitpid)
 
 OCTAVE_SMART_PUTENV
 OCTAVE_PROGRAM_INVOCATION_NAME
 
 LIBDLFCN=
 DLFCN_INCFLAGS=
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+Sat Nov  2 20:44:55 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* Makefile.in (DLD_SRC): Move time.cc and getrusage.cc here from
+	SOURCES.  Add getpwent.cc.
+
+	* getrusage.cc: Rename from resource.cc.  Make getrusage a
+	loadable function.
+
+	* time.cc: Rename from timefns.cc.  Make time functions loadable.
+
+	* getpwent.cc: New file.
+
 Wed Oct 30 01:06:19 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Version 1.90.
 
 	* Makefile.in (DISTFILES): Add ChangeLog.
 
 	* ov-range.cc (octave_range::convert_to_str): New function.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -57,20 +57,20 @@ ifeq ($(OCTAVE_LITE), true)
 	    $(OCTAVE_LFLAGS) \
 	    $(OCTAVE_LIBS) \
 	    $(FLIBS) $(LEXLIB) $(TERMLIBS) $(LIBS) -lg++
   endif
 endif
 
 DLD_SRC := balance.cc chol.cc colloc.cc dassl.cc det.cc eig.cc \
 	   expm.cc fft.cc fft2.cc filter.cc find.cc fsolve.cc \
-	   fsqp.cc givens.cc hess.cc ifft.cc ifft2.cc inv.cc log.cc \
-	   lpsolve.cc lsode.cc lu.cc minmax.cc npsol.cc pinv.cc \
-	   qpsol.cc qr.cc quad.cc qzval.cc rand.cc schur.cc sort.cc \
-	   svd.cc syl.cc
+	   fsqp.cc getpwent.cc getrusage.cc givens.cc hess.cc \
+	   ifft.cc ifft2.cc inv.cc log.cc lpsolve.cc lsode.cc \
+	   lu.cc minmax.cc npsol.cc pinv.cc qpsol.cc qr.cc quad.cc \
+	   qzval.cc rand.cc schur.cc sort.cc svd.cc syl.cc time.cc 
 
 DLD_OBJ := $(patsubst %.cc, %.o, $(DLD_SRC))
 
 ifeq ($(OCTAVE_LITE), true)
   OCT_FILES := $(patsubst %.o, %.oct, $(DLD_OBJ))
   ifdef CXXPICFLAG
     DLD_PICOBJ := $(addprefix pic/, $(DLD_OBJ))
   else
@@ -114,27 +114,27 @@ TI_OBJ := $(patsubst %.cc, %.o, $(TI_SRC
 
 TI_PICOBJ := $(TI_OBJ)
 ifeq ($(SHARED_LIBS), true)
   ifdef CXXPICFLAG
     TI_PICOBJ := $(addprefix pic/, $(TI_OBJ))
   endif
 endif
 
-SOURCES := data.cc defaults.cc dirfns.cc dynamic-ld.cc \
-	error.cc file-io.cc fn-cache.cc gripes.cc help.cc input.cc \
-	lex.l load-save.cc mappers.cc oct-fstrm.cc oct-hist.cc \
-	oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
+SOURCES := data.cc defaults.cc dirfns.cc dynamic-ld.cc error.cc \
+	file-io.cc fn-cache.cc gripes.cc \
+	help.cc input.cc lex.l load-save.cc mappers.cc oct-fstrm.cc \
+	oct-hist.cc oct-iostrm.cc oct-map.cc oct-obj.cc oct-prcstrm.cc \
 	oct-procbuf.cc oct-stdstrm.cc oct-stream.cc oct-strstrm.cc \
-	pager.cc parse.y pr-output.cc procstream.cc \
-	pt-base.cc pt-cmd.cc pt-const.cc pt-exp-base.cc pt-exp.cc \
-	pt-fcn.cc pt-fvc-base.cc pt-fvc.cc pt-mat.cc pt-misc.cc \
-	pt-mvr-base.cc pt-mvr.cc pt-plot.cc pt-pr-code.cc resource.cc \
+	pager.cc parse.y pr-output.cc procstream.cc pt-base.cc \
+	pt-cmd.cc pt-const.cc pt-exp-base.cc pt-exp.cc pt-fcn.cc \
+	pt-fvc-base.cc pt-fvc.cc pt-mat.cc pt-misc.cc pt-mvr-base.cc \
+	pt-mvr.cc pt-plot.cc pt-pr-code.cc \
 	sighandlers.cc strcasecmp.c strncase.c strfns.cc strftime.c \
-	symtab.cc syscalls.cc sysdep.cc timefns.cc token.cc toplev.cc \
+	symtab.cc syscalls.cc sysdep.cc token.cc toplev.cc \
 	unwind-prot.cc utils.cc variables.cc xdiv.cc xpow.cc \
 	ov-base.cc ov-ch-mat.cc ov-re-mat.cc ov-cx-mat.cc ov-range.cc \
 	ov-scalar.cc ov-complex.cc ov-str-mat.cc ov-struct.cc \
 	ov-va-args.cc ov-colon.cc ov.cc ov-typeinfo.cc ops.cc \
 	op-cm-cm.cc op-cm-cs.cc op-cm-m.cc op-cm-s.cc op-cs-cm.cc \
 	op-cs-cs.cc op-cs-m.cc op-cs-s.cc op-m-cm.cc op-m-cs.cc \
 	op-m-m.cc op-m-s.cc op-s-cm.cc op-s-cs.cc op-s-m.cc op-s-s.cc \
 	op-str-str.cc
diff --git a/src/ov-typeinfo.cc b/src/ov-typeinfo.cc
--- a/src/ov-typeinfo.cc
+++ b/src/ov-typeinfo.cc
@@ -205,17 +205,17 @@ octave_value_typeinfo::do_installed_type
   string_vector retval (num_types);
 
   for (int i = 0;i < num_types; i++)
     retval (i) = types (i);
 
   return retval;
 }
 
-DEFUN(typeinfo, args, ,
+DEFUN (typeinfo, args, ,
   "usage: typeinfo ([typename])")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 0)
     retval = octave_value_typeinfo::installed_type_names ();
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -80,17 +80,17 @@ mk_stat_map (const file_stat& fs)
 #endif
 #if defined (HAVE_ST_BLOCKS)
   m["blocks"] = (double) fs.blocks ();
 #endif
 
   return m;
 }
 
-DEFUN(dup2, args, ,
+DEFUN (dup2, args, ,
  "fid = dup2 (old, new): duplicate a file descriptor")
 {
   double retval = -1.0;
 
 #if defined (HAVE_DUP2)
   int nargin = args.length ();
 
   if (nargin == 2)
@@ -119,17 +119,17 @@ DEFUN(dup2, args, ,
     print_usage ("dup2");
 #else
   gripe_not_supported ("dup2");
 #endif
 
   return retval;
 }
 
-DEFUN(exec, args, ,
+DEFUN (exec, args, ,
  "exec (file, args): replace current process with a new process")
 {
   double retval = -1.0;
 
 #if defined (HAVE_EXECVP)
   int nargin = args.length ();
 
   if (nargin == 1 || nargin == 2)
@@ -187,17 +187,17 @@ DEFUN(exec, args, ,
     print_usage ("exec");
 #else
   gripe_not_supported ("exec");
 #endif
 
   return retval;
 }
 
-DEFUN(fcntl, args, ,
+DEFUN (fcntl, args, ,
  "fcntl (fid, request, argument): control open file descriptors")
 {
   double retval = -1.0;
 
 #if defined (HAVE_FCNTL)
   int nargin = args.length ();
 
   if (nargin == 3)
@@ -228,17 +228,17 @@ DEFUN(fcntl, args, ,
     print_usage ("fcntl");
 #else
   gripe_not_supported ("fcntl");
 #endif
 
   return retval;
 }
 
-DEFUN(fork, args, ,
+DEFUN (fork, args, ,
  "fork (): create a copy of the current process")
 {
   double retval = -1.0;
 
 #if defined (HAVE_FORK)
   int nargin = args.length ();
 
   if (nargin == 0)
@@ -247,17 +247,17 @@ DEFUN(fork, args, ,
     print_usage ("fork");
 #else
   gripe_not_supported ("fork");
 #endif
 
   return retval;
 }
 
-DEFUN(getpgrp, args, ,
+DEFUN (getpgrp, args, ,
   "pgid = getpgrp (): return the process group id of the current process")
 {
   double retval = -1.0;
 
 #if defined (HAVE_GETPGRP)
   int nargin = args.length ();
 
   if (nargin == 0)
@@ -266,17 +266,17 @@ DEFUN(getpgrp, args, ,
     print_usage ("getpgrp");
 #else
   gripe_not_supported ("getpgrp");
 #endif
 
   return retval;
 }
 
-DEFUN(getpid, args, ,
+DEFUN (getpid, args, ,
   "pid = getpid (): return the process id of the current process")
 {
   double retval = -1.0;
 
 #if defined (HAVE_GETPID)
   int nargin = args.length ();
 
   if (nargin == 0)
@@ -285,17 +285,17 @@ DEFUN(getpid, args, ,
     print_usage ("getpid");
 #else
   gripe_not_supported ("getpid");
 #endif
 
   return retval;
 }
 
-DEFUN(getppid, args, ,
+DEFUN (getppid, args, ,
   "pid = getppid (): return the process id of the parent process")
 {
   double retval = -1.0;
 
 #if defined (HAVE_GETPPID)
   int nargin = args.length ();
 
   if (nargin == 0)
diff --git a/src/time.cc b/src/time.cc
--- a/src/time.cc
+++ b/src/time.cc
@@ -21,17 +21,17 @@ Software Foundation, 59 Temple Place - S
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <string>
 
-#include "defun.h"
+#include "defun-dld.h"
 #include "error.h"
 #include "help.h"
 #include "oct-map.h"
 #include "systime.h"
 #include "ov.h"
 #include "oct-obj.h"
 #include "utils.h"
 
@@ -84,17 +84,17 @@ extract_tm (Octave_map &m, double& fract
 #ifdef HAVE_TMZONE
   string tstr = m ["zone"] . string_value ();
   tm.tm_zone = tstr.c_str ();
 #endif
 
   return &tm;
 }
 
-DEFUN (time, , ,
+DEFUN_DLD (time, , ,
   "time ()\n\
 \n\
   Return current time.  On Unix systems, this is the number of\n\
   seconds since the epoch.")
 {
   time_t now;
   double fraction = 0.0;
 
@@ -116,17 +116,17 @@ DEFUN (time, , ,
 
   now = time (0);
 
 #endif
  
   return (double) now + fraction;
 }
 
-DEFUN (gmtime, args, ,
+DEFUN_DLD (gmtime, args, ,
   "gmtime (TIME)\n\
 \n\
   Given a value returned from time(), return a structure like that\n\
   returned from localtime() but with values corresponding to\n\
   Coordinated Universal Time (UTC).")
 {
   octave_value_list retval;
 
@@ -144,17 +144,17 @@ DEFUN (gmtime, args, ,
 	}
     }
   else
     print_usage ("gmtime");
 
   return retval;
 }
 
-DEFUN (localtime, args, ,
+DEFUN_DLD (localtime, args, ,
   "localtime (TIME)\n\
 \n\
   Given a value returned from time(), return a structure with\n\
   the following elements:\n\
 \n\
     usec  : microseconds after the second (0, 999999)\n\
     sec   : seconds after the minute (0, 61)\n\
     min   : minutes after the hour (0, 59)\n\
@@ -183,17 +183,17 @@ DEFUN (localtime, args, ,
 	}
     }
   else
     print_usage ("localtime");
 
   return retval;
 }
 
-DEFUN (mktime, args, ,
+DEFUN_DLD (mktime, args, ,
   "mktime (TMSTRUCT)")
 {
   octave_value_list retval;
 
   if (args.length () == 1 && args(0).is_map ()) 
     {
       Octave_map map = args(0).map_value ();
 
@@ -205,17 +205,17 @@ DEFUN (mktime, args, ,
 	retval = (double) mktime (tm) + fraction;
     }
   else
     print_usage ("mktime");
 
   return retval;
 }
 
-DEFUN (strftime, args, ,
+DEFUN_DLD (strftime, args, ,
   "strftime (FMT, TMSTRUCT)\n\
 \n\
   Performs `%' substitutions similar to those in printf.  Except where\n\
   noted, substituted fields have a fixed size; numeric fields are\n\
   padded if necessary.  Padding is with zeros by default; for fields\n\
   that display a single number, padding can be changed or inhibited by\n\
   following the `%' with one of the modifiers described below.\n\
   Unknown field specifiers are copied as normal characters.  All other\n\
