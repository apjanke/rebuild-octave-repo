# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294602756 18000
#      Sun Jan 09 14:52:36 2011 -0500
# Node ID 1f64a7b73e982a3a528b0f23340e5fc896096dfe
# Parent  fb98284fcc208a328ab45b0e9c469a659a795c33
lex.ll (display_tokens): print token values

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-09  John W. Eaton  <jwe@octave.org>
+
+	* lex.ll (display_token): Display token value for NUM, IMAG_NUM,
+	STRUCT_ELT, NAME, DQ_STRING, and SQ_STRING tokens.
+
 2011-01-09  John W. Eaton  <jwe@octave.org>
 
 	* lex.h, lex.ll, oct-parse.yy (lexer_flags::parsed_function_name):
 	Declare to be std::stack<bool> instead of bool.  Change all uses.
 	Bug #32083.
 
 2011-01-08  Konstantinos Poulios  <logari81@googlemail.com>
 
diff --git a/src/lex.ll b/src/lex.ll
--- a/src/lex.ll
+++ b/src/lex.ll
@@ -3555,23 +3555,44 @@ display_token (int tok)
     case EPLUS: std::cerr << "EPLUS\n"; break;
     case EMINUS: std::cerr << "EMINUS\n"; break;
     case QUOTE: std::cerr << "QUOTE\n"; break;
     case TRANSPOSE: std::cerr << "TRANSPOSE\n"; break;
     case PLUS_PLUS: std::cerr << "PLUS_PLUS\n"; break;
     case MINUS_MINUS: std::cerr << "MINUS_MINUS\n"; break;
     case POW: std::cerr << "POW\n"; break;
     case EPOW: std::cerr << "EPOW\n"; break;
-    case NUM: std::cerr << "NUM\n"; break;
-    case IMAG_NUM: std::cerr << "IMAG_NUM\n"; break;
-    case STRUCT_ELT: std::cerr << "STRUCT_ELT\n"; break;
-    case NAME: std::cerr << "NAME\n"; break;
+
+    case NUM:
+    case IMAG_NUM:
+      std::cerr << (tok == NUM ? "NUM" : "IMAG_NUM")
+                << " [" << yylval.tok_val->number () << "]\n";
+      break;
+
+    case STRUCT_ELT:
+      std::cerr << "STRUCT_ELT [" << yylval.tok_val->text () << "]\n"; break;
+
+    case NAME:
+      {
+        symbol_table::symbol_record *sr = yylval.tok_val->sym_rec ();
+        std::cerr << "NAME";
+        if (sr)
+          std::cerr << " [" << sr->name () << "]";
+        std::cerr << "\n";
+      }
+      break;
+
     case END: std::cerr << "END\n"; break;
-    case DQ_STRING: std::cerr << "DQ_STRING\n"; break;
-    case SQ_STRING: std::cerr << "SQ_STRING\n"; break;
+
+    case DQ_STRING:
+    case SQ_STRING:
+      std::cerr << (tok == DQ_STRING ? "DQ_STRING" : "SQ_STRING")
+                << " [" << yylval.tok_val->text () << "]\n";
+      break;
+
     case FOR: std::cerr << "FOR\n"; break;
     case WHILE: std::cerr << "WHILE\n"; break;
     case DO: std::cerr << "DO\n"; break;
     case UNTIL: std::cerr << "UNTIL\n"; break;
     case IF: std::cerr << "IF\n"; break;
     case ELSEIF: std::cerr << "ELSEIF\n"; break;
     case ELSE: std::cerr << "ELSE\n"; break;
     case SWITCH: std::cerr << "SWITCH\n"; break;
