# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466160068 14400
#      Fri Jun 17 06:41:08 2016 -0400
# Node ID 034b15e9c262bbc7ff8988b61a8ce40cf96ecb2f
# Parent  da9b960b1b2d7884e055a98e72660efe4f882c47
hide some preprocessor macros in wrapper functions

* unistd-wrappers.c, unistd-wrappers.h (octave_have_fork,
octave_have_vfork): New functions.

* oct-syscalls.cc: Use new wrapper functions.

diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -96,45 +96,46 @@ namespace octave
       return status;
     }
 
     pid_t
     fork (std::string& msg)
     {
       pid_t status = -1;
 
-#if defined (HAVE_FORK)
-      status = octave_fork_wrapper ();
+      if (octave_have_fork ())
+        {
+          status = octave_fork_wrapper ();
 
-      if (status < 0)
-        msg = gnulib::strerror (errno);
-#else
-      msg = NOT_SUPPORTED ("vfork");
-#endif
+          if (status < 0)
+            msg = gnulib::strerror (errno);
+        }
+      else
+        msg = NOT_SUPPORTED ("fork");
 
       return status;
     }
 
     pid_t
     vfork (std::string& msg)
     {
       pid_t status = -1;
 
-#if defined (HAVE_VFORK) || defined (HAVE_FORK)
-#  if defined (HAVE_VFORK)
-      status = octave_vfork_wrapper ();
-#  else
-      status = octave_fork_wrapper ();
-#  endif
+      if (octave_have_vfork () || octave_have_fork ())
+        {
+          if (octave_have_vfork ())
+            status = octave_vfork_wrapper ();
+          else
+            status = octave_fork_wrapper ();
 
-      if (status < 0)
-        msg = gnulib::strerror (errno);
-#else
-      msg = NOT_SUPPORTED ("vfork");
-#endif
+          if (status < 0)
+            msg = gnulib::strerror (errno);
+        }
+      else
+        msg = NOT_SUPPORTED ("vfork");
 
       return status;
     }
 
     pid_t
     getpgrp (std::string& msg)
     {
       pid_t status = octave_getpgrp_wrapper ();
diff --git a/liboctave/wrappers/unistd-wrappers.c b/liboctave/wrappers/unistd-wrappers.c
--- a/liboctave/wrappers/unistd-wrappers.c
+++ b/liboctave/wrappers/unistd-wrappers.c
@@ -106,17 +106,21 @@ int
 octave_execvp_wrapper (const char *file, char *const *argv)
 {
   return execvp (file, argv);
 }
 
 pid_t
 octave_fork_wrapper (void)
 {
+#if defined (HAVE_FORK)
   return fork ();
+#else
+  return -1;
+#endif
 }
 
 int
 octave_ftruncate_wrapper (int fd, off_t sz)
 {
   return ftruncate (fd, sz);
 }
 
@@ -226,10 +230,34 @@ int
 octave_unlink_wrapper (const char *nm)
 {
   return unlink (nm);
 }
 
 pid_t
 octave_vfork_wrapper (void)
 {
+#if defined (HAVE_VFORK)
   return vfork ();
+#else
+  return -1;
+#endif
 }
+
+bool
+octave_have_fork (void)
+{
+#if defined (HAVE_FORK)
+  return true;
+#else
+  return false;
+#endif
+}
+
+bool
+octave_have_vfork (void)
+{
+#if defined (HAVE_VFORK)
+  return true;
+#else
+  return false;
+#endif
+}
diff --git a/liboctave/wrappers/unistd-wrappers.h b/liboctave/wrappers/unistd-wrappers.h
--- a/liboctave/wrappers/unistd-wrappers.h
+++ b/liboctave/wrappers/unistd-wrappers.h
@@ -18,16 +18,20 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_unistd_wrappers_h)
 #define octave_unistd_wrappers_h 1
 
+#if ! defined (__cplusplus)
+#  include <stdbool.h>
+#endif
+
 #if defined __cplusplus
 extern "C" {
 #endif
 
 extern int octave_access_f_ok (void);
 
 extern int octave_access_r_ok (void);
 
@@ -86,13 +90,17 @@ extern int octave_stdin_fileno (void);
 extern int octave_stdout_fileno (void);
 
 extern int octave_symlink_wrapper (const char *nm1, const char *nm2);
 
 extern int octave_unlink_wrapper (const char *nm);
 
 extern pid_t octave_vfork_wrapper (void);
 
+extern bool octave_have_fork (void);
+
+extern bool octave_have_vfork (void);
+
 #if defined __cplusplus
 }
 #endif
 
 #endif
