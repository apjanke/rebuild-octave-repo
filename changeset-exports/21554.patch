# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1459216843 14400
#      Mon Mar 28 22:00:43 2016 -0400
# Branch stable
# Node ID 9f0088f3f335224cf0032cc4a11127a60f526a89
# Parent  e09f4c9f800ab8dca506ec34edde20fe7407f442
call openmp function at initialization (bug #47372)

Calling an openmp function early in Octave's startup process ensures
that the openmp library will be linked with Octave and that shared
libraries that use openmp may be safely loaded and unloaded.

* configure.ac: Check for omp.h and omp_get_num_threads.
* sysdep.cc: Conditionally include <omp.h>.
(sysdep_init) Call omp_get_num_threads if it is available.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -445,26 +445,30 @@ AC_ARG_ENABLE([openmp],
 if test $check_for_openmp = yes; then
   AC_LANG_PUSH(C)
   AX_OPENMP([XTRA_CFLAGS="$XTRA_CFLAGS $OPENMP_CFLAGS"; USE_OPENMP=yes], [])
   AC_LANG_POP(C)
   AC_LANG_PUSH(C++)
   AX_OPENMP([XTRA_CXXFLAGS="$XTRA_CXXFLAGS $OPENMP_CXXFLAGS"; USE_OPENMP=yes], [])
   AC_LANG_POP(C++)
 fi
-dnl Define here since it is skipped if the first argument to
-dnl AX_OPENMP is not empty.
-if test $USE_OPENMP = yes; then
-  AC_DEFINE(HAVE_OPENMP, 1, [Define if OpenMP is enabled])
-fi
+
 ## Set these for any other tests that may require them.  They will be
 ## reset before output files are generated.
 CFLAGS="$CFLAGS $OPENMP_CFLAGS"
 CXXFLAGS="$CXXFLAGS $OPENMP_CXXFLAGS"
 
+dnl Define here since it is skipped if the first argument to
+dnl AX_OPENMP is not empty.
+if test $USE_OPENMP = yes; then
+  AC_CHECK_HEADERS([omp.h])
+  AC_CHECK_FUNCS([omp_get_num_threads])
+  AC_DEFINE(HAVE_OPENMP, 1, [Define if OpenMP is enabled])
+fi
+
 ### When compiling math for x87, problems may arise in some code comparing
 ### floating-point intermediate results.  The root cause is the extra precision
 ### (~80 bits) of x87 co-processor registers versus the IEEE standard 64 bits.
 ### Generally, storing the result in a local volatile variable forces a
 ### truncation back to 64 bits, but it also degrades performance.
 ### However, this performance degradation is very minimal, if indeed measurable.
 ### Therefore, it has been enabled for all platforms and compilers.
 ### Reported bugs indicate that --enable-float-truncate is required for MinGW
diff --git a/libinterp/corefcn/sysdep.cc b/libinterp/corefcn/sysdep.cc
--- a/libinterp/corefcn/sysdep.cc
+++ b/libinterp/corefcn/sysdep.cc
@@ -55,16 +55,20 @@ along with Octave; see the file COPYING.
 #if defined (HAVE_FLOATINGPOINT_H)
 #include <floatingpoint.h>
 #endif
 
 #if defined (HAVE_IEEEFP_H)
 #include <ieeefp.h>
 #endif
 
+#if defined (HAVE_OMP_H)
+#include <omp.h>
+#endif
+
 #include "cmd-edit.h"
 #include "file-ops.h"
 #include "lo-mappers.h"
 #include "lo-math.h"
 #include "mach-info.h"
 #include "oct-env.h"
 #include "quit.h"
 
@@ -303,16 +307,22 @@ same_file_internal (const std::string& f
           && fs_file1.dev () == fs_file2.dev ());
 
 #endif
 }
 
 void
 sysdep_init (void)
 {
+#if defined (HAVE_OPENMP)
+#if defined (HAVE_OMP_GET_NUM_THREADS)
+  omp_get_num_threads ();
+#endif
+#endif
+
 #if defined (__386BSD__) || defined (__FreeBSD__) || defined (__NetBSD__)
   BSD_init ();
 #elif defined (__MINGW32__)
   MINGW_init ();
 #elif defined (_MSC_VER)
   MSVC_init ();
 #endif
 }
