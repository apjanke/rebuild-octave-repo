# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1419492691 -3600
#      Thu Dec 25 08:31:31 2014 +0100
# Branch gui-release
# Node ID 3c038da18218b555740980460c2da0501949a42a
# Parent  f90bb1e30de2f663a8a27565af9db29ba7d8598c
cleanup of focus function in gui editor

* file-editor-interface.h: remove function set_focus

* file-editor.cc (focus): call common function and extra code for the editor;
  (set_focus): removed, all code now in focus ();
  (request_new_file, request_open_file): replaced set_focus by focus

* file-editor.h: removed set_focus

diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -57,18 +57,16 @@ public:
   virtual void
   handle_update_breakpoint_marker_request (bool insert, const QString& file,
                                            int line) = 0;
 
   virtual void handle_edit_file_request (const QString& file) = 0;
 
   virtual bool check_closing (int closing_state) = 0;
 
-  virtual void set_focus () = 0;
-
   virtual void empty_script (bool, bool) = 0;
 
   virtual void enable_menu_shortcuts (bool enable) = 0;
 
 public slots:
   virtual void request_new_file (const QString& command = QString ()) = 0;
   virtual void request_new_script (const QString& command = QString ()) = 0;
   virtual void request_new_function (bool) = 0;
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -111,28 +111,19 @@ file_editor::check_closing (int closing_
   // Here, we really want to exit and all tabs are closed
   return true;
 }
 
 
 void
 file_editor::focus (void)
 {
-  set_focus ();
-}
+  octave_dock_widget::focus ();
 
-// set focus to editor and its current tab
-void
-file_editor::set_focus (void)
-{
-  if (!isVisible ())
-    setVisible (true);
-  setFocus ();
-  activateWindow ();
-  raise ();
+// set focus to current tab
   QWidget *fileEditorTab = _tab_widget->currentWidget ();
   if (fileEditorTab)
     emit fetab_set_focus (fileEditorTab);
 }
 
 QMenu *
 file_editor::debug_menu (void)
 {
@@ -169,17 +160,17 @@ file_editor::request_new_file (const QSt
   // editor tab has yet to be created and there is no object to
   // pass a signal to.  Hence, functionality is here.
 
   file_editor_tab *fileEditorTab = new file_editor_tab (ced);
   if (fileEditorTab)
     {
       add_file_editor_tab (fileEditorTab, "");  // new tab with empty title
       fileEditorTab->new_file (commands);       // title is updated here
-      set_focus ();                             // focus editor and new tab
+      focus ();                                 // focus editor and new tab
     }
 }
 
 void
 file_editor::request_new_script (const QString& commands)
 {
   request_new_file (commands);
 }
@@ -367,17 +358,17 @@ file_editor::request_open_file (const QS
 
               if (breakpoint_marker)
                 emit fetab_do_breakpoint_marker (insert, tab, line);
             }
 
           if (! ((breakpoint_marker || debug_pointer) && is_editor_console_tabbed ()))
             {
               emit fetab_set_focus (tab);
-              set_focus ();
+              focus ();
             }
         }
       else
         {
           file_editor_tab *fileEditorTab = new file_editor_tab ();
           if (fileEditorTab)
             {
               QString result = fileEditorTab->load_file (openFileName);
@@ -474,17 +465,17 @@ file_editor::request_open_file (const QS
                         }
                     }
                 }
             }
 
           if (! ((breakpoint_marker || debug_pointer) && is_editor_console_tabbed ()))
             {
               // really show editor and the current editor tab
-              set_focus ();
+              focus ();
               emit file_loaded_signal ();
             }
         }
     }
 }
 
 // open a file from the mru list
 void
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -53,17 +53,16 @@ public:
 
   void loadFile (const QString& fileName);
 
   QMenu *get_mru_menu (void) { return _mru_file_menu; }
   QMenu *debug_menu (void);
   QToolBar *toolbar (void);
   void insert_new_open_actions (QAction*,QAction*,QAction*);
 
-  void set_focus (void);
   void handle_enter_debug_mode (void);
   void handle_exit_debug_mode (void);
 
   void check_actions (void);
   void empty_script (bool startup, bool visible);
   void enable_menu_shortcuts (bool enable);
 
 signals:
