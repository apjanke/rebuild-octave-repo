# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1515699008 -3600
#      Thu Jan 11 20:30:08 2018 +0100
# Node ID c24b536df5d44da354e9406c1db3da0528d6ef43
# Parent  8a4aedbb3e5a06a4b5595dccdb58ab5c5cee6f87
functionality of ui dialogs not affected by inserted accelerators (#bug 52853)

* dialog.cc (QUIWidgetCreator::rm_amp): new method for removing accerelrators,
  i.e., ampersands followed by a word character from a string;
  (QUIWidgetCreator::dialog_button_clicked): compare the text of the clicked
  button with the original button texts while ignoring accelerators and store
  the matching original text

* dialog.h: (QUIWidgetCreator::rm_amp): new method;
  (QUIWidgetCreator::signal_dialog): store the original list of button texts
  passed by the user in a new class variable

diff --git a/libgui/src/dialog.cc b/libgui/src/dialog.cc
--- a/libgui/src/dialog.cc
+++ b/libgui/src/dialog.cc
@@ -52,25 +52,41 @@ QUIWidgetCreator::QUIWidgetCreator (void
 
 QUIWidgetCreator::~QUIWidgetCreator (void)
 {
   delete m_string_list;
   delete m_list_index;
   delete m_path_name;
 }
 
+QString
+QUIWidgetCreator::rm_amp (const QString& text)
+{
+  QString text_wo_amp = text;
+  text_wo_amp.replace (QRegExp ("&(\\w)"), "\\1");
+  return text_wo_amp;
+}
+
 void
 QUIWidgetCreator::dialog_button_clicked (QAbstractButton *button)
 {
   // Wait for link thread to go to sleep state.
   lock ();
 
-  // Store the value so that builtin functions can retrieve.
-  if (button)
-    m_dialog_button = button->text ();
+  // Check for a matching button text while ignoring accelerators because
+  // the window manager may have added one in the passed button
+  QString text_clean = rm_amp (button->text ());
+  for (int i = 0; i < m_button_list.count (); i++)
+    {
+      if (rm_amp (m_button_list.at (i)) == text_clean)
+        {
+          m_dialog_button = m_button_list.at (i); // text w/o extra accelerator
+          break;
+        }
+    }
 
   // The value should always be 1 for the Octave functions.
   m_dialog_result = 1;
 
   unlock ();
 
   // Wake up Octave process so that it continues.
   wake_all ();
diff --git a/libgui/src/dialog.h b/libgui/src/dialog.h
--- a/libgui/src/dialog.h
+++ b/libgui/src/dialog.h
@@ -48,20 +48,24 @@ class QUIWidgetCreator : public QObject
 public:
 
   QUIWidgetCreator (void);
 
   ~QUIWidgetCreator (void);
 
 public:
 
+  QString rm_amp (const QString& text);
+
   void signal_dialog (const QString& message, const QString& title,
                       const QString& icon, const QStringList& button,
                       const QString& defbutton, const QStringList& role)
   {
+    // Store button text before a window-manager adds accelerators
+    m_button_list = button;
 
     // Use the last button in the list as the reject result, i.e., when no
     // button is pressed such as in the case of the upper right close tab.
     if (! button.isEmpty ())
       m_dialog_button = button.last ();
 
     QString xicon = icon;
     if (xicon.isEmpty ())
@@ -146,16 +150,19 @@ public slots:
   void filedialog_finished (const QStringList& files, const QString& path,
                             int filterindex);
 
 private:
 
   int m_dialog_result;
   QString m_dialog_button;
 
+  // A copy of the dialogs button texts
+  QStringList m_button_list;
+
   // The list could conceivably be big.  Not sure how things are
   // stored internally, so keep off of the stack.
   QStringList *m_string_list;
   QIntList *m_list_index;
 
   QString *m_path_name;
 
   // GUI objects cannot be accessed in the non-GUI thread.  However,
