# HG changeset patch
# User jwe
# Date 1134610174 0
#      Thu Dec 15 01:29:34 2005 +0000
# Node ID 3d9ddfdc6d3ec78e3158651db1630bffad2bc616
# Parent  8eebdcfde94ee666bbd85fbae96c7d342e1bbcf0
[project @ 2005-12-15 01:29:34 by jwe]

diff --git a/scripts/plot/hist.m b/scripts/plot/hist.m
--- a/scripts/plot/hist.m
+++ b/scripts/plot/hist.m
@@ -134,18 +134,18 @@ function [nn, xx] = hist (y, x, norm)
 endfunction
 
 %!test
 %!  [nn,xx]=hist([1:4],3);
 %!  assert(xx, [1.5,2.5,3.5]);
 %!  assert(nn, [2,1,1]);
 %!test
 %!  [nn,xx]=hist([1:4]',3);
-%!  assert(xx, [1.5,2.5,3.5]');
-%!  assert(nn, [2,1,1]');
+%!  assert(xx, [1.5,2.5,3.5]);
+%!  assert(nn, [2,1,1]);
 %!test
 %!  [nn,xx]=hist([[1:4]',[1:4]'],3);
 %!  assert(xx, [[1.5,2.5,3.5]',[1.5,2.5,3.5]']);
 %!  assert(nn, [[2,1,1]',[2,1,1]']);
 %!assert(hist(1,1),1);
 %!test
 %!  for n = [10, 30, 100, 1000]
 %!    assert( sum(hist([1:n], n)), n );
diff --git a/scripts/sparse/spstats.m b/scripts/sparse/spstats.m
--- a/scripts/sparse/spstats.m
+++ b/scripts/sparse/spstats.m
@@ -5,35 +5,35 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{count}, @var{mean}, @var{var}]} = spstats (@var{s})
 ## @deftypefnx {Function File} {[@var{count}, @var{mean}, @var{var}]} = spstats (@var{s}, @var{j})
 ## Return the stats for the non-zero elements of the sparse matrix @var{s}.
 ## @var{count} is the number of non-zeros in each column, @var{mean}
 ## is the mean of the non-zeros in each column, and @var{var} is the  
 ## variance of the non-zeros in each column.
 ##
-## Called with two output arguments, if @var{s} is the data and @var{j}
+## Called with two input arguments, if @var{s} is the data and @var{j}
 ## is the bin number for the data, compute the stats for each bin.  In 
 ## this case, bins can contain data values of zero, whereas with 
 ## @code{spstats (@var{s})} the zeros may disappear.
 ## @end deftypefn
 
 function [count,mean,var] = spstats(S,j)
   if nargin < 1 || nargin > 2
     usage("[count, mean, var] = spstats(S)  OR  spstats(x,j)");
   endif
 
-  [n, m] = size (S);
   if nargin == 1
-    [i,j,v] = spfind (S);
+    [i,j,v] = find (S);
   else
     v = S;    
     i = 1:length (v);
     S = sparse (i, j, v);
   endif 
+  [n, m] = size (S);
 
   count = spsum (sparse (i, j, 1, n, m));
   if (nargout > 1) 
     mean = spsum(S) ./ count; 
   end
   if (nargout > 2) 
     ## XXX FIXME XXX Variance with count = 0 or 1?
     diff = S - sparse (i, j, mean(j), n, m); 
