# HG changeset patch
# User Rik <rik@octave.org>
# Date 1384128619 28800
#      Sun Nov 10 16:10:19 2013 -0800
# Node ID 752f6b3587540c23026dacc984a1de16c02227bd
# Parent  929c95b33eae74094273ce9892d0b86699aa08ad
Tweak GUI strings for conformity.

* libgui/src/files-dock-widget.cc, libgui/src/history-dock-widget.cc:
Use "Double-click" instead of "Doubleclick".

* libgui/src/m-editor/file-editor.cc: Capitalize breakpoint in menu items.

* libgui/src/main-window.cc: Consistently capitalize first letter of all words
in menus.

* libgui/src/settings-dialog.ui: Capitalize only first letter of options in
preferences dialog.

* libgui/src/welcome-wizard.cc: Rephrase wizard screen.

diff --git a/libgui/src/files-dock-widget.cc b/libgui/src/files-dock-widget.cc
--- a/libgui/src/files-dock-widget.cc
+++ b/libgui/src/files-dock-widget.cc
@@ -160,17 +160,17 @@ files_dock_widget::files_dock_widget (QW
   // Attach the model to the QTreeView and set the root index
   _file_tree_view = new FileTreeViewer (container);
   _file_tree_view->setSelectionMode (QAbstractItemView::ExtendedSelection);
   _file_tree_view->setModel (_file_system_model);
   _file_tree_view->setRootIndex (rootPathIndex);
   _file_tree_view->setSortingEnabled (true);
   _file_tree_view->setAlternatingRowColors (true);
   _file_tree_view->setAnimated (true);
-  _file_tree_view->setToolTip (tr ("Doubleclick a file to open it"));
+  _file_tree_view->setToolTip (tr ("Double-click a file to open it"));
 
   // get sort column and order as well as cloumn state (order and width)
   QSettings *settings = resource_manager::get_settings ();
   // FIXME: what should happen if settings is 0?
   _file_tree_view->sortByColumn (
     settings->value ("filesdockwidget/sort_files_by_column",0).toInt (),
     static_cast<Qt::SortOrder>
     (settings->value ("filesdockwidget/sort_files_by_order",
diff --git a/libgui/src/history-dock-widget.cc b/libgui/src/history-dock-widget.cc
--- a/libgui/src/history-dock-widget.cc
+++ b/libgui/src/history-dock-widget.cc
@@ -59,17 +59,17 @@ history_dock_widget::construct ()
 {
   _history_model = new QStringListModel ();
   _sort_filter_proxy_model.setSourceModel (_history_model);
   _history_list_view = new QListView (this);
   _history_list_view->setModel (&_sort_filter_proxy_model);
   _history_list_view->setAlternatingRowColors (true);
   _history_list_view->setEditTriggers (QAbstractItemView::NoEditTriggers);
   _history_list_view->setStatusTip (
-    tr ("Doubleclick a command to transfer it to the terminal."));
+    tr ("Double-click a command to transfer it to the terminal."));
   _history_list_view->setSelectionMode (QAbstractItemView::ExtendedSelection);
   _history_list_view->setContextMenuPolicy (Qt::CustomContextMenu);
   connect (_history_list_view,
            SIGNAL (customContextMenuRequested (const QPoint &)), this,
            SLOT (ctxMenu (const QPoint &)));
 
   _filter_line_edit = new QLineEdit (this);
   _filter_line_edit->setStatusTip (
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -910,37 +910,37 @@ file_editor::construct (void)
 
   _toggle_bookmark_action = new QAction (tr ("Toggle &Bookmark"), _tool_bar);
 
   _remove_bookmark_action
     = new QAction (tr ("&Remove All Bookmarks"), _tool_bar);
 
   QAction *next_breakpoint_action
     = new QAction (QIcon (":/actions/icons/bp_next.png"),
-                   tr ("&Next breakpoint"), _tool_bar);
+                   tr ("&Next Breakpoint"), _tool_bar);
   QAction *previous_breakpoint_action
     = new QAction (QIcon (":/actions/icons/bp_prev.png"),
-                   tr ("Pre&vious breakpoint"), _tool_bar);
+                   tr ("Pre&vious Breakpoint"), _tool_bar);
   QAction *toggle_breakpoint_action
     = new QAction (QIcon (":/actions/icons/bp_toggle.png"),
-                   tr ("Toggle &breakpoint"), _tool_bar);
+                   tr ("Toggle &Breakpoint"), _tool_bar);
   QAction *remove_all_breakpoints_action
     = new QAction (QIcon (":/actions/icons/bp_rm_all.png"),
-                   tr ("&Remove All breakpoints"), _tool_bar);
+                   tr ("&Remove All Breakpoints"), _tool_bar);
 
   _comment_selection_action
     = new QAction (tr ("&Comment"), _tool_bar);
   _uncomment_selection_action
     = new QAction (tr ("&Uncomment"), _tool_bar);
 
   _find_action = new QAction (QIcon (":/actions/icons/search.png"),
                               tr ("&Find and Replace"), _tool_bar);
 
   _run_action = new QAction (QIcon (":/actions/icons/artsbuilderexecute.png"),
-                             tr ("Save File And Run"), _tool_bar);
+                             tr ("Save File and Run"), _tool_bar);
 
   _goto_line_action = new QAction (tr ("Go&to Line"), _tool_bar);
 
   // the mru-list and an empty array of actions
   QSettings *settings = resource_manager::get_settings ();
   // FIXME: what should happen if settings is 0?
   _mru_files = settings->value ("editor/mru_file_list").toStringList ();
   for (int i = 0; i < MaxMRUFiles; ++i)
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1125,17 +1125,17 @@ main_window::construct_file_menu (QMenuB
 
 #ifdef HAVE_QSCINTILLA
   file_menu->addMenu (editor_window->get_mru_menu ());
 #endif
 
   file_menu->addSeparator ();
 
   QAction *load_workspace_action
-    = file_menu->addAction (tr ("Load workspace"));
+    = file_menu->addAction (tr ("Load Workspace"));
 
   QAction *save_workspace_action
     = file_menu->addAction (tr ("Save Workspace As"));
 
   file_menu->addSeparator ();
 
   QAction *preferences_action
     = file_menu->addAction (QIcon (":/actions/icons/configure.png"),
@@ -1276,21 +1276,21 @@ main_window::construct_debug_menu (QMenu
 {
   _debug_menu = p->addMenu (tr ("De&bug"));
 
   _debug_step_over = construct_debug_menu_item
                        (":/actions/icons/db_step.png", tr ("Step"),
                         Qt::Key_F10);
 
   _debug_step_into = construct_debug_menu_item
-                       (":/actions/icons/db_step_in.png", tr ("Step in"),
+                       (":/actions/icons/db_step_in.png", tr ("Step In"),
                         Qt::Key_F11);
 
   _debug_step_out = construct_debug_menu_item
-                      (":/actions/icons/db_step_out.png", tr ("Step out"),
+                      (":/actions/icons/db_step_out.png", tr ("Step Out"),
                        Qt::ShiftModifier + Qt::Key_F11);
 
   _debug_continue = construct_debug_menu_item
                       (":/actions/icons/db_cont.png", tr ("Continue"),
                        Qt::Key_F5);
 
   _debug_menu->addSeparator ();
 #ifdef HAVE_QSCINTILLA
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -203,17 +203,17 @@
          <item>
           <layout class="QGridLayout" name="editor_common_settings_grid">
            <property name="spacing">
             <number>6</number>
            </property>
            <item row="2" column="0">
             <widget class="QCheckBox" name="editor_ws_checkbox">
              <property name="text">
-              <string>Show white space</string>
+              <string>Show whitespace</string>
              </property>
             </widget>
            </item>
            <item row="1" column="0">
             <widget class="QCheckBox" name="editor_showLineNumbers">
              <property name="enabled">
               <bool>true</bool>
              </property>
@@ -230,17 +230,17 @@
             </widget>
            </item>
            <item row="2" column="1">
             <widget class="QCheckBox" name="editor_ws_indent_checkbox">
              <property name="enabled">
               <bool>false</bool>
              </property>
              <property name="text">
-              <string>Do not show white spaces used for indentation</string>
+              <string>Do not show whitespace used for indentation</string>
              </property>
             </widget>
            </item>
            <item row="3" column="0">
             <widget class="QCheckBox" name="editor_highlightCurrentLine">
              <property name="enabled">
               <bool>true</bool>
              </property>
@@ -520,17 +520,17 @@
               <number>6</number>
              </property>
              <item>
               <widget class="QLabel" name="editor_label_ac_threshold">
                <property name="enabled">
                 <bool>false</bool>
                </property>
                <property name="text">
-                <string>Characters before list with suggestions is displayed</string>
+                <string># of characters typed before completion list displayed</string>
                </property>
               </widget>
              </item>
              <item>
               <widget class="QSpinBox" name="editor_spinbox_ac_threshold">
                <property name="enabled">
                 <bool>false</bool>
                </property>
@@ -714,17 +714,17 @@
             <widget class="QCheckBox" name="editor_create_new file">
              <property name="sizePolicy">
               <sizepolicy hsizetype="Minimum" vsizetype="Fixed">
                <horstretch>0</horstretch>
                <verstretch>0</verstretch>
               </sizepolicy>
              </property>
              <property name="text">
-              <string>Create non existing files without prompting</string>
+              <string>Create nonexistent files without prompting</string>
              </property>
             </widget>
            </item>
           </layout>
          </item>
         </layout>
        </item>
        <item>
@@ -771,17 +771,17 @@
             </widget>
            </item>
            <item>
             <widget class="QLabel" name="customEditorLabel">
              <property name="enabled">
               <bool>false</bool>
              </property>
              <property name="text">
-              <string>Command  line (%f=file, %l=line):</string>
+              <string>command line (%f=file, %l=line):</string>
              </property>
             </widget>
            </item>
            <item>
             <widget class="QLineEdit" name="customFileEditor">
              <property name="enabled">
               <bool>false</bool>
              </property>
@@ -817,17 +817,17 @@
             <width>676</width>
             <height>16777215</height>
            </size>
           </property>
           <property name="frameShape">
            <enum>QFrame::NoFrame</enum>
           </property>
           <property name="text">
-           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select font, font size (as difference to the default size), font decoration (bold, italic, underline), textcolor and background color (for the latter, the color pink (255,0,255) is a placeholder for the default background color)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
+           <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;Select font, font size (as a difference from the default size), font style (bold, italic, underline), text color and background color (for the latter, the color pink (255,0,255) is a placeholder for the default background color)&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
           </property>
           <property name="scaledContents">
            <bool>false</bool>
           </property>
           <property name="alignment">
            <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
           </property>
           <property name="wordWrap">
@@ -893,17 +893,17 @@
           <property name="text">
            <string>Cursor blinking</string>
           </property>
          </widget>
         </item>
         <item>
          <widget class="QCheckBox" name="terminal_cursorUseForegroundColor">
           <property name="text">
-           <string>Use Foreground Color</string>
+           <string>Use foreground color</string>
           </property>
          </widget>
         </item>
        </layout>
       </widget>
       <widget class="QWidget" name="verticalLayoutWidget_3">
        <property name="geometry">
         <rect>
@@ -1056,17 +1056,17 @@
          <property name="text">
           <string>Show hidden files</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="sync_octave_directory">
          <property name="text">
-          <string>Synchronize octave directory with the file browser</string>
+          <string>Synchronize Octave working directory with file browser</string>
          </property>
         </widget>
        </item>
        <item>
         <widget class="QCheckBox" name="useAlternatingRowColors">
          <property name="text">
           <string>Alternating row colors</string>
          </property>
@@ -1204,17 +1204,17 @@
           </widget>
          </item>
          <item row="0" column="1">
           <widget class="QLabel" name="label_3">
            <property name="enabled">
             <bool>false</bool>
            </property>
            <property name="text">
-            <string>Proxy Type:</string>
+            <string>Proxy type:</string>
            </property>
           </widget>
          </item>
          <item row="2" column="1">
           <widget class="QLabel" name="label_5">
            <property name="enabled">
             <bool>false</bool>
            </property>
diff --git a/libgui/src/welcome-wizard.cc b/libgui/src/welcome-wizard.cc
--- a/libgui/src/welcome-wizard.cc
+++ b/libgui/src/welcome-wizard.cc
@@ -56,18 +56,18 @@ welcome_wizard::welcome_wizard (QWidget 
   ft.setPointSize (20);
   title->setFont (ft);
 
   QLabel *msg_1 = new QLabel (
     tr ("You seem to be using the Octave graphical interface for the first time on this computer.  Click 'Finish' to write a configuration file and launch Octave."));
   msg_1->setWordWrap (true);
 
   QString msg_2_text = QString (tr ("The configuration file is stored in %1. "
-                                    "If that file exists, you will not see this "
-                                    "dialog when Octave starts again.").
+                                    "If that file exists, you will not see "
+                                    "this dialog again when Octave starts.").
                                 arg (resource_manager::get_settings_file ()));
   QLabel *msg_2 = new QLabel (msg_2_text);
   msg_2->setWordWrap (true);
 
   message->addWidget (title);
   message->addWidget (msg_1);
   message->addWidget (msg_2);
 
@@ -86,18 +86,18 @@ welcome_wizard::welcome_wizard (QWidget 
     (tr ("<html><head>\n"
          "<style>\n"
          "a:link { text-decoration: underline; color: #0000ff; }\n"
          "</style>\n"
          "<head/><body>\n"
          "<p>For more information about Octave:</p>\n"
          "<ul>\n"
          "<li>Visit <a href=\"http://octave.org\">http://octave.org</a></li>\n"
-         "<li>Get the documentation online as <a href=\"http://www.gnu.org/software/octave/doc/interpreter/index.html\">html</a>- or <a href=\"http://www.gnu.org/software/octave/octave.pdf\">pdf</span></a>-document</li>\n"
-         "<li>Open the documentation browser of Octave GUI with the help menu</li>\n"
+         "<li>Get the documentation online in <a href=\"http://www.gnu.org/software/octave/doc/interpreter/index.html\">html</a> or <a href=\"http://www.gnu.org/software/octave/octave.pdf\">pdf</span></a> format</li>\n"
+         "<li>Open the documentation browser from the help menu</li>\n"
          "</ul>\n"
          "</body></html>"),
      this);
   links->setWordWrap (true);
   links->setOpenExternalLinks (true);
 
   QSpacerItem *hfill = new QSpacerItem (40, 20, QSizePolicy::Expanding,
                                         QSizePolicy::Minimum);
