# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471898870 25200
#      Mon Aug 22 13:47:50 2016 -0700
# Node ID dc73bbd66363ae7054e76964441ee21ee51171bc
# Parent  8f23b5b23235aaf52d20555e6ea6f05642786076
Make sure all lines associated with axes respect axes linewidth property.

* gl-render.cc (draw_axes_boxes): Remove call to set_linewidth.
* gl-render.cc (draw_axes): Call set_linewidth before drawing
axes, grid, and ticks.
* gl-render.cc: Call set_linewidth (0.5f) since function expects
a float input.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1190,17 +1190,16 @@ namespace octave
     double ypTickN = props.get_ypTickN ();
     double zpTickN = props.get_zpTickN ();
 
     bool plotyy = (props.has_property ("__plotyy_axes__"));
 
     // Axes box
 
     set_linestyle ("-", true);
-    set_linewidth (props.get_linewidth ());
 
     glBegin (GL_LINES);
 
     if (layer2Dtop)
       std::swap (zpTick, zpTickN);
 
     // X box
     set_color (props.get_xcolor_rgb ());
@@ -1855,16 +1854,17 @@ namespace octave
     // Disable line smoothing for axes
     GLboolean antialias;
     glGetBooleanv (GL_LINE_SMOOTH, &antialias);
     if (antialias == GL_TRUE)
       glDisable (GL_LINE_SMOOTH);
 
     set_font (props);
     set_interpreter (props.get_ticklabelinterpreter ());
+    set_linewidth (props.get_linewidth ());
 
     // draw axes object
     draw_axes_planes (props);
 
     draw_axes_x_grid (props);
     draw_axes_y_grid (props);
     draw_axes_z_grid (props);
 
@@ -1975,17 +1975,17 @@ namespace octave
                     glEnd ();
                   }
               }
 
             if (flag)
               glEnd ();
           }
 
-        set_linewidth (0.5);
+        set_linewidth (0.5f);
         set_linestyle ("-");
       }
 
     set_clipping (false);
 
     if (! props.marker_is ("none")
         && ! (props.markeredgecolor_is ("none")
               && props.markerfacecolor_is ("none")))
@@ -2543,17 +2543,17 @@ namespace octave
                         glVertex3d (x(j2,i), y(j,i2), z(j,i));
 
                         glEnd ();
                       }
                   }
               }
 
             set_linestyle ("-");
-            set_linewidth (0.5);
+            set_linewidth (0.5f);
 
             if ((el_mode > 0) && (num_lights > 0))
               glDisable (GL_LIGHTING);
           }
         else
           {
             // FIXME: implement transparency
           }
@@ -3013,17 +3013,17 @@ namespace octave
                       }
 
                     tess.end_contour ();
                     tess.end_polygon ();
                   }
               }
 
             set_linestyle ("-");
-            set_linewidth (0.5);
+            set_linewidth (0.5f);
 
             if ((el_mode > 0) && (num_lights > 0) && has_normals)
               glDisable (GL_LIGHTING);
           }
         else
           {
             // FIXME: implement transparency
           }
