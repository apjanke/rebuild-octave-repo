# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1204010192 18000
#      Tue Feb 26 02:16:32 2008 -0500
# Node ID c9a476b1e6646ddec0e6efb310437d945f6e593b
# Parent  bb0f2353cff56ce32d23919fc684174158826009
correctly set ans for cs-lists and simplify printing them

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2008-02-26  John W. Eaton  <jwe@octave.org>
+
+	* variables.cc (bind_ans): Handle cs-lists recursively.
+
+	* ov-cs-list.h, ov-cs-list.cc (octave_cs_list::print,
+	octave_cs_list::print_raw): Delete.
+
 2008-02-25  John W. Eaton  <jwe@octave.org>
 
 	* Cell.cc (Cell::map): New function.
 	* Cell.h (Cell::map): Declare.
 	(xisalnum, xisalpha, xisascii, xiscntrl, xisdigit,
 	xisgraph, xislower, xisprint, xispunct, xisspace, xisupper,
 	xisxdigit, xtoascii, xtolower, xtoupper): New mapper functions.
 	(ctype_mapper): New private typedef.
diff --git a/src/ov-cs-list.cc b/src/ov-cs-list.cc
--- a/src/ov-cs-list.cc
+++ b/src/ov-cs-list.cc
@@ -44,57 +44,13 @@ octave_cs_list::octave_cs_list (const Ce
   octave_idx_type n = c.length ();
 
   lst.resize (n);
 
   for (octave_idx_type i = 0; i < n; i++)
     lst(i) = c(i);
 }
 
-void
-octave_cs_list::print (std::ostream& os, bool) const
-{
-  print_raw (os);
-}
-
-void
-octave_cs_list::print_raw (std::ostream& os, bool) const
-{
-  unwind_protect::begin_frame ("octave_cs_list_print");
-
-  octave_idx_type n = lst.length ();
-
-  if (n > 0)
-    {
-      indent (os);
-      os << "(,";
-      newline (os);
-
-      increment_indent_level ();
-
-      for (octave_idx_type i = 0; i < n; i++)
-	{
-	  std::ostringstream buf;
-	  buf << "[" << i+1 << "]";
-
-	  octave_value val = lst(i);
-
-	  val.print_with_name (os, buf.str ());
-	}
-
-      decrement_indent_level ();
-
-      indent (os);
-      os << ",)";
-    }
-  else
-    os << "(,,)";
-
-  newline (os);
-
-  unwind_protect::run_frame ("octave_cs_list_print");
-}
-
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov-cs-list.h b/src/ov-cs-list.h
--- a/src/ov-cs-list.h
+++ b/src/ov-cs-list.h
@@ -68,20 +68,16 @@ public:
   bool is_defined (void) const { return true; }
 
   bool is_constant (void) const { return true; }
 
   bool is_cs_list (void) const { return true; }
 
   octave_value_list list_value (void) const { return lst; }
 
-  void print (std::ostream& os, bool) const;
-
-  void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
-
 private:
 
   // The list of Octave values.
   octave_value_list lst;
 
   DECLARE_OCTAVE_ALLOCATOR
 
   DECLARE_OV_TYPEID_FUNCTIONS_AND_DATA
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1881,20 +1881,30 @@ See who.\n\
 
 void
 bind_ans (const octave_value& val, bool print)
 {
   static std::string ans = "ans";
 
   if (val.is_defined ())
     {
-      symbol_table::varref (ans) = val;
-
-      if (print)
-	val.print_with_name (octave_stdout, ans);
+      if (val.is_cs_list ())
+	{
+	  octave_value_list lst = val.list_value ();
+
+	  for (octave_idx_type i = 0; i < lst.length (); i++)
+	    bind_ans (lst(i), print);
+	}
+      else
+	{
+	  symbol_table::varref (ans) = val;
+
+	  if (print)
+	    val.print_with_name (octave_stdout, ans);
+	}
     }
 }
 
 void
 bind_internal_variable (const std::string& fname, const octave_value& val)
 {
   octave_value_list args;
 
