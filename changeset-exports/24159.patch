# HG changeset patch
# User Rik <rik@octave.org>
# Date 1508426092 25200
#      Thu Oct 19 08:14:52 2017 -0700
# Node ID c4dac7a0da7e1e957a47df126d829059968b6ef7
# Parent  f9549e90d620e50778e01909e5b14f48dcf6d13e
integral.m: Remove specific code to preserve single type.

* integral.m: Remove code to cast output to single, now that all underlying
quadrature routines correctly return a single output when any input is single.

diff --git a/scripts/general/integral.m b/scripts/general/integral.m
--- a/scripts/general/integral.m
+++ b/scripts/general/integral.m
@@ -104,17 +104,16 @@
 
 function q = integral (f, a, b, varargin)
 
   if (nargin < 3 || (mod (nargin, 2) == 0))
     print_usage ();
   endif
 
   if (nargin == 3)
-    issingle = isa (a, "single") || isa (b, "single");
     ## Pass the simplest case directly to general integrator.
     ## Let quadcc function handle input checks on function and limits.
     q = quadcc (f, a, b);
   else
     ## Parse options to determine how to call integrator.
     abstol = [];
     reltol = [];
     waypoints = [];
@@ -140,17 +139,17 @@ function q = integral (f, a, b, varargin
           error ("integral: unknown property '%s'", prop);
       endswitch
     endwhile
 
     issingle = (isa (a, "single") || isa (b, "single")
                 || isa (waypoints, "single"));
 
     if (arrayvalued)
-      ## Pass vector valued function to quadv, checking for conflicting params
+      ## Pass vector-valued function to quadv, checking for conflicting params
 
       ## FIXME: Replace warning when have array compatible call with waypoints
       if (! isempty (waypoints))
         warning(["integral: array-valued quadrature routine currently ", ...
                  "unable to handle WayPoints.  WayPoints are ignored."]);
       endif
 
       ## FIXME: Remove warning once we have reltol compatible arrayval'd quadfn
@@ -176,21 +175,16 @@ function q = integral (f, a, b, varargin
         q = quadgk (f, a, b, "AbsTol", abstol, "RelTol", reltol,
                              "WayPoints", waypoints);
       else
         q = quadcc (f, a, b, [abstol, reltol]);
       endif
     endif
   endif
 
-  ## Preserve type single for output which quadcc may have discarded
-  if (issingle)
-    q = single (q);
-  endif
-
 endfunction
 
 
 ## Matlab compatibility tests
 %!test
 %! f = @(x) exp (-x.^2) .* log (x).^2;
 %! emgamma = 0.57721566490153286;
 %! exact = (sqrt (pi)*(8*log (2)^2+8*emgamma*log (2)+pi^2+2*emgamma^2))/16;
