# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1419973376 -3600
#      Tue Dec 30 22:02:56 2014 +0100
# Branch gui-release
# Node ID 8c47eb286151509035b2dc2c79206d680a6c0a35
# Parent  521d4959fc42e5b94a9c672ac8099c8d90e7b12b
open doc browser for keywords correctly (bug #41110)

* parser.cc (is_ref): nodes can also be handled as valid refs;
  (find_ref): nodes can also be handled as valid refs if the node name
  is related to a keyword statement

* documentation-dock-widget.cc (showDoc): widget is shown but does not get
  the focus

diff --git a/libgui/src/documentation-dock-widget.cc b/libgui/src/documentation-dock-widget.cc
--- a/libgui/src/documentation-dock-widget.cc
+++ b/libgui/src/documentation-dock-widget.cc
@@ -55,17 +55,16 @@ void
 documentation_dock_widget::selectAll ()
 {
   _webinfo->selectAll ();
 }
 
 void
 documentation_dock_widget::showDoc (const QString &name)
 {
-  // show the doc pane
+  // show the doc pane without focus for carrying on typing in the console
   if (!isVisible ())
     setVisible (true);
-  setFocus ();
   raise ();
 
   _webinfo->load_ref (name);
 
 }
diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -110,16 +110,20 @@ int
 parser::is_ref (const QString& node)
 {
   if (_ref_map.contains (node))
     {
       node_position ref = _ref_map [node];
 
       return ref.pos-_node_map [ref._node_name].pos;
     }
+  if (_node_map.contains (node))
+    {
+      return 0;  // node: show from the beginning
+    }
   return -1;
 }
 
 QString
 parser::search_node (const QString& node_arg)
 {
   QString node = node_arg;
 
@@ -648,13 +652,30 @@ parser::find_ref (const QString &ref_nam
     {
       QString k = it.key ();
       node_position p = it.value ();
 
       if (k == "XREF" + ref_name)
         {
           // found ref, so return its name
           text = "XREF" + ref_name;
+          break;
         }
     }
+
+  if (text.isEmpty ())  // try the statement-nodes
+    {
+      QHash<QString, node_map_item>::iterator itn;
+      for (itn=_node_map.begin (); itn!=_node_map.end (); ++itn)
+        {
+          QString k = itn.key ();
+          if (k == "The " + ref_name + " Statement")
+            {
+              // found ref, so return its name
+              text = k;
+              break;
+            }
+        }
+    }
+
   return text;
 }
 
