# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1312864236 25200
#      Mon Aug 08 21:30:36 2011 -0700
# Branch stable
# Node ID 70e9ffbc4c763574b60c8d145e8250e1966b5b84
# Parent  5d79384e3a1d7daa38c5020a64060e50e4eecaca
svds.m: Revert cset 12934:5d79384e3a1d.  Use 42 for random number initialization.

* svds.m: Use 42 for rand and randn initialization for tests.

diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -244,18 +244,18 @@ endfunction
 %! k = 7;
 %! A = sparse([3:n,1:n,1:(n-2)],[1:(n-2),1:n,3:n],[ones(1,n-2),0.4*n*ones(1,n),ones(1,n-2)]);
 %! [u,s,v] = svd(full(A));
 %! s = diag(s);
 %! [~, idx] = sort(abs(s));
 %! s = s(idx);
 %! u = u(:,idx);
 %! v = v(:,idx);
-%! randn ('state', 43);      % Initialize to make normest function reproducible
-%! rand ('state', 43)
+%! randn ('state', 42);      % Initialize to make normest function reproducible
+%! rand ('state', 42)
 %! opts.v0 = rand (2*n,1); % Initialize eigs ARPACK starting vector
 %!                         % to guarantee reproducible results
 %!test
 %! [u2,s2,v2,flag] = svds(A,k);
 %! s2 = diag(s2);
 %! assert(flag,!1);
 %! assert(s2, s(end:-1:end-k+1), 1e-10);
 %!testif HAVE_UMFPACK
