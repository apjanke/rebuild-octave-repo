# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1235410150 18000
#      Mon Feb 23 12:29:10 2009 -0500
# Node ID be7b30a24938c1b92e6036533996f9e98b58b4b7
# Parent  c743891156104dc3be5df713c35edc3ab48855d8
line/column info for switch and if statements

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2009-02-23  John W. Eaton  <jwe@octave.org>
 
+	* parse.y (finish_if_command): Also store line and column info for
+	if statement in first element of list.
+	(finish_switch_command): Likewise, for switch.
+
 	* input.cc (last_debugging_command): New static variable.
 	(octave_gets): Set it here.  Don't insert repeated debugging
 	commands in the history list.
 
 2009-02-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/pinv.cc: Support diagonal and permutation matrices.
 
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -2291,16 +2291,27 @@ finish_if_command (token *if_tok, tree_i
 
   if (end_token_ok (end_tok, token::if_end))
     {
       octave_comment_list *tc = octave_comment_buffer::get_comment ();
 
       int l = if_tok->line ();
       int c = if_tok->column ();
 
+      if (list && ! list->empty ())
+	{
+	  tree_if_clause *elt = list->front ();
+
+	  if (elt)
+	    {
+	      elt->line (l);
+	      elt->column (c);
+	    }
+	}
+
       retval = new tree_if_command (list, lc, tc, l, c);
     }
 
   return retval;
 }
 
 // Build an elseif clause.
 
@@ -2327,16 +2338,27 @@ finish_switch_command (token *switch_tok
 
   if (end_token_ok (end_tok, token::switch_end))
     {
       octave_comment_list *tc = octave_comment_buffer::get_comment ();
 
       int l = switch_tok->line ();
       int c = switch_tok->column ();
 
+      if (list && ! list->empty ())
+	{
+	  tree_switch_case *elt = list->front ();
+
+	  if (elt)
+	    {
+	      elt->line (l);
+	      elt->column (c);
+	    }
+	}
+
       retval = new tree_switch_command (expr, list, lc, tc, l, c);
     }
 
   return retval;
 }
 
 // Build a switch case.
 
