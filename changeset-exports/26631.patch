# HG changeset patch
# User Rik <rik@octave.org>
# Date 1548442276 28800
#      Fri Jan 25 10:51:16 2019 -0800
# Node ID 5e247fb245f22146161845a18490928e785af46d
# Parent  2f77d977606aea8e84e8ff49287a0378af8c8ec3
# Parent  1212568010a849f95cf63dc86c8b1ff6ae9d008c
maint: merge stable to default.

diff --git a/libinterp/corefcn/svd.cc b/libinterp/corefcn/svd.cc
--- a/libinterp/corefcn/svd.cc
+++ b/libinterp/corefcn/svd.cc
@@ -29,17 +29,17 @@ along with Octave; see the file COPYING.
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "ovl.h"
 #include "pr-output.h"
 #include "utils.h"
 #include "variables.h"
 
-static std::string Vsvd_driver = "gesdd";
+static std::string Vsvd_driver = "gesvd";
 
 template <typename T>
 static typename octave::math::svd<T>::Type
 svd_type (int nargin, int nargout, const octave_value_list & args, const T & A)
 {
   if (nargout == 0 || nargout == 1)
     return octave::math::svd<T>::Type::sigma_only;
   else if (nargin == 1)
@@ -379,47 +379,38 @@ and may be less accurate for some matric
 DEFUN (svd_driver, args, nargout,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{val} =} svd_driver ()
 @deftypefnx {} {@var{old_val} =} svd_driver (@var{new_val})
 @deftypefnx {} {} svd_driver (@var{new_val}, "local")
 Query or set the underlying @sc{lapack} driver used by @code{svd}.
 
 Currently recognized values are @qcode{"gesdd"} and @qcode{"gesvd"}.
-The default is @qcode{"gesdd"}.
+The default is @qcode{"gesvd"}.
 
 When called from inside a function with the @qcode{"local"} option, the
 variable is changed locally for the function and any subroutines it calls.
 The original variable value is restored when exiting the function.
 
 Algorithm Notes: The @sc{lapack} library provides two routines for calculating
 the full singular value decomposition (left and right singular matrices as
 well as singular values).  When calculating just the singular values the
 following discussion is not relevant.
 
-The default routine used by Octave is the newer @code{gesdd} which is based on
-a Divide-and-Conquer algorithm that is 5X faster than the alternative
-@code{gesvd}, which is based on QR factorization.  However, the new algorithm
-can use significantly more memory.  For an @nospell{MxN} input matrix the
-memory usage is of order O(min(M,N) ^ 2), whereas the alternative is of order
-O(max(M,N)).  In general, modern computers have abundant memory so Octave has
-chosen to prioritize speed.
+The newer @code{gesdd} routine is based on a Divide-and-Conquer algorithm that
+is 5X faster than the alternative @code{gesvd}, which is based on QR
+factorization.  However, the new algorithm can use significantly more memory.
+For an @nospell{MxN} input matrix the memory usage is of order O(min(M,N) ^ 2),
+whereas the alternative is of order O(max(M,N)).
 
-In addition, there have been instances in the past where some input matrices
-were not accurately decomposed by @code{gesdd}.  This appears to have been
-resolved with modern versions of @sc{lapack}.  However, if certainty is
-required the accuracy of the decomposition can always be tested after the fact
-with
-
-@example
-@group
-[@var{u}, @var{s}, @var{v}] = svd (@var{x});
-norm (@var{x} - @var{u}*@var{s}*@var{v'}, "fro")
-@end group
-@end example
+Beyond speed and memory issues, there have been instances where some input
+matrices were not accurately decomposed by @code{gesdd}.  See currently active
+bug @url{https://savannah.gnu.org/bugs/?55564}.  Until these accuracy issues
+are resolved in a new version of the @sc{lapack} library, the default driver
+in Octave has been set to @qcode{"gesvd"}.
 
 @seealso{svd}
 @end deftypefn */)
 {
   static const char *driver_names[] = { "gesvd", "gesdd", nullptr };
 
   return SET_INTERNAL_VARIABLE_CHOICES (svd_driver, driver_names);
 }
