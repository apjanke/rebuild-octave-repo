# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1274746808 25200
#      Mon May 24 17:20:08 2010 -0700
# Node ID f0dc41c824cedf6f7dbf344d14a30e001d7f1636
# Parent  64472dd485172424afe66aad70b21a9d5bc45e2a
Replace calls to deprecated functions.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-05-24  Rik <octave@nomad.inbox5.com>
+        * general/private/__isequal__.m, image/image.m, 
+        statistics/base/ranks.m: Replace calls to deprecated functions.
+
 2010-05-23  Rik <octave@nomad.inbox5.com>
 
         * image/imshow.m: Scale image point color according to colormap. 
         Bug #29926.
 
 2010-05-16  Rik <octave@nomad.inbox5.com>
 
         * plot/semilogx.m, plot/semilogy.m: Plot minor ticks for semilog plots.
diff --git a/scripts/general/private/__isequal__.m b/scripts/general/private/__isequal__.m
--- a/scripts/general/private/__isequal__.m
+++ b/scripts/general/private/__isequal__.m
@@ -138,30 +138,22 @@ function t = __isequal__ (nans_compare_e
     elseif (isa (x, "function_handle"))
 
       ## The == operator is overloaded for handles.
       t = all (cellfun (@eq, {x}, varargin));
 
     else
       ## Check the numeric types.
 
-      if (issparse (x))
-        f_x = spfind (x);
-      else
-        f_x = find (x);
-      endif
+      f_x = find (x);
       l_f_x = length (f_x);
       x = x(f_x);
       for argn = 1:l_v
         y = varargin{argn};
-        if (issparse (y))
-          f_y = spfind (y);
-        else
-          f_y = find (y);
-        endif
+        f_y = find (y);
 
         t = (l_f_x == length (f_y)) && all (f_x == f_y);
         if (!t)
           return;
         endif
 
         y = y(f_y);
         m = (x == y);
diff --git a/scripts/image/image.m b/scripts/image/image.m
--- a/scripts/image/image.m
+++ b/scripts/image/image.m
@@ -47,17 +47,17 @@ function retval = image (varargin)
   for i = 1 : nargin
     if (! isnumeric (varargin{i}))
       firstnonnumeric = i;
       break;
     endif
   endfor
 
   if (nargin == 0 || firstnonnumeric == 1)
-    img = loadimage ("default.img");
+    img = imread ("default.img");
     x = y = [];
   elseif (nargin == 1 || firstnonnumeric == 2)
     img = varargin{1};
     x = y = [];
   elseif (nargin == 2 || firstnonnumeric == 3)
     print_usage ();
   else
     x = varargin{1};
diff --git a/scripts/statistics/base/ranks.m b/scripts/statistics/base/ranks.m
--- a/scripts/statistics/base/ranks.m
+++ b/scripts/statistics/base/ranks.m
@@ -68,17 +68,17 @@ function y = ranks (x, dim)
     endif
     sz = size (x);
     infvec = -Inf ([1, sz(2 : end)]);
     [xs, xi] = sort (x);
     eq_el = find (diff ([xs; infvec]) == 0);
     if (isempty (eq_el))
       [eq_el, y] = sort (xi);
     else
-      runs = complement (eq_el+1, eq_el);
+      runs = setdiff (eq_el, eq_el+1);
       len = diff (find (diff ([Inf; eq_el; -Inf]) != 1)) + 1;
       [eq_el, y] = sort (xi);
       for i = 1 : length(runs)
         y (xi (runs (i) + [0:(len(i)-1)]) + floor (runs (i) ./ sz(1)) 
            * sz(1)) = eq_el(runs(i)) + (len(i) - 1) / 2;
       endfor
     endif  
     if (dim != 1)
