# HG changeset patch
# User jwe
# Date 954482565 0
#      Fri Mar 31 06:02:45 2000 +0000
# Node ID 3a067b216fd6d11a5172cfa5a7a6a393128cf5d7
# Parent  3074e565689ca98a7216de96f1e2d68cf83b00d1
[project @ 2000-03-31 06:02:44 by jwe]

diff --git a/liboctave/MArray-defs.h b/liboctave/MArray-defs.h
--- a/liboctave/MArray-defs.h
+++ b/liboctave/MArray-defs.h
@@ -1,11 +1,9 @@
-// Nothing like a little CPP abuse to brighten everyone's day.  Would
-// have been nice to do this with template functions but as of 2.5.x,
-// g++ seems to fail to resolve them properly.
+// Nothing like a little CPP abuse to brighten everyone's day.
 
 #define DO_VS_OP(r, l, v, OP, s) \
   if (l > 0) \
     { \
       for (int i = 0; i < l; i++) \
 	r[i] = v[i] OP s; \
     }
 
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -60,18 +60,18 @@ BINDISTFILES = $(addprefix $(srcdir)/, $
 # Subdirectories in which to run `make bin-dist'.
 BINDISTSUBDIRS = libcruft liboctave src scripts doc emacs examples
 
 # Subdirectories in which to run clean targets.
 CLEANSUBDIRS = $(DISTSUBDIRS) @READLINE_DIR@ @GLOB_DIR@ kpathsea
 
 DIRS_TO_MAKE = $(bindir) $(libdir) $(octincludedir) $(fcnfiledir) \
   $(octfiledir) $(archlibdir) $(localarchlibdir) \
-  `echo $(localfcnfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $i}'` \
-  `echo $(localoctfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $i}'`
+  `echo $(localfcnfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $$i}'` \
+  `echo $(localoctfilepath) | awk -F: '{for (i=1; i<=NF; i++) print $$i}'`
 
 all: octave-bug mkoctfile src
 .PHONY: all
 
 src: $(SUBDIRS)
 	$(MAKE) -C $@ all
 .PHONY: src
 
diff --git a/scripts/polynomial/polyvalm.m b/scripts/polynomial/polyvalm.m
--- a/scripts/polynomial/polyvalm.m
+++ b/scripts/polynomial/polyvalm.m
@@ -23,17 +23,17 @@
 ##
 ## @code{polyvalm (@var{c}, @var{x})} will evaluate the polynomial in the
 ## matrix sense, i.e. matrix multiplication is used instead of element by
 ## element multiplication as is used in polyval.
 ##
 ## The argument @var{x} must be a square matrix.
 ## @end deftypefn
 ## @seealso{polyval, poly, roots, conv, deconv, residue, filter,
-## polyderiv, and polyinteg)
+## polyderiv, and polyinteg}
 
 ## Author: Tony Richardson <arichard@stark.cc.oh.us>
 ## Created: June 1994
 ## Adapted-By: jwe
 
 function y = polyvalm (c, x)
 
   if (nargin != 2)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2000-03-30  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* oct-procbuf.cc (octave_procbuf::open): Make output streams line
+	buffered.
+
 2000-03-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* sighandlers.cc (my_friendly_exit): Prefix failure messages with
 	panic instead of error.
 
 	* c-file-ptr-stream.cc (c_file_ptr_buf::~c_file_ptr_buf):
 	Avoid dereferencing NULL pointer.
 
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -123,16 +123,19 @@ octave_procbuf::open (const char *comman
   if (proc_pid < 0)
     {
       ::close (parent_end);
       return 0;
     }
 
   f = ::fdopen (parent_end, (mode & std::ios::in) ? "r" : "w");
 
+  if (mode & std::ios::out)
+    ::setvbuf (f, 0, _IOLBF, 0);
+
   open_p = true;
 
   next = octave_procbuf_list;
   octave_procbuf_list = this;
 
   return this;
 
 #else
