# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1279188914 -7200
#      Thu Jul 15 12:15:14 2010 +0200
# Node ID 01f1643dfbb13a937f56735b6e8f28a4e6f4afd7
# Parent  6f640ed5bb931d345d93a811c981bca9c649cec6
fix flipdim with trailing singleton dims

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2010-07-15  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/flipdim.m: Suuport flipping about trailing singleton
+	dimension.
+
 2010-07-14  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__gnuplot_print__.m: Fix broken options "-orientation",
 	"-special_flag", "-debug_file", "-tight_flag", and "-printer".
 
 2010-07-14  Rik <octave@nomad.inbox5.com>
 
        * linear-algebra/normest.m: Improve documentation.  Add better input
diff --git a/scripts/general/accumdim.m b/scripts/general/accumdim.m
--- a/scripts/general/accumdim.m
+++ b/scripts/general/accumdim.m
@@ -73,17 +73,17 @@ function A = accumdim (subs, val, dim, n
     elseif (n < m)
       error ("accumdim: N index out of range")
     endif
   endif
 
   sz = size (val);
 
   if (nargin < 3)
-    [~, dim] = max (sz > 1); # first non-singleton dim
+    [~, dim] = max (sz != 1); # first non-singleton dim
   elseif (! isindex (dim))
     error ("accumdim: DIM must be a valid dimension");
   elseif (dim > length (sz))
     sz(end+1:dim) = 1;
   endif
   sz(dim) = n;
  
   if (isempty (func) || func == @sum)
diff --git a/scripts/general/flipdim.m b/scripts/general/flipdim.m
--- a/scripts/general/flipdim.m
+++ b/scripts/general/flipdim.m
@@ -40,23 +40,18 @@ function y = flipdim (x, dim)
 
   if (nargin != 1 && nargin != 2)
     print_usage ();
   endif
 
   nd = ndims (x);
   if (nargin == 1)
     ## Find the first non-singleton dimension.
-    dim = find (size (x) > 1, 1);
-    if (isempty (dim))
-      dim = 1;
-    endif
-  else
-    if (! (isscalar (dim) && isindex (dim, nd)))
-      error ("flipdim: DIM must be an integer and a valid dimension");
-    endif
+    [~, dim] = min (size (x) != 1);
+  elseif (! (isscalar (dim) && isindex (dim)))
+    error ("flipdim: DIM must be a positive integer");
   endif
 
-  idx(1:nd) = {':'};
+  idx(1:max(nd, dim)) = {':'};
   idx{dim} = size (x, dim):-1:1;
   y = x(idx{:});
 
 endfunction
