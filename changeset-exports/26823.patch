# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1551544473 0
#      Sat Mar 02 16:34:33 2019 +0000
# Node ID 414685784cd399d0b1f0b19949b28ae8c62ac6eb
# Parent  79efd0653155193d9d6e1848231192b142415f5c
enable copy constructors for stack_frame objects

* stack-frame.h (script_stack_frame, base_value_stack_frame,
user_fcn_stack_frame, scope_stack_frame): Use default copy constructor
instead of marking it as deleted.

diff --git a/libinterp/corefcn/stack-frame.h b/libinterp/corefcn/stack-frame.h
--- a/libinterp/corefcn/stack-frame.h
+++ b/libinterp/corefcn/stack-frame.h
@@ -679,17 +679,17 @@ namespace octave
   public:
 
     script_stack_frame (void) = delete;
 
     script_stack_frame (call_stack& cs, octave_user_script *script,
                         unwind_protect *up_frame, size_t prev,
                         stack_frame *static_link);
 
-    script_stack_frame (const script_stack_frame& elt) = delete;
+    script_stack_frame (const script_stack_frame& elt) = default;
 
     script_stack_frame& operator = (const script_stack_frame& elt) = delete;
 
     ~script_stack_frame (void) = default;
 
     bool is_user_script_frame (void) const { return true; }
 
     static stack_frame * get_access_link (stack_frame *static_link);
@@ -786,17 +786,17 @@ namespace octave
                             size_t prev, stack_frame *static_link,
                             stack_frame *access_link)
       : stack_frame (cs, prev, static_link, access_link),
         m_values (num_symbols, octave_value ()),
         m_flags (num_symbols, LOCAL),
         m_auto_vars (NUM_AUTO_VARS, octave_value ())
     { }
 
-    base_value_stack_frame (const base_value_stack_frame& elt) = delete;
+    base_value_stack_frame (const base_value_stack_frame& elt) = default;
 
     base_value_stack_frame&
     operator = (const base_value_stack_frame& elt) = delete;
 
     ~base_value_stack_frame (void) = default;
 
     size_t size (void) const
     {
@@ -883,17 +883,17 @@ namespace octave
     user_fcn_stack_frame (call_stack& cs, octave_user_function *fcn,
                           unwind_protect *up_frame, size_t prev,
                           stack_frame *static_link)
       : base_value_stack_frame (cs, get_num_symbols (fcn), prev, static_link,
                                 get_access_link (fcn, static_link)),
         m_fcn (fcn), m_unwind_protect_frame (up_frame)
     { }
 
-    user_fcn_stack_frame (const user_fcn_stack_frame& elt) = delete;
+    user_fcn_stack_frame (const user_fcn_stack_frame& elt) = default;
 
     user_fcn_stack_frame&
     operator = (const user_fcn_stack_frame& elt) = delete;
 
     ~user_fcn_stack_frame (void) = default;
 
     bool is_user_fcn_frame (void) const { return true; }
 
@@ -958,17 +958,17 @@ namespace octave
 
     scope_stack_frame (call_stack& cs, size_t prev, const symbol_scope& scope,
                        stack_frame *static_link)
       : base_value_stack_frame (cs, scope.num_symbols (), prev,
                                 static_link, nullptr),
         m_scope (scope)
     { }
 
-    scope_stack_frame (const scope_stack_frame& elt) = delete;
+    scope_stack_frame (const scope_stack_frame& elt) = default;
 
     scope_stack_frame& operator = (const scope_stack_frame& elt) = delete;
 
     ~scope_stack_frame (void) = default;
 
     bool is_scope_frame (void) const { return true; }
 
     symbol_scope get_scope (void) const { return m_scope; }
