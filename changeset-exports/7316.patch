# HG changeset patch
# User jwe
# Date 1197653545 0
#      Fri Dec 14 17:32:25 2007 +0000
# Node ID fac781a4078de17755248ab40e184ad287b0262e
# Parent  3ceb12c499e9778a3527506565d6d68d9e005549
[project @ 2007-12-14 17:32:25 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-12-14  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m (__calc_dimensions__): New function.
+	Use it to determine dimensions.  Consolidate all 3-d settings.
+
 2007-12-13  John W. Eaton  <jwe@octave.org>
 
 	* image/imshow.m: Turn axis visibility off.
 	Don't scale true color images.
 	* image/image.m: Set axis layer property to "top".
 
 2007-12-12  John W. Eaton  <jwe@octave.org>
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -277,17 +277,25 @@ function __go_draw_axes__ (h, plot_strea
 
     xautoscale = strcmpi (axis_obj.xlimmode, "auto");
     yautoscale = strcmpi (axis_obj.ylimmode, "auto");
     zautoscale = strcmpi (axis_obj.zlimmode, "auto");
     cautoscale = strcmpi (axis_obj.climmode, "auto");
 
     kids = axis_obj.children;
 
-    nd = 0;
+    nd = __calc_dimensions__ (axis_obj);
+
+    if (nd == 3)
+      fputs (plot_stream, "set parametric;\n");
+      fputs (plot_stream, "set style data lines;\n");
+      fputs (plot_stream, "set surface;\n");
+      fputs (plot_stream, "unset contour;\n");
+    endif
+
     data_idx = 0;
     data = cell ();
     is_image_data = [];
     hidden_removal = NaN;
     view_map = false;
 
     xlim = axis_obj.xlim;
     ylim = axis_obj.ylim;
@@ -306,24 +314,16 @@ function __go_draw_axes__ (h, plot_strea
     ximg_data_idx = 0;
 
     for i = 1:length (kids)
 
       obj = get (kids(i));
 
       switch (obj.type)
 	case "image"
-	  ## FIXME - Is there a better way to determine if the plot
-	  ## command should be "plot" or "splot"?????  Could have images
-	  ## projected into 3D so there is really no reason to limit
-	  ## this.
-	  if (nd == 0)
-	    nd = 2;
-	  endif
-
 	  img_data = obj.cdata;
 	  img_xdata = obj.xdata;
 	  img_ydata = obj.ydata;
 
 	  if (use_gnuplot_for_images)
 
 	    fputs (plot_stream, "set border front;\n");
 	    data_idx++;
@@ -386,30 +386,28 @@ function __go_draw_axes__ (h, plot_strea
 	  usingclause{data_idx} = "";
 	  if (have_newer_gnuplot || isnan (typ))
 	    withclause{data_idx} = sprintf ("with %s linestyle %d",
 					    style, data_idx);
 	  else
 	    withclause{data_idx} = sprintf ("with %s linetype %d",
 					    style, typ);
 	  endif
-	  if (! isempty (obj.zdata))
-	    nd = 3;
+	  if (nd == 3)
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
-	    zdat = obj.zdata(:);
-
+	    if (! isempty (obj.zdata))
+	      zdat = obj.zdata(:);
+	    else
+	      zdat = zeros (size (xdat));
+	    endif
 	    data{data_idx} = [xdat, ydat, zdat]';
 	    usingclause{data_idx} = "using ($1):($2):($3)";
-	    fputs (plot_stream, "set parametric;\n");
-	    fputs (plot_stream, "set style data lines;\n");
-	    fputs (plot_stream, "set surface;\n");
-	    fputs (plot_stream, "unset contour;\n");
+	    ## fputs (plot_stream, "set parametric;\n");
 	  else
-	    nd = 2;
 	    xdat = obj.xdata(:);
 	    ydat = obj.ydata(:);
 	    ldat = obj.ldata;
 	    yerr = xerr = false;
 	    if (! isempty (ldat))
 	      yerr = true;
 	      ldat = ldat(:);
 	    endif
@@ -493,34 +491,34 @@ function __go_draw_axes__ (h, plot_strea
 	   cdat = obj.cdata;
 	 else
 	   cdat = [];
 	 endif
 
 	 for i = 1:nc
 	   xcol = obj.xdata(:,i);
 	   ycol = obj.ydata(:,i);
-	   if (! isempty (obj.zdata))
-	     zcol = obj.zdata(:,i);
-	   else
-	     zcol = [];
+	   if (nd == 3)
+	     if (! isempty (obj.zdata))
+	       zcol = obj.zdata(:,i);
+	     else
+	       zcol = zeros (size (xcol));
+	     endif
 	   endif
 
 	   if (! isnan (xcol) && ! isnan (ycol))
 	     ## Is the patch closed or not
 	     if (strncmp (obj.facecolor, "none", 4)) 
 	       if (isnan (hidden_removal))
 		 hidden_removal = false;
 	       endif
 	     else
 	       hidden_removal = true;
-	       if (! isempty (zcol))
+	       if (nd == 3)
 		 error ("gnuplot (as of v4.2) only supports 2D filled patches");
-	       else
-		 nd = 2;
 	       endif
 
 	       data_idx++;
 	       is_image_data(data_idx) = false;
 	       parametric(data_idx) = false;
 	       have_cdata(data_idx) = false;
 	       if (i > 1 || isempty (obj.keylabel))
 		 titlespec{data_idx} = "title \"\"";
@@ -605,21 +603,16 @@ function __go_draw_axes__ (h, plot_strea
 	       endif
 	       data{data_idx} = [xcol, ycol]';
 	       usingclause{data_idx} = "using ($1):($2)";
 	     endif
 	   endif
 
            ## patch outline
 	   if (! strncmp (obj.edgecolor, "none", 4))
-	     if (! isempty (zcol))
-	       nd = 3;
-	     else
-	       nd = 2;
-	     endif
 
 	     data_idx++;
              is_image_data(data_idx) = false;
              parametric(data_idx) = false;
 	     have_cdata(data_idx) = false;
              titlespec{data_idx} = "title \"\"";
 	     usingclause{data_idx} = "";
 
@@ -784,17 +777,17 @@ function __go_draw_axes__ (h, plot_strea
 		 typ = 7;
 	       else
 		 typ = -1;
 	       endif
 	       withclause{data_idx} = sprintf ("with %s %s %s lt %d", 
 					       style, pt, ps, typ);
 	     endif
 
-	     if (! isempty (zcol))
+	     if (nd == 3)
 	       if (! isnan (xcol) && ! isnan (ycol) && ! isnan (zcol))
 		 data{data_idx} = [[xcol; xcol(1)], [ycol; ycol(1)], ...
 				   [zcol; zcol(1)]]';
 	       else
 		 data{data_idx} = [xcol, ycol, zcol]';
 	       endif
 	       usingclause{data_idx} = "using ($1):($2):($3)";
 	     else
@@ -804,17 +797,16 @@ function __go_draw_axes__ (h, plot_strea
 		 data{data_idx} = [xcol, ycol]';
 	       endif
 	       usingclause{data_idx} = "using ($1):($2)";
 	     endif
 	   endif
 	 endfor
 
 	case "surface"
-	  nd = 3;
 	  view_map = true;
           if (! (strncmp (obj.edgecolor, "none", 4)
 		 && strncmp (obj.facecolor, "none", 4)))
 	    data_idx++;
 	    is_image_data(data_idx) = false;
 	    parametric(data_idx) = false;
 	    have_cdata(data_idx) = true;
 	    [style, typ, with] = do_linestyle_command (obj, data_idx,
@@ -872,21 +864,17 @@ function __go_draw_axes__ (h, plot_strea
 	        zz(:,kk+1) = ydat(:,k);
 	        zz(:,kk+2) = zdat(:,k);
 	        zz(:,kk+3) = cdat(:,k);
 	        k++;
 	      endfor
 	      data{data_idx} = zz.';
 	    endif
 	    usingclause{data_idx} = "using ($1):($2):($3):($4)";
-
-	    fputs (plot_stream, "unset parametric;\n");
-	    fputs (plot_stream, "set style data lines;\n");
-	    fputs (plot_stream, "set surface;\n");
-	    fputs (plot_stream, "unset contour;\n");
+	    ## fputs (plot_stream, "unset parametric;\n");
 
 	    ## Interpolation does not work for flat surfaces (e.g. pcolor)
             ## and color mapping --> currently set empty.
             interp_str = "";
             flat_interp_face = (strncmp (obj.facecolor, "flat", 4)
 				|| strncmp (obj.facecolor, "interp", 6));
             flat_interp_edge = (strncmp (obj.edgecolor, "flat", 4)
 				|| strncmp (obj.edgecolor, "interp", 6));
@@ -1388,16 +1376,34 @@ function [style, typ, with] = do_linesty
   if (have_newer_gnuplot && ! found_style)
     fputs (plot_stream, " default");
   endif
 
   fputs (plot_stream, ";\n");
 
 endfunction
 
+function nd = __calc_dimensions__ (obj)
+  kids = obj.children;
+  nd = 2;
+  for i = 1:length (kids)
+    obj = get (kids(i));
+    switch (obj.type)
+      case {"image", "text"}
+	## ignore as they 
+      case {"line", "patch"}
+	if (! isempty (obj.zdata))
+	  nd = 3;
+	endif
+      case "surface"
+	nd = 3;
+    endswitch
+  endfor
+endfunction
+
 function __gnuplot_write_data__ (plot_stream, data, nd, parametric, cdata)
   
   ## DATA is already transposed.
 
   ## FIXME -- this may need to be converted to C++ for speed.
 
   ## Convert NA elements to normal NaN values because fprintf writes
   ## "NA" and that confuses gnuplot.
