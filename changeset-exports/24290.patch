# HG changeset patch
# User Rik <rik@octave.org>
# Date 1511318640 28800
#      Tue Nov 21 18:44:00 2017 -0800
# Node ID 8612ab9fc56429c219a3403926d1cdc7e57ff4b6
# Parent  ff890a84b43c44a786e3f57145a369d8c7c37eb4
# Parent  f52d91f6ef80ff7d8f838127cc28393fcb40aced
maint: merge of stable to default.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2493,19 +2493,24 @@ AC_SUBST(SUNDIALS_XLIBS)
 save_LIBS="$LIBS"
 LIBS="$LAPACK_LIBS $BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIB([arpack], ARPACK,
   [ARPACK not found.  The eigs function will be disabled.],
   [],
   [dseupd],
   [Fortran 77], [don't use the ARPACK library, disable eigs function],
   [warn_arpack=
-   OCTAVE_CHECK_LIB_ARPACK_OK(
+   OCTAVE_CHECK_LIB_ARPACK_OK_1(
      [AC_DEFINE(HAVE_ARPACK, 1, [Define to 1 if ARPACK is available.])],
-     [warn_arpack="ARPACK library found, but does not seem to work properly; disabling eigs function"])])
+     [warn_arpack="ARPACK library found, but does not seem to work properly; disabling eigs function"])
+   if test -z "$warn_arpack"; then
+     OCTAVE_CHECK_LIB_ARPACK_OK_2([],
+       [warn_arpack="ARPACK library found, but is buggy; upgrade library (>= v3.3.0) for better results"])
+   fi
+   ])
 LIBS="$save_LIBS"
 
 ### Check for Java.
 
 build_java=yes
 AC_ARG_ENABLE([java],
   [AS_HELP_STRING([--disable-java],
     [disable Java interface])],
diff --git a/libgui/src/octave-dock-widget.cc b/libgui/src/octave-dock-widget.cc
--- a/libgui/src/octave-dock-widget.cc
+++ b/libgui/src/octave-dock-widget.cc
@@ -488,9 +488,23 @@ octave_dock_widget::set_style (bool acti
 // set focus to previously active widget in tabbed widget stack
 void
 octave_dock_widget::set_focus_predecessor (void)
 {
   if (m_predecessor_widget)    // only != 0 if widget was tabbed
     m_predecessor_widget->focus ();
 
   m_predecessor_widget = nullptr;
+  // FIXME: Until cset bda0c5b38bda, the wrong keys "Dockwidget/..." were used
+  // here.  This had no effect in Qt4, but does in Qt5.  In the following, the
+  // four incorrect keys are updated if still present in the settings files.
+  // The keys are also used in the settings dialog, but
+  // octave_dock_widget::handle_settings is already called at program start.
+  // These tests can be removed in a future version of Octave (version 4.8).
+  resource_manager::update_settings_key ("Dockwidgets/title_bg_color",
+                                         "DockWidgets/title_bg_color");
+  resource_manager::update_settings_key ("Dockwidgets/title_bg_color_active",
+                                         "DockWidgets/title_bg_color_active");
+  resource_manager::update_settings_key ("Dockwidgets/title_fg_color",
+                                         "DockWidgets/title_fg_color");
+  resource_manager::update_settings_key ("Dockwidgets/title_fg_color_active",
+                                         "DockWidgets/title_fg_color_active");
 }
diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -289,16 +289,31 @@ resource_manager::do_set_settings (const
         "Octave GUI must be closed now."));
       QMessageBox::critical (nullptr, QString (QT_TR_NOOP ("Octave Critical Error")),
           msg.arg (do_get_settings_file ()).arg (do_get_settings_directory ()));
       exit (1);
     }
 }
 
 bool
+resource_manager::do_update_settings_key (const QString& old_key,
+                                          const QString& new_key)
+{
+  if (m_settings->contains (old_key))
+    {
+      QVariant preference = m_settings->value (old_key);
+      m_settings->setValue (new_key, preference);
+      m_settings->remove (old_key);
+      return true;
+    }
+
+  return false;
+}
+
+bool
 resource_manager::do_is_first_run (void) const
 {
   return ! QFile::exists (m_settings_file);
 }
 
 void
 resource_manager::do_update_network_settings (void)
 {
diff --git a/libgui/src/resource-manager.h b/libgui/src/resource-manager.h
--- a/libgui/src/resource-manager.h
+++ b/libgui/src/resource-manager.h
@@ -78,16 +78,23 @@ public:
   }
 
   static void set_settings (const QString& file)
   {
     if (instance_ok ())
       instance->do_set_settings (file);
   }
 
+  static bool update_settings_key (const QString& new_key,
+                                   const QString& old_key)
+  {
+    return instance_ok () ? instance->do_update_settings_key (new_key, old_key)
+                          : false;
+  }
+
   static void combo_encoding (QComboBox *combo, QString current = QString ())
   {
     if (instance_ok ())
       instance->do_combo_encoding (combo, current);
   }
 
   static QString get_gui_translation_dir (void);
 
@@ -133,16 +140,18 @@ private:
   QString do_get_settings_directory (void);
 
   QString do_get_settings_file (void);
 
   void do_reload_settings (void);
 
   void do_set_settings (const QString& file);
 
+  bool do_update_settings_key (const QString& new_key, const QString& old_key);
+
   bool do_is_first_run (void) const;
 
   void do_update_network_settings (void);
 
   QIcon do_icon (const QString& icon, bool fallback);
 
   void do_combo_encoding (QComboBox *combo, QString current);
 
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -317,44 +317,48 @@ settings_dialog::settings_dialog (QWidge
     settings->value ("DockWidgets/widget_icon_set", "NONE").toString ();
   ui->general_icon_octave->setChecked (true);  // the default (if invalid set)
   ui->general_icon_octave->setChecked (widget_icon_set == "NONE");
   ui->general_icon_graphic->setChecked (widget_icon_set == "GRAPHIC");
   ui->general_icon_letter->setChecked (widget_icon_set == "LETTER");
 
   // custom title bar of dock widget
   QVariant default_var = QColor (255, 255, 255);
-  QColor bg_color = settings->value ("DockWidgets/title_bg_color", default_var).value<QColor> ();
+  QColor bg_color = settings->value ("DockWidgets/title_bg_color",
+                                     default_var).value<QColor> ();
   m_widget_title_bg_color = new color_picker (bg_color);
   m_widget_title_bg_color->setEnabled (false);
   ui->layout_widget_bgtitle->addWidget (m_widget_title_bg_color, 0);
 
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            m_widget_title_bg_color, SLOT (setEnabled (bool)));
 
   default_var = QColor (192, 192, 192);
-  QColor bg_color_active = settings->value ("DockWidgets/title_bg_color_active", default_var).value<QColor> ();
+  QColor bg_color_active = settings->value ("DockWidgets/title_bg_color_active",
+                                            default_var).value<QColor> ();
   m_widget_title_bg_color_active = new color_picker (bg_color_active);
   m_widget_title_bg_color_active->setEnabled (false);
   ui->layout_widget_bgtitle_active->addWidget (m_widget_title_bg_color_active, 0);
 
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            m_widget_title_bg_color_active, SLOT (setEnabled (bool)));
 
   default_var = QColor (0, 0, 0);
-  QColor fg_color = settings->value ("DockWidgets/title_fg_color", default_var).value<QColor> ();
+  QColor fg_color = settings->value ("DockWidgets/title_fg_color",
+                                     default_var).value<QColor> ();
   m_widget_title_fg_color = new color_picker (fg_color);
   m_widget_title_fg_color->setEnabled (false);
   ui->layout_widget_fgtitle->addWidget (m_widget_title_fg_color, 0);
 
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            m_widget_title_fg_color, SLOT (setEnabled (bool)));
 
   default_var = QColor (0, 0, 0);
-  QColor fg_color_active = settings->value ("DockWidgets/title_fg_color_active", default_var).value<QColor> ();
+  QColor fg_color_active = settings->value ("DockWidgets/title_fg_color_active",
+                                            default_var).value<QColor> ();
   m_widget_title_fg_color_active = new color_picker (fg_color_active);
   m_widget_title_fg_color_active->setEnabled (false);
   ui->layout_widget_fgtitle_active->addWidget (m_widget_title_fg_color_active, 0);
 
   connect (ui->cb_widget_custom_style, SIGNAL (toggled (bool)),
            m_widget_title_fg_color_active, SLOT (setEnabled (bool)));
 
   ui->sb_3d_title->setValue (settings->value ("DockWidgets/widget_title_3d", 50).toInt ());
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -574,26 +574,26 @@ AC_DEFUN([OCTAVE_CHECK_LIB], [
     OCTAVE_CONFIGURE_WARNING([warn_$1])
     m4_toupper([$1])_LIBS=
   fi
 ])
 dnl
 dnl Check whether ARPACK works (does not crash).
 dnl
 dnl Using a pure Fortran program doesn't seem to crash when linked
-dnl with the buggy ARPACK library but the C++ program does.  Maybe it
+dnl with the buggy ARPACK library, but the C++ program does.  Maybe it
 dnl is the memory allocation that exposes the bug and using statically
 dnl allocated arrays in Fortran does not?
 dnl
 dnl FIXME: it would be nice to avoid the duplication of F77 macros
 dnl and typedefs here and in the f77-fcn.h header file.
 dnl
-AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK], [
+AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK_1], [
   AC_CACHE_CHECK([whether the arpack library works],
-    [octave_cv_lib_arpack_ok],
+    [octave_cv_lib_arpack_ok_1],
     [AC_LANG_PUSH(C++)
     AC_RUN_IFELSE([AC_LANG_PROGRAM([[
 
 #include <cfloat>
 
 #include <stdint.h>
 
 typedef OCTAVE_IDX_TYPE octave_idx_type;
@@ -650,23 +650,23 @@ extern "C"
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 void
 doit (void)
 {
   // Based on function EigsRealNonSymmetricMatrix from liboctave/eigs-base.cc.
 
-  // Problem matrix.  See bug #31479
+  // Problem matrix.  See bug #31479.
   octave_idx_type n = 4;
   double *m = new double [n * n];
   m[0] = 1, m[4] = 0, m[8]  = 0, m[12] = -1;
-  m[1] = 0, m[5] = 1, m[9]  = 0, m[13] = 0;
-  m[2] = 0, m[6] = 0, m[10] = 1, m[14] = 0;
-  m[3] = 0, m[7] = 0, m[11] = 2, m[15] = 1;
+  m[1] = 0, m[5] = 1, m[9]  = 0, m[13] =  0;
+  m[2] = 0, m[6] = 0, m[10] = 1, m[14] =  0;
+  m[3] = 0, m[7] = 0, m[11] = 2, m[15] =  1;
 
   double *resid = new double [4];
 
   resid[0] = 0.960966;
   resid[1] = 0.741195;
   resid[2] = 0.150143;
   resid[3] = 0.868067;
 
@@ -715,34 +715,32 @@ doit (void)
 
           F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG2 ("N", 1),
                                    n, n, 1.0, m, n, x, 1, 0.0, y, 1
                                    F77_CHAR_ARG_LEN (1));
         }
       else
         {
           if (info < 0)
-            {
-              return;  // Error
-            }
+            return;  // Error
 
           break;
         }
     }
   while (1);
 
   octave_idx_type *sel = new octave_idx_type [p];
 
   // In Octave, the dimensions of dr and di are k+1, but k+2 avoids segfault
   double *dr = new double [k + 1];
   double *di = new double [k + 1];
   double *workev = new double [3 * p];
 
   for (octave_idx_type i = 0; i < k + 1; i++)
-    dr[i] = di[i] = 0.;
+    dr[i] = di[i] = 0.0;
 
   octave_idx_type rvec = 1;
 
   double sigmar = 0.0;
   double sigmai = 0.0;
 
   // In Octave, this is n*(k+1), but n*(k+2) avoids segfault
   double *z = new double [n * (k + 1)];
@@ -757,23 +755,159 @@ doit (void)
                              F77_CHAR_ARG_LEN (1)
                              F77_CHAR_ARG_LEN (2));
 }
 
 ]], [[
 
   for (int i = 0; i < 10; i++)
     doit ();
+
     ]])],
-    octave_cv_lib_arpack_ok=yes,
-    octave_cv_lib_arpack_ok=no,
-    octave_cv_lib_arpack_ok=yes)
+    octave_cv_lib_arpack_ok_1=yes,
+    octave_cv_lib_arpack_ok_1=no,
+    octave_cv_lib_arpack_ok_1=yes)
     AC_LANG_POP(C++)
   ])
-  if test $octave_cv_lib_arpack_ok = yes; then
+  if test $octave_cv_lib_arpack_ok_1 = yes; then
+    $1
+    :
+  else
+    $2
+    :
+  fi
+])
+dnl
+dnl Check whether ARPACK is buggy (it doesn't crash, but gets wrong answers).
+dnl
+dnl ARPACK versions < 3.3.0 have a bug which results in different eigenvalues
+dnl being calculated depending on whether eigenvectors are also requested.
+dnl See bug #52425.
+dnl
+AC_DEFUN([OCTAVE_CHECK_LIB_ARPACK_OK_2], [
+  AC_CACHE_CHECK([whether the arpack library is free of bugs],
+    [octave_cv_lib_arpack_ok_2],
+    [AC_LANG_PUSH(Fortran 77)
+    AC_RUN_IFELSE([[
+      program bug_52425 
+c
+      integer          maxn, maxnev, maxncv, ldv
+      parameter       (maxn=256, maxnev=10, maxncv=25, 
+     $                 ldv=maxn )
+c
+      Double precision
+     &                 v(ldv,maxncv), workl(maxncv*(maxncv+8)),
+     &                 workd(3*maxn), d(maxncv,2), resid(maxn),
+     &                 ax(maxn)
+      logical          select(maxncv)
+      integer          iparam(11), ipntr(11)
+c
+      character        bmat*1, which*2
+      integer          ido, n, nev, ncv, lworkl, info, ierr, j, 
+     &                 nx, nconv, maxitr, mode, ishfts
+      logical          rvec
+      Double precision      
+     &                 tol, sigma
+c
+      Double precision
+     &                 zero
+      parameter        (zero = 0.0D+0)
+c
+      Double precision           
+     &                 dnrm2
+      external         dnrm2, daxpy
+c
+      intrinsic        abs
+c
+      n = 20
+      nev =  4 
+      ncv =  20 
+      bmat = 'I'
+      which = 'BE'
+c
+      lworkl = ncv*(ncv+8)
+      tol = zero 
+      info = 1
+      do j = 1,n
+         resid (j) = 1.0d0
+      end do
+      ido = 0
+c
+      ishfts = 1
+      maxitr = 300
+      mode   = 1
+c
+      iparam(1) = ishfts 
+      iparam(3) = maxitr 
+      iparam(7) = mode 
+c
+ 10   continue
+c
+         call dsaupd ( ido, bmat, n, which, nev, tol, resid, 
+     &                 ncv, v, ldv, iparam, ipntr, workd, workl,
+     &                 lworkl, info )
+c
+         if (ido .eq. -1 .or. ido .eq. 1) then
+            call av (n, workd(ipntr(1)), workd(ipntr(2)))
+            go to 10
+         end if 
+c
+      if ( info .lt. 0 ) then
+          stop 1
+      else 
+         rvec = .false.
+c
+         call dseupd ( rvec, 'All', select, d, v, ldv, sigma, 
+     &        bmat, n, which, nev, tol, resid, ncv, v, ldv, 
+     &        iparam, ipntr, workd, workl, lworkl, ierr )
+c
+         if ( ierr .ne. 0) then
+             stop 1
+         else
+             nconv =  iparam(5)
+             do 20 j=1, nconv
+                call av(n, v(1,j), ax)
+                call daxpy(n, -d(j,1), v(1,j), 1, ax, 1)
+                d(j,2) = dnrm2(n, ax, 1)
+                d(j,2) = d(j,2) / abs(d(j,1))
+c
+ 20          continue
+c
+c            | Litmus test: return 1 or 0 based on returned eigenvalue
+c     
+             if (abs(d(1,1) - 2.0810) > 1.0d-4) then
+                stop 1
+             else
+                stop 0
+             end if
+         end if
+      end if
+c
+      end
+c
+      subroutine av (n, v, w)
+      integer           n, j
+      Double precision v(n), w(n)
+c
+      w(1) = 4*v(1) + v(3)
+      w(2) = 4*v(2) + v(4)
+      do 10 j = 3, n - 2
+         w(j) = v(j-2) + 4*v(j) + v(j+2)
+ 10   continue
+      w(n-1) = v(n-3) + 4 * v(n-1)
+      w(n) = v(n-2) + 4 * v(n)
+      return
+      end
+    ]],
+    octave_cv_lib_arpack_ok_2=yes,
+    octave_cv_lib_arpack_ok_2=no,
+    octave_cv_lib_arpack_ok_2=yes)
+    AC_LANG_POP(Fortran 77)
+  ])
+  if test $octave_cv_lib_arpack_ok_2 = yes; then
     $1
     :
   else
     $2
     :
   fi
 ])
 dnl
