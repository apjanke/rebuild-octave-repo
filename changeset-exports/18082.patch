# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1386222588 -3600
#      Thu Dec 05 06:49:48 2013 +0100
# Branch stable
# Node ID c3e7da9836bdec4c04ad405e1fc3002b7cac8bee
# Parent  42df174ec2ff7d696f822662085f3d94e5ee9208
allow saving an editor file as the current one (bug #40759)

* file-editor-tab.cc (handle_save_file_as_answer): just save the file if the
  selected file name is the same as the current file name
  (handle_save_file_as_answer_close): removed the case that the selected file
  name is the same as the current one because the latter is not valid here
  (message_duplicate_file_name): removed message since not needed anymore

* file-editor-tab.h: removed message_duplicate_file_name

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -1153,63 +1153,38 @@ file_editor_tab::save_file_as (bool remo
       connect (fileDialog, SIGNAL (fileSelected (const QString&)),
                this, SLOT (handle_save_file_as_answer (const QString&)));
     }
 
   show_dialog (fileDialog);
 }
 
 void
-file_editor_tab::message_duplicate_file_name (const QString& saveFileName)
-{
-  // Could overwrite the file here (and tell user the file was
-  // overwritten), but the user could have unintentionally
-  // selected the same name not intending to overwrite.
-
-  // Create a NonModal message about error.
-  QMessageBox* msgBox
-    = new QMessageBox (QMessageBox::Critical, tr ("Octave Editor"),
-                       tr ("File not saved! The selected file name\n%1\n"
-                           "is the same as the current file name").
-                       arg (saveFileName),
-                       QMessageBox::Ok, 0);
-
-  show_dialog (msgBox);
-}
-
-void
 file_editor_tab::handle_save_file_as_answer (const QString& saveFileName)
 {
   if (saveFileName == _file_name)
     {
-      message_duplicate_file_name (saveFileName);
-      // Nothing done, allow editing again.
-      _edit_area->setReadOnly (false);
+      // same name as actual file, save it as "save" would do
+      save_file (saveFileName);
     }
   else
     {
       // Have editor check for conflict, do not delete tab after save.
       emit editor_check_conflict_save (saveFileName, false);
     }
 }
 
 void
 file_editor_tab::handle_save_file_as_answer_close (const QString& saveFileName)
 {
-  if (saveFileName == _file_name)
-    {
-      message_duplicate_file_name (saveFileName);
-      // Nothing done, allow editing again.
-      _edit_area->setReadOnly (false);
-    }
-  else
-    {
-      // Have editor check for conflict, delete tab after save.
-      emit editor_check_conflict_save (saveFileName, true);
-    }
+  // saveFileName == _file_name can not happen, because we only can get here
+  // when we close a tab and _file_name is not a valid file name yet
+
+  // Have editor check for conflict, delete tab after save.
+  emit editor_check_conflict_save (saveFileName, true);
 }
 
 void
 file_editor_tab::handle_save_file_as_answer_cancel ()
 {
   // User canceled, allow editing again.
   _edit_area->setReadOnly (false);
 }
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -174,17 +174,16 @@ private:
     std::string dir;
     std::string function_name;
     int line;
   };
 
   bool valid_file_name (const QString& file=QString ());
   void save_file (const QString& saveFileName, bool remove_on_success = false);
   void save_file_as (bool remove_on_success = false);
-  void message_duplicate_file_name (const QString& fileName);
 
   void update_lexer ();
   void request_add_breakpoint (int line);
   void request_remove_breakpoint (int line);
 
   void show_dialog (QDialog *dlg);
   int check_file_modified ();
   void do_comment_selected_text (bool comment);
