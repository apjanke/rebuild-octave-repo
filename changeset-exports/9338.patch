# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1244796156 -7200
#      Fri Jun 12 10:42:36 2009 +0200
# Node ID 650c7efa7234b66237511a70d9a6fbde2b5205a8
# Parent  878df7c11e3d9ed5e5bc2ae53c5f1ead6a4dd871
simplify octave_cell::sort

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2009-06-12  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-cell.cc (octave_cell::sort (Array<octave_idx_type>&)): Simplify.
+
 2009-06-11  John W. Eaton  <jwe@octave.org>
 
 	* octave.cc: Keep long options alphabetized.
 
 	* display.h (display_info::no_window_system): New static function.
 	(display_info::display_info, display_info::init,
 	display_info::instance_ok): New argument, QUERY.
 	(display_info::init): Skip query if QUERY is false.
diff --git a/src/ov-cell.cc b/src/ov-cell.cc
--- a/src/ov-cell.cc
+++ b/src/ov-cell.cc
@@ -482,21 +482,18 @@ octave_cell::sort (Array<octave_idx_type
   octave_value retval;
 
   if (is_cellstr ())
     {
       Array<std::string> tmp = cellstr_value ();
 
       tmp = tmp.sort (sidx, dim, mode);
 
-      // We do it the hard way to auto-create the result's cache
-      octave_cell *result = new octave_cell (Cell (tmp));
-      result->cellstr_cache = tmp;
-
-      retval = result;
+      // We already have the cache.
+      retval = new octave_cell (tmp);
     }
   else
     error ("sort: only cell arrays of character strings may be sorted");
   
   return retval;
 }
 
 sortmode 
