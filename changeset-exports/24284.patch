# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1500907683 -7200
#      Mon Jul 24 16:48:03 2017 +0200
# Branch stable
# Node ID 1ad2297f8eceaaf6a0ef5617d290d3edc91d992a
# Parent  a669809df61276c39a6c5a471fac29d70cd91796
Fix printing integer type images (bug #51558)

*gl2ps-print.cc(gl2ps_renderer::draw_pixels): get the correct maximum value for
 uint8_t and uint16_t types.

diff --git a/libinterp/corefcn/gl2ps-print.cc b/libinterp/corefcn/gl2ps-print.cc
--- a/libinterp/corefcn/gl2ps-print.cc
+++ b/libinterp/corefcn/gl2ps-print.cc
@@ -703,32 +703,32 @@ namespace octave
 
   void
   gl2ps_renderer::draw_pixels (int w, int h, const uint8_t *data)
   {
     // gl2psDrawPixels only supports the GL_FLOAT type.
 
     OCTAVE_LOCAL_BUFFER (float, tmp_data, 3*w*h);
 
-    static const float maxval = std::numeric_limits<float>::max ();
+    static const float maxval = std::numeric_limits<uint8_t>::max ();
 
     for (int i = 0; i < 3*w*h; i++)
       tmp_data[i] = data[i] / maxval;
 
     draw_pixels (w, h, tmp_data);
   }
 
   void
   gl2ps_renderer::draw_pixels (int w, int h, const uint16_t *data)
   {
     // gl2psDrawPixels only supports the GL_FLOAT type.
 
     OCTAVE_LOCAL_BUFFER (float, tmp_data, 3*w*h);
 
-    static const float maxval = std::numeric_limits<float>::max ();
+    static const float maxval = std::numeric_limits<uint16_t>::max ();
 
     for (int i = 0; i < 3*w*h; i++)
       tmp_data[i] = data[i] / maxval;
 
     draw_pixels (w, h, tmp_data);
   }
 
   void
