# HG changeset patch
# User Rik <rik@octave.org>
# Date 1529959804 25200
#      Mon Jun 25 13:50:04 2018 -0700
# Node ID 5f355e5ff344b00b4ce959108bb30201fa70a1b1
# Parent  18f5f91f734898cf1be5cfd8b41ccbd9d5db90d4
# Parent  b3c35a130f945fa6ef1cbb17dad7ee03e92481d8
maint: merge stable to default.

diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -347,17 +347,19 @@ function [x, fvec, info, output, fjac] =
       endif
 
       ## Update delta.
       if (ratio < min (max (0.1, 0.8*lastratio), 0.9))
         nsuc = 0;
         nfail += 1;
         delta *= decfac;
         decfac ^= 1.4142;
-        if (delta <= 1e1*macheps*xn)
+        if (fn <= tolf*n*xn)
+          info = 1;
+        elseif (delta <= 1e1*macheps*xn)
           ## Trust region became uselessly small.
           info = -3;
           break;
         endif
       else
         lastratio = ratio;
         decfac = 0.5;
         nfail = 0;
@@ -589,16 +591,33 @@ endfunction
 %! x_opt = [-1+i, 1-i, 2+i];
 %! x = [i, 1, 1+i];
 %!
 %! [x, f, info] = fsolve (@cfun, x, optimset ("ComplexEqn", "on"));
 %! tol = 1e-5;
 %! assert (norm (f) < tol);
 %! assert (norm (x - x_opt, Inf) < tol);
 
+%!test <*53991>
+%! A = @(lam) [0 1 0 0; 0 0 1 0; 0 0 0 1; 0 0 -lam^2 0];
+%! C = [1 0 0 0; 0 0 1 0];
+%! B = @(lam) [C*expm(A(lam)*0); C*expm(A(lam)*1)];
+%! detB = @(lam) det (B(lam));
+%! 
+%! [x, fvec, info] = fsolve (detB, 0);
+%! assert (x == 0);
+%! assert (fvec == -1);
+%! assert (info == -2);
+
+%!test <*53991>
+%! [x, fvec, info] = fsolve (@(x) 5*x, 0);
+%! assert (x == 0);
+%! assert (fvec == 0);
+%! assert (info == 1);
+
 ## Solve the double dogleg trust-region least-squares problem:
 ## Minimize norm(r*x-b) subject to the constraint norm(d.*x) <= delta,
 ## x being a convex combination of the gauss-newton and scaled gradient.
 
 ## FIXME: error checks
 ## FIXME: handle singularity, or leave it up to mldivide?
 
 function x = __dogleg__ (r, b, d, delta)
