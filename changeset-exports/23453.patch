# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1493401767 14400
#      Fri Apr 28 13:49:27 2017 -0400
# Node ID 2eb7dc15f9fab05fef6d3517dc1f937fde827ac7
# Parent  0af6dbede266d1bc21a6e6ae9220c2c917ab61e0
use DEFALIAS to define inverse

* inv.cc (inverse): Define with DEFALIAS instead of DEFUN.

diff --git a/libinterp/corefcn/inv.cc b/libinterp/corefcn/inv.cc
--- a/libinterp/corefcn/inv.cc
+++ b/libinterp/corefcn/inv.cc
@@ -226,24 +226,9 @@ sparse matrix if possible.
 %! assert (isa (rcond, "double"));
 
 %!error inv ()
 %!error inv ([1, 2; 3, 4], 2)
 %!error <must be a square matrix> inv ([1, 2; 3, 4; 5, 6])
 
 */
 
-// FIXME: this should really be done with an alias, but
-// alias_builtin() won't do the right thing if we are actually using
-// dynamic linking.
-
-DEFUN (inverse, args, nargout,
-       doc: /* -*- texinfo -*-
-@deftypefn  {} {@var{x} =} inverse (@var{A})
-@deftypefnx {} {[@var{x}, @var{rcond}] =} inverse (@var{A})
-Compute the inverse of the square matrix @var{A}.
-
-This is an alias for @code{inv}.
-@seealso{inv}
-@end deftypefn */)
-{
-  return Finv (args, nargout);
-}
+DEFALIAS (inverse, inv);
