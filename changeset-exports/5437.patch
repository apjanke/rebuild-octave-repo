# HG changeset patch
# User jwe
# Date 1125642472 0
#      Fri Sep 02 06:27:52 2005 +0000
# Node ID 00960630387467f1702cec7cd8ea7eb1b652b454
# Parent  2ed5009be5030ec3ae3b469a372e148d74ebb530
[project @ 2005-09-02 06:25:26 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2005-08-31  Pascal A. Dupuis  <Pascal.Dupuis@esat.kuleuven.be>
+
+	* emacs/octave-inf.el (inferior-octave-startup): Call
+	inferior-octave-resync-dirs here.
+
 2005-07-14  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (SH_LDFLAGS): Add -Wl,--enable-auto-image-base for
 	Cygwin and MinGW.
 
 2005-06-14  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (AH_BOTTOM): Also define GCC_ATTR_DEPRECATED.
diff --git a/emacs/octave-inf.el b/emacs/octave-inf.el
--- a/emacs/octave-inf.el
+++ b/emacs/octave-inf.el
@@ -242,17 +242,20 @@ startup file, `~/.emacs-octave'."
     ;; Next, we check whether Octave supports `completion_matches' ...
     (inferior-octave-send-list-and-digest
      (list "exist \"completion_matches\"\n"))
     (setq inferior-octave-complete-impossible
 	  (not (string-match "5$" (car inferior-octave-output-list))))
 
     ;; And finally, everything is back to normal.
     (set-process-filter proc 'inferior-octave-output-filter)
-    (run-hooks 'inferior-octave-startup-hook)))
+    (run-hooks 'inferior-octave-startup-hook)
+    ;; just in case, to be sure a cd in the startup file 
+    ;; won't have detrimental effects
+    (inferior-octave-resync-dirs)))
 
 
 (defun inferior-octave-complete ()
   "Perform completion on the Octave symbol preceding point.
 This is implemented using the Octave command `completion_matches' which
 is NOT available with versions of Octave prior to 2.0."
   (interactive)
   (let* ((end (point))
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1004,17 +1004,17 @@ symbol_out_of_date (symbol_record *sr)
 
   if (sr)
     {
       octave_value ans = sr->def ();
 
       octave_function *fcn = ans.function_value (true);
 
       // No need to check nested functions.  They can only be executed
-      // from within the parent function the contains them.  Parent
+      // from within the parent function that contains them.  Parent
       // and nested functions will be updated simultaneously when we
       // check the parent.
 
       if (fcn && ! fcn->is_nested_function ())
 	{
 	  std::string ff = fcn->fcn_file_name ();
 
 	  if (! ff.empty ())
