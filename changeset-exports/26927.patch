# HG changeset patch
# User Torsten Lilge <ttl-octave@mailbox.org>
# Date 1552686859 -3600
#      Fri Mar 15 22:54:19 2019 +0100
# Node ID df9fe0026f735ea8c672ada77b9594fc93327092
# Parent  71724787d9727b4c504fda13ea5f024ae1d49e7c
use user cache location for keyword lists for auto completion (bug #55855)

* file-editor-tab.cc (update_lexer_settings): get user cache location,
  set path for prepared apis files to this location where application name
  is temporarily set to octave (not GNU Octave) preventing blanks in the path

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -633,27 +633,43 @@ namespace octave
     QSettings *settings = resource_manager::get_settings ();
 
     if (_lexer_apis)
       {
         _lexer_apis->cancelPreparation ();  // stop preparing if apis exists
 
         bool update_apis = false;  // flag, whether update of apis files
 
-        // get path to prepared api info
-        QFileInfo settings_file = resource_manager::get_settings_file ();
-        QString prep_apis_path = settings_file.absolutePath () + "/"
+        // Get path to prepared api info (cache). Temporarily set the
+        // application name to 'octave' instead of 'GNU Octave' name for
+        // not having blanks in the path.
+        QString tmp_app_name = QCoreApplication::applicationName ();
+        QCoreApplication::setApplicationName ("octave");  // Set new name
+
+#if defined (HAVE_QSTANDARDPATHS)
+        QString local_data_path
+          = QStandardPaths::writableLocation (QStandardPaths::CacheLocation);
+#else
+        QString local_data_path
+          = QDesktopServices::storageLocation (QDesktopServices::CacheLocation);
+#endif
+
+        QCoreApplication::setApplicationName ("octave");  // Set temp. name
+
+        QString prep_apis_path = local_data_path + "/"
                                   + QString (OCTAVE_VERSION) + "/qsci/";
 
         // get settings which infos are used for octave
         bool octave_builtins = settings->value (
                                  "editor/codeCompletion_octave_builtins", true).toBool ();
         bool octave_functions = settings->value (
                                   "editor/codeCompletion_octave_functions", true).toBool ();
 
+        QCoreApplication::setApplicationName (tmp_app_name);  // Restore name
+
         if (_is_octave_file)
           {
             // Keywords and Builtins do not change, these informations can be
             // stored in prepared form in a file. Information on function are
             // changing frequently, then if functions should also be auto-
             // completed, the date of any existing file is checked.
 
             // Keywords are always used
