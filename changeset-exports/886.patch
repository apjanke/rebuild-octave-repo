# HG changeset patch
# User jwe
# Date 784086804 0
#      Sun Nov 06 01:53:24 1994 +0000
# Node ID 05a1e41f2dd4f811566f8d2d7ca04b0bd2ecdba2
# Parent  f95973bfc6641072a87679615143c0b04717db62
[project @ 1994-11-06 01:50:53 by jwe]

diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -32,16 +32,19 @@
 #undef HAVE_ISINF
 
 /* Define if you have isnan.  */
 #undef HAVE_ISNAN
 
 /* Define if you have sgtty.h. */
 #undef HAVE_SGTTY_H
 
+/* Define if your system has a sys_siglist variable. */
+#undef HAVE_SYS_SIGLIST
+
 /* Define if you have termios.h. */
 #undef HAVE_TERMIOS_H
 
 /* Define if you have termio.h. */
 #undef HAVE_TERMIO_H
 
 /* Define if your system stores doubles in IEEE format with the most
    significant byte first. */
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -42,17 +42,17 @@ Software Foundation, 675 Mass Ave, Cambr
 int pipe_handler_error_count = 0;
 
 // Nonzero means we can be interrupted.
 int can_interrupt = 0;
 
 static void
 my_friendly_exit (const char *sig_name, int sig_number)
 {
-  error ("caught %s -- stopping myself...", sig_name);
+  error ("%s -- stopping myself...", sig_name);
   clean_up_and_exit (sig_number);
 }
 
 // I know, not really a signal handler.
 
 static void
 octave_new_handler (void)
 {
@@ -215,17 +215,17 @@ install_signal_handlers (void)
   signal (SIGXCPU, generic_sig_handler);
 #endif
 
 #ifdef SIGXFSZ
   signal (SIGXFSZ, generic_sig_handler);
 #endif
 }
 
-#ifndef SYS_SIGLIST_DECLARED
+#ifndef HAVE_SYS_SIGLIST
 char *sys_siglist[NSIG + 1] =
 {
 #ifdef AIX
 /* AIX has changed the signals a bit */
   "bogus signal",			/* 0 */
   "hangup",				/* 1  SIGHUP */
   "interrupt",				/* 2  SIGINT */
   "quit",				/* 3  SIGQUIT */
