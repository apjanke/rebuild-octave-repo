# HG changeset patch
# User jwe
# Date 909620812 0
#      Thu Oct 29 00:26:52 1998 +0000
# Node ID a998db745232c892f9b62d475f948cfec7ab3a0d
# Parent  3ac3e8edc25850671f1e9becb5051bbb08936424
[project @ 1998-10-29 00:26:52 by jwe]

diff --git a/scripts/general/is_matrix.m b/scripts/general/is_matrix.m
deleted file mode 100644
--- a/scripts/general/is_matrix.m
+++ /dev/null
@@ -1,37 +0,0 @@
-## Copyright (C) 1996, 1997 John W. Eaton
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2, or (at your option)
-## any later version.
-##
-## Octave is distributed in the hope that it will be useful, but
-## WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-## General Public License for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, write to the Free
-## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
-## 02111-1307, USA.
-
-## usage: is_matrix (x)
-##
-## Return 1 if X is a matrix.  Otherwise, return 0.
-##
-## See also: size, rows, columns, length, is_scalar, is_vector
-
-## Author: jwe
-
-function retval = is_matrix (x)
-
-  if (nargin == 1)
-    [nr, nc] = size (x);
-    retval = (nr > 0 && nc > 0);
-  else
-    usage ("is_matrix (x)");
-  endif
-
-endfunction
diff --git a/scripts/general/is_scalar.m b/scripts/general/is_scalar.m
--- a/scripts/general/is_scalar.m
+++ b/scripts/general/is_scalar.m
@@ -22,16 +22,20 @@
 ## Return 1 if the number of rows and columns of x are both equal to 1.
 ##
 ## See also: size, rows, columns, length, is_scalar, is_matrix
 
 ## Author: jwe
 
 function retval = is_scalar (x)
 
+  retval = 0;
+
   if (nargin == 1)
-    [nr, nc] = size (x);
-    retval = (nr == 1 && nc == 1);
+    if (is_matrix (x))
+      [nr, nc] = size (x);
+      retval = (nr == 1 && nc == 1);
+    endif
   else
     usage ("is_scalar (x)");
   endif
 
 endfunction
diff --git a/scripts/general/is_square.m b/scripts/general/is_square.m
--- a/scripts/general/is_square.m
+++ b/scripts/general/is_square.m
@@ -25,20 +25,22 @@
 ## See also: size, rows, columns, length, is_matrix, is_scalar, is_vector
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
 
 function retval = is_square (x)
 
+  retval = 0;
+
   if (nargin == 1)
-    [nr, nc] = size (x);
-    if (nr == nc && nr > 0)
-      retval = nr;
-    else
-      retval = 0;
+    if (is_matrix (x))
+      [nr, nc] = size (x);
+      if (nr == nc && nr > 0)
+      	retval = nr;
+      endif
     endif
   else
     usage ("is_square (x)");
   endif
 
 endfunction
diff --git a/scripts/general/is_symmetric.m b/scripts/general/is_symmetric.m
--- a/scripts/general/is_symmetric.m
+++ b/scripts/general/is_symmetric.m
@@ -28,25 +28,24 @@
 ## Created: August 1993
 ## Adapted-By: jwe
 
 function retval = is_symmetric (x,tol)
 
   retval = 0;
 
   if (nargin == 1 || nargin == 2)
-    [nr, nc] = size (x);
-    if (nr == nc && nr > 0)
-      if (nargin == 1)
-	tol = eps;
-      endif
-      if (isstr (x))
-	x = toascii (x);
-      endif
-      if (norm (x - x') / norm(x) <= tol)
-        retval = nr;
+    if (is_matrix (x))
+      [nr, nc] = size (x);
+      if (nr == nc && nr > 0)
+      	if (nargin == 1)
+	  tol = eps;
+      	endif
+      	if (norm (x - x') / norm(x) <= tol)
+          retval = nr;
+      	endif
       endif
     endif
   else
     usage ("is_symmetric (x {,tol})");
   endif
 
 endfunction
diff --git a/scripts/general/is_vector.m b/scripts/general/is_vector.m
--- a/scripts/general/is_vector.m
+++ b/scripts/general/is_vector.m
@@ -22,16 +22,20 @@
 ## Return 1 if X is a vector.  Otherwise, return 0.
 ##
 ## See also: size, rows, columns, length, is_scalar, is_matrix
 
 ## Author: jwe
 
 function retval = is_vector (x)
 
+  retval = 0;
+
   if (nargin == 1)
-    [nr, nc] = size (x);
-    retval = ((nr == 1 && nc >= 1) || (nc == 1 && nr >= 1));
+    if (is_matrix (x))
+      [nr, nc] = size (x);
+      retval = ((nr == 1 && nc >= 1) || (nc == 1 && nr >= 1));
+    endif
   else
     usage ("is_vector (x)");
   endif
 
 endfunction
diff --git a/scripts/general/isempty.m b/scripts/general/isempty.m
--- a/scripts/general/isempty.m
+++ b/scripts/general/isempty.m
@@ -20,17 +20,21 @@
 ## usage: isempty (x)
 ##
 ## Return 1 if the argument is an empty matrix.  Otherwise, return 0.
 
 ## Author: jwe
 
 function retval = isempty (var)
 
-  if (nargin != 1)
+  retval = 0;
+
+  if (nargin == 1)
+    if (is_matrix (var))
+      [nr, nc] = size (var);
+      retval = (nr == 0 || nc == 0);
+    endif
+  else
     usage ("isempty (var)");
   endif
 
-  [nr, nc] = size (var);
-
-  retval = (nr == 0 || nc == 0);
 
 endfunction
