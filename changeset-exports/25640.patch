# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1531942551 14400
#      Wed Jul 18 15:35:51 2018 -0400
# Node ID 7aaf091d39fc730e37e6fdc51158c28bcb7ee92f
# Parent  7644e7f1721f4e613ba13c0475fb47984bfed533
one more fix for parser change...  Doh!

* oct-tex-parser.yy, oct-parse.yy: Define api.prefix without spaces
inside braces.

* oct-parse.yy: Restore api.push-pull declaration.

diff --git a/libinterp/corefcn/oct-tex-parser.yy b/libinterp/corefcn/oct-tex-parser.yy
--- a/libinterp/corefcn/oct-tex-parser.yy
+++ b/libinterp/corefcn/oct-tex-parser.yy
@@ -44,17 +44,18 @@ static void yyerror (text_parser_tex& pa
    // the bottom of the file.
 #  pragma GCC diagnostic push
 #  pragma GCC diagnostic ignored "-Wold-style-cast"
 #endif
 
 %}
 
 %define api.pure
-%define api.prefix { octave_tex_ }
+// No spaces inside the braces for the prefix definition!
+%define api.prefix {octave_tex_}
 %parse-param { text_parser_tex& parser }
 %lex-param { void *scanner }
 
 %code requires {#include <string>}
 
 %union
 {
   // Leaf symbols produced by the scanner.
diff --git a/libinterp/parse-tree/oct-parse.yy b/libinterp/parse-tree/oct-parse.yy
--- a/libinterp/parse-tree/oct-parse.yy
+++ b/libinterp/parse-tree/oct-parse.yy
@@ -121,17 +121,19 @@ static void yyerror (octave::base_parser
 // reentrant because both still use many global variables.  It should be
 // safe to create a parser object and call it while another parser
 // object is active (to parse a callback function while the main
 // interactive parser is waiting for input, for example) if you take
 // care to properly save and restore (typically with an unwind_protect
 // object) relevant global values before and after the nested call.
 
 %define api.pure
-%define api.prefix { octave_ }
+// No spaces inside the braces for the prefix and push-pull definitions!
+%define api.prefix {octave_}
+%define api.push-pull {both}
 %parse-param { octave::base_parser& parser }
 %lex-param { void *lexer.scanner }
 
 %union
 {
   int dummy_type;
 
   // The type of the basic tokens returned by the lexer.
