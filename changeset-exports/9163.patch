# HG changeset patch
# User Rik <rdrider0-list@yahoo.com>
# Date 1241133198 25200
#      Thu Apr 30 16:13:18 2009 -0700
# Node ID 9cb0c21e97f76ee450280c55ea410b1ae687fa33
# Parent  ec159e991ee6739cc78c4c1613a3d7e09c26896c
Update section 17.4 (Sums and Products) of arith.txi

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,11 @@
+2009-04-26  Rik  <rdrider0-list@yahoo.com>
+	* interpreter/arith.txi: Update section 17.4 (Sums and Products) of arith.txi
+
 2009-04-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* interpreter/numbers.txi: Update info on ranges.
 	* interpreter/expr.txi: Update some info on indexing.
 
 2009-04-26  Rik  <rdrider0-list@yahoo.com>
 	* interpreter/arith.txi: Update section 17.3 (Trigonometry) of arith.txi
 
@@ -72,17 +75,17 @@ 2009-03-25  John W. Eaton  <jwe@octave.o
 	* interpreter/munge-texi.cc (process_texi_input_file):
 	Copy leading comment with file name info to output.
 
 2009-03-09  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in (DISTFILES): Use doc-cache instead of
 	DOC for doc cache file.
 
-2009-03-08  Søren Hauberg  <hauberg@gmail.com>
+2009-03-08  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/stats.txi (Basic Statistical Functions):
 	Add the 'histc' function.
 
 2009-03-07  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/basics.txi (Command Line Options):
 	Document --doc-cache-file command-line option.
@@ -178,17 +181,17 @@ 2009-01-24  Thorsten Meyer  <thorsten@he
 
 2009-01-22  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/io.txi (Terminal Output): Remove @DOCSTRING(ans).
 
 	* vr-idx.txi: Delete.
 	* interpreter/Makefile.in (SUB_SOURCE): Remove it from the list.
 
-2009-01-22  Søren Hauberg  <hauberg@gmail.com>
+2009-01-22  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/func.txi: Put varargin and varargout in concept index.
 	* interpreter/var.txi: Put ans in concept index.
 	* interpreter/octave.texi: Don't include vr-idx.texi.
 	
         * interpreter/var.txi: Remove sections on built-in variables.
 
 2009-01-20  John W. Eaton  <jwe@octave.org>
@@ -299,22 +302,22 @@ 2008-10-03  Thorsten Meyer  <thorsten.me
 
 	* interpreter/contrib.txi: added example for mercurial queues
 
 08-10-03  Thorsten Meyer  <thorsten.meyier@gmx.de>
 
         * interpreter/contrib.txi: correction of the mercurial example
         * interpreter/container.txi: minor correction of the text
 
-2008-09-25  Søren Hauberg  <hauberg@gmail.com>
+2008-09-25  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/image.txi: Update for imread and imwrite instead of
 	loadimge and saveimage.
 
-2008-09-24  Søren Hauberg  <hauberg@gmail.com>
+2008-09-24  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/image.txi: Document imfinfo.
 
 2008-09-23  Francesco Potorti`  <Potorti@isti.cnr.it>.
 
 	* interpreter/container.txi: Fix cross reference in struct docs.
 
 2008-09-23  Brian Gough  <bjg@network-theory.co.uk>
@@ -353,17 +356,17 @@ 2008-08-26  Jaroslav Hajek  <highegg@gma
 2008-08-21  David Bateman  <dbateman@free.fr>
 
 	* interpreter/plot.txi: Document ezplot.
 	
 2008-08-19  David Bateman  <dbateman@free.fr>
 
 	* interpreter/numbers.txi: Document intwarning.
 
-2008-08-06  Søren Hauberg  <hauberg@gmail.com>
+2008-08-06  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/basics.txi, interpreter/errors.txi,
 	interpreter/expr.txi, interpreter/func.txi,
 	interpreter/numbers.txi: Update format of error messages in examples.
 
 2008-07-29  David Bateman  <dbateman@free.fr>
 
 	* interpreter/numbers.txi, interpreter/plot.txi,
@@ -570,17 +573,17 @@ 2007-10-26  Michael Goffioul  <michael.g
 2007-10-22  Kim Hansen  <kimhanse@gmail.com>
 
 	* interpreter/munge-texi.cc: Include <cstdlib> and <cstring>.
 
 2007-10-19  David Bateman  <dbateman@free.fr>
 
 	* refcard/refcard.tex: Update for 3.0.
 
-2007-10-15  Søren Hauberg  <hauberg@gmail.com>
+2007-10-15  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/preface.txi, interpreter/basics.txi,
 	interpreter/strings.txi, interpreter/container.txi,
 	interpreter/var.txi, interpreter/expr.txi, interpreter/errors.txi,
 	interpreter/io.txi, interpreter/func.txi, interpreter/package.txi:
 	Make text fit on pages when using smallbook.
 
 2007-10-12  John W. Eaton  <jwe@octave.org>
@@ -602,17 +605,17 @@ 2007-10-10  Olli Saarela  <Olli.Saarela@
 	interpreter/geometry.txi, interpreter/intro.txi,
 	interpreter/numbers.txi, interpreter/plot.txi,
 	interpreter/poly.txi, interpreter/set.txi, interpreter/sparse.txi,
 	interpreter/stmt.txi, interpreter/strings.txi,
 	interpreter/testfun.txi, interpreter/tips.txi: Spelling fixes. 
 
 2007-10-06  John W. Eaton  <jwe@octave.org>
 
-	* interpreter/octave.texi: Add David Bateman and Søren Hauberg as
+	* interpreter/octave.texi: Add David Bateman and Sï¿½ren Hauberg as
 	authors.
 
 2006-09-28  Henry Mollet  mollet@pacbell.net
 
 	* interpreter/func.txi: Correct results of a couple of examples.
 
 2007-09-14  John W. Eaton  <jwe@octave.org>
 
@@ -634,17 +637,17 @@ 2007-09-01  David Bateman  <dbateman@fre
 	* interpreter/Makefile.in: Remove stray character from
 	INTERIMAGES_PNG target. 
 	* conf.texi.in: Substitute for the variable TEXINFO_QHULL
 	* interpreter/geometryimages.m: Check for the HAVE_QHULL build
 	flag before creating certain figures.
 	* interpreter/geometry.txi: Check whether TEXINFO_QHULL is set
 	before including certain figures.
 
-2007-08-31  Søren Hauberg  <hauberg@gmail.com>
+2007-08-31  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/nonlin.txi: Extended the example.
 
         * interpreter/poly.txi: Sectioning and documentation.
         * interpreter/octave.texi: Adapt to changes in poly.txi.
 
 2007-08-30  David Bateman  <dbateman@free.fr>
 
@@ -717,17 +720,17 @@ 2007-06-25  John W. Eaton  <jwe@octave.o
 
 2007-06-18  David Bateman  <dbateman@free.fr>
 
 	* interpreter/interpimages.m: Simpler images to demonstrate
 	the continuity of the second derivative of splines.
 	* interpreter/interp.txi: Also change figures here.
 	* interpreter/Makefile.in: and here.
 	
-2007-06-18  Søren Hauberg  <hauberg@gmail.com>
+2007-06-18  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/optim.txi: Added some introductory text to each
 	section.
 
         * interpreter/set.txi: Added some introductory text.
         * interpreter/octave.texi: Updated to reflect changes in set.txi.
 
 2007-06-15  David Bateman  <dbateman@free.fr>
@@ -764,17 +767,17 @@ 2007-06-12  David Bateman  <dbateman@fre
 	* hashing.txi: Remove.
 	* system.txi: Move it here as a subsection. Include explanation
 	and example.
 	* interpreter/octave.texi: Add sections for the Interpolation
 	chapter. Remove references to Hashing chapter and hashing.texi,
 	and subsections for hashing to system utilities chapter.
 
 
-2007-06-12  2007-06-10  Søren Hauberg  <hauberg@gmail.com>
+2007-06-12  2007-06-10  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/diffeq.txi: Note that x-dot is the derivative of x.
 
 2007-06-03  David Bateman  <dbatemna@free.fr>
 
 	* interpreter/dynamic.txi: Use "mwSize" and "mwIndex" rather than
 	"int" for indexing in mex-files and document them.
 	
@@ -792,25 +795,25 @@ 2007-05-30  G. D. McBain  <gdmcbain@free
 
 	* interpreter/expr.txi (Assignment Ops): Doc fix.
 
 2007-05-29  Steven Mestdagh  <steven.mestdagh@esat.kuleuven.be>
 
 	* interpreter/Makefile.in ($(HTML_IMAGES_PNG)): Use cp instead of
 	INSTALL_DATA to copy files to the HTML directory.
 
-2007-05-28  Søren Hauberg  <hauberg@gmail.com>
+2007-05-28  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/errors.txi: Add new sections and some more detailed
 	descriptions on errors and warnings.
         * interpreter/octave.texi, interpreter/stmt.txi,
 	interpreter/var.txi: Add references to the new sections in
 	errors.txi.
 
-2007-05-28  Søren Hauberg  <hauberg@gmail.com>
+2007-05-28  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/io.txi: Rearrange some sections, and add
         a few examples.
 
 2007-05-28  G. D. McBain  <geordie_mcbain@yahoo.com.au>
 
 	* interpreter/struct.txi: Doc fix.
 
@@ -834,17 +837,17 @@ 2007-05-22  Thomas Weber  <thomas.weber.
 2007-05-22  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/Makefile.in (DISTFILES): Add mkcontrib.awk to the list.
 
 2007-05-21  David Bateman  <dbatemna@free.fr>
 
 	* interpreter/debug.txi, io.txi, octave.txi: Doc fixes.
 
-2007-05-21  Søren Hauberg  <hauberg@gmail.com>
+2007-05-21  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
         * interpreter/expr.txi: Describe +=, -=, *=, and /= operators.
 	Add new example.
 
         * interpreter/eval.txi: Partition the chapter into sections.
         Describe evalin and assignin functions using text from Paul
 	Kienzle.  Change "See See" to "See".  Use @ref instead of @xref to
 	avoid "See" to be written with a capital letter in the middle of a
@@ -856,27 +859,27 @@ 2007-05-21  Søren Hauberg  <hauberg@gmail.com>
         * interpreter/stmt.txi: Describe cell array cases for the switch
 	statement.  Minor layout changes.
 
 2007-05-19  David Bateman  <dbatemna@free.fr>
 
 	* interpreter/func.txi: Additional documentation for function
 	locking, dispatch and autoloading.
 
-2007-05-16  Søren Hauberg  <hauberg@gmail.com>
+2007-05-16  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/expr.txi: Improve docs.
 
 2007-05-14  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/basics.txi, interpreter/data.txi,
 	interpreter/intro.txi, interpreter/numbers.txi,
 	interpreter/octave.texi, interpreter/preface.txi: Doc fixes.
 
-2007-04-18  Søren Hauberg  <hauberg@gmail.com>
+2007-04-18  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/package.texi: Document "*" flag for loaded packages.
 
 	* interpreter.var.txi: Improve explanation of clear, exist, and who.
 
 	* interpreter/intro.txi: Change @unnumberedsubsec to @subsection.
 
 	* interpreter/container.txi: Doc fix.
@@ -949,17 +952,17 @@ 2007-04-24  David Bateman  <dbateman@fre
 	interpreter/fortdemo.cc, interpreter/funcdemo.cc,
 	interpreter/globaldemo.cc, interpreter/helloworld.cc,
 	interpreter/stringdemo.cc, interpreter/structdemo.cc,
 	interpreter/unwinddemo.cc, interpreter/fortsub.f,
 	interpreter/dynamic.txi: New files.
 
 	* Makefile.in (SUB_SOURCE): Include dynamic.txi in the list.
 
-2007-04-18  Søren Hauberg  <hauberg@gmail.com>
+2007-04-18  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/package.texi: New file.
 	* octave/texi: @include it, add it to the menus.
 
 2007-04-18  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/contributors.in: New file.
 	* interpreter/Makefile.in (contributors.texi): New target.
@@ -974,37 +977,37 @@ 2007-04-17  David Bateman  <dbateman@fre
 	* interpreter/octave.texi: Include it in menu.
 	* interpreter/sparse.txi: Delete discusion of matrix_type.
 
 2007-04-16  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/stream.txi: Delete.
 	* interpreter/Makefile.in (SUB_SOURCE): Remove it from the list.
 
-2007-04-16  Søren Hauberg  <hauberg@gmail.com>
+2007-04-16  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* intrepreter/stmt.txi: Improve documentation of switch statement.
 
 	* interpreter/tips.txi: Update description of how copyright
 	statements are recognized.
 
 	* interpreter/octave.texi: Don't include stream.texi.
 	Remove menu entry for I/O streams.
 
 	* interpreter/image.txi: Update docs.
 
-2007-04-11  Søren Hauberg  <hauberg@gmail.com>
+2007-04-11  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/container.txi: Document indexing with ().
 
-2007-04-11  Søren Hauberg  <hauberg@gmail.com>
+2007-04-11  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/container.txi: Improve cell array documentation.
 
-2007-04-09  Søren Hauberg  <hauberg@gmail.com>
+2007-04-09  Sï¿½ren Hauberg  <hauberg@gmail.com>
 
 	* interpreter/func.txi: Document varargin, varargout, and default
 	argument values.
 
 2007-04-03  Rafael Laboissiere  <rafael@debian.org>
 
 	* interpreter/basics.txi: Clarified some limitations of the #!
 	script mechanism, in particular related to the parsing of the
diff --git a/scripts/general/accumarray.m b/scripts/general/accumarray.m
--- a/scripts/general/accumarray.m
+++ b/scripts/general/accumarray.m
@@ -13,30 +13,30 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn {Function File} {} accumarray (@var{subs}, @var{vals}, @var{sz}, @var{fun}, @var{fillval}, @var{issparse})
+## @deftypefn {Function File} {} accumarray (@var{subs}, @var{vals}, @var{sz}, @var{func}, @var{fillval}, @var{issparse})
 ## @deftypefnx {Function File} {} accumarray (@var{csubs}, @var{vals}, @dots{})
 ##
 ## Create an array by accumulating the elements of a vector into the
 ## positions defined by their subscripts.  The subscripts are defined by
 ## the rows of the matrix @var{subs} and the values by @var{vals}.  Each row
 ## of @var{subs} corresponds to one of the values in @var{vals}.
 ##
 ## The size of the matrix will be determined by the subscripts themselves.
 ## However, if @var{sz} is defined it determines the matrix size.  The length
 ## of @var{sz} must correspond to the number of columns in @var{subs}.
 ##
 ## The default action of @code{accumarray} is to sum the elements with the
-## same subscripts.  This behavior can be modified by defining the @var{fun}
+## same subscripts.  This behavior can be modified by defining the @var{func}
 ## function.  This should be a function or function handle that accepts a 
 ## column vector and returns a scalar.  The result of the function should not
 ## depend on the order of the subscripts.
 ##
 ## The elements of the returned array that have no subscripts associated with
 ## them are set to zero.  Defining @var{fillval} to some other value allows
 ## these values to be defined.
 ##
@@ -49,17 +49,17 @@
 ## @group
 ## accumarray ([1,1,1;2,1,2;2,3,2;2,1,2;2,3,2], 101:105)
 ## @result{} ans(:,:,1) = [101, 0, 0; 0, 0, 0]
 ##    ans(:,:,2) = [0, 0, 0; 206, 0, 208]
 ## @end group
 ## @end example
 ## @end deftypefn
 
-function A = accumarray (subs, val, sz, fun, fillval, isspar)  
+function A = accumarray (subs, val, sz, func, fillval, isspar)  
 
   if (nargin < 2 || nargin > 6)
     print_usage ();
   endif
 
   if (iscell (subs))
     subs = cell2mat (cellfun (@(x) x(:), subs, "UniformOutput", false));
   endif
@@ -72,18 +72,18 @@ function A = accumarray (subs, val, sz, 
   if (nargin < 6 || isempty (isspar))
     isspar = false;
   endif
 
   if (isspar && ndims > 2)
     error ("accumarray: sparse matrices limited to 2 dimensions");
   endif
 
-  if (nargin < 4 || isempty (fun))
-    fun = @sum;
+  if (nargin < 4 || isempty (func))
+    func = @sum;
     ## This is the fast summation case. Unlike the general case,
     ## this case will be handled using an O(N) algorithm.
 
     if (isspar && fillval == 0)
       ## The "sparse" function can handle this case.
 
       if ((nargin < 3 || isempty (sz)))
         A = sparse (subs(:,1), subs(:,2), val);
@@ -149,17 +149,17 @@ function A = accumarray (subs, val, sz, 
   else
     val = val(idx);
   endif
   cidx = find ([true; (sum (abs (diff (subs)), 2) != 0)]);
   idx = cell (1, ndims);
   for i = 1:ndims
     idx{i} = subs (cidx, i);
   endfor
-  x = cellfun (fun, mat2cell (val(:), diff ([cidx; length(val) + 1])));
+  x = cellfun (func, mat2cell (val(:), diff ([cidx; length(val) + 1])));
   if (isspar && fillval == 0)
     A = sparse (idx{1}, idx{2}, x, sz(1), sz(2));
   else
     if (iscell (x))
       ## Why did matlab choose to reverse the order of the elements
       x = cellfun (@(x) flipud (x(:)), x, "UniformOutput", false);
       A = cell (sz);
     elseif (fillval == 0)
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -1534,24 +1534,26 @@ sign as @var{x}.  If @var{y} is zero, th
     } \
   else \
     print_usage (); \
  \
   return retval
 
 DEFUN (cumprod, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} cumprod (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {} cumprod (@var{x})\n\
+@deftypefnx {Built-in Function} {} cumprod (@var{x}, @var{dim})\n\
 Cumulative product of elements along dimension @var{dim}.  If\n\
 @var{dim} is omitted, it defaults to 1 (column-wise cumulative\n\
 products).\n\
 \n\
 As a special case, if @var{x} is a vector and @var{dim} is omitted,\n\
 return the cumulative product of the elements as a vector with the\n\
 same orientation as @var{x}.\n\
+@seealso{prod, cumsum}\n\
 @end deftypefn")
 {
   DATA_REDUCTION (cumprod);
 }
 
 /*
 
 %!assert (cumprod ([1, 2, 3]), [1, 2, 6]);
@@ -1571,27 +1573,30 @@ same orientation as @var{x}.\n\
 
 %!assert (cumprod (single([2, 3; 4, 5]), 1), single([2, 3; 8, 15]));
 %!assert (cumprod (single([2, 3; 4, 5]), 2), single([2, 6; 4, 20]));
 
  */
 
 DEFUN (cumsum, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} cumsum (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {} cumsum (@var{x})\n\
+@deftypefnx {Built-in Function} {} cumsum (@var{x}, @var{dim})\n\
 @deftypefnx {Built-in Function} {} cumsum (@dots{}, 'native')\n\
 Cumulative sum of elements along dimension @var{dim}.  If @var{dim}\n\
 is omitted, it defaults to 1 (column-wise cumulative sums).\n\
 \n\
 As a special case, if @var{x} is a vector and @var{dim} is omitted,\n\
 return the cumulative sum of the elements as a vector with the\n\
 same orientation as @var{x}.\n\
 \n\
-The \"native\" argument implies the summation is performed in native type,\n\
-analogously to @code{sum}.\n\
+The \"native\" argument implies the summation is performed in native type.\n\
+ See @code{sum} for a complete description and example of the use of\n\
+\"native\".\n\
+@seealso{sum, cumprod}\n\
 @end deftypefn")
 {
   NATIVE_REDUCTION (cumsum, cumsum);
 }
 
 /*
 
 %!assert (cumsum ([1, 2, 3]), [1, 3, 6]);
@@ -1706,22 +1711,24 @@ Given a matrix argument, instead of a ve
 %!assert(diag (int8([0, 0, 0, 0; 1, 0, 0, 0; 0, 2, 0, 0; 0, 0, 3, 0]), -1), int8([1; 2; 3]));
 
 %!error <Invalid call to diag.*> diag ();
 
  */
 
 DEFUN (prod, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} prod (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {} prod (@var{x})\n\
+@deftypefnx {Built-in Function} {} prod (@var{x}, @var{dim})\n\
 Product of elements along dimension @var{dim}.  If @var{dim} is\n\
 omitted, it defaults to 1 (column-wise products).\n\
 \n\
 As a special case, if @var{x} is a vector and @var{dim} is omitted,\n\
 return the product of the elements.\n\
+@seealso{cumprod, sum}\n\
 @end deftypefn")
 {
   DATA_REDUCTION (prod);
 }
 
 /*
 
 %!assert (prod ([1, 2, 3]), 6);
@@ -2550,17 +2557,18 @@ Return the number of columns of @var{a}.
   else
     print_usage ();
 
   return retval;
 }
 
 DEFUN (sum, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} sum (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {} sum (@var{x})\n\
+@deftypefnx {Built-in Function} {} sum (@var{x}, @var{dim})\n\
 @deftypefnx {Built-in Function} {} sum (@dots{}, 'native')\n\
 Sum of elements along dimension @var{dim}.  If @var{dim} is\n\
 omitted, it defaults to 1 (column-wise sum).\n\
 \n\
 As a special case, if @var{x} is a vector and @var{dim} is omitted,\n\
 return the sum of the elements.\n\
 \n\
 If the optional argument 'native' is given, then the sum is performed\n\
@@ -2570,16 +2578,17 @@ double type.  For example\n\
 @example\n\
 @group\n\
 sum ([true, true])\n\
   @result{} 2\n\
 sum ([true, true], 'native')\n\
   @result{} true\n\
 @end group\n\
 @end example\n\
+@seealso{cumsum, sumsq, prod}\n\
 @end deftypefn")
 {
   NATIVE_REDUCTION (sum, any);
 }
 
 /*
 
 %!assert (sum([true,true]), 2)
@@ -2638,28 +2647,30 @@ sum ([true, true], 'native')\n\
 %!assert (sum (zeros (2, 2, 0, 3, 'single'), 3), zeros(2, 2, 1, 3, 'single'));
 %!assert (sum (zeros (2, 2, 0, 3, 'single'), 4), zeros(2, 2, 0, 'single'));
 %!assert (sum (zeros (2, 2, 0, 3, 'single'), 7), zeros(2, 2, 0, 3, 'single'));
 
 */
 
 DEFUN (sumsq, args, ,
   "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} sumsq (@var{x}, @var{dim})\n\
+@deftypefn  {Built-in Function} {} sumsq (@var{x})\n\
+@deftypefnx {Built-in Function} {} sumsq (@var{x}, @var{dim})\n\
 Sum of squares of elements along dimension @var{dim}.  If @var{dim}\n\
 is omitted, it defaults to 1 (column-wise sum of squares).\n\
 \n\
 As a special case, if @var{x} is a vector and @var{dim} is omitted,\n\
 return the sum of squares of the elements.\n\
 \n\
 This function is conceptually equivalent to computing\n\
 @example\n\
 sum (x .* conj (x), dim)\n\
 @end example\n\
-but it uses less memory and avoids calling conj if @var{x} is real.\n\
+but it uses less memory and avoids calling @code{conj} if @var{x} is real.\n\
+@seealso{sum}\n\
 @end deftypefn")
 {
   DATA_REDUCTION (sumsq);
 }
 
 /*
 
 %!assert(sumsq ([1, 2, 3]), 14)
