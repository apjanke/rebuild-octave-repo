# HG changeset patch
# User Juan Pablo Carbajal <ajuanpi+dev@gmail.com>
# Date 1438344099 -7200
#      Fri Jul 31 14:01:39 2015 +0200
# Node ID 2edd668e77848073cbf85e566446b3b065d2951a
# Parent  110c7a54586b5c1d3104d8020ef6f4789d75d88f
union.m: Matlab compatible output orientation for empty input ([]).

* union.m: Check inputs a,b with isempty which qualifies as a row vector.
Add BIST tests to verify new behavior.

diff --git a/scripts/set/union.m b/scripts/set/union.m
--- a/scripts/set/union.m
+++ b/scripts/set/union.m
@@ -46,17 +46,17 @@ function [y, ia, ib] = union (a, b, vara
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   [a, b] = validsetargs ("union", a, b, varargin{:});
 
   by_rows = nargin == 3;
-  isrowvec = isvector (a) && isvector (b) && isrow (a) && isrow (b);
+  isrowvec = (isrow (a) || isempty (a)) && (isrow (b) || isempty (b));
 
   if (by_rows)
     y = [a; b];
   else
     y = [a(:); b(:)];
     ## Adjust output orientation for Matlab compatibility
     if (isrowvec)
       y = y.';
@@ -89,17 +89,22 @@ endfunction
 
 %!test
 %! a = [3, 1, 4, 1, 5];
 %! b = [1, 2, 3, 4];
 %! [y, ia, ib] = union (a, b.');
 %! assert (y, [1; 2; 3; 4; 5]);
 %! assert (y, sort ([a(ia)'; b(ib)']));
 
+## Test format when input is empty
+%!assert (union ([],[1,2]), [1,2])
+%!assert (union ([1,2],[]), [1,2])
+%!assert (union ([],[1;2]), [1;2])
+%!assert (union ([1;2],[]), [1;2])
+
 ## Test common input validation for set routines contained in validsetargs
 %!error <cell array of strings cannot be combined> union ({"a"}, 1)
 %!error <A and B must be arrays or cell arrays> union (@sin, 1)
 %!error <invalid option: columns> union (1, 2, "columns")
 %!error <cells not supported with "rows"> union ({"a"}, {"b"}, "rows")
 %!error <A and B must be arrays or cell arrays> union (@sin, 1, "rows")
 %!error <A and B must be 2-dimensional matrices> union (rand(2,2,2), 1, "rows")
 %!error <number of columns in A and B must match> union ([1 2], 1, "rows")
-
