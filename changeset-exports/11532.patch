# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1295042715 28800
#      Fri Jan 14 14:05:15 2011 -0800
# Node ID 34bb8d38f19f01ab446f90e76e4f0bc57762aeb5
# Parent  f976dd63129c328706af83d542d2cf74b76de65f
Add undocumented function cbrt to documentation.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-14  Rik  <octave@nomad.inbox5.com>
+
+	* interpreter/arith.txi: Add undocumented cbrt to documentation.
+
 2011-01-14  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/arith.txi: Add undocumented erfcx to documentation.
 
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* Update copyright notices for 2011.
 
diff --git a/doc/interpreter/arith.txi b/doc/interpreter/arith.txi
--- a/doc/interpreter/arith.txi
+++ b/doc/interpreter/arith.txi
@@ -47,35 +47,37 @@ sin ([1, 2; 3, 4])
 @section Exponents and Logarithms
 
 @DOCSTRING(exp)
 
 @DOCSTRING(expm1)
 
 @DOCSTRING(log)
 
+@DOCSTRING(reallog)
+
 @DOCSTRING(log1p)
 
 @DOCSTRING(log10)
 
 @DOCSTRING(log2)
 
-@DOCSTRING(nextpow2)
-
-@DOCSTRING(nthroot)
-
 @DOCSTRING(pow2)
 
-@DOCSTRING(reallog)
+@DOCSTRING(nextpow2)
 
 @DOCSTRING(realpow)
 
+@DOCSTRING(sqrt)
+
 @DOCSTRING(realsqrt)
 
-@DOCSTRING(sqrt)
+@DOCSTRING(cbrt)
+
+@DOCSTRING(nthroot)
 
 @node Complex Arithmetic
 @section Complex Arithmetic
 
 In the descriptions of the following functions,
 @tex
 $z$ is the complex number $x + iy$, where $i$ is defined as
 $\sqrt{-1}$.
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2011-01-14  Rik  <octave@nomad.inbox5.com>
+
+	* specfun/nthroot.m: Add Seealso references to docstring.
+	
 2011-01-14  Rik  <octave@nomad.inbox5.com>
 
 	* miscellaneous/module.mk: Remove texas_lotto.m from build system.
 
 2011-01-14  Rik  <octave@nomad.inbox5.com>
 
 	* miscellaneous/texas_lotto.m: Remove Easter Egg function.
 
diff --git a/scripts/specfun/nthroot.m b/scripts/specfun/nthroot.m
--- a/scripts/specfun/nthroot.m
+++ b/scripts/specfun/nthroot.m
@@ -32,17 +32,17 @@
 ## @result{} -1
 ## (-1) ^ (1 / 3)
 ## @result{} 0.50000 - 0.86603i
 ## @end group
 ## @end example
 ## 
 ## @var{n} must be a scalar.  If @var{n} is not an even integer and @var{X} has
 ## negative entries, an error is produced.
-##
+## @seealso{realsqrt, sqrt, cbrt}
 ## @end deftypefn
 
 function y = nthroot (x, n)
 
   if (nargin != 2)
     print_usage ();
   endif
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-14  Rik  <octave@nomad.inbox5.com>
+
+	* src/mappers.cc: Add Seealso links between sqrt, cbrt, nthroot
+	functions.
+
 2011-01-14  John W. Eaton  <jwe@octave.org>
 
 	* dirfns.cc (Ffnmatch): Use DEFUNX until gnulib's fnmatch is C++
 	friendly.
 
 2011-01-14  Rik  <octave@nomad.inbox5.com>
 
 	* src/mappers.cc: Add Seealso links between erf variants to docstring.
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -349,18 +349,20 @@ Compute the inverse hyperbolic tangent f
 %!error atanh ();
 %!error atanh (1, 2);
 
 */
 
 DEFUN (cbrt, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} cbrt (@var{x})\n\
-Return the real cube root of @var{x}.  Unlike @code{@var{x}^(1/3)},\n\
-the result will be negative if @var{x} is negative.\n\
+Compute the real cube root of each element of @var{x}.\n\
+Unlike @code{@var{x}^(1/3)}, the result will be negative if @var{x} is\n\
+negative.\n\
+@seealso{nthroot}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).cbrt ();
   else
     print_usage ();
 
@@ -1647,17 +1649,17 @@ Compute the hyperbolic sine for each ele
  */
 
 DEFUN (sqrt, args, ,
     "-*- texinfo -*-\n\
 @deftypefn {Mapping Function} {} sqrt (@var{x})\n\
 Compute the square root of each element of @var{x}.  If @var{x} is negative,\n\
 a complex result is returned.  To compute the matrix square root, see\n\
 @ref{Linear Algebra}.\n\
-@seealso{realsqrt}\n\
+@seealso{realsqrt, nthroot}\n\
 @end deftypefn")
 {
   octave_value retval;
   if (args.length () == 1)
     retval = args(0).sqrt ();
   else
     print_usage ();
 
