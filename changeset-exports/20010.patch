# HG changeset patch
# User John Donoghue
# Date 1427915774 14400
#      Wed Apr 01 15:16:14 2015 -0400
# Node ID b08c13ed4a8c96822cd6530df76e135f10f767aa
# Parent  f2dea119369e426769e531948ead4c2d3d02fabf
Qt PopupMenuControl: son creation se index to Value, and dont fire callback on programatic value set (Bug #44687)

* libgui/graphics/PopupMenuControl.cc
  (PopupMenuControl::PopupMenuControl): call update to ID_VALUE
  (PopupMenuControl::update): set m_blockUpdate whilst in update for ID_VALUE

diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -51,16 +51,18 @@ PopupMenuControl::create (const graphics
 
 PopupMenuControl::PopupMenuControl (const graphics_object& go, QComboBox *box)
   : BaseControl (go, box), m_blockUpdate (false)
 {
   uicontrol::properties& up = properties<uicontrol> ();
 
   box->addItems (Utils::fromStdString (up.get_string_string ()).split ('|'));
 
+  update (uicontrol::properties::ID_VALUE);
+
   connect (box, SIGNAL (currentIndexChanged (int)),
            SLOT (currentIndexChanged (int)));
 }
 
 PopupMenuControl::~PopupMenuControl (void)
 {
 }
 
@@ -92,30 +94,32 @@ void PopupMenuControl::update (int pId)
                                                   ? 1.0 : 0.0),
                                     false);
             }
         }
       m_blockUpdate = false;
       break;
 
     case uicontrol::properties::ID_VALUE:
+      m_blockUpdate = true;
         {
           Matrix value = up.get_value ().matrix_value ();
 
           if (value.numel () > 0)
             {
               int newIndex = int (value(0)) - 1;
 
               if (newIndex >= 0 && newIndex < box->count ()
                   && newIndex != box->currentIndex ())
                 {
                   box->setCurrentIndex (newIndex);
                 }
             }
         }
+      m_blockUpdate = false;
       break;
 
     default:
       BaseControl::update (pId);
       break;
     }
 }
 
