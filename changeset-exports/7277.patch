# HG changeset patch
# User jwe
# Date 1197317679 0
#      Mon Dec 10 20:14:39 2007 +0000
# Node ID 0c733917b6c8f20bef00aa3376ee8016d72f9038
# Parent  1e8e64d71e34ba790c64925d8a54f938f26623f2
[project @ 2007-12-10 20:14:39 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2007-12-10  Michael Goffioul <michael.goffioul@gmail.com>
+
+	* plot/__line__.m: Pass initial property/value pairs to __go_line__.
+	* plot/surface.m: Pass initial property/value pairs to __go_surface__.
+
 2007-12-10  David Bateman  <dbateman@free.fr>
 
 	* image/image.m: Rewritten to allow trailing properties to be
 	passed to underlying image object.
 	* image/__img__.m: Pass additional arguments to __go_image__.
 	* plot/__patch__.m: Don't set clim, rely on autoscaling.
 
 2007-12-10  John W. Eaton  <jwe@octave.org>
diff --git a/scripts/plot/__line__.m b/scripts/plot/__line__.m
--- a/scripts/plot/__line__.m
+++ b/scripts/plot/__line__.m
@@ -42,22 +42,24 @@ function h = __line__ (p, varargin)
     num_data_args = 0;
   endif
 
   if (rem (nvargs - num_data_args, 2) == 0)
   else
     print_usage ("line");
   endif
 
-  h = __go_line__ (p);
-
+  data_args = {};
   if (num_data_args > 1)
-    set (h, "xdata", varargin{1}, "ydata", varargin{2});
+    data_args(1:4) = { "xdata", varargin{1}, "ydata", varargin{2} };
     if (num_data_args == 3)
-      set (h, "zdata", varargin{3});
+      data_args(5:6) = { "zdata", varargin{3} };
     endif
   endif
 
+  other_args = {};
   if (nvargs > num_data_args)
-    set (h, varargin{num_data_args+1:end});
+    other_args = varargin(num_data_args+1:end);
   endif
 
+  h = __go_line__ (p, data_args{:}, other_args{:});
+
 endfunction
diff --git a/scripts/plot/surface.m b/scripts/plot/surface.m
--- a/scripts/plot/surface.m
+++ b/scripts/plot/surface.m
@@ -138,21 +138,22 @@ function [h, bad_usage] = __surface__ (a
       error ("surface: argument must be a matrix");
     endif
   else
     bad_usage = true;
   endif
 
   if (! bad_usage)
     ## Make a default surface object.
-    h = __go_surface__ (ax, "xdata", x, "ydata", y, "zdata", z, "cdata", c);
-    set (h, "facecolor","flat");
+    other_args = {};
     if (firststring < nargin)
-      set (h, varargin{firststring:end});
-     endif
+      other_args = varargin(firststring:end);
+    endif
+    h = __go_surface__ (ax, "xdata", x, "ydata", y, "zdata", z, "cdata", c,
+			"facecolor","flat", other_args{:});
 
-     if (! ishold ())
-       set (ax, "view", [0, 90], "box", "off", "xgrid", "on",
-	    "ygrid", "on", "zgrid", "on");
-     endif
-   endif
+    if (! ishold ())
+      set (ax, "view", [0, 90], "box", "off", "xgrid", "on",
+	   "ygrid", "on", "zgrid", "on");
+    endif
+  endif
 
 endfunction
