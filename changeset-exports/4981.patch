# HG changeset patch
# User jwe
# Date 1094792086 0
#      Fri Sep 10 04:54:46 2004 +0000
# Node ID 0e7d04102ccfeb2eee5d739710ba3371137c6a79
# Parent  003bbf6c13d81084e8835e25e1cab0385158f389
[project @ 2004-09-10 04:54:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-09-10  John W. Eaton  <jwe@octave.org>
+
+	* ov-base-scalar.h (octave_base_scalar::clone,
+	octave_base_scalar::empty_clone): New functions.
+
 2004-09-09  John W. Eaton  <jwe@octave.org>
 
 	* pt-pr-code.h (tree_print_code::newline): New optional arg, alt_nl.
 	* pt-pr-code.cc (tree_print_code::newline): Use it if not printing
 	newlines.
 	(tree_print_code::visit_statement): If we printed ";", call
 	newline with optional arg set to "".
 	(tree_print_code::printing_newlines): New data member.
diff --git a/src/ov-base-scalar.h b/src/ov-base-scalar.h
--- a/src/ov-base-scalar.h
+++ b/src/ov-base-scalar.h
@@ -54,16 +54,19 @@ public:
   octave_base_scalar (const ST& s)
     : octave_base_value (), scalar (s) { }
 
   octave_base_scalar (const octave_base_scalar& s)
     : octave_base_value (), scalar (s.scalar) { }
 
   ~octave_base_scalar (void) { }
 
+  octave_value *clone (void) const { return new octave_base_scalar (*this); }
+  octave_value *empty_clone (void) const { return new octave_base_scalar (); }
+
   octave_value squeeze (void) const { return scalar; }
 
   octave_value subsref (const std::string& type,
 			const std::list<octave_value_list>& idx);
 
   octave_value_list subsref (const std::string&,
 			     const std::list<octave_value_list>&, int)
     {
