# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1295258322 18000
#      Mon Jan 17 04:58:42 2011 -0500
# Node ID f359cfc6e24d809c4cc1bdaaac1c5ddf19dee652
# Parent  c139672c9a2f29e2ab0a064725334e1bb92f0e22
sighandlers.cc: wait for children in octave_signal_handler, not sigchld_handler

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-17  John W. Eaton  <jwe@octave.org>
+
+	* sighandlers.cc (octave_signal_handler): Wait for children here.
+	(sigchld_handler): Not here.
+
 2011-01-16  Rik  <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/__delaunayn__.cc, DLD-FUNCTIONS/__dispatch__.cc,
 	DLD-FUNCTIONS/__dsearchn__.cc, DLD-FUNCTIONS/__glpk__.cc,
 	DLD-FUNCTIONS/__magick_read__.cc, DLD-FUNCTIONS/__pchip_deriv__.cc,
 	DLD-FUNCTIONS/__voronoi__.cc, DLD-FUNCTIONS/amd.cc,
 	DLD-FUNCTIONS/balance.cc, DLD-FUNCTIONS/besselj.cc,
 	DLD-FUNCTIONS/bsxfun.cc, DLD-FUNCTIONS/ccolamd.cc,
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -109,17 +109,32 @@ octave_signal_handler (void)
       if (octave_signals_caught[i])
         {
           octave_signals_caught[i] = false;
 
           switch (i)
             {
 #ifdef SIGCHLD
             case SIGCHLD:
-              octave_child_list::reap ();
+              {
+                volatile octave_interrupt_handler saved_interrupt_handler
+                  = octave_ignore_interrupts ();
+
+                sigset_t set, oset;
+
+                BLOCK_CHILD (set, oset);
+
+                octave_child_list::wait ();
+
+                octave_set_interrupt_handler (saved_interrupt_handler);
+
+                UNBLOCK_CHILD (oset);
+
+                octave_child_list::reap ();
+              }
               break;
 #endif
 
             case SIGFPE:
               std::cerr << "warning: floating point exception -- trying to return to prompt" << std::endl;
               break;
 
 #ifdef SIGPIPE
@@ -222,35 +237,19 @@ generic_sig_handler (int sig)
 }
 
 // Handle SIGCHLD.
 
 #ifdef SIGCHLD
 static void
 sigchld_handler (int /* sig */)
 {
-  volatile octave_interrupt_handler saved_interrupt_handler
-     = octave_ignore_interrupts ();
-
-  sigset_t set, oset;
-
-  BLOCK_CHILD (set, oset);
+  octave_signal_caught = 1;
 
-  if (octave_child_list::wait ())
-    {
-      // The status of some child changed.
-
-      octave_signal_caught = 1;
-
-      octave_signals_caught[SIGCHLD] = true;
-    }
-
-  octave_set_interrupt_handler (saved_interrupt_handler);
-
-  UNBLOCK_CHILD (oset);
+  octave_signals_caught[SIGCHLD] = true;
 }
 #endif /* defined(SIGCHLD) */
 
 #ifdef SIGFPE
 #if defined (__alpha__)
 static void
 sigfpe_handler (int /* sig */)
 {
