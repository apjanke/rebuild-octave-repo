# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1268298952 -3600
#      Thu Mar 11 10:15:52 2010 +0100
# Node ID a8869743d9fe4aed95471a45a1264cce1ffd0d7c
# Parent  2516ca5763e980169d585bc739ac95928caa1b18
optimize strchr

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-03-11  Jaroslav Hajek  <highegg@gmail.com>
+
+	* strings/strchr.m: Optimize.
+
 2010-03-05  Soren Hauberg  <hauberg@gmail.com>
 
 	* pkg/pkg.m (write_index): include classes in autogenerated INDEX files.
 
 2010-03-05  Soren Hauberg  <hauberg@gmail.com>
 
 	* plot/fplot.m: Ensure that 'limits' is a 2 or 4 vector, and that 'fn' is a
 	function.
diff --git a/scripts/strings/strchr.m b/scripts/strings/strchr.m
--- a/scripts/strings/strchr.m
+++ b/scripts/strings/strchr.m
@@ -28,16 +28,32 @@
 ##
 ## @seealso{find}
 ## @end deftypefn
 
 function varargout = strchr (str, chars, varargin)
   if (nargin < 2 || ! ischar (str) || ! ischar (chars))
     print_usage ();
   endif
-  f = false (1, 256);
-  f(chars + 1) = true;
+  if (isempty (chars))
+    mask = false (size (str));
+  elseif (length (chars) <= 6)
+    ## With a few characters, it pays off to build the mask incrementally.
+    ## We do it via a for loop to save memory.
+    mask = str == chars(1);
+    for i = 2:length (chars)
+      mask |= str == chars(i);
+    endfor
+  else
+    ## Index the str into a mask of valid values. This is slower than it could be
+    ## because of the +1 issue.
+    f = false (1, 256);
+    f(chars + 1) = true;
+    si = uint32 (str); # default goes via double - unnecessarily long.
+    ++si; # in-place
+    mask = reshape (f(si), size (str));
+  endif
   varargout = cell (1, nargout);
   varargout{1} = [];
-  [varargout{:}] = find (reshape (f(str + 1), size (str)), varargin{:});
+  [varargout{:}] = find (mask, varargin{:});
 endfunction 
 
 %!assert(strchr("Octave is the best software","best"),[3, 6, 9, 11, 13, 15, 16, 17, 18, 20, 23, 27])
