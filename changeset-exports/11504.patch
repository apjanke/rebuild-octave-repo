# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294907301 18000
#      Thu Jan 13 03:28:21 2011 -0500
# Node ID 81ff63e43f54126b999753104024c077ab400603
# Parent  b3f511c48b14dba0a99e3d6b548d0534ce9505e8
really make destuctors virtual in ODE/DAE base classes

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,30 +1,32 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* DAE.h (DAE::~DAE): Now virtual.
+	* DAERT.h (DAERT::~DAERT): Likewise.
+	* ODE.h (ODE::~ODE): Likewise.
+	* DAEFunc.h (DAEFunc::~DAEFunc): Likewise.
+	* DAERTFunc.h (DAEFunc::~DAEFunc): Likewise.
+	* ODEFunc.h (ODE::~ODE): Likewise.
+	* ODESFunc.h (ODESFunc::~ODESFunc): Likewise.
+
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* idx-vector.h (idx_vector_rep::idx_vector_rep,
 	idx_vector::idx_mask_rep::idx_mask_rep):
 	Initialize all data members in initialization lists.
 
 	* idx-vector.cc (idx_vector::idx_scalar_rep::idx_scalar_rep):
 	Initialize data in member initialization list.
 	(class idx_base_rep, class idx_colon_rep, class idx_range_rep,
 	class idx_scalar_rep, class idx_vector_rep, class idx_mask_rep):
 	Don't allow assignment.
 
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
-	* DAE.h (DAE::~DAE): Now virtual.
-	* DAERT.h (DAERT::~DAERT): Likewise.
-	* ODE.h (ODE::~ODE): Likewise.
-	* DAEFunc.h (DAEFunc::~DAEFunc): Likewise.
-	* DAERTFunc.h (DAEFunc::~DAEFunc): Likewise.
-	* ODEFunc.h (ODE::~ODE): Likewise.
-	* ODESFunc.h (ODESFunc::~ODESFunc): Likewise.
-
 	* LSODE.h (class LSODE): Delete pointer data members.
 	(LSODE::LSODE): Initialize all data members in initialization lists.
 	* LSODE.cc (LSODE::integrate): Extract pointers to data from
 	array data members at each call.
 
 	* DASPK.h (class DASPK): Delete pointer data members.
 	(DASPK::DASPK): Initialize all data members in initialization lists.
 	* DASPK.cc (DASPK::integrate): Extract pointers to data from
diff --git a/liboctave/DAE.h b/liboctave/DAE.h
--- a/liboctave/DAE.h
+++ b/liboctave/DAE.h
@@ -51,12 +51,12 @@ public:
       if (this != &a)
         {
           base_diff_alg_eqn::operator = (a);
           DAEFunc::operator = (a);
         }
       return *this;
     }
 
-  ~DAE (void) { }
+  virtual ~DAE (void) { }
 };
 
 #endif
diff --git a/liboctave/DAEFunc.h b/liboctave/DAEFunc.h
--- a/liboctave/DAEFunc.h
+++ b/liboctave/DAEFunc.h
@@ -62,17 +62,17 @@ public:
         {
           fun = a.fun;
           jac = a.jac;
           reset = a.reset;
         }
       return *this;
     }
 
-  ~DAEFunc (void) { }
+  virtual ~DAEFunc (void) { }
 
   DAERHSFunc function (void) const { return fun; }
 
   DAEFunc& set_function (DAERHSFunc f)
     {
       fun = f;
       reset = true;
       return *this;
diff --git a/liboctave/DAERT.h b/liboctave/DAERT.h
--- a/liboctave/DAERT.h
+++ b/liboctave/DAERT.h
@@ -51,17 +51,17 @@ public:
         {
           base_diff_alg_eqn::operator = (a);
           DAERTFunc::operator = (a);
 
         }
       return *this;
     }
 
-  ~DAERT (void) { }
+  virtual ~DAERT (void) { }
 
   void initialize (const ColumnVector& xx, const ColumnVector& xxdot,
                    double tt)
     {
       base_diff_alg_eqn::initialize (xx, xxdot, tt);
     }
 };
 
diff --git a/liboctave/DAERTFunc.h b/liboctave/DAERTFunc.h
--- a/liboctave/DAERTFunc.h
+++ b/liboctave/DAERTFunc.h
@@ -56,17 +56,17 @@ public:
         {
           DAEFunc::operator = (a);
           constr = a.constr;
           reset = a.reset;
         }
       return *this;
     }
 
-  ~DAERTFunc (void) { }
+  virtual ~DAERTFunc (void) { }
 
   DAERTConstrFunc constraint_function (void) const { return constr; }
 
   DAERTFunc& set_constraint_function (DAERTConstrFunc cf)
     {
       constr = cf;
       reset = true;
       return *this;
diff --git a/liboctave/ODE.h b/liboctave/ODE.h
--- a/liboctave/ODE.h
+++ b/liboctave/ODE.h
@@ -46,17 +46,17 @@ public:
       if (this != &a)
         {
           base_diff_eqn::operator = (a);
           ODEFunc::operator = (a);
         }
       return *this;
     }
 
-  ~ODE (void) { }
+  virtual ~ODE (void) { }
 
   // Derived classes must provide functions to actually do the
   // integration.
 
   // Return the vector of states at output time t.
   virtual ColumnVector do_integrate (double tt) = 0;
 
   // Return a matrix of states at each output time specified by t.
diff --git a/liboctave/ODEFunc.h b/liboctave/ODEFunc.h
--- a/liboctave/ODEFunc.h
+++ b/liboctave/ODEFunc.h
@@ -53,17 +53,17 @@ public:
         {
           fun = a.fun;
           jac = a.jac;
           reset = a.reset;
         }
       return *this;
     }
 
-  ~ODEFunc (void) { }
+  virtual ~ODEFunc (void) { }
 
   ODERHSFunc function (void) const { return fun; }
 
   ODEFunc& set_function (ODERHSFunc f)
     {
       fun = f;
       reset = true;
       return *this;
diff --git a/liboctave/ODESFunc.h b/liboctave/ODESFunc.h
--- a/liboctave/ODESFunc.h
+++ b/liboctave/ODESFunc.h
@@ -66,17 +66,17 @@ public:
         {
           fsub = a.fsub;
           bsub = a.bsub;
           jsub = a.jsub;
         }
       return *this;
     }
 
-  ~ODESFunc (void) { }
+  virtual ~ODESFunc (void) { }
 
   ODES_fsub fsub_function (void) const { return fsub; }
 
   ODESFunc& set_fsub_function (ODES_fsub f)
     {
       fsub = f;
       return *this;
     }
