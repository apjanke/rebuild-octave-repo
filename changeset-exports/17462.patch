# HG changeset patch
# User Rik <rik@octave.org>
# Date 1379951719 25200
#      Mon Sep 23 08:55:19 2013 -0700
# Node ID 177147bf7b55e53c19e2c4340c277f7b9a9162af
# Parent  dea415e4216ddc2d7e2761968cfafa1d14283a73
Overhaul use of __pltopt__.m to correctly check for cellstr, not just cell.

* scripts/plot/private/__pltopt__.m: Use modern coding conventions.  Eliminate
unneeded input checking in subfunctions.  Remove unused variables.

* scripts/plot/contourf.m, scripts/plot/feather.m, scripts/plot/plotmatrix.m,
scripts/plot/private/__bar__.m, scripts/plot/private/__quiver__.m,
scripts/plot/private/__scatter__.m, scripts/plot/private/__stem__.m,
scripts/plot/stairs.m: Use iscellstr, not iscell, to properly validate inputs
to __pltopt__.

diff --git a/scripts/plot/contourf.m b/scripts/plot/contourf.m
--- a/scripts/plot/contourf.m
+++ b/scripts/plot/contourf.m
@@ -67,17 +67,17 @@ function [c, h] = contourf (varargin)
   oldfig = [];
   if (! isempty (hax))
     oldfig = get (0, "currentfigure");
   endif
   unwind_protect
     hax = newplot (hax);
     
     [ctmp, htmp] = __contour__ (hax, "none", "fill", "on",
-                                "linecolor", "black", varargin{:});
+                                     "linecolor", "black", varargin{:});
   unwind_protect_cleanup
     if (! isempty (oldfig))
       set (0, "currentfigure", oldfig);
     endif
   end_unwind_protect
 
   if (nargout > 0)
     c = ctmp;
diff --git a/scripts/plot/feather.m b/scripts/plot/feather.m
--- a/scripts/plot/feather.m
+++ b/scripts/plot/feather.m
@@ -66,17 +66,17 @@ function retval = feather (varargin)
     u = varargin{1}(:).';
     v = varargin{2}(:).';
   endif
 
   line_spec = "b-";
   have_line_spec = false;
   while (ioff <= nargin)
     arg = varargin{ioff++};
-    if ((ischar (arg) || iscell (arg)) && ! have_line_spec)
+    if ((ischar (arg) || iscellstr (arg)) && ! have_line_spec)
       [linespec, valid] = __pltopt__ ("feather", arg, false);
       if (valid)
         line_spec = arg;
         have_line_spec = false;
         break;
       else
         error ("feather: invalid linespec");
       endif
diff --git a/scripts/plot/plotmatrix.m b/scripts/plot/plotmatrix.m
--- a/scripts/plot/plotmatrix.m
+++ b/scripts/plot/plotmatrix.m
@@ -124,17 +124,17 @@ function plotmatrixdelete (h, d, ax)
 endfunction
 
 function [h, ax, p, pax] = __plotmatrix__ (bigax, varargin)
   have_line_spec = false;
   have_hist = false;
   parent = get (bigax, "parent");
   for i = 1 : nargin - 1
     arg = varargin{i};
-    if (ischar (arg) || iscell (arg))
+    if (ischar (arg) || iscellstr (arg))
       [linespec, valid] = __pltopt__ ("plotmatrix", varargin{i}, false);
       if (valid)
         have_line_spec = true;
         linespec = varargin(i);
         varargin(i) = [];
         nargin = nargin - 1;
         break;
       else
diff --git a/scripts/plot/private/__bar__.m b/scripts/plot/private/__bar__.m
--- a/scripts/plot/private/__bar__.m
+++ b/scripts/plot/private/__bar__.m
@@ -68,17 +68,17 @@ function varargout = __bar__ (vertical, 
   while (idx <= nargs)
     if (ischar (varargin{idx}) && strcmpi (varargin{idx}, "grouped"))
       group = true;
       idx++;
     elseif (ischar (varargin{idx}) && strcmpi (varargin{idx}, "stacked"))
       group = false;
       idx++;
     else
-      if ((ischar (varargin{idx}) || iscell (varargin{idx}))
+      if ((ischar (varargin{idx}) || iscellstr (varargin{idx}))
           && ! have_line_spec)
         [linespec, valid] = __pltopt__ (func, varargin{idx}, false);
         if (valid)
           have_line_spec = true;
           ## FIXME: strange parse error requires semicolon to be spaced
           ##        away from closing ']' on next line.
           newargs = [{"facecolor", linespec.color}, newargs] ;
           idx++;
diff --git a/scripts/plot/private/__pltopt__.m b/scripts/plot/private/__pltopt__.m
--- a/scripts/plot/private/__pltopt__.m
+++ b/scripts/plot/private/__pltopt__.m
@@ -84,34 +84,29 @@
 ## style.
 ## @end table
 ##
 ## The legend may be fixed to include the name of the variable
 ## plotted in some future version of Octave.
 
 ## Author: jwe
 
-function [options, valid] = __pltopt__ (caller, opt, err_on_invalid)
-
-  valid = true;
-  options =  __default_plot_options__ ();
+function [options, valid] = __pltopt__ (caller, opt, err_on_invalid = true)
 
-  if (nargin == 2)
-    err_on_invalid = true;
-  endif
+  options = __default_plot_options__ ();
+  valid = true;
+
   if (ischar (opt))
-    nel = rows (opt);
-  elseif (iscellstr (opt))
-    nel = numel (opt);
-  else
+    opt = cellstr (opt);
+  elseif (! iscellstr (opt))
     error ("__pltopt__: argument must be a character string or cell array of character strings");
   endif
-  if (ischar (opt))
-    opt = cellstr (opt);
-  endif
+
+  nel = numel (opt);
+
   for i = nel:-1:1
     [options(i), valid] = __pltopt1__ (caller, opt{i}, err_on_invalid);
     if (! err_on_invalid && ! valid)
       return;
     endif
   endfor
 
 endfunction
@@ -122,27 +117,21 @@ endfunction
 ## Adapted-By: jwe
 ## Maintainer: jwe
 
 function [options, valid] = __pltopt1__ (caller, opt, err_on_invalid)
 
   options = __default_plot_options__ ();
   valid = true;
 
-  more_opts = 1;
-
-  if (! ischar (opt))
-    return;
-  endif
-
   have_linestyle = false;
   have_marker = false;
 
   ## If called by __errplot__, extract the linestyle before proceeding.
-  if (strcmp (caller,"__errplot__"))
+  if (strcmp (caller, "__errplot__"))
     if (strncmp (opt, "#~>", 3))
       n = 3;
     elseif (strncmp (opt, "#~", 2) || strncmp (opt, "~>", 2))
       n = 2;
     elseif (strncmp (opt, "~", 1) || strncmp (opt, ">", 1)
             || strncmp (opt, "#", 1))
       n = 1;
     else
diff --git a/scripts/plot/private/__quiver__.m b/scripts/plot/private/__quiver__.m
--- a/scripts/plot/private/__quiver__.m
+++ b/scripts/plot/private/__quiver__.m
@@ -78,17 +78,17 @@ function hg = __quiver__ (varargin)
 
   have_filled = false;
   have_line_spec = false;
   args = {};
   while (ioff <= nargin)
     arg = varargin{ioff++};
     if (ischar (arg) && strcmpi (arg, "filled"))
       have_filled = true;
-    elseif ((ischar (arg) || iscell (arg))
+    elseif ((ischar (arg) || iscellstr (arg))
             && ! have_line_spec)
       [linespec, valid] = __pltopt__ ("quiver", arg, false);
       if (valid)
         have_line_spec = true;
         if (strcmp (linespec.linestyle, "none"))
           linespec.linestyle = "-";
         endif
       else
diff --git a/scripts/plot/private/__scatter__.m b/scripts/plot/private/__scatter__.m
--- a/scripts/plot/private/__scatter__.m
+++ b/scripts/plot/private/__scatter__.m
@@ -88,17 +88,17 @@ function hg = __scatter__ (varargin)
   filled = false;
   have_marker = false;
   marker = "o";
   iarg = firstnonnumeric;
   while (iarg <= nargin)
     arg = varargin{iarg++};
     if (ischar (arg) && (strcmpi (arg, "filled") || strcmpi (arg, "fill")))
       filled = true;
-    elseif ((ischar (arg) || iscell (arg)) && ! have_marker)
+    elseif ((ischar (arg) || iscellstr (arg)) && ! have_marker)
       [linespec, valid] = __pltopt__ (fcn, arg, false);
       if (valid)
         have_marker = true;
         marker = linespec.marker;
         if (strcmp (marker, "none"))
           marker = "o";
         elseif (isempty (marker))
           have_marker = false;
diff --git a/scripts/plot/private/__stem__.m b/scripts/plot/private/__stem__.m
--- a/scripts/plot/private/__stem__.m
+++ b/scripts/plot/private/__stem__.m
@@ -269,17 +269,17 @@ function [x, y, z, dofill, lc, ls, mc, m
   [lc, ls, mc, ms] = set_default_values ();
 
   args = {};
   ioff = num_numeric + 1;
   while (ioff <= nargin)
     arg = varargin{ioff++};
     if (ischar (arg) && any (strcmpi (arg, {"fill", "filled"})))
       dofill = true;
-    elseif ((ischar (arg) || iscell (arg)) && ! have_line_spec)
+    elseif ((ischar (arg) || iscellstr (arg)) && ! have_line_spec)
       [linespec, valid] = __pltopt__ (caller, arg, false);
       if (valid)
         have_line_spec = true;
         [lc, ls, mc, ms] = stem_line_spec (linespec);
       else
         args{end+1} = arg;
         if (ioff <= nargin)
           args{end+1} = varargin{ioff++};
diff --git a/scripts/plot/stairs.m b/scripts/plot/stairs.m
--- a/scripts/plot/stairs.m
+++ b/scripts/plot/stairs.m
@@ -144,17 +144,17 @@ function [h, xs, ys] = __stairs__ (doplo
 
   ridx = 3:2:len;
   xs(ridx,:) = xtmp;
   ys(ridx,:) = y(2:nr,:);
 
   have_line_spec = false;
   for i = 1:2:numel (varargin)
     arg = varargin{i};
-    if (ischar (arg) || iscell (arg))
+    if (ischar (arg) || iscellstr (arg))
       [linespec, valid] = __pltopt__ ("stairs", arg, false);
       if (valid)
         have_line_spec = true;
         varargin(i) = [];
         break;
       endif
     endif
   endfor
