# HG changeset patch
# User jwe
# Date 1125430190 0
#      Tue Aug 30 19:29:50 2005 +0000
# Node ID c2428a4b7d56da86a450416704f040cc99112cfd
# Parent  2f51d6d65fb2b1b77ec7d69c1cff8e62c0bb730d
[project @ 2005-08-30 19:29:49 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2005-08-30  John W. Eaton  <jwe@octave.org>
 
+	* ov-range.h (octave_range::permute): New function.
+
 	* ov-struct.cc (octave_struct::load_ascii,
 	octave_struct::load_binary, octave_struct::load_hdf5): Try harder
 	to read old-style files correctly.
 
 2005-08-25  David Bateman <dbateman@free.fr>
 
         * OPERATORS/op-sm-m.cc, OPERATORS/op-sm-cm.cc, OPERATORS/op-scm-m.cc,
 	OPERATORS/op-scm-cm.cc, OPERATORS/op-m-sm.cc, OPERATORS/op-m-scm.cc,
diff --git a/src/ov-range.h b/src/ov-range.h
--- a/src/ov-range.h
+++ b/src/ov-range.h
@@ -109,16 +109,19 @@ public:
   octave_value resize (const dim_vector& dv) const
     { NDArray retval = array_value (); retval.resize (dv); return retval; }
 
   size_t byte_size (void) const { return 3 * sizeof (double); }
 
   octave_value reshape (const dim_vector& new_dims) const
     { return NDArray (array_value().reshape (new_dims)); }
 
+  octave_value permute (const Array<int>& vec, bool inv = false) const
+    { return NDArray (array_value().permute (vec, inv)); }
+
   bool is_defined (void) const { return true; }
 
   bool is_constant (void) const { return true; }
 
   bool is_range (void) const { return true; }
 
   octave_value all (int dim = 0) const;
 
