# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1236943125 -3600
#      Fri Mar 13 12:18:45 2009 +0100
# Node ID b37a6c27c23f9d6185e853195bbda9226b4e1d34
# Parent  3ecbc236e2e0dc9c435e2b76667715c998fc5714
simplify repmat
* * *

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-13  Jaroslav Hajek  <highegg@gmail.com>
+
+	* general/repmat.m: Use subscript pairs rather than forming Kronecker
+	products.
+
 2009-03-11  Ben Abbott  <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Unset the {x,y,z}ticks when initializing
 	each axis. Set ticklabels when the ticklabels are empty and when
 	ticklabelmode=="manual".
 
 2009-03-11  Marco Caliari  <marco.caliari@univr.it>
 
diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -69,27 +69,31 @@ function x = repmat (a, m, n)
       ## indexing is now faster, so we use it rather than kron.
       m = rows (a); n = columns (a);
       p = idx(1); q = idx(2);
       x = reshape (a, m, 1, n, 1);
       x = x(:, ones (1, p), :, ones (1, q));
       x = reshape (x, m*p, n*q);
     endif
   else
-    aidx = size(a);
-    if (length(aidx) > length(idx))
-      idx = [idx, ones(1,length(aidx)-length(idx))];
-    elseif (length(aidx) < length(idx))
-      aidx = [aidx, ones(1,length(idx)-length(aidx))];
-    endif
-    cidx = cell (1, length (aidx));
+    aidx = size (a);
+    ## ensure matching size
+    idx(end+1:length (aidx)) = 1;
+    aidx(end+1:length (idx)) = 1;
+    ## create subscript array
+    cidx = cell (2, length (aidx));
     for i = 1:length (aidx)
-      cidx{i} = kron (ones (1, idx(i)), 1:aidx(i));
+      cidx{1,i} = ':';
+      cidx{2,i} = ones (1, idx (i));
     endfor
-    x = a (cidx{:});
+    aaidx = aidx;
+    # add singleton dims
+    aaidx(2,:) = 1;
+    a = reshape (a, aaidx(:));
+    x = reshape (a (cidx{:}), idx .* aidx);
   endif
 
 endfunction
 
 # Test various methods of providing size parameters
 %!shared x
 %! x = [1 2;3 4];
 %!assert(repmat(x, [1 1]), repmat(x, 1));
