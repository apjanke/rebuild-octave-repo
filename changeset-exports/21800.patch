# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1464823492 18000
#      Wed Jun 01 18:24:52 2016 -0500
# Node ID 0eefa882bcc7eac57058a69a67ea9044de702620
# Parent  ddd00394d4fe02673c2e7bc83ee2d7b29a4fceaa
Restore matrix width variable taken out by changeset ddd00394d4fe.

* __gnuplot_draw_axes__.m: Restore N_tup but place in the flat_interp_edge
  test used to configure color column info.  Use N_tup to pre-assign full zz
  matrix rather than extend columns.

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -1204,23 +1204,25 @@ function __gnuplot_draw_axes__ (h, plot_
         endif
 
         if (! strcmp (obj.edgecolor, "none"))
           flat_interp_edge = (strcmp (obj.edgecolor, "flat")
                               || strcmp (obj.edgecolor, "interp"));
           if (flat_interp_edge)
             scmd = "palette";
             ccol = ":($4)";
+            N_tup = 4;
           else
             if (__gnuplot_has_feature__ ("linetype"))
               scmd = "linetype";
             else
               scmd = "linestyle";
             endif
             ccol = "";
+            N_tup = 3;
           endif
 
           [style, sidx] = do_linestyle_command (obj, obj.edgecolor,
                                                 data_idx,
                                                 plot_stream);
           domeshcolumn = (strcmp (obj.meshstyle, "column")
                           || strcmp (obj.meshstyle, "both"));
           domeshrow = (strcmp (obj.meshstyle, "row")
@@ -1234,27 +1236,27 @@ function __gnuplot_draw_axes__ (h, plot_
           if (domeshrow)
             num_pass += ylen;
           endif
 
           for np = 1:num_pass
             if (np <= num_cols)
               k = np;
               yrec = ylen;
-              zz = zeros (ylen, 1);
+              zz = zeros (ylen, N_tup);
               zz(:,1) = xdat(:,k);
               zz(:,2) = ydat(:,k);
               zz(:,3) = zdat(:,k);
               if (flat_interp_edge)
                 zz(:,4) = cdat(:,k);
               endif
             else
               j = np - num_cols;
               yrec = xlen;
-              zz = zeros (xlen, 1);
+              zz = zeros (xlen, N_tup);
               zz(:,1) = xdat(j,:)';
               zz(:,2) = ydat(j,:)';
               zz(:,3) = zdat(j,:)';
               if (flat_interp_edge)
                 zz(:,4) = cdat(j,:)';
               endif
             endif
 
