# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1424531040 -3600
#      Sat Feb 21 16:04:00 2015 +0100
# Node ID c5f0df2a7291084a5473045701dfaca0c2670009
# Parent  0093b9987ee009b0518b95d631034f8f4d2611cd
fix error when entering dbcont in terminal while running a file from gui

* octave-cmd.cc (prepare_command_editor): removed obsolete function;
  (octave_cmd_exec::execute): part of prepare_command_editor moved here;
  (octave_cmd_eval::execute): part of prepare_command_editor moved here
  in changed order

* octave-cmd.h: removed obsolete function prepare_command_editor

diff --git a/libgui/src/octave-cmd.cc b/libgui/src/octave-cmd.cc
--- a/libgui/src/octave-cmd.cc
+++ b/libgui/src/octave-cmd.cc
@@ -29,57 +29,52 @@ along with Octave; see the file COPYING.
 #include "octave-cmd.h"
 
 #include "octave-qt-link.h"
 #include "cmd-edit.h"
 #include "builtin-defun-decls.h"
 #include "utils.h"
 
 
-void
-octave_cmd::prepare_command_editor (const QString& cmd)
-{
-  std::string pending_input = command_editor::get_current_line ();
-
-  command_editor::set_initial_input (pending_input);
-  command_editor::replace_line (cmd.toStdString ());
-  command_editor::redisplay ();
-  // We are executing inside the command editor event loop.  Force
-  // the current line to be returned for processing.
-}
-
-
 // ---------------------------------------------------------------------
 //  class octave_cmd_exec: executing a command
 
 void
 octave_cmd_exec::execute ()
 {
-  prepare_command_editor (_cmd);
+  std::string pending_input = command_editor::get_current_line ();
+
+  command_editor::set_initial_input (pending_input);
+  command_editor::replace_line (_cmd.toStdString ());
+  command_editor::redisplay ();
   command_editor::accept_line ();
 }
 
 
 // ---------------------------------------------------------------------
 //  class octave_cmd_eval: running a file
 
 void
 octave_cmd_eval::execute ()
 {
   QString function_name = _info.fileName ();
   function_name.chop (_info.suffix ().length () + 1);
   std::string file_path = _info.absoluteFilePath ().toStdString ();
 
-  prepare_command_editor ("");
+  std::string pending_input = command_editor::get_current_line ();
 
   if (valid_identifier (function_name.toStdString ()))
     { // valid identifier: call as function with possibility to debug
       std::string path = _info.absolutePath ().toStdString ();
       if (octave_qt_link::file_in_path (file_path, path))
           Feval (ovl (function_name.toStdString ()));
     }
   else
     { // no valid identifier: use Fsource (), no debug possible
       Fsource (ovl (file_path));
     }
 
-  command_editor::accept_line ();
+  command_editor::replace_line ("");
+  command_editor::set_initial_input (pending_input);
+  command_editor::redisplay ();
+
+  command_editor::interrupt ();
 }
diff --git a/libgui/src/octave-cmd.h b/libgui/src/octave-cmd.h
--- a/libgui/src/octave-cmd.h
+++ b/libgui/src/octave-cmd.h
@@ -31,17 +31,16 @@ along with Octave; see the file COPYING.
 class octave_cmd
 {
 public:
 
   octave_cmd () { };
   virtual ~octave_cmd () { };
 
   virtual void execute () { };
-  void prepare_command_editor (const QString& cmd);
 };
 
 
 // ---------------------------------------------------------------------
 //  class octave_cmd_exec
 
 class octave_cmd_exec : public octave_cmd
 {
