# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1330434384 18000
#      Tue Feb 28 08:06:24 2012 -0500
# Node ID 933101fd5cbbf51da303d79bcd8a55f1d262d39f
# Parent  12d13534265c08f311bc12055cab3fec5293fb76
Use file descriptor instead of a FILE pointer for OpenGL printing.
Bug # 31641.

* __init_fltk__.cc:
* gl2ps_renderer.cc (gl2ps_renderer::draw):
* gl2ps_renderer.h:

diff --git a/src/DLD-FUNCTIONS/__init_fltk__.cc b/src/DLD-FUNCTIONS/__init_fltk__.cc
--- a/src/DLD-FUNCTIONS/__init_fltk__.cc
+++ b/src/DLD-FUNCTIONS/__init_fltk__.cc
@@ -174,17 +174,17 @@ private:
       {
         valid (1);
         setup_viewport (w (), h ());
       }
 
     if (print_mode)
       {
         FILE *fp = octave_popen (print_cmd.c_str (), "w");
-        glps_renderer rend (fileno (fp), print_term);
+        glps_renderer rend (fp, print_term);
 
         rend.draw (gh_manager::get_object (number));
 
         octave_pclose (fp);
         print_mode = false;
       }
     else
       {
diff --git a/src/gl2ps-renderer.cc b/src/gl2ps-renderer.cc
--- a/src/gl2ps-renderer.cc
+++ b/src/gl2ps-renderer.cc
@@ -38,24 +38,16 @@ void
 glps_renderer::draw (const graphics_object& go)
 {
   static bool in_draw = false;
 
   if (!in_draw)
     {
       in_draw = true;
 
-      FILE *fp = fdopen (fid, "wb");
-
-      if (! fp)
-        {
-          error ("gl2ps-renderer: fdopen failed");
-          return;
-        }
-
       GLint buffsize = 0, state = GL2PS_OVERFLOW;
       GLint viewport[4];
 
       glGetIntegerv (GL_VIEWPORT, viewport);
 
       GLint gl2ps_term;
       if (term.find ("eps") != std::string::npos) gl2ps_term = GL2PS_EPS;
       else if (term.find ("pdf") != std::string::npos) gl2ps_term = GL2PS_PDF;
@@ -87,18 +79,16 @@ glps_renderer::draw (const graphics_obje
                            | GL2PS_NO_PS3_SHADING),
                           GL_RGBA, 0, NULL, 0, 0, 0,
                           buffsize, fp, "" );
 
           opengl_renderer::draw (go);
           state = gl2psEndPage ();
         }
 
-      gnulib::fclose (fp);
-
       in_draw = 0;
     }
   else
     opengl_renderer::draw (go);
 }
 
 int
 glps_renderer::alignment_to_mode (int ha, int va) const
diff --git a/src/gl2ps-renderer.h b/src/gl2ps-renderer.h
--- a/src/gl2ps-renderer.h
+++ b/src/gl2ps-renderer.h
@@ -26,18 +26,18 @@ along with Octave; see the file COPYING.
 #include "gl-render.h"
 #include "gl2ps.h"
 
 class
 OCTINTERP_API
 glps_renderer : public opengl_renderer
 {
 public:
-  glps_renderer (const int _fid, const std::string& _term)
-    : opengl_renderer () , fid (_fid), term (_term),
+  glps_renderer (FILE *_fp, const std::string& _term)
+    : opengl_renderer () , fp (_fp), term (_term),
     fontsize (), fontname () { }
 
   ~glps_renderer (void) { }
 
   void draw (const graphics_object& go);
 
 protected:
 
@@ -73,15 +73,15 @@ protected:
 
   void set_linewidth (float w)
   {
     gl2psLineWidth (w);
   }
 
 private:
   int alignment_to_mode (int ha, int va) const;
-  int fid;
+  FILE *fp;
   caseless_str term;
   double fontsize;
   std::string fontname;
 };
 
 #endif
