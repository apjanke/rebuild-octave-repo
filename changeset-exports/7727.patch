# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1208793094 14400
#      Mon Apr 21 11:51:34 2008 -0400
# Node ID c8da61051ea23e1516ac375c0ae5cad1fbde0292
# Parent  1b954fdaf4ff447a75754133506a3e2332615cc7
idx-vector.cc: fix for-loop condition

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-04-21  John W. Eaton  <jwe@octave.org>
+
+	* idx-vector.cc (IDX_VEC_REP::idx_vector_rep (const boolNDArray&)):
+	Fix for-loop condition.
+
 2008-04-19  Jaroslav Hajek <highegg@gmail.com>
 
 	* CmplxCHOL.cc, CmplxQR.cc, dbleCHOL.cc, dbleQR.cc: Fix calls to error()
 
 2008-04-16  David Bateman  <dbateman@free.fr>
 
 	* Sparse.h (Sparse<T>& operator = (Sparse<T>&)): Move definition
 	of the operator for here
diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -276,17 +276,17 @@ IDX_VEC_REP::idx_vector_rep (const boolN
       initialized = 1;
     }
   else
     {
       data = new octave_idx_type [len];
 
       octave_idx_type ntot = bnda.length ();
 
-      for (octave_idx_type i = 0, k = 0; i < ntot; i++, k < len)
+      for (octave_idx_type i = 0, k = 0; i < ntot && k < len; i++)
 	if (bnda.elem (i))
 	  data[k++] = i;
 
       dim_vector dv = bnda.dims ();
 
       orig_dims = ((dv.length () == 2 && dv(0) == 1)
 		   ? dim_vector (1, len) : orig_dims = dim_vector (len, 1));
 
