# HG changeset patch
# User jwe
# Date 848435670 0
#      Tue Nov 19 20:34:30 1996 +0000
# Node ID 1d63e820ee13135b1d70c6ad18efeb7e8ef13083
# Parent  caa21ce81913ed84d123354b49f9d7fe40bd5916
[project @ 1996-11-19 20:34:29 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 Tue Nov 19 12:01:13 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* sighandlers.cc (my_friendly_exit): If we are called twice, try
+	to remove the signal handler for SIGABRT and the call abort ().
+
 	* help.cc (Ftype): If a function is defined from a file and
 	transformed text has not been requested, just print the contents
 	of the file.
 
 	* parse.y (fold): New functions for constant folding for binary
 	and unary expressions.  Keep track of original text even when
 	transformations occur.
 	(make_binary_op, make_boolean_op, make_unary_op): Use them.
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -19,17 +19,19 @@ along with Octave; see the file COPYING.
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <cstdlib>
 #include <csignal>
+
 #include <new>
 
 #include <iostream.h>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
@@ -83,21 +85,38 @@ octave_restore_signal_mask (void)
 #if defined (HAVE_POSIX_SIGNALS)
   sigprocmask (SIG_SETMASK, &octave_signal_mask, 0);
 #endif
 }
 
 static void
 my_friendly_exit (const char *sig_name, int sig_number)
 {
-  error ("%s -- stopping myself...", sig_name);
+  static bool been_there_done_that = false;
+
+  if (been_there_done_that)
+    {
+#ifdef SIGABRT
+      octave_set_signal_handler (SIGABRT, SIG_DFL);
+#endif
+
+      error ("attempted clean up seems to have failed -- aborting...");
 
-  save_user_variables ();
+      abort ();
+    }
+  else
+    {
+      been_there_done_that = true;
 
-  clean_up_and_exit (sig_number);
+      error ("%s -- stopping myself...", sig_name);
+
+      save_user_variables ();
+
+      clean_up_and_exit (sig_number);
+    }
 }
 
 // I know, not really a signal handler.
 
 static void
 octave_new_handler (void)
 {
   error ("memory exhausted -- trying to return to prompt");
