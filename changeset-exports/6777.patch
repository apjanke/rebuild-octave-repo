# HG changeset patch
# User dbateman
# Date 1184776372 0
#      Wed Jul 18 16:32:52 2007 +0000
# Node ID 4775fc1aa728a52a25d66f572140e737b0a6b371
# Parent  d388a35a9481b1141ee4de5d2905766035e0d44a
[project @ 2007-07-18 16:32:51 by dbateman]

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -142,9 +142,14 @@ Summary of important user-visible change
     to
 
       [status, output] = system (cmd);
 
  ** For compatibility with Matlab, normcdf, norminv, normpdf, and
     normrnd have been modified to compute distributions using the
     standard deviation instead of the variance.
 
+ ** For compatibility with Matlab, gamcdf, gaminv, gampdf, gamrnd,
+    expcdf, expinv, exppdf and exprnd have been modified to compute 
+    the distributions using the standard scale factor rather than
+    one over the scale factor.
+
 See NEWS.2 for old news.
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,23 @@
+2007-07-18  David Bateman  <dbateman@free.fr>
+
+        * statistics/distributions/gamcdf.m, statistics/distributions/gaminv.m,
+        statistics/distributions/gampdf.m, statistics/distributions/gamrnd.m,
+        statistics/distributions/expcdf.m, statistics/distributions/expinv.m,
+        statistics/distributions/exppdf.m, statistics/distributions/exprnd.m:
+        Use standard scale factor rather than one on the scale factor for
+        compatibility.
+
+        * deprecated/gamma_cdf.m, deprecated/gamma_inv.m,
+        deprecated/gamma_pdf.m, deprecated/gamma_rnd.m,  
+        deprecated/exponential_cdf.m, deprecated/exponential_inv.m,
+        deprecated/exponential_pdf.m, deprecated/exponential_rnd.m:
+        Preserve backward compatibility.
+
 2007-07-17  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* pkg/pkg.m (pkg:installed_packages): Use findstr rather than regexp
 	to avoid issues with regexp special characters in the path strings.
 
 2007-07-06  David Bateman  <dbateman@free.fr>
 
         * general/accumarray.m: New function to create an array by 
diff --git a/scripts/deprecated/exponential_cdf.m b/scripts/deprecated/exponential_cdf.m
--- a/scripts/deprecated/exponential_cdf.m
+++ b/scripts/deprecated/exponential_cdf.m
@@ -26,11 +26,15 @@
 ## The arguments can be of common size or scalar.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: CDF of the exponential distribution
 
 function cdf = exponential_cdf (varargin)
 
+ if (nargin > 1)
+   varargin{2} = 1 ./ varargin{2};
+ endif
+
  cdf =  expcdf (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/exponential_inv.m b/scripts/deprecated/exponential_inv.m
--- a/scripts/deprecated/exponential_inv.m
+++ b/scripts/deprecated/exponential_inv.m
@@ -24,11 +24,15 @@
 ## @var{lambda}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Quantile function of the exponential distribution
 
 function inv = exponential_inv (varargin)
 
+ if (nargin > 1)
+   varargin{2} = 1 ./ varargin{2};
+ endif
+
  inv =  expinv (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/exponential_pdf.m b/scripts/deprecated/exponential_pdf.m
--- a/scripts/deprecated/exponential_pdf.m
+++ b/scripts/deprecated/exponential_pdf.m
@@ -23,11 +23,15 @@
 ## (PDF) of the exponential distribution with parameter @var{lambda}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: PDF of the exponential distribution
 
 function pdf = exponential_pdf (varargin)
 
+ if (nargin > 1)
+   varargin{2} = 1 ./ varargin{2};
+ endif
+
  pdf =  exppdf (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/exponential_rnd.m b/scripts/deprecated/exponential_rnd.m
--- a/scripts/deprecated/exponential_rnd.m
+++ b/scripts/deprecated/exponential_rnd.m
@@ -29,11 +29,15 @@
 ## the size of @var{lambda}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Random deviates from the exponential distribution
 
 function rnd = exponential_rnd (varargin)
 
+ if (nargin > 0)
+   varargin{1} = 1 ./ varargin{1};
+ endif
+
  rnd =  exprnd (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/gamma_cdf.m b/scripts/deprecated/gamma_cdf.m
--- a/scripts/deprecated/gamma_cdf.m
+++ b/scripts/deprecated/gamma_cdf.m
@@ -24,11 +24,15 @@
 ## @var{a} and @var{b}.
 ## @end deftypefn
 
 ## Author: TT <Teresa.Twaroch@ci.tuwien.ac.at>
 ## Description: CDF of the Gamma distribution
 
 function cdf = gamma_cdf (varargin)
 
+ if (nargin > 2)
+   varargin{3} = 1 ./ varargin{3};
+ endif
+
  cdf =  gamcdf (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/gamma_inv.m b/scripts/deprecated/gamma_inv.m
--- a/scripts/deprecated/gamma_inv.m
+++ b/scripts/deprecated/gamma_inv.m
@@ -24,11 +24,15 @@
 ## and @var{b}. 
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Quantile function of the Gamma distribution
 
 function inv = gamma_inv (varargin)
 
+ if (nargin > 2)
+   varargin{3} = 1 ./ varargin{3};
+ endif
+
  inv =  gaminv (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/gamma_pdf.m b/scripts/deprecated/gamma_pdf.m
--- a/scripts/deprecated/gamma_pdf.m
+++ b/scripts/deprecated/gamma_pdf.m
@@ -24,11 +24,15 @@
 ## and @var{b}.
 ## @end deftypefn
 
 ## Author: TT <Teresa.Twaroch@ci.tuwien.ac.at>
 ## Description: PDF of the Gamma distribution
 
 function pdf = gamma_pdf (varargin)
 
+ if (nargin > 2)
+   varargin{3} = 1 ./ varargin{3};
+ endif
+
  pdf =  gampdf (varargin{:});
 
 endfunction
diff --git a/scripts/deprecated/gamma_rnd.m b/scripts/deprecated/gamma_rnd.m
--- a/scripts/deprecated/gamma_rnd.m
+++ b/scripts/deprecated/gamma_rnd.m
@@ -29,11 +29,15 @@
 ## the common size of @var{a} and @var{b}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Description: Random deviates from the Gamma distribution
 
 function rnd = gamma_rnd (varargin)
 
+ if (nargin > 1)
+   varargin{2} = 1 ./ varargin{2};
+ endif
+
  rnd =  gamrnd (varargin{:});
 
 endfunction
diff --git a/scripts/statistics/distributions/expcdf.m b/scripts/statistics/distributions/expcdf.m
--- a/scripts/statistics/distributions/expcdf.m
+++ b/scripts/statistics/distributions/expcdf.m
@@ -58,17 +58,17 @@ function cdf = expcdf (x, l)
   k = find ((x == Inf) & (l > 0));
   if (any (k))
     cdf(k) = 1;
   endif
 
   k = find ((x > 0) & (x < Inf) & (l > 0));
   if (any (k))
     if isscalar (l)
-      cdf (k) = 1 - exp (- l .* x(k));
+      cdf (k) = 1 - exp (- x(k) ./ l);
     elseif isscalar (x)
-      cdf (k) = 1 - exp (- l(k) .* x);
+      cdf (k) = 1 - exp (- x ./ l(k));
     else
-      cdf (k) = 1 - exp (- l(k) .* x(k));
+      cdf (k) = 1 - exp (- x(k) ./ l(k));
     endif
   endif
 
 endfunction
diff --git a/scripts/statistics/distributions/expinv.m b/scripts/statistics/distributions/expinv.m
--- a/scripts/statistics/distributions/expinv.m
+++ b/scripts/statistics/distributions/expinv.m
@@ -56,18 +56,18 @@ function inv = expinv (x, l)
   k = find ((x == 1) & (l > 0));
   if (any (k))
     inv(k) = Inf;
   endif
 
   k = find ((x > 0) & (x < 1) & (l > 0));
   if (any (k))
     if isscalar (l)
-      inv(k) = - log (1 - x(k)) ./ l;
+      inv(k) = - l .* log (1 - x(k));
     elseif isscalar (x)
-      inv(k) = - log (1 - x) ./ l(k);
+      inv(k) = - l(k) .* log (1 - x);
     else
-      inv(k) = - log (1 - x(k)) ./ l(k);
+      inv(k) = - l(k) .* log (1 - x(k));
     endif
   endif
 
 endfunction
 
diff --git a/scripts/statistics/distributions/exppdf.m b/scripts/statistics/distributions/exppdf.m
--- a/scripts/statistics/distributions/exppdf.m
+++ b/scripts/statistics/distributions/exppdf.m
@@ -49,17 +49,17 @@ function pdf = exppdf (x, l)
   k = find (!(l > 0) | isnan (x));
   if (any (k))
     pdf(k) = NaN;
   endif
 
   k = find ((x > 0) & (x < Inf) & (l > 0));
   if (any (k))
     if isscalar (l)
-      pdf(k) = l .* exp (- l .* x(k));
+      pdf(k) = exp (- x(k) ./ l) ./ l;
     elseif isscalar (x)
-      pdf(k) = l(k) .* exp (- l(k) .* x);
+      pdf(k) = exp (- x ./ l(k)) ./ l(k);
     else
-      pdf(k) = l(k) .* exp (- l(k) .* x(k));
+      pdf(k) = exp (- x(k) ./ l(k)) ./ l(k);
     endif
   endif
 
 endfunction
diff --git a/scripts/statistics/distributions/exprnd.m b/scripts/statistics/distributions/exprnd.m
--- a/scripts/statistics/distributions/exprnd.m
+++ b/scripts/statistics/distributions/exprnd.m
@@ -64,25 +64,25 @@ function rnd = exprnd (l, r, c)
     sz = size (l);
   else
     print_usage ();
   endif
 
 
   if (isscalar (l))
     if ((l > 0) && (l < Inf))
-      rnd = rande(sz) / l;
+      rnd = rande(sz) * l;
     else
       rnd = NaN * ones (sz);
     endif
   else
     rnd = zeros (sz);
     k = find (!(l > 0) | !(l < Inf));
     if (any (k))
       rnd(k) = NaN;
     endif
     k = find ((l > 0) & (l < Inf));
     if (any (k))
-      rnd(k) = rande(size(k)) / l(k);
+      rnd(k) = rande(size(k)) .* l(k);
     endif
   endif
 
 endfunction
diff --git a/scripts/statistics/distributions/gamcdf.m b/scripts/statistics/distributions/gamcdf.m
--- a/scripts/statistics/distributions/gamcdf.m
+++ b/scripts/statistics/distributions/gamcdf.m
@@ -47,15 +47,15 @@ function cdf = gamcdf (x, a, b)
   k = find (!(a > 0) | !(b > 0) | isnan (x));
   if (any (k))
     cdf (k) = NaN;
   endif
 
   k = find ((x > 0) & (a > 0) & (b > 0));
   if (any (k))
     if (isscalar (a) && isscalar(b))
-      cdf (k) = gammainc (b * x(k), a);
+      cdf (k) = gammainc (x(k) ./ b, a);
     else
-      cdf (k) = gammainc (b(k) .* x(k), a(k));
+      cdf (k) = gammainc (x(k) ./ b(k), a(k));
     endif
   endif
 
 endfunction
diff --git a/scripts/statistics/distributions/gaminv.m b/scripts/statistics/distributions/gaminv.m
--- a/scripts/statistics/distributions/gaminv.m
+++ b/scripts/statistics/distributions/gaminv.m
@@ -54,19 +54,19 @@ function inv = gaminv (x, a, b)
     inv (k) = Inf;
   endif
 
   k = find ((x > 0) & (x < 1) & (a > 0) & (b > 0));
   if (any (k))
     if (!isscalar(a) || !isscalar(b))
       a = a (k);
       b = b (k);
-      y = a ./ b;
+      y = a .* b;
     else
-      y = a / b * ones (size (k));
+      y = a * b * ones (size (k));
     endif
     x = x (k);
     l = find (x < eps);
     if (any (l))
       y(l) = sqrt (eps) * ones (length (l), 1);
     endif
 
     y_old = y;
diff --git a/scripts/statistics/distributions/gampdf.m b/scripts/statistics/distributions/gampdf.m
--- a/scripts/statistics/distributions/gampdf.m
+++ b/scripts/statistics/distributions/gampdf.m
@@ -47,28 +47,28 @@ function pdf = gampdf (x, a, b)
   k = find (!(a > 0) | !(b > 0) | isnan (x));
   if (any (k))
     pdf (k) = NaN;
   endif
 
   k = find ((x > 0) & (a > 0) & (a <= 1) & (b > 0));
   if (any (k))
     if (isscalar(a) && isscalar(b))
-      pdf(k) = ((b .^ a) .* (x(k) .^ (a - 1))
-		.* exp(-b .* x(k)) ./ gamma (a));
+      pdf(k) = (x(k) .^ (a - 1)) ...
+		.* exp(- x(k) ./ b) ./ gamma (a) ./ (b .^ a);
     else
-      pdf(k) = ((b(k) .^ a(k)) .* (x(k) .^ (a(k) - 1))
-		.* exp(-b(k) .* x(k)) ./ gamma (a(k)));
+      pdf(k) = (x(k) .^ (a(k) - 1)) ...
+		.* exp(- x(k) ./ b(k)) ./ gamma (a(k)) ./ (b(k) .^ a(k));
     endif
   endif
 
   k = find ((x > 0) & (a > 1) & (b > 0));
   if (any (k))
     if (isscalar(a) && isscalar(b))
-      pdf(k) = exp (a .* log (b) + (a-1) .* log (x(k))
-		    - b .* x(k) - gammaln (a));
+      pdf(k) = exp (- a .* log (b) + (a-1) .* log (x(k))
+		    - x(k) ./ b - gammaln (a));
     else
-      pdf(k) = exp (a(k) .* log (b(k)) + (a(k)-1) .* log (x(k))
-		    - b(k) .* x(k) - gammaln (a(k)));
+      pdf(k) = exp (- a(k) .* log (b(k)) + (a(k)-1) .* log (x(k))
+		    - x(k) ./ b(k) - gammaln (a(k)));
     endif
   endif
 
 endfunction
diff --git a/scripts/statistics/distributions/gamrnd.m b/scripts/statistics/distributions/gamrnd.m
--- a/scripts/statistics/distributions/gamrnd.m
+++ b/scripts/statistics/distributions/gamrnd.m
@@ -77,22 +77,22 @@ function rnd = gamrnd (a, b, r, c)
   endif
 
   rnd = zeros (sz);
 
   if (isscalar (a) && isscalar(b))
     if (find (!(a > 0) | !(a < Inf) | !(b > 0) | !(b < Inf)))
       rnd = NaN * ones (sz);
     else
-      rnd = randg(a,sz)/b;
+      rnd = b .* randg(a, sz);
     endif
   else 
     k = find (!(a > 0) | !(a < Inf) | !(b > 0) | !(b < Inf));
     if (any (k))
       rnd(k) = NaN;
     endif
     k = find ((a > 0) & (a < Inf) & (b > 0) & (b < Inf));
     if (any (k))
-      rnd(k) = randg(a(k),size(k))/b(k);
+      rnd(k) = b(k) .* randg(a(k), size(k));
     endif
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2007-07-18  David Bateman  <dbateman@free.fr>
+
+         * zfstream.cc (int_type gzfilebuf::pbackfail (int_type)): New
+         method to putback a character when the putback position in the
+         internal buffer doesn't exist.
+         * zfstream.h (int_type pbackfail (int_type)): Declaration it.
+
 2007-07-14  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* src/ov-bool-sparse.cc (octave_sparse_bool_matrix:load_hdf5):
 	Use OCTAVE_LOCAL_BUFFER for temporary boolean value.
 	
 2007-06-27  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/sparse.cc (Fspdiag): Ensure spdiag(zeros(1,0)) returns
diff --git a/src/zfstream.cc b/src/zfstream.cc
--- a/src/zfstream.cc
+++ b/src/zfstream.cc
@@ -202,16 +202,57 @@ gzfilebuf::showmanyc()
     return -1;
   // Make sure get area is in use
   if (this->gptr() && (this->gptr() < this->egptr()))
     return std::streamsize(this->egptr() - this->gptr());
   else
     return 0;
 }
 
+// Puts back a character to the stream in two cases. Firstly, when there
+// is no putback position available, and secondly when the character putback
+// differs from the one in the file. We can only support the first case 
+// with gzipped files.
+gzfilebuf::int_type
+gzfilebuf::pbackfail (gzfilebuf::int_type c)
+{
+  if (this->is_open())
+    {
+      if (gzseek (file, this->gptr() - this->egptr() - 1, SEEK_CUR) < 0)
+	return traits_type::eof();
+  
+      // Invalidates contents of the buffer
+      enable_buffer ();
+
+      // Attempt to fill internal buffer from gzipped file
+      // (buffer must be guaranteed to exist...)
+      int bytes_read = gzread(file, buffer, buffer_size);
+      // Indicates error or EOF
+      if (bytes_read <= 0)
+	{
+	  // Reset get area
+	  this->setg(buffer, buffer, buffer);
+	  return traits_type::eof();
+	}
+
+      // Make all bytes read from file available as get area
+      this->setg(buffer, buffer, buffer + bytes_read);
+
+      // If next character in get area differs from putback character
+      // flag a failure
+      gzfilebuf::int_type ret = traits_type::to_int_type(*(this->gptr()));
+      if (ret != c)
+	return traits_type::eof();
+      else
+	return ret;
+    }
+  else
+    return traits_type::eof();
+}
+
 // Fill get area from gzipped file
 gzfilebuf::int_type
 gzfilebuf::underflow()
 {
   // If something is left in the get area by chance, return it
   // (this shouldn't normally happen, as underflow is only supposed
   // to be called when gptr >= egptr, but it serves as error check)
   if (this->gptr() && (this->gptr() < this->egptr()))
diff --git a/src/zfstream.h b/src/zfstream.h
--- a/src/zfstream.h
+++ b/src/zfstream.h
@@ -189,16 +189,19 @@ protected:
    *  @brief  Alters the stream positions.
    *
    *  Each derived class provides its own appropriate behavior.
    */
   virtual pos_type
   seekpos(pos_type sp, std::ios_base::openmode mode = 
 	  std::ios_base::in|std::ios_base::out);
 
+  virtual int_type
+  pbackfail (int_type c = traits_type::eof());
+
 //
 // Some future enhancements
 //
 //  virtual int_type uflow();
 //  virtual int_type pbackfail(int_type c = traits_type::eof());
 
 private:
   /**
