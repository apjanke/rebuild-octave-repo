# HG changeset patch
# User jwe
# Date 779215505 0
#      Sat Sep 10 16:45:05 1994 +0000
# Node ID 6b0f16bede57d1b53260a27e6c71d43604c7bf12
# Parent  184be2d66a061cfb17f2511cdc6ebc07458574c6
[project @ 1994-09-10 16:45:05 by jwe]

diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -17,17 +17,17 @@ include $(TOPDIR)/Makeconf
 DISTFILES = BUGS COPYING INSTALL INSTALL.OCTAVE Makefile.in \
 	Makeconf.in NEWS PROJECTS README README.NLP SENDING-PATCHES \
 	THANKS f2c-compat.sh flibs.sh configure configure.in \
 	config.guess config.sub float-type.c move-if-change octave.sh \
 	octave-mode.el install.sh doinstall.sh mkpath.c config.h.in \
 	acconfig.h MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
-DISTDIRS = bsd-math dld
+DISTDIRS = bsd-math dld kpathsea
 
 # Subdirectories to run make in for the primary targets.
 SUBDIRS = libcruft liboctave @DLD_DIR@ info readline src doc scripts 
 
 # Subdirectories to run `make dist' in
 DISTSUBDIRS = $(SUBDIRS) test
 
 BINDISTFILES = COPYING ChangeLog NEWS README THANKS INSTALL.OCTAVE \
@@ -51,16 +51,20 @@ mkpath:
 libcruft:
 	cd libcruft ; $(MAKE) all
 .PHONY: libcruft
 
 liboctave:
 	cd liboctave ; $(MAKE) all
 .PHONY: liboctave
 
+kpathsea:
+	cd kpathsea ; $(MAKE) all
+.PHONY: kpathsea
+
 dld:
 	cd dld ; $(MAKE) all
 .PHONY: dld
 
 info:
 	cd info ; $(MAKE) all
 .PHONY: info
 
@@ -92,17 +96,16 @@ INSTALL.info:
 	cd doc ; $(MAKE) ../INSTALL.OCTAVE
 .PHONY: INSTALL.info
 
 BUGS.info:
 	cd doc ; $(MAKE) ../BUGS
 .PHONY: BUGS.info
 
 install:
-	echo $(DIRS_TO_MAKE)
 	for dir in $(DIRS_TO_MAKE) ; do \
 	  if test -d $$dir ; then true ; else ./mkpath $$dir ; fi ; \
 	done
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
 .PHONY: install
 
 uninstall:
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
@@ -132,82 +135,114 @@ distclean: clean
 realclean:
 	for dir in $(SUBDIRS); do echo making $@ in $$dir; cd $$dir; $(MAKE) $@; cd ..; done
 	rm -f *.a Makefile config.status
 .PHONY: realclean
 
 # Now that things are under RCS control, we need to do the recursive
 # chmod so that the distributed files end up with reasonable modes.
 
-local-dist: octave.info INSTALL.info BUGS.info
-	echo octave-local-$(version) > .fname
-	rm -rf `cat .fname`
-	mkdir `cat .fname`
-	ln $(DISTFILES) `cat .fname`
-	for dir in $(DISTDIRS); do ln -s ../$$dir `cat .fname`; done
-	for dir in $(DISTSUBDIRS); do mkdir `cat .fname`/$$dir; cd $$dir; $(MAKE) $@; cd ..; done
-	tar chf `cat .fname`.tar `cat .fname`
-	rm -rf `cat .fname`
+# Shared rules for making clean tar files.
+
+clean-tar:
 	tar xf `cat .fname`.tar
+	find `cat .fname` \( -name RCS -a -type d \) -o -name '*~' \
+		-o -name '#*#' -exec rm -rf {} \;
 	chmod -R a+rwX `cat .fname`
 	tar cf `cat .fname`.tar `cat .fname`
-.PHONY: local-dist
+	rm -rf `cat .fname` .fname
+.PHONY: clean-tar
+
+# Rules for making a source distribution.
 
 links-for-dist: octave.info INSTALL.info BUGS.info
 	echo octave-$(version) > .fname
 	rm -rf `cat .fname`
 	mkdir `cat .fname`
 	ln $(DISTFILES) `cat .fname`
 	for dir in $(DISTDIRS); do ln -s ../$$dir `cat .fname`; done
 	for dir in $(DISTSUBDIRS); do mkdir `cat .fname`/$$dir; cd $$dir; $(MAKE) dist; cd ..; done
 .PHONY: links-for-dist
 
+dist-tar: links-for-dist
+	tar chf `cat .fname`.tar `cat .fname`
+	rm -rf `cat .fname`
+.PHONY: dist-tar
+
+clean-dist-tar: dist-tar
+	$(MAKE) clean-tar
+.PHONY: clean-dist-tar
+
+dist: clean-dist-tar
+.PHONY: dist
+
+# Rules for making a binary distribution.
+
 links-for-bin-dist: octave.info INSTALL.info BUGS.info
 	echo octave-$(version) > .fname
 	rm -rf `cat .fname`
 	mkdir `cat .fname`
 	ln $(BINDISTFILES) `cat .fname`
 	for dir in $(BINDISTSUBDIRS); do mkdir `cat .fname`/$$dir; cd $$dir; $(MAKE) dist; cd ..; done
 .PHONY: links-for-dist
 
-binary-dist: links-for-bin-dist .fname
+bin-dist-tar: links-for-bin-dist
 	strip src/octave
 	ln src/octave `cat .fname`/octave
 	tar chf `cat .fname`.tar `cat .fname`
 	rm -rf `cat .fname`
-	tar xf `cat .fname`.tar
-	chmod -R a+rwX `cat .fname`
-	tar cf `cat .fname`.tar `cat .fname`
-	rm -rf `cat .fname` .fname
+.PHONY: bin-dist-tar
+
+clean-bin-dist-tar: bin-dist-tar
+	$(MAKE) clean-tar
+.PHONY: clean-bin-dist-tar
+
+binary-dist: clean-bin-dist-tar
 .PHONY: binary-dist
 
-dist: links-for-dist
-	tar chf `cat .fname`.tar `cat .fname`
-	rm -rf `cat .fname`
-	tar xf `cat .fname`.tar
-	chmod -R a+rwX `cat .fname`
-	tar cf `cat .fname`.tar `cat .fname`
-	rm -rf `cat .fname` .fname
-.PHONY: dist
+# Rules for making a distribution of the docs.
 
-doc-dist:
+doc-dist-tar:
 	echo octave-$(version) > .fname
 	echo octave-doc-$(version).tar > .tarfname
 	rm -rf `cat .fname`
 	mkdir `cat .fname`
 	ln README.doc COPYING `cat .fname`
 	mkdir `cat .fname`/doc; cd doc; $(MAKE) doc-dist
 	tar chf `cat .tarfname` `cat .fname`
 	rm -rf `cat .fname`
-	tar xf `cat .tarfname`
-	chmod -R a+rwX `cat .fname`
-	tar cf `cat .tarfname` `cat .fname`
-	rm -rf `cat .fname` .fname
+.PHONY: doc-dist-tar
+
+clean-doc-dist-tar: doc-dist-tar
+	$(MAKE) clean-tar
+.PHONY: clean-doc-dist-tar
+
+doc-dist: clean-doc-dist-tar
 .PHONY: doc-dist
 
+# Rules for making a distribution for local use.
+
+local-dist-tar: octave.info INSTALL.info BUGS.info
+	echo octave-local-$(version) > .fname
+	rm -rf `cat .fname`
+	mkdir `cat .fname`
+	ln $(DISTFILES) `cat .fname`
+	for dir in $(DISTDIRS); do ln -s ../$$dir `cat .fname`; done
+	for dir in $(DISTSUBDIRS); do mkdir `cat .fname`/$$dir; cd $$dir; $(MAKE) $@; cd ..; done
+	tar chf `cat .fname`.tar `cat .fname`
+	rm -rf `cat .fname`
+.PHONY: local-dist-tar
+
+clean-local-dist-tar: local-dist-tar
+	$(MAKE) clean-tar
+.PHONY: clean-local-dist-tar
+
+local-dist: clean-local-dist-tar
+.PHONY: local-dist
+
 dist-z:
 	echo octave-$(version).tar > .fname
 	gzip --best `cat .fname`
 	rm -f .fname
 .PHONY: dist-z
 
 split-dist:
 	echo octave-$(version).tar.gz > .fname
