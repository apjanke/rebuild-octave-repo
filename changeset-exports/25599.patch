# HG changeset patch
# User Rik <rik@octave.org>
# Date 1531460157 25200
#      Thu Jul 12 22:35:57 2018 -0700
# Node ID fcfedeff926cc350c6521353074ceefffe9df749
# Parent  8090a118eb03e52ba2f6f54b72b2bddea1b10921
xerbla.c: Add missing prototypes to stop gcc warnings (bug #48505).

* liboctave/external/blas-xtra/xerbla.c: Add prototypes for
octave_set_xerbla_handler and xerbla_.

diff --git a/liboctave/external/blas-xtra/xerbla.c b/liboctave/external/blas-xtra/xerbla.c
--- a/liboctave/external/blas-xtra/xerbla.c
+++ b/liboctave/external/blas-xtra/xerbla.c
@@ -39,25 +39,34 @@ typedef void (*xerbla_handler_fptr) (voi
    directly here because this function is called by LAPACK and BLAS
    subroutines.  To build shared libraries of those packages on Windows
    requires that all symbols be known when the shared library is
    constructed.  If we call error directly, that would mean that the
    BLAS and LAPACK libraries would have to depend on Octave...  */
 
 static xerbla_handler_fptr xerbla_handler = NULL;
 
+/* Prototype to stop -Wmissing-prototypes from triggering */
+void octave_set_xerbla_handler (xerbla_handler_fptr fcn);
+
 void
 octave_set_xerbla_handler (xerbla_handler_fptr fcn)
 {
   xerbla_handler = fcn;
 }
 
 /* Replacement for BLAS and LAPACK XERBLA subroutine that calls an
    optionally installed handler function.  */
 
+/* Prototype to stop -Wmissing-prototypes from triggering */
+F77_RET_T
+F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DEF (s_arg, len),
+                           const F77_INT *info
+                           F77_CHAR_ARG_LEN_DEF (len));
+
 F77_RET_T
 F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DEF (s_arg, len),
                            const F77_INT *info
                            F77_CHAR_ARG_LEN_DEF (len))
 {
   const char *s = F77_CHAR_ARG_USE (s_arg);
   int slen = F77_CHAR_ARG_LEN_USE (s_arg, len);
 
