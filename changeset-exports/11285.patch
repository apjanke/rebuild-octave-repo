# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1290363265 18000
#      Sun Nov 21 13:14:25 2010 -0500
# Node ID 107e7476a5da4955e944145c0b72111cda9dfa90
# Parent  b9bc32327c4dd72da11bbe8706af5ba56b2a5851
cell2mat.m: Return empty matrix for empty cell.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-11-21  Ben Abbott <bpabbot@mac.com>
+
+	* general/cell2mat.m: Return empty matrix for empty cell.
+
 2010-11-21  Kai Habel  <kai.habel@gmx.de>
 
 	* (plot/uigetfile.m, plot/uiputfile.m): Set default directory to pwd
 
 2010-11-21  Kai Habel  <kai.habel@gmx.de>
 
 	* (plot/uigetdir.m, plot/uigetfile.m, plot/uiputfile.m, 
  plot/private/__fltk_file_filter__.m): New files.
diff --git a/scripts/general/cell2mat.m b/scripts/general/cell2mat.m
--- a/scripts/general/cell2mat.m
+++ b/scripts/general/cell2mat.m
@@ -33,30 +33,31 @@ function m = cell2mat (c)
   endif
 
   if (! iscell (c))
     error ("cell2mat: c is not a cell array");
   endif
   
   nb = numel (c);
 
-  ## We only want numeric, logical, and char matrices.
-  valid = cellfun (@isnumeric, c);
-  valid |= cellfun (@islogical, c);
-  valid |= cellfun (@ischar, c);
-  validc = cellfun (@iscell, c);
-  valids = cellfun (@isstruct, c);
-
-  if (! all (valid(:)) && ! all (validc(:)) && ! all (valids(:)))
-    error ("cell2mat: wrong type elements or mixed cells, structs and matrices");
-  endif
-
   if (nb == 0)
     m = [];
   else
+
+    ## We only want numeric, logical, and char matrices.
+    valid = cellfun (@isnumeric, c);
+    valid |= cellfun (@islogical, c);
+    valid |= cellfun (@ischar, c);
+    validc = cellfun (@iscell, c);
+    valids = cellfun (@isstruct, c);
+
+    if (! all (valid(:)) && ! all (validc(:)) && ! all (valids(:)))
+      error ("cell2mat: wrong type elements or mixed cells, structs and matrices");
+    endif
+
     ## The goal is to minimize the total number of cat() calls.
     ## The dimensions can be concatenated along in arbitrary order.
     ## The numbers of concatenations are:
     ## n / d1
     ## n / (d1 * d2)
     ## n / (d1 * d2 * d3)
     ## etc.
     ## This is minimized if d1 >= d2 >= d3... 
@@ -91,12 +92,13 @@ endfunction
 %! assert (cell2mat (c), m)
 %!test
 %! m = int8 (256*rand (4, 5, 6, 7, 8));
 %! c = mat2cell (m, [1 2 1], [1 2 2], [3 1 1 1], [4 1 2], [3 1 4]);
 %! assert (cell2mat (c), m)
 %!test
 %! m = {1, 2, 3};
 %! assert (cell2mat (mat2cell (m, 1, [1 1 1])), m);
+%!assert (cell2mat ({}), []);
 ## Demos
 %!demo
 %! C = {[1], [2 3 4]; [5; 9], [6 7 8; 10 11 12]};
 %! cell2mat (C)
