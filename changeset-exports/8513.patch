# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1231966057 18000
#      Wed Jan 14 15:47:37 2009 -0500
# Node ID 352d3245d4c134d568de3f2a623c36549e7a0a18
# Parent  137d6c94212f48c46e048e5f46e4f8753f462070
fsolve.m: doc fix

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,12 @@
 2009-01-14  John W. Eaton  <jwe@octave.org>
 
+	* optimization/fsolve.m: Doc fix.
+
 	* plot/__go_draw_axes__.m: Scale markersize by 1/3, not 1/6.
 
 	* io/dlmwrite.m: Use '%c' format for character data.
 
 2009-01-13  John W. Eaton  <jwe@octave.org>
 
 	* general/repmat.m: Handle negative row or column dimension.
 
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -14,35 +14,37 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 ##
 ## Author: Jaroslav Hajek <highegg@gmail.com>
 
 ## -*- texinfo -*-
-## @deftypefn{Function File} {} fsolve(@var{fcn}, @var{x0}, @var{options})
+## @deftypefn{Function File} {} fsolve (@var{fcn}, @var{x0}, @var{options})
 ## @deftypefnx{Function File} {[@var{x}, @var{fvec}, @var{info}, @var{output}, @var{fjac}]} = fsolve (@var{fcn}, @dots{})
-## Solves a system of nonlinear equations defined by the function @var{fcn}.
+## Solve a system of nonlinear equations defined by the function @var{fcn}.
 ## @var{fcn} should accepts a vector (array) defining the unknown variables,
 ## and return a vector of left-hand sides of the equations. Right-hand sides
 ## are defined to be zeros.
 ## In other words, this function attempts to determine a vector @var{X} such 
 ## that @code{@var{fcn}(@var{X})} gives (approximately) all zeros.
 ## @var{x0} determines a starting guess. The shape of @var{x0} is preserved
 ## in all calls to @var{fcn}, but otherwise it is treated as a column vector.
 ## @var{options} is a structure specifying additional options. Currently, fsolve
-## recognizes these options: FunValCheck, OutputFcn, TolX, TolFun, MaxIter,
-## MaxFunEvals and Jacobian. 
+## recognizes these options: @code{"FunValCheck"}, @code{"OutputFcn"},
+## @code{"TolX"}, @code{"TolFun"}, @code{"MaxIter"},
+## @code{"MaxFunEvals"} and @code{"Jacobian"}.
 ##
-## If Jacobian is 'on', it specifies that @var{fcn}, called with 2 output arguments,
-## also returns the Jacobian matrix of right-hand sides at the requested point.
-## TolX specifies the termination tolerance in the unknown variables, while
-## TolFun is a tolerance for equations. Default is @code{1e1*eps}
-## for TolX and @code{1e2*eps} for TolFun.
+## If @code{"Jacobian"} is @code{"on"}, it specifies that @var{fcn},
+## called with 2 output arguments, also returns the Jacobian matrix
+## of right-hand sides at the requested point.  @code{"TolX"} specifies
+## the termination tolerance in the unknown variables, while 
+## @code{"TolFun"} is a tolerance for equations. Default is @code{1e1*eps}
+## for @code{"TolX"} and @code{1e2*eps} for @code{"TolFun"}.
 ## For description of the other options, see @code{optimset}.
 ##
 ## On return, @var{fval} contains the value of the function @var{fcn}
 ## evaluated at @var{x}, and @var{info} may be one of the following values:
 ## 
 ## @table @asis
 ## @item 1
 ## Converged to a solution point. Relative residual error is less than specified
@@ -54,17 +56,17 @@
 ## @item 0
 ## Iteration limit exceeded.
 ## @item -3
 ## The trust region radius became excessively small. 
 ## @end table
 ##
 ## Note: If you only have a single nonlinear equation of one variable, using 
 ## @code{fzero} is usually a much better idea.
-## @seealso{fzero,optimset}
+## @seealso{fzero, optimset}
 ## @end deftypefn
 
 function [x, fvec, info, output, fjac] = fsolve (fcn, x0, options)
 
   if (nargin < 3)
     options = struct ();
   endif
 
