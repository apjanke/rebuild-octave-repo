# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1514928550 21600
#      Tue Jan 02 15:29:10 2018 -0600
# Node ID a2569d574ae5d4946b8a06d8f0e0b9919c6a57d8
# Parent  d8ed90ecd4fdfaa529464091fa60d0b1efaca212
Add a help entry and documentation for @ character (bug #52771).

expr.txi: Add sub-node "Access via Handle" to the "Calling Functions" node.
  Don't indent a paragraph that refers to the previous example.  Provide the
  body for the "Access via Handle" node and include an '@' opindex entry
  qualified by "function handle".  Mention that '@' is also used for class
  methods and reference the "Object Oriented Programming" chapter.

oop.txi: Add an opindex reference to '@' qualified by "class methods" so a
  quick index link is created.

op-kw-docs: Create an operator index entry for '@'.  Mention that '@' is also
  used for class methods and suggest seeing the "Object Oriented Programming"
  chapter of the manual.

octave.texi: Add sub-node "Access via Handle" to sub-menu list.

diff --git a/doc/interpreter/expr.txi b/doc/interpreter/expr.txi
--- a/doc/interpreter/expr.txi
+++ b/doc/interpreter/expr.txi
@@ -383,16 +383,17 @@ assigns the three result matrices to @co
 
 The left side of a multiple assignment expression is itself a list of
 expressions, and is allowed to be a list of variable names or index
 expressions.  See also @ref{Index Expressions}, and @ref{Assignment Ops}.
 
 @menu
 * Call by Value::
 * Recursion::
+* Access via Handle::
 @end menu
 
 @node Call by Value
 @subsection Call by Value
 
 In Octave, unlike Fortran, function arguments are passed by value, which
 means that each argument in a function call is evaluated and assigned to
 a temporary location in memory before being passed to the function.
@@ -478,27 +479,74 @@ function retval = fact (n)
     retval = n * fact (n-1);
   else
     retval = 1;
   endif
 endfunction
 @end group
 @end example
 
+@noindent
 This function is recursive because it calls itself directly.  It
 eventually terminates because each time it calls itself, it uses an
 argument that is one less than was used for the previous call.  Once the
 argument is no longer greater than zero, it does not call itself, and
 the recursion ends.
 
 The built-in variable @code{max_recursion_depth} specifies a limit to
 the recursion depth and prevents Octave from recursing infinitely.
 
 @DOCSTRING(max_recursion_depth)
 
+@node Access via Handle
+@subsection Access via Handle
+@cindex function handle
+@cindex indirect function call
+
+@opindex @@ function handle
+A function may be abstracted and referenced via a function handle acquired
+using the special operator @samp{@@}.  For example,
+
+@example
+@group
+f = @@plus;
+f (2, 2)
+@result{}  4
+@end group
+@end example
+
+@noindent
+is equivalent to calling @code{plus (2, 2)} directly.  Beyond abstraction for
+general programming, function handles find use in callback methods for figures
+and graphics by adding listeners to properties or assigning pre-existing
+actions, such as in the following example:
+
+@cindex figure deletefcn
+@example
+@group
+function mydeletefcn (h, ~, msg)
+  printf (msg);
+endfunction
+sombrero;
+set (gcf, "deletefcn", @{@@mydeletefcn, "Bye!\n"@});
+close;
+@end group
+@end example
+
+@noindent
+The above will print "Bye!" to the terminal upon the closing (deleting) of the
+figure.  There are many graphics property actions for which a callback function
+may be assigned, including, @code{buttondownfcn}, @code{windowscrollwheelfcn},
+@code{createfcn}, @code{deletefcn}, @code{keypressfcn}, etc.
+
+Note that the @samp{@@} character also plays a role in defining class
+functions, i.e., methods, but not as a syntactical element.  Rather it begins a
+directory name containing methods for a class that shares the directory name
+sans the @samp{@@} character.  See @ref{Object Oriented Programming}.
+
 @node Arithmetic Ops
 @section Arithmetic Operators
 @cindex arithmetic operators
 @cindex operators, arithmetic
 @cindex addition
 @cindex subtraction
 @cindex multiplication
 @cindex matrix multiplication
diff --git a/doc/interpreter/octave.texi b/doc/interpreter/octave.texi
--- a/doc/interpreter/octave.texi
+++ b/doc/interpreter/octave.texi
@@ -354,16 +354,17 @@ Expressions
 Index Expressions
 
 * Advanced Indexing::
 
 Calling Functions
 
 * Call by Value::
 * Recursion::
+* Access via Handle::
 
 Boolean Expressions
 
 * Element-by-element Boolean Operators::
 * Short-circuit Boolean Operators::
 
 Evaluation
 
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -76,16 +76,17 @@ where
 a0, a1, etc.@: are real scalars.
 @end ifnottex
 Thus the polynomial can be represented by a vector
 
 @example
 a = [a0, a1, a2, @dots{}, an];
 @end example
 
+@opindex @@ class methods
 This is a sufficient specification to begin writing the constructor for the
 polynomial class.  All object oriented classes in Octave must be located in a
 directory that is the name of the class prepended with the @samp{@@} symbol.
 For example, the polynomial class will have all of its methods defined in the
 @file{@@polynomial} directory.
 
 The constructor for the class must be the name of the class itself; in this
 example the constructor resides in the file @file{@@polynomial/polynomial.m}.
diff --git a/libinterp/op-kw-docs b/libinterp/op-kw-docs
--- a/libinterp/op-kw-docs
+++ b/libinterp/op-kw-docs
@@ -378,16 +378,36 @@ Element by element logical 'or' operator
 @end deftypefn
 ||
 @c libinterp/parse-tree/oct-parse.in.yy
 -*- texinfo -*-
 @deftypefn {} {} ||
 Logical 'or' (with short-circuit evaluation) operator.
 @seealso{|, or}
 @end deftypefn
+@
+@c libinterp/parse-tree/oct-parse.in.yy
+-*- texinfo -*-
+@deftypefn {} {} @@
+Return handle to a function.
+
+Example:
+
+@example
+@group
+f = @@plus;
+f (2, 2)
+@result{}  4
+@end group
+@end example
+
+(Note: @@ also finds use in creating classes.  See manual chapter titled
+Object Oriented Programming for detailed description.)
+@seealso{function, functions, func2str, str2func}
+@end deftypefn
 break
 @c libinterp/parse-tree/oct-parse.in.yy
 -*- texinfo -*-
 @deftypefn {} {} break
 Exit the innermost enclosing do, while, or for loop.
 @seealso{do, while, for, parfor, continue}
 @end deftypefn
 case
