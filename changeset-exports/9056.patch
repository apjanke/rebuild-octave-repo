# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1238301121 14400
#      Sun Mar 29 00:32:01 2009 -0400
# Node ID b06dc393ac42d1addef37829fd57e7cfce6e0fa2
# Parent  8651fcc895560265560f25498a4cccc2b72b5253
print.m: For eps output the bounding box should represent the figure's position.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-29  Ben Abbott <bpabbott@mac.com>
+
+	* plot/print.m: For eps output the bounding box should represent the
+	figure's position.
+
 2009-03-28  Ben Abbott <bpabbott@mac.com>
 
 	* plot/gnuplot_drawnow.m: Always set figure property "__plot_stream__"
 	to the active gnuplot steam. Permits __gnuplot_get_var__ to return to
 	proper result for all gnuplot streams.
 
 2009-03-27  Ben Abbott <bpabbott@mac.com>
 
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -423,39 +423,46 @@ function print (varargin)
     endif
     figure_properties = get (gcf);
     if (! isfield (figure_properties, "__pixels_per_inch__"))
       addproperty ("__pixels_per_inch__", gcf, "double", resolution);
     endif
     set (gcf, "__pixels_per_inch__", resolution)
 
     unwind_protect
-      if (! isempty (size))
-        size_in_pixels = sscanf (size ,"%d, %d");
-        size_in_pixels = reshape (size_in_pixels, [1, numel(size_in_pixels)]);
-        size_in_inches = size_in_pixels ./ resolution;
+      if (! isempty (size) || any (strfind (dev, "eps") == 1))
         p.paperunits = get (gcf, "paperunits");
         p.papertype = get (gcf, "papertype");
         p.papersize = get (gcf, "papersize");
         p.paperposition = get (gcf, "paperposition");
         p.paperpositionmode = get (gcf, "paperpositionmode");
         set (gcf, "paperunits", "inches");
+        if (any (strfind (dev, "eps") == 1))
+          paperposition_in_inches = get (gcf, "paperposition") + 1/72;
+          paperposition_in_inches(1:2) = 0;
+          papersize_in_inches = paperposition_in_inches(3:4);
+        else
+          size_in_pixels = sscanf (size ,"%d, %d");
+          size_in_pixels = reshape (size_in_pixels, [1, numel(size_in_pixels)]);
+          papersize_in_inches = size_in_pixels ./ resolution;
+          paperposition_in_inches = [0, 0, papersize_in_inches];
+        endif
         set (gcf, "papertype", "<custom>");
-        set (gcf, "papersize", size_in_inches);
-        set (gcf, "paperposition", [0, 0, size_in_inches]);
+        set (gcf, "papersize", papersize_in_inches);
+        set (gcf, "paperposition", paperposition_in_inches);
         set (gcf, "paperpositionmode", "manual");
       endif
       if (debug)
         drawnow (new_terminal, name, mono, debug_file);
       else
         drawnow (new_terminal, name, mono);
       endif
     unwind_protect_cleanup
-      ## FIXME - it would be preferred to delete the added properties here.
-      if (! isempty (size))
+      ## FIXME - it would be nice to delete "__pixels_per_inch__" property here.
+      if (! isempty (size) || any (strfind (dev, "eps") == 1))
         props = fieldnames (p);
         for n = 1:numel(props)
           set (gcf, props{n}, p.(props{n}))
         endfor
       endif
     end_unwind_protect
 
     if (! isempty (convertname))
