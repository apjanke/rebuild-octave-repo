# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1381536289 14400
#      Fri Oct 11 20:04:49 2013 -0400
# Node ID 482222fe5b35c051215d5d5cbf4d7303f777e537
# Parent  e693b2622f7205b998f630b51a06a314236de167
use QTextBrowser instead of QWebView to display community news

* configure.ac: Don't check for QtWebKit.
* news-dock-widget.h, news-dock-widget.cc (news_dock_widget):
Use QTextBrowser to display news.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2618,26 +2618,26 @@ QT_LIBS=
 win32_terminal=no
 build_gui=yes
 AC_ARG_ENABLE([gui],
   [AS_HELP_STRING([--disable-gui], [don't build the GUI])],
   [if test "$enableval" = no; then build_gui=no; fi], [])
 
 if test $build_gui = yes; then
   ## Check for Qt libraries
-  PKG_CHECK_MODULES(QT, [QtCore, QtGui, QtNetwork, QtWebKit],
+  PKG_CHECK_MODULES(QT, [QtCore, QtGui, QtNetwork],
     [],
     [AC_MSG_WARN([Qt libraries not found -- disabling GUI])
      build_gui=no])
 
   if test $build_gui = yes; then
     ## Retrieve Qt compilation and linker flags
-    QT_CPPFLAGS="`$PKG_CONFIG --cflags-only-I QtCore QtGui QtNetwork QtWebKit`"
-    QT_LDFLAGS="`$PKG_CONFIG --libs-only-L QtCore QtGui QtNetwork QtWebKit`"
-    QT_LIBS="`$PKG_CONFIG --libs-only-l QtCore QtGui QtNetwork QtWebKit`"
+    QT_CPPFLAGS="`$PKG_CONFIG --cflags-only-I QtCore QtGui QtNetwork`"
+    QT_LDFLAGS="`$PKG_CONFIG --libs-only-L QtCore QtGui QtNetwork`"
+    QT_LIBS="`$PKG_CONFIG --libs-only-l QtCore QtGui QtNetwork`"
 
     ## Check for Qt4
     if ! `$PKG_CONFIG --atleast-version=4.0.0 QtCore`; then
       AC_MSG_WARN([Qt >= 4.0.0 not found -- disabling GUI])
       build_gui=no
     fi
   fi
 
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -35,18 +35,16 @@ along with Octave; see the file COPYING.
 #include <QStyle>
 #include <QToolBar>
 #include <QDesktopServices>
 #include <QDesktopWidget>
 #include <QFileDialog>
 #include <QMessageBox>
 #include <QIcon>
 
-#include <QWebView>
-
 #include <utility>
 
 #ifdef HAVE_QSCINTILLA
 #include "file-editor.h"
 #endif
 #include "main-window.h"
 #include "settings-dialog.h"
 
diff --git a/libgui/src/news-dock-widget.cc b/libgui/src/news-dock-widget.cc
--- a/libgui/src/news-dock-widget.cc
+++ b/libgui/src/news-dock-widget.cc
@@ -21,55 +21,55 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
 
-#include <QVBoxLayout>
 #include <QThread>
 
 #include "news-dock-widget.h"
 
 #include "Array.h"
 #include "str-vec.h"
 #include "url-transfer.h"
 
 #include "version.h"
 
 news_dock_widget::news_dock_widget (QWidget *p)
-  : octave_dock_widget (p), news_browser (new QWebView (p))
+  : octave_dock_widget (p), browser (new QTextBrowser (this))
 {
-  news_browser->setObjectName ("OctaveNews");
-
   setObjectName ("NewsDockWidget");
   setWindowIcon (QIcon (":/icons/logo.png"));
   set_title (tr ("Community News"));
 
-  setWidget (news_browser);
+  browser->setObjectName ("OctaveNews");
+  browser->setOpenExternalLinks (true);
+
+  setWidget (browser);
 
   load_news ();
 }
 
 void
 news_dock_widget::load_news (void)
 {
   QString base_url = "http://octave.org";
   QString page = "community-news.html";
 
   QThread *worker_thread = new QThread;
 
   news_reader *reader = new news_reader (base_url, page);
 
   reader->moveToThread (worker_thread);
 
-  connect (reader, SIGNAL (display_news_signal (const QString&, const QUrl&)),
-           this, SLOT (display_news (const QString&, const QUrl&)));
+  connect (reader, SIGNAL (display_news_signal (const QString&)),
+           this, SLOT (display_news (const QString&)));
 
   connect (worker_thread, SIGNAL (started (void)), reader, SLOT (process ()));
 
   connect (reader, SIGNAL (finished (void)), worker_thread, SLOT (quit ()));
 
   connect (reader, SIGNAL (finished (void)), reader, SLOT (deleteLater ()));
 
   connect (worker_thread, SIGNAL (finished (void)),
@@ -94,27 +94,27 @@ For the latest news, please check\n\
 when you have a connection to the web.\n\
 </p>\n\
 <p>\n\
 <small><em>&mdash; The Octave Developers, " OCTAVE_RELEASE_DATE "</em></small>\n\
 </body>\n\
 </html>\n";
 
 void
-news_dock_widget::display_news (const QString& news, const QUrl& base_url)
+news_dock_widget::display_news (const QString& news)
 {
   if (news.contains ("this-is-the-gnu-octave-community-news-page"))
     {
-      news_browser->setHtml (news, base_url);
+      browser->setHtml (news);
 
       if (news.contains ("critical-news-event") && ! isVisible ())
         setVisible (true);
     }
   else
-    news_browser->setHtml (fixed_news);
+    browser->setHtml (fixed_news);
 }
 
 void
 news_reader::process (void)
 {
   // Run this part in a separate thread so Octave can continue to run
   // while we wait for the page to load.  Then emit the signal to
   // display it when we have the page contents.
@@ -126,12 +126,12 @@ news_reader::process (void)
   Array<std::string> param;
   octave_dot_org.http_get (param);
 
   QString html_text;
 
   if (octave_dot_org.good ())
     html_text = QString::fromStdString (buf.str ());
 
-  emit display_news_signal (html_text, QUrl (base_url));
+  emit display_news_signal (html_text);
 
   emit finished ();
 }
diff --git a/libgui/src/news-dock-widget.h b/libgui/src/news-dock-widget.h
--- a/libgui/src/news-dock-widget.h
+++ b/libgui/src/news-dock-widget.h
@@ -18,38 +18,37 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef NEWSDOCKWIDGET_H
 #define NEWSDOCKWIDGET_H
 
-#include <QBasicTimer>
-#include <QWebView>
+#include <QTextBrowser>
 
 #include "octave-dock-widget.h"
 
 class news_dock_widget : public octave_dock_widget
 {
   Q_OBJECT
 
 public:
 
   news_dock_widget (QWidget *parent = 0);
 
   void load_news (void);
 
 protected slots:
 
-  void display_news (const QString& news, const QUrl& base_url);
+  void display_news (const QString& news);
 
 private:
 
-  QWebView *news_browser;
+  QTextBrowser *browser;
 };
 
 class news_reader : public QObject
 {
   Q_OBJECT
  
 public:
 
@@ -57,17 +56,17 @@ public:
     : QObject (), base_url (xbase_url), page (xpage) { }
  
 public slots:
 
     void process (void);
  
 signals:
 
-  void display_news_signal (const QString& news, const QUrl& base_url);
+  void display_news_signal (const QString& news);
 
   void finished (void);
  
 private:
 
   QString base_url;
   QString page;
 };
