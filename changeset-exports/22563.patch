# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1475096225 18000
#      Wed Sep 28 15:57:05 2016 -0500
# Branch stable
# Node ID b828361c8949b994d80e8dcfb8d6dda4907a54fc
# Parent  27f2a7a3b55d71f4d0b3df5cdab9d876128cacc6
Use a common function for color scaling in gnuplot toolkit (bug #49130)

* __gnuplot_draw_axes__.m: Remove code lines that set 'colormap', 'clim' and
  'climmode' properties of graphics objects (post logical data bug fix).
  Replace all color data transformations and associated conditional code with
  a function call to mapcdata().
  (mapcdata): Added.  Pay careful attention to data class for proper scaling
  and clamping arithmetic under various scenarios.  In true-color case, apply
  an inverse mapping of gnuplot's cbrange formula which also applies to RGB
  images (bug fix).

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -473,19 +473,16 @@ function __gnuplot_draw_axes__ (h, plot_
     kids1 = kids;
     while (! isempty (kids1))
       obj = get (kids1(end));
       kids1 = kids1(1:(end-1));
 
       switch (obj.type)
         case {"image"}
           if (isfield (obj, "cdata") && islogical (obj.cdata))
-            set (axis_obj.parent, "colormap", [0 0 0; 1 1 1]);
-            set (h, "clim", [0 1]);
-            set (h, "climmode", "manual");
             parent_figure_obj.colormap = [0 0 0; 1 1 1];
             axis_obj.clim = [0 1];
             axis_obj.climmode = "manual";
             break;
           endif
 
         case "hggroup"
           ## Push group children into the kid list.
@@ -548,30 +545,20 @@ function __gnuplot_draw_axes__ (h, plot_
     endif
 
     if (strcmp (get (obj.parent, "type"), "hggroup"))
       obj.displayname = get (obj.parent, "displayname");
     endif
 
     switch (obj.type)
       case "image"
-        img_data = obj.cdata;
+        img_data = mapcdata (obj.cdata, obj.cdatamapping, clim, cmap_sz);
         img_xdata = obj.xdata;
         img_ydata = obj.ydata;
 
-        if (ndims (img_data) != 3)
-          if (islogical (img_data))
-            img_data += 1;
-          else
-            if (strcmp (obj.cdatamapping, "scaled"))
-              img_data = 1 + fix (cmap_sz*(img_data-clim(1))/(clim(2)-clim(1)));
-            endif
-            img_data = max (1, min (img_data, cmap_sz));
-          endif
-        endif
         data_idx += 1;
         is_image_data(data_idx) = true;
         parametric(data_idx) = false;
         have_cdata(data_idx) = false;
         have_3d_patch(data_idx) = false;
 
         if (img_xdata(2) < img_xdata(1))
           img_xdata = img_xdata(2:-1:1);
@@ -783,61 +770,41 @@ function __gnuplot_draw_axes__ (h, plot_
                               || columns (obj.cdata) == 3)))
                     ccol = cdat(i, :);
                   elseif (ndims (obj.cdata) == 3)
                     ccol = permute (cdat (:, i, :), [1, 3, 2]);
                   else
                     ccol = cdat;
                   endif
                   if (strcmp (obj.facecolor, "flat"))
+                    ccdat = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                     if (isequal (size (ccol), [1, 3]))
                       ## RGB Triplet
                       color = ccol;
                     elseif (nd == 3 && numel (xcol) == 3)
-                      if (strcmp (obj.cdatamapping, "scaled"))
-                        ccdat = 1 + fix (cmap_sz*(ccol-clim(1))/(clim(2)-clim(1)));
-                      else
-                        ccdat = ccol;
-                      endif
-                      ccdat = max (1, min (ccdat, cmap_sz));
+                      color = cmap(ccdat(1), :);
                     else
-                      if (strcmp (obj.cdatamapping, "direct"))
-                        r = round (ccol);
-                      else
-                        r = 1 + fix (cmap_sz*(ccol-clim(1))/(clim(2)-clim(1)));
-                      endif
-                      r = max (1, min (r, cmap_sz));
-                      color = cmap(r, :);
+                      color = cmap(ccdat, :);
                     endif
                   elseif (strcmp (obj.facecolor, "interp"))
                     if (nd == 3 && numel (xcol) == 3)
                       ccdat = ccol;
                       if (! isvector (ccdat))
                         tmp = cmap_sz + rows (addedcmap) + ...
                              [1 : rows(ccdat)];
                         addedcmap = [addedcmap; ccdat];
                         ccdat = tmp(:);
                       else
-                        if (strcmp (obj.cdatamapping, "scaled"))
-                          ccdat = 1 + fix (cmap_sz*(ccdat(:)-clim(1))/(clim(2)-clim(1)));
-                        else
-                          ccdat = ccdat(:);
-                        endif
-                        ccdat = max (1, min (ccdat, cmap_sz));
+                        ccdat = mapcdata (ccdat(:), obj.cdatamapping, clim, cmap_sz);
                       endif
                     else
                       if (sum (diff (ccol)))
                         warning ("\"interp\" not supported, using 1st entry of cdata");
                       endif
-                      if (strcmp (obj.cdatamapping, "direct"))
-                        r = round (ccol);
-                      else
-                        r = 1 + fix (cmap_sz*(ccol-clim(1))/(clim(2)-clim(1)));
-                      endif
-                      r = max (1, min (r, cmap_sz));
+                      r = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                       color = cmap(r(1),:);
                     endif
                   endif
                 elseif (isnumeric (obj.facecolor))
                   color = obj.facecolor;
                 else
                   color = [0, 1, 0];
                 endif
@@ -922,23 +889,20 @@ function __gnuplot_draw_axes__ (h, plot_
                                 || columns (obj.cdata) == 3)))
                   ccol = cdat(i, :);
                 elseif (ndims (obj.cdata) == 3)
                   ccol = permute (cdat (:, i, :), [1, 3, 2]);
                 else
                   ccol = cdat;
                 endif
                 if (strcmp (ec, "flat"))
+                  ccol = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                   if (isequal (size (ccol), [1, 3]))
                     color = ccol;
                   else
-                    if (strcmp (obj.cdatamapping, "scaled"))
-                      ccol = 1 + fix (cmap_sz*(ccol-clim(1))/(clim(2)-clim(1)));
-                    endif
-                    ccol = max (1, min (ccol, cmap_sz));
                     if (isscalar (ccol))
                       ccol = repmat (ccol, numel (xcol), 1);
                     endif
                     color = "flat";
                     have_cdata(data_idx) = true;
                   endif
                 elseif (strcmp (ec, "interp"))
                   if (numel (ccol) == 3)
@@ -946,22 +910,17 @@ function __gnuplot_draw_axes__ (h, plot_
                     color = ccol(1,:);
                   else
                     if (isscalar (ccol))
                       ccol = repmat (ccol, numel (xcol), 1);
                     endif
                     color = "interp";
                     have_cdata(data_idx) = true;
                   endif
-                  if (strcmp (obj.cdatamapping, "direct"))
-                    ccol = round (ccol);
-                  else
-                    ccol = 1 + fix (cmap_sz*(ccol-clim(1))/(clim(2)-clim(1)));
-                  endif
-                  ccol = max (1, min (ccol, cmap_sz));
+                  ccol = mapcdata (ccol, obj.cdatamapping, clim, cmap_sz);
                 endif
               elseif (isnumeric (ec))
                 color = ec;
               else
                 color = [0, 0, 0];
               endif
             else
               color = [0, 0, 0];
@@ -1197,21 +1156,17 @@ function __gnuplot_draw_axes__ (h, plot_
                   __maybe_munge_text__ (enhanced, obj, "displayname")
                 );
           tspec = ['title "' tmp '"'];
         endif
 
         xdat = obj.xdata;
         ydat = obj.ydata;
         zdat = obj.zdata;
-        cdat = obj.cdata;
-        if (strcmp (obj.cdatamapping, "scaled"))
-          cdat = 1 + fix (cmap_sz*(cdat-clim(1))/(clim(2)-clim(1)));
-        endif
-        cdat = max (1, min (cdat, cmap_sz));
+        cdat = mapcdata (obj.cdata, obj.cdatamapping, clim, cmap_sz);
         err = false;
         if (! size_equal (zdat, cdat))
           err = true;
         endif
         if (isvector (xdat) && isvector (ydat) && ismatrix (zdat))
           if (rows (zdat) == length (ydat)
               && columns (zdat) == length (xdat))
             [xdat, ydat] = meshgrid (xdat, ydat);
@@ -2887,8 +2842,28 @@ function maybe_do_x2tick_mirror (plot_st
 
   if (! isempty(axis_obj.xtick))
     fprintf (plot_stream, "unset xtics; set x2tics %s nomirror\n",
                           axis_obj.tickdir);
   endif
 
 endfunction
 
+function retval = mapcdata (cdata, mode, clim, cmap_sz)
+  if (ndims (cdata) == 3)
+    # True color, clamp data to 8-bit
+    cdata = double (cdata);
+    cdata = uint8 (255*(cdata-clim(1))/(clim(2)-clim(1)));
+    # Scale using inverse of gnuplot's cbrange mapping
+    retval = 1 + double (cdata)*(cmap_sz-1)/255;
+  else
+    if (islogical (cdata))
+      cdata += 1;
+    elseif (strcmp (mode, "scaled"))
+      cdata = double (cdata);
+      clim = double (clim);
+      cdata = 1 + fix ((cmap_sz-1)*(cdata-clim(1))/(clim(2)-clim(1)));
+    else
+      cdata = round (cdata);
+    endif
+    retval = max (1, min (cdata, cmap_sz));
+  endif
+endfunction
