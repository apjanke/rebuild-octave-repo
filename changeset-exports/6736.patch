# HG changeset patch
# User jwe
# Date 1181943099 0
#      Fri Jun 15 21:31:39 2007 +0000
# Node ID 751f340d486c6be863a507ef65701c74bf86f218
# Parent  19e2d70e2a4cb7c22349b36dc817d36c304194eb
[project @ 2007-06-15 21:31:38 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2007-06-15  Pete Gustafson  <petegus@umich.edu>
+
+        * plot/__errplot__.m: Set ifmt from fmt.linestyle.
+        * plot/__go_draw_axes__.m: Removed undefined tx from call to
+	get_data_limits.
+        * plot/__plotopt1__.m: Intercept and strip format string when
+	called by __errplot__.
+
 2007-06-15  John W. Eaton  <jwe@octave.org>
 
 	* testfun/test.m: Also return number of expected failures.
 
 2007-06-14  John W. Eaton  <jwe@octave.org>
 
 	* set/ismember.m: Mark two tests known to fail with xtest.
 
diff --git a/scripts/plot/__errplot__.m b/scripts/plot/__errplot__.m
--- a/scripts/plot/__errplot__.m
+++ b/scripts/plot/__errplot__.m
@@ -39,18 +39,35 @@ function h = __errplot__ (fstr, p, a1, a
     print_usage ();
   endif
 
   [fmt, key] = __pltopt__ ("__errplot__", fstr);
 
   [len, nplots] = size (a1);
 
   for i = 1:nplots
-    ifmt = fmt{1+mod(i-1,numel(fmt))};
+    ## Set the plot type based on linestyle.
+    if (fmt.linestyle == "~")
+      ifmt = "yerr";
+    elseif (fmt.linestyle == ">")
+      ifmt = "xerr";
+    elseif (fmt.linestyle == "~>")
+      ifmt = "xyerr";
+    elseif (fmt.linestyle == "#")
+      ifmt = "box";
+    elseif (fmt.linestyle == "#~")
+      ifmt = "boxy";
+    elseif (fmt.linestyle == "#~>")
+      ifmt = "boxxy";
+    else
+      print_usage ();
+    endif
+
     h = __line__ (p);
+
     switch (nargin - 2)
       case 2
 	set (h, "xdata", (1:len)');
 	set (h, "ydata", a1(:,i));
 	set (h, "ldata", a2(:,i));
 	set (h, "udata", a2(:,i));
       case 3
 	set (h, "xdata", a1(:,i));
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -396,19 +396,20 @@ function __go_draw_axes__ (h, plot_strea
 		  tx = [xdat; xlo; xhi];
 		  [xmin, xmax, xminp] = get_data_limits (xmin, xmax, xminp, tx);
 		endif
 		data{data_idx} = [xdat, ydat, xlo, xhi, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4):($5):($6)";
 		withclause{data_idx} = sprintf ("with xyerrorbars linestyle %d",
 						data_idx);
 	      else
+		## Obtain the limits based on the exact x values.
 		if (xautoscale)
 		  [xmin, xmax, xminp] = get_data_limits (xmin, xmax,
-							 xminp, xdat, tx);
+							 xminp, xdat);
 		endif
 		data{data_idx} = [xdat, ydat, ylo, yhi]';
 		usingclause{data_idx} = "using ($1):($2):($3):($4)";
 		withclause{data_idx} = sprintf ("with yerrorbars linestyle %d",
 						data_idx);
 	      endif
 	    elseif (xerr)
 	      xlo = xdat-xldat;
diff --git a/scripts/plot/__pltopt1__.m b/scripts/plot/__pltopt1__.m
--- a/scripts/plot/__pltopt1__.m
+++ b/scripts/plot/__pltopt1__.m
@@ -40,16 +40,31 @@ function [options, valid] = __pltopt1__ 
 
   if (! ischar (opt))
     return;
   endif
 
   have_linestyle = false;
   have_marker = false;
 
+  ## If called by __errplot__, extract the linestyle before proceeding.
+  if (strcmp (caller,"__errplot__"))
+    if (strncmp (opt, "#~>", 3))
+      n = 3;
+    elseif (strncmp (opt, "#~", 2) || strncmp (opt, "~>", 2))
+      n = 2;
+    elseif (strncmp (opt, "~", 1) || strncmp (opt, ">", 1) 
+	    || strncmp (opt, "#", 1))
+      n = 1;
+    endif
+      options.linestyle = opt(1:n);
+      opt(1:n) = [];
+      have_linestyle = true;
+  endif
+
   while (! isempty (opt))
     if (strncmp (opt, "--", 2) || strncmp (opt, "-.", 2))
       options.linestyle = opt(1:2);
       have_linestyle = true;
       n = 2;
     else
       topt = opt(1);
       n = 1;
