# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1415053109 0
#      Mon Nov 03 22:18:29 2014 +0000
# Node ID 8b4a24081e47146e2e889a13733c9857be348422
# Parent  6c9ea5be96bfd0772723aac7db4ef2abfecd9cef
Remove redundant methods now that Matrices inherit from NDArrays.

* boolMatrix.cc, boolMatrix.h, chMatrix.cc, chMatrix.h: boolMatrix and
charMatrix are now subclasses of boolNDArray and charNDArray. They now
inherit the methods any, all, diag, and the operator = from their parent
classes.

diff --git a/liboctave/array/boolMatrix.cc b/liboctave/array/boolMatrix.cc
--- a/liboctave/array/boolMatrix.cc
+++ b/liboctave/array/boolMatrix.cc
@@ -79,26 +79,12 @@ boolMatrix::operator ! (void) const
 // other operations
 
 boolMatrix
 boolMatrix::diag (octave_idx_type k) const
 {
   return Array<bool>::diag (k);
 }
 
-// FIXME: Do these really belong here?  Maybe they should be in a base class?
-
-boolMatrix
-boolMatrix::all (int dim) const
-{
-  return do_mx_red_op<bool, bool> (*this, dim, mx_inline_all);
-}
-
-boolMatrix
-boolMatrix::any (int dim) const
-{
-  return do_mx_red_op<bool, bool> (*this, dim, mx_inline_any);
-}
-
 MM_BOOL_OPS (boolMatrix, boolMatrix)
 MS_BOOL_OPS (boolMatrix, bool)
 SM_BOOL_OPS (bool, boolMatrix)
 MM_CMP_OPS (boolMatrix, boolMatrix)
diff --git a/liboctave/array/boolMatrix.h b/liboctave/array/boolMatrix.h
--- a/liboctave/array/boolMatrix.h
+++ b/liboctave/array/boolMatrix.h
@@ -47,22 +47,16 @@ public:
   boolMatrix (const dim_vector& dv) : boolNDArray (dv) { }
 
   boolMatrix (const dim_vector& dv, bool val) : boolNDArray (dv, val) { }
 
   boolMatrix (const Array<bool>& a) : boolNDArray (a.as_matrix ()) { }
 
   boolMatrix (const boolMatrix& a) : boolNDArray (a) { }
 
-  boolMatrix& operator = (const boolMatrix& a)
-  {
-    Array<bool>::operator = (a);
-    return *this;
-  }
-
   bool operator == (const boolMatrix& a) const;
   bool operator != (const boolMatrix& a) const;
 
   boolMatrix transpose (void) const { return Array<bool>::transpose (); }
 
   // destructive insert/delete/reorder operations
 
   boolMatrix& insert (const boolMatrix& a,
@@ -71,19 +65,16 @@ public:
   // unary operations
 
   boolMatrix operator ! (void) const;
 
   // other operations
 
   boolMatrix diag (octave_idx_type k = 0) const;
 
-  boolMatrix all (int dim = -1) const;
-  boolMatrix any (int dim = -1) const;
-
 #if 0
   // i/o
 
   friend std::ostream& operator << (std::ostream& os, const Matrix& a);
   friend std::istream& operator >> (std::istream& is, Matrix& a);
 #endif
 
   void resize (octave_idx_type nr, octave_idx_type nc, bool rfv = false)
diff --git a/liboctave/array/chMatrix.cc b/liboctave/array/chMatrix.cc
--- a/liboctave/array/chMatrix.cc
+++ b/liboctave/array/chMatrix.cc
@@ -131,36 +131,16 @@ charMatrix::extract (octave_idx_type r1,
 
   for (octave_idx_type j = 0; j < new_c; j++)
     for (octave_idx_type i = 0; i < new_r; i++)
       result.elem (i, j) = elem (r1+i, c1+j);
 
   return result;
 }
 
-charMatrix
-charMatrix::diag (octave_idx_type k) const
-{
-  return Array<char>::diag (k);
-}
-
-// FIXME: Do these really belong here?  Maybe they should be in a base class?
-
-boolMatrix
-charMatrix::all (int dim) const
-{
-  return do_mx_red_op<bool, char> (*this, dim, mx_inline_all);
-}
-
-boolMatrix
-charMatrix::any (int dim) const
-{
-  return do_mx_red_op<bool, char> (*this, dim, mx_inline_any);
-}
-
 MS_CMP_OPS (charMatrix, char)
 MS_BOOL_OPS (charMatrix, char)
 
 SM_CMP_OPS (char, charMatrix)
 SM_BOOL_OPS (char, charMatrix)
 
 MM_CMP_OPS (charMatrix, charMatrix)
 MM_BOOL_OPS (charMatrix, charMatrix)
diff --git a/liboctave/array/chMatrix.h b/liboctave/array/chMatrix.h
--- a/liboctave/array/chMatrix.h
+++ b/liboctave/array/chMatrix.h
@@ -61,22 +61,16 @@ public:
 
   charMatrix (const char *s) : charNDArray (s) {}
 
   charMatrix (const std::string& s) : charNDArray (s) {}
 
   charMatrix (const string_vector& s, char fill_value = '\0')
     : charNDArray (s, fill_value) {}
 
-  charMatrix& operator = (const charMatrix& a)
-  {
-    Array<char>::operator = (a);
-    return *this;
-  }
-
   bool operator == (const charMatrix& a) const;
   bool operator != (const charMatrix& a) const;
 
   charMatrix transpose (void) const { return Array<char>::transpose (); }
 
   // destructive insert/delete/reorder operations
 
   charMatrix& insert (const char *s, octave_idx_type r, octave_idx_type c);
@@ -90,21 +84,16 @@ public:
   charMatrix extract (octave_idx_type r1, octave_idx_type c1,
                       octave_idx_type r2, octave_idx_type c2) const;
 
   void resize (octave_idx_type nr, octave_idx_type nc, char rfv = 0)
   {
     Array<char>::resize (dim_vector (nr, nc), rfv);
   }
 
-  charMatrix diag (octave_idx_type k = 0) const;
-
-  boolMatrix all (int dim = -1) const;
-  boolMatrix any (int dim = -1) const;
-
 #if 0
   // i/o
 
   friend std::ostream& operator << (std::ostream& os, const Matrix& a);
   friend std::istream& operator >> (std::istream& is, Matrix& a);
 #endif
 };
 
