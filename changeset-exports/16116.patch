# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1361895784 18000
#      Tue Feb 26 11:23:04 2013 -0500
# Node ID 67f71e2a619033632fd2afd5c16497d724a9d80e
# Parent  4f6c37cfbdcee1da9715575fbd546556cc06697b
store pointer to current lexer in flex_stream_reader object

* lex.ll (flex_stream_reader::lexer): New data member.
(flex_stream_reader::flex_stream_reader): Initialize it.
(flex_steram_reader::getc, flex_steram_reader::ungetc): Use it.
(lexical_feedback::process_comment): Pass "this" to flex_stream_reader
constructor.

diff --git a/libinterp/parse-tree/lex.ll b/libinterp/parse-tree/lex.ll
--- a/libinterp/parse-tree/lex.ll
+++ b/libinterp/parse-tree/lex.ll
@@ -1232,29 +1232,33 @@ delete_input_buffer (void *buf)
 {
   delete_buffer (static_cast<YY_BUFFER_STATE> (buf));
 }
 
 class
 flex_stream_reader : public stream_reader
 {
 public:
-  flex_stream_reader (char *buf_arg) : stream_reader (), buf (buf_arg) { }
-
-  int getc (void) { return curr_lexer->text_yyinput (); }
-  int ungetc (int c) { curr_lexer->xunput (c, buf); return 0; }
+  flex_stream_reader (lexical_feedback *l, char *buf_arg)
+    : lexer (l), stream_reader (), buf (buf_arg)
+  { }
+
+  int getc (void) { return lexer->text_yyinput (); }
+  int ungetc (int c) { lexer->xunput (c, buf); return 0; }
 
 private:
 
   // No copying!
 
   flex_stream_reader (const flex_stream_reader&);
 
   flex_stream_reader& operator = (const flex_stream_reader&);
 
+  lexical_feedback *lexer;
+
   char *buf;
 };
 
 // Return 1 if the given character matches any character in the given
 // string.
 
 static bool
 match_any (char c, const char *s)
@@ -2248,17 +2252,17 @@ lexical_feedback::process_comment (bool 
 {
   eof = false;
 
   std::string help_txt;
 
   if (! help_buf.empty ())
     help_txt = help_buf.top ();
 
-  flex_stream_reader flex_reader (yytext);
+  flex_stream_reader flex_reader (this, yytext);
 
   // process_comment is only supposed to be called when we are not
   // initially looking at a block comment.
 
   std::string txt = start_in_block
     ? grab_block_comment (flex_reader, eof)
     : grab_comment_block (flex_reader, false, eof);
 
