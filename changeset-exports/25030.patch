# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1521703107 -3600
#      Thu Mar 22 08:18:27 2018 +0100
# Branch stable
# Node ID 62186547b752e96baaaa8974740a5ff39a49c365
# Parent  91671d57817ede04909b66230ac3dab9db9a0976
pkg.m: remove yes-no question when installing from URI.

* scripts/pkg/pkg.m: graft 70490bb1f59d (which has incorrect message)
  which basically reverts a26f8c97df21

diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -416,37 +416,24 @@ function [local_packages, global_package
           if (any (external_files_mask))
             [success, msg] = mkdir (tmp_dir = tempname ());
             if (success != 1)
               error ("pkg: failed to create temporary directory: %s", msg);
             endif
 
             for file_idx = find (external_files_mask)
 
-              warning ('Octave:security',
-              ['You are installing from an unofficial source.\n' ...
-               'The GNU Octave community is not responsible' ...
-               ' for the content of this package.\n' ...
-               '%s will be downloaded and installed.\n'],
-               files{file_idx});
-              _yes = yes_or_no ('Are you sure you want to do this? ');
-
-              if (_yes)
-                [~, fname, fext] = fileparts (files{file_idx});
-                local_files{end+1} = fullfile (tmp_dir, [fname fext]);
-
-                [~, success, msg] = urlwrite (files{file_idx}, local_files{end});
-                if (success != 1)
-                  error ("pkg: failed to read package '%s': %s",
-                         files{file_idx}, msg);
-                endif
-                files{file_idx} = local_files{end};
-              else
-                files(file_idx) = [];
-              endif # do remote install
+              [~, fname, fext] = fileparts (files{file_idx});
+              local_files{end+1} = fullfile (tmp_dir, [fname fext]);
+              [~, success, msg] = urlwrite (files{file_idx}, local_files{end});
+              if (success != 1)
+                error ("pkg: failed to read package '%s': %s",
+                       files{file_idx}, msg);
+              endif
+              files{file_idx} = local_files{end};
 
             endfor
           endif
         endif
         install (files, deps, prefix, archprefix, verbose, local_list,
                  global_list, global_install);
 
       unwind_protect_cleanup
