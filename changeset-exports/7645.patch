# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1206557208 14400
#      Wed Mar 26 14:46:48 2008 -0400
# Node ID 734854f21c94bd4d50999717a725e33b5178e94b
# Parent  91d7440211e78e428ecf076e0ef3ffd17656cbdc
fntests.m: report number .m and .cc files without tests separately

diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+2008-03-26  John W. Eaton  <jwe@octave.org>
+
+	* fntests.m (report_files_with_no_tests): New function.
+	Use it to report number of .m and .cc files without tests separately.
+
 2008-03-25  John W. Eaton  <jwe@octave.org>
 
 	* test_index-wfi-f.m: New tests.
 
 2008-03-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* test_io.m: Add test for save with -struct modifier.
 
diff --git a/test/fntests.m b/test/fntests.m
--- a/test/fntests.m
+++ b/test/fntests.m
@@ -159,16 +159,33 @@ function ret = prog_output_assert (str)
   elseif (_assert_printf(end) == "\n")
     ret = strcmp (_assert_printf(1:(end-1)), str);
   else
     ret = strcmp (_assert_printf, str);
   endif
   _assert_printf = "";
 endfunction
 
+function n = num_elts_matching_pattern (lst, pat)
+  n = 0;
+  for i = 1:length (lst)
+    if (! isempty (regexp (lst{i}, pat)))
+      n++;
+    endif
+  endfor
+endfunction
+
+function report_files_with_no_tests (with, without, typ)
+  pat = cstrcat ("\\", typ, "$");
+  n_with = num_elts_matching_pattern (with, pat);
+  n_without = num_elts_matching_pattern (without, pat);
+  n_tot = n_with + n_without;
+  printf ("\n%d (of %d) %s files have no tests.\n", n_without, n_tot, typ);
+endfunction
+
 pso = page_screen_output ();
 warn_state = warning ("query", "quiet");
 warning ("on", "quiet");
 try
   page_screen_output (0);
   fid = fopen ("fntests.log", "wt");
   if (fid < 0)
     error ("could not open fntests.log for writing");
@@ -209,23 +226,25 @@ try
   endif
   if (dsk > 0)
     printf ("\nThere were %d skipped tests (see fntest.log for details).\n", dsk);
     printf ("Skipped tests are features that are disabled in this version\n");
     printf ("of Octave as the needed libraries were not present when Octave\n");
     printf ("was built\n");
   endif
 
-  n_files_with_no_tests = length (files_with_no_tests);
-  n_files = n_files_with_no_tests + length (files_with_tests);
-  printf ("\n%d (of %d) files have no tests.  Please help improve Octave by\n",
-	  n_files_with_no_tests, n_files);
-  printf ("contributing tests for these files (see the list in the file fntests.log).\n");
+  report_files_with_no_tests (files_with_tests, files_with_no_tests, ".m");
+  report_files_with_no_tests (files_with_tests, files_with_no_tests, ".cc");
+
+  printf ("\nPlease help improve Octave by  contributing tests for");
+  printf ("these files (see the list in the file fntests.log).\n");
+
   fprintf (fid, "\nFiles with no tests:\n\n%s",
 	  list_in_columns (files_with_no_tests, 80));
   fclose (fid);
+
   page_screen_output (pso);
   warning (warn_state.state, "quiet");
 catch
   page_screen_output (pso);
   warning (warn_state.state, "quiet");
   disp (lasterr ());
 end_try_catch
