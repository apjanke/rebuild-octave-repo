# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1544671946 18000
#      Wed Dec 12 22:32:26 2018 -0500
# Node ID 96b6b69a157590a5cf77c2a3ebe0460c6afdd523
# Parent  39e84bf92d1801d2772edb8b721c8e6e9dfed3d8
* inputname.m: Fix tests for new argument; new tests.

diff --git a/scripts/miscellaneous/inputname.m b/scripts/miscellaneous/inputname.m
--- a/scripts/miscellaneous/inputname.m
+++ b/scripts/miscellaneous/inputname.m
@@ -35,17 +35,17 @@
 ## a valid variable name.  If the optional argument @var{ids_only} is
 ## false, return the text of the argument even if it is not a valid
 ## variable name.
 ## @seealso{nargin, nthargout}
 ## @end deftypefn
 
 function name = inputname (n, ids_only = true)
 
-  if (nargin > 2)
+  if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
 
   name = "";
   try
     name = evalin ("caller", sprintf ("__varval__ ('.argn.'){%d}", fix (n)));
   catch
     return;
@@ -78,16 +78,22 @@ endfunction
 %!assert (inputname (2), "worldly")
 %!assert (inputname (3), "")
 
 ## Clear parameter list so that testfn is created with zero inputs/outputs
 %!shared
 %!assert (inputname (-1), "")
 %!assert (inputname (1), "")
 
-%!function r = __foo__ (x, y)
+%!function r = __foo1__ (x, y)
 %!  r = inputname (2);
 %!endfunction
-%!assert (__foo__ (pi, e), "e")
-%!assert (feval (@__foo__, pi, e), "e")
+%!assert (__foo1__ (pi, e), "e")
+%!assert (feval (@__foo1__, pi, e), "e")
+
+%!function r = __foo2__ (x, y)
+%!  r = inputname (2, false);
+%!endfunction
+%!assert (__foo2__ (pi+1, 2+2), "2 + 2")
+%!assert (feval (@__foo2__, pi, pi/2), "pi / 2")
 
 %!error inputname ()
-%!error inputname (1,2)
+%!error inputname (1,2,3)
