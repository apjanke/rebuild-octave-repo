# HG changeset patch
# User jwe
# Date 763940863 0
#      Thu Mar 17 21:47:43 1994 +0000
# Node ID 0f4129889b577d1e68a7764ff84c5a920d062623
# Parent  4cb0c5015dc3a48eacde6e67d874b36012f5e245
[project @ 1994-03-17 21:47:39 by jwe]

diff --git a/src/arith-ops.cc b/src/arith-ops.cc
--- a/src/arith-ops.cc
+++ b/src/arith-ops.cc
@@ -1,13 +1,13 @@
 // Helper functions for arithmetic operations.            -*- C++ -*-
 // Used by the tree class.                    
 /*
 
-Copyright (C) 1992, 1993 John W. Eaton
+Copyright (C) 1992, 1993, 1994 John W. Eaton
 
 This file is part of Octave.
 
 Octave is free software; you can redistribute it and/or modify it
 under the terms of the GNU General Public License as published by the
 Free Software Foundation; either version 2, or (at your option) any
 later version.
 
@@ -2092,17 +2092,17 @@ do_binary_op (const ComplexMatrix& a, co
     case tree::el_div:
       result_type = RT_complex;
       if (m_add_conform (a, b, 1))
 	complex_result = quotient (a, b);
       break;
     case tree::el_leftdiv:
       result_type = RT_complex;
       if (m_add_conform (a, b, 1))
-	complex_result = quotient (a, b);
+	complex_result = quotient (b, a);
       break;
     case tree::leftdiv:
       return xleftdiv (a, b);
       break;
     case tree::divide:
       return xdiv (a, b);
       break;
     case tree::power:
diff --git a/src/g-builtins.cc b/src/g-builtins.cc
--- a/src/g-builtins.cc
+++ b/src/g-builtins.cc
@@ -454,22 +454,29 @@ builtin_eig (const tree_constant *args, 
  */
 tree_constant *
 builtin_error (tree_constant *args, int nargin, int nargout)
 {
   tree_constant *retval = NULL_TREE_CONST;
 
   char *msg = "unspecified_error";
 
-  if (nargin == 2
-      && args != NULL_TREE_CONST
-      && args[1].is_defined ()
-      && args[1].is_string_type ())
+  if (nargin == 2 && args != NULL_TREE_CONST && args[1].is_defined ())
     {
-      msg = args[1].string_value ();
+      if (args[1].is_string_type ())
+	{
+	  msg = args[1].string_value ();
+
+	  if (msg == (char *) NULL || *msg == '\0')
+	    return retval;
+	}
+      else if (args[1].is_empty ())
+	{
+	  return retval;
+	}
     }
 
   error (msg);
 
   return retval;
 }
 
 /*
