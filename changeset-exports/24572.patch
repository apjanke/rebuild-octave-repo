# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1515529929 18000
#      Tue Jan 09 15:32:09 2018 -0500
# Node ID 4711e4b649d58fb4d399ae375587c6d12577a0bf
# Parent  7b6a5336ddb3b76083c18052fccc13e0f6942291
fix memory leak with subfunctions and nested functions

* ov-user-fcn.h, ov-user-fcn.cc (octave_user_function::parent_scope):
Delete data member.
(octave_user_function::parent_fcn_scope): Delete function.
(octave_user_function::dump): Don't display parent scope name.
(octave_user_function::stash_parent_fcn_scope):
Avoid circular reference and memory leak by calling m_scope.set_parent
instead of keeping a copy of the parent scope.

diff --git a/libinterp/octave-value/ov-usr-fcn.cc b/libinterp/octave-value/ov-usr-fcn.cc
--- a/libinterp/octave-value/ov-usr-fcn.cc
+++ b/libinterp/octave-value/ov-usr-fcn.cc
@@ -247,18 +247,17 @@ octave_user_function::octave_user_functi
     lead_comm (), trail_comm (), file_name (),
     location_line (0), location_column (0),
     parent_name (), t_parsed (static_cast<time_t> (0)),
     t_checked (static_cast<time_t> (0)),
     system_fcn_file (false), call_depth (-1),
     num_named_args (param_list ? param_list->length () : 0),
     subfunction (false), inline_function (false),
     anonymous_function (false), nested_function (false),
-    class_constructor (none), class_method (false),
-    parent_scope ()
+    class_constructor (none), class_method (false)
 #if defined (HAVE_LLVM)
     , jit_info (0)
 #endif
 {
   if (cmd_list)
     cmd_list->mark_as_function_body ();
 
   if (m_scope)
@@ -357,17 +356,17 @@ octave_user_function::maybe_relocate_end
     }
 
   maybe_relocate_end_internal ();
 }
 
 void
 octave_user_function::stash_parent_fcn_scope (const octave::symbol_scope& ps)
 {
-  parent_scope = ps;
+  m_scope.set_parent (ps);
 }
 
 std::string
 octave_user_function::profiler_name (void) const
 {
   std::ostringstream result;
 
   if (is_anonymous_function ())
@@ -755,17 +754,16 @@ octave_user_function::dump (void) const
        { "call_depth", call_depth },
        { "num_named_args", num_named_args },
        { "subfunction", subfunction },
        { "inline_function", inline_function },
        { "anonymous_function", anonymous_function },
        { "nested_function", nested_function },
        { "ctor_type", ctor_type_str () },
        { "class_method", class_method },
-       { "parent_scope", parent_scope ? parent_scope.name () : "0x0" },
        { "scope_info", m_scope ? m_scope.dump () : "0x0" }};
 
   return octave_value (m);
 }
 
 void
 octave_user_function::print_code_function_header (const std::string& prefix)
 {
diff --git a/libinterp/octave-value/ov-usr-fcn.h b/libinterp/octave-value/ov-usr-fcn.h
--- a/libinterp/octave-value/ov-usr-fcn.h
+++ b/libinterp/octave-value/ov-usr-fcn.h
@@ -275,19 +275,16 @@ public:
   }
 
   std::string fcn_file_name (void) const { return file_name; }
 
   std::string profiler_name (void) const;
 
   std::string parent_fcn_name (void) const { return parent_name; }
 
-  octave::symbol_scope
-  parent_fcn_scope (void) const { return parent_scope; }
-
   octave::sys::time time_parsed (void) const { return t_parsed; }
 
   octave::sys::time time_checked (void) const { return t_checked; }
 
   void mark_as_system_fcn_file (void);
 
   bool is_system_fcn_file (void) const { return system_fcn_file; }
 
@@ -475,19 +472,16 @@ private:
   bool nested_function;
 
   // Enum describing whether this function is the constructor for class object.
   class_ctor_type class_constructor;
 
   // TRUE means this function is a method for a class.
   bool class_method;
 
-  // The scope of the parent function, if any.
-  octave::symbol_scope parent_scope;
-
 #if defined (HAVE_LLVM)
   octave::jit_function_info *jit_info;
 #endif
 
   void maybe_relocate_end_internal (void);
 
   void print_code_function_header (const std::string& prefix);
 
