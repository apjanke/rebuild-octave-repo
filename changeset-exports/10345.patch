# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1266774390 0
#      Sun Feb 21 17:46:30 2010 +0000
# Node ID 33b012d39dce14d975b651ae62e1ed0e2516afad
# Parent  65974373505a62edc1225f207857601085d77383
Convert between back and forward slashes before and after calling glob.

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,14 @@
 2010-02-21  Michael Goffioul  <michael.goffioul@gmail.com>
 
+	* oct-glob.cc (octave_glob): Convert backslashes to forward slashes
+	automatically before calling glob, and convert back after the call
+	(implementation from jwe).
+
 	* Makefile.am: Add -bindir flag to liboctave_la_LDFLAGS.
 
 2010-02-19  Jaroslav Hajek  <highegg@gmail.com>
 
 	* idx-vector.cc (idx_vector::as_array,
 	idx_vector::idx_range_rep::as_array,
 	idx_vector::idx_scalar_rep::as_array,
 	idx_vector::idx_vector_rep::as_array): New methods.
diff --git a/liboctave/oct-glob.cc b/liboctave/oct-glob.cc
--- a/liboctave/oct-glob.cc
+++ b/liboctave/oct-glob.cc
@@ -19,16 +19,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
+#include <algorithm>
 #include <string>
 
 #include <fnmatch.h>
 #include <glob.h>
 
 #include "oct-glob.h"
 #include "file-stat.h"
 
@@ -73,16 +74,23 @@ octave_glob (const string_vector& pat)
   for (int i = 0; i < npat; i++)
     {
       std::string xpat = pat(i);
 
       if (! xpat.empty ())
         {
           glob_t glob_info;
 
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) \
+          && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM) 
+              std::replace_if (xpat.begin (), xpat.end (), 
+                               std::bind2nd (std::equal_to<char> (), '\\'), 
+                               '/'); 
+#endif 
+
           int err = ::glob (xpat.c_str (), GLOB_NOSORT, 0, &glob_info);
 
           if (! err)
             {
               int n = glob_info.gl_pathc;
 
               const char * const *matches = glob_info.gl_pathv;
 
@@ -93,17 +101,29 @@ octave_glob (const string_vector& pat)
 
               if (n > 1
                   || (n == 1
                       && single_match_exists (std::string (matches[0]))))
                 {
                   retval.resize (k+n);
 
                   for (int j = 0; j < n; j++)
-                    retval[k++] = matches[j];
+                    { 
+                      std::string tmp = matches[j]; 
+
+#if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) \
+                      && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM) 
+                          std::replace_if (tmp.begin (), tmp.end (), 
+                                           std::bind2nd (std::equal_to<char> (), 
+                                                         '/'), 
+                                           '\\'); 
+#endif 
+
+                      retval[k++] = tmp; 
+                    } 
                 }
 
               globfree (&glob_info);
             }
         }
     }
 
   return retval.sort ();
