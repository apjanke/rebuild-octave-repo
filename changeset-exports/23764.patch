# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1499869552 14400
#      Wed Jul 12 10:25:52 2017 -0400
# Node ID 528b124e337f41848a6ced61e706dffa4fbfba3a
# Parent  54aa9a3250b4a116c8c8674f5802269c3ee36941
delete obsolete OCTAVE_CHECK_FUNC_FORTRAN_ISNAN configure macro

* acinclude.m4 (OCTAVE_CHECK_FUNC_FORTRAN_ISNAN):
Delete macro definition.
* configure.ac: Delete use of OCTAVE_CHECK_FUNC_FORTRAN_ISNAN.  Don't
define and substutute F77_ISNAN_MACRO.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -952,24 +952,16 @@ fi
 AC_SUBST(F77_TOLOWER)
 AC_SUBST(F77_APPEND_UNDERSCORE)
 AC_SUBST(F77_APPEND_EXTRA_UNDERSCORE)
 
 if test -z "$F77"; then
   AC_MSG_ERROR([to build Octave, you must have a compatible Fortran compiler or wrapper script for f2c that functions as a Fortran compiler installed and in your path.  See the file INSTALL for more information.])
 fi
 
-OCTAVE_CHECK_FUNC_FORTRAN_ISNAN
-F77_ISNAN_MACRO=
-if test $octave_cv_func_fortran_isnan = no; then
-  AC_MSG_NOTICE([substituting ISNAN(X) with X.NE.X in Fortran sources])
-  F77_ISNAN_MACRO="s|ISNAN(\(@<:@^)@:>@*\))|(\1.NE.\1)|"
-fi
-AC_SUBST(F77_ISNAN_MACRO)
-
 ### Check for BLAS and LAPACK libraries:
 
 ## Need to adjust FFLAGS to include correct integer size.
 save_FFLAGS="$FFLAGS"
 FFLAGS="$FFLAGS $F77_INTEGER_8_FLAG"
 
 OCTAVE_BLAS_WITH_F77_FUNC([:], [:],
   [ax_blas_ok=yes
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -264,40 +264,16 @@ AC_DEFUN([OCTAVE_CHECK_FFTW_THREADS], [
     AC_DEFINE([HAVE_]m4_toupper([$1])[_THREADS], 1,
       [Define to 1 if ]m4_toupper([$1])[ has multi-threading support.])
   fi
   CPPFLAGS="$ac_octave_save_CPPFLAGS"
   LDFLAGS="$ac_octave_save_LDFLAGS"
   LIBS="$ac_octave_save_LIBS"
 ])
 dnl
-dnl Check if Fortran compiler has the intrinsic function ISNAN.
-dnl
-AC_DEFUN([OCTAVE_CHECK_FUNC_FORTRAN_ISNAN], [
-  AC_CACHE_CHECK([whether $F77 has the intrinsic function ISNAN],
-    [octave_cv_func_fortran_isnan],
-    [AC_LANG_PUSH(Fortran 77)
-    AC_COMPILE_IFELSE([[
-      program foo
-      implicit none
-      real x
-      double precision y
-      if (isnan(x)) then
-        print *, 'x is NaN'
-      end if
-      if (isnan(y)) then
-        print *, 'y is NaN'
-      end if
-      end program
-      ]],
-      octave_cv_func_fortran_isnan=yes, octave_cv_func_fortran_isnan=no)
-    AC_LANG_POP(Fortran 77)
-  ])
-])
-dnl
 dnl Check if function gluTessCallback is called with "(...)".
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_GLUTESSCALLBACK_THREEDOTS], [
   AC_CACHE_CHECK([whether gluTessCallback is called with "(...)"],
     [octave_cv_func_glutesscallback_threedots],
     [AC_LANG_PUSH(C++)
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #if defined (HAVE_GL_GLU_H)
