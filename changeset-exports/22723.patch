# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1478175861 -3600
#      Thu Nov 03 13:24:21 2016 +0100
# Node ID 03cebe1fb0e3a65b89413702b6871e7e4104632b
# Parent  e6fac42c8d561b7d4c2e335c243f9223e5f8dffe
Update labels and title font according to axes font properties (bug #49469)

* graphics.in.h (axes::properties::update_font): change signature to accept a
   string argument
* graphics.in.h (axes::properties::update_fontsize/weight/name/angle): add
   string argument to update_font to specify which property to update
* graphics.in.h (axes::properties::labelfontsizemultiplier/
   titlefontsizemultiplier/titlefontweight): add update methods

* graphics.cc (axes::properties::update_font): update x/y/zlabel and title font
   according to axes font properties

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -6254,18 +6254,39 @@ axes::properties::update_aspectratios (v
         {
           normalized_aspectratios (pba, da, dx, dy, dz);
           plotboxaspectratio.set (pba, false);
         }
     }
 }
 
 void
-axes::properties::update_font (void)
-{
+axes::properties::update_font (std::string prop)
+{
+  if (! prop.empty ())
+    {
+      octave_value val = get (prop);
+      octave_value tval = val;
+      if (prop == "fontsize")
+        {
+          tval = octave_value (val.double_value () *
+                               get_titlefontsizemultiplier ());
+          val  = octave_value (val.double_value () *
+                               get_labelfontsizemultiplier ());
+        }
+      else if (prop == "fontweight")
+        tval = get ("titlefontweight");
+
+      gh_manager::get_object (get_xlabel ()).set (prop, val);
+      gh_manager::get_object (get_ylabel ()).set (prop, val);
+      gh_manager::get_object (get_zlabel ()).set (prop, val);
+      gh_manager::get_object (get_title ()).set (prop, tval);
+        
+    }
+  
   txt_renderer.set_font (get ("fontname").string_value (),
                          get ("fontweight").string_value (),
                          get ("fontangle").string_value (),
                          get ("__fontsize_points__").double_value ());
 }
 
 // The INTERNAL flag defines whether position or outerposition is used.
 
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -3838,17 +3838,17 @@ public:
       radio_property fontunits SU , "{points}|inches|centimeters|normalized|pixels"
       bool_property fontsmoothing , "on"
       radio_property fontweight u , "{normal}|bold"
       double_property gridalpha m , 0.15
       radio_property gridalphamode , "{auto}|manual"
       color_property gridcolor , color_property (color_values (0.15, 0.15, 0.15), radio_values ("none"))
       radio_property gridcolormode , "{auto}|manual"
       radio_property gridlinestyle , "{-}|--|:|-.|none"
-      double_property labelfontsizemultiplier , 1.1
+      double_property labelfontsizemultiplier u , 1.1
       radio_property layer u , "{bottom}|top"
       // FIXME: should be kind of string array.
       any_property linestyleorder S , "-"
       double_property linestyleorderindex , 1.0
       double_property linewidth , 0.5
       double_property minorgridalpha m , 0.25
       radio_property minorgridalphamode , "{auto}|manual"
       color_property minorgridcolor m , color_property (color_values (0.1, 0.1, 0.1), radio_values ("none"))
@@ -3864,18 +3864,18 @@ public:
       radio_property sortmethod , "{depth}|childorder"
       radio_property tickdir mu , "{in}|out"
       radio_property tickdirmode u , "{auto}|manual"
       // FIXME: Added recently to Matlab, should replace interpreter property.
       radio_property ticklabelinterpreter , "{tex}|latex|none"
       array_property ticklength u , default_axes_ticklength ()
       array_property tightinset r , Matrix (1, 4, 0.0)
       handle_property title SOf , gh_manager::make_graphics_handle ("text", __myhandle__, false, false, false)
-      double_property titlefontsizemultiplier , 1.1
-      radio_property titlefontweight , "{bold}|normal"
+      double_property titlefontsizemultiplier u , 1.1
+      radio_property titlefontweight u , "{bold}|normal"
       // FIXME: uicontextmenu should be moved here.
       radio_property units SU , "{normalized}|inches|centimeters|points|pixels|characters"
       array_property view u , default_axes_view ()
       // FIXME: Remove "zero" in 4.6
       radio_property xaxislocation u , "{bottom}|top|origin|zero"
       color_property xcolor m , color_values (0.15, 0.15, 0.15)
       radio_property xcolormode , "{auto}|manual"
       radio_property xdir u , "{normal}|reverse"
@@ -4065,35 +4065,53 @@ public:
         calc_ticklabels (ytick, yticklabel, yscale.is ("log"));
     }
     void update_zticklabelmode (void)
     {
       if (zticklabelmode.is ("auto"))
         calc_ticklabels (ztick, zticklabel, zscale.is ("log"));
     }
 
-    void update_font (void);
+    void update_font (std::string prop = "");
     void update_fontname (void)
     {
-      update_font ();
+      update_font ("fontname");
       sync_positions ();
     }
     void update_fontsize (void)
     {
-      update_font ();
+      update_font ("fontsize");
       sync_positions ();
     }
     void update_fontangle (void)
     {
-      update_font ();
+      update_font ("fontangle");
       sync_positions ();
     }
     void update_fontweight (void)
     {
-      update_font ();
+      update_font ("fontweight");
+      sync_positions ();
+    }
+
+    void update_titlefontsizemultiplier (void)
+    {
+      update_font ("fontsize");
+      sync_positions ();
+    }
+
+    void update_labelfontsizemultiplier (void)
+    {
+      update_font ("fontsize");
+      sync_positions ();
+    }
+
+    void update_titlefontweight (void)
+    {
+      update_font ("fontweight");
       sync_positions ();
     }
 
     void update_outerposition (void)
     {
       set_activepositionproperty ("outerposition");
       caseless_str old_units = get_units ();
       set_units ("normalized");
diff --git a/scripts/plot/appearance/title.m b/scripts/plot/appearance/title.m
--- a/scripts/plot/appearance/title.m
+++ b/scripts/plot/appearance/title.m
@@ -117,8 +117,19 @@ endfunction
 %!   title ("Test FontSize Property", "fontsize", 16);
 %!   h = get (gca, "title");
 %!   assert (get (h, "string"), "Test FontSize Property");
 %!   assert (get (h, "fontsize"), 16);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
+%!test <49469>
+%! hf = figure ("visible", "off");
+%! unwind_protect
+%!   ht = title ("Test FontSize Property");
+%!   set (gca, "fontname", "Liberation Serif")
+%!   set (gca, "fontsize", 13)
+%!   assert (get (ht, "fontname"), "Liberation Serif");
+%!   assert (get (ht, "fontsize"), 13 * get (gca, "titlefontsizemultiplier"));
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
