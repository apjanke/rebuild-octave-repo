# HG changeset patch
# User Shai Ayal <shaiay@sourceforge.net>
# Date 1203537502 -7200
#      Wed Feb 20 21:58:22 2008 +0200
# Node ID ca8b97bb952cb49c70cfd4f4479bf66eb1ec8c22
# Parent  caab78e7e377261337a98d70de5cdbf3028cedc2
added the function available_backends

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2008-06-04  Shai Ayal  <shaiay@users.sourceforge.net>
 
+ 	* graphics.cc (Favailable_backends): New function.
+  	* graphics.h.in (base_graphics_backend::available_backends_list):
+	New function.
+
 	* graphics.cc (axes::properties::calc_ticks_and_lims): Refactor.
 	Adjust axes limits & tics together so that the result is consistent.
 	(axes::properties::calc_tick_sep): Ditto.
 	(axes::properties::get_axis_limits): Ditto.  Now a member of
 	axes::properties
 	(magform): Now file-scope static function instead of
 	axes::properties member function.
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3417,16 +3417,25 @@ DEFUN (__go_figure_handles__, , ,
    "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} __go_figure_handles__ ()\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   return octave_value (gh_manager::figure_handle_list ());
 }
 
+DEFUN (available_backends, args, ,
+   "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} available_backends ()\n\
+Returns resgistered graphics backends.\n\
+@end deftypefn")
+{
+  return octave_value (graphics_backend::available_backends_list ());
+}
+
 static void
 clear_drawnow_request (void *)
 {
   Vdrawnow_requested = false;
 }
 
 DEFUN (drawnow, args, ,
    "-*- texinfo -*-\n\
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1316,16 +1316,29 @@ public:
     const_available_backends_iterator p = available_backends.find (name);
 
     if (p != available_backends.end ())
       return p->second;
     else
       return default_backend ();
   }
 
+  static Cell available_backends_list (void)
+  {
+    Cell m (1 , available_backends.size ());
+    const_available_backends_iterator p;
+    int i;
+    
+    for (i = 0,p = available_backends.begin (); p !=  available_backends.end (); p++,i++)
+      m(i) = p->first;
+
+    return m;
+  }
+	
+
 private:
   base_graphics_backend *rep;
 
   static OCTINTERP_API std::map<std::string, graphics_backend> available_backends;
 
   typedef std::map<std::string, graphics_backend>::iterator available_backends_iterator;
   typedef std::map<std::string, graphics_backend>::const_iterator const_available_backends_iterator;
 };
