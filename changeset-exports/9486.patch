# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1249454868 -7200
#      Wed Aug 05 08:47:48 2009 +0200
# Node ID d85a43495faad694f40612621b2a37e1ab17b6ad
# Parent  3cee58bf4acf2d1acb9333e6e85d06b0567e168a
update coding tips

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,12 @@
+2009-08-05  Jaroslav Hajek  <highegg@gmail.com>
+
+	* interpreter/tips.txi: Update.
+
 2009-07-20  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/contributors.in: Add Aleksej Saushev.
 
 2009-06-24  Rafael Laboissiere  <rafael@debian.org>
 
 	* Makefile.in (dist): Drop conf.texi as prerequisite.
 
diff --git a/doc/interpreter/tips.txi b/doc/interpreter/tips.txi
--- a/doc/interpreter/tips.txi
+++ b/doc/interpreter/tips.txi
@@ -105,16 +105,19 @@ just the innermost loop to get acceptabl
 @item
 Use built-in and library functions if possible. Built-in and compiled functions are very fast.
 Even with a m-file library function, chances are good that it is already optimized, or will be
 optimized more in a future release.
 
 @item
 Avoid computing costly intermediate results multiple times. Octave currently
 does not eliminate common subexpressions.
+Also, certain internal computation results are cached for variables.
+For instance, if a matrix variable is used multiple times as an index,
+checking the indices (and internal conversion to integers) is only done once.
 
 @item
 Be aware of lazy copies (copy-on-write). When a copy of an object
 is created, the data is not immediately copied, but rather shared. The actual
 copying is postponed until the copied data needs to be modified. For example:
 
 @example
 a = zeros (1000); # create a 1000x1000 matrix
