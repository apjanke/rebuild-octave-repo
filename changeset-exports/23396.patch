# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1492094083 14400
#      Thu Apr 13 10:34:43 2017 -0400
# Node ID 945b53af4655c427c5c3055eb9a9f77a16dc4eab
# Parent  c14cf947142f63c01dd4997e8938aaa25541b599
maint: Strip trailing whitespace from source files.

diff --git a/doc/interpreter/genpropdoc.m b/doc/interpreter/genpropdoc.m
--- a/doc/interpreter/genpropdoc.m
+++ b/doc/interpreter/genpropdoc.m
@@ -115,17 +115,17 @@ function s = getdoc (objname, field, bas
 @xref{XREF__objname__fontunits, , fontunits property}.";
   doc_fontname = "Name of font used for text rendering.  When setting \
 this property, the text rendering engine will search for a matching \
 font in your system.  If none is found then text is rendered using a \
 default sans serif font (same as the default @qcode{\"*\"} value).";
   doc_fontunits = "Units used to interpret the @qcode{\"fontsize\"} property.";
   doc_fontweight = "Control the variant of the base font used for \
 text rendering.";
-  
+
   ## Initialize structure
   if (isfield (base, field))
     s = base.(field);
   else
     s = struct ("valid", "", "default", "", "doc", "", "printdefault", true);
   endif
 
   ## Base properties: Write generic documentation because it will be included
@@ -632,34 +632,34 @@ displayed in the axes.  Setting @code{da
 @w{@code{[1, 2]}} causes the length of one unit as displayed on the x-axis \
 to be the same as the length of 2 units on the y-axis.  \
 @xref{XREFdaspect, , daspect function}.  __modemsg__.";
         s.valid = valid_3elvec;
 
       case "dataaspectratiomode"
       case "fontangle"
         s.doc = doc_fontangle;
-        
+
       case "fontname"
         s.doc = doc_fontname;
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = doc_fontsize;
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = doc_fontunits;
 
       case "fontsmoothing"
         s.doc = doc_unused;
 
       case "fontweight"
         s.doc = doc_fontweight;
-        
+
       case "gridalpha"
         s.doc = sprintf (doc_notimpl, "Transparency");
 
       case "gridalphamode"
         s.doc = doc_unused;
 
       case "gridcolor"
         s.doc = doc_unused;
@@ -1021,31 +1021,31 @@ z data.";
 
       case "extent"
         s.doc = "Vector @code{[x0 y0 width height]} indicating the size \
 and location of the text string.";
         s.valid = valid_4elvec;
 
       case "fontangle"
         s.doc = doc_fontangle;
-        
+
       case "fontname"
         s.doc = doc_fontname;
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = doc_fontsize;
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = doc_fontunits;
 
       case "fontweight"
         s.doc = doc_fontweight;
-        
+
       case "horizontalalignment"
       case "interpreter"
         s.doc = "Control the way the @qcode{\"string\"} property is \
 interpreted.\n\
 @xref{XREFinterpreterusage, , @w{Use of the interpreter property}}.";
 
       case "linestyle"
         s.doc = sprintf (doc_notimpl, "Background area");
@@ -1431,31 +1431,31 @@ point source (@qcode{\"local\"}).";
       ## Overridden shared properties
 
       ## Specific properties
       case "backgroundcolor"
       case "bordertype"
       case "borderwidth"
       case "fontangle"
         s.doc = doc_fontangle;
-        
+
       case "fontname"
         s.doc = doc_fontname;
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = doc_fontsize;
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = doc_fontunits;
 
       case "fontweight"
         s.doc = doc_fontweight;
-        
+
       case "foregroundcolor"
       case "highlightcolor"
       case "position"
       case "resizefcn"
       case "shadowcolor"
       case "title"
       case "titleposition"
       case "units"
@@ -1468,31 +1468,31 @@ point source (@qcode{\"local\"}).";
       ## Overridden shared properties
 
       ## Specific properties
       case "backgroundcolor"
       case "bordertype"
       case "borderwidth"
       case "fontangle"
         s.doc = doc_fontangle;
-        
+
       case "fontname"
         s.doc = doc_fontname;
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = doc_fontsize;
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = doc_fontunits;
 
       case "fontweight"
         s.doc = doc_fontweight;
-        
+
       case "foregroundcolor"
       case "highlightcolor"
       case "position"
       case "resizefcn"
       case "selectedobject"
       case "selectionchangedfcn"
       case "shadowcolor"
       case "title"
@@ -1509,31 +1509,31 @@ point source (@qcode{\"local\"}).";
       ## Specific properties
       case "backgroundcolor"
       case "callback"
       case "cdata"
       case "enable"
       case "extent"
       case "fontangle"
         s.doc = doc_fontangle;
-        
+
       case "fontname"
         s.doc = doc_fontname;
         s.valid = valid_string;
 
       case "fontsize"
         s.doc = doc_fontsize;
         s.valid = "scalar";
 
       case "fontunits"
         s.doc = doc_fontunits;
 
       case "fontweight"
         s.doc = doc_fontweight;
-        
+
       case "foregroundcolor"
       case "horizontalalignment"
       case "keypressfcn"
       case "listboxtop"
       case "max"
       case "min"
       case "position"
       case "sliderstep"
diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -1452,57 +1452,57 @@ namespace octave
 
         // minor tick marks
         if (do_xminortick)
           {
             if (tick_along_z)
               render_tickmarks (xmticks, x_min, x_max,
                                 is_origin ? y_axis_pos : ypTick, ypTick,
                                 zpTick, zpTickN, 0., 0.,
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (zpTick-zpTickN)*fz*xticklen/2,
                                 0, ! is_origin && mirror);
             else
               render_tickmarks (xmticks, x_min, x_max,
                                 is_origin ? y_axis_pos : ypTick, ypTickN,
                                 zpTick, zpTick, 0.,
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (ypTick-ypTickN)*fy*xticklen/2,
                                 0., 0, ! is_origin && mirror);
           }
 
         // tick marks
         if (tick_along_z)
           render_tickmarks (xticks, x_min, x_max,
                             is_origin ? y_axis_pos : ypTick, ypTick,
                             zpTick, zpTickN, 0., 0.,
-                            (is_origin_low ? -1. : 1.) * 
+                            (is_origin_low ? -1. : 1.) *
                             octave::math::signum (zpTick-zpTickN)*fz*xticklen,
                             0, ! is_origin && mirror);
         else
           render_tickmarks (xticks, x_min, x_max,
                             is_origin ? y_axis_pos : ypTick, ypTickN,
                             zpTick, zpTick, 0.,
-                            (is_origin_low ? -1. : 1.) * 
+                            (is_origin_low ? -1. : 1.) *
                             octave::math::signum (ypTick-ypTickN)*fy*xticklen,
                             0., 0, ! is_origin && mirror);
 
         // tick texts
         if (xticklabels.numel () > 0)
           {
             int halign = (xstate == AXE_HORZ_DIR ? 1 :
                           (xyzSym || is_origin_low ? 0 : 2));
             int valign = (xstate == AXE_VERT_DIR ? 1 :
                           (x2Dtop || is_origin_low ? 0 : 2));
 
             if (tick_along_z)
               render_ticktexts (xticks, xticklabels, x_min, x_max,
                                 is_origin ? y_axis_pos : ypTick,
                                 zpTick +
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (zpTick-zpTickN)*fz*xtickoffset,
                                 0, halign, valign, wmax, hmax);
             else
               render_ticktexts (xticks, xticklabels, x_min, x_max,
                                 (is_origin ? y_axis_pos : ypTick) +
                                 (is_origin_low ?  -1. : 1.) *
                                 octave::math::signum (ypTick-ypTickN)*fy*xtickoffset,
                                 zpTick, 0, halign, valign, wmax, hmax);
@@ -1632,57 +1632,57 @@ namespace octave
 
         // minor tick marks
         if (do_yminortick)
           {
             if (tick_along_z)
               render_tickmarks (ymticks, y_min, y_max,
                                 is_origin ? x_axis_pos : xpTick, xpTick,
                                 zpTick, zpTickN, 0., 0.,
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (zpTick-zpTickN)*fz*yticklen/2,
                                 1, ! is_origin && mirror);
             else
               render_tickmarks (ymticks, y_min, y_max,
                                 is_origin ? x_axis_pos : xpTick, xpTickN,
                                 zpTick, zpTick,
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (xpTick-xpTickN)*fx*yticklen/2,
                                 0., 0., 1, ! is_origin && mirror);
           }
 
         // tick marks
         if (tick_along_z)
           render_tickmarks (yticks, y_min, y_max,
                             is_origin ? x_axis_pos : xpTick, xpTick,
                             zpTick, zpTickN, 0., 0.,
-                            (is_origin_low ? -1. : 1.) * 
+                            (is_origin_low ? -1. : 1.) *
                             octave::math::signum (zpTick-zpTickN)*fz*yticklen,
                             1, ! is_origin && mirror);
         else
           render_tickmarks (yticks, y_min, y_max,
                             is_origin ? x_axis_pos : xpTick, xpTickN,
                             zpTick, zpTick,
-                            (is_origin_low ? -1. : 1.) * 
+                            (is_origin_low ? -1. : 1.) *
                             octave::math::signum (xPlaneN-xPlane)*fx*yticklen,
                             0., 0., 1, ! is_origin && mirror);
 
         // tick texts
         if (yticklabels.numel () > 0)
           {
             int halign = (ystate == AXE_HORZ_DIR ? 1 :
                           (! xyzSym || y2Dright || is_origin_low ? 0 : 2));
             int valign = (ystate == AXE_VERT_DIR ? 1 :
                           (is_origin_low ? 0 : 2));
 
             if (tick_along_z)
               render_ticktexts (yticks, yticklabels, y_min, y_max,
                                 is_origin ? x_axis_pos : xpTick,
                                 zpTick +
-                                (is_origin_low ? -1. : 1.) * 
+                                (is_origin_low ? -1. : 1.) *
                                 octave::math::signum (zpTick-zpTickN)*fz*ytickoffset,
                                 1, halign, valign, wmax, hmax);
             else
               render_ticktexts (yticks, yticklabels, y_min, y_max,
                                 (is_origin ? x_axis_pos : xpTick) +
                                 (is_origin_low ?  -1. : 1.) *
                                 octave::math::signum (xpTick-xpTickN)*fx*ytickoffset,
                                 zpTick, 1, halign, valign, wmax, hmax);
diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -5774,17 +5774,17 @@ axes::properties::update_axes_layout (vo
            && (ylimits(1) < 0.)))
         {
           std::swap (yPlane, yPlaneN);
           x2Dtop = true;
         }
       ypTick = yPlaneN;
       ypTickN = yPlane;
       Matrix xlimits = get_xlim ().matrix_value ();
-      if (yaxislocation_is ("right") || 
+      if (yaxislocation_is ("right") ||
           (xscale_is ("log") && yaxislocation_is ("origin")
            && (xlimits(1) < 0.)))
         {
           std::swap (xPlane, xPlaneN);
           y2Dright = true;
         }
       xpTick = xPlaneN;
       xpTickN = xPlane;
diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -4770,19 +4770,19 @@ public:
     void update_font (void);
     void update_string (void) { request_autopos (); update_text_extent (); }
     void update_rotation (void) { update_text_extent (); }
     void update_color (void) { update_font (); update_text_extent (); }
     void update_fontname (void) { update_font (); update_text_extent (); }
     void update_fontsize (void) { update_font (); update_text_extent (); }
     void update_fontangle (void) { update_font (); update_text_extent (); }
 
-    void update_fontweight (void) 
-    { 
-      update_font (); 
+    void update_fontweight (void)
+    {
+      update_font ();
       update_text_extent ();
       // FIXME: Remove warning with demi and light in 4.7+
       if (fontweight.is ("demi") || fontweight.is ("light"))
         warning_with_id ("Octave:deprecated-property",
                          "Setting 'fontweight' to '%s' is deprecated, \
 use 'normal' or 'bold'.", fontweight.current_value ().c_str ());
     }
 
@@ -5777,19 +5777,19 @@ public:
 
     void update_text_extent (void);
 
     void update_string (void) { update_text_extent (); }
     void update_fontname (void) { update_text_extent (); }
     void update_fontsize (void) { update_text_extent (); }
     void update_fontangle (void) { update_text_extent (); }
 
-    void update_fontweight (void) 
-    { 
-      update_text_extent (); 
+    void update_fontweight (void)
+    {
+      update_text_extent ();
       // FIXME: Remove warning with demi and light in 4.7+
       if (fontweight.is ("demi") || fontweight.is ("light"))
         warning_with_id ("Octave:deprecated-property",
                          "Setting 'fontweight' to '%s' is deprecated, \
 use 'normal' or 'bold'.", fontweight.current_value ().c_str ());
     }
 
     void update_fontunits (const caseless_str& old_units);
@@ -5873,18 +5873,18 @@ public:
     }
 
     // void update_text_extent (void);
     // void update_string (void) { update_text_extent (); }
     // void update_fontname (void) { update_text_extent (); }
     // void update_fontsize (void) { update_text_extent (); }
     // void update_fontangle (void) { update_text_extent (); }
 
-    void update_fontweight (void) 
-    { 
+    void update_fontweight (void)
+    {
       // FIXME: Remove this warning in 4.7+
       if (fontweight.is ("demi") || fontweight.is ("light"))
         warning_with_id ("Octave:deprecated-property",
                          "Setting 'fontweight' to '%s' is deprecated, \
 use 'normal' or 'bold'.", fontweight.current_value ().c_str ());
     }
 
     void update_units (const caseless_str& old_units);
@@ -5961,18 +5961,18 @@ public:
       borderwidth.add_constraint ("min", 0.0, true);
       fontsize.add_constraint ("min", 0.0, false);
       position.add_constraint (dim_vector (1, 4));
     }
 
     void update_units (const caseless_str& old_units);
     void update_fontunits (const caseless_str& old_units);
 
-    void update_fontweight (void) 
-    { 
+    void update_fontweight (void)
+    {
       // FIXME: Remove this warning in 4.7+
       if (fontweight.is ("demi") || fontweight.is ("light"))
         warning_with_id ("Octave:deprecated-property",
                          "Setting 'fontweight' to '%s' is deprecated, \
 use 'normal' or 'bold'.", fontweight.current_value ().c_str ());
     }
   };
 
diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -673,17 +673,17 @@ namespace octave
     bool inhibit_startup_message = false;
 
     if (m_app_context)
       {
         const cmdline_options& options = m_app_context->options ();
 
         inhibit_startup_message = options.inhibit_startup_message ();
       }
-    
+
     if (m_interactive && ! inhibit_startup_message)
       std::cout << octave_startup_message () << "\n" << std::endl;
   }
 
   // Initialize by reading startup files.  Return non-zero if an exception
   // occurs when reading any of them, but don't exit early because of an
   // exception.
 
diff --git a/libinterp/corefcn/strfns.cc b/libinterp/corefcn/strfns.cc
--- a/libinterp/corefcn/strfns.cc
+++ b/libinterp/corefcn/strfns.cc
@@ -746,17 +746,17 @@ Convert byte stream @var{native_bytes} t
     print_usage ();
 
   if (args(0).is_string ())
     return ovl (args(0));
 
   std::string tmp = args(1).xstring_value ("CODEPAGE must be a string");
   const char *codepage
     = tmp.empty () ? octave_locale_charset_wrapper () : tmp.c_str ();
-  
+
   charNDArray native_bytes = args(0).char_array_value ();
 
   const char *src = native_bytes.data ();
   size_t srclen = native_bytes.numel ();
 
   size_t length;
   uint8_t *utf8_str = 0;
 
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -433,17 +433,17 @@ list1           : statement
                   { $$ = parser.append_statement_list ($1, $2, $3, true); }
                 ;
 
 opt_fcn_list    : // empty
                   { $$ = 0; }
                 | fcn_list
                   { $$ = $1; }
                 ;
-                
+
 fcn_list        : fcn_list1 opt_sep
                   {
                     YYUSE ($2);
 
                     $$ = $1;
                   }
                 ;
 
diff --git a/libinterp/parse-tree/pt-idx.cc b/libinterp/parse-tree/pt-idx.cc
--- a/libinterp/parse-tree/pt-idx.cc
+++ b/libinterp/parse-tree/pt-idx.cc
@@ -380,17 +380,17 @@ namespace octave
             //
             //    s.a (f (1:end))
             //
             // can mean a lot of different things depending on the types
             // of s, a, and f.  Let's just say it's complicated and that
             // the following code is definitely not correct in all
             // cases.  That it is already so complex makes me think that
             // there must be a better way.
-             
+
             bool split = ((type[i-1] == '(' && type[i] != '.')
                           || (al && al->has_magic_end ()
                               && ! tmp.is_classdef_object ()));
 
             if (split)
               {
                 try
                   {
diff --git a/liboctave/array/dim-vector.h b/liboctave/array/dim-vector.h
--- a/liboctave/array/dim-vector.h
+++ b/liboctave/array/dim-vector.h
@@ -209,17 +209,17 @@ public:
     for (const octave_idx_type l: all_lengths)
       *rep++ = l;
     rep -= all_lengths.size ();
   }
 
   // Fast access with absolutely no checking
 
   octave_idx_type& xelem (int i) { return rep[i]; }
-    
+
   octave_idx_type xelem (int i) const { return rep[i]; }
 
   // Safe access to to elements
 
   octave_idx_type& elem (int i)
   {
 #if defined (OCTAVE_ENABLE_BOUNDS_CHECK)
     assert (i >= 0 && i < ndims ());
diff --git a/liboctave/wrappers/localcharset-wrapper.h b/liboctave/wrappers/localcharset-wrapper.h
--- a/liboctave/wrappers/localcharset-wrapper.h
+++ b/liboctave/wrappers/localcharset-wrapper.h
@@ -23,14 +23,14 @@ along with Octave; see the file COPYING.
 #if ! defined (octave_localcharset_wrapper_h)
 #define octave_localcharset_wrapper_h 1
 
 #if defined __cplusplus
 extern "C" {
 #endif
 
 extern const char *octave_locale_charset_wrapper (void);
-  
+
 #if defined __cplusplus
 }
 #endif
 
 #endif
diff --git a/scripts/+containers/Map.m b/scripts/+containers/Map.m
--- a/scripts/+containers/Map.m
+++ b/scripts/+containers/Map.m
@@ -429,17 +429,17 @@ classdef Map < handle
           endif
         case "{}"
           error ("containers.Map: only '()' indexing is supported for assigning values");
       endswitch
     endfunction
 
     function newobj = horzcat (varargin)
       warning ("Octave:language-extension",
-               "containers.Map: horizontal concatenation is an Octave-only feature");   
+               "containers.Map: horizontal concatenation is an Octave-only feature");
       newobj = vertcat (varargin{:});
     endfunction
 
     function newobj = vertcat (varargin)
       ## When concatenating maps, the data type of all values must be
       ## consistent with the ValueType of the leftmost map.
       keySet = cell (1, 0);
       for i = 1:numel (varargin)
@@ -510,17 +510,17 @@ classdef Map < handle
           this.numeric_keys = false;
         case {"double", "single", "int32", "uint32", "int64", "uint64"}
           this.numeric_keys = true;
         otherwise
           error ("containers.Map: unsupported KeyType");
       endswitch
 
       if (! any (strcmp (this.ValueType, {"any"; "char"; "logical";
-                                          "double"; "single"; 
+                                          "double"; "single";
                                           "int8"; "uint8"; "int16"; "uint16";
                                           "int32"; "uint32";
                                           "int64"; "uint64"})))
         error ("containers.Map: unsupported ValueType");
       endif
     endfunction
 
   endmethods
diff --git a/scripts/gui/uicontrol.m b/scripts/gui/uicontrol.m
--- a/scripts/gui/uicontrol.m
+++ b/scripts/gui/uicontrol.m
@@ -107,10 +107,10 @@ function hui = uicontrol (varargin)
 
   [h, args] = __uiobject_split_args__ ("uicontrol", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   htmp = __go_uicontrol__ (h, args{:});
 
   if (nargout > 0)
     hui = htmp;
   endif
-  
+
 endfunction
diff --git a/scripts/gui/uipanel.m b/scripts/gui/uipanel.m
--- a/scripts/gui/uipanel.m
+++ b/scripts/gui/uipanel.m
@@ -57,14 +57,14 @@
 
 ## Author: goffioul
 
 function hui = uipanel (varargin)
 
   [h, args] = __uiobject_split_args__ ("uipanel", varargin,
                                        {"figure", "uipanel", "uibuttongroup"});
   htmp = __go_uipanel__ (h, args{:});
-  
+
   if (nargout > 0)
     hui = htmp;
   endif
 
 endfunction
diff --git a/scripts/gui/uipushtool.m b/scripts/gui/uipushtool.m
--- a/scripts/gui/uipushtool.m
+++ b/scripts/gui/uipushtool.m
@@ -69,16 +69,16 @@ function hui = uipushtool (varargin)
   if (isempty (h))
     h = findobj (gcf, "-depth", 1, "type", "uitoolbar");
     if (isempty (h))
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
-  
+
   htmp = __go_uipushtool__ (h, args{:});
-  
+
   if (nargout > 0)
     hui = htmp;
   endif
 
 endfunction
diff --git a/scripts/gui/uitoggletool.m b/scripts/gui/uitoggletool.m
--- a/scripts/gui/uitoggletool.m
+++ b/scripts/gui/uitoggletool.m
@@ -69,16 +69,16 @@ function hui = uitoggletool (varargin)
   if (isempty (h))
     h = findobj (gcf, "-depth", 1, "type", "uitoolbar");
     if (isempty (h))
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
-  
+
   htmp = __go_uitoggletool__ (h, args{:});
-  
+
   if (nargout > 0)
     hui = htmp;
   endif
 
 endfunction
diff --git a/scripts/gui/uitoolbar.m b/scripts/gui/uitoolbar.m
--- a/scripts/gui/uitoolbar.m
+++ b/scripts/gui/uitoolbar.m
@@ -51,16 +51,16 @@
 ## @seealso{figure, uitoggletool, uipushtool}
 ## @end deftypefn
 
 ## Author: goffioul
 
 function hui = uitoolbar (varargin)
 
   [h, args] = __uiobject_split_args__ ("uitoolbar", varargin, {"figure"});
-  
+
   htmp = __go_uitoolbar__ (h, args{:});
-  
+
   if (nargout > 0)
     hui = htmp;
   endif
 
 endfunction
diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -27,17 +27,17 @@
 ## If a return value is requested, return a structure array with the fields
 ##
 ## @table @asis
 ## @item name
 ## File or directory name.
 ##
 ## @item folder
 ## Location of file or directory
-## 
+##
 ## @item date
 ## Timestamp of file modification (string value).
 ##
 ## @item bytes
 ## File size in bytes.
 ##
 ## @item isdir
 ## True if name is a directory.
diff --git a/scripts/plot/appearance/annotation.m b/scripts/plot/appearance/annotation.m
--- a/scripts/plot/appearance/annotation.m
+++ b/scripts/plot/appearance/annotation.m
@@ -1523,17 +1523,17 @@ endfunction
 %!   assert (get (hpa, "xdata"), [0.2; 0.4; 0.4; 0.2], eps);
 %!   assert (get (hpa, "ydata"), [0.7; 0.7; 0.9; 0.9], eps);
 %!   assert (get (hpa, "linewidth"), 2);
 %!   assert (get (hpa, "linestyle"), "--");
 %!   assert (get (hpa, "edgecolor"), [1 0 0]);
 %!   assert (get (hpa, "edgecolor"), get (h, "color"));
 %!   assert (get (hpa, "facecolor"), [0 0 1]);
 %!   assert (get (hpa, "facealpha"), .6);
-%!  
+%!
 %!   assert (gca (), hax);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
 ## test units conversion
 %!test
 %! hf = figure ("visible", "off");
diff --git a/scripts/sparse/ilu.m b/scripts/sparse/ilu.m
--- a/scripts/sparse/ilu.m
+++ b/scripts/sparse/ilu.m
@@ -456,17 +456,17 @@ endfunction
 %! opts.thresh = 0;
 %! [L, U] = ilu (A_large, opts);
 %! assert (norm (A_large - L*U, "fro") / norm (A_large, "fro"), eps, eps);
 
 ## Specific tests for ilutp
 
 %!shared A
 %! A = sparse ([0 0 4 3 1; 5 1 2.3 2 4.5; 0 0 0 2 1;0 0 8 0 2.2; 0 0 9 9 1 ]);
-%! 
+%!
 %!test
 %! opts.udiag = 1;
 %! opts.type = "ilutp";
 %! opts.droptol = 0.2;
 %! [L, U, P] = ilu (A, opts);
 %! assert (norm (U, "fro"), 17.4577, 1e-4);
 %! assert (norm (L, "fro"), 2.4192, 1e-4);
 %!
diff --git a/scripts/statistics/base/corrcoef.m b/scripts/statistics/base/corrcoef.m
--- a/scripts/statistics/base/corrcoef.m
+++ b/scripts/statistics/base/corrcoef.m
@@ -47,17 +47,17 @@
 ## @table @asis
 ## @item @qcode{"alpha"}
 ## Confidence level used for the definition of the bounds of the confidence
 ## interval, @var{lci} and @var{hci}.  Default is 0.05, i.e., 95% confidence
 ## interval.
 ##
 ## @item @qcode{"rows"}
 ## Determine processing of NaN values.  Acceptable values are @qcode{"all"},
-## @qcode{"complete"}, and @qcode{"pairwise"}.  Default is @qcode{"all"}. 
+## @qcode{"complete"}, and @qcode{"pairwise"}.  Default is @qcode{"all"}.
 ## With @qcode{"complete"}, only the rows without NaN values are considered.
 ## With @qcode{"pairwise"}, the selection of NaN-free rows is made for each
 ## pair of variables.
 ##
 ## @end table
 ##
 ## @seealso{corr, cov, cor_test}
 ## @end deftypefn
@@ -68,17 +68,17 @@
 function [r, p, lci, hci] = corrcoef (x, varargin)
 
   if (nargin == 0)
     print_usage ();
   endif
 
   alpha = 0.05;
   rows = "all";
-  
+
   if (nargin > 1)
 
     ## Check for numeric y argument
     if (isnumeric (varargin{1}))
       x = [x(:), varargin{1}(:)];
       varargin(1) = [];
     endif
 
@@ -92,17 +92,17 @@ function [r, p, lci, hci] = corrcoef (x,
       if (numel (varargin) < i+1)
         error ('corrcoef: parameter "%s" missing value', parameter);
       endif
       value = varargin{i+1};
 
       switch (tolower (parameter))
         case "alpha"
           if (isnumeric (value) && isscalar (value)
-              && value >= 0 && value <= 1) 
+              && value >= 0 && value <= 1)
             alpha = value;
           else
             error ('corrcoef: "alpha" must be a number between 0 and 1');
           endif
 
         case "rows"
           if (! ischar (value))
             error ('corrcoef: "rows" value must be a string');
@@ -116,29 +116,29 @@ function [r, p, lci, hci] = corrcoef (x,
           endswitch
 
         otherwise
           error ('corrcoef: Unknown option "%s"', parameter);
 
       endswitch
     endfor
   endif
-  
+
   if (strcmp (rows, "complete"))
     x(any (isnan (x), 2), :) = [];
   endif
-  
+
   if (isempty (x) || isscalar (x))
     r = p = lci = hci = NaN;
     return;
   endif
-  
+
   ## Flags for calculation
   pairwise = strcmp (rows, "pairwise");
-  calc_pval = nargout > 1; 
+  calc_pval = nargout > 1;
 
   if (isrow (x))
     x = x(:);
   endif
   [m, n] = size (x);
   r = eye (n);
   if (calc_pval)
     p = eye (n);
diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -552,17 +552,17 @@ function [__n, __nmax, __nxfail, __nbug,
             __bug_id = __tmp(1:__idx2-1);
             __feat_line = __feat_line(1:__idx1-1);
           endif
         endif
         __idx = index (__feat_line, ";");
         if (__idx)
           __runtime_feat_test = __feat_line(__idx+1:end);
           __feat_line = __feat_line(1:__idx-1);
-        else          
+        else
           __runtime_feat_test = "";
         endif
         __feat = regexp (__feat_line, '\w+', 'match');
         __feat = strrep (__feat, "HAVE_", "");
         __have_feat = __have_feature__ (__feat);
         if (__have_feat)
           if (isempty (__runtime_feat_test) || eval (__runtime_feat_test))
             if (isempty (__bug_id))
