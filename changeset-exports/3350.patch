# HG changeset patch
# User jwe
# Date 942423497 0
#      Fri Nov 12 16:18:17 1999 +0000
# Node ID 729ad2b6a052da83227bf42474ea1484811e6eae
# Parent  a007eb407ff54b4ab63a958e4801121a893e6a42
[project @ 1999-11-12 16:18:16 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+1999-11-12  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* utils.cc (jump_to_top_level): No longer declared extern "C".
+
+	* cutils.c (octave_strcasecmp, octave_strncasecmp): New functions.
+	* utils.cc (almost_match): Call octave_strncasecmp instead of
+	calling strncasecmp directly.
+
 1999-11-10  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* parse.y: Don't define warn_reload_forces_clear here.
 
 	* Makefile.in (DISTFILES): Include DOCSTRINGS.
 
 1999-11-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/cutils.c b/src/cutils.c
--- a/src/cutils.c
+++ b/src/cutils.c
@@ -34,16 +34,18 @@ Software Foundation, 59 Temple Place - S
 #include "systime.h"
 
 #ifdef HAVE_POLL_H
 #include <poll.h>
 #elif HAVE_SYS_POLL_H
 #include <sys/poll.h>
 #endif
 
+#include <string.h>
+
 static void
 do_octave_usleep (unsigned int useconds)
 {
 #if defined (HAVE_USLEEP)
 
   usleep (useconds);
 
 #elif defined (HAVE_SELECT)
@@ -73,13 +75,25 @@ octave_usleep (unsigned int useconds)
   unsigned int usec = useconds % 1000000;
 
   if (sec > 0)
     sleep (sec);
 
   do_octave_usleep (usec);
 }
 
+int
+octave_strcasecmp (const char *s1, const char *s2)
+{
+  return strcasecmp (s1, s2);
+}
+
+int
+octave_strncasecmp (const char *s1, const char *s2, size_t n)
+{
+  return strncasecmp (s1, s2, n);
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -46,20 +46,16 @@ Software Foundation, 59 Temple Place - S
 #elif defined (HAVE_TERMIO_H)
 #include <termio.h>
 #elif defined (HAVE_SGTTY_H)
 #include <sgtty.h>
 #else
 LOSE! LOSE!
 #endif
 
-#ifndef HAVE_STRNCASECMP
-extern "C" int strncasecmp (const char*, const char*, size_t);
-#endif
-
 #include "SLStack.h"
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-cmplx.h"
 #include "oct-env.h"
 #include "pathsearch.h"
@@ -80,17 +76,17 @@ extern "C" int strncasecmp (const char*,
 #include "utils.h"
 #include "variables.h"
 
 // Top level context (?)
 extern jmp_buf toplevel;
 
 // Return to the main command loop in octave.cc.
 
-extern "C" void
+void
 jump_to_top_level (void)
 {
   unwind_protect::run_all ();
 
   longjmp (toplevel, 1);
 }
 
 int
@@ -99,17 +95,17 @@ almost_match (const string& std, const s
 {
   int stdlen = std.length ();
   int slen = s.length ();
 
   return (slen <= stdlen
 	  && slen >= min_match_len
 	  && (case_sens
 	      ? (strncmp (std.c_str (), s.c_str (), slen) == 0)
-	      : (strncasecmp (std.c_str (), s.c_str (), slen) == 0)));
+	      : (octave_strncasecmp (std.c_str (), s.c_str (), slen) == 0)));
 }
 
 // Ugh.
 
 int
 keyword_almost_match (const char * const *std, int *min_len, const string& s,
 		      int min_toks_to_match, int max_toks)
 {
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -33,17 +33,17 @@ class ostrstream;
 class octave_value_list;
 class string_vector;
 
 extern string search_path_for_file (const string&, const string&);
 extern string file_in_path (const string&, const string&);
 extern string fcn_file_in_path (const string&);
 extern string oct_file_in_path (const string&);
 
-extern "C" void jump_to_top_level (void) GCC_ATTR_NORETURN;
+extern void jump_to_top_level (void) GCC_ATTR_NORETURN;
 
 extern int almost_match (const string& std, const string& s,
 			 int min_match_len = 1, int case_sens = 1);
 
 extern int
 keyword_almost_match (const char * const *std, int *min_len,
 		      const string& s, int min_toks_to_match,
 		      int max_toks);
@@ -55,15 +55,19 @@ extern const char *undo_string_escape (c
 extern string do_string_escapes (const string& s);
 
 extern string undo_string_escapes (const string& s);
 
 extern int check_preference (const string& var);
 
 extern "C" void octave_usleep (unsigned int useconds);
 
+extern "C" int octave_strcasecmp (const char *s1, const char *s2);
+
+extern "C" int octave_strncasecmp (const char *s1, const char *s2, size_t n);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
