# HG changeset patch
# User Rik <rik@octave.org>
# Date 1531323670 25200
#      Wed Jul 11 08:41:10 2018 -0700
# Node ID c71d13bf2b63f8844e4830975a6130bd499fb34e
# Parent  7d7970c7b3e83a3f44b3b5c81dde9e7cfe1c9430
# Parent  07c2c42f457e07ab3b000f7aef48f63fb09e27bd
maint: merge stable to default.

diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -2246,17 +2246,17 @@ Data source variables.
 @end table
 
 @node Contour Groups
 @subsubsection Contour Groups
 @cindex series objects
 @cindex contour series
 
 Contour group objects are created by the @code{contour}, @code{contourf}, and
-@code{contour3} functions.  The are also one of the handles returned by the
+@code{contour3} functions.  They are also one of the handles returned by the
 @code{surfc} and @code{meshc} functions.  The properties of the contour group
 are
 
 @table @code
 @item contourmatrix
 A read only property that contains the data return by @code{contourc} used to
 create the contours of the plot.
 
diff --git a/examples/code/embedded.cc b/examples/code/embedded.cc
--- a/examples/code/embedded.cc
+++ b/examples/code/embedded.cc
@@ -28,17 +28,17 @@ main (void)
       //
       //   if (! interpreter.initialized ())
       //     {
       //       std::cerr << "Octave interpreter initialization failed!"
       //                 << std::endl;
       //       exit (status);
       //     }
       //
-      // You may skip this step if you don't need to do do anything
+      // You may skip this step if you don't need to do anything
       // between reading the startup files and telling the interpreter
       // that you are ready to execute commands.
 
       // Tell the interpreter that we're ready to execute commands:
 
       int status = interpreter.execute ();
 
       if (status != 0)
diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -2619,17 +2619,17 @@ the object @var{a}.
 
 When given a second argument, @var{dim}, return the size of the corresponding
 dimension.
 
 With a single output argument, @code{size} returns a row vector.  When called
 with multiple output arguments, @code{size} returns the size of dimension N
 in the Nth argument.  The number of rows, dimension 1, is returned in the
 first argument, the number of columns, dimension 2, is returned in the
-second argument, etc.  If there are more dimensions in @var{a} then there are
+second argument, etc.  If there are more dimensions in @var{a} than there are
 output arguments, @code{size} returns the total number of elements in the
 remaining dimensions in the final output argument.
 
 Example 1: single row vector output
 
 @example
 @group
 size ([1, 2; 3, 4; 5, 6])
diff --git a/libinterp/corefcn/defaults.cc b/libinterp/corefcn/defaults.cc
--- a/libinterp/corefcn/defaults.cc
+++ b/libinterp/corefcn/defaults.cc
@@ -463,17 +463,17 @@ OCTAVE_HOME corresponds to the configura
 
 /*
 %!assert (ischar (OCTAVE_HOME ()))
 %!error OCTAVE_HOME (1)
 */
 
 DEFUN (OCTAVE_EXEC_HOME, args, ,
        doc: /* -*- texinfo -*-
-@deftypefn {} {} OCTAVE_HOME ()
+@deftypefn {} {} OCTAVE_EXEC_HOME ()
 Return the name of the top-level Octave installation directory for
 architecture-dependent files.  If not specified separately, the value
 is the same as OCTAVE_HOME@.  OCTAVE_EXEC_HOME corresponds to the
 configuration variable @var{exec_prefix}.
 @seealso{EXEC_PATH, IMAGE_PATH, OCTAVE_HOME}
 @end deftypefn */)
 {
   if (args.length () != 0)
diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1428,17 +1428,17 @@ DEFMETHOD (warning, interp, args, nargou
 @deftypefnx {} {} warning ("on", @var{id})
 @deftypefnx {} {} warning ("off", @var{id})
 @deftypefnx {} {} warning ("error", @var{id})
 @deftypefnx {} {} warning ("query", @var{id})
 @deftypefnx {} {} warning (@var{state}, @var{id}, "local")
 @deftypefnx {} {} warning (@var{warning_struct})
 @deftypefnx {} {@var{warning_struct} =} warning (@dots{})
 @deftypefnx {} {@var{mode_struct} =} warning (@var{state}, @var{mode})
-@deftypefnx {} {} warning (@var{mode_st})
+@deftypefnx {} {} warning (@var{mode_struct})
 
 Display a warning message or control the behavior of Octave's warning system.
 
 The first call form uses a template @var{template} and optional additional
 arguments to display a message on the @code{stderr} stream.  The message is
 formatted using the same rules as the @code{printf} family of functions
 (@pxref{Formatted Output}) and prefixed by the character string
 @w{@samp{warning: }}.  You should use this function when you want to notify the
diff --git a/libinterp/corefcn/hex2num.cc b/libinterp/corefcn/hex2num.cc
--- a/libinterp/corefcn/hex2num.cc
+++ b/libinterp/corefcn/hex2num.cc
@@ -289,17 +289,17 @@ string has a length of 8.  For example:
 num2hex (single ([-1, 1, e, Inf]))
 @result{} "bf800000
     3f800000
     402df854
     7f800000"
 @end group
 @end example
 
-With the optional second argument @qcode{"cell}, return a cell array of
+With the optional second argument @qcode{"cell"}, return a cell array of
 strings instead of a character array.
 @seealso{hex2num, hex2dec, dec2hex}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -1797,18 +1797,18 @@ DEFUN (octave_core_file_limit, args, nar
        doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{val} =} octave_core_file_limit ()
 @deftypefnx {} {@var{old_val} =} octave_core_file_limit (@var{new_val})
 @deftypefnx {} {} octave_core_file_limit (@var{new_val}, "local")
 Query or set the internal variable that specifies the maximum amount of memory
 that Octave will save when writing a crash dump file.
 
 The limit is measured in kilobytes and is applied to the top-level workspace.
-The name of the crash dump file is is specified by
-@var{octave_core_file_name}).
+The name of the crash dump file is specified by
+@var{octave_core_file_name}.
 
 If @var{octave_core_file_options} flags specify a binary format, then
 @var{octave_core_file_limit} will be approximately the maximum size of the
 file.  If a text file format is used, then the file could be much larger than
 the limit.  The default value is -1 (unlimited).
 
 When called from inside a function with the @qcode{"local"} option, the
 variable is changed locally for the function and any subroutines it calls.
diff --git a/scripts/general/integral2.m b/scripts/general/integral2.m
--- a/scripts/general/integral2.m
+++ b/scripts/general/integral2.m
@@ -83,17 +83,17 @@
 ## @group
 ## @var{f} = @@(@var{x},@var{y}) 2*ones (size (@var{x}));
 ## @var{q} = integral2 (@var{f}, 0, 1, 0, 1)
 ##   @result{} @var{q} =  2
 ## @end group
 ## @end example
 ##
 ## The result is a volume, which for this constant-value integrand, is just
-## @code{@var{Length} * @var{Width} x @var{Height}}.
+## @code{@var{Length} * @var{Width} * @var{Height}}.
 ##
 ## Example 2 : integrate a triangular region in x-y plane
 ##
 ## @example
 ## @group
 ## @var{f} = @@(@var{x},@var{y}) 2*ones (size (@var{x}));
 ## @var{ymax} = @@(@var{x}) 1 - @var{x};
 ## @var{q} = integral2 (@var{f}, 0, 1, 0, @var{ymax})
diff --git a/scripts/general/integral3.m b/scripts/general/integral3.m
--- a/scripts/general/integral3.m
+++ b/scripts/general/integral3.m
@@ -84,17 +84,17 @@
 ## @group
 ## @var{f} = @@(@var{x},@var{y},@var{z}) ones (size (@var{x}));
 ## @var{q} = integral3 (@var{f}, 0, 1, 0, 1, 0, 1)
 ##   @result{} @var{q} =  1
 ## @end group
 ## @end example
 ##
 ## For this constant-value integrand, the result is a volume which is just
-## @code{@var{Length} * @var{Width} x @var{Height}}.
+## @code{@var{Length} * @var{Width} * @var{Height}}.
 ##
 ## Example 2 : integrate over a spherical volume
 ##
 ## @example
 ## @group
 ## @var{f} = @@(@var{x},@var{y}) ones (size (@var{x}));
 ## @var{ymax} = @@(@var{x}) sqrt (1 - @var{x}.^2);
 ## @var{zmax} = @@(@var{x}) sqrt (1 - @var{x}.^2 - @var{y}.^2);
diff --git a/scripts/general/quad2d.m b/scripts/general/quad2d.m
--- a/scripts/general/quad2d.m
+++ b/scripts/general/quad2d.m
@@ -88,17 +88,17 @@
 ## @group
 ## @var{f} = @@(@var{x},@var{y}) 2*ones (size (@var{x}));
 ## @var{q} = quad2d (@var{f}, 0, 1, 0, 1)
 ##   @result{} @var{q} =  2
 ## @end group
 ## @end example
 ##
 ## The result is a volume, which for this constant-value integrand, is just
-## @code{@var{Length} * @var{Width} x @var{Height}}.
+## @code{@var{Length} * @var{Width} * @var{Height}}.
 ##
 ## Example 2 : integrate a triangular region in x-y plane
 ##
 ## @example
 ## @group
 ## @var{f} = @@(@var{x},@var{y}) 2*ones (size (@var{x}));
 ## @var{ymax} = @@(@var{x}) 1 - @var{x};
 ## @var{q} = quad2d (@var{f}, 0, 1, 0, @var{ymax})
diff --git a/scripts/help/warning_ids.m b/scripts/help/warning_ids.m
--- a/scripts/help/warning_ids.m
+++ b/scripts/help/warning_ids.m
@@ -169,18 +169,17 @@
 ## eigenvalues is less than the number of requested eigenvalues.
 ## By default, the @code{Octave:eigs:UnconvergedEigenvalues} warning is
 ## enabled.
 ##
 ## @item Octave:erase:chararray
 ## If the @code{Octave:erase:chararray} warning is enabled then the erase
 ## function will issue a warning if the input pattern is a character array
 ## rather than a string or cell array of strings.
-## By default, the @code{Octave:eigs:UnconvergedEigenvalues} warning is
-## enabled.
+## By default, the @code{Octave:erase:chararray} warning is enabled.
 ##
 ## @item Octave:data-file-in-path
 ## If the @code{Octave:data-file-in-path} warning is enabled, a warning is
 ## issued when Octave does not find the target of a file operation such as
 ## @code{load} or @code{fopen} directly, but is able to locate the file in
 ## Octave's search @code{path} for files.  The warning could indicate that a
 ## different file target than the programmer intended is being used.
 ## By default, the @code{Octave:data-file-in-path} warning is enabled.
diff --git a/scripts/ode/decic.m b/scripts/ode/decic.m
--- a/scripts/ode/decic.m
+++ b/scripts/ode/decic.m
@@ -56,19 +56,19 @@
 ## @var{yp0}(i) to change.
 ##
 ## The optional seventh argument @var{options} is a structure array.  Use
 ## @code{odeset} to generate this structure.  The relevant options are
 ## @code{RelTol} and @code{AbsTol} which specify the error thresholds used to
 ## compute the initial conditions.
 ##
 ## The function typically returns two outputs.  Variable @var{y0_new} is a
-## column vector and contains the consistent initial value of y.  The output
-## @var{yp0_new} is a column vector and contains the consistent initial value
-## of yp.
+## column vector and contains the consistent initial value of @var{y}.  The
+## output @var{yp0_new} is a column vector and contains the consistent initial
+## value of @var{yp}.
 ##
 ## The optional third output @var{resnorm} is the norm of the vector of
 ## residuals.  If @var{resnorm} is small, @code{decic} has successfully
 ## computed the initial conditions.  If the value of @var{resnorm} is large,
 ## use @code{RelTol} and @code{AbsTol} to adjust it.
 ##
 ## Example: Compute initial conditions for @nospell{Robertson's} equations:
 ##
diff --git a/scripts/optimization/lsqnonneg.m b/scripts/optimization/lsqnonneg.m
--- a/scripts/optimization/lsqnonneg.m
+++ b/scripts/optimization/lsqnonneg.m
@@ -31,17 +31,17 @@
 ## Minimize @code{norm (@var{c}*@var{x} - @var{d})} subject to
 ## @code{@var{x} >= 0}.
 ##
 ## @var{c} and @var{d} must be real matrices.
 ##
 ## @var{x0} is an optional initial guess for the solution @var{x}.
 ##
 ## @var{options} is an options structure to change the behavior of the
-## algorithm (@pxref{XREFoptimset,,optimset}.  @code{lsqnonneg} recognizes
+## algorithm (@pxref{XREFoptimset,,optimset}).  @code{lsqnonneg} recognizes
 ## these options: @qcode{"MaxIter"}, @qcode{"TolX"}.
 ##
 ## Outputs:
 ##
 ## @table @var
 ## @item resnorm
 ## The squared 2-norm of the residual: @code{norm (@var{c}*@var{x}-@var{d})^2}
 ##
diff --git a/scripts/optimization/pqpnonneg.m b/scripts/optimization/pqpnonneg.m
--- a/scripts/optimization/pqpnonneg.m
+++ b/scripts/optimization/pqpnonneg.m
@@ -31,17 +31,17 @@
 ## @code{@var{x} >= 0}.
 ##
 ## @var{c} and @var{d} must be real matrices, and @var{c} must be symmetric and
 ## positive definite.
 ##
 ## @var{x0} is an optional initial guess for the solution @var{x}.
 ##
 ## @var{options} is an options structure to change the behavior of the
-## algorithm (@pxref{XREFoptimset,,optimset}.  @code{pqpnonneg} recognizes
+## algorithm (@pxref{XREFoptimset,,optimset}).  @code{pqpnonneg} recognizes
 ## one option: @qcode{"MaxIter"}.
 ##
 ## Outputs:
 ##
 ## @table @var
 ##
 ## @item x
 ## The solution matrix
diff --git a/scripts/sparse/bicg.m b/scripts/sparse/bicg.m
--- a/scripts/sparse/bicg.m
+++ b/scripts/sparse/bicg.m
@@ -137,17 +137,17 @@
 ## M = M1 * M2;
 ## Afun = @@(x, string) strcmp (string, "notransp") * (A * x) + ...
 ##                      strcmp (string, "transp") * (A' * x);
 ## Mfun = @@(x, string) strcmp (string, "notransp") * (M \ x) + ...
 ##                      strcmp (string, "transp") * (M' \ x);
 ## M1fun = @@(x, string) strcmp (string, "notransp") * (M1 \ x) + ...
 ##                      strcmp (string, "transp") * (M1' \ x);
 ## M2fun = @@(x, string) strcmp (string, "notransp") * (M2 \ x) + ...
-##                      strcmp (string, "transp") * (M2' \ x);;
+##                      strcmp (string, "transp") * (M2' \ x);
 ## @end group
 ## @end example
 ##
 ## @sc{Example 1:} simplest usage of @code{bicg}
 ##
 ## @example
 ## x = bicg (A, b)
 ## @end example
diff --git a/scripts/specfun/betaincinv.m b/scripts/specfun/betaincinv.m
--- a/scripts/specfun/betaincinv.m
+++ b/scripts/specfun/betaincinv.m
@@ -50,17 +50,17 @@
 ## is returned for each of the other inputs.
 ##
 ## If two or more inputs are not scalar, the sizes of them must agree, and
 ## @code{betaincinv} is applied element-by-element.
 ##
 ## The variable @var{y} must be in the interval [0,1], while @var{a} and
 ## @var{b} must be real and strictly positive.
 ##
-## By default, @var{tail} is @qcode{"lower")} and the inverse of the incomplete
+## By default, @var{tail} is @qcode{"lower"} and the inverse of the incomplete
 ## beta function integrated from 0 to @var{x} is computed.  If @var{tail} is
 ## @qcode{"upper"} then the complementary function integrated from @var{x} to 1
 ## is inverted.
 ##
 ## The function is computed by standard Newton's method, by solving
 ## @tex
 ## $$
 ##  y - I_x (a, b) = 0
