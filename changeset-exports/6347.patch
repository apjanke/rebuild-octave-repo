# HG changeset patch
# User jwe
# Date 1172190538 0
#      Fri Feb 23 00:28:58 2007 +0000
# Node ID e40a46a100b6104313971a4bb426508dd45b8286
# Parent  f3c5b02c66bf150f6d90fb0dc48a7fbfe09b972d
[project @ 2007-02-23 00:28:58 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2007-02-22  John W. Eaton  <jwe@octave.org>
 
+	* mex.cc (mxArray_cell::mxArray_cell (const mxArray_cell&),
+	mxArray_struct::mxArray_struct (const mxArray_struct&)):
+	Avoid calling clone on 0 elements.
+
 	* variables.cc (symbol_out_of_date): If checking nested function,
 	look for file using parent function name.  Delete unused
 	variable NAMES.
 
 	* src/oct-stream.cc (octave_stream::do_gets): If no limit or not
 	at limit, read ahead one character at end of line for compatibility.
 	(octave_stream::gets, octave_stream::getl): Set max_len to -1 if
 	tc_max_len is not defined.
diff --git a/src/mex.cc b/src/mex.cc
--- a/src/mex.cc
+++ b/src/mex.cc
@@ -1834,17 +1834,20 @@ private:
       data (static_cast<mxArray **> (malloc (nfields * get_number_of_elements () * sizeof (mxArray *))))
   {
     for (int i = 0; i < nfields; i++)
       fields[i] = strsave (val.fields[i]);
 
     int nel = get_number_of_elements ();
 
     for (int i = 0; i < nel * nfields; i++)
-      data[i] = val.data[i]->clone ();
+      {
+	mxArray *ptr = val.data[i];
+	data[i] = ptr ? ptr->clone () : 0;
+      }
   }
 };
 
 // Matlab-style cell arrays.
 
 class mxArray_cell : public mxArray_matlab
 {
 public:
@@ -1908,17 +1911,20 @@ private:
 
   mxArray_cell (const mxArray_cell& val)
     : mxArray_matlab (val),
       data (static_cast<mxArray **> (malloc (get_number_of_elements () * sizeof (mxArray *))))
   {
     int nel = get_number_of_elements ();
 
     for (int i = 0; i < nel; i++)
-      data[i] = val.data[i]->clone ();
+      {
+	mxArray *ptr = val.data[i];
+	data[i] = ptr ? ptr->clone () : 0;
+      }
   }
 };
 
 // ------------------------------------------------------------------
 
 mxArray::mxArray (const octave_value& ov)
   : rep (new mxArray_octave_value (ov)), name (0) { }
 
