# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1263372497 -3600
#      Wed Jan 13 09:48:17 2010 +0100
# Branch release-3-2-x
# Node ID 22bc7fc7ff4d9581f46d3df9c126d2d19d7e5ec3
# Parent  232a0ddce7cd15edd6442bf5e3323f629899dde9
fix extract_function & add obsoleteness warning

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-10-15  Jaroslav Hajek  <highegg@gmail.com>
+
+	* variables.cc (extract_function): Pass 0 to eval_string to avoid
+	error.
+
 2009-07-23  John W. Eaton  <jwe@octave.org>
 
 	* toplev.cc (IGNORE_EXCEPTION, SAFE_CALL): New macros.
 	(clean_up_and_exit, do_octave_atexit): Use SAFE_CALL to handle
 	exceptions while preparing to exit.
 
 2009-08-04  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -154,28 +154,31 @@ extract_function (const octave_value& ar
       std::string cmd = header;
       cmd.append (s);
       cmd.append (trailer);
 
       if (! error_state)
 	{
 	  int parse_status;
 
-	  eval_string (cmd, true, parse_status);
+	  eval_string (cmd, true, parse_status, 0);
 
 	  if (parse_status == 0)
 	    {
 	      retval = is_valid_function (fname, warn_for, 0);
       
 	      if (! retval)
 		{
 		  error ("%s: `%s' is not valid as a function",
 			 warn_for.c_str (), fname.c_str ());
 		  return retval;
 		}
+
+              warning ("%s: passing function body as a string is obsolete."
+                       " Please use anonymous functions.", warn_for.c_str ());
 	    }
 	  else
 	    error ("%s: `%s' is not valid as a function",
 		   warn_for.c_str (), fname.c_str ());
 	}
       else
 	error ("%s: expecting first argument to be a string",
 	       warn_for.c_str ());
