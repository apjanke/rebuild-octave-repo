# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1258709749 -3600
#      Fri Nov 20 10:35:49 2009 +0100
# Node ID edf065b51fa94456d4328017a183e559ac725110
# Parent  71483d19204fc5865d1cc66684c5d78b1d01a9b3
fix dec2base

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-20  Jaroslav Hajek  <highegg@gmail.com>
+
+	* scripts/strings/dec2base.m: Fix division.
+
 2009-11-20  Lukas Reichlin <lukas.reichlin@swissonline.ch>
 
 	* linear-algebra/krylov.m: Add missing swap routine.
 
 2009-11-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/__isequal__.m: Check for isnumeric|islogical.
 	* testfun/assert.m: Ditto.
diff --git a/scripts/strings/dec2base.m b/scripts/strings/dec2base.m
--- a/scripts/strings/dec2base.m
+++ b/scripts/strings/dec2base.m
@@ -81,17 +81,17 @@ function retval = dec2base (n, base, len
 
   if (nargin == 3)
     max_len = max (max_len, len);
   endif
   
   ## determine digits for each number
   power = ones (length (n), 1) * (base .^ (max_len-1 : -1 : 0));
   n = n(:) * ones (1, max_len);
-  digits = floor (rem (n, base*power) ./ power);
+  digits = floor (double (rem (n, base*power)) ./ power);
 
   ## convert digits to symbols
   retval = reshape (symbols (digits+1), size (digits));
 
   ## Check if the first element is the zero symbol. It seems possible
   ## that LEN is provided, and is less than the computed MAX_LEN and
   ## MAX_LEN is computed to be one larger than necessary, so we would
   ## have a leading zero to remove.  But if LEN >= MAX_LEN, we should
