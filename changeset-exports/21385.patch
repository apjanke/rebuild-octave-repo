# HG changeset patch
# User Rik <rik@octave.org>
# Date 1456425479 28800
#      Thu Feb 25 10:37:59 2016 -0800
# Node ID 89fa0694aa2e5f173a15fc550422c2175420e355
# Parent  ad1dbbd23f1d94ed2bfb5244f14963ca5ab55c9e
Fix check-missing-semicolon QA target (bug #47277).

* scripts/module.mk: Recode check-missing-semicolon target to exclude
files with classdef or nested functions.

* subsref.m, subsref.m, cplxpair.m, waitbar.m, cubehelix.m, imshow.m, edit.m,
unpack.m, annotation.m, axis.m, legend.m, __contour__.m,
__ezplot__.m, __plt__.m, __gnuplot_drawnow__.m, copyobj.m, linkprop.m,
__add_default_menu__.m, __gnuplot_print__.m, __print_parse_opts__.m,
struct2hdl.m, ellipke.m, gallery.m, strjoin.m:
Add missing semicolons to statements.

diff --git a/scripts/audio/@audioplayer/subsref.m b/scripts/audio/@audioplayer/subsref.m
--- a/scripts/audio/@audioplayer/subsref.m
+++ b/scripts/audio/@audioplayer/subsref.m
@@ -31,12 +31,12 @@ function value = subsref (player, idx)
   if (isempty (idx))
     error ("@audioplayer/subsref: missing index");
   endif
 
   if (strcmp (idx(1).type, "."))
     field = idx.subs;
     value = get (player, field);
   else
-    error ("@audioplayer/subsref: invalid subscript type")
+    error ("@audioplayer/subsref: invalid subscript type");
   endif
 
 endfunction
diff --git a/scripts/audio/@audiorecorder/subsref.m b/scripts/audio/@audiorecorder/subsref.m
--- a/scripts/audio/@audiorecorder/subsref.m
+++ b/scripts/audio/@audiorecorder/subsref.m
@@ -32,12 +32,12 @@ function value = subsref (recorder, idx)
   if (isempty (idx))
     error ("@audiorecorder/subsref: missing index");
   endif
 
   if (strcmp (idx(1).type, "."))
     field = idx.subs;
     value = get (recorder, field);
   else
-    error ("@audiorecorder/subsref: invalid subscript type")
+    error ("@audiorecorder/subsref: invalid subscript type");
   endif
 
 endfunction
diff --git a/scripts/general/cplxpair.m b/scripts/general/cplxpair.m
--- a/scripts/general/cplxpair.m
+++ b/scripts/general/cplxpair.m
@@ -63,17 +63,17 @@ function y = cplxpair (z, tol, dim)
   if (isempty (z))
     y = zeros (size (z));
     return;
   endif
 
   if (nargin < 2 || isempty (tol))
     tol = 100;
   elseif (! isscalar (tol) || tol < 0)
-    error ("cplxpair: TOL must be a positive scalar number")
+    error ("cplxpair: TOL must be a positive scalar number");
   endif
 
   nd = ndims (z);
   if (nargin < 3)
     ## Find the first singleton dimension.
     sz = size (z);
     (dim = find (sz > 1, 1)) || (dim = 1);
   else
diff --git a/scripts/gui/waitbar.m b/scripts/gui/waitbar.m
--- a/scripts/gui/waitbar.m
+++ b/scripts/gui/waitbar.m
@@ -179,17 +179,17 @@ function updatecancelbutton (hf, dummy, 
       apos (2) += 40;
       set (hf, "position", fpos);
       set (hax, "position", apos, "units", units);
 
       hbtn = uicontrol ("style", "pushbutton", "string", "Cancel", ...
                         "position", [fpos(3)-100 10 60 25],...
                         "callback", cb, "parent", hf);
     else
-      set (hbtn, "callback", cb)
+      set (hbtn, "callback", cb);
     endif
   elseif (! isempty (hbtn))
     delete (hbtn);
     units =  get (hax, "units");
     fpos = get (hf, "position");
     set (hax, "units", "pixels");
     apos = get (hax, "position");
 
diff --git a/scripts/image/cubehelix.m b/scripts/image/cubehelix.m
--- a/scripts/image/cubehelix.m
+++ b/scripts/image/cubehelix.m
@@ -45,17 +45,17 @@
 
 ## PKG_ADD: colormap ("register", "cubehelix");
 ## PKG_DEL: colormap ("unregister", "cubehelix");
 
 function map = cubehelix (n = rows (colormap ()), start = 0.5,
                           rots = -1.5, hue = 1, gamma = 1)
 
   if (nargin > 5)
-    print_usage ()
+    print_usage ();
   elseif (! isscalar (n))
     error ("cubehelix: N must be a scalar");
   endif
   n = double (n);
 
   if (n > 1)
     coeff = [ -0.14861  -0.29227   1.97294
                1.78277  -0.90649   0.00000];
diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -145,23 +145,23 @@ function h = imshow (im, varargin)
             error ("imshow: parent must be an axes handle");
           endif
         case "reduce"
           warning ("imshow: reduce argument is not implemented");
           narg += 1;
         case "xdata"
           xdata = varargin{narg++};
           if (! isvector (xdata))
-            error ("imshow: xdata must be a vector")
+            error ("imshow: xdata must be a vector");
           endif
           xdata = [xdata(1) xdata(end)];
         case "ydata"
           ydata = varargin{narg++};
           if (! isvector (ydata))
-            error ("imshow: ydata must be a vector")
+            error ("imshow: ydata must be a vector");
           endif
           ydata = [ydata(1) ydata(end)];
         otherwise
           warning ("imshow: unrecognized property %s", arg);
           narg += 1;
       endswitch
     else
       error ("imshow: argument number %d is invalid", narg);
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -158,17 +158,17 @@ function retval = edit (varargin)
     ## User has supplied two arguments, these could be two filenames,
     ## or a combination of editor state name and new value for that state,
     ## so first check for the various states
     statevar = varargin{1};
     stateval = varargin{2};
     switch (toupper (statevar))
       case "EDITOR"
         error ("Octave:deprecated-function",
-               "The EDITOR option of edit has been removed.  Use EDITOR() directly.")
+               "The EDITOR option of edit has been removed.  Use EDITOR() directly.");
       case "HOME"
         if (! isempty (stateval) && stateval(1) == "~")
           stateval = [ get_home_directory, stateval(2:end) ];
         endif
         FUNCTION.HOME = stateval;
         return;
       case "AUTHOR"
         FUNCTION.AUTHOR = stateval;
diff --git a/scripts/miscellaneous/unpack.m b/scripts/miscellaneous/unpack.m
--- a/scripts/miscellaneous/unpack.m
+++ b/scripts/miscellaneous/unpack.m
@@ -276,17 +276,17 @@ function filelist = unpack (file, dir = 
 endfunction
 
 function files = __parse_zip__ (output)
   ## Parse the output from zip and unzip.
 
   ## Skip first line which is Archive header.
   files = char (output(2:end));
   ## Trim constant width prefix and return cell array.
-  files = cellstr (files(:,14:end))
+  files = cellstr (files(:,14:end));
 endfunction
 
 function output = __parse_tar__ (output)
   ## This is a no-op, but it makes things simpler for other cases.
 endfunction
 
 function files = __parse_gzip__ (output)
   ## Parse the output from gzip and gunzip returning the files
diff --git a/scripts/module.mk b/scripts/module.mk
--- a/scripts/module.mk
+++ b/scripts/module.mk
@@ -144,18 +144,21 @@ check-m-sources:
 	done; \
 	if test -z "$$missing"; then \
 	  echo "yes"; \
 	fi
 .PHONY: check-m-sources
 
 check-missing-semicolon:
 	@echo "checking for missing semicolons in .m files..."
-	( echo "warning on Octave:missing-semicolon;"; \
-	  for m in $(addprefix $(srcdir), $(FCN_FILES)) $(GEN_FCN_FILES); do \
+	@( echo "warning on Octave:missing-semicolon;"; \
+	  for m in $(addprefix $(srcdir)/, $(FCN_FILES)) $(GEN_FCN_FILES); do \
+	    ! $(GREP) -q -E '^classdef' $$m || continue; \
+	    ! $(GREP) -q -E '^  *\<function\>' $$m || continue; \
+	    ! (echo $$m | $(GREP) -q __splinefit__.m) || continue; \
 	    echo "source ('$$m');"; \
 	  done ) | $(SHELL) run-octave --norc --silent --no-history
 .PHONY: check-missing-semicolon
 
 ## Add rule to generate ctags.
 ## Automake would normally generate such a rule, but only if there is a
 ## xxx_SOURCES target
 ctags:
diff --git a/scripts/plot/appearance/annotation.m b/scripts/plot/appearance/annotation.m
--- a/scripts/plot/appearance/annotation.m
+++ b/scripts/plot/appearance/annotation.m
@@ -642,17 +642,17 @@ function stringdlg (hpar, prop)
   else
     prompt = "";
     def = {def};
   endif
 
   cstr = inputdlg (prompt, prop, 1, def);
 
   if (! isempty (cstr))
-    set (hpar, prop, cstr)
+    set (hpar, prop, cstr);
   endif
 endfunction
 
 function textmenu (hui, hpar)
   hm = uimenu ("parent", hui, "label", "Text");
 
   ## String;
   prop = "String";
@@ -821,17 +821,17 @@ function addbasemenu (hm, hpar, pname, v
       val = vals(ii);
       label = num2str (val);
     endif
 
     fcn = @() set (hpar, pname, val);
     htmp(ii) = uimenu (h, "label", label, "callback", fcn);
   endfor
   handle_check (hpar, {}, htmp, pname, is_numeric);
-  addlistener (hpar, pname, {@handle_check, htmp, pname, is_numeric})
+  addlistener (hpar, pname, {@handle_check, htmp, pname, is_numeric});
 endfunction
 
 function handle_check (h, dummy, hmenus, prop, is_numeric)
   vals = get (hmenus, "label");
   current = get (h, prop);
   if (is_numeric)
     current = num2str (current);
   endif
diff --git a/scripts/plot/appearance/axis.m b/scripts/plot/appearance/axis.m
--- a/scripts/plot/appearance/axis.m
+++ b/scripts/plot/appearance/axis.m
@@ -378,17 +378,17 @@ function __do_tight_option__ (ca)
     xlim .*= (1 + eps () * [-1, 1]);
   endif
   ylim = __get_tight_lims__ (ca, "y");
   if (all (ylim == 0))
     ylim = eps () * [-1 1];
   elseif (diff (ylim == 0))
     ylim .*= (1 + eps () * [-1, 1]);
   endif
-  set (ca, "xlim", xlim, "ylim", ylim)
+  set (ca, "xlim", xlim, "ylim", ylim);
   nd = __calc_dimensions__ (ca);
   is3dview = (get (ca, "view")(2) != 90);
   if (nd > 2 && is3dview)
     zlim = __get_tight_lims__ (ca, "z");
     if (all (zlim == 0))
       zlim = eps () * [-1 1];
     elseif (diff (zlim == 0))
       zlim .*= (1 + eps () * [-1, 1]);
diff --git a/scripts/plot/appearance/legend.m b/scripts/plot/appearance/legend.m
--- a/scripts/plot/appearance/legend.m
+++ b/scripts/plot/appearance/legend.m
@@ -975,17 +975,17 @@ function [hleg, hleg_obj, hplot, labels]
             units = get (ca(i), "units");
             unwind_protect
               set (ca(i), "units", "points");
               if (gnuplot && numel (ca) == 1)
                 ## Let Gnuplot handle the positioning of the keybox.
                 ## This violates strict Matlab compatibility, but reliably
                 ## renders an esthetic result.
                 set (ca(i), "position",  unmodified_axes_position);
-                set (ca(i), "activepositionproperty", "outerposition")
+                set (ca(i), "activepositionproperty", "outerposition");
               else
                 ## numel (ca) > 1 for axes overlays (like plotyy)
                 set (ca(i), "position", new_pos);
               endif
             unwind_protect_cleanup
               set (ca(i), "units", units);
             end_unwind_protect
           endfor
diff --git a/scripts/plot/draw/private/__contour__.m b/scripts/plot/draw/private/__contour__.m
--- a/scripts/plot/draw/private/__contour__.m
+++ b/scripts/plot/draw/private/__contour__.m
@@ -412,19 +412,19 @@ function update_data (h, ~, prop = "")
 
   if (! recursive)
     recursive = true;
 
     delete (get (h, "children"));
 
     switch (prop)
       case "levellist"
-        set (h, "levellistmode", "manual")
+        set (h, "levellistmode", "manual");
       case "levelstep"
-        set (h, "levelstepmode", "manual")
+        set (h, "levelstepmode", "manual");
       case "fill"
         ## Switching from filled ('k' linespec) to unfilled, reset linecolor
         if (strcmp (get (h, "fill"), "off"))
           set (h, "linecolor", "auto");
         else
           set (h, "linecolor", "black");
         endif
     endswitch
@@ -498,19 +498,19 @@ function update_text (h, ~, prop = "")
 
   if (! recursive)
     recursive = true;
 
     delete (findobj (h, "type", "text"));
 
     switch (prop)
       case "textlist"
-        set (h, "textlistmode", "manual")
+        set (h, "textlistmode", "manual");
       case "textstep"
-        set (h, "textstepmode", "manual")
+        set (h, "textstepmode", "manual");
     endswitch
 
     if (strcmp (get (h, "textlistmode"), "manual"))
       lvl = get (h, "textlist");
     elseif (strcmp (get (h, "textstepmode"), "manual"))
       lev = get (h, "levellist");
 
       lvl_eps = get_lvl_eps (lev);
diff --git a/scripts/plot/draw/private/__ezplot__.m b/scripts/plot/draw/private/__ezplot__.m
--- a/scripts/plot/draw/private/__ezplot__.m
+++ b/scripts/plot/draw/private/__ezplot__.m
@@ -515,20 +515,20 @@ function domain = find_valid_domain (X, 
     rmin = find (Zrows, 1, "first");
     rmax = find (Zrows, 1, "last");
     Zcols = any (Zfinite, 1);
     cmin = find (Zcols, 1, "first");
     cmax = find (Zcols, 1, "last");
 
     ## Handle nasty case of all NaNs
     if (isempty (rmin))
-      rmin = 1, rmax = rows (Z);
+      rmin = 1; rmax = rows (Z);
     endif
     if (isempty (cmin))
-      cmin = 1, cmax = columns (Z);
+      cmin = 1; cmax = columns (Z);
     endif
 
     if (   ! any (isnan (Z([rmin, rmax],:)(:)))
         && ! any (isnan (Z(:, [cmin, cmax])(:))))
       ## Exclude surfaces along borders which are flat (gradient =~ 0).
       ## Technically, this calculation might be better done with actual
       ## deltaX, deltaY values.  But, data is usually meshgridded
       ## (constant spacing) so working with deltaROW#, deltaCOL# is fine.
diff --git a/scripts/plot/draw/private/__plt__.m b/scripts/plot/draw/private/__plt__.m
--- a/scripts/plot/draw/private/__plt__.m
+++ b/scripts/plot/draw/private/__plt__.m
@@ -73,22 +73,22 @@ function retval = __plt__ (caller, h, va
         next_arg = varargin{k++};
       endif
 
       if (isnumeric (next_arg) && ndims (next_arg) > 2
           && any (size (next_arg) == 1))
         next_arg = squeeze (next_arg);
         if (! any (strcmp (caller, warned_callers)) && ndims (next_arg) < 3)
           warning (["%s: N-d inputs have been squeezed to less than " ...
-                    "three dimensions"], caller)
+                    "three dimensions"], caller);
           warned_callers(end+1) = caller;
         endif
       endif
       if (isnumeric (next_arg) && ndims (next_arg) > 2)
-        error ("%s: plot arrays must have less than 2 dimensions", caller)
+        error ("%s: plot arrays must have less than 2 dimensions", caller);
       endif
 
       nargs -= 1;
 
       if (ischar (next_arg) || iscellstr (next_arg))
         if (x_set)
           [options, valid] = __pltopt__ (caller, next_arg, false);
           if (! valid)
diff --git a/scripts/plot/util/__gnuplot_drawnow__.m b/scripts/plot/util/__gnuplot_drawnow__.m
--- a/scripts/plot/util/__gnuplot_drawnow__.m
+++ b/scripts/plot/util/__gnuplot_drawnow__.m
@@ -335,17 +335,17 @@ function enhanced = gnuplot_set_term (pl
       fprintf (plot_stream, "%s\n", term_str);
       if (nargin == 5)
         if (! isempty (file))
           fprintf (plot_stream, "set output '%s';\n", file);
         endif
       endif
     endif
     if (__gnuplot_has_feature__ ("has_termoption_dashed"))
-      fprintf (plot_stream, "set termoption dashed\n")
+      fprintf (plot_stream, "set termoption dashed\n");
     endif
   else
     ## gnuplot will pick up the GNUTERM environment variable itself
     ## so no need to set the terminal type if not also setting the
     ## figure title, enhanced mode, or position.
   endif
 
 endfunction
diff --git a/scripts/plot/util/copyobj.m b/scripts/plot/util/copyobj.m
--- a/scripts/plot/util/copyobj.m
+++ b/scripts/plot/util/copyobj.m
@@ -61,17 +61,17 @@ function hnew = copyobj (horig, hparent 
   else
     str = hdl2struct (horig);
     hnew = struct2hdl (str, hparent);
   endif
 
   ## reset current figure (and eventually axes) to original
   set (0, "currentfigure", cf);
   if (ancestor (hnew, "figure") == cf && ! isempty (ca))
-    set (cf, "currentaxes", ca)
+    set (cf, "currentaxes", ca);
   endif
 
 endfunction
 
 
 ## Absurd number of drawnow() function calls in demos is due to problem
 ## with FLTK backend which is not respecting the set ('position') call.
 
diff --git a/scripts/plot/util/linkprop.m b/scripts/plot/util/linkprop.m
--- a/scripts/plot/util/linkprop.m
+++ b/scripts/plot/util/linkprop.m
@@ -104,17 +104,17 @@ function update_prop (h, ~, hlist, prop)
   endif
 endfunction
 
 function delete_linkprop (hlist, prop)
 
   for i = 1 : numel (hlist)
     if (ishandle (hlist(i)))
       for j = 1 : numel (prop)
-        dellistener (hlist(i), prop{j}),
+        dellistener (hlist(i), prop{j});
       endfor
     endif
   endfor
 
 endfunction
 
 
 %!demo
diff --git a/scripts/plot/util/private/__add_default_menu__.m b/scripts/plot/util/private/__add_default_menu__.m
--- a/scripts/plot/util/private/__add_default_menu__.m
+++ b/scripts/plot/util/private/__add_default_menu__.m
@@ -77,17 +77,17 @@ endfunction
 
 function __save_as__ (caller)
   [filename, filedir] = uiputfile ({"*.pdf;*.ps;*.gif;*.png;*.jpg",
                                     "Supported Graphic Formats"},
                                    "Save Figure",
                                    [pwd, filesep, "untitled.pdf"]);
   if (filename != 0)
     fname = [filedir filesep() filename];
-    set (gcbf, "filename", fname)
+    set (gcbf, "filename", fname);
     saveas (caller, fname);
   endif
 endfunction
 
 
 function [hax, fig] = __get_axes__ (h)
   ## Get parent figure
   fig = ancestor (h, "figure");
@@ -105,33 +105,33 @@ function grid_cb (h, e)
     otherwise
       arrayfun (@(h) grid(h, id), hax);
   endswitch
   drawnow ();
 endfunction
 
 function autoscale_cb (h, e)
   hax = __get_axes__ (h);
-  arrayfun (@(h) axis (h, "auto"), hax)
+  arrayfun (@(h) axis (h, "auto"), hax);
   drawnow ();
 endfunction
 
 function guimode_cb (h, e)
   [hax, fig] = __get_axes__ (h);
   id = get (h, "tag");
   switch (id)
     case "pan_on"
-      pan (fig, "on")
+      pan (fig, "on");
     case "pan_xon"
-      pan (fig, "xon")
+      pan (fig, "xon");
     case "pan_yon"
-      pan (fig, "yon")
+      pan (fig, "yon");
     case "rotate3d"
-      rotate3d (fig, "on")
+      rotate3d (fig, "on");
     case "no_pan_rotate"
-      pan (fig, "off")
-      rotate3d (fig, "off")
+      pan (fig, "off");
+      rotate3d (fig, "off");
     case "zoom_on"
       arrayfun (@(h) set (h, "mousewheelzoom", 0.05), hax);
     case "zoom_off"
       arrayfun (@(h) set (h, "mousewheelzoom", 0.0), hax);
   endswitch
 endfunction
diff --git a/scripts/plot/util/private/__gnuplot_print__.m b/scripts/plot/util/private/__gnuplot_print__.m
--- a/scripts/plot/util/private/__gnuplot_print__.m
+++ b/scripts/plot/util/private/__gnuplot_print__.m
@@ -217,17 +217,17 @@ function local_drawnow (term, file, opts
   endif
   set (0, "currentfigure", opts.figure);
   if (isempty (opts.debug_file) || ! opts.debug)
     drawnow (term, file, mono);
   else
     drawnow (term, file, mono, opts.debug_file);
   endif
   if (opts.debug)
-    fprintf ("Expanded gnuplot terminal = '%s'\n", term)
+    fprintf ("Expanded gnuplot terminal = '%s'\n", term);
   endif
 endfunction
 
 function f = font_spec (opts, varargin)
   for n = 1:2:numel (varargin)
     opts.(varargin{n}) = varargin{n+1};
   endfor
   f = "";
diff --git a/scripts/plot/util/private/__print_parse_opts__.m b/scripts/plot/util/private/__print_parse_opts__.m
--- a/scripts/plot/util/private/__print_parse_opts__.m
+++ b/scripts/plot/util/private/__print_parse_opts__.m
@@ -324,24 +324,24 @@ function arg_st = __print_parse_opts__ (
     arg_st.ghostscript.epscrop = ! arg_st.loose;
   endif
 
   if (arg_st.send_to_printer)
     if (isempty (arg_st.name))
       ## Pipe the ghostscript output
       arg_st.name = "-";
     else
-      error ("print: a filename may not specified when spooling to a printer")
+      error ("print: a filename may not specified when spooling to a printer");
     endif
     if (! any (strcmp (arg_st.devopt, gs_device_list)))
       ## Only supported ghostscript devices
-      error ("print: format must be a valid Ghostscript format for spooling to a printer")
+      error ("print: format must be a valid Ghostscript format for spooling to a printer");
     endif
   elseif (isempty (arg_st.name))
-    error ("print: an output filename must be specified")
+    error ("print: an output filename must be specified");
   endif
 
   if (isempty (arg_st.canvas_size))
     if (isfigure (arg_st.figure))
       [arg_st.ghostscript.papersize, paperposition] = ...
                            gs_papersize (arg_st.figure, arg_st.orientation);
     else
       ## allows tests to be run
diff --git a/scripts/plot/util/struct2hdl.m b/scripts/plot/util/struct2hdl.m
--- a/scripts/plot/util/struct2hdl.m
+++ b/scripts/plot/util/struct2hdl.m
@@ -148,17 +148,17 @@ function [h, pout] = struct2hdl (s, p=[]
     h = createtext (s, par);
   elseif (strcmp (s.type, "image"))
     h = createimage (s, par);
   elseif (strcmp (s.type, "surface"))
     h = createsurface (s, par);
   elseif (strcmp (s.type, "hggroup"))
     [h, s, p] = createhg (s, p, par, hilev);
   else
-    error ("struct2hdl: %s objects are not implemented yet", s.type)
+    error ("struct2hdl: %s objects are not implemented yet", s.type);
   endif
 
   ## children
   p = [p [s.handle; h]];  # [original; new]
   kids = s.children;
   nkids = length (kids);
   ii = 0;
   while (nkids)
diff --git a/scripts/specfun/ellipke.m b/scripts/specfun/ellipke.m
--- a/scripts/specfun/ellipke.m
+++ b/scripts/specfun/ellipke.m
@@ -98,17 +98,17 @@ function [k, e] = ellipke (m, tol = [])
     error ("ellipke: M must be real");
   elseif (any (m > 1))
     error ("ellipke: M must be <= 1");
   endif
 
   if (isempty (tol))
     tol = eps (class (m));
   elseif (! (isreal (tol) && isscalar (tol) && tol > 0))
-    error ("ellipke: TOL must be a real scalar > 0")
+    error ("ellipke: TOL must be a real scalar > 0");
   endif
 
   k = e = zeros (sz);
 
   ## Handle extreme values
   idx_1 = (m == 1);
   k(idx_1) = Inf;
   e(idx_1) = 1;
diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -1595,19 +1595,19 @@ function A = kms (n, rho = 0.5)
   ##    Reference:
   ##    W.F. Trench, Numerical solution of the eigenvalue problem
   ##    for Hermitian Toeplitz matrices, SIAM J. Matrix Analysis and Appl.,
   ##    10 (1989), pp. 135-146 (and see the references therein).
 
   if (nargin < 1 || nargin > 2)
     error ("gallery: 1 to 2 arguments are required for lauchli matrix.");
   elseif (! isnumeric (n) || ! isscalar (n) || fix (n) != n)
-    error ("gallery: N must be an integer for lauchli matrix.")
+    error ("gallery: N must be an integer for lauchli matrix.");
   elseif (! isscalar (rho))
-    error ("gallery: RHO must be a scalar for lauchli matrix.")
+    error ("gallery: RHO must be a scalar for lauchli matrix.");
   endif
 
   A = (1:n)'*ones (1,n);
   A = abs (A - A');
   A = rho .^ A;
   if (imag (rho))
     A = conj (tril (A,-1)) + triu (A);
   endif
diff --git a/scripts/strings/strjoin.m b/scripts/strings/strjoin.m
--- a/scripts/strings/strjoin.m
+++ b/scripts/strings/strjoin.m
@@ -67,17 +67,17 @@ function rval = strjoin (cstr, delimiter
   endif
 
   num = numel (cstr);
   if (numel (delimiter) == 1 && num > 1)
     delimiter = repmat (delimiter, 1, num);
     delimiter(end) = {""};
   elseif (num > 0 && numel (delimiter) != num - 1)
     error ("strjoin:cellstring_delimiter_mismatch",
-      "strjoin: the number of delimiters does not match the number of strings")
+      "strjoin: the number of delimiters does not match the number of strings");
   else
     delimiter(end+1) = {""};
   endif
 
   if (num == 0)
     rval = "";
   else
     rval = [[cstr(:).'; delimiter(:).']{:}];
