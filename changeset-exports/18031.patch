# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1385746933 18000
#      Fri Nov 29 12:42:13 2013 -0500
# Branch stable
# Node ID 8695fa0482267c2008a9fb5b005f9db10ddb9a1c
# Parent  f0427ca399ccebe1d1fc21169c715d8fa6202641
make hiding of gui warning bar persistent

* main-window.h, main-window.cc
(main_window::construct_gui_info_button): New function.
(main_window::hide_warning_bar): Use it to make gui info button.
(main_window::construct_warning_bar): Likewise.  Check preferences and
display gui info button if warning bar is hidden.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -1770,16 +1770,26 @@ main_window::construct_news_menu (QMenuB
 
   connect (current_news_action, SIGNAL (triggered ()),
            this, SLOT (load_and_display_community_news ()));
 }
 
 void
 main_window::construct_warning_bar (void)
 {
+  QSettings *settings = resource_manager::get_settings ();
+
+  if (settings
+      && settings->value ("General/hide_new_gui_warning", false).toBool ())
+    {
+      construct_gui_info_button ();
+
+      return;
+    }
+
   _warning_bar = new QDockWidget (this);
   _warning_bar->setAttribute (Qt::WA_DeleteOnClose);
 
   QFrame *box = new QFrame (_warning_bar);
 
   QLabel *icon = new QLabel (box);
   QIcon warning_icon
     = QIcon::fromTheme ("dialog-warning",
@@ -1838,34 +1848,49 @@ main_window::construct_warning_bar (void
 
   setCorner (Qt::TopLeftCorner, Qt::TopDockWidgetArea);
   setCorner (Qt::TopRightCorner, Qt::TopDockWidgetArea);
 
   addDockWidget (Qt::TopDockWidgetArea, _warning_bar);
 };
 
 void
-main_window::hide_warning_bar (void)
+main_window::construct_gui_info_button (void)
 {
-  removeDockWidget (_warning_bar);
-
   QIcon warning_icon
     = QIcon::fromTheme ("dialog-warning",
                         QIcon (":/actions/icons/warning.png"));
 
-  _warning_bar_info_button
+  _gui_info_button
     = new QPushButton (warning_icon, tr ("Experimental GUI Info"));
 
-  _main_tool_bar->addWidget (_warning_bar_info_button);
-
-  connect (_warning_bar_info_button, SIGNAL (clicked ()),
+  _main_tool_bar->addWidget (_gui_info_button);
+
+  connect (_gui_info_button, SIGNAL (clicked ()),
            this, SLOT (show_gui_info ()));
 }
 
 void
+main_window::hide_warning_bar (void)
+{
+  QSettings *settings = resource_manager::get_settings ();
+
+  if (settings)
+    {
+      settings->setValue ("General/hide_new_gui_warning", true);
+
+      settings->sync ();
+    }
+
+  removeDockWidget (_warning_bar);
+
+  construct_gui_info_button ();
+}
+
+void
 main_window::show_gui_info (void)
 {
   QString gui_info
     (tr ("<p><strong>You are using a release candidate of Octave's experimental GUI.</strong>  "
          "Octave is under continuous improvement and the GUI will be the "
          "default interface for the 4.0 release.  For more information, "
          "select the \"Release Notes\" item in the \"Help\" menu of the GUI, "
          "or visit <a href=\"http://octave.org\">http://octave.org</a>.</p>"
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -221,16 +221,18 @@ private:
                                        const QKeySequence& key);
   void construct_window_menu (QMenuBar *p);
   void construct_help_menu (QMenuBar *p);
   void construct_documentation_menu (QMenu *p);
 
   void construct_news_menu (QMenuBar *p);
 
   void construct_warning_bar (void);
+  void construct_gui_info_button (void);
+
   void construct_tool_bar (void);
 
   void establish_octave_link (void);
 
   void save_workspace_callback (const std::string& file);
 
   void load_workspace_callback (const std::string& file);
 
@@ -293,17 +295,17 @@ private:
     return list;
   }
 
   QString _release_notes_icon;
 
   QToolBar *_main_tool_bar;
 
   QDockWidget *_warning_bar;
-  QPushButton *_warning_bar_info_button;
+  QPushButton *_gui_info_button;
 
   QMenu *_debug_menu;
 
   QAction *_debug_continue;
   QAction *_debug_step_into;
   QAction *_debug_step_over;
   QAction *_debug_step_out;
   QAction *_debug_quit;
