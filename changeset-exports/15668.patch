# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1338154737 -7200
#      Sun May 27 23:38:57 2012 +0200
# Node ID f2b81e8a4ab5582767965663a133668fd020e0eb
# Parent  cda168383a8350fc81a18d7cacf27f993526e0b1
Added patched for Cygwin build from Marco Atzeri.

diff --git a/libqterminal/libqterminal.pro b/libqterminal/libqterminal.pro
--- a/libqterminal/libqterminal.pro
+++ b/libqterminal/libqterminal.pro
@@ -5,17 +5,17 @@ TARGET		= qterminal
 CONFIG		+= qt staticlib
 
 QT += core gui
 
 INCLUDEPATH	+= .
 
 unix {
 
-DEFINES 	+= HAVE_POSIX_OPENPT	    
+DEFINES 	+= HAVE_POSIX_OPENPT HAVE_PTY_H HAVE_OPENPTY
 #or DEFINES 	+= HAVE_GETPT
 
 HEADERS  = unix/BlockArray.h \
            unix/Character.h \
            unix/CharacterColor.h \
            unix/Emulation.h \
            unix/ExtendedDefaultTranslator.h \
            unix/Filter.h \
@@ -25,44 +25,44 @@ HEADERS  = unix/BlockArray.h \
            unix/kpty.h \
            unix/kpty_p.h \
            unix/LineFont.h \
            unix/QUnixTerminalImpl.h \
            unix/Screen.h \
            unix/ScreenWindow.h \
            unix/TerminalCharacterDecoder.h \
            unix/Vt102Emulation.h \
-    	   unix/SelfListener.h \
+         unix/SelfListener.h \
            unix/TerminalModel.h \
            unix/TerminalView.h
 
 SOURCES  = unix/BlockArray.cpp \
            unix/Emulation.cpp \
            unix/Filter.cpp \
            unix/History.cpp \
            unix/KeyboardTranslator.cpp \
            unix/konsole_wcwidth.cpp \
            unix/kpty.cpp \
            unix/QUnixTerminalImpl.cpp \
            unix/Screen.cpp \
            unix/ScreenWindow.cpp \
            unix/TerminalCharacterDecoder.cpp \
            unix/Vt102Emulation.cpp \
-    	   unix/SelfListener.cpp \
+         unix/SelfListener.cpp \
            unix/TerminalModel.cpp \
            unix/TerminalView.cpp
 }
 
 win32 {
 HEADERS  = win32/QTerminalColors.h \
-		   win32/QWinTerminalImpl.h
+       win32/QWinTerminalImpl.h
 
 SOURCES  = win32/QTerminalColors.cpp \
-		   win32/QWinTerminalImpl.cpp
+       win32/QWinTerminalImpl.cpp
 }
 
 win32-msvc* {
-	include(../msvc.pri)
+  include(../msvc.pri)
 }
 
 HEADERS  += QTerminal.h \
-		   QTerminal \
+       QTerminal \
     QTerminalInterface.h
diff --git a/libqterminal/unix/kpty.cpp b/libqterminal/unix/kpty.cpp
--- a/libqterminal/unix/kpty.cpp
+++ b/libqterminal/unix/kpty.cpp
@@ -156,22 +156,24 @@ KPtyPrivate::KPtyPrivate(KPty *parent, i
 {
 }
 
 
 KPtyPrivate::~KPtyPrivate()
 {
 }
 
+#ifndef HAVE_OPENPTY
 bool KPtyPrivate::chownpty(bool)
 {
 //    return !QProcess::execute(KStandardDirs::findExe("kgrantpty"),
 //        QStringList() << (grant?"--grant":"--revoke") << QString::number(masterFd));
     return true;
 }
+#endif
 
 /////////////////////////////
 // public member functions //
 /////////////////////////////
 
 KPty::KPty() :
     d_ptr(new KPtyPrivate(this))
 {
@@ -215,17 +217,17 @@ bool KPty::open()
 
 #ifdef HAVE_OPENPTY
 
   char ptsn[PATH_MAX];
   if (::openpty( &d->masterFd, &d->slaveFd, ptsn, 0, 0))
   {
     d->masterFd = -1;
     d->slaveFd = -1;
-    qWarning(175) << "Can't open a pseudo teletype";
+    qWarning() << "Can't open a pseudo teletype";
     return false;
   }
   d->ttyName = ptsn;
 
 #else
 
 #ifdef HAVE__GETPTY // irix
 
@@ -298,24 +300,24 @@ bool KPty::open()
         {
           if (!geteuid())
           {
             struct group* p = getgrnam(TTY_GROUP);
             if (!p)
               p = getgrnam("wheel");
             gid_t gid = p ? p->gr_gid : getgid ();
 
-            if (!chown(d->ttyName.data(), getuid(), gid)) {
+	    if (!chown(d->ttyName.data(), getuid(), gid)) {
 	      chmod(d->ttyName.data(), S_IRUSR|S_IWUSR|S_IWGRP);
 	    }
-          }
-          goto gotpty;
-        }
-        ::close(d->masterFd);
-        d->masterFd = -1;
+	  }
+	  goto gotpty;
+	}
+	::close(d->masterFd);
+	d->masterFd = -1;
       }
     }
   }
 
   qWarning() << "Can't open a pseudo teletype";
   return false;
 
  gotpty:
@@ -386,30 +388,34 @@ void KPty::closeSlave()
 
 void KPty::close()
 {
    Q_D(KPty);
 
    if (d->masterFd < 0)
       return;
    closeSlave();
+   if (d->ownMaster) {
+#ifndef HAVE_OPENPTY
    // don't bother resetting unix98 pty, it will go away after closing master anyway.
    if (memcmp(d->ttyName.data(), "/dev/pts/", 9)) {
       if (!geteuid()) {
          struct stat st;
          if (!stat(d->ttyName.data(), &st)) {
             if (!chown(d->ttyName.data(), 0, st.st_gid == getgid() ? 0 : -1)) {
-	      chmod(d->ttyName.data(), S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH);
-	    }
+              chmod(d->ttyName.data(), S_IRUSR|S_IWUSR|S_IRGRP|S_IWGRP|S_IROTH|S_IWOTH);
+            }
          }
       } else {
          fcntl(d->masterFd, F_SETFD, 0);
          d->chownpty(false);
       }
    }
+   #endif
+   }
    ::close(d->masterFd);
    d->masterFd = -1;
 }
 
 // XXX Supposedly, tc[gs]etattr do not work with the master on Solaris.
 // Please verify.
 
 bool KPty::tcGetAttr(struct ::termios *ttmode) const
diff --git a/qterminal/qterminal.pro b/qterminal/qterminal.pro
--- a/qterminal/qterminal.pro
+++ b/qterminal/qterminal.pro
@@ -1,14 +1,15 @@
 TEMPLATE	= app
 
 QT += core gui
 
-SOURCES 	= main.cpp 
+SOURCES 	= main.cpp
 INCLUDEPATH 	= ../libqterminal
 
 win32 {
-	win32-msvc*: include(../msvc.pri)
-	LIBS += -L../libqterminal/$$LIBDIR_SUFFIX \
-		-lqterminal -luser32 -lkernel32
+  win32-msvc*: include(../msvc.pri)
+  LIBS += -L../libqterminal/$$LIBDIR_SUFFIX \
+    -lqterminal -luser32 -lkernel32
 } else {
-	LIBS += -L../libqterminal -lqterminal -lutil
+  DEFINES += HAVE_PTY_H HAVE_OPENPTY
+  LIBS += -L../libqterminal -lqterminal -lutil
 }
