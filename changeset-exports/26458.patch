# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546714965 28800
#      Sat Jan 05 11:02:45 2019 -0800
# Branch stable
# Node ID 9f090d8113321807e9ab32c8cf0702ccec1f0e03
# Parent  aced09cc1721fa38faaacb63bb45fcb0630ac8e2
ls-mat-ascii.cc: Fix static analyzer detected issues (bug #55347).

* ls-mat-ascii.cc (read_mat_ascii_data): Remove useless check on
"(nr < 1 || nc < 1)" and re-indent code.

diff --git a/libinterp/corefcn/ls-mat-ascii.cc b/libinterp/corefcn/ls-mat-ascii.cc
--- a/libinterp/corefcn/ls-mat-ascii.cc
+++ b/libinterp/corefcn/ls-mat-ascii.cc
@@ -265,68 +265,61 @@ read_mat_ascii_data (std::istream& is, c
   octave_quit ();
 
   if (nr <= 0 || nc <= 0)
     error ("load: unable to extract matrix size from file '%s'",
            filename.c_str ());
 
   Matrix tmp (nr, nc);
 
-  if (nr < 1 || nc < 1)
-    is.clear (std::ios::badbit);
-  else
+  double d;
+  for (octave_idx_type i = 0; i < nr; i++)
     {
-      double d;
-      for (octave_idx_type i = 0; i < nr; i++)
-        {
-          std::string buf = get_mat_data_input_line (is);
+      std::string buf = get_mat_data_input_line (is);
+
+      std::istringstream tmp_stream (buf);
 
-          std::istringstream tmp_stream (buf);
-
-          for (octave_idx_type j = 0; j < nc; j++)
-            {
-              octave_quit ();
+      for (octave_idx_type j = 0; j < nc; j++)
+        {
+          octave_quit ();
 
-              d = octave_read_value<double> (tmp_stream);
+          d = octave_read_value<double> (tmp_stream);
 
-              if (! tmp_stream && ! tmp_stream.eof ())
-                error ("load: failed to read matrix from file '%s'",
-                       filename.c_str ());
+          if (! tmp_stream && ! tmp_stream.eof ())
+            error ("load: failed to read matrix from file '%s'",
+                   filename.c_str ());
 
-              tmp.elem (i, j) = d;
-              total_count++;
+          tmp.elem (i, j) = d;
+          total_count++;
 
-              // Skip whitespace and commas.
-              char c;
-              while (1)
-                {
-                  tmp_stream >> c;
+          // Skip whitespace and commas.
+          char c;
+          while (1)
+            {
+              tmp_stream >> c;
 
-                  if (! tmp_stream)
-                    break;
+              if (! tmp_stream)
+                break;
 
-                  if (! (c == ' ' || c == '\t' || c == ','))
-                    {
-                      tmp_stream.putback (c);
-                      break;
-                    }
+              if (! (c == ' ' || c == '\t' || c == ','))
+                {
+                  tmp_stream.putback (c);
+                  break;
                 }
+            }
 
-              if (tmp_stream.eof ())
-                break;
-            }
+          if (tmp_stream.eof ())
+            break;
         }
     }
 
   if (! is && ! is.eof ())
-    error ("load: failed to read matrix from file '%s'",
-           filename.c_str ());
+    error ("load: failed to read matrix from file '%s'", filename.c_str ());
 
   // FIXME: not sure this is best, but it works.
-
   if (is.eof ())
     is.clear ();
 
   octave_idx_type expected = nr * nc;
 
   if (expected != total_count)
     error ("load: expected %" OCTAVE_IDX_TYPE_FORMAT " elements, found "
            "%" OCTAVE_IDX_TYPE_FORMAT, expected, total_count);
