# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1517379258 18000
#      Wed Jan 31 01:14:18 2018 -0500
# Node ID e014e08f939f4b8dcc6f42e7f07fdcd71413d47f
# Parent  dd19b0b9a9a1e67475c9dde59735bd60da61f4e2
variable editor: display values for types that can't be edited

* variable-editor-model.cc (variable_editor_model::type_is_editable):
If value is defined but not editable, display formatted output in the
variable editor tab.

diff --git a/libgui/src/variable-editor-model.cc b/libgui/src/variable-editor-model.cc
--- a/libgui/src/variable-editor-model.cc
+++ b/libgui/src/variable-editor-model.cc
@@ -848,19 +848,38 @@ variable_editor_model::type_is_editable 
 
   if (display_error)
     {
       QString tname = QString::fromStdString (val.type_name ());
 
       dim_vector dv = val.dims ();
       QString dimstr = QString::fromStdString (dv.str ());
 
-      emit data_error_signal (QString ("unable to edit [%1] '%2' objects")
+      // FIXME: we will probably want to impose a limit on the size of
+      // the output here...
+
+      // FIXME: shouldn't octave_value::print be a constant method?
+      QString sep;
+      QString output;
+
+      if (val.is_defined ())
+        {
+          std::ostringstream buf;
+          octave_value tval = val;
+          tval.print (buf);
+          output = QString::fromStdString (buf.str ());
+          if (! output.isEmpty ())
+            sep = "\n\n";
+        }
+
+      emit data_error_signal (QString ("unable to edit [%1] '%2' objects%3%4")
                               .arg (dimstr)
-                              .arg (tname));
+                              .arg (tname)
+                              .arg (sep)
+                              .arg (output));
     }
 
   return false;
 }
 
 void
 variable_editor_model::evaluation_error (const std::string& expr) const
 {
