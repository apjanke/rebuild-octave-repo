# HG changeset patch
# User dbateman
# Date 1143138171 0
#      Thu Mar 23 18:22:51 2006 +0000
# Node ID 6cb607fcf41c25ceee10a82d91ed3734e1ef0532
# Parent  93856a571283849eca2e284434dd66f2107578b6
[project @ 2006-03-23 18:22:51 by dbateman]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2006-03-21  David Bateman  <dbateman@free.fr>
+
+	* SparseQR.h: Publish externally used friends.
+	* SparseCmplxQR.h: ditto.
+
 2006-03-21  John W. Eaton  <jwe@octave.org>
 
 	* lo-specfun.cc (betainc): Use F77_XFCN instead of F77_FUNC for
 	call to xdbetai.
 
 2006-03-21  David Bateman  <dbateman@free.fr>
 
 	* lo-specfun.cc (xlgamma, xgamma): Trap special values.
diff --git a/liboctave/SparseCmplxQR.h b/liboctave/SparseCmplxQR.h
--- a/liboctave/SparseCmplxQR.h
+++ b/liboctave/SparseCmplxQR.h
@@ -132,15 +132,32 @@ public:
 protected:
 #ifdef HAVE_CXSPARSE
   CXSPARSE_ZNAME (s) * S (void) { return rep->S; }
 
   CXSPARSE_ZNAME (n) * N (void) { return rep->N; }
 #endif
 };
 
+
+// Publish externally used friend functions.
+
+extern ComplexMatrix qrsolve (const SparseComplexMatrix &a, const Matrix &b,
+			      octave_idx_type &info);
+
+extern SparseComplexMatrix qrsolve (const SparseComplexMatrix &a, 
+				    const SparseMatrix &b,
+				    octave_idx_type &info);
+
+extern ComplexMatrix qrsolve (const SparseComplexMatrix &a, 
+			      const ComplexMatrix &b,
+			      octave_idx_type &info);
+
+extern SparseComplexMatrix qrsolve (const SparseComplexMatrix &a, 
+				    const SparseComplexMatrix &b,
+				    octave_idx_type &info);
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/liboctave/SparseQR.h b/liboctave/SparseQR.h
--- a/liboctave/SparseQR.h
+++ b/liboctave/SparseQR.h
@@ -128,15 +128,31 @@ public:
 protected:
 #ifdef HAVE_CXSPARSE
   CXSPARSE_DNAME (s) * S (void) { return rep->S; }
 
   CXSPARSE_DNAME (n) * N (void) { return rep->N; }
 #endif
 };
 
+
+// Publish externally used friend functions.
+
+extern Matrix qrsolve (const SparseMatrix &a, const Matrix &b, 
+		       octave_idx_type &info);
+
+extern SparseMatrix qrsolve (const SparseMatrix &a, const SparseMatrix &b,
+			     octave_idx_type &info);
+
+extern ComplexMatrix qrsolve (const SparseMatrix &a, const ComplexMatrix &b,
+			      octave_idx_type &info);
+
+extern SparseComplexMatrix qrsolve (const SparseMatrix &a, 
+				    const SparseComplexMatrix &b,
+				    octave_idx_type &info);
+
 #endif
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
