# HG changeset patch
# User Brian Gough <bjg@gnu.org>
# Date 1231824433 18000
#      Tue Jan 13 00:27:13 2009 -0500
# Node ID caaad80e81aa7c1f9f8c1e7a698f046c7d6eb5b8
# Parent  e7b4de25ecb69bfa7c728c108280b44c7a7fce86
[docs] add hyphen

diff --git a/src/DLD-FUNCTIONS/fft2.cc b/src/DLD-FUNCTIONS/fft2.cc
--- a/src/DLD-FUNCTIONS/fft2.cc
+++ b/src/DLD-FUNCTIONS/fft2.cc
@@ -165,17 +165,17 @@ do_fft2 (const octave_value_list &args, 
     }
 
   return retval;
 }
 
 DEFUN_DLD (fft2, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} fft2 (@var{a}, @var{n}, @var{m})\n\
-Compute the two dimensional FFT of @var{a} using subroutines from\n"
+Compute the two-dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional arguments @var{n} and @var{m} may be used specify the\n\
 number of rows and columns of @var{a} to use.  If either of these is\n\
 larger than the size of @var{a}, @var{a} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{a} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
 of @var{a} is treated separately\n\
@@ -184,17 +184,17 @@ of @var{a} is treated separately\n\
 {
   return do_fft2 (args, "fft2", 0);
 }
 
 
 DEFUN_DLD (ifft2, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} fft2 (@var{a}, @var{n}, @var{m})\n\
-Compute the inverse two dimensional FFT of @var{a} using subroutines from\n"
+Compute the inverse two-dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional arguments @var{n} and @var{m} may be used specify the\n\
 number of rows and columns of @var{a} to use.  If either of these is\n\
 larger than the size of @var{a}, @var{a} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{a} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
 of @var{a} is treated separately\n\
diff --git a/src/DLD-FUNCTIONS/fftn.cc b/src/DLD-FUNCTIONS/fftn.cc
--- a/src/DLD-FUNCTIONS/fftn.cc
+++ b/src/DLD-FUNCTIONS/fftn.cc
@@ -147,34 +147,34 @@ do_fftn (const octave_value_list &args, 
     }
 
   return retval;
 }
 
 DEFUN_DLD (fftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} fftn (@var{a}, @var{size})\n\
-Compute the N dimensional FFT of @var{a} using subroutines from\n"
+Compute the N-dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used. If an element of @var{size} is\n\
 smaller than the corresponding dimension, then the dimension is\n\
 truncated prior to performing the FFT. Otherwise if an element\n\
 of @var{size} is larger than the corresponding dimension @var{a}\n\
 is resized and padded with zeros.\n\
 @seealso {ifftn, fft, fft2, fftw}\n\
 @end deftypefn")
 {
   return do_fftn (args, "fftn", 0);
 }
 
 DEFUN_DLD (ifftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} ifftn (@var{a}, @var{size})\n\
-Compute the inverse N dimensional FFT of @var{a} using subroutines from\n"
+Compute the inverse N-dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used. If an element of @var{size} is\n\
 smaller than the corresponding dimension, then the dimension is\n\
 truncated prior to performing the inverse FFT. Otherwise if an element\n\
 of @var{size} is larger than the corresponding dimension @var{a}\n\
 is resized and padded with zeros.\n\
 @seealso {fftn, ifft, ifft2, fftw}\n\
