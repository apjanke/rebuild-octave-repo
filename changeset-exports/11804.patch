# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1218561627 14400
#      Tue Aug 12 13:20:27 2008 -0400
# Branch release-3-0-x
# Node ID 7a92d9b3e7d0a33de0c9645cde6e9925e8cb47a6
# Parent  daf91931b32bd50eb8a3e7cbe1bf9cfd23f44c1c
octave_struct::subsref: don't resize for simple x(idx) case

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-08-12  John W. Eaton  <jwe@octave.org>
+
+	* ov-struct.cc (octave_struct::subsref): Don't allow resizing for
+	simple x(idx) case.
+
 2008-08-08  Tatsuro MATSUOKA  <tmacchant@yahoo.co.jp>
 
 	* A patch fntests for rand.cc for octave for windows (cygwin, mingw ,msvc)
 
 2008-08-01  Francesco Potorti <Potorti@isti.cnr.it>
 
 	* graphics.cc (axes::properties::properties,
 	axes::properties::set_defaults, axes::properties::factory_defaults):
diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -124,17 +124,17 @@ octave_struct::subsref (const std::strin
 
 		// We handled two index elements, so tell
 		// next_subsref to skip both of them.
 
 		skip++;
 	      }
 	  }
 	else
-	  retval(0) = map.index (idx.front (), true);
+	  retval(0) = map.index (idx.front (), false);
       }
       break;
 
     case '.':
       {
 	if (map.numel() > 0)
 	  {
 	    Cell t = dotref (idx.front ());
@@ -157,16 +157,24 @@ octave_struct::subsref (const std::strin
   // octave_user_function::subsref.
 
   if (idx.size () > 1)
     retval = retval(0).next_subsref (nargout, type, idx, skip);
 
   return retval;
 }
 
+/*
+%!test
+%! x(1).a.a = 1; x(2).a.a = 2;
+%! assert (size (x), [1, 2]);
+%! assert (x(1).a.a, 1);
+%! assert (x(2).a.a, 2);
+*/
+
 octave_value
 octave_struct::numeric_conv (const Cell& val,
 			     const std::string& type)
 {
   octave_value retval;
 
   if (val.length () == 1)
     {
