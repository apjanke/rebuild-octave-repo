# HG changeset patch
# User jwe
# Date 1067569625 0
#      Fri Oct 31 03:07:05 2003 +0000
# Node ID 4623ef02a6055496d19a9f3ddcea7b1bec5ac87a
# Parent  ef4bdde0805d51da20705552f4363a52cef6822c
[project @ 2003-10-31 03:07:05 by jwe]

diff --git a/libcruft/misc/cquit.c b/libcruft/misc/cquit.c
--- a/libcruft/misc/cquit.c
+++ b/libcruft/misc/cquit.c
@@ -48,23 +48,23 @@ octave_jump_to_enclosing_context (void)
 {
 #if defined (OCTAVE_HAVE_SIG_JUMP)
   siglongjmp (current_context, 1);
 #else
   longjmp (current_context, 1);
 #endif
 }
 
-// Allow us to save the signal mask and then restore it to the most
-// recently saved value.  This is necessary when using the POSIX
-// signal handling interface on some systems calling longjmp out of
-// the signal handler to get to the top level on an interrupt doesn't
-// restore the original signal mask.  Alternatively, we could use
-// sigsetjmp/siglongjmp, but saving and restoring the signal mask
-// ourselves works ok and seems simpler just now.
+/* Allow us to save the signal mask and then restore it to the most
+   recently saved value.  This is necessary when using the POSIX
+   signal handling interface on some systems calling longjmp out of
+   the signal handler to get to the top level on an interrupt doesn't
+   restore the original signal mask.  Alternatively, we could use
+   sigsetjmp/siglongjmp, but saving and restoring the signal mask
+   ourselves works ok and seems simpler just now.  */
 
 #if defined (HAVE_POSIX_SIGNALS)
 static sigset_t octave_signal_mask;
 #endif
 
 void
 octave_save_signal_mask (void)
 {
diff --git a/libcruft/misc/f77-fcn.h b/libcruft/misc/f77-fcn.h
--- a/libcruft/misc/f77-fcn.h
+++ b/libcruft/misc/f77-fcn.h
@@ -93,18 +93,18 @@ extern int f77_exception_encountered;
   octave_make_cray_const_ftn_ch_dsc (x.c_str (), x.length ())
 #define F77_CHAR_ARG_LEN(l)
 #define F77_CHAR_ARG_DECL octave_cray_fcd
 #define F77_CONST_CHAR_ARG_DECL octave_cray_fcd
 #define F77_CHAR_ARG_LEN_DECL
 #define F77_RET_T int
 #define F77_RETURN(retval) return retval;
 
-// XXX FIXME XXX -- these should work for SV1 or Y-MP systems but will
-// need to be changed for others.
+/* XXX FIXME XXX -- these should work for SV1 or Y-MP systems but will
+   need to be changed for others.  */
 
 typedef union
 {
   const char *const_ptr;
   char *ptr;
   struct
   {
     unsigned off : 6;
@@ -154,17 +154,17 @@ octave_make_cray_const_ftn_ch_dsc (const
 #define F77_CHAR_ARG_DECL char *, int
 #define F77_CONST_CHAR_ARG_DECL const char *, int
 #define F77_CHAR_ARG_LEN_DECL
 #define F77_RET_T void
 #define F77_RETURN(retval)
 
 #else
 
-// Assume f2c-compatible calling convention
+/* Assume f2c-compatible calling convention.  */
 
 #define F77_CHAR_ARG(x) x
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
 #define F77_CHAR_ARG2(x, l) x
 #define F77_CONST_CHAR_ARG2(x, l) F77_CHAR_ARG2 (x, l)
 #define F77_CXX_STRING_ARG(x) F77_CONST_CHAR_ARG2 (x.c_str (), x.length ())
 #define F77_CHAR_ARG_LEN(l) , (long) l
 #define F77_CHAR_ARG_DECL char *
diff --git a/libcruft/misc/quit.h b/libcruft/misc/quit.h
--- a/libcruft/misc/quit.h
+++ b/libcruft/misc/quit.h
@@ -156,18 +156,18 @@ extern void octave_throw_bad_alloc (void
     } \
  \
   octave_interrupt_immediately = saved_octave_interrupt_immediately
 #endif
 
 #ifdef __cplusplus
 }
 
-// These should only be declared for C++ code, and should also be
-// outside of any extern "C" block.
+/* These should only be declared for C++ code, and should also be
+   outside of any extern "C" block.  */
 
 extern void (*octave_interrupt_hook) (void);
 extern void (*octave_bad_alloc_hook) (void);
 
 #endif
 
 #endif
 
