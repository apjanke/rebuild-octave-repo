# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1370701012 -7200
#      Sat Jun 08 16:16:52 2013 +0200
# Node ID 2723d1144f114bd498f390bcd4fc3ec452f190b8
# Parent  3806afcf974ad9563c5ba3ad30beb50eec3b7e22
added test for qscintilla version 2.6.0

* configure.ac: rename test OCTAVE_CHECK_FUNC_FINDFIRST_MODERN into
  OCTAVE_CHECK_VERSION_2_6_0
* m4/acinclude.m4: rename test accordingly, rename the defined flag into
  HAVE_QSCI_VERSION_2_6_0
* octave-qscintilla.cc/.h: disable contextMenuEvent for qsci version < 2.6.0

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -2640,17 +2640,17 @@ if test $build_gui = yes; then
       AC_LANG_POP([C++])
     ])
     if test $octave_cv_lib_qscintilla = no; then
       AC_MSG_WARN([Qscintilla library not found -- disabling built-in GUI editor])
     else
       ## Let's assume Qscintilla library is at the same location as
       ## other regular Qt libraries.
       QT_LIBS="$QT_LIBS -lqscintilla2"
-      OCTAVE_CHECK_FUNC_FINDFIRST_MODERN
+      OCTAVE_CHECK_VERSION_2_6_0
       AC_DEFINE(HAVE_QSCINTILLA, 1, 
         [Define to 1 if the QScintilla library and header files are available])
 
       save_CPPFLAGS="$CPPFLAGS"
       CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
       AC_LANG_PUSH(C++)
       AC_CHECK_HEADERS([Qsci/qscilexeroctave.h Qsci/qscilexermatlab.h])
       AC_LANG_POP(C++)
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
--- a/libgui/src/m-editor/octave-qscintilla.cc
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -32,16 +32,17 @@ along with Octave; see the file COPYING.
 octave_qscintilla::octave_qscintilla (QWidget *p)
     : QsciScintilla (p)
 { }
 
 octave_qscintilla::~octave_qscintilla ()
 { }
 
 
+#ifdef HAVE_QSCI_VERSION_2_6_0
 // context menu requested
 void
 octave_qscintilla::contextMenuEvent (QContextMenuEvent *e)
 {
   QMenu *context_menu = createStandardContextMenu ( );  // standard menu
 
   context_menu->addSeparator ();   // separator before custom entries
 
@@ -69,16 +70,17 @@ octave_qscintilla::contextMenuEvent (QCo
     }
   // finally create the menu entry if a word at cursor was found
   if (!_word_at_cursor.isEmpty ())
     context_menu->addAction (tr ("help") + " " + _word_at_cursor,
                              this, SLOT (contextmenu_help (bool)));
 
   context_menu->exec (global_pos);
 }
+#endif
 
 
 // handle the menu entry for calling help
 void
 octave_qscintilla::contextmenu_help (bool)
 {
   QString command = "help " + _word_at_cursor;
   emit execute_command_in_terminal_signal (command);
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
--- a/libgui/src/m-editor/octave-qscintilla.h
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -31,17 +31,19 @@ class octave_qscintilla : public QsciSci
 {
   Q_OBJECT
 
 public:
 
   octave_qscintilla (QWidget *p);
   ~octave_qscintilla ();
 
+#ifdef HAVE_QSCI_VERSION_2_6_0
   virtual void contextMenuEvent (QContextMenuEvent *e);
+#endif
 
 signals:
 
   void execute_command_in_terminal_signal (const QString&);
 
 private slots:
 
   void contextmenu_help (bool);
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -189,42 +189,41 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_CMATH], [
     AC_LANG_POP(C++)
   ])
   if eval "test \"`echo '$octave_cv_func_cmath_f'$ac_safe`\" = yes"; then
     AC_DEFINE(AS_TR_CPP([[HAVE_CMATH_][$1][F]]), 1,
       [Define to 1 if <cmath> provides float variant of $1.])
   fi
 ])
 dnl
-dnl Check whether Qscintilla FindFirst function is old (16 inputs) or
-dnl new (17 inputs).
+dnl Check whether Qscintilla has version 2.6.0 or later
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
-AC_DEFUN([OCTAVE_CHECK_FUNC_FINDFIRST_MODERN], [
-  AC_CACHE_CHECK([whether Qscintilla FindFirst uses 17 input arguments],
-    [octave_cv_func_findfirst_modern],
+AC_DEFUN([OCTAVE_CHECK_VERSION_2_6_0], [
+  AC_CACHE_CHECK([whether Qscintilla has version 2.6.0 or later],
+    [octave_cv_version_2_6_0],
     [AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
     CPPFLAGS="$QT_CPPFLAGS $CPPFLAGS"
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
         #include <Qsci/qsciglobal.h>
         ]], [[
         #if QSCINTILLA_VERSION < 0x020600
         #error Old FindFirst function found.
         #endif
         ]])],
-      octave_cv_func_findfirst_modern=yes,
-      octave_cv_func_findfirst_modern=no)
+      octave_cv_version_2_6_0=yes,
+      octave_cv_version_2_6_0=no)
     CPPFLAGS="$ac_octave_save_CPPFLAGS"
     AC_LANG_POP(C++)
   ])
-  if test $octave_cv_func_findfirst_modern = yes; then
-    AC_DEFINE(HAVE_FINDFIRST_MODERN, 1, 
-      [Define to 1 if Qscintilla FindFirst uses modern form with 17 inputs.])
+  if test $octave_cv_version_2_6_0 = yes; then
+    AC_DEFINE(HAVE_QSCI_VERSION_2_6_0, 1,
+      [Define to 1 if Qscintilla is of Version 2.6.0 or later.])
   fi
 ])
 dnl
 dnl Check if Fortran compiler has the intrinsic function ISNAN.
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_FORTRAN_ISNAN], [
   AC_CACHE_CHECK([whether $F77 has the intrinsic function ISNAN],
     [octave_cv_func_fortran_isnan],
