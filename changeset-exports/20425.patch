# HG changeset patch
# User Rik <rik@octave.org>
# Date 1438796906 25200
#      Wed Aug 05 10:48:26 2015 -0700
# Branch stable
# Node ID 6947b9c82d4b8db41680210d4d878b63af346d35
# Parent  5b7d7051a032cc6fabb7de4077cea1a3a12fed3d
doc: Change docstrings to use 'IEEE 754' rather than 'IEEE-754'.

* bitfcns.cc (Fbitmax): Use 'IEEE 754'.
* bitfcns.cc (Fflintmax): Use 'IEEE 754'.  Enclose exponent in @math expression
in braces so that entire exponent is superscripted.

* unidpdf.m: Use 'IEEE 754'.

diff --git a/libinterp/corefcn/bitfcns.cc b/libinterp/corefcn/bitfcns.cc
--- a/libinterp/corefcn/bitfcns.cc
+++ b/libinterp/corefcn/bitfcns.cc
@@ -682,17 +682,17 @@ DEFUN (bitmax, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} bitmax ()\n\
 @deftypefnx {Built-in Function} {} bitmax (\"double\")\n\
 @deftypefnx {Built-in Function} {} bitmax (\"single\")\n\
 Return the largest integer that can be represented within a floating point\n\
 value.\n\
 \n\
 The default class is @qcode{\"double\"}, but @qcode{\"single\"} is a\n\
-valid option.  On IEEE-754 compatible systems, @code{bitmax} is\n\
+valid option.  On IEEE 754 compatible systems, @code{bitmax} is\n\
 @w{@math{2^{53} - 1}} for @qcode{\"double\"} and @w{@math{2^{24} -1}} for\n\
 @qcode{\"single\"}.\n\
 @seealso{flintmax, intmax, realmax, realmin}\n\
 @end deftypefn")
 {
   octave_value retval;
   std::string cname = "double";
   int nargin = args.length ();
@@ -719,18 +719,18 @@ DEFUN (flintmax, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {} flintmax ()\n\
 @deftypefnx {Built-in Function} {} flintmax (\"double\")\n\
 @deftypefnx {Built-in Function} {} flintmax (\"single\")\n\
 Return the largest integer that can be represented consecutively in a\n\
 floating point value.\n\
 \n\
 The default class is @qcode{\"double\"}, but @qcode{\"single\"} is a valid\n\
-option.  On IEEE-754 compatible systems, @code{flintmax} is @w{@math{2^53}}\n\
-for @qcode{\"double\"} and @w{@math{2^24}} for @qcode{\"single\"}.\n\
+option.  On IEEE 754 compatible systems, @code{flintmax} is @w{@math{2^{53}}}\n\
+for @qcode{\"double\"} and @w{@math{2^{24}}} for @qcode{\"single\"}.\n\
 @seealso{bitmax, intmax, realmax, realmin}\n\
 @end deftypefn")
 {
   octave_value retval;
   std::string cname = "double";
   int nargin = args.length ();
 
   if (nargin == 1 && args(0).is_string ())
diff --git a/scripts/statistics/distributions/unidpdf.m b/scripts/statistics/distributions/unidpdf.m
--- a/scripts/statistics/distributions/unidpdf.m
+++ b/scripts/statistics/distributions/unidpdf.m
@@ -20,17 +20,17 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} unidpdf (@var{x}, @var{n})
 ## For each element of @var{x}, compute the probability density function (PDF)
 ## at @var{x} of a discrete uniform distribution which assumes
 ## the integer values 1--@var{n} with equal probability.
 ##
 ## Warning: The underlying implementation uses the double class and will only
 ## be accurate for @var{n} @leq{} @code{bitmax} (@w{@math{2^{53} - 1}} on
-## IEEE-754 compatible systems).
+## IEEE 754 compatible systems).
 ## @end deftypefn
 
 function pdf = unidpdf (x, n)
 
   if (nargin != 2)
     print_usage ();
   endif
 
