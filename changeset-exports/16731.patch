# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1370639628 -7200
#      Fri Jun 07 23:13:48 2013 +0200
# Node ID 01d523d5f7964301d5daa0f1e9316493c762495c
# Parent  4da837c4902f5ed66a1f9db3cf05660ce8f700c4
add help for word at mouse or text cursor to the editors context menu

* octave-qscintilla.h: new class derived from qsciscintilla to get acces to the
  editors context menu
* octave-qscxintilla.cc(contextMenuEvent): create standard context menu
  and add entry for calling help on current word at cursor
  (contextmenu_help): handler for the new menu entry

* libgui/src/module.mk: add new files octave_qscintilla.cc/.h

* file-editor-tab.cc(constructor): _edit_area is of class octave_qscintilla,
  connect the signal of this class for command execution
  (execute_command_in_terminal): slot for signal connected in contructor
* file-editor-tab.h: new slot for executing a command in terminal, _edit_area
  is of new class octave_qscintilla

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -65,17 +65,24 @@ file_editor_tab::file_editor_tab (const 
 
   // Make sure there is a slash at the end of the directory name
   // for identification when saved later.
   if (directory.count () && directory.at (directory.count () - 1) != '/')
     directory.append ("/");
 
   _file_name = directory;
 
-  _edit_area = new QsciScintilla (this);
+  _edit_area = new octave_qscintilla (this);
+  // Connect signal for command execution to a slot of this tab which in turn
+  // emits a signal connected to the main window.
+  // Direct connection is not possible because tab's parent is null.
+  connect (_edit_area,
+           SIGNAL (execute_command_in_terminal_signal (const QString&)),
+           this,
+           SLOT (execute_command_in_terminal (const QString&)));
 
   // Leave the find dialog box out of memory until requested.
   _find_dialog = 0;
   _find_dialog_is_visible = false;
 
   // symbols
   _edit_area->setMarginType (1, QsciScintilla::SymbolMargin);
   _edit_area->setMarginSensitivity (1, true);
@@ -157,16 +164,22 @@ file_editor_tab::closeEvent (QCloseEvent
   // closing this window
   if (check_file_modified () == QMessageBox::Cancel)
     e->ignore ();
   else
     e->accept ();
 }
 
 void
+file_editor_tab::execute_command_in_terminal (const QString& command)
+{
+  emit execute_command_in_terminal_signal (command); // connected to main window
+}
+
+void
 file_editor_tab::set_file_name (const QString& fileName)
 {
   // update tracked file if we really have a file on disk
   QStringList trackedFiles = _file_system_watcher.files ();
   if (!trackedFiles.isEmpty ())
     _file_system_watcher.removePath (_file_name);
   if (!fileName.isEmpty ())
     _file_system_watcher.addPath (fileName);
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -23,20 +23,20 @@ along with Octave; see the file COPYING.
 #if !defined (file_editor_tab_h)
 #define file_editor_tab_h 1
 
 #include <QWidget>
 #include <QCloseEvent>
 #include <QFileSystemWatcher>
 #include <QSettings>
 #include <QFileInfo>
-#include <Qsci/qsciscintilla.h>
 #include <Qsci/qsciapis.h>
 
 #include "find-dialog.h"
+#include "octave-qscintilla.h"
 
 class file_editor;
 
 class file_editor_tab : public QWidget
 {
   Q_OBJECT
 
 public:
@@ -98,26 +98,29 @@ public slots:
 
   void set_modified (bool modified = true);
 
   QString load_file (const QString& fileName);
   void new_file (const QString& commands = QString ());
 
   void file_has_changed (const QString& fileName);
 
+  void execute_command_in_terminal (const QString& command);
+
 signals:
 
   void file_name_changed (const QString& fileName, const QString& toolTip);
   void editor_state_changed (bool copy_available, const QString& fileName);
   void tab_remove_request ();
   void add_filename_to_list (const QString&, QWidget *);
   void mru_add_file (const QString& file_name);
   void editor_check_conflict_save (const QString& saveFileName,
                                    bool remove_on_success);
   void run_file_signal (const QFileInfo& info);
+  void execute_command_in_terminal_signal (const QString&);
 
 protected:
 
   void closeEvent (QCloseEvent *event);
   void set_file_name (const QString& fileName);
 
 private slots:
 
@@ -178,17 +181,17 @@ private:
   void do_comment_selected_text (bool comment);
   QString comment_string (const QString&);
 
   void add_breakpoint_callback (const bp_info& info);
   void remove_breakpoint_callback (const bp_info& info);
   void remove_all_breakpoints_callback (const bp_info& info);
   void center_current_line ();
 
-  QsciScintilla *_edit_area;
+  octave_qscintilla *_edit_area;
 
   QString _file_name;
   QString _file_name_short;
 
   bool _long_title;
   bool _copy_available;
   bool _app_closing;
 
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1077,16 +1077,19 @@ file_editor::add_file_editor_tab (file_e
            this, SLOT (check_conflict_save (const QString&, bool)));
 
   connect (f, SIGNAL (mru_add_file (const QString&)),
            this, SLOT (handle_mru_add_file (const QString&)));
 
   connect (f, SIGNAL (run_file_signal (const QFileInfo&)),
            parent (), SLOT (run_file_in_terminal (const QFileInfo&)));
   
+  connect (f, SIGNAL (execute_command_in_terminal_signal (const QString&)),
+           parent (), SLOT (execute_command_in_terminal (const QString&)));
+
   // Signals from the file_editor non-trivial operations
   connect (this, SIGNAL (fetab_settings_changed (const QSettings *)),
            f, SLOT (notice_settings (const QSettings *)));
 
   connect (this, SIGNAL (fetab_close_request (const QWidget*,bool)),
            f, SLOT (conditional_close (const QWidget*,bool)));
 
   connect (this, SIGNAL (fetab_change_request (const QWidget*)),
diff --git a/libgui/src/m-editor/octave-qscintilla.cc b/libgui/src/m-editor/octave-qscintilla.cc
new file mode 100644
--- /dev/null
+++ b/libgui/src/m-editor/octave-qscintilla.cc
@@ -0,0 +1,87 @@
+/*
+
+Copyright (C) 2013 Torsten <ttl@justmail.de>
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#ifdef HAVE_QSCINTILLA
+
+#include "octave-qscintilla.h"
+#include "file-editor-tab.h"
+
+octave_qscintilla::octave_qscintilla (QWidget *p)
+    : QsciScintilla (p)
+{ }
+
+octave_qscintilla::~octave_qscintilla ()
+{ }
+
+
+// context menu requested
+void
+octave_qscintilla::contextMenuEvent (QContextMenuEvent *e)
+{
+  QMenu *context_menu = createStandardContextMenu ( );  // standard menu
+
+  context_menu->addSeparator ();   // separator before custom entries
+
+  // help menu: get the position of the mouse or the text cursor
+  _word_at_cursor = "";
+  QPoint global_pos = e->globalPos ();            // global mouse position
+
+  if (e->reason () == QContextMenuEvent::Mouse)   // context menu by mouse
+    _word_at_cursor = wordAtPoint (e->pos ());
+  else
+    { // context menu by keyboard or other: get point of text cursor
+      long position = SendScintilla (QsciScintillaBase::SCI_GETCURRENTPOS);
+      long point_x  = SendScintilla
+                        (QsciScintillaBase::SCI_POINTXFROMPOSITION,0,position);
+      long point_y  = SendScintilla
+                        (QsciScintillaBase::SCI_POINTYFROMPOSITION,0,position);
+      QPoint local_pos = QPoint (point_x,point_y);  // local position of cursor
+      global_pos = mapToGlobal (local_pos); // global position of cursor
+      QRect editor_rect = geometry ();      // get editor rect and map to global
+      editor_rect.moveTopLeft(parentWidget()->mapToGlobal(editor_rect.topLeft()));
+      if (editor_rect.contains (global_pos))  // is cursor within editor?
+        _word_at_cursor = wordAtPoint (local_pos);
+      else
+        global_pos = editor_rect.topLeft ();
+    }
+  // finally create the menu entry if a word at cursor was found
+  if (!_word_at_cursor.isEmpty ())
+    context_menu->addAction (tr ("help") + " " + _word_at_cursor,
+                             this, SLOT (contextmenu_help (bool)));
+
+  context_menu->exec (global_pos);
+}
+
+
+// handle the menu entry for calling help
+void
+octave_qscintilla::contextmenu_help (bool)
+{
+  QString command = "help " + _word_at_cursor;
+  emit execute_command_in_terminal_signal (command);
+}
+
+#endif
diff --git a/libgui/src/m-editor/octave-qscintilla.h b/libgui/src/m-editor/octave-qscintilla.h
new file mode 100644
--- /dev/null
+++ b/libgui/src/m-editor/octave-qscintilla.h
@@ -0,0 +1,55 @@
+/*
+
+Copyright (C) 2013 Torsten <ttl@justmail.de>
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if !defined (octave_qscintilla_h)
+#define octave_qscintilla_h 1
+
+#include <Qsci/qsciscintilla.h>
+#include <QMenu>
+#include <QContextMenuEvent>
+
+class octave_qscintilla : public QsciScintilla
+{
+  Q_OBJECT
+
+public:
+
+  octave_qscintilla (QWidget *p);
+  ~octave_qscintilla ();
+
+  virtual void contextMenuEvent (QContextMenuEvent *e);
+
+signals:
+
+  void execute_command_in_terminal_signal (const QString&);
+
+private slots:
+
+  void contextmenu_help (bool);
+
+private:
+
+  QString _word_at_cursor;
+
+};
+
+#endif
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -64,17 +64,18 @@ octave_gui_ICONS = \
 
 octave_gui_MOC =
 
 if AMCOND_HAVE_QSCINTILLA
 octave_gui_MOC += \
   src/m-editor/moc-file-editor-interface.cc \
   src/m-editor/moc-file-editor-tab.cc \
   src/m-editor/moc-file-editor.cc \
-  src/m-editor/moc-find-dialog.cc
+  src/m-editor/moc-find-dialog.cc \
+  src/m-editor/moc-octave-qscintilla.cc
 endif
 
 octave_gui_MOC += \
   src/moc-dialog.cc \
   src/moc-documentation-dock-widget.cc \
   src/moc-files-dock-widget.cc \
   src/moc-history-dock-widget.cc \
   src/moc-main-window.cc \
@@ -105,16 +106,17 @@ noinst_HEADERS += \
   src/octave-dock-widget.h \
   src/documentation-dock-widget.h \
   src/files-dock-widget.h \
   src/history-dock-widget.h \
   src/m-editor/file-editor-interface.h \
   src/m-editor/file-editor-tab.h \
   src/m-editor/file-editor.h \
   src/m-editor/find-dialog.h \
+  src/m-editor/octave-qscintilla.h \
   src/main-window.h \
   src/octave-gui.h \
   src/octave-main-thread.h \
   src/octave-qt-link.h \
   src/qtinfo/parser.h \
   src/qtinfo/webinfo.h \
   src/resource-manager.h \
   src/settings-dialog.h \
@@ -129,16 +131,17 @@ noinst_HEADERS += \
 src_libgui_src_la_SOURCES = \
   src/dialog.cc \
   src/documentation-dock-widget.cc \
   src/files-dock-widget.cc \
   src/history-dock-widget.cc \
   src/m-editor/file-editor-tab.cc \
   src/m-editor/file-editor.cc \
   src/m-editor/find-dialog.cc \
+  src/m-editor/octave-qscintilla.cc \
   src/main-window.cc \
   src/octave-gui.cc \
   src/octave-main-thread.cc \
   src/octave-qt-link.cc \
   src/qtinfo/parser.cc \
   src/qtinfo/webinfo.cc \
   src/resource-manager.cc \
   src/settings-dialog.cc \
