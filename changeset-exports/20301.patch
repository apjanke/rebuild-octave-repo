# HG changeset patch
# User Rik <rik@octave.org>
# Date 1436129756 25200
#      Sun Jul 05 13:55:56 2015 -0700
# Node ID eca5aa3225f4a3f5193fbadfd6f737282fc2f161
# Parent  9de6949ec15f49c16053f63f1d4867789f51a8d0
imshow.m: Add support for 'parent' property (bug #45473).

* imshow.m: Add cell variable prop_val_args{:} when calling image or imagesc.
Populate prop_val_args with {"parent", hparent} when "parent" argument given
to imshow.  Remove code commented out in 2015/05/1 which has not caused any
problems.  Add warning that arguments "border" and "reduce" are not supported.

diff --git a/scripts/image/imshow.m b/scripts/image/imshow.m
--- a/scripts/image/imshow.m
+++ b/scripts/image/imshow.m
@@ -72,16 +72,17 @@ function h = imshow (im, varargin)
   if (nargin == 0)
     print_usage ();
   endif
 
   display_range = NA;
   truecolor = false;
   indexed = false;
   xdata = ydata = [];
+  prop_val_args = {};
 
   ## Get the image.
   if (ischar (im))
     [im, map] = imread (im);
     indexed = true;
     colormap (map);
   endif
 
@@ -118,29 +119,36 @@ function h = imshow (im, varargin)
         else
           error ("imshow: invalid colormap MAP");
         endif
       elseif (! isempty (arg))
         error ("imshow: argument number %d is invalid", narg);
       endif
     elseif (ischar (arg))
       switch (tolower (arg))
+        case "border"
+          warning ("imshow: border argument is not implemented");
+          narg++;
         case "colormap"
           map = varargin{narg++};
           if (iscolormap (map))
             colormap (map);
           else
             error ("imshow: invalid colormap");
           endif
         case "displayrange"
           display_range = varargin{narg++};
+        case {"initialmagnification"}
+          warning ("image: zoom argument ignored -- use GUI features");
+          narg++;
         case "parent"
-          warning ("imshow: parent argument is not implemented");
-        case {"truesize", "initialmagnification"}
-          warning ("image: zoom argument ignored -- use GUI features");
+          prop_val_args(end+(1:2)) = {"parent", varargin{narg++}}; 
+        case "reduce"
+          warning ("imshow: reduce argument is not implemented");
+          narg++;
         case "xdata"
           xdata = varargin{narg++};
           if (! isvector (xdata))
             error ("imshow: xdata must be a vector")
           endif
           xdata = [xdata(1) xdata(end)];
         case "ydata"
           ydata = varargin{narg++};
@@ -182,31 +190,20 @@ function h = imshow (im, varargin)
     nans = isnan (im(:));
     if (any (nans))
       warning ("Octave:imshow-NaN",
                "imshow: pixels with NaN or NA values are set to minimum pixel value");
       im(nans) = display_range(1);
     endif
   endif
 
-  ## FIXME: Commented out 2014/05/01.  imagesc and 'clim' will automatically
-  ## take care of displaying out-of-range data clamped to the limits.
-  ## Eventually, this can be deleted if no problems arise.
-  ## Clamp the image to the range boundaries
-  ##if (! (truecolor || indexed || islogical (im)))
-  ##  low = display_range(1);
-  ##  high = display_range(2);
-  ##  im(im < low) = low;
-  ##  im(im > high) = high;
-  ##endif
-
   if (truecolor || indexed)
-    htmp = image (xdata, ydata, im);
+    htmp = image (xdata, ydata, im, prop_val_args{:});
   else
-    htmp = imagesc (xdata, ydata, im, display_range);
+    htmp = imagesc (xdata, ydata, im, display_range, prop_val_args{:});
     set (gca (), "clim", display_range);
   endif
   set (gca (), "visible", "off", "view", [0, 90],
                "ydir", "reverse", "layer", "top");
   axis ("image");
 
   if (nargout > 0)
     h = htmp;
