# HG changeset patch
# User Rik <rik@octave.org>
# Date 1502326947 25200
#      Wed Aug 09 18:02:27 2017 -0700
# Node ID 4d4ba038d1033e891b22432232b05bac9f0c1100
# Parent  41a0b750c36eeded382b7a0acf9f412ab9b9e14e
Restore processing multiple '--eval' lines when launching Octave (bug #51708).

* octave.cc (cmdline::cmdline_options): Explicitly create std::string (" ")
before appending output of octave_optarg_wrapper which is <char *> type.

* bp-table.cc (parse_dbfunction_params): Use += operator for performance and
readability.

diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -139,17 +139,18 @@ namespace octave
             break;
 
           case EVAL_OPTION:
             if (octave_optarg_wrapper ())
               {
                 if (m_code_to_eval.empty ())
                   m_code_to_eval = octave_optarg_wrapper ();
                 else
-                  m_code_to_eval += ' ' + octave_optarg_wrapper ();
+                  m_code_to_eval += (std::string (" ")
+                                     + octave_optarg_wrapper ());
               }
             break;
 
           case EXEC_PATH_OPTION:
             if (octave_optarg_wrapper ())
               m_exec_path = octave_optarg_wrapper ();
             break;
 
diff --git a/libinterp/parse-tree/bp-table.cc b/libinterp/parse-tree/bp-table.cc
--- a/libinterp/parse-tree/bp-table.cc
+++ b/libinterp/parse-tree/bp-table.cc
@@ -435,17 +435,17 @@ bp_table::parse_dbfunction_params (const
 
         case dbstop_if:
           if (seen_in)    // conditional breakpoint
             {
               cond = "";  // remaining arguments form condition
               for (; pos < nargin; pos++)
                 {
                   if (args(pos).is_string ())
-                    cond = cond + ' ' + args(pos).string_value ();
+                    cond += ' ' + args(pos).string_value ();
                   else
                     error ("%s: arguments to 'if' must all be strings", who);
                 }
 
               cond = cond.substr (1);   // omit initial space
             }
           else    // stop on event (error, warning, interrupt, NaN/inf)
             {
