# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1245391314 -7200
#      Fri Jun 19 08:01:54 2009 +0200
# Node ID 59559e71000e2251d977780cab202e2816d2297a
# Parent  25b52645de34dead7c8903c19c4afa444e42eadb
update docs

diff --git a/doc/interpreter/interp.txi b/doc/interpreter/interp.txi
--- a/doc/interpreter/interp.txi
+++ b/doc/interpreter/interp.txi
@@ -123,25 +123,20 @@ which demonstrates the poor behavior of 
 @float Figure,fig:interpft
 @center @image{interpft,4in}
 @caption{Comparison of @code{interp1} and @code{interpft} for non-periodic data}
 @end float
 @end ifnotinfo
 
 In additional the support function @code{spline} and @code{lookup} that
 underlie the @code{interp1} function can be called directly.
+@ref{Finding Elements and Checking Conditions}
 
 @DOCSTRING(spline)
 
-The @code{lookup} function is used by other interpolation functions to identify
-the points of the original data that are closest to the current point
-of interest.
-
-@DOCSTRING(lookup)
-
 @node Multi-dimensional Interpolation
 @section Multi-dimensional Interpolation
 
 There are three multi-dimensional interpolation functions in Octave, with
 similar capabilities.  Methods using Delaunay tessellation are described
 in @ref{Interpolation on Scattered Data}.
 
 @DOCSTRING(interp2)
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -74,16 +74,18 @@ Note that in conditional contexts (like 
 @DOCSTRING(isinf)
 
 @DOCSTRING(isnan)
 
 @DOCSTRING(finite)
 
 @DOCSTRING(find)
         
+@DOCSTRING(lookup)
+        
 @DOCSTRING(common_size)
 
 @node Rearranging Matrices
 @section Rearranging Matrices
 
 @DOCSTRING(fliplr)
 
 @DOCSTRING(flipud)
