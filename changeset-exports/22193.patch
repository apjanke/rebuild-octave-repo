# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1469885448 -3600
#      Sat Jul 30 14:30:48 2016 +0100
# Node ID e35866e6a2e08a8fe14fc97c575ecff0c088b4cb
# Parent  20b225a3ebf8ab650d6de437f41534464aead31b
normest1: always return a column vector for IT output (patch #8837)

* normest1.m: special code path returns a row vector for number of iterations
while it returns a column vector for all others.  This is Matlab compatible
but obviously a bug in Matlab.  Fix to always return a vector of same shape.
Add tests.

diff --git a/scripts/linear-algebra/normest1.m b/scripts/linear-algebra/normest1.m
--- a/scripts/linear-algebra/normest1.m
+++ b/scripts/linear-algebra/normest1.m
@@ -106,17 +106,20 @@ function [est, v, w, k] = normest1 (A, t
     Aisnum = true;
     n = rows (A);
     if ((n <= 4) || (t == n))
       ## compute directly
       [est, idx] = max (sum (abs (A), 1), [] ,2);
       v = zeros (n, 1);
       v(idx) = 1;
       w = A(:, idx);
-      k = [0, 1];
+      ## Matlab incompatible on purpose.  Matlab returns k as a row vector
+      ## for this special case, but a column vector in all other cases.
+      ## This is obviously a bug in Matlab that we don't reproduce.
+      k = [0; 1];
       return
     else
       realm = isreal (A);
     endif
   elseif (is_function_handle (A))
     Aisnum = false;
     n = A ("dim", [], varargin{:});
     realm = A ("real", [], varargin{:});
@@ -349,8 +352,15 @@ endfunction
 %!   [nminf, vinf, winf] = normest1 (A', 6);
 %!   assert (nm1, norm (A, 1), -.1)
 %!   assert (nminf, norm (A, inf), -.1)
 %!   assert (norm (w1, 1), nm1 * norm (v1, 1), -2*eps)
 %!   assert (norm (winf, 1), nminf * norm (vinf, 1), -2*eps)
 %! unwind_protect_cleanup
 %!   rand ("state", old_state);
 %! end_unwind_protect
+
+## Check IT is always a column vector.
+%!test
+%! [~, ~, ~, it] = normest1 (rand (3), 3);
+%! assert (iscolumn (it))
+%! [~, ~, ~, it] = normest1 (rand (50), 20);
+%! assert (iscolumn (it))
