# HG changeset patch
# User jwe
# Date 948102168 0
#      Mon Jan 17 09:42:48 2000 +0000
# Node ID 5ee5afb3981acd069ba21fba5ea6fc8df77f2d4e
# Parent  c3eed8ac845adafec112cd114d0663dd805f3fdc
[project @ 2000-01-17 09:42:43 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2000-01-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* strings/bin2dec.m: Texinfoize doc string.
+
 2000-01-14  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* control/system/__abcddims__.m: Rename from
 	control/system/abcddims.m, change all callers.
 	* control/base/__bodquist__.m: Likewise.
 	* control/base/__freqresp__.m: Likewise.
 	* control/util/__outlist__.m: Likewise.
 	* control/base/__stepimp__.m: Likewise.
diff --git a/scripts/plot/bottom_title.m b/scripts/plot/bottom_title.m
--- a/scripts/plot/bottom_title.m
+++ b/scripts/plot/bottom_title.m
@@ -19,17 +19,16 @@
 
 ## usage: bottom_title (text)
 ##
 ## NOTE: this will work only with gnuplot installed with
 ##       multiplot patch
 ##
 ## makes a title with the given text at the bottom of the plot
 ## rather than the top.
-##
 
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Adapted-By: jwe
 
 function bottom_title (text)
 
   if (! gnuplot_has_multiplot)
     error ("bottom_title: gnuplot does not appear to support this feature");
diff --git a/scripts/plot/sombrero.m b/scripts/plot/sombrero.m
--- a/scripts/plot/sombrero.m
+++ b/scripts/plot/sombrero.m
@@ -12,22 +12,26 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: sombrero (n)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} sombrero (@var{n})
 ##
-## Draw a `sombrero' in three dimensions using n grid lines.  The
+## Draw a `sombrero' in three dimensions using @var{n} grid lines.  The
 ## function plotted is
 ##
+## @example
 ##   z = sin (sqrt (x^2 + y^2)) / (sqrt (x^2 + y^2))
+## @end example
+## @end deftypefn
 
 ## Author: jwe
 
 function sombrero (n)
 
   if (nargin != 1)
     usage ("sombrero (n)");
   endif
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -14,19 +14,16 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## See xlabel.
 
-## See also: plot, semilogx, semilogy, loglog, polar, mesh, contour,
-##           bar, stairs, gplot, gsplot, replot, xlabel, title
-
 ## Author: jwe
 
 function ylabel (text)
 
   if (nargin != 1)
     usage ("ylabel (text)");
   endif
 
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -14,19 +14,16 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## See xlabel.
 
-## See also: plot, semilogx, semilogy, loglog, polar, mesh, contour,
-##           bar, stairs, gplot, gsplot, replot, xlabel, title
-
 ## Author: Vinayak Dutt <Dutt.Vinayak@mayo.EDU>
 ## Created: 3 July 95
 ## Adapted-By: jwe
 
 function zlabel (text)
 
   if (nargin != 1)
     usage ("zlabel (text)");
diff --git a/scripts/polynomial/polyder.m b/scripts/polynomial/polyder.m
--- a/scripts/polynomial/polyder.m
+++ b/scripts/polynomial/polyder.m
@@ -12,19 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage: polyder (p)
-##
-## SEE ALSO: polyderiv
+## See polyderiv.
 
 ## Author: jwe
 
 function q = polyder (p)
 
   if (nargin == 1)
     q = polyderiv (p);
   else
diff --git a/scripts/strings/bin2dec.m b/scripts/strings/bin2dec.m
--- a/scripts/strings/bin2dec.m
+++ b/scripts/strings/bin2dec.m
@@ -12,20 +12,26 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
-## usage:  bin2dec (x)
+## -*- texinfo -*-
+## @deftypefn {Function File} {} bin2dec (@var{s})
+## Return the decimal number corresponding to the binary number
+## represented by the string @var{s}.  For example,
 ##
-## Returns the decimal number corresponding to the binary number in
-## quotes.  For example, bin2dec ("1110") returns 14.
+## @example
+## bin2dec ("1110")
+##      @result{} 14
+## @end example
+## @end deftypefn
 
 ## Author: Kurt Hornik <Kurt.Hornik@ci.tuwien.ac.at>
 ## Adapted-By: jwe
 
 function y = bin2dec (x)
 
   if (nargin != 1)
     usage ("bin2dec (x)");
diff --git a/scripts/strings/isletter.m b/scripts/strings/isletter.m
--- a/scripts/strings/isletter.m
+++ b/scripts/strings/isletter.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
+## -*- texinfo -*-
 ## @deftypefn {Function File } { @var{bool} =} isletter(@var{s})
 ## Returns true if @var{s} is a letter false otherwise.
 ## @end deftypefn
 ## @seealso{isalpha}
 
 ## Author: jwe
 
 function retval = isletter (s)
diff --git a/scripts/strings/lower.m b/scripts/strings/lower.m
--- a/scripts/strings/lower.m
+++ b/scripts/strings/lower.m
@@ -12,16 +12,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
+## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{s} =} lower(@var{S})
 ## @end deftypefn
 ## @seealso{tolower}
 
 ## Author: jwe
 
 function retval = lower (s)
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,15 +1,19 @@
 2000-01-17  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/gammainc.cc (Fgammainc): Texinfoize doc string.
 	* ov-typeinfo.cc (Ftypeinfo): Ditto.
-
-	* DLD-FUNCTIONS/minmax.cc (Fmax, Fmin): Texinfoize doc strings.
+	* parse.y (Vwarn_future_time_stamp): Ditto.
+	* DLD-FUNCTIONS/minmax.cc (Fmax, Fmin): Ditto.
 	* ov-usr-fcn.cc (Fva_arg, Fva_start, Fvr_val): Ditto.
+	* defaults.cc (VOCTAVE_HOME, Frehash): Ditto.
+	* toplev.cc (Fwarranty, Fcasesen): Ditto.
+	* utils.cc (Fdo_string_escapes, Ffile_in_loadpath): Ditto.
+	* variables.cc (F__dump_symtab_info__, F__dump_symbol_info__): Ditto.
 
 	* pt-plot.cc (Fgraw, Fgset, Fgshow, Vgnuplot_command_plot, 
 	Vgnuplot_command_replot, Vgnuplot_command_splot,
 	Vgnuplot_command_using, Vgnuplot_command_with,
 	Vgnuplot_command_axes, Vgnuplot_command_title,
 	Vgnuplot_command_end): Texinfoize doc strings.
 
 2000-01-13  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -491,27 +491,34 @@ built-in variable @code{LOADPATH}.\n\
   DEFVAR (IMAGEPATH, OCTAVE_IMAGEPATH, imagepath,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} IMAGEPATH
 A colon separated list of directories in which to search for image\n\
 files.\n\
 @end defvr");
 
   DEFCONST (OCTAVE_HOME, Voctave_home,
-    "top-level Octave installation directory");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} OCTAVE_HOME\n\
+The name of the top-level Octave installation directory.\n\
+@end defvr");
 
   DEFCONSTX ("OCTAVE_VERSION", SBV_OCTAVE_VERSION, OCTAVE_VERSION,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} OCTAVE_VERSION\n\
 The version number of Octave, as a string.\n\
 @end defvr");
+
 }
 
 DEFUN (rehash, , ,
-  "rehash (): reinitialize LOADPATH directory cache")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} rehash ()\n\
+Reinitialize Octave's @code{LOADPATH} directory cache.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   Vload_path_dir_path.rehash ();
 
   return retval;
 }
 
diff --git a/src/mappers.cc b/src/mappers.cc
--- a/src/mappers.cc
+++ b/src/mappers.cc
@@ -166,17 +166,17 @@ Compute the inverse cosine of each eleme
 Compute the inverse hyperbolic cosine of each element of @var{x}.\n\
 @end deftypefn");
 
   DEFUN_MAPPER (angle, 0, 0, 0, arg, arg, 0, 0.0, 0.0, 0,
     "See arg.");
 
   DEFUN_MAPPER (arg, 0, 0, 0, arg, arg, 0, 0.0, 0.0, 0,
     "-*- texinfo -*-\n\
-@deftypefn {Mapping Function} {} angle (@var{z})\n\
+@deftypefn {Mapping Function} {} arg (@var{z})\n\
 Compute the argument of @var{z}, defined as\n\
 @iftex\n\
 @tex\n\
 $\\theta = \\tan^{-1}(y/x)$.\n\
 @end tex\n\
 @end iftex\n\
 @ifinfo\n\
 @var{theta} = @code{atan (@var{y}/@var{x})}.\n\
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -3492,17 +3492,21 @@ The default value of @code{warn_assign_a
 If the value of @code{warn_function_name_clash} is nonzero, a warning is\n\
 issued when Octave finds that the name of a function defined in a\n\
 function file differs from the name of the file.  (If the names\n\
 disagree, the name declared inside the file is ignored.)  If the value\n\
 is 0, the warning is omitted.  The default value is 1.\n\
 @end defvr");
 
   DEFVAR (warn_future_time_stamp, 1.0, warn_future_time_stamp,
-    "warn if a function file has a time stamp that is in the future");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} warn_future_time_stamp\n\
+If the value of this variable is nonzero, Octave will print a warning\n\
+if it finds a function file with a time stamp that is in the future.\n\
+@end defvr");
 
   DEFVAR (warn_missing_semicolon, 0.0, warn_missing_semicolon,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} warn_missing_semicolon\n\
 If the value of this variable is nonzero, Octave will warn when\n\
 statements in function definitions don't end in semicolons.  The default\n\
 value is 0.\n\
 @end defvr");
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -873,87 +873,118 @@ message.\n\
 #define O_NONBLOCK O_NDELAY
 #endif
 
 void
 symbols_of_syscalls (void)
 {
 #if defined (F_DUPFD)
   DEFCONSTX ("F_DUPFD", SBV_F_DUPFD, static_cast<double> (F_DUPFD),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} F_DUPFD\n\
+@end defvr");
 #endif
 
 #if defined (F_GETFD)
   DEFCONSTX ("F_GETFD", SBV_F_GETFD, static_cast<double> (F_GETFD),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} F_GETFD\n\
+@end defvr");
 #endif
 
 #if defined (F_GETFL)
   DEFCONSTX ("F_GETFL", SBV_F_GETFL, static_cast<double> (F_GETFL),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} F_GETFL\n\
+@end defvr");
 #endif
 
 #if defined (F_SETFD)
   DEFCONSTX ("F_SETFD", SBV_F_SETFD, static_cast<double> (F_SETFD),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} F_SETFD\n\
+@end defvr");
 #endif
 
 #if defined (F_SETFL)
   DEFCONSTX ("F_SETFL", SBV_F_SETFL, static_cast<double> (F_SETFL),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} F_SETFL\n\
+@end defvr");
 #endif
 
 #if defined (O_APPEND)
   DEFCONSTX ("O_APPEND", SBV_O_APPEND, static_cast<double> (O_APPEND),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_APPEND\n\
+@end defvr");
 #endif
 
 #if defined (O_ASYNC)
   DEFCONSTX ("O_ASYNC", SBV_O_ASYNC, static_cast<double> (O_ASYNC),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_ASYNC\n\
+@end defvr");
 #endif
 
 #if defined (O_CREAT)
   DEFCONSTX ("O_CREAT", SBV_O_CREAT, static_cast<double> (O_CREAT),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_CREAT\n\
+@end defvr");
 #endif
 
 #if defined (O_EXCL)
   DEFCONSTX ("O_EXCL", SBV_O_EXCL, static_cast<double> (O_EXCL),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_EXCL\n\
+@end defvr");
 #endif
 
 #if defined (O_NONBLOCK)
   DEFCONSTX ("O_NONBLOCK", SBV_O_NONBLOCK, static_cast<double> (O_NONBLOCK),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_NONBLOCK\n\
+@end defvr");
 #endif
 
 #if defined (O_RDONLY)
   DEFCONSTX ("O_RDONLY", SBV_O_RDONLY, static_cast<double> (O_RDONLY),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_RDONLY\n\
+@end defvr");
 #endif
 
 #if defined (O_RDWR)
   DEFCONSTX ("O_RDWR", SBV_O_RDWR, static_cast<double> (O_RDWR),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_RDWR\n\
+@end defvr");
 #endif
 
 #if defined (O_SYNC)
   DEFCONSTX ("O_SYNC", SBV_O_SYNC, static_cast<double> (O_SYNC),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_SYNC\n\
+@end defvr");
 #endif
 
 #if defined (O_TRUNC)
   DEFCONSTX ("O_TRUNC", SBV_O_TRUNC, static_cast<double> (O_TRUNC),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_TRUNC\n\
+@end defvr");
 #endif
 
 #if defined (O_WRONLY)
   DEFCONSTX ("O_WRONLY", SBV_O_WRONLY, static_cast<double> (O_WRONLY),
-    "");
+    "-*- texinfo -*-\n\
+@defvr {Built-in Variable} O_WRONLY\n\
+@end defvr");
 #endif
+
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -168,17 +168,20 @@ void
 clean_up_and_exit (int retval)
 {
   do_octave_atexit ();
 
   exit (retval == EOF ? 0 : retval);
 }
 
 DEFUN_TEXT (casesen, args, ,
-  "casesen [on|off]")
+  "-*- texinfo -*-\n\
+@deffn {Command} casesen arg\n\
+Provided for compatibility with Matlab, but does nothing.\n\
+@end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("casesen");
 
   if (error_state)
@@ -266,17 +269,20 @@ Octave's exit status.\n\
     error ("quit: invalid number of output arguments");
 
   return retval;
 }
 
 DEFALIAS (exit, quit);
 
 DEFUN (warranty, , ,
-  "warranty (): describe copying conditions")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} warranty ()\n\
+Describe the conditions for copying and distributing Octave.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   octave_stdout << "\n" OCTAVE_NAME_VERSION_AND_COPYRIGHT "\n\n\
 This program is free software; you can redistribute it and/or modify\n\
 it under the terms of the GNU General Public License as published by\n\
 the Free Software Foundation; either version 2 of the License, or\n\
 (at your option) any later version.\n\
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -233,19 +233,22 @@ string
 search_path_for_file (const string& path, const string& name)
 {
   dir_path p (path);
 
   return octave_env::make_absolute (p.find (name), octave_env::getcwd ());
 }
 
 DEFUN (file_in_loadpath, args, ,
-  "file_in_loadpath (NAME)\n\
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} file_in_loadpath (@var{name})\n\
 \n\
-Look up NAME in LOADPATH.  See also file_in_path")
+Look up @var{name} in Octave's @code{LOADPATH}.\n\
+@end deftypefn\n\
+@seealso{file_in_path}")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("file_in_loadpath");
 
   if (error_state)
@@ -432,17 +435,20 @@ do_string_escapes (const string& s)
     }
 
   retval.resize (i);
 
   return retval;
 }
 
 DEFUN (do_string_escapes, args, ,
-  "do_string_escapes (STRING)")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} do_string_escapes (@var{string})\n\
+Convert special characters in @var{string} to their escaped forms.\n\
+@end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
       if (args(0).is_string ())
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1218,17 +1218,20 @@ This command may not be used within a fu
 	    }
 	}
     }
 
   return retval;
 }
 
 DEFUN (__dump_symtab_info__, args, ,
-  "__dump_symtab_info__ (): print raw symbol table statistices")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __dump_symtab_info__ ()\n\
+Print raw symbol table statistices.\n\
+@end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
       string arg = args(0).string_value ();
@@ -1242,17 +1245,20 @@ DEFUN (__dump_symtab_info__, args, ,
     curr_sym_tab->print_stats ();
   else
     print_usage ("__dump_symtab_info__");
 
   return retval;
 }
 
 DEFUN (__dump_symbol_info__, args, ,
-  "__dump_symbol_info__ (NAME)")
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __dump_symbol_info__ (@var{name})\n\
+Print symbol table information for the symbol @var{name}.
+@end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin == 1)
     {
       string symbol_name = args(0).string_value ();
