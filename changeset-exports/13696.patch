# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1318518330 14400
#      Thu Oct 13 11:05:30 2011 -0400
# Node ID d6118a2c0644cb362546307b2103e2c8c917aa67
# Parent  348857854c5231edbf122a0a3e128d93b542e8fa
fix indexing bug for matrices inside anonymous functions

* ov-base-mat.h (octave_base_matrix<T>::do_multi_index_op):
New method.
* ov-fcn-handle.cc: New test.

diff --git a/src/ov-base-mat.h b/src/ov-base-mat.h
--- a/src/ov-base-mat.h
+++ b/src/ov-base-mat.h
@@ -84,16 +84,19 @@ public:
 
   octave_value subsasgn (const std::string& type,
                          const std::list<octave_value_list>& idx,
                          const octave_value& rhs);
 
   octave_value do_index_op (const octave_value_list& idx,
                             bool resize_ok = false);
 
+  octave_value_list do_multi_index_op (int, const octave_value_list& idx)
+    { return do_index_op (idx); }
+
   void assign (const octave_value_list& idx, const MT& rhs);
 
   void assign (const octave_value_list& idx, typename MT::element_type rhs);
 
   void delete_elements (const octave_value_list& idx);
 
   dim_vector dims (void) const { return matrix.dims (); }
 
diff --git a/src/ov-fcn-handle.cc b/src/ov-fcn-handle.cc
--- a/src/ov-fcn-handle.cc
+++ b/src/ov-fcn-handle.cc
@@ -1951,8 +1951,17 @@ octave_fcn_binder::do_multi_index_op (in
       octave_value_list tmp (arg_template);
       retval = root_handle.do_multi_index_op (nargout, tmp, lvalue_list);
     }
   else
      retval = octave_fcn_handle::do_multi_index_op (nargout, args, lvalue_list);
 
   return retval;
 }
+
+/*
+%!function r = f (g, i)
+%!  r = g(i);
+%!endfunction
+%!test
+%! x = [1,2;3,4];
+%! assert (f (@(i) x(:,i), 1), [1;3]);
+*/
