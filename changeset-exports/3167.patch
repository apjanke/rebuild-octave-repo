# HG changeset patch
# User jwe
# Date 892788123 0
#      Fri Apr 17 04:42:03 1998 +0000
# Node ID d609b993be3bf5ea0905a19c00c8c896d95e70e5
# Parent  c3409a0cafa8220720f29fa69f0abfcc19891d8e
[project @ 1998-04-17 04:41:59 by jwe]

diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -255,18 +255,16 @@ Interpreter:
 
   * For the keyboard function, parse return (or quit) more
     intelligently so that something like
 
       debug> x = 1; return
 
     will work as expected.
 
-  * Warn about M-files with timestamps in the future.
-
   * Fix the parser so that
 
       function foo ()
         implicit_str_to_num_ok = 1;
         '#' + 0;
       endfunction
 
     succeeds, even when implicit_str_to_num_ok is 0 at the time the
@@ -345,19 +343,17 @@ Interpreter:
     way of indexing them.
 
   * Allow arbitrary lower bounds for array indexing.  (Watch out for
     the additional conflict with zero-one style indexing.)
 
   * Recursive problems.
 
   * Improve the way ignore_function_time_stamp works to allow
-    selecting by individual directories or functions.  Also,
-    optionally allow checking only once between each prompt instead of
-    every time the function is called.
+    selecting by individual directories or functions.
 
   * Make it possible to ask exist() to only look for certain classes
    of variables, functions, files, etc. rather than always looking for
    everything.
 
   * Add a command-line option to tell Octave to just do syntax
     checking and not execute statements.
 
diff --git a/README.Windows b/README.Windows
--- a/README.Windows
+++ b/README.Windows
@@ -1,39 +1,106 @@
-Octave has been ported to Windows NT and Windows 95 using the beta 18
-release of the Cygnus gnu-win32 tools.  If you would like to volunteer
-to work on improving this port, please contact bug-octave@bevo.che.wisc.edu.
+Octave has been ported to Windows NT and Windows 95 using the gnu-win32
+tools from Cygnus Support.  If you would like to volunteer to work on
+improving this port, please contact bug-octave@bevo.che.wisc.edu.
 
 The directory ftp://ftp.che.wisc.edu/pub/octave/BINARIES/gnu-win32
 contains a binary distribution of Octave for Windows NT/95 along with
 installation instructions.  Unless you are interested in doing some
 hacking, you should use the binary releases.
 
 Here is a list of current problems (and workarounds, where available).
 
 * To compile and install Octave on a Windows NT/95 system,
-  you will need to get the beta 18 release of the gnu-win32 tools.
+  you will need to get the beta 19 release of the gnu-win32 tools.
   They are available from ftp://ftp.cygnus.com/pub/gnu-win32.
 
-* There is a conflict between /gnu-win32/b18/include/g++/String.h
-  and /gnu-win32/b18/H-i386-cygwin32/i386-cygwin32/include/string.h.
-  You should rename or remove /gnu-win32/b18/include/g++/String.h.
-  (These file names assume that you have installed the gnu-win32 tools
-  in /gnu-win32/b18).
-
 * You will need to have f2c and libf2c.a or g77 installed.  I would
   recommend using g77.  Mumit Khan has directions for building g77 at
   http://www.xraylith.wisc.edu/~khan/software/gnu-win32/g77.html.
   Another solution is to use egcs, which includes g77.  The egcs
   compiler is available from http://www.cygnus.com/egcs.
 
 * You will also need a termcap library.  The GNU termcap library seems
   to work.  You can get it from any GNU archive site, including 
   ftp://ftp.gnu.org/pub/gnu/termcap-1.3.tar.gz.
 
+* It is possible to cross-compile Octave for Windows NT/95 systems.
+  On the same hardware, it's generally much faster to use gcc as a
+  cross compiler under Linux than as a native compiler under Windows.
+
+  Here are some instructions for building a cross version of gcc and
+  then using it to compile Octave.  I've done this using a Linux
+  system as the host, but it should work equally well on other systems
+  that can run gcc).
+
+    + install cdk on your Windows system
+
+    + build a cross version of binutils:
+
+      tar zxf binutils-2.9.tar.gz
+      cd binutils-2.9
+      ./configure --target=i386-pc-cygwin32 --prefix=/usr/local/cross-gcc
+      make
+      make install
+
+      (You can choose whatever value for prefix that you prefer, of
+      course, just remember to also make the corresponding changes in the
+      following steps as well.)
+
+    + copy libraries and include files from cdk.  You'll need the
+      library files from the following directory trees:
+
+	b19/H-i386-pc-cygwin32/lib
+	b19/H-i386-pc-cygwin32/i386-cygwin32/lib
+
+      Copy them to /usr/local/cross-gcc/i386-pc-cygwin32/lib.
+
+      You'll also need the include files from the following directory
+      trees:
+
+	b19/include
+	b19/H-i386-pc-cygwin32/include
+
+      Copy them to /usr/local/cross-gcc/i386-pc-cygwin32/include.
+
+    + build cross version of egcs:
+
+      tar zxf egcs-1.0.2.tar.gz
+      cd egcs-1.0.2
+      export PATH=/usr/local/cross-gcc/bin:$PATH
+      ./configure --target=i386-pc-cygwin32 --prefix=/usr/local/cross-gcc
+      make
+      make install
+
+    + cross-compile libtermcap:
+
+      export PATH=/usr/local/cross-gcc/i386-pc-cygwin32/bin:$PATH
+      tar zxf termcap-1.3.tar.gz
+      cd termcap-1.3
+      ./configure --host=i386-pc-cygwin3
+      make
+      cp termcap.h /usr/local/cross-gcc/i386-pc-cygwin32/include
+      cp libtermcap.a /usr/local/cross-gcc/i386-pc-cygwin32/lib
+
+    + cross-compile Octave using the compiler you just built:
+
+      export PATH=/usr/local/cross-gcc/i386-pc-cygwin32/bin:$PATH
+      tar zxf octave-2.0.12.tar.gz
+      cd octave-2.0.10
+      ./configure --host=i386-pc-cygwin3
+      make
+
+    + make a binary distribution to copy to your Windows system:
+
+      make -f octMakefile binary-dist
+
+    + copy the binary distribution to your Windows system and install
+      using the intall-octave shell script
+
 * Octave requires gnuplot for plotting, but the normal Windows version
   of gnuplot will not work because it only reads from the GUI and refuses
   to read input from stdin.  Mumit Khan has written a patch that fixes
   the problem, but the gnuplot license does not allow us to distribute
   modified versions of gnuplot in binary form.  The patch is available
   from http://www.xraylith.wisc.edu/~khan/software/gnu-win32.
 
 * If Octave takes a long time to find function files, you may have to
@@ -54,9 +121,9 @@ please contact bug-octave@bevo.che.wisc.
 More information about the gnu-win32 project is available via the WWW
 at http://www.cygnus.com/gnu-win32.
 
 John W. Eaton
 jwe@bevo.che.wisc.edu
 University of Wisconsin-Madison
 Department of Chemical Engineering
 
-Sat Feb 14 13:12:19 1998
+Thu Apr 16 23:39:13 1998
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+Wed Apr 15 11:16:01 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* audio/loadaudio.m: Accept "pcm" as another file extension for
+	linear encoding.
+
+	* audio/saveaudio.m, audio/loadaudio.m, audio/playaudio.m,
+	audio/record.m: Open files in binary mode.
+
 Fri Apr 10 10:46:21 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* miscellaneous/dump_prefs.m: Use string array for list of values.
 	Move functionality of dump_1_pref here, but use built-in function
 	type to extract value, and put it inside try/catch block.
 	* miscellaneous/dump_1_pref.m: Delete unused function.
 
 Wed Apr  8 13:17:58 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
diff --git a/scripts/audio/loadaudio.m b/scripts/audio/loadaudio.m
--- a/scripts/audio/loadaudio.m
+++ b/scripts/audio/loadaudio.m
@@ -18,18 +18,18 @@
 ## 02111-1307, USA.
 
 ## usage:  X = loadaudio (name [, ext [, bit]])
 ##
 ## Loads audio data from the file "name.ext" into the data vector X.
 ## Default value for the "ext" argument, which has to be written
 ## without the initial ".", is "lin".
 ## Currently, the following audio formats are supported:
-## *) mu-law encoding with extension "mu", "au" or "snd"
-## *) linear encoding with extension "lin" or "raw"
+## *) mu-law encoding with extension "mu", "au", or "snd"
+## *) linear encoding with extension "lin", "pcm", or "raw"
 ##
 ## The `bit' argument can be either 8 (default) or 16.
 ## Depending on the value of bit, linearly encoded files are
 ## interpreted as being in 8 and 16 bit format, respectively, and
 ## mu-law encoded files are transformed to 8 and 16-bit linear
 ## format, respectively.
 
 ## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
@@ -48,19 +48,19 @@ function X = loadaudio (name, ext, bit)
 
   if (nargin < 3)
     bit = 8;
   elseif (bit != 8 && bit != 16)
     error ("loadaudio: bit must be either 8 or 16");
   endif
 
   name = [name, ".", ext];
-  num = fopen (name, "r");
+  num = fopen (name, "rb");
 
-  if (strcmp (ext, "lin") || strcmp (ext, "raw"))
+  if (strcmp (ext, "lin") || strcmp (ext, "raw") || strcmp (ext, "pcm"))
     if (bit == 8)
       [Y, c] = fread (num, inf, "uchar");
       X = Y - 127;
     else
       [X, c] = fread (num, inf, "short");
     endif
   elseif (strcmp (ext, "mu") || strcmp (ext, "au") || strcmp (ext, "snd"))
     [Y, c] = fread (num, inf, "uchar");
diff --git a/scripts/audio/playaudio.m b/scripts/audio/playaudio.m
--- a/scripts/audio/playaudio.m
+++ b/scripts/audio/playaudio.m
@@ -48,17 +48,17 @@ function playaudio (name, ext)
 	nr = nc;
       else
 	error ("playaudio: X must be a vector");
       endif
     endif
     X = name + 127;
     unwind_protect
       file = tmpnam ();
-      num = fopen (file, "w");
+      num = fopen (file, "wb");
       c = fwrite (num, X, "uchar");
       fclose (num);
       system (sprintf ("cat %s > /dev/dsp", file));
     unwind_protect_cleanup
       unlink (file);
     end_unwind_protect
   elseif (nargin >= 1 && isstr (name))
     ## play a file
diff --git a/scripts/audio/record.m b/scripts/audio/record.m
--- a/scripts/audio/record.m
+++ b/scripts/audio/record.m
@@ -42,17 +42,17 @@ function X = record (sec, sampling_rate)
 
     input ("Please hit ENTER and speak afterwards!\n", 1);
 
     cmd = sprintf ("dd if=/dev/dsp of=%s bs=%d count=%d",
                    file, sampling_rate, sec)
 
     system (cmd);
 
-    num = fopen (file, "r");
+    num = fopen (file, "rb");
 
     [Y, c] = fread (num, sampling_rate * sec, "uchar");
 
     fclose (num);
 
   unwind_protect_cleanup
 
     unlink (file);
diff --git a/scripts/audio/saveaudio.m b/scripts/audio/saveaudio.m
--- a/scripts/audio/saveaudio.m
+++ b/scripts/audio/saveaudio.m
@@ -54,17 +54,17 @@ function saveaudio (name, X, ext, bit)
     if (nr == 1)
       X = X';
       nr = nc;
     else
       error ("saveaudio: X must be a vector.");
     endif
   endif
 
-  num = fopen ([name, ".", ext], "w");
+  num = fopen ([name, ".", ext], "wb");
 
   if (strcmp (ext, "lin") || strcmp (ext, "raw"))
     if (bit == 8)
       ld = max (abs (X));
       if (ld > 127)   # convert 16 to 8 bit
 	if (ld < 16384)
 	  sc = 64 / ld;
 	else
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+Thu Apr 16 01:00:12 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dynamic-ld.cc: Only include dlfcn.h if HAVE_DLFCN_H.
+
 Wed Apr 15 01:03:05 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* input.cc (Vlast_prompt_time): New global variable.
 	(octave_gets): Set it.
 	* ov-fcn.h (octave_function::time_checked): New virtual function
 	(octave_function::mark_fcn_file_up_to_date): Ditto.
 	* ov-usr-fcn.h (octave_user_function::time_checked): New function.
 	(octave_user_function::mark_fcn_file_up_to_date): Ditto.
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -29,17 +29,19 @@ Software Foundation, 59 Temple Place - S
 #include <cstring>
 #endif
 
 #include <strstream.h>
 
 extern "C"
 {
 #if defined (WITH_DL)
+#if defined (HAVE_DLFCN_H)
 #include <dlfcn.h>
+#endif
 #ifndef RTLD_LAZY
 #define RTLD_LAZY 1
 #endif
 #elif defined (WITH_SHL)
 #include <dl.h>
 #endif
 }
 
diff --git a/test/ChangeLog b/test/ChangeLog
--- a/test/ChangeLog
+++ b/test/ChangeLog
@@ -1,8 +1,13 @@
+Wed Apr 15 15:23:43 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* octave.test/index/dfi-f/m-2.m, octave.test/index/dfi-f/index.exp:
+	Expect this test to succed now.
+
 Thu Mar  5 20:35:26 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.test/system/gmtime-1.m, octave.test/system/localtime-1.m:
 	Not all systems have time zone info in the struct.
 
 Mon Mar  2 14:36:50 1998  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octave.test/io/binary-io-1.m (id): Use binary flag in fopen call.
diff --git a/test/octave.test/index/dfi-f/index.exp b/test/octave.test/index/dfi-f/index.exp
--- a/test/octave.test/index/dfi-f/index.exp
+++ b/test/octave.test/index/dfi-f/index.exp
@@ -146,17 +146,17 @@ do_test v-15.m
 
 ## matrix tests
 
 set test index-m-1
 set prog_output "ans = 1"
 do_test m-1.m
 
 set test index-m-2
-set prog_output "error:.*"
+set prog_output "ans = 1"
 do_test m-2.m
 
 set test index-m-3
 set prog_output "error:.*"
 do_test m-3.m
 
 set test index-m-4
 set prog_output "error:.*"
diff --git a/test/octave.test/index/dfi-f/m-2.m b/test/octave.test/index/dfi-f/m-2.m
--- a/test/octave.test/index/dfi-f/m-2.m
+++ b/test/octave.test/index/dfi-f/m-2.m
@@ -1,8 +1,8 @@
 do_fortran_indexing = 0;
 a = [1,2;3,4];
 a_fvec = [1;3;2;4];
 a_col_1 = [1;3];
 a_col_2 = [2;4];
 a_row_1 = [1,2];
 a_row_2 = [3,4];
-a(:)
+all (a(:) == a_fvec)
