# HG changeset patch
# User jwe
# Date 1149694738 0
#      Wed Jun 07 15:38:58 2006 +0000
# Node ID 034cdbd34c0aca2a17b3880fe32882d23bc447ea
# Parent  393100dce990b450ff63481368d4bbc161b2cc4b
[project @ 2006-06-07 15:38:58 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,13 +1,30 @@
 2006-06-06  John W. Eaton  <jwe@octave.org>
 
+	* Makeconf.in (datarootdir): New variable.
+
+	* acx_lapack.m4 (acx_lapack_ok): 
+	Use AC_LINK_IFELSE+AC_LANG_PROGRAM instead of AC_TRY_LINK
+
+	* aclocal.m4: Use AC_RUN_IFELSE+AC_LANG_SOURCE instead of AC_TRY_RUN.
+
+	* acx_blas.m4, acx_lapack.m4, configure.in, aclocal.m4:
+	Use AS_HELP_STRING instead of AC_HELP_STRING.
+
+	* configure.in: Outside of other macros, use AC_MSG_NOTICE instad
+	of AC_MSG_RESULT.  Check for sys_siglist using method from
+	autoconf manual.
+
+	* configure.in, Makeconf.in: octMakefile.in: Delete plplot cruft.
+
 	* configure.in, aclocal.m4:
-	Use AS_HELP_STRING instead of AC_HELP_STRING.
 	Use AC_LINK_IFELSE+AC_LANG_PROGRAM instead of AC_TRY_LINK
+	Use AC_COMPILE_IFELSE+AC_LANG_PROGRAM instead of AC_TRY_COMPILE.
+	Use AS_HELP_STRING consistently with AC_ARG_WITH and AC_ARG_ENABLE.
 
 2006-05-23  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Check for inttypes.h and stdint.h.
 
 2006-05-19  John W. Eaton  <jwe@octave.org>
 
 	* mk-opts.pl (emit_print_function, emit_options_function):
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -179,17 +179,16 @@ SONAME_FLAGS = @SONAME_FLAGS@
 RDYNAMIC_FLAG = @RDYNAMIC_FLAG@
 
 RLD_FLAG = @RLD_FLAG@
 
 FLIBS = @FLIBS@
 
 LIBDLFCN = @LIBDLFCN@
 LIBGLOB = @LIBGLOB@
-LIBPLPLOT = @LIBPLPLOT@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 LIBREADLINE = @LIBREADLINE@
 TERMLIBS = @TERMLIBS@
 
 REGEX_LIBS = @REGEX_LIBS@
 BLAS_LIBS = @BLAS_LIBS@
@@ -226,16 +225,20 @@ exec_prefix = @exec_prefix@
 # Where to install Octave and other binaries that people will want to
 # run directly.
 bindir = @bindir@
 
 # Normally the directory for installing executables that system
 # administrators run.  This is the same as libexecdir on Cygwin systems.
 sbindir = @sbindir@
 
+# The root of the directory tree for read-only
+# architecture-independent data files.
+datarootdir = @datarootdir@
+
 # Where to install architecture-independent data files.  ${fcnfiledir}
 # and ${localfcnfiledir} are subdirectories of this.
 datadir = @datadir@
 
 libdir = @libdir@
 
 # Where to install and expect libraries like libcruft.a, liboctave.a,
 # and other architecture-dependent data.
@@ -454,17 +457,16 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_LFLAGS%|\"${LFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_LIBCRUFT%|\"${LIBCRUFT}\"|" \
   -e "s|%OCTAVE_CONF_LIBDLFCN%|\"${LIBDLFCN}\"|" \
   -e "s|%OCTAVE_CONF_LIBEXT%|\"${LIBEXT}\"|" \
   -e "s|%OCTAVE_CONF_LIBFLAGS%|\"${LIBFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_LIBGLOB%|\"${LIBGLOB}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTAVE%|\"${LIBOCTAVE}\"|" \
   -e "s|%OCTAVE_CONF_LIBOCTINTERP%|\"${LIBOCTINTERP}\"|" \
-  -e "s|%OCTAVE_CONF_LIBPLPLOT%|\"${LIBPLPLOT}\"|" \
   -e "s|%OCTAVE_CONF_LIBREADLINE%|\"${LIBREADLINE}\"|" \
   -e "s|%OCTAVE_CONF_LIBS%|\"${LIBS}\"|" \
   -e "s|%OCTAVE_CONF_LN_S%|\"${LN_S}\"|" \
   -e "s|%OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS%|\"${MKOCTFILE_DL_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_MKOCTFILE_INCFLAGS%|\"${MKOCTFILE_INCFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_MKOCTFILE_LFLAGS%|\"${MKOCTFILE_LFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_RANLIB%|\"${RANLIB}\"|" \
   -e "s|%OCTAVE_CONF_RDYNAMIC_FLAG%|\"${RDYNAMIC_FLAG}\"|" \
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -73,48 +73,48 @@ AC_SUBST(ARFLAGS)
 ])
 dnl
 dnl See if the standard string class has npos as a member.
 dnl
 AC_DEFUN(OCTAVE_STRING_NPOS,
 [AC_CACHE_CHECK([whether including <string> defines NPOS],
 octave_cv_string_npos,
 [AC_LANG_PUSH(C++)
-AC_TRY_COMPILE([#include <string>],
-[size_t foo = NPOS],
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <string>]],
+[[size_t foo = NPOS]])],
 octave_cv_string_npos=yes, octave_cv_string_npos=no)])
 if test $octave_cv_string_npos = no; then
   AC_DEFINE(NPOS, [std::string::npos], [Define (to string::npos) if <string> doesn't])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
 dnl See if the compiler supports placement delete
 dnl
 AC_DEFUN(OCTAVE_PLACEMENT_DELETE,
 [AC_CACHE_CHECK([whether <new> defines placement delete operator],
 octave_cv_placement_delete,
 [AC_LANG_PUSH(C++)
-AC_TRY_COMPILE([#include <new>],
-[operator delete((void *)0, (void *)0);],
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <new>]],
+[[operator delete((void *)0, (void *)0);]])],
 octave_cv_placement_delete=yes, octave_cv_placement_delete=no)])
 if test $octave_cv_placement_delete = yes; then
 AC_DEFINE(HAVE_PLACEMENT_DELETE,1,[Define if C++ supports operator delete(void *, void *)])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
 dnl See if the compiler dynamic auto arrays
 dnl
 AC_DEFUN(OCTAVE_DYNAMIC_AUTO_ARRAYS,
 [AC_CACHE_CHECK([whether C++ supports dynamic auto arrays],
 octave_cv_dynamic_auto_arrays,
 [AC_LANG_PUSH(C++)
-AC_TRY_COMPILE(,
-[void test(char *); int length(); char x[length()]; test(x);],
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],
+[[void test(char *); int length(); char x[length()]; test(x);]])],
 octave_cv_dynamic_auto_arrays=yes, octave_cv_dynamic_auto_arrays=no)])
 if test $octave_cv_dynamic_auto_arrays = yes; then
 AC_DEFINE(HAVE_DYNAMIC_AUTO_ARRAYS,1,[Define if C++ supports dynamic auto arrays])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
 dnl The following test is from Karl Berry's Kpathseach library.  I'm
@@ -123,17 +123,17 @@ dnl kpathsea optional.
 dnl
 dnl Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
 dnl This test program is due to Mike Hibler <mike@cs.utah.edu>.
 dnl We don't actually need to run this if we don't have putenv, but it
 dnl doesn't hurt.
 AC_DEFUN(OCTAVE_SMART_PUTENV,
 [AC_MSG_CHECKING(whether putenv uses malloc)
 AC_CACHE_VAL(octave_cv_func_putenv_malloc,
-[AC_TRY_RUN([
+[AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #define VAR	"YOW_VAR"
 #define STRING1 "GabbaGabbaHey"
 #define STRING2 "Yow!!"		/* should be shorter than STRING1 */
 extern char *getenv (); /* in case char* and int don't mix gracefully */
 main ()
 {
   char *str1, *rstr1, *str2, *rstr2;
   str1 = getenv (VAR);
@@ -172,17 +172,17 @@ main ()
    * you had better not do a free on the first string!
    */
   if (rstr1 == rstr2)
           printf ("#define SMART_PUTENV\n");
   else
           printf ("#undef SMART_PUTENV\n");
 #endif
   exit (rstr1 == rstr2 ? 0 : 1);
-}], octave_cv_func_putenv_malloc=yes, octave_cv_func_putenv_malloc=no,
+}]])], octave_cv_func_putenv_malloc=yes, octave_cv_func_putenv_malloc=no,
     octave_cv_func_putenv_malloc=no)])dnl
 AC_MSG_RESULT($octave_cv_func_putenv_malloc)
 if test $octave_cv_func_putenv_malloc = yes; then
   AC_DEFINE(SMART_PUTENV,1,[To quiet autoheader.])
 fi])
 dnl
 dnl These two checks for signal functions were originally part of the
 dnl aclocal.m4 file distributed with bash 2.0.
@@ -203,22 +203,22 @@ AC_CACHE_VAL(octave_cv_signal_vintage,
     [octave_cv_signal_vintage=posix],
     [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <signal.h>]],
        [[int mask = sigmask (SIGINT);
 	 sigsetmask (mask);
          sigblock (mask);
          sigpause (mask);]])],
        [octave_cv_signal_vintage=4.2bsd],
        [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <signal.h>
-          RETSIGTYPE foo() { }]])],
+          RETSIGTYPE foo() { }]],
           [[int mask = sigmask (SIGINT);
 	    sigset (SIGINT, foo);
             sigrelse (SIGINT);
 	    sighold (SIGINT);
-            sigpause (SIGINT);]],
+            sigpause (SIGINT);]])],
           [octave_cv_signal_vintage=svr3],
           [octave_cv_signal_vintage=v7])])])])
 AC_MSG_RESULT($octave_cv_signal_vintage)
 if test "$octave_cv_signal_vintage" = posix; then
 AC_DEFINE(HAVE_POSIX_SIGNALS, 1, [Define if you have POSIX style signals.])
 elif test "$octave_cv_signal_vintage" = "4.2bsd"; then
 AC_DEFINE(HAVE_BSD_SIGNALS, 1, [Define if you have BSD style signals.])
 elif test "$octave_cv_signal_vintage" = svr3; then
@@ -226,17 +226,17 @@ AC_DEFINE(HAVE_USG_SIGHOLD, 1, [Define i
 fi
 ])
 dnl
 AC_DEFUN(OCTAVE_REINSTALL_SIGHANDLERS,
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_REQUIRE([OCTAVE_SIGNAL_CHECK])
 AC_MSG_CHECKING([if signal handlers must be reinstalled when invoked])
 AC_CACHE_VAL(octave_cv_must_reinstall_sighandlers,
-[AC_TRY_RUN([
+[AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <signal.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 typedef RETSIGTYPE sigfunc();
 int nsigint;
 #ifdef HAVE_POSIX_SIGNALS
 sigfunc *
@@ -264,17 +264,19 @@ sigint(s)
 main()
 {
   nsigint = 0;
   set_signal_handler(SIGINT, sigint);
   kill((int)getpid(), SIGINT);
   kill((int)getpid(), SIGINT);
   exit(nsigint != 2);
 }
-], octave_cv_must_reinstall_sighandlers=no, octave_cv_must_reinstall_sighandlers=yes,
+]])],
+  octave_cv_must_reinstall_sighandlers=no,
+  octave_cv_must_reinstall_sighandlers=yes,
 if test "$octave_cv_signal_vintage" = svr3; then
   octave_cv_must_reinstall_sighandlers=yes
 else
   octave_cv_must_reinstall_sighandlers=no
 fi)])
 if test "$cross_compiling" = yes; then
   AC_MSG_RESULT([$octave_cv_must_reinstall_sighandlers assumed for cross compilation])
 else
@@ -706,27 +708,26 @@ EOF
   AC_MSG_RESULT($octave_cv_cxx_abi)
   AC_DEFINE_UNQUOTED(CXX_ABI, $octave_cv_cxx_abi, [Define to the C++ ABI your compiler uses.])
 ])
 dnl
 dnl Determine if mkdir accepts only one argument instead dnl of the usual 2.
 dnl
 AC_DEFUN(OCTAVE_MKDIR_TAKES_ONE_ARG,
 [AC_CACHE_CHECK([if mkdir takes one argument], octave_cv_mkdir_takes_one_arg,
-[AC_TRY_COMPILE([
-#include <sys/types.h>
+[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
 #ifdef HAVE_SYS_STAT_H
 # include <sys/stat.h>
 #endif
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
 #endif
 #ifdef HAVE_DIRECT_H
 # include <direct.h>
-#endif], [mkdir ("foo", 0);],
+#endif]], [[mkdir ("foo", 0);]])],
         octave_cv_mkdir_takes_one_arg=no, octave_cv_mkdir_takes_one_arg=yes)])
 if test $octave_cv_mkdir_takes_one_arg = yes ; then
   AC_DEFINE(MKDIR_TAKES_ONE_ARG, 1, [Define if host mkdir takes a single argument.])
 fi
 ])
 # OCTAVE_PROG_SED
 # --------------
 # Check for a fully-functional sed program, that truncates
@@ -809,27 +810,27 @@ AC_DEFUN(OCTAVE_PROG_DESKTOP_FILE_INSTAL
   AC_SUBST(DESKTOP_FILE_INSTALL)
 ])
 dnl
 dnl Check for IEEE 754 data format.
 dnl
 AC_DEFUN([OCTAVE_IEEE754_DATA_FORMAT],
 [AC_MSG_CHECKING([for IEEE 754 data format])
 AC_CACHE_VAL(octave_cv_ieee754_data_format,
-[AC_TRY_RUN([
+[AC_RUN_IFELSE([AC_LANG_SOURCE([[
 int
 main (void) 
 {
   typedef union { unsigned char c[8]; double d; } ieeebytes;
    
   ieeebytes l = {0x1c, 0xbc, 0x6e, 0xf2, 0x54, 0x8b, 0x11, 0x43};
   ieeebytes b = {0x43, 0x11, 0x8b, 0x54, 0xf2, 0x6e, 0xbc, 0x1c};
 
   return l.d != 1234567891234567.0 && b.d != 1234567891234567.0;
-}],
+}]])],
   octave_cv_ieee754_data_format=yes,
   octave_cv_ieee754_data_format=no,
   octave_cv_ieee754_data_format=no)])
 if test "$cross_compiling" = yes; then
   AC_MSG_RESULT([$octave_cv_ieee754_data_format assumed for cross compilation])
 else
   AC_MSG_RESULT($octave_cv_ieee754_data_format)
 fi
@@ -842,17 +843,17 @@ dnl Check for UMFPACK seperately split c
 dnl that as umfpack.h can be in three different places, rather than
 dnl include it, just declare the functions needed.
 dnl
 dnl Assumes that the check for umfpack has already been performed.
 dnl
 AC_DEFUN([OCTAVE_UMFPACK_SEPERATE_SPLIT],
 [AC_MSG_CHECKING([for UMFPACK seperate complex matrix and rhs split])
 AC_CACHE_VAL(octave_cv_umfpack_seperate_split,
-[AC_TRY_RUN([
+[AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <stdlib.h>
 #if defined (HAVE_UFSPARSE_UMFPACK_h)
 #include <ufsparse/umfpack.h>
 #elif defined (HAVE_UMFPACK_UMFPACK_H)
 #include <umfpack/umfpack.h>
 #elif defined (HAVE_UMFPACK_H)
 #include <umfpack.h>
 #endif
@@ -875,17 +876,17 @@ int main (void)
   (void) umfpack_zi_solve (0, Ap, Ai, Ax, null, x, null, br, bi, 
 		Numeric, null, null) ;
   umfpack_zi_free_numeric (&Numeric) ;
   for (i = 0; i < n; i++, x+=2) 
     if (fabs(*x - i - 1.) > 1.e-13)
       return (1);
   return (0) ;
 }
-],
+]])],
   octave_cv_umfpack_seperate_split=yes,
   octave_cv_umfpack_seperate_split=no,
   octave_cv_umfpack_seperate_split=no)])
 if test "$cross_compiling" = yes; then
   AC_MSG_RESULT([$octave_cv_umfpack_seperate_split assumed for cross compilation])
 else
   AC_MSG_RESULT($octave_cv_umfpack_seperate_split)
 fi
diff --git a/acx_blas.m4 b/acx_blas.m4
--- a/acx_blas.m4
+++ b/acx_blas.m4
@@ -33,17 +33,17 @@ dnl @version $Id: acx_blas.m4,v 1.2 2001
 dnl @author Steven G. Johnson <stevenj@alum.mit.edu>
 dnl
 AC_DEFUN([ACX_BLAS], [
 AC_PREREQ(2.50)
 AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
 acx_blas_ok=no
 
 AC_ARG_WITH(blas,
-	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+	[AS_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
 case $with_blas in
 	yes | "") ;;
 	no) acx_blas_ok=disable ;;
 	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
 	*) BLAS_LIBS="-l$with_blas" ;;
 esac
 
 # Get fortran linker names of BLAS functions to check for.
@@ -53,17 +53,18 @@ AC_F77_FUNC(dgemm)
 acx_blas_save_LIBS="$LIBS"
 LIBS="$LIBS $FLIBS"
 
 # First, check BLAS_LIBS environment variable
 if test $acx_blas_ok = no; then
 if test "x$BLAS_LIBS" != x; then
 	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
 	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
-	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_LINK_IFELSE([AC_LANG_CALL([], [$sgemm])],
+		       [acx_blas_ok=yes], [BLAS_LIBS=""])
 	AC_MSG_RESULT($acx_blas_ok)
 	LIBS="$save_LIBS"
 fi
 fi
 
 # BLAS linked to by default?  (happens on some supercomputers)
 if test $acx_blas_ok = no; then
 	save_LIBS="$LIBS"; LIBS="$LIBS"
@@ -82,18 +83,19 @@ if test $acx_blas_ok = no; then
 			[], [-latlas])])
 fi
 
 # BLAS in Apple vecLib framework? (Mac OS X)
 if test $acx_blas_ok = no; then
 	vlib_flags="-framework vecLib"
 	save_LIBS="$LIBS"; LIBS="$vlib_flags $LIBS"
 	AC_MSG_CHECKING([for $sgemm in $vlib_flags])
-	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes; BLAS_LIBS="$vlib_flags"],
-			 [BLAS_LIBS=""])
+	AC_LINK_IFELSE([AC_LANG_CALL([], [$sgemm])],
+                       [acx_blas_ok=yes; BLAS_LIBS="$vlib_flags"],
+		       [BLAS_LIBS=""])
 	AC_MSG_RESULT($acx_blas_ok)
 	LIBS="$save_LIBS"
 fi
 
 # BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
 if test $acx_blas_ok = no; then
 	AC_CHECK_LIB(blas, $sgemm,
 		[AC_CHECK_LIB(dgemm, $dgemm,
diff --git a/acx_lapack.m4 b/acx_lapack.m4
--- a/acx_lapack.m4
+++ b/acx_lapack.m4
@@ -30,17 +30,17 @@ dnl
 dnl @version $Id: acx_lapack.m4,v 1.3 2002/03/12 09:12:44 simons Exp $
 dnl @author Steven G. Johnson <stevenj@alum.mit.edu>
 
 AC_DEFUN([ACX_LAPACK], [
 AC_REQUIRE([ACX_BLAS])
 acx_lapack_ok=no
 
 AC_ARG_WITH(lapack,
-        [AC_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
+        [AS_HELP_STRING([--with-lapack=<lib>], [use LAPACK library <lib>])])
 case $with_lapack in
         yes | "") ;;
         no) acx_lapack_ok=disable ;;
         -* | */* | *.a | *.so | *.so.* | *.o) LAPACK_LIBS="$with_lapack" ;;
         *) LAPACK_LIBS="-l$with_lapack" ;;
 esac
 
 # Get fortran linker name of LAPACK function to check for.
@@ -50,17 +50,18 @@ AC_F77_FUNC(cheev)
 if test "x$acx_blas_ok" != xyes; then
         acx_lapack_ok=noblas
 fi
 
 # First, check LAPACK_LIBS environment variable
 if test "x$LAPACK_LIBS" != x; then
         save_LIBS="$LIBS"; LIBS="$LAPACK_LIBS $BLAS_LIBS $LIBS $FLIBS"
         AC_MSG_CHECKING([for $cheev in $LAPACK_LIBS])
-        AC_TRY_LINK_FUNC($cheev, [acx_lapack_ok=yes], [LAPACK_LIBS=""])
+        AC_LINK_IFELSE([AC_LANG_CALL([], [$cheev])],
+		       [acx_lapack_ok=yes], [LAPACK_LIBS=""])
         AC_MSG_RESULT($acx_lapack_ok)
         LIBS="$save_LIBS"
         if test acx_lapack_ok = no; then
                 LAPACK_LIBS=""
         fi
 fi
 
 # LAPACK linked to by default?  (is sometimes included in BLAS lib)
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,36 +24,36 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.512 $)
+AC_REVISION($Revision: 1.513 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
+OCTAVE_HOST_TYPE
+
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
-OCTAVE_HOST_TYPE
-
 AC_GNU_SOURCE
 
 AC_AIX
 AC_MINIX
 AC_ISC_POSIX
 
 ### Path separator.
 sepchar=:
 AC_ARG_WITH(sepchar,
   [AS_HELP_STRING([--with-sepchar=<char>],
-	[use <char> as the path separation character])])
+     [use <char> as the path separation character])])
 case $with_sepchar in
   yes | "")
     case "$canonical_host_type" in
       *-*-mingw*)
 	sepchar=';'
         ;;
       esac
     ;;
@@ -99,74 +99,56 @@ OCTAVE_SET_DEFAULT(imagedir, '$(datadir)
 ### Make configure args available for other uses.
 
 config_opts=$ac_configure_args
 AC_SUBST(config_opts)
 
 ### Allow the user to force us to use f2c.
 
 AC_ARG_WITH(f2c,
-  [  --with-f2c              use f2c even if Fortran compiler is available],
+  [AS_HELP_STRING([--with-f2c],
+     [use f2c even if Fortran compiler is available])],
   [if test "$withval" = no; then use_f2c=false; else use_f2c=true; fi],
   use_f2c=false)
 
 ### Allow the user to force us to use f77.
 
 AC_ARG_WITH(f77,
-  [  --with-f77              use f77 to compile Fortran subroutines],
+  [AS_HELP_STRING([--with-f77], [use f77 to compile Fortran subroutines])],
   [if test "$withval" = no; then use_f77=false; else use_f77=true; fi],
   use_f77=false)
 
 ### Make sure only one of the above options for Fortran compilers was
 ### specified (multiple "no" or --without-FOO options are ok).
 
 OCTAVE_CHECK_EXCLUSIVE_WITH_OPTIONS(f77, f2c,
   [warn_f2c_and_f77="--with-f2c and --with-f77 both specified!  Using f77..."
   AC_MSG_WARN($warn_f2c_and_f77)
   use_f2c=false])
 
-dnl ### Allow the user disable support for plplot.
-dnl 
-dnl # USE_PLPLOT=true
-dnl # PLPLOT_DIR=plplot
-dnl # LIBPLPLOT='$(TOPDIR)/plplot/libplplot.$(LIBEXT)
-USE_PLPLOT=false
-PLPLOT_DIR=""
-LIBPLPLOT=""
-dnl AC_ARG_ENABLE(plplot,
-dnl   [  --enable-plplot         use plplot for plotting (default is yes)],
-dnl   [if test "$enableval" = no; then
-dnl      USE_PLPLOT=false;
-dnl      LIBPLPLOT="";
-dnl      PLPLOT_DIR="";
-dnl    fi], [])
-dnl if $USE_PLPLOT; then
-dnl   AC_DEFINE(USE_PLPLOT, 1, [Define to use plplot.])
-dnl fi
-AC_SUBST(LIBPLPLOT)
-AC_SUBST(PLPLOT_DIR)
-
 ### Make it possible to have Octave's array and matrix classes do bounds
 ### checking on element references.  This slows some operations down a
 ### bit, so it is turned off by default.
 
 BOUNDS_CHECKING=false
 AC_ARG_ENABLE(bounds-check,
-  [  --enable-bounds-check   for internal array classes (default is no)],
+  [AS_HELP_STRING([--enable-bounds-check],
+     [for internal array classes (default is no)])],
   [if test "$enableval" = yes; then BOUNDS_CHECKING=true; fi], [])
 if $BOUNDS_CHECKING; then
   AC_DEFINE(BOUNDS_CHECKING, 1, [Define to use internal bounds checking.])
 fi
 
 ### If possible, use a 64-bit integer type for array dimensions and indexing.
 
 USE_64_BIT_IDX_T=false
 OCTAVE_IDX_TYPE=int
 AC_ARG_ENABLE(64,
-  [  --enable-64             use 64-bit integer for array dimensions and indexing],
+  [AS_HELP_STRING([--enable-64],
+     [use 64-bit integer for array dimensions and indexing])],
   [if test "$enableval" = yes; then USE_64_BIT_IDX_T=true; fi], [])
 if $USE_64_BIT_IDX_T; then
   AC_CHECK_SIZEOF(void *)
   AC_CHECK_SIZEOF(int)
   AC_CHECK_SIZEOF(long)
   if test $ac_cv_sizeof_void_p -eq 8; then
     if test $ac_cv_sizeof_int -eq 8; then
       OCTAVE_IDX_TYPE=int
@@ -188,17 +170,17 @@ if $USE_64_BIT_IDX_T; then
   AC_DEFINE(USE_64_BIT_IDX_T, 1, [Define if using 64-bit integers for array dimensions and indexing])
 fi
 AC_SUBST(USE_64_BIT_IDX_T)
 
 ### It seems that there are some broken inline assembly functions in
 ### the GNU libc.  Since I'm not sure how to test whether we are using
 ### GNU libc, just disable them for all platforms.
 
-AC_MSG_RESULT([defining __NO_MATH_INLINES avoids buggy GNU libc exp function])
+AC_MSG_NOTICE([defining __NO_MATH_INLINES avoids buggy GNU libc exp function])
 AC_DEFINE(__NO_MATH_INLINES, 1, [Define if your version of GNU libc has buggy inline assembly code for math functions like exp.])
 
 ### See which C++ compiler to use (we expect to find g++).
 
 AC_PROG_CXX
 AC_PROG_CXXCPP
 
 ### Do special things for g++.
@@ -240,17 +222,17 @@ AC_PROG_GCC_TRADITIONAL
 ### Do special things for gcc.
 
 gcc_version=`$CC -v 2>&1 | grep "^.*gcc version" | \
   sed -e 's/^.*g.. version *//' -e 's/cygnus-//' -e 's/egcs-//'`
 case "$gcc_version" in
   2.*)
     if test -z "$LDFLAGS"; then
       LDFLAGS="-g"
-      AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
+      AC_MSG_NOTICE([defining LDFLAGS to be $LDFLAGS])
     fi
   ;;
   1.*)
     warn_gcc_version="gcc version $gcc_version is likely to cause problems"
     AC_MSG_WARN($warn_gcc_version)
   ;;
 esac
 
@@ -285,57 +267,57 @@ AC_SUBST(DEPEND_EXTRA_SED_PATTERN)
 
 ieee_fp_flag=
 case "$canonical_host_type" in
   i[[3456789]]86-*-*)
     if test "$GCC" = yes; then
       OCTAVE_CC_FLAG(-mieee-fp, [
         ieee_fp_flag=-mieee-fp
         XTRA_CFLAGS="$XTRA_CFLAGS -mieee-fp"
-        AC_MSG_RESULT([adding -mieee-fp to XTRA_CFLAGS])])
+        AC_MSG_NOTICE([adding -mieee-fp to XTRA_CFLAGS])])
 
 ###      OCTAVE_CC_FLAG(-ffloat-store, [
 ###        float_store_flag=-ffloat-store
 ###        XTRA_CFLAGS="$XTRA_CFLAGS -ffloat-store"
 ###        AC_MSG_RESULT([adding -ffloat-store to XTRA_CFLAGS])])
     fi
     if test "$GXX" = yes; then
       OCTAVE_CXX_FLAG(-mieee-fp, [
 	ieee_fp_flag=-mieee-fp
 	XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee-fp"
-	AC_MSG_RESULT([adding -mieee-fp to XTRA_CXXFLAGS])])
+	AC_MSG_NOTICE([adding -mieee-fp to XTRA_CXXFLAGS])])
 
 ###      OCTAVE_CXX_FLAG(-ffloat-store, [
 ###        float_store_flag=-ffloat-store
 ###        XTRA_CXXFLAGS="$XTRA_CXXFLAGS -ffloat-store"
 ###        AC_MSG_RESULT([adding -ffloat-store to XTRA_CXXFLAGS])])
     fi
   ;;
   alpha*-*-*)
     if test "$GCC" = yes; then
       OCTAVE_CC_FLAG(-mieee, [
 	ieee_fp_flag=-mieee
 	XTRA_CFLAGS="$XTRA_CFLAGS -mieee"
-	AC_MSG_RESULT([adding -mieee to XTRA_CFLAGS])])
+	AC_MSG_NOTICE([adding -mieee to XTRA_CFLAGS])])
     else
       OCTAVE_CC_FLAG(-ieee, [
 	ieee_fp_flag=-ieee
 	XTRA_CFLAGS="$XTRA_CFLAGS -ieee"
-	AC_MSG_RESULT([adding -ieee to XTRA_CFLAGS])])
+	AC_MSG_NOTICE([adding -ieee to XTRA_CFLAGS])])
     fi
     if test "$GXX" = yes; then
       OCTAVE_CXX_FLAG(-mieee, [
 	ieee_fp_flag=-mieee
 	XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mieee"
-	AC_MSG_RESULT([adding -mieee to XTRA_CXXFLAGS])])
+	AC_MSG_NOTICE([adding -mieee to XTRA_CXXFLAGS])])
     else
       OCTAVE_CXX_FLAG(-ieee, [
 	ieee_fp_flag=-ieee
 	XTRA_CXXFLAGS="$XTRA_CXXFLAGS -ieee"
-	AC_MSG_RESULT([adding -ieee to XTRA_CXXFLAGS])])
+	AC_MSG_NOTICE([adding -ieee to XTRA_CXXFLAGS])])
     fi
   ;;
   *ibm-aix4*)
     OCTAVE_CC_FLAG(-mminimal-toc, [
       XTRA_CFLAGS="$XTRA_CFLAGS -mminimal-toc"])
 
     OCTAVE_CXX_FLAG(-mminimal-toc, [
       XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mminimal-toc"])
@@ -348,17 +330,17 @@ AC_SUBST(XTRA_CXXFLAGS)
 ### Use -static if compiling on Alpha OSF/1 1.3 systems.
 
 case "$canonical_host_type" in
   alpha*-dec-osf1.3)
     LD_STATIC_FLAG=-static
   ;;
 esac
 if test -n "$LD_STATIC_FLAG"; then
-  AC_MSG_RESULT([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
+  AC_MSG_NOTICE([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(LD_STATIC_FLAG)
 
 OCTAVE_CXX_PREPENDS_UNDERSCORE
 
 ### Defaults for cross compiling.  BUILD_CC and BUILD_CXX are
 ### the compilers that we use for building tools on the build system.
 ### For now, we assume that the only cross compiling we can do is
@@ -441,17 +423,17 @@ if test $WITH_REGEX = yes ; then
       AC_CHECK_LIB(regex, regexec, REGEX_LIBS="-lregex")])
   fi
 fi
 
 ### Check for ZLIB library.
 
 WITH_ZLIB=true
 AC_ARG_WITH(zlib,
-  [  --without-zlib          don't use zlib],
+  [AS_HELP_STRING([--without-zlib], [don't use zlib])],
   with_zlib=$withval, with_zlib=yes)
 
 zlib_lib=
 if test "$with_zlib" = yes; then
   zlib_lib="z"
 elif test "$with_zlib" != no; then
   zlib_lib="$with_zlib"
 fi
@@ -467,17 +449,17 @@ if test -n "$zlib_lib"; then
         AC_DEFINE(HAVE_ZLIB, 1, [Define if ZLIB is available.])])])
 fi
 
 if $WITH_ZLIB; then
   ### Check for HDF5 library.
 
   WITH_HDF5=true
   AC_ARG_WITH(hdf5,
-    [  --without-hdf5          don't use HDF5],
+    [AS_HELP_STRING([--without-hdf5], [don't use HDF5])],
     with_hdf5=$withval, with_hdf5=yes)
 
   hdf5_lib=
   if test "$with_hdf5" = yes; then
     hdf5_lib="hdf5"
   elif test "$with_hdf5" != no; then
     hdf5_lib="$with_hdf5"
   fi
@@ -511,17 +493,18 @@ fi
 FFT_DIR="fftpack"
 AC_SUBST(FFT_DIR)
 
 # Installed fftw library, if any.
 FFTW_LIBS=''
 AC_SUBST(FFTW_LIBS)
 
 AC_ARG_WITH(fftw, 
-  [  --without-fftw          use included fftpack instead of installed fftw],
+  [AS_HELP_STRING([--without-fftw],
+     [use included fftpack instead of installed fftw])],
   with_fftw=$withval, with_fftw=yes)
 
 if test "$with_fftw" = yes; then
   have_fftw3_header=no
   with_fftw3=no
   AC_CHECK_HEADER(fftw3.h, [have_fftw3_header=yes; break])
   if test "$have_fftw3_header" = yes; then
     AC_CHECK_LIB(fftw3, fftw_plan_dft_1d, [FFTW_LIBS="-lfftw3"; with_fftw3=yes])
@@ -531,17 +514,17 @@ fi
 if test "$with_fftw" = yes && test "$with_fftw3" = yes; then
   FFT_DIR=''
   AC_DEFINE(HAVE_FFTW3, 1, [Define if the FFTW3 library is used.])
 fi
 
 # Checks for GLPK header and library.
 
 AC_ARG_WITH(glpk,
-  [  --without-glpk          don't use GLPK],
+  [AS_HELP_STRING([--without-glpk], [don't use GLPK])],
   with_glpk=$withval, with_glpk=yes)
 
 glpk_lib=
 if test "$with_glpk" = yes; then
   glpk_lib="glpk"
 elif test "$with_glpk" != no; then
   glpk_lib="$with_glpk"
 fi
@@ -575,25 +558,25 @@ AC_PROG_RANLIB
 ### `--with-f77=g77' says that we are using g77 as the Fortran compiler.
 
 if $use_f77; then
   if test "$with_f77" = yes; then
     F77=f77
   else
     F77="$with_f77"
   fi
-  AC_MSG_RESULT([defining F77 to be $F77])
+  AC_MSG_NOTICE([defining F77 to be $F77])
 elif $use_f2c; then
   F77=
   if test "$with_f2c" = yes; then
     F2C=f2c
   else
     F2C="$with_f2c"
   fi
-  AC_MSG_RESULT([defining F2C to be $F2C])
+  AC_MSG_NOTICE([defining F2C to be $F2C])
 fi
 
 if test "x$FFLAGS" = x; then
   FFLAGS="-O" # override -g -O default by AC_PROG_F77
 fi
 
 # the F77 variable, if set, overrides AC_PROG_F77 automatically
 AC_PROG_F77
@@ -623,17 +606,17 @@ else
 	  OCTAVE_F77_FLAG(-fpe1)
 	fi
       ;;
       powerpc-apple-machten*)
 	FFLAGS=
       ;;
     esac
     if test -n "$FFLAGS"; then
-      AC_MSG_RESULT([defining FFLAGS to be $FFLAGS])
+      AC_MSG_NOTICE([defining FFLAGS to be $FFLAGS])
     fi
     have_fortran_compiler=true
   else
     AC_CHECK_PROG(F2C, f2c, f2c, [])
     AC_ARG_VAR(F2C, [Fortran to C translator command])
     AC_ARG_VAR(F2CFLAGS, [Fortran to C translator flags])
     if test -n "$F2C"; then
       have_f2c=true
@@ -727,17 +710,18 @@ AC_SUBST(AMD_LIBS)
 AC_CHECK_LIB(amd, amd_postorder, [AMD_LIBS="-lamd"; with_amd=yes],[with_amd=no])
 
 # Check for UMFPACK library.
 
 UMFPACK_LIBS=
 AC_SUBST(UMFPACK_LIBS)
 
 AC_ARG_WITH(umfpack,
-  [  --without-umfpack       don't use UMFPACK, disable some sparse functionality],
+  [AS_HELP_STRING([--without-umfpack],
+     [don't use UMFPACK, disable some sparse functionality])],
   with_umfpack=$withval, with_umfpack=yes)
 
 warn_umfpack="UMFPACK not found.  This will result in some lack of functionality for sparse matrices."
 if test "$with_umfpack" = yes && test "$with_amd" = yes; then
   with_umfpack=no
   AC_CHECK_HEADERS([ufsparse/umfpack.h umfpack/umfpack.h umfpack.h], [
     AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
       UMFPACK_LIBS="-lumfpack"; with_umfpack=yes], [
@@ -764,17 +748,18 @@ if test "$with_umfpack" = yes && test "$
 fi
 
 AC_SUBST(TEXINFO_UMFPACK)
 
 COLAMD_LIBS=
 AC_SUBST(COLAMD_LIBS)
 
 AC_ARG_WITH(colamd,
-  [  --without-colamd        don't use COLAMD, disable some sparse functionality],
+  [AS_HELP_STRING([--without-colamd],
+     [don't use COLAMD, disable some sparse functionality])],
   with_colamd=$withval, with_colamd=yes)
 
 warn_colamd="COLAMD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_colamd" = yes; then
   with_colamd=no
   AC_CHECK_HEADERS([ufsparse/colamd.h colamd/colamd.h colamd.h], [
     AC_CHECK_LIB(colamd, colamd, [COLAMD_LIBS="-lcolamd"; with_colamd=yes])
     if test "$with_colamd" = yes; then
@@ -786,17 +771,18 @@ if test "$with_colamd" = yes; then
 fi 
 
 AC_SUBST(TEXINFO_COLAMD)
 
 CCOLAMD_LIBS=
 AC_SUBST(CCOLAMD_LIBS)
 
 AC_ARG_WITH(ccolamd,
-  [  --without-ccolamd       don't use CCOLAMD, disable some sparse functionality],
+  [AS_HELP_STRING([--without-ccolamd],
+     [don't use CCOLAMD, disable some sparse functionality])],
   with_ccolamd=$withval, with_ccolamd=yes)
 
 warn_ccolamd="CCOLAMD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_ccolamd" = yes; then
   with_ccolamd=no
   AC_CHECK_HEADERS([ufsparse/ccolamd.h ccolamd/ccolamd.h ccolamd.h], [
     AC_CHECK_LIB(ccolamd, ccolamd, [CCOLAMD_LIBS="-lccolamd"; with_ccolamd=yes])
     if test "$with_ccolamd" = yes; then
@@ -805,17 +791,18 @@ if test "$with_ccolamd" = yes; then
     fi
     break])
 fi 
 
 CHOLMOD_LIBS=
 AC_SUBST(CHOLMOD_LIBS)
 
 AC_ARG_WITH(cholmod,
-  [  --without-cholmod       don't use CHOLMOD, disable some sparse functionality],
+  [AS_HELP_STRING([--without-cholmod],
+     [don't use CHOLMOD, disable some sparse functionality])],
   with_cholmod=$withval, with_cholmod=yes)
 
 warn_cholmod="CHOLMOD not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_cholmod" = yes && test "$with_colamd" = yes &&
 	test "$with_ccolamd" = yes && test "$with_amd" = yes; then
   with_cholmod=no
   AC_CHECK_HEADERS([ufsparse/cholmod.h cholmod/cholmod.h cholmod.h], [
     AC_CHECK_HEADERS([ufsparse/metis.h metis/metis.h metis.h], [
@@ -849,17 +836,18 @@ if test "$with_cholmod" = yes && test "$
 fi 
 
 AC_SUBST(TEXINFO_CHOLMOD)
 
 CXSPARSE_LIBS=
 AC_SUBST(CXSPARSE_LIBS)
 
 AC_ARG_WITH(cxsparse,
-  [  --without-cxsparse       don't use CXSparse, disable some sparse functionality],
+  [AS_HELP_STRING([--without-cxsparse],
+     [don't use CXSparse, disable some sparse functionality])],
   with_cxsparse=$withval, with_cxsparse=yes)
 
 warn_cxsparse="CXSparse not found. This will result in some lack of functionality for sparse matrices."
 if test "$with_cxsparse" = yes; then
   with_cxsparse=no
   AC_CHECK_HEADERS([ufsparse/cs.h cxsparse/cs.h cs.h], [
     AC_CHECK_LIB(cxsparse, cs_di_sqr, [CXSPARSE_LIBS="-lcxsparse"; with_cxsparse=yes])
     if test "$with_cxsparse" = yes; then
@@ -869,52 +857,54 @@ if test "$with_cxsparse" = yes; then
     break])
 fi
 
 ### Handle shared library options.
 
 ### Enable creation of static libraries.
 
 AC_ARG_ENABLE(static,
-  [  --enable-static         create static libraries],
+  [AS_HELP_STRING([--enable-static], [create static libraries])],
   [if test "$enableval" = no; then STATIC_LIBS=false;
    else STATIC_LIBS=true; fi],
   STATIC_LIBS=false)
 AC_SUBST(STATIC_LIBS)
 
 ### Enable creation of shared libraries.  Currently only works with
 ### gcc on some systems.
 
 AC_ARG_ENABLE(shared,
-  [  --enable-shared         create shared libraries (not all systems)],
+  [AS_HELP_STRING([--enable-shared],
+     [create shared libraries (not all systems)])],
   [if test "$enableval" = no; then SHARED_LIBS=false;
    else SHARED_LIBS=true; fi],
   SHARED_LIBS=true)
 AC_SUBST(SHARED_LIBS)
 
 ### Enable dynamic linking.  --enable-shared implies this, so
 ### --enable-dl is only need if you are only building static libraries
 ### and want to try dynamic linking too (works on some systems, for
 ### example, OS X and Windows).
 
 AC_ARG_ENABLE(dl,
-  [  --enable-dl             create shared libraries (not all systems)],
+  [AS_HELP_STRING([--enable-dl],
+     [create shared libraries (not all systems)])],
   [if test "$enableval" = no; then ENABLE_DYNAMIC_LINKING=false;
    else ENABLE_DYNAMIC_LINKING=true; fi],
   ENABLE_DYNAMIC_LINKING=true)
 
 if $STATIC_LIBS || $SHARED_LIBS; then
   true
 else
   AC_MSG_ERROR([You can't disable building static AND shared libraries!])
 fi
 
 AC_ARG_ENABLE(rpath,
-  [  --enable-rpath          override the default link options for rpath;
-                            e.g., --enable-rpath='-rpath $(octlibdir)'],
+  [AS_HELP_STRING([--enable-rpath],
+     [override the default link options for rpath; e.g., --enable-rpath='-rpath $(octlibdir)'])],
   [ if test "$enableval" = no; then use_rpath=false;
     else
       use_rpath=true
       if test "$enableval" = yes; then true;
       else enable_rpath_arg="$enableval"; fi
     fi], [use_rpath=true])
 
 DLFCN_DIR=
@@ -1058,38 +1048,38 @@ esac
 if $use_rpath; then
   if test -n "$enable_rpath_arg"; then
     RLD_FLAG="$enable_rpath_arg"
   fi
 else
   RLD_FLAG=""
 fi
 
-AC_MSG_RESULT([defining FPICFLAG to be $FPICFLAG])
-AC_MSG_RESULT([defining CPICFLAG to be $CPICFLAG])
-AC_MSG_RESULT([defining CXXPICFLAG to be $CXXPICFLAG])
-AC_MSG_RESULT([defining SHLEXT to be $SHLEXT])
-AC_MSG_RESULT([defining SHLLIB to be $SHLLIB])
-AC_MSG_RESULT([defining SHLBIN to be $SHLBIN])
-AC_MSG_RESULT([defining SHLEXT_VER to be $SHLEXT_VER])
-AC_MSG_RESULT([defining SHLLIB_VER to be $SHLLIB_VER])
-AC_MSG_RESULT([defining SHLBIN_VER to be $SHLBIN_VER])
-AC_MSG_RESULT([defining SHLLINKEXT to be $SHLLINKEXT])
-AC_MSG_RESULT([defining DLFCN_DIR to be $DLFCN_DIR])
-AC_MSG_RESULT([defining SH_LD to be $SH_LD])
-AC_MSG_RESULT([defining SH_LDFLAGS to be $SH_LDFLAGS])
-AC_MSG_RESULT([defining DL_LD to be $DL_LD])
-AC_MSG_RESULT([defining DL_LDFLAGS to be $DL_LDFLAGS])
-AC_MSG_RESULT([defining MKOCTFILE_DL_LDFLAGS to be $MKOCTFILE_DL_LDFLAGS])
-AC_MSG_RESULT([defining SONAME_FLAGS to be $SONAME_FLAGS])
-AC_MSG_RESULT([defining NO_OCT_FILE_STRIP to be $NO_OCT_FILE_STRIP])
-AC_MSG_RESULT([defining RLD_FLAG to be $RLD_FLAG])
-AC_MSG_RESULT([defining TEMPLATE_AR to be $TEMPLATE_AR])
-AC_MSG_RESULT([defining TEMPLATE_ARFLAGS to be $TEMPLATE_ARFLAGS])
-AC_MSG_RESULT([defining library_path_var to be $library_path_var])
+AC_MSG_NOTICE([defining FPICFLAG to be $FPICFLAG])
+AC_MSG_NOTICE([defining CPICFLAG to be $CPICFLAG])
+AC_MSG_NOTICE([defining CXXPICFLAG to be $CXXPICFLAG])
+AC_MSG_NOTICE([defining SHLEXT to be $SHLEXT])
+AC_MSG_NOTICE([defining SHLLIB to be $SHLLIB])
+AC_MSG_NOTICE([defining SHLBIN to be $SHLBIN])
+AC_MSG_NOTICE([defining SHLEXT_VER to be $SHLEXT_VER])
+AC_MSG_NOTICE([defining SHLLIB_VER to be $SHLLIB_VER])
+AC_MSG_NOTICE([defining SHLBIN_VER to be $SHLBIN_VER])
+AC_MSG_NOTICE([defining SHLLINKEXT to be $SHLLINKEXT])
+AC_MSG_NOTICE([defining DLFCN_DIR to be $DLFCN_DIR])
+AC_MSG_NOTICE([defining SH_LD to be $SH_LD])
+AC_MSG_NOTICE([defining SH_LDFLAGS to be $SH_LDFLAGS])
+AC_MSG_NOTICE([defining DL_LD to be $DL_LD])
+AC_MSG_NOTICE([defining DL_LDFLAGS to be $DL_LDFLAGS])
+AC_MSG_NOTICE([defining MKOCTFILE_DL_LDFLAGS to be $MKOCTFILE_DL_LDFLAGS])
+AC_MSG_NOTICE([defining SONAME_FLAGS to be $SONAME_FLAGS])
+AC_MSG_NOTICE([defining NO_OCT_FILE_STRIP to be $NO_OCT_FILE_STRIP])
+AC_MSG_NOTICE([defining RLD_FLAG to be $RLD_FLAG])
+AC_MSG_NOTICE([defining TEMPLATE_AR to be $TEMPLATE_AR])
+AC_MSG_NOTICE([defining TEMPLATE_ARFLAGS to be $TEMPLATE_ARFLAGS])
+AC_MSG_NOTICE([defining library_path_var to be $library_path_var])
 AC_SUBST(FPICFLAG)
 AC_SUBST(CPICFLAG)
 AC_SUBST(CXXPICFLAG)
 AC_SUBST(SHLEXT)
 AC_SUBST(SHLLIB)
 AC_SUBST(SHLBIN)
 AC_SUBST(SHLEXT_VER)
 AC_SUBST(SHLLIB_VER)
@@ -1230,18 +1220,18 @@ fi
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill link localtime_r \
   lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise \
   readlink rename resolvepath rindex rmdir round select setgrent \
   setpwent setvbuf sigaction siglongjmp sigpending sigprocmask \
   sigsuspend stat strcasecmp strdup strerror strftime stricmp \
-  strncasecmp strnicmp strptime symlink tempnam umask uname unlink \
-  usleep vfprintf vsprintf vsnprintf waitpid)
+  strncasecmp strnicmp strptime strsignal symlink tempnam umask \
+  uname unlink usleep vfprintf vsprintf vsnprintf waitpid)
 
 OCTAVE_SMART_PUTENV
 
 ### Dynamic linking is now enabled only if we are building shared
 ### libs and some API for dynamic linking is detected.
 
 LD_CXX='$(CXX)'
 LIBDLFCN=
@@ -1345,26 +1335,26 @@ AC_SUBST(LIBOCTINTERP)
 AC_SUBST(LIBOCTAVE)
 AC_SUBST(LIBCRUFT)
 
 ### There is more than one possible prototype for gettimeofday.  See
 ### which one (if any) appears in sys/time.h.  These tests are from
 ### Emacs 19.
 
 AC_MSG_CHECKING(for struct timeval)
-AC_TRY_COMPILE([#ifdef TIME_WITH_SYS_TIME
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef TIME_WITH_SYS_TIME
 #include <sys/time.h>
 #include <time.h>
 #else
 #ifdef HAVE_SYS_TIME_H
 #include <sys/time.h>
 #else
 #include <time.h>
 #endif
-#endif], [static struct timeval x; x.tv_sec = x.tv_usec;],
+#endif]], [[static struct timeval x; x.tv_sec = x.tv_usec;]])],
   [AC_MSG_RESULT(yes)
    HAVE_TIMEVAL=yes
    AC_DEFINE(HAVE_TIMEVAL, 1, [Define if struct timeval is defined.])],
   [AC_MSG_RESULT(no)
    HAVE_TIMEVAL=no])
 
 if test "x$HAVE_TIMEVAL" = xyes; then
 AC_MSG_CHECKING(whether gettimeofday can't accept two arguments)
@@ -1400,21 +1390,21 @@ dnl with an argument.
 ### I am told that Inf and NaN don't work on m68k HP sytems, and that
 ### on SCO systems, isnan and isinf don't work, but they can be
 ### replaced by something that does.
 
 case "$canonical_host_type" in
   m68k-hp-hpux*)
   ;;
   *-*-sco*)
-    AC_MSG_RESULT([defining SCO to be 1])
+    AC_MSG_NOTICE([defining SCO to be 1])
     AC_DEFINE(SCO, 1, [Define if using an SCO system.])
-    AC_MSG_RESULT([forcing HAVE_ISINF for SCO])
+    AC_MSG_NOTICE([forcing HAVE_ISINF for SCO])
     AC_DEFINE(HAVE_ISINF, 1, [Define if you have isinf().])
-    AC_MSG_RESULT([forcing HAVE_ISNAN for SCO])
+    AC_MSG_NOTICE([forcing HAVE_ISNAN for SCO])
     AC_DEFINE(HAVE_ISNAN, 1, [Define if you have isnan().])
   ;;
   *)
     AC_CHECK_FUNCS(finite isnan isinf copysign signbit)
     AC_CHECK_DECLS(signbit, , , [#include <math.h>])
   ;;
 esac
 
@@ -1462,26 +1452,23 @@ AC_LINK_IFELSE([AC_LANG_PROGRAM([[#inclu
   [AC_MSG_RESULT(yes)
    AC_DEFINE(EXCEPTION_IN_MATH, 1,
      [Define if your math.h declares struct exception for matherr().])],
   [AC_MSG_RESULT(no)])
 
 ### Signal stuff.
 
 AC_TYPE_SIGNAL
-AC_CHECK_DECL([sys_siglist],
-  [AC_DEFINE(SYS_SIGLIST_DECLARED, 1, [Define if your system has a declaration of sys_siglist.])],
-  [AC_CHECK_DECLS([sys_siglist])], [#include <signal.h>])
-AC_MSG_CHECKING([for sys_siglist variable])
-AC_LINK_IFELSE([[#include <stdio.h>]],
-  [[extern char *sys_siglist[]; printf ("%s\n", sys_siglist[1]);]])],
-  [AC_MSG_RESULT(yes)
-   AC_DEFINE(HAVE_SYS_SIGLIST, 1,
-     [Define if your system has a sys_siglist variable.])],
-  [AC_MSG_RESULT(no)])
+AC_CHECK_DECLS([sys_siglist], [], [],
+[#include <signal.h>
+/* NetBSD declares sys_siglist in unistd.h.  */
+#if HAVE_UNISTD_H
+# include <unistd.h>
+#endif
+])
 OCTAVE_SIGNAL_CHECK
 OCTAVE_REINSTALL_SIGHANDLERS
 
 ### A system dependent kluge or two.
 
 AC_CHECK_FUNCS(getrusage times)
 case "$canonical_host_type" in
   *-*-cygwin*)
@@ -1553,17 +1540,17 @@ dnl
 case "$canonical_host_type" in
   *-*-darwin*)
     UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",g'`
   ;;
   *)
     UGLY_DEFS=`echo $DEFS | sed 's,\\",\\\\\\\\\\\\\\\\\\",g'`
   ;;
 esac
-AC_MSG_RESULT([defining UGLY_DEFS to be $UGLY_DEFS])
+AC_MSG_NOTICE([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)
 
 ### Maybe add -Wall, -W, and -Wshadow to compiler flags now that we're
 ### done feature testing. 
 
 if test -z "$EXTERN_CFLAGS"; then
   OCTAVE_CC_FLAG(-Wall, [
 	WARN_CFLAGS="$WARN_CFLAGS -Wall";
@@ -1593,17 +1580,18 @@ fi
 
 GCC_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wmissing-prototypes \
   -Wpointer-arith -Wstrict-prototypes -Wwrite-strings"
 
 GXX_PICKY_FLAGS="-Wcast-align -Wcast-qual -Wpointer-arith \
   -Wwrite-strings -Weffc++ -Wenum-clash"
 
 AC_ARG_ENABLE(picky-flags,
-  [  --enable-picky-flags    add picky options to CFLAGS, CXXFLAGS, FFLAGS],
+  [AS_HELP_STRING([--enable-picky-flags],
+     [add extra warning options to CFLAGS, CXXFLAGS, FFLAGS])],
   [if test "$enableval" = no; then
      true
    elif test "$enableval" = yes; then
      if test -z "$EXTERN_CFLAGS"; then
        for flag in $GCC_PICKY_FLAGS; do
 	 OCTAVE_CC_FLAG($flag, [
 	   WARN_CFLAGS="$WARN_CFLAGS $flag";
 	   AC_MSG_RESULT([adding $flag to WARN_CFLAGS])])
@@ -1624,20 +1612,16 @@ AC_SUBST(WARN_CXXFLAGS)
 ### Run configure in subdirectories.
 
 export CC
 export CXX
 export F77
 
 AC_CONFIG_SUBDIRS(scripts)
 
-if test "x$PLPLOT_DIR" = xplplot; then
-  AC_CONFIG_SUBDIRS(plplot)
-fi
-
 ### Some things to add to the bottom of config.h.
 
 AH_BOTTOM([
 #if defined (__GNUC__)
 #define GCC_ATTR_DEPRECATED __attribute__ ((__deprecated__))
 #define GCC_ATTR_NORETURN __attribute__ ((__noreturn__))
 #define GCC_ATTR_UNUSED __attribute__ ((__unused__))
 #else
@@ -1766,17 +1750,17 @@ AC_CONFIG_COMMANDS([default-1],[[chmod +
 ### Print a summary so that important information isn't missed.
 
 if test -z "$F77"; then
   FORT="$F2C $F2CFLAGS"
 else
   FORT="$F77 $FFLAGS"
 fi
 
-AC_MSG_RESULT([
+AC_MSG_NOTICE([
 
 Octave is now configured for $canonical_host_type
 
   Source directory:     $srcdir
   Installation prefix:  $prefix
   C compiler:           $CC $XTRA_CFLAGS $WARN_CFLAGS $CFLAGS
   C++ compiler:         $CXX $XTRA_CXXFLAGS $WARN_CXXFLAGS $CXXFLAGS
   Fortran compiler:     $FORT
@@ -1923,12 +1907,12 @@ if test -n "$warn_gnuplot"; then
   AC_MSG_WARN([])
   AC_MSG_WARN([gnuplot_binary = "/full/path/to/gnuplot/binary"])
   AC_MSG_WARN([])
   AC_MSG_WARN([at the Octave prompt.])
   warn_msg_printed=true
 fi
 
 if $warn_msg_printed; then
-  AC_MSG_RESULT([])
+  AC_MSG_NOTICE([])
 fi
 
 ### End of configure.
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -31,18 +31,17 @@ DISTFILES = $(CONF_DISTFILES) \
 	THANKS move-if-change octave-sh octave-bug.in \
 	octave-config.in mk-opts.pl mkinstalldirs \
 	mkoctfile.in run-octave.in gdbinit.in ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
 DISTDIRS = # plplot
 
 # Subdirectories in which to run `make all'.
-SUBDIRS = @PLPLOT_DIR@ @DLFCN_DIR@ \
-	libcruft liboctave src scripts doc examples
+SUBDIRS = @DLFCN_DIR@ libcruft liboctave src scripts doc examples
 
 # Subdirectories in which to run `make all'.
 INSTALL_SUBDIRS = libcruft liboctave src scripts doc examples
 
 # Subdirectories in which to run `make conf-dist'.
 CONF_DISTSUBDIRS = src
 
 # Subdirectories in which to run `make dist'.
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2006-06-06  John W. Eaton  <jwe@octave.org>
+
+	* sighandlers.cc (generic_sig_handler, sigint_handler):
+	Use strsignal instead of accessing sys_siglist directly.
+	* siglist.h: Use HAVE_DECL_SYS_SIGLIST instead of SYS_SIGLIST_DECLARED.
+	* siglist.c: Update sys_siglist.
+	(init_signals, strsignal): New functions.
+	* octave.cc (octave_main): Call init_signals here.
+
+	* toplev.cc (Foctave_config_info): Delete LIBPLPLOT from struct.
+
 2006-06-05  John W. Eaton  <jwe@octave.org>
 
 	* pt-assign.cc (Vprint_rhs_assign_val): Delete variable.
 	(Fprint_rhs_assign_val): Delete function.
 	tree_simple_assignment::rvalue, tree_multi_assignment::rvalue):
 	No special case for Vprint_rhs_assign_val.
 
 2006-06-02  John W. Eaton  <jwe@octave.org>
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -507,16 +507,18 @@ octave_main (int argc, char **argv, int 
 
   // The order of these calls is important.  The call to
   // install_defaults must come before install_builtins because
   // default variable values must be available for the variables to be
   // installed, and the call to install_builtins must come before the
   // options are processed because some command line options override
   // defaults by calling bind_internal_variable.
 
+  init_signals ();
+
   sysdep_init ();
 
   // The idea here is to force xerbla to be referenced so that we will
   // link to our own version instead of the one provided by the BLAS
   // library.  But octave_NaN should never be -1, so we should never
   // actually call xerbla.
 
   if (octave_NaN == -1)
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -216,17 +216,17 @@ octave_set_signal_handler (int sig, sig_
 #else
   return signal (sig, handler);
 #endif
 }
 
 static RETSIGTYPE
 generic_sig_handler (int sig)
 {
-  my_friendly_exit (sys_siglist[sig], sig);
+  my_friendly_exit (strsignal (sig), sig);
 
   SIGHANDLER_RETURN (0);
 }
 
 // Handle SIGCHLD.
 
 #ifdef SIGCHLD
 static RETSIGTYPE
@@ -405,21 +405,21 @@ static RETSIGTYPE
 sigint_handler (int sig)
 {
   MAYBE_ACK_SIGNAL (sig);
 
   MAYBE_REINSTALL_SIGHANDLER (sig, sigint_handler);
 
 #ifdef USE_W32_SIGINT
   if (w32_in_main_thread ())
-    user_abort (sys_siglist[sig], sig);
+    user_abort (strsignal (sig), sig);
   else
     w32_raise (sig);
 #else
-  user_abort (sys_siglist[sig], sig);
+  user_abort (strsignal (sig), sig);
 #endif
 
   SIGHANDLER_RETURN (0);
 }
 
 #ifdef SIGPIPE
 static RETSIGTYPE
 sigpipe_handler (int /* sig */)
diff --git a/src/siglist.c b/src/siglist.c
--- a/src/siglist.c
+++ b/src/siglist.c
@@ -24,123 +24,216 @@ 02110-1301, USA.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <signal.h>
 
 #include "siglist.h"
 
-#ifndef HAVE_SYS_SIGLIST
-char *sys_siglist[NSIG + 1] =
+/* The following is all borrowed from Emacs.  */
+
+#if ! (defined HAVE_STRSIGNAL || HAVE_DECL_SYS_SIGLIST)
+
+static char *my_sys_siglist[NSIG];
+
+#ifdef sys_siglist
+#undef sys_siglist
+#endif
+#define sys_siglist my_sys_siglist
+
+#endif
+
+void
+init_signals (void)
 {
-#ifdef AIX
-/* AIX has changed the signals a bit */
-  "bogus signal",			/* 0 */
-  "hangup",				/* 1  SIGHUP */
-  "interrupt",				/* 2  SIGINT */
-  "quit",				/* 3  SIGQUIT */
-  "illegal instruction",		/* 4  SIGILL */
-  "trace trap",				/* 5  SIGTRAP */
-  "IOT instruction",			/* 6  SIGIOT */
-  "crash likely",			/* 7  SIGDANGER */
-  "floating point exception",		/* 8  SIGFPE */
-  "kill",				/* 9  SIGKILL */
-  "bus error",				/* 10 SIGBUS */
-  "segmentation violation",		/* 11 SIGSEGV */
-  "bad argument to system call",	/* 12 SIGSYS */
-  "write on a pipe with no one to read it", /* 13 SIGPIPE */
-  "alarm clock",			/* 14 SIGALRM */
-  "software termination signum",	/* 15 SIGTERM */
-  "user defined signal 1",		/* 16 SIGUSR1 */
-  "user defined signal 2",		/* 17 SIGUSR2 */
-  "death of a child",			/* 18 SIGCLD */
-  "power-fail restart",			/* 19 SIGPWR */
-  "bogus signal",			/* 20 */
-  "bogus signal",			/* 21 */
-  "bogus signal",			/* 22 */
-  "bogus signal",			/* 23 */
-  "bogus signal",			/* 24 */
-  "LAN I/O interrupt",			/* 25 SIGAIO */
-  "PTY I/O interrupt",			/* 26 SIGPTY */
-  "I/O intervention required",		/* 27 SIGIOINT */
-  "HFT grant",				/* 28 SIGGRANT */
-  "HFT retract",			/* 29 SIGRETRACT */
-  "HFT sound done",			/* 30 SIGSOUND */
-  "HFT input ready",			/* 31 SIGMSG */
-#else /* not AIX */
-#ifdef __EMX__
-  "bogus signal #0",                    /* 0 */
-  "hangup",                             /* 1  SIGHUP */
-  "interrupt (Ctrl-C)",                 /* 2  SIGINT (Ctrl-C) */
-  "quit",                               /* 3  SIGQUIT */
-  "illegal instruction",                /* 4  SIGILL */
-  "single step",                        /* 5  SIGTRAP */
-  "abort",                              /* 6  SIGABRT */
-  "EMT instruction",                    /* 7  SIGEMT */
-  "floating point exception",           /* 8  SIGFPE */
-  "kill",                               /* 9  SIGKILL */
-  "bus error",                          /* 10 SIGBUS */
-  "segmentation violation",             /* 11 SIGSEGV */
-  "bad argument to system call",        /* 12 SIGSYS */
-  "broken pipe",                        /* 13 SIGPIPE */
-  "alarm clock",                        /* 14 SIGALRM */
-  "software termination signum",        /* 15 SIGTERM */
-  "user defined signal 1",              /* 16 SIGUSR1 */
-  "user defined signal 2",              /* 17 SIGUSR2 */
-  "death of a child",                   /* 18 SIGCHLD */
-  "bogus signal #20",                   /* 19 */
-  "bogus signal #21",                   /* 20 */
-  "break (Ctrl-Break)",                 /* 21 SIGBREAK */
-#else /* not __EMX__ */
-  "bogus signal",			/* 0 */
-  "hangup",				/* 1  SIGHUP */
-  "interrupt",				/* 2  SIGINT */
-  "quit",				/* 3  SIGQUIT */
-  "illegal instruction",		/* 4  SIGILL */
-  "trace trap",				/* 5  SIGTRAP */
-  "IOT instruction",			/* 6  SIGIOT */
-  "EMT instruction",			/* 7  SIGEMT */
-  "floating point exception",		/* 8  SIGFPE */
-  "kill",				/* 9  SIGKILL */
-  "bus error",				/* 10 SIGBUS */
-  "segmentation violation",		/* 11 SIGSEGV */
-  "bad argument to system call",	/* 12 SIGSYS */
-  "write on a pipe with no one to read it", /* 13 SIGPIPE */
-  "alarm clock",			/* 14 SIGALRM */
-  "software termination signum",	/* 15 SIGTERM */
-  "user defined signal 1",		/* 16 SIGUSR1 */
-  "user defined signal 2",		/* 17 SIGUSR2 */
-  "death of a child",			/* 18 SIGCLD */
-  "power-fail restart",			/* 19 SIGPWR */
-#ifdef sun
-  "window size change",			    /* 20 SIGWINCH */
-  "urgent socket condition",		    /* 21 SIGURG */
-  "pollable event occured",		    /* 22 SIGPOLL */
-  "stop (cannot be caught or ignored)", /*  23 SIGSTOP */
-  "user stop requested from tty",	    /* 24 SIGTSTP */
-  "stopped process has been continued",	/* 25 SIGCONT */
-  "background tty read attempted",	    /* 26 SIGTTIN */
-  "background tty write attempted",    /* 27 SIGTTOU */
-  "virtual timer expired",		    /* 28 SIGVTALRM */
-  "profiling timer expired",		    /* 29 SIGPROF */
-  "exceeded cpu limit",			    /* 30 SIGXCPU */
-  "exceeded file size limit",		    /* 31 SIGXFSZ */
-  "process's lwps are blocked",	    /*  32 SIGWAITING */
-  "special signal used by thread library", /* 33 SIGLWP */
-#ifdef SIGFREEZE
-  "Special Signal Used By CPR",	    /* 34 SIGFREEZE */
+#if ! (defined HAVE_STRSIGNAL || HAVE_DECL_SYS_SIGLIST)
+
+  static int initialized = 0;
+
+  if (! initialized)
+    {
+      initialized = 1;
+
+# ifdef SIGABRT
+      sys_siglist[SIGABRT] = "Aborted";
+# endif
+# ifdef SIGAIO
+      sys_siglist[SIGAIO] = "LAN I/O interrupt";
+# endif
+# ifdef SIGALRM
+      sys_siglist[SIGALRM] = "Alarm clock";
+# endif
+# ifdef SIGBUS
+      sys_siglist[SIGBUS] = "Bus error";
+# endif
+# ifdef SIGCLD
+      sys_siglist[SIGCLD] = "Child status changed";
+# endif
+# ifdef SIGCHLD
+      sys_siglist[SIGCHLD] = "Child status changed";
+# endif
+# ifdef SIGCONT
+      sys_siglist[SIGCONT] = "Continued";
+# endif
+# ifdef SIGDANGER
+      sys_siglist[SIGDANGER] = "Swap space dangerously low";
+# endif
+# ifdef SIGDGNOTIFY
+      sys_siglist[SIGDGNOTIFY] = "Notification message in queue";
+# endif
+# ifdef SIGEMT
+      sys_siglist[SIGEMT] = "Emulation trap";
+# endif
+# ifdef SIGFPE
+      sys_siglist[SIGFPE] = "Arithmetic exception";
+# endif
+# ifdef SIGFREEZE
+      sys_siglist[SIGFREEZE] = "SIGFREEZE";
+# endif
+# ifdef SIGGRANT
+      sys_siglist[SIGGRANT] = "Monitor mode granted";
+# endif
+# ifdef SIGHUP
+      sys_siglist[SIGHUP] = "Hangup";
+# endif
+# ifdef SIGILL
+      sys_siglist[SIGILL] = "Illegal instruction";
+# endif
+# ifdef SIGINT
+      sys_siglist[SIGINT] = "Interrupt";
+# endif
+# ifdef SIGIO
+      sys_siglist[SIGIO] = "I/O possible";
+# endif
+# ifdef SIGIOINT
+      sys_siglist[SIGIOINT] = "I/O intervention required";
+# endif
+# ifdef SIGIOT
+      sys_siglist[SIGIOT] = "IOT trap";
+# endif
+# ifdef SIGKILL
+      sys_siglist[SIGKILL] = "Killed";
+# endif
+# ifdef SIGLOST
+      sys_siglist[SIGLOST] = "Resource lost";
+# endif
+# ifdef SIGLWP
+      sys_siglist[SIGLWP] = "SIGLWP";
+# endif
+# ifdef SIGMSG
+      sys_siglist[SIGMSG] = "Monitor mode data available";
+# endif
+# ifdef SIGPHONE
+      sys_siglist[SIGWIND] = "SIGPHONE";
+# endif
+# ifdef SIGPIPE
+      sys_siglist[SIGPIPE] = "Broken pipe";
+# endif
+# ifdef SIGPOLL
+      sys_siglist[SIGPOLL] = "Pollable event occurred";
+# endif
+# ifdef SIGPROF
+      sys_siglist[SIGPROF] = "Profiling timer expired";
+# endif
+# ifdef SIGPTY
+      sys_siglist[SIGPTY] = "PTY I/O interrupt";
+# endif
+# ifdef SIGPWR
+      sys_siglist[SIGPWR] = "Power-fail restart";
+# endif
+# ifdef SIGQUIT
+      sys_siglist[SIGQUIT] = "Quit";
+# endif
+# ifdef SIGRETRACT
+      sys_siglist[SIGRETRACT] = "Need to relinguish monitor mode";
+# endif
+# ifdef SIGSAK
+      sys_siglist[SIGSAK] = "Secure attention";
+# endif
+# ifdef SIGSEGV
+      sys_siglist[SIGSEGV] = "Segmentation violation";
+# endif
+# ifdef SIGSOUND
+      sys_siglist[SIGSOUND] = "Sound completed";
+# endif
+# ifdef SIGSTOP
+      sys_siglist[SIGSTOP] = "Stopped (signal)";
+# endif
+# ifdef SIGSTP
+      sys_siglist[SIGSTP] = "Stopped (user)";
+# endif
+# ifdef SIGSYS
+      sys_siglist[SIGSYS] = "Bad argument to system call";
+# endif
+# ifdef SIGTERM
+      sys_siglist[SIGTERM] = "Terminated";
+# endif
+# ifdef SIGTHAW
+      sys_siglist[SIGTHAW] = "SIGTHAW";
+# endif
+# ifdef SIGTRAP
+      sys_siglist[SIGTRAP] = "Trace/breakpoint trap";
+# endif
+# ifdef SIGTSTP
+      sys_siglist[SIGTSTP] = "Stopped (user)";
+# endif
+# ifdef SIGTTIN
+      sys_siglist[SIGTTIN] = "Stopped (tty input)";
+# endif
+# ifdef SIGTTOU
+      sys_siglist[SIGTTOU] = "Stopped (tty output)";
+# endif
+# ifdef SIGURG
+      sys_siglist[SIGURG] = "Urgent I/O condition";
+# endif
+# ifdef SIGUSR1
+      sys_siglist[SIGUSR1] = "User defined signal 1";
+# endif
+# ifdef SIGUSR2
+      sys_siglist[SIGUSR2] = "User defined signal 2";
+# endif
+# ifdef SIGVTALRM
+      sys_siglist[SIGVTALRM] = "Virtual timer expired";
+# endif
+# ifdef SIGWAITING
+      sys_siglist[SIGWAITING] = "Process's LWPs are blocked";
+# endif
+# ifdef SIGWINCH
+      sys_siglist[SIGWINCH] = "Window size changed";
+# endif
+# ifdef SIGWIND
+      sys_siglist[SIGWIND] = "SIGWIND";
+# endif
+# ifdef SIGXCPU
+      sys_siglist[SIGXCPU] = "CPU time limit exceeded";
+# endif
+# ifdef SIGXFSZ
+      sys_siglist[SIGXFSZ] = "File size limit exceeded";
+# endif
+    }
+
 #endif
-#ifdef SIGTHAW
-  "Special Signal Used By CPR",	    /* 35 SIGTHAW */
-#endif
-#endif /* sun */
-#endif /* __EMX__ */
-#endif /* AIX */
-  0
-  };
+}
+
+#if ! defined (HAVE_STRSIGNAL)
+
+char *
+strsignal (int code)
+{
+  char *signame = "";
+
+  if (0 <= code && code < NSIG)
+    {
+      /* Cast to suppress warning if the table has const char *.  */
+      signame = (char *) sys_siglist[code];
+    }
+
+  return signame;
+}
+
 #endif
 
 /*
 ;;; Local Variables: ***
-;;; mode: C++ ***
+;;; mode: C ***
 ;;; End: ***
 */
diff --git a/src/siglist.h b/src/siglist.h
--- a/src/siglist.h
+++ b/src/siglist.h
@@ -24,22 +24,28 @@ 02110-1301, USA.
 #if !defined (octave_siglist_h)
 #define octave_siglist_h 1
 
 #ifdef __cplusplus
 extern "C"
 {
 #endif
 
-/* This is taken directly from Emacs 19: */
+/* This is borrowed from Emacs.  */
 
-#ifndef SYS_SIGLIST_DECLARED
+#if ! defined (HAVE_DECL_SYS_SIGLIST)
 extern char *sys_siglist[];
 #endif
 
+extern void init_signals (void);
+
+#if ! defined (HAVE_STRSIGNAL)
+extern char *strsignal (int);
+#endif
+
 #ifdef __cplusplus
 }
 #endif
 
 #endif
 
 /*
 ;;; Local Variables: ***
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -752,17 +752,16 @@ specified option.\n\
       "LEXLIB", OCTAVE_CONF_LEXLIB,
       "LFLAGS", OCTAVE_CONF_LFLAGS,
       "LIBCRUFT", OCTAVE_CONF_LIBCRUFT,
       "LIBDLFCN", OCTAVE_CONF_LIBDLFCN,
       "LIBEXT", OCTAVE_CONF_LIBEXT,
       "LIBFLAGS", OCTAVE_CONF_LIBFLAGS,
       "LIBOCTAVE", OCTAVE_CONF_LIBOCTAVE,
       "LIBOCTINTERP", OCTAVE_CONF_LIBOCTINTERP,
-      "LIBPLPLOT", OCTAVE_CONF_LIBPLPLOT,
       "LIBREADLINE", OCTAVE_CONF_LIBREADLINE,
       "LIBS", OCTAVE_CONF_LIBS,
       "LN_S", OCTAVE_CONF_LN_S,
       "MKOCTFILE_DL_LDFLAGS", OCTAVE_CONF_MKOCTFILE_DL_LDFLAGS,
       "MKOCTFILE_INCFLAGS", OCTAVE_CONF_MKOCTFILE_INCFLAGS,
       "MKOCTFILE_LFLAGS", OCTAVE_CONF_MKOCTFILE_LFLAGS,
       "RANLIB", OCTAVE_CONF_RANLIB,
       "RDYNAMIC_FLAG", OCTAVE_CONF_RDYNAMIC_FLAG,
