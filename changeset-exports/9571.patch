# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1251313743 14400
#      Wed Aug 26 15:09:03 2009 -0400
# Node ID 263a8ed419b028203862e5651df60f1d9b931c12
# Parent  1ab56c73ec7c8da2eba18f0ac4e6a067038a4d55
configure.in: style fixes for messages

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -580,17 +580,17 @@ warn_freetype=""
 warn_ftgl=""
 
 OCTAVE_OPENGL
 if test -n "$OPENGL_LIBS"; then
   AC_DEFINE(HAVE_OPENGL, 1, [Define if OpenGL is available])
 
 ## ftgl (needs freetype 2)
   AC_CHECK_FT2([9.0.3],[AC_DEFINE(HAVE_FREETYPE, 1, [Define to 1 if you have Freetype library.])],
-    [warn_freetype="FreeType library not found. Native renderer will not have on-screen text"])
+    [warn_freetype="FreeType library not found.  Native renderer will not have on-screen text"])
   if test -z "$warn_freetype"; then
     AC_LANG_PUSH(C++)
       save_LIBS="$LIBS"
       save_CXXFLAGS="$CXXFLAGS"
       save_CPPFLAGS="$CPPFLAGS"
       LIBS="$LIBS $FT2_LIBS $OPENGL_LIBS"
       CXXFLAGS="$CXXFLAGS $FT2_CFLAGS"
       CPPFLAGS="$CPPFLAGS $FT2_CFLAGS"
@@ -622,40 +622,40 @@ if test -n "$OPENGL_LIBS"; then
 FTGLTextureFont font("");], [
           OPENGL_LIBS="-lftgl $FT2_LIBS $OPENGL_LIBS"
 	  LIBS="$save_LIBS"
 	  CPPFLAGS="$save_CPPFLAGS"
           AC_DEFINE(HAVE_FTGL, 1, [Define to 1 if FTGL is present])
 	  AC_MSG_RESULT(yes)
 	  XTRA_CXXFLAGS="$XTRA_CXXFLAGS $FT2_CFLAGS"], [
 	  AC_MSG_RESULT(no)
-          warn_ftgl="FTGL library not found. Native renderer will not have on-screen text"
+          warn_ftgl="FTGL library not found.  Native renderer will not have on-screen text"
         ])
 	LIBS="$save_LIBS"
 	CXXFLAGS="$save_CXXFLAGS"
 	CPPFLAGS="$save_CPPFLAGS"
       else
-        warn_ftgl="FTGL headers not found. Native renderer will not have on-screen text"
+        warn_ftgl="FTGL headers not found.  Native renderer will not have on-screen text"
       fi
     AC_LANG_POP(C++)
   fi
 fi
 
 # fontconfig library
 
 warn_fontconfig=""
 PKG_PROG_PKG_CONFIG
 if test -z "$warn_freetype"; then
   PKG_CHECK_MODULES(FONTCONFIG,[fontconfig],[
     have_fontconfig=yes
     OPENGL_LIBS="$FONTCONFIG_LIBS $OPENGL_LIBS"
     XTRA_CXXFLAGS="$XTRA_CXXFLAGS $FONTCONFIG_CFLAGS"
     AC_DEFINE(HAVE_FONTCONFIG, 1, [Define to 1 if fontconfig is present])],[
     have_fontconfig=no
-    warn_fontconfig="Fontconfig not found. Native text rendering will use hard-coded font instead."])
+    warn_fontconfig="Fontconfig not found.  Native text rendering will use hard-coded font instead."])
 fi
 
 GRAPHICS_LIBS=
 GRAPHICS_CFLAGS=
 
 ## fltk (www.fltk.org)
 AC_ARG_WITH(fltk-prefix,
         [  --with-fltk-prefix=PFX   Prefix where FLTK is installed (optional)],
@@ -813,70 +813,70 @@ if test "x$acx_blas_f77_func_ok" = "xno"
   AC_MSG_WARN($warn_blas_f77_incompatible)
 fi
 
 # Check for the qrupdate library
 
 save_LIBS="$LIBS"
 LIBS="$BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(qrupdate, qrupdate,
-  [qrupdate not found. The QR & Cholesky updating functions will be slow.],
+  [qrupdate not found.  The QR & Cholesky updating functions will be slow.],
   [],
   [F77_FUNC(sqr1up,SQR1UP)],
   [], [don't use qrupdate, disable QR & Cholesky updating functions])
 LIBS="$save_LIBS"
 
 # Check for AMD library
 
 OCTAVE_CHECK_LIBRARY(amd, AMD,
-  [AMD library not found. This will result in some lack of functionality for sparse matrices.],
+  [AMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/amd.h ufsparse/amd.h amd/amd.h amd.h],
   [amd_postorder],
   [], [don't use AMD library, disable some sparse functionality])
 
 # Check for CAMD library
 
 OCTAVE_CHECK_LIBRARY(camd, CAMD,
-  [CAMD library not found. This will result in some lack of functionality for sparse matrices.],
+  [CAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/camd.h ufsparse/camd.h amd/camd.h camd.h],
   [camd_postorder],
   [], [don't use CAMD library, disable some sparse functionality])
 
 # Check for COLAMD library
 
 OCTAVE_CHECK_LIBRARY(colamd, COLAMD,
-  [COLAMD library not found. This will result in some lack of functionality for sparse matrices.],
+  [COLAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/colamd.h ufsparse/colamd.h amd/colamd.h colamd.h],
   [colamd],
   [], [don't use COLAMD library, disable some sparse functionality])
 
 # Check for CCOLAMD library
 
 OCTAVE_CHECK_LIBRARY(ccolamd, CCOLAMD,
-  [CCOLAMD library not found. This will result in some lack of functionality for sparse matrices.],
+  [CCOLAMD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/ccolamd.h ufsparse/ccolamd.h amd/ccolamd.h ccolamd.h],
   [ccolamd],
   [], [don't use CCOLAMD library, disable some sparse functionality])
 
 # Check for CHOLMOD library.  If your cholmod library requires cblas,
 # then you will need to configure with --with-cholmod="-lcholmod -lcblas".
 
 save_LIBS="$LIBS"
 LIBS="$BLAS_LIBS $FLIBS $LIBS"
 OCTAVE_CHECK_LIBRARY(cholmod, CHOLMOD,
-  [CHOLMOD library not found. This will result in some lack of functionality for sparse matrices.],
+  [CHOLMOD library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/cholmod.h ufsparse/cholmod.h cholmod/cholmod.h cholmod.h],
   [cholmod_start],
   [], [don't use CHOLMOD library, disable some sparse functionality])
 LIBS="$save_LIBS"
 
 # Check for CXSparse library
 
 OCTAVE_CHECK_LIBRARY(cxsparse, CXSparse,
-  [CXSparse library not found. This will result in some lack of functionality for sparse matrices.],
+  [CXSparse library not found.  This will result in some lack of functionality for sparse matrices.],
   [suitesparse/cs.h ufsparse/cs.h amd/cs.h cs.h],
   [cs_di_sqr],
   [C++], [don't use CXSparse library, disable some sparse functionality])
 
 # Check for UMFPACK library.
 
 UMFPACK_LIBS=
 AC_SUBST(UMFPACK_LIBS)
