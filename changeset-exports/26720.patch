# HG changeset patch
# User Rik <rik@octave.org>
# Date 1549923774 28800
#      Mon Feb 11 14:22:54 2019 -0800
# Node ID 9a678e0de65885390aa236fe26d7ed099bf1569e
# Parent  91b152968ec1bbea9965188e5b7a9cd54b5b9dc7
Measure LineWidth in points, not pixels, for Matlab compatibility (bug #53056).

* gl-render.cc (opengl_renderer::set_linewidth): New const static variable
pts2pix which is screen pixels_per_inch / 72 points_per_inch.  Multiply input
LineWidth by conversion factor pts2pix to translate linewidth to pixels for
glLineWidth call.
* gl-render.cc (opengl_renderer::set_linestyle): New const static variable
pts2pix which is screen pixels_per_inch / 72 points_per_inch.  Multiply input
LineWidth by conversion factor pts2pix to translate linewidth to pixels.
* gl-render.cc (opengl_renderer::make_marker_list): New const static variable
pts2pix which is screen pixels_per_inch / 72 points_per_inch.  Multiply input
LineWidth by conversion factor pts2pix to translate linewidth to pixels.
Remove old conversion factor based on toolkit.get_screen_resolution() which
is incorrect.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -4268,18 +4268,25 @@ namespace octave
 
 #endif
   }
 
   void
   opengl_renderer::set_linewidth (float w)
   {
 #if defined (HAVE_OPENGL)
-
-    m_glfcns.glLineWidth (w * m_devpixratio);
+    // FIXME: See bug #53056 (measure LineWidth in points).
+    //        pts2pix and m_devpixratio should eventually be combined in to a
+    //        a single conversion factor so that only one multiplication per
+    //        function call is required.
+    const static double pts2pix =
+      gh_manager::get_object (0).get ("screenpixelsperinch").double_value ()
+      / 72.0;
+
+    m_glfcns.glLineWidth (w * pts2pix * m_devpixratio);
 
 #else
 
     octave_unused_parameter (w);
 
     // This shouldn't happen because construction of opengl_renderer
     // objects is supposed to be impossible if OpenGL is not available.
 
@@ -4289,17 +4296,21 @@ namespace octave
   }
 
   void
   opengl_renderer::set_linestyle (const std::string& s, bool use_stipple,
                                   double linewidth)
   {
 #if defined (HAVE_OPENGL)
 
-    int factor = math::round (linewidth * m_devpixratio);
+    // FIXME: See bug #53056 (measure LineWidth in points).
+    const static double pts2pix =
+      gh_manager::get_object (0).get ("screenpixelsperinch").double_value ()
+      / 72.0;
+    int factor = math::round (linewidth * pts2pix * m_devpixratio);
     if (factor < 1)
       factor = 1;
 
     uint16_t pattern = 0xFFFF;
 
     bool solid = false;
 
     if (s == "-")
@@ -4628,17 +4639,23 @@ namespace octave
 #if defined (HAVE_OPENGL)
 
     char c = marker[0];
 
     if (filled && (c == '+' || c == 'x' || c == '*' || c == '.'))
       return 0;
 
     unsigned int ID = m_glfcns.glGenLists (1);
-    double sz = size * toolkit.get_screen_resolution () / 72.0;
+
+    // FIXME: See bug #53056 (measure LineWidth in points).
+    const static double pts2pix =
+      gh_manager::get_object (0).get ("screenpixelsperinch").double_value ()
+      / 72.0;
+
+    double sz = size * pts2pix;
 
     // constants for the * marker
     const double sqrt2d4 = 0.35355339059327;
     double tt = sz*sqrt2d4;
 
     m_glfcns.glNewList (ID, GL_COMPILE);
 
     switch (marker[0])
