# HG changeset patch
# User jwe
# Date 1194897368 0
#      Mon Nov 12 19:56:08 2007 +0000
# Node ID f2ba4aa9a5f9f8710bd1d7966e1b2687154804b1
# Parent  cfa0602094e9c67d412d74f6404f9bda95fb4a5d
[project @ 2007-11-12 19:56:07 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,15 @@
 2007-11-12  David Bateman  <dbateman@free.fr>
 
+	* plot/title.m: Fix return value for nargout > 0.
+
+	* plot/__go_draw_axes.m: Allow the font and fontsize to be
+	specified for the title, xlabel, ylabel and text objects.
+
 	* plot/__go_draw_axes.m: Allow arbitrary colormaps with gnuplot
 	4.0 and surface plots.
 
 2007-11-12  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* plot/__patch__.m: Fix computation of faces when patch is defined
 	with X/Y/Z data.
 
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -54,46 +54,76 @@ function __go_draw_axes__ (h, plot_strea
 
     fputs (plot_stream, "unset label;\n");
 
     if (! isempty (axis_obj.title))
       t = get (axis_obj.title);
       if (isempty (t.string))
 	fputs (plot_stream, "unset title;\n");
       else
-	fprintf (plot_stream, "set title \"%s\";\n",
-		 undo_string_escapes (t.string));
+	if (isempty (t.fontname))
+	  f = "Helvetica";
+	else
+	  f = t.fontname;
+	endif
+	if (isempty (t.fontsize))
+	  s = 10;
+	else
+	  s = t.fontsize;
+	endif
+	fprintf (plot_stream, "set title \"%s\" font \"%s,%d\";\n",
+		 undo_string_escapes (t.string), f, s);
       endif
     endif
 
     if (! isempty (axis_obj.xlabel))
       t = get (axis_obj.xlabel);
       angle = t.rotation;
       if (isempty (t.string))
 	fputs (plot_stream, "unset xlabel;\n");
       else
-	fprintf (plot_stream, "set xlabel \"%s\"",
-		 undo_string_escapes (t.string));
+	if (isempty (t.fontname))
+	  f = "Helvetica";
+	else
+	  f = t.fontname;
+	endif
+	if (isempty (t.fontsize))
+	  s = 10;
+	else
+	  s = t.fontsize;
+	endif
+	fprintf (plot_stream, "set xlabel \"%s\" font \"%s,%d\"",
+		 undo_string_escapes (t.string), f, s);
 	if (have_newer_gnuplot)
 	  ## Rotation of xlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
 
     if (! isempty (axis_obj.ylabel))
       t = get (axis_obj.ylabel);
       angle = t.rotation;
       if (isempty (t.string))
 	fputs (plot_stream, "unset ylabel;\n");
       else
-	fprintf (plot_stream, "set ylabel \"%s\"",
-		 undo_string_escapes (t.string));
+	if (isempty (t.fontname))
+	  f = "Helvetica";
+	else
+	  f = t.fontname;
+	endif
+	if (isempty (t.fontsize))
+	  s = 10;
+	else
+	  s = t.fontsize;
+	endif
+	fprintf (plot_stream, "set ylabel \"%s\" font \"%s,%d\"",
+		 undo_string_escapes (t.string), f, s);
 	if (have_newer_gnuplot)
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
 
     if (! isempty (axis_obj.zlabel))
@@ -817,26 +847,37 @@ function __go_draw_axes__ (h, plot_strea
 		typ = 7;
 	      else
 		typ = -1;
 	      endif
 	      colorspec = sprintf ("textcolor lt %d", typ);
 	    endif
 	  endif
 
+	  if (isempty (obj.fontname))
+	    f = "Helvetica";
+	  else
+	    f = obj.fontname;
+	  endif
+	  if (isempty (obj.fontsize))
+	    s = 10;
+	  else
+	    s = obj.fontsize;
+	  endif
+
 	  if (nd == 3)
 	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %.15g,%.15g,%.15g %s rotate by %f %s;\n",
-		     undo_string_escapes (label), units,
-		     lpos(1), lpos(2), lpos(3), halign, angle, colorspec);
+		     "set label \"%s\" at %s %.15g,%.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
+		     undo_string_escapes (label), units, lpos(1),
+		     lpos(2), lpos(3), f, s, halign, angle, colorspec);
 	  else
-	    fprintf (plot_stream,
-		     "set label \"%s\" at %s %.15g,%.15g %s rotate by %f %s;\n",
-		     undo_string_escapes (label), units,
-		     lpos(1), lpos(2), halign, angle, colorspec);
+ 	    fprintf (plot_stream,
+ 		     "set label \"%s\" at %s %.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
+ 		     undo_string_escapes (label), units,
+ 		     lpos(1), lpos(2), f, s, halign, angle, colorspec);
 	  endif
 
 	otherwise
 	  error ("__go_draw_axes__: unknown object class, %s",
 		 obj.type);
       endswitch
 
     endfor
diff --git a/scripts/plot/title.m b/scripts/plot/title.m
--- a/scripts/plot/title.m
+++ b/scripts/plot/title.m
@@ -19,17 +19,17 @@
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} title (@var{title})
 ## Create a title object and return a handle to it.
 ## @end deftypefn
 
 ## Author: jwe
 
-function retval = title (varargin)
+function h = title (varargin)
 
   if (rem (nargin, 2) == 1)
     if (nargout > 0)
       h = __axis_label__ ("title", varargin{:});
     else
       __axis_label__ ("title", varargin{:});
     endif
   else
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2007-11-12  John W. Eaton  <jwe@octave.org>
+
+	* version.h (OCTAVE_VERSION): Now 2.9.17+.
+
+2007-11-12  David Bateman  <dbateman@free.fr>
+
+	* graphics.h.in, graphics.cc (class text): Add the fontname and
+	fontsize properties. 
+
 2007-11-10  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.9.17.
 	(OCTAVE_API_VERSION): Now api-v29.
 	(OCTAVE_RELEASE_DATE): Now 2007-11-10.
 
 2007-11-09  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1912,17 +1912,19 @@ std::string line::properties::go_name ("
 text::properties::properties (const graphics_handle& mh,
 			      const graphics_handle& p)
   : base_properties (go_name, mh, p),
     string (""),
     units ("data"),
     position (Matrix (1, 3, 0.0)),
     rotation (0),
     horizontalalignment ("left"),
-    color (Matrix (1, 3, 0.0))
+    color (Matrix (1, 3, 0.0)),
+    fontname ("Helvetica"),
+    fontsize (10)
 { }
 
 void
 text::properties::set (const property_name& name, const octave_value& val)
 {
   bool modified = true;
 
   if (name.compare ("parent"))
@@ -1941,16 +1943,20 @@ text::properties::set (const property_na
   else if (name.compare ("position"))
     set_position (val);
   else if (name.compare ("rotation"))
     set_rotation (val);
   else if (name.compare ("horizontalalignment"))
     set_horizontalalignment (val);
   else if (name.compare ("color"))
     set_color (val);
+  else if (name.compare ("fontname"))
+    set_fontname (val);
+  else if (name.compare ("fontsize"))
+    set_fontsize (val);
   else
     {
       modified = false;
       warning ("set: invalid property `%s'", name.c_str ());
     }
 
   if (modified)
     mark_modified ();
@@ -1966,16 +1972,18 @@ text::properties::get (void) const
   m.assign ("children", children);
   m.assign ("__modified__", __modified__);
   m.assign ("string", string);
   m.assign ("units", units);
   m.assign ("position", position);
   m.assign ("rotation", rotation);
   m.assign ("horizontalalignment", horizontalalignment);
   m.assign ("color", color);
+  m.assign ("fontname", fontname);
+  m.assign ("fontsize", fontsize);
 
   return m;
 }
 
 octave_value
 text::properties::get (const property_name& name) const
 {
   octave_value retval;
@@ -1995,16 +2003,20 @@ text::properties::get (const property_na
   else if (name.compare ("position"))
     retval = position;
   else if (name.compare ("rotation"))
     retval = rotation;
   else if (name.compare ("horizontalalignment"))
     retval = horizontalalignment;
   else if (name.compare ("color"))
     retval = color;
+  else if (name.compare ("fontname"))
+    retval = fontname;
+  else if (name.compare ("fontsize"))
+    retval = fontsize;
   else
     warning ("get: invalid property `%s'", name.c_str ());
 
   return retval;
 }
 
 property_list::pval_map_type
 text::properties::factory_defaults (void)
@@ -2012,16 +2024,18 @@ text::properties::factory_defaults (void
   property_list::pval_map_type m;
 
   m["string"] = "";
   m["units"] = "data";
   m["position"] = Matrix (1, 3, 0.0);
   m["rotation"] = 0;
   m["horizontalalignment"] = "left";
   m["color"] = Matrix (1, 3, 1.0);
+  m["fontname"] = "Helvetica";
+  m["fontsize"] = 10;
 
   return m;
 }
 
 std::string text::properties::go_name ("text");
 
 // ---------------------------------------------------------------------
 
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1405,16 +1405,18 @@ public:
 
     BEGIN_PROPERTIES
       octave_value string
       octave_value units
       octave_value position
       octave_value rotation
       octave_value horizontalalignment
       color_property color
+      octave_value fontname
+      octave_value fontsize
     END_PROPERTIES
 
     static std::string go_name;
   };
 
 private:
   properties xproperties;
 
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
-#define OCTAVE_VERSION "2.9.17"
+#define OCTAVE_VERSION "2.9.17+"
 
 #define OCTAVE_API_VERSION "api-v29"
 
 #define OCTAVE_RELEASE_DATE "2007-11-10"
 
 #define OCTAVE_COPYRIGHT "Copyright (C) 2007 John W. Eaton and others."
 
 // This is the first line printed by --version.  The GNU coding
