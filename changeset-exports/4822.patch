# HG changeset patch
# User jwe
# Date 1078514130 0
#      Fri Mar 05 19:15:30 2004 +0000
# Node ID d0aa1a59b73b879fe18eafb8df54e451f870058c
# Parent  22f024a25c4a15145312754db9c8925d5d2cabea
[project @ 2004-03-05 19:15:30 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -1265,24 +1265,16 @@ Array<T>::maybe_delete_elements_2 (idx_v
     n = nr;
   else
     {
       // Reshape to row vector for Matlab compatibility.
 
       n = nr * nc;
       nr = 1;
       nc = n;
-
-      if (liboctave_wfi_flag)
-	{
-	  (*current_liboctave_warning_handler)
-	    ("A(idx) = []: expecting A to be row or column vector or scalar");
-
-	  return;
-	}
     }
 
   if (idx_arg.is_colon_equiv (n, 1))
     {
       // Either A(:) = [] or A(idx) = [] with idx enumerating all
       // elements, so we delete all elements and return [](0x0).  To
       // preserve the orientation of the vector, you have to use
       // A(idx,:) = [] (delete rows) or A(:,idx) (delete columns).
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,14 +1,15 @@
 2004-03-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array.cc (Array<T>::maybe_delete_elements): Return immediately
 	if all LHS dimensions are zero.  For one index case, freeze and
 	sort idx_vec before checking length, and do nothing if
 	num_to_delete is zero.
+	(Array<T>::maybe_delete_elements_2): Omit Fortran-indexing warning.
 
 2004-03-04  David Bateman  <dbateman@free.fr>
 
 	* dNDArray.cc (NDArray::ifourier): Arg is int, not const int.
 	* CNDArray.cc (ComplexNDArray::ifourier): Likewise.
 
 2004-03-03  Hans Ekkehard Plesser  <hans.ekkehard.plesser@nlh.no>
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2004-03-05  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* version.h (OCTAVE_VERSION): Now 2.1.56.
+	(OCTAVE_API_VERSION): Now api-v7.
+
 2004-03-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-struct.cc (Frmfield): New function
 
 	* oct-map.h (Octave_map::contains): Return bool, not int.
 
 	* ov-cell.cc (Fiscellstr): No error if arg is not a cell array.
 	(Fcellstr): Return arg if it is already a cell array of character
diff --git a/src/version.h b/src/version.h
--- a/src/version.h
+++ b/src/version.h
@@ -18,19 +18,19 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, write to the Free
 Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
-#define OCTAVE_VERSION "2.1.55"
+#define OCTAVE_VERSION "2.1.56"
 
-#define OCTAVE_API_VERSION "api-v6"
+#define OCTAVE_API_VERSION "api-v7"
 
 #define OCTAVE_COPYRIGHT \
   "Copyright (C) 2004 John W. Eaton."
 
 #define OCTAVE_NAME_AND_VERSION \
   "GNU Octave, version " OCTAVE_VERSION " (" OCTAVE_CANONICAL_HOST_TYPE ")"
 
 #define OCTAVE_COPYING_STATEMENT \
