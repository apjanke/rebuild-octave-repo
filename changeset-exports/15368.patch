# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1347496377 14400
#      Wed Sep 12 20:32:57 2012 -0400
# Node ID 36ececf6938593d6ae5b2d1d8eeb2244466864c6
# Parent  501a9cc2c68f52668a6fe4f74ae69b4dfc7018b0
avoid some GCC warnings in the libgui code

* file-editor-interface.h, lexer-octave-gui.cc, main-window.cc,
settings-dialog.cc, workspace-model.cc, workspace-view.cc:
Avoid some shadowed variable, unused switch case, and C-style cast
warnings.

diff --git a/libgui/src/documentation-dockwidget.cc b/libgui/src/documentation-dockwidget.cc
--- a/libgui/src/documentation-dockwidget.cc
+++ b/libgui/src/documentation-dockwidget.cc
@@ -21,18 +21,18 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "documentation-dockwidget.h"
 
-documentation_dock_widget::documentation_dock_widget (QWidget *parent)
-  : QDockWidget (parent)
+documentation_dock_widget::documentation_dock_widget (QWidget *p)
+  : QDockWidget (p)
 {
   setObjectName ("DocumentationDockWidget");
   setWindowTitle (tr ("Documentation"));
 
   connect (this, SIGNAL (visibilityChanged (bool)),
            this, SLOT (handle_visibility_changed (bool)));
 
   _webinfo = new webinfo (this);
@@ -42,13 +42,13 @@ documentation_dock_widget::documentation
 void
 documentation_dock_widget::handle_visibility_changed (bool visible)
 {
   if (visible)
     emit active_changed (true);
 }
 
 void
-documentation_dock_widget::closeEvent (QCloseEvent *event)
+documentation_dock_widget::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
-  QDockWidget::closeEvent (event);
+  QDockWidget::closeEvent (e);
 }
diff --git a/libgui/src/files-dockwidget.cc b/libgui/src/files-dockwidget.cc
--- a/libgui/src/files-dockwidget.cc
+++ b/libgui/src/files-dockwidget.cc
@@ -29,18 +29,18 @@ along with Octave; see the file COPYING.
 
 #include <QApplication>
 #include <QFileInfo>
 #include <QCompleter>
 #include <QSettings>
 #include <QProcess>
 #include <QDebug>
 
-files_dock_widget::files_dock_widget (QWidget *parent)
-  : QDockWidget (parent)
+files_dock_widget::files_dock_widget (QWidget *p)
+  : QDockWidget (p)
 {
   setObjectName ("FilesDockWidget");
   setWindowTitle (tr ("Current Directory"));
   setWidget (new QWidget (this));
 
   // Create a toolbar
   _navigation_tool_bar = new QToolBar ("", widget ());
   _navigation_tool_bar->setAllowedAreas (Qt::TopToolBarArea);
@@ -83,23 +83,22 @@ files_dock_widget::files_dock_widget (QW
 
   _current_directory->setText(_file_system_model->fileInfo (rootPathIndex).
                               absoluteFilePath ());
 
   connect (_file_tree_view, SIGNAL (doubleClicked (const QModelIndex &)), this,
            SLOT (item_double_clicked (const QModelIndex &)));
 
   // Layout the widgets vertically with the toolbar on top
-  QVBoxLayout *
-    layout = new QVBoxLayout ();
-  layout->setSpacing (0);
-  layout->addWidget (_navigation_tool_bar);
-  layout->addWidget (_file_tree_view);
-  layout->setMargin (1);
-  widget ()->setLayout (layout);
+  QVBoxLayout *vbox_layout = new QVBoxLayout ();
+  vbox_layout->setSpacing (0);
+  vbox_layout->addWidget (_navigation_tool_bar);
+  vbox_layout->addWidget (_file_tree_view);
+  vbox_layout->setMargin (1);
+  widget ()->setLayout (vbox_layout);
   // TODO: Add right-click contextual menus for copying, pasting, deleting files (and others)
 
   connect (_current_directory, SIGNAL (returnPressed ()),
            this, SLOT (handle_directory_entered ()));
 
   QCompleter *
     completer = new QCompleter (_file_system_model, this);
   _current_directory->setCompleter (completer);
@@ -185,13 +184,13 @@ files_dock_widget::notice_settings ()
 void
 files_dock_widget::handle_visibility_changed (bool visible)
 {
   if (visible)
     emit active_changed (true);
 }
 
 void
-files_dock_widget::closeEvent (QCloseEvent *event)
+files_dock_widget::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
-  QDockWidget::closeEvent (event);
+  QDockWidget::closeEvent (e);
 }
diff --git a/libgui/src/history-dockwidget.cc b/libgui/src/history-dockwidget.cc
--- a/libgui/src/history-dockwidget.cc
+++ b/libgui/src/history-dockwidget.cc
@@ -27,18 +27,18 @@ along with Octave; see the file COPYING.
 #include <QVBoxLayout>
 
 #include "cmd-hist.h"
 
 #include "error.h"
 
 #include "history-dockwidget.h"
 
-history_dock_widget::history_dock_widget (QWidget * parent)
-  : QDockWidget (parent), octave_event_observer ()
+history_dock_widget::history_dock_widget (QWidget * p)
+  : QDockWidget (p), octave_event_observer ()
 {
   setObjectName ("HistoryDockWidget");
   construct ();
 }
 
 void
 history_dock_widget::event_accepted (octave_event *e)
 {
@@ -101,26 +101,26 @@ history_dock_widget::construct ()
   _sort_filter_proxy_model.setSourceModel (_history_model);
   _history_list_view = new QListView (this);
   _history_list_view->setModel (&_sort_filter_proxy_model);
   _history_list_view->setAlternatingRowColors (true);
   _history_list_view->setEditTriggers (QAbstractItemView::NoEditTriggers);
   _history_list_view->setStatusTip (tr ("Doubleclick a command to transfer it to the terminal."));
   _filter_line_edit = new QLineEdit (this);
   _filter_line_edit->setStatusTip (tr ("Enter text to filter the command history."));
-  QVBoxLayout *layout = new QVBoxLayout ();
+  QVBoxLayout *vbox_layout = new QVBoxLayout ();
 
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
-  layout->addWidget (_history_list_view);
-  layout->addWidget (_filter_line_edit);
-  layout->setMargin (2);
+  vbox_layout->addWidget (_history_list_view);
+  vbox_layout->addWidget (_filter_line_edit);
+  vbox_layout->setMargin (2);
 
-  widget ()->setLayout (layout);
+  widget ()->setLayout (vbox_layout);
 
   connect (_filter_line_edit,
            SIGNAL (textEdited (QString)),
            &_sort_filter_proxy_model,
            SLOT (setFilterWildcard (QString)));
 
   connect (_history_list_view,
            SIGNAL (doubleClicked (QModelIndex)),
@@ -167,13 +167,13 @@ history_dock_widget::request_history_mod
 
 void
 history_dock_widget::reset_model ()
 {
   _history_model->setStringList (QStringList ());
 }
 
 void
-history_dock_widget::closeEvent (QCloseEvent *event)
+history_dock_widget::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
-  QDockWidget::closeEvent (event);
+  QDockWidget::closeEvent (e);
 }
diff --git a/libgui/src/m-editor/file-editor-interface.h b/libgui/src/m-editor/file-editor-interface.h
--- a/libgui/src/m-editor/file-editor-interface.h
+++ b/libgui/src/m-editor/file-editor-interface.h
@@ -61,20 +61,20 @@ public slots:
 
 signals:
   void active_changed (bool active);
 
 protected:
   QTerminal* _terminal;
   main_window* _main_window;
 
-  void closeEvent (QCloseEvent *event)
+  void closeEvent (QCloseEvent *e)
   {
     emit active_changed (false);
-    QDockWidget::closeEvent (event);
+    QDockWidget::closeEvent (e);
   }
 
 protected slots:
   void handle_visibility_changed (bool visible)
   {
     if (visible)
       emit active_changed (true);
   }
diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -86,20 +86,20 @@ file_editor_tab::file_editor_tab(file_ed
   _edit_area->setIndentationsUseTabs (false);
 
   _edit_area->setUtf8 (true);
 
   // auto completion
   _edit_area->autoCompleteFromAll ();
   _edit_area->setAutoCompletionSource(QsciScintilla::AcsAll);
 
-  QVBoxLayout *layout = new QVBoxLayout ();
-  layout->addWidget (_edit_area);
-  layout->setMargin (0);
-  setLayout (layout);
+  QVBoxLayout *edit_area_layout = new QVBoxLayout ();
+  edit_area_layout->addWidget (_edit_area);
+  edit_area_layout->setMargin (0);
+  setLayout (edit_area_layout);
 
   // connect modified signal
   connect (_edit_area, SIGNAL (modificationChanged (bool)),
            this, SLOT (update_window_title (bool)));
   connect (_edit_area, SIGNAL (copyAvailable (bool)),
            this, SLOT (handle_copy_available (bool)));
   connect (&_file_system_watcher, SIGNAL (fileChanged (QString)),
            this, SLOT (file_has_changed (QString)));
@@ -153,36 +153,36 @@ file_editor_tab::event_reject (octave_ev
   if (dynamic_cast<octave_run_file_event*> (e))
     {
       // Running file failed.
     }
   delete e;
 }
 
 void
-file_editor_tab::closeEvent (QCloseEvent *event)
+file_editor_tab::closeEvent (QCloseEvent *e)
 {
   if (_file_editor->get_main_window ()->is_closing ())
     {
       // close whole application: save file or not if modified
       check_file_modified ("Closing Octave", 0); // no cancel possible
-      event->accept ();
+      e->accept ();
     }
   else
     {
       // ignore close event if file is not saved and user cancels
       // closing this window
       if (check_file_modified ("Close File",
                                QMessageBox::Cancel) == QMessageBox::Cancel)
         {
-          event->ignore ();
+          e->ignore ();
         }
       else
         {
-          event->accept();
+          e->accept();
         }
     }
 }
 
 void
 file_editor_tab::set_file_name (const QString& fileName)
 {
   _file_name = fileName;
@@ -192,28 +192,28 @@ file_editor_tab::set_file_name (const QS
 
 void
 file_editor_tab::handle_margin_clicked(int margin, int line,
                                        Qt::KeyboardModifiers state)
 {
   Q_UNUSED (state);
   if (margin == 1)
     {
-      unsigned int mask = _edit_area->markersAtLine (line);
+      unsigned int markers_mask = _edit_area->markersAtLine (line);
 
       if (state & Qt::ControlModifier)
         {
-          if (mask && (1 << bookmark))
+          if (markers_mask && (1 << bookmark))
             _edit_area->markerDelete(line,bookmark);
           else
             _edit_area->markerAdd(line,bookmark);
         }
       else
         {
-          if (mask && (1 << breakpoint))
+          if (markers_mask && (1 << breakpoint))
             {
               request_remove_breakpoint (line);
             }
           else
             {
               request_add_breakpoint (line);
             }
         }
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -30,22 +30,22 @@ along with Octave; see the file COPYING.
 #include <QApplication>
 #include <QFile>
 #include <QFont>
 #include <QFileDialog>
 #include <QMessageBox>
 #include <QStyle>
 #include <QTextStream>
 
-file_editor::file_editor (QTerminal *terminal, main_window *m)
-  : file_editor_interface(terminal, m)
+file_editor::file_editor (QTerminal *t, main_window *m)
+  : file_editor_interface (t, m)
 {
   construct ();
 
-  _terminal = terminal;
+  _terminal = t;
   _main_window = m;
   setVisible (false);
 }
 
 file_editor::~file_editor ()
 {
   QSettings *settings = resource_manager::get_settings ();
   QStringList sessionFileNames;
@@ -382,22 +382,22 @@ file_editor::notice_settings ()
       if (fileEditorTab)
         fileEditorTab->notice_settings ();
     }
 }
 
 void
 file_editor::construct ()
 {
-  QWidget *widget = new QWidget (this);
-  QStyle *style = QApplication::style ();
+  QWidget *editor_widget = new QWidget (this);
+  QStyle *editor_style = QApplication::style ();
 
-  _menu_bar = new QMenuBar (widget);
-  _tool_bar = new QToolBar (widget);
-  _tab_widget = new QTabWidget (widget);
+  _menu_bar = new QMenuBar (editor_widget);
+  _tool_bar = new QToolBar (editor_widget);
+  _tab_widget = new QTabWidget (editor_widget);
   _tab_widget->setTabsClosable (true);
 
   QAction *new_action = new QAction (QIcon(":/actions/icons/filenew.png"),
                                      tr("&New File"), _tool_bar);
 
   QAction *open_action = new QAction (QIcon(":/actions/icons/fileopen.png"),
                                       tr("&Open File"), _tool_bar);
 
@@ -524,23 +524,23 @@ file_editor::construct ()
   _debug_menu->addSeparator ();
   // The other debug actions will be added by the main window.
   _menu_bar->addMenu (_debug_menu);
 
   QMenu *_run_menu = new QMenu (tr ("&Run"), _menu_bar);
   _run_menu->addAction (_run_action);
   _menu_bar->addMenu (_run_menu);
 
-  QVBoxLayout *layout = new QVBoxLayout ();
-  layout->addWidget (_menu_bar);
-  layout->addWidget (_tool_bar);
-  layout->addWidget (_tab_widget);
-  layout->setMargin (0);
-  widget->setLayout (layout);
-  setWidget (widget);
+  QVBoxLayout *vbox_layout = new QVBoxLayout ();
+  vbox_layout->addWidget (_menu_bar);
+  vbox_layout->addWidget (_tool_bar);
+  vbox_layout->addWidget (_tab_widget);
+  vbox_layout->setMargin (0);
+  editor_widget->setLayout (vbox_layout);
+  setWidget (editor_widget);
 
   connect (new_action,
            SIGNAL (triggered ()), this, SLOT (request_new_file ()));
   connect (open_action,
            SIGNAL (triggered ()), this, SLOT (request_open_file ()));
   connect (undo_action,
            SIGNAL (triggered ()), this, SLOT (request_undo ()));
   connect (redo_action,
@@ -581,17 +581,17 @@ file_editor::construct ()
            SIGNAL (triggered ()), this, SLOT (request_find ()));
   connect (_tab_widget,
            SIGNAL (tabCloseRequested (int)), this, SLOT (handle_tab_close_request (int)));
   connect (_tab_widget,
            SIGNAL (currentChanged(int)), this, SLOT (active_tab_changed (int)));
 
   resize (500, 400);
   setWindowIcon (QIcon::fromTheme ("accessories-text-editor",
-                                   style->standardIcon (QStyle::SP_FileIcon)));
+                                   editor_style->standardIcon (QStyle::SP_FileIcon)));
   setWindowTitle ("Octave Editor");
 
   //restore previous session
   QSettings *settings = resource_manager::get_settings ();
   if (settings->value ("editor/restoreSession",true).toBool ())
     {
       QStringList sessionFileNames = settings->value("editor/savedSessionTabs", QStringList()).toStringList ();
 
diff --git a/libgui/src/m-editor/find-dialog.cc b/libgui/src/m-editor/find-dialog.cc
--- a/libgui/src/m-editor/find-dialog.cc
+++ b/libgui/src/m-editor/find-dialog.cc
@@ -42,18 +42,18 @@
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <QtGui>
 #include <QIcon>
 #include "find-dialog.h"
 
-find_dialog::find_dialog (QsciScintilla* edit_area, QWidget *parent)
-  : QDialog (parent)
+find_dialog::find_dialog (QsciScintilla* edit_area, QWidget *p)
+  : QDialog (p)
 {
   setWindowTitle ("Find and Replace");
   setWindowIcon (QIcon(":/actions/icons/logo.png"));
 
   _search_label = new QLabel (tr ("Find &what:"));
   _search_line_edit = new QLineEdit;
   _search_label->setBuddy (_search_line_edit);
   _replace_label = new QLabel (tr ("Re&place with:"));
diff --git a/libgui/src/m-editor/lexer-octave-gui.cc b/libgui/src/m-editor/lexer-octave-gui.cc
--- a/libgui/src/m-editor/lexer-octave-gui.cc
+++ b/libgui/src/m-editor/lexer-octave-gui.cc
@@ -26,18 +26,18 @@ along with Octave; see the file COPYING.
 
 #include "lexer-octave-gui.h"
 #include <qcolor.h>
 #include <qfont.h>
 
 // -----------------------------------------------------
 // Some basic functions
 // -----------------------------------------------------
-lexer_octave_gui::lexer_octave_gui(QObject *parent)
-  : QsciLexer(parent)  // inherit from base lexer
+lexer_octave_gui::lexer_octave_gui (QObject *p)
+  : QsciLexer (p)
 {
 }
 
 lexer_octave_gui::~lexer_octave_gui()
 {
 }
 
 const char *lexer_octave_gui::language() const
diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -36,18 +36,18 @@ along with Octave; see the file COPYING.
 #include <QFileDialog>
 #include <QMessageBox>
 #include <QIcon>
 
 #include "main-window.h"
 #include "file-editor.h"
 #include "settings-dialog.h"
 
-main_window::main_window (QWidget * parent)
-  : QMainWindow (parent), octave_event_observer ()
+main_window::main_window (QWidget *p)
+  : QMainWindow (p), octave_event_observer ()
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
   octave_link::instance ()->launch_octave();
 }
 
 main_window::~main_window ()
 {
@@ -180,20 +180,20 @@ main_window::process_settings_dialog_req
 void
 main_window::notice_settings ()
 {
   // Set terminal font:
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
-  QFont font = QFont();
-  font.setFamily(settings->value("terminal/fontName").toString());
-  font.setPointSize(settings->value("terminal/fontSize").toInt ());
-  _terminal->setTerminalFont(font);
+  QFont term_font = QFont();
+  term_font.setFamily(settings->value("terminal/fontName").toString());
+  term_font.setPointSize(settings->value("terminal/fontSize").toInt ());
+  _terminal->setTerminalFont (term_font);
 
   QString cursorType = settings->value ("terminal/cursorType").toString ();
   bool cursorBlinking = settings->value ("terminal/cursorBlinking").toBool ();
   if (cursorType == "ibeam")
     _terminal->setCursorType(QTerminalInterface::IBeamCursor, cursorBlinking);
   else if (cursorType == "block")
     _terminal->setCursorType(QTerminalInterface::BlockCursor, cursorBlinking);
   else if (cursorType == "underline")
@@ -417,19 +417,19 @@ main_window::show_about_octave ()
     "http://www.octave.org/bugs.html to learn how to write a helpful report).\n"
     "\n"
     "For information about changes from previous versions, type `news'.\n";
 
   QMessageBox::about (this, tr ("About Octave"), message);
 }
 
 void
-main_window::closeEvent (QCloseEvent * closeEvent)
+main_window::closeEvent (QCloseEvent *e)
 {
-  closeEvent->ignore ();
+  e->ignore ();
   octave_link::instance ()->post_event (new octave_exit_event (*this));
 }
 
 void
 main_window::read_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -25,17 +25,18 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <QtGui/QApplication>
 #include <QTranslator>
 #include <QSettings>
 
 #include <iostream>
 
-#include <syswait.h>
+#include "lo-utils.h"
+#include "syswait.h"
 
 #include "welcome-wizard.h"
 #include "resource-manager.h"
 #include "main-window.h"
 #include "octave-gui.h"
 
 // Dissociate from the controlling terminal, if any.
 
@@ -64,17 +65,18 @@ dissociate_terminal (void)
   else
     {
       // Parent
 
       int status;
 
       waitpid (pid, &status, 0);
 
-      exit (WIFEXITED (status) ? WEXITSTATUS (status) : 127);
+      exit (octave_wait::ifexited (status)
+            ? octave_wait::exitstatus (status) : 127);
     }
 
 #endif
 }
 
 int
 octave_start_gui (int argc, char *argv[])
 {
diff --git a/libgui/src/octave-qt-event-listener.cc b/libgui/src/octave-qt-event-listener.cc
--- a/libgui/src/octave-qt-event-listener.cc
+++ b/libgui/src/octave-qt-event-listener.cc
@@ -22,18 +22,18 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "octave-qt-event-listener.h"
 #include <QApplication>
 
-octave_qt_event_listener::octave_qt_event_listener (QObject *parent)
-  : QObject (parent), octave_event_listener ()
+octave_qt_event_listener::octave_qt_event_listener (QObject *p)
+  : QObject (p), octave_event_listener ()
 {
 }
 
 void
 octave_qt_event_listener::current_directory_has_changed (const std::string& directory)
 {
   emit current_directory_has_changed_signal
     (QString::fromStdString (directory));
diff --git a/libgui/src/qtinfo/parser.cc b/libgui/src/qtinfo/parser.cc
--- a/libgui/src/qtinfo/parser.cc
+++ b/libgui/src/qtinfo/parser.cc
@@ -25,18 +25,18 @@
 #include <QFileInfo>
 #include <QDir>
 #include <QFile>
 #include <QUrl>
 #include <QRegExp>
 #include <QProcess>
 #include <QBuffer>
 
-parser::parser(QObject *parent)
-  : QObject(parent)
+parser::parser(QObject *p)
+  : QObject(p)
 {
   _compressors_map.insert ("bz2",  "bzip2 -dc \"%1\"");
   _compressors_map.insert ("gz",   "gzip -dc \"%1\"");
   _compressors_map.insert ("lzma", "lzma -dc \"%1\"");
   _compressors_map.insert ("xz",   "xz -dc \"%1\"");
   _compressors_map.insert ("Z",    "gunzip -c \"%1\"");
 }
 
diff --git a/libgui/src/qtinfo/webinfo.cc b/libgui/src/qtinfo/webinfo.cc
--- a/libgui/src/qtinfo/webinfo.cc
+++ b/libgui/src/qtinfo/webinfo.cc
@@ -25,63 +25,63 @@
 #include <QVBoxLayout>
 #include <QHBoxLayout>
 
 #include "file-ops.h"
 #include "help.h"
 #include "defaults.h"
 
 
-webinfo::webinfo (QWidget *parent)
-  : QWidget (parent)
+webinfo::webinfo (QWidget *p)
+  : QWidget (p)
 {
   _font_web = font ();
 
-  QVBoxLayout *layout = new QVBoxLayout ();
-  layout->setMargin (0);
-  setLayout (layout);
+  QVBoxLayout *vbox_layout = new QVBoxLayout ();
+  vbox_layout->setMargin (0);
+  setLayout (vbox_layout);
 
-  QHBoxLayout *hboxLayout = new QHBoxLayout ();
-  hboxLayout->setMargin (2);
-  layout->addLayout (hboxLayout);
+  QHBoxLayout *hbox_layout = new QHBoxLayout ();
+  hbox_layout->setMargin (2);
+  vbox_layout->addLayout (hbox_layout);
 
   _close_tab_button = new QPushButton (this);
   _close_tab_button->setSizePolicy (QSizePolicy::Fixed,QSizePolicy::Preferred);
   _close_tab_button->setIcon (QIcon (":/actions/icons/stop.png"));
-  hboxLayout->addWidget (_close_tab_button);
+  hbox_layout->addWidget (_close_tab_button);
 
   _tab_bar = new QTabBar (this);
   _tab_bar->setSizePolicy (QSizePolicy::Preferred,QSizePolicy::Preferred);
   _tab_bar->setExpanding (false);
-  hboxLayout->addWidget (_tab_bar);
+  hbox_layout->addWidget (_tab_bar);
 
   _zoom_in_button = new QToolButton (this);
   _zoom_in_button->setSizePolicy (QSizePolicy::Fixed,QSizePolicy::Preferred);
   _zoom_in_button->setIcon (QIcon (":/actions/icons/zoom-in.png"));
-  hboxLayout->addWidget (_zoom_in_button);
+  hbox_layout->addWidget (_zoom_in_button);
 
   _zoom_out_button = new QToolButton (this);
   _zoom_out_button->setSizePolicy (QSizePolicy::Fixed,QSizePolicy::Preferred);
   _zoom_out_button->setIcon (QIcon (":/actions/icons/zoom-out.png"));
-  hboxLayout->addWidget (_zoom_out_button);
+  hbox_layout->addWidget (_zoom_out_button);
 
   _stacked_widget = new QStackedWidget (this);
-  layout->addWidget (_stacked_widget);
+  vbox_layout->addWidget (_stacked_widget);
 
-  hboxLayout = new QHBoxLayout ();
-  layout->addLayout (hboxLayout);
+  hbox_layout = new QHBoxLayout ();
+  vbox_layout->addLayout (hbox_layout);
 
   _search_line_edit = new QLineEdit(this);
 #ifdef HAVE_SETPLACEHOLDERTEXT
   _search_line_edit->setPlaceholderText (tr ("Type here and press \'Return\' to search"));
 #endif
-  hboxLayout->addWidget (_search_line_edit);
+  hbox_layout->addWidget (_search_line_edit);
 
   _search_check_box = new QCheckBox (tr ("Global search"));
-  hboxLayout->addWidget (_search_check_box);
+  hbox_layout->addWidget (_search_check_box);
 
   connect (_close_tab_button, SIGNAL (clicked ()), this, SLOT (close_tab ()));
   connect (_tab_bar, SIGNAL (currentChanged (int)), this, SLOT (current_tab_changed (int)));
   connect (_zoom_in_button, SIGNAL (clicked ()), this, SLOT (zoom_in ()));
   connect (_zoom_out_button, SIGNAL (clicked ()), this, SLOT (zoom_out ()));
   connect (_search_line_edit, SIGNAL (returnPressed ()), this, SLOT (search ()));
 
   resize (500, 300);
@@ -125,18 +125,18 @@ webinfo::link_clicked (const QUrl & link
 {
   QString node = link.toString ();
   load_node (node);
 }
 
 void
 webinfo::current_tab_changed (int index)
 {
-  QVariant data = _tab_bar->tabData (index);
-  _text_browser = (QTextBrowser*) (data.value<void*> ());
+  QVariant tab_data = _tab_bar->tabData (index);
+  _text_browser = (QTextBrowser*) (tab_data.value<void*> ());
 
   _stacked_widget->setCurrentIndex (_stacked_widget->indexOf (_text_browser));
 
   if (_text_browser->font () != _font_web)
     {
       _text_browser->setFont (_font_web);
     }
 }
@@ -151,19 +151,19 @@ webinfo::addNewTab (const QString& name)
   connect (_text_browser, SIGNAL (anchorClicked (const QUrl &)), this, SLOT (link_clicked (const QUrl &)) );
   disconnect(_tab_bar, SIGNAL (currentChanged(int)), this, SLOT (current_tab_changed (int)));
 
   int ns = _stacked_widget->addWidget (_text_browser);
   _stacked_widget->setCurrentIndex (ns);
 
   int nt = _tab_bar->addTab (name);
   _tab_bar->setCurrentIndex (nt);
-  QVariant data;
-  data.setValue ( (void*)_text_browser);
-  _tab_bar->setTabData (nt, data);
+  QVariant tab_data;
+  tab_data.setValue ( (void*)_text_browser);
+  _tab_bar->setTabData (nt, tab_data);
 
   connect (_tab_bar, SIGNAL (currentChanged (int)), this, SLOT (current_tab_changed (int)));
 
   if (_text_browser->font () != _font_web)
     {
       _text_browser->setFont (_font_web);
     }
   return _text_browser;
@@ -175,18 +175,18 @@ webinfo::close_tab ()
   int index = _tab_bar->currentIndex ();
   if (_tab_bar->tabText (index) != "Top")
     closeTab (index);
 }
 
 void
 webinfo::closeTab (int index)
 {
-  QVariant data = _tab_bar->tabData (index);
-  QWidget *w = (QWidget*) (data.value<void*> ());
+  QVariant tab_data = _tab_bar->tabData (index);
+  QWidget *w = (QWidget*) (tab_data.value<void*> ());
   _stacked_widget->removeWidget (w);
   delete w;
 
   _tab_bar->removeTab (index);
 }
 
 void
 webinfo::search ()
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -24,18 +24,18 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include "resource-manager.h"
 #include "settings-dialog.h"
 #include "ui-settings-dialog.h"
 #include <QSettings>
 
-settings_dialog::settings_dialog (QWidget * parent):
-  QDialog (parent), ui (new Ui::settings_dialog)
+settings_dialog::settings_dialog (QWidget *p):
+  QDialog (p), ui (new Ui::settings_dialog)
 {
   ui->setupUi (this);
 
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
   ui->useCustomFileEditor->setChecked (settings->value ("useCustomFileEditor").toBool ());
diff --git a/libgui/src/terminal-dockwidget.cc b/libgui/src/terminal-dockwidget.cc
--- a/libgui/src/terminal-dockwidget.cc
+++ b/libgui/src/terminal-dockwidget.cc
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "terminal-dockwidget.h"
 
-terminal_dock_widget::terminal_dock_widget (QTerminal *terminal, QWidget *parent)
-  : QDockWidget (parent)
+terminal_dock_widget::terminal_dock_widget (QTerminal *terminal, QWidget *p)
+  : QDockWidget (p)
 {
   setObjectName ("TerminalDockWidget");
   setWindowTitle (tr ("Command Window"));
   setWidget (terminal);
 
   connect (this, SIGNAL (visibilityChanged (bool)), this, SLOT (handle_visibility_changed (bool)));
 }
diff --git a/libgui/src/welcome-wizard.cc b/libgui/src/welcome-wizard.cc
--- a/libgui/src/welcome-wizard.cc
+++ b/libgui/src/welcome-wizard.cc
@@ -22,19 +22,18 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "welcome-wizard.h"
 #include "ui-welcome-wizard.h"
 
-welcome_wizard::welcome_wizard (QWidget *parent) :
-  QDialog (parent),
-  _ui (new Ui::welcome_wizard)
+welcome_wizard::welcome_wizard (QWidget *p)
+  : QDialog (p), _ui (new Ui::welcome_wizard)
 {
   _ui->setupUi (this);
   connect (_ui->nextButton1, SIGNAL (clicked ()), this, SLOT (next ()));
   connect (_ui->nextButton2, SIGNAL (clicked ()), this, SLOT (next ()));
   connect (_ui->nextButton3, SIGNAL (clicked ()), this, SLOT (next ()));
   connect (_ui->nextButton4, SIGNAL (clicked ()), this, SLOT (next ()));
 
   connect (_ui->previousButton2, SIGNAL (clicked ()), this, SLOT (previous ()));
diff --git a/libgui/src/workspace-model.cc b/libgui/src/workspace-model.cc
--- a/libgui/src/workspace-model.cc
+++ b/libgui/src/workspace-model.cc
@@ -29,18 +29,18 @@ along with Octave; see the file COPYING.
 
 #include <list>
 
 #include <symtab.h>
 
 #include "workspace-model.h"
 #include "octave-link.h"
 
-workspace_model::workspace_model(QObject *parent)
-  : QAbstractItemModel(parent), octave_event_observer ()
+workspace_model::workspace_model(QObject *p)
+  : QAbstractItemModel (p), octave_event_observer ()
 {
   QList<QVariant> rootData;
   rootData << tr ("Name") << tr ("Class") << tr("Dimension") << tr ("Value");
   _rootItem = new tree_item(rootData);
 
   insert_top_level_item(0, new tree_item ("Local"));
   insert_top_level_item(1, new tree_item ("Global"));
   insert_top_level_item(2, new tree_item ("Persistent"));
@@ -90,19 +90,30 @@ workspace_model::event_accepted (octave_
 
           child->set_data (0, s.symbol ());
           child->set_data (1, s.class_name ());
           child->set_data (2, s.dimension ());
           child->set_data (3, s.value ());
 
           switch (s.scope ())
             {
-            case symbol_information::local:       top_level_item (0)->add_child (child); break;
-            case symbol_information::global:      top_level_item (1)->add_child (child); break;
-            case symbol_information::persistent:  top_level_item (2)->add_child (child); break;
+            case symbol_information::local:
+              top_level_item (0)->add_child (child);
+              break;
+
+            case symbol_information::global:
+              top_level_item (1)->add_child (child);
+              break;
+
+            case symbol_information::persistent:
+              top_level_item (2)->add_child (child);
+              break;
+
+            default:
+              break;
             }
         }
 
       endResetModel();
       emit model_changed();
     }
 
   // Post a new event in a given time.
@@ -113,76 +124,76 @@ workspace_model::event_accepted (octave_
 
 void
 workspace_model::event_reject (octave_event *e)
 {
   delete e;
 }
 
 QModelIndex
-workspace_model::index(int row, int column, const QModelIndex &parent) const
+workspace_model::index(int row, int column, const QModelIndex &p) const
 {
-  if (!hasIndex(row, column, parent))
+  if (!hasIndex(row, column, p))
     return QModelIndex();
 
   tree_item *parentItem;
 
-  if (!parent.isValid())
+  if (!p.isValid())
     parentItem = _rootItem;
   else
-    parentItem = static_cast<tree_item*>(parent.internalPointer());
+    parentItem = static_cast<tree_item*>(p.internalPointer());
 
   tree_item *childItem = parentItem->child(row);
   if (childItem)
     return createIndex(row, column, childItem);
   else
     return QModelIndex();
 }
 
 QModelIndex
-workspace_model::parent(const QModelIndex &index) const
+workspace_model::parent(const QModelIndex &idx) const
 {
-  if (!index.isValid())
+  if (!idx.isValid())
     return QModelIndex();
 
-  tree_item *childItem = static_cast<tree_item*>(index.internalPointer());
+  tree_item *childItem = static_cast<tree_item*>(idx.internalPointer());
 
   if (childItem)
     {
       tree_item *parentItem = childItem->parent();
 
       if (! parentItem || parentItem == _rootItem)
         return QModelIndex();
 
       return createIndex(parentItem->row(), 0, parentItem);
     }
   else
     return QModelIndex ();
 }
 
 int
-workspace_model::rowCount(const QModelIndex &parent) const
+workspace_model::rowCount(const QModelIndex &p) const
 {
   tree_item *parentItem;
-  if (parent.column() > 0)
+  if (p.column() > 0)
     return 0;
 
-  if (!parent.isValid())
+  if (!p.isValid())
     parentItem = _rootItem;
   else
-    parentItem = static_cast<tree_item*>(parent.internalPointer());
+    parentItem = static_cast<tree_item*>(p.internalPointer());
 
   return parentItem->child_count();
 }
 
 int
-workspace_model::columnCount(const QModelIndex &parent) const
+workspace_model::columnCount(const QModelIndex &p) const
 {
-  if (parent.isValid())
-    return static_cast<tree_item*>(parent.internalPointer())->column_count();
+  if (p.isValid())
+    return static_cast<tree_item*>(p.internalPointer())->column_count();
   else
     return _rootItem->column_count();
 }
 
 void
 workspace_model::insert_top_level_item(int at, tree_item *treeItem)
 {
   _rootItem->insert_child_item(at, treeItem);
@@ -190,39 +201,39 @@ workspace_model::insert_top_level_item(i
 
 tree_item *
 workspace_model::top_level_item (int at)
 {
   return _rootItem->child(at);
 }
 
 Qt::ItemFlags
-workspace_model::flags(const QModelIndex &index) const
+workspace_model::flags(const QModelIndex &idx) const
 {
-  if (!index.isValid())
+  if (!idx.isValid())
     return 0;
 
   return Qt::ItemIsEnabled | Qt::ItemIsSelectable;
 }
 
 QVariant
 workspace_model::headerData(int section, Qt::Orientation orientation, int role) const
 {
   if (orientation == Qt::Horizontal && role == Qt::DisplayRole)
     return _rootItem->data(section);
 
   return QVariant();
 }
 
 QVariant
-workspace_model::data(const QModelIndex &index, int role) const
+workspace_model::data(const QModelIndex &idx, int role) const
 {
-  if (!index.isValid())
+  if (!idx.isValid())
     return QVariant();
 
   if (role != Qt::DisplayRole)
     return QVariant();
 
-  tree_item *item = static_cast<tree_item*>(index.internalPointer());
+  tree_item *item = static_cast<tree_item*>(idx.internalPointer());
 
-  return item->data(index.column());
+  return item->data(idx.column());
 }
 
diff --git a/libgui/src/workspace-model.h b/libgui/src/workspace-model.h
--- a/libgui/src/workspace-model.h
+++ b/libgui/src/workspace-model.h
@@ -30,25 +30,25 @@ along with Octave; see the file COPYING.
 #include <QTimer>
 
 #include "symbol-information.h"
 #include "octave-event-observer.h"
 
 class tree_item
 {
 public:
-  tree_item (const QList<QVariant> &data, tree_item *parent = 0) {
-    _parent_item = parent;
-    _item_data = data;
+  tree_item (const QList<QVariant> &d, tree_item *p = 0) {
+    _parent_item = p;
+    _item_data = d;
   }
 
-  tree_item (QVariant data = QVariant(), tree_item *parent = 0) {
+  tree_item (QVariant d = QVariant(), tree_item *p = 0) {
     QList<QVariant> variantList;
-    variantList << data << QVariant () << QVariant () << QVariant ();
-    _parent_item = parent;
+    variantList << d << QVariant () << QVariant () << QVariant ();
+    _parent_item = p;
     _item_data = variantList;
   }
 
   ~tree_item () {
     qDeleteAll (_child_items);
   }
 
   void insert_child_item (int at, tree_item *item) {
@@ -70,23 +70,23 @@ public:
     _child_items.removeAll (item);
   }
 
   QVariant data (int column) const
   {
     return _item_data[column];
   }
 
-  void set_data (int column, QVariant data)
+  void set_data (int column, QVariant d)
   {
-    _item_data[column] = data;
+    _item_data[column] = d;
   }
 
-  tree_item *child (int row) {
-    return _child_items[row];
+  tree_item *child (int r) {
+    return _child_items[r];
   }
 
   int child_count () const {
     return _child_items.count();
   }
 
   int column_count () const
   {
diff --git a/libgui/src/workspace-view.cc b/libgui/src/workspace-view.cc
--- a/libgui/src/workspace-view.cc
+++ b/libgui/src/workspace-view.cc
@@ -25,18 +25,18 @@ along with Octave; see the file COPYING.
 #endif
 
 #include "workspace-view.h"
 #include "resource-manager.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QPushButton>
 
-workspace_view::workspace_view (QWidget * parent) : QDockWidget
-                                                    (parent)
+workspace_view::workspace_view (QWidget *p)
+  : QDockWidget (p)
 {
   setObjectName ("WorkspaceView");
   setWindowTitle (tr ("Workspace"));
 
   // Create a new workspace model.
   _workspace_model = new workspace_model ();
 
   _workspace_tree_view = new QTreeView (this);            // Create a new tree view.
@@ -46,22 +46,22 @@ workspace_view::workspace_view (QWidget 
   _workspace_tree_view->setTextElideMode (Qt::ElideRight);// Elide text to the right side of the cells.
   _workspace_tree_view->setWordWrap (false);              // No wordwrapping in cells.
   _workspace_tree_view->setModel (_workspace_model);      // Assign model.
 
   // Set an empty widget, so we can assign a layout to it.
   setWidget (new QWidget (this));
 
   // Create a new layout and add widgets to it.
-  QVBoxLayout *layout = new QVBoxLayout ();
-  layout->addWidget (_workspace_tree_view);
-  layout->setMargin (2);
+  QVBoxLayout *vbox_layout = new QVBoxLayout ();
+  vbox_layout->addWidget (_workspace_tree_view);
+  vbox_layout->setMargin (2);
 
   // Set the empty widget to have our layout.
-  widget ()->setLayout (layout);
+  widget ()->setLayout (vbox_layout);
 
   // Initialize collapse/expand state of the workspace subcategories.
 
   QSettings *settings = resource_manager::get_settings ();
 
   // FIXME -- what should happen if settings is 0?
 
   _explicit_collapse.local      = settings->value ("workspaceview/local_collapsed", false).toBool ();
@@ -200,13 +200,13 @@ workspace_view::expand_requested (QModel
 void
 workspace_view::item_double_clicked (QModelIndex index)
 {
   Q_UNUSED (index);
   // TODO: Implement opening a dialog that allows the user to change a variable in the workspace.
 }
 
 void
-workspace_view::closeEvent (QCloseEvent *event)
+workspace_view::closeEvent (QCloseEvent *e)
 {
   emit active_changed (false);
-  QDockWidget::closeEvent (event);
+  QDockWidget::closeEvent (e);
 }
