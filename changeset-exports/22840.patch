# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1480396621 18000
#      Tue Nov 29 00:17:01 2016 -0500
# Node ID 54ceaeef93201d1e2a22dafebefdc8cc37e6d42e
# Parent  b27125252bb05f578d3c174fac4b31cecc721418
* lo-mappers.h (arg (float)): Cast M_PI result to float.

diff --git a/liboctave/numeric/lo-mappers.h b/liboctave/numeric/lo-mappers.h
--- a/liboctave/numeric/lo-mappers.h
+++ b/liboctave/numeric/lo-mappers.h
@@ -76,17 +76,17 @@ namespace octave
     using std::atan;
 
     // C++ now provides versions of the following funtions for
     // arguments of type std::complex<T> and T.  But some compilers
     // (I'm looking at you, clang) apparently don't get this right
     // yet...  So we provide our own wrappers for real-valued arguments.
 
     inline double arg (double x) { return signbit (x) ? M_PI : 0; }
-    inline float arg (float x) { return signbit (x) ? M_PI : 0; }
+    inline float arg (float x) { return signbit (x) ? static_cast<float> (M_PI) : 0; }
 
     template <typename T>
     T
     arg (const std::complex<T>& x)
     {
       return std::arg (x);
     }
 
