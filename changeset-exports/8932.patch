# HG changeset patch
# User Soren Hauberg <hauberg@gmail.com>
# Date 1236534358 -3600
#      Sun Mar 08 18:45:58 2009 +0100
# Node ID 2d0f8692a82e67610e4a63574dc9c614a79169de
# Parent  92dd386f0f133804d9835c98421e4758b3b92c74
Add the 'histc' function

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-03-08  Søren Hauberg  <hauberg@gmail.com>
+
+	* NEWS: Mention 'histc'.
+
 2009-03-07  John W. Eaton  <jwe@octave.org>
 
 	* config.guess, config.sub: Update from FSF sources.
 
 2009-02-25  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (doc_cache_file): New default variable
 	* Makeconf.in (@doc_cache_file, do-subst-default-vals): Substitute it.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -256,33 +256,33 @@ Summary of important user-visible change
 
     The imwrite and imread functions have been included in Octave.
     These functions require the GraphicsMagick library.  The new
     function imfinfo provides information about an image file (size,
     type, colors, etc.)
 
  ** Other miscellaneous new functions.
 
-      addtodate          idivide                     realpow
-      bicgstab           info                        realsqrt
-      cgs                interp1q                    rectint
-      command_line_path  isdebugmode                 regexptranslate
-      contrast           isfloat                     restoredefaultpath
-      convn              isstrprop                   roundb
-      cummin             log1p                       rundemos
-      cummax             lsqnonneg                   runlength
-      datetick           matlabroot                  saveobj
-      display            namelengthmax               spaugment
-      expm1              nargoutchk                  strchr
-      filemarker         pathdef                     strvcat
-      fstat              perl                        subspace
-      full               prctile                     symvar
-      fzero              quantile                    treelayout
-      genvarname         re_read_readline_init_file  validatestring
-      hypot              reallog
+      addtodate          hypot                       reallog
+      bicgstab           idivide                     realpow
+      cgs                info                        realsqrt
+      command_line_path  interp1q                    rectint
+      contrast           isdebugmode                 regexptranslate
+      convn              isfloat                     restoredefaultpath
+      cummin             isstrprop                   roundb
+      cummax             log1p                       rundemos
+      datetick           lsqnonneg                   runlength
+      display            matlabroot                  saveobj
+      expm1              namelengthmax               spaugment
+      filemarker         nargoutchk                  strchr
+      fstat              pathdef                     strvcat
+      full               perl                        subspace
+      fzero              prctile                     symvar
+      genvarname         quantile                    treelayout
+      histc              re_read_readline_init_file  validatestring
 
  ** Changes to strcat.
 
     The strcat function is now compatible with Matlab's strcat
     function, which removes trailing whitespace when concatenating
     character strings.  For example
 
       strcat ('foo ', 'bar')
diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-08  Søren Hauberg  <hauberg@gmail.com>
+
+	* interpreter/stats.txi (Basic Statistical Functions):
+	Add the 'histc' function.
+
 2009-03-07  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/basics.txi (Command Line Options):
 	Document --doc-cache-file command-line option.
 
 2009-03-06  Jaroslav Hajek  <highegg@gmail.com>
 
 	* interpreter/diagperm.txi: Various improvements.
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -95,16 +95,18 @@ Octave also supports various helpful sta
 @DOCSTRING(mahalanobis)
 
 @DOCSTRING(center)
 
 @DOCSTRING(studentize)
 
 @DOCSTRING(nchoosek)
 
+@DOCSTRING(histc)
+
 @DOCSTRING(perms)
 
 @DOCSTRING(values)
 
 @DOCSTRING(table)
 
 @DOCSTRING(spearman)
 
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2009-03-08  Søren Hauberg <hauberg@gmail.com>
+
+	* statistics/base/histc.m: New function.
+
 2009-03-06  Ben Abbott <bpabbott@mac.com>
 
 	* plot/__go_draw_axes__.m: Preserve the order of axes' children
 	when pruning the handles for the {x,y,z}labels and title.
 	* plot/legend.m: Change demo to add colors to lines. This change
 	reveals the problem (above) with the ordering of the axes' children.
 
 2009-03-05  Jaroslav Hajek  <highegg@gmail.com>
diff --git a/scripts/statistics/base/Makefile.in b/scripts/statistics/base/Makefile.in
--- a/scripts/statistics/base/Makefile.in
+++ b/scripts/statistics/base/Makefile.in
@@ -28,18 +28,18 @@ VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = __quantile__.m center.m cloglog.m cor.m corrcoef.m cov.m \
-  cut.m gls.m iqr.m kendall.m kurtosis.m logit.m mahalanobis.m mean.m \
-  meansq.m median.m mode.m moment.m ols.m ppplot.m prctile.m probit.m \
+  cut.m gls.m histc.m iqr.m kendall.m kurtosis.m logit.m mahalanobis.m \
+  mean.m meansq.m median.m mode.m moment.m ols.m ppplot.m prctile.m probit.m \
   qqplot.m quantile.m range.m ranks.m run_count.m skewness.m spearman.m \
   statistics.m std.m studentize.m table.m values.m var.m
 
 DISTFILES = $(addprefix $(srcdir)/, Makefile.in $(SOURCES))
 
 FCN_FILES = $(addprefix $(srcdir)/, $(SOURCES))
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
diff --git a/scripts/statistics/base/histc.m b/scripts/statistics/base/histc.m
new file mode 100644
--- /dev/null
+++ b/scripts/statistics/base/histc.m
@@ -0,0 +1,119 @@
+## Copyright (C) 2009, SÃ¸ren Hauberg
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+## 02110-1301, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {@var{n} =} histc (@var{y}, @var{edges})
+## @deftypefnx {Function File} {@var{n} =} histc (@var{y}, @var{edges}, @var{dim})
+## @deftypefnx {Function File} {[@var{n}, @var{idx}] =} histc (...)
+## Produce histogram counts.
+##
+## When @var{y} is a vector, the function counts the number of elements of
+## @var{y} that fall in the histogram bins defined by @var{edges}. This must be
+## a vector of monotonically non-decreasing values that define the edges of the
+## histogram bins. So, @code{@var{n} (k)} contains the number of elements in
+## @var{y} for which @code{@var{edges} (k) <= @var{y} < @var{edges} (k+1)}.
+## The final element of @var{n} contains the number of elements of @var{y}
+## that was equal to the last element of @var{edges}.
+##
+## When @var{y} is a @math{N}-dimensional array, the same operation as above is
+## repeated along dimension @var{dim}. If this argument is given, the operation
+## is performed along the first non-singleton dimension.
+##
+## If a second output argument is requested an index matrix is also returned.
+## The @var{idx} matrix has same size as @var{y}. Each element of @var{idx}
+## contains the index of the histogram bin in which the corresponding element
+## of @var{y} was counted.
+##
+## @seealso{hist}
+## @end deftypefn
+
+function [n, idx] = histc (data, edges, dim)
+  ## Check input
+  if (nargin < 2)
+    print_usage ();
+  endif
+
+  sz = size (data);
+  if (nargin < 3)
+    dim = find (sz > 1, 1);
+  endif
+
+  if (!isreal (data))
+    error ("histc: first argument must be real a vector");
+  endif
+  
+  ## Make sure 'edges' is sorted
+  num_edges = numel (edges);
+  if (isreal (edges))
+    edges = edges (:);
+    tmp = sort (edges);
+    if (any (tmp != edges))
+      warning ("histc: edge values not sorted on input");
+      edges = tmp;
+    endif
+  else
+    error ("histc: second argument must be a vector");
+  endif
+
+  ## Allocate the histogram
+  nsz = sz;
+  nsz (dim) = num_edges;
+  n = zeros (nsz);
+  
+  ## Allocate 'idx'
+  if (nargout > 1)
+    idx = zeros (sz);
+  endif
+  
+  ## Prepare indices
+  idx1 = cell (1, dim-1);
+  for k = 1:length (idx1)
+    idx1 {k} = 1:sz (k);
+  endfor
+  idx2 = cell (length (sz) - dim);
+  for k = 1:length (idx2)
+    idx2 {k} = 1:sz (k+dim);
+  endfor
+  
+  ## Compute the histograms
+  for k = 1:num_edges-1
+    b = (edges (k) <= data & data < edges (k+1));
+    n (idx1 {:}, k, idx2 {:}) = sum (b, dim);
+    if (nargout > 1)
+      idx (b) = k;
+    endif
+  endfor
+  b = (data == edges (end));
+  n (idx1 {:}, num_edges, idx2 {:}) = sum (b, dim);
+  if (nargout > 1)
+    idx (b) = num_edges;
+  endif
+
+endfunction
+
+%!test
+%! data = linspace (0, 10, 1001);
+%! n = histc (data, 0:10);
+%! assert (n, [repmat(100, 1, 10), 1]);
+
+%!test
+%! data = repmat (linspace (0, 10, 1001), [2, 1, 3]);
+%! n = histc (data, 0:10, 2);
+%! assert (n, repmat ([repmat(100, 1, 10), 1], [2, 1, 3]));
+
