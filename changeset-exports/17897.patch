# HG changeset patch
# User Julien Bect <julien.bect@supelec.fr>
# Date 1384114241 -3600
#      Sun Nov 10 21:10:41 2013 +0100
# Node ID 185038fe7a164f04d134ef1afa928a18a33410e1
# Parent  f05f571ff1fa89df226923328a84adf1bce60ecd
qp.m: Fix test on GLPK's return status (bug #40536)

* qp.m: Update test on GLPK's return status to comply with the new interface
introduced by changeset 54e251e699bb. Add a regression test.

diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -1,8 +1,9 @@
+## Copyright (C) 2013 Julien Bect
 ## Copyright (C) 2000-2013 Gabriele Pannocchia.
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
@@ -359,17 +360,17 @@ function [x, obj, INFO, lambda] = qp (x0
               Atmp = [Ain, gamma];
               btmp = bin;
             endif
             ctmp = [zeros(n-n_eq, 1); ones(n_in, 1)];
             lb = [-Inf(n-n_eq,1); zeros(n_in,1)];
             ub = [];
             ctype = repmat ("L", n_in, 1);
             [P, dummy, status] = glpk (ctmp, Atmp, btmp, lb, ub, ctype);
-            if ((status == 180 || status == 181 || status == 151)
+            if ((status == 0)
                 && all (abs (P(n-n_eq+1:end)) < rtol * (1 + norm (btmp))))
               ## We found a feasible starting point
               if (n_eq > 0)
                 x0 = xbar + Z*P(1:n-n_eq);
               else
                 x0 = P(1:n);
               endif
             else
@@ -401,8 +402,20 @@ function [x, obj, INFO, lambda] = qp (x0
     INFO.info = info;
 
   else
     print_usage ();
   endif
 
 endfunction
 
+
+%!test  # with infeasible initial guess
+%!
+%! H = 1;  q = 0;                # objective: x -> 0.5 x^2
+%! A = 1;  lb = 1;  ub = +inf;   # constraint: x >= 1
+%! x0 = 0;                       # infeasible initial guess
+%!
+%! [x, obj_qp, INFO, lambda] = qp (x0, H, q, [], [], [], [], lb, A, ub);
+%!
+%! assert (isstruct (INFO) && isfield (INFO, "info") && (INFO.info == 0));
+%! assert ([x obj_qp], [1.0 0.5], eps);
+
