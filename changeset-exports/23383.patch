# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1491835435 -3600
#      Mon Apr 10 15:43:55 2017 +0100
# Node ID 62320e943696431ac0cb17ad66daefcf1475ca76
# Parent  5a3c3ff0316792226fcd19037f8fd3ee94845467
inputParser.m: check if Param key and Switch are strings for better errors.

diff --git a/scripts/general/inputParser.m b/scripts/general/inputParser.m
--- a/scripts/general/inputParser.m
+++ b/scripts/general/inputParser.m
@@ -452,16 +452,20 @@ classdef inputParser < handle
           expanded_options = [fieldnames(name) struct2cell(name)]'(:);
           n_new_args = numel (expanded_options) -1;
           pnargin += n_new_args;
           varargin(vidx+n_new_args+1:pnargin) = varargin(vidx+1:end);
           varargin(vidx:vidx+n_new_args) = expanded_options;
           name = varargin{vidx};
         endif
 
+        if (! ischar (name))
+          this.error ("non-string for Parameter name or Switch");
+        endif
+
         if (this.is_argname ("Parameter", name))
           if (vidx++ > pnargin)
             this.error (sprintf ("no matching value for option '%s'",
                                  toupper (name)));
           endif
           this.validate_arg (this.last_name,
                              this.Parameter.(this.last_name).val,
                              varargin{vidx});
@@ -772,17 +776,18 @@ endclassdef
 %! p.addOptional ("op1", "val1", @ischar);
 %! p.addOptional ("op2", "val2", @isnumeric);
 %! p.addParameter ("line", "circle", @ischar);
 %! fail ('p.parse ("line", 89)', "failed validation of LINE")
 %!
 %! p = inputParser ();
 %! p.addOptional ("op1", "val1");
 %! p.addParamValue ("line", "circle", @ischar);
-%! fail ('p.parse ("line", "line", 89)')
+%! fail ('p.parse ("line", "line", 89)',
+%!       "non-string for Parameter name or Switch")
 
 %!test <50752>
 %! ## This fails in Matlab but works in Octave.  It is a bug there
 %! ## that we do not replicate.
 %! p = inputParser ();
 %! p.addOptional ("op1", "val1");
 %! p.addParameter ("line", "circle");
 %! p.parse ("line");
