# HG changeset patch
# User jwe
# Date 763890250 0
#      Thu Mar 17 07:44:10 1994 +0000
# Node ID c101e99482e64f2edef50dc692795be9da8cadec
# Parent  dd2a919873e8d2dc54047fdfd3415d072247f2b4
[project @ 1994-03-17 07:44:10 by jwe]

diff --git a/src/tc-index.cc b/src/tc-index.cc
--- a/src/tc-index.cc
+++ b/src/tc-index.cc
@@ -104,16 +104,22 @@ tree_constant_rep::do_scalar_index (cons
 		  rows = len;
 	      }
 	    else if (args[1].const_type () == magic_colon
 		     || (args[1].is_scalar_type ()
 			 && NINT (args[1].double_value ()) == 1))
 	      {
 		rows = 1;
 	      }
+	    else if (args[1].is_scalar_type ()
+		     && NINT (args[1].double_value ()) == 0)
+	      {
+		Matrix m (0, 0);
+		return tree_constant (m);
+	      }
 	    else
 	      break;
 
 	    if (cols == 0)
 	      {
 		if (user_pref.prefer_column_vectors)
 		  cols = 1;
 		else
@@ -289,30 +295,30 @@ tree_constant_rep::fortran_style_matrix_
       const double *cop_out_index = mi.data ();
 
       idx_vector iv (mi, 1, "", len);
       if (! iv)
 	return tree_constant ();
 
       int result_size = iv.length ();
 
-      if (columns () == 1 || iv.one_zero_only ())
+      if (nc == 1 || (nr != 1 && iv.one_zero_only ()))
 	{
 	  CRMATRIX (m, cm, result_size, 1);
 
 	  for (int i = 0; i < result_size; i++)
 	    {
 	      int idx = iv.elem (i);
 	      CRMATRIX_ASSIGN_ELEM (m, cm, i, 0, cop_out [idx],
 				    c_cop_out [idx], real_type);
 	    }
 
 	  ASSIGN_CRMATRIX_TO (retval, m, cm);
 	}
-      else if (rows () == 1)
+      else if (nr == 1)
 	{
 	  CRMATRIX (m, cm, 1, result_size);
 
 	  for (int i = 0; i < result_size; i++)
 	    {
 	      int idx = iv.elem (i);
 	      CRMATRIX_ASSIGN_ELEM (m, cm, 0, i, cop_out [idx],
 				    c_cop_out [idx], real_type);
