# HG changeset patch
# User jwe
# Date 1111110864 0
#      Fri Mar 18 01:54:24 2005 +0000
# Node ID 316ddaa7ae5b64badb8841ea65e2fbf971f79d97
# Parent  6434e63553f0471d9cc5507434930cf0ca142ef0
[project @ 2005-03-18 01:54:24 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2005-03-17  Shan G. Smith  <shan@cybertrails.com>
+
+	* configure.in: Move check for -lumfpack to after check for blas.
+
 2005-03-17  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: If first check for -lumfpack fails try again with
 	-lcblas as an additional library.
 
 	* configure.in: Change defaults to enable shared libraries and
 	dynamic linking and disable static libraries.
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.467 $)
+AC_REVISION($Revision: 1.468 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -425,59 +425,16 @@ if test "$with_fftw" = "yes"; then
   fi
 fi
 
 if test "$with_fftw" = yes && test "$with_fftw3" = yes; then
   FFT_DIR=''
   AC_DEFINE(HAVE_FFTW3, 1, [Define if the FFTW3 library is used.])
 fi
 
-# Check for UMFPACK library.
-
-UMFPACK_LIBS=
-AC_SUBST(UMFPACK_LIBS)
-
-AC_ARG_WITH(umfpack,
-  [  --without-umfpack          don't use UMFPACK, disable some sparse functionality],
-  with_umfpack=$withval, with_umfpack=yes)
-
-if test "$with_umfpack" = "yes"; then
-  have_umfpack_header=no
-  with_umfpack=no
-  AC_CHECK_HEADER(umfpack/umfpack.h, [have_umfpack_header=yes; break])
-  if test "$have_umfpack_header" = yes; then
-    AC_CHECK_LIB(amd, amd_postorder, [
-      LIBS="-lamd $LIBS"
-      AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
-        LIBS="-lumfpack $LIBS"
-        UMFPACK_LIBS="-lumfpack"; with_umfpack=yes], [
-	  ## Invalidate the cache.
-	  $as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
-	  AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
-	    LIBS="-lumfpack -lcblas $LIBS"
-            UMFPACK_LIBS="-lumfpack -lcblas"; with_umfpack=yes], [], -lcblas)])])
-    if test "$with_umfpack" = yes; then
-      # For now the code needed for this is not in umfpack, will add
-      # a test later that will probably have to be based on version
-      # numbers as there is no interface changes that are visible at
-      # compile time.
-      with_umfpack_split=no
-    fi
-  fi
-fi
-
-if test "$with_umfpack" = yes; then
-  AC_DEFINE(HAVE_UMFPACK, 1, [Define if the UMFPACK library is used.])
-  if test "$with_umfpack_split" = yes; then
-    AC_DEFINE(UMFPACK_SEPARATE_SPLIT, 1, [Define if the UMFPACK Complex solver allow matrix and RHS to be split independently])
-  fi
-else
-  warn_umfpack="UMFPACK not found.  This will result in some lack of functionality for sparse matrices."
-fi
-
 WITH_MPI=true
 AC_ARG_WITH(mpi,
   [  --without-mpi           don't use MPI],
   with_mpi=$withval, with_mpi=yes)
 
 mpi_lib=
 if test "$with_mpi" = yes; then
   mpi_lib="mpi"
@@ -651,16 +608,59 @@ AC_SUBST_FILE(f77_rules_frag)
 
 sinclude(acx_blas.m4)
 sinclude(acx_lapack.m4)
 ACX_BLAS([], [BLAS_DIR="blas"])
 ACX_LAPACK([BLAS_LIBS="$LAPACK_LIBS $BLAS_LIBS"], [LAPACK_DIR="lapack"])
 AC_SUBST(BLAS_DIR)
 AC_SUBST(LAPACK_DIR)
 
+# Check for UMFPACK library.
+
+UMFPACK_LIBS=
+AC_SUBST(UMFPACK_LIBS)
+
+AC_ARG_WITH(umfpack,
+  [  --without-umfpack          don't use UMFPACK, disable some sparse functionality],
+  with_umfpack=$withval, with_umfpack=yes)
+
+if test "$with_umfpack" = "yes"; then
+  have_umfpack_header=no
+  with_umfpack=no
+  AC_CHECK_HEADER(umfpack/umfpack.h, [have_umfpack_header=yes; break])
+  if test "$have_umfpack_header" = yes; then
+    AC_CHECK_LIB(amd, amd_postorder, [
+      LIBS="-lamd $LIBS"
+      AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
+        LIBS="-lumfpack $LIBS"
+        UMFPACK_LIBS="-lumfpack"; with_umfpack=yes], [
+	  ## Invalidate the cache.
+	  $as_unset ac_cv_lib_umfpack_umfpack_zi_get_determinant
+	  AC_CHECK_LIB(umfpack, umfpack_zi_get_determinant, [
+	    LIBS="-lumfpack -lcblas $LIBS"
+            UMFPACK_LIBS="-lumfpack -lcblas"; with_umfpack=yes], [], -lcblas)])])
+    if test "$with_umfpack" = yes; then
+      # For now the code needed for this is not in umfpack, will add
+      # a test later that will probably have to be based on version
+      # numbers as there is no interface changes that are visible at
+      # compile time.
+      with_umfpack_split=no
+    fi
+  fi
+fi
+
+if test "$with_umfpack" = yes; then
+  AC_DEFINE(HAVE_UMFPACK, 1, [Define if the UMFPACK library is used.])
+  if test "$with_umfpack_split" = yes; then
+    AC_DEFINE(UMFPACK_SEPARATE_SPLIT, 1, [Define if the UMFPACK Complex solver allow matrix and RHS to be split independently])
+  fi
+else
+  warn_umfpack="UMFPACK not found.  This will result in some lack of functionality for sparse matrices."
+fi
+
 ### Handle shared library options.
 
 ### Enable creation of static libraries.
 
 AC_ARG_ENABLE(static,
   [  --enable-static         create static libraries],
   [if test "$enableval" = no; then STATIC_LIBS=false;
    else STATIC_LIBS=true; fi],
