# HG changeset patch
# User Rik <rik@octave.org>
# Date 1453244939 28800
#      Tue Jan 19 15:08:59 2016 -0800
# Node ID 7bb96a8df9122fd4ed12fdf092b3aa0b28d9c7db
# Parent  3d0d84305600efdbb70db6e31e9dd8cfb147cfd2
lo-array-errwarn.h: Don't export string constants unnecessarily.

* lo-array-errwarn.h: Delete "extern const char * [error|warning]_id_XXX"
declarations.

* ov-complex.cc (complex_index_exception::err_id): Use string literal rather
than error_id_invalid_index constant from lo-array-errwarn.h.

* lo-array-errwarn.cc: Declare and initialize
"static const char * [error_warning]_id_XXX]" variables.

* lo-array-gripes.cc: Declare and initialize
"static const char * [error_warning]_id_XXX]" variables.

diff --git a/libinterp/octave-value/ov-complex.cc b/libinterp/octave-value/ov-complex.cc
--- a/libinterp/octave-value/ov-complex.cc
+++ b/libinterp/octave-value/ov-complex.cc
@@ -70,17 +70,17 @@ public:
   std::string details (void) const
   {
     return "subscripts must be real (forgot to initialize i or j?)";
   }
 
   // ID of error to throw.
   const char *err_id (void) const
   {
-    return error_id_invalid_index;
+    return "Octave:invalid-index";
   }
 };
 
 static void
 gripe_complex_index (const Complex& idx)
 {
   std::ostringstream buf;
   buf << std::real (idx) << std::showpos << std::imag (idx) << "i";
diff --git a/liboctave/util/lo-array-errwarn.cc b/liboctave/util/lo-array-errwarn.cc
--- a/liboctave/util/lo-array-errwarn.cc
+++ b/liboctave/util/lo-array-errwarn.cc
@@ -24,25 +24,26 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include <sstream>
 
 #include "lo-array-errwarn.h"
 #include "lo-error.h"
 
-const char *error_id_nonconformant_args = "Octave:nonconformant-args";
+// Text constants used to shorten code below.
+static const char *error_id_nonconformant_args = "Octave:nonconformant-args";
 
-const char *error_id_index_out_of_bounds = "Octave:index-out-of-bounds";
+static const char *error_id_index_out_of_bounds = "Octave:index-out-of-bounds";
 
-const char *error_id_invalid_index = "Octave:invalid-index";
+static const char *error_id_invalid_index = "Octave:invalid-index";
 
-const char *warning_id_nearly_singular_matrix = "Octave:nearly-singular-matrix";
+static const char *warning_id_nearly_singular_matrix = "Octave:nearly-singular-matrix";
 
-const char *warning_id_singular_matrix = "Octave:singular-matrix";
+static const char *warning_id_singular_matrix = "Octave:singular-matrix";
 
 void
 err_nan_to_logical_conversion (void)
 {
   (*current_liboctave_error_handler)
     ("invalid conversion from NaN to logical");
 }
 
diff --git a/liboctave/util/lo-array-errwarn.h b/liboctave/util/lo-array-errwarn.h
--- a/liboctave/util/lo-array-errwarn.h
+++ b/liboctave/util/lo-array-errwarn.h
@@ -94,26 +94,16 @@ protected:
   // Dimension number in which invalid index occurred.
   octave_idx_type dim;
 
   // Name of variable being indexed.
   std::string var;
 
 };
 
-extern OCTAVE_API const char *error_id_nonconformant_args;
-
-extern OCTAVE_API const char *error_id_index_out_of_bounds;
-
-extern OCTAVE_API const char *error_id_invalid_index;
-
-extern OCTAVE_API const char *warning_id_nearly_singular_matrix;
-
-extern OCTAVE_API const char *warning_id_singular_matrix;
-
 OCTAVE_NORETURN OCTAVE_API extern
 void err_nan_to_logical_conversion (void);
 
 OCTAVE_NORETURN OCTAVE_API extern
 void err_nan_to_character_conversion (void);
 
 OCTAVE_NORETURN OCTAVE_API extern
 void err_nonconformant (const char *op,
diff --git a/liboctave/util/lo-array-gripes.cc b/liboctave/util/lo-array-gripes.cc
--- a/liboctave/util/lo-array-gripes.cc
+++ b/liboctave/util/lo-array-gripes.cc
@@ -27,16 +27,27 @@ along with Octave; see the file COPYING.
 #include <config.h>
 #endif
 
 #include <sstream>
 
 #include "lo-array-gripes.h"
 #include "lo-error.h"
 
+// Text constants used to shorten code below.
+static const char *error_id_nonconformant_args = "Octave:nonconformant-args";
+
+static const char *error_id_index_out_of_bounds = "Octave:index-out-of-bounds";
+
+static const char *error_id_invalid_index = "Octave:invalid-index";
+
+static const char *warning_id_nearly_singular_matrix = "Octave:nearly-singular-matrix";
+
+static const char *warning_id_singular_matrix = "Octave:singular-matrix";
+
 void
 gripe_nan_to_logical_conversion (void)
 {
   (*current_liboctave_error_handler)
     ("invalid conversion from NaN to logical");
 }
 
 void
