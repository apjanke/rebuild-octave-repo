# HG changeset patch
# User jwe
# Date 820981900 0
#      Sun Jan 07 02:31:40 1996 +0000
# Node ID 0892abda7553a8178fe53b679d8d96a0aac5fb86
# Parent  597c3ca9f6e85d493ccd05bc400526eef8e9b304
[project @ 1996-01-07 02:28:21 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -388,18 +388,18 @@ Array2<T>::resize (int r, int c, const T
 }
 
 template <class T>
 Array2<T>&
 Array2<T>::insert (const Array2<T>& a, int r, int c)
 {
   int a_rows = a.rows ();
   int a_cols = a.cols ();
-  if (r < 0 || r + a_rows - 1 > rows ()
-      || c < 0 || c + a_cols - 1 > cols ())
+
+  if (r < 0 || r + a_rows > rows () || c < 0 || c + a_cols > cols ())
     {
       (*current_liboctave_error_handler) ("range error for insert");
       return *this;
     }
 
   for (int j = 0; j < a_cols; j++)
     for (int i = 0; i < a_rows; i++)
       elem (r+i, c+j) = a.elem (i, j);
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -124,33 +124,33 @@ Matrix::insert (const Matrix& a, int r, 
   Array2<double>::insert (a, r, c);
   return *this;
 }
 
 Matrix&
 Matrix::insert (const RowVector& a, int r, int c)
 {
   int a_len = a.length ();
-  if (r < 0 || r >= rows () || c < 0 || c + a_len - 1 > cols ())
+  if (r < 0 || r >= rows () || c < 0 || c + a_len > cols ())
     {
       (*current_liboctave_error_handler) ("range error for insert");
       return *this;
     }
 
   for (int i = 0; i < a_len; i++)
     elem (r, c+i) = a.elem (i);
 
   return *this;
 }
 
 Matrix&
 Matrix::insert (const ColumnVector& a, int r, int c)
 {
   int a_len = a.length ();
-  if (r < 0 || r + a_len - 1 > rows () || c < 0 || c >= cols ())
+  if (r < 0 || r + a_len > rows () || c < 0 || c >= cols ())
     {
       (*current_liboctave_error_handler) ("range error for insert");
       return *this;
     }
 
   for (int i = 0; i < a_len; i++)
     elem (r+i, c) = a.elem (i);
 
@@ -158,18 +158,17 @@ Matrix::insert (const ColumnVector& a, i
 }
 
 Matrix&
 Matrix::insert (const DiagMatrix& a, int r, int c)
 {
   int a_nr = a.rows ();
   int a_nc = a.cols ();
 
-  if (r < 0 || r + a_nr - 1 > rows ()
-      || c < 0 || c + a_nc - 1 > cols ())
+  if (r < 0 || r + a_nr > rows () || c < 0 || c + a_nc > cols ())
     {
       (*current_liboctave_error_handler) ("range error for insert");
       return *this;
     }
 
   fill (0.0, r, c, r + a_nr - 1, c + a_nc - 1);
 
   for (int i = 0; i < a.length (); i++)
