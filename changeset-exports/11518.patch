# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1294955550 18000
#      Thu Jan 13 16:52:30 2011 -0500
# Node ID 141b3fb5cef79d33ae78287ce3b894b1682f76f2
# Parent  da8e32c99969ac78226908a2debb7e4799a2916c
style fixes

diff --git a/liboctave/CColVector.cc b/liboctave/CColVector.cc
--- a/liboctave/CColVector.cc
+++ b/liboctave/CColVector.cc
@@ -38,19 +38,21 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const Complex&,
-                           const Complex*, const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&, Complex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const Complex&, const Complex*,
+                           const octave_idx_type&, const Complex*,
+                           const octave_idx_type&, const Complex&,
+                           Complex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Complex Column Vector class
 
 ComplexColumnVector::ComplexColumnVector (const ColumnVector& a)
    : MArray<Complex> (a)
 {
diff --git a/liboctave/CMatrix.cc b/liboctave/CMatrix.cc
--- a/liboctave/CMatrix.cc
+++ b/liboctave/CMatrix.cc
@@ -60,176 +60,206 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+                               F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
                                const octave_idx_type&, const octave_idx_type&,
                                const octave_idx_type&, const octave_idx_type&,
                                octave_idx_type&
-                               F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                               F77_CHAR_ARG_LEN_DECL
+                               F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, Complex*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgemm, ZGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                           const Complex&, const Complex*, const octave_idx_type&,
-                           const Complex*, const octave_idx_type&, const Complex&,
-                           Complex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const octave_idx_type&, const Complex&,
+                           const Complex*, const octave_idx_type&,
+                           const Complex*, const octave_idx_type&,
+                           const Complex&, Complex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const Complex&,
-                           const Complex*, const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&, Complex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const Complex&, const Complex*,
+                           const octave_idx_type&, const Complex*,
+                           const octave_idx_type&, const Complex&,
+                           Complex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, Complex&);
 
   F77_RET_T
-  F77_FUNC (xzdotc, XZDOTC) (const octave_idx_type&, const Complex*, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotc, XZDOTC) (const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, Complex&);
 
   F77_RET_T
   F77_FUNC (zsyrk, ZSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, const octave_idx_type&, 
-                           const Complex&, const Complex*, const octave_idx_type&,
-                           const Complex&, Complex*, const octave_idx_type&
+                           const Complex&, const Complex*,
+                           const octave_idx_type&, const Complex&,
+                           Complex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (zherk, ZHERK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, const octave_idx_type&, 
-                           const double&, const Complex*, const octave_idx_type&,
-                           const double&, Complex*, const octave_idx_type&
+                           const double&, const Complex*,
+                           const octave_idx_type&, const double&, Complex*,
+                           const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&, Complex*, const octave_idx_type&,
+  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zgetrs, ZGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             const octave_idx_type*, Complex*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&,
+                             const octave_idx_type*, Complex*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgetri, ZGETRI) (const octave_idx_type&, Complex*, const octave_idx_type&, const octave_idx_type*,
-                             Complex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgetri, ZGETRI) (const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type*,
+                             Complex*, const octave_idx_type&,
+                             octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zgecon, ZGECON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, Complex*, 
                              const octave_idx_type&, const double&, double&, 
                              Complex*, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgelsy, ZGELSY) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*, double&, octave_idx_type&,
-                             Complex*, const octave_idx_type&, double*, octave_idx_type&);
+  F77_FUNC (zgelsy, ZGELSY) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type*,
+                             double&, octave_idx_type&, Complex*,
+                             const octave_idx_type&, double*,
+                             octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zgelsd, ZGELSD) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, double*, double&, octave_idx_type&,
-                             Complex*, const octave_idx_type&, double*, 
+  F77_FUNC (zgelsd, ZGELSD) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, double*, double&,
+                             octave_idx_type&, Complex*,
+                             const octave_idx_type&, double*, 
                              octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, const double&,
-                             double&, Complex*, double*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (zpotrs, ZPOTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const Complex*, 
-                             const octave_idx_type&, Complex*, 
+  F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ztrtri, ZTRTRI) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const double&,
+                             double&, Complex*, double*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (zpotrs, ZPOTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const Complex*, const octave_idx_type&, Complex*, 
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (ztrtri, ZTRTRI) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const Complex*, 
                              const octave_idx_type&, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ztrcon, ZTRCON) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const Complex*, const octave_idx_type&, double&,
+  F77_FUNC (ztrcon, ZTRCON) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, double&,
                              Complex*, double*, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ztrtrs, ZTRTRS) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const Complex*, 
-                             const octave_idx_type&, Complex*, 
+  F77_FUNC (ztrtrs, ZTRTRS) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const Complex*, const octave_idx_type&, Complex*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zlartg, ZLARTG) (const Complex&, const Complex&,
-                             double&, Complex&, Complex&);
+  F77_FUNC (zlartg, ZLARTG) (const Complex&, const Complex&, double&,
+                             Complex&, Complex&);
 
   F77_RET_T
   F77_FUNC (ztrsyl, ZTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, double&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, double&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xzlange, XZLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&, const Complex*,
-                               const octave_idx_type&, double*, double&
+                               const octave_idx_type&, const octave_idx_type&,
+                               const Complex*, const octave_idx_type&,
+                               double*, double&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 static const Complex Complex_NaN_result (octave_NaN, octave_NaN);
 
 // Complex Matrix class
 
 ComplexMatrix::ComplexMatrix (const Matrix& a)
diff --git a/liboctave/CRowVector.cc b/liboctave/CRowVector.cc
--- a/liboctave/CRowVector.cc
+++ b/liboctave/CRowVector.cc
@@ -37,24 +37,27 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const Complex&,
-                           const Complex*, const octave_idx_type&, const Complex*,
-                           const octave_idx_type&, const Complex&, Complex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const Complex&, const Complex*,
+                           const octave_idx_type&, const Complex*,
+                           const octave_idx_type&, const Complex&, Complex*,
+                           const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*, const octave_idx_type&,
-                             const Complex*, const octave_idx_type&, Complex&);
+  F77_FUNC (xzdotu, XZDOTU) (const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, const Complex*,
+                             const octave_idx_type&, Complex&);
 }
 
 // Complex Row Vector class
 
 bool
 ComplexRowVector::operator == (const ComplexRowVector& a) const
 {
   octave_idx_type len = length ();
diff --git a/liboctave/CSparse.cc b/liboctave/CSparse.cc
--- a/liboctave/CSparse.cc
+++ b/liboctave/CSparse.cc
@@ -62,68 +62,83 @@ along with Octave; see the file COPYING.
 #ifndef USE_QRSOLVE
 #include "sparse-dmsolve.cc"
 #endif
 
 // Fortran functions we call.
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgbtrf, ZGBTRF) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             const octave_idx_type&, Complex*, const octave_idx_type&, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgbtrf, ZGBTRF) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zgbtrs, ZGBTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
+  F77_FUNC (zgbtrs, ZGBTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const octave_idx_type&,
                              const Complex*, const octave_idx_type&,
-                             const octave_idx_type*, Complex*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type*, Complex*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgbcon, ZGBCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const octave_idx_type&, Complex*, 
-                             const octave_idx_type&, const octave_idx_type*, const double&, 
+  F77_FUNC (zgbcon, ZGBCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type*,
+                             const double&, double&, Complex*, double*,
+                             octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (zpbtrf, ZPBTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (zpbtrs, ZPBTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (zpbcon, ZPBCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&, const double&,
                              double&, Complex*, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zpbtrf, ZPBTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, Complex*, const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (zgttrf, ZGTTRF) (const octave_idx_type&, Complex*, Complex*,
+                             Complex*, Complex*, octave_idx_type*,
+                             octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zpbtrs, ZPBTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const octave_idx_type&, Complex*, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (zpbcon, ZPBCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, Complex*, const octave_idx_type&, 
-                             const double&, double&, Complex*, double*, octave_idx_type&
+  F77_FUNC (zgttrs, ZGTTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const Complex*, const Complex*, const Complex*,
+                             const Complex*, const octave_idx_type*,
+                             Complex *, const octave_idx_type&,
+                             octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zgttrf, ZGTTRF) (const octave_idx_type&, Complex*, Complex*, Complex*,
-                             Complex*, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&,
+                           double*, Complex*, Complex*,
+                           const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zgttrs, ZGTTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             const octave_idx_type&, const Complex*, const Complex*,
-                             const Complex*, const Complex*, const octave_idx_type*,
-                             Complex *, const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&, double*, Complex*,
-                           Complex*, const octave_idx_type&, octave_idx_type&);
-
-  F77_RET_T
-  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&, Complex*, Complex*,
-                           Complex*, Complex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&,
+                           Complex*, Complex*, Complex*, Complex*,
+                           const octave_idx_type&, octave_idx_type&);
 }
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseMatrix& a)
   : MSparse<Complex> (a)
 {
 }
 
 SparseComplexMatrix::SparseComplexMatrix (const SparseBoolMatrix& a)
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,22 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* CColVector.cc, CMatrix.cc, CRowVector.cc, CSparse.cc,
+	CmplxAEPBAL.cc, CmplxCHOL.cc, CmplxLU.cc, CmplxQR.cc,
+	CmplxQRP.cc, EIG.cc, Quad.cc, dColVector.cc, dMatrix.cc,
+	dRowVector.cc, dSparse.cc, dbleAEPBAL.cc, dbleCHOL.cc,
+	dbleLU.cc, dbleQR.cc, dbleQRP.cc, eigs-base.cc, fCColVector.cc,
+	fCMatrix.cc, fCNDArray.cc, fCRowVector.cc, fCmplxAEPBAL.cc,
+	fCmplxCHOL.cc, fCmplxLU.cc, fCmplxQR.cc, fCmplxQRP.cc,
+	fCmplxSVD.cc, fColVector.cc, fEIG.cc, fMatrix.cc, fNDArray.cc,
+	fRowVector.cc, floatAEPBAL.cc, floatCHOL.cc, floatLU.cc,
+	floatQR.cc, floatQRP.cc, lo-specfun.cc, oct-convn.cc:
+	Style fixes.
+
 2011-01-13  John W. Eaton  <jwe@octave.org>
 
 	* CMatrix.cc (get_blas_trans_arg): Return char, not char *.
 	Change all uses.
 	* dMatrix.cc (get_blas_trans_arg): Likewise.
 	* fCMatrix.cc (get_blas_trans_arg): Likewise.
 	* fMatrix.cc (get_blas_trans_arg): Likewise.
 	Suggested by Pascal Dupuis  <Pascal.Dupuis@worldonline.be>.
diff --git a/liboctave/CmplxAEPBAL.cc b/liboctave/CmplxAEPBAL.cc
--- a/liboctave/CmplxAEPBAL.cc
+++ b/liboctave/CmplxAEPBAL.cc
@@ -30,28 +30,31 @@ along with Octave; see the file COPYING.
 
 #include "CmplxAEPBAL.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             Complex*, const octave_idx_type&,
-                             octave_idx_type&, octave_idx_type&, double*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (zgebal, ZGEBAL) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type&,
+                             octave_idx_type&, double*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
  
   F77_RET_T
-  F77_FUNC (zgebak, ZGEBAK) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (zgebak, ZGEBAK) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, const double*,
                              const octave_idx_type&, Complex*,
                              const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL  F77_CHAR_ARG_LEN_DECL);
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL);
 }
 
 ComplexAEPBALANCE::ComplexAEPBALANCE (const ComplexMatrix& a, 
                                       bool noperm, bool noscal)
   : base_aepbal<ComplexMatrix, ColumnVector> ()
 {
   octave_idx_type n = a.cols ();
 
diff --git a/liboctave/CmplxCHOL.cc b/liboctave/CmplxCHOL.cc
--- a/liboctave/CmplxCHOL.cc
+++ b/liboctave/CmplxCHOL.cc
@@ -37,29 +37,32 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
 #include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (zpotri, ZPOTRI) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (zpotri, ZPOTRI) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, const double&,
-                             double&, Complex*, double*, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (zpocon, ZPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const double&,
+                             double&, Complex*, double*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
   F77_FUNC (zch1up, ZCH1UP) (const octave_idx_type&, Complex*,
                              const octave_idx_type&, Complex*, double*);
 
   F77_RET_T
   F77_FUNC (zch1dn, ZCH1DN) (const octave_idx_type&, Complex*,
diff --git a/liboctave/CmplxLU.cc b/liboctave/CmplxLU.cc
--- a/liboctave/CmplxLU.cc
+++ b/liboctave/CmplxLU.cc
@@ -39,18 +39,19 @@ along with Octave; see the file COPYING.
 
 template class base_lu <ComplexMatrix>;
 
 // Define the constructor for this particular derivation.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (zgetrf, ZGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE_LUU
   F77_RET_T
   F77_FUNC (zlu1up, ZLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              Complex *, const octave_idx_type&,
                              Complex *, const octave_idx_type&,
                              Complex *, Complex *);
 
diff --git a/liboctave/CmplxQR.cc b/liboctave/CmplxQR.cc
--- a/liboctave/CmplxQR.cc
+++ b/liboctave/CmplxQR.cc
@@ -36,57 +36,68 @@ along with Octave; see the file COPYING.
 
 #include "base-qr.cc"
 
 template class base_qr<ComplexMatrix>;
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgeqrf, ZGEQRF) (const octave_idx_type&, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, Complex*, Complex*,
-                             const octave_idx_type&, octave_idx_type&); 
+  F77_FUNC (zgeqrf, ZGEQRF) (const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&, Complex*,
+                             Complex*, const octave_idx_type&,
+                             octave_idx_type&); 
 
   F77_RET_T
-  F77_FUNC (zungqr, ZUNGQR) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*,
-                             Complex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zungqr, ZUNGQR) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*, Complex*,
+                             const octave_idx_type&, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
-  F77_FUNC (zqr1up, ZQR1UP) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             Complex*, Complex*, Complex*, double*);
+  F77_FUNC (zqr1up, ZQR1UP) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             Complex*, Complex*, double*);
 
   F77_RET_T
-  F77_FUNC (zqrinc, ZQRINC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             const octave_idx_type&, const Complex*, double*);
+  F77_FUNC (zqrinc, ZQRINC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const Complex*, double*);
 
   F77_RET_T
-  F77_FUNC (zqrdec, ZQRDEC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             const octave_idx_type&, double*);
+  F77_FUNC (zqrdec, ZQRDEC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             double*);
 
   F77_RET_T
   F77_FUNC (zqrinr, ZQRINR) (const octave_idx_type&, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             const octave_idx_type&, const Complex*, double*);
+                             Complex*, const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const Complex*, double*);
 
   F77_RET_T
   F77_FUNC (zqrder, ZQRDER) (const octave_idx_type&, const octave_idx_type&, 
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
-                             const octave_idx_type&, Complex*, double*);
+                             Complex*, const octave_idx_type&, Complex*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             Complex*, double*);
 
   F77_RET_T
-  F77_FUNC (zqrshc, ZQRSHC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             Complex*, const octave_idx_type&, Complex*, const octave_idx_type&,
+  F77_FUNC (zqrshc, ZQRSHC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, Complex*,
+                             const octave_idx_type&, Complex*,
                              const octave_idx_type&, const octave_idx_type&,
-                             Complex*, double*);
+                             const octave_idx_type&, Complex*, double*);
 
 #endif
 }
 
 ComplexQR::ComplexQR (const ComplexMatrix& a, qr_type_t qr_type)
 {
   init (a, qr_type);
 }
diff --git a/liboctave/CmplxQRP.cc b/liboctave/CmplxQRP.cc
--- a/liboctave/CmplxQRP.cc
+++ b/liboctave/CmplxQRP.cc
@@ -31,19 +31,21 @@ along with Octave; see the file COPYING.
 #include "CmplxQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (zgeqp3, ZGEQP3) (const octave_idx_type&, const octave_idx_type&, Complex*,
-                             const octave_idx_type&, octave_idx_type*, Complex*, Complex*,
-                             const octave_idx_type&, double*, octave_idx_type&);
+  F77_FUNC (zgeqp3, ZGEQP3) (const octave_idx_type&, const octave_idx_type&,
+                             Complex*, const octave_idx_type&,
+                             octave_idx_type*, Complex*, Complex*,
+                             const octave_idx_type&, double*,
+                             octave_idx_type&);
 }
 
 // It would be best to share some of this code with ComplexQR class...
 
 ComplexQRP::ComplexQRP (const ComplexMatrix& a, qr_type_t qr_type)
   : ComplexQR (), p ()
 {
   init (a, qr_type);
diff --git a/liboctave/EIG.cc b/liboctave/EIG.cc
--- a/liboctave/EIG.cc
+++ b/liboctave/EIG.cc
@@ -98,17 +98,18 @@ extern "C"
                            const octave_idx_type&, double*,
                            const octave_idx_type&, double*,
                            const octave_idx_type&, octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dsygv, DSYGV) (const octave_idx_type&,
-                           F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
+                           F77_CONST_CHAR_ARG_DECL,
+                           F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, double*,
                            const octave_idx_type&, double*,
                            const octave_idx_type&, double*, double*,
                            const octave_idx_type&, octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
diff --git a/liboctave/Quad.cc b/liboctave/Quad.cc
--- a/liboctave/Quad.cc
+++ b/liboctave/Quad.cc
@@ -42,39 +42,45 @@ int quad_integration_error = 0;
 
 typedef octave_idx_type (*quad_fcn_ptr) (double*, int&, double*);
 typedef octave_idx_type (*quad_float_fcn_ptr) (float*, int&, float*);
                               
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dqagp, DQAGP) (quad_fcn_ptr, const double&, const double&,
-                           const octave_idx_type&, const double*, const double&,
-                           const double&, double&, double&, octave_idx_type&,
-                           octave_idx_type&, const octave_idx_type&, const octave_idx_type&, octave_idx_type&, octave_idx_type*,
-                           double*);
+                           const octave_idx_type&, const double*,
+                           const double&, const double&, double&,
+                           double&, octave_idx_type&, octave_idx_type&,
+                           const octave_idx_type&, const octave_idx_type&,
+                           octave_idx_type&, octave_idx_type*, double*);
 
   F77_RET_T
-  F77_FUNC (dqagi, DQAGI) (quad_fcn_ptr, const double&, const octave_idx_type&,
-                           const double&, const double&, double&,
-                           double&, octave_idx_type&, octave_idx_type&, const octave_idx_type&,
-                           const octave_idx_type&, octave_idx_type&, octave_idx_type*, double*); 
+  F77_FUNC (dqagi, DQAGI) (quad_fcn_ptr, const double&,
+                           const octave_idx_type&, const double&,
+                           const double&, double&, double&,
+                           octave_idx_type&, octave_idx_type&,
+                           const octave_idx_type&, const octave_idx_type&,
+                           octave_idx_type&, octave_idx_type*, double*); 
 
   F77_RET_T
   F77_FUNC (qagp, QAGP) (quad_float_fcn_ptr, const float&, const float&,
                          const octave_idx_type&, const float*, const float&,
                          const float&, float&, float&, octave_idx_type&,
-                         octave_idx_type&, const octave_idx_type&, const octave_idx_type&, octave_idx_type&, octave_idx_type*,
-                         float*);
+                         octave_idx_type&, const octave_idx_type&,
+                         const octave_idx_type&, octave_idx_type&,
+                         octave_idx_type*, float*);
 
   F77_RET_T
-  F77_FUNC (qagi, QAGI) (quad_float_fcn_ptr, const float&, const octave_idx_type&,
-                         const float&, const float&, float&,
-                         float&, octave_idx_type&, octave_idx_type&, const octave_idx_type&,
-                         const octave_idx_type&, octave_idx_type&, octave_idx_type*, float*); 
+  F77_FUNC (qagi, QAGI) (quad_float_fcn_ptr, const float&,
+                         const octave_idx_type&, const float&,
+                         const float&, float&, float&, octave_idx_type&,
+                         octave_idx_type&, const octave_idx_type&,
+                         const octave_idx_type&, octave_idx_type&,
+                         octave_idx_type*, float*); 
 }
 
 static octave_idx_type
 user_function (double *x, int& ierr, double *result)
 {
   BEGIN_INTERRUPT_WITH_EXCEPTIONS;
 
 #if defined (__sparc) && defined (__GNUC__)
diff --git a/liboctave/dColVector.cc b/liboctave/dColVector.cc
--- a/liboctave/dColVector.cc
+++ b/liboctave/dColVector.cc
@@ -38,18 +38,19 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const double&,
-                           const double*, const octave_idx_type&, const double*,
+                           const octave_idx_type&, const octave_idx_type&,
+                           const double&, const double*,
+                           const octave_idx_type&, const double*,
                            const octave_idx_type&, const double&, double*,
                            const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Column Vector class.
 
 bool
diff --git a/liboctave/dMatrix.cc b/liboctave/dMatrix.cc
--- a/liboctave/dMatrix.cc
+++ b/liboctave/dMatrix.cc
@@ -58,161 +58,188 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #include "quit.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+                               F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
                                const octave_idx_type&, const octave_idx_type&,
                                const octave_idx_type&, const octave_idx_type&,
                                octave_idx_type&
-                               F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                               F77_CHAR_ARG_LEN_DECL
+                               F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
 
   F77_RET_T
   F77_FUNC (dgemm, DGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                           const double&, const double*, const octave_idx_type&,
-                           const double*, const octave_idx_type&, const double&,
-                           double*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const octave_idx_type&, const double&,
+                           const double*, const octave_idx_type&,
+                           const double*, const octave_idx_type&,
+                           const double&, double*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const double&,
-                           const double*, const octave_idx_type&, const double*,
+                           const octave_idx_type&, const octave_idx_type&,
+                           const double&, const double*,
+                           const octave_idx_type&, const double*,
                            const octave_idx_type&, const double&, double*,
                            const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*, const octave_idx_type&,
-                           const double*, const octave_idx_type&, double&);
+  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*,
+                           const octave_idx_type&, const double*,
+                           const octave_idx_type&, double&);
 
   F77_RET_T
   F77_FUNC (dsyrk, DSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, const octave_idx_type&, 
                            const double&, const double*, const octave_idx_type&,
                            const double&, double*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&, double*, const octave_idx_type&,
-                      octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             double*, const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgetrs, DGETRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, const octave_idx_type&, 
+  F77_FUNC (dgetrs, DGETRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
                              const double*, const octave_idx_type&,
-                             const octave_idx_type*, double*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type*, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgetri, DGETRI) (const octave_idx_type&, double*, const octave_idx_type&, const octave_idx_type*,
-                             double*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgetri, DGETRI) (const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type*,
+                             double*, const octave_idx_type&,
+                             octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgecon, DGECON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, double*, 
+  F77_FUNC (dgecon, DGECON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double*, 
                              const octave_idx_type&, const double&, double&, 
                              double*, octave_idx_type*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgelsy, DGELSY) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*, double&, octave_idx_type&,
-                             double*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dgelsy, DGELSY) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type*,
+                             double&, octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgelsd, DGELSD) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double&, octave_idx_type&,
-                             double*, const octave_idx_type&, octave_idx_type*,
+  F77_FUNC (dgelsd, DGELSD) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*, double&,
+                             octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type*,
                              octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             double *, const octave_idx_type&, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             double*, const octave_idx_type&, const double&,
-                             double&, double*, octave_idx_type*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-  F77_RET_T
-  F77_FUNC (dpotrs, DPOTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const double*, 
-                             const octave_idx_type&, double*, 
+  F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double *,
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dtrtri, DTRTRI) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, const double&,
+                             double&, double*, octave_idx_type*,
+                             octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+  F77_RET_T
+  F77_FUNC (dpotrs, DPOTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const double*, const octave_idx_type&, double*, 
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (dtrtri, DTRTRI) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const double*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (dtrcon, DTRCON) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const double*, const octave_idx_type&, double&,
+  F77_FUNC (dtrcon, DTRCON) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const double*,
+                             const octave_idx_type&, double&,
                              double*, octave_idx_type*, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (dtrtrs, DTRTRS) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const double*, 
-                             const octave_idx_type&, double*, 
+  F77_FUNC (dtrtrs, DTRTRS) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const double*, const octave_idx_type&, double*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dlartg, DLARTG) (const double&, const double&, double&,
                              double&, double&);
 
   F77_RET_T
   F77_FUNC (dtrsyl, DTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             const double*, const octave_idx_type&, const double*,
-                             const octave_idx_type&, const double*, const octave_idx_type&,
-                             double&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const double*,
+                             const octave_idx_type&, const double*,
+                             const octave_idx_type&, const double*,
+                             const octave_idx_type&, double&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xdlange, XDLANGE) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                               const octave_idx_type&, const double*,
-                               const octave_idx_type&, double*, double&
+  F77_FUNC (xdlange, XDLANGE) (F77_CONST_CHAR_ARG_DECL,
+                               const octave_idx_type&, const octave_idx_type&,
+                               const double*, const octave_idx_type&,
+                               double*, double&
                                F77_CHAR_ARG_LEN_DECL); 
 }
 
 // Matrix class.
 
 Matrix::Matrix (const RowVector& rv)
   : MArray<double> (rv)
 {
diff --git a/liboctave/dRowVector.cc b/liboctave/dRowVector.cc
--- a/liboctave/dRowVector.cc
+++ b/liboctave/dRowVector.cc
@@ -37,23 +37,26 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const double&,
-                           const double*, const octave_idx_type&, const double*,
-                           const octave_idx_type&, const double&, double*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const double&, const double*,
+                           const octave_idx_type&, const double*,
+                           const octave_idx_type&, const double&,
+                           double*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*, const octave_idx_type&,
-                           const double*, const octave_idx_type&, double&);
+  F77_FUNC (xddot, XDDOT) (const octave_idx_type&, const double*,
+                           const octave_idx_type&, const double*,
+                           const octave_idx_type&, double&);
 }
 
 // Row Vector class.
 
 bool
 RowVector::operator == (const RowVector& a) const
 {
   octave_idx_type len = length ();
diff --git a/liboctave/dSparse.cc b/liboctave/dSparse.cc
--- a/liboctave/dSparse.cc
+++ b/liboctave/dSparse.cc
@@ -68,71 +68,86 @@ extern "C"
 {
   F77_RET_T
   F77_FUNC (dgbtrf, DGBTRF) (const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, const octave_idx_type&,
                              double*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgbtrs, DGBTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
+  F77_FUNC (dgbtrs, DGBTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const octave_idx_type&,
                              const double*, const octave_idx_type&,
-                             const octave_idx_type*, double*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type*, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dgbcon, DGBCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const octave_idx_type&, double*, 
-                             const octave_idx_type&, const octave_idx_type*, const double&, 
-                             double&, double*, octave_idx_type*, octave_idx_type&
+  F77_FUNC (dgbcon, DGBCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type*,
+                             const double&, double&, double*,
+                             octave_idx_type*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dpbtrf, DPBTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (dpbtrs, DPBTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const octave_idx_type&, double*, const octave_idx_type&, 
+  F77_FUNC (dpbtrf, DPBTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
                              double*, const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dpbcon, DPBCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, double*, const octave_idx_type&, 
-                             const double&, double&, double*, octave_idx_type*, octave_idx_type&
+  F77_FUNC (dpbtrs, DPBTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
-  F77_RET_T
-  F77_FUNC (dptsv, DPTSV) (const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           double*, const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgtsv, DGTSV) (const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           double*, double*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dpbcon, DPBCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             double*, const octave_idx_type&,
+                             const double&, double&, double*,
+                             octave_idx_type*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+  F77_RET_T
+  F77_FUNC (dptsv, DPTSV) (const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, double*, const octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgttrf, DGTTRF) (const octave_idx_type&, double*, double*, double*, double*,
-                             octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgtsv, DGTSV) (const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, double*, double*,
+                           const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (dgttrs, DGTTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             const octave_idx_type&, const double*, const double*,
-                             const double*, const double*, const octave_idx_type*,
+  F77_FUNC (dgttrf, DGTTRF) (const octave_idx_type&, double*, double*,
+                             double*, double*, octave_idx_type*,
+                             octave_idx_type&);
+
+  F77_RET_T
+  F77_FUNC (dgttrs, DGTTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const double*, const double*, const double*,
+                             const double*, const octave_idx_type*,
                              double *, const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&, double*, Complex*,
-                           Complex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zptsv, ZPTSV) (const octave_idx_type&, const octave_idx_type&,
+                           double*, Complex*, Complex*, const octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&, Complex*, Complex*,
-                           Complex*, Complex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zgtsv, ZGTSV) (const octave_idx_type&, const octave_idx_type&,
+                           Complex*, Complex*, Complex*, Complex*,
+                           const octave_idx_type&, octave_idx_type&);
 
 }
 
 SparseMatrix::SparseMatrix (const SparseBoolMatrix &a)
   : MSparse<double> (a.rows (), a.cols (), a.nnz ())
 {
   octave_idx_type nc = cols ();
   octave_idx_type nz = a.nnz ();
diff --git a/liboctave/dbleAEPBAL.cc b/liboctave/dbleAEPBAL.cc
--- a/liboctave/dbleAEPBAL.cc
+++ b/liboctave/dbleAEPBAL.cc
@@ -30,25 +30,27 @@ along with Octave; see the file COPYING.
 
 #include "dbleAEPBAL.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgebal, DGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, double*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, double*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgebak, DGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             const double*, const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const double*,
+                             const octave_idx_type&, double*,
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 AEPBALANCE::AEPBALANCE (const Matrix& a, bool noperm, bool noscal)
   : base_aepbal<Matrix, ColumnVector> ()
 {
diff --git a/liboctave/dbleCHOL.cc b/liboctave/dbleCHOL.cc
--- a/liboctave/dbleCHOL.cc
+++ b/liboctave/dbleCHOL.cc
@@ -36,30 +36,34 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
 #include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             double*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dpotri, DPOTRI) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             double*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (dpotri, DPOTRI) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             double*, const octave_idx_type&, const double&,
+  F77_FUNC (dpocon, DPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, const double&,
                              double&, double*, octave_idx_type*, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+                             octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
   F77_FUNC (dch1up, DCH1UP) (const octave_idx_type&, double*,
                              const octave_idx_type&, double*, double*);
 
   F77_RET_T
   F77_FUNC (dch1dn, DCH1DN) (const octave_idx_type&, double*,
diff --git a/liboctave/dbleLU.cc b/liboctave/dbleLU.cc
--- a/liboctave/dbleLU.cc
+++ b/liboctave/dbleLU.cc
@@ -39,18 +39,19 @@ along with Octave; see the file COPYING.
 
 template class base_lu <Matrix>;
 
 // Define the constructor for this particular derivation.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (dgetrf, DGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             double*, const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE_LUU
   F77_RET_T
   F77_FUNC (dlu1up, DLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              double *, const octave_idx_type&,
                              double *, const octave_idx_type&,
                              double *, double *);
 
diff --git a/liboctave/dbleQR.cc b/liboctave/dbleQR.cc
--- a/liboctave/dbleQR.cc
+++ b/liboctave/dbleQR.cc
@@ -36,55 +36,67 @@ along with Octave; see the file COPYING.
 
 #include "base-qr.cc"
 
 template class base_qr<Matrix>;
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgeqrf, DGEQRF) (const octave_idx_type&, const octave_idx_type&, double*, const octave_idx_type&,
-                             double*, double*, const octave_idx_type&, octave_idx_type&); 
+  F77_FUNC (dgeqrf, DGEQRF) (const octave_idx_type&, const octave_idx_type&,
+                             double*, const octave_idx_type&, double*,
+                             double*, const octave_idx_type&,
+                             octave_idx_type&); 
 
   F77_RET_T
-  F77_FUNC (dorgqr, DORGQR) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, double*,
-                             const octave_idx_type&, double*, double*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (dorgqr, DORGQR) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*, double*,
+                             const octave_idx_type&, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
-  F77_FUNC (dqr1up, DQR1UP) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             double*, double*, double*);
+  F77_FUNC (dqr1up, DQR1UP) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*, double*, double*);
 
   F77_RET_T
-  F77_FUNC (dqrinc, DQRINC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             const octave_idx_type&, const double*, double*);
+  F77_FUNC (dqrinc, DQRINC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const double*, double*);
 
   F77_RET_T
-  F77_FUNC (dqrdec, DQRDEC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             const octave_idx_type&, double*);
+  F77_FUNC (dqrdec, DQRDEC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             double*);
 
   F77_RET_T
   F77_FUNC (dqrinr, DQRINR) (const octave_idx_type&, const octave_idx_type&, 
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             const octave_idx_type&, const double*, double*);
+                             double*, const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const double*, double*);
 
   F77_RET_T
   F77_FUNC (dqrder, DQRDER) (const octave_idx_type&, const octave_idx_type&, 
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
-                             const octave_idx_type&, double*);
+                             double*, const octave_idx_type&, double*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             double*);
 
   F77_RET_T
-  F77_FUNC (dqrshc, DQRSHC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             double*, const octave_idx_type&, double*, const octave_idx_type&,
+  F77_FUNC (dqrshc, DQRSHC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, double*,
                              const octave_idx_type&, const octave_idx_type&,
-                             double*);
+                             const octave_idx_type&, double*);
 
 #endif
 }
 
 const QR::type QR::raw, QR::std, QR::economy;
 
 QR::QR (const Matrix& a, qr_type_t qr_type)
 {
diff --git a/liboctave/dbleQRP.cc b/liboctave/dbleQRP.cc
--- a/liboctave/dbleQRP.cc
+++ b/liboctave/dbleQRP.cc
@@ -31,18 +31,19 @@ along with Octave; see the file COPYING.
 #include "dbleQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dgeqp3, DGEQP3) (const octave_idx_type&, const octave_idx_type&, double*,
-                             const octave_idx_type&, octave_idx_type*, double*, double*,
+  F77_FUNC (dgeqp3, DGEQP3) (const octave_idx_type&, const octave_idx_type&,
+                             double*, const octave_idx_type&,
+                             octave_idx_type*, double*, double*,
                              const octave_idx_type&, octave_idx_type&);
 }
 
 // It would be best to share some of this code with QR class...
 
 QRP::QRP (const Matrix& a, qr_type_t qr_type)
   : QR (), p ()
 {
diff --git a/liboctave/eigs-base.cc b/liboctave/eigs-base.cc
--- a/liboctave/eigs-base.cc
+++ b/liboctave/eigs-base.cc
@@ -48,90 +48,111 @@ along with Octave; see the file COPYING.
 typedef ColumnVector (*EigsFunc) (const ColumnVector &x, int &eigs_error);
 typedef ComplexColumnVector (*EigsComplexFunc) 
   (const ComplexColumnVector &x, int &eigs_error);
 
 // Arpack and blas fortran functions we call.
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dsaupd, DSAUPD) (octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (dsaupd, DSAUPD) (octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const double&,
                              double*, const octave_idx_type&, double*,
                              const octave_idx_type&, octave_idx_type*,
                              octave_idx_type*, double*, double*, 
                              const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (dseupd, DSEUPD) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
-                             octave_idx_type*, double*, double*,
-                             const octave_idx_type&, const double&,
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const double&, double*, const octave_idx_type&, 
-                             double*, const octave_idx_type&, octave_idx_type*,
-                             octave_idx_type*, double*, double*, 
-                             const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dnaupd, DNAUPD) (octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (dseupd, DSEUPD) (const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
+                             octave_idx_type*, double*, double*,
+                             const octave_idx_type&, const double&,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const double&, double*,
+                             const octave_idx_type&, double*,
+                             const octave_idx_type&, octave_idx_type*,
+                             octave_idx_type*, double*, double*, 
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (dnaupd, DNAUPD) (octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL, 
                              octave_idx_type&, const double&,
                              double*, const octave_idx_type&, double*,
                              const octave_idx_type&, octave_idx_type*,
                              octave_idx_type*, double*, double*, 
                              const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (dneupd, DNEUPD) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (dneupd, DNEUPD) (const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
                              octave_idx_type*, double*, double*,
                              double*, const octave_idx_type&, const double&,
-                             const double&, double*, F77_CONST_CHAR_ARG_DECL, 
-                             const octave_idx_type&, F77_CONST_CHAR_ARG_DECL, 
+                             const double&, double*,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL, 
                              octave_idx_type&, const double&, double*, 
                              const octave_idx_type&, double*, 
                              const octave_idx_type&, octave_idx_type*, 
                              octave_idx_type*, double*, double*, 
                              const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (znaupd, ZNAUPD) (octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (znaupd, ZNAUPD) (octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, const double&,
                              Complex*, const octave_idx_type&, Complex*,
                              const octave_idx_type&, octave_idx_type*,
                              octave_idx_type*, Complex*, Complex*, 
                              const octave_idx_type&, double *, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (zneupd, ZNEUPD) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (zneupd, ZNEUPD) (const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL,
                              octave_idx_type*, Complex*, Complex*, 
-                             const octave_idx_type&, const Complex&,
-                             Complex*, F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, F77_CONST_CHAR_ARG_DECL, 
+                             const octave_idx_type&, const Complex&, Complex*,
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const double&,
                              Complex*, const octave_idx_type&, Complex*,
                              const octave_idx_type&, octave_idx_type*,
                              octave_idx_type*, Complex*, Complex*, 
                              const octave_idx_type&, double *, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (dgemv, DGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const double&,
-                           const double*, const octave_idx_type&, const double*,
+                           const octave_idx_type&, const octave_idx_type&,
+                           const double&, const double*,
+                           const octave_idx_type&, const double*,
                            const octave_idx_type&, const double&, double*,
                            const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
 
   F77_RET_T
   F77_FUNC (zgemv, ZGEMV) (F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, const octave_idx_type&, const Complex&,
diff --git a/liboctave/fCColVector.cc b/liboctave/fCColVector.cc
--- a/liboctave/fCColVector.cc
+++ b/liboctave/fCColVector.cc
@@ -38,19 +38,21 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const FloatComplex&,
-                           const FloatComplex*, const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&, FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const FloatComplex&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex&,
+                           FloatComplex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // FloatComplex Column Vector class
 
 FloatComplexColumnVector::FloatComplexColumnVector (const FloatColumnVector& a)
    : MArray<FloatComplex> (a)
 {
diff --git a/liboctave/fCMatrix.cc b/liboctave/fCMatrix.cc
--- a/liboctave/fCMatrix.cc
+++ b/liboctave/fCMatrix.cc
@@ -59,176 +59,208 @@ along with Octave; see the file COPYING.
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+                               F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
                                const octave_idx_type&, const octave_idx_type&,
                                const octave_idx_type&, const octave_idx_type&,
                                octave_idx_type&
-                               F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                               F77_CHAR_ARG_LEN_DECL
+                               F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, FloatComplex*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, float*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgemm, CGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                           const FloatComplex&, const FloatComplex*, const octave_idx_type&,
-                           const FloatComplex*, const octave_idx_type&, const FloatComplex&,
-                           FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const octave_idx_type&, const FloatComplex&,
+                           const FloatComplex*, const octave_idx_type&,
+                           const FloatComplex*, const octave_idx_type&,
+                           const FloatComplex&, FloatComplex*,
+                           const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const FloatComplex&,
-                           const FloatComplex*, const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&, FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const FloatComplex&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex&,
+                           FloatComplex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, FloatComplex&);
 
   F77_RET_T
-  F77_FUNC (xcdotc, XCDOTC) (const octave_idx_type&, const FloatComplex*, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotc, XCDOTC) (const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, FloatComplex&);
 
   F77_RET_T
   F77_FUNC (csyrk, CSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, 
-                           const FloatComplex&, const FloatComplex*, const octave_idx_type&,
-                           const FloatComplex&, FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const FloatComplex&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex&,
+                           FloatComplex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (cherk, CHERK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, 
-                           const float&, const FloatComplex*, const octave_idx_type&,
-                           const float&, FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const float&, const FloatComplex*,
+                           const octave_idx_type&, const float&,
+                           FloatComplex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
+  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
                              octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cgetrs, CGETRS) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type*, FloatComplex*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             const octave_idx_type*, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgetri, CGETRI) (const octave_idx_type&, FloatComplex*, const octave_idx_type&, const octave_idx_type*,
-                             FloatComplex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cgetri, CGETRI) (const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, const octave_idx_type*,
+                             FloatComplex*, const octave_idx_type&,
+                             octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cgecon, CGECON) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, FloatComplex*, 
                              const octave_idx_type&, const float&, float&, 
                              FloatComplex*, float*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cgelsy, CGELSY) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type*, float&, octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, float*, octave_idx_type&);
+  F77_FUNC (cgelsy, CGELSY) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type*,
+                             float&, octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, float*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (cgelsd, CGELSD) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, float*, float&, octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, float*, 
+  F77_FUNC (cgelsd, CGELSD) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, float*, float&,
+                             octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, float*, 
                              octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, const float&,
-                             float&, FloatComplex*, float*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, const float&, float&,
+                             FloatComplex*, float*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cpotrs, CPOTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
+  F77_FUNC (cpotrs, CPOTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, 
                              const octave_idx_type&, const FloatComplex*, 
                              const octave_idx_type&, FloatComplex*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ctrtri, CTRTRI) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (ctrtri, CTRTRI) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const FloatComplex*, 
                              const octave_idx_type&, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ctrcon, CTRCON) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const FloatComplex*, const octave_idx_type&, float&,
-                             FloatComplex*, float*, octave_idx_type& 
+  F77_FUNC (ctrcon, CTRCON) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, float&, FloatComplex*,
+                             float*, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (ctrtrs, CTRTRS) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const FloatComplex*, 
-                             const octave_idx_type&, FloatComplex*, 
-                             const octave_idx_type&, octave_idx_type&
+  F77_FUNC (ctrtrs, CTRTRS) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const FloatComplex*, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (clartg, CLARTG) (const FloatComplex&, const FloatComplex&,
                              float&, FloatComplex&, FloatComplex&);
 
   F77_RET_T
   F77_FUNC (ctrsyl, CTRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&, float&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, float&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (xclange, XCLANGE) (F77_CONST_CHAR_ARG_DECL,
-                               const octave_idx_type&, const octave_idx_type&, const FloatComplex*,
-                               const octave_idx_type&, float*, float&
+                               const octave_idx_type&, const octave_idx_type&,
+                               const FloatComplex*, const octave_idx_type&,
+                               float*, float&
                                F77_CHAR_ARG_LEN_DECL);
 }
 
 static const FloatComplex FloatComplex_NaN_result (octave_Float_NaN, octave_Float_NaN);
 
 // FloatComplex Matrix class
 
 FloatComplexMatrix::FloatComplexMatrix (const FloatMatrix& a)
diff --git a/liboctave/fCNDArray.cc b/liboctave/fCNDArray.cc
--- a/liboctave/fCNDArray.cc
+++ b/liboctave/fCNDArray.cc
@@ -190,20 +190,22 @@ FloatComplexNDArray::ifourierNd (void) c
 #else
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*, FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
+                           FloatComplex*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*, FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
+                           FloatComplex*);
 }
 
 FloatComplexNDArray
 FloatComplexNDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.length () || dim < 0)
diff --git a/liboctave/fCRowVector.cc b/liboctave/fCRowVector.cc
--- a/liboctave/fCRowVector.cc
+++ b/liboctave/fCRowVector.cc
@@ -37,24 +37,27 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cgemv, CGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const FloatComplex&,
-                           const FloatComplex*, const octave_idx_type&, const FloatComplex*,
-                           const octave_idx_type&, const FloatComplex&, FloatComplex*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const FloatComplex&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex*,
+                           const octave_idx_type&, const FloatComplex&,
+                           FloatComplex*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*, const octave_idx_type&,
-                             const FloatComplex*, const octave_idx_type&, FloatComplex&);
+  F77_FUNC (xcdotu, XCDOTU) (const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, const FloatComplex*,
+                             const octave_idx_type&, FloatComplex&);
 }
 
 // FloatComplex Row Vector class
 
 bool
 FloatComplexRowVector::operator == (const FloatComplexRowVector& a) const
 {
   octave_idx_type len = length ();
diff --git a/liboctave/fCmplxAEPBAL.cc b/liboctave/fCmplxAEPBAL.cc
--- a/liboctave/fCmplxAEPBAL.cc
+++ b/liboctave/fCmplxAEPBAL.cc
@@ -30,28 +30,31 @@ along with Octave; see the file COPYING.
 
 #include "fCmplxAEPBAL.h"
 #include "fMatrix.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type&, octave_idx_type&, float*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cgebal, CGEBAL) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&,
+                             octave_idx_type&, float*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
  
   F77_RET_T
-  F77_FUNC (cgebak, CGEBAK) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (cgebak, CGEBAK) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, const float*,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, octave_idx_type&
-                             F77_CHAR_ARG_LEN_DECL  F77_CHAR_ARG_LEN_DECL);
+                             F77_CHAR_ARG_LEN_DECL
+                             F77_CHAR_ARG_LEN_DECL);
 }
 
 FloatComplexAEPBALANCE::FloatComplexAEPBALANCE (const FloatComplexMatrix& a, 
                                                 bool noperm, bool noscal)
  : base_aepbal<FloatComplexMatrix, FloatColumnVector> ()
 {
   octave_idx_type n = a.cols ();
 
diff --git a/liboctave/fCmplxCHOL.cc b/liboctave/fCmplxCHOL.cc
--- a/liboctave/fCmplxCHOL.cc
+++ b/liboctave/fCmplxCHOL.cc
@@ -37,29 +37,32 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
 #include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (cpotri, CPOTRI) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cpotri, CPOTRI) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&,
-                             const float&, float&, FloatComplex*, float*, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+  F77_FUNC (cpocon, CPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, const float&,
+                             float&, FloatComplex*, float*, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
   F77_FUNC (cch1up, CCH1UP) (const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, FloatComplex*, float*);
 
   F77_RET_T
   F77_FUNC (cch1dn, CCH1DN) (const octave_idx_type&, FloatComplex*,
diff --git a/liboctave/fCmplxLU.cc b/liboctave/fCmplxLU.cc
--- a/liboctave/fCmplxLU.cc
+++ b/liboctave/fCmplxLU.cc
@@ -39,18 +39,19 @@ along with Octave; see the file COPYING.
 
 template class base_lu <FloatComplexMatrix>;
 
 // Define the constructor for this particular derivation.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (cgetrf, CGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE_LUU
   F77_RET_T
   F77_FUNC (clu1up, CLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              FloatComplex *, const octave_idx_type&,
                              FloatComplex *, const octave_idx_type&,
                              FloatComplex *, FloatComplex *);
 
diff --git a/liboctave/fCmplxQR.cc b/liboctave/fCmplxQR.cc
--- a/liboctave/fCmplxQR.cc
+++ b/liboctave/fCmplxQR.cc
@@ -36,57 +36,71 @@ along with Octave; see the file COPYING.
 
 #include "base-qr.cc"
 
 template class base_qr<FloatComplexMatrix>;
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cgeqrf, CGEQRF) (const octave_idx_type&, const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, FloatComplex*, FloatComplex*,
+  F77_FUNC (cgeqrf, CGEQRF) (const octave_idx_type&, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             FloatComplex*, FloatComplex*,
                              const octave_idx_type&, octave_idx_type&); 
 
   F77_RET_T
-  F77_FUNC (cungqr, CUNGQR) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, FloatComplex*,
-                             FloatComplex*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (cungqr, CUNGQR) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             FloatComplex*, const octave_idx_type&,
+                             octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
-  F77_FUNC (cqr1up, CQR1UP) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             FloatComplex*, FloatComplex*, FloatComplex*, float*);
+  F77_FUNC (cqr1up, CQR1UP) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             FloatComplex*, FloatComplex*, float*);
 
   F77_RET_T
-  F77_FUNC (cqrinc, CQRINC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*, float*);
+  F77_FUNC (cqrinc, CQRINC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&,const octave_idx_type&,
+                             const FloatComplex*, float*);
 
   F77_RET_T
-  F77_FUNC (cqrdec, CQRDEC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type&, float*);
+  F77_FUNC (cqrdec, CQRDEC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             float*);
 
   F77_RET_T
   F77_FUNC (cqrinr, CQRINR) (const octave_idx_type&, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
-                             const octave_idx_type&, const FloatComplex*, float*);
+                             FloatComplex*, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             const octave_idx_type&, const FloatComplex*,
+                             float*);
 
   F77_RET_T
   F77_FUNC (cqrder, CQRDER) (const octave_idx_type&, const octave_idx_type&, 
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
                              const octave_idx_type&, FloatComplex*, float*);
 
   F77_RET_T
-  F77_FUNC (cqrshc, CQRSHC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, const octave_idx_type&, FloatComplex*, const octave_idx_type&,
+  F77_FUNC (cqrshc, CQRSHC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, FloatComplex*,
+                             const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, const octave_idx_type&,
-                             FloatComplex*, float*);
+                             const octave_idx_type&, FloatComplex*,
+                             float*);
 
 #endif
 }
 
 FloatComplexQR::FloatComplexQR (const FloatComplexMatrix& a, qr_type_t qr_type)
 {
   init (a, qr_type);
 }
diff --git a/liboctave/fCmplxQRP.cc b/liboctave/fCmplxQRP.cc
--- a/liboctave/fCmplxQRP.cc
+++ b/liboctave/fCmplxQRP.cc
@@ -31,18 +31,19 @@ along with Octave; see the file COPYING.
 #include "fCmplxQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (cgeqp3, CGEQP3) (const octave_idx_type&, const octave_idx_type&, FloatComplex*,
-                             const octave_idx_type&, octave_idx_type*, FloatComplex*, FloatComplex*,
+  F77_FUNC (cgeqp3, CGEQP3) (const octave_idx_type&, const octave_idx_type&,
+                             FloatComplex*, const octave_idx_type&,
+                             octave_idx_type*, FloatComplex*, FloatComplex*,
                              const octave_idx_type&, float*, octave_idx_type&);
 }
 
 // It would be best to share some of this code with FloatComplexQR class...
 
 FloatComplexQRP::FloatComplexQRP (const FloatComplexMatrix& a, qr_type_t qr_type)
   : FloatComplexQR (), p ()
 {
diff --git a/liboctave/fCmplxSVD.cc b/liboctave/fCmplxSVD.cc
--- a/liboctave/fCmplxSVD.cc
+++ b/liboctave/fCmplxSVD.cc
@@ -77,17 +77,18 @@ FloatComplexSVD::right_singular_matrix (
         ("FloatComplexSVD: V not computed because type == SVD::sigma_only");
       return FloatComplexMatrix ();
     }
   else
     return right_sm;
 }
 
 octave_idx_type
-FloatComplexSVD::init (const FloatComplexMatrix& a, SVD::type svd_type, SVD::driver svd_driver)
+FloatComplexSVD::init (const FloatComplexMatrix& a, SVD::type svd_type,
+                       SVD::driver svd_driver)
 {
   octave_idx_type info;
 
   octave_idx_type m = a.rows ();
   octave_idx_type n = a.cols ();
 
   FloatComplexMatrix atmp = a;
   FloatComplex *tmp_data = atmp.fortran_vec ();
diff --git a/liboctave/fColVector.cc b/liboctave/fColVector.cc
--- a/liboctave/fColVector.cc
+++ b/liboctave/fColVector.cc
@@ -38,20 +38,20 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const float&,
-                           const float*, const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float&, float*,
-                           const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const float&, const float*, const octave_idx_type&,
+                           const float*, const octave_idx_type&, const float&,
+                           float*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 }
 
 // Column Vector class.
 
 bool
 FloatColumnVector::operator == (const FloatColumnVector& a) const
 {
diff --git a/liboctave/fEIG.cc b/liboctave/fEIG.cc
--- a/liboctave/fEIG.cc
+++ b/liboctave/fEIG.cc
@@ -95,17 +95,18 @@ extern "C"
                            float*, const octave_idx_type&, float*,
                            const octave_idx_type&, float*,
                            const octave_idx_type&, octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (ssygv, SSYGV) (const octave_idx_type&,
-                           F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL,
+                           F77_CONST_CHAR_ARG_DECL,
+                           F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, float*,
                            const octave_idx_type&, float*,
                            const octave_idx_type&, float*, float*,
                            const octave_idx_type&, octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
diff --git a/liboctave/fMatrix.cc b/liboctave/fMatrix.cc
--- a/liboctave/fMatrix.cc
+++ b/liboctave/fMatrix.cc
@@ -57,159 +57,187 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #include "quit.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&, F77_CONST_CHAR_ARG_DECL,
+  F77_FUNC (xilaenv, XILAENV) (const octave_idx_type&,
+                               F77_CONST_CHAR_ARG_DECL,
                                F77_CONST_CHAR_ARG_DECL,
                                const octave_idx_type&, const octave_idx_type&,
                                const octave_idx_type&, const octave_idx_type&,
                                octave_idx_type&
-                               F77_CHAR_ARG_LEN_DECL F77_CHAR_ARG_LEN_DECL);
+                               F77_CHAR_ARG_LEN_DECL
+                               F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebal, SGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, float*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
 
   F77_RET_T
   F77_FUNC (sgemm, SGEMM) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                           const float&, const float*, const octave_idx_type&,
-                           const float*, const octave_idx_type&, const float&,
-                           float*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const octave_idx_type&, const float&, const float*,
+                           const octave_idx_type&, const float*,
+                           const octave_idx_type&, const float&, float*,
+                           const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const float&,
-                           const float*, const octave_idx_type&, const float*,
+                           const octave_idx_type&, const octave_idx_type&,
+                           const float&, const float*,
+                           const octave_idx_type&, const float*,
                            const octave_idx_type&, const float&, float*,
                            const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*, const octave_idx_type&,
-                           const float*, const octave_idx_type&, float&);
+  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*,
+                           const octave_idx_type&, const float*,
+                           const octave_idx_type&, float&);
 
   F77_RET_T
   F77_FUNC (ssyrk, SSYRK) (F77_CONST_CHAR_ARG_DECL,
                            F77_CONST_CHAR_ARG_DECL,
                            const octave_idx_type&, const octave_idx_type&, 
                            const float&, const float*, const octave_idx_type&,
                            const float&, float*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL
                            F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&, const octave_idx_type&, float*, const octave_idx_type&,
-                      octave_idx_type*, octave_idx_type&);
+  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&,
+                             octave_idx_type*, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (sgetrs, SGETRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, const octave_idx_type&, 
+  F77_FUNC (sgetrs, SGETRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&, 
                              const float*, const octave_idx_type&,
-                             const octave_idx_type*, float*, const octave_idx_type&, octave_idx_type&
+                             const octave_idx_type*, float*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgetri, SGETRI) (const octave_idx_type&, float*, const octave_idx_type&, const octave_idx_type*,
+  F77_FUNC (sgetri, SGETRI) (const octave_idx_type&, float*,
+                             const octave_idx_type&, const octave_idx_type*,
                              float*, const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (sgecon, SGECON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, float*, 
+  F77_FUNC (sgecon, SGECON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float*, 
                              const octave_idx_type&, const float&, float&, 
                              float*, octave_idx_type*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (sgelsy, SGELSY) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type*, float&, octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgelsy, SGELSY) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type*,
+                             float&, octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (sgelsd, SGELSD) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float&, octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type*,
+  F77_FUNC (sgelsd, SGELSD) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*, float&,
+                             octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type*,
                              octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             float *, const octave_idx_type&, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-
-  F77_RET_T
-  F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             float*, const octave_idx_type&, const float&,
-                             float&, float*, octave_idx_type*,
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
-  F77_RET_T
-  F77_FUNC (spotrs, SPOTRS) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const octave_idx_type&, const float*, 
-                             const octave_idx_type&, float*, 
+  F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float *,
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (strtri, STRTRI) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
+  F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, const float&,
+                             float&, float*, octave_idx_type*,
+                             octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+  F77_RET_T
+  F77_FUNC (spotrs, SPOTRS) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const float*, const octave_idx_type&, float*, 
+                             const octave_idx_type&, octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
+
+  F77_RET_T
+  F77_FUNC (strtri, STRTRI) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
                              const octave_idx_type&, const float*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (strcon, STRCON) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
-                             const float*, const octave_idx_type&, float&,
+  F77_FUNC (strcon, STRCON) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, const float*,
+                             const octave_idx_type&, float&,
                              float*, octave_idx_type*, octave_idx_type& 
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (strtrs, STRTRS) (F77_CONST_CHAR_ARG_DECL, F77_CONST_CHAR_ARG_DECL, 
-                             F77_CONST_CHAR_ARG_DECL, const octave_idx_type&, 
+  F77_FUNC (strtrs, STRTRS) (F77_CONST_CHAR_ARG_DECL,
+                             F77_CONST_CHAR_ARG_DECL, 
+                             F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, 
                              const octave_idx_type&, const float*, 
                              const octave_idx_type&, float*, 
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (slartg, SLARTG) (const float&, const float&, float&,
                              float&, float&);
 
   F77_RET_T
   F77_FUNC (strsyl, STRSYL) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             const float*, const octave_idx_type&, const float*,
-                             const octave_idx_type&, const float*, const octave_idx_type&,
-                             float&, octave_idx_type&
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const float*,
+                             const octave_idx_type&, const float*,
+                             const octave_idx_type&, const float*,
+                             const octave_idx_type&, float&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (xslange, XSLANGE) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
+  F77_FUNC (xslange, XSLANGE) (F77_CONST_CHAR_ARG_DECL,
+                               const octave_idx_type&,
                                const octave_idx_type&, const float*,
                                const octave_idx_type&, float*, float&
                                F77_CHAR_ARG_LEN_DECL); 
 }
 
 // Matrix class.
 
 FloatMatrix::FloatMatrix (const FloatRowVector& rv)
diff --git a/liboctave/fNDArray.cc b/liboctave/fNDArray.cc
--- a/liboctave/fNDArray.cc
+++ b/liboctave/fNDArray.cc
@@ -194,20 +194,22 @@ extern "C"
   // float complex arguments.  They have been modified by adding an
   // implicit float precision (a-h,o-z) statement at the beginning of
   // each subroutine.
 
   F77_RET_T
   F77_FUNC (cffti, CFFTI) (const octave_idx_type&, FloatComplex*);
 
   F77_RET_T
-  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*, FloatComplex*);
+  F77_FUNC (cfftf, CFFTF) (const octave_idx_type&, FloatComplex*,
+                           FloatComplex*);
 
   F77_RET_T
-  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*, FloatComplex*);
+  F77_FUNC (cfftb, CFFTB) (const octave_idx_type&, FloatComplex*,
+                           FloatComplex*);
 }
 
 FloatComplexNDArray
 FloatNDArray::fourier (int dim) const
 {
   dim_vector dv = dims ();
 
   if (dim > dv.length () || dim < 0)
diff --git a/liboctave/fRowVector.cc b/liboctave/fRowVector.cc
--- a/liboctave/fRowVector.cc
+++ b/liboctave/fRowVector.cc
@@ -37,23 +37,26 @@ along with Octave; see the file COPYING.
 #include "oct-cmplx.h"
 
 // Fortran functions we call.
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgemv, SGEMV) (F77_CONST_CHAR_ARG_DECL,
-                           const octave_idx_type&, const octave_idx_type&, const float&,
-                           const float*, const octave_idx_type&, const float*,
-                           const octave_idx_type&, const float&, float*, const octave_idx_type&
+                           const octave_idx_type&, const octave_idx_type&,
+                           const float&, const float*,
+                           const octave_idx_type&, const float*,
+                           const octave_idx_type&, const float&,
+                           float*, const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
   F77_RET_T
-  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*, const octave_idx_type&,
-                           const float*, const octave_idx_type&, float&);
+  F77_FUNC (xsdot, XSDOT) (const octave_idx_type&, const float*,
+                           const octave_idx_type&, const float*,
+                           const octave_idx_type&, float&);
 }
 
 // Row Vector class.
 
 bool
 FloatRowVector::operator == (const FloatRowVector& a) const
 {
   octave_idx_type len = length ();
diff --git a/liboctave/floatAEPBAL.cc b/liboctave/floatAEPBAL.cc
--- a/liboctave/floatAEPBAL.cc
+++ b/liboctave/floatAEPBAL.cc
@@ -30,25 +30,27 @@ along with Octave; see the file COPYING.
 
 #include "floatAEPBAL.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (sgebal, SGEBAL) (F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, float*, const octave_idx_type&, octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&,
                              octave_idx_type&, float*, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
   F77_FUNC (sgebak, SGEBAK) (F77_CONST_CHAR_ARG_DECL,
                              F77_CONST_CHAR_ARG_DECL,
-                             const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             const float*, const octave_idx_type&, float*,
+                             const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, const float*,
+                             const octave_idx_type&, float*,
                              const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL
                              F77_CHAR_ARG_LEN_DECL);
 }
 
 FloatAEPBALANCE::FloatAEPBALANCE (const FloatMatrix& a, 
                                   bool noperm, bool noscal)
   : base_aepbal<FloatMatrix, FloatColumnVector> ()
diff --git a/liboctave/floatCHOL.cc b/liboctave/floatCHOL.cc
--- a/liboctave/floatCHOL.cc
+++ b/liboctave/floatCHOL.cc
@@ -36,30 +36,34 @@ along with Octave; see the file COPYING.
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
 #include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (spotri, SPOTRI) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             float*, const octave_idx_type&, octave_idx_type&
+  F77_FUNC (spotri, SPOTRI) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, octave_idx_type&
                              F77_CHAR_ARG_LEN_DECL);
 
   F77_RET_T
-  F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&,
-                             float*, const octave_idx_type&, const float&,
+  F77_FUNC (spocon, SPOCON) (F77_CONST_CHAR_ARG_DECL,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, const float&,
                              float&, float*, octave_idx_type*, 
-                             octave_idx_type& F77_CHAR_ARG_LEN_DECL);
+                             octave_idx_type&
+                             F77_CHAR_ARG_LEN_DECL);
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
   F77_FUNC (sch1up, SCH1UP) (const octave_idx_type&, float*,
                              const octave_idx_type&, float*, float*);
 
   F77_RET_T
   F77_FUNC (sch1dn, SCH1DN) (const octave_idx_type&, float*,
diff --git a/liboctave/floatLU.cc b/liboctave/floatLU.cc
--- a/liboctave/floatLU.cc
+++ b/liboctave/floatLU.cc
@@ -39,18 +39,19 @@ along with Octave; see the file COPYING.
 
 template class base_lu <FloatMatrix>;
 
 // Define the constructor for this particular derivation.
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&, const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type*, octave_idx_type&);
+  F77_FUNC (sgetrf, SGETRF) (const octave_idx_type&, const octave_idx_type&,
+                             float*, const octave_idx_type&, octave_idx_type*,
+                             octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE_LUU
   F77_RET_T
   F77_FUNC (slu1up, SLU1UP) (const octave_idx_type&, const octave_idx_type&,
                              float *, const octave_idx_type&,
                              float *, const octave_idx_type&,
                              float *, float *);
 
diff --git a/liboctave/floatQR.cc b/liboctave/floatQR.cc
--- a/liboctave/floatQR.cc
+++ b/liboctave/floatQR.cc
@@ -36,53 +36,65 @@ along with Octave; see the file COPYING.
 
 #include "base-qr.cc"
 
 template class base_qr<FloatMatrix>;
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (sgeqrf, SGEQRF) (const octave_idx_type&, const octave_idx_type&, float*, const octave_idx_type&,
-                             float*, float*, const octave_idx_type&, octave_idx_type&); 
+  F77_FUNC (sgeqrf, SGEQRF) (const octave_idx_type&, const octave_idx_type&,
+                             float*, const octave_idx_type&, float*, float*,
+                             const octave_idx_type&, octave_idx_type&); 
 
   F77_RET_T
-  F77_FUNC (sorgqr, SORGQR) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, float*,
-                             const octave_idx_type&, float*, float*, const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sorgqr, SORGQR) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*, float*,
+                             const octave_idx_type&, octave_idx_type&);
 
 #ifdef HAVE_QRUPDATE
 
   F77_RET_T
-  F77_FUNC (sqr1up, SQR1UP) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
-                             float*, float*, float*);
+  F77_FUNC (sqr1up, SQR1UP) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*, float*, float*);
 
   F77_RET_T
-  F77_FUNC (sqrinc, SQRINC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
+  F77_FUNC (sqrinc, SQRINC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&,
                              const octave_idx_type&, const float*, float*);
 
   F77_RET_T
-  F77_FUNC (sqrdec, SQRDEC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, 
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
+  F77_FUNC (sqrdec, SQRDEC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&,
                              const octave_idx_type&, float*);
 
   F77_RET_T
   F77_FUNC (sqrinr, SQRINR) (const octave_idx_type&, const octave_idx_type&, 
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
+                             float*, const octave_idx_type&,
+                             float*, const octave_idx_type&,
                              const octave_idx_type&, const float*, float*);
 
   F77_RET_T
   F77_FUNC (sqrder, SQRDER) (const octave_idx_type&, const octave_idx_type&, 
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
+                             float*, const octave_idx_type&,
+                             float*, const octave_idx_type&,
                              const octave_idx_type&, float*);
 
   F77_RET_T
-  F77_FUNC (sqrshc, SQRSHC) (const octave_idx_type&, const octave_idx_type&, const octave_idx_type&,
-                             float*, const octave_idx_type&, float*, const octave_idx_type&,
+  F77_FUNC (sqrshc, SQRSHC) (const octave_idx_type&, const octave_idx_type&,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&, float*,
+                             const octave_idx_type&,
                              const octave_idx_type&, const octave_idx_type&,
                              float*);
 
 #endif
 }
 
 FloatQR::FloatQR (const FloatMatrix& a, qr_type_t qr_type)
 {
diff --git a/liboctave/floatQRP.cc b/liboctave/floatQRP.cc
--- a/liboctave/floatQRP.cc
+++ b/liboctave/floatQRP.cc
@@ -31,19 +31,20 @@ along with Octave; see the file COPYING.
 #include "floatQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (sgeqp3, SGEQP3) (const octave_idx_type&, const octave_idx_type&, float*,
-                             const octave_idx_type&, octave_idx_type*, float*, float*,
-                             const octave_idx_type&, octave_idx_type&);
+  F77_FUNC (sgeqp3, SGEQP3) (const octave_idx_type&, const octave_idx_type&,
+                             float*, const octave_idx_type&, octave_idx_type*,
+                             float*, float*, const octave_idx_type&,
+                             octave_idx_type&);
 }
 
 // It would be best to share some of this code with QR class...
 
 FloatQRP::FloatQRP (const FloatMatrix& a, qr_type_t qr_type)
   : FloatQR (), p ()
 {
   init (a, qr_type);
diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -50,38 +50,43 @@ along with Octave; see the file COPYING.
 #ifndef M_PI
 #define M_PI 3.14159265358979323846
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zbesj, ZBESJ) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           octave_idx_type&, octave_idx_type&);
+                           const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zbesy, ZBESY) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           octave_idx_type&, double*, double*, octave_idx_type&);
+                           const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, octave_idx_type&, double*,
+                           double*, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zbesi, ZBESI) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           octave_idx_type&, octave_idx_type&);
+                           const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zbesk, ZBESK) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&, double*, double*,
-                           octave_idx_type&, octave_idx_type&);
+                           const octave_idx_type&, const octave_idx_type&,
+                           double*, double*, octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (zbesh, ZBESH) (const double&, const double&, const double&,
-                           const octave_idx_type&, const octave_idx_type&, const octave_idx_type&, double*,
-                           double*, octave_idx_type&, octave_idx_type&);
+                           const octave_idx_type&, const octave_idx_type&,
+                           const octave_idx_type&, double*, double*,
+                           octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cbesj, cBESJ) (const FloatComplex&, const float&,
                            const octave_idx_type&, const octave_idx_type&,
                            FloatComplex*, octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cbesy, CBESY) (const FloatComplex&, const float&,
@@ -101,30 +106,35 @@ extern "C"
 
   F77_RET_T
   F77_FUNC (cbesh, CBESH) (const FloatComplex&, const float&,
                            const octave_idx_type&, const octave_idx_type&,
                            const octave_idx_type&, FloatComplex*,
                            octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zairy, ZAIRY) (const double&, const double&, const octave_idx_type&,
-                           const octave_idx_type&, double&, double&, octave_idx_type&, octave_idx_type&);
+  F77_FUNC (zairy, ZAIRY) (const double&, const double&,
+                           const octave_idx_type&, const octave_idx_type&,
+                           double&, double&, octave_idx_type&,
+                           octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cairy, CAIRY) (const float&, const float&, const octave_idx_type&,
-                           const octave_idx_type&, float&, float&, octave_idx_type&, octave_idx_type&);
+                           const octave_idx_type&, float&, float&,
+                           octave_idx_type&, octave_idx_type&);
 
   F77_RET_T
-  F77_FUNC (zbiry, ZBIRY) (const double&, const double&, const octave_idx_type&,
-                           const octave_idx_type&, double&, double&, octave_idx_type&);
+  F77_FUNC (zbiry, ZBIRY) (const double&, const double&,
+                           const octave_idx_type&, const octave_idx_type&,
+                           double&, double&, octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (cbiry, CBIRY) (const float&, const float&, const octave_idx_type&,
-                           const octave_idx_type&, float&, float&, octave_idx_type&);
+                           const octave_idx_type&, float&, float&,
+                           octave_idx_type&);
 
   F77_RET_T
   F77_FUNC (xdacosh, XDACOSH) (const double&, double&);
 
   F77_RET_T
   F77_FUNC (xacosh, XACOSH) (const float&, float&);
 
   F77_RET_T
diff --git a/liboctave/oct-convn.cc b/liboctave/oct-convn.cc
--- a/liboctave/oct-convn.cc
+++ b/liboctave/oct-convn.cc
@@ -38,27 +38,27 @@ static void
 convolve_2d (const T *a, octave_idx_type ma, octave_idx_type na,
              const R *b, octave_idx_type mb, octave_idx_type nb,
              T *c, bool inner);
 
 // Forward instances to our Fortran implementations.
 #define FORWARD_IMPL(T,R,f,F) \
 extern "C" \
 F77_RET_T \
-F77_FUNC (f##conv2o, F##CONV2O) (const octave_idx_type&, const octave_idx_type&, \
-                                 const T*, \
-                                 const octave_idx_type&, const octave_idx_type&, \
-                                 const R*, T *); \
+F77_FUNC (f##conv2o, F##CONV2O) (const octave_idx_type&, \
+                                 const octave_idx_type&, \
+                                 const T*, const octave_idx_type&, \
+                                 const octave_idx_type&, const R*, T *); \
 \
 extern "C" \
 F77_RET_T \
-F77_FUNC (f##conv2i, F##CONV2I) (const octave_idx_type&, const octave_idx_type&, \
-                                 const T*, \
-                                 const octave_idx_type&, const octave_idx_type&, \
-                                 const R*, T *); \
+F77_FUNC (f##conv2i, F##CONV2I) (const octave_idx_type&, \
+                                 const octave_idx_type&, \
+                                 const T*, const octave_idx_type&, \
+                                 const octave_idx_type&, const R*, T *); \
 \
 template <> void \
 convolve_2d<T, R> (const T *a, octave_idx_type ma, octave_idx_type na, \
                    const R *b, octave_idx_type mb, octave_idx_type nb, \
                    T *c, bool inner) \
 { \
   if (inner) \
     F77_XFCN (f##conv2i, F##CONV2I, (ma, na, a, mb, nb, b, c)); \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-13  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/__pchip_deriv__.cc, DLD-FUNCTIONS/dot.cc,
+	octave.cc: Style fixes.
+
 2011-01-12  David Bateman  <dbateman@free.fr>
 
 	ls-mat5.cc (int save_mat5_element_length (const octave_value&,
 	const std::string&, bool, bool)): For sparse matrices use nnz rather
 	than nzmax.
 	(bool save_mat5_binary_element (std::ostream&, const octave_value&,
 	const std::string&, bool, bool, bool, bool)): ditto.
 
diff --git a/src/DLD-FUNCTIONS/__pchip_deriv__.cc b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
--- a/src/DLD-FUNCTIONS/__pchip_deriv__.cc
+++ b/src/DLD-FUNCTIONS/__pchip_deriv__.cc
@@ -30,23 +30,25 @@ along with Octave; see the file COPYING.
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 #include "f77-fcn.h"
 
 extern "C"
 {
   F77_RET_T
-  F77_FUNC (dpchim, DPCHIM) (const octave_idx_type& n, const double *x, const double *f,
-                             double *d, const octave_idx_type &incfd,
+  F77_FUNC (dpchim, DPCHIM) (const octave_idx_type& n, const double *x,
+                             const double *f, double *d,
+                             const octave_idx_type &incfd,
                              octave_idx_type *ierr);
 
   F77_RET_T
-  F77_FUNC (pchim, PCHIM) (const octave_idx_type& n, const float *x, const float *f,
-                           float *d, const octave_idx_type &incfd,
+  F77_FUNC (pchim, PCHIM) (const octave_idx_type& n, const float *x,
+                           const float *f, float *d,
+                           const octave_idx_type& incfd,
                            octave_idx_type *ierr);
 }
 
 // Wrapper for SLATEC/PCHIP function DPCHIM to calculate the derivates
 // for piecewise polynomials.
 
 DEFUN_DLD (__pchip_deriv__, args, ,
   "-*- texinfo -*-\n\
diff --git a/src/DLD-FUNCTIONS/dot.cc b/src/DLD-FUNCTIONS/dot.cc
--- a/src/DLD-FUNCTIONS/dot.cc
+++ b/src/DLD-FUNCTIONS/dot.cc
@@ -29,53 +29,54 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "defun-dld.h"
 #include "parse.h"
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (ddot3, DDOT3) (const octave_idx_type&, const octave_idx_type&, 
-                           const octave_idx_type&, 
-                           const double*, const double *, double *);
+                           const octave_idx_type&, const double*,
+                           const double*, double*);
 
   F77_RET_T
   F77_FUNC (sdot3, SDOT3) (const octave_idx_type&, const octave_idx_type&, 
-                           const octave_idx_type&, 
-                           const float*, const float *, float *);
+                           const octave_idx_type&, const float*,
+                           const float*, float*);
 
   F77_RET_T
   F77_FUNC (zdotc3, ZDOTC3) (const octave_idx_type&, const octave_idx_type&, 
-                             const octave_idx_type&, 
-                             const Complex*, const Complex *, Complex *);
+                             const octave_idx_type&, const Complex*,
+                             const Complex*, Complex*);
 
   F77_RET_T
   F77_FUNC (cdotc3, CDOTC3) (const octave_idx_type&, const octave_idx_type&, 
-                             const octave_idx_type&, 
-                             const FloatComplex*, const FloatComplex *, FloatComplex *);
+                             const octave_idx_type&, const FloatComplex*,
+                             const FloatComplex*, FloatComplex*);
 
   F77_RET_T
   F77_FUNC (dmatm3, DMATM3) (const octave_idx_type&, const octave_idx_type&, 
                              const octave_idx_type&, const octave_idx_type&, 
-                             const double*, const double *, double *);
+                             const double*, const double*, double*);
 
   F77_RET_T
   F77_FUNC (smatm3, SMATM3) (const octave_idx_type&, const octave_idx_type&, 
                              const octave_idx_type&, const octave_idx_type&, 
-                             const float*, const float *, float *);
+                             const float*, const float*, float*);
 
   F77_RET_T
   F77_FUNC (zmatm3, ZMATM3) (const octave_idx_type&, const octave_idx_type&, 
                              const octave_idx_type&, const octave_idx_type&, 
-                             const Complex*, const Complex *, Complex *);
+                             const Complex*, const Complex*, Complex*);
 
   F77_RET_T
   F77_FUNC (cmatm3, CMATM3) (const octave_idx_type&, const octave_idx_type&, 
                              const octave_idx_type&, const octave_idx_type&, 
-                             const FloatComplex*, const FloatComplex *, FloatComplex *);
+                             const FloatComplex*, const FloatComplex*,
+                             FloatComplex*);
 }
 
 static void 
 get_red_dims (const dim_vector& x, const dim_vector& y, int dim,
               dim_vector& z, octave_idx_type& m, octave_idx_type& n,
               octave_idx_type& k)
 {
   int nd = x.length ();
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -68,17 +68,18 @@ along with Octave; see the file COPYING.
 #include "sysdep.h"
 #include "unwind-prot.h"
 #include "utils.h"
 #include "variables.h"
 #include <version.h>
 
 // Kluge.
 extern "C" F77_RET_T
-F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DECL, const octave_idx_type&
+F77_FUNC (xerbla, XERBLA) (F77_CONST_CHAR_ARG_DECL,
+                           const octave_idx_type&
                            F77_CHAR_ARG_LEN_DECL);
 
 extern void install_builtins (void);
 
 // The command-line options.
 static string_vector octave_argv;
 
 // The name used to invoke Octave.
