# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1313609197 -7200
#      Wed Aug 17 21:26:37 2011 +0200
# Node ID 46c5fd59fe98acaf25aa090e56188ef5669b6077
# Parent  be749686366052fe0b96ec0a1e7aa6a369bdb782
Autocompletion now works for users that changed their nick or joined the channel.

diff --git a/gui/src/qirc/IRCClientImpl.cpp b/gui/src/qirc/IRCClientImpl.cpp
--- a/gui/src/qirc/IRCClientImpl.cpp
+++ b/gui/src/qirc/IRCClientImpl.cpp
@@ -144,16 +144,18 @@ IRCServerMessage::parameter (int index)
 }
 
 
 IRCChannelProxyImpl::IRCChannelProxyImpl (IRCClientInterface *clientInterface, const QString& channelName, QObject *parent)
   : IRCChannelProxyInterface (clientInterface, channelName, parent),
     m_clientInterface (clientInterface)
 {
   m_channelName = channelName;
+  connect (clientInterface, SIGNAL (nicknameChanged (QString,QString)),
+           this, SLOT (handleNickChange (QString,QString)));
 }
 
 QTextDocument *
 IRCChannelProxyImpl::conversationModel ()
 {
   return &m_conversationModel;
 }
 
@@ -193,16 +195,33 @@ IRCChannelProxyImpl::sendJoinRequest ()
 
 
 void
 IRCChannelProxyImpl::leave (const QString& reason)
 {
   Q_UNUSED (reason);
 }
 
+void
+IRCChannelProxyImpl::handleNickChange (const QString &oldNick, const QString &newNick)
+{
+  m_userList = m_userListModel.stringList ();
+  m_userList.removeAll (oldNick);
+  m_userList.append (newNick);
+  m_userListModel.setStringList (m_userList);
+}
+
+void
+IRCChannelProxyImpl::handleJoin (const QString &nick)
+{
+  m_userList = m_userListModel.stringList ();
+  m_userList.append (nick);
+  m_userListModel.setStringList (m_userList);
+}
+
 IRCClientImpl::IRCClientImpl (QObject *parent)
   : IRCClientInterface (parent)
 {
   m_loggedIn = false;
   connect (&m_tcpSocket, SIGNAL (connected ()), this, SLOT (handleConnected ()));
   connect (&m_tcpSocket, SIGNAL (disconnected ()), this, SLOT (handleDisconnected ()));
   connect (&m_tcpSocket, SIGNAL (readyRead ()), this, SLOT (handleReadyRead ()));
 }
@@ -310,17 +329,17 @@ IRCClientImpl::handleDisconnected ()
 void
 IRCClientImpl::handleReadyRead ()
 {
   QByteArray line;
   do
     {
       line = m_tcpSocket.readLine();
       if (line.size ())
-        handleIncomingLine(QString(line));
+        handleIncomingLine(QString (line).toLocal8Bit ());
       else
         break;
     }
   while (true);
 }
 
 void
 IRCClientImpl::handleNicknameChanged (const QString &oldNick, const QString &newNick)
@@ -332,16 +351,17 @@ IRCClientImpl::handleNicknameChanged (co
       emit userNicknameChanged (m_nickname);
     }
   emit nicknameChanged (oldNick, newNick);
 }
 
 void
 IRCClientImpl::handleUserJoined (const QString &nick, const QString &channel)
 {
+  ircChannelProxy (channel)->handleJoin (nick);
   emit userJoined (nick, channel);
 }
 
 void
 IRCClientImpl::handleUserQuit (const QString &nick, const QString &reason)
 {
   emit userQuit (nick, reason);
 }
@@ -463,17 +483,17 @@ IRCClientImpl::handleIncomingLine (const
         }
     }
 }
 
 void
 IRCClientImpl::sendLine (const QString &line)
 {
   if (m_connected)
-    m_tcpSocket.write ((line + "\r\n").toStdString ().c_str ());
+    m_tcpSocket.write ( (line +  + "\r\n").toUtf8 ());
 }
 
 void
 IRCClientImpl::sendIRCCommand (const QString &command, const QStringList &arguments)
 {
   QString line = command;
   for (int i = 0; i < arguments.size (); i++)
     {
diff --git a/gui/src/qirc/IRCClientImpl.h b/gui/src/qirc/IRCClientImpl.h
--- a/gui/src/qirc/IRCClientImpl.h
+++ b/gui/src/qirc/IRCClientImpl.h
@@ -284,17 +284,19 @@ public:
   QTextDocument *conversationModel ();
   QStringListModel *userListModel ();
   QString channelName ();
 
   void setNickList (const QStringList &nickList);
   void sendMessage (const QString& message);
   void sendJoinRequest ();
   void leave (const QString &reason);
-
+public slots:
+  void handleNickChange (const QString& oldNick, const QString& newNick);
+  void handleJoin (const QString& nick);
 private:
   QString             m_channelName;
   QStringList         m_userList;
   QStringListModel    m_userListModel;
   QTextDocument       m_conversationModel;
   IRCClientInterface *m_clientInterface;
 };
 
diff --git a/gui/src/qirc/IRCClientInterface.h b/gui/src/qirc/IRCClientInterface.h
--- a/gui/src/qirc/IRCClientInterface.h
+++ b/gui/src/qirc/IRCClientInterface.h
@@ -61,16 +61,20 @@ public:
   /** Requests to join this channel. */
   virtual void sendJoinRequest () = 0;
 
   /**
     * Requests to leave this channel.
     * \arg reason Reason for leaving the channel.
     */
   virtual void leave (const QString& reason) = 0;
+
+public slots:
+  virtual void handleNickChange (const QString& oldNick, const QString& newNick) = 0;
+  virtual void handleJoin (const QString& nick) = 0;
 };
 
 /**
   * \class IRCClientInterface
   * IRC Clients need to implement this interface.
   */
 class IRCClientInterface : public QObject
 {
