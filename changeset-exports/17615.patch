# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1381296518 14400
#      Wed Oct 09 01:28:38 2013 -0400
# Node ID 3a7d5d655749d721599aa76f22797b1bd9d64bfd
# Parent  ce7b9abf6600fa3c2a592501c2cba7a7417b7c0c
Fix typos in configure tests for LLVM methods (bug #39973)

* acinclude.m4 (OCTAVE_LLVM_CALLINST_ADDATTRIBUTE_API): Add extra pair of
m4 quotes. (OCTAVE_LLVM_FUNCTION_ADDFNATTR_API): Fix typo in LLVM ifdef and
include paths for LLVM header files.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1462,25 +1462,25 @@ AC_DEFUN([OCTAVE_IEEE754_DATA_FORMAT], [
 dnl
 dnl Check for CallInst::addAttribute API
 dnl
 AC_DEFUN([OCTAVE_LLVM_CALLINST_ADDATTRIBUTE_API], [
   AC_CACHE_CHECK([check LLVM::CallInst::addAttribute arg type is llvm::Attributes],
     [octave_cv_callinst_addattribute_arg_is_attributes],
     [AC_LANG_PUSH(C++)
       AC_COMPILE_IFELSE(
-        [AC_LANG_PROGRAM([
+        [AC_LANG_PROGRAM([[
 #ifdef HAVE_LLVM_IR_FUNCTION_H
           #include <llvm/IR/Instructions.h>
           #include <llvm/IR/Attributes.h>
 #else
           #include <llvm/Instructions.h>
           #include <llvm/Attributes.h>
 #endif
-          ], [[
+          ]], [[
           llvm::CallInst *callinst;
           llvm::AttrBuilder attr_builder;
           attr_builder.addAttribute(llvm::Attributes::StructRet);
           llvm::Attributes attrs = llvm::Attributes::get(llvm::getGlobalContext(), attr_builder);
           callinst->addAttribute (1, attrs);
         ]])],
         octave_cv_callinst_addattribute_arg_is_attributes=yes,
         octave_cv_callinst_addattribute_arg_is_attributes=no)
@@ -1529,19 +1529,19 @@ dnl
 dnl Check for Function::addFnAttr API
 dnl
 AC_DEFUN([OCTAVE_LLVM_FUNCTION_ADDFNATTR_API], [
   AC_CACHE_CHECK([check LLVM::Function::addFnAttr arg type is llvm::Attributes],
     [octave_cv_function_addfnattr_arg_is_attributes],
     [AC_LANG_PUSH(C++)
       AC_COMPILE_IFELSE(
         [AC_LANG_PROGRAM([[
-#ifdef LLVM_HAVE_IR_FUNCTION_H
-          #include <llvm/Function.h>
-          #include <llvm/Attributes.h>
+#ifdef HAVE_LLVM_IR_FUNCTION_H
+          #include <llvm/IR/Function.h>
+          #include <llvm/IR/Attributes.h>
 #else
           #include <llvm/Function.h>
           #include <llvm/Attributes.h>
 #endif
           ]], [[
           llvm::Function *llvm_function;
           llvm_function->addFnAttr (llvm::Attributes::AlwaysInline);
         ]])],
