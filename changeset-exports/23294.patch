# HG changeset patch
# User Daniel J Sebald <daniel.sebald@ieee.org>
# Date 1489641923 18000
#      Thu Mar 16 00:25:23 2017 -0500
# Node ID d5f490eebb4791ccf703a2cc61936ed3a8f8de8d
# Parent  ed3d5186ffcfb2fa70b2bd5f73555c5d13b567dd
For gnuplot, use legend or text, not general, object interpreter property (bug #50496)

* __gnuplot_draw_axes__.m: When the graphics object is a 'string', pass the
  string object's interpreter into __maybe_munge_text__().  Near the front of
  graphics-object-handling loop, set hlgndntrp to the legend's interpreter if
  the legend is non-empty, otherwise set hlgndntrp to 'none'.  Remove warning
  about use of deprecated obj.interpreter.  When the graphics object is not
  'text', pass hlgndntrp into __maybe_munge_text__().
  (__maybe_munge_text__): Add a fourth input variable 'ntrp' and use that
  variable in place of obj.interpreter.
  (do_text): Pass the string object's interpreter into __maybe_munge_text__().

diff --git a/scripts/plot/util/private/__gnuplot_draw_axes__.m b/scripts/plot/util/private/__gnuplot_draw_axes__.m
--- a/scripts/plot/util/private/__gnuplot_draw_axes__.m
+++ b/scripts/plot/util/private/__gnuplot_draw_axes__.m
@@ -139,17 +139,17 @@ function __gnuplot_draw_axes__ (h, plot_
   fputs (plot_stream, "unset y2tics;\n");
 
   if (isempty (axis_obj.title) || isempty (get (axis_obj.title, "string")))
     fputs (plot_stream, "unset title;\n");
   else
     if (nd == 2)
       t = get(axis_obj.title);
       colorspec = get_text_colorspec (t.color);
-      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
+      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", t.interpreter);
       fontspec = create_fontspec (f, s, gnuplot_term);
       fprintf (plot_stream, "set title \"%s\" %s %s %s;\n",
                undo_string_escapes (tt), fontspec, colorspec,
                __do_enhanced_option__ (enhanced, t));
     else
       ## Change meaning of "normalized", but it at least gives user some control
       if (! strcmp (get (axis_obj.title, "units"), "normalized"))
         unwind_protect
@@ -171,17 +171,17 @@ function __gnuplot_draw_axes__ (h, plot_
   if (! isempty (axis_obj.xlabel))
     t = get (axis_obj.xlabel);
     angle = t.rotation;
     colorspec = get_text_colorspec (t.color);
     if (isempty (t.string))
       fprintf (plot_stream, "unset xlabel;\n");
       fprintf (plot_stream, "unset x2label;\n");
     else
-      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
+      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", t.interpreter);
       fontspec = create_fontspec (f, s, gnuplot_term);
       if (strcmp (axis_obj.xaxislocation, "top"))
         fprintf (plot_stream, "set x2label \"%s\" %s %s %s",
                  undo_string_escapes (tt), colorspec, fontspec,
                  __do_enhanced_option__ (enhanced, t));
       else
         fprintf (plot_stream, "set xlabel \"%s\" %s %s %s",
                  undo_string_escapes (tt), colorspec, fontspec,
@@ -199,17 +199,17 @@ function __gnuplot_draw_axes__ (h, plot_
   if (! isempty (axis_obj.ylabel))
     t = get (axis_obj.ylabel);
     angle = t.rotation;
     colorspec = get_text_colorspec (t.color);
     if (isempty (t.string))
       fprintf (plot_stream, "unset ylabel;\n");
       fprintf (plot_stream, "unset y2label;\n");
     else
-      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
+      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", t.interpreter);
       fontspec = create_fontspec (f, s, gnuplot_term);
       if (strcmp (axis_obj.yaxislocation, "right"))
         fprintf (plot_stream, "set y2label \"%s\" %s %s %s",
                  undo_string_escapes (tt), colorspec, fontspec,
                  __do_enhanced_option__ (enhanced, t));
       else
         fprintf (plot_stream, "set ylabel \"%s\" %s %s %s",
                  undo_string_escapes (tt), colorspec, fontspec,
@@ -226,17 +226,17 @@ function __gnuplot_draw_axes__ (h, plot_
 
   if (! isempty (axis_obj.zlabel))
     t = get (axis_obj.zlabel);
     angle = t.rotation;
     colorspec = get_text_colorspec (t.color);
     if (isempty (t.string))
       fputs (plot_stream, "unset zlabel;\n");
     else
-      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string");
+      [tt, f, s] = __maybe_munge_text__ (enhanced, t, "string", t.interpreter);
       fontspec = create_fontspec (f, s, gnuplot_term);
       fprintf (plot_stream, "set zlabel \"%s\" %s %s %s",
                undo_string_escapes (tt), colorspec, fontspec,
                __do_enhanced_option__ (enhanced, t));
       fprintf (plot_stream, " rotate by %f;\n", angle);
     endif
   endif
 
@@ -493,32 +493,29 @@ function __gnuplot_draw_axes__ (h, plot_
 
   cmap = parent_figure_obj.colormap;
   cmap_sz = rows (cmap);
   addedcmap = [];
 
   ximg_data = {};
   ximg_data_idx = 0;
 
+  if (! isempty (hlgnd))
+    hlgndntrp = hlgnd.interpreter;
+  else
+    hlgndntrp = "none";
+  endif
+
   while (! isempty (kids))
 
     h_obj = kids(end);
     kids = kids(1:(end-1));
 
     obj = get (h_obj);
 
-    ## FIXME: Temporary workaround to add hidden interpreter property back.
-    ##        Delete when bug #50496 is fixed.
-    wstate = warning ("query", "Octave:deprecated-property");
-    try 
-      warning ("off", "Octave:deprecated-property");
-      obj.interpreter = get (h_obj, "interpreter");
-    end_try_catch
-    warning (wstate);
-
     if (isfield (obj, "xdata"))
       obj.xdata = double (obj.xdata);
     endif
     if (isfield (obj, "ydata"))
       obj.ydata = double (obj.ydata);
     endif
     if (isfield (obj, "zdata"))
       obj.zdata = double (obj.zdata);
@@ -627,17 +624,17 @@ function __gnuplot_draw_axes__ (h, plot_
             data_idx += 1;
             is_image_data(data_idx) = false;
             parametric(data_idx) = false;
             have_cdata(data_idx) = false;
             have_3d_patch(data_idx) = false;
             tmpdispname = obj.displayname;
             obj.displayname = get (obj.parent, "displayname");
             tmp = undo_string_escapes (
-                    __maybe_munge_text__ (enhanced, obj, "displayname")
+                    __maybe_munge_text__ (enhanced, obj, "displayname", hlgndntrp)
                   );
             titlespec{data_idx} = ['title "' tmp '"'];
             obj.displayname = tmpdispname;
             if (! isempty (findobj (obj.parent, "-property", "format", "-depth", 0)))
               # Place phantom errorbar data for legend
               data{data_idx} = NaN (4,1);
               usingclause{data_idx} = sprintf ("record=1 using ($1):($2):($3):($4)");
               switch (get (obj.parent, "format"))
@@ -677,17 +674,17 @@ function __gnuplot_draw_axes__ (h, plot_
         is_image_data(data_idx) = false;
         parametric(data_idx) = true;
         have_cdata(data_idx) = false;
         have_3d_patch(data_idx) = false;
         if (isempty (obj.displayname))
           titlespec{data_idx} = "title \"\"";
         else
           tmp = undo_string_escapes (
-                  __maybe_munge_text__ (enhanced, obj, "displayname")
+                  __maybe_munge_text__ (enhanced, obj, "displayname", hlgndntrp)
                 );
           titlespec{data_idx} = ['title "' tmp '"'];
         endif
         usingclause{data_idx} = sprintf ("record=%d", numel (obj.xdata));
         if (nd == 3)
           xdat = obj.xdata(:);
           ydat = obj.ydata(:);
           if (! isempty (obj.zdata))
@@ -798,17 +795,17 @@ function __gnuplot_draw_axes__ (h, plot_
                 have_cdata(data_idx) = false;
                 have_3d_patch(data_idx) = false;
               endif
 
               if (i > 1 || isempty (obj.displayname))
                 titlespec{local_idx} = "title \"\"";
               else
                 tmp = undo_string_escapes (
-                        __maybe_munge_text__ (enhanced, obj, "displayname")
+                        __maybe_munge_text__ (enhanced, obj, "displayname", hlgndntrp)
                       );
                 titlespec{local_idx} = ['title "' tmp '"'];
               endif
               if (isfield (obj, "facecolor"))
                 if ((strcmp (obj.facecolor, "flat")
                     || strcmp (obj.facecolor, "interp"))
                     && isfield (obj, "cdata"))
                   if (ndims (obj.cdata) == 2
@@ -1209,17 +1206,17 @@ function __gnuplot_draw_axes__ (h, plot_
         if (! isempty (obj.displayname))
           ## Place phantom line data for approximate legend symbol
           data_idx += 1;
           is_image_data(data_idx) = false;
           parametric(data_idx) = false;
           have_cdata(data_idx) = false;
           have_3d_patch(data_idx) = false;
           tmp = undo_string_escapes (
-                  __maybe_munge_text__ (enhanced, obj, "displayname")
+                  __maybe_munge_text__ (enhanced, obj, "displayname", hlgndntrp)
                 );
           titlespec{data_idx} = ['title "' tmp '"'];
           data{data_idx} = NaN (3,1);
           usingclause{data_idx} = sprintf ("record=1 using ($1):($2):($3)");
           withclause{data_idx} = sprintf ("with line linewidth 10 linecolor rgb \"#%02x%02x%02x\"",
                                           round (255*cmap(end/2,:)));
         endif
 
@@ -2432,17 +2429,17 @@ function [f, s, fnt, it, bld] = get_font
   if (isempty (t.fontsize))
     s = 10;
   else
     s = t.fontsize;
   endif
 
 endfunction
 
-function [str, f, s] = __maybe_munge_text__ (enhanced, obj, fld)
+function [str, f, s] = __maybe_munge_text__ (enhanced, obj, fld, ntrp)
   persistent warned_latex = false;
 
   if (strcmp (fld, "string"))
     [f, s, fnt, it, bld] = get_fontname_and_size (obj);
   else
     f = "Helvetica";
     s = 10;
     fnt = f;
@@ -2466,25 +2463,25 @@ function [str, f, s] = __maybe_munge_tex
     str = sprintf ("%s\n", str{:})(1:end-1);
   endif
 
   if (enhanced)
     str = regexprep (str, '(?<!\\)@', '\\@');
   endif
 
   if (enhanced)
-    if (strcmp (obj.interpreter, "tex"))
+    if (strcmp (ntrp, "tex"))
       if (iscellstr (str))
         for n = 1:numel (str)
           str{n} = __tex2enhanced__ (str{n}, fnt, it, bld);
         endfor
       else
         str = __tex2enhanced__ (str, fnt, it, bld);
       endif
-    elseif (strcmp (obj.interpreter, "latex"))
+    elseif (strcmp (ntrp, "latex"))
       if (! warned_latex)
         warning ("latex markup not supported for text objects");
         warned_latex = true;
       endif
     endif
   endif
 
 endfunction
@@ -2815,17 +2812,17 @@ function retval = __do_enhanced_option__
       retval = "enhanced";
     endif
   endif
 
 endfunction
 
 function do_text (stream, gpterm, enhanced, obj, hax, screenpos)
 
-  [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string");
+  [label, f, s] = __maybe_munge_text__ (enhanced, obj, "string", obj.interpreter);
   fontspec = create_fontspec (f, s, gpterm);
   lpos = obj.position;
   halign = obj.horizontalalignment;
   valign = obj.verticalalignment;
   angle = obj.rotation;
   units = obj.units;
   color = obj.color;
   if (nargin > 5)
