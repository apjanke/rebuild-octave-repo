# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1423324045 18000
#      Sat Feb 07 10:47:25 2015 -0500
# Node ID b2fe4dbe5266f5119090e61804b90ab72a3eab94
# Parent  4b1a43786489f8c29dcaf7ab9535bd2cf91f350a
Don't play or record audio during 'make check'

* @audioplayer/audioplayer.m, @audiorecorder/audiorecorder.m: Convert
%!test blocks that play and record audio into %!demo blocks. Keep %!tests
that can validate properties without playing or recording.

diff --git a/scripts/audio/@audioplayer/audioplayer.m b/scripts/audio/@audioplayer/audioplayer.m
--- a/scripts/audio/@audioplayer/audioplayer.m
+++ b/scripts/audio/@audioplayer/audioplayer.m
@@ -102,58 +102,42 @@ function player = audioplayer (varargin)
       varargin{1} = str2func (varargin{1});
     endif
     player.player = __player_audioplayer__ (varargin{:});
     player = class (player, "audioplayer");
   endif
 
 endfunction
 
+%!demo
+%! fs = 44100;
+%! audio = randn (2, 2*fs) - 0.5;
+%! player = audioplayer (audio, fs);
+%! play (player);
+%! sleep (1);
+%! pause (player);
+%! sleep (1);
+%! resume (player);
+%! sleep (1);
+%! stop (player);
+
+## Tests of audioplayer must not actually play anything.
+
 %!testif HAVE_PORTAUDIO
 %! mono = randn (1, 44100) - 0.5;
 %! stereo = randn (2, 44100) - 0.5;
 %! fs = 44100;
 %! player1 = audioplayer (mono, fs);
 %! player2 = audioplayer (stereo, fs);
 %! assert (player1.NumberOfChannels, 1);
 %! assert (player2.NumberOfChannels, 2);
 %! assert (player1.SampleRate, 44100);
 %! assert (player2.SampleRate, 44100);
 %! assert (player1.TotalSamples, 44100);
 %! assert (player2.TotalSamples, 44100);
-%! playblocking (player1);
-%! playblocking (player2);
-
-%!testif HAVE_PORTAUDIO
-%! audio = randn (2, 88200) - 0.5;
-%! fs = 44100;
-%! player = audioplayer (audio, fs);
-%! assert (!isplaying (player));
-%! play (player);
-%! assert (isplaying (player));
-%! sleep (1);
-%! pause (player);
-%! assert (!isplaying (player));
-%! sleep (1);
-%! resume (player);
-%! assert (isplaying (player));
-%! sleep (1);
-
-%!testif HAVE_PORTAUDIO
-%! audio = randn (2, 88200) - 0.5;
-%! fs = 44100;
-%! player = audioplayer (audio, fs);
-%! assert (!isplaying (player));
-%! play (player);
-%! assert (isplaying (player));
-%! sleep (1);
-%! stop (player);
-%! sleep (1);
-%! assert (!isplaying (player));
-%! assert (player.CurrentSample, 0);
 
 %!testif HAVE_PORTAUDIO
 %! audio = randn (2, 44100) - 0.5;
 %! fs = 44100;
 %! player = audioplayer (audio, fs);
 %! set (player, {"SampleRate", "Tag", "UserData"}, {8000, "tag", [1, 2; 3, 4]});
 %! assert (player.SampleRate, 8000);
 %! assert (player.Tag, "tag");
diff --git a/scripts/audio/@audiorecorder/audiorecorder.m b/scripts/audio/@audiorecorder/audiorecorder.m
--- a/scripts/audio/@audiorecorder/audiorecorder.m
+++ b/scripts/audio/@audiorecorder/audiorecorder.m
@@ -46,50 +46,41 @@ function recorder = audiorecorder (varar
     varargin{1} = str2func (varargin{1});
   endif
 
   recorder.recorder = __recorder_audiorecorder__ (varargin{:});
   recorder = class (recorder, "audiorecorder");
 
 endfunction
 
-%!testif HAVE_PORTAUDIO
-%! recorder = audiorecorder (44100, 16, 2);
-%! recordblocking (recorder, 1);
-%! data = getaudiodata (recorder, "int16");
-%! assert (strcmp (class (data), "int16"));
-%! data = getaudiodata (recorder, "int8");
-%! assert (strcmp (class (data), "int8"));
-%! data = getaudiodata (recorder, "uint8");
-%! assert (strcmp (class (data), "uint8"));
-%! assert (size (data)(1), recorder.TotalSamples);
-%! assert (size (data)(2), 2);
-%! assert (size (data)(1) != 0);
-
-%!testif HAVE_PORTAUDIO
-%! recorder = audiorecorder (44100, 16, 2);
-%! record (recorder, 1)
-%! sleep (2);
-%! record (recorder, 1);
-%! sleep (2);
-%! data = getaudiodata (recorder);
-%! assert (size (data)(1) < 44100 * 2);
-
-%!testif HAVE_PORTAUDIO
+%!demo
 %! recorder = audiorecorder (44100, 16, 2);
 %! record (recorder, 1);
 %! sleep (2);
 %! player1 = audioplayer (recorder);
 %! player2 = getplayer (recorder);
 %! play (player1);
 %! sleep (2);
 %! play (player2);
 %! sleep (2);
-%! assert (player1.TotalSamples, recorder.TotalSamples);
-%! assert (player2.TotalSamples, recorder.TotalSamples);
+%! stop (player1);
+%! stop (player2);
+
+## Tests of audiorecorder must not actually record anything.
+
+%!testif HAVE_PORTAUDIO
+%! recorder = audiorecorder (44100, 16, 2);
+%! data = getaudiodata (recorder, "int16");
+%! assert (strcmp (class (data), "int16"));
+%! data = getaudiodata (recorder, "int8");
+%! assert (strcmp (class (data), "int8"));
+%! data = getaudiodata (recorder, "uint8");
+%! assert (strcmp (class (data), "uint8"));
+%! assert (size (data)(1), recorder.TotalSamples);
+%! assert (size (data)(2), 2);
 
 %!testif HAVE_PORTAUDIO
 %! recorder = audiorecorder;
 %! set (recorder, {"SampleRate", "Tag", "UserData"}, {8000, "tag", [1, 2; 3, 4]});
 %! assert (recorder.SampleRate, 8000);
 %! assert (recorder.Tag, "tag");
 %! assert (recorder.UserData, [1, 2; 3, 4]);
 
