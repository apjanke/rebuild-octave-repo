# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1466096994 14400
#      Thu Jun 16 13:09:54 2016 -0400
# Node ID 7ab7cd327257607887bbbf0562283a226ddbd9b4
# Parent  315f4ba604c850b6b5936979b9d5d84b0bfe5e18
hide fnmatch.h and glob.h headers

* liboctave/wrappers/glob-wrappers.c,
liboctave/wrappers/glob-wrappers.h: New files.

* liboctave/wrappers/module.mk: Update.

* glob-match.cc, oct-glob.cc: Use new wrapper functions.

diff --git a/liboctave/util/glob-match.cc b/liboctave/util/glob-match.cc
--- a/liboctave/util/glob-match.cc
+++ b/liboctave/util/glob-match.cc
@@ -19,20 +19,19 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
-#include <fnmatch.h>
-
 #include "glob-match.h"
 #include "oct-glob.h"
+#include "glob-wrappers.h"
 
 bool
 glob_match::match (const std::string& str) const
 {
   return octave::sys::fnmatch (pat, str, fnmatch_flags);
 }
 
 string_vector
@@ -42,18 +41,18 @@ glob_match::glob (void) const
 }
 
 int
 glob_match::opts_to_fnmatch_flags (unsigned int xopts) const
 {
   int retval = 0;
 
   if (xopts & pathname)
-    retval |= FNM_PATHNAME;
+    retval |= octave_fnm_pathname_wrapper ();
 
   if (xopts & noescape)
-    retval |= FNM_NOESCAPE;
+    retval |= octave_fnm_noescape_wrapper ();
 
   if (xopts & period)
-    retval |= FNM_PERIOD;
+    retval |= octave_fnm_period_wrapper ();
 
   return retval;
 }
diff --git a/liboctave/util/oct-glob.cc b/liboctave/util/oct-glob.cc
--- a/liboctave/util/oct-glob.cc
+++ b/liboctave/util/oct-glob.cc
@@ -22,21 +22,21 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <algorithm>
 #include <string>
 
-#include <fnmatch.h>
-#include <glob.h>
+#include "glob-wrappers.h"
 
 #include "oct-glob.h"
 #include "file-stat.h"
+#include "unwind-prot.h"
 
 // These functions are defined here and not in glob_match.cc so that we
 // can include the glob.h file from gnulib, which defines glob to
 // be rpl_glob.  If we include glob.h in glob_match.cc, then it
 // transforms the glob_match::glob function to be glob_match::rpl_glob,
 // which is not what we want...
 
 static bool
@@ -54,53 +54,61 @@ namespace octave
     bool
     fnmatch (const string_vector& pat, const std::string& str, int fnm_flags)
     {
       int npat = pat.numel ();
 
       const char *cstr = str.c_str ();
 
       for (int i = 0; i < npat; i++)
-        if (::fnmatch (pat(i).c_str (), cstr, fnm_flags) != FNM_NOMATCH)
+        if (octave_fnmatch_wrapper (pat(i).c_str (), cstr, fnm_flags)
+            != octave_fnm_nomatch_wrapper ())
           return true;
 
       return false;
     }
 
     string_vector
     glob (const string_vector& pat)
     {
       string_vector retval;
 
       int npat = pat.numel ();
 
       int k = 0;
 
+      octave::unwind_protect frame;
+
+      void *glob_info = octave_create_glob_info_struct ();
+
+      frame.add_fcn (octave_destroy_glob_info_struct, glob_info);
+
       for (int i = 0; i < npat; i++)
         {
           std::string xpat = pat(i);
 
           if (! xpat.empty ())
             {
-              glob_t glob_info;
-
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) \
      && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
               std::replace_if (xpat.begin (), xpat.end (),
                                std::bind2nd (std::equal_to<char> (), '\\'),
                                '/');
 #endif
 
-              int err = gnulib::glob (xpat.c_str (), GLOB_NOSORT, 0, &glob_info);
+              int err = octave_glob_wrapper (xpat.c_str (),
+                                             octave_glob_nosort_wrapper (),
+                                             glob_info);
 
               if (! err)
                 {
-                  int n = glob_info.gl_pathc;
+                  int n = octave_glob_num_matches (glob_info);
 
-                  const char * const *matches = glob_info.gl_pathv;
+                  const char * const *matches
+                    = octave_glob_match_list (glob_info);
 
                   // FIXME: we shouldn't have to check to see if
                   // a single match exists, but it seems that glob() won't
                   // check for us unless the pattern contains globbing
                   // characters.  Hmm.
 
                   if (n > 1
                       || (n == 1
@@ -119,17 +127,17 @@ namespace octave
                                                          '/'),
                                            '\\');
 #endif
 
                           retval[k++] = tmp;
                         }
                     }
 
-                  gnulib::globfree (&glob_info);
+                  octave_globfree_wrapper (glob_info);
                 }
             }
         }
 
       return retval.sort ();
     }
   }
 }
diff --git a/liboctave/wrappers/glob-wrappers.c b/liboctave/wrappers/glob-wrappers.c
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/glob-wrappers.c
@@ -0,0 +1,110 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+// These functions may be provided by gnulib.  We don't include gnulib
+// headers directly in Octave's C++ source files to avoid problems that
+// may be caused by the way that gnulib overrides standard library
+// functions.
+
+#if defined (HAVE_CONFIG_H)
+#  include "config.h"
+#endif
+
+#include <stdlib.h>
+
+#include <fnmatch.h>
+#include <glob.h>
+
+#include "glob-wrappers.h"
+
+void *
+octave_create_glob_info_struct (void)
+{
+  return malloc (sizeof (glob_t));
+}
+
+// Does not call globfree.
+void
+octave_destroy_glob_info_struct (void *glob_info)
+{
+  free (glob_info);
+}
+
+int
+octave_glob_wrapper (const char *pattern, int flags, void *glob_info)
+{
+  return glob (pattern, flags, 0, glob_info);
+}
+
+int
+octave_glob_num_matches (void *glob_info)
+{
+  return glob_info ? ((glob_t *) glob_info)->gl_pathc : 0;
+}
+
+const char * const *
+octave_glob_match_list (void *glob_info)
+{
+  return glob_info ? ((glob_t *) glob_info)->gl_pathv : 0;
+}
+
+void
+octave_globfree_wrapper (void *glob_info)
+{
+  globfree ((glob_t *) glob_info);
+}
+
+int
+octave_glob_nosort_wrapper (void)
+{
+  return GLOB_NOSORT;
+}
+
+int
+octave_fnmatch_wrapper (const char *pattern, const char *name, int flags)
+{
+  return fnmatch (pattern, name, flags);
+}
+
+int
+octave_fnm_nomatch_wrapper (void)
+{
+  return FNM_NOMATCH;
+}
+
+int
+octave_fnm_pathname_wrapper (void)
+{
+  return FNM_PATHNAME;
+}
+
+int
+octave_fnm_noescape_wrapper (void)
+{
+  return FNM_NOESCAPE;
+}
+
+int
+octave_fnm_period_wrapper (void)
+{
+  return FNM_PERIOD;
+}
diff --git a/liboctave/wrappers/glob-wrappers.h b/liboctave/wrappers/glob-wrappers.h
new file mode 100644
--- /dev/null
+++ b/liboctave/wrappers/glob-wrappers.h
@@ -0,0 +1,64 @@
+/*
+
+Copyright (C) 2016 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if ! defined (octave_glob_wrappers_h)
+#define octave_glob_wrappers_h 1
+
+#if defined __cplusplus
+extern "C" {
+#endif
+
+extern void *octave_create_glob_info_struct (void);
+
+// Does not call globfree.
+extern void octave_destroy_glob_info_struct (void *glob_info);
+
+// We don't need the error function pointer that the system glob
+// function allows.
+extern int
+octave_glob_wrapper (const char *pattern, int flags, void *glob_info);
+
+extern int octave_glob_num_matches (void *glob_info);
+
+extern const char * const *octave_glob_match_list (void *glob_info);
+
+extern void octave_globfree_wrapper (void *glob_info);
+
+extern int octave_glob_nosort_wrapper (void);
+  
+extern int
+octave_fnmatch_wrapper (const char *pattern, const char *name, int flags);
+
+extern int octave_fnm_nomatch_wrapper (void);
+
+extern int octave_fnm_pathname_wrapper (void);
+
+extern int octave_fnm_noescape_wrapper (void);
+
+extern int octave_fnm_period_wrapper (void);
+
+#if defined __cplusplus
+}
+#endif
+
+#endif
+
diff --git a/liboctave/wrappers/module.mk b/liboctave/wrappers/module.mk
--- a/liboctave/wrappers/module.mk
+++ b/liboctave/wrappers/module.mk
@@ -2,16 +2,17 @@ NOINSTALL_WRAPPERS_INC = \
   liboctave/wrappers/areadlink-wrapper.h \
   liboctave/wrappers/base64-wrappers.h \
   liboctave/wrappers/canonicalize-file-name-wrapper.h \
   liboctave/wrappers/dirent-wrappers.h \
   liboctave/wrappers/fcntl-wrappers.h \
   liboctave/wrappers/filepos-wrappers.h \
   liboctave/wrappers/fpucw-wrapper.h \
   liboctave/wrappers/gen-tempname-wrapper.h \
+  liboctave/wrappers/glob-wrappers.h \
   liboctave/wrappers/hash-wrappers.h \
   liboctave/wrappers/mkostemp-wrapper.h \
   liboctave/wrappers/nanosleep-wrapper.h \
   liboctave/wrappers/nproc-wrapper.h \
   liboctave/wrappers/octave-popen2.h \
   liboctave/wrappers/putenv-wrapper.h \
   liboctave/wrappers/set-program-name-wrapper.h \
   liboctave/wrappers/stat-wrappers.h \
@@ -29,16 +30,17 @@ WRAPPERS_SRC = \
   liboctave/wrappers/areadlink-wrapper.c \
   liboctave/wrappers/base64-wrappers.c \
   liboctave/wrappers/canonicalize-file-name-wrapper.c \
   liboctave/wrappers/dirent-wrappers.c \
   liboctave/wrappers/fcntl-wrappers.c \
   liboctave/wrappers/filepos-wrappers.c \
   liboctave/wrappers/fpucw-wrapper.c \
   liboctave/wrappers/gen-tempname-wrapper.c \
+  liboctave/wrappers/glob-wrappers.c \
   liboctave/wrappers/hash-wrappers.c \
   liboctave/wrappers/mkostemp-wrapper.c \
   liboctave/wrappers/nanosleep-wrapper.c \
   liboctave/wrappers/nproc-wrapper.c \
   liboctave/wrappers/octave-popen2.c \
   liboctave/wrappers/putenv-wrapper.c \
   liboctave/wrappers/set-program-name-wrapper.c \
   liboctave/wrappers/stat-wrappers.c \
