# HG changeset patch
# User Rik <rik@octave.org>
# Date 1413690574 25200
#      Sat Oct 18 20:49:34 2014 -0700
# Node ID d0f02639f5603e419548e01b0b975abbad57201b
# Parent  f0dcb44826f61ff1d91631b923b9eb24aa1910ac
delete.m: Allow multiple file names to delete.

* delete.m: Use varargin to accept multiple file names to delete.
Add new BIST tests for deleting a file and deleting a graphics handle.

diff --git a/scripts/miscellaneous/delete.m b/scripts/miscellaneous/delete.m
--- a/scripts/miscellaneous/delete.m
+++ b/scripts/miscellaneous/delete.m
@@ -13,51 +13,83 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {} delete (@var{file})
+## @deftypefnx {Function File} {} delete (@var{file1}, @var{file2}, @dots{})
 ## @deftypefnx {Function File} {} delete (@var{handle})
 ## Delete the named file or graphics handle.
 ##
-## Deleting graphics objects is the proper way to remove
+## @var{file} may contain globbing patterns such as @samp{*}.  Multiple files
+## to be deleted may be specified in the same function call.
+##
+## @var{handle} may be a scalar or vector of graphic handles to delete.
+##
+## Programming Note: Deleting graphics objects is the proper way to remove
 ## features from a plot without clearing the entire figure.
-## @seealso{clf, cla, unlink}
+## @seealso{clf, cla, unlink, rmdir}
 ## @end deftypefn
 
 ## Author: jwe
 
-function delete (arg)
+function delete (varargin)
 
-  if (nargin != 1)
+  if (nargin == 0)
     print_usage ();
   endif
 
-  if (ischar (arg))
-    files = glob (arg);
-    if (isempty (files))
-      warning ("delete: no such file: %s", arg);
-    endif
-    for i = 1:length (files)
-      file = files{i};
-      [err, msg] = unlink (file);
-      if (err)
-        warning ("delete: %s: %s", file, msg);
+  if (iscellstr (varargin))
+    for arg = varargin
+      files = glob (arg{1});
+      if (isempty (files))
+        warning ("delete: no such file: %s", arg{1});
       endif
+      for i = 1:length (files)
+        file = files{i};
+        [err, msg] = unlink (file);
+        if (err)
+          warning ("delete: %s: %s", file, msg);
+        endif
+      endfor
     endfor
-  elseif (all (ishandle (arg(:))))
+
+  elseif (isscalar (varargin) && all (ishandle (varargin{1}(:))))
     ## Delete a graphics object.
-    __go_delete__ (arg);
+    __go_delete__ (varargin{1});
+
   else
     error ("delete: first argument must be a filename or graphics handle");
   endif
 
 endfunction
 
 
+%!test
+%! unwind_protect
+%!   file = tempname;
+%!   tmp_var = pi;
+%!   save (file, "tmp_var");
+%!   assert (exist (file, "file"));
+%!   delete (file);
+%!   assert (! exist (file, "file"));
+%! unwind_protect_cleanup
+%!   unlink (file);
+%! end_unwind_protect
+
+%!test
+%! unwind_protect
+%!   hf = figure ("visible", "off"); 
+%!   hl = plot (1:10);
+%!   assert (get (gca, "children"), hl); 
+%!   delete (hl);
+%!   assert (get (gca, "children"), zeros (0,1)); 
+%! unwind_protect_cleanup
+%!   close (hf);
+%! end_unwind_protect
+
 %% Test input validation
 %!error delete ()
-%!error delete (1, 2)
 %!error <first argument must be a filename> delete (struct ())
 
