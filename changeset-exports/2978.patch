# HG changeset patch
# User jwe
# Date 863730823 0
#      Thu May 15 21:13:43 1997 +0000
# Node ID 49de012386386b383cd6d050695610a84957636e
# Parent  d6ba658ac4ae1a900afb1a9aaaebe325ac13c5fe
[project @ 1997-05-15 21:13:42 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 Thu May 15 11:48:10 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* variables.cc (bind_ans): Only bind ans and print result if value
+	is defined.
+
 	* defun.cc: New file.  Move functions for installing objects in
 	the symbol table here from variables.cc.
 
 	* oct-obj.h, oct-obj.cc: Add custom allocator, fwiw.
 
 	* toplev.cc (main_loop): Correctly increment command number.
 
 	* TEMPLATE-INST/SLList-tm.cc: Don't instantiate lists of pointers
diff --git a/src/pt-exp.cc b/src/pt-exp.cc
--- a/src/pt-exp.cc
+++ b/src/pt-exp.cc
@@ -908,17 +908,17 @@ tree_multi_assignment::rvalue (int nargo
 			    ? rhs_val(k++) : octave_value ();
 
 			  if (tmp.is_defined ())
 			    {
 			      // XXX FIXME XXX -- handle other assignment ops.
 			      ult.assign (octave_value::asn_eq, tmp);
 			    }
 			  else
-			    error ("element number %d undefined in return list", k+1);
+			    error ("element number %d undefined in return list", k);
 
 			  if (error_state)
 			    eval_error ();
 			  else if (! Vprint_rhs_assign_val)
 			    {
 			      octave_value lhs_val = ult.value ();
 
 			      if (! error_state && print_result ())
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -1464,20 +1464,23 @@ character, but may not be combined.")
 
 // Defining variables.
 
 void
 bind_ans (const octave_value& val, bool print)
 {
   static symbol_record *sr = global_sym_tab->lookup ("ans", true);
 
-  sr->define (val);
+  if (val.is_defined ())
+    {
+      sr->define (val);
 
-  if (print)
-    val.print_with_name (octave_stdout, "ans");
+      if (print)
+	val.print_with_name (octave_stdout, "ans");
+    }
 }
 
 void
 bind_global_error_variable (void)
 {
   *error_message_buffer << ends;
 
   char *error_text = error_message_buffer->str ();
