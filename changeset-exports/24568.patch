# HG changeset patch
# User Rik <rik@octave.org>
# Date 1515519177 28800
#      Tue Jan 09 09:32:57 2018 -0800
# Node ID 4db06f3bc34f3800c418aefc91b4bacb6eb9e2cb
# Parent  3fa85fe6e495baba8a34f595c348220642ab334d
edit.m: Don't error out if "Cancel" button is used in save dialog (bug #52841).

* edit.m: Check return class of uiputfile().  If it is not char, then
user pressed "Cancel" and function returns without doing anything.

diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -325,17 +325,17 @@ function retval = edit (varargin)
         else
           fclose (fid);
         endif
         do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
         return;
       endif
     endif
 
-    ## If editing a new file, prompt for creation if gui is running
+    ## If editing a new file, prompt for creation if GUI is running
     if (isguirunning ())
       if (! __octave_link_edit_file__ (file, "prompt"));
         return;
       endif
     endif
 
     ## If editing a new file that is neither an m-file nor an oct-file,
     ## just edit it.
@@ -353,16 +353,19 @@ function retval = edit (varargin)
       ## Some unknown file.  Create and open it or just open it.
       if (isempty (ext))
         fileandpath = [fileandpath ".m"];  # Add .m extension per default
       endif
       if (isguirunning ())
         ## Write the initial file (if there is anything to write)
         ## Give user the opportunity to change the file extension
         fileandpath = uiputfile (fileandpath);
+        if (! ischar (fileandpath))
+          return;  # Cancel Button pressed
+        endif
         fid = fopen (fileandpath, "wt");
         if (fid < 0)
           error ("edit: could not create %s", fileandpath);
         endif
         fclose (fid);
       endif
       do_edit (FUNCTION.EDITOR, fileandpath, FUNCTION.MODE);
       return;
