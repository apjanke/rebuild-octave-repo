# HG changeset patch
# User jwe
# Date 1194461281 0
#      Wed Nov 07 18:48:01 2007 +0000
# Node ID 373c399048777bca5f802c211d86d652832ba421
# Parent  c7992b210874b1a976493dfcc16ce6b5e7c97256
[project @ 2007-11-07 18:48:00 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2007-11-07  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Also check for pcre/pcre.h.
+
 2007-11-01  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Delete BLAS library calling convention
 	compatibility check.
 
 2007-10-31  John W. Eaton  <jwe@octave.org>
 
 	* README.binary-dist: Delete.
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl               2002, 2003, 2004, 2005
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.590 $)
+AC_REVISION($Revision: 1.591 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -420,17 +420,17 @@ else
   AC_MSG_WARN($warn_qhull)
 fi
 
 AC_SUBST(TEXINFO_QHULL)
 
 ### Check for pcre/regex library.
 AC_SUBST(REGEX_LIBS)
 WITH_PCRE_CONFIG=no
-AC_CHECK_HEADER(pcre.h, WITH_PCRE=yes, WITH_PCRE=no)
+AC_CHECK_HEADERS([pcre/pcre.h pcre.h], WITH_PCRE=yes, WITH_PCRE=no)
 if test $WITH_PCRE = no ; then
   AC_CHECK_PROG(WITH_PCRE_CONFIG, pcre-config, yes, no)
   if test $WITH_PCRE_CONFIG = yes ; then
     WITH_PCRE=yes
   fi
 fi
 AC_CACHE_CHECK([whether pcre.h has the macros we need],
 	       [ac_cv_pcre_h_macros_present],
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2007-11-07  Michael Zeising  <michael@michaels-website.de>
+
+	* audio/wavwrite.m, audio/wavwrite.m: Correct sample scaling.
+
 2007-11-07  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Also set have_data to false if any of
 	the data limits are infinite.
 	(get_data_limits): Don't do anything if xdat or tx are empty.
 	(get_axis_limits): Don't do anything if min_val or max_val are
 	infinite.
 
diff --git a/scripts/audio/wavread.m b/scripts/audio/wavread.m
--- a/scripts/audio/wavread.m
+++ b/scripts/audio/wavread.m
@@ -33,17 +33,17 @@
 ## Read only samples @var{n1} through @var{n2} from each channel.
 ##
 ## @deftypefnx {Function File} {[@var{samples}, @var{channels}] =} wavread (@var{filename}, "size")
 ## Return the number of samples (@var{n}) and channels (@var{ch})
 ## instead of the audio data.
 ## @seealso{wavwrite}
 ## @end deftypefn
 
-## Author: Michael Zeising <michael.zeising@stud.uni-erlangen.de>
+## Author: Michael Zeising <michael@michaels-website.de>
 ## Created: 06 December 2005
 
 function [y, samples_per_sec, bits_per_sample] = wavread (filename, param)
 
   FORMAT_PCM        = 0x0001;   # PCM (8/16/32 bit)
   FORMAT_IEEE_FLOAT = 0x0003;   # IEEE float (32/64 bit)
   BYTEORDER         = "ieee-le";
 
@@ -190,23 +190,23 @@ function [y, samples_per_sec, bits_per_s
     yi = reshape (yi, 3, rows(yi)/3)';
     yi(yi(:,3) >= 128, 3) -= 256;
     yi = yi * [1; 256; 65536];
   end
   if (format_tag == FORMAT_PCM)
     ## normalize samples
     switch (bits_per_sample)
       case 8
-        yi = (yi - 127.5)/127.5;
+        yi = (yi - 128)/127;
       case 16
-        yi /= 32768;
+        yi /= 32767;
       case 24
-	yi /= 8388608;
+		yi /= 8388607;
       case 32
-        yi /= 2147483648;
+        yi /= 2147483647;
     endswitch
   endif
   
   ## deinterleave
   nr = numel (yi) / channels;
   y = reshape (yi, channels, nr)';
   
 endfunction
diff --git a/scripts/audio/wavwrite.m b/scripts/audio/wavwrite.m
--- a/scripts/audio/wavwrite.m
+++ b/scripts/audio/wavwrite.m
@@ -22,17 +22,17 @@
 ## @deftypefnx {Function File} {} wavwrite (@var{y}, @var{fs}, @var{bits}, @var{filename})
 ## Write @var{y} to the canonical RIFF/WAVE sound file @var{filename}
 ## with sample rate @var{fs} and bits per sample @var{bits}.  The
 ## default sample rate is 8000 Hz with 16-bits per sample.  Each column
 ## of the data represents a separate channel.
 ## @seealso{wavread}
 ## @end deftypefn
 
-## Author: Michael Zeising <michael.zeising@stud.uni-erlangen.de>
+## Author: Michael Zeising <michael@michaels-website.de>
 ## Created: 06 December 2005
 
 function wavwrite (y, varargin)
 
   BYTEORDER = "ieee-le";
 
   ## For backward compatibility with previous versions of Octave, also
   ## accept the inputs
@@ -142,21 +142,21 @@ function wavwrite (y, varargin)
   endif
   
   ## interleave samples
   yi = reshape (y', n*channels, 1);
   
   ## scale samples
   switch (bits_per_sample)
     case 8
-      yi = round (yi*128 + 128);
+      yi = round (yi*127 + 128);
     case 16
-      yi = round (yi*32768);
+      yi = round (yi*32767);
     case 32
-      yi = round (yi*2147483648);
+      yi = round (yi*2147483647);
   endswitch
   
   ## write to file
   c = fwrite (fid, yi, format, 0, BYTEORDER);
   
   fclose (fid);
   
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,23 @@
+2007-11-07  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/regexp.cc: Handle HAVE_PCRE_PCRE_H.  Check
+	HAVE_PCRE_H instead of HAVE_PCRE to decide whether to include pcre.h.
+
+	* DLD-FUNCTIONS/__gnuplot_raw__.l (Fgnuplot_command_plot,
+	Fgnuplot_command_replot, Fgnuplot_command_splot,
+	Fgnuplot_command_using, Fgnuplot_command_with,
+	Fgnuplot_command_axes, Fgnuplot_command_title,
+	Fgnuplot_command_end, Fgnuplot_use_title_option,
+	F__clear_plot_window__, Fcloseplot, Fpurge_tmp_files,
+	F__gnuplot_raw__, F__gnuplot_send_inline_data__, F__gnuplot_set__,
+	F__gnuplot_show__, F__gnuplot_plot__, F__gnuplot_splot__,
+	F__gnuplot_replot__): Note obsolescence in doc string.
+
 2007-11-06  Kai Habel  <kai.habel@gmx.de>
 
 	* graphics.h.in (class surface::properties): New properties, 
 	cdata, facecolor, facealpha, edgecolor, linestyle,
 	linewidth, marker, markeredgecolor, markerfacecolor, markersize.
 	* graphics.cc (surface::properties::properties,
 	surface::properties::set, surface::properties::get,
 	surface::properties::factory_defaults): Handle new properities.
diff --git a/src/DLD-FUNCTIONS/__gnuplot_raw__.l b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
--- a/src/DLD-FUNCTIONS/__gnuplot_raw__.l
+++ b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
@@ -1562,113 +1562,139 @@ The default value @code{\"gnuplot\"}.  @
 
   return retval;
 }
 
 DEFUN_DLD (gnuplot_command_plot, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} = } gnuplot_command_plot ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} = } gnuplot_command_plot (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_plot);
 }
 
 DEFUN_DLD (gnuplot_command_replot, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_replot ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_replot (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_replot);
 }
 
 DEFUN_DLD (gnuplot_command_splot, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_splot ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_splot (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_splot);
 }
 
 DEFUN_DLD (gnuplot_command_using, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_using ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_using (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_using);
 }
 
 DEFUN_DLD (gnuplot_command_with, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_with ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_with (@var{new_val})\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_with);
 }
 
 DEFUN_DLD (gnuplot_command_axes, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_axes ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_axes (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_axes);
 }
 
 DEFUN_DLD (gnuplot_command_title, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_title ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_title (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_title);
 }
 
 DEFUN_DLD (gnuplot_command_end, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_command_end ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_command_end (@var{new_val})\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
+\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_command_end);
 }
 
 DEFUN_DLD (gnuplot_use_title_option, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{val} =} gnuplot_use_title_option ()\n\
 @deftypefnx {Loadable Function} {@var{old_val} =} gnuplot_use_title_option (@var{new_val})\n\
 If enabled, append @samp{-title \"Figure NN\"} to the gnuplot command.\n\
 By default, this feature is enabled if the @code{DISPLAY} environment\n\
 variable is set when Octave starts.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (gnuplot_use_title_option);
 }
 
 DEFUN_DLD (__clear_plot_window__, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} clearplot\n\
 @deftypefnx {Loadable Function} {} clg\n\
 Clear the plot window and any titles or axis labels.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   gnuplot::clear ();
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (closeplot, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} closeplot\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
+\n\
 Close stream to the @code{gnuplot} subprocess.  If you are using X11,\n\
 this will close the plot window.\n\
+@seealso{close}\n\
 @end deftypefn")
 {
   gnuplot::close ();
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (purge_tmp_files, , ,
@@ -1676,29 +1702,32 @@ DEFUN_DLD (purge_tmp_files, , ,
 @deftypefn {Loadable Function} {} purge_tmp_files\n\
 Delete the temporary files created by the plotting commands.\n\
 \n\
 Octave creates temporary data files for @code{gnuplot} and then sends\n\
 commands to @code{gnuplot} through a pipe.  Octave will delete the\n\
 temporary files on exit, but if you are doing a lot of plotting you may\n\
 want to clean up in the middle of a session.\n\
 \n\
-A future version of Octave will eliminate the need to use temporary\n\
-files to hold the plot data.\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   gnuplot::cleanup_tmp_files ();
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_raw__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __gnuplot_raw__ (@var{string})\n\
 Send @var{string} directly to gnuplot subprocess.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   if (args.length () == 1 && args(0).is_string ())
     {
       std::string cmd = args(0).string_value ();
 
       gnuplot::send_raw (cmd);
     }
@@ -1707,16 +1736,19 @@ Send @var{string} directly to gnuplot su
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_send_inline_data__, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} __gnuplot_send_inline_data__ (@var{data}, @var{ndim}, @var{parametric})\n\
 Send @var{val} to gnuplot subprocess as inline data.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   int nargin = args.length ();
 
   if (nargin > 0 && nargin < 4)
     {
@@ -1742,64 +1774,82 @@ Send @var{val} to gnuplot subprocess as 
 
   return retval;
 }
 
 DEFUN_DLD (__gnuplot_set__, args, ,
   "-*- texinfo -*-\n\
 @deffn {Loadable Function} __gnuplot_set__ options\n\
 Set plotting options for gnuplot\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deffn")
 {
   string_vector argv = args.make_argv ("set");
 
   if (! error_state)
     gnuplot::set (argv);
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_show__, args, ,
   "-*- texinfo -*-\n\
 @deffn {Loadable Function} __gnuplot_show__ options\n\
 Show plotting options.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}\n\
 @end deffn")
 {
   string_vector argv = args.make_argv ("show");
 
   if (! error_state)
     gnuplot::show (argv);
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_plot__, args, ,
-  "Plot with gnuplot.\n")
+  "-*- texinfo -*-\n\
+Plot with gnuplot.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}")
 {
   string_vector argv = args.make_argv ("plot");
 
   if (! error_state)
     gnuplot::plot (argv);
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_splot__, args, ,
-  "Plot with gnuplot.\n")
+  "-*- texinfo -*-\n\
+Plot with gnuplot.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}")
 {
   string_vector argv = args.make_argv ("splot");
 
   if (! error_state)
     gnuplot::plot (argv);
 
   return octave_value_list ();
 }
 
 DEFUN_DLD (__gnuplot_replot__, args, ,
-  "Plot with gnuplot.\n")
+  "-*- texinfo -*-\n\
+Plot with gnuplot.\n\
+\n\
+@strong{This function is obsolete and will be removed from a future version\n\
+of Octave.}")
 {
   string_vector argv = args.make_argv ("replot");
 
   if (! error_state)
     gnuplot::plot (argv);
 
   return octave_value_list ();
 }
diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -35,26 +35,26 @@ along with Octave; see the file COPYING.
 #include "utils.h"
 
 #include "Cell.h"
 #include "oct-map.h"
 #include "str-vec.h"
 #include "quit.h"
 #include "parse.h"
 
-#ifdef HAVE_PCRE
+#if defined (HAVE_PCRE_PCRE_H)
+#include <pcre/pcre.h>
+#elif defined (HAVE_PCRE_H)
 #include <pcre.h>
-#else
-#ifdef HAVE_REGEX
-#ifdef __MINGW32__
+#elif defined (HAVE_REGEX)
+#if defined (__MINGW32__)
 #define __restrict
 #endif
 #include <regex.h>
 #endif
-#endif
 
 // The regexp is constructed as a linked list to avoid resizing the
 // return values in arrays at each new match.
 
 // FIXME don't bother collecting and composing return values the user
 // doesn't want.
 
 class regexp_elem
