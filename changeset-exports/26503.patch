# HG changeset patch
# User Rik <rik@octave.org>
# Date 1547008738 28800
#      Tue Jan 08 20:38:58 2019 -0800
# Branch stable
# Node ID a534d1be2aa0e40078a36df30ad3ade43974419c
# Parent  dfc8d79cc28bc551fd12d890e303d4dd985eba75
dDiagMatrix.cc: Fix static analyzer detected issues (bug #55347).

* dDiagMatrix.cc (DiagMatrix::row (octave_idx_type)): Delete useless
check on "r > c".
* dDiagMatrix.cc (DiagMatrix::row (char *s)): Get first character
with "s[0]" rather than "*s".
* dDiagMatrix.cc (DiagMatrix::column (octave_idx_type)): Delete useless
check on "r < c".
* dDiagMatrix.cc (DiagMatrix::column (char *s)): Get first character
with "s[0]" rather than "*s".

diff --git a/liboctave/array/dDiagMatrix.cc b/liboctave/array/dDiagMatrix.cc
--- a/liboctave/array/dDiagMatrix.cc
+++ b/liboctave/array/dDiagMatrix.cc
@@ -165,29 +165,29 @@ RowVector
 DiagMatrix::row (octave_idx_type i) const
 {
   octave_idx_type r = rows ();
   octave_idx_type c = cols ();
   if (i < 0 || i >= r)
     (*current_liboctave_error_handler) ("invalid row selection");
 
   RowVector retval (c, 0.0);
-  if (r <= c || (r > c && i < c))
+  if (r <= c || i < c)
     retval.elem (i) = elem (i, i);
 
   return retval;
 }
 
 RowVector
 DiagMatrix::row (char *s) const
 {
   if (! s)
     (*current_liboctave_error_handler) ("invalid row selection");
 
-  char c = *s;
+  char c = s[0];
   if (c == 'f' || c == 'F')
     return row (static_cast<octave_idx_type> (0));
   else if (c == 'l' || c == 'L')
     return row (rows () - 1);
   else
     (*current_liboctave_error_handler) ("invalid row selection");
 }
 
@@ -195,29 +195,29 @@ ColumnVector
 DiagMatrix::column (octave_idx_type i) const
 {
   octave_idx_type r = rows ();
   octave_idx_type c = cols ();
   if (i < 0 || i >= c)
     (*current_liboctave_error_handler) ("invalid column selection");
 
   ColumnVector retval (r, 0.0);
-  if (r >= c || (r < c && i < r))
+  if (r >= c || i < r)
     retval.elem (i) = elem (i, i);
 
   return retval;
 }
 
 ColumnVector
 DiagMatrix::column (char *s) const
 {
   if (! s)
     (*current_liboctave_error_handler) ("invalid column selection");
 
-  char c = *s;
+  char c = s[0];
   if (c == 'f' || c == 'F')
     return column (static_cast<octave_idx_type> (0));
   else if (c == 'l' || c == 'L')
     return column (cols () - 1);
   else
     (*current_liboctave_error_handler) ("invalid column selection");
 }
 
