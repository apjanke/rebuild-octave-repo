# HG changeset patch
# User jwe
# Date 750265398 0
#      Sun Oct 10 15:03:18 1993 +0000
# Node ID 527a597cfe47c1704e5f5aeb0b21d3bb1531c1e3
# Parent  5167d307c1c9ca524fd9f86a16047ba266b1b66d
[project @ 1993-10-10 15:03:18 by jwe]

diff --git a/src/tc-assign.cc b/src/tc-assign.cc
--- a/src/tc-assign.cc
+++ b/src/tc-assign.cc
@@ -836,17 +836,17 @@ tree_constant_rep::do_matrix_assignment 
 	    do_matrix_assignment (rhs, iv, rj);
 	  }
       }
       break;
     case magic_colon:
       {
 	int nc = columns ();
 	int new_nc = nc;
-	if (nc == 0 || rows () == 0)
+	if (nc == 0)
 	  new_nc = rhs_nc;
 
 	if (! indexed_assign_conforms (iv.capacity (), new_nc,
 				       rhs_nr, rhs_nc))
 	  {
 	    error ("A(matrix,:) = X: the number of rows in X must\
  match the number of elements in matrix, and the number of columns in\
  X must match the number of columns in A");
@@ -938,17 +938,17 @@ tree_constant_rep::do_matrix_assignment 
 	    do_matrix_assignment (rhs, ri, rj);
 	  }
       }
       break;
     case magic_colon:
       {
 	int nc = columns ();
 	int new_nc = nc;
-	if (nc == 0 || rows () == 0)
+	if (nc == 0)
 	  new_nc = rhs_nc;
 
 	if (! indexed_assign_conforms (ri.nelem (), new_nc, rhs_nr, rhs_nc))
 	  {
 	    error ("A(range,:) = X: the number of rows in X must match\
  the number of elements in range, and the number of columns in X must\
  match the number of columns in A");  
 	    return;
@@ -1013,17 +1013,17 @@ tree_constant_rep::do_matrix_assignment 
     case complex_matrix_constant:
     case matrix_constant:
       {
 	Matrix mj = tmp_j.matrix_value ();
 	idx_vector jv (mj, user_pref.do_fortran_indexing, "column",
 		       columns ());
 	int nr = rows ();
 	int new_nr = nr;
-	if (nr == 0 || columns () == 0)
+	if (nr == 0)
 	  new_nr = rhs_nr;
 
 	if (! indexed_assign_conforms (new_nr, jv.capacity (),
 				       rhs_nr, rhs_nc))
 	  {
 	    error ("A(:,matrix) = X: the number of rows in X must\
  match the number of rows in A, and the number of columns in X must\
  match the number of elements in matrix");   
@@ -1036,17 +1036,17 @@ tree_constant_rep::do_matrix_assignment 
     case string_constant:
       gripe_string_invalid ();
       break;
     case range_constant:
       {
 	Range rj = tmp_j.range_value ();
 	int nr = rows ();
 	int new_nr = nr;
-	if (nr == 0 || columns () == 0)
+	if (nr == 0)
 	  new_nr = rhs_nr;
 
 	if (! indexed_assign_conforms (new_nr, rj.nelem (), rhs_nr, rhs_nc))
 	  {
 	    error ("A(:,range) = X: the number of rows in X must match\
  the number of rows in A, and the number of columns in X must match\
  the number of elements in range");
 	    return;
