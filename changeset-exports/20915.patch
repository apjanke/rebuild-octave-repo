# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1450303343 18000
#      Wed Dec 16 17:02:23 2015 -0500
# Node ID a3359fe50966d2c4938d4ef2d38d0e873ab9b7c1
# Parent  3ecd9e6650b5a22baed93003150017f8bdb5ca1b
remove unused nargout variables

* __ichol__.cc, __ilu__.cc, ellipj.cc, filter.cc, mgorth.cc, nproc.cc,
pr-output.cc, quad.cc, quadcc.cc, sylvester.cc:
Remove unused nargout from DEFUNs that no longer use it.

diff --git a/libinterp/corefcn/__ichol__.cc b/libinterp/corefcn/__ichol__.cc
--- a/libinterp/corefcn/__ichol__.cc
+++ b/libinterp/corefcn/__ichol__.cc
@@ -173,17 +173,17 @@ void ichol_0 (octave_matrix_t& sm, const
               jjrow = ridx[Lfirst[k]];
               Llist[k] = Llist[jjrow];
               Llist[jjrow] = k;
             }
         }
     }
 }
 
-DEFUN (__ichol0__, args, nargout,
+DEFUN (__ichol0__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{L} =} __ichol0__ (@var{A})\n\
 @deftypefnx {} {@var{L} =} __ichol0__ (@var{A}, @var{michol})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 
 {
   octave_value_list retval;
@@ -419,17 +419,17 @@ void ichol_t (const octave_matrix_t& sm,
 
   for (i = 0; i < total_len; i++)
     {
       L.ridx (i) = ridx_l[i];
       L.data (i) = data_l[i];
     }
 }
 
-DEFUN (__icholt__, args, nargout,
+DEFUN (__icholt__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{L} =} __icholt__ (@var{A})\n\
 @deftypefnx {} {@var{L} =} __icholt__ (@var{A}, @var{droptol})\n\
 @deftypefnx {} {@var{L} =} __icholt__ (@var{A}, @var{droptol}, @var{michol})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   octave_value_list retval;
diff --git a/libinterp/corefcn/__ilu__.cc b/libinterp/corefcn/__ilu__.cc
--- a/libinterp/corefcn/__ilu__.cc
+++ b/libinterp/corefcn/__ilu__.cc
@@ -121,17 +121,17 @@ void ilu_0 (octave_matrix_t& sm, const s
         }
       for (i = j1; i <= j2; i++)
         iw[ridx[i]] = -1;
     }
   if (opt == ROW)
     sm = sm.transpose ();
 }
 
-DEFUN (__ilu0__, args, nargout,
+DEFUN (__ilu0__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {[@var{L}, @var{U}] =} __ilu0__ (@var{A})\n\
 @deftypefnx {} {[@var{L}, @var{U}] =} __ilu0__ (@var{A}, @var{milu})\n\
 @deftypefnx {} {[@var{L}, @var{U}, @var{P}] =} __ilu0__ (@var{A}, @dots{})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   int nargin = args.length ();
@@ -458,17 +458,17 @@ void ilu_crout (octave_matrix_t& sm_l, o
     {
       U.ridx (i) = ridx_u[i];
       U.data (i) = data_u[i];
     }
 
   U = U.transpose ();
 }
 
-DEFUN (__iluc__, args, nargout,
+DEFUN (__iluc__, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {[@var{L}, @var{U}] =} __iluc__ (@var{A})\n\
 @deftypefnx {} {[@var{L}, @var{U}] =} __iluc__ (@var{A}, @var{droptol})\n\
 @deftypefnx {} {[@var{L}, @var{U}] =} __iluc__ (@var{A}, @var{droptol}, @var{milu})\n\
 Undocumented internal function.\n\
 @end deftypefn")
 {
   int nargin = args.length ();
diff --git a/libinterp/corefcn/ellipj.cc b/libinterp/corefcn/ellipj.cc
--- a/libinterp/corefcn/ellipj.cc
+++ b/libinterp/corefcn/ellipj.cc
@@ -23,17 +23,17 @@ along with Octave; see the file COPYING.
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "lo-specfun.h"
 
-DEFUN (ellipj, args, nargout,
+DEFUN (ellipj, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {[@var{sn}, @var{cn}, @var{dn}, @var{err}] =} ellipj (@var{u}, @var{m})\n\
 @deftypefnx {} {[@var{sn}, @var{cn}, @var{dn}, @var{err}] =} ellipj (@var{u}, @var{m}, @var{tol})\n\
 Compute the Jacobi elliptic functions @var{sn}, @var{cn}, and @var{dn}\n\
 of complex argument @var{u} and real parameter @var{m}.\n\
 \n\
 If @var{m} is a scalar, the results are the same size as @var{u}.\n\
 If @var{u} is a scalar, the results are the same size as @var{m}.\n\
diff --git a/libinterp/corefcn/filter.cc b/libinterp/corefcn/filter.cc
--- a/libinterp/corefcn/filter.cc
+++ b/libinterp/corefcn/filter.cc
@@ -263,17 +263,17 @@ filter (MArray<T>& b, MArray<T>& a, MArr
     si_dims(i) = si_dims(i-1);
   si_dims(0) = si_len;
 
   MArray<T> si (si_dims, T (0.0));
 
   return filter (b, a, x, si, dim);
 }
 
-DEFUN (filter, args, nargout,
+DEFUN (filter, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{y} =} filter (@var{b}, @var{a}, @var{x})\n\
 @deftypefnx {} {[@var{y}, @var{sf}] =} filter (@var{b}, @var{a}, @var{x}, @var{si})\n\
 @deftypefnx {} {[@var{y}, @var{sf}] =} filter (@var{b}, @var{a}, @var{x}, [], @var{dim})\n\
 @deftypefnx {} {[@var{y}, @var{sf}] =} filter (@var{b}, @var{a}, @var{x}, @var{si}, @var{dim})\n\
 Apply a 1-D digital filter to the data @var{x}.\n\
 \n\
 @code{filter} returns the solution to the following linear, time-invariant\n\
diff --git a/libinterp/corefcn/mgorth.cc b/libinterp/corefcn/mgorth.cc
--- a/libinterp/corefcn/mgorth.cc
+++ b/libinterp/corefcn/mgorth.cc
@@ -43,17 +43,17 @@ do_mgorth (ColumnVector& x, const Matrix
       x -= h(j) * Vcj;
     }
 
   h(Vc) = xnorm (x);
   if (real (h(Vc)) > 0)
     x /= h(Vc);
 }
 
-DEFUN (mgorth, args, nargout,
+DEFUN (mgorth, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {[@var{y}, @var{h}] =} mgorth (@var{x}, @var{v})\n\
 Orthogonalize a given column vector @var{x} with respect to a set of\n\
 orthonormal vectors comprising the columns of @var{v} using the modified\n\
 Gram-Schmidt method.\n\
 \n\
 On exit, @var{y} is a unit vector such that:\n\
 \n\
diff --git a/libinterp/corefcn/nproc.cc b/libinterp/corefcn/nproc.cc
--- a/libinterp/corefcn/nproc.cc
+++ b/libinterp/corefcn/nproc.cc
@@ -22,17 +22,17 @@ along with Octave; see the file COPYING.
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "defun.h"
 #include "nproc.h"
 
-DEFUN (nproc, args, nargout,
+DEFUN (nproc, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {} nproc ()\n\
 @deftypefnx {} {} nproc (@var{query})\n\
 Return the current number of available processors.\n\
 \n\
 If called with the optional argument @var{query}, modify how processors\n\
 are counted as follows:\n\
 \n\
diff --git a/libinterp/corefcn/pr-output.cc b/libinterp/corefcn/pr-output.cc
--- a/libinterp/corefcn/pr-output.cc
+++ b/libinterp/corefcn/pr-output.cc
@@ -3398,17 +3398,17 @@ octave_print_internal (std::ostream&, co
 }
 
 void
 octave_print_internal (std::ostream&, const octave_value&, bool)
 {
   panic_impossible ();
 }
 
-DEFUN (rats, args, nargout,
+DEFUN (rats, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {} rats (@var{x}, @var{len})\n\
 Convert @var{x} into a rational approximation represented as a string.\n\
 \n\
 The string can be converted back into a matrix as follows:\n\
 \n\
 @example\n\
 @group\n\
diff --git a/libinterp/corefcn/quad.cc b/libinterp/corefcn/quad.cc
--- a/libinterp/corefcn/quad.cc
+++ b/libinterp/corefcn/quad.cc
@@ -129,17 +129,17 @@ quad_float_user_function (float x)
         }
       else
         gripe_user_supplied_eval ("quad");
     }
 
   return retval;
 }
 
-DEFUN (quad, args, nargout,
+DEFUN (quad, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{q} =} quad (@var{f}, @var{a}, @var{b})\n\
 @deftypefnx {} {@var{q} =} quad (@var{f}, @var{a}, @var{b}, @var{tol})\n\
 @deftypefnx {} {@var{q} =} quad (@var{f}, @var{a}, @var{b}, @var{tol}, @var{sing})\n\
 @deftypefnx {} {[@var{q}, @var{ier}, @var{nfun}, @var{err}] =} quad (@dots{})\n\
 Numerically evaluate the integral of @var{f} from @var{a} to @var{b} using\n\
 Fortran routines from @w{@sc{quadpack}}.\n\
 \n\
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -1472,17 +1472,17 @@ downdate (double *c, int n, int d, int *
         c[j] -= alpha * b_new[j];
       c[n] = 0;
       n--;
     }
 }
 
 // The actual integration routine.
 
-DEFUN (quadcc, args, nargout,
+DEFUN (quadcc, args, ,
        "-*- texinfo -*-\n\
 @deftypefn  {} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b})\n\
 @deftypefnx {} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b}, @var{tol})\n\
 @deftypefnx {} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b}, @var{tol}, @var{sing})\n\
 @deftypefnx {} {[@var{q}, @var{err}, @var{nr_points}] =} quadcc (@dots{})\n\
 Numerically evaluate the integral of @var{f} from @var{a} to @var{b}\n\
 using doubly-adaptive @nospell{Clenshaw-Curtis} quadrature.\n\
 \n\
diff --git a/libinterp/corefcn/sylvester.cc b/libinterp/corefcn/sylvester.cc
--- a/libinterp/corefcn/sylvester.cc
+++ b/libinterp/corefcn/sylvester.cc
@@ -27,17 +27,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "oct-obj.h"
 #include "utils.h"
 
-DEFUN (sylvester, args, nargout,
+DEFUN (sylvester, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {} {@var{X} =} syl (@var{A}, @var{B}, @var{C})\n\
 Solve the Sylvester equation\n\
 @tex\n\
 $$\n\
  A X + X B = C\n\
 $$\n\
 @end tex\n\
