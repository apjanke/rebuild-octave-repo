# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1537972433 -7200
#      Wed Sep 26 16:33:53 2018 +0200
# Branch stable
# Node ID 541f3a81638314202c5564302711bf1710e1feee
# Parent  49734a75561f14c23ed23a13cf6b47ef20d6cc40
Improve absolute tolerance handling in ode-solvers (bug #54729).

* scripts/ode/private/AbsRel_norm.m: The absolute tolerance "AbsTol" is allowed
to be a vector, which is simply forwarded to this function.

In the odeset-structure the vector orientation is preserved, thus it makes only
sense to modify it's orientation when needed.

All other involved values "x" and "x_old" are ensured to be column-vectors,
therefore "max" yields a matrix, if "AbsTol" is a row-vector.

diff --git a/scripts/ode/private/AbsRel_norm.m b/scripts/ode/private/AbsRel_norm.m
--- a/scripts/ode/private/AbsRel_norm.m
+++ b/scripts/ode/private/AbsRel_norm.m
@@ -20,16 +20,16 @@
 ## -*- texinfo -*-
 ## @deftypefn {} {retval =} AbsRel_norm (@var{x}, @var{x_old}, @var{AbsTol}, @var{RelTol}, @var{normcontrol}, @var{y})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function retval = AbsRel_norm (x, x_old, AbsTol, RelTol, normcontrol, y = zeros (size (x)))
 
   if (normcontrol)
-    sc = max (AbsTol, RelTol * max (sqrt (sumsq (x)), sqrt (sumsq (x_old))));
+    sc = max (AbsTol(:), RelTol * max (sqrt (sumsq (x)), sqrt (sumsq (x_old))));
     retval = sqrt (sumsq ((x - y))) / sc;
   else
-    sc = max (AbsTol, RelTol .* max (abs (x), abs (x_old)));
+    sc = max (AbsTol(:), RelTol .* max (abs (x), abs (x_old)));
     retval = max (abs (x - y) ./ sc);
   endif
 
 endfunction
