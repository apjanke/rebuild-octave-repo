# HG changeset patch
# User Jordi Gutiérrez Hermoso <jordigh@gmail.com>
# Date 1298987024 21600
#      Tue Mar 01 07:43:44 2011 -0600
# Node ID ac3bdc27734ec27f5ebb589bf73e08e7fa16d98b
# Parent  bea828c03969d40c3f87a673774e429a2288e019
Clarify in manual that the mkoctfile examples are in C++

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,14 @@
+2011-03-01  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
+
+	* interpreter/dynamic.txi: Make it clear that <octave/oct.h> is
+	a C++ source file and refer to the section where other languages
+	are discussed.
+
 2010-02-28  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/numbers.txi: Add isrow, iscolumn functions to manual.
 
 2011-02-25  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
 
 	* faq/OctaveFAQ.texi: Uniformise all mentions of Matlab to be
 	typeset in the @sc{Matlab} style. Also do some minor
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -94,29 +94,32 @@ will cause Octave to abort.
 @node Getting Started with Oct-Files
 @subsection Getting Started with Oct-Files
 
 The basic command to build oct-files is @code{mkoctfile} and it can be
 call from within octave or from the command line.
 
 @DOCSTRING(mkoctfile)
 
-Consider the short example:
+Consider the short C++ example:
 
 @example
 @group
 @EXAMPLEFILE(helloworld.cc)
 @end group
 @end example
 
 This example although short introduces the basics of writing a C++
-function that can be dynamically linked to Octave.  The easiest way to
-make available most of the definitions that might be necessary for an
-oct-file in Octave is to use the @code{#include <octave/oct.h>}
-header.
+function that can be dynamically linked to Octave. The easiest way to
+make available most of the definitions that might be necessary for a C++
+oct-file in Octave is to use the @code{#include <octave/oct.h>} header.
+Note that @file{octave/oct.h} is a C++ header and cannot be directly
+@code{#include}'ed in a C source file, nor any other language. What
+follows is mostly C++, with a discussion of other languages in section
+@ref{Calling External Code from Oct-Files}.
 
 The macro that defines the entry point into the dynamically loaded
 function is @w{@code{DEFUN_DLD}}.  This macro takes four arguments, these being
 
 @enumerate 1
 @item The function name as it will be seen in Octave,
 
 @item The list of arguments to the function of type @code{octave_value_list},
