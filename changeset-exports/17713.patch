# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1382385481 -7200
#      Mon Oct 21 21:58:01 2013 +0200
# Node ID ccc0576641f9e11fd56077b9d72bb499fd3ec8e8
# Parent  e3ac73be789479715239444048650892ca7ec61a
Avoid use of numel for sparse matrix when concatenating (bug #40324)

* pt-mat.cc (void tm_row_const::tm_row_const_rep::do_init_element
  (const octave_value&, bool&)) : Avoid use of numel for sparse matrices

diff --git a/libinterp/parse-tree/pt-mat.cc b/libinterp/parse-tree/pt-mat.cc
--- a/libinterp/parse-tree/pt-mat.cc
+++ b/libinterp/parse-tree/pt-mat.cc
@@ -325,17 +325,18 @@ tm_row_const::tm_row_const_rep::do_init_
     any_cell = true;
 
   if (!any_sparse && val.is_sparse_type ())
     any_sparse = true;
 
   if (!any_class && val.is_object ())
     any_class = true;
 
-  all_1x1 = all_1x1 && val.numel () == 1;
+  // Special treatment of sparse matrices to avoid out-of-memory error
+  all_1x1 = all_1x1 && ! val.is_sparse_type () && val.numel () == 1;
 }
 
 void
 tm_row_const::tm_row_const_rep::init (const tree_argument_list& row)
 {
   all_str = true;
   all_sq_str = true;
   all_dq_str = true;
