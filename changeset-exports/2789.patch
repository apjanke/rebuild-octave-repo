# HG changeset patch
# User jwe
# Date 857508299 0
#      Tue Mar 04 20:44:59 1997 +0000
# Node ID e68dcf8ffd33fb8ed88269c13b9bb7c0c9a27bdd
# Parent  d21505cbcc58f325b0bdc21cbd43d2916a80f3a3
[project @ 1997-03-04 20:44:59 by jwe]

diff --git a/PROJECTS b/PROJECTS
--- a/PROJECTS
+++ b/PROJECTS
@@ -48,16 +48,25 @@ Numerical:
   * Use octave_allocator for memory management in Array classes once
     g++ supports static member templates.
 
   * Implement the following functions:
     -- ppval    -- cross    -- dot
 
   * Allow user-supplied gradient information to be passed to NPSOL.
 
+  * Actually allow control of the derivative level in NPSOL.  It can
+    be changed with npsol_options(), but then NPSOL::do_minimize()
+    sets it based on whether gradient and jacobian functions are
+    available. 
+
+  * When constructing NLConst (and other) objects, make sure that
+    there are sufficient checks to ensure that the dimensions all
+    conform.
+
   * Support for FSQP.
 
   * Convert FSQP style NLP statement to NPSOL style.
 
   * Convert NPSOL style NLP statement to FSQP style.
     - Look for linear equality constraints, extract corresponding rows
 	of C.  The rest are inequality constraints.
     - Look for Nonlinear equality constraints and set up a vector of
@@ -81,16 +90,20 @@ Numerical:
     performance.
 
   * Check matrix classes for proper handling of empty matrices.
 
   * Force all empty matrices to be 0x0 even when other dimensions have
     been speicified, for compatibility with Matlab, at least when some
     preference variable is set.
 
+  * Make operations with empty matrices produce empty matrices, for
+    compatibility with Matlab (but only if Matlab 5 still does things
+    this way). For example:  [1, 2] * [] ==> [].
+
   * Improve design of ODE, DAE, classes.
 
   * Make it possible to specify a time which dassl and lsode should
     not integrate past.
 
   * Extend meaning of .* to include v .* M or M .* v (where v is a
     column vector with the same number of rows as M) to scale rows of
     M by elements of v.  Similarly, if w is a row vector with as many
@@ -103,16 +116,22 @@ Numerical:
     outer (x, y, f) that returns an m-by-n matrix with entries
     f (x(i), y(j)).  If f is omitted, multiplication is the default.
     Should probably work for any vectors, not just if x is a column
     vector and y is a row vector.
 
   * On systems that support matherr(), make it possible for users to
     enable the printing of warning messages.
 
+  * Make it possible to solve b = L \ x efficiently, either by
+    providing an explicit function call, or by automatically
+    determining that L is triangular.  If it is done automatically,
+    provide some means for determining whether Octave has actually
+    detected that the matrix is triangular.
+
 --------
 Graphics:
 --------
 
   * Make plotting with plplot work.
 
   * Fix interface with gnuplot to wait for gnuplot to output any text
     before octave returns a prompt.  Possible by implementing two
@@ -128,22 +147,29 @@ Graphics:
 
   * Implement clf, gcf, get, set, orient, print, close, etc. in
     Matlab-compatible ways.
 
   * Make it possible to check the current graphics terminal type.
 
   * If possible, pass data to gnuplot without using temporary files.
 
+  * If using temporary files, delete them when gnuplot exits.
+
   * If possible, pass binary data to gnuplot to speed things up.
 
 -------
 Strings:
 -------
 
+  * Improve performance of string functions, particularly for
+    searching and replacing.
+
+  * Provide some regex matching functions.
+
   * Convert string functions to work on string arrays.
 
   * Make find work for strings.
 
   * Consider making octave_print_internal() print some sort of text
     representation for unprintable characters instead of sending them
     directly to the terminal.  (But don't do this for fprintf!)
 
@@ -196,17 +222,18 @@ Input/Output:
   * Save image data in binary format to save space.
 
   * Make it possible to load other image formats (ppm, pbm, etc. would
     probably be best since there are already filters to convert to
     these formats from others.)
 
   * Use HDF for binary data.
 
-  * Make ascii load and save work for Inf and NaN.
+  * Make ascii load and save work for Inf and NaN.  (This is really a
+    problem with the functions for reading floats in the GNU iolib.)
 
   * Complain if there is not enough disk space available (I think
     there is simply not enough error checking in the code that handles
     writing data).
 
   * Make it possible to tie arbitrary input and output streams
     together, similar to the way iostreams can be tied together.
 
@@ -359,16 +386,19 @@ Interpreter:
 	unwind_protect_cleanup
 	  prefer_column_vectors = save_prefer_column_vectors;
 	end_unwind_protect
       endfunction
 
   * Fix all function files to check for bogus inputs (wrong number or
     types of input arguments, wrong number of output arguments).
 
+  * Reduce the memory and time required to parse very large matrix
+    lists.
+
   * Handle options for built-in functions more consistently.
 
   * Too much time is spent allocating and freeing memory.  What can be
     done to improve performance?
 
   * Error output from Fortran code is ugly.  Something should be done to
     make it look better.
 
@@ -639,15 +669,19 @@ Miscellaneous:
       access).
 
     Perhaps this can be done entirely with a library of M-files.
 
   * Add a function like strptime() which is the opposite of
     strftime().  A C version is apparently in recent releases of the
     Linux C library.
 
+  * Add a definition to lgrind so that it supports Octave.
+    (See http://www.tex.ac.uk/tex-archive/support/lgrind/ for more
+    information about lgrind.)
+
 ------
 Always:
 ------
 
   * Squash bugs.
 
 				--30--
