# HG changeset patch
# User Jacob Dawid <jacob.dawid@gmail.com>
# Date 1342640023 14400
#      Wed Jul 18 15:33:43 2012 -0400
# Branch gui
# Node ID 3fd857c284fe9571035554386aa73fb2267396b9
# Parent  5d74d8b982a5711b1656a3a83ca09e8e6e125884
Editor now gets focussed when opening a file.

* main-window.cc : Focussing editor after opening or creating a new file.

diff --git a/.hgsubstate b/.hgsubstate
--- a/.hgsubstate
+++ b/.hgsubstate
@@ -1,2 +1,2 @@
 33f823397dbb0edb57503f2f6dad2362456bc6a9 gnulib
-8f1ce54f3f0e15e35221ce48568c730267b6793b gui/qterminal
+5fed5b210291e691a3fbc565ec38d5ced9abc4e5 gui/qterminal
diff --git a/gui/src/main-window.cc b/gui/src/main-window.cc
--- a/gui/src/main-window.cc
+++ b/gui/src/main-window.cc
@@ -58,22 +58,31 @@ main_window::event_reject (octave_event 
 {
   delete e;
 }
 
 void
 main_window::new_file ()
 {
   _file_editor->request_new_file ();
+  focus_editor ();
 }
 
 void
 main_window::open_file ()
 {
   _file_editor->request_open_file ();
+  focus_editor ();
+}
+
+void
+main_window::open_file (QString file_name)
+{
+  _file_editor->request_open_file (file_name);
+  focus_editor ();
 }
 
 void
 main_window::report_status_message (QString statusMessage)
 {
   _status_bar->showMessage (statusMessage, 1000);
 }
 
@@ -212,19 +221,17 @@ main_window::set_current_working_directo
   octave_link::instance ()
       ->post_event (new octave_change_directory_event (*this,
                     directory.toStdString ()));
 }
 
 void
 main_window::current_working_directory_up ()
 {
-  octave_link::instance ()
-      ->post_event (new octave_change_directory_event (*this, ".."));
-
+  set_current_working_directory ("..");
 }
 
 void
 main_window::focus_command_window ()
 {
   if (!_terminal_dock_widget->isVisible ())
     {
       _terminal_dock_widget->setVisible (true);
@@ -719,17 +726,17 @@ main_window::construct ()
 
   connect (reset_windows_action,        SIGNAL (triggered ()),
            this,                        SLOT   (reset_windows ()));
   connect (this,                        SIGNAL (settings_changed ()),
            _files_dock_widget,          SLOT   (notice_settings ()));
   connect (this,                        SIGNAL (settings_changed ()),
            this,                        SLOT   (notice_settings ()));
   connect (_files_dock_widget,          SIGNAL (open_file (QString)),
-           _file_editor,                SLOT   (request_open_file (QString)));
+           this,                        SLOT   (open_file (QString)));
   connect (_files_dock_widget,          SIGNAL (displayed_directory_changed(QString)),
            this,                        SLOT   (set_current_working_directory(QString)));
   connect (_history_dock_widget,        SIGNAL (information (QString)),
            this,                        SLOT   (report_status_message (QString)));
   connect (_history_dock_widget,        SIGNAL (command_double_clicked (QString)),
            this,                        SLOT   (handle_command_double_clicked (QString)));
   connect (save_workspace_action,       SIGNAL (triggered ()),
            this,                        SLOT   (handle_save_workspace_request ()));
diff --git a/gui/src/main-window.h b/gui/src/main-window.h
--- a/gui/src/main-window.h
+++ b/gui/src/main-window.h
@@ -75,16 +75,17 @@ public slots:
   void report_status_message (QString statusMessage);
   void handle_save_workspace_request ();
   void handle_load_workspace_request ();
   void handle_clear_workspace_request ();
   void handle_clear_history_request ();
   void handle_command_double_clicked (QString command);
   void new_file ();
   void open_file ();
+  void open_file (QString file_name);
   void open_bug_tracker_page ();
   void open_agora_page ();
   void open_octave_forge_page ();
   void process_settings_dialog_request ();
   void show_about_octave ();
   void notice_settings ();
   void prepare_for_quit ();
   void reset_windows ();
diff --git a/gui/src/octave-adapter/octave-link.cc b/gui/src/octave-adapter/octave-link.cc
--- a/gui/src/octave-adapter/octave-link.cc
+++ b/gui/src/octave-adapter/octave-link.cc
@@ -91,16 +91,17 @@ octave_link::generate_events ()
 }
 
 void
 octave_link::process_events ()
 {
   _next_performance_information.process_events_start = clock ();
   _event_queue_mutex->lock ();
   _next_performance_information.event_queue_size = _event_queue.size ();
+
   while (_event_queue.size () > 0)
     {
       octave_event * e = _event_queue.front ();
       _event_queue.pop ();
       if (e->perform ())
         e->accept ();
       else
         e->reject ();
