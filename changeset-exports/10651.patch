# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1274766091 -7200
#      Tue May 25 07:41:31 2010 +0200
# Node ID 944b78191f030e80ec759b063d4c1c1892899a38
# Parent  f0dc41c824cedf6f7dbf344d14a30e001d7f1636
simplify octave_base_value::rows and columns

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-05-25  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-base.h (octave_base_value::rows, octave_base_value::columns):
+	Use const where appropriate, don't test for impossible condition.
+
 2010-05-24  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Cell.h (Cell::index, Cell::assign, Cell::delete_elements):
 	Make signatures consistent with inherited overloads. Import inherited
 	overloads to class's scope.
 	* oct-map.cc (Octave_map::maybe_delete_elements): Simplify.
 
 2010-05-20  John W. Eaton  <jwe@octave.org>
diff --git a/src/ov-base.h b/src/ov-base.h
--- a/src/ov-base.h
+++ b/src/ov-base.h
@@ -272,26 +272,26 @@ public:
             const octave_value& rhs);
 
   virtual idx_vector index_vector (void) const;
 
   virtual dim_vector dims (void) const { return dim_vector (); }
 
   octave_idx_type rows (void) const
     {
-      dim_vector dv = dims ();
+      const dim_vector dv = dims ();
 
-      return (dv.length () > 0) ? dv(0) : -1;
+      return dv(0);
     }
 
   octave_idx_type columns (void) const
     {
-      dim_vector dv = dims ();
+      const dim_vector dv = dims ();
 
-      return (dv.length () > 1) ? dv(1) : -1;
+      return dv(1);
     }
 
   virtual int ndims (void) const;
 
   virtual octave_idx_type numel (void) const { return dims ().numel (); }
 
   virtual octave_idx_type capacity (void) const { return numel (); }
 
