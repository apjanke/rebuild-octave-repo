# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1461596658 25200
#      Mon Apr 25 08:04:18 2016 -0700
# Branch stable
# Node ID 9191c24fb329186585e30272ccc302a084c02c1a
# Parent  cff44a19abfecebf8d3e181dcaf060ca445a1bc4
Fix autoscale affecting legend axes objects (bug #47765).

* Canvas.cc (canvasMousePressEvent): Only set currentaxes object to a true axes
object (not legend or colorbar).

* __init_fltk__.cc (set_on_ax_obj): Only accept true axes objects.
* __init_fltk__.cc (set_axes_currentpoint): Only set currentaxes object to a
 true axes.

diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -561,17 +561,19 @@ Canvas::canvasMousePressEvent (QMouseEve
                 }
 
               if (axesObj && currentObj)
                 break;
             }
 
           if (axesObj)
             {
-              if (axesObj.get_properties ().handlevisibility_is ("on"))
+              if (axesObj.get_properties ().handlevisibility_is ("on")
+                  && axesObj.get_properties ().get_tag () != "legend"
+                  && axesObj.get_properties ().get_tag () != "colorbar")
                 Utils::properties<figure> (figObj)
                   .set_currentaxes (axesObj.get_handle ().as_octave_value ());
               if (! currentObj)
                 currentObj = axesObj;
             }
         }
 
       if (! currentObj)
diff --git a/libinterp/dldfcn/__init_fltk__.cc b/libinterp/dldfcn/__init_fltk__.cc
--- a/libinterp/dldfcn/__init_fltk__.cc
+++ b/libinterp/dldfcn/__init_fltk__.cc
@@ -1031,17 +1031,19 @@ private:
       fp.set___mouse_mode__ ("rotate");
     else if (widg == help)
       fl_message ("%s", help_text);
   }
 
   void set_on_ax_obj (const std::string& name, const std::string& value)
   {
     // ax_obj is the last clicked axes object
-    if (ax_obj && ax_obj.isa ("axes"))
+    if (ax_obj && ax_obj.isa ("axes")
+        && ax_obj.get_properties ().get_tag () != "legend"
+        && ax_obj.get_properties ().get_tag () != "colorbar")
       {
         axes::properties& ap =
           dynamic_cast<axes::properties&>(ax_obj.get_properties ());
         ap.set (name, value);
       }
     else // no axes object clicked so far, take currentaxes
       {
         graphics_handle gh = fp.get_currentaxes ();
@@ -1211,17 +1213,18 @@ private:
 
         // back point (furthest from the viewer)
         tmp = ap.get_transform ().untransform (px, py, x_zlim(1));
         pos(1,0) = tmp(0);
         pos(1,1) = tmp(1);
         pos(1,2) = tmp(2);
 
         ap.set_currentpoint (pos);
-        fp.set_currentaxes (ap.get___myhandle__ ().value ());
+        if (ap.get_tag () != "legend" && ap.get_tag () != "colorbar")
+          fp.set_currentaxes (ap.get___myhandle__ ().value ());
       }
   }
 
   int menu_dy ()
   {
     if (uimenu->is_visible ())
       return menu_h;
     else
