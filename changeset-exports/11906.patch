# HG changeset patch
# User Francesco PotortÃ¬ <pot@gnu.org>
# Date 1231754090 -3600
#      Mon Jan 12 10:54:50 2009 +0100
# Branch release-3-0-x
# Node ID e4446f9ba0e121847af36e4611a35d51640bdb18
# Parent  1d237a82e3932aa51cf423729c18e07f39867041
help and error string corrected in hist.m.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-12-26  Francesco Potortì  <pot@gnu.org>
+
+	* plot/hist.m: Doc string now mentions matrix input argument.
+	Correct error message.
+
 2008-10-21  Ben Abbott <bpabbott@mac.com>
 
 	* plot/clf.m: Improve Matlab compatibility.
 
 2008-10-16  David Bateman  <dbateman@free.fr>
 
 	* plot/subplot.m: Allow for column vector of children for figure.
 
diff --git a/scripts/plot/hist.m b/scripts/plot/hist.m
--- a/scripts/plot/hist.m
+++ b/scripts/plot/hist.m
@@ -18,17 +18,18 @@
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} hist (@var{y}, @var{x}, @var{norm})
 ## Produce histogram counts or plots.
 ##
 ## With one vector input argument, plot a histogram of the values with
 ## 10 bins.  The range of the histogram bins is determined by the range
-## of the data.
+## of the data.  With one matrix input argument, plot a hystogram where
+## each bin contains a bar per input column.
 ##
 ## Given a second scalar argument, use that as the number of bins.
 ##
 ## Given a second vector argument, use that as the centers of the bins,
 ## with the width of the bins determined from the adjacent values in
 ## the vector.
 ##
 ## If third argument is provided, the histogram is normalised such that
@@ -54,17 +55,17 @@ function [nn, xx] = hist (y, varargin)
   if (rows (y) == 1)
     y = y(:);
   endif
 
   if (isreal (y))
     max_val = max (y(:));
     min_val = min (y(:));
   else
-    error ("hist: first argument must be a vector");
+    error ("hist: first argument must be real valued");
   endif
 
   iarg = 1;
   if (nargin == 1 || ischar (varargin{iarg}))
     n = 10;
     x = [0.5:n]'/n;
     x = x * (max_val - min_val) + ones(size(x)) * min_val;
   else
