# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1262465717 -3600
#      Sat Jan 02 21:55:17 2010 +0100
# Node ID dc88a0b6472c572c463494303f723ae5a8f9bb1f
# Parent  44e889c67abe37ee1f0d72f1e4de04ac46e12581
support old style jacobian for fsolve

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,12 @@
+2010-01-02  Jaroslav Hajek  <highegg@gmail.com>
+
+	* optimization/fsolve.m: Support old style jacobian passing.
+
 2010-01-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* set/powerset.m: New function.
 	* set/module.mk: Include it.
 
 2009-12-30  Jaroslav Hajek  <highegg@gmail.com>
 
 	* general/common_size.m: Use named function rather than a handle.
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -131,16 +131,18 @@ function [x, fvec, info, output, fjac] =
   endif
 
   if (nargin < 2 || nargin > 3 || ! ismatrix (x0))
     print_usage ();
   endif    
 
   if (ischar (fcn))
     fcn = str2func (fcn, "global");
+  elseif (iscell (fcn))
+    fcn = @(x) make_fcn_jac (x, fcn{1}, fcn{2});
   endif
 
   xsiz = size (x0);
   n = numel (x0);
 
   has_jac = strcmpi (optimget (options, "Jacobian", "off"), "on");
   cdif = strcmpi (optimget (options, "FinDiffType", "central"), "central");
   maxiter = optimget (options, "MaxIter", 400);
@@ -418,16 +420,23 @@ function [fx, jx] = guarded_eval (fun, x
     error ("fsolve:notreal", "fsolve: non-real value encountered"); 
   elseif (complexeqn && ! (isnumeric (fx) && isnumeric(jx)))
     error ("fsolve:notnum", "fsolve: non-numeric value encountered");
   elseif (any (isnan (fx(:))))
     error ("fsolve:isnan", "fsolve: NaN value encountered"); 
   endif
 endfunction
 
+function [fx, jx] = make_fcn_jac (x, fcn, fjac)
+  fx = fcn (x);
+  if (nargout == 2)
+    jx = fjac (x);
+  endif
+endfunction
+
 %!function retval = f (p) 
 %!  x = p(1);
 %!  y = p(2);
 %!  z = p(3);
 %!  retval = zeros (3, 1);
 %!  retval(1) = sin(x) + y**2 + log(z) - 7;
 %!  retval(2) = 3*x + 2**y -z**3 + 1;
 %!  retval(3) = x + y + z - 5;
