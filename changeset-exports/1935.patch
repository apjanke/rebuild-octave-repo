# HG changeset patch
# User jwe
# Date 824097785 0
#      Mon Feb 12 04:03:05 1996 +0000
# Node ID 23c350d0cf9dcab576bec49217ea3bc2405611be
# Parent  0e591d443ff073469d3abd3e2ffee064fd625c36
[project @ 1996-02-12 04:03:05 by jwe]

diff --git a/liboctave/Quad.cc b/liboctave/Quad.cc
--- a/liboctave/Quad.cc
+++ b/liboctave/Quad.cc
@@ -77,45 +77,55 @@ user_function (double *x, int& ierr)
 }
 
 double
 DefQuad::integrate (int& ier, int& neval, double& abserr)
 {
   int npts = singularities.capacity () + 2;
   double *points = singularities.fortran_vec ();
   double result = 0.0;
+
   int leniw = 183*npts - 122;
+  Array<int> iwork (leniw);
+  int *piwork = iwork.fortran_vec ();
+
   int lenw = 2*leniw - npts;
-  int *iwork = new int [leniw];
-  double *work = new double [lenw];
+  Array<double> work (lenw);
+  double *pwork = work.fortran_vec ();
+
   user_fcn = f;
   int last;
 
   double abs_tol = absolute_tolerance ();
   double rel_tol = relative_tolerance ();
 
-  F77_FCN (dqagp, DQAGP) (user_function, lower_limit, upper_limit,
-			  npts, points, abs_tol, rel_tol, result,
-			  abserr, neval, ier, leniw, lenw, last,
-			  iwork, work);
+  F77_XFCN (dqagp, DQAGP, (user_function, lower_limit, upper_limit,
+			   npts, points, abs_tol, rel_tol, result,
+			   abserr, neval, ier, leniw, lenw, last,
+			   piwork, pwork));
 
-  delete [] iwork;
-  delete [] work;
+  if (f77_exception_encountered)
+    (*current_liboctave_error_handler) ("unrecoverable error in dqagp");
 
   return result;
 }
 
 double
 IndefQuad::integrate (int& ier, int& neval, double& abserr)
 {
   double result = 0.0;
+
   int leniw = 128;
+  Array<int> iwork (leniw);
+  int *piwork = iwork.fortran_vec ();
+
   int lenw = 8*leniw;
-  int *iwork = new int [leniw];
-  double *work = new double [lenw];
+  Array<double> work (lenw);
+  double *pwork = work.fortran_vec ();
+
   user_fcn = f;
   int last;
 
   int inf;
   switch (type)
     {
     case bound_to_inf:
       inf = 1;
@@ -132,22 +142,22 @@ IndefQuad::integrate (int& ier, int& nev
     default:
       assert (0);
       break;
     }
 
   double abs_tol = absolute_tolerance ();
   double rel_tol = relative_tolerance ();
 
-  F77_FCN (dqagi, DQAGI) (user_function, bound, inf, abs_tol, rel_tol,
-			  result, abserr, neval, ier, leniw, lenw,
-			  last, iwork, work);
+  F77_XFCN (dqagi, DQAGI, (user_function, bound, inf, abs_tol, rel_tol,
+			   result, abserr, neval, ier, leniw, lenw,
+			   last, piwork, pwork));
 
-  delete [] iwork;
-  delete [] work;
+  if (f77_exception_encountered)
+    (*current_liboctave_error_handler) ("unrecoverable error in dqagi");
 
   return result;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; page-delimiter: "^/\\*" ***
