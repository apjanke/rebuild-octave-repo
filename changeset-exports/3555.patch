# HG changeset patch
# User jwe
# Date 949549075 0
#      Thu Feb 03 03:37:55 2000 +0000
# Node ID 0b00b69ab2fddaca1a619b9357551304ecb80707
# Parent  747a87bc85943ff5bd8a4be3294fe1f7b7a0b3f5
[project @ 2000-02-03 03:36:13 by jwe]

diff --git a/src/Map.h b/src/Map.h
--- a/src/Map.h
+++ b/src/Map.h
@@ -96,20 +96,20 @@ struct CHNode
 
   ~CHNode (void) { }
 
   // The nodes are linked together serially via a version of a trick
   // used in some vtables: odd pointers are actually links to the next
   // table entry.  Not terrible, but not wonderful either.
 
   int goodCHptr (void)
-    { return (((X_CAST (unsigned, t)) & 1) == 0); }
+    { return (((X_CAST (unsigned long, this)) & 1) == 0); }
 
   unsigned int CHptr_to_index (void)
-    { return (X_CAST (unsigned, t)) >> 1; }
+    { return (X_CAST (unsigned long, this)) >> 1; }
 };
 
 #ifndef DEFAULT_INITIAL_CAPACITY
 #define DEFAULT_INITIAL_CAPACITY 8
 #endif
 
 template <class C>
 class CHMap : public Map<C>
diff --git a/src/mkgendoc b/src/mkgendoc
--- a/src/mkgendoc
+++ b/src/mkgendoc
@@ -33,17 +33,17 @@ cat << \EOF
   print_doc_string (#name, doc);
 
 #define XDEFUN_MAPPER_INTERNAL(name, ch_map, d_b_map, c_b_map, d_d_map, \
 			       d_c_map, c_c_map, lo, hi, \
 			       can_ret_cmplx_for_real, doc) \
   print_doc_string (#name, doc);
 
 static void
-print_doc_string (const string& name, const std::string& doc)
+print_doc_string (const std::string& name, const std::string& doc)
 {
   std::cout << "";
 
   size_t len = name.length ();
 
   if (name[0] == '"' && name[len-1] == '"')
     std::cout << name.substr (1, len-2);
   else
