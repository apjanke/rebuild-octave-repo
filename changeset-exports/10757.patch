# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1277709837 -7200
#      Mon Jun 28 09:23:57 2010 +0200
# Node ID 1cc44f3ec8141ad5d0a662a537cdd83ab7647888
# Parent  d808eb829d4896fe5a93630af7565949dee8de35
templated extractors for maps and cells

diff --git a/src/Cell.h b/src/Cell.h
--- a/src/Cell.h
+++ b/src/Cell.h
@@ -131,9 +131,13 @@ public:
 
 private:
 
   typedef octave_value (octave_value::*ctype_mapper) (void) const;
 
   Cell map (ctype_mapper) const;
 };
 
+template<>
+inline Cell octave_value_extract<Cell> (const octave_value& v)
+  { return v.cell_value (); }
+
 #endif
diff --git a/src/oct-map.h b/src/oct-map.h
--- a/src/oct-map.h
+++ b/src/oct-map.h
@@ -236,16 +236,20 @@ public:
 
 private:
 
   octave_fields xkeys;
   std::vector<octave_value> xvals;
 
 };
 
+template<>
+inline octave_scalar_map octave_value_extract<octave_scalar_map> (const octave_value& v)
+  { return v.scalar_map_value (); }
+
 class OCTINTERP_API
 octave_map
 {
   octave_map (const octave_fields& k)
     : xkeys (k), xvals (k.nfields ()), dimensions () { }
 
   octave_map (const dim_vector& dv, const octave_fields& k)
     : xkeys (k), xvals (k.nfields (), Cell (dv)), dimensions (dv) { }
@@ -438,16 +442,20 @@ private:
   void extract_scalar (octave_scalar_map& dest, 
                        octave_idx_type index) const;
   static void do_cat (int dim, octave_idx_type n, 
                       const octave_scalar_map *map_list, octave_map& retval);
   static void do_cat (int dim, octave_idx_type n, 
                       const octave_map *map_list, octave_map& retval);
 };
 
+template<>
+inline octave_map octave_value_extract<octave_map> (const octave_value& v)
+  { return v.map_value (); }
+
 // The original Octave_map object. Octave_map and octave_map are convertible to
 // each other.
 
 class
 OCTINTERP_API
 Octave_map
 {
  public:
