# HG changeset patch
# User Rik <rik@octave.org>
# Date 1399583075 25200
#      Thu May 08 14:04:35 2014 -0700
# Node ID bd334b6af2573d6f27b4c60372417297730bd528
# Parent  0461fe1d2a01e57652461820556fda6bfdf36a6a
Enter true debug mode after debug_on_(warning|error) (bug #37574).

* error.cc (warning_1, error_2): Set tree_evaluator::debug_mode to true before
calling do_keyboard to handle debug prompt.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -35,16 +35,17 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "input.h"
 #include "pager.h"
 #include "oct-obj.h"
 #include "oct-map.h"
 #include "utils.h"
 #include "ov.h"
 #include "ov-usr-fcn.h"
+#include "pt-eval.h"
 #include "pt-pr-code.h"
 #include "pt-stmt.h"
 #include "toplev.h"
 #include "unwind-prot.h"
 #include "variables.h"
 
 // TRUE means that Octave will try to beep obnoxiously before printing
 // error messages.
@@ -61,18 +62,17 @@ bool Vdebug_on_warning = false;
 
 // TRUE means that Octave will try to display a stack trace when a
 // warning is encountered.
 static bool Vbacktrace_on_warning = true;
 
 // TRUE means that Octave will print a verbose warning.  Currently unused.
 static bool Vverbose_warning;
 
-// TRUE means that Octave will print no warnings, but lastwarn will be
-//updated
+// TRUE means that Octave will print no warnings, but lastwarn will be updated
 static bool Vquiet_warning = false;
 
 // A structure containing (most of) the current state of warnings.
 static octave_map warning_options;
 
 // The text of the last error message.
 static std::string Vlast_error_message;
 
@@ -464,16 +464,20 @@ error_2 (const char *id, const char *fmt
       unwind_protect frame;
       frame.protect_var (Vdebug_on_error);
       Vdebug_on_error = false;
 
       error_state = 0;
 
       pr_where ("error");
 
+      tree_evaluator::debug_mode = true;
+
+      tree_evaluator::current_frame = octave_call_stack::current_frame ();
+
       do_keyboard (octave_value_list ());
     }
 }
 
 void
 verror (const char *fmt, va_list args)
 {
   error_2 ("", fmt, args);
@@ -652,16 +656,20 @@ warning_1 (const char *id, const char *f
       if ((interactive || forced_interactive)
           && Vdebug_on_warning
           && octave_call_stack::caller_user_code ())
         {
           unwind_protect frame;
           frame.protect_var (Vdebug_on_warning);
           Vdebug_on_warning = false;
 
+          tree_evaluator::debug_mode = true;
+
+          tree_evaluator::current_frame = octave_call_stack::current_frame ();
+
           do_keyboard (octave_value_list ());
         }
     }
 }
 
 void
 vwarning (const char *fmt, va_list args)
 {
