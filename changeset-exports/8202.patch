# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1223488825 -7200
#      Wed Oct 08 20:00:25 2008 +0200
# Node ID cf59d542f33effc4f56a1eceaa844918c323e7bd
# Parent  0ab4eed59455b9e0fc8d3feb43768e7800b8944c
replace all TODOs and XXXs with FIXMEs

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -1968,17 +1968,17 @@ typedef int sig_atomic_t;
 #ifdef USE_64_BIT_IDX_T
 #define SIZEOF_OCTAVE_IDX_TYPE 8
 #else
 #define SIZEOF_OCTAVE_IDX_TYPE SIZEOF_INT
 #endif
 
 // To be able to use long doubles for 64-bit mixed arithmetics, we need them at
 // least 80 bits wide and we need roundl declared in math.h
-// TODO: Maybe substitute this by a more precise check in the future.
+// FIXME: Maybe substitute this by a more precise check in the future.
 #if (SIZEOF_LONG_DOUBLE >= 10) && defined (HAVE_ROUNDL)
 #define OCTAVE_INT_USE_LONG_DOUBLE
 #endif
 
 #define OCTAVE_EMPTY_CPP_ARG
 
 #include "oct-dlldefs.h"
 #include "oct-types.h"
diff --git a/doc/interpreter/contrib.txi b/doc/interpreter/contrib.txi
--- a/doc/interpreter/contrib.txi
+++ b/doc/interpreter/contrib.txi
@@ -143,16 +143,18 @@ 2008-04-02  David Bateman  <dbateman@@fr
         * graphics.cc (void gnuplot_backend::close_figure (const
         octave_value&) const): Allow for an input and output stream.
 @end example
 
 @noindent
 The ChangeLog entries should describe what is changed, not why.  The reason of
 the change should appear in the commit message.
 
+The preferred comment mark for places that may need further attention is FIXME.
+
 @node Octave Sources (m-files)
 @section Octave Sources (m-files)
 
 Don't use tabs. Tabs cause trouble. If you are used to them, set up your editor
 so that it converts tabs to spaces.  Indent the bodies of the statement blocks.
 Recommended indent is 2 spaces.  When calling functions, put spaces after commas
 and before the calling parentheses, like this:
 
diff --git a/emacs/Makefile.in b/emacs/Makefile.in
--- a/emacs/Makefile.in
+++ b/emacs/Makefile.in
@@ -30,17 +30,17 @@ INSTALL = @INSTALL@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_DATA = @INSTALL_DATA@
 
 EL_FILES = octave-hlp.el octave-inf.el octave-mod.el
 
 SOURCES = $(EL_FILES) octave-tags
 
-DISTFILES = $(addprefix $(srcdir)/, Makefile.in $(EL_FILES) octave-tags octave-tags.1 NEWS TODO README)
+DISTFILES = $(addprefix $(srcdir)/, Makefile.in $(EL_FILES) octave-tags octave-tags.1 NEWS FIXME README)
 
 all:
 .PHONY: all
 
 install install-strip:
 	$(INSTALL_SCRIPT) octave-tags $(DESTDIR)$(bindir)/octave-tags
 .PHONY: install install-strip
 
diff --git a/liboctave/getopt.c b/liboctave/getopt.c
--- a/liboctave/getopt.c
+++ b/liboctave/getopt.c
@@ -262,17 +262,17 @@ static char *const *original_argv;
 
 /* Make sure the environment variable bash 2.0 puts in the environment
    is valid for the getopt call we must make sure that the ARGV passed
    to getopt is that one passed to the process.  */
 static void store_args (int argc, char *const *argv) __attribute__ ((unused));
 static void
 store_args (int argc, char *const *argv)
 {
-  /* XXX This is no good solution.  We should rather copy the args so
+  /* FIXME: This is no good solution.  We should rather copy the args so
      that we can compare them later.  But we must not use malloc(3).  */
   original_argc = argc;
   original_argv = argv;
 }
 text_set_element (__libc_subinit, store_args);
 #endif
 
 /* Exchange two adjacent subsequences of ARGV.
diff --git a/liboctave/oct-inttypes.cc b/liboctave/oct-inttypes.cc
--- a/liboctave/oct-inttypes.cc
+++ b/liboctave/oct-inttypes.cc
@@ -189,17 +189,17 @@ int64_t
 octave_int_arith_base<int64_t, true>::mul (int64_t x, int64_t y)
 { 
   // The signed case is far worse. The problem is that
   // even if neither integer fits into signed 32-bit range, the result may
   // still be OK. Uh oh.
   
   // Essentially, what we do is compute sign, multiply absolute values
   // (as above) and impose the sign.
-  // TODO: Can we do something faster if we HAVE_FAST_INT_OPS?
+  // FIXME: Can we do something faster if we HAVE_FAST_INT_OPS?
 
   uint64_t usx = std::abs (x), usy = std::abs (y);
   bool positive = (x < 0) == (y < 0);
 
   // Get upper words
   uint64_t ux = usx >> 32, uy = usy >> 32;
   uint64_t res;
   if (ux)
diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -265,17 +265,17 @@ private:
   // Computes a real-valued threshold for a max/min check. 
   template <class S>
   static S 
   compute_threshold (S val, T orig_val)
     { 
       val = xround (val); // Fool optimizations (maybe redundant)
       // If val is even, but orig_val is odd, we're one unit off.
       if (orig_val % 2 && val / 2 == xround (val / 2))
-        // TODO: is this always correct?
+        // FIXME: is this always correct?
         val *= (static_cast<S>(1) - (std::numeric_limits<S>::epsilon () / 2)); 
       return val;
     }
   
 public:
   // Convert a real number (check NaN and non-int).
   template <class S>
   static T 
@@ -529,17 +529,17 @@ public:
 
   static T
   signum (T x) 
     { 
       // With modest optimizations, this will compile without a jump.
       return ((x > 0) ? 1 : 0) - signbit (x); 
     }
 
-  // TODO: We do not have an authority what signed shifts should exactly do, so
+  // FIXME: We do not have an authority what signed shifts should exactly do, so
   // we define them the easy way. Note that Matlab does not define signed
   // shifts.
 
   static T
   rshift (T x, int n) { return x >> n; }
 
   static T
   lshift (T x, int n) { return x << n; }
@@ -866,17 +866,17 @@ private:
 
 // No mixed integer binary operations!
 
 template <class T>
 inline bool
 xisnan (const octave_int<T>&)
 { return false; }
 
-// TODO: Can/should any of these be inline?
+// FIXME: Can/should any of these be inline?
 
 template <class T>
 extern OCTAVE_API octave_int<T>
 pow (const octave_int<T>&, const octave_int<T>&);
 
 template <class T>
 extern OCTAVE_API octave_int<T>
 pow (const double& a, const octave_int<T>& b);
diff --git a/liboctave/strptime.c b/liboctave/strptime.c
--- a/liboctave/strptime.c
+++ b/liboctave/strptime.c
@@ -13,17 +13,17 @@
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Library General Public License for more details.
 
    You should have received a copy of the GNU Library General Public
    License along with the GNU C Library; see the file COPYING.LIB.  If not,
    write to the Free Software Foundation, Inc., 51 Franklin Street,
    Fifth Floor, Boston, MA 02110-1301, USA.  */
 
-/* XXX This version of the implementation is not really complete.
+/* FIXME: This version of the implementation is not really complete.
    Some of the fields cannot add information alone.  But if seeing
    some of them in the same format (such as year, week and weekday)
    this is enough information for determining the date.  */
 
 #ifdef HAVE_CONFIG_H
 # include <config.h>
 #endif
 
@@ -609,32 +609,32 @@ strptime_internal (buf, format, tm, deci
 	  break;
 	case 'u':
 	  get_number (1, 7, 1);
 	  tm->tm_wday = val % 7;
 	  have_wday = 1;
 	  break;
 	case 'g':
 	  get_number (0, 99, 2);
-	  /* XXX This cannot determine any field in TM.  */
+	  /* FIXME: This cannot determine any field in TM.  */
 	  break;
 	case 'G':
 	  if (*rp < '0' || *rp > '9')
 	    return NULL;
-	  /* XXX Ignore the number since we would need some more
+	  /* FIXME: Ignore the number since we would need some more
 	     information to compute a real date.  */
 	  do
 	    ++rp;
 	  while (*rp >= '0' && *rp <= '9');
 	  break;
 	case 'U':
 	case 'V':
 	case 'W':
 	  get_number (0, 53, 2);
-	  /* XXX This cannot determine any field in TM without some
+	  /* FIXME: This cannot determine any field in TM without some
 	     information.  */
 	  break;
 	case 'w':
 	  /* Match number of weekday.  */
 	  get_number (0, 6, 1);
 	  tm->tm_wday = val;
 	  have_wday = 1;
 	  break;
@@ -651,17 +651,17 @@ strptime_internal (buf, format, tm, deci
 	case 'Y':
 	  /* Match year including century number.  */
 	  get_number (0, 9999, 4);
 	  tm->tm_year = val - 1900;
 	  want_century = 0;
 	  want_xday = 1;
 	  break;
 	case 'Z':
-	  /* XXX How to handle this?  */
+	  /* FIXME: How to handle this?  */
 	  break;
 	case 'E':
 #ifdef _NL_CURRENT
 	  switch (*fmt++)
 	    {
 	    case 'c':
 	      /* Match locale's alternate date and time format.  */
 	      if (*decided != raw)
@@ -691,17 +691,17 @@ strptime_internal (buf, format, tm, deci
 		return NULL;
 	      want_xday = 1;
 	      break;
 	    case 'C':
 	    case 'y':
 	    case 'Y':
 	      /* Match name of base year in locale's alternate
 		 representation.  */
-	      /* XXX This is currently not implemented.  It should
+	      /* FIXME: This is currently not implemented.  It should
 		 use the value _NL_CURRENT (LC_TIME, ERA).  */
 	      break;
 	    case 'x':
 	      if (*decided != raw)
 		{
 		  const char *fmt = _NL_CURRENT (LC_TIME, ERA_D_FMT);
 
 		  if (*fmt == '\0')
@@ -802,17 +802,17 @@ strptime_internal (buf, format, tm, deci
 	      /* Match seconds using alternate numeric symbols.  */
 	      get_alt_number (0, 61, 2);
 	      tm->tm_sec = val;
 	      break;
 	    case 'U':
 	    case 'V':
 	    case 'W':
 	      get_alt_number (0, 53, 2);
-	      /* XXX This cannot determine any field in TM without
+	      /* FIXME: This cannot determine any field in TM without
 		 further information.  */
 	      break;
 	    case 'w':
 	      /* Match number of weekday using alternate numeric symbols.  */
 	      get_alt_number (0, 6, 1);
 	      tm->tm_wday = val;
 	      have_wday = 1;
 	      break;
diff --git a/mk-opts.pl b/mk-opts.pl
--- a/mk-opts.pl
+++ b/mk-opts.pl
@@ -16,17 +16,17 @@
 # 
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 # Generate option handling code from a simpler input files for
 # Octave's functions like lsode, dassl, etc.
 
-# TODO:
+# FIXME:
 #
 # * Improve default documentation and/or individual documentation
 #   in data files. 
 #
 # * Fix print/show code to display/return something more informative
 #   for special values (for example, -1 ==> infinite in some cases).
 #   Probably need more information in the data files for this.
 
diff --git a/scripts/general/cplxpair.m b/scripts/general/cplxpair.m
--- a/scripts/general/cplxpair.m
+++ b/scripts/general/cplxpair.m
@@ -36,20 +36,20 @@
 ## pairs with identical real parts but differing imaginary parts.
 ##
 ## @c Using 'smallexample' to make text fit in page when using 'smallbook'
 ## @smallexample
 ## cplxpair (exp(2i*pi*[0:4]'/5)) == exp(2i*pi*[3; 2; 4; 1; 0]/5)
 ## @end smallexample
 ## @end deftypefn
 
-## TODO: subsort returned pairs by imaginary magnitude
-## TODO: Why doesn't exp(2i*pi*[0:4]'/5) produce exact conjugates. Does
-## TODO:    it in Matlab?  The reason is that complex pairs are supposed
-## TODO:    to be exact conjugates, and not rely on a tolerance test.
+## FIXME: subsort returned pairs by imaginary magnitude
+## FIXME: Why doesn't exp(2i*pi*[0:4]'/5) produce exact conjugates. Does
+## FIXME:    it in Matlab?  The reason is that complex pairs are supposed
+## FIXME:    to be exact conjugates, and not rely on a tolerance test.
 
 ## 2006-05-12 David Bateman - Modified for NDArrays
 
 function y = cplxpair (z, tol, dim)
 
   if nargin < 1 || nargin > 3
     print_usage ();
   endif
diff --git a/scripts/miscellaneous/compare_versions.m b/scripts/miscellaneous/compare_versions.m
--- a/scripts/miscellaneous/compare_versions.m
+++ b/scripts/miscellaneous/compare_versions.m
@@ -60,17 +60,17 @@
 ## Note that version "1.1-test2" would compare as greater than
 ## "1.1-test10". Also, since the numeric part is compared first, "a"
 ## compares less than "1a" because the second string starts with a
 ## numeric part even though double("a") is greater than double("1").
 ## @end deftypefn
 
 ## Author: Bill Denney <denney@seas.upenn.edu>
 
-## TODO?: This allows a single equal sign "=" to indicate equality, do
+## FIXME?: This allows a single equal sign "=" to indicate equality, do
 ## we want to require a double equal since that is the boolean operator?
 
 function out = compare_versions (v1, v2, operator)
 
   if (nargin != 3)
     print_usage ();
   endif
 
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -193,17 +193,17 @@
 ## The options @code{-verbose} and @code{-nodeps} are respected, while 
 ## the other options are ignored.
 ## @end table
 ## @end deftypefn
 
 ## PKG_ADD: mark_as_command pkg
 
 function [local_packages, global_packages] = pkg (varargin)
-  ## Installation prefix (XXX: what should these be on windows?)
+  ## Installation prefix (FIXME: what should these be on windows?)
   persistent user_prefix = false;
   persistent prefix = -1;
   persistent archprefix = -1;
   persistent local_list = tilde_expand (fullfile ("~", ".octave_packages"));
   persistent global_list = fullfile (OCTAVE_HOME (), "share", "octave",
 				     "octave_packages");
   mlock ();
 
@@ -393,17 +393,17 @@ function [local_packages, global_package
 	error ("you must specify at least the build directory and one filename\nwhen calling 'pkg build'");
       endif
       build (files, deps, auto, verbose);
 
     case "describe"
       if (length (files) == 0)
 	error ("you must specify at least one package or 'all' when calling 'pkg describe'");
       endif
-      ## XXX FIXME: the name of the output variables is inconsistent
+      ## FIXME: the name of the output variables is inconsistent
       ##            with their content
       switch (nargout)
 	case 0
 	  describe (files, verbose, local_list, global_list);
 	case 1
 	  pkg_desc_list = describe (files, verbose, local_list, ...
 				    global_list);
 	  local_packages = pkg_desc_list;
@@ -866,21 +866,21 @@ function uninstall (pkgnames, handle_dep
       delete_idx = [];
       for i = 1:num_packages
 	cur_name = installed_pkgs_lst{i}.name;
 	if (any (strcmp (cur_name, pkgnames)))
 	  delete_idx(end+1) = i;
 	endif
       endfor
       if (length (delete_idx) != length (pkgnames))
-	## XXX: We should have a better error message
+	## FIXME: We should have a better error message
 	warning ("some of the packages you want to uninstall are not installed");
       endif
     else
-      ## XXX: We should have a better error message
+      ## FIXME: We should have a better error message
       warning ("some of the packages you want to uninstall are not installed.");
     endif
   endif
 
   ## Compute the packages that will remain installed
   idx = complement (delete_idx, 1:num_packages);
   remaining_packages = {installed_pkgs_lst{idx}};
 
@@ -1045,17 +1045,17 @@ function [pkg_idx_struct] = parse_pkg_id
   while (isempty (strfind (line, ">>")) && ! feof (fid))
     line = fgetl (fid);
   endwhile
 
   while (! feof (fid) || line != -1)
     if (! any (! isspace (line)) || line(1) == "#" || any (line == "="))
       ## Comments,  blank lines or comments about unimplemented 
       ## functions: do nothing
-      ## XXX: probably comments and pointers to external functions
+      ## FIXME: probably comments and pointers to external functions
       ## could be treated better when printing to screen?
     elseif (! isempty (strfind (line, ">>")))
       ## Skip package name and description as they are in
       ## DESCRIPTION already
     elseif (! isspace (line(1)))
       ## Category
       if (! isempty (pkg_idx_struct{cat_num}.functions))
 	pkg_idx_struct{++cat_num}.functions = {};
@@ -1718,21 +1718,21 @@ function deps_cell = fix_depends (depend
     version  = "0.0.0";
   endif
   deps_cell{i} = struct ("package", package, "operator", operator,
 			 "version", version);
   endfor
 endfunction
 
 ## Strip the text of spaces from the right
-## Example: "  hello world  " => "  hello world" (XXX: is this the same as deblank?)
+## Example: "  hello world  " => "  hello world" (FIXME: is this the same as deblank?)
 function text = rstrip (text)
   chars = find (! isspace (text));
   if (length (chars) > 0)
-    ## XXX: shouldn't it be text = text(1:chars(end));
+    ## FIXME: shouldn't it be text = text(1:chars(end));
     text = text (chars(1):end);
   else
     text = "";
   endif
 endfunction
 
 ## Strip the text of spaces from the left and the right
 ## Example: "  hello world  " => "hello world"
@@ -2056,17 +2056,17 @@ function unload_packages (files, handle_
   endfor
 
   ## Unload the packages
   for i = 1:length (archdirs)
     d = archdirs{i};
     idx = strcmp (p, d);
     if (any (idx))
       rmpath (d);
-      ## XXX: We should also check if we need to remove items from EXEC_PATH
+      ## FIXME: We should also check if we need to remove items from EXEC_PATH
     endif
   endfor
 endfunction
 
 function [status_out, msg_out] = rm_rf (dir)
   if (exist (dir))
     crr = confirm_recursive_rmdir ();
     unwind_protect
diff --git a/scripts/statistics/base/__quantile__.m b/scripts/statistics/base/__quantile__.m
--- a/scripts/statistics/base/__quantile__.m
+++ b/scripts/statistics/base/__quantile__.m
@@ -42,17 +42,17 @@ function inv = __quantile__ (x, p, metho
     error ("quantile: x must be a matrix");
   endif
 
   ## Save length and set shape of quantiles.
   n = numel (p);
   p = p(:);
 
   ## Save length and set shape of samples.
-  ## TODO: does sort guarantee that NaN's come at the end?
+  ## FIXME: does sort guarantee that NaN's come at the end?
   x = sort (x);
   m = sum (! isnan (x));
   mx = size (x, 1);
   nx = size (x, 2);
 
   ## Initialize output values.
   inv = Inf*(-(p < 0) + (p > 1));
   inv = repmat (inv, 1, nx);
diff --git a/scripts/strings/strtok.m b/scripts/strings/strtok.m
--- a/scripts/strings/strtok.m
+++ b/scripts/strings/strtok.m
@@ -21,17 +21,17 @@
 ## 
 ## Find all characters up to but not including the first character which
 ## is in the string delim.  If @var{rem} is requested, it contains the
 ## remainder of the string, starting at the first deliminator. Leading
 ## delimiters are ignored.  If @var{delim} is not specified, space is assumed.
 ##
 ## @end deftypefn
 
-## TODO: check what to do for a null delimiter
+## FIXME: check what to do for a null delimiter
 
 function [tok, rem] = strtok (str, delim)
 
   if (nargin<1 || nargin > 2)
     print_usage ();
   endif
 
   if (nargin < 2 || isempty (delim))
diff --git a/scripts/testfun/assert.m b/scripts/testfun/assert.m
--- a/scripts/testfun/assert.m
+++ b/scripts/testfun/assert.m
@@ -46,20 +46,20 @@
 ## @code{abs(@var{observed} - @var{expected}) > abs(@var{tol})}.
 ## If @var{tol} is negative use it as a relative tolerance, will produce an error if
 ## @code{abs(@var{observed} - @var{expected}) > abs(@var{tol} * @var{expected})}.
 ## If @var{expected} is zero @var{tol} will always be used as an absolute tolerance.
 ## @end table
 ## @seealso{test}
 ## @end deftypefn
 
-## TODO: Output throttling: don't print out the entire 100x100 matrix,
-## TODO: but instead give a summary; don't print out the whole list, just
-## TODO: say what the first different element is, etc.  To do this, make
-## TODO: the message generation type specific.
+## FIXME: Output throttling: don't print out the entire 100x100 matrix,
+## but instead give a summary; don't print out the whole list, just
+## say what the first different element is, etc.  To do this, make
+## the message generation type specific.
 
 function assert (cond, varargin)
 
   in = deblank (argn(1,:));
   for i = 2:rows (argn)
     in = cstrcat (in, ",", deblank (argn(i,:)));
   endfor
   in = cstrcat ("(", in, ")");
diff --git a/scripts/testfun/demo.m b/scripts/testfun/demo.m
--- a/scripts/testfun/demo.m
+++ b/scripts/testfun/demo.m
@@ -65,19 +65,19 @@
 ##   %!    y=x;
 ##   %!  endfunction
 ##   %!  f(3)
 ##   %! endif
 ## @end example
 ## @seealso{test, example}
 ## @end deftypefn
 
-## TODO: modify subplot so that gnuplot_has_multiplot == 0 causes it to
-## TODO: use the current figure window but pause if not plotting in the
-## TODO: first subplot.
+## FIXME: modify subplot so that gnuplot_has_multiplot == 0 causes it to
+## use the current figure window but pause if not plotting in the
+## first subplot.
 
 ## PKG_ADD: mark_as_command demo
 
 function demo (name, n)
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
   endif
diff --git a/scripts/testfun/speed.m b/scripts/testfun/speed.m
--- a/scripts/testfun/speed.m
+++ b/scripts/testfun/speed.m
@@ -138,17 +138,17 @@
 ## absolutely as @code{abs(@var{x} - @var{y})}.
 ##
 ## Type @code{example('speed')} to see some real examples. Note for 
 ## obscure reasons, you can't run examples 1 and 2 directly using 
 ## @code{demo('speed')}. Instead use, @code{eval(example('speed',1))}
 ## and @code{eval(example('speed',2))}.
 ## @end deftypefn
 
-## TODO: consider two dimensional speedup surfaces for functions like kron.
+## FIXME: consider two dimensional speedup surfaces for functions like kron.
 function [__order, __test_n, __tnew, __torig] ...
       = speed (__f1, __init, __max_n, __f2, __tol)
 
   if (nargin < 1 || nargin > 6)
     print_usage ();
   endif
 
   if (nargin < 2 || isempty (__init))
diff --git a/scripts/testfun/test.m b/scripts/testfun/test.m
--- a/scripts/testfun/test.m
+++ b/scripts/testfun/test.m
@@ -63,20 +63,20 @@
 ## concatenated and returned as @var{code} with @var{idx} being a vector of
 ## positions of the ends of the demo blocks.
 ##
 ## If the second argument is 'explain', then @var{name} is ignored and an
 ## explanation of the line markers used is written to the file @var{fid}.
 ## @seealso{error, assert, fail, demo, example}
 ## @end deftypefn
 
-## TODO: * Consider using keyword fail rather then error?  This allows us
-## TODO: to make a functional form of error blocks, which means we
-## TODO: can include them in test sections which means that we can use
-## TODO: octave flow control for both kinds of tests.
+## FIXME: * Consider using keyword fail rather then error?  This allows us
+## to make a functional form of error blocks, which means we
+## can include them in test sections which means that we can use
+## octave flow control for both kinds of tests.
 
 ## PKG_ADD: mark_as_command test
 
 function [__ret1, __ret2, __ret3, __ret4] = test (__name, __flag, __fid)
   ## information from test will be introduced by "key" 
   persistent __signal_fail =  "!!!!! ";
   persistent __signal_empty = "????? ";
   persistent __signal_block = "  ***** ";
diff --git a/scripts/time/datestr.m b/scripts/time/datestr.m
--- a/scripts/time/datestr.m
+++ b/scripts/time/datestr.m
@@ -97,33 +97,33 @@
 ## If @var{p} is nor specified, it defaults to the current year minus 50.
 ##
 ## If a matrix or cell array of dates is given, a vector of date strings is
 ## returned.
 ##
 ## @seealso{datenum, datevec, date, clock, now, datetick}
 ## @end deftypefn
 
-## TODO: parse arbitrary code strings.
-## TODO: e.g., for  Wednesday 2001-03-05 09:04:06 AM, use
-## TODO:     yy    01
-## TODO:     yyyy  2001
-## TODO:     m     M
-## TODO:     mm    03
-## TODO:     mmm   Mar
-## TODO:     d     W
-## TODO:     dd    05
-## TODO:     ddd   Wed
-## TODO:     HH    09
-## TODO:     MM    04
-## TODO:     SS    06
-## TODO:     PM    AM
-## TODO: Vectorize.  It is particularly easy since all the codes are
-## TODO:    fixed width.  Just generate the parts in separate arrays and
-## TODO:    concatenate.
+## FIXME: parse arbitrary code strings.
+## e.g., for  Wednesday 2001-03-05 09:04:06 AM, use
+##     yy    01
+##     yyyy  2001
+##     m     M
+##     mm    03
+##     mmm   Mar
+##     d     W
+##     dd    05
+##     ddd   Wed
+##     HH    09
+##     MM    04
+##     SS    06
+##     PM    AM
+## FIXME: Vectorize.  It is particularly easy since all the codes are
+##    fixed width.  Just generate the parts in separate arrays and
+##    concatenate.
 
 ## Author: pkienzle <pkienzle@users.sf.net>
 ## Created: 10 October 2001 (CVS)
 ## Adapted-By: William Poetra Yoga Hadisoeseno <williampoetra@gmail.com>
 
 function retval = datestr (date, f, p)
 
   persistent dateform names_mmmm names_mmm names_m names_dddd names_ddd names_d;
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -153,17 +153,17 @@ public:
     { return ComplexNDArray (dim_vector (1, 1), Complex (scalar)); }
 
   FloatComplexNDArray float_complex_array_value (bool = false) const
     { return FloatComplexNDArray (dim_vector (1, 1), FloatComplex (scalar)); }
 
   SparseMatrix sparse_matrix_value (bool = false) const
     { return SparseMatrix (Matrix (1, 1, scalar)); }
 
-  // XXX FIXME XXX Need SparseComplexMatrix (Matrix) constructor!!!
+  // FIXME Need SparseComplexMatrix (Matrix) constructor!!!
   SparseComplexMatrix sparse_complex_matrix_value (bool = false) const
     { return SparseComplexMatrix (sparse_matrix_value ()); }
 
   SparseBoolMatrix sparse_bool_matrix_value (bool = false) const
     { return SparseBoolMatrix (boolMatrix (1, 1, scalar)); }
 
   charNDArray
   char_array_value (bool = false) const
diff --git a/src/ov-float.h b/src/ov-float.h
--- a/src/ov-float.h
+++ b/src/ov-float.h
@@ -154,17 +154,17 @@ public:
     { return NDArray (dim_vector (1, 1), scalar); }
 
   FloatNDArray float_array_value (bool = false) const
     { return FloatNDArray (dim_vector (1, 1), scalar); }
 
   SparseMatrix sparse_matrix_value (bool = false) const
     { return SparseMatrix (Matrix (1, 1, scalar)); }
 
-  // XXX FIXME XXX Need SparseComplexMatrix (Matrix) constructor!!!
+  // FIXME Need SparseComplexMatrix (Matrix) constructor!!!
   SparseComplexMatrix sparse_complex_matrix_value (bool = false) const
     { return SparseComplexMatrix (sparse_matrix_value ()); }
 
   octave_value resize (const dim_vector& dv, bool fill = false) const;
 
   Complex complex_value (bool = false) const { return scalar; }
 
   FloatComplex float_complex_value (bool = false) const { return scalar; }
diff --git a/src/ov-scalar.h b/src/ov-scalar.h
--- a/src/ov-scalar.h
+++ b/src/ov-scalar.h
@@ -155,17 +155,17 @@ public:
     { return NDArray (dim_vector (1, 1), scalar); }
 
   FloatNDArray float_array_value (bool = false) const
     { return FloatNDArray (dim_vector (1, 1), scalar); }
 
   SparseMatrix sparse_matrix_value (bool = false) const
     { return SparseMatrix (Matrix (1, 1, scalar)); }
 
-  // XXX FIXME XXX Need SparseComplexMatrix (Matrix) constructor!!!
+  // FIXME Need SparseComplexMatrix (Matrix) constructor!!!
   SparseComplexMatrix sparse_complex_matrix_value (bool = false) const
     { return SparseComplexMatrix (sparse_matrix_value ()); }
 
   octave_value resize (const dim_vector& dv, bool fill = false) const;
 
   Complex complex_value (bool = false) const { return scalar; }
 
   FloatComplex float_complex_value (bool = false) const { return scalar; }
