# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1521669008 25200
#      Wed Mar 21 14:50:08 2018 -0700
# Branch stable
# Node ID 005120381e78f19ac29588a36b83322dbc516cf7
# Parent  a600838cb1c92bf7ac68e33f9b783ead2fc9b097
maint: rename mk-qthelp.pl for consistency with other build scripts

* doc/interpreter/mk-qthelp.pl: Rename from mk_qthelp.pl.  Strip trailing
whitespace.
* doc/interpreter/module.mk: Update references to script name.

diff --git a/doc/interpreter/mk_qthelp.pl b/doc/interpreter/mk-qthelp.pl
rename from doc/interpreter/mk_qthelp.pl
rename to doc/interpreter/mk-qthelp.pl
--- a/doc/interpreter/mk_qthelp.pl
+++ b/doc/interpreter/mk-qthelp.pl
@@ -1,25 +1,25 @@
 #!/usr/bin/env perl
 
 ################################################################################
-# File    : mk_qthelp.pl
+# File    : mk-qthelp.pl
 # Purpose : Transform Octave HTML documentation into intermediate formats
 #           for Qt Help Project (.qhp) and Qt Help Collection Project (.qhcp).
-# Usage   : mk_qthelp.pl input_htmldir output_filename 
+# Usage   : mk-qthelp.pl input_htmldir output_filename
 ################################################################################
 use warnings;              # report warnings for questionable run-time code
 use strict qw(refs subs);  # check at compile-time for bad programming style
 use File::Basename;        # For splitting paths between dir and file
 use File::Spec;            # For combining dirs and filenames into paths
 
 ################################################################################
 # Extract command line arguments
 if ($#ARGV != 1)
-{ die "USAGE: %0 input_htmldir output_filename"; } 
+{ die "USAGE: %0 input_htmldir output_filename"; }
 
 $htmldir = basename ($ARGV[0]);
 $basedir = File::Spec->rel2abs (dirname ($ARGV[1]));
 $fname   = File::Spec->catfile ($basedir, basename ($ARGV[1]));
 
 ################################################################################
 # Parse index.html to retrieve the table of contents
 $htmlfname = File::Spec->catfile ($basedir, $htmldir, "index.html");
@@ -32,20 +32,20 @@ while (($_ = <$HTML>) !~ /^<ul class="no
 $level = 0;
 while (<$HTML>)
 {
   if (/^\s*<li>/)
   {
     ($href, $text) = m|href="([^"]*)">(.*)</a>|;
     # Sanitize text
     $text =~ s/<[^>]*>//g;         # remove xml-looking blocks like <code>
-    $text =~ s/&rsquo;/&#8217;/g;  # Code for apostrophe 
+    $text =~ s/&rsquo;/&#8217;/g;  # Code for apostrophe
 
     push (@toc, { "href" => $href, "text" => $text,
-                  "level" => $level, "sectionstart" => 0 }); 
+                  "level" => $level, "sectionstart" => 0 });
   }
   elsif (/^\s+<ul /)
   {
     $level++;
     # Get last node and amend it to have a section start
     %node = %{ $toc[-1] };
     $node{sectionstart} = 1;
     $toc[-1] = { %node };
@@ -119,17 +119,17 @@ print $FH <<__EOT1__;
 $level = 0;
 $indent = 4;
 foreach $hashref (@toc)
 {
   %node = %{$hashref};
   while ($node{level} < $level)
   {
     # Unindent and close section
-    $level--;    
+    $level--;
     print $FH "  " x ($indent + $level);
     print $FH "</section>\n";
   }
   $level = $node{level};
 
   print $FH "  " x ($indent + $node{level});
   print $FH qq|<section title="$node{text}" |;
   print $FH qq|ref="|, File::Spec->catfile ($htmldir, $node{href});
diff --git a/doc/interpreter/module.mk b/doc/interpreter/module.mk
--- a/doc/interpreter/module.mk
+++ b/doc/interpreter/module.mk
@@ -199,19 +199,19 @@ HTMLDIR_CSS = $(OCTAVE_HTML_DIR)/octave.
 
 if AMCOND_BUILD_QT_DOCS
 
 OCTAVE_QTHELP_FILES = %reldir%/octave_interpreter.qhc %reldir%/octave_interpreter.qch
 
 octdoc_DATA += \
   $(OCTAVE_QTHELP_FILES)
 
-$(OCTAVE_QTHELP_FILES): $(OCTAVE_HTML_STAMP) $(srcdir)/%reldir%/mk_qthelp.pl
+$(OCTAVE_QTHELP_FILES): $(OCTAVE_HTML_STAMP) %reldir%/mk-qthelp.pl
 	$(AM_V_GEN)rm -f $(OCTAVE_QTHELP_FILES) && \
-	$(PERL) $(srcdir)/%reldir%/mk_qthelp.pl octave.html %reldir%/octave_interpreter && \
+	$(PERL) $(srcdir)/%reldir%/mk-qthelp.pl octave.html %reldir%/octave_interpreter && \
 	$(QCOLLECTIONGENERATOR) $(QCOLLECTIONGENERATORFLAGS) %reldir%/octave_interpreter.qhcp -o %reldir%/octave_interpreter.qhc >/dev/null && \
 	rm -f %reldir%/octave_interpreter.qhcp %reldir%/octave_interpreter.qhp
 
 ## The Qt help collection generator command produces two output files
 ## with the same base name: the compressed help (qch) file and the help
 ## collection (qhc) file.  Declare the qhc file to depend on the
 ## associated qch file, so that the files are built serially.
 %reldir%/octave_interpreter.qhc: %reldir%/octave_interpreter.qch
@@ -351,17 +351,17 @@ doc_EXTRA_DIST += \
   %reldir%/doc-cache \
   %reldir%/genpropdoc.m \
   %reldir%/graphics_properties.mk \
   %reldir%/images \
   %reldir%/images.awk \
   %reldir%/images.mk \
   %reldir%/macros.texi \
   %reldir%/mk-doc-cache.pl \
-  %reldir%/mk_qthelp.pl \
+  %reldir%/mk-qthelp.pl \
   %reldir%/mkcontrib.awk \
   %reldir%/munge-texi.pl \
   $(DOC_IMAGES) \
   $(DOC_IMAGES_SRC) \
   $(LOGOS) \
   $(TXI_SRC)
 
 doc_MAINTAINERCLEANFILES += \
