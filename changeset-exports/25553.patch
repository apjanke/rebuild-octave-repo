# HG changeset patch
# User Kai T. Ohlhus <k.ohlhus@gmail.com>
# Date 1530782528 -7200
#      Thu Jul 05 11:22:08 2018 +0200
# Branch stable
# Node ID 986ba7f21a852c2509d143c35d3a504819d746e3
# Parent  5f9fa229cc8ac10c67a01e066ab0987d68e13304
xpow.cc (err_nonsquare_matrix): Clarify error message (bug #54248).

* libinterp/corefcn/xpow.cc (err_nonsquare_matrix): This error messages is used
for many x^y cases:

// Safer pow functions.
//
//       op2 \ op1:   s   m   cs   cm
//            +--   +---+---+----+----+
//   scalar   |     | 1 | 5 |  7 | 11 |
//                  +---+---+----+----+
//   matrix         | 2 | * |  8 |  * |
//                  +---+---+----+----+
//   complex_scalar | 3 | 6 |  9 | 12 |
//                  +---+---+----+----+
//   complex_matrix | 4 | * | 10 |  * |
//                  +---+---+----+----+

But the cases 5, 6, 11, and 12 where `op1 == x` is a matrix are ignored by the
original error message.

diff --git a/libinterp/corefcn/xpow.cc b/libinterp/corefcn/xpow.cc
--- a/libinterp/corefcn/xpow.cc
+++ b/libinterp/corefcn/xpow.cc
@@ -59,17 +59,18 @@ static void
 err_failed_diagonalization (void)
 {
   error ("Failed to diagonalize matrix while calculating matrix exponential");
 }
 
 static void
 err_nonsquare_matrix (void)
 {
-  error ("for x^A, A must be a square matrix.  Use .^ for elementwise power.");
+  error ("for x^y, only square matrix arguments are permitted and one " \
+    "argument must be scalar.  Use .^ for elementwise power.");
 }
 
 template <typename T>
 static inline bool
 xisint (T x)
 {
   return (octave::math::x_nint (x) == x
           && ((x >= 0 && x < std::numeric_limits<int>::max ())
