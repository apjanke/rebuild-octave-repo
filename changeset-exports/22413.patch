# HG changeset patch
# User Rik <rik@octave.org>
# Date 1472701753 25200
#      Wed Aug 31 20:49:13 2016 -0700
# Node ID 8758addcf2652e2542366e7f3fc216402475a2db
# Parent  2bc07741efa0db564ba402c1e06b70608e78d025
maint: Remove ';' at end of namespace declaration.

* Backend.h, BaseControl.cc, BaseControl.h, ButtonControl.h, ButtonGroup.h,
Canvas.cc, Canvas.h, CheckBoxControl.h, Container.cc, Container.h,
ContextMenu.cc, ContextMenu.h, EditControl.cc, EditControl.h, Figure.cc,
Figure.h, FigureWindow.cc, FigureWindow.h, GLCanvas.cc, GLCanvas.h, KeyMap.cc,
KeyMap.h, ListBoxControl.cc, ListBoxControl.h, Logger.cc, Logger.h, Menu.cc,
Menu.h, MenuContainer.h, Object.cc, Object.h, Panel.h, PopupMenuControl.cc,
PopupMenuControl.h, PushButtonControl.cc, PushButtonControl.h, PushTool.h,
QtHandlesUtils.cc, QtHandlesUtils.h, RadioButtonControl.h, SliderControl.cc,
SliderControl.h, TextControl.cc, TextControl.h, TextEdit.cc, TextEdit.h,
ToggleButtonControl.h, ToggleTool.h, ToolBar.cc, ToolBar.h, ToolBarButton.cc,
__init_qt__.cc, __init_qt__.h, octave-gui.cc, build-env.h, build-env.in.cc,
jit-util.h:
Remove ';' at end of namespace declaration.

diff --git a/libgui/graphics/Backend.h b/libgui/graphics/Backend.h
--- a/libgui/graphics/Backend.h
+++ b/libgui/graphics/Backend.h
@@ -62,12 +62,12 @@ namespace QtHandles
     static Object* toolkitObject (const graphics_object& go);
 
     static ObjectProxy* toolkitObjectProxy (const graphics_object& go);
 
   signals:
     void createObject (double handle);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/BaseControl.cc b/libgui/graphics/BaseControl.cc
--- a/libgui/graphics/BaseControl.cc
+++ b/libgui/graphics/BaseControl.cc
@@ -241,10 +241,10 @@ namespace QtHandles
 
       default:
         break;
       }
 
     return Object::eventFilter (watched, xevent);
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/BaseControl.h b/libgui/graphics/BaseControl.h
--- a/libgui/graphics/BaseControl.h
+++ b/libgui/graphics/BaseControl.h
@@ -45,12 +45,12 @@ namespace QtHandles
     void init (QWidget* w, bool callBase = false);
     void update (int pId);
 
   private:
     bool m_normalizedFont;
     bool m_keyPressHandlerDefined;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ButtonControl.h b/libgui/graphics/ButtonControl.h
--- a/libgui/graphics/ButtonControl.h
+++ b/libgui/graphics/ButtonControl.h
@@ -44,12 +44,12 @@ namespace QtHandles
   private slots:
     void clicked (void);
     void toggled (bool checked);
 
   private:
     bool m_blockCallback;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ButtonGroup.h b/libgui/graphics/ButtonGroup.h
--- a/libgui/graphics/ButtonGroup.h
+++ b/libgui/graphics/ButtonGroup.h
@@ -69,12 +69,12 @@ namespace QtHandles
   private:
     QButtonGroup* m_buttongroup;
     QRadioButton* m_hiddenbutton;
     Container* m_container;
     QLabel* m_title;
     bool m_blockUpdates;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Canvas.cc b/libgui/graphics/Canvas.cc
--- a/libgui/graphics/Canvas.cc
+++ b/libgui/graphics/Canvas.cc
@@ -1025,10 +1025,10 @@ namespace QtHandles
   Canvas*
   Canvas::create (const std::string& /* name */, QWidget* parent,
                   const graphics_handle& handle)
   {
     // Only OpenGL
     return new GLCanvas (parent, handle);
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Canvas.h b/libgui/graphics/Canvas.h
--- a/libgui/graphics/Canvas.h
+++ b/libgui/graphics/Canvas.h
@@ -117,12 +117,12 @@ namespace QtHandles
     bool m_clickMode;              // True: ZoomIn, False: ZoomOut
     QPoint m_mouseAnchor;
     QPoint m_mouseCurrent;
     graphics_handle m_mouseAxes;
     int m_eventMask;
     bool m_rectMode;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/CheckBoxControl.h b/libgui/graphics/CheckBoxControl.h
--- a/libgui/graphics/CheckBoxControl.h
+++ b/libgui/graphics/CheckBoxControl.h
@@ -34,12 +34,12 @@ namespace QtHandles
   {
   public:
     CheckBoxControl (const graphics_object& go, QCheckBox* box);
     ~CheckBoxControl (void);
 
     static CheckBoxControl* create (const graphics_object& go);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Container.cc b/libgui/graphics/Container.cc
--- a/libgui/graphics/Container.cc
+++ b/libgui/graphics/Container.cc
@@ -107,10 +107,10 @@ namespace QtHandles
   void
   Container::childEvent (QChildEvent* xevent)
   {
     if (xevent->child ()->isWidgetType ())
       qobject_cast<QWidget*> (xevent->child ())->setMouseTracking (
         hasMouseTracking ());
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Container.h b/libgui/graphics/Container.h
--- a/libgui/graphics/Container.h
+++ b/libgui/graphics/Container.h
@@ -47,12 +47,12 @@ namespace QtHandles
   protected:
     void childEvent (QChildEvent* event);
     void resizeEvent (QResizeEvent* event);
 
   private:
     Canvas* m_canvas;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ContextMenu.cc b/libgui/graphics/ContextMenu.cc
--- a/libgui/graphics/ContextMenu.cc
+++ b/libgui/graphics/ContextMenu.cc
@@ -131,10 +131,10 @@ namespace QtHandles
 
                 if (menu)
                   menu->popup (pt);
               }
           }
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/ContextMenu.h b/libgui/graphics/ContextMenu.h
--- a/libgui/graphics/ContextMenu.h
+++ b/libgui/graphics/ContextMenu.h
@@ -51,12 +51,12 @@ namespace QtHandles
   protected:
     void update (int pId);
 
   private slots:
     void aboutToShow (void);
     void aboutToHide (void);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/EditControl.cc b/libgui/graphics/EditControl.cc
--- a/libgui/graphics/EditControl.cc
+++ b/libgui/graphics/EditControl.cc
@@ -255,10 +255,10 @@ namespace QtHandles
         else
           gh_manager::post_set (m_handle, "string", Utils::toStdString (txt), false);
         gh_manager::post_callback (m_handle, "callback");
 
         m_textChanged = false;
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/EditControl.h b/libgui/graphics/EditControl.h
--- a/libgui/graphics/EditControl.h
+++ b/libgui/graphics/EditControl.h
@@ -59,12 +59,12 @@ namespace QtHandles
     void editingFinished (void);
     void returnPressed (void);
 
   private:
     bool m_multiLine;
     bool m_textChanged;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Figure.cc b/libgui/graphics/Figure.cc
--- a/libgui/graphics/Figure.cc
+++ b/libgui/graphics/Figure.cc
@@ -1007,10 +1007,10 @@ namespace QtHandles
   {
     // Enable mouse tracking on every widgets
     m_container->setMouseTracking (true);
     m_container->canvas (m_handle)->qWidget ()->setMouseTracking (true);
     foreach (QWidget* w, m_container->findChildren<QWidget*> ())
     { w->setMouseTracking (true); }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Figure.h b/libgui/graphics/Figure.h
--- a/libgui/graphics/Figure.h
+++ b/libgui/graphics/Figure.h
@@ -137,12 +137,12 @@ namespace QtHandles
     QToolBar* m_figureToolBar;
     MenuBar* m_menuBar;
     QStatusBar* m_statusBar;
     QRect m_innerRect;
     QRect m_outerRect;
     MouseModeActionGroup* m_mouseModeGroup;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/FigureWindow.cc b/libgui/graphics/FigureWindow.cc
--- a/libgui/graphics/FigureWindow.cc
+++ b/libgui/graphics/FigureWindow.cc
@@ -44,10 +44,10 @@ namespace QtHandles
 
   QMenu*
   FigureWindow::createPopupMenu (void)
   {
     // For the time being, disable menubar/toolbar popup menu
     return 0;
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/FigureWindow.h b/libgui/graphics/FigureWindow.h
--- a/libgui/graphics/FigureWindow.h
+++ b/libgui/graphics/FigureWindow.h
@@ -38,12 +38,12 @@ namespace QtHandles
 
   public:
     FigureWindow (QWidget* parent = 0);
     ~FigureWindow (void);
 
     QMenu* createPopupMenu (void);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/GLCanvas.cc b/libgui/graphics/GLCanvas.cc
--- a/libgui/graphics/GLCanvas.cc
+++ b/libgui/graphics/GLCanvas.cc
@@ -183,10 +183,10 @@ namespace QtHandles
 
   void
   GLCanvas::keyReleaseEvent (QKeyEvent* xevent)
   {
     if (! canvasKeyReleaseEvent (xevent))
       QGLWidget::keyReleaseEvent (xevent);
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/GLCanvas.h b/libgui/graphics/GLCanvas.h
--- a/libgui/graphics/GLCanvas.h
+++ b/libgui/graphics/GLCanvas.h
@@ -53,12 +53,12 @@ namespace QtHandles
     void mouseMoveEvent (QMouseEvent* event);
     void mousePressEvent (QMouseEvent* event);
     void mouseReleaseEvent (QMouseEvent* event);
     void wheelEvent (QWheelEvent* event);
     void keyPressEvent (QKeyEvent* event);
     void keyReleaseEvent (QKeyEvent* event);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/KeyMap.cc b/libgui/graphics/KeyMap.cc
--- a/libgui/graphics/KeyMap.cc
+++ b/libgui/graphics/KeyMap.cc
@@ -249,12 +249,12 @@ namespace QtHandles
           keyMapper[Qt::Key_ssharp] = "ssharp";
           keyMapper[Qt::Key_division] = "division";
           keyMapper[Qt::Key_ydiaeresis] = "ydiaeresis";
         }
 
       return keyMapper.value (key, std::string ("<unknown key>"));
     }
 
-  }; //namespace KeyMap
+  }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/KeyMap.h b/libgui/graphics/KeyMap.h
--- a/libgui/graphics/KeyMap.h
+++ b/libgui/graphics/KeyMap.h
@@ -25,17 +25,15 @@ along with Octave; see the file COPYING.
 
 #include <string>
 
 namespace QtHandles
 {
 
   namespace KeyMap
   {
-
     std::string qKeyToKeyString (int key);
+  }
 
-  }; // namespace KeyMap
-
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ListBoxControl.cc b/libgui/graphics/ListBoxControl.cc
--- a/libgui/graphics/ListBoxControl.cc
+++ b/libgui/graphics/ListBoxControl.cc
@@ -171,10 +171,10 @@ namespace QtHandles
         foreach (const QModelIndex& idx, l)
         value(i++) = (idx.row () + 1);
 
         gh_manager::post_set (m_handle, "value", octave_value (value), false);
         gh_manager::post_callback (m_handle, "callback");
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/ListBoxControl.h b/libgui/graphics/ListBoxControl.h
--- a/libgui/graphics/ListBoxControl.h
+++ b/libgui/graphics/ListBoxControl.h
@@ -45,12 +45,12 @@ namespace QtHandles
 
   private slots:
     void itemSelectionChanged (void);
 
   private:
     bool m_blockCallback;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Logger.cc b/libgui/graphics/Logger.cc
--- a/libgui/graphics/Logger.cc
+++ b/libgui/graphics/Logger.cc
@@ -80,10 +80,10 @@ namespace QtHandles
   {
     if (m_debugEnabled)
       {
         vfprintf (stderr, fmt, arg);
         fprintf (stderr, "\n");
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Logger.h b/libgui/graphics/Logger.h
--- a/libgui/graphics/Logger.h
+++ b/libgui/graphics/Logger.h
@@ -45,12 +45,12 @@ namespace QtHandles
     Logger (void);
     ~Logger (void);
 
     static Logger* instance (void);
 
     void debugV (const char* fmt, va_list arg);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Menu.cc b/libgui/graphics/Menu.cc
--- a/libgui/graphics/Menu.cc
+++ b/libgui/graphics/Menu.cc
@@ -320,10 +320,10 @@ namespace QtHandles
                 }
 
               count++;
             }
         }
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Menu.h b/libgui/graphics/Menu.h
--- a/libgui/graphics/Menu.h
+++ b/libgui/graphics/Menu.h
@@ -57,12 +57,12 @@ namespace QtHandles
   private:
     void updateSiblingPositions (void);
 
   private:
     QWidget* m_parent;
     QAction* m_separator;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/MenuContainer.h b/libgui/graphics/MenuContainer.h
--- a/libgui/graphics/MenuContainer.h
+++ b/libgui/graphics/MenuContainer.h
@@ -29,12 +29,12 @@ namespace QtHandles
 {
 
   class MenuContainer
   {
   public:
     virtual QWidget* menu (void) = 0;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Object.cc b/libgui/graphics/Object.cc
--- a/libgui/graphics/Object.cc
+++ b/libgui/graphics/Object.cc
@@ -183,10 +183,10 @@ namespace QtHandles
     QVariant v = obj->property ("QtHandles::Object");
 
     if (v.isValid ())
       return reinterpret_cast<Object*> (qvariant_cast<void*> (v));
 
     return 0;
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/Object.h b/libgui/graphics/Object.h
--- a/libgui/graphics/Object.h
+++ b/libgui/graphics/Object.h
@@ -96,12 +96,12 @@ namespace QtHandles
 
     virtual void beingDeleted (void);
 
   protected:
     graphics_handle m_handle;
     QObject* m_qobject;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/Panel.h b/libgui/graphics/Panel.h
--- a/libgui/graphics/Panel.h
+++ b/libgui/graphics/Panel.h
@@ -53,12 +53,12 @@ namespace QtHandles
     void updateLayout (void);
 
   private:
     Container* m_container;
     QLabel* m_title;
     bool m_blockUpdates;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/PopupMenuControl.cc b/libgui/graphics/PopupMenuControl.cc
--- a/libgui/graphics/PopupMenuControl.cc
+++ b/libgui/graphics/PopupMenuControl.cc
@@ -137,10 +137,10 @@ namespace QtHandles
       {
         gh_manager::post_set (m_handle, "value",
                               octave_value (double (index + 1)),
                               false);
         gh_manager::post_callback (m_handle, "callback");
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/PopupMenuControl.h b/libgui/graphics/PopupMenuControl.h
--- a/libgui/graphics/PopupMenuControl.h
+++ b/libgui/graphics/PopupMenuControl.h
@@ -45,12 +45,12 @@ namespace QtHandles
 
   private slots:
     void currentIndexChanged (int index);
 
   private:
     bool m_blockUpdate;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/PushButtonControl.cc b/libgui/graphics/PushButtonControl.cc
--- a/libgui/graphics/PushButtonControl.cc
+++ b/libgui/graphics/PushButtonControl.cc
@@ -74,10 +74,10 @@ namespace QtHandles
         break;
 
       default:
         BaseControl::update (pId);
         break;
       }
   }
 
-}; // namespave QtHandles
+}
 
diff --git a/libgui/graphics/PushButtonControl.h b/libgui/graphics/PushButtonControl.h
--- a/libgui/graphics/PushButtonControl.h
+++ b/libgui/graphics/PushButtonControl.h
@@ -37,12 +37,12 @@ namespace QtHandles
     ~PushButtonControl (void);
 
     static PushButtonControl* create (const graphics_object& go);
 
   protected:
     void update (int pId);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/PushTool.h b/libgui/graphics/PushTool.h
--- a/libgui/graphics/PushTool.h
+++ b/libgui/graphics/PushTool.h
@@ -40,12 +40,12 @@ namespace QtHandles
 
   protected:
     void update (int pId);
 
   private slots:
     void clicked (void);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/QtHandlesUtils.cc b/libgui/graphics/QtHandlesUtils.cc
--- a/libgui/graphics/QtHandlesUtils.cc
+++ b/libgui/graphics/QtHandlesUtils.cc
@@ -381,12 +381,12 @@ namespace QtHandles
         modList.push_back ("control");
 #endif
 
       retval.setfield ("Modifier", Cell (modList));
 
       return retval;
     }
 
-  }; // namespace Utils
+  }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/QtHandlesUtils.h b/libgui/graphics/QtHandlesUtils.h
--- a/libgui/graphics/QtHandlesUtils.h
+++ b/libgui/graphics/QtHandlesUtils.h
@@ -73,14 +73,14 @@ namespace QtHandles
     inline typename T::properties&
     properties (const graphics_handle& h)
     { return Utils::properties<T> (gh_manager::get_object (h)); }
 
     QImage makeImageFromCData (const octave_value& v, int width = -1,
                                int height = -1);
 
     octave_scalar_map makeKeyEventStruct (QKeyEvent* event);
-  };
+  }
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/RadioButtonControl.h b/libgui/graphics/RadioButtonControl.h
--- a/libgui/graphics/RadioButtonControl.h
+++ b/libgui/graphics/RadioButtonControl.h
@@ -34,12 +34,12 @@ namespace QtHandles
   {
   public:
     RadioButtonControl (const graphics_object& go, QRadioButton* box);
     ~RadioButtonControl (void);
 
     static RadioButtonControl* create (const graphics_object& go);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/SliderControl.cc b/libgui/graphics/SliderControl.cc
--- a/libgui/graphics/SliderControl.cc
+++ b/libgui/graphics/SliderControl.cc
@@ -147,10 +147,10 @@ namespace QtHandles
 
                 gh_manager::post_set (m_handle, "value", octave_value (dval));
                 gh_manager::post_callback (m_handle, "callback");
               }
           }
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/SliderControl.h b/libgui/graphics/SliderControl.h
--- a/libgui/graphics/SliderControl.h
+++ b/libgui/graphics/SliderControl.h
@@ -45,12 +45,12 @@ namespace QtHandles
 
   private slots:
     void valueChanged (int ival);
 
   private:
     bool m_blockUpdates;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/TextControl.cc b/libgui/graphics/TextControl.cc
--- a/libgui/graphics/TextControl.cc
+++ b/libgui/graphics/TextControl.cc
@@ -85,10 +85,10 @@ namespace QtHandles
         break;
 
       default:
         BaseControl::update (pId);
         break;
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/TextControl.h b/libgui/graphics/TextControl.h
--- a/libgui/graphics/TextControl.h
+++ b/libgui/graphics/TextControl.h
@@ -37,12 +37,12 @@ namespace QtHandles
     ~TextControl (void);
 
     static TextControl* create (const graphics_object& go);
 
   protected:
     void update (int pId);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/TextEdit.cc b/libgui/graphics/TextEdit.cc
--- a/libgui/graphics/TextEdit.cc
+++ b/libgui/graphics/TextEdit.cc
@@ -45,10 +45,10 @@ namespace QtHandles
     QTextEdit::keyPressEvent (xevent);
 
     if ((xevent->key () == Qt::Key_Return
          || xevent->key () == Qt::Key_Enter)
         && xevent->modifiers () == Qt::ControlModifier)
       emit returnPressed ();
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/TextEdit.h b/libgui/graphics/TextEdit.h
--- a/libgui/graphics/TextEdit.h
+++ b/libgui/graphics/TextEdit.h
@@ -40,12 +40,12 @@ namespace QtHandles
     void editingFinished (void);
     void returnPressed (void);
 
   protected:
     void focusOutEvent (QFocusEvent* event);
     void keyPressEvent (QKeyEvent* event);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ToggleButtonControl.h b/libgui/graphics/ToggleButtonControl.h
--- a/libgui/graphics/ToggleButtonControl.h
+++ b/libgui/graphics/ToggleButtonControl.h
@@ -34,12 +34,12 @@ namespace QtHandles
   {
   public:
     ToggleButtonControl (const graphics_object& go, QPushButton* box);
     ~ToggleButtonControl (void);
 
     static ToggleButtonControl* create (const graphics_object& go);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ToggleTool.h b/libgui/graphics/ToggleTool.h
--- a/libgui/graphics/ToggleTool.h
+++ b/libgui/graphics/ToggleTool.h
@@ -40,12 +40,12 @@ namespace QtHandles
 
   protected:
     void update (int pId);
 
   private slots:
     void triggered (bool checked);
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ToolBar.cc b/libgui/graphics/ToolBar.cc
--- a/libgui/graphics/ToolBar.cc
+++ b/libgui/graphics/ToolBar.cc
@@ -172,10 +172,10 @@ namespace QtHandles
       {
         QToolBar* bar = qWidget<QToolBar> ();
 
         if (bar)
           m_figure->showCustomToolBar (bar, false);
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/ToolBar.h b/libgui/graphics/ToolBar.h
--- a/libgui/graphics/ToolBar.h
+++ b/libgui/graphics/ToolBar.h
@@ -54,12 +54,12 @@ namespace QtHandles
   private slots:
     void hideEmpty (void);
 
   private:
     QAction* m_empty;
     Figure* m_figure;
   };
 
-}; // namespace QtHandles
+}
 
 #endif
 
diff --git a/libgui/graphics/ToolBarButton.cc b/libgui/graphics/ToolBarButton.cc
--- a/libgui/graphics/ToolBarButton.cc
+++ b/libgui/graphics/ToolBarButton.cc
@@ -117,10 +117,10 @@ namespace QtHandles
         break;
 
       default:
         Object::update (pId);
         break;
       }
   }
 
-}; // namespace QtHandles
+}
 
diff --git a/libgui/graphics/__init_qt__.cc b/libgui/graphics/__init_qt__.cc
--- a/libgui/graphics/__init_qt__.cc
+++ b/libgui/graphics/__init_qt__.cc
@@ -120,17 +120,17 @@ namespace QtHandles
         qtHandlesInitialized = false;
 
         return true;
       }
 
     return false;
   }
 
-}; // namespace QtHandles
+}
 
 DEFUN (__init_qt__, , , "")
 {
   QtHandles::__init__ ();
 
   return octave_value ();
 }
 
diff --git a/libgui/graphics/__init_qt__.h b/libgui/graphics/__init_qt__.h
--- a/libgui/graphics/__init_qt__.h
+++ b/libgui/graphics/__init_qt__.h
@@ -23,14 +23,14 @@ along with Octave; see the file COPYING.
 #if ! defined (octave__init_qt___h)
 #define octave__init_qt___h 1
 
 namespace QtHandles
 {
 
   bool __init__ (void);
 
-}; // namespace QtHandles
+}
 
 extern void install___init_qt___functions (void);
 
 #endif
 
diff --git a/libgui/src/octave-gui.cc b/libgui/src/octave-gui.cc
--- a/libgui/src/octave-gui.cc
+++ b/libgui/src/octave-gui.cc
@@ -61,18 +61,17 @@ along with Octave; see the file COPYING.
 // Disable all Qt messages by default.
 
 static void
 #if defined (HAVE_QT4)
 message_handler (QtMsgType, const char *)
 #else
 message_handler (QtMsgType, const QMessageLogContext &, const QString &)
 #endif
-{
-}
+{ }
 
 namespace octave
 {
   bool gui_application::start_gui_p (void) const
   {
     if (m_options.no_window_system ())
       return false;
 
diff --git a/libinterp/build-env.h b/libinterp/build-env.h
--- a/libinterp/build-env.h
+++ b/libinterp/build-env.h
@@ -165,13 +165,13 @@ namespace octave
     extern const char *XTRA_CFLAGS;
     extern const char *XTRA_CXXFLAGS;
     extern const char *YACC;
     extern const char *YFLAGS;
     extern const char *Z_CPPFLAGS;
     extern const char *Z_LDFLAGS;
     extern const char *Z_LIBS;
     extern const char *config_opts;
-  };
-};
+  }
+}
 
 #endif
 
diff --git a/libinterp/build-env.in.cc b/libinterp/build-env.in.cc
--- a/libinterp/build-env.in.cc
+++ b/libinterp/build-env.in.cc
@@ -299,11 +299,11 @@ namespace octave
 
     const char *Z_CPPFLAGS = %OCTAVE_CONF_Z_CPPFLAGS%;
 
     const char *Z_LDFLAGS = %OCTAVE_CONF_Z_LDFLAGS%;
 
     const char *Z_LIBS = %OCTAVE_CONF_Z_LIBS%;
 
     const char *config_opts = %OCTAVE_CONF_config_opts%;
-  };
-};
+  }
+}
 
diff --git a/libinterp/corefcn/jit-util.h b/libinterp/corefcn/jit-util.h
--- a/libinterp/corefcn/jit-util.h
+++ b/libinterp/corefcn/jit-util.h
@@ -40,17 +40,18 @@ along with Octave; see the file COPYING.
 // we don't want to include llvm headers here, as they require
 // __STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS be defined in the entire
 // compilation unit
 namespace llvm
 {
   class Value;
   class Module;
 #if defined (LEGACY_PASSMANAGER)
-  namespace legacy {
+  namespace legacy
+  {
     class FunctionPassManager;
     class PassManager;
   }
 #else
   class FunctionPassManager;
   class PassManager;
 #endif
   class ExecutionEngine;
