# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1518805011 -3600
#      Fri Feb 16 19:16:51 2018 +0100
# Node ID 860860e2e69e4f3b3ea88f5f119d93dd62aa26d6
# Parent  d277debe9c2f8dec411c02f63480521e077c1cf6
fix focus change between dock widgets of gui

* main-window.cc (focus_changed): immediately return if there is no new
  widget; check whether the new widget is a child of one of the dock widgets;

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -279,40 +279,49 @@ namespace octave
   void main_window::focus_command_window (void)
   {
     m_command_window->focus ();
   }
 
   // catch focus changes and determine the active dock widget
   void main_window::focus_changed (QWidget *, QWidget *new_widget)
   {
+    // If there is no new widget (e.g., when pressing <alt> and the global
+    // menu gets active, we can return immediately
+    if (! new_widget)
+      return;
+
     octave_dock_widget *dock = nullptr;
     QWidget *w_new = new_widget;  // get a copy of new focus widget
     QWidget *start = w_new;       // Save it as start of our search
     int count = 0;                // fallback to prevent endless loop
 
+    QList<octave_dock_widget *> w_list = dock_widget_list ();
+
     while (w_new && w_new != m_main_tool_bar && count < 100)
       {
-        dock = qobject_cast<octave_dock_widget *> (w_new);
-        if (dock)
-          break; // it is a QDockWidget ==> exit loop
-
-#if defined (HAVE_QSCINTILLA)
-        if (qobject_cast<octave_qscintilla *> (w_new))
+        // Go through all dock widgets and check whether the current widget
+        // widget with focus is a child of one of it
+        foreach (octave_dock_widget *w, w_list)
           {
-            dock = static_cast<octave_dock_widget *> (m_editor_window);
-            break; // it is the editor window ==> exit loop
+            if (w->isAncestorOf (w_new))
+              dock = w;
           }
-#endif
-
+
+        if (dock)
+          break;
+
+        // If not yet found (in case w_new is not a childs of its dock widget),
+        // test next widget in the focus chain
         w_new = qobject_cast<QWidget *> (w_new->previousInFocusChain ());
+
+        // Measures preventing an endless loop
         if (w_new == start)
-          break; // we have arrived where we began ==> exit loop
-
-        count++;
+          break;  // We have arrived where we began ==> exit loop
+        count++;  // Limited number of trials
       }
 
     // editor needs extra handling
     octave_dock_widget *edit_dock_widget
       = static_cast<octave_dock_widget *> (m_editor_window);
     // if new dock has focus, emit signal and store active focus
     // except editor changes to a dialog (dock=0)
     if ((dock || m_active_dock != edit_dock_widget) && (dock != m_active_dock))
