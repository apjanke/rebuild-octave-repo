# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1318273728 14400
#      Mon Oct 10 15:08:48 2011 -0400
# Node ID d590d9df5596caef2b1d74f7bcc3f52ecc98cadd
# Parent  583940a28bfd1cd6ce3dec5a6f06de8ff8ea02a8
regexprep: only return cell array if first arg is cell array

* regexp.cc (Fregexprep): Only return cell array if first argument
is originally a cell array.

diff --git a/src/DLD-FUNCTIONS/regexp.cc b/src/DLD-FUNCTIONS/regexp.cc
--- a/src/DLD-FUNCTIONS/regexp.cc
+++ b/src/DLD-FUNCTIONS/regexp.cc
@@ -1698,17 +1698,18 @@ This option is present for compatibility
 
               if (error_state)
                 break;
 
               ret(i) = new_args(0);
             }
 
           if (!error_state)
-            retval = octave_value (ret);
+            retval = args(0).is_cell ()
+              ? octave_value (ret) : octave_value (ret(0));
         }
     }
   else
     retval = octregexprep (args, "regexprep");
 
   return retval;
 }
 
@@ -1754,17 +1755,17 @@ This option is present for compatibility
 
 ## End conditions on replacement
 %!assert(regexprep("abc","(b)",".$1"),"a.bc");
 %!assert(regexprep("abc","(b)","$1"),"abc");
 %!assert(regexprep("abc","(b)","$1."),"ab.c");
 %!assert(regexprep("abc","(b)","$1.."),"ab..c");
 
 ## Test cell array arguments
-%!assert(regexprep("abc",{"b","a"},"?"),{"??c"})
+%!assert(regexprep("abc",{"b","a"},"?"),"??c")
 %!assert(regexprep({"abc","cba"},"b","?"),{"a?c","c?a"})
 %!assert(regexprep({"abc","cba"},{"b","a"},{"?","!"}),{"!?c","c?!"})
 
 # Nasty lookbehind expression
 %!test
 %! assert(regexprep('x^(-1)+y(-1)+z(-1)=0','(?<=[a-z]+)\(\-[1-9]*\)','_minus1'),'x^(-1)+y_minus1+z_minus1=0')
 
 */
