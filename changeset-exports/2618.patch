# HG changeset patch
# User jwe
# Date 853989389 0
#      Thu Jan 23 03:16:29 1997 +0000
# Node ID aa667ac18d12ba37bdf96ec8a5e9ae4d7e35a043
# Parent  a27986cc41774c23e8bec3970eb1c32fa7cd4f4e
[project @ 1997-01-23 03:16:28 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+Wed Jan 22 20:54:12 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* input.cc (gnu_readline): If not using readline, flush
+	rl_outstream after printing prompt.
+	(octave_gets): Also call flush_octave_stdout() if
+	forced_interactive, not just if interactive.
+	(do_input_echo): If forced_interactive, only echo prompt and
+	command line if also reading a script file.
+
 Tue Jan 21 23:02:34 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* SLList.h: Include "BaseSLList.h", not <BaseSLList.h>.
 
 Mon Jan 20 11:11:12 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l (token_stack): Don't declare static.
 	* pt-plot.cc (tmp_files): Likewise.
diff --git a/src/input.cc b/src/input.cc
--- a/src/input.cc
+++ b/src/input.cc
@@ -382,17 +382,17 @@ decode_prompt_string (const string& s)
   return result;
 }
 
 static void
 do_input_echo (const string& input_string)
 {
   int do_echo = reading_script_file ?
     (Vecho_executing_commands & ECHO_SCRIPTS)
-      : (Vecho_executing_commands & ECHO_CMD_LINE);
+      : (Vecho_executing_commands & ECHO_CMD_LINE) && ! forced_interactive;
 
   if (do_echo)
     {
       if (forced_interactive)
 	{
 	  if (promptflag > 0)
 	    octave_stdout << decode_prompt_string (Vps1);
 	  else
@@ -425,17 +425,20 @@ gnu_readline (const char *s, bool force_
 	  retval = (char *) malloc (2);
 	  retval[0] = '\n';
 	  retval[1] = '\0';
 	}
     }
   else
     {
       if (s && *s && (interactive || forced_interactive))
-	fprintf (rl_outstream, s);
+	{
+	  fprintf (rl_outstream, s);
+	  fflush (rl_outstream);
+	}
 
       FILE *curr_stream = rl_instream;
       if (reading_fcn_file || reading_script_file)
 	curr_stream = ff_instream;
 
       int grow_size = 1024;
       int max_size = grow_size;
 
@@ -488,21 +491,19 @@ octave_gets (void)
   if ((interactive || forced_interactive)
       && (! (reading_fcn_file || reading_script_file)))
     {
       const char *ps = (promptflag > 0) ? Vps1.c_str () :
 	Vps2.c_str ();
 
       string prompt = decode_prompt_string (ps);
 
-      if (interactive)
-	{
-	  pipe_handler_error_count = 0;
-	  flush_octave_stdout ();
-	}
+      pipe_handler_error_count = 0;
+
+      flush_octave_stdout ();
 
       octave_diary << prompt;
 
       retval = gnu_readline (prompt.c_str ());
     }
   else
     retval = gnu_readline ("");
 
