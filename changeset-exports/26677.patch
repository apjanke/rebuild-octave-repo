# HG changeset patch
# User Rik <rik@octave.org>
# Date 1549316835 28800
#      Mon Feb 04 13:47:15 2019 -0800
# Node ID 33f79d94f21f8d1d8b6dcfd1420c952f2e3f77b0
# Parent  adc31fed37f5779c9b600d6c641945df98fbde80
Create any BIST temporary files in writable temporary directory (bug #55565).

* help.cc: Call tempname with DIR argument of P_tmpdir to generate a name
in temporary directory.  Save PATH variable before unwind_protect.  Use
addpath() to put P_tmpdir on PATH variable for length of BIST test.  Use
path() in unwind_protect_cleanup to restore the PATH variable.

* variables.cc (Fexist): Call tempname() without argument so that name is
created in P_tmpdir() directory.

diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -836,31 +836,34 @@ the return value is an empty cell array.
         retval(i++) = octave_value (new octave_fcn_handle (nm_fcn->second, nm));
     }
 
   return ovl (retval);
 }
 
 /*
 %!test
-%! f = tempname (".", "oct_");
-%! fcn_name = f(3:end);
+%! f = tempname (P_tmpdir, "oct_");
+%! [~, fcn_name] = fileparts (f);
 %! f = [f ".m"];
+%! save_path = path ();
 %! unwind_protect
+%!   addpath (P_tmpdir);
 %!   fid = fopen (f, "w+");
 %!   fprintf (fid, "function z = %s\n z = localfunctions; end\n", fcn_name);
 %!   fprintf (fid, "function z = b(x)\n z = x+1; end\n");
 %!   fprintf (fid, "function z = c(x)\n z = 2*x; end\n");
 %!   fclose (fid);
 %!   d = eval (fcn_name);
 %!   assert (size (d), [2, 1]);
 %!   assert (d{1} (3), 4);
 %!   assert (d{2} (3), 6);
 %! unwind_protect_cleanup
 %!   unlink (f);
+%!   path (save_path);
 %! end_unwind_protect
 */
 
 DEFMETHOD (__which__, interp, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn {} {} __which__ (@var{name}, @dots{})
 Undocumented internal function.
 @end deftypefn */)
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -467,23 +467,23 @@ Octave trusts .oct/.mex files instead of
 ## Don't search path for rooted relative filenames
 %!assert (exist ("plot.m", "file"), 2)
 %!assert (exist ("./plot.m", "file"), 0)
 %!assert (exist ("./%nonexistentfile%", "file"), 0)
 %!assert (exist ("%nonexistentfile%", "file"), 0)
 
 ## Don't search path for absolute filenames
 %!test
-%! tname = tempname (pwd ());
+%! tname = tempname ();
 %! unwind_protect
 %!   ## open/close file to create it, equivalent of touch
 %!   fid = fopen (tname, "w");
 %!   fclose (fid);
 %!   [~, fname] = fileparts (tname);
-%!   assert (exist (fullfile (pwd (), fname), "file"), 2);
+%!   assert (exist (fullfile (P_tmpdir (), fname), "file"), 2);
 %! unwind_protect_cleanup
 %!   unlink (tname);
 %! end_unwind_protect
 %! assert (exist (fullfile (pwd (), "%nonexistentfile%"), "file"), 0);
 
 %!testif HAVE_CHOLMOD
 %! assert (exist ("chol"), 3);
 %! assert (exist ("chol.oct"), 3);
