# HG changeset patch
# User jwe
# Date 1172081947 0
#      Wed Feb 21 18:19:07 2007 +0000
# Node ID de4ae354c831910b3dd68115bd091310ca41cd38
# Parent  877b80a8dee7db26f49c32cde25098ad0cc54ef6
[project @ 2007-02-21 18:19:07 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2007-02-21  John W. Eaton  <jwe@octave.org>
+
+	* configure.in: Also warn about missing functionality for
+	--without-glpk or --without-curl options.  Print curl library
+	warning in summary.
+
 2007-02-20  Rafael Laboissiere  <rafael@debian.org>
 
 	* configure.in: Check for versions of GLPK prior to 4.15 and set
 	the GLPK_PRE_4_15 macro accordingly.
 
 2007-02-16  John W. Eaton  <jwe@octave.org>
 
 	* mkoctfile.in: Use OCTAVE_PREFIX, not OCTAVE_CONF_PREFIX, in sed
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.556 $)
+AC_REVISION($Revision: 1.557 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -581,16 +581,18 @@ AC_ARG_WITH(glpk,
   [AS_HELP_STRING([--without-glpk], [don't use GLPK])],
   with_glpk=$withval, with_glpk=yes)
 
 glpk_lib=
 if test "$with_glpk" = yes; then
   glpk_lib="glpk"
 elif test "$with_glpk" != no; then
   glpk_lib="$with_glpk"
+else
+  glpk_missing=yes
 fi
 
 GLPK_LIBS=
 if test -n "$glpk_lib"; then
   AC_CHECK_LIB($glpk_lib, glp_lpx_simplex, [
     GLPK_LIBS="-l$glpk_lib"
     AC_DEFINE(GLPK_PRE_4_15, 1, [Define if GLPK version is less than 4.15.])], [
     AC_CHECK_LIB($glpk_lib, _glp_lpx_simplex, [GLPK_LIBS="-l$glpk_lib"], [])])
@@ -613,16 +615,18 @@ AC_ARG_WITH(curl,
   [AS_HELP_STRING([--without-curl], [don't use CURL])],
   with_curl=$withval, with_curl=yes)
 
 curl_lib=
 if test "$with_curl" = yes; then
   curl_lib="curl"
 elif test "$with_curl" != no; then
   curl_lib="$with_curl"
+else
+  curl_missing=yes
 fi
 
 CURL_LIBS=
 if test -n "$curl_lib"; then
   AC_CHECK_LIB($curl_lib, curl_easy_escape, [
     AC_CHECK_HEADERS(curl/curl.h, [
       CURL_LIBS="-l$curl_lib"
       AC_DEFINE(HAVE_CURL, 1, [Define if CURL is available.])], [
@@ -2158,16 +2162,21 @@ if test -n "$warn_cxsparse"; then
   warn_msg_printed=true
 fi
 
 if test -n "$warn_arpack"; then
   AC_MSG_WARN($warn_arpack)
   warn_msg_printed=true
 fi
 
+if test -n "$warn_curl"; then
+  AC_MSG_WARN($warn_curl)
+  warn_msg_printed=true
+fi
+
 if test -n "$warn_fftw"; then
   AC_MSG_WARN($warn_fftw)
   warn_msg_printed=true
 fi
 
 if test -n "$warn_glpk"; then
   AC_MSG_WARN($warn_glpk)
   warn_msg_printed=true
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2007-02-21  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/urlwrite.cc (Furlwrite, Furlread): Return error
+	code and message instead of throwing error if functionality is
+	missing.
+
+	* oct-obj.h (octave_value_list::splice): Set default for
+	replacement list argument.
+
 2007-02-20  Rafael Laboissiere  <rafael@laboissiere.net>
 
 	* DLD-FUNCTIONS/__glpk__.cc: Adapt code for changes in the GLPK
 	API for version 4.15 or later.
 
 2007-02-20  John W. Eaton  <jwe@octave.org>
 
 	* mxarray.h (mxArray::get_scalar): New function.
diff --git a/src/DLD-FUNCTIONS/urlwrite.cc b/src/DLD-FUNCTIONS/urlwrite.cc
--- a/src/DLD-FUNCTIONS/urlwrite.cc
+++ b/src/DLD-FUNCTIONS/urlwrite.cc
@@ -309,17 +309,19 @@ urlwrite ('http://www.google.com/search'
       // return empty string if no error occured
       retval(2) = std::string (res == CURLE_OK ? "" : curl_easy_strerror (res));
     }
 
   if (nargout < 2 & res != CURLE_OK)
     error ("urlwrite: curl: %s", curl_easy_strerror (res));
 
 #else
-  error ("urlwrite: not available in this version of Octave");
+  retval(2) = "urlwrite: not available in this version of Octave";
+  retval(1) = 0;
+  retval(0) = "";
 #endif
 
   return retval;
 }
 
 DEFUN_DLD (urlread, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{s} =} urlread(@var{url})\n\
@@ -424,13 +426,15 @@ s = urlread ('http://www.google.com/sear
       // return empty string if no error occured
       retval(2) = std::string (res == CURLE_OK ? "" : curl_easy_strerror (res));
     }
 
   if (nargout < 2 & res != CURLE_OK)
     error ("urlread: curl: %s", curl_easy_strerror (res));
 
 #else
-  error ("urlread: not available in this version of Octave");
+  retval(2) = "urlread: not available in this version of Octave";
+  retval(1) = 0;
+  retval(0) = "";
 #endif
 
   return retval;
 }
diff --git a/src/oct-obj.h b/src/oct-obj.h
--- a/src/oct-obj.h
+++ b/src/oct-obj.h
@@ -102,18 +102,19 @@ public:
   octave_value_list& prepend (const octave_value& val);
 
   octave_value_list& append (const octave_value& val);
 
   octave_value_list& append (const octave_value_list& lst);
 
   octave_value_list& reverse (void);
 
-  octave_value_list splice (octave_idx_type offset, octave_idx_type length,
-			    const octave_value_list& lst) const;
+  octave_value_list
+  splice (octave_idx_type offset, octave_idx_type len,
+	  const octave_value_list& lst = octave_value_list ()) const;
 
   bool all_strings_p (void) const;
 
   bool has_magic_colon (void) const;
 
   string_vector make_argv (const std::string&) const;
 
   void stash_name_tags (const string_vector& nm) { names = nm; }
