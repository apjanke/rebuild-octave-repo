# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1319819220 25200
#      Fri Oct 28 09:27:00 2011 -0700
# Node ID b0bb7bd9e0c898a4e23dfe8b63e1e12ae08f1c30
# Parent  5f96b91b4e0c63dbf819ff7646f02c0f1c403d6e
unmkpp.m: Add functional test.  Improve input validation.

* unmkpp.m: Add functional test.  Improve input validation.

diff --git a/scripts/polynomial/unmkpp.m b/scripts/polynomial/unmkpp.m
--- a/scripts/polynomial/unmkpp.m
+++ b/scripts/polynomial/unmkpp.m
@@ -42,21 +42,42 @@
 ## @item @var{d}
 ## Number of polynomials defined for each interval.
 ## @end table
 ##
 ## @seealso{mkpp, ppval, spline}
 ## @end deftypefn
 
 function [x, P, n, k, d] = unmkpp (pp)
-  if (nargin == 0)
+
+  if (nargin != 1)
     print_usage ();
   endif
-  if (! (isstruct (pp) && strcmp (pp.form, "pp")))
-    error ("unmkpp: expecting piecewise polynomial structure");
+  if (! (isstruct (pp) && isfield (pp, "form") && strcmp (pp.form, "pp")))
+    error ("unmkpp: PP must be a piecewise polynomial structure");
   endif
   x = pp.breaks;
   P = pp.coefs;
   n = pp.pieces;
   k = pp.order;
   d = pp.dim;
 
 endfunction
+
+
+%!test
+%! b = 1:3;
+%! c = 1:24;
+%! pp = mkpp (b,c);
+%! [x, P, n, k, d] = unmkpp (pp);
+%! assert (x, b);
+%! assert (P, reshape (c, [2 12]));
+%! assert (n, 2);
+%! assert (k, 12);
+%! assert (d, 1);
+
+%% Test input validation
+%!error unmkpp ()
+%!error unmkpp (1,2)
+%!error <piecewise polynomial structure> unmkpp (1)
+%!error <piecewise polynomial structure> unmkpp (struct ("field1", "pp"))
+%!error <piecewise polynomial structure> unmkpp (struct ("form", "not_a_pp"))
+
