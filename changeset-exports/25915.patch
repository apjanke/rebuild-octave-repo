# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1538595019 -7200
#      Wed Oct 03 21:30:19 2018 +0200
# Node ID 20e294a607afaa9d58e1711a13051a9209929121
# Parent  b33d4fbce33e5c43359399f64f1c5b8ff90718f8
fix misleading names of variables in octave_cmd_buildin

* octave-cmd.cc (octave_cmd_builtin::execute) rename m_nargin into m_nargout;

* octave-cmd.h (octave_cmd_builtin): rename m_nargin into m_nargout,
 rename nargin into nargout in parameter list of ctor

diff --git a/libgui/src/octave-cmd.cc b/libgui/src/octave-cmd.cc
--- a/libgui/src/octave-cmd.cc
+++ b/libgui/src/octave-cmd.cc
@@ -73,19 +73,19 @@ namespace octave
     command_editor::redisplay ();
 
     command_editor::accept_line ();
   }
 
   void octave_cmd_builtin::execute (interpreter& interp)
   {
     if (m_callback_fi)
-      m_callback_fi (interp, m_argin, m_nargin);
+      m_callback_fi (interp, m_argin, m_nargout);
     else if (m_callback_f)
-      m_callback_f (m_argin, m_nargin);
+      m_callback_f (m_argin, m_nargout);
 
     switch (m_update)
       {
         case CMD_UPD_WORKSPACE:
           {
             symbol_scope scope
                 = __get_current_scope__ ("octave_cmd_builtin::execute");
             if (scope)
diff --git a/libgui/src/octave-cmd.h b/libgui/src/octave-cmd.h
--- a/libgui/src/octave-cmd.h
+++ b/libgui/src/octave-cmd.h
@@ -86,42 +86,42 @@ namespace octave
       CMD_UPD_NO        = 0,
       CMD_UPD_WORKSPACE = 1
     };
 
     // C'tor for Fxxx requiring the interpreter
     octave_cmd_builtin (
           octave_value_list (*Ff) (octave::interpreter&,
                                    const octave_value_list&, int),
-          octave_value_list argin = ovl (), int nargin = 0,
+          octave_value_list argin = ovl (), int nargout = 0,
           cmd_upd update = CMD_UPD_NO, octave_qt_link *oct_qt_link = nullptr)
       : octave_cmd (), m_callback_fi (Ff), m_callback_f (nullptr),
-        m_argin (argin), m_nargin (nargin), m_update (update),
+        m_argin (argin), m_nargout (nargout), m_update (update),
         m_octave_qt_link (oct_qt_link)
     { };
 
     // C'tor for Fxxx not requiring the interpreter
     octave_cmd_builtin (
           octave_value_list (*Ff) (const octave_value_list&, int),
-          octave_value_list argin = ovl (), int nargin = 0,
+          octave_value_list argin = ovl (), int nargout = 0,
           cmd_upd update = CMD_UPD_NO, octave_qt_link *oct_qt_link = nullptr)
       : octave_cmd (), m_callback_fi (nullptr), m_callback_f (Ff),
-        m_argin (argin), m_nargin (nargin), m_update (update),
+        m_argin (argin), m_nargout (nargout), m_update (update),
         m_octave_qt_link (oct_qt_link)
     { };
 
     void execute (interpreter& interp);
 
   protected:
 
     octave_value_list (*m_callback_fi) (octave::interpreter&,
                                         const octave_value_list&, int);
     octave_value_list (*m_callback_f) (const octave_value_list&, int);
     octave_value_list m_argin;
-    int m_nargin;
+    int m_nargout;
     cmd_upd m_update;
     octave_qt_link *m_octave_qt_link;
   };
 
   class octave_cmd_debug : public octave_cmd_exec
   {
   public:
 
