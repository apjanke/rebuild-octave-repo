# HG changeset patch
# User jwe
# Date 838204390 0
#      Wed Jul 24 10:33:10 1996 +0000
# Node ID 6ee55c0f25a9c99787e84c8fb47fc8965154ddb6
# Parent  599f8f054840e6a4f8e14c897bd3569934957932
[project @ 1996-07-24 10:33:09 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,16 +1,23 @@
+Wed Jul 24 05:08:07 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* file-io.cc (symbols_of_file_io): Redefine values of SEEK_SET,
+	SEEK_CUR, and SEEK_END for Matlab compatibility.
+	* oct-stream.cc (seek): Check for compatible values of ORIGIN arg.
+	Also handle "bof", "cof", and "eof".
+
 Fri Jul 19 15:24:36 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-const.cc: When creating octave_value_reps from ComplexMatrix
 	values, check to see if all the elements are actually real.
 
 Tue Jul 16 10:53:42 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
-	* input.cc (decode_prompt_string): Swap meanings of \h anbd \H.
+	* input.cc (decode_prompt_string): Swap meanings of \h and \H.
 
 Mon Jul 15 16:01:51 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* toplev.cc (run_command_and_return_output): Renamed from do_system.
 	(Fsystem): Make `system ("emacs")' work as one would expect.
 
 Sun Jul 14 17:34:33 1996  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -431,30 +431,36 @@ DEFUN (frewind, args, ,
     print_usage ("frewind");
 
   return retval;
 }
 
 DEFUN (fseek, args, ,
   "fseek (FILENUM, OFFSET [, ORIGIN])\n\
 \n\
-set file position for reading or writing")
+set file position for reading or writing.\n\
+\n\
+ORIGIN may be one of:\n\
+\n\
+  SEEK_SET : offset is relative to the beginning of the file (default)\n\
+  SEEK_CUR : offset is relative to the current position\n\
+  SEEK_END : offset is relative to the end of the file")
 {
   double retval = -1.0;
 
   int nargin = args.length ();
 
   if (nargin == 2 || nargin == 3)
     {
       octave_stream *os = octave_stream_list::lookup (args(0));
 
       if (os)
 	{
 	  octave_value origin_arg = (nargin == 3)
-	    ? args(2) : octave_value (0.0);
+	    ? args(2) : octave_value (-1.0);
 
 	  retval = (double) os->seek (args(1), origin_arg);
 	}
       else
 	::error ("fseek: invalid file id");
     }
   else
     print_usage ("fseek");
@@ -1315,23 +1321,26 @@ printed.")
     retval(0) = (double) status;
 
   return retval;
 }
 
 void
 symbols_of_file_io (void)
 {
-  DEFCONST (SEEK_SET, 0.0, 0, 0,
+  // NOTE: the values of SEEK_SET, SEEK_CUR, and SEEK_END have to be
+  // this way for Matlab compatibility.
+
+  DEFCONST (SEEK_SET, -1.0, 0, 0,
     "used with fseek to position file relative to the beginning");
 
-  DEFCONST (SEEK_CUR, 1.0, 0, 0,
+  DEFCONST (SEEK_CUR, 0.0, 0, 0,
     "used with fseek to position file relative to the current position");
 
-  DEFCONST (SEEK_END, 2.0, 0, 0,
+  DEFCONST (SEEK_END, 1.0, 0, 0,
     "used with fseek to position file relative to the end");
 
   DEFCONSTX ("stdin", SBV_stdin, 0.0, 0, 0,
     "file number of the standard input stream");
 
   DEFCONSTX ("stdout", SBV_stdout, 1.0, 0, 0,
     "file number of the standard output stream");
 
diff --git a/src/oct-stream.cc b/src/oct-stream.cc
--- a/src/oct-stream.cc
+++ b/src/oct-stream.cc
@@ -2020,37 +2020,47 @@ octave_stream::seek (const octave_value&
   int retval = -1;
 
   int conv_err = 0;
 
   int xoffset = convert_to_valid_int (tc_offset, conv_err);
 
   if (! conv_err)
     {
-      int xorigin = convert_to_valid_int (tc_origin, conv_err);
-
       ios::seek_dir origin = ios::beg;
 
-      // XXX FIXME XXX -- matlab allows origin to be:
-      //
-      //  "bof" or -1  ==  ios::beg
-      //  "cof" or  0  ==  ios::cur
-      //  "eof" or  1  ==  ios::end
-
-      if (! conv_err)
+      if (tc_origin.is_string ())
 	{
-	  if (xorigin == 0)
+	  string xorigin = tc_origin.string_value ();
+
+	  if (xorigin == "bof")
 	    origin = ios::beg;
-	  else if (xorigin == 1)
+	  else if (xorigin == "cof")
 	    origin = ios::cur;
-	  else if (xorigin == 2)
+	  else if (xorigin == "eof")
 	    origin = ios::end;
 	  else
 	    conv_err = -1;
 	}
+      else
+	{
+	  int xorigin = convert_to_valid_int (tc_origin, conv_err);
+
+	  if (! conv_err)
+	    {
+	      if (xorigin == -1)
+		origin = ios::beg;
+	      else if (xorigin == 0)
+		origin = ios::cur;
+	      else if (xorigin == 1)
+		origin = ios::end;
+	      else
+		conv_err = -1;
+	    }
+	}
 
       if (! conv_err)
 	retval = seek (xoffset, origin);
       else
 	error ("fseek: invalid value for origin");
     }
   else
     error ("fseek: invalid value for offset");
