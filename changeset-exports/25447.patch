# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1528744285 14400
#      Mon Jun 11 15:11:25 2018 -0400
# Node ID fa66d81d0956b2176b3f254550069bac14eda02b
# Parent  1eedd589fb3e3f08e56bc0ddbaa059735a235ecd
don't link .oct files with liboctinterp or liboctave (bug #53627)

* config-module.awk: Omit liboctave and liboctinterp from link commands.
* libinterp/module.mk (DLD_LIBOCTINTERP_LIBADD): Delete variable.
* mkoctfile.in.cc (initialize): Delete DEFAULT_LFLAGS variable.
(get_variable): Set default value for defval to "".
(main): Omit liboctave and liboctinterp from link commands.

diff --git a/libinterp/dldfcn/config-module.awk b/libinterp/dldfcn/config-module.awk
--- a/libinterp/dldfcn/config-module.awk
+++ b/libinterp/dldfcn/config-module.awk
@@ -75,20 +75,19 @@ BEGIN {
       {
         printf ("%%canon_reldir%%_%s_la_CPPFLAGS = $(libinterp_liboctinterp_la_CPPFLAGS) %s\n",
                 basename, cppflags[i]);
       }
     printf ("%%canon_reldir%%_%s_la_CFLAGS = $(libinterp_liboctinterp_la_CFLAGS) %s\n",
             basename, cppflags[i]);
     printf ("%%canon_reldir%%_%s_la_CXXFLAGS = $(libinterp_liboctinterp_la_CXXFLAGS) %s\n",
             basename, cppflags[i]);
-    printf ("%%canon_reldir%%_%s_la_LDFLAGS = -avoid-version -module $(NO_UNDEFINED_LDFLAG) %s $(OCT_LINK_OPTS) $(WARN_LDFLAGS)\n",
+    printf ("%%canon_reldir%%_%s_la_LDFLAGS = -avoid-version -module $(NO_UNDEFINED_LDFLAG) %s $(WARN_LDFLAGS)\n",
             basename, ldflags[i]);
-    printf ("%%canon_reldir%%_%s_la_LIBADD = $(DLD_LIBOCTINTERP_LIBADD) liboctave/liboctave.la %s $(OCT_LINK_DEPS)\n",
-            basename, libraries[i]);
+    printf ("%%canon_reldir%%_%s_la_LIBADD = %s\n", basename, libraries[i]);
   }
 
   print "";
   print "$(srcdir)/%reldir%/module.mk: $(srcdir)/%reldir%/config-module.sh $(srcdir)/%reldir%/config-module.awk $(srcdir)/%reldir%/module-files";
   print "\t$(AM_V_GEN)$(SHELL) $(srcdir)/%reldir%/config-module.sh $(srcdir)";
   print "";
   print "libinterp_MAINTAINERCLEANFILES += $(srcdir)/%reldir%/module.mk";
 }
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -119,21 +119,19 @@ include %reldir%/parse-tree/module.mk
 include %reldir%/octave-value/module.mk
 include %reldir%/operators/module.mk
 include %reldir%/template-inst/module.mk
 include %reldir%/corefcn/module.mk
 include %reldir%/dldfcn/module.mk
 
 if AMCOND_ENABLE_DYNAMIC_LINKING
   OCT_FILES = $(DLDFCN_LIBS:.la=.oct)
-  DLD_LIBOCTINTERP_LIBADD = %reldir%/liboctinterp.la
   LIBINTERP_DLDFCN_LIBADD =
 else
   OCT_FILES =
-  DLD_LIBOCTINTERP_LIBADD =
   LIBINTERP_DLDFCN_LIBADD = $(DLDFCN_LIBS)
 endif
 
 %canon_reldir%_liboctinterp_la_SOURCES = \
   %reldir%/octave.cc \
   $(LIBINTERP_OPERATORS_SRC) \
   $(TEMPLATE_INST_SRC)
 
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -101,17 +101,17 @@ get_line (FILE *fp)
 
       buf << static_cast<char> (c);
     }
 
   return buf.str ();
 }
 
 static std::string
-get_variable (const char *name, const std::string& defval)
+get_variable (const char *name, const std::string& defval = "")
 {
   const char *val = getenv (name);
 
   if (val && *val)
     return std::string (val);
   else
     return defval;
 }
@@ -157,21 +157,16 @@ initialize (void)
   std::string DEFAULT_INCFLAGS
     = "-I" + quote_path (vars["OCTINCLUDEDIR"] + "/..")
       + " -I" + quote_path (vars["OCTINCLUDEDIR"]);
 #endif
 
   if (vars["INCLUDEDIR"] != "/usr/include")
     DEFAULT_INCFLAGS += " -I" + quote_path (vars["INCLUDEDIR"]);
 
-  std::string DEFAULT_LFLAGS = "-L" + quote_path (vars["OCTLIBDIR"]);
-
-  if (vars["LIBDIR"] != "/usr/lib")
-    DEFAULT_LFLAGS += " -L" + quote_path (vars["LIBDIR"]);
-
   vars["CPPFLAGS"] = get_variable ("CPPFLAGS", %OCTAVE_CONF_CPPFLAGS%);
 
   vars["INCFLAGS"] = get_variable ("INCFLAGS", DEFAULT_INCFLAGS);
 
   vars["F77"] = get_variable ("F77", %OCTAVE_CONF_MKOCTFILE_F77%);
 
   vars["FFLAGS"] = get_variable ("FFLAGS", %OCTAVE_CONF_FFLAGS%);
 
@@ -251,17 +246,17 @@ initialize (void)
 
   vars["LD_CXX"] = get_variable ("LD_CXX", %OCTAVE_CONF_MKOCTFILE_LD_CXX%);
 
   vars["LDFLAGS"] = get_variable ("LDFLAGS", %OCTAVE_CONF_LDFLAGS%);
 
   vars["LD_STATIC_FLAG"] = get_variable ("LD_STATIC_FLAG",
                                          %OCTAVE_CONF_LD_STATIC_FLAG%);
 
-  vars["LFLAGS"] = get_variable ("LFLAGS", DEFAULT_LFLAGS);
+  vars["LFLAGS"] = get_variable ("LFLAGS");
 
   vars["F77_INTEGER8_FLAG"] = get_variable ("F77_INTEGER8_FLAG",
                                             %OCTAVE_CONF_F77_INTEGER_8_FLAG%);
   vars["ALL_FFLAGS"] = vars["FFLAGS"] + ' ' + vars["F77_INTEGER8_FLAG"];
 
   vars["ALL_CFLAGS"]
     = vars["INCFLAGS"] + ' ' + vars["XTRA_CFLAGS"] + ' ' + vars["CFLAGS"];
 
@@ -872,17 +867,17 @@ main (int argc, char **argv)
         {
           if (! vars["LD_CXX"].empty ())
             {
               std::string cmd
                 = (vars["LD_CXX"] + ' ' + vars["CPPFLAGS"] + ' '
                    + vars["ALL_CXXFLAGS"] + ' ' + vars["RDYNAMIC_FLAG"] + ' '
                    + vars["ALL_LDFLAGS"] + ' ' + pass_on_options + ' '
                    + output_option + ' ' + objfiles + ' ' + libfiles + ' '
-                   + ldflags + ' ' + vars["LFLAGS"] + " -loctinterp -loctave "
+                   + ldflags + ' ' + vars["LFLAGS"] + ' '
                    + vars["OCTAVE_LINK_OPTS"] + ' ' + vars["OCTAVE_LINK_DEPS"]);
 
               int status = run_command (cmd, printonly);
 
               if (status)
                 return status;
             }
           else
@@ -894,17 +889,17 @@ main (int argc, char **argv)
             }
         }
       else
         {
           std::string cmd
             = (vars["DL_LD"] + ' ' + vars["ALL_CXXFLAGS"] + ' '
                + vars["DL_LDFLAGS"] + ' ' + pass_on_options
                + " -o " + octfile + ' ' + objfiles + ' ' + libfiles + ' '
-               + ldflags + ' ' + vars["LFLAGS"] + " -loctinterp -loctave "
+               + ldflags + ' ' + vars["LFLAGS"] + ' '
                + vars["OCT_LINK_OPTS"] + ' ' + vars["OCT_LINK_DEPS"]);
 
           int status = run_command (cmd, printonly);
 
           if (status)
             return status;
         }
 
