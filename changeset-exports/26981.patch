# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1553615311 0
#      Tue Mar 26 15:48:31 2019 +0000
# Node ID 12532d3926934cfbb2bcab3438d3988d1ac65e27
# Parent  4274f6962e6b14070784dce0c3ef172a166fda09
error if continue is used outside of a for loop (bug #55995)

* oct-parse.yy (jump_command): Handle CONTINUE the same way as BREAK.
(base_parser::make_continue_command): Error if "continue" is not
inside a loop command.

diff --git a/libinterp/parse-tree/oct-parse.yy b/libinterp/parse-tree/oct-parse.yy
--- a/libinterp/parse-tree/oct-parse.yy
+++ b/libinterp/parse-tree/oct-parse.yy
@@ -1223,17 +1223,20 @@ loop_command    : WHILE stash_comment ex
 // =======
 
 jump_command    : BREAK
                   {
                     if (! ($$ = parser.make_break_command ($1)))
                       YYABORT;
                   }
                 | CONTINUE
-                  { $$ = parser.make_continue_command ($1); }
+                  {
+                    if (! ($$ = parser.make_continue_command ($1)))
+                      YYABORT;
+                  }
                 | FUNC_RET
                   { $$ = parser.make_return_command ($1); }
                 ;
 
 // ==========
 // Exceptions
 // ==========
 
@@ -2986,17 +2989,23 @@ namespace octave
   // Build a continue command.
 
   tree_command *
   base_parser::make_continue_command (token *continue_tok)
   {
     int l = continue_tok->line ();
     int c = continue_tok->column ();
 
-    return new tree_continue_command (l, c);
+    if (! m_lexer.m_looping)
+      {
+        bison_error ("continue must appear in a loop in the same file as loop command");
+        return nullptr;
+      }
+    else
+      return new tree_continue_command (l, c);
   }
 
   // Build a return command.
 
   tree_command *
   base_parser::make_return_command (token *return_tok)
   {
     int l = return_tok->line ();
