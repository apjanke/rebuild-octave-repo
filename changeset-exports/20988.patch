# HG changeset patch
# User Rik <rik@octave.org>
# Date 1451145488 28800
#      Sat Dec 26 07:58:08 2015 -0800
# Node ID 8b8d8c6c0e64e81c36d828039b8a05a44e89a242
# Parent  f99cbd86a0f9ef694967f9705fdbc878c63ffe68
Add new member function is_empty to Range type.  Use it.

* Range.h (is_empty): New function.

* ov-range.cc (is_true): Use is_empty rather than "numel () == 0".

diff --git a/libinterp/octave-value/ov-range.cc b/libinterp/octave-value/ov-range.cc
--- a/libinterp/octave-value/ov-range.cc
+++ b/libinterp/octave-value/ov-range.cc
@@ -268,17 +268,17 @@ octave_range::diag (octave_idx_type m, o
   return mat.diag (m, n);
 }
 
 bool
 octave_range::is_true (void) const
 {
   bool retval = false;
 
-  if (! range.numel () != 0)
+  if (! range.is_empty ())
     {
       // FIXME: this is a potential waste of memory.
 
       Matrix m ((range.matrix_value () . all ()) . all ());
 
       retval = (m.rows () == 1 && m.columns () == 1 && m (0, 0) != 0.0);
     }
 
diff --git a/liboctave/array/Range.h b/liboctave/array/Range.h
--- a/liboctave/array/Range.h
+++ b/liboctave/array/Range.h
@@ -95,16 +95,17 @@ public:
       }
   }
 
   double base (void) const { return rng_base; }
   double limit (void) const { return rng_limit; }
   double inc (void) const { return rng_inc; }
   GCC_ATTR_DEPRECATED octave_idx_type nelem (void) const { return numel (); }
   octave_idx_type numel (void) const { return rng_numel; }
+  bool is_empty (void) const { return numel () == 0; }
 
   bool all_elements_are_ints (void) const;
 
   Matrix matrix_value (void) const;
 
   double min (void) const;
   double max (void) const;
 
