# HG changeset patch
# User jwe
# Date 1014432532 0
#      Sat Feb 23 02:48:52 2002 +0000
# Node ID b747adc02286fffed494a897adf6539c31491d7d
# Parent  a9baa340ea5139e73116cf9be4863b6368d81aab
[project @ 2002-02-23 02:48:52 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,18 @@
 2002-02-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov-usr-fcn.cc (octave_user_function::do_multi_index_op):
+	Handle define_all_return_values after function is evaluated.
+	From Paul Kienzle <pkienzle@jazz.ncnr.nist.gov>.
+
+	* ov-scalar.cc (convert_to_str): Use octave_value (std::string)
+	constructor instead of octave_value (char *) constructor so that
+	setstr (0) will work.
+
 	* pager.cc (octave_pager_buf::sync): Set pointer to beginning
 	of buffer after calling flush_currnt_contents_to_diary.
 	(octave_diary_buf::sync): Call eback only once.
 
 2002-01-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* lex.l (.): Remove test for EOF since it is already handled
 	separately.
diff --git a/src/ov-scalar.cc b/src/ov-scalar.cc
--- a/src/ov-scalar.cc
+++ b/src/ov-scalar.cc
@@ -93,22 +93,18 @@ octave_scalar::convert_to_str (void) con
 {
   octave_value retval;
 
   if (xisnan (scalar))
     ::error ("invalid conversion from NaN to character");
   else
     {
       // XXX FIXME XXX -- warn about out of range conversions?
-
-      int i = NINT (scalar);
-      char s[2];
-      s[0] = (char) i;
-      s[1] = '\0';
-      retval = octave_value (s);
+      
+      retval = octave_value (std::string (1, char (NINT (scalar))));
     }
 
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/ov-usr-fcn.cc b/src/ov-usr-fcn.cc
--- a/src/ov-usr-fcn.cc
+++ b/src/ov-usr-fcn.cc
@@ -350,24 +350,16 @@ octave_user_function::do_multi_index_op 
     }
 
   // Force parameter list to be undefined when this function exits.
   // Doing so decrements the reference counts on the values of local
   // variables that are also named function parameters.
 
   unwind_protect::add (clear_param_list, param_list);
 
-  if (ret_list && Vdefine_all_return_values)
-    {
-      octave_value tmp = builtin_any_variable ("default_return_value");
-
-      if (tmp.is_defined ())
-	ret_list->initialize_undefined_elements (tmp);
-    }
-
   // Force return list to be undefined when this function exits.
   // Doing so decrements the reference counts on the values of local
   // variables that are also named values returned by this function.
 
   unwind_protect::add (clear_param_list, ret_list);
 
   // The following code is in a separate scope to avoid warnings from
   // G++ about `goto abort' crossing the initialization of some
@@ -406,17 +398,27 @@ octave_user_function::do_multi_index_op 
       {
 	traceback_error ();
 	goto abort;
       }
     
     // Copy return values out.
 
     if (ret_list)
-      retval = ret_list->convert_to_const_vector (vr_list);
+      {
+	if (Vdefine_all_return_values)
+	  {
+	    octave_value tmp = builtin_any_variable ("default_return_value");
+
+	    if (tmp.is_defined ())
+	      ret_list->initialize_undefined_elements (tmp);
+	  }
+
+	retval = ret_list->convert_to_const_vector (vr_list);
+      }
     else if (Vreturn_last_computed_value)
       retval(0) = last_computed_value;
   }
 
  abort:
   unwind_protect::run_frame ("func_eval");
 
   return retval;
