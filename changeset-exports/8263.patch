# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1224696523 14400
#      Wed Oct 22 13:28:43 2008 -0400
# Node ID 22c078fd926bf99a451391e1e7b660dc75d287b0
# Parent  c44db9bad841ef12d544e226784396c9a665d5e2
make fltk backend figures work again

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2008-10-22  John W. Eaton  <jwe@octave.org>
+
+	* gl-render.cc (opengl_renderer::draw): Get all children.
+
+	* DLD-FUNCTIONS/fltk_backend.cc (__fltk_redraw__):
+	Check for "root" object, not "root_figure".
+
+	* graphics.h.in (base_properties::get_all_children): New function.
+
 2008-10-22  David Bateman  <dbateman@free.fr>
 
 	* graphics.h.in (line::properties, surface::properties): Add data
 	source properties.
 
 2008-10-21  John W. Eaton  <jwe@octave.org>
 
 	* graphics.h.in (axes::properties::delete_children): Delete decl.
diff --git a/src/DLD-FUNCTIONS/fltk_backend.cc b/src/DLD-FUNCTIONS/fltk_backend.cc
--- a/src/DLD-FUNCTIONS/fltk_backend.cc
+++ b/src/DLD-FUNCTIONS/fltk_backend.cc
@@ -759,17 +759,17 @@ static double fltk_maxtime = 1e-2;
 
 static int
 __fltk_redraw__ (void)
 {
   if (backend_registered)
     {
       // we scan all figures and add those which use FLTK as a backend
       graphics_object obj = gh_manager::get_object (0);
-      if (obj && obj.isa ("root_figure"))
+      if (obj && obj.isa ("root"))
 	{
 	  base_properties& props = obj.get_properties ();
 	  Matrix children = props.get_children ();
 
 	  for (octave_idx_type n = 0; n < children.numel (); n++)
 	    {
 	      graphics_object fobj = gh_manager::get_object (children (n));
 	      if (fobj && fobj.isa ("figure"))
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -570,17 +570,17 @@ opengl_renderer::draw (const figure::pro
   if (c.length() >= 3)
     {
       glClearColor (c(0), c(1), c(2), 1);
       glClear (GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
     }
 
   // Draw children
 
-  draw (props.get_children ());
+  draw (props.get_all_children ());
 }
 
 void
 opengl_renderer::draw (const axes::properties& props)
 {
   // setup OpenGL transformation
 
   Matrix x_zlim = props.get_transform_zlim ();
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1631,16 +1631,18 @@ public:
 
   virtual void add_listener (const caseless_str&, const octave_value&,
 			     listener_mode = POSTSET);
 
   void set_tag (const octave_value& val) { tag = val; }
 
   void set_parent (const octave_value& val);
 
+  Matrix get_all_children (void) const { return children; }
+
   void set_children (const octave_value& val);
 
   void set_modified (const octave_value& val) { set___modified__ (val); }
 
   void set___modified__ (const octave_value& val) { __modified__ = val; }
 
   void reparent (const graphics_handle& new_parent) { parent = new_parent; }
 
