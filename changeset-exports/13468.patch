# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1303078480 -7200
#      Mon Apr 18 00:14:40 2011 +0200
# Node ID 519ae5ea6bd4cefd69deb6ddaa6ed46d45c49a87
# Parent  df787fd0a6e5531d62ba7b58a5cb46bddfa9c9ad
Translated Quint to German.

diff --git a/gui//Quint.pro b/gui//Quint.pro
--- a/gui//Quint.pro
+++ b/gui//Quint.pro
@@ -88,8 +88,10 @@ HEADERS += \
 
 INCFLAGS = -g3 $$system(mkoctfile -p INCFLAGS)
 LFLAGS = $$system(mkoctfile -p LFLAGS) \
          $$system(mkoctfile -p OCTAVE_LIBS) \
          $$system(mkoctfile -p LIBS)
 #LIBS    += $$LFLAGS -lutil
 QMAKE_LFLAGS += $$LFLAGS -lutil
 QMAKE_CXXFLAGS  += $$INCFLAGS
+
+TRANSLATIONS += languages/german
diff --git a/gui//src/FilesDockWidget.cpp b/gui//src/FilesDockWidget.cpp
--- a/gui//src/FilesDockWidget.cpp
+++ b/gui//src/FilesDockWidget.cpp
@@ -1,17 +1,17 @@
 #include "FilesDockWidget.h"
 
 #include <QApplication>
 #include <QFileInfo>
 
 FilesDockWidget::FilesDockWidget(QWidget *parent)
   : QDockWidget(parent) {
     setObjectName("FilesDockWidget");
-    setWindowTitle("Current Folder");
+    setWindowTitle(tr("Current Folder"));
     setWidget(new QWidget(this));
 
     // Create a toolbar
     m_navigationToolBar = new QToolBar("", widget());
     m_navigationToolBar->setAllowedAreas(Qt::TopToolBarArea);
     m_navigationToolBar->setMovable(false);
     m_navigationToolBar->setIconSize(QSize (20,20));
 
diff --git a/gui//src/HistoryDockWidget.cpp b/gui//src/HistoryDockWidget.cpp
--- a/gui//src/HistoryDockWidget.cpp
+++ b/gui//src/HistoryDockWidget.cpp
@@ -33,29 +33,29 @@ void HistoryDockWidget::handleListViewIt
 void HistoryDockWidget::construct() {
     m_historyListModel = new QStringListModel();
     m_historyListView = new QListView(this);
     m_historyListView->setModel(m_historyListModel);
     m_historyListView->setAlternatingRowColors(true);
     m_historyListView->setEditTriggers(QAbstractItemView::NoEditTriggers);
     QHBoxLayout *layout = new QHBoxLayout();
 
-    setWindowTitle("Command History");
+    setWindowTitle(tr("Command History"));
     setWidget(new QWidget());
 
     layout->addWidget(m_historyListView);
     layout->setMargin(2);
 
     widget()->setLayout(layout);
     connect(m_historyListView, SIGNAL(doubleClicked(QModelIndex)), this, SLOT(handleListViewItemDoubleClicked(QModelIndex)));
 }
 
 void HistoryDockWidget::updateHistory(string_vector historyEntries) {
     QStringList stringList = m_historyListModel->stringList();
-    for(size_t i = 0; i < historyEntries.length(); i++) {
+    for(int i = 0; i < historyEntries.length(); i++) {
         QString command(historyEntries[i].c_str());
         if(!command.startsWith("#")) {
             stringList.push_front(command);
         }
     }
     m_historyListModel->setStringList(stringList);
-    emit information("History updated.");
+    emit information(tr("History updated."));
 }
diff --git a/gui//src/MainWindow.cpp b/gui//src/MainWindow.cpp
--- a/gui//src/MainWindow.cpp
+++ b/gui//src/MainWindow.cpp
@@ -34,17 +34,17 @@ MainWindow::MainWindow(QWidget *parent)
     constructWindow();
     establishOctaveLink();
 }
 
 MainWindow::~MainWindow() {
 }
 
 void MainWindow::handleOpenFileRequest(QString fileName) {
-    reportStatusMessage("Opening file.");
+    reportStatusMessage(tr("Opening file."));
     QPixmap pixmap;
     if(pixmap.load(fileName)) {
         ImageViewerMdiSubWindow *subWindow = new ImageViewerMdiSubWindow(pixmap, this);
         m_openedFiles->addSubWindow(subWindow);
         subWindow->setWindowTitle(fileName);
         subWindow->showMaximized();
     } else {
         FileEditorMdiSubWindow *subWindow = new FileEditorMdiSubWindow(m_openedFiles);
@@ -60,25 +60,25 @@ void MainWindow::reportStatusMessage(QSt
 }
 
 void MainWindow::openWebPage(QString url) {
     m_browserWidget->load(QUrl(url));
 }
 
 void MainWindow::handleSaveWorkspaceRequest() {
     QDesktopServices desktopServices;
-    QString selectedFile = QFileDialog::getSaveFileName(this, "Save Workspace",
+    QString selectedFile = QFileDialog::getSaveFileName(this, tr("Save Workspace"),
         desktopServices.storageLocation(QDesktopServices::HomeLocation) + "/.quint/workspace");
     m_octaveTerminal->sendText(QString("save \'%1\'\n").arg(selectedFile));
     m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleLoadWorkspaceRequest() {
     QDesktopServices desktopServices;
-    QString selectedFile = QFileDialog::getOpenFileName(this, "Load Workspace",
+    QString selectedFile = QFileDialog::getOpenFileName(this, tr("Load Workspace"),
         desktopServices.storageLocation(QDesktopServices::HomeLocation) + "/.quint/workspace");
     m_octaveTerminal->sendText(QString("load \'%1\'\n").arg(selectedFile));
     m_octaveTerminal->setFocus();
 }
 
 void MainWindow::handleClearWorkspaceRequest() {
     m_octaveTerminal->sendText("clear\n");
     m_octaveTerminal->setFocus();
@@ -86,17 +86,17 @@ void MainWindow::handleClearWorkspaceReq
 
 void MainWindow::handleCommandDoubleClicked(QString command) {
     m_octaveTerminal->sendText(command);
     m_octaveTerminal->setFocus();
 }
 
 void MainWindow::closeEvent(QCloseEvent *closeEvent) {
     m_isRunning = false;
-    reportStatusMessage("Saving data and shutting down.");
+    reportStatusMessage(tr("Saving data and shutting down."));
     writeSettings();
 
     m_octaveCallbackThread->terminate();
     m_octaveCallbackThread->wait();
 
     m_octaveMainThread->terminate();
     QMainWindow::closeEvent(closeEvent);
 }
@@ -111,29 +111,29 @@ void MainWindow::writeSettings() {
     QSettings settings(m_settingsFile, QSettings::IniFormat);
     settings.setValue("MainWindow/geometry", saveGeometry());
     settings.setValue("MainWindow/windowState", saveState());
 }
 
 void MainWindow::constructWindow() {
     QStyle *style = QApplication::style();
     m_octaveTerminal = new OctaveTerminal(this);
-    m_generalPurposeToolbar = new QToolBar("Octave Toolbar", this);
+    m_generalPurposeToolbar = new QToolBar(tr("Octave Toolbar"), this);
     m_variablesDockWidget = new VariablesDockWidget(this);
     m_historyDockWidget = new HistoryDockWidget(this);
     m_filesDockWidget = new FilesDockWidget(this);
     m_openedFiles = new QMdiArea(this);
     m_statusBar = new QStatusBar(this);
     m_browserWidget = new BrowserWidget(this);
     m_serviceWidget = new BrowserWidget(this);
     m_centralTabWidget = new QTabWidget(this);
-    m_centralTabWidget->addTab(m_octaveTerminal, "Command Window");
-    m_centralTabWidget->addTab(m_openedFiles, "File Editor");
-    m_centralTabWidget->addTab(m_browserWidget, "Documentation");
-    m_centralTabWidget->addTab(m_serviceWidget, "Service");
+    m_centralTabWidget->addTab(m_octaveTerminal, tr("Command Window"));
+    m_centralTabWidget->addTab(m_openedFiles, tr("File Editor"));
+    m_centralTabWidget->addTab(m_browserWidget, tr("Documentation"));
+    m_centralTabWidget->addTab(m_serviceWidget, tr("Service"));
 
     // TODO: Add meaningfull toolbar items.
     QAction *commandAction = new QAction(style->standardIcon(QStyle::SP_CommandLink),
         "", m_generalPurposeToolbar);
     QAction *computerAction = new QAction(style->standardIcon(QStyle::SP_ComputerIcon),
         "", m_generalPurposeToolbar);
     m_generalPurposeToolbar->addAction(commandAction);
     m_generalPurposeToolbar->addAction(computerAction);
@@ -171,10 +171,10 @@ void MainWindow::establishOctaveLink() {
     int fdm, fds;
     if(openpty(&fdm, &fds, 0, 0, 0) < 0) {
         assert(0);
     }
     dup2 (fds, 0);
     dup2 (fds, 1);
     dup2 (fds, 2);
     m_octaveTerminal->openTeletype(fdm);
-    reportStatusMessage("Established link to Octave.");
+    reportStatusMessage(tr("Established link to Octave."));
 }
diff --git a/gui//src/Quint.cpp b/gui//src/Quint.cpp
--- a/gui//src/Quint.cpp
+++ b/gui//src/Quint.cpp
@@ -12,18 +12,30 @@
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #include <QtGui/QApplication>
+#include <QTranslator>
+#include <QSettings>
 #include "MainWindow.h"
 
 int main(int argc, char *argv[])
 {
-    QApplication a(argc, argv);
+    QApplication application(argc, argv);
+
+    QDesktopServices desktopServices;
+    QSettings settings(
+                desktopServices.storageLocation(QDesktopServices::HomeLocation)
+                + "/.quint/settings.ini", QSettings::IniFormat);
+
+    QTranslator translator;
+    translator.load(QString("../languages/%1.qm").arg(settings.value("application/language").toString()));
+    application.installTranslator(&translator);
+
     MainWindow w;
     w.show();
 
-    return a.exec();
+    return application.exec();
 }
diff --git a/gui//src/VariablesDockWidget.cpp b/gui//src/VariablesDockWidget.cpp
--- a/gui//src/VariablesDockWidget.cpp
+++ b/gui//src/VariablesDockWidget.cpp
@@ -7,60 +7,60 @@ VariablesDockWidget::VariablesDockWidget
     : QDockWidget(parent) {
     setObjectName("VariablesDockWidget");
     construct();
 }
 
 void VariablesDockWidget::construct() {
     m_updateSemaphore = new QSemaphore(1);
     QStringList headerLabels;
-    headerLabels << "Name" << "Type" << "Value";
+    headerLabels << tr("Name") << tr("Type") << tr("Value");
     m_variablesTreeWidget = new QTreeWidget(this);
     m_variablesTreeWidget->setHeaderHidden(false);
     m_variablesTreeWidget->setHeaderLabels(headerLabels);
     QVBoxLayout *layout = new QVBoxLayout();
 
-    setWindowTitle("Workspace");
+    setWindowTitle(tr("Workspace"));
     setWidget(new QWidget());
 
     layout->addWidget(m_variablesTreeWidget);
     QWidget *buttonBar = new QWidget(this);
     layout->addWidget(buttonBar);
 
         QHBoxLayout *buttonBarLayout = new QHBoxLayout();
-        QPushButton *saveWorkspaceButton = new QPushButton("Save", buttonBar);
-        QPushButton *loadWorkspaceButton = new QPushButton("Load", buttonBar);
-        QPushButton *clearWorkspaceButton = new QPushButton("Clear", buttonBar);
+        QPushButton *saveWorkspaceButton = new QPushButton(tr("Save"), buttonBar);
+        QPushButton *loadWorkspaceButton = new QPushButton(tr("Load"), buttonBar);
+        QPushButton *clearWorkspaceButton = new QPushButton(tr("Clear"), buttonBar);
         buttonBarLayout->addWidget(saveWorkspaceButton);
         buttonBarLayout->addWidget(loadWorkspaceButton);
         buttonBarLayout->addWidget(clearWorkspaceButton);
         buttonBarLayout->setMargin(2);
         buttonBar->setLayout(buttonBarLayout);
 
     layout->setMargin(2);
     widget()->setLayout(layout);
 
     connect(saveWorkspaceButton, SIGNAL(clicked()), this, SLOT(emitSaveWorkspace()));
     connect(loadWorkspaceButton, SIGNAL(clicked()), this, SLOT(emitLoadWorkspace()));
     connect(clearWorkspaceButton, SIGNAL(clicked()), this, SLOT(emitClearWorkspace()));
 
     QTreeWidgetItem *treeWidgetItem = new QTreeWidgetItem();
-    treeWidgetItem->setData(0, 0, QString("Local"));
+    treeWidgetItem->setData(0, 0, QString(tr("Local")));
     m_variablesTreeWidget->insertTopLevelItem(0, treeWidgetItem);
 
     treeWidgetItem = new QTreeWidgetItem();
-    treeWidgetItem->setData(0, 0, QString("Global"));
+    treeWidgetItem->setData(0, 0, QString(tr("Global")));
     m_variablesTreeWidget->insertTopLevelItem(1, treeWidgetItem);
 
     treeWidgetItem = new QTreeWidgetItem();
-    treeWidgetItem->setData(0, 0, QString("Persistent"));
+    treeWidgetItem->setData(0, 0, QString(tr("Persistent")));
     m_variablesTreeWidget->insertTopLevelItem(2, treeWidgetItem);
 
     treeWidgetItem = new QTreeWidgetItem();
-    treeWidgetItem->setData(0, 0, QString("Hidden"));
+    treeWidgetItem->setData(0, 0, QString(tr("Hidden")));
     m_variablesTreeWidget->insertTopLevelItem(3, treeWidgetItem);
 
     m_variablesTreeWidget->expandAll();
     m_variablesTreeWidget->setAlternatingRowColors(true);
     m_variablesTreeWidget->setAnimated(true);    
 }
 
 void VariablesDockWidget::updateTreeEntry(QTreeWidgetItem *treeItem, SymbolRecord symbolRecord) {
diff --git a/gui/languages/german b/gui/languages/german
new file mode 100644
--- /dev/null
+++ b/gui/languages/german
@@ -0,0 +1,175 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!DOCTYPE TS>
+<TS version="2.0" language="de_DE">
+<context>
+    <name>FilesDockWidget</name>
+    <message>
+        <location filename="../src/FilesDockWidget.cpp" line="9"/>
+        <source>Current Folder</source>
+        <translation>Aktuelles Verzeichnis</translation>
+    </message>
+</context>
+<context>
+    <name>HistoryDockWidget</name>
+    <message>
+        <location filename="../src/HistoryDockWidget.cpp" line="41"/>
+        <source>Command History</source>
+        <translation>Befehlshistorie</translation>
+    </message>
+    <message>
+        <location filename="../src/HistoryDockWidget.cpp" line="60"/>
+        <source>History updated.</source>
+        <translation>Befehlshistorie aktualisiert.</translation>
+    </message>
+</context>
+<context>
+    <name>MainWindow</name>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="42"/>
+        <source>Opening file.</source>
+        <translation>Öffne Datei.</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="68"/>
+        <source>Save Workspace</source>
+        <translation>Speichere Arbeitsumgebung</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="76"/>
+        <source>Load Workspace</source>
+        <translation>Lade Arbeitsumgebung</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="94"/>
+        <source>Saving data and shutting down.</source>
+        <translation>Speichere Daten und schließe.</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="119"/>
+        <source>Octave Toolbar</source>
+        <translation>Octave Werkzeugleiste</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="128"/>
+        <source>Command Window</source>
+        <translation>Konsolenfenster</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="129"/>
+        <source>File Editor</source>
+        <translation>Dateieditor</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="130"/>
+        <source>Documentation</source>
+        <translation>Dokumentation</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="131"/>
+        <source>Service</source>
+        <translation>Service</translation>
+    </message>
+    <message>
+        <location filename="../src/MainWindow.cpp" line="179"/>
+        <source>Established link to Octave.</source>
+        <translation>Verbindung zu Octave hergestellt.</translation>
+    </message>
+</context>
+<context>
+    <name>NumberBar</name>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="189"/>
+        <source>Stop Here</source>
+        <translation>Stoppe hier</translation>
+    </message>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="192"/>
+        <source>Current Line</source>
+        <translation>Aktuelle Zeile</translation>
+    </message>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="195"/>
+        <source>Error Line</source>
+        <translation>Fehlerzeile</translation>
+    </message>
+</context>
+<context>
+    <name>NumberedCodeEdit</name>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="387"/>
+        <source>This file name is not valid.</source>
+        <translation>Dieser Dateiname ist nicht gültig.</translation>
+    </message>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="388"/>
+        <source>Octave doesn&apos;t understand this file name:
+</source>
+        <translation>Octave versteht diesen Dateityp nicht:</translation>
+    </message>
+    <message>
+        <location filename="../src/NumberedCodeEdit.cpp" line="388"/>
+        <source>
+Please, change it.
+ Do you want to save your changes?</source>
+        <translation>Bitte ändern Sie dies. Möchten Sie Ihre Änderungen sichern?</translation>
+    </message>
+</context>
+<context>
+    <name>VariablesDockWidget</name>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="15"/>
+        <source>Name</source>
+        <translation>Bezeichner</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="15"/>
+        <source>Type</source>
+        <translation>Typ</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="15"/>
+        <source>Value</source>
+        <translation>Wert</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="21"/>
+        <source>Workspace</source>
+        <translation>Arbeitsumgebung</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="29"/>
+        <source>Save</source>
+        <translation>Sichern</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="30"/>
+        <source>Load</source>
+        <translation>Laden</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="31"/>
+        <source>Clear</source>
+        <translation>Löschen</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="46"/>
+        <source>Local</source>
+        <translation>Lokal</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="50"/>
+        <source>Global</source>
+        <translation>Global</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="54"/>
+        <source>Persistent</source>
+        <translation>Persistent</translation>
+    </message>
+    <message>
+        <location filename="../src/VariablesDockWidget.cpp" line="58"/>
+        <source>Hidden</source>
+        <translation>Versteckt</translation>
+    </message>
+</context>
+</TS>
diff --git a/gui/languages/german.qm b/gui/languages/german.qm
new file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..13cd427ba4fa69ba638a54f79dbb25ff3e02654c
GIT binary patch
literal 2753
zc$}41U1(fI6h52%Np_oTYAX^n#1Vu_4EqqMXpn~dHfq`gHY6%Ryt{Xjz3$za<=)v1
z2|g);2tJA6gFg5qh-fJ&Rk2oR!79ZE(Kq!$L8wYauoMyWo4GglZqnP0vh1DNxpThr
zo$t&!vk#xMhrYP>`m0y&8UFO?H$VAqnuva<>~TfZdxf$K$BFtTDErzaj29?-fn)rO
z9=-oLydR?S(o00y8&rPcS*)jN{rUHa@?)vX=UyPnY@~iWf&J<Ap5j&P@A)kK#+Ppq
zrS49jPnU>tuVj9F9Cp3s%(b`AV|+PtBYy<@#<FLRevf@;a`%1!|Cy_~sh_{W_)eer
zr3d^dKl;$0cv|_(Ux8O<yfFCrMfl%2H2%?tc)i~L;6Lxe@5ciRUr&PHv4Km!7P0<b
zas34L_qfGB+^2y5%pjc=*f-<=>`WRvMrn%bq^L!lTzokB#Ap?xM>}{rRHYgTjDDXc
zlEb$+)ABqn6q}c>&AnbM4bD3*_h)6bzUJ7QT%|Pj2u%ZF1K%2ueLR5zUlQ03@d$5l
zMm8Fju-Ss+E9q@(z}v$4KFEpgkf3gb;aGUD-#I1}MWx8y;Sid&nzp65UFza*gdPL7
z0FE@`2;*BApTO;qBn)BA5w_gYh=o&@BZ8j>>Q0&kNFCG~210?N0zJS-FavPkYCu{`
zIZ`B{OozFtz*3M6G(npPdj~T{OURbSZ5t_SX6L5KsS5MkDa2iKzOpK=<JY*&Tu0QI
zl5DA}tTrzt`Mv`YSO!UpYU62ykMIuZL%`;22SO&<-$#qEw+*)`69YFGzR^VUtOW7I
zvMx#sno6(kH?1m90v+8K^qL8}ZVqn?pssOZ1c+gSAlZtPZpBLEIz-<h)f-@=LF2e%
z^#+!jTsUHrZ6NAIy~e3b&8UVnt^W~uSrhCU`9vc8E>(ef%N!8~H&s(FI&DAT8wW80
zH#!Csg2nXt^=mDq%!=F+iBT2dRy%7O$FZorW$v||WU9kAbs0ua8tQHbLjP`GS#*Sf
z$)9dDD%_j4yzu<ZhlL+^r%wCAoaagJ*4AZnUYkZVW?DyQ3Fpg7HrWFAl8oCZJe@FQ
zOn)-EY7$!Ia@cunGx}7*{1ja`n(t;}ch4hO3-WX^!U#$@*ynd-Q_y5Y?t#Lx%PpUe
zv1-i{o18hSRA94`ZOazhvY;7C*Vjh|3tqU%pVW~Y4kF?9jI_BfP7~1LzOrc>mqDM<
zwBv9BVsQm1+J=J6+zCO56A{hPu&`{&eQ`{&mcadhCWC{eYL0J8g$b*{CknTwHjB@$
zYj2Nhfmy@Q4Jx{m1cQcun+E4#7N79pl|7Cbeh8^p+j5<t^Cy!iLZRzn;qZ<Qot;4*
zOvgC7YIzRY=S|mMKb-^*iIT=06dC4Dy0T)qT`iA<%{@p%RhLX`zu?$57hUZOQG<;M
zXLJia&`MuSoous<vU&j7+s#$n`5&RPnlh&$_5t?GVX$F))^}oD%gZ=8xRTKhx}p?K
zX+<Ry``7)mt7VQ>^hu5_R<@hnE&9UCC1#mjwcJ*BqmlpE@bi0meIne8c+rze{R^V|
BTj2lz

