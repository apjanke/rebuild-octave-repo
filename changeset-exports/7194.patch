# HG changeset patch
# User jwe
# Date 1196118373 0
#      Mon Nov 26 23:06:13 2007 +0000
# Node ID a927a2871a9302ea0dee9371e0c47e99261c7ac3
# Parent  cbdee3da62bd208fb08d980666532dcd462ff2e3
[project @ 2007-11-26 23:06:12 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,10 +1,18 @@
 2007-11-26  David Bateman  <dbateman@free.fr>
 
+	* plot/plotyy.m: New function
+	* plot/Makefile.in (SOURCES): Add it here.
+	* plot/__go_draw_axes__.m: Force axis margins for plotyy. Set text
+	color for {x|y|z}label and {x|y|z}tics. Also force the label of 
+	{x|y}label to respect the axis position.
+	* plot/xlabel.m, plot/ylabel.m, plot/zlabel.m: Accept an axis
+	handle as the first argument.
+	
 	* pkg/pkg.m (pkg:install): When loading the installed packages
 	index into installed_pkgs_lst and not descriptions..
 
 	* plot/quiver3.m, plot/surfnorm.m, plot/__quiver__.m: New functions.
 	* plot/Makefile.in (SOURCES): Add them to the sources.
 	* plot/quiver.m: Modify to use __quiver__.m.
 
 	* plot/hist.m: Avoid saturation when the x values are in an
diff --git a/scripts/plot/Makefile.in b/scripts/plot/Makefile.in
--- a/scripts/plot/Makefile.in
+++ b/scripts/plot/Makefile.in
@@ -107,16 +107,17 @@ SOURCES = \
   newplot.m \
   orient.m \
   patch.m \
   pcolor.m \
   peaks.m \
   pie.m \
   plot.m \
   plot3.m \
+  plotyy.m \
   polar.m \
   print.m \
   quiver.m \
   quiver3.m \
   replot.m \
   ribbon.m \
   scatter.m \
   scatter3.m \
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -34,16 +34,20 @@ function __go_draw_axes__ (h, plot_strea
     ## Set axis properties here?
     pos = [0, 0, 1, 1];
     if (! isempty (axis_obj.outerposition))
       pos = axis_obj.outerposition;
     endif
 
     if (! isempty (axis_obj.position))
       pos = axis_obj.position;
+      fprintf (plot_stream, "set tmargin 3;\n");
+      fprintf (plot_stream, "set bmargin 3;\n");
+      fprintf (plot_stream, "set lmargin 10;\n");
+      fprintf (plot_stream, "set rmargin 10;\n");
     endif
 
     if (! strcmp (axis_obj.__colorbar__, "none"))
       [pos, cbox_orient, cbox_size, cbox_origin, cbox_mirror] = ...
 	  gnuplot_postion_colorbox (pos, axis_obj.__colorbar__);
     endif
 
     fprintf (plot_stream, "set origin %.15g, %.15g;\n", pos(1), pos(2));
@@ -69,59 +73,84 @@ function __go_draw_axes__ (h, plot_strea
 	fprintf (plot_stream, "set title \"%s\" font \"%s,%d\";\n",
 		 undo_string_escapes (tt), f, s);
       endif
     endif
 
     if (! isempty (axis_obj.xlabel))
       t = get (axis_obj.xlabel);
       angle = t.rotation;
+      colorspec = get_text_colorspec (axis_obj.xcolor);
       if (isempty (t.string))
-	fputs (plot_stream, "unset xlabel;\n");
+	fprintf (plot_stream, "unset xlabel;\n");
+	fprintf (plot_stream, "unset x2label;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
-	fprintf (plot_stream, "set xlabel \"%s\" font \"%s,%d\"",
-		 undo_string_escapes (tt), f, s);
+	if (strcmpi (axis_obj.xaxislocation, "top"))
+	  fprintf (plot_stream, "set x2label \"%s\" %s font \"%s,%d\"",
+		   undo_string_escapes (tt), colorspec, f, s);
+	else
+	  fprintf (plot_stream, "set xlabel \"%s\" %s font \"%s,%d\"",
+		   undo_string_escapes (tt), colorspec, f, s);
+	endif
 	if (have_newer_gnuplot)
 	  ## Rotation of xlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f", angle);
 	endif
 	fputs (plot_stream, ";\n");
+	if (strcmpi (axis_obj.xaxislocation, "top"))
+	  fprintf (plot_stream, "unset xlabel;\n");
+	else
+	  fprintf (plot_stream, "unset x2label;\n");
+	endif
       endif
     endif
 
     if (! isempty (axis_obj.ylabel))
       t = get (axis_obj.ylabel);
       angle = t.rotation;
+      colorspec = get_text_colorspec (axis_obj.ycolor);
       if (isempty (t.string))
-	fputs (plot_stream, "unset ylabel;\n");
+	fprintf (plot_stream, "unset ylabel;\n");
+	fprintf (plot_stream, "unset y2label;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
-	fprintf (plot_stream, "set ylabel \"%s\" font \"%s,%d\"",
-		 undo_string_escapes (tt), f, s);
+	if (strcmpi (axis_obj.yaxislocation, "right"))
+	  fprintf (plot_stream, "set y2label \"%s\" %s font \"%s,%d\"",
+		   undo_string_escapes (tt), colorspec, f, s);
+	else
+	  fprintf (plot_stream, "set ylabel \"%s\" %s font \"%s,%d\"",
+		   undo_string_escapes (tt), colorspec, f, s);
+	endif
 	if (have_newer_gnuplot)
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
+	if (strcmpi (axis_obj.yaxislocation, "right"))
+	  fprintf (plot_stream, "unset ylabel;\n");
+	else
+	  fprintf (plot_stream, "unset y2label;\n");
+	endif
       endif
     endif
 
     if (! isempty (axis_obj.zlabel))
       t = get (axis_obj.zlabel);
       angle = t.rotation;
+      colorspec = get_text_colorspec (axis_obj.zcolor);
       if (isempty (t.string))
 	fputs (plot_stream, "unset zlabel;\n");
       else
 	[tt, f, s] = __maybe_munge_text__ (enhanced, t, "string",
 					   have_newer_gnuplot);
-	fprintf (plot_stream, "set zlabel \"%s\" font \"%s,%d\"",
-		 undo_string_escapes (tt), f, s);
+	fprintf (plot_stream, "set zlabel \"%s\" %s font \"%s,%d\"",
+		 undo_string_escapes (tt), colorspec, f, s);
 	if (have_newer_gnuplot)
 	  ## Rotation of zlabel not yet support by gnuplot as of 4.2, but
 	  ## there is no message about it.
 	  fprintf (plot_stream, " rotate by %f;\n", angle);
 	endif
 	fputs (plot_stream, ";\n");
       endif
     endif
@@ -966,41 +995,17 @@ function __go_draw_axes__ (h, plot_strea
 	  color = obj.color;
           if (strcmpi (units, "normalized"))
             units = "graph";
           else
             units = "";
           endif
 	  
 	  if (isnumeric (color))
-	    if (have_newer_gnuplot)
-	      colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
-		       round (255*color));
-	    else
-	      if (isequal (color, [0,0,0]))
-		typ = -1;
-	      elseif (isequal (color, [1,0,0]))
-		typ = 1;
-	      elseif (isequal (color, [0,1,0]))
-		typ = 2;
-	      elseif (isequal (color, [0,0,1]))
-		typ = 3;
-	      elseif (isequal (color, [1,0,1]))
-		typ = 4;
-	      elseif (isequal (color, [0,1,1]))
-		typ = 5;
-	      elseif (isequal (color, [1,1,1]))
-		typ = -1;
-	      elseif (isequal (color, [1,1,0]))
-		typ = 7;
-	      else
-		typ = -1;
-	      endif
-	      colorspec = sprintf ("textcolor lt %d", typ);
-	    endif
+	    colorspec = get_text_colorspec (color);
 	  endif
 
 	  if (nd == 3)
 	    fprintf (plot_stream,
 		     "set label \"%s\" at %s %.15g,%.15g,%.15g font \"%s,%d\" %s rotate by %f %s;\n",
 		     undo_string_escapes (label), units, lpos(1),
 		     lpos(2), lpos(3), f, s, halign, angle, colorspec);
 	  else
@@ -1525,54 +1530,55 @@ function __gnuplot_write_data__ (plot_st
   endif
   fputs (plot_stream, "e\n");
 
 endfunction
 
 function do_tics (obj, plot_stream)
   if (strcmpi (obj.xaxislocation, "top"))
     do_tics_1 (obj.xtickmode, obj.xtick, obj.xticklabelmode, obj.xticklabel,
-	       "x2", plot_stream);
+	       obj.xcolor, "x2", plot_stream);
     do_tics_1 ("manual", [], obj.xticklabelmode, obj.xticklabel,
-	       "x", plot_stream);
+	       obj.xcolor, "x", plot_stream);
   else
     do_tics_1 (obj.xtickmode, obj.xtick, obj.xticklabelmode, obj.xticklabel,
-	       "x", plot_stream);
+	       obj.xcolor, "x", plot_stream);
     do_tics_1 ("manual", [], obj.xticklabelmode, obj.xticklabel,
-	       "x2", plot_stream);
+	       obj.xcolor, "x2", plot_stream);
   endif
   if (strcmpi (obj.yaxislocation, "right"))
     do_tics_1 (obj.ytickmode, obj.ytick, obj.yticklabelmode, obj.yticklabel,
-	       "y2", plot_stream);
+	       obj.ycolor, "y2", plot_stream);
     do_tics_1 ("manual", [], obj.yticklabelmode, obj.yticklabel,
-	       "y", plot_stream);
+	       obj.ycolor, "y", plot_stream);
   else
     do_tics_1 (obj.ytickmode, obj.ytick, obj.yticklabelmode, obj.yticklabel,
-	       "y", plot_stream);
+	       obj.ycolor, "y", plot_stream);
     do_tics_1 ("manual", [], obj.yticklabelmode, obj.yticklabel,
-	       "y2", plot_stream);
+	       obj.ycolor, "y2", plot_stream);
   endif
   do_tics_1 (obj.ztickmode, obj.ztick, obj.zticklabelmode, obj.zticklabel,
-	     "z", plot_stream);
+	     obj.zcolor, "z", plot_stream);
 endfunction
 
-function do_tics_1 (ticmode, tics, labelmode, labels, ax, plot_stream)
+function do_tics_1 (ticmode, tics, labelmode, labels, color, ax, plot_stream)
+  colorspec = get_text_colorspec (color);
   if (strcmpi (ticmode, "manual"))
     if (isempty (tics))
       fprintf (plot_stream, "unset %stics;\n", ax);
     elseif (strcmpi (labelmode, "manual") && ! isempty (labels))
       if (ischar (labels))
 	labels = cellstr (labels);
       endif
       if (iscellstr (labels))
 	k = 1;
 	ntics = numel (tics);
 	nlabels = numel (labels);
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
-	fprintf (plot_stream, "set %stics (", ax);
+	fprintf (plot_stream, "set %stics %s (", ax, colorspec);
 	for i = 1:ntics
 	  fprintf (plot_stream, " \"%s\" %g", labels(k++), tics(i))
 	  if (i < ntics)
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
@@ -1584,17 +1590,48 @@ function do_tics_1 (ticmode, tics, label
     else
       fprintf (plot_stream, "set format %s \"%%g\";\n", ax);
       fprintf (plot_stream, "set %stics (", ax);
       fprintf (plot_stream, " %g,", tics(1:end-1));
       fprintf (plot_stream, " %g);\n", tics(end));
     endif
   else
     fprintf (plot_stream, "set format %s \"%%g\";\n", ax);
-    fprintf (plot_stream, "set %stics;\n", ax);
+    fprintf (plot_stream, "set %stics %s;\n", ax, colorspec);
+  endif
+endfunction
+
+function colorspec = get_text_colorspec (color)
+  persistent have_newer_gnuplot ...
+      = compare_versions (__gnuplot_version__ (), "4.0", ">");
+
+  if (have_newer_gnuplot)
+    colorspec = sprintf ("textcolor rgb \"#%02x%02x%02x\"",
+			 round (255*color));
+  else
+    if (isequal (color, [0,0,0]))
+      typ = -1;
+    elseif (isequal (color, [1,0,0]))
+      typ = 1;
+    elseif (isequal (color, [0,1,0]))
+      typ = 2;
+    elseif (isequal (color, [0,0,1]))
+      typ = 3;
+    elseif (isequal (color, [1,0,1]))
+      typ = 4;
+    elseif (isequal (color, [0,1,1]))
+      typ = 5;
+    elseif (isequal (color, [1,1,1]))
+      typ = -1;
+    elseif (isequal (color, [1,1,0]))
+      typ = 7;
+    else
+      typ = -1;
+    endif
+    colorspec = sprintf ("textcolor lt %d", typ);
   endif
 endfunction
 
 function [f, s, fnt, it, bld] = get_fontname_and_size (t)
   if (isempty (t.fontname))
     fnt = "helvetica";
   else
     fnt = tolower (t.fontname);
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -16,28 +16,46 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} xlabel (@var{string})
 ## @deftypefnx {Function File} {} ylabel (@var{string})
 ## @deftypefnx {Function File} {} zlabel (@var{string})
-## Specify x, y, and z axis labels for the current figure.
+## @deftypefnx {Function File} {} xlabel (@var{h}, @var{string})
+## Specify x, y, and z axis labels for the current figure. If @var{h} is
+## specified then label the axis defined by @var{h}.
 ## @seealso{plot, semilogx, semilogy, loglog, polar, mesh, contour,
 ## bar, stairs,  ylabel, title}
 ## @end deftypefn
 
 ## Author: jwe
 
 function h = xlabel (varargin)
 
-  if (rem (nargin, 2) == 1)
-    if (nargout > 0)
-      h = __axis_label__ ("xlabel", varargin{:});
-    else
-      __axis_label__ ("xlabel", varargin{:});
+  if (isscalar (varargin{1}) && ishandle (varargin{1}))
+    ax = varargin {1};
+    if (! strcmp (get (ax, "type"), "axes"))
+      error ("xlabel: expecting first argument to be an axes object");
+    endif
+    if (rem (nargin, 2) == 1)
+      print_usage ();
     endif
+    oldh = gca ();
+    unwind_protect
+      axes (ax);
+      tmp = __axis_label__ ("xlabel", varargin{2:end});
+    unwind_protect_cleanup
+      axes (oldh);
+    end_unwind_protect
   else
-    print_usage ();
+    if (rem (nargin, 2) != 1)
+      print_usage ();
+    endif
+    tmp = __axis_label__ ("xlabel", varargin{1:end});
+  endif
+
+  if (nargout > 0)
+    h = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -14,26 +14,43 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} ylabel (@var{string})
+## @deftypefnx {Function File} {} ylabel (@var{h}, @var{string})
 ## See xlabel.
 ## @end deftypefn
 
 ## Author: jwe
 
 function h = ylabel (varargin)
 
-  if (rem (nargin, 2) == 1)
-    if (nargout > 0)
-      h = __axis_label__ ("ylabel", varargin{:});
-    else
-      __axis_label__ ("ylabel", varargin{:});
+  if (isscalar (varargin{1}) && ishandle (varargin{1}))
+    ax = varargin {1};
+    if (! strcmp (get (ax, "type"), "axes"))
+      error ("ylabel: expecting first argument to be an axes object");
+    endif
+    if (rem (nargin, 2) == 1)
+      print_usage ();
     endif
+    oldh = gca ();
+    unwind_protect
+      axes (ax);
+      tmp = __axis_label__ ("ylabel", varargin{2:end});
+    unwind_protect_cleanup
+      axes (oldh);
+    end_unwind_protect
   else
-    print_usage ();
+    if (rem (nargin, 2) != 1)
+      print_usage ();
+    endif
+    tmp = __axis_label__ ("ylabel", varargin{1:end});
+  endif
+
+  if (nargout > 0)
+    h = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -14,26 +14,43 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} zlabel (@var{string})
+## @deftypefnx {Function File} {} zlabel (@var{h}, @var{string})
 ## See xlabel.
 ## @end deftypefn
 
 ## Author: jwe
 
 function h = zlabel (varargin)
 
-  if (rem (nargin, 2) == 1)
-    if (nargout > 0)
-      h = __axis_label__ ("zlabel", varargin{:});
-    else
-      __axis_label__ ("zlabel", varargin{:});
+  if (isscalar (varargin{1}) && ishandle (varargin{1}))
+    ax = varargin {1};
+    if (! strcmp (get (ax, "type"), "axes"))
+      error ("zlabel: expecting first argument to be an axes object");
+    endif
+    if (rem (nargin, 2) == 1)
+      print_usage ();
     endif
+    oldh = gca ();
+    unwind_protect
+      axes (ax);
+      tmp = __axis_label__ ("zlabel", varargin{2:end});
+    unwind_protect_cleanup
+      axes (oldh);
+    end_unwind_protect
   else
-    print_usage ();
+    if (rem (nargin, 2) != 1)
+      print_usage ();
+    endif
+    tmp = __axis_label__ ("zlabel", varargin{1:end});
+  endif
+
+  if (nargout > 0)
+    h = tmp;
   endif
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2007-11-26  David Bateman  <dbateman@free.fr>
 
+	* graphics.cc (class axes): Add the {x|y|z}color color property.
+	* graphics.h.in (class axes): ditto.
+
 	* ov-base.cc (Vsparse_auto_mutate, Fsparse_auto_mutate): New
 	internal variable and built-in function to set it.
 	* ov-base.h (extern bool Vsparse_auto_mutate): Export internal
 	variable to other functions.
 	* ov-re-sparse.cc (octave_sparse_matrix::try_narrowing_conversion
 	(void)), ov-cx-sparse.cc 
 	(octave_sparse_complex_matrix::try_narrowing_conversion (void)), 
 	ov-bool-sparse.cc
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1096,16 +1096,19 @@ axes::properties::properties (const grap
     ytickmode ("auto"),
     ztickmode ("auto"),
     xticklabel (""),
     yticklabel (""),
     zticklabel (""),
     xticklabelmode ("auto"),
     yticklabelmode ("auto"),
     zticklabelmode ("auto"),
+    xcolor (),
+    ycolor (),
+    zcolor (),
     xscale ("linear"),
     yscale ("linear"),
     zscale ("linear"),
     xdir ("normal"),
     ydir ("normal"),
     zdir ("normal"),
     xaxislocation ("bottom"),
     yaxislocation ("left"),
@@ -1285,16 +1288,22 @@ axes::properties::set (const caseless_st
   else if (name.compare ("zticklabel"))
     set_zticklabel (val);
   else if (name.compare ("xticklabelmode"))
     set_xticklabelmode (val);
   else if (name.compare ("yticklabelmode"))
     set_yticklabelmode (val);
   else if (name.compare ("zticklabelmode"))
     set_zticklabelmode (val);
+  else if (name.compare ("xcolor"))
+    set_xcolor (val);
+  else if (name.compare ("ycolor"))
+    set_ycolor (val);
+  else if (name.compare ("zcolor"))
+    set_zcolor (val);
   else if (name.compare ("xscale"))
     set_xscale (val);
   else if (name.compare ("yscale"))
     set_yscale (val);
   else if (name.compare ("zscale"))
     set_zscale (val);
   else if (name.compare ("xdir"))
     set_xdir (val);
@@ -1370,16 +1379,19 @@ axes::properties::set_defaults (base_gra
   ytickmode = "auto";
   ztickmode = "auto";
   xticklabel = "";
   yticklabel = "";
   zticklabel = "";
   xticklabelmode = "auto";
   yticklabelmode = "auto";
   zticklabelmode = "auto";
+  xcolor = color_property ("black");
+  ycolor = color_property ("black");
+  zcolor = color_property ("black");
   xscale = "linear";
   yscale = "linear";
   zscale = "linear";
   xdir = "normal";
   ydir = "normal";
   zdir = "normal";
   xaxislocation = "left";
   yaxislocation = "bottom";
@@ -1490,16 +1502,19 @@ axes::properties::get (void) const
   m.assign ("ytickmode", ytickmode);
   m.assign ("ztickmode", ztickmode);
   m.assign ("xticklabel", xticklabel);
   m.assign ("yticklabel", yticklabel);
   m.assign ("zticklabel", zticklabel);
   m.assign ("xticklabelmode", xticklabelmode);
   m.assign ("yticklabelmode", yticklabelmode);
   m.assign ("zticklabelmode", zticklabelmode);
+  m.assign ("xcolor", xcolor);
+  m.assign ("ycolor", ycolor);
+  m.assign ("zcolor", zcolor);
   m.assign ("xscale", xscale);
   m.assign ("yscale", yscale);
   m.assign ("zscale", zscale);
   m.assign ("xdir", xdir);
   m.assign ("ydir", ydir);
   m.assign ("zdir", zdir);
   m.assign ("xaxislocation", xaxislocation);
   m.assign ("yaxislocation", yaxislocation);
@@ -1598,16 +1613,22 @@ axes::properties::get (const caseless_st
   else if (name.compare ("zticklabel"))
     retval = zticklabel;
   else if (name.compare ("xticklabelmode"))
     retval = xticklabelmode;
   else if (name.compare ("yticklabelmode"))
     retval = yticklabelmode;
   else if (name.compare ("zticklabelmode"))
     retval = zticklabelmode;
+  else if (name.compare ("xcolor"))
+    retval = xcolor;
+  else if (name.compare ("ycolor"))
+    retval = ycolor;
+  else if (name.compare ("zcolor"))
+    retval = zcolor;
   else if (name.compare ("xscale"))
     retval = xscale;
   else if (name.compare ("yscale"))
     retval = yscale;
   else if (name.compare ("zscale"))
     retval = zscale;
   else if (name.compare ("xdir"))
     retval = xdir;
@@ -1708,16 +1729,19 @@ axes::properties::factory_defaults (void
   m["ytickmode"] = "auto";
   m["ztickmode"] = "auto";
   m["xticklabel"] = "";
   m["yticklabel"] = "";
   m["zticklabel"] = "";
   m["xticklabelmode"] = "auto";
   m["yticklabelmode"] = "auto";
   m["zticklabelmode"] = "auto";
+  m["xcolor"] = color_property ("black");
+  m["ycolor"] = color_property ("black");
+  m["zcolor"] = color_property ("black");
   m["xscale"] = "linear";
   m["yscale"] = "linear";
   m["zscale"] = "linear";
   m["xdir"] = "normal";
   m["ydir"] = "normal";
   m["zdir"] = "normal";
   m["xaxislocation"] = "bottom";
   m["yaxislocation"] = "left";
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1182,16 +1182,19 @@ public:
       octave_value ytickmode
       octave_value ztickmode
       octave_value xticklabel m
       octave_value yticklabel m
       octave_value zticklabel m
       octave_value xticklabelmode
       octave_value yticklabelmode
       octave_value zticklabelmode
+      color_property xcolor
+      color_property ycolor
+      color_property zcolor
       octave_value xscale
       octave_value yscale
       octave_value zscale
       octave_value xdir
       octave_value ydir
       octave_value zdir
       octave_value xaxislocation
       octave_value yaxislocation
