# HG changeset patch
# User jwe
# Date 779723863 0
#      Fri Sep 16 13:57:43 1994 +0000
# Node ID 6caaaf4c5dd4b152033064e91b8a5498479b1f8d
# Parent  d7c4962ec7a0005c8f065bd72a227cf23bd4c479
[project @ 1994-09-16 13:57:43 by jwe]

diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -69,19 +69,27 @@ CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 EXTERNAL_TEMPLATES = @EXTERNAL_TEMPLATES@
 ALL_CXXFLAGS = $(INCFLAGS) $(DEFS) $(EXTERNAL_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 UGLY_ALL_CXXFLAGS = $(INCFLAGS) $(UGLY_DEFS) $(EXTERNAL_TEMPLATES) \
 	$(GCC_IEEE_FP_FLAG) $(CXXFLAGS)
 
 LDFLAGS = @LDFLAGS@
-ALL_LDFLAGS = $(LIBFLAGS) $(GCC_IEEE_FP_FLAG) $(LDFLAGS)
+LD_STATIC_FLAG = @LD_STATIC_FLAG@
+ALL_LDFLAGS = $(LIBFLAGS) $(GCC_IEEE_FP_FLAG) $(LD_STATIC_FLAG) $(LDFLAGS)
 
 FLIBS = @FLIBS@
+FLIB_LIST = @FLIB_LIST@
+FLIB_PATH = @FLIB_PATH@
+
+CXXLIBS = @CXXLIBS@
+CXXLIB_LIST = @CXXLIB_LIST@
+CXXLIB_PATH = @CXXLIB_PATH@
+
 
 # A shell command to extract the version number from version.h.
 getversion = sed -e '/version_string/!d' -e 's/.*"\(.*\)".*/\1/' -e q
 
 # The version number.  TOPDIR is something like `.' or `..' or `../..'
 # and gets us back up to the top level of the source tree.
 version = `$(getversion) $(srcdir)/$(TOPDIR)/src/version.h`
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Octave is distributed in the hope th
 dnl ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 dnl FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 dnl for more details.
 dnl 
 dnl You should have received a copy of the GNU General Public License
 dnl along with Octave; see the file COPYING.  If not, write to the Free
 dnl Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 dnl
-AC_REVISION($Revision: 1.46 $)dnl
+AC_REVISION($Revision: 1.47 $)dnl
 AC_PREREQ(1.8)dnl
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h kpathsea/c-auto.h)
 dnl
 AC_DEFINE(OCTAVE_SOURCE, 1)dnl
 dnl
 dnl See if we were given the target host type.  If not, use
 dnl config.guess to try to guess the target host type.
@@ -135,31 +135,31 @@ if $run_in_place; then
   absolute_builddir=$absolute_builddir
   prefix=$absolute_srcdir
   infodir=$absolute_srcdir/info
   fcnfiledir=$absolute_srcdir/scripts
   archlibdir=$absolute_builddir
   fcnfilepath='.:$(fcnfiledir)//'
   imagepath='.:$(fcnfiledir)/imagelib//'
 fi
-AC_VERBOSE([setting prefix to $prefix])
-AC_VERBOSE([setting exec_prefix to $exec_prefix])
-AC_VERBOSE([setting bindir to $bindir])
-AC_VERBOSE([setting datadir to $datadir])
-AC_VERBOSE([setting libdir to $libdir])
-AC_VERBOSE([setting includedir to $includedir])
-AC_VERBOSE([setting mandir to $mandir])
-AC_VERBOSE([setting infodir to $infodir])
-AC_VERBOSE([setting fcnfiledir to $fcnfiledir])
-AC_VERBOSE([setting localfcnfilepath to $localfcnfilepath])
-AC_VERBOSE([setting archlibdir to $archlibdir])
-AC_VERBOSE([setting octfiledir to $octfiledir])
-AC_VERBOSE([setting localoctfilepath to $localoctfilepath])
-AC_VERBOSE([setting fcnfilepath to $fcnfilepath])
-AC_VERBOSE([setting imagepath to $imagepath])
+AC_VERBOSE([defining prefix to be $prefix])
+AC_VERBOSE([defining exec_prefix to be $exec_prefix])
+AC_VERBOSE([defining bindir to be $bindir])
+AC_VERBOSE([defining datadir to be $datadir])
+AC_VERBOSE([defining libdir to be $libdir])
+AC_VERBOSE([defining includedir to be $includedir])
+AC_VERBOSE([defining mandir to be $mandir])
+AC_VERBOSE([defining infodir to be $infodir])
+AC_VERBOSE([defining fcnfiledir to be $fcnfiledir])
+AC_VERBOSE([defining localfcnfilepath to be $localfcnfilepath])
+AC_VERBOSE([defining archlibdir to be $archlibdir])
+AC_VERBOSE([defining octfiledir to be $octfiledir])
+AC_VERBOSE([defining localoctfilepath to be $localoctfilepath])
+AC_VERBOSE([defining fcnfilepath to be $fcnfilepath])
+AC_VERBOSE([defining imagepath to be $imagepath])
 AC_SUBST(exec_prefix)
 AC_SUBST(bindir)
 AC_SUBST(datadir)
 AC_SUBST(libdir)
 AC_SUBST(includedir)
 AC_SUBST(mandir)
 AC_SUBST(infodir)
 AC_SUBST(fcnfiledir)
@@ -183,29 +183,29 @@ if $use_dld; then
 # requested.
   if $lite_kernel; then
     LIBOCTDLD=
   fi
   LD_STATIC_FLAG=-static
   AC_DEFINE(WITH_DLD, 1)dnl
 fi
 if test -n "$DYNAMIC_LD_OBJ"; then
-  AC_VERBOSE([setting DYNAMIC_LD_OBJ to $DYNAMIC_LD_OBJ])
+  AC_VERBOSE([defining DYNAMIC_LD_OBJ to be $DYNAMIC_LD_OBJ])
 fi
 if test -n "$DLD_DIR"; then
-  AC_VERBOSE([setting DLD_DIR to $DLD_DIR])
+  AC_VERBOSE([defining DLD_DIR to be $DLD_DIR])
 fi
 if test -n "$LIBDLD"; then
-  AC_VERBOSE([setting LIBDLD to $LIBDLD])
+  AC_VERBOSE([defining LIBDLD to be $LIBDLD])
 fi
 if test -n "$LIBOCTDLD"; then
-  AC_VERBOSE([setting LIBOCTDLD to $LIBOCTDLD])
+  AC_VERBOSE([defining LIBOCTDLD to be $LIBOCTDLD])
 fi
 if test -n "$LD_STATIC_FLAG"; then
-  AC_VERBOSE([setting LD_STATIC_FLAG to $LD_STATIC_FLAG])
+  AC_VERBOSE([defining LD_STATIC_FLAG to be $LD_STATIC_FLAG])
 fi
 AC_SUBST(DYNAMIC_LD_OBJ)dnl
 AC_SUBST(DLD_DIR)dnl
 AC_SUBST(LIBDLD)dnl
 AC_SUBST(LIBOCTDLD)dnl
 AC_SUBST(LD_STATIC_FLAG)dnl
 dnl
 dnl See if the optional nonlinear programming code is present.
@@ -238,49 +238,56 @@ AC_PROG_CXXCPP
 dnl
 dnl Do special things for g++.
 dnl
 ADD_CXX_WALL=false
 gxx_version=`$CXX -v 2>&1 | grep "^g.. version" | sed 's/^g.. version *//'`
 case "$gxx_version" in
   2.5.*|2.6.*|2.7.*|2.8.*|2.9.*)
     CXXFLAGS="-g -O"
-    AC_VERBOSE([setting CXXFLAGS to $CXXFLAGS])
+    AC_VERBOSE([defining CXXFLAGS to be $CXXFLAGS])
     EXTERNAL_TEMPLATES="-fexternal-templates"
-    AC_VERBOSE([setting EXTERNAL_TEMPLATES to $EXTERNAL_TEMPLATES])
+    AC_VERBOSE([defining EXTERNAL_TEMPLATES to be $EXTERNAL_TEMPLATES])
     ADD_CXX_WALL=true
     AC_DEFINE(USE_EXTERNAL_TEMPLATES, 1)dnl
   ;;
   1.*)
     AC_WARN([g++ version $gxx_version will not work to compile Octave])
   ;;
   *)
     AC_WARN([Octave has only been tested with g++, and I can't find it])
   ;;
 esac
 dnl
+dnl See what libraries are used by the C++ compiler.  Need this for
+dnl dynamic linking.
+dnl
+CXXLIBS=`sh $srcdir/cxxlibs.sh`
+AC_VERBOSE([defining CXXLIBS to be $CXXLIBS])
+dnl
 AC_SUBST(CXXFLAGS)dnl
 AC_SUBST(EXTERNAL_TEMPLATES)dnl
+AC_SUBST(CXXLIBS)dnl
 dnl
 dnl See which C compiler to use (we expect to find gcc).
 dnl
 AC_PROG_CC
 AC_PROG_CPP
 AC_GCC_TRADITIONAL
 dnl
 dnl Do special things for gcc.
 dnl
 ADD_CC_WALL=false
 gcc_version=`$CC -v 2>&1 | grep "^gcc version" | sed 's/^gcc version *//'`
 case "$gcc_version" in
   2.*)
     CFLAGS="-g -O"
-    AC_VERBOSE([setting CFLAGS to $CFLAGS])
+    AC_VERBOSE([defining CFLAGS to be $CFLAGS])
     LDFLAGS="-g"
-    AC_VERBOSE([setting LDFLAGS to $LDFLAGS])
+    AC_VERBOSE([defining LDFLAGS to be $LDFLAGS])
     ADD_CC_WALL=true
   ;;
   1.*)
     AC_WARN([gcc version $gcc_version is likely to cause problems])
   ;;
   *)
     AC_WARN([Octave has only been tested with gcc, and I can't find it])
   ;;
@@ -290,17 +297,17 @@ AC_SUBST(CFLAGS)dnl
 AC_SUBST(LDFLAGS)dnl
 dnl
 dnl On Linux systems we need to compile with -mieee-fp to get full
 dnl support for IEEE floating point.
 dnl
 case "$canonical_host_type" in
   i386-*-linux | i486-*-linux | i586-*-linux)
     GCC_IEEE_FP_FLAG="-mieee-fp"
-    AC_VERBOSE([setting GCC_IEEE_FP_FLAG to $GCC_IEEE_FP_FLAG])
+    AC_VERBOSE([defining GCC_IEEE_FP_FLAG to be $GCC_IEEE_FP_FLAG])
   ;;
 esac
 dnl
 AC_SUBST(GCC_IEEE_FP_FLAG)dnl
 dnl
 dnl Special checks for odd OS specific things.
 dnl
 AC_ISC_POSIX
@@ -398,23 +405,23 @@ dnl
 dnl If we can't find a Fortran compiler, or if it looks like it isn't
 dnl compatible with f2c, try to find f2c.
 dnl
 if test -z "$F77"; then
   AC_PROGRAM_CHECK(F2C, f2c, f2c, [])dnl
 fi
 dnl
 F2CFLAGS=
-AC_VERBOSE([setting F2CFLAGS to $F2CFLAGS])
+AC_VERBOSE([defining F2CFLAGS to be $F2CFLAGS])
 FFLAGS="-O"
-AC_VERBOSE([setting FFLAGS to $FFLAGS])
+AC_VERBOSE([defining FFLAGS to be $FFLAGS])
 if test -n "$F77"; then
   export F77
   FLIBS=`sh $srcdir/flibs.sh`
-  AC_VERBOSE([setting FLIBS to $FLIBS])
+  AC_VERBOSE([defining FLIBS to be $FLIBS])
   DOT_O_DOT_F_C1=
   DOT_O_DOT_F_C2=
   DOT_O_DOT_F_C3=
   DOT_O_DOT_F_C4=
   DEFAULT_DOT_C_FROM_DOT_F=
   DEFAULT_DOT_O_FROM_DOT_F=
 elif test -n "$F2C" || $use_f2c; then
   AC_HAVE_LIBRARY(f2c, FLIBS=-lf2c, [])dnl
@@ -429,34 +436,71 @@ elif test -n "$F2C" || $use_f2c; then
   fi
 DEFAULT_DOT_C_FROM_DOT_F='# A rule for making C source from Fortran source.\
 # If we are using f2c we should also turn off the default rule for\
 # making objects from .f files so that we do not invoke the fortran\
 # compiler by mistake.\
 \
 \%.c : \%.f\
 	cat $< | $(F2C) $(F2CFLAGS) > $(@F)'
-  AC_VERBOSE([setting DEFAULT_DOT_C_FROM_DOT_F to $DEFAULT_DOT_C_FROM_DOT_F])
+  AC_VERBOSE([defining DEFAULT_DOT_C_FROM_DOT_F to be $DEFAULT_DOT_C_FROM_DOT_F])
   DEFAULT_DOT_O_FROM_DOT_F='\%.o : \%.f'
-  AC_VERBOSE([setting DEFAULT_DOT_O_FROM_DOT_F to $DEFAULT_DOT_O_FROM_DOT_F])
+  AC_VERBOSE([defining DEFAULT_DOT_O_FROM_DOT_F to be $DEFAULT_DOT_O_FROM_DOT_F])
   AC_DEFINE(F77_APPEND_UNDERSCORE, 1)dnl
 else
   AC_WARN([in order to build octave, you must have a compatible])
   AC_WARN([Fortran compiler or f2c installed and in your path.])
   AC_WARN([See the file INSTALL for more information.])
   AC_WARN([Continuing anyway...])
 fi
 dnl
 AC_SUBST(FFLAGS)dnl
 AC_SUBST(FLIBS)dnl
 AC_SUBST(F2C)dnl
 AC_SUBST(F2CFLAGS)dnl
 AC_SUBST(DEFAULT_DOT_C_FROM_DOT_F)dnl
 AC_SUBST(DEFAULT_DOT_O_FROM_DOT_F)dnl
 dnl
+dnl Extract libraries and directories from FLIBS and CXXLIBS.
+dnl
+dnl Leave only libraries, with -lfoo converted to libfoo.a:
+dnl
+changequote(,)dnl
+FLIB_LIST=`echo "$FLIBS" | sed -e 's/-L *[^ ]*//g' \
+	-e 's/-l *\([^ ]*\)/lib\1.a/g' -e 's/-u *[^ ]*//' \
+	-e 's/^ *//' -e 's/ *$//' -e 's/  */:/'`
+dnl
+CXXLIB_LIST=`echo "$CXXLIBS" | sed -e 's/-L *[^ ]*//g' \
+	-e 's/-l *\([^ ]*\)/lib\1.a/g' -e 's/-u *[^ ]*//' \
+	-e 's/^ *//' -e 's/ *$//' -e 's/  */:/g'`
+dnl
+dnl Leave only directories where libraries might be found:
+dnl
+FLIB_PATH=`echo "$FLIBS" | sed -e 's/-L *\([^ ]*\)/\1/g' \
+	-e 's/-l *[^ ]*//g' -e 's/-u *[^ ]*//' -e 's/^ *//' \
+	-e 's/ *$//' -e 's/  */:/'`
+dnl
+CXXLIB_PATH=`echo "$CXXLIBS" | sed -e 's/-L *\([^ ]*\)/\1/g' \
+	-e 's/-l *[^ ]*//g' -e 's/-u *[^ ]*//' -e 's/^ *//' \
+	-e 's/ *$//' -e 's/  */:/g'`
+dnl
+changequote([,])dnl
+dnl
+AC_VERBOSE([defining FLIB_LIST to be $FLIB_LIST])
+AC_VERBOSE([defining FLIB_PATH to be $FLIB_PATH])
+dnl
+AC_VERBOSE([defining CXXLIB_LIST to be $CXXLIB_LIST])
+AC_VERBOSE([defining CXXLIB_PATH to be $CXXLIB_PATH])
+dnl
+AC_SUBST(FLIB_LIST)dnl
+AC_SUBST(FLIB_PATH)dnl
+dnl
+AC_SUBST(CXXLIB_LIST)dnl
+AC_SUBST(CXXLIB_PATH)dnl
+dnl
 dnl Checks for header files.
 dnl
 AC_STDC_HEADERS
 AC_HAVE_HEADERS(assert.h float.h limits.h memory.h pwd.h stdlib.h)dnl
 AC_HAVE_HEADERS(string.h varargs.h unistd.h floatingpoint.h)dnl
 AC_HAVE_HEADERS(sys/utsname.h sys/time.h sys/fcntl.h)dnl
 AC_HAVE_HEADERS(sys/ttold.h sys/ptem.h sys/select.h)dnl
 AC_DIR_HEADER
@@ -592,17 +636,17 @@ dnl Checks for OS specific cruft.
 dnl
 AC_STRUCT_TM
 AC_SETVBUF_REVERSED
 TERMLIBS=""
 for termlib in termcap terminfo curses termlib ; do
   AC_HAVE_LIBRARY(${termlib}, [TERMLIBS="${TERMLIBS} -l${termlib}"])
   case "${TERMLIBS}" in
     *-l${termlib}*)
-      AC_VERBOSE([setting TERMLIBS to $TERMLIBS])
+      AC_VERBOSE([defining TERMLIBS to be $TERMLIBS])
       break
     ;;
   esac
 done
 dnl
 AC_COMPILE_CHECK([struct exception in math.h],
 [#include <math.h>],
 [struct exception *x; x->type; x->name;],
@@ -631,22 +675,22 @@ dnl it, and it might not be installed.
 dnl
 dnl Also make sure that we generate an interactive scanner if we are
 dnl using flex.
 dnl
 AC_PROG_LEX
 case "$LEX" in
   flex*)
     LFLAGS="-t -I"
-    AC_VERBOSE([setting LFLAGS to be $LFLAGS])
+    AC_VERBOSE([defining LFLAGS to be $LFLAGS])
     LEXLIB=
   ;;
   *)
     LFLAGS="-t"
-    AC_VERBOSE([setting LFLAGS to be $LFLAGS])
+    AC_VERBOSE([defining LFLAGS to be $LFLAGS])
     AC_WARN([I didn't find flex, but that's only a problem])
     AC_WARN([if you need to reconstruct lex.cc])
   ;;
 esac
 AC_SUBST(LFLAGS)dnl
 dnl
 AC_PROG_YACC
 case "$YACC" in
@@ -683,25 +727,25 @@ if test -z "$GNUPLOT_BINARY"; then
   AC_WARN([at the Octave prompt.])
 fi
 dnl
 AC_PROGRAMS_CHECK(DEFAULT_PAGER, less more page pg, [])dnl
 if test -z "$DEFAULT_PAGER"; then
   AC_WARN([I couldn't find `less', `more', `page', or `pg'])
 elif test "$DEFAULT_PAGER" = less; then
   DEFAULT_PAGER="less -e"
-  AC_VERBOSE([setting DEFAULT_PAGER to be $DEFAULT_PAGER])
+  AC_VERBOSE([defining DEFAULT_PAGER to be $DEFAULT_PAGER])
 fi
 dnl
 dnl Even though we include config.h in most files, some need to be
 dnl compiled with the -D options on the compiler command line.  Use
 dnl UGLY_DEFS for that.
 dnl
 UGLY_DEFS="$DEFS"
-AC_VERBOSE([setting UGLY_DEFS to be $UGLY_DEFS])
+AC_VERBOSE([defining UGLY_DEFS to be $UGLY_DEFS])
 AC_SUBST(UGLY_DEFS)dnl
 dnl
 dnl Maybe add -Wall to compiler flags now that we're done feature
 dnl testing. 
 dnl
 dnl To get gcc and g++ to be really picky, try these adding these
 dnl options to CFLAGS and CXXFLAGS along with -Wall:
 dnl
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -11,17 +11,17 @@ TOPDIR = .
 srcdir = @srcdir@
 top_srcdir = @top_srcdir@
 VPATH = @srcdir@
 
 include $(TOPDIR)/Makeconf
 
 DISTFILES = BUGS COPYING INSTALL INSTALL.OCTAVE Makefile.in \
 	Makeconf.in NEWS PROJECTS README README.NLP SENDING-PATCHES \
-	THANKS f2c-compat.sh flibs.sh configure configure.in \
+	THANKS f2c-compat.sh flibs.sh cxxlibs.sh configure configure.in \
 	config.guess config.sub float-type.c move-if-change octave.sh \
 	octave-mode.el install.sh doinstall.sh mkpath.c config.h.in \
 	acconfig.h MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
 DISTDIRS = bsd-math dld kpathsea
 
 # Subdirectories to run make in for the primary targets.
