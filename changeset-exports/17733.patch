# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1382485190 14400
#      Tue Oct 22 19:39:50 2013 -0400
# Node ID 8ad59bef27b57c894490b09957cd912c1c568720
# Parent  dcc88366f94bae2297bbf2be947bb3747a877beb
use more direct method for checking input source for lexer

* input.h (octave_base_reader::input_from_terminal,
octave_base_reader::input_from_file,
octave_base_reader::input_from_eval_string):
New virtual functions.
(octave_terminal_reader::input_from_terminal): New function.
(octave_file_reader::input_from_file): New function.
(octave_eval_string_reader::input_from_eval_string): New function.
(octave_input_reader::input_from_terminal,
octave_input_reader::input_from_file,: New function.
octave_input_string_reader::input_from_eval_string): New functions
* lex.h (octave_base_lexer::input_from_terminal): Call
input_reader.input_from_terminal instead of comparing input_source to
"terminal".
(octave_base_lexer::input_from_file): Call
input_reader.input_from_file instead of comparing input_source to
"file".
(octave_base_lexer::input_from_eval_string): Call
input_reader.input_from_eval_string instead of comparing input_source to
"eval_string".

diff --git a/libinterp/corefcn/input.h b/libinterp/corefcn/input.h
--- a/libinterp/corefcn/input.h
+++ b/libinterp/corefcn/input.h
@@ -119,16 +119,22 @@ public:
   std::string octave_gets (bool& eof);
 
   virtual bool reading_fcn_file (void) const;
 
   virtual bool reading_classdef_file (void) const;
 
   virtual bool reading_script_file (void) const;
 
+  virtual bool input_from_terminal (void) const { return false; }
+
+  virtual bool input_from_file (void) const { return false; }
+
+  virtual bool input_from_eval_string (void) const { return false; }
+
 private:
 
   int count;
 
   int pflag;
 
   octave_base_lexer *lexer;
 
@@ -145,16 +151,18 @@ public:
   octave_terminal_reader (octave_base_lexer *lxr = 0)
     : octave_base_reader (lxr)
   { }
 
   std::string get_input (bool& eof);
 
   std::string input_source (void) const { return in_src; }
 
+  bool input_from_terminal (void) const { return true; }
+
 private:
 
   static const std::string in_src;
 };
 
 class
 octave_file_reader : public octave_base_reader
 {
@@ -162,16 +170,18 @@ public:
 
   octave_file_reader (FILE *f_arg, octave_base_lexer *lxr = 0)
     : octave_base_reader (lxr), file (f_arg) { }
 
   std::string get_input (bool& eof);
 
   std::string input_source (void) const { return in_src; }
 
+  bool input_from_file (void) const { return true; }
+
 private:
 
   FILE *file;
 
   static const std::string in_src;
 };
 
 class
@@ -183,16 +193,18 @@ public:
                              octave_base_lexer *lxr = 0)
     : octave_base_reader (lxr), eval_string (str)
   { }
 
   std::string get_input (bool& eof);
 
   std::string input_source (void) const { return in_src; }
 
+  bool input_from_eval_string (void) const { return true; }
+
 private:
 
   std::string eval_string;
 
   static const std::string in_src;
 };
 
 class
@@ -249,14 +261,29 @@ public:
     return rep->get_input (eof);
   }
 
   std::string input_source (void) const
   {
     return rep->input_source ();
   }
 
+  bool input_from_terminal (void) const
+  {
+    return rep->input_from_terminal ();
+  }
+
+  bool input_from_file (void) const
+  {
+    return rep->input_from_file ();
+  }
+
+  bool input_from_eval_string (void) const
+  {
+    return rep->input_from_eval_string ();
+  }
+
 private:
 
   octave_base_reader *rep;
 };
 
 #endif
diff --git a/libinterp/parse-tree/lex.h b/libinterp/parse-tree/lex.h
--- a/libinterp/parse-tree/lex.h
+++ b/libinterp/parse-tree/lex.h
@@ -727,27 +727,27 @@ public:
 
   std::string input_source (void) const
   {
     return input_reader.input_source ();
   }
 
   bool input_from_terminal (void) const
   {
-    return input_source () == "terminal";
+    return input_reader.input_from_terminal ();
   }
 
   bool input_from_file (void) const
   {
-    return input_source () == "file";
+    return input_reader.input_from_file ();
   }
 
   bool input_from_eval_string (void) const
   {
-    return input_source () == "eval_string";
+    return input_reader.input_from_eval_string ();
   }
 
   int fill_flex_buffer (char *buf, unsigned int max_size);
 
   octave_input_reader input_reader;
 
 protected:
 
