# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1285139096 -7200
#      Wed Sep 22 09:04:56 2010 +0200
# Node ID 63f79f798a14dfdb15c7d39919f7668317d43e85
# Parent  30b9b0a507f1dddb5a4276ecea657f6cf5311517
fix small typos in new tests

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,12 @@
+2010-09-22  Jaroslav Hajek  <highegg@gmail.com>
+
+	* lo-utils.cc (xis_int_or_inf_or_nan): Fix typos.
+
 2010-09-21  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Array.h (Array::test, Array::test_all, Array::test_any): New
 	overloaded template methods.
 	* lo-mappers.h (xisinteger, xnegative_sign): New bool mappers.
 	* dNDArray.cc (NDArray::any_element_is_negative, 
 	NDArray::all_integers): Simplify.
 	* fNDArray.cc (FloatNDArray::any_element_is_negative, 
diff --git a/liboctave/lo-utils.cc b/liboctave/lo-utils.cc
--- a/liboctave/lo-utils.cc
+++ b/liboctave/lo-utils.cc
@@ -108,29 +108,29 @@ F_NINT (float x)
 {
   if (xisinf (x) || xisnan (x))
     return x;
   else
     return floor (x + 0.5);
 }
 
 bool xis_int_or_inf_or_nan (double x)
-{ return ! (xisnan (x) || D_NINT (x) == x); }
+{ return xisnan (x) || D_NINT (x) == x; }
 
 bool xis_one_or_zero (double x)
 { return x == 0 || x == 1; }
 
 bool xis_zero (double x)
 { return x == 0; }
 
 bool xtoo_large_for_float (double x)
 { return (! (xisnan (x) || xisinf (x)) && fabs (x) > FLT_MAX); }
 
 bool xis_int_or_inf_or_nan (float x)
-{ return ! (xisnan (x) || D_NINT (x) == x); }
+{ return xisnan (x) || D_NINT (x) == x; }
 
 bool xis_one_or_zero (float x)
 { return x == 0 || x == 1; }
 
 bool xis_zero (float x)
 { return x == 0; }
 
 // Save a string.
