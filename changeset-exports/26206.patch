# HG changeset patch
# User Rik <rik@octave.org>
# Date 1544572843 28800
#      Tue Dec 11 16:00:43 2018 -0800
# Node ID aaa23f9845dd8d00a2fe6404893418ff6e3e86be
# Parent  cf037b842a9f02159a9f342bfaa2b77ebbfb030f
qp.m: Allow empty inequality constraints (bug #38483).

* qp.m: Change input validation to only process inequality constraints if A_in
is non-empty.

diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -259,32 +259,36 @@ function [x, obj, INFO, lambda] = qp (x0
           bin = [bin; lb(i); -ub(i)];
           n_in += 2;
         endif
       endfor
     endif
   endif
 
   ## Validate inequality constraints.
-  if (nargs > 7)
+  if (nargs > 7 && isempty (A_in) && ! (isempty(A_lb) || isempty(A_ub)))
+    warning("qp: empty inequality constraint matrix but non-empty bound vectors");
+  endif
+
+  if (nargs > 7 && ! isempty (A_in))
     [dimA_in, n1] = size (A_in);
     if (n1 != n)
-      error ("qp: inequality constraint matrix has incorrect column dimension");
+      error ("qp: inequality constraint matrix has incorrect column dimension, expected %i", n1);
     else
       if (! isempty (A_lb))
         if (numel (A_lb) != dimA_in)
-          error ("qp: inequality constraint matrix and lower bound vector are inconsistent");
+          error ("qp: inequality constraint matrix and lower bound vector are inconsistent, %i != %i", dimA_in, numel (A_lb));
         elseif (isempty (A_ub))
           Ain = [Ain; A_in];
           bin = [bin; A_lb];
         endif
       endif
       if (! isempty (A_ub))
         if (numel (A_ub) != dimA_in)
-          error ("qp: inequality constraint matrix and upper bound vector are inconsistent");
+          error ("qp: inequality constraint matrix and upper bound vector are inconsistent, %i != %i", dimA_in, numel (A_ub));
         elseif (isempty (A_lb))
           Ain = [Ain; -A_in];
           bin = [bin; -A_ub];
         endif
       endif
 
       if (! isempty (A_lb) && ! isempty (A_ub))
         rtol = sqrt (eps);
