# HG changeset patch
# User Markus MÃ¼tzel <markus.muetzel@gmx.de>
# Date 1470746492 -7200
#      Tue Aug 09 14:41:32 2016 +0200
# Node ID 553490ffc2033ffdf7047454072416d46b6c777f
# Parent  945e7f9c11ff0a58b97e20e2cb737b3d44dbcd93
Fix compile error and warning with '--without-opengl' (bug #48724)

* gl-render.cc (get_maxlights): Define conditionally on HAVE_OPENGL.
(opengl_renderer::draw_all_lights): Add conditional on HAVE_OPENGL.

diff --git a/libinterp/corefcn/gl-render.cc b/libinterp/corefcn/gl-render.cc
--- a/libinterp/corefcn/gl-render.cc
+++ b/libinterp/corefcn/gl-render.cc
@@ -582,43 +582,41 @@ private:
 class
 opengl_renderer::patch_tesselator
 {
   // Dummy class.
 };
 
 #endif
 
+#if defined (HAVE_OPENGL)
+
 static int
 get_maxlights (void)
 {
-#if defined (HAVE_OPENGL)
 
   static int max_lights = 0;
 
   // Check actual maximum number of lights possible
   if (max_lights == 0)
     {
       for (max_lights = 0; max_lights < GL_MAX_LIGHTS; max_lights++)
         {
           glDisable (GL_LIGHT0 + max_lights);
           if (glGetError ())
             break;
         }
     }
 
   return max_lights;
-#else
-
-  err_disabled_feature ("opengl_renderer", "OpenGL");
+
+}
 
 #endif
 
-}
-
 opengl_renderer::opengl_renderer (void)
   : toolkit (), xform (), xmin (), xmax (), ymin (), ymax (),
     zmin (), zmax (), xZ1 (), xZ2 (), marker_id (), filled_marker_id (),
     camera_pos (), camera_dir (), interpreter ("none"), txt_renderer ()
 {
   // This constructor will fail if we don't have OpenGL or if the data
   // types we assumed in our public interface aren't compatible with the
   // OpenGL types.
@@ -1645,16 +1643,17 @@ opengl_renderer::draw_axes_z_grid (const
     }
   else
     gh_manager::get_object (props.get_zlabel ()).set ("visible", "off");
 }
 
 void
 opengl_renderer::draw_all_lights (const base_properties& props, std::list<graphics_object>& obj_list)
 {
+#if defined (HAVE_OPENGL)
   Matrix children = props.get_all_children ();
 
   for (octave_idx_type i = children.numel () - 1; i >= 0; i--)
     {
       graphics_object go = gh_manager::get_object (children(i));
 
       if (go.get_properties ().is_visible ())
         {
@@ -1673,16 +1672,27 @@ opengl_renderer::draw_all_lights (const 
                   "exceeded.", max_lights);
             }
           else if (go.isa ("hggroup"))
             draw_all_lights (go.get_properties (), obj_list);
           else
             obj_list.push_back (go);
         }
     }
+#else
+
+  octave_unused_parameter (props);
+  octave_unused_parameter (obj_list);
+
+  // This shouldn't happen because construction of opengl_renderer
+  // objects is supposed to be impossible if OpenGL is not available.
+
+  panic_impossible ();
+
+#endif
 }
 
 void
 opengl_renderer::draw_axes_children (const axes::properties& props)
 {
 #if defined (HAVE_OPENGL)
   // list for non-light child objects
   std::list<graphics_object> obj_list;
