# HG changeset patch
# User Carnë Draug <carandraug@octave.org>
# Date 1412015782 -3600
#      Mon Sep 29 19:36:22 2014 +0100
# Node ID 8ca827e183495a9e8df74acae7f5c9cad3a5272f
# Parent  e0a7718ac085c1f0f7d73aa09b1bc138357c2ce1
fullfile: complete rewrite of the function.

* fullfile.m: complete rewrite of the function for sake of simpler code
(function is down to 3 lines).  Also fixes corner case where a filesep
was used in path parts sequentially, e.g., fullfile ("a/", "/", "/", "b").
Removed input check for when there is no input arguments so that an empty
cell array can be used like "fullfile (empty_cell_array{:})".

diff --git a/scripts/miscellaneous/fullfile.m b/scripts/miscellaneous/fullfile.m
--- a/scripts/miscellaneous/fullfile.m
+++ b/scripts/miscellaneous/fullfile.m
@@ -1,9 +1,9 @@
-## Copyright (C) 2003-2013 John W. Eaton
+## Copyright (C) 2014 Carnë Draug
 ##
 ## This file is part of Octave.
 ##
 ## Octave is free software; you can redistribute it and/or modify it
 ## under the terms of the GNU General Public License as published by
 ## the Free Software Foundation; either version 3 of the License, or (at
 ## your option) any later version.
 ##
@@ -13,48 +13,32 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {@var{filename} =} fullfile (@var{dir1}, @var{dir2}, @dots{}, @var{file})
-## Return a complete filename constructed from the given components.
+## Build complete filename from separate parts.
+##
+## Joins any number of path components intelligently.  The return value
+## is the concatenation of each component with exactly one file separator
+## between each non empty part.
+##
 ## @seealso{fileparts}
 ## @end deftypefn
 
+## Author: Carnë Draug <carandraug@octave.org>
+
 function filename = fullfile (varargin)
 
-  if (nargin > 0)
-    ## Discard all empty arguments
-    varargin(cellfun ("isempty", varargin)) = [];
-    nargs = numel (varargin);
-    if (nargs > 1)
-      filename = varargin{1};
-      if (strcmp (filename(end), filesep))
-        filename(end) = "";
-      endif
-      for i = 2:nargs
-        tmp = varargin{i};
-        if (i < nargs && strcmp (tmp(end), filesep))
-          tmp(end) = "";
-        elseif (i == nargs && strcmp (tmp, filesep))
-          tmp = "";
-        endif
-        filename = [filename filesep tmp];
-      endfor
-    elseif (nargs == 1)
-      filename = varargin{1};
-    else
-      filename = "";
-    endif
-  else
-    print_usage ();
-  endif
+  non_empty = cellfun ("isempty", varargin);
+  filename = strjoin (varargin(! non_empty), filesep);
+  filename(strfind (filename, [filesep filesep])) = "";
 
 endfunction
 
 
 %!shared fs, fsx, xfs, fsxfs, xfsy
 %! fs = filesep ();
 %! fsx = [fs "x"];
 %! xfs = ["x" fs];
@@ -75,8 +59,14 @@ endfunction
 %!assert (fullfile ("", "x", "", "y", ""), xfsy)
 %!assert (fullfile (fs), fs)
 %!assert (fullfile (fs, fs), fs)
 %!assert (fullfile (fs, "x"), fsx)
 %!assert (fullfile (fs, xfs), fsxfs)
 %!assert (fullfile (fsx, fs), fsxfs)
 %!assert (fullfile (fs, "x", fs), fsxfs)
 
+%!assert (fullfile ("a/", "/", "/", "b", "/", "/"), "a/b/")
+%!assert (fullfile ("/", "a/", "/", "/", "b", "/", "/"), "/a/b/")
+%!assert (fullfile ("/a/", "/", "/", "b", "/", "/"), "/a/b/")
+
+## different on purpose so that "fullfile (c{:})" works for empty c
+%!assert (fullfile (), "")
