# HG changeset patch
# User Thorsten Meyer <thorsten.meyier@gmx.de>
# Date 1232811468 -3600
#      Sat Jan 24 16:37:48 2009 +0100
# Node ID 848f7d3e589c07ac356832e7beebbd15ea7c8246
# Parent  27b2db6ff0d7b31edaa725ef51d85457663a32dc
Update the examples for structure arrays in container.txi

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,13 @@
+2009-01-24  Thorsten Meyer  <thorsten@hexe>
+
+	* interpreter/container.txi (Data Structures): Update examples for
+	structure arrays.
+
 2009-01-22  John W. Eaton  <jwe@octave.org>
 
 	* interpreter/io.txi (Terminal Output): Remove @DOCSTRING(ans).
 
 	* vr-idx.txi: Delete.
 	* interpreter/Makefile.in (SUB_SOURCE): Remove it from the list.
 
 2009-01-22  Søren Hauberg  <hauberg@gmail.com>
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -235,34 +235,24 @@ x(2).b = 2
 @end example
 
 @noindent
 which creates a 2-by-1 structure array with two fields. As previously,
 to print the value of the structure array, you can type its name:
 
 @example
 @group
-octave:2> x
+octave:1> x
 x =
 @{
-  a =
-
-  (,
-    [1] = string1
-    [2] = string2
-  ,)
+  1x2 struct array containing the fields:
 
-  b =
-
-  (,
-    [1] =  1
-    [2] =  2
-  ,)
-
-@}
+    a
+    b
+@}  
 @end group
 @end example
 
 Individual elements of the structure array can be returned by indexing
 the variable like @code{@var{x} (1)}, which returns a structure with the
 two fields like
 
 @example
@@ -278,34 +268,57 @@ ans =
 
 Furthermore, the structure array can return a comma separated list
 (@pxref{Comma Separated Lists}), if indexed by one of its own field
 names. For example
 
 @example
 @group
 octave:3> x.a
-ans =
-
-(,
-  [1] = string1
-  [2] = string2
-,)
+ans = string1
+ans = string2
 @end group
 @end example
 
-The function @code{size} with return the size of the structure. For
+Here is another example, using this comma separated list on the
+left-hand side of an assignment:
+
+@example
+@group
+octave:4> [x.a] = deal("new string1", "new string2");
+octave:5> x(1).a
+ans = new string1
+octave:6> x(2).a
+ans = new string2
+@end group
+@end example
+
+Just as for numerical arrays, it is possible to use vectors as indices (@pxref{Index Expressions}):
+
+@example
+@group
+octave:7> x(3:4) = x(1:2);
+octave:8> [x([1,3]).a] = deal("other string1", "other string2");
+octave:9> x.a
+ans = other string1
+ans = new string2
+ans = other string2
+ans = new string2
+@end group
+@end example
+
+The function @code{size} will return the size of the structure. For
 the example above
 
 @example
 @group
-octave:4> size(x)
+octave:10> size(x)
 ans =
 
-   1   2
+   1   4
 @end group
 @end example
 
 Elements can be deleted from a structure array in a similar manner to a
 numerical array, by assigning the elements to an empty matrix. For
 example
 
 @example
