# HG changeset patch
# User Torsten <mttl@mailbox.org>
# Date 1524342437 -7200
#      Sat Apr 21 22:27:17 2018 +0200
# Branch stable
# Node ID ae0518976e2b529e783fbaec113e01bb8d7ec07c
# Parent  cf8bb17e7193ee01d3a34a428345c76758284ecf
open files in correct order when restoring editor session (bug #53711)

* file-editor.cc (restore_session): use integers instead of string
  for sorting the tabs (avoiding 1 10 11 ... 2 3 ...)

* file-editor.h: struct session data with integer instead of string as index

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -274,19 +274,19 @@ namespace octave
     bool do_index = (session_index.count () == sessionFileNames.count ());
 
     for (int n = 0; n < sessionFileNames.count (); ++n)
       {
         QFileInfo file = QFileInfo (sessionFileNames.at (n));
         if (! file.exists ())
           continue;
 
-        session_data item = { QString (), sessionFileNames.at (n), QString ()};
+        session_data item = { 0, sessionFileNames.at (n), QString ()};
         if (do_index)
-          item.index = session_index.at (n);
+          item.index = session_index.at (n).toInt ();
         if (do_encoding)
           item.encoding = session_encodings.at (n);
 
         s_data << item;
       }
 
     qSort (s_data);
 
diff --git a/libgui/src/m-editor/file-editor.h b/libgui/src/m-editor/file-editor.h
--- a/libgui/src/m-editor/file-editor.h
+++ b/libgui/src/m-editor/file-editor.h
@@ -72,17 +72,17 @@ namespace octave
     };
 
     typedef std::map<QString, tab_info>::iterator editor_tab_map_iterator;
     typedef std::map<QString, tab_info>::const_iterator editor_tab_map_const_iterator;
 
     // struct that allows to sort with respect to the tab index
     struct session_data
     {
-      QString index;
+      int index;
       QString file_name;
       QString encoding;
 
       bool operator < (const session_data& other) const
       {
         return index < other.index;
       }
     };
