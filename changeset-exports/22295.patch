# HG changeset patch
# User Rik <rik@octave.org>
# Date 1471230969 25200
#      Sun Aug 14 20:16:09 2016 -0700
# Node ID 12f1d273d22a7293cc8399224e746f48353817ca
# Parent  446b542fd082593daa49195914538368383abf91
maint: Remove trailing spaces from code.

* graphics.cc, help.cc, ov-oncleanup.cc, material.m, __axis_label__.m,
title.m, isocaps.m, reducepatch.m, reducevolume.m:
Remove trailing spaces from code.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4822,18 +4822,18 @@ axes::properties::set_defaults (base_gra
   fontsmoothing = "on";
   fontweight = "normal";
 
   gridalpha = 0.15;
   gridalphamode = "auto";
   gridcolor = color_values (0.15, 0.15, 0.15);
   gridcolormode = "auto";
   gridlinestyle = "-";
-   
-  labelfontsizemultiplier = 1.1; 
+
+  labelfontsizemultiplier = 1.1;
 
   layer = "bottom";
 
   linestyleorder = "-";
   linestyleorderindex = 1.0;
 
   linewidth = 0.5;
 
@@ -4853,18 +4853,18 @@ axes::properties::set_defaults (base_gra
 
   tickdir = "in";
   tickdirmode = "auto";
   ticklabelinterpreter = "tex";
   ticklength = default_axes_ticklength ();
 
   tightinset = Matrix (1, 4, 0.0);
 
-  titlefontsizemultiplier = 1.1; 
-  titlefontweight = "bold"; 
+  titlefontsizemultiplier = 1.1;
+  titlefontweight = "bold";
 
   Matrix tview (1, 2, 0.0);
   tview(1) = 90;
   view = tview;
 
   xaxislocation = "bottom";
 
   xcolor = color_values (0.15, 0.15, 0.15);
diff --git a/libinterp/corefcn/help.cc b/libinterp/corefcn/help.cc
--- a/libinterp/corefcn/help.cc
+++ b/libinterp/corefcn/help.cc
@@ -414,17 +414,17 @@ raw_help_from_docstrings_file (const std
 
           file.unget ();
 
           // Position of beginning of help text.
           std::streampos beg = file.tellg ();
 
           // Skip help text.
           file.ignore (std::numeric_limits<std::streamsize>::max(), 0x1d);
- 
+
           // Position of end of help text.
           std::streamoff len = file.tellg () - beg - 1;
 
           help_txt_map[name] = txt_limits_type (beg, len);
         }
 
       initialized = true;
     }
diff --git a/libinterp/octave-value/ov-oncleanup.cc b/libinterp/octave-value/ov-oncleanup.cc
--- a/libinterp/octave-value/ov-oncleanup.cc
+++ b/libinterp/octave-value/ov-oncleanup.cc
@@ -89,17 +89,17 @@ octave_oncleanup::~octave_oncleanup (voi
 
       warning ("onCleanup: interrupt occurred in cleanup action");
     }
   catch (const octave_execution_exception&)
     {
       std::string msg = last_error_message ();
       warning ("onCleanup: error caught while executing cleanup function:\n%s\n",
                msg.c_str ());
-      
+
     }
   catch (...) // Yes, the black hole.  We're in a d-tor.
     {
       // This shouldn't happen, in theory.
       warning ("onCleanup: internal error: unhandled exception in cleanup action");
     }
 }
 
diff --git a/scripts/plot/appearance/material.m b/scripts/plot/appearance/material.m
--- a/scripts/plot/appearance/material.m
+++ b/scripts/plot/appearance/material.m
@@ -299,16 +299,16 @@ endfunction
 %!error <Invalid call to material> a = material ([.3 .4 .5])
 %!error <Invalid call to material> [a, b] = material ()
 %!error <first argument must be a list of handles> material (-1, "metal")
 %!error <unknown material type 'foo'> material foo
 %!error <incorrect number of elements in material vector> material (-1)
 %!error <incorrect number of elements in material vector> material ([1 2 3 4 5 6])
 %!error <MTYPE must be a named material or a vector> material ({})
 
-%!error <Invalid call to material.> 
+%!error <Invalid call to material.>
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   material (hf);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
diff --git a/scripts/plot/appearance/private/__axis_label__.m b/scripts/plot/appearance/private/__axis_label__.m
--- a/scripts/plot/appearance/private/__axis_label__.m
+++ b/scripts/plot/appearance/private/__axis_label__.m
@@ -31,19 +31,19 @@ function retval = __axis_label__ (hax, c
           "fontname", get (hax, "fontname"),
           "fontunits", get (hax, "fontunits"),   # must precede fontsize
           "fontsize", get (hax, "LabelFontSizeMultiplier") *
                       get (hax, "fontsize"),
           "fontweight", get (hax, "fontweight"),
           "string", txt,
           varargin{:});
 
-  ## FIXME: It would be better to delete only the listener that [xyz]label 
+  ## FIXME: It would be better to delete only the listener that [xyz]label
   ##        installed.  But this didn't work, so instead it deletes all
-  ##        listener's on the [xyz]color property. 
+  ##        listener's on the [xyz]color property.
   dellistener (hax, [caller(1) "color"]);
   addlistener (hax, [caller(1) "color"], {@cb_color, h, caller(1)});
 
   if (nargout > 0)
     retval = h;
   endif
 
 endfunction
diff --git a/scripts/plot/appearance/title.m b/scripts/plot/appearance/title.m
--- a/scripts/plot/appearance/title.m
+++ b/scripts/plot/appearance/title.m
@@ -44,17 +44,17 @@ function h = title (varargin)
     hax = gca ();
   endif
 
   if (rem (nargin, 2) != 1)
     print_usage ();
   endif
 
   htmp = get (hax, "title");
-  
+
   set (htmp, "fontangle", get (hax, "fontangle"),
              "fontname", get (hax, "fontname"),
              "fontunits", get (hax, "fontunits"),   # must precede fontsize
              "fontsize", get (hax, "TitleFontSizeMultiplier") *
                          get (hax, "fontsize"),
              "fontweight", get (hax, "titlefontweight"),
              "string", varargin{1},
              varargin{2:end});
diff --git a/scripts/plot/draw/isocaps.m b/scripts/plot/draw/isocaps.m
--- a/scripts/plot/draw/isocaps.m
+++ b/scripts/plot/draw/isocaps.m
@@ -393,17 +393,17 @@ endfunction
 %! axis equal;
 %! light ();
 
 %!demo
 %! v = smooth3 (rand (6, 8, 4));
 %! isoval = .5;
 %! x = 1:3:22;  y = -14:5:11;  z = linspace (16, 18, 4);
 %! [xx, yy, zz] = meshgrid (x, y, z);
-%! clf; 
+%! clf;
 %! %% two arguments, no output
 %! subplot (2, 2, 1);
 %!  isocaps (v, isoval);
 %!  view (3);
 %! %% five arguments, no output (x, y, z are vectors)
 %! subplot (2, 2, 2);
 %!  isocaps (x, y, z, v, isoval);
 %!  view (3);
@@ -524,17 +524,17 @@ endfunction
 %!                                       "zmin", "b", "verbose");
 %! assert (columns (faces), 3);
 %! assert (columns (vertices), 3);
 %! assert (columns (fvcdata), 1);
 %! assert (rows (vertices), rows (fvcdata));
 
 ## five arguments + three strings (different order), three outputs
 %!test
-%! [faces, vertices, fvcdata] = isocaps (x, y, z, val, iso, 
+%! [faces, vertices, fvcdata] = isocaps (x, y, z, val, iso,
 %!                                       "below", "v", "zmax");
 %! assert (columns (faces), 3);
 %! assert (columns (vertices), 3);
 %! assert (columns (fvcdata), 1);
 %! assert (rows (vertices), rows (fvcdata));
 
 ## test for each error
 %!error isocaps ()
diff --git a/scripts/plot/draw/reducepatch.m b/scripts/plot/draw/reducepatch.m
--- a/scripts/plot/draw/reducepatch.m
+++ b/scripts/plot/draw/reducepatch.m
@@ -196,17 +196,17 @@ function [faces, vertices, max_faces, pa
       error (["reducepatch: If first argument is a matrix containing ", ...
              "FACES, second argument must be a matrix containing VERTICES"]);
     endif
   else
     print_usage ();
   endif
 
   ## get reduction_factor
-  if (nargin - num_string_inputs > i_fv) 
+  if (nargin - num_string_inputs > i_fv)
     reduction_factor = varargin{i_fv + 1};
     if (! isscalar (reduction_factor) || reduction_factor <= 0)
       error ("reducepatch: REDUCTION_FACTOR must be a positive scalar");
     endif
   endif
 
   ## check faces and vertices
   if (columns (vertices) != 3)
diff --git a/scripts/plot/draw/reducevolume.m b/scripts/plot/draw/reducevolume.m
--- a/scripts/plot/draw/reducevolume.m
+++ b/scripts/plot/draw/reducevolume.m
@@ -192,70 +192,70 @@ endfunction
 %!shared v, x, y, z, xx, yy, zz
 %! v = reshape (1:6*8*4, [6 8 4]);
 %! x = 1:3:22;  y = -14:5:11;  z = linspace (16, 18, 4);
 %! [xx, yy, zz] = meshgrid (x, y, z);
 
 ## two inputs, one output
 %!test
 %! nv = reducevolume (v, [4 3 2]);
-%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124]; 
+%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124];
 %! assert (nv, nv_expected);
 
 ## two inputs, four outputs
 %!test
 %! [nx, ny, nz, nv] = reducevolume (v, [4 3 2]);
 %! nx_expected(1:2,1,1:2) = 1;  nx_expected(:,2,:) = 5;
 %! ny_expected(1,1:2,1:2) = 1;  ny_expected(2,:,:) = 4;
 %! nz_expected(1:2,1:2,1) = 1;  nz_expected(:,:,2) = 3;
-%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124]; 
+%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124];
 %! assert (nx, nx_expected);
 %! assert (ny, ny_expected);
 %! assert (nz, nz_expected);
 %! assert (nv, nv_expected);
 
 ## five inputs, one output
 %!test
 %! nv = reducevolume (x, y, z, v, [4 3 2]);
-%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124]; 
+%! nv_expected = [1 25; 4 28];  nv_expected(:,:,2) = [97 121; 100 124];
 %! assert (nv, nv_expected);
 
 ## five inputs, four outputs (coordinates are vectors)
 %!test
 %! [nx, ny, nz, nv] = reducevolume (x, y, z, v, [4 3 2]);
 %! nx_expected(1:2,1,1:2) = x(1); nx_expected(:,2,:) = x(5);
 %! ny_expected(1,1:2,1:2) = y(1); ny_expected(2,:,:) = y(4);
 %! nz_expected(1:2,1:2,1) = z(1); nz_expected(:,:,2) = z(3);
-%! nv_expected = [1 25; 4 28]; nv_expected(:,:,2) = [97 121; 100 124]; 
+%! nv_expected = [1 25; 4 28]; nv_expected(:,:,2) = [97 121; 100 124];
 %! assert (nx, nx_expected);
 %! assert (ny, ny_expected);
 %! assert (nz, nz_expected);
 %! assert (nv, nv_expected);
 
 ## five inputs, four outputs (coordinates are matrices)
 %!test
 %! [nx, ny, nz, nv] = reducevolume (xx, yy, zz, v, [4 3 2]);
 %! nx_expected(1:2,1,1:2) = x(1); nx_expected(:,2,:) = x(5);
 %! ny_expected(1,1:2,1:2) = y(1); ny_expected(2,:,:) = y(4);
 %! nz_expected(1:2,1:2,1) = z(1); nz_expected(:,:,2) = z(3);
-%! nv_expected = [1 25; 4 28]; nv_expected(:,:,2) = [97 121; 100 124]; 
+%! nv_expected = [1 25; 4 28]; nv_expected(:,:,2) = [97 121; 100 124];
 %! assert (nx, nx_expected);
 %! assert (ny, ny_expected);
 %! assert (nz, nz_expected);
 %! assert (nv, nv_expected);
 
 ## five inputs, four outputs (coordinates are matrices, R is scalar)
 %!test
 %! [nx, ny, nz, nv] = reducevolume (xx, yy, zz, v, 3);
 %! nx_expected(1:2,1,1:2) = x(1); nx_expected(:,2,:) = x(4);
 %! nx_expected(:,3,:) = x(7);
 %! ny_expected(1,1:3,1:2) = y(1); ny_expected(2,:,:) = y(4);
 %! nz_expected(1:2,1:3,1) = z(1); nz_expected(:,:,2) = z(4);
 %! nv_expected = [1 19 37; 4 22 40];
-%! nv_expected(:,:,2) = [145 163 181; 148 166 184]; 
+%! nv_expected(:,:,2) = [145 163 181; 148 166 184];
 %! assert (nx, nx_expected);
 %! assert (ny, ny_expected);
 %! assert (nz, nz_expected);
 %! assert (nv, nv_expected);
 
 ## Test for each error
 %!test
 %!error reducevolume ()
