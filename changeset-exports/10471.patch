# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1269710634 -3600
#      Sat Mar 27 18:23:54 2010 +0100
# Node ID bcabc1c4f20c0244793a31f60261b2a3f5a2a575
# Parent  9500a66118dcd4e68ed532341a224ff57959a620
Add detection of OpenMP support to configure. Disabled by default

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-27  David Bateman  <dbateman@free.fr>
+
+	* acinclude.m4 (OCTAVE_CHECK_OPENMP): Macro to check for OpenMP support
+	* configure.ac: Use it here. Disable OpenMP support by default
+
 2010-03-25  John W. Eaton  <jwe@octave.org>
 
 	* bootstrap.conf (gnulib_modules): Sort the list.
 
 2010-03-25  Jaroslav Hajek  <highegg@gmail.com>
 
 	* bootstrap.conf: Include roundf, trunc, truncf.
 
diff --git a/acinclude.m4 b/acinclude.m4
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -1060,16 +1060,45 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 octave_cv_glutesscallback_threedots="yes", octave_cv_glutesscallback_threedots="no")])
 AC_LANG_POP(C++)
 if test $octave_cv_glutesscallback_threedots = "yes"; then
   AC_DEFINE(HAVE_GLUTESSCALLBACK_THREEDOTS, 1, 
     [Define if gluTessCallback is called with (...)])
 fi
 ])
 dnl
+dnl Check for support of OpenMP with a given compiler flag. If
+dnl found define HAVE_OPENMP and add the compile flag to CFLAGS
+dnl and CXXFLAGS.
+dnl
+AC_DEFUN([OCTAVE_CHECK_OPENMP],
+[AC_MSG_CHECKING([for support of OpenMP])
+XCFLAGS="$CFLAGS"
+CFLAGS="$CFLAGS $1"
+AC_CACHE_VAL(octave_cv_check_openmp,[
+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#include <omp.h>
+#include <stdio.h>
+]], [[
+int main(int argc, char* argv[])
+{
+  _Pragma("omp parallel")  
+  printf("Hello, world.\n");
+  return 0;
+}
+]])],octave_cv_openmp=yes, octave_cv_openmmp=no, octave_cv_openmp=no)])
+AC_MSG_RESULT($octave_cv_openmp)
+if test "$octave_cv_openmp" = yes; then
+  AC_DEFINE(HAVE_OPENMP,1,[Define if compiler supports OpenMP])
+  CXXFLAGS="$CXXFLAGS $1"
+else
+  CFLAGS="$XCFLAGS"
+fi
+])
+dnl
 dnl Configure paths for FreeType2
 dnl Marcelo Magallon 2001-10-26, based on gtk.m4 by Owen Taylor
 dnl
 dnl Copyright 2001, 2003 by
 dnl David Turner, Robert Wilhelm, and Werner Lemberg.
 dnl
 dnl This file is part of the FreeType project, and may only be used, modified,
 dnl and distributed under the terms of the FreeType project license,
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -422,16 +422,36 @@ case "$canonical_host_type" in
     OCTAVE_CC_FLAG(-mminimal-toc, [
       XTRA_CFLAGS="$XTRA_CFLAGS -mminimal-toc"])
 
     OCTAVE_CXX_FLAG(-mminimal-toc, [
       XTRA_CXXFLAGS="$XTRA_CXXFLAGS -mminimal-toc"])
   ;;
 esac
 
+## Test whether the compiler supports OpenMP. Experimental so disable by 
+## default. Enable it with the flag --enable-openmp
+USE_OPENMP=false
+AC_ARG_ENABLE(openmp,
+  [AS_HELP_STRING([--enable-openmp],
+     [(EXPERIMENTAL) use OpenMP SMP multi-threading])],
+  [if test "$enableval" = yes; then USE_OPENMP=true; fi], [])
+if $USE_OPENMP; then
+  case "$canonical_host_type" in
+    *-*-mingw* | *-*-cygwin* | *-*-gnu*)
+    OCTAVE_CHECK_OPENMP(-fopenmp)
+    ;;
+    *-*-msdosmsvc)
+    ## FIXME is this the right flag for MSVC?
+    OCTAVE_CHECK_OPENMP(-openmp)
+    ;;
+    ## Add other compilers supporting OpenMP here
+  esac
+fi
+
 AC_SUBST(XTRA_CFLAGS)
 AC_SUBST(XTRA_CXXFLAGS)
 
 ## Avoid #define of min/max from windows.h header
 if test "$have_msvc" = "yes"; then
   AC_DEFINE(NOMINMAX, 1, [Define if you want to avoid min/max macro definition in Windows headers])
 fi
 
@@ -2309,16 +2329,29 @@ if $USE_64_BIT_IDX_T; then
   AC_MSG_WARN([you use another compiler, you will need to set this])
   AC_MSG_WARN([variable on the configure command line.  You must also])
   AC_MSG_WARN([compile the ARPACK, BLAS, LAPACK, QRUPDATE, and SuiteSparse])
   AC_MSG_WARN([libraries to use 8 byte signed integers for array indexing.])
   AC_MSG_WARN([])
   warn_msg_printed=true
 fi
 
+if $USE_OPENMP; then
+  AC_MSG_WARN([])
+  AC_MSG_WARN([You used the EXPERIMENTAL --enable-openmp option.])
+  AC_MSG_WARN([Are you sure that is what you want to do?])
+  AC_MSG_WARN([])
+  AC_MSG_WARN([This option enables experimental SMP multithreding])
+  AC_MSG_WARN([code that has had very little testing. There is no])
+  AC_MSG_WARN([certainity that the results returned by Octave with])
+  AC_MSG_WARN([this option enabled will be correct.])
+  AC_MSG_WARN([])
+  warn_msg_printed=true
+fi
+
 native_graphics=true
 if test -n "$warn_freetype"; then
   AC_MSG_WARN([$warn_freetype])
   native_graphics=false
   warn_msg_printed=true
 fi
 
 if test -n "$warn_fontconfig"; then
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-27  David Bateman  <dbateman@free.fr>
+
+	* oct-openmp.h: New file.
+	* Makefile.am (INCS): Add it here.
+
 2010-03-26  Jaroslav Hajek  <highegg@gmail.com>
 
 	* Sparse.cc (Sparse<T>::index (const idx_vector&, const idx_vector&, bool)):
 	Specialize for contiguous row range, row permutation, and implement
 	general case through double index-transpose.
 
 2010-03-25  John W. Eaton  <jwe@octave.org>
 
diff --git a/liboctave/Makefile.am b/liboctave/Makefile.am
--- a/liboctave/Makefile.am
+++ b/liboctave/Makefile.am
@@ -218,16 +218,17 @@ INCS = \
   oct-fftw.h \
   oct-group.h \
   oct-inttypes.h \
   oct-locbuf.h \
   oct-md5.h \
   oct-mem.h \
   oct-mutex.h \
   oct-norm.h \
+  oct-openmp.h \
   oct-passwd.h \
   oct-rand.h \
   oct-rl-edit.h \
   oct-rl-hist.h \
   oct-shlib.h \
   oct-sort.h \
   oct-sparse.h \
   oct-spparms.h \
diff --git a/liboctave/oct-openmp.h b/liboctave/oct-openmp.h
new file mode 100644
--- /dev/null
+++ b/liboctave/oct-openmp.h
@@ -0,0 +1,34 @@
+/*
+
+Copyright (C) 2010 David Bateman
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#if !defined (octave_openmp_h)
+#define octave_openmp_h 1
+
+/* A macro to make using OpenMP easier, and easier to disable */
+#ifdef HAVE_OPENMP
+#include <omp.h>
+#define OCTAVE_OMP_PRAGMA(x) _Pragma (#x)
+#else
+#define OCTAVE_OMP_PRAGMA(x)
+#endif
+
+#endif
