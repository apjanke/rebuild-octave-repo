# HG changeset patch
# User jwe
# Date 1074888276 0
#      Fri Jan 23 20:04:36 2004 +0000
# Node ID 14dc2267c343ea99dd09f8b4d7f22a1fb0d85689
# Parent  fa612b2cbfe91c067a6a0d2145b957fc32b67d0c
[project @ 2004-01-23 20:04:35 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,14 @@
+2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* configure.in (AH_BOTTOM):
+	Define OCTAVE_LOCAL_BUFFER using vector<T> instead of auto_ptr.
+	Suggested by Paul Thomas <Paul.Thomas@jet.efda.org>
+
 2004-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* octMakefile.in (maintainer-clean, distclean):
 	Remove Makefile and autom4te.cache.
 
 2004-01-14  David Bateman  <dbateman@free.fr>
 
 	* configure.in: Test for the presence of the function 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.442 $)
+AC_REVISION($Revision: 1.443 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
 OCTAVE_HOST_TYPE
 
@@ -1425,25 +1425,30 @@ typedef int sig_atomic_t;
 #define OCTAVE_USE_WINDOWS_API 1
 #endif
 
 /* sigsetjmp is a macro, not a function. */
 #if defined (sigsetjmp) && defined (HAVE_SIGLONGJMP)
 #define OCTAVE_HAVE_SIG_JUMP
 #endif
 
-/* Always use new, since we sometimes allocate large chunks of memory
-   and that can cause trouble due to stack size limits.
+/* Always use vector<T>, since we sometimes allocate large chunks
+   of memory and that can cause trouble due to stack size limits.
+
+   Note that using auto_ptr is not appropriate because it uses delete,
+   not delete[] and we need the latter to properly handle arrays
+   allocated with new[size].
+
 #if defined (HAVE_DYNAMIC_AUTO_ARRAYS)
 #define OCTAVE_LOCAL_BUFFER(T, buf, size) \
   T buf[size]
 #else */
 #define OCTAVE_LOCAL_BUFFER(T, buf, size) \
-  std::auto_ptr<T> buf ## _auto_ptr (new T [size]); \
-  T *buf = buf ## _auto_ptr.get ()
+  std::vector<T> buf ## _vector (size); \
+  T *buf = &(buf ## _vector[0])
 /* #endif */
 
 #if defined (__DECCXX)
 #define __USE_STD_IOSTREAM
 #endif
 
 #if defined (_UNICOS)
 #define F77_USES_CRAY_CALLING_CONVENTION
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,10 +1,13 @@
 2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* file-ops.cc: Include <vector> instead of <memory> for new
+	definition of OCTAVE_LOCAL_BUFFER.
+
 	* EIG.cc, EIG.h (EIG::init, EIG::symmetric_init, EIG::hermitian_init):
 	New arg, calc_eigenvectors.
 	* EIG.h (EIG:EIG): New optional arg, calc_eigenvectors.
 	Based on patch from David Bateman <dbateman@free.fr>.
 
 2004-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Array.cc (Array<T>::assign2, Array<T>::assignN):
diff --git a/liboctave/file-ops.cc b/liboctave/file-ops.cc
--- a/liboctave/file-ops.cc
+++ b/liboctave/file-ops.cc
@@ -25,17 +25,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <cerrno>
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
 
 #include <iostream>
-#include <memory>
+#include <vector>
 
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
 #endif
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,17 @@
 2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov-bool.cc, ov-cx-mat.cc, ov-re-mat.cc, ov-str-mat.cc:
+	Include <vector>.
+	* file-io.cc, ls-hdf5.cc, ls-mat4.cc, ls-mat5.cc, ls-oct-binary.cc:
+	Include <vector>, not <memory> for new defn of OCTAVE_LOCAL_BUFFER.
+	* load-save.cc, ls-mat-ascii.cc, ls-oct-ascii.cc
+	No need to include <memory> now.
+
 	* DLD-FUNCTIONS/eig.cc (Feig): Use new optional arg for EIG to
 	avoid computing eigenvectors if not requested.
 	Based on a patch from David Bateman  <dbateman@free.fr>.
 
 2004-01-23  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* ov-cell.cc (all_strings): Always compute total required length
 	of retval.
diff --git a/src/file-io.cc b/src/file-io.cc
--- a/src/file-io.cc
+++ b/src/file-io.cc
@@ -37,17 +37,17 @@ Software Foundation, 59 Temple Place - S
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <climits>
 #include <cerrno>
 
 #include <iostream>
-#include <memory>
+#include <vector>
 
 #ifdef HAVE_UNISTD_H
 #ifdef HAVE_SYS_TYPES_H
 #include <sys/types.h>
 #endif
 #include <unistd.h>
 #endif
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -30,17 +30,16 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
 
 #ifdef HAVE_HDF5
 #include <hdf5.h>
 #endif
 
 #include "byte-swap.h"
 #include "data-conv.h"
diff --git a/src/ls-hdf5.cc b/src/ls-hdf5.cc
--- a/src/ls-hdf5.cc
+++ b/src/ls-hdf5.cc
@@ -30,18 +30,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
+#include <vector>
 
 #include <hdf5.h>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
diff --git a/src/ls-mat-ascii.cc b/src/ls-mat-ascii.cc
--- a/src/ls-mat-ascii.cc
+++ b/src/ls-mat-ascii.cc
@@ -26,17 +26,16 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "lo-sstream.h"
diff --git a/src/ls-mat4.cc b/src/ls-mat4.cc
--- a/src/ls-mat4.cc
+++ b/src/ls-mat4.cc
@@ -26,18 +26,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
+#include <vector>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "lo-sstream.h"
 #include "mach-info.h"
diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -28,18 +28,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
+#include <vector>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "lo-sstream.h"
 #include "mach-info.h"
diff --git a/src/ls-oct-ascii.cc b/src/ls-oct-ascii.cc
--- a/src/ls-oct-ascii.cc
+++ b/src/ls-oct-ascii.cc
@@ -27,17 +27,16 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "lo-sstream.h"
diff --git a/src/ls-oct-binary.cc b/src/ls-oct-binary.cc
--- a/src/ls-oct-binary.cc
+++ b/src/ls-oct-binary.cc
@@ -26,18 +26,18 @@ Software Foundation, 59 Temple Place - S
 
 #include <cfloat>
 #include <cstring>
 #include <cctype>
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
-#include <memory>
 #include <string>
+#include <vector>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "file-ops.h"
 #include "glob-match.h"
 #include "lo-mappers.h"
 #include "lo-sstream.h"
 #include "mach-info.h"
diff --git a/src/ov-bool-mat.cc b/src/ov-bool-mat.cc
--- a/src/ov-bool-mat.cc
+++ b/src/ov-bool-mat.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
+#include <vector>
 
 #include "lo-ieee.h"
 #include "mx-base.h"
 
 #include "gripes.h"
 #include "oct-obj.h"
 #include "ops.h"
 #include "ov-base.h"
diff --git a/src/ov-cx-mat.cc b/src/ov-cx-mat.cc
--- a/src/ov-cx-mat.cc
+++ b/src/ov-cx-mat.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
+#include <vector>
 
 #include "lo-ieee.h"
 #include "mx-base.h"
 
 #include "gripes.h"
 #include "oct-obj.h"
 #include "ops.h"
 #include "ov-base.h"
diff --git a/src/ov-re-mat.cc b/src/ov-re-mat.cc
--- a/src/ov-re-mat.cc
+++ b/src/ov-re-mat.cc
@@ -26,16 +26,17 @@ Software Foundation, 59 Temple Place - S
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <climits>
 
 #include <iostream>
+#include <vector>
 
 #include "lo-ieee.h"
 #include "lo-utils.h"
 #include "mx-base.h"
 #include "quit.h"
 
 #include "gripes.h"
 #include "oct-obj.h"
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -24,16 +24,17 @@ Software Foundation, 59 Temple Place - S
 #pragma implementation
 #endif
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include <iostream>
+#include <vector>
 
 #include "lo-ieee.h"
 #include "mx-base.h"
 
 #include "oct-obj.h"
 #include "ops.h"
 #include "ov-re-mat.h"
 #include "ov-str-mat.h"
