# HG changeset patch
# User Rafael Laboissiere <rafael@laboissiere.net>
# Date 1453890178 -3600
#      Wed Jan 27 11:22:58 2016 +0100
# Branch stable
# Node ID a3362dd2dd52ce5a3353d0dcae733242ec774d1f
# Parent  ba3c66f4e1cad05a3ca1e92ef056756170f35b85
doc: fix spelling of "unknown".

* etc/OLD-ChangeLogs/doc-ChangeLog, libinterp/dldfcn/__magick_read__.cc,
scripts/image/private/__imwrite__.m: fix spelling of "unknown".

diff --git a/etc/OLD-ChangeLogs/doc-ChangeLog b/etc/OLD-ChangeLogs/doc-ChangeLog
--- a/etc/OLD-ChangeLogs/doc-ChangeLog
+++ b/etc/OLD-ChangeLogs/doc-ChangeLog
@@ -1850,17 +1850,17 @@ 2008-02-19  Carlo de Falco  <kingcrimson
 
 2008-01-18  Ben Abbott  <bpabbott@mac.com>
 
 	* interpreter/intro.txi: Replaced reference to deprecated
 	function struct_elements with filenames.
 
 2008-02-08  Rafael Laboissiere  <rafael@debian.org>
 
-	* interpreter/octave.1: Dropped unknow LO macro
+	* interpreter/octave.1: Dropped unknown LO macro
 	* interpreter/octave-bug.1: Likewise
 
 2008-02-07  David Bateman  <dbateman@free.fr>
 
 	* interpreter/sparse.txi: Remove references to spkron.
 
 2008-02-06  John W. Eaton  <jwe@octave.org>
 
diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/dldfcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/dldfcn/__magick_read__.cc
@@ -142,17 +142,17 @@ get_region_range (const octave_value& re
   if (region.is_range ())
     output = region.range_value ();
   else if (region.is_scalar_type ())
     {
       double value = region.scalar_value ();
       output = Range (value, value);
     }
   else
-    error ("__magick_read__: unknow datatype for Region option");
+    error ("__magick_read__: unknown datatype for Region option");
 
   return output;
 }
 
 static std::map<std::string, octave_idx_type>
 calculate_region (const octave_scalar_map& options)
 {
   std::map<std::string, octave_idx_type> region;
diff --git a/scripts/image/private/__imwrite__.m b/scripts/image/private/__imwrite__.m
--- a/scripts/image/private/__imwrite__.m
+++ b/scripts/image/private/__imwrite__.m
@@ -95,17 +95,17 @@ function __imwrite__ (img, varargin)
         elseif (! iscell (options.disposalmethod))
           options.disposalmethod = {options.disposalmethod};
         endif
         options.disposalmethod = tolower (options.disposalmethod);
         matches = ismember (options.disposalmethod,
                             {"donotspecify", "leaveinplace", ...
                              "restorebg", "restoreprevious"});
         if (any (! matches))
-          error ("imwrite: unknow method %s for option %s",
+          error ("imwrite: unknown method %s for option %s",
                  options.disposalmethod{find (! matches, 1)},
                  param_list{idx});
         endif
         if (isscalar (options.disposalmethod))
           options.disposalmethod = repmat (options.disposalmethod, ...
                                            1, size (img, 4));
         elseif (numel (options.disposalmethod) != size (img, 4))
           error ("imwrite: if value %s is a cell array must have same length as number of frames",
