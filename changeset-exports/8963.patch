# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1236892094 14400
#      Thu Mar 12 17:08:14 2009 -0400
# Node ID d1eab3ddb02d054b7e598f9cb520e2e69e82b67a
# Parent  985792c9e0dad1de126058054e13b5fa102e9f86
oct-inttypes.h (bitshift): apply mask even if not shifting

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-12  John W. Eaton  <jwe@octave.org>
+
+	* oct-inttypes.h (bitshift): Apply mask even if not shifting.
+	From Seb Astien <se6astien2@googlemail.com>.
+
 2009-03-11  Jaroslav Hajek  <highegg@gmail.com>
 
 	* PermMatrix.cc (PermMatrix::power): New method.
 	* PermMatrix.h: Declare it.
 
 2009-03-11  Jaroslav Hajek  <highegg@gmail.com>
 
 	* dNDArray.cc (NDArray::NDArray (const charNDArray&)): New
diff --git a/liboctave/oct-inttypes.h b/liboctave/oct-inttypes.h
--- a/liboctave/oct-inttypes.h
+++ b/liboctave/oct-inttypes.h
@@ -958,17 +958,17 @@ octave_int<T>
 bitshift (const octave_int<T>& a, int n,
 	  const octave_int<T>& mask = std::numeric_limits<T>::max ())
 {
   if (n > 0)
     return (a << n) & mask;
   else if (n < 0)
     return (a >> -n) & mask;
   else
-    return a;
+    return a & mask;
 }
 
 typedef octave_int<int8_t> octave_int8;
 typedef octave_int<int16_t> octave_int16;
 typedef octave_int<int32_t> octave_int32;
 typedef octave_int<int64_t> octave_int64;
 
 typedef octave_int<uint8_t> octave_uint8;
