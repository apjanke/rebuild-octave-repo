# HG changeset patch
# User Juan Pablo Carbajal <ajuanpi+dev@gmail.com>
# Date 1351198946 14400
#      Thu Oct 25 17:02:26 2012 -0400
# Node ID 8ed107220a3ea8f6187a9fefd6d0e0d3320af386
# Parent  305ad0a215baffb270ef92033d551f29da922aac
maint: Rename unimplemented.m to __unimplemented__.m.

* resource-manager.cc(octave_keywords): Change unimplemented.m to
__unimplemented__.m.

* variables.cc: Change variable Vmissing_function_hook to __unimplemented__.

* scripts/help/module.mk: Change unimplemented.m to __unimplemented__.m in
list of FCN_FILES.

diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -306,16 +306,17 @@ resource_manager::octave_keywords (void)
       "__pchip_deriv__ "
       "__plt_get_axis_arg__ "
       "__print_parse_opts__ "
       "__qp__ "
       "__request_drawnow__ "
       "__sort_rows_idx__ "
       "__strip_html_tags__ "
       "__token_count__ "
+      "__unimplemented__ "
       "__varval__ "
       "__version_info__ "
       "__voronoi__ "
       "__which__ "
       "abs "
       "accumarray "
       "accumdim "
       "acos "
@@ -1633,17 +1634,16 @@ resource_manager::octave_keywords (void)
       "unidcdf "
       "unidinv "
       "unidpdf "
       "unidrnd "
       "unifcdf "
       "unifinv "
       "unifpdf "
       "unifrnd "
-      "unimplemented "
       "union "
       "unique "
       "unix "
       "unlink "
       "unmark_command "
       "unmark_rawcommand "
       "unmkpp "
       "unpack "
diff --git a/libinterp/interpfcn/variables.cc b/libinterp/interpfcn/variables.cc
--- a/libinterp/interpfcn/variables.cc
+++ b/libinterp/interpfcn/variables.cc
@@ -2531,17 +2531,17 @@ When called from inside a function with 
 changed locally for the function and any subroutines it calls.  The original\n\
 variable value is restored when exiting the function.\n\
 @seealso{whos}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (whos_line_format);
 }
 
-static std::string Vmissing_function_hook = "unimplemented";
+static std::string Vmissing_function_hook = "__unimplemented__";
 
 DEFUN (missing_function_hook, args, nargout,
     "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} missing_function_hook ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} missing_function_hook (@var{new_val})\n\
 @deftypefnx {Built-in Function} {} missing_function_hook (@var{new_val}, \"local\")\n\
 Query or set the internal variable that specifies the function to call when\n\
 an unknown identifier is requested.\n\
diff --git a/scripts/help/unimplemented.m b/scripts/help/__unimplemented__.m
rename from scripts/help/unimplemented.m
rename to scripts/help/__unimplemented__.m
--- a/scripts/help/unimplemented.m
+++ b/scripts/help/__unimplemented__.m
@@ -25,17 +25,17 @@
 ##
 ## This function is not called by users, but by the Octave interpreter when
 ## it fails to recognize an input string as a valid function name.  See
 ## @code{missing_function_hook} for using a different handler for this event.
 ## @seealso{missing_function_hook}
 ## @end deftypefn
 
 
-function txt = unimplemented (fcn)
+function txt = __unimplemented__ (fcn)
 
   if (nargin != 1)
     print_usage ();
   endif
 
   is_matlab_function = true;
 
   ## Some smarter cases, add more as needed.
@@ -416,14 +416,14 @@ function list = missing_functions ()
   "xmlwrite",
   "xslt",
   "zoom",
   };
 endfunction
 
 
 %!test
-%! str = unimplemented ("no_name_function");
+%! str = __unimplemented__ ("no_name_function");
 %! assert (isempty (str));
-%! str = unimplemented ("quad2d");
+%! str = __unimplemented__ ("quad2d");
 %! assert (str(1:51), "quad2d is not implemented.  Consider using dblquad.");
-%! str = unimplemented ("MException");
+%! str = __unimplemented__ ("MException");
 %! assert (str(1:58), "the 'MException' function is not yet implemented in Octave");
diff --git a/scripts/help/module.mk b/scripts/help/module.mk
--- a/scripts/help/module.mk
+++ b/scripts/help/module.mk
@@ -1,24 +1,24 @@
 FCN_FILE_DIRS += help
 
 help_PRIVATE_FCN_FILES = \
   help/private/__additional_help_message__.m \
   help/private/__strip_html_tags__.m
 
 help_FCN_FILES = \
   help/__makeinfo__.m \
+  help/__unimplemented__.m \
   help/doc.m \
   help/gen_doc_cache.m \
   help/get_first_help_sentence.m \
   help/help.m \
   help/lookfor.m \
   help/print_usage.m \
   help/type.m \
-  help/unimplemented.m \
   help/which.m \
   $(help_PRIVATE_FCN_FILES)
 
 FCN_FILES += $(help_FCN_FILES)
 
 PKG_ADD_FILES += help/PKG_ADD
 
 DIRSTAMP_FILES += help/$(octave_dirstamp)
