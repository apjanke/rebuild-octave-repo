# HG changeset patch
# User jwe
# Date 1023128147 0
#      Mon Jun 03 18:15:47 2002 +0000
# Node ID 635209a37bf4972668adaaae557f193c896271c6
# Parent  b2133db551dd60fbc5c226c63c0c2bbe7e8356a4
[project @ 2002-06-03 18:15:47 by jwe]

diff --git a/src/ov-struct.cc b/src/ov-struct.cc
--- a/src/ov-struct.cc
+++ b/src/ov-struct.cc
@@ -374,61 +374,79 @@ octave_struct::print_raw (std::ostream& 
   // XXX FIXME XXX -- would be nice to print the output in some
   // standard order.  Maybe all substructures first, maybe
   // alphabetize entries, etc.
 
   unwind_protect::begin_frame ("octave_struct_print");
 
   unwind_protect_int (Vstruct_levels_to_print);
 
-  if (Vstruct_levels_to_print-- > 0)
+  if (Vstruct_levels_to_print >= 0)
     {
+      bool print_keys_only = (Vstruct_levels_to_print == 0);
+
+      Vstruct_levels_to_print--;
+
       indent (os);
       os << "{";
       newline (os);
 
       increment_indent_level ();
 
       int n = map.array_length ();
 
       for (Pix p = map.first (); p; map.next (p))
 	{
 	  std::string key = map.key (p);
 	  octave_value_list val = map.contents (p);
 
-	  if (n == 1)
-	    val(0).print_with_name (os, key);
-	  else
+	  octave_value tmp = (n == 1) ? val(0) : octave_list (val);
+
+	  if (print_keys_only)
 	    {
-	      octave_list tmp (val);
-	      tmp.print_with_name (os, key);
+	      indent (os);
+	      os << key << ": " << tmp.type_name ();
+	      newline (os);
 	    }
+	  else
+	    val(0).print_with_name (os, key);
 	}
 
       decrement_indent_level ();
 
       indent (os);
       os << "}";
       newline (os);
     }
   else
     {
-      os << " <structure>";
+      indent (os);
+      os << "<structure>";
       newline (os);
     }
 
   unwind_protect::run_frame ("octave_struct_print");
 }
 
 bool
 octave_struct::print_name_tag (std::ostream& os, const std::string& name) const
 {
+  bool retval = false;
+
   indent (os);
-  os << name << " =";
-  newline (os);
-  return false;
+
+  if (Vstruct_levels_to_print < 0)
+    os << name << " = ";
+  else
+    {
+      os << name << " =";
+      newline (os);
+      retval = true;
+    }
+
+  return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
diff --git a/src/ov.cc b/src/ov.cc
--- a/src/ov.cc
+++ b/src/ov.cc
@@ -1603,17 +1603,17 @@ resize_on_range_error (void)
 static int
 struct_levels_to_print (void)
 {
   double val;
   if (builtin_real_scalar_variable ("struct_levels_to_print", val)
       && ! xisnan (val))
     {
       int ival = NINT (val);
-      if (ival >= 0 && ival == val)
+      if (ival == val)
 	{
 	  Vstruct_levels_to_print = ival;
 	  return 0;
 	}
     }
   gripe_invalid_value_specified ("struct_levels_to_print");
   return -1;
 }
