# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1389150397 18000
#      Tue Jan 07 22:06:37 2014 -0500
# Branch stable
# Node ID 36057e2411f8285e07b2666027bcbb96a8d37bef
# Parent  450f50d3eb18040376ac8f8d5b33e990f92e0173
test float rcond using float arithmetic in inv function (bug #41065)

* inv.cc (Finv): Test float rcond using float arithmetic.  Use correct
rcond in warning message.

diff --git a/libinterp/corefcn/inv.cc b/libinterp/corefcn/inv.cc
--- a/libinterp/corefcn/inv.cc
+++ b/libinterp/corefcn/inv.cc
@@ -208,33 +208,54 @@ of a sparse matrix if possible.\n\
 
   if (! error_state)
     {
       if (nargout > 1)
         retval(1) = isfloat ? octave_value (frcond) : octave_value (rcond);
 
       retval(0) = result;
 
-      volatile double xrcond = rcond;
-      xrcond += 1.0;
-      if (nargout < 2 && (info == -1 || xrcond == 1.0))
+      bool rcond_plus_one_eq_one = false;
+
+      if (isfloat)
+        {
+          volatile float xrcond = frcond;
+          rcond_plus_one_eq_one = xrcond + 1.0F == 1.0F;
+        }
+      else
+        {
+          volatile double xrcond = rcond;
+          rcond_plus_one_eq_one = xrcond + 1.0 == 1.0;
+        }
+
+      if (nargout < 2 && (info == -1 || rcond_plus_one_eq_one))
         warning ("inverse: matrix singular to machine precision, rcond = %g",
-                 rcond);
+                 (isfloat ? frcond : rcond));
     }
 
   return retval;
 }
 
 /*
 %!assert (inv ([1, 2; 3, 4]), [-2, 1; 1.5, -0.5], sqrt (eps))
 %!assert (inv (single ([1, 2; 3, 4])), single ([-2, 1; 1.5, -0.5]), sqrt (eps ("single")))
 
 %!error inv ()
 %!error inv ([1, 2; 3, 4], 2)
 %!error <argument must be a square matrix> inv ([1, 2; 3, 4; 5, 6])
+
+%!test
+%! [xinv, rcond] = inv (single ([1,2;3,4]));
+%! assert (isa (xinv, 'single'));
+%! assert (isa (rcond, 'single'));
+
+%!test
+%! [xinv, rcond] = inv ([1,2;3,4]);
+%! assert (isa (xinv, 'double'));
+%! assert (isa (rcond, 'double'));
 */
 
 // FIXME: this should really be done with an alias, but
 // alias_builtin() won't do the right thing if we are actually using
 // dynamic linking.
 
 DEFUN (inverse, args, nargout,
        "-*- texinfo -*-\n\
