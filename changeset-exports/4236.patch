# HG changeset patch
# User jwe
# Date 1040785611 0
#      Wed Dec 25 03:06:51 2002 +0000
# Node ID a01ea6c855a3d6eed14392984b11ddde9eaa91d7
# Parent  23bb43fc1184fda1de5338b8e3d7028765fc7dcd
[project @ 2002-12-25 03:06:51 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2002-12-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* parse.y (postfix_expr): Reset	lexer_flags.looking_at_object_index
+	in () and {} cases too.
+
 	* ov-usr-fcn.cc (clear_symbol_table): Clear variables only.
 
 2002-12-21  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* pt-arg-list.cc (indexed_object, indexed_position):
 	New file-scope static variables.
 	(tree_argument_list::convert_to_const_vector): New arg, object.
 	Protect and set indexed_object and indexed_position.
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -707,24 +707,30 @@ indirect_ref_op	: '.'
 
 begin_obj_idx	: // empty
 		  { lexer_flags.looking_at_object_index = true; }
 		;
 
 postfix_expr	: primary_expr
 		  { $$ = $1; }
 		| postfix_expr '(' begin_obj_idx ')'
-		  { $$ = make_index_expression ($1, 0, '('); }
+		  {
+		    $$ = make_index_expression ($1, 0, '(');
+		    lexer_flags.looking_at_object_index = false;
+		  }
 		| postfix_expr '(' begin_obj_idx arg_list ')'
 		  {
 		    $$ = make_index_expression ($1, $4, '(');
 		    lexer_flags.looking_at_object_index = false;
 		  }
 		| postfix_expr '{' begin_obj_idx '}'
-		  { $$ = make_index_expression ($1, 0, '{'); }
+		  {
+		    $$ = make_index_expression ($1, 0, '{');
+		    lexer_flags.looking_at_object_index = false;
+		  }
 		| postfix_expr '{' begin_obj_idx arg_list '}'
 		  {
 		    $$ = make_index_expression ($1, $4, '{');
 		    lexer_flags.looking_at_object_index = false;
 		  }
 		| postfix_expr PLUS_PLUS
 		  { $$ = make_postfix_op (PLUS_PLUS, $1, $2); }
 		| postfix_expr MINUS_MINUS
