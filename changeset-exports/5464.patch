# HG changeset patch
# User jwe
# Date 1127424699 0
#      Thu Sep 22 21:31:39 2005 +0000
# Node ID 9d0aab486882abb62e24d3f92c35f3e4484c7cfe
# Parent  ab7973a599cfac56718907910aeb756866457a80
[project @ 2005-09-22 21:31:39 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2005-09-22  John W. Eaton  <jwe@octave.org>
+
+	* polynomial/residue.m: Use logical indexing instead of find..
+
+2005-09-22  Julius Smith  <jos@ccrma.stanford.edu>
+
+	* polynomial/residue.m: Avoid division by zero for pure imaginary
+	and zero poles.
+
 2005-09-22  Bill Denney  <denney@seas.upenn.edu>
 
 	* strings/deblank.m: Handle cell arrays.
 	* strings/split.m: New argument, N, to limit number of splits.
 
 2005-09-22  Miroslaw Kwasniak  <mirek@zind.ikem.pwr.wroc.pl>
 
 	* plot/__pltopt1__.m: Handle plot colors "w" and "k" separately.
diff --git a/scripts/polynomial/residue.m b/scripts/polynomial/residue.m
--- a/scripts/polynomial/residue.m
+++ b/scripts/polynomial/residue.m
@@ -200,29 +200,24 @@ function [r, p, k, e] = residue (b, a, t
     return;
   endif
 
   ## Find the poles.
 
   p = roots (a);
   lp = length (p);
 
+  ## Determine if the poles are (effectively) zero.
 
-  ## Determine if the poles are (effectively) zero.
-  index = find (abs (p) < toler);
-  if (length (index) != 0)
-    p (index) = 0;
-  endif
+  p(abs (p) < toler) = 0;
 
   ## Determine if the poles are (effectively) real.
 
-  index = find (abs(p)>=toler && ( abs(imag(p)) ./ abs(p) < toler ));
-  if (length (index) != 0)
-    p (index) = real (p (index));
-  endif
+  index = (abs (p) >= toler && (abs (imag (p)) ./ abs (p) < toler));
+  p(index) = real (p(index));
 
   ## Find the direct term if there is one.
 
   if (lb >= la)
     ## Also returns the reduced numerator.
     [k, b] = deconv (b, a);
     lb = length (b);
   else
