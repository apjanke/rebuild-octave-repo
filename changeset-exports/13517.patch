# HG changeset patch
# User Jacob Dawid <jacob.dawid@googlemail.com>
# Date 1311081527 -7200
#      Tue Jul 19 15:18:47 2011 +0200
# Node ID 86adc9c4ec4bd1eec4bf8582f7f6c0076488015e
# Parent  d53287c44e5ab0d661cd42d9309fd4ae8d8b90fe
History deactivated.

diff --git a/gui/src/HistoryDockWidget.cpp b/gui/src/HistoryDockWidget.cpp
--- a/gui/src/HistoryDockWidget.cpp
+++ b/gui/src/HistoryDockWidget.cpp
@@ -44,27 +44,19 @@ HistoryDockWidget::construct ()
 
   setWindowTitle (tr ("Command History"));
   setWidget (new QWidget ());
 
   layout->addWidget (m_historyListView);
   layout->setMargin (2);
 
   widget ()->setLayout (layout);
-  connect (m_historyListView, SIGNAL (doubleClicked (QModelIndex)), this,
-	   SLOT (handleListViewItemDoubleClicked (QModelIndex)));
+  //connect (m_historyListView, SIGNAL (doubleClicked (QModelIndex)), this,
+  //	   SLOT (handleListViewItemDoubleClicked (QModelIndex)));
 }
 
 void
-HistoryDockWidget::updateHistory (string_vector historyEntries)
-{
-  QStringList stringList = m_historyListModel->stringList ();
-  for (int i = 0; i < historyEntries.length (); i++)
-    {
-      QString command (historyEntries[i].c_str ());
-      if (!command.startsWith ("#"))
-	{
-	  stringList.push_front (command);
-	}
-    }
-  m_historyListModel->setStringList (stringList);
+HistoryDockWidget::updateHistory (QStringList history)
+{/*
+  m_historyListModel->setStringList (history);
   emit information (tr ("History updated."));
+  */
 }
diff --git a/gui/src/HistoryDockWidget.h b/gui/src/HistoryDockWidget.h
--- a/gui/src/HistoryDockWidget.h
+++ b/gui/src/HistoryDockWidget.h
@@ -18,54 +18,29 @@
 
 #ifndef HISTORYDOCKWIDGET_H
 #define HISTORYDOCKWIDGET_H
 
 #include <QDockWidget>
 #include <QListView>
 #include <QStringListModel>
 
-// Octave includes
-#undef PACKAGE_BUGREPORT
-#undef PACKAGE_NAME
-#undef PACKAGE_STRING
-#undef PACKAGE_TARNAME
-#undef PACKAGE_VERSION
-#undef PACKAGE_URL
-#include "octave/config.h"
-
-#include "octave/debug.h"
-#include "octave/octave.h"
-#include "octave/symtab.h"
-#include "octave/parse.h"
-#include "octave/unwind-prot.h"
-#include "octave/toplev.h"
-#include "octave/load-path.h"
-#include "octave/error.h"
-#include "octave/quit.h"
-#include "octave/variables.h"
-#include "octave/sighandlers.h"
-#include "octave/sysdep.h"
-#include "octave/str-vec.h"
-#include "octave/cmd-hist.h"
-#include "octave/cmd-edit.h"
-#include "octave/oct-env.h"
-#include "octave/symtab.h"
-#include "cmd-edit.h"
-
 class HistoryDockWidget:public QDockWidget
 {
-Q_OBJECT public:
-  HistoryDockWidget (QWidget * parent = 0);
-  void updateHistory (string_vector historyEntries);
+Q_OBJECT
+public:
+  HistoryDockWidget (QWidget *parent = 0);
+  void updateHistory (QStringList history);
 
-    signals:void information (QString message);
+signals:
+  void information (QString message);
   void commandDoubleClicked (QString command);
 
-  private slots:void handleListViewItemDoubleClicked (QModelIndex modelIndex);
+private slots:
+  void handleListViewItemDoubleClicked (QModelIndex modelIndex);
 
 private:
   void construct ();
   QListView *m_historyListView;
   QStringListModel *m_historyListModel;
 };
 
 #endif // HISTORYDOCKWIDGET_H
diff --git a/gui/src/MainWindow.cpp b/gui/src/MainWindow.cpp
--- a/gui/src/MainWindow.cpp
+++ b/gui/src/MainWindow.cpp
@@ -21,16 +21,17 @@
 #include <QAction>
 #include <QSettings>
 #include <QDesktopServices>
 #include <QFileDialog>
 #include "MainWindow.h"
 #include "FileEditorMdiSubWindow.h"
 #include "ImageViewerMdiSubWindow.h"
 #include "SettingsDialog.h"
+#include "cmd-edit.h"
 
 MainWindow::MainWindow (QWidget * parent):QMainWindow (parent),
 m_isRunning (true)
 {
   QDesktopServices
     desktopServices;
   m_settingsFile =
     desktopServices.storageLocation (QDesktopServices::HomeLocation) +
@@ -273,21 +274,11 @@ MainWindow::establishOctaveLink ()
 {
   m_octaveMainThread = new OctaveMainThread (this);
   m_octaveMainThread->start ();
 
   m_octaveCallbackThread = new OctaveCallbackThread (this, this);
   m_octaveCallbackThread->start ();
 
   command_editor::add_event_hook (OctaveLink::readlineEventHook);
-
-  int fdm, fds;
-  if (openpty (&fdm, &fds, 0, 0, 0) < 0)
-    {
-      assert (0);
-    }
-  dup2 (fds, 0);
-  dup2 (fds, 1);
-  dup2 (fds, 2);
-
-  m_octaveTerminal->openTeletype (fdm);
+  m_octaveTerminal->openTerminal ();
   reportStatusMessage (tr ("Established link to Octave."));
 }
diff --git a/gui/src/MainWindow.h b/gui/src/MainWindow.h
--- a/gui/src/MainWindow.h
+++ b/gui/src/MainWindow.h
@@ -29,59 +29,16 @@
 #include "OctaveTerminal.h"
 #include "OctaveLink.h"
 #include "VariablesDockWidget.h"
 #include "HistoryDockWidget.h"
 #include "FilesDockWidget.h"
 #include "BrowserWidget.h"
 #include "IRCWidget.h"
 
-// Octave includes
-#undef PACKAGE_BUGREPORT
-#undef PACKAGE_NAME
-#undef PACKAGE_STRING
-#undef PACKAGE_TARNAME
-#undef PACKAGE_VERSION
-#undef PACKAGE_URL
-#include "octave/config.h"
-
-#include "octave/debug.h"
-#include "octave/octave.h"
-#include "octave/symtab.h"
-#include "octave/parse.h"
-#include "octave/unwind-prot.h"
-#include "octave/toplev.h"
-#include "octave/load-path.h"
-#include "octave/error.h"
-#include "octave/quit.h"
-#include "octave/variables.h"
-#include "octave/sighandlers.h"
-#include "octave/sysdep.h"
-#include "octave/str-vec.h"
-#include "octave/cmd-hist.h"
-#include "octave/cmd-edit.h"
-#include "octave/oct-env.h"
-#include "octave/symtab.h"
-#include "cmd-edit.h"
-
-typedef struct yy_buffer_state *YY_BUFFER_STATE;
-extern OCTINTERP_API YY_BUFFER_STATE create_buffer (FILE * f);
-extern OCTINTERP_API void switch_to_buffer (YY_BUFFER_STATE buf);
-extern OCTINTERP_API FILE *get_input_from_stdin (void);
-
-// System
-#include <termios.h>
-#include <sys/types.h>
-#include <signal.h>
-#include <sys/types.h>
-#include <sys/wait.h>
-#include <iostream>
-#include <vector>
-#include "pty.h"
-
 class OctaveMainThread;
 class OctaveCallbackThread;
 
 /**
   * \class MainWindow
   *
   * Represents the main window.
   */
@@ -195,21 +152,20 @@ protected:
 	  OctaveLink::instance ()->currentSymbolTable ();
 	if (symbolTable.size ())
 	  {
 	    m_mainWindow->variablesDockWidget ()->
 	      setVariablesList (symbolTable);
 	  }
 
 	// Collect history list.
-	string_vector historyList =
-	  OctaveLink::instance ()->currentHistory ();
-	if (historyList.length ())
+        QStringList history = OctaveLink::instance ()->currentHistory ();
+        if (history.length ())
 	  {
-	    m_mainWindow->historyDockWidget ()->updateHistory (historyList);
+            m_mainWindow->historyDockWidget ()->updateHistory (history);
 	  }
 
 	usleep (100000);
       }
   }
 private:
   MainWindow * m_mainWindow;
 };
diff --git a/gui/src/OctaveLink.cpp b/gui/src/OctaveLink.cpp
--- a/gui/src/OctaveLink.cpp
+++ b/gui/src/OctaveLink.cpp
@@ -123,17 +123,19 @@ void
 OctaveLink::fetchHistory ()
 {
   int currentLen = command_history::length ();
   if (currentLen != m_previousHistoryLength)
     {
       m_historySemaphore->acquire ();
       for (int i = m_previousHistoryLength; i < currentLen; i++)
 	{
-	  m_historyBuffer.append (command_history::get_entry (i));
+          QString entry = QString(command_history::get_entry (i).c_str());
+          if (!entry.startsWith ("#"))
+            m_historyBuffer.append (entry);
 	}
       m_historySemaphore->release ();
       m_previousHistoryLength = currentLen;
       emit historyChanged ();
     }
 }
 
 QList < SymbolRecord > OctaveLink::currentSymbolTable ()
@@ -144,24 +146,23 @@ QList < SymbolRecord > OctaveLink::curre
   m_symbolTableSemaphore->acquire ();
   foreach (SymbolRecord symbolRecord, m_symbolTableBuffer)
     m_symbolTableCopy.append (symbolRecord.dup ());
   m_symbolTableSemaphore->release ();
 
   return m_symbolTableCopy;
 }
 
-string_vector
+QStringList
 OctaveLink::currentHistory ()
 {
   m_historySemaphore->acquire ();
-  string_vector retval (m_historyBuffer);
-  m_historyBuffer = string_vector ();
+  QStringList historyBuffer = m_historyBuffer;
   m_historySemaphore->release ();
-  return retval;
+  return historyBuffer;
 }
 
 void
 OctaveLink::processOctaveServerData ()
 {
   fetchSymbolTable ();
   fetchHistory ();
 }
diff --git a/gui/src/OctaveLink.h b/gui/src/OctaveLink.h
--- a/gui/src/OctaveLink.h
+++ b/gui/src/OctaveLink.h
@@ -70,89 +70,85 @@
 #include <readline/readline.h>
 
 // Qt includes
 #include <QMutexLocker>
 #include <QMutex>
 #include <QFileInfo>
 #include <QList>
 #include <QString>
+#include <QStringList>
 #include <QVector>
 #include <QSemaphore>
 #include <QObject>
 
-typedef
-  symbol_table::symbol_record
-  SymbolRecord;
-typedef octave_value
-  OctaveValue;
+typedef symbol_table::symbol_record SymbolRecord;
+typedef octave_value OctaveValue;
 
 /**
   * \class OctaveLink
   * Manages a link to an octave instance.
   */
-class
-  OctaveLink:
-  QObject
+class OctaveLink:QObject
 {
   Q_OBJECT
 public:
   static OctaveLink *
   instance ()
   {
     return &m_singleton;
   }
   static int
   readlineEventHook (void);
   static QString
   octaveValueAsQString (OctaveValue octaveValue);
 
-    /**
-      * Returns a copy of the current symbol table buffer.
-      * \return Copy of the current symbol table buffer.
-      */
+  /**
+    * Returns a copy of the current symbol table buffer.
+    * \return Copy of the current symbol table buffer.
+    */
   QList < SymbolRecord > currentSymbolTable ();
 
-    /**
-      * Returns a copy of the current history buffer.
-      * \return Copy of the current history buffer.
-      */
-  string_vector
+  /**
+    * Returns a copy of the current history buffer.
+    * \return Copy of the current history buffer.
+    */
+  QStringList
   currentHistory ();
 
   void
   processOctaveServerData ();
 
-    /**
-      * Updates the current symbol table with new data
-      * from octave.
-      */
+  /**
+    * Updates the current symbol table with new data
+    * from octave.
+    */
   void
   fetchSymbolTable ();
 
-    /**
-      * Updates the current history buffer with new data
-      * from octave.
-      */
+  /**
+    * Updates the current history buffer with new data
+    * from octave.
+    */
   void
   fetchHistory ();
 
 signals:
   void
   symbolTableChanged ();
   void
   historyChanged ();
 
 private:
   OctaveLink ();
   ~OctaveLink ();
 
-    /** Variable related member variables. */
+  /** Variable related member variables. */
   QSemaphore * m_symbolTableSemaphore;
   QList < SymbolRecord > m_symbolTableBuffer;
 
-    /** History related member variables. */
+  /** History related member variables. */
   QSemaphore *m_historySemaphore;
-  string_vector m_historyBuffer;
+  QStringList m_historyBuffer;
   int m_previousHistoryLength;
   static OctaveLink m_singleton;
 };
 #endif // OCTAVELINK_H
diff --git a/gui/src/OctaveTerminal.cpp b/gui/src/OctaveTerminal.cpp
--- a/gui/src/OctaveTerminal.cpp
+++ b/gui/src/OctaveTerminal.cpp
@@ -17,22 +17,47 @@
  */
 
 #include "OctaveTerminal.h"
 #include <QHBoxLayout>
 #include <QVBoxLayout>
 #include <QStringListModel>
 #include <QStringList>
 
-OctaveTerminal::OctaveTerminal (QWidget * parent):QTerminalWidget (0, parent)
+#include "pty.h"
+#include "unistd.h"
+#include <assert.h>
+
+OctaveTerminal::OctaveTerminal (QWidget * parent):QWidget (parent)
 {
   construct ();
 }
 
 OctaveTerminal::~OctaveTerminal ()
 {
 }
 
 void
 OctaveTerminal::construct ()
 {
-  setSizePolicy (QSizePolicy::Expanding, QSizePolicy::Expanding);
+  m_terminalWidget = new QTerminalWidget (0, this);
+  m_terminalWidget->setSizePolicy (QSizePolicy::Expanding, QSizePolicy::Expanding);
+  setFocusProxy (m_terminalWidget);
+
+  QVBoxLayout *layout = new QVBoxLayout ();
+  layout->addWidget (m_terminalWidget);
+  setLayout (layout);
 }
+
+void
+OctaveTerminal::openTerminal ()
+{
+  int fdm, fds;
+  if (openpty (&fdm, &fds, 0, 0, 0) < 0)
+    {
+      assert (0);
+    }
+  dup2 (fds, 0);
+  dup2 (fds, 1);
+  dup2 (fds, 2);
+
+  m_terminalWidget->openTeletype (fdm);
+}
diff --git a/gui/src/OctaveTerminal.h b/gui/src/OctaveTerminal.h
--- a/gui/src/OctaveTerminal.h
+++ b/gui/src/OctaveTerminal.h
@@ -13,20 +13,25 @@
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  */
 
 #ifndef OCTAVETERMINAL_H
 #define OCTAVETERMINAL_H
+#include <QWidget>
 #include "QTerminalWidget.h"
 
-class OctaveTerminal:public QTerminalWidget
+class OctaveTerminal:public QWidget
 {
-Q_OBJECT public:
+Q_OBJECT
+public:
   OctaveTerminal (QWidget * parent = 0);
   ~OctaveTerminal ();
 
+  void sendText (QString text) { m_terminalWidget->sendText(text); }
+  void openTerminal ();
 private:
   void construct ();
+  QTerminalWidget *m_terminalWidget;
 };
 #endif // OCTAVETERMINAL_H
