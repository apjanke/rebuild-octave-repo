# HG changeset patch
# User David Grundberg <davidg@cs.umu.se>
# Date 1259145897 -3600
#      Wed Nov 25 11:44:57 2009 +0100
# Branch release-3-2-x
# Node ID 2641c6febd46387f2df0c60979b47e5dc61e24dc
# Parent  69828adba9665e5496a3ff747d02feedcce1a026
list_in_columns: Don't SIGFPE when given empty first argument

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-18  David Grundberg  <davidg@cs.umu.se>
+
+       * str-vec.cc (string_vector::list_in_columns): Avoid crash on
+       empty arguments from list_in_columns.
+
 2009-10-27  David Bateman  <dbateman@free.fr>
 
 	* SparsedbleLU.cc (SparseLU::SparseLU (const SparseMatrix&,
 	const Matrix&, bool), SparseLU::SparseLU (const SparseMatrix&,
 	const ColumnVector&, const Matrix&, boo, bool, double, bool,
 	bool)): Fix test for valid pivot tolerance.
 	* SparseCmplxLU.cc (SparseComplexLU::SparseComplexLU 
 	(const SparseComplexMatrix&, const Matrix&, bool), 
diff --git a/liboctave/str-vec.cc b/liboctave/str-vec.cc
--- a/liboctave/str-vec.cc
+++ b/liboctave/str-vec.cc
@@ -174,16 +174,24 @@ string_vector::delete_c_str_vec (const c
 std::ostream&
 string_vector::list_in_columns (std::ostream& os, int width) const
 {
   // Compute the maximum name length.
 
   octave_idx_type max_name_length = 0;
   octave_idx_type total_names = length ();
 
+  if (total_names == 0)
+    {
+      // List empty, remember to end output with a newline.
+
+      os << "\n";
+      return os;
+    }
+
   for (octave_idx_type i = 0; i < total_names; i++)
     {
       octave_idx_type name_length = elem (i).length ();
       if (name_length > max_name_length)
 	max_name_length = name_length;
     }
 
   // Allow at least two spaces between names.
