# HG changeset patch
# User Rik <rik@octave.org>
# Date 1377703982 25200
#      Wed Aug 28 08:33:02 2013 -0700
# Node ID 1c89599167a6b2106bb2dc99c7003901ddb17fa3
# Parent  a31b54b5f84a857efae925369204f98312637193
maint: End m-files with 1 blank line.
Simplifies automated grammarchecking script.

* scripts/@ftp/ascii.m, scripts/@ftp/binary.m, scripts/@ftp/cd.m,
scripts/@ftp/close.m, scripts/@ftp/delete.m, scripts/@ftp/dir.m,
scripts/@ftp/display.m, scripts/@ftp/ftp.m, scripts/@ftp/loadobj.m,
scripts/@ftp/mget.m, scripts/@ftp/mkdir.m, scripts/@ftp/mput.m,
scripts/@ftp/rename.m, scripts/@ftp/rmdir.m, scripts/@ftp/saveobj.m,
scripts/audio/lin2mu.m, scripts/audio/loadaudio.m, scripts/audio/mu2lin.m,
scripts/audio/record.m, scripts/audio/saveaudio.m, scripts/audio/setaudio.m,
scripts/deprecated/__error_text__.m, scripts/deprecated/cut.m,
scripts/deprecated/error_text.m, scripts/deprecated/isstr.m,
scripts/deprecated/polyderiv.m, scripts/deprecated/studentize.m,
scripts/deprecated/sylvester_matrix.m, scripts/general/bicubic.m,
scripts/general/celldisp.m, scripts/general/colon.m,
scripts/general/cplxpair.m, scripts/general/del2.m, scripts/general/display.m,
scripts/general/isdir.m, scripts/general/isequaln.m, scripts/general/loadobj.m,
scripts/general/private/__isequal__.m, scripts/general/private/__splinen__.m,
scripts/general/profexplore.m, scripts/general/quadgk.m,
scripts/general/randi.m, scripts/general/repmat.m, scripts/general/saveobj.m,
scripts/geometry/delaunay.m, scripts/help/__unimplemented__.m,
scripts/help/doc_cache_create.m, scripts/help/get_first_help_sentence.m,
scripts/help/help.m, scripts/help/print_usage.m,
scripts/help/private/__additional_help_message__.m,
scripts/help/private/__strip_html_tags__.m, scripts/help/type.m,
scripts/image/imfinfo.m, scripts/image/imformats.m, scripts/image/imread.m,
scripts/image/imwrite.m, scripts/image/private/__imfinfo__.m,
scripts/image/private/__imread__.m, scripts/image/private/__imwrite__.m,
scripts/image/private/imageIO.m, scripts/image/private/imwrite_filename.m,
scripts/image/private/ind2x.m, scripts/io/beep.m, scripts/io/strread.m,
scripts/io/textread.m, scripts/io/textscan.m, scripts/linear-algebra/krylov.m,
scripts/linear-algebra/subspace.m, scripts/miscellaneous/bug_report.m,
scripts/miscellaneous/bunzip2.m, scripts/miscellaneous/cast.m,
scripts/miscellaneous/copyfile.m, scripts/miscellaneous/debug.m,
scripts/miscellaneous/dir.m, scripts/miscellaneous/dump_prefs.m,
scripts/miscellaneous/error_ids.m, scripts/miscellaneous/fileattrib.m,
scripts/miscellaneous/gunzip.m, scripts/miscellaneous/isdeployed.m,
scripts/miscellaneous/ismac.m, scripts/miscellaneous/mex.m,
scripts/miscellaneous/mexext.m, scripts/miscellaneous/mkoctfile.m,
scripts/miscellaneous/movefile.m, scripts/miscellaneous/namelengthmax.m,
scripts/miscellaneous/news.m, scripts/miscellaneous/pack.m,
scripts/miscellaneous/perl.m,
scripts/miscellaneous/private/display_info_file.m,
scripts/miscellaneous/python.m, scripts/miscellaneous/rmappdata.m,
scripts/miscellaneous/run.m, scripts/miscellaneous/tar.m,
scripts/miscellaneous/tempname.m, scripts/miscellaneous/untar.m,
scripts/miscellaneous/unzip.m, scripts/miscellaneous/what.m,
scripts/miscellaneous/zip.m, scripts/optimization/fminunc.m,
scripts/optimization/fsolve.m, scripts/optimization/fzero.m,
scripts/optimization/glpk.m, scripts/optimization/optimget.m,
scripts/optimization/optimset.m, scripts/optimization/qp.m,
scripts/optimization/sqp.m, scripts/path/pathdef.m, scripts/pkg/pkg.m,
scripts/pkg/private/build.m, scripts/pkg/private/describe.m,
scripts/pkg/private/dirempty.m, scripts/pkg/private/get_forge_download.m,
scripts/pkg/private/get_forge_pkg.m,
scripts/pkg/private/get_unsatisfied_deps.m, scripts/pkg/private/install.m,
scripts/pkg/private/is_architecture_dependent.m,
scripts/pkg/private/list_forge_packages.m, scripts/pkg/private/rebuild.m,
scripts/pkg/private/shell.m, scripts/pkg/private/uninstall.m,
scripts/plot/axes.m, scripts/plot/box.m, scripts/plot/closereq.m,
scripts/plot/diffuse.m, scripts/plot/ezpolar.m, scripts/plot/findfigs.m,
scripts/plot/gco.m, scripts/plot/guidata.m, scripts/plot/guihandles.m,
scripts/plot/hdl2struct.m, scripts/plot/linkprop.m, scripts/plot/peaks.m,
scripts/plot/print.m, scripts/plot/private/__add_datasource__.m,
scripts/plot/private/__axis_label__.m, scripts/plot/private/__clabel__.m,
scripts/plot/private/__color_str_rgb__.m, scripts/plot/private/__contour__.m,
scripts/plot/private/__default_plot_options__.m,
scripts/plot/private/__errcomm__.m, scripts/plot/private/__file_filter__.m,
scripts/plot/private/__fltk_file_filter__.m,
scripts/plot/private/__getlegenddata__.m,
scripts/plot/private/__gnuplot_open_stream__.m,
scripts/plot/private/__gnuplot_print__.m,
scripts/plot/private/__go_draw_axes__.m,
scripts/plot/private/__interp_cube__.m, scripts/plot/private/__is_function__.m,
scripts/plot/private/__line__.m, scripts/plot/private/__marching_cube__.m,
scripts/plot/private/__next_line_style__.m, scripts/plot/private/__patch__.m,
scripts/plot/private/__pie__.m, scripts/plot/private/__pltopt__.m,
scripts/plot/private/__quiver__.m, scripts/plot/private/__scatter__.m,
scripts/plot/private/__stem__.m, scripts/plot/private/__uigetdir_fltk__.m,
scripts/plot/private/__uigetfile_fltk__.m,
scripts/plot/private/__uiobject_split_args__.m,
scripts/plot/private/__uiputfile_fltk__.m, scripts/plot/refresh.m,
scripts/plot/saveas.m, scripts/plot/shg.m, scripts/plot/specular.m,
scripts/plot/sphere.m, scripts/plot/struct2hdl.m, scripts/plot/subplot.m,
scripts/plot/uicontextmenu.m, scripts/plot/uicontrol.m, scripts/plot/uipanel.m,
scripts/plot/uipushtool.m, scripts/plot/uiresume.m,
scripts/plot/uitoggletool.m, scripts/plot/uitoolbar.m, scripts/plot/uiwait.m,
scripts/plot/waitforbuttonpress.m, scripts/polynomial/pchip.m,
scripts/polynomial/polyeig.m, scripts/polynomial/ppval.m,
scripts/prefs/addpref.m, scripts/prefs/getpref.m, scripts/prefs/ispref.m,
scripts/prefs/private/loadprefs.m, scripts/prefs/private/prefsfile.m,
scripts/prefs/private/saveprefs.m, scripts/prefs/setpref.m,
scripts/set/private/validargs.m, scripts/set/unique.m,
scripts/signal/arch_fit.m, scripts/signal/arch_rnd.m,
scripts/signal/arch_test.m, scripts/signal/arma_rnd.m,
scripts/signal/durbinlevinson.m, scripts/signal/fractdiff.m,
scripts/signal/freqz.m, scripts/signal/freqz_plot.m, scripts/signal/hurst.m,
scripts/signal/periodogram.m, scripts/signal/private/rectangle_lw.m,
scripts/signal/private/rectangle_sw.m, scripts/signal/private/triangle_sw.m,
scripts/signal/spectral_adf.m, scripts/signal/spectral_xdf.m,
scripts/signal/stft.m, scripts/signal/synthesis.m, scripts/signal/yulewalker.m,
scripts/sparse/colperm.m, scripts/sparse/eigs.m, scripts/sparse/etreeplot.m,
scripts/sparse/gmres.m, scripts/sparse/private/__sprand_impl__.m,
scripts/sparse/spdiags.m, scripts/sparse/sprandn.m, scripts/specfun/bessel.m,
scripts/specfun/betaln.m, scripts/specfun/expint.m,
scripts/special-matrix/gallery.m, scripts/startup/__finish__.m,
scripts/statistics/base/qqplot.m, scripts/statistics/distributions/tcdf.m,
scripts/statistics/distributions/wienrnd.m,
scripts/statistics/models/logistic_regression.m,
scripts/statistics/models/private/logistic_regression_derivatives.m,
scripts/statistics/models/private/logistic_regression_likelihood.m,
scripts/statistics/tests/anova.m, scripts/statistics/tests/bartlett_test.m,
scripts/statistics/tests/chisquare_test_homogeneity.m,
scripts/statistics/tests/chisquare_test_independence.m,
scripts/statistics/tests/cor_test.m,
scripts/statistics/tests/f_test_regression.m,
scripts/statistics/tests/hotelling_test.m,
scripts/statistics/tests/hotelling_test_2.m,
scripts/statistics/tests/kolmogorov_smirnov_test_2.m,
scripts/statistics/tests/kruskal_wallis_test.m,
scripts/statistics/tests/manova.m, scripts/statistics/tests/mcnemar_test.m,
scripts/statistics/tests/prop_test_2.m, scripts/statistics/tests/run_test.m,
scripts/statistics/tests/sign_test.m, scripts/statistics/tests/t_test.m,
scripts/statistics/tests/t_test_2.m,
scripts/statistics/tests/t_test_regression.m,
scripts/statistics/tests/u_test.m, scripts/statistics/tests/var_test.m,
scripts/statistics/tests/welch_test.m,
scripts/statistics/tests/wilcoxon_test.m, scripts/statistics/tests/z_test.m,
scripts/statistics/tests/z_test_2.m, scripts/strings/strcat.m,
scripts/strings/strjoin.m, scripts/strings/strsplit.m,
scripts/testfun/__have_feature__.m, scripts/testfun/__printf_assert__.m,
scripts/testfun/__prog_output_assert__.m, scripts/testfun/__run_test_suite__.m,
scripts/time/clock.m, scripts/time/datenum.m, scripts/ui/errordlg.m,
scripts/ui/private/message_dialog.m: End m-files with 1 blank line.

diff --git a/scripts/@ftp/ascii.m b/scripts/@ftp/ascii.m
--- a/scripts/@ftp/ascii.m
+++ b/scripts/@ftp/ascii.m
@@ -24,8 +24,9 @@
 ## representation.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function ascii (f)
   __ftp_ascii__ (f.curlhandle);
 endfunction
+
diff --git a/scripts/@ftp/binary.m b/scripts/@ftp/binary.m
--- a/scripts/@ftp/binary.m
+++ b/scripts/@ftp/binary.m
@@ -23,8 +23,9 @@
 ## representation to the local representation.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function binary (f)
   __ftp_binary__ (f.curlhandle);
 endfunction
+
diff --git a/scripts/@ftp/cd.m b/scripts/@ftp/cd.m
--- a/scripts/@ftp/cd.m
+++ b/scripts/@ftp/cd.m
@@ -36,8 +36,9 @@ function path = cd (f, path)
     print_usage ();
   endif
 
   if (nargin == 2)
     __ftp_cwd__ (f.curlhandle, path);
   endif
   path = __ftp_pwd__ (f.curlhandle);
 endfunction
+
diff --git a/scripts/@ftp/close.m b/scripts/@ftp/close.m
--- a/scripts/@ftp/close.m
+++ b/scripts/@ftp/close.m
@@ -21,8 +21,9 @@
 ## Close the FTP connection represented by the FTP object @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function dir (f)
   __ftp_close__ (f.curlhandle);
 endfunction
+
diff --git a/scripts/@ftp/delete.m b/scripts/@ftp/delete.m
--- a/scripts/@ftp/delete.m
+++ b/scripts/@ftp/delete.m
@@ -21,8 +21,9 @@
 ## Delete the remote file @var{file} over the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function delete (f, file)
   __ftp_delete__ (f.curlhandle, file);
 endfunction
+
diff --git a/scripts/@ftp/dir.m b/scripts/@ftp/dir.m
--- a/scripts/@ftp/dir.m
+++ b/scripts/@ftp/dir.m
@@ -26,8 +26,9 @@
 
 function lst = dir (f)
   if (nargout == 0)
     __ftp_dir__ (f.curlhandle);
   else
     lst = __ftp_dir__ (f.curlhandle);
   endif
 endfunction
+
diff --git a/scripts/@ftp/display.m b/scripts/@ftp/display.m
--- a/scripts/@ftp/display.m
+++ b/scripts/@ftp/display.m
@@ -17,9 +17,10 @@
 ## <http://www.gnu.org/licenses/>.
 
 function display (obj)
   printf ("FTP Object\n");
   printf (" host: %s\n", obj.host);
   printf (" user: %s\n", obj.username);
   printf ("  dir: %s\n", __ftp_pwd__ (obj.curlhandle));
   printf (" mode: %s\n", __ftp_mode__ (obj.curlhandle));
-endfunction
\ No newline at end of file
+endfunction
+
diff --git a/scripts/@ftp/ftp.m b/scripts/@ftp/ftp.m
--- a/scripts/@ftp/ftp.m
+++ b/scripts/@ftp/ftp.m
@@ -53,8 +53,9 @@ function obj = ftp (host = "", username 
     p.password = password;
     p.curlhandle = tmpnam ("ftp-");
     if (nargin > 0)
       __ftp__ (p.curlhandle, host, username, password);
     endif
     obj = class (p, "ftp");
   endif
 endfunction
+
diff --git a/scripts/@ftp/loadobj.m b/scripts/@ftp/loadobj.m
--- a/scripts/@ftp/loadobj.m
+++ b/scripts/@ftp/loadobj.m
@@ -29,8 +29,9 @@ function b = loadobj (a)
     endif
     b = rmfield (b, "dir");
   elseif (isfield (b, "remotePwd"))
     ## FIXME: Can we read matlab java stringBuffer objects?
     warning ("can not change remote directory in loaded FTP object");
     b = rmfield (b, "remotePwd");
   endif
 endfunction
+
diff --git a/scripts/@ftp/mget.m b/scripts/@ftp/mget.m
--- a/scripts/@ftp/mget.m
+++ b/scripts/@ftp/mget.m
@@ -30,8 +30,9 @@
 ## If a third argument @var{target} is given, then a single file or
 ## directory will be downloaded to the local directory and the local name
 ## will be changed to @var{target}.
 ## @end deftypefn
 
 function mget (f, file)
   __ftp_mget__ (f.curlhandle, file);
 endfunction
+
diff --git a/scripts/@ftp/mkdir.m b/scripts/@ftp/mkdir.m
--- a/scripts/@ftp/mkdir.m
+++ b/scripts/@ftp/mkdir.m
@@ -21,8 +21,9 @@
 ## Create the remote directory @var{path}, over the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function mkdir (f, path)
   __ftp_mkdir__ (f.curlhandle, path);
 endfunction
+
diff --git a/scripts/@ftp/mput.m b/scripts/@ftp/mput.m
--- a/scripts/@ftp/mput.m
+++ b/scripts/@ftp/mput.m
@@ -28,8 +28,9 @@
 
 function retval = mput (f, file)
   if (nargout == 0)
     __ftp_mput__ (f.curlhandle, file);
   else
     retval = __ftp_mput__ (f.curlhandle, file);
   endif
 endfunction
+
diff --git a/scripts/@ftp/rename.m b/scripts/@ftp/rename.m
--- a/scripts/@ftp/rename.m
+++ b/scripts/@ftp/rename.m
@@ -22,8 +22,9 @@
 ## over the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the ftp function.
 ## @end deftypefn
 
 function rename (f, oldname, newname)
   __ftp_rename__ (f.curlhandle, oldname, newname);
 endfunction
+
diff --git a/scripts/@ftp/rmdir.m b/scripts/@ftp/rmdir.m
--- a/scripts/@ftp/rmdir.m
+++ b/scripts/@ftp/rmdir.m
@@ -21,8 +21,9 @@
 ## Remove the remote directory @var{path}, over the FTP connection @var{f}.
 ##
 ## @var{f} is an FTP object returned by the @code{ftp} function.
 ## @end deftypefn
 
 function rmdir (f, path)
   __ftp_rmdir__ (f.curlhandle, path);
 endfunction
+
diff --git a/scripts/@ftp/saveobj.m b/scripts/@ftp/saveobj.m
--- a/scripts/@ftp/saveobj.m
+++ b/scripts/@ftp/saveobj.m
@@ -16,8 +16,9 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 function b = saveobj (a)
   b = a;
   b = rmfield (b, "curlhandle");
   b.dir = __ftp_pwd (a.curlhandle);
 endfunction
+
diff --git a/scripts/audio/lin2mu.m b/scripts/audio/lin2mu.m
--- a/scripts/audio/lin2mu.m
+++ b/scripts/audio/lin2mu.m
@@ -69,8 +69,9 @@ function y = lin2mu (x, n)
   x = min (abs (x), 32635) + 132;
 
   ## Find exponent and fraction of bineary representation.
   [f, e] = log2 (x);
 
   y = 64 * sig - 16 * e - fix (32 * f) + 335;
 
 endfunction
+
diff --git a/scripts/audio/loadaudio.m b/scripts/audio/loadaudio.m
--- a/scripts/audio/loadaudio.m
+++ b/scripts/audio/loadaudio.m
@@ -74,8 +74,9 @@ function X = loadaudio (name, ext, bps)
   else
     fclose (num);
     error ("loadaudio: unsupported extension");
   endif
 
   fclose (num);
 
 endfunction
+
diff --git a/scripts/audio/mu2lin.m b/scripts/audio/mu2lin.m
--- a/scripts/audio/mu2lin.m
+++ b/scripts/audio/mu2lin.m
@@ -75,8 +75,9 @@ function y = mu2lin (x, n = 0)
       sc = 64 / ld;
     else
       sc = 1 / 256;
     endif
     y = fix (y * sc);
   endif
 
 endfunction
+
diff --git a/scripts/audio/record.m b/scripts/audio/record.m
--- a/scripts/audio/record.m
+++ b/scripts/audio/record.m
@@ -58,8 +58,9 @@ function X = record (sec, sampling_rate)
 
     unlink (file);
 
   end_unwind_protect
 
   X = Y - 127;
 
 endfunction
+
diff --git a/scripts/audio/saveaudio.m b/scripts/audio/saveaudio.m
--- a/scripts/audio/saveaudio.m
+++ b/scripts/audio/saveaudio.m
@@ -81,8 +81,9 @@ function saveaudio (name, x, ext, bps)
   else
     fclose (num);
     error ("saveaudio: unsupported extension");
   endif
 
   fclose (num);
 
 endfunction
+
diff --git a/scripts/audio/setaudio.m b/scripts/audio/setaudio.m
--- a/scripts/audio/setaudio.m
+++ b/scripts/audio/setaudio.m
@@ -36,8 +36,9 @@ function setaudio (w_type, value)
     system (sprintf ("mixer %s", w_type));
   elseif (nargin == 2)
     system (sprintf ("mixer %s %d", w_type, value));
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/deprecated/__error_text__.m b/scripts/deprecated/__error_text__.m
--- a/scripts/deprecated/__error_text__.m
+++ b/scripts/deprecated/__error_text__.m
@@ -29,8 +29,9 @@ function [msg, msgid] = __error_text__ (
     warned = true;
     warning ("Octave:deprecated-function",
              "__error_text__ is obsolete and will be removed from a future version of Octave, please use lasterr instead");
   endif
 
   [msg, msgid] = lasterr (varargin{:});
 
 endfunction
+
diff --git a/scripts/deprecated/cut.m b/scripts/deprecated/cut.m
--- a/scripts/deprecated/cut.m
+++ b/scripts/deprecated/cut.m
@@ -64,8 +64,9 @@ function group = cut (x, breaks)
   m = length (breaks);
   if (any (k = find ((x >= min (breaks)) & (x < max (breaks)))))
     n = length (k);
     group(k) = sum ((ones (m, 1) * reshape (x(k), 1, n))
                     >= (reshape (breaks, m, 1) * ones (1, n)));
   endif
 
 endfunction
+
diff --git a/scripts/deprecated/error_text.m b/scripts/deprecated/error_text.m
--- a/scripts/deprecated/error_text.m
+++ b/scripts/deprecated/error_text.m
@@ -29,8 +29,9 @@ function [msg, msgid] = error_text (vara
     warned = true;
     warning ("Octave:deprecated-function",
              "error_text is obsolete and will be removed from a future version of Octave, please use lasterr instead");
   endif
 
   [msg, msgid] = lasterr (varargin{:});
 
 endfunction
+
diff --git a/scripts/deprecated/isstr.m b/scripts/deprecated/isstr.m
--- a/scripts/deprecated/isstr.m
+++ b/scripts/deprecated/isstr.m
@@ -33,8 +33,9 @@ function retval = isstr (varargin)
     warned = true;
     warning ("Octave:deprecated-function",
              "isstr is obsolete and will be removed from a future version of Octave, please use ischar instead");
   endif
 
   retval = ischar (varargin{:});
 
 endfunction
+
diff --git a/scripts/deprecated/polyderiv.m b/scripts/deprecated/polyderiv.m
--- a/scripts/deprecated/polyderiv.m
+++ b/scripts/deprecated/polyderiv.m
@@ -93,16 +93,17 @@ function [q, d] = polyderiv (p, a)
       q = p(1:(lp-1)) .* [(lp-1):-1:1];
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 %!assert(all (all (polyderiv ([1, 2, 3]) == [2, 2])));
 
 %!assert(polyderiv (13) == 0);
 
 %!error polyderiv ([]);
 
 %!error polyderiv ([1, 2; 3, 4]);
 
diff --git a/scripts/deprecated/studentize.m b/scripts/deprecated/studentize.m
--- a/scripts/deprecated/studentize.m
+++ b/scripts/deprecated/studentize.m
@@ -73,16 +73,17 @@ function t = studentize (x, dim)
     idx = ones (1, nd);
     idx(dim) = c;
     t = x - repmat (mean (x, dim), idx);
     t = t ./ repmat (max (cat (dim, std(t, [], dim), ! any (t, dim)), [], dim), idx);
   endif
 
 endfunction
 
+
 %!assert(studentize ([1,2,3]), [-1,0,1])
 %!assert(studentize (int8 ([1,2,3])), [-1,0,1])
 #%!assert(studentize (ones (3,2,0,2)), zeros (3,2,0,2))
 %!assert(studentize ([2,0,-2;0,2,0;-2,-2,2]), [1,0,-1;0,1,0;-1,-1,1])
 
 %% Test input validation
 %!error studentize ()
 %!error studentize (1, 2, 3)
diff --git a/scripts/deprecated/sylvester_matrix.m b/scripts/deprecated/sylvester_matrix.m
--- a/scripts/deprecated/sylvester_matrix.m
+++ b/scripts/deprecated/sylvester_matrix.m
@@ -52,16 +52,17 @@ function retval = sylvester_matrix (k)
       retval = [tmp, tmp; tmp, -tmp];
     endif
   else
     error ("sylvester_matrix: expecting scalar argument");
   endif
 
 endfunction
 
+
 %!assert((sylvester_matrix (1) == [1, 1; 1, -1]
 %! && (sylvester_matrix (2)
 %! == [1, 1, 1, 1; 1, -1, 1, -1; 1, 1, -1, -1; 1, -1, -1, 1])));
 
 %!error sylvester_matrix ([1, 2; 3, 4]);
 
 %!error sylvester_matrix ();
 
diff --git a/scripts/general/bicubic.m b/scripts/general/bicubic.m
--- a/scripts/general/bicubic.m
+++ b/scripts/general/bicubic.m
@@ -216,16 +216,17 @@ function zi = bicubic (x, y, z, xi, yi, 
     zi(:, [xfirst_ind, xlast_ind]) = extrapval;
   endif
   if (! (isempty (yfirst_ind) && isempty (ylast_ind)))
     zi([yfirst_ind; ylast_ind], :) = extrapval;
   endif
 
 endfunction
 
+
 %!demo
 %! clf;
 %! colormap ("default");
 %! A = [13,-1,12;5,4,3;1,6,2];
 %! x = [0,1,4]+10;
 %! y = [-10,-9,-8];
 %! xi = linspace (min (x), max (x), 17);
 %! yi = linspace (min (y), max (y), 26)';
diff --git a/scripts/general/celldisp.m b/scripts/general/celldisp.m
--- a/scripts/general/celldisp.m
+++ b/scripts/general/celldisp.m
@@ -84,8 +84,9 @@ endfunction
 %!demo
 %! c = {1, 2, {31, 32}};
 %! celldisp (c, "b")
 
 ## Test input validation
 %!error celldisp ()
 %!error celldisp ({}, "name", 1)
 %!error <C must be a cell array> celldisp (1)
+
diff --git a/scripts/general/colon.m b/scripts/general/colon.m
--- a/scripts/general/colon.m
+++ b/scripts/general/colon.m
@@ -38,8 +38,9 @@ function r = colon (varargin)
     error ('colon: not defined for class "%s"', class (varargin{1}));
   endif
 endfunction
 
 
 %!error colon (1)
 
 ## FIXME -- what does colon () mean since it doesn't set a return value?
+
diff --git a/scripts/general/cplxpair.m b/scripts/general/cplxpair.m
--- a/scripts/general/cplxpair.m
+++ b/scripts/general/cplxpair.m
@@ -158,9 +158,9 @@ endfunction
 %!assert (cplxpair (z(randperm (7))), z)
 %!assert (cplxpair (z(randperm (7))), z)
 %!assert (cplxpair ([z(randperm(7)),z(randperm(7))]), [z,z])
 %!assert (cplxpair ([z(randperm(7)),z(randperm(7))],[],1), [z,z])
 %!assert (cplxpair ([z(randperm(7)).';z(randperm(7)).'],[],2), [z.';z.'])
 
 ## tolerance test
 %!assert (cplxpair ([1i, -1i, 1+(1i*eps)],2*eps), [-1i, 1i, 1+(1i*eps)])
- 
+
diff --git a/scripts/general/del2.m b/scripts/general/del2.m
--- a/scripts/general/del2.m
+++ b/scripts/general/del2.m
@@ -152,8 +152,9 @@ function D = del2 (M, varargin)
       endif
 
       D += DD;
     endif
   endfor
 
   D = D ./ nd;
 endfunction
+
diff --git a/scripts/general/display.m b/scripts/general/display.m
--- a/scripts/general/display.m
+++ b/scripts/general/display.m
@@ -43,8 +43,9 @@ function idx = display (a)
   str = disp (a);
   if (isempty (strfind (str, "<class ")))
     disp (str);   
   else
     error ('display: not defined for class "%s"', class (a));
   endif
 
 endfunction
+
diff --git a/scripts/general/isdir.m b/scripts/general/isdir.m
--- a/scripts/general/isdir.m
+++ b/scripts/general/isdir.m
@@ -27,14 +27,15 @@ function retval = isdir (f)
     print_usage ("isdir");
   endif
 
   ## Exist returns an integer but isdir should return a logical.
   retval = (exist (f, "dir") == 7);
 
 endfunction
 
+
 %!assert (isdir (pwd ()))
 %!assert (! isdir ("this is highly unlikely to be a directory name"))
 
 %!error isdir ()
 %!error isdir (1, 2)
 
diff --git a/scripts/general/isequaln.m b/scripts/general/isequaln.m
--- a/scripts/general/isequaln.m
+++ b/scripts/general/isequaln.m
@@ -43,8 +43,9 @@ endfunction
 %!assert (isequaln ([1,2,NaN,4],[1,2,3,4]), false)
 ## test for equality (struct)
 %!assert (isequaln (struct ('a',NaN,'b',2),struct ('a',NaN,'b',2),struct ('a',NaN,'b',2)), true)
 %!assert (isequaln (1,2,1), false)
 
 ## Input validation
 %!error isequaln ()
 %!error isequaln (1)
+
diff --git a/scripts/general/loadobj.m b/scripts/general/loadobj.m
--- a/scripts/general/loadobj.m
+++ b/scripts/general/loadobj.m
@@ -34,8 +34,9 @@
 ## @end example
 ##
 ## @seealso{saveobj, class}
 ## @end deftypefn
 
 function b = loadobj (a)
   error ('loadobj: not defined for class "%s"', class (a));
 endfunction
+
diff --git a/scripts/general/private/__isequal__.m b/scripts/general/private/__isequal__.m
--- a/scripts/general/private/__isequal__.m
+++ b/scripts/general/private/__isequal__.m
@@ -177,8 +177,9 @@ function t = __isequal__ (nans_compare_e
 
   if (!t)
     t = false;
   else
     t = true;
   endif
 
 endfunction
+
diff --git a/scripts/general/private/__splinen__.m b/scripts/general/private/__splinen__.m
--- a/scripts/general/private/__splinen__.m
+++ b/scripts/general/private/__splinen__.m
@@ -39,8 +39,9 @@ function yi = __splinen__ (x, y, xi, ext
 
   [xi{:}] = ndgrid (cellfun (@(x) x(:), xi, "uniformoutput", false){:});
   idx = zeros (size (xi{1}));
   for i = 1 : length (x)
     idx |= xi{i} < min (x{i}(:)) | xi{i} > max (x{i}(:));
   endfor
   yi(idx) = extrapval;
 endfunction
+
diff --git a/scripts/general/profexplore.m b/scripts/general/profexplore.m
--- a/scripts/general/profexplore.m
+++ b/scripts/general/profexplore.m
@@ -130,8 +130,9 @@ function rv = __profexplore_worker (fcn_
       printf (" information.\n");
     else
       printf ("Unrecognized input.  Type 'help' to get a list of possible");
       printf (" commands.\n");
     endif
 
   endwhile
 endfunction
+
diff --git a/scripts/general/quadgk.m b/scripts/general/quadgk.m
--- a/scripts/general/quadgk.m
+++ b/scripts/general/quadgk.m
@@ -452,8 +452,9 @@ endfunction
 %!assert (quadgk (@(z) log (z),1+1i,1+1i, "WayPoints", [1-1i, -1,-1i, -1+1i]), -pi * 1i, 1e-6)
 
 %!assert (quadgk (@(x) exp (-x .^ 2),-Inf,Inf), sqrt (pi), 1e-6)
 %!assert (quadgk (@(x) exp (-x .^ 2),-Inf,0), sqrt (pi)/2, 1e-6)
 
 %!error (quadgk (@sin))
 %!error (quadgk (@sin, -pi))
 %!error (quadgk (@sin, -pi, pi, "DummyArg"))
+
diff --git a/scripts/general/randi.m b/scripts/general/randi.m
--- a/scripts/general/randi.m
+++ b/scripts/general/randi.m
@@ -106,16 +106,17 @@ function ri = randi (bounds, varargin)
   ri = imin + floor ( (imax-imin+1)*rand (varargin{:}) );
 
   if (! strcmp (rclass, "double"))
     ri = cast (ri, rclass);
   endif
 
 endfunction
 
+
 %!test
 %! ri = randi (10, 1000, 1);
 %! assert (ri, fix (ri));
 %! assert (min (ri), 1);
 %! assert (max (ri), 10);
 %! assert (rows (ri), 1000);
 %! assert (columns (ri), 1);
 %! assert (class (ri), "double");
diff --git a/scripts/general/repmat.m b/scripts/general/repmat.m
--- a/scripts/general/repmat.m
+++ b/scripts/general/repmat.m
@@ -120,16 +120,17 @@ function x = repmat (A, m, n)
     ## add singleton dims
     aaidx(2,:) = 1;
     A = reshape (A, aaidx(:));
     x = reshape (A (cidx{:}), idx .* aidx);
   endif
 
 endfunction
 
+
 # Tests for ML compatibility
 %!shared x
 %! x = [1 2 3];
 %!assert (repmat (x, [3, 1]), repmat (x, 3, []))
 %!assert (repmat (x, [3, 1]), repmat (x, [], 3))
 %!assert (repmat (x, [1, 3]), repmat (x, [], [1, 3]))
 %!assert (repmat (x, [1, 3]), repmat (x, [1, 3], []))
 %!assert (repmat (x, [1 3]), repmat (x, [1 3; 3 3]))
diff --git a/scripts/general/saveobj.m b/scripts/general/saveobj.m
--- a/scripts/general/saveobj.m
+++ b/scripts/general/saveobj.m
@@ -37,8 +37,9 @@
 ## @end example
 ##
 ## @seealso{loadobj, class}
 ## @end deftypefn
 
 function b = saveobj (a)
   error ('saveobj: not defined for class "%s"', class (a));
 endfunction
+
diff --git a/scripts/geometry/delaunay.m b/scripts/geometry/delaunay.m
--- a/scripts/geometry/delaunay.m
+++ b/scripts/geometry/delaunay.m
@@ -161,8 +161,9 @@ endfunction
 %! assert (sortrows (sort (delaunay (x), 2)), [1,2,5;1,4,5;2,3,5;3,4,5]);
 
 %!testif HAVE_QHULL
 %! x = [1 5 2; 5 6 7];
 %! y = [5 7 8; 1 2 3];
 %! assert (sortrows (sort (delaunay (x, y), 2)), [1,2,4;1,3,4;1,3,5;3,4,6]);
 
 %% FIXME: Need input validation tests
+
diff --git a/scripts/help/__unimplemented__.m b/scripts/help/__unimplemented__.m
--- a/scripts/help/__unimplemented__.m
+++ b/scripts/help/__unimplemented__.m
@@ -437,8 +437,9 @@ endfunction
 
 %!test
 %! str = __unimplemented__ ("no_name_function");
 %! assert (isempty (str));
 %! str = __unimplemented__ ("quad2d");
 %! assert (str(1:51), "quad2d is not implemented.  Consider using dblquad.");
 %! str = __unimplemented__ ("MException");
 %! assert (str(1:58), "the 'MException' function is not yet implemented in Octave");
+
diff --git a/scripts/help/doc_cache_create.m b/scripts/help/doc_cache_create.m
--- a/scripts/help/doc_cache_create.m
+++ b/scripts/help/doc_cache_create.m
@@ -152,8 +152,9 @@ function cache = gen_builtin_cache ()
 
   cache = create_cache (list);
 endfunction
 
 
 %% No true tests desirable for this function.
 %% Test input validation
 %!error doc_cache_create (1)
+
diff --git a/scripts/help/get_first_help_sentence.m b/scripts/help/get_first_help_sentence.m
--- a/scripts/help/get_first_help_sentence.m
+++ b/scripts/help/get_first_help_sentence.m
@@ -152,17 +152,18 @@ function [text, status] = first_sentence
   ## Strip tags
   [help_text, status] = strip_html_tags (help_text);
 
   ## Extract first line with plain text method.
   text = first_sentence_plain_text (help_text, max_len);
 endfunction
 
 
-%!assert (get_first_help_sentence ('get_first_help_sentence'), "Return the first sentence of a function's help text.")
+%!assert (get_first_help_sentence ('get_first_help_sentence'), ...
+%!        "Return the first sentence of a function's help text.")
 
 %% Test input validation
 %!error get_first_help_sentence ()
 %!error get_first_help_sentence (1, 2, 3)
 %!error <NAME must be a string> get_first_help_sentence (1)
 %!error <MAX_LEN must be positive integer> get_first_help_sentence ("ls", "a")
 %!error <MAX_LEN must be positive integer> get_first_help_sentence ("ls", 0)
 %!error <MAX_LEN must be positive integer> get_first_help_sentence ("ls", 80.1)
diff --git a/scripts/help/help.m b/scripts/help/help.m
--- a/scripts/help/help.m
+++ b/scripts/help/help.m
@@ -204,9 +204,8 @@ function do_contents (name)
   endif
 
 endfunction
 
 
 %!assert (! isempty (strfind (help ("ls"), "List directory contents")))
 %!error <invalid input> help (42)
 
-
diff --git a/scripts/help/print_usage.m b/scripts/help/print_usage.m
--- a/scripts/help/print_usage.m
+++ b/scripts/help/print_usage.m
@@ -134,8 +134,9 @@ function [retval, status] = get_usage_ht
 
   ## Extract first line with plain text method.
   retval = get_usage_plain_text (help_text, max_len);
 endfunction
 
 
 ## Stop reporting function as missing tests.  No good tests possible.
 %!assert (1)
+
diff --git a/scripts/help/private/__additional_help_message__.m b/scripts/help/private/__additional_help_message__.m
--- a/scripts/help/private/__additional_help_message__.m
+++ b/scripts/help/private/__additional_help_message__.m
@@ -32,8 +32,9 @@ available in the online version of the m
 'doc <topic>' to search the manual index.\n\
 \n\
 Help and information about Octave is also available on the WWW\n\
 at http://www.octave.org and via the help@octave.org\n\
 mailing list.\n";
   endif
 
 endfunction
+
diff --git a/scripts/help/private/__strip_html_tags__.m b/scripts/help/private/__strip_html_tags__.m
--- a/scripts/help/private/__strip_html_tags__.m
+++ b/scripts/help/private/__strip_html_tags__.m
@@ -74,8 +74,9 @@ function text = strip_superfluous_endlin
     start = groups (idx (k), 1);
     stop = start + groups (idx (k), 2) - 1;
     keep (start+2:stop) = false;
   endfor
 
   ## Actually remove the elements
   text = text (keep);
 endfunction
+
diff --git a/scripts/help/type.m b/scripts/help/type.m
--- a/scripts/help/type.m
+++ b/scripts/help/type.m
@@ -119,8 +119,9 @@ endfunction
 %! assert (typestr, "var is a variable");
 
 %!assert (type ("amd"){1}, "amd is a dynamically-linked function")
 %!assert (type ("cat"){1}, "cat is a built-in function")
 %!assert (type ("+"){1}, "+ is an operator")
 %!assert (type ("end"){1}, "end is a keyword")
 %!error (type ('NO_NAME'))
  
+
diff --git a/scripts/image/imfinfo.m b/scripts/image/imfinfo.m
--- a/scripts/image/imfinfo.m
+++ b/scripts/image/imfinfo.m
@@ -117,8 +117,9 @@ function info = imfinfo (varargin)
     print_usage ();
   elseif (! ischar (varargin{1}))
     error ("imfinfo: FILENAME must be a string");
   elseif (nargin > 1 && ! ischar (varargin{2}))
     error ("imfinfo: EXT must be a string");
   endif
   info = imageIO (@__imfinfo__, "info", varargin, varargin{:});
 endfunction
+
diff --git a/scripts/image/imformats.m b/scripts/image/imformats.m
--- a/scripts/image/imformats.m
+++ b/scripts/image/imformats.m
@@ -277,16 +277,17 @@ endfunction
 function bool = isa_magick (coder, filename)
   bool = false;
   try
     info = __imfinfo__ (filename);
     bool = strcmp (coder, info.Format);
   end_try_catch
 endfunction
 
+
 ## changing the function to read
 %!testif HAVE_MAGICK
 %! fmt = imformats ("jpg");
 %! fmt.read = @(x) size (x, 2);
 %! imformats ("update", "jpg", fmt);
 %! assert (imread ("this is 30 characters long.jpg"), 30);
 
 ## adding a new format
diff --git a/scripts/image/imread.m b/scripts/image/imread.m
--- a/scripts/image/imread.m
+++ b/scripts/image/imread.m
@@ -97,16 +97,17 @@ function varargout = imread (varargin)
   filename = {varargin{1}};
   if (nargin > 1 && ischar (varargin {2}))
     filename{2} = varargin{2};
   endif
 
   [varargout{1:nargout}] = imageIO (@__imread__, "read", filename, varargin{:});
 endfunction
 
+
 %!testif HAVE_MAGICK
 %! vpng = [ ...
 %!  137,  80,  78,  71,  13,  10,  26,  10,   0,   0, ...
 %!    0,  13,  73,  72,  68,  82,   0,   0,   0,   3, ...
 %!    0,   0,   0,   3,   8,   2,   0,   0,   0, 217, ...
 %!   74,  34, 232,   0,   0,   0,   1, 115,  82,  71, ...
 %!   66,   0, 174, 206,  28, 233,   0,   0,   0,   4, ...
 %!  103,  65,  77,  65,   0,   0, 177, 143,  11, 252, ...
diff --git a/scripts/image/imwrite.m b/scripts/image/imwrite.m
--- a/scripts/image/imwrite.m
+++ b/scripts/image/imwrite.m
@@ -87,16 +87,17 @@ function imwrite (varargin)
              ext);
     __imwrite__ (varargin{:});
   else
     fmt.write (varargin{:});
   endif
 
 endfunction
 
+
 %% Test input validation
 %!error imwrite ()                            # Wrong # of args
 %!error imwrite (1)                           # Wrong # of args
 %!error imwrite ({"cell"}, "filename.jpg")    # Wrong class for img
 %!error imwrite (1, [], "filename.jpg")       # Empty image map
 %!error imwrite (1, 2, 3)                     # No filename specified
 %!error imwrite (1, "filename")               # No fmt specified
 %!error imwrite (1, "filename", "junk")       # Invalid fmt specified
@@ -108,8 +109,9 @@ endfunction
 %! filename = [tmpnam() ".png"];
 %! unwind_protect
 %!   imwrite (imw, filename);
 %!   imr = imread (filename);
 %! unwind_protect_cleanup
 %!   unlink (filename);
 %! end_unwind_protect
 %! assert (imw, imr)
+
diff --git a/scripts/image/private/__imfinfo__.m b/scripts/image/private/__imfinfo__.m
--- a/scripts/image/private/__imfinfo__.m
+++ b/scripts/image/private/__imfinfo__.m
@@ -64,8 +64,9 @@ function info = __imfinfo__ (filename, e
 
   unwind_protect_cleanup
     if (delete_file)
       unlink (fn);
     endif
   end_unwind_protect
 
 endfunction
+
diff --git a/scripts/image/private/__imread__.m b/scripts/image/private/__imread__.m
--- a/scripts/image/private/__imread__.m
+++ b/scripts/image/private/__imread__.m
@@ -199,8 +199,9 @@ endfunction
 ## string "all"
 function bool = is_valid_index_option (arg)
   ## is the index option
   bool = false;
   if (isvector (arg) && isnumeric (arg) && isreal (arg))
     bool = true;
   endif
 endfunction
+
diff --git a/scripts/image/private/__imwrite__.m b/scripts/image/private/__imwrite__.m
--- a/scripts/image/private/__imwrite__.m
+++ b/scripts/image/private/__imwrite__.m
@@ -111,8 +111,9 @@ function __imwrite__ (img, varargin)
   elseif (all (size (img, 3) != [1 3 4]))
     ## 1, 3, or 4 for grayscle, RGB, and CMYK respectively
     error ("imwrite: IMG 3rd dimension must be 1, 3, or 4");
   endif
 
   __magick_write__ (filename, ext, img, map, options);
 
 endfunction
+
diff --git a/scripts/image/private/imageIO.m b/scripts/image/private/imageIO.m
--- a/scripts/image/private/imageIO.m
+++ b/scripts/image/private/imageIO.m
@@ -61,8 +61,9 @@ function varargout = imageIO (core_func,
   ## When there is no match, fmt will be a 1x1 structure with no fields,
   ## so we can't just use `isempty (fmt)'.
   if (isempty (fieldnames (fmt)))
     [varargout{1:nargout}] = core_func (varargin{:});
   else
     [varargout{1:nargout}] = fmt.(fieldname) (varargin{:});
   endif
 endfunction
+
diff --git a/scripts/image/private/imwrite_filename.m b/scripts/image/private/imwrite_filename.m
--- a/scripts/image/private/imwrite_filename.m
+++ b/scripts/image/private/imwrite_filename.m
@@ -61,8 +61,9 @@ function [filename, ext, cmap, options] 
     endif
   endif
 
   ## After all the work finding where the filename was, we might as well
   ## send the leftovers list (they should be in key value pairs)
   options = varargin(options_idx:end);
 
 endfunction
+
diff --git a/scripts/image/private/ind2x.m b/scripts/image/private/ind2x.m
--- a/scripts/image/private/ind2x.m
+++ b/scripts/image/private/ind2x.m
@@ -52,8 +52,9 @@ function [x, map] = ind2x (caller, x, ma
   num_colors = rows (map);
   if (num_colors < maxidx)
     ## Pad with the last color in the map for Matlab compatibility
     pad = repmat (map(end,:), maxidx - num_colors, 1);
     map(end+1:maxidx, :) = pad;
   endif
 
 endfunction
+
diff --git a/scripts/io/beep.m b/scripts/io/beep.m
--- a/scripts/io/beep.m
+++ b/scripts/io/beep.m
@@ -31,8 +31,9 @@ function beep ()
   endif
 
   puts ("\a");
 
 endfunction
 
 
 %!error (beep (1))
+
diff --git a/scripts/io/strread.m b/scripts/io/strread.m
--- a/scripts/io/strread.m
+++ b/scripts/io/strread.m
@@ -989,8 +989,9 @@ endfunction
 %!error <format specifiers are not supported> strread ("a", "%f64")
 %!error <format specifiers are not supported> strread ("a", "%*f64 %s")
 %!error <format specifiers are not supported> strread ("a", "%u32")
 %!error <format specifiers are not supported> strread ("a", "%*u32 %d")
 
 %% Illegal format specifiers
 %!test
 %!error <unknown format specifier> strread ("1.0", "%z")
+
diff --git a/scripts/io/textread.m b/scripts/io/textread.m
--- a/scripts/io/textread.m
+++ b/scripts/io/textread.m
@@ -214,16 +214,17 @@ function varargout = textread (filename,
     endif
     varargout{1} = reshape (varargout{1}, ncols, nrows)';
     ## ML replaces empty values with NaNs
     varargout{1}(find (isnan (varargout{1}))) = 0;
   endif
 
 endfunction
 
+
 %!test
 %! f = tmpnam ();
 %! d = rand (5, 3);
 %! dlmwrite (f, d, "precision", "%5.2f");
 %! [a, b, c] = textread (f, "%f %f %f", "delimiter", ",", "headerlines", 3);
 %! unlink (f);
 %! assert (a, d(4:5, 1), 1e-2);
 %! assert (b, d(4:5, 2), 1e-2);
@@ -310,8 +311,9 @@ endfunction
 %% Test input validation
 %!error textread ()
 %!error textread (1)
 %!error <arguments must be strings> textread (1, "%f")
 %!error <arguments must be strings> textread ("fname", 1)
 %!error <missing or illegal value for> textread (file_in_loadpath ("textread.m"), "", "headerlines")
 %!error <missing or illegal value for> textread (file_in_loadpath ("textread.m"), "", "headerlines", 'hh')
 %!error <character value required for> textread (file_in_loadpath ("textread.m"), "%s", "endofline", true)
+
diff --git a/scripts/io/textscan.m b/scripts/io/textscan.m
--- a/scripts/io/textscan.m
+++ b/scripts/io/textscan.m
@@ -655,8 +655,9 @@ endfunction
 %! fseek (fid, 0, "bof");
 %! msg1 = "textscan: character value required for EndOfLine";
 %! try
 %! A = textscan (fid, "%f", "EndOfLine", 33);
 %! end_try_catch;
 %! fclose (fid);
 %! unlink (f);
 %! assert (msg1, lasterr);
+
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -239,8 +239,9 @@ endfunction
 
 
 function [a1, b1] = swap (a, b)
 
   a1 = b;
   b1 = a;
 
 endfunction
+
diff --git a/scripts/linear-algebra/subspace.m b/scripts/linear-algebra/subspace.m
--- a/scripts/linear-algebra/subspace.m
+++ b/scripts/linear-algebra/subspace.m
@@ -54,8 +54,9 @@ function ang = subspace (A, B)
     endif
     ssin = max (svd (c));
     ang = asin (min (ssin, 1));
   else
     ang = acos (scos);
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/bug_report.m b/scripts/miscellaneous/bug_report.m
--- a/scripts/miscellaneous/bug_report.m
+++ b/scripts/miscellaneous/bug_report.m
@@ -42,8 +42,9 @@ function bug_report ()
   puts ("  quickly and efficiently.\n");
   puts ("\n");
 
 endfunction
 
 
 ## Mark file as being tested.  No real test needed for this function.
 %!assert (1)
+
diff --git a/scripts/miscellaneous/bunzip2.m b/scripts/miscellaneous/bunzip2.m
--- a/scripts/miscellaneous/bunzip2.m
+++ b/scripts/miscellaneous/bunzip2.m
@@ -35,8 +35,9 @@ function varargout = bunzip2 (bzfile, di
   if (nargout > 0)
     varargout = cell (1, nargout);
     [varargout{:}] = unpack (bzfile, dir, mfilename ());
   else
     unpack (bzfile, dir, mfilename ());
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/cast.m b/scripts/miscellaneous/cast.m
--- a/scripts/miscellaneous/cast.m
+++ b/scripts/miscellaneous/cast.m
@@ -38,8 +38,9 @@ function retval = cast (val, typ)
     else
       error ("cast: expecting TYPE name as second argument");
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/copyfile.m b/scripts/miscellaneous/copyfile.m
--- a/scripts/miscellaneous/copyfile.m
+++ b/scripts/miscellaneous/copyfile.m
@@ -124,8 +124,9 @@ function [status, msg, msgid] = copyfile
         msgid = "copyfile";
       endif
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/debug.m b/scripts/miscellaneous/debug.m
--- a/scripts/miscellaneous/debug.m
+++ b/scripts/miscellaneous/debug.m
@@ -86,8 +86,9 @@
 ## @seealso{dbstop, dbclear, dbstatus, dbwhere, dbtype, dbcont, dbquit,
 ##          dbstack, dbup, dbdown, keyboard, debug_on_error, debug_on_warning,
 ##          debug_on_interrupt, isdebugmode}
 ## @end deftypefn
 
 function debug ()
   help ("debug");
 endfunction
+
diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -135,8 +135,9 @@ function retval = dir (directory)
   elseif (length (info) > 0)
     ## Print the structure to the screen.
     printf ("%s", list_in_columns ({info.name}));
   else
     warning ("dir: nonexistent directory '%s'", directory);
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/dump_prefs.m b/scripts/miscellaneous/dump_prefs.m
--- a/scripts/miscellaneous/dump_prefs.m
+++ b/scripts/miscellaneous/dump_prefs.m
@@ -91,8 +91,9 @@ function dump_prefs (file)
       endif
       fprintf (file, "  %s = %s\n", sym, val);
     catch
       fprintf (file, "# %s = <no value or error in displaying it>\n", sym);
     end_try_catch
   endfor
 
 endfunction
+
diff --git a/scripts/miscellaneous/error_ids.m b/scripts/miscellaneous/error_ids.m
--- a/scripts/miscellaneous/error_ids.m
+++ b/scripts/miscellaneous/error_ids.m
@@ -49,8 +49,9 @@
 
 function error_ids ()
   help ("error_ids");
 endfunction
 
 
 ## Remove from test statistics.  No real tests possible
 %!assert (1)
+
diff --git a/scripts/miscellaneous/fileattrib.m b/scripts/miscellaneous/fileattrib.m
--- a/scripts/miscellaneous/fileattrib.m
+++ b/scripts/miscellaneous/fileattrib.m
@@ -138,8 +138,9 @@ function [status, msg, msgid] = fileattr
         msg = r;
       endif
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/gunzip.m b/scripts/miscellaneous/gunzip.m
--- a/scripts/miscellaneous/gunzip.m
+++ b/scripts/miscellaneous/gunzip.m
@@ -36,8 +36,9 @@ function varargout = gunzip (gzfile, dir
   if (nargout > 0)
     varargout = cell (1, nargout);
     [varargout{:}] = unpack (gzfile, dir, mfilename ());
   else
     unpack (gzfile, dir, mfilename ());
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/isdeployed.m b/scripts/miscellaneous/isdeployed.m
--- a/scripts/miscellaneous/isdeployed.m
+++ b/scripts/miscellaneous/isdeployed.m
@@ -25,8 +25,9 @@
 ## @end deftypefn
 
 function retval = isdeployed ()
   retval = false;
 endfunction
 
 
 %!assert (isdeployed (), false)
+
diff --git a/scripts/miscellaneous/ismac.m b/scripts/miscellaneous/ismac.m
--- a/scripts/miscellaneous/ismac.m
+++ b/scripts/miscellaneous/ismac.m
@@ -31,8 +31,9 @@ function retval = ismac ()
   endif
 
 endfunction
 
 
 %!assert (islogical (ismac ()))
 
 %!error ismac (1)
+
diff --git a/scripts/miscellaneous/mex.m b/scripts/miscellaneous/mex.m
--- a/scripts/miscellaneous/mex.m
+++ b/scripts/miscellaneous/mex.m
@@ -22,8 +22,9 @@
 ## This is equivalent to @code{mkoctfile --mex [options] file}.
 ## @seealso{mkoctfile}
 ## @end deftypefn
 
 function mex (varargin)
   args = {"--mex", varargin{:}};
   mkoctfile (args{:});
 endfunction
+
diff --git a/scripts/miscellaneous/mexext.m b/scripts/miscellaneous/mexext.m
--- a/scripts/miscellaneous/mexext.m
+++ b/scripts/miscellaneous/mexext.m
@@ -23,8 +23,9 @@
 ## @end deftypefn
 
 function retval = mexext ()
   retval = "mex";
 endfunction
 
 
 %!assert (mexext (), "mex")
+
diff --git a/scripts/miscellaneous/mkoctfile.m b/scripts/miscellaneous/mkoctfile.m
--- a/scripts/miscellaneous/mkoctfile.m
+++ b/scripts/miscellaneous/mkoctfile.m
@@ -162,8 +162,9 @@ function [output, status] = mkoctfile (v
   if (sys == 127)
     warning ("unable to find mkoctfile in expected location: '%s'",
              shell_script);
 
     warning ("mkoctfile exited with failure status");
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/movefile.m b/scripts/miscellaneous/movefile.m
--- a/scripts/miscellaneous/movefile.m
+++ b/scripts/miscellaneous/movefile.m
@@ -121,8 +121,9 @@ function [status, msg, msgid] = movefile
         status = false;
         msgid = "movefile";
       endif
     endif
   else
     print_usage ();
   endif
 endfunction
+
diff --git a/scripts/miscellaneous/namelengthmax.m b/scripts/miscellaneous/namelengthmax.m
--- a/scripts/miscellaneous/namelengthmax.m
+++ b/scripts/miscellaneous/namelengthmax.m
@@ -27,8 +27,9 @@
 ## @end deftypefn
 
 function n = namelengthmax ()
   n = 63;
 endfunction
 
 
 %!assert (namelengthmax (), 63)
+
diff --git a/scripts/miscellaneous/news.m b/scripts/miscellaneous/news.m
--- a/scripts/miscellaneous/news.m
+++ b/scripts/miscellaneous/news.m
@@ -35,8 +35,9 @@ function news (package = "octave")
   endif
 
 endfunction
 
 
 %!error news (1, 2)
 %!error <news: PACKAGE must be a string> news (1)
 %!error <news: package .* is not installed> news ("__NOT_A_VALID_PKG_NAME__")
+
diff --git a/scripts/miscellaneous/pack.m b/scripts/miscellaneous/pack.m
--- a/scripts/miscellaneous/pack.m
+++ b/scripts/miscellaneous/pack.m
@@ -22,8 +22,9 @@
 ## compatibility, but does nothing in Octave.
 ## @end deftypefn
 
 ## Author: jwe
 
 function pack ()
 
 endfunction
+
diff --git a/scripts/miscellaneous/perl.m b/scripts/miscellaneous/perl.m
--- a/scripts/miscellaneous/perl.m
+++ b/scripts/miscellaneous/perl.m
@@ -43,8 +43,9 @@ function [output, status] = perl (script
 
     [status, output] = system (["perl " scriptfile ...
                                 sprintf(" %s", varargin{:})]);
   else
     error ("perl: invalid arguments");
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/private/display_info_file.m b/scripts/miscellaneous/private/display_info_file.m
--- a/scripts/miscellaneous/private/display_info_file.m
+++ b/scripts/miscellaneous/private/display_info_file.m
@@ -48,8 +48,9 @@ function display_info_file (func, packag
 
   fid = fopen (filepath, "r");
   while (ischar (line = fgets (fid)))
     puts (line);
   endwhile
   fclose (fid);
 
 endfunction
+
diff --git a/scripts/miscellaneous/python.m b/scripts/miscellaneous/python.m
--- a/scripts/miscellaneous/python.m
+++ b/scripts/miscellaneous/python.m
@@ -42,8 +42,9 @@ function [output, status] = python (scri
 
     [status, output] = system (["python ", scriptfile, ...
                                 sprintf(" %s", varargin{:})]);
   else
     error ("python: invalid arguments");
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/rmappdata.m b/scripts/miscellaneous/rmappdata.m
--- a/scripts/miscellaneous/rmappdata.m
+++ b/scripts/miscellaneous/rmappdata.m
@@ -40,16 +40,17 @@ function rmappdata (h, varargin)
         endif
       endfor
       set (h(nh), "__appdata__", appdata);
     endif
   endfor
 
 endfunction
 
+
 %!test
 %! setappdata (0, "hello", "world");
 %! rmappdata (0, "hello");
 %! assert (isappdata (0, "hello"), false);
 
 %!test
 %! setappdata (0, "data1", rand (3));
 %! setappdata (0, "data2", {"hello", "world"});
diff --git a/scripts/miscellaneous/run.m b/scripts/miscellaneous/run.m
--- a/scripts/miscellaneous/run.m
+++ b/scripts/miscellaneous/run.m
@@ -54,8 +54,9 @@ function run (script)
     if (exist (script, "file"))
       evalin ("caller", sprintf ("source (\"%s\");", script),
               "rethrow (lasterror ())");
     else
       error ("run: %s not found", script);
     endif
   endif
 endfunction
+
diff --git a/scripts/miscellaneous/tar.m b/scripts/miscellaneous/tar.m
--- a/scripts/miscellaneous/tar.m
+++ b/scripts/miscellaneous/tar.m
@@ -59,8 +59,9 @@ function entries = tar (tarfile, files, 
     if (output(end) == "\n")
       output(end) = [];
     endif
     entries = ostrsplit (output, "\n");
     entries = entries';
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/tempname.m b/scripts/miscellaneous/tempname.m
--- a/scripts/miscellaneous/tempname.m
+++ b/scripts/miscellaneous/tempname.m
@@ -28,8 +28,9 @@ function filename = tempname (varargin)
 
   filename = tmpnam (varargin{:});
 
 endfunction
 
 
 %% No tests needed for alias.
 %!assert (1)
+
diff --git a/scripts/miscellaneous/untar.m b/scripts/miscellaneous/untar.m
--- a/scripts/miscellaneous/untar.m
+++ b/scripts/miscellaneous/untar.m
@@ -36,8 +36,9 @@ function varargout = untar (tarfile, dir
   if (nargout > 0)
     varargout = cell (1, nargout);
     [varargout{:}] = unpack (tarfile, dir, mfilename ());
   else
     unpack (tarfile, dir, mfilename ());
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/unzip.m b/scripts/miscellaneous/unzip.m
--- a/scripts/miscellaneous/unzip.m
+++ b/scripts/miscellaneous/unzip.m
@@ -36,8 +36,9 @@ function varargout = unzip (zipfile, dir
   if (nargout > 0)
     varargout = cell (1, nargout);
     [varargout{:}] = unpack (zipfile, dir, mfilename ());
   else
     unpack (zipfile, dir, mfilename ());
   endif
 
 endfunction
+
diff --git a/scripts/miscellaneous/what.m b/scripts/miscellaneous/what.m
--- a/scripts/miscellaneous/what.m
+++ b/scripts/miscellaneous/what.m
@@ -103,8 +103,9 @@ function __display_filenames__ (msg, p, 
       args  = f(i:nrows:end);
       if (length (args) < ncols)
         args(end + 1 : ncols) = {""};
       endif
       printf (fmt, args{:});
     endfor
   endif
 endfunction
+
diff --git a/scripts/miscellaneous/zip.m b/scripts/miscellaneous/zip.m
--- a/scripts/miscellaneous/zip.m
+++ b/scripts/miscellaneous/zip.m
@@ -61,8 +61,9 @@ function entries = zip (zipfile, files, 
     endif
     if (entries(end) == "\n")
       entries(end) = [];
     endif
     entries = ostrsplit (entries, "\n");
   endif
 
 endfunction
+
diff --git a/scripts/optimization/fminunc.m b/scripts/optimization/fminunc.m
--- a/scripts/optimization/fminunc.m
+++ b/scripts/optimization/fminunc.m
@@ -422,8 +422,9 @@ function x = __doglegm__ (r, g, d, delta
     else
       alpha = delta / xn;
       snm = 0;
     endif
     ## Form the appropriate convex combination.
     x = alpha * x + ((1-alpha) * min (snm, delta)) * s;
   endif
 endfunction
+
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -456,16 +456,17 @@ endfunction
 
 function [fx, jx] = make_fcn_jac (x, fcn, fjac)
   fx = fcn (x);
   if (nargout == 2)
     jx = fjac (x);
   endif
 endfunction
 
+
 %!function retval = __f (p)
 %!  x = p(1);
 %!  y = p(2);
 %!  z = p(3);
 %!  retval = zeros (3, 1);
 %!  retval(1) = sin (x) + y^2 + log (z) - 7;
 %!  retval(2) = 3*x + 2^y -z^3 + 1;
 %!  retval(3) = x + y + z - 5;
diff --git a/scripts/optimization/fzero.m b/scripts/optimization/fzero.m
--- a/scripts/optimization/fzero.m
+++ b/scripts/optimization/fzero.m
@@ -352,13 +352,14 @@ function fx = guarded_eval (fun, x)
   fx = fx(1);
   if (! isreal (fx))
     error ("fzero:notreal", "fzero: non-real value encountered");
   elseif (isnan (fx))
     error ("fzero:isnan", "fzero: NaN value encountered");
   endif
 endfunction
 
+
 %!shared opt0
 %! opt0 = optimset ("tolx", 0);
 %!assert (fzero (@cos, [0, 3], opt0), pi/2, 10*eps)
 %!assert (fzero (@(x) x^(1/3) - 1e-8, [0,1], opt0), 1e-24, 1e-22*eps)
 
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -608,8 +608,9 @@ function [xopt, fmin, errnum, extra] = g
   else
     param = struct ();
   endif
 
   [xopt, fmin, errnum, extra] = ...
     __glpk__ (c, A, b, lb, ub, ctype, vartype, sense, param);
 
 endfunction
+
diff --git a/scripts/optimization/optimget.m b/scripts/optimization/optimget.m
--- a/scripts/optimization/optimget.m
+++ b/scripts/optimization/optimget.m
@@ -51,17 +51,19 @@ function retval = optimget (options, par
   elseif (nargin > 2)
     retval = default;
   else
     retval = [];
   endif
 
 endfunction
 
+
 %!error optimget ()
 
 %!shared opts
 %! opts = optimset ("tolx", 0.1, "maxit", 100);
 %!assert (optimget (opts, "TolX"), 0.1);
 %!assert (optimget (opts, "maxit"), 100);
 %!assert (optimget (opts, "MaxITer"), 100);
 %!warning (optimget (opts, "Max"));
 %!warning (optimget (opts, "foobar"));
+
diff --git a/scripts/optimization/optimset.m b/scripts/optimization/optimset.m
--- a/scripts/optimization/optimset.m
+++ b/scripts/optimization/optimset.m
@@ -167,8 +167,9 @@ endfunction
 
 
 %!assert (optimget (optimset ("tolx", 1e-2), "tOLx"), 1e-2)
 %!assert (isfield (optimset ("tolFun", 1e-3), "TolFun"))
 %!warning (optimset ("Max", 10));
 %!warning (optimset ("foobar", 13));
 
 %!error (optimset ("%NOT_A_REAL_FUNCTION_NAME%"))
+
diff --git a/scripts/optimization/qp.m b/scripts/optimization/qp.m
--- a/scripts/optimization/qp.m
+++ b/scripts/optimization/qp.m
@@ -400,8 +400,9 @@ function [x, obj, INFO, lambda] = qp (x0
     INFO.solveiter = iter;
     INFO.info = info;
 
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/optimization/sqp.m b/scripts/optimization/sqp.m
--- a/scripts/optimization/sqp.m
+++ b/scripts/optimization/sqp.m
@@ -762,8 +762,9 @@ endfunction
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1), ones (2,2),[])
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[], ones (2,2))
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),1,-1)
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[],[], ones (2,2))
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[],[],-1)
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[],[],1.5)
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[],[],[], ones (2,2))
 %!error sqp (1, cell (3,1), cell (2,1), cell (2,1),[],[],[],-1)
+
diff --git a/scripts/path/pathdef.m b/scripts/path/pathdef.m
--- a/scripts/path/pathdef.m
+++ b/scripts/path/pathdef.m
@@ -119,8 +119,9 @@ function specifiedpath = __extractpath__
     specifiedpath = strrep (regexprep (cstrcat (filelines(startline:endline){:}),
                                        " *path *\\('(.*)'\\); *", "$1"),
                             "''", "'");
   else
     specifiedpath = "";
   endif
 
 endfunction
+
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -551,8 +551,9 @@ function [local_packages, global_package
       else
         error ("no output arguments available");
       endif
 
     otherwise
       error ("you must specify a valid action for 'pkg'. See 'help pkg' for details");
   endswitch
 endfunction
+
diff --git a/scripts/pkg/private/build.m b/scripts/pkg/private/build.m
--- a/scripts/pkg/private/build.m
+++ b/scripts/pkg/private/build.m
@@ -56,8 +56,9 @@ function build (files, handle_deps, auto
     if (exist (installdir, "dir"))
       rmdir (installdir, "s");
     endif
     if (exist (buildlist, "file"))
       unlink (buildlist);
     endif
   end_unwind_protect
 endfunction
+
diff --git a/scripts/pkg/private/describe.m b/scripts/pkg/private/describe.m
--- a/scripts/pkg/private/describe.m
+++ b/scripts/pkg/private/describe.m
@@ -79,8 +79,9 @@ function [pkg_desc_list, flag] = describ
                                  pkg_desc_list{i}.version,
                                  pkg_desc_list{i}.provides,
                                  pkg_desc_list{i}.description,
                                  flag{i}, verbose);
     endfor
   endif
 
 endfunction
+
diff --git a/scripts/pkg/private/dirempty.m b/scripts/pkg/private/dirempty.m
--- a/scripts/pkg/private/dirempty.m
+++ b/scripts/pkg/private/dirempty.m
@@ -43,8 +43,9 @@ function emp = dirempty (nm, ign)
         return;
       endif
     endfor
     emp = true;
   else
     emp = true;
   endif
 endfunction
+
diff --git a/scripts/pkg/private/get_forge_download.m b/scripts/pkg/private/get_forge_download.m
--- a/scripts/pkg/private/get_forge_download.m
+++ b/scripts/pkg/private/get_forge_download.m
@@ -21,8 +21,9 @@
 ## @deftypefn {Function File} {[@var{url}, @var{local_file}] =} list_forge_packages ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [url, local_file] = get_forge_download (name)
   [ver, url] = get_forge_pkg (name);
   local_file = [name, "-", ver, ".tar.gz"];
 endfunction
+
diff --git a/scripts/pkg/private/get_forge_pkg.m b/scripts/pkg/private/get_forge_pkg.m
--- a/scripts/pkg/private/get_forge_pkg.m
+++ b/scripts/pkg/private/get_forge_pkg.m
@@ -73,8 +73,9 @@ function [ver, url] = get_forge_pkg (nam
         error ("get_forge_pkg: package not found: ""%s"". Maybe you meant ""%s?""", name, t{i});
       endif
     else
       error ("get_forge_pkg: could not read URL, please verify internet connection");
     endif
   endif
 
 endfunction
+
diff --git a/scripts/pkg/private/get_unsatisfied_deps.m b/scripts/pkg/private/get_unsatisfied_deps.m
--- a/scripts/pkg/private/get_unsatisfied_deps.m
+++ b/scripts/pkg/private/get_unsatisfied_deps.m
@@ -47,8 +47,9 @@ function bad_deps = get_unsatisfied_deps
         endif
       endfor
       if (! ok)
         bad_deps{end+1} = dep;
       endif
     endif
   endfor
 endfunction
+
diff --git a/scripts/pkg/private/install.m b/scripts/pkg/private/install.m
--- a/scripts/pkg/private/install.m
+++ b/scripts/pkg/private/install.m
@@ -336,8 +336,9 @@ function install (files, handle_deps, au
   ## we are checking if desc exists too because it's possible to ge to this point
   ## without creating it such as giving an invalid filename for the package
   if (exist ("desc", "var") && exist (fullfile (desc.dir, "packinfo", "NEWS"), "file"))
     printf ("For information about changes from previous versions of the %s package, run 'news (\"%s\")'.\n",
             desc.name, desc.name);
   endif
 
 endfunction
+
diff --git a/scripts/pkg/private/is_architecture_dependent.m b/scripts/pkg/private/is_architecture_dependent.m
--- a/scripts/pkg/private/is_architecture_dependent.m
+++ b/scripts/pkg/private/is_architecture_dependent.m
@@ -39,8 +39,9 @@ function dep = is_architecture_dependent
       if (! isglob && (length (nm) - pos(end) != length (ext) - 1))
         continue;
       endif
       dep = true;
       break;
     endif
   endfor
 endfunction
+
diff --git a/scripts/pkg/private/list_forge_packages.m b/scripts/pkg/private/list_forge_packages.m
--- a/scripts/pkg/private/list_forge_packages.m
+++ b/scripts/pkg/private/list_forge_packages.m
@@ -37,8 +37,9 @@ function list = list_forge_packages ()
         ver = get_forge_pkg (list{i});
       catch
         ver = "unknown";
       end_try_catch
       printf ("  %s %s\n", list{i}, ver);
     endfor
   endif
 endfunction
+
diff --git a/scripts/pkg/private/rebuild.m b/scripts/pkg/private/rebuild.m
--- a/scripts/pkg/private/rebuild.m
+++ b/scripts/pkg/private/rebuild.m
@@ -92,8 +92,9 @@ function descriptions = rebuild (prefix,
         endif
       endfor
     endfor
     if (! isempty (dup))
       descriptions (dup) = [];
     endif
   endif
 endfunction
+
diff --git a/scripts/pkg/private/shell.m b/scripts/pkg/private/shell.m
--- a/scripts/pkg/private/shell.m
+++ b/scripts/pkg/private/shell.m
@@ -49,8 +49,9 @@ function [status, output] = shell (cmd, 
   ## the error message has already been displayed.
   output = "";
   if (verbose)
     [status] = system (cmd);
   else
     [status, output] = system (cmd);
   endif
 endfunction
+
diff --git a/scripts/pkg/private/uninstall.m b/scripts/pkg/private/uninstall.m
--- a/scripts/pkg/private/uninstall.m
+++ b/scripts/pkg/private/uninstall.m
@@ -139,8 +139,9 @@ function uninstall (pkgnames, handle_dep
       unlink (local_list);
     else
       local_packages = save_order (remaining_packages);
       save (local_list, "local_packages");
     endif
   endif
 
 endfunction
+
diff --git a/scripts/plot/axes.m b/scripts/plot/axes.m
--- a/scripts/plot/axes.m
+++ b/scripts/plot/axes.m
@@ -74,8 +74,9 @@ function h = axes (varargin)
     endif
   endif
 
   if (nargout > 0)
     h = htmp;
   endif
 
 endfunction
+
diff --git a/scripts/plot/box.m b/scripts/plot/box.m
--- a/scripts/plot/box.m
+++ b/scripts/plot/box.m
@@ -63,8 +63,9 @@ function box (varargin)
     endif
   else
     print_usage ();
   endif
 
   set (hax, "box", box_state);
 
 endfunction
+
diff --git a/scripts/plot/closereq.m b/scripts/plot/closereq.m
--- a/scripts/plot/closereq.m
+++ b/scripts/plot/closereq.m
@@ -35,8 +35,9 @@ function closereq ()
     if (! isempty (cf) && isfigure (cf))
       delete (cf);
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/plot/diffuse.m b/scripts/plot/diffuse.m
--- a/scripts/plot/diffuse.m
+++ b/scripts/plot/diffuse.m
@@ -51,8 +51,9 @@ function retval = diffuse (sx, sy, sz, l
     lv  /= norm (lv);
   endif
 
   ns = sqrt (sx.^2 + sy.^2 + sz.^2);
   retval = (sx * lv(1) + sy * lv(2) + sz * lv(3)) ./ ns;
   retval(retval < 0) = 0;
 
 endfunction
+
diff --git a/scripts/plot/ezpolar.m b/scripts/plot/ezpolar.m
--- a/scripts/plot/ezpolar.m
+++ b/scripts/plot/ezpolar.m
@@ -64,8 +64,9 @@ function h = ezpolar (varargin)
   endif
 
 endfunction
 
 
 %!demo
 %! clf;
 %! ezpolar (@(t) sin (5/4 * t), [0, 8*pi]);
+
diff --git a/scripts/plot/findfigs.m b/scripts/plot/findfigs.m
--- a/scripts/plot/findfigs.m
+++ b/scripts/plot/findfigs.m
@@ -74,8 +74,9 @@ function findfigs ()
           set (figh(i), "position", pos);
         endif
       unwind_protect_cleanup
         set (figh(i), "units", units);
       end_unwind_protect
     endif
   endfor
 endfunction
+
diff --git a/scripts/plot/gco.m b/scripts/plot/gco.m
--- a/scripts/plot/gco.m
+++ b/scripts/plot/gco.m
@@ -39,8 +39,9 @@
 ## @seealso{gcbo, gca, gcf, gcbf, get, set}
 ## @end deftypefn
 
 function h = gco ()
 
   h = get (get (0, "currentfigure"), "currentobject");
 
 endfunction
+
diff --git a/scripts/plot/guidata.m b/scripts/plot/guidata.m
--- a/scripts/plot/guidata.m
+++ b/scripts/plot/guidata.m
@@ -54,8 +54,9 @@ function varargout = guidata (varargin)
     else
       error ("invalid object handle");
     endif
   else
     print_usage ();
   endif
 
 endfunction
+
diff --git a/scripts/plot/guihandles.m b/scripts/plot/guihandles.m
--- a/scripts/plot/guihandles.m
+++ b/scripts/plot/guihandles.m
@@ -65,8 +65,9 @@ function hdata = __make_guihandles_struc
   endif
 
   kids = allchild (h);
   for i = 1 : length (kids)
     hdata = __make_guihandles_struct__ (kids(i), hdata);
   endfor
 
 endfunction
+
diff --git a/scripts/plot/hdl2struct.m b/scripts/plot/hdl2struct.m
--- a/scripts/plot/hdl2struct.m
+++ b/scripts/plot/hdl2struct.m
@@ -164,8 +164,9 @@ function prpstr = getprops (h)
       prpstr.(hidden{ii}) = get (h, hidden{ii});
     endif
   endfor
 
 endfunction
 
 
 ## FIXME: need validation tests
+
diff --git a/scripts/plot/linkprop.m b/scripts/plot/linkprop.m
--- a/scripts/plot/linkprop.m
+++ b/scripts/plot/linkprop.m
@@ -94,8 +94,9 @@ function delete_prop (h, d, hlist, prop)
       warn = true;
       break;
     endif
   endfor
   if (warn)
     warning ("linkprop: can not remove linked properties");
   endif
 endfunction
+
diff --git a/scripts/plot/peaks.m b/scripts/plot/peaks.m
--- a/scripts/plot/peaks.m
+++ b/scripts/plot/peaks.m
@@ -87,8 +87,9 @@ function [X_out, Y_out, Z_out] = peaks (
     X_out = Z;
   else
     X_out = X;
     Y_out = Y;
     Z_out = Z;
   endif
 
 endfunction
+
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -703,9 +703,8 @@ function cmd = pstoedit (opts, devopt)
   elseif (isempty (opts.pstoedit_binary))
     error ("print:nopstoedit", "print.m: 'pstoedit' not found in PATH");
   endif
   if (opts.debug)
     fprintf ("pstoedit command: '%s'\n", cmd);
   endif
 endfunction
 
-
diff --git a/scripts/plot/private/__add_datasource__.m b/scripts/plot/private/__add_datasource__.m
--- a/scripts/plot/private/__add_datasource__.m
+++ b/scripts/plot/private/__add_datasource__.m
@@ -44,8 +44,9 @@ function newargs = __add_datasource__ (f
       else
         error ("%s: expecting data source to be a string", fcn);
       endif
     else
       newargs{end + 1} = arg;
     endif
   endwhile
 endfunction
+
diff --git a/scripts/plot/private/__axis_label__.m b/scripts/plot/private/__axis_label__.m
--- a/scripts/plot/private/__axis_label__.m
+++ b/scripts/plot/private/__axis_label__.m
@@ -35,8 +35,9 @@ function retval = __axis_label__ (hax, c
           "string", txt,
           varargin{:});
 
   if (nargout > 0)
     retval = h;
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__clabel__.m b/scripts/plot/private/__clabel__.m
--- a/scripts/plot/private/__clabel__.m
+++ b/scripts/plot/private/__clabel__.m
@@ -109,8 +109,9 @@ function h = __clabel__ (c, v, hparent, 
                      "userdata", clev, varargin{:});
         endif
         h = [h; ht];
       endif
     endfor
     i1 += clen+1;
   endwhile
 endfunction
+
diff --git a/scripts/plot/private/__color_str_rgb__.m b/scripts/plot/private/__color_str_rgb__.m
--- a/scripts/plot/private/__color_str_rgb__.m
+++ b/scripts/plot/private/__color_str_rgb__.m
@@ -43,8 +43,9 @@ function rgb = __color_str_rgb__ (str)
       rgb = [1, 1, 1];
     else
       rgb = [0, 0, 0];
     endif
   else
     error ("__color_str_rgb__: expecting a string argument");
   endif
 endfunction
+
diff --git a/scripts/plot/private/__contour__.m b/scripts/plot/private/__contour__.m
--- a/scripts/plot/private/__contour__.m
+++ b/scripts/plot/private/__contour__.m
@@ -568,8 +568,9 @@ function lvl_eps = get_lvl_eps (lev)
     tmp = min (abs (diff (lev)));
     if (tmp < 10*eps)
       lvl_eps = sqrt (eps);
     else
       lvl_eps = tmp / 1000.0;
     endif
   endif
 endfunction
+
diff --git a/scripts/plot/private/__default_plot_options__.m b/scripts/plot/private/__default_plot_options__.m
--- a/scripts/plot/private/__default_plot_options__.m
+++ b/scripts/plot/private/__default_plot_options__.m
@@ -27,8 +27,9 @@ function options = __default_plot_option
 
   options.key = "";
   options.color = [];
   options.linestyle = [];
   options.marker = [];
   options.errorstyle = [];
 
 endfunction
+
diff --git a/scripts/plot/private/__errcomm__.m b/scripts/plot/private/__errcomm__.m
--- a/scripts/plot/private/__errcomm__.m
+++ b/scripts/plot/private/__errcomm__.m
@@ -71,8 +71,9 @@ function retval = __errcomm__ (caller, h
 
   if (! (ischar (a) || iscellstr (a)))
     retval = [retval; __errplot__("~", hax, data{1:ndata})];
   endif
 
   drawnow ();
 
 endfunction
+
diff --git a/scripts/plot/private/__file_filter__.m b/scripts/plot/private/__file_filter__.m
--- a/scripts/plot/private/__file_filter__.m
+++ b/scripts/plot/private/__file_filter__.m
@@ -86,8 +86,9 @@ function name = __default_filtername__ (
     extlist = toupper (extlist);
     extlist(end+1, :) = repmat ({","}, 1, length (extlist));
     extlist = strcat (extlist{:});
     extlist = extlist(1:end-1);
     name = strcat (extlist, "-Files");
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__fltk_file_filter__.m b/scripts/plot/private/__fltk_file_filter__.m
--- a/scripts/plot/private/__fltk_file_filter__.m
+++ b/scripts/plot/private/__fltk_file_filter__.m
@@ -57,8 +57,9 @@ function retval = __fltk_file_filter__ (
     else
       fltk_str = strcat (curr_desc, " (", curr_ext, ")");
     endif
 
   endfor
   retval = fltk_str;
 
 endfunction
+
diff --git a/scripts/plot/private/__getlegenddata__.m b/scripts/plot/private/__getlegenddata__.m
--- a/scripts/plot/private/__getlegenddata__.m
+++ b/scripts/plot/private/__getlegenddata__.m
@@ -51,8 +51,9 @@ function [hplots, text_strings] = __getl
           text_strings = {text_strings{:}, get(kids (i), "displayname")};
         endif
       endif
 
     endif
   endfor
 
 endfunction
+
diff --git a/scripts/plot/private/__gnuplot_open_stream__.m b/scripts/plot/private/__gnuplot_open_stream__.m
--- a/scripts/plot/private/__gnuplot_open_stream__.m
+++ b/scripts/plot/private/__gnuplot_open_stream__.m
@@ -38,8 +38,9 @@ function plot_stream = __gnuplot_open_st
     if (plot_stream < 0)
       error ("__gnuplot_open_stream__: failed to open connection to gnuplot");
     endif
   endif
   if (nargin > 1)
     set (h, "__plot_stream__", plot_stream);
   endif
 endfunction
+
diff --git a/scripts/plot/private/__gnuplot_print__.m b/scripts/plot/private/__gnuplot_print__.m
--- a/scripts/plot/private/__gnuplot_print__.m
+++ b/scripts/plot/private/__gnuplot_print__.m
@@ -308,8 +308,9 @@ function [h, fontsize] = get_figure_text
   fontsize = get (h, "fontsize");
   switch (numel (fontsize))
     case 0
       fontsize = {};
     case 1
       fontsize = {fontsize};
   endswitch
 endfunction
+
diff --git a/scripts/plot/private/__go_draw_axes__.m b/scripts/plot/private/__go_draw_axes__.m
--- a/scripts/plot/private/__go_draw_axes__.m
+++ b/scripts/plot/private/__go_draw_axes__.m
@@ -2654,8 +2654,9 @@ function retval = __do_enhanced_option__
   if (enhanced)
     if (strcmpi (obj.interpreter, "none"))
       retval = "noenhanced";
     else
       retval = "enhanced";
     endif
   endif
 endfunction
+
diff --git a/scripts/plot/private/__interp_cube__.m b/scripts/plot/private/__interp_cube__.m
--- a/scripts/plot/private/__interp_cube__.m
+++ b/scripts/plot/private/__interp_cube__.m
@@ -177,8 +177,9 @@ function [idx, frac] = cube_idx (x, y, z
       ./ (x(idx(:, 2)+1) - x(idx(:, 2)));
   idx(:, 1) = lookup (y(2:end-1), v(:, 2)) + 1;
   frac(:, 1) = (v(:, 2) - y(idx(:, 1))) ...
       ./ (y(idx(:, 1)+1) - y(idx(:, 1)));
   idx(:, 3) = lookup (z(2:end-1), v(:, 3)) + 1;
   frac(:, 3) = (v(:, 3) - z(idx(:, 3))) ...
       ./ (z(idx(:, 3)+1) - z(idx(:, 3)));
 endfunction
+
diff --git a/scripts/plot/private/__is_function__.m b/scripts/plot/private/__is_function__.m
--- a/scripts/plot/private/__is_function__.m
+++ b/scripts/plot/private/__is_function__.m
@@ -24,8 +24,9 @@
 ## Author: Michael Goffioul
 
 function result = __is_function__ (func)
 
   existval = exist (func);
   result = (existval == 2 || existval == 3 || existval == 5 || existval == 6);
 
 endfunction
+
diff --git a/scripts/plot/private/__line__.m b/scripts/plot/private/__line__.m
--- a/scripts/plot/private/__line__.m
+++ b/scripts/plot/private/__line__.m
@@ -121,8 +121,9 @@ function h = __line__ (p, varargin)
 
   endfor
 
   if (nargout > 0)
     h = handles;
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__marching_cube__.m b/scripts/plot/private/__marching_cube__.m
--- a/scripts/plot/private/__marching_cube__.m
+++ b/scripts/plot/private/__marching_cube__.m
@@ -523,8 +523,9 @@ function [edge_table, tri_table] = init_
   9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;
   2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1;
   1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;
   1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;
   0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;
   0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1;
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 ] + 1;
 endfunction
+
diff --git a/scripts/plot/private/__next_line_style__.m b/scripts/plot/private/__next_line_style__.m
--- a/scripts/plot/private/__next_line_style__.m
+++ b/scripts/plot/private/__next_line_style__.m
@@ -50,8 +50,9 @@ function [linestyle, marker] = __next_li
     endif
     options = __pltopt__ ("__next_line_style__",
                           style_rotation(style_index));
     linestyle = options.linestyle;
     marker = options.marker;
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__patch__.m b/scripts/plot/private/__patch__.m
--- a/scripts/plot/private/__patch__.m
+++ b/scripts/plot/private/__patch__.m
@@ -361,8 +361,9 @@ function update_handle (h, isfv)
     if (isfv)
       set (h, setdata ([fieldnames(f), struct2cell(f)].'(:)){:});
     else
       set (h, setvertexdata ([fieldnames(f), struct2cell(f)].'(:)){:});
     endif
     recursive = false;
   endif
 endfunction
+
diff --git a/scripts/plot/private/__pie__.m b/scripts/plot/private/__pie__.m
--- a/scripts/plot/private/__pie__.m
+++ b/scripts/plot/private/__pie__.m
@@ -193,8 +193,9 @@ function update_text_pos (all_handles)
       if (lr_mask(i))
         set (tobj(i), "horizontalalignment", "right");
       else
         set (tobj(i), "horizontalalignment", "left");
       endif
     endfor
   endif
 endfunction
+
diff --git a/scripts/plot/private/__pltopt__.m b/scripts/plot/private/__pltopt__.m
--- a/scripts/plot/private/__pltopt__.m
+++ b/scripts/plot/private/__pltopt__.m
@@ -226,8 +226,9 @@ function [options, valid] = __pltopt1__ 
     options.linestyle = "none";
   endif
 
   if (have_linestyle && ! have_marker)
     options.marker = "none";
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__quiver__.m b/scripts/plot/private/__quiver__.m
--- a/scripts/plot/private/__quiver__.m
+++ b/scripts/plot/private/__quiver__.m
@@ -437,8 +437,9 @@ function update_props (h, d)
   else
     set (kids (2), "visible", "off");
   endif
   set (kids(1), "color", get (h, "color"),
        "marker", get (h, "marker"),
        "markerfacecolor", get (h, "markerfacecolor"),
        "markersize", get (h, "markersize"));
 endfunction
+
diff --git a/scripts/plot/private/__scatter__.m b/scripts/plot/private/__scatter__.m
--- a/scripts/plot/private/__scatter__.m
+++ b/scripts/plot/private/__scatter__.m
@@ -371,8 +371,9 @@ function update_data (h, d)
         set (hlist(i), "vertices", [x1(i), y1(i), z1(i)], "cdata",
              reshape (c1(i,:),[1, size(c1)(2:end)]),
              "facevertexcdata", c1(i,:),
              "markersize", size1(i));
       endfor
     endif
   endif
 endfunction
+
diff --git a/scripts/plot/private/__stem__.m b/scripts/plot/private/__stem__.m
--- a/scripts/plot/private/__stem__.m
+++ b/scripts/plot/private/__stem__.m
@@ -560,8 +560,9 @@ function update_data (h, d)
     yt = [bl * ones(1, nx); y; NaN(1, nx)](:);
     zt = [];
   endif
 
   kids = get (h, "children");
   set (kids(2), "xdata", xt, "ydata", yt, "zdata", zt);
   set (kids(1), "xdata", x, "ydata", y, "zdata", z);
 endfunction
+
diff --git a/scripts/plot/private/__uigetdir_fltk__.m b/scripts/plot/private/__uigetdir_fltk__.m
--- a/scripts/plot/private/__uigetdir_fltk__.m
+++ b/scripts/plot/private/__uigetdir_fltk__.m
@@ -27,8 +27,9 @@ function dirname = __uigetdir_fltk__ (st
 
   if (exist ("__fltk_uigetfile__") != 3)
     error ("uigetdir: fltk graphics toolkit required");
   endif
 
   dirname = __fltk_uigetfile__ ("", dialog_title, start_path, [240, 120], "dir");
 
 endfunction
+
diff --git a/scripts/plot/private/__uigetfile_fltk__.m b/scripts/plot/private/__uigetfile_fltk__.m
--- a/scripts/plot/private/__uigetfile_fltk__.m
+++ b/scripts/plot/private/__uigetfile_fltk__.m
@@ -31,8 +31,9 @@ function [retval, retpath, retindex] = _
 
   filters = __fltk_file_filter__ (filters);
   if (length (defdir) > 0)
     defval = fullfile (defdir, defval);
   endif
   [retval, retpath, retindex] = __fltk_uigetfile__ (filters, title, defval, position, multiselect);
 
 endfunction
+
diff --git a/scripts/plot/private/__uiobject_split_args__.m b/scripts/plot/private/__uiobject_split_args__.m
--- a/scripts/plot/private/__uiobject_split_args__.m
+++ b/scripts/plot/private/__uiobject_split_args__.m
@@ -59,8 +59,9 @@ function [parent, args] = __uiobject_spl
       error ("%s: invalid parent, the parent type must be: %s", ...
              who, sprintf ("%s, ", parent_type{:})(1:end-2));
     endif
   elseif (use_gcf)
     parent = gcf ();
   endif
 
 endfunction
+
diff --git a/scripts/plot/private/__uiputfile_fltk__.m b/scripts/plot/private/__uiputfile_fltk__.m
--- a/scripts/plot/private/__uiputfile_fltk__.m
+++ b/scripts/plot/private/__uiputfile_fltk__.m
@@ -31,8 +31,9 @@ function [retval, retpath, retindex] = _
 
   filters = __fltk_file_filter__ (filters);
   if (length (defdir) > 0)
     defval = fullfile (defdir, defval);
   endif
   [retval, retpath, retindex] = __fltk_uigetfile__ (filters, title, defval, position, tag);
 
 endfunction
+
diff --git a/scripts/plot/refresh.m b/scripts/plot/refresh.m
--- a/scripts/plot/refresh.m
+++ b/scripts/plot/refresh.m
@@ -37,8 +37,9 @@ function refresh (h)
   else
     h = gcf ();
   endif
 
   set (h, "__modified__", "on");
   drawnow ();
 
 endfunction
+
diff --git a/scripts/plot/saveas.m b/scripts/plot/saveas.m
--- a/scripts/plot/saveas.m
+++ b/scripts/plot/saveas.m
@@ -100,8 +100,9 @@ function  saveas (h, filename, fmt = "pd
     endif
   endif
 
   prt_opt = strcat ("-d", tolower (fmt));
 
   print (fig, filename, prt_opt);
 
 endfunction
+
diff --git a/scripts/plot/shg.m b/scripts/plot/shg.m
--- a/scripts/plot/shg.m
+++ b/scripts/plot/shg.m
@@ -30,8 +30,9 @@ function shg ()
 
   if (nargin != 0)
     warning ("shg: ignoring extra arguments");
   endif
 
   drawnow ();
 
 endfunction
+
diff --git a/scripts/plot/specular.m b/scripts/plot/specular.m
--- a/scripts/plot/specular.m
+++ b/scripts/plot/specular.m
@@ -86,8 +86,9 @@ function retval = specular (sx, sy, sz, 
   ## Set zero if light is on the other side.
   retval(l_dot_n < 0) = 0;
 
   ## Allow postive values only.
   retval(retval < 0) = 0;
   retval = retval .^ se;
 
 endfunction
+
diff --git a/scripts/plot/sphere.m b/scripts/plot/sphere.m
--- a/scripts/plot/sphere.m
+++ b/scripts/plot/sphere.m
@@ -82,8 +82,9 @@ function [xx, yy, zz] = sphere (varargin
     unwind_protect_cleanup
       if (! isempty (oldfig))
         set (0, "currentfigure", oldfig);
       endif
     end_unwind_protect
   endif
 
 endfunction
+
diff --git a/scripts/plot/struct2hdl.m b/scripts/plot/struct2hdl.m
--- a/scripts/plot/struct2hdl.m
+++ b/scripts/plot/struct2hdl.m
@@ -632,8 +632,9 @@ function addmissingprops (h, props)
     if (! any (strcmp (prop, hid)))
       addproperty (prop, h, "any");
     endif
   endfor
 endfunction
 
 
 ## FIXME: Need validation tests
+
diff --git a/scripts/plot/subplot.m b/scripts/plot/subplot.m
--- a/scripts/plot/subplot.m
+++ b/scripts/plot/subplot.m
@@ -364,16 +364,17 @@ function subplot_align (h, varargin)
         set (hsubplots, 'looseinset', looseinset);
       endif
     unwind_protect_cleanup
       updating = false;
     end_unwind_protect
   endif
 endfunction
 
+
 %!demo
 %! clf;
 %! r = 3;
 %! c = 3;
 %! fmt = {'horizontalalignment', 'center', 'verticalalignment', 'middle'};
 %! for n = 1 : r*c
 %!   subplot (r, c, n);
 %!   xlabel (sprintf ('xlabel #%d', n));
diff --git a/scripts/plot/uicontextmenu.m b/scripts/plot/uicontextmenu.m
--- a/scripts/plot/uicontextmenu.m
+++ b/scripts/plot/uicontextmenu.m
@@ -23,8 +23,9 @@
 ## Author: goffioul
 
 function handle = uicontextmenu (varargin)
 
   [h, args] = __uiobject_split_args__ ("uicontextmenu", varargin, {"figure"});
   handle = __go_uicontextmenu__ (h, args{:});
 
 endfunction
+
diff --git a/scripts/plot/uicontrol.m b/scripts/plot/uicontrol.m
--- a/scripts/plot/uicontrol.m
+++ b/scripts/plot/uicontrol.m
@@ -29,8 +29,9 @@ function handle = uicontrol (varargin)
   if (nargin == 1 && ishandle (varargin{1}) && strcmpi (get (varargin{1}, "type"), "uicontrol"))
     error ("uicontrol focusing not implemented yet.");
   else
     [h, args] = __uiobject_split_args__ ("uicontrol", varargin, {"figure", "uipanel", "uibuttongroup"});
     handle = __go_uicontrol__ (h, args{:});
   endif
 
 endfunction
+
diff --git a/scripts/plot/uipanel.m b/scripts/plot/uipanel.m
--- a/scripts/plot/uipanel.m
+++ b/scripts/plot/uipanel.m
@@ -24,8 +24,9 @@
 ## Author: goffioul
 
 function handle = uipanel (varargin)
 
   [h, args] = __uiobject_split_args__ ("uipanel", varargin, {"figure", "uipanel", "uibuttongroup"});
   handle = __go_uipanel__ (h, args{:});
 
 endfunction
+
diff --git a/scripts/plot/uipushtool.m b/scripts/plot/uipushtool.m
--- a/scripts/plot/uipushtool.m
+++ b/scripts/plot/uipushtool.m
@@ -32,8 +32,9 @@ function handle = uipushtool (varargin)
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
   handle = __go_uipushtool__ (h, args{:});
 
 endfunction
+
diff --git a/scripts/plot/uiresume.m b/scripts/plot/uiresume.m
--- a/scripts/plot/uiresume.m
+++ b/scripts/plot/uiresume.m
@@ -38,8 +38,9 @@ function uiresume (h)
     if (strcmp (uiwait_state, "active"))
       set (h, "__uiwait_state__", "triggered");
     endif
   catch
     ## Ignore exception
   end_try_catch
 
 endfunction
+
diff --git a/scripts/plot/uitoggletool.m b/scripts/plot/uitoggletool.m
--- a/scripts/plot/uitoggletool.m
+++ b/scripts/plot/uitoggletool.m
@@ -32,8 +32,9 @@ function handle = uitoggletool (varargin
       h = uitoolbar ();
     else
       h = h(1);
     endif
   endif
   handle = __go_uitoggletool__ (h, args{:});
 
 endfunction
+
diff --git a/scripts/plot/uitoolbar.m b/scripts/plot/uitoolbar.m
--- a/scripts/plot/uitoolbar.m
+++ b/scripts/plot/uitoolbar.m
@@ -24,8 +24,9 @@
 ## Author: goffioul
 
 function handle = uitoolbar (varargin)
 
   [h, args] = __uiobject_split_args__ ("uitoolbar", varargin, {"figure"});
   handle = __go_uitoolbar__ (h, args{:});
 
 endfunction
+
diff --git a/scripts/plot/uiwait.m b/scripts/plot/uiwait.m
--- a/scripts/plot/uiwait.m
+++ b/scripts/plot/uiwait.m
@@ -73,8 +73,9 @@ function uiwait (varargin)
     unwind_protect_cleanup
       if (ishandle (h) && isprop (h, "__uiwait_state__"))
         set (h, "__uiwait_state__", "none");
       endif
     end_unwind_protect
   endif
 
 endfunction
+
diff --git a/scripts/plot/waitforbuttonpress.m b/scripts/plot/waitforbuttonpress.m
--- a/scripts/plot/waitforbuttonpress.m
+++ b/scripts/plot/waitforbuttonpress.m
@@ -42,8 +42,9 @@ function a = waitforbuttonpress ()
     if (k <= 5)
       a = 0;
     else
       a = 1;
     endif
   endif
 
 endfunction
+
diff --git a/scripts/polynomial/pchip.m b/scripts/polynomial/pchip.m
--- a/scripts/polynomial/pchip.m
+++ b/scripts/polynomial/pchip.m
@@ -120,16 +120,17 @@ function ret = pchip (x, y, xi)
   ret = mkpp (x, coeffs, szy(1:end-1));
 
   if (nargin == 3)
     ret = ppval (ret, xi);
   endif
 
 endfunction
 
+
 %!demo
 %! x = 0:8;
 %! y = [1, 1, 1, 1, 0.5, 0, 0, 0, 0];
 %! xi = 0:0.01:8;
 %! yspline = spline (x,y,xi);
 %! ypchip = pchip (x,y,xi);
 %! title ("pchip and spline fit to discontinuous function");
 %! plot (xi,yspline, xi,ypchip,"-", x,y,"+");
@@ -165,8 +166,9 @@ endfunction
 %!assert (yi3(:,:,2), ppval (pp,pi), 1e-14)
 %!assert (yi3(:,:,1), [1,0;2,1;0,-1], 1e-14)
 %!assert (squeeze (yi1(1,2,:)), [1/sqrt(2); 0; -1/sqrt(2);-1], 1e-14)
 %!assert (size (yi2), [3,2,5,4])
 %!assert (squeeze (yi2(1,2,3,:)), [1/sqrt(2); 0; -1/sqrt(2);-1], 1e-14)
 
 %!error (pchip (1,2));
 %!error (pchip (1,2,3));
+
diff --git a/scripts/polynomial/polyeig.m b/scripts/polynomial/polyeig.m
--- a/scripts/polynomial/polyeig.m
+++ b/scripts/polynomial/polyeig.m
@@ -78,14 +78,16 @@ function [ z, varargout ] = polyeig (var
     z = z(1:n,:);
     ## max() takes the abs if complex:
     t = max (z);
     z /= diag (t);
   endif
 
 endfunction
 
+
 %!test
 %! C0 = [8, 0; 0, 4]; C1 = [1, 0; 0, 1];
 %! [v,z] = polyeig (C0, C1);
 %! assert (isequal (z(1), -8), true);
 %! d = C0*v + C1*v*z;
 %! assert (isequal (norm(d), 0.0), true);
+
diff --git a/scripts/polynomial/ppval.m b/scripts/polynomial/ppval.m
--- a/scripts/polynomial/ppval.m
+++ b/scripts/polynomial/ppval.m
@@ -122,8 +122,9 @@ endfunction
 %!test
 %! breaks = [0, 1, 2, 3];
 %! coefs = rand (6, 4);
 %! pp = mkpp (breaks, coefs, 2);
 %! ret = zeros (2, 4, 2);
 %! ret(:,:,1) = ppval (pp, breaks');
 %! ret(:,:,2) = ppval (pp, breaks');
 %! assert (ppval (pp, [breaks',breaks']), ret)
+
diff --git a/scripts/prefs/addpref.m b/scripts/prefs/addpref.m
--- a/scripts/prefs/addpref.m
+++ b/scripts/prefs/addpref.m
@@ -64,11 +64,13 @@ function addpref (group, pref, val)
       error ("expecting group to be a character string");
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/getpref.m b/scripts/prefs/getpref.m
--- a/scripts/prefs/getpref.m
+++ b/scripts/prefs/getpref.m
@@ -85,11 +85,13 @@ function retval = getpref (group, pref, 
       error ("expecting pref to be a character string or cellstr");
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/ispref.m b/scripts/prefs/ispref.m
--- a/scripts/prefs/ispref.m
+++ b/scripts/prefs/ispref.m
@@ -50,11 +50,13 @@ function retval = ispref (group, pref)
       retval = false;
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/private/loadprefs.m b/scripts/prefs/private/loadprefs.m
--- a/scripts/prefs/private/loadprefs.m
+++ b/scripts/prefs/private/loadprefs.m
@@ -33,11 +33,13 @@ function retval = loadprefs ()
     tmp = load (file);
     retval= tmp.prefs;
   else
     retval = [];
   endif
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/private/prefsfile.m b/scripts/prefs/private/prefsfile.m
--- a/scripts/prefs/private/prefsfile.m
+++ b/scripts/prefs/private/prefsfile.m
@@ -24,11 +24,13 @@
 ## Author: jwe
 
 function retval = prefsfile ()
 
   retval = [prefdir() filesep() ".octave_prefs"];
   
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/private/saveprefs.m b/scripts/prefs/private/saveprefs.m
--- a/scripts/prefs/private/saveprefs.m
+++ b/scripts/prefs/private/saveprefs.m
@@ -26,11 +26,13 @@
 function retval = saveprefs (s)
 
   prefs = s;
 
   save (prefsfile (), "prefs");
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/prefs/setpref.m b/scripts/prefs/setpref.m
--- a/scripts/prefs/setpref.m
+++ b/scripts/prefs/setpref.m
@@ -57,11 +57,13 @@ function setpref (group, pref, val)
       error ("expecting group to be a character string");
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 %% Testing these functions will require some care to avoid wiping out
 %% existing (or creating unwanted) preferences for the user running the
 %% tests.
+
diff --git a/scripts/set/private/validargs.m b/scripts/set/private/validargs.m
--- a/scripts/set/private/validargs.m
+++ b/scripts/set/private/validargs.m
@@ -50,8 +50,9 @@ function [x, y] = validargs (caller, x, 
     else
       error ("%s: invalid option: %s", caller, byrows_arg);
     endif
   else
     print_usage (caller);
   endif
 
 endfunction
+
diff --git a/scripts/set/unique.m b/scripts/set/unique.m
--- a/scripts/set/unique.m
+++ b/scripts/set/unique.m
@@ -216,8 +216,9 @@ endfunction
 %! assert (a, [1,2,3]);
 %! assert (A(i,:), a);
 %! assert (a(j,:), A);
 
 %!error unique({"a", "b", "c"}, "UnknownOption")
 %!error unique({"a", "b", "c"}, "UnknownOption1", "UnknownOption2")
 %!error unique({"a", "b", "c"}, "rows", "UnknownOption2")
 %!error unique({"a", "b", "c"}, "UnknownOption1", "last")
+
diff --git a/scripts/signal/arch_fit.m b/scripts/signal/arch_fit.m
--- a/scripts/signal/arch_fit.m
+++ b/scripts/signal/arch_fit.m
@@ -111,8 +111,9 @@ function [a, b] = arch_fit (y, x, p, ite
     h   = Z * a;
     f   = esq ./ h - ones (T,1);
     Z_tilde = Z ./ (h * ones (1, p+1));
     delta_a = inv (Z_tilde' * Z_tilde) * Z_tilde' * f;
     a   = a + gamma * delta_a;
   endfor
 
 endfunction
+
diff --git a/scripts/signal/arch_rnd.m b/scripts/signal/arch_rnd.m
--- a/scripts/signal/arch_rnd.m
+++ b/scripts/signal/arch_rnd.m
@@ -95,8 +95,9 @@ function y = arch_rnd (a, b, t)
       e(t) = sqrt (h(t)) * randn;
       y(t) = b(1) + b(2:lb) * y(t-tb+1:t-1) + e(t);
     endfor
   endif
 
   y = y(1:t);
 
 endfunction
+
diff --git a/scripts/signal/arch_test.m b/scripts/signal/arch_test.m
--- a/scripts/signal/arch_test.m
+++ b/scripts/signal/arch_test.m
@@ -89,8 +89,9 @@ function [pval, lm] = arch_test (y, x, p
   [b, v_b, e] = ols (y, x);
   Z    = autoreg_matrix (e.^2, p);
   f    = e.^2 / v_b - ones (T, 1);
   f    = Z' * f;
   lm   = f' * inv (Z'*Z) * f / 2;
   pval = 1 - chi2cdf (lm, p);
 
 endfunction
+
diff --git a/scripts/signal/arma_rnd.m b/scripts/signal/arma_rnd.m
--- a/scripts/signal/arma_rnd.m
+++ b/scripts/signal/arma_rnd.m
@@ -74,8 +74,9 @@ function x = arma_rnd (a, b, v, t, n)
   n = min (n, ar + br);
 
   e = sqrt (v) * randn (t + n, 1);
 
   x = filter (b, a, e);
   x = x(n + 1 : t + n);
 
 endfunction
+
diff --git a/scripts/signal/durbinlevinson.m b/scripts/signal/durbinlevinson.m
--- a/scripts/signal/durbinlevinson.m
+++ b/scripts/signal/durbinlevinson.m
@@ -86,8 +86,9 @@ function [newphi, newv] = durbinlevinson
       oldv = newv;
       oldphi = newphi;
 
     endfor
 
   endif
 
 endfunction
+
diff --git a/scripts/signal/fractdiff.m b/scripts/signal/fractdiff.m
--- a/scripts/signal/fractdiff.m
+++ b/scripts/signal/fractdiff.m
@@ -62,8 +62,9 @@ function retval = fractdiff (x, d)
     endif
 
   else
     error ("fractdiff: D must be > -1");
 
   endif
 
 endfunction
+
diff --git a/scripts/signal/freqz.m b/scripts/signal/freqz.m
--- a/scripts/signal/freqz.m
+++ b/scripts/signal/freqz.m
@@ -198,8 +198,9 @@ endfunction
 %! b = [1 1 1]/3; a = [1 0.2];
 %! [h,f] = freqz (b,a,16,320);
 %! assert (f,[0:15]'*10,10*eps);
 %! [h2,f2] = freqz (b,a,[0:15]*10,320);
 %! assert (f2,[0:15]*10,10*eps);
 %! assert (h,h2.',20*eps);
 %! [h3,f3] = freqz (b,a,32,"whole",320);
 %! assert (f3,[0:31]'*10,10*eps);
+
diff --git a/scripts/signal/freqz_plot.m b/scripts/signal/freqz_plot.m
--- a/scripts/signal/freqz_plot.m
+++ b/scripts/signal/freqz_plot.m
@@ -59,8 +59,9 @@ function freqz_plot (w, h)
   subplot (3, 1, 3);
   plot (w, phase*360/(2*pi));
   grid ("on");
   legend ("Phase (degrees)");
   xlabel ("Frequency");
   axis ([w(1), w(n)], "autoy", "label");
 
 endfunction
+
diff --git a/scripts/signal/hurst.m b/scripts/signal/hurst.m
--- a/scripts/signal/hurst.m
+++ b/scripts/signal/hurst.m
@@ -41,8 +41,9 @@ function H = hurst (x)
   [xr, xc] = size (x);
 
   s = std (x);
   w = cumsum (x - mean (x));
   RS = (max (w) - min (w)) ./ s;
   H = log (RS) / log (xr);
 
 endfunction
+
diff --git a/scripts/signal/periodogram.m b/scripts/signal/periodogram.m
--- a/scripts/signal/periodogram.m
+++ b/scripts/signal/periodogram.m
@@ -184,8 +184,9 @@ function [pxx, f] = periodogram (x, vara
     endif
     grid on;
     title ("Periodogram Power Spectral Density Estimate");
   else
     pxx = Pxx;
   endif
 
 endfunction
+
diff --git a/scripts/signal/private/rectangle_lw.m b/scripts/signal/private/rectangle_lw.m
--- a/scripts/signal/private/rectangle_lw.m
+++ b/scripts/signal/private/rectangle_lw.m
@@ -28,8 +28,9 @@
 function retval = rectangle_lw (n, b)
 
   retval = zeros (n, 1);
   t = floor (1 / b);
 
   retval(1:t, 1) = ones (t, 1);
 
 endfunction
+
diff --git a/scripts/signal/private/rectangle_sw.m b/scripts/signal/private/rectangle_sw.m
--- a/scripts/signal/private/rectangle_sw.m
+++ b/scripts/signal/private/rectangle_sw.m
@@ -32,37 +32,8 @@ function retval = rectangle_sw (n, b)
 
   l = (2:n)' - 1;
   l = 2 * pi * l / n;
 
   retval(2:n) = sin ((2/b + 1) * l / 2) ./ sin (l / 2);
 
 endfunction
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
diff --git a/scripts/signal/private/triangle_sw.m b/scripts/signal/private/triangle_sw.m
--- a/scripts/signal/private/triangle_sw.m
+++ b/scripts/signal/private/triangle_sw.m
@@ -32,37 +32,8 @@ function retval = triangle_sw (n, b)
 
   l = (2:n)' - 1;
   l = 2 * pi * l / n;
 
   retval(2:n) = b * (sin (l / (2*b)) ./ sin (l / 2)).^2;
 
 endfunction
 
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
-
diff --git a/scripts/signal/spectral_adf.m b/scripts/signal/spectral_adf.m
--- a/scripts/signal/spectral_adf.m
+++ b/scripts/signal/spectral_adf.m
@@ -63,13 +63,15 @@ function retval = spectral_adf (c, win, 
   c = c .* w;
 
   retval = 2 * real (fft (c)) - c(1);
   retval = [(zeros (cr, 1)), retval];
   retval(:, 1) = (0 : cr-1)' / cr;
 
 endfunction
 
+
 %% Test input validation
 %!error spectral_adf ();
 %!error spectral_adf (1, 2, 3, 4);
 %!error spectral_adf (1, 2);
 %!error spectral_adf (1, "invalid");
+
diff --git a/scripts/signal/spectral_xdf.m b/scripts/signal/spectral_xdf.m
--- a/scripts/signal/spectral_xdf.m
+++ b/scripts/signal/spectral_xdf.m
@@ -64,13 +64,15 @@ function retval = spectral_xdf (x, win, 
   retval = (abs (fft (x)) / xr).^2;
   retval = real (ifft (fft (retval) .* fft (w)));
 
   retval = [(zeros (xr, 1)), retval];
   retval(:, 1) = (0 : xr-1)' / xr;
 
 endfunction
 
+
 %% Test input validation
 %!error spectral_xdf ();
 %!error spectral_xdf (1, 2, 3, 4);
 %!error spectral_xdf (1, 2);
 %!error spectral_xdf (1, "invalid");
+
diff --git a/scripts/signal/stft.m b/scripts/signal/stft.m
--- a/scripts/signal/stft.m
+++ b/scripts/signal/stft.m
@@ -127,8 +127,9 @@ function [y, c] = stft (x, win_size, inc
 
   if (nargout == 1)
     y = abs (y(1:num_coef, :));
   else
     c = [win_size, inc, win_type];
   endif
 
 endfunction
+
diff --git a/scripts/signal/synthesis.m b/scripts/signal/synthesis.m
--- a/scripts/signal/synthesis.m
+++ b/scripts/signal/synthesis.m
@@ -65,8 +65,9 @@ function x = synthesis (y, c)
   nc = columns (z);
   for i = 1:nc
     z(:, i) = z(:, i) ./ w_coeff;
   endfor
 
   x = reshape (z, inc * nc, 1);
 
 endfunction
+
diff --git a/scripts/signal/yulewalker.m b/scripts/signal/yulewalker.m
--- a/scripts/signal/yulewalker.m
+++ b/scripts/signal/yulewalker.m
@@ -50,11 +50,8 @@ function [a, v] = yulewalker (c)
   endfor
 
   a = inv (CP) * cp;
   v = c(1) - a' * cp;
 
 endfunction
 
 
-
-
-
diff --git a/scripts/sparse/colperm.m b/scripts/sparse/colperm.m
--- a/scripts/sparse/colperm.m
+++ b/scripts/sparse/colperm.m
@@ -30,8 +30,9 @@ function p = colperm (s)
   if (nargin != 1)
     print_usage ();
   endif
 
   [i, j] = find (s);
   idx = find (diff ([j; Inf]) != 0);
   [dummy, p] = sort (idx - [0; idx(1:(end-1))]);
 endfunction
+
diff --git a/scripts/sparse/eigs.m b/scripts/sparse/eigs.m
--- a/scripts/sparse/eigs.m
+++ b/scripts/sparse/eigs.m
@@ -356,16 +356,17 @@ function out = select (args, k, sigma, r
 
     v = args{1};
     v = v(:,idx);
     out{1} = v(selection,:);
   endif
 
 endfunction
 
+
 #### SPARSE MATRIX VERSIONS ####
 
 ## Real positive definite tests, n must be even
 %!shared n, k, A, d0, d2
 %! n = 20;
 %! k = 4;
 %! A = sparse ([3:n,1:n,1:(n-2)],[1:(n-2),1:n,3:n],[ones(1,n-2),4*ones(1,n),ones(1,n-2)]);
 %! d0 = eig (A);
@@ -1101,8 +1102,9 @@ endfunction
 %! d1 = diag (d1);
 %! for i=1:k
 %!   assert (max (abs ((A - d1(i)*eye (n))*v1(:,i))), 0, 1e-11);
 %! endfor
 
 %!assert (eigs (diag (1:5), 5, "sa"), [1;2;3;4;5]);
 %!assert (eigs (diag (1:5), 5, "la"), [5;4;3;2;1]);
 %!assert (eigs (diag (1:5), 3, "be"), [1;4;5]);
+
diff --git a/scripts/sparse/etreeplot.m b/scripts/sparse/etreeplot.m
--- a/scripts/sparse/etreeplot.m
+++ b/scripts/sparse/etreeplot.m
@@ -29,8 +29,9 @@
 function etreeplot (A, varargin)
 
   if (nargin < 1)
     print_usage ();
   endif
 
   treeplot (etree (A+A'), varargin{:});
 endfunction
+
diff --git a/scripts/sparse/gmres.m b/scripts/sparse/gmres.m
--- a/scripts/sparse/gmres.m
+++ b/scripts/sparse/gmres.m
@@ -229,8 +229,9 @@ endfunction
 
 
 %!error gmres (1)
 %!error gmres (1,2,3,4,5,6,7,8,9)
 %!error <A must be> gmres ({1},2)
 %!error <A must be a function or matrix> gmres ({1},2)
 %!error <M1 must be a function or matrix> gmres (1,2,3,4,5,{6})
 %!error <M2 must be a function or matrix> gmres (1,2,3,4,5,6,{7})
+
diff --git a/scripts/sparse/private/__sprand_impl__.m b/scripts/sparse/private/__sprand_impl__.m
--- a/scripts/sparse/private/__sprand_impl__.m
+++ b/scripts/sparse/private/__sprand_impl__.m
@@ -73,8 +73,9 @@ function S = __sprand_impl__ (varargin)
   else
     idx = randperm (mn, k);
     [i, j] = ind2sub ([m, n], idx);
   endif
 
   S = sparse (i, j, randfun (k, 1), m, n);
 
 endfunction
+
diff --git a/scripts/sparse/spdiags.m b/scripts/sparse/spdiags.m
--- a/scripts/sparse/spdiags.m
+++ b/scripts/sparse/spdiags.m
@@ -86,8 +86,9 @@ function [A, c] = spdiags (v, c, m, n)
   endif
 
 endfunction
 
 
 %!assert (spdiags (zeros (1,0),1,1,1), sparse (0))
 %!assert (spdiags (zeros (0,1),1,1,1), sparse (0))
 %!assert (spdiags ([0.5 -1 0.5], 0:2, 1, 1), sparse(0.5))
+
diff --git a/scripts/sparse/sprandn.m b/scripts/sparse/sprandn.m
--- a/scripts/sparse/sprandn.m
+++ b/scripts/sparse/sprandn.m
@@ -70,8 +70,9 @@ endfunction
 %!error sprandn (3, 3.5, 0.5)
 %!error sprandn (3, 0, 0.5)
 %!error sprandn (3, 3, -1)
 %!error sprandn (3, 3, 2)
 
 %% Test very large, very low density matrix doesn't fail 
 %!test
 %! s = sprandn(1e6,1e6,1e-7);
+
diff --git a/scripts/specfun/bessel.m b/scripts/specfun/bessel.m
--- a/scripts/specfun/bessel.m
+++ b/scripts/specfun/bessel.m
@@ -88,8 +88,9 @@
 ## @end deftypefn
 
 function bessel ()
   error ("bessel: you must use besselj, bessely, besseli, or besselk");
 endfunction
 
 
 %!error bessel ()
+
diff --git a/scripts/specfun/betaln.m b/scripts/specfun/betaln.m
--- a/scripts/specfun/betaln.m
+++ b/scripts/specfun/betaln.m
@@ -50,8 +50,9 @@ function retval = betaln (a, b)
 endfunction
 
 
 %!assert (betaln (3,4), log (beta (3,4)), eps)
 
 %% Test input validation
 %!error (betaln (1))
 %!error (betaln (1,2,3))
+
diff --git a/scripts/specfun/expint.m b/scripts/specfun/expint.m
--- a/scripts/specfun/expint.m
+++ b/scripts/specfun/expint.m
@@ -196,8 +196,9 @@ endfunction
 %!          0.052414380;
 %!          0.048900511 ];
 %! y = expint (x);
 %! assert (y, y_exp, 1e-9);
 
 %% Test input validation
 %!error expint ()
 %!error expint (1,2)
+
diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -2847,8 +2847,9 @@ function A = bandred (A, kl, ku)
       A(j,j+ku+1:n) = zeros (1, n-j-ku);
     endif
   endfor
 
   if (flip)
     A = A';
   endif
 endfunction
+
diff --git a/scripts/startup/__finish__.m b/scripts/startup/__finish__.m
--- a/scripts/startup/__finish__.m
+++ b/scripts/startup/__finish__.m
@@ -35,8 +35,9 @@ function __finish__ ()
   endif
 
 endfunction
 
 
 
 ## No test needed for internal helper function.
 %!assert (1)
+
diff --git a/scripts/statistics/base/qqplot.m b/scripts/statistics/base/qqplot.m
--- a/scripts/statistics/base/qqplot.m
+++ b/scripts/statistics/base/qqplot.m
@@ -92,8 +92,9 @@ function [q, s] = qqplot (x, dist, varar
 
   if (nargout == 0)
     plot (q, s);
     xlabel (q_label);
     ylabel ("sample points");
   endif
 
 endfunction
+
diff --git a/scripts/statistics/distributions/tcdf.m b/scripts/statistics/distributions/tcdf.m
--- a/scripts/statistics/distributions/tcdf.m
+++ b/scripts/statistics/distributions/tcdf.m
@@ -152,8 +152,9 @@ endfunction
 ##     x = - power(mpf(10), mpf(i))
 ##     print "%%!assert (tcdf (-10^%d, 2.5), %s, -eps)" \
 ##         % (i, nstr(F(x, nu), 17))
 ##
 ## for i in range(10, 17):
 ##     x = power(mpf(10), -mpf(i))
 ##     print "%%!assert (tcdf (10^(-%d), 2.5), %s, -eps)" \
 ##         % (i, nstr(F(x, nu), 17))
+
diff --git a/scripts/statistics/distributions/wienrnd.m b/scripts/statistics/distributions/wienrnd.m
--- a/scripts/statistics/distributions/wienrnd.m
+++ b/scripts/statistics/distributions/wienrnd.m
@@ -47,8 +47,9 @@ function retval = wienrnd (t, d, n)
   endif
 
   retval = randn (n * t, d);
   retval = cumsum (retval) / sqrt (n);
 
   retval = [((1: n*t)' / n), retval];
 
 endfunction
+
diff --git a/scripts/statistics/models/logistic_regression.m b/scripts/statistics/models/logistic_regression.m
--- a/scripts/statistics/models/logistic_regression.m
+++ b/scripts/statistics/models/logistic_regression.m
@@ -185,8 +185,9 @@ function [theta, beta, dev, dl, d2l, p] 
       e = ((x * beta) * ones (1, nz)) + ((y * 0 + 1) * theta');
     else
       e = (y * 0 + 1) * theta';
     endif
     gamma = diff ([(y * 0), (exp (e) ./ (1 + exp (e))), (y * 0 + 1)]')';
   endif
 
 endfunction
+
diff --git a/scripts/statistics/models/private/logistic_regression_derivatives.m b/scripts/statistics/models/private/logistic_regression_derivatives.m
--- a/scripts/statistics/models/private/logistic_regression_derivatives.m
+++ b/scripts/statistics/models/private/logistic_regression_derivatives.m
@@ -36,8 +36,9 @@ function [dl, d2l] = logistic_regression
   dl = sum (dlogp)';
 
   ## second derivative
   w = v .* (1 - 2 * g); w1 = v1 .* (1 - 2 * g1);
   d2l = [z, x]' * diag (w) * [z, x] - [z1, x]' * diag (w1) * [z1, x] ...
       - dlogp' * dlogp;
 
 endfunction
+
diff --git a/scripts/statistics/models/private/logistic_regression_likelihood.m b/scripts/statistics/models/private/logistic_regression_likelihood.m
--- a/scripts/statistics/models/private/logistic_regression_likelihood.m
+++ b/scripts/statistics/models/private/logistic_regression_likelihood.m
@@ -32,8 +32,9 @@ function [g, g1, p, dev] = logistic_regr
   e = exp ([z, x] * beta); e1 = exp ([z1, x] * beta);
   g = e ./ (1 + e); g1 = e1 ./ (1 + e1);
   g = max (y == max (y), g); g1 = min (y > min (y), g1);
 
   p = g - g1;
   dev = -2 * sum (log (p));
 
 endfunction
+
diff --git a/scripts/statistics/tests/anova.m b/scripts/statistics/tests/anova.m
--- a/scripts/statistics/tests/anova.m
+++ b/scripts/statistics/tests/anova.m
@@ -103,8 +103,9 @@ function [pval, f, df_b, df_w] = anova (
     printf ("Total                %15.4f  %4d\n", SST, n - 1);
     printf ("\n");
     printf ("Test Statistic f     %15.4f\n", f);
     printf ("p-value              %15.4f\n", pval);
     printf ("\n");
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/bartlett_test.m b/scripts/statistics/tests/bartlett_test.m
--- a/scripts/statistics/tests/bartlett_test.m
+++ b/scripts/statistics/tests/bartlett_test.m
@@ -60,8 +60,9 @@ function [pval, chisq, df] = bartlett_te
   df    = k;
   pval  = 1 - chi2cdf (chisq, df);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/chisquare_test_homogeneity.m b/scripts/statistics/tests/chisquare_test_homogeneity.m
--- a/scripts/statistics/tests/chisquare_test_homogeneity.m
+++ b/scripts/statistics/tests/chisquare_test_homogeneity.m
@@ -61,8 +61,9 @@ function [pval, chisq, df] = chisquare_t
   chisq = l_x * l_y * sum ((n_x/l_x - n_y/l_y).^2 ./ (n_x + n_y));
   pval  = 1 - chi2cdf (chisq, df);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/chisquare_test_independence.m b/scripts/statistics/tests/chisquare_test_independence.m
--- a/scripts/statistics/tests/chisquare_test_independence.m
+++ b/scripts/statistics/tests/chisquare_test_independence.m
@@ -46,8 +46,9 @@ function [pval, chisq, df] = chisquare_t
   chisq = sum (sum (x));
   pval  = 1 - chi2cdf (chisq, df);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/cor_test.m b/scripts/statistics/tests/cor_test.m
--- a/scripts/statistics/tests/cor_test.m
+++ b/scripts/statistics/tests/cor_test.m
@@ -128,8 +128,9 @@ function t = cor_test (x, y, alt, method
 
   t.alternative = alt;
 
   if (nargout == 0)
     printf ("pval: %g\n", t.pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/f_test_regression.m b/scripts/statistics/tests/f_test_regression.m
--- a/scripts/statistics/tests/f_test_regression.m
+++ b/scripts/statistics/tests/f_test_regression.m
@@ -70,8 +70,9 @@ function [pval, f, df_num, df_den] = f_t
   f      = diff' * inv (rr * inv (x' * x) * rr') * diff / (q * v);
   pval  = 1 - fcdf (f, df_num, df_den);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/hotelling_test.m b/scripts/statistics/tests/hotelling_test.m
--- a/scripts/statistics/tests/hotelling_test.m
+++ b/scripts/statistics/tests/hotelling_test.m
@@ -65,8 +65,9 @@ function [pval, Tsq] = hotelling_test (x
   Tsq  = n * d * (cov (x) \ d');
   pval = 1 - fcdf ((n-p) * Tsq / (p * (n-1)), p, n-p);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/hotelling_test_2.m b/scripts/statistics/tests/hotelling_test_2.m
--- a/scripts/statistics/tests/hotelling_test_2.m
+++ b/scripts/statistics/tests/hotelling_test_2.m
@@ -79,8 +79,9 @@ function [pval, Tsq] = hotelling_test_2 
   pval = 1 - fcdf ((n_x + n_y - p - 1) * Tsq / (p * (n_x + n_y - 2)),
                     p, n_x + n_y - p - 1);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/kolmogorov_smirnov_test_2.m b/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
--- a/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
+++ b/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
@@ -97,8 +97,9 @@ function [pval, ks, d] = kolmogorov_smir
     error ("kolmogorov_smirnov_test_2: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/kruskal_wallis_test.m b/scripts/statistics/tests/kruskal_wallis_test.m
--- a/scripts/statistics/tests/kruskal_wallis_test.m
+++ b/scripts/statistics/tests/kruskal_wallis_test.m
@@ -93,8 +93,9 @@ function [pval, k, df] = kruskal_wallis_
     printf ("pval: %g\n", pval);
   endif
 
 endfunction
 
 
 ## Test with ties
 %!assert (abs (kruskal_wallis_test ([86 86], [74]) - 0.157299207050285) < 0.0000000000001)
+
diff --git a/scripts/statistics/tests/manova.m b/scripts/statistics/tests/manova.m
--- a/scripts/statistics/tests/manova.m
+++ b/scripts/statistics/tests/manova.m
@@ -154,8 +154,9 @@ function manova (x, g)
   printf ("# of variables: %d\n", p);
   printf ("\n");
   printf ("Wilks' Lambda:  %5.4f\n", Lambda);
   printf ("Approximate p:  %10.9f (chisquare approximation)\n", W_pval_1);
   printf ("                 %10.9f (F approximation)\n", W_pval_2);
   printf ("\n");
 
 endfunction
+
diff --git a/scripts/statistics/tests/mcnemar_test.m b/scripts/statistics/tests/mcnemar_test.m
--- a/scripts/statistics/tests/mcnemar_test.m
+++ b/scripts/statistics/tests/mcnemar_test.m
@@ -58,10 +58,8 @@ function [pval, chisq, df] = mcnemar_tes
   pval = 1 - chi2cdf (chisq, df);
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
 
-
-
diff --git a/scripts/statistics/tests/prop_test_2.m b/scripts/statistics/tests/prop_test_2.m
--- a/scripts/statistics/tests/prop_test_2.m
+++ b/scripts/statistics/tests/prop_test_2.m
@@ -73,8 +73,9 @@ function [pval, z] = prop_test_2 (x1, n1
     error ("prop_test_2: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/run_test.m b/scripts/statistics/tests/run_test.m
--- a/scripts/statistics/tests/run_test.m
+++ b/scripts/statistics/tests/run_test.m
@@ -51,8 +51,9 @@ function [pval, chisq] = run_test (x)
   chisq = diag (r' * A * r)' / n;
   pval  = chi2cdf (chisq, 6);
 
   if (nargout == 0)
     printf ("pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/sign_test.m b/scripts/statistics/tests/sign_test.m
--- a/scripts/statistics/tests/sign_test.m
+++ b/scripts/statistics/tests/sign_test.m
@@ -76,8 +76,9 @@ function [pval, b, n] = sign_test (x, y,
     error ("sign_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/t_test.m b/scripts/statistics/tests/t_test.m
--- a/scripts/statistics/tests/t_test.m
+++ b/scripts/statistics/tests/t_test.m
@@ -76,8 +76,9 @@ function [pval, t, df] = t_test (x, m, a
     error ("t_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/t_test_2.m b/scripts/statistics/tests/t_test_2.m
--- a/scripts/statistics/tests/t_test_2.m
+++ b/scripts/statistics/tests/t_test_2.m
@@ -77,8 +77,9 @@ function [pval, t, df] = t_test_2 (x, y,
     error ("t_test_2: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/t_test_regression.m b/scripts/statistics/tests/t_test_regression.m
--- a/scripts/statistics/tests/t_test_regression.m
+++ b/scripts/statistics/tests/t_test_regression.m
@@ -92,8 +92,9 @@ function [pval, t, df] = t_test_regressi
     error ("t_test_regression: the value '%s' for alt is not possible", alt);
   endif
 
   if (nargout == 0)
     printf ("pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/u_test.m b/scripts/statistics/tests/u_test.m
--- a/scripts/statistics/tests/u_test.m
+++ b/scripts/statistics/tests/u_test.m
@@ -78,8 +78,9 @@ function [pval, z] = u_test (x, y, alt)
     error ("u_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/var_test.m b/scripts/statistics/tests/var_test.m
--- a/scripts/statistics/tests/var_test.m
+++ b/scripts/statistics/tests/var_test.m
@@ -73,8 +73,9 @@ function [pval, f, df_num, df_den] = var
     error ("var_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/welch_test.m b/scripts/statistics/tests/welch_test.m
--- a/scripts/statistics/tests/welch_test.m
+++ b/scripts/statistics/tests/welch_test.m
@@ -78,8 +78,9 @@ function [pval, t, df] = welch_test (x, 
     error ("welch_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/wilcoxon_test.m b/scripts/statistics/tests/wilcoxon_test.m
--- a/scripts/statistics/tests/wilcoxon_test.m
+++ b/scripts/statistics/tests/wilcoxon_test.m
@@ -84,8 +84,9 @@ function [pval, z] = wilcoxon_test (x, y
     error ("wilcoxon_test: option %s not recognized", alt);
   endif
 
   if (nargout == 0)
     printf ("  pval: %g\n", pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/z_test.m b/scripts/statistics/tests/z_test.m
--- a/scripts/statistics/tests/z_test.m
+++ b/scripts/statistics/tests/z_test.m
@@ -80,8 +80,9 @@ function [pval, z] = z_test (x, m, v, al
   if (nargout == 0)
     s = ["Z-test of mean(x) == %g against mean(x) %s %g,\n", ...
          "with known var(x) == %g:\n",                       ...
          "  pval = %g\n"];
     printf (s, m, alt, m, v, pval);
   endif
 
 endfunction
+
diff --git a/scripts/statistics/tests/z_test_2.m b/scripts/statistics/tests/z_test_2.m
--- a/scripts/statistics/tests/z_test_2.m
+++ b/scripts/statistics/tests/z_test_2.m
@@ -81,8 +81,9 @@ function [pval, z] = z_test_2 (x, y, v_x
     s = ["Two-sample Z-test of mean(x) == mean(y) against ", ...
          "mean(x) %s mean(y),\n",                            ...
          "with known var(x) == %g and var(y) == %g:\n",      ...
          "  pval = %g\n"];
     printf (s, alt, v_x, v_y, pval);
   endif
 
 endfunction
+
diff --git a/scripts/strings/strcat.m b/scripts/strings/strcat.m
--- a/scripts/strings/strcat.m
+++ b/scripts/strings/strcat.m
@@ -113,16 +113,17 @@ function st = strcat (varargin)
       endif
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
+
 ## test the dimensionality
 ## 1d
 %!assert (strcat ("ab ", "ab "), "abab")
 %!assert (strcat ({"ab "}, "ab "), {"ab ab"})
 %!assert (strcat ("ab ", {"ab "}), {"abab "})
 %!assert (strcat ({"ab "}, {"ab "}), {"ab ab "})
 %!assert (strcat ("", "ab"), "ab")
 %!assert (strcat ("", {"ab"}, {""}), {"ab"})
diff --git a/scripts/strings/strjoin.m b/scripts/strings/strjoin.m
--- a/scripts/strings/strjoin.m
+++ b/scripts/strings/strjoin.m
@@ -80,17 +80,19 @@ function rval = strjoin (cstr, delimiter
   if (num == 0)
     rval = "";
   else
     rval = [[cstr(:).'; delimiter(:).']{:}];
   endif
 
 endfunction
 
+
 %!assert (strjoin ({"hello"}, "-"), "hello")
 %!assert (strjoin ({"hello", "world"}), "hello world")
 %!assert (strjoin ({"Octave", "Scilab", "Lush", "Yorick"}, "*"),
 %!  "Octave*Scilab*Lush*Yorick")
 %!assert (strjoin ({"space", "comma", "dash", "semicolon", "done"},
 %!  {" ", ",", "-", ";"}), "space comma,dash-semicolon;done")
 %!assert (strjoin ({'Octave','Scilab'},'\n'), "Octave\nScilab")
 %!assert (strjoin ({'Octave','Scilab'},{'\n'}), "Octave\\nScilab")
 %!assert (strjoin ({},'foo'), "")
+
diff --git a/scripts/strings/strsplit.m b/scripts/strings/strsplit.m
--- a/scripts/strings/strsplit.m
+++ b/scripts/strings/strsplit.m
@@ -204,16 +204,17 @@ function [result, matches] = strsplit (s
     endif
     [result, ~, ~, ~, matches] = regexp (str, del, "split");
   else
     error ("strsplit:invalid_delimitertype",
            "strsplit: Invalid DELIMITERTYPE");
   endif
 endfunction
 
+
 %!shared str
 %! str = "The rain in Spain stays mainly in the plain.";
 % Split on all whitespace.
 %!assert (strsplit (str), {"The", "rain", "in", "Spain", "stays", ...
 %! "mainly", "in", "the", "plain."})
 % Split on "ain".
 %!assert (strsplit (str, "ain"), {"The r", " in Sp", " stays m", ...
 %!  "ly in the pl", "."})
diff --git a/scripts/testfun/__have_feature__.m b/scripts/testfun/__have_feature__.m
--- a/scripts/testfun/__have_feature__.m
+++ b/scripts/testfun/__have_feature__.m
@@ -27,8 +27,9 @@ function retval = __have_feature__ (feat
     retval = (all (isfield (features, feature))
               && cellfun (@(x) features.(x), feature));
   elseif (ischar (feature))
     retval = isfield (features, feature) && features.(feature);
   else
     retval = false;
   endif
 endfunction
+
diff --git a/scripts/testfun/__printf_assert__.m b/scripts/testfun/__printf_assert__.m
--- a/scripts/testfun/__printf_assert__.m
+++ b/scripts/testfun/__printf_assert__.m
@@ -20,8 +20,9 @@
 ## @deftypefn {Function File} {} __printf_assert__ (@dots{})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function __printf_assert__ (varargin)
   global _assert_printf;
   _assert_printf = cat (2, _assert_printf, sprintf (varargin{:}));
 endfunction
+
diff --git a/scripts/testfun/__prog_output_assert__.m b/scripts/testfun/__prog_output_assert__.m
--- a/scripts/testfun/__prog_output_assert__.m
+++ b/scripts/testfun/__prog_output_assert__.m
@@ -27,8 +27,9 @@ function ret = __prog_output_assert__ (s
     ret = isempty (str);
   elseif (_assert_printf(end) == "\n")
     ret = strcmp (_assert_printf(1:(end-1)), str);
   else
     ret = strcmp (_assert_printf, str);
   endif
   _assert_printf = "";
 endfunction
+
diff --git a/scripts/testfun/__run_test_suite__.m b/scripts/testfun/__run_test_suite__.m
--- a/scripts/testfun/__run_test_suite__.m
+++ b/scripts/testfun/__run_test_suite__.m
@@ -262,8 +262,9 @@ endfunction
 
 function report_files_with_no_tests (with, without, typ)
   pat = ['\' typ "$"];
   n_with = num_elts_matching_pattern (with, pat);
   n_without = num_elts_matching_pattern (without, pat);
   n_tot = n_with + n_without;
   printf ("\n%d (of %d) %s files have no tests.\n", n_without, n_tot, typ);
 endfunction
+
diff --git a/scripts/time/clock.m b/scripts/time/clock.m
--- a/scripts/time/clock.m
+++ b/scripts/time/clock.m
@@ -49,13 +49,14 @@ function retval = clock ()
   retval(2) = tm.mon + 1;
   retval(3) = tm.mday;
   retval(4) = tm.hour;
   retval(5) = tm.min;
   retval(6) = tm.sec + tm.usec / 1e6;
 
 endfunction
 
+
 %!test
 %! t1 = clock;
 %! t2 = str2num (strftime ("[%Y, %m, %d, %H, %M, %S]", localtime (time ())));
 %! assert (etime (t1, t2) < 1);
 
diff --git a/scripts/time/datenum.m b/scripts/time/datenum.m
--- a/scripts/time/datenum.m
+++ b/scripts/time/datenum.m
@@ -198,8 +198,9 @@ endfunction
 %!assert (datenum ({"5/19/2001", "6/6/1944"}), [730990; 710189])
 
 %% Test input validation
 %!error datenum ()
 %!error datenum (1,2,3,4,5,6,7)
 %!error <expected date vector containing> datenum ([1, 2])
 %!error <expected date vector containing> datenum ([1,2,3,4,5,6,7])
 %!error <all inputs must be of class double> datenum (int32 (2000), int32 (1), int32 (1))
+
diff --git a/scripts/ui/errordlg.m b/scripts/ui/errordlg.m
--- a/scripts/ui/errordlg.m
+++ b/scripts/ui/errordlg.m
@@ -43,8 +43,9 @@ endfunction
 
 %!demo
 %! disp ('- test errordlg with prompt only.');
 %! errordlg ('Oops, an expected error occured');
 
 %!demo
 %! disp ('- test errordlg with prompt and caption.');
 %! errordlg ('Oops another error','This is a very long and informative caption');
+
diff --git a/scripts/ui/private/message_dialog.m b/scripts/ui/private/message_dialog.m
--- a/scripts/ui/private/message_dialog.m
+++ b/scripts/ui/private/message_dialog.m
@@ -58,8 +58,9 @@ function retval = message_dialog (caller
     retval = __octave_link_message_dialog__ (icon, msg, title);
   elseif (__have_feature__ ("JAVA"))
     retval = javaMethod (dlg, "org.octave.JDialogBox", msg, title);
   else
     error ("%s is not available in this version of Octave", dlg);
   endif
 
 endfunction
+
