# HG changeset patch
# User jwe
# Date 1196440993 0
#      Fri Nov 30 16:43:13 2007 +0000
# Node ID 685c186d8f62f8471334c6c2396fb8b155bfcec1
# Parent  bf7235434a2a259f0a6135af9871ffbc3e3b93ca
[project @ 2007-11-30 16:43:12 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,13 +1,20 @@
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
 	* plot/__go_draw_axes__.m: Don't compute data or axis limits.
 	(get_data_limits, get_axis_limits): Delete.
 
+2007-11-30  David Bateman  <dbateman@free.fr>
+
+	* plot/__go_draw_axes__.m (do_tics_1): regexprep the cell array of
+	tick labels rather than one by one on the labels themselves.
+	* plot/pareto.m: Bug in numerical labels fixed. Bug in search for
+	95% crossing fixed.
+
 2007-11-29  David Bateman  <dbateman@free.fr>
 
 	* plot/pareto.m: New file.
 	* plot/Makefile.in (SOURCES): Add it to the sources.
 	* plot/__go_draw_axes__.m (do_tics1): Replace "%" with "%%" in tic
 	marks to avoid gnuplot error about formating. More colorspec to
 	after the tics.
 	* plot/plotyy.m: More generic check for appropriate axis color.
diff --git a/scripts/plot/__go_draw_axes__.m b/scripts/plot/__go_draw_axes__.m
--- a/scripts/plot/__go_draw_axes__.m
+++ b/scripts/plot/__go_draw_axes__.m
@@ -1406,19 +1406,19 @@ function do_tics_1 (ticmode, tics, label
 	ntics = numel (tics);
 	nlabels = numel (labels);
 	fprintf (plot_stream, "set format %s \"%%s\";\n", ax);
 	if (mirror)
 	  fprintf (plot_stream, "set %stics (", ax);
 	else
 	  fprintf (plot_stream, "set %stics nomirror (", ax);
 	endif
+	labels = regexprep(labels, "%", "%%");
 	for i = 1:ntics
-	  fprintf (plot_stream, " \"%s\" %g", 
-		   regexprep (labels(k++), "%", "%%"), tics(i))
+	  fprintf (plot_stream, " \"%s\" %g", labels{k++}, tics(i))
 	  if (i < ntics)
 	    fputs (plot_stream, ", ");
 	  endif
 	  if (k > nlabels)
 	    k = 1;
 	  endif
 	endfor
 	fprintf (plot_stream, ") %s;\n", colorspec);
diff --git a/scripts/plot/pareto.m b/scripts/plot/pareto.m
--- a/scripts/plot/pareto.m
+++ b/scripts/plot/pareto.m
@@ -63,31 +63,31 @@ function h = pareto (varargin)
 
   x = varargin {1}(:).';
   if (nargin == 2)
     y = varargin {2}(:).';
     if (! iscell (y))
       if (ischar (y))
 	y = cellstr (y);
       else
-	y = num2cell (y);
+	y = cellfun (@(x) num2str (x), num2cell (y), "UniformOutput", false);
       endif
     endif
   else
     y = cellfun (@(x) int2str (x), num2cell (1 : numel(x)), 
 		 "UniformOutput", false);
   endif
 
   [x, idx] = sort (x, "descend");
   y = y (idx);
   cdf = cumsum (x);
   maxcdf = max(cdf);
   cdf = cdf ./ maxcdf;
-  [dummy, idx95] = min (abs (cdf - .95));
-  idx95 = idx95(1);
+  cdf95 = cdf - 0.95;
+  idx95 = find(sign(cdf95(1:end-1)) != sign(cdf95(2:end)))(1);
 
   [ax, hbar, hline] = plotyy (ax, 1 : idx95, x (1 : idx95), 
 			      1 : length(cdf), 100 .* cdf, 
 			      @bar, @plot);
 
   axis (ax(1), [1 - 0.6, idx95 + 0.6, 0, maxcdf]);
   axis (ax(2), [1 - 0.6, idx95 + 0.6, 0, 100]);
   set (ax(2), "ytick", [0, 20, 40, 60, 80, 100], 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,14 +1,15 @@
 2007-11-30  Moritz Borgmann  <octave@moriborg.de>
 
 	* ls-mat5.h (mat5_data_type): Delete trailing comma in enum decl.
 	* oct-stream.cc (octave_base_stream::do_printf): Use
 	OCTAVE_EMPTY_CPP_ARG to avoid annoying Sun compiler warning.
-	* OPERATORS/op-sbm-sbm.cc (DEFDBLCONVFN): Likewise.
+	* OPERATORS/op-sbm-sbm.cc (DEFDBLCONVFN): Delete useless macro
+	invocation.
 
 2007-11-30  John W. Eaton  <jwe@octave.org>
 
 	* graphics.cc (updating_axis_limits): New static variable.
 	(check_limit_val, check_limit_vals, get_axis_limits): New functions.
 	(axes::update_axis_limits): Make it work.
 	* graphics.h.in (base_properties::get_children): New function.
 	(base_properties::get_xdata, base_properties::get_ydata,
diff --git a/src/OPERATORS/op-sbm-sbm.cc b/src/OPERATORS/op-sbm-sbm.cc
--- a/src/OPERATORS/op-sbm-sbm.cc
+++ b/src/OPERATORS/op-sbm-sbm.cc
@@ -77,18 +77,16 @@ DEFASSIGNOP_FN (assign, sparse_bool_matr
 
 CONVDECL (bool_matrix_to_double_matrix)
 {
   CAST_CONV_ARG (const octave_sparse_bool_matrix&);
 
   return new octave_sparse_matrix (SparseMatrix (v.sparse_bool_matrix_value ()));
 }
 
-DEFDBLCONVFN (OCTAVE_EMPTY_CPP_ARG, sparse_bool_matrix, bool_array)
-
 void
 install_sbm_sbm_ops (void)
 {
   INSTALL_UNOP (op_not, octave_sparse_bool_matrix, not);
   INSTALL_UNOP (op_uplus, octave_sparse_bool_matrix, uplus);
   INSTALL_UNOP (op_uminus, octave_sparse_bool_matrix, uminus);
   INSTALL_UNOP (op_transpose, octave_sparse_bool_matrix, transpose);
   INSTALL_UNOP (op_hermitian, octave_sparse_bool_matrix, transpose);
