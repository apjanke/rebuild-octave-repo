# HG changeset patch
# User John Donoghue
# Date 1407179115 14400
#      Mon Aug 04 15:05:15 2014 -0400
# Branch gui-release
# Node ID 724fc0a9eeb1c8f67190ee98fd78b3a4b04830b5
# Parent  50fccff7651cbf6d19d4d367a11a18bcf6bf2f55
gui: notify user if custom editor failed to start

* libgui/src/m-editor/file-editor.cc
  (file_editor::call_custom_editor): check status of starting custom file editor, and show message box if it did not start.

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -256,17 +256,31 @@ file_editor::call_custom_editor (const Q
   QSettings *settings = resource_manager::get_settings ();
 
   if (settings->value ("useCustomFileEditor").toBool ())
     {
       QString editor = settings->value ("customFileEditor").toString ();
       editor.replace ("%f", file_name);
       editor.replace ("%l", QString::number (line));
 
-      QProcess::startDetached (editor);
+      bool started_ok = QProcess::startDetached (editor);
+
+      if (started_ok != true)
+        {
+          QMessageBox *msgBox
+            = new QMessageBox (QMessageBox::Critical,
+                               tr ("Octave Editor"),
+                               tr ("Could not start custom file editor\n%1").
+                               arg (editor),
+                               QMessageBox::Ok, this);
+
+           msgBox->setWindowModality (Qt::NonModal);
+           msgBox->setAttribute (Qt::WA_DeleteOnClose);
+           msgBox->show ();
+        }
 
       if (line < 0 && ! file_name.isEmpty ())
         handle_mru_add_file (QFileInfo (file_name).canonicalFilePath ());
 
       return true;
     }
 
   return false;
