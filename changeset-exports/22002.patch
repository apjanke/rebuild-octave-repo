# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1467299115 14400
#      Thu Jun 30 11:05:15 2016 -0400
# Node ID 40e9cb6bd95c04d22d133a6fc718bef2c504af8b
# Parent  1d775d40a6976b696f1d0ca2f958d5c447b4cd60
avoid macros in generated built-in function files

* mkbuiltins: New option, --disable-dl.  Don't use macros to declare or
install built-in functions or aliases.

* libinterp/module.mk: Optionally pass --disable-dl to mkbuiltins.

diff --git a/libinterp/mkbuiltins b/libinterp/mkbuiltins
--- a/libinterp/mkbuiltins
+++ b/libinterp/mkbuiltins
@@ -14,17 +14,17 @@
 # FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 # for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Octave; see the file COPYING.  If not, see
 # <http://www.gnu.org/licenses/>.
 
 if test $# -lt 2; then
-  echo "usage: mkbuiltins SRCDIR --header|--source f1 f2 ..." 1>&2
+  echo "usage: mkbuiltins SRCDIR --header|--source [--disable-dl] f1 f2 ..." 1>&2
   exit 1
 fi
 
 SED=${SED:-sed}
 
 srcdir="$1"
 shift
 
@@ -40,130 +40,148 @@ case "$1" in
     shift
   ;;
   *)
     echo "mkbuiltins: unrecognized option: $1" 1>&2
     exit 1
   ;;
 esac
 
+## If DLD functions are disabled, then DEFUN_DLD functions
+## are built-in instead of being dynamically loaded so they will also
+## need to be installed.
+
+defun_dld_are_built_in=false
+case "$1" in
+  --disable-dl)
+    defun_dld_are_built_in=true
+    shift
+  ;;
+esac
+
 if $make_header; then
 
   cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
 #if ! defined (octave_builtin_defun_decls_h)
 #define octave_builtin_defun_decls_h 1
 
 #include "octave-config.h"
 
 #include "ovl.h"
 
-#define XDEFUN_DECL(name) \
-  extern OCTINTERP_API octave_value_list \
-  name (const octave_value_list& = octave_value_list (), int = 0);
+EOF
+
+  pattern='s/^[ \t]*DEF\(CONSTFUN\|UN\)[ \t]*( *\([^ ,]*\).*$/F\2/p; s/^[ \t]*DEFUNX[ \t]*( *"[^"]*" *, *\([^ ,]*\).*$/\1/p'
 
-#if defined (ENABLE_DYNAMIC_LINKING)
-#  define XDEFUN_DLD_DECL(name)
-#else
-#  define XDEFUN_DLD_DECL(name) XDEFUN_DECL (name)
-#endif
+  dld_pattern='s/^[ \t]*DEFUN_DLD[ \t]*( *\([^ ,]*\).*$/F\1/p; s/^[ \t]*DEFUNX_DLD[ \t]*( *"[^"]*" *, *\([^ ,]*\).*$/\1/p'
 
-EOF
+  if $defun_dld_are_built_in; then
+    pattern="$pattern; $dld_pattern"
+  fi
 
   for arg
   do
     if [ -f $arg ]; then
       file="$arg";
     else
       file="$srcdir/$arg";
     fi
 
-    $SED -n -e 's/^[ \t]*DEF\(CONSTFUN\|UN\)[ \t]*( *\([_A-Za-z][_A-Za-z0-9]*\) *,.*$/XDEFUN_DECL (F\2)/p; s/^[ \t]*DEFUNX[ \t]*( *"\([_A-Za-z][_A-Za-z0-9]*\)" *,.*$/XDEFUN_DECL (F\1)/p; s/^[ \t]*DEFUN_DLD[ \t]*( *\([_A-Za-z][_A-Za-z0-9]*\) *,.*$/XDEFUN_DLD_DECL (F\1)/p; s/^[ \t]*DEFUNX_DLD[ \t]*( *"\([_A-Za-z][_A-Za-z0-9]*\)" *,.*$/XDEFUN_DLD_DECL (F\1)/p' "$file"
+    ## Generate a list of function names to declare.  We could do
+    ## this in one step, but this way keeps the sed patterns a
+    ## bit smaller.
+
+    names=`$SED -n -e "$pattern" "$file"`
+
+    for name in $names; do
+      echo "extern OCTINTERP_API octave_value_list"
+      echo "$name (const octave_value_list& = octave_value_list (), int = 0);"
+      echo ""
+    done
   done
 
   cat << \EOF
 
-#undef XDEFUN_DECL
-#undef XDEFUN_DLD_DECL
-
 #endif
 
 EOF
 
 elif $make_source; then
 
   cat << \EOF
 // DO NOT EDIT!  Generated automatically by mkbuiltins.
 
 #if defined (HAVE_CONFIG_H)
-#include "config.h"
+#  include "config.h"
 #endif
 
 #include "defun.h"
 #include "help.h"
 #include "ovl.h"
 #include "variables.h"
 #include "builtin-defun-decls.h"
 #include "builtins.h"
 
 #if defined (quad)
 #  undef quad
 #endif
 
-#if defined (ENABLE_DYNAMIC_LINKING)
-
-#  define XDEFUN_DLD_INTERNAL(name)
-
-#  define XDEFUNX_DLD_INTERNAL(name, fname)
+EOF
 
-#else
-
-#  define XDEFUN_DLD_INTERNAL(name) \
-     XDEFUN_INTERNAL(name)
-
-#  define XDEFUNX_DLD_INTERNAL(name, fname) \
-     XDEFUNX_INTERNAL(name, fname)
+  pattern='s/^ *DEFUN *( *\([^ ,]*\) *,.*$/type=fun;fname=F\1;name=\1/p; s/^ *DEFUNX *( *"\([^"]*\)" *, *\([^ ,]*\) *,.*$/type=fun;fname=\2;name=\1/p; s/^ *DEFCONSTFUN *( *\([^ ,]*\) *,.*$/type=fun;fname=F\1;name=\1;const=true/p; s/^ *DEFALIAS *( *\([^ ,]*\) *, *\([^ )]*\) *).*$/type=alias;alias=\1;name=\2/p'
 
-#endif
-
-#define XDEFUN_INTERNAL(name) \
-  install_builtin_function (F ## name, #name, file, "external-doc"); \
-
-#define XDEFCONSTFUN_INTERNAL(name) \
-  install_builtin_function (F ## name, #name, file, "external-doc", false); \
+  dld_pattern='s/^ *DEFUN_DLD *( *\([^ ,]*\) *,.*$/type=fun;fname=F\1;name=\1/p; s/^ *DEFUNX_DLD *( *"\([^"]*\)" *, *\([^ ,]*\) *,.*$/type=fun;fname=\2;name=\1/p'
 
-#define XDEFUNX_INTERNAL(name, fname) \
-  install_builtin_function (fname, name, file, "external-doc"); \
-
-#define XDEFALIAS_INTERNAL(alias, name) \
-  alias_builtin (#alias, #name);
-
-EOF
+  if $defun_dld_are_built_in; then
+    pattern="$pattern; $dld_pattern"
+  fi
 
   for arg
   do
     if [ -f $arg ]; then
       file="$arg";
     else
       file="$srcdir/$arg";
     fi
 
     fcn=`echo "$arg" | $SED 's,.*/,,; s/\.\(cc\|cpp\|in\.yy\|ll\)$//; s/-/_/g;'`
     echo "static void"
     echo "install_${fcn}_fcns (void)"
     echo "{"
     echo "  std::string file = \"$arg\";"
     echo ""
-    $SED -n \
-      -e 's/^ *\(DEFUN\(_DLD\|\)\) *( *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\3);/p' \
-      -e 's/^ *\(DEFUNX\(_DLD\|\)\) *( *\("[^"]*"\) *, *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\3, \4);/p' \
-      -e 's/^ *\(DEFCONSTFUN\) *( *\([^ ,]*\) *,.*$/  X\1_INTERNAL (\2);/p' \
-      -e 's/^ *\(DEFALIAS\) *( *\([^ ,]*\) *, *\([^ )]*\) *).*$/  X\1_INTERNAL (\2, \3);/p' \
-      "$file"
+
+    ## Generate a list of shell variable assignment expressions
+    ## then evaluate them to generate the function calls that
+    ## install the built-in functions or function aliases.
+
+    info_list=`$SED -n -e "$pattern" "$file"`
+
+    for info in $info_list; do
+      eval "$info"
+
+      const=false
+      case $type in
+        fun)
+          if $const; then
+            echo "  install_builtin_function ($fname, \"$name\", file, \"external-doc\", true);"
+          else
+            echo "  install_builtin_function ($fname, \"$name\", file, \"external-doc\");"
+          fi
+          unset type fname name const
+        ;;
+        alias)
+          echo "  alias_builtin (\"$alias\", \"$name\");"
+          unset type alias name
+        ;;
+      esac
+    done
+
     echo "}"
     echo ""
   done
 
   cat << \EOF
 
 void
 install_builtins (void)
diff --git a/libinterp/module.mk b/libinterp/module.mk
--- a/libinterp/module.mk
+++ b/libinterp/module.mk
@@ -235,24 +235,30 @@ libinterp/version.h: libinterp/version.i
 
 libinterp/liboctinterp-build-info.cc: libinterp/liboctinterp-build-info.in.cc HG-ID | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SED) \
 	  -e "s|%NO_EDIT_WARNING%|DO NOT EDIT!  Generated automatically by Makefile|" \
 	  -e "s|%OCTAVE_HG_ID%|`cat $(builddir)/HG-ID`|" $< > $@-t && \
 	$(simple_move_if_change_rule)
 
+if AMCOND_ENABLE_DYNAMIC_LINKING
+  mkbuiltins_dld_opt =
+else
+  mkbuiltins_dld_opt = --disable-dl
+endif
+
 libinterp/builtins.cc: $(ALL_DEFUN_FILES) libinterp/mkbuiltins | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
-	$(SHELL) $(srcdir)/libinterp/mkbuiltins "$(srcdir)" --source $(ALL_DEFUN_FILES) > $@-t && \
+	$(SHELL) $(srcdir)/libinterp/mkbuiltins "$(srcdir)" --source $(mkbuiltins_dld_opt) $(ALL_DEFUN_FILES) > $@-t && \
 	mv $@-t $@
 
 libinterp/builtin-defun-decls.h: $(ALL_DEFUN_FILES) libinterp/mkbuiltins | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
-	$(SHELL) $(srcdir)/libinterp/mkbuiltins "$(srcdir)" --header $(ALL_DEFUN_FILES) > $@-t && \
+	$(SHELL) $(srcdir)/libinterp/mkbuiltins "$(srcdir)" --header $(mkbuiltins_dld_opt) $(ALL_DEFUN_FILES) > $@-t && \
 	$(simple_move_if_change_rule)
 
 if AMCOND_ENABLE_DYNAMIC_LINKING
 DLDFCN_PKG_ADD_FILE = libinterp/dldfcn/PKG_ADD
 
 libinterp/dldfcn/PKG_ADD: $(DLDFCN_DEFUN_FILES) libinterp/mk-pkg-add | libinterp/$(octave-dirstamp)
 	$(AM_V_GEN)rm -f $@-t && \
 	$(SHELL) $(srcdir)/libinterp/mk-pkg-add "$(srcdir)" $(DLDFCN_DEFUN_FILES) > $@-t && \
