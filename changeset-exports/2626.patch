# HG changeset patch
# User jwe
# Date 854329396 0
#      Mon Jan 27 01:43:16 1997 +0000
# Node ID b35a5cd8107f07b282de5014be89c5cc6276740b
# Parent  e2f1586bb3936aadc336d9d7ff75135cf9f25e9b
[project @ 1997-01-27 01:41:30 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,20 @@
+Sun Jan 26 19:39:51 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* emacs/Makefile.in: New file.
+	* configure.in: create emacs/Makefile.
+	* octMakefile.in: Move/add emacs dir to the appropriate lists.
+
 Sat Jan 25 22:27:14 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* aclocal.m4 (OCTAVE_CHECK_TYPE): New macro, stolen from bash.
+	* configure.in: Use it.
+	* acconfig.h: Add #undef for sigset_t.
+
 	* configure.in (RLD_FLAG): Delete.
 	* mkoctfile.in (RLD_FLAG): Delete.
 	* octave-bug.in (RLD_FLAG): Delete.
 	* Makeconf.in (RLD_FLAG): Delete.
 
 	* Makefile.in (bin-dist): New target.
 
 	* install-octave: Rename from doinstall.sh.  Update for 2.x.
diff --git a/acconfig.h b/acconfig.h
--- a/acconfig.h
+++ b/acconfig.h
@@ -117,13 +117,16 @@
 #undef dev_t
 
 /* Define to `unsigned long' if <sys/types.h> doesn't define. */
 #undef ino_t
 
 /* Define to `short' if <sys/types.h> doesn't define. */
 #undef nlink_t
 
+/* Define to `int' if <signal.h> doesn't define. */
+#undef sigset_t
+
 
 /* Leave that blank line there!!  Autoheader needs it.
    If you're adding to this file, keep in mind:
    The entries are in sort -df order: alphabetical, case insensitive,
    ignoring punctuation (such as underscores).  */
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -560,8 +560,33 @@ main()
 }
 ], octave_cv_must_reinstall_sighandlers=no, octave_cv_must_reinstall_sighandlers=yes,
 AC_MSG_ERROR(cannot check signal handling if cross compiling))])
 AC_MSG_RESULT($octave_cv_must_reinstall_sighandlers)
 if test "$octave_cv_must_reinstall_sighandlers" = yes; then
 AC_DEFINE(MUST_REINSTALL_SIGHANDLERS)
 fi
 ])
+dnl
+dnl This check originally from bash 2.0.
+dnl
+dnl Check for typedef'd symbols in header files, but allow the caller to
+dnl specify the include files to be checked in addition to the default.
+dnl 
+dnl OCTAVE_CHECK_TYPE(TYPE, HEADERS, DEFAULT[, VALUE-IF-FOUND])
+AC_DEFUN(OCTAVE_CHECK_TYPE,
+[AC_REQUIRE([AC_HEADER_STDC])dnl
+AC_MSG_CHECKING(for $1)
+AC_CACHE_VAL(octave_cv_type_$1,
+[AC_EGREP_CPP($1, [#include <sys/types.h>
+#if STDC_HEADERS
+#include <stdlib.h>
+#endif
+$2
+], octave_cv_type_$1=yes, octave_cv_type_$1=no)])
+AC_MSG_RESULT($octave_cv_type_$1)
+ifelse($#, 4, [if test $octave_cv_type_$1 = yes; then
+	AC_DEFINE($4)
+	fi])
+if test $octave_cv_type_$1 = no; then
+  AC_DEFINE($1, $3)
+fi
+])
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -16,17 +16,17 @@ dnl Copyright (C) 1996 John W. Eaton
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ### 02111-1307, USA. 
 
-AC_REVISION($Revision: 1.247 $)
+AC_REVISION($Revision: 1.248 $)
 AC_PREREQ(2.9)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -923,16 +923,17 @@ OCTAVE_REINSTALL_SIGHANDLERS
 AC_TYPE_MODE_T
 AC_TYPE_OFF_T
 AC_TYPE_PID_T
 AC_TYPE_SIZE_T
 AC_TYPE_UID_T
 AC_CHECK_TYPE(dev_t, short)
 AC_CHECK_TYPE(ino_t, unsigned long)
 AC_CHECK_TYPE(nlink_t, short)
+OCTAVE_CHECK_TYPE(sigset_t, [#include <signal.h>], int)
 
 ### Define VOID_SIGHANDLER for readline.
 
 case "$RETSIGTYPE" in
   int)
   ;;
   *)
     VOID_SIGHANDLER="-DVOID_SIGHANDLER=1"
@@ -1112,18 +1113,18 @@ export CXX
 export F77
 
 AC_CONFIG_SUBDIRS(glob kpathsea scripts $INFO_DIR $PLPLOT_DIR $READLINE_DIR)
 
 ### Do the substitutions in all the Makefiles.
 
 AC_OUTPUT(Makefile octMakefile Makeconf test/Makefile dlfcn/Makefile
   doc/Makefile doc/faq/Makefile doc/interpreter/Makefile
-  doc/liboctave/Makefile doc/refcard/Makefile examples/Makefile
-  liboctave/Makefile src/Makefile libcruft/Makefile
+  doc/liboctave/Makefile doc/refcard/Makefile emacs/Makefile
+  examples/Makefile liboctave/Makefile src/Makefile libcruft/Makefile
   libcruft/Makerules libcruft/blas/Makefile libcruft/balgen/Makefile
   libcruft/dassl/Makefile libcruft/eispack/Makefile
   libcruft/fftpack/Makefile libcruft/fsqp/Makefile
   libcruft/lapack/Makefile libcruft/linpack/Makefile
   libcruft/minpack/Makefile libcruft/misc/Makefile
   libcruft/npsol/Makefile libcruft/odepack/Makefile
   libcruft/qpsol/Makefile libcruft/quadpack/Makefile
   libcruft/ranlib/Makefile libcruft/slatec-fn/Makefile
diff --git a/octMakefile.in b/octMakefile.in
--- a/octMakefile.in
+++ b/octMakefile.in
@@ -25,17 +25,17 @@ CONF_DISTFILES = Makefile.in octMakefile
 DISTFILES = $(CONF_DISTFILES) \
 	BUGS COPYING INSTALL INSTALL.OCTAVE NEWS NEWS.[0-9] PROJECTS \
 	README README.Linux README.NLP README.Windows ROADMAP \
 	SENDING-PATCHES THANKS move-if-change octave-sh octave-bug.in \
 	install-octave mkinstalldirs mkoctfile.in texi2dvi INFO.PATCH \
 	MAKEINFO.PATCH ChangeLog ChangeLog.[0-9]
 
 # Complete directory trees to distribute.
-DISTDIRS = emacs glob kpathsea make # plplot
+DISTDIRS = glob kpathsea make # plplot
 
 # Subdirectories in which to run `make all'.
 SUBDIRS = @INFO_DIR@ @PLPLOT_DIR@ @READLINE_DIR@ @DLFCN_DIR@ glob \
 	kpathsea libcruft liboctave src scripts doc examples
 
 # Subdirectories in which to run `make conf-dist'.
 CONF_DISTSUBDIRS = src
 
@@ -47,18 +47,18 @@ XBINDISTFILES = BUGS COPYING INSTALL INS
 	PROJECTS README README.Linux README.NLP README.Windows \
 	SENDING-PATCHES THANKS octave-sh insatll-octave mkinstalldirs \
 	ChangeLog ChangeLog.[0-9]
 
 BINDISTFILES = $(addprefix $(srcdir)/, $(XBINDISTFILES)) \
 	octave-bug VERSION ARCH
 
 # Subdirectories in which to run `make bin-dist'.
-BINDISTSUBDIRS = libcruft liboctave src info kpathsea readline \
-	scripts doc examples
+BINDISTSUBDIRS = libcruft liboctave src kpathsea readline info \
+	scripts doc emacs examples
 
 # Complete directories trees to distribute with binary distributions.
 BINDISTDIRS = emacs
 
 # Subdirectories in which to run clean targets.
 CLEANSUBDIRS = $(DISTSUBDIRS) glob kpathsea
 
 DIRS_TO_MAKE = $(bindir) $(libdir) $(octincludedir) $(fcnfiledir) \
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+Sun Jan 26 19:41:48 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* sighandlers.cc (sigchld_handler): Block SIGCHLD while
+	sigchld_hander is running.
+
 Sat Jan 25 22:36:39 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (bin-dist): Update for 2.x.
 
 Fri Jan 24 10:05:00 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mk-oct-links.in: New arg, -p, to just print list of files to link.
 
diff --git a/src/sighandlers.cc b/src/sighandlers.cc
--- a/src/sighandlers.cc
+++ b/src/sighandlers.cc
@@ -75,23 +75,43 @@ static sigset_t octave_signal_mask;
 #define MAYBE_REINSTALL_SIGHANDLER(sig, handler) \
   octave_set_signal_handler (sig, handler)
 #else
 #define MAYBE_REINSTALL_SIGHANDLER(sig, handler) \
   do { } while (0)
 #endif
 
 #if defined (__EMX__)
-#define MAYBE_UNBLOCK_SIGNAL(sig) \
+#define MAYBE_ACK_SIGNAL(sig) \
   octave_set_signal_handler (sig, SIG_ACK)
 #else
-#define MAYBE_UNBLOCK_SIGNAL(sig) \
+#define MAYBE_ACK_SIGNAL(sig) \
   do { } while (0)
 #endif
 
+// The following signal blocking stuff is stolen from bash:
+
+#define BLOCK_SIGNAL(sig, nvar, ovar) \
+  do \
+    { \
+      sigemptyset (&nvar); \
+      sigaddset (&nvar, sig); \
+      sigemptyset (&ovar); \
+      sigprocmask (SIG_BLOCK, &nvar, &ovar); \
+    } \
+  while (0)
+
+#if defined (HAVE_POSIX_SIGNALS)
+#define BLOCK_CHILD(nvar, ovar) BLOCK_SIGNAL (SIGCHLD, nvar, ovar)
+#define UNBLOCK_CHILD(ovar) sigprocmask (SIG_SETMASK, &ovar, 0)
+#else
+#define BLOCK_CHILD(nvar, ovar) ovar = sigblock (sigmask (SIGCHLD))
+#define UNBLOCK_CHILD(ovar) sigsetmask (ovar)
+#endif
+
 void
 octave_save_signal_mask (void)
 {
 #if defined (HAVE_POSIX_SIGNALS)
   sigprocmask (0, 0, &octave_signal_mask);
 #endif
 }
 
@@ -184,24 +204,32 @@ generic_sig_handler (int sig)
   SIGHANDLER_RETURN (0);
 }
 
 // Handle SIGCHLD.
 
 static RETSIGTYPE
 sigchld_handler (int /* sig */)
 {
-#if defined (__EMX__)
   volatile octave_interrupt_handler *saved_interrupt_handler
      = octave_ignore_interrupts ();
 
+  // I wonder if this is really right, or if SIGCHLD should just be
+  // blocked on OS/2 systems the same as for systems with POSIX signal
+  // functions.
+
+#if defined (__EMX__)
   volatile sig_handler *saved_sigchld_handler
-    = octave_set_signal_hanlder (SIGCHLD, SIG_IGN);
+    = octave_set_signal_handler (SIGCHLD, SIG_IGN);
 #endif
 
+  sigset_t set, oset;
+
+  BLOCK_CHILD (set, oset);
+
   int n = octave_child_list::length ();
 
   if (n == 0)
     {
       waitpid (-1, 0, WNOHANG);
     }
   else
     {
@@ -225,34 +253,36 @@ sigchld_handler (int /* sig */)
 		    f (pid, status);
 
 		  break;
 		}
 	    }
 	}
     }
 
-#if defined (__EMX__)
   octave_set_interrupt_handler (saved_interrupt_handler);
 
+  UNBLOCK_CHILD (oset);
+
+#ifdef __EMX__
   octave_set_signal_handler (SIGCHLD, saved_sigchld_handler);
 #endif
 
-  MAYBE_UNBLOCK_SIGNAL (SIGCHLD);
+  MAYBE_ACK_SIGNAL (SIGCHLD);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGCHLD, sigchld_handler);
 
   SIGHANDLER_RETURN (0);
 }
 
 #if defined (__alpha__)
 static RETSIGTYPE
 sigfpe_handler (int /* sig */)
 {
-  MAYBE_UNBLOCK_SIGNAL (SIGFPE);
+  MAYBE_ACK_SIGNAL (SIGFPE);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGFPE, sigfpe_handler);
 
   error ("floating point exception -- trying to return to prompt");
 
   if (can_interrupt)
     {
       jump_to_top_level ();
@@ -267,33 +297,33 @@ sigfpe_handler (int /* sig */)
 //
 // This also has to work for SIGBREAK (on systems that have it), so we
 // use the value of sig, instead of just assuming that it is called
 // for SIGINT only.
 
 static RETSIGTYPE
 sigint_handler (int sig)
 {
-  MAYBE_UNBLOCK_SIGNAL (sig);
+  MAYBE_ACK_SIGNAL (sig);
 
   MAYBE_REINSTALL_SIGHANDLER (sig, sigint_handler);
 
   if (can_interrupt)
     {
       jump_to_top_level ();
       panic_impossible ();
     }
 
   SIGHANDLER_RETURN (0);
 }
 
 static RETSIGTYPE
 sigpipe_handler (int /* sig */)
 {
-  MAYBE_UNBLOCK_SIGNAL (SIGPIPE);
+  MAYBE_ACK_SIGNAL (SIGPIPE);
 
   MAYBE_REINSTALL_SIGHANDLER (SIGPIPE, sigpipe_handler);
 
   if (pipe_handler_error_count++ == 0)
     warning ("broken pipe");
 
   // Don't loop forever on account of this.
 
