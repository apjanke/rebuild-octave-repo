# HG changeset patch
# User jwe
# Date 954828983 0
#      Tue Apr 04 06:16:23 2000 +0000
# Node ID 96679fb690a4c5bc49273b7d3f193f8f662b1a17
# Parent  6324a4994278d8656758ec062ef8d0e0c19f731f
[project @ 2000-04-04 06:16:22 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2000-04-04  John Smith <john@arrows.demon.co.uk>
+
+	* statistics/distributions/beta_inv.m: Provide better(?) initial
+	guess for iteration.
+
 2000-03-31   Paul Kienzle  <pkienzle@kienzle.powernet.co.uk>
 
 	* image/image.m: Allow image (A) or image (x, y, A).
 	* image/imagesc.m: Likewise.
 
 	* image/image.m: If zoom is not supplied, or if it is an empty
 	matrix, autoscale the image.
 
diff --git a/scripts/statistics/distributions/beta_inv.m b/scripts/statistics/distributions/beta_inv.m
--- a/scripts/statistics/distributions/beta_inv.m
+++ b/scripts/statistics/distributions/beta_inv.m
@@ -52,17 +52,17 @@ function inv = beta_inv (x, a, b)
     inv (k) = ones (length (k), 1);
   endif
 
   k = find ((x > 0) & (x < 1) & (a > 0) & (b > 0));
   if (any (k))
     a = a (k);
     b = b (k);
     x = x (k);
-    y = a ./ b;
+    y = a ./ (a + b);
     l = find (y < eps);
     if (any (l))
       y(l) = sqrt (eps) * ones (length (l), 1);
     endif
     l = find (y > 1 - eps);
     if (any (l))
       y(l) = 1 - sqrt (eps) * ones (length (l), 1);
     endif
diff --git a/scripts/statistics/distributions/f_inv.m b/scripts/statistics/distributions/f_inv.m
--- a/scripts/statistics/distributions/f_inv.m
+++ b/scripts/statistics/distributions/f_inv.m
@@ -49,21 +49,17 @@ function inv = f_inv (x, m, n)
 
   k = find ((x == 1) & (m > 0) & (n > 0));
   if (any (k))
     inv(k) = Inf * ones (1, length (k));
   endif
 
   k = find ((x > 0) & (x < 1) & (m > 0) & (n > 0));
   if (any (k))
-    fprintf (stderr, "n1: %f\n", n(k));
-    fprintf (stderr, "n2: %f\n", m(k));
-    t = beta_inv (1 - x(k), n(k) / 2, m(k) / 2)
-    fprintf (stderr, "qbeta: %f\n", t);
-    inv(k) = ((1 ./ t - 1)
+    inv(k) = ((1 ./ beta_inv (1 - x(k), n(k) / 2, m(k) / 2) - 1)
 	      .* n(k) ./ m(k));
   endif
 
   ## should we really only allow for positive integer m, n?
   k = find ((m != round (m)) | (n != round (n)));
   if (any (k))
     warning ("f_inv: m and n should be positive integers");
     inv(k) = NaN * ones (1, length (k));
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2000-04-04  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* dynamic-ld.cc (octave_dynamic_loader::do_load): Undo previous change.
+
 2000-04-03  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* dynamic-ld.cc (octave_dynamic_loader::do_load): Also fail with
 	error message if we don't find the mangled function name in the
 	file.
 
 2000-03-31  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/dynamic-ld.cc b/src/dynamic-ld.cc
--- a/src/dynamic-ld.cc
+++ b/src/dynamic-ld.cc
@@ -262,21 +262,21 @@ octave_dynamic_loader::do_load (const st
     }
 
   if (function)
     {
       octave_dld_fcn_installer f
 	= X_CAST (octave_dld_fcn_installer, function);
 
       retval = f (oct_file);
+
+      if (! retval)
+	::error ("failed to install dld function `%s'", fcn_name.c_str ());
     }
   
-  if (! retval)
-    ::error ("failed to install dld function `%s'", fcn_name.c_str ());
-
   unwind_protect::run_frame ("octave_dynamic_loader::do_load");
 
   return retval;
 }
 
 bool
 octave_dynamic_loader::do_remove (const std::string& fcn_name, octave_shlib& shl)
 {
