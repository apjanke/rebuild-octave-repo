# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1259529161 -3600
#      Sun Nov 29 22:12:41 2009 +0100
# Node ID cee6c63cff329836f5799a94cdd23fbad0251b29
# Parent  e3bd1569a68c3227a895cdbe9e099388cc0d4725
update NEWS

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-11-29  Jaroslav Hajek  <highegg@gmail.com>
+
+	* NEWS: Update.
+
 2009-11-27  David Bateman  <dbateman@free.fr>
 
 	* configure.ac (HAVE_H5GGET_NUM_OBJS) Remove define.
 
 2009-11-27  David Bateman  <dbateman@free.fr>
 
 	* NEWS: Document ftp objects.
 	* configure.ac: Document that curl libraries impact ftp objects.
diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -11,16 +11,22 @@ Summary of important user-visible change
 
  ** Real, integer and logical matrices, when used in indexing, will now
     cache the internal index_vector value (zero-based indices) when
     successfully used as indices, eliminating the conversion penalty for
     subsequent indexing by the same matrix. In particular, this means it is
     no longer needed to avoid repeated indexing by logical arrays using
     `find' for performance reasons.
 
+ ** Logical matrices are now treated more efficiently when used as indices.
+    Octave will keep the index as a logical mask unless the ratio of true 
+    elements is small enough, using a specialized code. Previously, all logical
+    matrices were always first converted to index vectors. This results in
+    savings in both memory and computing time. 
+
  ** sub2ind and ind2sub were reimplemented as compiled functions for better
     performance. These functions are now faster, can deliver more economized
     results for ranges, and can reuse the index cache mechanism described in
     previous paragraph.
 
  ** The built-in function equivalents to associative operators (plus, times,
     mtimes, and, or) have been extended to accept multiple arguments. This
     is especially useful for summing (multiplying, etc.) lists of objects
@@ -90,18 +96,21 @@ Summary of important user-visible change
       matrix += scalar
       matrix -= scalar
       matrix *= scalar
       matrix /= scalar
 
       logical matrix |= logical matrix
       logical matrix &= logical matrix
 
-   where matrix and scalar belong to the same class. The left-hand side must be
-   a simple variable reference.
+    where matrix and scalar belong to the same class. The left-hand side must be
+    a simple variable reference.
+
+    Moreover, when unary operators occur in expressions, Octave will also try to do
+    the operation in-place if it's argument is a temporary expresssion.
 
  ** The effect of comparison operators (<,>,<=,>=) when applied to complex numbers 
     has changed to be consistent with the strict ordering defined by max, min and sort.
     More specifically, complex numbers are compared by lexicographical comparison of
     the pairs [abs(z), arg(z)]. Previously, only real parts were compared; this can be
     trivially achieved by wrapping the operands in real().
 
  ** The automatic simplification of complex computation results has changed. Octave will
