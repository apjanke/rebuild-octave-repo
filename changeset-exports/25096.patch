# HG changeset patch
# User Rik <rik@octave.org>
# Date 1522715359 25200
#      Mon Apr 02 17:29:19 2018 -0700
# Node ID 7e04ddd963a9bb17c37f4ef68ab1acb4b7147697
# Parent  7c184f1dce659229bd848827f907af9af0d558fc
# Parent  71ed409b2ffbb3940d0da9b7afec97093a3a458d
maint: merge stable to default.

diff --git a/libgui/graphics/ObjectProxy.cc b/libgui/graphics/ObjectProxy.cc
--- a/libgui/graphics/ObjectProxy.cc
+++ b/libgui/graphics/ObjectProxy.cc
@@ -24,16 +24,17 @@ along with Octave; see the file COPYING.
 #  include "config.h"
 #endif
 
 #include <QCoreApplication>
 #include <QString>
 #include <QThread>
 
 #include "oct-mutex.h"
+#include "utils.h"
 
 #include "Object.h"
 #include "ObjectProxy.h"
 
 namespace QtHandles
 {
 
   ObjectProxy::ObjectProxy (Object *obj)
@@ -129,21 +130,21 @@ namespace QtHandles
     QMetaObject::invokeMethod (m_object, "slotGetPixels", t,
                                Q_RETURN_ARG (uint8NDArray, retval));
 
     // FIXME: The following may fail for obscure reasons, see bug #53328.
     //        In absence of a solution, we retry twice before calling error().
     if (! QMetaObject::invokeMethod (m_object, "slotGetPixels", t,
                                      Q_RETURN_ARG (uint8NDArray, retval)))
       {
-        QThread::msleep (100);
+        octave_sleep (0.1);
         if (! QMetaObject::invokeMethod (m_object, "slotGetPixels", t,
                                          Q_RETURN_ARG (uint8NDArray, retval)))
           {
-            QThread::msleep (200);
+            octave_sleep (0.2);
             if (! QMetaObject::invokeMethod (m_object, "slotGetPixels", t,
                                              Q_RETURN_ARG (uint8NDArray, retval)))
               error ("getframe: unable to retrieve figure pixels");
           }
       }
     
      return retval;
    }
diff --git a/libgui/src/documentation.cc b/libgui/src/documentation.cc
--- a/libgui/src/documentation.cc
+++ b/libgui/src/documentation.cc
@@ -195,18 +195,18 @@ namespace octave
         QFileInfo finfo (file);
         QString bname = finfo.fileName ();
         QDir dir = finfo.absoluteDir ();
         dir.setFilter (QDir::Dirs | QDir::NoDotAndDotDot | QDir::Hidden);
         QStringList namefilter;
         namefilter.append ("*" + bname + "*");
         foreach (QFileInfo fi, dir.entryInfoList (namefilter))
           {
-            QDir tmpdir (fi.absoluteFilePath ());
-            tmpdir.removeRecursively ();
+            std::string file_name = fi.absoluteFilePath ().toStdString ();
+            sys::recursive_rmdir (file_name);
           }
 
         file.remove();
       }
   }
 
   void documentation::global_search (void)
   {
diff --git a/libinterp/corefcn/lu.cc b/libinterp/corefcn/lu.cc
--- a/libinterp/corefcn/lu.cc
+++ b/libinterp/corefcn/lu.cc
@@ -547,18 +547,18 @@ permutation information.
 %! [L, U] = lu (B);
 %! assert (L*U, B);
 %! [L, U, P] = lu(B);
 %! assert (P'*L*U, B);
 %! [L, U, P, Q] = lu (B);
 %! assert (P'*L*U*Q', B);
 
 %!error lu ()
-%!warning <function may fail>
-%! [l,u] = lu (sparse (magic (3)));
+%!testif HAVE_UMFPACK
+%! fail ("[l,u] = lu (sparse (magic (3)))", "warning", "function may fail");
 %!error <can not define pivoting threshold> lu ([1, 2; 3, 4], 2)
 
 */
 
 static
 bool check_lu_dims (const octave_value& l, const octave_value& u,
                     const octave_value& p)
 {
