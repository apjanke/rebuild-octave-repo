# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1373999962 -3600
#      Tue Jul 16 19:39:22 2013 +0100
# Node ID 7a69ab84b8c9efc28eb9ab672b31180ee4040a84
# Parent  54b75bed4bc7df86901eef6dc43440f8c4fdccae
__magick_write__: confirm file exists before reading to append.

* __magick_read__.cc (__magick_write__): when WriteMode is set to
  append, file needs to be read first. If file does not exist, act
  normally. Confirm existence to file and skip reading if false.

diff --git a/libinterp/dldfcn/__magick_read__.cc b/libinterp/dldfcn/__magick_read__.cc
--- a/libinterp/dldfcn/__magick_read__.cc
+++ b/libinterp/dldfcn/__magick_read__.cc
@@ -467,17 +467,17 @@ use @code{imread}.\n\
     }
   else
     {
       frameidx = indexes.int_vector_value ();
       if (error_state)
         {
           error ("__magick_read__: invalid value for Index/Frame");
         }
-      // Fix indexex from base 1 to base 0, and at the same time, make
+      // Fix indexes from base 1 to base 0, and at the same time, make
       // sure none of the indexes is outside the range of image number.
       const int n = frameidx.nelem ();
       for (int i = 0; i < n; i++)
         {
           frameidx(i)--;
           if (frameidx(i) < 0 || frameidx(i) > nframes - 1)
             {
               error ("imread: index/frames specified are outside the number of images");
@@ -868,17 +868,17 @@ use @code{imwrite}.\n\
     }
 
   // Finally, save the file.
   // If writemode is set to append, read the image first, append to it,
   // and then save it. But even if set to append, make sure anything was
   // read at all.
   const std::string writemode = options.getfield ("writemode")(0).string_value ();
   std::vector<Magick::Image> ini_imvec;
-  if (writemode == "append")
+  if (writemode == "append" && file_stat (filename).exists ())
     {
       read_file (filename, ini_imvec);
       if (error_state)
         {
           return retval;
         }
     }
 
