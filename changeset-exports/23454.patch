# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1493401922 14400
#      Fri Apr 28 13:52:02 2017 -0400
# Node ID 30b6eccd67085dcf0ccdb83361b7bf129cedcd20
# Parent  2eb7dc15f9fab05fef6d3517dc1f937fde827ac7
use builtin-defun-decls.h to ensure declarations of interpreter functions

* error.cc, file-io.cc, strfind.cc, ov-cell.cc, ov-struct.cc,
oct-parse.in.yy: Include builtin-defun-decls.h.  Eliminate local
declarations of interpreter functions.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -29,16 +29,17 @@ along with Octave; see the file COPYING.
 #include <cstring>
 
 #include <iomanip>
 #include <iostream>
 #include <sstream>
 #include <string>
 
 #include "bp-table.h"
+#include "builtin-defun-decls.h"
 #include "call-stack.h"
 #include "defun.h"
 #include "error.h"
 #include "input.h"
 #include "octave.h"
 #include "pager.h"
 #include "ovl.h"
 #include "oct-map.h"
diff --git a/libinterp/corefcn/file-io.cc b/libinterp/corefcn/file-io.cc
--- a/libinterp/corefcn/file-io.cc
+++ b/libinterp/corefcn/file-io.cc
@@ -46,27 +46,28 @@ along with Octave; see the file COPYING.
 #include <stack>
 #include <string>
 #include <vector>
 
 #if defined (HAVE_ZLIB_H)
 #  include <zlib.h>
 #endif
 
-#include "error.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "lo-ieee.h"
 #include "mkostemp-wrapper.h"
 #include "oct-env.h"
 #include "oct-locbuf.h"
 #include "tmpfile-wrapper.h"
 #include "unistd-wrappers.h"
 
+#include "builtin-defun-decls.h"
 #include "defun.h"
+#include "error.h"
 #include "errwarn.h"
 #include "file-io.h"
 #include "load-path.h"
 #include "oct-fstrm.h"
 #include "oct-iostrm.h"
 #include "oct-map.h"
 #include "oct-prcstrm.h"
 #include "oct-stream.h"
diff --git a/libinterp/corefcn/strfind.cc b/libinterp/corefcn/strfind.cc
--- a/libinterp/corefcn/strfind.cc
+++ b/libinterp/corefcn/strfind.cc
@@ -28,20 +28,21 @@ along with Octave; see the file COPYING.
 #include <algorithm>
 #include <deque>
 #include <limits>
 #include <string>
 
 #include "oct-locbuf.h"
 
 #include "Cell.h"
-#include "ov.h"
+#include "builtin-defun-decls.h"
 #include "defun.h"
+#include "errwarn.h"
+#include "ov.h"
 #include "unwind-prot.h"
-#include "errwarn.h"
 #include "utils.h"
 
 // This allows safe indexing with char.
 // In C++, char may be (and often is) signed!
 #define ORD(ch) static_cast<unsigned char>(ch)
 #define TABSIZE (std::numeric_limits<unsigned char>::max () + 1)
 
 // This is the quick search algorithm, as described at
diff --git a/libinterp/octave-value/ov-cell.cc b/libinterp/octave-value/ov-cell.cc
--- a/libinterp/octave-value/ov-cell.cc
+++ b/libinterp/octave-value/ov-cell.cc
@@ -32,16 +32,17 @@ along with Octave; see the file COPYING.
 #include <queue>
 
 #include "Array-util.h"
 #include "byte-swap.h"
 #include "lo-utils.h"
 #include "quit.h"
 #include "oct-locbuf.h"
 
+#include "builtin-defun-decls.h"
 #include "defun.h"
 #include "error.h"
 #include "mxarray.h"
 #include "ov-cell.h"
 #include "ovl.h"
 #include "oct-hdf5.h"
 #include "unwind-prot.h"
 #include "utils.h"
@@ -1269,21 +1270,16 @@ string.
 @end deftypefn */)
 {
   if (args.length () != 1)
     print_usage ();
 
   return ovl (args(0).is_cellstr ());
 }
 
-// Note that since Fcellstr calls Fiscellstr, we need to have
-// Fiscellstr defined first (to provide a declaration) and also we
-// should keep it in the same file (so we don't have to provide a
-// declaration) and so we don't have to use feval to call it.
-
 DEFUN (cellstr, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn {} {@var{cstr} =} cellstr (@var{strmat})
 Create a new cell array object from the elements of the string array
 @var{strmat}.
 
 Each row of @var{strmat} becomes an element of @var{cstr}.  Any trailing
 spaces in a row are deleted before conversion.
diff --git a/libinterp/octave-value/ov-struct.cc b/libinterp/octave-value/ov-struct.cc
--- a/libinterp/octave-value/ov-struct.cc
+++ b/libinterp/octave-value/ov-struct.cc
@@ -22,16 +22,17 @@ along with Octave; see the file COPYING.
 
 #if defined (HAVE_CONFIG_H)
 #  include "config.h"
 #endif
 
 #include <iostream>
 
 #include "Cell.h"
+#include "builtin-defun-decls.h"
 #include "defun.h"
 #include "error.h"
 #include "errwarn.h"
 #include "mxarray.h"
 #include "oct-lvalue.h"
 #include "oct-hdf5.h"
 #include "ov-struct.h"
 #include "unwind-prot.h"
@@ -2033,21 +2034,16 @@ A(1)
 %! assert (struct2cell (s), vals');
 %! assert (fieldnames (s), keys');
 
 %!assert (cell2struct ({1; 2}, {"a"; "b"}), struct ("a", 1, "b", 2))
 
 %!assert (cell2struct ({}, {"f"}, 3), struct ("f", {}))
 */
 
-// FIXME: we should be including builtin-defun-decls.h but doing that
-// currently exposes a problem with dependencies in the the build system.
-extern OCTINTERP_API octave_value_list
-Fcellstr (const octave_value_list& = octave_value_list (), int = 0);
-
 DEFUN (rmfield, args, ,
        doc: /* -*- texinfo -*-
 @deftypefn  {} {@var{sout} =} rmfield (@var{s}, "@var{f}")
 @deftypefnx {} {@var{sout} =} rmfield (@var{s}, @var{f})
 Return a @emph{copy} of the structure (array) @var{s} with the field @var{f}
 removed.
 
 If @var{f} is a cell array of strings or a character array, remove each of
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -48,16 +48,17 @@ along with Octave; see the file COPYING.
 #include "cmd-hist.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "oct-env.h"
 #include "oct-time.h"
 #include "quit.h"
 
 #include "Cell.h"
+#include "builtin-defun-decls.h"
 #include "call-stack.h"
 #include "comment-list.h"
 #include "defaults.h"
 #include "defun.h"
 #include "dirfns.h"
 #include "dynamic-ld.h"
 #include "error.h"
 #include "input.h"
