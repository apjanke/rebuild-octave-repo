# HG changeset patch
# User jwe
# Date 1170887017 0
#      Wed Feb 07 22:23:37 2007 +0000
# Node ID 300fb48803e3c67ca5d154312d036483e3fc8d89
# Parent  bdfb345dab8da57cf1ad643a3b0b26b77c72f9ef
[project @ 2007-02-07 22:23:37 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2007-02-07  John W. Eaton  <jwe@octave.org>
+
+	* plot/sombrero.m: Call box ("off") after mesh.
+
+	* plot/__uiobject_draw_axes__.m: Avoid rgb colors and "set style
+	line default" commands with older versions of gnuplot.
+
+	* plot/close.m: Use get (0, "currentifgure") instead of gcf.
+
 2007-02-06  John W. Eaton  <jwe@octave.org>
 
 	* plot/__uiobject_draw_axes__.m: Set pt to 0 if marker is ".".
 	* sparse/gplot.m: Use line style - instead of 1.
 
 2007-02-05  Rafael Laboissiere  <rafael@debian.org>
 
 	* plot/print.m: Avoid error message from cellidx.
diff --git a/scripts/plot/__uiobject_draw_axes__.m b/scripts/plot/__uiobject_draw_axes__.m
--- a/scripts/plot/__uiobject_draw_axes__.m
+++ b/scripts/plot/__uiobject_draw_axes__.m
@@ -266,17 +266,17 @@ function __uiobject_draw_axes__ (h, plot
 	    if (yautoscale)
 	      ymin = min (ymin, min (ydat));
 	      ymax = max (ymax, max (ydat));
 	      yminp = min (yminp, min (ydat(ydat>0)));
 	    endif
 	    if (zautoscale)
 	      zmin = min (zmin, min (zdat));
 	      zmax = max (zmax, max (zdat));
-	      zminp = min (zminp, min (zdat(ydat>0)));
+	      zminp = min (zminp, min (zdat(zdat>0)));
 	    endif
 	    data{data_idx} = [xdat, ydat, zdat]';
 	    usingclause{data_idx} = "using ($1):($2):($3)";
 	    fputs (plot_stream, "set parametric;\n");
 	    fputs (plot_stream, "unset hidden3d;\n");
 	    fputs (plot_stream, "set style data lines;\n");
 	    fputs (plot_stream, "set surface;\n");
 	    fputs (plot_stream, "unset contour;\n");
@@ -394,19 +394,19 @@ function __uiobject_draw_axes__ (h, plot
 	  endif
 	  if (yautoscale)
 	    ty = ydat(:);
 	    ymin = min (ymin, min (ty));
 	    ymax = max (ymax, max (ty));
 	    yminp = min (yminp, min (ty(ty>0)));
 	  endif
 	  if (zautoscale)
-	    tz = xdat(:);
-	    zmin = min (ymin, min (tz));
-	    zmax = max (ymax, max (tz));
+	    tz = zdat(:);
+	    zmin = min (zmin, min (tz));
+	    zmax = max (zmax, max (tz));
 	    zminp = min (zminp, min (tz(tz>0)));
 	  endif
 	  err = false;
 	  if (isvector (xdat) && isvector (ydat) && ismatrix (zdat))
 	    if (rows (zdat) == length (ydat) && columns (zdat) == length (xdat))
               [xdat, ydat] = meshgrid (xdat, ydat);
 	    else
               err = true;
@@ -660,22 +660,26 @@ function lim = get_axis_limits (min_val,
   endif
 
   lim = [min_val, max_val];
 
 endfunction
 
 function style = do_linestyle_command (obj, idx, plot_stream)
 
-  fprintf (plot_stream, "set style line %d default;\n", idx);
+  have_newer_gnuplot = compare_versions (__gnuplot_version__ (), "4.0", ">");
+
+  if (have_newer_gnuplot)
+    fprintf (plot_stream, "set style line %d default;\n", idx);
+  endif
   fprintf (plot_stream, "set style line %d", idx);
 
   found_style = false;
 
-  if (isfield (obj, "color"))
+  if (isfield (obj, "color") && have_newer_gnuplot)
     color = obj.color;
     if (isnumeric (color))
       fprintf (plot_stream, " linecolor rgb \"#%02x%02x%02x\"",
 	       round (255*color));
     endif
     found_style = true;
   endif
 
@@ -753,15 +757,15 @@ function style = do_linestyle_command (o
   if (isempty (lt))
     if (! isempty (pt))
       style = "points"
     endif
   elseif (! isempty (pt))
     style = "linespoints";
   endif
 
-  if (! found_style)
+  if (have_newer_gnuplot && ! found_style)
     fputs (plot_stream, " default");
   endif
 
   fputs (plot_stream, ";\n");
 
 endfunction
diff --git a/scripts/plot/close.m b/scripts/plot/close.m
--- a/scripts/plot/close.m
+++ b/scripts/plot/close.m
@@ -27,18 +27,22 @@
 
 ## Author: jwe
 
 ## PKG_ADD: mark_as_command close
 
 function retval = close (arg1, arg2)
 
   if (nargin == 0)
-    ## Close current figure.
-    figs = gcf ();
+    ## Close current figure.  Don't use gcf because that will open a new
+    ## plot window if one doesn't exist.
+    figs = get (0, "currentfigure");
+    if (! isempty (figs) && figs == 0)
+      figs = [];
+    endif
   elseif (nargin == 1)
     if (ischar (arg1) && strcmp (arg1, "all"))
       ## Close all figures.
       figs = __uiobject_figures__ ();
     elseif (isfigure (arg1))
       figs = arg1;
     else
       error ("close: expecting argument to be \"all\" or a figure handle");
diff --git a/scripts/plot/sombrero.m b/scripts/plot/sombrero.m
--- a/scripts/plot/sombrero.m
+++ b/scripts/plot/sombrero.m
@@ -39,16 +39,17 @@ function [x, y, z] = sombrero (n)
   if (nargin < 2)
     if (n > 1)
       tx = ty = linspace (-8, 8, n)';
       [xx, yy] = meshgrid (tx, ty);
       r = sqrt (xx .^ 2 + yy .^ 2) + eps;
       tz = sin (r) ./ r;
       if (nargout == 0)
         mesh (tx, ty, tz);
+	box ("off");
       else
 	x = tx;
 	y = ty;
 	z = tz;
       endif
     else
       error ("sombrero: number of grid lines must be greater than 1");
     endif
