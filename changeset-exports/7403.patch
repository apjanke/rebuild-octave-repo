# HG changeset patch
# User jwe
# Date 1200723033 0
#      Sat Jan 19 06:10:33 2008 +0000
# Node ID 135c13496fafcce605b9e556e1731b0871646b2d
# Parent  bd58dafaf10230ff69c58576edebd68396cb4660
[project @ 2008-01-19 06:06:46 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,32 @@
+2008-01-19  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* graphics.h.in (base_properties::beingdeleted,
+	base_properties::is_beingdeleted,
+	base_properties::get_beingdeleted,
+	base_properties::set_beingdeleted):
+	Add beingdeleted property and accessors.
+	* graphics.cc (base_properties::get): Likewise.
+	(gh_manager::free): Set beingdeleted to "on" when freeing an object.
+	* genprops.awk: Skip C++-style comments in property declaration.
+
+	* graphics.h.in (class axes::properties): New properties: alim,
+	alimmode, xminortick, yminortick, zminortick, ambientlightcolor,
+	cameraposition, cameratarget, cameraupvector, cameraviewangle,
+	camerapositionmode, cameratargetmode, cameraupvectormode,
+	cameraviewanglemode, currentpoint, drawmode, fontangle, fontname,
+	fontsize, fontweight, fontunits, gridlinestyle,
+	minorgridlinestyle, linestyleorder, linewidth, plotboxaspectratio,
+	plotboxaspectratiomode, projection, tickdir, tickdirmode,
+	ticklength, tightinset, units, x_viewtransform,
+	x_projectiontransform, x_viewporttransform, x_normrendertransform,
+	x_rendertransform.
+	* genprops.awk: Handle new readonly modifier 'r'.
+
 2008-01-18  Juhani Saastamoinen  <juhani@cs.joensuu.fi>
 
 	* genprops.awk: Avoid using "default" as a variable name.
 
 2008-01-17  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* graphics.h.in (data_property::get_data_limits): Reset min/max values.
 
diff --git a/src/genprops.awk b/src/genprops.awk
--- a/src/genprops.awk
+++ b/src/genprops.awk
@@ -337,18 +337,19 @@ function emit_source ()
 
     ## set method
 
     printf ("void\n%s::properties::set (const caseless_str& name, const octave_value& val)\n{\n",
             class_name) >> filename;
 
     for (i = 1; i <= idx; i++)
     {
-      printf ("  %sif (name.compare (\"%s\"))\n    set_%s (val);\n",
-              (i > 1 ? "else " : ""), name[i], name[i]) >> filename;
+      if (! readonly[i])
+        printf ("  %sif (name.compare (\"%s\"))\n    set_%s (val);\n",
+                (i > 1 ? "else " : ""), name[i], name[i]) >> filename;
     }
 
     printf ("  else\n    base_properties::set (name, val);\n}\n\n") >> filename;
 
     ## get "all" method
 
     printf ("octave_value\n%s::properties::get (bool all) const\n{\n", class_name) >> filename;
     printf ("  Octave_map m = base_properties::get (all).map_value ();\n\n") >> filename;
@@ -434,17 +435,17 @@ BEGIN {
   emit_source();
   gather = 0;
   next;
 }
 
 {
   if (gather)
   {
-    if (NF < 2)
+    if (NF < 2 || /^[ \t]*\/\//)
       next;
 
     idx++;
 
     field = 1;
 
     if ($field == "mutable")
     {
@@ -454,17 +455,18 @@ BEGIN {
     else
       mutable[idx] = 0;
 
     type[idx] = $(field++);
     name[idx] = $(field++);
 
     limits[idx] = 0;
     mode[idx] = 0;
-	hidden[idx] = 0;
+    hidden[idx] = 0;
+    readonly[idx] = 0;
     emit_get[idx] = "definition";
     emit_set[idx] = "definition";
     defval[idx] = "";
 ##    if (type[idx] == "octave_value")
 ##      emit_ov_set[idx] = "";
 ##    else
 ##      emit_ov_set[idx] = "definition";
 
@@ -495,19 +497,23 @@ BEGIN {
         if (index (quals, "s"))
           emit_set[idx] = "";
 
         ## There is a custom extern definition for the set function,
         ## but we still emit the declaration.
         if (index (quals, "S"))
           emit_set[idx] = "declaration";
         
-		## The property is hidden
-        if (index (quals, "h"))
-          hidden[idx] = 1;
+	## The property is hidden
+	if (index (quals, "h"))
+	  hidden[idx] = 1;
+
+	## The property is read-only
+	if (index (quals, "r"))
+	  readonly[idx] = 1;
 
 ##        ## emmit an asignment set function
 ##        if (index (quals, "a"))
 ##          emit_ov_set[idx] = "assignment";
 ##
 ##        if (type[idx] != "octave_value")
 ##        {
 ##          ## The 'o' and 'O' qualifiers are only useful when the
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -677,17 +677,18 @@ gh_manager::do_free (const graphics_hand
   if (h.ok ())
     {
       if (h.value () != 0)
 	{
 	  iterator p = handle_map.find (h);
 
 	  if (p != handle_map.end ())
 	    {
-              p->second.get_properties ().execute_deletefcn ();
+	      p->second.get_properties ().set_beingdeleted (true);
+	      p->second.get_properties ().execute_deletefcn ();
 
 	      handle_map.erase (p);
 
 	      if (h.value () < 0)
 		handle_free_list.insert (h);
 	    }
 	  else
 	    error ("graphics_handle::free: invalid object %g", h.value ());
@@ -935,16 +936,18 @@ base_properties::get (const caseless_str
   else if (name.compare ("selectionhighlight"))
     retval = get_selectionhighlight ();
   else if (name.compare ("uicontextmenu"))
     retval = get_uicontextmenu ();
   else if (name.compare ("userdata"))
     retval = get_userdata ();
   else if (name.compare ("visible"))
     retval = get_visible ();
+  else if (name.compare ("beingdeleted"))
+    retval = get_beingdeleted ();
   else
   {
     std::map<caseless_str, property>::const_iterator it = all_props.find (name);
 
     if (it != all_props.end ())
       retval = it->second.get ();
     else
       error ("get: unknown property \"%s\"", name.c_str ());
@@ -977,16 +980,17 @@ base_properties::get (bool all) const
   m.assign ("handlevisibility", get_handlevisibility ());
   m.assign ("hittest", get_hittest ());
   m.assign ("interruptible", get_interruptible ());
   m.assign ("selected", get_selected ());
   m.assign ("selectionhighlight", get_selectionhighlight ());
   m.assign ("uicontextmenu", get_uicontextmenu ());
   m.assign ("userdata", get_userdata ());
   m.assign ("visible", get_visible ());
+  m.assign ("beingdeleted", get_beingdeleted ());
 
   return m;
 }
 
 void
 base_properties::set (const caseless_str& name, const octave_value& val)
 {
   if (name.compare ("tag"))
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -976,17 +976,18 @@ public:
       deletefcn ("deletefcn", mh, Matrix ()),
       handlevisibility ("handlevisibility", mh, "{on}|callback|off"),
       hittest ("hittest", mh, true),
       interruptible ("interruptible", mh, true),
       selected ("selected", mh, false),
       selectionhighlight ("selectionhighlight", mh, true),
       uicontextmenu ("uicontextmenu", mh, graphics_handle ()),
       userdata ("userdata", mh, Matrix ()),
-      visible ("visible", mh, true)
+      visible ("visible", mh, true),
+	  beingdeleted ("beingdeleted", mh, false)
     { }
 
   virtual ~base_properties (void) { }
 
   virtual std::string graphics_object_name (void) const { return "unknonwn"; }
 
   void mark_modified (void);
 
@@ -1049,16 +1050,19 @@ public:
   std::string get_selectionhighlight (void) const { return selectionhighlight.current_value (); }
   
   octave_value get_uicontextmenu (void) const { return uicontextmenu.get (); }
 
   octave_value get_userdata (void) const { return userdata.get (); }
   
   std::string get_visible (void) const { return visible.current_value (); }
 
+  bool is_beingdeleted (void) const { return beingdeleted.is_on (); }
+  std::string get_beingdeleted (void) const { return beingdeleted.current_value (); }
+
   virtual void remove_child (const graphics_handle& h);
 
   virtual void adopt (const graphics_handle& h)
   {
     octave_idx_type n = children.numel ();
     children.resize (1, n+1);
     children(n) = h.value ();
   }
@@ -1179,16 +1183,25 @@ public:
   {
     if (! error_state)
       {
         visible = val;
         mark_modified ();
       }
   }
 
+  void set_beingdeleted (const octave_value& val)
+  {
+    if (! error_state)
+      {
+	beingdeleted = val;
+	mark_modified ();
+      }
+  }
+
 
 
   void reparent (const graphics_handle& new_parent) { parent = new_parent; }
 
   // Update data limits for AXIS_TYPE (xdata, ydata, etc.) in the parent
   // axes object.
 
   virtual void update_axis_limits (const std::string& axis_type) const;
@@ -1245,36 +1258,40 @@ public:
 
   virtual data_property get_cdata_property (void) const
   {
     error ("get: invalid property \"cdata\"");
     return data_property ();
   }
 
 protected:
-  string_property tag;
-  string_property type;
-  bool_property __modified__;
-  graphics_handle __myhandle__;
-  handle_property parent;
+  // properties common to all objects
+  bool_property beingdeleted;
+  radio_property busyaction;
+  callback_property buttondownfcn;
   // FIXME: use a property class for children
   Matrix children;
-  radio_property busyaction;
-  callback_property buttondownfcn;
   bool_property clipping;
   callback_property createfcn;
   callback_property deletefcn;
   radio_property handlevisibility;
   bool_property hittest;
   bool_property interruptible;
+  handle_property parent;
   bool_property selected;
   bool_property selectionhighlight;
-  handle_property uicontextmenu;
+  string_property tag;
+  string_property type;
   any_property userdata;
   bool_property visible;
+  // additional (octave-specific) properties
+  bool_property __modified__;
+  graphics_handle __myhandle__;
+  // FIXME: should this really be here?
+  handle_property uicontextmenu;
 
 protected:
   std::map<caseless_str, property> all_props;
 
 protected:
   void insert_static_property (const std::string& name, base_property& p)
     { insert_property (name, property (&p, true)); }
   
@@ -1848,35 +1865,41 @@ public:
       array_property colororder , default_colororder ()
       array_property dataaspectratio m , Matrix (1, 3, 1.0)
       radio_property dataaspectratiomode , "{auto}|manual"
       radio_property layer , "{bottom}|top"
       array_property xlim m , default_lim ()
       array_property ylim m , default_lim ()
       array_property zlim m , default_lim ()
       array_property clim m , default_lim ()
+      array_property alim m , default_lim ()
       radio_property xlimmode al , "{auto}|manual"
       radio_property ylimmode al , "{auto}|manual"
       radio_property zlimmode al , "{auto}|manual"
       radio_property climmode al , "{auto}|manual"
+      radio_property alimmode    , "{auto}|manual"
       mutable handle_property xlabel GSO , graphics_handle ()
       mutable handle_property ylabel GSO , graphics_handle ()
       mutable handle_property zlabel GSO , graphics_handle ()
       bool_property xgrid , "off"
       bool_property ygrid , "off"
       bool_property zgrid , "off"
       bool_property xminorgrid , "off"
       bool_property yminorgrid , "off"
       bool_property zminorgrid , "off"
       array_property xtick m , Matrix ()
       array_property ytick m , Matrix ()
       array_property ztick m , Matrix ()
       radio_property xtickmode , "{auto}|manual"
       radio_property ytickmode , "{auto}|manual"
       radio_property ztickmode , "{auto}|manual"
+      bool_property xminortick , "off"
+      bool_property yminortick , "off"
+      bool_property zminortick , "off"
+      // FIXME: should be kind of string array
       any_property xticklabel m , ""
       any_property yticklabel m , ""
       any_property zticklabel m , ""
       radio_property xticklabelmode , "{auto}|manual"
       radio_property yticklabelmode , "{auto}|manual"
       radio_property zticklabelmode , "{auto}|manual"
       color_property color , color_property (color_values (1, 1, 1), radio_values ("none"))
       color_property xcolor , color_values (0, 0, 0)
@@ -1890,37 +1913,83 @@ public:
       radio_property zdir , "{normal}|reverse"
       radio_property yaxislocation , "{left}|right|zero"
       radio_property xaxislocation , "{bottom}|top|zero"
       array_property view , Matrix ()
       radio_property nextplot , "add|replace_children|{replace}"
       array_property outerposition , Matrix ()
       radio_property activepositionproperty , "{outerposition}|position"
       radio_property __colorbar__ h , "{none}|north|south|east|west|northoutside|southoutside|eastoutside|westoutside"
+      color_property ambientlightcolor , color_values (1, 1, 1)
+      array_property cameraposition m , Matrix (1, 3, 0.0)
+      array_property cameratarget m , Matrix (1, 3, 0.0)
+      array_property cameraupvector m , Matrix ()
+      double_property cameraviewangle m , 10.0
+      radio_property camerapositionmode , "{auto}|manual"
+      radio_property cameratargetmode , "{auto}|manual"
+      radio_property cameraupvectormode , "{auto}|manual"
+      radio_property cameraviewanglemode , "{auto}|manual"
+      array_property currentpoint , Matrix (2, 3, 0.0)
+      radio_property drawmode , "{normal}|fast"
+      radio_property fontangle , "{normal}|italic|oblique"
+      string_property fontname , "Helvetica"
+      double_property fontsize , 12
+      radio_property fontunits , "{points}|normalized|inches|centimeters|pixels"
+      radio_property fontweight , "{normal}|light|demi|bold"
+      radio_property gridlinestyle , "{-}|--|:|-.|none"
+      // FIXME: should be kind of string array
+      string_property linestyleorder , "-"
+      double_property linewidth , 0.5
+      radio_property minorgridlinestyle , "{-}|--|:|-.|none"
+      array_property plotboxaspectratio m , Matrix (1, 3, 1.0)
+      radio_property plotboxaspectratiomode , "{auto}|manual"
+      radio_property projection , "{orthographic}|perpective"
+      radio_property tickdir m , "{in}|out"
+      radio_property tickdirmode , "{auto}|manual"
+      array_property ticklength , Matrix (1, 2, 0.1)
+      array_property tightinset r , Matrix (1, 4, 0.0)
+      // FIXME: uicontextmenu should be moved here
+      radio_property units , "{normalized}|inches|centimeters|points|pixels|characters"
+      // hidden properties for transformation computation
+      array_property x_viewtransform h , Matrix (4, 4, 0.0)
+      array_property x_projectiontransform h , Matrix (4, 4, 0.0)
+      array_property x_viewporttransform h , Matrix (4, 4, 0.0)
+      array_property x_normrendertransform h , Matrix (4, 4, 0.0)
+      array_property x_rendertransform h , Matrix (4, 4, 0.0)
    END_PROPERTIES
 
   protected:
     void init (void)
       {
         position.add_constraint (dim_vector (1, 4));
-		position.add_constraint (dim_vector (0, 0));
+	position.add_constraint (dim_vector (0, 0));
         outerposition.add_constraint (dim_vector (1, 4));
         colororder.add_constraint (dim_vector (-1, 3));
         dataaspectratio.add_constraint (dim_vector (1, 3));
+        plotboxaspectratio.add_constraint (dim_vector (1, 3));
         xlim.add_constraint (dim_vector (1, 2));
         ylim.add_constraint (dim_vector (1, 2));
         zlim.add_constraint (dim_vector (1, 2));
         clim.add_constraint (dim_vector (1, 2));
+	alim.add_constraint (dim_vector (1, 2));
         xtick.add_constraint (dim_vector (1, -1));
         ytick.add_constraint (dim_vector (1, -1));
         ztick.add_constraint (dim_vector (1, -1));
         Matrix vw (1, 2, 0);
         vw(1) = 90;
         view = vw;
         view.add_constraint (dim_vector (1, 2));
+	cameraposition.add_constraint (dim_vector (1, 3));
+	Matrix upv (1, 3, 0.0);
+	upv(2) = 1.0;
+	cameraupvector = upv;
+	cameraupvector.add_constraint (dim_vector (1, 3));
+	currentpoint.add_constraint (dim_vector (2, 3));
+	ticklength.add_constraint (dim_vector (1, 2));
+	tightinset.add_constraint (dim_vector (1, 4));
       }
   };
 
 private:
   properties xproperties;
 
 public:
   axes (const graphics_handle& mh, const graphics_handle& p)
@@ -2158,17 +2227,17 @@ class OCTINTERP_API patch : public base_
 public:
   class properties : public base_properties
   {
   public:
     // See the genprops.awk script for an explanation of the
     // properties declarations.
 
     BEGIN_PROPERTIES(patch)
-            data_property xdata l , Matrix ()
+      data_property xdata l , Matrix ()
       data_property ydata l , Matrix ()
       data_property zdata l , Matrix ()
       data_property cdata l , Matrix ()
       radio_property cdatamapping , "{scaled}|direct"
       array_property faces , Matrix ()
       data_property facevertexalphadata , Matrix ()
       data_property facevertexcdata , Matrix ()
       array_property vertices , Matrix ()
