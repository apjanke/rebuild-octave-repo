# HG changeset patch
# User Jos√© Vallet <jose.vallet@aalto.fi>
# Date 1391441132 -7200
#      Mon Feb 03 17:25:32 2014 +0200
# Node ID a7dbc4fc373242cc755078105fbd47c3e93fbc6c
# Parent  7751bd56d0bedbad10f7c5c2f784289d45760a9e
fminunc.m: Correctly calculate gradient and hessian even when fminunc fails (bug #40101)

* fminunc.m: Add routine to calculate grad and hess if requested and fminunc
has finished with info value of -1, 2, or 3.

diff --git a/scripts/optimization/fminunc.m b/scripts/optimization/fminunc.m
--- a/scripts/optimization/fminunc.m
+++ b/scripts/optimization/fminunc.m
@@ -335,16 +335,41 @@ function [x, fval, info, output, grad, h
         elseif (actred < tolf)
           info = 3;
         endif
       endif
 
     endwhile
   endwhile
 
+  ## When info != 1, recalculate the gradient and hessian using the final x.
+  if (nargout > 4 && (info == -1 || info == 2 || info == 3))
+    grad0 = grad;  
+    if (has_grad)
+      [fval, grad] = fcn (reshape (x, xsiz));
+      grad = grad(:);
+    else
+      grad = __fdjac__ (fcn, reshape (x, xsiz), fval, typicalx, cdif)(:);
+    endif
+    
+    if (nargout > 5)
+      ## Use the damped BFGS formula.
+      y = grad - grad0;
+      sBs = sumsq (w);
+      Bs = hesr' * w;
+      sy = y' * s;
+      theta = 0.8 / max (1 - sy / sBs, 0.8);
+      r = theta * y + (1-theta) * Bs;
+      hesr = cholupdate (hesr, r / sqrt (s' * r), "+");
+      hesr = cholupdate (hesr, Bs / sqrt (sBs), "-");
+    endif
+    ## Return the gradient in the same shape as x
+    grad = reshape (grad, xsiz);
+  endif
+
   ## Restore original shapes.
   x = reshape (x, xsiz);
 
   output.iterations = niter;
   output.successful = nsuciter;
   output.funcCount = nfev;
 
   if (nargout > 5)
