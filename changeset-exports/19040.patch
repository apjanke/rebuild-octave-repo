# HG changeset patch
# User Rik <rik@octave.org>
# Date 1408661838 25200
#      Thu Aug 21 15:57:18 2014 -0700
# Node ID 0850b521261940bb6a207e5a3bf72a1765bf9749
# Parent  f45b60897316287d0704dfa1a615bc0f6c6fb326
doc: Add @nospell macro around proper names in documentation.

* aspell-octave.en.pws: Remove proper names from Octave's custom dictionary.

* doc/interpreter/audio.txi, doc/interpreter/diagperm.txi,
doc/interpreter/diffeq.txi, doc/interpreter/emacs.txi,
doc/interpreter/func.txi, doc/interpreter/geometry.txi,
doc/interpreter/intro.txi, doc/interpreter/linalg.txi,
doc/interpreter/numbers.txi, doc/interpreter/preface.txi,
doc/interpreter/quad.txi, doc/interpreter/sparse.txi,
libinterp/corefcn/colloc.cc, libinterp/corefcn/ellipj.cc,
libinterp/corefcn/gammainc.cc, libinterp/corefcn/hess.cc,
libinterp/corefcn/quadcc.cc, libinterp/corefcn/rand.cc,
libinterp/corefcn/sqrtm.cc, libinterp/dldfcn/ccolamd.cc,
libinterp/dldfcn/colamd.cc, libinterp/dldfcn/dmperm.cc,
libinterp/dldfcn/symrcm.cc, scripts/general/quadgk.m, scripts/general/quadl.m,
scripts/linear-algebra/commutation_matrix.m, scripts/linear-algebra/condest.m,
scripts/linear-algebra/duplication_matrix.m, scripts/linear-algebra/expm.m,
scripts/linear-algebra/housh.m, scripts/linear-algebra/krylov.m,
scripts/linear-algebra/onenormest.m, scripts/linear-algebra/qzhess.m,
scripts/optimization/fminsearch.m, scripts/optimization/glpk.m,
scripts/signal/arch_fit.m, scripts/signal/bartlett.m,
scripts/signal/blackman.m, scripts/signal/diffpara.m,
scripts/signal/durbinlevinson.m, scripts/signal/hamming.m,
scripts/signal/hanning.m, scripts/sparse/eigs.m, scripts/sparse/pcg.m,
scripts/sparse/pcr.m, scripts/specfun/ellipke.m,
scripts/special-matrix/gallery.m, scripts/special-matrix/invhilb.m,
scripts/statistics/base/quantile.m,
scripts/statistics/tests/kruskal_wallis_test.m,
scripts/statistics/tests/manova.m, scripts/statistics/tests/mcnemar_test.m:
Add @nospell macro around proper names in documentation.

diff --git a/doc/interpreter/audio.txi b/doc/interpreter/audio.txi
--- a/doc/interpreter/audio.txi
+++ b/doc/interpreter/audio.txi
@@ -27,18 +27,18 @@ integer number (usually 8 or 16 bits), a
 of such samples.  It can be characterized by three parameters: the
 sampling rate (measured in samples per second or Hz, e.g., 8000 or
 44100), the number of bits per sample (e.g., 8 or 16), and the number of
 channels (1 for mono, 2 for stereo, etc.).
 
 There are many different formats for representing such data.  Currently,
 only the two most popular, @emph{linear encoding} and @emph{mu-law
 encoding}, are supported by Octave.  There is an excellent FAQ on audio
-formats by Guido van Rossum @email{guido@@cwi.nl} which can be found at any
-FAQ ftp site, in particular in the directory
+formats by @nospell{Guido van Rossum} @email{guido@@cwi.nl} which can be
+found at any FAQ ftp site, in particular in the directory
 @file{/pub/usenet/news.answers/audio-fmts} of the archive site
 @code{rtfm.mit.edu}.
 
 Octave simply treats audio data as vectors of samples (non-mono data are
 not supported yet).  It is assumed that audio files using linear
 encoding have one of the extensions @file{lin} or @file{raw}, and that
 files holding data in mu-law encoding end in @file{au}, @file{mu}, or
 @file{snd}.
diff --git a/doc/interpreter/diagperm.txi b/doc/interpreter/diagperm.txi
--- a/doc/interpreter/diagperm.txi
+++ b/doc/interpreter/diagperm.txi
@@ -457,17 +457,18 @@ permutation, given by a permutation vect
 in earlier versions of Octave, but slowly.
 
 @example
   det (eye (length (p))(p, :))
 @end example
 
 @noindent
 Finally, here's how to solve a linear system @code{A*x = b}
-with Tikhonov regularization (ridge regression) using SVD (a skeleton only):
+with @nospell{Tikhonov} regularization (ridge regression) using SVD (a skeleton
+only):
 
 @example
 @group
   m = rows (A); n = columns (A);
   [U, S, V] = svd (A);
   ## determine the regularization factor alpha
   ## alpha = @dots{}
   ## transform to orthogonal basis
diff --git a/doc/interpreter/diffeq.txi b/doc/interpreter/diffeq.txi
--- a/doc/interpreter/diffeq.txi
+++ b/doc/interpreter/diffeq.txi
@@ -49,17 +49,17 @@ dx
 -- = f (x, t)
 dt
 @end group
 @end example
 
 @end ifnottex
 
 @noindent
-using Hindmarsh's ODE solver @sc{lsode}.
+using @nospell{Hindmarsh's} ODE solver @sc{lsode}.
 
 
 
 @DOCSTRING(lsode)
 
 @DOCSTRING(lsode_options)
 
 Here is an example of solving a set of three differential equations using
@@ -101,19 +101,20 @@ A more efficient set of output points mi
 
 @example
 @group
 t = [0, logspace(-1, log10(303), 150), \
         logspace(log10(304), log10(500), 150)];
 @end group
 @end example
 
-See Alan C. Hindmarsh, @cite{ODEPACK, A Systematized Collection of ODE
-Solvers}, in Scientific Computing, R. S. Stepleman, editor, (1983) for
-more information about the inner workings of @code{lsode}.
+See @nospell{Alan C. Hindmarsh},
+@cite{ODEPACK, A Systematized Collection of ODE Solvers},
+in Scientific Computing, @nospell{R. S. Stepleman}, editor, (1983)
+for more information about the inner workings of @code{lsode}.
 
 An m-file for the differential equation used above is included with the
 Octave distribution in the examples directory under the name
 @file{oregonator.m}.
 
 @node Differential-Algebraic Equations
 @section Differential-Algebraic Equations
 
@@ -134,18 +135,18 @@ 0 = f (x-dot, x, t),    x(t=0) = x_0, x-
 @noindent
 where
 @tex
 $\dot{x} = {dx \over dt}$
 @end tex
 @ifnottex
 @math{x-dot}
 @end ifnottex
-is the derivative of @math{x}.  The equation is solved using Petzold's
-DAE solver @sc{daspk}.
+is the derivative of @math{x}.  The equation is solved using
+@nospell{Petzold's} DAE solver @sc{daspk}.
 
 @DOCSTRING(daspk)
 
 @DOCSTRING(daspk_options)
 
 Octave also includes @sc{dassl}, an earlier version of @sc{daspk},
 and @sc{dasrt}, which can be used to solve DAEs with constraints
 (stopping conditions).
@@ -153,11 +154,11 @@ and @sc{dasrt}, which can be used to sol
 @DOCSTRING(dassl)
 
 @DOCSTRING(dassl_options)
 
 @DOCSTRING(dasrt)
 
 @DOCSTRING(dasrt_options)
 
-See K. E. Brenan, et al., @cite{Numerical Solution of Initial-Value
+See @nospell{K. E. Brenan}, et al., @cite{Numerical Solution of Initial-Value
 Problems in Differential-Algebraic Equations}, North-Holland (1989) for
 more information about the implementation of @sc{dassl}.
diff --git a/doc/interpreter/doccheck/aspell-octave.en.pws b/doc/interpreter/doccheck/aspell-octave.en.pws
--- a/doc/interpreter/doccheck/aspell-octave.en.pws
+++ b/doc/interpreter/doccheck/aspell-octave.en.pws
@@ -1,39 +1,35 @@
 personal_ws-1.1 en 1
-Abramowitz
 accumarray
 Acknowledgements
 acknowledgements
 ACM
 adams
 Affero
 afterwards
-Ahalt
 aifm
 AIX
 al
-Alamos
 aleph
 alnum
 alphanum
 amd
 ANOVA
 anova
 Anymap
 API
 APIs
 appdata
 approximant
 arg
 args
 ARMA
 arpack
 ascii
-Ashok
 ast
 async
 atan
 Attr
 AutoCAD
 Autoconf
 autocorrelations
 autocovariances
@@ -51,27 +47,25 @@ AWK
 awt
 backend
 Backends
 backends
 backtrace
 bartlett
 BaseValue
 basevalue
-Bateman
 BDF
 bdf
 betacdf
 betainv
 betaln
 betapdf
 betarnd
 BFGS
 bigtriangledown
-Bilbert
 bincoeff
 binocdf
 binoinv
 binopdf
 binornd
 Biomathematics
 bitmapped
 bitmax
@@ -86,19 +80,17 @@ boolMatrix
 boxerrorbars
 boxoff
 boxon
 boxxyerrorbars
 bracketx
 brackety
 braindead
 breakpoint
-Brenan
 broadcastable
-Brockwell
 BSX
 builtin
 builtins
 ButtonDownFcn
 BV
 bz
 BZ
 bzip
@@ -116,33 +108,31 @@ cdf
 CDFs
 cdot
 ceil
 cellstr
 ChangeLog
 changelogs
 changeset
 changesets
-Chaves
 chdir
 Chebyshev
 chisq
 chisquare
 chol
 Cholesky
 cholmod
 chromaticity
 chrominance
 cindex
 circ
 circshift
 circum
 classpath
 classpaths
-Clenshaw
 CLI
 clim
 climmode
 cloglog
 closerequestfcn
 clubsuit
 CMatrix
 cmd
@@ -164,17 +154,16 @@ Comint
 Commandline
 commentstyle
 ComplexEqn
 cond
 condest
 conformant
 cong
 const
-constuctors
 contextless
 contourc
 convhull
 Corel
 CorelDraw
 corrcoef
 cosecant
 courseware
@@ -191,17 +180,16 @@ cummax
 cummin
 cumprod
 cumsum
 cURL
 CurrentAxes
 CurrentFigure
 CurrentObject
 currentpoint
-Cuthill
 cxsparse
 Cygwin
 DAE
 DAEs
 daspk
 dasrt
 dassl
 dataset
@@ -219,66 +207,58 @@ deconv
 deftypefn
 Delaunay
 delaunay
 delaunayn
 DeleteFcn
 delim
 deltaX
 demi
-Demmel
 DeskJet
 det
 diag
 diamondsuit
 dir
 disp
 DisplayName
 DisplayNames
 displayrange
 dMatrix
 dmperm
-Dobkin
 docstring
 docstrings
 dOmega
 doNotSpecify
 dotall
 dotexceptnewline
 Downarrow
 downarrow
 downdate
 dpi
-Driebeck
 dt
 Dt
-Dulmage
-Durbin
 dx
 dy
 EastOutside
 edgecolor
 Ei
 EIDORS
 eigenpairs
 eigenvector
 eigenvectors
 eigs
-Ekerdt
 elementwise
-Elfers
 elseif
 emacs
 emptyvalue
 endfunction
 endian
 Endian
 endif
 endofline
-Engle's
 eof
 EOF
 EOLs
 EOS
 eps
 eq
 equidistributed
 equispaced
@@ -288,17 +268,16 @@ erfi
 errno
 Errorbar
 errorbar
 Errorbars
 errorbars
 errordlg
 ErrorHandler
 ESC
-Esmond
 et
 etree
 etreeplot
 eval
 Executables
 Exif
 exitflag
 expcdf
@@ -312,17 +291,16 @@ fcdf
 femmodel
 FFF
 FFT
 fft
 fftn
 fftpack
 FFTs
 fftw
-Fiedler
 fieldname
 fieldnames
 filename
 filenames
 Filesystem
 FinDiffType
 finv
 FIRfilter
@@ -331,17 +309,16 @@ FlashPix
 FLTK
 fltk
 fminunc
 fontconfig
 fontname
 forall
 foregroundcolor
 formfeed
-Forsythe
 Fortran
 fpdf
 fprintf
 FreeBSD
 freespacing
 FreeType
 freetype
 frnd
@@ -351,17 +328,16 @@ Fs
 FSF
 fullpath
 fullpathext
 FunValCheck
 gamcdf
 gaminv
 gampdf
 gamrnd
-Gautschi
 gca
 gcbo
 GCC
 gcd
 ge
 GECOS
 genvarname
 geocdf
@@ -380,96 +356,82 @@ GIF
 glibc
 globbing
 glpk
 GLS
 gnulib
 gnuplot
 Gnuplot
 gnuplot's
-Golub
-Gonnet
 goto
 Goto
 gotos
 gperf
 GPL
 GPLK
 gplot
 grabdemo
 GradObj
 GraphicsAlphaBits
 GraphicsMagick
 Graymap
 grayscale
-Graz
 griddata
 gswin
 GUIs
 gunzipped
 gz
 gzip
 gzipped
-Hackbusch
 Hadamard
-Haddad
 HandleVisibility
 Hankel
 hanning
 Hanning
 hardcode
 hardcoding
-Hauberg
 HDF
 hdf
 headerlines
 heartsuit
 helpdlg
 Helvetica
 Hermitian
 Hessenberg
 heteroscedascity
 hggroup
 hggroups
 hh
 HH
-Higham
-Hindmarsh
-Hindmarsh's
 histc
-Hodel
 holomorphic
 Horner's
 horzcat
 hostname
 hotelling
 Hotelling's
 HSV
 html
-Hudak
-Huhdanpaa
 hygecdf
 hygeinv
 hygepdf
 hygernd
-Hyndman
 Hypergeometric
 hypergeometric
 IEC
 ieee
 IEEE
 ifelse
 ifft
 ifftn
 ignorecase
 ij
 Im
 imag
 ImageMagick
-Imenu
 Indices
 indices
 infty
 init
 InitialValue
 inline
 Inline
 inpolygon
@@ -505,53 +467,44 @@ javamem
 jbig
 JDK
 JIT
 jpeg
 JPEG
 jpg
 jvm
 JVM's
-Kac
-Kahan
 kendall
 keybindings
 keypress
 keypressfcn
 Kolmogorov
 kolmogorov
 Konrod
-Krishnamurthy
 kron
 kruskal
-Kruskal
 Krylov
 kurtosis
 LabelSpacing
 langle
 Lanzcos
 lapack
 laplace
-Larimore
 LaserJet
-Lauchli
 lceil
 ldiv
 ldivide
 ldots
 le
 leaveInPlace
 Leftarrow
 leftarrow
 Leftrightarrow
 leftrightarrow
-Lehmer
-Lehoucq
 leq
-Levinson
 LF
 lfloor
 li
 libcurl
 liblapack
 liboctave
 liboctinterp
 Libtool
@@ -563,104 +516,91 @@ linespec
 linespoints
 linestyle
 linewidth
 linkprop
 listdlg
 ListSize
 ListString
 literalspacing
-Liu
 LLVM
 LM
 lm
 loadpath
 Lobatto
 logit
 logncdf
 logninv
 lognormal
 lognpdf
 lognrnd
 lookup
 Lookup
 lookups
-Los
-Lotkin
 Lovato
 lpx
 lr
 lsode
 lt
 lu
 Lua
 luinc
 lvalue
 lvl
 lx
 ly
 lz
 lzma
 lzw
-Magnus
 Mahalanobis
 makefile
 makefiles
 makeinfo
 Mandriva
 MANOVA
 manova
 markeredgecolor
 markerfacecolor
 markersize
 markerstyle
-Marsaglia
-Maschhoff
 matchcase
 matlab
-Matsumoto
 MaxFunEvals
 maxima
 MaxIntervalCount
 MaxIter
 mcnemar
-McNemar's
 meansq
-Mendelsohn
 menubars
 Mersenne
 meshgrid
 meshgridded
 metafile
 Metafile
 metafiles
 Metafont
 mex
 mget
-Michelsen
 Microsystems
 MinGW
 minima
 Minimizers
 Minitab
 minval
 MIP
 miscompiled
-Misra
 mkdir
 mkoctfile
 mldivide
 mmd
 MMM
 mmm
 mmmm
 mmmyy
 mmmyyyy
-Moler
-Montanet
 mpoles
 mpower
 mput
 mrdivide
 msgbox
 MSYS
 mtimes
 Multi
@@ -683,27 +623,23 @@ nbincdf
 nbininv
 nbinpdf
 nbinrnd
 ncols
 nd
 ndgrid
 ndims
 ne
-Nelder
 neq
-Neudecker
 Neumann
 NeXT
 NextPlot
 nfev
 nfft
-Ng
 ni
-Nishimura
 NLP
 nnls
 nnz
 nocompute
 nodither
 nolabel
 noncommercially
 nonconformant
@@ -736,34 +672,32 @@ octaverc
 ODEPACK
 OKString
 OLS
 onCleanup
 online
 OpenGL
 OpenJDK
 oplus
-Oppenheim
 Ord
 oregonator
 Orthogonalize
 oslash
 otimes
 outerposition
 OutputFcn
 outputfcn
 overridable
 paperorientation
 paperposition
 PaperPosition
 papersize
 paperunits
 PaperUnits
 parseparams
-Parter
 pbm
 PBM
 PBMplus
 pc
 pcg
 PCG
 pchip
 pcr
@@ -772,17 +706,16 @@ PCRE
 PCX
 pcx
 pdf
 PDF
 pearson
 pentadiagonal
 periodogram
 perp
-Petzold's
 PGF
 pgm
 PGMRES
 PHP
 pict
 pinv
 Pixmap
 png
@@ -797,17 +730,16 @@ polyderiv
 polyeig
 polyfit
 polyval
 pos
 POSDEF
 POSIX
 postorder
 PostScript
-Pothen
 powerset
 pre
 preconditioner
 premultiplied
 Prepend
 prepended
 presolver
 printf
@@ -842,30 +774,27 @@ quadv
 quantile
 Quantile
 quantiles
 questdlg
 Quickhull
 qz
 QZ
 radices
-Rajamanickam
 randn
 randperm
 rangle
 ranlib
 ras
-Rawlings
 rceil
 rdivide
 Readline
 readline
 RECT
 recursing
-Redheffer
 reentrant
 regex
 regressor
 Reindent
 relicensing
 ren
 renderer
 repelems
@@ -890,52 +819,46 @@ Rightarrow
 rightarrow
 rle
 rline
 rmdir
 RMS
 rnd
 roffset
 Rosser
-Rossum
 rpath
 RPMs
 runtime
 sa
-Saad
-Sandia
 SAS
-Schafer
 schar
 Schur
 SCO
 screenful
 se
 sed
 seealso
 SelectionMode
 semidefinite
 Sep
-Shampine
 shiftdim
 si
 signum
 SIGNUM
 sim
 SIMAX
 SIMD
 simplechol
 simplecholperm
 simplematrix
 simplices
 sinetone
 sm
 smirnov
 Smirnov
-Sorensen
 SouthOutside
 sp
 spadesuit
 spalloc
 SPARSKIT
 spaugment
 spchol
 spcholperm
@@ -953,26 +876,22 @@ sprandn
 sprandsym
 sprank
 SPSS
 spstats
 sqrt
 sqrtm
 sr
 ss
-Stadlober
 stairstep
-Stallman
 startup
 Startup
 statinfo
 stdnormal
 stdout
-Stegun
-Stepleman
 stepsize
 STFT
 STL
 stochastically
 strcmp
 stringanchors
 strncmp
 strncmpi
@@ -1028,36 +947,32 @@ SVG
 svg
 SwitzerlandLight
 Sym
 sym
 SYMAMD
 symamd
 symbfact
 symrcm
-Szego
 tcdf
 Tcv
 terminal's
 tex
 texinfo
 Texinfo
 TextAlphaBits
 textfield
 textread
 textscan
 th
 ths
 tif
-Tikhonov
 TikZ
 Timestamp
 tinv
-Tisseur
-Tisseur's
 tmp
 Toeplitz
 tokenExtents
 TolF
 TolFun
 TolX
 toolkits
 Toolkits
@@ -1071,17 +986,16 @@ treatasempty
 treelayout
 treeplot
 tridiagonal
 trimesh
 triplot
 trnd
 truecolor
 TrueColor
-Tsang
 Tukey
 tuples
 Tx
 txi
 typedefs
 TypicalX
 ub
 UB
@@ -1140,24 +1054,22 @@ vec
 vech
 Vectorize
 vectorize
 vectorizing
 vee
 versa
 vertcat
 vertices
-Villadsen
 voronoi
 Voronoi
 waitbar
 waitbars
 wallis
 warndlg
-Wathen
 WAV
 WayPoints
 wblcdf
 wblinv
 wblpdf
 wblrnd
 Weibull
 Welch
@@ -1168,22 +1080,20 @@ Whitespace
 whos
 wienrnd
 Wikipedia
 wilcoxon
 Wilcoxon
 wildcard
 Wildcards
 wildcards
-Wilks
 windowbuttondownfcn
 windowbuttonmotionfcn
 windowbuttonupfcn
 windowstyle
-WinRand
 WIPO
 wireframe
 wp
 wspace
 xb
 xboxes
 xc
 xcorr
@@ -1220,12 +1130,11 @@ ylim
 ymax
 ymin
 yy
 YY
 yyyy
 YYYY
 yyyymmdd
 yyyymmddTHHMMSS
-Zechner
 Ziggurat
 zlib
 zlim
diff --git a/doc/interpreter/emacs.txi b/doc/interpreter/emacs.txi
--- a/doc/interpreter/emacs.txi
+++ b/doc/interpreter/emacs.txi
@@ -346,18 +346,18 @@ using @code{font-lock-keyword-face}
 the built-in operators (@samp{&&}, @samp{==}, @dots{}) using
 @code{font-lock-reference-face}
 
 @item
 and the function names in function declarations in
 @code{font-lock-function-name-face}.
 @end itemize
 
-There is also rudimentary support for Imenu (currently, function names
-can be indexed).
+There is also rudimentary support for @nospell{Imenu} (currently, function
+names can be indexed).
 
 @cindex TAGS
 @cindex Emacs TAGS files
 @cindex @code{octave-tags}
 You can generate TAGS files for Emacs from Octave @file{.m} files using
 the shell script @code{octave-tags} that is installed alongside your copy of
 Octave.
 
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -1126,17 +1126,17 @@ used within a particular scope is given 
 @item Subfunction
 A subfunction with the required function name in the given scope.
 
 @item Private function
 A function defined within a private directory of the directory 
 which contains the current function.
 
 @item Class constructor
-A function that constuctors a user class as defined in chapter 
+A function that constructs a user class as defined in chapter
 @ref{Object Oriented Programming}.
 
 @item Class method
 An overloaded function of a class as in chapter
 @ref{Object Oriented Programming}.
 
 @item Command-line Function
 A function that has been defined on the command-line.
diff --git a/doc/interpreter/geometry.txi b/doc/interpreter/geometry.txi
--- a/doc/interpreter/geometry.txi
+++ b/doc/interpreter/geometry.txi
@@ -15,17 +15,17 @@
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @node Geometry
 @chapter Geometry
 
 Much of the geometry code in Octave is based on the Qhull 
-library@footnote{Barber, C.B., Dobkin, D.P., and Huhdanpaa, H.T., 
+library@footnote{@nospell{Barber, C.B., Dobkin, D.P., and Huhdanpaa, H.T.}, 
 @cite{The Quickhull Algorithm for Convex Hulls}, ACM Trans. on Mathematical 
 Software, 22(4):469--483, Dec 1996, @url{http://www.qhull.org}}.  
 Some of the documentation for Qhull, particularly for the options that 
 can be passed to @code{delaunay}, @code{voronoi} and @code{convhull}, 
 etc., is relevant to Octave users.
 
 @menu
 * Delaunay Triangulation::
diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -329,19 +329,20 @@ octave:3> t = linspace (0, 50, 200)';
 it is easy to integrate the set of differential equations:
 
 @example
 octave:4> x = lsode ("f", x0, t);
 @end example
 
 @noindent
 The function @code{lsode} uses the Livermore Solver for Ordinary
-Differential Equations, described in A. C. Hindmarsh, @cite{ODEPACK, a
-Systematized Collection of ODE Solvers}, in: Scientific Computing, R. S.
-Stepleman et al. (Eds.), North-Holland, Amsterdam, 1983, pages 55--64.
+Differential Equations, described in @nospell{A. C. Hindmarsh},
+@cite{ODEPACK, a Systematized Collection of ODE Solvers}, in: Scientific
+Computing, @nospell{R. S. Stepleman} et al. (Eds.), North-Holland, Amsterdam,
+1983, pages 55--64.
 
 @subsection Producing Graphical Output
 
 To display the solution of the previous example graphically, use the
 command
 
 @example
 octave:1> plot (t, x)
diff --git a/doc/interpreter/linalg.txi b/doc/interpreter/linalg.txi
--- a/doc/interpreter/linalg.txi
+++ b/doc/interpreter/linalg.txi
@@ -16,20 +16,20 @@
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @node Linear Algebra
 @chapter Linear Algebra
 @cindex linear algebra
 
 This chapter documents the linear algebra functions provided in Octave.
-Reference material for many of these functions may be found in Golub and
-Van Loan, @cite{Matrix Computations, 2nd Ed.}, Johns Hopkins, 1989, and
-in the @cite{@sc{lapack} Users' Guide}, SIAM, 1992. The
-@cite{@sc{lapack} Users' Guide} is available at:
+Reference material for many of these functions may be found in
+@nospell{Golub and Van Loan}, @cite{Matrix Computations, 2nd Ed.},
+Johns Hopkins, 1989, and in the @cite{@sc{lapack} Users' Guide}, SIAM, 1992.
+The @cite{@sc{lapack} Users' Guide} is available at:
 @cite{http://www.netlib.org/lapack/lug/}
 
 A common text for engineering courses is @nospell{G. Strang},
 @cite{Linear Algebra and Its Applications, 4th Edition}. It has become a
 widespread reference for linear algebra. An alternative is P. Lax
 @cite{Linear Algebra and Its Applications}, and also is a good choice.  It
 claims to be suitable for high school students with substantial mathematical
 interests as well as first-year undergraduates.
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -306,21 +306,21 @@ easily be misinterpreted.
 @menu
 * Empty Matrices::
 @end menu
 
 @node Empty Matrices
 @subsection Empty Matrices
 
 A matrix may have one or both dimensions zero, and operations on empty
-matrices are handled as described by Carl @nospell{de} Boor in @cite{An Empty
-Exercise}, SIGNUM, Volume 25, pages 2-6, 1990 and C. N. Nett and W. M.
-Haddad, in @cite{A System-Theoretic Appropriate Realization of the Empty
-Matrix Concept}, IEEE Transactions on Automatic Control, Volume 38,
-Number 5, May 1993.
+matrices are handled as described by @nospell{Carl de Boor} in
+@cite{An Empty Exercise}, SIGNUM, Volume 25, pages 2-6, 1990 and
+@nospell{C. N. Nett and W. M. Haddad}, in
+@cite{A System-Theoretic Appropriate Realization of the Empty Matrix Concept},
+IEEE Transactions on Automatic Control, Volume 38, Number 5, May 1993.
 @tex
 Briefly, given a scalar $s$, an $m\times n$ matrix $M_{m\times n}$,
 and an $m\times n$ empty matrix $[\,]_{m\times n}$ (with either one or
 both dimensions equal to zero), the following are true:
 $$
 \eqalign{%
 s \cdot [\,]_{m\times n} = [\,]_{m\times n} \cdot s &= [\,]_{m\times n}\cr
 [\,]_{m\times n} + [\,]_{m\times n} &= [\,]_{m\times n}\cr
diff --git a/doc/interpreter/preface.txi b/doc/interpreter/preface.txi
--- a/doc/interpreter/preface.txi
+++ b/doc/interpreter/preface.txi
@@ -19,18 +19,18 @@
 @ifclear AUTHORSONLY
 @node Preface
 @unnumbered Preface
 @cindex contributors
 @cindex history
 
 Octave was originally intended to be companion software for an
 undergraduate-level textbook on chemical reactor design being written by
-James B. Rawlings of the University of Wisconsin-Madison and John
-G. Ekerdt of the University of Texas.
+@nospell{James B. Rawlings} of the University of Wisconsin-Madison and
+@nospell{John G. Ekerdt} of the University of Texas.
 
 Clearly, Octave is now much more than just another `courseware' package
 with limited utility beyond the classroom.  Although our initial goals
 were somewhat vague, we knew that we wanted to create something that
 would enable students to solve realistic problems, and that they could
 use for many things other than chemical reactor design problems.
 We find that most students pick up the basics of Octave quickly, and are
 using it confidently in just a few hours.
@@ -85,29 +85,29 @@ Special thanks to the following people a
 supporting the development of Octave:
 
 @itemize @bullet
 @item
 The United States Department of Energy, through grant number
 @nospell{DE-FG02-04ER25635}.
 
 @item
-Ashok Krishnamurthy, David Hudak, Juan Carlos Chaves, and Stanley
-C. Ahalt of the Ohio Supercomputer Center.
+@nospell{Ashok Krishnamurthy, David Hudak, Juan Carlos Chaves}, and
+@nospell{Stanley C. Ahalt} of the Ohio Supercomputer Center.
 
 @item
 The National Science Foundation, through grant numbers CTS-0105360,
 CTS-9708497, CTS-9311420, CTS-8957123, and CNS-0540147.
 
 @item
 The industrial members of the Texas-Wisconsin Modeling and Control
 Consortium (@url{http://www.che.utexas.edu/twmcc, TWMCC}).
 
 @item
-The Paul A. Elfers Endowed Chair in Chemical Engineering at the
+The @nospell{Paul A. Elfers} Endowed Chair in Chemical Engineering at the
 University of Wisconsin-Madison.
 
 @item
 Digital Equipment Corporation, for an equipment grant as part of their
 External Research Program.
 
 @item
 Sun Microsystems, Inc., for an Academic Equipment grant.
@@ -128,25 +128,26 @@ Academic Development Funds grant.
 @item
 The State of Texas, for providing funding through the Texas
 Advanced Technology Program under Grant No. 003658-078.
 
 @item
 Noel Bell, Senior Engineer, Texaco Chemical Company, Austin Texas.
 
 @item
-John A. Turner, Group Leader, Continuum Dynamics @nospell{(CCS-2)}, Los Alamos
-National Laboratory, for registering the @url{octave.org} domain name.
+John A. Turner, Group Leader, Continuum Dynamics @nospell{(CCS-2)},
+@nospell{Los Alamos} National Laboratory, for registering the
+@url{octave.org} domain name.
 
 @item
-James B. Rawlings, Professor, University of Wisconsin-Madison,
+@nospell{James B. Rawlings}, Professor, University of Wisconsin-Madison,
 Department of Chemical and Biological Engineering.
 
 @item
-Richard Stallman, for writing GNU.
+@nospell{Richard Stallman}, for writing GNU.
 @end itemize
 
 This project would not have been possible without the GNU software used
 in and to produce Octave.
 
 @node Citing Octave in Publications
 @unnumberedsec Citing Octave in Publications
 @cindex Citing Octave
diff --git a/doc/interpreter/quad.txi b/doc/interpreter/quad.txi
--- a/doc/interpreter/quad.txi
+++ b/doc/interpreter/quad.txi
@@ -50,17 +50,17 @@ Numerical integration using an adaptive 
 
 @item quadl
 Numerical integration using an adaptive Lobatto rule.
 
 @item quadgk
 Numerical integration using an adaptive Gauss-Konrod rule.
 
 @item quadcc
-Numerical integration using adaptive Clenshaw-Curtis rules.
+Numerical integration using adaptive @nospell{Clenshaw-Curtis} rules.
 
 @item trapz, cumtrapz
 Numerical integration of data using the trapezoidal method.
 @end table
 
 @noindent
 The best quadrature algorithm to use depends on the integrand.  If you have
 empirical data, rather than a function, the choice is @code{trapz} or
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -70,18 +70,18 @@ sparse matrices are stored.  However, su
 to get an understanding of the size of sparse matrices.  Understanding
 the storage technique is also necessary for those users wishing to 
 create their own oct-files. 
 
 There are many different means of storing sparse matrix data.  What all
 of the methods have in common is that they attempt to reduce the complexity
 and storage given a priori knowledge of the particular class of problems
 that will be solved.  A good summary of the available techniques for storing
-sparse matrix is given by Saad @footnote{Y. Saad "SPARSKIT: A basic toolkit
-for sparse matrix computation", 1994,
+sparse matrix is given by @nospell{Saad} @footnote{Y. Saad "SPARSKIT: A basic
+toolkit for sparse matrix computation", 1994,
 @url{http://www-users.cs.umn.edu/~saad/software/SPARSKIT/paper.ps}}.
 With full matrices, knowledge of the point of an element of the matrix
 within the matrix is implied by its position in the computers memory. 
 However, this is not the case for sparse matrices, and so the positions
 of the nonzero elements of the matrix must equally be stored. 
 
 An obvious way to do this is by storing the elements of the matrix as
 triplets, with two elements being their position in the array 
@@ -798,17 +798,17 @@ packages were written by Tim Davis and a
 @url{http://www.cise.ufl.edu/research/sparse/}}.
 @end enumerate
 
 The band density is defined as the number of nonzero values in the band
 divided by the total number of values in the full band.  The banded
 matrix solvers can be entirely disabled by using @dfn{spparms} to set
 @code{bandden} to 1 (i.e., @code{spparms ("bandden", 1)}).
 
-The QR@tie{}solver factorizes the problem with a Dulmage-Mendelsohn
+The QR@tie{}solver factorizes the problem with a @nospell{Dulmage-Mendelsohn}
 decomposition, to separate the problem into blocks that can be treated
 as over-determined, multiple well determined blocks, and a final
 over-determined block.  For matrices with blocks of strongly connected
 nodes this is a big win as LU@tie{}decomposition can be used for many
 blocks.  It also significantly improves the chance of finding a solution
 to over-determined problems rather than just returning a vector of
 @dfn{NaN}'s.
 
diff --git a/libinterp/corefcn/colloc.cc b/libinterp/corefcn/colloc.cc
--- a/libinterp/corefcn/colloc.cc
+++ b/libinterp/corefcn/colloc.cc
@@ -33,18 +33,18 @@ along with Octave; see the file COPYING.
 #include "error.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN (colloc, args, ,
        "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{r}, @var{amat}, @var{bmat}, @var{q}] =} colloc (@var{n}, \"left\", \"right\")\n\
 Compute derivative and integral weight matrices for orthogonal\n\
-collocation using the subroutines given in J. Villadsen and\n\
-M. L. Michelsen, @cite{Solution of Differential Equation Models by\n\
+collocation using the subroutines given in @nospell{J. Villadsen} and\n\
+@nospell{M. L. Michelsen}, @cite{Solution of Differential Equation Models by\n\
 Polynomial Approximation}.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 3)
diff --git a/libinterp/corefcn/ellipj.cc b/libinterp/corefcn/ellipj.cc
--- a/libinterp/corefcn/ellipj.cc
+++ b/libinterp/corefcn/ellipj.cc
@@ -62,17 +62,17 @@ and is the same size as the result.\n\
 @item\n\
 Normal return.\n\
 \n\
 @item\n\
 Error---no computation, algorithm termination condition not met,\n\
 return @code{NaN}.\n\
 @end enumerate\n\
 \n\
-Reference: Milton Abramowitz and Irene A Stegun,\n\
+Reference: Milton @nospell{Abramowitz} and Irene A @nospell{Stegun},\n\
 @cite{Handbook of Mathematical Functions}, Chapter 16 (Sections 16.4, 16.13,\n\
 and 16.15), Dover, 1965.\n\
 \n\
 @seealso{ellipke}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
diff --git a/libinterp/corefcn/gammainc.cc b/libinterp/corefcn/gammainc.cc
--- a/libinterp/corefcn/gammainc.cc
+++ b/libinterp/corefcn/gammainc.cc
@@ -52,17 +52,18 @@ Compute the normalized incomplete gamma 
 gammainc (x, a) = ---------    | exp (-t) t^(a-1) dt\n\
                   gamma (a)    /\n\
                             t=0\n\
 @end group\n\
 @end example\n\
 \n\
 @end ifnottex\n\
 with the limiting value of 1 as @var{x} approaches infinity.\n\
-The standard notation is @math{P(a,x)}, e.g., Abramowitz and Stegun (6.5.1).\n\
+The standard notation is @math{P(a,x)}, e.g., @nospell{Abramowitz} and\n\
+@nospell{Stegun} (6.5.1).\n\
 \n\
 If @var{a} is scalar, then @code{gammainc (@var{x}, @var{a})} is returned\n\
 for each element of @var{x} and vice versa.\n\
 \n\
 If neither @var{x} nor @var{a} is scalar, the sizes of @var{x} and\n\
 @var{a} must agree, and @code{gammainc} is applied element-by-element.\n\
 \n\
 By default the incomplete gamma function integrated from 0 to @var{x} is\n\
diff --git a/libinterp/corefcn/hess.cc b/libinterp/corefcn/hess.cc
--- a/libinterp/corefcn/hess.cc
+++ b/libinterp/corefcn/hess.cc
@@ -53,18 +53,19 @@ is upper Hessenberg ($H_{i,j} = 0, \\for
 @ifnottex\n\
 @code{@var{P} * @var{H} * @var{P}' = @var{A}} where @var{P} is a square\n\
 unitary matrix (@code{@var{P}' * @var{P} = I}, using complex-conjugate\n\
 transposition) and @var{H} is upper Hessenberg\n\
 (@code{@var{H}(i, j) = 0 forall i >= j+1)}.\n\
 @end ifnottex\n\
 \n\
 The Hessenberg decomposition is usually used as the first step in an\n\
-eigenvalue computation, but has other applications as well (see Golub,\n\
-Nash, and Van Loan, IEEE Transactions on Automatic Control, 1979).\n\
+eigenvalue computation, but has other applications as well\n\
+(see @nospell{Golub, Nash, and Van Loan},\n\
+IEEE Transactions on Automatic Control, 1979).\n\
 @seealso{eig, chol, lu, qr, qz, schur, svd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin != 1 || nargout > 2)
diff --git a/libinterp/corefcn/quadcc.cc b/libinterp/corefcn/quadcc.cc
--- a/libinterp/corefcn/quadcc.cc
+++ b/libinterp/corefcn/quadcc.cc
@@ -1487,19 +1487,19 @@ downdate (double *c, int n, int d, int *
 
 DEFUN (quadcc, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Function File} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b})\n\
 @deftypefnx {Function File} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b}, @var{tol})\n\
 @deftypefnx {Function File} {@var{q} =} quadcc (@var{f}, @var{a}, @var{b}, @var{tol}, @var{sing})\n\
 @deftypefnx {Function File} {[@var{q}, @var{err}, @var{nr_points}] =} quadcc (@dots{})\n\
 Numerically evaluate the integral of @var{f} from @var{a} to @var{b}\n\
-using the doubly-adaptive Clenshaw-Curtis quadrature described by P. Gonnet\n\
-in @cite{Increasing the Reliability of Adaptive Quadrature Using Explicit\n\
-Interpolants}.\n\
+using the doubly-adaptive @nospell{Clenshaw-Curtis} quadrature described by\n\
+@nospell{P. Gonnet} in @cite{Increasing the Reliability of Adaptive\n\
+Quadrature Using Explicit Interpolants}.\n\
 @var{f} is a function handle, inline function, or string\n\
 containing the name of the function to evaluate.\n\
 The function @var{f} must be vectorized and must return a vector of output\n\
 values if given a vector of input values.  For example,\n\
 \n\
 @example\n\
 f = @@(x) x .* sin (1./x) .* sqrt (abs (1 - x));\n\
 @end example\n\
@@ -1535,24 +1535,24 @@ recommended to verify this value for dif
 values of the integrand such as @code{NaN} or @code{Inf}.\n\
 If the integral diverges, and @code{quadcc} detects this,\n\
 then a warning is issued and @code{Inf} or @code{-Inf} is returned.\n\
 \n\
 Note: @code{quadcc} is a general purpose quadrature algorithm\n\
 and, as such, may be less efficient for a smooth or otherwise\n\
 well-behaved integrand than other methods such as @code{quadgk}.\n\
 \n\
-The algorithm uses Clenshaw-Curtis quadrature rules of increasing\n\
+The algorithm uses @nospell{Clenshaw-Curtis} quadrature rules of increasing\n\
 degree in each interval and bisects the interval if either the\n\
 function does not appear to be smooth or a rule of maximum\n\
 degree has been reached.  The error estimate is computed from the\n\
 L2-norm of the difference between two successive interpolations\n\
 of the integrand over the nodes of the respective quadrature rules.\n\
 \n\
-Reference: P. Gonnet, @cite{Increasing the Reliability of Adaptive\n\
+Reference: @nospell{P. Gonnet}, @cite{Increasing the Reliability of Adaptive\n\
 Quadrature Using Explicit Interpolants}, ACM Transactions on\n\
 Mathematical Software, Vol. 37, Issue 3, Article No. 3, 2010.\n\
 @seealso{quad, quadv, quadl, quadgk, trapz, dblquad, triplequad}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   /* Some constants that we will need. */
diff --git a/libinterp/corefcn/rand.cc b/libinterp/corefcn/rand.cc
--- a/libinterp/corefcn/rand.cc
+++ b/libinterp/corefcn/rand.cc
@@ -403,18 +403,18 @@ value of @var{v}, not @var{v} itself.\n\
 By default, the generator is initialized from @code{/dev/urandom} if it is\n\
 available, otherwise from CPU time, wall clock time, and the current\n\
 fraction of a second.  Note that this differs from @sc{matlab}, which\n\
 always initializes the state to the same state at startup.  To obtain\n\
 behavior comparable to @sc{matlab}, initialize with a deterministic state\n\
 vector in Octave's startup files (@pxref{Startup Files}).\n\
 \n\
 To compute the pseudo-random sequence, @code{rand} uses the Mersenne\n\
-Twister with a period of @math{2^{19937}-1} (See M. Matsumoto and\n\
-T. Nishimura,\n\
+Twister with a period of @math{2^{19937}-1} (See\n\
+@nospell{M. Matsumoto and T. Nishimura},\n\
 @cite{Mersenne Twister: A 623-dimensionally equidistributed uniform\n\
 pseudorandom number generator}, ACM Trans. on\n\
 Modeling and Computer Simulation Vol. 8, No. 1, pp. 3-30, January 1998,\n\
 @url{http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html}).\n\
 Do @strong{not} use for cryptography without securely hashing\n\
 several returned values together, otherwise the generator state\n\
 can be learned after reading 624 consecutive values.\n\
 \n\
@@ -562,24 +562,24 @@ DEFUN (randn, args, ,
 @deftypefnx {Built-in Function} {} randn (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} randn (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} randn (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} randn (@dots{}, \"double\")\n\
 Return a matrix with normally distributed random\n\
 elements having zero mean and variance one.  The arguments are\n\
 handled the same as the arguments for @code{rand}.\n\
 \n\
-By default, @code{randn} uses the Marsaglia and Tsang ``Ziggurat technique''\n\
-to transform from a uniform to a normal distribution.\n\
+By default, @code{randn} uses the @nospell{Marsaglia and Tsang}\n\
+``Ziggurat technique'' to transform from a uniform to a normal distribution.\n\
 \n\
 The class of the value returned can be controlled by a trailing\n\
 @qcode{\"double\"} or @qcode{\"single\"} argument.  These are the only valid\n\
 classes.\n\
 \n\
-Reference: G. Marsaglia and W.W. Tsang,\n\
+Reference: @nospell{G. Marsaglia and W.W. Tsang},\n\
 @cite{Ziggurat Method for Generating Random Variables},\n\
 J. Statistical Software, vol 5, 2000,\n\
 @url{http://www.jstatsoft.org/v05/i08/}\n\
 \n\
 @seealso{rand, rande, randg, randp}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -633,24 +633,24 @@ DEFUN (rande, args, ,
 @deftypefnx {Built-in Function} {@var{v} =} rande (\"seed\")\n\
 @deftypefnx {Built-in Function} {} rande (\"seed\", @var{v})\n\
 @deftypefnx {Built-in Function} {} rande (\"seed\", \"reset\")\n\
 @deftypefnx {Built-in Function} {} rande (@dots{}, \"single\")\n\
 @deftypefnx {Built-in Function} {} rande (@dots{}, \"double\")\n\
 Return a matrix with exponentially distributed random elements.  The\n\
 arguments are handled the same as the arguments for @code{rand}.\n\
 \n\
-By default, @code{randn} uses the Marsaglia and Tsang ``Ziggurat technique''\n\
-to transform from a uniform to an exponential distribution.\n\
+By default, @code{randn} uses the @nospell{Marsaglia and Tsang}\n\
+``Ziggurat technique'' to transform from a uniform to a normal distribution.\n\
 \n\
 The class of the value returned can be controlled by a trailing\n\
 @qcode{\"double\"} or @qcode{\"single\"} argument.  These are the only valid\n\
 classes.\n\
 \n\
-Reference: G. Marsaglia and W.W. Tsang,\n\
+Reference: @nospell{G. Marsaglia and W.W. Tsang},\n\
 @cite{Ziggurat Method for Generating Random Variables},\n\
 J. Statistical Software, vol 5, 2000,\n\
 @url{http://www.jstatsoft.org/v05/i08/}\n\
 \n\
 @seealso{rand, randn, randg, randp}\n\
 @end deftypefn")
 {
   octave_value retval;
@@ -998,27 +998,27 @@ and whether or not @var{l} is a scalar o
 W.H. Press, et al., @cite{Numerical Recipes in C},\n\
 Cambridge University Press, 1992.\n\
 \n\
 @item For scalar @var{l} > 12, use rejection method.[1]\n\
 W.H. Press, et al., @cite{Numerical Recipes in C},\n\
 Cambridge University Press, 1992.\n\
 \n\
 @item For matrix @var{l} @leq{} 10, use inversion method.[2]\n\
-E. Stadlober, et al., WinRand source code, available via FTP.\n\
+@nospell{E. Stadlober, et al., WinRand source code}, available via FTP.\n\
 \n\
 @item For matrix @var{l} > 10, use patchwork rejection method.\n\
-E. Stadlober, et al., WinRand source code, available via FTP, or\n\
-H. Zechner, @cite{Efficient sampling from continuous and discrete\n\
+@nospell{E. Stadlober, et al., WinRand source code}, available via FTP, or\n\
+@nospell{H. Zechner}, @cite{Efficient sampling from continuous and discrete\n\
 unimodal distributions}, Doctoral Dissertation, 156pp., Technical\n\
-University Graz, Austria, 1994.\n\
+University @nospell{Graz}, Austria, 1994.\n\
 \n\
 @item For @var{l} > 1e8, use normal approximation.\n\
-L. Montanet, et al., @cite{Review of Particle Properties}, Physical Review\n\
-D 50 p1284, 1994.\n\
+@nospell{L. Montanet}, et al., @cite{Review of Particle Properties},\n\
+Physical Review D 50 p1284, 1994.\n\
 @end table\n\
 \n\
 The class of the value returned can be controlled by a trailing\n\
 @qcode{\"double\"} or @qcode{\"single\"} argument.  These are the only valid\n\
 classes.\n\
 @seealso{rand, randn, rande, randg}\n\
 @end deftypefn")
 {
diff --git a/libinterp/corefcn/sqrtm.cc b/libinterp/corefcn/sqrtm.cc
--- a/libinterp/corefcn/sqrtm.cc
+++ b/libinterp/corefcn/sqrtm.cc
@@ -201,17 +201,17 @@ do_sqrtm (const octave_value& arg)
 }
 
 DEFUN (sqrtm, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{s} =} sqrtm (@var{A})\n\
 @deftypefnx {Built-in Function} {[@var{s}, @var{error_estimate}] =} sqrtm (@var{A})\n\
 Compute the matrix square root of the square matrix @var{A}.\n\
 \n\
-Ref: N.J. Higham.  @cite{A New sqrtm for @sc{matlab}}.  Numerical\n\
+Ref: @nospell{N.J. Higham}.  @cite{A New sqrtm for @sc{matlab}}.  Numerical\n\
 Analysis Report No. 336, Manchester @nospell{Centre} for Computational\n\
 Mathematics, Manchester, England, January 1999.\n\
 @seealso{expm, logm}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
diff --git a/libinterp/dldfcn/ccolamd.cc b/libinterp/dldfcn/ccolamd.cc
--- a/libinterp/dldfcn/ccolamd.cc
+++ b/libinterp/dldfcn/ccolamd.cc
@@ -127,21 +127,22 @@ continue.  The matrix is OK if @code{@va
 invalid.  @code{@var{stats}(5)} is the rightmost column index that is\n\
 unsorted or contains duplicate entries, or zero if no such column exists.\n\
 @code{@var{stats}(6)} is the last seen duplicate or out-of-order row\n\
 index in the column index given by @code{@var{stats}(5)}, or zero if no\n\
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate\n\
 or out-of-order row indices.  @code{@var{stats}(8 : 20)} is always zero in\n\
 the current version of @sc{ccolamd} (reserved for future use).\n\
 \n\
-The authors of the code itself are S. Larimore, T. Davis (Univ. of Florida)\n\
-and S. Rajamanickam in collaboration with J. Bilbert and E. Ng.  Supported\n\
-by the National Science Foundation\n\
-@nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from Sandia\n\
-National Lab.  See @url{http://www.cise.ufl.edu/research/sparse} for\n\
+The authors of the code itself are @nospell{S. Larimore, T. Davis}\n\
+(Univ. of Florida) and @nospell{S. Rajamanickam} in collaboration with\n\
+@nospell{J. Bilbert and E. Ng}.  Supported by the National Science Foundation\n\
+@nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from\n\
+@nospell{Sandia} National Lab.\n\
+See @url{http://www.cise.ufl.edu/research/sparse} for\n\
 ccolamd, csymamd, amd, colamd, symamd, and other related orderings.\n\
 @seealso{colamd, csymamd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
 #ifdef HAVE_CCOLAMD
 
@@ -384,21 +385,22 @@ continue.  The matrix is OK if @code{@va
 invalid.  @code{@var{stats}(5)} is the rightmost column index that is\n\
 unsorted or contains duplicate entries, or zero if no such column exists.\n\
 @code{@var{stats}(6)} is the last seen duplicate or out-of-order row\n\
 index in the column index given by @code{@var{stats}(5)}, or zero if no\n\
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate\n\
 or out-of-order row indices.  @code{@var{stats}(8:20)} is always zero in\n\
 the current version of @sc{ccolamd} (reserved for future use).\n\
 \n\
-The authors of the code itself are S. Larimore, T. Davis (Uni of Florida)\n\
-and S. Rajamanickam in collaboration with J. Bilbert and E. Ng.  Supported\n\
-by the National Science Foundation\n\
-@nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from Sandia\n\
-National Lab.  See @url{http://www.cise.ufl.edu/research/sparse} for\n\
+The authors of the code itself are @nospell{S. Larimore, T. Davis}\n\
+(Univ. of Florida) and @nospell{S. Rajamanickam} in collaboration with\n\
+@nospell{J. Bilbert and E. Ng}.  Supported by the National Science Foundation\n\
+@nospell{(DMS-9504974, DMS-9803599, CCR-0203270)}, and a grant from\n\
+@nospell{Sandia} National Lab.\n\
+See @url{http://www.cise.ufl.edu/research/sparse} for\n\
 ccolamd, csymamd, amd, colamd, symamd, and other related orderings.\n\
 @seealso{symamd, ccolamd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
 #if HAVE_CCOLAMD
 
diff --git a/libinterp/dldfcn/colamd.cc b/libinterp/dldfcn/colamd.cc
--- a/libinterp/dldfcn/colamd.cc
+++ b/libinterp/dldfcn/colamd.cc
@@ -265,20 +265,19 @@ unsorted or contains duplicate entries, 
 @code{@var{stats}(6)} is the last seen duplicate or out-of-order row\n\
 index in the column index given by @code{@var{stats}(5)}, or zero if no\n\
 such row index exists.  @code{@var{stats}(7)} is the number of duplicate\n\
 or out-of-order row indices.  @code{@var{stats}(8:20)} is always zero in\n\
 the current version of @sc{colamd} (reserved for future use).\n\
 \n\
 The ordering is followed by a column elimination tree post-ordering.\n\
 \n\
-The authors of the code itself are Stefan I. Larimore and Timothy A.\n\
-Davis @email{davis@@cise.ufl.edu}, University of Florida.  The algorithm was\n\
-developed in collaboration with John Gilbert, Xerox PARC, and Esmond\n\
-Ng, Oak Ridge National Laboratory.  (see\n\
+The authors of the code itself are @nospell{Stefan I. Larimore} and\n\
+@nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of Florida.  The algorithm was developed in collaboration with @nospell{John Gilbert},\n\
+Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.  (see\n\
 @url{http://www.cise.ufl.edu/research/sparse/colamd})\n\
 @seealso{colperm, symamd, ccolamd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
 #ifdef HAVE_COLAMD
 
@@ -501,20 +500,19 @@ is unsorted or contains duplicate entrie
 exists.  @code{@var{stats}(6)} is the last seen duplicate or out-of-order\n\
 row index in the column index given by @code{@var{stats}(5)}, or zero\n\
 if no such row index exists.  @code{@var{stats}(7)} is the number of\n\
 duplicate or out-of-order row indices.  @code{@var{stats}(8:20)} is\n\
 always zero in the current version of SYMAMD (reserved for future use).\n\
 \n\
 The ordering is followed by a column elimination tree post-ordering.\n\
 \n\
-The authors of the code itself are Stefan I. Larimore and Timothy A.\n\
-Davis @email{davis@@cise.ufl.edu}, University of Florida.  The algorithm was\n\
-developed in collaboration with John Gilbert, Xerox PARC, and Esmond\n\
-Ng, Oak Ridge National Laboratory.  (see\n\
+The authors of the code itself are @nospell{Stefan I. Larimore} and\n\
+@nospell{Timothy A. Davis @email{davis@@cise.ufl.edu}}, University of Florida.  The algorithm was developed in collaboration with @nospell{John Gilbert},\n\
+Xerox PARC, and @nospell{Esmond Ng}, Oak Ridge National Laboratory.  (see\n\
 @url{http://www.cise.ufl.edu/research/sparse/colamd})\n\
 @seealso{colperm, colamd}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
 #ifdef HAVE_COLAMD
 
diff --git a/libinterp/dldfcn/dmperm.cc b/libinterp/dldfcn/dmperm.cc
--- a/libinterp/dldfcn/dmperm.cc
+++ b/libinterp/dldfcn/dmperm.cc
@@ -131,30 +131,32 @@ dmperm_internal (bool rank, const octave
 }
 #endif
 
 DEFUN_DLD (dmperm, args, nargout,
            "-*- texinfo -*-\n\
 @deftypefn  {Loadable Function} {@var{p} =} dmperm (@var{S})\n\
 @deftypefnx {Loadable Function} {[@var{p}, @var{q}, @var{r}, @var{S}] =} dmperm (@var{S})\n\
 \n\
-@cindex Dulmage-Mendelsohn decomposition\n\
-Perform a Dulmage-Mendelsohn permutation of the sparse matrix @var{S}.\n\
+@cindex @nospell{Dulmage-Mendelsohn} decomposition\n\
+Perform a @nospell{Dulmage-Mendelsohn} permutation of the sparse matrix\n\
+@var{S}.\n\
+\n\
 With a single output argument @code{dmperm} performs the row permutations\n\
 @var{p} such that @code{@var{S}(@var{p},:)} has no zero elements on the\n\
 diagonal.\n\
 \n\
 Called with two or more output arguments, returns the row and column\n\
 permutations, such that @code{@var{S}(@var{p}, @var{q})} is in block\n\
 triangular form.  The values of @var{r} and @var{S} define the boundaries\n\
 of the blocks.  If @var{S} is square then @code{@var{r} == @var{S}}.\n\
 \n\
-The method used is described in: A. Pothen & C.-J. Fan. @cite{Computing the\n\
-Block Triangular Form of a Sparse Matrix}. ACM Trans. Math. Software,\n\
-16(4):303-324, 1990.\n\
+The method used is described in: @nospell{A. Pothen & C.-J. Fan.}\n\
+@cite{Computing the Block Triangular Form of a Sparse Matrix}.\n\
+ACM Trans. Math. Software, 16(4):303-324, 1990.\n\
 @seealso{colamd, ccolamd}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value_list retval;
 
   if (nargin != 1)
     {
@@ -189,18 +191,18 @@ 16(4):303-324, 1990.\n\
 
 DEFUN_DLD (sprank, args, nargout,
            "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{p} =} sprank (@var{S})\n\
 @cindex structural rank\n\
 \n\
 Calculate the structural rank of the sparse matrix @var{S}.  Note that\n\
 only the structure of the matrix is used in this calculation based on\n\
-a Dulmage-Mendelsohn permutation to block triangular form.  As such the\n\
-numerical rank of the matrix @var{S} is bounded by\n\
+a @nospell{Dulmage-Mendelsohn} permutation to block triangular form.  As\n\
+such the numerical rank of the matrix @var{S} is bounded by\n\
 @code{sprank (@var{S}) >= rank (@var{S})}.  Ignoring floating point errors\n\
 @code{sprank (@var{S}) == rank (@var{S})}.\n\
 @seealso{dmperm}\n\
 @end deftypefn")
 {
   int nargin = args.length ();
   octave_value_list retval;
 
diff --git a/libinterp/dldfcn/symrcm.cc b/libinterp/dldfcn/symrcm.cc
--- a/libinterp/dldfcn/symrcm.cc
+++ b/libinterp/dldfcn/symrcm.cc
@@ -409,32 +409,32 @@ transpose (octave_idx_type N, const octa
         ridx2[q] = j;
       }
 }
 
 // An implementation of the Cuthill-McKee algorithm.
 DEFUN_DLD (symrcm, args, ,
            "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{p} =} symrcm (@var{S})\n\
-Return the symmetric reverse Cuthill-McKee permutation of @var{S}.\n\
+Return the symmetric reverse @nospell{Cuthill-McKee} permutation of @var{S}.\n\
 @var{p} is a permutation vector such that\n\
 @code{@var{S}(@var{p}, @var{p})} tends to have its diagonal elements\n\
 closer to the diagonal than @var{S}.  This is a good preordering for LU\n\
 or Cholesky@tie{}factorization of matrices that come from ``long, skinny''\n\
 problems.  It works for both symmetric and asymmetric @var{S}.\n\
 \n\
 The algorithm represents a heuristic approach to the NP-complete\n\
 bandwidth minimization problem.  The implementation is based in the\n\
 descriptions found in\n\
 \n\
-E. Cuthill, J. McKee. @cite{Reducing the Bandwidth of Sparse Symmetric\n\
-Matrices}. Proceedings of the 24th ACM National Conference, 157--172\n\
+@nospell{E. Cuthill, J. McKee}. @cite{Reducing the Bandwidth of Sparse\n\
+Symmetric Matrices}. Proceedings of the 24th ACM National Conference, 157--172\n\
 1969, Brandon Press, New Jersey.\n\
 \n\
-A. George, J.W.H. Liu. @cite{Computer Solution of Large Sparse\n\
+@nospell{A. George, J.W.H. Liu}. @cite{Computer Solution of Large Sparse\n\
 Positive Definite Systems}, Prentice Hall Series in Computational\n\
 Mathematics, ISBN 0-13-165274-5, 1981.\n\
 \n\
 @seealso{colperm, colamd, symamd}\n\
 @end deftypefn")
 {
   octave_value retval;
   int nargin = args.length ();
diff --git a/scripts/general/quadgk.m b/scripts/general/quadgk.m
--- a/scripts/general/quadgk.m
+++ b/scripts/general/quadgk.m
@@ -22,17 +22,17 @@
 ## @deftypefnx {Function File} {@var{q} =} quadgk (@var{f}, @var{a}, @var{b}, @var{abstol}, @var{trace})
 ## @deftypefnx {Function File} {@var{q} =} quadgk (@var{f}, @var{a}, @var{b}, @var{prop}, @var{val}, @dots{})
 ## @deftypefnx {Function File} {[@var{q}, @var{err}] =} quadgk (@dots{})
 ##
 ## Numerically evaluate the integral of @var{f} from @var{a} to @var{b}
 ## using adaptive Gauss-Konrod quadrature.
 ## @var{f} is a function handle, inline function, or string
 ## containing the name of the function to evaluate.
-## The formulation is based on a proposal by L.F. Shampine,
+## The formulation is based on a proposal by @nospell{L.F. Shampine},
 ## @cite{"Vectorized adaptive quadrature in @sc{matlab}", Journal of
 ## Computational and Applied Mathematics, pp131-140, Vol 211, Issue 2,
 ## Feb 2008} where all function evaluations at an iteration are
 ## calculated with a single call to @var{f}.  Therefore, the function
 ## @var{f} must be vectorized and must accept a vector of input values @var{x}
 ## and return an output vector representing the function evaluations at the
 ## given values of @var{x}.
 ##
diff --git a/scripts/general/quadl.m b/scripts/general/quadl.m
--- a/scripts/general/quadl.m
+++ b/scripts/general/quadl.m
@@ -40,17 +40,17 @@
 ## If @var{trace} is defined then for each subinterval display: (1) the left
 ## end of the subinterval, (2) the length of the subinterval, (3) the
 ## approximation of the integral over the subinterval.
 ##
 ## Additional arguments @var{p1}, etc., are passed directly to the function
 ## @var{f}.  To use default values for @var{tol} and @var{trace}, one may pass
 ## empty matrices ([]).
 ##
-## Reference: W. Gander and W. Gautschi, @cite{Adaptive Quadrature -
+## Reference: @nospell{W. Gander and W. Gautschi}, @cite{Adaptive Quadrature -
 ## Revisited}, BIT Vol. 40, No. 1, March 2000, pp. 84--101.
 ## @url{http://www.inf.ethz.ch/personal/gander/}
 ## @seealso{quad, quadv, quadgk, quadcc, trapz, dblquad, triplequad}
 ## @end deftypefn
 
 ##   Author: Walter Gautschi
 ##   Date: 08/03/98
 ##   Reference: Gander, Computermathematik, Birkhaeuser, 1992.
diff --git a/scripts/linear-algebra/commutation_matrix.m b/scripts/linear-algebra/commutation_matrix.m
--- a/scripts/linear-algebra/commutation_matrix.m
+++ b/scripts/linear-algebra/commutation_matrix.m
@@ -58,18 +58,18 @@
 ## @tex
 ##  $K_{m,m}$
 ## @end tex
 ## @ifnottex
 ##  @math{K(m,m)}
 ## @end ifnottex
 ##  is returned.
 ##
-## See Magnus and Neudecker (1988), @cite{Matrix Differential Calculus with
-## Applications in Statistics and Econometrics.}
+## See @nospell{Magnus and Neudecker} (1988), @cite{Matrix Differential
+## Calculus with Applications in Statistics and Econometrics.}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
 ## Adapted-By: jwe
 
 function k = commutation_matrix (m, n)
 
diff --git a/scripts/linear-algebra/condest.m b/scripts/linear-algebra/condest.m
--- a/scripts/linear-algebra/condest.m
+++ b/scripts/linear-algebra/condest.m
@@ -54,23 +54,23 @@
 ## a vector @var{v} satisfying @code{norm (A*v, 1) == norm (A, 1) * norm
 ## (@var{v}, 1) / @var{est}}.  When @var{est} is large, @var{v} is an
 ## approximate null vector.
 ##
 ## References:
 ##
 ## @itemize
 ## @item
-## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
+## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
 ##
 ## @item
-## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
+## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{cond, norm, onenormest}
 ## @end deftypefn
 
 ## Code originally licensed under
diff --git a/scripts/linear-algebra/duplication_matrix.m b/scripts/linear-algebra/duplication_matrix.m
--- a/scripts/linear-algebra/duplication_matrix.m
+++ b/scripts/linear-algebra/duplication_matrix.m
@@ -49,18 +49,18 @@
 ##  matrices
 ## @tex
 ##  $A$.
 ## @end tex
 ## @ifnottex
 ##  @math{A}.
 ## @end ifnottex
 ##
-## See Magnus and Neudecker (1988), Matrix differential calculus with
-## applications in statistics and econometrics.
+## See @nospell{Magnus and Neudecker} (1988), @cite{Matrix Differential
+## Calculus with Applications in Statistics and Econometrics.}
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@wu-wien.ac.at>
 ## Created: 8 May 1995
 ## Adapged-By: jwe
 
 function d = duplication_matrix (n)
 
diff --git a/scripts/linear-algebra/expm.m b/scripts/linear-algebra/expm.m
--- a/scripts/linear-algebra/expm.m
+++ b/scripts/linear-algebra/expm.m
@@ -28,18 +28,18 @@
 ## @ifnottex
 ##
 ## @example
 ## expm (A) = I + A + A^2/2! + A^3/3! + @dots{}
 ## @end example
 ##
 ## @end ifnottex
 ## The Taylor series is @emph{not} the way to compute the matrix
-## exponential; see Moler and Van Loan, @cite{Nineteen Dubious Ways to
-## Compute the Exponential of a Matrix}, SIAM Review, 1978.  This routine
+## exponential; see @nospell{Moler and Van Loan}, @cite{Nineteen Dubious Ways
+## to Compute the Exponential of a Matrix}, SIAM Review, 1978.  This routine
 ## uses Ward's diagonal Pad@'e approximation method with three step
 ## preconditioning (SIAM Journal on Numerical Analysis, 1977).  Diagonal
 ## Pad@'e approximations are rational polynomials of matrices
 ## @tex
 ## $D_q(A)^{-1}N_q(A)$
 ## @end tex
 ## @ifnottex
 ##
diff --git a/scripts/linear-algebra/housh.m b/scripts/linear-algebra/housh.m
--- a/scripts/linear-algebra/housh.m
+++ b/scripts/linear-algebra/housh.m
@@ -38,17 +38,17 @@
 ## @item j
 ## index into vector
 ##
 ## @item z
 ## threshold for zero  (usually should be the number 0)
 ## @end table
 ##
 ## @noindent
-## Outputs (see Golub and Van Loan):
+## Outputs (see @nospell{Golub and Van Loan}):
 ##
 ## @table @var
 ## @item beta
 ## If beta = 0, then no reflection need be applied (@nospell{zer} set to 0)
 ##
 ## @item housv
 ## householder vector
 ## @end table
diff --git a/scripts/linear-algebra/krylov.m b/scripts/linear-algebra/krylov.m
--- a/scripts/linear-algebra/krylov.m
+++ b/scripts/linear-algebra/krylov.m
@@ -44,19 +44,19 @@
 ## @var{h} contains the Hessenberg decomposition of @var{A}.
 ##
 ## The optional parameter @var{eps1} is the threshold for zero.  The
 ## default value is 1e-12.
 ##
 ## If the optional parameter @var{pflg} is nonzero, row pivoting is used
 ## to improve numerical behavior.  The default value is 0.
 ##
-## Reference: A. Hodel, P. Misra, @cite{Partial Pivoting in the Computation of
-## Krylov Subspaces of Large Sparse Systems}, Proceedings of the 42nd IEEE
-## Conference on Decision and Control, December 2003.
+## Reference: @nospell{A. Hodel, P. Misra}, @cite{Partial Pivoting in the
+## Computation of Krylov Subspaces of Large Sparse Systems}, Proceedings of
+## the 42nd IEEE Conference on Decision and Control, December 2003.
 ## @end deftypefn
 
 ## Author: A. Scottedward Hodel <a.s.hodel@eng.auburn.edu>
 
 function [Uret, H, nu] = krylov (A, V, k, eps1, pflg);
 
   if (isa (A, "single") || isa (V, "single"))
     defeps = 1e-6;
diff --git a/scripts/linear-algebra/onenormest.m b/scripts/linear-algebra/onenormest.m
--- a/scripts/linear-algebra/onenormest.m
+++ b/scripts/linear-algebra/onenormest.m
@@ -15,17 +15,17 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {[@var{est}, @var{v}, @var{w}, @var{iter}] =} onenormest (@var{A}, @var{t})
 ## @deftypefnx {Function File} {[@var{est}, @var{v}, @var{w}, @var{iter}] =} onenormest (@var{apply}, @var{apply_t}, @var{n}, @var{t})
 ##
-## Apply Higham and Tisseur's randomized block 1-norm estimator to
+## Apply @nospell{Higham and Tisseur's} randomized block 1-norm estimator to
 ## matrix @var{A} using @var{t} test vectors.  If @var{t} exceeds 5, then
 ## only 5 test vectors are used.
 ##
 ## If the matrix is not explicit, e.g., when estimating the norm of
 ## @code{inv (@var{A})} given an LU@tie{}factorization, @code{onenormest}
 ## applies @var{A} and its conjugate transpose through a pair of functions
 ## @var{apply} and @var{apply_t}, respectively, to a dense matrix of size
 ## @var{n} by @var{t}.  The implicit version requires an explicit dimension
@@ -36,23 +36,23 @@
 ## @code{(@var{w}, 1) = @var{est} * norm (@var{v}, 1)},
 ## and the number of iterations @var{iter}.  The number of
 ## iterations is limited to 10 and is at least 2.
 ##
 ## References:
 ##
 ## @itemize
 ## @item
-## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
+## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. SIMAX vol 21, no 4, pp 1185-1201.
 ## @url{http://dx.doi.org/10.1137/S0895479899356080}
 ##
 ## @item
-## N.J. Higham and F. Tisseur, @cite{A Block Algorithm
+## @nospell{N.J. Higham and F. Tisseur}, @cite{A Block Algorithm
 ## for Matrix 1-Norm Estimation, with an Application to 1-Norm
 ## Pseudospectra}. @url{http://citeseer.ist.psu.edu/223007.html}
 ## @end itemize
 ##
 ## @seealso{condest, norm, cond}
 ## @end deftypefn
 
 ## Code originally licensed under
diff --git a/scripts/linear-algebra/qzhess.m b/scripts/linear-algebra/qzhess.m
--- a/scripts/linear-algebra/qzhess.m
+++ b/scripts/linear-algebra/qzhess.m
@@ -30,19 +30,19 @@
 ##      @result{} aa = [ -3.02244, -4.41741;  0.92998,  0.69749 ]
 ##      @result{} bb = [ -8.60233, -9.99730;  0.00000, -0.23250 ]
 ##      @result{}  q = [ -0.58124, -0.81373; -0.81373,  0.58124 ]
 ##      @result{}  z = [ 1, 0; 0, 1 ]
 ## @end group
 ## @end example
 ##
 ## The Hessenberg-triangular decomposition is the first step in
-## Moler and Stewart's QZ@tie{}decomposition algorithm.
+## @nospell{Moler and Stewart's} QZ@tie{}decomposition algorithm.
 ##
-## Algorithm taken from Golub and Van Loan,
+## Algorithm taken from @nospell{Golub and Van Loan},
 ## @cite{Matrix Computations, 2nd edition}.
 ## 
 ## @seealso{lu, chol, hess, qr, qz, schur, svd}
 ## @end deftypefn
 
 ## Author: A. S. Hodel <scotte@eng.auburn.edu>
 ## Created: August 1993
 ## Adapted-By: jwe
diff --git a/scripts/optimization/fminsearch.m b/scripts/optimization/fminsearch.m
--- a/scripts/optimization/fminsearch.m
+++ b/scripts/optimization/fminsearch.m
@@ -19,19 +19,19 @@
 
 ## -*- texinfo -*-
 ## @deftypefn  {Function File} {@var{x} =} fminsearch (@var{fun}, @var{x0})
 ## @deftypefnx {Function File} {@var{x} =} fminsearch (@var{fun}, @var{x0}, @var{options})
 ## @deftypefnx {Function File} {[@var{x}, @var{fval}] =} fminsearch (@dots{})
 ##
 ## Find a value of @var{x} which minimizes the function @var{fun}.
 ## The search begins at the point @var{x0} and iterates using the
-## Nelder & Mead Simplex algorithm (a derivative-free method).  This algorithm
-## is better-suited to functions which have discontinuities or for which
-## a gradient-based search such as @code{fminunc} fails.
+## @nospell{Nelder & Mead} Simplex algorithm (a derivative-free method).  This
+## algorithm is better-suited to functions which have discontinuities or for
+## which a gradient-based search such as @code{fminunc} fails.
 ##
 ## Options for the search are provided in the parameter @var{options} using 
 ## the function @code{optimset}.  Currently, @code{fminsearch} accepts the
 ## options: @qcode{"TolX"}, @qcode{"MaxFunEvals"}, @qcode{"MaxIter"},
 ## @qcode{"Display"}.  For a description of these options, see
 ## @code{optimset}.
 ##
 ## On exit, the function returns @var{x}, the minimum point,
diff --git a/scripts/optimization/glpk.m b/scripts/optimization/glpk.m
--- a/scripts/optimization/glpk.m
+++ b/scripts/optimization/glpk.m
@@ -233,17 +233,17 @@
 ##
 ## @item 2 (@w{@code{GLP_BR_LFV}})
 ## Last fractional variable.
 ##
 ## @item 3 (@w{@code{GLP_BR_MFV}})
 ## Most fractional variable.
 ##
 ## @item 4 (@w{@code{GLP_BR_DTH}})
-## Heuristic by Driebeck and Tomlin.
+## Heuristic by @nospell{Driebeck and Tomlin}.
 ##
 ## @item 5 (@w{@code{GLP_BR_PCH}})
 ## Hybrid @nospell{pseudocost} heuristic.
 ## @end table
 ##
 ## @item btrack (default: 4)
 ## Backtracking technique option (for MIP only):
 ##
diff --git a/scripts/signal/arch_fit.m b/scripts/signal/arch_fit.m
--- a/scripts/signal/arch_fit.m
+++ b/scripts/signal/arch_fit.m
@@ -14,17 +14,17 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{a}, @var{b}] =} arch_fit (@var{y}, @var{x}, @var{p}, @var{iter}, @var{gamma}, @var{a0}, @var{b0})
 ## Fit an ARCH regression model to the time series @var{y} using the
-## scoring algorithm in Engle's original ARCH paper.  The model is
+## scoring algorithm in @nospell{Engle's} original ARCH paper.  The model is
 ##
 ## @example
 ## @group
 ## y(t) = b(1) * x(t,1) + @dots{} + b(k) * x(t,k) + e(t),
 ## h(t) = a(1) + a(2) * e(t-1)^2 + @dots{} + a(p+1) * e(t-p)^2
 ## @end group
 ## @end example
 ##
diff --git a/scripts/signal/bartlett.m b/scripts/signal/bartlett.m
--- a/scripts/signal/bartlett.m
+++ b/scripts/signal/bartlett.m
@@ -16,18 +16,19 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} bartlett (@var{m})
 ## Return the filter coefficients of a Bartlett (triangular) window of
 ## length @var{m}.
 ##
-## For a definition of the Bartlett window, see e.g., A. V. Oppenheim &
-## R. W. Schafer, @cite{Discrete-Time Signal Processing}.
+## For a definition of the Bartlett window, see e.g.,
+## @nospell{A.V. Oppenheim & R. W. Schafer},
+## @cite{Discrete-Time Signal Processing}.
 ## @end deftypefn
 
 ## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description: Coefficients of the Bartlett (triangular) window
 
 function c = bartlett (m)
 
   if (nargin != 1)
diff --git a/scripts/signal/blackman.m b/scripts/signal/blackman.m
--- a/scripts/signal/blackman.m
+++ b/scripts/signal/blackman.m
@@ -15,18 +15,19 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} blackman (@var{m})
 ## Return the filter coefficients of a Blackman window of length @var{m}.
 ##
-## For a definition of the Blackman window, see e.g., A. V. Oppenheim &
-## R. W. Schafer, @cite{Discrete-Time Signal Processing}.
+## For a definition of the Blackman window, see e.g.,
+## @nospell{A.V. Oppenheim & R. W. Schafer},
+## @cite{Discrete-Time Signal Processing}.
 ## @end deftypefn
 
 ## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description: Coefficients of the Blackman window
 
 function c = blackman (m)
 
   if (nargin != 1)
diff --git a/scripts/signal/diffpara.m b/scripts/signal/diffpara.m
--- a/scripts/signal/diffpara.m
+++ b/scripts/signal/diffpara.m
@@ -27,17 +27,17 @@
 ## omitted then @math{a = 0.5 * sqrt (T)} and @math{b = 1.5 * sqrt (T)}
 ## is used, where @math{T} is the sample size.  If @var{x} is a matrix,
 ## the differencing parameter of each column is estimated.
 ##
 ## The estimators for all frequencies in the intervals
 ## described above is returned in @var{dd}.  The value of @var{d} is
 ## simply the mean of @var{dd}.
 ##
-## Reference: P.J. Brockwell & R.A. Davis. @cite{Time Series:
+## Reference: @nospell{P.J. Brockwell & R.A. Davis}. @cite{Time Series:
 ## Theory and Methods}. Springer 1987.
 ## @end deftypefn
 
 ## Author: FL <Friedrich.Leisch@ci.tuwien.ac.at>
 ## Description: Estimate the fractional differencing parameter
 
 function [d, dd] = diffpara (x, a, b)
 
diff --git a/scripts/signal/durbinlevinson.m b/scripts/signal/durbinlevinson.m
--- a/scripts/signal/durbinlevinson.m
+++ b/scripts/signal/durbinlevinson.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} durbinlevinson (@var{c}, @var{oldphi}, @var{oldv})
-## Perform one step of the Durbin-Levinson algorithm.
+## Perform one step of the @nospell{Durbin-Levinson} algorithm.
 ##
 ## The vector @var{c} specifies the autocovariances @code{[gamma_0, @dots{},
 ## gamma_t]} from lag 0 to @var{t}, @var{oldphi} specifies the
 ## coefficients based on @var{c}(@var{t}-1) and @var{oldv} specifies the
 ## corresponding error.
 ##
 ## If @var{oldphi} and @var{oldv} are omitted, all steps from 1 to
 ## @var{t} of the algorithm are performed.
diff --git a/scripts/signal/hamming.m b/scripts/signal/hamming.m
--- a/scripts/signal/hamming.m
+++ b/scripts/signal/hamming.m
@@ -15,18 +15,19 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} hamming (@var{m})
 ## Return the filter coefficients of a Hamming window of length @var{m}.
 ##
-## For a definition of the Hamming window, see e.g., A. V. Oppenheim &
-## R. W. Schafer, @cite{Discrete-Time Signal Processing}.
+## For a definition of the Hamming window, see e.g.,
+## @nospell{A.V. Oppenheim & R. W. Schafer},
+## @cite{Discrete-Time Signal Processing}.
 ## @end deftypefn
 
 ## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description: Coefficients of the Hamming window
 
 function c = hamming (m)
 
   if (nargin != 1)
diff --git a/scripts/signal/hanning.m b/scripts/signal/hanning.m
--- a/scripts/signal/hanning.m
+++ b/scripts/signal/hanning.m
@@ -15,18 +15,19 @@
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} hanning (@var{m})
 ## Return the filter coefficients of a Hanning window of length @var{m}.
 ##
-## For a definition of this window type, see e.g., A. V. Oppenheim &
-## R. W. Schafer, @cite{Discrete-Time Signal Processing}.
+## For a definition of the Hanning window, see e.g.,
+## @nospell{A.V. Oppenheim & R. W. Schafer},
+## @cite{Discrete-Time Signal Processing}.
 ## @end deftypefn
 
 ## Author: AW <Andreas.Weingessel@ci.tuwien.ac.at>
 ## Description: Coefficients of the Hanning window
 
 function c = hanning (m)
 
   if (nargin != 1)
diff --git a/scripts/sparse/eigs.m b/scripts/sparse/eigs.m
--- a/scripts/sparse/eigs.m
+++ b/scripts/sparse/eigs.m
@@ -178,19 +178,19 @@
 ## eigenvalues themselves are returned in @var{d} in the form of a
 ## @var{n}-by-@var{k} matrix, where the elements on the diagonal are the
 ## eigenvalues.
 ## 
 ## Given a third return argument @var{flag}, @code{eigs} returns the status
 ## of the convergence.  If @var{flag} is 0 then all eigenvalues have converged.
 ## Any other value indicates a failure to converge.
 ## 
-## This function is based on the @sc{arpack} package, written by R. Lehoucq,
-## K. Maschhoff, D. Sorensen, and C. Yang.  For more information see
-## @url{http://www.caam.rice.edu/software/ARPACK/}.
+## This function is based on the @sc{arpack} package, written by
+## @nospell{R. Lehoucq, K. Maschhoff, D. Sorensen, and C. Yang}.  For more
+## information see @url{http://www.caam.rice.edu/software/ARPACK/}.
 ## 
 ## @seealso{eig, svds}
 ## @end deftypefn
 
 function varargout = eigs (varargin)
 
   ## For compatibility with Matlab, handle small matrix cases here
   ## that ARPACK does not.
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -198,17 +198,17 @@
 ## References:
 ##
 ## @enumerate
 ## @item
 ## C.T. Kelley, @cite{Iterative Methods for Linear and Nonlinear Equations},
 ## SIAM, 1995. (the base PCG algorithm)
 ##
 ## @item
-## Y. Saad, @cite{Iterative Methods for Sparse Linear Systems}, 
+## @nospell{Y. Saad}, @cite{Iterative Methods for Sparse Linear Systems}, 
 ## @nospell{PWS} 1996. (condition number estimate from PCG)
 ## Revised version of this book is available online at
 ## @url{http://www-users.cs.umn.edu/~saad/books.html}
 ## @end enumerate
 ##
 ## @seealso{sparse, pcr}
 ## @end deftypefn
 
diff --git a/scripts/sparse/pcr.m b/scripts/sparse/pcr.m
--- a/scripts/sparse/pcr.m
+++ b/scripts/sparse/pcr.m
@@ -157,18 +157,18 @@
 ##
 ## [x, flag, relres, iter, resvec] = ...
 ##                    pcr (A, b, [], [], "apply_m"', [], 3)
 ## @end group
 ## @end example
 ##
 ## References:
 ##
-##      [1] W. Hackbusch, @cite{Iterative Solution of Large Sparse Systems of
-##      Equations}, section 9.5.4; Springer, 1994
+## [1] @nospell{W. Hackbusch}, @cite{Iterative Solution of Large Sparse
+## Systems of Equations}, section 9.5.4; Springer, 1994
 ##
 ## @seealso{sparse, pcg}
 ## @end deftypefn
 
 ## Author: Piotr Krzyzanowski <piotr.krzyzanowski@mimuw.edu.pl>
 
 function [x, flag, relres, iter, resvec] = pcr (A, b, tol, maxit, m, x0, varargin)
 
diff --git a/scripts/specfun/ellipke.m b/scripts/specfun/ellipke.m
--- a/scripts/specfun/ellipke.m
+++ b/scripts/specfun/ellipke.m
@@ -28,17 +28,17 @@
 ## @var{m} must be a scalar or real array with -Inf @leq{} @var{m} @leq{} 1.
 ##
 ## The optional input @var{tol} is currently ignored (@sc{matlab} uses this
 ## to allow a faster, less accurate approximation).
 ##
 ## Called with only one output, elliptic integrals of the first kind are
 ## returned.
 ##
-## Reference: Milton Abramowitz and Irene A. Stegun,
+## Reference: Milton @nospell{Abramowitz} and Irene A. @nospell{Stegun},
 ## @cite{Handbook of Mathematical Functions}, Chapter 17, Dover, 1965.
 ## @seealso{ellipj}
 ## @end deftypefn
 
 ## Author: David Billinghurst <David.Billinghurst@riotinto.com>
 ## Author: Paul Kienzle <pkienzle@users.sf.net>
 ## Author: Jaakko Ruohio
 
diff --git a/scripts/special-matrix/gallery.m b/scripts/special-matrix/gallery.m
--- a/scripts/special-matrix/gallery.m
+++ b/scripts/special-matrix/gallery.m
@@ -78,41 +78,41 @@
 ## @deftypefnx {Function File} {@var{a} =} gallery (@dots{}, @var{k})
 ## Create a matrix whose columns repeat cyclically.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {[@var{c}, @var{d}, @var{e}] =} gallery ("dorr", @var{n})
 ## @deftypefnx {Function File} {[@var{c}, @var{d}, @var{e}] =} gallery ("dorr", @var{n}, @var{theta})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("dorr", @dots{})
-## Create a diagonally dominant, ill conditioned, tridiagonal matrix.
+## Create a diagonally dominant, ill-conditioned, tridiagonal matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("dramadah", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("dramadah", @var{n}, @var{k})
 ## Create a (0, 1) matrix whose inverse has large integer entries.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("fiedler", @var{c})
-## Create a symmetric Fiedler matrix.
+## Create a symmetric @nospell{Fiedler} matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("forsythe", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("forsythe", @var{n}, @var{alpha})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("forsythe", @var{n}, @var{alpha}, @var{lambda})
-## Create a Forsythe matrix (a perturbed Jordan block).
+## Create a @nospell{Forsythe} matrix (a perturbed Jordan block).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{f} =} gallery ("frank", @var{n})
 ## @deftypefnx {Function File} {@var{f} =} gallery ("frank", @var{n}, @var{k})
-## Create a Frank matrix (ill conditioned eigenvalues).
+## Create a Frank matrix (ill-conditioned eigenvalues).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{c} =} gallery ("gcdmat", @var{n})
 ## Create a greatest common divisor matrix.
 ##
 ## @var{c} is an @var{n}-by-@var{n} matrix whose values correspond to the
 ## greatest common divisor of its coordinate values, i.e., @var{c}(i,j)
@@ -189,62 +189,62 @@
 ## @deftypefnx {Function File} {@var{a} =} gallery ("jordbloc", @var{n}, @var{lambda})
 ## Create a Jordan block.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{u} =} gallery ("kahan", @var{n})
 ## @deftypefnx {Function File} {@var{u} =} gallery ("kahan", @var{n}, @var{theta})
 ## @deftypefnx {Function File} {@var{u} =} gallery ("kahan", @var{n}, @var{theta}, @var{pert})
-## Create a Kahan matrix (upper trapezoidal).
+## Create a @nospell{Kahan} matrix (upper trapezoidal).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("kms", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("kms", @var{n}, @var{rho})
-## Create a Kac-Murdock-Szego Toeplitz matrix.
+## Create a @nospell{Kac-Murdock-Szego} Toeplitz matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{b} =} gallery ("krylov", @var{a})
 ## @deftypefnx {Function File} {@var{b} =} gallery ("krylov", @var{a}, @var{x})
 ## @deftypefnx {Function File} {@var{b} =} gallery ("krylov", @var{a}, @var{x}, @var{j})
 ## Create a Krylov matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("lauchli", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("lauchli", @var{n}, @var{mu})
-## Create a Lauchli matrix (rectangular).
+## Create a @nospell{Lauchli} matrix (rectangular).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("lehmer", @var{n})
-## Create a Lehmer matrix (symmetric positive definite).
+## Create a @nospell{Lehmer} matrix (symmetric positive definite).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{t} =} gallery ("lesp", @var{n})
 ## Create a tridiagonal matrix with real, sensitive eigenvalues.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("lotkin", @var{n})
-## Create a Lotkin matrix.
+## Create a @nospell{Lotkin} matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("minij", @var{n})
 ## Create a symmetric positive definite matrix MIN(i,j).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("moler", @var{n})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("moler", @var{n}, @var{alpha})
-## Create a Moler matrix (symmetric positive definite).
+## Create a @nospell{Moler} matrix (symmetric positive definite).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {[@var{a}, @var{t}] =} gallery ("neumann", @var{n})
 ## Create a singular matrix from the discrete Neumann problem (sparse).
 ##
 ## @end deftypefn
 ##
@@ -269,17 +269,18 @@
 ##
 ## @deftypefn  {Function File} {@var{q} =} gallery ("orthog", @var{n})
 ## @deftypefnx {Function File} {@var{q} =} gallery ("orthog", @var{n}, @var{k})
 ## Create orthogonal and nearly orthogonal matrices.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("parter", @var{n})
-## Create a Parter matrix (a Toeplitz matrix with singular values near pi).
+## Create a @nospell{Parter} matrix (a Toeplitz matrix with singular values
+## near pi).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{p} =} gallery ("pei", @var{n})
 ## @deftypefnx {Function File} {@var{p} =} gallery ("pei", @var{n}, @var{alpha})
 ## Create a Pei matrix.
 ##
 ## @end deftypefn
@@ -311,18 +312,18 @@
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode}, @var{kl})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("randsvd", @var{n}, @var{kappa}, @var{mode}, @var{kl}, @var{ku})
 ## Create a random matrix with pre-assigned singular values.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("redheff", @var{n})
-## Create a zero and ones matrix of Redheffer associated with the Riemann
-## hypothesis.
+## Create a zero and ones matrix of @nospell{Redheffer} associated with the
+## Riemann hypothesis.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {@var{a} =} gallery ("riemann", @var{n})
 ## Create a matrix associated with the Riemann hypothesis.
 ##
 ## @end deftypefn
 ##
@@ -360,17 +361,18 @@
 ## @deftypefnx {Function File} {@var{a} =} gallery ("tridiag", @var{n}, @var{c}, @var{d}, @var{e})
 ## Create a tridiagonal matrix (sparse).
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{t} =} gallery ("triw", @var{n})
 ## @deftypefnx {Function File} {@var{t} =} gallery ("triw", @var{n}, @var{alpha})
 ## @deftypefnx {Function File} {@var{t} =} gallery ("triw", @var{n}, @var{alpha}, @var{k})
-## Create an upper triangular matrix discussed by Kahan, Golub and Wilkinson.
+## Create an upper triangular matrix discussed by
+## @nospell{Kahan, Golub, and Wilkinson}.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("uniformdata", [@var{M} @var{N} @dots{}], @var{j})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("uniformdata", @var{M}, @var{N}, @dots{}, @var{j})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("uniformdata", @dots{}, "@var{class}")
 ## Create a matrix with random samples from the standard uniform distribution
 ## (range [0,1]).
@@ -385,17 +387,17 @@
 ## The final optional argument determines the class of the resulting matrix.
 ## Possible values for @var{class}: @qcode{"single"}, @qcode{"double"}.
 ## The default is @qcode{"double"}.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn  {Function File} {@var{a} =} gallery ("wathen", @var{nx}, @var{ny})
 ## @deftypefnx {Function File} {@var{a} =} gallery ("wathen", @var{nx}, @var{ny}, @var{k})
-## Create the Wathen matrix.
+## Create the @nospell{Wathen} matrix.
 ##
 ## @end deftypefn
 ##
 ## @deftypefn {Function File} {[@var{a}, @var{b}] =} gallery ("wilk", @var{n})
 ## Create various specific matrices devised/discussed by Wilkinson.
 ##
 ## @end deftypefn
 
diff --git a/scripts/special-matrix/invhilb.m b/scripts/special-matrix/invhilb.m
--- a/scripts/special-matrix/invhilb.m
+++ b/scripts/special-matrix/invhilb.m
@@ -58,17 +58,17 @@
 ##                 \ k-1 /   \k/
 ## @end group
 ## @end example
 ##
 ## @end ifnottex
 ## The validity of this formula can easily be checked by expanding
 ## the binomial coefficients in both formulas as factorials.  It can
 ## be derived more directly via the theory of Cauchy matrices.
-## See J. W. Demmel, @cite{Applied Numerical Linear Algebra}, p. 92.
+## See @nospell{J. W. Demmel}, @cite{Applied Numerical Linear Algebra}, p. 92.
 ##
 ## Compare this with the numerical calculation of @code{inverse (hilb (n))},
 ## which suffers from the ill-conditioning of the Hilbert matrix, and the
 ## finite precision of your computer's floating point arithmetic.
 ## @seealso{hilb}
 ## @end deftypefn
 
 ## Author: Dirk Laurie <dlaurie@na-net.ornl.gov>
diff --git a/scripts/statistics/base/quantile.m b/scripts/statistics/base/quantile.m
--- a/scripts/statistics/base/quantile.m
+++ b/scripts/statistics/base/quantile.m
@@ -68,27 +68,27 @@
 ## estimates are approximately median-unbiased regardless of the distribution
 ## of @var{x}.
 ##
 ## @item Method 9: p(k) = (k - 3/8) / (n + 1/4).  The resulting quantile
 ## estimates are approximately unbiased for the expected order statistics if
 ## @var{x} is normally distributed.
 ## @end enumerate
 ##
-## Hyndman and Fan (1996) recommend method 8.  Maxima, S, and R
+## @nospell{Hyndman and Fan} (1996) recommend method 8.  Maxima, S, and R
 ## (versions prior to 2.0.0) use 7 as their default.  Minitab and SPSS
 ## use method 6.  @sc{matlab} uses method 5.
 ##
 ## References:
 ##
 ## @itemize @bullet
-## @item Becker, R. A., Chambers, J. M. and Wilks, A. R. (1988) The New
-## S Language.  Wadsworth & Brooks/Cole.
+## @item @nospell{Becker, R. A., Chambers, J. M. and Wilks, A. R.} (1988)
+## The New S Language.  Wadsworth & Brooks/Cole.
 ##
-## @item Hyndman, R. J. and Fan, Y. (1996) Sample quantiles in
+## @item @nospell{Hyndman, R. J. and Fan, Y.} (1996) Sample quantiles in
 ## statistical packages, American Statistician, 50, 361--365.
 ##
 ## @item R: A Language and Environment for Statistical Computing;
 ## @url{http://cran.r-project.org/doc/manuals/fullrefman.pdf}.
 ## @end itemize
 ##
 ## Examples:
 ## @c Set example in small font to prevent overfull line
diff --git a/scripts/statistics/tests/kruskal_wallis_test.m b/scripts/statistics/tests/kruskal_wallis_test.m
--- a/scripts/statistics/tests/kruskal_wallis_test.m
+++ b/scripts/statistics/tests/kruskal_wallis_test.m
@@ -13,17 +13,17 @@
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{pval}, @var{k}, @var{df}] =} kruskal_wallis_test (@var{x1}, @dots{})
-## Perform a Kruskal-Wallis one-factor analysis of variance.
+## Perform a @nospell{Kruskal-Wallis} one-factor analysis of variance.
 ##
 ## Suppose a variable is observed for @var{k} > 1 different groups, and
 ## let @var{x1}, @dots{}, @var{xk} be the corresponding data vectors.
 ##
 ## Under the null hypothesis that the ranks in the pooled sample are not
 ## affected by the group memberships, the test statistic @var{k} is
 ## approximately chi-square with @var{df} = @var{k} - 1 degrees of
 ## freedom.
@@ -31,17 +31,17 @@
 ## If the data contains ties (some value appears more than once)
 ## @var{k} is divided by
 ##
 ## 1 - @var{sum_ties} / (@var{n}^3 - @var{n})
 ##
 ## where @var{sum_ties} is the sum of @var{t}^2 - @var{t} over each group
 ## of ties where @var{t} is the number of ties in the group and @var{n}
 ## is the total number of values in the input data.  For more info on
-## this adjustment see William H. Kruskal and W. Allen Wallis,
+## this adjustment see @nospell{William H. Kruskal and W. Allen Wallis},
 ## @cite{Use of Ranks in One-Criterion Variance Analysis}, 
 ## Journal of the American Statistical Association, Vol. 47,
 ## No. 260 (Dec 1952).
 ##
 ## The p-value (1 minus the CDF of this distribution at @var{k}) is
 ## returned in @var{pval}.
 ##
 ## If no output argument is given, the p-value is displayed.
diff --git a/scripts/statistics/tests/manova.m b/scripts/statistics/tests/manova.m
--- a/scripts/statistics/tests/manova.m
+++ b/scripts/statistics/tests/manova.m
@@ -23,17 +23,17 @@
 ## taken from @var{k} different groups are all equal.  All data are
 ## assumed drawn independently from p-dimensional normal distributions
 ## with the same covariance matrix.
 ##
 ## The data matrix is given by @var{x}.  As usual, rows are observations
 ## and columns are variables.  The vector @var{g} specifies the
 ## corresponding group labels (e.g., numbers from 1 to @var{k}).
 ##
-## The LR test statistic (Wilks' Lambda) and approximate p-values are
+## The LR test statistic (@nospell{Wilks' Lambda}) and approximate p-values are
 ## computed and displayed.
 ## @end deftypefn
 
 ## The Hotelling-Lawley and Pillai-Bartlett test statistics are coded.
 ## However, they are currently disabled until they can be verified by someone
 ## with sufficient understanding of the algorithms.  Please feel free to
 ## improve this.
 
diff --git a/scripts/statistics/tests/mcnemar_test.m b/scripts/statistics/tests/mcnemar_test.m
--- a/scripts/statistics/tests/mcnemar_test.m
+++ b/scripts/statistics/tests/mcnemar_test.m
@@ -14,18 +14,18 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{pval}, @var{chisq}, @var{df}] =} mcnemar_test (@var{x})
 ## For a square contingency table @var{x} of data cross-classified on
-## the row and column variables, McNemar's test can be used for testing
-## the null hypothesis of symmetry of the classification probabilities.
+## the row and column variables, @nospell{McNemar's} test can be used for
+## testing the null hypothesis of symmetry of the classification probabilities.
 ##
 ## Under the null, @var{chisq} is approximately distributed as chisquare
 ## with @var{df} degrees of freedom.
 ##
 ## The p-value (1 minus the CDF of this distribution at @var{chisq}) is
 ## returned in @var{pval}.
 ##
 ## If no output argument is given, the p-value of the test is displayed.
