# HG changeset patch
# User Carnë Draug <carandraug@octave.org>
# Date 1373081284 -3600
#      Sat Jul 06 04:28:04 2013 +0100
# Node ID bfad37d334352c5b28886298bd93935812cf3145
# Parent  562301c71bd3d2a70fac2501cae32355a60fa725
Connect imfinfo with imformats.

* private/core_imfinfo.m: new function. Old code from imfinfo()
  moved here so that imformats() can create function handle to
  this part of the code only otherwise imfinfo() would get stuck
  into an endless loop, calling itself while respecting imformats()
  configuration.
* private/imageIO.m: new function. Responsible for connecting the
  image IO functions with imformats(), and calling the correct
  function. Will later also be used by imread and imwrite.
* imfinfo.m: reduced to minimum input check, until finding
  filename. Passes all arguments to new function imageIO().
* imformats.m: change calls to imfinfo() to the new core_imfinfo().

diff --git a/scripts/image/imfinfo.m b/scripts/image/imfinfo.m
--- a/scripts/image/imfinfo.m
+++ b/scripts/image/imfinfo.m
@@ -104,54 +104,15 @@
 ## @end table
 ##
 ## @seealso{imread, imwrite, imshow}
 ## @end deftypefn
 
 ## Author: Soren Hauberg <hauberg@gmail.com>
 
 function info = imfinfo (filename)
-
   if (nargin < 1)
     print_usage ();
-  endif
-
-  if (! ischar (filename))
+  elseif (! ischar (filename))
     error ("imfinfo: FILENAME must be a string");
   endif
-
-  filename = tilde_expand (filename);
-
-  delete_file = false;
-
-  unwind_protect
-
-    fn = file_in_path (IMAGE_PATH, filename);
-
-    if (isempty (fn))
-
-      ## Couldn't find file. See if it's an URL.
-
-      tmp = tmpnam ();
-
-      [fn, status, msg] = urlwrite (filename, tmp);
-
-      if (! status)
-        error ("imfinfo: cannot find %s", filename);
-      endif
-
-      if (! isempty (fn))
-        delete_file = true;
-      endif
-
-    endif
-
-    info = __magick_finfo__ (fn);
-
-  unwind_protect_cleanup
-
-    if (delete_file)
-      unlink (fn);
-    endif
-
-  end_unwind_protect
-
+  info = imageIO (@core_imfinfo, "info", filename, filename);
 endfunction
diff --git a/scripts/image/imformats.m b/scripts/image/imformats.m
--- a/scripts/image/imformats.m
+++ b/scripts/image/imformats.m
@@ -236,17 +236,17 @@ function formats = default_formats ()
     formats(fidx).coder = coders{fidx, 1};
     formats(fidx).ext   = coders{fidx, 2};
     formats(fidx).alpha = coders{fidx, 3};
     ## default isa is to check if the format returned by imfinfo is the coder
     formats(fidx).isa   = @(x) isa_magick (coders{fidx,1}, x);
   endfor
 
   ## the default info, read, and write functions
-  [formats.info ] = deal (@imfinfo);
+  [formats.info ] = deal (@core_imfinfo);
   [formats.read ] = deal (@imread);
   [formats.write] = deal (@imread);
 
   ## fills rest of format information by checking with GraphicsMagick
   formats = __magick_formats__ (formats);
 endfunction
 
 function is_valid_format (format)
@@ -265,12 +265,12 @@ function match = find_ext_idx (formats, 
   ##      Should this function prevent the addition of
   ##      duplicated extensions?
   match = cellfun (@(x) any (strcmp (x, ext)), {formats.ext});
 endfunction
 
 function bool = isa_magick (coder, filename)
   bool = false;
   try
-    info = imfinfo (filename);
+    info = core_imfinfo (filename);
     bool = strcmp (coder, info.Format);
   end_try_catch
 endfunction
diff --git a/scripts/image/private/core_imfinfo.m b/scripts/image/private/core_imfinfo.m
new file mode 100644
--- /dev/null
+++ b/scripts/image/private/core_imfinfo.m
@@ -0,0 +1,61 @@
+## Copyright (C) 2008-2012 Soren Hauberg
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## This function does al the work of imfinfo. It exists here as private
+## function so that imfinfo can use other functions if imformats is
+## configured to. It is also needed so that imformats can create a
+## function handle for it.
+
+## Author: Soren Hauberg <hauberg@gmail.com>
+
+function info = core_imfinfo (filename)
+
+  if (nargin < 1)
+    print_usage ("imfinfo");
+  endif
+
+  if (! ischar (filename))
+    error ("imfinfo: FILENAME must be a string");
+  endif
+  filename = tilde_expand (filename);
+
+  delete_file = false;
+  unwind_protect
+
+    fn = file_in_path (IMAGE_PATH, filename);
+
+    if (isempty (fn))
+      ## Couldn't find file. See if it's an URL.
+      [fn, status, msg] = urlwrite (filename, tmpnam ());
+      if (! status)
+        error ("imfinfo: cannot find %s", filename);
+      endif
+
+      if (! isempty (fn))
+        delete_file = true;
+      endif
+    endif
+    info = __magick_finfo__ (fn);
+
+  unwind_protect_cleanup
+    if (delete_file)
+      unlink (fn);
+    endif
+  end_unwind_protect
+
+endfunction
diff --git a/scripts/image/private/imageIO.m b/scripts/image/private/imageIO.m
new file mode 100644
--- /dev/null
+++ b/scripts/image/private/imageIO.m
@@ -0,0 +1,47 @@
+## Copyright (C) 2013 Carnë Draug
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## This function simply connects the function that call it to all
+## other imageIO functions. It does it by checking the file extension
+## of the file and redirecting to the appropriate function after checking
+## with imformats.
+##
+## First argument is a function handle for the default imageIO function (what
+## to use if the extensino is not listed by imformats), second argument is
+## the fieldname in the struct returned by imformats with a function handle
+## for the function to use, and all the others are the input argument mean for
+## the destination function.
+##
+## No input checking whatsoever is performed. That is already done by the
+## function calling it.
+
+function varargout = imageIO (core_func, fieldname, filename, varargin)
+  [~, ~, ext] = fileparts (filename);
+  ## remove dot from extension
+  if (! isempty (ext) && strcmp (ext(1), "."));
+    ext(1) = [];
+  endif
+  fmt = imformats ("ext");
+  ## When there is no match, fmt will be a 1x1 structure with no fields,
+  ## so we can't just use isempty ().
+  if (isempty (fieldnames (fmt)))
+    varargout{1:nargout} = core_func (varargin{:});
+  else
+    varargout{1:nargout} = fmt.(fieldname) (varargin{:});
+  endif
+endfunction
