# HG changeset patch
# User jwe
# Date 1165355385 0
#      Tue Dec 05 21:49:45 2006 +0000
# Node ID e5ed0d1edddc9fdc4c6f27d567504b84b1182f0b
# Parent  42efaffa4f08902706bdb1a2440309c4f7d0682d
[project @ 2006-12-05 21:49:44 by jwe]

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,14 @@
+2006-12-05  John W. Eaton  <jwe@octave.org>
+
+	* lo-utils.cc (octave_read_double): If we see '+' or '-' but not
+	followed by 'I' or 'i', try reading number after putting
+	characters back on input stream.
+
 2006-12-05  Paul Kienzle  <pkienzle@users.sf.net>
 
 	* randpoisson.c (oct_fill_randp): For lambda > 1e8, upper limit of
 	loop is n, not L.
 
 2006-11-30  John W. Eaton  <jwe@octave.org>
 
 	* lo-utils.cc (octave_read_double, read_inf_nan_na):
diff --git a/liboctave/lo-utils.cc b/liboctave/lo-utils.cc
--- a/liboctave/lo-utils.cc
+++ b/liboctave/lo-utils.cc
@@ -273,30 +273,32 @@ octave_read_double (std::istream& is)
 	char c2 = 0;
 	is >> c2;
 	if (c2 == 'i' || c2 == 'I')
 	  d = read_inf_nan_na (is, c2, c1);
 	else
 	  {
 	    is.putback (c2);
 	    is.putback (c1);
+	    is >> d;
 	  }
       }
       break;
 
     case '+':
       {
 	char c2 = 0;
 	is >> c2;
 	if (c2 == 'i' || c2 == 'I')
 	  d = read_inf_nan_na (is, c2, c1);
 	else
 	  {
 	    is.putback (c2);
 	    is.putback (c1);
+	    is >> d;
 	  }
       }
       break;
 
     case 'i': case 'I':
     case 'n': case 'N':
       d = read_inf_nan_na (is, c1);
       break;
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2006-12-05  John W. Eaton  <jwe@octave.org>
 
+	* ls-oct-ascii.cc (extract_keyword): If no match and looking for
+	more, skip to end of line before trying another match.
+
 	* pt-mat.cc (tm_row_const::empty): New function.
 	(tm_const::init): Don't append anything if tmp tm_row_const object
 	is empty.
 	(tree_matrix::rvalue): Default return value is Matrix().
 	Don't do anything if tmp tm_const object is empty.
 
 	* dirfns.cc (Fmkdir): Fix thinko in previous change.
 
diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -355,16 +355,17 @@ get_file_format (std::istream& file)
   oct_mach_info::float_format flt_fmt = oct_mach_info::flt_fmt_unknown;
 
   bool swap = false;
 
   if (read_binary_file_header (file, swap, flt_fmt, true) == 0)
     retval = LS_BINARY;
   else
     {
+      file.clear ();
       file.seekg (0, std::ios::beg);
 
       int32_t mopt, nr, nc, imag, len;
 
       int err = read_mat_file_header (file, swap, mopt, nr, nc, imag, len, 1);
 
       if (! err)
 	retval = LS_MAT_BINARY;
diff --git a/src/ls-oct-ascii.cc b/src/ls-oct-ascii.cc
--- a/src/ls-oct-ascii.cc
+++ b/src/ls-oct-ascii.cc
@@ -116,16 +116,21 @@ extract_keyword (std::istream& is, const
 		    value << c;
 		}
 
 	      retval = value.str ();
 	      break;
 	    }
 	  else if (next_only)
 	    break;
+	  else
+	    {
+	      while (is.get (c) && c != '\n')
+		; // Skip to end of line.
+	    }
 	}
     }
 
   int len = retval.length ();
 
   if (len > 0)
     {
       while (len)
