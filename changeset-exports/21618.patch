# HG changeset patch
# User Rik <rik@octave.org>
# Date 1460581299 25200
#      Wed Apr 13 14:01:39 2016 -0700
# Node ID d8d0020bf1e986c361cf28ef6e69840fe318b28b
# Parent  1fff60b89786c0770d65566d4589ea7c305dba43
Fix hang when querying dbstack (bug #47605).

* toplev.cc (do_debug_user_code, do_debug_user_code_line,
do_debug_user_code_column): Correct oversight where while loop
variable i was never decremented.

diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -314,17 +314,17 @@ octave_call_stack::do_debug_user_code (v
   if (curr_frame == 0)
     return retval;
 
   // Start looking with the caller of the calling debug function.
   size_t i = cs[curr_frame].m_prev;
 
   while (i != 0)
     {
-      const stack_frame& elt = cs[i];
+      const stack_frame& elt = cs[i--];
 
       octave_function *f = elt.m_fcn;
 
       if (f && f->is_user_code ())
         {
           retval = dynamic_cast<octave_user_code *> (f);
           break;
         }
@@ -342,17 +342,17 @@ octave_call_stack::do_debug_user_code_li
   if (curr_frame == 0)
     return retval;
 
   // Start looking with the caller of the calling debug function.
   size_t i = cs[curr_frame].m_prev;
 
   while (i != 0)
     {
-      const stack_frame& elt = cs[i];
+      const stack_frame& elt = cs[i--];
 
       octave_function *f = elt.m_fcn;
 
       if (f && f->is_user_code ())
         {
           if (elt.m_line)
             {
               retval = elt.m_line;
@@ -373,17 +373,17 @@ octave_call_stack::do_debug_user_code_co
   if (curr_frame == 0)
     return retval;
 
   // Start looking with the caller of the calling debug function.
   size_t i = cs[curr_frame].m_prev;
 
   while (i != 0)
     {
-      const stack_frame& elt = cs[i];
+      const stack_frame& elt = cs[i--];
 
       octave_function *f = elt.m_fcn;
 
       if (f && f->is_user_code ())
         {
           if (elt.m_column)
             {
               retval = elt.m_column;
