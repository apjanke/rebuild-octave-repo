# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1317829955 25200
#      Wed Oct 05 08:52:35 2011 -0700
# Node ID d5c8c2fe2eed7bb6c287c4c07bdf670f0b21c463
# Parent  635db52feab4fdbe89de10dd95441d28cf53e875
speed.m: Further fixes for 2 speed tests (Bug #34234)

* speed.m: Check only that size of T_f2 is in range 10-15.  It need
not match size of n or T_f1.

diff --git a/scripts/testfun/speed.m b/scripts/testfun/speed.m
--- a/scripts/testfun/speed.m
+++ b/scripts/testfun/speed.m
@@ -151,17 +151,17 @@
 ## FIXME: consider two dimensional speedup surfaces for functions like kron.
 function [__order, __test_n, __tnew, __torig] = speed (__f1, __init, __max_n, __f2, __tol)
 
   if (nargin < 1 || nargin > 6)
     print_usage ();
   endif
 
   if (nargin < 2 || isempty (__init))
-    __init = "x = randn(n, 1);";
+    __init = "x = randn (n, 1);";
   endif
 
   if (nargin < 3 || isempty (__max_n))
     __max_n = 100;
   endif
 
   if (nargin < 4)
     __f2 = [];
@@ -391,32 +391,29 @@ endfunction
 
 %!test
 %! [order, n, T_f1, T_f2] = speed ("airy (x)", "x = rand (n, 10)", [100, 1000]);
 %! assert (isstruct (order));
 %! assert (size (order), [1, 1]);
 %! assert (fieldnames (order), {"p"; "a"});
 %! assert (isnumeric (n));
 %! assert (length (n) > 10);
-%! n_sz = size (n); 
 %! assert (isnumeric (T_f1));
-%! assert (size (T_f1), n_sz);
+%! assert (size (T_f1), size (n));
 %! assert (isnumeric (T_f2));
-%! assert (size (T_f2), n_sz);
+%! assert (length (T_f2) > 10);
 
 %!test
-%! [order, n, T_f1, T_f2] = speed ("sum (x)", "", [100, 1000], "v = 0; for i = 1:length (x), v += x(i); end");
+%! [order, n, T_f1, T_f2] = speed ("sum (x)", "", [100, 1000], "v = 0; for i = 1:length (x), v += x(i); endfor");
 %! assert (isstruct (order));
 %! assert (size (order), [1, 1]);
 %! assert (fieldnames (order), {"p"; "a"});
 %! assert (isnumeric (n));
 %! assert (length (n) > 10);
-%! n_sz = size (n); 
-%! assert (size (n), [1, 15]);
 %! assert (isnumeric (T_f1));
-%! assert (size (T_f1), n_sz);
+%! assert (size (T_f1), size (n));
 %! assert (isnumeric (T_f2));
-%! assert (size (T_f2), n_sz);
+%! assert (length (T_f2) > 10);
 
 %% Test input validation
 %!error speed ();
 %!error speed (1, 2, 3, 4, 5, 6, 7);
 
