# HG changeset patch
# User jwe
# Date 777599092 0
#      Mon Aug 22 23:44:52 1994 +0000
# Node ID e045273669176097f6be6d3648b5d09d6a4a449d
# Parent  39b315350976c0380238098fe3ae1b669c384b25
[project @ 1994-08-22 23:44:52 by jwe]

diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -275,31 +275,29 @@ check_dimensions (int& nr, int& nc, cons
 	       warnfor);
     }
 }
 
 static void
 get_dimensions (const tree_constant& a, const char *warn_for,
 		int& nr, int& nc)
 {
-  tree_constant tmpa = a;
-
-  if (tmpa.is_scalar_type ())
+  if (a.is_scalar_type ())
     {
-      double tmp = tmpa.double_value ();
+      double tmp = a.double_value ();
       nr = nc = NINT (tmp);
     }
   else
     {
-      nr = tmpa.rows ();
-      nc = tmpa.columns ();
+      nr = a.rows ();
+      nc = a.columns ();
 
       if ((nr == 1 && nc == 2) || (nr == 2 && nc == 1))
 	{
-	  ColumnVector v = tmpa.vector_value ();
+	  ColumnVector v = a.vector_value ();
 
 	  if (error_state)
 	    return;
 
 	  nr = NINT (v.elem (0));
 	  nc = NINT (v.elem (1));
 	}
       else
@@ -308,28 +306,23 @@ get_dimensions (const tree_constant& a, 
 
   check_dimensions (nr, nc, warn_for); // May set error_state.
 }
 
 static void
 get_dimensions (const tree_constant& a, const tree_constant& b,
 		const char *warn_for, int& nr, int& nc)
 {
-  tree_constant tmpa = a;
-  tree_constant tmpb = b;
+  nr = NINT (a.double_value ());
+  nc = NINT (b.double_value ());
 
-  if (tmpa.is_scalar_type () && tmpb.is_scalar_type ())
-    {
-      nr = NINT (tmpa.double_value ());
-      nc = NINT (tmpb.double_value ());
-
-      check_dimensions (nr, nc, warn_for); // May set error_state.
-    }
+  if (error_state)
+    error ("%s: expecting two scalar arguments", warn_for);
   else
-    error ("%s: expecting two scalar arguments", warn_for);
+    check_dimensions (nr, nc, warn_for); // May set error_state.
 }
 
 static tree_constant
 fill_matrix (const tree_constant& a, double val, const char *warn_for)
 {
   int nr, nc;
   get_dimensions (a, warn_for, nr, nc);
 
