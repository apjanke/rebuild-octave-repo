# HG changeset patch
# User jwe
# Date 822899798 0
#      Mon Jan 29 07:16:38 1996 +0000
# Node ID 4100e0cb00a1825e55c4f7f76d8d397bbd5231c6
# Parent  72b1c55692a224f9a3b08e7348a14ed97bb47dc8
[project @ 1996-01-29 07:16:15 by jwe]

diff --git a/src/parse.h b/src/parse.h
--- a/src/parse.h
+++ b/src/parse.h
@@ -23,17 +23,16 @@ Software Foundation, 59 Temple Place - S
 
 #if !defined (octave_parse_h)
 #define octave_parse_h 1
 
 #include <string>
 
 #include "SLStack.h"
 
-extern void discard_until (char c);
 extern void reset_parser (void);
 extern int yylex (void);
 extern int yyparse (void);
 
 class tree;
 class tree_matrix;
 class tree_identifier;
 class symbol_table;
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -90,87 +90,16 @@ strsave (const char *s)
     return 0;
 
   int len = strlen (s);
   char *tmp = new char [len+1];
   tmp = strcpy (tmp, s);
   return tmp;
 }
 
-#if 0
-
-// Concatenate two strings.
-
-char *
-strconcat (const char *s, const char *t)
-{
-  int len = strlen (s) + strlen (t);
-  char *tmp = new char [len+1];
-  strcpy (tmp, s);
-  strcat (tmp, t);
-  return tmp;
-}
-#endif
-
-// Throw away input until a given character is read.
-
-void
-discard_until (istream& stream, char character)
-{
-  int c;
-  for (;;)
-    {
-      stream >> c;
-      if (c == EOF || c == character)
-	break;
-    }
-  if (c != EOF)
-    stream.putback ((char) c);
-} 
-
-#if 0
-
-// XXX UNTESTED XXX
-
-// Read input until a given character is read.  Returns characters
-// read in a new string that must be freed by the caller.
-
-char *
-read_until (istream& stream, char character)
-{
-  int grow_size = 8;
-  int limit = grow_size;
-  char *buf = new char [limit];
-  char *bp = buf;
-
- get_more:
-  is.getline (bp, limit, character);
-
-  if (is.gcount () == 0)
-    {
-      delete [] buf;
-      return 0;
-    }
-
-  if (is.gcount () == limit && buf[limit-1] != '\0')
-    {
-      char *tmp = new char [limit + grow_size];
-      strcpy (tmp, buf);
-      delete [] buf;
-      buf = tmp;
-      bp = tmp + limit - 1;
-      limit += grow_size;
-      grow_size *= 2;
-      goto get_more;
-    }
-
-  return buf;
-}
-#endif
-
 // Return to the main command loop in octave.cc.
 
 extern "C" void
 jump_to_top_level (void)
 {
   run_all_unwind_protects ();
 
   longjmp (toplevel, 1);
diff --git a/src/utils.h b/src/utils.h
--- a/src/utils.h
+++ b/src/utils.h
@@ -29,26 +29,16 @@ class ostrstream;
 
 #include <string>
 
 class Octave_object;
 class string_vector;
 
 extern char *strsave (const char *);
 
-#if 0
-extern char *strconcat (const char *, const char *);
-#endif
-
-extern void discard_until (istream&, char);
-
-#if 0
-extern char *read_until (istream&, char);
-#endif
-
 extern string search_path_for_file (const string&, const string&);
 extern string file_in_path (const string&, const string&);
 extern string fcn_file_in_path (const string&);
 extern string oct_file_in_path (const string&);
 
 extern "C" void jump_to_top_level (void) NORETURN;
 
 extern int almost_match (const string& std, const string& s,
