# HG changeset patch
# User CarnÃ« Draug <carandraug@octave.org>
# Date 1542282838 0
#      Thu Nov 15 11:53:58 2018 +0000
# Node ID 1861e2ea0a4b4d03a36af886f64d54293ca2064d
# Parent  1ee1ddeee5ac404e6f15ccdaeb5696d40f358099
gnuplot_binary: use unwind_protect instead of try/catch (bug #55023)

* scripts/plot/util/gnuplot_binary.in.m: we always have a cleanup code
  to run so use unwind_protect_cleanup instead of duplicating the code
  in the try and catch blocks.  Move code outside the block if it
  doesn't need cleanup (some asserts), and make sure we have the code
  needed for the cleanup before entering the unwind_protect block.

diff --git a/scripts/plot/util/gnuplot_binary.in.m b/scripts/plot/util/gnuplot_binary.in.m
--- a/scripts/plot/util/gnuplot_binary.in.m
+++ b/scripts/plot/util/gnuplot_binary.in.m
@@ -56,21 +56,20 @@ function [prog, args] = gnuplot_binary (
     endif
     gp_args = varargin;
   endif
 
 endfunction
 
 
 %!test
-%! try
-%!   [orig_val, orig_args] = gnuplot_binary ();
+%! [orig_val, orig_args] = gnuplot_binary ();
+%! unwind_protect
 %!   [old_val, old_args] = gnuplot_binary ("__foobar__", "-opt1");
 %!   assert (orig_val, old_val);
 %!   assert (orig_args, old_args);
 %!   assert (gnuplot_binary (), "__foobar__");
 %!   [~, new_args] = gnuplot_binary ();
 %!   assert (new_args, {"-opt1"});
+%! unwind_protect_cleanup
 %!   gnuplot_binary (orig_val, orig_args{:});
-%!   assert (gnuplot_binary (), orig_val);
-%! catch
-%!   gnuplot_binary (orig_val, orig_args{:});
-%! end_try_catch
+%! end_unwind_protect
+%! assert (gnuplot_binary (), orig_val);
