# HG changeset patch
# User jwe
# Date 1142538434 0
#      Thu Mar 16 19:47:14 2006 +0000
# Node ID 40b08b29dd538ed1bdc5635022d034c5666b9bd1
# Parent  f39adfd0913d798d00914eabafe096a9c98b236a
[project @ 2006-03-16 19:47:14 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,20 @@
+2006-03-16  John W. Eaton  <jwe@octave.org>
+
+	* __gnuplot_raw__.l (F__gnuplot_show__): Temporarily use DEFCMD
+	instead of DEFUN.
+	(symbols_of___gnuplot_raw__): Temporarily ark __gnuplot_plot__,
+	__gnuplot_set__, __gnuplot_splot__, and __gnuplot_replot__ as raw
+	commands.
+
+	* variables.cc (is_marked_as_rawcommand, unmark_rawcommand,
+	mark_as_rawcommand): Temporarily not static.
+	* variables.h: Temporarily Provide decls.
+
 2006-03-16  David Bateman  <dbateman@free.fr>
 
 	* sparse-xdiv.cc (result_ok): delete.
 	(xdiv, xleftdiv): Simplify to use version of SpareMatrix::solve
 	and SparseComplexMatrix::solve which internally treats rectangular
 	and singular matrices.
 	* DLD-FUNCTIONS/luinc.cc: Remove error test for singular matrix as
 	QR solver now implemented.
diff --git a/src/__gnuplot_raw__.l b/src/__gnuplot_raw__.l
--- a/src/__gnuplot_raw__.l
+++ b/src/__gnuplot_raw__.l
@@ -1580,16 +1580,22 @@ symbols_of___gnuplot_raw__ (void)
 {
   static bool gnuplot_initialized = false;
 
   if (gnuplot_initialized)
     return;
 
   gnuplot_initialized = true;
 
+  // This is temporary.
+  mark_as_rawcommand ("__gnuplot_plot__");
+  mark_as_rawcommand ("__gnuplot_set__");
+  mark_as_rawcommand ("__gnuplot_splot__");
+  mark_as_rawcommand ("__gnuplot_replot__");
+
   if (is_builtin_variable ("automatic_replot"))
     automatic_replot ();
   else
     DEFVAR (automatic_replot, true, automatic_replot,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} automatic_replot\n\
 You can tell Octave to redisplay the plot each time anything about it\n\
 changes by setting the value of the builtin variable\n\
@@ -1766,17 +1772,17 @@ Set plotting options for gnuplot\n\
   string_vector argv = args.make_argv ("set");
 
   if (! error_state)
     gnuplot::set (argv);
 
   return octave_value_list ();
 }
 
-DEFUN (__gnuplot_show__, args, ,
+DEFCMD (__gnuplot_show__, args, ,
   "-*- texinfo -*-\n\
 @deffn {Command} __gnuplot_show__ options\n\
 Show plotting options.\n\
 @end deffn")
 {
   string_vector argv = args.make_argv ("show");
 
   if (! error_state)
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -271,30 +271,30 @@ mark_as_command.\n\
 
   return retval;
 }
 
 // Is this a raw input command?
 
 static std::set <std::string> rawcommand_set;
 
-static inline bool
+bool
 is_marked_as_rawcommand (const std::string& s)
 {
   return rawcommand_set.find (s) != rawcommand_set.end ();
 }
 
-static inline void
+void
 mark_as_rawcommand (const std::string& s)
 {
   command_set.insert (s);    
   rawcommand_set.insert (s);
 }
 
-static inline void
+void
 unmark_rawcommand (const std::string& s)
 {
   rawcommand_set.erase (s);
 
   symbol_record *sr = fbi_sym_tab->lookup (s);
 
   if (sr)
     sr->unmark_rawcommand ();
diff --git a/src/variables.h b/src/variables.h
--- a/src/variables.h
+++ b/src/variables.h
@@ -43,16 +43,22 @@ class string_vector;
 #include "symtab.h"
 
 extern bool at_top_level (void);
 
 extern void initialize_symbol_tables (void);
 
 extern bool is_builtin_variable (const std::string&);
 extern bool is_command_name (const std::string&);
+
+// The next three are here temporarily...
+extern bool is_marked_as_rawcommand (const std::string& s);
+extern void mark_as_rawcommand (const std::string& s);
+extern void unmark_rawcommand (const std::string& s);
+
 extern bool is_rawcommand_name (const std::string&);
 extern bool is_mapper_function_name (const std::string&);
 extern bool is_builtin_function_name (const std::string&);
 extern bool is_globally_visible (const std::string&);
 
 extern octave_function *
 is_valid_function (const octave_value&, const std::string& = std::string (),
 		   bool warn = false); 
