# HG changeset patch
# User Rik <rik@octave.org>
# Date 1416593375 28800
#      Fri Nov 21 10:09:35 2014 -0800
# Node ID 3a2a0b72b91b28fae49c44e2429f1e46752b833e
# Parent  16cdbe882ff52eb83da15c290df4d43fc79b60f7
Swap row vector for column vector in cset d47e50953abc.

* CmplxQR.cc (shift_cols): Use column vector in Array constructor.

* dbleQR.cc (shift_cols): Use column vector in Array constructor.

* fCmplxQR.cc: (shift_cols): Use column vector in Array constructor.

* floatQR.cc: (shift_cols): Use column vector in Array constructor.

diff --git a/liboctave/numeric/CmplxQR.cc b/liboctave/numeric/CmplxQR.cc
--- a/liboctave/numeric/CmplxQR.cc
+++ b/liboctave/numeric/CmplxQR.cc
@@ -544,17 +544,17 @@ ComplexMatrix delete_row (const ComplexM
   return retval;
 }
 
 static
 ComplexMatrix shift_cols (const ComplexMatrix& a,
                           octave_idx_type i, octave_idx_type j)
 {
   octave_idx_type n = a.columns ();
-  Array<octave_idx_type> p (dim_vector (1, n));
+  Array<octave_idx_type> p (dim_vector (n, 1));
   for (octave_idx_type k = 0; k < n; k++) p(k) = k;
   if (i < j)
     {
       for (octave_idx_type k = i; k < j; k++) p(k) = k+1;
       p(j) = i;
     }
   else if (j < i)
     {
diff --git a/liboctave/numeric/dbleQR.cc b/liboctave/numeric/dbleQR.cc
--- a/liboctave/numeric/dbleQR.cc
+++ b/liboctave/numeric/dbleQR.cc
@@ -539,17 +539,17 @@ Matrix delete_row (const Matrix& a, octa
   return retval;
 }
 
 static
 Matrix shift_cols (const Matrix& a,
                    octave_idx_type i, octave_idx_type j)
 {
   octave_idx_type n = a.columns ();
-  Array<octave_idx_type> p (dim_vector (1, n));
+  Array<octave_idx_type> p (dim_vector (n, 1));
   for (octave_idx_type k = 0; k < n; k++) p(k) = k;
   if (i < j)
     {
       for (octave_idx_type k = i; k < j; k++) p(k) = k+1;
       p(j) = i;
     }
   else if (j < i)
     {
diff --git a/liboctave/numeric/fCmplxQR.cc b/liboctave/numeric/fCmplxQR.cc
--- a/liboctave/numeric/fCmplxQR.cc
+++ b/liboctave/numeric/fCmplxQR.cc
@@ -552,17 +552,17 @@ FloatComplexMatrix delete_row (const Flo
   return retval;
 }
 
 static
 FloatComplexMatrix shift_cols (const FloatComplexMatrix& a,
                                octave_idx_type i, octave_idx_type j)
 {
   octave_idx_type n = a.columns ();
-  Array<octave_idx_type> p (dim_vector (1, n));
+  Array<octave_idx_type> p (dim_vector (n, 1));
   for (octave_idx_type k = 0; k < n; k++) p(k) = k;
   if (i < j)
     {
       for (octave_idx_type k = i; k < j; k++) p(k) = k+1;
       p(j) = i;
     }
   else if (j < i)
     {
diff --git a/liboctave/numeric/floatQR.cc b/liboctave/numeric/floatQR.cc
--- a/liboctave/numeric/floatQR.cc
+++ b/liboctave/numeric/floatQR.cc
@@ -537,17 +537,17 @@ FloatMatrix delete_row (const FloatMatri
   return retval;
 }
 
 static
 FloatMatrix shift_cols (const FloatMatrix& a,
                         octave_idx_type i, octave_idx_type j)
 {
   octave_idx_type n = a.columns ();
-  Array<octave_idx_type> p (dim_vector (1, n));
+  Array<octave_idx_type> p (dim_vector (n, 1));
   for (octave_idx_type k = 0; k < n; k++) p(k) = k;
   if (i < j)
     {
       for (octave_idx_type k = i; k < j; k++) p(k) = k+1;
       p(j) = i;
     }
   else if (j < i)
     {
