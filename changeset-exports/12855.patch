# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1310864415 25200
#      Sat Jul 16 18:00:15 2011 -0700
# Node ID 8f5bd903ba68b6af0c4b6c8c6ceb63f0f2539499
# Parent  4e9576618df87de0a8336120299ddd32ae0411de
codesprint: Correct typos in previous check-ins to get tests running.

* powerset.m: Remove extra parenthesis
* defaults.cc, octave.cc: Add missing parenthesis

diff --git a/scripts/set/powerset.m b/scripts/set/powerset.m
--- a/scripts/set/powerset.m
+++ b/scripts/set/powerset.m
@@ -75,9 +75,9 @@ function p = powerset (a, byrows_arg)
   endif
 
 endfunction
 
 
 %!test
 %! c = sort (cellstr ({ [], [1], [2], [3], [1, 2], [1, 3], [2, 3], [1, 2, 3]}));
 %! p = sort (cellstr (powerset ([1, 2, 3])));
-%! assert (p, c));
\ No newline at end of file
+%! assert (p, c);
diff --git a/src/defaults.cc b/src/defaults.cc
--- a/src/defaults.cc
+++ b/src/defaults.cc
@@ -495,17 +495,17 @@ Return the name of the top-level Octave 
   else
     print_usage ();
 
   return retval;
 }
 
 /*
 %!error OCTAVE_HOME (1);
-%!assert (ischar (OCTAVE_HOME ());
+%!assert (ischar (OCTAVE_HOME ()));
 */
 
 DEFUNX ("OCTAVE_VERSION", FOCTAVE_VERSION, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} OCTAVE_VERSION ()\n\
 Return the version number of Octave, as a string.\n\
 @end deftypefn")
 {
@@ -518,10 +518,10 @@ Return the version number of Octave, as 
   else
     print_usage ();
 
   return retval;
 }
 
 /*
 %!error OCTAVE_VERSION (1);
-%!assert (ischar (OCTAVE_VERSION ());
+%!assert (ischar (OCTAVE_VERSION ()));
 */
diff --git a/src/octave.cc b/src/octave.cc
--- a/src/octave.cc
+++ b/src/octave.cc
@@ -968,17 +968,17 @@ for an example of how to create an execu
   else
     print_usage ();
 
   return retval;
 }
 
 /*
 %!error argv (1);
-%!assert (iscellstr (argv ());
+%!assert (iscellstr (argv ()));
 */
 
 DEFUN (program_invocation_name, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} program_invocation_name ()\n\
 Return the name that was typed at the shell prompt to run Octave.\n\
 \n\
 If executing a script from the command line (e.g., @code{octave foo.m})\n\
@@ -995,17 +995,17 @@ how to create an executable Octave scrip
   else
     print_usage ();
 
   return retval;
 }
 
 /*
 %!error program_invocation_name (1);
-%!assert (ischar (program_invocation_name ());
+%!assert (ischar (program_invocation_name ()));
 */
 
 DEFUN (program_name, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} program_name ()\n\
 Return the last component of the value returned by\n\
 @code{program_invocation_name}.\n\
 @seealso{program_invocation_name}\n\
@@ -1018,10 +1018,10 @@ Return the last component of the value r
   else
     print_usage ();
 
   return retval;
 }
 
 /*
 %!error program_name (1);
-%!assert (ischar (program_name ());
+%!assert (ischar (program_name ()));
 */
