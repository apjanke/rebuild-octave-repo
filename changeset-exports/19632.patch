# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1422212597 -3600
#      Sun Jan 25 20:03:17 2015 +0100
# Branch gui-release
# Node ID 101ce4eaa56c84f5dda2ad075068341417751342
# Parent  4e85ca0b48878e185fc49664d878c44147b68d33
prevent opening the settings dialog multiple times

* main-window.h: settings dialog is now a guarded pointer and class member

* main-window.cc (constructor): initialize settings dialog pointer to 0;
  (destructor): delete pointer if necessary;
  (process_settings_dialog_request): only switch to desired tab if settings
  dialog already exists;

* settings-dialog.h: new function show_tab, write_changed_setting provate now

* settings-dialog.cc (constructor) do not set desired tab here;
  (show_tab): but here so it can be called independently
  (button_clicked): close the dialog when ok or cancel was clicked

* settings-dialog.ui: removed accepted/rejected signals from the button box
  since closing the dialog is now done in settings_dialog::button_clicked

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -80,16 +80,17 @@ main_window::main_window (QWidget *p)
     _workspace_model (new workspace_model ()),
     status_bar (new QStatusBar ()),
     command_window (new terminal_dock_widget (this)),
     history_window (new history_dock_widget (this)),
     file_browser_window (new files_dock_widget (this)),
     doc_browser_window (new documentation_dock_widget (this)),
     editor_window (create_default_editor (this)),
     workspace_window (new workspace_view (this)),
+    _settings_dlg (0),
     find_files_dlg (0),
     release_notes_window (0),
     community_news_window (0),
     _octave_qt_link (0),
     _clipboard (QApplication::clipboard ()),
     _cmd_queue (new QStringList ()),  // no command pending
     _cmd_processing (1),
     _cmd_queue_mutex (),
@@ -145,16 +146,21 @@ main_window::~main_window (void)
       delete find_files_dlg;
       find_files_dlg = 0;
     }
   if (release_notes_window)
     {
       delete release_notes_window;
       release_notes_window = 0;
     }
+  if (_settings_dlg)
+    {
+      delete _settings_dlg;
+      _settings_dlg = 0;
+    }
   if (community_news_window)
     {
       delete community_news_window;
       community_news_window = 0;
     }
   delete _octave_qt_link;
   delete _cmd_queue;
 }
@@ -663,24 +669,31 @@ void
 main_window::open_developer_page (void)
 {
   QDesktopServices::openUrl (QUrl ("http://octave.org/get-involved.html"));
 }
 
 void
 main_window::process_settings_dialog_request (const QString& desired_tab)
 {
-  settings_dialog *settingsDialog = new settings_dialog (this, desired_tab);
-
-  connect (settingsDialog, SIGNAL (apply_new_settings ()),
+  if (_settings_dlg)  // _settings_dlg is a guarded pointer!
+    {                 // here the dialog is still open and called once again
+      if (! desired_tab.isEmpty ())
+        _settings_dlg->show_tab (desired_tab);
+      return;
+    }
+
+  _settings_dlg = new settings_dialog (this, desired_tab);
+
+  connect (_settings_dlg, SIGNAL (apply_new_settings ()),
            this, SLOT (request_reload_settings ()));
 
-  settingsDialog->setModal (false);
-  settingsDialog->setAttribute (Qt::WA_DeleteOnClose);
-  settingsDialog->show ();
+  _settings_dlg->setModal (false);
+  _settings_dlg->setAttribute (Qt::WA_DeleteOnClose);
+  _settings_dlg->show ();
 }
 
 void
 main_window::request_reload_settings ()
 {
   QSettings *settings = resource_manager::get_settings ();
 
   if (settings)
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -32,16 +32,17 @@ along with Octave; see the file COPYING.
 #include <QStatusBar>
 #include <QToolBar>
 #include <QQueue>
 #include <QMdiSubWindow>
 #include <QCloseEvent>
 #include <QToolButton>
 #include <QComboBox>
 #include <QSemaphore>
+#include <QPointer>
 
 // Editor includes
 #include "file-editor-interface.h"
 
 // QTerminal includes
 #include "QTerminal.h"
 
 // Own includes
@@ -52,16 +53,18 @@ along with Octave; see the file COPYING.
 #include "history-dock-widget.h"
 #include "files-dock-widget.h"
 #include "terminal-dock-widget.h"
 #include "documentation-dock-widget.h"
 #include "octave-qt-link.h"
 #include "octave-dock-widget.h"
 #include "find-files-dialog.h"
 
+class settings_dialog;
+
 /**
  * \class MainWindow
  *
  * Represents the main window.
  */
 class main_window : public QMainWindow
 {
   Q_OBJECT
@@ -100,17 +103,16 @@ signals:
   void pasteClipboard_signal (void);
   void selectAll_signal (void);
 
 public slots:
 
   void focus_changed (QWidget *w_old, QWidget *w_new);
   void request_reload_settings ();
 
-
   void report_status_message (const QString& statusMessage);
   void handle_save_workspace_request (void);
   void handle_load_workspace_request (const QString& file = QString ());
   void handle_clear_command_window_request (void);
   void handle_clear_workspace_request (void);
   void handle_clear_history_request (void);
   void handle_rename_variable_request (const QString& old_name,
                                        const QString& new_name);
@@ -374,16 +376,19 @@ private:
 
   // Toolbars.
   QComboBox *_current_directory_combo_box;
   static const int current_directory_width = 300;
   static const int current_directory_max_visible = 16;
   static const int current_directory_max_count = 16;
   QLineEdit *_current_directory_line_edit;
 
+  // settings dialog as guarded pointer (set to 0 when deleted)
+  QPointer<settings_dialog> _settings_dlg;
+
   // Find files dialog
   find_files_dialog * find_files_dlg;
 
   // release notes window
   QWidget * release_notes_window;
 
   QWidget * community_news_window;
 
diff --git a/libgui/src/settings-dialog.cc b/libgui/src/settings-dialog.cc
--- a/libgui/src/settings-dialog.cc
+++ b/libgui/src/settings-dialog.cc
@@ -383,37 +383,46 @@ settings_dialog::settings_dialog (QWidge
   read_lexer_settings (lexer,settings);
   delete lexer;
   lexer = new octave_txt_lexer ();
   read_lexer_settings (lexer,settings);
   delete lexer;
 #endif
 
   // which tab is the desired one?
-  if (desired_tab.isEmpty ())
-    ui->tabWidget->setCurrentIndex (settings->value ("settings/last_tab",
-                                    0).toInt ());
-  else
-    {
-      QHash <QString, QWidget*> tab_hash;
-      tab_hash["editor"] = ui->tab_editor;
-      tab_hash["editor_styles"] = ui->tab_editor_styles;
-      ui->tabWidget->setCurrentIndex (
-        ui->tabWidget->indexOf (tab_hash.value (desired_tab)));
-    }
+  show_tab (desired_tab);
 
+  // connect button box signal
   connect (ui->button_box, SIGNAL (clicked (QAbstractButton *)),
            this,           SLOT (button_clicked (QAbstractButton *)));
 }
 
 settings_dialog::~settings_dialog ()
 {
   delete ui;
 }
 
+void
+settings_dialog::show_tab (const QString& tab)
+{
+  if (tab.isEmpty ())
+    {
+      QSettings *settings = resource_manager::get_settings ();
+      ui->tabWidget->setCurrentIndex (settings->value ("settings/last_tab",
+                                      0).toInt ());
+    }
+  else
+    {
+      QHash <QString, QWidget*> tab_hash;
+      tab_hash["editor"] = ui->tab_editor;
+      tab_hash["editor_styles"] = ui->tab_editor_styles;
+      ui->tabWidget->setCurrentIndex (
+        ui->tabWidget->indexOf (tab_hash.value (tab)));
+    }
+}
 
 #ifdef HAVE_QSCINTILLA
 int
 settings_dialog::get_valid_lexer_styles (QsciLexer *lexer, int styles[])
 {
   int max_style = 0;
   int actual_style = 0;
   while (actual_style < MaxStyleNumber && max_style < MaxLexerStyles)
@@ -952,16 +961,20 @@ settings_dialog::button_clicked (QAbstra
   QDialogButtonBox::ButtonRole button_role = ui->button_box->buttonRole (button);
 
   if (button_role == QDialogButtonBox::ApplyRole ||
       button_role == QDialogButtonBox::AcceptRole)
     {
       write_changed_settings ();
       emit apply_new_settings ();
     }
+
+  if (button_role == QDialogButtonBox::RejectRole ||
+      button_role == QDialogButtonBox::AcceptRole)
+    close ();
 }
 
 void
 settings_dialog::get_dir (QLineEdit *line_edit, const QString& title)
 {
   QString dir = QFileDialog::getExistingDirectory(this,
                 title, line_edit->text (),
                 QFileDialog::ShowDirsOnly | QFileDialog::DontResolveSymlinks);
diff --git a/libgui/src/settings-dialog.h b/libgui/src/settings-dialog.h
--- a/libgui/src/settings-dialog.h
+++ b/libgui/src/settings-dialog.h
@@ -39,17 +39,17 @@ namespace Ui
 }
 
 class settings_dialog:public QDialog
 {
   Q_OBJECT public:
   explicit settings_dialog (QWidget * parent,
                             const QString& desired_tab = QString ());
   ~settings_dialog ();
-  void write_changed_settings ();
+  void show_tab (const QString&);
 
 signals:
   void apply_new_settings ();
 
 private slots:
   void get_octave_dir ();
   void get_file_browser_dir ();
   void get_dir (QLineEdit*, const QString&);
@@ -69,16 +69,18 @@ private:
 #ifdef HAVE_QSCINTILLA
   void read_lexer_settings (QsciLexer *lexer, QSettings *settings);
   void write_lexer_settings (QsciLexer *lexer, QSettings *settings);
   int  get_valid_lexer_styles (QsciLexer *lexer, int styles[]);
   enum { MaxLexerStyles = 64,
          MaxStyleNumber = 128 };
 #endif
 
+  void write_changed_settings ();
+
   void read_workspace_colors (QSettings *settings);
   void write_workspace_colors (QSettings *settings);
 
   void read_terminal_colors (QSettings *settings);
   void write_terminal_colors (QSettings *settings);
 
   color_picker *_widget_title_bg_color;
   color_picker *_widget_title_bg_color_active;
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -2455,48 +2455,16 @@
     </hint>
     <hint type="destinationlabel">
      <x>68</x>
      <y>182</y>
     </hint>
    </hints>
   </connection>
   <connection>
-   <sender>button_box</sender>
-   <signal>accepted()</signal>
-   <receiver>settings_dialog</receiver>
-   <slot>accept()</slot>
-   <hints>
-    <hint type="sourcelabel">
-     <x>299</x>
-     <y>366</y>
-    </hint>
-    <hint type="destinationlabel">
-     <x>299</x>
-     <y>199</y>
-    </hint>
-   </hints>
-  </connection>
-  <connection>
-   <sender>button_box</sender>
-   <signal>rejected()</signal>
-   <receiver>settings_dialog</receiver>
-   <slot>reject()</slot>
-   <hints>
-    <hint type="sourcelabel">
-     <x>299</x>
-     <y>366</y>
-    </hint>
-    <hint type="destinationlabel">
-     <x>299</x>
-     <y>199</y>
-    </hint>
-   </hints>
-  </connection>
-  <connection>
    <sender>useCustomFileEditor</sender>
    <signal>toggled(bool)</signal>
    <receiver>customEditorLabel</receiver>
    <slot>setEnabled(bool)</slot>
    <hints>
     <hint type="sourcelabel">
      <x>349</x>
      <y>383</y>
