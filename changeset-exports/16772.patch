# HG changeset patch
# User Rik <rik@octave.org>
# Date 1371612912 25200
#      Tue Jun 18 20:35:12 2013 -0700
# Node ID 7eff3032d1440aba0842fc4fffbc49ba6c5e4949
# Parent  d8a719ccd4643be2385f4edaec8238fa1a03f696
Fix seealso HTML links when using Texinfo 4.X (bug #38862).
Use the prefix 'docX' instead of 'doc-' for Texinfo references.

* doc/interpreter/arith.txi, doc/interpreter/basics.txi,
doc/interpreter/container.txi, doc/interpreter/func.txi,
doc/interpreter/java.txi, doc/interpreter/matrix.txi,
doc/interpreter/munge-texi.pl, doc/interpreter/package.txi,
doc/interpreter/plot.txi, doc/interpreter/stats.txi,
doc/interpreter/strings.txi, doc/interpreter/system.txi,
doc/interpreter/var.txi, doc/interpreter/vectorize.txi,
libinterp/corefcn/qz.cc, libinterp/corefcn/regexp.cc,
libinterp/interpfcn/error.cc, scripts/general/accumarray.m,
scripts/general/structfun.m, scripts/miscellaneous/setfield.m,
scripts/optimization/fminbnd.m, scripts/optimization/fzero.m,
scripts/optimization/lsqnonneg.m:
Use the prefix 'docX' instead of 'doc-' for Texinfo references.

diff --git a/doc/interpreter/arith.txi b/doc/interpreter/arith.txi
--- a/doc/interpreter/arith.txi
+++ b/doc/interpreter/arith.txi
@@ -306,17 +306,17 @@ cos (pi/2)
 @DOCSTRING(expint)
 
 @DOCSTRING(gamma)
 
 @DOCSTRING(gammainc)
 
 @DOCSTRING(legendre)
 
-@anchor{doc-gammaln}
+@anchor{docXgammaln}
 @DOCSTRING(lgamma)
 
 @node Rational Approximations
 @section Rational Approximations
 
 @DOCSTRING(rat)
 
 @DOCSTRING(rats)
diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -70,18 +70,18 @@ accepts.
 @item  --debug
 @itemx -d
 @cindex @code{--debug}
 @cindex @code{-d}
 Enter parser debugging mode.  Using this option will cause Octave's
 parser to print a lot of information about the commands it reads, and is
 probably only useful if you are actually trying to debug the parser.
 
-@item --doc-cache-file @var{filename}
-@cindex @code{--doc-cache-file @var{filename}}
+@item --docXcache-file @var{filename}
+@cindex @code{--docXcache-file @var{filename}}
 Specify the name of the doc cache file to use.  The value of @var{filename}
 specified on the command line will override any value of
 @w{@env{OCTAVE_DOC_CACHE_FILE}} found in the environment, but not any commands
 in the system or user startup files that use the @code{doc_cache_file}
 function.
 
 @item  --echo-commands
 @itemx -x
@@ -259,18 +259,18 @@ Octave:fopen-file-in-path
 Octave:function-name-clash
 Octave:load-file-in-path
 @end group
 @end example
 
 @noindent
 Note that this does not enable the @code{Octave:matlab-incompatible}
 warning, which you might want if you want to be told about writing code
-that works in Octave but not Matlab (@pxref{doc-warning},
-@pxref{doc-warning_ids}).
+that works in Octave but not Matlab (@pxref{docXwarning},
+@pxref{docXwarning_ids}).
 
 @item  --verbose
 @itemx -V
 @cindex @code{--verbose}
 @cindex @code{-V}
 Turn on verbose output.
 
 @item  --version
diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -405,17 +405,17 @@ x
           a =  1
           long field with spaces (and funny char$) =  2
         @}
 @end group
 @end example
 
 @noindent
 The warning id @code{Octave:matlab-incompatible} can be enabled to warn
-about this usage. @xref{doc-warning_ids}.
+about this usage. @xref{docXwarning_ids}.
 
 More realistically, all of the functions that operate on strings can be used
 to build the correct field name before it is entered into the data structure.
 
 @example
 @group
 names = ["Bill"; "Mary"; "John"];
 ages  = [37; 26; 31];
@@ -524,17 +524,17 @@ Other functions that can manipulate the 
 @DOCSTRING(substruct)
 
 @node Processing Data in Structures
 @subsection Processing Data in Structures
 
 The simplest way to process data in a structure is within a @code{for}
 loop (@pxref{Looping Over Structure Elements}).  A similar effect can be
 achieved with the @code{structfun} function, where a user defined
-function is applied to each field of the structure.  @xref{doc-structfun}.
+function is applied to each field of the structure.  @xref{docXstructfun}.
 
 Alternatively, to process the data in a structure, the structure might
 be converted to another type of container before being treated.
 
 @DOCSTRING(struct2cell)
 
 @node Cell Arrays
 @section Cell Arrays
@@ -678,20 +678,20 @@ c1 = cell (3, 4, 5);
 c2 = cell ( [3, 4, 5] );
 size (c1)
      @result{} ans =
          3   4   5
 @end group
 @end example
 
 @noindent
-As can be seen, the @ref{doc-size, @code{size}} function also works
+As can be seen, the @ref{docXsize, @code{size}} function also works
 for cell arrays.  As do other functions describing the size of an
-object, such as @ref{doc-length, @code{length}}, @ref{doc-numel,
-@code{numel}}, @ref{doc-rows, @code{rows}}, and @ref{doc-columns,
+object, such as @ref{docXlength, @code{length}}, @ref{docXnumel,
+@code{numel}}, @ref{docXrows, @code{rows}}, and @ref{docXcolumns,
 @code{columns}}.
 
 @DOCSTRING(cell)
 
 As an alternative to creating empty cell arrays, and then filling them, it
 is possible to convert numerical arrays into cell arrays using the
 @code{num2cell}, @code{mat2cell} and @code{cellslices} functions.
 
@@ -902,17 +902,17 @@ cell array of strings.
 @node Processing Data in Cell Arrays
 @subsection Processing Data in Cell Arrays
 
 Data that is stored in a cell array can be processed in several ways
 depending on the actual data.  The simplest way to process that data
 is to iterate through it using one or more @code{for} loops.  The same
 idea can be implemented more easily through the use of the @code{cellfun}
 function that calls a user-specified function on all elements of a cell
-array.  @xref{doc-cellfun}.
+array.  @xref{docXcellfun}.
 
 An alternative is to convert the data to a different container, such as
 a matrix or a data structure.  Depending on the data this is possible
 using the @code{cell2mat} and @code{cell2struct} functions.
 
 @DOCSTRING(cell2mat)
 
 @DOCSTRING(cell2struct)
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -397,17 +397,17 @@ For compatibility with @sc{matlab}, @cod
 @code{nargoutchk} are available which provide similar error checking.
 
 @DOCSTRING(nargchk)
 
 @DOCSTRING(narginchk)
 
 @DOCSTRING(nargoutchk)
 
-@anchor{doc-varargin} @anchor{doc-varargout}
+@anchor{docXvarargin} @anchor{docXvarargout}
 @node Variable-length Argument Lists
 @section Variable-length Argument Lists
 @cindex variable-length argument lists
 @cindex @code{varargin}
 
 Sometimes the number of input arguments is not known when the function
 is defined.  As an example think of a function that returns the smallest
 of all its input arguments.  For example:
@@ -1145,17 +1145,17 @@ An overloaded function of a class as in 
 
 @item Legacy Dispatch
 An overloaded function as defined by @code{dispatch}.
 
 @item Command-line Function
 A function that has been defined on the command-line.
 
 @item Autoload function
-A function that is marked as autoloaded with @xref{doc-autoload}.
+A function that is marked as autoloaded with @xref{docXautoload}.
 
 @item A Function on the Path
 A function that can be found on the users load-path.  There can also be
 Oct-file, mex-file or m-file versions of this function and the precedence
 between these versions are in that order.
 
 @item Built-in function
 A function that is builtin to Octave itself such as @code{numel},
diff --git a/doc/interpreter/java.txi b/doc/interpreter/java.txi
--- a/doc/interpreter/java.txi
+++ b/doc/interpreter/java.txi
@@ -146,17 +146,17 @@ of dialog box.
 * How to create an instance of a Java class?::
 * How can I handle memory limitations?::
 * Which @TeX{} symbols are implemented in the dialog functions?::
 @end menu
 
 @c ------------------------------------------------------------------------
 @node How to distinguish between Octave and Matlab?
 @subsection How to distinguish between Octave and Matlab?
-@anchor{doc-FAQ}
+@anchor{docXFAQ}
 @c - index -
 @cindex Octave and @sc{matlab}, how to distinguish between
 @c - index -
 
 Octave and @sc{matlab} are very similar, but handle Java slightly different.
 Therefore it may be necessary to detect the environment and use the appropriate
 functions.  The following function can be used to detect the environment.  Due
 to the persistent variable it can be called repeatedly without a heavy
@@ -311,17 +311,17 @@ Passenger = javaObject ('package.FirstCl
 @c ------------------------------------------------------------------------
 @node How can I handle memory limitations?
 @subsection How can I handle memory limitations?
 @cindex memory, limitations
 
 In order to execute Java code Octave creates a Java Virtual Machine (JVM).
 Such a JVM allocates a fixed amount of initial memory and may expand this pool
 up to a fixed maximum memory limit.  The default values depend on the Java
-version (see @ref{doc-javamem,,javamem}).  The memory pool is shared by all
+version (see @ref{docXjavamem,,javamem}).  The memory pool is shared by all
 Java objects running in the JVM@.  This strict memory limit is intended mainly
 to avoid that runaway applications inside web browsers or in enterprise servers
 can consume all memory and crash the system.  When the maximum memory limit is
 hit, Java code will throw exceptions so that applications will fail or behave
 unexpectedly.
 
 You can specify options for the creation of the JVM inside a file named
 @file{java.opts}.  This is a text file where you can enter lines containing
diff --git a/doc/interpreter/matrix.txi b/doc/interpreter/matrix.txi
--- a/doc/interpreter/matrix.txi
+++ b/doc/interpreter/matrix.txi
@@ -119,17 +119,17 @@ its elements may have, consult @ref{Stat
 @DOCSTRING(sort)
 
 @DOCSTRING(sortrows)
 
 @DOCSTRING(issorted)
 
 @DOCSTRING(nth_element)
 
-@anchor{doc-triu}
+@anchor{docXtriu}
 @DOCSTRING(tril)
 
 @DOCSTRING(vec)
 
 @DOCSTRING(vech)
 
 @DOCSTRING(prepad)
 
diff --git a/doc/interpreter/munge-texi.pl b/doc/interpreter/munge-texi.pl
--- a/doc/interpreter/munge-texi.pl
+++ b/doc/interpreter/munge-texi.pl
@@ -56,17 +56,17 @@ TXI_LINE: while (<STDIN>)
     $docstring = $help_text{$func};
     if (! $docstring)
     {
       warn "no docstring entry for $func\n";
       next TXI_LINE;
     }
 
     $func =~ s/^@/@@/;   # Texinfo uses @@ to produce '@'
-    $docstring =~ s/^$tex_delim$/\@anchor{doc-$func}/m;
+    $docstring =~ s/^$tex_delim$/\@anchor{docX$func}/m;
     print $docstring,"\n";
 
     next TXI_LINE;
   }
   if (/^\s*\@EXAMPLEFILE\((\S+)\)/)
   {
     $fname = "$top_srcdir/examples/$1";
     print '@verbatim',"\n";
@@ -105,17 +105,17 @@ sub extract_docstring
       ($arg_list, $rest_of_line) = m'^@seealso{(.*)}(.*)?'s;
      
       $func_list = $arg_list;
       $func_list =~ s/\s+//gs;
       $repl = "";
       foreach $func (split (/,/, $func_list))
       {
         $func =~ s/^@/@@/;   # Texinfo uses @@ to produce '@'
-        $repl .= "\@ref{doc-$func,,$func}, ";
+        $repl .= "\@ref{docX$func,,$func}, ";
       }
       substr($repl,-2) = "";   # Remove last ', ' 
       $_ = "\@seealso{$repl}$rest_of_line";
     }
 
     $docstring .= $_;
   }
 
diff --git a/doc/interpreter/package.txi b/doc/interpreter/package.txi
--- a/doc/interpreter/package.txi
+++ b/doc/interpreter/package.txi
@@ -212,17 +212,17 @@ automatically from the functions in the 
 This is an optional file describing all user-visible changes worth
 mentioning.  As this file increases on size, old entries can be moved
 into @file{package/ONEWS}.
 
 @item package/ONEWS
 This is an optional file describing old entries from the @file{NEWS} file.
 
 @cindex PKG_ADD
-@anchor{doc-PKG_ADD}
+@anchor{docXPKG_ADD}
 @item package/PKG_ADD
 An optional file that includes commands that are run when the package
 is added to the users path.  Note that @w{@code{PKG_ADD}} directives in the
 source code of the package will also be added to this file by the
 Octave package manager.  Note that symbolic links are to be avoided in
 packages, as symbolic links do not exist on some file systems, and so
 a typical use for this file is the replacement of the symbolic link
 
@@ -237,17 +237,17 @@ with an autoload directive like
 autoload ('bar', which ('foo'));
 @end example
 
 @noindent
 @xref{PKG_ADD and PKG_DEL Directives}, for details on @w{@code{PKG_ADD}}
 directives.
 
 @cindex PKG_DEL
-@anchor{doc-PKG_DEL}
+@anchor{docXPKG_DEL}
 @item package/PKG_DEL
 An optional file that includes commands that are run when the package
 is removed from the users path.  Note that @w{@code{PKG_DEL}} directives in
 the source code of the package will also be added to this file by the
 Octave package manager. 
 @xref{PKG_ADD and PKG_DEL Directives}, for details on @w{@code{PKG_DEL}}
 directives.
 
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -248,18 +248,18 @@ appearance of tic marks.
 Similarly the axis limits of the colormap can be changed with the caxis
 function.
 
 @DOCSTRING(caxis)
 
 The @code{xlim}, @code{ylim}, and @code{zlim} functions may be used to
 get or set individual axis limits.  Each has the same form.
 
-@anchor{doc-ylim}
-@anchor{doc-zlim}
+@anchor{docXylim}
+@anchor{docXzlim}
 @DOCSTRING(xlim)
 
 @node Two-dimensional Function Plotting
 @subsubsection Two-dimensional Function Plotting
 
 Octave can plot a function from a function handle inline function or
 string defining the function without the user needing to explicitly
 create the data to be plotted.  The function @code{fplot} also generates
@@ -459,18 +459,18 @@ border lines are on.
 @DOCSTRING(title)
 
 @DOCSTRING(legend)
 
 @DOCSTRING(text)
 
 See @ref{Text Properties} for the properties that you can set.
 
-@anchor{doc-ylabel}
-@anchor{doc-zlabel}
+@anchor{docXylabel}
+@anchor{docXzlabel}
 @DOCSTRING(xlabel)
 
 @DOCSTRING(clabel)
 
 @DOCSTRING(box)
 
 @DOCSTRING(grid)
 
@@ -906,17 +906,17 @@ at the Octave prompt should display a th
 * Graphics Object Properties::  
 * Searching Properties::        
 * Managing Default Properties::  
 @end menu
 
 @node Introduction to Graphics Structures
 @subsection Introduction to Graphics Structures
 @cindex introduction to graphics structures
-@anchor{doc-graphics structures}
+@anchor{docXgraphics structures}
 
 The graphics functions use pointers, which are of class graphics_handle, in
 order to address the data structures which control graphical displays.  A
 graphics handle may point any one of a number of different object types.  The
 objects are the graphics data structures.  The types of objects are:
 @code{figure}, @code{axes}, @code{line}, @code{text}, @code{patch},
 @code{surface}, @code{text} and @code{image}.
 
@@ -926,17 +926,17 @@ type.  In addition there are several fun
 the graphics objects and which return handles: the functions @code{ plot} and
 @code{plot3} return a handle pointing to an object of type line, the function
 @code{subplot} returns a handle pointing to an object of type axes, the
 function @code{fill} returns a handle pointing to an object of type patch, the
 functions @code{area}, @code{bar}, @code{barh}, @code{contour},
 @code{contourf}, @code{contour3}, @code{surf}, @code{mesh}, @code{surfc},
 @code{meshc}, @code{errorbar}, @code{quiver}, @code{quiver3}, @code{scatter},
 @code{scatter3}, @code{stair}, @code{stem}, @code{stem3} each return a handle
-as documented in @ref{doc-datasources,, Data Sources}.
+as documented in @ref{docXdatasources,, Data Sources}.
 
 
 The graphics objects are arranged in a hierarchy:
 
 1. The root is at 0.  i.e., @code{get (0)} returns the properties of the root
    object.
 
 2. Below the root are @code{figure} objects.
@@ -1009,17 +1009,17 @@ doublebuffer          position          
 filename              renderer
 handlevisibility      renderermode
 @end smallexample
 
 The root figure has index 0.  Its properties may be displayed by:
 @code{get (0, "")}.
 
 The uses of @code{get} and @code{set} are further explained in
-@ref{doc-get,,get}, @ref{doc-set,,set}.
+@ref{docXget,,get}, @ref{docXset,,set}.
 
 @DOCSTRING(isprop)
 
 @node Graphics Objects
 @subsection Graphics Objects
 @cindex graphics objects
 
 The hierarchy of graphics objects was explained above.  (See 
@@ -2826,25 +2826,25 @@ corresponding hggroup elements.
 * Stair Group::                 
 * Stem Series::                 
 * Surface Group::               
 @end menu
 
 @node Data Sources in Object Groups
 @subsubsection Data Sources in Object Groups
 @cindex data sources in object groups
-@anchor{doc-datasources}
+@anchor{docXdatasources}
 All of the group objects contain data source parameters.  There are
 string parameters that contain an expression that is evaluated to update
 the relevant data property of the group when the @code{refreshdata}
 function is called.
 
 @DOCSTRING(refreshdata)
 
-@anchor{doc-linkdata}
+@anchor{docXlinkdata}
 @c add the description of the linkdata function here when it is written
 @c remove the explicit anchor when you add the corresponding @DOCSTRING
 @c command
 
 @node Area Series
 @subsubsection Area Series
 @cindex series objects
 @cindex area series
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -37,18 +37,18 @@ a = [ 0.9, 0.7;
 
 @noindent
 contains three observations from a two-dimensional distribution.
 While this is the default data arrangement, most functions support
 different arrangements.
 
 It should be noted that the statistics functions don't test for data
 containing NaN, NA, or Inf.  These values need to be detected and dealt
-with explicitly.  See @ref{doc-isnan,,isnan}, @ref{doc-isna,,isna}, 
-@ref{doc-isinf,,isinf}, @ref{doc-isfinite,,isfinite}. 
+with explicitly.  See @ref{docXisnan,,isnan}, @ref{docXisna,,isna}, 
+@ref{docXisinf,,isinf}, @ref{docXisfinite,,isfinite}. 
 
 @menu
 * Descriptive Statistics::
 * Basic Statistical Functions:: 
 * Statistical Plots:: 
 * Correlation and Regression Analysis::                      
 * Distributions::     
 * Tests::                       
diff --git a/doc/interpreter/strings.txi b/doc/interpreter/strings.txi
--- a/doc/interpreter/strings.txi
+++ b/doc/interpreter/strings.txi
@@ -228,18 +228,18 @@ only of blank characters (ASCII code 32)
 
 @node Concatenating Strings
 @subsection Concatenating Strings
 
 It has been shown above that strings can be concatenated using matrix notation
 (@pxref{Strings}, @ref{Character Arrays}).  Apart from that, there are several
 functions to concatenate string objects: @code{char},
 @code{strvcat}, @code{strcat} and @code{cstrcat}.  In addition, the general
-purpose concatenation functions can be used: see @ref{doc-cat,,cat},
-@ref{doc-horzcat,,horzcat} and @ref{doc-vertcat,,vertcat}.
+purpose concatenation functions can be used: see @ref{docXcat,,cat},
+@ref{docXhorzcat,,horzcat} and @ref{docXvertcat,,vertcat}.
 
 @itemize @bullet
 @item All string concatenation functions except @code{cstrcat}
 convert numerical input into character data by taking the corresponding ASCII
 character for each element, as in the following example:
 
 @example
 @group
@@ -346,17 +346,17 @@ from the internal representation of the 
 @subsection Conversion of Numerical Data to Strings
 Apart from the string concatenation functions (@pxref{Concatenating Strings})
 which cast numerical data to the corresponding ASCII characters, there are
 several functions that format numerical data as strings.  @code{mat2str} and
 @code{num2str} convert real or complex matrices, while @code{int2str} converts
 integer matrices.  @code{int2str} takes the real part of complex values and
 round fractional values to integer.  A more flexible way to format numerical
 data as strings is the @code{sprintf} function (@pxref{Formatted Output},
-@ref{doc-sprintf}).
+@ref{docXsprintf}).
 
 @DOCSTRING(mat2str)
 
 @DOCSTRING(num2str)
 
 @DOCSTRING(int2str)
 
 @node Comparing Strings
diff --git a/doc/interpreter/system.txi b/doc/interpreter/system.txi
--- a/doc/interpreter/system.txi
+++ b/doc/interpreter/system.txi
@@ -116,17 +116,17 @@ useful.
 @DOCSTRING(date)
 
 @DOCSTRING(etime)
 
 @DOCSTRING(cputime)
 
 @DOCSTRING(is_leap_year)
 
-@anchor{doc-toc}
+@anchor{docXtoc}
 @DOCSTRING(tic)
 
 @DOCSTRING(pause)
 
 @DOCSTRING(sleep)
 
 @DOCSTRING(usleep)
 
@@ -172,17 +172,17 @@ status information on files; and for man
 @DOCSTRING(rmdir)
 
 @DOCSTRING(confirm_recursive_rmdir)
 
 @DOCSTRING(mkfifo)
 
 @DOCSTRING(umask)
 
-@anchor{doc-lstat}
+@anchor{docXlstat}
 @DOCSTRING(stat)
 
 @DOCSTRING(S_ISBLK)
 
 @DOCSTRING(S_ISCHR)
 
 @DOCSTRING(S_ISDIR)
 
diff --git a/doc/interpreter/var.txi b/doc/interpreter/var.txi
--- a/doc/interpreter/var.txi
+++ b/doc/interpreter/var.txi
@@ -173,17 +173,17 @@ the function works with a @emph{copy} of
 
 @DOCSTRING(isglobal)
 
 @node Persistent Variables
 @section Persistent Variables
 @cindex persistent variables
 @cindex @code{persistent} statement
 @cindex variables, persistent
-@anchor{doc-persistent}
+@anchor{docXpersistent}
 
 A variable that has been declared @dfn{persistent} within a function
 will retain its contents in memory between subsequent calls to the
 same function.  The difference between persistent variables and global
 variables is that persistent variables are local in scope to a
 particular function and are not visible elsewhere.
 
 The following example uses a persistent variable to create a function
diff --git a/doc/interpreter/vectorize.txi b/doc/interpreter/vectorize.txi
--- a/doc/interpreter/vectorize.txi
+++ b/doc/interpreter/vectorize.txi
@@ -451,17 +451,17 @@ catch
 end_try_catch
 @end group
 @end example
 
 @noindent
 that may have relied on matrices of different size producing an error.
 Due to how broadcasting changes semantics with older versions of Octave,
 by default Octave warns if a broadcasting operation is performed.  To
-disable this warning, refer to its ID (@pxref{doc-warning_ids}):
+disable this warning, refer to its ID (@pxref{docXwarning_ids}):
 
 @example
 warning ("off", "Octave:broadcast");
 @end example
 
 @noindent
 If you want to recover the old behavior and produce an error, turn this
 warning into an error:
diff --git a/libinterp/corefcn/qz.cc b/libinterp/corefcn/qz.cc
--- a/libinterp/corefcn/qz.cc
+++ b/libinterp/corefcn/qz.cc
@@ -362,17 +362,17 @@ in the open left half-plane\n\
 @item \"+\"\n\
 = non-negative real part: leading block has all eigenvalues\n\
 in the closed right half-plane\n\
 @end table\n\
 @end table\n\
 @end enumerate\n\
 \n\
 Note: @code{qz} performs permutation balancing, but not scaling\n\
-(@pxref{doc-balance}).  The order of output arguments was selected for\n\
+(@pxref{docXbalance}).  The order of output arguments was selected for\n\
 compatibility with @sc{matlab}.\n\
 @seealso{balance, eig, schur}\n\
 @end deftypefn")
 {
   octave_value_list retval;
   int nargin = args.length ();
 
 #ifdef DEBUG
diff --git a/libinterp/corefcn/regexp.cc b/libinterp/corefcn/regexp.cc
--- a/libinterp/corefcn/regexp.cc
+++ b/libinterp/corefcn/regexp.cc
@@ -1062,17 +1062,17 @@ zero or more 'b' characters at positions
 
 DEFUN (regexpi, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {[@var{s}, @var{e}, @var{te}, @var{m}, @var{t}, @var{nm}, @var{sp}] =} regexpi (@var{str}, @var{pat})\n\
 @deftypefnx {Built-in Function} {[@dots{}] =} regexpi (@var{str}, @var{pat}, \"@var{opt1}\", @dots{})\n\
 \n\
 Case insensitive regular expression string matching.  Search for @var{pat} in\n\
 @var{str} and return the positions and substrings of any matches, or empty\n\
-values if there are none.  @xref{doc-regexp,,regexp}, for details on the\n\
+values if there are none.  @xref{docXregexp,,regexp}, for details on the\n\
 syntax of the search pattern.\n\
 @seealso{regexp}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
@@ -1274,17 +1274,17 @@ octregexprep (const octave_value_list &a
 
 DEFUN (regexprep, args, ,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{outstr} =} regexprep (@var{string}, @var{pat}, @var{repstr})\n\
 @deftypefnx {Built-in Function} {@var{outstr} =} regexprep (@var{string}, @var{pat}, @var{repstr}, \"@var{opt1}\", @dots{})\n\
 Replace occurrences of pattern @var{pat} in @var{string} with @var{repstr}.\n\
 \n\
 The pattern is a regular expression as documented for @code{regexp}.\n\
-@xref{doc-regexp,,regexp}.\n\
+@xref{docXregexp,,regexp}.\n\
 \n\
 The replacement string may contain @code{$i}, which substitutes\n\
 for the ith set of parentheses in the match string.  For example,\n\
 \n\
 @example\n\
 regexprep (\"Bill Dunn\", '(\\w+) (\\w+)', '$2, $1')\n\
 @end example\n\
 \n\
diff --git a/libinterp/interpfcn/error.cc b/libinterp/interpfcn/error.cc
--- a/libinterp/interpfcn/error.cc
+++ b/libinterp/interpfcn/error.cc
@@ -1231,17 +1231,17 @@ on the @code{stderr} stream.  The messag
 string @samp{warning: }.\n\
 You should use this function when you want to notify the user\n\
 of an unusual condition, but only when it makes sense for your program\n\
 to go on.\n\
 \n\
 The optional message identifier allows users to enable or disable\n\
 warnings tagged by @var{id}.  A message identifier is of the form\n\
 \"NAMESPACE:WARNING-NAME\".  Octave's own warnings use the \"Octave\"\n\
-namespace (@pxref{doc-warning_ids}).  The special identifier @samp{\"all\"}\n\
+namespace (@pxref{docXwarning_ids}).  The special identifier @samp{\"all\"}\n\
 may be used to set the state of all warnings.\n\
 \n\
 If the first argument is @samp{\"on\"} or @samp{\"off\"}, set the state\n\
 of a particular warning using the identifier @var{id}.  If the first\n\
 argument is @samp{\"query\"}, query the state of this warning instead.\n\
 If the identifier is omitted, a value of @samp{\"all\"} is assumed.  If\n\
 you set the state of a warning to @samp{\"error\"}, the warning named by\n\
 @var{id} is handled as if it were an error instead.  So, for example, the\n\
diff --git a/scripts/general/accumarray.m b/scripts/general/accumarray.m
--- a/scripts/general/accumarray.m
+++ b/scripts/general/accumarray.m
@@ -56,17 +56,17 @@
 ## By default @code{accumarray} returns a full matrix.  If
 ## @var{issparse} is logically true, then a sparse matrix is returned
 ## instead.
 ##
 ## The following @code{accumarray} example constructs a frequency table
 ## that in the first column counts how many occurrences each number in
 ## the second column has, taken from the vector @var{x}.  Note the usage
 ## of @code{unique}  for assigning to all repeated elements of @var{x}
-## the same index (@pxref{doc-unique}).
+## the same index (@pxref{docXunique}).
 ##
 ## @example
 ## @group
 ## @var{x} = [91, 92, 90, 92, 90, 89, 91, 89, 90, 100, 100, 100];
 ## [@var{u}, ~, @var{j}] = unique (@var{x});
 ## [accumarray(@var{j}', 1), @var{u}']
 ##   @result{}  2    89
 ##       3    90
@@ -87,17 +87,17 @@
 ##              2, 1, 2;
 ##              2, 3, 2], 101:105)
 ## @result{} ans(:,:,1) = [101, 0, 0; 0, 0, 0]
 ## @result{} ans(:,:,2) = [0, 0, 0; 206, 0, 208]
 ## @end group
 ## @end example
 ##
 ## The sparse option can be used as an alternative to the @code{sparse}
-## constructor (@pxref{doc-sparse}).  Thus
+## constructor (@pxref{docXsparse}).  Thus
 ##
 ## @example
 ## sparse (@var{i}, @var{j}, @var{sv})
 ## @end example
 ##
 ## @noindent
 ## can be written with @code{accumarray} as
 ##
diff --git a/scripts/general/structfun.m b/scripts/general/structfun.m
--- a/scripts/general/structfun.m
+++ b/scripts/general/structfun.m
@@ -63,17 +63,17 @@
 ## @end example
 ##
 ## @noindent
 ## where there is an additional input argument to @var{errfunc} relative to
 ## @var{func}, given by @var{se}.  This is a structure with the elements
 ## "identifier", "message" and "index", giving respectively the error
 ## identifier, the error message, and the index into the input arguments
 ## of the element that caused the error.  For an example on how to use
-## an error handler, @pxref{doc-cellfun, @code{cellfun}}.
+## an error handler, @pxref{docXcellfun, @code{cellfun}}.
 ##
 ## @seealso{cellfun, arrayfun, spfun}
 ## @end deftypefn
 
 function varargout = structfun (func, S, varargin);
 
   if (nargin < 2)
     print_usage ();
diff --git a/scripts/miscellaneous/setfield.m b/scripts/miscellaneous/setfield.m
--- a/scripts/miscellaneous/setfield.m
+++ b/scripts/miscellaneous/setfield.m
@@ -37,17 +37,17 @@
 ## @var{s}.("foo bar") = 42;
 ## @end example
 ##
 ## @noindent
 ## Note that ordinary structure syntax @code{@var{s}.foo bar = 42} cannot be
 ## used here, as the field name is not a valid Octave identifier. Using
 ## arbitrary strings for field name is incompatible with @sc{Matlab}, so
 ## this usage will warn if the @code{Octave:matlab-incompatible} warning
-## is set. @xref{doc-warning_ids}.
+## is set. @xref{docXwarning_ids}.
 ##
 ## With the second calling form, set a field on a structure array,
 ## possibly nested, with successive nested indices @var{idx1},
 ## @var{idx2}, @dots{} and fields @var{field1}, @var{field2}, @dots{}
 ## The indices must be cells containing the desired index at this
 ## nesting depth.
 ##
 ## Thus consider instead,
diff --git a/scripts/optimization/fminbnd.m b/scripts/optimization/fminbnd.m
--- a/scripts/optimization/fminbnd.m
+++ b/scripts/optimization/fminbnd.m
@@ -21,17 +21,17 @@
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {[@var{x}, @var{fval}, @var{info}, @var{output}] =} fminbnd (@var{fun}, @var{a}, @var{b}, @var{options})
 ## Find a minimum point of a univariate function.
 ##
 ## @var{fun} should be a function handle or name.  @var{a}, @var{b} specify a
 ## starting interval.  @var{options} is a structure specifying additional
 ## options.  Currently, @code{fminbnd} recognizes these options:
 ## "FunValCheck", "OutputFcn", "TolX", "MaxIter", "MaxFunEvals".  For a
-## description of these options, see @ref{doc-optimset,,optimset}.
+## description of these options, see @ref{docXoptimset,,optimset}.
 ##
 ## On exit, the function returns @var{x}, the approximate minimum point
 ## and @var{fval}, the function value thereof.
 ## @var{info} is an exit flag that can have these values:
 ##
 ## @itemize
 ## @item 1
 ## The algorithm converged to a solution.
diff --git a/scripts/optimization/fzero.m b/scripts/optimization/fzero.m
--- a/scripts/optimization/fzero.m
+++ b/scripts/optimization/fzero.m
@@ -37,17 +37,17 @@
 ##
 ## If @var{x0} is a single scalar then several nearby and distant
 ## values are probed in an attempt to obtain a valid bracketing.  If this
 ## is not successful, the function fails.
 ## @var{options} is a structure specifying additional options.
 ## Currently, @code{fzero}
 ## recognizes these options: @code{"FunValCheck"}, @code{"OutputFcn"},
 ## @code{"TolX"}, @code{"MaxIter"}, @code{"MaxFunEvals"}.
-## For a description of these options, see @ref{doc-optimset,,optimset}.
+## For a description of these options, see @ref{docXoptimset,,optimset}.
 ##
 ## On exit, the function returns @var{x}, the approximate zero point
 ## and @var{fval}, the function value thereof.
 ## @var{info} is an exit flag that can have these values:
 ##
 ## @itemize
 ## @item 1
 ##  The algorithm converged to a solution.
diff --git a/scripts/optimization/lsqnonneg.m b/scripts/optimization/lsqnonneg.m
--- a/scripts/optimization/lsqnonneg.m
+++ b/scripts/optimization/lsqnonneg.m
@@ -27,17 +27,17 @@
 ## @deftypefnx {Function File} {[@var{x}, @var{resnorm}, @var{residual}, @var{exitflag}] =} lsqnonneg (@dots{})
 ## @deftypefnx {Function File} {[@var{x}, @var{resnorm}, @var{residual}, @var{exitflag}, @var{output}] =} lsqnonneg (@dots{})
 ## @deftypefnx {Function File} {[@var{x}, @var{resnorm}, @var{residual}, @var{exitflag}, @var{output}, @var{lambda}] =} lsqnonneg (@dots{})
 ## Minimize @code{norm (@var{c}*@var{x} - d)} subject to
 ## @code{@var{x} >= 0}.  @var{c} and @var{d} must be real.  @var{x0} is an
 ## optional initial guess for @var{x}.
 ## Currently, @code{lsqnonneg}
 ## recognizes these options: @code{"MaxIter"}, @code{"TolX"}.
-## For a description of these options, see @ref{doc-optimset,,optimset}.
+## For a description of these options, see @ref{docXoptimset,,optimset}.
 ##
 ## Outputs:
 ##
 ## @itemize @bullet
 ## @item resnorm
 ##
 ## The squared 2-norm of the residual: norm (@var{c}*@var{x}-@var{d})^2
 ##
