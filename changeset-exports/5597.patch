# HG changeset patch
# User jwe
# Date 1137187059 0
#      Fri Jan 13 21:17:39 2006 +0000
# Node ID e0e48ea2a93c665eb0dc43afcf974f8f43c2b4a4
# Parent  6c4e4bffa6225aa97bc2544157bce5c5ef9bae97
[project @ 2006-01-13 21:17:37 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2006-01-13  John W. Eaton  <jwe@octave.org>
+
+	* Makeconf.in (do-mkpkgadd): New macro.
+
 2005-12-14  David Bateman  <dbateman@free.fr>
 
 	* Makeconf.in: Remove OCTAVE_PROG_RUNTEST.
 	* alocal.m4: Remove OCTAVE_PROG_RUNTEST.
 
 	* Makeconf.in: New tests of regex and pcre.
 
 2005-12-13  John W. Eaton  <jwe@octave.org>
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -533,16 +533,25 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_OCTLIBDIR%|\"${octlibdir}\"|" \
   -e "s|%OCTAVE_STARTUPFILEDIR%|\"${startupfiledir}\"|" \
   -e "s|%OCTAVE_PREFIX%|\"${prefix}\"|" \
   -e "s|%OCTAVE_API_VERSION%|\"${apiversion}\"|" \
   -e "s|%OCTAVE_VERSION%|\"${version}\"|"
 $(top_srcdir)/move-if-change $@-t $@
 endef
 
+define do-mkpkgadd
+$(top_srcdir)/mkpkgadd $(srcdir) > PKG_ADD.t
+if [ -n "`cat PKG_ADD.t`" ]; then \
+  mv PKG_ADD.t PKG_ADD ; \
+else \
+  rm -f PKG_ADD.t ; \
+fi
+endef
+
 define do-script-install
 $(top_srcdir)/mkinstalldirs \
   $(addprefix $(DESTDIR), $(fcnfiledir)/$(script_sub_dir))
 for f in $(FCN_FILES_NO_DIR); do \
   rm -f $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/$$f; \
   $(INSTALL_DATA) $(srcdir)/$$f $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/$$f; \
 done
 $(top_srcdir)/mkpkgadd $(DESTDIR)$(fcnfiledir)/$(script_sub_dir) > $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/PKG_ADD.t
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,30 @@
+2006-01-13  John W. Eaton  <jwe@octave.org>
+
+	* audio/Makefile.in, control/base/Makefile.in,
+	control/hinf/Makefile.in, control/obsolete/Makefile.in,
+	control/system/Makefile.in, control/util/Makefile.in,
+	deprecated/Makefile.in, elfun/Makefile.in, finance/Makefile.in,
+	general/Makefile.in, image/Makefile.in, io/Makefile.in,
+	linear-algebra/Makefile.in, miscellaneous/Makefile.in,
+	optimization/Makefile.in, plot/Makefile.in,
+	polynomial/Makefile.in, quaternion/Makefile.in, set/Makefile.in,
+	signal/Makefile.in, sparse/Makefile.in, specfun/Makefile.in,
+	special-matrix/Makefile.in, startup/Makefile.in,
+	statistics/base/Makefile.in, statistics/distributions/Makefile.in,
+	statistics/models/Makefile.in, statistics/tests/Makefile.in,
+	strings/Makefile.in, time/Makefile.in, testfun/Makefile.in:
+	(all): Depend on PKG_ADD.
+	(PKG_ADD): New target.
+
+2006-01-13  Bill Denney  <bill@givebillmoney.com>
+
+ 	* miscellaneous/dir.m: Add @seealso{} to docstring.
+
 2006-01-13  John W. Eaton  <jwe@octave.org>
 
 	* time/etime.m: Move here from miscellaneous/etime.m.
 	* time/is_leap_year.m: Move here from miscellaneous/is_leap_year.m.
 
 2006-01-13  Bill Denney  <bill@givebillmoney.com>
 
          * miscellaneous/dir.m: Use filesep instead of "/" where needed.
diff --git a/scripts/audio/Makefile.in b/scripts/audio/Makefile.in
--- a/scripts/audio/Makefile.in
+++ b/scripts/audio/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/control/base/Makefile.in b/scripts/control/base/Makefile.in
--- a/scripts/control/base/Makefile.in
+++ b/scripts/control/base/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/control/hinf/Makefile.in b/scripts/control/hinf/Makefile.in
--- a/scripts/control/hinf/Makefile.in
+++ b/scripts/control/hinf/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/control/obsolete/Makefile.in b/scripts/control/obsolete/Makefile.in
--- a/scripts/control/obsolete/Makefile.in
+++ b/scripts/control/obsolete/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/control/system/Makefile.in b/scripts/control/system/Makefile.in
--- a/scripts/control/system/Makefile.in
+++ b/scripts/control/system/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/control/util/Makefile.in b/scripts/control/util/Makefile.in
--- a/scripts/control/util/Makefile.in
+++ b/scripts/control/util/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/deprecated/Makefile.in b/scripts/deprecated/Makefile.in
--- a/scripts/deprecated/Makefile.in
+++ b/scripts/deprecated/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/elfun/Makefile.in b/scripts/elfun/Makefile.in
--- a/scripts/elfun/Makefile.in
+++ b/scripts/elfun/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/finance/Makefile.in b/scripts/finance/Makefile.in
--- a/scripts/finance/Makefile.in
+++ b/scripts/finance/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/general/Makefile.in b/scripts/general/Makefile.in
--- a/scripts/general/Makefile.in
+++ b/scripts/general/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/image/Makefile.in b/scripts/image/Makefile.in
--- a/scripts/image/Makefile.in
+++ b/scripts/image/Makefile.in
@@ -26,17 +26,17 @@ IMAGES = *.img
 DISTFILES = Makefile.in $(SOURCES) $(IMAGES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
 IMAGE_FILES = $(wildcard $(srcdir)/*.img)
 IMAGE_FILES_NO_DIR = $(notdir $(IMAGE_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(imagedir)
 	for f in $(IMAGE_FILES_NO_DIR); do \
 	  rm -f $(DESTDIR)$(imagedir)/$$f; \
 	  $(INSTALL_DATA) $(srcdir)/$$f $(DESTDIR)$(imagedir)/$$f; \
@@ -49,16 +49,20 @@ uninstall:
 	for f in $(IMAGE_FILES_NO_DIR); \
 	  do rm -f $(DESTDIR)$(imagedir)/$$f; \
 	done
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/io/Makefile.in b/scripts/io/Makefile.in
--- a/scripts/io/Makefile.in
+++ b/scripts/io/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/linear-algebra/Makefile.in b/scripts/linear-algebra/Makefile.in
--- a/scripts/linear-algebra/Makefile.in
+++ b/scripts/linear-algebra/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/miscellaneous/Makefile.in b/scripts/miscellaneous/Makefile.in
--- a/scripts/miscellaneous/Makefile.in
+++ b/scripts/miscellaneous/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/miscellaneous/dir.m b/scripts/miscellaneous/dir.m
--- a/scripts/miscellaneous/dir.m
+++ b/scripts/miscellaneous/dir.m
@@ -34,19 +34,20 @@
 ## @end example
 ##
 ## @noindent
 ## in which @code{statinfo} is the structure returned from @code{stat}.
 ##
 ## If @var{directory} is not a directory, return information about the
 ## named file.
 ## @var{filename}.
+##
+## @seealso{ls, stat, readdir, glob, filesep}
 ## @end deftypefn
 ##
-## @seealso{stat}
 
 ## Author: jwe
 
 ## XXX FIXME XXX -- this is quite slow for large directories, so perhaps
 ## it should be converted to C++.
 
 function retval = dir (file)
 
diff --git a/scripts/optimization/Makefile.in b/scripts/optimization/Makefile.in
--- a/scripts/optimization/Makefile.in
+++ b/scripts/optimization/Makefile.in
@@ -24,30 +24,34 @@ SOURCES = *.m
 
 EXTRAS = glpktest1 glpktest2
 
 DISTFILES = Makefile.in $(SOURCES) $(EXTRAS)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/plot/Makefile.in b/scripts/plot/Makefile.in
--- a/scripts/plot/Makefile.in
+++ b/scripts/plot/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/plot/clf.m b/scripts/plot/clf.m
new file mode 100644
--- /dev/null
+++ b/scripts/plot/clf.m
@@ -0,0 +1,30 @@
+## Copyright (C) 2005 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+## 02110-1301, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} clf
+## Clear the plot window and any titles or axis labels.  This function
+## is equivalent to @code{clearplot}.
+## @end deftypefn
+
+function clf ()
+
+  clearplot ();
+
+endfunction
diff --git a/scripts/polynomial/Makefile.in b/scripts/polynomial/Makefile.in
--- a/scripts/polynomial/Makefile.in
+++ b/scripts/polynomial/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/quaternion/Makefile.in b/scripts/quaternion/Makefile.in
--- a/scripts/quaternion/Makefile.in
+++ b/scripts/quaternion/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/set/Makefile.in b/scripts/set/Makefile.in
--- a/scripts/set/Makefile.in
+++ b/scripts/set/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/signal/Makefile.in b/scripts/signal/Makefile.in
--- a/scripts/signal/Makefile.in
+++ b/scripts/signal/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/sparse/Makefile.in b/scripts/sparse/Makefile.in
--- a/scripts/sparse/Makefile.in
+++ b/scripts/sparse/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/specfun/Makefile.in b/scripts/specfun/Makefile.in
--- a/scripts/specfun/Makefile.in
+++ b/scripts/specfun/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/special-matrix/Makefile.in b/scripts/special-matrix/Makefile.in
--- a/scripts/special-matrix/Makefile.in
+++ b/scripts/special-matrix/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/startup/Makefile.in b/scripts/startup/Makefile.in
--- a/scripts/startup/Makefile.in
+++ b/scripts/startup/Makefile.in
@@ -22,17 +22,17 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = main-rcfile local-rcfile inputrc # *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = # $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = # $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(top_srcdir)/mkinstalldirs $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)
 	if test -f $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/octaverc; then true; \
 	else \
 	  $(INSTALL_DATA) $(srcdir)/main-rcfile \
 	    $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/octaverc; \
@@ -59,16 +59,20 @@ uninstall:
 #	for f in $(FCN_FILES_NO_DIR); \
 #	  do rm -f $(DESTDIR)$(fcnfiledir)/$(script_sub_dir)/$$f; \
 #	done
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/statistics/base/Makefile.in b/scripts/statistics/base/Makefile.in
--- a/scripts/statistics/base/Makefile.in
+++ b/scripts/statistics/base/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/statistics/distributions/Makefile.in b/scripts/statistics/distributions/Makefile.in
--- a/scripts/statistics/distributions/Makefile.in
+++ b/scripts/statistics/distributions/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/statistics/models/Makefile.in b/scripts/statistics/models/Makefile.in
--- a/scripts/statistics/models/Makefile.in
+++ b/scripts/statistics/models/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/statistics/tests/Makefile.in b/scripts/statistics/tests/Makefile.in
--- a/scripts/statistics/tests/Makefile.in
+++ b/scripts/statistics/tests/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/strings/Makefile.in b/scripts/strings/Makefile.in
--- a/scripts/strings/Makefile.in
+++ b/scripts/strings/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/testfun/Makefile.in b/scripts/testfun/Makefile.in
--- a/scripts/testfun/Makefile.in
+++ b/scripts/testfun/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/scripts/time/Makefile.in b/scripts/time/Makefile.in
--- a/scripts/time/Makefile.in
+++ b/scripts/time/Makefile.in
@@ -22,30 +22,34 @@ INSTALL_DATA = @INSTALL_DATA@
 
 SOURCES = *.m
 
 DISTFILES = Makefile.in $(SOURCES)
 
 FCN_FILES = $(wildcard $(srcdir)/*.m)
 FCN_FILES_NO_DIR = $(notdir $(FCN_FILES))
 
-all:
+all: PKG_ADD
 .PHONY: all
 
 install install-strip:
 	$(do-script-install)
 .PHONY: install install-strip
 
 uninstall:
 	$(do-script-uninstall)
 .PHONY: uninstall
 
 clean:
 .PHONY: clean
 
+PKG_ADD: $(FCN_FILES)
+	@echo "making PKG_ADD"
+	@$(do-mkpkgadd)
+
 tags: $(SOURCES)
 	ctags $(SOURCES)
 
 TAGS: $(SOURCES)
 	etags $(SOURCES)
 
 mostlyclean: clean
 .PHONY: mostlyclean
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,17 @@
+2006-01-13  John W. Eaton  <jwe@octave.org>
+
+	* DLD-FUNCTIONS/__gnuplot_raw__.l (Fclearplot): For compatibility,
+	also turn off hold state for current figure.
+
+2006-01-13  Bill Denney  <bill@givebillmoney.com>
+
+ 	* dirfns.cc: Add @seealso{} to docstrings.
+
 2006-01-13  John W. Eaton  <jwe@octave.org>
 
 	* help.cc (display_help_text): Use warning() to print raw Texinfo
 	source.  Don't redirect error output for makeinfo process.
 
 	* DLD-FUNCTIONS/__gnuplot_raw__.l (F__gnuplot_init__): Delete
 	function and PKG_ADD directive.
 	(gnuplot::gnuplot): Call do_init here.
diff --git a/src/DLD-FUNCTIONS/__gnuplot_raw__.l b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
--- a/src/DLD-FUNCTIONS/__gnuplot_raw__.l
+++ b/src/DLD-FUNCTIONS/__gnuplot_raw__.l
@@ -1688,16 +1688,22 @@ DEFUN_DLD (clearplot, , ,
 @deftypefnx {Built-in Function} {} clg\n\
 Clear the plot window and any titles or axis labels.  The name\n\
 @code{clg} is aliased to @code{clearplot} for compatibility with\n\
 @sc{Matlab}.\n\
 @end deftypefn")
 {
   gnuplot::clear ();
 
+  octave_value_list args;
+
+  args(0) = "off";
+
+  feval ("hold", args);
+
   return octave_value_list ();
 }
 
 DEFUN_DLD (closeplot, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} closeplot\n\
 Close stream to the @code{gnuplot} subprocess.  If you are using X11,\n\
 this will close the plot window.\n\
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -96,16 +96,17 @@ directory.  For example,\n\
 @example\n\
 cd ~/octave\n\
 @end example\n\
 \n\
 @noindent\n\
 Changes the current working directory to @file{~/octave}.  If the\n\
 directory does not exist, an error message is printed and the working\n\
 directory is not changed.\n\
+@seealso{mkdir, rmdir, dir}\n\
 @end deffn")
 {
   octave_value_list retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("cd");
 
@@ -153,16 +154,17 @@ ls -l\n\
      @print{} total 12\n\
      @print{} -rw-r--r--   1 jwe  users  4488 Aug 19 04:02 foo.m\n\
      @print{} -rw-r--r--   1 jwe  users  1315 Aug 17 23:14 bar.m\n\
 @end example\n\
 \n\
 The @code{dir} and @code{ls} commands are implemented by calling your\n\
 system's directory listing command, so the available options may vary\n\
 from system to system.\n\
+@seealso{dir, stat, readdir, glob, filesep}\n\
 @end deffn")
 {
   octave_value retval;
 
   int argc = args.length () + 1;
 
   string_vector argv = args.make_argv ("ls");
 
@@ -215,16 +217,17 @@ from system to system.\n\
 
   return retval;
 }
 
 DEFUN (pwd, , nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} pwd ()\n\
 Return the current working directory.\n\
+@seealso{dir, ls}\n\
 @end deftypefn")
 {
   octave_value retval;
 
   std::string directory = octave_env::getcwd ();
 
   if (directory.empty ())
     warning ("pwd: can't find working directory!");
@@ -243,16 +246,17 @@ DEFUN (readdir, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{files}, @var{err}, @var{msg}] =} readdir (@var{dir})\n\
 Return names of the files in the directory @var{dir} as a cell array of\n\
 strings.  If an error occurs, return an empty cell array in @var{files}.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
+@seealso{dir, glob}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = -1.0;
   retval(0) = Cell ();
 
@@ -291,16 +295,17 @@ DEFUN (mkdir, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{status}, @var{msg}, @var{msgid}] =} mkdir (@var{dir})\n\
 Create a directory named @var{dir}.\n\
 \n\
 If successful, @var{status} is 1, with @var{msg} and @var{msgid} empty\n\
 character strings.  Otherwise, @var{status} is 0, @var{msg} contains a\n\
 system-dependent error message, and @var{msgid} contains a unique\n\
 message identifier.\n\
+@seealso{rmdir}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
   retval(0) = false;
 
@@ -340,16 +345,17 @@ Remove the directory named @var{dir}.\n\
 \n\
 If successful, @var{status} is 1, with @var{msg} and @var{msgid} empty\n\
 character strings.  Otherwise, @var{status} is 0, @var{msg} contains a\n\
 system-dependent error message, and @var{msgid} contains a unique\n\
 message identifier.\n\
 \n\
 If the optional second parameter is suplied, recursively remove all\n\
 subdirectories as well.\n\
+@seealso{mkdir}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = std::string ();
   retval(0) = false;
 
@@ -389,16 +395,17 @@ subdirectories as well.\n\
 DEFUN (link, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} link (@var{old}, @var{new})\n\
 Create a new link (also known as a hard link) to an existing file.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
+@seealso{symlink}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
   retval(0) = -1.0;
 
   if (args.length () == 2)
@@ -435,16 +442,17 @@ system-dependent error message.\n\
 DEFUN (symlink, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} symlink (@var{old}, @var{new})\n\
 Create a symbolic link @var{new} which contains the string @var{old}.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
+@seealso{link, readlink}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
   retval(0) = -1.0;
 
   if (args.length () == 2)
@@ -482,16 +490,17 @@ DEFUN (readlink, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{result}, @var{err}, @var{msg}] =} readlink (@var{symlink})\n\
 Read the value of the symbolic link @var{symlink}.\n\
 \n\
 If successful, @var{result} contains the contents of the symbolic link\n\
 @var{symlink}, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
+@seealso{link, symlink}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(2) = std::string ();
   retval(1) = -1.0;
   retval(0) = std::string ();
 
@@ -525,16 +534,17 @@ system-dependent error message.\n\
 DEFUN (rename, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {[@var{err}, @var{msg}] =} rename (@var{old}, @var{new})\n\
 Change the name of file @var{old} to @var{new}.\n\
 \n\
 If successful, @var{err} is 0 and @var{msg} is an empty string.\n\
 Otherwise, @var{err} is nonzero and @var{msg} contains a\n\
 system-dependent error message.\n\
+@seealso{ls, dir}\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
   retval(1) = std::string ();
   retval(0) = -1.0;
 
   if (args.length () == 2)
@@ -578,18 +588,18 @@ is performed on each of the patterns bef
 names.  For example,\n\
 \n\
 @example\n\
 @group\n\
 glob (\"/vm*\")\n\
      @result{} \"/vmlinuz\"\n\
 @end group\n\
 @end example\n\
-@end deftypefn\n\
-@seealso{ls,dir}")
+@seealso{dir, ls, stat, readdir}\n\
+@end deftypefn")
 {
   octave_value retval;
 
   if (args.length () == 1)
     {
       string_vector pat = args(0).all_strings ();
 
       if (error_state)
@@ -656,16 +666,17 @@ fnmatch (\"a*b\", [\"ab\"; \"axyzb\"; \"
 void
 symbols_of_dirfns (void)
 {
   DEFCONST (filesep, file_ops::dir_sep_str,
     "-*- texinfo -*-\n\
 @defvr {Built-in Variable} filesep\n\
 The character used to separate directory names.  The value\n\
 of this variable is system dependent.\n\
+@seealso{dir, ls}\n\
 @end defvr");
 
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
