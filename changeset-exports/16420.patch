# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1365045397 14400
#      Wed Apr 03 23:16:37 2013 -0400
# Node ID 81ec957685201cf76160ddc7494647d47ea41728
# Parent  16bfbf9136d31d14205398945b502dc6889c3c32
use octave-link instead of hook for edit function

* octave-main-thread.cc (edit_hook_fcn): Delete.
(octave_main_thread::run): Don't install callback function for edit
function.
* octave-qt-link.h, octave-qt-link.cc (octave_qt_link::do_edit_file):
Pass file as string instead of octave_value_list.  Return status.

* interpfcn/octave-link.h, interpfcn/octave-link.cc: Move here from
interp-core directory.
* libinterp/interp-core/module.mk, libinterp/interpfcn/module.mk:
Update file lists.

* octave-link.h: Don't include oct-obj.h.
(octave_link::edit_file, octave_link::do_edit_file): Return bool.
* octave-link.cc (F__octave_link_edit_file__): New function.

* edit.m: Call __octave_link_edit_file__ instead of
__execute_edit_hook__.

* __execute_edit_hook__.cc: Delete
* libinterp/corefcn/module.mk (COREFCN_SRC): Remove it from the list.

diff --git a/libgui/src/octave-main-thread.cc b/libgui/src/octave-main-thread.cc
--- a/libgui/src/octave-main-thread.cc
+++ b/libgui/src/octave-main-thread.cc
@@ -30,42 +30,28 @@ along with Octave; see the file COPYING.
 #include "builtin-defun-decls.h"
 #include "octave.h"
 #include "ov-builtin.h"
 #include "ov-fcn-handle.h"
 
 #include "octave-main-thread.h"
 #include "octave-link.h"
 
-static octave_value_list
-edit_hook_fcn (const octave_value_list& args, int)
-{
-  octave_value_list retval;
-
-  octave_link::edit_file (args);
-
-  return retval;
-}
-
 octave_main_thread::octave_main_thread () : QThread ()
 {
 }
 
 void
 octave_main_thread::run ()
 {
   // Matlab uses "C" locale for LC_NUMERIC class regardless of local setting
   setlocale (LC_NUMERIC, "C");
 
   emit ready ();
 
   octave_initialize_interpreter (octave_cmdline_argc, octave_cmdline_argv,
                                  octave_embedded);
 
-  octave_value edit_fcn (new octave_builtin (edit_hook_fcn));
-  octave_value edit_fcn_handle (new octave_fcn_handle (edit_fcn));
-  Fadd_edit_hook (edit_fcn_handle);
-
   // Prime the history list.
   octave_link::update_history ();
 
   octave_execute_interpreter ();
 }
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -117,30 +117,24 @@ octave_qt_link::do_update_breakpoint (bo
   if (event_listener)
     {
       event_listener->update_dbstop_marker (insert, file, line);
 
       do_process_events ();
     }
 }
 
-void
-octave_qt_link::do_edit_file (const octave_value_list& args)
+bool
+octave_qt_link::do_edit_file (const std::string& file)
 {
+  bool retval = false;
+
   if (event_listener)
     {
-      if (args.length () == 1)
-        {
-          std::string file = args(0).string_value ();
+      event_listener->edit_file (file);
 
-          if (! error_state)
-            {
-              event_listener->edit_file (file);
-              do_process_events ();
+      do_process_events ();
 
-            }
-          else
-            ::error ("expecting file name in edit file callback");
-        }
-      else
-        ::error ("invalid call to edit file callback");
+      retval = true;
     }
+
+  return retval;
 }
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -63,17 +63,17 @@ public:
   void do_pre_input_event (void);
   void do_post_input_event (void);
 
   void do_enter_debugger_event (const std::string& file, int line);
   void do_exit_debugger_event (const std::string& file, int line);
 
   void do_update_breakpoint (bool insert, const std::string& file, int line);
 
-  void do_edit_file (const octave_value_list& args);
+  bool do_edit_file (const std::string& file);
 
 private:
 
   // No copying!
 
   octave_qt_link (const octave_qt_link&);
 
   octave_qt_link& operator = (const octave_qt_link&);
diff --git a/libinterp/corefcn/__execute_edit_hook__.cc b/libinterp/corefcn/__execute_edit_hook__.cc
deleted file mode 100644
--- a/libinterp/corefcn/__execute_edit_hook__.cc
+++ /dev/null
@@ -1,143 +0,0 @@
-/*
-
-Copyright (C) 2013 John W. Eaton
-
-This file is part of Octave.
-
-Octave is free software; you can redistribute it and/or modify it
-under the terms of the GNU General Public License as published by
-the Free Software Foundation; either version 3 of the License, or (at
-your option) any later version.
-
-Octave is distributed in the hope that it will be useful, but
-WITHOUT ANY WARRANTY; without even the implied warranty of
-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-General Public License for more details.
-
-You should have received a copy of the GNU General Public License
-along with Octave; see the file COPYING.  If not, see
-<http://www.gnu.org/licenses/>.
-
-*/
-
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
-
-#include "defun.h"
-#include "error.h"
-#include "defun.h"
-#include "hook-fcn.h"
-#include "oct-obj.h"
-
-static hook_function_list edit_hook_functions;
-
-DEFUN (add_edit_hook, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {@var{id} =} add_edit_hook (@var{fcn})\n\
-@deftypefnx {Built-in Function} {@var{id} =} add_edit_hook (@var{fcn}, @var{data})\n\
-Add the named function or function handle @var{fcn} to the list of functions to call\n\
-to handle editing files.  The function should have the form\n\
-\n\
-@example\n\
-@var{fcn} (@var{file}, @var{data})\n\
-@end example\n\
-\n\
-If @var{data} is omitted, Octave calls the function without one argument.\n\
-\n\
-The returned identifier may be used to remove the function handle from\n\
-the list of input hook functions.\n\
-@seealso{remove_edit_hook}\n\
-@end deftypefn")
-{
-  octave_value retval;
-
-  int nargin = args.length ();
-
-  if (nargin == 1 || nargin == 2)
-    {
-      octave_value user_data;
-
-      if (nargin == 2)
-        user_data = args(1);
-
-      hook_function hook_fcn (args(0), user_data);
-
-      if (! error_state)
-        {
-          edit_hook_functions.insert (hook_fcn.id (), hook_fcn);
-
-          retval = hook_fcn.id ();
-        }
-      else
-        error ("add_edit_hook: expecting string as first arg");
-    }
-  else
-    print_usage ();
-
-  return retval;
-}
-
-DEFUN (remove_edit_hook, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {} remove_edit_hook (@var{name})\n\
-@deftypefnx {Built-in Function} {} remove_input_event_hook (@var{fcn_id})\n\
-Remove the named function or function handle with the given identifier\n\
-from the list of functions to call to handle editing files.\n\
-@seealso{add_edit_hook}\n\
-@end deftypefn")
-{
-  octave_value_list retval;
-
-  int nargin = args.length ();
-
-  if (nargin == 1 || nargin == 2)
-    {
-      std::string hook_fcn_id = args(0).string_value ();
-
-      bool warn = (nargin < 2);
-
-      if (! error_state)
-        {
-          hook_function_list::iterator p
-            = edit_hook_functions.find (hook_fcn_id);
-
-          if (p != edit_hook_functions.end ())
-            edit_hook_functions.erase (p);
-          else if (warn)
-            warning ("remove_edit_hook: %s not found in list",
-                     hook_fcn_id.c_str ());
-        }
-      else
-        error ("remove_edit_hook: argument not valid as a hook function name or id");
-    }
-  else
-    print_usage ();
-
-  return retval;
-}
-
-DEFUN (__execute_edit_hook__, args, ,
-  "-*- texinfo -*-\n\
-@deftypefn {Built-in Function} {@var{status} =} __execute_edit_hook__ (@var{file})\n\
-Undocumented internal function.\n\
-@end deftypefn")
-{
-  octave_value retval;
-
-  if (edit_hook_functions.empty ())
-    retval = false;
-  else
-    {
-      edit_hook_functions.run (args);
-
-      retval = true;
-    }
-
-  return retval;
-}
-
-/*
-## No test needed for internal helper function.
-%!assert (1)
-*/
diff --git a/libinterp/corefcn/module.mk b/libinterp/corefcn/module.mk
--- a/libinterp/corefcn/module.mk
+++ b/libinterp/corefcn/module.mk
@@ -22,17 +22,16 @@ OPT_INC = \
 	mv $@-t $@
 
 $(OPT_INC) : %.h : %.in
 	$(MAKE) -C $(top_builddir)/liboctave/numeric $(@F)
 
 COREFCN_SRC = \
   corefcn/__contourc__.cc \
   corefcn/__dispatch__.cc \
-  corefcn/__execute_edit_hook__.cc \
   corefcn/__lin_interpn__.cc \
   corefcn/__pchip_deriv__.cc \
   corefcn/__qp__.cc \
   corefcn/balance.cc \
   corefcn/besselj.cc \
   corefcn/betainc.cc \
   corefcn/bitfcns.cc \
   corefcn/bsxfun.cc \
diff --git a/libinterp/interp-core/module.mk b/libinterp/interp-core/module.mk
--- a/libinterp/interp-core/module.mk
+++ b/libinterp/interp-core/module.mk
@@ -31,17 +31,16 @@ INTERP_CORE_INC = \
   interp-core/ls-mat4.h \
   interp-core/ls-mat5.h \
   interp-core/ls-oct-binary.h \
   interp-core/ls-utils.h \
   interp-core/mex.h \
   interp-core/mexproto.h \
   interp-core/mxarray.in.h \
   interp-core/octave-event-listener.h \
-  interp-core/octave-link.h \
   interp-core/oct-errno.h \
   interp-core/oct-fstrm.h \
   interp-core/oct-hdf5.h \
   interp-core/oct-iostrm.h \
   interp-core/oct-lvalue.h \
   interp-core/oct-map.h \
   interp-core/oct-obj.h \
   interp-core/oct-prcstrm.h \
@@ -87,17 +86,16 @@ INTERP_CORE_SRC = \
   interp-core/ls-ascii-helper.cc \
   interp-core/ls-hdf5.cc \
   interp-core/ls-mat-ascii.cc \
   interp-core/ls-mat4.cc \
   interp-core/ls-mat5.cc \
   interp-core/ls-oct-binary.cc \
   interp-core/ls-utils.cc \
   interp-core/mex.cc \
-  interp-core/octave-link.cc \
   interp-core/oct-fstrm.cc \
   interp-core/oct-iostrm.cc \
   interp-core/oct-lvalue.cc \
   interp-core/oct-map.cc \
   interp-core/oct-obj.cc \
   interp-core/oct-prcstrm.cc \
   interp-core/oct-procbuf.cc \
   interp-core/oct-stream.cc \
diff --git a/libinterp/interpfcn/module.mk b/libinterp/interpfcn/module.mk
--- a/libinterp/interpfcn/module.mk
+++ b/libinterp/interpfcn/module.mk
@@ -11,16 +11,17 @@ INTERPFCN_INC = \
   interpfcn/error.h \
   interpfcn/file-io.h \
   interpfcn/help.h \
   interpfcn/hook-fcn.h \
   interpfcn/input.h \
   interpfcn/load-path.h \
   interpfcn/load-save.h \
   interpfcn/ls-oct-ascii.h \
+  interpfcn/octave-link.h \
   interpfcn/oct-hist.h \
   interpfcn/pager.h \
   interpfcn/pr-output.h \
   interpfcn/profiler.h \
   interpfcn/sighandlers.h \
   interpfcn/symtab.h \
   interpfcn/sysdep.h \
   interpfcn/toplev.h \
@@ -37,16 +38,17 @@ INTERPFCN_SRC = \
   interpfcn/file-io.cc \
   interpfcn/graphics.cc \
   interpfcn/help.cc \
   interpfcn/hook-fcn.cc \
   interpfcn/input.cc \
   interpfcn/load-path.cc \
   interpfcn/load-save.cc \
   interpfcn/ls-oct-ascii.cc \
+  interpfcn/octave-link.cc \
   interpfcn/oct-hist.cc \
   interpfcn/pager.cc \
   interpfcn/pr-output.cc \
   interpfcn/profiler.cc \
   interpfcn/sighandlers.cc \
   interpfcn/symtab.cc \
   interpfcn/sysdep.cc \
   interpfcn/toplev.cc \
diff --git a/libinterp/interp-core/octave-link.cc b/libinterp/interpfcn/octave-link.cc
rename from libinterp/interp-core/octave-link.cc
rename to libinterp/interpfcn/octave-link.cc
--- a/libinterp/interp-core/octave-link.cc
+++ b/libinterp/interpfcn/octave-link.cc
@@ -22,16 +22,17 @@ along with Octave; see the file COPYING.
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #include "cmd-edit.h"
+#include "defun.h"
 #include "oct-env.h"
 #include "oct-mutex.h"
 #include "singleton-cleanup.h"
 #include "symtab.h"
 #include "toplev.h"
 
 #include "octave-link.h"
 
@@ -139,8 +140,29 @@ octave_link::do_last_working_directory (
   return last_cwd;
 }
 
 bool
 octave_link::instance_ok (void)
 {
   return instance != 0;
 }
+
+DEFUN (__octave_link_edit_file__, args, ,
+  "-*- texinfo -*-\n\
+@deftypefn {Built-in Function} {} __octave_link_edit_file__ (@var{file})\n\
+Undocumented internal function.\n\
+@end deftypefn")
+{
+  octave_value retval;
+
+  if (args.length () == 1)
+    {
+      std::string file = args(0).string_value ();
+
+      if (! error_state)
+        retval = octave_link::edit_file (file);
+      else
+        error ("expecting file name as argument");
+    }
+
+  return retval;
+}
diff --git a/libinterp/interp-core/octave-link.h b/libinterp/interpfcn/octave-link.h
rename from libinterp/interp-core/octave-link.h
rename to libinterp/interpfcn/octave-link.h
--- a/libinterp/interp-core/octave-link.h
+++ b/libinterp/interpfcn/octave-link.h
@@ -22,23 +22,20 @@ along with Octave; see the file COPYING.
 
 */
 
 #if !defined (octave_link_h)
 #define octave_link_h 1
 
 #include <string>
 
-class octave_mutex;
-
-#include "oct-obj.h"
+#include "event-queue.h"
+#include "octave-event-listener.h"
 
-#include "event-queue.h"
-
-#include "octave-event-listener.h"
+class octave_mutex;
 
 // \class OctaveLink
 // \brief Provides threadsafe access to octave.
 // \author Jacob Dawid
 //
 // This class is a wrapper around octave and provides thread safety by
 // buffering access operations to octave and executing them in the
 // readline event hook, which lives in the octave thread.
@@ -154,21 +151,20 @@ public:
 
   static void
   update_breakpoint (bool insert, const std::string& file, int line)
   {
     if (instance_ok ())
       instance->do_update_breakpoint (insert, file, line);
   }
 
-  static void
-  edit_file (const octave_value_list& args)
+  static bool
+  edit_file (const std::string& file)
   {
-    if (instance_ok ())
-      instance->do_edit_file (args);
+    return instance_ok () ? instance->do_edit_file (file) : false;
   }
 
   static void connect (octave_link *);
 
 private:
 
   static octave_link *instance;
 
@@ -241,12 +237,12 @@ protected:
   virtual void do_post_input_event (void) = 0;
 
   virtual void do_enter_debugger_event (const std::string& file, int line) = 0;
   virtual void do_exit_debugger_event (const std::string& file, int line) = 0;
 
   virtual void do_update_breakpoint (bool insert,
                                      const std::string& file, int line) = 0;
 
-  virtual void do_edit_file (const octave_value_list& args) = 0;
+  virtual bool do_edit_file (const std::string& file) = 0;
 };
 
 #endif // OCTAVELINK_H
diff --git a/scripts/miscellaneous/edit.m b/scripts/miscellaneous/edit.m
--- a/scripts/miscellaneous/edit.m
+++ b/scripts/miscellaneous/edit.m
@@ -558,17 +558,17 @@ function ret = default_user (long_form)
 
 endfunction
 
 function do_edit (editor, file, mode)
 
   ## Give the hook function a chance.  If that fails, fall back
   ## on running an editor with the system function.
 
-  status = __execute_edit_hook__ (file);
+  status = __octave_link_edit_file__ (file);
 
   if (! status)
     system (sprintf (undo_string_escapes (editor),
                      cstrcat ("\"", file, "\"")),
             [], mode);
   endif
 
 endfunction
