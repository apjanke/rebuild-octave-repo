# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1245650184 -7200
#      Mon Jun 22 07:56:24 2009 +0200
# Branch release-3-2-x
# Node ID 21f9ff16c49aa938d5b6082c319aa237856c63f0
# Parent  a9d20c890190dbc22133c44a1e367a136208dfdc
mpoles.m: Fix infinite loop for a multiplicity of poles at zero. Test added.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-06-18  Daniel Gualberto <daniel@alacer.com.br>
+
+	* polynomial/mpoles.m: Fix infinite loop for a multiplicity of
+	poles at zero. Test added.
+
 2009-06-17  Bertrand Roessli <bertrand.roessli@psi.ch>
 
 	* plot/axis.m: Fix bug for 'axis tight' with multiple surface plots,
 	add demo.
 
 2009-06-14  Ben Abbott <bpabbott@mac.com>
 
 	* plot/quiver.m: Add 'clf' to demos.
diff --git a/scripts/polynomial/mpoles.m b/scripts/polynomial/mpoles.m
--- a/scripts/polynomial/mpoles.m
+++ b/scripts/polynomial/mpoles.m
@@ -87,18 +87,19 @@ function [multp, indx] = mpoles (p, tol,
   ## poles.
 
   multp = zeros (Np, 1);
   indx = [];
   n = find (multp == 0, 1);
   while (n)
     dp = abs (p-p(n));
     if (p(n) == 0.0)
-      p0 = mean (abs (p(find (abs (p) > 0))));
-      if (isempty (p0))
+      if (any (abs (p) > 0 & isfinite (p)))
+        p0 = mean (abs (p(abs (p) > 0 & isfinite (p))));
+      else
         p0 = 1;
       endif
     else
       p0 = abs (p(n));
     endif
     k = find (dp < tol * p0);
     ## Poles can only be members of one multiplicity group.
     if (numel (indx))
@@ -108,8 +109,13 @@ function [multp, indx] = mpoles (p, tol,
     multp(k) = m;
     indx = [indx; k];
     n = find (multp == 0, 1);
   endwhile
   multp = multp(indx);
   indx = ordr(indx);
 
 endfunction
+
+%!test
+%! [mp, n] = mpoles ([0 0], 0.01);
+%! assert (mp, [1; 2])
+
