# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1471135591 25200
#      Sat Aug 13 17:46:31 2016 -0700
# Node ID f394436a40255f68ad90d57905cc49ff040ef000
# Parent  5f23465ee406ce6dc70f6f76bf44332c8dac76f2
build: improve QScintilla detection to work with distro naming schemes (bug #48773)

* acinclude.m4 (OCTAVE_CHECK_QT_VERSION): Improve detection of the QScintilla
library to work with multiple library naming schemes on different distros.
Use correct capitalization of QScintilla in comments and output.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -346,22 +346,22 @@ AC_DEFUN([OCTAVE_CHECK_FUNC_COMPLEX], [
     AC_LANG_POP(C++)
   ])
   if eval "test \"`echo '$octave_cv_func_complex_std_'$ac_safe`\" = yes"; then
     AC_DEFINE(AS_TR_CPP([[HAVE_COMPLEX_STD_][$1]]), 1,
       [Define to 1 if <complex> provides std::$1(std::complex<T>).])
   fi
 ])
 dnl
-dnl Check whether Qscintilla has version 2.6.0 or later
+dnl Check whether QScintilla has version 2.6.0 or later
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_QSCINTILLA_VERSION], [
-  AC_CACHE_CHECK([whether Qscintilla has version 2.6.0 or later],
+  AC_CACHE_CHECK([whether QScintilla has version 2.6.0 or later],
     [octave_cv_version_2_6_0],
     [AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
     ac_octave_save_CXXFLAGS="$CXXFLAGS"
     CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
     CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
     AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[
         #include <Qsci/qsciglobal.h>
@@ -373,17 +373,17 @@ AC_DEFUN([OCTAVE_CHECK_QSCINTILLA_VERSIO
       octave_cv_version_2_6_0=yes,
       octave_cv_version_2_6_0=no)
     CPPFLAGS="$ac_octave_save_CPPFLAGS"
     CXXFLAGS="$ac_octave_save_CXXFLAGS"
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_version_2_6_0 = yes; then
     AC_DEFINE(HAVE_QSCI_VERSION_2_6_0, 1,
-      [Define to 1 if Qscintilla is of Version 2.6.0 or later.])
+      [Define to 1 if QScintilla is of Version 2.6.0 or later.])
   fi
 ])
 dnl
 dnl Check if Fortran compiler has the intrinsic function ISNAN.
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_FORTRAN_ISNAN], [
   AC_CACHE_CHECK([whether $F77 has the intrinsic function ISNAN],
     [octave_cv_func_fortran_isnan],
@@ -481,17 +481,17 @@ AC_DEFUN([OCTAVE_CHECK_QFONT_FORCE_INTEG
     AC_LANG_POP(C++)
   ])
   if test $octave_cv_decl_qfont_force_integer_metrics = yes; then
     AC_DEFINE(HAVE_QFONT_FORCE_INTEGER_METRICS, 1,
       [Define to 1 if Qt provides QFont::ForceIntegerMetrics.])
   fi
 ])
 dnl
-dnl Check whether Qscintilla SetPlaceholderText function exists.
+dnl Check whether QScintilla SetPlaceholderText function exists.
 dnl FIXME: This test uses a version number.  It potentially could
 dnl        be re-written to actually call the function, but is it worth it?
 dnl
 AC_DEFUN([OCTAVE_CHECK_FUNC_SETPLACEHOLDERTEXT], [
   AC_CACHE_CHECK([whether Qt has SetPlaceholderText function],
     [octave_cv_func_setplaceholdertext],
     [AC_LANG_PUSH(C++)
     ac_octave_save_CPPFLAGS="$CPPFLAGS"
@@ -1342,21 +1342,21 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
   warn_qt_abstract_item_model=""
   warn_qt_opengl=""
   warn_qscintilla=""
 
   ## Check for Qt libraries
   case "$qt_version" in
     4)
       QT_MODULES="QtCore QtGui QtNetwork QtOpenGL"
-      LIBQSCINTILLA=qscintilla2
+      octave_qscintilla_libnames=qscintilla2
     ;;
     5)
       QT_MODULES="Qt5Core Qt5Gui Qt5Network Qt5OpenGL Qt5PrintSupport"
-      LIBQSCINTILLA=qt5scintilla2
+      octave_qscintilla_libnames="qscintilla2-qt5 qt5scintilla2"
     ;;
     *)
       AC_MSG_ERROR([Unrecognized Qt version $qt_version])
     ;;
   esac
 
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
@@ -1488,48 +1488,53 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
       OCTAVE_CHECK_QT_OPENGL_OK([build_qt_graphics=yes],
         [warn_qt_opengl="Qt does not work with the OpenGL libs (GL and GLU); disabling OpenGL graphics with Qt GUI"])
 
       if test $build_qt_graphics = yes; then
         AC_DEFINE(HAVE_QT_GRAPHICS, 1, [Define to 1 if Qt works with OpenGL libs (GL and GLU)])
       fi
     fi
 
-    ## Check for Qscintilla library which is used in the Qt GUI editor.
-    AC_CACHE_CHECK([whether Qscintilla library is installed],
+    ## Check for QScintilla library which is used in the Qt GUI editor.
+    AC_CACHE_CHECK([for the QScintilla library for Qt $qt_version],
       [octave_cv_lib_qscintilla],
       [save_CPPFLAGS="$CPPFLAGS"
       save_CXXFLAGS="$CXXFLAGS"
       save_LDFLAGS="$LDFLAGS"
       save_LIBS="$LIBS"
       CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
       CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
       LDFLAGS="$QT_LDFLAGS $LDFLAGS"
-      LIBS="$QT_LIBS -l$LIBQSCINTILLA"
       AC_LANG_PUSH(C++)
-      AC_LINK_IFELSE([AC_LANG_PROGRAM([[
-        #include <Qsci/qscilexersql.h>
-        ]], [[
-        QsciLexerSQL sqlLexer(0);
-        ]])],
-        octave_cv_lib_qscintilla=yes,
-        octave_cv_lib_qscintilla=no)
+      for octave_qscintilla_try in $octave_qscintilla_libnames; do
+        LIBS="$QT_LIBS -l$octave_qscintilla_try"
+        AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+          #include <Qsci/qscilexersql.h>
+          ]], [[
+          QsciLexerSQL sqlLexer(0);
+          ]])],
+          octave_cv_lib_qscintilla="-l$octave_qscintilla_try",
+          octave_cv_lib_qscintilla=no)
+        if test $octave_cv_lib_qscintilla != no; then
+          break
+        fi
+      done
       CPPFLAGS="$save_CPPFLAGS"
       CXXFLAGS="$save_CXXFLAGS"
       LDFLAGS="$save_LDFLAGS"
       LIBS="$save_LIBS"
       AC_LANG_POP([C++])
     ])
 
     if test $octave_cv_lib_qscintilla = no; then
-      warn_qscintilla="Qscintilla library not found; disabling built-in Qt GUI editor"
+      warn_qscintilla="QScintilla library not found; disabling built-in Qt GUI editor"
     else
-      ## Let's assume Qscintilla library is at the same location as
+      ## Let's assume QScintilla library is at the same location as
       ## other regular Qt libraries.
-      QT_LIBS="$QT_LIBS -l$LIBQSCINTILLA"
+      QT_LIBS="$QT_LIBS $octave_cv_lib_qscintilla"
       OCTAVE_CHECK_QSCINTILLA_VERSION
       AC_DEFINE(HAVE_QSCINTILLA, 1,
         [Define to 1 if the QScintilla library and header files are available.])
 
       save_CPPFLAGS="$CPPFLAGS"
       save_CXXFLAGS="$CXXFLAGS"
       CPPFLAGS="$QT_CPPFLAGS $CXXPICFLAG $CPPFLAGS"
       CXXFLAGS="$CXXPICFLAG $CXXFLAGS"
