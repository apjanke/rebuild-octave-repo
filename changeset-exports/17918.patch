# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1384277790 18000
#      Tue Nov 12 12:36:30 2013 -0500
# Node ID a38cee8f0a9baeea89e656716bf415ce67efe000
# Parent  c9f622fd730707bcd65a6a7d6335e97270920be1
derive octave_main_thread from QObject, not QThread

* main-window.h, main-window.cc (main_window::_octave_main_thread):
Delete member variable and all uses.
* libgu/src/module.mk (octave_gui_MOC):
Include src/moc-octave-main-thread.cc in the list.
* octave-main-thread.h, octave-main-thread.cc
(octave_main_thread::run): Delete.
(octave_main_thread::execute): Rename from octave_main_thread::run.
(class octave_main_thread): Derive from QObject, not QThread.
* octave-qt-link.h, octave-qt-link.cc
(octave_qt_link::octave_interpreter): New member variable.
(octave_qt_link::main_thread): Now a pointer to a QThread object.
(octave_qt_link::execute_interpreter_signal): New signal.
(octave_qt_link::octave_qt_link): Create thread and octave_interpreter
object here instead of accepting thread as argument.  Move
octave_interpreter to the main_thread object and connect the
execute_interpreter signal to the corresponding slot.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -74,17 +74,16 @@ main_window::main_window (QWidget *p)
     command_window (new terminal_dock_widget (this)),
     history_window (new history_dock_widget (this)),
     file_browser_window (new files_dock_widget (this)),
     doc_browser_window (new documentation_dock_widget (this)),
     editor_window (create_default_editor (this)),
     workspace_window (new workspace_view (this)),
     find_files_dlg (0),
     release_notes_window (0),
-    _octave_main_thread (0),
     _octave_qt_link (0),
     _clipboard (QApplication::clipboard ()),
     _cmd_queue (new QStringList ()),  // no command pending
     _cmd_processing (1),
     _cmd_queue_mutex ()
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
@@ -109,17 +108,16 @@ main_window::~main_window (void)
       delete find_files_dlg;
       find_files_dlg = 0;
     }
   if (release_notes_window)
     {
       delete release_notes_window;
       release_notes_window = 0;
     }
-  delete _octave_main_thread;
   delete _octave_qt_link;
   delete _cmd_queue;
 }
 
 bool
 main_window::command_window_has_focus (void) const
 {
   return command_window->has_focus ();
@@ -996,19 +994,17 @@ main_window::construct (void)
 
   set_global_shortcuts (true);
 
 }
 
 void
 main_window::construct_octave_qt_link (void)
 {
-  _octave_main_thread = new octave_main_thread ();
-
-  _octave_qt_link = new octave_qt_link (_octave_main_thread);
+  _octave_qt_link = new octave_qt_link ();
 
   connect (_octave_qt_link, SIGNAL (exit_signal (int)),
            this, SLOT (exit (int)));
 
   connect (_octave_qt_link,
            SIGNAL (set_workspace_signal
                    (bool, const QString&, const QStringList&,
                     const QStringList&, const QStringList&,
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -322,18 +322,16 @@ private:
   QLineEdit *_current_directory_line_edit;
 
   // Find files dialog
   find_files_dialog * find_files_dlg;
 
   // release notes window
   QWidget * release_notes_window;
 
-  octave_main_thread *_octave_main_thread;
-
   octave_qt_link *_octave_qt_link;
 
   QClipboard *_clipboard;
 
   // Flag for closing whole application.
   bool _closing;
 
   // semaphore to synchronize execution signals and related callback
diff --git a/libgui/src/module.mk b/libgui/src/module.mk
--- a/libgui/src/module.mk
+++ b/libgui/src/module.mk
@@ -85,16 +85,17 @@ octave_gui_MOC += \
 endif
 
 octave_gui_MOC += \
   src/moc-dialog.cc \
   src/moc-documentation-dock-widget.cc \
   src/moc-files-dock-widget.cc \
   src/moc-history-dock-widget.cc \
   src/moc-main-window.cc \
+  src/moc-octave-main-thread.cc \
   src/moc-octave-qt-link.cc \
   src/moc-settings-dialog.cc \
   src/moc-news-dock-widget.cc \
   src/moc-terminal-dock-widget.cc \
   src/moc-color-picker.cc \
   src/moc-welcome-wizard.cc \
   src/moc-workspace-model.cc \
   src/moc-workspace-view.cc \
diff --git a/libgui/src/octave-main-thread.cc b/libgui/src/octave-main-thread.cc
--- a/libgui/src/octave-main-thread.cc
+++ b/libgui/src/octave-main-thread.cc
@@ -31,21 +31,15 @@ along with Octave; see the file COPYING.
 #include "octave.h"
 #include "ov-builtin.h"
 #include "ov-fcn-handle.h"
 
 #include "octave-main-thread.h"
 #include "octave-link.h"
 
 void
-octave_main_thread::run (void)
+octave_main_thread::execute_interpreter (void)
 {
   octave_initialize_interpreter (octave_cmdline_argc, octave_cmdline_argv,
                                  octave_embedded);
 
   octave_execute_interpreter ();
 }
-
-void
-octave_main_thread::execute_interpreter (void)
-{
-  start ();
-}
diff --git a/libgui/src/octave-main-thread.h b/libgui/src/octave-main-thread.h
--- a/libgui/src/octave-main-thread.h
+++ b/libgui/src/octave-main-thread.h
@@ -19,31 +19,34 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifndef OCTAVEMAINTHREAD_H
 #define OCTAVEMAINTHREAD_H
 
-#include <QThread>
+#include <QObject>
 
 /**
   * \class octave_main
   * \brief This class represents a thread just running octave_main.
   * \author Jacob Dawid
   */
-class octave_main_thread : public QThread
+class octave_main_thread : public QObject
 {
+  Q_OBJECT
+
 public:
+
   // Create a new thread for running the octave interpreter.
-  octave_main_thread (void) : QThread () { }
+
+  octave_main_thread (void) : QObject () { }
+
+public slots:
 
   // Start the thread and initialize and execute the octave
   // interpreter.
+
   void execute_interpreter (void);
-
-protected:
-  // Avoid exec.  Run the octave interpreter in the new thread.
-  void run (void);
 };
 
 #endif // OCTAVEMAINTHREAD_H
diff --git a/libgui/src/octave-qt-link.cc b/libgui/src/octave-qt-link.cc
--- a/libgui/src/octave-qt-link.cc
+++ b/libgui/src/octave-qt-link.cc
@@ -38,26 +38,34 @@ along with Octave; see the file COPYING.
 #include "load-path.h"
 #include "oct-env.h"
 #include "utils.h"
 
 #include "octave-qt-link.h"
 
 #include "resource-manager.h"
 
-octave_qt_link::octave_qt_link (octave_main_thread *mt)
-  : octave_link (), main_thread (mt)
-{ }
+octave_qt_link::octave_qt_link (void)
+  : octave_link (), main_thread (new QThread ()),
+    octave_interpreter (new octave_main_thread ())
+{
+  connect (this, SIGNAL (execute_interpreter_signal (void)),
+           octave_interpreter, SLOT (execute_interpreter (void)));
+
+  octave_interpreter->moveToThread (main_thread);
+
+  main_thread->start ();
+}
 
 octave_qt_link::~octave_qt_link (void) { }
 
 void
 octave_qt_link::execute_interpreter (void)
 {
-  main_thread->execute_interpreter ();
+  emit execute_interpreter_signal ();
 }
 
 bool
 octave_qt_link::do_exit (int status)
 {
   emit exit_signal (status);
 
   return true;
diff --git a/libgui/src/octave-qt-link.h b/libgui/src/octave-qt-link.h
--- a/libgui/src/octave-qt-link.h
+++ b/libgui/src/octave-qt-link.h
@@ -26,16 +26,17 @@ along with Octave; see the file COPYING.
 #define OCTAVE_QT_LINK_H
 
 #include <list>
 #include <string>
 
 #include <QList>
 #include <QObject>
 #include <QString>
+#include <QThread>
 
 #include "octave-link.h"
 #include "octave-main-thread.h"
 
 // Defined for purposes of sending QList<int> as part of signal.
 typedef QList<int> QIntList;
 
 // \class OctaveLink
@@ -47,17 +48,17 @@ typedef QList<int> QIntList;
 // readline event hook, which lives in the octave thread.
 
 class octave_qt_link : public QObject, public octave_link
 {
   Q_OBJECT
 
 public:
 
-  octave_qt_link (octave_main_thread *mt);
+  octave_qt_link (void);
 
   ~octave_qt_link (void);
 
   void execute_interpreter (void);
 
   bool do_exit (int status);
 
   bool do_edit_file (const std::string& file);
@@ -123,32 +124,38 @@ public:
   void do_set_default_prompts (std::string& ps1, std::string& ps2,
                                std::string& ps4);
 
   static bool file_in_path (const std::string& file, const std::string& dir);
 
   void do_show_preferences (void);
 
   void do_show_doc (const std::string& file);
+
 private:
 
   // No copying!
 
   octave_qt_link (const octave_qt_link&);
 
   octave_qt_link& operator = (const octave_qt_link&);
 
   void do_insert_debugger_pointer (const std::string& file, int line);
   void do_delete_debugger_pointer (const std::string& file, int line);
 
   // Thread running octave_main.
-  octave_main_thread *main_thread;
+  QThread *main_thread;
+
+  // Octave interpreter (misnamed class)
+  octave_main_thread *octave_interpreter;
 
 signals:
 
+  void execute_interpreter_signal (void);
+
   void exit_signal (int status);
 
   void edit_file_signal (const QString& file);
 
   void change_directory_signal (const QString& dir);
 
   void execute_command_in_terminal_signal (const QString& command);
 
