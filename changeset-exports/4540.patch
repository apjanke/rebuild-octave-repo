# HG changeset patch
# User jwe
# Date 1066325647 0
#      Thu Oct 16 17:34:07 2003 +0000
# Node ID 491ac5f9d1207bb6742cc9653cfb9497fcb04ac4
# Parent  5c6f7daf1e3f3a453d34ed5da3a5833b17b2ad1e
[project @ 2003-10-16 17:34:07 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2003-10-16  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* parse.y (text_getc): New static function.
+	(gobble_leading_white_space): Use it to simplify EOL processing.
+
 2003-10-15  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* file-io.cc (fopen_mode_to_ios_mode): Ignore "t" in mode string.
 
 	* strfns.cc (Fischar): rename from Fisstr.
 
 2003-10-09  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/parse.y b/src/parse.y
--- a/src/parse.y
+++ b/src/parse.y
@@ -3055,16 +3055,37 @@ looks_like_octave_copyright (const std::
 		retval = true;
 	    }
 	}
     }
 
   return retval;
 }
 
+static int
+text_getc (FILE *f)
+{
+  int c = getc (f);
+
+  // Convert CRLF into just LF.
+
+  if (c == '\r')
+    {
+      c = getc (f);
+
+      if (c != '\n')
+	{
+	  ungetc (c, f);
+	  c = '\r';
+	}
+    }
+
+  return c;
+}
+
 // Eat whitespace and comments from FFILE, returning the text of the
 // comments read if it doesn't look like a copyright notice.  If
 // IN_PARTS, consider each block of comments separately; otherwise,
 // grab them all at once.  If UPDATE_POS is TRUE, line and column
 // number information is updated.  If SAVE_COPYRIGHT is TRUE, then
 // comments that are recognized as a copyright notice are saved in the
 // comment buffer.
 
@@ -3090,17 +3111,17 @@ gobble_leading_white_space (FILE *ffile,
   bool in_comment = false;
 
   // TRUE means we should discard the first space from the input
   // (used to strip leading spaces from the help text).
   bool discard_space = true;
 
   int c;
 
-  while ((c = getc (ffile)) != EOF)
+  while ((c = text_getc (ffile)) != EOF)
     {
       if (update_pos)
 	current_input_column++;
 
       if (begin_comment)
 	{
 	  if (c == '%' || c == '#')
 	    continue;
@@ -3129,17 +3150,17 @@ gobble_leading_white_space (FILE *ffile,
 		  current_input_column = 0;
 		}
 
 	      in_comment = false;
 	      discard_space = true;
 
 	      if (in_parts)
 		{
-		  if ((c = getc (ffile)) != EOF)
+		  if ((c = text_getc (ffile)) != EOF)
 		    {
 		      if (update_pos)
 			current_input_column--;
 		      ungetc (c, ffile);
 		      if (c == '\n')
 			break;
 		    }
 		  else
@@ -3168,36 +3189,16 @@ gobble_leading_white_space (FILE *ffile,
 		have_help_text = true;
 	      if (update_pos)
 		{
 		  input_line_number++;
 		  current_input_column = 0;
 		}
 	      continue;
 
-	    case '\r':
-	      c = getc (ffile);
-	      if (update_pos)
-		current_input_column++;
-	      if (c == EOF)
-		goto done;
-	      else if (c == '\n')
-		{
-		  if (first_comments_seen)
-		    have_help_text = true;
-		  if (update_pos)
-		    {
-		      input_line_number++;
-		      current_input_column = 0;
-		    } 
-		  continue;
-		}
-
-	      // Fall through...
-
 	    default:
 	      if (update_pos)
 		current_input_column--;
 	      ungetc (c, ffile);
 	      goto done;
 	    }
 	}
     }
