# HG changeset patch
# User jwe
# Date 1171938040 0
#      Tue Feb 20 02:20:40 2007 +0000
# Node ID a7a2f1596b4bfd40061daa6867d32f0c959cf211
# Parent  4905c543b3019d4195b8b6104c3e55a81dd6ee4b
[project @ 2007-02-20 02:20:40 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,15 @@
+2007-02-19  John W. Eaton  <jwe@octave.org>
+
+	* plot/__uiobject_alloc__.in: If next available element in
+	__uiobject_list__ is 0, grow list before doing anything else.
+	* plot/__uiobject_grow_list__.in: Only set __uiobject_head__ on
+	first call when size of __uiobject_list__ is 0.
+
 2007-02-16  John W. Eaton  <jwe@octave.org>
 
 	* miscellaneous/Makefile.in (SOURCES): Remove popen2.m from the list.
 
 2007-02-16  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* miscellaneous/popen2.m: Remove as replaced with builtin.
 
diff --git a/scripts/plot/__uiobject_alloc__.in b/scripts/plot/__uiobject_alloc__.in
--- a/scripts/plot/__uiobject_alloc__.in
+++ b/scripts/plot/__uiobject_alloc__.in
@@ -25,17 +25,17 @@
 
 ## Author: jwe
 
 function idx = __uiobject_alloc__ ()
 
   __uiobject_globals__;
 
   if (nargin == 0)
-    if (! __uiobject_head__)
+    if (! (__uiobject_head__ && __uiobject_list__(__uiobject_head__).next))
       __uiobject_grow_list__ ();
     endif
     idx = __uiobject_head__;
     __uiobject_list__(__uiobject_head__).in_use = true;
     __uiobject_head__ = __uiobject_list__(__uiobject_head__).next;
   else
     print_usage ();
   endif
diff --git a/scripts/plot/__uiobject_grow_list__.in b/scripts/plot/__uiobject_grow_list__.in
--- a/scripts/plot/__uiobject_grow_list__.in
+++ b/scripts/plot/__uiobject_grow_list__.in
@@ -31,25 +31,27 @@ function __uiobject_grow_list__ ()
   if (nargin == 0)
     static grow_size = 100;
     curr_size = length (__uiobject_list__);
     new_size = curr_size + grow_size;
     __uiobject_list__(new_size).next = 0;
     __uiobject_list__(new_size).in_use = false;
     __uiobject_list__(new_size).handle = NaN;
     __uiobject_list__(new_size).object = NaN;
-    if (curr_size)
+    if (curr_size == 0)
+      __uiobject_head__ = 1;
+    else
       __uiobject_list__(curr_size).next = curr_size+1;
       __uiobject_list__(curr_size).in_use = false;
       __uiobject_list__(curr_size).handle = NaN;
       __uiobject_list__(curr_size).object = NaN;
     endif
     for i = new_size-1:-1:curr_size+1
       __uiobject_list__(i).next = i+1;
       __uiobject_list__(i).in_use = false;
       __uiobject_list__(i).handle = NaN;
       __uiobject_list__(i).object = NaN;
     endfor
-    __uiobject_head__ = curr_size+1;
   else
     print_usage ();
   endif
+
 endfunction
