# HG changeset patch
# User Rik <rik@octave.org>
# Date 1349459399 25200
#      Fri Oct 05 10:49:59 2012 -0700
# Node ID 29382eb90285d94129575c9ee444ff4573de83f5
# Parent  05aee5a1ff3795864daba6016ac4701b1ddd86e1
Fix compilation when JIT is enabled.

* libinterp/interp-core/pt-jit.cc (Fenable_jit_debugging, Fenable_jit_compiler):
Re-instate args, nargout in DEFUN macro as they are required by SET_INTERNAL_VARIABLE.

diff --git a/libinterp/interp-core/pt-jit.cc b/libinterp/interp-core/pt-jit.cc
--- a/libinterp/interp-core/pt-jit.cc
+++ b/libinterp/interp-core/pt-jit.cc
@@ -2175,32 +2175,32 @@ jit_info::find (const vmap& extra_vars, 
 {
   vmap::const_iterator iter = extra_vars.find (vname);
   return iter == extra_vars.end () ? symbol_table::varval (vname)
     : *iter->second;
 }
 
 #endif
 
-DEFUN (enable_jit_debugging, , ,
+DEFUN (enable_jit_debugging, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} enable_jit_debugging ()\n\
 Query or set the internal variable that determines whether\n\
 debugging/tracing is enabled for Octave's JIT compiler.\n\
 @end deftypefn")
 {
 #if defined (HAVE_LLVM)
   return SET_INTERNAL_VARIABLE (enable_jit_debugging);
 #else
   warning ("enable_jit_debugging: JIT compiling not available in this version of Octave");
   return octave_value ();
 #endif
 }
 
-DEFUN (enable_jit_compiler, , ,
+DEFUN (enable_jit_compiler, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} enable_jit_compiler ()\n\
 Query or set the internal variable that enables Octave's JIT compiler.\n\
 @end deftypefn")
 {
 #if defined (HAVE_LLVM)
   return SET_INTERNAL_VARIABLE (enable_jit_compiler);
 #else
