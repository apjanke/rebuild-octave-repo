# HG changeset patch
# User jwe
# Date 809296641 0
#      Thu Aug 24 20:37:21 1995 +0000
# Node ID 47ad5707a6b8394d90e7dac987d61044825ee58c
# Parent  b3fb410592a60655b7afca0925ce87c0462f6fec
[project @ 1995-08-24 20:37:21 by jwe]

diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -15,17 +15,17 @@ dnl Copyright (C) 1992, 1993, 1994, 1995
 ### ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 ### FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 ### for more details.
 ### 
 ### You should have received a copy of the GNU General Public License
 ### along with Octave; see the file COPYING.  If not, write to the Free
 ### Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 
-AC_REVISION($Revision: 1.127 $)
+AC_REVISION($Revision: 1.128 $)
 AC_PREREQ(2.0)
 AC_INIT(src/octave.cc)
 AC_CONFIG_HEADER(config.h)
 
 AC_DEFINE(OCTAVE_SOURCE, 1)
 
 AC_CANONICAL_HOST
 if test -z "$host"; then
@@ -263,31 +263,31 @@ if test -f $srcdir/libcruft/fsqp/fsqpd.f
   AC_MSG_RESULT(yes)
 else
   AC_MSG_RESULT(no)
   AC_DEFINE(FSQP_MISSING, 1)
 fi
 
 ### See which C++ compiler to use (we expect to find g++).
 
+EXTERN_CXXFLAGS="$CXXFLAGS"
+
 AC_PROG_CXX
 AC_PROG_CXXCPP
 
 ### Do special things for g++.
 
 ADD_CXX_WALL=false
 NO_IMPLICIT_TEMPLATES=
 gxx_version=`$CXX -v 2>&1 | grep "^.*g.. version" | sed 's/^.*g.. version *//'`
 case "$gxx_version" in
 changequote(,)dnl
   2.[6789].*|2.[123456789][0123456789].*)
 changequote([,])dnl
-    if test -z "$CXXFLAGS"; then
-      CXXFLAGS="-g -O"
-      AC_MSG_RESULT([defining CXXFLAGS to be $CXXFLAGS])
+    if test -z "$EXTERN_CXXFLAGS"; then
       ADD_CXX_WALL=true
     fi
     NO_IMPLICIT_TEMPLATES="-fno-implicit-templates"
     AC_MSG_RESULT([defining NO_IMPLICIT_TEMPLATES to be $NO_IMPLICIT_TEMPLATES])
   ;;
 changequote(,)dnl
   1.*|2.[012345].*)
 changequote([,])dnl
@@ -306,52 +306,48 @@ case "$gxx_version" in
         HOST_CXXFLAGS="-Wa,-u"
         AC_MSG_RESULT([defining HOST_CXXFLAGS to be $HOST_CXXFLAGS])
       ;;
     esac
   ;;
 esac
 
 AC_SUBST(HOST_CXXFLAGS)
-AC_SUBST(CXXFLAGS)
 AC_SUBST(NO_IMPLICIT_TEMPLATES)
 
 ### See which C compiler to use (we expect to find gcc).
 
+EXTERN_CFLAGS="$CFLAGS"
+
 AC_PROG_CC
 AC_PROG_CPP
 AC_PROG_GCC_TRADITIONAL
 
 ### Do special things for gcc.
 
 ADD_CC_WALL=false
 gcc_version=`$CC -v 2>&1 | grep "^.*gcc version" | sed 's/^.*gcc version *//'`
 case "$gcc_version" in
   2.*)
-    if test -z "$CFLAGS"; then
-      CFLAGS="-g -O"
-      AC_MSG_RESULT([defining CFLAGS to be $CFLAGS])
+    if test -z "$EXTERN_CFLAGS"; then
       ADD_CC_WALL=true
     fi
     if test -z "$LDFLAGS"; then
       LDFLAGS="-g"
       AC_MSG_RESULT([defining LDFLAGS to be $LDFLAGS])
     fi
   ;;
   1.*)
     AC_MSG_WARN([gcc version $gcc_version is likely to cause problems])
   ;;
   *)
     AC_MSG_WARN([Octave has only been tested with gcc, and I can't find it])
   ;;
 esac
 
-AC_SUBST(CFLAGS)
-AC_SUBST(LDFLAGS)
-
 ### On Linux systems we need to compile with -mieee-fp to get full
 ### support for IEEE floating point.
 
 case "$canonical_host_type" in
   i386-*-linux | i486-*-linux | i586-*-linux)
     GCC_IEEE_FP_FLAG="-mieee-fp"
     AC_MSG_RESULT([defining GCC_IEEE_FP_FLAG to be $GCC_IEEE_FP_FLAG])
   ;;
