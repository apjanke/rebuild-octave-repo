# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1329349272 18000
#      Wed Feb 15 18:41:12 2012 -0500
# Node ID ba01a38bc5c1ee88b0b9197632364ec4a99e3d0a
# Parent  b76f0740940ea5cfacaf4a60302f6524d1947f26
Use internal bounding box in figure::properties::set_position.

* graphics.cc (figure::properties::update_units): Don't run listeners when
changing units property.
* graphics.cc (figure::properties::set_position): Use internal bounding box
to trigger update actions. Move listeners execution to the end.

diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -3249,31 +3249,36 @@ figure::properties::map_to_boundingbox (
 
 void
 figure::properties::set_position (const octave_value& v,
                                   bool do_notify_toolkit)
 {
   if (! error_state)
     {
       Matrix old_bb, new_bb;
-
-      old_bb = get_boundingbox ();
-      position.set (v, true, do_notify_toolkit);
-      new_bb = get_boundingbox ();
+      bool modified = false;
+
+      old_bb = get_boundingbox (true);
+      modified = position.set (v, false, do_notify_toolkit);
+      new_bb = get_boundingbox (true);
 
       if (old_bb != new_bb)
         {
           if (old_bb(2) != new_bb(2) || old_bb(3) != new_bb(3))
             {
               execute_resizefcn ();
               update_boundingbox ();
             }
         }
 
-      mark_modified ();
+      if (modified)
+        {
+          position.run_listeners (POSTSET);
+          mark_modified ();
+        }
     }
 }
 
 void
 figure::properties::set_outerposition (const octave_value& v,
                                        bool do_notify_toolkit)
 {
   if (! error_state)
@@ -3706,18 +3711,18 @@ figure::properties::set_units (const oct
           mark_modified ();
         }
     }
 }
 
 void
 figure::properties::update_units (const caseless_str& old_units)
 {
-  set_position (convert_position (get_position ().matrix_value (), old_units,
-                                  get_units (), screen_size_pixels ()));
+  position.set (convert_position (get_position ().matrix_value (), old_units,
+                                  get_units (), screen_size_pixels ()), false);
 }
 
 /*
 %!test
 %! figure (1, "visible", false)
 %! set (0, "units", "pixels")
 %! rsz = get (0, "screensize");
 %! set (gcf (), "units", "pixels")
