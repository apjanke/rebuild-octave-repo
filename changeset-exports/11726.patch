# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1207157683 14400
#      Wed Apr 02 13:34:43 2008 -0400
# Branch release-3-0-x
# Node ID 5ccda2448992365c2a79a4b2ae2a8c0ea7fc89ff
# Parent  69c8f4cdd4727218cdb71501abb8bb8d49198308
new tickdir and tickdirmode axes properties

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2008-04-02  John W. Eaton  <jwe@octave.org>
+
+	* graphics.cc, graphics.h.in (class axes):
+	New properties, tickdir and tickdirmode.
+
 2008-03-27  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/max.cc: Rename from minmax.cc.
 	* Makefile.in (DLD_XSRC): Rename minmax.cc to max.cc.
 
 2008-03-08  Primozz Peterlin  <primozz.peterlin@gmail.com>
 
 	* variables.cc (Fexist): Doc fix.
diff --git a/src/graphics.cc b/src/graphics.cc
--- a/src/graphics.cc
+++ b/src/graphics.cc
@@ -1123,16 +1123,18 @@ axes::properties::properties (const grap
     ytickmode ("auto"),
     ztickmode ("auto"),
     xticklabel (""),
     yticklabel (""),
     zticklabel (""),
     xticklabelmode ("auto"),
     yticklabelmode ("auto"),
     zticklabelmode ("auto"),
+    tickdir (radio_values ("{in}|out")),
+    tickdirmode (radio_values ("{auto}|manual")),
     color (color_values (0, 0, 0), radio_values ("flat|none|interp")),
     xcolor (color_values (0, 0, 0)),
     ycolor (color_values (0, 0, 0)),
     zcolor (color_values (0, 0, 0)),
     xscale (radio_values ("{linear}|log")),
     yscale (radio_values ("{linear}|log")),
     zscale (radio_values ("{linear}|log")),
     xdir ("normal"),
@@ -1320,16 +1322,20 @@ axes::properties::set (const caseless_st
   else if (name.compare ("zticklabel"))
     set_zticklabel (val);
   else if (name.compare ("xticklabelmode"))
     set_xticklabelmode (val);
   else if (name.compare ("yticklabelmode"))
     set_yticklabelmode (val);
   else if (name.compare ("zticklabelmode"))
     set_zticklabelmode (val);
+  else if (name.compare ("tickdir"))
+    set_tickdir (val);
+  else if (name.compare ("tickdirmode"))
+    set_tickdirmode (val);
   else if (name.compare ("color"))
     set_color (val);
   else if (name.compare ("xcolor"))
     set_xcolor (val);
   else if (name.compare ("ycolor"))
     set_ycolor (val);
   else if (name.compare ("zcolor"))
     set_zcolor (val);
@@ -1418,16 +1424,18 @@ axes::properties::set_defaults (base_gra
   ytickmode = "auto";
   ztickmode = "auto";
   xticklabel = "";
   yticklabel = "";
   zticklabel = "";
   xticklabelmode = "auto";
   yticklabelmode = "auto";
   zticklabelmode = "auto";
+  tickdir = radio_property (radio_values ("{in}|out"));
+  tickdirmode = radio_property (radio_values ("{auto}|manual"));
   color = color_property (color_values (0, 0, 0), radio_values("flat|none|interp"));
   xcolor = color_property ("black");
   ycolor = color_property ("black");
   zcolor = color_property ("black");
   xscale = radio_property (radio_values ("{linear}|log"));
   yscale = radio_property (radio_values ("{linear}|log"));
   zscale = radio_property (radio_values ("{linear}|log"));
   xdir = "normal";
@@ -1545,16 +1553,18 @@ axes::properties::get (void) const
   m.assign ("ytickmode", ytickmode);
   m.assign ("ztickmode", ztickmode);
   m.assign ("xticklabel", xticklabel);
   m.assign ("yticklabel", yticklabel);
   m.assign ("zticklabel", zticklabel);
   m.assign ("xticklabelmode", xticklabelmode);
   m.assign ("yticklabelmode", yticklabelmode);
   m.assign ("zticklabelmode", zticklabelmode);
+  m.assign ("tickdir", tickdir);
+  m.assign ("tickdirmode", tickdirmode);
   m.assign ("color", color);
   m.assign ("xcolor", xcolor);
   m.assign ("ycolor", ycolor);
   m.assign ("zcolor", zcolor);
   m.assign ("xscale", xscale);
   m.assign ("yscale", yscale);
   m.assign ("zscale", zscale);
   m.assign ("xdir", xdir);
@@ -1661,16 +1671,20 @@ axes::properties::get (const caseless_st
   else if (name.compare ("zticklabel"))
     retval = zticklabel;
   else if (name.compare ("xticklabelmode"))
     retval = xticklabelmode;
   else if (name.compare ("yticklabelmode"))
     retval = yticklabelmode;
   else if (name.compare ("zticklabelmode"))
     retval = zticklabelmode;
+  else if (name.compare ("tickdir"))
+    retval = tickdir;
+  else if (name.compare ("tickdirmode"))
+    retval = tickdirmode;
   else if (name.compare ("color"))
     retval = color;
   else if (name.compare ("xcolor"))
     retval = xcolor;
   else if (name.compare ("ycolor"))
     retval = ycolor;
   else if (name.compare ("zcolor"))
     retval = zcolor;
@@ -1784,16 +1798,18 @@ axes::properties::factory_defaults (void
   m["ytickmode"] = "auto";
   m["ztickmode"] = "auto";
   m["xticklabel"] = "";
   m["yticklabel"] = "";
   m["zticklabel"] = "";
   m["xticklabelmode"] = "auto";
   m["yticklabelmode"] = "auto";
   m["zticklabelmode"] = "auto";
+  m["tickdir"] = radio_property (radio_values ("{in}|out"));
+  m["tickdirmode"] = radio_property (radio_values ("{auto}|manual"));
   m["color"] = color_property (color_values (0, 0, 0), radio_values("flat|none|interp"));
   m["xcolor"] = color_property ("black");
   m["ycolor"] = color_property ("black");
   m["zcolor"] = color_property ("black");
   m["xscale"] = radio_property (radio_values ("{linear}|log"));
   m["yscale"] = radio_property (radio_values ("{linear}|log"));
   m["zscale"] = radio_property (radio_values ("{linear}|log"));
   m["xdir"] = "normal";
diff --git a/src/graphics.h.in b/src/graphics.h.in
--- a/src/graphics.h.in
+++ b/src/graphics.h.in
@@ -1397,16 +1397,18 @@ public:
       octave_value ytickmode
       octave_value ztickmode
       octave_value xticklabel m
       octave_value yticklabel m
       octave_value zticklabel m
       octave_value xticklabelmode
       octave_value yticklabelmode
       octave_value zticklabelmode
+      radio_property tickdir am
+      radio_property tickdirmode al
       color_property color a
       color_property xcolor
       color_property ycolor
       color_property zcolor
       radio_property xscale al
       radio_property yscale al
       radio_property zscale al
       octave_value xdir
