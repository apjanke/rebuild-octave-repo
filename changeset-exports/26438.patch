# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546647839 28800
#      Fri Jan 04 16:23:59 2019 -0800
# Branch stable
# Node ID c048a6ac0f791d3eae7009ad03c59291193ddfe6
# Parent  b43eb366666cdda3dc2feede4acf1f4c6436d182
mex.cc: Fix static analyzer detected issues (bug #55347).

* mex.cc (realloc): Call all functions which use input "ptr" BEFORE call to
std::realloc so as not to confuse static analyzer about the potential
validity of "ptr".

diff --git a/libinterp/corefcn/mex.cc b/libinterp/corefcn/mex.cc
--- a/libinterp/corefcn/mex.cc
+++ b/libinterp/corefcn/mex.cc
@@ -2223,32 +2223,34 @@ public:
   // If the pointer is NULL, allocate using malloc.
   // We don't need an "unmarked" version of this.
   void * realloc (void *ptr, size_t n)
   {
     void *v;
 
     if (ptr)
       {
+        auto p_local = memlist.find (ptr);
+        auto p_global = global_memlist.find (ptr);
+
         v = std::realloc (ptr, n);
 
-        auto p = memlist.find (ptr);
-
-        if (v && p != memlist.end ())
+        if (v)
           {
-            memlist.erase (p);
-            memlist.insert (v);
-          }
-
-        p = global_memlist.find (ptr);
-
-        if (v && p != global_memlist.end ())
-          {
-            global_memlist.erase (p);
-            global_memlist.insert (v);
+            if (p_local != memlist.end ())
+              {
+                memlist.erase (p_local);
+                memlist.insert (v);
+              }
+
+            if (p_global != global_memlist.end ())
+              {
+                global_memlist.erase (p_global);
+                global_memlist.insert (v);
+              }
           }
       }
     else
       v = malloc (n);
 
     return v;
   }
 
