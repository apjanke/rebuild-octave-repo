# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1380395054 14400
#      Sat Sep 28 15:04:14 2013 -0400
# Node ID 7542f4496974fc8e5d4c75b581d29e819b2fdf6a
# Parent  d0fa3568eb5db5710be63385efa7416b7532cf8b
eliminate some macros in version.h

* version.cc: New file.
* Makefile.am (DIST_SRC, liboctinterp_la_SOURCES): Add it to the lists.
* version.cc, version.in.h (octave_www_statement,
octave_contrib_statement, octave_bugs_statement,
octave_name_version_and_copyright,
octave_name_version_copyright_copying_and_warranty,
octave_name_version_copyright_copying_warranty_and_bugs,
octave_startup_message): New functions.
* version.cc (octave_warranty_statement, format_url):
New static functions.
* version.in.h (OCTAVE_API_VERSION_NUMBER, OCTAVE_NAME_AND_VERSION,
OCTAVE_CONFIG_STATEMENT, OCTAVE_COPYING_STATEMENT,
X_OCTAVE_WARRANTY_STATEMENT, OCTAVE_WARRANTY_STATEMENT,
OCTAVE_WWW_STATEMENT, OCTAVE_CONTRIB_STATEMENT OCTAVE_BUGS_STATEMENT
OCTAVE_NAME_VERSION_AND_COPYRIGHT,
OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY,
X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY,
X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS,
OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS,
OCTAVE_STARTUP_MESSAGE): Delete macros.
Change all uses to new functions.

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -537,19 +537,21 @@ main_window::handle_update_breakpoint_ma
 
   if (cmd_focus)
     focus_command_window ();
 }
 
 void
 main_window::show_about_octave (void)
 {
-  QString message = OCTAVE_STARTUP_MESSAGE;
+  std::string message
+    = octave_name_version_copyright_copying_warranty_and_bugs (true);
 
-  QMessageBox::about (this, tr ("About Octave"), message);
+  QMessageBox::about (this, tr ("About Octave"),
+                      QString::fromStdString (message));
 }
 
 void
 main_window::closeEvent (QCloseEvent *e)
 {
   e->ignore ();
   octave_link::post_event (this, &main_window::exit_callback);
 }
diff --git a/libinterp/Makefile.am b/libinterp/Makefile.am
--- a/libinterp/Makefile.am
+++ b/libinterp/Makefile.am
@@ -119,16 +119,17 @@ nodist_octinclude_HEADERS = \
   corefcn/mxarray.h \
   corefcn/defaults.h \
   corefcn/graphics.h \
   oct-conf.h \
   version.h
 
 DIST_SRC = \
   octave.cc \
+  version.cc \
   $(OCTAVE_VALUE_SRC) \
   $(PARSE_TREE_SRC) \
   $(PARSER_SRC) \
   $(COREFCN_SRC) \
   $(TEX_PARSER_SRC)
 
 noinst_LTLIBRARIES =
 
@@ -149,16 +150,17 @@ if AMCOND_ENABLE_DYNAMIC_LINKING
 else
   OCT_FILES =
   OCT_STAMP_FILES =
   DLD_LIBOCTINTERP_LIBADD =
 endif
 
 liboctinterp_la_SOURCES = \
   octave.cc \
+  version.cc \
   $(OPERATORS_SRC) \
   $(TEMPLATE_INST_SRC)
 
 nodist_liboctinterp_la_SOURCES = \
   corefcn/mxarray.h \
   corefcn/oct-errno.cc \
   corefcn/defaults.h \
   corefcn/graphics.h \
diff --git a/libinterp/corefcn/toplev.cc b/libinterp/corefcn/toplev.cc
--- a/libinterp/corefcn/toplev.cc
+++ b/libinterp/corefcn/toplev.cc
@@ -805,18 +805,17 @@ DEFALIAS (exit, quit);
 DEFUN (warranty, , ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} warranty ()\n\
 Describe the conditions for copying and distributing Octave.\n\
 @end deftypefn")
 {
   octave_value_list retval;
 
-  octave_stdout << "\n" \
-    OCTAVE_NAME_VERSION_AND_COPYRIGHT "\n\
+  octave_stdout << "\n" << octave_name_version_and_copyright () << "\n\
 \n\
 GNU Octave free software; you can redistribute it and/or modify\n\
 it under the terms of the GNU General Public License as published by\n\
 the Free Software Foundation; either version 3 of the License, or\n\
 (at your option) any later version.\n\
 \n\
 GNU Octave is distributed in the hope that it will be useful,\n\
 but WITHOUT ANY WARRANTY; without even the implied warranty of\n\
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -511,17 +511,18 @@ execute_command_line_file (const std::st
   safe_source_file (fname, context, verbose, require_file, "octave");
 }
 
 // Usage message with extra help.
 
 static void
 verbose_usage (void)
 {
-  std::cout << OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY "\n\
+  std::cout << octave_name_version_copyright_copying_and_warranty ()
+            << "\n\
 \n\
 Usage: octave [options] [FILE]\n\
 \n\
 Options:\n\
 \n\
   --built-in-docstrings-file FILE Use docs for built-ins from FILE.\n\
   --debug, -d             Enter parser debugging mode.\n\
   --debug-jit             Enable JIT compiler debugging/tracing.\n\
@@ -551,38 +552,40 @@ Options:\n\
   --texi-macros-file FILE Use Texinfo macros in FILE for makeinfo command.\n\
   --traditional           Set variables for closer MATLAB compatibility.\n\
   --verbose, -V           Enable verbose output in some cases.\n\
   --version, -v           Print version number and exit.\n\
 \n\
   FILE                    Execute commands from FILE.  Exit when done\n\
                           unless --persist is also specified.\n\
 \n"
-OCTAVE_WWW_STATEMENT "\n\
-\n"
-OCTAVE_CONTRIB_STATEMENT "\n\
-\n"
-OCTAVE_BUGS_STATEMENT "\n";
+            << octave_www_statement ()
+            << "\n\n"
+            << octave_contrib_statement ()
+            << "\n\n"
+            << octave_bugs_statement ()
+            << "\n";
 
   exit (0);
 }
 
 // Terse usage messsage.
 
 static void
 usage (void)
 {
   std::cerr << "\nusage: " << usage_string << "\n\n";
   exit (1);
 }
 
 static void
 print_version_and_exit (void)
 {
-  std::cout << OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS "\n";
+  std::cout << octave_name_version_copyright_copying_warranty_and_bugs ()
+            << "\n";
   exit (0);
 }
 
 static void
 lo_error_handler (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
@@ -936,17 +939,17 @@ octave_initialize_interpreter (int argc,
 
   initialize_history (read_history_file);
 }
 
 int
 octave_execute_interpreter (void)
 {
   if (! inhibit_startup_message)
-    std::cout << OCTAVE_STARTUP_MESSAGE "\n" << std::endl;
+    std::cout << octave_startup_message () << "\n" << std::endl;
 
   execute_startup_files ();
 
   if (! inhibit_startup_message && reading_startup_message_printed)
     std::cout << std::endl;
 
   // If there is an extra argument, see if it names a file to read.
   // Additional arguments are taken as command line options for the
diff --git a/libinterp/version.cc b/libinterp/version.cc
new file mode 100644
--- /dev/null
+++ b/libinterp/version.cc
@@ -0,0 +1,131 @@
+/*
+
+Copyright (C) 2013 John W. Eaton
+
+This file is part of Octave.
+
+Octave is free software; you can redistribute it and/or modify it
+under the terms of the GNU General Public License as published by the
+Free Software Foundation; either version 3 of the License, or (at your
+option) any later version.
+
+Octave is distributed in the hope that it will be useful, but WITHOUT
+ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+
+You should have received a copy of the GNU General Public License
+along with Octave; see the file COPYING.  If not, see
+<http://www.gnu.org/licenses/>.
+
+*/
+
+#ifdef HAVE_CONFIG_H
+#include <config.h>
+#endif
+
+#include <string>
+
+#include "defaults.h"
+#include "version.h"
+
+static std::string
+octave_warranty_statement (const std::string& extra_info = std::string ())
+{
+  return "There is ABSOLUTELY NO WARRANTY; not even for MERCHANTABILITY or\n\
+FITNESS FOR A PARTICULAR PURPOSE."
+    + extra_info;
+}
+
+static std::string
+format_url (bool html, const std::string& url)
+{
+  return html ? "<a href=\"" + url + "\">" + url + "</a>" : url;
+}
+
+std::string
+octave_www_statement (bool html)
+{
+  return "Additional information about Octave is available at "
+    + format_url (html, "http://www.octave.org.");
+}
+
+std::string
+octave_contrib_statement (bool html)
+{
+  return "Please contribute if you find this software useful.\n\
+For more information, visit "
+    + format_url (html, "http://www.octave.org/get-involved.html");
+}
+
+std::string
+octave_bugs_statement (bool html)
+{
+  return "Read " + format_url (html, "http://www.octave.org/bugs.html")
+    + " to learn how to submit bug reports.";
+}
+
+std::string
+octave_name_version_and_copyright (void)
+{
+  // The GNU coding standards say that on the first line printed by
+  // --version, the version number should follow the last space on the
+  // line.
+
+  return "GNU Octave, version " OCTAVE_VERSION "\n" OCTAVE_COPYRIGHT;
+}
+
+std::string
+octave_name_version_copyright_copying_and_warranty
+ (bool html, const std::string& extra_info)
+{
+  std::string br = html ? "<br>\n" : "\n";
+  std::string sep = html ? "\n</p>\n<p>\n" : "\n\n";
+
+  return octave_name_version_and_copyright ()
+    + br
+    + "This is free software; see the source code for copying conditions."
+    + br
+    + octave_warranty_statement (extra_info)
+    + sep
+    + "Octave was configured for \"" OCTAVE_CANONICAL_HOST_TYPE "\".";
+}
+
+std::string
+octave_name_version_copyright_copying_warranty_and_bugs
+  (bool html, const std::string& extra_info)
+{
+  std::string sep = html ? "\n</p>\n<p>\n" : "\n\n";
+
+  std::string msg;
+
+  if (html)
+    msg = "<p>\n";
+
+  msg += octave_name_version_copyright_copying_and_warranty (html, extra_info)
+    + sep
+    + octave_www_statement (html)
+    + sep
+    + octave_contrib_statement (html)
+    + sep
+    + octave_bugs_statement (html)
+    + (html ? "\n</p>" : "");
+
+  return msg;
+}
+
+std::string
+octave_startup_message (bool html)
+{
+  std::string msg
+    = octave_name_version_copyright_copying_warranty_and_bugs
+        (html, "  For details, type 'warranty'.");
+
+  msg += (html ? "<p>\n" : "\n");
+
+  msg += "For information about changes from previous versions, type 'news'.";
+
+  msg += (html ? "\n</p>" : "");
+
+  return msg;
+}
diff --git a/libinterp/version.in.h b/libinterp/version.in.h
--- a/libinterp/version.in.h
+++ b/libinterp/version.in.h
@@ -21,72 +21,33 @@ along with Octave; see the file COPYING.
 
 */
 
 #if !defined (octave_version_h)
 #define octave_version_h 1
 
 #define OCTAVE_VERSION %OCTAVE_VERSION%
 
-#define OCTAVE_API_VERSION_NUMBER %OCTAVE_API_VERSION_NUMBER%
-
 #define OCTAVE_API_VERSION %OCTAVE_API_VERSION%
 
 #define OCTAVE_RELEASE_DATE %OCTAVE_RELEASE_DATE%
 
 #define OCTAVE_COPYRIGHT %OCTAVE_COPYRIGHT%
 
-// This is the first line printed by --version.  The GNU coding
-// standards say that the version number should follow the last space
-// on the line.
-
-#define OCTAVE_NAME_AND_VERSION "GNU Octave, version " OCTAVE_VERSION
+extern std::string octave_www_statement (bool html = false);
 
-#define OCTAVE_CONFIG_STATEMENT \
-  "Octave was configured for \"" OCTAVE_CANONICAL_HOST_TYPE "\"."
-
-#define OCTAVE_COPYING_STATEMENT \
-  "This is free software; see the source code for copying conditions."
+extern std::string octave_contrib_statement (bool html = false);
 
-#define X_OCTAVE_WARRANTY_STATEMENT(ARG) \
-  "There is ABSOLUTELY NO WARRANTY; not even for MERCHANTABILITY or\n\
-FITNESS FOR A PARTICULAR PURPOSE." ARG
-
-#define OCTAVE_WARRANTY_STATEMENT \
-  X_OCTAVE_WARRANTY_STATEMENT ("")
+extern std::string octave_bugs_statement (bool html = false);
 
-#define OCTAVE_WWW_STATEMENT \
-  "Additional information about Octave is available at http://www.octave.org."
-
-#define OCTAVE_CONTRIB_STATEMENT \
-  "Please contribute if you find this software useful.\n\
-For more information, visit http://www.octave.org/get-involved.html"
+extern std::string octave_name_version_and_copyright (void);
 
-#define OCTAVE_BUGS_STATEMENT \
-  "Read http://www.octave.org/bugs.html to learn how to submit bug reports."
-
-#define OCTAVE_NAME_VERSION_AND_COPYRIGHT \
-  OCTAVE_NAME_AND_VERSION "\n" \
-  OCTAVE_COPYRIGHT
-
-#define OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY \
-  X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY("") \
+extern std::string
+octave_name_version_copyright_copying_and_warranty
+  (bool html = false, const std::string& extra_info = std::string ());
 
-#define X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY(ARG) \
-  OCTAVE_NAME_VERSION_AND_COPYRIGHT "\n" \
-  OCTAVE_COPYING_STATEMENT "\n" \
-  X_OCTAVE_WARRANTY_STATEMENT (ARG) "\n\n" \
-  OCTAVE_CONFIG_STATEMENT
+extern std::string
+octave_name_version_copyright_copying_warranty_and_bugs
+  (bool html = false, const std::string& extra_info = std::string ());
 
-#define X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS(ARG) \
-  X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_AND_WARRANTY(ARG) "\n\n" \
-  OCTAVE_WWW_STATEMENT "\n\n" \
-  OCTAVE_CONTRIB_STATEMENT "\n\n" \
-  OCTAVE_BUGS_STATEMENT
+extern std::string octave_startup_message (bool html = false);
 
-#define OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS \
-  X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS ("")
-
-#define OCTAVE_STARTUP_MESSAGE \
-  X_OCTAVE_NAME_VERSION_COPYRIGHT_COPYING_WARRANTY_AND_BUGS \
-    ("  For details, type 'warranty'.") "\n\n" \
-  "For information about changes from previous versions, type 'news'."
 #endif
