# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1435181556 14400
#      Wed Jun 24 17:32:36 2015 -0400
# Node ID a0fab64685ab2e61db95ecd0c211b832daf9d34f
# Parent  5db7eea18d76efcf9c6ae2ccb529664a5c0dca09
Avoid HAVE_ macro in header file.

* sparse-util.h, sparse-util.cc (SparseCholError, SparseCholPrint):
Unconditionally declare and define functions.

diff --git a/liboctave/util/sparse-util.cc b/liboctave/util/sparse-util.cc
--- a/liboctave/util/sparse-util.cc
+++ b/liboctave/util/sparse-util.cc
@@ -28,49 +28,56 @@ along with Octave; see the file COPYING.
 #include <stdio.h>
 #include <stdarg.h>
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "sparse-util.h"
 
 // FIXME: this overload is here due to API change in SuiteSparse (3.1 -> 3.2)
 
-#ifdef HAVE_CHOLMOD
-
 void
 SparseCholError (int status, char *file, int line, char *message)
 {
   SparseCholError (status, file, line, message);
 }
 
+#ifdef HAVE_CHOLMOD
+
 void
 SparseCholError (int status, const char *file, int line, const char *message)
 {
 
   // Ignore CHOLMOD_NOT_POSDEF, since we handle that in Fchol as an
   // error or exit status.
   if (status != CHOLMOD_NOT_POSDEF)
     (*current_liboctave_warning_with_id_handler)
       ("Octave:cholmod-message", "warning %i, at line %i in file %s: %s",
        status, line, file, message);
 }
 
+#else
+
+void
+SparseCholError (int status, const char *, int, const char *)
+{
+}
+
+#endif //HAVE_CHOLMOD
+
 int
 SparseCholPrint (const char *fmt, ...)
 {
   va_list args;
   va_start (args, fmt);
   int ret = gnulib::vfprintf (stderr, fmt, args);
   gnulib::fflush (stderr);
   va_end (args);
   return ret;
 }
 
-#endif //HAVE_CHOLMOD
-
 bool
 sparse_indices_ok (octave_idx_type *r, octave_idx_type *c,
                    octave_idx_type nrows, octave_idx_type ncols,
                    octave_idx_type nnz)
 {
   if (nnz > 0)
     {
       if (c[0] != 0)
diff --git a/liboctave/util/sparse-util.h b/liboctave/util/sparse-util.h
--- a/liboctave/util/sparse-util.h
+++ b/liboctave/util/sparse-util.h
@@ -19,25 +19,27 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if !defined (octave_sparse_util_h)
 #define octave_sparse_util_h 1
 
-#ifdef HAVE_CHOLMOD
+// The next two functions don't do anything unless CHOLMOD is
+// available
 
 // FIXME this overload is here due to API change in SuiteSparse (3.1 -> 3.2)
-extern OCTAVE_API void SparseCholError (int status, char *file,
-                                        int line, char *message);
-extern OCTAVE_API void SparseCholError (int status, const char *file,
-                                        int line, const char *message);
-extern OCTAVE_API int SparseCholPrint (const char *fmt, ...);
+extern OCTAVE_API void
+SparseCholError (int status, char *file, int line, char *message);
 
-#endif //HAVE_CHOLMOD
+extern OCTAVE_API void
+SparseCholError (int status, const char *file, int line, const char *message);
+
+extern OCTAVE_API int
+SparseCholPrint (const char *fmt, ...);
 
 extern OCTAVE_API bool
 sparse_indices_ok (octave_idx_type *r, octave_idx_type *c,
                    octave_idx_type nrows, octave_idx_type ncols,
                    octave_idx_type nnz);
 
 #endif
