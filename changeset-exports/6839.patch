# HG changeset patch
# User dbateman
# Date 1188314893 0
#      Tue Aug 28 15:28:13 2007 +0000
# Node ID 40ad396488841b0e2ec868ed760940bc5f9c85d9
# Parent  5e3350bdd91dac5ed1b5edf0538583d7fc6f1c49
[project @ 2007-08-28 15:28:13 by dbateman]

diff --git a/doc/interpreter/container.txi b/doc/interpreter/container.txi
--- a/doc/interpreter/container.txi
+++ b/doc/interpreter/container.txi
@@ -293,32 +293,32 @@ Elements can be deleted from a structure
 numerial array, by assignment the elements to an empty matrix. For
 example
 
 @example
 @group
 in = struct ('call1', @{x, Inf, 'last'@}, 'call2', @{x, Inf, 'first'@});
 in (1, :) = []
 @result{} in =
-      {
+      @{
         call1 =
       
         (,
           [1] = Inf
           [2] = last
         ,)
       
         call2 =
       
         (,
           [1] = Inf
           [2] = first
         ,)
       
-      }
+      @}
 @end group
 @end example
 
 @node Creating Structures
 @subsection Creating Structures
 
 As well as indexing a structure with ".", Octave can create a structure
 with the @code{struct} command. @code{struct} takes pairs of arguments,
@@ -566,32 +566,32 @@ Separated Lists}) of all the requested e
 One distinction between @samp{@{} and @samp{(} to index cell arrays is
 in the deletion of elements from the cell array. In a similar manner to
 a numerical array the @samp{()} operator can be used to delete elements
 from the cell array. The @samp{@{@}} operator however will remove the
 elements of the cell array, but not delete the space for them. For example
 
 @example
 @group
-x = {'1', '2'; '3', '4'};
-x{1, :} = []
-@result x =
-      {
+x = @{'1', '2'; '3', '4'@};
+x@{1, :@} = []
+@result{} x =
+      @{
         [1,1] = [](0x0)
         [2,1] = 3
         [1,2] = [](0x0)
         [2,2] = 4
-      }
+      @}
 
 x(1, :) = []
-@result {} x =
-      {
+@result{} x =
+      @{
         [1,1] = 3
         [1,2] = 4
-      }
+      @}
 @end group
 @end example
 
 @node Cell Arrays of Strings
 @subsection Cell Arrays of Strings
 
 One common use of cell arrays is to store multiple strings in the same
 variable. It is possible to store multiple strings in a character matrix
