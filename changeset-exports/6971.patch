# HG changeset patch
# User dbateman
# Date 1191786293 0
#      Sun Oct 07 19:44:53 2007 +0000
# Node ID 0a9d97cf2e13ec9e1a7bc68be5173c6f8ff970be
# Parent  3113e481833f853f4be473cdd0a3c835ea9c218d
[project @ 2007-10-07 19:44:53 by dbateman]

diff --git a/src/DLD-FUNCTIONS/fft.cc b/src/DLD-FUNCTIONS/fft.cc
--- a/src/DLD-FUNCTIONS/fft.cc
+++ b/src/DLD-FUNCTIONS/fft.cc
@@ -175,17 +175,17 @@ specifying the number of elements of @va
 matrix to specify that its value should be ignored. If @var{n} is\n\
 larger than the dimension along which the FFT is calculated, then\n\
 @var{a} is resized and padded with zeros. Otherwise, if @var{n} is\n\
 smaller than the dimension along which the FFT is calculated, then\n\
 @var{a} is truncated.\n\
 \n\
 If called with three arguments, @var{dim} is an integer specifying the\n\
 dimension of the matrix along which the FFT is performed\n\
-@seealso{ifft, fft2, fftn, fftw_wisdom}\n\
+@seealso{ifft, fft2, fftn, fftw}\n\
 @end deftypefn")
 {
   return do_fft (args, "fft", 0);
 }
 
 
 DEFUN_DLD (ifft, args, ,
   "-*- texinfo -*-\n\
@@ -201,17 +201,17 @@ specifying the number of elements of @va
 matrix to specify that its value should be ignored. If @var{n} is\n\
 larger than the dimension along which the inverse FFT is calculated, then\n\
 @var{a} is resized and padded with zeros. Otherwise, if@var{n} is\n\
 smaller than the dimension along which the inverse FFT is calculated,\n\
 then @var{a} is truncated.\n\
 \n\
 If called with three agruments, @var{dim} is an integer specifying the\n\
 dimension of the matrix along which the inverse FFT is performed\n\
-@seealso{fft, ifft2, ifftn, fftw_wisdom}\n\
+@seealso{fft, ifft2, ifftn, fftw}\n\
 @end deftypefn")
 {
   return do_fft (args, "ifft", 1);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/DLD-FUNCTIONS/fft2.cc b/src/DLD-FUNCTIONS/fft2.cc
--- a/src/DLD-FUNCTIONS/fft2.cc
+++ b/src/DLD-FUNCTIONS/fft2.cc
@@ -144,17 +144,17 @@ Compute the two dimensional FFT of @var{
 FFTSRC
 ". The optional arguments @var{n} and @var{m} may be used specify the\n\
 number of rows and columns of @var{a} to use.  If either of these is\n\
 larger than the size of @var{a}, @var{a} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{a} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
 of @var{a} is treated seperately\n\
-@seealso {ifft2, fft, fftn, fftw_wisdom}\n\
+@seealso {ifft2, fft, fftn, fftw}\n\
 @end deftypefn")
 {
   return do_fft2 (args, "fft2", 0);
 }
 
 
 DEFUN_DLD (ifft2, args, ,
   "-*- texinfo -*-\n\
@@ -163,17 +163,17 @@ Compute the inverse two dimensional FFT 
 FFTSRC
 ". The optional arguments @var{n} and @var{m} may be used specify the\n\
 number of rows and columns of @var{a} to use.  If either of these is\n\
 larger than the size of @var{a}, @var{a} is resized and padded with\n\
 zeros.\n\
 \n\
 If @var{a} is a multi-dimensional matrix, each two-dimensional sub-matrix\n\
 of @var{a} is treated seperately\n\
-@seealso {fft2, ifft, ifftn, fftw_wisdom}\n\
+@seealso {fft2, ifft, ifftn, fftw}\n\
 @end deftypefn")
 {
   return do_fft2 (args, "ifft2", 1);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
diff --git a/src/DLD-FUNCTIONS/fftn.cc b/src/DLD-FUNCTIONS/fftn.cc
--- a/src/DLD-FUNCTIONS/fftn.cc
+++ b/src/DLD-FUNCTIONS/fftn.cc
@@ -125,34 +125,34 @@ DEFUN_DLD (fftn, args, ,
 Compute the N dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used. If an element of @var{size} is\n\
 smaller than the corresponding dimension, then the dimension is\n\
 truncated prior to performing the FFT. Otherwise if an element\n\
 of @var{size} is larger than the corresponding dimension @var{a}\n\
 is resized and padded with zeros.\n\
-@seealso {ifftn, fft, fft2, fftw_wisdom}\n\
+@seealso {ifftn, fft, fft2, fftw}\n\
 @end deftypefn")
 {
   return do_fftn (args, "fftn", 0);
 }
 
 DEFUN_DLD (ifftn, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {} ifftn (@var{a}, @var{size})\n\
 Compute the invesre N dimensional FFT of @var{a} using subroutines from\n"
 FFTSRC
 ". The optional vector argument @var{size} may be used specify the\n\
 dimensions of the array to be used. If an element of @var{size} is\n\
 smaller than the corresponding dimension, then the dimension is\n\
 truncated prior to performing the inverse FFT. Otherwise if an element\n\
 of @var{size} is larger than the corresponding dimension @var{a}\n\
 is resized and padded with zeros.\n\
-@seealso {fftn, ifft, ifft2, fftw_wisdom}\n\
+@seealso {fftn, ifft, ifft2, fftw}\n\
 @end deftypefn")
 {
   return do_fftn (args, "ifftn", 1);
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
