# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1226432077 18000
#      Tue Nov 11 14:34:37 2008 -0500
# Node ID e9d29ff98f30675cbaf3b65bd2f2581698296b5d
# Parent  7124bffc89c706595d118183b2ac019c5116d241
lex.l (<MATRIX_START>{S}+): Don't insert separator if next token is a separator.

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2008-11-11  John W. Eaton  <jwe@octave.org>
 
+	* lex.l (<MATRIX_START>{S}+): Don't insert separator if next token
+	is a separator.
+
 	* parse.y (F__parser_debug_flag__): New function.
 
 2008-10-31  Jaroslav Hajek <highegg@gmail.com>
 
 	* xnorm.cc: New source.
 	* xnorm.h: New header file.
 	* Makefile.in: Include xnorm.cc in the build process.
 	* data.cc (Fnorm): Call xnorm, xcolnorms, xrownorms or xfrobnorm
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -435,20 +435,21 @@ NUMBER	(({D}+\.?{D}*{EXPON}?)|(\.{D}+{EX
 // constants so we just eat them.  If we don't check for continuations
 // here we can end up inserting too many commas.
 %}
 
 <MATRIX_START>{S}+ {
     current_input_column += yyleng;
 
     int tmp = eat_continuation ();
-    int bin_op = next_token_is_bin_op (true);
-    int postfix_un_op = next_token_is_postfix_unary_op (true);
-
-    if (! (postfix_un_op || bin_op)
+    bool bin_op = next_token_is_bin_op (true);
+    bool postfix_un_op = next_token_is_postfix_unary_op (true);
+    bool sep_op = next_token_is_sep_op ();
+
+    if (! (postfix_un_op || bin_op || sep_op)
 	&& nesting_level.is_bracket_or_brace ()
 	&& lexer_flags.convert_spaces_to_comma)
       {
 	if ((tmp & ATE_NEWLINE) == ATE_NEWLINE)
 	  {
 	    maybe_warn_separator_insert (';');
 
 	    yyunput (';', yytext);
