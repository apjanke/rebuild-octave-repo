# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1421905957 -3600
#      Thu Jan 22 06:52:37 2015 +0100
# Branch gui-release
# Node ID d258070914ef17a455fba7450ad7c7d584ee90a3
# Parent  b6bd9159c1c9c4b6e6fba800bbc39993d69442b2
open file directly without edit command when editing a function from editor

* file-editor-tab.cc (handle_context_menu_edit): append .m to file name if
  necessary, emit new signal to editor for the file open request

* file-editor-tab.h: new signal requesting to open a file

* file-editor.cc (add_file_editor_tab): connect new request-open-signal to
  the already existing slot for opening a file

diff --git a/libgui/src/m-editor/file-editor-tab.cc b/libgui/src/m-editor/file-editor-tab.cc
--- a/libgui/src/m-editor/file-editor-tab.cc
+++ b/libgui/src/m-editor/file-editor-tab.cc
@@ -306,18 +306,20 @@ file_editor_tab::handle_context_menu_edi
       msgBox->show ();
       return;
     }
 
   if ( filename.isEmpty ())
     filename = QString::fromStdString (
                            map.contents ("file").data ()[0].string_value ());
 
-  emit execute_command_in_terminal_signal (QString("edit ")
-                                           + "\""+filename+"\"");
+  if (! filename.endsWith (".m"))
+    filename.append (".m");
+
+  emit request_open_file (filename);
 }
 
 void
 file_editor_tab::set_file_name (const QString& fileName)
 {
   // update tracked file if we really have a file on disk
   QStringList trackedFiles = _file_system_watcher.files ();
   if (!trackedFiles.isEmpty ())
diff --git a/libgui/src/m-editor/file-editor-tab.h b/libgui/src/m-editor/file-editor-tab.h
--- a/libgui/src/m-editor/file-editor-tab.h
+++ b/libgui/src/m-editor/file-editor-tab.h
@@ -133,16 +133,17 @@ signals:
   void add_filename_to_list (const QString&, QWidget *);
   void mru_add_file (const QString& file_name);
   void editor_check_conflict_save (const QString& saveFileName,
                                    bool remove_on_success);
   void run_file_signal (const QFileInfo& info);
   void execute_command_in_terminal_signal (const QString&);
   void set_global_edit_shortcuts_signal (bool);
   void create_context_menu_tab_signal (QMenu *);
+  void request_open_file (const QString&);
 
 protected:
 
   void closeEvent (QCloseEvent *event);
   void set_file_name (const QString& fileName);
 
 private slots:
 
diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -1610,16 +1610,19 @@ file_editor::add_file_editor_tab (file_e
            this, SLOT (create_context_menu (QMenu *)));
 
   connect (f, SIGNAL (run_file_signal (const QFileInfo&)),
            main_win (), SLOT (run_file_in_terminal (const QFileInfo&)));
 
   connect (f, SIGNAL (execute_command_in_terminal_signal (const QString&)),
            main_win (), SLOT (execute_command_in_terminal (const QString&)));
 
+  connect (f, SIGNAL (request_open_file (const QString&)),
+           this, SLOT (request_open_file (const QString&)));
+
   connect (f, SIGNAL (set_global_edit_shortcuts_signal (bool)),
            main_win (), SLOT (set_global_edit_shortcuts (bool)));
 
   // Signals from the file_editor non-trivial operations
   connect (this, SIGNAL (fetab_settings_changed (const QSettings *)),
            f, SLOT (notice_settings (const QSettings *)));
 
   connect (this, SIGNAL (fetab_change_request (const QWidget*)),
