# HG changeset patch
# User jwe
# Date 832063817 0
#      Tue May 14 08:50:17 1996 +0000
# Node ID c04b563fb768d91cab9bfd55ac55302e87862b6b
# Parent  484ddc3e7b827001e01c92e63960f3cc7974bdc6
[project @ 1996-05-14 08:50:17 by jwe]

diff --git a/src/load-save.cc b/src/load-save.cc
--- a/src/load-save.cc
+++ b/src/load-save.cc
@@ -50,16 +50,23 @@ Software Foundation, 59 Temple Place - S
 #include "pager.h"
 #include "pt-exp.h"
 #include "symtab.h"
 #include "sysdep.h"
 #include "unwind-prot.h"
 #include "user-prefs.h"
 #include "utils.h"
 
+// The default output format.  May be one of "binary", "text", or
+// "mat-binary".
+static string Vdefault_save_format;
+
+// The number of decimal digits to use when writing ascii data.
+static int Vsave_precision;
+
 // Used when converting Inf to something that gnuplot can read.
 
 #ifndef OCT_RBV
 #define OCT_RBV DBL_MAX / 100.0
 #endif
 
 enum load_save_format
   {
@@ -1892,17 +1899,17 @@ strip_infnan (const ComplexMatrix& m)
 int
 save_ascii_data (ostream& os, const octave_value& tc,
 		 const string& name, int strip_nan_and_inf,
 		 int mark_as_global, int precision) 
 {
   int success = 1;
 
   if (! precision)
-    precision = user_pref.save_precision;
+    precision = Vsave_precision;
 
   if (! name.empty ())
     os << "# name: " << name << "\n";
 
   long old_precision = os.precision ();
   os.precision (precision);
 
   if (tc.is_real_scalar ())
@@ -2102,17 +2109,17 @@ save_vars (ostream& os, const string& pa
   return saved;
 }
 
 static load_save_format
 get_default_save_format (void)
 {
   load_save_format retval = LS_ASCII;
 
-  string fmt = user_pref.default_save_format;
+  string fmt = Vdefault_save_format;
 
   if (fmt == "binary")
     retval = LS_BINARY;
   else if (fmt == "mat-binary" || fmt =="mat_binary")
     retval = LS_MAT_BINARY;
       
   return retval;
 }
@@ -2344,13 +2351,60 @@ save_three_d (ostream& os, const octave_
     {
       ::error ("for now, I can only save real matrices in 3D format");
       fail = 1;
     }
 
   return (os && ! fail);
 }
 
+static int
+default_save_format (void)
+{
+  int status = 0;
+
+  string s = builtin_string_variable ("default_save_format");
+
+  if (s.empty ())
+    {
+      gripe_invalid_value_specified ("default_save_format");
+      status = -1;
+    }
+  else
+    Vdefault_save_format = s;
+
+  return status;
+}
+
+static int
+save_precision (void)
+{
+  double val;
+  if (builtin_real_scalar_variable ("save_precision", val)
+      && ! xisnan (val))
+    {
+      int ival = NINT (val);
+      if (ival >= 0 && (double) ival == val)
+	{
+	  Vsave_precision = ival;
+	  return 0;
+	}
+    }
+  gripe_invalid_value_specified ("save_precision");
+  return -1;
+}
+
+void
+symbols_of_load_save (void)
+{
+  DEFVAR (default_save_format, "ascii", 0, default_save_format,
+    "default format for files created with save, may be one of\n\
+\"binary\", \"text\", or \"mat-binary\"");
+
+  DEFVAR (save_precision, 15.0, 0, save_precision,
+    "number of significant figures kept by the ASCII save command");
+}
+
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
