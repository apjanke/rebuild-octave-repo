# HG changeset patch
# User jwe
# Date 1159994286 0
#      Wed Oct 04 20:38:06 2006 +0000
# Node ID b2e7bf961122992813bf33080c7d3a149787e587
# Parent  37f878fb9d5440811876d21ff456d01719dd875f
[project @ 2006-10-04 20:38:06 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,16 +1,16 @@
 2006-10-04  John W. Eaton  <jwe@octave.org>
 
 	* pkg/pkg.m: Use fullfile to concatenate directory and file names.
 
 2006-10-04  Søren Hauberg  <soren@hauberg.org>
 
-	* pkg/pkg.m: Update docs.
-	Handle prefix option.
+	* pkg/pkg.m: Update docs.  Handle prefix option.
+	Handle dependencies for load option.
 
 2006-10-04  John W. Eaton  <jwe@octave.org>
 
 	* deprecated/clearplot.m, deprecated/clg.m: New functions.
 
 	* plot/clg.m: Delete.
 	* plot/__init_plot_vars__.m: New function.
 	* plot/__setup_plot__.m: Use __init_plot_vars__.
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -1089,38 +1089,54 @@ function [out1, out2] = installed_packag
         printf(format, cur_name, cur_version, cur_dir);
     endfor
 endfunction
 
 function load_packages(files, handle_deps)
     installed_packages = installed_packages();
     num_packages = length(installed_packages);
     
+    ## Read package names and installdirs into a more convenient format
+    pnames = pdirs = cell(1, num_packages);
+    for i = 1:num_packages
+        pnames{i} = installed_packages{i}.name;
+        pdirs{i} = installed_packages{i}.dir;
+        pdeps{i} = installed_packages{i}.depends;
+    endfor
+    
+    ## load all
     if (length(files) == 1 && strcmp(files{1}, "all"))
-        dirs = cell(1, num_packages);
-        for i = 1:num_packages
-            dirs{i} = installed_packages{i}.dir;
-        endfor
-    elseif (handle_deps)
-        # XXX: implement this
-        error("Currently you need to call load_packages with 'all' or '-nodeps'. This is a bug!\n");
+        dirs = pdirs;
+    ## load package_name1 ...
     else
-        dirs = cell(1, length(files));
-        for j = 1:length(files)
-            for i = 1:num_packages
-                if (strcmp(installed_packages{i}.name, files{j}))
-                    dirs{j} = installed_packages{i}.dir;
-		    break;
-                endif
-            endfor
-	    if (isempty(dirs{j}))
-              error("Package %s is not installed\n", files{j});
+        dirs = {};
+        for i = 1:length(files)
+            idx = strcmp(pnames, files{i});
+            if (!any(idx))
+                error("Package %s is not installed\n", files{i});
+            endif
+            dirs{end+1} = pdirs{idx};
+            if (handle_deps)
+                pdep = pdeps{idx};
+                for j = 1:length(pdep)
+                    depname = pdep{j}.package;
+                    if (strcmp(depname, "octave")) continue; endif
+                    idx = strcmp(pnames, depname);
+                    if (!any(idx))
+                        error("Package %s could not be loaded since it depends on %s", ...
+                              files{i}, depname);
+                    endif
+                    dirs{end+1} = pdirs{idx};
+                endfor
             endif
         endfor
+        dirs = unique(dirs);
     endif
+
+    ## Load the packages
     if (length(dirs) > 0)
         addpath(dirs{:});
     endif
 
     ## Add local binaries, if any, to the EXEC_PATH
     for i = 1:length(dirs)
        if (exist ([dirs{i} "/bin"],"dir"))
          EXEC_PATH ([dirs{i} "/bin:" EXEC_PATH()]);
