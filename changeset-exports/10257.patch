# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1265196869 18000
#      Wed Feb 03 06:34:29 2010 -0500
# Node ID cd550069240e8fcb9dcabc9a75bd04c23459b2dd
# Parent  c84186ad78f324f8350f9fc60b157e23a70a8127
assume vsnprintf from gnulib; use sstream instead of snprintf

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,15 @@
+2010-02-03  John W. Eaton  <jwe@octave.org>
+
+	* acinclude.m4 (OCTAVE_HAVE_C99_VSNPRINTF): Delete.
+	* configure.ac: Don't call OCTAVE_HAVE_C99_VSNPRINTF.
+	Don't check for snprintf, vfprintf, vsprintf, vsnprintf, or _snprintf.
+	* bootstrap.conf (gnulib_modules): Include vsprintf in the list.
+
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Don't check for strerror.
 
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Don't check for raise or strdup.
 
diff --git a/acinclude.m4 b/acinclude.m4
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -1355,54 +1355,16 @@ AC_DEFUN([OCTAVE_HAVE_FRAMEWORK], [
       AC_MSG_NOTICE([framework rejected by --without-framework-m4_tolower($1)])
       [$5]
     fi
   else
     AC_MSG_RESULT(no)
     [$5]
   fi
 ])
-dnl
-dnl Do we have a working c99 vsnprintf function?
-dnl
-dnl OCTAVE_HAVE_C99_VSNPRINTF
-AC_DEFUN([OCTAVE_HAVE_C99_VSNPRINTF], [
-  AC_CACHE_CHECK([for c99 vsnprintf], [oct_cv_c99_vsnprintf],
-    [AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>
-#include <stdarg.h>
-#include <stdlib.h>
-
-int
-doit(char * s, ...)
-{
-  char buffer[32];
-  va_list args;
-  int r;
-
-  va_start(args, s);
-  r = vsnprintf(buffer, 5, s, args);
-  va_end(args);
-
-  if (r != 7)
-    exit(1);
-
-  exit(0);
-}
-  ]],[
-doit("1234567");])],
-  [oct_cv_c99_vsnprintf=yes],
-  [oct_cv_c99_vsnprintf=no],
-  [oct_cv_c99_vsnprintf="guessing no"])])
-
-case $oct_cv_c99_vsnprintf in
-yes)
-    AC_DEFINE([HAVE_C99_VSNPRINTF], [1], [Define if you have a c99 vsnprintf])
-  ;;
-esac
-])
 
 ##############################################################################
 ##############################################################################
 
 # pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
 # 
 # Copyright Â© 2004 Scott James Remnant <scott@netsplit.com>.
 #
diff --git a/bootstrap.conf b/bootstrap.conf
--- a/bootstrap.conf
+++ b/bootstrap.conf
@@ -46,16 +46,17 @@ gnulib_modules="
   symlink
   sys_stat
   sys_time
   sys_times
   time
   times
   unistd
   unlink
+  vsnprintf
   round
 "
 
 # Additional xgettext options to use.  Use "\\\newline" to break lines.
 XGETTEXT_OPTIONS=$XGETTEXT_OPTIONS'\\\
  --from-code=UTF-8\\\
  --flag=asprintf:2:c-format --flag=vasprintf:2:c-format\\\
  --flag=asnprintf:3:c-format --flag=vasnprintf:3:c-format\\\
diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -1491,19 +1491,19 @@ fi
 AC_CHECK_FUNCS(basename canonicalize_file_name \
   chmod dup2 endgrent endpwent execvp expm1 expm1f fcntl fork \
   getegid geteuid getgid getgrent getgrgid getgrnam getpgrp getpid \
   getppid getpwent getpwuid getuid getwd _kbhit kill \
   lgamma lgammaf lgamma_r lgammaf_r localtime_r log1p log1pf \
   mkstemp pipe putenv \
   realpath resolvepath rindex roundl select setgrent setlocale \
   setpwent setvbuf siglongjmp \
-  snprintf strsignal tempnam tgammaf trunc umask \
-  uname utime vfprintf vsprintf vsnprintf waitpid \
-  _chmod _snprintf x_utime _utime32)
+  strsignal tempnam tgammaf trunc umask \
+  uname utime waitpid \
+  _chmod x_utime _utime32)
 
 AC_LANG_PUSH(C++)
 AC_CHECK_DECLS([exp2, round, tgamma], [], [], [[#include <cmath>]])
 AC_CHECK_FUNCS([exp2 round tgamma])
 AH_VERBATIM([Z_FUNCS_AND_DECLS], [
 #if defined (__cplusplus)
 extern "C" {
 #endif
@@ -1539,17 +1539,16 @@ case "$canonical_host_type" in
     ],
     [AC_MSG_RESULT(no)
      HAVE_MKSTEMPS=no
      LIBS="$save_LIBS"
     ])
    ;;
 esac
 
-OCTAVE_HAVE_C99_VSNPRINTF
 OCTAVE_SMART_PUTENV
 
 case "$canonical_host_type" in
   *-*-msdosmsvc | *-*-mingw*)
     AC_MSG_CHECKING([for required _WIN32_WINNT])
     AC_COMPILE_IFELSE(AC_LANG_PROGRAM([[
 #include <windows.h>
 #if _WIN32_WINNT < 0x0403
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2010-02-03  John W. Eaton  <jwe@octave.org>
+
+	* utils.cc (octave_vsnprintf): Assume we have vsnprintf with
+	semantics that match the version provided by gnulib.
+
+	* DLD-FUNCTIONS/convhulln.cc (Fconvhulln):
+	Use std::sstream instead of fixed-length buffer and snprintf.
+
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* cutils.c (octave_usleep): Implement using nanosleep.
 	(octave_sleep): Assume sleep exists.
 
 2010-02-03  John W. Eaton  <jwe@octave.org>
 
 	* syscalls.cc (Fcanonicalize_file_name):
diff --git a/src/DLD-FUNCTIONS/convhulln.cc b/src/DLD-FUNCTIONS/convhulln.cc
--- a/src/DLD-FUNCTIONS/convhulln.cc
+++ b/src/DLD-FUNCTIONS/convhulln.cc
@@ -36,29 +36,23 @@ 2006-05-01 Tom Holroyd
 #include <sstream>
 
 #include "Cell.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "oct-obj.h"
 #include "parse.h"
 
-#ifdef HAVE_QHULL
-#if defined(HAVE__SNPRINTF) && !defined(HAVE_SNPRINTF)
-#define snprintf _snprintf
-#endif
-
 extern "C" {
 #include <qhull/qhull_a.h>
 }
 
-#ifdef NEED_QHULL_VERSION
+#if defined (HAVE_QHULL) && defined (NEED_QHULL_VERSION)
 char qh_version[] = "convhulln.oct 2007-07-24";
 #endif
-#endif
 
 DEFUN_DLD (convhulln, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn {Loadable Function} {@var{h} =} convhulln (@var{p})\n\
 @deftypefnx {Loadable Function} {@var{h} =} convhulln (@var{p}, @var{opt})\n\
 @deftypefnx {Loadable Function} {[@var{h}, @var{v}] =} convhulln (@dots{})\n\
 Return an index vector to the points of the enclosing convex hull.\n\
 The input matrix of size [n, dim] contains n points of dimension dim.\n\n\
@@ -117,21 +111,30 @@ calculated.\n\n\
   const octave_idx_type dim = p.columns ();
   const octave_idx_type n = p.rows ();
   p = p.transpose ();
 
   double *pt_array = p.fortran_vec ();
 
   boolT ismalloc = False;
 
-  OCTAVE_LOCAL_BUFFER (char, flags, 250);
+  std::ostringstream buf;
+
+  buf << "qhull QJ " << options;
+
+  std::string buf_string = buf.str ();
 
-  // hmm, lots of options for qhull here
-  // QJ guarantees that the output will be triangles
-  snprintf (flags, 250, "qhull QJ %s", options.c_str ());
+  // FIXME -- we can't just pass buf_string.c_str () to qh_new_qhull
+  // because the argument is not declared const.  Ugh.  Unless
+  // qh_new_qhull really needs to modify this argument, someone should
+  // fix QHULL.
+
+  OCTAVE_LOCAL_BUFFER (char, flags, buf_string.length () + 1);
+
+  strcpy (flags, buf_string.c_str ());
 
   if (! qh_new_qhull (dim, n, pt_array, ismalloc, flags, 0, stderr)) 
     {
       // If you want some debugging information replace the NULL
       // pointer with stdout
 
       vertexT *vertex, **vertexp;
       facetT *facet;
diff --git a/src/utils.cc b/src/utils.cc
--- a/src/utils.cc
+++ b/src/utils.cc
@@ -1220,96 +1220,53 @@ char *
 octave_vsnprintf (const char *fmt, va_list args)
 {
   static const size_t initial_size = 100;
 
   static size_t size = initial_size;
 
   static char *buf = 0;
 
-#if defined (HAVE_C99_VSNPRINTF)
-  size_t nchars = 0;
-#else
   int nchars = 0;
-#endif
 
   if (! buf)
     buf = new char [size];
 
   if (! buf)
     return 0;
 
-#if defined (HAVE_C99_VSNPRINTF)
-
-  // Note that the caller is responsible for calling va_end on args.
-  // We will do it for saved_args.
-
-  va_list saved_args;
-
-  SAVE_ARGS (saved_args, args);
-
-  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
-
-  nchars = octave_raw_vsnprintf (buf, size, fmt, args);
-
-  END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
-
-  if (nchars >= size)
-    {
-      size = nchars + 1;
-
-      delete [] buf;
-
-      buf = new char [size];
-
-      if (buf)
-	{
-	  BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
-
-	  octave_raw_vsnprintf (buf, size, fmt, saved_args);
-
-	  END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
-	}
-    }
-
-  va_end (saved_args);
-
-#else
-
   while (1)
     {
       va_list saved_args;
 
       SAVE_ARGS (saved_args, args);
 
       BEGIN_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE_FOR_VSNPRINTF;
 
       nchars = octave_raw_vsnprintf (buf, size, fmt, saved_args);
 
       va_end (saved_args);
 
       END_INTERRUPT_IMMEDIATELY_IN_FOREIGN_CODE;
 
-      if (nchars > -1 && nchars < size-1)
-       return buf;
+      if (nchars > -1 && nchars < size)
+        break;
       else
-       {
-	 delete [] buf;
-
-         size *= 2;
+        {
+          delete [] buf;
 
-	 buf = new char [size];
+          size = nchars + 1;;
+
+          buf = new char [size];
 
-         if (! buf)
-           return 0;
-       }
+          if (! buf)
+            return 0;
+        }
     }
 
-#endif
-
   return buf;
 }
 
 char *
 octave_snprintf (const char *fmt, ...)
 {
   char *retval = 0;
 
