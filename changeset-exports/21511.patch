# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1458597672 25200
#      Mon Mar 21 15:01:12 2016 -0700
# Node ID e1c5aca1c7981b3664a8ae6d91ac445b2b4b6631
# Parent  ddfd7e5f8d18394bce0a0a276ae7ab5f29d7cb5c
Fix failing tests when building with --without-opengl

* graphics.cc, __osmesa_print__.cc, uimenu.m, allchild.m, findall.m,
graphics_toolkit.m: Fix failing BIST tests when building with --without-opengl
by adding HAVE_OPENGL to the test preconditions.

diff --git a/libinterp/corefcn/graphics.cc b/libinterp/corefcn/graphics.cc
--- a/libinterp/corefcn/graphics.cc
+++ b/libinterp/corefcn/graphics.cc
@@ -4582,17 +4582,17 @@ axes::properties::sync_positions (void)
   update_transform ();
   if (activepositionproperty.is ("position"))
     update_position ();
   else
     update_outerposition ();
 }
 
 /*
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! unwind_protect
 %!   subplot(2,1,1); plot(rand(10,1)); subplot(2,1,2); plot(rand(10,1));
 %!   hax = findall (gcf (), "type", "axes");
 %!   positions = cell2mat (get (hax, "position"));
 %!   outerpositions = cell2mat (get (hax, "outerposition"));
 %!   looseinsets = cell2mat (get (hax, "looseinset"));
@@ -4601,17 +4601,17 @@ axes::properties::sync_positions (void)
 %!   hax = findall (gcf (), "type", "axes");
 %!   assert (cell2mat (get (hax, "position")), positions, 1e-4);
 %!   assert (cell2mat (get (hax, "outerposition")), outerpositions, 1e-4);
 %!   assert (cell2mat (get (hax, "looseinset")), looseinsets, 1e-4);
 %!   assert (cell2mat (get (hax, "tightinset")), tightinsets, 1e-4);
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! fpos = get (hf, "position");
 %! unwind_protect
 %!   plot (rand (3))
 %!   position = get (gca, "position");
 %!   outerposition = get (gca, "outerposition");
 %!   looseinset = get (gca, "looseinset");
@@ -4620,17 +4620,17 @@ axes::properties::sync_positions (void)
 %!   set (hf, "position", fpos);
 %!   assert (get (gca, "outerposition"), outerposition, 0.001)
 %!   assert (get (gca, "position"), position, 0.001)
 %!   assert (get (gca, "looseinset"), looseinset, 0.001)
 %!   assert (get (gca, "tightinset"), tightinset, 0.001)
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! hf = figure ("visible", "off");
 %! graphics_toolkit (hf, "fltk");
 %! fpos = get (hf, "position");
 %! set (gca, "activepositionproperty", "position")
 %! unwind_protect
 %!   plot (rand (3))
 %!   position = get (gca, "position");
 %!   outerposition = get (gca, "outerposition");
diff --git a/libinterp/dldfcn/__osmesa_print__.cc b/libinterp/dldfcn/__osmesa_print__.cc
--- a/libinterp/dldfcn/__osmesa_print__.cc
+++ b/libinterp/dldfcn/__osmesa_print__.cc
@@ -201,32 +201,32 @@ instead.\n\
 #endif
 }
 
 /*
 ## FIXME: osmesa does not work correctly on Windows platforms.
 ##        This is not critical, since this facility will mostly be used in
 ##        the future for generating the images in Octave's own documentation.
 ##        For the moment, disable these tests on PC's and Macs.
-%!testif HAVE_OSMESA, HAVE_GL2PS_H
+%!testif HAVE_OPENGL, HAVE_OSMESA, HAVE_GL2PS_H
 %! if (isunix ())
 %!   h = figure ("visible", "off");
 %!   fn = tempname ();
 %!   sombrero ();
 %!   __osmesa_print__ (h, fn, "svg");
 %!   assert (stat (fn).size, 2692270, -0.1);
 %!   unlink (fn);
 %!   img = __osmesa_print__ (h);
 %!   assert (size (img), [get(h, "position")([4, 3]), 3])
 %!   ## Use pixel sum per RGB channel as fingerprint
 %!   img_fp = squeeze (sum (sum (img), 2));
 %!   assert (img_fp, [52942515; 54167797; 56158178], -0.05);
 %! endif
 
-%!testif HAVE_OSMESA, HAVE_GL2PS_H
+%!testif HAVE_OPENGL, HAVE_OSMESA, HAVE_GL2PS_H
 %! if (isunix ())
 %!   h = figure ("visible", "off");
 %!   fn = tempname ();
 %!   plot (sin (0:0.1:2*pi));
 %!   __osmesa_print__ (h, fn, "svgis2d");
 %!   assert (stat (fn).size, 7438, -0.1);
 %!   unlink (fn);
 %!   img = __osmesa_print__ (h);
diff --git a/scripts/gui/uimenu.m b/scripts/gui/uimenu.m
--- a/scripts/gui/uimenu.m
+++ b/scripts/gui/uimenu.m
@@ -98,47 +98,47 @@ endfunction
 %! surfl (peaks);
 %! colormap (copper (64));
 %! shading ('interp');
 %! f = uimenu ('label', '&File', 'accelerator', 'f');
 %! e = uimenu ('label', '&Edit', 'accelerator', 'e');
 %! uimenu (f, 'label', 'Close', 'accelerator', 'q', 'callback', 'close (gcf)');
 %! uimenu (e, 'label', 'Toggle &Grid', 'accelerator', 'g', 'callback', 'grid (gca)');
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   ui = uimenu ("label", "mylabel");
 %!   assert (findobj (hf, "type", "uimenu"), ui);
 %!   assert (get (ui, "label"), "mylabel");
 %!   assert (get (ui, "checked"), "off");
 %!   assert (get (ui, "separator"), "off");
 %!   assert (get (ui, "enable"), "on");
 %!   assert (get (ui, "position"), 0);
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
 ## check for top level menus file and edit
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   uif = findall (hf, "label", "&file");
 %!   assert (ishghandle (uif));
 %!   uie = findall (hf, "label", "&edit");
 %!   assert (ishghandle (uie));
 %! unwind_protect_cleanup
 %!   close (hf);
 %!   graphics_toolkit (toolkit);
 %! end_unwind_protect
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   uie = findall (hf, "label", "&edit");
 %!   myui = uimenu (uie, "label", "mylabel");
 %!   assert (ancestor (myui, "uimenu", "toplevel"), uie);
 %! unwind_protect_cleanup
 %!   close (hf);
diff --git a/scripts/plot/util/allchild.m b/scripts/plot/util/allchild.m
--- a/scripts/plot/util/allchild.m
+++ b/scripts/plot/util/allchild.m
@@ -43,17 +43,17 @@ function h = allchild (handles)
     h = get (handles, "children");
   unwind_protect_cleanup
     set (0, "showhiddenhandles", shh);
   end_unwind_protect
 
 endfunction
 
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   l = line;
 %!   kids = allchild (hf);
 %!   assert (get (kids, "type"), {"axes"; "uimenu"; "uimenu"});
 %! unwind_protect_cleanup
 %!   close (hf);
diff --git a/scripts/plot/util/findall.m b/scripts/plot/util/findall.m
--- a/scripts/plot/util/findall.m
+++ b/scripts/plot/util/findall.m
@@ -45,17 +45,17 @@ function h = findall (varargin)
     h = findobj (varargin{:});
   unwind_protect_cleanup
     set (0, "showhiddenhandles", shh);
   end_unwind_protect
 
 endfunction
 
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! toolkit = graphics_toolkit ("fltk");
 %! hf = figure ("visible", "off");
 %! unwind_protect
 %!   h = findall (hf);
 %!   all_handles(1) = {"figure"};
 %!   all_handles(2:18,1) = {"uimenu"};
 %!   assert (get (h, "type"), all_handles);
 %! unwind_protect_cleanup
diff --git a/scripts/plot/util/graphics_toolkit.m b/scripts/plot/util/graphics_toolkit.m
--- a/scripts/plot/util/graphics_toolkit.m
+++ b/scripts/plot/util/graphics_toolkit.m
@@ -100,28 +100,28 @@ function retval = graphics_toolkit (name
     set (0, "defaultfigure__graphics_toolkit__", name);
   else
     set (hlist, "__graphics_toolkit__", name);
   endif
 
 endfunction
 
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! unwind_protect
 %!   hf = figure ("visible", "off");
 %!   toolkit = graphics_toolkit ();
 %!   assert (get (0, "defaultfigure__graphics_toolkit__"), toolkit);
 %!   graphics_toolkit (hf, "fltk");
 %!   assert (graphics_toolkit (hf), "fltk");
 %! unwind_protect_cleanup
 %!   close (hf);
 %! end_unwind_protect
 
-%!testif HAVE_FLTK
+%!testif HAVE_OPENGL, HAVE_FLTK
 %! old_toolkit = graphics_toolkit ();
 %! switch (old_toolkit)
 %!   case {"gnuplot"}
 %!     new_toolkit = "fltk";
 %!   otherwise
 %!     new_toolkit = "gnuplot";
 %! endswitch
 %! assert (graphics_toolkit (new_toolkit), old_toolkit);
