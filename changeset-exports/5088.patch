# HG changeset patch
# User jwe
# Date 1101930885 0
#      Wed Dec 01 19:54:45 2004 +0000
# Node ID 7830f271a53f3796e1e77fe56631f0ceb5cb759c
# Parent  7497a16d90f951b40ddc1227ba9be1c26bff7580
[project @ 2004-12-01 19:54:45 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,16 @@
+2004-11-30  John W. Eaton  <jwe@octave.org>
+
+	* Makefile.in (oct-gperf.h): Use -L C++ instead of -L ANSI_C.
+	Use -Z octave_kw_hash option, delete -H and -N options.
+	* lex.l (is_keyword_token): Use octave_kw_hash::in_word_set
+	instead of octave_kw_lookup.
+	(is_keyword): Likewise.
+
 2004-11-22  John W. Eaton  <jwe@octave.org>
 
 	* pt-arg-list.cc (tree_argument_list::convert_to_const_vector):
 	Check to see whether object is a function or function handle
 	instead of constant.
 
 2004-11-19  John W. Eaton  <jwe@octave.org>
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -515,18 +515,17 @@ lex.cc : lex.l
 defaults.h: defaults.h.in ../Makeconf Makefile
 	@$(do-subst-default-vals)
 
 oct-conf.h: oct-conf.h.in ../Makeconf Makefile
 	@$(do-subst-config-vals)
 
 oct-gperf.h: octave.gperf
 	@echo "making $@ from $<"
-	@$(GPERF) -t -C -D -E -G -L ANSI-C \
-               -H octave_kw_hash -N octave_kw_lookup \
+	@$(GPERF) -t -C -D -E -G -L C++ -Z octave_kw_hash \
 	  $< | $(SED) 's,lookup\[,gperf_lookup[,' > $@-t
 	@$(top_srcdir)/move-if-change $@-t $@
 
 check: all
 .PHONY: check
 
 # If missing, GNU make attempts to create them in the reverse of the
 # order in which they are listed here.  We rely on that fact to ensure
diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -1208,17 +1208,17 @@ is_keyword_token (const std::string& s)
 	      token_stack.push (yylval.tok_val);
 	      return AXES_TAG;
 	    }
 	}	
     }
 
   int len = s.length ();
 
-  const octave_kw *kw = octave_kw_lookup (s.c_str (), len);
+  const octave_kw *kw = octave_kw_hash::in_word_set (s.c_str (), len);
 
   if (kw)
     {
       yylval.tok_val = 0;
 
       switch (kw->kw_id)
 	{
 	case all_va_args_kw:
@@ -2683,17 +2683,17 @@ lexical_feedback::init (void)
 
   // Quote marks strings intially.
   quote_is_transpose = false;
 }
 
 bool
 is_keyword (const std::string& s)
 {
-  return octave_kw_lookup (s.c_str (), s.length ()) != 0;
+  return octave_kw_hash::in_word_set (s.c_str (), s.length ()) != 0;
 }
 
 DEFCMD (iskeyword, args, ,
   "-*- texinfo -*-\n\
 @deftypefn {Built-in Function} {} iskeyword (@var{name})\n\
 Return true if @var{name} is an Octave keyword.  If @var{name}\n\
 is omitted, return a list of keywords.\n\
 @end deftypefn")
diff --git a/src/octave.gperf b/src/octave.gperf
--- a/src/octave.gperf
+++ b/src/octave.gperf
@@ -36,16 +36,17 @@ enum octave_kw_id
   unwind_protect_kw,
   unwind_protect_cleanup_kw,
   varargin_kw,
   varargout_kw,
   while_kw
 };
 
 %}
+
 struct octave_kw { const char *name; int tok; octave_kw_id kw_id; };
 %%
 all_va_args, ALL_VA_ARGS, all_va_args_kw
 break, BREAK, break_kw
 case, CASE, case_kw
 catch, CATCH, catch_kw
 continue, CONTINUE, continue_kw
 do, DO, do_kw
