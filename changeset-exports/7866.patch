# HG changeset patch
# User Michael Goffioul <michael.goffioul@gmail.com>
# Date 1209243192 -7200
#      Sat Apr 26 22:53:12 2008 +0200
# Node ID 35e8d61994559e5bdd8873e01edf628c1b6003d1
# Parent  b74039822fd22dfc13373a9fb1461b43fb5b1c58
Add hggroup support in OpenGL renderer.

diff --git a/src/graphics/ChangeLog b/src/graphics/ChangeLog
--- a/src/graphics/ChangeLog
+++ b/src/graphics/ChangeLog
@@ -1,8 +1,14 @@
+2008-04-26  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* opengl/gl-render.h (opengl_renderer::draw(hggroup)): New method.
+	* opengl/gl-render.cc (opengl_renderer::draw(hggroup)): Likewise.
+	(opengl_renderer::draw(graphics_object)): Call it.
+
 2008-03-17  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* fltk_backend/fltk_backend.cc (plot_window::resize,
 	plot_window::draw): make canvas the size of figure.position
 
 2008-03-09  Shai Ayal  <shaiay@users.sourceforge.net>
 
 	* fltk_backend/fltk_backend.cc (plot_window::handle): add zoom
diff --git a/src/graphics/opengl/gl-render.cc b/src/graphics/opengl/gl-render.cc
--- a/src/graphics/opengl/gl-render.cc
+++ b/src/graphics/opengl/gl-render.cc
@@ -523,16 +523,18 @@ opengl_renderer::draw (const graphics_ob
   else if (go.isa ("axes"))
     draw (dynamic_cast<const axes::properties&> (props));
   else if (go.isa ("line"))
     draw (dynamic_cast<const line::properties&> (props));
   else if (go.isa ("surface"))
     draw (dynamic_cast<const surface::properties&> (props));
   else if (go.isa ("patch"))
     draw (dynamic_cast<const patch::properties&> (props));
+  else if (go.isa ("hggroup"))
+    draw (dynamic_cast<const hggroup::properties&> (props));
   else
     warning ("opengl_renderer: cannot render object of type `%s'",
 	     props.graphics_object_name ().c_str ());
 }
 
 void
 opengl_renderer::draw (const figure::properties& props)
 {
@@ -2480,16 +2482,22 @@ opengl_renderer::draw (const patch::prop
 	    draw_marker (v(idx,0), v(idx,1), (has_z ? v(idx,2) : 0), lc, fc);
 	  }
 
       end_marker ();
     }
 }
 
 void
+opengl_renderer::draw (const hggroup::properties &props)
+{
+  draw (props.get_children ());
+}
+
+void
 opengl_renderer::set_viewport (int w, int h)
 {
   glViewport (0, 0, w, h);
 }
 
 void
 opengl_renderer::set_color (const Matrix& c)
 {
diff --git a/src/graphics/opengl/gl-render.h b/src/graphics/opengl/gl-render.h
--- a/src/graphics/opengl/gl-render.h
+++ b/src/graphics/opengl/gl-render.h
@@ -64,16 +64,17 @@ public:
   virtual void set_viewport (int w, int h);
 
 protected:
   virtual void draw (const figure::properties& props);
   virtual void draw (const axes::properties& props);
   virtual void draw (const line::properties& props);
   virtual void draw (const surface::properties& props);
   virtual void draw (const patch::properties& props);
+  virtual void draw (const hggroup::properties& props);
 
   virtual void set_color (const Matrix& c);
   virtual void set_polygon_offset (bool on, double offset = 0.0);
   virtual void set_linewidth (float w);
   virtual void set_linestyle (const std::string& s, bool stipple = false);
   virtual void set_clipbox (double x1, double x2, double y1, double y2,
 			    double z1, double z2);
   virtual void set_clipping (bool on);
