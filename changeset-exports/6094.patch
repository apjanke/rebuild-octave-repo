# HG changeset patch
# User jwe
# Date 1161825514 0
#      Thu Oct 26 01:18:34 2006 +0000
# Node ID 86ee3cc8d8d2f5f7964f6a5ff673612e27b38a11
# Parent  174cfaa0c4af49672a13b4360a32d598080ab35c
[project @ 2006-10-26 01:18:33 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,10 +1,12 @@
 2006-10-25  John W. Eaton  <jwe@octave.org>
 
+	* configure.in (*-*-msdosmsvc): Don't check for strftime.
+
 	* configure.in (INCLUDE_DEPS): Set and substitute.
 	(DEPEND_FLAGS, DEPEND_EXTRA_SED_PATTERN): Rearrange way these are set.
 
 	* Makeconf.in (INCLUDE_DEPS): Substitute here, and use to set default
 	value for omit_deps.
 
 2006-10-25  Michael Goffioul  <michael.goffioul@swing.be>
 
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -24,17 +24,17 @@ dnl Copyright (C) 1996, 1997 John W. Eat
 ### Preserve CFLAGS and CXXFLAGS from the environment before doing
 ### anything else because we don't know which macros might call
 ### AC_PROG_CC or AC_PROG_CXX.
 
 EXTERN_CFLAGS="$CFLAGS"
 EXTERN_CXXFLAGS="$CXXFLAGS"
 
 AC_INIT
-AC_REVISION($Revision: 1.533 $)
+AC_REVISION($Revision: 1.534 $)
 AC_PREREQ(2.57)
 AC_CONFIG_SRCDIR([src/octave.cc])
 AC_CONFIG_HEADER(config.h)
 
 OCTAVE_HOST_TYPE
 
 AC_DEFINE(OCTAVE_SOURCE, 1, [Define if this is Octave.])
   
@@ -1313,20 +1313,31 @@ fi
 
 AC_CHECK_FUNCS(atexit basename bcopy bzero canonicalize_file_name \
   dup2 endgrent endpwent execvp fcntl fork getcwd getegid geteuid \
   getgid getgrent getgrgid getgrnam getpgrp getpid getppid getpwent \
   getpwuid gettimeofday getuid getwd _kbhit kill link localtime_r \
   lstat memmove mkdir mkfifo mkstemp on_exit pipe poll putenv raise \
   readlink rename resolvepath rindex rmdir round select setgrent \
   setlocale setpwent setvbuf sigaction siglongjmp sigpending sigprocmask \
-  sigsuspend stat strcasecmp strdup strerror strftime stricmp \
+  sigsuspend stat strcasecmp strdup strerror stricmp \
   strncasecmp strnicmp strptime strsignal symlink tempnam umask \
   uname unlink usleep vfprintf vsprintf vsnprintf waitpid)
 
+case "$canonical_host_type" in
+  *-*-msdosmsvc)
+    ## The %T format specifier for strftime is reportedly broken,
+    ## so use our version.  We could use an actual configure test
+    ## for this.
+  ;;
+  *)
+    AC_CHECK_FUNCS(strftime)
+  ;;
+esac
+
 OCTAVE_SMART_PUTENV
 
 ### Dynamic linking is now enabled only if we are building shared
 ### libs and some API for dynamic linking is detected.
 
 LD_CXX='$(CXX)'
 LIBDLFCN=
 DLFCN_INCFLAGS=
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2006-10-25  John W. Eaton  <jwe@octave.org>
+
+	* oct-procbuf.cc (BUFSIZ): Define if not already defined.
+	(octave_procbuf::open): Pass BUFSIZ as size argument to setvbuf.
+
 2006-10-25  Michael Goffioul  <michael.goffioul@swing.be>
 
 	* Makefile.in (XTRA_CDEFS, XTRA_CXXDEFS): Substitute here.
 
 2006-10-25  John W. Eaton  <jwe@octave.org>
 
 	* sysdep.cc (w32_set_octave_home): Correctly initialize bin_dir.
 	Fill it with '\0' instead of ' '.
diff --git a/src/oct-procbuf.cc b/src/oct-procbuf.cc
--- a/src/oct-procbuf.cc
+++ b/src/oct-procbuf.cc
@@ -54,16 +54,20 @@ static octave_procbuf *octave_procbuf_li
 #if defined (__CYGWIN__)
 #define W32POPEN popen
 #define W32PCLOSE pclose
 #elif defined (__MINGW32__)
 #define W32POPEN _popen
 #define W32PCLOSE _pclose
 #endif
 
+#ifndef BUFSIZ
+#define BUFSIZ 1024
+#endif
+
 octave_procbuf *
 octave_procbuf::open (const char *command, int mode)
 {
 #if defined (__CYGWIN__) || defined (__MINGW32__)
 
   if (is_open ()) 
     return 0;
 
@@ -74,17 +78,17 @@ octave_procbuf::open (const char *comman
 
   // Oops... popen doesn't return the associated pid, so fake it for now
 
   proc_pid = 1;
 
   open_p = true;
 
   if (mode & std::ios::out)
-    ::setvbuf (f, 0, _IOLBF, 0);
+    ::setvbuf (f, 0, _IOLBF, BUFSIZ);
 
   return this;
   
 #elif defined (HAVE_SYS_WAIT_H)
 
   int pipe_fds[2];
 
   volatile int child_std_end = (mode & std::ios::in) ? 1 : 0;
@@ -144,17 +148,17 @@ octave_procbuf::open (const char *comman
     {
       ::close (parent_end);
       return 0;
     }
 
   f = ::fdopen (parent_end, (mode & std::ios::in) ? "r" : "w");
 
   if (mode & std::ios::out)
-    ::setvbuf (f, 0, _IOLBF, 0);
+    ::setvbuf (f, 0, _IOLBF, BUFSIZ);
 
   open_p = true;
 
   next = octave_procbuf_list;
   octave_procbuf_list = this;
 
   return this;
 
