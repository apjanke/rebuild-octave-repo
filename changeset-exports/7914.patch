# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1215694758 14400
#      Thu Jul 10 08:59:18 2008 -0400
# Node ID e998e81224b5cae39aef84372d45f91cb1841c50
# Parent  f46e73bcb85b9d9f2ccf355eab5ded747875ea53
Various compilation fixes for MSVC.

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,13 +1,18 @@
-2008-07-09  Michael Goffioul  <michael.goffioul@gmail.com>
+2008-07-10  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* configure.in: new substituted variables GL_RENDER_SRC and
 	FLTK_BACKEND_SRC.
 
+2008-06-20  Michael Goffioul <michael.goffioul@gmail.com>
+
+	* Makeconf.in: Add GRAPHICS_CFLAGS substitution.
+	* configure.in: Add checks for hypotf and _hypotf.
+
 2008-06-12  Jaroslav Hajek <highegg@gmail.com>
 
 	* configure.in: Move LIBS and CXXFLAGS restoration into
 	the proper block.
 
 2008-06-05  John W. Eaton  <jwe@octave.org>
 
 	* configure.in: Add FT2_CFLAGS to XTRA_CXXFLAGS, not CXXFLAGS.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -166,16 +166,18 @@ BUILD_CFLAGS = @BUILD_CFLAGS@
 
 DEPEND_FLAGS = @DEPEND_FLAGS@
 DEPEND_EXTRA_SED_PATTERN = @DEPEND_EXTRA_SED_PATTERN@
 INCLUDE_DEPS = @INCLUDE_DEPS@
 ifeq ($(INCLUDE_DEPS),false)
   omit_deps = true;
 endif
 
+GRAPHICS_CFLAGS = @GRAPHICS_CFLAGS@
+
 CXX = @CXX@
 CXX_VERSION = @CXX_VERSION@
 CXXCPP = @CXXCPP@
 CXXFLAGS = @CXXFLAGS@
 CXXPICFLAG = @CXXPICFLAG@
 XTRA_CXXFLAGS = @XTRA_CXXFLAGS@
 WARN_CXXFLAGS = @WARN_CXXFLAGS@
 ALL_CXXFLAGS = \
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -1642,16 +1642,17 @@ case "$canonical_host_type" in
     AC_CHECK_FUNCS(_finite _isnan _copysign)
     AC_CHECK_DECLS(signbit, , , [#include <math.h>])
   ;;
 esac
 
 ### Check for nonstandard but common math functions that we need.
 
 AC_CHECK_FUNCS(acosh acoshf asinh asinhf atanh atanhf erf erff erfc erfcf exp2 exp2f log2 log2f)
+AC_CHECK_FUNCS(hypotf _hypotf)
 
 ### Checks for OS specific cruft.
 
 AC_CHECK_MEMBERS([struct stat.st_blksize, struct stat.st_blocks, struct stat.st_rdev])
 
 AC_STRUCT_TM
 AC_STRUCT_TIMEZONE
 AC_FUNC_CLOSEDIR_VOID
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2008-07-10  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* lo-specfun.h: Fix typo in erff/erfcf declaration.
+	* lo-specfun.cc: Ditto. Add atanhf implementation.
+
 2008-06-20  Jaroslav Hajek <highegg@gmail.com>
 
 	* MatrixType.h: Add missing include statement.
 
 2008-06-13  Michael Goffioul  <michael.goffioul@gmail.com>
 
 	* lo-mappers.cc (arg): Remove ambiguity about atan2(float,float) usage.
 	* fCmplxDET.cc (FloatComplexDET::initialize10): Likewise, for pow.
diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -219,29 +219,39 @@ double
 atanh (double x)
 {
   double retval;
   F77_XFCN (xdatanh, XDATANH, (x, retval));
   return retval;
 }
 #endif
 
+#if !defined (HAVE_ATANHF)
+float
+atanhf (float x)
+{
+  float retval;
+  F77_XFCN (xatanh, XATANH, (x, retval));
+  return retval;
+}
+#endif
+
 #if !defined (HAVE_ERF)
 double
 erf (double x)
 {
   double retval;
   F77_XFCN (xderf, XDERF, (x, retval));
   return retval;
 }
 #endif
 
 #if !defined (HAVE_ERFF)
 float
-erf (float x)
+erff (float x)
 {
   float retval;
   F77_XFCN (xerf, XERF, (x, retval));
   return retval;
 }
 #endif
 
 #if !defined (HAVE_ERFC)
@@ -251,17 +261,17 @@ erfc (double x)
   double retval;
   F77_XFCN (xderfc, XDERFC, (x, retval));
   return retval;
 }
 #endif
 
 #if !defined (HAVE_ERFCF)
 float
-erfc (float x)
+erfcf (float x)
 {
   float retval;
   F77_XFCN (xerfc, XERFC, (x, retval));
   return retval;
 }
 #endif
 
 double
diff --git a/liboctave/lo-specfun.h b/liboctave/lo-specfun.h
--- a/liboctave/lo-specfun.h
+++ b/liboctave/lo-specfun.h
@@ -71,21 +71,21 @@ extern OCTAVE_API float acoshf (float);
 extern OCTAVE_API float asinhf (float);
 #endif
 
 #if !defined (HAVE_ATANHF)
 extern OCTAVE_API float atanhf (float);
 #endif
 
 #if !defined (HAVE_ERFF)
-extern OCTAVE_API float erf (float);
+extern OCTAVE_API float erff (float);
 #endif
 
 #if !defined (HAVE_ERFCF)
-extern OCTAVE_API float erfc (float);
+extern OCTAVE_API float erfcf (float);
 #endif
 
 #if !defined (HAVE_EXPM1)
 extern OCTAVE_API double expm1 (double x);
 #endif
 extern OCTAVE_API Complex expm1 (const Complex& x);
 
 #if !defined (HAVE_EXPM1F)
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,18 @@
+2008-07-10  Michael Goffioul  <michael.goffioul@gmail.com>
+
+	* Makefile.in: Add OPENGL_LIBS to liboctinterp link command. Add
+	GRAPHICS_CFLAGS to fltk_backend.cc compilation command.
+	* data.cc: Define hypotf to _hypotf when not present.
+	* gl-render.h: Replace OCTGRAPHICS_API with OCTINTERP_API.
+	* gl-render.cc: Get rid of Array2<vertex_data>.
+	* OPERATORS/op-int.h: Use powf instead of pow when invoked
+	with float arguments.
+
 2008-07-09  John W. Eaton  <jwe@octave.org>
 
 	* input.cc (get_debug_input): Don't delete global_command here.
 	* toplev.cc (main_loop): Undo previous change.
 
 	* toplev.h (octave_call_stack::instance_ok): Push top scope when
 	creating instance.
 
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -273,17 +273,18 @@ ifeq ($(ENABLE_DYNAMIC_LINKING), true)
     $(LIBPLPLOT) $(LIBGLOB)
 else
   OCTAVE_LIBS = $(LIBOCTINTERP) $(LIBOCTAVE) $(QHULL_LIBS) \
     $(GLPK_LIBS) $(REGEX_LIBS) $(SPECIAL_MATH_LIB) $(LIBCRUFT) \
     $(LIBPLPLOT) $(LIBGLOB)
 endif
 
 OCTINTERP_LINK_DEPS = \
-  -L../liboctave $(LIBOCTAVE) -L../libcruft $(LIBCRUFT) $(LIBS) $(FLIBS)
+  -L../liboctave $(LIBOCTAVE) -L../libcruft $(LIBCRUFT) $(LIBS) $(FLIBS) \
+  $(OPENGL_LIBS)
 
 OCT_LINK_DEPS = \
   -L../libcruft $(LIBCRUFT) -L../liboctave $(LIBOCTAVE) \
   -L. $(LIBOCTINTERP) $(CHOLMOD_LIBS) $(UMFPACK_LIBS) $(AMD_LIBS) \
    $(CAMD_LIBS) $(COLAMD_LIBS) $(CCOLAMD_LIBS) $(CXSPARSE_LIBS) $(BLAS_LIBS) \
    $(FFTW_LIBS) $(LIBS) $(FLIBS)
 
 BUILT_DISTFILES = DOCSTRINGS oct-gperf.h parse.cc lex.cc y.tab.h \
@@ -301,16 +302,19 @@ all: octave$(EXEEXT) $(OCT_FILES) PKG_AD
 objects: $(OBJECTS)
 
 lex.o parse.o pic/lex.o pic/parse.o: \
 	ALL_CXXFLAGS := $(filter-out -Wold-style-cast, $(ALL_CXXFLAGS))
 
 $(DLD_PICOBJ): \
 	ALL_CXXFLAGS := $(filter-out $(DLL_CXXDEFS), $(ALL_CXXFLAGS))
 
+fltk_backend.o pic/fltk_backend.o: \
+	ALL_CXXFLAGS := $(filter-out $(DLL_CXXDEFS), $(ALL_CXXFLAGS) $(GRAPHICS_CFLAGS))
+
 XERBLA = ../libcruft/blas-xtra/xerbla.o
 ifdef FPICFLAG
   PIC_XERBLA = ../libcruft/blas-xtra/pic/xerbla.o
 else
   PIC_XERBLA = $(XERBLA)
 endif
 
 ifeq ($(SHARED_LIBS), true)
diff --git a/src/OPERATORS/op-int.h b/src/OPERATORS/op-int.h
--- a/src/OPERATORS/op-int.h
+++ b/src/OPERATORS/op-int.h
@@ -222,23 +222,23 @@ along with Octave; see the file COPYING.
   xpow (double a, const octave_ ## T1& b) \
   { \
     return pow (a, b); \
   } \
  \
   octave_value \
   xpow (const octave_ ## T1& a, float b) \
   { \
-    return pow (a, b); \
+    return powf (a, b); \
   } \
  \
   octave_value \
   xpow (float a, const octave_ ## T1& b) \
   { \
-    return pow (a, b); \
+    return powf (a, b); \
   }
 
 #define OCTAVE_SS_INT_OPS(TYPE) \
   OCTAVE_S_INT_UNOPS (TYPE) \
   OCTAVE_SS_POW_OPS (TYPE, TYPE) \
   OCTAVE_SS_INT_ARITH_OPS (ss, TYPE ## _, TYPE ## _) \
   OCTAVE_SS_INT_ARITH_OPS (ssx, TYPE ## _, ) \
   OCTAVE_SS_INT_ARITH_OPS (sxs, , TYPE ## _) \
@@ -355,29 +355,29 @@ along with Octave; see the file COPYING.
 \
   octave_value \
   elem_xpow (const octave_ ## T1& a, const FloatNDArray& b) \
   { \
     T1 ## NDArray result (b.dims ()); \
     for (int i = 0; i < b.length (); i++) \
       { \
 	OCTAVE_QUIT; \
-	result (i) = pow (a, b(i)); \
+	result (i) = powf (a, b(i)); \
       } \
     return octave_value (result); \
   } \
  \
   octave_value \
   elem_xpow (float a, const T2 ## NDArray& b) \
   { \
     T2 ## NDArray result (b.dims ()); \
     for (int i = 0; i < b.length (); i++) \
       { \
 	OCTAVE_QUIT; \
-	result (i) = pow (a, b(i)); \
+	result (i) = powf (a, b(i)); \
       } \
     return octave_value (result); \
   }
 
 
 #define OCTAVE_SM_CONV(TS, TM) \
   DEFCONV (TS ## s_ ## TM ## m_conv, TM ## scalar, TM ## matrix) \
   { \
@@ -507,28 +507,28 @@ octave_value elem_xpow (NDArray a, octav
 } \
 \
 octave_value elem_xpow (T1 ## NDArray a, float  b) \
 { \
   T1 ## NDArray result (a.dims ()); \
   for (int i = 0; i < a.length (); i++) \
     { \
       OCTAVE_QUIT; \
-      result (i) = pow (a(i), b);		\
+      result (i) = powf (a(i), b);		\
     } \
   return octave_value (result); \
 } \
 \
 octave_value elem_xpow (FloatNDArray a, octave_ ## T2  b) \
 { \
   T2 ## NDArray result (a.dims ()); \
   for (int i = 0; i < a.length (); i++) \
     { \
       OCTAVE_QUIT; \
-      result (i) = pow (a(i), b);		\
+      result (i) = powf (a(i), b);		\
     } \
   return octave_value (result); \
 }
 
 
 #define OCTAVE_MS_INT_OPS(TYPE) \
   OCTAVE_MS_POW_OPS (TYPE, TYPE) \
   OCTAVE_MS_INT_ARITH_OPS (ms, TYPE ## _, TYPE ## _) \
@@ -685,17 +685,17 @@ octave_value elem_xpow (FloatNDArray a, 
       { \
 	gripe_nonconformant ("operator .^", a_dims, b_dims); \
 	return octave_value (); \
       } \
     T1 ## NDArray result (a_dims); \
     for (int i = 0; i < a.length (); i++) \
       { \
 	OCTAVE_QUIT; \
-	result (i) = pow (a(i), b(i)); \
+	result (i) = powf (a(i), b(i)); \
       } \
     return octave_value (result); \
   } \
 \
   octave_value \
   elem_xpow (const FloatNDArray& a, const T2 ## NDArray& b) \
   { \
     dim_vector a_dims = a.dims (); \
@@ -704,17 +704,17 @@ octave_value elem_xpow (FloatNDArray a, 
       { \
 	gripe_nonconformant ("operator .^", a_dims, b_dims); \
 	return octave_value (); \
       } \
     T2 ## NDArray result (a_dims); \
     for (int i = 0; i < a.length (); i++) \
       { \
 	OCTAVE_QUIT; \
-	result (i) = pow (a(i), b(i)); \
+	result (i) = powf (a(i), b(i)); \
       } \
     return octave_value (result); \
   }
 
 
 #define OCTAVE_MM_CONV(T1, T2) \
   DEFCONV (T1 ## m_ ## T2 ## m_conv, T1 ## matrix, T2 ## matrix) \
   { \
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -58,16 +58,21 @@ along with Octave; see the file COPYING.
 #include "ov-flt-cx-mat.h"
 #include "ov-cx-sparse.h"
 #include "parse.h"
 #include "pt-mat.h"
 #include "utils.h"
 #include "variables.h"
 #include "pager.h"
 
+#if ! defined (HAVE_HYPOTF) && defined (HAVE__HYPOTF)
+#define hypotf _hypotf
+#define HAVE_HYPOTF 1
+#endif
+
 #define ANY_ALL(FCN) \
  \
   octave_value retval; \
  \
   int nargin = args.length (); \
  \
   if (nargin == 1 || nargin == 2) \
     { \
diff --git a/src/gl-render.cc b/src/gl-render.cc
--- a/src/gl-render.cc
+++ b/src/gl-render.cc
@@ -375,18 +375,16 @@ public:
       rep->count++;
 
       return *this;
     }
 
   vertex_data_rep *get_rep (void) const { return rep; }
 };
 
-#include <Array.cc>
-
 class
 opengl_renderer::patch_tesselator : public opengl_tesselator
 {
 public:
   patch_tesselator (opengl_renderer *r, int cmode, int lmode, int idx = 0)
       : opengl_tesselator (), renderer (r),
         color_mode (cmode), light_mode (lmode), index (idx),
         first (true) { }
@@ -2295,17 +2293,18 @@ opengl_renderer::draw (const patch::prop
 
   if (fa_mode > 0 || ea_mode > 0)
     {
       // FIXME: retrieve alpha data from patch object
       //a = props.get_alpha_data ();
       has_facealpha = ((a.numel () > 0) && (a.rows () == f.rows ()));
     }
 
-  Array2<vertex_data> vdata (f.dims ());
+  octave_idx_type fr = f.rows (), fc = f.columns ();
+  std::vector<vertex_data> vdata (f.numel ());
 
   for (int i = 0; i < nf; i++)
     for (int j = 0; j < count_f(i); j++)
       {
 	int idx = int (f(i,j) - 1);
 
 	Matrix vv (1, 3, 0.0);
 	Matrix cc;
@@ -2328,17 +2327,17 @@ opengl_renderer::draw (const patch::prop
 	if (a.numel () > 0)
 	  {
 	    if (has_facealpha)
 	      aa = a(i);
 	    else
 	      aa = a(idx);
 	  }
 
-	vdata(i,j) =
+	vdata[i+j*fr] =
 	    vertex_data (vv, cc, nn, aa, as, ds, ss, se);
       }
 
   if (fl_mode > 0 || el_mode > 0)
     {
       float buf[4] = { ss, ss, ss, 1 };
 
       glMaterialfv (LIGHT_MODE, GL_SPECULAR, buf);
@@ -2378,17 +2377,17 @@ opengl_renderer::draw (const patch::prop
 	      if (clip_f(i))
 		continue;
 
 	      tess.begin_polygon (true);
 	      tess.begin_contour ();
 
 	      for (int j = 0; j < count_f(i); j++)
 		{
-		  vertex_data::vertex_data_rep *vv = vdata(i,j).get_rep ();
+		  vertex_data::vertex_data_rep *vv = vdata[i+j*fr].get_rep ();
 	
 		  tess.add_vertex (vv->coords.fortran_vec (), vv);
 		}
 
 	      tess.end_contour ();
 	      tess.end_polygon ();
 	    }
 
@@ -2438,17 +2437,17 @@ opengl_renderer::draw (const patch::prop
 	      if (clip_f(i))
 		continue;
 
 	      tess.begin_polygon (false);
 	      tess.begin_contour ();
 
 	      for (int j = 0; j < count_f(i); j++)
 		{
-		  vertex_data::vertex_data_rep *vv = vdata(i,j).get_rep ();
+		  vertex_data::vertex_data_rep *vv = vdata[i+j*fr].get_rep ();
 	
 		  tess.add_vertex (vv->coords.fortran_vec (), vv);
 		}
 
 	      tess.end_contour ();
 	      tess.end_polygon ();
 	    }
 
@@ -2493,20 +2492,20 @@ opengl_renderer::draw (const patch::prop
 	for (int j = 0; j < count_f(i); j++)
 	  {
 	    int idx = int (f(i,j) - 1);
 
 	    if (clip(idx))
 	      continue;
 
 	    Matrix lc = (do_edge ? (mecolor.numel () == 0 ?
-				    vdata(i,j).get_rep ()->color : mecolor)
+				    vdata[i+j*fr].get_rep ()->color : mecolor)
 			 : Matrix ());
 	    Matrix fc = (do_face ? (mfcolor.numel () == 0 ?
-				    vdata(i,j).get_rep ()->color : mfcolor)
+				    vdata[i+j*fr].get_rep ()->color : mfcolor)
 			 : Matrix ());
 
 	    draw_marker (v(idx,0), v(idx,1), (has_z ? v(idx,2) : 0), lc, fc);
 	  }
 
       end_marker ();
     }
 }
diff --git a/src/gl-render.h b/src/gl-render.h
--- a/src/gl-render.h
+++ b/src/gl-render.h
@@ -30,17 +30,17 @@ along with Octave; see the file COPYING.
 #endif
 
 #include <GL/gl.h>
 #include <GL/glu.h>
 
 #include "graphics.h"
 
 class
-OCTGRAPHICS_API
+OCTINTERP_API
 opengl_renderer
 {
 public:
   opengl_renderer (void) { }
 
   virtual ~opengl_renderer (void) { }
 
   virtual void draw (const graphics_handle& h)
