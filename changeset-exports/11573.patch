# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1295497751 28800
#      Wed Jan 19 20:29:11 2011 -0800
# Node ID 6f8ffe2c6f76673f910867d0c03e10b01ab05d7c
# Parent  7d6d8c1e471f7d71087c8594952ca549058081bb
Grammarcheck txi files for 3.4 release.

diff --git a/doc/ChangeLog b/doc/ChangeLog
--- a/doc/ChangeLog
+++ b/doc/ChangeLog
@@ -1,8 +1,17 @@
+2011-01-19  Rik  <octave@nomad.inbox5.com>
+
+	* doc/interpreter/diagperm.txi, doc/interpreter/dynamic.txi,
+	doc/interpreter/func.txi, doc/interpreter/install.txi,
+	doc/interpreter/intro.txi, doc/interpreter/numbers.txi,
+	doc/interpreter/oop.txi, doc/interpreter/plot.txi,
+	doc/interpreter/sparse.txi, doc/interpreter/stats.txi: Grammarcheck
+	txi files for 3.4 release.
+
 2011-01-17  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/quad.txi: Add quadcc to documentation.
 
 2011-01-15  Rik  <octave@nomad.inbox5.com>
 
 	* interpreter/expr.txi: Add merge/ifelse function to documentation.
 
diff --git a/doc/interpreter/diagperm.txi b/doc/interpreter/diagperm.txi
--- a/doc/interpreter/diagperm.txi
+++ b/doc/interpreter/diagperm.txi
@@ -505,19 +505,19 @@ like:
 
 @item sparse matrix / scalar preserves the sparsity pattern
 
 @item permutation matrix * matrix is equivalent to permuting rows
 @end itemize
 all of these natural mathematical truths would be invalidated by treating
 assumed zeros as numerical ones.
 
-Note that @sc{Matlab} does not strictly follow this principle and converts
+Note that @sc{matlab} does not strictly follow this principle and converts
 assumed zeros to numerical zeros in certain cases, while not doing so in
-other cases. As of today, there are no intentions to mimic such behavior
+other cases.  As of today, there are no intentions to mimic such behavior
 in Octave.
 
 Examples of effects of assumed zeros vs. numerical zeros:
 
 @example
 Inf * eye (3)
 @result{}
    Inf     0     0
diff --git a/doc/interpreter/dynamic.txi b/doc/interpreter/dynamic.txi
--- a/doc/interpreter/dynamic.txi
+++ b/doc/interpreter/dynamic.txi
@@ -1206,24 +1206,24 @@ oct-file might be
 @c WRITE ME, using Coda section 1.3 as a starting point.
 
 @node Mex-Files
 @section Mex-Files
 @cindex mex-files
 @cindex mex
 
 Octave includes an interface to allow legacy mex-files to be compiled
-and used with Octave. This interface can also be used to share code
-between Octave and @sc{Matlab} users. However, as mex-files expose the
-@sc{Matlab}'s internal API, and the internal structure of Octave is
+and used with Octave.  This interface can also be used to share code
+between Octave and @sc{matlab} users.  However, as mex-files expose the
+@sc{matlab}'s internal API, and the internal structure of Octave is
 different, a mex-file can never have the same performance in Octave as
-the equivalent oct-file. In particular to support the manner in which
+the equivalent oct-file.  In particular to support the manner in which
 mex-files access the variables passed to mex functions, there are a
 significant number of additional copies of memory when calling or
-returning from a mex function. For this reason, new code should be
+returning from a mex function.  For this reason, new code should be
 written using the oct-file interface discussed above if possible.
 
 @menu
 * Getting Started with Mex-Files::  
 * Working with Matrices and Arrays in Mex-Files::  
 * Character Strings in Mex-Files::  
 * Cell Arrays with Mex-Files::  
 * Structures with Mex-Files::  
@@ -1231,27 +1231,27 @@ written using the oct-file interface dis
 * Calling Other Functions in Mex-Files::  
 @c * Application Programming Interface for Mex-Files::  
 @end menu
 
 @node Getting Started with Mex-Files
 @subsection Getting Started with Mex-Files
 
 The basic command to build a mex-file is either @code{mkoctfile --mex}
-or @code{mex}. The first can either be used from within Octave or from
-the command line. However, to avoid issues with @sc{Matlab}'s own @code{mex}
+or @code{mex}.  The first can either be used from within Octave or from
+the command line.  However, to avoid issues with @sc{matlab}'s own @code{mex}
 command, the use of the command @code{mex} is limited to within Octave.
 
 @DOCSTRING(mex)
 
 @DOCSTRING(mexext)
 
-One important difference with the use of @code{mex} between @sc{Matlab} and
+One important difference with the use of @code{mex} between @sc{matlab} and
 Octave is that the header file "matrix.h" is implicitly included through
-the inclusion of "mex.h". This is to avoid a conflict with the Octave
+the inclusion of "mex.h".  This is to avoid a conflict with the Octave
 file "Matrix.h" with operating systems and compilers that don't
 distinguish between filenames in upper and lower case
 
 Consider the short example:
 
 @example
 @group
 @EXAMPLEFILE(firstmexdemo.c)
@@ -1664,18 +1664,18 @@ within a mex-file.
 @c @subsection Application Programming Interface for Mex-Files
 @c 
 @c WRITE ME, refer to mex.h and mexproto.h
 
 @node Standalone Programs
 @section Standalone Programs
 
 The libraries Octave itself uses, can be utilized in standalone
-applications. These applications then have access, for example, to the
-array and matrix classes as well as to all the Octave algorithms. The
+applications.  These applications then have access, for example, to the
+array and matrix classes as well as to all the Octave algorithms.  The
 following C++ program, uses class Matrix from @file{liboctave.a} or
 @file{liboctave.so}.
 
 @example
 @group
 @EXAMPLEFILE(standalone.cc)
 @end group
 @end example
diff --git a/doc/interpreter/func.txi b/doc/interpreter/func.txi
--- a/doc/interpreter/func.txi
+++ b/doc/interpreter/func.txi
@@ -1214,16 +1214,17 @@ The general form of a command call is
 which translates directly to
 
 @example
 @var{cmdname} ("@var{arg1}", "@var{arg2}", @dots{})
 @end example
 
 Any regular function can be used as a command if it accepts string input
 arguments.  For example:
+
 @example
 @group
 toupper lower_case_arg
    @result{} ans = LOWER_CASE_ARG
 @end group
 @end example
 
 One difficulty of commands occurs when one of the string input arguments
diff --git a/doc/interpreter/install.txi b/doc/interpreter/install.txi
--- a/doc/interpreter/install.txi
+++ b/doc/interpreter/install.txi
@@ -330,43 +330,43 @@ The versions listed below are the versio
 versions of these packages are available, you should try to use them,
 though there may be some differences.
 
 All libraries and header files will be installed in subdirectories of
 @code{$prefix64} (you must choose the location of this directory).
 
 @itemize @bullet
 @item
-BLAS and LAPACK (@url{http://www.netlib.org/lapack})
+@sc{blas} and @sc{lapack} (@url{http://www.netlib.org/lapack})
 
 Reference versions for both libraries are included in the reference
-LAPACK 3.2.1 distribution from @url{netlib.org}.
+@sc{lapack} 3.2.1 distribution from @url{netlib.org}.
 
 @itemize @minus
 @item
 Copy the file @file{make.inc.example} and name it @file{make.inc}.
 The options @option{-fdefault-integer-8} and @option{-fPIC} (on 64-bit
 CPU) have to be added to the variable @code{OPTS} and @code{NOOPT}.
 
 @item
 Once you have compiled this library make sure that you use it for
 compiling Suite Sparse and Octave.  In the following we assume that
-you installed the LAPACK library as $prefix64/lib/liblapack.a.
+you installed the @sc{lapack} library as $prefix64/lib/liblapack.a.
 @end itemize
 
 @item
-ARPACK (@url{http://www.caam.rice.edu/software/ARPACK})
+@sc{arpack} (@url{http://www.caam.rice.edu/software/ARPACK})
 
 @itemize @minus
 @item
 In @file{ARmake.inc} set the following variables:
 
 @example
 @group
-home=path to directory ARPACK
+home=path to directory @sc{arpack}
 FC=gfortran 
 FFLAGS=-fPIC -fdefault-integer-8
 MAKE=/usr/bin/make 
 ARPACKLIB=$(home)/libarpack.a
 DIRS=$(UTILdir) $(SRCdir)
 @end group
 @end example
 
@@ -405,39 +405,39 @@ Copy the library @file{libarpack.so} to 
 
 @item
 QRUPDATE (@url{http://sourceforge.net/projects/qrupdate})
 
 In the @file{Makeconf} file:
 
 @itemize @minus
 @item
-Add @option{-fdefault-integer-8} to @code{FFLAGS}.
+Add @option{-fdefault-integer-8} to @env{FFLAGS}.
 
 @item
-Adjust the BLAS and LAPACK variables as needed if your 64-bit aware BLAS
-and LAPACK libraries are in a non-standard location.
+Adjust the @sc{blas} and @sc{lapack} variables as needed if your 64-bit aware
+@sc{blas} and @sc{lapack} libraries are in a non-standard location.
 
 @item
-Set @code{PREFIX} to the top-level directory of your install tree.
+Set @env{PREFIX} to the top-level directory of your install tree.
 
 @item
 Run @code{make solib} to make a shared library.
 
 @item
 Run @code{make install} to install the library.
 @end itemize
 
 @item
 SuiteSparse (@url{http://www.cise.ufl.edu/research/sparse/SuiteSparse})
 
 @itemize @minus
 @item
 In @file{UFconfig/UFconfig.mk} use the following options for
-@code{CFLAGS} and @code{F77FLAGS}:
+@env{CFLAGS} and @env{F77FLAGS}:
 
 @example
 @group
 CC = gcc
 CFLAGS = -fPIC -O -DLP64 -DLONGBLAS='long int' -DLONG='long int'
 F77 = gfortran
 F77FLAGS = -fPIC -O -fdefault-integer-8
 BLAS = -L$BLAS/lib -lblas -lgfortran"
@@ -514,27 +514,28 @@ for f in *.a; do
   cd tmp
   ar vx ../$f
   gcc -shared -o ../$@{f%%.a@}.so *.o
   cd $top
   rm -rf tmp
 done
 @end group
 @end example
+
 @end itemize
 
 @item
-ATLAS instead of reference BLAS and LAPACK
+ATLAS instead of reference @sc{blas} and @sc{lapack}
 
 Suggestions on how to compile ATLAS, will be most welcome.
 
 @item
-GLPK
+@sc{glpk}
 
-Suggestions on how to compile GLPK will be most welcome.
+Suggestions on how to compile @sc{glpk} will be most welcome.
 
 @item
 QHULL (@url{http://www.qhull.org})
 
 Suggestions on how to compile QHULL will be most welcome.
 
 @item Octave
 Octave's 64-bit index support is activated with the configure option
@@ -550,36 +551,45 @@ Octave's 64-bit index support is activat
 @end example
 
 You must ensure that all Fortran sources except those in the
 @file{libcruft/ranlib} directory are compiled such that INTEGERS are
 8-bytes wide.  If you are using gfortan, the configure script should
 automatically set the Makefile variable @code{F77_INTEGER_8_FLAG} to 
 @option{-fdefault-integer-8}.  If you are using another compiler, you
 must set this variable yourself.  You should NOT set this flag in
-@code{FFLAGS}, otherwise the files in @file{libcruft/ranlib} will be
+@env{FFLAGS}, otherwise the files in @file{libcruft/ranlib} will be
 miscompiled.
 
 @item
 Other dependencies
 
 Probably nothing special needs to be done for the following
 dependencies.  If you discover that something does need to be done,
 please submit a bug report.
 
 @itemize @minus
 @item pcre or regex
+
 @item zlib
+
 @item hdf5
+
 @item fftw3
+
 @item cURL
+
 @item GraphicsMagick++
+
 @item OpenGL
+
 @item freetype
+
 @item fontconfig
+
 @item fltk
 @end itemize
 
 @end itemize
 
 @node Installation Problems
 @appendixsec Installation Problems
 
diff --git a/doc/interpreter/intro.txi b/doc/interpreter/intro.txi
--- a/doc/interpreter/intro.txi
+++ b/doc/interpreter/intro.txi
@@ -628,17 +628,17 @@ arguments.
 @cindex command descriptions
 
 Command descriptions have a format similar to function descriptions,
 except that the word `Function' is replaced by `Command'.  Commands are
 functions that may be called without surrounding their arguments in
 parentheses.  For example, here is the description for Octave's
 @code{cd} command:
 
-@deftypefn {Command} {} cd dir
+@deftypefn  {Command} {} cd dir
 @deftypefnx {Command} {} chdir dir
 Change the current working directory to @var{dir}.  For example,
 @kbd{cd ~/octave} changes the current working directory to
 @file{~/octave}.  If the directory does not exist, an error message is
 printed and the working directory is not changed.
 @end deftypefn
 
 @node A Sample Variable Description
diff --git a/doc/interpreter/numbers.txi b/doc/interpreter/numbers.txi
--- a/doc/interpreter/numbers.txi
+++ b/doc/interpreter/numbers.txi
@@ -389,30 +389,32 @@ 1 : 3 : 5
 defines the set of values @samp{[ 1, 4 ]}.
 
 Although a range constant specifies a row vector, Octave does @emph{not}
 convert range constants to vectors unless it is necessary to do so.
 This allows you to write a constant like @samp{1 : 10000} without using
 80,000 bytes of storage on a typical 32-bit workstation.
 
 A common example of when it does become necessary to convert ranges into
-vectors occurs when they appear within a vector (i.e. inside square
-brackets). For instance, whereas
+vectors occurs when they appear within a vector (i.e., inside square
+brackets).  For instance, whereas
 
 @example
 x = 0 : 0.1 : 1;
 @end example
 
+@noindent
 defines @var{x} to be a variable of type @code{range} and occupies 24
 bytes of memory, the expression
 
 @example
 y = [ 0 : 0.1 : 1];
 @end example
 
+@noindent
 defines @var{y} to be of type @code{matrix} and occupies 88 bytes of
 memory.
 
 Note that the upper (or lower, if the increment is negative) bound on
 the range is not always included in the set of values, and that ranges
 defined by floating point values can produce surprising results because
 Octave uses floating point arithmetic to compute the values in the
 range.  If it is important to include the endpoints of a range and the
diff --git a/doc/interpreter/oop.txi b/doc/interpreter/oop.txi
--- a/doc/interpreter/oop.txi
+++ b/doc/interpreter/oop.txi
@@ -416,17 +416,17 @@ declare subsasgn methods with different 
 * Function Overloading::
 * Operator Overloading::
 * Precedence of Objects::
 @end menu
 
 @node Function Overloading
 @subsection Function Overloading
 
-Any Octave function can be overloaded, and allows a object specific
+Any Octave function can be overloaded, and allows an object specific
 version of this function to be called as needed.  A pertinent example
 for our polynomial class might be to overload the @code{polyval} function
 like
 
 @example
 @group
 @EXAMPLEFILE(@polynomial/polyval.m)
 @end group
diff --git a/doc/interpreter/plot.txi b/doc/interpreter/plot.txi
--- a/doc/interpreter/plot.txi
+++ b/doc/interpreter/plot.txi
@@ -916,18 +916,18 @@ get (h, "type")
 @end example
 
 The properties and their current values are returned by @code{get (h)}
 where h is a handle of a graphics object.  If only the names of the
 allowed properties are wanted they may be displayed by:
 @code{get (h, "")}.
 
 Thus, for example,
+
 @smallexample
-@group
 h = figure ();
 get (h, "type")
 ans = figure
 get (h, "");
 error: get: ambiguous figure property name ; possible matches:
 
 __backend__            currentobject          paperposition          toolbar
 __enhanced__           deletefcn              paperpositionmode      type
@@ -942,17 +942,16 @@ children               inverthardcopy   
 clipping               keypressfcn            renderer               windowstyle
 closerequestfcn        keyreleasefcn          renderermode           wvisual
 color                  menubar                resize                 wvisualmode
 colormap               mincolormap            resizefcn              xdisplay
 createfcn              name                   selected               xvisual
 currentpoint           nextplot               selectionhighlight     xvisualmode
 currentaxes            numbertitle            selectiontype
 currentcharacter       paperorientation       tag
-@end group
 @end smallexample
 
 The root figure has index 0.  Its properties may be displayed by:
 @code{get (0, "")}.
 
 The uses of @code{get} and @code{set} are further explained in
 @ref{doc-get,,get}, @ref{doc-set,,set}.
 
diff --git a/doc/interpreter/sparse.txi b/doc/interpreter/sparse.txi
--- a/doc/interpreter/sparse.txi
+++ b/doc/interpreter/sparse.txi
@@ -776,17 +776,17 @@ continue, else goto 3b.
 @item if the above failed or the matrix is not Hermitian with a positive
       real diagonal use Gaussian elimination with pivoting using 
       @sc{lapack} xGBTRF, and goto 8.
 @end enumerate
 
 @item If the matrix is upper or lower triangular perform a sparse forward
 or backward substitution, and goto 8
 
-@item If the matrix is a upper triangular matrix with column permutations
+@item If the matrix is an upper triangular matrix with column permutations
 or lower triangular matrix with row permutations, perform a sparse forward 
 or backward substitution, and goto 8
 
 @item If the matrix is square, Hermitian with a real positive diagonal, attempt
 sparse Cholesky factorization using @sc{cholmod}.
 
 @item If the sparse Cholesky factorization failed or the matrix is not
 Hermitian with a real positive diagonal, and the matrix is square, factorize 
@@ -928,27 +928,27 @@ The simplest finite element models will 
 @tex
 $\Omega$ 
 @end tex
 @ifnottex
 Omega
 @end ifnottex
 into simplexes (triangles in 2D, pyramids in 3D).
 @ifset htmltex
-We take as an 3D example a cylindrical liquid filled tank with a small 
+We take as a 3-D example a cylindrical liquid filled tank with a small 
 non-conductive ball from the EIDORS project@footnote{EIDORS - Electrical 
 Impedance Tomography and Diffuse optical Tomography Reconstruction Software 
 @url{http://eidors3d.sourceforge.net}}.  This is model is designed to reflect
 an application of electrical impedance tomography, where current patterns
 are applied to such a tank in order to image the internal conductivity
 distribution.  In order to describe the FEM geometry, we have a matrix of 
 vertices @code{nodes} and simplices @code{elems}.
 @end ifset
 
-The following example creates a simple rectangular 2D electrically
+The following example creates a simple rectangular 2-D electrically
 conductive medium with 10 V and 20 V imposed on opposite sides 
 (Dirichlet boundary conditions).  All other edges are electrically
 isolated.
 
 @example
 @group
    node_y= [1;1.2;1.5;1.8;2]*ones(1,11);
    node_x= ones(5,1)*[1,1.05,1.1,1.2, ...
diff --git a/doc/interpreter/stats.txi b/doc/interpreter/stats.txi
--- a/doc/interpreter/stats.txi
+++ b/doc/interpreter/stats.txi
@@ -18,17 +18,17 @@
 
 @node Statistics
 @chapter Statistics
 
 Octave has support for various statistical methods.  This includes
 basic descriptive statistics, probability distributions, statistical tests, 
 random number generation, and much more.
 
-The functions that analyze data all assume that multidimensional data
+The functions that analyze data all assume that multi-dimensional data
 is arranged in a matrix where each row is an observation, and each
 column is a variable.  Thus, the matrix defined by
 
 @example
 @group
 a = [ 0.9, 0.7;
       0.1, 0.1;
       0.5, 0.4 ];
