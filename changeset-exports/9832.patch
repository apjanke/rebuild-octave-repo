# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1258593527 18000
#      Wed Nov 18 20:18:47 2009 -0500
# Node ID cd0c4a5a12c8e22d74b443c63beeb309dfa6e234
# Parent  737624cb75601d5d0ee9001f2bb53bbcc1d06ca4
orient.m: Flip papersize and paperposition when orientation changes. Add support for 'tall' option. Add tests.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2009-11-18  Ben Abbott <bpabbott@mac.com>
+
+	* plot/orient.m: Flip papersize and paperposition when orientation
+	changes. Add support for 'tall' option. Add tests.
+
 2009-11-18  Jaroslav Hajek  <highegg@gmail.com>
 
 	* io/textread.m: strncmp->strcmpi.
 
 2009-11-14  Jaroslav Hajek  <highegg@gmail.com>
 
 	* linear-algebra/expm.m: Fix typo.
 
diff --git a/scripts/plot/orient.m b/scripts/plot/orient.m
--- a/scripts/plot/orient.m
+++ b/scripts/plot/orient.m
@@ -14,17 +14,22 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} orient (@var{orientation})
 ## Set the default print orientation.  Valid values for
-## @var{orientation} include @code{"landscape"} and @code{"portrait"}.
+## @var{orientation} include @code{"landscape"}, @code{"portrait"}, 
+## and @code{"tall"}.
+##
+## The @code{"tall"} option sets the orientation to portait and fills
+## the page with the plot, while leaving a 0.25in border.
+##
 ## If called with no arguments, return the default print orientation.
 ## @end deftypefn
 
 ## Author: Paul Kienzle
 ## Adapted-By: jwe
 
 function retval = orient (varargin)
 
@@ -38,27 +43,67 @@ function retval = orient (varargin)
     cf = gcf ();
   endif
 
   if (nargs == 0)
     retval = get (cf, "paperorientation");
   elseif (nargin == 1)
     orientation = varargin{1};
     if (strcmpi (orientation, "landscape") || strcmpi (orientation, "portrait"))
-      set (cf, "paperorientation", orientation)
+      if (! strcmpi (get (cf, "paperorientation"), orientation))
+        ## FIXME - with the proper listeners in place there won't be a need to set
+        ##         the papersize and paperpostion here.
+        papersize = get (cf, "papersize");
+        paperposition = get (cf, "paperposition");
+        set (cf, "paperorientation", orientation)
+        set (cf, "papersize", papersize([2, 1]));
+        set (cf, "paperposition", paperposition([2, 1, 4, 3]));
+      endif
+    elseif (strcmpi (varargin{1}, 'tall'))
+      orient ("portrait")
+      papersize = get (cf, "papersize");
+      set (cf, "paperposition", [0.25, 0.25, (papersize - 0.5)]);
     else
       error ("orient: unknown orientation");
     endif
   else
     print_usage ();
   endif
 
 endfunction
 
-%!shared
-%!  set (gcf (), "visible", "off")
-%!assert(orient,"portrait") # default
-%!test orient('landscape')
-%!assert(orient,"landscape") # change to landscape
-%!test orient('portrait')
-%!assert(orient,"portrait")  # change to portrait
-%!fail("orient('nobody')","unknown orientation")
-%!assert(orient,"portrait") # errors don't change the state
+%!shared papersize, paperposition, tallpaperposition, hfig
+%!  papersize = [8.5, 11];
+%!  paperposition = [0.25, 2.5, 8, 6];
+%!  tallpaperposition = [0.25, 0.25, (papersize-0.5)];
+%!  hfig = figure ();
+%!  set (hfig, "visible", "off")
+%!  set (hfig, "paperorientation", "portrait")
+%!  set (hfig, "papersize", papersize)
+%!  set (hfig, "paperposition", paperposition)
+%!test
+%!  orient portrait
+%!  assert (orient, "portrait") # default
+%!  assert (get (hfig, "papersize"), papersize)
+%!  assert (get (hfig, "paperposition"), paperposition)
+%!test
+%!  orient landscape
+%!  assert (orient,"landscape") # change to landscape
+%!  assert (get (hfig, "papersize"), papersize([2, 1]))
+%!  assert (get (hfig, "paperposition"), paperposition([2, 1, 4, 3]))
+%!test
+%!  orient portrait # change back to portrait
+%!  assert (orient, "portrait")
+%!  assert (get (hfig, "papersize"), papersize)
+%!  assert (get (hfig, "paperposition"), paperposition)
+%!test
+%!  orient landscape
+%!  orient tall
+%!  assert (orient, "portrait")
+%!  assert (get (hfig, "papersize"), papersize)
+%!  assert (get (hfig, "paperposition"), tallpaperposition)
+%!fail ("orient ('nobody')", "unknown orientation")
+%!test
+%!  orient portrait # errors don't change the state
+%!  assert (orient, "portrait")
+%!  assert (get (hfig, "papersize"), papersize)
+%!  assert (get (hfig, "paperposition"), tallpaperposition)
+%!  close (hfig)
