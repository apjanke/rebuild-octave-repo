# HG changeset patch
# User jwe
# Date 835600511 0
#      Mon Jun 24 07:15:11 1996 +0000
# Node ID 9484969866d2cf314af5403317a1468aabd2b045
# Parent  f296bbc757a142d7f46cbb12d496bd4715060d72
[project @ 1996-06-24 07:13:26 by jwe]

diff --git a/src/lex.l b/src/lex.l
--- a/src/lex.l
+++ b/src/lex.l
@@ -1058,40 +1058,53 @@ static symbol_record *
 lookup_identifier (const string& name)
 {
   return curr_sym_tab->lookup (name, 1, 0);
 }
 
 // Grab the help text from an function file.  Always overwrites the
 // current contents of help_buf.
 
+// XXX FIXME XXX -- gobble_leading_white_space() in variables.cc
+// duplicates some of this code!
+
 static void
 grab_help_text (void)
 {
   help_buf.resize (0);
 
-  int in_comment = 1;
+  bool begin_comment = true;
+  bool in_comment = true;
   int c = 0;
 
   while ((c = yyinput ()) != EOF)
     {
+      if (begin_comment)
+	{
+	  if (c == '%' || c == '#')
+	    continue;
+	  else
+	    begin_comment = false;
+	}	
+
       if (in_comment)
 	{
 	  help_buf += (char) c;
 
 	  if (c == '\n')
-	    in_comment = 0;
+	    in_comment = false;
 	}
       else
 	{
 	  switch (c)
 	    {
 	    case '%':
 	    case '#':
-	      in_comment = 1;
+	      in_comment = true;
+	      begin_comment = true;
 	      break;
 
 	    case ' ':
 	    case '\t':
 	      break;
 
 	    default:
 	      goto done;
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -406,43 +406,55 @@ looks_like_octave_copyright (const strin
   return 0;
 }
 
 // Eat whitespace and comments from FFILE, returning the text of the
 // comments read if it doesn't look like a copyright notice.  If
 // IN_PARTS, consider each block of comments separately; otherwise,
 // grab them all at once.
 
+// XXX FIXME XXX -- grab_help_text() in lex.l duplicates some of this
+// code!
+
 static string
 gobble_leading_white_space (FILE *ffile, int in_parts)
 {
   string help_txt;
 
-  int first_comments_seen = 0;
-  int have_help_text = 0;
-  int in_comment = 0;
+  bool first_comments_seen = false;
+  bool begin_comment = false;
+  bool have_help_text = false;
+  bool in_comment = false;
   int c;
 
   while ((c = getc (ffile)) != EOF)
     {
       current_input_column++;
 
+      if (begin_comment)
+	{
+	  if (c == '%' || c == '#')
+	    continue;
+	  else
+	    begin_comment = false;
+	}
+
       if (in_comment)
 	{
 	  if (! have_help_text)
 	    {
-	      first_comments_seen = 1;
+	      first_comments_seen = true;
 	      help_txt += (char) c;
 	    }
 
 	  if (c == '\n')
 	    {
 	      input_line_number++;
 	      current_input_column = 0;
-	      in_comment = 0;
+	      in_comment = false;
 
 	      if (in_parts)
 		{
 		  if ((c = getc (ffile)) != EOF)
 		    {
 		      current_input_column--;
 		      ungetc (c, ffile);
 		      if (c == '\n')
@@ -455,29 +467,30 @@ gobble_leading_white_space (FILE *ffile,
 	}
       else
 	{
 	  switch (c)
 	    {
 	    case ' ':
 	    case '\t':
 	      if (first_comments_seen)
-		have_help_text = 1;
+		have_help_text = true;
 	      break;
 
 	    case '\n':
 	      if (first_comments_seen)
-		have_help_text = 1;
+		have_help_text = true;
 	      input_line_number++;
 	      current_input_column = 0;
 	      continue;
 
 	    case '%':
 	    case '#':
-	      in_comment = 1;
+	      begin_comment = true;
+	      in_comment = true;
 	      break;
 
 	    default:
 	      current_input_column--;
 	      ungetc (c, ffile);
 	      goto done;
 	    }
 	}
