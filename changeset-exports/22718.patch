# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1478133177 25200
#      Wed Nov 02 17:32:57 2016 -0700
# Branch stable
# Node ID d9bec44ffaff71aef7d952034deaee6632e42684
# Parent  c2f0e687471e6b639a9e4214d1a50b3f8281ec90
Fix segfault / invalid state when exiting via GUI due to race (bug #49515)

* interpreter.cc (octave::interpreter::clean_up_and_exit): Ensure that the
function never returns when exiting via octave_link::exit.  After the exit
signal is sent over the octave_link, the interpreter state may be completely
invalidated.

diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -1065,25 +1065,27 @@ namespace octave
 
     if (octave_link::exit (status))
       {
         if (safe_to_return)
           return;
         else
           {
             // What should we do here?  We might be called from some
-            // location other than the end of octave_execute_interpreter,
+            // location other than the end of octave::interpreter::execute
             // so it might not be safe to return.
 
             // We have nothing else to do at this point, and the
             // octave_link::exit function is supposed to take care of
-            // exiting for us.  Assume that job won't take more than a
-            // day...
+            // exiting for us.  Hang here forever so we never return.
 
-            octave_sleep (86400); // FIXME: really needed?
+            while (true)
+              {
+                octave_sleep (1);
+              }
           }
       }
     else
       {
         if (octave_exit)
           (*octave_exit) (status);
       }
   }
