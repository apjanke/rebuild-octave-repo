# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1238355017 -7200
#      Sun Mar 29 21:30:17 2009 +0200
# Node ID eabdfcc977f138d5ca0a95e2f15f5b240672c2e8
# Parent  2da105bf2507729c5cccbfad3eeaf0d67dc20c14
make unwind_protect handle also keyboard interrupts

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-03-29  Jaroslav Hajek  <highegg@gmail.com>
+
+	* pt-eval.cc (do_unwind_protect_cleanup_code): Protect also
+	octave_interrupt_state.
+
 2009-03-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/cellfun.cc (Fcellslices): Index n-d arrays along the
 	last dimension.
 
 2009-03-27  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/balance.cc (Fbalance): Fix order of output args.
diff --git a/src/pt-eval.cc b/src/pt-eval.cc
--- a/src/pt-eval.cc
+++ b/src/pt-eval.cc
@@ -912,16 +912,19 @@ do_unwind_protect_cleanup_code (void *pt
   // We want to run the cleanup code without error_state being set,
   // but we need to restore its value, so that any errors encountered
   // in the first part of the unwind_protect are not completely
   // ignored.
 
   unwind_protect_int (error_state);
   error_state = 0;
 
+  unwind_protect_int (octave_interrupt_state);
+  octave_interrupt_state = 0;
+
   // Similarly, if we have seen a return or break statement, allow all
   // the cleanup code to run before returning or handling the break.
   // We don't have to worry about continue statements because they can
   // only occur in loops.
 
   unwind_protect_int (tree_return_command::returning);
   tree_return_command::returning = 0;
 
