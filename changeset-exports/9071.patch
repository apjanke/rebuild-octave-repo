# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1238570408 -7200
#      Wed Apr 01 09:20:08 2009 +0200
# Node ID 034800482c7918e633e6f859aa33cf7e2ffdd643
# Parent  e9dc2ed2ec0f8411e81b2de81c66b02857102785
fix default string->real array conversion

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2009-04-01  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-str-mat.cc (default_numeric_conversion_function):
+	Create an octave_scalar if possible.
+
 2009-03-29  John W. Eaton  <jwe@octave.org>
 
 	* DLD-FUNCTIONS/fltk_backend.cc (plot_window::button_press):
 	Don't pass arbitrary input to fl_message as a format string.
 
 2009-03-29  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pt-eval.cc (do_unwind_protect_cleanup_code): Protect also
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -63,17 +63,23 @@ static octave_base_value *
 default_numeric_conversion_function (const octave_base_value& a)
 {
   octave_base_value *retval = 0;
 
   CAST_CONV_ARG (const octave_char_matrix_str&);
 
   NDArray nda = v.array_value (true);
 
-  if (! error_state) retval = new octave_matrix (nda);
+  if (! error_state)
+    {
+      if (nda.numel () == 1)
+        retval = new octave_scalar (nda(0));
+      else
+        retval = new octave_matrix (nda);
+    }
 
   return retval;
 }
 
 octave_base_value::type_conv_info
 octave_char_matrix_str::numeric_conversion_function (void) const
 {
   return octave_base_value::type_conv_info (default_numeric_conversion_function,
