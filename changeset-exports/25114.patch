# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1522843583 14400
#      Wed Apr 04 08:06:23 2018 -0400
# Branch stable
# Node ID f191e1a260950fe89c2c4ecd02e21f8ac6173fa9
# Parent  476fc012d09a2c880abcfa0243ae73d4208de858
if a Qt version appears partially installed, don't check another version

* acinclude.m4 (OCTAVE_CHECK_QT): If a given Qt version appears to be
partially installed, then don't check for any other version.  Instead,
display warning and list of missing modules in summary.
(OCTAVE_CHECK_QT_VERSION): Also accumulate list of avaiable Qt modules.

diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -1706,16 +1706,22 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
   use_qscintilla=no
   win32_terminal=no
 
   for ver in $octave_qt_versions; do
     OCTAVE_CHECK_QT_VERSION([$ver])
     if test $build_qt_gui = yes; then
       have_qt_version=$ver
       break
+    elif test -n "$QT_MODULES_AVAILABLE"; then
+      ## If some modules were found for $ver, then warn about possible
+      ## incomplete or broken Qt installation instead of checking for
+      ## next version in the list.
+      warn_qt_modules="Your installation of Qt version $ver appears incomplete or broken in some way.  Fix that or use --with-qt=VER to use another version."
+      break
     fi
   done
 
   if test $build_qt_gui = yes; then
     BUILD_QT_SUMMARY_MSG="yes (version: $have_qt_version)"
     if test x"$have_qt_version" = x4; then
       AC_DEFINE(HAVE_QT4, 1, [Define to 1 if using Qt version 4.])
     fi
@@ -1723,16 +1729,19 @@ AC_DEFUN([OCTAVE_CHECK_QT], [
       AC_DEFINE(HAVE_QT5, 1, [Define to 1 if using Qt version 5.])
     fi
   else
     if test -n "$QT_MODULES_MISSING"; then
       BUILD_QT_SUMMARY_MSG="no (missing:$QT_MODULES_MISSING)"
     else
       BUILD_QT_SUMMARY_MSG="no"
     fi
+    if test -n "$warn_qt_modules"; then
+      OCTAVE_CONFIGURE_WARNING([warn_qt_modules])
+    fi
     if test -n "$warn_qt_libraries"; then
       OCTAVE_CONFIGURE_WARNING([warn_qt_libraries])
     fi
     if test -n "$warn_qt_version"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_version])
     fi
     if test -n "$warn_qt_tools"; then
         OCTAVE_CONFIGURE_WARNING([warn_qt_tools])
@@ -1912,30 +1921,33 @@ AC_DEFUN([OCTAVE_CHECK_QT_VERSION], [AC_
     5)
       QT_MODULES="Qt5Core Qt5Gui Qt5Network Qt5OpenGL Qt5PrintSupport Qt5Help"
     ;;
     *)
       AC_MSG_ERROR([Unrecognized Qt version $qt_version])
     ;;
   esac
 
+  ## Use this check to get info in the log file.
   PKG_CHECK_MODULES(QT, [$QT_MODULES],
     [],
     [build_qt_gui=no
      warn_qt_libraries="Qt libraries not found; disabling Qt GUI"])
 
+  ## Check the modules again individually to get lists of modules that
+  ## are available and/or missing
+  QT_MODULES_AVAILABLE=
   QT_MODULES_MISSING=
-  if test $build_qt_gui = no; then
-    ## Get list of modules that are missing
-    for pkg in $QT_MODULES; do
-      if ! $PKG_CONFIG --exists $pkg; then
-        QT_MODULES_MISSING="$QT_MODULES_MISSING $pkg"
-      fi
-    done
-  fi
+  for qt_mod in $QT_MODULES; do
+    if $PKG_CONFIG --exists $qt_mod; then
+      QT_MODULES_AVAILABLE="$QT_MODULES_AVAILABLE $qt_mod"
+    else
+      QT_MODULES_MISSING="$QT_MODULES_MISSING $qt_mod"
+    fi
+  done
 
   if test $build_qt_gui = yes; then
     ## Retrieve Qt compilation and linker flags
     QT_CPPFLAGS="$($PKG_CONFIG --cflags-only-I $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LDFLAGS="$($PKG_CONFIG --libs-only-L $QT_MODULES | $SED -e 's/^ *$//')"
     QT_LIBS="$($PKG_CONFIG --libs-only-l $QT_MODULES | $SED -e 's/^ *$//')"
 
     case $host_os in
