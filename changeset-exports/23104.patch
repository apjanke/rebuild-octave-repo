# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1485539793 18000
#      Fri Jan 27 12:56:33 2017 -0500
# Node ID 2805cc365a86039d2f2a0777f202fe18aa740d65
# Parent  09c72a32092577ea0742b280759e00f4357c48de
fix thinko in previous change

* interpreter.cc (interpreter::execute_internal):
Simply call main_loop and return its status.
(main_loop): Return early with 0 status for success if m_embedded is
true.

diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -619,17 +619,17 @@ namespace octave
     if (options.forced_interactive ())
       {
         octave::command_editor::blink_matching_paren (false);
 
         // FIXME: is this the right thing to do?
         Fecho_executing_commands (octave_value (ECHO_CMD_LINE));
       }
 
-    return m_embedded ? main_loop () : 1;
+    return main_loop ();
   }
 
   void interpreter::display_startup_message (void) const
   {
     const cmdline_options& options = m_app_context->options ();
 
     if (m_interactive && ! options.inhibit_startup_message ())
       std::cout << octave_startup_message () << "\n" << std::endl;
@@ -835,16 +835,19 @@ namespace octave
     bool verbose = false;
     bool require_file = true;
 
     return safe_source_file (fname, context, verbose, require_file, "octave");
   }
 
   int interpreter::main_loop (void)
   {
+    if (m_embedded)
+      return 0;
+
     octave_save_signal_mask ();
 
     octave::can_interrupt = true;
 
     octave_signal_hook = octave::signal_handler;
     octave_interrupt_hook = 0;
     octave_bad_alloc_hook = 0;
 
