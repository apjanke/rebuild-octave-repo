# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1253283233 14400
#      Fri Sep 18 10:13:53 2009 -0400
# Node ID a307a6f77fb3b70adb333252aac59d13e684cc06
# Parent  e087d7c77ff949dd4d16cedfe6ce676fad804373
aclocal.m4: consistently quote first arg to AC_DEFUN

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+2009-09-18  John W. Eaton  <jwe@octave.org>
+
+	* aclocal.m4: Consistently quote first arg to AC_DEFUN.
+
 2009-09-17  John W. Eaton  <jwe@octave.org>
 
 	* configure.ac: Also AC_DEFINE OCTAAVE_IDX_TYPE.
 	(AH_BOTTOM): Include contents of libcruft/misc/oct-dlldefs.h and
 	liboctave/oct-types.h here.  Use C-style comments.
 	(AC_CONFIG_FILES): Remove liboctave/oct-types.h from the list.
 
 2009-09-15  John W. Eaton  <jwe@octave.org>
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -36,84 +36,84 @@ m4_define([m4_ifnblank],
 [m4_if(m4_translit([[$1]],  [ ][	][
 ]), [], [$3], [$2])])])
 dnl
 dnl ----------------------------------------------------------------------
 dnl
 dnl Figure out the hardware-vendor-os info.
 dnl
 dnl OCTAVE_HOST_TYPE
-AC_DEFUN(OCTAVE_HOST_TYPE,
+AC_DEFUN([OCTAVE_HOST_TYPE],
 [AC_CANONICAL_HOST
 if test -z "$host"; then
   host=unknown
 fi
 canonical_host_type=$host
 if test "$host" = unknown; then
   AC_MSG_WARN([configuring Octave for unknown system type
 ])
 fi
 AC_SUBST(canonical_host_type)])
 dnl
 dnl Set default value for a variable and substitute it.
 dnl
 dnl OCTAVE_SET_DEFAULT
-AC_DEFUN(OCTAVE_SET_DEFAULT,
+AC_DEFUN([OCTAVE_SET_DEFAULT],
 [ifelse($#, 2, [: ${$1=$2}
 ])dnl
 AC_MSG_RESULT([defining $1 to be $$1])
 AC_SUBST($1)])
 dnl
 dnl Check for ar.
 dnl
-AC_DEFUN(OCTAVE_PROG_AR,
+AC_DEFUN([OCTAVE_PROG_AR],
 [if test -z "$AR"; then
   AR=ar
 fi
 AC_SUBST(AR)
 
 if test -z "$ARFLAGS"; then
   ARFLAGS="rc"
 fi
 AC_SUBST(ARFLAGS)
 ])
 dnl
 dnl See if the compiler supports placement delete
 dnl
-AC_DEFUN(OCTAVE_PLACEMENT_DELETE,
+AC_DEFUN([OCTAVE_PLACEMENT_DELETE],
 [AC_CACHE_CHECK([whether <new> defines placement delete operator],
 octave_cv_placement_delete,
 [AC_LANG_PUSH(C++)
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <new>]],
 [[operator delete((void *)0, (void *)0);]])],
 octave_cv_placement_delete=yes, octave_cv_placement_delete=no)])
 if test $octave_cv_placement_delete = yes; then
 AC_DEFINE(HAVE_PLACEMENT_DELETE,1,[Define if C++ supports operator delete(void *, void *)])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
 dnl See if the compiler dynamic auto arrays
 dnl
-AC_DEFUN(OCTAVE_DYNAMIC_AUTO_ARRAYS,
+AC_DEFUN([OCTAVE_DYNAMIC_AUTO_ARRAYS],
 [AC_CACHE_CHECK([whether C++ supports dynamic auto arrays],
 octave_cv_dynamic_auto_arrays,
 [AC_LANG_PUSH(C++)
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],
 [[void test(char *); int length(); char x[length()]; test(x);]])],
 octave_cv_dynamic_auto_arrays=yes, octave_cv_dynamic_auto_arrays=no)])
 if test $octave_cv_dynamic_auto_arrays = yes; then
 AC_DEFINE(HAVE_DYNAMIC_AUTO_ARRAYS,1,[Define if C++ supports dynamic auto arrays])
 fi
 AC_LANG_POP(C++)
 ])
 dnl
 dnl Check for broken strptime
 dnl
-AC_DEFUN(OCTAVE_STRPTIME_BROKEN,
+AC_DEFUN([OCTAVE_STRPTIME_BROKEN],
 [AC_CACHE_CHECK([whether strptime is broken],
 octave_cv_strptime_broken,
 [AC_LANG_PUSH(C)
 AC_RUN_IFELSE([AC_LANG_PROGRAM([[
 #define _XOPEN_SOURCE
 #if defined (HAVE_SYS_TYPES_H)
 #include <sys/types.h>
 #if defined (HAVE_UNISTD_H)
@@ -136,17 +136,17 @@ dnl
 dnl The following test is from Karl Berry's Kpathseach library.  I'm
 dnl including it here in case we someday want to make the use of
 dnl kpathsea optional.
 dnl
 dnl Some BSD putenv's, e.g., FreeBSD, do malloc/free's on the environment.
 dnl This test program is due to Mike Hibler <mike@cs.utah.edu>.
 dnl We don't actually need to run this if we don't have putenv, but it
 dnl doesn't hurt.
-AC_DEFUN(OCTAVE_SMART_PUTENV,
+AC_DEFUN([OCTAVE_SMART_PUTENV],
 [AC_MSG_CHECKING(whether putenv uses malloc)
 AC_CACHE_VAL(octave_cv_func_putenv_malloc,
 [AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #define VAR	"YOW_VAR"
 #define STRING1 "GabbaGabbaHey"
 #define STRING2 "Yow!!"		/* should be shorter than STRING1 */
 extern char *getenv (); /* in case char* and int don't mix gracefully */
 main ()
@@ -199,17 +199,17 @@ AC_MSG_RESULT($octave_cv_func_putenv_mal
 if test $octave_cv_func_putenv_malloc = yes; then
   AC_DEFINE(SMART_PUTENV,1,[To quiet autoheader.])
 fi])
 dnl
 dnl These two checks for signal functions were originally part of the
 dnl aclocal.m4 file distributed with bash 2.0.
 dnl
 dnl Check type of signal routines (posix, 4.2bsd, 4.1bsd or v7)
-AC_DEFUN(OCTAVE_SIGNAL_CHECK,
+AC_DEFUN([OCTAVE_SIGNAL_CHECK],
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_MSG_CHECKING(for type of signal functions)
 AC_CACHE_VAL(octave_cv_signal_vintage,
 [
   AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <signal.h>]],
     [[sigset_t ss;
       struct sigaction sa;
       sigemptyset (&ss);
@@ -237,17 +237,17 @@ if test "$octave_cv_signal_vintage" = po
 AC_DEFINE(HAVE_POSIX_SIGNALS, 1, [Define if you have POSIX style signals.])
 elif test "$octave_cv_signal_vintage" = "4.2bsd"; then
 AC_DEFINE(HAVE_BSD_SIGNALS, 1, [Define if you have BSD style signals.])
 elif test "$octave_cv_signal_vintage" = svr3; then
 AC_DEFINE(HAVE_USG_SIGHOLD, 1, [Define if you have System V Release 3 signals.])
 fi
 ])
 dnl
-AC_DEFUN(OCTAVE_REINSTALL_SIGHANDLERS,
+AC_DEFUN([OCTAVE_REINSTALL_SIGHANDLERS],
 [AC_REQUIRE([AC_TYPE_SIGNAL])
 AC_REQUIRE([OCTAVE_SIGNAL_CHECK])
 AC_MSG_CHECKING([if signal handlers must be reinstalled when invoked])
 AC_CACHE_VAL(octave_cv_must_reinstall_sighandlers,
 [AC_RUN_IFELSE([AC_LANG_SOURCE([[
 #include <signal.h>
 #ifdef HAVE_UNISTD_H
 #include <unistd.h>
@@ -302,17 +302,17 @@ if test "$octave_cv_must_reinstall_sigha
   AC_DEFINE(MUST_REINSTALL_SIGHANDLERS,1,[Define if signal handlers must be reinstalled after they are called.])
 fi
 ])
 dnl
 dnl Check to see if C++ compiler needs the new friend template declaration 
 dnl syntax. 
 dnl
 dnl OCTAVE_CXX_NEW_FRIEND_TEMPLATE_DECL
-AC_DEFUN(OCTAVE_CXX_NEW_FRIEND_TEMPLATE_DECL, [
+AC_DEFUN([OCTAVE_CXX_NEW_FRIEND_TEMPLATE_DECL], [
   AC_REQUIRE([AC_PROG_CXX])
   AC_MSG_CHECKING([for C++ support for new friend template declaration])
   AC_CACHE_VAL(octave_cv_cxx_new_friend_template_decl, [
     AC_LANG_PUSH(C++)
     rm -f conftest.h
     cat > conftest.h <<EOB
        struct A {
 	 friend int operator== (const A&, const A&);
@@ -339,17 +339,17 @@ EOB
 ])
 dnl
 dnl Check to see if C compiler handles FLAG command line option.  If
 dnl two arguments are specified, execute the second arg as shell
 dnl commands.  Otherwise, add FLAG to CFLAGS if the compiler accepts
 dnl the flag.
 dnl
 dnl OCTAVE_CC_FLAG
-AC_DEFUN(OCTAVE_CC_FLAG, [
+AC_DEFUN([OCTAVE_CC_FLAG], [
   ac_safe=`echo "$1" | sed 'y%./+-:=%__p___%'`
   AC_MSG_CHECKING(whether ${CC-cc} accepts $1)
   AC_CACHE_VAL(octave_cv_cc_flag_$ac_safe, [
     AC_LANG_PUSH(C)
     XCFLAGS="$CFLAGS"
     CFLAGS="$CFLAGS $1"
     AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
       eval "octave_cv_cc_flag_$ac_safe=yes",
@@ -369,17 +369,17 @@ AC_DEFUN(OCTAVE_CC_FLAG, [
 ])
 dnl
 dnl Check to see if C++ compiler handles FLAG command line option.  If
 dnl two arguments are specified, execute the second arg as shell
 dnl commands.  Otherwise, add FLAG to CXXFLAGS if the compiler accepts
 dnl the flag.
 dnl
 dnl OCTAVE_CXX_FLAG
-AC_DEFUN(OCTAVE_CXX_FLAG, [
+AC_DEFUN([OCTAVE_CXX_FLAG], [
   ac_safe=`echo "$1" | sed 'y%./+-:=%__p___%'`
   AC_MSG_CHECKING(whether ${CXX-g++} accepts $1)
   AC_CACHE_VAL(octave_cv_cxx_flag_$ac_safe, [
     AC_LANG_PUSH(C++)
     XCXXFLAGS="$CXXFLAGS"
     CXXFLAGS="$CXXFLAGS $1"
     AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
       eval "octave_cv_cxx_flag_$ac_safe=yes",
@@ -399,17 +399,17 @@ AC_DEFUN(OCTAVE_CXX_FLAG, [
 ])
 dnl
 dnl Check to see if Fortran compiler handles FLAG command line option.  If
 dnl two arguments are specified, execute the second arg as shell
 dnl commands.  Otherwise, add FLAG to FFLAGS if the compiler accepts
 dnl the flag.
 dnl
 dnl OCTAVE_F77_FLAG
-AC_DEFUN(OCTAVE_F77_FLAG, [
+AC_DEFUN([OCTAVE_F77_FLAG], [
   ac_safe=`echo "$1" | sed 'y%./+-:=%__p___%'`
   AC_MSG_CHECKING(whether ${F77-g77} accepts $1)
   AC_CACHE_VAL(octave_cv_f77_flag_$ac_safe, [
     AC_LANG_PUSH(Fortran 77)
     XFFLAGS="$FFLAGS"
     FFLAGS="$FFLAGS $1"
     AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
       eval "octave_cv_f77_flag_$ac_safe=yes",
@@ -425,17 +425,17 @@ AC_DEFUN(OCTAVE_F77_FLAG, [
   else
     AC_MSG_RESULT(no)
     ifelse([$3], , , [$3])
   fi
 ])
 dnl
 dnl Check to see whether the default Fortran INTEGER is 64 bits wide.
 dnl
-AC_DEFUN(OCTAVE_CHECK_FORTRAN_INTEGER_SIZE, [
+AC_DEFUN([OCTAVE_CHECK_FORTRAN_INTEGER_SIZE], [
   AC_LANG_PUSH(Fortran 77)
   AC_CACHE_CHECK([whether $F77 generates correct size integers],
                  [octave_cv_fortran_integer_size],
 [AC_COMPILE_IFELSE(
 [      subroutine foo(n, in, out)
       integer n, in(n), out(n)
       integer i
       do 10 i = 1, n
@@ -478,17 +478,17 @@ rm -f conftest.$ac_objext fintsize.$ac_o
   octave_cv_fortran_integer_size=no])])
   AC_LANG_POP(Fortran 77)
 ])
 dnl
 dnl
 dnl
 dnl OCTAVE_CHECK_LIBRARY(LIBRARY, DOC-NAME, WARN-MSG, HEADER, FUNC,
 dnl                      LANG, DOC-STRING, EXTRA-CHECK)
-AC_DEFUN(OCTAVE_CHECK_LIBRARY, [
+AC_DEFUN([OCTAVE_CHECK_LIBRARY], [
   AC_ARG_WITH([$1-includedir],
     [AS_HELP_STRING([--with-$1-includedir=DIR],
       [look for $2 include files in DIR])],
     [m4_toupper([$1])_CPPFLAGS="-I$withval"])
   AC_SUBST(m4_toupper([$1])_CPPFLAGS)
 
   AC_ARG_WITH([$1-libdir],
     [AS_HELP_STRING([--with-$1-libdir=DIR],
@@ -555,17 +555,17 @@ AC_DEFUN(OCTAVE_CHECK_LIBRARY, [
   if test -n "$warn_$1"; then
     AC_MSG_WARN($warn_$1)
     m4_toupper([$1])_LIBS=
   fi
 ])
 dnl
 dnl Check for flex
 dnl
-AC_DEFUN(OCTAVE_PROG_FLEX, [
+AC_DEFUN([OCTAVE_PROG_FLEX], [
 ### For now, don't define LEXLIB to be -lfl -- we don't use anything in
 ### it, and it might not be installed.
 ###
 ### Also make sure that we generate an interactive scanner if we are
 ### using flex.
   AC_PROG_LEX
   case "$LEX" in
     flex*)
@@ -579,32 +579,32 @@ AC_DEFUN(OCTAVE_PROG_FLEX, [
       AC_MSG_WARN($warn_flex)
     ;;
   esac
   AC_SUBST(LFLAGS)
 ])
 dnl
 dnl Check for bison
 dnl
-AC_DEFUN(OCTAVE_PROG_BISON, [
+AC_DEFUN([OCTAVE_PROG_BISON], [
   AC_PROG_YACC
   case "$YACC" in
     bison*)
     ;;
     *)
       YACC='$(top_srcdir)/missing bison'
       warn_bison="I didn't find bison, but it's only a problem if you need to reconstruct parse.cc"
       AC_MSG_WARN($warn_bison)
     ;;
   esac
 ])
 dnl
 dnl What pager should we use?
 dnl
-AC_DEFUN(OCTAVE_PROG_PAGER,
+AC_DEFUN([OCTAVE_PROG_PAGER],
 [if test "$cross_compiling" = yes; then
   DEFAULT_PAGER=less
   AC_MSG_RESULT(assuming $DEFAULT_PAGER exists on $canonical_host_type host)
   AC_SUBST(DEFAULT_PAGER)
 else
   octave_possible_pagers="less more page pg"
   case "$canonical_host_type" in
     *-*-cygwin* | *-*-mingw32* | *-*-msdosmsvc)
@@ -617,17 +617,17 @@ else
     warn_less="I couldn't find \`less', \`more', \`page', or \`pg'"
     AC_MSG_WARN($warn_less)
   fi
 fi
 ])
 dnl
 dnl Does gnuplot exist?
 dnl
-AC_DEFUN(OCTAVE_PROG_GNUPLOT, [
+AC_DEFUN([OCTAVE_PROG_GNUPLOT], [
 case "$canonical_host_type" in
   *-*-cygwin* | *-*-mingw32* | *-*-msdosmsvc)
     gp_names="pgnuplot pipe-gnuplot gnuplot"
     gp_default=pgnuplot
   ;;
   *)
     gp_names=gnuplot
     gp_default=gnuplot
@@ -661,30 +661,30 @@ else
   fi
 fi
 AC_SUBST(GNUPLOT)
 ])
 dnl
 dnl Is gperf installed?
 dnl
 dnl OCTAVE_PROG_GPERF
-AC_DEFUN(OCTAVE_PROG_GPERF, [
+AC_DEFUN([OCTAVE_PROG_GPERF], [
   AC_CHECK_PROG(GPERF, gperf, gperf, [])
   if test -z "$GPERF"; then
     GPERF='$(top_srcdir)/missing gperf'
     warn_gperf="I didn't find gperf, but it's only a problem if you need to reconstruct oct-gperf.h"
     AC_MSG_WARN($warn_gperf)
   fi
   AC_SUBST(GPERF)
 ])
 dnl
 dnl Is ghostscript installed?
 dnl
 dnl OCTAVE_PROG_GHOSTSCRIPT
-AC_DEFUN(OCTAVE_PROG_GHOSTSCRIPT, [
+AC_DEFUN([OCTAVE_PROG_GHOSTSCRIPT], [
   case "$canonical_host_type" in
     *-*-cygwin* | *-*-mingw32* | *-*-msdosmsvc)
       gs_names="gs gswin32"
     ;;
     *)
       gs_names=gs
     ;;
   esac
@@ -695,43 +695,43 @@ AC_DEFUN(OCTAVE_PROG_GHOSTSCRIPT, [
     AC_MSG_WARN($warn_ghostscript)
   fi
   AC_SUBST(GHOSTSCRIPT)
 ])
 dnl
 dnl Is makeinfo installed?
 dnl
 dnl OCTAVE_PROG_MAKEINFO
-AC_DEFUN(OCTAVE_PROG_MAKEINFO, [
+AC_DEFUN([OCTAVE_PROG_MAKEINFO], [
   AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, [])
   if test -z "$MAKEINFO"; then
     MAKEINFO='$(top_srcdir)/missing makeinfo'
     warn_makeinfo="I didn't find makeinfo, but it's only a problem if you need to reconstruct the Info version of the manual"
     AC_MSG_WARN($warn_makeinfo)
   fi
   AC_SUBST(MAKEINFO)
 ])
 dnl
 dnl Is texi2dvi installed?
 dnl
 dnl OCTAVE_PROG_TEXI2DVI
-AC_DEFUN(OCTAVE_PROG_TEXI2DVI, [
+AC_DEFUN([OCTAVE_PROG_TEXI2DVI], [
   AC_CHECK_PROG(TEXI2DVI, texi2dvi, texi2dvi, [])
   if test -z "$TEXI2DVI"; then
     TEXI2DVI='$(top_srcdir)/missing texi2dvi'
     warn_texi2dvi="I didn't find texi2dvi, but it's only a problem if you need to reconstruct the DVI version of the manual"
     AC_MSG_WARN($warn_texi2dvi)
   fi
   AC_SUBST(TEXI2DVI)
 ])
 dnl
 dnl Is texi2pdf installed?
 dnl
 dnl OCTAVE_PROG_TEXI2PDF
-AC_DEFUN(OCTAVE_PROG_TEXI2PDF, [
+AC_DEFUN([OCTAVE_PROG_TEXI2PDF], [
   AC_REQUIRE([OCTAVE_PROG_TEXI2DVI])
   AC_CHECK_PROG(TEXI2PDF, texi2pdf, texi2pdf, [])
   if test -z "$TEXI2PDF"; then
     missing=true;
     if test -n "$TEXI2DVI"; then
       TEXI2PDF="$TEXI2DVI --pdf"
       missing=false;
     fi
@@ -745,17 +745,17 @@ AC_DEFUN(OCTAVE_PROG_TEXI2PDF, [
   fi
   AC_SUBST(TEXI2PDF)
 ])
 dnl
 dnl See if the C++ library is ISO compliant.
 dnl FIXME: This is obviously very simplistic, and trivially fooled.
 dnl
 dnl OCTAVE_CXX_ISO_COMPLIANT_LIBRARY
-AC_DEFUN(OCTAVE_CXX_ISO_COMPLIANT_LIBRARY, [
+AC_DEFUN([OCTAVE_CXX_ISO_COMPLIANT_LIBRARY], [
   AC_REQUIRE([AC_PROG_CXX])
   AC_MSG_CHECKING([if C++ library is ISO compliant])
   AC_CACHE_VAL(octave_cv_cxx_iso_compliant_library, [
     AC_LANG_PUSH(C++)
     rm -f conftest.h
 ### Omitting cwctype for now, since it is broken with gcc-3.0.x and
 ### possibly other versions...
     for inc in algorithm bitset cassert cctype cerrno cfloat ciso646 \
@@ -781,17 +781,17 @@ AC_DEFUN(OCTAVE_CXX_ISO_COMPLIANT_LIBRAR
     AC_DEFINE(CXX_ISO_COMPLIANT_LIBRARY, 1, [Define if your C++ runtime library is ISO compliant.])
   fi
 ])
 dnl
 dnl Allow the user disable support for command line editing using GNU
 dnl readline.
 dnl
 dnl OCTAVE_ENABLE_READLINE
-AC_DEFUN(OCTAVE_ENABLE_READLINE, [
+AC_DEFUN([OCTAVE_ENABLE_READLINE], [
   USE_READLINE=true
   READLINE_LIBS=
   AC_ARG_ENABLE(readline,
     [  --enable-readline       use readline library (default is yes)],
     [if test "$enableval" = no; then
        USE_READLINE=false
        warn_readline="command editing and history features require GNU Readline"
      fi])
@@ -809,17 +809,17 @@ AC_DEFUN(OCTAVE_ENABLE_READLINE, [
   fi
   AC_SUBST(READLINE_LIBS)
 ])
 dnl
 dnl Check to see if C++ reintrepret cast works for function pointers.
 dnl
 dnl OCTAVE_CXX_BROKEN_REINTERPRET_CAST
 dnl
-AC_DEFUN(OCTAVE_CXX_BROKEN_REINTERPRET_CAST, [
+AC_DEFUN([OCTAVE_CXX_BROKEN_REINTERPRET_CAST], [
   AC_REQUIRE([AC_PROG_CXX])
   AC_LANG_PUSH(C++)
   AC_CACHE_CHECK([for broken C++ reinterpret_cast],
     octave_cv_cxx_broken_reinterpret_cast, [
     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <cmath>]], [[
       typedef double (*fptr) (double);
       fptr psin = sin;
       void *vptr = reinterpret_cast<void *> (psin);
@@ -828,17 +828,17 @@ AC_DEFUN(OCTAVE_CXX_BROKEN_REINTERPRET_C
       octave_cv_cxx_broken_reinterpret_cast=yes)])
   if test $octave_cv_cxx_broken_reinterpret_cast = yes ; then
     AC_DEFINE(CXX_BROKEN_REINTERPRET_CAST, 1, [Define if C++ reinterpret_cast fails for function pointers.])
 fi
   AC_LANG_POP(C++)])
 dnl
 dnl Determine if mkdir accepts only one argument instead dnl of the usual 2.
 dnl
-AC_DEFUN(OCTAVE_MKDIR_TAKES_ONE_ARG, [
+AC_DEFUN([OCTAVE_MKDIR_TAKES_ONE_ARG], [
 AC_LANG_PUSH(C++)
 AC_CACHE_CHECK([if mkdir takes one argument], octave_cv_mkdir_takes_one_arg,
 [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>
 #ifdef HAVE_SYS_STAT_H
 # include <sys/stat.h>
 #endif
 #ifdef HAVE_UNISTD_H
 # include <unistd.h>
@@ -926,33 +926,33 @@ if test -z "$SED"; then
 fi
 AC_SUBST(SED)
 AC_MSG_RESULT([$SED])
 ])
 dnl
 dnl Find Perl.
 dnl
 dnl OCTAVE_PROG_PERL
-AC_DEFUN(OCTAVE_PROG_PERL,
+AC_DEFUN([OCTAVE_PROG_PERL],
 [AC_CHECK_PROG(PERL, perl, perl, [])
   AC_SUBST(PERL)
 ])
 dnl
 dnl Find Python.
 dnl
 dnl OCTAVE_PROG_PYTHON
-AC_DEFUN(OCTAVE_PROG_PYTHON,
+AC_DEFUN([OCTAVE_PROG_PYTHON],
 [AC_CHECK_PROG(PYTHON, python, python, [])
   AC_SUBST(PYTHON)
 ])
 dnl
 dnl Find desktop-file-install.
 dnl
 dnl OCTAVE_PROG_DESKTOP_FILE_INSTALL
-AC_DEFUN(OCTAVE_PROG_DESKTOP_FILE_INSTALL,
+AC_DEFUN([OCTAVE_PROG_DESKTOP_FILE_INSTALL],
 [AC_CHECK_PROG(DESKTOP_FILE_INSTALL, desktop-file-install, desktop-file-install, [])
   AC_SUBST(DESKTOP_FILE_INSTALL)
 ])
 dnl
 dnl Check for IEEE 754 data format.
 dnl
 AC_DEFUN([OCTAVE_IEEE754_DATA_FORMAT],
 [AC_MSG_CHECKING([for IEEE 754 data format])
@@ -1074,33 +1074,33 @@ AC_DEFUN([OCTAVE_HDF5_HAS_REQUIRED_API],
     octave_hdf5_ok=no
     warn_hdf5="HDF5 library does not provide the version 1.6 API.  Octave will not be able to save or load HDF5 data files."
     AC_MSG_WARN($warn_hdf5)
   fi
 ])
 dnl
 dnl Check for the QHull version.
 dnl
-AC_DEFUN(OCTAVE_CHECK_QHULL_VERSION,
+AC_DEFUN([OCTAVE_CHECK_QHULL_VERSION],
   [AC_CACHE_CHECK([for qh_version in $QHULL_LIBS],
     octave_cv_lib_qhull_version,  [
       AC_LINK_IFELSE([AC_LANG_PROGRAM([[
 #include <qhull/qhull_a.h>
 ]], [[
 const char *tmp = qh_version;
 ]])], [octave_cv_lib_qhull_version=yes], [octave_cv_lib_qhull_version=no])])
   if test "$octave_cv_lib_qhull_version" = no; then
     AC_DEFINE(NEED_QHULL_VERSION, 1,
       [Define if the QHull library needs a qh_version variable defined.])
   fi
 ])
 dnl
 dnl Check whether QHull works (does not crash)
 dnl
-AC_DEFUN(OCTAVE_CHECK_QHULL_OK,
+AC_DEFUN([OCTAVE_CHECK_QHULL_OK],
   [AC_CACHE_CHECK([whether the qhull library works],
     octave_cv_lib_qhull_ok, [
       AC_RUN_IFELSE([AC_LANG_PROGRAM([[
 #include <stdio.h>
 #include <qhull/qhull.h>
 #ifdef NEED_QHULL_VERSION
 char *qh_version = "version";
 #endif
@@ -1188,17 +1188,17 @@ else
   fi
 fi
 AC_SUBST(OPENGL_LIBS)
 ])
 dnl
 dnl See if function gluTessCallback is called with "(...)"
 dnl
 dnl OCTAVE_GLUTESSCALLBACK_THREEDOTS
-AC_DEFUN(OCTAVE_GLUTESSCALLBACK_THREEDOTS,
+AC_DEFUN([OCTAVE_GLUTESSCALLBACK_THREEDOTS],
 [AC_CACHE_CHECK([whether gluTessCallback is called with "(...)"],
 octave_cv_glutesscallback_threedots,
 [AC_LANG_PUSH(C++)
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #ifdef HAVE_GL_GLU_H
 #include <GL/glu.h>
 #elif defined HAVE_OPENGL_GLU_H || defined HAVE_FRAMEWORK_OPENGL
 #include <OpenGL/glu.h>
@@ -1507,17 +1507,17 @@ dnl
 dnl Check to see if the compiler and the linker can handle the flags
 dnl "-framework $1" for the given prologue $2 and the given body $3 of
 dnl a source file.  Arguments 2 and 3 optionally can also be empty.
 dnl Add options (lower case letters $1) "--with-framework-$1" and
 dnl "--without-framework-$1". If this test is successful then perform
 dnl $4, otherwise do $5.
 dnl
 dnl OCTAVE_HAVE_FRAMEWORK
-AC_DEFUN(OCTAVE_HAVE_FRAMEWORK, [
+AC_DEFUN([OCTAVE_HAVE_FRAMEWORK], [
   AC_MSG_CHECKING(whether ${LD-ld} accepts -framework $1)
   AC_CACHE_VAL(octave_cv_framework_$1, [
     XLDFLAGS="$LDFLAGS"
     LDFLAGS="$LDFLAGS -framework $1"
     AC_LANG_PUSH(C++)
     AC_LINK_IFELSE([AC_LANG_PROGRAM([$2], [$3])],
       eval "octave_cv_framework_$1=yes",
       eval "octave_cv_framework_$1=no")
@@ -1540,17 +1540,17 @@ AC_DEFUN(OCTAVE_HAVE_FRAMEWORK, [
     AC_MSG_RESULT(no)
     [$5]
   fi
 ])
 dnl
 dnl Do we have a working c99 vsnprintf function?
 dnl
 dnl OCTAVE_HAVE_C99_VSNPRINTF
-AC_DEFUN(OCTAVE_HAVE_C99_VSNPRINTF, [
+AC_DEFUN([OCTAVE_HAVE_C99_VSNPRINTF], [
   AC_CACHE_CHECK([for c99 vsnprintf], [oct_cv_c99_vsnprintf],
     [AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>
 #include <stdarg.h>
 #include <stdlib.h>
 
 int
 doit(char * s, ...)
 {
