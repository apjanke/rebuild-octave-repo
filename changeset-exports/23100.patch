# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1485526677 18000
#      Fri Jan 27 09:17:57 2017 -0500
# Node ID a40e586b66bad0821fde93fa2c1f2f37f3c965df
# Parent  d44537a50f4b7ea127472aa4fbd54612d84e5a7b
eliminate global variable reading_startup_message_printed

* parse.h, oct-parse.in.yy (reading_startup_message_printed):
Delete global variable and all uses.
* interpreter.cc (interpreter::execute_internal): Use verbose option
flag instead of reading_startup_message_printed to decide whether to
display newline after reading startup files.

diff --git a/libinterp/corefcn/interpreter.cc b/libinterp/corefcn/interpreter.cc
--- a/libinterp/corefcn/interpreter.cc
+++ b/libinterp/corefcn/interpreter.cc
@@ -680,17 +680,17 @@ namespace octave
                                         options.read_init_files (),
                                         options.verbose_flag (),
                                         options.inhibit_startup_message ());
 
     if (status)
       exit_status = status;
 
     if (m_interactive && ! options.inhibit_startup_message ()
-        && reading_startup_message_printed)
+        && options.verbose_flag ())
       std::cout << std::endl;
 
     // Execute any code specified with --eval 'CODE'
     std::string code_to_eval = options.code_to_eval ();
 
     if (! code_to_eval.empty ())
       {
         status = execute_eval_option_code (code_to_eval);
diff --git a/libinterp/parse-tree/oct-parse.in.yy b/libinterp/parse-tree/oct-parse.in.yy
--- a/libinterp/parse-tree/oct-parse.in.yy
+++ b/libinterp/parse-tree/oct-parse.in.yy
@@ -85,19 +85,16 @@ along with Octave; see the file COPYING.
 #include <oct-parse.h>
 
 extern int octave_lex (YYSTYPE *, void *);
 
 // Global access to currently active lexer.
 // FIXME: to be removed after more parser+lexer refactoring.
 octave::base_lexer *LEXER = 0;
 
-// TRUE means we printed messages about reading startup files.
-bool reading_startup_message_printed = false;
-
 // List of autoloads (function -> file mapping).
 static std::map<std::string, std::string> autoload_map;
 
 // Forward declarations for some functions defined at the bottom of
 // the file.
 
 static void yyerror (octave::base_parser& parser, const char *s);
 
@@ -4759,17 +4756,16 @@ namespace octave
       }
 
     // Parameter checking is over.  Now run.
     octave_value_list args;
 
     if (verbose)
       {
         std::cout << "executing commands from " << full_name << " ... ";
-        reading_startup_message_printed = true;
         std::cout.flush ();
       }
 
     fcn->do_multi_index_op (0, args);
 
     if (verbose)
       std::cout << "done." << std::endl;
 
diff --git a/libinterp/parse-tree/parse.h b/libinterp/parse-tree/parse.h
--- a/libinterp/parse-tree/parse.h
+++ b/libinterp/parse-tree/parse.h
@@ -85,19 +85,16 @@ namespace octave
   class tree_switch_command;
 }
 
 #include "ovl.h"
 
 // Nonzero means print parser debugging info (-d).
 extern int octave_debug;
 
-// TRUE means we printed messages about reading startup files.
-extern bool reading_startup_message_printed;
-
 namespace octave
 {
   // Global access to currently active lexer.
   // FIXME: to be removed after more parser+lexer refactoring.
   extern base_lexer *LEXER;
 
   class
   base_parser
