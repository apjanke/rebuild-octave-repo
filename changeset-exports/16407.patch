# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1364843963 -7200
#      Mon Apr 01 21:19:23 2013 +0200
# Node ID 4d438dffbfac83af2d8f73b1f37901f1761b1510
# Parent  7779d99473664e71e59b5e51b6b8b2314de0c2d7
gui: call external editor when opening a file and custom editor is selected

* file-editor.cc(request_open_file): call custom editor if desired
* settings-dialog.ui: custom editor command with %f and %l for file and line

diff --git a/libgui/src/m-editor/file-editor.cc b/libgui/src/m-editor/file-editor.cc
--- a/libgui/src/m-editor/file-editor.cc
+++ b/libgui/src/m-editor/file-editor.cc
@@ -31,16 +31,17 @@ along with Octave; see the file COPYING.
 #include <QVBoxLayout>
 #include <QApplication>
 #include <QFile>
 #include <QFont>
 #include <QFileDialog>
 #include <QMessageBox>
 #include <QStyle>
 #include <QTextStream>
+#include <QProcess>
 
 #include "octave-link.h"
 
 file_editor::file_editor (QWidget *p)
   : file_editor_interface (p)
 {
   // Set current editing directory before construct because loaded
   // files will change ced accordingly.
@@ -146,16 +147,29 @@ file_editor::request_open_file ()
   fileDialog->show ();
 }
 
 void
 file_editor::request_open_file (const QString& openFileName, int line,
                                 bool debug_pointer,
                                 bool dbstop_marker, bool insert)
 {
+  // Check if the user wants to use a custom file editor.
+  QSettings *settings = resource_manager::get_settings ();
+  if (settings->value ("useCustomFileEditor").toBool ())
+    {
+      QString editor = settings->value ("customFileEditor").toString ();
+      editor.replace ("%f",openFileName);
+      editor.replace ("%l",QString::number (line));
+      QProcess::startDetached (editor);
+      if (line < 0)
+        handle_mru_add_file(QDir::cleanPath (openFileName));
+      return;
+    }
+
   if (openFileName.isEmpty ())
     {
       // ??  Not sure this will happen.  This routine isn't even called
       // if the user hasn't selected a file.
     }
   else
     {
       // Have all file editor tabs signal what their file names are.
diff --git a/libgui/src/settings-dialog.ui b/libgui/src/settings-dialog.ui
--- a/libgui/src/settings-dialog.ui
+++ b/libgui/src/settings-dialog.ui
@@ -217,24 +217,34 @@
           <size>
            <width>20</width>
            <height>40</height>
           </size>
          </property>
         </spacer>
        </item>
        <item>
+        <widget class="QCheckBox" name="useCustomFileEditor">
+         <property name="enabled">
+          <bool>true</bool>
+         </property>
+         <property name="text">
+          <string>Use custom file editor</string>
+         </property>
+        </widget>
+       </item>
+       <item>
         <layout class="QHBoxLayout" name="horizontalLayout">
          <item>
-          <widget class="QCheckBox" name="useCustomFileEditor">
+          <widget class="QLabel" name="customEditorLabel">
            <property name="enabled">
-            <bool>true</bool>
+            <bool>false</bool>
            </property>
            <property name="text">
-            <string>Use custom file editor:</string>
+            <string>Command  line (%f=file, %l=line):</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QLineEdit" name="customFileEditor">
            <property name="enabled">
             <bool>false</bool>
            </property>
@@ -781,10 +791,26 @@
      <y>366</y>
     </hint>
     <hint type="destinationlabel">
      <x>299</x>
      <y>199</y>
     </hint>
    </hints>
   </connection>
+  <connection>
+   <sender>useCustomFileEditor</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>customEditorLabel</receiver>
+   <slot>setEnabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel">
+     <x>349</x>
+     <y>383</y>
+    </hint>
+    <hint type="destinationlabel">
+     <x>111</x>
+     <y>413</y>
+    </hint>
+   </hints>
+  </connection>
  </connections>
 </ui>
