# HG changeset patch
# User Max Brister <max@2bass.com>
# Date 1342812607 18000
#      Fri Jul 20 14:30:07 2012 -0500
# Node ID bbc825cb2ea0ce6c1ad2383c12111e5ec19bc1a6
# Parent  06f2e9bdade63262c266480e59b4f76a79b8b45d
Use -I instead of -isystem if -isystem is not avaiable

* configure.ac: Do check for -isystem before using it with llvm

* m4/acinclude.m4 (OCTAVE_CC_FLAG): Allow spaces in flag

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -732,40 +732,44 @@ AS_IF([test "x$enable_jit_debug" = "xyes
   AC_DEFINE(OCTAVE_JIT_DEBUG, 1, [Define for jit debug printing])
 ])
 
 LLVM_CXXFLAGS=
 LLVM_CPPFLAGS=
 LLVM_LDFLAGS=
 LLVM_LIBS=
 
-dnl llvm-config is messed up
-if  test -n "$LLVM_CONFIG"; then
+if test "x$ac_cv_env_LLVM_CONFIG_set" = "xset"; then
+  # We use -isystem if avaiable because we do not want to see warnings in llvm
+  LLVM_INCLUDE_FLAG=-I
+  OCTAVE_CC_FLAG(-isystem ., [
+    LLVM_INCLUDE_FLAG=-isystem
+    AC_MSG_NOTICE([using -isystem for llvm headers])])
+
   LLVM_LDFLAGS="-L`$LLVM_CONFIG --libdir`"
   LLVM_LIBS=`$LLVM_CONFIG --libs`
   dnl Use -isystem so we don't get warnings from llvm headers
-  LLVM_CPPFLAGS="-isystem `$LLVM_CONFIG --includedir`"
+  LLVM_CPPFLAGS="$LLVM_INCLUDE_FLAG `$LLVM_CONFIG --includedir`"
   LLVM_CXXFLAGS=
-fi
+
+  save_CPPFLAGS="$CPPFLAGS"
+  save_CXXFLAGS="$CXXFLAGS"
+  save_LIBS="$LIBS"
+  save_LDFLAGS="$LDFLAGS"
 
-save_CPPFLAGS="$CPPFLAGS"
-save_CXXFLAGS="$CXXFLAGS"
-save_LIBS="$LIBS"
-save_LDFLAGS="$LDFLAGS"
-dnl
-dnl We define some extra flags that llvm requires in order to include headers.
-dnl Idealy we should get these from llvm-config, but llvm-config isn't very
-dnl helpful.
-dnl
-CPPFLAGS="-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS"
-CXXFLAGS="$LLVM_CXXFLAGS $CXXFLAGS"
-LIBS="$LLVM_LIBS $LIBS"
-LDFLAGS="$LLVM_LDFLAGS $LDFLAGS"
+  dnl
+  dnl We define some extra flags that llvm requires in order to include headers.
+  dnl Idealy we should get these from llvm-config, but llvm-config isn't very
+  dnl helpful.
+  dnl
+  CPPFLAGS="-D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS $LLVM_CPPFLAGS $CPPFLAGS"
+  CXXFLAGS="$LLVM_CXXFLAGS $CXXFLAGS"
+  LIBS="$LLVM_LIBS $LIBS"
+  LDFLAGS="$LLVM_LDFLAGS $LDFLAGS"
 
-if test "x$ac_cv_env_LLVM_CONFIG_set" = "xset"; then
   AC_LANG_PUSH(C++)
     AC_CHECK_HEADER([llvm/LLVMContext.h], [
       AC_MSG_CHECKING([for llvm::getGlobalContext in llvm/LLVMContext.h])
         AC_COMPILE_IFELSE(
           [AC_LANG_PROGRAM([[#include <llvm/LLVMContext.h>]],
                            [[llvm::LLVMContext& ctx = llvm::getGlobalContext ();]])],
           [
            AC_MSG_RESULT([yes])
diff --git a/m4/acinclude.m4 b/m4/acinclude.m4
--- a/m4/acinclude.m4
+++ b/m4/acinclude.m4
@@ -281,17 +281,17 @@ EOB
 dnl
 dnl Check to see if C compiler handles FLAG command line option.  If
 dnl two arguments are specified, execute the second arg as shell
 dnl commands.  Otherwise, add FLAG to CFLAGS if the compiler accepts
 dnl the flag.
 dnl
 dnl OCTAVE_CC_FLAG
 AC_DEFUN([OCTAVE_CC_FLAG], [
-  ac_safe=`echo "$1" | sed 'y%./+-:=%__p___%'`
+  ac_safe=`echo "$1" | sed 'y% ./+-:=%___p___%'`
   AC_MSG_CHECKING([whether ${CC-cc} accepts $1])
   AC_CACHE_VAL(octave_cv_cc_flag_$ac_safe, [
     AC_LANG_PUSH(C)
     XCFLAGS="$CFLAGS"
     CFLAGS="$CFLAGS $1"
     AC_LINK_IFELSE([AC_LANG_PROGRAM([], [])],
       eval "octave_cv_cc_flag_$ac_safe=yes",
       eval "octave_cv_cc_flag_$ac_safe=no")
