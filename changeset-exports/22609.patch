# HG changeset patch
# User Rik <rik@octave.org>
# Date 1476129658 25200
#      Mon Oct 10 13:00:58 2016 -0700
# Node ID dc872d5d74c53481fd68ec107d616e5447120ac8
# Parent  54332b6ddeb6d8edcf9b0e98ac1e036af5108b8b
residue.m: Remove code that filters out small return values (bug #34266, bug #49291).

* residue.m (rresidue): Delete code that filters out coefficients that are small relative to the eps of the largest coefficient.  Correct BIST tests for new behavior.
Add new BIST test from bug #49291.

diff --git a/scripts/polynomial/residue.m b/scripts/polynomial/residue.m
--- a/scripts/polynomial/residue.m
+++ b/scripts/polynomial/residue.m
@@ -328,31 +328,20 @@ function [pnum, pden, e] = rresidue (r, 
       endif
     endfor
     pn = deconv (pden, pm);
     pn = r(n) * pn;
     pnum += prepad (pn, N+1, 0, 2);
   endfor
 
   ## Add the direct term.
-
   if (numel (k))
     pnum += conv (pden, k);
   endif
 
-  ## Check for leading zeros and trim the polynomial coefficients.
-  if (isa (r, "single") || isa (p, "single") || isa (k, "single"))
-    small = max ([max(abs(pden)), max(abs(pnum)), 1]) * eps ("single");
-  else
-    small = max ([max(abs(pden)), max(abs(pnum)), 1]) * eps;
-  endif
-
-  pnum(abs (pnum) < small) = 0;
-  pden(abs (pden) < small) = 0;
-
   pnum = polyreduce (pnum);
   pden = polyreduce (pden);
 
 endfunction
 
 
 %!test
 %! b = [1, 1, 1];
@@ -378,17 +367,17 @@ endfunction
 %! [r, p, k, e] = residue (b, a);
 %! r1 = [-5i; 12; +5i; 12]/54;
 %! p1 = [+3i; +3i; -3i; -3i];
 %! assert (r, r1, 1e-12);
 %! assert (p, p1, 1e-12);
 %! assert (isempty (k));
 %! assert (e, [1; 2; 1; 2]);
 %! [br, ar] = residue (r, p, k);
-%! assert (br, b, 1e-12);
+%! assert (br, [0,b], 1e-12);
 %! assert (ar, a, 1e-12);
 
 %!test
 %! r = [7; 3; -2];
 %! p = [2; 1; 2];
 %! k = [1 0];
 %! e = [2; 1; 1];
 %! [b, a] = residue (r, p, k, e);
@@ -426,11 +415,19 @@ endfunction
 %! r4 = z1/p2/p1;
 %! r = [r1; r2; r3; r4];
 %! p = [p1; p2; 0; 0];
 %! k = [];
 %! e = [1; 1; 1; 2];
 %! b = [1, z1];
 %! a = [1, -(p1 + p2), p1*p2, 0, 0];
 %! [br, ar] = residue (r, p, k, e);
-%! assert (br, b, 1e-8);
+%! assert (br, [0,0,b], 1e-7);
 %! assert (ar, a, 1e-8);
 
+%!test <49291>
+%! rf = [1e3, 2e3, 1e3, 2e3];
+%! cf = [316.2e-9, 50e-9, 31.6e-9, 5e-9];
+%! [num, den] = residue (1./cf,-1./(rf.*cf),0);
+%! assert (numel (num), 4);
+%! assert (numel (den), 5);
+%! assert (den(1), 1);
+
