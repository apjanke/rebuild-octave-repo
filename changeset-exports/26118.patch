# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1542830062 18000
#      Wed Nov 21 14:54:22 2018 -0500
# Node ID 7502fce4cd3abc0835996d1d949b7a950f0c56f7
# Parent  a6df420457ac7973ea3a4074bd830e42647e9613
str2func: eliminate optional second "global" argument

* ov-fcn-handle.cc (Fstr2func): Ignore second argument.  Don't omit
local functions in search.
* NEWS: Note change.
* fminbnd.m, fminunc.m, fsolve.m, fzero.m: Don't pass "global" to strfunc.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -102,16 +102,23 @@ Summary of important user-visible change
 
  ** The OSMesa library is no longer used.  To print invisible figures
     when using OpenGL graphics, the Qt QOFFSCREENSURFACE feature must be
     available and you must use the qt graphics toolkit.
 
  ** It is now possible to use files and folders containing Unicode
     characters in Windows.
 
+ ** The str2func function no longer accepts a second "global" argument.
+    This argument was typically used to allow functions that accept
+    function names as arguments to avoid conflicts with subfunctions or
+    nested functions.  Instead, it's best to avoid this situation
+    entirely and require users to pass function handles rather than
+    function names.
+
  ** New functions added in 5.0:
 
       isfile
       isfolder
       movegui
       openfig
       ordeig
       savefig
diff --git a/libinterp/octave-value/ov-fcn-handle.cc b/libinterp/octave-value/ov-fcn-handle.cc
--- a/libinterp/octave-value/ov-fcn-handle.cc
+++ b/libinterp/octave-value/ov-fcn-handle.cc
@@ -1848,21 +1848,21 @@ function handle @var{fcn_handle}.
     retval = fh_nm;
 
   return retval;
 }
 
 DEFMETHOD (str2func, interp, args, ,
            doc: /* -*- texinfo -*-
 @deftypefn  {} {} str2func (@var{fcn_name})
-@deftypefnx {} {} str2func (@var{fcn_name}, "global")
 Return a function handle constructed from the string @var{fcn_name}.
 
-If the optional @qcode{"global"} argument is passed, locally visible
-functions are ignored in the lookup.
+Previous versions of Octave accepted an optional second argument,
+@qcode{"global"}, that caused str2func to ignore locally visible
+functions.  This option is no longer supported.
 @seealso{func2str, inline, functions}
 @end deftypefn */)
 {
   int nargin = args.length ();
 
   if (nargin < 1 || nargin > 2)
     print_usage ();
 
@@ -1875,17 +1875,23 @@ functions are ignored in the lookup.
       int parse_status;
       octave_value anon_fcn_handle
         = interp.eval_string (nm, true, parse_status);
 
       if (parse_status == 0)
         retval = anon_fcn_handle;
     }
   else
-    retval = make_fcn_handle (nm, nargin != 2);
+    {
+      if (nargin == 2)
+        warning_with_id ("Octave:str2func-global-argument",
+                         "str2func: second argument ignored");
+
+      retval = make_fcn_handle (nm, true);
+    }
 
   return retval;
 }
 
 /*
 %!test
 %! f = str2func ("<");
 %! assert (class (f), "function_handle");
diff --git a/scripts/optimization/fminbnd.m b/scripts/optimization/fminbnd.m
--- a/scripts/optimization/fminbnd.m
+++ b/scripts/optimization/fminbnd.m
@@ -96,17 +96,17 @@ function [x, fval, info, output] = fminb
   endif
 
   if (a > b)
     error ("Octave:invalid-input-arg",
            "fminbnd: the lower bound cannot be greater than the upper one");
   endif
 
   if (ischar (fun))
-    fun = str2func (fun, "global");
+    fun = str2func (fun);
   endif
 
   displ = optimget (options, "Display", "notify");
   funvalchk = strcmpi (optimget (options, "FunValCheck", "off"), "on");
   outfcn = optimget (options, "OutputFcn");
   tolx = optimget (options, "TolX", 1e-4);
   maxiter = optimget (options, "MaxIter", 500);
   maxfev = optimget (options, "MaxFunEvals", 500);
diff --git a/scripts/optimization/fminunc.m b/scripts/optimization/fminunc.m
--- a/scripts/optimization/fminunc.m
+++ b/scripts/optimization/fminunc.m
@@ -106,17 +106,17 @@ function [x, fval, info, output, grad, h
     return;
   endif
 
   if (nargin < 2 || nargin > 3 || ! isnumeric (x0))
     print_usage ();
   endif
 
   if (ischar (fcn))
-    fcn = str2func (fcn, "global");
+    fcn = str2func (fcn);
   endif
 
   xsz = size (x0);
   n = numel (x0);
 
   has_grad = strcmpi (optimget (options, "GradObj", "off"), "on");
   cdif = strcmpi (optimget (options, "FinDiffType", "central"), "central");
   maxiter = optimget (options, "MaxIter", 400);
diff --git a/scripts/optimization/fsolve.m b/scripts/optimization/fsolve.m
--- a/scripts/optimization/fsolve.m
+++ b/scripts/optimization/fsolve.m
@@ -180,17 +180,17 @@ function [x, fval, info, output, fjac] =
     return;
   endif
 
   if (nargin < 2 || nargin > 3 || ! isnumeric (x0))
     print_usage ();
   endif
 
   if (ischar (fcn))
-    fcn = str2func (fcn, "global");
+    fcn = str2func (fcn);
   elseif (iscell (fcn))
     fcn = @(x) make_fcn_jac (x, fcn{1}, fcn{2});
   endif
 
   xsiz = size (x0);
   n = numel (x0);
 
   has_jac = strcmpi (optimget (options, "Jacobian", "off"), "on");
diff --git a/scripts/optimization/fzero.m b/scripts/optimization/fzero.m
--- a/scripts/optimization/fzero.m
+++ b/scripts/optimization/fzero.m
@@ -129,17 +129,17 @@ function [x, fval, info, output] = fzero
     return;
   endif
 
   if (nargin < 2 || nargin > 3)
     print_usage ();
   endif
 
   if (ischar (fun))
-    fun = str2func (fun, "global");
+    fun = str2func (fun);
   endif
 
   ## FIXME: Display is not yet implemented
   ## displev = optimget (options, "Display", "notify");
   funvalchk = strcmpi (optimget (options, "FunValCheck", "off"), "on");
   maxfev = optimget (options, "MaxFunEvals", Inf);
   maxiter = optimget (options, "MaxIter", Inf);
   outfcn = optimget (options, "OutputFcn");
