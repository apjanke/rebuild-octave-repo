# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1331945442 25200
#      Fri Mar 16 17:50:42 2012 -0700
# Node ID 05b59be209ed5f2076040c53416d62e90a137e52
# Parent  ae835555ab58b41d688306cc86b97a64d4204220
doc: grammarcheck new pkg/private functions

* absolute_pathname.m, build.m, configure_make.m, copy_files.m,
create_pkgadddel.m, describe.m, dirempty.m, extract_pkg.m,
finish_installation.m, fix_depends.m, fix_version.m, generate_lookfor_cache.m,
get_description.m, get_forge_download.m, get_unsatisfied_deps.m, getarch.m,
getarchdir.m, getarchprefix.m, install.m, installed_packages.m,
is_architecture_dependent.m, list_forge_packages.m, load_package_dirs.m,
load_packages.m, load_packages_and_dependencies.m, packinfo_copy_file.m,
parse_pkg_idx.m, prepare_installation.m, print_package_description.m,
rebuild.m, repackage.m, save_order.m, shell.m, uninstall.m, unload_packages.m,
verify_directory.m, write_index.m: grammarcheck new pkg/private functions

diff --git a/scripts/pkg/private/absolute_pathname.m b/scripts/pkg/private/absolute_pathname.m
--- a/scripts/pkg/private/absolute_pathname.m
+++ b/scripts/pkg/private/absolute_pathname.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{pth} =} absolute_pathname (@var{pth})
+## @deftypefn {Function File} {@var{pth} =} absolute_pathname (@var{pth})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function pth = absolute_pathname (pth)
   [status, msg, msgid] = fileattrib (pth);
   if (status != 1)
     error ("could not find the file or path %s", pth);
   else
diff --git a/scripts/pkg/private/build.m b/scripts/pkg/private/build.m
--- a/scripts/pkg/private/build.m
+++ b/scripts/pkg/private/build.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} build (@var{files}, @var{handle_deps}, @var{autoload}, @var{verbose})
+## @deftypefn {Function File} {} build (@var{files}, @var{handle_deps}, @var{autoload}, @var{verbose})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function build (files, handle_deps, autoload, verbose)
   if (length (files) < 1)
     error ("insufficient number of files");
   endif
   builddir = files{1};
diff --git a/scripts/pkg/private/configure_make.m b/scripts/pkg/private/configure_make.m
--- a/scripts/pkg/private/configure_make.m
+++ b/scripts/pkg/private/configure_make.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} configure_make (@var{desc}, @var{packdir}, @var{verbose})
+## @deftypefn {Function File} {} configure_make (@var{desc}, @var{packdir}, @var{verbose})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function configure_make (desc, packdir, verbose)
   ## Perform ./configure, make, make install in "src".
   if (exist (fullfile (packdir, "src"), "dir"))
     src = fullfile (packdir, "src");
     octave_bindir = octave_config_info ("bindir");
diff --git a/scripts/pkg/private/copy_files.m b/scripts/pkg/private/copy_files.m
--- a/scripts/pkg/private/copy_files.m
+++ b/scripts/pkg/private/copy_files.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} copy_files (@var{desc}, @var{packdir}, @var{global_install})
+## @deftypefn {Function File} {} copy_files (@var{desc}, @var{packdir}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function copy_files (desc, packdir, global_install)
   ## Create the installation directory.
   if (! exist (desc.dir, "dir"))
     [status, output] = mkdir (desc.dir);
     if (status != 1)
diff --git a/scripts/pkg/private/create_pkgadddel.m b/scripts/pkg/private/create_pkgadddel.m
--- a/scripts/pkg/private/create_pkgadddel.m
+++ b/scripts/pkg/private/create_pkgadddel.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} create_pkgadddel (@var{desc}, @var{packdir}, @var{nm}, @var{global_install})
+## @deftypefn {Function File} {} create_pkgadddel (@var{desc}, @var{packdir}, @var{nm}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function create_pkgadddel (desc, packdir, nm, global_install)
   instpkg = fullfile (desc.dir, nm);
   instfid = fopen (instpkg, "wt");
   ## If it is exists, most of the  PKG_* file should go into the
   ## architecture dependent directory so that the autoload/mfilename
diff --git a/scripts/pkg/private/describe.m b/scripts/pkg/private/describe.m
--- a/scripts/pkg/private/describe.m
+++ b/scripts/pkg/private/describe.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {[@var{pkg_desc_list}, @var{flag}] =} describe (@var{pkgnames}, @var{verbose}, @var{local_list}, @var{global_list})
+## @deftypefn {Function File} {[@var{pkg_desc_list}, @var{flag}] =} describe (@var{pkgnames}, @var{verbose}, @var{local_list}, @var{global_list})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [pkg_desc_list, flag] = describe (pkgnames, verbose,
                                            local_list, global_list)
 
   ## Get the list of installed packages.
   installed_pkgs_lst = installed_packages(local_list, global_list);
diff --git a/scripts/pkg/private/dirempty.m b/scripts/pkg/private/dirempty.m
--- a/scripts/pkg/private/dirempty.m
+++ b/scripts/pkg/private/dirempty.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{emp} =} dirempty (@var{nm}, @var{ign})
+## @deftypefn {Function File} {@var{emp} =} dirempty (@var{nm}, @var{ign})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function emp = dirempty (nm, ign)
   if (exist (nm, "dir"))
     if (nargin < 2)
       ign = {".", ".."};
     else
diff --git a/scripts/pkg/private/extract_pkg.m b/scripts/pkg/private/extract_pkg.m
--- a/scripts/pkg/private/extract_pkg.m
+++ b/scripts/pkg/private/extract_pkg.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{pkg} =} extract_pkg (@var{nm}, @var{pat})
+## @deftypefn {Function File} {@var{pkg} =} extract_pkg (@var{nm}, @var{pat})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function pkg = extract_pkg (nm, pat)
   fid = fopen (nm, "rt");
   pkg = "";
   if (fid >= 0)
     while (! feof (fid))
diff --git a/scripts/pkg/private/finish_installation.m b/scripts/pkg/private/finish_installation.m
--- a/scripts/pkg/private/finish_installation.m
+++ b/scripts/pkg/private/finish_installation.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} finish_installation (@var{desc}, @var{packdir}, @var{global_install})
+## @deftypefn {Function File} {} finish_installation (@var{desc}, @var{packdir}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function finish_installation (desc, packdir, global_install)
   ## Is there a post-install to call?
   if (exist (fullfile (packdir, "post_install.m"), "file"))
     wd = pwd ();
     try
diff --git a/scripts/pkg/private/fix_depends.m b/scripts/pkg/private/fix_depends.m
--- a/scripts/pkg/private/fix_depends.m
+++ b/scripts/pkg/private/fix_depends.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{deps_cell} =} fix_depends (@var{depends})
+## @deftypefn {Function File} {@var{deps_cell} =} fix_depends (@var{depends})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Make sure the depends field is of the right format.
 ## This function returns a cell of structures with the following fields:
 ##   package, version, operator
 function deps_cell = fix_depends (depends)
   deps = strtrim (strsplit (tolower (depends), ","));
diff --git a/scripts/pkg/private/fix_version.m b/scripts/pkg/private/fix_version.m
--- a/scripts/pkg/private/fix_version.m
+++ b/scripts/pkg/private/fix_version.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{out} =} fix_version (@var{v})
+## @deftypefn {Function File} {@var{out} =} fix_version (@var{v})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Make sure the version string v is a valid x.y.z version string
 ## Examples: "0.1" => "0.1.0", "monkey" => error(...).
 function out = fix_version (v)
   dots = find (v == ".");
   if (length (dots) == 1)
diff --git a/scripts/pkg/private/generate_lookfor_cache.m b/scripts/pkg/private/generate_lookfor_cache.m
--- a/scripts/pkg/private/generate_lookfor_cache.m
+++ b/scripts/pkg/private/generate_lookfor_cache.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} generate_lookfor_cache (@var{desc})
+## @deftypefn {Function File} {} generate_lookfor_cache (@var{desc})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function generate_lookfor_cache (desc)
   dirs = strtrim (strsplit (genpath (desc.dir), pathsep ()));
   for i = 1 : length (dirs)
     gen_doc_cache (fullfile (dirs{i}, "doc-cache"), dirs{i});
   endfor
diff --git a/scripts/pkg/private/get_description.m b/scripts/pkg/private/get_description.m
--- a/scripts/pkg/private/get_description.m
+++ b/scripts/pkg/private/get_description.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{desc} =} get_description (@var{filename})
+## @deftypefn {Function File} {@var{desc} =} get_description (@var{filename})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Parse the DESCRIPTION file.
 function desc = get_description (filename)
   [fid, msg] = fopen (filename, "r");
   if (fid == -1)
     error ("the DESCRIPTION file %s could not be read: %s", filename, msg);
diff --git a/scripts/pkg/private/get_forge_download.m b/scripts/pkg/private/get_forge_download.m
--- a/scripts/pkg/private/get_forge_download.m
+++ b/scripts/pkg/private/get_forge_download.m
@@ -13,16 +13,16 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {[@var{url}, @var{local_file}] =} list_forge_packages ()
+## @deftypefn {Function File} {[@var{url}, @var{local_file}] =} list_forge_packages ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [url, local_file] = get_forge_download (name)
   [ver, url] = get_forge_pkg (name);
   local_file = [name, "-", ver, ".tar.gz"];
 endfunction
diff --git a/scripts/pkg/private/get_unsatisfied_deps.m b/scripts/pkg/private/get_unsatisfied_deps.m
--- a/scripts/pkg/private/get_unsatisfied_deps.m
+++ b/scripts/pkg/private/get_unsatisfied_deps.m
@@ -13,18 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{bad_deps} =} get_unsatisfied_deps (@var{desc},@
-## @var{installed_pkgs_lst})
+## @deftypefn {Function File} {@var{bad_deps} =} get_unsatisfied_deps (@var{desc},@var{installed_pkgs_lst})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function bad_deps = get_unsatisfied_deps (desc, installed_pkgs_lst)
   bad_deps = {};
 
   ## For each dependency.
   for i = 1:length (desc.depends)
diff --git a/scripts/pkg/private/getarch.m b/scripts/pkg/private/getarch.m
--- a/scripts/pkg/private/getarch.m
+++ b/scripts/pkg/private/getarch.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{arch} =} getarch ()
+## @deftypefn {Function File} {@var{arch} =} getarch ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 function arch = getarch ()
   persistent _arch = cstrcat (octave_config_info ("canonical_host_type"),
                               "-", octave_config_info ("api_version"));
   arch = _arch;
 endfunction
diff --git a/scripts/pkg/private/getarchdir.m b/scripts/pkg/private/getarchdir.m
--- a/scripts/pkg/private/getarchdir.m
+++ b/scripts/pkg/private/getarchdir.m
@@ -13,16 +13,16 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{archdir} =} getarchdir (@var{desc})
+## @deftypefn {Function File} {@var{archdir} =} getarchdir (@var{desc})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function archdir = getarchdir (desc)
   archdir = fullfile (desc.archprefix, getarch());
 endfunction
 
diff --git a/scripts/pkg/private/getarchprefix.m b/scripts/pkg/private/getarchprefix.m
--- a/scripts/pkg/private/getarchprefix.m
+++ b/scripts/pkg/private/getarchprefix.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {[@var{archprefix} =} getarchprefix (@var{desc}, @var{global_install})
+## @deftypefn {Function File} {[@var{archprefix} =} getarchprefix (@var{desc}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function archprefix = getarchprefix (desc, global_install)
   if (global_install)
     archprefix = fullfile (octave_config_info ("libdir"), "octave",
                            "packages", cstrcat (desc.name, "-", desc.version));
   else
diff --git a/scripts/pkg/private/install.m b/scripts/pkg/private/install.m
--- a/scripts/pkg/private/install.m
+++ b/scripts/pkg/private/install.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} install (@var{files}, @var{handle_deps}, @var{autoload}, @var{prefix}, @var{archprefix}, @var{verbose}, @var{local_list}, @var{global_list}, @var{global_install})
+## @deftypefn {Function File} {} install (@var{files}, @var{handle_deps}, @var{autoload}, @var{prefix}, @var{archprefix}, @var{verbose}, @var{local_list}, @var{global_list}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function install (files, handle_deps, autoload, prefix, archprefix, verbose,
                   local_list, global_list, global_install)
 
   ## Check that the directory in prefix exist. If it doesn't: create it!
   if (! exist (prefix, "dir"))
diff --git a/scripts/pkg/private/installed_packages.m b/scripts/pkg/private/installed_packages.m
--- a/scripts/pkg/private/installed_packages.m
+++ b/scripts/pkg/private/installed_packages.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {[@var{out1}, @var{out2}] =} installed_packages (@var{local_list}, @var{global_list})
+## @deftypefn {Function File} {[@var{out1}, @var{out2}] =} installed_packages (@var{local_list}, @var{global_list})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [out1, out2] = installed_packages (local_list, global_list)
   ## Get the list of installed packages.
   try
     local_packages = load (local_list).local_packages;
   catch
diff --git a/scripts/pkg/private/is_architecture_dependent.m b/scripts/pkg/private/is_architecture_dependent.m
--- a/scripts/pkg/private/is_architecture_dependent.m
+++ b/scripts/pkg/private/is_architecture_dependent.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{dep} =} is_architecture_dependent (@var{nm})
+## @deftypefn {Function File} {@var{dep} =} is_architecture_dependent (@var{nm})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function dep = is_architecture_dependent (nm)
   persistent archdepsuffix = {".oct",".mex",".a",".lib",".so",".so.*",".dll","dylib"};
 
   dep = false;
   for i = 1 : length (archdepsuffix)
diff --git a/scripts/pkg/private/list_forge_packages.m b/scripts/pkg/private/list_forge_packages.m
--- a/scripts/pkg/private/list_forge_packages.m
+++ b/scripts/pkg/private/list_forge_packages.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{list} =} list_forge_packages ()
+## @deftypefn {Function File} {@var{list} =} list_forge_packages ()
 ## Undocumented internal function.
 ## @end deftypefn
 
 function list = list_forge_packages ()
   [list, succ] = urlread ("http://octave.sourceforge.net/list_packages.php");
   if (succ)
     list = strsplit (list, " \n\t", true);
   else
diff --git a/scripts/pkg/private/load_package_dirs.m b/scripts/pkg/private/load_package_dirs.m
--- a/scripts/pkg/private/load_package_dirs.m
+++ b/scripts/pkg/private/load_package_dirs.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{idx} = } load_package_dirs (@var{lidx}, @var{idx}, @var{handle_deps}, @var{installed_pkgs_lst})
+## @deftypefn {Function File} {@var{idx} =} load_package_dirs (@var{lidx}, @var{idx}, @var{handle_deps}, @var{installed_pkgs_lst})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function idx = load_package_dirs (lidx, idx, handle_deps, installed_pkgs_lst)
   for i = lidx
     if (isfield (installed_pkgs_lst{i}, "loaded")
         && installed_pkgs_lst{i}.loaded)
       continue;
diff --git a/scripts/pkg/private/load_packages.m b/scripts/pkg/private/load_packages.m
--- a/scripts/pkg/private/load_packages.m
+++ b/scripts/pkg/private/load_packages.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} load_packages (@var{files}, @var{handle_deps}, @var{local_list}, @var{global_list})
+## @deftypefn {Function File} {} load_packages (@var{files}, @var{handle_deps}, @var{local_list}, @var{global_list})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function load_packages (files, handle_deps, local_list, global_list)
   installed_pkgs_lst = installed_packages (local_list, global_list);
   num_packages = length (installed_pkgs_lst);
 
   ## Read package names and installdirs into a more convenient format.
diff --git a/scripts/pkg/private/load_packages_and_dependencies.m b/scripts/pkg/private/load_packages_and_dependencies.m
--- a/scripts/pkg/private/load_packages_and_dependencies.m
+++ b/scripts/pkg/private/load_packages_and_dependencies.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} load_packages_and_dependencies (@var{idx}, @var{handle_deps}, @var{installed_pkgs_lst}, @var{global_install})
+## @deftypefn {Function File} {} load_packages_and_dependencies (@var{idx}, @var{handle_deps}, @var{installed_pkgs_lst}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function load_packages_and_dependencies (idx, handle_deps, installed_pkgs_lst,
                                          global_install)
   idx = load_package_dirs (idx, [], handle_deps, installed_pkgs_lst);
   dirs = {};
   execpath = EXEC_PATH ();
diff --git a/scripts/pkg/private/packinfo_copy_file.m b/scripts/pkg/private/packinfo_copy_file.m
--- a/scripts/pkg/private/packinfo_copy_file.m
+++ b/scripts/pkg/private/packinfo_copy_file.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} packinfo_copy_file (@var{filename}, @var{requirement}, @var{packdir}, @var{packinfo}, @var{desc}, @var{octfiledir})
+## @deftypefn {Function File} {} packinfo_copy_file (@var{filename}, @var{requirement}, @var{packdir}, @var{packinfo}, @var{desc}, @var{octfiledir})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function packinfo_copy_file (filename, requirement, packdir, packinfo, desc, octfiledir)
   filepath = fullfile (packdir, filename);
   if (!exist (filepath, "file") && strcmpi (requirement, "optional"))
     ## do nothing, it's still OK
   else
diff --git a/scripts/pkg/private/parse_pkg_idx.m b/scripts/pkg/private/parse_pkg_idx.m
--- a/scripts/pkg/private/parse_pkg_idx.m
+++ b/scripts/pkg/private/parse_pkg_idx.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{pkg_idx_struct} =} parse_pkg_idx (@var{packdir})
+## @deftypefn {Function File} {@var{pkg_idx_struct} =} parse_pkg_idx (@var{packdir})
 ## Undocumented internal function.
 ## @end deftypefn
 
 
 ## Read an INDEX file.
 function pkg_idx_struct = parse_pkg_idx (packdir)
 
   index_file = fullfile (packdir, "packinfo", "INDEX");
diff --git a/scripts/pkg/private/prepare_installation.m b/scripts/pkg/private/prepare_installation.m
--- a/scripts/pkg/private/prepare_installation.m
+++ b/scripts/pkg/private/prepare_installation.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} prepare_installation (@var{desc}, @var{packdir})
+## @deftypefn {Function File} {} prepare_installation (@var{desc}, @var{packdir})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function prepare_installation (desc, packdir)
   ## Is there a pre_install to call?
   if (exist (fullfile (packdir, "pre_install.m"), "file"))
     wd = pwd ();
     try
diff --git a/scripts/pkg/private/print_package_description.m b/scripts/pkg/private/print_package_description.m
--- a/scripts/pkg/private/print_package_description.m
+++ b/scripts/pkg/private/print_package_description.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} print_package_description (@var{pkg_name}, @var{pkg_ver}, @var{pkg_idx_struct}, @var{pkg_desc}, @var{status}, @var{verbose})
+## @deftypefn {Function File} {} print_package_description (@var{pkg_name}, @var{pkg_ver}, @var{pkg_idx_struct}, @var{pkg_desc}, @var{status}, @var{verbose})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function print_package_description (pkg_name, pkg_ver, pkg_idx_struct,
                                     pkg_desc, status, verbose)
 
   printf ("---\nPackage name:\n\t%s\n", pkg_name);
   printf ("Version:\n\t%s\n", pkg_ver);
diff --git a/scripts/pkg/private/rebuild.m b/scripts/pkg/private/rebuild.m
--- a/scripts/pkg/private/rebuild.m
+++ b/scripts/pkg/private/rebuild.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{descriptions} =} rebuild (@var{prefix}, @var{archprefix}, @var{list}, @var{files}, @var{auto}, @var{verbose})
+## @deftypefn {Function File} {@var{descriptions} =} rebuild (@var{prefix}, @var{archprefix}, @var{list}, @var{files}, @var{auto}, @var{verbose})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function descriptions = rebuild (prefix, archprefix, list, files, auto, verbose)
   if (isempty (files))
     [dirlist, err, msg] = readdir (prefix);
     if (err)
       error ("couldn't read directory %s: %s", prefix, msg);
diff --git a/scripts/pkg/private/repackage.m b/scripts/pkg/private/repackage.m
--- a/scripts/pkg/private/repackage.m
+++ b/scripts/pkg/private/repackage.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} repackage (@var{builddir},@var{buildlist})
+## @deftypefn {Function File} {} repackage (@var{builddir}, @var{buildlist})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function repackage (builddir, buildlist)
   packages = installed_packages (buildlist, buildlist);
 
   wd = pwd();
   for i = 1 : length(packages)
diff --git a/scripts/pkg/private/save_order.m b/scripts/pkg/private/save_order.m
--- a/scripts/pkg/private/save_order.m
+++ b/scripts/pkg/private/save_order.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {@var{newdesc} =} save_order (@var{desc})
+## @deftypefn {Function File} {@var{newdesc} =} save_order (@var{desc})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function newdesc = save_order (desc)
   newdesc = {};
   for i = 1 : length(desc)
     deps = desc{i}.depends;
     if (isempty (deps)
diff --git a/scripts/pkg/private/shell.m b/scripts/pkg/private/shell.m
--- a/scripts/pkg/private/shell.m
+++ b/scripts/pkg/private/shell.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {[@var{status}, @var{output}] =} shell (@var{cmd})
+## @deftypefn {Function File} {[@var{status}, @var{output}] =} shell (@var{cmd})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function [status, output] = shell (cmd)
   persistent have_sh;
 
   cmd = strrep (cmd, "\\", "/");
   if (ispc () && ! isunix ())
diff --git a/scripts/pkg/private/uninstall.m b/scripts/pkg/private/uninstall.m
--- a/scripts/pkg/private/uninstall.m
+++ b/scripts/pkg/private/uninstall.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} uninstall (@var{pkgnames}, @var{handle_deps}, @var{verbose}, @var{local_list}, @var{global_list}, @var{global_install})
+## @deftypefn {Function File} {} uninstall (@var{pkgnames}, @var{handle_deps}, @var{verbose}, @var{local_list}, @var{global_list}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function uninstall (pkgnames, handle_deps, verbose, local_list,
                     global_list, global_install)
   ## Get the list of installed packages.
   [local_packages, global_packages] = installed_packages(local_list,
                                                          global_list);
diff --git a/scripts/pkg/private/unload_packages.m b/scripts/pkg/private/unload_packages.m
--- a/scripts/pkg/private/unload_packages.m
+++ b/scripts/pkg/private/unload_packages.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} unload_packages (@var{files}, @var{handle_deps}, @var{local_list}, @var{global_list})
+## @deftypefn {Function File} {} unload_packages (@var{files}, @var{handle_deps}, @var{local_list}, @var{global_list})
 ## Undocumented internal function.
 ## @end deftypefn
 
 function unload_packages (files, handle_deps, local_list, global_list)
   installed_pkgs_lst = installed_packages (local_list, global_list);
   num_packages = length (installed_pkgs_lst);
 
   ## Read package names and installdirs into a more convenient format.
diff --git a/scripts/pkg/private/verify_directory.m b/scripts/pkg/private/verify_directory.m
--- a/scripts/pkg/private/verify_directory.m
+++ b/scripts/pkg/private/verify_directory.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} verify_directory (@var{dir})
+## @deftypefn {Function File} {} verify_directory (@var{dir})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Make sure the package contains the essential files.
 function verify_directory (dir)
   needed_files = {"COPYING", "DESCRIPTION"};
   for f = needed_files
     if (! exist (fullfile (dir, f{1}), "file"))
diff --git a/scripts/pkg/private/write_index.m b/scripts/pkg/private/write_index.m
--- a/scripts/pkg/private/write_index.m
+++ b/scripts/pkg/private/write_index.m
@@ -13,17 +13,17 @@
 ## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 ## General Public License for more details.
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <http://www.gnu.org/licenses/>.
 
 ## -*- texinfo -*-
-## @deftypefn  {Function File} {} write_index (@var{desc}, @var{dir}, @var{index_file}, @var{global_install})
+## @deftypefn {Function File} {} write_index (@var{desc}, @var{dir}, @var{index_file}, @var{global_install})
 ## Undocumented internal function.
 ## @end deftypefn
 
 ## Create an INDEX file for a package that doesn't provide one.
 ##   'desc'  describes the package.
 ##   'dir'   is the 'inst' directory in temporary directory.
 ##   'index_file' is the name (including path) of resulting INDEX file.
 
