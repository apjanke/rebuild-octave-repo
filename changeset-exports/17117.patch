# HG changeset patch
# User Torsten <ttl@justmail.de>
# Date 1375298704 -7200
#      Wed Jul 31 21:25:04 2013 +0200
# Node ID 47b504503a3fd207f068361b7e7b1854a0b8a6b3
# Parent  59acfe9209dd425d412f6045efac240ac9cbfb2a
disable global paste action when clipboard is empty

* main_window.cc(constructor): initialize class variable for the clipboard,
  (construct_edit_menu): don't set shortcut for paste action here, add new
  menu for clearing the clipboard, connect the clipboard's change signal to
  the new slot clipboard_has_changed,
  (clipboard_has_changed): new slot enabling or disabling the paste and
  clear clipboard action when clipboard has changed
  (clear_clipboard): new slot for the clear clipboard action
* main_window.h: new slots clipboard-has_changed and clear_clipboard,
  new class variable _clipboard, new action _clear_clipboard

diff --git a/libgui/src/main-window.cc b/libgui/src/main-window.cc
--- a/libgui/src/main-window.cc
+++ b/libgui/src/main-window.cc
@@ -72,17 +72,18 @@ main_window::main_window (QWidget *p)
     command_window (new terminal_dock_widget (this)),
     history_window (new history_dock_widget (this)),
     file_browser_window (new files_dock_widget (this)),
     doc_browser_window (new documentation_dock_widget (this)),
     editor_window (create_default_editor (this)),
     workspace_window (new workspace_view (this)),
     find_files_dlg (0),
     _octave_main_thread (0),
-    _octave_qt_link (0)
+    _octave_qt_link (0),
+    _clipboard (QApplication::clipboard ())
 {
   // We have to set up all our windows, before we finally launch octave.
   construct ();
 }
 
 main_window::~main_window (void)
 {
   // Destroy the terminal first so that STDERR stream is redirected back
@@ -847,18 +848,16 @@ main_window::construct (void)
     win_y = 720;
 
   setGeometry (0, 0, win_x, win_y);
 
   setStatusBar (status_bar);
 
   construct_octave_qt_link ();
 
-  set_global_shortcuts (true);
-
 #ifdef HAVE_QSCINTILLA
   connect (this,
            SIGNAL (insert_debugger_pointer_signal (const QString&, int)),
            editor_window,
            SLOT (handle_insert_debugger_pointer_request (const QString&, int)));
 
   connect (this,
            SIGNAL (delete_debugger_pointer_signal (const QString&, int)),
@@ -870,16 +869,19 @@ main_window::construct (void)
            editor_window,
            SLOT (handle_update_breakpoint_marker_request (bool, const QString&, int)));
 #endif
 
   QDir curr_dir;
   set_current_working_directory (curr_dir.absolutePath ());
 
   octave_link::post_event (this, &main_window::resize_command_window_callback);
+
+  set_global_shortcuts (true);
+
 }
 
 void
 main_window::construct_octave_qt_link (void)
 {
   _octave_main_thread = new octave_main_thread ();
 
   _octave_qt_link = new octave_qt_link (_octave_main_thread);
@@ -1078,25 +1080,29 @@ main_window::construct_edit_menu (QMenuB
 
   edit_menu->addSeparator ();
 
   _copy_action
     = edit_menu->addAction (QIcon (":/actions/icons/editcopy.png"),
                             tr ("Copy"), this, SLOT (copyClipboard ()));
   _copy_action->setShortcut (QKeySequence::Copy);
 
+
   _paste_action
     = edit_menu->addAction (QIcon (":/actions/icons/editpaste.png"),
                             tr ("Paste"), this, SLOT (pasteClipboard ()));
   _paste_action->setShortcut (QKeySequence::Paste);
 
+  _clear_clipboard_action
+    = edit_menu->addAction (tr ("Clear Clipboard"), this,
+                            SLOT (clear_clipboard ()));
+
   edit_menu->addSeparator ();
 
-  _find_files_action
-    = edit_menu->addAction (tr ("Find Files..."));
+  _find_files_action = edit_menu->addAction (tr ("Find Files..."));
 
   edit_menu->addSeparator ();
 
   QAction *clear_command_window_action
     = edit_menu->addAction (tr ("Clear Command Window"));
 
   QAction *clear_command_history
     = edit_menu->addAction(tr ("Clear Command History"));
@@ -1110,16 +1116,20 @@ main_window::construct_edit_menu (QMenuB
   connect (clear_command_window_action, SIGNAL (triggered ()),
            this, SLOT (handle_clear_command_window_request ()));
 
   connect (clear_command_history, SIGNAL (triggered ()),
            this, SLOT (handle_clear_history_request ()));
 
   connect (clear_workspace_action, SIGNAL (triggered ()),
            this, SLOT (handle_clear_workspace_request ()));
+
+  connect (_clipboard, SIGNAL (changed (QClipboard::Mode)),
+           this, SLOT (clipboard_has_changed (QClipboard::Mode)));
+  clipboard_has_changed (QClipboard::Clipboard);
 }
 
 QAction *
 main_window::construct_debug_menu_item (const char *icon_file,
                                         const QString& item,
                                         const QKeySequence& key)
 {
   QAction *action = _debug_menu->addAction (QIcon (icon_file), item);
@@ -1633,9 +1643,31 @@ main_window::set_global_shortcuts (bool 
 
 void
 main_window::handle_show_doc (const QString& file)
 {
   doc_browser_window->setVisible (true);
   emit show_doc_signal (file);
 }
 
+void
+main_window::clipboard_has_changed (QClipboard::Mode cp_mode)
+{
+  if (cp_mode == QClipboard::Clipboard)
+    {
+      if (_clipboard->text ().isEmpty ())
+        {
+          _paste_action->setEnabled (false);
+          _clear_clipboard_action->setEnabled (false);
+        }
+      else
+        {
+          _paste_action->setEnabled (true);
+          _clear_clipboard_action->setEnabled (true);
+        }
+    }
+}
 
+void
+main_window::clear_clipboard ()
+{
+  _clipboard->clear (QClipboard::Clipboard);
+}
diff --git a/libgui/src/main-window.h b/libgui/src/main-window.h
--- a/libgui/src/main-window.h
+++ b/libgui/src/main-window.h
@@ -177,16 +177,21 @@ public slots:
 
   // find files dialog 
   void find_files(const QString &startdir=QDir::currentPath());
   void find_files_finished(int);
 
   // setting global shortcuts
   void set_global_shortcuts (bool enable);
 
+  // handling the clipboard
+  void clipboard_has_changed (QClipboard::Mode);
+  void clear_clipboard ();
+
+
 protected:
   void closeEvent (QCloseEvent * closeEvent);
 
 private:
 
   void construct (void);
 
   void construct_octave_qt_link (void);
@@ -281,16 +286,17 @@ private:
   QAction *_debug_step_out;
   QAction *_debug_quit;
 
   QAction *_new_script_action;
   QAction *_open_action;
 
   QAction *_copy_action;
   QAction *_paste_action;
+  QAction *_clear_clipboard_action;
   QAction *_undo_action;
 
   QAction *_find_files_action;
   QAction *_exit_action;
 
   // Toolbars.
   QComboBox *_current_directory_combo_box;
   static const int current_directory_width = 300;
@@ -300,13 +306,15 @@ private:
 
   // Find files dialog
   find_files_dialog * find_files_dlg;
 
   octave_main_thread *_octave_main_thread;
 
   octave_qt_link *_octave_qt_link;
 
+  QClipboard *_clipboard;
+
   // Flag for closing whole application.
   bool _closing;
 };
 
 #endif // MAINWINDOW_H
