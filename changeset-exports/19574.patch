# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1421206695 18000
#      Tue Jan 13 22:38:15 2015 -0500
# Node ID 47d778e6a518045f75de0a96efd4db05bef87cbc
# Parent  2aaf6077eb3c55bf1eb8e75d3b84ae022fe729d9
* audiodevinfo.cc: Minor style fixes.

diff --git a/libinterp/dldfcn/audiodevinfo.cc b/libinterp/dldfcn/audiodevinfo.cc
--- a/libinterp/dldfcn/audiodevinfo.cc
+++ b/libinterp/dldfcn/audiodevinfo.cc
@@ -586,18 +586,18 @@ octave_play_callback (const void *, void
       return paAbort;
     }
 
   // Don't multiply the audio data by scale_factor here.  Although it
   // does move the operation outside of the loops below, it also causes
   // a second copy of the data array to be made.
 
   const ColumnVector sound_l = sound.column (0);
-  const ColumnVector sound_r = (sound.columns () == 1)
-                               ? sound_l : sound.column (1);
+  const ColumnVector sound_r = (sound.columns () == 1
+                                ? sound_l : sound.column (1));
 
   const double *p_l = sound_l.data ();
   const double *p_r = sound_r.data ();
 
   switch (player->get_nbits ())
     {
     case 8:
       {
@@ -1908,18 +1908,18 @@ Undocumented internal function.\n\
   int nargin = args.length ();
 
   audiorecorder* recorder = new audiorecorder ();
 
   int offset = 0;
 
   if (nargin > 0)
     {
-      bool is_function = args(0).is_string () || args(0).is_function_handle ()
-                         || args(0).is_inline_function ();
+      bool is_function = (args(0).is_string () || args(0).is_function_handle ()
+                          || args(0).is_inline_function ());
 
       if (is_function)
         {
           error ("audioplayer: callbacks not yet implemented");
           return retval;
 
           // recorder->octave_callback_function = args(0).function_value ();
           // offset = 1;
@@ -2565,18 +2565,18 @@ Undocumented internal function.\n\
   audioplayer* recorder = new audioplayer ();
 
   if (! recorder)
     {
       print_usage ();
       return retval;
     }
 
-  bool is_function = args(0).is_string () || args(0).is_function_handle ()
-                     || args(0).is_inline_function ();
+  bool is_function = (args(0).is_string () || args(0).is_function_handle ()
+                      || args(0).is_inline_function ());
 
   if (is_function)
     {
       error ("audioplayer: callbacks not yet implemented");
       return retval;
 
       // recorder->set_y (args(0).function_value ());
     }
