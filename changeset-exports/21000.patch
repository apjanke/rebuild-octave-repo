# HG changeset patch
# User Rik <rik@octave.org>
# Date 1451322005 28800
#      Mon Dec 28 09:00:05 2015 -0800
# Node ID 85dfb551e4cdad1c857a0cd16ce17d00c2ad82d2
# Parent  73f62b4bb53357338233ccb07e0142c0b070ad01
# Parent  8281e37a56315ed47623e9abb5ddad40a3236ac9
maint: Periodic merge of stable to default.

diff --git a/libinterp/corefcn/error.cc b/libinterp/corefcn/error.cc
--- a/libinterp/corefcn/error.cc
+++ b/libinterp/corefcn/error.cc
@@ -1335,22 +1335,16 @@ display_warning_options (std::ostream& o
     }
 
   os << std::endl;
 }
 
 static void
 set_warning_option (const std::string& state, const std::string& ident)
 {
-  if (ident == "all")
-    {
-      initialize_warning_options (state);
-      return;
-    }
-
   std::string all_state = default_warning_state ();
 
   if (state != "on" && state != "off" && state != "error")
     error ("invalid warning state: %s", state.c_str ());
 
   Cell tid = warning_options.contents ("identifier");
   Cell tst = warning_options.contents ("state");
 
@@ -1553,18 +1547,20 @@ disable escape sequence expansion use a 
               symbol_table::assign
                 (".saved_warning_states.", m, scope, context);
 
               // Now ignore the "local" argument and continue to
               // handle the current setting.
               nargin--;
             }
 
-          if (arg2 == "all")
+          if (nargin >= 2 && arg2 == "all")
             {
+              // If "all" is explicitly given as ID.
+
               octave_map tmp;
 
               Cell id (1, 1);
               Cell st (1, 1);
 
               id(0) = arg2;
               st(0) = arg1;
 
@@ -1740,16 +1736,24 @@ disable escape sequence expansion use a 
 
       if (nargout > 0)
         retval = prev_msg;
     }
 
   return retval;
 }
 
+/*
+## Test for (bug #45753)
+
+%!test
+%! warning ("error");
+%! assert (! isempty (help ("warning")));
+*/
+
 octave_value_list
 set_warning_state (const std::string& id, const std::string& state)
 {
   octave_value_list args;
 
   args(1) = id;
   args(0) = state;
 
