# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1420269439 18000
#      Sat Jan 03 02:17:19 2015 -0500
# Node ID 651f12640c90a49f7c2cf850d8a334bb2f110cf6
# Parent  7f271cef5850536fef6b0c0f13481e3733b0a7e9
* audio.txi: Update sectioning and refill text.

diff --git a/doc/interpreter/audio.txi b/doc/interpreter/audio.txi
--- a/doc/interpreter/audio.txi
+++ b/doc/interpreter/audio.txi
@@ -14,86 +14,146 @@
 @c 
 @c You should have received a copy of the GNU General Public License
 @c along with Octave; see the file COPYING.  If not, see
 @c <http://www.gnu.org/licenses/>.
 
 @c Written by Kurt Hornik <Kurt.Hornik@wu-wien.ac.at> on 1996/05/14
 
 @node Audio Processing
+@chapter Audio Processing
 
-@chapter Audio File Utilities
+@menu
+* Audio File Utilities::
+* Audio Device Information::
+* Audio Player::
+* Audio Recorder::
+* Audio Data Processing::
+@end menu
 
-The following functions allow you to read, write and retrieve information about audio files. Various formats are supported including wav, flac and ogg vorbis.
+@node Audio File Utilities
+@section Audio File Utilities
+
+The following functions allow you to read, write and retrieve
+information about audio files. Various formats are supported including
+wav, flac and ogg vorbis.
 
 @DOCSTRING(audioinfo)
+
 @DOCSTRING(audioread)
+
 @DOCSTRING(audiowrite)
 
-@chapter Audio Device Information
+@node Audio Device Information
+@section Audio Device Information
 
 @DOCSTRING(audiodevinfo)
 
-@chapter Audio Player
+@node Audio Player
+@section Audio Player
 
-The following methods are used to create and use audioplayer objects. These objects can be used to play back audio data stored in Octave matrices and arrays. The audioplayer object supports playback from various devices available to the system, blocking and non-blocking playback, convenient pausing and resuming and much more.
+The following methods are used to create and use audioplayer
+objects. These objects can be used to play back audio data stored in
+Octave matrices and arrays. The audioplayer object supports playback
+from various devices available to the system, blocking and non-blocking
+playback, convenient pausing and resuming and much more.
 
 @DOCSTRING(@audioplayer/audioplayer)
 
-@section Playback
+@menu
+* Playback::
+* Player Properties::
+@end menu
+
+@node Playback
+@subsection Playback
 
 The following methods are used to control player playback.
 
 @DOCSTRING(@audioplayer/play)
+
 @DOCSTRING(@audioplayer/playblocking)
+
 @DOCSTRING(@audioplayer/pause)
+
 @DOCSTRING(@audioplayer/resume)
+
 @DOCSTRING(@audioplayer/stop)
+
 @DOCSTRING(@audioplayer/isplaying)
 
-@section Properties
+@node Player Properties
+@subsection Properties
 
-The remaining couple of methods are used to get and set various properties of the audioplayer object.
+The remaining couple of methods are used to get and set various
+properties of the audioplayer object.
 
 @DOCSTRING(@audioplayer/get)
+
 @DOCSTRING(@audioplayer/set)
 
-@chapter Audio Recorder
+@node Audio Recorder
+@section Audio Recorder
 
-The following methods are used to create and use audiorecorder objects. These objects can be used to record audio data from various devices available to the system. You can use convenient methods to retrieve that data or audioplayer objects created from that data. Methods for blocking and non-blocking recording, pausing and resuming recording and much more is available.
+The following methods are used to create and use audiorecorder
+objects. These objects can be used to record audio data from various
+devices available to the system. You can use convenient methods to
+retrieve that data or audioplayer objects created from that
+data. Methods for blocking and non-blocking recording, pausing and
+resuming recording and much more is available.
 
 @DOCSTRING(@audiorecorder/audiorecorder)
 
-@section Recording
+@menu
+* Recording::
+* Data Retrieval::
+* Recorder Properties::
+@end menu
+
+@node Recording
+@subsection Recording
 
 The following methods control the recording process.
 
 @DOCSTRING(@audiorecorder/record)
+
 @DOCSTRING(@audiorecorder/recordblocking)
+
 @DOCSTRING(@audiorecorder/pause)
+
 @DOCSTRING(@audiorecorder/resume)
+
 @DOCSTRING(@audiorecorder/stop)
+
 @DOCSTRING(@audiorecorder/isrecording)
 
-@section Data Retrieval
+@node Data Retrieval
+@subsection Data Retrieval
 
-The following methods allow you to retrieve recorded audio data in various ways.
+The following methods allow you to retrieve recorded audio data in
+various ways.
 
 @DOCSTRING(@audiorecorder/getaudiodata)
+
 @DOCSTRING(@audiorecorder/getplayer)
+
 @DOCSTRING(@audiorecorder/play)
 
-@section Properties
+@node Recorder Properties
+@subsection Properties
 
-The remaining two methods allow you to read or alter the properties of audiorecorder objects.
+The remaining two methods allow you to read or alter the properties of
+audiorecorder objects.
 
 @DOCSTRING(@audiorecorder/get)
+
 @DOCSTRING(@audiorecorder/set)
 
-@chapter Audio Processing
+@node Audio Data Processing
+@section Audio Data Processing
 
 Octave provides a few functions for dealing with audio data.  An audio
 `sample' is a single output value from an A/D converter, i.e., a small
 integer number (usually 8 or 16 bits), and audio data is just a series
 of such samples.  It can be characterized by three parameters: the
 sampling rate (measured in samples per second or Hz, e.g., 8000 or
 44100), the number of bits per sample (e.g., 8 or 16), and the number of
 channels (1 for mono, 2 for stereo, etc.).
