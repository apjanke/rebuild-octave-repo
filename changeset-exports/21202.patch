# HG changeset patch
# User Rik <rik@octave.org>
# Date 1454769613 28800
#      Sat Feb 06 06:40:13 2016 -0800
# Node ID f7121e11199125ad4f1552614463151c4ec2f4ee
# Parent  88b41a4711e2bb043de105aaf3fac9fa8f578ddd
maint: indent #ifdef blocks in liboctave and src directories.

* Array-C.cc, Array-b.cc, Array-ch.cc, Array-d.cc, Array-f.cc, Array-fC.cc,
Array-i.cc, Array-idx-vec.cc, Array-s.cc, Array-str.cc, Array-util.cc,
Array-voidp.cc, Array.cc, CColVector.cc, CDiagMatrix.cc, CMatrix.cc,
CNDArray.cc, CRowVector.cc, CSparse.cc, CSparse.h, DiagArray2.cc, MArray-C.cc,
MArray-d.cc, MArray-f.cc, MArray-fC.cc, MArray-i.cc, MArray-s.cc, MArray.cc,
MDiagArray2.cc, MSparse-C.cc, MSparse-d.cc, MSparse.h, MatrixType.cc,
PermMatrix.cc, Range.cc, Sparse-C.cc, Sparse-b.cc, Sparse-d.cc, Sparse.cc,
boolMatrix.cc, boolNDArray.cc, boolSparse.cc, chMatrix.cc, chNDArray.cc,
dColVector.cc, dDiagMatrix.cc, dMatrix.cc, dNDArray.cc, dRowVector.cc,
dSparse.cc, dSparse.h, dim-vector.cc, fCColVector.cc, fCDiagMatrix.cc,
fCMatrix.cc, fCNDArray.cc, fCRowVector.cc, fColVector.cc, fDiagMatrix.cc,
fMatrix.cc, fNDArray.cc, fRowVector.cc, idx-vector.cc, int16NDArray.cc,
int32NDArray.cc, int64NDArray.cc, int8NDArray.cc, intNDArray.cc,
uint16NDArray.cc, uint32NDArray.cc, uint64NDArray.cc, uint8NDArray.cc,
blaswrap.c, cquit.c, f77-extern.cc, f77-fcn.c, f77-fcn.h, lo-error.c, quit.cc,
quit.h, CmplxAEPBAL.cc, CmplxCHOL.cc, CmplxGEPBAL.cc, CmplxHESS.cc, CmplxLU.cc,
CmplxQR.cc, CmplxQRP.cc, CmplxSCHUR.cc, CmplxSVD.cc, CollocWt.cc, DASPK.cc,
DASRT.cc, DASSL.cc, EIG.cc, LSODE.cc, ODES.cc, Quad.cc, base-lu.cc, base-qr.cc,
dbleAEPBAL.cc, dbleCHOL.cc, dbleGEPBAL.cc, dbleHESS.cc, dbleLU.cc, dbleQR.cc,
dbleQRP.cc, dbleSCHUR.cc, dbleSVD.cc, eigs-base.cc, fCmplxAEPBAL.cc,
fCmplxCHOL.cc, fCmplxGEPBAL.cc, fCmplxHESS.cc, fCmplxLU.cc, fCmplxQR.cc,
fCmplxQRP.cc, fCmplxSCHUR.cc, fCmplxSVD.cc, fEIG.cc, floatAEPBAL.cc,
floatCHOL.cc, floatGEPBAL.cc, floatHESS.cc, floatLU.cc, floatQR.cc,
floatQRP.cc, floatSCHUR.cc, floatSVD.cc, lo-mappers.cc, lo-specfun.cc,
oct-convn.cc, oct-fftw.cc, oct-fftw.h, oct-norm.cc, oct-rand.cc,
oct-spparms.cc, randgamma.c, randmtzig.c, randpoisson.c, sparse-chol.cc,
sparse-dmsolve.cc, sparse-lu.cc, sparse-qr.cc, mx-defs.h, dir-ops.cc,
file-ops.cc, file-stat.cc, lo-sysdep.cc, mach-info.cc, oct-env.cc,
oct-group.cc, oct-openmp.h, oct-passwd.cc, oct-syscalls.cc, oct-time.cc,
oct-uname.cc, pathlen.h, sysdir.h, syswait.h, cmd-edit.cc, cmd-hist.cc,
data-conv.cc, f2c-main.c, glob-match.cc, lo-array-errwarn.cc,
lo-array-gripes.cc, lo-cutils.c, lo-cutils.h, lo-ieee.cc, lo-math.h,
lo-regexp.cc, lo-utils.cc, oct-base64.cc, oct-glob.cc, oct-inttypes.cc,
oct-inttypes.h, oct-locbuf.cc, oct-mutex.cc, oct-refcount.h, oct-rl-edit.c,
oct-rl-hist.c, oct-shlib.cc, oct-sort.cc, pathsearch.cc, singleton-cleanup.cc,
sparse-sort.cc, sparse-util.cc, statdefs.h, str-vec.cc, unwind-prot.cc,
url-transfer.cc, display-available.h, main-cli.cc, main-gui.cc, main.in.cc,
mkoctfile.in.cc, octave-config.in.cc, shared-fcns.h:
indent #ifdef blocks in liboctave and src directories.

diff --git a/liboctave/array/Array-C.cc b/liboctave/array/Array-C.cc
--- a/liboctave/array/Array-C.cc
+++ b/liboctave/array/Array-C.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of Complex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 
 #include "Array.h"
diff --git a/liboctave/array/Array-b.cc b/liboctave/array/Array-b.cc
--- a/liboctave/array/Array-b.cc
+++ b/liboctave/array/Array-b.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of bool values.
 
 #include "Array.h"
 #include "Array.cc"
 #define INLINE_ASCENDING_SORT
 #define INLINE_DESCENDING_SORT
diff --git a/liboctave/array/Array-ch.cc b/liboctave/array/Array-ch.cc
--- a/liboctave/array/Array-ch.cc
+++ b/liboctave/array/Array-ch.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of char values.
 
 #include "Array.h"
 #include "Array.cc"
 #define INLINE_ASCENDING_SORT
 #define INLINE_DESCENDING_SORT
diff --git a/liboctave/array/Array-d.cc b/liboctave/array/Array-d.cc
--- a/liboctave/array/Array-d.cc
+++ b/liboctave/array/Array-d.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of double values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
diff --git a/liboctave/array/Array-f.cc b/liboctave/array/Array-f.cc
--- a/liboctave/array/Array-f.cc
+++ b/liboctave/array/Array-f.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of float values.
 
 #include "lo-mappers.h"
 #include "Array.h"
 #include "Array.cc"
 #include "oct-locbuf.h"
diff --git a/liboctave/array/Array-fC.cc b/liboctave/array/Array-fC.cc
--- a/liboctave/array/Array-fC.cc
+++ b/liboctave/array/Array-fC.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of FloatComplex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 
 #include "Array.h"
diff --git a/liboctave/array/Array-i.cc b/liboctave/array/Array-i.cc
--- a/liboctave/array/Array-i.cc
+++ b/liboctave/array/Array-i.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "oct-inttypes.h"
 
 // Instantiate Arrays of integer values.
 
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array-idx-vec.cc b/liboctave/array/Array-idx-vec.cc
--- a/liboctave/array/Array-idx-vec.cc
+++ b/liboctave/array/Array-idx-vec.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of integer values.
 
 #include "idx-vector.h"
 
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array-s.cc b/liboctave/array/Array-s.cc
--- a/liboctave/array/Array-s.cc
+++ b/liboctave/array/Array-s.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Arrays of short int values.
 
 #include "Array.h"
 #include "Array.cc"
 
 #define INLINE_ASCENDING_SORT
diff --git a/liboctave/array/Array-str.cc b/liboctave/array/Array-str.cc
--- a/liboctave/array/Array-str.cc
+++ b/liboctave/array/Array-str.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 // Instantiate Arrays of strings.
 
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array-util.cc b/liboctave/array/Array-util.cc
--- a/liboctave/array/Array-util.cc
+++ b/liboctave/array/Array-util.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "Array-util.h"
 #include "dim-vector.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 bool
diff --git a/liboctave/array/Array-voidp.cc b/liboctave/array/Array-voidp.cc
--- a/liboctave/array/Array-voidp.cc
+++ b/liboctave/array/Array-voidp.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 // Instantiate Arrays of void *.
 
 #include "Array.h"
 #include "Array.cc"
diff --git a/liboctave/array/Array.cc b/liboctave/array/Array.cc
--- a/liboctave/array/Array.cc
+++ b/liboctave/array/Array.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include <iostream>
 #include <sstream>
 #include <vector>
 #include <algorithm>
diff --git a/liboctave/array/CColVector.cc b/liboctave/array/CColVector.cc
--- a/liboctave/array/CColVector.cc
+++ b/liboctave/array/CColVector.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/CDiagMatrix.cc b/liboctave/array/CDiagMatrix.cc
--- a/liboctave/array/CDiagMatrix.cc
+++ b/liboctave/array/CDiagMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "mx-base.h"
diff --git a/liboctave/array/CMatrix.cc b/liboctave/array/CMatrix.cc
--- a/liboctave/array/CMatrix.cc
+++ b/liboctave/array/CMatrix.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
 // FIXME
diff --git a/liboctave/array/CNDArray.cc b/liboctave/array/CNDArray.cc
--- a/liboctave/array/CNDArray.cc
+++ b/liboctave/array/CNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
 #include "CNDArray.h"
diff --git a/liboctave/array/CRowVector.cc b/liboctave/array/CRowVector.cc
--- a/liboctave/array/CRowVector.cc
+++ b/liboctave/array/CRowVector.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/CSparse.cc b/liboctave/array/CSparse.cc
--- a/liboctave/array/CSparse.cc
+++ b/liboctave/array/CSparse.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
 #include "quit.h"
@@ -62,17 +62,17 @@ along with Octave; see the file COPYING.
 #include "Sparse-diag-op-defs.h"
 
 #include "Sparse-perm-op-defs.h"
 
 // Define whether to use a basic QR solver or one that uses a Dulmange
 // Mendelsohn factorization to seperate the problem into under-determined,
 // well-determined and over-determined parts and solves them seperately
 #ifndef USE_QRSOLVE
-#include "sparse-dmsolve.cc"
+#  include "sparse-dmsolve.cc"
 #endif
 
 // Fortran functions we call.
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zgbtrf, ZGBTRF) (const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, const octave_idx_type&,
diff --git a/liboctave/array/CSparse.h b/liboctave/array/CSparse.h
--- a/liboctave/array/CSparse.h
+++ b/liboctave/array/CSparse.h
@@ -545,14 +545,14 @@ SPARSE_SSM_CMP_OP_DECLS (Complex, Sparse
 SPARSE_SSM_BOOL_OP_DECLS (Complex, SparseComplexMatrix, OCTAVE_API)
 
 SPARSE_SMSM_CMP_OP_DECLS (SparseComplexMatrix, SparseComplexMatrix, OCTAVE_API)
 SPARSE_SMSM_BOOL_OP_DECLS (SparseComplexMatrix, SparseComplexMatrix, OCTAVE_API)
 
 SPARSE_FORWARD_DEFS (MSparse, SparseComplexMatrix, ComplexMatrix, Complex)
 
 #if defined (ENABLE_64)
-#define UMFPACK_ZNAME(name) umfpack_zl_ ## name
+#  define UMFPACK_ZNAME(name) umfpack_zl_ ## name
 #else
-#define UMFPACK_ZNAME(name) umfpack_zi_ ## name
+#  define UMFPACK_ZNAME(name) umfpack_zi_ ## name
 #endif
 
 #endif
diff --git a/liboctave/array/DiagArray2.cc b/liboctave/array/DiagArray2.cc
--- a/liboctave/array/DiagArray2.cc
+++ b/liboctave/array/DiagArray2.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include <iostream>
 
 #include <algorithm>
 
diff --git a/liboctave/array/MArray-C.cc b/liboctave/array/MArray-C.cc
--- a/liboctave/array/MArray-C.cc
+++ b/liboctave/array/MArray-C.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate MArrays of Complex values.
 
 #include "oct-cmplx.h"
 
 #include "MArray.h"
 #include "MArray.cc"
diff --git a/liboctave/array/MArray-d.cc b/liboctave/array/MArray-d.cc
--- a/liboctave/array/MArray-d.cc
+++ b/liboctave/array/MArray-d.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate MArrays of double values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class OCTAVE_API MArray<double>;
diff --git a/liboctave/array/MArray-f.cc b/liboctave/array/MArray-f.cc
--- a/liboctave/array/MArray-f.cc
+++ b/liboctave/array/MArray-f.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate MArrays of float values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class OCTAVE_API MArray<float>;
diff --git a/liboctave/array/MArray-fC.cc b/liboctave/array/MArray-fC.cc
--- a/liboctave/array/MArray-fC.cc
+++ b/liboctave/array/MArray-fC.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate MArrays of FloatComplex values.
 
 #include "oct-cmplx.h"
 
 #include "MArray.h"
 #include "MArray.cc"
diff --git a/liboctave/array/MArray-i.cc b/liboctave/array/MArray-i.cc
--- a/liboctave/array/MArray-i.cc
+++ b/liboctave/array/MArray-i.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "oct-inttypes.h"
 
 // Instantiate MArrays of int values.
 
 #include "MArray.h"
 #include "MArray.cc"
diff --git a/liboctave/array/MArray-s.cc b/liboctave/array/MArray-s.cc
--- a/liboctave/array/MArray-s.cc
+++ b/liboctave/array/MArray-s.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate MArrays of short int values.
 
 #include "MArray.h"
 #include "MArray.cc"
 
 template class OCTAVE_API MArray<short>;
diff --git a/liboctave/array/MArray.cc b/liboctave/array/MArray.cc
--- a/liboctave/array/MArray.cc
+++ b/liboctave/array/MArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "MArray.h"
 #include "Array-util.h"
 #include "lo-error.h"
 
 template <typename T>
 struct _idxadds_helper
diff --git a/liboctave/array/MDiagArray2.cc b/liboctave/array/MDiagArray2.cc
--- a/liboctave/array/MDiagArray2.cc
+++ b/liboctave/array/MDiagArray2.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "MDiagArray2.h"
 #include "Array-util.h"
 #include "lo-error.h"
 
 template <typename T>
 bool
diff --git a/liboctave/array/MSparse-C.cc b/liboctave/array/MSparse-C.cc
--- a/liboctave/array/MSparse-C.cc
+++ b/liboctave/array/MSparse-C.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "oct-cmplx.h"
 
 #include "MSparse.h"
 
 template class OCTAVE_API MSparse<Complex>;
 
diff --git a/liboctave/array/MSparse-d.cc b/liboctave/array/MSparse-d.cc
--- a/liboctave/array/MSparse-d.cc
+++ b/liboctave/array/MSparse-d.cc
@@ -17,16 +17,16 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "MSparse.h"
 
 template class OCTAVE_API MSparse<double>;
 
 INSTANTIATE_SPARSE_FRIENDS (double, OCTAVE_API);
diff --git a/liboctave/array/MSparse.h b/liboctave/array/MSparse.h
--- a/liboctave/array/MSparse.h
+++ b/liboctave/array/MSparse.h
@@ -20,17 +20,17 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_MSparse_h)
 #define octave_MSparse_h 1
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <functional>
 
 #include "quit.h"
 #include "lo-error.h"
 #include "Sparse.h"
 #include "MArray.h"
diff --git a/liboctave/array/MatrixType.cc b/liboctave/array/MatrixType.cc
--- a/liboctave/array/MatrixType.cc
+++ b/liboctave/array/MatrixType.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "MatrixType.h"
 #include "dMatrix.h"
 #include "fMatrix.h"
 #include "CMatrix.h"
diff --git a/liboctave/array/PermMatrix.cc b/liboctave/array/PermMatrix.cc
--- a/liboctave/array/PermMatrix.cc
+++ b/liboctave/array/PermMatrix.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "PermMatrix.h"
 #include "idx-vector.h"
 #include "Array-util.h"
 #include "oct-locbuf.h"
 
 OCTAVE_NORETURN static
diff --git a/liboctave/array/Range.cc b/liboctave/array/Range.cc
--- a/liboctave/array/Range.cc
+++ b/liboctave/array/Range.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <limits>
 
 #include "Range.h"
diff --git a/liboctave/array/Sparse-C.cc b/liboctave/array/Sparse-C.cc
--- a/liboctave/array/Sparse-C.cc
+++ b/liboctave/array/Sparse-C.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Sparse matrix of complex values.
 
 #include "oct-cmplx.h"
 #include "lo-mappers.h"
 #include "lo-ieee.h"
 #include "Sparse.h"
diff --git a/liboctave/array/Sparse-b.cc b/liboctave/array/Sparse-b.cc
--- a/liboctave/array/Sparse-b.cc
+++ b/liboctave/array/Sparse-b.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Sparse matrix of double values.
 
 #include "Sparse.h"
 #include "Sparse.cc"
 
 INSTANTIATE_SPARSE (bool, OCTAVE_API);
diff --git a/liboctave/array/Sparse-d.cc b/liboctave/array/Sparse-d.cc
--- a/liboctave/array/Sparse-d.cc
+++ b/liboctave/array/Sparse-d.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 // Instantiate Sparse matrix of double values.
 
 #include "lo-mappers.h"
 #include "Sparse.h"
 #include "Sparse.cc"
 
diff --git a/liboctave/array/Sparse.cc b/liboctave/array/Sparse.cc
--- a/liboctave/array/Sparse.cc
+++ b/liboctave/array/Sparse.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include <algorithm>
 #include <iostream>
 #include <limits>
 #include <sstream>
diff --git a/liboctave/array/boolMatrix.cc b/liboctave/array/boolMatrix.cc
--- a/liboctave/array/boolMatrix.cc
+++ b/liboctave/array/boolMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "boolMatrix.h"
 #include "lo-error.h"
 #include "str-vec.h"
diff --git a/liboctave/array/boolNDArray.cc b/liboctave/array/boolNDArray.cc
--- a/liboctave/array/boolNDArray.cc
+++ b/liboctave/array/boolNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "Array-util.h"
 #include "boolNDArray.h"
 #include "CNDArray.h"
 #include "mx-base.h"
 #include "lo-ieee.h"
 #include "mx-op-defs.h"
diff --git a/liboctave/array/boolSparse.cc b/liboctave/array/boolSparse.cc
--- a/liboctave/array/boolSparse.cc
+++ b/liboctave/array/boolSparse.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 #include <vector>
 
 #include "quit.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
diff --git a/liboctave/array/chMatrix.cc b/liboctave/array/chMatrix.cc
--- a/liboctave/array/chMatrix.cc
+++ b/liboctave/array/chMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <string>
 
 #include "lo-error.h"
diff --git a/liboctave/array/chNDArray.cc b/liboctave/array/chNDArray.cc
--- a/liboctave/array/chNDArray.cc
+++ b/liboctave/array/chNDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 #include "Array-util.h"
 #include "chNDArray.h"
 #include "mx-base.h"
 #include "lo-ieee.h"
diff --git a/liboctave/array/dColVector.cc b/liboctave/array/dColVector.cc
--- a/liboctave/array/dColVector.cc
+++ b/liboctave/array/dColVector.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/dDiagMatrix.cc b/liboctave/array/dDiagMatrix.cc
--- a/liboctave/array/dDiagMatrix.cc
+++ b/liboctave/array/dDiagMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
diff --git a/liboctave/array/dMatrix.cc b/liboctave/array/dMatrix.cc
--- a/liboctave/array/dMatrix.cc
+++ b/liboctave/array/dMatrix.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
 #include "Array-util.h"
diff --git a/liboctave/array/dNDArray.cc b/liboctave/array/dNDArray.cc
--- a/liboctave/array/dNDArray.cc
+++ b/liboctave/array/dNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
 #include "dNDArray.h"
diff --git a/liboctave/array/dRowVector.cc b/liboctave/array/dRowVector.cc
--- a/liboctave/array/dRowVector.cc
+++ b/liboctave/array/dRowVector.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/dSparse.cc b/liboctave/array/dSparse.cc
--- a/liboctave/array/dSparse.cc
+++ b/liboctave/array/dSparse.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 #include <functional>
 
@@ -57,17 +57,17 @@ along with Octave; see the file COPYING.
 #include "Sparse-diag-op-defs.h"
 
 #include "Sparse-perm-op-defs.h"
 
 // Define whether to use a basic QR solver or one that uses a Dulmange
 // Mendelsohn factorization to seperate the problem into under-determined,
 // well-determined and over-determined parts and solves them seperately
 #ifndef USE_QRSOLVE
-#include "sparse-dmsolve.cc"
+#  include "sparse-dmsolve.cc"
 #endif
 
 // Fortran functions we call.
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dgbtrf, DGBTRF) (const octave_idx_type&, const octave_idx_type&,
                              const octave_idx_type&, const octave_idx_type&,
diff --git a/liboctave/array/dSparse.h b/liboctave/array/dSparse.h
--- a/liboctave/array/dSparse.h
+++ b/liboctave/array/dSparse.h
@@ -502,14 +502,14 @@ SPARSE_SSM_CMP_OP_DECLS (double, SparseM
 SPARSE_SSM_BOOL_OP_DECLS (double, SparseMatrix, OCTAVE_API)
 
 SPARSE_SMSM_CMP_OP_DECLS (SparseMatrix, SparseMatrix, OCTAVE_API)
 SPARSE_SMSM_BOOL_OP_DECLS (SparseMatrix, SparseMatrix, OCTAVE_API)
 
 SPARSE_FORWARD_DEFS (MSparse, SparseMatrix, Matrix, double)
 
 #if defined (ENABLE_64)
-#define UMFPACK_DNAME(name) umfpack_dl_ ## name
+#  define UMFPACK_DNAME(name) umfpack_dl_ ## name
 #else
-#define UMFPACK_DNAME(name) umfpack_di_ ## name
+#  define UMFPACK_DNAME(name) umfpack_di_ ## name
 #endif
 
 #endif
diff --git a/liboctave/array/dim-vector.cc b/liboctave/array/dim-vector.cc
--- a/liboctave/array/dim-vector.cc
+++ b/liboctave/array/dim-vector.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "dim-vector.h"
 
 // The maximum allowed value for a dimension extent. This will normally be a
 // tiny bit off the maximum value of octave_idx_type.
diff --git a/liboctave/array/fCColVector.cc b/liboctave/array/fCColVector.cc
--- a/liboctave/array/fCColVector.cc
+++ b/liboctave/array/fCColVector.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/fCDiagMatrix.cc b/liboctave/array/fCDiagMatrix.cc
--- a/liboctave/array/fCDiagMatrix.cc
+++ b/liboctave/array/fCDiagMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "mx-base.h"
diff --git a/liboctave/array/fCMatrix.cc b/liboctave/array/fCMatrix.cc
--- a/liboctave/array/fCMatrix.cc
+++ b/liboctave/array/fCMatrix.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
 // FIXME
diff --git a/liboctave/array/fCNDArray.cc b/liboctave/array/fCNDArray.cc
--- a/liboctave/array/fCNDArray.cc
+++ b/liboctave/array/fCNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/array/fCRowVector.cc b/liboctave/array/fCRowVector.cc
--- a/liboctave/array/fCRowVector.cc
+++ b/liboctave/array/fCRowVector.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/fColVector.cc b/liboctave/array/fColVector.cc
--- a/liboctave/array/fColVector.cc
+++ b/liboctave/array/fColVector.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/fDiagMatrix.cc b/liboctave/array/fDiagMatrix.cc
--- a/liboctave/array/fDiagMatrix.cc
+++ b/liboctave/array/fDiagMatrix.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "lo-error.h"
 #include "mx-base.h"
 #include "mx-inlines.cc"
diff --git a/liboctave/array/fMatrix.cc b/liboctave/array/fMatrix.cc
--- a/liboctave/array/fMatrix.cc
+++ b/liboctave/array/fMatrix.cc
@@ -19,17 +19,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <iostream>
 #include <vector>
 
 #include "fNDArray.h"
diff --git a/liboctave/array/fNDArray.cc b/liboctave/array/fNDArray.cc
--- a/liboctave/array/fNDArray.cc
+++ b/liboctave/array/fNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <vector>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/array/fRowVector.cc b/liboctave/array/fRowVector.cc
--- a/liboctave/array/fRowVector.cc
+++ b/liboctave/array/fRowVector.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "Array-util.h"
 #include "f77-fcn.h"
 #include "functor.h"
 #include "lo-error.h"
diff --git a/liboctave/array/idx-vector.cc b/liboctave/array/idx-vector.cc
--- a/liboctave/array/idx-vector.cc
+++ b/liboctave/array/idx-vector.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstdlib>
 
 #include <iostream>
 
 #include "idx-vector.h"
 #include "Array.h"
diff --git a/liboctave/array/int16NDArray.cc b/liboctave/array/int16NDArray.cc
--- a/liboctave/array/int16NDArray.cc
+++ b/liboctave/array/int16NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "int16NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/int32NDArray.cc b/liboctave/array/int32NDArray.cc
--- a/liboctave/array/int32NDArray.cc
+++ b/liboctave/array/int32NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "int32NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/int64NDArray.cc b/liboctave/array/int64NDArray.cc
--- a/liboctave/array/int64NDArray.cc
+++ b/liboctave/array/int64NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "int64NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/int8NDArray.cc b/liboctave/array/int8NDArray.cc
--- a/liboctave/array/int8NDArray.cc
+++ b/liboctave/array/int8NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "int8NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/intNDArray.cc b/liboctave/array/intNDArray.cc
--- a/liboctave/array/intNDArray.cc
+++ b/liboctave/array/intNDArray.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "Array-util.h"
 #include "mx-base.h"
 #include "lo-ieee.h"
 #include "mx-inlines.cc"
 
 // unary operations
diff --git a/liboctave/array/uint16NDArray.cc b/liboctave/array/uint16NDArray.cc
--- a/liboctave/array/uint16NDArray.cc
+++ b/liboctave/array/uint16NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "uint16NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/uint32NDArray.cc b/liboctave/array/uint32NDArray.cc
--- a/liboctave/array/uint32NDArray.cc
+++ b/liboctave/array/uint32NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "uint32NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/uint64NDArray.cc b/liboctave/array/uint64NDArray.cc
--- a/liboctave/array/uint64NDArray.cc
+++ b/liboctave/array/uint64NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "uint64NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/array/uint8NDArray.cc b/liboctave/array/uint8NDArray.cc
--- a/liboctave/array/uint8NDArray.cc
+++ b/liboctave/array/uint8NDArray.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "uint8NDArray.h"
 #include "mx-op-defs.h"
 #include "intNDArray.cc"
 
 #include "bsxfun-defs.cc"
 
diff --git a/liboctave/cruft/misc/blaswrap.c b/liboctave/cruft/misc/blaswrap.c
--- a/liboctave/cruft/misc/blaswrap.c
+++ b/liboctave/cruft/misc/blaswrap.c
@@ -34,31 +34,31 @@ Newer gfortran compoilers no longer defa
 convention.  These wrappers map the F2C conformant functions in
 libBLAS and libLAPACK to the native gfortran calling convention, so
 that the libraries can be used with software built for x86_64
 architecture.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h> /* USE_BLASWRAP ? */
+#  include <config.h> /* USE_BLASWRAP ? */
 #endif
 
 #ifdef USE_BLASWRAP
 
 /*
  * vecLib is an Apple framework (collection of libraries) containing
  * libBLAS and libLAPACK.  The fortran stubs in these libraries are
  * (mostly, but not completely) in the F2C calling convention.
  * We access the libraries via the vecLib framework to make sure we
  * get the Apple versions, rather than some other blas/lapack with the
  * same name.
  */
 #ifndef VECLIB_FILE
-#define VECLIB_FILE "/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib"
+#  define VECLIB_FILE "/System/Library/Frameworks/vecLib.framework/Versions/A/vecLib"
 #endif
 
 /*
  * Since this is a wrapper for fortran functions,
  * we do not have prototypes for them.
  */
 #pragma GCC diagnostic ignored "-Wmissing-prototypes"
 
diff --git a/liboctave/cruft/misc/cquit.c b/liboctave/cruft/misc/cquit.c
--- a/liboctave/cruft/misc/cquit.c
+++ b/liboctave/cruft/misc/cquit.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <signal.h>
 #include <string.h>
 
 #include "quit.h"
 
 octave_jmp_buf current_context;
diff --git a/liboctave/cruft/misc/f77-extern.cc b/liboctave/cruft/misc/f77-extern.cc
--- a/liboctave/cruft/misc/f77-extern.cc
+++ b/liboctave/cruft/misc/f77-extern.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 // This whole file is a kluge just to avoid unresolved symbol errors
 // when creating shared versions of libcruft.
 
diff --git a/liboctave/cruft/misc/f77-fcn.c b/liboctave/cruft/misc/f77-fcn.c
--- a/liboctave/cruft/misc/f77-fcn.c
+++ b/liboctave/cruft/misc/f77-fcn.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdlib.h>
 #include <string.h>
 
 #include "f77-fcn.h"
 #include "quit.h"
 #include "lo-error.h"
diff --git a/liboctave/cruft/misc/f77-fcn.h b/liboctave/cruft/misc/f77-fcn.h
--- a/liboctave/cruft/misc/f77-fcn.h
+++ b/liboctave/cruft/misc/f77-fcn.h
@@ -161,19 +161,19 @@ not returning a value from a function de
 #define F77_RET_T int
 
 /* Use these macros to return from C-language functions that are
    supposed to act like Fortran subroutines.  F77_NORETURN is intended
    to be used as the last statement of such a function that has been
    tagged with a "noreturn" attribute.  */
 #define F77_RETURN(retval) return retval;
 #if defined (HAVE_ATTR_NORETURN)
-#define F77_NORETURN(retval)
+#  define F77_NORETURN(retval)
 #else
-#define F77_NORETURN(retval) return retval;
+#  define F77_NORETURN(retval) return retval;
 #endif
 
 /* FIXME: These should work for SV1 or Y-MP systems but will
           need to be changed for others.  */
 
 typedef union
 {
   const char *const_ptr;
@@ -184,19 +184,19 @@ typedef union
     unsigned len : 26;
     unsigned add : 32;
   } mask;
 } octave_cray_descriptor;
 
 typedef void *octave_cray_ftn_ch_dsc;
 
 #ifdef __cplusplus
-#define OCTAVE_F77_FCN_INLINE inline
+#  define OCTAVE_F77_FCN_INLINE inline
 #else
-#define OCTAVE_F77_FCN_INLINE
+#  define OCTAVE_F77_FCN_INLINE
 #endif
 
 static OCTAVE_F77_FCN_INLINE octave_cray_ftn_ch_dsc
 octave_make_cray_ftn_ch_dsc (char *ptr_arg, unsigned long len_arg)
 {
   octave_cray_descriptor desc;
   desc.ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
@@ -208,17 +208,17 @@ octave_make_cray_const_ftn_ch_dsc (const
 {
   octave_cray_descriptor desc;
   desc.const_ptr = ptr_arg;
   desc.mask.len = len_arg << 3;
   return *((octave_cray_ftn_ch_dsc *) &desc);
 }
 
 #ifdef __cplusplus
-#undef OCTAVE_F77_FCN_INLINE
+#  undef OCTAVE_F77_FCN_INLINE
 #endif
 
 #elif defined (F77_USES_VISUAL_FORTRAN_CALLING_CONVENTION)
 
 /* Use these macros to pass character strings from C to Fortran.  */
 #define F77_CHAR_ARG(x) x, strlen (x)
 #define F77_CONST_CHAR_ARG(x) F77_CHAR_ARG (x)
 #define F77_CHAR_ARG2(x, l) x, l
@@ -259,19 +259,19 @@ octave_make_cray_const_ftn_ch_dsc (const
 #define F77_CHAR_ARG_LEN_DEF(len) , long len
 #define F77_CHAR_ARG_USE(s) s
 #define F77_CHAR_ARG_LEN_USE(s, len) len
 
 #define F77_RET_T int
 
 #define F77_RETURN(retval) return retval;
 #if defined (HAVE_ATTR_NORETURN)
-#define F77_NORETURN(retval)
+#  define F77_NORETURN(retval)
 #else
-#define F77_NORETURN(retval) return retval;
+#  define F77_NORETURN(retval) return retval;
 #endif
 
 #endif
 
 
 /* Build a C string local variable CS from the Fortran string parameter S
    declared as F77_CHAR_ARG_DEF(s, len) or F77_CONST_CHAR_ARG_DEF(s, len).
    The string will be cleaned up at the end of the current block.
diff --git a/liboctave/cruft/misc/lo-error.c b/liboctave/cruft/misc/lo-error.c
--- a/liboctave/cruft/misc/lo-error.c
+++ b/liboctave/cruft/misc/lo-error.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
 
 #include "lo-error.h"
 
diff --git a/liboctave/cruft/misc/quit.cc b/liboctave/cruft/misc/quit.cc
--- a/liboctave/cruft/misc/quit.cc
+++ b/liboctave/cruft/misc/quit.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <new>
 
 #include "quit.h"
diff --git a/liboctave/cruft/misc/quit.h b/liboctave/cruft/misc/quit.h
--- a/liboctave/cruft/misc/quit.h
+++ b/liboctave/cruft/misc/quit.h
@@ -24,18 +24,18 @@ along with Octave; see the file COPYING.
 #define octave_quit_h 1
 
 #include <stdio.h>
 
 #include <signal.h>
 #include <setjmp.h>
 
 #ifdef __cplusplus
-#include <new>
-#include <string>
+#  include <new>
+#  include <string>
 extern "C" {
 #endif
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #define WIN32_LEAN_AND_MEAN
 #include <windows.h>
 
diff --git a/liboctave/numeric/CmplxAEPBAL.cc b/liboctave/numeric/CmplxAEPBAL.cc
--- a/liboctave/numeric/CmplxAEPBAL.cc
+++ b/liboctave/numeric/CmplxAEPBAL.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 #include "CmplxAEPBAL.h"
 #include "dMatrix.h"
 #include "f77-fcn.h"
 
diff --git a/liboctave/numeric/CmplxCHOL.cc b/liboctave/numeric/CmplxCHOL.cc
--- a/liboctave/numeric/CmplxCHOL.cc
+++ b/liboctave/numeric/CmplxCHOL.cc
@@ -17,30 +17,30 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "dMatrix.h"
 #include "dRowVector.h"
 #include "CmplxCHOL.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
-#include "dbleQR.h"
+#  include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (zpotrf, ZPOTRF) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, Complex*,
                              const octave_idx_type&, octave_idx_type&
diff --git a/liboctave/numeric/CmplxGEPBAL.cc b/liboctave/numeric/CmplxGEPBAL.cc
--- a/liboctave/numeric/CmplxGEPBAL.cc
+++ b/liboctave/numeric/CmplxGEPBAL.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <vector>
 
 #include "CmplxGEPBAL.h"
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/CmplxHESS.cc b/liboctave/numeric/CmplxHESS.cc
--- a/liboctave/numeric/CmplxHESS.cc
+++ b/liboctave/numeric/CmplxHESS.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CmplxHESS.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/numeric/CmplxLU.cc b/liboctave/numeric/CmplxLU.cc
--- a/liboctave/numeric/CmplxLU.cc
+++ b/liboctave/numeric/CmplxLU.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CmplxLU.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "CColVector.h"
 
diff --git a/liboctave/numeric/CmplxQR.cc b/liboctave/numeric/CmplxQR.cc
--- a/liboctave/numeric/CmplxQR.cc
+++ b/liboctave/numeric/CmplxQR.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CmplxQR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "Range.h"
 #include "idx-vector.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/CmplxQRP.cc b/liboctave/numeric/CmplxQRP.cc
--- a/liboctave/numeric/CmplxQRP.cc
+++ b/liboctave/numeric/CmplxQRP.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include "CmplxQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/CmplxSCHUR.cc b/liboctave/numeric/CmplxSCHUR.cc
--- a/liboctave/numeric/CmplxSCHUR.cc
+++ b/liboctave/numeric/CmplxSCHUR.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CmplxSCHUR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
diff --git a/liboctave/numeric/CmplxSVD.cc b/liboctave/numeric/CmplxSVD.cc
--- a/liboctave/numeric/CmplxSVD.cc
+++ b/liboctave/numeric/CmplxSVD.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CmplxSVD.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
diff --git a/liboctave/numeric/CollocWt.cc b/liboctave/numeric/CollocWt.cc
--- a/liboctave/numeric/CollocWt.cc
+++ b/liboctave/numeric/CollocWt.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include <cfloat>
 
 #include "CollocWt.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/DASPK.cc b/liboctave/numeric/DASPK.cc
--- a/liboctave/numeric/DASPK.cc
+++ b/liboctave/numeric/DASPK.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASPK.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/DASRT.cc b/liboctave/numeric/DASRT.cc
--- a/liboctave/numeric/DASRT.cc
+++ b/liboctave/numeric/DASRT.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASRT.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/DASSL.cc b/liboctave/numeric/DASSL.cc
--- a/liboctave/numeric/DASSL.cc
+++ b/liboctave/numeric/DASSL.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "DASSL.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/EIG.cc b/liboctave/numeric/EIG.cc
--- a/liboctave/numeric/EIG.cc
+++ b/liboctave/numeric/EIG.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "EIG.h"
 #include "dColVector.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
diff --git a/liboctave/numeric/LSODE.cc b/liboctave/numeric/LSODE.cc
--- a/liboctave/numeric/LSODE.cc
+++ b/liboctave/numeric/LSODE.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include <sstream>
 
 #include "LSODE.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/ODES.cc b/liboctave/numeric/ODES.cc
--- a/liboctave/numeric/ODES.cc
+++ b/liboctave/numeric/ODES.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "ODES.h"
 #include "lo-error.h"
 
 void
 ODES::initialize (const ColumnVector& xx, double tt)
 {
diff --git a/liboctave/numeric/Quad.cc b/liboctave/numeric/Quad.cc
--- a/liboctave/numeric/Quad.cc
+++ b/liboctave/numeric/Quad.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "Quad.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "quit.h"
 #include "sun-utils.h"
 
diff --git a/liboctave/numeric/base-lu.cc b/liboctave/numeric/base-lu.cc
--- a/liboctave/numeric/base-lu.cc
+++ b/liboctave/numeric/base-lu.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "base-lu.h"
 
 template <typename lu_type>
 base_lu<lu_type>::base_lu (const lu_type& l, const lu_type& u,
                            const PermMatrix& p)
   : a_fact (u), l_fact (l), ipvt (p.transpose ().col_perm_vec ())
diff --git a/liboctave/numeric/base-qr.cc b/liboctave/numeric/base-qr.cc
--- a/liboctave/numeric/base-qr.cc
+++ b/liboctave/numeric/base-qr.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "base-qr.h"
 
 template <typename qr_type>
 base_qr<qr_type>::base_qr (const qr_type& q_arg, const qr_type& r_arg)
   : q (q_arg), r (r_arg)
 {
diff --git a/liboctave/numeric/dbleAEPBAL.cc b/liboctave/numeric/dbleAEPBAL.cc
--- a/liboctave/numeric/dbleAEPBAL.cc
+++ b/liboctave/numeric/dbleAEPBAL.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 #include "dbleAEPBAL.h"
 #include "f77-fcn.h"
 
 extern "C"
diff --git a/liboctave/numeric/dbleCHOL.cc b/liboctave/numeric/dbleCHOL.cc
--- a/liboctave/numeric/dbleCHOL.cc
+++ b/liboctave/numeric/dbleCHOL.cc
@@ -17,29 +17,29 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "dRowVector.h"
 #include "dbleCHOL.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
-#include "dbleQR.h"
+#  include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (dpotrf, DPOTRF) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, double*,
                              const octave_idx_type&, octave_idx_type&
diff --git a/liboctave/numeric/dbleGEPBAL.cc b/liboctave/numeric/dbleGEPBAL.cc
--- a/liboctave/numeric/dbleGEPBAL.cc
+++ b/liboctave/numeric/dbleGEPBAL.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <vector>
 
 #include "dbleGEPBAL.h"
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/dbleHESS.cc b/liboctave/numeric/dbleHESS.cc
--- a/liboctave/numeric/dbleHESS.cc
+++ b/liboctave/numeric/dbleHESS.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "dbleHESS.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/numeric/dbleLU.cc b/liboctave/numeric/dbleLU.cc
--- a/liboctave/numeric/dbleLU.cc
+++ b/liboctave/numeric/dbleLU.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "dbleLU.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "dColVector.h"
 
diff --git a/liboctave/numeric/dbleQR.cc b/liboctave/numeric/dbleQR.cc
--- a/liboctave/numeric/dbleQR.cc
+++ b/liboctave/numeric/dbleQR.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "dbleQR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "Range.h"
 #include "idx-vector.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/dbleQRP.cc b/liboctave/numeric/dbleQRP.cc
--- a/liboctave/numeric/dbleQRP.cc
+++ b/liboctave/numeric/dbleQRP.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include "dbleQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/dbleSCHUR.cc b/liboctave/numeric/dbleSCHUR.cc
--- a/liboctave/numeric/dbleSCHUR.cc
+++ b/liboctave/numeric/dbleSCHUR.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "dbleSCHUR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
diff --git a/liboctave/numeric/dbleSVD.cc b/liboctave/numeric/dbleSVD.cc
--- a/liboctave/numeric/dbleSVD.cc
+++ b/liboctave/numeric/dbleSVD.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "dbleSVD.h"
 #include "f77-fcn.h"
 #include "oct-locbuf.h"
 
diff --git a/liboctave/numeric/eigs-base.cc b/liboctave/numeric/eigs-base.cc
--- a/liboctave/numeric/eigs-base.cc
+++ b/liboctave/numeric/eigs-base.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 #include <cmath>
 #include <vector>
 #include <iostream>
 
 #include "CSparse.h"
diff --git a/liboctave/numeric/fCmplxAEPBAL.cc b/liboctave/numeric/fCmplxAEPBAL.cc
--- a/liboctave/numeric/fCmplxAEPBAL.cc
+++ b/liboctave/numeric/fCmplxAEPBAL.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 #include "fCmplxAEPBAL.h"
 #include "fMatrix.h"
 #include "f77-fcn.h"
 
diff --git a/liboctave/numeric/fCmplxCHOL.cc b/liboctave/numeric/fCmplxCHOL.cc
--- a/liboctave/numeric/fCmplxCHOL.cc
+++ b/liboctave/numeric/fCmplxCHOL.cc
@@ -17,30 +17,30 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "fMatrix.h"
 #include "fRowVector.h"
 #include "fCmplxCHOL.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
-#include "dbleQR.h"
+#  include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (cpotrf, CPOTRF) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, FloatComplex*,
                              const octave_idx_type&, octave_idx_type&
diff --git a/liboctave/numeric/fCmplxGEPBAL.cc b/liboctave/numeric/fCmplxGEPBAL.cc
--- a/liboctave/numeric/fCmplxGEPBAL.cc
+++ b/liboctave/numeric/fCmplxGEPBAL.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <vector>
 
 #include "fCmplxGEPBAL.h"
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/fCmplxHESS.cc b/liboctave/numeric/fCmplxHESS.cc
--- a/liboctave/numeric/fCmplxHESS.cc
+++ b/liboctave/numeric/fCmplxHESS.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fCmplxHESS.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/numeric/fCmplxLU.cc b/liboctave/numeric/fCmplxLU.cc
--- a/liboctave/numeric/fCmplxLU.cc
+++ b/liboctave/numeric/fCmplxLU.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fCmplxLU.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "fCColVector.h"
 
diff --git a/liboctave/numeric/fCmplxQR.cc b/liboctave/numeric/fCmplxQR.cc
--- a/liboctave/numeric/fCmplxQR.cc
+++ b/liboctave/numeric/fCmplxQR.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fCmplxQR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "Range.h"
 #include "idx-vector.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/fCmplxQRP.cc b/liboctave/numeric/fCmplxQRP.cc
--- a/liboctave/numeric/fCmplxQRP.cc
+++ b/liboctave/numeric/fCmplxQRP.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include "fCmplxQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/fCmplxSCHUR.cc b/liboctave/numeric/fCmplxSCHUR.cc
--- a/liboctave/numeric/fCmplxSCHUR.cc
+++ b/liboctave/numeric/fCmplxSCHUR.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fCmplxSCHUR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
diff --git a/liboctave/numeric/fCmplxSVD.cc b/liboctave/numeric/fCmplxSVD.cc
--- a/liboctave/numeric/fCmplxSVD.cc
+++ b/liboctave/numeric/fCmplxSVD.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fCmplxSVD.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 extern "C"
diff --git a/liboctave/numeric/fEIG.cc b/liboctave/numeric/fEIG.cc
--- a/liboctave/numeric/fEIG.cc
+++ b/liboctave/numeric/fEIG.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "fEIG.h"
 #include "fColVector.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
diff --git a/liboctave/numeric/floatAEPBAL.cc b/liboctave/numeric/floatAEPBAL.cc
--- a/liboctave/numeric/floatAEPBAL.cc
+++ b/liboctave/numeric/floatAEPBAL.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 
 #include "floatAEPBAL.h"
 #include "f77-fcn.h"
 
 extern "C"
diff --git a/liboctave/numeric/floatCHOL.cc b/liboctave/numeric/floatCHOL.cc
--- a/liboctave/numeric/floatCHOL.cc
+++ b/liboctave/numeric/floatCHOL.cc
@@ -17,29 +17,29 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "fRowVector.h"
 #include "floatCHOL.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-norm.h"
 #ifndef HAVE_QRUPDATE
-#include "dbleQR.h"
+#  include "dbleQR.h"
 #endif
 
 extern "C"
 {
   F77_RET_T
   F77_FUNC (spotrf, SPOTRF) (F77_CONST_CHAR_ARG_DECL,
                              const octave_idx_type&, float*,
                              const octave_idx_type&, octave_idx_type&
diff --git a/liboctave/numeric/floatGEPBAL.cc b/liboctave/numeric/floatGEPBAL.cc
--- a/liboctave/numeric/floatGEPBAL.cc
+++ b/liboctave/numeric/floatGEPBAL.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <vector>
 
 #include "floatGEPBAL.h"
 #include "Array-util.h"
 #include "f77-fcn.h"
diff --git a/liboctave/numeric/floatHESS.cc b/liboctave/numeric/floatHESS.cc
--- a/liboctave/numeric/floatHESS.cc
+++ b/liboctave/numeric/floatHESS.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "floatHESS.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
 extern "C"
 {
diff --git a/liboctave/numeric/floatLU.cc b/liboctave/numeric/floatLU.cc
--- a/liboctave/numeric/floatLU.cc
+++ b/liboctave/numeric/floatLU.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "floatLU.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "fColVector.h"
 
diff --git a/liboctave/numeric/floatQR.cc b/liboctave/numeric/floatQR.cc
--- a/liboctave/numeric/floatQR.cc
+++ b/liboctave/numeric/floatQR.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "floatQR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "Range.h"
 #include "idx-vector.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/floatQRP.cc b/liboctave/numeric/floatQRP.cc
--- a/liboctave/numeric/floatQRP.cc
+++ b/liboctave/numeric/floatQRP.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 
 #include "floatQRP.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/numeric/floatSCHUR.cc b/liboctave/numeric/floatSCHUR.cc
--- a/liboctave/numeric/floatSCHUR.cc
+++ b/liboctave/numeric/floatSCHUR.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "floatSCHUR.h"
 #include "f77-fcn.h"
 #include "lo-error.h"
 
diff --git a/liboctave/numeric/floatSVD.cc b/liboctave/numeric/floatSVD.cc
--- a/liboctave/numeric/floatSVD.cc
+++ b/liboctave/numeric/floatSVD.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "floatSVD.h"
 #include "f77-fcn.h"
 #include "oct-locbuf.h"
 
diff --git a/liboctave/numeric/lo-mappers.cc b/liboctave/numeric/lo-mappers.cc
--- a/liboctave/numeric/lo-mappers.cc
+++ b/liboctave/numeric/lo-mappers.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-mappers.h"
 #include "lo-math.h"
@@ -108,17 +108,17 @@ xlog2 (const Complex& x)
 }
 
 double
 xexp2 (double x)
 {
 #if defined (HAVE_EXP2)
   return exp2 (x);
 #else
-#if defined (M_LN2)
+#  if defined (M_LN2)
   static double ln2 = M_LN2;
 #else
   static double ln2 = gnulib::log (2);
 #endif
 
   return exp (x * ln2);
 #endif
 }
@@ -345,17 +345,17 @@ xlog2 (const FloatComplex& x)
 float
 xexp2 (float x)
 {
 #if defined (HAVE_EXP2F)
   return exp2f (x);
 #elif defined (HAVE_EXP2)
   return exp2 (x);
 #else
-#if defined (M_LN2)
+#  if defined (M_LN2)
   static float ln2 = M_LN2;
 #else
   static float ln2 = log2 (2);
 #endif
 
   return exp (x * ln2);
 #endif
 }
diff --git a/liboctave/numeric/lo-specfun.cc b/liboctave/numeric/lo-specfun.cc
--- a/liboctave/numeric/lo-specfun.cc
+++ b/liboctave/numeric/lo-specfun.cc
@@ -20,17 +20,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "Range.h"
 #include "CColVector.h"
 #include "CMatrix.h"
 #include "dRowVector.h"
 #include "dMatrix.h"
 #include "dNDArray.h"
diff --git a/liboctave/numeric/oct-convn.cc b/liboctave/numeric/oct-convn.cc
--- a/liboctave/numeric/oct-convn.cc
+++ b/liboctave/numeric/oct-convn.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 #include <algorithm>
 
 #include "f77-fcn.h"
 
 #include "oct-convn.h"
diff --git a/liboctave/numeric/oct-fftw.cc b/liboctave/numeric/oct-fftw.cc
--- a/liboctave/numeric/oct-fftw.cc
+++ b/liboctave/numeric/oct-fftw.cc
@@ -16,32 +16,32 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #if defined (HAVE_FFTW)
 
 #include <iostream>
 #include <vector>
 
 #include "lo-error.h"
 #include "oct-fftw.h"
 #include "quit.h"
 #include "oct-locbuf.h"
 #include "singleton-cleanup.h"
 
 #if defined (HAVE_FFTW3_THREADS)
-#include "nproc.h"
+#  include "nproc.h"
 #endif
 
 octave_fftw_planner *octave_fftw_planner::instance = 0;
 
 // Helper class to create and cache FFTW plans for both 1D and
 // 2D. This implementation defaults to using FFTW_ESTIMATE to create
 // the plans, which in theory is suboptimal, but provides quite
 // reasonable performance in practice.
diff --git a/liboctave/numeric/oct-fftw.h b/liboctave/numeric/oct-fftw.h
--- a/liboctave/numeric/oct-fftw.h
+++ b/liboctave/numeric/oct-fftw.h
@@ -21,17 +21,17 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_oct_fftw_h)
 #define octave_oct_fftw_h 1
 
 #include <cstddef>
 
 #if defined (HAVE_FFTW3_H)
-#include <fftw3.h>
+#  include <fftw3.h>
 #endif
 
 #include "oct-cmplx.h"
 #include "dim-vector.h"
 
 #if defined (HAVE_FFTW)
 
 class
diff --git a/liboctave/numeric/oct-norm.cc b/liboctave/numeric/oct-norm.cc
--- a/liboctave/numeric/oct-norm.cc
+++ b/liboctave/numeric/oct-norm.cc
@@ -18,17 +18,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // author: Jaroslav Hajek <highegg@gmail.com>
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 #include <cfloat>
 #include <cmath>
 
 #include <iostream>
 #include <vector>
diff --git a/liboctave/numeric/oct-rand.cc b/liboctave/numeric/oct-rand.cc
--- a/liboctave/numeric/oct-rand.cc
+++ b/liboctave/numeric/oct-rand.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <map>
 #include <vector>
 
 #include <stdint.h>
 
 #include "data-conv.h"
diff --git a/liboctave/numeric/oct-spparms.cc b/liboctave/numeric/oct-spparms.cc
--- a/liboctave/numeric/oct-spparms.cc
+++ b/liboctave/numeric/oct-spparms.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "lo-error.h"
 #include "lo-ieee.h"
 
 #include "oct-spparms.h"
 #include "singleton-cleanup.h"
 
diff --git a/liboctave/numeric/randgamma.c b/liboctave/numeric/randgamma.c
--- a/liboctave/numeric/randgamma.c
+++ b/liboctave/numeric/randgamma.c
@@ -73,17 +73,17 @@ non-central chisq(df,L), for df>=0 and L
   (from R, citing formula 29.5b-c in Johnson, Kotz, Balkrishnan(1995))
 Dirichlet(a1,...,ak) for ai > 0
   r = (randg(a1),...,randg(ak))
   r = r / sum(r)
   (from GSL, citing Law & Kelton(1991), Simulation Modeling and Analysis)
 */
 
 #if defined (HAVE_CONFIG_H)
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdio.h>
 
 #include "lo-ieee.h"
 #include "lo-math.h"
 #include "randmtzig.h"
 #include "randgamma.h"
diff --git a/liboctave/numeric/randmtzig.c b/liboctave/numeric/randmtzig.c
--- a/liboctave/numeric/randmtzig.c
+++ b/liboctave/numeric/randmtzig.c
@@ -148,36 +148,36 @@ along with Octave; see the file COPYING.
    void oct_fill_rande (octave_idx_type, double [])
 
    void oct_fill_float_randu (octave_idx_type, float [])
    void oct_fill_float_randn (octave_idx_type, float [])
    void oct_fill_float_rande (octave_idx_type, float [])
 */
 
 #if defined (HAVE_CONFIG_H)
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdio.h>
 #include <time.h>
 
 #ifdef HAVE_GETTIMEOFDAY
-#include <sys/time.h>
+#  include <sys/time.h>
 #endif
 
 #include "lo-math.h"
 #include "randmtzig.h"
 
 /* FIXME: may want to suppress X86 if sizeof(long) > 4 */
 #if ! defined (USE_X86_32)
-# if defined (i386) || defined (HAVE_X86_32)
-#  define USE_X86_32 1
-# else
-#  define USE_X86_32 0
-# endif
+#  if defined (i386) || defined (HAVE_X86_32)
+#    define USE_X86_32 1
+#  else
+#    define USE_X86_32 0
+#  endif
 #endif
 
 /* ===== Mersenne Twister 32-bit generator ===== */
 
 #define MT_M 397
 #define MATRIX_A 0x9908b0dfUL   /* constant vector a */
 #define UMASK 0x80000000UL /* most significant w-r bits */
 #define LMASK 0x7fffffffUL /* least significant r bits */
diff --git a/liboctave/numeric/randpoisson.c b/liboctave/numeric/randpoisson.c
--- a/liboctave/numeric/randpoisson.c
+++ b/liboctave/numeric/randpoisson.c
@@ -27,17 +27,17 @@ along with Octave; see the file COPYING.
  * NAN: value to return for Not-A-Number
  * RUNI: uniform generator on (0,1)
  * RNOR: normal generator
  * LGAMMA: log gamma function
  * INFINITE: function to test whether a value is infinite
  */
 
 #if defined (HAVE_CONFIG_H)
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdio.h>
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "lo-math.h"
diff --git a/liboctave/numeric/sparse-chol.cc b/liboctave/numeric/sparse-chol.cc
--- a/liboctave/numeric/sparse-chol.cc
+++ b/liboctave/numeric/sparse-chol.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "sparse-chol.h"
 #include "sparse-util.h"
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "oct-spparms.h"
 #include "quit.h"
diff --git a/liboctave/numeric/sparse-dmsolve.cc b/liboctave/numeric/sparse-dmsolve.cc
--- a/liboctave/numeric/sparse-dmsolve.cc
+++ b/liboctave/numeric/sparse-dmsolve.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <vector>
 
 #include "MArray.h"
 #include "MSparse.h"
 #include "MatrixType.h"
 #include "oct-inttypes.h"
diff --git a/liboctave/numeric/sparse-lu.cc b/liboctave/numeric/sparse-lu.cc
--- a/liboctave/numeric/sparse-lu.cc
+++ b/liboctave/numeric/sparse-lu.cc
@@ -18,17 +18,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "CSparse.h"
 #include "PermMatrix.h"
 #include "dSparse.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-sparse.h"
diff --git a/liboctave/numeric/sparse-qr.cc b/liboctave/numeric/sparse-qr.cc
--- a/liboctave/numeric/sparse-qr.cc
+++ b/liboctave/numeric/sparse-qr.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "oct-sparse.h"
 #include "sparse-qr.h"
 
 template <typename SPARSE_T>
diff --git a/liboctave/operators/mx-defs.h b/liboctave/operators/mx-defs.h
--- a/liboctave/operators/mx-defs.h
+++ b/liboctave/operators/mx-defs.h
@@ -104,17 +104,17 @@ class FloatQRP;
 class FloatComplexQRP;
 
 // Other data types we use but that don't always need to have full
 // declarations.
 
 #include "oct-cmplx.h"
 
 #ifndef MAPPER_FCN_TYPEDEFS
-#define MAPPER_FCN_TYPEDEFS 1
+#  define MAPPER_FCN_TYPEDEFS 1
 
 typedef bool (*b_d_Mapper)(double);
 typedef bool (*b_c_Mapper)(const Complex&);
 
 typedef double (*d_d_Mapper)(double);
 typedef double (*d_c_Mapper)(const Complex&);
 typedef Complex (*c_c_Mapper)(const Complex&);
 
@@ -133,12 +133,11 @@ enum blas_trans_type
 };
 
 inline char
 get_blas_char (blas_trans_type transt)
 {
   return static_cast<char> (transt);
 }
 
+#  endif
 
 #endif
-
-#endif
diff --git a/liboctave/system/dir-ops.cc b/liboctave/system/dir-ops.cc
--- a/liboctave/system/dir-ops.cc
+++ b/liboctave/system/dir-ops.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 #include <cstring>
 
 #include <list>
 #include <string>
diff --git a/liboctave/system/file-ops.cc b/liboctave/system/file-ops.cc
--- a/liboctave/system/file-ops.cc
+++ b/liboctave/system/file-ops.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstdio>
 #include <cstdlib>
 #include <cstring>
 
 #include <iostream>
@@ -50,17 +50,17 @@ extern "C" {
 #include "oct-locbuf.h"
 #include "oct-passwd.h"
 #include "pathlen.h"
 #include "quit.h"
 #include "singleton-cleanup.h"
 #include "str-vec.h"
 
 #if (defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM))
-#include <algorithm>
+#  include <algorithm>
 #endif
 
 file_ops *file_ops::instance = 0;
 
 bool
 file_ops::instance_ok (void)
 {
   bool retval = true;
diff --git a/liboctave/system/file-stat.cc b/liboctave/system/file-stat.cc
--- a/liboctave/system/file-stat.cc
+++ b/liboctave/system/file-stat.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include <sys/types.h>
 #include <unistd.h>
 
diff --git a/liboctave/system/lo-sysdep.cc b/liboctave/system/lo-sysdep.cc
--- a/liboctave/system/lo-sysdep.cc
+++ b/liboctave/system/lo-sysdep.cc
@@ -16,31 +16,31 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 #include <string>
 #include <vector>
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #include <fcntl.h>
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
+#  define WIN32_LEAN_AND_MEAN
+#  include <windows.h>
 #endif
 
 #include "file-ops.h"
 #include "lo-error.h"
 #include "pathlen.h"
 #include "lo-sysdep.h"
 #include "str-vec.h"
 #include "oct-locbuf.h"
diff --git a/liboctave/system/mach-info.cc b/liboctave/system/mach-info.cc
--- a/liboctave/system/mach-info.cc
+++ b/liboctave/system/mach-info.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "f77-fcn.h"
 #include "lo-error.h"
 #include "mach-info.h"
 #include "singleton-cleanup.h"
 
 extern "C"
diff --git a/liboctave/system/oct-env.cc b/liboctave/system/oct-env.cc
--- a/liboctave/system/oct-env.cc
+++ b/liboctave/system/oct-env.cc
@@ -32,17 +32,17 @@ Free Software Foundation, Inc.
   octave_env::do_getcwd
   octave_env::do_make_absolute
   octave_env::do_polite_directory_format
   octave_env::pathname_backup
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cctype>
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
 
diff --git a/liboctave/system/oct-group.cc b/liboctave/system/oct-group.cc
--- a/liboctave/system/oct-group.cc
+++ b/liboctave/system/oct-group.cc
@@ -16,23 +16,23 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <sys/types.h>
 
 #ifdef HAVE_GRP_H
-#include <grp.h>
+#  include <grp.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-group.h"
 #include "str-vec.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
diff --git a/liboctave/system/oct-openmp.h b/liboctave/system/oct-openmp.h
--- a/liboctave/system/oct-openmp.h
+++ b/liboctave/system/oct-openmp.h
@@ -20,15 +20,15 @@ along with Octave; see the file COPYING.
 
 */
 
 #if ! defined (octave_oct_openmp_h)
 #define octave_oct_openmp_h 1
 
 /* A macro to make using OpenMP easier, and easier to disable */
 #ifdef HAVE_OPENMP
-#include <omp.h>
-#define OCTAVE_OMP_PRAGMA(x) _Pragma (#x)
+#  include <omp.h>
+#  define OCTAVE_OMP_PRAGMA(x) _Pragma (#x)
 #else
-#define OCTAVE_OMP_PRAGMA(x)
+#  define OCTAVE_OMP_PRAGMA(x)
 #endif
 
 #endif
diff --git a/liboctave/system/oct-passwd.cc b/liboctave/system/oct-passwd.cc
--- a/liboctave/system/oct-passwd.cc
+++ b/liboctave/system/oct-passwd.cc
@@ -16,23 +16,23 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <sys/types.h>
 
 #ifdef HAVE_PWD_H
-#include <pwd.h>
+#  include <pwd.h>
 #endif
 
 #include "lo-error.h"
 #include "oct-passwd.h"
 
 #define NOT_SUPPORTED(nm) \
   nm ": not supported on this system"
 
diff --git a/liboctave/system/oct-syscalls.cc b/liboctave/system/oct-syscalls.cc
--- a/liboctave/system/oct-syscalls.cc
+++ b/liboctave/system/oct-syscalls.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstdlib>
 
 #include <string.h>
 
 #include <sys/types.h>
@@ -122,17 +122,17 @@ octave_syscalls::fork (std::string& msg)
 }
 
 pid_t
 octave_syscalls::vfork (std::string& msg)
 {
   pid_t status = -1;
 
 #if defined (HAVE_VFORK) || defined (HAVE_FORK)
-#if defined (HAVE_VFORK)
+#  if defined (HAVE_VFORK)
   status = ::vfork ();
 #else
   status = ::fork ();
 #endif
 
   if (status < 0)
     msg = gnulib::strerror (errno);
 #else
diff --git a/liboctave/system/oct-time.cc b/liboctave/system/oct-time.cc
--- a/liboctave/system/oct-time.cc
+++ b/liboctave/system/oct-time.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <limits>
 
 #include <ctime>
 
 #include <sys/time.h>
 #include <sys/types.h>
@@ -132,17 +132,17 @@ DEFINE_SET_FIELD_FCN (long, gmtoff, -864
 octave_base_tm&
 octave_base_tm::zone (const std::string& s)
 {
   tm_zone = s;
   return *this;
 }
 
 #if ! defined STRFTIME_BUF_INITIAL_SIZE
-#define STRFTIME_BUF_INITIAL_SIZE 128
+#  define STRFTIME_BUF_INITIAL_SIZE 128
 #endif
 
 std::string
 octave_base_tm::strftime (const std::string& fmt) const
 {
   std::string retval;
 
   if (! fmt.empty ())
diff --git a/liboctave/system/oct-uname.cc b/liboctave/system/oct-uname.cc
--- a/liboctave/system/oct-uname.cc
+++ b/liboctave/system/oct-uname.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cerrno>
 #include <cstring>
 
 #include <sys/utsname.h>
 
 #include "oct-uname.h"
diff --git a/liboctave/system/pathlen.h b/liboctave/system/pathlen.h
--- a/liboctave/system/pathlen.h
+++ b/liboctave/system/pathlen.h
@@ -19,16 +19,16 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_pathlen_h)
 #define octave_pathlen_h 1
 
 #ifdef HAVE_SYS_PARAM_H
-#include <sys/param.h>
+#  include <sys/param.h>
 #endif
 
 #ifndef MAXPATHLEN
-#define MAXPATHLEN 1024
+#  define MAXPATHLEN 1024
 #endif
 
 #endif
diff --git a/liboctave/system/sysdir.h b/liboctave/system/sysdir.h
--- a/liboctave/system/sysdir.h
+++ b/liboctave/system/sysdir.h
@@ -26,25 +26,25 @@ along with Octave; see the file COPYING.
 // This mess suggested by the autoconf manual.
 
 // unistd.h defines _POSIX_VERSION on POSIX.1 systems.
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #if defined (HAVE_DIRENT_H) || defined (_POSIX_VERSION)
-#include <dirent.h>
-#define NLENGTH(dirent) (strlen((dirent)->d_name))
+#  include <dirent.h>
+#  define NLENGTH(dirent) (strlen((dirent)->d_name))
 #else
-#define dirent direct
-#define NLENGTH(dirent) ((dirent)->d_namlen)
-#if defined (HAVE_SYS_NDIR_H)
-#include <sys/ndir.h>
-#endif
-#if defined (HAVE_SYS_DIR_H)
-#include <sys/dir.h>
-#endif
-#if defined (HAVE_NDIR_H)
-#include <ndir.h>
-#endif
+#  define dirent direct
+#  define NLENGTH(dirent) ((dirent)->d_namlen)
+#  if defined (HAVE_SYS_NDIR_H)
+#    include <sys/ndir.h>
+#  endif
+#  if defined (HAVE_SYS_DIR_H)
+#    include <sys/dir.h>
+#  endif
+#  if defined (HAVE_NDIR_H)
+#    include <ndir.h>
+#  endif
 #endif
 
 #endif
diff --git a/liboctave/system/syswait.h b/liboctave/system/syswait.h
--- a/liboctave/system/syswait.h
+++ b/liboctave/system/syswait.h
@@ -27,39 +27,39 @@ along with Octave; see the file COPYING.
 extern "C" {
 #endif
 
 /* This mess suggested by the autoconf manual.  */
 
 #include <sys/types.h>
 
 #if defined HAVE_SYS_WAIT_H
-#include <sys/wait.h>
+#  include <sys/wait.h>
 #endif
 
 #ifndef WIFEXITED
-#define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
+#  define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
 #endif
 
 #ifndef WEXITSTATUS
-#define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
+#  define WEXITSTATUS(stat_val) ((unsigned)(stat_val) >> 8)
 #endif
 
 #ifndef WIFSIGNALLED
-#define WIFSIGNALLED(stat_val) \
-  (((stat_val) & 0177) != 0177 && ((stat_val) & 0177) != 0)
+#  define WIFSIGNALLED(stat_val) \
+          (((stat_val) & 0177) != 0177 && ((stat_val) & 0177) != 0)
 #endif
 
 #if defined (__MINGW32__) || defined (_MSC_VER)
-#define HAVE_WAITPID 1
-#include <process.h>
-#define WAITPID(a, b, c) _cwait (b, a, c)
+#  define HAVE_WAITPID 1
+#  include <process.h>
+#  define WAITPID(a, b, c) _cwait (b, a, c)
 /* Action argument is ignored for _cwait, so arbitrary definition.  */
-#define WNOHANG 0
+#  define WNOHANG 0
 #else
-#define WAITPID(a, b, c) waitpid (a, b, c)
+#  define WAITPID(a, b, c) waitpid (a, b, c)
 #endif
 
 #ifdef __cplusplus
 }
 #endif
 
 #endif
diff --git a/liboctave/util/cmd-edit.cc b/liboctave/util/cmd-edit.cc
--- a/liboctave/util/cmd-edit.cc
+++ b/liboctave/util/cmd-edit.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <string>
 
 #include <sys/types.h>
diff --git a/liboctave/util/cmd-hist.cc b/liboctave/util/cmd-hist.cc
--- a/liboctave/util/cmd-hist.cc
+++ b/liboctave/util/cmd-hist.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstring>
 
 #include <iostream>
 #include <sstream>
 #include <string>
 
diff --git a/liboctave/util/data-conv.cc b/liboctave/util/data-conv.cc
--- a/liboctave/util/data-conv.cc
+++ b/liboctave/util/data-conv.cc
@@ -16,70 +16,70 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cctype>
 #include <cstdlib>
 
 #include <iostream>
 #include <limits>
 #include <vector>
 
 #include "byte-swap.h"
 #include "data-conv.h"
 #include "lo-error.h"
 #include "lo-ieee.h"
 #include "oct-locbuf.h"
 
 #if defined HAVE_LONG_LONG_INT
-#define FIND_SIZED_INT_TYPE(VAL, BITS, TQ, Q) \
-  do \
-    { \
-      int sz = BITS / std::numeric_limits<unsigned char>::digits; \
-      if (sizeof (TQ char) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## char; \
-      else if (sizeof (TQ short) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## short; \
-      else if (sizeof (TQ int) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## int; \
-      else if (sizeof (TQ long) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## long; \
-      else if (sizeof (TQ long long) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## longlong; \
-      else \
-        VAL = oct_data_conv::dt_unknown; \
-    } \
-  while (0)
+#  define FIND_SIZED_INT_TYPE(VAL, BITS, TQ, Q) \
+     do \
+       { \
+         int sz = BITS / std::numeric_limits<unsigned char>::digits; \
+         if (sizeof (TQ char) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## char; \
+         else if (sizeof (TQ short) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## short; \
+         else if (sizeof (TQ int) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## int; \
+         else if (sizeof (TQ long) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## long; \
+         else if (sizeof (TQ long long) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## longlong; \
+         else \
+           VAL = oct_data_conv::dt_unknown; \
+       } \
+     while (0)
 #else
-#define FIND_SIZED_INT_TYPE(VAL, BITS, TQ, Q) \
-  do \
-    { \
-      int sz = BITS / std::numeric_limits<unsigned char>::digits; \
-      if (sizeof (TQ char) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## char; \
-      else if (sizeof (TQ short) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## short; \
-      else if (sizeof (TQ int) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## int; \
-      else if (sizeof (TQ long) == sz) \
-        VAL = oct_data_conv::dt_ ## Q ## long; \
-      else \
-        VAL = oct_data_conv::dt_unknown; \
-    } \
-  while (0)
+#  define FIND_SIZED_INT_TYPE(VAL, BITS, TQ, Q) \
+     do \
+       { \
+         int sz = BITS / std::numeric_limits<unsigned char>::digits; \
+         if (sizeof (TQ char) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## char; \
+         else if (sizeof (TQ short) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## short; \
+         else if (sizeof (TQ int) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## int; \
+         else if (sizeof (TQ long) == sz) \
+           VAL = oct_data_conv::dt_ ## Q ## long; \
+         else \
+           VAL = oct_data_conv::dt_unknown; \
+       } \
+     while (0)
 #endif
-
+   
 #define FIND_SIZED_FLOAT_TYPE(VAL, BITS) \
   do \
     { \
       int sz = BITS / std::numeric_limits<unsigned char>::digits; \
       if (sizeof (float) == sz) \
         VAL = oct_data_conv::dt_float; \
       else if (sizeof (double) == sz) \
         VAL = oct_data_conv::dt_double; \
diff --git a/liboctave/util/f2c-main.c b/liboctave/util/f2c-main.c
--- a/liboctave/util/f2c-main.c
+++ b/liboctave/util/f2c-main.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <assert.h>
 
 
 /* Dummy Fortran main declaration, needed in order to link to some
    Fortran libraries.  See the AC_F77_DUMMY_MAIN macro documentation.
    This function should never be called. */
diff --git a/liboctave/util/glob-match.cc b/liboctave/util/glob-match.cc
--- a/liboctave/util/glob-match.cc
+++ b/liboctave/util/glob-match.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <fnmatch.h>
 
 #include "glob-match.h"
 #include "oct-glob.h"
 
 bool
diff --git a/liboctave/util/lo-array-errwarn.cc b/liboctave/util/lo-array-errwarn.cc
--- a/liboctave/util/lo-array-errwarn.cc
+++ b/liboctave/util/lo-array-errwarn.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <sstream>
 
 #include "lo-array-errwarn.h"
 #include "lo-error.h"
 
 // Text constants used to shorten code below.
diff --git a/liboctave/util/lo-array-gripes.cc b/liboctave/util/lo-array-gripes.cc
--- a/liboctave/util/lo-array-gripes.cc
+++ b/liboctave/util/lo-array-gripes.cc
@@ -19,17 +19,17 @@ You should have received a copy of the G
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 // FIXME: All gripe_XXX functions deprecated in 4.2.  Remove file in 4.6
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <sstream>
 
 #include "lo-array-gripes.h"
 #include "lo-error.h"
 
 // Text constants used to shorten code below.
@@ -144,43 +144,43 @@ gripe_invalid_index (const std::string& 
 void
 gripe_invalid_index (octave_idx_type n, octave_idx_type nd,
                      octave_idx_type dim, const std::string& var)
 {
   std::ostringstream buf;
   buf << n + 1;
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
   gripe_invalid_index (buf.str (), nd, dim, var);
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic pop
+#  pragma GCC diagnostic pop
 #endif
 }
 
 void
 gripe_invalid_index (double n, octave_idx_type nd, octave_idx_type dim,
                      const std::string& var)
 {
   std::ostringstream buf;
   buf << n + 1;
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic push
-#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
+#  pragma GCC diagnostic push
+#  pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 #endif
 
   gripe_invalid_index (buf.str (), nd, dim, var);
 
 #if defined (HAVE_PRAGMA_GCC_DIAGNOSTIC)
-#pragma GCC diagnostic pop
+#  pragma GCC diagnostic pop
 #endif
 }
 
 
 // Gripe and exception for read access beyond the bounds of an array.
 
 class out_of_range : public index_exception
 {
diff --git a/liboctave/util/lo-cutils.c b/liboctave/util/lo-cutils.c
--- a/liboctave/util/lo-cutils.c
+++ b/liboctave/util/lo-cutils.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "lo-error.h"
 
 /* This gives us a better chance of finding a prototype for strptime
    on some systems.  */
 
 #if ! defined (_XOPEN_SOURCE)
@@ -58,17 +58,17 @@ octave_strcasecmp (const char *s1, const
 
 OCTAVE_API int
 octave_strncasecmp (const char *s1, const char *s2, size_t n)
 {
   return strncasecmp (s1, s2, n);
 }
 
 #ifdef HAVE_LOADLIBRARY_API
-#include <windows.h>
+#  include <windows.h>
 
 /* Need this since in C++ can't cast from int(*)() to void* */
 OCTAVE_API void *
 octave_w32_library_search (HINSTANCE handle, const char * name)
 {
   return (GetProcAddress (handle, name));
 }
 #endif
diff --git a/liboctave/util/lo-cutils.h b/liboctave/util/lo-cutils.h
--- a/liboctave/util/lo-cutils.h
+++ b/liboctave/util/lo-cutils.h
@@ -21,18 +21,18 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_lo_cutils_h)
 #define octave_lo_cutils_h 1
 
 #include <sys/types.h>
 
 #ifdef HAVE_LOADLIBRARY_API
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
+#  define WIN32_LEAN_AND_MEAN
+#  include <windows.h>
 #endif
 
 #ifdef __cplusplus
 extern "C" {
 #endif
 
 OCTAVE_API void
 octave_qsort (void *base, size_t n, size_t size,
diff --git a/liboctave/util/lo-ieee.cc b/liboctave/util/lo-ieee.cc
--- a/liboctave/util/lo-ieee.cc
+++ b/liboctave/util/lo-ieee.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cfloat>
 #include <cmath>
 #include <cstdlib>
 
 #include <limits>
 
diff --git a/liboctave/util/lo-math.h b/liboctave/util/lo-math.h
--- a/liboctave/util/lo-math.h
+++ b/liboctave/util/lo-math.h
@@ -19,22 +19,22 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_lo_math_h)
 #define octave_lo_math_h 1
 
 #if defined (__cplusplus)
-#include <cmath>
+#  include <cmath>
 // if #undef log2 is missing in cmath, undef it here
-#if defined (log2)
-#undef log2
-#endif
+#  if defined (log2)
+#    undef log2
+#  endif
 #else
-#include <math.h>
+#  include <math.h>
 #endif
 
 #if defined (HAVE_SUNMATH_H)
-#include <sunmath.h>
+#  include <sunmath.h>
 #endif
 
 #endif
diff --git a/liboctave/util/lo-regexp.cc b/liboctave/util/lo-regexp.cc
--- a/liboctave/util/lo-regexp.cc
+++ b/liboctave/util/lo-regexp.cc
@@ -18,28 +18,28 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <list>
 #include <sstream>
 #include <string>
 #include <vector>
 
 #if defined (HAVE_PCRE_H)
-#include <pcre.h>
+#  include <pcre.h>
 #elif defined (HAVE_PCRE_PCRE_H)
-#include <pcre/pcre.h>
+#  include <pcre/pcre.h>
 #endif
 
 #include "Matrix.h"
 #include "base-list.h"
 #include "lo-error.h"
 #include "oct-locbuf.h"
 #include "quit.h"
 #include "lo-regexp.h"
diff --git a/liboctave/util/lo-utils.cc b/liboctave/util/lo-utils.cc
--- a/liboctave/util/lo-utils.cc
+++ b/liboctave/util/lo-utils.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cctype>
 #include <cstdlib>
 #include <cstdio>
 #include <cstring>
 #include <cfloat>
 
diff --git a/liboctave/util/oct-base64.cc b/liboctave/util/oct-base64.cc
--- a/liboctave/util/oct-base64.cc
+++ b/liboctave/util/oct-base64.cc
@@ -15,26 +15,26 @@ FITNESS FOR A PARTICULAR PURPOSE.  See t
 for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
-#ifdef HAVE_CONFIG_H
-#include <config.h>
-#endif
+  #ifdef HAVE_CONFIG_H
+#    include <config.h>
+#  endif
 
-#include <algorithm>
+#  include <algorithm>
 
-#include <base64.h>
+#  include <base64.h>
 
-#include "Array.h"
-#include "oct-base64.h"
+#  include "Array.h"
+#  include "oct-base64.h"
 
 bool
 octave_base64_encode (const char *inc, const size_t inlen, char **out)
 {
   bool ret = false;
 
   size_t outlen = base64_encode_alloc (inc, inlen, out);
 
diff --git a/liboctave/util/oct-glob.cc b/liboctave/util/oct-glob.cc
--- a/liboctave/util/oct-glob.cc
+++ b/liboctave/util/oct-glob.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <algorithm>
 #include <string>
 
 #include <fnmatch.h>
 #include <glob.h>
 
@@ -75,17 +75,17 @@ octave_glob (const string_vector& pat)
     {
       std::string xpat = pat(i);
 
       if (! xpat.empty ())
         {
           glob_t glob_info;
 
 #if defined (OCTAVE_HAVE_WINDOWS_FILESYSTEM) \
-          && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM)
+    && ! defined (OCTAVE_HAVE_POSIX_FILESYSTEM)
           std::replace_if (xpat.begin (), xpat.end (),
                            std::bind2nd (std::equal_to<char> (), '\\'),
                            '/');
 #endif
 
           int err = gnulib::glob (xpat.c_str (), GLOB_NOSORT, 0, &glob_info);
 
           if (! err)
diff --git a/liboctave/util/oct-inttypes.cc b/liboctave/util/oct-inttypes.cc
--- a/liboctave/util/oct-inttypes.cc
+++ b/liboctave/util/oct-inttypes.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <fpucw.h>
 
 #include "lo-error.h"
 
 #include "oct-inttypes.h"
 
diff --git a/liboctave/util/oct-inttypes.h b/liboctave/util/oct-inttypes.h
--- a/liboctave/util/oct-inttypes.h
+++ b/liboctave/util/oct-inttypes.h
@@ -172,84 +172,84 @@ public:
   { return xop::op (static_cast<double> (x), y); }
 
   template <typename xop, typename T>
   static bool
   mop (double x, T y)
   { return xop::op (x, static_cast<double> (y)); }
 
 #ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
-#define DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS(T) \
-  template <typename xop> static OCTAVE_API bool \
-  external_mop (double, T); \
-  template <typename xop> static OCTAVE_API bool \
-  external_mop (T, double)
+#  define DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS(T) \
+     template <typename xop> static OCTAVE_API bool \
+     external_mop (double, T); \
+     template <typename xop> static OCTAVE_API bool \
+     external_mop (T, double)
 
-  DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (int64_t);
-  DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (uint64_t);
+     DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (int64_t);
+     DECLARE_EXTERNAL_LONG_DOUBLE_CMP_OPS (uint64_t);
 #endif
 
   // Typecasting to doubles won't work properly for 64-bit integers --
   // they lose precision.
   // If we have long doubles, use them...
 #ifdef OCTAVE_INT_USE_LONG_DOUBLE
-#ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
-#define DEFINE_LONG_DOUBLE_CMP_OP(T) \
-  template <typename xop> \
-  static bool \
-  mop (double x, T y) \
-  { \
-    return external_mop<xop> (x, y); \
-  } \
-  template <typename xop> \
-  static bool \
-  mop (T x, double y) \
-  { \
-    return external_mop<xop> (x, y); \
-  }
-#else
-#define DEFINE_LONG_DOUBLE_CMP_OP(T) \
-  template <typename xop> \
-  static bool \
-  mop (double x, T y) \
-  { \
-    return xop::op (static_cast<long double> (x), \
-                    static_cast<long double> (y)); \
-  } \
-  template <typename xop> \
-  static bool \
-  mop (T x, double y) \
-  { \
-    return xop::op (static_cast<long double> (x), \
-                    static_cast<long double> (y)); \
-  }
-#endif
+#  ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
+#    define DEFINE_LONG_DOUBLE_CMP_OP(T) \
+       template <typename xop> \
+       static bool \
+       mop (double x, T y) \
+       { \
+         return external_mop<xop> (x, y); \
+       } \
+       template <typename xop> \
+       static bool \
+       mop (T x, double y) \
+       { \
+         return external_mop<xop> (x, y); \
+       }
+#  else
+#    define DEFINE_LONG_DOUBLE_CMP_OP(T) \
+       template <typename xop> \
+       static bool \
+       mop (double x, T y) \
+       { \
+         return xop::op (static_cast<long double> (x), \
+                         static_cast<long double> (y)); \
+       } \
+       template <typename xop> \
+       static bool \
+       mop (T x, double y) \
+       { \
+         return xop::op (static_cast<long double> (x), \
+                         static_cast<long double> (y)); \
+       }
+#  endif
 #else
   // ... otherwise, use external handlers
 
   // FIXME: We could declare directly the mop methods as external,
   // but we can't do this because bugs in gcc (<= 4.3) prevent
   // explicit instantiations later in that case.
-#define DEFINE_LONG_DOUBLE_CMP_OP(T) \
-  template <typename xop> static OCTAVE_API bool \
-  emulate_mop (double, T); \
-  template <typename xop> \
-  static bool \
-  mop (double x, T y) \
-    { \
-      return emulate_mop<xop> (x, y); \
-    } \
-  template <typename xop> static OCTAVE_API bool \
-  emulate_mop (T, double); \
-  template <typename xop> \
-  static bool \
-  mop (T x, double y) \
-    { \
-      return emulate_mop<xop> (x, y); \
-    }
+#  define DEFINE_LONG_DOUBLE_CMP_OP(T) \
+     template <typename xop> static OCTAVE_API bool \
+     emulate_mop (double, T); \
+     template <typename xop> \
+     static bool \
+     mop (double x, T y) \
+       { \
+         return emulate_mop<xop> (x, y); \
+       } \
+     template <typename xop> static OCTAVE_API bool \
+     emulate_mop (T, double); \
+     template <typename xop> \
+     static bool \
+     mop (T x, double y) \
+       { \
+         return emulate_mop<xop> (x, y); \
+       }
 #endif
 
   DEFINE_LONG_DOUBLE_CMP_OP(int64_t)
   DEFINE_LONG_DOUBLE_CMP_OP(uint64_t)
 
 #undef DEFINE_LONG_DOUBLE_CMP_OP
 };
 
@@ -1144,17 +1144,17 @@ DECLARE_EXTERNAL_LONG_DOUBLE_OPS (octave
   template <typename T> \
   inline octave_int<T> \
   operator OP (const double& x, const octave_int<T>& y) \
   { return octave_int<T> (x OP static_cast<double> (y)); }
 
 #ifdef OCTAVE_INT_USE_LONG_DOUBLE
 // Handle mixed op using long double
 #ifdef OCTAVE_ENSURE_LONG_DOUBLE_OPERATIONS_ARE_NOT_TRUNCATED
-#define OCTAVE_INT_DOUBLE_BIN_OP(OP, NAME) \
+#  define OCTAVE_INT_DOUBLE_BIN_OP(OP, NAME) \
   OCTAVE_INT_DOUBLE_BIN_OP0(OP) \
   template <> \
   inline octave_int64 \
   operator OP (const double& x, const octave_int64& y) \
   { \
     return external_double_octave_int64_ ## NAME (x, y); \
   } \
   template <> \
@@ -1171,17 +1171,17 @@ DECLARE_EXTERNAL_LONG_DOUBLE_OPS (octave
   } \
   template <> \
   inline octave_uint64 \
   operator OP (const octave_uint64& x, const double& y) \
   { \
     return external_octave_uint64_double_ ## NAME (x, y); \
   }
 #else
-#define OCTAVE_INT_DOUBLE_BIN_OP(OP, NAME) \
+#  define OCTAVE_INT_DOUBLE_BIN_OP(OP, NAME) \
   OCTAVE_INT_DOUBLE_BIN_OP0(OP) \
   template <> \
   inline octave_int64 \
   operator OP (const double& x, const octave_int64& y) \
   { \
     return octave_int64 (x OP static_cast<long double> (y.value ())); \
   } \
   template <> \
diff --git a/liboctave/util/oct-locbuf.cc b/liboctave/util/oct-locbuf.cc
--- a/liboctave/util/oct-locbuf.cc
+++ b/liboctave/util/oct-locbuf.cc
@@ -16,28 +16,28 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 
 #include "lo-error.h"
 #include "oct-locbuf.h"
 
 // FIXME: Maybe we should querying for available physical memory?
 
 #ifndef OCTAVE_LOCBUF_CHUNKSIZE_MB
-#define OCTAVE_LOCBUF_CHUNKSIZE_MB 32
+#  define OCTAVE_LOCBUF_CHUNKSIZE_MB 32
 #endif
 
 // Each chunk will be at least this big.
 
 const size_t octave_chunk_buffer::chunk_size =
   static_cast<size_t> (OCTAVE_LOCBUF_CHUNKSIZE_MB) << 20;
 
 char *octave_chunk_buffer::top = 0;
diff --git a/liboctave/util/oct-mutex.cc b/liboctave/util/oct-mutex.cc
--- a/liboctave/util/oct-mutex.cc
+++ b/liboctave/util/oct-mutex.cc
@@ -16,26 +16,26 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "oct-mutex.h"
 #include "lo-error.h"
 
 #if defined (__WIN32__) && ! defined (__CYGWIN__)
-#include <windows.h>
+#  include <windows.h>
 #elif defined (HAVE_PTHREAD_H)
-#include <pthread.h>
+#  include <pthread.h>
 #endif
 
 void
 octave_base_mutex::lock (void)
 {
   (*current_liboctave_error_handler) ("mutex not supported on this platform");
 }
 
diff --git a/liboctave/util/oct-refcount.h b/liboctave/util/oct-refcount.h
--- a/liboctave/util/oct-refcount.h
+++ b/liboctave/util/oct-refcount.h
@@ -19,38 +19,38 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if ! defined (octave_oct_refcount_h)
 #define octave_oct_refcount_h 1
 
 #ifndef OCTAVE_CONFIG_INCLUDED
-# error "The file <octave/config.h> must be included before oct-refcount.h."
+#  error "The file <octave/config.h> must be included before oct-refcount.h."
 #endif
 
 #if defined (ENABLE_ATOMIC_REFCOUNT) && (defined (_MSC_VER) || defined (__GNUC__))
-# if defined (_MSC_VER)
-#  include <intrin.h>
-#  define OCTREFCOUNT_ATOMIC_INCREMENT(x) _InterlockedIncrement((long*)x)
-#  define OCTREFCOUNT_ATOMIC_DECREMENT(x) _InterlockedDecrement((long*)x)
-#  define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) _InterlockedExchangeAdd((long*)x,  1)
-#  define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) _InterlockedExchangeAdd((long*)x, -1)
-# elif defined (__GNUC__)
-#  define OCTREFCOUNT_ATOMIC_INCREMENT(x) __sync_add_and_fetch(x,  1)
-#  define OCTREFCOUNT_ATOMIC_DECREMENT(x) __sync_add_and_fetch(x, -1)
-#  define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) __sync_fetch_and_add(x,  1)
-#  define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) __sync_fetch_and_add(x, -1)
-# endif
+#  if defined (_MSC_VER)
+#    include <intrin.h>
+#    define OCTREFCOUNT_ATOMIC_INCREMENT(x) _InterlockedIncrement((long*)x)
+#    define OCTREFCOUNT_ATOMIC_DECREMENT(x) _InterlockedDecrement((long*)x)
+#    define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) _InterlockedExchangeAdd((long*)x,  1)
+#    define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) _InterlockedExchangeAdd((long*)x, -1)
+#  elif defined (__GNUC__)
+#    define OCTREFCOUNT_ATOMIC_INCREMENT(x) __sync_add_and_fetch(x,  1)
+#    define OCTREFCOUNT_ATOMIC_DECREMENT(x) __sync_add_and_fetch(x, -1)
+#    define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) __sync_fetch_and_add(x,  1)
+#    define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) __sync_fetch_and_add(x, -1)
+#  endif
 #else
 // Generic non-locking versions
-# define OCTREFCOUNT_ATOMIC_INCREMENT(x) ++(*(x))
-# define OCTREFCOUNT_ATOMIC_DECREMENT(x) --(*(x))
-# define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) (*(x))++
-# define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) (*(x))--
+#  define OCTREFCOUNT_ATOMIC_INCREMENT(x) ++(*(x))
+#  define OCTREFCOUNT_ATOMIC_DECREMENT(x) --(*(x))
+#  define OCTREFCOUNT_ATOMIC_INCREMENT_POST(x) (*(x))++
+#  define OCTREFCOUNT_ATOMIC_DECREMENT_POST(x) (*(x))--
 #endif
 
 // Encapsulates a reference counter.
 template <typename T>
 class octave_refcount
 {
 public:
   typedef T count_type;
diff --git a/liboctave/util/oct-rl-edit.c b/liboctave/util/oct-rl-edit.c
--- a/liboctave/util/oct-rl-edit.c
+++ b/liboctave/util/oct-rl-edit.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #if defined (USE_READLINE)
 
 #include <stdio.h>
 #include <stdlib.h>
 
 #include <readline/readline.h>
diff --git a/liboctave/util/oct-rl-hist.c b/liboctave/util/oct-rl-hist.c
--- a/liboctave/util/oct-rl-hist.c
+++ b/liboctave/util/oct-rl-hist.c
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "oct-rl-hist.h"
 
 #if defined (USE_READLINE)
 
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/liboctave/util/oct-shlib.cc b/liboctave/util/oct-shlib.cc
--- a/liboctave/util/oct-shlib.cc
+++ b/liboctave/util/oct-shlib.cc
@@ -17,46 +17,46 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <map>
 
 #if defined (HAVE_SHL_LOAD_API)
-#include <cerrno>
-#include <cstring>
+#  include <cerrno>
+#  include <cstring>
 #endif
 
 #if defined (HAVE_DYLD_API)
-#include <mach-o/dyld.h>
+#  include <mach-o/dyld.h>
 #endif
 
 extern "C"
 {
 #if defined (HAVE_DLOPEN_API)
-#if defined (HAVE_DLFCN_H)
-#include <dlfcn.h>
-#else
+#  if defined (HAVE_DLFCN_H)
+#    include <dlfcn.h>
+#  else
 extern void *dlopen (const char *, int);
 extern const char *dlerror (void);
 extern void *dlsym (void *, const char *);
 extern int dlclose (void *);
-#endif
+#  endif
 #elif defined (HAVE_SHL_LOAD_API)
-#include <dl.h>
+#  include <dl.h>
 #elif defined (HAVE_LOADLIBRARY_API)
-#define WIN32_LEAN_AND_MEAN
-#include <windows.h>
+#  define WIN32_LEAN_AND_MEAN
+#  include <windows.h>
 #endif
 }
 
 #include "file-stat.h"
 #include "lo-error.h"
 #include "oct-shlib.h"
 #include "str-vec.h"
 
@@ -186,25 +186,25 @@ octave_dlopen_shlib::octave_dlopen_shlib
   : octave_shlib::shlib_rep (f), library (0)
 {
   int flags = 0;
 
   // Use RTLD_NOW to resolve all symbols before dlopen returns.
   // By using this option, dlopen will detect errors and Octave
   // won't exit if there are unresolved symbols in the file we are
   // loading, and we may even get a useful diagnostic.
-#if defined (RTLD_NOW)
+#  if defined (RTLD_NOW)
   flags |= RTLD_NOW;
-#endif
+#  endif
 
   // Use RTLD_GLOBAL to export symbols from loaded objects so they are
   // available to other subsequently loaded libraries.
-#if defined (RTLD_GLOBAL)
+#  if defined (RTLD_GLOBAL)
   flags |= RTLD_GLOBAL;
-#endif
+#  endif
 
   library = dlopen (file.c_str (), flags);
 
   if (! library)
     {
       const char *msg = dlerror ();
 
       if (msg)
diff --git a/liboctave/util/oct-sort.cc b/liboctave/util/oct-sort.cc
--- a/liboctave/util/oct-sort.cc
+++ b/liboctave/util/oct-sort.cc
@@ -97,17 +97,17 @@ The Python license is
   products or services of Licensee, or any third party.
 
   8. By copying, installing or otherwise using Python 2.3, Licensee
   agrees to be bound by the terms and conditions of this License
   Agreement.
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 #include <algorithm>
 #include <functional>
 #include <cstring>
 #include <stack>
 
diff --git a/liboctave/util/pathsearch.cc b/liboctave/util/pathsearch.cc
--- a/liboctave/util/pathsearch.cc
+++ b/liboctave/util/pathsearch.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstdlib>
 
 #include <string>
 
 #include "lo-utils.h"
 #include "oct-env.h"
diff --git a/liboctave/util/singleton-cleanup.cc b/liboctave/util/singleton-cleanup.cc
--- a/liboctave/util/singleton-cleanup.cc
+++ b/liboctave/util/singleton-cleanup.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <lo-error.h>
 #include <singleton-cleanup.h>
 
 singleton_cleanup_list *singleton_cleanup_list::instance = 0;
 
 singleton_cleanup_list::~singleton_cleanup_list (void)
diff --git a/liboctave/util/sparse-sort.cc b/liboctave/util/sparse-sort.cc
--- a/liboctave/util/sparse-sort.cc
+++ b/liboctave/util/sparse-sort.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cassert>
 #include <cstring>
 
 #include "oct-sort.cc"
 #include "quit.h"
 
diff --git a/liboctave/util/sparse-util.cc b/liboctave/util/sparse-util.cc
--- a/liboctave/util/sparse-util.cc
+++ b/liboctave/util/sparse-util.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <stdio.h>
 #include <stdarg.h>
 #include "lo-error.h"
 #include "oct-sparse.h"
 #include "sparse-util.h"
 
diff --git a/liboctave/util/statdefs.h b/liboctave/util/statdefs.h
--- a/liboctave/util/statdefs.h
+++ b/liboctave/util/statdefs.h
@@ -21,23 +21,23 @@ along with Octave; see the file COPYING.
 */
 
 #if ! defined (octave_statdefs_h)
 #define octave_statdefs_h 1
 
 #include <sys/types.h>
 
 #ifdef HAVE_SYS_STAT_H
-#include <sys/stat.h>
+#  include <sys/stat.h>
 #endif
 
 #ifndef S_ISREG
-#ifndef mode_t
-#define mode_t unsigned short
-#endif
+#  ifndef mode_t
+#    define mode_t unsigned short
+#  endif
 #endif
 #if ! defined (S_ISBLK) && defined (S_IFBLK)
 #define S_ISBLK(m) (((m) & S_IFMT) == S_IFBLK)
 #endif
 #if ! defined (S_ISCHR) && defined (S_IFCHR)
 #define S_ISCHR(m) (((m) & S_IFMT) == S_IFCHR)
 #endif
 #if ! defined (S_ISDIR) && defined (S_IFDIR)
@@ -59,12 +59,12 @@ along with Octave; see the file COPYING.
 #define S_ISMPB(m) (((m) & S_IFMT) == S_IFMPB)
 #define S_ISMPC(m) (((m) & S_IFMT) == S_IFMPC)
 #endif
 #if ! defined (S_ISNWK) && defined (S_IFNWK)
 #define S_ISNWK(m) (((m) & S_IFMT) == S_IFNWK)
 #endif
 
 #ifndef S_ISLNK
-#undef HAVE_LSTAT
+#  undef HAVE_LSTAT
 #endif
 
 #endif
diff --git a/liboctave/util/str-vec.cc b/liboctave/util/str-vec.cc
--- a/liboctave/util/str-vec.cc
+++ b/liboctave/util/str-vec.cc
@@ -24,17 +24,17 @@ along with Octave; see the file COPYING.
 
 The function string_vector::list_in_columns was adapted from a similar
 function distributed in the GNU file utilities, copyright (C) 85, 88,
 90, 91, 95, 1996 Free Software Foundation, Inc.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <iostream>
 #include <string>
 
 #include "cmd-edit.h"
 #include "lo-utils.h"
 #include "str-vec.h"
diff --git a/liboctave/util/unwind-prot.cc b/liboctave/util/unwind-prot.cc
--- a/liboctave/util/unwind-prot.cc
+++ b/liboctave/util/unwind-prot.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "lo-error.h"
 #include "unwind-prot.h"
 
 void
 unwind_protect_safe::warn_unhandled_exception (void) const
 {
diff --git a/liboctave/util/url-transfer.cc b/liboctave/util/url-transfer.cc
--- a/liboctave/util/url-transfer.cc
+++ b/liboctave/util/url-transfer.cc
@@ -21,33 +21,33 @@ along with Octave; see the file COPYING.
 <http://www.gnu.org/licenses/>.
 
 */
 
 // Author: Alexander Barth <abarth@marine.usf.edu>
 // Author: jwe
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <fstream>
 #include <iomanip>
 #include <iostream>
 
 #include "dir-ops.h"
 #include "file-ops.h"
 #include "file-stat.h"
 #include "unwind-prot.h"
 #include "url-transfer.h"
 
 #ifdef HAVE_CURL
-#include <curl/curl.h>
-#include <curl/curlver.h>
-#include <curl/easy.h>
+#  include <curl/curl.h>
+#  include <curl/curlver.h>
+#  include <curl/easy.h>
 #endif
 
 void
 base_url_transfer::delete_file (const std::string& file)
 {
   octave_unlink (file);
 }
 
@@ -765,19 +765,19 @@ private:
   }
 };
 
 #undef SETOPT
 
 #endif
 
 #if defined (HAVE_CURL)
-# define REP_CLASS curl_transfer
+#  define REP_CLASS curl_transfer
 #else
-# define REP_CLASS base_url_transfer
+#  define REP_CLASS base_url_transfer
 #endif
 
 url_transfer::url_transfer (void) : rep (new REP_CLASS ())
 { }
 
 url_transfer::url_transfer (const std::string& host, const std::string& user,
                             const std::string& passwd, std::ostream& os)
   : rep (new REP_CLASS (host, user, passwd, os))
diff --git a/src/display-available.h b/src/display-available.h
--- a/src/display-available.h
+++ b/src/display-available.h
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef __cplusplus
-#include <new>
+#  include <new>
 extern "C" {
 #endif
 
 extern const char *display_available (int *dpy_avail);
 
 #ifdef __cplusplus
 }
 #endif
diff --git a/src/main-cli.cc b/src/main-cli.cc
--- a/src/main-cli.cc
+++ b/src/main-cli.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "defaults.h"
 #include "octave.h"
 #include "sysdep.h"
 
 int
 main (int argc, char **argv)
diff --git a/src/main-gui.cc b/src/main-gui.cc
--- a/src/main-gui.cc
+++ b/src/main-gui.cc
@@ -16,17 +16,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include "defaults.h"
 #include "octave.h"
 #include "octave-gui.h"
 #include "sysdep.h"
 
 int
diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -24,43 +24,43 @@ along with Octave; see the file COPYING.
 // NOTE: This program is supposed to be a small wrapper that exists
 // primarily to give up the controlling TTY and then exec Octave with
 // its GUI.  It may also execute Octave without the GUI or the command
 // line version of Octave that is not linked with GUI libraries.  So
 // that it remains small, it should NOT depend on or be linked with
 // liboctave or libinterp.
 
 #ifdef HAVE_CONFIG_H
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <cstdlib>
 #include <cstring>
 
 #include <algorithm>
 #include <iostream>
 #include <string>
 
 #include <sys/types.h>
 #include <unistd.h>
 
 #ifndef OCTAVE_VERSION
-#define OCTAVE_VERSION %OCTAVE_VERSION%
+#  define OCTAVE_VERSION %OCTAVE_VERSION%
 #endif
 
 #ifndef OCTAVE_ARCHLIBDIR
-#define OCTAVE_ARCHLIBDIR %OCTAVE_ARCHLIBDIR%
+#  define OCTAVE_ARCHLIBDIR %OCTAVE_ARCHLIBDIR%
 #endif
 
 #ifndef OCTAVE_BINDIR
-#define OCTAVE_BINDIR %OCTAVE_BINDIR%
+#  define OCTAVE_BINDIR %OCTAVE_BINDIR%
 #endif
 
 #ifndef OCTAVE_PREFIX
-#define OCTAVE_PREFIX %OCTAVE_PREFIX%
+#  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
 #include "display-available.h"
 #include "shared-fcns.h"
 
 #include <cstdlib>
 
 #if (defined (HAVE_OCTAVE_GUI) \
diff --git a/src/mkoctfile.in.cc b/src/mkoctfile.in.cc
--- a/src/mkoctfile.in.cc
+++ b/src/mkoctfile.in.cc
@@ -17,17 +17,17 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <cstring>
 #include <map>
 #include <list>
 #include <algorithm>
 #include <iostream>
@@ -37,35 +37,35 @@ along with Octave; see the file COPYING.
 
 #include <unistd.h>
 
 // This mess suggested by the autoconf manual.
 
 #include <sys/types.h>
 
 #if defined HAVE_SYS_WAIT_H
-#include <sys/wait.h>
+#  include <sys/wait.h>
 #endif
 
 #ifndef WIFEXITED
-#define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
+#  define WIFEXITED(stat_val) (((stat_val) & 255) == 0)
 #endif
 
 #ifndef WEXITSTATUS
-#define WEXITSTATUS(stat_val) (static_cast<unsigned> (stat_val) >> 8)
+#  define WEXITSTATUS(stat_val) (static_cast<unsigned> (stat_val) >> 8)
 #endif
 
 static std::map<std::string, std::string> vars;
 
 #ifndef OCTAVE_VERSION
-#define OCTAVE_VERSION %OCTAVE_CONF_VERSION%
+#  define OCTAVE_VERSION %OCTAVE_CONF_VERSION%
 #endif
 
 #ifndef OCTAVE_PREFIX
-#define OCTAVE_PREFIX %OCTAVE_CONF_PREFIX%
+#  define OCTAVE_PREFIX %OCTAVE_CONF_PREFIX%
 #endif
 
 #include "shared-fcns.h"
 
 static std::string
 get_line (FILE *fp)
 {
   static std::vector<char> buf (100);
diff --git a/src/octave-config.in.cc b/src/octave-config.in.cc
--- a/src/octave-config.in.cc
+++ b/src/octave-config.in.cc
@@ -17,27 +17,27 @@ for more details.
 
 You should have received a copy of the GNU General Public License
 along with Octave; see the file COPYING.  If not, see
 <http://www.gnu.org/licenses/>.
 
 */
 
 #if defined (HAVE_CONFIG_H)
-#include <config.h>
+#  include <config.h>
 #endif
 
 #include <string>
 #include <map>
 #include <iostream>
 #include <algorithm>
 #include <cstdlib>
 
 #ifndef OCTAVE_PREFIX
-#define OCTAVE_PREFIX %OCTAVE_PREFIX%
+#  define OCTAVE_PREFIX %OCTAVE_PREFIX%
 #endif
 
 #include "shared-fcns.h"
 
 static std::map<std::string,std::string> vars;
 
 static std::string usage_msg = "usage: octave-config [options]";
 
diff --git a/src/shared-fcns.h b/src/shared-fcns.h
--- a/src/shared-fcns.h
+++ b/src/shared-fcns.h
@@ -21,18 +21,18 @@ along with Octave; see the file COPYING.
 */
 
 #if defined (__WIN32__) && ! defined (_POSIX_VERSION)
 
 #include <windows.h>
 #include <tlhelp32.h>
 
 #ifdef _MSC_VER
-#define popen _popen
-#define pclose _pclose
+#  define popen _popen
+#  define pclose _pclose
 #endif
 
 static std::string
 w32_get_octave_home (void)
 {
   std::string retval;
 
   std::string bin_dir;
