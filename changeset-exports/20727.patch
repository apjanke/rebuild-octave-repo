# HG changeset patch
# User Rik <rik@octave.org>
# Date 1447972744 28800
#      Thu Nov 19 14:39:04 2015 -0800
# Node ID a5949b3d23323d8d3f25f2c4aa822421e6dfa0eb
# Parent  25d676f9619c3afe9994ab15c3f7aa7fe60997f5
Preface warning() messages with name of function when possible.

* load-save.cc, ls-mat5.cc, variables.cc, loadobj.m, doc.m, mkoctfile.m,
fminbnd.m, pkg.m, axis.m, pcg.m, pcr.m, svds.m, kolmogorov_smirnov_test_2.m:
Preface warning() messages with name of function when possible.

diff --git a/libinterp/corefcn/load-save.cc b/libinterp/corefcn/load-save.cc
--- a/libinterp/corefcn/load-save.cc
+++ b/libinterp/corefcn/load-save.cc
@@ -1416,17 +1416,18 @@ dump_octave_core (void)
 
           if (file.file_id >= 0)
             {
               dump_octave_core (file, fname, format, save_as_floats);
 
               file.close ();
             }
           else
-            warning ("unable to open '%s' for writing...", fname);
+            warning ("dump_octave_core: unable to open '%s' for writing...",
+                     fname);
         }
       else
 #endif /* HAVE_HDF5 */
         // don't insert any commands here!  The open brace below must
         // go with the else above!
         {
 #ifdef HAVE_ZLIB
           if (use_zlib)
@@ -1435,31 +1436,33 @@ dump_octave_core (void)
 
               if (file)
                 {
                   dump_octave_core (file, fname, format, save_as_floats);
 
                   file.close ();
                 }
               else
-                warning ("unable to open '%s' for writing...", fname);
+                warning ("dump_octave_core: unable to open '%s' for writing...",
+                         fname);
             }
           else
 #endif
             {
               std::ofstream file (fname, mode);
 
               if (file)
                 {
                   dump_octave_core (file, fname, format, save_as_floats);
 
                   file.close ();
                 }
               else
-                warning ("unable to open '%s' for writing...", fname);
+                warning ("dump_octave_core: unable to open '%s' for writing...",
+                         fname);
             }
         }
     }
 }
 
 DEFUN (save, args, nargout,
        "-*- texinfo -*-\n\
 @deftypefn  {Command} {} save file\n\
diff --git a/libinterp/corefcn/ls-mat5.cc b/libinterp/corefcn/ls-mat5.cc
--- a/libinterp/corefcn/ls-mat5.cc
+++ b/libinterp/corefcn/ls-mat5.cc
@@ -1560,17 +1560,17 @@ read_mat5_binary_element (std::istream& 
   return retval;
 
 data_read_error:
 early_read_error:
   error ("load: trouble reading binary file '%s'", filename.c_str ());
   return std::string ();
 
 skip_ahead:
-  warning ("skipping over '%s'", retval.c_str ());
+  warning ("load: skipping over '%s'", retval.c_str ());
   is.seekg (pos + static_cast<std::streamoff> (element_length));
   return read_mat5_binary_element (is, filename, swap, global, tc);
 }
 
 int
 read_mat5_binary_file_header (std::istream& is, bool& swap, bool quiet,
                               const std::string& filename)
 {
diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -1370,17 +1370,17 @@ public:
            << (elements == 1 ? " element" : " elements")
            << " using " << bytes << (bytes == 1 ? " byte" : " bytes")
            << "\n";
       }
   }
 
   // Parse the string whos_line_format, and return a parameter list,
   // containing all information needed to print the given
-  // attributtes of the symbols.
+  // attributes of the symbols.
   std::list<whos_parameter> parse_whos_line_format (void)
   {
     int idx;
     size_t format_len = Vwhos_line_format.length ();
     char garbage;
     std::list<whos_parameter> params;
 
     size_t bytes1;
diff --git a/scripts/@ftp/loadobj.m b/scripts/@ftp/loadobj.m
--- a/scripts/@ftp/loadobj.m
+++ b/scripts/@ftp/loadobj.m
@@ -24,17 +24,17 @@ function b = loadobj (a)
   b.curlhandle = __ftp__ (b.host, b.username, b.password);
   if (isfield (b, "dir"))
     if (! isempty (b.dir))
       __ftp_cwd__ (b.curlhandle, b.dir);
     endif
     b = rmfield (b, "dir");
   elseif (isfield (b, "remotePwd"))
     ## FIXME: Can we read matlab java stringBuffer objects?
-    warning ("can not change remote directory in loaded FTP object");
+    warning ("@ftp/loadobj: can not change remote directory in loaded FTP object");
     b = rmfield (b, "remotePwd");
   endif
 endfunction
 
 
 ## No test possible for interactive function.
 %!assert (1)
 
diff --git a/scripts/help/doc.m b/scripts/help/doc.m
--- a/scripts/help/doc.m
+++ b/scripts/help/doc.m
@@ -100,17 +100,17 @@ function retval = doc (function_name)
       if (have_fname)
         status = system (sprintf ("%s --index-search \"%s\"", cmd, function_name));
       endif
 
 
       if (! (have_fname && status == 0))
         status = system (cmd);
         if (status == 127)
-          warning ("unable to find info program '%s'", info_program ());
+          warning ("doc: unable to find info program '%s'", info_program ());
         endif
       endif
 
       if (nargout > 0)
         retval = status;
       endif
 
     endif
diff --git a/scripts/miscellaneous/mkoctfile.m b/scripts/miscellaneous/mkoctfile.m
--- a/scripts/miscellaneous/mkoctfile.m
+++ b/scripts/miscellaneous/mkoctfile.m
@@ -163,13 +163,13 @@ function [output, status] = mkoctfile (v
 
   if (nargout > 0)
     [output, status] = deal (out, sys);
   else
     printf ("%s", out);
   endif
 
   if (sys != 0)
-    warning ("mkoctfile exited with failure status");
+    warning ("mkoctfile: building exited with failure status");
   endif
 
 endfunction
 
diff --git a/scripts/optimization/fminbnd.m b/scripts/optimization/fminbnd.m
--- a/scripts/optimization/fminbnd.m
+++ b/scripts/optimization/fminbnd.m
@@ -226,17 +226,17 @@ function [x, fval, info, output] = fminb
       if (info == 0)
         print_exit_msg (info, struct("fx",fval));
       endif
     case "final"
       print_exit_msg (info, struct("TolX", tolx, "fx", fval));
     case "off"
       "skip";
     otherwise
-      warning ("unknown option for Display: '%s'", displ);
+      warning ("fminbnd: unknown option for Display: '%s'", displ);
   endswitch
 
   output.iterations = niter;
   output.funcCount = nfev;
   output.bracket = [a, b];
   ## FIXME: bracketf possibly unavailable.
 
 endfunction
diff --git a/scripts/pkg/pkg.m b/scripts/pkg/pkg.m
--- a/scripts/pkg/pkg.m
+++ b/scripts/pkg/pkg.m
@@ -440,28 +440,28 @@ function [local_packages, global_package
         global_packages = archprefix;
       elseif (numel (files) >= 1 && ischar (files{1}))
         prefix = tilde_expand (files{1});
         if (! exist (prefix, "dir"))
           [status, msg] = mkdir (prefix);
           if (status == 0)
             error ("pkg: cannot create prefix %s: %s", prefix, msg);
           endif
-          warning ("creating the directory %s\n", prefix);
+          warning ("pkg: creating the directory %s\n", prefix);
         endif
         local_packages = prefix = canonicalize_file_name (prefix);
         user_prefix = true;
         if (numel (files) >= 2 && ischar (files{2}))
           archprefix = tilde_expand (files{2});
           if (! exist (archprefix, "dir"))
             [status, msg] = mkdir (archprefix);
             if (status == 0)
               error ("pkg: cannot create archprefix %s: %s", archprefix, msg);
             endif
-            warning ("creating the directory %s\n", archprefix);
+            warning ("pkg: creating the directory %s\n", archprefix);
             global_packages = archprefix = canonicalize_file_name (archprefix);
           endif
         endif
       else
         error ("pkg: prefix action requires a directory input, or an output argument");
       endif
 
     case "local_list"
@@ -544,17 +544,17 @@ function [local_packages, global_package
     case "update"
       installed_pkgs_lst = installed_packages (local_list, global_list);
       if (numel (files) > 0)
          update_lst = {};
          installed_names = {installed_pkgs_list.name}';
          for i = 1:numel (files)
            idx = find (strcmp (files{i}, installed_names), 1);
            if (isempty (idx))
-             warning ("Package %s is not installed - not updating this package", files{i});
+             warning ("pkg: package %s is not installed - skipping update", files{i});
            else
              update_lst = { update_lst, installed_pkgs_lst{idx} };
            endif
          endfor
          installed_pkgs_lst = update_lst;
       endif
       for i = 1:numel (installed_pkgs_lst)
         installed_pkg_name = installed_pkgs_lst{i}.name;
diff --git a/scripts/plot/appearance/axis.m b/scripts/plot/appearance/axis.m
--- a/scripts/plot/appearance/axis.m
+++ b/scripts/plot/appearance/axis.m
@@ -274,17 +274,17 @@ function limits = __axis__ (ca, ax, vara
       endif
       if (any (ax == "z"))
         set (ca, "zticklabelmode", "auto");
       else
         set (ca, "zticklabel", "");
       endif
 
     else
-      warning ("unknown axis option '%s'", ax);
+      warning ("axis: unknown option '%s'", ax);
     endif
 
   elseif (isvector (ax))
 
     len = length (ax);
 
     if (len != 2 && len != 4 && len != 6)
       error ("axis: LIMITS vector must have 2, 4, or 6 elements");
diff --git a/scripts/sparse/pcg.m b/scripts/sparse/pcg.m
--- a/scripts/sparse/pcg.m
+++ b/scripts/sparse/pcg.m
@@ -365,22 +365,22 @@ function [x, flag, relres, iter, resvec,
 
   flag = 0;
   relres = resvec(iter-1,1) ./ resvec(1,1);
   iter -= 2;
   if (iter >= maxit - 2)
     flag = 1;
     if (nargout < 2)
       warning ("pcg: maximum number of iterations (%d) reached\n", iter);
-      warning ("the initial residual norm was reduced %g times.\n", ...
+      warning ("pcg: the initial residual norm was reduced %g times.\n",
                1.0 / relres);
     endif
   elseif (nargout < 2)
     fprintf (stderr, "pcg: converged in %d iterations. ", iter);
-    fprintf (stderr, "the initial residual norm was reduced %g times.\n",...
+    fprintf (stderr, "pcg: the initial residual norm was reduced %g times.\n",
              1.0/relres);
   endif
 
   if (! matrix_positive_definite)
     flag = 3;
     if (nargout < 2)
       warning ("pcg: matrix not positive definite?\n");
     endif
diff --git a/scripts/sparse/pcr.m b/scripts/sparse/pcr.m
--- a/scripts/sparse/pcr.m
+++ b/scripts/sparse/pcr.m
@@ -280,21 +280,22 @@ function [x, flag, relres, iter, resvec]
 
   flag = 0;
   relres = resvec(iter-1) ./ resvec(1);
   iter -= 2;
   if (iter >= maxit-2)
     flag = 1;
     if (nargout < 2)
       warning ("pcr: maximum number of iterations (%d) reached\n", iter);
-      warning ("the initial residual norm was reduced %g times.\n", 1.0/relres);
+      warning ("pcr: the initial residual norm was reduced %g times\n",
+               1.0/relres);
     endif
   elseif (nargout < 2 && ! breakdown)
     fprintf (stderr, "pcr: converged in %d iterations. \n", iter);
-    fprintf (stderr, "the initial residual norm was reduced %g times.\n",
+    fprintf (stderr, "pcr: the initial residual norm was reduced %g times\n",
              1.0 / relres);
   endif
 
   if (breakdown)
     flag = 3;
     if (nargout < 2)
       warning ("pcr: breakdown occurred:\n");
       warning ("system matrix singular or preconditioner indefinite?\n");
diff --git a/scripts/sparse/svds.m b/scripts/sparse/svds.m
--- a/scripts/sparse/svds.m
+++ b/scripts/sparse/svds.m
@@ -214,19 +214,19 @@ function [u, s, v, flag] = svds (A, k, s
         ind = ind(end+1-k:end); # smallest eigenvalues
       else
         ind = ind(1:k);         # largest eigenvalues
       endif
     endif
     s = s(ind);
 
     if (length (s) < k)
-      warning ("returning fewer singular values than requested");
+      warning ("svds: returning fewer singular values than requested");
       if (! ischar (sigma))
-        warning ("try increasing the value of sigma");
+        warning ("svds: try increasing the value of sigma");
       endif
     endif
 
     s *= max_a;
   endif
 
   if (nargout < 2)
     u = s;
diff --git a/scripts/statistics/tests/kolmogorov_smirnov_test_2.m b/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
--- a/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
+++ b/scripts/statistics/tests/kolmogorov_smirnov_test_2.m
@@ -71,17 +71,17 @@ function [pval, ks, d] = kolmogorov_smir
   [s, i] = sort ([x; y]);
   count (find (i <= n_x)) = 1 / n_x;
   count (find (i > n_x)) = - 1 / n_y;
 
   z = cumsum (count);
   ds = diff (s);
   if (any (ds == 0))
     ## There are some ties, so keep only those changes.
-    warning ("cannot compute correct p-values with ties");
+    warning ("kolmogorov_smirnov_test_2: cannot compute correct p-values with ties");
     elems = [find(ds); n_x+n_y];
     z = z(elems);
   endif
 
   if (strcmp (alt, "!=") || strcmp (alt, "<>"))
     d    = max (abs (z));
     ks   = sqrt (n) * d;
     pval = 1 - kolmogorov_smirnov_cdf (ks);
