# HG changeset patch
# User Rik <rik@octave.org>
# Date 1403800418 25200
#      Thu Jun 26 09:33:38 2014 -0700
# Node ID a0fd659148115ec9734bc789de8aadc9298759c1
# Parent  c677d9bd6bacfc716b798d5fd4770955e4e2c833
Fix segfault in exist() when checking faulty mex/oct files (bug #36067).

* variables.cc (symbol_exist): Wrap symbol table lookup in try/catch block.

diff --git a/libinterp/corefcn/variables.cc b/libinterp/corefcn/variables.cc
--- a/libinterp/corefcn/variables.cc
+++ b/libinterp/corefcn/variables.cc
@@ -413,17 +413,22 @@ symbol_exist (const std::string& name, c
 
   // We shouldn't need to look in the global symbol table, since any name
   // that is visible in the current scope will be in the local symbol table.
 
   octave_value val;
 
   if (search_any || search_builtin)
     {
-      val = safe_symbol_lookup (name);
+      // Require a try block because symbol_lookup will attempt unsafe load
+      // of .oct/.mex file.
+      try
+        { val = safe_symbol_lookup (name); }
+      catch (octave_execution_exception)
+        { }
 
       if (val.is_defined () && val.is_builtin_function ())
         return 5;
 
       if (search_builtin)
         return 0;
     }
 
@@ -457,17 +462,17 @@ symbol_exist (const std::string& name, c
 
       if (fs)
         {
           if (search_any || search_file)
           {
             if (fs.is_dir ())
               return 7;
 
-            size_t len = file_name.length ();
+            len = file_name.length ();
 
             if (len > 4 && (file_name.substr (len-4) == ".oct"
                             || file_name.substr (len-4) == ".mex"))
               return 3;
             else
               return 2;
           }
           else if (search_dir && fs.is_dir ())
