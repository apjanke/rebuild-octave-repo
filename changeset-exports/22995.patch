# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1483549352 18000
#      Wed Jan 04 12:02:32 2017 -0500
# Node ID 5fdf29cb4ab831c66f3560b05418795025bba1d5
# Parent  706c30f29bf19a2177815f943487e70c20eefc10
set OCTAVE_IDX_TYPE correctly when using --disable-64 (bug #49985)

* configure.ac: Correctly initialize OCTAVE_IDX_TYPE.
From A. R. Burgers.

diff --git a/configure.ac b/configure.ac
--- a/configure.ac
+++ b/configure.ac
@@ -330,39 +330,41 @@ AC_ARG_ENABLE([docs],
      warn_docs="building documentation disabled; make dist will fail"
      OCTAVE_CONFIGURE_WARNING([warn_docs])
    fi], [])
 
 ### If possible, use a 64-bit integer type for array dimensions and indexing.
 
 AC_CHECK_SIZEOF([void *])
 if test $ac_cv_sizeof_void_p -ge 8; then
-  OCTAVE_IDX_TYPE=int64_t
   ENABLE_64=yes
 else
-  OCTAVE_IDX_TYPE=int32_t
   ENABLE_64=no
 fi
      
 AC_ARG_ENABLE(64,
   [AS_HELP_STRING([--disable-64],
     [don't use 64-bit integers for array dimensions and indexing])],
   [case $enableval in
      yes) ENABLE_64=yes ;;
      no) ENABLE_64=no ;;
      *) AC_MSG_ERROR([bad value $enableval for --enable-64]) ;;
    esac])
 
 if test $ENABLE_64 = yes; then
-  if test $ac_cv_sizeof_void_p -lt 8; then
+  if test $ac_cv_sizeof_void_p -ge 8; then
+    OCTAVE_IDX_TYPE=int64_t
+  else
     warn_64_bit="--enable-64 option given but pointers are less than 64-bits wide; disabling 64-bit indexing"
     OCTAVE_CONFIGURE_WARNING([warn_64_bit])
     OCTAVE_IDX_TYPE=int32_t
     ENABLE_64=no
   fi
+else
+  OCTAVE_IDX_TYPE=int32_t
 fi
 
 AC_SUBST(ENABLE_64)
 if test $ENABLE_64 = yes; then
   AC_DEFINE(OCTAVE_ENABLE_64, 1,
     [Define to 1 if using 64-bit integers for array dimensions and indexing.])
 fi
 
