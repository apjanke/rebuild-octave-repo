# HG changeset patch
# User Rik <rik@octave.org>
# Date 1372627142 25200
#      Sun Jun 30 14:19:02 2013 -0700
# Node ID 9e0618443c2b5afdcb084a3c96018958992f4b34
# Parent  b04ae15530fc55696879479e0e155711fa41e026
Rename saving_history() to history_save().

* NEWS: Announch renaming.

* doc/interpreter/basics.txi: Use history_save in manual.

* libgui/src/resource-manager.cc: Update list of Octave keywords.

* libinterp/interpfcn/oct-hist.cc(Fsaving_history): Rename function.
Rename seealso links in other functions.

* libinterp/octave.cc(octave_process_command_line): Call history_save(0)
for -H option.

* libinterp/parse-tree/pt-assign.cc: Update list of old built-in variables.

* scripts/deprecated/saving_history.m: Add deprecated command to call history_save().

* scripts/deprecated/module.mk: Add deprecated saving_history.m to build system.

diff --git a/NEWS b/NEWS
--- a/NEWS
+++ b/NEWS
@@ -171,29 +171,28 @@ Summary of important user-visible change
     are now available (provided that Octave is compiled with support for
     Java enabled):
 
       helpdlg    listdlg   questdlg
       inputdlg   msgbox    warndlg
 
  ** Other new functions added in 3.8.0:
 
-      base64_decode               ellipke         polyeig              
-      base64_encode               erfcinv         rgbplot                   
-      betaincinv                  erfi            save_default_options
-      built_in_docstrings_file    expint          shrinkfaces           
-      cmpermute                   findfigs        splinefit             
-      cmunique                    fminsearch      strjoin               
-      colorcube                   gallery         struct2hdl            
-      copyobj                     gco             tetramesh             
-      dawson                      hdl2struct      waterfall             
-      dblist                      importdata  
-      doc_cache_create            iscolormap
-      ellipj                      lines   
-                           
+      base64_decode               ellipke         lines      
+      base64_encode               erfcinv         polyeig                   
+      betaincinv                  erfi            rgbplot             
+      built_in_docstrings_file    expint          save_default_options  
+      cmpermute                   findfigs        shrinkfaces           
+      cmunique                    fminsearch      splinefit             
+      colorcube                   gallery         strjoin               
+      copyobj                     gco             struct2hdl            
+      dawson                      hdl2struct      tetramesh             
+      dblist                      history_save    waterfall           
+      doc_cache_create            importdata
+      ellipj                      iscolormap
 
  ** Deprecated functions.
 
     The following functions were deprecated in Octave 3.4 and have been
     removed from Octave 3.8.
                                            
       autocor    dispatch              is_global    setstr
       autocov    fstat                 krylovb      strerror
@@ -211,16 +210,17 @@ Summary of important user-visible change
       java_debug
       java_get
       java_invoke
       java_new
       java_set
       java_unsigned_conversion
       javafields
       javamethods
+      saving_history
 
     The following keywords have been deprecated in Octave 3.8 and will
     be removed from Octave 3.12 (or whatever version is the second major
     release after 3.8):
 
       static
 
     The following configuration variables have been deprecated in Octave
diff --git a/doc/interpreter/basics.txi b/doc/interpreter/basics.txi
--- a/doc/interpreter/basics.txi
+++ b/doc/interpreter/basics.txi
@@ -717,17 +717,17 @@ re-running chunks of commands from the h
 @DOCSTRING(edit_history)
 
 @DOCSTRING(run_history)
 
 @noindent
 Octave also allows you customize the details of when, where, and how history
 is saved.
 
-@DOCSTRING(saving_history)
+@DOCSTRING(history_save)
 
 @DOCSTRING(history_control)
 
 @DOCSTRING(history_file)
 
 @DOCSTRING(history_size)
 
 @DOCSTRING(history_timestamp_format_string)
diff --git a/libgui/src/resource-manager.cc b/libgui/src/resource-manager.cc
--- a/libgui/src/resource-manager.cc
+++ b/libgui/src/resource-manager.cc
@@ -928,16 +928,17 @@ resource_manager::octave_keywords (void)
       "hggroup "
       "hidden "
       "hilb "
       "hist "
       "histc "
       "history "
       "history_control "
       "history_file "
+      "history_save "
       "history_size "
       "history_timestamp_format_string "
       "hold "
       "home "
       "horzcat "
       "hot "
       "hotelling_test "
       "hotelling_test_2 "
@@ -1450,17 +1451,16 @@ resource_manager::octave_keywords (void)
       "save_default_options "
       "save_header_format_string "
       "save_precision "
       "saveas "
       "saveaudio "
       "saveimage "
       "saveobj "
       "savepath "
-      "saving_history "
       "scanf "
       "scatter "
       "scatter3 "
       "schur "
       "sec "
       "secd "
       "sech "
       "semicolon "
diff --git a/libinterp/interpfcn/oct-hist.cc b/libinterp/interpfcn/oct-hist.cc
--- a/libinterp/interpfcn/oct-hist.cc
+++ b/libinterp/interpfcn/oct-hist.cc
@@ -750,18 +750,18 @@ controlling how commands are saved on th
 of values includes @code{ignorespace}, lines which begin with a space\n\
 character are not saved in the history list.  A value of @code{ignoredups}\n\
 causes lines matching the previous history entry to not be saved.\n\
 A value of @code{ignoreboth} is shorthand for @code{ignorespace} and\n\
 @code{ignoredups}.  A value of @code{erasedups} causes all previous lines\n\
 matching the current line to be removed from the history list before that\n\
 line is saved.  Any value not in the above list is ignored.  If\n\
 @code{history_control} is the empty string, all commands are saved on\n\
-the history list, subject to the value of @code{saving_history}.\n\
-@seealso{history_file, history_size, history_timestamp_format_string, saving_history}\n\
+the history list, subject to the value of @code{history_save}.\n\
+@seealso{history_file, history_size, history_timestamp_format_string, history_save}\n\
 @end deftypefn")
 {
   std::string old_history_control = command_history::histcontrol ();
 
   std::string tmp = old_history_control;
 
   octave_value retval = set_internal_variable (tmp, args, nargout,
                                                "history_control");
@@ -774,17 +774,17 @@ the history list, subject to the value o
 
 DEFUN (history_size, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} history_size ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} history_size (@var{new_val})\n\
 Query or set the internal variable that specifies how many entries\n\
 to store in the history file.  The default value is @code{1000},\n\
 but may be overridden by the environment variable @w{@env{OCTAVE_HISTSIZE}}.\n\
-@seealso{history_file, history_timestamp_format_string, saving_history}\n\
+@seealso{history_file, history_timestamp_format_string, history_save}\n\
 @end deftypefn")
 {
   int old_history_size = command_history::size ();
 
   int tmp = old_history_size;
 
   octave_value retval = set_internal_variable (tmp, args, nargout,
                                                "history_size", -1,
@@ -799,17 +799,17 @@ but may be overridden by the environment
 DEFUN (history_file, args, nargout,
   "-*- texinfo -*-\n\
 @deftypefn  {Built-in Function} {@var{val} =} history_file ()\n\
 @deftypefnx {Built-in Function} {@var{old_val} =} history_file (@var{new_val})\n\
 Query or set the internal variable that specifies the name of the\n\
 file used to store command history.  The default value is\n\
 @file{~/.octave_hist}, but may be overridden by the environment\n\
 variable @w{@env{OCTAVE_HISTFILE}}.\n\
-@seealso{history_size, saving_history, history_timestamp_format_string}\n\
+@seealso{history_size, history_save, history_timestamp_format_string}\n\
 @end deftypefn")
 {
   std::string old_history_file = command_history::file ();
 
   std::string tmp = old_history_file;
 
   octave_value retval = set_internal_variable (tmp, args, nargout,
                                                "history_file");
@@ -832,40 +832,40 @@ value is\n\
 \n\
 @example\n\
 \"# Octave VERSION, %a %b %d %H:%M:%S %Y %Z <USER@@HOST>\"\n\
 @end example\n\
 \n\
 When called from inside a function with the \"local\" option, the variable is\n\
 changed locally for the function and any subroutines it calls.  The original\n\
 variable value is restored when exiting the function.\n\
-@seealso{strftime, history_file, history_size, saving_history}\n\
+@seealso{strftime, history_file, history_size, history_save}\n\
 @end deftypefn")
 {
   return SET_INTERNAL_VARIABLE (history_timestamp_format_string);
 }
 
-DEFUN (saving_history, args, nargout,
+DEFUN (history_save, args, nargout,
   "-*- texinfo -*-\n\
-@deftypefn  {Built-in Function} {@var{val} =} saving_history ()\n\
-@deftypefnx {Built-in Function} {@var{old_val} =} saving_history (@var{new_val})\n\
-@deftypefnx {Built-in Function} {} saving_history (@var{new_val}, \"local\")\n\
+@deftypefn  {Built-in Function} {@var{val} =} history_save ()\n\
+@deftypefnx {Built-in Function} {@var{old_val} =} history_save (@var{new_val})\n\
+@deftypefnx {Built-in Function} {} history_save (@var{new_val}, \"local\")\n\
 Query or set the internal variable that controls whether commands entered\n\
 on the command line are saved in the history file.\n\
 \n\
 When called from inside a function with the \"local\" option, the variable is\n\
 changed locally for the function and any subroutines it calls.  The original\n\
 variable value is restored when exiting the function.\n\
 @seealso{history_control, history_file, history_size, history_timestamp_format_string}\n\
 @end deftypefn")
 {
-  bool old_saving_history = ! command_history::ignoring_entries ();
+  bool old_history_save = ! command_history::ignoring_entries ();
 
-  bool tmp = old_saving_history;
+  bool tmp = old_history_save;
 
   octave_value retval = set_internal_variable (tmp, args, nargout,
-                                               "saving_history");
+                                               "history_save");
 
-  if (tmp != old_saving_history)
+  if (tmp != old_history_save)
     command_history::ignore_entries (! tmp);
 
   return retval;
 }
diff --git a/libinterp/octave.cc b/libinterp/octave.cc
--- a/libinterp/octave.cc
+++ b/libinterp/octave.cc
@@ -677,17 +677,17 @@ octave_process_command_line (int argc, c
         case '?':
           // Unrecognized option.  getopt_long already printed a
           // message about that, so we will just print the usage string
           // and exit.
           usage ();
           break;
 
         case 'H':
-          Fsaving_history (octave_value (false));
+          Fhistory_save (octave_value (false));
           read_history_file = false;
           break;
 
         case 'W':
           no_window_system = true;
           break;
 
         case 'V':
diff --git a/libinterp/parse-tree/pt-assign.cc b/libinterp/parse-tree/pt-assign.cc
--- a/libinterp/parse-tree/pt-assign.cc
+++ b/libinterp/parse-tree/pt-assign.cc
@@ -82,33 +82,33 @@ static const char *former_built_in_varia
   "gnuplot_command_plot",
   "gnuplot_command_replot",
   "gnuplot_command_splot",
   "gnuplot_command_title",
   "gnuplot_command_using",
   "gnuplot_command_with",
   "gnuplot_has_frames",
   "history_file",
+  "history_save",
   "history_size",
   "ignore_function_time_stamp",
   "max_recursion_depth",
   "octave_core_file_format",
   "octave_core_file_limit",
   "octave_core_file_name",
   "output_max_field_width",
   "output_precision",
   "page_output_immediately",
   "page_screen_output",
   "print_answer_id_name",
   "print_empty_dimensions",
   "print_rhs_assign_val",
   "save_default_options",
   "save_header_format_string",
   "save_precision",
-  "saving_history",
   "sighup_dumps_octave_core",
   "sigterm_dumps_octave_core",
   "silent_functions",
   "split_long_rows",
   "string_fill_char",
   "struct_levels_to_print",
   "suppress_verbose_help_message",
   "variables_can_hide_functions",
diff --git a/scripts/deprecated/module.mk b/scripts/deprecated/module.mk
--- a/scripts/deprecated/module.mk
+++ b/scripts/deprecated/module.mk
@@ -14,16 +14,17 @@ deprecated_FCN_FILES = \
   deprecated/java_get.m \
   deprecated/java_invoke.m \
   deprecated/java_new.m \
   deprecated/java_unsigned_conversion.m \
   deprecated/java_set.m \
   deprecated/javafields.m \
   deprecated/javamethods.m \
   deprecated/polyderiv.m \
+  deprecated/saving_history.m \
   deprecated/shell_cmd.m \
   deprecated/studentize.m \
   deprecated/sylvester_matrix.m
 
 FCN_FILES += $(deprecated_FCN_FILES)
 
 PKG_ADD_FILES += deprecated/PKG_ADD
 
diff --git a/scripts/deprecated/saving_history.m b/scripts/deprecated/saving_history.m
new file mode 100644
--- /dev/null
+++ b/scripts/deprecated/saving_history.m
@@ -0,0 +1,41 @@
+## Copyright (C) 2013 Rik Wehbring
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 3 of the License, or (at
+## your option) any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, see
+## <http://www.gnu.org/licenses/>.
+
+## -*- texinfo -*-
+## @deftypefn  {Built-in Function} {@var{val} =} saving_history ()
+## @deftypefnx {Built-in Function} {@var{old_val} =} saving_history (@var{new_val})
+## @deftypefnx {Built-in Function} {} saving_history (@var{new_val}, \"local\")
+## This function has been deprecated.  Use @code{@file{history_save}} instead.
+## @seealso{history_save}
+## @end deftypefn
+
+## Deprecated in 3.8
+
+function retval = saving_history (varargin)
+
+  persistent warned = false;
+  if (! warned)
+    warned = true;
+    warning ("Octave:deprecated-function",
+             "saving_history is obsolete and will be removed from a future version of Octave, please use history_save instead");
+  endif
+
+  retval = save_default_options (varargin{:});
+
+endfunction
+
