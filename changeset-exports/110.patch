# HG changeset patch
# User jwe
# Date 748156894 0
#      Thu Sep 16 05:21:34 1993 +0000
# Node ID 7573fac6f629af5764a71c0eb8f3b5bff437405e
# Parent  f7408398ed47d14af694e5534830d3bfc4886466
[project @ 1993-09-16 05:21:34 by jwe]
(builtin_help): When trying harder to find help for M-files, only
insert the symbol into the global symbol table if there really is an
M-file of the given name in the path.

diff --git a/src/t-builtins.cc b/src/t-builtins.cc
--- a/src/t-builtins.cc
+++ b/src/t-builtins.cc
@@ -409,16 +409,17 @@ builtin_help (int argc, char **argv)
 		list_in_columns (output_buf, names);
 	      delete [] names;
 	      ptr++;
 	    }
 	}
     }
   else
     {
+      char *m_file_name = (char *) NULL;
       symbol_record *sym_rec;
       help_list *op_help_list = operator_help ();
       help_list *kw_help_list = keyword_help ();
       for (int i = 1; i < argc; i++)
 	{
 	  if (argv[i] == (char *) NULL || argv[i][0] == '\0')
 	    continue;
 
@@ -467,30 +468,33 @@ builtin_help (int argc, char **argv)
 		  goto next;
 		}
 	    }
 
 // Try harder to find M-files that might not be defined yet, or that
 // appear to be out of date.  Don\'t execute commands from the file if
 // it turns out to be a script file.
 
-	  sym_rec = global_sym_tab->lookup (argv[i], 1, 0);
-	  if (sym_rec != (symbol_record *) NULL)
+	  m_file_name = m_file_in_path (argv[i]);
+	  if (m_file_name != (char *) NULL)
 	    {
-	      tree_identifier tmp (sym_rec);
-	      tmp.parse_m_file (0);
-	      char *h = sym_rec->help ();
-	      if (h != (char *) NULL && *h != '\0')
+	      sym_rec = global_sym_tab->lookup (argv[i], 1, 0);
+	      if (sym_rec != (symbol_record *) NULL)
 		{
-		  output_buf << "\n" << h << "\n";
-		  goto next;
+		  tree_identifier tmp (sym_rec);
+		  tmp.parse_m_file (0);
+		  char *h = sym_rec->help ();
+		  if (h != (char *) NULL && *h != '\0')
+		    {
+		      output_buf << "\n" << h << "\n";
+		      goto next;
+		    }
 		}
 	    }
-	  else
-	    global_sym_tab->clear (argv[i]);
+	  delete [] m_file_name;
 
 	  output_buf << "Sorry, `" << argv[i] << "' is not documented\n";
 
 	next:
 	  continue;
 	}
     }
 
