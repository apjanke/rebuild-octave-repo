# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1455700879 28800
#      Wed Feb 17 01:21:19 2016 -0800
# Branch stable
# Node ID 1bbd799ac7c7ed4c6b0d1daac8e5059df852d929
# Parent  8990b8c4f00a772fa29484626088b5ea570c5a5e
Invoke correct version of octave-cli from main driver program

* main.in.cc (main): Refactor construction of binary filenames, ensure
versioned octave-cli binary is called for --no-gui-libs.

diff --git a/src/main.in.cc b/src/main.in.cc
--- a/src/main.in.cc
+++ b/src/main.in.cc
@@ -427,26 +427,28 @@ main (int argc, char **argv)
 {
   int retval = 0;
 
   bool start_gui = true;
   bool gui_libs = true;
 
   std::string octave_bindir = get_octave_bindir ();
   std::string octave_archlibdir = get_octave_archlibdir ();
+  std::string octave_cli
+    = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;
+  std::string octave_gui = octave_archlibdir + dir_sep_char + "octave-gui";
 
 #if defined (HAVE_OCTAVE_GUI)
   // The Octave version number is already embedded in the
   // octave_archlibdir directory name so we don't need to append it to
   // the octave-gui file name.
 
-  std::string file = octave_archlibdir + dir_sep_char + "octave-gui";
+  std::string file = octave_gui;
 #else
-  std::string file
-    = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;
+  std::string file = octave_cli;
 #endif
 
   char **new_argv = new char * [argc + 1];
 
   int k = 1;
 
   bool warn_display = true;
 
@@ -457,17 +459,17 @@ main (int argc, char **argv)
           // Run the version of Octave that is not linked with any GUI
           // libraries.  It may not be possible to do plotting or any
           // ui* calls, but it will be a little faster to start and
           // require less memory.  Don't pass the --no-gui-libs option
           // on as that option is not recognized by Octave.
 
           start_gui = false;
           gui_libs = false;
-          file = octave_bindir + dir_sep_char + "octave-cli";
+          file = octave_cli;
         }
       else if (! strcmp (argv[i], "--no-gui"))
         {
           // If we see this option, then we can just exec octave; we
           // don't have to create a child process and wait for it to
           // exit.  But do exec "octave-gui", not "octave-cli", because
           // even if the --no-gui option is given, we may be asked to do
           // some plotting or ui* calls.
@@ -493,17 +495,17 @@ main (int argc, char **argv)
 
       const char *display_check_err_msg = display_available (&dpy_avail);
 
       if (! dpy_avail)
         {
           start_gui = false;
           gui_libs = false;
 
-          file = octave_bindir + dir_sep_char + "octave-cli-" OCTAVE_VERSION;
+          file = octave_cli;
 
           if (warn_display)
             {
               if (! display_check_err_msg)
                 display_check_err_msg = "graphical display unavailable";
 
               std::cerr << "octave: " << display_check_err_msg << std::endl;
               std::cerr << "octave: disabling GUI features" << std::endl;
