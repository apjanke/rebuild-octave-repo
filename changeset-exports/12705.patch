# HG changeset patch
# User Rik <octave@nomad.inbox5.com>
# Date 1307229038 25200
#      Sat Jun 04 16:10:38 2011 -0700
# Node ID 4972eb61c6d66dfca8a4ad5f91b96cafd8c8f07b
# Parent  da6cbb75236832c72b28be98898f2120952cc454
Fix bug with error() not accepting an empty struct input (Bug #33428).

* nargchk.m, nargoutchk.m: Return scalar empty struct if there is no error.
* error.cc: Accept empty struct as input with no error, per Matlab.

diff --git a/scripts/general/nargchk.m b/scripts/general/nargchk.m
--- a/scripts/general/nargchk.m
+++ b/scripts/general/nargchk.m
@@ -51,29 +51,30 @@ function msg = nargchk (minargs, maxargs
   elseif (nargs > maxargs)
     msg.message = "too many input arguments";
     msg.identifier = "Octave:nargchk:too-many-inputs";
   endif
 
   if (strcmpi (outtype, "string"))
     msg = msg.message;
   elseif (isempty (msg.message))
-    msg = struct ([]);
+    msg = struct ();
   endif
 
 endfunction
 
+
 ## Tests
 %!shared stmin, stmax
 %!  stmin = struct ("message", "not enough input arguments",
 %!                  "identifier", "Octave:nargchk:not-enough-inputs");
 %!  stmax = struct ("message", "too many input arguments",
 %!                  "identifier", "Octave:nargchk:too-many-inputs");
 %!assert (nargchk (0, 1, 0), "")
 %!assert (nargchk (0, 1, 1), "")
 %!assert (nargchk (1, 1, 0), "not enough input arguments")
 %!assert (nargchk (0, 1, 2), "too many input arguments")
 %!assert (nargchk (0, 1, 2, "string"), "too many input arguments")
 ## Struct outputs
-%!assert (nargchk (0, 1, 0, "struct"), struct([]))
-%!assert (nargchk (0, 1, 1, "struct"), struct([]))
+%!assert (nargchk (0, 1, 0, "struct"), struct())
+%!assert (nargchk (0, 1, 1, "struct"), struct())
 %!assert (nargchk (1, 1, 0, "struct"), stmin)
 %!assert (nargchk (0, 1, 2, "struct"), stmax)
diff --git a/scripts/general/nargoutchk.m b/scripts/general/nargoutchk.m
--- a/scripts/general/nargoutchk.m
+++ b/scripts/general/nargoutchk.m
@@ -50,35 +50,31 @@ function msg = nargoutchk (minargs, maxa
     msg.identifier = "Octave:nargoutchk:not-enough-outputs";
   elseif (nargs > maxargs)
     msg.message = "too many output arguments";
     msg.identifier = "Octave:nargoutchk:too-many-outputs";
   endif
 
   if (strcmpi (outtype, "string"))
     msg = msg.message;
-  else
-    if (isempty (msg.message))
-      msg = struct ([]);
-    endif
-    ## FIXME: remove the error below if error is modified to accept
-    ## struct inputs
-    error ("nargoutchk: error does not yet support struct inputs");
+  elseif (isempty (msg.message))
+    msg = struct ();
   endif
 
 endfunction
 
+
 ## Tests
 %!shared stmin, stmax
 %!  stmin = struct ("message", "not enough output arguments",
 %!                  "identifier", "Octave:nargoutchk:not-enough-outputs");
 %!  stmax = struct ("message", "too many output arguments",
 %!                  "identifier", "Octave:nargoutchk:too-many-outputs");
 %!assert (nargoutchk (0, 1, 0), "")
 %!assert (nargoutchk (0, 1, 1), "")
 %!assert (nargoutchk (1, 1, 0), "not enough output arguments")
 %!assert (nargoutchk (0, 1, 2), "too many output arguments")
 %!assert (nargoutchk (0, 1, 2, "string"), "too many output arguments")
 ## Struct outputs
-#%!assert (nargoutchk (0, 1, 0, "struct"), struct([]))
-#%!assert (nargoutchk (0, 1, 1, "struct"), struct([]))
+#%!assert (nargoutchk (0, 1, 0, "struct"), struct())
+#%!assert (nargoutchk (0, 1, 1, "struct"), struct())
 #%!assert (nargoutchk (1, 1, 0, "struct"), stmin)
 #%!assert (nargoutchk (0, 1, 2, "struct"), stmax)
diff --git a/src/error.cc b/src/error.cc
--- a/src/error.cc
+++ b/src/error.cc
@@ -1061,16 +1061,20 @@ error: nargin != 1\n\
             return retval;
         }
       else if (nargin == 1 && args(0).is_map ())
         {
           octave_value_list tmp;
 
           octave_scalar_map m = args(0).scalar_map_value ();
 
+          // empty struct is not an error.  return and resume calling function.
+          if (m.nfields () == 0)
+            return retval;
+
           if (m.contains ("message"))
             {
               octave_value c = m.getfield ("message");
 
               if (c.is_string ())
                  nargs(0) = c.string_value ();
             }
 
