# HG changeset patch
# User David Bateman <dbateman@free.fr>
# Date 1224255992 -3600
#      Fri Oct 17 16:06:32 2008 +0100
# Node ID 7799d8c383124124123ea43b5a4468a14fff3125
# Parent  7eedf503ba1cf1cbce6deb753add8e04f216e8ab
Small plotting fixes

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,16 @@
+2008-10-17  David Bateman  <dbateman@free.fr>
+
+	* plot/__plt_get_axis_arg__.m: Exclude non-numeric and root figure
+	from potential axis handles.
+	* plot/colorbar.m: Remove debug output.
+	* plot/comet.m: Close plot before demo
+	* plot/contourc.m: No output if nargout == 0.
+
 2008-10-16  David Bateman  <dbateman@free.fr>
 
 	* plot/subplot.m: Allow for column vector of children for figure.
 
 2008-10-16  John W. Eaton  <jwe@octave.org>
 
 	* testfun/rundemos.m: New function.
 
diff --git a/scripts/plot/__plt_get_axis_arg__.m b/scripts/plot/__plt_get_axis_arg__.m
--- a/scripts/plot/__plt_get_axis_arg__.m
+++ b/scripts/plot/__plt_get_axis_arg__.m
@@ -27,18 +27,19 @@ function [h, varargin, narg] = __plt_get
     caller = varargin{1};
     varargin(1) = [];
   else
     nogca = false;
   endif
 
   ## Figure handles are integers, but object handles are non integer,
   ## therefore ignore integer scalars.
-  if (nargin > 1 && length (varargin) > 0 && numel(varargin{1}) == 1
-      && ishandle (varargin{1}(1)) && ! isfigure (varargin{1}(1)))
+  if (nargin > 1 && length (varargin) > 0 && isnumeric (varargin{1}) 
+      && numel (varargin{1}) == 1 && ishandle (varargin{1}(1)) 
+      && varargin{1}(1) != 0 && ! isfigure (varargin{1}(1)))
     tmp = varargin{1};
     obj = get (tmp);
     if (strcmp (obj.type, "axes") || strcmp (obj.type, "hggroup"))
       h = ancestor (tmp, "axes");
       varargin(1) = [];
       if (isempty (varargin))
 	varargin = {};
       endif
diff --git a/scripts/plot/colorbar.m b/scripts/plot/colorbar.m
--- a/scripts/plot/colorbar.m
+++ b/scripts/plot/colorbar.m
@@ -231,17 +231,16 @@ function update_colorbar_axis (h, d, cax
 	     "xaxislocation", "top", "position", cpos);
       else
 	set (cax, "ytick", [], "xdir", "normal", "ydir", "normal",
 	     "xaxislocation", "bottom", "position", cpos);
       endif
     endif
 
     if (! isnan (aspect))
-      aspect
       set (cax, "dataaspectratio", aspect);
     endif
   endif
 endfunction
 
 function [pos, cpos, vertical, mirr, aspect] = __position_colorbox__ (cbox, obj, cf)
 
   pos = obj.position;
diff --git a/scripts/plot/comet.m b/scripts/plot/comet.m
--- a/scripts/plot/comet.m
+++ b/scripts/plot/comet.m
@@ -74,14 +74,15 @@ function comet (varargin)
     axis (theaxis);
     drawnow ();
     pause (p);
   endfor
 
 endfunction
 
 %!demo
+%! close all;
 %! t = 0:.1:2*pi;
 %! x = cos(2*t).*(cos(t).^2);
 %! y = sin(2*t).*(sin(t).^2);
 %! comet(x,y)
 
 
diff --git a/scripts/plot/contourc.m b/scripts/plot/contourc.m
--- a/scripts/plot/contourc.m
+++ b/scripts/plot/contourc.m
@@ -52,17 +52,17 @@
 ##
 ## @end group
 ## @end example
 ## @seealso{contour}
 ## @end deftypefn
 
 ## Author: Shai Ayal <shaiay@users.sourceforge.net>
 
-function [c, lev] = contourc (varargin)
+function [cout, lev] = contourc (varargin)
 
   if (nargin == 1)
     vn = 10;
     z = varargin{1};
     [nr, nc] = size (z);
     x = 1:nc;
     y = 1:nr;
   elseif (nargin == 2)
@@ -122,17 +122,18 @@ function [c, lev] = contourc (varargin)
         
       c(1, ind) = interp2 (ii, jj, x, ci, cj);
       c(2, ind) = interp2 (ii, jj, y, ci, cj);
       
       i = i + clen + 1;
     endwhile
   endif
     
-  if (nargout == 2)
+  if (nargout > 0)
+    cout = c;
     lev = vv;
   endif
 
 endfunction
 
 %!demo
 %! x = 0:2;
 %! y = x;
