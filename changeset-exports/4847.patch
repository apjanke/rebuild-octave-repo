# HG changeset patch
# User jwe
# Date 1080940534 0
#      Fri Apr 02 21:15:34 2004 +0000
# Node ID 83ddfedb8db796ba9766a2323048e79b9372e5f9
# Parent  7a3eb3cc292b47c6f856915e0821c4c3404cae86
[project @ 2004-04-02 21:15:34 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,13 +1,14 @@
 2004-04-02  David Bateman  <dbateman@free.fr>
 
 	* statistics/base/std.m: Allow optional args for type and dim.
-	* statistics/base/center.m statistics/base/meansq.m
-	statistics/base/moment.m statistics/base/range.m: Update for NDArrays.
+	* statistics/base/center.m, statistics/base/meansq.m,
+	statistics/base/moment.m, statistics/base/range.m:
+	Update for NDArrays.
 	* signal/fftshift.m: Fix dimensioning error.
 	
 	* statistics/base/std.m: Use repmat not ones(nr,1)*mean to allow
 	NDArrays.
 	
 	* general/mod.m, general/mod.m: Allow NDArrays with one scalar arg.
 
 	* signal/fftshift.m: Update for NDArrays, allow optional dim arg.
diff --git a/scripts/statistics/base/range.m b/scripts/statistics/base/range.m
--- a/scripts/statistics/base/range.m
+++ b/scripts/statistics/base/range.m
@@ -14,26 +14,30 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, write to the Free
 ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA
 ## 02111-1307, USA.
 
 ## -*- texinfo -*-
 ## @deftypefn {Function File} {} range (@var{x})
+## @deftypefn {Function File} {} range (@var{x},@var{dim})
 ## If @var{x} is a vector, return the range, i.e., the difference
 ## between the maximum and the minimum, of the input data.
 ##
 ## If @var{x} is a matrix, do the above for each column of @var{x}.
+##
+## If the optional argument @var{dim} is supplied, work along dimension
+## @var{dim}.
 ## @end deftypefn
 
 ## Author: KH <Kurt.Hornik@ci.tuwien.ac.at>
 ## Description: Compute range
 
-function y = range (x)
+function y = range (x, varargin{:})
 
-  if (nargin != 1)
-    usage ("range (x)");
+  if (nargin != 1 && nargin != 2)
+    usage ("range (x, dim)");
   endif
 
-  y = max (x) - min (x);
+  y = max (x, varargin{:}) - min (x, varargin{:});
 
 endfunction
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,12 @@
 2004-04-02  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* ov-bool.h (octave_bool::bool_array_value): New function.
+
 	* ov-base-mat.cc (octave_base_matrix<MT>::subsasgn): Don't allow
 	expressions like x(i)(j) or x(i){j} when x is empty.
 
 	* load-save.cc (get_file_format): Error if file does not exist.
 	(Fload): Also complain here if specific file type is specified and
 	file does not exist.
 
 2004-04-02  Quentin Spencer  <qspencer@ieee.org>
diff --git a/src/ov-bool.h b/src/ov-bool.h
--- a/src/ov-bool.h
+++ b/src/ov-bool.h
@@ -103,16 +103,19 @@ public:
   ComplexNDArray complex_array_value (bool = false) const
     { return ComplexNDArray (dim_vector (1, 1), Complex (scalar)); }
 
   bool bool_value (void) const { return scalar; }
 
   boolMatrix bool_matrix_value (void) const
     { return boolMatrix (1, 1, scalar); }
 
+  boolNDArray bool_array_value (void) const
+    { return boolNDArray (dim_vector (1, 1), scalar); }
+
   octave_value convert_to_str_internal (bool pad, bool force) const;
 
   bool save_ascii (std::ostream& os, bool& infnan_warned,
 		 bool strip_nan_and_inf);
 
   bool load_ascii (std::istream& is);
 
   bool save_binary (std::ostream& os, bool& save_as_floats);
