# HG changeset patch
# User jwe
# Date 845076725 0
#      Fri Oct 11 23:32:05 1996 +0000
# Node ID c90105b9947936cc0f2679a940eed7e41df03a3e
# Parent  7c60f8a6e6a0f338eae4bc36f5113141dac4069d
[project @ 1996-10-11 23:22:27 by jwe]

diff --git a/src/arith-ops.cc b/src/arith-ops.cc
--- a/src/arith-ops.cc
+++ b/src/arith-ops.cc
@@ -29,19 +29,20 @@ Software Foundation, 59 Temple Place - S
 #include "oct-cmplx.h"
 #include "oct-math.h"
 
 #include "arith-ops.h"
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "mappers.h"
-#include "pt-const.h"
 #include "unwind-prot.h"
 #include "utils.h"
+#include "ov.h"
+#include "variables.h"
 #include "xdiv.h"
 #include "xpow.h"
 
 // Allow divide by zero errors to be suppressed.
 static bool Vwarn_divide_by_zero;
 
 #define DIVIDE_BY_ZERO_ERROR \
   do \
@@ -62,138 +63,16 @@ Matrix_bool_op
   Matrix_EQ,
   Matrix_GE,
   Matrix_GT,
   Matrix_NE,
   Matrix_AND,
   Matrix_OR, 
 };
 
-// Check row and column dimensions for binary matrix operations.
-
-static inline int
-m_add_conform (const Matrix& a, const Matrix& b, int warn)
-{
-  int ar = a.rows ();
-  int ac = a.columns ();
-  int br = b.rows ();
-  int bc = b.columns ();
-
-  int ok = (ar == br && ac == bc);
-
-  if (! ok && warn)
-    gripe_nonconformant (ar, ac, br, bc);
-
-  return ok;
-}
-
-static inline int
-m_add_conform (const Matrix& a, const ComplexMatrix& b, int warn)
-{
-  int ar = a.rows ();
-  int ac = a.columns ();
-  int br = b.rows ();
-  int bc = b.columns ();
-
-  int ok = (ar == br && ac == bc);
-
-  if (! ok && warn)
-    gripe_nonconformant (ar, ac, br, bc);
-
-  return ok;
-}
-
-static inline int
-m_add_conform (const ComplexMatrix& a, const Matrix& b, int warn)
-{
-  int ar = a.rows ();
-  int ac = a.columns ();
-  int br = b.rows ();
-  int bc = b.columns ();
-
-  int ok = (ar == br && ac == bc);
-
-  if (! ok && warn)
-    gripe_nonconformant (ar, ac, br, bc);
-
-  return ok;
-}
-
-static inline int
-m_add_conform (const ComplexMatrix& a, const ComplexMatrix& b, int warn)
-{
-  int ar = a.rows ();
-  int ac = a.columns ();
-  int br = b.rows ();
-  int bc = b.columns ();
-
-  int ok = (ar == br && ac == bc);
-
-  if (! ok && warn)
-    gripe_nonconformant (ar, ac, br, bc);
-
-  return ok;
-}
-
-static inline int
-m_mul_conform (const Matrix& a, const Matrix& b, int warn)
-{
-  int ac = a.columns ();
-  int br = b.rows ();
-
-  int ok = (ac == br);
-
-  if (! ok && warn)
-    gripe_nonconformant (a.rows (), ac, br, b.columns ());
-
-  return ok;
-}
-
-static inline int
-m_mul_conform (const Matrix& a, const ComplexMatrix& b, int warn)
-{
-  int ac = a.columns ();
-  int br = b.rows ();
-
-  int ok = (ac == br);
-
-  if (! ok && warn)
-    gripe_nonconformant (a.rows (), ac, br, b.columns ());
-
-  return ok;
-}
-
-static inline int
-m_mul_conform (const ComplexMatrix& a, const Matrix& b, int warn)
-{
-  int ac = a.columns ();
-  int br = b.rows ();
-
-  int ok = (ac == br);
-
-  if (! ok && warn)
-    gripe_nonconformant (a.rows (), ac, br, b.columns ());
-
-  return ok;
-}
-
-static inline int
-m_mul_conform (const ComplexMatrix& a, const ComplexMatrix& b, int warn)
-{
-  int ac = a.columns ();
-  int br = b.rows ();
-
-  int ok = (a.columns () == br);
-
-  if (! ok && warn)
-    gripe_nonconformant (a.rows (), ac, br, b.columns ());
-
-  return ok;
-}
-
 // Stupid binary comparison operations like the ones Matlab provides.
 // One for each type combination, in the order given here:
 //
 //       op2 \ op1:   s   m   cs   cm
 //            +--   +---+---+----+----+
 //   scalar   |     | * | 3 |  * |  9 |
 //                  +---+---+----+----+
 //   matrix         | 1 | 4 |  7 | 10 |
diff --git a/src/data.cc b/src/data.cc
--- a/src/data.cc
+++ b/src/data.cc
@@ -40,17 +40,18 @@ Software Foundation, Inc.
 #include "lo-ieee.h"
 #include "str-vec.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
 #include "oct-map.h"
-#include "pt-const.h"
+#include "ov.h"
+#include "variables.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 #ifndef MIN
 #define MIN(a,b) ((a) < (b) ? (a) : (b))
 #endif
 
 #ifndef ABS
@@ -789,17 +790,17 @@ return nonzero if S is a structure with 
   int nargin = args.length ();
 
   if (nargin == 2)
     {
       retval = 0.0;
       if (args(0).is_map () && args(1).is_string ())
 	{
 	  string s = args(1).string_value ();
-	  octave_value tmp = args(0).lookup_map_element (s, 0, 1);
+	  octave_value tmp = args(0).struct_elt_val (s);
 	  retval = (double) tmp.is_defined ();
 	}
     }
   else
     print_usage ("struct_contains");
 
   return retval;
 }
diff --git a/src/dirfns.cc b/src/dirfns.cc
--- a/src/dirfns.cc
+++ b/src/dirfns.cc
@@ -340,18 +340,17 @@ users home directory")
       if (Vhome_directory.empty ()
 	  || ! octave_change_to_directory (Vhome_directory))
 	{
 	  return retval;
 	}
     }
 
   string directory = get_working_directory ("cd");
-  octave_value *dir = new octave_value (directory);
-  bind_builtin_variable ("PWD", dir, 1);
+  bind_builtin_variable ("PWD", directory, 1);
 
   return retval;
 }
 
 DEFALIAS (chdir, cd);
 
 // Get a directory listing.
 
diff --git a/src/resource.cc b/src/resource.cc
--- a/src/resource.cc
+++ b/src/resource.cc
@@ -48,17 +48,17 @@ Software Foundation, 59 Temple Place - S
 #endif
 
 #endif
 
 #include "defun.h"
 #include "help.h"
 #include "oct-map.h"
 #include "sysdep.h"
-#include "pt-const.h"
+#include "ov.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 #ifndef RUSAGE_SELF
 #define RUSAGE_SELF 0
 #endif
 
 // System resource functions.
diff --git a/src/strfns.cc b/src/strfns.cc
--- a/src/strfns.cc
+++ b/src/strfns.cc
@@ -27,17 +27,17 @@ Software Foundation, 59 Temple Place - S
 #include <cctype>
 
 #include "dMatrix.h"
 
 #include "defun.h"
 #include "error.h"
 #include "gripes.h"
 #include "help.h"
-#include "pt-const.h"
+#include "ov.h"
 #include "oct-obj.h"
 #include "utils.h"
 
 DEFUN (isstr, args, ,
   "isstr (X): return 1 if X is a string, 0 otherwise")
 {
   octave_value_list retval;
 
diff --git a/src/syscalls.cc b/src/syscalls.cc
--- a/src/syscalls.cc
+++ b/src/syscalls.cc
@@ -48,16 +48,17 @@ Software Foundation, 59 Temple Place - S
 #include "lo-utils.h"
 #include "oct-map.h"
 #include "oct-obj.h"
 #include "oct-stdstrm.h"
 #include "oct-stream.h"
 #include "sysdep.h"
 #include "syswait.h"
 #include "utils.h"
+#include "variables.h"
 
 static Octave_map
 mk_stat_map (const file_stat& fs)
 {
   Octave_map m;
 
   m["dev"] = (double) fs.dev ();
   m["ino"] = (double) fs.ino ();
