# HG changeset patch
# User jwe
# Date 1099701218 0
#      Sat Nov 06 00:33:38 2004 +0000
# Node ID 1e6f653ef1e332fbaab48ac44149b0eb2d3bcfc8
# Parent  b9dae14b5ada74efa35ee53ed5347e1cafe1f478
[project @ 2004-11-06 00:33:38 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,15 @@
 2004-11-05  John W. Eaton  <jwe@octave.org>
 
 	* version.h (OCTAVE_VERSION): Now 2.1.61.
 
+	* DLD-FUNCTIONS/det.cc (det): Always compute rcond so we can
+	detect numerically singular matrices.
+
 2004-11-04  John W. Eaton  <jwe@octave.org>
 
 	* pt-colon.cc (tree_colon_expression::line,
 	tree_colon_expression::column): New functions.
 	* pt-colon.h: Provide decls.
 
 	* oct-stream.cc (octave_stream::seek (long, int)): Return error
 	(but leave file position unchanged) for attempt to seek beyond end
diff --git a/src/DLD-FUNCTIONS/det.cc b/src/DLD-FUNCTIONS/det.cc
--- a/src/DLD-FUNCTIONS/det.cc
+++ b/src/DLD-FUNCTIONS/det.cc
@@ -74,64 +74,45 @@ of the reciprocal condition number if re
     }
 
   if (arg.is_real_type ())
     {
       Matrix m = arg.matrix_value ();
 
       if (! error_state)
 	{
+	  // Always compute rcond, so we can detect numerically
+	  // singular matrices.
+
 	  int info;
 	  double rcond = 0.0;
-
-	  if (nargout > 1)
-	    {
-	      DET det = m.determinant (info, rcond);
-	      retval(1) = rcond;
-	      volatile double xrcond = rcond;
-	      xrcond += 1.0;
-	      retval(0) = ((info == -1 || xrcond == 1.0)
-			   ? 0.0 : det.value ());
-	    }
-	  else
-	    {
-	      DET det = m.determinant (info);
-	      volatile double xrcond = rcond;
-	      xrcond += 1.0;
-	      retval(0) = ((info == -1 || xrcond == 1.0)
-			   ? 0.0 : det.value ());
-	    }
+	  DET det = m.determinant (info, rcond);
+	  retval(1) = rcond;
+	  volatile double xrcond = rcond;
+	  xrcond += 1.0;
+	  retval(0) = ((info == -1 || xrcond == 1.0) ? 0.0 : det.value ());
 	}
     }
   else if (arg.is_complex_type ())
     {
       ComplexMatrix m = arg.complex_matrix_value ();
 
       if (! error_state)
 	{
+	  // Always compute rcond, so we can detect numerically
+	  // singular matrices.
+
 	  int info;
 	  double rcond = 0.0;
-
-	  if (nargout > 1)
-	    {
-	      ComplexDET det = m.determinant (info, rcond);
-	      retval(1) = rcond;
-	      volatile double xrcond = rcond;
-	      xrcond += 1.0;
-	      retval(0) = ((info == -1 || xrcond == 1.0)
-			   ? Complex (0.0) : det.value ());
-	    }
-	  else
-	    {
-	      ComplexDET det = m.determinant (info);
-	      volatile double xrcond = rcond;
-	      xrcond += 1.0;
-	      retval(0) = ((info == -1 || xrcond == 1.0)
-			   ? Complex (0.0) : det.value ());
-	    }
+	  ComplexDET det = m.determinant (info, rcond);
+	  retval(1) = rcond;
+	  volatile double xrcond = rcond;
+	  xrcond += 1.0;
+	  retval(0) = ((info == -1 || xrcond == 1.0)
+		       ? Complex (0.0) : det.value ());
 	}
     }
   else
     {
       gripe_wrong_type_arg ("det", arg);
     }
 
   return retval;
