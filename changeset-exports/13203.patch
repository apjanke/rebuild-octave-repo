# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1316804609 14400
#      Fri Sep 23 15:03:29 2011 -0400
# Node ID b6aba5b4edb14721eb63abec68d9a2582abc9ba8
# Parent  92095e0ba372461f2508f4f0f09e877d0f98abac
voronoin: accept options as a cell array of character strings

* __voronoi__.cc (F__voronoi__): Accept options as cell array of
character strings.  Use std::string for buffer.  Don't use fixed size
for char* buffer that is passed to qh_new_qhull.
* voronoin.m: Accept options as cell array of character strings.

diff --git a/scripts/geometry/voronoin.m b/scripts/geometry/voronoin.m
--- a/scripts/geometry/voronoin.m
+++ b/scripts/geometry/voronoin.m
@@ -42,18 +42,18 @@ function [C, F] = voronoin (pts, options
   if (nargin != 1 && nargin != 2)
     print_usage ();
   endif
 
   [np, dims] = size (pts);
   if (np > dims)
     if (nargin == 1)
       [C, F, infi] = __voronoi__ (pts);
-    elseif (ischar (options))
+    elseif (ischar (options) || iscellstr (options))
       [C, F, infi] = __voronoi__ (pts, options);
     else
-      error ("voronoin: second argument must be a string");
+      error ("voronoin: second argument must be a string or cell array of strings");
     endif
 
   else
     error ("voronoin: number of points must be greater than their dimension");
   endif
 endfunction
diff --git a/src/DLD-FUNCTIONS/__voronoi__.cc b/src/DLD-FUNCTIONS/__voronoi__.cc
--- a/src/DLD-FUNCTIONS/__voronoi__.cc
+++ b/src/DLD-FUNCTIONS/__voronoi__.cc
@@ -68,30 +68,35 @@ Undocumented internal function.\n\
 
   int nargin = args.length ();
   if (nargin < 1 || nargin > 2)
     {
       print_usage ();
       return retval;
     }
 
-  const char *options;
+  std::string options = "qhull v Fv T0";
 
   if (nargin == 2)
     {
-      if (! args (1).is_string ())
+      if (args(1).is_cellstr ())
         {
-          error ("__voronoi__: OPTIONS argument must be a string");
+          Array<std::string> tmp = args(1).cellstr_value ();
+
+          for (octave_idx_type i = 0; i < tmp.numel (); i++)
+            options += " " + tmp(i);
+        }
+      else if (args(1).is_string ())
+        options += " " + args(1).string_value ();
+      else
+        {
+          error ("__voronoi__: OPTIONS argument must be a string or cellstr");
           return retval;
         }
-
-      options = args (1).string_value().c_str ();
     }
-  else
-    options = "";
 
   Matrix p (args(0).matrix_value ());
 
   const octave_idx_type dim = p.columns ();
   const octave_idx_type np = p.rows ();
   p = p.transpose ();
 
   double *pt_array = p.fortran_vec ();
@@ -102,27 +107,27 @@ Undocumented internal function.\n\
   //    for (int j = 0; j < dim; j++)
   //      {
   //        pt_array[j+i*dim] = p(i,j);
   //      }
   //  }
 
   boolT ismalloc = false;
 
-  OCTAVE_LOCAL_BUFFER (char, flags, 250);
-
-  // hmm  lot's of options for qhull here
-  sprintf (flags, "qhull v Fv T0 %s", options);
-
   // If you want some debugging information replace the 0 pointer
   // with stdout or some other file open for writing.
 
   FILE *outfile = 0;
   FILE *errfile = stderr;
 
+  // Qhull flags argument is not const char*...
+  OCTAVE_LOCAL_BUFFER (char, flags, options.length () + 1);
+
+  strcpy (flags, options.c_str ());
+
   if (! qh_new_qhull (dim, np, pt_array, ismalloc, flags, outfile, errfile))
     {
       facetT *facet;
       vertexT *vertex;
 
       octave_idx_type i = 0, n = 1, k = 0, m = 0, fidx = 0, j = 0, r = 0;
       OCTAVE_LOCAL_BUFFER (octave_idx_type, ni, np);
 
