# HG changeset patch
# User Mike Miller <mtmiller@octave.org>
# Date 1534363409 25200
#      Wed Aug 15 13:03:29 2018 -0700
# Node ID 7b2312def76b06dfeacdaf15158f1906a659eaa3
# Parent  d04b74f5d02ed81b4ca404f9ab732fc46e56876c
build: ensure hg commands are not affected by user settings

* get-source-mtime.sh, mk-hg-id.sh (hg_safe): New shell function to call hg
commands safely.

diff --git a/build-aux/get-source-mtime.sh b/build-aux/get-source-mtime.sh
--- a/build-aux/get-source-mtime.sh
+++ b/build-aux/get-source-mtime.sh
@@ -31,21 +31,31 @@ SED=${SED:-sed}
 
 if [ $# -ne 1 ]; then
   echo "usage: get-source-mtime.sh SRCDIR" 1>&2
   exit 1
 fi
 
 srcdir="$1"
 
+## A user's ~/.hgrc may redefine or add default options to any hg subcommand,
+## potentially altering its behavior and possibly its standard output.  Always
+## run hg subcommands with configuration variables set to ensure that the
+## user's preferences do not influence the expected behavior.
+hg_safe ()
+{
+  cmd=$1; shift
+  hg --config alias.${cmd}=${cmd} --config defaults.${cmd}= ${cmd} "$@"
+}
+
 if [ x"$SOURCE_DATE_EPOCH" != x ]; then
   # Allow the source modification time to be overridden by SOURCE_DATE_EPOCH
   t=$SOURCE_DATE_EPOCH
 elif [ -d $srcdir/.hg ]; then
-  t=$( cd $srcdir && hg log --rev . --template '{date|hgdate}' )
+  t=$( cd $srcdir && hg_safe log --rev . --template '{date|hgdate}' )
   t=$( echo $t | $SED -n 's/^\([0-9]\+\) .*/\1/p' )
 elif [ -f $srcdir/HG-ID ]; then
   t=$( $PERL -e '@s = stat($ARGV[0]); print($s[9]) if @s;' $srcdir/HG-ID )
 elif [ -f $srcdir/configure ]; then
   t=$( $PERL -e '@s = stat($ARGV[0]); print($s[9]) if @s;' $srcdir/configure )
 fi
 
 if [ x"$t" = x ]; then
diff --git a/build-aux/mk-hg-id.sh b/build-aux/mk-hg-id.sh
--- a/build-aux/mk-hg-id.sh
+++ b/build-aux/mk-hg-id.sh
@@ -29,21 +29,31 @@ if [ $# -ne 1 ] && [ $# -ne 2 ]; then
   exit 1
 fi
 
 srcdir="$1"
 
 hg_id=HG-ID
 move_if_change="$srcdir/build-aux/move-if-change"
 
+## A user's ~/.hgrc may redefine or add default options to any hg subcommand,
+## potentially altering its behavior and possibly its standard output.  Always
+## run hg subcommands with configuration variables set to ensure that the
+## user's preferences do not influence the expected behavior.
+hg_safe ()
+{
+  cmd=$1; shift
+  hg --config alias.${cmd}=${cmd} --config defaults.${cmd}= ${cmd} "$@"
+}
+
 if [ $# -eq 2 ] && [ x"$2" = x--disable ]; then
   echo "hg-id-disabled" > ${hg_id}-t
   ${move_if_change} ${hg_id}-t ${hg_id}
 elif [ -d $srcdir/.hg ]; then
-  ( cd $srcdir && hg identify --id || echo "unknown" ) > ${hg_id}-t
+  ( cd $srcdir && hg_safe identify --id || echo "unknown" ) > ${hg_id}-t
   ${move_if_change} ${hg_id}-t ${hg_id}
 elif [ ! -f $srcdir/${hg_id} ]; then
   echo "WARNING: $srcdir/${hg_id} is missing!" 1>&2
   echo "unknown" > ${hg_id}-t && mv ${hg_id}-t ${hg_id}
 else
   echo "preserving existing ${hg_id} file" 1>&2
   if [ "x$srcdir" != "x." ] && [ -f $srcdir/${hg_id} ] && [ ! -f ${hg_id} ]; then
     cp ${srcdir}/${hg_id} ${hg_id}
