# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1279866039 -7200
#      Fri Jul 23 08:20:39 2010 +0200
# Node ID 0eb323b71957dcb52a325aca01063cf6a1b27650
# Parent  83896a06adaf2d6dfad7301d5c4cc387bd7bafcf
simplify narrowing of diagonal matrices

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,19 @@
+2010-07-23  Jaroslav Hajek  <highegg@gmail.com>
+
+	* ov-re-diag.cc (octave_diag_matrix::try_narrowing_conversion): Remove
+	redundant cast.
+	* ov-flt-re-diag.cc 
+	(octave_float_diag_matrix::try_narrowing_conversion): Ditto.
+	* ov-cx-diag.cc 
+	(octave_complex_diag_matrix::try_narrowing_conversion): Ditto.
+	* ov-flt-cx-diag.cc 
+	(octave_float_complex_diag_matrix::try_narrowing_conversion): Ditto.
+
 2010-07-23  Jaroslav Hajek  <highegg@gmail.com>
 
 	* pt-mat.cc (do_single_type_concat_no_mutate): Remove.
 	(tree_matrix::rvalue1): Use do_single_type_concat instead.
 
 2010-07-21  Jaroslav Hajek  <highegg@gmail.com>
 
 	* bitfcns.cc (Fsizemax): New DEFUN.
diff --git a/src/ov-cx-diag.cc b/src/ov-cx-diag.cc
--- a/src/ov-cx-diag.cc
+++ b/src/ov-cx-diag.cc
@@ -73,18 +73,17 @@ octave_complex_diag_matrix::numeric_demo
 
 octave_base_value *
 octave_complex_diag_matrix::try_narrowing_conversion (void)
 {
   octave_base_value *retval = 0;
 
   if (matrix.nelem () == 1)
     {
-      // FIXME: the proxy mechanism of DiagArray2 causes problems here.
-      retval = new octave_complex (Complex (matrix (0, 0)));
+      retval = new octave_complex (matrix (0, 0));
       octave_base_value *rv2 = retval->try_narrowing_conversion ();
       if (rv2)
         {
           delete retval;
           retval = rv2;
         }
     }
   else if (matrix.all_elements_are_real ())
diff --git a/src/ov-flt-cx-diag.cc b/src/ov-flt-cx-diag.cc
--- a/src/ov-flt-cx-diag.cc
+++ b/src/ov-flt-cx-diag.cc
@@ -57,18 +57,17 @@ octave_float_complex_diag_matrix::numeri
 
 octave_base_value *
 octave_float_complex_diag_matrix::try_narrowing_conversion (void)
 {
   octave_base_value *retval = 0;
 
   if (matrix.nelem () == 1)
     {
-      // FIXME: the proxy mechanism of DiagArray2 causes problems here.
-      retval = new octave_float_complex (FloatComplex (matrix (0, 0)));
+      retval = new octave_float_complex (matrix (0, 0));
       octave_base_value *rv2 = retval->try_narrowing_conversion ();
       if (rv2)
         {
           delete retval;
           retval = rv2;
         }
     }
   else if (matrix.all_elements_are_real ())
diff --git a/src/ov-flt-re-diag.cc b/src/ov-flt-re-diag.cc
--- a/src/ov-flt-re-diag.cc
+++ b/src/ov-flt-re-diag.cc
@@ -54,19 +54,18 @@ octave_float_diag_matrix::numeric_conver
                                             octave_float_matrix::static_type_id ());
 }
 
 octave_base_value *
 octave_float_diag_matrix::try_narrowing_conversion (void)
 {
   octave_base_value *retval = 0;
 
-  // FIXME: the proxy mechanism of DiagArray2 causes problems here.
   if (matrix.nelem () == 1)
-    retval = new octave_float_scalar (float (matrix (0, 0)));
+    retval = new octave_float_scalar (matrix (0, 0));
 
   return retval;
 }
 
 DiagMatrix
 octave_float_diag_matrix::diag_matrix_value (bool) const
 {
   return DiagMatrix (matrix);
diff --git a/src/ov-re-diag.cc b/src/ov-re-diag.cc
--- a/src/ov-re-diag.cc
+++ b/src/ov-re-diag.cc
@@ -69,19 +69,18 @@ octave_diag_matrix::numeric_demotion_fun
                                             octave_float_diag_matrix::static_type_id ());
 }
 
 octave_base_value *
 octave_diag_matrix::try_narrowing_conversion (void)
 {
   octave_base_value *retval = 0;
 
-  // FIXME: the proxy mechanism of DiagArray2 causes problems here.
   if (matrix.nelem () == 1)
-    retval = new octave_scalar (double (matrix (0, 0)));
+    retval = new octave_scalar (matrix (0, 0));
 
   return retval;
 }
 
 octave_value
 octave_diag_matrix::do_index_op (const octave_value_list& idx,
                                  bool resize_ok)
 {
