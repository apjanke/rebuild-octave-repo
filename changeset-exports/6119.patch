# HG changeset patch
# User jwe
# Date 1161994439 0
#      Sat Oct 28 00:13:59 2006 +0000
# Node ID fabb1be5fd84dd2d0f546a2af7ef76af64e1bbd0
# Parent  2803c70d8d019e6057b2f6d2955e4bbcedf1ffbb
[project @ 2006-10-28 00:13:58 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,18 +1,15 @@
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4 (OCTAVE_PROG_TEXI2PDF): Require OCTAVE_PROG_TEXI2DVI.
 	If texi2pdf is not found but texi2dvi is available, set TEXI2PDF
 	to "$TEXI2DVI --pdf".
-	(OCTAVE_PROG_GPERF, OCTAVE_PROG_GHOSTSCRIPT, OCTAVE_PROG_MAKEINFO,
-	OCTAVE_PROG_TEXI2DVI, OCTAVE_PROG_TEXI2PDF, OCTAVE_PROG_PERL,
-	OCTAVE_PROG_PYTHON, OCTAVE_PROG_DESKTOP_FILE_INSTALL): Simplify
-	calls to AC_CHECK_PROG.
 	(OCTAVE_PROG_GHOSTSCRIPT): Also check for gswin32 on Windows systems.
+
 	* Makeconf.in (UNSETCOMSPEC): Define if COMSPEC is defined.
 	From Michael Goffioul <michael.goffioul@swing.be>.
 
 2006-10-26  John W. Eaton  <jwe@octave.org>
 
 	* configure.in (OCTAVE_EXPORT, OCTAVE_IMPORT): New macros
 	(CRUFT_API, OCTAVE_API, OCTINTERP_API): Define using OCTAVE_EXPORT
 	and OCTAVE_IMPORT.
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -533,17 +533,17 @@ fi
 AC_DEFINE_UNQUOTED(GNUPLOT_BINARY, "$GNUPLOT_BINARY", [Name of gnuplot program.])
 AC_DEFINE_UNQUOTED(GNUPLOT_HAS_FRAMES, $GNUPLOT_HAS_FRAMES, [Define if your gnuplot program supports multiple plot windows.])
 ])
 dnl
 dnl Is gperf installed?
 dnl
 dnl OCTAVE_PROG_GPERF
 AC_DEFUN(OCTAVE_PROG_GPERF, [
-  AC_CHECK_PROG(GPERF, gperf)
+  AC_CHECK_PROG(GPERF, gperf, gperf, [])
   if test -n "$GPERF"; then
     if echo "%{
 enum octave_kw_id { a_kw };
 %}
 struct octave_kw { const char *name; int tok; octave_kw_id kw_id; };
 %%
 foo" | $GPERF -t -C -D -E -G -L C++ -H octave_kw_hash -N octave_kw_lookup > /dev/null 2>&1; then
       true
@@ -580,44 +580,44 @@ AC_DEFUN(OCTAVE_PROG_GHOSTSCRIPT, [
   fi
   AC_SUBST(GHOSTSCRIPT)
 ])
 dnl
 dnl Is makeinfo installed?
 dnl
 dnl OCTAVE_PROG_MAKEINFO
 AC_DEFUN(OCTAVE_PROG_MAKEINFO, [
-  AC_CHECK_PROG(MAKEINFO, makeinfo)
+  AC_CHECK_PROG(MAKEINFO, makeinfo, makeinfo, [])
   if test -z "$MAKEINFO"; then
     MAKEINFO='$(top_srcdir)/missing makeinfo'
     warn_makeinfo="I didn't find makeinfo, but it's only a problem if you need to reconstruct the Info version of the manual"
     AC_MSG_WARN($warn_makeinfo)
   fi
   AC_SUBST(MAKEINFO)
 ])
 dnl
 dnl Is texi2dvi installed?
 dnl
 dnl OCTAVE_PROG_TEXI2DVI
 AC_DEFUN(OCTAVE_PROG_TEXI2DVI, [
-  AC_CHECK_PROG(TEXI2DVI, texi2dvi)
+  AC_CHECK_PROG(TEXI2DVI, texi2dvi, texi2dvi, [])
   if test -z "$TEXI2DVI"; then
     TEXI2DVI='$(top_srcdir)/missing texi2dvi'
     warn_texi2dvi="I didn't find texi2dvi, but it's only a problem if you need to reconstruct the DVI version of the manual"
     AC_MSG_WARN($warn_texi2dvi)
   fi
   AC_SUBST(TEXI2DVI)
 ])
 dnl
 dnl Is texi2pdf installed?
 dnl
 dnl OCTAVE_PROG_TEXI2PDF
 AC_DEFUN(OCTAVE_PROG_TEXI2PDF, [
   AC_REQUIRE([OCTAVE_PROG_TEXI2DVI])
-  AC_CHECK_PROG(TEXI2PDF, texi2pdf)
+  AC_CHECK_PROG(TEXI2PDF, texi2pdf, texi2pdf, [])
   if test -z "$TEXI2PDF"; then
     missing=true;
     if test -n "$TEXI2DVI"; then
       TEXI2PDF="$TEXI2DVI --pdf"
       missing=false;
     fi
   else
     missing=false;
@@ -878,33 +878,33 @@ fi
 AC_SUBST([SED], $octave_cv_path_sed)
 AC_MSG_RESULT([$SED])
 ])
 dnl
 dnl Find Perl.
 dnl
 dnl OCTAVE_PROG_PERL
 AC_DEFUN(OCTAVE_PROG_PERL,
-[AC_CHECK_PROG(PERL, perl)
+[AC_CHECK_PROG(PERL, perl, perl, [])
   AC_SUBST(PERL)
 ])
 dnl
 dnl Find Python.
 dnl
 dnl OCTAVE_PROG_PYTHON
 AC_DEFUN(OCTAVE_PROG_PYTHON,
-[AC_CHECK_PROG(PYTHON, python)
+[AC_CHECK_PROG(PYTHON, python, python, [])
   AC_SUBST(PYTHON)
 ])
 dnl
 dnl Find desktop-file-install.
 dnl
 dnl OCTAVE_PROG_DESKTOP_FILE_INSTALL
 AC_DEFUN(OCTAVE_PROG_DESKTOP_FILE_INSTALL,
-[AC_CHECK_PROG(DESKTOP_FILE_INSTALL, desktop-file-install)
+[AC_CHECK_PROG(DESKTOP_FILE_INSTALL, desktop-file-install, desktop-file-install, [])
   AC_SUBST(DESKTOP_FILE_INSTALL)
 ])
 dnl
 dnl Check for IEEE 754 data format.
 dnl
 AC_DEFUN([OCTAVE_IEEE754_DATA_FORMAT],
 [AC_MSG_CHECKING([for IEEE 754 data format])
 AC_CACHE_VAL(octave_cv_ieee754_data_format,
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,15 +1,22 @@
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
-	* oct-time.cc: Undefine min and max after including windows.h.
-	From Michael Goffioul  <michael.goffioul@swing.be>.
+	* oct-time.cc [! HAVE_STRFTIME]: Declare strftime.
+
+2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
+
+	* mx-op-defs.h (NDS_CMP_OP1, NDS_CMP_OPS1, NDS_CMP_OP2,
+	NDS_CMP_OPS2): New macros.
 
 2006-10-26  John W. Eaton  <jwe@octave.org>
 
+	* mx-ops (core-type): New field for integer types.
+	* mk-ops.awk: Handle core-type for integer comparison ops.
+
 	* lo-cutils.c (octave_strcasecmp, octave-strncasecmp):
 	Move here from src/cutils.c.
 	* lo-utils.h: Provide decls.
 	* strcasecmp.c: Move here from src/strcasecmp.c.
 	* strncase.c: Move here from src/strncase.c.
 	* Makefile.in (LIBOCTAVE_C_SOURCES): Add them to the list.
 
 2006-10-26  Michael Goffioul  <michael.goffioul@swing.be>
diff --git a/liboctave/mk-ops.awk b/liboctave/mk-ops.awk
--- a/liboctave/mk-ops.awk
+++ b/liboctave/mk-ops.awk
@@ -21,18 +21,21 @@ BEGIN {
       declare_types = 0;
     }
   next;
 } {
   if (declare_types)
     {
       ntypes++;
 
-      if (NF == 6)
+      if (NF == 6 || NF == 7)
         {
+	  if (NF == 7)
+	    core_type[ntypes] = $7;
+
           scalar_zero_val[ntypes] = $6;
           fwd_decl_ok[ntypes] = $5 == "YES";
           header[ntypes] = $4 == "NONE" ? "" : $4;
           class[ntypes] = $3;
           type[ntypes] = $2;
           tag[ntypes] = $1;
           rev_tag[$1] = ntypes;
         }
@@ -93,16 +96,19 @@ BEGIN {
 	  result_num = rev_tag[result_tag];
 	  lhs_num = rev_tag[lhs_tag];
 	  rhs_num = rev_tag[rhs_tag];
 
 	  result_type = type[result_num];
 	  lhs_type = type[lhs_num];
           rhs_type = type[rhs_num];
 
+	  lhs_core_type = core_type[lhs_num];
+	  rhs_core_type = core_type[rhs_num];
+
 	  result_scalar_zero_val = scalar_zero_val[result_num];
           lhs_scalar_zero_val = scalar_zero_val[lhs_num];
           rhs_scalar_zero_val = scalar_zero_val[rhs_num];
 
 	  result_header = header[result_num];
 	  lhs_header = header[lhs_num];
           rhs_header = header[rhs_num];
 
@@ -191,18 +197,48 @@ BEGIN {
 		        lhs_type, rhs_type, result_scalar_zero_val) >> cc_file
               else
                 printf ("%s%s_BIN_OPS (%s, %s, %s)\n",
 		        lhs_class, rhs_class, result_type,
 			lhs_type, rhs_type) >> cc_file
             }
 
           if (cmp_ops)
-            printf ("%s%s_CMP_OPS (%s, %s, %s, %s)\n", lhs_class, rhs_class,
-	            lhs_type, lhs_conv, rhs_type, rhs_conv) >> cc_file
+	    {
+	      if (lhs_class == "S" || rhs_class == "S")
+	        {
+		  if (lhs_core_type)
+		    {
+		      if (rhs_core_type)
+			printf ("%s%s_CMP_OPS2 (%s, %s, %s, %s, %s, %s)\n",
+				lhs_class, rhs_class, lhs_type, lhs_conv,
+				rhs_type, rhs_conv,
+				lhs_core_type, rhs_core_type) >> cc_file
+		      else
+			printf ("%s%s_CMP_OPS1 (%s, %s, %s, %s, %s)\n",
+				lhs_class, rhs_class, lhs_type, lhs_conv,
+				rhs_type, rhs_conv, lhs_core_type) >> cc_file
+		    }
+		  else
+		    {
+		      if (rhs_core_type)
+			printf ("%s%s_CMP_OPS1 (%s, %s, %s, %s, %s)\n",
+				lhs_class, rhs_class, lhs_type, lhs_conv,
+				rhs_type, rhs_conv, rhs_core_type) >> cc_file
+		      else
+			printf ("%s%s_CMP_OPS (%s, %s, %s, %s)\n",
+				lhs_class, rhs_class, lhs_type, lhs_conv,
+				rhs_type, rhs_conv) >> cc_file
+		    }
+		}
+	      else
+		printf ("%s%s_CMP_OPS (%s, %s, %s, %s)\n",
+			lhs_class, rhs_class, lhs_type, lhs_conv,
+			rhs_type, rhs_conv) >> cc_file
+	    }
 
           if (bool_ops)
             printf ("%s%s_BOOL_OPS2 (%s, %s, %s, %s)\n", lhs_class, rhs_class,
 	            lhs_type, rhs_type, lhs_scalar_zero_val,
 	            rhs_scalar_zero_val) >> cc_file
 
 
           close (cc_file);
diff --git a/liboctave/mx-op-defs.h b/liboctave/mx-op-defs.h
--- a/liboctave/mx-op-defs.h
+++ b/liboctave/mx-op-defs.h
@@ -536,16 +536,64 @@ class boolNDArray;
 #define NDS_CMP_OPS(ND, NDC, S, SC) \
   NDS_CMP_OP (mx_el_lt, <,  ND, NDC, S, SC) \
   NDS_CMP_OP (mx_el_le, <=, ND, NDC, S, SC) \
   NDS_CMP_OP (mx_el_ge, >=, ND, NDC, S, SC) \
   NDS_CMP_OP (mx_el_gt, >,  ND, NDC, S, SC) \
   NDS_CMP_OP (mx_el_eq, ==, ND,    , S,   ) \
   NDS_CMP_OP (mx_el_ne, !=, ND,    , S,   )
 
+#define NDS_CMP_OP1(F, OP, ND, NDC, S, SC, SPEC) \
+  boolNDArray \
+  F (const ND& m, const S& s) \
+  { \
+    boolNDArray r; \
+ \
+    int len = m.length (); \
+ \
+    r.resize (m.dims ()); \
+ \
+    for (int i = 0; i < len; i++) \
+      r.elem(i) = operator OP <SPEC> (NDC (m.elem(i)), SC (s)); \
+ \
+    return r; \
+  }
+
+#define NDS_CMP_OPS1(ND, NDC, S, SC, SPEC) \
+  NDS_CMP_OP1 (mx_el_lt, <,  ND, NDC, S, SC, SPEC) \
+  NDS_CMP_OP1 (mx_el_le, <=, ND, NDC, S, SC, SPEC) \
+  NDS_CMP_OP1 (mx_el_ge, >=, ND, NDC, S, SC, SPEC) \
+  NDS_CMP_OP1 (mx_el_gt, >,  ND, NDC, S, SC, SPEC) \
+  NDS_CMP_OP1 (mx_el_eq, ==, ND,    , S,   , SPEC) \
+  NDS_CMP_OP1 (mx_el_ne, !=, ND,    , S,   , SPEC)
+
+#define NDS_CMP_OP2(F, OP, ND, NDC, S, SC, SPEC1, SPEC2) \
+  boolNDArray \
+  F (const ND& m, const S& s) \
+  { \
+    boolNDArray r; \
+ \
+    int len = m.length (); \
+ \
+    r.resize (m.dims ()); \
+ \
+    for (int i = 0; i < len; i++) \
+      r.elem(i) = operator OP <SPEC1,SPEC2> (NDC (m.elem(i)), SC (s)); \
+ \
+    return r; \
+  }
+
+#define NDS_CMP_OPS2(ND, NDC, S, SC, SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_lt, <,  ND, NDC, S, SC, SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_le, <=, ND, NDC, S, SC, SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_ge, >=, ND, NDC, S, SC, SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_gt, >,  ND, NDC, S, SC, SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_eq, ==, ND,    , S,   , SPEC1, SPEC2) \
+  NDS_CMP_OP2 (mx_el_ne, !=, ND,    , S,   , SPEC1, SPEC2)
+
 #define NDS_BOOL_OP_DECLS(ND, S) \
   NDBOOL_OP_DECL (mx_el_and, ND, S); \
   NDBOOL_OP_DECL (mx_el_or,  ND, S);
 
 #define NDS_BOOL_OP(F, OP, ND, S, LHS_ZERO, RHS_ZERO) \
   boolNDArray \
   F (const ND& m, const S& s) \
   { \
@@ -631,16 +679,64 @@ class boolNDArray;
 #define SND_CMP_OPS(S, CS, ND, CND) \
   SND_CMP_OP (mx_el_lt, <,  S, CS, ND, CND) \
   SND_CMP_OP (mx_el_le, <=, S, CS, ND, CND) \
   SND_CMP_OP (mx_el_ge, >=, S, CS, ND, CND) \
   SND_CMP_OP (mx_el_gt, >,  S, CS, ND, CND) \
   SND_CMP_OP (mx_el_eq, ==, S,   , ND,    ) \
   SND_CMP_OP (mx_el_ne, !=, S,   , ND,    )
 
+#define SND_CMP_OP1(F, OP, S, SC, ND, NDC, SPEC) \
+  boolNDArray \
+  F (const S& s, const ND& m) \
+  { \
+    boolNDArray r; \
+ \
+    int len = m.length (); \
+ \
+    r.resize (m.dims ()); \
+ \
+    for (int i = 0; i < len; i++) \
+      r.elem(i) = operator OP <SPEC> (SC (s), NDC (m.elem(i))); \
+ \
+    return r; \
+  }
+
+#define SND_CMP_OPS1(S, CS, ND, CND, SPEC) \
+  SND_CMP_OP1 (mx_el_lt, <,  S, CS, ND, CND, SPEC) \
+  SND_CMP_OP1 (mx_el_le, <=, S, CS, ND, CND, SPEC) \
+  SND_CMP_OP1 (mx_el_ge, >=, S, CS, ND, CND, SPEC) \
+  SND_CMP_OP1 (mx_el_gt, >,  S, CS, ND, CND, SPEC) \
+  SND_CMP_OP1 (mx_el_eq, ==, S,   , ND,    , SPEC) \
+  SND_CMP_OP1 (mx_el_ne, !=, S,   , ND,    , SPEC)
+
+#define SND_CMP_OP2(F, OP, S, SC, ND, NDC, SPEC1, SPEC2) \
+  boolNDArray \
+  F (const S& s, const ND& m) \
+  { \
+    boolNDArray r; \
+ \
+    int len = m.length (); \
+ \
+    r.resize (m.dims ()); \
+ \
+    for (int i = 0; i < len; i++) \
+      r.elem(i) = operator OP <SPEC1, SPEC2> (SC (s), NDC (m.elem(i))); \
+ \
+    return r; \
+  }
+
+#define SND_CMP_OPS2(S, CS, ND, CND, SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_lt, <,  S, CS, ND, CND, SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_le, <=, S, CS, ND, CND, SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_ge, >=, S, CS, ND, CND, SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_gt, >,  S, CS, ND, CND, SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_eq, ==, S,   , ND,    , SPEC1, SPEC2) \
+  SND_CMP_OP2 (mx_el_ne, !=, S,   , ND,    , SPEC1, SPEC2)
+
 #define SND_BOOL_OP_DECLS(S, ND) \
   NDBOOL_OP_DECL (mx_el_and, S, ND); \
   NDBOOL_OP_DECL (mx_el_or,  S, ND);
 
 #define SND_BOOL_OP(F, OP, S, ND, LHS_ZERO, RHS_ZERO) \
   boolNDArray \
   F (const S& s, const ND& m) \
   { \
diff --git a/liboctave/mx-ops b/liboctave/mx-ops
--- a/liboctave/mx-ops
+++ b/liboctave/mx-ops
@@ -1,47 +1,50 @@
 # types
 #
-# key typename object-type header fwd-decl-ok scalar-zero
+# key typename object-type header fwd-decl-ok scalar-zero core-type
 #
 # object-type is one of
 #
 #   S:  scalar
 #   M:  matrix
 #   DM: diagonal matrix
 #   ND: N-d array
 #
+# core-type is only used for the octave_int types, and is the template
+# parameter: octave_int8 is octave_int<int8_t>
+#
 x NONE NONE NONE NO 0
 b bool S NONE NO false
 bm boolMatrix ND boolMatrix.h YES false
 bnda boolNDArray ND boolNDArray.h YES false
 cdm ComplexDiagMatrix DM CDiagMatrix.h YES 0.0
 cm ComplexMatrix M CMatrix.h YES 0.0
 cnda ComplexNDArray ND CNDArray.h YES 0.0
 cs Complex S oct-cmplx.h NO 0.0
 dm DiagMatrix DM dDiagMatrix.h YES 0.0
 m Matrix M dMatrix.h YES 0.0
 nda NDArray ND dNDArray.h YES 0.0
 s double S NONE NO 0.0
-i8 octave_int8 S oct-inttypes.h YES octave_int8(0)
-ui8 octave_uint8 S oct-inttypes.h YES octave_uint8(0)
-i16 octave_int16 S oct-inttypes.h YES octave_int16(0)
-ui16 octave_uint16 S oct-inttypes.h YES octave_uint16(0)
-i32 octave_int32 S oct-inttypes.h YES octave_int32(0)
-ui32 octave_uint32 S oct-inttypes.h YES octave_uint32(0)
-i64 octave_int64 S oct-inttypes.h YES octave_int64(0)
-ui64 octave_uint64 S oct-inttypes.h YES octave_uint64(0)
-i8nda int8NDArray ND int8NDArray.h YES octave_int8(0)
-ui8nda uint8NDArray ND uint8NDArray.h YES octave_uint8(0)
-i16nda int16NDArray ND int16NDArray.h YES octave_int16(0)
-ui16nda uint16NDArray ND uint16NDArray.h YES octave_uint16(0)
-i32nda int32NDArray ND int32NDArray.h YES octave_int32(0)
-ui32nda uint32NDArray ND uint32NDArray.h YES octave_uint32(0)
-i64nda int64NDArray ND int64NDArray.h YES octave_int64(0)
-ui64nda uint64NDArray ND uint64NDArray.h YES octave_uint64(0)
+i8 octave_int8 S oct-inttypes.h YES octave_int8(0) int8_t
+ui8 octave_uint8 S oct-inttypes.h YES octave_uint8(0) uint8_t
+i16 octave_int16 S oct-inttypes.h YES octave_int16(0) int16_t
+ui16 octave_uint16 S oct-inttypes.h YES octave_uint16(0) uint16_t
+i32 octave_int32 S oct-inttypes.h YES octave_int32(0) int32_t
+ui32 octave_uint32 S oct-inttypes.h YES octave_uint32(0) uint32_t
+i64 octave_int64 S oct-inttypes.h YES octave_int64(0) int64_t
+ui64 octave_uint64 S oct-inttypes.h YES octave_uint64(0) uint64_t
+i8nda int8NDArray ND int8NDArray.h YES octave_int8(0) int8_t
+ui8nda uint8NDArray ND uint8NDArray.h YES octave_uint8(0) uint8_t
+i16nda int16NDArray ND int16NDArray.h YES octave_int16(0) int16_t
+ui16nda uint16NDArray ND uint16NDArray.h YES octave_uint16(0) uint16_t
+i32nda int32NDArray ND int32NDArray.h YES octave_int32(0) int32_t
+ui32nda uint32NDArray ND uint32NDArray.h YES octave_uint32(0) uint32_t
+i64nda int64NDArray ND int64NDArray.h YES octave_int64(0) int64_t
+ui64nda uint64NDArray ND uint64NDArray.h YES octave_uint64(0) uint64_t
 # ops
 # result_t lhs_t rhs_t op-type lhs_conv rhs_conv headers ...
 #
 # op-type is one of
 #
 #  B: binary ops, + - * /
 #  C: comparison ops, < <= == != >= >
 #  L: logical ops, & |
diff --git a/liboctave/oct-time.cc b/liboctave/oct-time.cc
--- a/liboctave/oct-time.cc
+++ b/liboctave/oct-time.cc
@@ -40,16 +40,22 @@ 02110-1301, USA.
 #undef min
 #undef max
 #endif
 
 #include "lo-error.h"
 #include "lo-utils.h"
 #include "oct-time.h"
 
+#ifndef HAVE_STRFTIME
+// Override any previous definition and use local version.
+extern "C" size_t
+strftime (char *s, size_t maxsize, const char *format, const struct tm *tp);
+#endif
+
 octave_time::octave_time (const octave_base_tm& tm)
 {
   struct tm t;
   
   t.tm_sec = tm.sec ();
   t.tm_min = tm.min ();
   t.tm_hour = tm.hour ();
   t.tm_mday = tm.mday ();
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,14 @@
 2006-10-27  John W. Eaton  <jwe@octave.org>
 
+	* load-path.cc (load_path::do_initialize):
+	Use dir_path::path_sep_str instead of ":".
+	Don't append ":::" to xpath when calling do_set.
+
 	* dirfns.cc (Fls, cleanup_iprocstream): Delete.
 
 	* sysdep.cc (Ftilde_expand): If arg is cellstr, return cellstr.
 
 	* ov.h (octave_value::is_cellstr): New function.
 	* ov-base.h (octave_base_value::is_cellstr): New function.
 	* ov-cell.h (octave_cell::is_cellstr): New function.
 	* ov-cell.cc (Fiscellstr): Implement with is_cellstr.
diff --git a/src/load-path.cc b/src/load-path.cc
--- a/src/load-path.cc
+++ b/src/load-path.cc
@@ -349,17 +349,17 @@ maybe_add_path_elts (std::string& path, 
 
   if (! tpath.empty ())
     path += dir_path::path_sep_str + tpath;
 }
 
 void
 load_path::do_initialize (void)
 {
-  Vsystem_path = ":";
+  Vsystem_path = dir_path::path_sep_str;
 
   maybe_add_path_elts (Vsystem_path, Vlocal_ver_oct_file_dir);
   maybe_add_path_elts (Vsystem_path, Vlocal_api_oct_file_dir);
   maybe_add_path_elts (Vsystem_path, Vlocal_oct_file_dir);
   maybe_add_path_elts (Vsystem_path, Vlocal_ver_fcn_file_dir);
   maybe_add_path_elts (Vsystem_path, Vlocal_api_fcn_file_dir);
   maybe_add_path_elts (Vsystem_path, Vlocal_fcn_file_dir);
   maybe_add_path_elts (Vsystem_path, Voct_file_dir);
@@ -370,20 +370,20 @@ load_path::do_initialize (void)
   if (tpath.empty ())
     tpath = octave_env::getenv ("OCTAVE_LOADPATH");
 
   std::string xpath = ".";
 
   if (! tpath.empty ())
     xpath += dir_path::path_sep_str + tpath;
 
-  if (Vsystem_path != ":")
+  if (Vsystem_path != dir_path::path_sep_str)
     xpath += Vsystem_path;
 
-  do_set (xpath + ":::", false);
+  do_set (xpath, false);
 }
 
 void
 load_path::do_clear (void)
 {
   dir_info_list.clear ();
   fcn_map.clear ();
 
