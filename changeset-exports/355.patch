# HG changeset patch
# User jwe
# Date 760929202 0
#      Fri Feb 11 01:13:22 1994 +0000
# Node ID 1752b1ef8bac2bbf6795b6de8b139b06e97a28c5
# Parent  1a75146ef3bbda7d448c2b388963e9302c681345
[project @ 1994-02-11 01:08:48 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -23,17 +23,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #include <assert.h>
 
 #if defined (__GNUG__) && defined (USE_EXTERNAL_TEMPLATES)
-#pragma implementation "Array.h"
+#pragma implementation
 #endif
 
 #include "Array.h"
 
 /*
  * The real representation of all arrays.
  */
 
diff --git a/liboctave/Array.h b/liboctave/Array.h
--- a/liboctave/Array.h
+++ b/liboctave/Array.h
@@ -231,33 +231,34 @@ class DiagArray : public Array<T>
 {
 #if ! defined (_AIX)
 private:
 
   class Proxy
   {
   public:
 
-    Proxy (DiagArray<T> *ref, int r, int c) : object (ref), i (r), j (c) { }
+    inline Proxy (DiagArray<T> *ref, int r, int c)
+      : object (ref), i (r), j (c) { } 
 
-    const Proxy& operator = (const T& val) const
+    inline const Proxy& operator = (const T& val) const
     {
       if (i == j)
 	{
 	  if (object)
 	    object->set (val, i);
 	}
       else
 	(*current_liboctave_error_handler)
 	  ("assignment to off-diagonal element attempted for diagonal array");
 
       return *this;
     }
 
-    operator T () const
+    inline operator T () const
     {
       if (object)
 	return object->get (i);
       else
 	{
 	  static T foo (0);
 	  return foo;
 	}
diff --git a/src/SLStack.cc b/src/SLStack.cc
--- a/src/SLStack.cc
+++ b/src/SLStack.cc
@@ -21,17 +21,17 @@ Software Foundation, 675 Mass Ave, Cambr
 
 */
 
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
 
 #if defined (__GNUG__) && defined (USE_EXTERNAL_TEMPLATES)
-#pragma implementation "SLStack.h"
+#pragma implementation
 #endif
 
 #include "SLStack.h"
 
 template <class T>
 SLStack<T>::SLStack (void) : p ()
 {
 }
diff --git a/src/SLStack.h b/src/SLStack.h
--- a/src/SLStack.h
+++ b/src/SLStack.h
@@ -14,23 +14,23 @@ PURPOSE.  See the GNU Library General Pu
 You should have received a copy of the GNU Library General Public
 License along with this library; if not, write to the Free Software
 Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
 #if !defined (_SLStack_h)
 #define _SLStack_h 1
 
-#include "SLList.h"
-#include "Stack.h"
-
 #if defined (__GNUG__) && defined (USE_EXTERNAL_TEMPLATES)
 #pragma interface
 #endif
 
+#include "SLList.h"
+#include "Stack.h"
+
 template <class T>
 class SLStack : public Stack<T>
 {
  private:
   SLList<T> p;
 
  public:
   SLStack (void);
diff --git a/src/Stack.h b/src/Stack.h
--- a/src/Stack.h
+++ b/src/Stack.h
@@ -16,17 +16,17 @@ License along with this library; if not,
 Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 */
 
 
 #ifndef _Stack_h
 #define _Stack_h 1
 
 #if defined (__GNUG__) && defined (USE_EXTERNAL_TEMPLATES)
-#pragma interface
+// #pragma interface
 #endif
 
 template <class T>
 class Stack
 {
  public:
   inline Stack (void) { }
   inline virtual ~Stack (void) { }
