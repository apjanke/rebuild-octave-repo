# HG changeset patch
# User Jaroslav Hajek <highegg@gmail.com>
# Date 1267453445 -3600
#      Mon Mar 01 15:24:05 2010 +0100
# Node ID f578e6468d0c7707fb9593851931e2325a5f8fc8
# Parent  eeb6c09ec51a4fc3b32de48b09289c959cb516e0
use C++-0x code in str2double

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-03-01  Jaroslav Hajek  <highegg@gmail.com>
+
+	* DLD-FUNCTIONS/str2double.cc (set_component): New helper func.
+	(str2double1): Use it here.
+
 2010-03-01  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/str2double.cc (str2double1): Use ISO-conformant code
 	for setting the real and imaginary part.
 
 2010-02-28  David Bateman  <dbateman@free.fr>
 
 	* DLD-FUNCTIONS/urlwrite.cc (curl_handle::init): Don't set
diff --git a/src/DLD-FUNCTIONS/str2double.cc b/src/DLD-FUNCTIONS/str2double.cc
--- a/src/DLD-FUNCTIONS/str2double.cc
+++ b/src/DLD-FUNCTIONS/str2double.cc
@@ -131,16 +131,33 @@ extract_num (std::istringstream& is, dou
     }
 
   if (negative)
     num = -num;
 
   return is;
 }
 
+static inline void
+set_component (Complex& c, double num, bool imag)
+{
+  // FIXME: this is C++-0x.
+#if defined (__GNUC__) || defined (__MSVC__)
+  if (imag)
+    c.imag (r);
+  else
+    c.real (r);
+#else
+  if (imag)
+    c = Complex (c.real (), num);
+  else
+    c = Complex (num, c.imag ());
+#endif
+}
+
 static Complex
 str2double1 (std::string str)
 {
   Complex val (0.0, 0.0);
   std::string::iterator se = str.end ();
   // Remove commas (thousand separators) and spaces.
   se = std::remove (str.begin (), se, ',');
   se = std::remove (str.begin (), se, ' ');
@@ -151,48 +168,24 @@ str2double1 (std::string str)
   bool i1, i2, s1, s2;
 
   if (is.eof ())
     val = octave_NaN;
   else if (! extract_num (is, num, i1, s1))
     val = octave_NaN;
   else
     {
-      if (i1)
-#ifdef __GNUC__
-        val.imag () = num; // GNU C++
-#else
-        val = Complex (val.real (), num); // ISO C++
-#endif
-      else
-#ifdef __GNUC__
-        val.real () = num; // GNU C++
-#else
-        val = Complex (num, val.imag ()); // ISO C++
-#endif
+      set_component (c, num, i1);
 
       if (! is.eof ())
         {
           if (! extract_num (is, num, i2, s2) || i1 == i2 || ! s2)
             val = octave_NaN;
           else
-            {
-              if (i2)
-#ifdef __GNUC__
-                val.imag () = num; // GNU C++
-#else
-                val = Complex (val.real (), num); // ISO C++
-#endif
-              else
-#ifdef __GNUC__
-                val.real () = num; // GNU C++
-#else
-                val = Complex (num, val.imag ()); // ISO C++
-#endif
-            }
+            set_component (c, num, i2);
         }
     }
 
   return val;
 }
 
 DEFUN_DLD (str2double, args, ,
   "-*- texinfo -*-\n\
