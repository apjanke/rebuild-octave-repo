# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1517600680 18000
#      Fri Feb 02 14:44:40 2018 -0500
# Node ID 4f8edc1b0f1852211ffa0ccd074e0883f633550d
# Parent  5c1d6ea818cdc506f21a45b6f72137c1ac71cc7f
remove some unused variable editor model code

* variable-editor-model.cc (class variable_editor_model::impl::cell):
Delete unused class.

diff --git a/libgui/src/variable-editor-model.cc b/libgui/src/variable-editor-model.cc
--- a/libgui/src/variable-editor-model.cc
+++ b/libgui/src/variable-editor-model.cc
@@ -246,107 +246,16 @@ do_requires_sub_editor (octave_value& va
         }
     }
   else
     return false;
 }
 
 struct variable_editor_model::impl
 {
-  struct cell
-  {
-    cell (void) : m_defined (false) { }
-
-    cell (const float_display_format& fmt, const octave_value& val,
-          int r, int c)
-      : m_defined (true), m_data ("no display"), m_status_tip ("status"),
-        m_tool_tip ("tip"), m_requires_sub_editor (false)
-    {
-      if (val.iscell ())
-        {
-          Cell cval = val.cell_value ();
-
-          octave_value ov = cval(r,c);
-
-          init_data_and_sub_editor (fmt, val, cval(r,c), r, c);
-        }
-      else if (val.isstruct ())
-        {
-          if (val.numel () == 1)
-            {
-              // Scalar struct.  Rows are fields, single column for
-              // values.
-
-              octave_scalar_map m = val.scalar_map_value ();
-
-              init_data_and_sub_editor (fmt, val, m.contents (r), r, c);
-            }
-          else if (val.rows () == 1 || val.columns () == 1)
-            {
-              // Vector struct.  Columns are fields, rows are values.
-
-              octave_map m = val.map_value ();
-
-              Cell cval = m.contents (c);
-
-              init_data_and_sub_editor (fmt, val, cval(r), r, c);
-            }
-          else
-            {
-              // 2-d struct array.  Rows and columns index individual
-              // scalar structs.
-
-              octave_map m = val.map_value ();
-
-              init_data_and_sub_editor (fmt, val, m(r,c), r, c);
-            }
-        }
-      else
-        m_data = QString::fromStdString (val.edit_display (fmt, r, c));
-    }
-
-    cell (const QString& d, const QString& s, const QString& t,
-          bool rse)
-      : m_defined (true), m_data (d), m_status_tip (s), m_tool_tip (t),
-        m_requires_sub_editor (rse)
-    { }
-
-    void init_data_and_sub_editor (const float_display_format& fmt,
-                                   const octave_value& val,
-                                   const octave_value& elt,
-                                   int r, int c)
-    {
-      if ((elt.numel () == 1 && (elt.isnumeric () || elt.islogical ()))
-          || (elt.is_string () && (elt.rows () == 1 || elt.isempty ())))
-        {
-          m_requires_sub_editor = false;
-          m_data = QString::fromStdString (elt.edit_display (fmt, 0, 0));
-        }
-      else
-        {
-          m_requires_sub_editor = true;
-          m_data = QString::fromStdString (val.edit_display (fmt, r, c));
-        }
-    }
-
-    bool m_defined;
-
-    QVariant m_data;
-
-    QVariant m_status_tip;
-
-    QVariant m_tool_tip;
-
-    QVariant m_background;
-
-    bool m_requires_sub_editor;
-
-    // FIXME: Other variables needed?
-  };
-
   impl (void) = delete;
 
   impl (const QString& name, const octave_value& val, QLabel *label)
     : m_name (name.toStdString ()), m_value (val),
       m_rows (0), m_cols (0), m_update_pending (),
       m_validity (true), m_validtext (make_label (m_name, m_value)),
       m_label (label), m_display_fmt (get_edit_display_format (m_value))
   {
