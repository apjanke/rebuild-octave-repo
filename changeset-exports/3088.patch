# HG changeset patch
# User jwe
# Date 875774475 0
#      Thu Oct 02 06:41:15 1997 +0000
# Node ID f33738510eb2c27bb39fc27cab4e2e2b88783281
# Parent  dd4a9ab9c2bde3a345f5163770571253a42aa051
[project @ 1997-10-02 06:38:36 by jwe]

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,12 @@
+Thu Oct  2 01:37:15 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* mkoctfile.in: Handle -IDIR option.
+
 Thu Sep 25 11:47:45 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* mkoctfile.in: Really add link options to link command.
 	Also handle -LDIR options.
 
 Fri Sep 19 09:35:59 1997  Kurt Hornik  <Kurt.Hornik@ci.tuwien.ac.at>
 
 	* octave-inf.el (inferior-octave-startup-args):  Set to '("-i") to
diff --git a/mkoctfile.in b/mkoctfile.in
--- a/mkoctfile.in
+++ b/mkoctfile.in
@@ -39,16 +39,17 @@ set -e
 usage_msg="usage: mkoctfile [options] file ..."
 
 cfiles=
 ccfiles=
 f77files=
 objfiles=
 octfiles=
 octfile=
+incflags=
 ldflags=
 dbg=:
 strip=false
 
 if [ $# -eq 0 ]; then
   echo $usage_msg
   exit 1;
 fi
@@ -77,16 +78,17 @@ while [ $# -gt 0 ]; do
     ;;
     -h | -? | --help)
       echo $usage_msg
       cat << EOF
 
 Options:
 
   -h, -? --help           Print this message.
+  -IDIR                   Add -IDIR to compile commands.
   -lLIB                   Add library LIB to link command.
   -LDIR                   Add -LDIR to link command.
   -o FILE, --output FILE  Output file name.  Default extension is .oct.
   -s, --strip             Strip output file.
   -v, --verbose           Echo commands as they are executed.
 
   FILE                    Compile or link FILE.  Recognized file types are:
 
@@ -96,20 +98,21 @@ Options:
 			    .cpp  C++ source
 			    .f    Fortran source
 			    .F    Fortran source
 			    .o    object file
 
 EOF
       exit 0
     ;;
+    -I*)
+      incflags="$incflags $1";;
+    ;;
     -[lL]*)
       ldflags="$ldflags $1";;
-    "")
-      break
     ;;
     -o | --output)
       shift
       if [ $# -gt 0 ]; then
         octfile=`echo $1 | sed 's,\.[^.]*$,,'`.oct
       else
         echo "mkoctfile: output file name missing"
       fi
@@ -150,18 +153,18 @@ if [ -n "$f77files" ]; then
   done
 fi
 
 if [ -n "$cfiles" ]; then
   for f in $cfiles; do
     b=`echo $f | sed 's,\.c$,,'`
     o=$b.o
     objfiles="$objfiles $o"
-    $dbg $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $f -o $o
-    eval $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $f -o $o
+    $dbg $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $f -o $o
+    eval $CC -c $CPPFLAGS $CPICFLAG $ALL_CFLAGS $incflags $f -o $o
   done
 fi
 
 if [ -n "$ccfiles" ]; then
   for f in $ccfiles; do
     case $f in
       *.cc)
         b=`echo $f | sed 's,\.cc$,,'`
@@ -170,18 +173,18 @@ if [ -n "$ccfiles" ]; then
         b=`echo $f | sed 's,\.C$,,'`
       ;;
       *.cpp)
         b=`echo $f | sed 's,\.cpp$,,'`
       ;;
     esac
     o=$b.o
     objfiles="$objfiles $o"
-    $dbg $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $f -o $o
-    eval $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $f -o $o
+    $dbg $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $f -o $o
+    eval $CXX -c $CPPFLAGS $CXXPICFLAG $ALL_CXXFLAGS $incflags $f -o $o
   done
 fi
 
 # Link all the object files.
 
 $dbg $SH_LD $SH_LDFLAGS -o $octfile $objfiles $ldflags
 eval $SH_LD $SH_LDFLAGS -o $octfile $objfiles $ldflags
 
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,12 +1,18 @@
+Thu Sep 25 10:17:26 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* DLD-FUNCTIONS/filter.cc (Ffilter): Return second output value
+	even when called with only 3 arguments.
+
 Mon Sep 22 16:44:27 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* DLD-FUNCTIONS/rand.cc (do_rand): Print error if first of two
 	args is a string but doesn't match "seed".
+	(Frand, Frandn): Fix doc string.
 
 Mon Aug 25 10:42:07 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* input.cc (get_user_input): Return an empty string if the user
 	just types RET.
 
 Thu Jul 31 22:59:04 1997  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
diff --git a/src/DLD-FUNCTIONS/filter.cc b/src/DLD-FUNCTIONS/filter.cc
--- a/src/DLD-FUNCTIONS/filter.cc
+++ b/src/DLD-FUNCTIONS/filter.cc
@@ -188,88 +188,94 @@ implementation.")
       || (nargin == 4 && args(3).is_complex_type ()))
     {
       ComplexColumnVector b = args(0).complex_vector_value ();
       ComplexColumnVector a = args(1).complex_vector_value ();
       ComplexColumnVector x = args(2).complex_vector_value ();
 
       if (! error_state)
 	{
+	  ComplexColumnVector si;
+
 	  if (nargin == 3)
 	    {
-	      ComplexColumnVector y (filter (b, a, x));
+	      int a_len = a.length ();
+	      int b_len = b.length ();
+
+	      int si_len = (a_len > b_len ? a_len : b_len) - 1;
+
+	      si.resize (si_len, 0.0);
+	    }
+	  else
+	    si = args(3).complex_vector_value ();
+
+	  if (! error_state)
+	    {
+	      ComplexColumnVector y (filter (b, a, x, si));
+
+	      if (nargout == 2)
+		{
+		  if (si_is_vector)
+		    retval (1) = octave_value (si, (args(3).columns () == 1));
+		  else
+		    retval (1) = si;
+		}
 
 	      if (x_is_vector)
 		retval (0) = octave_value (y, (args(2).columns () == 1));
 	      else
 		retval (0) = y;
 	    }
 	  else
-	    {
-	      ComplexColumnVector si = args(3).complex_vector_value ();
-
-	      if (! error_state)
-		{
-		  ComplexColumnVector y (filter (b, a, x, si));
-
-		  if (si_is_vector)
-		    retval (1) = octave_value (si, (args(3).columns () == 1));
-		  else
-		    retval (1) = si;
-
-		  if (x_is_vector)
-		    retval (0) = octave_value (y, (args(2).columns () == 1));
-		  else
-		    retval (0) = y;
-		}
-	      else
-		error (errmsg);
-	    }
+	    error (errmsg);
 	}
       else
 	error (errmsg);
     }
   else
     {
       ColumnVector b = args(0).vector_value ();
       ColumnVector a = args(1).vector_value ();
       ColumnVector x = args(2).vector_value ();
 
       if (! error_state)
 	{
+	  ColumnVector si;
+
 	  if (nargin == 3)
 	    {
-	      ColumnVector y (filter (b, a, x));
+	      int a_len = a.length ();
+	      int b_len = b.length ();
+
+	      int si_len = (a_len > b_len ? a_len : b_len) - 1;
+
+	      si.resize (si_len, 0.0);
+	    }
+	  else
+	    si = args(3).vector_value ();
+
+	  if (! error_state)
+	    {
+	      ColumnVector y (filter (b, a, x, si));
+
+	      if (nargout == 2)
+		{
+		  if (si_is_vector)
+		    retval (1) = octave_value (si, (args(3).columns () == 1));
+		  else
+		    retval (1) = si;
+		}
 
 	      if (x_is_vector)
 		retval (0) = octave_value (y, (args(2).columns () == 1));
 	      else
 		retval (0) = y;
 	    }
 	  else
-	    {
-	      ColumnVector si = args(3).vector_value ();
-
-	      if (! error_state)
-		{
-		  ColumnVector y (filter (b, a, x, si));
-
-		  if (si_is_vector)
-		    retval (1) = octave_value (si, (args(3).columns () == 1));
-		  else
-		    retval (1) = si;
-
-		  if (x_is_vector)
-		    retval (0) = octave_value (y, (args(2).columns () == 1));
-		  else
-		    retval (0) = y;
-		}
-	      else
-		error (errmsg);
-	    }
+	    error (errmsg);
 	}
       else
 	error (errmsg);
     }
 
   return retval;
 }
 
diff --git a/src/DLD-FUNCTIONS/rand.cc b/src/DLD-FUNCTIONS/rand.cc
--- a/src/DLD-FUNCTIONS/rand.cc
+++ b/src/DLD-FUNCTIONS/rand.cc
@@ -322,23 +322,23 @@ do_rand (const octave_value_list& args, 
     }
   else
     error ("rand: invalid negative argument");
 
   return retval;
 }
 
 DEFUN_DLD (rand, args, nargout,
-  "rand            -- generate a random value from a uniform distribution\n\
+  "rand              -- generate a random value from a uniform distribution\n\
 \n\
-rand (N)        -- generate N x N matrix\n\
-rand (size (A)) -- generate matrix the size of A\n\
-rand (N, M)     -- generate N x M matrix\n\
-rand (SEED)     -- get current seed\n\
-rand (SEED, N)  -- set seed\n\
+rand (N)          -- generate N x N matrix\n\
+rand (size (A))   -- generate matrix the size of A\n\
+rand (N, M)       -- generate N x M matrix\n\
+rand (\"seed\")     -- get current seed\n\
+rand (\"seed\", N)  -- set seed\n\
 \n\
 See also: randn")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin > 2 || nargout > 1)
@@ -356,23 +356,23 @@ See also: randn")
 
 static void
 reset_rand_generator (void *)
 {
   F77_XFCN (setcgn, SETCGN, (current_distribution));
 }
 
 DEFUN_DLD (randn, args, nargout,
-  "randn            -- generate a random value from a normal distribution\n\
+  "randn              -- generate a random value from a normal distribution\n\
 \n\
-randn (N)        -- generate N x N matrix\n\
-randn (size (A)) -- generate matrix the size of A\n\
-randn (N, M)     -- generate N x M matrix\n\
-randn (SEED)     -- get current seed\n\
-randn (SEED, N)  -- set seed\n\
+randn (N)          -- generate N x N matrix\n\
+randn (size (A))   -- generate matrix the size of A\n\
+randn (N, M)       -- generate N x M matrix\n\
+randn (\"seed\")     -- get current seed\n\
+randn (\"seed\", N)  -- set seed\n\
 \n\
 See also: rand")
 {
   octave_value_list retval;
 
   int nargin = args.length ();
 
   if (nargin > 2 || nargout > 1)
diff --git a/src/variables.cc b/src/variables.cc
--- a/src/variables.cc
+++ b/src/variables.cc
@@ -564,16 +564,18 @@ get_global_value (const string& nm)
   symbol_record *sr = global_sym_tab->lookup (nm);
 
   if (sr)
     {
       octave_value sr_def = sr->def ();
 
       if (sr_def.is_undefined ())
 	error ("get_global_by_name: undefined symbol `%s'", nm.c_str ());
+      else
+	retval = sr_def;
     }
   else
     error ("get_global_by_name: unknown symbol `%s'", nm.c_str ());
 
   return retval;
 }
 
 void
