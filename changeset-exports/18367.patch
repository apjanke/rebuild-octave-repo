# HG changeset patch
# User Rik <rik@octave.org>
# Date 1390583388 28800
#      Fri Jan 24 09:09:48 2014 -0800
# Branch stable
# Node ID d1e16bdb39581a5510df7bc4d2cf8043a2a8d42b
# Parent  2e62b1f01bfece6a5c10ba60006f22085a34abc1
myfeval.c: Fix segfault in mex example code.

* myfeval.c: Correctly cast away const attribute of prhs[].
Also, add code to work with Octave's built-in 'ans' variable.

* external.txi: Update example in External Code Interface for myfeval.

diff --git a/doc/interpreter/external.txi b/doc/interpreter/external.txi
--- a/doc/interpreter/external.txi
+++ b/doc/interpreter/external.txi
@@ -1707,22 +1707,21 @@ can be see in the example below.
 @EXAMPLEFILE(myfeval.c)
 @end example
 
 If this code is in the file @file{myfeval.c}, and is compiled to
 @file{myfeval.mex}, then an example of its use is
 
 @example
 @group
-myfeval ("sin", 1)
 a = myfeval ("sin", 1)
-@result{} Hello, World!
-    I have 2 inputs and 1 outputs
-    I'm going to call the interpreter function sin
-    a =  0.84147
+@result{} Starting file myfeval.mex
+   I have 2 inputs and 1 outputs
+   I'm going to call the interpreter function sin
+   a =  0.84147
 @end group
 @end example
 
 Note that it is not possible to use function handles or inline functions
 within a mex-file.
 
 @c @node Application Programming Interface for Mex-Files
 @c @subsection Application Programming Interface for Mex-Files
@@ -1806,13 +1805,12 @@ which, again, is compiled and run as a s
 $ mkoctfile --link-stand-alone standalonebuiltin.cc -o standalonebuiltin
 $ ./standalonebuiltin 
 This is a matrix:
  11 12
  21 22
 
 This is the norm of the matrix:
 34.4952
-
+$
 @end group
 @end example
 
-
diff --git a/examples/myfeval.c b/examples/myfeval.c
--- a/examples/myfeval.c
+++ b/examples/myfeval.c
@@ -1,23 +1,27 @@
 #include "mex.h"
 
 void
 mexFunction (int nlhs, mxArray* plhs[],
              int nrhs, const mxArray* prhs[])
 {
   char *str;
 
-  mexPrintf ("Hello, World!\n");
+  mexPrintf ("Starting file myfeval.mex\n");
 
   mexPrintf ("I have %d inputs and %d outputs\n", nrhs, nlhs);
 
   if (nrhs < 1 || ! mxIsString (prhs[0]))
     mexErrMsgTxt ("ARG1 must be a function name");
 
   str = mxArrayToString (prhs[0]);
 
   mexPrintf ("I'm going to call the function %s\n", str);
 
-  mexCallMATLAB (nlhs, plhs, nrhs-1, (mxArray*)prhs+1, str);
+  if (nlhs == 0)
+    nlhs = 1;  // Octave's automatic 'ans' variable
+
+  /* Cast prhs just to get rid of 'const' qualifier and stop compile warning */
+  mexCallMATLAB (nlhs, plhs, nrhs-1, (mxArray**)prhs+1, str);
 
   mxFree (str);
 }
