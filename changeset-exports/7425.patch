# HG changeset patch
# User jwe
# Date 1201511581 0
#      Mon Jan 28 09:13:01 2008 +0000
# Node ID fe4a43e1d1d38bafc10032e6a6041bdbb3fdbfee
# Parent  132647e6c829678fc26b8213301d58f58a6586ed
[project @ 2008-01-28 09:13:01 by jwe]

diff --git a/liboctave/idx-vector.cc b/liboctave/idx-vector.cc
--- a/liboctave/idx-vector.cc
+++ b/liboctave/idx-vector.cc
@@ -301,24 +301,24 @@ IDX_VEC_REP::operator = (const IDX_VEC_R
 	  for (octave_idx_type i = 0; i < len; i++)
 	    data[i] = a.data[i];
 	}
       else
 	data = 0;
 
       num_zeros = a.num_zeros;
       num_ones = a.num_ones;
+      range_base = a.range_base;
+      range_step = a.range_step;
       max_val = a.max_val;
       min_val = a.min_val;
       frozen_at_z_len = a.frozen_at_z_len;
       frozen_len = a.frozen_len;
       colon = a.colon;
       range = a.range;
-      range_base = a.range_base;
-      range_step = a.range_step;
       one_zero = a.one_zero;
       initialized = a.initialized;
       frozen = a.frozen;
       colon_equiv_checked = a.colon_equiv_checked;
       colon_equiv = a.colon_equiv;
       orig_dims = a.orig_dims;
     }
 
@@ -565,18 +565,27 @@ IDX_VEC_REP::shorten (octave_idx_type n)
   else
     (*current_liboctave_error_handler)
       ("idx_vector::shorten: internal error!");
 }
 
 std::ostream&
 IDX_VEC_REP::print (std::ostream& os) const
 {
-  for (octave_idx_type ii = 0; ii < len; ii++)
-    os << data[ii] << "\n";
+  if (colon)
+    os << "colon" << std::endl;
+  else if (range)
+    os << "range_base: " << range_base
+       << ", range_step: " << range_step << std::endl;
+  else
+    {
+      for (octave_idx_type ii = 0; ii < len; ii++)
+	os << data[ii] << "\n";
+    }
+
   return os;
 }
 
 octave_idx_type
 IDX_VEC_REP::freeze (octave_idx_type z_len, const char *tag, bool resize_ok)
 {
   if (frozen)
     return frozen_len;
diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2008-01-28  Michael Goffioul <michael.goffioul@gmail.com>
+
+	* plot/xlabel.m, plot/ylabel.m, plot/zlabel.m:
+	Return the label handle, not the current axis handle.
+
 2008-01-25  Alexander Barth  <barth.alexander@gmail.com>
 
 	* general/interpn.m: Compatibility fix. Don't ndgrid vector
 	abscissa.
 	
 2008-01-25  David Bateman  <dbateman@free.fr>
 
 	* general/__splinen__.m: Treat mixed orientation vectors.
diff --git a/scripts/plot/xlabel.m b/scripts/plot/xlabel.m
--- a/scripts/plot/xlabel.m
+++ b/scripts/plot/xlabel.m
@@ -44,12 +44,12 @@ function retval = xlabel (varargin)
   unwind_protect
     axes (h);
     tmp = __axis_label__ ("xlabel", varargin{:});
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
-    retval = h;
+    retval = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/ylabel.m b/scripts/plot/ylabel.m
--- a/scripts/plot/ylabel.m
+++ b/scripts/plot/ylabel.m
@@ -39,12 +39,12 @@ function retval = ylabel (varargin)
   unwind_protect
     axes (h);
     tmp = __axis_label__ ("ylabel", varargin{:});
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
-    retval = h;
+    retval = tmp;
   endif
 
 endfunction
diff --git a/scripts/plot/zlabel.m b/scripts/plot/zlabel.m
--- a/scripts/plot/zlabel.m
+++ b/scripts/plot/zlabel.m
@@ -39,12 +39,12 @@ function retval = zlabel (varargin)
   unwind_protect
     axes (h);
     tmp = __axis_label__ ("zlabel", varargin{:});
   unwind_protect_cleanup
     axes (oldh);
   end_unwind_protect
 
   if (nargout > 0)
-    retval = h;
+    retval = tmp;
   endif
 
 endfunction
