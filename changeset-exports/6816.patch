# HG changeset patch
# User jwe
# Date 1187153139 0
#      Wed Aug 15 04:45:39 2007 +0000
# Node ID ec4c1dfb985a40d87397c134c3ea9a62eb2b6128
# Parent  fa3c21cdf3bcb30eeba689628b845d921257c2fe
[project @ 2007-08-15 04:45:39 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,13 +1,8 @@
-2007-08-14  John W. Eaton  <jwe@octave.org>
-
-	* ov-str-mat.cc (octave_char_matrix_str::all_strings):
-	If empty, return a single element string vector containing "".
-
 2007-08-10  John W. Eaton  <jwe@octave.org>
 
 	* pt-idx.cc (tree_index_expression::get_struct_index): Improve
 	error message.
 	* ov-struct.cc (Fstruct, Fcell2struct): Trap invalid field names here.
 
 2007-08-10  Peter A. Gustafson  <petegus@umich.edu>
 
diff --git a/src/ov-str-mat.cc b/src/ov-str-mat.cc
--- a/src/ov-str-mat.cc
+++ b/src/ov-str-mat.cc
@@ -224,42 +224,24 @@ octave_char_matrix_str::complex_array_va
 
 string_vector
 octave_char_matrix_str::all_strings (bool) const
 {
   string_vector retval;
 
   if (matrix.ndims () == 2)
     {
-      // FIXME -- is this the best behavior possible?  It does provide
-      // compatible behavior for things like
-      //
-      //   cellstr ("")
-      //   cellstr (char (zeros ((2, 0)))
-      //   cellstr (char (zeros ((0, 2)))
-      //
-      // etc.
+      charMatrix chm = matrix.matrix_value ();
 
-      if (is_empty ())
-	{
-	  retval.resize (1);
+      octave_idx_type n = chm.rows ();
 
-	  retval[0] = "";
-	}
-      else
-	{
-	  charMatrix chm = matrix.matrix_value ();
+      retval.resize (n);
 
-	  octave_idx_type n = chm.rows ();
-
-	  retval.resize (n);
-
-	  for (octave_idx_type i = 0; i < n; i++)
-	    retval[i] = chm.row_as_string (i);
-	}
+      for (octave_idx_type i = 0; i < n; i++)
+	retval[i] = chm.row_as_string (i);
     }
   else
     error ("invalid conversion of charNDArray to string_vector");
 
   return retval;
 }
 
 std::string
