# HG changeset patch
# User jwe
# Date 1141092687 0
#      Tue Feb 28 02:11:27 2006 +0000
# Node ID 92f8b2723c8cfe86b339a2f117bd953cea6f72dc
# Parent  6e9a14b3c29997c9a8d122f7237657d59f8fa388
[project @ 2006-02-28 02:11:27 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,18 @@
+2006-02-27  John W. Eaton  <jwe@octave.org>
+
+	* time/tic.m: Move here from miscellaneous/tic.m.
+	* time/toc.m: Move here from miscellaneous/toc.m.
+
+2006-02-26  Keith Goodman  <kwgoodman@gmail.com>
+ 
+ 	* miscellaneous/toc.m: Display "Elapsed time is X seconds" if user
+	does not assign output of toc to a variable.
+
 2006-02-16  Bill Denney <denney@seas.upenn.edu>
 
  	* axis.m: Catch limits that are the same and return an error.
 
 2006-02-15  Dmitri A. Sergatskov  <dasergatskov@gmail.com>
 
 	* plot/print.m: Accept emf device option to support Enhanced
 	Metafile format.
diff --git a/scripts/miscellaneous/tic.m b/scripts/miscellaneous/tic.m
deleted file mode 100644
--- a/scripts/miscellaneous/tic.m
+++ /dev/null
@@ -1,71 +0,0 @@
-## Copyright (C) 1996, 1997 John W. Eaton
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2, or (at your option)
-## any later version.
-##
-## Octave is distributed in the hope that it will be useful, but
-## WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-## General Public License for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, write to the Free
-## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-## 02110-1301, USA.
-
-## -*- texinfo -*-
-## @deftypefn {Function File} {} tic ()
-## @deftypefnx {Function File} {} toc ()
-## These functions set and check a wall-clock timer.  For example,
-##
-## @example
-## tic ();
-## # many computations later...
-## elapsed_time = toc ();
-## @end example
-##
-## @noindent
-## will set the variable @code{elapsed_time} to the number of seconds since
-## the most recent call to the function @code{tic}.
-##
-## Nested timing with @code{tic} and @code{toc} is not supported.
-## Therefore @code{toc} will always return the elapsed time from the most
-## recent call to @code{tic}.
-##
-## If you are more interested in the CPU time that your process used, you
-## should use the @code{cputime} function instead.  The @code{tic} and
-## @code{toc} functions report the actual wall clock time that elapsed
-## between the calls.  This may include time spent processing other jobs or
-## doing nothing at all.  For example,
-##
-## @example
-## @group
-## tic (); sleep (5); toc ()
-##      @result{} 5
-## t = cputime (); sleep (5); cputime () - t
-##      @result{} 0
-## @end group
-## @end example
-##
-## @noindent
-## (This example also illustrates that the CPU timer may have a fairly
-## coarse resolution.)
-## @end deftypefn
-
-## Author: jwe
-
-function tic ()
-
-  if (nargin != 0)
-    warning ("tic: ignoring extra arguments");
-  endif
-
-  global __tic_toc_timestamp__;
-
-  __tic_toc_timestamp__ = clock ();
-
-endfunction
diff --git a/scripts/miscellaneous/toc.m b/scripts/miscellaneous/toc.m
deleted file mode 100644
--- a/scripts/miscellaneous/toc.m
+++ /dev/null
@@ -1,42 +0,0 @@
-## Copyright (C) 1996, 1997 John W. Eaton
-##
-## This file is part of Octave.
-##
-## Octave is free software; you can redistribute it and/or modify it
-## under the terms of the GNU General Public License as published by
-## the Free Software Foundation; either version 2, or (at your option)
-## any later version.
-##
-## Octave is distributed in the hope that it will be useful, but
-## WITHOUT ANY WARRANTY; without even the implied warranty of
-## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-## General Public License for more details.
-##
-## You should have received a copy of the GNU General Public License
-## along with Octave; see the file COPYING.  If not, write to the Free
-## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
-## 02110-1301, USA.
-
-## -*- texinfo -*-
-## @deftypefn {Function File} {} toc ()
-## See tic.
-## @end deftypefn
-
-## Author: jwe
-
-function secs = toc ()
-
-  if (nargin != 0)
-    warning ("toc: ignoring extra arguments");
-  endif
-
-  global __tic_toc_timestamp__ = -1;
-
-  if (__tic_toc_timestamp__ < 0)
-    warning ("toc called before timer set");
-    secs = [];
-  else
-    secs = etime (clock (), __tic_toc_timestamp__);
-  endif
-
-endfunction
diff --git a/scripts/time/tic.m b/scripts/time/tic.m
new file mode 100644
--- /dev/null
+++ b/scripts/time/tic.m
@@ -0,0 +1,71 @@
+## Copyright (C) 1996, 1997 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+## 02110-1301, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} tic ()
+## @deftypefnx {Function File} {} toc ()
+## These functions set and check a wall-clock timer.  For example,
+##
+## @example
+## tic ();
+## # many computations later...
+## elapsed_time = toc ();
+## @end example
+##
+## @noindent
+## will set the variable @code{elapsed_time} to the number of seconds since
+## the most recent call to the function @code{tic}.
+##
+## Nested timing with @code{tic} and @code{toc} is not supported.
+## Therefore @code{toc} will always return the elapsed time from the most
+## recent call to @code{tic}.
+##
+## If you are more interested in the CPU time that your process used, you
+## should use the @code{cputime} function instead.  The @code{tic} and
+## @code{toc} functions report the actual wall clock time that elapsed
+## between the calls.  This may include time spent processing other jobs or
+## doing nothing at all.  For example,
+##
+## @example
+## @group
+## tic (); sleep (5); toc ()
+##      @result{} 5
+## t = cputime (); sleep (5); cputime () - t
+##      @result{} 0
+## @end group
+## @end example
+##
+## @noindent
+## (This example also illustrates that the CPU timer may have a fairly
+## coarse resolution.)
+## @end deftypefn
+
+## Author: jwe
+
+function tic ()
+
+  if (nargin != 0)
+    warning ("tic: ignoring extra arguments");
+  endif
+
+  global __tic_toc_timestamp__;
+
+  __tic_toc_timestamp__ = clock ();
+
+endfunction
diff --git a/scripts/time/toc.m b/scripts/time/toc.m
new file mode 100644
--- /dev/null
+++ b/scripts/time/toc.m
@@ -0,0 +1,48 @@
+## Copyright (C) 1996, 1997 John W. Eaton
+##
+## This file is part of Octave.
+##
+## Octave is free software; you can redistribute it and/or modify it
+## under the terms of the GNU General Public License as published by
+## the Free Software Foundation; either version 2, or (at your option)
+## any later version.
+##
+## Octave is distributed in the hope that it will be useful, but
+## WITHOUT ANY WARRANTY; without even the implied warranty of
+## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+## General Public License for more details.
+##
+## You should have received a copy of the GNU General Public License
+## along with Octave; see the file COPYING.  If not, write to the Free
+## Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
+## 02110-1301, USA.
+
+## -*- texinfo -*-
+## @deftypefn {Function File} {} toc ()
+## See tic.
+## @end deftypefn
+
+## Author: jwe
+
+function secs = toc ()
+
+  if (nargin != 0)
+    warning ("toc: ignoring extra arguments");
+  endif
+
+  global __tic_toc_timestamp__ = -1;
+
+  if (__tic_toc_timestamp__ < 0)
+    warning ("toc called before timer set");
+    secs0 = [];
+  else
+    secs0 = etime (clock (), __tic_toc_timestamp__);
+  endif
+  
+  if (nargout != 0)
+    secs = secs0;
+  else
+    printf ("Elapsed time is %f seconds.\n", secs0);
+  endif  
+
+endfunction
