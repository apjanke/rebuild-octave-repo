# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1297044661 18000
#      Sun Feb 06 21:11:01 2011 -0500
# Branch release-3-4-x
# Node ID 75049b56fa35ab1a7c28aa4c3e3f32c884f790f5
# Parent  bc945da1289bb099c9d9a943e1a8e1e0257bf1ed
Finish reverting unintended commit left over by 12396-12397.

diff --git a/src/ls-mat5.cc b/src/ls-mat5.cc
--- a/src/ls-mat5.cc
+++ b/src/ls-mat5.cc
@@ -536,20 +536,21 @@ read_mat5_binary_element (std::istream& 
           // Why should I have to initialize outbuf as I'll just overwrite!!
           if (swap)
             swap_bytes<4> (tmp, 2);
 
           destLen = tmp[1] + 8;
           std::string outbuf (destLen, ' ');
 
           // FIXME -- find a way to avoid casting away const here!
-          int err = uncompress (reinterpret_cast<Bytef *> 
-                                (const_cast<char *> (outbuf.c_str ())),
+
+          int err = uncompress (reinterpret_cast<Bytef *> (const_cast<char *> (outbuf.c_str ())),
                                 &destLen, reinterpret_cast<Bytef *> (inbuf),
                                 element_length);
+
           if (err != Z_OK)
             {
               std::string msg;
               switch (err)
                 {
                 case Z_STREAM_END:
                   msg = "stream end";
                   break;
@@ -580,17 +581,16 @@ read_mat5_binary_element (std::istream& 
 
                 case Z_VERSION_ERROR:
                   msg = "version error";
                   break;
                 }
 
               error ("load: error uncompressing data element (%s from zlib)",
                      msg.c_str ());
-              break;
             }
           else
             {
               std::istringstream gz_is (outbuf);
               retval = read_mat5_binary_element (gz_is, filename,
                                                  swap, global, tc);
             }
         }
