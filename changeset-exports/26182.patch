# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1544221831 18000
#      Fri Dec 07 17:30:31 2018 -0500
# Node ID 34617dd78f02df2b6175e23f6bff4e8860e5c477
# Parent  d77938ba31c40739c4a9cf77c3da249744f3f6f7
avoid possible leaked global variables in tests

* clearvars.m, bug-35448.tst, bug-50035.tst, bug-52722.tst,
bug-53027.tst, bug-53579.tst, bug-53599.tst, global.tst, io.tst,
nest/nest.tst, unwind.tst: Clear global variables at end of tests that
use them.

diff --git a/scripts/miscellaneous/clearvars.m b/scripts/miscellaneous/clearvars.m
--- a/scripts/miscellaneous/clearvars.m
+++ b/scripts/miscellaneous/clearvars.m
@@ -213,8 +213,11 @@ endfunction
 
 ## Run BIST test functions
 %!test __test_local_vars__ ();
 %!test __test_global_vars__ ();
 
 ## Test input validation
 %!error <'-global' must be the first option> clearvars ("ans", "-global")
 %!error <'-except' may only be specified once> clearvars ("-except", "-except")
+
+%!test
+%!  clear -global x y z;  # cleanup after test
diff --git a/test/bug-35448/bug-35448.tst b/test/bug-35448/bug-35448.tst
--- a/test/bug-35448/bug-35448.tst
+++ b/test/bug-35448/bug-35448.tst
@@ -16,14 +16,16 @@
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 %!test
 %! global gfun
 %! gfun = @fB;
 %! y = fA (e);
 %! assert (y, e);
+%! clear -global gfun;  # cleanup after test
 
 %!test
 %! global gfun
 %! gfun = @fC;
 %! y = fA (e);
 %! assert (y, e);
+%! clear -global gfun;  # cleanup after test
diff --git a/test/bug-50035/bug-50035.tst b/test/bug-50035/bug-50035.tst
--- a/test/bug-50035/bug-50035.tst
+++ b/test/bug-50035/bug-50035.tst
@@ -24,8 +24,9 @@
 %! y = bug50035 ()
 %! assert (in_name, "y");
 %! bug50035 ()
 %! assert (in_name, "ans");
 %! x
 %! assert (in_name, "x");
 %! bug50035 ()
 %! assert (in_name, "ans");
+%! clear -global in_name;  # cleanup after test
diff --git a/test/bug-52722/bug-52722.tst b/test/bug-52722/bug-52722.tst
--- a/test/bug-52722/bug-52722.tst
+++ b/test/bug-52722/bug-52722.tst
@@ -1,2 +1,3 @@
 %!test
 %! include_globals
+%! clear -global a b c;  # cleanup after test
diff --git a/test/bug-53027/bug-53027.tst b/test/bug-53027/bug-53027.tst
--- a/test/bug-53027/bug-53027.tst
+++ b/test/bug-53027/bug-53027.tst
@@ -18,33 +18,38 @@
 %! save53027 (fname);
 %! assert (X, 1);
 %! load53027 (fname);
 %! assert (X, 1);
 %! load53027 (fname);
 %! assert (X, 1);
 %! clear X
 %! assert (exist ("X"), 0);
+%! clear -global X;  # cleanup after test
 
 %!test <*53027>
 %! [a, b] = ntest53027a ();
 %! assert ([a, b], [0, 0])
+%! clear -global x;  # cleanup after test
 
 %!test <*53027>
 %! [a, b] = ntest53027b ();
 %! assert ([a, b], [0, 0])
+%! clear -global x;  # cleanup after test
 
 %!test <*53027>
 %! [a, b] = ntest53027c ();
 %! assert ([a, b], [0, 0])
+%! clear -global x;  # cleanup after test
 
 ## Previous bugs have caused segfaults when executing script twice.
 %!test <*53027>
 %! gtest53027
 %! assert (isempty (a) && isempty (c))
 %! assert (isglobal ("a") && isglobal ("c"))
 %! assert (! exist ("b"))
 %! assert (isempty (xx) && ! isglobal ("xx"))
 %! gtest53027
 %! assert (isempty (a) && isempty (c))
 %! assert (isglobal ("a") && isglobal ("c"))
 %! assert (! exist ("b"))
 %! assert (isempty (xx) && ! isglobal ("xx"))
+%! clear -global a b c;
diff --git a/test/bug-53579.tst b/test/bug-53579.tst
--- a/test/bug-53579.tst
+++ b/test/bug-53579.tst
@@ -14,8 +14,9 @@
 %! aa = 3;
 %! xx = 5;
 %! [raa, rbb, igaa, igbb] = sub1 (aa, xx);
 %! assert (raa, 1);
 %! assert (rbb, []);
 %! assert (igaa);
 %! assert (igbb);
 %! assert (xx, 5);
+%! clear -global aa bb;  # cleanup after test
diff --git a/test/bug-53599.tst b/test/bug-53599.tst
--- a/test/bug-53599.tst
+++ b/test/bug-53599.tst
@@ -16,8 +16,9 @@
 %! clear global gval
 %! assert (sggval (), [])
 %! gval = 42;
 %! assert (sggval (), []);
 %! clear gval
 %! global gval
 %! gval = 42;
 %! assert (sggval (), 42);
+%! clear -global gval;  # cleanup after test
diff --git a/test/global.tst b/test/global.tst
--- a/test/global.tst
+++ b/test/global.tst
@@ -14,77 +14,85 @@
 ##
 ## You should have received a copy of the GNU General Public License
 ## along with Octave; see the file COPYING.  If not, see
 ## <https://www.gnu.org/licenses/>.
 
 %!test
 %! global G = 1;
 %! assert (G,1);
+%! clear -global G;  # cleanup after test
 
 %!function f ()
 %!  global G;
 %!  assert (G,1);
 %!endfunction
 %!test
 %! global G = 1;
 %! f;
+%! clear -global G;  # cleanup after test
 
 %!function f ()
 %!  fail ("G");
 %!endfunction
 %!test
 %! global G = 1;
 %! f ();
+%! clear -global G;  # cleanup after test
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %! f;
 %! fail ("H");
+%! clear -global H;  # cleanup after test
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %!function g ()
 %!  fail ("H");
 %!test
 %! g ();
+%! clear -global H;  # cleanup after test
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!function g ()
 %!  global H;
 %!  assert (H,1);
 %!endfunction
 %!test
 %! f ();
 %! g ();
+%! clear -global H;  # cleanup after test
 
 %!test
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!test
 %! fail ("H");
+%! clear -global H;  # cleanup after test
 
 %!function f ()
 %!  global H = 1;
 %!endfunction
 %!function g ()
 %!  global H;
 %!  assert (H,1);
 %!endfunction
 %!test
 %! f;
 %! clear H;
 %! g;
+%! clear -global H;  # cleanup after test
 
 %!function r = f ()
 %!  x = 1;
 %!  global x;
 %!  r = x;
 %!endfunction
 %!test
 %! warning ("off", "Octave:global-local-conflict", "local");
@@ -95,16 +103,17 @@
 %! global x
 %! assert (x, 0);
 %!test
 %! warning ("off", "Octave:global-local-conflict", "local");
 %! clear global x      ## clears global and local value
 %! assert (f (), 1);
 %! global x
 %! assert (x, 1);
+%! clear -global x;  # cleanup after test
 
 %!function r = f ()
 %!  x = 1;
 %!  global x = 3;
 %!  r = x;
 %!endfunction
 %!test
 %! warning ("off", "Octave:global-local-conflict", "local");
@@ -115,21 +124,23 @@
 %! global x
 %! assert (x, 0);
 %!test
 %! warning ("off", "Octave:global-local-conflict", "local");
 %! clear global x
 %! assert (f (), 1);
 %! global x
 %! assert (x, 1);
+%! clear -global x;  # cleanup after test
 
 %!test
 %! warning ("off", "Octave:global-local-conflict", "local");
 %! clear global x      ## clears global and local value
 %! x = 42;             ## local value
 %! global x            ## link to undefined global, global gets local value
 %! assert (x, 42);
 %! clear x             ## clears local; global still defined
 %! x = 13;             ## new local value
 %! global x;           ## link to existing global, local gets global value
 %! assert (x, 42);
 %! clear global x      ## clears global and local value
 %! assert (exist ("x"), 0);
+%! clear -global x;  # cleanup after test
diff --git a/test/io.tst b/test/io.tst
--- a/test/io.tst
+++ b/test/io.tst
@@ -188,16 +188,17 @@
 %! [save_status, save_files] = testls (0);
 %! [load_status, load_files] = testls (1);
 %!
 %! for f = [save_files, load_files]
 %!   unlink (f{1});
 %! endfor
 %!
 %! assert (save_status && load_status);
+%! clear -global a1;  # cleanup after test
 
 %!testif HAVE_HDF5
 %!
 %! s8  =   int8 (fix ((2^8  - 1) * (rand (2, 2) - 0.5)));
 %! u8  =  uint8 (fix ((2^8  - 1) * (rand (2, 2) - 0.5)));
 %! s16 =  int16 (fix ((2^16 - 1) * (rand (2, 2) - 0.5)));
 %! u16 = uint16 (fix ((2^16 - 1) * (rand (2, 2) - 0.5)));
 %! s32 =  int32 (fix ((2^32 - 1) * (rand (2, 2) - 0.5)));
diff --git a/test/nest/nest.tst b/test/nest/nest.tst
--- a/test/nest/nest.tst
+++ b/test/nest/nest.tst
@@ -17,17 +17,19 @@
 ## <https://www.gnu.org/licenses/>.
 
 ################################################################################
 ## This file actually executes the tests on nested functions.
 ##
 ## It relies on the function files defined in the nest/ directory.
 ################################################################################
 
-%!assert (recursive_nest (), 25)
+%!test
+%! assert (recursive_nest (), 25)
+%! clear -global recursive_nest_inc;  # cleanup after test
 
 %!assert (recursive_nest2 (), 20)
 
 %!assert (recursive_nest3 (), 5)
 
 %!assert (script_nest (), 5)
 
 %!assert (arg_ret (), 10)
diff --git a/test/unwind.tst b/test/unwind.tst
--- a/test/unwind.tst
+++ b/test/unwind.tst
@@ -50,8 +50,9 @@
 %!    y = [y, g];
 %!    assert (y, [0,-1]);
 %!  end_unwind_protect
 %!endfunction
 %!
 %!test
 %! global g = -1;
 %! fail ("y = f (3);", "mismatch");
+%! clear -global g;  # cleanup after test
