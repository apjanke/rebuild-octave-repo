# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1250615114 14400
#      Tue Aug 18 13:05:14 2009 -0400
# Node ID f5ec5dc668249e2a6f332814a3714eed07947c3a
# Parent  afbdf01bcacc039c3e0ec139e929ee06061caa46
use OCTAVE_CHECK_LIBRARY to check for HDF5

diff --git a/ChangeLog b/ChangeLog
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,8 +1,18 @@
+2009-08-18  John W. Eaton  <jwe@octave.org>
+
+	* Makeconf.in (ALL_CPPFLAGS): Add HDF5_CPPFLAGS to the list.
+	* aclocal.m4 (OCTAVE_HDF5_HAS_REQUIRED_API):
+	Set HAVE_HDF5 to false, not WITH_HDF5.
+	* configure.in: Use OCTAVE_CHECK_LIBRARY to check for HDF5
+	library.  Print HDF5_CPPFLAGS and HDF5_LDFLAGLS in the summary.
+	* octave-bug.in, octave-bug.cc.in, Makeconf.in: Substitute
+	HDF5_CPPFLAGS and HDF5_LDFLAGS.
+
 2009-08-18  John W. Eaton  <jwe@octave.org>
 
 	* acx_blas_f77_func.m4 (ACX_BLAS_F77_FUNC): Save and restore LIBS.
 
 2009-08-18  John W. Eaton  <jwe@octave.org>
 
 	* aclocal.m4 (OCTAVE_CHECK_LIBRARY): Use variables named
 	octave_check_library_save_XXX instead of save_XXX.
diff --git a/Makeconf.in b/Makeconf.in
--- a/Makeconf.in
+++ b/Makeconf.in
@@ -223,16 +223,19 @@ RLD_FLAG = @RLD_FLAG@
 FLIBS = @FLIBS@
 
 LIBGLOB = @LIBGLOB@
 LIBOCTINTERP = @LIBOCTINTERP@
 LIBOCTAVE = @LIBOCTAVE@
 LIBCRUFT = @LIBCRUFT@
 
 FT2_LIBS = @FT2_LIBS@
+
+HDF5_CPPFLAGS = @HDF5_CPPFLAGS@
+HDF5_LDFLAGS = @HDF5_LDFLAGS@
 HDF5_LIBS = @HDF5_LIBS@
 
 Z_CPPFLAGS = @Z_CPPFLAGS@
 Z_LDFLAGS = @Z_LDFLAGS@
 Z_LIBS = @Z_LIBS@
 
 GRAPHICS_LIBS = @GRAPHICS_LIBS@
 
@@ -288,17 +291,17 @@ UMFPACK_LIBS = @UMFPACK_LIBS@
 OPENGL_LIBS = @OPENGL_LIBS@
 QRUPDATE_LIBS = @QRUPDATE_LIBS@
 READLINE_LIBS = @READLINE_LIBS@
 TERM_LIBS = @TERM_LIBS@
 ARPACK_LIBS = @ARPACK_LIBS@
 DL_LIBS = @DL_LIBS@
 LIBS = @LIBS@
 
-ALL_CPPFLAGS = $(CPPFLAGS) $(Z_CPPFLAGS)
+ALL_CPPFLAGS = $(CPPFLAGS) $(HDF5_CPPFLAGS) $(Z_CPPFLAGS)
 
 ## Use sort to remove duplicates.
 SPARSE_CPPFLAGS = \
   $(sort $(AMD_CPPFLAGS) $(CAMD_CPPFLAGS) $(COLAMD_CPPFLAGS) \
     $(CCOLAMD_CPPFLAGS) $(CHOLMOD_CPPFLAGS) $(CXSPARSE_CPPFLAGS) \
     $(UMFPACK_CPPFLAGS))
 
 ## Use sort to remove duplicates.
@@ -605,16 +608,18 @@ echo "making $@ from $<"
   -e "s|%OCTAVE_CONF_FLIBS%|\"${FLIBS}\"|" \
   -e "s|%OCTAVE_CONF_FPICFLAG%|\"${FPICFLAG}\"|" \
   -e "s|%OCTAVE_CONF_FT2_LIBS%|\"${FT2_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_GLPK_CPPFLAGS%|\"${GLPK_CPPFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_GLPK_LDFLAGS%|\"${GLPK_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_GLPK_LIBS%|\"${GLPK_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_GNUPLOT%|\"${GNUPLOT}\"|" \
   -e "s|%OCTAVE_CONF_GRAPHICS_LIBS%|\"${GRAPHICS_LIBS}\"|" \
+  -e "s|%OCTAVE_CONF_HDF5_CPPFLAGS%|\"${HDF5_CPPFLAGS}\"|" \
+  -e "s|%OCTAVE_CONF_HDF5_LDFLAGS%|\"${HDF5_LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_HDF5_LIBS%|\"${HDF5_LIBS}\"|" \
   -e "s|%OCTAVE_CONF_INCFLAGS%|\"${INCFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_INCLUDEDIR%|\"${includedir}\"|" \
   -e "s|%OCTAVE_CONF_LD_CXX%|\"${LD_CXX}\"|" \
   -e "s|%OCTAVE_CONF_LDFLAGS%|\"${LDFLAGS}\"|" \
   -e "s|%OCTAVE_CONF_LD_STATIC_FLAG%|\"${LD_STATIC_FLAG}\"|" \
   -e "s|%OCTAVE_CONF_LEX%|\"${LEX}\"|" \
   -e "s|%OCTAVE_CONF_LEXLIB%|\"${LEXLIB}\"|" \
diff --git a/aclocal.m4 b/aclocal.m4
--- a/aclocal.m4
+++ b/aclocal.m4
@@ -1007,17 +1007,17 @@ AC_DEFUN([OCTAVE_HDF5_HAS_REQUIRED_API],
     AC_TRY_LINK([
 #define H5_USE_16_API 1
 #include <hdf5.h>
 ], [
   H5Eset_auto (0, 0);], [
       octave_cv_hdf5_has_required_api=yes], [
       octave_cv_hdf5_has_required_api=no])])
   if test "$octave_cv_hdf5_has_required_api" = "no"; then
-    WITH_HDF5=false
+    HAVE_HDF5=false
     warn_hdf5="HDF5 library does not provide the version 1.6 API.  Octave will not be able to save or load HDF5 data files."
     AC_MSG_WARN($warn_hdf5)
   fi
 ])
 dnl
 dnl Check for the QHull version.
 dnl
 AC_DEFUN(OCTAVE_CHECK_QHULL_VERSION,
diff --git a/configure.in b/configure.in
--- a/configure.in
+++ b/configure.in
@@ -491,59 +491,40 @@ AC_SUBST(REGEX_LIBS)
 ### Check for ZLIB library.
 
 OCTAVE_CHECK_LIBRARY(z, ZLIB,
   [ZLIB library not found.  Octave will not be able to save or load compressed data files or HDF5 files.],
   [zlib.h], [gzclearerr])
 
 ### Check for HDF5 library.
 
-if $WITH_Z; then
-
-  WITH_HDF5=true
-  AC_ARG_WITH(hdf5,
-    [AS_HELP_STRING([--without-hdf5], [don't use HDF5])],
-    with_hdf5=$withval, with_hdf5=yes)
-
-  hdf5_lib=
-  if test "$with_hdf5" = yes; then
-    hdf5_lib="hdf5"
-  elif test "$with_hdf5" != no; then
-    hdf5_lib="$with_hdf5"
-  fi
+save_CPPFLAGS="$CPPFLAGS"
+CPPFLAGS="$Z_CPPFLAGS $CPPFLAGS"
+save_LIBS="$LIBS"
+LIBS="$Z_LDFLAGS $Z_LIBS $LIBS"
+OCTAVE_CHECK_LIBRARY(hdf5, HDF5,
+  [HDF5 library not found.  Octave will not be able to save or load HDF5 data files.],
+  [hdf5.h], [H5Gget_num_objs], [], [],
+  [warn_hdf5=
+   OCTAVE_HDF5_HAS_REQUIRED_API
+   if test $HAVE_HDF5; then
+     AC_DEFINE(HAVE_HDF5, 1, [Define if HDF5 is available.])
+     AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])
+     case "$canonical_host_type" in
+       *-*-msdosmsvc)
+	 OCTAVE_HDF5_DLL
+	 ;;
+     esac
+   fi])
+CPPFLAGS="$save_CPPFLAGS"
+LIBS="$save_LIBS"
 
-  HDF5_LIBS=
-  WITH_HDF5=false
-  if test -n "$hdf5_lib"; then
-    AC_CHECK_LIB($hdf5_lib, H5Pcreate, [
-      AC_CHECK_HEADERS(hdf5.h, [
-        WITH_HDF5=true
-        HDF5_LIBS="-l$hdf5_lib"
-        save_LIBS="$LIBS"
-        LIBS="$HDF5_LIBS $Z_LIBS $LIBS"
-	AC_CHECK_LIB($hdf5_lib, H5Gget_num_objs, [
-          OCTAVE_HDF5_HAS_REQUIRED_API
-          if test $WITH_HDF5; then
-            AC_DEFINE(HAVE_HDF5, 1, [Define if HDF5 is available.])
-	    AC_DEFINE(HAVE_H5GGET_NUM_OBJS, 1, [Define if HDF5 has H5Gget_num_objs.])
-	  fi])
-        LIBS="$save_LIBS"])])
-  fi
 
-  if $WITH_HDF5; then
-    case "$canonical_host_type" in
-      *-*-msdosmsvc)
-        OCTAVE_HDF5_DLL
-        ;;
-    esac
-  fi
-fi
-AC_SUBST(HDF5_LIBS)
+# Subdirectory of libcruft to build if fftw is not found:
 
-# Subdirectories of libcruft to build if they aren't found on the system:
 FFT_DIR="fftpack"
 AC_SUBST(FFT_DIR)
 
 # Checks for FFTW header and library.
 
 OCTAVE_CHECK_LIBRARY(fftw3, FFTW3,
   [FFTW3 library not found.  The slower FFTPACK library will be used instead.],
   [fftw3.h], [fftw_plan_dft_1d])
@@ -2075,16 +2056,18 @@ Octave is now configured for $canonical_
   FFTW3 libraries:      $FFTW3_LIBS
   FFTW3F CPPFLAGS:      $FFTW3F_CPPFLAGS
   FFTW3F LDFLAGS:       $FFTW3F_LDFLAGS
   FFTW3F libraries:     $FFTW3F_LIBS
   FLTK backend libs:    $GRAPHICS_LIBS
   GLPK CPPFLAGS:        $GLPK_CPPFLAGS
   GLPK LDFLAGS:         $GLPK_LDFLAGS
   GLPK libraries:       $GLPK_LIBS
+  HDF5 CPPFLAGS:        $HDF5_CPPFLAGS
+  HDF5 LDFLAGS:         $HDF5_LDFLAGS
   HDF5 libraries:       $HDF5_LIBS
   OPENGL libraries:     $OPENGL_LIBS
   PTHREAD flags:        $PTHREAD_CFLAGS
   PTHREAD libraries:    $PTHREAD_LIBS
   QHULL CPPFLAGS:       $QHULL_CPPFLAGS
   QHULL LDFLAGS:        $QHULL_LDFLAGS
   QHULL libraries:      $QHULL_LIBS
   QRUPDATE libraries:   $QRUPDATE_LIBS
diff --git a/octave-bug.cc.in b/octave-bug.cc.in
--- a/octave-bug.cc.in
+++ b/octave-bug.cc.in
@@ -131,16 +131,18 @@ main (int argc, char **argv)
   vars["FFTW3_LIBS"] = %FFTW3_LIBS%;
   vars["FFTW3F_CPPFLAGS"] = %FFTW3F_CPPFLAGS%;
   vars["FFTW3F_LDFLAGS"] = %FFTW3F_LDFLAGS%;
   vars["FFTW3F_LIBS"] = %FFTW3F_LIBS%;
   vars["GRAPHICS_LIBS"] = %GRAPHICS_LIBS%;
   vars["GLPK_CPPFLAGS"] = %GLPK_CPPFLAGS%;
   vars["GLPK_LDFLAGS"] = %GLPK_LDFLAGS%;
   vars["GLPK_LIBS"] = %GLPK_LIBS%;
+  vars["HDF5_CPPFLAGS"] = %HDF5_CPPFLAGS%;
+  vars["HDF5_LDFLAGS"] = %HDF5_LDFLAGS%;
   vars["HDF5_LIBS"] = %HDF5_LIBS%;
   vars["OPENGL_LIBS"] = %OPENGL_LIBS%;
   vars["PTHREAD_CFLAGS"] = %PTHREAD_CFLAGS%;
   vars["PTHREAD_LIBS"] = %PTHREAD_LIBS%;
   vars["QHULL_CPPFLAGS"] = %QHULL_CPPFLAGS%;
   vars["QHULL_LDFLAGS"] = %QHULL_LDFLAGS%;
   vars["QHULL_LIBS"] = %QHULL_LIBS%;
   vars["QRUPDATE_LIBS"] = %QRUPDATE_LIBS%;
@@ -267,16 +269,18 @@ main (int argc, char **argv)
   os << "FFTW3_LIBS:        " << vars["FFTW3_LIBS"] << endl;
   os << "FFTW3F_CPPFLAGS:   " << vars["FFTW3F_CPPFLAGS"] << endl;
   os << "FFTW3F_LDFLAGS:    " << vars["FFTW3F_LDFLAGS"] << endl;
   os << "FFTW3F_LIBS:       " << vars["FFTW3F_LIBS"] << endl;
   os << "GRAPHICS_LIBS:     " << vars["GRAPHICS_LIBS"] << endl;
   os << "GLPK_CPPFLAGS:     " << vars["GLPK_CPPFLAGS"] << endl;
   os << "GLPK_LDFLAGS:      " << vars["GLPK_LDFLAGS"] << endl;
   os << "GLPK_LIBS:         " << vars["GLPK_LIBS"] << endl;
+  os << "HDF5_CPPFLAGS:     " << vars["HDF5_CPPFLAGS"] << endl;
+  os << "HDF5_LDFLAGS:      " << vars["HDF5_LDFLAGS"] << endl;
   os << "HDF5_LIBS:         " << vars["HDF5_LIBS"] << endl;
   os << "OPENGL_LIBS:       " << vars["OPENGL_LIBS"] << endl;
   os << "PTHREAD_CFLAGS:    " << vars["PTHREAD_CFLAGS"] << endl;
   os << "PTHREAD_LIBS:      " << vars["PTHREAD_LIBS"] << endl;
   os << "QHULL_CPPFLAGS:    " << vars["QHULL_CPPFLAGS"] << endl;
   os << "QHULL_LDFLAGS:     " << vars["QHULL_LDFLAGS"] << endl;
   os << "QHULL_LIBS:        " << vars["QHULL_LIBS"] << endl;
   os << "QRUPDATE_LIBS:     " << vars["QRUPDATE_LIBS"] << endl;
diff --git a/octave-bug.in b/octave-bug.in
--- a/octave-bug.in
+++ b/octave-bug.in
@@ -83,16 +83,18 @@ FFTW3_LDFLAGS=%FFTW3_LDFLAGS%
 FFTW3_LIBS=%FFTW3_LIBS%
 FFTW3F_CPPFLAGS=%FFTW3F_CPPFLAGS%
 FFTW3F_LDFLAGS=%FFTW3F_LDFLAGS%
 FFTW3F_LIBS=%FFTW3F_LIBS%
 GRAPHICS_LIBS=%GRAPHICS_LIBS%
 GLPK_CPPFLAGS=%GLPK_CPPFLAGS%
 GLPK_LDFLAGS=%GLPK_LDFLAGS%
 GLPK_LIBS=%GLPK_LIBS%
+HDF5_CPPFLAGS=%HDF5_CPPFLAGS%
+HDF5_LDFLAGS=%HDF5_LDFLAGS%
 HDF5_LIBS=%HDF5_LIBS%
 OPENGL_LIBS=%OPENGL_LIBS%
 PTHREAD_CFLAGS=%PTHREAD_CFLAGS%
 PTHREAD_LIBS=%PTHREAD_LIBS%
 QHULL_CPPFLAGS=%QHULL_CPPFLAGS%
 QHULL_LDFLAGS=%QHULL_LDFLAGS%
 QHULL_LIBS=%QHULL_LIBS%
 QRUPDATE_LIBS=%QRUPDATE_LIBS%
@@ -328,16 +330,18 @@ FFTW3_LDFLAGS:     $FFTW3_LDFLAGS
 FFTW3_LIBS:        $FFTW3_LIBS
 FFTW3F_CPPFLAGS:   $FFTW3F_CPPFLAGS
 FFTW3F_LDFLAGS:    $FFTW3F_LDFLAGS
 FFTW3F_LIBS:       $FFTW3F_LIBS
 GRAPHICS_LIBS:     $GRAPHICS_LIBS
 GLPK_CPPFLAGS:     $GLPK_CPPFLAGS
 GLPK_LDFLAGS:      $GLPK_LDFLAGS
 GLPK_LIBS:         $GLPK_LIBS
+HDF5_CPPFLAGS:     $HDF5_CPPFLAGS
+HDF5_LDFLAGS:      $HDF5_LDFLAGS
 HDF5_LIBS:         $HDF5_LIBS
 OPENGL_LIBS:       $OPENGL_LIBS
 PTHREAD_CFLAGS:    $PTHREAD_CFLAGS
 PTHREAD_LIBS:      $PTHREAD_LIBS
 QHULL_CPPFLAGS:    $QHULL_CPPFLAGS
 QHULL_LDFLAGS:     $QHULL_LDFLAGS
 QHULL_LIBS:        $QHULL_LIBS
 QRUPDATE_LIBS:     $QRUPDATE_LIBS
diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,15 @@
+2009-08-18  John W. Eaton  <jwe@octave.org>
+
+	* oct-conf.h.in: New #defines for HDF5_LDFLAGS and HDF5LDFLAGS.
+	* Makefile.in (OCTAVE_LIBS, OCTINTERP_LINK_DEPS):
+	Include them in the lists.
+	* toplev.cc (octave_config_info): Include them in the list.
+
 2009-08-17  John W. Eaton  <jwe@octave.org>
 
 	* oct-conf.h.in: New #defines for ZLIB_CPPFLAGS and ZLIB_LDFLAGS.
 	* toplev.cc (octave_config_info): Include them in the list.
 
 2009-08-17  John W. Eaton  <jwe@octave.org>
 
 	* Makefile.in (OCTINTERP_LINK_DEPS): Include FFTW_LDFLAGS,
diff --git a/src/Makefile.in b/src/Makefile.in
--- a/src/Makefile.in
+++ b/src/Makefile.in
@@ -287,17 +287,17 @@ DOC_FILES := $(sort $(DEF_FILES))
 
 ifeq ($(ENABLE_DYNAMIC_LINKING), true)
   OCTAVE_LIBS = -L. $(LIBOCTINTERP) \
     -L../liboctave $(LIBOCTAVE) \
     -L../libcruft $(LIBCRUFT) \
     $(FFTW_LDFLAGS) $(FFTW_LIBS) \
     $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
     $(FT2_LDFLAGS) $(FT2_LIBS) \
-    $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
+    $(HDF5_LDFLAGS) $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
     $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
     $(READLINE_LIBS) $(TERM_LIBS) \
     $(LIBGLOB) \
     $(LIBS)
 else
   ## FIXME -- this list is probably not complete now.  It may not even
   ## be possible to build a statically linked copy of Octave that is
   ## fully functional.
@@ -311,27 +311,27 @@ else
     $(SPARSE_LDFLAGS) $(SPARSE_LIBS) \
     $(BLAS_LIBS) \
     $(REGEX_LDFLAGS) $(REGEX_LIBS) \
     $(CURL_LDFLAGS) $(CURL_LIBS) \
     $(GLPK_LDFLAGS) $(GLPK_LIBS) \
     $(MAGICK_LIBS) \
     $(GRAPHICS_LDFLAGS) $(GRAPHICS_LIBS) \
     $(FT2_LDFLAGS) $(FT2_LIBS) \
-    $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
+    $(HDF5_LDFLAGS) $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
     $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
     $(READLINE_LIBS) $(TERM_LIBS) \
     $(LIBPLPLOT) $(LIBGLOB) \
     $(LIBS)
 endif
 
 OCTINTERP_LINK_DEPS = $(RLD_FLAG) -L../liboctave $(LIBOCTAVE) \
   -L../libcruft $(LIBCRUFT) \
   $(FFTW_LDFLAGS) $(FFTW_LIBS) \
-  $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
+  $(HDF5_LDFLAGS) $(HDF5_LIBS) $(Z_LDFLAGS) $(Z_LIBS) \
   $(OPENGL_LIBS) $(X11_LIBS) $(CARBON_LIBS) \
   $(READLINE_LIBS) \
   $(LIBS)
 
 OCT_LINK_DEPS = $(RLD_FLAG) -L. $(LIBOCTINTERP) \
   -L../liboctave $(LIBOCTAVE) \
   -L../libcruft $(LIBCRUFT)
 
diff --git a/src/oct-conf.h.in b/src/oct-conf.h.in
--- a/src/oct-conf.h.in
+++ b/src/oct-conf.h.in
@@ -276,16 +276,24 @@ along with Octave; see the file COPYING.
 #ifndef OCTAVE_CONF_GNUPLOT
 #define OCTAVE_CONF_GNUPLOT %OCTAVE_CONF_GNUPLOT%
 #endif
 
 #ifndef OCTAVE_CONF_GRAPHICS_LIBS
 #define OCTAVE_CONF_GRAPHICS_LIBS %OCTAVE_CONF_GRAPHICS_LIBS%
 #endif
 
+#ifndef OCTAVE_CONF_HDF5_CPPFLAGS
+#define OCTAVE_CONF_HDF5_CPPFLAGS %OCTAVE_CONF_HDF5_CPPFLAGS%
+#endif
+
+#ifndef OCTAVE_CONF_HDF5_LDFLAGS
+#define OCTAVE_CONF_HDF5_LDFLAGS %OCTAVE_CONF_HDF5_LDFLAGS%
+#endif
+
 #ifndef OCTAVE_CONF_HDF5_LIBS
 #define OCTAVE_CONF_HDF5_LIBS %OCTAVE_CONF_HDF5_LIBS%
 #endif
 
 #ifndef OCTAVE_CONF_INCFLAGS
 #define OCTAVE_CONF_INCFLAGS %OCTAVE_CONF_INCFLAGS%
 #endif
 
diff --git a/src/toplev.cc b/src/toplev.cc
--- a/src/toplev.cc
+++ b/src/toplev.cc
@@ -1251,16 +1251,18 @@ specified option.\n\
       { false, "FLIBS", OCTAVE_CONF_FLIBS },
       { false, "FPICFLAG", OCTAVE_CONF_FPICFLAG },
       { false, "FT2_LIBS", OCTAVE_CONF_FT2_LIBS },
       { false, "GLPK_CPPFLAGS", OCTAVE_CONF_GLPK_CPPFLAGS },
       { false, "GLPK_LDFLAGS", OCTAVE_CONF_GLPK_LDFLAGS },
       { false, "GLPK_LIBS", OCTAVE_CONF_GLPK_LIBS },
       { false, "GNUPLOT", OCTAVE_CONF_GNUPLOT },
       { false, "GRAPHICS_LIBS", OCTAVE_CONF_GRAPHICS_LIBS },
+      { false, "HDF5_CPPFLAGS", OCTAVE_CONF_HDF5_CPPFLAGS },
+      { false, "HDF5_LDFLAGS", OCTAVE_CONF_HDF5_LDFLAGS },
       { false, "HDF5_LIBS", OCTAVE_CONF_HDF5_LIBS },
       { false, "INCFLAGS", OCTAVE_CONF_INCFLAGS },
       { false, "LDFLAGS", OCTAVE_CONF_LDFLAGS },
       { false, "LD_CXX", OCTAVE_CONF_LD_CXX },
       { false, "LD_STATIC_FLAG", OCTAVE_CONF_LD_STATIC_FLAG },
       { false, "LEX", OCTAVE_CONF_LEX },
       { false, "LEXLIB", OCTAVE_CONF_LEXLIB },
       { false, "LFLAGS", OCTAVE_CONF_LFLAGS },
