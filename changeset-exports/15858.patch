# HG changeset patch
# User Rik <rik@octave.org>
# Date 1356673415 28800
#      Thu Dec 27 21:43:35 2012 -0800
# Node ID fb756e8d66202a6b07d8f135277c7eeab93ab06c
# Parent  715d324b1b7292205adf85cfe4d2bb105a968540
Silence compilation warning in ov-java.h.

* libinterp/octave-value/ov-java.h(print, print_raw): Move function
bodies to ov-java.cc.  Leave only prototypes in .h file.

* libinterp/octave-value/ov-java.cc(print, print_raw): Function bodies
moved from ov-java.h.

diff --git a/libinterp/octave-value/ov-java.cc b/libinterp/octave-value/ov-java.cc
--- a/libinterp/octave-value/ov-java.cc
+++ b/libinterp/octave-value/ov-java.cc
@@ -173,16 +173,29 @@ private:
 
 private:
 
   JavaVMInitArgs vm_args;
 
   std::list<std::string> java_opts;
 };
 
+void
+octave_java::print (std::ostream& os, bool) const
+{
+  print_raw (os);
+  newline (os);
+}
+
+void
+octave_java::print_raw (std::ostream& os, bool) const
+{
+  os << "<Java object: " << java_classname << ">";
+}
+
 static dim_vector compute_array_dimensions (JNIEnv* jni_env, jobject obj);
 
 #ifdef __WIN32__
 static std::string
 read_registry_string (const std::string& key, const std::string& value)
 {
   HKEY hkey;
   DWORD len;
diff --git a/libinterp/octave-value/ov-java.h b/libinterp/octave-value/ov-java.h
--- a/libinterp/octave-value/ov-java.h
+++ b/libinterp/octave-value/ov-java.h
@@ -144,26 +144,19 @@ public:
   bool is_map (void) const { return false; }
 
   bool is_java (void) const { return true; }
 
   string_vector map_keys (void) const;
 
   dim_vector dims (void) const;
 
-  void print (std::ostream& os, bool pr_as_read_syntax = false) const
-  {
-    os << "<Java object: " << java_classname << ">";
-    newline(os);
-  }
+  void print (std::ostream& os, bool pr_as_read_syntax = false) const;
 
-  void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const
-  {
-    print(os, pr_as_read_syntax);
-  }
+  void print_raw (std::ostream& os, bool pr_as_read_syntax = false) const;
 
   octave_value_list
   subsref (const std::string& type,
            const std::list<octave_value_list>& idx, int nargout);
 
   octave_value
   subsref (const std::string& type, const std::list<octave_value_list>& idx)
   {
