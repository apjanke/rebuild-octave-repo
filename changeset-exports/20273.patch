# HG changeset patch
# User Rik <rik@octave.org>
# Date 1435078794 25200
#      Tue Jun 23 09:59:54 2015 -0700
# Branch stable
# Node ID b8c1b3e9aa91d4070848a4212971b063e3334e9e
# Parent  dc74b700cdec684a9ecd08f9bfbb101636e271af
Fix segfault when '[]' used for row_vector_property.

* graphics.in.h (row_vector_property::add_constraint (octave_idx_type len)):
Remove validation that accepts 0x0 matrix.

* graphics.in.h (image::init): Call add_constraint() to allow 0x0 since
xdata, ydata can legitimately be '[]' for these properties.

diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -1456,16 +1456,17 @@ public:
   {
     array_property::add_constraint (dims);
   }
 
   void add_constraint (octave_idx_type len)
   {
     size_constraints.remove (dim_vector (1, -1));
     size_constraints.remove (dim_vector (-1, 1));
+    size_constraints.remove (dim_vector (0, 0));
 
     add_constraint (dim_vector (1, len));
     add_constraint (dim_vector (len, 1));
   }
 
   row_vector_property& operator = (const octave_value& val)
   {
     set (val);
@@ -4687,17 +4688,19 @@ public:
       radio_property xdatamode ha , "{auto}|manual"
       radio_property ydatamode ha , "{auto}|manual"
     END_PROPERTIES
 
   protected:
     void init (void)
     {
       xdata.add_constraint (2);
+      xdata.add_constraint (dim_vector (0, 0));
       ydata.add_constraint (2);
+      ydata.add_constraint (dim_vector (0, 0));
       cdata.add_constraint ("double");
       cdata.add_constraint ("single");
       cdata.add_constraint ("logical");
       cdata.add_constraint ("uint8");
       cdata.add_constraint ("uint16");
       cdata.add_constraint ("int16");
       cdata.add_constraint ("real");
       cdata.add_constraint (dim_vector (-1, -1));
