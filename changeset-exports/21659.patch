# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1461962438 14400
#      Fri Apr 29 16:40:38 2016 -0400
# Node ID ff2347e1df0245f1fe0d6f1cd30c52b8287b0efa
# Parent  2f9078956a637e3658a12a9e259c44005bb7747e
maint: Strip trailing whitespace from source files.

diff --git a/libinterp/corefcn/graphics.in.h b/libinterp/corefcn/graphics.in.h
--- a/libinterp/corefcn/graphics.in.h
+++ b/libinterp/corefcn/graphics.in.h
@@ -5153,25 +5153,25 @@ public:
 
     void update_vertex_normals (void);
 
     void update_vertexnormalsmode (void)
     { update_vertex_normals (); }
 
     void set_normalmode (const octave_value& val)
     {
-      warning_with_id ("Octave:deprecated-property", 
+      warning_with_id ("Octave:deprecated-property",
         "surface: Property 'normalmode' is deprecated and will be removed "
         "from a future version of Octave. Use 'vertexnormalsmode' instead.");
       set_vertexnormalsmode (val);
     }
 
     std::string get_normalmode (void) const
     {
-      warning_with_id ("Octave:deprecated-property", 
+      warning_with_id ("Octave:deprecated-property",
         "surface: Property 'normalmode' is deprecated and will be removed "
         "from a future version of Octave. Use 'vertexnormalsmode' instead.");
       return vertexnormalsmode.current_value ();
     }
   };
 
 private:
   properties xproperties;
diff --git a/scripts/plot/util/copyobj.m b/scripts/plot/util/copyobj.m
--- a/scripts/plot/util/copyobj.m
+++ b/scripts/plot/util/copyobj.m
@@ -62,21 +62,21 @@ function hnew = copyobj (horig, hparent 
   endif
 
   ## current figure and axes
   cf = gcf ();
   ca = get (cf, "currentaxes");
 
   ## compatibility of input handles
   for i = 1:numel (horig)
-    kididx(i) = find (strcmp (alltypes, get (horig(i), "type"))); 
+    kididx(i) = find (strcmp (alltypes, get (horig(i), "type")));
   endfor
 
   for i = 1:numel (hparent)
-    paridx(i) = find (strcmp (alltypes, get (hparent(i), "type"))); 
+    paridx(i) = find (strcmp (alltypes, get (hparent(i), "type")));
   endfor
 
   if (kididx <= paridx)
     error ("copyobj: %s object can't be a child of %s.",
            alltypes{kididx}, alltypes{paridx});
   endif
 
   ## loop over vector inputs
