# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1225402275 14400
#      Thu Oct 30 17:31:15 2008 -0400
# Node ID b2a6309b2d8766b6df6c14f63c645e2ced50b87c
# Parent  ad5bb02d267aa32d5d762be488562503ba69dde5
oct-map.cc: copy key_list in indexing functions

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,12 @@
+2008-10-30  John W. Eaton  <jwe@octave.org>
+
+	* oct-map.cc (Octave_map::index): Copy key_list.
+
 2008-10-30  David Bateman  <dbateman@free.fr>
 
 	* graphic.h.in (axes::properties): Add keyreverse property.
 	* graphic.cc (axes::properties::set_defaults): Initialize
 	keyreverse property.
 
 2008-10-28  Jaroslav Hajek <highegg@gmail.com>
 
diff --git a/src/oct-map.cc b/src/oct-map.cc
--- a/src/oct-map.cc
+++ b/src/oct-map.cc
@@ -482,16 +482,19 @@ Octave_map::index (const octave_value_li
 	{
 	  Cell tmp = contents(p).index (idx, resize_ok);
 
 	  if (error_state)
 	    break;
 
 	  retval.assign (key(p), tmp);
 	}
+
+      // Preserve order of keys.
+      retval.key_list = key_list;
     }
   else
     retval = *this;
 
   return retval;
 }
 
 Octave_map
@@ -504,16 +507,19 @@ Octave_map::index (idx_vector& i, int re
       Cell tmp = contents (p).index (i, resize_ok, rfv);
 
       if (error_state)
 	break;
 
       retval.assign (key (p), tmp);
     }
 
+  // Preserve order of keys.
+  retval.key_list = key_list;
+
   return retval;
 }
 
 Octave_map
 Octave_map::index (idx_vector& i, idx_vector& j, int resize_ok,
 		   const octave_value& rfv) const
 {
   Octave_map retval (dims ());
@@ -523,16 +529,19 @@ Octave_map::index (idx_vector& i, idx_ve
       Cell tmp = contents (p).index (i, j, resize_ok, rfv);
 
       if (error_state)
 	break;
 
       retval.assign (key (p), tmp);
     }
 
+  // Preserve order of keys.
+  retval.key_list = key_list;
+
   return retval;
 }
 
 Octave_map
 Octave_map::index (Array<idx_vector>& ra_idx, int resize_ok,
 		   const octave_value& rfv) const
 {
   Octave_map retval (dims ());
@@ -542,16 +551,19 @@ Octave_map::index (Array<idx_vector>& ra
       Cell tmp = contents (p).index (ra_idx, resize_ok, rfv);
 
       if (error_state)
 	break;
 
       retval.assign (key (p), tmp);
     }
 
+  // Preserve order of keys.
+  retval.key_list = key_list;
+
   return retval;
 }
 
 /*
 ;;; Local Variables: ***
 ;;; mode: C++ ***
 ;;; End: ***
 */
