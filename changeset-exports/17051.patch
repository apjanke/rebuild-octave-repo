# HG changeset patch
# User Pantxo Diribarne <pantxo.diribarne@gmail.com>
# Date 1374588367 -7200
#      Tue Jul 23 16:06:07 2013 +0200
# Node ID 3e1b24a2454a8745a51b44497774f511880e9d73
# Parent  9ff7d4849f0376928c694d3478150ea7085481d5
cylinder.m, ellipsoid.m, rectangle.m, sphere.m: Update to use new __plt_get_axis_arg__.

* scripts/plot/cylinder.m, scripts/plot/ellipsoid.m, scripts/plot/rectangle.m,
scripts/plot/sphere.m: Update to use new __plt_get_axis_arg__.
Rename ax to hax.

diff --git a/scripts/plot/cylinder.m b/scripts/plot/cylinder.m
--- a/scripts/plot/cylinder.m
+++ b/scripts/plot/cylinder.m
@@ -43,18 +43,17 @@
 ## title ("a cone");
 ## @end group
 ## @end example
 ## @seealso{sphere}
 ## @end deftypefn
 
 function [xx, yy, zz] = cylinder (varargin)
 
-  [ax, args, nargs] = __plt_get_axis_arg__ ((nargout > 0), "cylinder",
-                                            varargin{:});
+  [hax, args, nargs] = __plt_get_axis_arg__ ("cylinder", varargin{:});
 
   if (nargs == 0)
     n = 20;
     r = [1, 1];
   elseif (nargs == 1)
     n = 20;
     r = args{1};
   elseif (nargs == 2)
@@ -75,17 +74,27 @@ function [xx, yy, zz] = cylinder (vararg
   r = r(idx);
   [x, y] = pol2cart (phi, r);
 
   if (nargout > 0)
     xx = x;
     yy = y;
     zz = z;
   else
-    surf (ax, x, y, z);
+    oldfig = ifelse (isempty (hax), [], get (0, "currentfigure"));
+    unwind_protect
+      hax = newplot (hax);
+    
+      surf (hax, x, y, z);
+      
+    unwind_protect_cleanup
+      if (! isempty (oldfig))
+        set (0, "currentfigure", oldfig);
+      endif
+    end_unwind_protect
   endif
 
 endfunction
 
 
 %!demo
 %! clf;
 %! colormap ('default');
diff --git a/scripts/plot/ellipsoid.m b/scripts/plot/ellipsoid.m
--- a/scripts/plot/ellipsoid.m
+++ b/scripts/plot/ellipsoid.m
@@ -26,18 +26,17 @@
 ## set of axes.
 ## @seealso{sphere}
 ## @end deftypefn
 
 ## Author: Sylvain Pelissier <sylvain.pelissier@gmail.com>
 
 function [xx, yy, zz] = ellipsoid (varargin)
 
-  [h, varargin, nargin] = __plt_get_axis_arg__ ((nargout > 0), "ellipsoid",
-                                                varargin{:});
+  [hax, varargin, nargin] = __plt_get_axis_arg__ ("ellipsoid", varargin{:});
 
   if (nargin != 6 && nargin != 7)
     print_usage ();
   endif
 
   xc = varargin{1};
   yc = varargin{2};
   zc = varargin{3};
@@ -59,17 +58,27 @@ function [xx, yy, zz] = ellipsoid (varar
   y = yr .* cos (phi) .* sin (theta) + yc;
   z = zr .* sin (phi) + zc;
 
   if (nargout > 0)
     xx = x;
     yy = y;
     zz = z;
   else
-    surf (h, x, y, z);
+    oldfig = ifelse (isempty (hax), [], get (0, "currentfigure"));
+    unwind_protect
+      hax = newplot (hax);
+    
+      surf (hax, x, y, z);
+      
+    unwind_protect_cleanup
+      if (! isempty (oldfig))
+        set (0, "currentfigure", oldfig);
+      endif
+    end_unwind_protect
   endif
 
 endfunction
 
 
 %!demo
 %! clf;
 %! ellipsoid (0, 0, 1, 2, 3, 4, 20);
diff --git a/scripts/plot/rectangle.m b/scripts/plot/rectangle.m
--- a/scripts/plot/rectangle.m
+++ b/scripts/plot/rectangle.m
@@ -50,20 +50,30 @@
 ## rectangle object.
 ## @end deftypefn
 ## @seealso{patch}
 
 function h = rectangle (varargin)
 
   [hax, varargin] = __plt_get_axis_arg__ ("rectangle", varargin{:});
 
-  tmp =  __rectangle__ (hax, varargin{:});
+  oldfig = ifelse (isempty (hax), [], get (0, "currentfigure"));
+  unwind_protect
+    hax = newplot (hax);
+
+    htmp =  __rectangle__ (hax, varargin{:});
+
+  unwind_protect_cleanup
+    if (! isempty (oldfig))
+      set (0, "currentfigure", oldfig);
+    endif
+  end_unwind_protect
 
   if (nargout > 0)
-    h = tmp;
+    h = htmp;
   endif
 endfunction
 
 function hg = __rectangle__ (hax, varargin)
 
   iarg = 1;
   pos = [0, 0, 1, 1];
   curv2 = [0, 0];
diff --git a/scripts/plot/sphere.m b/scripts/plot/sphere.m
--- a/scripts/plot/sphere.m
+++ b/scripts/plot/sphere.m
@@ -27,18 +27,18 @@
 ## Called with no return arguments, @code{sphere} call directly
 ## @code{surf (@var{x}, @var{y}, @var{z})}.  If an axes handle is passed
 ## as the first argument, the surface is plotted to this set of axes.
 ## @seealso{peaks}
 ## @end deftypefn
 
 function [xx, yy, zz] = sphere (varargin)
 
-  [h, varargin, nargin] = __plt_get_axis_arg__ ((nargout > 0), "sphere",
-                                                varargin{:});
+  [hax, varargin, nargin] = __plt_get_axis_arg__ ("sphere", varargin{:});
+
   if (nargin > 1)
     print_usage ();
   elseif (nargin == 1)
     n = varargin{1};
   else
     n = 20;
   endif
 
@@ -50,12 +50,22 @@ function [xx, yy, zz] = sphere (varargin
   y = cos (phi) .* sin (theta);
   z = sin (phi);
 
   if (nargout > 0)
     xx = x;
     yy = y;
     zz = z;
   else
-    surf (h, x, y, z);
+    oldfig = ifelse (isempty (hax), [], get (0, "currentfigure"));
+    unwind_protect
+      hax = newplot (hax);
+    
+      surf (hax, x, y, z);
+      
+    unwind_protect_cleanup
+      if (! isempty (oldfig))
+        set (0, "currentfigure", oldfig);
+      endif
+    end_unwind_protect
   endif
 
 endfunction
