# HG changeset patch
# User Rik <rik@octave.org>
# Date 1478562117 28800
#      Mon Nov 07 15:41:57 2016 -0800
# Node ID 6f111a0f32c3f7bd7d577eec07539b04f6dc040d
# Parent  c426d8ec521dd3a5be2130fc443ed7cde97bb34c
importdata.m: Fix failing BIST test (bug #49546).

* importdata.m: If line is prematurely short, use emptyvalue NA for missing
columns.

diff --git a/scripts/io/importdata.m b/scripts/io/importdata.m
--- a/scripts/io/importdata.m
+++ b/scripts/io/importdata.m
@@ -238,20 +238,20 @@ function [output, delimiter, header_rows
 
   if (num_header_rows >= 0)
     header_rows = num_header_rows;
   endif
 
   ## Now, let the efficient built-in routine do the bulk of the work.
   if (delimiter == " ")
     output.data = dlmread (fname, "", header_rows, header_cols,
-                           "emptyvalue", NaN);
+                           "emptyvalue", NA);
   else
     output.data = dlmread (fname, delimiter, header_rows, header_cols,
-                           "emptyvalue", NaN);
+                           "emptyvalue", NA);
   endif
 
   ## Go back and correct any individual values that did not convert.
   na_idx = isna (output.data);
   if (header_cols > 0)
     na_idx = [(true (rows (na_idx), header_cols)), na_idx];
   endif
   if (any (na_idx(:)))
@@ -262,21 +262,30 @@ function [output, delimiter, header_rows
     for ridx = na_rows(:)'
       row = file_content{ridx+header_rows};
       if (delimiter == " ")
         fields = regexp (strtrim (row), ' +', 'split');
       else
         fields = ostrsplit (row, delimiter);
       endif
 
-      text = fields(na_idx(ridx,:));
+      missing_idx = na_idx(ridx,:);
+      if (! size_equal (missing_idx, fields))
+        ## Fields completely missing at end of line.  Replace with NA.
+        col = columns (fields);
+        output.data(ridx, (col+1):end) = NA;
+        missing_idx = missing_idx(1:col);
+      endif
+      text = fields(missing_idx);
+
       text = text(! strcmpi (text, "NA"));  #  Remove valid "NA" entries
       if (! isempty (text))
-        output.textdata(end+1:end+numel (text), 1) = text;
+        output.textdata = [output.textdata; text(:)];
       endif
+
       if (header_cols)
         output.rowheaders(end+1, :) = fields(1:header_cols);
       endif
     endfor
 
   endif
 
   ## Final cleanup to satisfy output configuration
