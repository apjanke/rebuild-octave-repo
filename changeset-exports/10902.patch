# HG changeset patch
# User Tatsuro MATSUOKA <tmacchant@yahoo.co.jp>
# Date 1280726749 -32400
#      Mon Aug 02 14:25:49 2010 +0900
# Node ID 9a64e02e2aad2a08d39794b8539ed7b987b11367
# Parent  860427ac9b7742ed9edc22b27acae53071bfbcac
Validate input arguments for gamma, lgamma.

diff --git a/liboctave/lo-specfun.cc b/liboctave/lo-specfun.cc
--- a/liboctave/lo-specfun.cc
+++ b/liboctave/lo-specfun.cc
@@ -303,17 +303,17 @@ xlgamma (double x)
 #if defined (HAVE_LGAMMA)
   return lgamma (x);
 #else
   double result;
   double sgngam;
 
   if (xisnan (x))
     result = x;
-  else if (xisinf (x))
+  else if ((x <= 0 && D_NINT (x) == x) || xisinf (x))
     result = octave_Inf;
   else
     F77_XFCN (dlgams, DLGAMS, (x, result, sgngam));
 
   return result;
 #endif
 }
 
@@ -325,17 +325,17 @@ rc_lgamma (double x)
 #if defined (HAVE_LGAMMA_R)
   int sgngam;
   result = lgamma_r (x, &sgngam);    
 #else
   double sgngam;
 
   if (xisnan (x))
     result = x;
-  else if (xisinf (x))
+  else if ((x <= 0 && D_NINT (x) == x) || xisinf (x))
     result = octave_Inf;
   else
     F77_XFCN (dlgams, DLGAMS, (x, result, sgngam));
 
 #endif
 
   if (sgngam < 0)
     return result + Complex (0., M_PI);
@@ -368,17 +368,17 @@ xlgamma (float x)
 #if defined (HAVE_LGAMMAF)
   return lgammaf (x);
 #else
   float result;
   float sgngam;
 
   if (xisnan (x))
     result = x;
-  else if (xisinf (x))
+  else if ((x <= 0 && D_NINT (x) == x) || xisinf (x))
     result = octave_Float_Inf;
   else
     F77_XFCN (algams, ALGAMS, (x, result, sgngam));
 
   return result;
 #endif
 }
 
@@ -390,17 +390,17 @@ rc_lgamma (float x)
 #if defined (HAVE_LGAMMAF_R)
   int sgngam;
   result = lgammaf_r (x, &sgngam);    
 #else
   float sgngam;
 
   if (xisnan (x))
     result = x;
-  else if (xisinf (x))
+  else if ((x <= 0 && D_NINT (x) == x) || xisinf (x))
     result = octave_Float_Inf;
   else
     F77_XFCN (algams, ALGAMS, (x, result, sgngam));
 
 #endif
 
   if (sgngam < 0)
     return result + FloatComplex (0., M_PI);
