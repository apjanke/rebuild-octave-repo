# HG changeset patch
# User jwe
# Date 1074799854 0
#      Thu Jan 22 19:30:54 2004 +0000
# Node ID 5101dffb417856107215dfc49cbab2bfbad74247
# Parent  48191fcee04db199a7d761e0b91533e5dc5225df
[project @ 2004-01-22 19:30:54 by jwe]

diff --git a/liboctave/Array.cc b/liboctave/Array.cc
--- a/liboctave/Array.cc
+++ b/liboctave/Array.cc
@@ -2728,34 +2728,23 @@ assignN (Array<LT>& lhs, const Array<RT>
     {
       // Scalar to matrix assignment with as many indices as lhs
       // dimensions.
 
       int n = Array<LT>::get_size (frozen_len);
 
       Array<int> result_idx (lhs_dims.length (), 0);
 
-      Array<int> elt_idx;
-
       RT scalar = rhs.elem (0);
 
       for (int i = 0; i < n; i++)
 	{
-	  elt_idx = get_elt_idx (idx, result_idx);
-
-	  dim_vector lhs_inc;
-	  lhs_inc.resize (lhs_dims.length ());
-
-	  for (int j = 0; j < lhs_dims.length (); j++)
-	    lhs_inc(j) = lhs_dims(j) + 1;
-
-	  if (index_in_bounds(elt_idx, lhs_inc))
-	    lhs.checkelem (elt_idx) = scalar;
-	  else
-	    lhs.checkelem (elt_idx) = rfv;
+	  Array<int> elt_idx = get_elt_idx (idx, result_idx);
+
+	  lhs.checkelem (elt_idx) = scalar;
 
 	  increment_index (result_idx, frozen_len);
 	}
     }
   else if (rhs_dims.length () > 1)
     {
       // RHS is matrix or higher dimension.
 
diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2004-01-22  Petter Risholm  <risholm@stud.ntnu.no>
+
+	* Array.cc (Array<T>::assignN): Eliminate unnecessray code for
+	filling when RHS is scalar and dimension lengths agree.
+
 2004-01-22  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* Makefile.in (distclean): Remove $(MX_OP_INC), $(VX_OP_INC),
 	and $(OPTS_INC).
 
 2004-01-22  Petter Risholm  <risholm@stud.ntnu.no>
 
 	* Array.cc (Array<T>::resize_and_fill): Correctly copy old elements.
