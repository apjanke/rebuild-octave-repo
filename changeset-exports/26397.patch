# HG changeset patch
# User Rik <rik@octave.org>
# Date 1546531674 28800
#      Thu Jan 03 08:07:54 2019 -0800
# Branch stable
# Node ID c4ec882ffb7c57d2e6a1a19b98f3a23b350ca9f3
# Parent  70b604e6223748b9259efaab80d5c005346516d8
oct-sort.cc: Fix static analyzer detected issues (bug #55347).

* oct-sort.cc: Enclose expression that is the subject of -= operator in
parentheses so it is atomic and parsed correctly.

diff --git a/liboctave/util/oct-sort.cc b/liboctave/util/oct-sort.cc
--- a/liboctave/util/oct-sort.cc
+++ b/liboctave/util/oct-sort.cc
@@ -648,17 +648,17 @@ octave_sort<T>::merge_lo (T *pa, octave_
       /* One run is winning so consistently that galloping may
        * be a huge win.  So try that, and continue galloping until
        * (if ever) neither run appears to be winning consistently
        * anymore.
        */
       ++min_gallop;
       do
         {
-          min_gallop -= min_gallop > 1;
+          min_gallop -= (min_gallop > 1);
           ms->min_gallop = min_gallop;
           k = gallop_right (*pb, pa, na, 0, comp);
           acount = k;
           if (k)
             {
               if (k < 0)
                 goto Fail;
               dest = std::copy (pa, pa + k, dest);
@@ -782,17 +782,17 @@ octave_sort<T>::merge_lo (T *pa, octave_
       /* One run is winning so consistently that galloping may
        * be a huge win.  So try that, and continue galloping until
        * (if ever) neither run appears to be winning consistently
        * anymore.
        */
       ++min_gallop;
       do
         {
-          min_gallop -= min_gallop > 1;
+          min_gallop -= (min_gallop > 1);
           ms->min_gallop = min_gallop;
           k = gallop_right (*pb, pa, na, 0, comp);
           acount = k;
           if (k)
             {
               if (k < 0)
                 goto Fail;
               dest = std::copy (pa, pa + k, dest);
@@ -930,17 +930,17 @@ octave_sort<T>::merge_hi (T *pa, octave_
       /* One run is winning so consistently that galloping may
        * be a huge win.  So try that, and continue galloping until
        * (if ever) neither run appears to be winning consistently
        * anymore.
        */
       ++min_gallop;
       do
         {
-          min_gallop -= min_gallop > 1;
+          min_gallop -= (min_gallop > 1);
           ms->min_gallop = min_gallop;
           k = gallop_right (*pb, basea, na, na-1, comp);
           if (k < 0)
             goto Fail;
           k = na - k;
           acount = k;
           if (k)
             {
@@ -1071,17 +1071,17 @@ octave_sort<T>::merge_hi (T *pa, octave_
       /* One run is winning so consistently that galloping may
        * be a huge win.  So try that, and continue galloping until
        * (if ever) neither run appears to be winning consistently
        * anymore.
        */
       ++min_gallop;
       do
         {
-          min_gallop -= min_gallop > 1;
+          min_gallop -= (min_gallop > 1);
           ms->min_gallop = min_gallop;
           k = gallop_right (*pb, basea, na, na-1, comp);
           if (k < 0)
             goto Fail;
           k = na - k;
           acount = k;
           if (k)
             {
