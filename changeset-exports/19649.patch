# HG changeset patch
# User Mike Miller <mtmiller@ieee.org>
# Date 1422846934 18000
#      Sun Feb 01 22:15:34 2015 -0500
# Node ID 830c8457295a6f0b5e2ca9797633689101877db4
# Parent  16f21db320b5053a1865154d2726f340697068a1
Check for gnuplot binary with executable file extension if needed

* __init_gnuplot__.cc (have_gnuplot_binary): Check for gnuplot binary with
the executable file extension added if it's defined.

diff --git a/libinterp/dldfcn/__init_gnuplot__.cc b/libinterp/dldfcn/__init_gnuplot__.cc
--- a/libinterp/dldfcn/__init_gnuplot__.cc
+++ b/libinterp/dldfcn/__init_gnuplot__.cc
@@ -33,16 +33,17 @@ To initialize:
 #include <config.h>
 #endif
 
 #include "builtins.h"
 #include "defun-dld.h"
 #include "error.h"
 #include "file-stat.h"
 #include "graphics.h"
+#include "oct-conf.h"
 #include "oct-env.h"
 #include "parse.h"
 #include "utils.h"
 #include "variables.h"
 
 // PKG_ADD: if (__have_gnuplot__ ()) register_graphics_toolkit ("gnuplot"); endif
 
 static bool toolkit_loaded = false;
@@ -167,26 +168,36 @@ private:
           }
       }
   }
 };
 
 static bool
 have_gnuplot_binary (void)
 {
+  const std::string exeext = std::string (OCTAVE_CONF_EXEEXT);
+  const std::string path = octave_env::getenv ("PATH");
+
   octave_value_list tmp = feval ("gnuplot_binary", octave_value_list ());
   std::string gnuplot_binary = tmp(0).string_value ();
 
-  std::string path = octave_env::getenv ("PATH");
-
   string_vector args (gnuplot_binary);
   std::string gnuplot_path = search_path_for_file (path, args);
 
   file_stat fs (gnuplot_path);
 
+  if (! fs.exists () && ! exeext.empty ())
+    {
+      args[0] += exeext;
+
+      gnuplot_path = search_path_for_file (path, args);
+
+      fs = file_stat (gnuplot_path);
+    }
+
   return fs.exists ();
 }
 
 // Initialize the gnuplot graphics toolkit.
 
 DEFUN_DLD (__init_gnuplot__, , , "")
 {
   octave_value retval;
