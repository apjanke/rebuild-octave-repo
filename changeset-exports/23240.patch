# HG changeset patch
# User Rik <rik@octave.org>
# Date 1488151977 28800
#      Sun Feb 26 15:32:57 2017 -0800
# Node ID e3cb3b761aa7279a06323dee5fb6e956103092d6
# Parent  6c691829a24dd6562d74c2619d9900ba51435fb3
Only imread a URL if the input looks like a URL (bug #49228).

* imageIO.m: Add regexp test to identify URL before attempting urlwrite.

diff --git a/scripts/image/private/imageIO.m b/scripts/image/private/imageIO.m
--- a/scripts/image/private/imageIO.m
+++ b/scripts/image/private/imageIO.m
@@ -49,32 +49,33 @@ function varargout = imageIO (func, core
   ## extension to the URL
 
   file_2_delete = false;  # will we have to remove the file in the end?
   persistent abs_path = @(x) file_in_path (IMAGE_PATH, tilde_expand (x));
 
   ## Filename was given with file extension
   fn = abs_path (filename);
   if (isempty (fn) && ! isempty (varargin))
-    ## Maybe if we add a file extension
+    ## Maybe if we add a file extension?
     fn = abs_path ([filename "." varargin{1}]);
   endif
 
-  ## Maybe we have an URL
-  if (isempty (fn))
+  ## Maybe we have a URL
+  if (isempty (fn)
+      && ! isempty (regexp (filename, '^[a-zA-Z][a-zA-Z0-9.+-]+:')))
     file_2_delete = true; # mark file for deletion
     [fn, ~] = urlwrite (filename, tempname ());
-    ## Maybe the URL is missing the file extension
+    ## Maybe the URL is missing the file extension?
     if (isempty (fn) && ! isempty (varargin))
       [fn, ~] = urlwrite ([filename "." varargin{1}], tempname ());
     endif
+  endif
 
-    if (isempty (fn))
-      error ("%s: unable to find file %s", func, filename);
-    endif
+  if (isempty (fn))
+    error ([func ": unable to find file " filename]);
   endif
 
   ## unwind_protect block because we may have a file to remove in the end
   unwind_protect
 
     ## When guessing the format to use, we first check if the second
     ## argument is a format defined in imformats.  If so, we remove it
     ## from the rest of arguments before passing them on.  If not, we
