# HG changeset patch
# User John W. Eaton <jwe@octave.org>
# Date 1412592740 14400
#      Mon Oct 06 06:52:20 2014 -0400
# Node ID ec037d41da06c67dc29b0ef28ff3371e3bbb28f6
# Parent  5d31119776236b31fe6c8a5d677cc14592e5fab8
zoom: allow x, y, and z axes to be zoomed independently

* zoom.m: Accept vector argument for zoom factor.

diff --git a/scripts/plot/util/zoom.m b/scripts/plot/util/zoom.m
--- a/scripts/plot/util/zoom.m
+++ b/scripts/plot/util/zoom.m
@@ -19,17 +19,19 @@
 ## -*- texinfo -*-
 ## @deftypefn  {Command} {} zoom (@var{factor})
 ## @deftypefnx {Command} {} zoom out
 ## @deftypefnx {Command} {} zoom reset
 ## Zoom the current axes object.
 ##
 ## Given a numeric argument greater than zero, zoom by the given factor.
 ## If the zoom factor is greater than one, zoom in on the plot.  If the
-## factor is less than one, zoom out.
+## factor is less than one, zoom out.  If the zoom factor is a two- or
+## three-element vector, then the elements specify the zoom factors for
+## the x, y, and z axes respectively.
 ##
 ## Given the option @qcode{"out"}, zoom to the initial zoom setting.
 ##
 ## Given the option @qcode{"reset"}, set the initial zoom setting to the
 ## current axes limits.
 ##
 ## @seealso{pan, rotate3d}
 ## @end deftypefn
@@ -48,17 +50,17 @@ function zoom (varargin)
   hfig = NaN;
 
   nargs = nargin;
 
   if (nargs > 2)
     print_usage ();
   endif
 
-  if (nargin == 1 && isfigure (varargin{1}))
+  if (nargin == 1 && nargout > 0 && isfigure (varargin{1}))
     error ("zoom_object_handle = zoom (hfig): not implemented");
   endif
 
   if (nargs == 2)
     hfig = varargin{1};
     if (isfigure (hfig))
       varargin(1) = [];
       nargs--;
@@ -72,29 +74,48 @@ function zoom (varargin)
   endif
 
   if (nargs == 0)
     error ("zoom: toggling zoom mode is not implemented");
   elseif (nargs == 1)
     arg = varargin{1};
     if (isnumeric (arg))
       factor = arg;
-      if (factor < 0)
+      switch (numel (factor))
+        case 3
+          xfactor = factor(1);
+          yfactor = factor(2);
+          zfactor = factor(3);
+        case 2
+          xfactor = factor(1);
+          yfactor = factor(2);
+          zfactor = 1;
+        case 1
+          xfactor = yfactor = zfactor = factor;
+        otherwise
+          error ("zoom: invalid factor");
+      endswitch
+      if (xfactor < 0 || yfactor < 0 || zfactor < 0)
         error ("zoom: factor must be greater than 1");
-      elseif (factor == 1)
+      elseif (xfactor == 1 && yfactor == 1 && zfactor == 1)
         return;
       endif
       cax = get (hfig, "currentaxes");
       if (! isempty (cax))
         limits = axis ();
         initial_zoom = getappdata (cax, "initial_zoom");
         if (isempty (initial_zoom))
           setappdata (cax, "__initial_zoom__", limits);
         endif
-        axis (cax, limits / factor);
+        limits(1:2) /= xfactor;
+        limits(3:4) /= yfactor;
+        if (numel (limits) > 4)
+          limits(5:6) /= zfactor;
+        endif
+        axis (cax, limits);
       endif
     elseif (ischar (arg))
       switch (arg)
         case {"on", "off", "xon", "yon"}
           error ("zoom %s: not implemented", arg);
 
         case "out"
           cax = get (hfig, "currentaxes");
