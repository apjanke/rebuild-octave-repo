# HG changeset patch
# User Rik <rik@octave.org>
# Date 1444254721 25200
#      Wed Oct 07 14:52:01 2015 -0700
# Branch stable
# Node ID db32862013471fe41719af13d63c158534f820e5
# Parent  1b62fc4e1b2f7a51982cd4582b49be4644726b44
doc: Add explanation of ':' optional input to numel().

* data.cc (Fnumel): Add explanation of ':' optional input.

diff --git a/libinterp/corefcn/data.cc b/libinterp/corefcn/data.cc
--- a/libinterp/corefcn/data.cc
+++ b/libinterp/corefcn/data.cc
@@ -2709,28 +2709,40 @@ Return the number of elements in the obj
 \n\
 Optionally, if indices @var{idx1}, @var{idx2}, @dots{} are supplied,\n\
 return the number of elements that would result from the indexing\n\
 \n\
 @example\n\
 @var{a}(@var{idx1}, @var{idx2}, @dots{})\n\
 @end example\n\
 \n\
-Note that the indices do not have to be numerical.  For example,\n\
+Note that the indices do not have to be scalar numbers.  For example,\n\
 \n\
 @example\n\
 @group\n\
 @var{a} = 1;\n\
 @var{b} = ones (2, 3);\n\
 numel (@var{a}, @var{b})\n\
 @end group\n\
 @end example\n\
 \n\
 @noindent\n\
 will return 6, as this is the number of ways to index with @var{b}.\n\
+Or the index could be the string @qcode{\":\"} which represents the colon\n\
+operator.  For example,\n\
+\n\
+@example\n\
+@group\n\
+@var{a} = ones (5, 3);\n\
+numel (@var{a}, 2, \":\")\n\
+@end group\n\
+@end example\n\
+\n\
+@noindent\n\
+will return 3 as the second row has three column entries.\n\
 \n\
 This method is also called when an object appears as lvalue with cs-list\n\
 indexing, i.e., @code{object@{@dots{}@}} or @code{object(@dots{}).field}.\n\
 @seealso{size}\n\
 @end deftypefn")
 {
   octave_value retval;
   octave_idx_type nargin = args.length ();
