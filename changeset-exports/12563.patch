# HG changeset patch
# User Jordi Gutiérrez Hermoso <jordigh@gmail.com>
# Date 1301648975 21600
#      Fri Apr 01 03:09:35 2011 -0600
# Node ID 681bb733f4f4212c455cfcf683ccc5393b605fe9
# Parent  c686d2be01021be4af254a44ff59f990eddfcf19
MatrixType:: plug memory leak (bug #32804).

diff --git a/liboctave/ChangeLog b/liboctave/ChangeLog
--- a/liboctave/ChangeLog
+++ b/liboctave/ChangeLog
@@ -1,8 +1,13 @@
+2011-04-01  Jordi Gutiérrez Hermoso  <jordigh@gmail.com>
+
+	* MatrixType (MatrixType::operator =): Plug memory leak due to
+	improper handling of perm array (bug #32804).
+
 2011-03-29  Rik  <octave@nomad.inbox5.com>
 
 	* Array.cc (diag): Treat empty vector (1x0 or 0x1) as valid input.
 	Improves Matlab compatibility (bug #32901).
 
 2011-02-13  David Bateman  <dbateman@free.fr>
 
 	* Sparse-perm-op-defs.h (template <typename SM>
diff --git a/liboctave/MatrixType.cc b/liboctave/MatrixType.cc
--- a/liboctave/MatrixType.cc
+++ b/liboctave/MatrixType.cc
@@ -916,24 +916,30 @@ MatrixType::operator = (const MatrixType
     {
       typ = a.typ;
       sp_bandden = a.sp_bandden;
       bandden = a.bandden;
       upper_band = a.upper_band;
       lower_band = a.lower_band;
       dense = a.dense;
       full = a.full;
-      nperm = a.nperm;
 
-      if (nperm != 0)
+      if (a.nperm != 0)
         {
-          perm = new octave_idx_type [nperm];
-          for (octave_idx_type i = 0; i < nperm; i++)
+          if (nperm)
+            {
+              delete[] perm;
+            }
+
+          perm = new octave_idx_type [a.nperm];
+          for (octave_idx_type i = 0; i < a.nperm; i++)
             perm[i] = a.perm[i];
         }
+
+      nperm = a.nperm;
     }
 
   return *this;
 }
 
 int
 MatrixType::type (bool quiet)
 {
