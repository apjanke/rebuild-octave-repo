# HG changeset patch
# User Ben Abbott  <bpabbott@mac.com>
# Date 1296256695 18000
#      Fri Jan 28 18:18:15 2011 -0500
# Node ID 3fc07861449bbaeb95354c177a03fa24c5cde5ea
# Parent  30ca5a0b0e2fe9c4f45b0670da0e000756700491
Fix {eps,ps,pdf}latexstandalone printing for fltk, bug 32262.

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,13 @@
+2011-01-28  Ben Abbott  <bpabbott@mac.com>
+
+	* plot/__fltk_print__.m, plot/print.m: Fix {eps,ps,pdf}latexstandalone
+	printing for fltk, bug 32262.
+
 2011-01-28  John W. Eaton  <jwe@octave.org>
 
 	* sparse/svds.m: Use "test" instead of "testif HAVE_ARPACK".
 
 2011-01-27  Rik  <octave@nomad.inbox5.com>
 
 	* plot/whitebg.m: Improve docstring.
 
diff --git a/scripts/plot/__fltk_print__.m b/scripts/plot/__fltk_print__.m
--- a/scripts/plot/__fltk_print__.m
+++ b/scripts/plot/__fltk_print__.m
@@ -60,20 +60,21 @@ function opts = __fltk_print__ (opts)
         suffix = opts.name(dot+1:end);
       endif
     elseif (dot == numel (opts.name))
       name = opts.name;
     endif
     gl2ps_device = {sprintf("%snotxt", lower (suffix))};
     gl2ps_device{2} = "tex";
     if (dos_shell)
-      pipeline = {sprintf("copy con %s.%s", name, suffix)};
-      pipeline{2} = sprintf ("copy con %s.tex", name);
+      ## FIXME - this will only work on MinGW with the MSYS shell
+      pipeline = {sprintf("cat > %s-inc.%s", name, suffix)};
+      pipeline{2} = sprintf ("cat > %s.tex", name);
     else
-      pipeline = {sprintf("cat > %s.%s", name, suffix)};
+      pipeline = {sprintf("cat > %s-inc.%s", name, suffix)};
       pipeline{2} = sprintf ("cat > %s.tex", name);
     endif
   case "tikz"
     ## format GL2PS_PGF
     gl2ps_device = {"pgf"};
     pipeline = {sprintf("cat > %s", opts.name)};
   case "svg"
     ## format GL2PS_SVG
@@ -156,10 +157,14 @@ function opts = __fltk_print__ (opts)
     unwind_protect
       drawnow (gl2ps_device{n} , sprintf ("%d" , pid));
       waitpid (pid);
     unwind_protect_cleanup
       pclose (pid);
     end_unwind_protect
   endfor
 
+  if (! isempty (strfind (opts.devopt, "standalone")))
+    opts.latex_standalone (opts);
+  endif
+
 endfunction
 
diff --git a/scripts/plot/print.m b/scripts/plot/print.m
--- a/scripts/plot/print.m
+++ b/scripts/plot/print.m
@@ -572,30 +572,52 @@ function cmd = fig2dev (opts, devopt)
   elseif (isempty (opts.fig2dev_binary))
     error ("print:nofig2dev", "print.m: 'fig2dev' not found in PATH");
   endif
   if (opts.debug)
     fprintf ("fig2dev command: '%s'\n", cmd);
   endif
 endfunction
 
-function latex_standalone (latexfile)
+function latex_standalone (opts)
+  n = find (opts.name == ".", 1, "last");
+  if (! isempty (n))
+    opts.name = opts.name(1:n-1);
+  endif
+  latexfile = strcat (opts.name, ".tex");
+  switch opts.devopt
+  case {"pdflatexstandalone"}
+    packages = "\\usepackage{graphicx,color}";
+    graphicsfile = strcat (opts.name, "-inc.pdf");
+  case {"pslatexstandalone"}
+    packages = "\\usepackage{epsfig,color}";
+    graphicsfile = strcat (opts.name, "-inc.ps");
+  otherwise
+    packages = "\\usepackage{epsfig,color}";
+    graphicsfile = strcat (opts.name, "-inc.eps");
+  endswitch
+  papersize = sprintf ("\\usepackage[papersize={%.2fbp,%.2fbp},text={%.2fbp,%.2fbp}]{geometry}",
+                       opts.canvas_size, opts.canvas_size);
   prepend = {"\\documentclass{minimal}";
-             "\\usepackage{epsfig,color}";
+             packages;
+             papersize;
              "\\begin{document}";
              "\\centering"};
   postpend = {"\\end{document}"};
   fid = fopen (latexfile, "r");
   if (fid >= 0)
     latex = fscanf (fid, "%c", Inf);
     status = fclose (fid);
     if (status != 0)
       error ("print:errorclosingfile",
              "print.m: error closing file '%s'", latexfile);
     endif
+    ## TODO - should this be fixed in GL2PS?
+    latex = strrep (latex, "\\includegraphics{}", 
+                    sprintf ("\\includegraphics{%s}", graphicsfile));
   else
     error ("print:erroropeningfile",
            "print.m: error opening file '%s'", latexfile);
   endif
   fid = fopen (latexfile, "w");
   if (fid >= 0)
     fprintf (fid, "%s\n", prepend{:});
     fprintf (fid, "%s", latex);
