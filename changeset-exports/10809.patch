# HG changeset patch
# User Shai Ayal <shaiay@users.sourceforge.net>
# Date 1279643477 -10800
#      Tue Jul 20 19:31:17 2010 +0300
# Node ID 85cbd239fce2d856cee13b8797d102f1d112d818
# Parent  b988a45b60052f3f4c07ddf424b359093f1004a7
try a better status bar for fltk backend

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,8 +1,13 @@
+2010-07-20  Shai Ayal  <shaiay@users.sourceforge.net>
+
+	* DLD-FUNCTIONS/fltk_backend.cc (plot_window::plot_window):
+	Added a bottom Fl_Box (copied from gmsh) and tooltips
+
 2010-07-20  Rik <octave@nomad.inbox5.com>
 
 	* DLD-FUNCTIONS/typecast.cc (typecast): Combine two @seealso macro
 	uses to one.
 
 2010-07-20  Jaroslav Hajek  <highegg@gmail.com>
 
 	* DLD-FUNCTIONS/dlmread.cc (Fdlmread): Use octave_idx_type instead of
diff --git a/src/DLD-FUNCTIONS/fltk_backend.cc b/src/DLD-FUNCTIONS/fltk_backend.cc
--- a/src/DLD-FUNCTIONS/fltk_backend.cc
+++ b/src/DLD-FUNCTIONS/fltk_backend.cc
@@ -39,16 +39,17 @@ To initialize:
 #include <set>
 #include <sstream>
 #include <iostream>
 
 #include <FL/Fl.H>
 #include <FL/Fl_Window.H>
 #include <FL/Fl_Output.H>
 #include <FL/Fl_Button.H>
+#include <FL/Fl_Box.H>
 #include <FL/Fl_Gl_Window.H>
 #include <FL/fl_ask.H>
 #include <FL/fl_draw.H>
 #include <FL/gl.h>
 
 #include "cmd-edit.h"
 #include "lo-ieee.h"
 
@@ -225,55 +226,67 @@ public:
   {
     callback (window_close, static_cast<void*> (this));
 
     begin ();
     {
       canvas = new
         OpenGL_fltk (0, 0, ww , hh - status_h, number ());
 
+      bottom = new 
+        Fl_Box (0, 
+                hh - status_h, 
+                ww, 
+                status_h);
+      bottom->box(FL_FLAT_BOX);
+      
       autoscale = new
         Fl_Button (0,
                    hh - status_h,
                    status_h,
                    status_h,
                    "A");
       autoscale->callback (button_callback, static_cast<void*> (this));
+      autoscale->tooltip ("Autoscale");
 
       togglegrid = new
         Fl_Button (status_h,
                    hh - status_h,
                    status_h,
                    status_h,
                    "G");
       togglegrid->callback (button_callback, static_cast<void*> (this));
+      togglegrid->tooltip ("Toggle Grid");
 
       panzoom = new
         Fl_Button (2 * status_h,
                    hh - status_h,
                    status_h,
                    status_h,
                    "P");
       panzoom->callback (button_callback, static_cast<void*> (this));
+      panzoom->tooltip ("Mouse Pan/Zoom");
       
       rotate = new
         Fl_Button (3 * status_h,
                    hh - status_h,
                    status_h,
                    status_h,
                    "R");
       rotate->callback (button_callback, static_cast<void*> (this));
-      
+      rotate->tooltip ("Mouse Rotate");
+
       help = new
         Fl_Button (4 * status_h,
                    hh - status_h,
                    status_h,
                    status_h,
                    "?");
       help->callback (button_callback, static_cast<void*> (this));
+      help->tooltip ("Help");
 
       status = new
         Fl_Output (5 * status_h,
                    hh - status_h,
                    ww > 2*status_h ? ww - status_h : 0,
                    status_h, "");
 
       status->textcolor (FL_BLACK);
@@ -384,16 +397,17 @@ private:
     if (widg == rotate)
       gui_mode = rotate_zoom;
 
     if (widg == help)
       fl_message ("%s", help_text);
   }
 
   OpenGL_fltk* canvas;
+  Fl_Box*    bottom;
   Fl_Button* autoscale;
   Fl_Button* togglegrid;
   Fl_Button* panzoom;
   Fl_Button* rotate;
   Fl_Button* help;
   Fl_Output* status;
 
   void axis_auto (void)
