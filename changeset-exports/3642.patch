# HG changeset patch
# User jwe
# Date 953894928 0
#      Fri Mar 24 10:48:48 2000 +0000
# Node ID 3843aa0767c8be247c619f807159e1ebfb14e0ff
# Parent  5ac1b0cb4fe8901ab34e4f9821f447a2be3233a3
[project @ 2000-03-24 10:48:48 by jwe]

diff --git a/src/ChangeLog b/src/ChangeLog
--- a/src/ChangeLog
+++ b/src/ChangeLog
@@ -1,10 +1,13 @@
 2000-03-24  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
+	* c-file-ptr-stream.cc (c_file_ptr_buf::~c_file_ptr_buf):
+	Avoid dereferencing NULL pointer.
+
 	* oct-stream.cc (printf_format_list::add_elt_to_list,
 	printf_format_list::process_conversion,
 	printf_format_list::finish_conversion): New args, flags, fw, and prec.
 	(printf_format_list::printf_format_list): Save more complete info.
 	(printf_format_list::printme): Print flags, fw, and prec.
 	(octave_base_stream::printf): Simplify.
 	(do_printf_conv): Delete have_arg arg, since it is always true now.
 	(octave_base_stream::do_printf): Handle case of no args and %
diff --git a/src/c-file-ptr-stream.cc b/src/c-file-ptr-stream.cc
--- a/src/c-file-ptr-stream.cc
+++ b/src/c-file-ptr-stream.cc
@@ -37,17 +37,21 @@ Software Foundation, 59 Temple Place - S
 #ifndef SEEK_CUR
 #define SEEK_CUR 1
 #endif
 
 #ifndef SEEK_END
 #define SEEK_END 2
 #endif
 
-c_file_ptr_buf::~c_file_ptr_buf (void) { fflush (f); }
+c_file_ptr_buf::~c_file_ptr_buf (void)
+{
+  if (f)
+    fflush (f);
+}
 
 // XXX FIXME XXX -- I'm sure there is room for improvement here...
 
 int
 c_file_ptr_buf::overflow (int c)
 {
   return (c != EOF) ? fputc (c, f) : fflush (f);
 }
diff --git a/src/oct-stream.h b/src/oct-stream.h
--- a/src/oct-stream.h
+++ b/src/oct-stream.h
@@ -143,17 +143,17 @@ public:
   operator bool () const { return ok (); }
 
   bool all_character_conversions (void);
 
   bool all_numeric_conversions (void);
 
 private:
 
-  // Number of conversions specified by this format std::string, or -1 if
+  // Number of conversions specified by this format string, or -1 if
   // invalid conversions have been found.
   int nconv;
 
   // Index to current element;
   int curr_idx;
 
   // List of format elements.
   Array<scanf_format_elt*> list;
@@ -220,17 +220,17 @@ public:
 
   // Field width.
   int fw;
 
   // Precision.
   int prec;
 
   // Flags -- `-', `+', ` ', `0', or `#'.
-  string flags;
+  std::string flags;
 
   // Type of conversion -- `d', `i', `o', `x', `X', `u', `c', `s',
   // `f', `e', `E', `g', `G', `p', or `%'
   char type;
 
   // A length modifier -- `h', `l', or `L'.
   char modifier;
 };
@@ -275,17 +275,17 @@ public:
   void printme (void) const;
 
   bool ok (void) const { return (nconv >= 0); }
 
   operator bool () const { return ok (); }
 
 private:
 
-  // Number of conversions specified by this format std::string, or -1 if
+  // Number of conversions specified by this format string, or -1 if
   // invalid conversions have been found.
   int nconv;
 
   // Index to current element;
   int curr_idx;
 
   // List of format elements.
   Array<printf_format_elt*> list;
