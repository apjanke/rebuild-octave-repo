# HG changeset patch
# User jwe
# Date 1045808568 0
#      Fri Feb 21 06:22:48 2003 +0000
# Node ID 05415e529cef5dc854020a710cc0f8ae452091a5
# Parent  024ef171aec3dbd21cd7a7e6d4519485d32fce9c
[project @ 2003-02-21 06:22:48 by jwe]

diff --git a/scripts/ChangeLog b/scripts/ChangeLog
--- a/scripts/ChangeLog
+++ b/scripts/ChangeLog
@@ -1,8 +1,17 @@
+2003-02-20  John W. Eaton  <jwe@bevo.che.wisc.edu>
+
+	* statistics/tests/kolmogorov_smirnov_test.m: Use str2func to make
+	function handle to pass to feval.
+	* statistics/base/qqplot.m: Likewise.
+	* statistics/base/ppplot.m: Likewise.
+	* signal/spectral_xdf.m: Likewise.
+	* signal/spectral_adf.m: Likewise.
+
 2003-02-19  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* plot/axis.m: Avoid whitespace in literal matrix problem.
 
 2003-02-18  John W. Eaton  <jwe@bevo.che.wisc.edu>
 
 	* linear-algebra/logm.m: New file.
 
diff --git a/scripts/signal/spectral_adf.m b/scripts/signal/spectral_adf.m
--- a/scripts/signal/spectral_adf.m
+++ b/scripts/signal/spectral_adf.m
@@ -43,17 +43,17 @@ function retval = spectral_adf (c, win, 
 
   if (nargin < 3)
     b = 1 / ceil (sqrt (cr));
   endif
 
   if (nargin == 1)
     w = triangle_lw (cr, b);
   else
-    win = [win, "_lw"];
+    win = str2func (strcat (win, "_lw"));
     w = feval (win, cr, b);
   endif
 
   c = c .* w;
 
   retval = 2 * real (fft (c)) - c(1);
   retval = [(zeros (cr, 1)), retval];
   retval(:, 1) = (0 : cr-1)' / cr;
diff --git a/scripts/signal/spectral_xdf.m b/scripts/signal/spectral_xdf.m
--- a/scripts/signal/spectral_xdf.m
+++ b/scripts/signal/spectral_xdf.m
@@ -42,17 +42,17 @@ function retval = spectral_xdf (X, win, 
 
   if (nargin < 3)
     b = 1 / ceil (sqrt (xr));
   endif
 
   if (nargin == 1)
     w = triangle_sw (xr, b);
   else
-    win = [win, "_sw"];
+    win = str2func (strcat (win, "_sw"));
     w = feval (win, xr, b);
   endif
 
   X = X - sum (X) / xr;
 
   retval = (abs (fft (X)) / xr).^2;
   retval = real (ifft (fft(retval) .* fft(w)));
 
diff --git a/scripts/statistics/base/ppplot.m b/scripts/statistics/base/ppplot.m
--- a/scripts/statistics/base/ppplot.m
+++ b/scripts/statistics/base/ppplot.m
@@ -52,19 +52,19 @@ function [p, y] = ppplot (x, dist, varar
   if (! isvector (x))
     error ("ppplot: x must be a vector");
   endif
 
   s = sort (x);
   n = length (x);
   p = ((1 : n)' - 0.5) / n;
   if (nargin == 1)
-    F = "stdnormal_cdf";
+    F = @stdnormal_cdf;
   else
-    F = sprintf ("%s_cdf", dist);
+    F = str2func (sprintf ("%s_cdf", dist));
   endif;
   if (nargin <= 2)
     y = feval (F, s);
   else
     y = feval (F, s, varargin{:});
   endif
 
   if (nargout == 0)
diff --git a/scripts/statistics/base/qqplot.m b/scripts/statistics/base/qqplot.m
--- a/scripts/statistics/base/qqplot.m
+++ b/scripts/statistics/base/qqplot.m
@@ -54,30 +54,30 @@ function [q, s] = qqplot (x, dist, varar
   if (! (isvector(x)))
     error ("qqplot: x must be a vector");
   endif
 
   s = sort (x);
   n = length (x);
   t = ((1 : n)' - .5) / n;
   if (nargin == 1)
-    f = "stdnormal_inv";
+    f = @stdnormal_inv;
   else
-    f = sprintf ("%s_inv", dist);
+    f = str2func (sprintf ("%s_inv", dist));
   endif;
   if (nargin <= 2)
     q = feval (f, t);
-    q_label = f;
+    q_label = func2str (f);
   else
     param_string = sprintf ("%g", varargin{1});
     for k = 2 : (nargin - 2);
       param_string = sprintf ("%s, %g", param_string, varargin{k})
     endfor
     q = eval (sprintf ("%s (t, %s);", f, param_string));
-    q_label = sprintf ("%s with parameter(s) %s", f, param_string);
+    q_label = sprintf ("%s with parameter(s) %s", func2str (f), param_string);
   endif
 
   if (nargout == 0)
     xlabel (q_label);
     ylabel ("sample points");
     gset nokey;
     plot (q, s);
   endif
diff --git a/scripts/statistics/tests/kolmogorov_smirnov_test.m b/scripts/statistics/tests/kolmogorov_smirnov_test.m
--- a/scripts/statistics/tests/kolmogorov_smirnov_test.m
+++ b/scripts/statistics/tests/kolmogorov_smirnov_test.m
@@ -57,17 +57,17 @@ function [pval, ks] = kolmogorov_smirnov
   endif
 
   if (! isvector (x))
     error ("kolmogorov_smirnov_test: x must be a vector");
   endif
 
   n = length (x);
   s = sort (x);
-  f = sprintf ("%s_cdf", dist);
+  f = str2func (sprintf ("%s_cdf", dist));
 
   alt  = "!=";
 
   if (nargin == 2)
     z = reshape (feval (f, s), 1, n);
   else
     args = "";
     for k = 1 : (nargin-2);
